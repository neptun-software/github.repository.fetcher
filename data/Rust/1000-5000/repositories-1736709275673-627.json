{
  "metadata": {
    "timestamp": 1736709275673,
    "page": 627,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjYzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "pop-os/cosmic-text",
      "stars": 1674,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.08203125,
          "content": "*.png filter=lfs diff=lfs merge=lfs -text\n*.ttf filter=lfs diff=lfs merge=lfs -text\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.04296875,
          "content": "Cargo.lock\nsample/udhr*\ntarget\n**/.DS_Store\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 6.0634765625,
          "content": "# Changelog\n\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n\n## [0.12.1] - 2024-06-31\n\n### Changed\n\n- Make collection of monospace fallback information optional\n\n## [0.12.0] - 2024-06-18\n\n### Added\n\n- Cache codepoint support info for monospace fonts\n- Store a sorted list of monospace font ids in font system\n- Add line ending abstraction\n- Horizontal scroll support in Buffer\n- Concurrently load and parse fonts\n- Add metrics to attributes\n- Support expanding tabs\n- Add an option to set selected text color\n- Add Edit::cursor_position\n- Allow layout to be calculated without specifying width\n- Allow for undefined buffer width and/or height\n- Add method to set syntax highlighting by file extension\n\n### Fixed\n\n- Fix no_std build\n- Handle inverted Ranges in add_span\n- Fix undo and redo updating editor modified status\n- Ensure at least one line is in Buffer\n\n### Changed\n\n- Enable vi feature for docs.rs build\n- Convert editor example to winit\n- Refactor scrollbar width handling for editor example\n- Convert rich-text example to winit\n- Only try monospace fonts that support at least one requested script\n- Skip trying monospace fallbacks if default font supports all codepoints\n- Make vertical scroll by pixels instead of layout lines\n- Upgrade dependencies and re-export ttf-parser\n\n## [0.11.2] - 2024-02-08\n\n### Fixed\n\n- Fix glyph start and end when using `shape-run-cache`\n\n## [0.11.1] - 2024-02-08\n\n### Added\n\n- Add `shape-run-cache` feature, that can significantly improve shaping performance\n\n### Removed\n\n- Remove editor-libcosmic, see cosmic-edit instead\n\n## [0.11.0] - 2024-02-07\n\n### Added\n\n- Add function to set metrics and size simultaneously\n- Cache `rustybuzz` shape plans\n- Add capability to synthesize italic\n- New wrapping option `WordOrGlyph` to allow word to glyph fallback\n\n### Fixed\n\n- `Buffer::set_rich_text`: Only add attrs if they do not match the defaults\n- Do not use Emoji fonts as monospace fallback\n- Refresh the attrs more often in basic shaping\n- `Buffer`: fix max scroll going one line beyond end\n- Improve reliability of `layout_cursor`\n- Handle multiple BiDi paragraphs in `ShapeLine` gracefully\n- Improved monospace font fallback\n- Only commit a previous word range if we had an existing visual line\n\n### Changed\n\n- Update terminal example using `colored`\n- Significant improvements for `Editor`, `SyntaxEditor`, and `ViEditor`\n- Require default Attrs to be specified in `Buffer::set_rich_text`\n- Bump `fontdb` to `0.16`\n- Allow Clone of layout structs\n- Move cursor motions to new `Motion` enum, move handling to `Buffer`\n- Ensure that all shaping and layout uses scratch buffer\n- `BufferLine`: user `layout_in_buffer` to implement layout\n- `BufferLine`: remove wrap from struct, as wrap is passed to layout\n- Refactor of scroll and shaping\n- Move `color` and `x_opt` out of Cursor\n- Add size limit to `font_matches_cache` and clear it when it is reached\n- Update `swash` to `0.1.12`\n- Set default buffer wrap to `WordOrGlyph`\n\n## Removed\n- Remove patch to load Redox system fonts, as fontdb does it now\n\n## [0.10.0] - 2023-10-19\n\n### Added\n\n- Added `Buffer::set_rich_text` method\n- Add `Align::End` for end-based alignment\n- Add more `Debug` implementations\n- Add feature to warn on missing glyphs\n- Add easy conversions for tuples/arrays for `Color`\n- Derive `Clone` for `AttrsList`\n- Add feature to allow `fontdb` to get `fontconfig` information\n- Add benchmarks to accurately gauge improvements\n- Add image render tests\n- Allow BSD-2-Clause and BSD-3-Clause licneses in cargo-deny\n\n### Fixed\n\n- Fix `no_std` build\n- Fix `BufferLine::set_align` docs to not mention shape reset is performed\n- Fix width computed during unconstrained layout and add test for it\n- Set `cursor_moved` to true in `Editor::insert_string`\n- Fix `NextWord` action in `Editor` when line ends with word boundaries\n- Fix building `editor-libcosmic` with `vi` feature\n- Respect `fontconfig` font aliases when enabled\n- Fix rendering of RTL words\n\n### Changed\n\n- Unify `no_std` and `std` impls of `FontSystem`\n- Move `hashbrown` behind `no_std` feature\n- Require either `std` or `no_std` feature to be specified\n- Use a scratch buffer to reduce allocations\n- Enable `std` feature with `fontconfig` feature\n- Enable `fontconfig` feature by default\n- Refactor code in `ShapeLine::layout`\n- Set MSRV to `1.65`\n- Make `Edit::copy_selection` immutable\n- Rewrite `PreviousWord` logic in `Editor` with iterators\n- Use attributes at cursor position for insertions in `Editor`\n- Update all dependencies\n- Use `self_cell` for creating self-referential struct\n\n## [0.9.0] - 2023-07-06\n\n### Added\n\n- Add `Shaping` enum to allow selecting the shaping strategy\n- Add `Buffer::new_empty` to create `Buffer` without `FontSystem`\n- Add `BidiParagraphs` iterator\n- Allow setting `Cursor` color\n- Allow setting `Editor` cursor\n- Add `PhysicalGlyph` that allows computing `CacheKey` after layout\n- Add light syntax highlighter to `libcosmic` example\n\n### Fixed\n\n- Fix WebAssembly support\n- Fix alignment when not wrapping\n- Fallback to monospaced font if Monospace family is not found\n- Align glyphs in a `LayoutRun` to baseline\n\n### Changed\n\n- Update `fontdb` to 0.14.1\n- Replace ouroboros with aliasable\n- Use `BidiParagraphs` iterator instead of `str::Lines`\n- Update `libcosmic` version\n\n### Removed\n\n- `LayoutGlyph` no longer has `x_int` and `y_int`, use `PhysicalGlyph` instead\n\n## [0.8.0] - 2023-04-03\n\n### Added\n\n- `FontSystem::new_with_fonts` helper\n- Alignment and justification\n- `FontSystem::db_mut` provides mutable access to `fontdb` database\n- `rustybuzz` is re-exported\n\n### Fixed\n\n- Fix some divide by zero panics\n- Redox now uses `std` `FontSystem`\n- Layout system improvements\n- `BufferLinke::set_text` has been made more efficient\n- Fix potential panic on window resize\n\n### Changed\n\n- Use `f32` instead of `i32` for lengths\n- `FontSystem` no longer self-referencing\n- `SwashCash` no longer keeps reference to `FontSystem`\n\n### Removed\n\n- `Attrs::monospaced` is removed, use `Family::Monospace` instead\n"
        },
        {
          "name": "Cargo.toml",
          "type": "blob",
          "size": 2.068359375,
          "content": "[package]\nname = \"cosmic-text\"\ndescription = \"Pure Rust multi-line text handling\"\nversion = \"0.12.1\"\nauthors = [\"Jeremy Soller <jeremy@system76.com>\"]\nedition = \"2021\"\nlicense = \"MIT OR Apache-2.0\"\ndocumentation = \"https://docs.rs/cosmic-text/latest/cosmic_text/\"\nrepository = \"https://github.com/pop-os/cosmic-text\"\nrust-version = \"1.65\"\n\n[dependencies]\nbitflags = \"2.4.1\"\ncosmic_undo_2 = { version = \"0.2.0\", optional = true }\nfontdb = { version = \"0.16\", default-features = false }\nhashbrown = { version = \"0.14.1\", optional = true, default-features = false }\nlibm = { version = \"0.2.8\", optional = true }\nlog = \"0.4.20\"\nmodit = { version = \"0.1.4\", optional = true }\nrangemap = \"1.4.0\"\nrustc-hash = { version = \"1.1.0\", default-features = false }\nrustybuzz = { version = \"0.14\", default-features = false, features = [\"libm\"] }\nself_cell = \"1.0.1\"\nsmol_str = { version = \"0.2.2\", default-features = false }\nsyntect = { version = \"5.1.0\", optional = true }\nsys-locale = { version = \"0.3.1\", optional = true }\nttf-parser = { version = \"0.21\", default-features = false }\nunicode-linebreak = \"0.1.5\"\nunicode-script = \"0.5.5\"\nunicode-segmentation = \"1.10.1\"\n\n[dependencies.swash]\nversion = \"0.2.0\"\ndefault-features = false\nfeatures = [\"render\", \"scale\"]\noptional = true\n\n[dependencies.unicode-bidi]\nversion = \"0.3.13\"\ndefault-features = false\nfeatures = [\"hardcoded-data\"]\n\n[features]\ndefault = [\"std\", \"swash\", \"fontconfig\"]\nfontconfig = [\"fontdb/fontconfig\", \"std\"]\nmonospace_fallback = []\nno_std = [\"rustybuzz/libm\", \"hashbrown\", \"dep:libm\"]\nshape-run-cache = []\nstd = [\n    \"fontdb/memmap\",\n    \"fontdb/std\",\n    \"rustybuzz/std\",\n    \"swash?/std\",\n    \"sys-locale\",\n    \"ttf-parser/std\",\n    \"unicode-bidi/std\",\n]\nvi = [\"modit\", \"syntect\", \"cosmic_undo_2\"]\nwasm-web = [\"sys-locale?/js\"]\nwarn_on_missing_glyphs = []\n\n[[bench]]\nname = \"layout\"\nharness = false\n\n[workspace]\nmembers = [\"examples/*\"]\n\n[dev-dependencies]\ntiny-skia = \"0.11.2\"\ncriterion = { version = \"0.5.1\", default-features = false, features = [\n    \"cargo_bench_support\",\n] }\n\n[profile.test]\nopt-level = 1\n\n[package.metadata.docs.rs]\nfeatures = [\"vi\"]\n"
        },
        {
          "name": "LICENSE-APACHE",
          "type": "blob",
          "size": 11.0908203125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "LICENSE-MIT",
          "type": "blob",
          "size": 1.0498046875,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2022 System76\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.5419921875,
          "content": "# COSMIC Text\n\n[![crates.io](https://img.shields.io/crates/v/cosmic-text.svg)](https://crates.io/crates/cosmic-text)\n[![docs.rs](https://docs.rs/cosmic-text/badge.svg)](https://docs.rs/cosmic-text)\n![license](https://img.shields.io/crates/l/cosmic-text.svg)\n[![Rust workflow](https://github.com/pop-os/cosmic-text/workflows/Rust/badge.svg?event=push)](https://github.com/pop-os/cosmic-text/actions)\n\nPure Rust multi-line text handling.\n\nCOSMIC Text provides advanced text shaping, layout, and rendering wrapped up\ninto a simple abstraction. Shaping is provided by rustybuzz, and supports a\nwide variety of advanced shaping operations. Rendering is provided by swash,\nwhich supports ligatures and color emoji. Layout is implemented custom, in safe\nRust, and supports bidirectional text. Font fallback is also a custom\nimplementation, reusing some of the static fallback lists in browsers such as\nChromium and Firefox. Linux, macOS, and Windows are supported with the full\nfeature set. Other platforms may need to implement font fallback capabilities.\n\n## Screenshots\n\nArabic translation of Universal Declaration of Human Rights\n[![Arabic screenshot](screenshots/arabic.png)](screenshots/arabic.png)\n\nHindi translation of Universal Declaration of Human Rights\n[![Hindi screenshot](screenshots/hindi.png)](screenshots/hindi.png)\n\nSimplified Chinese translation of Universal Declaration of Human Rights\n[![Simplified Chinses screenshot](screenshots/chinese-simplified.png)](screenshots/chinese-simplified.png)\n\n## Roadmap\n\nThe following features must be supported before this is \"ready\":\n\n- [x] Font loading (using fontdb)\n  - [x] Preset fonts\n  - [x] System fonts\n- [x] Text styles (bold, italic, etc.)\n  - [x] Per-buffer\n  - [x] Per-span\n- [x] Font shaping (using rustybuzz)\n  - [x] Cache results\n  - [x] RTL\n  - [x] Bidirectional rendering\n- [x] Font fallback\n  - [x] Choose font based on locale to work around \"unification\"\n  - [x] Per-line granularity\n  - [x] Per-character granularity\n- [x] Font layout\n  - [x] Click detection\n  - [x] Simple wrapping\n  - [ ] Wrapping with indentation\n  - [ ] No wrapping\n  - [ ] Ellipsize\n- [x] Font rendering (using swash)\n  - [x] Cache results\n  - [x] Font hinting\n  - [x] Ligatures\n  - [x] Color emoji\n- [x] Text editing\n    - [x] Performance improvements\n    - [x] Text selection\n    - [x] Can automatically recreate https://unicode.org/udhr/ without errors (see below)\n    - [x] Bidirectional selection\n    - [ ] Copy/paste\n- [x] no_std support (with `default-features = false`)\n    - [ ] no_std font loading\n    - [x] no_std shaping\n    - [x] no_std layout\n    - [ ] no_std rendering\n\nThe UDHR (Universal Declaration of Human Rights) test involves taking the entire\nset of UDHR translations (almost 500 languages), concatenating them as one file\n(which ends up being 8 megabytes!), then via the `editor-test` example,\nautomatically simulating the entry of that file into cosmic-text per-character,\nwith the use of backspace and delete tested per character and per line. Then,\nthe final contents of the buffer is compared to the original file. All of the\n106746 lines are correct.\n\n## License\n\nLicensed under either of\n\n * Apache License, Version 2.0, ([LICENSE-APACHE](LICENSE-APACHE) or\n   http://www.apache.org/licenses/LICENSE-2.0)\n * MIT license ([LICENSE-MIT](LICENSE-MIT) or\n   http://opensource.org/licenses/MIT)\n\nat your option.\n\n### Contribution\n\nUnless you explicitly state otherwise, any contribution intentionally submitted\nfor inclusion in the work by you, as defined in the Apache-2.0 license, shall be\ndual licensed as above, without any additional terms or conditions.\n"
        },
        {
          "name": "benches",
          "type": "tree",
          "content": null
        },
        {
          "name": "ci.sh",
          "type": "blob",
          "size": 0.8828125,
          "content": "#!/usr/bin/env bash\n\nfunction build {\n    cargo build --release \"$@\"\n    cargo clippy --no-deps \"$@\"\n}\n\nset -ex\n\necho Check formatting\ncargo fmt --check\n\necho Build with default features\nbuild\n\necho Install target for no_std build\n# This is necessary because Rust otherwise may silently use std regardless.\nrustup target add thumbv8m.main-none-eabihf\n\necho Build with only no_std feature\nbuild --no-default-features --features no_std --target thumbv8m.main-none-eabihf\n\necho Build with only std feature\nbuild --no-default-features --features std\n\necho Build with only std and swash features\nbuild --no-default-features --features std,swash\n\necho Build with only std and syntect features\nbuild --no-default-features --features std,syntect\n\necho Build with only std and vi features\nbuild --no-default-features --features std,vi\n\necho Build with all features\nbuild --all-features\n\necho Run tests\ncargo test\n"
        },
        {
          "name": "deny.toml",
          "type": "blob",
          "size": 11.869140625,
          "content": "# This template contains all of the possible sections and their default values\n\n# Note that all fields that take a lint level have these possible values:\n# * deny - An error will be produced and the check will fail\n# * warn - A warning will be produced, but the check will not fail\n# * allow - No warning or error will be produced, though in some cases a note\n# will be\n\n# The values provided in this template are the default values that will be used\n# when any section or field is not specified in your own configuration\n\n# Root options\n\n# If 1 or more target triples (and optionally, target_features) are specified,\n# only the specified targets will be checked when running `cargo deny check`.\n# This means, if a particular package is only ever used as a target specific\n# dependency, such as, for example, the `nix` crate only being used via the\n# `target_family = \"unix\"` configuration, that only having windows targets in\n# this list would mean the nix crate, as well as any of its exclusive\n# dependencies not shared by any other crates, would be ignored, as the target\n# list here is effectively saying which targets you are building for.\ntargets = [\n    # The triple can be any string, but only the target triples built in to\n    # rustc (as of 1.40) can be checked against actual config expressions\n    #{ triple = \"x86_64-unknown-linux-musl\" },\n    # You can also specify which target_features you promise are enabled for a\n    # particular target. target_features are currently not validated against\n    # the actual valid features supported by the target architecture.\n    #{ triple = \"wasm32-unknown-unknown\", features = [\"atomics\"] },\n]\n# When creating the dependency graph used as the source of truth when checks are\n# executed, this field can be used to prune crates from the graph, removing them\n# from the view of cargo-deny. This is an extremely heavy hammer, as if a crate\n# is pruned from the graph, all of its dependencies will also be pruned unless\n# they are connected to another crate in the graph that hasn't been pruned,\n# so it should be used with care. The identifiers are [Package ID Specifications]\n# (https://doc.rust-lang.org/cargo/reference/pkgid-spec.html)\n#exclude = []\n# If true, metadata will be collected with `--all-features`. Note that this can't\n# be toggled off if true, if you want to conditionally enable `--all-features` it\n# is recommended to pass `--all-features` on the cmd line instead\nall-features = false\n# If true, metadata will be collected with `--no-default-features`. The same\n# caveat with `all-features` applies\nno-default-features = true\n# If set, these feature will be enabled when collecting metadata. If `--features`\n# is specified on the cmd line they will take precedence over this option.\n#features = []\n# When outputting inclusion graphs in diagnostics that include features, this\n# option can be used to specify the depth at which feature edges will be added.\n# This option is included since the graphs can be quite large and the addition\n# of features from the crate(s) to all of the graph roots can be far too verbose.\n# This option can be overridden via `--feature-depth` on the cmd line\nfeature-depth = 1\n\n# This section is considered when running `cargo deny check advisories`\n# More documentation for the advisories section can be found here:\n# https://embarkstudios.github.io/cargo-deny/checks/advisories/cfg.html\n[advisories]\n# The path where the advisory database is cloned/fetched into\ndb-path = \"~/.cargo/advisory-db\"\n# The url(s) of the advisory databases to use\ndb-urls = [\"https://github.com/rustsec/advisory-db\"]\n# The lint level for security vulnerabilities\nvulnerability = \"deny\"\n# The lint level for unmaintained crates\nunmaintained = \"warn\"\n# The lint level for crates that have been yanked from their source registry\nyanked = \"warn\"\n# The lint level for crates with security notices. Note that as of\n# 2019-12-17 there are no security notice advisories in\n# https://github.com/rustsec/advisory-db\nnotice = \"warn\"\n# A list of advisory IDs to ignore. Note that ignored advisories will still\n# output a note when they are encountered.\nignore = []\n# Threshold for security vulnerabilities, any vulnerability with a CVSS score\n# lower than the range specified will be ignored. Note that ignored advisories\n# will still output a note when they are encountered.\n# * None - CVSS Score 0.0\n# * Low - CVSS Score 0.1 - 3.9\n# * Medium - CVSS Score 4.0 - 6.9\n# * High - CVSS Score 7.0 - 8.9\n# * Critical - CVSS Score 9.0 - 10.0\n#severity-threshold =\n\n# If this is true, then cargo deny will use the git executable to fetch advisory database.\n# If this is false, then it uses a built-in git library.\n# Setting this to true can be helpful if you have special authentication requirements that cargo-deny does not support.\n# See Git Authentication for more information about setting up git authentication.\n#git-fetch-with-cli = true\n\n# This section is considered when running `cargo deny check licenses`\n# More documentation for the licenses section can be found here:\n# https://embarkstudios.github.io/cargo-deny/checks/licenses/cfg.html\n[licenses]\n# The lint level for crates which do not have a detectable license\nunlicensed = \"deny\"\n# List of explicitly allowed licenses\n# See https://spdx.org/licenses/ for list of possible licenses\n# [possible values: any SPDX 3.11 short identifier (+ optional exception)].\nallow = [\n    \"MIT\",\n    \"Apache-2.0\",\n    \"Unicode-DFS-2016\",\n    \"BSD-3-Clause\",\n    \"BSD-2-Clause\",\n    \"Zlib\",\n    #\"Apache-2.0 WITH LLVM-exception\",\n]\n# List of explicitly disallowed licenses\n# See https://spdx.org/licenses/ for list of possible licenses\n# [possible values: any SPDX 3.11 short identifier (+ optional exception)].\ndeny = [\n    #\"Nokia\",\n]\n# Lint level for licenses considered copyleft\ncopyleft = \"warn\"\n# Blanket approval or denial for OSI-approved or FSF Free/Libre licenses\n# * both - The license will be approved if it is both OSI-approved *AND* FSF\n# * either - The license will be approved if it is either OSI-approved *OR* FSF\n# * osi-only - The license will be approved if is OSI-approved *AND NOT* FSF\n# * fsf-only - The license will be approved if is FSF *AND NOT* OSI-approved\n# * neither - This predicate is ignored and the default lint level is used\nallow-osi-fsf-free = \"neither\"\n# Lint level used when no other predicates are matched\n# 1. License isn't in the allow or deny lists\n# 2. License isn't copyleft\n# 3. License isn't OSI/FSF, or allow-osi-fsf-free = \"neither\"\ndefault = \"deny\"\n# The confidence threshold for detecting a license from license text.\n# The higher the value, the more closely the license text must be to the\n# canonical license text of a valid SPDX license file.\n# [possible values: any between 0.0 and 1.0].\nconfidence-threshold = 0.8\n# Allow 1 or more licenses on a per-crate basis, so that particular licenses\n# aren't accepted for every possible crate as with the normal allow list\nexceptions = [\n    # Each entry is the crate and version constraint, and its specific allow\n    # list\n    #{ allow = [\"Zlib\"], name = \"adler32\", version = \"*\" },\n]\n\n# Some crates don't have (easily) machine readable licensing information,\n# adding a clarification entry for it allows you to manually specify the\n# licensing information\n#[[licenses.clarify]]\n# The name of the crate the clarification applies to\n#name = \"ring\"\n# The optional version constraint for the crate\n#version = \"*\"\n# The SPDX expression for the license requirements of the crate\n#expression = \"MIT AND ISC AND OpenSSL\"\n# One or more files in the crate's source used as the \"source of truth\" for\n# the license expression. If the contents match, the clarification will be used\n# when running the license check, otherwise the clarification will be ignored\n# and the crate will be checked normally, which may produce warnings or errors\n# depending on the rest of your configuration\n#license-files = [\n    # Each entry is a crate relative path, and the (opaque) hash of its contents\n    #{ path = \"LICENSE\", hash = 0xbd0eed23 }\n#]\n\n[licenses.private]\n# If true, ignores workspace crates that aren't published, or are only\n# published to private registries.\n# To see how to mark a crate as unpublished (to the official registry),\n# visit https://doc.rust-lang.org/cargo/reference/manifest.html#the-publish-field.\nignore = false\n# One or more private registries that you might publish crates to, if a crate\n# is only published to private registries, and ignore is true, the crate will\n# not have its license(s) checked\nregistries = [\n    #\"https://sekretz.com/registry\n]\n\n# This section is considered when running `cargo deny check bans`.\n# More documentation about the 'bans' section can be found here:\n# https://embarkstudios.github.io/cargo-deny/checks/bans/cfg.html\n[bans]\n# Lint level for when multiple versions of the same crate are detected\nmultiple-versions = \"deny\"\n# Lint level for when a crate version requirement is `*`\nwildcards = \"allow\"\n# The graph highlighting used when creating dotgraphs for crates\n# with multiple versions\n# * lowest-version - The path to the lowest versioned duplicate is highlighted\n# * simplest-path - The path to the version with the fewest edges is highlighted\n# * all - Both lowest-version and simplest-path are used\nhighlight = \"all\"\n# The default lint level for `default` features for crates that are members of\n# the workspace that is being checked. This can be overriden by allowing/denying\n# `default` on a crate-by-crate basis if desired.\nworkspace-default-features = \"allow\"\n# The default lint level for `default` features for external crates that are not\n# members of the workspace. This can be overriden by allowing/denying `default`\n# on a crate-by-crate basis if desired.\nexternal-default-features = \"allow\"\n# List of crates that are allowed. Use with care!\nallow = [\n    #{ name = \"ansi_term\", version = \"=0.11.0\" },\n]\n# List of crates to deny\ndeny = [\n    # Each entry the name of a crate and a version range. If version is\n    # not specified, all versions will be matched.\n    #{ name = \"ansi_term\", version = \"=0.11.0\" },\n    #\n    # Wrapper crates can optionally be specified to allow the crate when it\n    # is a direct dependency of the otherwise banned crate\n    #{ name = \"ansi_term\", version = \"=0.11.0\", wrappers = [] },\n]\n\n# List of features to allow/deny\n# Each entry the name of a crate and a version range. If version is\n# not specified, all versions will be matched.\n#[[bans.features]]\n#name = \"reqwest\"\n# Features to not allow\n#deny = [\"json\"]\n# Features to allow\n#allow = [\n#    \"rustls\",\n#    \"__rustls\",\n#    \"__tls\",\n#    \"hyper-rustls\",\n#    \"rustls\",\n#    \"rustls-pemfile\",\n#    \"rustls-tls-webpki-roots\",\n#    \"tokio-rustls\",\n#    \"webpki-roots\",\n#]\n# If true, the allowed features must exactly match the enabled feature set. If\n# this is set there is no point setting `deny`\n#exact = true\n\n# Certain crates/versions that will be skipped when doing duplicate detection.\nskip = [\n    { name = \"bitflags\" },\n    { name = \"syn\" },\n    #{ name = \"ansi_term\", version = \"=0.11.0\" },\n]\n# Similarly to `skip` allows you to skip certain crates during duplicate\n# detection. Unlike skip, it also includes the entire tree of transitive\n# dependencies starting at the specified crate, up to a certain depth, which is\n# by default infinite.\nskip-tree = [\n    #{ name = \"ansi_term\", version = \"=0.11.0\", depth = 20 },\n]\n\n# This section is considered when running `cargo deny check sources`.\n# More documentation about the 'sources' section can be found here:\n# https://embarkstudios.github.io/cargo-deny/checks/sources/cfg.html\n[sources]\n# Lint level for what to happen when a crate from a crate registry that is not\n# in the allow list is encountered\nunknown-registry = \"warn\"\n# Lint level for what to happen when a crate from a git repository that is not\n# in the allow list is encountered\nunknown-git = \"warn\"\n# List of URLs for allowed crate registries. Defaults to the crates.io index\n# if not specified. If it is specified but empty, no registries are allowed.\nallow-registry = [\"https://github.com/rust-lang/crates.io-index\"]\n# List of URLs for allowed Git repositories\nallow-git = []\n"
        },
        {
          "name": "editor-test.sh",
          "type": "blob",
          "size": 0.1396484375,
          "content": "# SPDX-License-Identifier: MIT OR Apache-2.0\n\nRUST_LOG=\"cosmic_text=debug,editor_test=debug\" cargo run --release --package editor-test -- \"$@\"\n"
        },
        {
          "name": "editor.sh",
          "type": "blob",
          "size": 0.1298828125,
          "content": "# SPDX-License-Identifier: MIT OR Apache-2.0\n\nRUST_LOG=\"cosmic_text=debug,editor=debug\" cargo run --release --package editor -- \"$@\"\n"
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "fonts",
          "type": "tree",
          "content": null
        },
        {
          "name": "multiview.sh",
          "type": "blob",
          "size": 0.1357421875,
          "content": "# SPDX-License-Identifier: MIT OR Apache-2.0\n\nRUST_LOG=\"cosmic_text=debug,multiview=debug\" cargo run --release --package multiview -- \"$@\"\n"
        },
        {
          "name": "redoxer.sh",
          "type": "blob",
          "size": 0.4970703125,
          "content": "#!/usr/bin/env bash\n\nset -ex\n\nrm -rf target/redoxer\nmkdir -p target/redoxer\n\nredoxer install \\\n    --no-track \\\n    --path examples/editor-orbclient \\\n    --root \"target/redoxer\"\n\nargs=(env RUST_LOG=cosmic_text=debug,editor_orbclient=debug /root/bin/editor-orbclient)\nif [ -f \"$1\" ]\nthen\n    filename=\"$(basename \"$1\")\"\n    cp \"$1\" \"target/redoxer/${filename}\"\n    args+=(\"${filename}\")\nfi\n\ncd target/redoxer\n\n# TODO: remove need for linking fonts\nredoxer exec \\\n    --gui \\\n    --folder . \\\n    \"${args[@]}\"\n"
        },
        {
          "name": "rich-text.sh",
          "type": "blob",
          "size": 0.0888671875,
          "content": "RUST_LOG=cosmic_text=debug,rich_text=debug cargo run --release --package rich-text -- \"$@\"\n"
        },
        {
          "name": "sample",
          "type": "tree",
          "content": null
        },
        {
          "name": "screenshots",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "terminal.sh",
          "type": "blob",
          "size": 0.0869140625,
          "content": "RUST_LOG=cosmic_text=debug,terminal=debug cargo run --release --package terminal -- \"$@\"\n"
        },
        {
          "name": "test.sh",
          "type": "blob",
          "size": 0.27734375,
          "content": "#!/usr/bin/env bash\n\nset -ex\n\necho Run CI script\n./ci.sh\n\necho Build documentation\ncargo doc\n\necho Build all examples\ncargo build --release --all\n\necho Run terminal example\ntarget/release/terminal\n\necho Run editor-test example\nenv RUST_LOG=editor_test=info target/release/editor-test\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}