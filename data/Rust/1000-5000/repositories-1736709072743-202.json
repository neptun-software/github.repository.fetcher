{
  "metadata": {
    "timestamp": 1736709072743,
    "page": 202,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "google/OpenSK",
      "stars": 3057,
      "defaultBranch": "2.1",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.2783203125,
          "content": "libraries/**/Cargo.lock\ntarget/\n/build/\n/py_virtual_env/\n\n# Local installation of elf2tab.\n/elf2tab/\n\n# Prevent people from commiting sensitive files.\n/crypto_data/\n\n# Temporary files.\n/reproducible/binaries.sha256sum\n/reproducible/elf2tab.txt\n/reproducible/reproduced.tar\n__pycache__\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.228515625,
          "content": "[submodule \"third_party/libtock-rs\"]\n\tpath = third_party/libtock-rs\n\turl = https://github.com/tock/libtock-rs\n\tignore = dirty\n[submodule \"third_party/tock\"]\n\tpath = third_party/tock\n\turl = https://github.com/tock/tock\n\tignore = dirty\n"
        },
        {
          "name": ".markdownlint.json",
          "type": "blob",
          "size": 0.642578125,
          "content": "{\n    \"default\": true,\n    \"heading-style\": {\n        \"style\": \"atx\"\n    },\n    \"no-trailing-spaces\": {\n        \"br_spaces\": 0,\n        \"strict\": true\n    },\n    \"ul-indent\": {\n        \"indent\": 4\n    },\n    \"line-length\": {\n        \"line_length\": 80,\n        \"code_blocks\": false\n    },\n    \"list-marker-space\": {\n        \"ol_single\": 2,\n        \"ol_multi\": 2,\n        \"ul_single\": 3,\n        \"ul_multi\": 3\n    },\n    \"no-inline-html\": {\n        \"allowed_elements\": [\n            \"img\"\n        ]\n    },\n    \"fenced-code-language\": true,\n    \"code-block-style\": {\n        \"style\": \"fenced\"\n    },\n    \"code-fence-style\": {\n        \"style\": \"backtick\"\n    }\n}"
        },
        {
          "name": ".pylintrc",
          "type": "blob",
          "size": 14.2646484375,
          "content": "# This Pylint rcfile contains a best-effort configuration to uphold the\n# best-practices and style described in the Google Python style guide:\n#   https://google.github.io/styleguide/pyguide.html\n#\n# Its canonical open-source location is:\n#   https://google.github.io/styleguide/pylintrc\n\n[MAIN]\n\n# Files or directories to be skipped. They should be base names, not paths.\nignore=third_party\n\n# Files or directories matching the regex patterns are skipped. The regex\n# matches against base names, not paths.\nignore-patterns=\n\n# Pickle collected data for later comparisons.\npersistent=no\n\n# List of plugins (as comma separated values of python modules names) to load,\n# usually to register additional checkers.\nload-plugins=\n\n# Use multiple processes to speed up Pylint.\njobs=4\n\n# Allow loading of arbitrary C extensions. Extensions are imported into the\n# active Python interpreter and may run arbitrary code.\nunsafe-load-any-extension=no\n\n\n[MESSAGES CONTROL]\n\n# Only show warnings with the listed confidence levels. Leave empty to show\n# all. Valid levels: HIGH, INFERENCE, INFERENCE_FAILURE, UNDEFINED\nconfidence=\n\n# Enable the message, report, category or checker with the given id(s). You can\n# either give multiple identifier separated by comma (,) or put this option\n# multiple time (only on the command line, not in the configuration file where\n# it should appear only once). See also the \"--disable\" option for examples.\n#enable=\n\n# Disable the message, report, category or checker with the given id(s). You\n# can either give multiple identifiers separated by comma (,) or put this\n# option multiple times (only on the command line, not in the configuration\n# file where it should appear only once).You can also use \"--disable=all\" to\n# disable everything first and then reenable specific checks. For example, if\n# you want to run only the similarities checker, you can use \"--disable=all\n# --enable=similarities\". If you want to run only the classes checker, but have\n# no Warning level messages displayed, use\"--disable=all --enable=classes\n# --disable=W\"\ndisable=abstract-method,\n        apply-builtin,\n        arguments-differ,\n        attribute-defined-outside-init,\n        backtick,\n        bad-option-value,\n        basestring-builtin,\n        buffer-builtin,\n        c-extension-no-member,\n        consider-using-enumerate,\n        cmp-builtin,\n        cmp-method,\n        coerce-builtin,\n        coerce-method,\n        delslice-method,\n        div-method,\n        duplicate-code,\n        eq-without-hash,\n        execfile-builtin,\n        file-builtin,\n        filter-builtin-not-iterating,\n        fixme,\n        getslice-method,\n        global-statement,\n        hex-method,\n        idiv-method,\n        implicit-str-concat-in-sequence,\n        import-error,\n        import-self,\n        import-star-module-level,\n        inconsistent-return-statements,\n        input-builtin,\n        intern-builtin,\n        invalid-str-codec,\n        locally-disabled,\n        long-builtin,\n        long-suffix,\n        map-builtin-not-iterating,\n        misplaced-comparison-constant,\n        missing-function-docstring,\n        metaclass-assignment,\n        next-method-called,\n        next-method-defined,\n        no-absolute-import,\n        no-else-break,\n        no-else-continue,\n        no-else-raise,\n        no-else-return,\n        no-init,  # added\n        no-member,\n        no-name-in-module,\n        no-self-use,\n        nonzero-method,\n        oct-method,\n        old-division,\n        old-ne-operator,\n        old-octal-literal,\n        old-raise-syntax,\n        parameter-unpacking,\n        print-statement,\n        raising-string,\n        range-builtin-not-iterating,\n        raw_input-builtin,\n        rdiv-method,\n        reduce-builtin,\n        relative-import,\n        reload-builtin,\n        round-builtin,\n        setslice-method,\n        signature-differs,\n        standarderror-builtin,\n        suppressed-message,\n        sys-max-int,\n        too-few-public-methods,\n        too-many-ancestors,\n        too-many-arguments,\n        too-many-boolean-expressions,\n        too-many-branches,\n        too-many-instance-attributes,\n        too-many-locals,\n        too-many-nested-blocks,\n        too-many-public-methods,\n        too-many-return-statements,\n        too-many-statements,\n        trailing-newlines,\n        unichr-builtin,\n        unicode-builtin,\n        unnecessary-pass,\n        unpacking-in-except,\n        unrecognized-option,\n        useless-else-on-loop,\n        useless-object-inheritance,\n        useless-suppression,\n        using-cmp-argument,\n        wrong-import-order,\n        xrange-builtin,\n        zip-builtin-not-iterating,\n\n\n[REPORTS]\n\n# Set the output format. Available formats are text, parseable, colorized, msvs\n# (visual studio) and html. You can also give a reporter class, eg\n# mypackage.mymodule.MyReporterClass.\noutput-format=text\n\n# Put messages in a separate file for each module / package specified on the\n# command line instead of printing them on stdout. Reports (if any) will be\n# written in a file name \"pylint_global.[txt|html]\". This option is deprecated\n# and it will be removed in Pylint 2.0.\nfiles-output=no\n\n# Tells whether to display a full report or only the messages\nreports=no\n\n# Python expression which should return a note less than 10 (10 is the highest\n# note). You have access to the variables errors warning, statement which\n# respectively contain the number of errors / warnings messages and the total\n# number of statements analyzed. This is used by the global evaluation report\n# (RP0004).\nevaluation=10.0 - ((float(5 * error + warning + refactor + convention) / statement) * 10)\n\n# Template used to display messages. This is a python new-style format string\n# used to format the message information. See doc for all details\n#msg-template=\n\n\n[BASIC]\n\n# Good variable names which should always be accepted, separated by a comma\ngood-names=main,_\n\n# Bad variable names which should always be refused, separated by a comma\nbad-names=\n\n# Colon-delimited sets of names that determine each other's naming style when\n# the name regexes allow several styles.\nname-group=\n\n# Include a hint for the correct naming format with invalid-name\ninclude-naming-hint=no\n\n# List of decorators that produce properties, such as abc.abstractproperty. Add\n# to this list to register other decorators that produce valid properties.\nproperty-classes=abc.abstractproperty,cached_property.cached_property,cached_property.threaded_cached_property,cached_property.cached_property_with_ttl,cached_property.threaded_cached_property_with_ttl\n\n# Regular expression matching correct function names\nfunction-rgx=^(?:(?P<exempt>setUp|tearDown|setUpModule|tearDownModule)|(?P<camel_case>_?[A-Z][a-zA-Z0-9]*)|(?P<snake_case>_?[a-z][a-z0-9_]*))$\n\n# Regular expression matching correct variable names\nvariable-rgx=^[a-z][a-z0-9_]*$\n\n# Regular expression matching correct constant names\nconst-rgx=^(_?[A-Z][A-Z0-9_]*|__[a-z0-9_]+__|_?[a-z][a-z0-9_]*)$\n\n# Regular expression matching correct attribute names\nattr-rgx=^_{0,2}[a-z][a-z0-9_]*$\n\n# Regular expression matching correct argument names\nargument-rgx=^[a-z][a-z0-9_]*$\n\n# Regular expression matching correct class attribute names\nclass-attribute-rgx=^(_?[A-Z][A-Z0-9_]*|__[a-z0-9_]+__|_?[a-z][a-z0-9_]*)$\n\n# Regular expression matching correct inline iteration names\ninlinevar-rgx=^[a-z][a-z0-9_]*$\n\n# Regular expression matching correct class names\nclass-rgx=^_?[A-Z][a-zA-Z0-9]*$\n\n# Regular expression matching correct module names\nmodule-rgx=^(_?[a-z][a-z0-9_]*|__init__)$\n\n# Regular expression matching correct method names\nmethod-rgx=(?x)^(?:(?P<exempt>_[a-z0-9_]+__|runTest|setUp|tearDown|setUpTestCase|tearDownTestCase|setupSelf|tearDownClass|setUpClass|(test|assert)_*[A-Z0-9][a-zA-Z0-9_]*|next)|(?P<camel_case>_{0,2}[A-Z][a-zA-Z0-9_]*)|(?P<snake_case>_{0,2}[a-z][a-z0-9_]*))$\n\n# Regular expression which should only match function or class names that do\n# not require a docstring.\nno-docstring-rgx=(__.*__|main|test.*|.*test|.*Test)$\n\n# Minimum line length for functions/classes that require docstrings, shorter\n# ones are exempt.\ndocstring-min-length=10\n\n\n[TYPECHECK]\n\n# List of decorators that produce context managers, such as\n# contextlib.contextmanager. Add to this list to register other decorators that\n# produce valid context managers.\ncontextmanager-decorators=contextlib.contextmanager,contextlib2.contextmanager\n\n# Tells whether missing members accessed in mixin class should be ignored. A\n# mixin class is detected if its name ends with \"mixin\" (case insensitive).\nignore-mixin-members=yes\n\n# List of module names for which member attributes should not be checked\n# (useful for modules/projects where namespaces are manipulated during runtime\n# and thus existing member attributes cannot be deduced by static analysis. It\n# supports qualified module names, as well as Unix pattern matching.\nignored-modules=\n\n# List of class names for which member attributes should not be checked (useful\n# for classes with dynamically set attributes). This supports the use of\n# qualified names.\nignored-classes=optparse.Values,thread._local,_thread._local\n\n# List of members which are set dynamically and missed by pylint inference\n# system, and so shouldn't trigger E1101 when accessed. Python regular\n# expressions are accepted.\ngenerated-members=\n\n\n[FORMAT]\n\n# Maximum number of characters on a single line.\nmax-line-length=80\n\n# TODO(https://github.com/PyCQA/pylint/issues/3352): Direct pylint to exempt\n# lines made too long by directives to pytype.\n\n# Regexp for a line that is allowed to be longer than the limit.\nignore-long-lines=(?x)(\n  ^\\s*(\\#\\ )?<?https?://\\S+>?$|\n  ^\\s*(from\\s+\\S+\\s+)?import\\s+.+$)\n\n# Allow the body of an if to be on the same line as the test if there is no\n# else.\nsingle-line-if-stmt=yes\n\n# List of optional constructs for which whitespace checking is disabled. `dict-\n# separator` is used to allow tabulation in dicts, etc.: {1  : 1,\\n222: 2}.\n# `trailing-comma` allows a space between comma and closing bracket: (a, ).\n# `empty-line` allows space-only lines.\nno-space-check=\n\n# Maximum number of lines in a module\nmax-module-lines=99999\n\n# String used as indentation unit.  The internal Google style guide mandates 2\n# spaces.  Google's externaly-published style guide says 4, consistent with\n# PEP 8.  Here, we use 2 spaces, for conformity with many open-sourced Google\n# projects (like TensorFlow).\nindent-string='  '\n\n# Number of spaces of indent required inside a hanging  or continued line.\nindent-after-paren=4\n\n# Expected format of line ending, e.g. empty (any line ending), LF or CRLF.\nexpected-line-ending-format=\n\n\n[MISCELLANEOUS]\n\n# List of note tags to take in consideration, separated by a comma.\nnotes=TODO\n\n\n[STRING]\n\n# This flag controls whether inconsistent-quotes generates a warning when the\n# character used as a quote delimiter is used inconsistently within a module.\ncheck-quote-consistency=yes\n\n\n[VARIABLES]\n\n# Tells whether we should check for unused import in __init__ files.\ninit-import=no\n\n# A regular expression matching the name of dummy variables (i.e. expectedly\n# not used).\ndummy-variables-rgx=^\\*{0,2}(_$|unused_|dummy_)\n\n# List of additional names supposed to be defined in builtins. Remember that\n# you should avoid to define new builtins when possible.\nadditional-builtins=\n\n# List of strings which can identify a callback function by name. A callback\n# name must start or end with one of those strings.\ncallbacks=cb_,_cb\n\n# List of qualified module names which can have objects that can redefine\n# builtins.\nredefining-builtins-modules=six,six.moves,past.builtins,future.builtins,functools\n\n\n[LOGGING]\n\n# Logging modules to check that the string format arguments are in logging\n# function parameter format\nlogging-modules=logging,absl.logging,tensorflow.io.logging\n\n\n[SIMILARITIES]\n\n# Minimum lines number of a similarity.\nmin-similarity-lines=4\n\n# Ignore comments when computing similarities.\nignore-comments=yes\n\n# Ignore docstrings when computing similarities.\nignore-docstrings=yes\n\n# Ignore imports when computing similarities.\nignore-imports=no\n\n\n[SPELLING]\n\n# Spelling dictionary name. Available dictionaries: none. To make it working\n# install python-enchant package.\nspelling-dict=\n\n# List of comma separated words that should not be checked.\nspelling-ignore-words=\n\n# A path to a file that contains private dictionary; one word per line.\nspelling-private-dict-file=\n\n# Tells whether to store unknown words to indicated private dictionary in\n# --spelling-private-dict-file option instead of raising a message.\nspelling-store-unknown-words=no\n\n\n[IMPORTS]\n\n# Deprecated modules which should not be used, separated by a comma\ndeprecated-modules=regsub,\n                   TERMIOS,\n                   Bastion,\n                   rexec,\n                   sets\n\n# Create a graph of every (i.e. internal and external) dependencies in the\n# given file (report RP0402 must not be disabled)\nimport-graph=\n\n# Create a graph of external dependencies in the given file (report RP0402 must\n# not be disabled)\next-import-graph=\n\n# Create a graph of internal dependencies in the given file (report RP0402 must\n# not be disabled)\nint-import-graph=\n\n# Force import order to recognize a module as part of the standard\n# compatibility libraries.\nknown-standard-library=\n\n# Force import order to recognize a module as part of a third party library.\nknown-third-party=enchant, absl\n\n# Analyse import fallback blocks. This can be used to support both Python 2 and\n# 3 compatible code, which means that the block might have code that exists\n# only in one or another interpreter, leading to false positives when analysed.\nanalyse-fallback-blocks=no\n\n\n[CLASSES]\n\n# List of method names used to declare (i.e. assign) instance attributes.\ndefining-attr-methods=__init__,\n                      __new__,\n                      setUp\n\n# List of member names, which should be excluded from the protected access\n# warning.\nexclude-protected=_asdict,\n                  _fields,\n                  _replace,\n                  _source,\n                  _make\n\n# List of valid names for the first argument in a class method.\nvalid-classmethod-first-arg=cls,\n                            class_\n\n# List of valid names for the first argument in a metaclass class method.\nvalid-metaclass-classmethod-first-arg=mcs\n\n\n[EXCEPTIONS]\n\n# Exceptions that will emit a warning when being caught. Defaults to\n# \"Exception\"\novergeneral-exceptions=builtins.StandardError,\n                       builtins.Exception,\n                       builtins.BaseException\n"
        },
        {
          "name": "CITATION.cff",
          "type": "blob",
          "size": 0.7841796875,
          "content": "cff-version: 1.2.0\nmessage: \"If you use this software, please cite it as below.\"\nrepository-code: \"https://github.com/google/OpenSK\"\nlicense: \"Apache-2.0\"\npreferred-citation:\n  type: article\n  authors:\n  - family-names: \"Ghinea\"\n    given-names: \"Diana\"\n  - family-names: \"Kaczmarczyck\"\n    given-names: \"Fabian\"\n  - family-names: \"Pullman\"\n    given-names: \"Jennifer\"\n  - family-names: \"Cretin\"\n    given-names: \"Julien\"\n  - family-names: \"Kölbl\"\n    given-names: \"Stefan\"\n  - family-names: \"Invernizzi\"\n    given-names: \"Luca\"\n  - family-names: \"Bursztein\"\n    given-names: \"Elie\"\n  - family-names: \"Picod\"\n    given-names: \"Jean-Michel\"\n  title: \"Hybrid Post-Quantum Signatures in Hardware Security Keys\"\n  journal: \"4th ACNS Workshop on Secure Cryptographic Implementation\"\n  year: 2023\n  month: 6\n"
        },
        {
          "name": "Cargo.lock",
          "type": "blob",
          "size": 22.607421875,
          "content": "# This file is automatically @generated by Cargo.\n# It is not intended for manual editing.\nversion = 3\n\n[[package]]\nname = \"aes\"\nversion = \"0.8.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ac1f845298e95f983ff1944b728ae08b8cebab80d684f0a832ed0fc74dfa27e2\"\ndependencies = [\n \"cfg-if\",\n \"cipher\",\n \"cpufeatures\",\n]\n\n[[package]]\nname = \"aho-corasick\"\nversion = \"1.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b2969dcb958b36655471fc61f7e416fa76033bdd4bfed0678d8fee1e2d07a1f0\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"arrayref\"\nversion = \"0.3.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6b4930d2cb77ce62f89ee5d5289b4ac049559b1c45539271f5ed4fdc7db34545\"\n\n[[package]]\nname = \"base16ct\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4c7f02d4ea65f2c1853089ffd8d2787bdbc63de2f0d29dedbcf8ccdfa0ccd4cf\"\n\n[[package]]\nname = \"base64ct\"\nversion = \"1.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8c3c1a368f70d6cf7302d78f8f7093da241fb8e8807c05cc9e51a125895a6d5b\"\n\n[[package]]\nname = \"bitflags\"\nversion = \"2.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"327762f6e5a765692301e5bb513e0d9fef63be86bbc14528052b1cd3e6f03e07\"\n\n[[package]]\nname = \"block-buffer\"\nversion = \"0.10.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3078c7629b62d3f0439517fa394996acacc5cbc91c5a20d8c658e77abd503a71\"\ndependencies = [\n \"generic-array\",\n]\n\n[[package]]\nname = \"bumpalo\"\nversion = \"3.14.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7f30e7476521f6f8af1a1c4c0b8cc94f0bee37d91763d0ca2665f299b6cd8aec\"\n\n[[package]]\nname = \"byteorder\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1fd0f2584146f6f2ef48085050886acf353beff7305ebd1ae69500e27c67f64b\"\n\n[[package]]\nname = \"cbc\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"26b52a9543ae338f279b96b0b9fed9c8093744685043739079ce85cd58f289a6\"\ndependencies = [\n \"cipher\",\n]\n\n[[package]]\nname = \"cc\"\nversion = \"1.0.83\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f1174fb0b6ec23863f8b971027804a42614e347eafb0a95bf0b12cdae21fc4d0\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"cfg-if\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd\"\n\n[[package]]\nname = \"cipher\"\nversion = \"0.4.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"773f3b9af64447d2ce9850330c473515014aa235e6a783b02db81ff39e4a3dad\"\ndependencies = [\n \"crypto-common\",\n \"inout\",\n]\n\n[[package]]\nname = \"const-oid\"\nversion = \"0.9.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"28c122c3980598d243d63d9a704629a2d748d101f278052ff068be5a4423ab6f\"\n\n[[package]]\nname = \"cpufeatures\"\nversion = \"0.2.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ce420fe07aecd3e67c5f910618fe65e94158f6dcc0adf44e00d69ce2bdfe0fd0\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"crypto\"\nversion = \"0.1.0\"\ndependencies = [\n \"arrayref\",\n \"byteorder\",\n \"hex\",\n \"rand_core\",\n \"regex\",\n \"ring\",\n \"serde\",\n \"serde_json\",\n \"subtle\",\n \"untrusted\",\n \"zeroize\",\n]\n\n[[package]]\nname = \"crypto-bigint\"\nversion = \"0.5.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"740fe28e594155f10cfc383984cbefd529d7396050557148f79cb0f621204124\"\ndependencies = [\n \"generic-array\",\n \"rand_core\",\n \"subtle\",\n \"zeroize\",\n]\n\n[[package]]\nname = \"crypto-common\"\nversion = \"0.1.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1bfb12502f3fc46cca1bb51ac28df9d618d813cdc3d2f25b9fe775a34af26bb3\"\ndependencies = [\n \"generic-array\",\n \"typenum\",\n]\n\n[[package]]\nname = \"ctap2\"\nversion = \"1.0.0\"\ndependencies = [\n \"arrayref\",\n \"byteorder\",\n \"crypto\",\n \"ed25519-compact\",\n \"enum-iterator\",\n \"lang_items\",\n \"libtock_alarm\",\n \"libtock_buttons\",\n \"libtock_console\",\n \"libtock_drivers\",\n \"libtock_leds\",\n \"libtock_platform\",\n \"libtock_runtime\",\n \"libtock_unittest\",\n \"opensk\",\n \"openssl\",\n \"persistent_store\",\n \"rand_core\",\n \"sk-cbor\",\n \"uuid\",\n]\n\n[[package]]\nname = \"der\"\nversion = \"0.7.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fffa369a668c8af7dbf8b5e56c9f744fbd399949ed171606040001947de40b1c\"\ndependencies = [\n \"const-oid\",\n \"zeroize\",\n]\n\n[[package]]\nname = \"digest\"\nversion = \"0.10.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9ed9a281f7bc9b7576e61468ba615a66a5c8cfdff42420a70aa82701a3b1e292\"\ndependencies = [\n \"block-buffer\",\n \"const-oid\",\n \"crypto-common\",\n \"subtle\",\n]\n\n[[package]]\nname = \"ecdsa\"\nversion = \"0.16.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a4b1e0c257a9e9f25f90ff76d7a68360ed497ee519c8e428d1825ef0000799d4\"\ndependencies = [\n \"der\",\n \"digest\",\n \"elliptic-curve\",\n \"rfc6979\",\n \"signature\",\n \"spki\",\n]\n\n[[package]]\nname = \"ed25519-compact\"\nversion = \"1.0.16\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e18997d4604542d0736fae2c5ad6de987f0a50530cbcc14a7ce5a685328a252d\"\n\n[[package]]\nname = \"elliptic-curve\"\nversion = \"0.13.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d97ca172ae9dc9f9b779a6e3a65d308f2af74e5b8c921299075bdb4a0370e914\"\ndependencies = [\n \"base16ct\",\n \"crypto-bigint\",\n \"digest\",\n \"ff\",\n \"generic-array\",\n \"group\",\n \"hkdf\",\n \"pkcs8\",\n \"rand_core\",\n \"sec1\",\n \"subtle\",\n \"zeroize\",\n]\n\n[[package]]\nname = \"enum-iterator\"\nversion = \"0.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c79a6321a1197d7730510c7e3f6cb80432dfefecb32426de8cea0aa19b4bb8d7\"\ndependencies = [\n \"enum-iterator-derive\",\n]\n\n[[package]]\nname = \"enum-iterator-derive\"\nversion = \"0.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1e94aa31f7c0dc764f57896dc615ddd76fc13b0d5dca7eb6cc5e018a5a09ec06\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 1.0.109\",\n]\n\n[[package]]\nname = \"ff\"\nversion = \"0.13.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ded41244b729663b1e574f1b4fb731469f69f79c17667b5d776b16cda0479449\"\ndependencies = [\n \"rand_core\",\n \"subtle\",\n]\n\n[[package]]\nname = \"foreign-types\"\nversion = \"0.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f6f339eb8adc052cd2ca78910fda869aefa38d22d5cb648e6485e4d3fc06f3b1\"\ndependencies = [\n \"foreign-types-shared\",\n]\n\n[[package]]\nname = \"foreign-types-shared\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"00b0228411908ca8685dba7fc2cdd70ec9990a6e753e89b6ac91a84c40fbaf4b\"\n\n[[package]]\nname = \"generic-array\"\nversion = \"0.14.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"85649ca51fd72272d7821adaf274ad91c288277713d9c18820d8499a7ff69e9a\"\ndependencies = [\n \"typenum\",\n \"version_check\",\n \"zeroize\",\n]\n\n[[package]]\nname = \"getrandom\"\nversion = \"0.2.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fe9006bed769170c11f845cf00c7c1e9092aeb3f268e007c3e760ac68008070f\"\ndependencies = [\n \"cfg-if\",\n \"libc\",\n \"wasi\",\n]\n\n[[package]]\nname = \"group\"\nversion = \"0.13.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f0f9ef7462f7c099f518d754361858f86d8a07af53ba9af0fe635bbccb151a63\"\ndependencies = [\n \"ff\",\n \"rand_core\",\n \"subtle\",\n]\n\n[[package]]\nname = \"hex\"\nversion = \"0.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"805026a5d0141ffc30abb3be3173848ad46a1b1664fe632428479619a3644d77\"\n\n[[package]]\nname = \"hkdf\"\nversion = \"0.12.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"791a029f6b9fc27657f6f188ec6e5e43f6911f6f878e0dc5501396e09809d437\"\ndependencies = [\n \"hmac\",\n]\n\n[[package]]\nname = \"hmac\"\nversion = \"0.12.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6c49c37c09c17a53d937dfbb742eb3a961d65a994e6bcdcf37e7399d0cc8ab5e\"\ndependencies = [\n \"digest\",\n]\n\n[[package]]\nname = \"inout\"\nversion = \"0.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a0c10553d664a4d0bcff9f4215d0aac67a639cc68ef660840afe309b807bc9f5\"\ndependencies = [\n \"generic-array\",\n]\n\n[[package]]\nname = \"itoa\"\nversion = \"0.4.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b71991ff56294aa922b450139ee08b3bfc70982c6b2c7562771375cf73542dd4\"\n\n[[package]]\nname = \"js-sys\"\nversion = \"0.3.65\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"54c0c35952f67de54bb584e9fd912b3023117cbafc0a77d8f3dee1fb5f572fe8\"\ndependencies = [\n \"wasm-bindgen\",\n]\n\n[[package]]\nname = \"lang_items\"\nversion = \"0.1.0\"\ndependencies = [\n \"libtock_alarm\",\n \"libtock_console\",\n \"libtock_drivers\",\n \"libtock_leds\",\n \"libtock_low_level_debug\",\n \"libtock_platform\",\n \"libtock_runtime\",\n \"linked_list_allocator\",\n]\n\n[[package]]\nname = \"libc\"\nversion = \"0.2.150\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"89d92a4743f9a61002fae18374ed11e7973f530cb3a3255fb354818118b2203c\"\n\n[[package]]\nname = \"libtock_alarm\"\nversion = \"0.1.0\"\ndependencies = [\n \"libtock_platform\",\n]\n\n[[package]]\nname = \"libtock_buttons\"\nversion = \"0.1.0\"\ndependencies = [\n \"libtock_platform\",\n]\n\n[[package]]\nname = \"libtock_console\"\nversion = \"0.1.0\"\ndependencies = [\n \"libtock_platform\",\n]\n\n[[package]]\nname = \"libtock_drivers\"\nversion = \"0.1.0\"\ndependencies = [\n \"libtock_alarm\",\n \"libtock_console\",\n \"libtock_platform\",\n]\n\n[[package]]\nname = \"libtock_leds\"\nversion = \"0.1.0\"\ndependencies = [\n \"libtock_platform\",\n]\n\n[[package]]\nname = \"libtock_low_level_debug\"\nversion = \"0.1.0\"\ndependencies = [\n \"libtock_platform\",\n]\n\n[[package]]\nname = \"libtock_platform\"\nversion = \"0.1.0\"\n\n[[package]]\nname = \"libtock_runtime\"\nversion = \"0.1.0\"\ndependencies = [\n \"libtock_platform\",\n]\n\n[[package]]\nname = \"libtock_unittest\"\nversion = \"0.1.0\"\ndependencies = [\n \"libtock_platform\",\n \"thiserror\",\n]\n\n[[package]]\nname = \"linked_list_allocator\"\nversion = \"0.10.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9afa463f5405ee81cdb9cc2baf37e08ec7e4c8209442b5d72c04cfb2cd6e6286\"\n\n[[package]]\nname = \"log\"\nversion = \"0.4.20\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b5e6163cb8c49088c2c36f57875e58ccd8c87c7427f7fbd50ea6710b2f3f2e8f\"\n\n[[package]]\nname = \"memchr\"\nversion = \"2.6.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f665ee40bc4a3c5590afb1e9677db74a508659dfd71e126420da8274909a0167\"\n\n[[package]]\nname = \"once_cell\"\nversion = \"1.18.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dd8b5dd2ae5ed71462c540258bedcb51965123ad7e7ccf4b9a8cafaa4a63576d\"\n\n[[package]]\nname = \"opensk\"\nversion = \"1.0.0\"\ndependencies = [\n \"aes\",\n \"arrayref\",\n \"byteorder\",\n \"cbc\",\n \"crypto\",\n \"ed25519-compact\",\n \"hkdf\",\n \"hmac\",\n \"openssl\",\n \"p256\",\n \"persistent_store\",\n \"rand\",\n \"rand_core\",\n \"sha2\",\n \"sk-cbor\",\n \"subtle\",\n \"uuid\",\n \"zeroize\",\n]\n\n[[package]]\nname = \"openssl\"\nversion = \"0.10.66\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9529f4786b70a3e8c61e11179af17ab6188ad8d0ded78c5529441ed39d4bd9c1\"\ndependencies = [\n \"bitflags\",\n \"cfg-if\",\n \"foreign-types\",\n \"libc\",\n \"once_cell\",\n \"openssl-macros\",\n \"openssl-sys\",\n]\n\n[[package]]\nname = \"openssl-macros\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a948666b637a0f465e8564c73e89d4dde00d72d4d473cc972f390fc3dcee7d9c\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.39\",\n]\n\n[[package]]\nname = \"openssl-sys\"\nversion = \"0.9.103\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7f9e8deee91df40a943c71b917e5874b951d32a802526c85721ce3b776c929d6\"\ndependencies = [\n \"cc\",\n \"libc\",\n \"pkg-config\",\n \"vcpkg\",\n]\n\n[[package]]\nname = \"p256\"\nversion = \"0.13.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c9863ad85fa8f4460f9c48cb909d38a0d689dba1f6f6988a5e3e0d31071bcd4b\"\ndependencies = [\n \"ecdsa\",\n \"elliptic-curve\",\n \"primeorder\",\n \"sha2\",\n]\n\n[[package]]\nname = \"persistent_store\"\nversion = \"0.1.0\"\n\n[[package]]\nname = \"pkcs8\"\nversion = \"0.10.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f950b2377845cebe5cf8b5165cb3cc1a5e0fa5cfa3e1f7f55707d8fd82e0a7b7\"\ndependencies = [\n \"der\",\n \"spki\",\n]\n\n[[package]]\nname = \"pkg-config\"\nversion = \"0.3.27\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"26072860ba924cbfa98ea39c8c19b4dd6a4a25423dbdf219c1eca91aa0cf6964\"\n\n[[package]]\nname = \"ppv-lite86\"\nversion = \"0.2.17\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5b40af805b3121feab8a3c29f04d8ad262fa8e0561883e7653e024ae4479e6de\"\n\n[[package]]\nname = \"primeorder\"\nversion = \"0.13.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c7dbe9ed3b56368bd99483eb32fe9c17fdd3730aebadc906918ce78d54c7eeb4\"\ndependencies = [\n \"elliptic-curve\",\n]\n\n[[package]]\nname = \"proc-macro2\"\nversion = \"1.0.69\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"134c189feb4956b20f6f547d2cf727d4c0fe06722b20a0eec87ed445a97f92da\"\ndependencies = [\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"quote\"\nversion = \"1.0.33\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5267fca4496028628a95160fc423a33e8b2e6af8a5302579e322e4b520293cae\"\ndependencies = [\n \"proc-macro2\",\n]\n\n[[package]]\nname = \"rand\"\nversion = \"0.8.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"34af8d1a0e25924bc5b7c43c079c942339d8f0a8b57c39049bef581b46327404\"\ndependencies = [\n \"rand_chacha\",\n \"rand_core\",\n]\n\n[[package]]\nname = \"rand_chacha\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e6c10a63a0fa32252be49d21e7709d4d4baf8d231c2dbce1eaa8141b9b127d88\"\ndependencies = [\n \"ppv-lite86\",\n \"rand_core\",\n]\n\n[[package]]\nname = \"rand_core\"\nversion = \"0.6.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ec0be4795e2f6a28069bec0b5ff3e2ac9bafc99e6a9a7dc3547996c5c816922c\"\ndependencies = [\n \"getrandom\",\n]\n\n[[package]]\nname = \"regex\"\nversion = \"1.10.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"380b951a9c5e80ddfd6136919eef32310721aa4aacd4889a8d39124b026ab343\"\ndependencies = [\n \"aho-corasick\",\n \"memchr\",\n \"regex-automata\",\n \"regex-syntax\",\n]\n\n[[package]]\nname = \"regex-automata\"\nversion = \"0.4.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5f804c7828047e88b2d32e2d7fe5a105da8ee3264f01902f796c8e067dc2483f\"\ndependencies = [\n \"aho-corasick\",\n \"memchr\",\n \"regex-syntax\",\n]\n\n[[package]]\nname = \"regex-syntax\"\nversion = \"0.8.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c08c74e62047bb2de4ff487b251e4a92e24f48745648451635cec7d591162d9f\"\n\n[[package]]\nname = \"rfc6979\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f8dd2a808d456c4a54e300a23e9f5a67e122c3024119acbfd73e3bf664491cb2\"\ndependencies = [\n \"hmac\",\n \"subtle\",\n]\n\n[[package]]\nname = \"ring\"\nversion = \"0.16.20\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3053cf52e236a3ed746dfc745aa9cacf1b791d846bdaf412f60a8d7d6e17c8fc\"\ndependencies = [\n \"cc\",\n \"libc\",\n \"once_cell\",\n \"spin\",\n \"untrusted\",\n \"web-sys\",\n \"winapi\",\n]\n\n[[package]]\nname = \"ryu\"\nversion = \"1.0.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1ad4cc8da4ef723ed60bced201181d83791ad433213d8c24efffda1eec85d741\"\n\n[[package]]\nname = \"sec1\"\nversion = \"0.7.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d3e97a565f76233a6003f9f5c54be1d9c5bdfa3eccfb189469f11ec4901c47dc\"\ndependencies = [\n \"base16ct\",\n \"der\",\n \"generic-array\",\n \"pkcs8\",\n \"subtle\",\n \"zeroize\",\n]\n\n[[package]]\nname = \"serde\"\nversion = \"1.0.192\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bca2a08484b285dcb282d0f67b26cadc0df8b19f8c12502c13d966bf9482f001\"\ndependencies = [\n \"serde_derive\",\n]\n\n[[package]]\nname = \"serde_derive\"\nversion = \"1.0.192\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d6c7207fbec9faa48073f3e3074cbe553af6ea512d7c21ba46e434e70ea9fbc1\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.39\",\n]\n\n[[package]]\nname = \"serde_json\"\nversion = \"1.0.69\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e466864e431129c7e0d3476b92f20458e5879919a0596c6472738d9fa2d342f8\"\ndependencies = [\n \"itoa\",\n \"ryu\",\n \"serde\",\n]\n\n[[package]]\nname = \"sha2\"\nversion = \"0.10.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"793db75ad2bcafc3ffa7c68b215fee268f537982cd901d132f89c6343f3a3dc8\"\ndependencies = [\n \"cfg-if\",\n \"cpufeatures\",\n \"digest\",\n]\n\n[[package]]\nname = \"signature\"\nversion = \"2.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5e1788eed21689f9cf370582dfc467ef36ed9c707f073528ddafa8d83e3b8500\"\ndependencies = [\n \"digest\",\n \"rand_core\",\n]\n\n[[package]]\nname = \"sk-cbor\"\nversion = \"0.1.2\"\n\n[[package]]\nname = \"spin\"\nversion = \"0.5.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6e63cff320ae2c57904679ba7cb63280a3dc4613885beafb148ee7bf9aa9042d\"\n\n[[package]]\nname = \"spki\"\nversion = \"0.7.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9d1e996ef02c474957d681f1b05213dfb0abab947b446a62d37770b23500184a\"\ndependencies = [\n \"base64ct\",\n \"der\",\n]\n\n[[package]]\nname = \"subtle\"\nversion = \"2.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"81cdd64d312baedb58e21336b31bc043b77e01cc99033ce76ef539f78e965ebc\"\n\n[[package]]\nname = \"syn\"\nversion = \"1.0.109\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"72b64191b275b66ffe2469e8af2c1cfe3bafa67b529ead792a6d0160888b4237\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"syn\"\nversion = \"2.0.39\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"23e78b90f2fcf45d3e842032ce32e3f2d1545ba6636271dcbf24fa306d87be7a\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"thiserror\"\nversion = \"1.0.50\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f9a7210f5c9a7156bb50aa36aed4c95afb51df0df00713949448cf9e97d382d2\"\ndependencies = [\n \"thiserror-impl\",\n]\n\n[[package]]\nname = \"thiserror-impl\"\nversion = \"1.0.50\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"266b2e40bc00e5a6c09c3584011e08b06f123c00362c92b975ba9843aaaa14b8\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.39\",\n]\n\n[[package]]\nname = \"typenum\"\nversion = \"1.17.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"42ff0bf0c66b8238c6f3b578df37d0b7848e55df8577b3f74f92a69acceeb825\"\n\n[[package]]\nname = \"unicode-ident\"\nversion = \"1.0.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3354b9ac3fae1ff6755cb6db53683adb661634f67557942dea4facebec0fee4b\"\n\n[[package]]\nname = \"untrusted\"\nversion = \"0.7.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a156c684c91ea7d62626509bce3cb4e1d9ed5c4d978f7b4352658f96a4c26b4a\"\n\n[[package]]\nname = \"uuid\"\nversion = \"0.8.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bc5cf98d8186244414c848017f0e2676b3fcb46807f6668a97dfe67359a3c4b7\"\ndependencies = [\n \"getrandom\",\n]\n\n[[package]]\nname = \"vcpkg\"\nversion = \"0.2.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"accd4ea62f7bb7a82fe23066fb0957d48ef677f6eeb8215f372f52e48bb32426\"\n\n[[package]]\nname = \"version_check\"\nversion = \"0.9.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"49874b5167b65d7193b8aba1567f5c7d93d001cafc34600cee003eda787e483f\"\n\n[[package]]\nname = \"wasi\"\nversion = \"0.11.0+wasi-snapshot-preview1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9c8d87e72b64a3b4db28d11ce29237c246188f4f51057d65a7eab63b7987e423\"\n\n[[package]]\nname = \"wasm-bindgen\"\nversion = \"0.2.92\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4be2531df63900aeb2bca0daaaddec08491ee64ceecbee5076636a3b026795a8\"\ndependencies = [\n \"cfg-if\",\n \"wasm-bindgen-macro\",\n]\n\n[[package]]\nname = \"wasm-bindgen-backend\"\nversion = \"0.2.92\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"614d787b966d3989fa7bb98a654e369c762374fd3213d212cfc0251257e747da\"\ndependencies = [\n \"bumpalo\",\n \"log\",\n \"once_cell\",\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.39\",\n \"wasm-bindgen-shared\",\n]\n\n[[package]]\nname = \"wasm-bindgen-macro\"\nversion = \"0.2.92\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a1f8823de937b71b9460c0c34e25f3da88250760bec0ebac694b49997550d726\"\ndependencies = [\n \"quote\",\n \"wasm-bindgen-macro-support\",\n]\n\n[[package]]\nname = \"wasm-bindgen-macro-support\"\nversion = \"0.2.92\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e94f17b526d0a461a191c78ea52bbce64071ed5c04c9ffe424dcb38f74171bb7\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.39\",\n \"wasm-bindgen-backend\",\n \"wasm-bindgen-shared\",\n]\n\n[[package]]\nname = \"wasm-bindgen-shared\"\nversion = \"0.2.92\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"af190c94f2773fdb3729c55b007a722abb5384da03bc0986df4c289bf5567e96\"\n\n[[package]]\nname = \"web-sys\"\nversion = \"0.3.65\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5db499c5f66323272151db0e666cd34f78617522fb0c1604d31a27c50c206a85\"\ndependencies = [\n \"js-sys\",\n \"wasm-bindgen\",\n]\n\n[[package]]\nname = \"winapi\"\nversion = \"0.3.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5c839a674fcd7a98952e593242ea400abe93992746761e38641405d28b00f419\"\ndependencies = [\n \"winapi-i686-pc-windows-gnu\",\n \"winapi-x86_64-pc-windows-gnu\",\n]\n\n[[package]]\nname = \"winapi-i686-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ac3b87c63620426dd9b991e5ce0329eff545bccbbb34f3be09ff6fb6ab51b7b6\"\n\n[[package]]\nname = \"winapi-x86_64-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"712e227841d057c1ee1cd2fb22fa7e5a5461ae8e48fa2ca79ec42cfc1931183f\"\n\n[[package]]\nname = \"zeroize\"\nversion = \"1.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2a0956f1ba7c7909bfb66c2e9e4124ab6f6482560f6628b5aaeba39207c9aad9\"\ndependencies = [\n \"zeroize_derive\",\n]\n\n[[package]]\nname = \"zeroize_derive\"\nversion = \"1.4.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ce36e65b0d2999d2aafac989fb249189a141aee1f53c612c1f37d72631959f69\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.39\",\n]\n"
        },
        {
          "name": "Cargo.toml",
          "type": "blob",
          "size": 2.44921875,
          "content": "[package]\nname = \"ctap2\"\nversion = \"1.0.0\"\nauthors = [\n  \"Fabian Kaczmarczyck <kaczmarczyck@google.com>\",\n  \"Guillaume Endignoux <guillaumee@google.com>\",\n  \"Jean-Michel Picod <jmichel@google.com>\",\n  \"Julien Cretin <cretin@google.com>\",\n]\nlicense = \"Apache-2.0\"\nedition = \"2018\"\n\n[target.'cfg(any(target_arch = \"arm\", target_arch = \"riscv32\"))'.dependencies.libtock_runtime]\npath = \"third_party/libtock-rs/runtime\"\ndefault-features = false\nfeatures = [\"no_auto_layout\", \"no_debug_memop\"]\n\n[dependencies]\nlibtock_buttons = { path = \"third_party/libtock-rs/apis/buttons\" }\nlibtock_platform = { path = \"third_party/libtock-rs/platform\" }\nlibtock_drivers = { path = \"third_party/libtock-drivers\" }\nlibtock_alarm = { path = \"third_party/libtock-rs/apis/alarm\" }\nlibtock_console = { path = \"third_party/libtock-rs/apis/console\" }\nlibtock_leds = { path = \"third_party/libtock-rs/apis/leds\" }\nlang_items = { path = \"third_party/lang-items\" }\nopensk = { path = \"libraries/opensk\", default-features = false }\nsk-cbor = { path = \"libraries/cbor\" }\ncrypto = { path = \"libraries/crypto\" }\npersistent_store = { path = \"libraries/persistent_store\" }\nlibtock_unittest = { path = \"third_party/libtock-rs/unittest\", optional = true }\nbyteorder = { version = \"1\", default-features = false }\narrayref = \"0.3.6\"\nrand_core = \"0.6.4\"\ned25519-compact = { version = \"1\", default-features = false, optional = true }\n\n[features]\nconfig_command = [\"opensk/config_command\"]\ndebug_allocations = [\"lang_items/debug_allocations\"]\ndebug_ctap = [\"libtock_drivers/debug_ctap\", \"opensk/debug_ctap\"]\npanic_console = [\"lang_items/panic_console\"]\nstd = [\"crypto/std\", \"lang_items/std\", \"persistent_store/std\", \"opensk/std\", \"libtock_unittest\"]\nverbose = [\"debug_ctap\", \"libtock_drivers/verbose_usb\"]\nwith_ctap1 = [\"opensk/with_ctap1\"]\nwith_nfc = [\"libtock_drivers/with_nfc\"]\nvendor_hid = [\"opensk/vendor_hid\"]\ned25519 = [\"ed25519-compact\", \"opensk/ed25519\"]\nrust_crypto = [\"opensk/rust_crypto\"]\n\n[dev-dependencies]\nenum-iterator = \"0.6.0\"\n\n[build-dependencies]\nsk-cbor = { path = \"libraries/cbor\" }\nuuid = { version = \"0.8\", features = [\"v4\"] }\nopenssl = \"0.10.55\"\n\n[profile.dev]\npanic = \"abort\"\nlto = true # Link Time Optimization usually reduces size of binaries and static libraries\n\n[profile.release]\npanic = \"abort\"\nlto = true # Link Time Optimization usually reduces size of binaries and static libraries\nopt-level = \"z\"\ncodegen-units = 1\n\n[profile.release.package]\naes = { opt-level = 3 }\nsha2 = { opt-level = 3 }\np256 = { opt-level = 3 }\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.091796875,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "OpenSK.code-workspace",
          "type": "blob",
          "size": 2.1904296875,
          "content": "{\n        \"folders\": [\n                {\n                        \"name\": \"OpenSK\",\n                        \"path\": \".\"\n                },\n                {\n                        \"name\": \"tock\",\n                        \"path\": \"third_party/tock\"\n                },\n                {\n                        \"name\": \"libtock-rs\",\n                        \"path\": \"third_party/libtock-rs\"\n                },\n                {\n                        \"name\": \"libtock-drivers\",\n                        \"path\": \"third_party/libtock-drivers\"\n                }\n        ],\n        \"settings\": {\n                \"clang-format.fallbackStyle\": \"google\",\n                \"editor.detectIndentation\": true,\n                \"editor.formatOnPaste\": false,\n                \"editor.formatOnSave\": true,\n                \"editor.formatOnType\": true,\n                \"editor.insertSpaces\": true,\n                \"editor.tabSize\": 4,\n                \"files.insertFinalNewline\": true,\n                \"files.trimTrailingWhitespace\": true,\n                // Ensure we use the toolchain we set in rust-toolchain file\n                \"rust-client.channel\": \"default\",\n                // The toolchain is updated from time to time so let's make sure that RLS is updated too\n                \"rust-client.updateOnStartup\": true,\n                \"rust.clippy_preference\": \"on\",\n                \"rust.target\": \"thumbv7em-none-eabi\",\n                \"rust.all_targets\": false,\n                // Try to make VSCode formating as close as possible to the Google style.\n                \"python.formatting.provider\": \"yapf\",\n                \"python.formatting.yapfArgs\": [\n                        \"--style=yapf\"\n                ],\n                \"python.linting.enabled\": true,\n                \"python.linting.lintOnSave\": true,\n                \"python.linting.pylintEnabled\": true,\n                \"python.linting.pylintPath\": \"pylint\",\n                \"[python]\": {\n                        \"editor.tabSize\": 2\n                },\n        },\n        \"extensions\": {\n                \"recommendations\": [\n                        \"davidanson.vscode-markdownlint\",\n                        \"rust-lang.rust\",\n                        \"ms-python.python\"\n                ]\n        }\n}\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.8642578125,
          "content": "# <img alt=\"OpenSK logo\" src=\"docs/img/OpenSK.svg\" width=\"200px\">\n\n![markdownlint](https://github.com/google/OpenSK/workflows/markdownlint/badge.svg?branch=2.1)\n[![Coverage Status](https://coveralls.io/repos/github/google/OpenSK/badge.svg?branch=2.1)](https://coveralls.io/github/google/OpenSK?branch=2.1)\n\n*News:*\n\n- 2023-08-24: [PQC paper reference](#Research)\n\n## OpenSK\n\nThis repository contains a Rust implementation of a\n[FIDO2](https://fidoalliance.org/fido2/) security key.\nSecurity keys are external devices that can be used for signing in on websites.\nYou can see OpenSK in action in this\n[video on YouTube](https://www.youtube.com/watch?v=klEozvpw0xg)!\n\nWe intend to bring a full open source experience to security keys, from\napplication to operating system. You can even 3D print your own open source\nenclosure!\n\n<img src=\"docs/img/enclosure.jpg\" alt=\"OpenSK Enclosure\" width=\"200\"/>\n\nYou can run OpenSK as a [Tock OS](https://tockos.org) application, or use the\nlibrary to bring OpenSK to your own hardware.\n\nYou are viewing the CTAP 2.1 version. This branch fixes bugs, but doesn't\nimplement new features. If you want to contribute, go to the\n[develop branch](https://github.com/google/OpenSK/tree/develop).\n\n### FIDO2\n\nOpenSK's version that implemented CTAP 2.0 was certified by the FIDO Alliance.\n\nThis branch implements version 2.1 of the\n[CTAP specification](https://fidoalliance.org/specs/fido-v2.1-ps-20210615/fido-client-to-authenticator-protocol-v2.1-ps-errata-20220621.html).\nThis branch is not FIDO certified.\nOpenSK supports U2F, and non-discoverable credentials created with either\nprotocol are compatible with the other.\n\n### :warning: Disclaimer\n\nThis is not an officially supported Google product.\n\nThis project is **proof-of-concept and a research platform**. It is **NOT**\nmeant for a daily usage. This branch is under development, and therefore less\nrigorously tested than the numbered branches.\n\nWe're still in the process of integrating the\n[ARM&reg; CryptoCell-310](https://developer.arm.com/ip-products/security-ip/cryptocell-300-family)\nembedded in the\n[Nordic nRF52840 chip](https://infocenter.nordicsemi.com/index.jsp?topic=%2Fps_nrf52840%2Fcryptocell.html)\nto enable hardware-accelerated cryptography.\nIn the meantime, there are 2 options for cryptography implementations:\n\n*   Our own placeholder implementation. The code is research quality and doesn't\n    provide constant-time guarantees.\n*   The [RustCrypto](https://github.com/RustCrypto) interface. Deploy with\n    `--rust-crypto`. Note that our own ECC implementation is faster and has\n    smaller binary size, so not all boards support RustCrypto yet.\n\n## Hardware\n\nYou will need one the following supported boards:\n\n*   [Nordic nRF52840-DK](https://www.nordicsemi.com/Software-and-Tools/Development-Kits/nRF52840-DK)\n    development kit. This board is more convenient for development and debug\n    scenarios as the JTAG probe is already on the board.\n*   [Nordic nRF52840 Dongle](https://www.nordicsemi.com/Software-and-tools/Development-Kits/nRF52840-Dongle)\n    to have a more practical form factor.\n*   [Makerdiary nRF52840-MDK USB dongle](https://wiki.makerdiary.com/nrf52840-mdk/).\n*   [Feitian OpenSK dongle](https://feitiantech.github.io/OpenSK_USB/).\n\n## Installation\n\nTo install OpenSK,\n1.  follow the [general setup steps](docs/install.md),\n1.  then continue with the instructions for your specific hardware:\n\t* [Nordic nRF52840-DK](docs/boards/nrf52840dk.md)\n\t* [Nordic nRF52840 Dongle](docs/boards/nrf52840_dongle.md)\n\t* [Makerdiary nRF52840-MDK USB dongle](docs/boards/nrf52840_mdk.md)\n\t* [Feitian OpenSK dongle](docs/boards/nrf52840_feitian.md)\n\nTo test whether the installation was successful, visit a\n[demo website](https://webauthn.io/) and try to register and login.\nPlease check our [Troubleshooting and Debugging](docs/debugging.md) section if you\nhave problems with the installation process or during development. To find out what\nelse you can do with your OpenSK, see [Customization](docs/customization.md).\n\n## Research\n\nWe implemented post-quantum cryptography on OpenSK. The code is released under\nthe [hybrid-pqc tag](https://github.com/google/OpenSK/releases/tag/hybrid-pqc).\nOur [paper](https://eprint.iacr.org/2022/1225) was published in the ACNS\nSecure Cryptographic Implementation workshop 2023 and won the best paper award.\n\n<details>\n<summary>Bibtex reference</summary>\n\n```\n@InProceedings{Ghinea2023hybrid,\n    author= {Diana Ghinea and Fabian Kaczmarczyck and Jennifer Pullman and Julien Cretin and Rafael Misoczki and Stefan Kölbl and Luca Invernizzi and Elie Bursztein and Jean-Michel Picod},\n    title=  {{Hybrid Post-Quantum Signatures in Hardware Security Keys}},\n    booktitle=  {{4th ACNS Workshop on Secure Cryptographic Implementation, Kyoto, Japan}},\n    month=  {June},\n    year=   {2023},\n}\n```\n\n</details>\n\n## Contributing\n\nSee [Contributing.md](docs/contributing.md).\n\n## Reporting a Vulnerability\n\nSee [SECURITY.md](SECURITY.md).\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.2763671875,
          "content": "To report a security issue, please use http://g.co/vulnz. We use\nhttp://g.co/vulnz for our intake, and do coordination and disclosure here on\nGitHub (including using GitHub Security Advisory). The Google Security Team will\nrespond within 5 working days of your report on g.co/vulnz.\n"
        },
        {
          "name": "boards",
          "type": "tree",
          "content": null
        },
        {
          "name": "bootloader",
          "type": "tree",
          "content": null
        },
        {
          "name": "build.rs",
          "type": "blob",
          "size": 2.3583984375,
          "content": "// Copyright 2019-2021 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nextern crate alloc;\n\nuse openssl::{bn, ec, nid};\nuse std::fs::File;\nuse std::io::{Read, Write};\nuse std::path::Path;\nuse std::{env, fs};\nuse uuid::Uuid;\n\nfn main() {\n    const UPGRADE_FILE: &str = \"crypto_data/opensk_upgrade_pub.pem\";\n    println!(\"cargo:rerun-if-changed=crypto_data/aaguid.txt\");\n    println!(\"cargo:rerun-if-changed={UPGRADE_FILE}\");\n    println!(\"cargo:rerun-if-changed=layout.ld\");\n    println!(\"cargo:rerun-if-changed=nrf52840_layout.ld\");\n    println!(\"cargo:rerun-if-changed=nrf52840_layout_a.ld\");\n    println!(\"cargo:rerun-if-changed=nrf52840_layout_b.ld\");\n\n    let out_dir = env::var_os(\"OUT_DIR\").unwrap();\n    let aaguid_bin_path = Path::new(&out_dir).join(\"opensk_aaguid.bin\");\n\n    let mut aaguid_bin_file = File::create(aaguid_bin_path).unwrap();\n    let mut aaguid_txt_file = File::open(\"crypto_data/aaguid.txt\").unwrap();\n    let mut content = String::new();\n    aaguid_txt_file.read_to_string(&mut content).unwrap();\n    content.truncate(36);\n    let aaguid = Uuid::parse_str(&content).unwrap();\n    aaguid_bin_file.write_all(aaguid.as_bytes()).unwrap();\n\n    // COSE encoding the public key, then write it out.\n    let pem_bytes = fs::read(UPGRADE_FILE).unwrap();\n    let ec_key = ec::EcKey::public_key_from_pem(&pem_bytes).ok().unwrap();\n    let group = ec::EcGroup::from_curve_name(nid::Nid::X9_62_PRIME256V1).unwrap();\n    let conversion_form = ec::PointConversionForm::UNCOMPRESSED;\n    let mut ctx = bn::BigNumContext::new().unwrap();\n    let raw_bytes = ec_key\n        .public_key()\n        .to_bytes(&group, conversion_form, &mut ctx)\n        .unwrap();\n    let upgrade_pubkey_path = Path::new(&out_dir).join(\"opensk_upgrade_pubkey.bin\");\n    let mut upgrade_pub_bin_file = File::create(upgrade_pubkey_path).unwrap();\n    upgrade_pub_bin_file.write_all(&raw_bytes).unwrap();\n}\n"
        },
        {
          "name": "deploy.py",
          "type": "blob",
          "size": 42.5439453125,
          "content": "#!py_virtual_env/bin/python3\n# Copyright 2019-2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n# Lint as: python3\n# pylint: disable=C0111\n\nfrom __future__ import absolute_import\nfrom __future__ import division\nfrom __future__ import print_function\n\nimport argparse\nimport collections\nimport copy\nimport os\nimport shutil\nimport subprocess\nimport sys\nimport time\nfrom typing import Dict, List, Tuple\n\nimport colorama\nfrom six.moves import input\nimport tockloader\nfrom tockloader import tab\nfrom tockloader import tbfh\nfrom tockloader import tockloader as loader\nfrom tockloader.exceptions import TockLoaderException\n\nimport tools.configure\nfrom tools.deploy_partition import create_metadata, load_priv_key, pad_to\n\nPROGRAMMERS = frozenset((\"jlink\", \"openocd\", \"pyocd\", \"nordicdfu\", \"none\"))\n\n# This structure allows us to support out-of-tree boards as well as (in the\n# future) more achitectures.\nOpenSKBoard = collections.namedtuple(\n    \"OpenSKBoard\",\n    [\n        # Location of the Tock board (where the Makefile file is)\n        \"path\",\n        # Target architecture (e.g. thumbv7em-none-eabi)\n        \"arch\",\n        # Size of 1 page of flash memory\n        \"page_size\",\n        # Flash address at which the kernel will be written\n        \"kernel_address\",\n        # Set to None if padding is not required for the board.\n        # This creates a fake Tock OS application that starts at the\n        # address specified by this parameter (must match the `prog` value\n        # specified on the board's `layout.ld` file) and will end at\n        # `app_address`.\n        \"padding_address\",\n        # If present, enforce that the firmware image equals this value,\n        # padding it with 0xFF bytes.\n        \"firmware_size\",\n        # Set to None if metadata is not required for the board.\n        # Writes the metadata that is checked by the custom bootloader for\n        # upgradable board.\n        \"metadata_address\",\n        # Linker script to produce a working app for this board\n        \"app_ldscript\",\n        # Flash address at which the app should be written\n        \"app_address\",\n        # Flash address of the storage\n        \"storage_address\",\n        # Size of the storage\n        \"storage_size\",\n        # Target name for flashing the board using pyOCD\n        \"pyocd_target\",\n        # The cfg file in OpenOCD board folder\n        \"openocd_board\",\n        # Options to tell Tockloader how to work with OpenOCD\n        # Default: []\n        \"openocd_options\",\n        # Dictionnary specifying custom commands for OpenOCD\n        # Default is an empty dict\n        # Valid keys are: program, read, erase\n        \"openocd_commands\",\n        # Interface to use with JLink (e.g. swd, jtag, etc.)\n        \"jlink_if\",\n        # Device name as supported by JLinkExe\n        \"jlink_device\",\n        # Whether Nordic DFU flashing method is supported\n        \"nordic_dfu\",\n    ])\n\nnrf52840dk_opensk_board = OpenSKBoard(\n    path=\"third_party/tock/boards/nordic/nrf52840dk_opensk\",\n    arch=\"thumbv7em-none-eabi\",\n    page_size=4096,\n    kernel_address=0,\n    padding_address=0x30000,\n    firmware_size=None,\n    metadata_address=None,\n    app_ldscript=\"nrf52840_layout.ld\",\n    app_address=0x40000,\n    storage_address=0xC0000,\n    storage_size=0x14000,\n    pyocd_target=\"nrf52840\",\n    openocd_board=\"nordic_nrf52840_dongle.cfg\",\n    openocd_options=[],\n    openocd_commands={},\n    jlink_if=\"swd\",\n    jlink_device=\"nrf52840_xxaa\",\n    nordic_dfu=False,\n)\n\nSUPPORTED_BOARDS = {\n    \"nrf52840dk_opensk\":\n        nrf52840dk_opensk_board,\n    \"nrf52840dk_opensk_a\":\n        nrf52840dk_opensk_board._replace(\n            path=nrf52840dk_opensk_board.path + \"_a\",\n            kernel_address=0x20000,\n            padding_address=None,\n            firmware_size=0x40000,\n            metadata_address=0x4000,\n            app_ldscript=\"nrf52840_layout_a.ld\",\n            app_address=0x40000,\n        ),\n    \"nrf52840dk_opensk_b\":\n        nrf52840dk_opensk_board._replace(\n            path=nrf52840dk_opensk_board.path + \"_b\",\n            kernel_address=0x60000,\n            padding_address=None,\n            firmware_size=0x40000,\n            metadata_address=0x5000,\n            app_ldscript=\"nrf52840_layout_b.ld\",\n            app_address=0x80000,\n        ),\n    \"nrf52840_dongle_opensk\":\n        nrf52840dk_opensk_board._replace(\n            path=\"third_party/tock/boards/nordic/nrf52840_dongle_opensk\",),\n    \"nrf52840_dongle_dfu\":\n        nrf52840dk_opensk_board._replace(\n            path=\"third_party/tock/boards/nordic/nrf52840_dongle_dfu\",\n            kernel_address=0x1000,\n            nordic_dfu=True,\n        ),\n    \"nrf52840_mdk_dfu\":\n        nrf52840dk_opensk_board._replace(\n            path=\"third_party/tock/boards/nordic/nrf52840_mdk_dfu\",\n            kernel_address=0x1000,\n            nordic_dfu=True,\n        ),\n}\n\n# The following value must match the one used in the file\n# `src/entry_point.rs`\nAPP_HEAP_SIZE = 90_000\n\nCARGO_TARGET_DIR = os.environ.get(\"CARGO_TARGET_DIR\", \"target\")\n\n\ndef get_supported_boards() -> Tuple[str]:\n  \"\"\"Returns a tuple all valid supported boards.\"\"\"\n  boards = []\n  for name, props in SUPPORTED_BOARDS.items():\n    if all((os.path.exists(os.path.join(props.path, \"Cargo.toml\")),\n            (props.app_ldscript and os.path.exists(props.app_ldscript)))):\n      boards.append(name)\n  return tuple(set(boards))\n\n\ndef fatal(msg: str):\n  print(f\"{colorama.Fore.RED + colorama.Style.BRIGHT}fatal:\"\n        f\"{colorama.Style.RESET_ALL} {msg}\")\n  sys.exit(1)\n\n\ndef error(msg: str):\n  print(f\"{colorama.Fore.RED}error:{colorama.Style.RESET_ALL} {msg}\")\n\n\ndef info(msg: str):\n  print(f\"{colorama.Fore.GREEN + colorama.Style.BRIGHT}info:\"\n        f\"{colorama.Style.RESET_ALL} {msg}\")\n\n\ndef assert_mandatory_binary(binary_name: str):\n  if not shutil.which(binary_name):\n    fatal((f\"Couldn't find {binary_name} binary. Make sure it is installed and \"\n           \"that your PATH is set correctly.\"))\n\n\ndef assert_python_library(module: str):\n  try:\n    __import__(module)\n  except ModuleNotFoundError:\n    fatal((f\"Couldn't load python3 module {module}. \"\n           f\"Try to run: pip3 install {module}\"))\n\n\nclass RemoveConstAction(argparse.Action):\n\n  # pylint: disable=redefined-builtin\n  # pylint: disable=too-many-positional-arguments\n  def __init__(self,\n               option_strings,\n               dest,\n               const,\n               default=None,\n               required=False,\n               help=None,\n               metavar=None):\n    super().__init__(\n        option_strings=option_strings,\n        dest=dest,\n        nargs=0,\n        const=const,\n        default=default,\n        required=required,\n        help=help,\n        metavar=metavar)\n\n  def __call__(self, parser, namespace, values, option_string=None):\n    # Code is simply a modified version of the AppendConstAction from argparse\n    # https://github.com/python/cpython/blob/master/Lib/argparse.py#L138-L147\n    # https://github.com/python/cpython/blob/master/Lib/argparse.py#L1028-L1052\n    items = getattr(namespace, self.dest, [])\n    if items is None:\n      items = []\n    if isinstance(items, list):\n      items = items[:]\n    else:\n      items = copy.copy(items)\n    if self.const in items:\n      items.remove(self.const)\n    setattr(namespace, self.dest, items)\n\n\nclass OpenSKInstaller:\n  \"\"\"Checks, builds and installs various parts of OpenSK.\n\n  This module can perform the following tasks:\n    - build and install Tock OS\n    - check, build and install the main ctap2 application\n    - build and install example applications\n    - write padding\n    - erase apps and persistent storage\n    - write metadata entries for upgradable boards\n\n    OpenSKInstaller(args).run()\n  \"\"\"\n\n  def __init__(self, args):\n    self.args = args\n    # Where all the TAB files should go\n    self.tab_folder = os.path.join(CARGO_TARGET_DIR, \"tab\")\n    board = SUPPORTED_BOARDS[self.args.board]\n    self.tockloader_default_args = argparse.Namespace(\n        app_address=board.app_address,\n        arch=board.arch,\n        board=self.args.board,\n        bundle_apps=False,\n        debug=False,\n        force=False,\n        jlink_cmd=\"JLinkExe\",\n        jlink=self.args.programmer == \"jlink\",\n        jlink_device=board.jlink_device,\n        jlink_if=board.jlink_if,\n        jlink_speed=1200,\n        openocd=self.args.programmer == \"openocd\",\n        openocd_board=board.openocd_board,\n        openocd_cmd=self.args.openocd_cmd,\n        openocd_commands=copy.copy(board.openocd_commands),\n        openocd_options=copy.copy(board.openocd_options),\n        jtag=False,\n        no_bootloader_entry=False,\n        page_size=board.page_size,\n        port=None,\n    )\n\n  def checked_command(self,\n                      cmd: List[str],\n                      env: Dict[str, str] = None,\n                      cwd: str = None):\n    \"\"\"Executes the given command.\n\n    Outside of debug mode, the command's output is muted. Exits if the called\n    process returns an error.\n\n    Args:\n      cmd: A list of strings. The first string is the command, the other list\n      elements are parameters to that command.\"\n      env: The dictionary of environment variables.\n      cwd: The directory to execute from.\n    \"\"\"\n    stdout = None if self.args.verbose_build else subprocess.DEVNULL\n    try:\n      subprocess.run(\n          cmd, stdout=stdout, timeout=None, check=True, env=env, cwd=cwd)\n    except subprocess.CalledProcessError as e:\n      fatal(f\"Failed to execute {cmd[0]}: {str(e)}\")\n\n  def checked_command_output(self,\n                             cmd: List[str],\n                             env: Dict[str, str] = None,\n                             cwd: str = None) -> str:\n    \"\"\"Executes cmd like checked_command, but returns the output.\"\"\"\n    cmd_output = \"\"\n    try:\n      cmd_output = subprocess.run(\n          cmd,\n          stdout=subprocess.PIPE,\n          timeout=None,\n          check=True,\n          env=env,\n          cwd=cwd).stdout\n    except subprocess.CalledProcessError as e:\n      fatal(f\"Failed to execute {cmd[0]}: {str(e)}\")\n      # Unreachable because fatal() will exit\n    return cmd_output.decode()\n\n  def build_tockos(self):\n    \"\"\"Buids Tock OS with the parameters specified in args.\"\"\"\n    info(f\"Building Tock OS for board {self.args.board}\")\n    props = SUPPORTED_BOARDS[self.args.board]\n    out_directory = os.path.join(\"third_party\", \"tock\", \"target\", props.arch,\n                                 \"release\")\n    os.makedirs(out_directory, exist_ok=True)\n\n    env = os.environ.copy()\n    if self.args.verbose_build:\n      env[\"V\"] = \"1\"\n    if \"vendor_hid\" in self.args.features:\n      env[\"CARGO_FLAGS\"] = \"--features=vendor_hid\"\n    self.checked_command([\"make\"], cwd=props.path, env=env)\n\n  def build_example(self):\n    \"\"\"Builds an example with the name from args.\"\"\"\n    info(f\"Building example {self.args.application}\")\n    self._build_app_or_example(is_example=True)\n\n  def build_opensk(self):\n    \"\"\"Runs essential tests in OpenSK, then builds it if successful.\"\"\"\n    info(\"Building OpenSK application\")\n    self._check_invariants()\n    self._build_app_or_example(is_example=False)\n\n  def build_bootloader(self):\n    \"\"\"Builds the upgrade bootloader.\"\"\"\n    props = SUPPORTED_BOARDS[self.args.board]\n    info(\"Building bootloader\")\n    rust_flags = [\n        f\"--remap-path-prefix={os.getcwd()}=\",\n        \"-C\",\n        \"link-arg=-Wl,-Tlink.x\",\n        \"-C\",\n        \"link-arg=-nostartfiles\",\n    ]\n    env = os.environ.copy()\n    env[\"RUSTFLAGS\"] = \" \".join(rust_flags)\n    cargo_command = [\"cargo\", \"build\", \"--release\", f\"--target={props.arch}\"]\n    self.checked_command(cargo_command, cwd=\"bootloader\", env=env)\n    binary_path = os.path.join(CARGO_TARGET_DIR, props.arch, \"release\",\n                               \"bootloader\")\n    objcopy_command = [\n        \"llvm-objcopy\", \"-O\", \"binary\", binary_path, f\"{binary_path}.bin\"\n    ]\n    self.checked_command(objcopy_command, cwd=\"bootloader\")\n\n  def flash_bootloader(self):\n    \"\"\"Flashes the upgrade bootloader.\"\"\"\n    props = SUPPORTED_BOARDS[self.args.board]\n    info(\"Flashing bootloader\")\n    bin_file = os.path.join(\"bootloader\", \"target\", props.arch, \"release\",\n                            \"bootloader.bin\")\n    if not os.path.exists(bin_file):\n      fatal(f\"File not found: {bin_file}\")\n    with open(bin_file, \"rb\") as bootloader_bin:\n      bootloader = bootloader_bin.read()\n    self.write_binary(bootloader, 0)\n\n  def _build_app_or_example(self, is_example: bool):\n    \"\"\"Builds the application specified through args.\n\n    This function specifies the used compile time flags, specifying the linker\n    script and reducing the binary size. It compiles the application and calls\n    elf2tab to create a TAB file out of the produced binary.\n\n    The settings in self.args have to match is_example.\n\n    Args:\n      is_example: Whether args.application is an example or the main ctap2 app.\n    \"\"\"\n    assert self.args.application\n    # Ideally we would build a TAB file for all boards at once but depending on\n    # the chip on the board, the link script could be totally different.\n    # And elf2tab doesn't seem to let us set the boards a TAB file has been\n    # created for. So at the moment we only build for the selected board.\n    props = SUPPORTED_BOARDS[self.args.board]\n    rust_flags = [\n        \"-C\",\n        f\"link-arg=-T{props.app_ldscript}\",\n        \"-C\",\n        \"relocation-model=static\",\n        \"-D\",\n        \"warnings\",\n        f\"--remap-path-prefix={os.getcwd()}=\",\n        \"-C\",\n        \"link-arg=-icf=all\",\n        \"-C\",\n        \"force-frame-pointers=no\",\n    ]\n    env = os.environ.copy()\n    env[\"RUSTFLAGS\"] = \" \".join(rust_flags)\n    env[\"APP_HEAP_SIZE\"] = str(APP_HEAP_SIZE)\n\n    command = [\n        \"cargo\",\n        \"build\",\n        \"--release\",\n        f\"--target={props.arch}\",\n        f\"--features={','.join(self.args.features)}\"  # pylint: disable=W1405\n    ]\n    if is_example:\n      command.extend([\"--example\", self.args.application])\n    if self.args.verbose_build:\n      command.append(\"--verbose\")\n    self.checked_command(command, env=env)\n    app_path = os.path.join(CARGO_TARGET_DIR, props.arch, \"release\")\n    if is_example:\n      app_path = os.path.join(app_path, \"examples\")\n    app_path = os.path.join(app_path, self.args.application)\n    # Create a TAB file\n    self.create_tab_file({props.arch: app_path})\n\n  def _check_invariants(self):\n    \"\"\"Runs selected unit tests to check preconditions in the code.\"\"\"\n    print(\"Testing invariants in customization.rs...\")\n    features = [\"std\"]\n    features.extend(self.args.features)\n    self.checked_command_output([\n        \"cargo\",\n        \"test\",\n        f\"--features={','.join(features)}\",  # pylint: disable=W1405\n        \"--lib\",\n        \"customization\"\n    ])\n\n  def generate_crypto_materials(self, force_regenerate: bool):\n    \"\"\"Calls a shell script that generates cryptographic material.\"\"\"\n    has_error = subprocess.call([\n        os.path.join(\"tools\", \"gen_key_materials.sh\"),\n        \"Y\" if force_regenerate else \"N\",\n    ])\n    if has_error:\n      error((\"Something went wrong while trying to generate ECC \"\n             \"key and/or certificate for OpenSK\"))\n\n  def create_tab_file(self, binary_names: Dict[str, str]):\n    \"\"\"Checks and uses elf2tab to generated an TAB file out of the binaries.\"\"\"\n    assert binary_names\n    assert self.args.application\n    info(\"Generating Tock TAB file for application/example \"\n         f\"{self.args.application}\")\n    elf2tab_ver = self.checked_command_output(\n        [\"elf2tab/bin/elf2tab\", \"--version\"]).split(\n            \"\\n\", maxsplit=1)[0]\n    if elf2tab_ver != \"elf2tab 0.10.2\":\n      error((\"Detected unsupported elf2tab version {elf2tab_ver!a}! The \"\n             \"following commands may fail. Please use 0.10.2 instead.\"))\n    os.makedirs(self.tab_folder, exist_ok=True)\n    tab_filename = os.path.join(self.tab_folder, f\"{self.args.application}.tab\")\n    supported_kernel = (2, 1)\n    elf2tab_args = [\n        \"elf2tab/bin/elf2tab\", \"--deterministic\", \"--package-name\",\n        self.args.application, f\"--kernel-major={supported_kernel[0]}\",\n        f\"--kernel-minor={supported_kernel[1]}\", \"-o\", tab_filename\n    ]\n    if self.args.verbose_build:\n      elf2tab_args.append(\"--verbose\")\n    stack_sizes = set()\n    for arch, app_file in binary_names.items():\n      dest_file = os.path.join(self.tab_folder, f\"{arch}.elf\")\n      shutil.copyfile(app_file, dest_file)\n      elf2tab_args.append(dest_file)\n      # extract required stack size directly from binary\n      nm = self.checked_command_output(\n          [\"nm\", \"--print-size\", \"--radix=x\", app_file])\n      for line in nm.splitlines():\n        if \"STACK_MEMORY\" in line:\n          required_stack_size = int(line.split(\" \", maxsplit=2)[1], 16)\n          stack_sizes.add(required_stack_size)\n    if len(stack_sizes) != 1:\n      error(\"Detected different stack sizes across tab files.\")\n    # `protected-region-size` must match the `TBF_HEADER_SIZE`\n    # (currently 0x60 = 96 bytes)\n    elf2tab_args.extend([\n        f\"--stack={stack_sizes.pop()}\", f\"--app-heap={APP_HEAP_SIZE}\",\n        \"--kernel-heap=1024\", \"--protected-region-size=96\"\n    ])\n    if self.args.elf2tab_output:\n      output = self.checked_command_output(elf2tab_args)\n      self.args.elf2tab_output.write(output)\n    else:\n      self.checked_command(elf2tab_args)\n\n  def install_tab_file(self, tab_filename: str):\n    \"\"\"Calls Tockloader to install a TAB file.\"\"\"\n    assert self.args.application\n    info(f\"Installing Tock application {self.args.application}\")\n    args = copy.copy(self.tockloader_default_args)\n    setattr(args, \"erase\", self.args.clear_apps)\n    setattr(args, \"make\", False)\n    setattr(args, \"no_replace\", False)\n    tock = loader.TockLoader(args)\n    tock.open()\n    tabs = [tab.TAB(tab_filename)]\n    try:\n      tock.install(tabs, replace=\"yes\", erase=args.erase)\n    except TockLoaderException as e:\n      fatal(\"Couldn't install Tock application \"\n            f\"{self.args.application}: {str(e)}\")\n\n  def get_padding(self) -> bytes:\n    \"\"\"Creates a padding application binary.\"\"\"\n    padding = tbfh.TBFHeaderPadding(\n        SUPPORTED_BOARDS[self.args.board].app_address -\n        SUPPORTED_BOARDS[self.args.board].padding_address)\n    return padding.get_binary()\n\n  def write_binary(self, binary: bytes, address: int):\n    \"\"\"Writes a binary to the device's flash at the given address.\"\"\"\n    tock = loader.TockLoader(self.tockloader_default_args)\n    tock.open()\n    try:\n      tock.flash_binary(binary, address)\n    except TockLoaderException as e:\n      fatal(f\"Couldn't write binary: {str(e)}\")\n\n  def read_kernel(self) -> bytes:\n    \"\"\"Reads the kernel file from disk and returns it as a byte array.\"\"\"\n    board_props = SUPPORTED_BOARDS[self.args.board]\n    kernel_file = os.path.join(\"third_party\", \"tock\", \"target\",\n                               board_props.arch, \"release\",\n                               f\"{self.args.board}.bin\")\n    if not os.path.exists(kernel_file):\n      fatal(f\"File not found: {kernel_file}\")\n    with open(kernel_file, \"rb\") as firmware:\n      kernel = firmware.read()\n\n    # Pads the kernel to the expected length.\n    if board_props.padding_address is None:\n      end_address = board_props.app_address\n    else:\n      end_address = board_props.padding_address\n    kernel_size = end_address - board_props.kernel_address\n    return pad_to(kernel, kernel_size)\n\n  def install_tock_os(self):\n    \"\"\"Reads the kernel from disk and writes it to the device's flash.\"\"\"\n    kernel = self.read_kernel()\n    board_props = SUPPORTED_BOARDS[self.args.board]\n    self.write_binary(kernel, board_props.kernel_address)\n\n  def install_padding(self):\n    \"\"\"Generates a padding application and writes it to the address in args.\"\"\"\n    board_props = SUPPORTED_BOARDS[self.args.board]\n    if board_props.padding_address is None:\n      return\n    info(\"Flashing padding application\")\n    self.write_binary(self.get_padding(), board_props.padding_address)\n\n  def install_metadata(self):\n    \"\"\"Generates and writes firmware metadata at the metadata address.\"\"\"\n    board_props = SUPPORTED_BOARDS[self.args.board]\n    if board_props.metadata_address is None:\n      return\n\n    kernel = self.read_kernel()\n    app_tab_path = f\"{CARGO_TARGET_DIR}/tab/ctap2.tab\"\n    if not os.path.exists(app_tab_path):\n      fatal(f\"File not found: {app_tab_path}\")\n    app_tab = tab.TAB(app_tab_path)\n    arch = board_props.arch\n    if arch not in app_tab.get_supported_architectures():\n      fatal(f\"Architecture not found: {arch}\")\n    app = app_tab.extract_app(arch).get_binary(board_props.app_address)\n\n    kernel_size = board_props.app_address - board_props.kernel_address\n    app_size = board_props.firmware_size - kernel_size\n    # The kernel is already padded when read.\n    firmware_image = kernel + pad_to(app, app_size)\n\n    priv_key = load_priv_key(self.args.upgrade_priv_key)\n    metadata = create_metadata(firmware_image, board_props.kernel_address,\n                               self.args.version, priv_key)\n    if self.args.verbose_build:\n      info(f\"Metadata bytes: {metadata}\")\n\n    info(\"Flashing metadata application\")\n    self.write_binary(metadata, board_props.metadata_address)\n\n  def clear_apps(self):\n    \"\"\"Uses Tockloader to erase all applications on the device.\"\"\"\n    args = copy.copy(self.tockloader_default_args)\n    # Ensure we don't force erase all apps but only the apps starting\n    # at `board.app_address`. This makes sure we don't erase the padding.\n    setattr(args, \"force\", False)\n    info(\"Erasing all installed applications\")\n    tock = loader.TockLoader(args)\n    tock.open()\n    try:\n      tock.erase_apps()\n    except TockLoaderException as e:\n      # Erasing apps is not critical\n      info(f\"A non-critical error occurred while erasing apps: {str(e)}\")\n\n  def clear_storage(self):\n    \"\"\"Overwrites the storage's flash with 0xFF bytes.\"\"\"\n    if self.args.programmer == \"none\":\n      return 0\n    info(\"Erasing the persistent storage\")\n    board_props = SUPPORTED_BOARDS[self.args.board]\n    # Use tockloader if possible\n    if self.args.programmer in (\"jlink\", \"openocd\"):\n      storage = bytes([0xFF] * board_props.storage_size)\n      self.write_binary(storage, board_props.storage_address)\n      return 0\n    if self.args.programmer == \"pyocd\":\n      self.checked_command([\n          \"pyocd\", \"erase\", f\"--target={board_props.pyocd_target}\", \"--sector\",\n          f\"{board_props.storage_address}+{board_props.storage_size}\"\n      ])\n      return 0\n    fatal(f\"Programmer {self.args.programmer} is not supported.\")\n\n  # pylint: disable=protected-access\n  def verify_flashed_app(self, expected_app: str) -> bool:\n    \"\"\"Uses Tockloader to check if an app of the expected name was written.\"\"\"\n    if self.args.programmer not in (\"jlink\", \"openocd\"):\n      return False\n    tock = loader.TockLoader(self.tockloader_default_args)\n    tock.open()\n    app_found = False\n    with tock._start_communication_with_board():\n      apps = [app.get_name() for app in tock._extract_all_app_headers()]\n      app_found = expected_app in apps\n    return app_found\n\n  def create_hex_file(self, dest_file: str):\n    \"\"\"Creates an intelhex file from the kernel and app binaries on disk.\"\"\"\n    # We produce an intelhex file with everything in it\n    # https://en.wikipedia.org/wiki/Intel_HEX\n    # pylint: disable=g-import-not-at-top,import-outside-toplevel\n    import intelhex\n    board_props = SUPPORTED_BOARDS[self.args.board]\n    final_hex = intelhex.IntelHex()\n\n    if self.args.tockos:\n      # Process kernel\n      kern_hex = intelhex.IntelHex()\n      kern_hex.frombytes(self.read_kernel(), offset=board_props.kernel_address)\n      final_hex.merge(kern_hex, overlap=\"error\")\n\n    if self.args.application:\n      # Add padding\n      if board_props.padding_address:\n        padding_hex = intelhex.IntelHex()\n        padding_hex.frombytes(\n            self.get_padding(), offset=board_props.padding_address)\n        final_hex.merge(padding_hex, overlap=\"error\")\n\n      # Now we can add the application from the TAB file\n      app_tab_path = f\"{CARGO_TARGET_DIR}/tab/{self.args.application}.tab\"\n      assert os.path.exists(app_tab_path)\n      app_tab = tab.TAB(app_tab_path)\n      if board_props.arch not in app_tab.get_supported_architectures():\n        fatal((\"It seems that the TAB file was not produced for the \"\n               \"architecture {board_props.arch}\"))\n      app_hex = intelhex.IntelHex()\n      tab_bytes = app_tab.extract_app(board_props.arch).get_binary(\n          board_props.app_address)\n      if tab_bytes is None:\n        fatal(\"The extracted bytes from the TAB file are none\")\n      app_hex.frombytes(tab_bytes, offset=board_props.app_address)\n      final_hex.merge(app_hex)\n    info(f\"Generating all-merged HEX file: {dest_file}\")\n    final_hex.tofile(dest_file, format=\"hex\")\n\n  def check_prerequisites(self):\n    \"\"\"Checks versions of the used tools, exits on version mismatch.\"\"\"\n    if not tockloader.__version__.startswith(\"1.5.\"):\n      fatal((\"Your version of tockloader seems incompatible: found \"\n             f\"{tockloader.__version__}, expected 1.5.x.\"))\n\n    if self.args.programmer == \"jlink\":\n      assert_mandatory_binary(\"JLinkExe\")\n\n    if self.args.programmer == \"openocd\":\n      assert_mandatory_binary(\"openocd\")\n\n    if self.args.programmer == \"pyocd\":\n      assert_mandatory_binary(\"pyocd\")\n      assert_python_library(\"intelhex\")\n      if not SUPPORTED_BOARDS[self.args.board].pyocd_target:\n        fatal(\"This board doesn't seem to support flashing through pyocd.\")\n\n    if self.args.programmer == \"nordicdfu\":\n      assert_mandatory_binary(\"nrfutil\")\n      assert_python_library(\"intelhex\")\n      assert_python_library(\"nordicsemi.lister\")\n      nrfutil_version = __import__(\"nordicsemi.version\").version.NRFUTIL_VERSION\n      if not nrfutil_version.startswith(\"6.\"):\n        fatal((\"You need to install nrfutil python3 package v6.0 or above. \"\n               f\"Found: v{nrfutil_version}. If you use Python >= 3.11, please \"\n               \"try version 3.10.\"))\n      if not SUPPORTED_BOARDS[self.args.board].nordic_dfu:\n        fatal(\"This board doesn't support flashing over DFU.\")\n\n    if self.args.programmer == \"none\":\n      assert_python_library(\"intelhex\")\n\n  def configure_device(self):\n    \"\"\"Checks the device configuration, and sets it according to args.\"\"\"\n    configure_response = tools.configure.main(\n        argparse.Namespace(\n            batch=False,\n            certificate=self.args.config_cert,\n            priv_key=self.args.config_pkey,\n            lock=self.args.lock_device,\n            use_vendor_hid=\"vendor_hid\" in self.args.features,\n        ))\n    if not configure_response:\n      return None\n    return configure_response[0]\n\n  def run(self) -> int:\n    \"\"\"Reads args to decide and run all required tasks.\"\"\"\n    self.check_prerequisites()\n\n    if not (self.args.tockos or self.args.application or\n            self.args.clear_storage or self.args.configure):\n      info(\"Nothing to do.\")\n      return 0\n\n    if self.args.check_patches:\n      subprocess.run([\"./maintainers/patches\", \"check\"], check=False)\n\n    # Compile what needs to be compiled\n    board_props = SUPPORTED_BOARDS[self.args.board]\n    if self.args.tockos:\n      self.build_tockos()\n\n    if board_props.metadata_address is not None:\n      self.build_bootloader()\n\n    if self.args.application == \"ctap2\":\n      self.generate_crypto_materials(self.args.regenerate_keys)\n      self.build_opensk()\n    elif self.args.application is None:\n      info(\"No application selected.\")\n    else:\n      self.build_example()\n      self.args.configure = False\n\n    # Erase persistent storage\n    if self.args.clear_storage:\n      self.clear_storage()\n\n    # Flashing\n    if self.args.programmer in (\"jlink\", \"openocd\"):\n      # We rely on Tockloader to do the job\n      if self.args.clear_apps:\n        self.clear_apps()\n      if self.args.tockos:\n        # Install Tock OS\n        self.install_tock_os()\n      if board_props.metadata_address is not None:\n        # Install the bootloader\n        self.flash_bootloader()\n      # Install padding and application if needed\n      if self.args.application:\n        self.install_padding()\n        self.install_tab_file(\n            f\"{CARGO_TARGET_DIR}/tab/{self.args.application}.tab\")\n        self.install_metadata()\n        if not self.verify_flashed_app(self.args.application):\n          error((\"It seems that something went wrong. App/example not found \"\n                 \"on your board. Ensure the connections between the programmer \"\n                 \"and the board are correct.\"))\n          return 1\n\n    elif self.args.programmer in (\"pyocd\", \"nordicdfu\", \"none\"):\n      dest_file = f\"{CARGO_TARGET_DIR}/{self.args.board}_merged.hex\"\n      os.makedirs(CARGO_TARGET_DIR, exist_ok=True)\n      self.create_hex_file(dest_file)\n\n      if self.args.programmer == \"pyocd\":\n        info(\"Flashing HEX file\")\n        self.checked_command([\n            \"pyocd\", \"flash\", f\"--target={board_props.pyocd_target}\",\n            \"--format=hex\", \"--erase=auto\", dest_file\n        ])\n      if self.args.programmer == \"nordicdfu\":\n        info(\"Creating DFU package\")\n        dfu_pkg_file = f\"{CARGO_TARGET_DIR}/{self.args.board}_dfu.zip\"\n        self.checked_command([\n            \"nrfutil\", \"pkg\", \"generate\", \"--hw-version=52\", \"--sd-req=0\",\n            \"--application-version=1\", f\"--application={dest_file}\",\n            dfu_pkg_file\n        ])\n        info(\n            \"Please insert the dongle and switch it to DFU mode by keeping the \"\n            \"button pressed while inserting...\")\n        info(\"Press [ENTER] when ready.\")\n        _ = input()\n        # Search for the DFU devices\n        serial_number = []\n        # pylint: disable=g-import-not-at-top,import-outside-toplevel\n        from nordicsemi.lister import device_lister\n        for device in device_lister.DeviceLister().enumerate():\n          if device.vendor_id == \"1915\" and device.product_id == \"521F\":\n            serial_number.append(device.serial_number)\n        if not serial_number:\n          fatal(\"Couldn't find any DFU device on your system.\")\n        if len(serial_number) > 1:\n          fatal(\"Multiple DFU devices are detected. Please only connect one.\")\n        # Run the command without capturing stdout so that we show progress\n        info(\"Flashing device using DFU...\")\n        dfu_return_code = subprocess.run(\n            [\n                \"nrfutil\", \"dfu\", \"usb-serial\", f\"--package={dfu_pkg_file}\",\n                f\"--serial-number={serial_number[0]}\"\n            ],\n            check=False,\n            timeout=None,\n        ).returncode\n        if dfu_return_code != 0:\n          return dfu_return_code\n\n    # Configure OpenSK through vendor specific command if needed\n    if self.args.programmer == \"none\":\n      if any([\n          self.args.lock_device,\n          self.args.config_cert,\n          self.args.config_pkey,\n      ]):\n        fatal(\"Unexpected arguments to configure your device. Since you \"\n              \"selected the programmer \\\"none\\\", the device is not ready to be \"\n              \"configured yet.\")\n      return 0\n\n    # Perform checks if OpenSK was flashed.\n    if self.args.application == \"ctap2\" or self.args.configure:\n      self.configure()\n    return 0\n\n  def print_configure_help(self):\n    vendor_hid = \" --vendor-hid\" if \"vendor_hid\" in self.args.features else \"\"\n    info(\"Your device is not yet configured, and lacks some functionality. \"\n         \"You can check its configuration status with:\\n\\n\"\n         f\"./tools/configure.py{vendor_hid}\\n\\n\"\n         \"If you run into issues, this command might help:\\n\\n\"\n         f\"./tools/configure.py{vendor_hid} \\\\\\n\"\n         \"    --certificate=crypto_data/opensk_cert.pem \\\\\\n\"\n         \"    --private-key=crypto_data/opensk.key\\n\\n\"\n         \"Please read the Certificate considerations in docs/customization.md\"\n         \" to understand the privacy trade-off.\")\n\n  def configure(self):\n    info(\"Configuring device.\")\n    # Trying to check or configure the device. Booting might take some time.\n    for i in range(5):\n      # Increasing wait time, total of 10 seconds.\n      time.sleep(i)\n      devices = tools.configure.get_opensk_devices(False)\n      if devices:\n        break\n\n    if not devices:\n      self.print_configure_help()\n      fatal(\"No device to configure found.\")\n    status = self.configure_device()\n    if not status:\n      fatal(\"Could not read device configuration.\")\n\n    if status[\"cert\"] and status[\"pkey\"]:\n      info(\"You're all set!\")\n    else:\n      self.print_configure_help()\n    return 0\n\n\ndef main(args):\n  \"\"\"Verifies some args, then runs a new OpenSKInstaller.\"\"\"\n  colorama.init()\n\n  # Make sure the current working directory is the right one before running\n  os.chdir(os.path.realpath(os.path.dirname(__file__)))\n\n  if args.listing == \"boards\":\n    print(os.linesep.join(get_supported_boards()))\n    return 0\n\n  if args.listing == \"programmers\":\n    print(os.linesep.join(PROGRAMMERS))\n    return 0\n\n  if args.listing:\n    # Missing check?\n    fatal(f\"Listing {args.listing} is not implemented.\")\n\n  OpenSKInstaller(args).run()\n\n\nif __name__ == \"__main__\":\n  main_parser = argparse.ArgumentParser()\n  action_group = main_parser.add_mutually_exclusive_group(required=True)\n  action_group.add_argument(\n      \"--list\",\n      metavar=\"WHAT\",\n      choices=(\"boards\", \"programmers\"),\n      default=None,\n      dest=\"listing\",\n      help=\"List supported boards or programmers, 1 per line and then exit.\",\n  )\n  action_group.add_argument(\n      \"--board\",\n      metavar=\"BOARD_NAME\",\n      dest=\"board\",\n      default=None,\n      choices=get_supported_boards(),\n      help=\"Indicates which board Tock OS will be compiled for.\",\n  )\n\n  main_parser.add_argument(\n      \"--dont-clear-apps\",\n      action=\"store_false\",\n      default=True,\n      dest=\"clear_apps\",\n      help=(\"When installing an application, previously installed \"\n            \"applications won't be erased from the board.\"),\n  )\n  main_parser.add_argument(\n      \"--clear-storage\",\n      action=\"store_true\",\n      default=False,\n      dest=\"clear_storage\",\n      help=(\"Erases the persistent storage when installing an application. \"\n            \"All stored data will be permanently lost.\"),\n  )\n  main_parser.add_argument(\n      \"--lock-device\",\n      action=\"store_true\",\n      default=False,\n      dest=\"lock_device\",\n      help=(\"Try to disable JTAG at the end of the operations. This \"\n            \"operation may fail if the device is already locked or if \"\n            \"the certificate/private key are not programmed.\"\n            \"Currently not implemented on nrf52840 and always fails.\"),\n  )\n  main_parser.add_argument(\n      \"--inject-certificate\",\n      default=None,\n      metavar=\"PEM_FILE\",\n      type=argparse.FileType(\"rb\"),\n      dest=\"config_cert\",\n      help=(\"If this option is set, the corresponding certificate \"\n            \"will be programmed into the key as the last operation.\"),\n  )\n  main_parser.add_argument(\n      \"--inject-private-key\",\n      default=None,\n      metavar=\"PEM_FILE\",\n      type=argparse.FileType(\"rb\"),\n      dest=\"config_pkey\",\n      help=(\"If this option is set, the corresponding private key \"\n            \"will be programmed into the key as the last operation.\"),\n  )\n  main_parser.add_argument(\n      \"--programmer\",\n      metavar=\"METHOD\",\n      dest=\"programmer\",\n      choices=PROGRAMMERS,\n      default=\"jlink\",\n      help=(\"Sets the method to be used to flash Tock OS or the application \"\n            \"on the target board.\"),\n  )\n  main_parser.add_argument(\n      \"--openocd_cmd\",\n      dest=\"openocd_cmd\",\n      metavar=\"CMD\",\n      default=\"openocd\",\n      help=(\"Specifies a custom command to use when calling openocd. Can be \"\n            \"used to pass arguments i.e. 'openocd -s /tmp/openocd_scripts'.\"),\n  )\n\n  main_parser.add_argument(\n      \"--no-tockos\",\n      action=\"store_false\",\n      default=True,\n      dest=\"tockos\",\n      help=(\"Only compiles and flash the application/example. \"\n            \"Otherwise TockOS will also be bundled and flashed.\"),\n  )\n  main_parser.add_argument(\n      \"--verbose-build\",\n      action=\"store_true\",\n      default=False,\n      dest=\"verbose_build\",\n      help=\"Build everything in verbose mode.\",\n  )\n\n  main_parser.add_argument(\n      \"--panic-console\",\n      action=\"append_const\",\n      const=\"panic_console\",\n      dest=\"features\",\n      help=(\"In case of application panic, the console will be used to \"\n            \"output messages before starting blinking the LEDs on the \"\n            \"board.\"),\n  )\n  main_parser.add_argument(\n      \"--debug\",\n      action=\"append_const\",\n      const=\"debug_ctap\",\n      dest=\"features\",\n      help=(\"Compiles and installs the OpenSK application in debug mode \"\n            \"(i.e. more debug messages will be sent over the console port \"\n            \"such as hexdumps of packets).\"),\n  )\n  main_parser.add_argument(\n      \"--debug-allocations\",\n      action=\"append_const\",\n      const=\"debug_allocations\",\n      dest=\"features\",\n      help=(\"The console will be used to output allocator statistics every \"\n            \"time an allocation/deallocation happens.\"),\n  )\n  main_parser.add_argument(\n      \"--verbose\",\n      action=\"append_const\",\n      const=\"verbose\",\n      dest=\"features\",\n      help=(\"The console will be used to output verbose information about the \"\n            \"OpenSK application. This also automatically activates --debug.\"),\n  )\n  main_parser.add_argument(\n      \"--no-u2f\",\n      action=RemoveConstAction,\n      const=\"with_ctap1\",\n      dest=\"features\",\n      help=(\"Compiles the OpenSK application without backward compatible \"\n            \"support for U2F/CTAP1 protocol.\"),\n  )\n  main_parser.add_argument(\n      \"--no-config-command\",\n      action=RemoveConstAction,\n      const=\"config_command\",\n      dest=\"features\",\n      help=(\"Removes the AuthenticatorConfig command.\"),\n  )\n  main_parser.add_argument(\n      \"--rust-crypto\",\n      action=\"append_const\",\n      const=\"rust_crypto\",\n      dest=\"features\",\n      help=(\"Compiles the OpenSK application with RustCrypto implementations.\"),\n  )\n  main_parser.add_argument(\n      \"--nfc\",\n      action=\"append_const\",\n      const=\"with_nfc\",\n      dest=\"features\",\n      help=(\"Compiles the OpenSK application with support for nfc.\"),\n  )\n  main_parser.add_argument(\n      \"--configure\",\n      action=\"store_true\",\n      default=True,\n      dest=\"configure\",\n      help=\"Configure.\",\n  )\n  main_parser.add_argument(\n      \"--vendor-hid\",\n      action=\"append_const\",\n      const=\"vendor_hid\",\n      dest=\"features\",\n      help=(\"Compiles the OpenSK application to support two HID usage pages.\"),\n  )\n  main_parser.add_argument(\n      \"--regen-keys\",\n      action=\"store_true\",\n      default=False,\n      dest=\"regenerate_keys\",\n      help=(\"Forces the generation of files (certificates and private keys) \"\n            \"under the crypto_data/ directory. \"\n            \"This is useful to allow flashing multiple OpenSK authenticators \"\n            \"in a row without them being considered clones.\"),\n  )\n\n  main_parser.add_argument(\n      \"--elf2tab-output\",\n      metavar=\"FILE\",\n      type=argparse.FileType(\"a\"),\n      dest=\"elf2tab_output\",\n      default=None,\n      help=(\"When set, the output of elf2tab is appended to this file.\"),\n  )\n\n  main_parser.add_argument(\n      \"--ed25519\",\n      action=\"append_const\",\n      const=\"ed25519\",\n      dest=\"features\",\n      help=(\"Adds support for credentials that use EdDSA algorithm over \"\n            \"curve Ed25519. \"\n            \"Current implementation is not side-channel resilient due to use \"\n            \"of variable-time arithmetic for computations over secret key.\"),\n  )\n\n  main_parser.add_argument(\n      \"--disable-check-patches\",\n      action=\"store_false\",\n      default=True,\n      dest=\"check_patches\",\n      help=(\"Don't check that patches are in sync with their submodules.\"),\n  )\n\n  main_parser.add_argument(\n      \"--private-key\",\n      type=str,\n      default=\"crypto_data/opensk_upgrade.key\",\n      dest=\"upgrade_priv_key\",\n      help=(\"PEM file for signing the firmware.\"),\n  )\n\n  main_parser.add_argument(\n      \"--version\",\n      type=int,\n      default=-1,\n      dest=\"version\",\n      help=(\"Firmware version that is built.\"),\n  )\n\n  main_parser.set_defaults(features=[\"with_ctap1\", \"config_command\"])\n\n  # Start parsing to know if we're going to list things or not.\n  partial_args, _ = main_parser.parse_known_args()\n\n  # We only need the apps_group if we have a board set\n  apps_group = main_parser.add_mutually_exclusive_group(\n      required=partial_args.board is not None)\n  apps_group.add_argument(\n      \"--no-app\",\n      dest=\"application\",\n      action=\"store_const\",\n      const=None,\n      help=(\"Doesn't compile nor install any application. Useful when you only \"\n            \"want to update Tock OS kernel.\"))\n  apps_group.add_argument(\n      \"--opensk\",\n      dest=\"application\",\n      action=\"store_const\",\n      const=\"ctap2\",\n      help=\"Compiles and installs the OpenSK application.\")\n  apps_group.add_argument(\n      \"--crypto_bench\",\n      dest=\"application\",\n      action=\"store_const\",\n      const=\"crypto_bench\",\n      help=(\"Compiles and installs the crypto_bench example that benchmarks \"\n            \"the performance of the cryptographic algorithms on the board.\"))\n  apps_group.add_argument(\n      \"--store_latency\",\n      dest=\"application\",\n      action=\"store_const\",\n      const=\"store_latency\",\n      help=(\"Compiles and installs the store_latency example which prints \"\n            \"latency statistics of the persistent store library.\"))\n  apps_group.add_argument(\n      \"--erase_storage\",\n      dest=\"application\",\n      action=\"store_const\",\n      const=\"erase_storage\",\n      help=(\"Compiles and installs the erase_storage example which erases \"\n            \"the storage. During operation the dongle red light is on. Once \"\n            \"the operation is completed the dongle green light is on.\"))\n  apps_group.add_argument(\n      \"--panic_test\",\n      dest=\"application\",\n      action=\"store_const\",\n      const=\"panic_test\",\n      help=(\"Compiles and installs the panic_test example that immediately \"\n            \"triggers a panic.\"))\n  apps_group.add_argument(\n      \"--oom_test\",\n      dest=\"application\",\n      action=\"store_const\",\n      const=\"oom_test\",\n      help=(\"Compiles and installs the oom_test example that tests the \"\n            \"allocator until an out-of-memory error occurs.\"))\n  apps_group.add_argument(\n      \"--console_test\",\n      dest=\"application\",\n      action=\"store_const\",\n      const=\"console_test\",\n      help=(\"Compiles and installs the console_test example that tests the \"\n            \"console driver with messages of various lengths.\"))\n  apps_group.add_argument(\n      \"--nfct_test\",\n      dest=\"application\",\n      action=\"store_const\",\n      const=\"nfct_test\",\n      help=(\"Compiles and installs the nfct_test example that tests the \"\n            \"NFC driver.\"))\n\n  main(main_parser.parse_args())\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "fuzzing_setup.sh",
          "type": "blob",
          "size": 0.771484375,
          "content": "#!/usr/bin/env bash\n# Copyright 2019 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# Ensure the script doesn't fail on Github workflows\nexport TERM=${TERM:-vt100}\ndone_text=\"$(tput bold)DONE.$(tput sgr0)\"\n\nset -e\n\n# Install cargo-fuzz library.\ncargo +stable install cargo-fuzz\n"
        },
        {
          "name": "libraries",
          "type": "tree",
          "content": null
        },
        {
          "name": "libtock_layout.ld",
          "type": "blob",
          "size": 4.8515625,
          "content": "/* Layout file for Tock process binaries that use libtock-rs. This currently\n * implements static linking, because we do not have a working\n * position-independent relocation solution. This layout works for all\n * platforms libtock-rs supports (ARM and RISC-V).\n *\n * This layout should be included by a script that defines the FLASH and RAM\n * regions for the board as well as TBF_HEADER_SIZE. Here is a an example\n * process binary linker script to get started:\n *     MEMORY {\n *         FLASH (X) : ORIGIN = 0x10000, LENGTH = 0x10000\n *         RAM   (W) : ORIGIN = 0x20000, LENGTH = 0x10000\n *     }\n *     TBF_HEADER_SIZE = 0x60;\n *     INCLUDE ../libtock-rs/layout.ld\n *\n * FLASH refers to the area the process binary occupies in flash, including TBF\n * headers. RAM refers to the area the process will have access to in memory.\n * STACK_SIZE is the size of the process' stack (this layout file may round the\n * stack size up for alignment purposes). TBF_HEADER_SIZE must correspond to the\n * --protected-region-size flag passed to elf2tab.\n *\n * This places the flash sections in the following order:\n *     1. .rt_header -- Constants used by runtime initialization.\n *     2. .text      -- Executable code.\n *     3. .rodata    -- Read-only global data (e.g. most string constants).\n *     4. .data      -- Read-write data, copied to RAM at runtime.\n *\n * This places the RAM sections in the following order:\n *     1. .stack -- The stack grows downward. Putting it first gives us\n *                  MPU-based overflow detection.\n *     2. .data  -- Read-write data, initialized by copying from flash.\n *     3. .bss   -- Zero-initialized read-write global data.\n *     4. Heap   -- The heap (optional) comes after .bss and grows upwards to\n *                  the process break.\n */\n\n/* TODO: Should TBF_HEADER_SIZE be configured via a similar mechanism to the\n * stack size? We should see if that is possible.\n */\n\n/* GNU LD looks for `start` as an entry point by default, while LLVM's LLD looks\n * for `_start`. To be compatible with both, we manually specify an entry point.\n */\nENTRY(start)\n\nSECTIONS {\n    /* Sections located in FLASH at runtime.\n     */\n\n    /* Add a section where elf2tab will place the TBF headers, so that the rest\n     * of the FLASH sections are in the right locations. */\n    .tbf_header (NOLOAD) : {\n        . = . + TBF_HEADER_SIZE;\n    } > FLASH\n\n    /* Runtime header. Contains values the linker knows that the runtime needs\n     * to look up.\n     */\n    .start ALIGN(4) : {\n        /* We combine rt_header and _start into a single section. If we don't,\n         * elf2tab does not parse the ELF file correctly for unknown reasons.\n         */\n        rt_header = .;\n        LONG(start & 0xFFFFFFFE);        /* .start w/ Thumb bit unset */\n        LONG(ADDR(.bss) + SIZEOF(.bss)); /* Initial process break */\n        LONG(_stack_top);\n        LONG(SIZEOF(.data));\n        LONG(LOADADDR(.data));\n        LONG(ADDR(.data));\n        LONG(SIZEOF(.bss));\n        LONG(ADDR(.bss));\n\n        *(.start)\n    } > FLASH\n\n    /* Text section -- the application's code. */\n    .text ALIGN(4) : {\n        *(.text.*)\n    } > FLASH\n\n    /* Read-only data section. Contains strings and other global constants. */\n    .rodata ALIGN(4) : {\n        *(.rodata.*)\n        /* .data is placed after .rodata in flash. data_flash_start is used by\n         * AT() to place .data in flash as well as in rt_header.\n         */\n        _data_flash_start = .;\n    } > FLASH\n\n    /* Sections located in RAM at runtime.\n     */\n\n    /* Reserve space for the stack. Aligned to a multiple of 16 bytes for the\n     * RISC-V calling convention:\n     * https://riscv.org/wp-content/uploads/2015/01/riscv-calling.pdf\n     */\n    .stack (NOLOAD) : {\n\t/* _sram_origin is used by elf2tab:\n\t * https://github.com/tock/elf2tab/blob/master/src/main.rs#L301\n\t */\n        _sram_origin = .;\n        KEEP(*(.stack_buffer))\n        . = ALIGN(16);\n        _stack_top = .;  /* Used in rt_header */\n    } > RAM\n\n    /* Read-write data section. This is deployed as part of FLASH but is copied\n     * into RAM at runtime.\n     */\n    .data ALIGN(4) : AT(_data_flash_start) {\n        data_ram_start = .;\n        /* .sdata is the RISC-V small data section */\n        *(.sdata .data)\n        /* Pad to word alignment so the relocation loop can use word-sized\n         * copies.\n         */\n        . = ALIGN(4);\n    } > RAM\n\n    /* BSS section. These are zero-initialized static variables. This section is\n     * not copied from FLASH into RAM but rather directly initialized, and is\n     * mainly put in this linker script so that we get an error if it overflows\n     * the RAM region.\n     */\n    .bss ALIGN(4) (NOLOAD) : {\n        /* .sbss is the RISC-V small data section */\n        *(.sbss .bss.*)\n    } > RAM\n\n    _heap_start = ADDR(.bss) + SIZEOF(.bss);  /* Used by rt_header */\n\n    /* Sections we do not need. */\n    /DISCARD/ :\n    {\n      *(.ARM.exidx .eh_frame)\n    }\n}\n"
        },
        {
          "name": "maintainers",
          "type": "tree",
          "content": null
        },
        {
          "name": "metadata",
          "type": "tree",
          "content": null
        },
        {
          "name": "nrf52840_layout.ld",
          "type": "blob",
          "size": 0.3828125,
          "content": "/* Layout for the nRF52840-DK and nRF52840 dongle, used by the\n * app in this repository.\n */\n\nMEMORY {\n  /* The application region is 64 bytes (0x40) and we reserve 0x40000 at the end\n   * of the flash for the persistent storage.\n   */\n  FLASH (X) : ORIGIN = 0x00040040, LENGTH = 0x0007FFC0\n  RAM (W) : ORIGIN = 0x20020000, LENGTH = 128K\n}\n\nTBF_HEADER_SIZE = 0x60;\nINCLUDE libtock_layout.ld\n"
        },
        {
          "name": "nrf52840_layout_a.ld",
          "type": "blob",
          "size": 0.3828125,
          "content": "/* Layout for the nRF52840-DK and nRF52840 dongle, used by the\n * app in this repository.\n */\n\nMEMORY {\n  /* The application region is 64 bytes (0x40) and we reserve 0x40000 at the end\n   * of the flash for the persistent storage.\n   */\n  FLASH (X) : ORIGIN = 0x00040040, LENGTH = 0x0001FFC0\n  RAM (W) : ORIGIN = 0x20020000, LENGTH = 128K\n}\n\nTBF_HEADER_SIZE = 0x60;\nINCLUDE libtock_layout.ld\n"
        },
        {
          "name": "nrf52840_layout_b.ld",
          "type": "blob",
          "size": 0.3828125,
          "content": "/* Layout for the nRF52840-DK and nRF52840 dongle, used by the\n * app in this repository.\n */\n\nMEMORY {\n  /* The application region is 64 bytes (0x40) and we reserve 0x40000 at the end\n   * of the flash for the persistent storage.\n   */\n  FLASH (X) : ORIGIN = 0x00080040, LENGTH = 0x0001FFC0\n  RAM (W) : ORIGIN = 0x20020000, LENGTH = 128K\n}\n\nTBF_HEADER_SIZE = 0x60;\nINCLUDE libtock_layout.ld\n"
        },
        {
          "name": "patches",
          "type": "tree",
          "content": null
        },
        {
          "name": "reproducible",
          "type": "tree",
          "content": null
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.154296875,
          "content": "# General setup\ntockloader == 1.5\nsix\nintelhex\n\n# Configure OpenSK (crypto, JTAG lockdown)\ncolorama\ntqdm\ncryptography\nfido2 >= 1.0.0\n\n# Tests\npylint\nyapf\nhid\n"
        },
        {
          "name": "reset.sh",
          "type": "blob",
          "size": 1.419921875,
          "content": "#!/usr/bin/env bash\n# Copyright 2019 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\necho \"$(tput bold)This script will restore the repository to a clean state$(tput sgr0)\"\necho \"$(tput bold)Any pending change will be lost.$(tput sgr0)\"\necho \"\"\n\naccept=''\nwhile\n  case \"$accept\" in\n    [Yy])\n      # Start echoeing the commands to the screen\n      set -x\n      # Reset the submodules\n      git submodule foreach 'git reset --hard && git clean -fxd'\n      # Reset also the main repository\n      git reset --hard && git clean -fxd --exclude elf2tab\n\n      set +x\n      echo \"DONE.\"\n      # And break the loop\n      false\n    ;;\n\n    [Nn])\n      echo \"Nothing was done. Repository was left untouched.\"\n      # Don't do anything but break the while loop to exit\n      false\n    ;;\n\n    *)\n      # Continue looping\n      true\n    ;;\n  esac\ndo\n    echo \"$(tput bold)Are you sure you want to continue? [y/n]$(tput sgr0)\"\n    read -s -n 1 accept\ndone\n"
        },
        {
          "name": "rules.d",
          "type": "tree",
          "content": null
        },
        {
          "name": "run_desktop_tests.sh",
          "type": "blob",
          "size": 5.6328125,
          "content": "#!/usr/bin/env bash\n# Copyright 2019-2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nset -ex\n\n./fuzzing_setup.sh\n# Excludes std\nMOST_FEATURES=config_command,debug_allocations,debug_ctap,panic_console,verbose,with_ctap1,vendor_hid,ed25519\n\necho \"Checking that OpenSK builds properly...\"\ncargo check --release --target=thumbv7em-none-eabi\ncargo check --release --target=thumbv7em-none-eabi --features config_command\ncargo check --release --target=thumbv7em-none-eabi --features debug_allocations\ncargo check --release --target=thumbv7em-none-eabi --features debug_ctap\ncargo check --release --target=thumbv7em-none-eabi --features panic_console\ncargo check --release --target=thumbv7em-none-eabi --features verbose\ncargo check --release --target=thumbv7em-none-eabi --features with_ctap1\ncargo check --release --target=thumbv7em-none-eabi --features with_nfc\ncargo check --release --target=thumbv7em-none-eabi --features vendor_hid\ncargo check --release --target=thumbv7em-none-eabi --features ed25519\ncargo check --release --target=thumbv7em-none-eabi --features rust_crypto\ncargo check --release --target=thumbv7em-none-eabi --features \"$MOST_FEATURES\"\ncargo check --release --target=thumbv7em-none-eabi --examples\ncargo check --release --target=thumbv7em-none-eabi --examples --features with_nfc\ncargo check --release --target=thumbv7em-none-eabi --manifest-path bootloader/Cargo.toml\n\necho \"Checking Rust formatting...\"\ncargo fmt -- --check\ncargo fmt --manifest-path libraries/opensk/Cargo.toml -- --check\ncargo fmt --manifest-path libraries/opensk/fuzz/Cargo.toml -- --check\ncargo fmt --manifest-path libraries/cbor/Cargo.toml -- --check\ncargo fmt --manifest-path libraries/cbor/fuzz/Cargo.toml -- --check\ncargo fmt --manifest-path libraries/persistent_store/Cargo.toml -- --check\ncargo fmt --manifest-path libraries/persistent_store/fuzz/Cargo.toml -- --check\ncargo fmt --manifest-path libraries/crypto/Cargo.toml -- --check\ncargo fmt --manifest-path bootloader/Cargo.toml -- --check\n\necho \"Checking Python formatting...\"\npy_virtual_env/bin/pylint --score=n `git ls-files --deduplicate --exclude-standard --full-name '*.py'`\npy_virtual_env/bin/yapf --style=yapf --recursive --exclude py_virtual_env --exclude third_party --diff .\n\necho \"Running Clippy lints...\"\ncargo clippy --lib --tests --bins --benches --features std -- -D warnings\ncargo clippy --lib --tests --bins --benches --features std,\"$MOST_FEATURES\" -- -D warnings\n(cd libraries/opensk && cargo clippy --features std -- -D warnings)\n(cd libraries/opensk && cargo clippy --features std,config_command,debug_ctap,with_ctap1,vendor_hid,ed25519,rust_crypto  -- -D warnings)\n(cd libraries/cbor && cargo clippy -- -D warnings)\n# Uncomment when persistent store is fixed:\n# (cd libraries/persistent_store && cargo clippy --features std -- -D warnings)\n# Probably not worth fixing:\n# (cd libraries/crypto && cargo clippy --features std -- -D warnings)\n\necho \"Checking that fuzz targets...\"\n(cd libraries/opensk && cargo fuzz check)\n(cd libraries/cbor && cargo fuzz check)\n(cd libraries/persistent_store && cargo fuzz check)\n\necho \"Building sha256sum tool...\"\ncargo build --manifest-path third_party/tock/tools/sha256sum/Cargo.toml\n\necho \"Checking that CTAP2 builds and links properly (1 set of features)...\"\ncargo build --release --target=thumbv7em-none-eabi --features config_command,with_ctap1\n./third_party/tock/tools/sha256sum/target/debug/sha256sum target/thumbv7em-none-eabi/release/ctap2\n\necho \"Running OpenSK library unit tests...\"\ncd libraries/opensk\ncargo test --features std\ncargo test --features std,config_command,with_ctap1\ncargo test --all-features\ncd ../..\n\necho \"Running other unit tests...\"\ncargo test --lib --tests --bins --benches --features std\ncargo test --lib --tests --bins --benches --all-features\ncargo test --manifest-path libraries/cbor/Cargo.toml\ncargo test --manifest-path libraries/persistent_store/Cargo.toml --features std\n# Running release mode to speed up. This library is legacy anyway.\ncargo test --manifest-path libraries/crypto/Cargo.toml --features std --release\n\necho \"Checking that boards build properly...\"\nmake -C third_party/tock/boards/nordic/nrf52840dk_opensk\nmake -C third_party/tock/boards/nordic/nrf52840_dongle_opensk\nmake -C third_party/tock/boards/nordic/nrf52840_dongle_dfu\nmake -C third_party/tock/boards/nordic/nrf52840_mdk_dfu\n\necho \"Checking deployment of boards...\"\n./deploy.py --board=nrf52840dk_opensk --no-app --programmer=none\n./deploy.py --board=nrf52840_dongle_opensk --no-app --programmer=none\n./deploy.py --board=nrf52840_dongle_dfu --no-app --programmer=none\n./deploy.py --board=nrf52840_mdk_dfu --no-app --programmer=none\n\necho \"Check app deployment\"\n./deploy.py --board=nrf52840dk_opensk --programmer=none --opensk\n./deploy.py --board=nrf52840dk_opensk --programmer=none --crypto_bench\n./deploy.py --board=nrf52840dk_opensk --programmer=none --store_latency\n./deploy.py --board=nrf52840dk_opensk --programmer=none --erase_storage\n./deploy.py --board=nrf52840dk_opensk --programmer=none --panic_test\n./deploy.py --board=nrf52840dk_opensk --programmer=none --oom_test\n./deploy.py --board=nrf52840dk_opensk --programmer=none --console_test\n./deploy.py --board=nrf52840dk_opensk --programmer=none --nfct_test --nfc\n\ncargo audit\n"
        },
        {
          "name": "rust-toolchain.toml",
          "type": "blob",
          "size": 0.2001953125,
          "content": "[toolchain]\nchannel = \"nightly-2023-11-01\"\ncomponents = [\"clippy\", \"miri\", \"rustfmt\"]\ntargets = [\"thumbv7em-none-eabi\",\n           \"riscv32imac-unknown-none-elf\",\n           \"riscv32imc-unknown-none-elf\"]\n"
        },
        {
          "name": "rustfmt.toml",
          "type": "blob",
          "size": 0.1025390625,
          "content": "use_field_init_shorthand = true\nuse_try_shorthand = true\nedition = \"2018\"\nimports_granularity = \"Module\"\n"
        },
        {
          "name": "setup-submodules.sh",
          "type": "blob",
          "size": 1.6279296875,
          "content": "#!/usr/bin/env bash\n# Copyright 2020 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# Ensure the script doesn't fail on Github workflows\nexport TERM=${TERM:-vt100}\ndone_text=\"$(tput bold)DONE.$(tput sgr0)\"\n\nset -e\nshopt -s nullglob\n\n# Ensure the submodules are pulled and up-to-date\ngit submodule update --init\n\npatch_conflict_detected () {\n  cat <<EOF\n\nThis script cannot be run twice without reverting the patches.\n\nTo do so, follow these instructions:\n1. Commit any changes you want to save.\n2. Run the ./reset.sh script to revert all uncommitted changes.\n3. Run the ./setup.sh script again.\nEOF\n  exit 1\n}\n\n# Copy additional boards to the kernel.\necho -n '[-] Copying additional boards to Tock... '\ncp -r boards/* third_party/tock/boards\necho $done_text\n\nfor module in tock libtock-rs; do\n  # Apply patches to the submodule. Do that in a sub-shell.\n  (\n    cd third_party/\"${module}\"/ && \\\n      for p in ../../patches/\"${module}\"/*.patch\n      do\n        echo -n '[-] Applying patch \"'$(basename $p)'\"... '\n        if git apply \"$p\"\n        then\n          echo $done_text\n        else\n          patch_conflict_detected\n        fi\n      done\n  )\ndone\n"
        },
        {
          "name": "setup.sh",
          "type": "blob",
          "size": 1.5810546875,
          "content": "#!/usr/bin/env bash\n# Copyright 2019 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# Ensure the script doesn't fail on Github workflows\nexport TERM=${TERM:-vt100}\ndone_text=\"$(tput bold)DONE.$(tput sgr0)\"\nPY_VENV_NAME=py_virtual_env\nPYTHON=\"$PY_VENV_NAME\"/bin/python\nPIP=\"$PY_VENV_NAME\"/bin/pip\n\nset -e\n\n# Ensure the submodules are pulled and up-to-date, and apply patches\n./setup-submodules.sh\n\n# Check that rustup and pip3 are installed\ncheck_command () {\n  if ! which \"$1\" >/dev/null\n  then\n    echo \"Missing $1 command.$2\"\n    exit 1\n  fi\n}\ncheck_command rustup \" Follow the steps under https://rustup.rs/ to install it.\"\npython3 -m venv \"$PY_VENV_NAME\"\n\"$PYTHON\" -m pip install --upgrade pip setuptools wheel\ncheck_command \"$PIP\"\n\n# Ensure we have certificates, keys, etc. so that the tests can run\nsource tools/gen_key_materials.sh\ngenerate_crypto_materials N\n\nrustup show\n\"$PIP\" install --upgrade -r requirements.txt\n\n# Install dependency to create applications.\nmkdir -p elf2tab\nrustup install stable\ncargo +stable install cargo-audit\ncargo +stable install elf2tab --version 0.10.2 --root elf2tab/\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "third_party",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}