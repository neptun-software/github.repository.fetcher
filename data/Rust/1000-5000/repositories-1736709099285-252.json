{
  "metadata": {
    "timestamp": 1736709099285,
    "page": 252,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "bastion-rs/bastion",
      "stars": 2816,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".auto-changelog",
          "type": "blob",
          "size": 0.10546875,
          "content": "{\n  \"output\": \"CHANGELOG.md\",\n  \"template\": \"keepachangelog\",\n  \"unreleased\": true,\n  \"commitLimit\": false\n}"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.376953125,
          "content": "# Generated by Cargo\n# will have compiled files and executables\n/target/\n**/target\n\n# Remove Cargo.lock from gitignore if creating an executable, leave it for libraries\n# More information here https://doc.rust-lang.org/cargo/guide/cargo-toml-vs-cargo-lock.html\nCargo.lock\n\n# These are backup files generated by rustfmt\n**/*.rs.bk\n\n/target\n**/*.rs.bk\n\n*.bc\n\nbcs\n\n# Intellij stuff\n.idea/\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 56.8251953125,
          "content": "# Changelog\n\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/)\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n\nGenerated by [`auto-changelog`](https://github.com/CookPete/auto-changelog).\n\n## [v0.3.4](https://github.com/bastion-rs/bastion/compare/v0.2.0...v0.3.4) - 2020-01-29\n\n### Merged\n\n- Roll bastion 0.3.4 [`#164`](https://github.com/bastion-rs/bastion/pull/164)\n- Removed Pool::recover_async_thread method [`#163`](https://github.com/bastion-rs/bastion/pull/163)\n- Remove debug statements in lightproc code [`#162`](https://github.com/bastion-rs/bastion/pull/162)\n- Changelog config [`#161`](https://github.com/bastion-rs/bastion/pull/161)\n- Update futures-timer requirement from 2.0.2 to 3.0.0 [`#160`](https://github.com/bastion-rs/bastion/pull/160)\n- Use `actions/checkout@master` in Clippy check [`#159`](https://github.com/bastion-rs/bastion/pull/159)\n- Max retries support for existing restart strategies [`#157`](https://github.com/bastion-rs/bastion/pull/157)\n- Implemented linear/exponential back off recovery strategy [`#156`](https://github.com/bastion-rs/bastion/pull/156)\n- Stateful ProcStack [`#149`](https://github.com/bastion-rs/bastion/pull/149)\n- bastion-utils: Add missing readme reference to cargo.toml [`#153`](https://github.com/bastion-rs/bastion/pull/153)\n- Add macros to instantiate children and supervisors [`#140`](https://github.com/bastion-rs/bastion/pull/140)\n- Fix extreme amount of syscalls to give time share to OS [`#147`](https://github.com/bastion-rs/bastion/pull/147)\n- Split children into four modules: children, children_ref, child, child_ref [`#144`](https://github.com/bastion-rs/bastion/pull/144)\n- Use original GitHub actions [`#142`](https://github.com/bastion-rs/bastion/pull/142)\n- Configurable thread count and thread pinning [`#141`](https://github.com/bastion-rs/bastion/pull/141)\n- Fix warnings [`#132`](https://github.com/bastion-rs/bastion/pull/132)\n- Message Signature to identify message sender and sending messages back [`#130`](https://github.com/bastion-rs/bastion/pull/130)\n- Update crossbeam-utils requirement from 0.6 to 0.7 [`#136`](https://github.com/bastion-rs/bastion/pull/136)\n- Update crossbeam-epoch requirement from 0.7 to 0.8 [`#135`](https://github.com/bastion-rs/bastion/pull/135)\n- Update windows datatypes [`#129`](https://github.com/bastion-rs/bastion/pull/129)\n- EMA based statistically adaptive blocking thread pool [`#127`](https://github.com/bastion-rs/bastion/pull/127)\n- Bump bastion-executor dependency to 0.3.2-alpha.0 [`#126`](https://github.com/bastion-rs/bastion/pull/126)\n- Fix link and remove empty doc [`#124`](https://github.com/bastion-rs/bastion/pull/124)\n- Add Bastion::spawn method [`#122`](https://github.com/bastion-rs/bastion/pull/122)\n- Replaced \"futures-preview\" with \"futures\" [`#120`](https://github.com/bastion-rs/bastion/pull/120)\n- Ignore migration path under lock contention [`#115`](https://github.com/bastion-rs/bastion/pull/115)\n- Fix doc links and middleware example [`#114`](https://github.com/bastion-rs/bastion/pull/114)\n- Stat sampler improvements [`#113`](https://github.com/bastion-rs/bastion/pull/113)\n- [executor] Fetch cores at once, rely on runtime [`#112`](https://github.com/bastion-rs/bastion/pull/112)\n- Updated msg! to allow explicit and implicit returns [`#111`](https://github.com/bastion-rs/bastion/pull/111)\n- Fixed children redundancy tests [`#108`](https://github.com/bastion-rs/bastion/pull/108)\n- Removed all unsafe code from \"bastion\" [`#107`](https://github.com/bastion-rs/bastion/pull/107)\n- Updated the changelog. [`#106`](https://github.com/bastion-rs/bastion/pull/106)\n- Removed the \"qutex\" patch [`#99`](https://github.com/bastion-rs/bastion/pull/99)\n- Added env_logger to all bastion's examples. [`#98`](https://github.com/bastion-rs/bastion/pull/98)\n- Cleaned up bastion-executor [`#97`](https://github.com/bastion-rs/bastion/pull/97)\n- Updated the documentation for BastionContext [`#96`](https://github.com/bastion-rs/bastion/pull/96)\n- Added an \"unstable\" feature [`#95`](https://github.com/bastion-rs/bastion/pull/95)\n- Added logs [`#94`](https://github.com/bastion-rs/bastion/pull/94)\n- Include Examples [`#90`](https://github.com/bastion-rs/bastion/pull/90)\n- Added support for configuring the system [`#93`](https://github.com/bastion-rs/bastion/pull/93)\n- Made BastionId public and references comparable [`#89`](https://github.com/bastion-rs/bastion/pull/89)\n- Proptests for children [`#91`](https://github.com/bastion-rs/bastion/pull/91)\n- Updated the README to indicate that Bastion isn't production-ready yet. [`#88`](https://github.com/bastion-rs/bastion/pull/88)\n- Added callbacks support [`#76`](https://github.com/bastion-rs/bastion/pull/76)\n- Disallowing access to the system's supervisor [`#75`](https://github.com/bastion-rs/bastion/pull/75)\n- Include issue template menu [`#85`](https://github.com/bastion-rs/bastion/pull/85)\n- Bastion Documentation and New project logos [`#84`](https://github.com/bastion-rs/bastion/pull/84)\n- Bastion Executor Documentation [`#82`](https://github.com/bastion-rs/bastion/pull/82)\n- Lightproc Documentation [`#81`](https://github.com/bastion-rs/bastion/pull/81)\n- Moved ROOT_SPV out of its QrwLock [`#80`](https://github.com/bastion-rs/bastion/pull/80)\n- Copied the example from Bastion's documentation into its own file. [`#79`](https://github.com/bastion-rs/bastion/pull/79)\n- Fix clippy errors [`#74`](https://github.com/bastion-rs/bastion/pull/74)\n- Fixed children group's running loop and supervisors' order list [`#72`](https://github.com/bastion-rs/bastion/pull/72)\n- New scheduler for Bastion Executor [`#71`](https://github.com/bastion-rs/bastion/pull/71)\n- Remove deprecated action [`#70`](https://github.com/bastion-rs/bastion/pull/70)\n- Better documentation [`#66`](https://github.com/bastion-rs/bastion/pull/66)\n- Fixed (random) threadpool panics [`#67`](https://github.com/bastion-rs/bastion/pull/67)\n- Fixed GitHub CI's fmt and docs checks [`#69`](https://github.com/bastion-rs/bastion/pull/69)\n- Include windows deps [`#65`](https://github.com/bastion-rs/bastion/pull/65)\n- Address build issues [`#64`](https://github.com/bastion-rs/bastion/pull/64)\n- Tweak GitHub Actions [`#62`](https://github.com/bastion-rs/bastion/pull/62)\n- Feature gate fixes [`#63`](https://github.com/bastion-rs/bastion/pull/63)\n- Bastion 0.3.0 Rollup [`#58`](https://github.com/bastion-rs/bastion/pull/58)\n- Executor work [`#53`](https://github.com/bastion-rs/bastion/pull/53)\n- LightProc Implementation [`#47`](https://github.com/bastion-rs/bastion/pull/47)\n- Lightproc dev [`#50`](https://github.com/bastion-rs/bastion/pull/50)\n- Clean up actions [`#43`](https://github.com/bastion-rs/bastion/pull/43)\n- Debug impl with thunk pointer [`#42`](https://github.com/bastion-rs/bastion/pull/42)\n- Remove travis and add stable channel builds to Github [`#41`](https://github.com/bastion-rs/bastion/pull/41)\n- Update sponsor information [`#39`](https://github.com/bastion-rs/bastion/pull/39)\n- Replace Gitter with Discord [`#38`](https://github.com/bastion-rs/bastion/pull/38)\n- Add GitHub actions [`#36`](https://github.com/bastion-rs/bastion/pull/36)\n- Fixed building on nightly [`#34`](https://github.com/bastion-rs/bastion/pull/34)\n- Fix import version [`#31`](https://github.com/bastion-rs/bastion/pull/31)\n\n### Commits\n\n- Fix conflicts [`12d7aac`](https://github.com/bastion-rs/bastion/commit/12d7aac1d6caecf24cbfe98393e94eb6122808d6)\n- Added support for setting callbacks for supervisors and updated the callbacks example. [`66f979d`](https://github.com/bastion-rs/bastion/commit/66f979d423340b9b028f83fd2a8eb0f28de232aa)\n- Updated Bastion, Children, ChildRef and ChildrenRef's logs, added logs to Supervisor and SupervisorRef, updated Supervisor::reset to use Supervisor::restart, and fixed formatting. [`651a068`](https://github.com/bastion-rs/bastion/commit/651a068e45c0e4284046f828c70f85a530dbc346)\n- Added documentation to Callbacks' methods and removed the callbacks traits. [`9d5af94`](https://github.com/bastion-rs/bastion/commit/9d5af948769ee7ca25376762dc1eda9ba9d9bbc0)\n- Shareable state code [`e20e888`](https://github.com/bastion-rs/bastion/commit/e20e8884cebbeafdfc29eda580692778af726de0)\n- Added a Config struct and an \"init_with\" method to Bastion to use it, updated the getting started examples to use it and fixed markdown issues. [`fccf81f`](https://github.com/bastion-rs/bastion/commit/fccf81f867506ab94cb8ca53cd179ba434c8292f)\n- Added support for callbacks in children groups and updated supervisor to call them. [`1053990`](https://github.com/bastion-rs/bastion/commit/1053990301a266c80bbbcb0124d9b7d09213e36b)\n- Implement children and supervisor macro [`79c2025`](https://github.com/bastion-rs/bastion/commit/79c202551fb67ce6048e7876343c33acc9f0a363)\n- safe Proc State [`bdce4c9`](https://github.com/bastion-rs/bastion/commit/bdce4c9d79176210fe63ea1d2a2954e57a73958f)\n- Implemented max retries for restoring actors [`d2b3d5a`](https://github.com/bastion-rs/bastion/commit/d2b3d5a92f9943632f55ea04e6282e798db8d324)\n- Executor scheduler [`a41ba43`](https://github.com/bastion-rs/bastion/commit/a41ba439970e4ba37476b16b86c8c1990a2b52f1)\n- Added documentation for BastionId and the \"id\" methods and exported BastionId and the context module. [`5bf0c9b`](https://github.com/bastion-rs/bastion/commit/5bf0c9b6efcd0540a20db7f2bb6057f20d01848a)\n- stateful ProcStack [`f4267b8`](https://github.com/bastion-rs/bastion/commit/f4267b8fce8e878acd58eb33480c0c849687ad5a)\n- Removed \"bastion/src/proc.rs\" and updated bastion to use bastion-executor. [`b848423`](https://github.com/bastion-rs/bastion/commit/b848423c0c426feb385727b4603fc0059bd02c36)\n- Add READMEs [`28ac438`](https://github.com/bastion-rs/bastion/commit/28ac438b38b515ed7b7a70645bee0e501de2253b)\n- Implemented exponential back off recovery strategy [`d6dcdf0`](https://github.com/bastion-rs/bastion/commit/d6dcdf0b644b2f32286261c3fdc31cb09bfbabe3)\n- cargo fmt [`bfa1a38`](https://github.com/bastion-rs/bastion/commit/bfa1a384699db060ba19446ae8cae16ee30c69a0)\n- Cleanup and format [`f2046e0`](https://github.com/bastion-rs/bastion/commit/f2046e09ef21131787044bb718843152ef261483)\n- Added an example for children groups' callbacks. [`6f2b933`](https://github.com/bastion-rs/bastion/commit/6f2b933c6d40d99d0095092b6ece3149f589e3bd)\n- Add all missing docs [`a762ca6`](https://github.com/bastion-rs/bastion/commit/a762ca6de62a8f5b9cee059ffdeafb66f2fa0581)\n- Add supervisor macro to generate supervisors [`6c2d605`](https://github.com/bastion-rs/bastion/commit/6c2d605c4ecf4fdadc1a7d7f706645ecfb5280bf)\n- Fixed formatting and errors. [`f9ee8fb`](https://github.com/bastion-rs/bastion/commit/f9ee8fb6e2290909536588105f740e4926abd1ea)\n- Middleware example [`634f75a`](https://github.com/bastion-rs/bastion/commit/634f75ac29a5b1d9f7b63e5be39e228f54f5f78a)\n- Parallel computation (mapreduce) example [`5eec793`](https://github.com/bastion-rs/bastion/commit/5eec793de18e38211facb8343ced834075138199)\n- Lightproc docs [`2b1907f`](https://github.com/bastion-rs/bastion/commit/2b1907f7493e9d1799a45985e5589b4215325d33)\n- Renamed of Callbacks's methods and fixed the formatting. [`42780c8`](https://github.com/bastion-rs/bastion/commit/42780c831a091ae365c8c5fc08af7b546661c305)\n- Add child and children macro [`e9fc034`](https://github.com/bastion-rs/bastion/commit/e9fc03405a2b4c7b95671a8cfed53958e30b18b4)\n- Fix rustc errors and remove child macro [`b5b097e`](https://github.com/bastion-rs/bastion/commit/b5b097eb5e3e30eccf0eacaca494a31957ac02b0)\n- Added documentation to Children and Supervisor's with_callbacks methods. [`82a8ec9`](https://github.com/bastion-rs/bastion/commit/82a8ec95295ead4cf5fa13cf741b51515864458e)\n- Added logs to Child, Children, ChildRef and ChildrenRef. [`e39cc3a`](https://github.com/bastion-rs/bastion/commit/e39cc3a4716b87872821446cfe4f8138f4ae3753)\n- Updated context to not give a reference to the children group's supervisor if it is the system's supervisor. [`587998a`](https://github.com/bastion-rs/bastion/commit/587998a82b6e0fcc248cef163be7cce34c73ec6d)\n- Bastion docs [`79d1d14`](https://github.com/bastion-rs/bastion/commit/79d1d146f247440fd7a111f5ce5d3d00b579dfbb)\n- Cleaned up bastion-executor and lightproc's dependencies imports and replaced rustc_hash with fxhash. [`ed7c634`](https://github.com/bastion-rs/bastion/commit/ed7c634d8129ecd02c77e5e23a23dbac18914873)\n- use pointer cast instead of transmuting [`cabba1e`](https://github.com/bastion-rs/bastion/commit/cabba1ec926d83901e965c0c6bbf7a3a319bc3d6)\n- Added logs to System. [`ef4bccf`](https://github.com/bastion-rs/bastion/commit/ef4bccfa8595e6bdc1b8e827b5240b960c311119)\n- Updated GlobalSystem and Bastion::block_until_stopped to use a Condvar. [`d4420d0`](https://github.com/bastion-rs/bastion/commit/d4420d05049ba6965d634535cdd1122335a344ec)\n- Replaced max_retries on the RestartPolicy enum [`cffa1cf`](https://github.com/bastion-rs/bastion/commit/cffa1cfc2e22962a1ff63f6638ad4553a80d3340)\n- Changed signature of the Supervisor::restart method [`4c79d7a`](https://github.com/bastion-rs/bastion/commit/4c79d7a3ef51c880171b4c98a849007e6a61bc64)\n- Added tests for the RestartStrategy struct [`638fefd`](https://github.com/bastion-rs/bastion/commit/638fefd0df2afecb03de885bfc6f111fd5810caf)\n- Added readme [`54884b6`](https://github.com/bastion-rs/bastion/commit/54884b6b91e042961ac2830f77d40dfd7d7f3fc5)\n- Created bastion-utils crate [`234bfdd`](https://github.com/bastion-rs/bastion/commit/234bfdd496a1e53787679756723102c36890a8bf)\n- Add run macro [`adce5e2`](https://github.com/bastion-rs/bastion/commit/adce5e28be2af977f66b0f637838943d241db92d)\n- Changed signature of the Supervisor::kill method [`f0e4354`](https://github.com/bastion-rs/bastion/commit/f0e43549f7adeec31e581e8434d98d649e4e69fb)\n- Added saving old counters for the failed actors [`1cb4b48`](https://github.com/bastion-rs/bastion/commit/1cb4b489cc0a678564a0749eb9a757cdc00d6f51)\n- Implemented linear back-off recovery strategy [`54b016b`](https://github.com/bastion-rs/bastion/commit/54b016bc19a868f0a65eb085f111e1d9ea029318)\n- Simplify the condvar check [`65afbad`](https://github.com/bastion-rs/bastion/commit/65afbad579704b7a734d6cb8ff9b9e086d18b481)\n- Header [`6ef5143`](https://github.com/bastion-rs/bastion/commit/6ef51435bb4f4d68fd32a3e326982c5f8c48782b)\n- Added documentation for Callbacks::new and removed unused code and dependencies. [`35f10cf`](https://github.com/bastion-rs/bastion/commit/35f10cfff1d8be1eb790ae5fc185d91e7c15abc8)\n- Updated Broadcast polling to indicate that Poll::Ready(None) won't happen. [`5b66bff`](https://github.com/bastion-rs/bastion/commit/5b66bff1bdb35eb85a5493e08329b72f2343cbf6)\n- Remove AppVeyor [`5b67d60`](https://github.com/bastion-rs/bastion/commit/5b67d6093fedcd1033ded1b80d04f85696d9b722)\n- Updated example with restart_strategy [`a006c89`](https://github.com/bastion-rs/bastion/commit/a006c89511157e721c9e7de02cf1bc74a1d4b64d)\n- Tweak actions [`d295afb`](https://github.com/bastion-rs/bastion/commit/d295afb422f05e38bb56e0fc1ca0dc88d9d2a44e)\n- Added example for the supervisor with recovery strategy [`c7b64b7`](https://github.com/bastion-rs/bastion/commit/c7b64b7551f4cd980bf2458babc5fb2a7ce06698)\n- Made BastionId public, implemented Display on it and made the \"id\" methods on Supervisor, SupervisorRef, Children, ChildrenRef and ChildRef public (or added them when not already present). [`356e515`](https://github.com/bastion-rs/bastion/commit/356e5152d5877df28865e8fa4ef4b9e10ad6c92a)\n- Moved ROOT_SPV from inside a QrwLock to a static mut (yeah..) and made System::init private. [`fc89463`](https://github.com/bastion-rs/bastion/commit/fc89463e66eb053813af2ed844061283b7c6186c)\n- Fix spinloop [`03b2dbc`](https://github.com/bastion-rs/bastion/commit/03b2dbc6b8561d14be7e90d5b6cac4465130105d)\n- Updated the documentation for BastionContext. [`091534b`](https://github.com/bastion-rs/bastion/commit/091534b7865456e217ad13d612061b4fe21fd0d0)\n- Updated Supervisor's kill to not return anything and added documentation for Supervisor.killed, Supervisor.callbacks and Children.callbacks. [`796613c`](https://github.com/bastion-rs/bastion/commit/796613c2d9c4df361dc4c140510dfb4074014d41)\n- Updated Context to contain an optional Supervisor and removed \"is_system_supervisor\" from SupervisorRef. [`18a81d2`](https://github.com/bastion-rs/bastion/commit/18a81d2cee4d99f593922a73136dabefc3d1732e)\n- Add blocking macro [`f71b65c`](https://github.com/bastion-rs/bastion/commit/f71b65ca87a1dd0827a26245bf9eaa3ebc6fd250)\n- Add spawn macro [`467147c`](https://github.com/bastion-rs/bastion/commit/467147cf68bfca9b6cc85ba665827012fb32f490)\n- Implemented PartialEq and Eq for SupervisorRef, ChildrenRef and ChildRef. [`bdfbc60`](https://github.com/bastion-rs/bastion/commit/bdfbc6012b595247f55c6411d3392216a29fcf58)\n- Updated Child and Children logs. [`f552fdf`](https://github.com/bastion-rs/bastion/commit/f552fdf05bcdd8f2d431a92e290cff588a425dd3)\n- Switched to usage of crate bastion-utils [`a62a93c`](https://github.com/bastion-rs/bastion/commit/a62a93cd4deb15cef469bed28a0f933808544dee)\n- Added logs to Bastion. [`7337566`](https://github.com/bastion-rs/bastion/commit/7337566ba77ce7a3dd1cababca05e099f7a0b639)\n- Fixed a bug where ROOT_SPV would contain a reference to a restarted supervisor (thus with a different sender). [`4e1c35b`](https://github.com/bastion-rs/bastion/commit/4e1c35b81a4a681dec39a8a68175cb73033375cc)\n- Added logs to BastionMessage, Msg, Answer and Sender and fixed errors. [`305d995`](https://github.com/bastion-rs/bastion/commit/305d9952d71a178abbda2a454baf841c0c0d2ed5)\n- Updated Pool and Distributor's fields visibility, updated Distributor's methods visibility and fixed a typo. [`bcbc192`](https://github.com/bastion-rs/bastion/commit/bcbc192c3e021573bcd452fcc2ca7033296318b4)\n- Fixed formatting. [`4a3e673`](https://github.com/bastion-rs/bastion/commit/4a3e673f256e73f7702ba9a59df18b7d94f5f610)\n- Added documentation about what the \"system supervisor\" is. [`134b430`](https://github.com/bastion-rs/bastion/commit/134b430b3b5e9af29b1eefd35e8e60f177a9ee8d)\n- Copy alignment [`c972596`](https://github.com/bastion-rs/bastion/commit/c972596c3c02dd6d66b7c50213eae0419c279ee8)\n- Fixed the supervisors' detection of already stopped supervised elements for when calling callbacks. [`c323ae6`](https://github.com/bastion-rs/bastion/commit/c323ae6d0fed1049b3ed7e2a1ecfcc947f37dfce)\n- Update readme [`51bf740`](https://github.com/bastion-rs/bastion/commit/51bf740d9206c6d637992ca21432a1d2b3604606)\n- Updated children group's run to poll children before getting new messages and to be pending when its broadcast stream is, and fixed supervisors to update the id of supervised elements in the order list after resetting them and when using the one-for-one supervision strategy. [`c6143f9`](https://github.com/bastion-rs/bastion/commit/c6143f9246943f7d6294ba8366d6726e6ce365ef)\n- Added logs to BastionContext. [`9bd838a`](https://github.com/bastion-rs/bastion/commit/9bd838aa30fb63e21f94f21327e3164666b3880b)\n- Fix fmt and some doc [`ec9e2a5`](https://github.com/bastion-rs/bastion/commit/ec9e2a595a74631f48248dcef17647fbdb157f11)\n- Updated POOL to use a \"static mut\" instead of using \"lazy_static\" and a QrwLock, fixing some (random) panics from the threadpool that would freeze the system. [`a760987`](https://github.com/bastion-rs/bastion/commit/a7609873da04968f2b0c6d2b3dbaf736cfd2e449)\n- Fixed typos. [`0d45934`](https://github.com/bastion-rs/bastion/commit/0d45934d95f0b0943e250aecbeb2842b0729b46d)\n- Made ROOT_SPV private and added a \"root_supervisor\" to System. [`ad5e847`](https://github.com/bastion-rs/bastion/commit/ad5e847e911833272d43a9d9b4243aef4a2c106b)\n- Remove thread pool [`e233f2e`](https://github.com/bastion-rs/bastion/commit/e233f2eca55e03739cd7cffeceecd3ef0be32a8a)\n- Added documentation for Supervisor and SupervisorRef's \"is_system_supervisor\". [`63babc6`](https://github.com/bastion-rs/bastion/commit/63babc63b70ad27c1651843c05af56100813f885)\n- (cargo-release) version 0.3.4 [`91cb9c4`](https://github.com/bastion-rs/bastion/commit/91cb9c49507b889e83173e5a05a5072bc0b405ee)\n- Changed signature of the Supervisor::stop method [`af58a40`](https://github.com/bastion-rs/bastion/commit/af58a407d8f8eb2df2702cf06d035f2a45434614)\n- (cargo-release) version 0.3.3 [`896a1cb`](https://github.com/bastion-rs/bastion/commit/896a1cb77872fee5bd126a938977103b4f202240)\n- More consistent example [`52e1d19`](https://github.com/bastion-rs/bastion/commit/52e1d19446ceaa63bee7dd6f567a4d34c7a25e27)\n- Exclude prop inputs [`5ada867`](https://github.com/bastion-rs/bastion/commit/5ada867ab7765a7618e5c5a7d7c9c93b7ecab505)\n- (cargo-release) version 0.3.3-alpha.1 [`f913def`](https://github.com/bastion-rs/bastion/commit/f913def36365aedcef8705fa12c5a8c63b13aab8)\n- Update README.md [`03f5b5e`](https://github.com/bastion-rs/bastion/commit/03f5b5e0c8b4b83fae84b27c14e8ec2e24c1b3a2)\n- Fixed formatting. [`4c4d127`](https://github.com/bastion-rs/bastion/commit/4c4d127f838c26a99d44517a81d3cd57afbf2d31)\n- Fix doc test and add supervisor macro to prelude [`216fe6c`](https://github.com/bastion-rs/bastion/commit/216fe6c29ab870e3d34a5c8cf2231b20560f578c)\n- Prepared for the release of 0.3.0. [`cb1889e`](https://github.com/bastion-rs/bastion/commit/cb1889ea244d6e4c356ca410ed66f8377795aa04)\n- Fixed examples links [`1cd409b`](https://github.com/bastion-rs/bastion/commit/1cd409b33d16706176e8eaf1e50d999820ef1094)\n- Added documentation for the context module. [`9a001da`](https://github.com/bastion-rs/bastion/commit/9a001da0efa7a53b8f85254e69d09baaf4a1cdd5)\n- Added an \"unstable\" feature to activate bastion-executor's NUMA-aware allocator. [`8858493`](https://github.com/bastion-rs/bastion/commit/8858493f5cf7651510df35386a1f71509507fed6)\n- Add back the doc for system supervisor [`7063a9f`](https://github.com/bastion-rs/bastion/commit/7063a9fd67235ba08a7d25636889f94d642593c0)\n- Switch to nightly's fmt [`75985f4`](https://github.com/bastion-rs/bastion/commit/75985f46647a40b886f1c9a86dfa1569824433b0)\n- (cargo-release) version 0.3.0-alpha.1 [`ca1280f`](https://github.com/bastion-rs/bastion/commit/ca1280fba3865f3db50b46cf745a032b362d4207)\n- Fixed formatting. [`0ef5fea`](https://github.com/bastion-rs/bastion/commit/0ef5fea874116d4ee53368654053ead63bc00d75)\n- Fixed formatting. [`fad8475`](https://github.com/bastion-rs/bastion/commit/fad84759f54e15b4ebc451d1e4d734a280f74bdb)\n- Fix get_pid tests [`869fb70`](https://github.com/bastion-rs/bastion/commit/869fb703fd12453b7d32b4de788c30e33063ec99)\n- Fixed the formatting of the newly created \"callbacks\" example. [`e87d791`](https://github.com/bastion-rs/bastion/commit/e87d79163cc2dfb2c9f4762881def64ca9ddf8a5)\n- Update `lightproc` dependency to 0.3.3-alpha.0 [`4e03582`](https://github.com/bastion-rs/bastion/commit/4e03582a687b4c3f4d48a9b0cc039ea5df978b32)\n- Fixed formatting warnings [`87b4082`](https://github.com/bastion-rs/bastion/commit/87b40825f7d661032693656e512cd2f91590f536)\n- Add missing readme reference to cargo.toml [`cd61ba8`](https://github.com/bastion-rs/bastion/commit/cd61ba811cb21b9e35cdd1eac68876924b3006b4)\n- #151 Created Bastion Utilities crate [`ce290f3`](https://github.com/bastion-rs/bastion/commit/ce290f3a830a3c1885377b8835d95f2f2f23b307)\n- new messaging API which allows identifying message senders and send messages back [`36cfd8e`](https://github.com/bastion-rs/bastion/commit/36cfd8e245d84c8f1d4e3ad4802288762d55c099)\n- separate children into children, children_ref, child, child_ref [`8f4253c`](https://github.com/bastion-rs/bastion/commit/8f4253cdc48d235822d596dcb9c7e9e4184ac21b)\n- Removed all unsafe code from \"bastion\", added a \"GlobalSystem\" struct to replace \"ROOT_SPV\", \"SYSTEM\" and \"SYSTEM_SENDER\", updated System to return GlobalSystem and fixed formatting. [`c2af637`](https://github.com/bastion-rs/bastion/commit/c2af637692be18f35a40c9db1a9dd54f8c9e023a)\n- Added a \"is\" method to Msg, fixed the \"msg!\" macro to allow using \"return\" inside it and updated the \"msg!\" macro to allow to use it as a typed expression. [`be9a3e7`](https://github.com/bastion-rs/bastion/commit/be9a3e736245bce0eb5fa8d2a5a3a3e024fb622d)\n- Add Bastion::spawn method to create a child with the action without using Children::with_exec [`693c8d4`](https://github.com/bastion-rs/bastion/commit/693c8d4a4117b2a6ea95428fd78a1ca5a206972d)\n- Remove old dependency [`d646daa`](https://github.com/bastion-rs/bastion/commit/d646daa52670a8a70f29ada1f39b16daa5daa409)\n- Fix pointer width, goddamit [`b593647`](https://github.com/bastion-rs/bastion/commit/b5936479f1c31f4cafd3725e77a38ac39435ee37)\n- Fetch cores at once, rely on runtime [`5c52042`](https://github.com/bastion-rs/bastion/commit/5c520424a8c4a237f10fdf165b7f570d7397871d)\n- Discord Integration [`c0f555c`](https://github.com/bastion-rs/bastion/commit/c0f555ca583ab14e20cec1af88eab57fb49f4b56)\n- Fixed the children redundancy proptest to initialize and start Bastion and fixed formatting. [`c141bab`](https://github.com/bastion-rs/bastion/commit/c141bab3304739c2d7d78580d0158c75e60e7893)\n- fixed warnings in tests and examples [`99564a6`](https://github.com/bastion-rs/bastion/commit/99564a68293ef2399efe4b1bfd78c12542bced07)\n- Fix redundancy lower bounds [`98be08b`](https://github.com/bastion-rs/bastion/commit/98be08bde195d6c7b4b9197b2446bfbf381bbc64)\n- Fixed typos. [`80a8ba0`](https://github.com/bastion-rs/bastion/commit/80a8ba0d009a768930a9136077849a6983fe63d8)\n- Update README.md [`783cf63`](https://github.com/bastion-rs/bastion/commit/783cf63f7a85c7d4042dbc105a83d42fc97a6790)\n- fixed unused warnings in bastion-executor [`9fea200`](https://github.com/bastion-rs/bastion/commit/9fea2004a4865d01968a46a44f239edfbaa28d10)\n- Ran cargo fix [`8cdb6af`](https://github.com/bastion-rs/bastion/commit/8cdb6af9dec5b63202a5f6ed6842303cb91ef5a6)\n- (cargo-release) version 0.3.2 [`4c67809`](https://github.com/bastion-rs/bastion/commit/4c67809b1a4d57376aa39af3b26b147e7081d351)\n- Fix contributing guide link [`c35d7e5`](https://github.com/bastion-rs/bastion/commit/c35d7e5d0402683eb82ed288f8ac70e522bcf1c9)\n- (cargo-release) version 0.3.1 [`8c69574`](https://github.com/bastion-rs/bastion/commit/8c695747b7ee01bf3af94978500fca8d4bcf1697)\n- (cargo-release) version 0.3.0 [`785876e`](https://github.com/bastion-rs/bastion/commit/785876ed0488993e109b65ebbd82c96b61f604e2)\n- Updated bastion's dependencies and fixed bastion's Cargo.toml readme path. [`0ce3845`](https://github.com/bastion-rs/bastion/commit/0ce3845c83937cf789ca907d55cec5ef0c78f141)\n- Give a better wording [`41852c5`](https://github.com/bastion-rs/bastion/commit/41852c5c01fdb457f7f1c521b73b3ab005e2050b)\n- Bump dependency to 0.3.2-alpha.0 [`54aa9b5`](https://github.com/bastion-rs/bastion/commit/54aa9b58bfefec83b989db15199283a3ad156075)\n- Bastion exdcutor 0.3.2-alpha.0 [`71b9649`](https://github.com/bastion-rs/bastion/commit/71b9649357206e9abe664d32ceee4fefe3f4b445)\n- Add Children::with_redunancy call to spawn method [`95a6e21`](https://github.com/bastion-rs/bastion/commit/95a6e2158882a5c712a0881b7ae164cd55e4ebd3)\n- Replaced \"futures-preview\" with \"futures\". [`6b6095c`](https://github.com/bastion-rs/bastion/commit/6b6095c93b78861e114cc347badcfff2601f1ab6)\n- Make hundred workers, why not… [`05c7cc7`](https://github.com/bastion-rs/bastion/commit/05c7cc781d23c5e628ae68fd599ec962e7a7b95d)\n- (cargo-release) start next development iteration 0.3.2-alpha.0 [`1e580af`](https://github.com/bastion-rs/bastion/commit/1e580af70f7b57111405081fb8bd6a6684e4ac07)\n- (cargo-release) version 0.3.1 [`9fab907`](https://github.com/bastion-rs/bastion/commit/9fab9074ce6f680364b29b6757a73d68f3fade6d)\n- Fixed typos. [`cc883ca`](https://github.com/bastion-rs/bastion/commit/cc883ca0fcbd6f8a3c800444389a6daaf0e95cf8)\n- Fixed typos. [`e32cc36`](https://github.com/bastion-rs/bastion/commit/e32cc36330014903cbe4ee1ab4f078b80a9a7ef9)\n- (cargo-release) start next development iteration 0.3.1-alpha.0 [`e953b87`](https://github.com/bastion-rs/bastion/commit/e953b873844ef27b2f94b37b1d83fd21990cbe9c)\n- (cargo-release) version 0.3.0 [`d15e163`](https://github.com/bastion-rs/bastion/commit/d15e163163f258fcd8fa508e53294fd1203266bb)\n- (cargo-release) version 0.3.0-alpha.1 [`703fa65`](https://github.com/bastion-rs/bastion/commit/703fa65ba81b4f0ebed6d77d82b194b19925abc4)\n- Add AWS Lambda use case [`e35c485`](https://github.com/bastion-rs/bastion/commit/e35c485f8d7e0afdc4cbf0c6ad1376e98081a544)\n- Remove debug [`ac8219a`](https://github.com/bastion-rs/bastion/commit/ac8219a4d54c92cc27aad96e7fc51cf1ab8ce68d)\n- Remove unnecessary compute [`387e692`](https://github.com/bastion-rs/bastion/commit/387e692e5bae7bea1c1a704bbd773fb8e72c8c4c)\n- Exported BastionContext at bastion's root. [`56351ce`](https://github.com/bastion-rs/bastion/commit/56351ce6ab3fde282ec7ddcf70ac6d3db7a1dd1e)\n- Fix conflicts [`2085102`](https://github.com/bastion-rs/bastion/commit/2085102747f0151459287838eb9377ddff082b16)\n- Set up lightproc version [`56200e1`](https://github.com/bastion-rs/bastion/commit/56200e16ce54fea52ee5e3d1f10b6502371fd6b4)\n- Fix lightproc stack test [`d917551`](https://github.com/bastion-rs/bastion/commit/d9175517abd31bd4086e9ccabf20173890df78bc)\n- Remove empty support doc [`b39fa5b`](https://github.com/bastion-rs/bastion/commit/b39fa5bdbf2fd9629609d3e9e720ae4f0128deef)\n- Fix conflicts [`5c1637d`](https://github.com/bastion-rs/bastion/commit/5c1637d00ded60c65afe85e33531475368c5f228)\n- Stack representation [`8902488`](https://github.com/bastion-rs/bastion/commit/8902488fed90f7c2251720ed5b9334ca7ff47bab)\n- Added some documentation, removed the registry, added a ChildRef struct, added methods to the \"refs\", renamed PoisonPill into Kill and Dead into Stopped, fixed a few critical bugs and cleaned up a bit [`66425e0`](https://github.com/bastion-rs/bastion/commit/66425e0556bc1487694ee144c45ae9824ce775e0)\n- Loads of changes, please see the commit's full description [`07f17f9`](https://github.com/bastion-rs/bastion/commit/07f17f9579b045a0f359a7a09768c17b97108709)\n- Offset access [`e076792`](https://github.com/bastion-rs/bastion/commit/e0767929dad99bf5a2414dbabb2bbc1f016d02aa)\n- Fixed formatting and updated Children to forward messages to its own children [`be4b1bc`](https://github.com/bastion-rs/bastion/commit/be4b1bc4d7c7fe68cd27b06782b12d6bf9da4137)\n- Test [`7deedca`](https://github.com/bastion-rs/bastion/commit/7deedca275710b69ba1a071981768407391a7fae)\n- refactor [`e2ec8e9`](https://github.com/bastion-rs/bastion/commit/e2ec8e931b7e713cf2b53b0d0cf0b8e58e84d203)\n- After panic callback is added [`a3aba3b`](https://github.com/bastion-rs/bastion/commit/a3aba3b76138c8e71862a7c95c312d28e32f9401)\n- Renamed BastionContext's \"as_ref\" method to \"current\", removed its \"send_msg\" method and added documentation to all its methods [`b49bd54`](https://github.com/bastion-rs/bastion/commit/b49bd54834d2b73e1d0648b5df9b793d60cee765)\n- Added support for creating nested supervisors and replaced \"runtime\" with \"tokio\", also adding a Proc struct to replace JoinHandle [`2d5e537`](https://github.com/bastion-rs/bastion/commit/2d5e5375809957bbe454e62b1c5513cb10850697)\n- Realloc pointer alignment and Debug impls [`252893c`](https://github.com/bastion-rs/bastion/commit/252893cf57afd411f27ec17c8906d840bde93364)\n- Added a ContextState struct to store a Child's messages and updated Child to store received message in it and Context to allow to get messages from it [`57a4ff6`](https://github.com/bastion-rs/bastion/commit/57a4ff60fb9a51a11b6bc94fa7077f362114377b)\n- Format all the code [`000d42e`](https://github.com/bastion-rs/bastion/commit/000d42e4251ba44118356e9a91dda64b3d2932a4)\n- Added a \"message\" macro to match a boxed Message against types [`e09764e`](https://github.com/bastion-rs/bastion/commit/e09764eed84e77a56495baf03331c9c25485c149)\n- Cargo fmt [`929b1e9`](https://github.com/bastion-rs/bastion/commit/929b1e9be654e0b4bc3dd6a209ea892ee7f48e15)\n- Builder pattern [`58e0c72`](https://github.com/bastion-rs/bastion/commit/58e0c723f6783252611d6aa3dd4f7cc6bf215a1f)\n- Added a \"broadcast\" method to Bastion [`47891ce`](https://github.com/bastion-rs/bastion/commit/47891ce6d1d96c8f3a767702eb4d54c441fabc7c)\n- Added a \"send_msg\" method to ChildRef and updated ChildrenRef's documentation to use the message macro [`354938d`](https://github.com/bastion-rs/bastion/commit/354938de7891073a9fb7cc89c683cbcaa15cb6c0)\n- Implemented Debug on all structs [`329e79e`](https://github.com/bastion-rs/bastion/commit/329e79e9f0679de2e346f2e05d21a32204a21f5f)\n- Added a really simple example to show how sending and receiving messages works from inside a child [`09c9360`](https://github.com/bastion-rs/bastion/commit/09c9360e0c82a96c70595d0d5239b5a371085777)\n- updated parking_lot::Mutex to std::sync::Mutex [`10f4386`](https://github.com/bastion-rs/bastion/commit/10f43866e44f4407a99217be30b4a4e7720a4819)\n- Fix and format [`5f358ef`](https://github.com/bastion-rs/bastion/commit/5f358efc72ec5ce2cf990829c103abe73fb88d29)\n- Updated Bastion::start to block until the system has stopped [`1e54112`](https://github.com/bastion-rs/bastion/commit/1e541125710b5e37452bd901119ee56cb20c27e7)\n- Before start callback [`2c548c2`](https://github.com/bastion-rs/bastion/commit/2c548c2bdae01b701476a1fd8d8eb87f373d5daa)\n- Added the \"stop\" and \"kill\" methods to Bastion and cleaned up a bit [`a26238d`](https://github.com/bastion-rs/bastion/commit/a26238d8082e2a5aa897c9a77d33ae3c1cd96d93)\n- Replaced the Fut trait with a struct that can be created from any Future [`b17bef2`](https://github.com/bastion-rs/bastion/commit/b17bef2e7ce79ea74af361db83c3680302c8e8a6)\n- Remove unnecessary panic helpers [`e7d16b7`](https://github.com/bastion-rs/bastion/commit/e7d16b72c2bd63e251a7db181b47266a60fef0f5)\n- Cargo fix [`8778921`](https://github.com/bastion-rs/bastion/commit/8778921e2d8d3b3c0120dea8fa6eb6fe6f1a426c)\n- Remove debug lines [`a846834`](https://github.com/bastion-rs/bastion/commit/a84683434bbe988e3110adc89538161c78ffb5a1)\n- After complete callback done [`3838dec`](https://github.com/bastion-rs/bastion/commit/3838dec8e98b09a002a432962f0c98d381cf9110)\n- Updated the registry to use \"dashmap\" instead of \"chashmap\" and fixed its remove_* methods [`0cef368`](https://github.com/bastion-rs/bastion/commit/0cef368630636c6aac5950c0e20b152c92168d98)\n- Callback clone for sharing callbacks from stack [`97f9e9a`](https://github.com/bastion-rs/bastion/commit/97f9e9a31814098cd98cb4aebb78f3bc1b8e13aa)\n- cargo fmt [`aa4441b`](https://github.com/bastion-rs/bastion/commit/aa4441b3b745b80b0ada8a8d5d652dd63528c51a)\n- cargo fix [`2114610`](https://github.com/bastion-rs/bastion/commit/2114610303c472add40dc8a22df0d16a624f7338)\n- Removed registry-related dependencies and futures 0.1 [`ea44f29`](https://github.com/bastion-rs/bastion/commit/ea44f29a12fdbbc3c222faba0c3f2150480b3a1e)\n- Updated `uuid` and removed its `const_fn` feature [`d449799`](https://github.com/bastion-rs/bastion/commit/d449799fffbe74d624a753703c67cac0b8b6a868)\n- Cargo fix [`22367c8`](https://github.com/bastion-rs/bastion/commit/22367c81c76a632c9573ca33f87b6047db5c7198)\n- Merge pull request #49 from mh84/master [`4a16b74`](https://github.com/bastion-rs/bastion/commit/4a16b74cab270626a32472e4963089597c3cd1aa)\n- Initial commit for v0.3 [`f3d82b6`](https://github.com/bastion-rs/bastion/commit/f3d82b67668bb42a9bd1cccbb6f0bb80b47b7151)\n- Removed the _* directories [`055c746`](https://github.com/bastion-rs/bastion/commit/055c746fb8df624141a95b7f8dcc4bcda2523ba2)\n- Moved all message-related types and macros to a new \"message\" module, renamed the message macro to \"msg\", updated its syntax a bit (using semicolons instead of commas to separate cases) and fixed the formatting. [`0fdc0a9`](https://github.com/bastion-rs/bastion/commit/0fdc0a9ac0cc2d370ba160958a85c0dbf1d6a6ca)\n- Updated the \"children\" methods to work in a similar way as the \"supervisor\" methods, allowing to configure the now public \"Children\" using its \"with_exec\" and \"with_redundancy\" methods. [`249e66a`](https://github.com/bastion-rs/bastion/commit/249e66aac0475ab13630d785eaa6bc0e8f8cd326)\n- Updated bastion to use lightproc and a thread pool instead of tokio, removed Proc, removed the Closure and Shell traits and the Fut struct, making removing the need for calling `.into()` on children's futures and cleaned up a bit. [`0c66ec2`](https://github.com/bastion-rs/bastion/commit/0c66ec2bd5c218472bd17d8d629a50f21089812b)\n- Updated messages to be inside an Arc when broadcasted instead of being cloned, updated the \"broadcast\" and \"send_msg\" methods to accept and return an unboxed message, updated \"recv\" and \"try_recv\" to return a new \"Msg\" struct, renamed BastionMessage's Message into Tell and updated some visibilies. [`800f739`](https://github.com/bastion-rs/bastion/commit/800f73998b35262b322f5ec094c4668eefce7874)\n- Updated the visibility of ProcStack's fields, renamed TaskLayout into ProcLayout, added the \"cancel\" and \"stack\" methods to RecoverableHandle and made its inner ProcHandle private, made ProcFutureExt and CatchUnwind private and fixed a few typos and formatting issues. [`ca5df91`](https://github.com/bastion-rs/bastion/commit/ca5df91d09bb87a744a2b705e71ec977c38442bd)\n- Initial executor design [`116c81f`](https://github.com/bastion-rs/bastion/commit/116c81fcdc7c7511ff9a0d2f8d1ac1f886c0bb56)\n- Global allocator [`cc4fbbb`](https://github.com/bastion-rs/bastion/commit/cc4fbbb6bdcd77f0406cc62d091488d6036f7902)\n- Removed the src/bastion.rs file [`825ab3f`](https://github.com/bastion-rs/bastion/commit/825ab3fa386182f4bbcb0e3c2616f5863a218f8f)\n- Added support for \"telling\" and \"asking\" messages, added support for matching and answering the \"asked\" messages, added support for receiving the answers of those messages and updated the \"send_recv\" message. [`2127aab`](https://github.com/bastion-rs/bastion/commit/2127aab0d164db33c7042e7e5d2747619e4a079e)\n- Add benchmarks [`566c408`](https://github.com/bastion-rs/bastion/commit/566c4080566cb34b457f1b7ae4442738b7682c4d)\n- Rename task naming to proc [`7049d70`](https://github.com/bastion-rs/bastion/commit/7049d701e0cbcd319941e36ba413440fa01e412e)\n- Cleaning the tests [`cc3547f`](https://github.com/bastion-rs/bastion/commit/cc3547f178c08b83eabd12a1d8781e94df4e655a)\n- Spawn async problems [`1ea3cb9`](https://github.com/bastion-rs/bastion/commit/1ea3cb957ebf2e1c9bdd3e11599325d58c3e5e49)\n- Added documentation for Children, Supervisor and Children's new with_exec and with_redundancy methods and hide Sender and its methods' documentation. [`900a71e`](https://github.com/bastion-rs/bastion/commit/900a71ee2df517019869fa16e0b56867451dcc37)\n- Rework on the scheduler [`7e9a938`](https://github.com/bastion-rs/bastion/commit/7e9a93872f5654c6b68176b31eea3507a6168dff)\n- Initial lightproc development [`2ff7604`](https://github.com/bastion-rs/bastion/commit/2ff76041abfd640d9e17784f729500705b11a5cf)\n- New executor scaffold [`3bab921`](https://github.com/bastion-rs/bastion/commit/3bab9212b4f627874b880be7e9adaa05820a310a)\n- Implemented fault recovery for the system and basic message passing for it and the supervisors [`a552a03`](https://github.com/bastion-rs/bastion/commit/a552a03ac636c6be56b2503748b8dc9ddc808605)\n- Added a skeleton for the Bastion and System structs, and cleaned up a bit [`291bde6`](https://github.com/bastion-rs/bastion/commit/291bde6a9c1d79bb59cc230391949f2816d70661)\n- Added documentation for Message, Answer and Msg. [`7aad9ee`](https://github.com/bastion-rs/bastion/commit/7aad9eeb7fbdadc1a7522c82995aa2d7d6d47617)\n- LoadBalancer [`b747429`](https://github.com/bastion-rs/bastion/commit/b7474295cdd7a65b43392d40bf1cc2bed7841044)\n- Realloc at the assignment side [`4561833`](https://github.com/bastion-rs/bastion/commit/45618339e584db5d123bffe376abce13b800e8eb)\n- Cargo format [`b3d8e8f`](https://github.com/bastion-rs/bastion/commit/b3d8e8fcdcffe7bde37beb12d616e0e466061fc0)\n- Added documentation for Bastion. [`2497485`](https://github.com/bastion-rs/bastion/commit/2497485d49f601896c3a509b913d84163a1c40db)\n- Added a skeleton for Registry and cleaned up a bit [`c688d53`](https://github.com/bastion-rs/bastion/commit/c688d536676c07519e6b6b94b0fb84a34df5abed)\n- Renamed BastionID to BastionId and finished hiding Uuids inside it [`b9eec99`](https://github.com/bastion-rs/bastion/commit/b9eec99c06be600f4d59731e190edb8ef7e06b6f)\n- Run queue docs [`7438669`](https://github.com/bastion-rs/bastion/commit/7438669ef18499cdd59b49ac484e864a4bee37c8)\n- Scheduler complete [`089e3f2`](https://github.com/bastion-rs/bastion/commit/089e3f2be8593d8b73523e04ed8c93c000318305)\n- Code format [`960fee6`](https://github.com/bastion-rs/bastion/commit/960fee69d695a3971beec86b9b9328203e347089)\n- Added support for sending messages to another child and hide Uuids inside a BastionID struct [`719b3c5`](https://github.com/bastion-rs/bastion/commit/719b3c5f3371db5f3fbcc4bd3c1bcc0c2c654081)\n- Updated the supervisors and children to change their ID and senders/receivers after restarting and updated BastionId to generate its own ID by itself [`4278240`](https://github.com/bastion-rs/bastion/commit/4278240cab6e5ffa4d8e21c1ab8d1060d2657519)\n- Fixed the formatting and dead links, and implemented Clone on ChildrenRef and ChildRef [`e2f72ed`](https://github.com/bastion-rs/bastion/commit/e2f72edec3d204fcea6b08c5d3d5220439307a5f)\n- Stub [`a48bec7`](https://github.com/bastion-rs/bastion/commit/a48bec700add1c50997bd1f1fbdc3823212f0a31)\n- Allocator implementation ordeR [`c9bc705`](https://github.com/bastion-rs/bastion/commit/c9bc705beff4527bfd563f4697e86a56631d322f)\n- Updated children and supervisors to register and unregister themselves [`82c73cf`](https://github.com/bastion-rs/bastion/commit/82c73cfe9181c6783fa61ea18b639657059bda23)\n- Updated Supervisor to use vectors instead of trees and cleaned up a bit [`ff14ea3`](https://github.com/bastion-rs/bastion/commit/ff14ea35380b49700254b7f326890d5185b427a7)\n- Use unstable feature gate for NUMA allocator [`caa6b02`](https://github.com/bastion-rs/bastion/commit/caa6b02238869d2282ca93457ebbf0317e31804e)\n- Updated RecoverableHandle to return Poll::Ready(None) instead of unwinding panics, implemented Debug on it, updated ProcHandle's Debug implementation to show the proc's stack and elided some lifetimes. [`a815b31`](https://github.com/bastion-rs/bastion/commit/a815b31ef0465734da7bb58190d64e6cefc0ecce)\n- Stack copy implementation [`e41926a`](https://github.com/bastion-rs/bastion/commit/e41926a8407a0ef45e0ff97cfd03a3f4d0001c2b)\n- Moved the profiles to the main Cargo.toml file [`9e9acc6`](https://github.com/bastion-rs/bastion/commit/9e9acc6b75f3221a60a100d546beaf596899b782)\n- Cargo fix for all [`0ebcbf3`](https://github.com/bastion-rs/bastion/commit/0ebcbf3aa8938ca32bef30a38978c37905c46811)\n- Fix cargo fmt errors [`bbabba4`](https://github.com/bastion-rs/bastion/commit/bbabba41abc27eeba19a68494649d5c25ee71bca)\n- Fetch relative offsets for data [`5cb0ccc`](https://github.com/bastion-rs/bastion/commit/5cb0ccc77338c6b0065b0023c3a068672863097a)\n- Updated Supervisor's documentation to use the message macro [`1a32b59`](https://github.com/bastion-rs/bastion/commit/1a32b5946d3b24750150f37e0a9c6c115e251176)\n- Enable numa-aware allocator [`d1d7062`](https://github.com/bastion-rs/bastion/commit/d1d70625a02c567e74678d9204c1f03f4c5ca2c6)\n- Expose organization [`a6e7e9f`](https://github.com/bastion-rs/bastion/commit/a6e7e9f82c353b7d91c40e9bebea6cfc0d7288d9)\n- Stat struct [`056a455`](https://github.com/bastion-rs/bastion/commit/056a455c713968594bf81f5de61bd5cc1271f270)\n- Load balancer schedule timing [`8301043`](https://github.com/bastion-rs/bastion/commit/8301043df5547f72a3e43666bc5f03c70a8c053e)\n- Fill missing fields for Cargo.toml [`845ea8c`](https://github.com/bastion-rs/bastion/commit/845ea8cb72af1d8ee6b728b8d724a1b30407e439)\n- Future layout allocation [`206b2af`](https://github.com/bastion-rs/bastion/commit/206b2af764f1692fff3dd6ad7251f8c44c170f65)\n- cargo fix & format [`1590cd3`](https://github.com/bastion-rs/bastion/commit/1590cd3db40fce7aa22762a9d92e6fb60ce0dea2)\n- Remove old scheduler [`c4cd383`](https://github.com/bastion-rs/bastion/commit/c4cd3832ba01ca3402959d4578ca8626d4056b92)\n- Address comments [`c8792a9`](https://github.com/bastion-rs/bastion/commit/c8792a9e29b032c5760c73e8f966dd3e16e445d3)\n- Load balancer wait for it [`5628389`](https://github.com/bastion-rs/bastion/commit/56283893ed47399cbf4093b5e89ccf4ea7b47bb3)\n- Expose catch_unwind [`3f4fae0`](https://github.com/bastion-rs/bastion/commit/3f4fae0ff968e0610a4df68573d441fe12014d41)\n- Remove main.workflow [`f52d446`](https://github.com/bastion-rs/bastion/commit/f52d446f145cf6631d26db7bfe85ed6694281ecf)\n- Fix feature gate jobs [`0429068`](https://github.com/bastion-rs/bastion/commit/0429068f91eb057c23e17aab891388dbcb34a1a6)\n- Remove thanks section from README [`e267a40`](https://github.com/bastion-rs/bastion/commit/e267a4006a9ed0b13f21cee68bbd370936043873)\n- Run queue size [`2cb4ae3`](https://github.com/bastion-rs/bastion/commit/2cb4ae3a0678b57eefddcf2ee416aa900c5b9646)\n- Example organization [`a758aea`](https://github.com/bastion-rs/bastion/commit/a758aead112f9c1891078925b5f58d02e2055faa)\n- Implemented Debug on Bastion. [`fc9d54e`](https://github.com/bastion-rs/bastion/commit/fc9d54ec4110638b2f0cbed5218d2d0c4054fefd)\n- Add features back [`2cca130`](https://github.com/bastion-rs/bastion/commit/2cca1308df707dde68523e090c59f47433a893d1)\n- Remove feature enablers [`04ad717`](https://github.com/bastion-rs/bastion/commit/04ad7174ea35e69e5e473324c4b3f18b4bec4132)\n- Lightweight process abstraction scaffold [`f1554bb`](https://github.com/bastion-rs/bastion/commit/f1554bbadfa7771e3c5b5bc044fab37640c8b997)\n- Order imports [`36d1ace`](https://github.com/bastion-rs/bastion/commit/36d1ace381dddfc08814565cb84879023068f18f)\n- Import reorganization [`3fb375a`](https://github.com/bastion-rs/bastion/commit/3fb375a4b6f7592bf283273b35f033df9d2ac584)\n- Add readmes [`324c2af`](https://github.com/bastion-rs/bastion/commit/324c2afe514dd937b8e3aeec03bab9edaaa258b5)\n- Remove debug points [`77fa780`](https://github.com/bastion-rs/bastion/commit/77fa7800dc821cddee7f296fbf890d691e9b0e1c)\n- Removed unused dependencies [`f0cf64e`](https://github.com/bastion-rs/bastion/commit/f0cf64e13bebe3eba6c79fc19c534c53b2df314f)\n- Add Discord server for communication. [`563a64b`](https://github.com/bastion-rs/bastion/commit/563a64b0fbb04eb3760c8da451109fd1892af1e1)\n- Updated the patch for qutex to point to the moved repository and a branch which also deactivated debug logs [`5878a33`](https://github.com/bastion-rs/bastion/commit/5878a33a2095cd3d987eaa15cc5decaa838186ef)\n- Added warnings for missing docs and debug implementations. [`9ac8f67`](https://github.com/bastion-rs/bastion/commit/9ac8f67fbe18c012cfc4cf8d25389b547f37867f)\n- Better messages for example [`a748b8c`](https://github.com/bastion-rs/bastion/commit/a748b8c05daedbb89b2700028aacb355de85956b)\n- Cargo fix [`4ffe7d5`](https://github.com/bastion-rs/bastion/commit/4ffe7d5f4bec7718752b3a37c11923eab2f88e14)\n- Remove global proc_future type [`b9b8e1c`](https://github.com/bastion-rs/bastion/commit/b9b8e1cd1bd41b1e24ed83fe1b48e745667402e8)\n- Add categories [`7321b6d`](https://github.com/bastion-rs/bastion/commit/7321b6deb42eeb97153c2a4e902af7bee15ae869)\n- Replace Gitter links with Discord [`dd49c4e`](https://github.com/bastion-rs/bastion/commit/dd49c4ef7282f6d0feabe1eae0abdde2dbeb2a00)\n- Fix readme appveyor build tag [`75617e3`](https://github.com/bastion-rs/bastion/commit/75617e37cbc746ed802fd4f55bf8db4907a9dc98)\n- Fix dep order [`46081af`](https://github.com/bastion-rs/bastion/commit/46081afc8d28b3aad99737de23cb2d1495771a71)\n- Remove unnecessary ignore config [`59d0efc`](https://github.com/bastion-rs/bastion/commit/59d0efcff0db9a6ac1840242bf3848d6a6f2c736)\n- Select SMP core fix [`44f744b`](https://github.com/bastion-rs/bastion/commit/44f744b8dd39a52a180b425f13884c1352b682d6)\n- Change description of executor [`3e665b6`](https://github.com/bastion-rs/bastion/commit/3e665b64dde6d2eacaaeafae967eb7e6ea300667)\n- (cargo-release) start next development iteration 0.3.2 [`5dc3ebc`](https://github.com/bastion-rs/bastion/commit/5dc3ebc4c2f88dc7b8114721e8eed5a9b473cb05)\n- (cargo-release) version 0.3.2 [`4d478f0`](https://github.com/bastion-rs/bastion/commit/4d478f00b405f9074f5214aa1a4b6c7cebf258b5)\n- (cargo-release) version 0.3.1 [`c4cb935`](https://github.com/bastion-rs/bastion/commit/c4cb93508ef3fcbe8987036ac1b59a1ac3936cb8)\n- (cargo-release) version 0.3.0 [`53e5654`](https://github.com/bastion-rs/bastion/commit/53e5654fe257ee1e465fa9f5d00a4626eb815abb)\n- Lightproc data [`7078d0b`](https://github.com/bastion-rs/bastion/commit/7078d0b95a34df0d9c59290541e6f79a3a8c064e)\n- Fix panic example [`92c4ca8`](https://github.com/bastion-rs/bastion/commit/92c4ca8de9c49a256296a145fcc6b6d38de86a61)\n- Reduce allocator dependencies [`b825af1`](https://github.com/bastion-rs/bastion/commit/b825af184e1af5b0bf21b200f3bc1e052ff42ee7)\n- Update lightproc/Cargo.toml [`5be1840`](https://github.com/bastion-rs/bastion/commit/5be1840bf69e38cf63c21a3fc45402db4eb1161b)\n- Update lightproc/Cargo.toml [`30dfd4d`](https://github.com/bastion-rs/bastion/commit/30dfd4d932a40fb44bdb9e7e4c99334a51589e2c)\n- Update lightproc/Cargo.toml [`523525e`](https://github.com/bastion-rs/bastion/commit/523525e22845a628cf63bb0bfd959dbab18b1f35)\n- Update lightproc/src/raw_proc.rs [`dcb9bc7`](https://github.com/bastion-rs/bastion/commit/dcb9bc7ac74b46d3aab51b969531f4d078e815b2)\n- Update lightproc/src/layout_helpers.rs [`b793f74`](https://github.com/bastion-rs/bastion/commit/b793f7400a295952de6e6ea64032b6dc82574ee0)\n- Update lightproc/src/layout_helpers.rs [`9c19e6d`](https://github.com/bastion-rs/bastion/commit/9c19e6dff71c4f0fb1ba905433c2debacfd09786)\n- Update lightproc/Cargo.toml [`a9042b2`](https://github.com/bastion-rs/bastion/commit/a9042b28bfe24490ab42889385dcbe5842901b82)\n- Add bastion categories too [`9e29a09`](https://github.com/bastion-rs/bastion/commit/9e29a09872f4e6b8f39625679b33ffc3f1b78fc6)\n- Dont run bench on stable, feature is not used on stable channel [`eb70fb6`](https://github.com/bastion-rs/bastion/commit/eb70fb696fe7329c7b52ea71d999b007c3180722)\n- Run all tests [`6018b96`](https://github.com/bastion-rs/bastion/commit/6018b96087d5eb8d75bb58b9e625113da3f074c7)\n- Use cargo doc [`234552a`](https://github.com/bastion-rs/bastion/commit/234552a78d32ee4e5a987795d183c26dd920176c)\n- Use default stable rustfmt [`8668d5c`](https://github.com/bastion-rs/bastion/commit/8668d5cc8b509c99f6392c2f4f7fe6451fa533b7)\n- Fixed building on nightly following https://github.com/rust-lang/cargo/pull/6989 [`467c407`](https://github.com/bastion-rs/bastion/commit/467c40776a5300ece2ebfa6e6b04914e9b78c82d)\n- (cargo-release) start next development iteration 0.2.0 [`7bf0462`](https://github.com/bastion-rs/bastion/commit/7bf04629813dbeaf93b8824135a8a9d0e21ba429)\n- Fixed a missing dependency error after merging [`ca4eb59`](https://github.com/bastion-rs/bastion/commit/ca4eb593851c4c03c630b62c5cb410e6b820886e)\n- Give name for the CI jobs [`f89e247`](https://github.com/bastion-rs/bastion/commit/f89e247b7d9bd57f76d1afbd49cac92d0e3ba46f)\n\n## [v0.2.0](https://github.com/bastion-rs/bastion/compare/v0.1.4-alpha.1...v0.2.0) - 2019-09-29\n\n### Merged\n\n- Regenerate changelog after moving to organization [`#30`](https://github.com/bastion-rs/bastion/pull/30)\n- Project documentation [`#28`](https://github.com/bastion-rs/bastion/pull/28)\n- Context spawn level tests [`#27`](https://github.com/bastion-rs/bastion/pull/27)\n- Change license to use Apache-2.0/MIT [`#26`](https://github.com/bastion-rs/bastion/pull/26)\n- Multi OS builds [`#25`](https://github.com/bastion-rs/bastion/pull/25)\n- Spawn from the context [`#19`](https://github.com/bastion-rs/bastion/pull/19)\n- File extension it seems [`#24`](https://github.com/bastion-rs/bastion/pull/24)\n- Move appveyor file, since it is not picked up. [`#23`](https://github.com/bastion-rs/bastion/pull/23)\n- Build on windows [`#21`](https://github.com/bastion-rs/bastion/pull/21)\n- Remove nightly features [`#20`](https://github.com/bastion-rs/bastion/pull/20)\n- did you mean 'abrupt'? [`#10`](https://github.com/bastion-rs/bastion/pull/10)\n- Shutdown implementation [`#14`](https://github.com/bastion-rs/bastion/pull/14)\n\n### Commits\n\n- All documentation is complete [`d3084ba`](https://github.com/bastion-rs/bastion/commit/d3084ba1c05e6a911b30a57f61acd823d83aa872)\n- Refactor supervisors to carry out context to share data between children [`324a80b`](https://github.com/bastion-rs/bastion/commit/324a80b1623b18b9a874ec78759af28cbb8eb61f)\n- Context documentation [`58f5943`](https://github.com/bastion-rs/bastion/commit/58f5943bbf6176beeba6da6b71fc5d875a31cd0e)\n- Cargo fix [`eb3ddb5`](https://github.com/bastion-rs/bastion/commit/eb3ddb549d650b0ab6c9f8f972e9cbe8a975b1d6)\n- Add doctests and spawn method examples [`b894eaa`](https://github.com/bastion-rs/bastion/commit/b894eaad01768965219bc45bb4ec2da6a55ffcaa)\n- Docs for context [`835c576`](https://github.com/bastion-rs/bastion/commit/835c5765428f0fe16864d452443b3a311d427845)\n- Add changelog [`6493ff8`](https://github.com/bastion-rs/bastion/commit/6493ff8fefe03bc047622bdda3aeffbcfce6b04e)\n- Regenerate changelog [`8cd095c`](https://github.com/bastion-rs/bastion/commit/8cd095cde700059924b0d30e9d79be6d770294b1)\n- Context spawn implementation [`6d40d2e`](https://github.com/bastion-rs/bastion/commit/6d40d2ee65e0de75e0b4292fb842c9919ad69544)\n- Rename links [`7fa4b1f`](https://github.com/bastion-rs/bastion/commit/7fa4b1f132bfa5c5a45b34a065f8c3d486898806)\n- Fix nightly self referential box problem [`37787ba`](https://github.com/bastion-rs/bastion/commit/37787ba6ec3da608d53bb1fd76336f0d8eaaa19b)\n- Features and use case [`7c35942`](https://github.com/bastion-rs/bastion/commit/7c359422cabaccaee0802a20f5afba6b70c2e8f1)\n- Root spawn doc [`02bb93f`](https://github.com/bastion-rs/bastion/commit/02bb93f958786955e2d5f9057975724868bf0818)\n- create an appveyor file [`d80a3e3`](https://github.com/bastion-rs/bastion/commit/d80a3e303da5cfe33d24c008b085616b8b77d970)\n- use ctrlc for cross platform signal handling [`f8f0060`](https://github.com/bastion-rs/bastion/commit/f8f006011d4709f4fe7825c585811a2a33fa7616)\n- Create FUNDING.yml [`b0ca1f6`](https://github.com/bastion-rs/bastion/commit/b0ca1f6faaec8131c8ac5dcb069b845cb8fc2f72)\n- Update main [`1c7f839`](https://github.com/bastion-rs/bastion/commit/1c7f8391acd029e43498631f60cedce0532d5236)\n- Add liberalpay [`f4bc24a`](https://github.com/bastion-rs/bastion/commit/f4bc24a82c27369b3e7e89404cdc1b7e34204171)\n- Workflow fix [`0aa31c6`](https://github.com/bastion-rs/bastion/commit/0aa31c67e1b70c808772b34e066ce7af9a8d3a03)\n- remove nightly feature flags [`a5a4c89`](https://github.com/bastion-rs/bastion/commit/a5a4c89363e5dd6ce1c9f6b37b79c6fb6b5c2920)\n- Remove nightly feature usage warning from README [`15ea639`](https://github.com/bastion-rs/bastion/commit/15ea639e31813651ad0619ceb1091ff29b1284e1)\n- Fix warnings [`2e4e18c`](https://github.com/bastion-rs/bastion/commit/2e4e18ce907a701eae5db84a84de550e433c6245)\n- (cargo-release) version 0.2.0 [`e6ab336`](https://github.com/bastion-rs/bastion/commit/e6ab3361199643b6fee6410cc27d75a15b381f16)\n- Remove leftover debug point [`6d89a50`](https://github.com/bastion-rs/bastion/commit/6d89a5025d9f1c74acb2b29c82ccaa15555df62c)\n- add missing imports [`328f4c4`](https://github.com/bastion-rs/bastion/commit/328f4c47ea092ce434e5e7966d47b52b9234726b)\n- build stable on travis [`d95471b`](https://github.com/bastion-rs/bastion/commit/d95471ba1d9cd112181ffd045ee87f9ab32ae515)\n\n## [v0.1.4-alpha.1](https://github.com/bastion-rs/bastion/compare/v0.1.3...v0.1.4-alpha.1) - 2019-07-27\n\n### Merged\n\n- Make prelude separation [`#12`](https://github.com/bastion-rs/bastion/pull/12)\n- Introduce receive utilities for message [`#11`](https://github.com/bastion-rs/bastion/pull/11)\n- did you mean 'abrupt'? [`#1`](https://github.com/bastion-rs/bastion/pull/1)\n\n### Fixed\n\n- Introduce receive utilities for message [`#1`](https://github.com/bastion-rs/bastion/issues/1)\n\n### Commits\n\n- Fix communication example [`806bc22`](https://github.com/bastion-rs/bastion/commit/806bc2229b6b089b1c5f6e0f1e387dff9492e041)\n- Update code example in the readme [`684a7bb`](https://github.com/bastion-rs/bastion/commit/684a7bb7101289fb74fe824d3f5e3c5938156f64)\n- (cargo-release) version 0.1.4-alpha.1 [`9eaf5d2`](https://github.com/bastion-rs/bastion/commit/9eaf5d298f28caa28763291469a2e9ccdd716611)\n- (cargo-release) start next development iteration 0.1.3 [`3ecf231`](https://github.com/bastion-rs/bastion/commit/3ecf231583fbfb8f9e6bec14320bc186d4fddb1b)\n\n## [v0.1.3](https://github.com/bastion-rs/bastion/compare/v0.1.2...v0.1.3) - 2019-07-21\n\n### Commits\n\n- (cargo-release) version 0.1.3 [`bbdd5bc`](https://github.com/bastion-rs/bastion/commit/bbdd5bc1be225cc14c6d9a64585fcdcccc29de84)\n- Reword logging entry format [`0fb11d1`](https://github.com/bastion-rs/bastion/commit/0fb11d19db943e8eebfa9ca4e136db161b1275aa)\n- (cargo-release) start next development iteration 0.1.2 [`da63455`](https://github.com/bastion-rs/bastion/commit/da63455761ae2d5bd6ff3a34c74b87fc49441d71)\n\n## [v0.1.2](https://github.com/bastion-rs/bastion/compare/v0.1.0...v0.1.2) - 2019-07-21\n\n### Commits\n\n- Cooperatively assembled message [`136cdb6`](https://github.com/bastion-rs/bastion/commit/136cdb6056ede3c1c612ba0ede7479abb4da52fc)\n- Export root spawn [`871261b`](https://github.com/bastion-rs/bastion/commit/871261bf72780f34013266b38edac6bb80416c3f)\n- README update [`09b3e68`](https://github.com/bastion-rs/bastion/commit/09b3e689f9b38db5963d14bbbfea65df9bba6e3a)\n- (cargo-release) version 0.1.2 [`3c8b2ae`](https://github.com/bastion-rs/bastion/commit/3c8b2ae186c11eac844bd0be3a101d930ff2d27c)\n- (cargo-release) version 0.1.1 [`5de7211`](https://github.com/bastion-rs/bastion/commit/5de72116a7d856909bc88b266900a0df2574e567)\n- (cargo-release) start next development iteration 0.1.0 [`3cde800`](https://github.com/bastion-rs/bastion/commit/3cde80043774d9e7344f395cc307dd37ba647b54)\n\n## v0.1.0 - 2019-07-21\n\n### Commits\n\n- Initial commit [`be42fad`](https://github.com/bastion-rs/bastion/commit/be42fad8120e8e92f6a98133d054681950123cbf)\n"
        },
        {
          "name": "Cargo.toml",
          "type": "blob",
          "size": 0.3017578125,
          "content": "[workspace]\nmembers = [\n  \"src/bastion\",\n  \"src/bastion-executor\",\n  \"src/bastion-utils\",\n  \"src/lightproc\"\n]\n\n[profile.bench]\npanic = \"unwind\"\nopt-level = 3\ndebug = false\nrpath = false\nlto = false\ndebug-assertions = false\ncodegen-units = 1\n\n[profile.dev]\npanic = \"unwind\"\n\n[profile.release]\npanic = \"unwind\"\n"
        },
        {
          "name": "LICENSE-APACHE",
          "type": "blob",
          "size": 10.58203125,
          "content": "                              Apache License\n                        Version 2.0, January 2004\n                     http://www.apache.org/licenses/\n\nTERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n1. Definitions.\n\n   \"License\" shall mean the terms and conditions for use, reproduction,\n   and distribution as defined by Sections 1 through 9 of this document.\n\n   \"Licensor\" shall mean the copyright owner or entity authorized by\n   the copyright owner that is granting the License.\n\n   \"Legal Entity\" shall mean the union of the acting entity and all\n   other entities that control, are controlled by, or are under common\n   control with that entity. For the purposes of this definition,\n   \"control\" means (i) the power, direct or indirect, to cause the\n   direction or management of such entity, whether by contract or\n   otherwise, or (ii) ownership of fifty percent (50%) or more of the\n   outstanding shares, or (iii) beneficial ownership of such entity.\n\n   \"You\" (or \"Your\") shall mean an individual or Legal Entity\n   exercising permissions granted by this License.\n\n   \"Source\" form shall mean the preferred form for making modifications,\n   including but not limited to software source code, documentation\n   source, and configuration files.\n\n   \"Object\" form shall mean any form resulting from mechanical\n   transformation or translation of a Source form, including but\n   not limited to compiled object code, generated documentation,\n   and conversions to other media types.\n\n   \"Work\" shall mean the work of authorship, whether in Source or\n   Object form, made available under the License, as indicated by a\n   copyright notice that is included in or attached to the work\n   (an example is provided in the Appendix below).\n\n   \"Derivative Works\" shall mean any work, whether in Source or Object\n   form, that is based on (or derived from) the Work and for which the\n   editorial revisions, annotations, elaborations, or other modifications\n   represent, as a whole, an original work of authorship. For the purposes\n   of this License, Derivative Works shall not include works that remain\n   separable from, or merely link (or bind by name) to the interfaces of,\n   the Work and Derivative Works thereof.\n\n   \"Contribution\" shall mean any work of authorship, including\n   the original version of the Work and any modifications or additions\n   to that Work or Derivative Works thereof, that is intentionally\n   submitted to Licensor for inclusion in the Work by the copyright owner\n   or by an individual or Legal Entity authorized to submit on behalf of\n   the copyright owner. For the purposes of this definition, \"submitted\"\n   means any form of electronic, verbal, or written communication sent\n   to the Licensor or its representatives, including but not limited to\n   communication on electronic mailing lists, source code control systems,\n   and issue tracking systems that are managed by, or on behalf of, the\n   Licensor for the purpose of discussing and improving the Work, but\n   excluding communication that is conspicuously marked or otherwise\n   designated in writing by the copyright owner as \"Not a Contribution.\"\n\n   \"Contributor\" shall mean Licensor and any individual or Legal Entity\n   on behalf of whom a Contribution has been received by Licensor and\n   subsequently incorporated within the Work.\n\n2. Grant of Copyright License. Subject to the terms and conditions of\n   this License, each Contributor hereby grants to You a perpetual,\n   worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n   copyright license to reproduce, prepare Derivative Works of,\n   publicly display, publicly perform, sublicense, and distribute the\n   Work and such Derivative Works in Source or Object form.\n\n3. Grant of Patent License. Subject to the terms and conditions of\n   this License, each Contributor hereby grants to You a perpetual,\n   worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n   (except as stated in this section) patent license to make, have made,\n   use, offer to sell, sell, import, and otherwise transfer the Work,\n   where such license applies only to those patent claims licensable\n   by such Contributor that are necessarily infringed by their\n   Contribution(s) alone or by combination of their Contribution(s)\n   with the Work to which such Contribution(s) was submitted. If You\n   institute patent litigation against any entity (including a\n   cross-claim or counterclaim in a lawsuit) alleging that the Work\n   or a Contribution incorporated within the Work constitutes direct\n   or contributory patent infringement, then any patent licenses\n   granted to You under this License for that Work shall terminate\n   as of the date such litigation is filed.\n\n4. Redistribution. You may reproduce and distribute copies of the\n   Work or Derivative Works thereof in any medium, with or without\n   modifications, and in Source or Object form, provided that You\n   meet the following conditions:\n\n   (a) You must give any other recipients of the Work or\n       Derivative Works a copy of this License; and\n\n   (b) You must cause any modified files to carry prominent notices\n       stating that You changed the files; and\n\n   (c) You must retain, in the Source form of any Derivative Works\n       that You distribute, all copyright, patent, trademark, and\n       attribution notices from the Source form of the Work,\n       excluding those notices that do not pertain to any part of\n       the Derivative Works; and\n\n   (d) If the Work includes a \"NOTICE\" text file as part of its\n       distribution, then any Derivative Works that You distribute must\n       include a readable copy of the attribution notices contained\n       within such NOTICE file, excluding those notices that do not\n       pertain to any part of the Derivative Works, in at least one\n       of the following places: within a NOTICE text file distributed\n       as part of the Derivative Works; within the Source form or\n       documentation, if provided along with the Derivative Works; or,\n       within a display generated by the Derivative Works, if and\n       wherever such third-party notices normally appear. The contents\n       of the NOTICE file are for informational purposes only and\n       do not modify the License. You may add Your own attribution\n       notices within Derivative Works that You distribute, alongside\n       or as an addendum to the NOTICE text from the Work, provided\n       that such additional attribution notices cannot be construed\n       as modifying the License.\n\n   You may add Your own copyright statement to Your modifications and\n   may provide additional or different license terms and conditions\n   for use, reproduction, or distribution of Your modifications, or\n   for any such Derivative Works as a whole, provided Your use,\n   reproduction, and distribution of the Work otherwise complies with\n   the conditions stated in this License.\n\n5. Submission of Contributions. Unless You explicitly state otherwise,\n   any Contribution intentionally submitted for inclusion in the Work\n   by You to the Licensor shall be under the terms and conditions of\n   this License, without any additional terms or conditions.\n   Notwithstanding the above, nothing herein shall supersede or modify\n   the terms of any separate license agreement you may have executed\n   with Licensor regarding such Contributions.\n\n6. Trademarks. This License does not grant permission to use the trade\n   names, trademarks, service marks, or product names of the Licensor,\n   except as required for reasonable and customary use in describing the\n   origin of the Work and reproducing the content of the NOTICE file.\n\n7. Disclaimer of Warranty. Unless required by applicable law or\n   agreed to in writing, Licensor provides the Work (and each\n   Contributor provides its Contributions) on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n   implied, including, without limitation, any warranties or conditions\n   of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n   PARTICULAR PURPOSE. You are solely responsible for determining the\n   appropriateness of using or redistributing the Work and assume any\n   risks associated with Your exercise of permissions under this License.\n\n8. Limitation of Liability. In no event and under no legal theory,\n   whether in tort (including negligence), contract, or otherwise,\n   unless required by applicable law (such as deliberate and grossly\n   negligent acts) or agreed to in writing, shall any Contributor be\n   liable to You for damages, including any direct, indirect, special,\n   incidental, or consequential damages of any character arising as a\n   result of this License or out of the use or inability to use the\n   Work (including but not limited to damages for loss of goodwill,\n   work stoppage, computer failure or malfunction, or any and all\n   other commercial damages or losses), even if such Contributor\n   has been advised of the possibility of such damages.\n\n9. Accepting Warranty or Additional Liability. While redistributing\n   the Work or Derivative Works thereof, You may choose to offer,\n   and charge a fee for, acceptance of support, warranty, indemnity,\n   or other liability obligations and/or rights consistent with this\n   License. However, in accepting such obligations, You may act only\n   on Your own behalf and on Your sole responsibility, not on behalf\n   of any other Contributor, and only if You agree to indemnify,\n   defend, and hold each Contributor harmless for any liability\n   incurred by, or claims asserted against, such Contributor by reason\n   of your accepting any such warranty or additional liability.\n\nEND OF TERMS AND CONDITIONS\n\nAPPENDIX: How to apply the Apache License to your work.\n\n   To apply the Apache License to your work, attach the following\n   boilerplate notice, with the fields enclosed by brackets \"[]\"\n   replaced with your own identifying information. (Don't include\n   the brackets!)  The text should be enclosed in the appropriate\n   comment syntax for the file format. We also recommend that a\n   file or class name and description of purpose be included on the\n   same \"printed page\" as the copyright notice for easier\n   identification within third-party archives.\n\nCopyright [2019] [Mahmut Bulut]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n\thttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n"
        },
        {
          "name": "LICENSE-MIT",
          "type": "blob",
          "size": 1.0390625,
          "content": "MIT License\n\nCopyright (c) Mahmut Bulut\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 8.7080078125,
          "content": "<div align=\"center\">\n  <img src=\"https://github.com/bastion-rs/bastion/blob/master/img/bastion.png\"><br>\n</div>\n\n---\n\n<table>\n  <tr>\n    <td>Latest Release</td>\n    <td>\n      <a href=\"https://crates.io/crates/bastion\">\n      <img alt=\"Crates.io\" src=\"https://img.shields.io/crates/v/bastion.svg?style=popout-square\">\n      </a>\n    </td>\n    <td>License</td>\n    <td>\n      <a href=\"https://github.com/bastion-rs/bastion/blob/master/LICENSE\">\n      <img alt=\"Crates.io\" src=\"https://img.shields.io/crates/l/bastion.svg?style=popout-square\">\n      </a>\n    </td>\n  </tr>\n  <tr>\n    <td>Doc [Bastion]</td>\n    <td>\n      <a href=\"https://docs.rs/bastion\">\n      <img alt=\"Documentation (Bastion)\" src=\"https://img.shields.io/badge/rustdoc-bastion-blue.svg\" />\n      </a>\n    </td>\n    <td>Downloads</td>\n    <td>\n      <a href=\"https://crates.io/crates/bastion\">\n      <img alt=\"Crates.io\" src=\"https://img.shields.io/crates/d/bastion.svg?style=popout-square\">\n      </a>\n    </td>\n  </tr>\n  <tr>\n  <td>Doc [Bastion Executor]</td>\n    <td>\n      <a href=\"https://docs.rs/bastion-executor\">\n      <img alt=\"Documentation (Bastion Executor)\" src=\"https://img.shields.io/badge/rustdoc-bastion_executor-blue.svg\" />\n      </a>\n    </td>\n    <td>Discord</td>\n    <td>\n      <a href=\"https://discord.gg/DqRqtRT\">\n      <img src=\"https://img.shields.io/discord/628383521450360842.svg?logo=discord\" />\n      </a>\n    </td>\n  </tr>\n  <tr>\n  </tr>\n  <tr>\n    <td>Doc [LightProc]</td>\n    <td>\n      <a href=\"https://docs.rs/lightproc\">\n      <img alt=\"Documentation (LightProc)\" src=\"https://img.shields.io/badge/rustdoc-lightproc-blue.svg\" />\n      </a>\n    </td>\n    <td>Build Status</td>\n    <td>\n      <a href=\"https://github.com/bastion-rs/bastion/actions\">\n      <img alt=\"Build Status\" src=\"https://github.com/bastion-rs/bastion/workflows/CI/badge.svg\" />\n      </a>\n    </td>\n  </tr>\n</table>\n\n---\n\n<h1 align=\"center\">Highly-available Distributed Fault-tolerant Runtime</h1>\n\nBastion is a highly-available, fault-tolerant runtime system with dynamic, dispatch-oriented, lightweight process model. It supplies actor-model-like concurrency with a lightweight process implementation and utilizes all of the system resources efficiently guaranteeing of at-most-once message delivery.\n\n---\n\n## Usage\n\nBastion comes with a default one-for-one strategy root supervisor.\nYou can use this to launch automatically supervised tasks.\n\n## Get Started\n\nInclude bastion to your project with:\n```toml\nbastion = \"0.4\"\n```\n\n### Documentation\n\nOfficial documentation is hosted on [docs.rs](https://docs.rs/bastion).\n\n### Examples\n\nCheck the [getting started example](https://github.com/bastion-rs/bastion/blob/master/src/bastion/examples/getting_started.rs) in <code>bastion/examples</code>\n\n[Examples](https://github.com/bastion-rs/bastion/blob/master/src/bastion/examples) cover possible use cases of the crate.\n\n## Features\n* Message-based communication makes this project a lean mesh of actor system.\n    * Without web servers, weird shenanigans, forced trait implementations, and static dispatch.\n* Runtime fault-tolerance makes it a good candidate for distributed systems.\n    * If you want the smell of Erlang and the powerful aspects of Rust. That's it!\n* Completely asynchronous runtime with NUMA-aware and cache-affine SMP executor.\n    * Exploiting hardware locality wherever it is possible. It is designed for servers.\n* Supervision system makes it easy to manage lifecycles.\n    * Kill your application in certain condition or restart you subprocesses whenever a certain condition is met.\n* Automatic member discovery, cluster formation and custom message passing between cluster members.\n    * Using zeroconf or not, launch your bastion cluster from everywhere, with a single actor block.\n* Proactive IO system which doesn't depend on anything other than `futures`.\n    * Bastion's proactive IO has scatter/gather operations, `io_uring` support and much more...\n\n## Guarantees\n* At most once delivery for all messages.\n* Completely asynchronous system design.\n* Asynchronous program boundaries with [fort](https://github.com/bastion-rs/fort).\n* Dynamic supervision of supervisors (adding a subtree later during the execution)\n* Lifecycle management both at `futures` and [lightproc](https://github.com/bastion-rs/bastion/tree/master/src/lightproc) layers.\n* Faster middleware development.\n* Fault tolerance above all.\n\n## Why Bastion?\nIf you answer any of the questions below with yes, then Bastion is just for you:\n* Do I want proactive IO?\n* Do I need fault-tolerance in my project?\n* Do I hate to implement weird Actor traits?\n* I shouldn't need a webserver to run an actor system, right?\n* Do I want to make my existing code unbreakable?\n* Do I have some trust issues with orchestration systems?\n* Do I want to implement my own application lifecycle?\n\n## Bastion Ecosystem\n\nBastion Ecosystem is here to provide you a way to customize it. If you don't need to, or if you are a newcomers, you can install and use Bastion without knowing how everything works under the hood. We hope to find you on this section soon.\n\n### [Nuclei](https://github.com/vertexclique/nuclei)\nNuclei is proactive IO system that can be independently used without executor restriction. It is also powering Bastion's IO system.\nYou can learn more about Nuclei [here](https://github.com/vertexclique/nuclei), check out Nuclei's repo for more sophisticated use cases.\n\n### [LightProc](https://github.com/bastion-rs/bastion/tree/master/src/lightproc)\n\nLightProc is Lightweight Process abstraction for Rust.\n\nIt uses futures with lifecycle callbacks to implement Erlang like processes and contains basic pid to identify processes.\nAll panics inside futures are propagated to upper layers.\n\n### [Bastion Executor](https://github.com/bastion-rs/bastion/tree/master/src/bastion-executor)\n\nBastion Executor is NUMA-aware SMP based Fault-tolerant Executor, highly-available and async communication oriented.\n\nIt's independent of it's framework implementation. It uses lightproc to encapsulate and provide fault-tolerance to your future based workloads. You can use your futures with lightproc to run your workloads on Bastion Executor without the need to have framework.\n\n### [Agnostik](https://github.com/bastion-rs/agnostik)\nAgnostik is a layer between your application and the executor for your async stuff. It lets you switch the executors smooth and easy without having to change your applications code. Valid features are `runtime_bastion` (default), `runtime_tokio`, `runtime_asyncstd` and `runtime_nostd` (coming soon).\n\n## Architecture of the Runtime\nRuntime is structured by the user. Only root supervision comes in batteries-included fashion.\nWorker code, worker group redundancy, supervisors and their supervision strategies are defined by the user.\n\nSupervision strategies define how child actor failures are handled, how often a child can fail, and how long to wait before a child actor is recreated. As the name suggests, One-For-One strategy means the supervision strategy is applied only to the failed child. All-For-One strategy means that the supervision strategy is applied to all the actor siblings as well. One-for-one supervision is used at the root supervisor, while child groups may have different strategies like rest-for-one or one-for-all.\n\n![Bastion Architecture](img/bastion-architecture.png)\n\n## Community\n### Getting Help\nPlease head to our [Discord](https://discord.gg/DqRqtRT) or use [StackOverflow](https://stackoverflow.com/questions/tagged/bastion)\n\n### Discussion and Development\nWe use [Discord](https://discord.gg/DqRqtRT) for development discussions. Also please don't hesitate to open issues on GitHub ask for features, report bugs, comment on design and more!\nMore interaction and more ideas are better!\n\n### Contributing to Bastion [![Open Source Helpers](https://www.codetriage.com/bastion-rs/bastion/badges/users.svg)](https://www.codetriage.com/bastion-rs/bastion)\n\nAll contributions, bug reports, bug fixes, documentation improvements, enhancements and ideas are welcome.\n\nA detailed overview on how to contribute can be found in the  [CONTRIBUTING guide](https://github.com/bastion-rs/.github/blob/master/CONTRIBUTING.md) on GitHub[.](https://youtu.be/w55YCDzZjvA)\n\n## License\n\nLicensed under either of\n\n * Apache License, Version 2.0 ([LICENSE-APACHE](LICENSE-APACHE) or http://www.apache.org/licenses/LICENSE-2.0)\n * MIT license ([LICENSE-MIT](LICENSE-MIT) or http://opensource.org/licenses/MIT)\n\nat your option.\n\n[![FOSSA Status](https://app.fossa.io/api/projects/git%2Bgithub.com%2Fbastion-rs%2Fbastion.svg?type=large)](https://app.fossa.io/projects/git%2Bgithub.com%2Fbastion-rs%2Fbastion?ref=badge_large)\n\n[![FOSSA Status](https://app.fossa.io/api/projects/git%2Bgithub.com%2Fbastion-rs%2Fbastion.svg?type=shield)](https://app.fossa.io/projects/git%2Bgithub.com%2Fbastion-rs%2Fbastion?ref=badge_shield)\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.625,
          "content": "# Security Policy\n\nFind a vulnerability on Bastion? Thanks for considering reporting it!\n\n## Supported Versions\n\nCurrently, we support latest minor versions for security updates.\n\n## Reporting a Vulnerability\n\nIf you find a vulnerability, please do **NOT** open an issue. You should report to\n[team@bastion.rs](mailto:team@bastion.rs) instead.\n\nWe will try to reply to it and prepare a patch as soon as possible.\n\n### Security Point of Contact\n\nThe security point of contact is [@vertexclique].\n\nIf you have not received a reply to your email within 48 hours,\nplease contact them directly.\n\n[@vertexclique]: https://github.com/vertexclique\n"
        },
        {
          "name": "img",
          "type": "tree",
          "content": null
        },
        {
          "name": "rustfmt.toml",
          "type": "blob",
          "size": 0,
          "content": ""
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}