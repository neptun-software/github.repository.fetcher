{
  "metadata": {
    "timestamp": 1736709097431,
    "page": 247,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "oppiliappan/dijo",
      "stars": 2832,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.2275390625,
          "content": "# Generated by Cargo\n# will have compiled files and executables\n/target/\n\n# These are backup files generated by rustfmt\n**/*.rs.bk\n\n# ignore serialized files\n*.json\n\n# ignore logs\n*.txt\n\n# ignore session\n\n*.vim\n.envrc\n.direnv\nresult\n"
        },
        {
          "name": "Cargo.lock",
          "type": "blob",
          "size": 27.8115234375,
          "content": "# This file is automatically @generated by Cargo.\n# It is not intended for manual editing.\nversion = 3\n\n[[package]]\nname = \"ahash\"\nversion = \"0.7.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fcb51a0695d8f838b1ee009b3fbf66bda078cd64590202a864a8f3e8c4315c47\"\ndependencies = [\n \"getrandom 0.2.3\",\n \"once_cell\",\n \"version_check\",\n]\n\n[[package]]\nname = \"ansi_term\"\nversion = \"0.11.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ee49baf6cb617b853aa8d93bf420db2383fab46d314482ca2803b40d5fde979b\"\ndependencies = [\n \"winapi 0.3.9\",\n]\n\n[[package]]\nname = \"arrayref\"\nversion = \"0.3.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a4c527152e37cf757a3f78aae5a06fbeefdb07ccc535c980a3208ee3060dd544\"\n\n[[package]]\nname = \"arrayvec\"\nversion = \"0.5.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"23b62fc65de8e4e7f52534fb52b0f3ed04746ae267519eef2a83941e8085068b\"\n\n[[package]]\nname = \"atty\"\nversion = \"0.2.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d9b39be18770d11421cdb1b9947a45dd3f37e93092cbf377614828a319d5fee8\"\ndependencies = [\n \"hermit-abi\",\n \"libc\",\n \"winapi 0.3.9\",\n]\n\n[[package]]\nname = \"autocfg\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cdb031dd78e28731d87d56cc8ffef4a8f36ca26c38fe2de700543e627f8a464a\"\n\n[[package]]\nname = \"base64\"\nversion = \"0.13.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"904dfeac50f3cdaba28fc6f57fdcddb75f49ed61346676a78c4ffe55877802fd\"\n\n[[package]]\nname = \"bitflags\"\nversion = \"1.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bef38d45163c2f1dde094a7dfd33ccf595c92905c8f8f4fdc18d06fb1037718a\"\n\n[[package]]\nname = \"blake2b_simd\"\nversion = \"0.5.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"afa748e348ad3be8263be728124b24a24f268266f6f5d58af9d75f6a40b5c587\"\ndependencies = [\n \"arrayref\",\n \"arrayvec\",\n \"constant_time_eq\",\n]\n\n[[package]]\nname = \"cfg-if\"\nversion = \"0.1.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4785bdd1c96b2a846b2bd7cc02e86b6b3dbf14e7e53446c4f54c92a361040822\"\n\n[[package]]\nname = \"cfg-if\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd\"\n\n[[package]]\nname = \"chrono\"\nversion = \"0.4.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"670ad68c9088c2a963aaa298cb369688cf3f9465ce5e2d4ca10e6e0098a1ce73\"\ndependencies = [\n \"libc\",\n \"num-integer\",\n \"num-traits\",\n \"serde\",\n \"time 0.1.43\",\n \"winapi 0.3.9\",\n]\n\n[[package]]\nname = \"clap\"\nversion = \"2.33.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"37e58ac78573c40708d45522f0d80fa2f01cc4f9b4e2bf749807255454312002\"\ndependencies = [\n \"ansi_term\",\n \"atty\",\n \"bitflags\",\n \"strsim 0.8.0\",\n \"textwrap\",\n \"unicode-width\",\n \"vec_map\",\n]\n\n[[package]]\nname = \"constant_time_eq\"\nversion = \"0.1.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"245097e9a4535ee1e3e3931fcfcd55a796a44c643e8596ff6566d68f09b87bbc\"\n\n[[package]]\nname = \"crossbeam-channel\"\nversion = \"0.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dca26ee1f8d361640700bde38b2c37d8c22b3ce2d360e1fc1c74ea4b0aa7d775\"\ndependencies = [\n \"cfg-if 1.0.0\",\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"crossbeam-utils\"\nversion = \"0.8.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"02d96d1e189ef58269ebe5b97953da3274d83a93af647c2ddd6f9dab28cedb8d\"\ndependencies = [\n \"autocfg\",\n \"cfg-if 1.0.0\",\n \"lazy_static\",\n]\n\n[[package]]\nname = \"crossterm\"\nversion = \"0.22.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c85525306c4291d1b73ce93c8acf9c339f9b213aef6c1d85c3830cbf1c16325c\"\ndependencies = [\n \"bitflags\",\n \"crossterm_winapi\",\n \"libc\",\n \"mio 0.7.7\",\n \"parking_lot\",\n \"signal-hook\",\n \"signal-hook-mio\",\n \"winapi 0.3.9\",\n]\n\n[[package]]\nname = \"crossterm_winapi\"\nversion = \"0.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2ae1b35a484aa10e07fe0638d02301c5ad24de82d310ccbd2f3693da5f09bf1c\"\ndependencies = [\n \"winapi 0.3.9\",\n]\n\n[[package]]\nname = \"ctor\"\nversion = \"0.1.17\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"373c88d9506e2e9230f6107701b7d8425f4cb3f6df108ec3042a26e936666da5\"\ndependencies = [\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"cursive\"\nversion = \"0.17.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ca536d245342f6c005e7547ab640e444a3dc2fc0319a92124c8c1cbff025e775\"\ndependencies = [\n \"ahash\",\n \"cfg-if 1.0.0\",\n \"crossbeam-channel\",\n \"crossterm\",\n \"cursive_core\",\n \"lazy_static\",\n \"libc\",\n \"log\",\n \"signal-hook\",\n \"termion\",\n \"unicode-segmentation\",\n \"unicode-width\",\n]\n\n[[package]]\nname = \"cursive_core\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e27fbda42833e46148ff28db338f6189a4407e4a38ba1f4105e2f623089e66a0\"\ndependencies = [\n \"ahash\",\n \"crossbeam-channel\",\n \"enum-map\",\n \"enumset\",\n \"lazy_static\",\n \"log\",\n \"num\",\n \"owning_ref\",\n \"time 0.3.5\",\n \"unicode-segmentation\",\n \"unicode-width\",\n \"xi-unicode\",\n]\n\n[[package]]\nname = \"darling\"\nversion = \"0.12.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5f2c43f534ea4b0b049015d00269734195e6d3f0f6635cb692251aca6f9f8b3c\"\ndependencies = [\n \"darling_core\",\n \"darling_macro\",\n]\n\n[[package]]\nname = \"darling_core\"\nversion = \"0.12.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8e91455b86830a1c21799d94524df0845183fa55bafd9aa137b01c7d1065fa36\"\ndependencies = [\n \"fnv\",\n \"ident_case\",\n \"proc-macro2\",\n \"quote\",\n \"strsim 0.10.0\",\n \"syn\",\n]\n\n[[package]]\nname = \"darling_macro\"\nversion = \"0.12.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"29b5acf0dea37a7f66f7b25d2c5e93fd46f8f6968b1a5d7a3e02e97768afc95a\"\ndependencies = [\n \"darling_core\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"dijo\"\nversion = \"0.2.7\"\ndependencies = [\n \"chrono\",\n \"clap\",\n \"cursive\",\n \"directories\",\n \"erased-serde\",\n \"lazy_static\",\n \"notify\",\n \"serde\",\n \"serde_json\",\n \"syn\",\n \"toml\",\n \"typetag\",\n]\n\n[[package]]\nname = \"directories\"\nversion = \"3.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f8fed639d60b58d0f53498ab13d26f621fd77569cc6edb031f4cc36a2ad9da0f\"\ndependencies = [\n \"dirs-sys\",\n]\n\n[[package]]\nname = \"dirs-sys\"\nversion = \"0.3.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8e93d7f5705de3e49895a2b5e0b8855a1c27f080192ae9c32a6432d50741a57a\"\ndependencies = [\n \"libc\",\n \"redox_users\",\n \"winapi 0.3.9\",\n]\n\n[[package]]\nname = \"enum-map\"\nversion = \"2.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9ec3484df47a85c121b9d8fbf265ca7eedc26a5c4c341db7cf800876201c766f\"\ndependencies = [\n \"enum-map-derive\",\n]\n\n[[package]]\nname = \"enum-map-derive\"\nversion = \"0.7.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8182c0d26a908f001a23adc388fcef7fde884fbaf668874126cd5a3c13ca299e\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"enumset\"\nversion = \"1.0.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fbd795df6708a599abf1ee10eacc72efd052b7a5f70fdf0715e4d5151a6db9c3\"\ndependencies = [\n \"enumset_derive\",\n]\n\n[[package]]\nname = \"enumset_derive\"\nversion = \"0.5.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e19c52f9ec503c8a68dc04daf71a04b07e690c32ab1a8b68e33897f255269d47\"\ndependencies = [\n \"darling\",\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"erased-serde\"\nversion = \"0.3.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0465971a8cc1fa2455c8465aaa377131e1f1cf4983280f474a13e68793aa770c\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"filetime\"\nversion = \"0.2.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0c122a393ea57648015bf06fbd3d372378992e86b9ff5a7a497b076a28c79efe\"\ndependencies = [\n \"cfg-if 1.0.0\",\n \"libc\",\n \"redox_syscall\",\n \"winapi 0.3.9\",\n]\n\n[[package]]\nname = \"fnv\"\nversion = \"1.0.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3f9eec918d3f24069decb9af1554cad7c880e2da24a9afd88aca000531ab82c1\"\n\n[[package]]\nname = \"fsevent\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5ab7d1bd1bd33cc98b0889831b72da23c0aa4df9cec7e0702f46ecea04b35db6\"\ndependencies = [\n \"bitflags\",\n \"fsevent-sys\",\n]\n\n[[package]]\nname = \"fsevent-sys\"\nversion = \"2.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f41b048a94555da0f42f1d632e2e19510084fb8e303b0daa2816e733fb3644a0\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"fuchsia-zircon\"\nversion = \"0.3.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2e9763c69ebaae630ba35f74888db465e49e259ba1bc0eda7d06f4a067615d82\"\ndependencies = [\n \"bitflags\",\n \"fuchsia-zircon-sys\",\n]\n\n[[package]]\nname = \"fuchsia-zircon-sys\"\nversion = \"0.3.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3dcaa9ae7725d12cdb85b3ad99a434db70b468c09ded17e012d86b5c1010f7a7\"\n\n[[package]]\nname = \"getrandom\"\nversion = \"0.1.16\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8fc3cb4d91f53b50155bdcfd23f6a4c39ae1969c2ae85982b135750cccaf5fce\"\ndependencies = [\n \"cfg-if 1.0.0\",\n \"libc\",\n \"wasi 0.9.0+wasi-snapshot-preview1\",\n]\n\n[[package]]\nname = \"getrandom\"\nversion = \"0.2.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7fcd999463524c52659517fe2cea98493cfe485d10565e7b0fb07dbba7ad2753\"\ndependencies = [\n \"cfg-if 1.0.0\",\n \"libc\",\n \"wasi 0.10.1+wasi-snapshot-preview1\",\n]\n\n[[package]]\nname = \"ghost\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1a5bcf1bbeab73aa4cf2fde60a846858dc036163c7c33bec309f8d17de785479\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"hermit-abi\"\nversion = \"0.1.17\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5aca5565f760fb5b220e499d72710ed156fdb74e631659e99377d9ebfbd13ae8\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"ident_case\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b9e0384b61958566e926dc50660321d12159025e767c18e043daf26b70104c39\"\n\n[[package]]\nname = \"inotify\"\nversion = \"0.7.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4816c66d2c8ae673df83366c18341538f234a26d65a9ecea5c348b453ac1d02f\"\ndependencies = [\n \"bitflags\",\n \"inotify-sys\",\n \"libc\",\n]\n\n[[package]]\nname = \"inotify-sys\"\nversion = \"0.1.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c4563555856585ab3180a5bf0b2f9f8d301a728462afffc8195b3f5394229c55\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"instant\"\nversion = \"0.1.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"61124eeebbd69b8190558df225adf7e4caafce0d743919e5d6b19652314ec5ec\"\ndependencies = [\n \"cfg-if 1.0.0\",\n]\n\n[[package]]\nname = \"inventory\"\nversion = \"0.1.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0f0f7efb804ec95e33db9ad49e4252f049e37e8b0a4652e3cd61f7999f2eff7f\"\ndependencies = [\n \"ctor\",\n \"ghost\",\n \"inventory-impl\",\n]\n\n[[package]]\nname = \"inventory-impl\"\nversion = \"0.1.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"75c094e94816723ab936484666968f5b58060492e880f3c8d00489a1e244fa51\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"iovec\"\nversion = \"0.1.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b2b3ea6ff95e175473f8ffe6a7eb7c00d054240321b84c57051175fe3c1e075e\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"itoa\"\nversion = \"0.4.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dd25036021b0de88a0aff6b850051563c6516d0bf53f8638938edbb9de732736\"\n\n[[package]]\nname = \"kernel32-sys\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7507624b29483431c0ba2d82aece8ca6cdba9382bff4ddd0f7490560c056098d\"\ndependencies = [\n \"winapi 0.2.8\",\n \"winapi-build\",\n]\n\n[[package]]\nname = \"lazy_static\"\nversion = \"1.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e2abad23fbc42b3700f2f279844dc832adb2b2eb069b2df918f455c4e18cc646\"\n\n[[package]]\nname = \"lazycell\"\nversion = \"1.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"830d08ce1d1d941e6b30645f1a0eb5643013d835ce3779a5fc208261dbe10f55\"\n\n[[package]]\nname = \"libc\"\nversion = \"0.2.112\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1b03d17f364a3a042d5e5d46b053bbbf82c92c9430c592dd4c064dc6ee997125\"\n\n[[package]]\nname = \"lock_api\"\nversion = \"0.4.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dd96ffd135b2fd7b973ac026d28085defbe8983df057ced3eb4f2130b0831312\"\ndependencies = [\n \"scopeguard\",\n]\n\n[[package]]\nname = \"log\"\nversion = \"0.4.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4fabed175da42fed1fa0746b0ea71f412aa9d35e76e95e59b192c64b9dc2bf8b\"\ndependencies = [\n \"cfg-if 0.1.10\",\n]\n\n[[package]]\nname = \"mio\"\nversion = \"0.6.23\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4afd66f5b91bf2a3bc13fad0e21caedac168ca4c707504e75585648ae80e4cc4\"\ndependencies = [\n \"cfg-if 0.1.10\",\n \"fuchsia-zircon\",\n \"fuchsia-zircon-sys\",\n \"iovec\",\n \"kernel32-sys\",\n \"libc\",\n \"log\",\n \"miow 0.2.2\",\n \"net2\",\n \"slab\",\n \"winapi 0.2.8\",\n]\n\n[[package]]\nname = \"mio\"\nversion = \"0.7.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e50ae3f04d169fcc9bde0b547d1c205219b7157e07ded9c5aff03e0637cb3ed7\"\ndependencies = [\n \"libc\",\n \"log\",\n \"miow 0.3.6\",\n \"ntapi\",\n \"winapi 0.3.9\",\n]\n\n[[package]]\nname = \"mio-extras\"\nversion = \"2.0.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"52403fe290012ce777c4626790c8951324a2b9e3316b3143779c72b029742f19\"\ndependencies = [\n \"lazycell\",\n \"log\",\n \"mio 0.6.23\",\n \"slab\",\n]\n\n[[package]]\nname = \"miow\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ebd808424166322d4a38da87083bfddd3ac4c131334ed55856112eb06d46944d\"\ndependencies = [\n \"kernel32-sys\",\n \"net2\",\n \"winapi 0.2.8\",\n \"ws2_32-sys\",\n]\n\n[[package]]\nname = \"miow\"\nversion = \"0.3.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5a33c1b55807fbed163481b5ba66db4b2fa6cde694a5027be10fb724206c5897\"\ndependencies = [\n \"socket2\",\n \"winapi 0.3.9\",\n]\n\n[[package]]\nname = \"net2\"\nversion = \"0.2.37\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"391630d12b68002ae1e25e8f974306474966550ad82dac6886fb8910c19568ae\"\ndependencies = [\n \"cfg-if 0.1.10\",\n \"libc\",\n \"winapi 0.3.9\",\n]\n\n[[package]]\nname = \"notify\"\nversion = \"4.0.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"80ae4a7688d1fab81c5bf19c64fc8db920be8d519ce6336ed4e7efe024724dbd\"\ndependencies = [\n \"bitflags\",\n \"filetime\",\n \"fsevent\",\n \"fsevent-sys\",\n \"inotify\",\n \"libc\",\n \"mio 0.6.23\",\n \"mio-extras\",\n \"walkdir\",\n \"winapi 0.3.9\",\n]\n\n[[package]]\nname = \"ntapi\"\nversion = \"0.3.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3f6bb902e437b6d86e03cce10a7e2af662292c5dfef23b65899ea3ac9354ad44\"\ndependencies = [\n \"winapi 0.3.9\",\n]\n\n[[package]]\nname = \"num\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"43db66d1170d347f9a065114077f7dccb00c1b9478c89384490a3425279a4606\"\ndependencies = [\n \"num-complex\",\n \"num-integer\",\n \"num-iter\",\n \"num-rational\",\n \"num-traits\",\n]\n\n[[package]]\nname = \"num-complex\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"26873667bbbb7c5182d4a37c1add32cdf09f841af72da53318fdb81543c15085\"\ndependencies = [\n \"num-traits\",\n]\n\n[[package]]\nname = \"num-integer\"\nversion = \"0.1.44\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d2cc698a63b549a70bc047073d2949cce27cd1c7b0a4a862d08a8031bc2801db\"\ndependencies = [\n \"autocfg\",\n \"num-traits\",\n]\n\n[[package]]\nname = \"num-iter\"\nversion = \"0.1.42\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b2021c8337a54d21aca0d59a92577a029af9431cb59b909b03252b9c164fad59\"\ndependencies = [\n \"autocfg\",\n \"num-integer\",\n \"num-traits\",\n]\n\n[[package]]\nname = \"num-rational\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d41702bd167c2df5520b384281bc111a4b5efcf7fbc4c9c222c815b07e0a6a6a\"\ndependencies = [\n \"autocfg\",\n \"num-integer\",\n \"num-traits\",\n]\n\n[[package]]\nname = \"num-traits\"\nversion = \"0.2.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9a64b1ec5cda2586e284722486d802acf1f7dbdc623e2bfc57e65ca1cd099290\"\ndependencies = [\n \"autocfg\",\n]\n\n[[package]]\nname = \"numtoa\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b8f8bdf33df195859076e54ab11ee78a1b208382d3a26ec40d142ffc1ecc49ef\"\n\n[[package]]\nname = \"once_cell\"\nversion = \"1.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"da32515d9f6e6e489d7bc9d84c71b060db7247dc035bbe44eac88cf87486d8d5\"\n\n[[package]]\nname = \"owning_ref\"\nversion = \"0.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6ff55baddef9e4ad00f88b6c743a2a8062d4c6ade126c2a528644b8e444d52ce\"\ndependencies = [\n \"stable_deref_trait\",\n]\n\n[[package]]\nname = \"parking_lot\"\nversion = \"0.11.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6d7744ac029df22dca6284efe4e898991d28e3085c706c972bcd7da4a27a15eb\"\ndependencies = [\n \"instant\",\n \"lock_api\",\n \"parking_lot_core\",\n]\n\n[[package]]\nname = \"parking_lot_core\"\nversion = \"0.8.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9ccb628cad4f84851442432c60ad8e1f607e29752d0bf072cbd0baf28aa34272\"\ndependencies = [\n \"cfg-if 1.0.0\",\n \"instant\",\n \"libc\",\n \"redox_syscall\",\n \"smallvec\",\n \"winapi 0.3.9\",\n]\n\n[[package]]\nname = \"proc-macro2\"\nversion = \"1.0.24\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1e0704ee1a7e00d7bb417d0770ea303c1bccbabf0ef1667dae92b5967f5f8a71\"\ndependencies = [\n \"unicode-xid\",\n]\n\n[[package]]\nname = \"quote\"\nversion = \"1.0.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"991431c3519a3f36861882da93630ce66b52918dcf1b8e2fd66b397fc96f28df\"\ndependencies = [\n \"proc-macro2\",\n]\n\n[[package]]\nname = \"redox_syscall\"\nversion = \"0.1.57\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"41cc0f7e4d5d4544e8861606a285bb08d3e70712ccc7d2b84d7c0ccfaf4b05ce\"\n\n[[package]]\nname = \"redox_termios\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7e891cfe48e9100a70a3b6eb652fef28920c117d366339687bd5576160db0f76\"\ndependencies = [\n \"redox_syscall\",\n]\n\n[[package]]\nname = \"redox_users\"\nversion = \"0.3.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"de0737333e7a9502c789a36d7c7fa6092a49895d4faa31ca5df163857ded2e9d\"\ndependencies = [\n \"getrandom 0.1.16\",\n \"redox_syscall\",\n \"rust-argon2\",\n]\n\n[[package]]\nname = \"rust-argon2\"\nversion = \"0.8.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4b18820d944b33caa75a71378964ac46f58517c92b6ae5f762636247c09e78fb\"\ndependencies = [\n \"base64\",\n \"blake2b_simd\",\n \"constant_time_eq\",\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"ryu\"\nversion = \"1.0.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"71d301d4193d031abdd79ff7e3dd721168a9572ef3fe51a1517aba235bd8f86e\"\n\n[[package]]\nname = \"same-file\"\nversion = \"1.0.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"93fc1dc3aaa9bfed95e02e6eadabb4baf7e3078b0bd1b4d7b6b0b68378900502\"\ndependencies = [\n \"winapi-util\",\n]\n\n[[package]]\nname = \"scopeguard\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d29ab0c6d3fc0ee92fe66e2d99f700eab17a8d57d1c1d3b748380fb20baa78cd\"\n\n[[package]]\nname = \"serde\"\nversion = \"1.0.118\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"06c64263859d87aa2eb554587e2d23183398d617427327cf2b3d0ed8c69e4800\"\ndependencies = [\n \"serde_derive\",\n]\n\n[[package]]\nname = \"serde_derive\"\nversion = \"1.0.118\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c84d3526699cd55261af4b941e4e725444df67aa4f9e6a3564f18030d12672df\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"serde_json\"\nversion = \"1.0.61\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4fceb2595057b6891a4ee808f70054bd2d12f0e97f1cbb78689b59f676df325a\"\ndependencies = [\n \"itoa\",\n \"ryu\",\n \"serde\",\n]\n\n[[package]]\nname = \"signal-hook\"\nversion = \"0.3.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"647c97df271007dcea485bb74ffdb57f2e683f1306c854f468a0c244badabf2d\"\ndependencies = [\n \"libc\",\n \"signal-hook-registry\",\n]\n\n[[package]]\nname = \"signal-hook-mio\"\nversion = \"0.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"29fd5867f1c4f2c5be079aee7a2adf1152ebb04a4bc4d341f504b7dece607ed4\"\ndependencies = [\n \"libc\",\n \"mio 0.7.7\",\n \"signal-hook\",\n]\n\n[[package]]\nname = \"signal-hook-registry\"\nversion = \"1.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e51e73328dc4ac0c7ccbda3a494dfa03df1de2f46018127f60c693f2648455b0\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"slab\"\nversion = \"0.4.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c111b5bd5695e56cffe5129854aa230b39c93a305372fdbb2668ca2394eea9f8\"\n\n[[package]]\nname = \"smallvec\"\nversion = \"1.6.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fe0f37c9e8f3c5a4a66ad655a93c74daac4ad00c441533bf5c6e7990bb42604e\"\n\n[[package]]\nname = \"socket2\"\nversion = \"0.3.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"122e570113d28d773067fab24266b66753f6ea915758651696b6e35e49f88d6e\"\ndependencies = [\n \"cfg-if 1.0.0\",\n \"libc\",\n \"winapi 0.3.9\",\n]\n\n[[package]]\nname = \"stable_deref_trait\"\nversion = \"1.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a8f112729512f8e442d81f95a8a7ddf2b7c6b8a1a6f509a95864142b30cab2d3\"\n\n[[package]]\nname = \"strsim\"\nversion = \"0.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8ea5119cdb4c55b55d432abb513a0429384878c15dde60cc77b1c99de1a95a6a\"\n\n[[package]]\nname = \"strsim\"\nversion = \"0.10.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"73473c0e59e6d5812c5dfe2a064a6444949f089e20eec9a2e5506596494e4623\"\n\n[[package]]\nname = \"syn\"\nversion = \"1.0.57\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4211ce9909eb971f111059df92c45640aad50a619cf55cd76476be803c4c68e6\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"unicode-xid\",\n]\n\n[[package]]\nname = \"termion\"\nversion = \"1.5.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c22cec9d8978d906be5ac94bceb5a010d885c626c4c8855721a4dbd20e3ac905\"\ndependencies = [\n \"libc\",\n \"numtoa\",\n \"redox_syscall\",\n \"redox_termios\",\n]\n\n[[package]]\nname = \"textwrap\"\nversion = \"0.11.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d326610f408c7a4eb6f51c37c330e496b08506c9457c9d34287ecc38809fb060\"\ndependencies = [\n \"unicode-width\",\n]\n\n[[package]]\nname = \"time\"\nversion = \"0.1.43\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ca8a50ef2360fbd1eeb0ecd46795a87a19024eb4b53c5dc916ca1fd95fe62438\"\ndependencies = [\n \"libc\",\n \"winapi 0.3.9\",\n]\n\n[[package]]\nname = \"time\"\nversion = \"0.3.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"41effe7cfa8af36f439fac33861b66b049edc6f9a32331e2312660529c1c24ad\"\ndependencies = [\n \"itoa\",\n \"libc\",\n]\n\n[[package]]\nname = \"toml\"\nversion = \"0.5.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a31142970826733df8241ef35dc040ef98c679ab14d7c3e54d827099b3acecaa\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"typetag\"\nversion = \"0.1.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"83b97b107d25d29de6879ac4f676ac5bfea92bdd01f206e995794493f1fc2e32\"\ndependencies = [\n \"erased-serde\",\n \"inventory\",\n \"lazy_static\",\n \"serde\",\n \"typetag-impl\",\n]\n\n[[package]]\nname = \"typetag-impl\"\nversion = \"0.1.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3f2466fc87b07b800a5060f89ba579d6882f7a03ac21363e4737764aaf9f99f9\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"unicode-segmentation\"\nversion = \"1.7.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bb0d2e7be6ae3a5fa87eed5fb451aff96f2573d2694942e40543ae0bbe19c796\"\n\n[[package]]\nname = \"unicode-width\"\nversion = \"0.1.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9337591893a19b88d8d87f2cec1e73fad5cdfd10e5a6f349f498ad6ea2ffb1e3\"\n\n[[package]]\nname = \"unicode-xid\"\nversion = \"0.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f7fe0bb3479651439c9112f72b6c505038574c9fbb575ed1bf3b797fa39dd564\"\n\n[[package]]\nname = \"vec_map\"\nversion = \"0.8.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f1bddf1187be692e79c5ffeab891132dfb0f236ed36a43c7ed39f1165ee20191\"\n\n[[package]]\nname = \"version_check\"\nversion = \"0.9.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b5a972e5669d67ba988ce3dc826706fb0a8b01471c088cb0b6110b805cc36aed\"\n\n[[package]]\nname = \"walkdir\"\nversion = \"2.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"777182bc735b6424e1a57516d35ed72cb8019d85c8c9bf536dccb3445c1a2f7d\"\ndependencies = [\n \"same-file\",\n \"winapi 0.3.9\",\n \"winapi-util\",\n]\n\n[[package]]\nname = \"wasi\"\nversion = \"0.9.0+wasi-snapshot-preview1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cccddf32554fecc6acb585f82a32a72e28b48f8c4c1883ddfeeeaa96f7d8e519\"\n\n[[package]]\nname = \"wasi\"\nversion = \"0.10.1+wasi-snapshot-preview1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"93c6c3420963c5c64bca373b25e77acb562081b9bb4dd5bb864187742186cea9\"\n\n[[package]]\nname = \"winapi\"\nversion = \"0.2.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"167dc9d6949a9b857f3451275e911c3f44255842c1f7a76f33c55103a909087a\"\n\n[[package]]\nname = \"winapi\"\nversion = \"0.3.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5c839a674fcd7a98952e593242ea400abe93992746761e38641405d28b00f419\"\ndependencies = [\n \"winapi-i686-pc-windows-gnu\",\n \"winapi-x86_64-pc-windows-gnu\",\n]\n\n[[package]]\nname = \"winapi-build\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2d315eee3b34aca4797b2da6b13ed88266e6d612562a0c46390af8299fc699bc\"\n\n[[package]]\nname = \"winapi-i686-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ac3b87c63620426dd9b991e5ce0329eff545bccbbb34f3be09ff6fb6ab51b7b6\"\n\n[[package]]\nname = \"winapi-util\"\nversion = \"0.1.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"70ec6ce85bb158151cae5e5c87f95a8e97d2c0c4b001223f33a334e3ce5de178\"\ndependencies = [\n \"winapi 0.3.9\",\n]\n\n[[package]]\nname = \"winapi-x86_64-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"712e227841d057c1ee1cd2fb22fa7e5a5461ae8e48fa2ca79ec42cfc1931183f\"\n\n[[package]]\nname = \"ws2_32-sys\"\nversion = \"0.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d59cefebd0c892fa2dd6de581e937301d8552cb44489cdff035c6187cb63fa5e\"\ndependencies = [\n \"winapi 0.2.8\",\n \"winapi-build\",\n]\n\n[[package]]\nname = \"xi-unicode\"\nversion = \"0.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a67300977d3dc3f8034dae89778f502b6ba20b269527b3223ba59c0cf393bb8a\"\n"
        },
        {
          "name": "Cargo.toml",
          "type": "blob",
          "size": 0.8994140625,
          "content": "[package]\nname = \"dijo\"\nversion = \"0.2.7\"\nauthors = [\"Akshay <nerdy@peppe.rs>\"]\nedition = \"2018\"\ndescription = \"Scriptable, curses-based, digital habit tracker\"\nhomepage = \"https://github.com/nerdypepper/dijo\"\nrepository = \"https://github.com/nerdypepper/dijo\"\nreadme = './readme.md'\nkeywords = [\"tracker\", \"event-tracker\", \"tui\", \"journal\"]\ncategories = [\"date-and-time\", \"command-line-interface\"]\nlicense = \"MIT\"\n\n[dependencies]\nserde_json = \"1.0\"\nlazy_static = \"1.4.0\"\nerased-serde = \"0.3\"\ntypetag = \"0.1.4\"\ndirectories = \"3.0.1\"\nclap = \"2.33\"\nnotify = \"4.0\"\ntoml = \"0.5.6\"\nsyn = \"=1.0.57\"\n\n[dependencies.cursive]\nversion = \"0.17\"\ndefault-features = false\n\n[dependencies.chrono]\nversion = \"0.4\"\nfeatures = [\"serde\"]\n\n[dependencies.serde]\nversion = \"1.0.103\"\nfeatures = [\"derive\"]\n\n[features]\ndefault = [\"termion-backend\"]\ntermion-backend = [\"cursive/termion-backend\"]\ncrossterm-backend = [\"cursive/crossterm-backend\"]\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.05078125,
          "content": "Copyright 2021 Akshay Oppiliappan (nerdy@peppe.rs)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\nof the Software, and to permit persons to whom the Software is furnished to do\nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n"
        },
        {
          "name": "dijo.1",
          "type": "blob",
          "size": 13.197265625,
          "content": ".TH DIJO 1 \"January 26, 2021\" dijo-0.2.7\n\n.SH NAME\ndijo \\- digital journal\n\n.SH SYNOPSIS\n.B dijo\n[\\fBFLAGS\\fR]\n[\\fBOPTIONS\\fR]\n\n.SH DESCRIPTION\n.B dijo\nis scriptable, curses-based and modal, much like \\fIvim\\fR, digital habit tracker\n\n.SH FLAGS\n.TP\n.BR \\-h \", \" \\-\\-help\nPrints help information\n.TP\n.BR \\-l \", \" \\-\\-list\nList dijo habits\n.TP\n.BR \\-V \", \" \\-\\-version\nPrints version information\n\n.SH OPTIONS\n.TP\n.BR \\-c \", \" \\-\\-command \" \" \\fIcommand\nRun a dijo command\n\n.SH FEATURES\n.TP\n\\(bu \\fBvim like motions\\fR\nNavigate with \\fBhjkl\\fR!\n.TP\n\\(bu \\fBdijo is modal\\fR\nDifferent modes to view different stats!\n.TP\n\\(bu \\fBvim like command mode\\fR\nAdd with \\fB:add\\fR, delete with \\fB:delete\\fR and above all, quit with \\fB:q!\\fR.\n.TP\n\\(bu \\fBFully scriptable\\fR\nYou can configure it to track your \\fIgit\\fR commits!\n\n.SH GETTING STARTED\n.PP\nOn running \\fBdijo\\fR at the command line, you are presented with a blank screen. This is the \\fBDAY\\fR mode, analogous to the \\fBNORMAL\\fR mode in Vim. In this mode, you may view stats for every day of the current month.\n.PP\nTo start tracking habits, enter the command mode with \\fB:.\\fR Use the add command to add a habit to begin tracking.\n.TP\nSay, I would like to track the number of French lessons I took on Duolingo, and I aim to do 5 lessons each day:\n.nf\n\\fB\n:add french  5\n       |     |\n       `-----|----- habit name\n              `---- goal (optional)\n\\fR\n.fi\n.TP\nGo ahead and add a couple more habits the same way:\n.nf\n\\fB\n:add lifting 1   <-- a yes/no kind of habit (represented by a dot grid)\n:add water       <-- no goal provided\n\\fR\n.fi\n.PP\nTo track your progress for the day:\n.IP\n\\(bu focus the habit you want to track, (the focused habit is highlighted in bright white).\n.IP\n\\(bu Hit \\fBEnter\\fR on the keyboard to increase the value, or \\fBBackspace\\fR to reduce it.\n.IP\n\\(bu Once you reach your daily goal, the day is marked in green and the habit name is struck through with a line.\n.PP\nCheck your weekly progress for a given habit by pressing \\fBv\\fR on the keyboard, this is \\fBWEEK\\fR mode, and press \\fB<ESC>\\fR to go back to \\fBDAY\\fR mode. \\fB<Shift-v>\\fR is a shortcut to display weekly progress for every habit. The current mode is indicated on the status line.\n.PP\nReview your progress for previous months by pressing \\fB[\\fR on the keyboard, sift through months with \\fB[\\fR and \\fB]\\fR.\n\n.SH CUSTOMIZATION\n.PP\n\\fBdijo (>= v0.2.7)\\fR, can be configured via a configuration file. After its first run, \\fBdijo\\fR creates a configuration file. \\fBdijo\\fR must be restarted for changes in the configuration file to take effect.\n.PP\nThis file is saved in different directories based on your operating system:\n\n.nf\n.IP\n\\(bu GNU/Linux: \\fB$XDG_CONFIG_HOME/dijo/config.toml\\fR\n.IP\n\\(bu MacOS: \\fB$HOME/Library/Application Support/rs.nerdypepper.dijo/config.toml\\fR\n.IP\n\\(bu Win10: \\fB{FOLDERID_RoamingAppData}\\[rs]nerdypepper\\[rs]dijo\\[rs]config\\[rs]config.toml\\fR\n.fi\n\n.PP\nThe default config file (created on first run) looks something like this, \\fBconfig.toml\\fR:\n.IP\n.nf\n\\fB\n[look]\ntrue_chr = \\[dq]\\[pc]\\[dq]\nfalse_chr = \\[dq]\\[pc]\\[dq]\nfuture_chr = \\[dq]\\[pc]\\[dq]\n\n[colors]\nreached = \\[dq]cyan\\[dq]\ntodo = \\[dq]magenta\\[dq]\ninactive = \\[dq]light black\\[dq]\n\\fR\n.fi\n\n.SS Look\n.PP\nVariables in this section define the characters \\fBdijo\\fR uses in \\fBDAY\\fR mode to represent days of the month. Every value in this section must span exactly 1 character in length.\n\n.IP \n\\(bu \\fBtrue_chr\\fR: The character to use in a Bit habit when the goal is \\fBreached\\fR\n.IP \n\\(bu \\fBfalse_chr\\fR: The character to use in a Bit habit when the goal is \\fBnot reached\\fR\n.IP \n\\(bu \\fBfuture_chr\\fR: The character to use in a Bit habit when the day is \\fBuntracked\\fR.\n\n.SS Colors\n.PP\nVariables in this section define the colors \\fBdijo\\fR uses in all modes:\n\n.IP \n\\(bu \\fBreached\\fR: The color to use when the goal is \\fBreached\\fR for the day. This is also the color used in \\fBWEEK\\fR mode to fill the progress bar.\n.IP \n\\(bu \\fBtodo\\fR: The color to use when the goal is \\fByet to be reached\\fR.\n.IP \n\\(bu \\fBinactive\\fR: The color to use for \\fBunfocused habits and untracked days\\fR.\n\n.PP\nThe values in this section are strings, and may be populated by one of the following:\n.IP\n.nf\n\\fB\n black               light black\n red                 light red\n green               light green\n yellow              light yellow\n blue                light blue\n magenta             light magenta\n cyan                light cyan\n white               light white\n\n default  -- uses your terminal\\[aq]s background color\n #123456  -- any color in hex (supported only on true color terminals)\n\\fR\n.fi\n\n.PP\n\\fBNote\\fR: These values have to be quoted (ex.: \\fBreached = \\[dq]black\\[dq]\\fR)\n\n.SH AUTO HABITS\n.PP\n\\fBdijo\\fR supports auto-trackable habits, that is, habits that can be updated via scripts. Add an auto-habit to, say, track your git commits:\n.IP\n.nf\n\\fB\n:add-auto commits 5\n\\fR\n.fi\n.PP\nYou can control \\fBdijo\\fR externally by calling it with the\n\\fB-c\\fR flag:\n.IP\n.nf\n\\fB\ndijo -c \\[dq]track-up commits\\[dq]   # a +1 on today\\[aq]s count\ndijo -c \\[dq]track-down commits\\[dq] # a -1 on today\\[aq]s count\n\\fR\n.fi\n.PP\nFirstly, point \\fBgit\\fR to your hooks directory\n(\\fB\\[ti]/.hooks\\fR in this case):\n.IP\n.nf\n\\fB\n# contents of \\[ti]/.gitconfig\n\n[core]\nhooksPath = \\[dq]/home/\\fIusername\\fB/.hooks\\[dq]\n\\fR\n.fi\n.PP\nCreate a file called \\fBpost-commit\\fR in the \\fB\\[ti]/.hooks\\fR directory, with the following contents (you should run \\fBmkdir \\[ti]/.hooks\\fR if it doesn\\[cq]t exist):\n.IP\n.nf\n\\fB\n#! /usr/bin/env bash\n\ndijo -c \\[dq]track-up commits\\[dq]\n\\fR\n.fi\n.IP\n.nf\n\\fB\n# make the post-commit script an executable\n\nchmod +x \\[ti]/.hooks/post-commit\n\\fR\n.fi\n.PP\nVoil\\[`a]! Every time you make a commit, \\fBdijo\\fR will automatically track it under the \\fBcommits\\fR habit.\n\n.SH MODES\n.PP\nAny habit in the interactive program can exist in one of two modes:\n.IP\n\\(bu \\fBDAY\\fR: the default mode\n.IP\n\\(bu \\fBWEEK\\fR: can be toggled on an off with \\fBv\\fR\n.SS \\fBDAY\\fR mode\n\n.PP\n\\fBDAY\\fR mode is the default mode for every habit. It shows you every day of the current month. In this mode, counting-type habits display their counts for each day of the month. Bit-type habits (yes/no) display their bits in the form of a \\fB\\[pc]\\fR (U+00B7 Middle Dot). Days whose goals have been reached are displayed in cyan and those that haven\\[cq]t been reached are displayed in magenta. Days that haven\\[cq]t been tracked are displayed in \\[lq]light black\\[rq].\n\n.SS \\fBWEEK\\fR mode\n.PP\n\\fBWEEK\\fR mode can be triggered for a single habit via \\fBv\\fR,\nand for every habit via \\fBV\\fR. \\fBWEEK\\fR mode will show you a summary of your progress for every week of the month. The current week\\[cq]s percentage is indicated in white, other weeks are colored in \\[lq]light black\\[rq]. The progress for a given week is calculated as follows:\n.IP \"1.\" 3\nif the goal is reached for a day of the week, the day contributes\nexactly 14.28% (100/7) towards that week\\[cq]s progress.\n.IP \"2.\" 3\nif the goal is not reached for a day of the week, the day contributes\n\\fBprogress / goal * 100\\fR towards that week\\[cq]s progress.\n.PP\nThat means, to achieve a 100% for a week, you have to reach your goal\n\\fIevery single day of the week\\fR.\n\n.SS The Command mode\n.PP\nThe command mode is different from the other modes in that it is a \\[lq]control\\[rq] mode rather than an \\[lq]observe\\[rq] mode. One can enter the command mode by hitting \\fB:\\fR on the keyboard. You will notice a \\fB:\\fR pop up at the bottom of the screen. You may now begin typing a command, once you are done, press \\fBEnter\\fR on the keyboard to execute it.\n.PP\nThe command mode may also be accessed without running the program interactively, by starting \\fBdijo\\fR with the \\fB-c\\fR flag and passing a string to it as a command:\n.IP\n.nf\n\\fB\n$ dijo -c \\[dq]track-up commits\\[dq]\n\\fR\n.fi\n.PP\nYou can hit \\fBTab\\fR on the keyboard inside Command mode to\ntrigger completions. For example:\n.IP\n.nf\n\\fB\n:d<Tab>\n# completes to\n:delete\n\n:delete fr<Tab>\n# completes to\n:delete french\n\\fR\n.fi\n\n.SH COMMANDS\n.SS Keybinds\n.PP\nThese are key binds you can use at \\fBDAY\\fR or \\fBWEEK\\fR modes. Some of them are dependent on the currently focused habit and some are global. Those that are dependent on the currently focused habit are marked with\na \\fB[f]\\fR.\n.IP \\(bu 2\nMotions:\n.RS 2\n.nf\n.IP \\(bu 2\n\\fBh\\fR - move one cell to the left (aliases: \\fB<Tab>\\fR, \\fB<Arrow-Left>\\fR)\n.IP \\(bu 2\n\\fBj\\fR - move one cell down (aliases: \\fB<Arrow-Down>\\fR)\n.IP \\(bu 2\n\\fBk\\fR - move one cell up (alases: \\fB<Arrow-Up>\\fR)\n.IP \\(bu 2\n\\fBl\\fR - move one cell to the right (aliases: \\fB<Shift-Tab>\\fR,\n\\fB<Arrow-Right>\\fR)\n.fi\n.RE\n.IP \\(bu 2\nEditing\n.RS 2\n.nf\n.IP \\(bu 2\n\\fB<Enter>\\fR - increment the currently focused habit (aliases: \\fBn\\fR) \\fB[f]\\fR\n.IP \\(bu 2\n\\fB<Backspace>\\fR - decrement the currently focused habit (aliases: \\fBp\\fR) \\fB[f]\\fR\n.fi\n.RE\n.IP \\(bu 2\nModes\n.RS 2\n.IP \\(bu 2\n\\fBv\\fR - enter \\fBWEEK\\fR mode for currently focused habit\n\\fB[f]\\fR\n.IP \\(bu 2\n\\fBV\\fR - enter \\fBWEEK\\fR mode for all habits\n.IP \\(bu 2\n\\fB<Esc>\\fR - return to \\fBDAY\\fR mode\n.RE\n.IP \\(bu 2\nTime Travel\n.RS 2\n.IP \\(bu 2\n\\fB[\\fR - shift view port back by one month\n.IP \\(bu 2\n\\fB]\\fR - shift view port forward by one month\n.IP \\(bu 2\n\\fB}\\fR - return to present\n.RE\n.IP \\(bu 2\nControl\n.RS 2\n.IP \\(bu 2\n\\fB<Ctrl-c>\\fR - quit without saving (subject to change)\n.RE\n.SS Commandline\n.PP\nEnter the command mode with \\fB:\\fR. Type out a command and press \\fB<Enter>\\fR on the keyboard to execute it. Most commands have `aliases', or short forms. Command mode supports auto-complete also.\n.IP \\(bu 2\nHelp: show command syntax\n.RS 2\n.IP \\(bu 2\nInputs: optional command or alias\n.IP \\(bu 2\nUsage: \\fBhelp [command]\\fR\n.IP \\(bu 2\nExample: \\fB:help aa\\fR\n.IP \\(bu 2\nAliases: \\fBh\\fR\n.RE\n.IP \\(bu 2\nAdd: add a habit\n.RS 2\n.IP \\(bu 2\nInputs: name of habit, optional daily goal\n.IP \\(bu 2\nUsage: \\fBadd <habit-name> [goal]\\fR\n.IP \\(bu 2\nExample: \\fB:add french 5\\fR\n.IP \\(bu 2\nAliases: \\fBa\\fR\n.RE\n.IP \\(bu 2\nAdd Auto: add an auto-trackable habit\n.RS 2\n.IP \\(bu 2\nInputs: name of habit, optional daily goal\n.IP \\(bu 2\nUsage: \\fBadd-auto <habit-name> [goal]\\fR\n.IP \\(bu 2\nExample: \\fB:add-auto commits 5\\fR\n.IP \\(bu 2\nAliases: \\fBaa\\fR\n.RE\n.IP \\(bu 2\nDelete: delete a habit\n.RS 2\n.IP \\(bu 2\nInputs: name of habit to delete\n.IP \\(bu 2\nUsage: \\fBdelete <habit-name>\\fR\n.IP \\(bu 2\nExample: \\fB:delete water\\fR\n.IP \\(bu 2\nAliases: \\fBd\\fR\n.RE\n.IP \\(bu 2\nMonth motions: stats from the past\n.RS 2\n.IP \\(bu 2\nInputs: None\n.IP \\(bu 2\nUsage: \\fBmonth-prev\\fR, \\fBmonth-next\\fR\n.IP \\(bu 2\nExample: \\fB:month-prev\\fR\n.IP \\(bu 2\nAliases: \\fBmprev\\fR, \\fBmnext\\fR\n.RE\n.IP \\(bu 2\nTracking: For use only with \\fBdijo --command\\fR, works only on\nauto-habits\n.RS 2\n.IP \\(bu 2\nInputs: name of habit to track up/down\n.IP \\(bu 2\nUsage: \\fBtrack-up <habit-name>\\fR,\n\\fBtrack-down <habit-name>\\fR\n.IP \\(bu 2\nExample: \\fB:track-up commits\\fR\n.IP \\(bu 2\nAliases: \\fBtup\\fR, \\fBtdown\\fR\n.RE\n.IP \\(bu 2\nWrite: write progress to disk\n.RS 2\n.IP \\(bu 2\nInputs: None\n.IP \\(bu 2\nUsage: \\fBwrite\\fR\n.IP \\(bu 2\nExample: \\fB:write\\fR\n.IP \\(bu 2\nAliases: \\fBw\\fR\n.RE\n.IP \\(bu 2\nQuit: save and quit\n.RS 2\n.IP \\(bu 2\nInputs: None\n.IP \\(bu 2\nUsage: \\fBquit\\fR\n.IP \\(bu 2\nExample: \\fB:quit\\fR\n.IP \\(bu 2\nAliases: \\fBq\\fR\n.RE\n\n.SH INTERNALS\n.PP\nThis document delves into the internals of \\fBdijo\\fR.\n.SS Files\n.PP\nAfter its first run, \\fBdijo\\fR creates three files on your file system, one to record habit data, \\fBhabit_record.json\\fR, one to record auto-habit data, \\fBhabit_record[auto].json\\fR, and one to store the default configuration in, \\fBconfig.toml\\fR. Data is saved in a human-readable format: JSON (a lot of work went into this). The config file is stored in TOML.\n\n.SS Data files:\n.PP\nMaking changes to these files while \\fBdijo\\fR is running, is not recommended (\\fBdijo\\fR will overwrite your changes on save).\n.nf\n.IP \\(bu 2\nGNU/Linux: \\fB$XDG_DATA_HOME/dijo/*.json\\fR\n.IP \\(bu 2\nMacOS: \\fB$HOME/Library/Application Support/rs.nerdypepper.dijo/*.json\\fR\n.IP \\(bu 2\nWin10: \\fB{FOLDERID_RoamingAppData}\\[rs]nerdypepper\\[rs]dijo\\[rs]data\\[rs]*.json\\fR\n.fi\n\n.SS Config files:\n.PP\nYou can read more about configuring \\fBdijo\\fR at the Customization page.\n.nf\n.IP \\(bu 2\nGNU/Linux: \\fB$XDG_CONFIG_HOME/dijo/config.toml\\fR\n.IP \\(bu 2\nMacOS: \\fB$HOME/Library/Application Support/rs.nerdypepper.dijo/config.toml\\fR\n.IP \\(bu 2\nWin10: \\fB{FOLDERID_RoamingAppData}\\[rs]nerdypepper\\[rs]dijo\\[rs]config\\[rs]config.toml\\fR\n.fi\n.PP\n\\fBdijo\\fR will not run on your computer if it can\\[cq]t find your home directory.\n\n.SS Data format\n.PP\nThe general structure of a habit is as follows:\n.IP\n.nf\n\\fB\ntype  :: String,\nname  :: String,\ngoal  :: HabitType,\nauto  :: bool,\nstats :: Map<Date, HabitType>\n\\fR\n.fi\n.PP\n\\fBHabitType\\fR is the type of data to be tracked and it is a \\fBbool\\fR for bit-type habits and a \\fBu32\\fR for counting habits.\n\n.SS File watchers\n.PP\n\\fBdijo\\fR sets up a file watcher (in the interactive mode), and watches \\fBhabit_record[auto].json\\fR for changes. When changes are made to this file via \\fBdijo -c\\fR or equivalent, the interactive mode receives an update. However, the change is not reflected immediately because of \\fBdijo\\fR\\[cq]s event based redrawing. You may force a redraw, and thereby update auto habits by pressing any button on the keyboard.\n\n.SH AUTHOR\nAkshay <nerdy@peppe.rs>\n\n.SH SEE ALSO\n.PP\n\\fIvi\\fR(1), \\fIvim\\fR(1), \\fInvim\\fR(1), \\fIjq\\fR(1), \\fIgit\\fR(1)\n"
        },
        {
          "name": "flake.lock",
          "type": "blob",
          "size": 2.2529296875,
          "content": "{\n  \"nodes\": {\n    \"mozillapkgs\": {\n      \"flake\": false,\n      \"locked\": {\n        \"lastModified\": 1603906276,\n        \"narHash\": \"sha256-RsNPnEKd7BcogwkqhaV5kI/HuNC4flH/OQCC/4W5y/8=\",\n        \"owner\": \"mozilla\",\n        \"repo\": \"nixpkgs-mozilla\",\n        \"rev\": \"8c007b60731c07dd7a052cce508de3bb1ae849b4\",\n        \"type\": \"github\"\n      },\n      \"original\": {\n        \"owner\": \"mozilla\",\n        \"repo\": \"nixpkgs-mozilla\",\n        \"type\": \"github\"\n      }\n    },\n    \"naersk\": {\n      \"inputs\": {\n        \"nixpkgs\": \"nixpkgs\"\n      },\n      \"locked\": {\n        \"lastModified\": 1610392286,\n        \"narHash\": \"sha256-3wFl5y+4YZO4SgRYK8WE7JIS3p0sxbgrGaQ6RMw+d98=\",\n        \"owner\": \"nmattia\",\n        \"repo\": \"naersk\",\n        \"rev\": \"d7bfbad3304fd768c0f93a4c3b50976275e6d4be\",\n        \"type\": \"github\"\n      },\n      \"original\": {\n        \"owner\": \"nmattia\",\n        \"repo\": \"naersk\",\n        \"type\": \"github\"\n      }\n    },\n    \"nixpkgs\": {\n      \"locked\": {\n        \"lastModified\": 1610850544,\n        \"narHash\": \"sha256-6GnsJuulJNdSrZNP98rRTRX/zJbxdC7m3qaH6WwsOuY=\",\n        \"owner\": \"NixOS\",\n        \"repo\": \"nixpkgs\",\n        \"rev\": \"2fbc36f3d891c86ae34dc0414bc78e74e8911218\",\n        \"type\": \"github\"\n      },\n      \"original\": {\n        \"id\": \"nixpkgs\",\n        \"type\": \"indirect\"\n      }\n    },\n    \"nixpkgs_2\": {\n      \"locked\": {\n        \"lastModified\": 1610850544,\n        \"narHash\": \"sha256-6GnsJuulJNdSrZNP98rRTRX/zJbxdC7m3qaH6WwsOuY=\",\n        \"owner\": \"NixOS\",\n        \"repo\": \"nixpkgs\",\n        \"rev\": \"2fbc36f3d891c86ae34dc0414bc78e74e8911218\",\n        \"type\": \"github\"\n      },\n      \"original\": {\n        \"id\": \"nixpkgs\",\n        \"type\": \"indirect\"\n      }\n    },\n    \"root\": {\n      \"inputs\": {\n        \"mozillapkgs\": \"mozillapkgs\",\n        \"naersk\": \"naersk\",\n        \"nixpkgs\": \"nixpkgs_2\",\n        \"utils\": \"utils\"\n      }\n    },\n    \"utils\": {\n      \"locked\": {\n        \"lastModified\": 1610051610,\n        \"narHash\": \"sha256-U9rPz/usA1/Aohhk7Cmc2gBrEEKRzcW4nwPWMPwja4Y=\",\n        \"owner\": \"numtide\",\n        \"repo\": \"flake-utils\",\n        \"rev\": \"3982c9903e93927c2164caa727cd3f6a0e6d14cc\",\n        \"type\": \"github\"\n      },\n      \"original\": {\n        \"owner\": \"numtide\",\n        \"repo\": \"flake-utils\",\n        \"type\": \"github\"\n      }\n    }\n  },\n  \"root\": \"root\",\n  \"version\": 7\n}\n"
        },
        {
          "name": "flake.nix",
          "type": "blob",
          "size": 1.623046875,
          "content": "{\n  inputs = {\n    utils.url = \"github:numtide/flake-utils\";\n    naersk.url = \"github:nmattia/naersk\";\n    mozillapkgs = {\n      url = \"github:mozilla/nixpkgs-mozilla\";\n      flake = false;\n    };\n  };\n\n  outputs = { self, nixpkgs, utils, naersk, mozillapkgs }:\n  utils.lib.eachDefaultSystem (system: let\n    pkgs = nixpkgs.legacyPackages.\"${system}\";\n\n      # Get a specific rust version\n      mozilla = pkgs.callPackage (mozillapkgs + \"/package-set.nix\") {};\n      rust = (mozilla.rustChannelOf {\n        date = \"2020-12-23\";\n        channel = \"nightly\";\n        sha256 = \"LbKHsCOFXWpg/SEyACfzZuWjKbkXdH6EJKOPSGoO01E=\"; # set zeros after modifying channel or date\n      }).rust;\n      rust-src = (mozilla.rustChannelOf {\n        date = \"2020-12-23\";\n        channel = \"nightly\";\n        sha256 = \"LbKHsCOFXWpg/SEyACfzZuWjKbkXdH6EJKOPSGoO01E=\"; # set zeros after modifying channel or date\n      }).rust-src;\n\n      naersk-lib = naersk.lib.\"${system}\".override {\n        cargo = rust;\n        rustc = rust;\n      };\n    in rec {\n      packages.my-project = naersk-lib.buildPackage {\n        pname = \"dijo\";\n        version = \"0.2.7\";\n        root = ./.;\n      };\n      defaultPackage = packages.my-project;\n      apps.my-project = utils.lib.mkApp {\n        drv = packages.my-project;\n      };\n      defaultApp = apps.my-project;\n      devShell = pkgs.mkShell {\n        nativeBuildInputs = [\n          rust\n          rust-src\n          pkgs.rust-analyzer\n          pkgs.cargo\n          pkgs.openssl\n          pkgs.ncurses\n        ];\n        shellHook = ''\n          export RUST_SRC_PATH=\"${rust-src}/lib/rustlib/src/rust/library\"\n        '';\n      };\n    });\n  }\n"
        },
        {
          "name": "notes.txt",
          "type": "blob",
          "size": 1.4990234375,
          "content": "habit:\n`-type: bit/count\n`-stats:\n  `-year:\n    `-month:\n      `-bit:\n      | `-dates - array\n      |\n      `-count:\n        `-dates - k,v pairs\n\nhabit:\n`-type: bit/count\n`-stats: k,v (dates, bit/count)\n\nCycle habit type:\n - n states\n - cycles through states on prev next events\n - represent by symbol/char\n - ser to usize?\n\nModes:\n - day mode - shows all days of 1 month\n    * sift months on prev/next\n - week mode?\n    * aggregate stats for 1 week\n    * show 4 weeks per view\n    * bar graph for count and bit\n\nCommand mode:\n - add command\n    * add <name> <type> <goal>\n    * add <name> --type <type> [--goal <goal>]\n    * interactive add command via questionnaire?\n - edit command?\n    * edit <name> <new-type> <new-goal>\n    * edit <name> --goal <new-goal>\n    * edit <name> --type <new-type>\n    * interactive edit command via questionnaire?\n - delete command\n    * delete <name>\n    * delete _ (deletes focused?)\n - chronological nav:\n    * month-prev mprev\n    * month-next mnext\n\nInterface:\n - move view port if focused view goes outside bounds\n - tab completion for command mode? requires lex table\n - move command window to bottom, styling\n - prefix command window with `:`\n\nUndo-tree:\n - store app states in memory\n - should store diffs? or entire state?\n - ideal undo depth limit?\n\nAuto-trackable habits\n - allow editing these habits via cli\n - can track commits, crons\n - disallow editing these habits via curses\n - storage\n    * will be mutex with non-auto habits\n    * serialize and save separately each other? [imp]\n \n"
        },
        {
          "name": "readme.md",
          "type": "blob",
          "size": 2.5263671875,
          "content": "<p align=\"center\">\n  <img height=\"200\" src=\"https://u.peppe.rs/lz.png\">\n</p>\n\n### About\n\n`dijo` is a habit tracker. It is curses-based, it runs in\nyour terminal. `dijo` is scriptable, hook it up [with\nexternal\nprograms](https://github.com/NerdyPepper/dijo/wiki/Auto-Habits)\nto track events without moving a finger. `dijo` is modal,\nmuch like a certain text editor.  \n\n### Features\n\n - **vim like motions**: navigate `dijo` with `hjkl`!\n - **`dijo` is modal**: different modes to view different\n   stats!\n - **vim like command mode**: add with `:add`, delete with\n   `:delete` and above all, quit with `:q`!.\n - **fully scriptable**: [configure `dijo` to\n   track your `git` commits](https://github.com/NerdyPepper/dijo/wiki/Auto-Habits)!\n\n### Install\n\nTo get the latest release of `dijo`, prefer installing it\nvia `cargo`. Unofficial packages exist for some package\nmanagers as well. You can also browse the\n[Releases](https://github.com/NerdyPepper/dijo/releases)\npage for prebuilt binaries.\n\n#### Cargo\n\n```shell\n# dijo requires rustc >= v1.42\n$ rustup update\n\n$ cargo install dijo\n```\nIf you aren't familiar with `cargo` or Rust, read the [complete\ninstallation](https://github.com/NerdyPepper/dijo/wiki/Install)\nguide.\n\n#### Nix\n\n`dijo` on nixpkgs (maintained by [@Infinisil](https://github.com/Infinisil)):\n\n```\n$ nix-env -f channel:nixpkgs-unstable -iA dijo\n```\n\n#### Snap\n\n`dijo` on sanpstore (maintained by [@purveshpatel511](https://github.com/purveshpatel511)):\n\n```\n$ sudo snap install dijo\n```\n\n\n#### Arch Linux\n\nInstall [`dijo-bin`](https://aur.archlinux.org/packages/dijo-bin/) or [`dijo-git`](https://aur.archlinux.org/packages/dijo-git) from the AUR.\n\n#### Windows\n\n```\n# the default termion backend dosen't run on windows yet\n$ cargo install --no-default-features --features \"crossterm-backend\"\n```\n\n### Usage\n\n`dijo` has a [detailed\nwiki](https://github.com/NerdyPepper/dijo/wiki/), here are\nsome good places to start out:\n\n - [Getting started](https://github.com/NerdyPepper/dijo/wiki/Getting-Started)\n - [Automatically tracking habits](https://github.com/NerdyPepper/dijo/wiki/Auto-Habits)\n - [Command reference](https://github.com/NerdyPepper/dijo/wiki/Commands)\n\n### Gallery\n\nDay mode, shows days of the current month:\n\n![day.png](https://u.peppe.rs/qI.png)\n\nWeek mode, shows weekly summary for the weeks of the month:\n\n![weekly.png](https://u.peppe.rs/HZ.png)\n\n[![Awesome Humane Tech](https://raw.githubusercontent.com/humanetech-community/awesome-humane-tech/main/humane-tech-badge.svg?sanitize=true)](https://github.com/humanetech-community/awesome-humane-tech)\n"
        },
        {
          "name": "rustfmt.toml",
          "type": "blob",
          "size": 0.3193359375,
          "content": "max_width = 100\nhard_tabs = false\ntab_spaces = 4\nnewline_style = \"Auto\"\nuse_small_heuristics = \"Default\"\nreorder_imports = true\nreorder_modules = true\nremove_nested_parens = true\nfn_args_layout = \"Tall\"\nedition = \"2018\"\nmerge_derives = true\nuse_try_shorthand = false\nuse_field_init_shorthand = false\nforce_explicit_abi = true\n\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}