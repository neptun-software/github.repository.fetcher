{
  "metadata": {
    "timestamp": 1736709200350,
    "page": 465,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQ3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "snapview/tungstenite-rs",
      "stars": 1979,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.025390625,
          "content": "target\nCargo.lock\n.vscode\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 6.9130859375,
          "content": "# 0.26.1\n\n- Fix/revert unsoundness that could lead to UB with dodgy `Read` stream implementations.\n\n# 0.26.0\n- Simplify `Message` to use `Bytes` payload directly with simpler `Utf8Bytes` for text.\n- Change `CloseFrame` to use `Utf8Bytes` for `reason`.\n- Re-export `Bytes`.\n\n# 0.25.0\n\n- New `Payload` type for `Message` that allows sending messages with a payload that can be cheaply cloned (`Bytes`).\n  Long standing [issue](https://github.com/snapview/tungstenite-rs/issues/96) solved!\n- Add `WebSocketConfig::read_buffer_size` default 128 KiB.\n- Make `WebSocketConfig` non-exhaustive & add builder style construction fns.\n- Remove deprecated `WebSocketConfig::max_send_queue`.\n- Trim spaces on `Sec-WebSocket-Protocol` header.\n- Eliminate data copies when reading complete messages & optimise read buffer. Improves performance.\n- Update `thiserror` to `2`.\n\n# 0.24.0\n\n- Raised MSRV to 1.63 to match `tokio-tungstenite`.\n- Connecting to WSS URL without TLS features specified results in a better error.\n- Handshake will now flush after completion to be safe (works better with buffered streams).\n\n# 0.23.0\n\n- Disable default features for `rustls` giving the user more flexibility.\n\n# 0.22.0\n- Make `url` optional.\n- Add a builder for convenient headers and subprotocols construction.\n- Update `rustls` dependency.\n\n# 0.21.0\n- Fix read-predominant auto pong responses not flushing when hitting WouldBlock errors.\n- Improve `FrameHeader::format` write correctness.\n- Update `rustls` to `0.22`.\n- Update `webpki-roots` to `0.26`.\n- Update `rustls-native-certs` to `0.7`.\n- Update `http` to `1.0.0`.\n\n# 0.20.1\n- Fixes [CVE-2023-43669](https://github.com/snapview/tungstenite-rs/pull/379).\n\n# 0.20.0\n- Remove many implicit flushing behaviours. In general reading and writing messages will no \n  longer flush until calling `flush`. An exception is automatic responses (e.g. pongs) \n  which will continue to be written and flushed when reading and writing.\n  This allows writing a batch of messages and flushing once, improving performance.\n- Add `WebSocket::read`, `write`, `send`, `flush`. Deprecate `read_message`, `write_message`, `write_pending`.\n- Add `FrameSocket::read`, `write`, `send`, `flush`. Remove `read_frame`, `write_frame`, `write_pending`. \n  Note: Previous use of `write_frame` may be replaced with `send`.\n- Add `WebSocketContext::read`, `write`, `flush`. Remove `read_message`, `write_message`, `write_pending`.\n  Note: Previous use of `write_message` may be replaced with `write` + `flush`.\n- Remove `send_queue`, replaced with using the frame write buffer to achieve similar results.\n  * Add `WebSocketConfig::max_write_buffer_size`. Deprecate `max_send_queue`.\n  * Add `Error::WriteBufferFull`. Remove `Error::SendQueueFull`.\n    Note: `WriteBufferFull` returns the message that could not be written as a `Message::Frame`.\n- Add ability to buffer multiple writes before writing to the underlying stream, controlled by\n  `WebSocketConfig::write_buffer_size` (default 128 KiB). Improves batch message write performance.\n- Panic on receiving invalid `WebSocketConfig`.\n\n# 0.19.0\n\n- Update TLS dependencies.\n- Exchanging `base64` for `data-encoding`.\n\n# 0.18.0\n\n- Make handshake dependencies optional with a new `handshake` feature (now a default one!).\n- Return HTTP error responses (their HTTP body) upon non 101 status codes.\n\n# 0.17.3\n\n- Respect the case-sentitivity of the \"Origin\" header to keep compatibility with the older servers that use case-sensitive comparison.\n\n# 0.17.2\n\n- Fix panic when invalid manually constructed `http::Request` is passed to `tungstenite`.\n- Downgrade the MSRV to `1.56` due to some other crates that rely on us not being quite ready for `1.58`.\n\n# 0.17.1\n\n- Specify the minimum required Rust version.\n\n# 0.17.0\n\n- Update of dependencies (primarily `sha1`).\n- Add support of the fragmented messages (allow the user to send the frames without composing the full message).\n- Overhaul of the client's request generation process. Now the users are able to pass the constructed `http::Request` \"as is\" to `tungstenite-rs`, letting the library to check the correctness of the request and specifying their own headers (including its own key if necessary). No changes for those ones who used the client in a normal way by connecting using a URL/URI (most common use-case).\n\n# 0.16.0\n\n- Update of dependencies (primarily `rustls`, `webpki-roots`, `rustls-native-certs`).\n- When the close frame is received, the reply that is automatically sent to the initiator has the same code (so we just echo the frame back). Previously a new close frame was created (i.e. the close code / reason was always the same regardless of what code / reason specified by the initiator). Now itâ€™s more symmetrical and arguably more intuitive behavior (see [#246](https://github.com/snapview/tungstenite-rs/pull/246) for more context).\n- The internal `ReadBuffer` implementation uses heap instead of stack to store the buffer. This should solve issues with possible stack overflows in some scenarios (see [#241](https://github.com/snapview/tungstenite-rs/pull/241) for more context).\n\n# 0.15.0\n\n- Allow selecting the method of loading root certificates if `rustls` is used as TLS implementation.\n  - Two new feature flags `rustls-tls-native-roots` and `rustls-tls-webpki-roots` have been added\n    that activate the respective method to load certificates.\n  - The `rustls-tls` flag was removed to raise awareness of this change. Otherwise, compilation\n    would have continue to work and potential errors (due to different or missing certificates)\n    only occurred at runtime.\n  - The new feature flags are additive. If both are enabled, both methods will be used to add\n    certificates to the TLS configuration.\n- Allow specifying a connector (for more fine-grained configuration of the TLS).\n\n# 0.14.0\n\n- Use `rustls-native-certs` instead of `webpki-root` when `rustls-tls` feature is enabled.\n- Don't use `native-tls` as a default feature (see #202 for more details).\n- New fast and safe implementation of the reading buffer (replacement for the `input_buffer`).\n- Remove some errors from the `Error` enum that can't be triggered anymore with the new buffer implementation.\n\n# 0.13.0\n\n- Add `CapacityError`, `UrlError`, and `ProtocolError` types to represent the different types of capacity, URL, and protocol errors respectively.\n- Modify variants `Error::Capacity`, `Error::Url`, and `Error::Protocol` to hold the above errors types instead of string error messages.\n- Add `handshake::derive_accept_key` to facilitate external handshakes.\n- Add support for `rustls` as TLS backend. The previous `tls` feature flag is now removed in favor\n  of `native-tls` and `rustls-tls`, which allows to pick the TLS backend. The error API surface had\n  to be changed to support the new error types coming from rustls related crates.\n\n# 0.12.0\n\n- Add facilities to allow clients to follow HTTP 3XX redirects.\n- Allow accepting unmasked clients on the server side to be compatible with some legacy / invalid clients.\n- Update of dependencies and documentation fixes.\n"
        },
        {
          "name": "Cargo.toml",
          "type": "blob",
          "size": 2.4140625,
          "content": "[package]\nname = \"tungstenite\"\ndescription = \"Lightweight stream-based WebSocket implementation\"\ncategories = [\"web-programming::websocket\", \"network-programming\"]\nkeywords = [\"websocket\", \"io\", \"web\"]\nauthors = [\"Alexey Galakhov\", \"Daniel Abramov\"]\nlicense = \"MIT OR Apache-2.0\"\nreadme = \"README.md\"\nhomepage = \"https://github.com/snapview/tungstenite-rs\"\ndocumentation = \"https://docs.rs/tungstenite/0.26.1\"\nrepository = \"https://github.com/snapview/tungstenite-rs\"\nversion = \"0.26.1\"\nedition = \"2021\"\nrust-version = \"1.63\"\ninclude = [\"benches/**/*\", \"src/**/*\", \"examples/**/*\", \"LICENSE-*\", \"README.md\", \"CHANGELOG.md\"]\n\n[package.metadata.docs.rs]\nall-features = true\n\n[features]\ndefault = [\"handshake\"]\nhandshake = [\"data-encoding\", \"http\", \"httparse\", \"sha1\"]\nurl = [\"dep:url\"]\nnative-tls = [\"native-tls-crate\"]\nnative-tls-vendored = [\"native-tls\", \"native-tls-crate/vendored\"]\nrustls-tls-native-roots = [\"__rustls-tls\", \"rustls-native-certs\"]\nrustls-tls-webpki-roots = [\"__rustls-tls\", \"webpki-roots\"]\n__rustls-tls = [\"rustls\", \"rustls-pki-types\"]\n\n[dependencies]\ndata-encoding = { version = \"2\", optional = true }\nbytes = \"1.9.0\"\nhttp = { version = \"1.0\", optional = true }\nhttparse = { version = \"1.3.4\", optional = true }\nlog = \"0.4.8\"\nrand = \"0.8.0\"\nsha1 = { version = \"0.10\", optional = true }\nthiserror = \"2.0.7\"\nurl = { version = \"2.1.0\", optional = true }\nutf-8 = \"0.7.5\"\n\n[dependencies.native-tls-crate]\noptional = true\npackage = \"native-tls\"\nversion = \"0.2.3\"\n\n[dependencies.rustls]\noptional = true\ndefault-features = false\nfeatures = [\"std\"]\nversion = \"0.23.0\"\n\n[dependencies.rustls-pki-types]\noptional = true\nversion = \"1.0\"\n\n[dependencies.rustls-native-certs]\noptional = true\nversion = \"0.8.0\"\n\n[dependencies.webpki-roots]\noptional = true\nversion = \"0.26\"\n\n[dev-dependencies]\ncriterion = \"0.5.0\"\nenv_logger = \"0.11\"\ninput_buffer = \"0.5.0\"\nrand = \"0.8.4\"\nsocket2 = \"0.5.5\"\n\n[profile.bench]\nlto = \"thin\"\n\n[[bench]]\nname = \"buffer\"\nharness = false\n\n[[bench]]\nname = \"write\"\nharness = false\n\n[[bench]]\nname = \"read\"\nharness = false\n\n[[example]]\nname = \"client\"\nrequired-features = [\"handshake\"]\n\n[[example]]\nname = \"server\"\nrequired-features = [\"handshake\"]\n\n[[example]]\nname = \"autobahn-client\"\nrequired-features = [\"handshake\"]\n\n[[example]]\nname = \"autobahn-server\"\nrequired-features = [\"handshake\"]\n\n[[example]]\nname = \"callback-error\"\nrequired-features = [\"handshake\"]\n\n[[example]]\nname = \"srv_accept_unmasked_frames\"\nrequired-features = [\"handshake\"]\n"
        },
        {
          "name": "LICENSE-APACHE",
          "type": "blob",
          "size": 10.5927734375,
          "content": "                              Apache License\n                        Version 2.0, January 2004\n                     http://www.apache.org/licenses/\n\nTERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n1. Definitions.\n\n   \"License\" shall mean the terms and conditions for use, reproduction,\n   and distribution as defined by Sections 1 through 9 of this document.\n\n   \"Licensor\" shall mean the copyright owner or entity authorized by\n   the copyright owner that is granting the License.\n\n   \"Legal Entity\" shall mean the union of the acting entity and all\n   other entities that control, are controlled by, or are under common\n   control with that entity. For the purposes of this definition,\n   \"control\" means (i) the power, direct or indirect, to cause the\n   direction or management of such entity, whether by contract or\n   otherwise, or (ii) ownership of fifty percent (50%) or more of the\n   outstanding shares, or (iii) beneficial ownership of such entity.\n\n   \"You\" (or \"Your\") shall mean an individual or Legal Entity\n   exercising permissions granted by this License.\n\n   \"Source\" form shall mean the preferred form for making modifications,\n   including but not limited to software source code, documentation\n   source, and configuration files.\n\n   \"Object\" form shall mean any form resulting from mechanical\n   transformation or translation of a Source form, including but\n   not limited to compiled object code, generated documentation,\n   and conversions to other media types.\n\n   \"Work\" shall mean the work of authorship, whether in Source or\n   Object form, made available under the License, as indicated by a\n   copyright notice that is included in or attached to the work\n   (an example is provided in the Appendix below).\n\n   \"Derivative Works\" shall mean any work, whether in Source or Object\n   form, that is based on (or derived from) the Work and for which the\n   editorial revisions, annotations, elaborations, or other modifications\n   represent, as a whole, an original work of authorship. For the purposes\n   of this License, Derivative Works shall not include works that remain\n   separable from, or merely link (or bind by name) to the interfaces of,\n   the Work and Derivative Works thereof.\n\n   \"Contribution\" shall mean any work of authorship, including\n   the original version of the Work and any modifications or additions\n   to that Work or Derivative Works thereof, that is intentionally\n   submitted to Licensor for inclusion in the Work by the copyright owner\n   or by an individual or Legal Entity authorized to submit on behalf of\n   the copyright owner. For the purposes of this definition, \"submitted\"\n   means any form of electronic, verbal, or written communication sent\n   to the Licensor or its representatives, including but not limited to\n   communication on electronic mailing lists, source code control systems,\n   and issue tracking systems that are managed by, or on behalf of, the\n   Licensor for the purpose of discussing and improving the Work, but\n   excluding communication that is conspicuously marked or otherwise\n   designated in writing by the copyright owner as \"Not a Contribution.\"\n\n   \"Contributor\" shall mean Licensor and any individual or Legal Entity\n   on behalf of whom a Contribution has been received by Licensor and\n   subsequently incorporated within the Work.\n\n2. Grant of Copyright License. Subject to the terms and conditions of\n   this License, each Contributor hereby grants to You a perpetual,\n   worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n   copyright license to reproduce, prepare Derivative Works of,\n   publicly display, publicly perform, sublicense, and distribute the\n   Work and such Derivative Works in Source or Object form.\n\n3. Grant of Patent License. Subject to the terms and conditions of\n   this License, each Contributor hereby grants to You a perpetual,\n   worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n   (except as stated in this section) patent license to make, have made,\n   use, offer to sell, sell, import, and otherwise transfer the Work,\n   where such license applies only to those patent claims licensable\n   by such Contributor that are necessarily infringed by their\n   Contribution(s) alone or by combination of their Contribution(s)\n   with the Work to which such Contribution(s) was submitted. If You\n   institute patent litigation against any entity (including a\n   cross-claim or counterclaim in a lawsuit) alleging that the Work\n   or a Contribution incorporated within the Work constitutes direct\n   or contributory patent infringement, then any patent licenses\n   granted to You under this License for that Work shall terminate\n   as of the date such litigation is filed.\n\n4. Redistribution. You may reproduce and distribute copies of the\n   Work or Derivative Works thereof in any medium, with or without\n   modifications, and in Source or Object form, provided that You\n   meet the following conditions:\n\n   (a) You must give any other recipients of the Work or\n       Derivative Works a copy of this License; and\n\n   (b) You must cause any modified files to carry prominent notices\n       stating that You changed the files; and\n\n   (c) You must retain, in the Source form of any Derivative Works\n       that You distribute, all copyright, patent, trademark, and\n       attribution notices from the Source form of the Work,\n       excluding those notices that do not pertain to any part of\n       the Derivative Works; and\n\n   (d) If the Work includes a \"NOTICE\" text file as part of its\n       distribution, then any Derivative Works that You distribute must\n       include a readable copy of the attribution notices contained\n       within such NOTICE file, excluding those notices that do not\n       pertain to any part of the Derivative Works, in at least one\n       of the following places: within a NOTICE text file distributed\n       as part of the Derivative Works; within the Source form or\n       documentation, if provided along with the Derivative Works; or,\n       within a display generated by the Derivative Works, if and\n       wherever such third-party notices normally appear. The contents\n       of the NOTICE file are for informational purposes only and\n       do not modify the License. You may add Your own attribution\n       notices within Derivative Works that You distribute, alongside\n       or as an addendum to the NOTICE text from the Work, provided\n       that such additional attribution notices cannot be construed\n       as modifying the License.\n\n   You may add Your own copyright statement to Your modifications and\n   may provide additional or different license terms and conditions\n   for use, reproduction, or distribution of Your modifications, or\n   for any such Derivative Works as a whole, provided Your use,\n   reproduction, and distribution of the Work otherwise complies with\n   the conditions stated in this License.\n\n5. Submission of Contributions. Unless You explicitly state otherwise,\n   any Contribution intentionally submitted for inclusion in the Work\n   by You to the Licensor shall be under the terms and conditions of\n   this License, without any additional terms or conditions.\n   Notwithstanding the above, nothing herein shall supersede or modify\n   the terms of any separate license agreement you may have executed\n   with Licensor regarding such Contributions.\n\n6. Trademarks. This License does not grant permission to use the trade\n   names, trademarks, service marks, or product names of the Licensor,\n   except as required for reasonable and customary use in describing the\n   origin of the Work and reproducing the content of the NOTICE file.\n\n7. Disclaimer of Warranty. Unless required by applicable law or\n   agreed to in writing, Licensor provides the Work (and each\n   Contributor provides its Contributions) on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n   implied, including, without limitation, any warranties or conditions\n   of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n   PARTICULAR PURPOSE. You are solely responsible for determining the\n   appropriateness of using or redistributing the Work and assume any\n   risks associated with Your exercise of permissions under this License.\n\n8. Limitation of Liability. In no event and under no legal theory,\n   whether in tort (including negligence), contract, or otherwise,\n   unless required by applicable law (such as deliberate and grossly\n   negligent acts) or agreed to in writing, shall any Contributor be\n   liable to You for damages, including any direct, indirect, special,\n   incidental, or consequential damages of any character arising as a\n   result of this License or out of the use or inability to use the\n   Work (including but not limited to damages for loss of goodwill,\n   work stoppage, computer failure or malfunction, or any and all\n   other commercial damages or losses), even if such Contributor\n   has been advised of the possibility of such damages.\n\n9. Accepting Warranty or Additional Liability. While redistributing\n   the Work or Derivative Works thereof, You may choose to offer,\n   and charge a fee for, acceptance of support, warranty, indemnity,\n   or other liability obligations and/or rights consistent with this\n   License. However, in accepting such obligations, You may act only\n   on Your own behalf and on Your sole responsibility, not on behalf\n   of any other Contributor, and only if You agree to indemnify,\n   defend, and hold each Contributor harmless for any liability\n   incurred by, or claims asserted against, such Contributor by reason\n   of your accepting any such warranty or additional liability.\n\nEND OF TERMS AND CONDITIONS\n\nAPPENDIX: How to apply the Apache License to your work.\n\n   To apply the Apache License to your work, attach the following\n   boilerplate notice, with the fields enclosed by brackets \"[]\"\n   replaced with your own identifying information. (Don't include\n   the brackets!)  The text should be enclosed in the appropriate\n   comment syntax for the file format. We also recommend that a\n   file or class name and description of purpose be included on the\n   same \"printed page\" as the copyright notice for easier\n   identification within third-party archives.\n\nCopyright [yyyy] [name of copyright owner]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n\thttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n"
        },
        {
          "name": "LICENSE-MIT",
          "type": "blob",
          "size": 1.06640625,
          "content": "Copyright (c) 2017 Alexey Galakhov\nCopyright (c) 2016 Jason Housley\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.1865234375,
          "content": "# Tungstenite\n\nLightweight stream-based WebSocket implementation for [Rust](https://www.rust-lang.org/).\n\n```rust\nuse std::net::TcpListener;\nuse std::thread::spawn;\nuse tungstenite::accept;\n\n/// A WebSocket echo server\nfn main () {\n    let server = TcpListener::bind(\"127.0.0.1:9001\").unwrap();\n    for stream in server.incoming() {\n        spawn (move || {\n            let mut websocket = accept(stream.unwrap()).unwrap();\n            loop {\n                let msg = websocket.read().unwrap();\n\n                // We do not want to send back ping/pong messages.\n                if msg.is_binary() || msg.is_text() {\n                    websocket.send(msg).unwrap();\n                }\n            }\n        });\n    }\n}\n```\n\nTake a look at the examples section to see how to write a simple client/server.\n\n**NOTE:** `tungstenite-rs` is more like a barebone to build reliable modern networking applications\nusing WebSockets. If you're looking for a modern production-ready \"batteries included\" WebSocket\nlibrary that allows you to efficiently use non-blocking sockets and do \"full-duplex\" communication,\ntake a look at [`tokio-tungstenite`](https://github.com/snapview/tokio-tungstenite).\n\n[![MIT licensed](https://img.shields.io/badge/License-MIT-blue.svg)](./LICENSE-MIT)\n[![Apache-2.0 licensed](https://img.shields.io/badge/License-Apache%202.0-blue.svg)](./LICENSE-APACHE)\n[![Crates.io](https://img.shields.io/crates/v/tungstenite.svg?maxAge=2592000)](https://crates.io/crates/tungstenite)\n[![Build Status](https://github.com/snapview/tungstenite-rs/actions/workflows/ci.yml/badge.svg)](https://github.com/snapview/tungstenite-rs/actions)\n\n[Documentation](https://docs.rs/tungstenite)\n\nIntroduction\n------------\nThis library provides an implementation of WebSockets,\n[RFC6455](https://tools.ietf.org/html/rfc6455). It allows for both synchronous (like TcpStream)\nand asynchronous usage and is easy to integrate into any third-party event loops including\n[MIO](https://github.com/tokio-rs/mio). The API design abstracts away all the internals of the\nWebSocket protocol but still makes them accessible for those who wants full control over the\nnetwork.\n\nWhy Tungstenite?\n----------------\n\nIt's formerly WS2, the 2nd implementation of WS. WS2 is the chemical formula of\ntungsten disulfide, the tungstenite mineral.\n\nFeatures\n--------\n\nTungstenite provides a complete implementation of the WebSocket specification.\nTLS is supported on all platforms using `native-tls` or `rustls`. The following\nfeatures are available:\n\n* `native-tls`\n* `native-tls-vendored`\n* `rustls-tls-native-roots`\n* `rustls-tls-webpki-roots`\n\nChoose the one that is appropriate for your needs.\n\nBy default **no TLS feature is activated**, so make sure you use one of the TLS features,\notherwise you won't be able to communicate with the TLS endpoints.\n\nThere is no support for permessage-deflate at the moment, but the PRs are welcome :wink:\n\nTesting\n-------\n\nTungstenite is thoroughly tested and passes the [Autobahn Test Suite](https://github.com/crossbario/autobahn-testsuite) for\nWebSockets. It is also covered by internal unit tests as well as possible.\n\nContributing\n------------\n\nPlease report bugs and make feature requests [here](https://github.com/snapview/tungstenite-rs/issues).\n"
        },
        {
          "name": "autobahn",
          "type": "tree",
          "content": null
        },
        {
          "name": "benches",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "fuzz",
          "type": "tree",
          "content": null
        },
        {
          "name": "rustfmt.toml",
          "type": "blob",
          "size": 0.26171875,
          "content": "# This project uses rustfmt to format source code. Run `cargo +nightly fmt [-- --check].\n# https://github.com/rust-lang/rustfmt/blob/master/Configurations.md\n\n# Break complex but short statements a bit less.\nuse_small_heuristics = \"Max\"\n\nimports_granularity = \"Crate\"\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}