{
  "metadata": {
    "timestamp": 1736709040674,
    "page": 139,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "greenbone/openvas-scanner",
      "stars": 3528,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 1.3388671875,
          "content": "# clang-format configuration for Greenbone C code\n#\n# Minimum required clang-format version: 6.0\n\n---\nAlignAfterOpenBracket: Align\nAlignConsecutiveAssignments: 'false'\nAlignConsecutiveDeclarations: 'false'\nAlignEscapedNewlines: Left\nAlignOperands: 'true'\nAlignTrailingComments: 'true'\nAllowAllParametersOfDeclarationOnNextLine: 'false'\nAllowShortBlocksOnASingleLine: 'false'\nAllowShortCaseLabelsOnASingleLine: 'false'\nAllowShortFunctionsOnASingleLine: None\nAllowShortIfStatementsOnASingleLine: 'false'\nAllowShortLoopsOnASingleLine: 'false'\nAlwaysBreakAfterReturnType: All\nAlwaysBreakBeforeMultilineStrings: 'false'\nBinPackArguments: 'true'\nBinPackParameters: 'true'\nBreakBeforeBinaryOperators: NonAssignment\nBreakBeforeBraces: GNU\nBreakBeforeTernaryOperators: 'true'\nBreakStringLiterals: 'true'\nColumnLimit: '80'\nContinuationIndentWidth: '2'\nDerivePointerAlignment: 'false'\nIncludeBlocks: Regroup\nIndentCaseLabels: 'false'\nIndentWidth: '2'\nIndentWrappedFunctionNames: 'false'\nKeepEmptyLinesAtTheStartOfBlocks: 'false'\nLanguage: Cpp\nMaxEmptyLinesToKeep: '1'\nPointerAlignment: Right\nReflowComments: 'true'\nSortIncludes: 'true'\nSpaceAfterCStyleCast: 'true'\nSpaceBeforeAssignmentOperators: 'true'\nSpaceBeforeParens: Always\nSpaceInEmptyParentheses: 'false'\nSpacesInCStyleCastParentheses: 'false'\nSpacesInParentheses: 'false'\nSpacesInSquareBrackets: 'false'\nUseTab: Never\n\n...\n"
        },
        {
          "name": ".codecov.yml",
          "type": "blob",
          "size": 0.0126953125,
          "content": "comment: off\n"
        },
        {
          "name": ".devcontainer",
          "type": "tree",
          "content": null
        },
        {
          "name": ".docker",
          "type": "tree",
          "content": null
        },
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.0400390625,
          "content": ".vscode/\n.mergify.yml\nbuild/\nrust/target\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1435546875,
          "content": "build/\nnasl/nasl_grammar.output\nnasl/nasl_grammar.tab.c\nnasl/nasl_grammar.tab.h\n.cache/\ntestsuiterun.nasl\n.vscode\n.venv/\n*.bak\nassets/\n*.rsa\n*.pem\n"
        },
        {
          "name": ".mergify.yml",
          "type": "blob",
          "size": 1.822265625,
          "content": "pull_request_rules:\n  # backports from main branch\n  - name: backport main patches to stable branch\n    conditions:\n      - base=main\n      - label=backport-to-stable\n    actions:\n      backport:\n        branches:\n          - stable\n\n  - name: backport main patches to oldstable branch\n    conditions:\n      - base=main\n      - label=backport-to-oldstable\n    actions:\n      backport:\n        branches:\n          - oldstable\n\n  - name: backport main patches to middleware branch\n    conditions:\n      - base=main\n      - label=backport-to-middleware\n    actions:\n      backport:\n        branches:\n          - middleware\n\n  # backports from upcoming release branch\n  - name: backport stable patches to main branch\n    conditions:\n      - base=stable\n      - label=backport-to-main\n    actions:\n      backport:\n        branches:\n          - main\n\n  - name: backport stable patches to oldstable branch\n    conditions:\n      - base=stable\n      - label=backport-to-oldstable\n    actions:\n      backport:\n        branches:\n          - oldstable\n\n  - name: backport stable patches to middleware branch\n    conditions:\n      - base=stable\n      - label=backport-to-middleware\n    actions:\n      backport:\n        branches:\n          - middleware\n\n  # backports from current release branch\n  - name: backport oldstable patches to main branch\n    conditions:\n      - base=oldstable\n      - label=backport-to-main\n    actions:\n      backport:\n        branches:\n          - main\n\n  - name: backport oldstable patches to stable branch\n    conditions:\n      - base=oldstable\n      - label=backport-to-stable\n    actions:\n      backport:\n        branches:\n          - stable\n\n  - name: backport oldstable patches to middleware branch\n    conditions:\n      - base=oldstable\n      - label=backport-to-middleware\n    actions:\n      backport:\n        branches:\n          - middleware\n"
        },
        {
          "name": ".pontos-header-ignore",
          "type": "blob",
          "size": 0.453125,
          "content": "README.txt\nmd4.*\nmd5.*\niconv.h\ntime.c\nsmb.h\nsmb_signing.*\nsmb_crypt*\nnasl.h\nnasl_var.*\nnasl_tree.*\nnasl_text_utils.*\nnasl_socket.h\nnasl_scanner_glue.*\nnasl_raw.h\nnasl_packet_forgery*\nnasl_misc_funcs.*\nnasl_lex_ctxt.*\nnasl_init.*\nnasl_http.*\nnasl_host.*\nnasl_func.*\nnasl_debug.*\nnasl_crypto*\nnasl_cmd_exec.*\nnasl_buildin_synscan.c\nnasl_buildin_openvas_tcp_scanner.c\nhmacmd5.*\nexec.h\ncharset.c\ncharcnv.c\ncapture_packet.*\nbyteorder.h\narc4.c\ntests/keys/ownertrust.txt\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 25.5693359375,
          "content": "# Changelog\n\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/).\n\n## [22.4] (unreleased)\n\n### Added\n- Add support for volatile keys. [#682](https://github.com/greenbone/openvas/pull/682)\n- Extend nasl lint to check Syntax for Arguments for script_xref() function. [#714](https://github.com/greenbone/openvas/pull/714)\n- Recheck alive status of host with specified amount of NVT timeouts. [#729](https://github.com/greenbone/openvas/pull/729)\n- Integrate sentry for debugging purposes [#742](https://github.com/greenbone/openvas/pull/742)\n- Add support for non-interactive shell to nasl_ssh_shell_open().\n  [#744](https://github.com/greenbone/openvas/pull/744)\n  [#757](https://github.com/greenbone/openvas/pull/757)\n- Add message type validation for proto_post_wrapped. [#805](https://github.com/greenbone/openvas/pull/805)\n- Add nasl function sftp_enabled_check() to check if sftp subsystem is enabled in the target.\n  - [#853](https://github.com/greenbone/openvas/pull/853)\n  - [#862](https://github.com/greenbone/openvas/pull/862)\n- Add `find_all` to eregmatch() nasl function. Backport PR #875. [#876](https://github.com/greenbone/openvas/pull/876)\n- Add nasl functions for checking ssl/tls secure renegotiation and performing re-handshake. [#889](https://github.com/greenbone/openvas/pull/889)\n- Fix Segmentation fault when freeing hosts and alive hosts [#888](https://github.com/greenbone/openvas/pull/888)\n\n### Changed\n- function script_bugtraq_id getting skipped, linter warns. [#724](https://github.com/greenbone/openvas/pull/724)\n- Refactor dead host status sending. [#807](https://github.com/greenbone/openvas/pull/807)\n- Refactor openvas.c.\n  [#810](https://github.com/greenbone/openvas/pull/810)\n  [#811](https://github.com/greenbone/openvas/pull/811)\n- Handle script timeout as script preference with ID 0 [#844](https://github.com/greenbone/gvm-libs/pull/844)\n\n### Fixed\n- Use fchmod to change file permission instead of on open to prevent race conditions [854](https://github.com/greenbone/openvas-scanner/pull/854)\n- Several minor potential security risks in different files, spotted by Code QL [854](https://github.com/greenbone/openvas-scanner/pull/854)\n- Fix plugins upload. Backport #878 [#880](https://github.com/greenbone/openvas/pull/880)\n- Fix Error Message when NVTI chache init failed. Backport #885 [#887](https://github.com/greenbone/openvas/pull/887)\n- Fix Segmentation fault when freeing hosts and alive hosts [#888](https://github.com/greenbone/openvas/pull/888)\n\n### Removed\n- Remove handling of source_iface related preferences. [#730](https://github.com/greenbone/openvas/pull/730)\n\n[22.4]: https://github.com/greenbone/openvas-scanner/compare/stable...main\n\n## [21.4.3] (unreleased)\n### Added\n- Add nasl function sftp_enabled_check() to check if sftp subsystem is enabled in the target.\n  - [#853](https://github.com/greenbone/openvas/pull/853)\n  - [#862](https://github.com/greenbone/openvas/pull/862)\n\n### Changed\n- Changed defaults for installation locations [#826](https://github.com/greenbone/openvas-scanner/pull/826)\n  - SYSCONFDIR is /etc by default now\n  - LOCALSTATEDIR is /var by default now\n  - OPENVAS_RUN_DIR is /run/ospd by default now\n  - OPENVAS_FEED_LOCK_PATH is /var/lib/openvas/feed-update.lock by default now\n\n### Deprecated\n### Removed\n### Fixed\n- Fix interrupted scan, when the process table is full. [#832](https://github.com/greenbone/openvas-scanner/pull/832)\n- Use fchmod to change file permission instead of on open to prevent race conditions [854](https://github.com/greenbone/openvas-scanner/pull/854)\n- Fix plugins upload [#878](https://github.com/greenbone/openvas/pull/878)\n- Fix Error Message when NVTI chache init failed [#885](https://github.com/greenbone/openvas/pull/885)\n- Fix potential segfault.[#884](https://github.com/greenbone/openvas/pull/884)\n\n[21.4.3]: https://github.com/greenbone/openvas-scanner/compare/v21.4.2...stable\n\n## [21.4.2] - 2021-08-03\n### Fixed\n- Fix clang-analyzer warnings.\n  [#791](https://github.com/greenbone/openvas/pull/791)\n  [#795](https://github.com/greenbone/openvas/pull/795)\n\n[21.4.2]: https://github.com/greenbone/openvas-scanner/compare/v21.4.1...v21.4.2\n\n## [21.4.1] - 2021-06-23\n\n### Added\n- Improve nasl linter to catch more cases of undeclared variables. [#728](https://github.com/greenbone/openvas-scanner/pull/728)\n- Add deprecation warning for source_iface related settings which will be removed with the 22.4 release. [#732](https://github.com/greenbone/openvas-scanner/pull/732)\n- New Credentials for SSH to get su privileges. Backport of [#744](https://github.com/greenbone/openvas-scanner/pull/744). [#753](https://github.com/greenbone/openvas-scanner/pull/753)\n\n### Changed\n- Update default log config [#711](https://github.com/greenbone/openvas-scanner/pull/711)\n\n### Fixed\n- Use host from the original hosts list when boreas is enabled. [#725](https://github.com/greenbone/openvas/pull/725)\n- Initialize the the kb to store results for openvas-nasl [#735](https://github.com/greenbone/openvas/pull/735)\n- Fix unittest. Mock kb_lnk_reset. [#748](https://github.com/greenbone/openvas/pull/748)\n\n### Removed\n\n[21.4.1]: https://github.com/greenbone/openvas/compare/v21.4.1...stable\n\n## [21.4.0] - 2021-04-15\n\n### Added\n- Add scanner-only option to enable tls debugging. [#558](https://github.com/greenbone/openvas/pull/558)\n- Extend nasl lint to detect if function parameter is used twice. [#585](https://github.com/greenbone/openvas/pull/585)\n- Add option to specify if a host can be scanned through its IPv4 and IPv6 in parallel.\n  [#604](https://github.com/greenbone/openvas/pull/604)\n  [#645](https://github.com/greenbone/openvas/pull/645)\n- Add insert_tcp_options and insert_tcp_v6_options nasl functions. [#618](https://github.com/greenbone/openvas/pull/618)\n- Add get_tcp_option and extend dump_tcp_packet nasl functions. [#621](https://github.com/greenbone/openvas/pull/621)\n- Add new scanner only option for spawning NASL functions with a different owner. [#634](https://github.com/greenbone/openvas/pull/634)\n- Add debug logs for allow_simultaneous_ips=no. [#685](https://github.com/greenbone/openvas/pull/685)\n- Add min_free_mem and max_sysload scanner only options. [#690](https://github.com/greenbone/openvas/pull/690)\n\n### Changed\n- Store results in main_kb instead of host_kb. [#550](https://github.com/greenbone/openvas/pull/550)\n- Also use internal function name in some nasl log messages. [#611](https://github.com/greenbone/openvas/pull/611)\n- Move more scanner preferences to gvm-libs to make them available for openvas-nasl. [#614](https://github.com/greenbone/openvas/pull/614)\n\n### Removed\n- Use the nvticache name from gvm-libs, defined in nvticache.h. [#578](https://github.com/greenbone/openvas/pull/578)\n\n[21.4.0]: https://github.com/greenbone/openvas/compare/oldstable...v21.4.0\n\n## [20.8.4] (unreleased)\n### Added\n### Changed\n- Changed defaults for installation locations [#826](https://github.com/greenbone/openvas-scanner/pull/826)\n  - SYSCONFDIR is /etc by default now\n  - LOCALSTATEDIR is /var by default now\n  - OPENVAS_RUN_DIR is /run/ospd by default now\n  - OPENVAS_FEED_LOCK_PATH is /var/lib/openvas/feed-update.lock by default now\n\n### Deprecated\n### Removed\n### Fixed\n\n[20.8.4]: https://github.com/greenbone/openvas-scanner/compare/v20.8.3...oldstable\n\n## [20.8.3] - 2021-08-03\n### Fixed\n\n- Fix clang-analyzer warnings.\n  [#791](https://github.com/greenbone/openvas/pull/791)\n  [#795](https://github.com/greenbone/openvas/pull/795)\n\n[20.8.3]: https://github.com/greenbone/openvas/compare/v20.8.2...v20.8.3\n\n## [20.8.2] - 2021-06-23\n\n### Added\n- Check for wrong names or values in the script_xrefs params.\n  [#650](https://github.com/greenbone/openvas/pull/650)\n  [#653](https://github.com/greenbone/openvas/pull/653)\n- Log a message if the scanner did not launch all plugins against a host.\n  [#700](https://github.com/greenbone/openvas/pull/700)\n  [#734](https://github.com/greenbone/openvas/pull/734)\n\n### Changed\n- Replace bogus data with a better message and the vendor. [#665](https://github.com/greenbone/openvas/pull/665)\n- Improve log message for WMI connect failed or missing WMI support. [#670](https://github.com/greenbone/openvas/pull/670)\n- Don't use g_error. Use g_warning instead and let the scanner to continue. [#710](https://github.com/greenbone/openvas/pull/710)\n- Update COPYING file. [#750](https://github.com/greenbone/openvas/pull/750)\n- Set file permissions when syncing community feed [#769](https://github.com/greenbone/openvas-scanner/pull/769)\n\n### Fixed\n- Fix issues discovered with clang compiler. [#654](https://github.com/greenbone/openvas/pull/654)\n- Fix gcc-9 and gcc-10 warnings. [#655](https://github.com/greenbone/openvas/pull/655)\n- Fix double free in nasl_cert_query. [#658](https://github.com/greenbone/openvas/pull/658)\n- Fix message to the client if there is a iface problem. [#695](https://github.com/greenbone/openvas/pull/695)\n- Fix SIGSEGV when no best route is found. [#702](https://github.com/greenbone/openvas/pull/702)\n- Fix host count when reverse_lookup_only is enabled. [#715](https://github.com/greenbone/openvas/pull/715)\n- Use host from the original hosts list when boreas is enabled. Backport of [PR #727](https://github.com/greenbone/openvas/pull/727). [#725](https://github.com/greenbone/openvas/pull/725)\n- The function description of nasl_ssh_shell_read() has been fixed. [#755](https://github.com/greenbone/openvas/pull/755)\n\n### Removed\n- Remove code from the openvas daemon era. Do not flushall redis. [#689](https://github.com/greenbone/openvas/pull/689)\n- Remove deprecated option logfile. [#713](https://github.com/greenbone/openvas/pull/713)\n\n[20.8.2]: https://github.com/greenbone/openvas/compare/v20.8.1...v20.8.2\n\n## [20.8.1] - 2021-02-01\n\n### Added\n- Extend nasl lint to detect if function parameter is used twice. [#590](https://github.com/greenbone/openvas/pull/590)\n- Add support for TLSv1.3. [#588](https://github.com/greenbone/openvas/pull/588)[#598](https://github.com/greenbone/openvas/pull/598)\n- Add alternative for supporting snmp during scans. [#594](https://github.com/greenbone/openvas/pull/594)\n- Add resolve_hostname_to_multiple_ips() NASL function. [#596](https://github.com/greenbone/openvas/pull/596)\n- Add dump_icmp_packet() and dump_icmp_v6_packet() nasl functions. [#609](https://github.com/greenbone/openvas/pull/609)\n- Send message to the client with hosts count. [#606](https://github.com/greenbone/openvas/pull/606)\n- Use nasl_perror on invalid input and add more documentation. [#608](https://github.com/greenbone/openvas/pull/608)\n- Add timeout argument to ssh_connect() nasl function to set the connection timeout. [631](https://github.com/greenbone/openvas/pull/631)\n\n### Changed\n- Downgrade wmi queries log level for common errors.\n  [#602](https://github.com/greenbone/openvas/pull/602)\n  [#607](https://github.com/greenbone/openvas/pull/607)\n- Rename some nasl functions and func parameters for consistency and fix byte order issue in get_ipv6_element. [#613](https://github.com/greenbone/openvas/pull/613)\n- Change log level from debug to message to show max_host and max_scan during scan start. [#626](https://github.com/greenbone/openvas/pull/626)\n- Changed the redis-openvas.conf, so that it is compliant with the 5.0+ version(s) of redis. [#668](https://github.com/greenbone/openvas/pull/668)\n\n### Fixed\n- Fork vhosts before creating the socket.[#576](https://github.com/greenbone/openvas/pull/576)\n- Check if another forked child has already added the same vhost. [#581](https://github.com/greenbone/openvas/pull/581)\n- Send duplicated hosts as dead hosts to ospd, to adjust scan progress calculation. [#586](https://github.com/greenbone/openvas/pull/586)\n- Only send the signal if the pid is a positive value. [#593](https://github.com/greenbone/openvas/pull/593)\n- When routes with same mask are found the route with the better metric is chosen.\n  [#593](https://github.com/greenbone/openvas/pull/593)\n  [#639](https://github.com/greenbone/openvas/pull/639)\n- Fix malformed target. [#625](https://github.com/greenbone/openvas/pull/625)\n- Fix snmp result. Only return the value and do not stop at the first \\n. [#627](https://github.com/greenbone/openvas/pull/627)\n- Fix masking of IPv6 addresses. [#635](https://github.com/greenbone/openvas/pull/635)\n- Fix technique switch for getting the appropriate interface to use for IPv6 dst addr. [#636](https://github.com/greenbone/openvas/pull/636)\n- Fix host count. Set to -1 when the target string is invalid. [#646](https://github.com/greenbone/openvas/pull/646)\n\n[20.08.1]: https://github.com/greenbone/openvas/compare/v20.8.0...v20.8.1\n\n## [20.8.0] - 2020-08-11\n\n### Added\n- Create greenbone-nvt-sync create lock file during feed sync.\n  [#458](https://github.com/greenbone/openvas/pull/458)\n  [#459](https://github.com/greenbone/openvas/pull/459)\n- Extend script_get_preference() to get the value by id. [#470](https://github.com/greenbone/openvas/pull/470)\n- Add extended environmental variables info to greenbone-nvt-sync help text. [#488](https://github.com/greenbone/openvas/pull/488)\n- Extend nasl functions which generate results with optional \"uri\" parameter [#526](https://github.com/greenbone/openvas/pull/526)\n- Add nasl function to get the host kb index. [#530](https://github.com/greenbone/openvas/pull/530)\n- Print the filter used by pcap in the error message.\n  [#537](https://github.com/greenbone/openvas/pull/537)\n  [#540](https://github.com/greenbone/openvas/pull/540)\n\n### Changed\n- The logging of the NASL internal regexp functions was extended to include the pattern in case of a failed regcomp(). [#397](https://github.com/greenbone/openvas/pull/397)\n- Add config for gpg keyring path (OPENVAS_GPG_BASE_DIR) [#407](https://github.com/greenbone/openvas/pull/407)\n- Use __func__ instead of __FUNCTION__ [#419](https://github.com/greenbone/openvas/pull/419)\n- Use pcap_findalldevs() instead of deprecated function pcap_lookupdev() [#422](https://github.com/greenbone/openvas/pull/422) [#430](https://github.com/greenbone/openvas/pull/430)\n- Add port-range option for openvas-nasl [#431](https://github.com/greenbone/openvas/pull/431)\n- Add test_alive_hosts_only feature. [#456](https://github.com/greenbone/openvas/pull/456)\n- Don't reload the plugins when start a new scan. [#458](https://github.com/greenbone/openvas/pull/458)\n- Drop http feed sync. [#478](https://github.com/greenbone/openvas/pull/478)\n- Add aligned summary to log at scan end. [#496](https://github.com/greenbone/openvas/pull/496)\n- Unify log messages about start/end of scan and of hosts. [#500](https://github.com/greenbone/openvas/pull/500)\n- Use flock to lock the feed lock file. [#507](https://github.com/greenbone/openvas/pull/507)\n- Move alive detection module (Boreas) into gvm-libs [#519](https://github.com/greenbone/openvas/pull/519)\n- Allow to set all legal types of icmp v6 in icmp header in openvas-nasl. [#542](https://github.com/greenbone/openvas/pull/542)\n- The output of the NASL dump_* packet forgery functions was made consistent. [#555](https://github.com/greenbone/openvas/pull/555)\n- Make drop_privileges setting a scanner-only preference. [#557](https://github.com/greenbone/openvas/pull/557)\n- Feed lock path is now configurable. [#574](https://github.com/greenbone/openvas/pull/574)\n\n### Fixed\n- Improve signal handling when update vhosts list. [#425](https://github.com/greenbone/openvas/pull/425)\n- Wait for all children instead of waiting just for one a time. [#428](https://github.com/greenbone/openvas/pull/428)\n- Don't detect MongoDB as a HTTP service. [#447](https://github.com/greenbone/openvas/pull/447)\n- Set status finished and send a message if the port list is invalid. [#453](https://github.com/greenbone/openvas/pull/453)\n- Fix format-truncation warning in GCC 8.2 and later. [#461](https://github.com/greenbone/openvas/pull/461)\n- Clean the new kb when the scan was stopped and the host has not been started. [#494](https://github.com/greenbone/openvas/pull/494)\n- Prevent child deadlock. [#491](https://github.com/greenbone/openvas/pull/491)\n- Memleak fixes for kb_item_get_str(). [#502](https://github.com/greenbone/openvas/pull/502)\n- Fix denied hosts.  [#510](https://github.com/greenbone/openvas/pull/510)\n- Fix openvas-nasl. Add kb key/value for all vhosts. [#533](https://github.com/greenbone/openvas/pull/533)\n- Wait for last plugin to finish before change to other category. [#534](https://github.com/greenbone/openvas/pull/534)\n- Corrected function parameter names in nasl_perror calls. [#539](https://github.com/greenbone/openvas/pull/539)\n- Various updates to the nasl_perror() error texts. [#539](https://github.com/greenbone/openvas/pull/542)\n- Fix icmp checksum calculation in openvas-nasl. [#543](https://github.com/greenbone/openvas/pull/543)\n- Fix ipv6 flow label in nasl_packet_forgery_v6() for openvas-nasl. [#545](https://github.com/greenbone/openvas/pull/545)\n- Fix name of NASL internal IPPROTO_IP variable. [#552](https://github.com/greenbone/openvas/pull/552)\n- Fix byte ordering and wrong PROTO identifier in dump_ipv6_packet() for openvas-nasl. [#549](https://github.com/greenbone/openvas/pull/549)\n- Fix size calculation which lead to alloc error in get_tcp_element() of openvas-nasl. [#546](https://github.com/greenbone/openvas/pull/546)\n- Fix filter out of default 'radio' type preferences [#560](https://github.com/greenbone/openvas/pull/560)\n- Allow group access to lockfile and fix empty timestamp [#562](https://github.com/greenbone/openvas/pull/562)\n- Do not simply abort when log file is not writable but print err msg and shutdown gracefully instead. [#661](https://github.com/greenbone/openvas/pull/661)\n\n### Removed\n- Removed \"network scan\" mode. This includes removal of NASL API methods \"scan_phase()\" and \"network_targets()\". Sending a \"network_mode=yes\" in a scanner configuration will have no effect anymore. [#493](https://github.com/greenbone/openvas/pull/493)\n\n[20.8.1]: https://github.com/greenbone/openvas/compare/openvas-7.0...v20.8.1\n\n## [7.0.1]\n\n### Added\n- Display gvm-libs version in `openvas --version` output [#436](https://github.com/greenbone/openvas/pull/436)\n\n### Changed\n- Improve handling of invalid or existent ids of nvt's preference id. [#416](https://github.com/greenbone/openvas/pull/416)\n- Perform a scan even if there are missing plugins. [#439](https://github.com/greenbone/openvas/pull/439)\n\n### Fixed\n- Do not store in memory an empty file received as nvt preference. [#409](https://github.com/greenbone/openvas/pull/409)\n- Fix stop scan. [#414](https://github.com/greenbone/openvas/pull/414)\n- Fix hanging scans. [#423](https://github.com/greenbone/openvas/pull/423)\n- Improve signal handling when update vhosts list. [#426](https://github.com/greenbone/openvas/pull/426)\n- Wait for all children instead of waiting just for one a time. [#429](https://github.com/greenbone/openvas/pull/429)\n- Release redis connection. [[#452](https://github.com/greenbone/openvas/pull/452)\n\n[7.0.1]: https://github.com/greenbone/openvas/compare/v7.0.0...openvas-7.0\n\n## [7.0.0] (2019-10-11)\n\n### Added\n- An ID has been added to NVT preferences. [#282](https://github.com/greenbone/openvas/pull/282)\n- A new NVT cross references data handling has been added. [#317](https://github.com/greenbone/openvas/pull/317)\n- Add option --scan-stop. [#352](https://github.com/greenbone/openvas/pull/352)\n- Add support to open an rc4 stream cipher, the function to encrypt stream data using the cipher handle,\n  and the function to close a handler. [#354](https://github.com/greenbone/openvas/pull/354)\n- Add one single config for redis to config/redis-openvas.conf. [#370](https://github.com/greenbone/openvas/pull/370)\n\n### Changed\n- Vendor version is now an option in the config file. [#363](https://github.com/greenbone/openvas/pull/363)\n- The NVT preference format has been changed. [#275](https://github.com/greenbone/openvas/pull/275)\n- Redis supported versions must be 3.2 or higher. [#287](https://github.com/greenbone/openvas/pull/287)\n- Log directory is now configurable. [#316](https://github.com/greenbone/openvas/pull/316)\n- The greenbone-nvt-sync script is not allowed to run as root. [#323](https://github.com/greenbone/openvas/pull/323)\n- OpenVAS Scanner has been renamed to OpenVAS (Open Vulnerability Assessment Scanner). [#337](https://github.com/greenbone/openvas/pull/337) [#343](https://github.com/greenbone/openvas/pull/343)\n- Retry until a host finishes and frees a db before running a new host scan, in case there is no free redis db. Therefore a infinite loop has been added when it call kb_new(). [#340](https://github.com/greenbone/openvas/pull/340)\n- Use new nvti_add_tag() instead of plug_set_tag() and remove plug_set_tag(). [#385](https://github.com/greenbone/openvas/pull/385)\n- Remove dead code about tags regarding former openvas settings \"result_prepend_tags\" and \"result_append_tags\". [#386](https://github.com/greenbone/openvas/pull/386)\n- Check cache/feed errors during plugin scheduling. [#358](https://github.com/greenbone/openvas/pull/358)\n- Vendor version is now an option in the config file. [#363](https://github.com/greenbone/openvas/pull/363)\n- Use API for accessing NVTI elements. [#365](https://github.com/greenbone/openvas/pull/365)\n- Allow send_packet() and send_v6packet() to send packets to broadcast/multicast.[#388](https://github.com/greenbone/openvas/pull/388)\n\n\n### Fixed\n- An issue with stuck scans where only a single plugin is running and is beyond its timeout has been addressed. [#289](https://github.com/greenbone/openvas/pull/289)\n- Fix a type mismatch. Use correct format specifier for size_t. [#299](https://github.com/greenbone/openvas/pull/299)\n- An issue which caused falling back into a default port in get_ssh_port() has been fixed. [#342](https://github.com/greenbone/openvas/pull/342)\n- An issue which could have caused a truncated string in register_service() has been fixed. [#373](https://github.com/greenbone/openvas/pull/373)\n- Reset redis connection after the host scan finished. This avoids to leave open fd, which cause ulimit problems. [#384](https://github.com/greenbone/openvas/pull/384)\n- Fix mis-identification of Sphinx Search service. [#387](https://github.com/greenbone/openvas/pull/387)\n- Set a key in redis when the scan finishes and fix stop scan using the right pid. [#390](https://github.com/greenbone/openvas/pull/390)\n- Fix detection of finger service. [#391](https://github.com/greenbone/openvas/pull/391)\n- Wait for zombie process in case of timed out nvts. [#379](https://github.com/greenbone/openvas/pull/379)\n- Fix handling of file type nvt preferences. [#399](https://github.com/greenbone/openvas/pull/399)\n\n### Removed\n- Unused be_nice scan preferences has been removed. [#313](https://github.com/greenbone/openvas/pull/313)\n- OTP has been entirely removed in favor of using the ospd-openvas interface. [#333](https://github.com/greenbone/openvas/pull/333) [#351](https://github.com/greenbone/openvas/pull/351)\n  [#337](https://github.com/greenbone/openvas/pull/337) [#389](https://github.com/greenbone/openvas/pull/389)\n- Daemon mode has been entirely removed. [#337](https://github.com/greenbone/openvas/pull/337) [#341](https://github.com/greenbone/openvas/pull/341)\n\n[7.0.0]: https://github.com/greenbone/openvas/compare/v6.0.1...v7.0.0\n\n## [6.0.2] (unreleased)\n\n### Changed\n- The call to wmiexec.py has been replaced with impacket-wmiexec, because the symlink has been added in Debian Stretch with python-impacket 0.9.15-1.\n\n[6.0.2]: https://github.com/greenbone/openvas/compare/v6.0.1...openvas-scanner-6.0\n\n## [6.0.1] (2019-07-17)\n\n### Added\n\n### Changed\n- Use lowercase for values added from add_host_name(). [#306](https://github.com/greenbone/openvas/pull/306)\n- Do not launch the scan if the nvticache is corrupted. [#309](https://github.com/greenbone/openvas/pull/310)\n- Separate each scan plugin process into its own process group. [#325](https://github.com/greenbone/openvas/pull/325)\n\n### Fixed\n- An issue which caused the scanner to crash when a plugin is missing during a scan has been addressed. [#296](https://github.com/greenbone/openvas/pull/296)\n- An issue which causes a scan to hang has been addressed. [#301](https://github.com/greenbone/openvas/pull/301)\n- Issues in building process have been addressed. [#308](https://github.com/greenbone/openvas/pull/308)\n- An issue which caused resuming task not to work was addressed. [#312](https://github.com/greenbone/openvas/pull/312)\n- An issue which caused a possible null IP values in OTP results / HOST_END has been addressed. [#321](https://github.com/greenbone/openvas/pull/321)\n- An issue which caused the scanner to finish instantly without any result has been addressed. [#330](https://github.com/greenbone/openvas/pull/330)\n\n### Removed\n- Currently unused advanced_log related code has been removed. [#327](https://github.com/greenbone/openvas/pull/327)\n\n[6.0.1]: https://github.com/greenbone/openvas/compare/v6.0.0...openvas-scanner-6.0\n\n## [6.0.0] (2019-04-05)\n\n### Added\n- Function to get the currently running script filename has been added.\n\n### Changed\n- Debugging nasl mechanism has been improved, replacing preprocessor directives\n  with g_debug facility.\n- Code related to redis queries was improved.\n- OpenVAS reload has been improved.\n- Documentation has been improved.\n\n### Fixed\n- An issue related to the log facility and greenbone-nvt-sync has been fixed.\n- An issue which caused nasl-lint to fail in case of unneeded nested functions has been addressed.\n- An issue which caused returning erroneous values by get_plugin_preference() has been addressed.\n- An issue which cause stuck scans where only a single plugin is running and is beyond its timeout has been addressed.\n- Issues reported by static code analysis have been addressed.\n- Issues in building process have been addressed.\n- Several code improvements and clean-ups have been done.\n\n### Removed\n- Unused internal_send/recv() functions have been removed.\n\n[6.0.0]: https://github.com/greenbone/openvas/compare/v6.0+beta2...v6.0.0\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 7.25390625,
          "content": "# SPDX-FileCopyrightText: 2023 Greenbone AG\n#\n# SPDX-License-Identifier: GPL-2.0-or-later\n\ncmake_minimum_required (VERSION 3.0)\n\nmessage (\"-- Configuring the Scanner...\")\n\n# VERSION: Always include major, minor and patch level.\nproject (openvas\n  VERSION 23.14.0\n  LANGUAGES C)\n\nif (POLICY CMP0005)\n  cmake_policy (SET CMP0005 NEW)\nendif (POLICY CMP0005)\n\nSET(CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake)\n\nif (NOT CMAKE_BUILD_TYPE)\n  set (CMAKE_BUILD_TYPE Debug)\nendif (NOT CMAKE_BUILD_TYPE)\n\nOPTION (ENABLE_COVERAGE \"Enable support for coverage analysis\" OFF)\n\n## Retrieve git revision (at configure time)\ninclude (GetGit)\n\nif (NOT CMAKE_BUILD_TYPE MATCHES \"Release\")\n  if (EXISTS \"${CMAKE_SOURCE_DIR}/.git/\")\n    if (GIT_FOUND)\n      Git_GET_REVISION(${CMAKE_SOURCE_DIR} ProjectRevision)\n      set (GIT_REVISION \"~git-${ProjectRevision}\")\n    endif (GIT_FOUND)\n  endif (EXISTS \"${CMAKE_SOURCE_DIR}/.git/\")\nendif (NOT CMAKE_BUILD_TYPE MATCHES \"Release\")\n\n## make format\nmessage (STATUS \"Looking for clang-format...\")\nfind_program (CLANG_FORMAT clang-format)\nif (CLANG_FORMAT)\n  message (STATUS \"Looking for clang-format... ${CLANG_FORMAT}\")\n  add_custom_target(format COMMAND ${CLANG_FORMAT} \"-i\" \"./src/*.c\" \"./misc/*.c\"\n                    \"./nasl/*.c\" \"./src/*.h\" \"./misc/*.h\" \"./nasl/*.h\"\n                    WORKING_DIRECTORY \"${CMAKE_SOURCE_DIR}\")\nelse (CLANG_FORMAT)\n  message (STATUS \"clang-format not found...\")\nendif (CLANG_FORMAT)\n\n# Set dev version if this is a development version and not a full release,\n# unset (put value 0 or delete line) before a full release and reset after.\nset (PROJECT_DEV_VERSION 0)\n\n# If PROJECT_DEV_VERSION is set, the version string will be set to:\n#   \"major.minor.patch~dev${PROJECT_DEV_VERSION}${GIT_REVISION}\"\n# If PROJECT_DEV_VERSION is NOT set, the version string will be set to:\n#   \"major.minor.patch${GIT_REVISION}\"\n# For CMAKE_BUILD_TYPE \"Release\" the git revision will be empty.\nif (PROJECT_DEV_VERSION)\n  set (PROJECT_VERSION_SUFFIX \"~dev${PROJECT_DEV_VERSION}\")\nendif (PROJECT_DEV_VERSION)\n\nset (PROJECT_VERSION_STRING \"${PROJECT_VERSION_MAJOR}.${PROJECT_VERSION_MINOR}.${PROJECT_VERSION_PATCH}${PROJECT_VERSION_SUFFIX}${GIT_REVISION}\")\n\n## CPack configuration\n\nset (CPACK_CMAKE_GENERATOR \"Unix Makefiles\")\nset (CPACK_GENERATOR \"TGZ\")\nset (CPACK_INSTALL_CMAKE_PROJECTS \".;openvas;ALL;/\")\nset (CPACK_MODULE_PATH \"\")\nset (CPACK_RESOURCE_FILE_LICENSE \"${CMAKE_SOURCE_DIR}/COPYING\")\nset (CPACK_RESOURCE_FILE_README \"${CMAKE_SOURCE_DIR}/README.md\")\nset (CPACK_RESOURCE_FILE_WELCOME \"${CMAKE_SOURCE_DIR}/README.md\")\nset (CPACK_SOURCE_GENERATOR \"TGZ\")\nset (CPACK_SOURCE_TOPLEVEL_TAG \"\")\nset (CPACK_SYSTEM_NAME \"\")\nset (CPACK_TOPLEVEL_TAG \"\")\n\nset (CPACK_PACKAGE_VERSION \"${PROJECT_VERSION_STRING}${PROJECT_VERSION_GIT}\")\n\nset (CPACK_PACKAGE_FILE_NAME \"${PROJECT_NAME}-${CPACK_PACKAGE_VERSION}\")\nset (CPACK_SOURCE_PACKAGE_FILE_NAME \"${PROJECT_NAME}-${CPACK_PACKAGE_VERSION}\")\nset (CPACK_PACKAGE_VENDOR \"The OpenVAS Project\")\nset (CPACK_SOURCE_IGNORE_FILES\n\"${CMAKE_BINARY_DIR}\"\n\"/.git/\"\n\"swp$\"\n\"nasl/nasl_grammar.tab.c\"\n\"nasl/nasl_grammar.tab.h\"\n\"nasl/nasl_grammar.output\"\n)\n\ninclude (CPack)\n\n## Variables\n\nif (SYSCONF_INSTALL_DIR)\n  set (SYSCONFDIR \"${SYSCONF_INSTALL_DIR}\")\nendif (SYSCONF_INSTALL_DIR)\n\nif (NOT SYSCONFDIR)\n  set (SYSCONFDIR \"/etc\")\nendif (NOT SYSCONFDIR)\n\nif (NOT EXEC_PREFIX)\n  set (EXEC_PREFIX \"${CMAKE_INSTALL_PREFIX}\")\nendif (NOT EXEC_PREFIX)\n\nif (NOT BINDIR)\n  set (BINDIR \"${EXEC_PREFIX}/bin\")\nendif (NOT BINDIR)\n\nif (NOT SBINDIR)\n  set (SBINDIR \"${EXEC_PREFIX}/sbin\")\nendif (NOT SBINDIR)\n\nif (NOT LIBDIR)\n  set (_DEFAULT_LIBRARY_INSTALL_DIR lib)\n  if (EXISTS \"${EXEC_PREFIX}/lib32/\" AND CMAKE_SIZEOF_VOID_P EQUAL 4)\n    set (_DEFAULT_LIBRARY_INSTALL_DIR lib32)\n  endif (EXISTS \"${EXEC_PREFIX}/lib32/\" AND CMAKE_SIZEOF_VOID_P EQUAL 4)\n  if (EXISTS \"${CMAKE_INSTALL_PREFIX}/lib64/\" AND CMAKE_SIZEOF_VOID_P EQUAL 8)\n    set (_DEFAULT_LIBRARY_INSTALL_DIR lib64)\n  endif (EXISTS \"${CMAKE_INSTALL_PREFIX}/lib64/\" AND CMAKE_SIZEOF_VOID_P EQUAL 8)\n  set( LIBRARY_INSTALL_DIR \"${_DEFAULT_LIBRARY_INSTALL_DIR}\")\n  set (LIBDIR \"${EXEC_PREFIX}/${LIBRARY_INSTALL_DIR}\")\n  message (\"Set LIBDIR to ${LIBDIR}\")\nendif (NOT LIBDIR)\n\nif (NOT LOCALSTATEDIR)\n  set (LOCALSTATEDIR \"/var\")\nendif (NOT LOCALSTATEDIR)\n\nif (NOT DATADIR)\n  set (DATADIR \"${CMAKE_INSTALL_PREFIX}/share\")\nendif (NOT DATADIR)\n\nif (NOT OPENVAS_RUN_DIR)\n  set (OPENVAS_RUN_DIR \"/run/ospd\")\nendif (NOT OPENVAS_RUN_DIR)\n\nif (NOT DEFINED BUILD_WITH_NETSNMP)\n  set (BUILD_WITH_NETSNMP TRUE)\nendif (NOT DEFINED BUILD_WITH_NETSNMP)\n\nset (OPENVAS_DATA_DIR    \"${DATADIR}/openvas\")\nset (OPENVAS_STATE_DIR   \"${LOCALSTATEDIR}/lib/openvas\")\n\nif (NOT OPENVAS_FEED_LOCK_PATH)\n  set (OPENVAS_FEED_LOCK_PATH \"${OPENVAS_STATE_DIR}/feed-update.lock\")\nendif (NOT OPENVAS_FEED_LOCK_PATH)\nadd_definitions (-DOPENVAS_FEED_LOCK_PATH=\"${OPENVAS_FEED_LOCK_PATH}\")\n\nif (NOT GVM_LOG_DIR)\n\tset (GVM_LOG_DIR         \"${LOCALSTATEDIR}/log/gvm\")\nendif (NOT GVM_LOG_DIR)\nset (OPENVAS_SYSCONF_DIR \"${SYSCONFDIR}/openvas\")\nset (GVM_SYSCONF_DIR     \"${SYSCONFDIR}/gvm\")\n\nif (NOT OPENVAS_NVT_DIR)\n  set (OPENVAS_NVT_DIR     \"${OPENVAS_STATE_DIR}/plugins\")\nendif (NOT OPENVAS_NVT_DIR)\n\nif (NOT GVM_ACCESS_KEY_DIR)\n\tset (GVM_ACCESS_KEY_DIR \"${GVM_SYSCONF_DIR}\")\nendif (NOT GVM_ACCESS_KEY_DIR)\n\nif (NOT OPENVAS_GPG_BASE_DIR)\n\tset (OPENVAS_GPG_BASE_DIR \"${OPENVAS_SYSCONF_DIR}\")\nendif (NOT OPENVAS_GPG_BASE_DIR)\n\nset (OPENVAS_LIB_INSTALL_DIR     \"${LIBDIR}\")\n\nset (OPENVAS_CONF     \"${OPENVAS_SYSCONF_DIR}/openvas.conf\")\n\nset (NVT_TIMEOUT \"320\")\nset (SCANNER_NVT_TIMEOUT \"36000\")\n\nmessage (\"-- Install prefix: ${CMAKE_INSTALL_PREFIX}\")\n\n## Version\n\nset (OPENVAS_VERSION \"${PROJECT_VERSION_STRING}\")\n\n# Configure Doxyfile with version number\nconfigure_file (doc/man/openvas.8.in doc/man/openvas.8 @ONLY)\nconfigure_file (VERSION.in VERSION @ONLY)\nconfigure_file (src/openvas_log_conf.cmake_in src/openvas_log.conf)\n\n\n## Testing\n\nenable_testing ()\n\nadd_custom_target (tests\n                   DEPENDS attack-test pcap-test ipc-openvas-test lsc-test)\n\n## Program\n\nif (ENABLE_COVERAGE)\n  set (COVERAGE_FLAGS \"--coverage\")\nendif (ENABLE_COVERAGE)\n\nset (HARDENING_FLAGS            \"-Wformat -Wformat-security -D_FORTIFY_SOURCE=2 -fstack-protector\")\nset (LINKER_HARDENING_FLAGS     \"-Wl,-z,relro -Wl,-z,now\")\n# The \"-D_FILE_OFFSET_BITS=64 -DLARGEFILE_SOURCE=1\" is necessary for GPGME!\nset (GPGME_C_FLAGS              \"-D_FILE_OFFSET_BITS=64 -DLARGEFILE_SOURCE=1\")\n\nset (CMAKE_C_FLAGS_RELEASE      \"${CMAKE_C_FLAGS_RELEASE} ${HARDENING_FLAGS}\")\nset (CMAKE_C_FLAGS_DEBUG        \"${CMAKE_C_FLAGS_DEBUG} ${COVERAGE_FLAGS}\")\nset (CMAKE_C_FLAGS              \"${CMAKE_C_FLAGS} ${GPGME_C_FLAGS} \\\n                                -std=c11 \\\n                                -Wall \\\n                                -Wextra \\\n                                -Werror \\\n                                -Wpedantic \\\n                                -Wmissing-prototypes \\\n                                -Wshadow \\\n                                -Wsequence-point \\\n                                -D_BSD_SOURCE \\\n                                -D_ISOC11_SOURCE \\\n                                -D_SVID_SOURCE \\\n                                -D_DEFAULT_SOURCE\")\n\nif (NOT SKIP_SRC)\n  add_subdirectory (misc)\n  add_subdirectory (nasl)\n  add_subdirectory (src)\nendif (NOT SKIP_SRC)\n\n## Documentation\n\nadd_subdirectory (doc)\n\n\n## Tests\n\nenable_testing ()\n\n## End\n"
        },
        {
          "name": "COPYING",
          "type": "blob",
          "size": 17.580078125,
          "content": "\t\t    GNU GENERAL PUBLIC LICENSE\n\t\t       Version 2, June 1991\n\n Copyright (C) 1989, 1991 Free Software Foundation, Inc.\n     51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n\t\t\t    Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicense is intended to guarantee your freedom to share and change free\nsoftware--to make sure the software is free for all its users.  This\nGeneral Public License applies to most of the Free Software\nFoundation's software and to any other program whose authors commit to\nusing it.  (Some other Free Software Foundation software is covered by\nthe GNU Library General Public License instead.)  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n  To protect your rights, we need to make restrictions that forbid\nanyone to deny you these rights or to ask you to surrender the rights.\nThese restrictions translate to certain responsibilities for you if you\ndistribute copies of the software, or if you modify it.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must give the recipients all the rights that\nyou have.  You must make sure that they, too, receive or can get the\nsource code.  And you must show them these terms so they know their\nrights.\n\n  We protect your rights with two steps: (1) copyright the software, and\n(2) offer you this license which gives you legal permission to copy,\ndistribute and/or modify the software.\n\n  Also, for each author's protection and ours, we want to make certain\nthat everyone understands that there is no warranty for this free\nsoftware.  If the software is modified by someone else and passed on, we\nwant its recipients to know that what they have is not the original, so\nthat any problems introduced by others will not reflect on the original\nauthors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\f\n\t\t    GNU GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License applies to any program or other work which contains\na notice placed by the copyright holder saying it may be distributed\nunder the terms of this General Public License.  The \"Program\", below,\nrefers to any such program or work, and a \"work based on the Program\"\nmeans either the Program or any derivative work under copyright law:\nthat is to say, a work containing the Program or a portion of it,\neither verbatim or with modifications and/or translated into another\nlanguage.  (Hereinafter, translation is included without limitation in\nthe term \"modification\".)  Each licensee is addressed as \"you\".\n\nActivities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning the Program is not restricted, and the output from the Program\nis covered only if its contents constitute a work based on the\nProgram (independent of having been made by running the Program).\nWhether that is true depends on what the Program does.\n\n  1. You may copy and distribute verbatim copies of the Program's\nsource code as you receive it, in any medium, provided that you\nconspicuously and appropriately publish on each copy an appropriate\ncopyright notice and disclaimer of warranty; keep intact all the\nnotices that refer to this License and to the absence of any warranty;\nand give any other recipients of the Program a copy of this License\nalong with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) You must cause the modified files to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n    when run, you must cause it, when started running for such\n    interactive use in the most ordinary way, to print or display an\n    announcement including an appropriate copyright notice and a\n    notice that there is no warranty (or else, saying that you provide\n    a warranty) and that users may redistribute the program under\n    these conditions, and telling the user how to view a copy of this\n    License.  (Exception: if the Program itself is interactive but\n    does not normally print such an announcement, your work based on\n    the Program is not required to print an announcement.)\n\f\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Program,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Program, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote it.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\nwith the Program (or with a work based on the Program) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may copy and distribute the Program (or a work based on it,\nunder Section 2) in object code or executable form under the terms of\nSections 1 and 2 above provided that you also do one of the following:\n\n    a) Accompany it with the complete corresponding machine-readable\n    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n    distributed under the terms of Sections 1 and 2 above on a medium\n    customarily used for software interchange; or,\n\n    c) Accompany it with the information you received as to the offer\n    to distribute corresponding source code.  (This alternative is\n    allowed only for noncommercial distribution and only if you\n    received the program in object code or executable form with such\n    an offer, in accord with Subsection b above.)\n\nThe source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\noperating system on which the executable runs, unless that component\nitself accompanies the executable.\n\nIf distribution of executable or object code is made by offering\naccess to copy from a designated place, then offering equivalent\naccess to copy the source code from the same place counts as\ndistribution of the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\f\n  4. You may not copy, modify, sublicense, or distribute the Program\nexcept as expressly provided under this License.  Any attempt\notherwise to copy, modify, sublicense or distribute the Program is\nvoid, and will automatically terminate your rights under this License.\nHowever, parties who have received copies, or rights, from you under\nthis License will not have their licenses terminated so long as such\nparties remain in full compliance.\n\n  5. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Program or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Program (or any work based on the\nProgram), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties to\nthis License.\n\n  7. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Program.\n\nIf any portion of this section is held invalid or unenforceable under\nany particular circumstance, the balance of the section is intended to\napply and the section as a whole is intended to apply in other\ncircumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system, which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\f\n  8. If the distribution and/or use of the Program is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Program under this License\nmay add an explicit geographical distribution limitation excluding\nthose countries, so that distribution is permitted only in or among\ncountries not thus excluded.  In such case, this License incorporates\nthe limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Program\nspecifies a version number of this License which applies to it and \"any\nlater version\", you have the option of following the terms and conditions\neither of that version or of any later version published by the Free\nSoftware Foundation.  If the Program does not specify a version number of\nthis License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\nmake exceptions for this.  Our decision will be guided by the two goals\nof preserving the free status of all derivatives of our free software and\nof promoting the sharing and reuse of software generally.\n\n\t\t\t    NO WARRANTY\n\n  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\nFOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN\nOTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\nPROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED\nOR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS\nTO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE\nPROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,\nREPAIR OR CORRECTION.\n\n  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR\nREDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\nINCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING\nOUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED\nTO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY\nYOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER\nPROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGES.\n\n\t\t     END OF TERMS AND CONDITIONS\n\f\n\t    How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software; you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation; either version 2 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n\n\nAlso add information on how to contact you by electronic and paper mail.\n\nIf the program is interactive, make it output a short notice like this\nwhen it starts in an interactive mode:\n\n    Gnomovision version 69, Copyright (C) year  name of author\n    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, the commands you use may\nbe called something other than `show w' and `show c'; they could even be\nmouse-clicks or menu items--whatever suits your program.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the program, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  <signature of Ty Coon>, 1 April 1989\n  Ty Coon, President of Vice\n\nThis General Public License does not permit incorporating your program into\nproprietary programs.  If your program is a subroutine library, you may\nconsider it more useful to permit linking proprietary applications with the\nlibrary.  If this is what you want to do, use the GNU Library General\nPublic License instead of this License.\n"
        },
        {
          "name": "INSTALL.md",
          "type": "blob",
          "size": 9.9072265625,
          "content": "INSTALLATION INSTRUCTIONS FOR OPENVAS\n=====================================\n\nPlease note: The reference system used by most of the developers is Debian\nStable. The build might fail on any other system. Also, it is\nnecessary to install dependent development packages.\n\nPrerequisites for openvas\n-------------------------\n\nPrerequisites:\n* a C compiler (e.g. gcc)\n* cmake >= 3.0\n* libgvm_base, libgvm_util >= 22.4\n* glib-2.0 >= 2.42\n* gio-2.0\n* json-glib-1.0 >= 1.4.4\n* bison\n* flex\n* libgcrypt >= 1.6\n* pkg-config\n* libpcap\n* libgpgme >= 1.1.2\n* redis >= 5.0.3\n* libssh >= 0.6.0\n* libksba >= 1.0.7\n* libgnutls >= 3.6.4\n* libcurl4-gnutls-dev\n* libbsd\n* libkrb5-dev\n\nPrerequisites for building documentation:\n* Doxygen\n* pandoc (optional, for building manual and man pages for NASL built-in functions)\n\nPrerequisites for building tests:\n* Cgreen (optional, for building tests)\n\nRecommended to have WMI support:\n* openvas-smb >= 1.0.1\n\nRecommended for extended Windows support (e.g. automatically start the remote registry service):\n* impacket-wmiexec of python-impacket >= 0.9.15 found within your PATH\n\nRecommended to have improved SNMP support:\n* netsnmp libraries or alternatively the snmpget binary.\n* snmp client\n\nRecommended for port scanning and service detection based on nmap.\n* nmap\n\nRecommended for port scanning based on pnscan.\n* pnscan\n\nInstall prerequisites on Debian GNU/Linux 'Bullseye' 11:\n\n    apt-get install gcc pkg-config libssh-gcrypt-dev libgnutls28-dev \\\n    libglib2.0-dev libjson-glib-dev libpcap-dev libgpgme-dev bison libksba-dev \\\n    libsnmp-dev libgcrypt20-dev redis-server libbsd-dev libcurl4-gnutls-dev \\\n    libkrb5-dev\n \n\n\nCompiling openvas\n-----------------\n\nIf you have installed required libraries to a non-standard location, remember to\nset the `PKG_CONFIG_PATH` environment variable to the location of you pkg-config\nfiles before configuring:\n\n    export PKG_CONFIG_PATH=/your/location/lib/pkgconfig:$PKG_CONFIG_PATH\n\nCreate a build directory and change into it with:\n\n    mkdir build\n    cd build\n\nThen configure the build with:\n\n    cmake -DCMAKE_INSTALL_PREFIX=/path/to/your/installation ..\n\nOr (if you want to use the default installation path /usr/local):\n\n    cmake ..\n\nThis only needs to be done once.\n\nOther cmake variables need to be adjusted as well if you want to have all files in CMAKE_INSTALL_PREFIX or in the default installation path `/usr/local`. They can be added to the `cmake` call with `-D<var_name>=<install_prefix><default_value>`.\n\n| Variable               | Default                             |\n| ---------------------- | :---------------------------------- |\n| SYSCONFDIR             | `/etc`                              |\n| LOCALSTATEDIR          | `/var`                              |\n| OPENVAS_FEED_LOCK_PATH | `/var/lib/openvas/feed-update.lock` |\n| OPENVAS_RUN_DIR        | `/run/ospd`                         |\n\nThereafter, the following commands are useful:\n\n    make                # build the scanner\n    make doxygen        # build the documentation\n    make doxygen-full   # build more developer-oriented documentation\n    make doxygen-xml    # build the documentation (XML)\n    make manual         # build a HTML manual\n    make nasl-man       # build man pages for NASL built-in functions\n    make tests          # build tests\n    make install        # install the build\n    make rebuild_cache  # rebuild the cmake cache\n\nPlease note that you may have to execute `make install` as root, especially if\nyou have specified a prefix for which your user does not have full permissions.\n\nTo clean up the build environment, simply remove the contents of the `build`\ndirectory you created above.\n\n\nConfiguration Options\n---------------------\n\nDuring compilation, the build process uses a set of compiler options which\nenable very strict error checking and asks the compiler to abort should it detect\nany errors in the code. This is to ensure a maximum of code quality and\nsecurity.\n\nSome (especially newer) compilers can be stricter than others when it comes\nto error checking. While this is a good thing and the developers aim to address\nall compiler warnings, it may lead the build process to abort on your system.\n\nShould you notice error messages causing your build process to abort, do not\nhesitate to contact the developers by creating a\n[new issue report](https://github.com/greenbone/openvas/issues/new).\nDon't forget to include the name and version of your compiler and distribution in your\nmessage.\n\n\nSetting up openvas\n------------------\n\nSetting up an openvas requires the following steps:\n\n1. (optional) You may decide to change the default scanner preferences\n   by setting them in the file `/etc/openvas/openvas.conf` or `<SYSCONFDIR>/openvas/openvas.conf`\n   when `SYSCONFDIR` was set via the `cmake` call. If that file does\n   not exist (default), then the default settings are used. You can view\n   them with `openvas -s`. The output of that command is a valid configuration\n   file. The man page (`man openvas`) provides details about the available\n   settings, among these opportunities to restrict access of scanner regarding\n   scan targets and interfaces.\n\n2. In order to run vulnerability scans, you will need a collection of Network\n   Vulnerability Tests (NVTs) that can be run by openvas. Initially,\n   your NVT collection will be empty. It is recommended that you synchronize\n   with an NVT feed service before starting openvas for the first time.\n\n   Use [greenbone-feed-sync](https://github.com/greenbone/greenbone-feed-sync/)\n   to synchronize the feed. It can be used to synchronize with the community feed,\n   as well as with the enterprise feed. Look into it for more information.\n\n   NVT feeds are updated on a regular basis. Be sure to update your NVT collection\n   regularly to detect the latest threats.\n\n3. The scanner needs a running Redis server to temporarily store information\n   gathered on the scanned hosts. Redis 3.2 and newer are supported.\n   See `doc/redis_config.txt` to see how to set up and run a Redis server.\n\n   The easiest and most reliable way to start redis under Ubuntu and Debian is\n   to use systemd.\n\n   ```bash\n   sudo cp config/redis-openvas.conf /etc/redis/\n   sudo chown redis:redis /etc/redis/redis-openvas.conf\n   sudo echo \"db_address = /run/redis-openvas/redis.sock\" > /etc/openvas/openvas.conf # Or append to <SYSCONFDIR>/openvas/openvas.conf when SYSCONFDIR was set via the cmake call.\n   sudo systemctl start redis-server@openvas.service\n   ```\n\n4. The Greenbone Vulnerability Management service (`gvmd`) acts as OSP client\n   to connect to and control scanners. openvas does not act as a OSP service -\n   you need the `OSPD-OpenVAS` module for this. The actual user interfaces (for\n   example GSA or GVM-Tools) will only interact with `gvmd` and/or\n   `ospd-openvas`, not the scanner. You can launch openvas to upload the\n   plugins in redis using the following command:\n\n       openvas -u\n\n   but `ospd-openvas` will do the update automatically.\n\n5. Please note that although you can run `openvas` as a user without elevated\n   privileges, it is recommended that you start `openvas` as `root` since a\n   number of Network Vulnerability Tests (NVTs) require root privileges to\n   perform certain operations like packet forgery. If you run `openvas` as\n   a user without permission to perform these operations, your scan results\n   are likely to be incomplete.\n\n   As `openvas` will be launched from an `ospd-openvas` process with sudo,\n   the next configuration is required in the sudoers file:\n\n       sudo visudo\n\n   add this line to allow the user running `ospd-openvas`, to launch `openvas`\n   with root permissions\n\n       <user> ALL = NOPASSWD: <install prefix>/sbin/openvas\n\n   If you set an install prefix, you have to update the path in the sudoers\n   file too:\n\n       Defaults        secure_path=<existing paths...>:<install prefix>/sbin\n\n\nLogging Configuration\n---------------------\n\nIf you encounter problems, by default the scanner writes logs to the file\n\n    /var/log/gvm/openvas.log\n\nWhen `LOCALSTATEDIR` was set via the `cmake` call the scanner writes logs to the file\n\n    <LOCALSTATEDIR>/log/gvm/openvas.log\n\nIt may contain useful information.The exact location of this file may differ\ndepending on your distribution and installation method. Please have this file\nready when contacting the GVM developers via the Greenbone Community Portal\nor submitting bug reports at <https://github.com/greenbone/openvas/issues> as\nthey may help to pinpoint the source of your issue.\n\nLogging is configured via the file at default location\n\n    /etc/openvas/openvas_log.conf\n\nWhen `SYSCONFDIR` was set via the `cmake` call the file is located at\n\n    <SYSCONFDIR>/openvas/openvas_log.conf\n\nThe configuration is divided into domains like this one\n\n    [sd   main]\n    prepend=%t %p\n    prepend_time_format=%Y-%m-%d %Hh%M.%S %Z\n    file=/var/log/gvm/openvas.log\n    level=128\n\nThe `level` field controls the amount of logging that is written.\nThe value of `level` can be\n\n      4  Errors.\n      8  Critical situation.\n     16  Warnings.\n     32  Messages.\n     64  Information.\n    128  Debug.  (Lots of output.)\n\nEnabling any level includes all the levels above it. So enabling Information\nwill include Warnings, Critical situations and Errors.\n\nTo get absolutely all logging, set the level to 128 for all domains in the\nconfiguration file.\n\nLogging to `syslog` can be enabled in each domain like:\n\n    [sd   main]\n    prepend=%t %p\n    prepend_time_format=%Y-%m-%d %Hh%M.%S %Z\n    file=syslog\n    syslog_facility=daemon\n    level=128\n\nStatic code analysis with the Clang Static Analyzer\n---------------------------------------------------\n\nIf you want to use the Clang Static Analyzer (https://clang-analyzer.llvm.org/)\nto do a static code analysis, you can do so by prefixing the configuration and\nbuild commands with `scan-build`:\n\n    scan-build cmake ..\n    scan-build make\n\nThe tool will provide a hint on how to launch a web browser with the results.\n\nIt is recommended to do this analysis in a separate, empty build directory and\nto empty the build directory before `scan-build` call.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.5771484375,
          "content": "![Greenbone Logo](https://www.greenbone.net/wp-content/uploads/gb_new-logo_horizontal_rgb_small.png)\n\n# OpenVAS Scanner\n\n[![GitHub releases](https://img.shields.io/github/release/greenbone/openvas-scanner.svg)](https://github.com/greenbone/openvas-scanner/releases)\n[![Docker Pulls](https://img.shields.io/docker/pulls/greenbone/openvas-scanner.svg)](https://hub.docker.com/r/greenbone/openvas-scanner/)\n[![Docker Image Size](https://img.shields.io/docker/image-size/greenbone/openvas-scanner.svg?maxAge=2592000)](https://hub.docker.com/r/greenbone/openvas-scanner/)\n[![CI](https://github.com/greenbone/openvas-scanner/actions/workflows/control.yml/badge.svg?branch=main)](https://github.com/greenbone/openvas-scanner/actions/workflows/control.yml?query=branch%3Amain)\n\nThis is the OpenVAS Scanner of the Greenbone Community Edition.\n\nIt is used for the Greenbone Enterprise appliances and is a full-featured\nscan engine that executes a continuously updated and extended feed of\nVulnerability Tests (VTs).\n\n## Releases\n\nAll [release files](https://github.com/greenbone/openvas/releases) are signed with\nthe [Greenbone Community Feed integrity key](https://community.greenbone.net/t/gcf-managing-the-digital-signatures/101).\nThis gpg key can be downloaded at https://www.greenbone.net/GBCommunitySigningKey.asc\nand the fingerprint is `8AE4 BE42 9B60 A59B 311C  2E73 9823 FAA6 0ED1 E580`.\n\n## Installation\n\nThis module can be configured, built and installed with following commands:\n\n    cmake .\n    make install\n\nFor detailed installation requirements and instructions, please see the file\n[INSTALL.md](INSTALL.md). The file also contains instructions for setting up\n`openvas` and for making the scanner available to other GVM modules.\n\nIf you are not familiar or comfortable building from source code, we recommend\nthat you use the Greenbone Enterprise TRIAL, a prepared virtual\nmachine with a readily available setup. Information regarding the virtual machine\nis available at <https://www.greenbone.net/en/testnow>.\n\n## Rust Implementation\n\nThis repository also consists of a [rust project](rust/README.md) aiming to replace the current scanner stack\n(openvas-scanner, ospd-openvas, notus-scanner). It simplifies the use of the scanner and centralizes\neverything needed for scanning. Currently it uses the openvas-scanner as scan engine.\n\n## Docker, [Greenbone Community Containers](https://greenbone.github.io/docs/latest/22.4/container/)\n\nIf you want to use the docker files provided in this repository you can pull them \nfrom [here](https://hub.docker.com/r/greenbone/openvas-scanner). You can also locally \nbuild them using:\n```\ndocker build -t <image-name> -f .docker/prod.Dockerfile .\n```\nFor more information about building docker images, see \n[official man](https://docs.docker.com/engine/reference/commandline/build/).\nWe also provide a [fully containerized \nsolution](https://greenbone.github.io/docs/latest/22.4/container/)\nfor the Greenbone Community Edition.\n\n> Please beware: The Greenbone Community Container are currently under development.\n\n## Support\n\nFor any question on the usage of `openvas` please use the [Greenbone\nCommunity Portal](https://community.greenbone.net/). If you found a problem\nwith the software, please [create an\nissue](https://github.com/greenbone/openvas-scanner/issues) on GitHub. If you\nare a Greenbone customer you may alternatively or additionally forward your\nissue to the Greenbone Support Portal.\n\n## Maintainer\n\nThis project is maintained by [Greenbone AG](https://www.greenbone.net/).\n\n## Contributing\n\nYour contributions are highly appreciated. Please [create a pull\nrequest](https://github.com/greenbone/openvas-scanner/pulls) on GitHub.\nRemember to commit the contribution agreement as explained in [RELICENSING](https://github.com/greenbone/openvas-scanner/tree/main/RELICENSE) folder with your first PR.\nBigger changes should be discussed with the development team via the [issues section at GitHub](https://github.com/greenbone/openvas-scanner/issues) first.\n\n## License\n\nThis repository consists of two scanner implementation, one in programming language C and one in programming language Rust.\n\nThis module except for the Rust-implementation in directory rust/ is licensed under the GNU General Public License v2.0 only. Single files, however, are licensed either under the GNU General Public License v2.0 only or under GNU General Public License v2.0 or later, please see the [license-details.md](license-details.md) file for details.\n\nThe Rust-implementation in directory rust/ is licensed under the GNU General Public License v2.0 or later with OpenSSL exception. Single files, however, are additionally licensed under MIT.\n\n"
        },
        {
          "name": "RELICENSE",
          "type": "tree",
          "content": null
        },
        {
          "name": "VERSION.in",
          "type": "blob",
          "size": 0.0224609375,
          "content": "@CPACK_PACKAGE_VERSION@"
        },
        {
          "name": "changelog.toml",
          "type": "blob",
          "size": 0.224609375,
          "content": "commit_types = [\n    { message = \"^add\", group = \"Added\"},\n    { message = \"^remove\", group = \"Removed\"},\n    { message = \"^change\", group = \"Changed\"},\n    { message = \"^fix\", group = \"Bug Fixes\"},\n]\n\nchangelog_dir = \"changelog\"\n"
        },
        {
          "name": "charts",
          "type": "tree",
          "content": null
        },
        {
          "name": "check_license_headers.bash",
          "type": "blob",
          "size": 1.0029296875,
          "content": "#!/usr/bin/env bash\n\nfunction comment_string () {\n    ext=$1\n    if [[ $ext == \"c\" || $ext == \"h\" || $ext == \"rs\" ]]; then\n        echo \"//\"\n    elif [[ $ext == \"nasl\" || $ext == \"cmake\" ]]; then\n        echo \"#\"\n    fi\n}\n\nany_missing_headers=0\n\nexts=\"c h nasl cmake\"\n\nfor ext in $exts; do\n    find . -not -path \"./rust/target/*\" -not -path \"./rust/crates/nasl-c-lib/tmp/*\" -regex \".*\\.\\($ext\\)\" -print0 | while read -d $'\\0' f; do\n        header=$(head -n 3 \"$f\")\n        if ! [[ \"$header\" =~ SPDX ]]; then\n            echo \"File does not contain license header: $f\"\n            any_missing_headers=1\n\n            if [[ \"$1\" == add_header ]]; then\n                tmpfile=$(mktemp)\n                cp \"$f\" \"$tmpfile\"\n                comment=$(comment_string $ext)\n                echo -e \"$comment SPDX-FileCopyrightText: 2025 Greenbone AG\\n$comment\\n$comment SPDX-License-Identifier: GPL-2.0-or-later WITH x11vnc-openssl-exception\\n\" | cat - $tmpfile > \"$f\"\n            fi\n        fi\n    done\ndone\n\nexit $any_missing_headers\n"
        },
        {
          "name": "cmake",
          "type": "tree",
          "content": null
        },
        {
          "name": "config",
          "type": "tree",
          "content": null
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "license-details.md",
          "type": "blob",
          "size": 4.7880859375,
          "content": "# License information about openvas-scanner\n\nThe effective license of the modules as a whole\nis the GNU General Public License Version 2 (GNU GPL-2).\n\nSingle files, however, are licensed either\nunder GNU General Public License Version 2 (GNU GPL-2)\nor under \"GNU GPLv2 or any later version\" (GNU GPL-2+).\n\nGPL-2: See file [COPYING](COPYING)\n\nThe following list was created using the 'licensecheck'\ntool with the following command:\n\n```\nlicensecheck -r --deb-fmt <directory>\n```\n\nsrc/CMakeLists.txt: GPL-2+\nsrc/attack.c: GPL-2\nsrc/attack.h: GPL-2\nsrc/attack_tests.c: GPL-2+\nsrc/debug_utils.c: GPL-2+\nsrc/debug_utils.h: GPL-2+\nsrc/hosts.c: GPL-2\nsrc/hosts.h: GPL-2\nsrc/main.c: GPL-2+\nsrc/nasl_plugins.c: GPL-2\nsrc/openvas.c: GPL-2\nsrc/openvas.h: GPL-2+\nsrc/pluginlaunch.c: GPL-2\nsrc/pluginlaunch.h: GPL-2\nsrc/pluginload.c: GPL-2\nsrc/pluginload.h: GPL-2\nsrc/pluginscheduler.c: GPL-2\nsrc/pluginscheduler.h: GPL-2\nsrc/plugs_req.c: GPL-2\nsrc/plugs_req.h: GPL-2\nsrc/processes.c: GPL-2\nsrc/processes.h: GPL-2\nsrc/sighand.c: GPL-2\nsrc/sighand.h: GPL-2\nsrc/utils.c: GPL-2\nsrc/utils.h: GPL-2\n\nnasl/CMakeLists.txt: GPL-2+\nnasl/arc4.c: GPL-2+\nnasl/byteorder.h: GPL-2+\nnasl/capture_packet.c: GPL-2\nnasl/capture_packet.h: GPL-2\nnasl/charcnv.c: GPL-2+\nnasl/charset.h: GPL-2+\nnasl/exec.c: GPL-2\nnasl/exec.h: GPL-2\nnasl/genrand.c: GPL-2+\nnasl/hmacmd5.c: GPL-2+\nnasl/hmacmd5.h: GPL-2+\nnasl/iconv.c: GPL-2+\nnasl/iconv.h: GPL-2+\nnasl/lint.c: GPL-2\nnasl/lint.h: GPL-2\nnasl/md4.c: GPL-2+\nnasl/md4.h: GPL-2+\nnasl/md5.c: public-domain\nnasl/md5.h: public-domain\nnasl/nasl-lint.c: GPL-2+\nnasl/nasl.c: GPL-2\nnasl/nasl.h: GPL-2\nnasl/nasl_builtin_find_service.c: GPL-2\nnasl/nasl_builtin_openvas_tcp_scanner.c: GPL-2\nnasl/nasl_builtin_plugins.h: GPL-2+\nnasl/nasl_builtin_synscan.c: GPL-2\nnasl/nasl_cert.c: GPL-2+\nnasl/nasl_cert.h: GPL-2+\nnasl/nasl_cmd_exec.c: GPL-2\nnasl/nasl_cmd_exec.h: GPL-2\nnasl/nasl_crypt_helper.c: GPL-2\nnasl/nasl_crypto_helper.h: GPL-2\nnasl/nasl_crypto.c: GPL-2\nnasl/nasl_crypto.h: GPL-2\nnasl/nasl_crypto2.c: GPL-2\nnasl/nasl_crypto2.h: GPL-2\nnasl/nasl_debug.c: GPL-2\nnasl/nasl_debug.h: GPL-2\nnasl/nasl_frame_forgery.c: GPL-2+\nnasl/nasl_frame_forgery.h: GPL-2+\nnasl/nasl_func.c: GPL-2\nnasl/nasl_func.h: GPL-2\nnasl/nasl_global_ctxt.h: GPL-2\nnasl/nasl_grammar.y: GPL-2\nnasl/nasl_host.c: GPL-2\nnasl/nasl_host.h: GPL-2\nnasl/nasl_http.c: GPL-2\nnasl/nasl_http.h: GPL-2\nnasl/nasl_init.c: GPL-2\nnasl/nasl_init.h: GPL-2\nnasl/nasl_isotime.c: GPL-2+\nnasl/nasl_isotime.h: GPL-2+\nnasl/nasl_lex_ctxt.c: GPL-2\nnasl/nasl_lex_ctxt.h: GPL-2\nnasl/nasl_misc_funcs.c: GPL-2\nnasl/nasl_misc_funcs.h: GPL-2\nnasl/nasl_packet_forgery.c: GPL-2\nnasl/nasl_packet_forgery.h: GPL-2\nnasl/nasl_packet_forgery_v6.c: GPL-2\nnasl/nasl_packet_forgery_v6.h: GPL-2\nnasl/nasl_raw.h: GPL-2\nnasl/nasl_scanner_glue.c: GPL-2\nnasl/nasl_scanner_glue.h: GPL-2\nnasl/nasl_signature.c: GPL-2+\nnasl/nasl_signature.h: GPL-2+\nnasl/nasl_smb.c: GPL-2+\nnasl/nasl_smb.h: GPL-2+\nnasl/nasl_snmp.c: GPL-2+\nnasl/nasl_snmp.h: GPL-2+\nnasl/nasl_socket.c: GPL-2\nnasl/nasl_socket.h: GPL-2\nnasl/nasl_ssh.c: GPL-2+\nnasl/nasl_ssh.h: GPL-2+\nnasl/nasl_text_utils.c: GPL-2\nnasl/nasl_text_utils.h: GPL-2\nnasl/nasl_tree.c: GPL-2\nnasl/nasl_tree.h: GPL-2\nnasl/nasl_var.c: GPL-2\nnasl/nasl_var.h: GPL-2\nnasl/nasl_wmi.c: GPL-2+\nnasl/nasl_wmi.h: GPL-2+\nnasl/ntlmssp.c: GPL-2+\nnasl/ntlmssp.h: GPL-2+\nnasl/openvas_smb_interface.h: GPL-2+\nnasl/openvas_wmi_interface.h: GPL-2+\nnasl/proto.h: GPL-2+\nnasl/smb.h: GPL-2+\nnasl/smb_crypt.c: GPL-2+\nnasl/smb_crypt.h: GPL-2+\nnasl/smb_crypt2.c: GPL-2+\nnasl/smb_interface_stub.c: GPL-2+\nnasl/smb_signing.c: GPL-2+\nnasl/smb_signing.h: GPL-2+\nnasl/time.c: GPL-2+\nnasl/wmi_interface_stub.c: GPL-2+\n\nnasl/tests/Makefile: GPL-2+\nnasl/tests/signed.nasl: GPL-2+\nnasl/tests/test_blowfish.nasl: GPL-2+\nnasl/tests/test_bn.nasl: GPL-2+\nnasl/tests/test_crypt_data_aes.nasl: GPL-2+\nnasl/tests/test_dh.nasl: GPL-2+\nnasl/tests/test_dsa.nasl: GPL-2+\nnasl/tests/test_hexstr.nasl: GPL-2+\nnasl/tests/test_isotime.nasl: GPL-2+\nnasl/tests/test_md.nasl: GPL-2+\nnasl/tests/test_privkey.nasl: GPL-2+\nnasl/tests/test_rsa.nasl: GPL-2+\nnasl/tests/test_socket.nasl: GPL-2+\nnasl/tests/testsuiteinit.nasl: GPL-2+\nnasl/tests/testsuitesummary.nasl: GPL-2+\n\nmisc/CMakeLists.txt: GPL-2+\nmisc/bpf_share.c: GPL-2\nmisc/bpf_share.h: GPL-2+\nmisc/ftp_funcs.c: GPL-2+\nmisc/ftp_funcs.h: GPL-2+\nmisc/ipc.c: GPL-2+\nmisc/ipc.h: GPL-2+\nmisc/ipc_openvas.c: GPL-2+\nmisc/ipc_openvas.h: GPL-2+\nmisc/ipc_pipe.c: GPL-2+\nmisc/ipc_pipe.h: GPL-2+\nmisc/network.c: GPL-2+\nmisc/network.h: GPL-2+\nmisc/nvt_categories.h: GPL-2+\nmisc/pcap.c: GPL-2+\nmisc/pcap_openvas.h: GPL-2+\nmisc/pcap_tests.c: GPL-2+\nmisc/plugutils.c: GPL-2+\nmisc/plugutils.h: GPL-2+\nmisc/scan_id.c: GPL-2+\nmisc/scan_id.h: GPL-2+\nmisc/scanneraux.h: GPL-2+\nmisc/strutils.c: GPL-2+\nmisc/strutils.h: GPL-2+\nmisc/support.h: GPL-2+\nmisc/table_driven_lsc.c: GPL-2+\nmisc/table_driven_lsc.h: GPL-2+\nmisc/vendorversion.c: GPL-2+\nmisc/vendorversion.h: GPL-2+\n"
        },
        {
          "name": "misc",
          "type": "tree",
          "content": null
        },
        {
          "name": "nasl",
          "type": "tree",
          "content": null
        },
        {
          "name": "release_tag.toml",
          "type": "blob",
          "size": 0.736328125,
          "content": "# disables labeling when this label is on a PR\ndisable_on = \"no_release\"\n\n# The priority is used when only_highest_priority is set to true\nlabels = [\n  { name = \"patch_release\", priority = 1 },\n  { name = \"minor_release\", priority = 2 },\n  { name = \"major_release\", priority = 3 },\n]\n\n# group within groups must be defined in `changelog.toml`\n# label within groups must be defined in `labels`\ngroups = [\n  { group = \"Added\", label = \"minor_release\" },\n  { group = \"Changed\", label = \"major_release\" },\n  { group = \"Removed\", label = \"major_release\" },\n  { group = \"Bug Fixes\", label = \"patch_release\" },\n]\n\n# when set to false all unique labels will be set\n# otherwise only one label with the highest priority\n# will be set\nonly_highest_priority = true\n\n"
        },
        {
          "name": "rust",
          "type": "tree",
          "content": null
        },
        {
          "name": "smoketest_lint",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}