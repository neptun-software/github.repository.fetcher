{
  "metadata": {
    "timestamp": 1736709079851,
    "page": 214,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "icedland/iced",
      "stars": 3005,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 4.2509765625,
          "content": "root = true\n\n[*]\ncharset = utf-8\n#end_of_line =\nindent_size = 4\nindent_style = tab\ntab_width = 4\n\n[*.json]\n\n[app.config]\n\n[*.yml]\nindent_size = 2\nindent_style = space\n\n[*.{proj,csproj,vbproj,props,targets,resx,vsixmanifest}]\nindent_size = 2\nindent_style = space\n\n[app.manifest]\nindent_size = 2\nindent_style = space\n\n[*.xml]\n\n[*.xaml]\nindent_style = space\n\n[*.{cs,vb}]\ninsert_final_newline = true\n\ndotnet_separate_import_directive_groups = false\ndotnet_sort_system_directives_first = true\ndotnet_style_coalesce_expression = true:suggestion\ndotnet_style_collection_initializer = true:suggestion\ndotnet_style_explicit_tuple_names = true:suggestion\ndotnet_style_null_propagation = true:suggestion\ndotnet_style_object_initializer = true:suggestion\ndotnet_style_predefined_type_for_locals_parameters_members = true:none\ndotnet_style_predefined_type_for_member_access = true:none\ndotnet_style_prefer_auto_properties = true:suggestion\ndotnet_style_prefer_inferred_anonymous_type_member_names = true:suggestion\ndotnet_style_prefer_inferred_tuple_names = true:suggestion\ndotnet_style_prefer_is_null_check_over_reference_equality_method = false:suggestion\ndotnet_style_qualification_for_event = false:suggestion\ndotnet_style_qualification_for_field = false:suggestion\ndotnet_style_qualification_for_method = false:suggestion\ndotnet_style_qualification_for_property = false:suggestion\ndotnet_style_require_accessibility_modifiers = never:info\n\n[*.cs]\ncsharp_indent_block_contents = true\ncsharp_indent_braces = false\ncsharp_indent_case_contents = true\ncsharp_indent_case_contents_when_block = false\ncsharp_indent_labels = flush_left\ncsharp_indent_switch_labels = false\ncsharp_new_line_before_catch = true\ncsharp_new_line_before_else = true\ncsharp_new_line_before_finally = true\ncsharp_new_line_before_members_in_anonymous_types = true\ncsharp_new_line_before_members_in_object_initializers = true\ncsharp_new_line_before_open_brace = none\ncsharp_new_line_between_query_expression_clauses = true\ncsharp_prefer_braces = false\ncsharp_prefer_simple_default_expression = true:suggestion\n#csharp_preferred_modifier_order =\ncsharp_preserve_single_line_blocks = true\ncsharp_preserve_single_line_statements = true\ncsharp_space_after_cast = false\ncsharp_space_after_colon_in_inheritance_clause = true\ncsharp_space_after_comma = true\ncsharp_space_after_dot = false\ncsharp_space_after_keywords_in_control_flow_statements = true\ncsharp_space_after_semicolon_in_for_statement = true\ncsharp_space_around_binary_operators = before_and_after\ncsharp_space_around_declaration_statements = false\ncsharp_space_before_colon_in_inheritance_clause = true\ncsharp_space_before_comma = false\ncsharp_space_before_dot = false\ncsharp_space_before_open_square_brackets = false\ncsharp_space_before_semicolon_in_for_statement = false\ncsharp_space_between_empty_square_brackets = false\ncsharp_space_between_method_call_empty_parameter_list_parentheses = false\ncsharp_space_between_method_call_name_and_opening_parenthesis = false\ncsharp_space_between_method_call_parameter_list_parentheses = false\ncsharp_space_between_method_declaration_empty_parameter_list_parentheses = false\ncsharp_space_between_method_declaration_name_and_open_parenthesis = false\ncsharp_space_between_method_declaration_parameter_list_parentheses = false\ncsharp_space_between_parentheses =\ncsharp_space_between_square_brackets = false\ncsharp_style_conditional_delegate_call = true:suggestion\ncsharp_style_deconstructed_variable_declaration = false:none\ncsharp_style_expression_bodied_accessors = true:suggestion\ncsharp_style_expression_bodied_constructors = true:suggestion\ncsharp_style_expression_bodied_indexers = true:suggestion\ncsharp_style_expression_bodied_methods = true:suggestion\ncsharp_style_expression_bodied_operators = true:suggestion\ncsharp_style_expression_bodied_properties = true:suggestion\ncsharp_style_inlined_variable_declaration = true:suggestion\ncsharp_style_pattern_local_over_anonymous_function = true:suggestion\ncsharp_style_pattern_matching_over_as_with_null_check = true:suggestion\ncsharp_style_pattern_matching_over_is_with_cast_check = true:suggestion\ncsharp_style_throw_expression = true:suggestion\ncsharp_style_var_elsewhere = true:suggestion\ncsharp_style_var_for_built_in_types = false:none\ncsharp_style_var_when_type_is_apparent = true:suggestion\n\n[*.vb]\n#visual_basic_preferred_modifier_order =\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0322265625,
          "content": ".vscode/\ncoverage.info\n/cov-out/\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 1.087890625,
          "content": "https://github.com/icedland/iced\nCopyright (C) 2018-present iced project and contributors\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.4873046875,
          "content": "# iced [![crates.io](https://img.shields.io/crates/v/iced-x86.svg)](https://crates.io/crates/iced-x86) [![NuGet](https://img.shields.io/nuget/v/iced.svg)](https://www.nuget.org/packages/iced/) [![maven](https://img.shields.io/maven-central/v/io.github.icedland.iced/iced-x86)](https://central.sonatype.com/artifact/io.github.icedland.iced/iced-x86/1.21.0) [![pypi](https://img.shields.io/pypi/v/iced-x86.svg)](https://pypi.org/project/iced-x86/) [![GitHub builds](https://github.com/icedland/iced/workflows/GitHub%20CI/badge.svg)](https://github.com/icedland/iced/actions) [![codecov](https://codecov.io/gh/icedland/iced/branch/master/graph/badge.svg)](https://codecov.io/gh/icedland/iced)\n\n<img align=\"right\" width=\"160px\" height=\"160px\" src=\"logo.png\">\n\niced is a blazing fast and correct x86 (16/32/64-bit) instruction decoder, disassembler and assembler.\n\n- üëç Supports all Intel and AMD instructions\n- üëç Correct: All instructions are tested and iced has been tested against other disassemblers/assemblers (xed, gas, objdump, masm, dumpbin, nasm, ndisasm) and fuzzed\n- üëç Supports .NET, Rust, Python, JavaScript (WebAssembly)\n- üëç The formatter supports masm, nasm, gas (AT&T), Intel (XED) and there are many options to customize the output\n- üëç Blazing fast: Decodes >250 MB/s and decode+format >130 MB/s (Rust, [see here](https://github.com/icedland/disas-bench/tree/a865849deacfb6c33ee0e78f3a3ad7f4c82099f5#results))\n- üëç Small decoded instructions, only 40 bytes and the decoder doesn't allocate any memory\n- üëç Create instructions with code assembler, eg. `asm.mov(eax, edx)`\n- üëç The encoder can be used to re-encode decoded instructions at any address\n- üëç API to get instruction info, eg. read/written registers, memory and rflags bits; CPUID feature flag, control flow info, etc\n- üëç License: MIT\n\n# Examples\n\n- Rust: [README](https://github.com/icedland/iced/blob/master/src/rust/iced-x86/README.md)\n- .NET: [README](https://github.com/icedland/iced/blob/master/src/csharp/Intel/README.md)\n- Java: [README](https://github.com/icedland/iced/blob/master/src/java/iced-x86/README.md)\n- Python: [README](https://github.com/icedland/iced/blob/master/src/rust/iced-x86-py/README.md)\n- JavaScript + WebAssembly: [README](https://github.com/icedland/iced/blob/master/src/rust/iced-x86-js/README.md)\n- Lua: [README](https://github.com/icedland/iced/blob/master/src/rust/iced-x86-lua/README.md)\n\n# License\n\nMIT\n\n# Icon\n\nLogo `processor` by [Creative Stall](https://thenounproject.com/creativestall/) from the Noun Project\n"
        },
        {
          "name": "build",
          "type": "tree",
          "content": null
        },
        {
          "name": "logo.png",
          "type": "blob",
          "size": 3.623046875,
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}