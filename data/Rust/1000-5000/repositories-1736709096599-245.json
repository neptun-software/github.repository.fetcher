{
  "metadata": {
    "timestamp": 1736709096599,
    "page": 245,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Auburn/FastNoiseLite",
      "stars": 2839,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 0.8447265625,
          "content": "---\nLanguage: Cpp\nBasedOnStyle: LLVM\nAccessModifierOffset: -4\nAlignOperands: false\nAlignTrailingComments: false\nAlwaysBreakTemplateDeclarations: Yes\nPointerAlignment: Left\nBraceWrapping: \n  AfterCaseLabel: true\n  AfterClass: true\n  AfterControlStatement: true\n  AfterEnum: true\n  AfterFunction: true\n  AfterNamespace: true\n  AfterStruct: true\n  AfterUnion: true\n  AfterExternBlock: false\n  BeforeCatch: true\n  BeforeElse: true\n  SplitEmptyFunction: true\n  SplitEmptyRecord: true\n  SplitEmptyNamespace: true\nBreakBeforeBraces: Custom\nBreakConstructorInitializers: AfterColon\nColumnLimit: 500\nCpp11BracedListStyle: false\nIncludeCategories: \n  - Regex: '^<.*'\n    Priority: 1\n  - Regex: '^\".*'\n    Priority: 2\n  - Regex: '.*'\n    Priority: 3\nIncludeIsMainRegex: '([-_](test|unittest))?$'\nIndentWidth: 4\nMaxEmptyLinesToKeep: 2\nNamespaceIndentation: All\nTabWidth: 4\n...\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.3857421875,
          "content": "*.swp\n*.*~\nproject.lock.json\n.DS_Store\n*.pyc\nnupkg/\n\n# Visual Studio Code\n.vscode\n\n# Rider\n.idea\n\n# User-specific files\n*.suo\n*.user\n*.userosscache\n*.sln.docstates\n\n# Build results\n[Dd]ebug/\n[Dd]ebugPublic/\n[Rr]elease/\n[Rr]eleases/\n[Pp]ublish/\n[Tt]arget/\nx64/\nx86/\nbuild/\nbld/\n[Bb]in/\n[Oo]bj/\n[Oo]ut/\nmsbuild.log\nmsbuild.err\nmsbuild.wrn\n\n# Visual Studio 2015\n.vs/\n\n# JS stuff\nnode_modules\n\nemsdk"
        },
        {
          "name": "C",
          "type": "tree",
          "content": null
        },
        {
          "name": "CSharp",
          "type": "tree",
          "content": null
        },
        {
          "name": "Cpp",
          "type": "tree",
          "content": null
        },
        {
          "name": "Fortran",
          "type": "tree",
          "content": null
        },
        {
          "name": "GLSL",
          "type": "tree",
          "content": null
        },
        {
          "name": "Go",
          "type": "tree",
          "content": null
        },
        {
          "name": "HLSL",
          "type": "tree",
          "content": null
        },
        {
          "name": "Java",
          "type": "tree",
          "content": null
        },
        {
          "name": "JavaScript",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.09375,
          "content": "MIT License\n\nCopyright(c) 2020 Jordan Peck (jordan.me2@gmail.com)\nCopyright(c) 2020 Contributors\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE."
        },
        {
          "name": "PowerShell",
          "type": "tree",
          "content": null
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.5439453125,
          "content": "[![discord](https://img.shields.io/discord/703636892901441577?logo=discord \"Discord\")](https://discord.gg/SHVaVfV)\n\n# FastNoise Lite\n\n[Web Preview App](https://auburn.github.io/FastNoiseLite)\n\nFastNoise Lite is an extremely portable open source noise generation library with a large selection of noise algorithms. This library focuses on high performance while avoiding platform/language specific features, allowing for easy ports to as many possible languages.\n\nThis project is an evolution of the [original FastNoise](https://github.com/Auburn/FastNoiseLite/tree/FastNoise-Legacy) library and shares the same goal: An easy to use library that can quickly be integrated into a project and provides performant modern noise generation. See a breakdown of changes from the transition to FastNoise Lite [here](https://github.com/Auburn/FastNoiseLite/pull/49)\n\nIf you are looking for a more extensive noise generation library consider using [FastNoise2](https://github.com/Auburn/FastNoise2). It provides large performance gains thanks to SIMD and uses a node graph structure to allow complex noise configurations with lots of flexibility.\n\n## Features\n\n- 2D & 3D sampling\n- OpenSimplex2 noise\n- OpenSimplex2S noise\n- Cellular (Voronoi) noise\n- Perlin noise\n- Value noise\n- Value Cubic noise\n- OpenSimplex2-based domain warp\n- Basic Grid Gradient domain warp\n- Multiple fractal options for all of the above\n- Supports floats and/or doubles\n\n### Supported Languages\n\n- [C#](/CSharp/)\n- [C++98](/Cpp/)\n- [C99](/C/)\n- [HLSL](/HLSL/)\n- [GLSL](/GLSL/)\n- [Go](/Go/)\n- [Java](/Java/)\n- [JavaScript](/JavaScript/)  \n  [![npm](https://img.shields.io/npm/v/fastnoise-lite?logo=npm \"npm\")](https://www.npmjs.com/package/fastnoise-lite)\n- [Rust](/Rust/)  \n  [![crates.io](https://img.shields.io/crates/v/fastnoise-lite?logo=rust \"crates.io\")](https://crates.io/crates/fastnoise-lite)\n- [Fortran](/Fortran/)\n- [Zig](/Zig/)\n- [PowerShell](/PowerShell/)\n\nIf you want to port FastNoise Lite to a new language create a pull request or discuss it on the discord linked above\n\n### [Getting Started](https://github.com/Auburn/FastNoiseLite/wiki#getting-started)\n### [Documentation](https://github.com/Auburn/FastNoiseLite/wiki/Documentation)\n\n## FastNoise Lite Web Preview App\n\nLink: [https://auburn.github.io/FastNoiseLite](https://auburn.github.io/FastNoiseLite)\n\nA compact testing application is available for testing all features included in FastNoise Lite with a visual representation. This can be used for development purposes, testing noise settings and generating noise textures for export.\n\nSource code can be found in the [WebPreviewApp](/WebPreviewApp/) directory.\n\n![Simplex FBm](https://user-images.githubusercontent.com/1349548/275292148-242e95c7-94e7-4801-bc4a-d683a8822382.png)\n\n## Performance Comparisons\n\nBenchmarked using C++ version with [NoiseBenchmarking](https://github.com/Auburn/NoiseBenchmarking)\n\n- CPU: Intel 7820X @ 4.9Ghz\n- OS: Win10 x64\n- Compiler: clang-cl 10.0.0 -m64 /O2\n\nMillion points of noise generated per second (higher = better)\n\n| 3D                 | Value  | Perlin | (*Open)Simplex | Cellular |\n|--------------------|--------|--------|----------------|----------|\n| FastNoise Lite     | 64.13  | 47.93  | 36.83*         | 12.49    |\n| FastNoise (Legacy) | 49.34  | 37.75  | 44.74          | 13.27    |\n| FastNoise 2 (AVX2) | 494.49 | 261.10 | 268.44         | 52.43    |\n| libnoise           |        | 27.35  |                | 0.65     |\n| stb perlin         |        | 34.32  |                |          |\n\n| 2D                 | Value  | Perlin | Simplex | Cellular |\n|--------------------|--------|--------|---------|----------|\n| FastNoise Lite     | 114.01 | 92.83  | 71.30   | 39.15    |\n| FastNoise (Legacy) | 102.12 | 87.99  | 65.29   | 36.84    |\n| FastNoise 2 (AVX2) | 776.33 | 624.27 | 466.03  | 194.30   |\n\n## Credits:\n\n- [OpenSimplex2](https://github.com/KdotJPG/OpenSimplex2) for the OpenSimplex2 noise algorithm\n- [@KdotJPG](https://github.com/KdotJPG) for implementing all the OpenSimplex algorithms and the Java port\n- [CubicNoise](https://github.com/jobtalle/CubicNoise) for the Value (Cubic) noise algorithm\n- [@Rover656](https://github.com/Rover656) for creating the preview GUI and porting FastNoise Lite to C and HLSL.\n- [@snowfoxsh](https://github.com/snowfoxsh) for creating the JavaScript port.\n- [@dotlogix](https://github.com/dotlogix) for creating the GLSL port.\n- [@ForeverZer0](https://github.com/ForeverZer0) for creating the Zig and Go ports.\n- [@Keavon](https://github.com/Keavon) for creating the Rust port.\n- [@jordan4ibanez](https://github.com/jordan4ibanez) for creating the Fortran port.\n- [@gregoryfmartin](https://github.com/gregoryfmartin) for creating the Powershell port.\n\n## Contributing\n\nNew ports of FastNoise Lite are always welcome, create a PR or come discuss the port with me on the discord linked above.\nI'm not an expert or even familiar with every language FastNoise lite has been ported to, so if you see something that could be improved please contribute or create a GitHub issue.\n\n\n# Examples\n\n![Ridged Fractal](https://user-images.githubusercontent.com/1349548/275292765-498f804b-96f8-4187-860f-7d6c49f6fc88.png)\n\n![Cellular](https://user-images.githubusercontent.com/1349548/275292225-4e5a0379-834d-4e6e-ab2d-2c0e8e2ee209.png)\n\n![Cellular Fractal](https://user-images.githubusercontent.com/1349548/275292294-ebb3bb00-757f-46c3-9e18-3bdc73f96719.png)\n\n![Cellular Value Warped](https://user-images.githubusercontent.com/1349548/275292149-42a42aa7-d1b1-4c2f-856f-02fd80e84c78.png)\n\n![Value Warped](https://user-images.githubusercontent.com/1349548/275293046-724b3aa4-1a6f-4b08-b421-8d32b6a69311.png)\n"
        },
        {
          "name": "Rust",
          "type": "tree",
          "content": null
        },
        {
          "name": "WebPreviewApp",
          "type": "tree",
          "content": null
        },
        {
          "name": "Zig",
          "type": "tree",
          "content": null
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 0.046875,
          "content": "module github.com/Auburn/FastNoiseLite\n\ngo 1.18\n"
        }
      ]
    }
  ]
}