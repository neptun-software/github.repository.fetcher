{
  "metadata": {
    "timestamp": 1736709152054,
    "page": 364,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjM3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "model-checking/kani",
      "stars": 2329,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".cargo",
          "type": "tree",
          "content": null
        },
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 4.16796875,
          "content": "---\nLanguage:        Cpp\n# BasedOnStyle:  Google\nAccessModifierOffset: -1\nAlignAfterOpenBracket: Align\nAlignConsecutiveAssignments: true\nAlignConsecutiveDeclarations: true\nAlignConsecutiveMacros: false\nAlignEscapedNewlines: Left\nAlignOperands:   true\nAlignTrailingComments: true\nAllowAllArgumentsOnNextLine: true\nAllowAllConstructorInitializersOnNextLine: false\nAllowAllParametersOfDeclarationOnNextLine: false\nAllowShortBlocksOnASingleLine: true\nAllowShortCaseLabelsOnASingleLine: false\nAllowShortFunctionsOnASingleLine: All\nAllowShortLambdasOnASingleLine: All\nAllowShortIfStatementsOnASingleLine: WithoutElse\nAllowShortLoopsOnASingleLine: true\nAlwaysBreakAfterDefinitionReturnType: None\nAlwaysBreakAfterReturnType: None\nAlwaysBreakBeforeMultilineStrings: true\nAlwaysBreakTemplateDeclarations: Yes\nBinPackArguments: true\nBinPackParameters: true\nBraceWrapping:\n  AfterCaseLabel:  false\n  AfterClass:      false\n  AfterControlStatement: false\n  AfterEnum:       false\n  AfterFunction:   true\n  AfterNamespace:  false\n  AfterObjCDeclaration: false\n  AfterStruct:     false\n  AfterUnion:      false\n  AfterExternBlock: false\n  BeforeCatch:     false\n  BeforeElse:      false\n  IndentBraces:    false\n  SplitEmptyFunction: true\n  SplitEmptyRecord: true\n  SplitEmptyNamespace: true\nBreakBeforeBinaryOperators: NonAssignment\nBreakBeforeBraces: Custom  #This unlocks BraceWrapping settings\nBreakBeforeInheritanceComma: false\nBreakInheritanceList: BeforeColon\nBreakBeforeTernaryOperators: true\nBreakConstructorInitializersBeforeComma: false\nBreakConstructorInitializers: BeforeColon\nBreakAfterJavaFieldAnnotations: false\nBreakStringLiterals: true\nColumnLimit:     120\nCommentPragmas:  '^ clang-format pragma:'\nCompactNamespaces: false\nConstructorInitializerAllOnOneLineOrOnePerLine: true\nConstructorInitializerIndentWidth: 4\nContinuationIndentWidth: 4\nCpp11BracedListStyle: false\nDisableFormat:   false\nExperimentalAutoDetectBinPacking: false\nFixNamespaceComments: true\nForEachMacros:\n  - foreach\n  - Q_FOREACH\n  - BOOST_FOREACH\nIncludeBlocks:   Regroup\nIncludeCategories:\n  - Regex:           '^<ext/.*\\.h>'\n    Priority:        2\n  - Regex:           '^<.*\\.h>'\n    Priority:        1\n  - Regex:           '^<.*'\n    Priority:        2\n  - Regex:           '.*'\n    Priority:        3\nIncludeIsMainRegex: '([-_](test|unittest))?$'\nIndentCaseLabels: true\nIndentPPDirectives: AfterHash\nIndentWidth:     4\nIndentWrappedFunctionNames: true\nJavaScriptQuotes: Leave\nJavaScriptWrapImports: true\nKeepEmptyLinesAtTheStartOfBlocks: false\nMacroBlockBegin: ''\nMacroBlockEnd:   ''\nMaxEmptyLinesToKeep: 1\nNamespaceIndentation: None\nObjCBinPackProtocolList: Never\nObjCBlockIndentWidth: 2\nObjCSpaceAfterProperty: false\nObjCSpaceBeforeProtocolList: true\nPenaltyBreakAssignment: 2\nPenaltyBreakBeforeFirstCallParameter: 1\nPenaltyBreakComment: 300\nPenaltyBreakFirstLessLess: 120\nPenaltyBreakString: 1000\nPenaltyBreakTemplateDeclaration: 10\nPenaltyExcessCharacter: 1000000\nPenaltyReturnTypeOnItsOwnLine: 200\nPointerAlignment: Right\nRawStringFormats:\n  - Language:        Cpp\n    Delimiters:\n      - cc\n      - CC\n      - cpp\n      - Cpp\n      - CPP\n      - 'c++'\n      - 'C++'\n    CanonicalDelimiter: ''\n    BasedOnStyle:    google\n  - Language:        TextProto\n    Delimiters:\n      - pb\n      - PB\n      - proto\n      - PROTO\n    EnclosingFunctions:\n      - EqualsProto\n      - EquivToProto\n      - PARSE_PARTIAL_TEXT_PROTO\n      - PARSE_TEST_PROTO\n      - PARSE_TEXT_PROTO\n      - ParseTextOrDie\n      - ParseTextProtoOrDie\n    CanonicalDelimiter: ''\n    BasedOnStyle:    google\nReflowComments:  false\nSortIncludes:    true\nSortUsingDeclarations: true\nSpaceAfterCStyleCast: false\nSpaceAfterLogicalNot: false\nSpaceAfterTemplateKeyword: true\nSpaceBeforeAssignmentOperators: true\nSpaceBeforeCpp11BracedList: false\nSpaceBeforeCtorInitializerColon: true\nSpaceBeforeInheritanceColon: true\nSpaceBeforeParens: ControlStatements\nSpaceBeforeRangeBasedForLoopColon: true\nSpaceInEmptyParentheses: false\nSpacesBeforeTrailingComments: 2\nSpacesInAngles:  false\nSpacesInContainerLiterals: true\nSpacesInCStyleCastParentheses: true\nSpacesInParentheses: false\nSpacesInSquareBrackets: true\nStandard:        Auto\nStatementMacros:\n  - Q_UNUSED\n  - QT_REQUIRE_VERSION\nTabWidth:        8\nUseTab:          Never\n...\n"
        },
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.0498046875,
          "content": ".git\nfirecracker\ntarget/debug\ntarget/release\nbuild\n"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.4072265625,
          "content": "# EditorConfig helps developers define and maintain consistent\n# coding styles between different editors and IDEs\n# editorconfig.org\n\nroot = true\n\n[*]\nend_of_line = lf\ncharset = utf-8\ntrim_trailing_whitespace = true\ninsert_final_newline = true\nindent_style = space\nindent_size = 4\n\n[*.md]\n# double whitespace at end of line\n# denotes a line break in Markdown\ntrim_trailing_whitespace = false\n\n[*.yml]\nindent_size = 2\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.361328125,
          "content": "[attr]rust text eol=lf whitespace=tab-in-indent,trailing-space,tabwidth=4\n\n* text=auto eol=lf\n*.cpp rust\n*.h rust\n*.rs rust diff=rust\n*.fixed linguist-language=Rust\n*.mir linguist-language=Rust\nCargo.lock linguist-generated=false\n\n# Older git versions try to fix line endings on images and fonts, this prevents it.\n*.png binary\n*.ico binary\n*.woff binary\n*.woff2 binary\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.431640625,
          "content": "# This file should only ignore things that are generated during a `x.py` build,\n# generated by common IDEs, and optional files controlled by the user that\n# affect the build (such as config.toml).\n# In particular, things like `mir_dump` should not be listed here; they are only\n# created during manual debugging and many people like to clean up instead of\n# having git ignore such leftovers. You can use `.git/info/exclude` to\n# configure your local ignore list.\n\n## File system\n.DS_Store\ndesktop.ini\n\n## Editor\n*.swp\n*.swo\nSession.vim\n.cproject\n.idea\ntoolchains/\n*.iml\n.vscode\n.project\n.favorites.json\n.settings/\n\n## Tool\n.valgrindrc\n\n## Configuration\n/config.toml\n/Makefile\nconfig.mk\nconfig.stamp\nno_llvm_build\n\n## Build\n/dl/\n/doc/\n/inst/\n/llvm/\n/mingw-build/\n/build/\n/dist/\n/unicode-downloads\n/target\n/tools/x/target\n# Generated by compiletest for incremental\n/tmp/\n# Created by default with `src/ci/docker/run.sh`\n/obj/\n# Created by kani-compiler\n*.rlib\n*.rmeta\n*.mir\n\n## Temporary files\n*~\n\\#*\n\\#*\\#\n.#*\n\n## Tags\ntags\ntags.*\nTAGS\nTAGS.*\n\n## Python\n__pycache__/\n*.py[cod]\n*$py.class\n\n## Node\nnode_modules\npackage-lock.json\n\n## Rustdoc GUI tests\ntests/rustdoc-gui/src/**.lock\n\n## Charon/Aeneas LLBC files\n*.llbc\n\n# Before adding new lines, see the comment at the top.\n/.ninja_deps\n/.ninja_log\n*Cargo.lock\ntests/kani-dependency-test/diamond-dependency/build\ntests/kani-multicrate/type-mismatch/mismatch/target\n/docs/book\n/docs/gen_src\n/docs/mdbook*\n/kani-*.tar.gz\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.2978515625,
          "content": "[submodule \"firecracker\"]\n\tpath = firecracker\n\turl = https://github.com/firecracker-microvm/firecracker.git\n[submodule \"tests/perf/s2n-quic\"]\n\tpath = tests/perf/s2n-quic\n\turl = https://github.com/aws/s2n-quic\n\tbranch = main\n[submodule \"charon\"]\n\tpath = charon\n\turl = https://github.com/AeneasVerif/charon\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 35.978515625,
          "content": "# Changelog\n\nThis file contains notable changes (e.g. breaking changes, major changes, etc.) in Kani releases.\n\nThis file was introduced starting Kani 0.23.0, so it only contains changes from version 0.23.0 onwards.\n\n## [0.58.0]\n\n### Major/Breaking Changes\n* Improve `--jobs` UI by @carolynzech in https://github.com/model-checking/kani/pull/3790\n* Generate contracts of dependencies as assertions by @carolynzech in https://github.com/model-checking/kani/pull/3802\n* Add UB checks for ptr_offset_from* intrinsics by @celinval in https://github.com/model-checking/kani/pull/3757\n\n### What's Changed\n* Include manifest-path when checking if packages are in the workspace by @qinheping in https://github.com/model-checking/kani/pull/3819\n* Update kissat to v4.0.1 by @remi-delmas-3000 in https://github.com/model-checking/kani/pull/3791\n* Rust toolchain upgraded to 2025-01-07 by @remi-delmas-3000 @zhassan-aws\n\n**Full Changelog**: https://github.com/model-checking/kani/compare/kani-0.57.0...kani-0.58.0\n\n## [0.57.0]\n\n### Major Changes\n* `kani-cov`: A coverage tool for Kani by @adpaco-aws in https://github.com/model-checking/kani/pull/3121\n* Add a timeout option by @zhassan-aws in https://github.com/model-checking/kani/pull/3649\n* Loop Contracts Annotation for While-Loop by @qinheping in https://github.com/model-checking/kani/pull/3151\n* Harness output individual files by @Alexander-Aghili in https://github.com/model-checking/kani/pull/3360\n* Enable support for Ubuntu 24.04 by @tautschnig in https://github.com/model-checking/kani/pull/3758\n\n### Breaking Changes\n* Make `kani::check` private by @celinval in https://github.com/model-checking/kani/pull/3614\n* Remove symtab json support by @celinval in https://github.com/model-checking/kani/pull/3695\n* Remove CBMC viewer and visualize option by @zhassan-aws in https://github.com/model-checking/kani/pull/3699\n* Dropping support for Ubuntu 18.04 / AL2. by @thanhnguyen-aws in https://github.com/model-checking/kani/pull/3744\n\n### What's Changed\n* Remove the overflow checks for wrapping_offset by @zhassan-aws in https://github.com/model-checking/kani/pull/3589\n* Support fully-qualified --package arguments by @celinval in https://github.com/model-checking/kani/pull/3593\n* Implement proper function pointer handling for validity checks by @celinval in https://github.com/model-checking/kani/pull/3606\n* Add fn that checks pointers point to same allocation by @celinval in https://github.com/model-checking/kani/pull/3583\n* [Lean back-end] Preserve variable names by @zhassan-aws in https://github.com/model-checking/kani/pull/3560\n* Emit an error when proof_for_contract function is not found by @zhassan-aws in https://github.com/model-checking/kani/pull/3609\n* [Lean back-end] Rename user-facing options from Aeneas to Lean by @zhassan-aws in https://github.com/model-checking/kani/pull/3630\n* Fix ICE due to mishandling of Aggregate rvalue for raw pointers to trait objects by @carolynzech in https://github.com/model-checking/kani/pull/3636\n* Fix loop contracts transformation when loops in branching by @qinheping in https://github.com/model-checking/kani/pull/3640\n* Move any_slice_from_array to kani_core by @qinheping in https://github.com/model-checking/kani/pull/3646\n* Implement `Arbitrary` for `Range*` by @c410-f3r in https://github.com/model-checking/kani/pull/3666\n* Add support for float_to_int_unchecked by @zhassan-aws in https://github.com/model-checking/kani/pull/3660\n* Change `same_allocation` to accept wide pointers by @celinval in https://github.com/model-checking/kani/pull/3684\n* Derive `Arbitrary` for enums with a single variant by @AlgebraicWolf in https://github.com/model-checking/kani/pull/3692\n* Apply loop contracts only if there exists some usage by @qinheping in https://github.com/model-checking/kani/pull/3694\n* Add support for f16 and f128 in float_to_int_unchecked intrinsic by @zhassan-aws in https://github.com/model-checking/kani/pull/3701\n* Fix codegen for rvalue aggregate raw pointer to an adt with slice tail by @carolynzech in https://github.com/model-checking/kani/pull/3644\n* Improve Kani handling of function markers by @celinval in https://github.com/model-checking/kani/pull/3718\n* Enable contracts for const generic functions by @qinheping in https://github.com/model-checking/kani/pull/3726\n* List Subcommand Improvements by @carolynzech in https://github.com/model-checking/kani/pull/3729\n* [Lean back-end] add support for enum, struct, tuple in llbc backend by @thanhnguyen-aws in https://github.com/model-checking/kani/pull/3721\n* Fix issues with how we compute DST size by @celinval in https://github.com/model-checking/kani/pull/3687\n* Fix size and alignment computation for intrinsics by @celinval in https://github.com/model-checking/kani/pull/3734\n* Add a Kani function that checks if the range of a float is valid for conversion to int by @zhassan-aws in https://github.com/model-checking/kani/pull/3742\n* Add out of bounds check for `offset` intrinsics by @celinval in https://github.com/model-checking/kani/pull/3755\n* Automatic upgrade of CBMC from 6.3.1 to 6.4.1\n* Rust toolchain upgraded to nightly-2024-12-15 by @zhassan-aws @carolynzech @qinheping @celinval @tautschnig\n\n**Full Changelog**: https://github.com/model-checking/kani/compare/kani-0.56.0...kani-0.57.0\n\n## [0.56.0]\n\n### Major/Breaking Changes\n\n* Remove obsolete linker options (`--mir-linker` and `--legacy-linker`) by @zhassan-aws in https://github.com/model-checking/kani/pull/3559\n* List Subcommand by @carolynzech in https://github.com/model-checking/kani/pull/3523\n* Deprecate `kani::check` by @celinval in https://github.com/model-checking/kani/pull/3557\n\n### What's Changed\n\n* Enable stubbing and function contracts for primitive types by @celinval in https://github.com/model-checking/kani/pull/3496\n* Instrument validity checks for pointer to reference casts for slices and str's by @zhassan-aws in https://github.com/model-checking/kani/pull/3513\n* Fail compilation if `proof_for_contract` is added to generic function by @carolynzech in https://github.com/model-checking/kani/pull/3522\n* Fix storing coverage data in cargo projects by @adpaco-aws in https://github.com/model-checking/kani/pull/3527\n* Add experimental API to generate arbitrary pointers by @celinval in https://github.com/model-checking/kani/pull/3538\n* Running `verify-std` no longer changes Cargo files by @celinval in https://github.com/model-checking/kani/pull/3577\n* Add an LLBC backend by @zhassan-aws in https://github.com/model-checking/kani/pull/3514\n* Fix the computation of the number of bytes of a pointer offset by @zhassan-aws in https://github.com/model-checking/kani/pull/3584\n* Rust toolchain upgraded to nightly-2024-10-03 by @qinheping @tautschnig @celinval\n* CBMC upgraded to 6.3.1 by @tautschnig in https://github.com/model-checking/kani/pull/3537\n\n**Full Changelog**: https://github.com/model-checking/kani/compare/kani-0.55.0...kani-0.56.0\n\n## [0.55.0]\n\n### Major/Breaking Changes\n* Coverage reporting in Kani is now source-based instead of line-based.\nConsequently, the unstable `-Zline-coverage` flag has been replaced with a `-Zsource-coverage` one.\nCheck the [Source-Coverage RFC](https://model-checking.github.io/kani/rfc/rfcs/0011-source-coverage.html) for more details.\n* Several improvements were made to the memory initialization checks. The current state is summarized in https://github.com/model-checking/kani/issues/3300. We welcome your feedback!\n\n### What's Changed\n* Update CBMC build instructions for Amazon Linux 2 by @tautschnig in https://github.com/model-checking/kani/pull/3431\n* Implement memory initialization state copy functionality by @artemagvanian in https://github.com/model-checking/kani/pull/3350\n* Make points-to analysis handle all intrinsics explicitly by @artemagvanian in https://github.com/model-checking/kani/pull/3452\n* Avoid corner-cases by grouping instrumentation into basic blocks and using backward iteration by @artemagvanian in https://github.com/model-checking/kani/pull/3438\n* Fix ICE due to mishandling of Aggregate rvalue for raw pointers to `str` by @celinval in https://github.com/model-checking/kani/pull/3448\n* Basic support for memory initialization checks for unions by @artemagvanian in https://github.com/model-checking/kani/pull/3444\n* Adopt Rust's source-based code coverage instrumentation by @adpaco-aws in https://github.com/model-checking/kani/pull/3119\n* Extra tests and bug fixes to the delayed UB instrumentation by @artemagvanian in https://github.com/model-checking/kani/pull/3419\n* Partially integrate uninit memory checks into `verify_std` by @artemagvanian in https://github.com/model-checking/kani/pull/3470\n* Rust toolchain upgraded to `nightly-2024-09-03` by @jaisnan @carolynzech \n\n**Full Changelog**: https://github.com/model-checking/kani/compare/kani-0.54.0...kani-0.55.0\n\n## [0.54.0]\n\n### Major Changes\n* We added support for slices in the `#[kani::modifies(...)]` clauses when using function contracts.\n* We introduce an `#[safety_constraint(...)]` attribute helper for the `Arbitrary` and `Invariant` macros.\n* We enabled support for concrete playback for harness that contains stubs or function contracts.\n* We added support for log2*, log10*, powif*, fma*, and sqrt* intrisincs.\n\n### Breaking Changes\n* The `-Z ptr-to-ref-cast-checks` option has been removed, and pointer validity checks when casting raw pointers to references are now run by default.\n\n## What's Changed\n* Make Kani reject mutable pointer casts if padding is incompatible and memory initialization is checked by @artemagvanian in https://github.com/model-checking/kani/pull/3332\n* Fix visibility of some Kani intrinsics by @artemagvanian in https://github.com/model-checking/kani/pull/3323\n* Function Contracts: Modify Slices by @pi314mm in https://github.com/model-checking/kani/pull/3295\n* Support for disabling automatically generated pointer checks to avoid reinstrumentation by @artemagvanian in https://github.com/model-checking/kani/pull/3344\n* Add support for global transformations by @artemagvanian in https://github.com/model-checking/kani/pull/3348\n* Enable an `#[safety_constraint(...)]` attribute helper for the `Arbitrary` and `Invariant` macros by @adpaco-aws in https://github.com/model-checking/kani/pull/3283\n* Fix contract handling of promoted constants and constant static by @celinval in https://github.com/model-checking/kani/pull/3305\n* Bump CBMC Viewer to 3.9 by @tautschnig in https://github.com/model-checking/kani/pull/3373\n* Update to CBMC version 6.1.1 by @tautschnig in https://github.com/model-checking/kani/pull/2995\n* Define a struct-level `#[safety_constraint(...)]` attribute by @adpaco-aws in https://github.com/model-checking/kani/pull/3270\n* Enable concrete playback for contract and stubs by @celinval in https://github.com/model-checking/kani/pull/3389\n* Add code scanner tool by @celinval in https://github.com/model-checking/kani/pull/3120\n* Enable contracts in associated functions by @celinval in https://github.com/model-checking/kani/pull/3363\n* Enable log2*, log10* intrinsics by @tautschnig in https://github.com/model-checking/kani/pull/3001\n* Enable powif* intrinsics by @tautschnig in https://github.com/model-checking/kani/pull/2999\n* Enable fma* intrinsics by @tautschnig in https://github.com/model-checking/kani/pull/3002\n* Enable sqrt* intrinsics by @tautschnig in https://github.com/model-checking/kani/pull/3000\n* Remove assigns clause for ZST pointers by @carolynzech in https://github.com/model-checking/kani/pull/3417\n* Instrumentation for delayed UB stemming from uninitialized memory by @artemagvanian in https://github.com/model-checking/kani/pull/3374\n* Unify kani library and kani core logic by @jaisnan in https://github.com/model-checking/kani/pull/3333\n* Stabilize pointer-to-reference cast validity checks by @artemagvanian in https://github.com/model-checking/kani/pull/3426\n* Rust toolchain upgraded to `nightly-2024-08-07` by @jaisnan @qinheping @tautschnig @feliperodri\n\n## New Contributors\n* @carolynzech made their first contribution in https://github.com/model-checking/kani/pull/3387\n\n**Full Changelog**: https://github.com/model-checking/kani/compare/kani-0.53.0...kani-0.54.0\n\n## [0.53.0]\n\n### Major Changes\n* The `--visualize` option is being deprecated and will be removed in a future release. Consider using the `--concrete-playback` option instead.\n* The `-Z ptr-to-ref-cast-checks` option is being introduced to check pointer validity when casting raw pointers to references. The feature is currently behind an unstable flag but is expected to be stabilized in a future release once remaining performance issues have been resolved.\n* The `-Z uninit-checks` option is being introduced to check memory initialization. The feature is currently behind an unstable flag and also requires the `-Z ghost-state` option.\n\n### Breaking Changes\n* Remove support for the unstable argument `--function` by @celinval in https://github.com/model-checking/kani/pull/3278\n* Remove deprecated `--enable-stubbing` by @celinval in https://github.com/model-checking/kani/pull/3309\n\n### What's Changed\n\n* Change ensures into closures by @pi314mm in https://github.com/model-checking/kani/pull/3207\n* (Re)introduce `Invariant` trait by @adpaco-aws in https://github.com/model-checking/kani/pull/3190\n* Remove empty box creation from contracts impl by @celinval in https://github.com/model-checking/kani/pull/3233\n* Add a new verify-std subcommand to Kani by @celinval in https://github.com/model-checking/kani/pull/3231\n* Inject pointer validity check when casting raw pointers to references by @artemagvanian in https://github.com/model-checking/kani/pull/3221\n* Do not turn trivially diverging loops into assume(false) by @tautschnig in https://github.com/model-checking/kani/pull/3223\n* Fix \"unused mut\" warnings created by generated code. by @jsalzbergedu in https://github.com/model-checking/kani/pull/3247\n* Refactor stubbing so Kani compiler only invoke rustc once per crate by @celinval in https://github.com/model-checking/kani/pull/3245\n* Use cfg=kani_host for host crates by @tautschnig in https://github.com/model-checking/kani/pull/3244\n* Add intrinsics and Arbitrary support for no_core by @jaisnan in https://github.com/model-checking/kani/pull/3230\n* Contracts: Avoid attribute duplication and `const` function generation for constant function by @celinval in https://github.com/model-checking/kani/pull/3255\n* Fix contract of constant fn with effect feature by @celinval in https://github.com/model-checking/kani/pull/3259\n* Fix typed_swap for ZSTs by @tautschnig in https://github.com/model-checking/kani/pull/3256\n* Add a `#[derive(Invariant)]` macro by @adpaco-aws in https://github.com/model-checking/kani/pull/3250\n* Contracts: History Expressions via \"old\" monad by @pi314mm in https://github.com/model-checking/kani/pull/3232\n* Function Contracts: remove instances of _renamed by @pi314mm in https://github.com/model-checking/kani/pull/3274\n* Deprecate `--visualize` in favor of concrete playback by @celinval in https://github.com/model-checking/kani/pull/3281\n* Fix operand in fat pointer comparison by @pi314mm in https://github.com/model-checking/kani/pull/3297\n* Function Contracts: Closure Type Inference by @pi314mm in https://github.com/model-checking/kani/pull/3307\n* Add support for f16 and f128 for toolchain upgrade to 6/28 by @jaisnan in https://github.com/model-checking/kani/pull/3306\n* Towards Proving Memory Initialization by @artemagvanian in https://github.com/model-checking/kani/pull/3264\n* Rust toolchain upgraded to `nightly-2024-07-01` by @tautschnig @celinval @jaisnan @adpaco-aws\n\n**Full Changelog**: https://github.com/model-checking/kani/compare/kani-0.52.0...kani-0.53.0\n\n## [0.52.0]\n\n## What's Changed\n* New section about linter configuraton checking in the doc by @remi-delmas-3000 in https://github.com/model-checking/kani/pull/3198\n* Fix `{,e}println!()` by @GrigorenkoPV in https://github.com/model-checking/kani/pull/3209\n* Contracts for a few core functions by @celinval in https://github.com/model-checking/kani/pull/3107\n* Add simple API for shadow memory by @zhassan-aws in https://github.com/model-checking/kani/pull/3200\n* Upgrade Rust toolchain to 2024-05-28 by @zhassan-aws @remi-delmas-3000 @qinheping\n\n**Full Changelog**: https://github.com/model-checking/kani/compare/kani-0.51.0...kani-0.52.0\n\n## [0.51.0]\n\n### What's Changed\n\n* Do not assume that ZST-typed symbols refer to unique objects by @tautschnig in https://github.com/model-checking/kani/pull/3134\n* Remove `kani::Arbitrary` from the `modifies` contract instrumentation by @feliperodri in https://github.com/model-checking/kani/pull/3169\n* Emit source locations whenever possible to ease debugging and coverage reporting by @tautschnig in https://github.com/model-checking/kani/pull/3173\n* Rust toolchain upgraded to `nightly-2024-04-21` by @celinval\n\n\n**Full Changelog**: https://github.com/model-checking/kani/compare/kani-0.50.0...kani-0.51.0\n\n\n## [0.50.0]\n\n### Major Changes\n* Fix compilation issue with proc_macro2  (v1.0.80+) and Kani v0.49.0\n(https://github.com/model-checking/kani/issues/3138).\n\n### What's Changed\n* Implement valid value check for `write_bytes` by @celinval in\nhttps://github.com/model-checking/kani/pull/3108\n* Rust toolchain upgraded to 2024-04-15 by @tautschnig @celinval\n\n**Full Changelog**:\nhttps://github.com/model-checking/kani/compare/kani-0.49.0...kani-0.50.0\n\n## [0.49.0]\n\n### What's Changed\n* Disable removal of storage markers by @zhassan-aws in https://github.com/model-checking/kani/pull/3083\n* Ensure storage markers are kept in std code by @zhassan-aws in https://github.com/model-checking/kani/pull/3080\n* Implement validity checks by @celinval in https://github.com/model-checking/kani/pull/3085\n* Allow modifies clause for verification only by @feliperodri in https://github.com/model-checking/kani/pull/3098\n* Add optional scatterplot to benchcomp output by @tautschnig in https://github.com/model-checking/kani/pull/3077\n* Expand ${var} in benchcomp variant `env` by @karkhaz in https://github.com/model-checking/kani/pull/3090\n* Add `benchcomp filter` command by @karkhaz in https://github.com/model-checking/kani/pull/3105\n* Upgrade Rust toolchain to 2024-03-29 by @zhassan-aws @celinval @adpaco-aws @feliperodri\n\n**Full Changelog**: https://github.com/model-checking/kani/compare/kani-0.48.0...kani-0.49.0\n\n## [0.48.0]\n\n### Major Changes\n* We fixed a soundness bug that in some cases may cause Kani to not detect a use-after-free issue in https://github.com/model-checking/kani/pull/3063\n\n### What's Changed\n* Fix `codegen_atomic_binop` for `atomic_ptr` by @qinheping in https://github.com/model-checking/kani/pull/3047\n* Retrieve info for recursion tracker reliably by @feliperodri in https://github.com/model-checking/kani/pull/3045\n* Add `--use-local-toolchain` to Kani setup by @jaisnan in https://github.com/model-checking/kani/pull/3056\n* Replace internal reverse_postorder by a stable one by @celinval in https://github.com/model-checking/kani/pull/3064\n* Add option to override `--crate-name` from `kani` by @adpaco-aws in https://github.com/model-checking/kani/pull/3054\n* Rust toolchain upgraded to 2024-03-11 by @adpaco-ws @celinval @zyadh\n\n**Full Changelog**: https://github.com/model-checking/kani/compare/kani-0.47.0...kani-0.48.0\n\n## [0.47.0]\n\n### What's Changed\n* Upgrade toolchain to 2024-02-14 by @zhassan-aws in https://github.com/model-checking/kani/pull/3036\n\n**Full Changelog**: https://github.com/model-checking/kani/compare/kani-0.46.0...kani-0.47.0\n\n## [0.46.0]\n\n## What's Changed\n* `modifies` Clauses for Function Contracts by @JustusAdam in https://github.com/model-checking/kani/pull/2800\n* Fix ICEs due to mismatched arguments by @celinval in https://github.com/model-checking/kani/pull/2994. Resolves the following issues:\n  * https://github.com/model-checking/kani/issues/2260\n  * https://github.com/model-checking/kani/issues/2312\n* Enable powf*, exp*, log* intrinsics by @tautschnig in https://github.com/model-checking/kani/pull/2996\n* Upgrade Rust toolchain to nightly-2024-01-24 by @celinval @feliperodri @qinheping\n\n**Full Changelog**: https://github.com/model-checking/kani/compare/kani-0.45.0...kani-0.46.0\n\n## [0.45.0]\n\n## What's Changed\n* Upgrade toolchain to nightly-2024-01-17 by @celinval in https://github.com/model-checking/kani/pull/2976\n\n**Full Changelog**: https://github.com/model-checking/kani/compare/kani-0.44.0...kani-0.45.0\n\n## [0.44.0]\n\n### What's Changed\n\n* Rust toolchain upgraded to `nightly-2024-01-08` by @adpaco-aws @celinval @zhassan-aws\n\n**Full Changelog**: https://github.com/model-checking/kani/compare/kani-0.43.0...kani-0.44.0\n\n## [0.43.0]\n\n###  What's Changed\n* Rust toolchain upgraded to `nightly-2023-12-14` by @tautschnig and @adpaco-aws\n\n**Full Changelog**: https://github.com/model-checking/kani/compare/kani-0.42.0...kani-0.43.0\n\n## [0.42.0]\n\n### What's Changed\n\n* Build CBMC from source and install as package on non-x86_64 by @bennofs in https://github.com/model-checking/kani/pull/2877 and https://github.com/model-checking/kani/pull/2878\n* Emit suggestions and an explanation when CBMC runs out of memory by @JustusAdam in https://github.com/model-checking/kani/pull/2885\n* Rust toolchain upgraded to `nightly-2023-11-28` by @celinval\n\n**Full Changelog**: https://github.com/model-checking/kani/compare/kani-0.41.0...kani-0.42.0\n\n## [0.41.0]\n\n### Breaking Changes\n\n* Set minimum python to 3.7 in docker container and release action by @remi-delmas-3000 in https://github.com/model-checking/kani/pull/2879\n* Delete `any_slice` which has been deprecated since Kani 0.38.0. by @zhassan-aws in https://github.com/model-checking/kani/pull/2860\n\n### What's Changed\n\n* Make `cover` const by @jswrenn in https://github.com/model-checking/kani/pull/2867\n* Change `expect()` from taking formatted strings to use `unwrap_or_else()` by @matthiaskrgr in https://github.com/model-checking/kani/pull/2865\n* Fix setup for `aarch64-unknown-linux-gnu` platform by @adpaco-aws in https://github.com/model-checking/kani/pull/2864\n* Do not override `std` library during playback by @celinval in https://github.com/model-checking/kani/pull/2852\n* Rust toolchain upgraded to `nightly-2023-11-11` by @zhassan-aws\n\n**Full Changelog**: https://github.com/model-checking/kani/compare/kani-0.40.0...kani-0.41.0\n\n## [0.40.0]\n\n### What's Changed\n\n* Ease setup in Amazon Linux 2 by @adpaco-aws in https://github.com/model-checking/kani/pull/2833\n* Propagate backend options into goto-synthesizer by @qinheping in https://github.com/model-checking/kani/pull/2643\n* Update CBMC version to 5.95.1 by @adpaco-aws in https://github.com/model-checking/kani/pull/2844\n* Rust toolchain upgraded to `nightly-2023-10-31` by @jaisnan @adpaco-aws\n\n**Full Changelog**: https://github.com/model-checking/kani/compare/kani-0.39.0...kani-0.40.0\n\n## [0.39.0]\n\n### What's Changed\n\n* Limit --exclude to workspace packages by @tautschnig in https://github.com/model-checking/kani/pull/2808\n* Fix panic warning and add arbitrary Duration by @celinval in https://github.com/model-checking/kani/pull/2820\n* Update CBMC version to 5.94 by @celinval in https://github.com/model-checking/kani/pull/2821\n* Rust toolchain upgraded to `nightly-2023-10-17` by @celinval @tautschnig\n\n**Full Changelog**:\nhttps://github.com/model-checking/kani/compare/kani-0.38.0...kani-0.39.0\n\n## [0.38.0]\n\n### Major Changes\n\n* Deprecate `any_slice` by @zhassan-aws in https://github.com/model-checking/kani/pull/2789\n\n### What's Changed\n\n* Provide better error message for invalid stubs by @JustusAdam in https://github.com/model-checking/kani/pull/2787\n* Simple Stubbing with Contracts by @JustusAdam in https://github.com/model-checking/kani/pull/2746\n* Avoid mismatch when generating structs that represent scalar data but also include ZSTs by @adpaco-aws in https://github.com/model-checking/kani/pull/2794\n* Prevent kani crash during setup for first time by @jaisnan in https://github.com/model-checking/kani/pull/2799\n* Create concrete playback temp files in source directory by @tautschnig in https://github.com/model-checking/kani/pull/2804\n* Bump CBMC version by @zhassan-aws in https://github.com/model-checking/kani/pull/2796\n* Update Rust toolchain to 2023-09-23 by @tautschnig in https://github.com/model-checking/kani/pull/2806\n\n**Full Changelog**: https://github.com/model-checking/kani/compare/kani-0.37.0...kani-0.38.0\n\n## [0.37.0]\n\n### Major Changes\n\n* Delete obsolete stubs for `Vec` and related options by @zhassan-aws in https://github.com/model-checking/kani/pull/2770\n* Add support for the ARM64 Linux platform by @adpaco-aws in https://github.com/model-checking/kani/pull/2757\n\n### What's Changed\n\n* Function Contracts: Support for defining and checking `requires` and `ensures` clauses by @JustusAdam in https://github.com/model-checking/kani/pull/2655\n* Force `any_vec` capacity to match length by @celinval in https://github.com/model-checking/kani/pull/2765\n* Fix expected value for `pref_align_of` under aarch64/macos by @remi-delmas-3000 in https://github.com/model-checking/kani/pull/2782\n* Bump CBMC version to 5.92.0 by @zhassan-aws in https://github.com/model-checking/kani/pull/2771\n* Upgrade to Kissat 3.1.1 by @zhassan-aws in https://github.com/model-checking/kani/pull/2756\n* Rust toolchain upgraded to `nightly-2023-09-19` by @remi-delmas-3000 @tautschnig\n\n**Full Changelog**: https://github.com/model-checking/kani/compare/kani-0.36.0...kani-0.37.0\n\n## [0.36.0]\n\n### What's Changed\n\n* Enable `-Z stubbing` and error out instead of ignoring stub by @celinval in https://github.com/model-checking/kani/pull/2678\n* Enable concrete playback for failure of UB checks by @zhassan-aws in https://github.com/model-checking/kani/pull/2727\n* Bump CBMC version to 5.91.0 by @adpaco-aws in https://github.com/model-checking/kani/pull/2733\n* Rust toolchain upgraded to `nightly-2023-09-06` by @celinval @jaisnan @adpaco-aws\n\n**Full Changelog**: https://github.com/model-checking/kani/compare/kani-0.35.0...kani-0.36.0\n\n## [0.35.0]\n\n### What's Changed\n\n* Add support to `simd_bitmask` by @celinval in https://github.com/model-checking/kani/pull/2677\n* Add integer overflow checking for `simd_div` and `simd_rem` by @reisnera in https://github.com/model-checking/kani/pull/2645\n* Bump CBMC version by @zhassan-aws in https://github.com/model-checking/kani/pull/2702\n* Upgrade Rust toolchain to 2023-08-19 by @zhassan-aws in https://github.com/model-checking/kani/pull/2696\n\n**Full Changelog**: https://github.com/model-checking/kani/compare/kani-0.34.0...kani-0.35.0\n\n## [0.34.0]\n\n### Breaking Changes\n* Change default solver to CaDiCaL by @celinval in https://github.com/model-checking/kani/pull/2557\nBy default, Kani will now run CBMC with CaDiCaL, since this solver has outperformed Minisat in most of our benchmarks.\nUser's should still be able to select Minisat (or a different solver) either by using `#[solver]` harness attribute,\nor by passing `--solver=<SOLVER>` command line option.\n\n### What's Changed\n\n* Allow specifying the scheduling strategy in #[kani_proof] for async functions by @fzaiser in https://github.com/model-checking/kani/pull/1661\n* Support for stubbing out foreign functions by @feliperodri in https://github.com/model-checking/kani/pull/2658\n* Coverage reporting without a need for cbmc-viewer by @adpaco-aws in https://github.com/model-checking/kani/pull/2609\n* Add support to array-based SIMD by @celinval in https://github.com/model-checking/kani/pull/2633\n* Add unchecked/SIMD bitshift checks and disable CBMC flag by @reisnera in https://github.com/model-checking/kani/pull/2630\n* Fix codegen of constant byte slices to address spurious verification failures by @zhassan in https://github.com/model-checking/kani/pull/2663\n* Bump CBMC to v5.89.0 by @remi-delmas-3000 in https://github.com/model-checking/kani/pull/2662\n* Update Rust toolchain to nightly 2023-08-04 by @remi-delmas-3000 in https://github.com/model-checking/kani/pull/2661\n\n**Full Changelog**: https://github.com/model-checking/kani/compare/kani-0.33.0...kani-0.34.0\n\n## [0.33.0]\n\n### What's Changed\n* Add support for sysconf by @feliperodri in https://github.com/model-checking/kani/pull/2557\n* Print Kani version by @adpaco-aws in https://github.com/model-checking/kani/pull/2619\n* Upgrade Rust toolchain to nightly-2023-07-01 by @qinheping in https://github.com/model-checking/kani/pull/2616\n* Bump CBMC version to 5.88.1 by @zhassan-aws in https://github.com/model-checking/kani/pull/2623\n\n**Full Changelog**: https://github.com/model-checking/kani/compare/kani-0.32.0...kani-0.33.0\n\n## [0.32.0]\n\n### What's Changed\n\n* Add kani::spawn and an executor to the Kani library by @fzaiser in https://github.com/model-checking/kani/pull/1659\n* Add \"kani\" configuration key to enable conditional compilation in build scripts by @celinval in https://github.com/model-checking/kani/pull/2297\n* Adds posix_memalign to the list of supported builtins by @feliperodri in https://github.com/model-checking/kani/pull/2601\n* Upgrade rust toolchain to nightly-2023-06-20 by @celinval in https://github.com/model-checking/kani/pull/2551\n* Update rust toolchain to 2023-06-22 by @celinval in https://github.com/model-checking/kani/pull/2588\n* Automatic toolchain upgrade to nightly-2023-06-24 by @github-actions in https://github.com/model-checking/kani/pull/2600\n* Bump CBMC version to 5.87.0 by @adpaco-aws in https://github.com/model-checking/kani/pull/2598\n\n**Full Changelog**: https://github.com/model-checking/kani/compare/kani-0.31.0...kani-0.32.0\n\n## [0.31.0]\n\n### What's Changed\n* Add `--exact` flag by @jaisnan in https://github.com/model-checking/kani/pull/2527\n* Build the verification libraries using Kani compiler by @celinval in https://github.com/model-checking/kani/pull/2534\n* Verify all Kani attributes in all crate items upfront by @celinval in https://github.com/model-checking/kani/pull/2536\n* Update README.md - fix link locations for badge images in markdown by @phayes in https://github.com/model-checking/kani/pull/2537\n* Bump CBMC version to 5.86.0 by @zhassan-aws in https://github.com/model-checking/kani/pull/2561\n\n**Full Changelog**: https://github.com/model-checking/kani/compare/kani-0.30.0...kani-0.31.0\n\n## [0.30.0]\n\n### What's Changed\n* Remove --harness requirement from stubbing by @celinval in https://github.com/model-checking/kani/pull/2495\n* Add target selection for cargo kani by @celinval in https://github.com/model-checking/kani/pull/2507\n* Generate Multiple playback harnesses when multiple crashes exist in a single harness. by @YoshikiTakashima in https://github.com/model-checking/kani/pull/2496\n* Escape Zero-size types in playback by @YoshikiTakashima in https://github.com/model-checking/kani/pull/2508\n* Do not crash when `rustfmt` fails. by @YoshikiTakashima in https://github.com/model-checking/kani/pull/2511\n* De-duplicate same input injections for the same harness. by @YoshikiTakashima in https://github.com/model-checking/kani/pull/2513\n* Update Cbmc version  by @celinval in https://github.com/model-checking/kani/pull/2512\n* Upgrade rust toolchain to 2023-04-30 by @zhassan-aws in https://github.com/model-checking/kani/pull/2456\n\n**Full Changelog**: https://github.com/model-checking/kani/compare/kani-0.29.0...kani-0.30.0\n\n\n## [0.29.0]\n\n### Major Changes\n* Create a playback command to make it easier to run Kani generated tests ([pull request](https://github.com/model-checking/kani/pull/2464) by @celinval)\n\n### What Else has Changed\n* Fix symtab json file removal and reduce regression scope ([pull request](https://github.com/model-checking/kani/pull/2447) by @celinval)\n* Fix regression on concrete playback inplace ([pull request](https://github.com/model-checking/kani/pull/2454) by @celinval)\n* Fix static variable initialization when they have the same value ([pull request](https://github.com/model-checking/kani/pull/2469) by @celinval)\n* Improve assess and regression time ([pull request](https://github.com/model-checking/kani/pull/2478) by @celinval)\n* Fix playback with build scripts ([pull request](https://github.com/model-checking/kani/pull/2477) by @celinval)\n* Delay printing playback harness until after verification status ([pull request](https://github.com/model-checking/kani/pull/2480) by @YoshikiTakashima)\n* Update rust toolchain to 2023-04-29 ([pull request](https://github.com/model-checking/kani/pull/2452) by @zhassan-aws)\n* Bump CBMC version to 5.84.0 ([pull request](https://github.com/model-checking/kani/pull/2483) by @tautschn)\n\n**Full Changelog**: https://github.com/model-checking/kani/compare/kani-0.28.0...kani-0.29.0\n\n## [0.28.0]\n\n### Breaking Changes\n* The unstable `--c-lib` option now requires `-Z c-ffi` to enable C-FFI support by @celinval in https://github.com/model-checking/kani/pull/2425\n\n### What's Changed\n* Enforce unstable APIs can only be used if the related feature is enabled by @celinval in https://github.com/model-checking/kani/pull/2386\n* Get rid of the legacy mode by @celinval in https://github.com/model-checking/kani/pull/2427\n* Limit FFI calls by default to explicitly supported ones by @celinval in https://github.com/model-checking/kani/pull/2428\n* Fix the order of operands for generator structs by @zhassan-aws in https://github.com/model-checking/kani/pull/2436\n* Add a few options to dump the reachability graph (debug only) by @celinval in https://github.com/model-checking/kani/pull/2433\n* Perform reachability analysis on a per-harness basis by @celinval in https://github.com/model-checking/kani/pull/2439\n* Bump CBMC version to 5.83.0 by @zhassan-aws in https://github.com/model-checking/kani/pull/2441\n* Upgrade the toolchain to nightly-2023-04-16  by @celinval in https://github.com/model-checking/kani/pull/2406\n\n**Full Changelog**: https://github.com/model-checking/kani/compare/kani-0.27.0...kani-0.28.0\n\n## [0.27.0]\n\n### What's Changed\n\n* Allow excluding packages from verification with `--exclude` by @adpaco-aws in https://github.com/model-checking/kani/pull/2399\n* Add size_of annotation to help CBMC's allocator by @tautschnig in https://github.com/model-checking/kani/pull/2395\n* Implement `kani::Arbitrary` for `Box<T>` by @adpaco-aws in https://github.com/model-checking/kani/pull/2404\n* Use optimized overflow operation everywhere by @celinval in https://github.com/model-checking/kani/pull/2405\n* Print compilation stats in verbose mode by @celinval in https://github.com/model-checking/kani/pull/2420\n* Bump CBMC version to 5.82.0 by @adpaco-aws in https://github.com/model-checking/kani/pull/2417\n\n**Full Changelog**: https://github.com/model-checking/kani/compare/kani-0.26.0...kani-0.27.0\n\n## [0.26.0]\n\n### What's Changed\n\n* The Kani reference now includes an [\"Attributes\"](https://model-checking.github.io/kani/reference/attributes.html) section that describes each of the attributes available in Kani ([pull request](https://github.com/model-checking/kani/pull/2359) by @adpaco-aws)\n* Users' choice of SAT solver, specified by the `solver` attribute, is now propagated to the loop-contract synthesizer ([pull request](https://github.com/model-checking/kani/pull/2320) by @qinheping)\n* Unit tests generated by the concrete playback feature now compile correctly when using `RUSTFLAGS=\"--cfg=kani\"` ([pull request](https://github.com/model-checking/kani/pull/2353) by @jaisnan)\n* The Rust toolchain is updated to 2023-02-18 ([pull request](https://github.com/model-checking/kani/pull/2384) by @tautschnig)\n\n**Full Changelog**: https://github.com/model-checking/kani/compare/kani-0.25.0...kani-0.26.0\n\n\n## [0.25.0]\n\n### What's Changed\n\n* Add implementation for the `#[kani::should_panic]` attribute by @adpaco-aws in https://github.com/model-checking/kani/pull/2315\n* Upgrade Rust toolchain to nightly-2023-02-04 by @tautschnig in https://github.com/model-checking/kani/pull/2324\n* Bump CBMC version to 5.80.0 by @zhassan-aws in https://github.com/model-checking/kani/pull/2336\n\n**Full Changelog**: https://github.com/model-checking/kani/compare/kani-0.24.0...kani-0.25.0\n\n## [0.23.0]\n\n### Breaking Changes\n\n- Remove the second parameter in the `kani::any_where` function by @zhassan-aws in #2257\nWe removed the second parameter in the `kani::any_where` function (`_msg: &'static str`) to make the function more ergonomic to use.\nWe suggest moving the explanation for why the assumption is introduced into a comment.\nFor example, the following code:\n```rust\n    let len: usize = kani::any_where(|x| *x < 5, \"Restrict the length to a value less than 5\");\n```\nshould be replaced by:\n```rust\n    // Restrict the length to a value less than 5\n    let len: usize = kani::any_where(|x| *x < 5);\n```\n\n### Major Changes\n\n- Enable the build cache to avoid recompiling crates that haven't changed, and introduce `--force-build` option to compile all crates from scratch by @celinval in #2232.\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 2.0283203125,
          "content": "# Code of Conduct\nThis project has adopted the [Rust Code Of Conduct](https://www.rust-lang.org/policies/code-of-conduct).\n\n* We are committed to providing a friendly, safe and welcoming environment for all, regardless of level of experience, gender identity and expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, religion, nationality, or other similar characteristic.\n* Please avoid using overtly sexual aliases or other nicknames that might detract from a friendly, safe and welcoming environment for all.\n* Please be kind and courteous. There’s no need to be mean or rude.\n* Respect that people have differences of opinion and that every design or implementation choice carries a trade-off and numerous costs. There is seldom a right answer.\n* Please keep unstructured critique to a minimum. If you have solid ideas you want to experiment with, make a fork and see how it works.\n* We will exclude you from interaction if you insult, demean or harass anyone. That is not welcome behavior. We interpret the term “harassment” as including the definition in the Citizen Code of Conduct; if you have any lack of clarity about what might be included in that concept, please read their definition. In particular, we don’t tolerate behavior that excludes people in socially marginalized groups.\n* Private harassment is also unacceptable. No matter who you are, if you feel you have been or are being harassed or made uncomfortable by a community member, please contact one of the channel ops or any of the Rust moderation team immediately. Whether you’re a regular contributor or a newcomer, we care about making this community a safe place for you and we’ve got your back.\n* Likewise any spamming, trolling, flaming, baiting or other attention-stealing behavior is not welcome.\n\n## Reporting Code of Conduct Issues\nIf you have witnessed or been subjected to a violation of the Code of Conduct, please send an email to kani-verifier-moderation@amazon.com. Your message will be handled in a secure and confidential manner.\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 3.2421875,
          "content": "# Contributing Guidelines\n\nThank you for your interest in contributing to our project. Whether it's a bug report, new feature, correction, or additional\ndocumentation, we greatly value feedback and contributions from our community.\n\nPlease read through this document before submitting any issues or pull requests to ensure we have all the necessary\ninformation to effectively respond to your bug report or contribution.\n\n\n## Reporting Bugs/Feature Requests\n\nWe welcome you to use the GitHub issue tracker to report bugs or suggest features.\n\nWhen filing an issue, please check existing open, or recently closed, issues to make sure somebody else hasn't already\nreported the issue. Please try to include as much information as you can. Details like these are incredibly useful:\n\n* A reproducible test case or series of steps\n* The version of our code being used\n* Any modifications you've made relevant to the bug\n* Anything unusual about your environment or deployment\n\n\n## Contributing via Pull Requests\nContributions via pull requests are much appreciated. Before sending us a pull request, please ensure that:\n\n1. You are working against the latest source on the *main* branch.\n2. You check existing open, and recently merged, pull requests to make sure someone else hasn't addressed the problem already.\n3. You open an issue to discuss any significant work - we would hate for your time to be wasted.\n\nTo send us a pull request, please:\n\n1. Fork the repository.\n2. Modify the source; please focus on the specific change you are contributing. If you also reformat all the code, it will be hard for us to focus on your change.\n3. Ensure local tests pass.\n4. Commit to your fork using clear commit messages.\n5. Send us a pull request, answering any default questions in the pull request interface.\n6. Pay attention to any automated CI failures reported in the pull request, and stay involved in the conversation.\n\nGitHub provides additional document on [forking a repository](https://help.github.com/articles/fork-a-repo/) and\n[creating a pull request](https://help.github.com/articles/creating-a-pull-request/).\n\n\n## Finding contributions to work on\nLooking at the existing issues is a great way to find something to contribute on. As our projects, by default, use the default GitHub issue labels (enhancement/bug/duplicate/help wanted/invalid/question/wontfix), looking at any 'help wanted' issues is a great place to start.\n\n## Code of Conduct\nThis project has adopted the [Rust Code Of Conduct](https://www.rust-lang.org/policies/code-of-conduct).\nSee [here](./CODE_OF_CONDUCT.md) for more details.\n\n## Security issue notifications\nIf you think you have discovered a security issue please write to us at kani-verifier-security@amazon.com; do **NOT** open a public issue.\nSensitive information can be encrypted using our [PGP key](https://github.com/model-checking/kani/blob/main/kani-verifier-security.public.key).\nSee our [security disclosure instructions](.github/SECURITY.md) for more details.\n\n## Licensing\n\nKani is distributed under the terms of both the MIT license and the Apache License (Version 2.0).\nSee [LICENSE-APACHE](LICENSE-APACHE) and [LICENSE-MIT](LICENSE-MIT) for details.\nBy submitting a pull request, you confirm that your contribution is made under the terms of the Apache 2.0 and MIT licenses."
        },
        {
          "name": "Cargo.lock",
          "type": "blob",
          "size": 53.171875,
          "content": "# This file is automatically @generated by Cargo.\n# It is not intended for manual editing.\nversion = 4\n\n[[package]]\nname = \"addr2line\"\nversion = \"0.24.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dfbe277e56a376000877090da837660b4427aad530e3028d44e0bffe4f89a1c1\"\ndependencies = [\n \"gimli\",\n]\n\n[[package]]\nname = \"adler2\"\nversion = \"2.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"512761e0bb2578dd7380c6baaa0f4ce03e84f95e960231d1dec8bf4d7d6e2627\"\n\n[[package]]\nname = \"ahash\"\nversion = \"0.8.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e89da841a80418a9b391ebaea17f5c112ffaaa96f621d2c285b5174da76b9011\"\ndependencies = [\n \"cfg-if\",\n \"getrandom\",\n \"once_cell\",\n \"version_check\",\n \"zerocopy\",\n]\n\n[[package]]\nname = \"aho-corasick\"\nversion = \"1.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8e60d3430d3a69478ad0993f19238d2df97c507009a52b3c10addcd7f6bcb916\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"annotate-snippets\"\nversion = \"0.11.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"710e8eae58854cdc1790fcb56cca04d712a17be849eeb81da2a724bf4bae2bc4\"\ndependencies = [\n \"anstyle\",\n \"unicode-width 0.2.0\",\n]\n\n[[package]]\nname = \"anstream\"\nversion = \"0.6.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8acc5369981196006228e28809f761875c0327210a891e941f4c683b3a99529b\"\ndependencies = [\n \"anstyle\",\n \"anstyle-parse\",\n \"anstyle-query\",\n \"anstyle-wincon\",\n \"colorchoice\",\n \"is_terminal_polyfill\",\n \"utf8parse\",\n]\n\n[[package]]\nname = \"anstyle\"\nversion = \"1.0.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"55cc3b69f167a1ef2e161439aa98aed94e6028e5f9a59be9a6ffb47aef1651f9\"\n\n[[package]]\nname = \"anstyle-parse\"\nversion = \"0.2.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3b2d16507662817a6a20a9ea92df6652ee4f94f914589377d69f3b21bc5798a9\"\ndependencies = [\n \"utf8parse\",\n]\n\n[[package]]\nname = \"anstyle-query\"\nversion = \"1.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"79947af37f4177cfead1110013d678905c37501914fba0efea834c3fe9a8d60c\"\ndependencies = [\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"anstyle-wincon\"\nversion = \"3.0.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2109dbce0e72be3ec00bed26e6a7479ca384ad226efdd66db8fa2e3a38c83125\"\ndependencies = [\n \"anstyle\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"anyhow\"\nversion = \"1.0.95\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"34ac096ce696dc2fcabef30516bb13c0a68a11d30131d3df6f04711467681b04\"\n\n[[package]]\nname = \"arrayvec\"\nversion = \"0.7.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7c02d123df017efcdfbd739ef81735b36c5ba83ec3c59c80a9d7ecc718f92e50\"\n\n[[package]]\nname = \"assert_cmd\"\nversion = \"2.0.16\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dc1835b7f27878de8525dc71410b5a31cdcc5f230aed5ba5df968e09c201b23d\"\ndependencies = [\n \"anstyle\",\n \"bstr\",\n \"doc-comment\",\n \"libc\",\n \"predicates\",\n \"predicates-core\",\n \"predicates-tree\",\n \"wait-timeout\",\n]\n\n[[package]]\nname = \"autocfg\"\nversion = \"1.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ace50bade8e6234aa140d9a2f552bbee1db4d353f69b8217bc503490fc1a9f26\"\n\n[[package]]\nname = \"backtrace\"\nversion = \"0.3.74\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8d82cb332cdfaed17ae235a638438ac4d4839913cc2af585c3c6746e8f8bee1a\"\ndependencies = [\n \"addr2line\",\n \"cfg-if\",\n \"libc\",\n \"miniz_oxide\",\n \"object\",\n \"rustc-demangle\",\n \"windows-targets\",\n]\n\n[[package]]\nname = \"bitflags\"\nversion = \"2.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b048fb63fd8b5923fc5aa7b340d8e156aec7ec02f0c78fa8a6ddc2613f6f71de\"\n\n[[package]]\nname = \"brownstone\"\nversion = \"3.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c5839ee4f953e811bfdcf223f509cb2c6a3e1447959b0bff459405575bc17f22\"\ndependencies = [\n \"arrayvec\",\n]\n\n[[package]]\nname = \"bstr\"\nversion = \"1.11.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"531a9155a481e2ee699d4f98f43c0ca4ff8ee1bfd55c31e9e98fb29d2b176fe0\"\ndependencies = [\n \"memchr\",\n \"regex-automata 0.4.9\",\n \"serde\",\n]\n\n[[package]]\nname = \"build-kani\"\nversion = \"0.58.0\"\ndependencies = [\n \"anyhow\",\n \"cargo_metadata\",\n \"clap\",\n \"which\",\n]\n\n[[package]]\nname = \"byteorder\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1fd0f2584146f6f2ef48085050886acf353beff7305ebd1ae69500e27c67f64b\"\n\n[[package]]\nname = \"bytes\"\nversion = \"1.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"325918d6fe32f23b19878fe4b34794ae41fc19ddbe53b10571a4874d44ffd39b\"\n\n[[package]]\nname = \"camino\"\nversion = \"1.1.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8b96ec4966b5813e2c0507c1f86115c8c5abaadc3980879c3424042a02fd1ad3\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"cargo-platform\"\nversion = \"0.1.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e35af189006b9c0f00a064685c727031e3ed2d8020f7ba284d78cc2671bd36ea\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"cargo_metadata\"\nversion = \"0.19.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8769706aad5d996120af43197bf46ef6ad0fda35216b4505f926a365a232d924\"\ndependencies = [\n \"camino\",\n \"cargo-platform\",\n \"semver\",\n \"serde\",\n \"serde_json\",\n \"thiserror 2.0.9\",\n]\n\n[[package]]\nname = \"cc\"\nversion = \"1.2.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a012a0df96dd6d06ba9a1b29d6402d1a5d77c6befd2566afdc26e10603dc93d7\"\ndependencies = [\n \"shlex\",\n]\n\n[[package]]\nname = \"cfg-if\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd\"\n\n[[package]]\nname = \"charon\"\nversion = \"0.1.58\"\ndependencies = [\n \"annotate-snippets\",\n \"anstream\",\n \"anyhow\",\n \"assert_cmd\",\n \"clap\",\n \"colored\",\n \"convert_case\",\n \"derive_generic_visitor\",\n \"env_logger\",\n \"hashlink\",\n \"index_vec\",\n \"indoc\",\n \"itertools\",\n \"lazy_static\",\n \"log\",\n \"macros\",\n \"nom\",\n \"nom-supreme\",\n \"petgraph\",\n \"rustc_version\",\n \"serde\",\n \"serde-map-to-array\",\n \"serde_json\",\n \"serde_stacker\",\n \"stacker\",\n \"take_mut\",\n \"toml\",\n \"tracing\",\n \"tracing-subscriber\",\n \"tracing-tree 0.4.0 (git+https://github.com/Nadrieril/tracing-tree)\",\n \"which\",\n]\n\n[[package]]\nname = \"clap\"\nversion = \"4.5.23\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3135e7ec2ef7b10c6ed8950f0f792ed96ee093fa088608f1c76e569722700c84\"\ndependencies = [\n \"clap_builder\",\n \"clap_derive\",\n]\n\n[[package]]\nname = \"clap_builder\"\nversion = \"4.5.23\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"30582fc632330df2bd26877bde0c1f4470d57c582bbc070376afcd04d8cb4838\"\ndependencies = [\n \"anstream\",\n \"anstyle\",\n \"clap_lex\",\n \"strsim\",\n]\n\n[[package]]\nname = \"clap_derive\"\nversion = \"4.5.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4ac6a0c7b1a9e9a5186361f67dfa1b88213572f427fb9ab038efb2bd8c582dab\"\ndependencies = [\n \"heck\",\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"clap_lex\"\nversion = \"0.7.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f46ad14479a25103f283c0f10005961cf086d8dc42205bb44c46ac563475dca6\"\n\n[[package]]\nname = \"colorchoice\"\nversion = \"1.0.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5b63caa9aa9397e2d9480a9b13673856c78d8ac123288526c37d7839f2a86990\"\n\n[[package]]\nname = \"colored\"\nversion = \"2.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"117725a109d387c937a1533ce01b450cbde6b88abceea8473c4d7a85853cda3c\"\ndependencies = [\n \"lazy_static\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"colour\"\nversion = \"2.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b536eebcabe54980476d120a182f7da2268fe02d22575cca99cee5fdda178280\"\ndependencies = [\n \"winapi\",\n]\n\n[[package]]\nname = \"comfy-table\"\nversion = \"7.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"24f165e7b643266ea80cb858aed492ad9280e3e05ce24d4a99d7d7b889b6a4d9\"\ndependencies = [\n \"crossterm\",\n \"strum\",\n \"strum_macros\",\n \"unicode-width 0.2.0\",\n]\n\n[[package]]\nname = \"compiletest\"\nversion = \"0.0.0\"\ndependencies = [\n \"getopts\",\n \"glob\",\n \"libc\",\n \"regex\",\n \"serde\",\n \"serde_json\",\n \"serde_yaml\",\n \"tracing\",\n \"tracing-subscriber\",\n \"wait-timeout\",\n \"walkdir\",\n]\n\n[[package]]\nname = \"console\"\nversion = \"0.15.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ea3c6ecd8059b57859df5c69830340ed3c41d30e3da0c1cbed90a96ac853041b\"\ndependencies = [\n \"encode_unicode\",\n \"libc\",\n \"once_cell\",\n \"unicode-width 0.2.0\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"convert_case\"\nversion = \"0.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ec182b0ca2f35d8fc196cf3404988fd8b8c739a4d270ff118a398feb0cbec1ca\"\ndependencies = [\n \"unicode-segmentation\",\n]\n\n[[package]]\nname = \"cprover_bindings\"\nversion = \"0.58.0\"\ndependencies = [\n \"lazy_static\",\n \"linear-map\",\n \"memuse\",\n \"num\",\n \"num-traits\",\n \"serde\",\n \"serde_test\",\n \"string-interner\",\n \"tracing\",\n]\n\n[[package]]\nname = \"crossbeam-deque\"\nversion = \"0.8.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9dd111b7b7f7d55b72c0a6ae361660ee5853c9af73f70c3c2ef6858b950e2e51\"\ndependencies = [\n \"crossbeam-epoch\",\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"crossbeam-epoch\"\nversion = \"0.9.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5b82ac4a3c2ca9c3460964f020e1402edd5753411d7737aa39c3714ad1b5420e\"\ndependencies = [\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"crossbeam-utils\"\nversion = \"0.8.21\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d0a5c400df2834b80a4c3327b3aad3a4c4cd4de0629063962b03235697506a28\"\n\n[[package]]\nname = \"crossterm\"\nversion = \"0.28.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"829d955a0bb380ef178a640b91779e3987da38c9aea133b20614cfed8cdea9c6\"\ndependencies = [\n \"bitflags\",\n \"crossterm_winapi\",\n \"parking_lot\",\n \"rustix\",\n \"winapi\",\n]\n\n[[package]]\nname = \"crossterm_winapi\"\nversion = \"0.9.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"acdd7c62a3665c7f6830a51635d9ac9b23ed385797f70a83bb8bafe9c572ab2b\"\ndependencies = [\n \"winapi\",\n]\n\n[[package]]\nname = \"csv\"\nversion = \"1.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"acdc4883a9c96732e4733212c01447ebd805833b7275a73ca3ee080fd77afdaf\"\ndependencies = [\n \"csv-core\",\n \"itoa\",\n \"ryu\",\n \"serde\",\n]\n\n[[package]]\nname = \"csv-core\"\nversion = \"0.1.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5efa2b3d7902f4b634a20cae3c9c4e6209dc4779feb6863329607560143efa70\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"darling\"\nversion = \"0.20.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6f63b86c8a8826a49b8c21f08a2d07338eec8d900540f8630dc76284be802989\"\ndependencies = [\n \"darling_core\",\n \"darling_macro\",\n]\n\n[[package]]\nname = \"darling_core\"\nversion = \"0.20.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"95133861a8032aaea082871032f5815eb9e98cef03fa916ab4500513994df9e5\"\ndependencies = [\n \"fnv\",\n \"ident_case\",\n \"proc-macro2\",\n \"quote\",\n \"strsim\",\n \"syn\",\n]\n\n[[package]]\nname = \"darling_macro\"\nversion = \"0.20.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d336a2a514f6ccccaa3e09b02d41d35330c07ddf03a62165fcec10bb561c7806\"\ndependencies = [\n \"darling_core\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"deranged\"\nversion = \"0.3.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b42b6fa04a440b495c8b04d0e71b707c585f83cb9cb28cf8cd0d976c315e31b4\"\ndependencies = [\n \"powerfmt\",\n]\n\n[[package]]\nname = \"derive_generic_visitor\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b3e1c241e4f464b614bd7650f1a7c4c0e20e5ef21564d6b916b4c51fd76f7688\"\ndependencies = [\n \"derive_generic_visitor_macros\",\n]\n\n[[package]]\nname = \"derive_generic_visitor_macros\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"885f5274163b5b1720591c0c24b34350a0b05e4774351f9fb3d13c192d8c995b\"\ndependencies = [\n \"convert_case\",\n \"darling\",\n \"itertools\",\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"difflib\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6184e33543162437515c2e2b48714794e37845ec9851711914eec9d308f6ebe8\"\n\n[[package]]\nname = \"doc-comment\"\nversion = \"0.3.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fea41bba32d969b513997752735605054bc0dfa92b4c56bf1189f2e174be7a10\"\n\n[[package]]\nname = \"either\"\nversion = \"1.13.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"60b1af1c220855b6ceac025d3f6ecdd2b7c4894bfe9cd9bda4fbb4bc7c0d4cf0\"\n\n[[package]]\nname = \"encode_unicode\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"34aa73646ffb006b8f5147f3dc182bd4bcb190227ce861fc4a4844bf8e3cb2c0\"\n\n[[package]]\nname = \"env_filter\"\nversion = \"0.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"186e05a59d4c50738528153b83b0b0194d3a29507dfec16eccd4b342903397d0\"\ndependencies = [\n \"log\",\n \"regex\",\n]\n\n[[package]]\nname = \"env_home\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c7f84e12ccf0a7ddc17a6c41c93326024c42920d7ee630d04950e6926645c0fe\"\n\n[[package]]\nname = \"env_logger\"\nversion = \"0.11.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dcaee3d8e3cfc3fd92428d477bc97fc29ec8716d180c0d74c643bb26166660e0\"\ndependencies = [\n \"anstream\",\n \"anstyle\",\n \"env_filter\",\n \"humantime\",\n \"log\",\n]\n\n[[package]]\nname = \"equivalent\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5443807d6dff69373d433ab9ef5378ad8df50ca6298caf15de6e52e24aaf54d5\"\n\n[[package]]\nname = \"errno\"\nversion = \"0.3.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"33d852cb9b869c2a9b3df2f71a3074817f01e1844f839a144f5fcef059a4eb5d\"\ndependencies = [\n \"libc\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"fastrand\"\nversion = \"2.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"37909eebbb50d72f9059c3b6d82c0463f2ff062c9e95845c43a6c9c0355411be\"\n\n[[package]]\nname = \"fixedbitset\"\nversion = \"0.4.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0ce7134b9999ecaf8bcd65542e436736ef32ddca1b3e06094cb6ec5755203b80\"\n\n[[package]]\nname = \"fnv\"\nversion = \"1.0.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3f9eec918d3f24069decb9af1554cad7c880e2da24a9afd88aca000531ab82c1\"\n\n[[package]]\nname = \"foldhash\"\nversion = \"0.1.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a0d2fde1f7b3d48b8395d5f2de76c18a528bd6a9cdde438df747bfcba3e05d6f\"\n\n[[package]]\nname = \"getopts\"\nversion = \"0.2.21\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"14dbbfd5c71d70241ecf9e6f13737f7b5ce823821063188d7e46c41d371eebd5\"\ndependencies = [\n \"unicode-width 0.1.14\",\n]\n\n[[package]]\nname = \"getrandom\"\nversion = \"0.2.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c4567c8db10ae91089c99af84c68c38da3ec2f087c3f82960bcdbf3656b6f4d7\"\ndependencies = [\n \"cfg-if\",\n \"libc\",\n \"wasi\",\n]\n\n[[package]]\nname = \"gimli\"\nversion = \"0.31.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"07e28edb80900c19c28f1072f2e8aeca7fa06b23cd4169cefe1af5aa3260783f\"\n\n[[package]]\nname = \"glob\"\nversion = \"0.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a8d1add55171497b4705a648c6b583acafb01d58050a51727785f0b2c8e0a2b2\"\n\n[[package]]\nname = \"graph-cycles\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3a6ad932c6dd3cfaf16b66754a42f87bbeefd591530c4b6a8334270a7df3e853\"\ndependencies = [\n \"ahash\",\n \"petgraph\",\n \"thiserror 1.0.69\",\n]\n\n[[package]]\nname = \"hashbrown\"\nversion = \"0.14.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e5274423e17b7c9fc20b6e7e208532f9b19825d82dfd615708b70edd83df41f1\"\ndependencies = [\n \"ahash\",\n]\n\n[[package]]\nname = \"hashbrown\"\nversion = \"0.15.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bf151400ff0baff5465007dd2f3e717f3fe502074ca563069ce3a6629d07b289\"\ndependencies = [\n \"foldhash\",\n]\n\n[[package]]\nname = \"hashlink\"\nversion = \"0.9.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6ba4ff7128dee98c7dc9794b6a411377e1404dba1c97deb8d1a55297bd25d8af\"\ndependencies = [\n \"hashbrown 0.14.5\",\n \"serde\",\n]\n\n[[package]]\nname = \"heck\"\nversion = \"0.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2304e00983f87ffb38b55b444b5e3b60a884b5d30c0fca7d82fe33449bbe55ea\"\n\n[[package]]\nname = \"home\"\nversion = \"0.5.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"589533453244b0995c858700322199b2becb13b627df2851f64a2775d024abcf\"\ndependencies = [\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"humantime\"\nversion = \"2.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9a3a5bfb195931eeb336b2a7b4d761daec841b97f947d34394601737a7bba5e4\"\n\n[[package]]\nname = \"ident_case\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b9e0384b61958566e926dc50660321d12159025e767c18e043daf26b70104c39\"\n\n[[package]]\nname = \"indent_write\"\nversion = \"2.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0cfe9645a18782869361d9c8732246be7b410ad4e919d3609ebabdac00ba12c3\"\n\n[[package]]\nname = \"index_vec\"\nversion = \"0.1.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"44faf5bb8861a9c72e20d3fb0fdbd59233e43056e2b80475ab0aacdc2e781355\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"indexmap\"\nversion = \"2.7.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"62f822373a4fe84d4bb149bf54e584a7f4abec90e072ed49cda0edea5b95471f\"\ndependencies = [\n \"equivalent\",\n \"hashbrown 0.15.2\",\n]\n\n[[package]]\nname = \"indoc\"\nversion = \"2.0.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b248f5224d1d606005e02c97f5aa4e88eeb230488bcc03bc9ca4d7991399f2b5\"\n\n[[package]]\nname = \"is_terminal_polyfill\"\nversion = \"1.70.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7943c866cc5cd64cbc25b2e01621d07fa8eb2a1a23160ee81ce38704e97b8ecf\"\n\n[[package]]\nname = \"itertools\"\nversion = \"0.13.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"413ee7dfc52ee1a4949ceeb7dbc8a33f2d6c088194d9f922fb8318faf1f01186\"\ndependencies = [\n \"either\",\n]\n\n[[package]]\nname = \"itoa\"\nversion = \"1.0.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d75a2a4b1b190afb6f5425f10f6a8f959d2ea0b9c2b1d79553551850539e4674\"\n\n[[package]]\nname = \"joinery\"\nversion = \"2.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"72167d68f5fce3b8655487b8038691a3c9984ee769590f93f2a631f4ad64e4f5\"\n\n[[package]]\nname = \"kani\"\nversion = \"0.58.0\"\ndependencies = [\n \"kani_core\",\n \"kani_macros\",\n]\n\n[[package]]\nname = \"kani-compiler\"\nversion = \"0.58.0\"\ndependencies = [\n \"charon\",\n \"clap\",\n \"cprover_bindings\",\n \"home\",\n \"itertools\",\n \"kani_metadata\",\n \"lazy_static\",\n \"num\",\n \"quote\",\n \"regex\",\n \"serde\",\n \"serde_json\",\n \"shell-words\",\n \"strum\",\n \"strum_macros\",\n \"syn\",\n \"tracing\",\n \"tracing-subscriber\",\n \"tracing-tree 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"kani-cov\"\nversion = \"0.1.0\"\ndependencies = [\n \"anyhow\",\n \"clap\",\n \"console\",\n \"serde\",\n \"serde_derive\",\n \"serde_json\",\n \"tree-sitter\",\n \"tree-sitter-rust\",\n]\n\n[[package]]\nname = \"kani-driver\"\nversion = \"0.58.0\"\ndependencies = [\n \"anyhow\",\n \"cargo_metadata\",\n \"clap\",\n \"colour\",\n \"comfy-table\",\n \"console\",\n \"glob\",\n \"kani_metadata\",\n \"once_cell\",\n \"pathdiff\",\n \"rand\",\n \"rayon\",\n \"regex\",\n \"rustc-demangle\",\n \"serde\",\n \"serde_json\",\n \"strum\",\n \"strum_macros\",\n \"tempfile\",\n \"time\",\n \"to_markdown_table\",\n \"tokio\",\n \"toml\",\n \"tracing\",\n \"tracing-subscriber\",\n \"which\",\n]\n\n[[package]]\nname = \"kani-verifier\"\nversion = \"0.58.0\"\ndependencies = [\n \"anyhow\",\n \"home\",\n \"os_info\",\n]\n\n[[package]]\nname = \"kani_core\"\nversion = \"0.58.0\"\ndependencies = [\n \"kani_macros\",\n]\n\n[[package]]\nname = \"kani_macros\"\nversion = \"0.58.0\"\ndependencies = [\n \"proc-macro-error2\",\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"kani_metadata\"\nversion = \"0.58.0\"\ndependencies = [\n \"clap\",\n \"cprover_bindings\",\n \"serde\",\n \"strum\",\n \"strum_macros\",\n]\n\n[[package]]\nname = \"lazy_static\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bbd2bcb4c963f2ddae06a2efc7e9f3591312473c50c6685e1f298068316e66fe\"\n\n[[package]]\nname = \"libc\"\nversion = \"0.2.169\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b5aba8db14291edd000dfcc4d620c7ebfb122c613afb886ca8803fa4e128a20a\"\n\n[[package]]\nname = \"linear-map\"\nversion = \"1.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bfae20f6b19ad527b550c223fddc3077a547fc70cda94b9b566575423fd303ee\"\ndependencies = [\n \"serde\",\n \"serde_test\",\n]\n\n[[package]]\nname = \"linux-raw-sys\"\nversion = \"0.4.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"78b3ae25bc7c8c38cec158d1f2757ee79e9b3740fbc7ccf0e59e4b08d793fa89\"\n\n[[package]]\nname = \"lock_api\"\nversion = \"0.4.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"07af8b9cdd281b7915f413fa73f29ebd5d55d0d3f0155584dade1ff18cea1b17\"\ndependencies = [\n \"autocfg\",\n \"scopeguard\",\n]\n\n[[package]]\nname = \"log\"\nversion = \"0.4.22\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a7a70ba024b9dc04c27ea2f0c0548feb474ec5c54bba33a7f72f873a39d07b24\"\n\n[[package]]\nname = \"macros\"\nversion = \"0.1.0\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"matchers\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8263075bb86c5a1b1427b5ae862e8889656f126e9f77c484496e8b47cf5c5558\"\ndependencies = [\n \"regex-automata 0.1.10\",\n]\n\n[[package]]\nname = \"memchr\"\nversion = \"2.7.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"78ca9ab1a0babb1e7d5695e3530886289c18cf2f87ec19a575a0abdce112e3a3\"\n\n[[package]]\nname = \"memuse\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3d97bbf43eb4f088f8ca469930cde17fa036207c9a5e02ccc5107c4e8b17c964\"\n\n[[package]]\nname = \"minimal-lexical\"\nversion = \"0.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"68354c5c6bd36d73ff3feceb05efa59b6acb7626617f4962be322a825e61f79a\"\n\n[[package]]\nname = \"miniz_oxide\"\nversion = \"0.8.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4ffbe83022cedc1d264172192511ae958937694cd57ce297164951b8b3568394\"\ndependencies = [\n \"adler2\",\n]\n\n[[package]]\nname = \"mio\"\nversion = \"1.0.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2886843bf800fba2e3377cff24abf6379b4c4d5c6681eaf9ea5b0d15090450bd\"\ndependencies = [\n \"libc\",\n \"wasi\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"nom\"\nversion = \"7.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d273983c5a657a70a3e8f2a01329822f3b8c8172b73826411a55751e404a0a4a\"\ndependencies = [\n \"memchr\",\n \"minimal-lexical\",\n]\n\n[[package]]\nname = \"nom-supreme\"\nversion = \"0.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2bd3ae6c901f1959588759ff51c95d24b491ecb9ff91aa9c2ef4acc5b1dcab27\"\ndependencies = [\n \"brownstone\",\n \"indent_write\",\n \"joinery\",\n \"memchr\",\n \"nom\",\n]\n\n[[package]]\nname = \"nu-ansi-term\"\nversion = \"0.46.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"77a8165726e8236064dbb45459242600304b42a5ea24ee2948e18e023bf7ba84\"\ndependencies = [\n \"overload\",\n \"winapi\",\n]\n\n[[package]]\nname = \"nu-ansi-term\"\nversion = \"0.50.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d4a28e057d01f97e61255210fcff094d74ed0466038633e95017f5beb68e4399\"\ndependencies = [\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"num\"\nversion = \"0.4.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"35bd024e8b2ff75562e5f34e7f4905839deb4b22955ef5e73d2fea1b9813cb23\"\ndependencies = [\n \"num-bigint\",\n \"num-complex\",\n \"num-integer\",\n \"num-iter\",\n \"num-rational\",\n \"num-traits\",\n]\n\n[[package]]\nname = \"num-bigint\"\nversion = \"0.4.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a5e44f723f1133c9deac646763579fdb3ac745e418f2a7af9cd0c431da1f20b9\"\ndependencies = [\n \"num-integer\",\n \"num-traits\",\n]\n\n[[package]]\nname = \"num-complex\"\nversion = \"0.4.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"73f88a1307638156682bada9d7604135552957b7818057dcef22705b4d509495\"\ndependencies = [\n \"num-traits\",\n]\n\n[[package]]\nname = \"num-conv\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"51d515d32fb182ee37cda2ccdcb92950d6a3c2893aa280e540671c2cd0f3b1d9\"\n\n[[package]]\nname = \"num-integer\"\nversion = \"0.1.46\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7969661fd2958a5cb096e56c8e1ad0444ac2bbcd0061bd28660485a44879858f\"\ndependencies = [\n \"num-traits\",\n]\n\n[[package]]\nname = \"num-iter\"\nversion = \"0.1.45\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1429034a0490724d0075ebb2bc9e875d6503c3cf69e235a8941aa757d83ef5bf\"\ndependencies = [\n \"autocfg\",\n \"num-integer\",\n \"num-traits\",\n]\n\n[[package]]\nname = \"num-rational\"\nversion = \"0.4.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f83d14da390562dca69fc84082e73e548e1ad308d24accdedd2720017cb37824\"\ndependencies = [\n \"num-bigint\",\n \"num-integer\",\n \"num-traits\",\n]\n\n[[package]]\nname = \"num-traits\"\nversion = \"0.2.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"071dfc062690e90b734c0b2273ce72ad0ffa95f0c74596bc250dcfd960262841\"\ndependencies = [\n \"autocfg\",\n]\n\n[[package]]\nname = \"num_threads\"\nversion = \"0.1.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5c7398b9c8b70908f6371f47ed36737907c87c52af34c268fed0bf0ceb92ead9\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"object\"\nversion = \"0.36.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"62948e14d923ea95ea2c7c86c71013138b66525b86bdc08d2dcc262bdb497b87\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"once_cell\"\nversion = \"1.20.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1261fe7e33c73b354eab43b1273a57c8f967d0391e80353e51f764ac02cf6775\"\n\n[[package]]\nname = \"os_info\"\nversion = \"3.9.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6e6520c8cc998c5741ee68ec1dc369fc47e5f0ea5320018ecf2a1ccd6328f48b\"\ndependencies = [\n \"log\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"overload\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b15813163c1d831bf4a13c3610c05c0d03b39feb07f7e09fa234dac9b15aaf39\"\n\n[[package]]\nname = \"parking_lot\"\nversion = \"0.12.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f1bf18183cf54e8d6059647fc3063646a1801cf30896933ec2311622cc4b9a27\"\ndependencies = [\n \"lock_api\",\n \"parking_lot_core\",\n]\n\n[[package]]\nname = \"parking_lot_core\"\nversion = \"0.9.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1e401f977ab385c9e4e3ab30627d6f26d00e2c73eef317493c4ec6d468726cf8\"\ndependencies = [\n \"cfg-if\",\n \"libc\",\n \"redox_syscall\",\n \"smallvec\",\n \"windows-targets\",\n]\n\n[[package]]\nname = \"pathdiff\"\nversion = \"0.2.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"df94ce210e5bc13cb6651479fa48d14f601d9858cfe0467f43ae157023b938d3\"\n\n[[package]]\nname = \"petgraph\"\nversion = \"0.6.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b4c5cc86750666a3ed20bdaf5ca2a0344f9c67674cae0515bec2da16fbaa47db\"\ndependencies = [\n \"fixedbitset\",\n \"indexmap\",\n]\n\n[[package]]\nname = \"pin-project-lite\"\nversion = \"0.2.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"915a1e146535de9163f3987b8944ed8cf49a18bb0056bcebcdcece385cece4ff\"\n\n[[package]]\nname = \"powerfmt\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"439ee305def115ba05938db6eb1644ff94165c5ab5e9420d1c1bcedbba909391\"\n\n[[package]]\nname = \"ppv-lite86\"\nversion = \"0.2.20\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"77957b295656769bb8ad2b6a6b09d897d94f05c41b069aede1fcdaa675eaea04\"\ndependencies = [\n \"zerocopy\",\n]\n\n[[package]]\nname = \"predicates\"\nversion = \"3.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a5d19ee57562043d37e82899fade9a22ebab7be9cef5026b07fda9cdd4293573\"\ndependencies = [\n \"anstyle\",\n \"difflib\",\n \"predicates-core\",\n]\n\n[[package]]\nname = \"predicates-core\"\nversion = \"1.0.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"727e462b119fe9c93fd0eb1429a5f7647394014cf3c04ab2c0350eeb09095ffa\"\n\n[[package]]\nname = \"predicates-tree\"\nversion = \"1.0.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"72dd2d6d381dfb73a193c7fca536518d7caee39fc8503f74e7dc0be0531b425c\"\ndependencies = [\n \"predicates-core\",\n \"termtree\",\n]\n\n[[package]]\nname = \"proc-macro-error-attr2\"\nversion = \"2.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"96de42df36bb9bba5542fe9f1a054b8cc87e172759a1868aa05c1f3acc89dfc5\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n]\n\n[[package]]\nname = \"proc-macro-error2\"\nversion = \"2.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"11ec05c52be0a07b08061f7dd003e7d7092e0472bc731b4af7bb1ef876109802\"\ndependencies = [\n \"proc-macro-error-attr2\",\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"proc-macro2\"\nversion = \"1.0.92\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"37d3544b3f2748c54e147655edb5025752e2303145b5aefb3c3ea2c78b973bb0\"\ndependencies = [\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"psm\"\nversion = \"0.1.24\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"200b9ff220857e53e184257720a14553b2f4aa02577d2ed9842d45d4b9654810\"\ndependencies = [\n \"cc\",\n]\n\n[[package]]\nname = \"quote\"\nversion = \"1.0.38\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0e4dccaaaf89514f546c693ddc140f729f958c247918a13380cccc6078391acc\"\ndependencies = [\n \"proc-macro2\",\n]\n\n[[package]]\nname = \"rand\"\nversion = \"0.8.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"34af8d1a0e25924bc5b7c43c079c942339d8f0a8b57c39049bef581b46327404\"\ndependencies = [\n \"libc\",\n \"rand_chacha\",\n \"rand_core\",\n]\n\n[[package]]\nname = \"rand_chacha\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e6c10a63a0fa32252be49d21e7709d4d4baf8d231c2dbce1eaa8141b9b127d88\"\ndependencies = [\n \"ppv-lite86\",\n \"rand_core\",\n]\n\n[[package]]\nname = \"rand_core\"\nversion = \"0.6.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ec0be4795e2f6a28069bec0b5ff3e2ac9bafc99e6a9a7dc3547996c5c816922c\"\ndependencies = [\n \"getrandom\",\n]\n\n[[package]]\nname = \"rayon\"\nversion = \"1.10.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b418a60154510ca1a002a752ca9714984e21e4241e804d32555251faf8b78ffa\"\ndependencies = [\n \"either\",\n \"rayon-core\",\n]\n\n[[package]]\nname = \"rayon-core\"\nversion = \"1.12.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1465873a3dfdaa8ae7cb14b4383657caab0b3e8a0aa9ae8e04b044854c8dfce2\"\ndependencies = [\n \"crossbeam-deque\",\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"redox_syscall\"\nversion = \"0.5.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"03a862b389f93e68874fbf580b9de08dd02facb9a788ebadaf4a3fd33cf58834\"\ndependencies = [\n \"bitflags\",\n]\n\n[[package]]\nname = \"regex\"\nversion = \"1.11.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b544ef1b4eac5dc2db33ea63606ae9ffcfac26c1416a2806ae0bf5f56b201191\"\ndependencies = [\n \"aho-corasick\",\n \"memchr\",\n \"regex-automata 0.4.9\",\n \"regex-syntax 0.8.5\",\n]\n\n[[package]]\nname = \"regex-automata\"\nversion = \"0.1.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6c230d73fb8d8c1b9c0b3135c5142a8acee3a0558fb8db5cf1cb65f8d7862132\"\ndependencies = [\n \"regex-syntax 0.6.29\",\n]\n\n[[package]]\nname = \"regex-automata\"\nversion = \"0.4.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"809e8dc61f6de73b46c85f4c96486310fe304c434cfa43669d7b40f711150908\"\ndependencies = [\n \"aho-corasick\",\n \"memchr\",\n \"regex-syntax 0.8.5\",\n]\n\n[[package]]\nname = \"regex-syntax\"\nversion = \"0.6.29\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f162c6dd7b008981e4d40210aca20b4bd0f9b60ca9271061b07f78537722f2e1\"\n\n[[package]]\nname = \"regex-syntax\"\nversion = \"0.8.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2b15c43186be67a4fd63bee50d0303afffcef381492ebe2c5d87f324e1b8815c\"\n\n[[package]]\nname = \"rustc-demangle\"\nversion = \"0.1.24\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"719b953e2095829ee67db738b3bfa9fa368c94900df327b3f07fe6e794d2fe1f\"\n\n[[package]]\nname = \"rustc_version\"\nversion = \"0.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cfcb3a22ef46e85b45de6ee7e79d063319ebb6594faafcf1c225ea92ab6e9b92\"\ndependencies = [\n \"semver\",\n]\n\n[[package]]\nname = \"rustix\"\nversion = \"0.38.42\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f93dc38ecbab2eb790ff964bb77fa94faf256fd3e73285fd7ba0903b76bedb85\"\ndependencies = [\n \"bitflags\",\n \"errno\",\n \"libc\",\n \"linux-raw-sys\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"rustversion\"\nversion = \"1.0.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f7c45b9784283f1b2e7fb61b42047c2fd678ef0960d4f6f1eba131594cc369d4\"\n\n[[package]]\nname = \"ryu\"\nversion = \"1.0.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f3cb5ba0dc43242ce17de99c180e96db90b235b8a9fdc9543c96d2209116bd9f\"\n\n[[package]]\nname = \"same-file\"\nversion = \"1.0.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"93fc1dc3aaa9bfed95e02e6eadabb4baf7e3078b0bd1b4d7b6b0b68378900502\"\ndependencies = [\n \"winapi-util\",\n]\n\n[[package]]\nname = \"scanner\"\nversion = \"0.0.0\"\ndependencies = [\n \"csv\",\n \"graph-cycles\",\n \"petgraph\",\n \"serde\",\n \"strum\",\n \"strum_macros\",\n]\n\n[[package]]\nname = \"scopeguard\"\nversion = \"1.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"94143f37725109f92c262ed2cf5e59bce7498c01bcc1502d7b9afe439a4e9f49\"\n\n[[package]]\nname = \"semver\"\nversion = \"1.0.24\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3cb6eb87a131f756572d7fb904f6e7b68633f09cca868c5df1c4b8d1a694bbba\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"serde\"\nversion = \"1.0.217\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"02fc4265df13d6fa1d00ecff087228cc0a2b5f3c0e87e258d8b94a156e984c70\"\ndependencies = [\n \"serde_derive\",\n]\n\n[[package]]\nname = \"serde-map-to-array\"\nversion = \"1.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c14b52efc56c711e0dbae3f26e0cc233f5dac336c1bf0b07e1b7dc2dca3b2cc7\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"serde_derive\"\nversion = \"1.0.217\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5a9bf7cf98d04a2b28aead066b7496853d4779c9cc183c440dbac457641e19a0\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"serde_json\"\nversion = \"1.0.134\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d00f4175c42ee48b15416f6193a959ba3a0d67fc699a0db9ad12df9f83991c7d\"\ndependencies = [\n \"indexmap\",\n \"itoa\",\n \"memchr\",\n \"ryu\",\n \"serde\",\n]\n\n[[package]]\nname = \"serde_spanned\"\nversion = \"0.6.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"87607cb1398ed59d48732e575a4c28a7a8ebf2454b964fe3f224f2afc07909e1\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"serde_stacker\"\nversion = \"0.1.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"babfccff5773ff80657f0ecf553c7c516bdc2eb16389c0918b36b73e7015276e\"\ndependencies = [\n \"serde\",\n \"stacker\",\n]\n\n[[package]]\nname = \"serde_test\"\nversion = \"1.0.177\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7f901ee573cab6b3060453d2d5f0bae4e6d628c23c0a962ff9b5f1d7c8d4f1ed\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"serde_yaml\"\nversion = \"0.9.34+deprecated\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6a8b1a1a2ebf674015cc02edccce75287f1a0130d394307b36743c2f5d504b47\"\ndependencies = [\n \"indexmap\",\n \"itoa\",\n \"ryu\",\n \"serde\",\n \"unsafe-libyaml\",\n]\n\n[[package]]\nname = \"sharded-slab\"\nversion = \"0.1.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f40ca3c46823713e0d4209592e8d6e826aa57e928f09752619fc696c499637f6\"\ndependencies = [\n \"lazy_static\",\n]\n\n[[package]]\nname = \"shell-words\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"24188a676b6ae68c3b2cb3a01be17fbf7240ce009799bb56d5b1409051e78fde\"\n\n[[package]]\nname = \"shlex\"\nversion = \"1.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0fda2ff0d084019ba4d7c6f371c95d8fd75ce3524c3cb8fb653a3023f6323e64\"\n\n[[package]]\nname = \"signal-hook-registry\"\nversion = \"1.4.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a9e9e0b4211b72e7b8b6e85c807d36c212bdb33ea8587f7569562a84df5465b1\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"smallvec\"\nversion = \"1.13.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3c5e1a9a646d36c3599cd173a41282daf47c44583ad367b8e6837255952e5c67\"\n\n[[package]]\nname = \"stacker\"\nversion = \"0.1.17\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"799c883d55abdb5e98af1a7b3f23b9b6de8ecada0ecac058672d7635eb48ca7b\"\ndependencies = [\n \"cc\",\n \"cfg-if\",\n \"libc\",\n \"psm\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"std\"\nversion = \"0.58.0\"\ndependencies = [\n \"kani\",\n]\n\n[[package]]\nname = \"streaming-iterator\"\nversion = \"0.1.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2b2231b7c3057d5e4ad0156fb3dc807d900806020c5ffa3ee6ff2c8c76fb8520\"\n\n[[package]]\nname = \"string-interner\"\nversion = \"0.18.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1a3275464d7a9f2d4cac57c89c2ef96a8524dba2864c8d6f82e3980baf136f9b\"\ndependencies = [\n \"hashbrown 0.15.2\",\n \"serde\",\n]\n\n[[package]]\nname = \"strsim\"\nversion = \"0.11.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7da8b5736845d9f2fcb837ea5d9e2628564b3b043a70948a3f0b778838c5fb4f\"\n\n[[package]]\nname = \"strum\"\nversion = \"0.26.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8fec0f0aef304996cf250b31b5a10dee7980c85da9d759361292b8bca5a18f06\"\n\n[[package]]\nname = \"strum_macros\"\nversion = \"0.26.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4c6bee85a5a24955dc440386795aa378cd9cf82acd5f764469152d2270e581be\"\ndependencies = [\n \"heck\",\n \"proc-macro2\",\n \"quote\",\n \"rustversion\",\n \"syn\",\n]\n\n[[package]]\nname = \"syn\"\nversion = \"2.0.95\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"46f71c0377baf4ef1cc3e3402ded576dccc315800fbc62dfc7fe04b009773b4a\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"take_mut\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f764005d11ee5f36500a149ace24e00e3da98b0158b3e2d53a7495660d3f4d60\"\n\n[[package]]\nname = \"tempfile\"\nversion = \"3.15.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9a8a559c81686f576e8cd0290cd2a24a2a9ad80c98b3478856500fcbd7acd704\"\ndependencies = [\n \"cfg-if\",\n \"fastrand\",\n \"getrandom\",\n \"once_cell\",\n \"rustix\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"termtree\"\nversion = \"0.5.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8f50febec83f5ee1df3015341d8bd429f2d1cc62bcba7ea2076759d315084683\"\n\n[[package]]\nname = \"thiserror\"\nversion = \"1.0.69\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b6aaf5339b578ea85b50e080feb250a3e8ae8cfcdff9a461c9ec2904bc923f52\"\ndependencies = [\n \"thiserror-impl 1.0.69\",\n]\n\n[[package]]\nname = \"thiserror\"\nversion = \"2.0.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f072643fd0190df67a8bab670c20ef5d8737177d6ac6b2e9a236cb096206b2cc\"\ndependencies = [\n \"thiserror-impl 2.0.9\",\n]\n\n[[package]]\nname = \"thiserror-impl\"\nversion = \"1.0.69\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4fee6c4efc90059e10f81e6d42c60a18f76588c3d74cb83a0b242a2b6c7504c1\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"thiserror-impl\"\nversion = \"2.0.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7b50fa271071aae2e6ee85f842e2e28ba8cd2c5fb67f11fcb1fd70b276f9e7d4\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"thread_local\"\nversion = \"1.1.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8b9ef9bad013ada3808854ceac7b46812a6465ba368859a37e2100283d2d719c\"\ndependencies = [\n \"cfg-if\",\n \"once_cell\",\n]\n\n[[package]]\nname = \"time\"\nversion = \"0.3.37\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"35e7868883861bd0e56d9ac6efcaaca0d6d5d82a2a7ec8209ff492c07cf37b21\"\ndependencies = [\n \"deranged\",\n \"itoa\",\n \"libc\",\n \"num-conv\",\n \"num_threads\",\n \"powerfmt\",\n \"serde\",\n \"time-core\",\n \"time-macros\",\n]\n\n[[package]]\nname = \"time-core\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ef927ca75afb808a4d64dd374f00a2adf8d0fcff8e7b184af886c3c87ec4a3f3\"\n\n[[package]]\nname = \"time-macros\"\nversion = \"0.2.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2834e6017e3e5e4b9834939793b282bc03b37a3336245fa820e35e233e2a85de\"\ndependencies = [\n \"num-conv\",\n \"time-core\",\n]\n\n[[package]]\nname = \"to_markdown_table\"\nversion = \"0.1.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8450ade61b78735ed7811cc14639462723d87a6cd748a41e7bfde554ac5033dd\"\ndependencies = [\n \"thiserror 1.0.69\",\n]\n\n[[package]]\nname = \"tokio\"\nversion = \"1.42.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5cec9b21b0450273377fc97bd4c33a8acffc8c996c987a7c5b319a0083707551\"\ndependencies = [\n \"backtrace\",\n \"bytes\",\n \"libc\",\n \"mio\",\n \"pin-project-lite\",\n \"signal-hook-registry\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"toml\"\nversion = \"0.8.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a1ed1f98e3fdc28d6d910e6737ae6ab1a93bf1985935a1193e68f93eeb68d24e\"\ndependencies = [\n \"serde\",\n \"serde_spanned\",\n \"toml_datetime\",\n \"toml_edit\",\n]\n\n[[package]]\nname = \"toml_datetime\"\nversion = \"0.6.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0dd7358ecb8fc2f8d014bf86f6f638ce72ba252a2c3a2572f2a795f1d23efb41\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"toml_edit\"\nversion = \"0.22.22\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4ae48d6208a266e853d946088ed816055e556cc6028c5e8e2b84d9fa5dd7c7f5\"\ndependencies = [\n \"indexmap\",\n \"serde\",\n \"serde_spanned\",\n \"toml_datetime\",\n \"winnow\",\n]\n\n[[package]]\nname = \"tracing\"\nversion = \"0.1.41\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"784e0ac535deb450455cbfa28a6f0df145ea1bb7ae51b821cf5e7927fdcfbdd0\"\ndependencies = [\n \"pin-project-lite\",\n \"tracing-attributes\",\n \"tracing-core\",\n]\n\n[[package]]\nname = \"tracing-attributes\"\nversion = \"0.1.28\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"395ae124c09f9e6918a2310af6038fba074bcf474ac352496d5910dd59a2226d\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"tracing-core\"\nversion = \"0.1.33\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e672c95779cf947c5311f83787af4fa8fffd12fb27e4993211a84bdfd9610f9c\"\ndependencies = [\n \"once_cell\",\n \"valuable\",\n]\n\n[[package]]\nname = \"tracing-log\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ee855f1f400bd0e5c02d150ae5de3840039a3f54b025156404e34c23c03f47c3\"\ndependencies = [\n \"log\",\n \"once_cell\",\n \"tracing-core\",\n]\n\n[[package]]\nname = \"tracing-serde\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"704b1aeb7be0d0a84fc9828cae51dab5970fee5088f83d1dd7ee6f6246fc6ff1\"\ndependencies = [\n \"serde\",\n \"tracing-core\",\n]\n\n[[package]]\nname = \"tracing-subscriber\"\nversion = \"0.3.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e8189decb5ac0fa7bc8b96b7cb9b2701d60d48805aca84a238004d665fcc4008\"\ndependencies = [\n \"matchers\",\n \"nu-ansi-term 0.46.0\",\n \"once_cell\",\n \"parking_lot\",\n \"regex\",\n \"serde\",\n \"serde_json\",\n \"sharded-slab\",\n \"smallvec\",\n \"thread_local\",\n \"tracing\",\n \"tracing-core\",\n \"tracing-log\",\n \"tracing-serde\",\n]\n\n[[package]]\nname = \"tracing-tree\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f459ca79f1b0d5f71c54ddfde6debfc59c8b6eeb46808ae492077f739dc7b49c\"\ndependencies = [\n \"nu-ansi-term 0.50.1\",\n \"tracing-core\",\n \"tracing-log\",\n \"tracing-subscriber\",\n]\n\n[[package]]\nname = \"tracing-tree\"\nversion = \"0.4.0\"\nsource = \"git+https://github.com/Nadrieril/tracing-tree#841286bfffd3c2200810244506cd127013dbeff9\"\ndependencies = [\n \"nu-ansi-term 0.50.1\",\n \"time\",\n \"tracing-core\",\n \"tracing-log\",\n \"tracing-subscriber\",\n]\n\n[[package]]\nname = \"tree-sitter\"\nversion = \"0.24.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5f2434c86ba59ed15af56039cc5bf1acf8ba76ce301e32ef08827388ef285ec5\"\ndependencies = [\n \"cc\",\n \"regex\",\n \"regex-syntax 0.8.5\",\n \"streaming-iterator\",\n \"tree-sitter-language\",\n]\n\n[[package]]\nname = \"tree-sitter-language\"\nversion = \"0.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c199356c799a8945965bb5f2c55b2ad9d9aa7c4b4f6e587fe9dea0bc715e5f9c\"\n\n[[package]]\nname = \"tree-sitter-rust\"\nversion = \"0.23.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a4d64d449ca63e683c562c7743946a646671ca23947b9c925c0cfbe65051a4af\"\ndependencies = [\n \"cc\",\n \"tree-sitter-language\",\n]\n\n[[package]]\nname = \"unicode-ident\"\nversion = \"1.0.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"adb9e6ca4f869e1180728b7950e35922a7fc6397f7b641499e8f3ef06e50dc83\"\n\n[[package]]\nname = \"unicode-segmentation\"\nversion = \"1.12.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f6ccf251212114b54433ec949fd6a7841275f9ada20dddd2f29e9ceea4501493\"\n\n[[package]]\nname = \"unicode-width\"\nversion = \"0.1.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7dd6e30e90baa6f72411720665d41d89b9a3d039dc45b8faea1ddd07f617f6af\"\n\n[[package]]\nname = \"unicode-width\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1fc81956842c57dac11422a97c3b8195a1ff727f06e85c84ed2e8aa277c9a0fd\"\n\n[[package]]\nname = \"unsafe-libyaml\"\nversion = \"0.2.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"673aac59facbab8a9007c7f6108d11f63b603f7cabff99fabf650fea5c32b861\"\n\n[[package]]\nname = \"utf8parse\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"06abde3611657adf66d383f00b093d7faecc7fa57071cce2578660c9f1010821\"\n\n[[package]]\nname = \"valuable\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"830b7e5d4d90034032940e4ace0d9a9a057e7a45cd94e6c007832e39edb82f6d\"\n\n[[package]]\nname = \"version_check\"\nversion = \"0.9.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0b928f33d975fc6ad9f86c8f283853ad26bdd5b10b7f1542aa2fa15e2289105a\"\n\n[[package]]\nname = \"wait-timeout\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9f200f5b12eb75f8c1ed65abd4b2db8a6e1b138a20de009dacee265a2498f3f6\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"walkdir\"\nversion = \"2.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"29790946404f91d9c5d06f9874efddea1dc06c5efe94541a7d6863108e3a5e4b\"\ndependencies = [\n \"same-file\",\n \"winapi-util\",\n]\n\n[[package]]\nname = \"wasi\"\nversion = \"0.11.0+wasi-snapshot-preview1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9c8d87e72b64a3b4db28d11ce29237c246188f4f51057d65a7eab63b7987e423\"\n\n[[package]]\nname = \"which\"\nversion = \"7.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fb4a9e33648339dc1642b0e36e21b3385e6148e289226f657c809dee59df5028\"\ndependencies = [\n \"either\",\n \"env_home\",\n \"rustix\",\n \"winsafe\",\n]\n\n[[package]]\nname = \"winapi\"\nversion = \"0.3.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5c839a674fcd7a98952e593242ea400abe93992746761e38641405d28b00f419\"\ndependencies = [\n \"winapi-i686-pc-windows-gnu\",\n \"winapi-x86_64-pc-windows-gnu\",\n]\n\n[[package]]\nname = \"winapi-i686-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ac3b87c63620426dd9b991e5ce0329eff545bccbbb34f3be09ff6fb6ab51b7b6\"\n\n[[package]]\nname = \"winapi-util\"\nversion = \"0.1.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cf221c93e13a30d793f7645a0e7762c55d169dbb0a49671918a2319d289b10bb\"\ndependencies = [\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"winapi-x86_64-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"712e227841d057c1ee1cd2fb22fa7e5a5461ae8e48fa2ca79ec42cfc1931183f\"\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.52.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"282be5f36a8ce781fad8c8ae18fa3f9beff57ec1b52cb3de0789201425d9a33d\"\ndependencies = [\n \"windows-targets\",\n]\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.59.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1e38bc4d79ed67fd075bcc251a1c39b32a1776bbe92e5bef1f0bf1f8c531853b\"\ndependencies = [\n \"windows-targets\",\n]\n\n[[package]]\nname = \"windows-targets\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9b724f72796e036ab90c1021d4780d4d3d648aca59e491e6b98e725b84e99973\"\ndependencies = [\n \"windows_aarch64_gnullvm\",\n \"windows_aarch64_msvc\",\n \"windows_i686_gnu\",\n \"windows_i686_gnullvm\",\n \"windows_i686_msvc\",\n \"windows_x86_64_gnu\",\n \"windows_x86_64_gnullvm\",\n \"windows_x86_64_msvc\",\n]\n\n[[package]]\nname = \"windows_aarch64_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"32a4622180e7a0ec044bb555404c800bc9fd9ec262ec147edd5989ccd0c02cd3\"\n\n[[package]]\nname = \"windows_aarch64_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"09ec2a7bb152e2252b53fa7803150007879548bc709c039df7627cabbd05d469\"\n\n[[package]]\nname = \"windows_i686_gnu\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8e9b5ad5ab802e97eb8e295ac6720e509ee4c243f69d781394014ebfe8bbfa0b\"\n\n[[package]]\nname = \"windows_i686_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0eee52d38c090b3caa76c563b86c3a4bd71ef1a819287c19d586d7334ae8ed66\"\n\n[[package]]\nname = \"windows_i686_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"240948bc05c5e7c6dabba28bf89d89ffce3e303022809e73deaefe4f6ec56c66\"\n\n[[package]]\nname = \"windows_x86_64_gnu\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"147a5c80aabfbf0c7d901cb5895d1de30ef2907eb21fbbab29ca94c5b08b1a78\"\n\n[[package]]\nname = \"windows_x86_64_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"24d5b23dc417412679681396f2b49f3de8c1473deb516bd34410872eff51ed0d\"\n\n[[package]]\nname = \"windows_x86_64_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"589f6da84c646204747d1270a2a5661ea66ed1cced2631d546fdfb155959f9ec\"\n\n[[package]]\nname = \"winnow\"\nversion = \"0.6.22\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"39281189af81c07ec09db316b302a3e67bf9bd7cbf6c820b50e35fee9c2fa980\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"winsafe\"\nversion = \"0.0.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d135d17ab770252ad95e9a872d365cf3090e3be864a34ab46f48555993efc904\"\n\n[[package]]\nname = \"zerocopy\"\nversion = \"0.7.35\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1b9b4fd18abc82b8136838da5d50bae7bdea537c574d8dc1a34ed098d6c166f0\"\ndependencies = [\n \"byteorder\",\n \"zerocopy-derive\",\n]\n\n[[package]]\nname = \"zerocopy-derive\"\nversion = \"0.7.35\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fa4f8080344d4671fb4e831a13ad1e68092748387dfc4f55e356242fae12ce3e\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n"
        },
        {
          "name": "Cargo.toml",
          "type": "blob",
          "size": 1.8955078125,
          "content": "# Copyright Kani Contributors\n# SPDX-License-Identifier: Apache-2.0 OR MIT\n\n[package]\nname = \"kani-verifier\"\nversion = \"0.58.0\"\nedition = \"2021\"\ndescription = \"A bit-precise model checker for Rust.\"\nreadme = \"README.md\"\nkeywords = [\"model-checking\", \"verification\"]\ncategories = [\"development-tools\"]\nlicense = \"MIT OR Apache-2.0\"\nrepository = \"https://github.com/model-checking/kani\"\ndocumentation = \"https://model-checking.github.io/kani/\"\nhomepage = \"https://github.com/model-checking/kani\"\n# N.B. Cargo.* is included automatically:\ninclude = [\"/src\", \"/build.rs\", \"/rust-toolchain.toml\", \"/LICENSE-*\", \"/README.md\", \"/CHANGELOG.md\"]\n\n[dependencies]\nanyhow = \"1\"\nhome = \"0.5\"\nos_info = { version = \"3\", default-features = false }\n\n[[bin]]\nname = \"kani\"\npath = \"src/bin/kani.rs\"\n\n[[bin]]\nname = \"cargo-kani\"\npath = \"src/bin/cargo_kani.rs\"\n\n[profile.release]\nstrip = \"debuginfo\"\n\n# Below is the workspace (vs above is \"kani-verifier\" crate) config:\n\n[workspace]\nmembers = [\n  \"library/kani\",\n  \"library/std\",\n  \"tools/compiletest\",\n  \"tools/build-kani\",\n  \"tools/kani-cov\",\n  \"tools/scanner\",\n  \"kani-driver\",\n  \"kani-compiler\",\n  \"kani_metadata\",\n  \"library/kani_core\",\n]\n\n# This indicates what package to e.g. build with 'cargo build' without --workspace\ndefault-members = [\n  \".\",\n  \"kani-driver\",\n  \"kani-compiler\",\n]\n\nexclude = [\n  \"build\",\n  \"charon\",\n  \"target\",\n  # dependency tests have their own workspace\n  \"tests/kani-dependency-test/dependency3\",\n  # cargo kani tests should also have their own workspace\n  \"tests/cargo-kani\",\n  \"tests/perf\",\n  \"tests/cargo-ui\",\n  \"tests/slow\",\n  \"tests/std-checks\",\n  \"tests/assess-scan-test-scaffold\",\n  \"tests/script-based-pre\",\n  \"tests/script-based-pre/build-cache-bin/target/new_dep\",\n  \"tests/script-based-pre/build-cache-dirty/target/new_dep\",\n  \"tests/script-based-pre/verify_std_cmd/tmp_dir/target/kani_verify_std\",\n]\n\n[workspace.lints.clippy]\ntoo_long_first_doc_paragraph = \"allow\"\n"
        },
        {
          "name": "LICENSE-APACHE",
          "type": "blob",
          "size": 9.4951171875,
          "content": "                              Apache License\n                        Version 2.0, January 2004\n                     http://www.apache.org/licenses/\n\nTERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n1. Definitions.\n\n   \"License\" shall mean the terms and conditions for use, reproduction,\n   and distribution as defined by Sections 1 through 9 of this document.\n\n   \"Licensor\" shall mean the copyright owner or entity authorized by\n   the copyright owner that is granting the License.\n\n   \"Legal Entity\" shall mean the union of the acting entity and all\n   other entities that control, are controlled by, or are under common\n   control with that entity. For the purposes of this definition,\n   \"control\" means (i) the power, direct or indirect, to cause the\n   direction or management of such entity, whether by contract or\n   otherwise, or (ii) ownership of fifty percent (50%) or more of the\n   outstanding shares, or (iii) beneficial ownership of such entity.\n\n   \"You\" (or \"Your\") shall mean an individual or Legal Entity\n   exercising permissions granted by this License.\n\n   \"Source\" form shall mean the preferred form for making modifications,\n   including but not limited to software source code, documentation\n   source, and configuration files.\n\n   \"Object\" form shall mean any form resulting from mechanical\n   transformation or translation of a Source form, including but\n   not limited to compiled object code, generated documentation,\n   and conversions to other media types.\n\n   \"Work\" shall mean the work of authorship, whether in Source or\n   Object form, made available under the License, as indicated by a\n   copyright notice that is included in or attached to the work\n   (an example is provided in the Appendix below).\n\n   \"Derivative Works\" shall mean any work, whether in Source or Object\n   form, that is based on (or derived from) the Work and for which the\n   editorial revisions, annotations, elaborations, or other modifications\n   represent, as a whole, an original work of authorship. For the purposes\n   of this License, Derivative Works shall not include works that remain\n   separable from, or merely link (or bind by name) to the interfaces of,\n   the Work and Derivative Works thereof.\n\n   \"Contribution\" shall mean any work of authorship, including\n   the original version of the Work and any modifications or additions\n   to that Work or Derivative Works thereof, that is intentionally\n   submitted to Licensor for inclusion in the Work by the copyright owner\n   or by an individual or Legal Entity authorized to submit on behalf of\n   the copyright owner. For the purposes of this definition, \"submitted\"\n   means any form of electronic, verbal, or written communication sent\n   to the Licensor or its representatives, including but not limited to\n   communication on electronic mailing lists, source code control systems,\n   and issue tracking systems that are managed by, or on behalf of, the\n   Licensor for the purpose of discussing and improving the Work, but\n   excluding communication that is conspicuously marked or otherwise\n   designated in writing by the copyright owner as \"Not a Contribution.\"\n\n   \"Contributor\" shall mean Licensor and any individual or Legal Entity\n   on behalf of whom a Contribution has been received by Licensor and\n   subsequently incorporated within the Work.\n\n2. Grant of Copyright License. Subject to the terms and conditions of\n   this License, each Contributor hereby grants to You a perpetual,\n   worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n   copyright license to reproduce, prepare Derivative Works of,\n   publicly display, publicly perform, sublicense, and distribute the\n   Work and such Derivative Works in Source or Object form.\n\n3. Grant of Patent License. Subject to the terms and conditions of\n   this License, each Contributor hereby grants to You a perpetual,\n   worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n   (except as stated in this section) patent license to make, have made,\n   use, offer to sell, sell, import, and otherwise transfer the Work,\n   where such license applies only to those patent claims licensable\n   by such Contributor that are necessarily infringed by their\n   Contribution(s) alone or by combination of their Contribution(s)\n   with the Work to which such Contribution(s) was submitted. If You\n   institute patent litigation against any entity (including a\n   cross-claim or counterclaim in a lawsuit) alleging that the Work\n   or a Contribution incorporated within the Work constitutes direct\n   or contributory patent infringement, then any patent licenses\n   granted to You under this License for that Work shall terminate\n   as of the date such litigation is filed.\n\n4. Redistribution. You may reproduce and distribute copies of the\n   Work or Derivative Works thereof in any medium, with or without\n   modifications, and in Source or Object form, provided that You\n   meet the following conditions:\n\n   (a) You must give any other recipients of the Work or\n       Derivative Works a copy of this License; and\n\n   (b) You must cause any modified files to carry prominent notices\n       stating that You changed the files; and\n\n   (c) You must retain, in the Source form of any Derivative Works\n       that You distribute, all copyright, patent, trademark, and\n       attribution notices from the Source form of the Work,\n       excluding those notices that do not pertain to any part of\n       the Derivative Works; and\n\n   (d) If the Work includes a \"NOTICE\" text file as part of its\n       distribution, then any Derivative Works that You distribute must\n       include a readable copy of the attribution notices contained\n       within such NOTICE file, excluding those notices that do not\n       pertain to any part of the Derivative Works, in at least one\n       of the following places: within a NOTICE text file distributed\n       as part of the Derivative Works; within the Source form or\n       documentation, if provided along with the Derivative Works; or,\n       within a display generated by the Derivative Works, if and\n       wherever such third-party notices normally appear. The contents\n       of the NOTICE file are for informational purposes only and\n       do not modify the License. You may add Your own attribution\n       notices within Derivative Works that You distribute, alongside\n       or as an addendum to the NOTICE text from the Work, provided\n       that such additional attribution notices cannot be construed\n       as modifying the License.\n\n   You may add Your own copyright statement to Your modifications and\n   may provide additional or different license terms and conditions\n   for use, reproduction, or distribution of Your modifications, or\n   for any such Derivative Works as a whole, provided Your use,\n   reproduction, and distribution of the Work otherwise complies with\n   the conditions stated in this License.\n\n5. Submission of Contributions. Unless You explicitly state otherwise,\n   any Contribution intentionally submitted for inclusion in the Work\n   by You to the Licensor shall be under the terms and conditions of\n   this License, without any additional terms or conditions.\n   Notwithstanding the above, nothing herein shall supersede or modify\n   the terms of any separate license agreement you may have executed\n   with Licensor regarding such Contributions.\n\n6. Trademarks. This License does not grant permission to use the trade\n   names, trademarks, service marks, or product names of the Licensor,\n   except as required for reasonable and customary use in describing the\n   origin of the Work and reproducing the content of the NOTICE file.\n\n7. Disclaimer of Warranty. Unless required by applicable law or\n   agreed to in writing, Licensor provides the Work (and each\n   Contributor provides its Contributions) on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n   implied, including, without limitation, any warranties or conditions\n   of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n   PARTICULAR PURPOSE. You are solely responsible for determining the\n   appropriateness of using or redistributing the Work and assume any\n   risks associated with Your exercise of permissions under this License.\n\n8. Limitation of Liability. In no event and under no legal theory,\n   whether in tort (including negligence), contract, or otherwise,\n   unless required by applicable law (such as deliberate and grossly\n   negligent acts) or agreed to in writing, shall any Contributor be\n   liable to You for damages, including any direct, indirect, special,\n   incidental, or consequential damages of any character arising as a\n   result of this License or out of the use or inability to use the\n   Work (including but not limited to damages for loss of goodwill,\n   work stoppage, computer failure or malfunction, or any and all\n   other commercial damages or losses), even if such Contributor\n   has been advised of the possibility of such damages.\n\n9. Accepting Warranty or Additional Liability. While redistributing\n   the Work or Derivative Works thereof, You may choose to offer,\n   and charge a fee for, acceptance of support, warranty, indemnity,\n   or other liability obligations and/or rights consistent with this\n   License. However, in accepting such obligations, You may act only\n   on Your own behalf and on Your sole responsibility, not on behalf\n   of any other Contributor, and only if You agree to indemnify,\n   defend, and hold each Contributor harmless for any liability\n   incurred by, or claims asserted against, such Contributor by reason\n   of your accepting any such warranty or additional liability.\n\nEND OF TERMS AND CONDITIONS\n"
        },
        {
          "name": "LICENSE-MIT",
          "type": "blob",
          "size": 0.9990234375,
          "content": "Permission is hereby granted, free of charge, to any\nperson obtaining a copy of this software and associated\ndocumentation files (the \"Software\"), to deal in the\nSoftware without restriction, including without\nlimitation the rights to use, copy, modify, merge,\npublish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software\nis furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice\nshall be included in all copies or substantial portions\nof the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF\nANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED\nTO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\nPARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT\nSHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR\nIN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\nDEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.0849609375,
          "content": "![](./kani-logo.png)\n[![Kani regression](https://github.com/model-checking/kani/actions/workflows/kani.yml/badge.svg)](https://github.com/model-checking/kani/actions/workflows/kani.yml)\n[![Nightly: CBMC Latest](https://github.com/model-checking/kani/actions/workflows/cbmc-latest.yml/badge.svg)](https://github.com/model-checking/kani/actions/workflows/cbmc-latest.yml)\n\nThe Kani Rust Verifier is a bit-precise model checker for Rust.\n\nKani is particularly useful for verifying unsafe code blocks in Rust, where the \"[unsafe superpowers](https://doc.rust-lang.org/stable/book/ch19-01-unsafe-rust.html#unsafe-superpowers)\" are unchecked by the compiler.\n___\nKani verifies:\n * Memory safety (e.g., null pointer dereferences)\n * User-specified assertions (i.e., `assert!(...)`)\n * The absence of panics (e.g., `unwrap()` on `None` values)\n * The absence of some types of unexpected behavior (e.g., arithmetic overflows)\n\n## Installation\n\nTo install the latest version of Kani ([Rust 1.58+; Linux or Mac](https://model-checking.github.io/kani/install-guide.html)), run:\n\n```bash\ncargo install --locked kani-verifier\ncargo kani setup\n```\n\nSee [the installation guide](https://model-checking.github.io/kani/install-guide.html) for more details.\n\n## How to use Kani\n\nSimilar to testing, you write a harness, but with Kani you can check all possible values using `kani::any()`:\n\n```rust\nuse my_crate::{function_under_test, meets_specification, precondition};\n\n#[kani::proof]\nfn check_my_property() {\n   // Create a nondeterministic input\n   let input = kani::any();\n\n   // Constrain it according to the function's precondition\n   kani::assume(precondition(input));\n\n   // Call the function under verification\n   let output = function_under_test(input);\n\n   // Check that it meets the specification\n   assert!(meets_specification(input, output));\n}\n```\n\nKani will then try to prove that all valid inputs produce acceptable outputs, without panicking or executing unexpected behavior.\nOtherwise Kani will generate a trace that points to the failure.\nWe recommend following [the tutorial](https://model-checking.github.io/kani/kani-tutorial.html) to learn more about how to use Kani.\n\n## GitHub Action\n\nUse Kani in your CI with `model-checking/kani-github-action@VERSION`. See the\n[GitHub Action section in the Kani\nbook](https://model-checking.github.io/kani/install-github-ci.html)\nfor details.\n\n## Security\nSee [SECURITY](https://github.com/model-checking/kani/security/policy) for more information.\n\n## Contributing\nIf you are interested in contributing to Kani, please take a look at [the developer documentation](https://model-checking.github.io/kani/dev-documentation.html).\n\n## License\n### Kani\nKani is distributed under the terms of both the MIT license and the Apache License (Version 2.0).\n\nSee [LICENSE-APACHE](LICENSE-APACHE) and [LICENSE-MIT](LICENSE-MIT) for details.\n\n### Rust\nKani contains code from the Rust project.\nRust is primarily distributed under the terms of both the MIT license and the Apache License (Version 2.0), with portions covered by various BSD-like licenses.\n\nSee [the Rust repository](https://github.com/rust-lang/rust) for details.\n"
        },
        {
          "name": "build.rs",
          "type": "blob",
          "size": 0.6357421875,
          "content": "// Copyright Kani Contributors\n// SPDX-License-Identifier: Apache-2.0 OR MIT\n\nuse std::env::var;\n\nfn main() {\n    // We want to know what target triple we were built with, but this isn't normally provided to us.\n    // Note the difference between:\n    // https://doc.rust-lang.org/cargo/reference/environment-variables.html#environment-variables-cargo-sets-for-crates\n    // https://doc.rust-lang.org/cargo/reference/environment-variables.html#environment-variables-cargo-sets-for-build-scripts\n    // So \"repeat\" the info from build script (here) to our crate's build environment.\n    println!(\"cargo:rustc-env=TARGET={}\", var(\"TARGET\").unwrap());\n}\n"
        },
        {
          "name": "charon",
          "type": "commit",
          "content": null
        },
        {
          "name": "cprover_bindings",
          "type": "tree",
          "content": null
        },
        {
          "name": "deny.toml",
          "type": "blob",
          "size": 1.4716796875,
          "content": "# Copyright Kani Contributors\n# SPDX-License-Identifier: Apache-2.0 OR MIT\n\n# This section is considered when running `cargo deny check advisories`\n# More documentation for the advisories section can be found here:\n# https://embarkstudios.github.io/cargo-deny/checks/advisories/cfg.html\n[advisories]\ndb-path = \"~/.cargo/advisory-db\"\ndb-urls = [\"https://github.com/rustsec/advisory-db\"]\nyanked = \"deny\"\n\n# This section is considered when running `cargo deny check licenses`\n# More documentation for the licenses section can be found here:\n# https://embarkstudios.github.io/cargo-deny/checks/licenses/cfg.html\n[licenses]\nallow = [\n    \"MIT\",\n    \"Apache-2.0\",\n]\nconfidence-threshold = 0.8\n\n# All these exceptions should probably appear in: tools/build-kani/license-notes.txt\nexceptions = [\n    { name = \"unicode-ident\", allow=[\"Unicode-3.0\"] },\n    { name = \"foldhash\", allow=[\"Zlib\"] },\n]\n\n[licenses.private]\nignore = false\n\n# This section is considered when running `cargo deny check bans`.\n# More documentation about the 'bans' section can be found here:\n# https://embarkstudios.github.io/cargo-deny/checks/bans/cfg.html\n[bans]\nmultiple-versions = \"warn\"\nwildcards = \"allow\"\n\n# This section is considered when running `cargo deny check sources`.\n# More documentation about the 'sources' section can be found here:\n# https://embarkstudios.github.io/cargo-deny/checks/sources/cfg.html\n[sources]\nunknown-registry = \"deny\"\nunknown-git = \"deny\"\nallow-registry = [\"https://github.com/rust-lang/crates.io-index\"]\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "favicon.ico",
          "type": "blob",
          "size": 14.732421875,
          "content": null
        },
        {
          "name": "firecracker",
          "type": "commit",
          "content": null
        },
        {
          "name": "kani-compiler",
          "type": "tree",
          "content": null
        },
        {
          "name": "kani-dependencies",
          "type": "blob",
          "size": 0.0732421875,
          "content": "CBMC_MAJOR=\"6\"\nCBMC_MINOR=\"4\"\nCBMC_VERSION=\"6.4.1\"\n\nKISSAT_VERSION=\"4.0.1\"\n"
        },
        {
          "name": "kani-driver",
          "type": "tree",
          "content": null
        },
        {
          "name": "kani-logo.png",
          "type": "blob",
          "size": 83.400390625,
          "content": null
        },
        {
          "name": "kani-verifier-security.public.key",
          "type": "blob",
          "size": 1.70703125,
          "content": "-----BEGIN PGP PUBLIC KEY BLOCK-----\nVersion: GnuPG v2.0.22 (GNU/Linux)\n\nmQENBGJgjSQBCADGxrzSgt15n9FOOeQeYDhYRQPzF7haV4Pav71x0z9O1y2IlWVZ\nx+IVT0biyXPQXiR0kOUpSkJhOg+KUm9QzS8TReSxp40RglYpLxZYt6jFUOdZuJPV\nBvxlrb/OG9ev+DSpOBBdp+oYOFacsEgtmGfEnelRr+725F8WdmmJMc6bm8xH2Ox1\n9bPwwn6OSvo8Kp8ebN6bP0wYiq+ooaOw8Muk7zgIOxvpHgnyEpgmkfz4zoxMcRja\npeU8IzawiAcBv9cYIrthl+q4G2UrlV9kHGOAwxKyKVnu9YU7jx683wSv8wYAIhht\ndqYAYSfLsa4l9/jj45MmnuUHhvNqkUrqs5ahABEBAAG0Nkthbmkgc2VjdXJpdHkg\ndGVhbSA8a2FuaS12ZXJpZmllci1zZWN1cml0eUBhbWF6b24uY29tPokBOQQTAQIA\nIwUCYmCNJAIbAwcLCQgHAwIBBhUIAgkKCwQWAgMBAh4BAheAAAoJEKF/cGVJsPsV\nvxUIAMa9IthQF3fGR5iQHLQgBwQXtSYuVe0yD0IA0tIuwYUo1YLO31ApxzAocXI2\nVNVuPIhDI3GCQgR9hfN7phDzQlVHrPt/GKarloWdiMWLkUKl37AzgYdDtcpPHI0X\nvZwj6Kk58fVzEenBTuk1silbwgj2xYrs0MP22aa8lxJ5SSreNNqx4CuFjfb+bkja\n7EvtQJI/NELYjBXeQWME8pJR+u0s4+0CTlANwfQqUdzX50gKDYA3YbMQpxT1i1Ju\nRLAX/ssDb6/0gauQSziptwlYYtRL5w6ybJnPCfOXIEMYco0cF8aSZdFKR0WmHf6f\nvUOIYsPNIaYAiD/wlXZBt8DlwZC5AQ0EYmCNJAEIAL2NM0Jj10ppqNdF3Q4FYIEl\nKTEyjjSRjgLJ7s05VQbM6ZV2Gh2zrMYTHmUMYk73GhRc4DwWp2hyzdeX4OOocGvO\n+ti3BArQPhEZ0NhbTQVPD2zKKq45N5AF1r4ke4lfb7DYNkMEn9xJ9wnj/xeYYlHU\nZhZ3Ac5Y6Z8QbS6f77I65xn4Ui2OftA55JjTlD+IsmqQO+AVhcKfiD5jgAgFLYCI\nLERgaNge2yhX+D6S7xTlJCrLpaFec/MgR+PhLXHiZCbV23eQbT3hqPFN5biBGWiT\nbFaxLyME+Et+1YvY/Br63PREAT4g9i9jAMyasp6VHx/MQrVtBHHJRvMSlFleFd0A\nEQEAAYkBHwQYAQIACQUCYmCNJAIbDAAKCRChf3BlSbD7Fap3CACO1h7eTAsLtsP2\nImzCkN8QJ0HjP/Pu66fgM3rRfxl6aoaeeu95sBf8V4WxjoqKOmwNGOe0obRKghAP\nAXh4hwOri+1nr1JXKM2lXmbHP9GGYBtNvvLbWyDTBL50dZM74aAFNHLBHIIHL17U\nkKM9WC8Yi+07zrDlcmZXRquAFrN6DR2K7xSkOcwFby0K1rPTUHQJIcGaqvc3j2YP\nZNMVg/ClLAJ456B2VAxbdaJK9RjY9aq3GapOb0Gshi1+48w/Lq2GHbgb3167VOFg\nIOan2z2NfbCfasituHMyxTqgTawUR5hu2pV9l7w/Upiepp2TWbhzhgqPmrRMAn3s\nYmMgsyBY\n=kphk\n-----END PGP PUBLIC KEY BLOCK-----\n"
        },
        {
          "name": "kani_metadata",
          "type": "tree",
          "content": null
        },
        {
          "name": "library",
          "type": "tree",
          "content": null
        },
        {
          "name": "papers",
          "type": "tree",
          "content": null
        },
        {
          "name": "rfc",
          "type": "tree",
          "content": null
        },
        {
          "name": "rust-toolchain.toml",
          "type": "blob",
          "size": 0.1787109375,
          "content": "# Copyright Kani Contributors\n# SPDX-License-Identifier: Apache-2.0 OR MIT\n\n[toolchain]\nchannel = \"nightly-2025-01-07\"\ncomponents = [\"llvm-tools\", \"rustc-dev\", \"rust-src\", \"rustfmt\"]\n"
        },
        {
          "name": "rustfmt.toml",
          "type": "blob",
          "size": 0.4365234375,
          "content": "# Copyright Kani Contributors\n# SPDX-License-Identifier: Apache-2.0 OR MIT\n\n# Run rustfmt with this config (it should be picked up automatically).\nedition = \"2021\"\nstyle_edition = \"2024\"\nuse_small_heuristics = \"Max\"\nmerge_derives = false\n\nignore = [\n    \"**/build/\",\n    \"**/target/\",\n\n    # Do not format submodules\n    # For some reason, this is not working without the directory wildcard.\n    \"**/firecracker\",\n    \"**/tests/perf/s2n-quic/\",\n]\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}