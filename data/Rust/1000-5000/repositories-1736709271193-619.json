{
  "metadata": {
    "timestamp": 1736709271193,
    "page": 619,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjYyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "JohnnyMorganz/StyLua",
      "stars": 1685,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".cargo",
          "type": "tree",
          "content": null
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.3076171875,
          "content": "root = true\n\n[*]\nend_of_line = lf\ncharset = utf-8\ntrim_trailing_whitespace = true\ninsert_final_newline = true\n\n[*.{rs,toml}]\nindent_style = space\nindent_size = 4\n\n[*.lua]\nindent_style = tab\nindent_size = 4\n\n[*.{md,markdown}]\nindent_style = space\nindent_size = 2\n\n[*.{yaml,yml}]\nindent_style = space\nindent_size = 2\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.0615234375,
          "content": "* text=auto\n*.lua text eol=lf\ntests/inputs/* linguist-vendored\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0068359375,
          "content": "/target"
        },
        {
          "name": ".pre-commit-hooks.yaml",
          "type": "blob",
          "size": 0.4521484375,
          "content": "---\n- id: stylua\n  name: StyLua (cargo)\n  description: An opinionated Lua code formatter\n  entry: stylua\n  language: rust\n  types:\n    - lua\n\n- id: stylua-system\n  name: StyLua (system)\n  description: An opinionated Lua code formatter\n  entry: stylua\n  language: system\n  types:\n    - lua\n\n- id: stylua-github\n  name: StyLua (Github)\n  description: An opinionated Lua code formatter. Downloads Github release\n  entry: stylua\n  language: python\n  types:\n    - lua\n"
        },
        {
          "name": ".vscode",
          "type": "tree",
          "content": null
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 60.720703125,
          "content": "# Changelog\n\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n\n## [Unreleased]\n\n### Added\n\n- Luau: Added support for parsing user-defined type functions ([#938](https://github.com/JohnnyMorganz/StyLua/issues/938))\n\n### Fixed\n\n- Luau: fixed parentheses incorrectly removed in `(expr :: assertion) < foo` when multilining the expression, leading to a syntax error ([#940](https://github.com/JohnnyMorganz/StyLua/issues/940))\n\n## [2.0.2] - 2024-12-07\n\n### Fixed\n\n- Fixed regression where configuration present in current working directory not used when formatting from stdin and no `--stdin-filepath` is provided ([#928](https://github.com/JohnnyMorganz/StyLua/issues/928))\n- Luau: fixed incorrect indentation for leading token in union / intersection when hanging ([#932](https://github.com/JohnnyMorganz/StyLua/issues/932))\n\n## [2.0.1] - 2024-11-18\n\n### Added\n\n- Verbose mode will now show resolved options\n\n### Fixed\n\n- Fixed CLI overrides not applying on top of a resolved `stylua.toml` file ([#925](https://github.com/JohnnyMorganz/StyLua/issues/925))\n\n## [2.0.0] - 2024-11-17\n\n### Breaking Changes\n\n- For automated downloaders: the legacy release artifacts `stylua-win64.zip`, `stylua-linux.zip` and `stylua-macos.zip` are no longer produced in GitHub releases, in favour of more specific names (e.g., `stylua-windows-x86_64`, `stylua-linux-x86_64` and `stylua-macos-x86_64`).\n- `--stdin-filepath` no longer respects ignore files by default, in line with passing files directly to the command line. Now, `stylua --stdin-filepath foo.lua -` will still format the stdin even if `foo.lua` was in a `.styluaignore` file. Use `--respect-ignores` to preserve the original behaviour.\n- Removed deprecated access patterns on `Config` struct in stylua Rust library\n\n### Added\n\n- Added runtime syntax configuration option `syntax` to help handle ambiguous syntax. By default, StyLua builds and runs with a parser to handle all Lua versions. However, the syntax of some Lua versions conflict with eachother: most notably, Lua 5.2+ goto label syntax `::label::` and Luau type assertion operator `::`. This option allows choosing what syntax to parse, to handle these conflicts. ([#407](https://github.com/JohnnyMorganz/StyLua/issues/407))\n- Added configuration option `space_after_function_names` to specify whether to include a space between a function name and parentheses ([#839](https://github.com/JohnnyMorganz/StyLua/issues/839))\n\n### Changed\n\n- Update internal Lua parser version (full-moon) to v1.1.0. This includes parser performance improvements. ([#854](https://github.com/JohnnyMorganz/StyLua/issues/854))\n- LuaJIT is now separated from Lua52, and is available in its own feature and syntax flag\n- `.stylua.toml` config resolution now supports looking up config files next to files being formatted, recursively going\n  upwards until reaching the current working directory, then stopping (unless `--search-parent-directories` was specified).\n  For example, for a file `./src/test.lua`, executing `stylua src/` will look for `./src/stylua.toml` and then `./stylua.toml`.\n- When `collapse_simple_statement` is enabled, if the enclosing block is a return, we will check if the return expression is \"simple\" (currently, not containing a function definition) ([#898](https://github.com/JohnnyMorganz/StyLua/issues/898))\n\n### Fixed\n\n- Fixed formatting of method call chain when there is a comment between the colon token `:` and the function name ([#890](https://github.com/JohnnyMorganz/StyLua/issues/890))\n- Removed accidental random print to stdout when formatting a return statement across multiple lines ([#879](https://github.com/JohnnyMorganz/StyLua/issues/879))\n- Luau: Fixed incorrect removal of semicolon before compound assignment with parentheses leading to ambiguous syntax error ([#885](https://github.com/JohnnyMorganz/StyLua/issues/885))\n- Luau: Fixed incorrect collapsing of union/intersection type value with comments in a type table leading to a syntax error ([#893](https://github.com/JohnnyMorganz/StyLua/issues/893))\n- Fixed `--verify` panicing due to overflow for very large Hex numbers ([#875](https://github.com/JohnnyMorganz/StyLua/issues/875), [#889](https://github.com/JohnnyMorganz/StyLua/issues/889))\n\n## [0.20.0] - 2024-01-20\n\n### Added\n\n- Introduced a new release artifact `stylua-linux-x86_64-musl` ([#834](https://github.com/JohnnyMorganz/StyLua/issues/834))\n\n### Changed\n\n- Files excluded by git (via `.gitignore` or global git configuration), as well as in an `.ignore` file (used by ripgrep and The Silver Searcher)\n  will now also be ignored by StyLua (as if they were all `.styluaignore` files). ([#833](https://github.com/JohnnyMorganz/StyLua/issues/833))\n\n### Fixed\n\n- Fixed handling of floor division (`//`) syntax when only Luau FFlag is enabled\n- Fixed missing space when table is inside of Luau interpolated string expression (`{{` is invalid syntax)\n- The CLI tool will now only write files if the contents differ, and not modify if no change ([#827](https://github.com/JohnnyMorganz/StyLua/issues/827))\n- Fixed parentheses around a Luau compound type inside of a type table indexer being removed causing a syntax error ([#828](https://github.com/JohnnyMorganz/StyLua/issues/828))\n- Fixed function body parentheses being placed on multiple lines unnecessarily when there are no parameters ([#830](https://github.com/JohnnyMorganz/StyLua/issues/830))\n- Fixed directory paths w/o globs in `.styluaignore` not matching when using `--respect-ignores` ([#845](https://github.com/JohnnyMorganz/StyLua/issues/845))\n\n## [0.19.1] - 2023-11-15\n\nThis release has no changes. It resolves an issue in our test suite that may affect downstream package management tooling\nfailing tests ([#824](https://github.com/JohnnyMorganz/StyLua/issues/824))\n\n## [0.19.0] - 2023-11-12\n\n### Added\n\n- Added flag `--respect-ignores`. By default, files explicitly passed to stylua (e.g. `stylua foo.lua`) will always be formatted, regardless of whether the file is ignored. Enabling this flag will consider `.styluaignore` or glob matches before formatting the file. ([#765](https://github.com/JohnnyMorganz/StyLua/issues/765))\n  - Note: for backwards compatibility reasons, formatting via stdin always respects ignores. This behaviour will change in the next major release\n\n### Changed\n\n- Updated parser crate with following changes:\n\n  - Support Luau floor division (`//`)\n  - Fix Luau string interpolation parsing\n  - Fix Luau `\\z` escape parsing\n\n- Simplified access and modification patterns for StyLua configuration. You can now access the properties directly\n\n  - **Deprecated:** the old access patterns of `.property()` and `.with_property()` are now deprecated\n  - **Breaking Change (WASM):** due to JS/TS lack of differentiation between `.property` / `.property()` implementation, the `.property()` functions were removed from WASM output.\n\n- Multiline comments before commas will now remain in place and not move to after the comma. This is to support type-assertions-via-comments that is commonly used by some language servers. ([#778](https://github.com/JohnnyMorganz/StyLua/issues/778))\n\n### Fixed\n\n- Wasm build now correctly supports configuring sort requires ([#818](https://github.com/JohnnyMorganz/StyLua/issues/818))\n\n## [0.18.2] - 2023-09-10\n\n### Fixed\n\n- Fixed LuaJIT suffixes `LL`/`ULL` causing a panic when running in `--verify` mode ([#750](https://github.com/JohnnyMorganz/StyLua/issues/750))\n- Fixed incorrect formatting of conditionals when `collapse_simple_statement` is enabled and the block begins with an empty line ([#744](https://github.com/JohnnyMorganz/StyLua/issues/744))\n- Fixed formatting of dot function call chains with comment between dot and names ([#747](https://github.com/JohnnyMorganz/StyLua/issues/747))\n\n## [0.18.1] - 2023-07-15\n\n### Fixed\n\n- Fixed parentheses around a single Luau type pack in a generic being removed causing syntax errors ([#729](https://github.com/JohnnyMorganz/StyLua/issues/729))\n\n## [0.18.0] - 2023-06-14\n\n### Added\n\n- Multiline ignores (`-- stylua: ignore start` / `-- stylua: ignore end`) will now work within table fields ([#705](https://github.com/JohnnyMorganz/StyLua/issues/705)):\n\n```lua\nrequire(\"foo\").bar {\n\t-- stylua: ignore start\n\tbaz      =0, -- < not formatted\n\tfoo   =   2, -- < not formatted\n\t-- stylua: ignore end\n\tbar        =     1234 -- formatted\n}\n```\n\n- Added option `\"Input\"` to `call_parentheses` setting, where call parentheses are retained based on their presence in the original input code. ([#668](https://github.com/JohnnyMorganz/StyLua/issues/668))\n  Note: this setting removes all automation in determining call parentheses, and consistency is not enforced.\n\n### Changed\n\n- Improved heuristics around Luau type excess parentheses removal, so unnecessary types are removed in more locations\n\n### Fixed\n\n- Function calls are now formatted onto multiple lines if the opening brace `{` of a multiline table forces one of the lines over width ([#704](https://github.com/JohnnyMorganz/StyLua/issues/704))\n- Fixed missing option `--sort-requires` to enable sort requires on the command line ([#669](https://github.com/JohnnyMorganz/StyLua/issues/669))\n\n```sh\n$ stylua --sort-requires test.lua\n```\n\n- Fixed parentheses removed around Luau optional type `(B?)` causing syntax errors when present in an intersection `A & (B?)` ([#679](https://github.com/JohnnyMorganz/StyLua/issues/679))\n- Fixed comments lost when parentheses removed around Luau types\n- Fixed race condition where if a file is passed more than once as an argument to format, then it could potentially be wiped completely (for example, if an ancestor directory is passed and recursively searched, as well as the file itself) ([#708](https://github.com/JohnnyMorganz/StyLua/issues/708))\n\n## [0.17.1] - 2023-03-30\n\n### Fixed\n\n- Bumped internal parser dependency which should fix parsing problems for comments with Chinese characters, and multiline string escapes\n- Fixed comments in punctuated lists for return statements or assignments being incorrectly formatted leading to syntax errors ([#662](https://github.com/JohnnyMorganz/StyLua/issues/662))\n- Fixed line endings not being correctly formatted in multiline string literals and comments ([#665](https://github.com/JohnnyMorganz/StyLua/issues/665))\n\n## [0.17.0] - 2023-03-11\n\n### Added\n\n- Added support for \"sort requires\", which sorts top-level statements of the form `local NAME = require(EXPR)` lexicographically on `NAME`.\n  We do this by treating a group of consecutive requires as a \"block\", and then sorting **only within** the block. Any other statement, or an empty line, between require statements will split the group into two separate blocks (and can be used to separate the sorting). A block of requires will not move around the file.\n  Roblox Luau statements of the form `local NAME = game:GetService(EXPR)` will also be sorted separately.\n\nThis feature is disabled by default. To enable it, add the following to your `stylua.toml`:\n\n```toml\n[sort_requires]\nenabled = true\n```\n\nNote: we assume that all requires are **pure** with no side effects. It is not recommended to use this feature if the ordering of your requires matter.\n\n- Added support for [EditorConfig](https://editorconfig.org/), which is taken into account only if no `stylua.toml` was found.\n\nThis feature is enabled by default, it can be disabled using `--no-editorconfig`.\n\n- Published StyLua to the [Docker Hub](https://hub.docker.com/r/johnnymorganz/stylua)\n\n## [0.16.1] - 2023-02-10\n\n### Fixed\n\n- Fixed mistransformation of a function argument in a multilined function call when the argument contains a comment, causing a syntax error. We now attempt to hang the expression ([#648](https://github.com/JohnnyMorganz/StyLua/issues/648))\n- Fixed verify AST flagging a false positive for parentheses removed around a Luau type ([#643](https://github.com/JohnnyMorganz/StyLua/issues/643))\n\n## [0.16.0] - 2023-01-15\n\n### Added\n\n- Unnecessary parentheses around Luau types will now be removed ([#611](https://github.com/JohnnyMorganz/StyLua/issues/611))\n- Collapse a body containing only a `goto` statement when `collapse_simple_statement` is set ([#618](https://github.com/JohnnyMorganz/StyLua/issues/618))\n\n### Changed\n\n- Update internal parser:\n  - (`lua52`) Support Lua 5.2 fractional hexidecimal / hexidecimal with exponents ([#621](https://github.com/JohnnyMorganz/StyLua/issues/621))\n  - (`lua52`) Support LuaJIT number suffixes LL/ULL/i ([#621](https://github.com/JohnnyMorganz/StyLua/issues/621))\n  - (`lua52`) Support `\\z` escape sequences in strings ([#613](https://github.com/JohnnyMorganz/StyLua/issues/613))\n  - (`luau`) Support Luau string interpolation ([#607](https://github.com/JohnnyMorganz/StyLua/issues/607))\n- Several optimisations applied to formatting functions to reduce time taken. Files which previously did not terminate (6MB+) now finish in reasonable time. ([#591](https://github.com/JohnnyMorganz/StyLua/issues/591))\n- Assignments of the form `local name = function` will no longer hang at the equals token, and instead force parameters multiline, to reduce unnecessary indentation. ([#595](https://github.com/JohnnyMorganz/StyLua/issues/595))\n\n### Fixed\n\n- Fixed an anonymous function assignment `local x = function()` being unnecessarily indented if the function body contains a comment ([#627](https://github.com/JohnnyMorganz/StyLua/issues/627))\n- Fixed malformed formatting when there is a newline between a `return` token and the expressions ([#605](https://github.com/JohnnyMorganz/StyLua/issues/605))\n- Fixed malformed formatting of multi-assignment or multi-returns where there is a comment within the expressions list ([#637](https://github.com/JohnnyMorganz/StyLua/issues/637))\n\n## [0.15.3] - 2022-12-07\n\n### Fixed\n\n- Fixed necessary parentheses removed in `(-X) ^ Y` causing change in semantics ([#623](https://github.com/JohnnyMorganz/StyLua/issues/623))\n- Take into account `function` token size when formatting an anonymous function `function() end` (particularly relevant when collapsing simple statements) ([#619](https://github.com/JohnnyMorganz/StyLua/issues/619))\n- Support hanging inside of Luau type arrays `{ T }` to fix formatting issues when comments are present ([#617](https://github.com/JohnnyMorganz/StyLua/issues/617))\n\n## [0.15.2] - 2022-10-31\n\n### Fixed\n\n- Fix incorrect indentation level used for hanging expressions in if expression syntax ([#596](https://github.com/JohnnyMorganz/StyLua/issues/596))\n- Fixed Luau return type in parentheses containing a comment on the last item being collapsed causing a syntax error ([#608](https://github.com/JohnnyMorganz/StyLua/issues/608))\n- Fix parentheses removed which highlight precedence in `(not X) == Y` causing linting errors ([#609](https://github.com/JohnnyMorganz/StyLua/issues/609))\n- Fix build script for `@johnnymorganz/stylua` to include all lua and luau features ([#614](https://github.com/JohnnyMorganz/StyLua/issues/614))\n\n## [0.15.1] - 2022-09-22\n\n### Fixed\n\n- Updated parser to fix comments parsing issues ([#585](https://github.com/JohnnyMorganz/StyLua/issues/585), [#587](https://github.com/JohnnyMorganz/StyLua/issues/587))\n\n## [0.15.0] - 2022-09-21\n\n### Added\n\n- Added support for Lua 5.3, gated behind the `lua53` feature flag ([#534](https://github.com/JohnnyMorganz/StyLua/issues/534))\n- Added support for Lua 5.4, gated behind the `lua54` feature flag ([#533](https://github.com/JohnnyMorganz/StyLua/issues/533))\n- Added `--allow-hidden` flag to allow entering and formatting hidden files/directories ([#562](https://github.com/JohnnyMorganz/StyLua/issues/562))\n- Added `--output-format=summary` which can be used with `--check` to output a summary of the list of files not correctly formatted ([#573](https://github.com/JohnnyMorganz/StyLua/issues/573))\n\n### Changed\n\n- We will no longer expand function calls when it contains an inlined multiline comment ([#543](https://github.com/JohnnyMorganz/StyLua/issues/543), [#561](https://github.com/JohnnyMorganz/StyLua/issues/561))\n\n### Fixed\n\n- Precommit hook now supports downloading aarch64 binary for M1 macs ([#558](https://github.com/JohnnyMorganz/StyLua/issues/558))\n- Fixed mistransformations of generic for loop with comments in the expression list ([#579](https://github.com/JohnnyMorganz/StyLua/issues/579))\n- Fixed `then`/`else` token not taken into account when formatting an if-expression ([#582](https://github.com/JohnnyMorganz/StyLua/issues/582))\n\n## [0.14.3] - 2022-08-27\n\n### Fixed\n\n- Fixed macOS aarch64 target in release workflow ([#528](https://github.com/JohnnyMorganz/StyLua/issues/528))\n- Long union/interesection types inside of a parentheses will now cause the parentheses to expand multiline ([#531](https://github.com/JohnnyMorganz/StyLua/issues/531))\n- Fixed leading comments lost from an expression when excessive parentheses are removed from it ([#530](https://github.com/JohnnyMorganz/StyLua/issues/530))\n- Fixed comments present in a complex expression not forcing multiline hanging leading to a syntax error ([#524](https://github.com/JohnnyMorganz/StyLua/issues/524))\n- Fixed unnecessary break on `else` in an if-expression when the expression contains a comment ([#520](https://github.com/JohnnyMorganz/StyLua/issues/520))\n- Take into account the extra line created when hanging at equals token in an assignment. This should prevent unnecessary hanging ([#542](https://github.com/JohnnyMorganz/StyLua/issues/542))\n- Fixed comments added to a newly created trailing comment not being formatted ([#547](https://github.com/JohnnyMorganz/StyLua/issues/547))\n- Fixed call chain with a small prefix not being kept inlined causing unstable formatting ([#514](https://github.com/JohnnyMorganz/StyLua/issues/514))\n- Fixed shape computation for table fields causing unnecessary expansion ([#551](https://github.com/JohnnyMorganz/StyLua/issues/551))\n- Fixed hanging the prefix string in `(\"str\"):call` unnecessarily when it provides no benefit ([#508](https://github.com/JohnnyMorganz/StyLua/issues/508))\n- Fixed table field value being expanded when it could be hanged instead ([#541](https://github.com/JohnnyMorganz/StyLua/issues/541))\n\n## [0.14.2] - 2022-07-27\n\n### Fixed\n\n- Fixed var expression with trailing comments on initial prefix being collapsed leading to malformed formatting ([#509](https://github.com/JohnnyMorganz/StyLua/issues/509))\n- Fixed return with comment between return and expression being collapsed leading to malformed formatting ([#504](https://github.com/JohnnyMorganz/StyLua/issues/504))\n- Fixed release assets for precommit by marking release artifacts as application/zip ([#496](https://github.com/JohnnyMorganz/StyLua/issues/496))\n\n## [0.14.1] - 2022-07-21\n\n### Changed\n\n- Chained var expression formatting will now follow the exact same steps as chained function call formatting\n\n### Fixed\n\n- Fixed var expression with comments collapsing leading to malformed formatting ([#500](https://github.com/JohnnyMorganz/StyLua/issues/500))\n- Fixed ignore behavior for `--stdin-filepath` ([#495](https://github.com/JohnnyMorganz/StyLua/issues/495))\n\n## [0.14.0] - 2022-07-06\n\n### Added\n\n- `--output-format=json` now outputs all (error) messages in JSON format ([#453](https://github.com/JohnnyMorganz/StyLua/issues/453))\n- Added WASM build support. Stylua is available on npm for consumption in Node.js or a browser (using a bundler) - https://www.npmjs.com/package/@johnnymorganz/stylua\n- Ignore comments will now be respected before fields inside tables ([#448](https://github.com/JohnnyMorganz/StyLua/issues/448))\n- Stylua library (`stylua_lib`) now exposes a `format_ast(ast, config, range, verification)` function to format a full-moon AST directly ([#482](https://github.com/JohnnyMorganz/StyLua/issues/482))\n- Added `collapse_simple_statement` option. It can take the values `Never` (default), `FunctionOnly`, `ConditionalOnly` or `Always`. When enabled, \"simple\" functions or if statements (ones where they only return a value or have a simple statement such as a function call) will be collapsed onto a single line where possible.\n\n### Changed\n\n- We now attempt to first hang the equals token in an assignment before expanding the RHS expression, provided the expression is not \"complex\" ([#292](https://github.com/JohnnyMorganz/StyLua/issues/292), [#489](https://github.com/JohnnyMorganz/StyLua/issues/489))\n- We now use the current indent level of comments preceding an `elseif`/`else` token to determine whether they should still be indented one level or inlined with the `elseif`/`else` token. ([#254](https://github.com/JohnnyMorganz/StyLua/issues/254))\n- Static chained function calls (i.e., `foo.bar().baz()`) will now hang if necessary ([#368](https://github.com/JohnnyMorganz/StyLua/issues/368))\n- The first call in a chained function call will now inline with the prefix if the prefix begins with an uppercase letter or the prefix is smaller (in length) than the indent width\n- A chained function call will not expand if the first call gets inlined\n\n### Fixed\n\n- [**Luau**] Fixed spacing lost before a comment within a type generic ([#446](https://github.com/JohnnyMorganz/StyLua/issues/446))\n- [**Luau**] Removed unnecessary expansion of a type generic with a single table as the parameter ([#442](https://github.com/JohnnyMorganz/StyLua/issues/442))\n- Fixed incorrect extra indentation of an expanded parentheses passed as a function call argument ([#456](https://github.com/JohnnyMorganz/StyLua/issues/456))\n- [**Luau**] Increased the shape size of the expression in a type assertion so that it will correctly hang if over width ([#466](https://github.com/JohnnyMorganz/StyLua/issues/466))\n- Fixed binary expression in a table field containing a comment being collapsed leading to malformed formatted ([#471](https://github.com/JohnnyMorganz/StyLua/issues/471))\n- Fixed end parentheses of a function call with a multiline comment internally being expanded onto a new line unnecessarily ([#473](https://github.com/JohnnyMorganz/StyLua/issues/473))\n- Fixed severe performance regression with complex nested function calls ([#477](https://github.com/JohnnyMorganz/StyLua/issues/477))\n\n## [0.13.1] - 2022-04-11\n\n### Fixed\n\n- Fixed leading trivia on semicolon lost when semicolon is removed ([#431](https://github.com/JohnnyMorganz/StyLua/issues/431))\n- Fixed shape calculation of the RHS of a binary expression not correctly reset when hanging, causing it to expand unnecessarily ([#432](https://github.com/JohnnyMorganz/StyLua/issues/432))\n- Fixed unstable formatting of tables at column width boundary ([#436](https://github.com/JohnnyMorganz/StyLua/issues/436))\n- Fixed assignments no longer hanging at equals token if a comment is present, but the expression is not hangable at a binop. ([#439](https://github.com/JohnnyMorganz/StyLua/issues/439))\n- Fixed unstable formatting around comments within type declarations ([#397](https://github.com/JohnnyMorganz/StyLua/issues/397), [#430](https://github.com/JohnnyMorganz/StyLua/issues/430))\n- Fixed parentheses around type assertions in a binary expression being removed leading to incorrect semantics. ([#441](https://github.com/JohnnyMorganz/StyLua/issues/441))\n\n## [0.13.0] - 2022-03-31\n\n### Added\n\n- Added support for alternative diff outputs. You can now use `--output-format=unified` or `--output-format=json` to output a unified diff or json mismatches list respectively. A unified diff can be fed into other tools such as `patch` or `delta`, whilst a JSON diff provides a more machine readable format useful for extensions. ([#230](https://github.com/JohnnyMorganz/StyLua/issues/230))\n\n### Changed\n\n- Migrate internal dependency for CLI arguments handling, with improved help messages.\n- Type declarations consisting of unions/intersections where an inner type has a multiline comment will now force hanging\n- Generic fors will no longer expand onto multiple lines if the expression looping over is a function call with a single table argument (e.g., `ipairs({ ... })`) ([#405](https://github.com/JohnnyMorganz/StyLua/issues/405))\n- Excess parentheses around a type assertion will now be removed. ([#383](https://github.com/JohnnyMorganz/StyLua/issues/383), [[#425](https://github.com/JohnnyMorganz/StyLua/issues/425)])\n- When hanging an assignment of an expression contained within parentheses, we do not add an extra indentation. The formatting is now consistent with expanded tables and function calls. ([#274](https://github.com/JohnnyMorganz/StyLua/issues/274))\n\n### Fixed\n\n- Fixed issue through static linking where Windows binary would not execute due to missing `VCRUNTIME140.dll`. ([#413](https://github.com/JohnnyMorganz/StyLua/issues/413))\n- Fixed assignment with comment sometimes not hanging leading to malformed syntax. ([#416](https://github.com/JohnnyMorganz/StyLua/issues/416))\n- Fixed block ignores not applied when multiple leading block ignore comments are present at once. ([#421](https://github.com/JohnnyMorganz/StyLua/issues/421))\n- Fixed ordering of comments when semicolon after statement is removed. ([#423](https://github.com/JohnnyMorganz/StyLua/issues/423))\n\n## [0.12.5] - 2022-03-08\n\n### Fixed\n\n- Fixed crashed due to unhandled generic type packs under the `luau` feature flag. ([#403](https://github.com/JohnnyMorganz/StyLua/issues/403))\n\n## [0.12.4] - 2022-03-02\n\n### Fixed\n\n- Fixed long comments forcing unnecessary hanging of type declarations. ([#384](https://github.com/JohnnyMorganz/StyLua/issues/384))\n- Fixed long intersection types not hanging. ([#382](https://github.com/JohnnyMorganz/StyLua/issues/382))\n- Fixed comments being lost around a condition when unnecessary parentheses are removed. ([#389](https://github.com/JohnnyMorganz/StyLua/issues/389))\n- Fixed multiline expression with comments inside parentheses being collapsed leading to a syntax error. ([#386](https://github.com/JohnnyMorganz/StyLua/issues/386))\n- Fixed ignore comments not respected in child blocks of ignored statements. ([#387](https://github.com/JohnnyMorganz/StyLua/issues/387))\n- Fixed values in type tables not hanging when over width. ([#394](https://github.com/JohnnyMorganz/StyLua/issues/394))\n- Fixed type info generics not hanging when over width. ([#394](https://github.com/JohnnyMorganz/StyLua/issues/394))\n- Fixed callback types with binop type parameters / return types not hanging leading to a syntax error when comments are present. ([#396](https://github.com/JohnnyMorganz/StyLua/issues/396))\n- Fixed type declarations not hanging properly causing them to go over width. This includes hanging at the equals token and hanging union/intersection types.\n\n## [0.12.3] - 2022-02-17\n\n### Fixed\n\n- Fixed call chains not hanging when comments were present in between calls, leading to a syntax error. ([#367](https://github.com/JohnnyMorganz/StyLua/issues/367))\n- Fixed if-expression syntax getting unnecessarily expanded further due to trailing comments. ([#375](https://github.com/JohnnyMorganz/StyLua/issues/375))\n- Fixed formatting of leading comments of a keyword in if-expression syntax. ([#374](https://github.com/JohnnyMorganz/StyLua/issues/374))\n- Fixed formatting of long type declarations which go over the line width to hang if possible. ([#372](https://github.com/JohnnyMorganz/StyLua/issues/372))\n- Fixed mistransformation of comments within a type union leading to a syntax error. ([#378](https://github.com/JohnnyMorganz/StyLua/issues/378))\n\n## [0.12.2] - 2022-02-06\n\n### Fixed\n\n- Fixed crash due to unhandled singleton type formatting under the `luau` feature flag. ([#358](https://github.com/JohnnyMorganz/StyLua/issues/358))\n- Includes types in shape calculation for causing a generic for to go multiline under the `luau` feature flag. ([#360](https://github.com/JohnnyMorganz/StyLua/issues/360))\n\n## [0.12.1] - 2022-02-01\n\n### Fixed\n\n- Fixed misformatting of conditions in if-expression syntax leading to spurious whitespace under the `luau` feature flag. ([#349](https://github.com/JohnnyMorganz/StyLua/issues/349))\n- Fixed incorrect shape calculation in if-expression syntax: if-expression will now go multiline when only slightly over column width (`luau` feature flag).\n- Fixed incorrect handling of comments at the end of a callback type's arguments under the `luau` feature flag. ([#352](https://github.com/JohnnyMorganz/StyLua/issues/352))\n- Fixed mistransformation of type declaration when the type info is a union which must be multiline due to comments under the `luau` feature flag. ([#351](https://github.com/JohnnyMorganz/StyLua/issues/351))\n- Fixed leading comments on a `|` symbol in a type info being lost when hanging the type under the `luau` feature flag.\n- Fixed trailing comments of a function call being lost as parentheses are removed around a single argument when `call_parentheses` is set to not `Always`. ([#356](https://github.com/JohnnyMorganz/StyLua/issues/356))\n\n## [0.12.0] - 2022-01-31\n\n### Added\n\n- Added option `call_parentheses`:\n  Specify whether to apply parentheses on function calls with single string or table arg. Possible options: `Always` (default), `NoSingleString`, `NoSingleTable`, `None`. ([#329](https://github.com/JohnnyMorganz/StyLua/issues/329))\n- Added proper multiline hanging of generic for syntax. ([#322](https://github.com/JohnnyMorganz/StyLua/issues/322))\n- Added proper formatting for if-expression syntax under the `luau` feature flag. ([#289](https://github.com/JohnnyMorganz/StyLua/issues/289))\n- Updated parser to add support for generic/variadic type packs, singleton types and default types under the `luau` feature flag.\n\n### Fixed\n\n- Fixed generic variadics not being handled under the `luau` feature flag. ([#333](https://github.com/JohnnyMorganz/StyLua/issues/333))\n- Fixed issue with comments within an assignment not being correctly handled, leading to a syntax error. ([#340](https://github.com/JohnnyMorganz/StyLua/issues/340))\n- Fixed parentheses around an IfExpression being removed, leading to incorrect semantics, under the `luau` feature flag. ([#345](https://github.com/JohnnyMorganz/StyLua/issues/345))\n\n### Deprecated\n\n- Option `no_call_parentheses` has been deprecated. Use `call_parentheses = \"None\"` instead.\n\n## [0.11.3] - 2022-01-01\n\n### Fixed\n\n- Fixed comments preceding a comma within a function call or parameter list for a function definition being mistransformed leading to a syntax error. ([#307](https://github.com/JohnnyMorganz/StyLua/issues/307))\n- Fixed IfExpression having abnormal leading whitespace under the `luau` feature flag. ([#315](https://github.com/JohnnyMorganz/StyLua/issues/315))\n- Fixed incorrect handling of comments in unusual places within a table causing mistransformations leading to syntax errors. ([#318](https://github.com/JohnnyMorganz/StyLua/issues/318))\n\n## [0.11.2] - 2021-11-15\n\n### Fixed\n\n- Fixed spaces around brackets string (`[[string]]`) used as an index or table key (i.e. `[ [[string]] ]`) being removed, leading to a syntax error. ([#293](https://github.com/JohnnyMorganz/StyLua/issues/293))\n- Fixed incorrect shape calculation leading to arguments incorrectly expanding when under column width. ([#298](https://github.com/JohnnyMorganz/StyLua/issues/298))\n- Fixed incorrect shape calculation for singleline table at the column width boundary. ([#296](https://github.com/JohnnyMorganz/StyLua/issues/296))\n- Fixed IfExpression syntax containing extra/abnormal trailing whitespace when currently formatting as-is under the `luau` feature flag. ([#297](https://github.com/JohnnyMorganz/StyLua/issues/297))\n- Fixed newlines before arguments in a function call which is later formatted on a single line being preserved, leading to inconsistent formatting. ([#290](https://github.com/JohnnyMorganz/StyLua/issues/290))\n- Fixed odd formatting when returning multiple tables or functions only. ([#302](https://github.com/JohnnyMorganz/StyLua/issues/302))\n- Fixed comments within an index expression (`foo[index]`) incorrectly handled leading to malformed formatting. ([#304](https://github.com/JohnnyMorganz/StyLua/issues/304))\n\n## [0.11.1] - 2021-11-08\n\n### Changed\n\n- Updated internal parser to fix parsing issues and update `luau` parsing. ([#229](https://github.com/JohnnyMorganz/StyLua/issues/229), [#231](https://github.com/JohnnyMorganz/StyLua/issues/231))\n- Default glob now matches `**/*.luau` (as well as `**/*.lua`) when the `luau` flag is enabled. ([#291](https://github.com/JohnnyMorganz/StyLua/issues/291))\n\n### Fixed\n\n- Fixed indentation of type callback specifier parameters when parameters have leading comment trivia. ([#278](https://github.com/JohnnyMorganz/StyLua/issues/278))\n- Fixed trailing comma not being taken into account when determining the width of a field in a multiline table. ([#282](https://github.com/JohnnyMorganz/StyLua/issues/282))\n- Fixed `--num-threads 1` causing a deadlock. ([#281](https://github.com/JohnnyMorganz/StyLua/issues/281))\n- Fixed whitespace around parts of a binary expression causing it to over-hang in first pass, leading to unstable formatting. ([#287](https://github.com/JohnnyMorganz/StyLua/issues/287))\n\n## [0.11.0] - 2021-09-16\n\n### Changed\n\n- In Luau type tables, a newline after the opening brace will now force the type table multiline. This is the same procedure as standard tables. ([#226](https://github.com/JohnnyMorganz/StyLua/issues/226))\n- In Luau, type specifiers for function parameters will now force the parameters to be formatted multiline if a specifier is multiline (and there is more than one parameter).\n- Improved error messages to make them easier to understand.\n\n### Fixed\n\n- Fixed range formatting no longer working when setting the range to statements inside nested blocks. ([#239](https://github.com/JohnnyMorganz/StyLua/issues/239))\n- Fixed ignore file present in cwd not taken into account if cwd not included in file paths to format. ([#249](https://github.com/JohnnyMorganz/StyLua/issues/249))\n- Fixed config locations (`$XDG_CONFIG_HOME` and `$HOME/.config`) not being looked into correctly on macOS when `--search-parent-directories` is used. ([#260](https://github.com/JohnnyMorganz/StyLua/issues/260))\n- Fixed incorrect indentation of multiline type specifiers for function parameters under the `luau` feature flag. ([#256](https://github.com/JohnnyMorganz/StyLua/issues/256))\n- Fixed unstable formatting caused by a singleline table which just reaches the column width. ([#261](https://github.com/JohnnyMorganz/StyLua/issues/261))\n- Fixed misformatting of a binop expression as precedence of the RHS expression was not taken into account. ([#257](https://github.com/JohnnyMorganz/StyLua/issues/257), [#261](https://github.com/JohnnyMorganz/StyLua/issues/261))\n\n## [0.10.1] - 2021-08-08\n\n### Fixed\n\n- Fixed an incorrect trailing comma being added to function args as part of a multiline expression list leading to a syntax error. ([#227](https://github.com/JohnnyMorganz/StyLua/issues/227))\n- Fixed the first expression in a multiple assignment prematurely hanging even if its below the column width. ([#233](https://github.com/JohnnyMorganz/StyLua/issues/233))\n- Updated internal parser to fix parsing issues for Luau code under the `luau` feature flag.\n\n## [0.10.0] - 2021-07-11\n\n### Added\n\n- Added flag `--verify` which, when enabled, attempts to verify the generated output AST with the input AST to detect any changes to code correctness. Useful for adopting StyLua into a large codebase, at the cost of slower processing. ([#199](https://github.com/JohnnyMorganz/StyLua/issues/199))\n- Added optional command line options `--column-width`, `--indent-type`, `--indent-width`, `--line-endings` and `--quote-style`, which, when provided, will override any configuration setting inferred from the default or a `stylua.toml`. ([#213](https://github.com/JohnnyMorganz/StyLua/issues/213))\n- Added multithreaded support for formatting file in the CLI. Now each file will be formatted in its own thread. The number of threads used defaults to the number of cores on your computer, but can be set using `--num-threads`\n- Added support for disabling formatting over specific ranges. Use `-- stylua: ignore start` to disable formatting and `-- stylua: ignore end` to re-enable it. The comment must be preceding a statement and disabling formatting cannot cross block scope boundaries. ([#198](https://github.com/JohnnyMorganz/StyLua/issues/198))\n\n### Changed\n\n- Luau type tables (`luau` feature flag) now use the same formatting strategy as normal expression tables, so that their formatting is more aligned.\n- Luau typings now have improved checking against the current shape width to determine how to format if over column width.\n- Luau callback types will now format multiline if they become over width under the `luau` feature flag.\n- Improved the formatting of return expressions, they are now more in line with assignment expressions. ([#194](https://github.com/JohnnyMorganz/StyLua/issues/194))\n- Changed buffering of error messages in the CLI. Originally, they would be buffered till the end, but now they are output immediately when seen.\n- Allowed the use of `--check` when taking input from stdin.\n- An error when parsing provided globs will cause the program to immediately exit rather than continuing with the incorrect glob.\n- Only diff errors will exit with a status code of `1`. Other errors (e.g. parse errors or internal errors) will now exit with status code of `2`.\n\n### Fixed\n\n- Fixed comments inside Luau type tables leading to malformed formatting under the `luau` feature flag. ([#219](https://github.com/JohnnyMorganz/StyLua/issues/219))\n- Fixed multiple assignment where an expression was originally hung due to comments being collapsed leading to malformed formatting. ([#222](https://github.com/JohnnyMorganz/StyLua/issues/222))\n- Fixed an issue where a function call with a single table argument being hugged with the parentheses which contain comments leading to a syntax error. ([#224](https://github.com/JohnnyMorganz/StyLua/issues/224))\n\n## [0.9.3] - 2021-06-26\n\n### Added\n\n- Added `--verbose` to print debug information, including finding config files and time taken to format files.\n\n### Fixed\n\n- Fixed severe performance regression due to a change in table formatting leading to exponential blowup for nested tables. ([#205](https://github.com/JohnnyMorganz/StyLua/issues/205))\n- Fixed long binop chains with a comment deep inside not being hung, leading to a syntax error. ([#210](https://github.com/JohnnyMorganz/StyLua/issues/210))\n\n## [0.9.2] - 2021-06-20\n\n### Changed\n\n- Bumped full-moon to `0.12.1` to fix parsing bugs\n\n### Fixed\n\n- Fixed parentheses around type assertions being classed as unnecessary and removed under the `luau` feature flag.\n- Fixed mistransformation of function type where arguments have comments under the `luau` feature flag. ([#201](https://github.com/JohnnyMorganz/StyLua/issues/201))\n- Fixed comments in an assignment in between the equals token and the expression leading to a mistransformation. ([#200](https://github.com/JohnnyMorganz/StyLua/issues/200))\n\n## [0.9.1] - 2021-06-17\n\n### Added\n\n- Added `--stdin-filepath` option to specify location of file being taken in from stdin. This is optional and is only used to determine where to find the configuration file. If not provided, we default to searching from current working directory. ([#192](https://github.com/JohnnyMorganz/StyLua/issues/192))\n\n### Fixed\n\n- Fixed empty functions with comments being incorrectly collapsed leading to syntax error. ([#195](https://github.com/JohnnyMorganz/StyLua/issues/195))\n\n## [0.9.0] - 2021-06-15\n\n### Added\n\n- CLI will now look for `stylua.toml` and its hidden counterpart, `.stylua.toml`. ([#145](https://github.com/JohnnyMorganz/StyLua/issues/145))\n- Added CLI flag `--search-parent-directories`. If enabled, we will look in parent directories for a configuration file, or look in `$XDG_CONFIG_HOME` or `$XDG_CONFIG_HOME/stylua`. ([#127](https://github.com/JohnnyMorganz/StyLua/issues/127), [#146](https://github.com/JohnnyMorganz/StyLua/issues/146))\n- Updated full-moon: Added support for typed variadics, named function type args, and generic functions under the Luau feature flag\n- Will now hang on equality operators within binary expressions, if over width.\n- If a file path is explicitly provided to the CLI which doesn't end with `.lua` ending, the `*.lua` glob check is skipped. ([#170](https://github.com/JohnnyMorganz/StyLua/issues/170))\n- Long type unions will now hang under the `luau` feature flag. ([#165](https://github.com/JohnnyMorganz/StyLua/issues/165))\n- Added option `no_call_parentheses`. Enabling this config will remove parentheses around function calls taking a single string/table as an argument. This config was added for adoption purposes. ([#133](https://github.com/JohnnyMorganz/StyLua/issues/133))\n\n### Changed\n\n- Long prefix expressions which are hangable and go over the line limit (e.g. `(\"foooo\" .. \"barrrrrrr\" .. \"bazzzzzz\"):format(...)`) will now hang multiline ([#139](https://github.com/JohnnyMorganz/StyLua/issues/139))\n- Changed formatting for assignments. We will now try all tactics then determine the best one. Multiple assignments will now no longer attempt to hang a single expression first - we will hang the whole punctuated list. ([#157](https://github.com/JohnnyMorganz/StyLua/issues/157))\n- Function calls with single arguments are now possible to be expanded. This will allow the call to be expanded if the line goes over budget. ([#156](https://github.com/JohnnyMorganz/StyLua/issues/156))\n- StyLua will now firstly prefer hanging long arguments to function calls to try and fit under the width, before expanding them multiline. ([#159](https://github.com/JohnnyMorganz/StyLua/issues/159))\n- When hanging a binary expression, previously, we would always hang the \"root\" node of AST BinExp tree. Now we will check to see if is necessary (we are over width) before hanging ([#163](https://github.com/JohnnyMorganz/StyLua/issues/163))\n- StyLua will hug together table braces with function call parentheses when formatting a function call taking a single table as an argument. ([#182](https://github.com/JohnnyMorganz/StyLua/issues/182))\n- Function calls with more than one argument, where an argument is \"complex\", will now expand multiline. \"complex\" is an argument spanning multiple lines, but excludes a table or anonymous function, as we handle them explicitly. ([#183](https://github.com/JohnnyMorganz/StyLua/issues/183))\n- StyLua will always hang at the equals token for a multi-variable assignment. ([#185](https://github.com/JohnnyMorganz/StyLua/issues/185))\n- Tables with multiline fields (such as an anonymous function expression) should always expand if previously on single line. ([#187](https://github.com/JohnnyMorganz/StyLua/issues/187))\n- Function definitions (both normal and anonymous) with an empty body will now be kept on a single line. This is common for noop functions `local function noop() end`. ([#188](https://github.com/JohnnyMorganz/StyLua/issues/188))\n\n### Fixed\n\n- Fixed 1 or 2 digit numerical escapes being incorrectly removed\n- Fixed whitespace being lost before a multiline comment. We will now preserve a single space (e.g. `local test --[[foo]] = true` -> `local test --[[foo]] = true`) ([#136](https://github.com/JohnnyMorganz/StyLua/issues/136))\n- Fixed the double formatting of a hanging call chain when it was being assigned to a variable causing it to be incorrectly formatted ([#151](https://github.com/JohnnyMorganz/StyLua/issues/151))\n- Fixed leading comments to a binop in a hanging expression being lost ([#154](https://github.com/JohnnyMorganz/StyLua/issues/154#issuecomment-841703038))\n- Fixed mistransformation of comments leading the RHS of a hanging binop. They are now moved to before the binop ([#154](https://github.com/JohnnyMorganz/StyLua/issues/154))\n- Fixed comments trailing unnecessary parentheses around expressions that were later removed not being preserved ([#176](https://github.com/JohnnyMorganz/StyLua/issues/176))\n- Fixed a double unary minus (`- -foo`/`-(-foo)`) being formatted as `--foo` leading to a comment syntax error. Parentheses are now enforced: `-(-foo)` ([#171](https://github.com/JohnnyMorganz/StyLua/issues/171))\n- Fixed semicolon being removed leading to `function call x new statement` ambiguity when next statement is an assignment with the first variable being a parentheses var expression ([#173](https://github.com/JohnnyMorganz/StyLua/issues/173))\n- Fixed mistransformation of comments in `if condition then` or `while condition do` lines - improved assurance that they will hang multiline ([#164](https://github.com/JohnnyMorganz/StyLua/issues/164))\n- Fixed indentation of comments leading a `then` or `do` token when `if ... then` or `while ... do` are multiline.\n- Fixed mistransformation of comments in a generic declaration under the `luau` feature flag ([#166](https://github.com/JohnnyMorganz/StyLua/issues/166))\n- Fixed trailing comma being added after comments in multiline type table under the `luau` feature flag ([#166](https://github.com/JohnnyMorganz/StyLua/issues/166))\n\n## [0.8.1] - 2021-04-30\n\n### Fixed\n\n- Fixed bug where a hanging expression inside of parentheses would lead to function arguments being incorrectly formatted with a trailing comma - leading to a syntax error\n\n## [0.8.0] - 2021-04-30\n\n### Added\n\n- Parentheses around conditions are now removed, as they are not required in Lua. `if (foo and (not bar or baz)) then ... end` turns to `if foo and (not bar or baz) then ... end`\n- Long multi-variable assignments which surpass the column width, even when hanging on the equals token, will now hang on multiple lines.\n\n### Changed\n\n- Changed the heursitics for when parentheses are removed around expressions. Parentheses will now never be removed around a function call prefix (e.g. `(\"hello\"):len()`)\n- Changed formatting for comma-separated lists. Previously, we would buffer the comments to the end of the list, but now we keep the comments next to where they original were.\n- Improved contextual formatting informattion when formatting deep in the AST. We can now better determine how much space is left on the current line, before we need to change formatting\n- Improved formatting of function declarations. It will now properly take into account the amount of space left on the column width.\n- Improve formatting for assignments with expressions such as function calls. The whole assignment is now taken into account, so we can better determine whether to split the expression.\n\n### Fixed\n\n- Fixed trailing whitespace remaining on the last item of a multiline table (which was expanded from a singleline one)\n\n## [0.7.1] - 2021-04-19\n\n### Fixed\n\n- Fixed parentheses around a table being incorrectly removed leading to a syntax error, such as in `({}):foo()`\n\n## [0.7.0] - 2021-04-13\n\n### Added\n\n- Added hanging for chained function calls. See [#109](https://github.com/JohnnyMorganz/StyLua/issues/109)\n- Long function definitions (normally with parameters containing types and a return type) will now be split across multiple lines if they surpass the column limit\n\n### Changed\n\n- Further improvements to the way binary expressions are hung on new lines\n\n### Fixed\n\n- Fixed trailing comments at the end of multiline tables being lost\n- Fixed panic \"stmt trailing comments not implemented\" occuring due to incomplete function\n- Fixed trailing comments after semicolons at the end of last statements being lost when formatting\n- Fixed function parameters collapsing when there is a comments at the end of function parameters, where the last parameter has a type specifier\n- Fixed comments at the end of tables being indented one extra level\n- Fixed trailing comments within if-elseif-else blocks not being correctly indented.\n- Fixed `do` in a `while ... do` statement not correctly indented when the condition spans multiple lines\n- Fixed multiline parameters for a function definition inside of an indent block (e.g. a table) not being correctly indented\n\n## [0.6.0] - 2021-03-27\n\n### Added\n\n- Added support for creating new `Config` structs when using StyLua as a library\n- Added configuration for quote style. There are four quote style options - `AutoPreferDouble`, `AutoPreferSingle`, `ForceDouble` and `ForceSingle`.\n  For the auto styles, we will prefer the quote type specified, but fall back to the opposite if it means there are fewer escapes. For the\n  force styles, we will always use the quote type specified.\n- StyLua will now error when unknown fields are found in the configuration `stylua.toml` file\n- Long lines of assignments, where the expressions aren't hangable, will now be put onto a newline, where a newline is created after the equal sign, and the expressions indented.\n- Added initial support for **Lua 5.2** syntax. StyLua can now format code containing `goto`s and labels. See [#87](https://github.com/JohnnyMorganz/StyLua/issues/87) to track further support for Lua 5.2 syntax.\n\n### Changed\n\n- Function call heuristic have been further improve to decide when to expand the function call arguments onto multiple lines.\n- StyLua now allows some arguments after a multiline table before forcing expansion. This makes sense for something like `setmetatable({ ... }, class)`, where\n  `{ ... }` is a multiline table, but we don't want to expand onto multiple lines. StyLua will not allow a mixture of multiline tables and small identifiers in between\n  (e.g. `call({ ... }, foo, { ... })`), in order to improve readability.\n- Empty newlines at the start and end of a block will now be removed as they are unnecessary\n- Changed the default quote style from `ForceDouble` to `AutoPreferDouble`. We will now default to swapping quote type if it will reduce the number of escapes.\n\n### Fixed\n\n- Fixed tables with internal comments (and no fields) incorrectly collapsing to a single line\n- Fixed parentheses being incorrectly removed around a BinOp where first value was a UnOp\n- Fixed indentation of leading comments bound to the end brace of a multiline table\n- Fixed LastStmt (return/break etc.) still being formatted when it wasn't defined inside the range\n- Fixed hanging expressions which are inside function calls being indented unnecessarily by one extra level\n- Fixed parentheses being incorrectly removed around a function definition, which may be called like `(function() ... end)()`\n- Fixed some string escapes being incorrectly deemed as unnecessary\n- Fixed trailing comments after semicolons at the end of statements being lost when formatting\n- Fixed formatting issues in relation to newline and whitespace when using range formatting.\n- Fixed empty tables taking 2 formatting passes to format properly\n\n## [0.5.0] - 2021-02-24\n\n### Added\n\n- Added support for removing excess parentheses around expressions.\n  e.g. `print((x))` will be formatted to `print(x)`, as the parentheses are unnecessary. We also consider cases\n  where parentheses should not be removed, e.g. `print((x()))` - removing the parentheses changes the meaning of the code.\n- Added formatting of BinOp expressions within function calls. If there is a long expression as a function argument and it contains binops, it will now span multiple lines\n- Added a `column_width` setting, which is used to guide when StyLua should wrap lines. It defaults to `120`.\n- Added support for formatting ranges. You can now specificy ranges using `--range-start <num>` and `--range-end <num>` (both optional, and both inclusive).\n  If a range is provided, only statements within the range will be formatted. Currently only supports ranges containing whole statements, and is not more granular.\n- Added support for ignore comments. If the line before a statement begins with the comment `-- stylua: ignore`, then the statement will be ignored during formatting.\n  This currently only supports ignoring statement-level nodes\n\n### Changed\n\n- Improved CLI `--check` output. We now use a more detailed output which should help in determining diffs\n- Improved calculations in places to determine when to wrap lines\n\n### Fixed\n\n- Fixed an expression ending with an UnOp (e.g. `#foo`) and a trailing comment forcing an unnecessary hanging expression\n- Fixed loss of comments trailing punctuation within function parameters\n- Comments within function parameters now force the parameter to go mutliline, fixing syntax errors created from previous formatting\n- Fixed incorrect indentation of body of expressions spanning multiple lines (e.g. anonymous functions/tables) when the expression is part of a hanging binop\n- Fixed incorrect formatting of multiple long comma-separated assignment/returns causing the comma to be placed onto a new line\n\n## [0.4.1] - 2021-02-05\n\n### Fixed\n\n- Fixed function calls being incorrectly expanded due to a comment within the arguments.\n  We will now only check for leading/trailing comments for argument expressions to see if we need to keep it expanded or not.\n\n## [0.4.0] - 2021-02-05\n\n### Added\n\n- Added formatting for number literals which begin with a decimal. For consistency, a \"0\" will be prepended (i.e. `.5` turns to `0.5`)\n- Long expressions in a return statement will now hang onto multiple lines if necessary\n- StyLua will now handle expressions in parentheses if they are long, by breaking them down further.\n- Added support for ambiguous syntax. StyLua will now keep the semicolon and format as required\n\n### Fixed\n\n- Fixed \"then\" and \"do\" tokens not being correctly indented when if-then and while-do statements are pushed onto multiple lines\n- Fixed incorrect newline formatting when a return type is present for an anonymous function in Luau\n- Fixed multiline expressions where the binop has a trailing comment being incorrectly formatted, breaking code\n- Fixed a trailing comment at the end of a whole binop expression unnecessarily forcing a hanging expression\n\n## [0.3.0] - 2021-01-15\n\n### Added\n\n- StyLua will now test escapes of characters other than quotes in strings to see if they are unnecessary and remove them if so\n- Adds wrapping for large expressions to push them onto multiple lines. Statements with line of longer than 120 characters will trigger expression wrapping where possible.\n  The expression will be split at its Binary Operators, excluding relational operators.\n\n### Fixed\n\n- Fixed `.styluaignore` file extension matching not working due to the default override glob\n- Cleaned up descriptions of options when running `stylua --help`\n- Fixed issue with `stylua.toml` requiring a complete configuration file with all options set\n- Fixed issue with escapes unrelated to quotes inside of strings not being preserved\n- Fixed incorrect formatting when trailing comments are present in function arguments and other locations.\n  In function arguments, it will remain expanded if there is a comment present. Similarly, comments are now preserved in punctuated sequencues.\n\n## [0.2.1] - 2021-01-03\n\n### Fixed\n\n- Fixed `until` token in a repeat block not being correctly indented\n- Fixed regression causing the first and last item of an expanded table to not be correctly indented\n\n## [0.2.0] - 2020-12-31\n\n### Changed\n\n- Changed heuristics for expanding function arguments. StyLua will now check through the arguments and look out for expanded tables\n  or anonymous functions, and if found, will not expand the function call. However, if there are any other type of expression mixed between,\n  then the function call will remain expanded.\n- Change internals of the formatter by reducing amount of cloning of AST nodes. Improves performance by 22%\n\n## [0.1.0] - 2020-12-30\n\n### Added\n\n- StyLua will now take into account if a table was originally expanded onto multiple lines. If so, StyLua won't attempt to collapse it\n- Added support for reading in from stdin for the CLI, use `stylua -` to make StyLua read from stdin, and a formatted output will be written to stdout\n- Added `--check` command line flag. If enabled, then StyLua will check through the files and emit a diff for files with incorrect formatting, exiting with status code 1. StyLua will not modifiy files\n- Renamed CLI argument `--pattern` to `--glob` (with short form `-g`). `--glob` can now accept multiple globs.\n  For example, using `stylua -g *.lua -g !*.spec.lua .` will format all Lua files apart from `.spec.lua` test files.\n- Added support for parsing a `.styluaignore` file, which follows a similar structure to `.gitignore` files. Any patterns matched inside of this file will be ignored.\n\n### Changed\n\n- Changed when a table will expand onto new lines. It will now expand after 80 characters have been exceeded, and takes indent level into account\n\n## [0.1.0-alpha.3] - 2020-12-26\n\n### Changed\n\n- Changed the default value of `indent_width` to 4\n- Function calls with a single argument will no longer wrap the argument onto a new line. This is subject to change.\n\n### Fixed\n\n- Fixed a new line being added after the `until` token in a repeat block. The new line is now added at the end of the until expression.\n- Fixed comments not being preserved within multiline tables\n- Fixed trailing comma being added after comments in multiline tables\n- Fixed escaping of double-quotes inside of strings being repeated\n- Fixed long tables for types collapsing onto a single line for Luau formatting\n- Fixed incorrect comment wrapping at the beginning of multiline tables\n- Fixed start brace of multiline comments not having correct indentation\n- Fixed comments having incorrect indentation when bound to the `end` token at the end of a block.\n\n## [0.1.0-alpha.2] - 2020-12-22\n\n### Added\n\n- Single quote escapes are now removed from string literals if present when converting to double-quoted strings\n\n### Changed\n\n- If there is a single argument in a function call, and it is either a table or anonymous function, the relevant start/end tokens are no longer pushed onto new lines\n- Comments are now left completely unformatted, apart from trimming trailing whitespace at the end of single-line comments\n\n### Fixed\n\n- Double quotes are now escaped when converting from single quote to double quote strings\n\n## [0.1.0-alpha] - 2020-12-22\n\nInitial alpha release\n\n[unreleased]: https://github.com/JohnnyMorganz/StyLua/compare/v2.0.2...HEAD\n[2.0.2]: https://github.com/JohnnyMorganz/StyLua/releases/tag/v2.0.2\n[2.0.1]: https://github.com/JohnnyMorganz/StyLua/releases/tag/v2.0.1\n[2.0.0]: https://github.com/JohnnyMorganz/StyLua/releases/tag/v2.0.0\n[0.20.0]: https://github.com/JohnnyMorganz/StyLua/releases/tag/v0.20.0\n[0.19.1]: https://github.com/JohnnyMorganz/StyLua/releases/tag/v0.19.1\n[0.19.0]: https://github.com/JohnnyMorganz/StyLua/releases/tag/v0.19.0\n[0.18.2]: https://github.com/JohnnyMorganz/StyLua/releases/tag/v0.18.2\n[0.18.1]: https://github.com/JohnnyMorganz/StyLua/releases/tag/v0.18.1\n[0.18.0]: https://github.com/JohnnyMorganz/StyLua/releases/tag/v0.18.0\n[0.17.1]: https://github.com/JohnnyMorganz/StyLua/releases/tag/v0.17.1\n[0.17.0]: https://github.com/JohnnyMorganz/StyLua/releases/tag/v0.17.0\n[0.16.1]: https://github.com/JohnnyMorganz/StyLua/releases/tag/v0.16.1\n[0.16.0]: https://github.com/JohnnyMorganz/StyLua/releases/tag/v0.16.0\n[0.15.3]: https://github.com/JohnnyMorganz/StyLua/releases/tag/v0.15.3\n[0.15.2]: https://github.com/JohnnyMorganz/StyLua/releases/tag/v0.15.2\n[0.15.1]: https://github.com/JohnnyMorganz/StyLua/releases/tag/v0.15.1\n[0.15.0]: https://github.com/JohnnyMorganz/StyLua/releases/tag/v0.15.0\n[0.14.3]: https://github.com/JohnnyMorganz/StyLua/releases/tag/v0.14.3\n[0.14.2]: https://github.com/JohnnyMorganz/StyLua/releases/tag/v0.14.2\n[0.14.1]: https://github.com/JohnnyMorganz/StyLua/releases/tag/v0.14.1\n[0.14.0]: https://github.com/JohnnyMorganz/StyLua/releases/tag/v0.14.0\n[0.13.1]: https://github.com/JohnnyMorganz/StyLua/releases/tag/v0.13.1\n[0.13.0]: https://github.com/JohnnyMorganz/StyLua/releases/tag/v0.13.0\n[0.12.5]: https://github.com/JohnnyMorganz/StyLua/releases/tag/v0.12.5\n[0.12.4]: https://github.com/JohnnyMorganz/StyLua/releases/tag/v0.12.4\n[0.12.3]: https://github.com/JohnnyMorganz/StyLua/releases/tag/v0.12.3\n[0.12.2]: https://github.com/JohnnyMorganz/StyLua/releases/tag/v0.12.2\n[0.12.1]: https://github.com/JohnnyMorganz/StyLua/releases/tag/v0.12.1\n[0.12.0]: https://github.com/JohnnyMorganz/StyLua/releases/tag/v0.12.0\n[0.11.3]: https://github.com/JohnnyMorganz/StyLua/releases/tag/v0.11.3\n[0.11.2]: https://github.com/JohnnyMorganz/StyLua/releases/tag/v0.11.2\n[0.11.1]: https://github.com/JohnnyMorganz/StyLua/releases/tag/v0.11.1\n[0.11.0]: https://github.com/JohnnyMorganz/StyLua/releases/tag/v0.11.0\n[0.10.1]: https://github.com/JohnnyMorganz/StyLua/releases/tag/v0.10.1\n[0.10.0]: https://github.com/JohnnyMorganz/StyLua/releases/tag/v0.10.0\n[0.9.3]: https://github.com/JohnnyMorganz/StyLua/releases/tag/v0.9.3\n[0.9.2]: https://github.com/JohnnyMorganz/StyLua/releases/tag/v0.9.2\n[0.9.1]: https://github.com/JohnnyMorganz/StyLua/releases/tag/v0.9.1\n[0.9.0]: https://github.com/JohnnyMorganz/StyLua/releases/tag/v0.9.0\n[0.8.1]: https://github.com/JohnnyMorganz/StyLua/releases/tag/v0.8.1\n[0.8.0]: https://github.com/JohnnyMorganz/StyLua/releases/tag/v0.8.0\n[0.7.1]: https://github.com/JohnnyMorganz/StyLua/releases/tag/v0.7.1\n[0.7.0]: https://github.com/JohnnyMorganz/StyLua/releases/tag/v0.7.0\n[0.6.0]: https://github.com/JohnnyMorganz/StyLua/releases/tag/v0.6.0\n[0.5.0]: https://github.com/JohnnyMorganz/StyLua/releases/tag/v0.5.0\n[0.4.1]: https://github.com/JohnnyMorganz/StyLua/releases/tag/v0.4.1\n[0.4.0]: https://github.com/JohnnyMorganz/StyLua/releases/tag/v0.4.0\n[0.3.0]: https://github.com/JohnnyMorganz/StyLua/releases/tag/v0.3.0\n[0.2.1]: https://github.com/JohnnyMorganz/StyLua/releases/tag/v0.2.1\n[0.2.0]: https://github.com/JohnnyMorganz/StyLua/releases/tag/v0.2.0\n[0.1.0]: https://github.com/JohnnyMorganz/StyLua/releases/tag/v0.1.0\n[0.1.0-alpha.3]: https://github.com/JohnnyMorganz/StyLua/releases/tag/v0.1.0-alpha.3\n[0.1.0-alpha.2]: https://github.com/JohnnyMorganz/StyLua/releases/tag/v0.1.0-alpha.2\n[0.1.0-alpha]: https://github.com/JohnnyMorganz/StyLua/releases/tag/v0.1.0-alpha\n"
        },
        {
          "name": "Cargo.lock",
          "type": "blob",
          "size": 32.2099609375,
          "content": "# This file is automatically @generated by Cargo.\n# It is not intended for manual editing.\nversion = 4\n\n[[package]]\nname = \"aho-corasick\"\nversion = \"1.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b2969dcb958b36655471fc61f7e416fa76033bdd4bfed0678d8fee1e2d07a1f0\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"anes\"\nversion = \"0.1.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4b46cbb362ab8752921c97e041f5e366ee6297bd428a31275b9fcf1e380f7299\"\n\n[[package]]\nname = \"anstyle\"\nversion = \"1.0.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7079075b41f533b8c61d2a4d073c4676e1f8b249ff94a393b0595db304e0dd87\"\n\n[[package]]\nname = \"anyhow\"\nversion = \"1.0.79\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"080e9890a082662b09c1ad45f567faeeb47f22b5fb23895fbe1e651e718e25ca\"\n\n[[package]]\nname = \"assert_cmd\"\nversion = \"2.0.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"00ad3f3a942eee60335ab4342358c161ee296829e0d16ff42fc1d6cb07815467\"\ndependencies = [\n \"anstyle\",\n \"bstr\",\n \"doc-comment\",\n \"predicates\",\n \"predicates-core\",\n \"predicates-tree\",\n \"wait-timeout\",\n]\n\n[[package]]\nname = \"assert_fs\"\nversion = \"1.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2cd762e110c8ed629b11b6cde59458cc1c71de78ebbcc30099fc8e0403a2a2ec\"\ndependencies = [\n \"anstyle\",\n \"doc-comment\",\n \"globwalk\",\n \"predicates\",\n \"predicates-core\",\n \"predicates-tree\",\n \"tempfile\",\n]\n\n[[package]]\nname = \"atty\"\nversion = \"0.2.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d9b39be18770d11421cdb1b9947a45dd3f37e93092cbf377614828a319d5fee8\"\ndependencies = [\n \"hermit-abi 0.1.19\",\n \"libc\",\n \"winapi\",\n]\n\n[[package]]\nname = \"autocfg\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d468802bab17cbc0cc575e9b053f41e72aa36bfa6b7f55e3529ffa43161b97fa\"\n\n[[package]]\nname = \"bitflags\"\nversion = \"1.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bef38d45163c2f1dde094a7dfd33ccf595c92905c8f8f4fdc18d06fb1037718a\"\n\n[[package]]\nname = \"bitflags\"\nversion = \"2.4.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ed570934406eb16438a4e976b1b4500774099c13b8cb96eec99f620f05090ddf\"\n\n[[package]]\nname = \"borsh\"\nversion = \"1.5.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a6362ed55def622cddc70a4746a68554d7b687713770de539e59a739b249f8ed\"\ndependencies = [\n \"cfg_aliases\",\n]\n\n[[package]]\nname = \"bstr\"\nversion = \"1.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c48f0051a4b4c5e0b6d365cd04af53aeaa209e3cc15ec2cdb69e73cc87fbd0dc\"\ndependencies = [\n \"memchr\",\n \"regex-automata\",\n \"serde\",\n]\n\n[[package]]\nname = \"bumpalo\"\nversion = \"3.14.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7f30e7476521f6f8af1a1c4c0b8cc94f0bee37d91763d0ca2665f299b6cd8aec\"\n\n[[package]]\nname = \"bytecount\"\nversion = \"0.6.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e1e5f035d16fc623ae5f74981db80a439803888314e3a555fd6f04acd51a3205\"\n\n[[package]]\nname = \"cast\"\nversion = \"0.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"37b2a672a2cb129a2e41c10b1224bb368f9f37a2b16b612598138befd7b37eb5\"\n\n[[package]]\nname = \"cfg-if\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd\"\n\n[[package]]\nname = \"cfg_aliases\"\nversion = \"0.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"613afe47fcd5fac7ccf1db93babcb082c5994d996f20b8b159f2ad1658eb5724\"\n\n[[package]]\nname = \"ciborium\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"42e69ffd6f0917f5c029256a24d0161db17cea3997d185db0d35926308770f0e\"\ndependencies = [\n \"ciborium-io\",\n \"ciborium-ll\",\n \"serde\",\n]\n\n[[package]]\nname = \"ciborium-io\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"05afea1e0a06c9be33d539b876f1ce3692f4afea2cb41f740e7743225ed1c757\"\n\n[[package]]\nname = \"ciborium-ll\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"57663b653d948a338bfb3eeba9bb2fd5fcfaecb9e199e87e1eda4d9e8b240fd9\"\ndependencies = [\n \"ciborium-io\",\n \"half\",\n]\n\n[[package]]\nname = \"clap\"\nversion = \"3.2.25\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4ea181bf566f71cb9a5d17a59e1871af638180a18fb0035c92ae62b705207123\"\ndependencies = [\n \"atty\",\n \"bitflags 1.3.2\",\n \"clap_derive\",\n \"clap_lex\",\n \"indexmap 1.9.3\",\n \"once_cell\",\n \"strsim\",\n \"termcolor\",\n \"textwrap\",\n]\n\n[[package]]\nname = \"clap_derive\"\nversion = \"3.2.25\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ae6371b8bdc8b7d3959e9cf7b22d4435ef3e79e138688421ec654acf8c81b008\"\ndependencies = [\n \"heck\",\n \"proc-macro-error\",\n \"proc-macro2\",\n \"quote\",\n \"syn 1.0.109\",\n]\n\n[[package]]\nname = \"clap_lex\"\nversion = \"0.2.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2850f2f5a82cbf437dd5af4d49848fbdfc27c157c3d010345776f952765261c5\"\ndependencies = [\n \"os_str_bytes\",\n]\n\n[[package]]\nname = \"console\"\nversion = \"0.15.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0e1f83fc076bd6dd27517eacdf25fef6c4dfe5f1d7448bafaaf3a26f13b5e4eb\"\ndependencies = [\n \"encode_unicode\",\n \"lazy_static\",\n \"libc\",\n \"unicode-width\",\n \"windows-sys\",\n]\n\n[[package]]\nname = \"criterion\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e7c76e09c1aae2bc52b3d2f29e13c6572553b30c4aa1b8a49fd70de6412654cb\"\ndependencies = [\n \"anes\",\n \"atty\",\n \"cast\",\n \"ciborium\",\n \"clap\",\n \"criterion-plot\",\n \"itertools\",\n \"lazy_static\",\n \"num-traits\",\n \"oorandom\",\n \"plotters\",\n \"rayon\",\n \"regex\",\n \"serde\",\n \"serde_derive\",\n \"serde_json\",\n \"tinytemplate\",\n \"walkdir\",\n]\n\n[[package]]\nname = \"criterion-plot\"\nversion = \"0.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6b50826342786a51a89e2da3a28f1c32b06e387201bc2d19791f622c673706b1\"\ndependencies = [\n \"cast\",\n \"itertools\",\n]\n\n[[package]]\nname = \"crossbeam-channel\"\nversion = \"0.5.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"176dc175b78f56c0f321911d9c8eb2b77a78a4860b9c19db83835fea1a46649b\"\ndependencies = [\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"crossbeam-deque\"\nversion = \"0.8.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"613f8cc01fe9cf1a3eb3d7f488fd2fa8388403e97039e2f73692932e291a770d\"\ndependencies = [\n \"crossbeam-epoch\",\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"crossbeam-epoch\"\nversion = \"0.9.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5b82ac4a3c2ca9c3460964f020e1402edd5753411d7737aa39c3714ad1b5420e\"\ndependencies = [\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"crossbeam-utils\"\nversion = \"0.8.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"248e3bacc7dc6baa3b21e405ee045c3047101a49145e7e9eca583ab4c2ca5345\"\n\n[[package]]\nname = \"crunchy\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7a81dae078cea95a014a339291cec439d2f232ebe854a9d672b796c6afafa9b7\"\n\n[[package]]\nname = \"derive_more\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4a9b99b9cbbe49445b21764dc0625032a89b145a2642e67603e1c936f5458d05\"\ndependencies = [\n \"derive_more-impl\",\n]\n\n[[package]]\nname = \"derive_more-impl\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cb7330aeadfbe296029522e6c40f315320aba36fc43a5b3632f3795348f3bd22\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.48\",\n \"unicode-xid\",\n]\n\n[[package]]\nname = \"difflib\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6184e33543162437515c2e2b48714794e37845ec9851711914eec9d308f6ebe8\"\n\n[[package]]\nname = \"doc-comment\"\nversion = \"0.3.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fea41bba32d969b513997752735605054bc0dfa92b4c56bf1189f2e174be7a10\"\n\n[[package]]\nname = \"ec4rs\"\nversion = \"1.0.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cbe77819d458aa1ffc58cfdc1cc240f6356952908ea4ee1864da53b0c7e19437\"\n\n[[package]]\nname = \"either\"\nversion = \"1.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a26ae43d7bcc3b814de94796a5e736d4029efb0ee900c12e2d54c993ad1a1e07\"\n\n[[package]]\nname = \"encode_unicode\"\nversion = \"0.3.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a357d28ed41a50f9c765dbfe56cbc04a64e53e5fc58ba79fbc34c10ef3df831f\"\n\n[[package]]\nname = \"env_logger\"\nversion = \"0.10.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4cd405aab171cb85d6735e5c8d9db038c17d3ca007a4d2c25f337935c3d90580\"\ndependencies = [\n \"log\",\n]\n\n[[package]]\nname = \"equivalent\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5443807d6dff69373d433ab9ef5378ad8df50ca6298caf15de6e52e24aaf54d5\"\n\n[[package]]\nname = \"errno\"\nversion = \"0.3.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a258e46cdc063eb8519c00b9fc845fc47bcfca4130e2f08e88665ceda8474245\"\ndependencies = [\n \"libc\",\n \"windows-sys\",\n]\n\n[[package]]\nname = \"fastrand\"\nversion = \"2.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"25cbce373ec4653f1a01a31e8a5e5ec0c622dc27ff9c4e6606eefef5cbbed4a5\"\n\n[[package]]\nname = \"full_moon\"\nversion = \"1.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9a02c056a5966f6db8e663ee48093280f098d68d97763a94490ee63178d54776\"\ndependencies = [\n \"bytecount\",\n \"cfg-if\",\n \"derive_more\",\n \"full_moon_derive\",\n \"paste\",\n \"serde\",\n \"smol_str\",\n]\n\n[[package]]\nname = \"full_moon_derive\"\nversion = \"0.11.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"99b4bd12ce56927d1dc5478d21528ea8c4b93ca85ff8f8043b6a5351a2a3c6f7\"\ndependencies = [\n \"indexmap 1.9.3\",\n \"proc-macro2\",\n \"quote\",\n \"syn 1.0.109\",\n]\n\n[[package]]\nname = \"globset\"\nversion = \"0.4.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"57da3b9b5b85bd66f31093f8c408b90a74431672542466497dcbdfdc02034be1\"\ndependencies = [\n \"aho-corasick\",\n \"bstr\",\n \"log\",\n \"regex-automata\",\n \"regex-syntax\",\n]\n\n[[package]]\nname = \"globwalk\"\nversion = \"0.9.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0bf760ebf69878d9fd8f110c89703d90ce35095324d1f1edcb595c63945ee757\"\ndependencies = [\n \"bitflags 2.4.2\",\n \"ignore\",\n \"walkdir\",\n]\n\n[[package]]\nname = \"half\"\nversion = \"2.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bc52e53916c08643f1b56ec082790d1e86a32e58dc5268f897f313fbae7b4872\"\ndependencies = [\n \"cfg-if\",\n \"crunchy\",\n]\n\n[[package]]\nname = \"hashbrown\"\nversion = \"0.12.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8a9ee70c43aaf417c914396645a0fa852624801b24ebb7ae78fe8272889ac888\"\n\n[[package]]\nname = \"hashbrown\"\nversion = \"0.14.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"290f1a1d9242c78d09ce40a5e87e7554ee637af1351968159f4952f028f75604\"\n\n[[package]]\nname = \"heck\"\nversion = \"0.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"95505c38b4572b2d910cecb0281560f54b440a19336cbbcb27bf6ce6adc6f5a8\"\n\n[[package]]\nname = \"hermit-abi\"\nversion = \"0.1.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"62b467343b94ba476dcb2500d242dadbb39557df889310ac77c5d99100aaac33\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"hermit-abi\"\nversion = \"0.3.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5d3d0e0f38255e7fa3cf31335b3a56f05febd18025f4db5ef7a0cfb4f8da651f\"\n\n[[package]]\nname = \"ignore\"\nversion = \"0.4.22\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b46810df39e66e925525d6e38ce1e7f6e1d208f72dc39757880fcb66e2c58af1\"\ndependencies = [\n \"crossbeam-deque\",\n \"globset\",\n \"log\",\n \"memchr\",\n \"regex-automata\",\n \"same-file\",\n \"walkdir\",\n \"winapi-util\",\n]\n\n[[package]]\nname = \"indexmap\"\nversion = \"1.9.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bd070e393353796e801d209ad339e89596eb4c8d430d18ede6a1cced8fafbd99\"\ndependencies = [\n \"autocfg\",\n \"hashbrown 0.12.3\",\n]\n\n[[package]]\nname = \"indexmap\"\nversion = \"2.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d530e1a18b1cb4c484e6e34556a0d948706958449fca0cab753d649f2bce3d1f\"\ndependencies = [\n \"equivalent\",\n \"hashbrown 0.14.3\",\n]\n\n[[package]]\nname = \"insta\"\nversion = \"1.34.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5d64600be34b2fcfc267740a243fa7744441bb4947a619ac4e5bb6507f35fbfc\"\ndependencies = [\n \"console\",\n \"globset\",\n \"lazy_static\",\n \"linked-hash-map\",\n \"similar\",\n \"walkdir\",\n \"yaml-rust\",\n]\n\n[[package]]\nname = \"itertools\"\nversion = \"0.10.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b0fd2260e829bddf4cb6ea802289de2f86d6a7a690192fbe91b3f46e0f2c8473\"\ndependencies = [\n \"either\",\n]\n\n[[package]]\nname = \"itoa\"\nversion = \"1.0.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b1a46d1a171d865aa5f83f92695765caa047a9b4cbae2cbf37dbd613a793fd4c\"\n\n[[package]]\nname = \"js-sys\"\nversion = \"0.3.67\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9a1d36f1235bc969acba30b7f5990b864423a6068a10f7c90ae8f0112e3a59d1\"\ndependencies = [\n \"wasm-bindgen\",\n]\n\n[[package]]\nname = \"lazy_static\"\nversion = \"1.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e2abad23fbc42b3700f2f279844dc832adb2b2eb069b2df918f455c4e18cc646\"\n\n[[package]]\nname = \"libc\"\nversion = \"0.2.155\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"97b3888a4aecf77e811145cadf6eef5901f4782c53886191b2f693f24761847c\"\n\n[[package]]\nname = \"linked-hash-map\"\nversion = \"0.5.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0717cef1bc8b636c6e1c1bbdefc09e6322da8a9321966e8928ef80d20f7f770f\"\n\n[[package]]\nname = \"linux-raw-sys\"\nversion = \"0.4.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"01cda141df6706de531b6c46c3a33ecca755538219bd484262fa09410c13539c\"\n\n[[package]]\nname = \"log\"\nversion = \"0.4.20\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b5e6163cb8c49088c2c36f57875e58ccd8c87c7427f7fbd50ea6710b2f3f2e8f\"\n\n[[package]]\nname = \"memchr\"\nversion = \"2.7.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"523dc4f511e55ab87b694dc30d0f820d60906ef06413f93d4d7a1385599cc149\"\n\n[[package]]\nname = \"num-traits\"\nversion = \"0.2.17\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"39e3200413f237f41ab11ad6d161bc7239c84dcb631773ccd7de3dfe4b5c267c\"\ndependencies = [\n \"autocfg\",\n]\n\n[[package]]\nname = \"num_cpus\"\nversion = \"1.16.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4161fcb6d602d4d2081af7c3a45852d875a03dd337a6bfdd6e06407b61342a43\"\ndependencies = [\n \"hermit-abi 0.3.4\",\n \"libc\",\n]\n\n[[package]]\nname = \"once_cell\"\nversion = \"1.19.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3fdb12b2476b595f9358c5161aa467c2438859caa136dec86c26fdd2efe17b92\"\n\n[[package]]\nname = \"oorandom\"\nversion = \"11.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0ab1bc2a289d34bd04a330323ac98a1b4bc82c9d9fcb1e66b63caa84da26b575\"\n\n[[package]]\nname = \"os_str_bytes\"\nversion = \"6.6.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e2355d85b9a3786f481747ced0e0ff2ba35213a1f9bd406ed906554d7af805a1\"\n\n[[package]]\nname = \"paste\"\nversion = \"1.0.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"de3145af08024dea9fa9914f381a17b8fc6034dfb00f3a84013f7ff43f29ed4c\"\n\n[[package]]\nname = \"plotters\"\nversion = \"0.3.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d2c224ba00d7cadd4d5c660deaf2098e5e80e07846537c51f9cfa4be50c1fd45\"\ndependencies = [\n \"num-traits\",\n \"plotters-backend\",\n \"plotters-svg\",\n \"wasm-bindgen\",\n \"web-sys\",\n]\n\n[[package]]\nname = \"plotters-backend\"\nversion = \"0.3.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9e76628b4d3a7581389a35d5b6e2139607ad7c75b17aed325f210aa91f4a9609\"\n\n[[package]]\nname = \"plotters-svg\"\nversion = \"0.3.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"38f6d39893cca0701371e3c27294f09797214b86f1fb951b89ade8ec04e2abab\"\ndependencies = [\n \"plotters-backend\",\n]\n\n[[package]]\nname = \"predicates\"\nversion = \"3.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"68b87bfd4605926cdfefc1c3b5f8fe560e3feca9d5552cf68c466d3d8236c7e8\"\ndependencies = [\n \"anstyle\",\n \"difflib\",\n \"predicates-core\",\n]\n\n[[package]]\nname = \"predicates-core\"\nversion = \"1.0.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b794032607612e7abeb4db69adb4e33590fa6cf1149e95fd7cb00e634b92f174\"\n\n[[package]]\nname = \"predicates-tree\"\nversion = \"1.0.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"368ba315fb8c5052ab692e68a0eefec6ec57b23a36959c14496f0b0df2c0cecf\"\ndependencies = [\n \"predicates-core\",\n \"termtree\",\n]\n\n[[package]]\nname = \"proc-macro-error\"\nversion = \"1.0.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"da25490ff9892aab3fcf7c36f08cfb902dd3e71ca0f9f9517bea02a73a5ce38c\"\ndependencies = [\n \"proc-macro-error-attr\",\n \"proc-macro2\",\n \"quote\",\n \"syn 1.0.109\",\n \"version_check\",\n]\n\n[[package]]\nname = \"proc-macro-error-attr\"\nversion = \"1.0.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a1be40180e52ecc98ad80b184934baf3d0d29f979574e439af5a55274b35f869\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"version_check\",\n]\n\n[[package]]\nname = \"proc-macro2\"\nversion = \"1.0.78\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e2422ad645d89c99f8f3e6b88a9fdeca7fabeac836b1002371c4367c8f984aae\"\ndependencies = [\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"quote\"\nversion = \"1.0.35\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"291ec9ab5efd934aaf503a6466c5d5251535d108ee747472c3977cc5acc868ef\"\ndependencies = [\n \"proc-macro2\",\n]\n\n[[package]]\nname = \"rayon\"\nversion = \"1.8.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fa7237101a77a10773db45d62004a272517633fbcc3df19d96455ede1122e051\"\ndependencies = [\n \"either\",\n \"rayon-core\",\n]\n\n[[package]]\nname = \"rayon-core\"\nversion = \"1.12.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1465873a3dfdaa8ae7cb14b4383657caab0b3e8a0aa9ae8e04b044854c8dfce2\"\ndependencies = [\n \"crossbeam-deque\",\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"redox_syscall\"\nversion = \"0.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4722d768eff46b75989dd134e5c353f0d6296e5aaa3132e776cbdb56be7731aa\"\ndependencies = [\n \"bitflags 1.3.2\",\n]\n\n[[package]]\nname = \"regex\"\nversion = \"1.10.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b62dbe01f0b06f9d8dc7d49e05a0785f153b00b2c227856282f671e0318c9b15\"\ndependencies = [\n \"aho-corasick\",\n \"memchr\",\n \"regex-automata\",\n \"regex-syntax\",\n]\n\n[[package]]\nname = \"regex-automata\"\nversion = \"0.4.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5bb987efffd3c6d0d8f5f89510bb458559eab11e4f869acb20bf845e016259cd\"\ndependencies = [\n \"aho-corasick\",\n \"memchr\",\n \"regex-syntax\",\n]\n\n[[package]]\nname = \"regex-syntax\"\nversion = \"0.8.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c08c74e62047bb2de4ff487b251e4a92e24f48745648451635cec7d591162d9f\"\n\n[[package]]\nname = \"rustix\"\nversion = \"0.38.30\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"322394588aaf33c24007e8bb3238ee3e4c5c09c084ab32bc73890b99ff326bca\"\ndependencies = [\n \"bitflags 2.4.2\",\n \"errno\",\n \"libc\",\n \"linux-raw-sys\",\n \"windows-sys\",\n]\n\n[[package]]\nname = \"rustversion\"\nversion = \"1.0.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7ffc183a10b4478d04cbbbfc96d0873219d962dd5accaff2ffbd4ceb7df837f4\"\n\n[[package]]\nname = \"ryu\"\nversion = \"1.0.16\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f98d2aa92eebf49b69786be48e4477826b256916e84a57ff2a4f21923b48eb4c\"\n\n[[package]]\nname = \"same-file\"\nversion = \"1.0.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"93fc1dc3aaa9bfed95e02e6eadabb4baf7e3078b0bd1b4d7b6b0b68378900502\"\ndependencies = [\n \"winapi-util\",\n]\n\n[[package]]\nname = \"serde\"\nversion = \"1.0.196\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"870026e60fa08c69f064aa766c10f10b1d62db9ccd4d0abb206472bee0ce3b32\"\ndependencies = [\n \"serde_derive\",\n]\n\n[[package]]\nname = \"serde_derive\"\nversion = \"1.0.196\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"33c85360c95e7d137454dc81d9a4ed2b8efd8fbe19cee57357b32b9771fccb67\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.48\",\n]\n\n[[package]]\nname = \"serde_json\"\nversion = \"1.0.112\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4d1bd37ce2324cf3bf85e5a25f96eb4baf0d5aa6eba43e7ae8958870c4ec48ed\"\ndependencies = [\n \"itoa\",\n \"ryu\",\n \"serde\",\n]\n\n[[package]]\nname = \"serde_spanned\"\nversion = \"0.6.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"eb3622f419d1296904700073ea6cc23ad690adbd66f13ea683df73298736f0c1\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"similar\"\nversion = \"2.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"32fea41aca09ee824cc9724996433064c89f7777e60762749a4170a14abbfa21\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"smol_str\"\nversion = \"0.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9676b89cd56310a87b93dec47b11af744f34d5fc9f367b829474eec0a891350d\"\ndependencies = [\n \"borsh\",\n \"serde\",\n]\n\n[[package]]\nname = \"strsim\"\nversion = \"0.10.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"73473c0e59e6d5812c5dfe2a064a6444949f089e20eec9a2e5506596494e4623\"\n\n[[package]]\nname = \"strum\"\nversion = \"0.25.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"290d54ea6f91c969195bdbcd7442c8c2a2ba87da8bf60a7ee86a235d4bc1e125\"\ndependencies = [\n \"strum_macros\",\n]\n\n[[package]]\nname = \"strum_macros\"\nversion = \"0.25.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"23dc1fa9ac9c169a78ba62f0b841814b7abae11bdd047b9c58f893439e309ea0\"\ndependencies = [\n \"heck\",\n \"proc-macro2\",\n \"quote\",\n \"rustversion\",\n \"syn 2.0.48\",\n]\n\n[[package]]\nname = \"stylua\"\nversion = \"2.0.2\"\ndependencies = [\n \"anyhow\",\n \"assert_cmd\",\n \"assert_fs\",\n \"cfg-if\",\n \"clap\",\n \"console\",\n \"criterion\",\n \"crossbeam-channel\",\n \"ec4rs\",\n \"env_logger\",\n \"full_moon\",\n \"globset\",\n \"ignore\",\n \"insta\",\n \"lazy_static\",\n \"log\",\n \"num_cpus\",\n \"regex\",\n \"serde\",\n \"serde_json\",\n \"similar\",\n \"strum\",\n \"thiserror\",\n \"threadpool\",\n \"toml\",\n \"wasm-bindgen\",\n]\n\n[[package]]\nname = \"syn\"\nversion = \"1.0.109\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"72b64191b275b66ffe2469e8af2c1cfe3bafa67b529ead792a6d0160888b4237\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"syn\"\nversion = \"2.0.48\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0f3531638e407dfc0814761abb7c00a5b54992b849452a0646b7f65c9f770f3f\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"tempfile\"\nversion = \"3.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"01ce4141aa927a6d1bd34a041795abd0db1cccba5d5f24b009f694bdf3a1f3fa\"\ndependencies = [\n \"cfg-if\",\n \"fastrand\",\n \"redox_syscall\",\n \"rustix\",\n \"windows-sys\",\n]\n\n[[package]]\nname = \"termcolor\"\nversion = \"1.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"06794f8f6c5c898b3275aebefa6b8a1cb24cd2c6c79397ab15774837a0bc5755\"\ndependencies = [\n \"winapi-util\",\n]\n\n[[package]]\nname = \"termtree\"\nversion = \"0.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3369f5ac52d5eb6ab48c6b4ffdc8efbcad6b89c765749064ba298f2c68a16a76\"\n\n[[package]]\nname = \"textwrap\"\nversion = \"0.16.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"222a222a5bfe1bba4a77b45ec488a741b3cb8872e5e499451fd7d0129c9c7c3d\"\n\n[[package]]\nname = \"thiserror\"\nversion = \"1.0.56\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d54378c645627613241d077a3a79db965db602882668f9136ac42af9ecb730ad\"\ndependencies = [\n \"thiserror-impl\",\n]\n\n[[package]]\nname = \"thiserror-impl\"\nversion = \"1.0.56\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fa0faa943b50f3db30a20aa7e265dbc66076993efed8463e8de414e5d06d3471\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.48\",\n]\n\n[[package]]\nname = \"threadpool\"\nversion = \"1.8.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d050e60b33d41c19108b32cea32164033a9013fe3b46cbd4457559bfbf77afaa\"\ndependencies = [\n \"num_cpus\",\n]\n\n[[package]]\nname = \"tinytemplate\"\nversion = \"1.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"be4d6b5f19ff7664e8c98d03e2139cb510db9b0a60b55f8e8709b689d939b6bc\"\ndependencies = [\n \"serde\",\n \"serde_json\",\n]\n\n[[package]]\nname = \"toml\"\nversion = \"0.8.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a1a195ec8c9da26928f773888e0742ca3ca1040c6cd859c919c9f59c1954ab35\"\ndependencies = [\n \"serde\",\n \"serde_spanned\",\n \"toml_datetime\",\n \"toml_edit\",\n]\n\n[[package]]\nname = \"toml_datetime\"\nversion = \"0.6.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3550f4e9685620ac18a50ed434eb3aec30db8ba93b0287467bca5826ea25baf1\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"toml_edit\"\nversion = \"0.21.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d34d383cd00a163b4a5b85053df514d45bc330f6de7737edfe0a93311d1eaa03\"\ndependencies = [\n \"indexmap 2.1.0\",\n \"serde\",\n \"serde_spanned\",\n \"toml_datetime\",\n \"winnow\",\n]\n\n[[package]]\nname = \"unicode-ident\"\nversion = \"1.0.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3354b9ac3fae1ff6755cb6db53683adb661634f67557942dea4facebec0fee4b\"\n\n[[package]]\nname = \"unicode-width\"\nversion = \"0.1.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e51733f11c9c4f72aa0c160008246859e340b00807569a0da0e7a1079b27ba85\"\n\n[[package]]\nname = \"unicode-xid\"\nversion = \"0.2.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ebc1c04c71510c7f702b52b7c350734c9ff1295c464a03335b00bb84fc54f853\"\n\n[[package]]\nname = \"version_check\"\nversion = \"0.9.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"49874b5167b65d7193b8aba1567f5c7d93d001cafc34600cee003eda787e483f\"\n\n[[package]]\nname = \"wait-timeout\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9f200f5b12eb75f8c1ed65abd4b2db8a6e1b138a20de009dacee265a2498f3f6\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"walkdir\"\nversion = \"2.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d71d857dc86794ca4c280d616f7da00d2dbfd8cd788846559a6813e6aa4b54ee\"\ndependencies = [\n \"same-file\",\n \"winapi-util\",\n]\n\n[[package]]\nname = \"wasm-bindgen\"\nversion = \"0.2.90\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b1223296a201415c7fad14792dbefaace9bd52b62d33453ade1c5b5f07555406\"\ndependencies = [\n \"cfg-if\",\n \"wasm-bindgen-macro\",\n]\n\n[[package]]\nname = \"wasm-bindgen-backend\"\nversion = \"0.2.90\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fcdc935b63408d58a32f8cc9738a0bffd8f05cc7c002086c6ef20b7312ad9dcd\"\ndependencies = [\n \"bumpalo\",\n \"log\",\n \"once_cell\",\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.48\",\n \"wasm-bindgen-shared\",\n]\n\n[[package]]\nname = \"wasm-bindgen-macro\"\nversion = \"0.2.90\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3e4c238561b2d428924c49815533a8b9121c664599558a5d9ec51f8a1740a999\"\ndependencies = [\n \"quote\",\n \"wasm-bindgen-macro-support\",\n]\n\n[[package]]\nname = \"wasm-bindgen-macro-support\"\nversion = \"0.2.90\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bae1abb6806dc1ad9e560ed242107c0f6c84335f1749dd4e8ddb012ebd5e25a7\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.48\",\n \"wasm-bindgen-backend\",\n \"wasm-bindgen-shared\",\n]\n\n[[package]]\nname = \"wasm-bindgen-shared\"\nversion = \"0.2.90\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4d91413b1c31d7539ba5ef2451af3f0b833a005eb27a631cec32bc0635a8602b\"\n\n[[package]]\nname = \"web-sys\"\nversion = \"0.3.67\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"58cd2333b6e0be7a39605f0e255892fd7418a682d8da8fe042fe25128794d2ed\"\ndependencies = [\n \"js-sys\",\n \"wasm-bindgen\",\n]\n\n[[package]]\nname = \"winapi\"\nversion = \"0.3.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5c839a674fcd7a98952e593242ea400abe93992746761e38641405d28b00f419\"\ndependencies = [\n \"winapi-i686-pc-windows-gnu\",\n \"winapi-x86_64-pc-windows-gnu\",\n]\n\n[[package]]\nname = \"winapi-i686-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ac3b87c63620426dd9b991e5ce0329eff545bccbbb34f3be09ff6fb6ab51b7b6\"\n\n[[package]]\nname = \"winapi-util\"\nversion = \"0.1.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f29e6f9198ba0d26b4c9f07dbe6f9ed633e1f3d5b8b414090084349e46a52596\"\ndependencies = [\n \"winapi\",\n]\n\n[[package]]\nname = \"winapi-x86_64-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"712e227841d057c1ee1cd2fb22fa7e5a5461ae8e48fa2ca79ec42cfc1931183f\"\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.52.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"282be5f36a8ce781fad8c8ae18fa3f9beff57ec1b52cb3de0789201425d9a33d\"\ndependencies = [\n \"windows-targets\",\n]\n\n[[package]]\nname = \"windows-targets\"\nversion = \"0.52.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8a18201040b24831fbb9e4eb208f8892e1f50a37feb53cc7ff887feb8f50e7cd\"\ndependencies = [\n \"windows_aarch64_gnullvm\",\n \"windows_aarch64_msvc\",\n \"windows_i686_gnu\",\n \"windows_i686_msvc\",\n \"windows_x86_64_gnu\",\n \"windows_x86_64_gnullvm\",\n \"windows_x86_64_msvc\",\n]\n\n[[package]]\nname = \"windows_aarch64_gnullvm\"\nversion = \"0.52.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cb7764e35d4db8a7921e09562a0304bf2f93e0a51bfccee0bd0bb0b666b015ea\"\n\n[[package]]\nname = \"windows_aarch64_msvc\"\nversion = \"0.52.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bbaa0368d4f1d2aaefc55b6fcfee13f41544ddf36801e793edbbfd7d7df075ef\"\n\n[[package]]\nname = \"windows_i686_gnu\"\nversion = \"0.52.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a28637cb1fa3560a16915793afb20081aba2c92ee8af57b4d5f28e4b3e7df313\"\n\n[[package]]\nname = \"windows_i686_msvc\"\nversion = \"0.52.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ffe5e8e31046ce6230cc7215707b816e339ff4d4d67c65dffa206fd0f7aa7b9a\"\n\n[[package]]\nname = \"windows_x86_64_gnu\"\nversion = \"0.52.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3d6fa32db2bc4a2f5abeacf2b69f7992cd09dca97498da74a151a3132c26befd\"\n\n[[package]]\nname = \"windows_x86_64_gnullvm\"\nversion = \"0.52.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1a657e1e9d3f514745a572a6846d3c7aa7dbe1658c056ed9c3344c4109a6949e\"\n\n[[package]]\nname = \"windows_x86_64_msvc\"\nversion = \"0.52.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dff9641d1cd4be8d1a070daf9e3773c5f67e78b4d9d42263020c057706765c04\"\n\n[[package]]\nname = \"winnow\"\nversion = \"0.5.35\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1931d78a9c73861da0134f453bb1f790ce49b2e30eba8410b4b79bac72b46a2d\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"yaml-rust\"\nversion = \"0.4.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"56c1936c4cc7a1c9ab21a1ebb602eb942ba868cbd44a99cb7cdc5892335e1c85\"\ndependencies = [\n \"linked-hash-map\",\n]\n"
        },
        {
          "name": "Cargo.toml",
          "type": "blob",
          "size": 2.0029296875,
          "content": "[package]\nname = \"stylua\"\nversion = \"2.0.2\"\nauthors = [\"JohnnyMorganz <johnnymorganz@outlook.com>\"]\ndescription = \"A code formatter for Lua\"\nlicense = \"MPL-2.0\"\nrepository = \"https://github.com/johnnymorganz/stylua\"\nreadme = \"README.md\"\ncategories = [\"command-line-utilities\", \"development-tools\"]\nkeywords = [\"cli\", \"utility\", \"lua\", \"lua51\", \"formatter\"]\nedition = \"2018\"\nexclude = [\"stylua-vscode/**\", \"tests/**\"]\n\n[lib]\nname = \"stylua_lib\"\npath = \"src/lib.rs\"\ncrate-type = [\"cdylib\", \"rlib\"]\nbench = false\n\n[[bin]]\nname = \"stylua\"\npath = \"src/cli/main.rs\"\nbench = false\n\n[features]\ndefault = [\"editorconfig\", \"wasm-bindgen\"]\nserialize = []\nfromstr = [\"strum\"]\nluau = [\"full_moon/roblox\"]\nlua52 = [\"full_moon/lua52\"]\nlua53 = [\"lua52\", \"full_moon/lua53\"]\nlua54 = [\"lua53\", \"full_moon/lua54\"]\nluajit = [\"full_moon/luajit\"]\neditorconfig = [\"ec4rs\"]\n\n[dependencies]\nanyhow = \"1.0.75\"\ncfg-if = \"1.0.0\"\nclap = { version = \"3.1.6\", features = [\"derive\"] }\nconsole = \"0.15.7\"\ncrossbeam-channel = \"0.5.8\"\nec4rs = { version = \"1.0.2\", optional = true }\nenv_logger = { version = \"0.10.0\", default-features = false }\nfull_moon = \"1.2.0\"\nglobset = \"0.4.13\"\nignore = \"0.4.20\"\nlazy_static = \"1.4.0\"\nlog = \"0.4.20\"\nnum_cpus = \"1.16.0\"\nregex = \"1.10.2\"\nserde = \"1.0.188\"\nserde_json = \"1.0.108\"\nsimilar = { version = \"2.3.0\", features = [\"text\", \"inline\", \"serde\"] }\nstrum = { version = \"0.25.0\", features = [\"derive\"], optional = true }\nthiserror = \"1.0.49\"\nthreadpool = \"1.8.1\"\ntoml = \"0.8.1\"\n\n[target.'cfg(target_arch = \"wasm32\")'.dependencies]\nwasm-bindgen = { version = \"0.2.81\", optional = true }\n\n# full-moon should be compiled to release optimisations in debug mode due to stack overflows\n# https://github.com/Kampfkarren/full-moon/issues/140\n[profile.dev.package.full_moon]\nopt-level = 3\n\n[dev-dependencies]\ncriterion = \"0.4.0\"\ninsta = { version = \"1.34.0\", features = [\"glob\"] }\nassert_cmd = \"2.0.12\"\nassert_fs = \"1.0.13\"\n\n[[bench]]\nname = \"date\"\nharness = false\n\n[[bench]]\nname = \"nested_tables\"\nharness = false\n\n[[bench]]\nname = \"docgen\"\nharness = false\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.2080078125,
          "content": "FROM rust:1.75 AS build\nARG CARGO_FLAGS=\"--all-features --release\"\n\nWORKDIR /app\nCOPY . ./\nRUN cargo build ${CARGO_FLAGS}\n\nFROM gcr.io/distroless/cc\nCOPY --from=build /app/target/release/stylua /\nCMD [\"./stylua\"]\n"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 16.33203125,
          "content": "Mozilla Public License Version 2.0\n==================================\n\n1. Definitions\n--------------\n\n1.1. \"Contributor\"\n    means each individual or legal entity that creates, contributes to\n    the creation of, or owns Covered Software.\n\n1.2. \"Contributor Version\"\n    means the combination of the Contributions of others (if any) used\n    by a Contributor and that particular Contributor's Contribution.\n\n1.3. \"Contribution\"\n    means Covered Software of a particular Contributor.\n\n1.4. \"Covered Software\"\n    means Source Code Form to which the initial Contributor has attached\n    the notice in Exhibit A, the Executable Form of such Source Code\n    Form, and Modifications of such Source Code Form, in each case\n    including portions thereof.\n\n1.5. \"Incompatible With Secondary Licenses\"\n    means\n\n    (a) that the initial Contributor has attached the notice described\n        in Exhibit B to the Covered Software; or\n\n    (b) that the Covered Software was made available under the terms of\n        version 1.1 or earlier of the License, but not also under the\n        terms of a Secondary License.\n\n1.6. \"Executable Form\"\n    means any form of the work other than Source Code Form.\n\n1.7. \"Larger Work\"\n    means a work that combines Covered Software with other material, in\n    a separate file or files, that is not Covered Software.\n\n1.8. \"License\"\n    means this document.\n\n1.9. \"Licensable\"\n    means having the right to grant, to the maximum extent possible,\n    whether at the time of the initial grant or subsequently, any and\n    all of the rights conveyed by this License.\n\n1.10. \"Modifications\"\n    means any of the following:\n\n    (a) any file in Source Code Form that results from an addition to,\n        deletion from, or modification of the contents of Covered\n        Software; or\n\n    (b) any new file in Source Code Form that contains any Covered\n        Software.\n\n1.11. \"Patent Claims\" of a Contributor\n    means any patent claim(s), including without limitation, method,\n    process, and apparatus claims, in any patent Licensable by such\n    Contributor that would be infringed, but for the grant of the\n    License, by the making, using, selling, offering for sale, having\n    made, import, or transfer of either its Contributions or its\n    Contributor Version.\n\n1.12. \"Secondary License\"\n    means either the GNU General Public License, Version 2.0, the GNU\n    Lesser General Public License, Version 2.1, the GNU Affero General\n    Public License, Version 3.0, or any later versions of those\n    licenses.\n\n1.13. \"Source Code Form\"\n    means the form of the work preferred for making modifications.\n\n1.14. \"You\" (or \"Your\")\n    means an individual or a legal entity exercising rights under this\n    License. For legal entities, \"You\" includes any entity that\n    controls, is controlled by, or is under common control with You. For\n    purposes of this definition, \"control\" means (a) the power, direct\n    or indirect, to cause the direction or management of such entity,\n    whether by contract or otherwise, or (b) ownership of more than\n    fifty percent (50%) of the outstanding shares or beneficial\n    ownership of such entity.\n\n2. License Grants and Conditions\n--------------------------------\n\n2.1. Grants\n\nEach Contributor hereby grants You a world-wide, royalty-free,\nnon-exclusive license:\n\n(a) under intellectual property rights (other than patent or trademark)\n    Licensable by such Contributor to use, reproduce, make available,\n    modify, display, perform, distribute, and otherwise exploit its\n    Contributions, either on an unmodified basis, with Modifications, or\n    as part of a Larger Work; and\n\n(b) under Patent Claims of such Contributor to make, use, sell, offer\n    for sale, have made, import, and otherwise transfer either its\n    Contributions or its Contributor Version.\n\n2.2. Effective Date\n\nThe licenses granted in Section 2.1 with respect to any Contribution\nbecome effective for each Contribution on the date the Contributor first\ndistributes such Contribution.\n\n2.3. Limitations on Grant Scope\n\nThe licenses granted in this Section 2 are the only rights granted under\nthis License. No additional rights or licenses will be implied from the\ndistribution or licensing of Covered Software under this License.\nNotwithstanding Section 2.1(b) above, no patent license is granted by a\nContributor:\n\n(a) for any code that a Contributor has removed from Covered Software;\n    or\n\n(b) for infringements caused by: (i) Your and any other third party's\n    modifications of Covered Software, or (ii) the combination of its\n    Contributions with other software (except as part of its Contributor\n    Version); or\n\n(c) under Patent Claims infringed by Covered Software in the absence of\n    its Contributions.\n\nThis License does not grant any rights in the trademarks, service marks,\nor logos of any Contributor (except as may be necessary to comply with\nthe notice requirements in Section 3.4).\n\n2.4. Subsequent Licenses\n\nNo Contributor makes additional grants as a result of Your choice to\ndistribute the Covered Software under a subsequent version of this\nLicense (see Section 10.2) or under the terms of a Secondary License (if\npermitted under the terms of Section 3.3).\n\n2.5. Representation\n\nEach Contributor represents that the Contributor believes its\nContributions are its original creation(s) or it has sufficient rights\nto grant the rights to its Contributions conveyed by this License.\n\n2.6. Fair Use\n\nThis License is not intended to limit any rights You have under\napplicable copyright doctrines of fair use, fair dealing, or other\nequivalents.\n\n2.7. Conditions\n\nSections 3.1, 3.2, 3.3, and 3.4 are conditions of the licenses granted\nin Section 2.1.\n\n3. Responsibilities\n-------------------\n\n3.1. Distribution of Source Form\n\nAll distribution of Covered Software in Source Code Form, including any\nModifications that You create or to which You contribute, must be under\nthe terms of this License. You must inform recipients that the Source\nCode Form of the Covered Software is governed by the terms of this\nLicense, and how they can obtain a copy of this License. You may not\nattempt to alter or restrict the recipients' rights in the Source Code\nForm.\n\n3.2. Distribution of Executable Form\n\nIf You distribute Covered Software in Executable Form then:\n\n(a) such Covered Software must also be made available in Source Code\n    Form, as described in Section 3.1, and You must inform recipients of\n    the Executable Form how they can obtain a copy of such Source Code\n    Form by reasonable means in a timely manner, at a charge no more\n    than the cost of distribution to the recipient; and\n\n(b) You may distribute such Executable Form under the terms of this\n    License, or sublicense it under different terms, provided that the\n    license for the Executable Form does not attempt to limit or alter\n    the recipients' rights in the Source Code Form under this License.\n\n3.3. Distribution of a Larger Work\n\nYou may create and distribute a Larger Work under terms of Your choice,\nprovided that You also comply with the requirements of this License for\nthe Covered Software. If the Larger Work is a combination of Covered\nSoftware with a work governed by one or more Secondary Licenses, and the\nCovered Software is not Incompatible With Secondary Licenses, this\nLicense permits You to additionally distribute such Covered Software\nunder the terms of such Secondary License(s), so that the recipient of\nthe Larger Work may, at their option, further distribute the Covered\nSoftware under the terms of either this License or such Secondary\nLicense(s).\n\n3.4. Notices\n\nYou may not remove or alter the substance of any license notices\n(including copyright notices, patent notices, disclaimers of warranty,\nor limitations of liability) contained within the Source Code Form of\nthe Covered Software, except that You may alter any license notices to\nthe extent required to remedy known factual inaccuracies.\n\n3.5. Application of Additional Terms\n\nYou may choose to offer, and to charge a fee for, warranty, support,\nindemnity or liability obligations to one or more recipients of Covered\nSoftware. However, You may do so only on Your own behalf, and not on\nbehalf of any Contributor. You must make it absolutely clear that any\nsuch warranty, support, indemnity, or liability obligation is offered by\nYou alone, and You hereby agree to indemnify every Contributor for any\nliability incurred by such Contributor as a result of warranty, support,\nindemnity or liability terms You offer. You may include additional\ndisclaimers of warranty and limitations of liability specific to any\njurisdiction.\n\n4. Inability to Comply Due to Statute or Regulation\n---------------------------------------------------\n\nIf it is impossible for You to comply with any of the terms of this\nLicense with respect to some or all of the Covered Software due to\nstatute, judicial order, or regulation then You must: (a) comply with\nthe terms of this License to the maximum extent possible; and (b)\ndescribe the limitations and the code they affect. Such description must\nbe placed in a text file included with all distributions of the Covered\nSoftware under this License. Except to the extent prohibited by statute\nor regulation, such description must be sufficiently detailed for a\nrecipient of ordinary skill to be able to understand it.\n\n5. Termination\n--------------\n\n5.1. The rights granted under this License will terminate automatically\nif You fail to comply with any of its terms. However, if You become\ncompliant, then the rights granted under this License from a particular\nContributor are reinstated (a) provisionally, unless and until such\nContributor explicitly and finally terminates Your grants, and (b) on an\nongoing basis, if such Contributor fails to notify You of the\nnon-compliance by some reasonable means prior to 60 days after You have\ncome back into compliance. Moreover, Your grants from a particular\nContributor are reinstated on an ongoing basis if such Contributor\nnotifies You of the non-compliance by some reasonable means, this is the\nfirst time You have received notice of non-compliance with this License\nfrom such Contributor, and You become compliant prior to 30 days after\nYour receipt of the notice.\n\n5.2. If You initiate litigation against any entity by asserting a patent\ninfringement claim (excluding declaratory judgment actions,\ncounter-claims, and cross-claims) alleging that a Contributor Version\ndirectly or indirectly infringes any patent, then the rights granted to\nYou by any and all Contributors for the Covered Software under Section\n2.1 of this License shall terminate.\n\n5.3. In the event of termination under Sections 5.1 or 5.2 above, all\nend user license agreements (excluding distributors and resellers) which\nhave been validly granted by You or Your distributors under this License\nprior to termination shall survive termination.\n\n************************************************************************\n*                                                                      *\n*  6. Disclaimer of Warranty                                           *\n*  -------------------------                                           *\n*                                                                      *\n*  Covered Software is provided under this License on an \"as is\"       *\n*  basis, without warranty of any kind, either expressed, implied, or  *\n*  statutory, including, without limitation, warranties that the       *\n*  Covered Software is free of defects, merchantable, fit for a        *\n*  particular purpose or non-infringing. The entire risk as to the     *\n*  quality and performance of the Covered Software is with You.        *\n*  Should any Covered Software prove defective in any respect, You     *\n*  (not any Contributor) assume the cost of any necessary servicing,   *\n*  repair, or correction. This disclaimer of warranty constitutes an   *\n*  essential part of this License. No use of any Covered Software is   *\n*  authorized under this License except under this disclaimer.         *\n*                                                                      *\n************************************************************************\n\n************************************************************************\n*                                                                      *\n*  7. Limitation of Liability                                          *\n*  --------------------------                                          *\n*                                                                      *\n*  Under no circumstances and under no legal theory, whether tort      *\n*  (including negligence), contract, or otherwise, shall any           *\n*  Contributor, or anyone who distributes Covered Software as          *\n*  permitted above, be liable to You for any direct, indirect,         *\n*  special, incidental, or consequential damages of any character      *\n*  including, without limitation, damages for lost profits, loss of    *\n*  goodwill, work stoppage, computer failure or malfunction, or any    *\n*  and all other commercial damages or losses, even if such party      *\n*  shall have been informed of the possibility of such damages. This   *\n*  limitation of liability shall not apply to liability for death or   *\n*  personal injury resulting from such party's negligence to the       *\n*  extent applicable law prohibits such limitation. Some               *\n*  jurisdictions do not allow the exclusion or limitation of           *\n*  incidental or consequential damages, so this exclusion and          *\n*  limitation may not apply to You.                                    *\n*                                                                      *\n************************************************************************\n\n8. Litigation\n-------------\n\nAny litigation relating to this License may be brought only in the\ncourts of a jurisdiction where the defendant maintains its principal\nplace of business and such litigation shall be governed by laws of that\njurisdiction, without reference to its conflict-of-law provisions.\nNothing in this Section shall prevent a party's ability to bring\ncross-claims or counter-claims.\n\n9. Miscellaneous\n----------------\n\nThis License represents the complete agreement concerning the subject\nmatter hereof. If any provision of this License is held to be\nunenforceable, such provision shall be reformed only to the extent\nnecessary to make it enforceable. Any law or regulation which provides\nthat the language of a contract shall be construed against the drafter\nshall not be used to construe this License against a Contributor.\n\n10. Versions of the License\n---------------------------\n\n10.1. New Versions\n\nMozilla Foundation is the license steward. Except as provided in Section\n10.3, no one other than the license steward has the right to modify or\npublish new versions of this License. Each version will be given a\ndistinguishing version number.\n\n10.2. Effect of New Versions\n\nYou may distribute the Covered Software under the terms of the version\nof the License under which You originally received the Covered Software,\nor under the terms of any subsequent version published by the license\nsteward.\n\n10.3. Modified Versions\n\nIf you create software not governed by this License, and you want to\ncreate a new license for such software, you may create and use a\nmodified version of this License if you rename the license and remove\nany references to the name of the license steward (except to note that\nsuch modified license differs from this License).\n\n10.4. Distributing Source Code Form that is Incompatible With Secondary\nLicenses\n\nIf You choose to distribute Source Code Form that is Incompatible With\nSecondary Licenses under the terms of this version of the License, the\nnotice described in Exhibit B of this License must be attached.\n\nExhibit A - Source Code Form License Notice\n-------------------------------------------\n\n  This Source Code Form is subject to the terms of the Mozilla Public\n  License, v. 2.0. If a copy of the MPL was not distributed with this\n  file, You can obtain one at http://mozilla.org/MPL/2.0/.\n\nIf it is not possible or desirable to put the notice in a particular\nfile, then You may include the notice in a location (such as a LICENSE\nfile in a relevant directory) where a recipient would be likely to look\nfor such a notice.\n\nYou may add additional accurate notices of copyright ownership.\n\nExhibit B - \"Incompatible With Secondary Licenses\" Notice\n---------------------------------------------------------\n\n  This Source Code Form is \"Incompatible With Secondary Licenses\", as\n  defined by the Mozilla Public License, v. 2.0."
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 19.9921875,
          "content": "<div align=\"center\">\n\t<h1>\n\t\tStyLua<br>\n\t\t<a href=\"https://crates.io/crates/stylua\"><img src=\"https://img.shields.io/crates/v/stylua.svg\"></a>\n    <a href=\"https://github.com/JohnnyMorganz/StyLua/actions/workflows/ci.yml\"><img src=\"https://github.com/JohnnyMorganz/StyLua/actions/workflows/ci.yml/badge.svg\"></a>\n    <a href=\"https://codecov.io/gh/JohnnyMorganz/StyLua\"><img src=\"https://codecov.io/gh/JohnnyMorganz/StyLua/branch/main/graph/badge.svg\"/></a>\n\t</h1>\n</div>\n\nA deterministic code formatter for Lua 5.1, 5.2, 5.3, 5.4, LuaJIT and [Luau](https://luau.org/), built using [full-moon](https://github.com/Kampfkarren/full-moon).\nStyLua is inspired by the likes of [prettier](https://github.com/prettier/prettier), it parses your Lua codebase, and prints it back out from scratch,\nenforcing a consistent code style.\n\nStyLua mainly follows the [Roblox Lua Style Guide](https://roblox.github.io/lua-style-guide/), with a few deviations.\n\n## Installation\n\nThere are multiple ways to install StyLua:\n\n### With Github Releases\n\nPre-built binaries are available on the [GitHub Releases Page](https://github.com/JohnnyMorganz/StyLua/releases).\n\nBy default, these are built with **all syntax variants enabled (Lua 5.2, 5.3, 5.4, LuaJIT and Luau)**, to cover all possible codebases.\nSee [configuring runtime syntax selection](#configuring-runtime-syntax-selection) if you need to select a particular syntax of Lua to format.\nAlternatively, see [installing from crates.io](#from-cratesio) on how to install a particular flavour of StyLua.\n\n### From Crates.io\n\nIf you have [Rust](https://www.rust-lang.org/) installed, you can install StyLua using cargo.\nBy default, this builds for just Lua 5.1.\nYou can pass the `--features <flag>` argument to add extra syntax variants:\n\n```sh\ncargo install stylua\ncargo install stylua --features lua52\ncargo install stylua --features lua53\ncargo install stylua --features lua54\ncargo install stylua --features luajit\ncargo install stylua --features luau\n```\n\nYou can specify multiple features at once, and then use [configuration in a `.stylua.toml` file](#configuring-runtime-syntax-selection) to defer syntax selection to runtime.\n\n### GitHub Actions\n\nThe [stylua-action](https://github.com/marketplace/actions/stylua) GitHub Action can install and run StyLua.\nThis action uses the prebuilt GitHub release binaries, instead of running cargo install, for faster CI startup times.\n\n### pre-commit\n\nYou can use StyLua with [pre-commit](https://pre-commit.com/).\nThere are 3 possible pre-commit hooks available:\n\n- `stylua`: installs via cargo - requires the Rust toolchain\n- `stylua-system`: runs a `stylua` binary available on the PATH. The binary must be pre-installed\n- `stylua-github`: automatically installs the relevant prebuilt binary from GitHub Releases\n\nAdd the following to your `.pre-commit-config.yaml` file:\n\n```yaml\n- repo: https://github.com/JohnnyMorganz/StyLua\n  rev: v2.0.2\n  hooks:\n    - id: stylua # or stylua-system / stylua-github\n```\n\n### npm\n\nStyLua is available as a binary [published to npm](https://www.npmjs.com/package/@johnnymorganz/stylua-bin) as `@johnnymorganz/stylua-bin`.\nThis is a thin wrapper that installs the binary and makes it available through npm / npx.\n\n```sh\nnpx @johnnymorganz/stylua-bin --help\n```\n\nStyLua is also available as a WASM library at [@johnnymorganz/stylua](https://www.npmjs.com/package/@johnnymorganz/stylua).\nIt is usable in Node.js, or in the browser (using a bundler).\n\n### Docker\n\nStyLua is available on the [Docker Hub](https://hub.docker.com/r/johnnymorganz/stylua).\n\nIf you are using Docker, the easiest way to install StyLua is:\n\n```dockerfile\nCOPY --from=JohnnyMorganz/StyLua:2.0.2 /stylua /usr/bin/stylua\n```\n\n### Homebrew\n\nStyLua is available on macOS via the [Homebrew](https://brew.sh) package manager.\n\n```sh\nbrew install stylua\n```\n\n### Other Installation Methods\n\n- [VSCode Extension](https://marketplace.visualstudio.com/items?itemName=JohnnyMorganz.stylua)\n- [Aftman](https://github.com/LPGhatguy/aftman)\n\n```sh\naftman add johnnymorganz/stylua@2.0.2\n```\n\n- A community maintained package repository. Please note, these packages are maintained by third-parties and we do not control their packaging manifests.\n\n[![Community Packages](https://repology.org/badge/vertical-allrepos/stylua.svg?header=Community%20Packages)](https://repology.org/project/stylua/versions)\n\n### Other Editor Integrations\n\nNote that these integrations require the StyLua binary to already be installed and available on your system.\n\n- Sublime: [Sublime Text Package](https://github.com/aerobounce/Sublime-Pretty-Lua)\n- Neovim: [stylua-nvim](https://github.com/ckipp01/stylua-nvim) / [stylua.nvim](https://github.com/wesleimp/stylua.nvim)\n\n## Usage\n\nOnce installed, pass the files to format to the CLI:\n\n```sh\nstylua src/ foo.lua bar.lua\n```\n\nThis command will format the `foo.lua` and `bar.lua` file, and search down the `src` directory to format any files within it.\nStyLua can also read from stdin, by using `-` as the file name.\n\n### Glob Filtering\n\nBy default, when searching through a directory, StyLua looks for all files matching the glob `**/*.lua` (or `**/*.luau` when `luau` is enabled) to format.\nYou can also specify an explicit glob pattern to match against when searching:\n\n```sh\nstylua --glob '**/*.luau' -- src # format all files in src matching **/*.luau\nstylua -g '*.lua' -g '!*.spec.lua' -- . # format all Lua files except test files ending with `.spec.lua`\n```\n\nNote that the `-g/--glob` argument can take multiple strings at once, so `--` is required to separate between the glob patterns and the files to format.\n\nBy default, glob filtering (and `.styluaignore` files) are only applied during directory traversal and searching.\nFiles passed directly (e.g. `stylua foo.txt`) will override the glob / ignore and always be formatted.\nTo disable this behaviour, pass the `--respect-ignores` flag (`stylua --respect-ignores foo.txt`).\n\n### Filtering using `.styluaignore`\n\nYou can create a `.styluaignore` file, with a format similar to `.gitignore`.\nAny files matching the globs in the ignore file are ignored by StyLua.\nFor example, for a `.styluaignore` file with the following contents:\n\n```\nvendor/\n```\n\nrunning `stylua .` will ignore the `vendor/` directory.\n\n### `--check`: Checking files for formatting\n\nTo check whether files require formatting (but not write directly to them), use the `--check` flag.\nIt will take files as input, and output a diff to stdout instead of rewriting the file contents.\nIf there are any files that require formatting, StyLua will exit with status code 1.\n\nThere are different styles of output available:\n\n- `--output-format=standard`: output a custom diff (default)\n- `--output-format=unified`: output a unified diff, consumable by tools like `patch` or `delta`\n- `--output-format=json`: output JSON representing the changes, useful for machine-readable output\n- `--output-format=summary`: output a summary list of file paths that are incorrectly formatted\n\n### `--verify`: Verifying formatting output\n\nAs a safety measure, you can use the `--verify` flag to verify the output of all formatting before saving the file.\n\nIf enabled, the tool will re-parse the formatted output to verify if the AST is still valid (no syntax errors) and is similar to the input (possible semantic changes).\n\nThis is useful when adopting StyLua in a large codebase, where it is difficult to manually check all formatting is correct.\nNote that this may produce false positives and negatives - we recommend manual verification as well as running tests to confirm.\n\n### Ignoring parts of a file\n\nTo skip formatting a particular part of a file, you can add `-- stylua: ignore` before it.\nThis is useful if there is a particular style you want to preseve for readability, e.g.:\n\n```lua\n-- stylua: ignore\nlocal matrix = {\n    { 0, 0, 0 },\n    { 0, 0, 0 },\n    { 0, 0, 0 },\n}\n```\n\nTo skip a block of code, use `-- stylua: ignore start` and `-- stylua: ignore end`:\n\n```lua\nlocal foo = true\n-- stylua: ignore start\nlocal   bar   =   false\nlocal  baz      = 0\n-- stylua: ignore end\nlocal foobar = false\n```\n\nNote that ignoring cannot cross scope boundaries - once a block is exited, formatting is re-enabled.\n\n### Formatting Ranges\n\nTo format a specific range within a file, use `--range-start <num>` and/or `--range-end <num>`.\nBoth arguments are inclusive and optional - if an argument is not provided, the start/end of the file is used respectively.\n\nOnly whole statements lying within the range are formatted.\nIf part of a statement falls outside the range, the statement is ignored.\n\nIn editors, `Format Selection` is supported.\n\n### Requires Sorting\n\nStyLua has built-in support for sorting require statements. We group consecutive require statements into a single \"block\",\nand then requires are sorted only within that block. Blocks of requires do not move around the file.\n\nStyLua only considers requires of the form `local NAME = require(EXPR)`, and sorts lexicographically based on `NAME`.\n(StyLua can also sort Roblox services of the form `local NAME = game:GetService(EXPR)`)\n\nRequires sorting is off by default. To enable it, add the following to your `stylua.toml`:\n\n```toml\n[sort_requires]\nenabled = true\n```\n\n## Configuration\n\nStyLua has opinionated defaults, but also provides a few options that can be set per project.\n\n### Finding the configuration\n\nThe CLI looks for a `stylua.toml` or `.stylua.toml` starting from the directory of the file being formatted.\nIt will keep searching upwards until it reaches the current directory where the tool was executed.\nIf not found, we search for an `.editorconfig` file, otherwise fall back to the default configuration.\nThis feature can be disabled using `--no-editorconfig`.\nSee [EditorConfig](https://editorconfig.org/) for more details.\n\nUse `--config-path <path>` to provide a custom path to the configuration.\nIf the file provided is not found/malformed, StyLua will exit with an error.\n\nBy default, StyLua does not search further than the current directory.\nUse `--search-parent-directories` to recursively search parent directories.\nThis will keep searching ancestors and, if not found, will then look in `$XDG_CONFIG_HOME` / `$XDG_CONFIG_HOME/stylua` / `$HOME/.config` and `$HOME/.config/stylua`.\n\n**Note: enabling searching outside of the current directory is NOT recommended due to possibilities of conflicting formatting:**\n\nIt is recommended to keep a `.stylua.toml` file in your project root so that other developers can make use of the same configuration.\n\nIf a project uses the default configuration of StyLua without a configuration file present, enabling external searching may cause conflicting formatting.\n\n### Configuring Runtime Syntax Selection\n\nBy default, StyLua releases comes with all flavours of Lua bundled into one binary, with a union of all syntax styles.\nWe do this to make it easier to get started with StyLua on any codebase or project using Lua.\n\nHowever, there are times where the union of syntaxes collide, causing issues. For example, Lua 5.2's goto label syntax\n(`::label::`) conflicts with Luau's type assertion syntax (`x :: number`), and the latter ends up taking priority.\n\nTo disambiguate a particular syntax style for your codebase, set `syntax = \"Style\"` in your `.stylua.toml` file, e.g.:\n\n```toml\nsyntax = \"Lua52\"\n```\n\nAlternatively, you can specify it on the command line, with `stylua --syntax lua52 ...`\n\n### Options\n\nStyLua only offers the following options:\n\n| Option                       | Default            | Description|\n| ---------------------------- | ------------------ ||\n| `syntax`                     | `All`              | Specify a disambiguation for the style of Lua syntax being formatted. Possible options: `All` (default), `Lua51`, `Lua52`, `Lua53`, `Lua54`, `LuaJIT`, `Luau`|\n| `column_width`               | `120`              | Approximate line length for printing. Used as a guide for line wrapping - this is not a hard requirement: lines may fall under or over the limit|\n| `line_endings`               | `Unix`             | Line endings type. Possible options: `Unix` (LF) or `Windows`|\n| `indent_type`                | `Tabs`             | Indent type. Possible options: `Tabs` or `Spaces`|\n| `indent_width`               | `4`                | Character size of single indentation. If `indent_type` is set to `Tabs`, this option is used as a heuristic to determine column width only|\n| `quote_style`                | `AutoPreferDouble` | Quote style for string literals. Possible options: `AutoPreferDouble`, `AutoPreferSingle`, `ForceDouble`, `ForceSingle`. `AutoPrefer` styles will prefer the specified quote style, but fall back to the alternative if it has fewer string escapes. `Force` styles always use the specified style regardless of escapes.                                                                                                                                                                                                                                                                                                                                                                                                                             |\n| `call_parentheses`           | `Always`           | Whether parentheses should be applied on function calls with a single string/table argument. Possible options: `Always`, `NoSingleString`, `NoSingleTable`, `None`, `Input`. `Always` applies parentheses in all cases. `NoSingleString` omits parentheses on calls with a single string argument. Similarly, `NoSingleTable` omits parentheses on calls with a single table argument. `None` omits parentheses in both cases. Note: parentheses are still kept in situations where removal can lead to obscurity (e.g. `foo \"bar\".setup -> foo(\"bar\").setup`, since the index is on the call result, not the string). `Input` removes all automation and preserves parentheses only if they were present in input code: consistency is not enforced. |\n| `space_after_function_names` | `Never`            | Specify whether to add a space between the function name and parentheses. Possible options: `Never`, `Definitions`, `Calls`, or `Always`|\n| `collapse_simple_statement`  | `Never`            | Specify whether to collapse simple statements. Possible options: `Never`, `FunctionOnly`, `ConditionalOnly`, or `Always`|\n\nDefault `stylua.toml`, note you do not need to explicitly specify each option if you want to use the defaults:\n\n```toml\nsyntax = \"All\"\ncolumn_width = 120\nline_endings = \"Unix\"\nindent_type = \"Tabs\"\nindent_width = 4\nquote_style = \"AutoPreferDouble\"\ncall_parentheses = \"Always\"\ncollapse_simple_statement = \"Never\"\nspace_after_function_names = \"Never\"\n\n[sort_requires]\nenabled = false\n```\n"
        },
        {
          "name": "benches",
          "type": "tree",
          "content": null
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 0.3779296875,
          "content": "[build-system]\nrequires = [\"release-gitter[builder]\"]\nbuild-backend = \"pseudo_builder\"\n\n[tool.release-gitter]\ngit-url = \"https://github.com/JohnnyMorganz/StyLua\"\nextract-files = [\"stylua\"]\nformat = \"stylua-{system}-{arch}.zip\"\nexec = \"chmod +x stylua\"\n[tool.release-gitter.map-arch]\narm64 = \"aarch64\"\n[tool.release-gitter.map-system]\nDarwin = \"macos\"\nWindows = \"windows\"\nLinux = \"linux\"\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "stylua-npm-bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "stylua-vscode",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "wasm",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}