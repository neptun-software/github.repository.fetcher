{
  "metadata": {
    "timestamp": 1736708998247,
    "page": 59,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjYw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "imazen/imageflow",
      "stars": 4203,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".cargo",
          "type": "tree",
          "content": null
        },
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 1.7021484375,
          "content": "---\nLanguage:        Cpp\n# BasedOnStyle:  WebKit\nAccessModifierOffset: -4\nAlignEscapedNewlinesLeft: false\nAlignTrailingComments: false\nAllowAllParametersOfDeclarationOnNextLine: true\nAllowShortBlocksOnASingleLine: false\nAllowShortIfStatementsOnASingleLine: false\nAllowShortLoopsOnASingleLine: false\nAllowShortFunctionsOnASingleLine: All\nAlwaysBreakTemplateDeclarations: false\nAlwaysBreakBeforeMultilineStrings: false\nBreakBeforeBinaryOperators: true\nBreakBeforeTernaryOperators: true\nBreakConstructorInitializersBeforeComma: true\nBinPackParameters: true\nColumnLimit:     120\nConstructorInitializerAllOnOneLineOrOnePerLine: false\nConstructorInitializerIndentWidth: 4\nDerivePointerAlignment: false\nExperimentalAutoDetectBinPacking: false\nIndentCaseLabels: true\nIndentWrappedFunctionNames: false\nIndentFunctionDeclarationAfterType: false\nMaxEmptyLinesToKeep: 1\nKeepEmptyLinesAtTheStartOfBlocks: true\nNamespaceIndentation: Inner\nObjCSpaceAfterProperty: true\nObjCSpaceBeforeProtocolList: true\nPenaltyBreakBeforeFirstCallParameter: 19\nPenaltyBreakComment: 300\nPenaltyBreakString: 1000\nPenaltyBreakFirstLessLess: 120\nPenaltyExcessCharacter: 1000000\nPenaltyReturnTypeOnItsOwnLine: 60\nPointerAlignment: Middle\nSpacesBeforeTrailingComments: 1\nCpp11BracedListStyle: false\nStandard:        Cpp03\nIndentWidth:     4\nTabWidth:        8\nUseTab:          Never\nBreakBeforeBraces: Stroustrup\nSpacesInParentheses: false\nSpacesInAngles:  false\nSpaceInEmptyParentheses: false\nSpacesInCStyleCastParentheses: false\nSpacesInContainerLiterals: true\nSpaceBeforeAssignmentOperators: true\nContinuationIndentWidth: 4\nCommentPragmas:  '^ IWYU pragma:'\nForEachMacros:   [ foreach, Q_FOREACH, BOOST_FOREACH ]\nSpaceBeforeParens: ControlStatements\nDisableFormat:   false\n...\n\n"
        },
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.0654296875,
          "content": "# Exclude stuff from the docker build context\r\n\r\ntarget\r\n.docker_*/"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.5810546875,
          "content": "root = true\n\n# Unix-style newlines with a newline ending every file\n[*]\ncharset = utf-8\nend_of_line = lf\ninsert_final_newline = true\n\n[*.{c,cpp,hpp,h,py,rb,yml}]\ntrim_trailing_whitespace = true\n\n[*.{toml,rs}]\ntrim_trailing_whitespace = true\nindent_style = space\nindent_size = 4\n\n[*.{c,cpp,hpp,h,py,md}]\ntab_width = 8\nindent_style = space\nindent_size = 4\n\n# 2 space indentation for ruby, yaml, json\n[*.{rb,yml,yaml, json}]\nindent_style = space\nindent_size = 2\n\n[**.{bat,txt,sln,dbproj,fsproj,vbproj,csproj}]\nend_of_line = crlf\n\n# Tab indentation (no size specified)\n[Makefile]\nindent_style = tab\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 1.193359375,
          "content": "* text=lf\n\n*.cs text eol=lf diff=csharp\n*.vb text eol=lf\n*.resx text eol=lf\n*.c text eol=lf diff=cpp\n*.cpp text eol=lf diff=cpp\n*.cxx text eol=lf diff=cpp\n*.h text eol=lf diff=cpp\n*.hxx text eol=lf diff=cpp\n*.hpp text eol=lf diff=cpp\n*.py text eol=lf\n*.rb text eol=lf\n*.java text eol=lf\n*.html text eol=lf diff=html\n*.htm text eol=lf diff=html\n*.css text eol=lf\n*.scss text eol=lf\n*.sass text eol=lf\n*.less text eol=lf\n*.js text eol=lf\n*.json text eol=lf\n*.lisp text eol=lf\n*.clj text eol=lf\n*.sql text eol=lf\n*.php text eol=lf\n*.lua text eol=lf\n*.m text eol=lf\n*.asm text eol=lf\n*.erl text eol=lf\n*.fs text eol=lf\n*.fsx text eol=lf\n*.hs text eol=lf\n*.yml text eol=lf\n*.rs text eol=lf\n*.sh text eol=lf\n*.toml text eol=lf\n*.md text eol=lf\n*.pem text eol=lf\n*.xml text eol=lf\n*.svg -text\n*.config text eol=lf\nDockerfile text eol=lf\n\n\n*.csproj text eol=crlf\n*.xproj text eol=crlf\n*.vbproj text eol=crlf\n*.fsproj text eol=crlf\n*.dbproj text eol=crlf\n*.nuspec text eol=crlf\n*.props text eol=crlf\n*.sln text eol=crlf\n*.txt text eol=crlf\n*.bat text eol=crlf\n\n*.png binary\n*.jpg binary\n*.jpeg binary\n*.pdf binary\n*.bmp binary\n*.ppm binary\n*.gif binary\n*.tif binary\n*.tiff binary\n\n\n.gitattributes text eol=lf\n.gitignore text eol=lf"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 4.958984375,
          "content": "# Dotfiles and renderings of them\n*.dot\n*.dot.png\n\n#Artifacts to upload\n/artifacts/\n\n/_site/\n/docs/_site/\n\n/imageflow_data/\n\n#Test images\n/c_components/test_images/\n/__cmake_systeminformation\n\n#Bindings\n/wrappers/node/native\n/bindings/ruby/bin\n/ci/pack_nuget/staging\n\n\n#Generated for tests\nbuild/\ncacert.pem\nnode_frames/\nCTestTestfile.cmake\n\n# Coverage things\n.sudo_as_admin_successful\ncoverage.info\nimageflow_cache/\n\n# Exhaustive search logs\n\n*searchlog*.txt\n*search_log*.txt\n\n# Profiling\n\n/c_components/profiling/\n/c_components/profile.txt\ngmon.out\n\n\n# Assembly output\n*.s\n*.c.s\n\n\n\n#Valgrind suppression copes\n/imageflow_core/.valgrindrc\n/imageflow_core/valgrind_suppressions.txt\n/imageflow_types/.valgrindrc\n/imageflow_types/valgrind_suppressions.txt\n/imageflow_tool/.valgrindrc\n/imageflow_tool/valgrind_suppressions.txt\n/imageflow_riapi/.valgrindrc\n/imageflow_riapi/valgrind_suppressions.txt\n/imageflow_abi/.valgrindrc\n/imageflow_abi/valgrind_suppressions.txt\n/c_components/.valgrindrc\n/c_components/valgrind_suppressions.txt\n\n\n## Rust .gitignore\n\n# Compiled files\n*.o\n*.so\n*.rlib\n*.dll\n\n# Executables\n*.exe\n\n# Generated by Cargo\ntarget/\n\n\n# VSCode\n/.vscode/\n\n\n## Go .gitignore\n\n# Compiled Object files, Static and Dynamic libs (Shared Objects)\n*.o\n*.a\n*.so\n\n# Folders\n/_obj/\n/_test/\n.docker_*\n\n# Architecture specific extensions/prefixes\n*.[568vq]\n[568vq].out\n\n*.cgo1.go\n*.cgo2.c\n_cgo_defun.c\n_cgo_gotypes.go\n_cgo_export.*\n\n_testmain.go\n\n*.exe\n*.test\n*.prof\n\noprofile_data/\n\n\n## Visual Studio .gitignore\n## Ignore Visual Studio temporary files, build results, and\n## files generated by popular Visual Studio add-ons.\n\n# User-specific files\n*.suo\n*.user\n*.sln.docstates\n\n# Build results\n[Dd]ebug/\n[Dd]ebugPublic/\n[Rr]elease/\n[Rr]eleases/\nx64/\nx86/\nbuild/\nbld/\n[Oo]bj/\n[Dd]ocumentation/\n\n# Roslyn cache directories\n*.ide/\n\n# MSTest test Results\n[Tt]est[Rr]esult*/\n[Bb]uild[Ll]og.*\n\n#NUNIT\n*.VisualState.xml\nTestResult.xml\n\n# Build Results of an ATL Project\n[Dd]ebugPS/\n[Rr]eleasePS/\ndlldata.c\n\n*_i.c\n*_p.c\n*_i.h\n*.ilk\n*.meta\n*.obj\n*.pch\n*.pdb\n*.pgc\n*.pgd\n*.rsp\n*.sbr\n*.tlb\n*.tli\n*.tlh\n*.tmp\n*.tmp_proj\n*.log\n*.vspscc\n*.vssscc\n.builds\n*.pidb\n*.svclog\n*.scc\n\n# Chutzpah Test files\n_Chutzpah*\n\n# Visual C++ cache files\nipch/\n*.aps\n*.ncb\n*.opensdf\n*.sdf\n*.cachefile\n\n# Visual Studio profiler\n*.psess\n*.vsp\n*.vspx\n\n# TFS 2012 Local Workspace\n$tf/\n\n# Guidance Automation Toolkit\n*.gpState\n\n# ReSharper is a .NET coding add-in\n_ReSharper*/\n*.[Rr]e[Ss]harper\n*.DotSettings.user\n\n# JustCode is a .NET coding addin-in\n.JustCode\n\n# TeamCity is a build add-in\n_TeamCity*\n\n# DotCover is a Code Coverage Tool\n*.dotCover\n\n# NCrunch\n_NCrunch_*\n.*crunch*.local.xml\n\n# MightyMoose\n*.mm.*\nAutoTest.Net/\n\n# Web workbench (sass)\n.sass-cache/\n\n# Installshield output folder\n[Ee]xpress/\n\n# DocProject is a documentation generator add-in\nDocProject/buildhelp/\nDocProject/Help/*.HxT\nDocProject/Help/*.HxC\nDocProject/Help/*.hhc\nDocProject/Help/*.hhk\nDocProject/Help/*.hhp\nDocProject/Help/Html2\nDocProject/Help/html\n\n# Click-Once directory\npublish/\n\n# Publish Web Output\n*.[Pp]ublish.xml\n*.azurePubxml\n# TODO: Comment the next line if you want to checkin your web deploy settings\n# but database connection strings (with potential passwords) will be unencrypted\n*.pubxml\n*.publishproj\n\n# NuGet Packages\n*.nupkg\nproject.lock.json\n# The packages folder can be ignored because of Package Restore\n**/packages/*\n# except build/, which is used as an MSBuild target.\n!**/packages/build/\n# If using the old MSBuild-Integrated Package Restore, uncomment this:\n#!**/packages/repositories.config\n\n# Windows Azure Build Output\ncsx/\n*.build.csdef\n\n# Windows Store app package directory\nAppPackages/\n\n# Others\nsql/\n*.Cache\nClientBin/\n[Ss]tyle[Cc]op.*\n~$*\n*~\n*.dbmdl\n*.dbproj.schemaview\n*.pfx\n*.publishsettings\nnode_modules/\n.vs/\n\n# RIA/Silverlight projects\nGenerated_Code/\n\n# Backup & report files from converting an old project file\n# to a newer Visual Studio version. Backup files are not needed,\n# because we have git ;-)\n_UpgradeReport_Files/\nBackup*/\nUpgradeLog*.XML\nUpgradeLog*.htm\n\n# SQL Server files\n*.mdf\n*.ldf\n\n# Business Intelligence projects\n*.rdl.data\n*.bim.layout\n*.bim_*.settings\n\n# Microsoft Fakes\nFakesAssemblies/\n\n# Eclipse project\n.project\n\n# Intellij\n**/.idea/workspace.xml\n**/.idea/tasks.xml\n**/.idea/libraries/*\n\n# Eclipse pydev\n.pydevproject\n\n#Xamarin\n*.userprefs\n\ndssim.tar.gz\n/dssim/\n\n/examples/*/*.json\n/examples/*/*.jpg\n/examples/*/*.png\n/examples/*/*.sh\nimageflow_core/tests/visuals/images.txt\nc_components/tests/generated_idct.c\nc_components/tests/rect_1_1_9_9.png\nc_components/tests/rect_2_3_70_70.png\nimageflow_core/generated_idct.c\ndocker/imageflow_bench_ubuntu20/results/imageflow_2000x2000.jpg\ndocker/imageflow_bench_ubuntu20/results/imageflow_2000x2000.png\ndocker/imageflow_bench_ubuntu20/results/imageflow_reference_2000x2000.png\ndocker/imageflow_bench_ubuntu20/results/reference_2000x2000.png\ndocker/imageflow_bench_ubuntu20/results/vips_2000x2000.jpg\ndocker/imageflow_bench_ubuntu20/results/vips_2000x2000.png\ndocker/imageflow_bench_ubuntu20/results/vips_reference_2000x2000.png\n"
        },
        {
          "name": ".idea",
          "type": "tree",
          "content": null
        },
        {
          "name": ".rustfmt.toml",
          "type": "blob",
          "size": 0.3173828125,
          "content": "max_width=120\nuse_small_heuristics=\"Max\"\nnewline_style=\"Unix\"\nfn_args_layout=\"Compressed\"\ngroup_imports = \"StdExternalCrate\"\n\n# Once these stabilize, they'd be nice\n# indent_style=\"Visual\"\n# fn_single_line=true\n# fn_params_layout=\"Compressed\"\n# comment_width=100\n# overflow_delimited_expr=true\n# imports_granularity=\"Module\"\n"
        },
        {
          "name": ".valgrindrc",
          "type": "blob",
          "size": 0.1220703125,
          "content": "--suppressions=./valgrind_suppressions.txt --trace-children=yes --leak-check=full --trace-children-skip=*/rustc,*/ld,*/dssim "
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 5.0966796875,
          "content": "\n# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nWe as members, contributors, and leaders pledge to make participation in our\ncommunity a harassment-free experience for everyone, regardless of age, body\nsize, visible or invisible disability, ethnicity, sex characteristics, gender\nidentity and expression, level of experience, education, socio-economic status,\nnationality, personal appearance, race, religion, or sexual identity\nand orientation.\n\nWe pledge to act and interact in ways that contribute to an open, welcoming,\ndiverse, inclusive, and healthy community.\n\n## Our Standards\n\nExamples of behavior that contributes to a positive environment for our\ncommunity include:\n\n* Demonstrating empathy and kindness toward other people\n* Being respectful of differing opinions, viewpoints, and experiences\n* Giving and gracefully accepting constructive feedback\n* Accepting responsibility and apologizing to those affected by our mistakes,\n  and learning from the experience\n* Focusing on what is best not just for us as individuals, but for the\n  overall community\n\nExamples of unacceptable behavior include:\n\n* The use of sexualized language or imagery, and sexual attention or\n  advances of any kind\n* Trolling, insulting or derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or email\n  address, without their explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Enforcement Responsibilities\n\nCommunity leaders are responsible for clarifying and enforcing our standards of\nacceptable behavior and will take appropriate and fair corrective action in\nresponse to any behavior that they deem inappropriate, threatening, offensive,\nor harmful.\n\nCommunity leaders have the right and responsibility to remove, edit, or reject\ncomments, commits, code, wiki edits, issues, and other contributions that are\nnot aligned to this Code of Conduct, and will communicate reasons for moderation\ndecisions when appropriate.\n\n## Scope\n\nThis Code of Conduct applies within all community spaces, and also applies when\nan individual is officially representing the community in public spaces.\nExamples of representing our community include using an official e-mail address,\nposting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported to the community leaders responsible for enforcement at\nlilith@imazen.io.\nAll complaints will be reviewed and investigated promptly and fairly.\n\nAll community leaders are obligated to respect the privacy and security of the\nreporter of any incident.\n\n## Enforcement Guidelines\n\nCommunity leaders will follow these Community Impact Guidelines in determining\nthe consequences for any action they deem in violation of this Code of Conduct:\n\n### 1. Correction\n\n**Community Impact**: Use of inappropriate language or other behavior deemed\nunprofessional or unwelcome in the community.\n\n**Consequence**: A private, written warning from community leaders, providing\nclarity around the nature of the violation and an explanation of why the\nbehavior was inappropriate. A public apology may be requested.\n\n### 2. Warning\n\n**Community Impact**: A violation through a single incident or series\nof actions.\n\n**Consequence**: A warning with consequences for continued behavior. No\ninteraction with the people involved, including unsolicited interaction with\nthose enforcing the Code of Conduct, for a specified period of time. This\nincludes avoiding interactions in community spaces as well as external channels\nlike social media. Violating these terms may lead to a temporary or\npermanent ban.\n\n### 3. Temporary Ban\n\n**Community Impact**: A serious violation of community standards, including\nsustained inappropriate behavior.\n\n**Consequence**: A temporary ban from any sort of interaction or public\ncommunication with the community for a specified period of time. No public or\nprivate interaction with the people involved, including unsolicited interaction\nwith those enforcing the Code of Conduct, is allowed during this period.\nViolating these terms may lead to a permanent ban.\n\n### 4. Permanent Ban\n\n**Community Impact**: Demonstrating a pattern of violation of community\nstandards, including sustained inappropriate behavior,  harassment of an\nindividual, or aggression toward or disparagement of classes of individuals.\n\n**Consequence**: A permanent ban from any sort of public interaction within\nthe community.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage],\nversion 2.0, available at\nhttps://www.contributor-covenant.org/version/2/0/code_of_conduct.html.\n\nCommunity Impact Guidelines were inspired by [Mozilla's code of conduct\nenforcement ladder](https://github.com/mozilla/diversity).\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see the FAQ at\nhttps://www.contributor-covenant.org/faq. Translations are available at\nhttps://www.contributor-covenant.org/translations.\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.8955078125,
          "content": "\n### Contributing code - legally\n\nWe reserve the right to relicense this software (or portions thereof) in order to ensure its sustainability. To make this possible, we have [a Contributor Agreement](http://imageresizing.net/licenses/contribute) lifted from the Apache foundation.\n\nSmall commits can simply include this statement: \n\n        I release these contributions under the terms of the Imazen Contributor Agreement V1.0 \n        (http://imageresizing.net/licenses/contribute), the terms of which I accept and agree.\n        - [Name] [Date]\n\nFrequent or heavy committers should [sign and date the actual agreement](http://imageresizing.net/licenses/contribute), which only needs to be done once. Digital signatures or scanned copies are accepted; send them to support@imageresizing.net. \n\nIf you are introducing any new dependencies, those licenses may obligate you to create a notice.txt or license.txt file.\n"
        },
        {
          "name": "Cargo.lock",
          "type": "blob",
          "size": 84.3505859375,
          "content": "# This file is automatically @generated by Cargo.\n# It is not intended for manual editing.\nversion = 3\n\n[[package]]\nname = \"addr2line\"\nversion = \"0.22.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6e4503c46a5c0c7844e948c9a4d6acd9f50cccb4de1c48eb9e291ea17470c678\"\ndependencies = [\n \"gimli\",\n]\n\n[[package]]\nname = \"adler\"\nversion = \"1.0.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f26201604c87b1e01bd3d98f8d5d9a8fcbb815e8cedb41ffccbeb4bf593a35fe\"\n\n[[package]]\nname = \"adler2\"\nversion = \"2.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"512761e0bb2578dd7380c6baaa0f4ce03e84f95e960231d1dec8bf4d7d6e2627\"\n\n[[package]]\nname = \"aes\"\nversion = \"0.8.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b169f7a6d4742236a0a00c541b845991d0ac43e546831af1249753ab4c3aa3a0\"\ndependencies = [\n \"cfg-if\",\n \"cipher\",\n \"cpufeatures\",\n]\n\n[[package]]\nname = \"aho-corasick\"\nversion = \"1.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8e60d3430d3a69478ad0993f19238d2df97c507009a52b3c10addcd7f6bcb916\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"android-tzdata\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e999941b234f3131b00bc13c22d06e8c5ff726d1b6318ac7eb276997bbb4fef0\"\n\n[[package]]\nname = \"android_system_properties\"\nversion = \"0.1.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"819e7219dbd41043ac279b19830f2efc897156490d7fd6ea916720117ee66311\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"anes\"\nversion = \"0.1.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4b46cbb362ab8752921c97e041f5e366ee6297bd428a31275b9fcf1e380f7299\"\n\n[[package]]\nname = \"anstream\"\nversion = \"0.6.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"64e15c1ab1f89faffbf04a634d5e1962e9074f2741eef6d97f3c4e322426d526\"\ndependencies = [\n \"anstyle\",\n \"anstyle-parse\",\n \"anstyle-query\",\n \"anstyle-wincon\",\n \"colorchoice\",\n \"is_terminal_polyfill\",\n \"utf8parse\",\n]\n\n[[package]]\nname = \"anstyle\"\nversion = \"1.0.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1bec1de6f59aedf83baf9ff929c98f2ad654b97c9510f4e70cf6f661d49fd5b1\"\n\n[[package]]\nname = \"anstyle-parse\"\nversion = \"0.2.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"eb47de1e80c2b463c735db5b217a0ddc39d612e7ac9e2e96a5aed1f57616c1cb\"\ndependencies = [\n \"utf8parse\",\n]\n\n[[package]]\nname = \"anstyle-query\"\nversion = \"1.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6d36fc52c7f6c869915e99412912f22093507da8d9e942ceaf66fe4b7c14422a\"\ndependencies = [\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"anstyle-wincon\"\nversion = \"3.0.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5bf74e1b6e971609db8ca7a9ce79fd5768ab6ae46441c572e46cf596f59e57f8\"\ndependencies = [\n \"anstyle\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"arbitrary\"\nversion = \"1.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7d5a26814d8dcb93b0e5a0ff3c6d80a8843bafb21b39e8e18a6f05471870e110\"\ndependencies = [\n \"derive_arbitrary\",\n]\n\n[[package]]\nname = \"arrayvec\"\nversion = \"0.4.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cd9fd44efafa8690358b7408d253adf110036b88f55672a933f01d616ad9b1b9\"\ndependencies = [\n \"nodrop\",\n]\n\n[[package]]\nname = \"arrayvec\"\nversion = \"0.7.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7c02d123df017efcdfbd739ef81735b36c5ba83ec3c59c80a9d7ecc718f92e50\"\n\n[[package]]\nname = \"assert-json-diff\"\nversion = \"2.0.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"47e4f2b81832e72834d7518d8487a0396a28cc408186a2e8854c0f98011faf12\"\ndependencies = [\n \"serde\",\n \"serde_json\",\n]\n\n[[package]]\nname = \"atomic-waker\"\nversion = \"1.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1505bd5d3d116872e7271a6d4e16d81d0c8570876c8de68093a09ac269d8aac0\"\n\n[[package]]\nname = \"autocfg\"\nversion = \"1.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0c4b4d0bd25bd0b74681c0ad21497610ce1b7c91b1022cd21c80c6fbdd9476b0\"\n\n[[package]]\nname = \"backtrace\"\nversion = \"0.3.73\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5cc23269a4f8976d0a4d2e7109211a419fe30e8d88d677cd60b6bc79c5732e0a\"\ndependencies = [\n \"addr2line\",\n \"cc\",\n \"cfg-if\",\n \"libc\",\n \"miniz_oxide 0.7.4\",\n \"object\",\n \"rustc-demangle\",\n]\n\n[[package]]\nname = \"base64\"\nversion = \"0.22.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"72b3254f16251a8381aa12e40e3c4d2f0199f8c6508fbecb9d91f575e0fbb8c6\"\n\n[[package]]\nname = \"bitflags\"\nversion = \"2.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b048fb63fd8b5923fc5aa7b340d8e156aec7ec02f0c78fa8a6ddc2613f6f71de\"\n\n[[package]]\nname = \"blake2-rfc\"\nversion = \"0.2.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5d6d530bdd2d52966a6d03b7a964add7ae1a288d25214066fd4b600f0f796400\"\ndependencies = [\n \"arrayvec 0.4.12\",\n \"constant_time_eq 0.1.5\",\n]\n\n[[package]]\nname = \"block-buffer\"\nversion = \"0.10.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3078c7629b62d3f0439517fa394996acacc5cbc91c5a20d8c658e77abd503a71\"\ndependencies = [\n \"generic-array\",\n]\n\n[[package]]\nname = \"bumpalo\"\nversion = \"3.16.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"79296716171880943b8470b5f8d03aa55eb2e645a4874bdbb28adb49162e012c\"\n\n[[package]]\nname = \"bytemuck\"\nversion = \"1.17.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6fd4c6dcc3b0aea2f5c0b4b82c2b15fe39ddbc76041a310848f4706edf76bb31\"\n\n[[package]]\nname = \"byteorder\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1fd0f2584146f6f2ef48085050886acf353beff7305ebd1ae69500e27c67f64b\"\n\n[[package]]\nname = \"bytes\"\nversion = \"1.7.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8318a53db07bb3f8dca91a600466bdb3f2eaadeedfdbcf02e1accbad9271ba50\"\n\n[[package]]\nname = \"bzip2\"\nversion = \"0.4.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bdb116a6ef3f6c3698828873ad02c3014b3c85cadb88496095628e3ef1e347f8\"\ndependencies = [\n \"bzip2-sys\",\n \"libc\",\n]\n\n[[package]]\nname = \"bzip2-sys\"\nversion = \"0.1.11+1.0.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"736a955f3fa7875102d57c82b8cac37ec45224a07fd32d58f9f7a186b6cd4cdc\"\ndependencies = [\n \"cc\",\n \"libc\",\n \"pkg-config\",\n]\n\n[[package]]\nname = \"cast\"\nversion = \"0.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"37b2a672a2cb129a2e41c10b1224bb368f9f37a2b16b612598138befd7b37eb5\"\n\n[[package]]\nname = \"cbindgen\"\nversion = \"0.27.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3fce8dd7fcfcbf3a0a87d8f515194b49d6135acab73e18bd380d1d93bb1a15eb\"\ndependencies = [\n \"clap\",\n \"heck\",\n \"indexmap\",\n \"log\",\n \"proc-macro2\",\n \"quote\",\n \"serde\",\n \"serde_json\",\n \"syn 2.0.75\",\n \"tempfile\",\n \"toml\",\n]\n\n[[package]]\nname = \"cc\"\nversion = \"1.1.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"72db2f7947ecee9b03b510377e8bb9077afa27176fdbff55c51027e976fdcc48\"\ndependencies = [\n \"jobserver\",\n \"libc\",\n \"shlex\",\n]\n\n[[package]]\nname = \"cfg-if\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd\"\n\n[[package]]\nname = \"chashmap\"\nversion = \"2.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ff41a3c2c1e39921b9003de14bf0439c7b63a9039637c291e1a64925d8ddfa45\"\ndependencies = [\n \"owning_ref\",\n \"parking_lot 0.4.8\",\n]\n\n[[package]]\nname = \"chrono\"\nversion = \"0.4.38\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a21f936df1771bf62b77f047b726c4625ff2e8aa607c01ec06e5a05bd8463401\"\ndependencies = [\n \"android-tzdata\",\n \"iana-time-zone\",\n \"js-sys\",\n \"num-traits\",\n \"wasm-bindgen\",\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"ciborium\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"42e69ffd6f0917f5c029256a24d0161db17cea3997d185db0d35926308770f0e\"\ndependencies = [\n \"ciborium-io\",\n \"ciborium-ll\",\n \"serde\",\n]\n\n[[package]]\nname = \"ciborium-io\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"05afea1e0a06c9be33d539b876f1ce3692f4afea2cb41f740e7743225ed1c757\"\n\n[[package]]\nname = \"ciborium-ll\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"57663b653d948a338bfb3eeba9bb2fd5fcfaecb9e199e87e1eda4d9e8b240fd9\"\ndependencies = [\n \"ciborium-io\",\n \"half\",\n]\n\n[[package]]\nname = \"cipher\"\nversion = \"0.4.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"773f3b9af64447d2ce9850330c473515014aa235e6a783b02db81ff39e4a3dad\"\ndependencies = [\n \"crypto-common\",\n \"inout\",\n]\n\n[[package]]\nname = \"clap\"\nversion = \"4.5.16\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ed6719fffa43d0d87e5fd8caeab59be1554fb028cd30edc88fc4369b17971019\"\ndependencies = [\n \"clap_builder\",\n]\n\n[[package]]\nname = \"clap_builder\"\nversion = \"4.5.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"216aec2b177652e3846684cbfe25c9964d18ec45234f0f5da5157b207ed1aab6\"\ndependencies = [\n \"anstream\",\n \"anstyle\",\n \"clap_lex\",\n \"strsim\",\n]\n\n[[package]]\nname = \"clap_lex\"\nversion = \"0.7.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1462739cb27611015575c0c11df5df7601141071f07518d56fcc1be504cbec97\"\n\n[[package]]\nname = \"color_quant\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3d7b894f5411737b7867f4827955924d7c254fc9f4d91a6aad6b097804b1018b\"\n\n[[package]]\nname = \"colorchoice\"\nversion = \"1.0.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d3fd119d74b830634cea2a0f58bbd0d54540518a14397557951e79340abc28c0\"\n\n[[package]]\nname = \"colored\"\nversion = \"2.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cbf2150cce219b664a8a70df7a1f933836724b503f8a413af9365b4dcc4d90b8\"\ndependencies = [\n \"lazy_static\",\n \"windows-sys 0.48.0\",\n]\n\n[[package]]\nname = \"constant_time_eq\"\nversion = \"0.1.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"245097e9a4535ee1e3e3931fcfcd55a796a44c643e8596ff6566d68f09b87bbc\"\n\n[[package]]\nname = \"constant_time_eq\"\nversion = \"0.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f7144d30dcf0fafbce74250a3963025d8d52177934239851c917d29f1df280c2\"\n\n[[package]]\nname = \"core-foundation\"\nversion = \"0.9.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"91e195e091a93c46f7102ec7818a2aa394e1e1771c3ab4825963fa03e45afb8f\"\ndependencies = [\n \"core-foundation-sys\",\n \"libc\",\n]\n\n[[package]]\nname = \"core-foundation-sys\"\nversion = \"0.8.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"773648b94d0e5d620f64f280777445740e61fe701025087ec8b57f45c791888b\"\n\n[[package]]\nname = \"cpufeatures\"\nversion = \"0.2.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"51e852e6dc9a5bed1fae92dd2375037bf2b768725bf3be87811edee3249d09ad\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"crc\"\nversion = \"3.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"69e6e4d7b33a94f0991c26729976b10ebde1d34c3ee82408fb536164fa10d636\"\ndependencies = [\n \"crc-catalog\",\n]\n\n[[package]]\nname = \"crc-catalog\"\nversion = \"2.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"19d374276b40fb8bbdee95aef7c7fa6b5316ec764510eb64b8dd0e2ed0d7e7f5\"\n\n[[package]]\nname = \"crc32fast\"\nversion = \"1.4.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a97769d94ddab943e4510d138150169a2758b5ef3eb191a9ee688de3e23ef7b3\"\ndependencies = [\n \"cfg-if\",\n]\n\n[[package]]\nname = \"criterion\"\nversion = \"0.5.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f2b12d017a929603d80db1831cd3a24082f8137ce19c69e6447f54f5fc8d692f\"\ndependencies = [\n \"anes\",\n \"cast\",\n \"ciborium\",\n \"clap\",\n \"criterion-plot\",\n \"is-terminal\",\n \"itertools 0.10.5\",\n \"num-traits\",\n \"once_cell\",\n \"oorandom\",\n \"plotters\",\n \"rayon\",\n \"regex\",\n \"serde\",\n \"serde_derive\",\n \"serde_json\",\n \"tinytemplate\",\n \"walkdir\",\n]\n\n[[package]]\nname = \"criterion-plot\"\nversion = \"0.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6b50826342786a51a89e2da3a28f1c32b06e387201bc2d19791f622c673706b1\"\ndependencies = [\n \"cast\",\n \"itertools 0.10.5\",\n]\n\n[[package]]\nname = \"crossbeam-channel\"\nversion = \"0.5.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"33480d6946193aa8033910124896ca395333cae7e2d1113d1fef6c3272217df2\"\ndependencies = [\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"crossbeam-deque\"\nversion = \"0.8.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"613f8cc01fe9cf1a3eb3d7f488fd2fa8388403e97039e2f73692932e291a770d\"\ndependencies = [\n \"crossbeam-epoch\",\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"crossbeam-epoch\"\nversion = \"0.9.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5b82ac4a3c2ca9c3460964f020e1402edd5753411d7737aa39c3714ad1b5420e\"\ndependencies = [\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"crossbeam-utils\"\nversion = \"0.8.20\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"22ec99545bb0ed0ea7bb9b8e1e9122ea386ff8a48c0922e43f36d45ab09e0e80\"\n\n[[package]]\nname = \"crunchy\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7a81dae078cea95a014a339291cec439d2f232ebe854a9d672b796c6afafa9b7\"\n\n[[package]]\nname = \"crypto-common\"\nversion = \"0.1.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1bfb12502f3fc46cca1bb51ac28df9d618d813cdc3d2f25b9fe775a34af26bb3\"\ndependencies = [\n \"generic-array\",\n \"typenum\",\n]\n\n[[package]]\nname = \"daggy\"\nversion = \"0.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"91a9304e55e9d601a39ae4deaba85406d5c0980e106f65afcf0460e9af1e7602\"\ndependencies = [\n \"petgraph\",\n]\n\n[[package]]\nname = \"deflate64\"\nversion = \"0.1.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"da692b8d1080ea3045efaab14434d40468c3d8657e42abddfffca87b428f4c1b\"\n\n[[package]]\nname = \"deranged\"\nversion = \"0.3.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b42b6fa04a440b495c8b04d0e71b707c585f83cb9cb28cf8cd0d976c315e31b4\"\ndependencies = [\n \"powerfmt\",\n]\n\n[[package]]\nname = \"derive_arbitrary\"\nversion = \"1.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"67e77553c4162a157adbf834ebae5b415acbecbeafc7a74b0e886657506a7611\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.75\",\n]\n\n[[package]]\nname = \"difference\"\nversion = \"2.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"524cbf6897b527295dff137cec09ecf3a05f4fddffd7dfcd1585403449e74198\"\n\n[[package]]\nname = \"digest\"\nversion = \"0.10.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9ed9a281f7bc9b7576e61468ba615a66a5c8cfdff42420a70aa82701a3b1e292\"\ndependencies = [\n \"block-buffer\",\n \"crypto-common\",\n \"subtle\",\n]\n\n[[package]]\nname = \"displaydoc\"\nversion = \"0.2.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"97369cbbc041bc366949bc74d34658d6cda5621039731c6310521892a3a20ae0\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.75\",\n]\n\n[[package]]\nname = \"dssim\"\nversion = \"3.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"602609b3cbc9836fecf7311edd130b8cd6c04302b1923dd0fc9589ea221bfa6d\"\ndependencies = [\n \"crossbeam-channel\",\n \"dssim-core\",\n \"getopts\",\n \"imgref\",\n \"load_image\",\n \"lodepng\",\n \"ordered-channel\",\n \"rayon\",\n \"rgb\",\n]\n\n[[package]]\nname = \"dssim-core\"\nversion = \"3.2.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1d8dc651fc0f4a70e20ca35dbecefe47043a57e1d0e30f4668cbb27d93e3afab\"\ndependencies = [\n \"imgref\",\n \"itertools 0.13.0\",\n \"rayon\",\n \"rgb\",\n]\n\n[[package]]\nname = \"dunce\"\nversion = \"1.0.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"92773504d58c093f6de2459af4af33faa518c13451eb8f2b5698ed3d36e7c813\"\n\n[[package]]\nname = \"either\"\nversion = \"1.13.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"60b1af1c220855b6ceac025d3f6ecdd2b7c4894bfe9cd9bda4fbb4bc7c0d4cf0\"\n\n[[package]]\nname = \"encoding_rs\"\nversion = \"0.8.34\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b45de904aa0b010bce2ab45264d0631681847fa7b6f2eaa7dab7619943bc4f59\"\ndependencies = [\n \"cfg-if\",\n]\n\n[[package]]\nname = \"enum_derive\"\nversion = \"0.1.7\"\nsource = \"git+https://github.com/DanielKeep/rust-custom-derive.git#1252f258cdb9b7c9867f937c52c2f5c0e69a9c03\"\n\n[[package]]\nname = \"equivalent\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5443807d6dff69373d433ab9ef5378ad8df50ca6298caf15de6e52e24aaf54d5\"\n\n[[package]]\nname = \"errno\"\nversion = \"0.3.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"534c5cf6194dfab3db3242765c03bbe257cf92f22b38f6bc0c58d59108a820ba\"\ndependencies = [\n \"libc\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"evalchroma\"\nversion = \"1.0.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"750cbea0b946cfa53b12dbc59922526cbefa96d7cb27ccd2bebbdf817271236b\"\ndependencies = [\n \"imgref\",\n \"rgb\",\n]\n\n[[package]]\nname = \"fastrand\"\nversion = \"2.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9fc0510504f03c51ada170672ac806f1f105a88aa97a5281117e1ddc3368e51a\"\n\n[[package]]\nname = \"fixedbitset\"\nversion = \"0.4.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0ce7134b9999ecaf8bcd65542e436736ef32ddca1b3e06094cb6ec5755203b80\"\n\n[[package]]\nname = \"flate2\"\nversion = \"1.0.32\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9c0596c1eac1f9e04ed902702e9878208b336edc9d6fddc8a48387349bab3666\"\ndependencies = [\n \"crc32fast\",\n \"libz-sys\",\n \"miniz_oxide 0.8.0\",\n]\n\n[[package]]\nname = \"fnv\"\nversion = \"1.0.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3f9eec918d3f24069decb9af1554cad7c880e2da24a9afd88aca000531ab82c1\"\n\n[[package]]\nname = \"foreign-types\"\nversion = \"0.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f6f339eb8adc052cd2ca78910fda869aefa38d22d5cb648e6485e4d3fc06f3b1\"\ndependencies = [\n \"foreign-types-shared 0.1.1\",\n]\n\n[[package]]\nname = \"foreign-types\"\nversion = \"0.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d737d9aa519fb7b749cbc3b962edcf310a8dd1f4b67c91c4f83975dbdd17d965\"\ndependencies = [\n \"foreign-types-macros\",\n \"foreign-types-shared 0.3.1\",\n]\n\n[[package]]\nname = \"foreign-types-macros\"\nversion = \"0.2.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1a5c6c585bc94aaf2c7b51dd4c2ba22680844aba4c687be581871a6f518c5742\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.75\",\n]\n\n[[package]]\nname = \"foreign-types-shared\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"00b0228411908ca8685dba7fc2cdd70ec9990a6e753e89b6ac91a84c40fbaf4b\"\n\n[[package]]\nname = \"foreign-types-shared\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"aa9a19cbb55df58761df49b23516a86d432839add4af60fc256da840f66ed35b\"\n\n[[package]]\nname = \"form_urlencoded\"\nversion = \"1.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e13624c2627564efccf4934284bdd98cbaa14e79b0b5a141218e507b3a823456\"\ndependencies = [\n \"percent-encoding\",\n]\n\n[[package]]\nname = \"fuchsia-cprng\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a06f77d526c1a601b7c4cdd98f54b5eaabffc14d5f2f0296febdc7f357c6d3ba\"\n\n[[package]]\nname = \"futures-channel\"\nversion = \"0.3.30\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"eac8f7d7865dcb88bd4373ab671c8cf4508703796caa2b1985a9ca867b3fcb78\"\ndependencies = [\n \"futures-core\",\n \"futures-sink\",\n]\n\n[[package]]\nname = \"futures-core\"\nversion = \"0.3.30\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dfc6580bb841c5a68e9ef15c77ccc837b40a7504914d52e47b8b0e9bbda25a1d\"\n\n[[package]]\nname = \"futures-io\"\nversion = \"0.3.30\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a44623e20b9681a318efdd71c299b6b222ed6f231972bfe2f224ebad6311f0c1\"\n\n[[package]]\nname = \"futures-sink\"\nversion = \"0.3.30\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9fb8e00e87438d937621c1c6269e53f536c14d3fbd6a042bb24879e57d474fb5\"\n\n[[package]]\nname = \"futures-task\"\nversion = \"0.3.30\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"38d84fa142264698cdce1a9f9172cf383a0c82de1bddcf3092901442c4097004\"\n\n[[package]]\nname = \"futures-util\"\nversion = \"0.3.30\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3d6401deb83407ab3da39eba7e33987a73c3df0c82b4bb5813ee871c19c41d48\"\ndependencies = [\n \"futures-core\",\n \"futures-io\",\n \"futures-sink\",\n \"futures-task\",\n \"memchr\",\n \"pin-project-lite\",\n \"pin-utils\",\n \"slab\",\n]\n\n[[package]]\nname = \"generic-array\"\nversion = \"0.14.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"85649ca51fd72272d7821adaf274ad91c288277713d9c18820d8499a7ff69e9a\"\ndependencies = [\n \"typenum\",\n \"version_check\",\n]\n\n[[package]]\nname = \"getopts\"\nversion = \"0.2.21\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"14dbbfd5c71d70241ecf9e6f13737f7b5ce823821063188d7e46c41d371eebd5\"\ndependencies = [\n \"unicode-width\",\n]\n\n[[package]]\nname = \"getrandom\"\nversion = \"0.2.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c4567c8db10ae91089c99af84c68c38da3ec2f087c3f82960bcdbf3656b6f4d7\"\ndependencies = [\n \"cfg-if\",\n \"libc\",\n \"wasi\",\n]\n\n[[package]]\nname = \"gif\"\nversion = \"0.13.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3fb2d69b19215e18bb912fa30f7ce15846e301408695e44e0ef719f1da9e19f2\"\ndependencies = [\n \"color_quant\",\n \"weezl\",\n]\n\n[[package]]\nname = \"gimli\"\nversion = \"0.29.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"40ecd4077b5ae9fd2e9e169b102c6c330d0605168eb0e8bf79952b256dbefffd\"\n\n[[package]]\nname = \"glob\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d2fabcfbdc87f4758337ca535fb41a6d701b65693ce38287d856d1674551ec9b\"\n\n[[package]]\nname = \"h2\"\nversion = \"0.4.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"524e8ac6999421f49a846c2d4411f337e53497d8ec55d67753beffa43c5d9205\"\ndependencies = [\n \"atomic-waker\",\n \"bytes\",\n \"fnv\",\n \"futures-core\",\n \"futures-sink\",\n \"http\",\n \"indexmap\",\n \"slab\",\n \"tokio\",\n \"tokio-util\",\n \"tracing\",\n]\n\n[[package]]\nname = \"half\"\nversion = \"2.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6dd08c532ae367adf81c312a4580bc67f1d0fe8bc9c460520283f4c0ff277888\"\ndependencies = [\n \"cfg-if\",\n \"crunchy\",\n]\n\n[[package]]\nname = \"hashbrown\"\nversion = \"0.14.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e5274423e17b7c9fc20b6e7e208532f9b19825d82dfd615708b70edd83df41f1\"\n\n[[package]]\nname = \"heck\"\nversion = \"0.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"95505c38b4572b2d910cecb0281560f54b440a19336cbbcb27bf6ce6adc6f5a8\"\n\n[[package]]\nname = \"hermit-abi\"\nversion = \"0.3.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d231dfb89cfffdbc30e7fc41579ed6066ad03abda9e567ccafae602b97ec5024\"\n\n[[package]]\nname = \"hermit-abi\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fbf6a919d6cf397374f7dfeeea91d974c7c0a7221d0d0f4f20d859d329e53fcc\"\n\n[[package]]\nname = \"hex\"\nversion = \"0.4.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7f24254aa9a54b5c858eaee2f5bccdb46aaf0e486a595ed5fd8f86ba55232a70\"\n\n[[package]]\nname = \"hmac\"\nversion = \"0.12.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6c49c37c09c17a53d937dfbb742eb3a961d65a994e6bcdcf37e7399d0cc8ab5e\"\ndependencies = [\n \"digest\",\n]\n\n[[package]]\nname = \"http\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"21b9ddb458710bc376481b842f5da65cdf31522de232c1ca8146abce2a358258\"\ndependencies = [\n \"bytes\",\n \"fnv\",\n \"itoa\",\n]\n\n[[package]]\nname = \"http-body\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1efedce1fb8e6913f23e0c92de8e62cd5b772a67e7b3946df930a62566c93184\"\ndependencies = [\n \"bytes\",\n \"http\",\n]\n\n[[package]]\nname = \"http-body-util\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"793429d76616a256bcb62c2a2ec2bed781c8307e797e2598c50010f2bee2544f\"\ndependencies = [\n \"bytes\",\n \"futures-util\",\n \"http\",\n \"http-body\",\n \"pin-project-lite\",\n]\n\n[[package]]\nname = \"httparse\"\nversion = \"1.9.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0fcc0b4a115bf80b728eb8ea024ad5bd707b615bfed49e0665b6e0f86fd082d9\"\n\n[[package]]\nname = \"httpdate\"\nversion = \"1.0.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"df3b46402a9d5adb4c86a0cf463f42e19994e3ee891101b1841f30a545cb49a9\"\n\n[[package]]\nname = \"hyper\"\nversion = \"1.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"50dfd22e0e76d0f662d429a5f80fcaf3855009297eab6a0a9f8543834744ba05\"\ndependencies = [\n \"bytes\",\n \"futures-channel\",\n \"futures-util\",\n \"h2\",\n \"http\",\n \"http-body\",\n \"httparse\",\n \"httpdate\",\n \"itoa\",\n \"pin-project-lite\",\n \"smallvec 1.13.2\",\n \"tokio\",\n \"want\",\n]\n\n[[package]]\nname = \"hyper-rustls\"\nversion = \"0.27.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5ee4be2c948921a1a5320b629c4193916ed787a7f7f293fd3f7f5a6c9de74155\"\ndependencies = [\n \"futures-util\",\n \"http\",\n \"hyper\",\n \"hyper-util\",\n \"rustls\",\n \"rustls-pki-types\",\n \"tokio\",\n \"tokio-rustls\",\n \"tower-service\",\n]\n\n[[package]]\nname = \"hyper-tls\"\nversion = \"0.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"70206fc6890eaca9fde8a0bf71caa2ddfc9fe045ac9e5c70df101a7dbde866e0\"\ndependencies = [\n \"bytes\",\n \"http-body-util\",\n \"hyper\",\n \"hyper-util\",\n \"native-tls\",\n \"tokio\",\n \"tokio-native-tls\",\n \"tower-service\",\n]\n\n[[package]]\nname = \"hyper-util\"\nversion = \"0.1.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cde7055719c54e36e95e8719f95883f22072a48ede39db7fc17a4e1d5281e9b9\"\ndependencies = [\n \"bytes\",\n \"futures-channel\",\n \"futures-util\",\n \"http\",\n \"http-body\",\n \"hyper\",\n \"pin-project-lite\",\n \"socket2\",\n \"tokio\",\n \"tower\",\n \"tower-service\",\n \"tracing\",\n]\n\n[[package]]\nname = \"iana-time-zone\"\nversion = \"0.1.60\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e7ffbb5a1b541ea2561f8c41c087286cc091e21e556a4f09a8f6cbf17b69b141\"\ndependencies = [\n \"android_system_properties\",\n \"core-foundation-sys\",\n \"iana-time-zone-haiku\",\n \"js-sys\",\n \"wasm-bindgen\",\n \"windows-core\",\n]\n\n[[package]]\nname = \"iana-time-zone-haiku\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f31827a206f56af32e590ba56d5d2d085f558508192593743f16b2306495269f\"\ndependencies = [\n \"cc\",\n]\n\n[[package]]\nname = \"idna\"\nversion = \"0.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"634d9b1461af396cad843f47fdba5597a4f9e6ddd4bfb6ff5d85028c25cb12f6\"\ndependencies = [\n \"unicode-bidi\",\n \"unicode-normalization\",\n]\n\n[[package]]\nname = \"ieee754\"\nversion = \"0.2.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9007da9cacbd3e6343da136e98b0d2df013f553d35bdec8b518f07bea768e19c\"\n\n[[package]]\nname = \"imageflow\"\nversion = \"0.1.0\"\ndependencies = [\n \"imageflow_core\",\n \"imageflow_helpers\",\n \"imageflow_riapi\",\n \"imageflow_types\",\n]\n\n[[package]]\nname = \"imageflow_abi\"\nversion = \"0.1.0\"\ndependencies = [\n \"backtrace\",\n \"base64\",\n \"cbindgen\",\n \"imageflow_core\",\n \"imageflow_helpers\",\n \"libc\",\n \"regex\",\n \"smallvec 1.13.2\",\n]\n\n[[package]]\nname = \"imageflow_c_components\"\nversion = \"0.1.0\"\ndependencies = [\n \"cc\",\n \"glob\",\n \"lcms2-sys\",\n \"libc\",\n \"libpng-sys\",\n \"libz-sys\",\n \"mozjpeg-sys\",\n]\n\n[[package]]\nname = \"imageflow_core\"\nversion = \"0.1.0\"\ndependencies = [\n \"base64\",\n \"blake2-rfc\",\n \"bytemuck\",\n \"byteorder\",\n \"chashmap\",\n \"chrono\",\n \"criterion\",\n \"daggy\",\n \"dssim\",\n \"evalchroma\",\n \"flate2\",\n \"fnv\",\n \"getopts\",\n \"gif\",\n \"hex\",\n \"hyper\",\n \"imageflow_c_components\",\n \"imageflow_helpers\",\n \"imageflow_http_helpers\",\n \"imageflow_riapi\",\n \"imageflow_types\",\n \"imagequant\",\n \"imgref\",\n \"itertools 0.13.0\",\n \"jpeg-decoder\",\n \"lazy_static\",\n \"lcms2\",\n \"lcms2-sys\",\n \"libc\",\n \"libpng-sys\",\n \"libwebp-sys\",\n \"libz-sys\",\n \"lodepng\",\n \"mozjpeg\",\n \"mozjpeg-sys\",\n \"multiversion\",\n \"num 0.4.3\",\n \"petgraph\",\n \"rand 0.4.6\",\n \"rgb\",\n \"rustface\",\n \"serde\",\n \"serde_derive\",\n \"serde_json\",\n \"slotmap\",\n \"smallvec 1.13.2\",\n \"threadpool\",\n \"time\",\n \"twox-hash\",\n \"url\",\n \"uuid\",\n \"zune-bmp\",\n]\n\n[[package]]\nname = \"imageflow_helpers\"\nversion = \"0.1.0\"\ndependencies = [\n \"backtrace\",\n \"base64\",\n \"blake2-rfc\",\n \"chrono\",\n \"digest\",\n \"fnv\",\n \"lazy_static\",\n \"libc\",\n \"mockito\",\n \"rand 0.8.5\",\n \"regex\",\n \"rgb\",\n \"serde\",\n \"serde_derive\",\n \"serde_json\",\n \"sha2\",\n \"smallvec 1.13.2\",\n \"time\",\n \"twox-hash\",\n \"unicase\",\n \"uuid\",\n \"zip\",\n]\n\n[[package]]\nname = \"imageflow_http_helpers\"\nversion = \"0.1.0\"\ndependencies = [\n \"imageflow_helpers\",\n \"reqwest\",\n \"tokio\",\n]\n\n[[package]]\nname = \"imageflow_riapi\"\nversion = \"0.1.0\"\ndependencies = [\n \"difference\",\n \"enum_derive\",\n \"ieee754\",\n \"imageflow_helpers\",\n \"imageflow_types\",\n \"lazy_static\",\n \"macro-attr\",\n \"option-filter\",\n \"time\",\n \"url\",\n]\n\n[[package]]\nname = \"imageflow_tool_lib\"\nversion = \"0.1.0\"\ndependencies = [\n \"clap\",\n \"imageflow_core\",\n \"imageflow_helpers\",\n \"imageflow_http_helpers\",\n \"imageflow_types\",\n \"libc\",\n \"serde\",\n \"serde_json\",\n \"threadpool\",\n \"time\",\n]\n\n[[package]]\nname = \"imageflow_types\"\nversion = \"0.1.0\"\ndependencies = [\n \"chrono\",\n \"imageflow_helpers\",\n \"imgref\",\n \"lazy_static\",\n \"quick-error\",\n \"regex\",\n \"rgb\",\n \"serde\",\n \"serde_derive\",\n \"serde_json\",\n]\n\n[[package]]\nname = \"imagequant\"\nversion = \"4.3.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5fecc99538c9061ee4d88476f6cd704c9f06575a34f0083affdaa1337a331aa7\"\ndependencies = [\n \"arrayvec 0.7.6\",\n \"once_cell\",\n \"rayon\",\n \"rgb\",\n \"thread_local\",\n]\n\n[[package]]\nname = \"imgref\"\nversion = \"1.10.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"44feda355f4159a7c757171a77de25daf6411e217b4cabd03bd6650690468126\"\n\n[[package]]\nname = \"indexmap\"\nversion = \"2.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"93ead53efc7ea8ed3cfb0c79fc8023fbb782a5432b52830b6518941cebe6505c\"\ndependencies = [\n \"equivalent\",\n \"hashbrown\",\n]\n\n[[package]]\nname = \"inout\"\nversion = \"0.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a0c10553d664a4d0bcff9f4215d0aac67a639cc68ef660840afe309b807bc9f5\"\ndependencies = [\n \"generic-array\",\n]\n\n[[package]]\nname = \"ipnet\"\nversion = \"2.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8f518f335dce6725a761382244631d86cf0ccb2863413590b31338feb467f9c3\"\n\n[[package]]\nname = \"is-terminal\"\nversion = \"0.4.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"261f68e344040fbd0edea105bef17c66edf46f984ddb1115b775ce31be948f4b\"\ndependencies = [\n \"hermit-abi 0.4.0\",\n \"libc\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"is_terminal_polyfill\"\nversion = \"1.70.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7943c866cc5cd64cbc25b2e01621d07fa8eb2a1a23160ee81ce38704e97b8ecf\"\n\n[[package]]\nname = \"itertools\"\nversion = \"0.10.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b0fd2260e829bddf4cb6ea802289de2f86d6a7a690192fbe91b3f46e0f2c8473\"\ndependencies = [\n \"either\",\n]\n\n[[package]]\nname = \"itertools\"\nversion = \"0.13.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"413ee7dfc52ee1a4949ceeb7dbc8a33f2d6c088194d9f922fb8318faf1f01186\"\ndependencies = [\n \"either\",\n]\n\n[[package]]\nname = \"itoa\"\nversion = \"1.0.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"49f1f14873335454500d59611f1cf4a4b0f786f9ac11f4312a78e4cf2566695b\"\n\n[[package]]\nname = \"jobserver\"\nversion = \"0.1.32\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"48d1dbcbbeb6a7fec7e059840aa538bd62aaccf972c7346c4d9d2059312853d0\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"jpeg-decoder\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f5d4a7da358eff58addd2877a45865158f0d78c911d43a5784ceb7bbf52833b0\"\ndependencies = [\n \"rayon\",\n]\n\n[[package]]\nname = \"js-sys\"\nversion = \"0.3.70\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1868808506b929d7b0cfa8f75951347aa71bb21144b7791bae35d9bccfcfe37a\"\ndependencies = [\n \"wasm-bindgen\",\n]\n\n[[package]]\nname = \"lazy_static\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bbd2bcb4c963f2ddae06a2efc7e9f3591312473c50c6685e1f298068316e66fe\"\n\n[[package]]\nname = \"lcms2\"\nversion = \"6.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"680ec3fa42c36e0af9ca02f20a3742a82229c7f1ee0e6754294de46a80be6f74\"\ndependencies = [\n \"bytemuck\",\n \"foreign-types 0.5.0\",\n \"lcms2-sys\",\n]\n\n[[package]]\nname = \"lcms2-sys\"\nversion = \"4.0.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"593265f9a3172180024fb62580ee31348f31be924b19416da174ebb7fb623d2e\"\ndependencies = [\n \"cc\",\n \"dunce\",\n \"libc\",\n \"pkg-config\",\n]\n\n[[package]]\nname = \"libc\"\nversion = \"0.2.158\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d8adc4bb1803a324070e64a98ae98f38934d91957a99cfb3a43dcbc01bc56439\"\n\n[[package]]\nname = \"libpng-sys\"\nversion = \"1.1.9\"\nsource = \"git+https://github.com/lilith/rust-libpng-sys#6c17db1dbff73e774e7a50ee5d8d9dfc7a5ec9b6\"\ndependencies = [\n \"cc\",\n \"dunce\",\n \"libc\",\n \"libz-sys\",\n \"pkg-config\",\n]\n\n[[package]]\nname = \"libwebp-sys\"\nversion = \"0.9.5\"\nsource = \"git+https://github.com/lilith/libwebp-sys#735b22b9d3c1d5e0631f3c88c1e2b9324b7ac9e2\"\ndependencies = [\n \"cc\",\n \"glob\",\n]\n\n[[package]]\nname = \"libz-sys\"\nversion = \"1.1.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fdc53a7799a7496ebc9fd29f31f7df80e83c9bda5299768af5f9e59eeea74647\"\ndependencies = [\n \"cc\",\n \"libc\",\n \"pkg-config\",\n \"vcpkg\",\n]\n\n[[package]]\nname = \"linux-raw-sys\"\nversion = \"0.4.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"78b3ae25bc7c8c38cec158d1f2757ee79e9b3740fbc7ccf0e59e4b08d793fa89\"\n\n[[package]]\nname = \"load_image\"\nversion = \"3.1.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c8de225e81d985903660bfb0dfb3e0ef0cdf4d22e401b9448ed758d99f24f947\"\ndependencies = [\n \"bytemuck\",\n \"imgref\",\n \"jpeg-decoder\",\n \"lcms2\",\n \"lodepng\",\n \"quick-error\",\n \"rexif\",\n \"rgb\",\n]\n\n[[package]]\nname = \"lock_api\"\nversion = \"0.4.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"07af8b9cdd281b7915f413fa73f29ebd5d55d0d3f0155584dade1ff18cea1b17\"\ndependencies = [\n \"autocfg\",\n \"scopeguard\",\n]\n\n[[package]]\nname = \"lockfree-object-pool\"\nversion = \"0.1.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9374ef4228402d4b7e403e5838cb880d9ee663314b0a900d5a6aabf0c213552e\"\n\n[[package]]\nname = \"lodepng\"\nversion = \"3.10.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7912e09a5b971ceb60f87e97ca07055986269b2a35e0b7b43734a5f7680adb1f\"\ndependencies = [\n \"crc32fast\",\n \"flate2\",\n \"libc\",\n \"rgb\",\n]\n\n[[package]]\nname = \"log\"\nversion = \"0.4.22\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a7a70ba024b9dc04c27ea2f0c0548feb474ec5c54bba33a7f72f873a39d07b24\"\n\n[[package]]\nname = \"lzma-rs\"\nversion = \"0.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"297e814c836ae64db86b36cf2a557ba54368d03f6afcd7d947c266692f71115e\"\ndependencies = [\n \"byteorder\",\n \"crc\",\n]\n\n[[package]]\nname = \"macro-attr\"\nversion = \"0.2.1\"\nsource = \"git+https://github.com/DanielKeep/rust-custom-derive.git#1252f258cdb9b7c9867f937c52c2f5c0e69a9c03\"\n\n[[package]]\nname = \"maybe-uninit\"\nversion = \"2.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"60302e4db3a61da70c0cb7991976248362f30319e88850c487b9b95bbf059e00\"\n\n[[package]]\nname = \"memchr\"\nversion = \"2.7.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"78ca9ab1a0babb1e7d5695e3530886289c18cf2f87ec19a575a0abdce112e3a3\"\n\n[[package]]\nname = \"mime\"\nversion = \"0.3.17\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6877bb514081ee2a7ff5ef9de3281f14a4dd4bceac4c09388074a6b5df8a139a\"\n\n[[package]]\nname = \"miniz_oxide\"\nversion = \"0.7.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b8a240ddb74feaf34a79a7add65a741f3167852fba007066dcac1ca548d89c08\"\ndependencies = [\n \"adler\",\n]\n\n[[package]]\nname = \"miniz_oxide\"\nversion = \"0.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e2d80299ef12ff69b16a84bb182e3b9df68b5a91574d3d4fa6e41b65deec4df1\"\ndependencies = [\n \"adler2\",\n]\n\n[[package]]\nname = \"mio\"\nversion = \"1.0.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"80e04d1dcff3aae0704555fe5fee3bcfaf3d1fdf8a7e521d5b9d2b42acb52cec\"\ndependencies = [\n \"hermit-abi 0.3.9\",\n \"libc\",\n \"wasi\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"mockito\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"09b34bd91b9e5c5b06338d392463e1318d683cf82ec3d3af4014609be6e2108d\"\ndependencies = [\n \"assert-json-diff\",\n \"bytes\",\n \"colored\",\n \"futures-util\",\n \"http\",\n \"http-body\",\n \"http-body-util\",\n \"hyper\",\n \"hyper-util\",\n \"log\",\n \"rand 0.8.5\",\n \"regex\",\n \"serde_json\",\n \"serde_urlencoded\",\n \"similar\",\n \"tokio\",\n]\n\n[[package]]\nname = \"mozjpeg\"\nversion = \"0.10.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8c1e1f1b1de2ee6ef673e8c76666b93794120fa6ec1cb4f535c129ea6f32731d\"\ndependencies = [\n \"arrayvec 0.7.6\",\n \"bytemuck\",\n \"libc\",\n \"mozjpeg-sys\",\n \"rgb\",\n]\n\n[[package]]\nname = \"mozjpeg-sys\"\nversion = \"2.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"27e31c0171e0b1158c0dfb7386dbdf999f4a9afaa83fd68de39c7929f4d5c16f\"\ndependencies = [\n \"cc\",\n \"dunce\",\n \"libc\",\n \"nasm-rs\",\n]\n\n[[package]]\nname = \"multiversion\"\nversion = \"0.7.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c4851161a11d3ad0bf9402d90ffc3967bf231768bfd7aeb61755ad06dbf1a142\"\ndependencies = [\n \"multiversion-macros\",\n \"target-features\",\n]\n\n[[package]]\nname = \"multiversion-macros\"\nversion = \"0.7.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"79a74ddee9e0c27d2578323c13905793e91622148f138ba29738f9dddb835e90\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 1.0.109\",\n \"target-features\",\n]\n\n[[package]]\nname = \"nasm-rs\"\nversion = \"0.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"12fcfa1bd49e0342ec1d07ed2be83b59963e7acbeb9310e1bb2c07b69dadd959\"\ndependencies = [\n \"jobserver\",\n]\n\n[[package]]\nname = \"native-tls\"\nversion = \"0.2.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a8614eb2c83d59d1c8cc974dd3f920198647674a0a035e1af1fa58707e317466\"\ndependencies = [\n \"libc\",\n \"log\",\n \"openssl\",\n \"openssl-probe\",\n \"openssl-sys\",\n \"schannel\",\n \"security-framework\",\n \"security-framework-sys\",\n \"tempfile\",\n]\n\n[[package]]\nname = \"nodrop\"\nversion = \"0.1.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"72ef4a56884ca558e5ddb05a1d1e7e1bfd9a68d9ed024c21704cc98872dae1bb\"\n\n[[package]]\nname = \"num\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8b7a8e9be5e039e2ff869df49155f1c06bd01ade2117ec783e56ab0932b67a8f\"\ndependencies = [\n \"num-bigint 0.3.3\",\n \"num-complex 0.3.1\",\n \"num-integer\",\n \"num-iter\",\n \"num-rational 0.3.2\",\n \"num-traits\",\n]\n\n[[package]]\nname = \"num\"\nversion = \"0.4.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"35bd024e8b2ff75562e5f34e7f4905839deb4b22955ef5e73d2fea1b9813cb23\"\ndependencies = [\n \"num-bigint 0.4.6\",\n \"num-complex 0.4.6\",\n \"num-integer\",\n \"num-iter\",\n \"num-rational 0.4.2\",\n \"num-traits\",\n]\n\n[[package]]\nname = \"num-bigint\"\nversion = \"0.3.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5f6f7833f2cbf2360a6cfd58cd41a53aa7a90bd4c202f5b1c7dd2ed73c57b2c3\"\ndependencies = [\n \"autocfg\",\n \"num-integer\",\n \"num-traits\",\n]\n\n[[package]]\nname = \"num-bigint\"\nversion = \"0.4.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a5e44f723f1133c9deac646763579fdb3ac745e418f2a7af9cd0c431da1f20b9\"\ndependencies = [\n \"num-integer\",\n \"num-traits\",\n]\n\n[[package]]\nname = \"num-complex\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"747d632c0c558b87dbabbe6a82f3b4ae03720d0646ac5b7b4dae89394be5f2c5\"\ndependencies = [\n \"num-traits\",\n]\n\n[[package]]\nname = \"num-complex\"\nversion = \"0.4.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"73f88a1307638156682bada9d7604135552957b7818057dcef22705b4d509495\"\ndependencies = [\n \"num-traits\",\n]\n\n[[package]]\nname = \"num-conv\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"51d515d32fb182ee37cda2ccdcb92950d6a3c2893aa280e540671c2cd0f3b1d9\"\n\n[[package]]\nname = \"num-integer\"\nversion = \"0.1.46\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7969661fd2958a5cb096e56c8e1ad0444ac2bbcd0061bd28660485a44879858f\"\ndependencies = [\n \"num-traits\",\n]\n\n[[package]]\nname = \"num-iter\"\nversion = \"0.1.45\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1429034a0490724d0075ebb2bc9e875d6503c3cf69e235a8941aa757d83ef5bf\"\ndependencies = [\n \"autocfg\",\n \"num-integer\",\n \"num-traits\",\n]\n\n[[package]]\nname = \"num-rational\"\nversion = \"0.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"12ac428b1cb17fce6f731001d307d351ec70a6d202fc2e60f7d4c5e42d8f4f07\"\ndependencies = [\n \"autocfg\",\n \"num-bigint 0.3.3\",\n \"num-integer\",\n \"num-traits\",\n]\n\n[[package]]\nname = \"num-rational\"\nversion = \"0.4.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f83d14da390562dca69fc84082e73e548e1ad308d24accdedd2720017cb37824\"\ndependencies = [\n \"num-bigint 0.4.6\",\n \"num-integer\",\n \"num-traits\",\n]\n\n[[package]]\nname = \"num-traits\"\nversion = \"0.2.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"071dfc062690e90b734c0b2273ce72ad0ffa95f0c74596bc250dcfd960262841\"\ndependencies = [\n \"autocfg\",\n]\n\n[[package]]\nname = \"num_cpus\"\nversion = \"1.16.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4161fcb6d602d4d2081af7c3a45852d875a03dd337a6bfdd6e06407b61342a43\"\ndependencies = [\n \"hermit-abi 0.3.9\",\n \"libc\",\n]\n\n[[package]]\nname = \"object\"\nversion = \"0.36.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"27b64972346851a39438c60b341ebc01bba47464ae329e55cf343eb93964efd9\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"once_cell\"\nversion = \"1.19.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3fdb12b2476b595f9358c5161aa467c2438859caa136dec86c26fdd2efe17b92\"\n\n[[package]]\nname = \"oorandom\"\nversion = \"11.1.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b410bbe7e14ab526a0e86877eb47c6996a2bd7746f027ba551028c925390e4e9\"\n\n[[package]]\nname = \"openssl\"\nversion = \"0.10.66\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9529f4786b70a3e8c61e11179af17ab6188ad8d0ded78c5529441ed39d4bd9c1\"\ndependencies = [\n \"bitflags\",\n \"cfg-if\",\n \"foreign-types 0.3.2\",\n \"libc\",\n \"once_cell\",\n \"openssl-macros\",\n \"openssl-sys\",\n]\n\n[[package]]\nname = \"openssl-macros\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a948666b637a0f465e8564c73e89d4dde00d72d4d473cc972f390fc3dcee7d9c\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.75\",\n]\n\n[[package]]\nname = \"openssl-probe\"\nversion = \"0.1.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ff011a302c396a5197692431fc1948019154afc178baf7d8e37367442a4601cf\"\n\n[[package]]\nname = \"openssl-src\"\nversion = \"300.3.1+3.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7259953d42a81bf137fbbd73bd30a8e1914d6dce43c2b90ed575783a22608b91\"\ndependencies = [\n \"cc\",\n]\n\n[[package]]\nname = \"openssl-sys\"\nversion = \"0.9.103\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7f9e8deee91df40a943c71b917e5874b951d32a802526c85721ce3b776c929d6\"\ndependencies = [\n \"cc\",\n \"libc\",\n \"openssl-src\",\n \"pkg-config\",\n \"vcpkg\",\n]\n\n[[package]]\nname = \"option-filter\"\nversion = \"1.0.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ea5bd73510288f8a3886ac96e3009fff1e0ff37cdb85aa3186ee1d4d68646610\"\n\n[[package]]\nname = \"ordered-channel\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4f0bc569ca0974cb90125f52cf76f7b6ad3a072301beba78eb0aa4174c4964ed\"\n\n[[package]]\nname = \"owning_ref\"\nversion = \"0.3.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cdf84f41639e037b484f93433aa3897863b561ed65c6e59c7073d7c561710f37\"\ndependencies = [\n \"stable_deref_trait\",\n]\n\n[[package]]\nname = \"parking_lot\"\nversion = \"0.4.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"149d8f5b97f3c1133e3cfcd8886449959e856b557ff281e292b733d7c69e005e\"\ndependencies = [\n \"owning_ref\",\n \"parking_lot_core 0.2.14\",\n]\n\n[[package]]\nname = \"parking_lot\"\nversion = \"0.12.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f1bf18183cf54e8d6059647fc3063646a1801cf30896933ec2311622cc4b9a27\"\ndependencies = [\n \"lock_api\",\n \"parking_lot_core 0.9.10\",\n]\n\n[[package]]\nname = \"parking_lot_core\"\nversion = \"0.2.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4db1a8ccf734a7bce794cc19b3df06ed87ab2f3907036b693c68f56b4d4537fa\"\ndependencies = [\n \"libc\",\n \"rand 0.4.6\",\n \"smallvec 0.6.14\",\n \"winapi\",\n]\n\n[[package]]\nname = \"parking_lot_core\"\nversion = \"0.9.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1e401f977ab385c9e4e3ab30627d6f26d00e2c73eef317493c4ec6d468726cf8\"\ndependencies = [\n \"cfg-if\",\n \"libc\",\n \"redox_syscall\",\n \"smallvec 1.13.2\",\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"pbkdf2\"\nversion = \"0.12.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f8ed6a7761f76e3b9f92dfb0a60a6a6477c61024b775147ff0973a02653abaf2\"\ndependencies = [\n \"digest\",\n \"hmac\",\n]\n\n[[package]]\nname = \"percent-encoding\"\nversion = \"2.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e3148f5046208a5d56bcfc03053e3ca6334e51da8dfb19b6cdc8b306fae3283e\"\n\n[[package]]\nname = \"petgraph\"\nversion = \"0.6.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b4c5cc86750666a3ed20bdaf5ca2a0344f9c67674cae0515bec2da16fbaa47db\"\ndependencies = [\n \"fixedbitset\",\n \"indexmap\",\n]\n\n[[package]]\nname = \"pin-project\"\nversion = \"1.1.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b6bf43b791c5b9e34c3d182969b4abb522f9343702850a2e57f460d00d09b4b3\"\ndependencies = [\n \"pin-project-internal\",\n]\n\n[[package]]\nname = \"pin-project-internal\"\nversion = \"1.1.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2f38a4412a78282e09a2cf38d195ea5420d15ba0602cb375210efbc877243965\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.75\",\n]\n\n[[package]]\nname = \"pin-project-lite\"\nversion = \"0.2.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bda66fc9667c18cb2758a2ac84d1167245054bcf85d5d1aaa6923f45801bdd02\"\n\n[[package]]\nname = \"pin-utils\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8b870d8c151b6f2fb93e84a13146138f05d02ed11c7e7c54f8826aaaf7c9f184\"\n\n[[package]]\nname = \"pkg-config\"\nversion = \"0.3.30\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d231b230927b5e4ad203db57bbcbee2802f6bce620b1e4a9024a07d94e2907ec\"\n\n[[package]]\nname = \"plotters\"\nversion = \"0.3.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a15b6eccb8484002195a3e44fe65a4ce8e93a625797a063735536fd59cb01cf3\"\ndependencies = [\n \"num-traits\",\n \"plotters-backend\",\n \"plotters-svg\",\n \"wasm-bindgen\",\n \"web-sys\",\n]\n\n[[package]]\nname = \"plotters-backend\"\nversion = \"0.3.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"414cec62c6634ae900ea1c56128dfe87cf63e7caece0852ec76aba307cebadb7\"\n\n[[package]]\nname = \"plotters-svg\"\nversion = \"0.3.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"81b30686a7d9c3e010b84284bdd26a29f2138574f52f5eb6f794fc0ad924e705\"\ndependencies = [\n \"plotters-backend\",\n]\n\n[[package]]\nname = \"powerfmt\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"439ee305def115ba05938db6eb1644ff94165c5ab5e9420d1c1bcedbba909391\"\n\n[[package]]\nname = \"ppv-lite86\"\nversion = \"0.2.20\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"77957b295656769bb8ad2b6a6b09d897d94f05c41b069aede1fcdaa675eaea04\"\ndependencies = [\n \"zerocopy\",\n]\n\n[[package]]\nname = \"proc-macro2\"\nversion = \"1.0.86\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5e719e8df665df0d1c8fbfd238015744736151d4445ec0836b8e628aae103b77\"\ndependencies = [\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"quick-error\"\nversion = \"2.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a993555f31e5a609f617c12db6250dedcac1b0a85076912c436e6fc9b2c8e6a3\"\n\n[[package]]\nname = \"quote\"\nversion = \"1.0.36\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0fa76aaf39101c457836aec0ce2316dbdc3ab723cdda1c6bd4e6ad4208acaca7\"\ndependencies = [\n \"proc-macro2\",\n]\n\n[[package]]\nname = \"rand\"\nversion = \"0.4.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"552840b97013b1a26992c11eac34bdd778e464601a4c2054b5f0bff7c6761293\"\ndependencies = [\n \"fuchsia-cprng\",\n \"libc\",\n \"rand_core 0.3.1\",\n \"rdrand\",\n \"winapi\",\n]\n\n[[package]]\nname = \"rand\"\nversion = \"0.8.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"34af8d1a0e25924bc5b7c43c079c942339d8f0a8b57c39049bef581b46327404\"\ndependencies = [\n \"libc\",\n \"rand_chacha\",\n \"rand_core 0.6.4\",\n]\n\n[[package]]\nname = \"rand_chacha\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e6c10a63a0fa32252be49d21e7709d4d4baf8d231c2dbce1eaa8141b9b127d88\"\ndependencies = [\n \"ppv-lite86\",\n \"rand_core 0.6.4\",\n]\n\n[[package]]\nname = \"rand_core\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7a6fdeb83b075e8266dcc8762c22776f6877a63111121f5f8c7411e5be7eed4b\"\ndependencies = [\n \"rand_core 0.4.2\",\n]\n\n[[package]]\nname = \"rand_core\"\nversion = \"0.4.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9c33a3c44ca05fa6f1807d8e6743f3824e8509beca625669633be0acbdf509dc\"\n\n[[package]]\nname = \"rand_core\"\nversion = \"0.6.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ec0be4795e2f6a28069bec0b5ff3e2ac9bafc99e6a9a7dc3547996c5c816922c\"\ndependencies = [\n \"getrandom\",\n]\n\n[[package]]\nname = \"rayon\"\nversion = \"1.10.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b418a60154510ca1a002a752ca9714984e21e4241e804d32555251faf8b78ffa\"\ndependencies = [\n \"either\",\n \"rayon-core\",\n]\n\n[[package]]\nname = \"rayon-core\"\nversion = \"1.12.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1465873a3dfdaa8ae7cb14b4383657caab0b3e8a0aa9ae8e04b044854c8dfce2\"\ndependencies = [\n \"crossbeam-deque\",\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"rdrand\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"678054eb77286b51581ba43620cc911abf02758c91f93f479767aed0f90458b2\"\ndependencies = [\n \"rand_core 0.3.1\",\n]\n\n[[package]]\nname = \"redox_syscall\"\nversion = \"0.5.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2a908a6e00f1fdd0dfd9c0eb08ce85126f6d8bbda50017e74bc4a4b7d4a926a4\"\ndependencies = [\n \"bitflags\",\n]\n\n[[package]]\nname = \"regex\"\nversion = \"1.10.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4219d74c6b67a3654a9fbebc4b419e22126d13d2f3c4a07ee0cb61ff79a79619\"\ndependencies = [\n \"aho-corasick\",\n \"memchr\",\n \"regex-automata\",\n \"regex-syntax\",\n]\n\n[[package]]\nname = \"regex-automata\"\nversion = \"0.4.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"38caf58cc5ef2fed281f89292ef23f6365465ed9a41b7a7754eb4e26496c92df\"\ndependencies = [\n \"aho-corasick\",\n \"memchr\",\n \"regex-syntax\",\n]\n\n[[package]]\nname = \"regex-syntax\"\nversion = \"0.8.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7a66a03ae7c801facd77a29370b4faec201768915ac14a721ba36f20bc9c209b\"\n\n[[package]]\nname = \"reqwest\"\nversion = \"0.12.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f8f4955649ef5c38cc7f9e8aa41761d48fb9677197daea9984dc54f56aad5e63\"\ndependencies = [\n \"base64\",\n \"bytes\",\n \"encoding_rs\",\n \"futures-channel\",\n \"futures-core\",\n \"futures-util\",\n \"h2\",\n \"http\",\n \"http-body\",\n \"http-body-util\",\n \"hyper\",\n \"hyper-rustls\",\n \"hyper-tls\",\n \"hyper-util\",\n \"ipnet\",\n \"js-sys\",\n \"log\",\n \"mime\",\n \"native-tls\",\n \"once_cell\",\n \"percent-encoding\",\n \"pin-project-lite\",\n \"rustls-pemfile\",\n \"serde\",\n \"serde_json\",\n \"serde_urlencoded\",\n \"sync_wrapper\",\n \"system-configuration\",\n \"tokio\",\n \"tokio-native-tls\",\n \"tower-service\",\n \"url\",\n \"wasm-bindgen\",\n \"wasm-bindgen-futures\",\n \"web-sys\",\n \"windows-registry\",\n]\n\n[[package]]\nname = \"rexif\"\nversion = \"0.7.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4027574305c7c8849720de913baad1c6f1d4f524a61a82a69c6670a8f0533f33\"\ndependencies = [\n \"num 0.4.3\",\n]\n\n[[package]]\nname = \"rgb\"\nversion = \"0.8.48\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0f86ae463694029097b846d8f99fd5536740602ae00022c0c50c5600720b2f71\"\ndependencies = [\n \"bytemuck\",\n]\n\n[[package]]\nname = \"ring\"\nversion = \"0.17.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c17fa4cb658e3583423e915b9f3acc01cceaee1860e33d59ebae66adc3a2dc0d\"\ndependencies = [\n \"cc\",\n \"cfg-if\",\n \"getrandom\",\n \"libc\",\n \"spin\",\n \"untrusted\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"rustc-demangle\"\nversion = \"0.1.24\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"719b953e2095829ee67db738b3bfa9fa368c94900df327b3f07fe6e794d2fe1f\"\n\n[[package]]\nname = \"rustface\"\nversion = \"0.1.7\"\nsource = \"git+https://github.com/atomashpolskiy/rustface#fa3d5b5d576c91d1c8a099af381e0f0906a0d3a3\"\ndependencies = [\n \"byteorder\",\n \"num 0.3.1\",\n \"rayon\",\n]\n\n[[package]]\nname = \"rustix\"\nversion = \"0.38.34\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"70dc5ec042f7a43c4a73241207cecc9873a06d45debb38b329f8541d85c2730f\"\ndependencies = [\n \"bitflags\",\n \"errno\",\n \"libc\",\n \"linux-raw-sys\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"rustls\"\nversion = \"0.23.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c58f8c84392efc0a126acce10fa59ff7b3d2ac06ab451a33f2741989b806b044\"\ndependencies = [\n \"once_cell\",\n \"rustls-pki-types\",\n \"rustls-webpki\",\n \"subtle\",\n \"zeroize\",\n]\n\n[[package]]\nname = \"rustls-pemfile\"\nversion = \"2.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"196fe16b00e106300d3e45ecfcb764fa292a535d7326a29a5875c579c7417425\"\ndependencies = [\n \"base64\",\n \"rustls-pki-types\",\n]\n\n[[package]]\nname = \"rustls-pki-types\"\nversion = \"1.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fc0a2ce646f8655401bb81e7927b812614bd5d91dbc968696be50603510fcaf0\"\n\n[[package]]\nname = \"rustls-webpki\"\nversion = \"0.102.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8e6b52d4fda176fd835fdc55a835d4a89b8499cad995885a21149d5ad62f852e\"\ndependencies = [\n \"ring\",\n \"rustls-pki-types\",\n \"untrusted\",\n]\n\n[[package]]\nname = \"ryu\"\nversion = \"1.0.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f3cb5ba0dc43242ce17de99c180e96db90b235b8a9fdc9543c96d2209116bd9f\"\n\n[[package]]\nname = \"same-file\"\nversion = \"1.0.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"93fc1dc3aaa9bfed95e02e6eadabb4baf7e3078b0bd1b4d7b6b0b68378900502\"\ndependencies = [\n \"winapi-util\",\n]\n\n[[package]]\nname = \"schannel\"\nversion = \"0.1.23\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fbc91545643bcf3a0bbb6569265615222618bdf33ce4ffbbd13c4bbd4c093534\"\ndependencies = [\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"scopeguard\"\nversion = \"1.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"94143f37725109f92c262ed2cf5e59bce7498c01bcc1502d7b9afe439a4e9f49\"\n\n[[package]]\nname = \"security-framework\"\nversion = \"2.11.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"897b2245f0b511c87893af39b033e5ca9cce68824c4d7e7630b5a1d339658d02\"\ndependencies = [\n \"bitflags\",\n \"core-foundation\",\n \"core-foundation-sys\",\n \"libc\",\n \"security-framework-sys\",\n]\n\n[[package]]\nname = \"security-framework-sys\"\nversion = \"2.11.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"75da29fe9b9b08fe9d6b22b5b4bcbc75d8db3aa31e639aa56bb62e9d46bfceaf\"\ndependencies = [\n \"core-foundation-sys\",\n \"libc\",\n]\n\n[[package]]\nname = \"serde\"\nversion = \"1.0.208\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cff085d2cb684faa248efb494c39b68e522822ac0de72ccf08109abde717cfb2\"\ndependencies = [\n \"serde_derive\",\n]\n\n[[package]]\nname = \"serde_derive\"\nversion = \"1.0.208\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"24008e81ff7613ed8e5ba0cfaf24e2c2f1e5b8a0495711e44fcd4882fca62bcf\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.75\",\n]\n\n[[package]]\nname = \"serde_json\"\nversion = \"1.0.125\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"83c8e735a073ccf5be70aa8066aa984eaf2fa000db6c8d0100ae605b366d31ed\"\ndependencies = [\n \"itoa\",\n \"memchr\",\n \"ryu\",\n \"serde\",\n]\n\n[[package]]\nname = \"serde_spanned\"\nversion = \"0.6.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"eb5b1b31579f3811bf615c144393417496f152e12ac8b7663bf664f4a815306d\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"serde_urlencoded\"\nversion = \"0.7.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d3491c14715ca2294c4d6a88f15e84739788c1d030eed8c110436aafdaa2f3fd\"\ndependencies = [\n \"form_urlencoded\",\n \"itoa\",\n \"ryu\",\n \"serde\",\n]\n\n[[package]]\nname = \"sha1\"\nversion = \"0.10.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e3bf829a2d51ab4a5ddf1352d8470c140cadc8301b2ae1789db023f01cedd6ba\"\ndependencies = [\n \"cfg-if\",\n \"cpufeatures\",\n \"digest\",\n]\n\n[[package]]\nname = \"sha1_smol\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bbfa15b3dddfee50a0fff136974b3e1bde555604ba463834a7eb7deb6417705d\"\n\n[[package]]\nname = \"sha2\"\nversion = \"0.10.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"793db75ad2bcafc3ffa7c68b215fee268f537982cd901d132f89c6343f3a3dc8\"\ndependencies = [\n \"cfg-if\",\n \"cpufeatures\",\n \"digest\",\n]\n\n[[package]]\nname = \"shlex\"\nversion = \"1.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0fda2ff0d084019ba4d7c6f371c95d8fd75ce3524c3cb8fb653a3023f6323e64\"\n\n[[package]]\nname = \"signal-hook-registry\"\nversion = \"1.4.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a9e9e0b4211b72e7b8b6e85c807d36c212bdb33ea8587f7569562a84df5465b1\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"simd-adler32\"\nversion = \"0.3.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d66dc143e6b11c1eddc06d5c423cfc97062865baf299914ab64caa38182078fe\"\n\n[[package]]\nname = \"similar\"\nversion = \"2.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1de1d4f81173b03af4c0cbed3c898f6bff5b870e4a7f5d6f4057d62a7a4b686e\"\n\n[[package]]\nname = \"slab\"\nversion = \"0.4.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8f92a496fb766b417c996b9c5e57daf2f7ad3b0bebe1ccfca4856390e3d3bb67\"\ndependencies = [\n \"autocfg\",\n]\n\n[[package]]\nname = \"slotmap\"\nversion = \"1.0.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dbff4acf519f630b3a3ddcfaea6c06b42174d9a44bc70c620e9ed1649d58b82a\"\ndependencies = [\n \"version_check\",\n]\n\n[[package]]\nname = \"smallvec\"\nversion = \"0.6.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b97fcaeba89edba30f044a10c6a3cc39df9c3f17d7cd829dd1446cab35f890e0\"\ndependencies = [\n \"maybe-uninit\",\n]\n\n[[package]]\nname = \"smallvec\"\nversion = \"1.13.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3c5e1a9a646d36c3599cd173a41282daf47c44583ad367b8e6837255952e5c67\"\n\n[[package]]\nname = \"socket2\"\nversion = \"0.5.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ce305eb0b4296696835b71df73eb912e0f1ffd2556a501fcede6e0c50349191c\"\ndependencies = [\n \"libc\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"spin\"\nversion = \"0.9.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6980e8d7511241f8acf4aebddbb1ff938df5eebe98691418c4468d0b72a96a67\"\n\n[[package]]\nname = \"stable_deref_trait\"\nversion = \"1.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a8f112729512f8e442d81f95a8a7ddf2b7c6b8a1a6f509a95864142b30cab2d3\"\n\n[[package]]\nname = \"static_assertions\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a2eb9349b6444b326872e140eb1cf5e7c522154d69e7a0ffb0fb81c06b37543f\"\n\n[[package]]\nname = \"strsim\"\nversion = \"0.11.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7da8b5736845d9f2fcb837ea5d9e2628564b3b043a70948a3f0b778838c5fb4f\"\n\n[[package]]\nname = \"subtle\"\nversion = \"2.6.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"13c2bddecc57b384dee18652358fb23172facb8a2c51ccc10d74c157bdea3292\"\n\n[[package]]\nname = \"syn\"\nversion = \"1.0.109\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"72b64191b275b66ffe2469e8af2c1cfe3bafa67b529ead792a6d0160888b4237\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"syn\"\nversion = \"2.0.75\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f6af063034fc1935ede7be0122941bafa9bacb949334d090b77ca98b5817c7d9\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"sync_wrapper\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a7065abeca94b6a8a577f9bd45aa0867a2238b74e8eb67cf10d492bc39351394\"\ndependencies = [\n \"futures-core\",\n]\n\n[[package]]\nname = \"system-configuration\"\nversion = \"0.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"658bc6ee10a9b4fcf576e9b0819d95ec16f4d2c02d39fd83ac1c8789785c4a42\"\ndependencies = [\n \"bitflags\",\n \"core-foundation\",\n \"system-configuration-sys\",\n]\n\n[[package]]\nname = \"system-configuration-sys\"\nversion = \"0.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8e1d1b10ced5ca923a1fcb8d03e96b8d3268065d724548c0211415ff6ac6bac4\"\ndependencies = [\n \"core-foundation-sys\",\n \"libc\",\n]\n\n[[package]]\nname = \"target-features\"\nversion = \"0.1.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c1bbb9f3c5c463a01705937a24fdabc5047929ac764b2d5b9cf681c1f5041ed5\"\n\n[[package]]\nname = \"tempfile\"\nversion = \"3.12.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"04cbcdd0c794ebb0d4cf35e88edd2f7d2c4c3e9a5a6dab322839b321c6a87a64\"\ndependencies = [\n \"cfg-if\",\n \"fastrand\",\n \"once_cell\",\n \"rustix\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"thiserror\"\nversion = \"1.0.63\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c0342370b38b6a11b6cc11d6a805569958d54cfa061a29969c3b5ce2ea405724\"\ndependencies = [\n \"thiserror-impl\",\n]\n\n[[package]]\nname = \"thiserror-impl\"\nversion = \"1.0.63\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a4558b58466b9ad7ca0f102865eccc95938dca1a74a856f2b57b6629050da261\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.75\",\n]\n\n[[package]]\nname = \"thread_local\"\nversion = \"1.1.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8b9ef9bad013ada3808854ceac7b46812a6465ba368859a37e2100283d2d719c\"\ndependencies = [\n \"cfg-if\",\n \"once_cell\",\n]\n\n[[package]]\nname = \"threadpool\"\nversion = \"1.8.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d050e60b33d41c19108b32cea32164033a9013fe3b46cbd4457559bfbf77afaa\"\ndependencies = [\n \"num_cpus\",\n]\n\n[[package]]\nname = \"time\"\nversion = \"0.3.36\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5dfd88e563464686c916c7e46e623e520ddc6d79fa6641390f2e3fa86e83e885\"\ndependencies = [\n \"deranged\",\n \"num-conv\",\n \"powerfmt\",\n \"serde\",\n \"time-core\",\n]\n\n[[package]]\nname = \"time-core\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ef927ca75afb808a4d64dd374f00a2adf8d0fcff8e7b184af886c3c87ec4a3f3\"\n\n[[package]]\nname = \"tinytemplate\"\nversion = \"1.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"be4d6b5f19ff7664e8c98d03e2139cb510db9b0a60b55f8e8709b689d939b6bc\"\ndependencies = [\n \"serde\",\n \"serde_json\",\n]\n\n[[package]]\nname = \"tinyvec\"\nversion = \"1.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"445e881f4f6d382d5f27c034e25eb92edd7c784ceab92a0937db7f2e9471b938\"\ndependencies = [\n \"tinyvec_macros\",\n]\n\n[[package]]\nname = \"tinyvec_macros\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1f3ccbac311fea05f86f61904b462b55fb3df8837a366dfc601a0161d0532f20\"\n\n[[package]]\nname = \"tokio\"\nversion = \"1.39.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9babc99b9923bfa4804bd74722ff02c0381021eafa4db9949217e3be8e84fff5\"\ndependencies = [\n \"backtrace\",\n \"bytes\",\n \"libc\",\n \"mio\",\n \"parking_lot 0.12.3\",\n \"pin-project-lite\",\n \"signal-hook-registry\",\n \"socket2\",\n \"tokio-macros\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"tokio-macros\"\nversion = \"2.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"693d596312e88961bc67d7f1f97af8a70227d9f90c31bba5806eec004978d752\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.75\",\n]\n\n[[package]]\nname = \"tokio-native-tls\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bbae76ab933c85776efabc971569dd6119c580d8f5d448769dec1764bf796ef2\"\ndependencies = [\n \"native-tls\",\n \"tokio\",\n]\n\n[[package]]\nname = \"tokio-rustls\"\nversion = \"0.26.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0c7bc40d0e5a97695bb96e27995cd3a08538541b0a846f65bba7a359f36700d4\"\ndependencies = [\n \"rustls\",\n \"rustls-pki-types\",\n \"tokio\",\n]\n\n[[package]]\nname = \"tokio-util\"\nversion = \"0.7.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9cf6b47b3771c49ac75ad09a6162f53ad4b8088b76ac60e8ec1455b31a189fe1\"\ndependencies = [\n \"bytes\",\n \"futures-core\",\n \"futures-sink\",\n \"pin-project-lite\",\n \"tokio\",\n]\n\n[[package]]\nname = \"toml\"\nversion = \"0.8.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a1ed1f98e3fdc28d6d910e6737ae6ab1a93bf1985935a1193e68f93eeb68d24e\"\ndependencies = [\n \"serde\",\n \"serde_spanned\",\n \"toml_datetime\",\n \"toml_edit\",\n]\n\n[[package]]\nname = \"toml_datetime\"\nversion = \"0.6.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0dd7358ecb8fc2f8d014bf86f6f638ce72ba252a2c3a2572f2a795f1d23efb41\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"toml_edit\"\nversion = \"0.22.20\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"583c44c02ad26b0c3f3066fe629275e50627026c51ac2e595cca4c230ce1ce1d\"\ndependencies = [\n \"indexmap\",\n \"serde\",\n \"serde_spanned\",\n \"toml_datetime\",\n \"winnow\",\n]\n\n[[package]]\nname = \"tower\"\nversion = \"0.4.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b8fa9be0de6cf49e536ce1851f987bd21a43b771b09473c3549a6c853db37c1c\"\ndependencies = [\n \"futures-core\",\n \"futures-util\",\n \"pin-project\",\n \"pin-project-lite\",\n \"tokio\",\n \"tower-layer\",\n \"tower-service\",\n]\n\n[[package]]\nname = \"tower-layer\"\nversion = \"0.3.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"121c2a6cda46980bb0fcd1647ffaf6cd3fc79a013de288782836f6df9c48780e\"\n\n[[package]]\nname = \"tower-service\"\nversion = \"0.3.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8df9b6e13f2d32c91b9bd719c00d1958837bc7dec474d94952798cc8e69eeec3\"\n\n[[package]]\nname = \"tracing\"\nversion = \"0.1.40\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c3523ab5a71916ccf420eebdf5521fcef02141234bbc0b8a49f2fdc4544364ef\"\ndependencies = [\n \"pin-project-lite\",\n \"tracing-core\",\n]\n\n[[package]]\nname = \"tracing-core\"\nversion = \"0.1.32\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c06d3da6113f116aaee68e4d601191614c9053067f9ab7f6edbcb161237daa54\"\ndependencies = [\n \"once_cell\",\n]\n\n[[package]]\nname = \"try-lock\"\nversion = \"0.2.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e421abadd41a4225275504ea4d6566923418b7f05506fbc9c0fe86ba7396114b\"\n\n[[package]]\nname = \"twox-hash\"\nversion = \"1.6.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"97fee6b57c6a41524a810daee9286c02d7752c4253064d0b05472833a438f675\"\ndependencies = [\n \"cfg-if\",\n \"rand 0.8.5\",\n \"static_assertions\",\n]\n\n[[package]]\nname = \"typenum\"\nversion = \"1.17.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"42ff0bf0c66b8238c6f3b578df37d0b7848e55df8577b3f74f92a69acceeb825\"\n\n[[package]]\nname = \"unicase\"\nversion = \"2.7.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f7d2d4dafb69621809a81864c9c1b864479e1235c0dd4e199924b9742439ed89\"\ndependencies = [\n \"version_check\",\n]\n\n[[package]]\nname = \"unicode-bidi\"\nversion = \"0.3.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"08f95100a766bf4f8f28f90d77e0a5461bbdb219042e7679bebe79004fed8d75\"\n\n[[package]]\nname = \"unicode-ident\"\nversion = \"1.0.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3354b9ac3fae1ff6755cb6db53683adb661634f67557942dea4facebec0fee4b\"\n\n[[package]]\nname = \"unicode-normalization\"\nversion = \"0.1.23\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a56d1686db2308d901306f92a263857ef59ea39678a5458e7cb17f01415101f5\"\ndependencies = [\n \"tinyvec\",\n]\n\n[[package]]\nname = \"unicode-width\"\nversion = \"0.1.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0336d538f7abc86d282a4189614dfaa90810dfc2c6f6427eaf88e16311dd225d\"\n\n[[package]]\nname = \"untrusted\"\nversion = \"0.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8ecb6da28b8a351d773b68d5825ac39017e680750f980f3a1a85cd8dd28a47c1\"\n\n[[package]]\nname = \"url\"\nversion = \"2.5.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"22784dbdf76fdde8af1aeda5622b546b422b6fc585325248a2bf9f5e41e94d6c\"\ndependencies = [\n \"form_urlencoded\",\n \"idna\",\n \"percent-encoding\",\n]\n\n[[package]]\nname = \"utf8parse\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"06abde3611657adf66d383f00b093d7faecc7fa57071cce2578660c9f1010821\"\n\n[[package]]\nname = \"uuid\"\nversion = \"1.10.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"81dfa00651efa65069b0b6b651f4aaa31ba9e3c3ce0137aaad053604ee7e0314\"\ndependencies = [\n \"getrandom\",\n \"sha1_smol\",\n]\n\n[[package]]\nname = \"vcpkg\"\nversion = \"0.2.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"accd4ea62f7bb7a82fe23066fb0957d48ef677f6eeb8215f372f52e48bb32426\"\n\n[[package]]\nname = \"version_check\"\nversion = \"0.9.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0b928f33d975fc6ad9f86c8f283853ad26bdd5b10b7f1542aa2fa15e2289105a\"\n\n[[package]]\nname = \"walkdir\"\nversion = \"2.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"29790946404f91d9c5d06f9874efddea1dc06c5efe94541a7d6863108e3a5e4b\"\ndependencies = [\n \"same-file\",\n \"winapi-util\",\n]\n\n[[package]]\nname = \"want\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bfa7760aed19e106de2c7c0b581b509f2f25d3dacaf737cb82ac61bc6d760b0e\"\ndependencies = [\n \"try-lock\",\n]\n\n[[package]]\nname = \"wasi\"\nversion = \"0.11.0+wasi-snapshot-preview1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9c8d87e72b64a3b4db28d11ce29237c246188f4f51057d65a7eab63b7987e423\"\n\n[[package]]\nname = \"wasm-bindgen\"\nversion = \"0.2.93\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a82edfc16a6c469f5f44dc7b571814045d60404b55a0ee849f9bcfa2e63dd9b5\"\ndependencies = [\n \"cfg-if\",\n \"once_cell\",\n \"wasm-bindgen-macro\",\n]\n\n[[package]]\nname = \"wasm-bindgen-backend\"\nversion = \"0.2.93\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9de396da306523044d3302746f1208fa71d7532227f15e347e2d93e4145dd77b\"\ndependencies = [\n \"bumpalo\",\n \"log\",\n \"once_cell\",\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.75\",\n \"wasm-bindgen-shared\",\n]\n\n[[package]]\nname = \"wasm-bindgen-futures\"\nversion = \"0.4.43\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"61e9300f63a621e96ed275155c108eb6f843b6a26d053f122ab69724559dc8ed\"\ndependencies = [\n \"cfg-if\",\n \"js-sys\",\n \"wasm-bindgen\",\n \"web-sys\",\n]\n\n[[package]]\nname = \"wasm-bindgen-macro\"\nversion = \"0.2.93\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"585c4c91a46b072c92e908d99cb1dcdf95c5218eeb6f3bf1efa991ee7a68cccf\"\ndependencies = [\n \"quote\",\n \"wasm-bindgen-macro-support\",\n]\n\n[[package]]\nname = \"wasm-bindgen-macro-support\"\nversion = \"0.2.93\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"afc340c74d9005395cf9dd098506f7f44e38f2b4a21c6aaacf9a105ea5e1e836\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.75\",\n \"wasm-bindgen-backend\",\n \"wasm-bindgen-shared\",\n]\n\n[[package]]\nname = \"wasm-bindgen-shared\"\nversion = \"0.2.93\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c62a0a307cb4a311d3a07867860911ca130c3494e8c2719593806c08bc5d0484\"\n\n[[package]]\nname = \"web-sys\"\nversion = \"0.3.70\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"26fdeaafd9bd129f65e7c031593c24d62186301e0c72c8978fa1678be7d532c0\"\ndependencies = [\n \"js-sys\",\n \"wasm-bindgen\",\n]\n\n[[package]]\nname = \"weezl\"\nversion = \"0.1.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"53a85b86a771b1c87058196170769dd264f66c0782acf1ae6cc51bfd64b39082\"\n\n[[package]]\nname = \"winapi\"\nversion = \"0.3.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5c839a674fcd7a98952e593242ea400abe93992746761e38641405d28b00f419\"\ndependencies = [\n \"winapi-i686-pc-windows-gnu\",\n \"winapi-x86_64-pc-windows-gnu\",\n]\n\n[[package]]\nname = \"winapi-i686-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ac3b87c63620426dd9b991e5ce0329eff545bccbbb34f3be09ff6fb6ab51b7b6\"\n\n[[package]]\nname = \"winapi-util\"\nversion = \"0.1.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cf221c93e13a30d793f7645a0e7762c55d169dbb0a49671918a2319d289b10bb\"\ndependencies = [\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"winapi-x86_64-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"712e227841d057c1ee1cd2fb22fa7e5a5461ae8e48fa2ca79ec42cfc1931183f\"\n\n[[package]]\nname = \"windows-core\"\nversion = \"0.52.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"33ab640c8d7e35bf8ba19b884ba838ceb4fba93a4e8c65a9059d08afcfc683d9\"\ndependencies = [\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"windows-registry\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e400001bb720a623c1c69032f8e3e4cf09984deec740f007dd2b03ec864804b0\"\ndependencies = [\n \"windows-result\",\n \"windows-strings\",\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"windows-result\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1d1043d8214f791817bab27572aaa8af63732e11bf84aa21a45a78d6c317ae0e\"\ndependencies = [\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"windows-strings\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4cd9b125c486025df0eabcb585e62173c6c9eddcec5d117d3b6e8c30e2ee4d10\"\ndependencies = [\n \"windows-result\",\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.48.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"677d2418bec65e3338edb076e806bc1ec15693c5d0104683f2efe857f61056a9\"\ndependencies = [\n \"windows-targets 0.48.5\",\n]\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.52.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"282be5f36a8ce781fad8c8ae18fa3f9beff57ec1b52cb3de0789201425d9a33d\"\ndependencies = [\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.59.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1e38bc4d79ed67fd075bcc251a1c39b32a1776bbe92e5bef1f0bf1f8c531853b\"\ndependencies = [\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"windows-targets\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9a2fa6e2155d7247be68c096456083145c183cbbbc2764150dda45a87197940c\"\ndependencies = [\n \"windows_aarch64_gnullvm 0.48.5\",\n \"windows_aarch64_msvc 0.48.5\",\n \"windows_i686_gnu 0.48.5\",\n \"windows_i686_msvc 0.48.5\",\n \"windows_x86_64_gnu 0.48.5\",\n \"windows_x86_64_gnullvm 0.48.5\",\n \"windows_x86_64_msvc 0.48.5\",\n]\n\n[[package]]\nname = \"windows-targets\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9b724f72796e036ab90c1021d4780d4d3d648aca59e491e6b98e725b84e99973\"\ndependencies = [\n \"windows_aarch64_gnullvm 0.52.6\",\n \"windows_aarch64_msvc 0.52.6\",\n \"windows_i686_gnu 0.52.6\",\n \"windows_i686_gnullvm\",\n \"windows_i686_msvc 0.52.6\",\n \"windows_x86_64_gnu 0.52.6\",\n \"windows_x86_64_gnullvm 0.52.6\",\n \"windows_x86_64_msvc 0.52.6\",\n]\n\n[[package]]\nname = \"windows_aarch64_gnullvm\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2b38e32f0abccf9987a4e3079dfb67dcd799fb61361e53e2882c3cbaf0d905d8\"\n\n[[package]]\nname = \"windows_aarch64_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"32a4622180e7a0ec044bb555404c800bc9fd9ec262ec147edd5989ccd0c02cd3\"\n\n[[package]]\nname = \"windows_aarch64_msvc\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dc35310971f3b2dbbf3f0690a219f40e2d9afcf64f9ab7cc1be722937c26b4bc\"\n\n[[package]]\nname = \"windows_aarch64_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"09ec2a7bb152e2252b53fa7803150007879548bc709c039df7627cabbd05d469\"\n\n[[package]]\nname = \"windows_i686_gnu\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a75915e7def60c94dcef72200b9a8e58e5091744960da64ec734a6c6e9b3743e\"\n\n[[package]]\nname = \"windows_i686_gnu\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8e9b5ad5ab802e97eb8e295ac6720e509ee4c243f69d781394014ebfe8bbfa0b\"\n\n[[package]]\nname = \"windows_i686_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0eee52d38c090b3caa76c563b86c3a4bd71ef1a819287c19d586d7334ae8ed66\"\n\n[[package]]\nname = \"windows_i686_msvc\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8f55c233f70c4b27f66c523580f78f1004e8b5a8b659e05a4eb49d4166cca406\"\n\n[[package]]\nname = \"windows_i686_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"240948bc05c5e7c6dabba28bf89d89ffce3e303022809e73deaefe4f6ec56c66\"\n\n[[package]]\nname = \"windows_x86_64_gnu\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"53d40abd2583d23e4718fddf1ebec84dbff8381c07cae67ff7768bbf19c6718e\"\n\n[[package]]\nname = \"windows_x86_64_gnu\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"147a5c80aabfbf0c7d901cb5895d1de30ef2907eb21fbbab29ca94c5b08b1a78\"\n\n[[package]]\nname = \"windows_x86_64_gnullvm\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0b7b52767868a23d5bab768e390dc5f5c55825b6d30b86c844ff2dc7414044cc\"\n\n[[package]]\nname = \"windows_x86_64_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"24d5b23dc417412679681396f2b49f3de8c1473deb516bd34410872eff51ed0d\"\n\n[[package]]\nname = \"windows_x86_64_msvc\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ed94fce61571a4006852b7389a063ab983c02eb1bb37b47f8272ce92d06d9538\"\n\n[[package]]\nname = \"windows_x86_64_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"589f6da84c646204747d1270a2a5661ea66ed1cced2631d546fdfb155959f9ec\"\n\n[[package]]\nname = \"winnow\"\nversion = \"0.6.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"68a9bda4691f099d435ad181000724da8e5899daa10713c2d432552b9ccd3a6f\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"zerocopy\"\nversion = \"0.7.35\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1b9b4fd18abc82b8136838da5d50bae7bdea537c574d8dc1a34ed098d6c166f0\"\ndependencies = [\n \"byteorder\",\n \"zerocopy-derive\",\n]\n\n[[package]]\nname = \"zerocopy-derive\"\nversion = \"0.7.35\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fa4f8080344d4671fb4e831a13ad1e68092748387dfc4f55e356242fae12ce3e\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.75\",\n]\n\n[[package]]\nname = \"zeroize\"\nversion = \"1.8.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ced3678a2879b30306d323f4542626697a464a97c0a07c9aebf7ebca65cd4dde\"\ndependencies = [\n \"zeroize_derive\",\n]\n\n[[package]]\nname = \"zeroize_derive\"\nversion = \"1.4.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ce36e65b0d2999d2aafac989fb249189a141aee1f53c612c1f37d72631959f69\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.75\",\n]\n\n[[package]]\nname = \"zip\"\nversion = \"2.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dc5e4288ea4057ae23afc69a4472434a87a2495cafce6632fd1c4ec9f5cf3494\"\ndependencies = [\n \"aes\",\n \"arbitrary\",\n \"bzip2\",\n \"constant_time_eq 0.3.0\",\n \"crc32fast\",\n \"crossbeam-utils\",\n \"deflate64\",\n \"displaydoc\",\n \"flate2\",\n \"hmac\",\n \"indexmap\",\n \"lzma-rs\",\n \"memchr\",\n \"pbkdf2\",\n \"rand 0.8.5\",\n \"sha1\",\n \"thiserror\",\n \"time\",\n \"zeroize\",\n \"zopfli\",\n \"zstd\",\n]\n\n[[package]]\nname = \"zopfli\"\nversion = \"0.8.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e5019f391bac5cf252e93bbcc53d039ffd62c7bfb7c150414d61369afe57e946\"\ndependencies = [\n \"bumpalo\",\n \"crc32fast\",\n \"lockfree-object-pool\",\n \"log\",\n \"once_cell\",\n \"simd-adler32\",\n]\n\n[[package]]\nname = \"zstd\"\nversion = \"0.13.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fcf2b778a664581e31e389454a7072dab1647606d44f7feea22cd5abb9c9f3f9\"\ndependencies = [\n \"zstd-safe\",\n]\n\n[[package]]\nname = \"zstd-safe\"\nversion = \"7.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"54a3ab4db68cea366acc5c897c7b4d4d1b8994a9cd6e6f841f8964566a419059\"\ndependencies = [\n \"zstd-sys\",\n]\n\n[[package]]\nname = \"zstd-sys\"\nversion = \"2.0.13+zstd.1.5.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"38ff0f21cfee8f97d94cef41359e0c89aa6113028ab0291aa8ca0038995a95aa\"\ndependencies = [\n \"cc\",\n \"pkg-config\",\n]\n\n[[package]]\nname = \"zune-bmp\"\nversion = \"0.5.0-rc4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"42da113b25df89826a7a8a026bccbaeca252e0e21e6cddbd1caabc1ca2bd948d\"\ndependencies = [\n \"log\",\n \"zune-core\",\n]\n\n[[package]]\nname = \"zune-core\"\nversion = \"0.5.0-rc2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0fa5491574238487afaf76a17d1907b47eaace69e97720b8486d584dfca013dc\"\n"
        },
        {
          "name": "Cargo.toml",
          "type": "blob",
          "size": 0.6728515625,
          "content": "[workspace]\nmembers = [\n    \"imageflow_helpers\",\n    \"imageflow_http_helpers\",\n    \"imageflow_types\",\n    \"imageflow_riapi\",\n    \"imageflow_core\",\n    \"imageflow_abi\",\n    \"imageflow\",\n    \"imageflow_tool\",\n    \"c_components\",\n#    \"c_components/tests\",\n]\nresolver = \"2\"\n\n[profile.release]\ndebug = true\nsplit-debuginfo = \"packed\"\n\n# RIAPI Tests take 600ms each at 0, 200ms each at 1, 36ms each at 2, 26ms each at 3\n[profile.test]\nopt-level = 2\n\n[patch.crates-io]\nlibwebp-sys = { git = \"https://github.com/lilith/libwebp-sys\" }\nlibpng-sys = { git = \"https://github.com/lilith/rust-libpng-sys\" }\n\n#bennch with cpu native\n[profile.bench]\n\n\n# [build]\n# rustflags = [\"-C\", \"target-cpu=native\"]\n"
        },
        {
          "name": "Cross.toml",
          "type": "blob",
          "size": 0.06640625,
          "content": "[build]\npre-build = [\"git config --system --add safe.directory '*'\"]"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 33.7099609375,
          "content": "                    GNU AFFERO GENERAL PUBLIC LICENSE\n                       Version 3, 19 November 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU Affero General Public License is a free, copyleft license for\nsoftware and other kinds of works, specifically designed to ensure\ncooperation with the community in the case of network server software.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nour General Public Licenses are intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  Developers that use our General Public Licenses protect your rights\nwith two steps: (1) assert copyright on the software, and (2) offer\nyou this License which gives you legal permission to copy, distribute\nand/or modify the software.\n\n  A secondary benefit of defending all users' freedom is that\nimprovements made in alternate versions of the program, if they\nreceive widespread use, become available for other developers to\nincorporate.  Many developers of free software are heartened and\nencouraged by the resulting cooperation.  However, in the case of\nsoftware used on network servers, this result may fail to come about.\nThe GNU General Public License permits making a modified version and\nletting the public access it on a server without ever releasing its\nsource code to the public.\n\n  The GNU Affero General Public License is designed specifically to\nensure that, in such cases, the modified source code becomes available\nto the community.  It requires the operator of a network server to\nprovide the source code of the modified version running there to the\nusers of that server.  Therefore, public use of a modified version, on\na publicly accessible server, gives the public access to the source\ncode of the modified version.\n\n  An older license, called the Affero General Public License and\npublished by Affero, was designed to accomplish similar goals.  This is\na different license, not a version of the Affero GPL, but Affero has\nreleased a new version of the Affero GPL which permits relicensing under\nthis license.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU Affero General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Remote Network Interaction; Use with the GNU General Public License.\n\n  Notwithstanding any other provision of this License, if you modify the\nProgram, your modified version must prominently offer all users\ninteracting with it remotely through a computer network (if your version\nsupports such interaction) an opportunity to receive the Corresponding\nSource of your version by providing access to the Corresponding Source\nfrom a network server at no charge, through some standard or customary\nmeans of facilitating copying of software.  This Corresponding Source\nshall include the Corresponding Source for any work covered by version 3\nof the GNU General Public License that is incorporated pursuant to the\nfollowing paragraph.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the work with which it is combined will remain governed by version\n3 of the GNU General Public License.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU Affero General Public License from time to time.  Such new versions\nwill be similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU Affero General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU Affero General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU Affero General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Affero General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Affero General Public License for more details.\n\n    You should have received a copy of the GNU Affero General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If your software can interact with users remotely through a computer\nnetwork, you should also make sure that it provides a way for users to\nget its source.  For example, if your program is a web application, its\ninterface could display a \"Source\" link that leads users to an archive\nof the code.  There are many ways you could offer source, and different\nsolutions will be better for different programs; see section 13 for the\nspecific requirements.\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU AGPL, see\n<http://www.gnu.org/licenses/>."
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 16.03515625,
          "content": "## ![imageflow](https://www.imageflow.io/images/imageflow.svg) optimal images at incredible speeds\n\n[![tests](https://github.com/imazen/imageflow/workflows/Test/badge.svg?branch=main)](https://github.com/imazen/imageflow/actions?query=workflow%3ATest)  [![state: release candidate](https://img.shields.io/badge/state-release%E2%80%93candidate-yellow.svg)](#flaws)\n\n[![Docker Pulls](https://img.shields.io/docker/pulls/imazen/imageflow_tool.svg)](https://hub.docker.com/r/imazen/imageflow_tool/)\n[![view releases](https://img.shields.io/badge/-download%20binaries%20for%20windows,%20mac,%20or%20linux-green.svg)](https://github.com/imazen/imageflow/releases) [![license: Choose AGPLv3 or Commercial](https://img.shields.io/badge/license-Choose%20AGPLv3%20or%20Commercial-green.svg)](https://imageresizing.net/pricing)\n\n\n[Download](https://github.com/imazen/imageflow/releases) blazing fast and [safer](https://cve.mitre.org/cgi-bin/cvekey.cgi?keyword=imagemagick) tools for a modern image workflow.\n\n\n* **`imageflow_tool`** is a command-line tool for experimenting, running batch jobs, JSON jobs,\nor when you want process isolation. Up to 17x faster than ImageMagick. Also produces smaller files at higher quality.\n* **`libimageflow`** is for direct (in-process) use from *your* programming language. See our [**Node bindings**](https://github.com/imazen/imageflow-node),  [**Go bindings**](https://github.com/imazen/imageflow-go), [**Scala bindings**](https://github.com/Dealermade/imageflow-scala), [**Elixir bindings**](https://github.com/naps62/imageflow_ex), or  [**.NET bindings**](https://github.com/imazen/imageflow-dotnet). If we don't already have bindings for your language, consider spending a day to add them. Imageflow has a simple\n  C-compatible ABI, of which only 4 methods are needed to implement bindings. \n* **[Imageflow.Server](https://github.com/imazen/imageflow-dotnet-server)** is cross-platform and can manipulate images in-flight (e.g.`/bucket/img.jpg?w=200`) for direct use from\nHTML. Source images can reside in blob storage, on another server, or on the filesystem. It's a production ready server with excellent hybrid disk caching, support for Azure and Amazon blob storage, and can be easily customized. You can deploy it easily via Docker, on a VM, or via any cloud host. It's also backwards compatible with the ImageResizer API - which is useful, as ImageResizer as been integrated into more than a thousand different CMSes and applications in the last decade.\n\n**[Open an issue](https://github.com/imazen/imageflow/issues/new) to share ideas, feedback, or ask questions. We believe in feedback-driven design, and streamlining real-world usage is the fastest way to a great product.**\n\n[Querystring API Documentation](https://docs.imageflow.io/querystring/introduction.html)\n\n[JSON API Documentation](https://docs.imageflow.io/json/introduction.html) \n\nlibimageflow and  imageflow_tool are available as\n[self-contained binaries](https://github.com/imazen/imageflow/releases) for Windows, Ubuntu, and Mac. We also offer [Docker images](https://hub.docker.com/r/imazen/imageflow_tool/) for Linux (where glibc and OpenSSL are required). \n\n[We thank our backers on Kickstarter](https://www.kickstarter.com/projects/njones/imageflow-respect-the-pixels-a-secure-alt-to-image/posts/1616122)\nand [the many supporters of ImageResizer](https://imageresizing.net) for making this project a reality.\nVisit [Imageresizing.net](https://imageresizing.net/pricing) if you need an AGPLv3 exception for commercial use.\n\n\n## Start with imageflow_tool (recommended)\n\n`imageflow_tool examples --generate` - creates an *examples* directory with JSON jobs and invocation scripts.\n\nYou can use command strings that are compatible with [ImageResizer 4 querystrings](https://imageresizing.net/docs/basics):\n\n`imageflow_tool v1/querystring --in source.jpg  --out thumb.jpg --command \"width=50&height=50&mode=crop&format=jpg\" `\n\nOr submit a JSON job file. JSON jobs can have multiple inputs and outputs, and can represent any kind of operation graph.\n\nThe following generates multiple sizes of an image from an example job file:\n\n```\nimageflow_tool v1/build --json examples/export_4_sizes/export_4_sizes.json\n        --in waterhouse.jpg\n        --out 1 waterhouse_w1600.jpg\n              2 waterhouse_w1200.jpg\n              3 waterhouse_w800.jpg\n              4 waterhouse_w400.jpg\n        --response operation_result.json\n```\n\nBy default, imageflow_tool prints a JSON response to stdout. You write this to disk with `--response`.\n\n`--debug-package` will create a .zip file to reproduce problematic behavior with both `v1/build` and `v1/querystring`. Please submit bug reports; we try to make it easy.\n\n## Using Imageflow.Server for dynamic imaging\n\nNOTE: imageflow_server has been removed as the underlying web framework (iron) is abandoned and no longer secure. For the last few years we have suggested moving to the production-ready [Imageflow.Server product](https://github.com/imazen/imageflow-dotnet-server), which also offers docker deployment (but we suggest your own dockerfile to permit configuration)\n\nNow you can edit images from HTML... and use srcset without headache.\n\n```\n<img src=\"http://localhost:39876/demo_images/u3.jpg?w=300\" />\n\n<img src=\"\" srcset=\"    http://localhost:39876/demo_images/u3.jpg?w=300 300w\n                        http://localhost:39876/demo_images/u3.jpg?w=800 800w\n                        http://localhost:39876/demo_images/u3.jpg?w=1600 1600w\" />\n\n```\n\n![](https://www.imageflow.io/images/imageflow-responsive.svg) ![](https://www.imageflow.io/images/edit-url.gif)\n\n### Beyond the demo\n\nYou'll want to mount various image source locations to prefixes. The `--mount` command parses a colon (`:`) delimited list of arguments. The first is the prefix you'll use in the URL (like `http://localhost:39876/prefix/`. The second is the engine name. Remaining arguments are sent to the engine.\n\n#### Examples\n\n* `--mount \"/img/:ir4_local:C:\\inetpub\\wwwroot\\images\"`\n* `--mount \"/proxyimg/:ir4_http:https:://myotherserver.com/imagefolder/\"` (note the double escaping of the colon)\n* `--mount \"/cachedstaticproxy/:permacache_proxy:https:://othersite.com\"`\n* `--mount \"/githubproxy/:permacache_proxy_guess_content_types:https:://raw.github.com/because/it/doesnt/support/content/types\"`\n* `--mount \"/static/\":static:./assets\"`\n\n\n![](https://www.imageflow.io/images/imageflow-server-advanced.svg)\n\n## Using libimageflow from your language\n\n![](https://www.imageflow.io/images/libimageflow-direct.svg)\n\n* .NET Standard bindings can be found at https://github.com/imazen/imageflow-dotnet\n* Node bindings available  at https://github.com/imazen/imageflow-node\n* Ruby - Basic bindings can be found in [bindings/ruby/](https://github.com/imazen/imageflow/tree/main/bindings/ruby)\n* C and C++ interface is stable - use [bindings/headers/imageflow_default.h](https://github.com/imazen/imageflow/blob/main/bindings/headers/imageflow_default.h) or one of the many alternate conventions provided with each release.\n* Rust - Imageflow is written in Rust, so you can use the `imageflow_core` crate.\n* other languages - Use an [FFI](https://en.wikipedia.org/wiki/Foreign_function_interface) binding-generation tool for your language, and feed it whichever [header file it likes best](https://github.com/imazen/imageflow/tree/main/bindings/headers).\n\nYou also may find that `imageflow_tool` is quite fast enough for your needs.\n\n### Crates within this project\n\n* imageflow_abi - The stable API of libimageflow/imageflow.dll.\n  Headers for libimageflow are located in `bindings/headers`\n* imageflow_tool - The command-line tool\n* imageflow_server - The HTTP server\n* c_components - A rust crate containing C source\n* c_components/tests - Tests for the C components\n* imageflow_types - Shared types used by most crates, with JSON serialization\n* imageflow_helpers - Common helper functions and utilities\n* imageflow_riapi - RIAPI and ImageResizer4 compatibility parsing/layout\n* imageflow_core - The main library and execution engine\n\n\n### Known flaws and missing features (as of May 2020)\n\n#### Flaws\n\n- [ ] imageflow_server doesn't expose the JSON API yet.\n- [ ] No fuzz testing or third-party auditing yet.\n\n#### Missing features\n\n- [ ] Blurring.\n\n#### Delayed features\n\n- [ ] Job cost prediction (delayed - no interest from community)\n\n# Building from Source without Docker\n\nYou'll need more than just Rust to compile Imageflow, as it has a couple C dependencies.\n\n1. **Install platform-specific prerequisites (find the right section below).**\n2. Clone and cd into this repository\n   E.g., `git clone git@github.com:imazen/imageflow.git && cd imageflow`)\n\nIf you are using `bash` on any platform, you should be able to use `build.sh`\n* `./build.sh clean` - to clean\n* `./build.sh test` - run all tests\n* `./build.sh debug` - generate slow debug binaries\n* `./build.sh release` - generate release binaries\n* `./build.sh install` - install release binaries to `/usr/local` (must run `./build.sh release first)\n* `./build.sh uninstall` - uninstall release binaries\n\n`build.sh` places binaries in the `./artifacts/ directory`\n\nIf you are on Windows, only run build commands in the window created by `win_enter_env.bat`.\n\nYou can also build using `cargo` directly, although this will place binaries in `./target/release` instead.\n    * `cargo test --all` to test Imageflow in debug (slooow) mode\n    * `cargo build --package imageflow_abi --release` to compile `libimageflow/imageflow.dll`\n    * `cargo build --package imageflow_tool --release` to compile `imageflow_tool(.exe)`\n    * `cargo build --all --release` to compile everything in release mode\n    * `cargo doc --no-deps --all --release` to generate documentation.\n\n\n## Building from Source with Docker\nNote that we no longer use docker containers for CI, so this method is outdated.\n1. [Install Docker](https://docs.docker.com/install/)\n2. Run from a bash session ([Docker + Windows WSL](https://nickjanetakis.com/blog/setting-up-docker-for-windows-and-wsl-to-work-flawlessly), macOS, or linux)\n3. ```bash\n   git clone git@github.com:imazen/imageflow.git\n   cd imageflow\n   ./build_via_docker.sh debug\n   ```\n\nThis will create caches within `~/.docker_imageflow_caches` specific to the docker image used. Instances will be ephemeral; the only state will be in the caches.\n\nThe [official Dockerfiles](https://github.com/imazen/imageflow/tree/main/docker) are also a great place to get more detailed environment setup steps, as we don't list steps for setting up:\n* Valgrind (common versions break openssl; you may need to build from source)\n* Code coverage\n* Bindings.\n\n## Linux Pre-requisites\n\n(tested on Ubuntu 20.04 and 22.04.)\n\n```bash\n#Install Rust by running\n`curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain stable`\n#Ensure build tools are installed (git, curl, wget, gcc, g++, nasm, pkg-config, openssl, ca-certificates)\n`sudo apt-get install git wget curl build-essential pkg-config libssl-dev libpng-dev nasm `\n```\n\n## Mac OS Pre-requisites\n\n1. Install [XCode Command-Line Tools](http://railsapps.github.io/xcode-command-line-tools.html) if you haven't already\n2. Install [Homebrew](https://brew.sh/) if you haven't already.\n3. Install nasm, pkg-config, and wget\n   `brew install nasm pkg-config wget`\n4. Install [Rust](https://www.rust-lang.org/en-US/install.html)\n\n\n## Windows WSL (Ubuntu) Pre-requisites\n\n1. Install Ubuntu from the Windows Store\n2. Run Ubuntu 22.04 and create your username/password\n3. `sudo apt-get update` to update available packages.\n4. Install Rust by running\n  `curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain stable`\n5. Ensure build tools are installed (git, curl, wget, gcc, g++, nasm, pkg-config, openssl, ca-certificates)\n    `sudo apt-get install git wget curl build-essential pkg-config libssl-dev libpng-dev nasm `\n6. (optional) To use a graphical text editor, you'll need to download imageflow to a \"Windows\" directory, then map it to a location in Ubuntu.\n   For example, if you cloned imageflow to Documents/imageflow, you would run:\n   `ln -s /mnt/c/Users/[YourWindowsUserName]/Documents/imageflow ~/win_imageflow`\n7. Close and re-open Ubuntu\n\n\n## Windows 10 Pre-requisites\n\n1. Install Visual Studio 2017 Build Tools ([separately](https://www.visualstudio.com/thank-you-downloading-visual-studio/?sku=BuildTools&rel=15) or as a VS component)\n2. Install [Git 64-bit](https://git-scm.com/download/win).\n3. `Run As Administrator` the [NASM 64-bit](https://www.nasm.us/pub/nasm/releasebuilds/2.14.02/win64/nasm-2.14.02-installer-x64.exe) installer - it will not prompt.\n4. Install [Rust 64-bit](https://static.rust-lang.org/rustup/dist/x86_64-pc-windows-msvc/rustup-init.exe) if you want 64-bit Imageflow or [Rust 32-bit](https://static.rust-lang.org/rustup/dist/i686-pc-windows-msvc/rustup-init.exe) if you don't.\nInstall toolchain `stable` as the default, and confirm adding it to `PATH`.\n5. Open the command line and switch to this repository's root directory\n5. Edit `ci/wintools/SETUP_PATH.bat` to ensure that rust/cargo, nasm, git, and Git/mingw64/bin are all in `%PATH%`.\n7. Run `win_enter_env.bat` to start a sub-shell (edit it if you want a 32-bit build)\n8. All build commands should be run in the sub-shell. Run `cmd.exe /c \"ci\\wintools\\win_verify_tools.bat\"` to check tools are present.\n\n## How does one learn image processing for the web?\n\nFirst, [read High Performance Images](http://shop.oreilly.com/product/0636920039730.do) for context.\n\nThere are not many great textbooks on the subject. Here are some from my personal bookshelf. Between them (and Wikipedia) I was able to put together about 60% of the knowledge I needed; the rest I found by reading the source code to [many popular image processing libraries](https://github.com/lilith/imaging-wiki?files=1).\n\nI would start by reading [Principles of Digital Image Processing: Core Algorithms](http://www.amazon.com/gp/product/1848001940?psc=1&redirect=true&ref_=oh_aui_search_detailpage) front-to-back, then [Digital Image Warping](http://www.amazon.com/gp/product/0818689447?psc=1&redirect=true&ref_=oh_aui_search_detailpage).  Wikipedia is also a useful reference, although the relevant pages are not linked or categorized together - use specific search terms, like [\"bilinear interpolation\"](https://en.wikipedia.org/wiki/Bilinear_interpolation) and [\"Lab color space\"](https://en.wikipedia.org/wiki/Lab_color_space).\n\n* [Digital Image Warping](http://www.amazon.com/gp/product/0818689447?psc=1&redirect=true&ref_=oh_aui_search_detailpage)\n* [Computer Graphics: Principles and Practice in C (2nd Edition)](http://www.amazon.com/gp/product/0201848406?psc=1&redirect=true&ref_=oh_aui_search_detailpage)\n* [Principles of Digital Image Processing: Fundamental Techniques](http://www.amazon.com/gp/product/1848001908?psc=1&redirect=true&ref_=oh_aui_search_detailpage)\n* [Principles of Digital Image Processing: Core Algorithms](http://www.amazon.com/gp/product/1848001940?psc=1&redirect=true&ref_=oh_aui_search_detailpage)\n* [Principles of Digital Image Processing: Advanced Methods](http://www.amazon.com/gp/product/1848829183?psc=1&redirect=true&ref_=oh_aui_search_detailpage)\n\nI have found the source code for OpenCV, LibGD, FreeImage, Libvips, Pixman, Cairo, ImageMagick, stb_image, Skia, and FrameWave is very useful for understanding real-world implementations and considerations. Most textbooks assume an infinite plane, ignore off-by-one errors, floating-point limitations, color space accuracy, and operational symmetry within a bounded region. I cannot recommend any textbook  as an accurate reference, only as a conceptual starting point. [I made some notes regarding issues to be aware of when creating an imaging library](https://github.com/imazen/Graphics-vNext/blob/master/aware.md).\n\nAlso, keep in mind that computer vision is very different from image creation. In computer vision, resampling accuracy matters very little, for example. But in image creation, you are serving images to photographers, people with far keener visual perception than the average developer. The images produced will be rendered side-by-side with other CSS and images, and the least significant bit of inaccuracy is quite visible. You are competing with Lightroom; with offline tools that produce visually perfect results. End-user software will be discarded if photographers feel it is corrupting their work.\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.720703125,
          "content": "# Security Policy\n\n## Supported Versions\n\nUse this section to tell people about which versions of your project are\ncurrently being supported with security updates.\n\n| Version | Supported          |\n| ------- | ------------------ |\n| 2.0.x   | :white_check_mark: |\n| < 2.0   | :x:                |\n\n## Reporting a Vulnerability\n\nIf you discover a security vulnerability or a bug that may be usable for reducing the performance of Imageflow or Imageflow Server, please email lilith@imazen.io or use the [Report a Vulnerability button on Github](https://github.com/imazen/imageflow/security/advisories?state=Triage). Please refrain from posting anything publicly until we have had a chance to verify the issue and make an update available. \n"
        },
        {
          "name": "bindings",
          "type": "tree",
          "content": null
        },
        {
          "name": "build.sh",
          "type": "blob",
          "size": 18.0322265625,
          "content": "#!/bin/bash\nset -e #Exit on failure.\n\n# Change directory to root (call this in a subshell if you have a problem with that)\ncd \"$( dirname \"${BASH_SOURCE[0]}\" )\"\n\nhas_shellcheck() {\n\tcommand -v shellcheck >/dev/null 2>&1\n}\nif has_shellcheck; then\n\tshellcheck ./*.sh\n\tshellcheck ./ci/*.sh\n\tshellcheck ./imageflow_*/*.sh\n\tshellcheck ./c_components/*.sh\n\tshellcheck ./ci/cloud/*.sh\n\tshellcheck ./ci/cloud/*/*.sh\n\tshellcheck ./ci/nixtools/*.sh\n\t# wait until v0.44 for this; global ignores are needed shellcheck ./imageflow_tool/result_testing/*.sh\n\nfi\n\n# You're going to need:\n# clang or gcc 4.8, 4.9, or 5.4\n# Rust beta\n# nasm\n# OpenSSL (on linux)\n# DSSIM\n# lcov (if coverage is used)\n# valgrind (if valgrind is used)\n\n# Check prerequisites\ncommand -v zip >/dev/null 2>&1 || { echo -e \"'zip' is required, but missing. Try: apt-get install zip\\nAborting.\" >&2; exit 1; }\ncommand -v cargo >/dev/null 2>&1  || { echo -e \"'cargo' is required, but missing. Try: curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain beta\\nAborting.\" >&2; exit 1; }\ncommand -v dssim >/dev/null 2>&1  || { echo -e \"'dssim' is required, but missing. Try: cargo install dssim\\nAborting.\" >&2; exit 1; }\ncommand -v nasm >/dev/null 2>&1 || { echo -e \"'nasm' is required, but missing. Try: apt-get install nasm\\nAborting.\" >&2; exit 1; }\n\n# We didn't automatically check for a c compiler, OpenSSL, valgrind, lcov\n\nexport IMAGEFLOW_BUILD_OVERRIDE=\"${IMAGEFLOW_BUILD_OVERRIDE:-$1}\"\n\nif [[ -n \"$IMAGEFLOW_BUILD_OVERRIDE\" ]]; then\n\tprintf \"Applying IMAGEFLOW_BUILD_OVERRIDE %s\\n\" \"$IMAGEFLOW_BUILD_OVERRIDE\"\n\t#Change the defaults when we're invoking an override\n\texport BUILD_QUIETER=\"${BUILD_QUIETER:-True}\"\n\texport REBUILD_C=\"False\"\n\texport TEST_C=\"False\"\n\texport BUILD_RELEASE=\"False\"\n\texport BUILD_DEBUG=\"False\"\n\texport CLEAN_RUST_TARGETS=\"False\"\nfi\n\nif [[ \"$IMAGEFLOW_BUILD_OVERRIDE\" == 'cleanup' ]]; then\n\techo \"Cleaning up temporary files created by running tests\"\n\t## Remove dotfiles\n\tfind . -type f -name '*.dot' -exec rm {} +\n\tfind . -type f -name '*.dot.png' -exec rm {} +\n\t## Remove frames\n\tfind . -type d -name node_frames -exec rm -rf {} \\;\n\n\t## Remove frames\n\tfind . -type d -name self_tests -exec rm -rf {} \\;\n\n\t# Remove cargo fmt tempfiles\n\tfind . -type f -name '*.rs.bk' -exec rm {} +\n\n\t# Remove disassembly files in c_components\n\tfind . -type f -name '*.c.s' -exec rm {} +\n\texit 0\nfi\n\n\n# old, unused\nrm -rf c_components/build\n\nif [[ \"$IMAGEFLOW_BUILD_OVERRIDE\" == 'purge' ]]; then\n\techo \"Purging artifacts and temporary files\"\n\trm -rf artifacts\n\trm -rf build\n\trm -rf c_components/build\n\trm -rf target\n\trm libimageflow.so\n\trm -rf node_frames\n\trm c_components/tests/visuals/compare*.png\n\trm c_components/tests/visuals/*.html\n\trm c_components/tests/visuals/*~\n\trm c_components/cacert.pem\n\trm -rf bin\n\trm ./*.{png,jpg,jpeg,gif,user}\n\trm ./*~\n\n\texit 0\nfi\n\nif [[ \"$IMAGEFLOW_BUILD_OVERRIDE\" == 'c' ]]; then\n\techo \"Rebuilding c_components\"\n    (cd c_components\n        cargo build --release\n    )\n\texit 0\nfi\n\nif [[ \"$IMAGEFLOW_BUILD_OVERRIDE\" == 'codestats' ]]; then\n\techo \"Check on unsafe code statistics\"\n\t(\n\t\t(cd imageflow_core && cargo count --unsafe-statistics)\n\t\t(cd imageflow_abi && cargo count --unsafe-statistics)\n\t\t(cd imageflow_tool && cargo count --unsafe-statistics)\n\t\t(cd imageflow_riapi && cargo count --unsafe-statistics)\n\t\t(cd imageflow_helpers && cargo count --unsafe-statistics)\n\t\t(cd imageflow_types && cargo count --unsafe-statistics)\n\t\t(cd c_components/lib && cargo count --unsafe-statistics)\n\t)\n\texit 0\nfi\n\n# Set INSTALL_BASE to customize install location\nexport INSTALL_BASE=\"${INSTALL_BASE:-/usr/local}\"\n\nif [[ \"$IMAGEFLOW_BUILD_OVERRIDE\" == 'uninstall' ]]; then\n    ./ci/packaging_extras/uninstall.sh\n\texit 0;\nfi\n\nif [[ \"$IMAGEFLOW_BUILD_OVERRIDE\" == 'install' ]]; then\n    \"./artifacts/staging/install.sh\" || echo You may need sudo, or you may need to run this first: ./build.sh release\n\texit 0;\nfi\n\n\nif [[ \"$IMAGEFLOW_BUILD_OVERRIDE\" == *'clean'* ]]; then\n\texport CLEAN_RUST_TARGETS=True\n\texport REBUILD_C=True\n\tIMAGEFLOW_BUILD_OVERRIDE=\"${IMAGEFLOW_BUILD_OVERRIDE/clean/}\"\nfi\nif [[ \"$IMAGEFLOW_BUILD_OVERRIDE\" == *'debug'* ]]; then\n\texport BUILD_DEBUG=True\n\tIMAGEFLOW_BUILD_OVERRIDE=\"${IMAGEFLOW_BUILD_OVERRIDE/debug/}\"\nfi\nif [[ \"$IMAGEFLOW_BUILD_OVERRIDE\" == *'release'* ]]; then\n\texport BUILD_RELEASE=True\n\tIMAGEFLOW_BUILD_OVERRIDE=\"${IMAGEFLOW_BUILD_OVERRIDE/release/}\"\nfi\nif [[ \"$IMAGEFLOW_BUILD_OVERRIDE\" == *'rusttest'* ]]; then\n\texport TEST_DEBUG=True\n\tIMAGEFLOW_BUILD_OVERRIDE=\"${IMAGEFLOW_BUILD_OVERRIDE/rusttest/}\"\nfi\nif [[ \"$IMAGEFLOW_BUILD_OVERRIDE\" == *'test'* ]]; then\n\texport TEST_C=True\n\texport TEST_DEBUG=True\n\tIMAGEFLOW_BUILD_OVERRIDE=\"${IMAGEFLOW_BUILD_OVERRIDE/test/}\"\nfi\n\nif [[ \"$IMAGEFLOW_BUILD_OVERRIDE\" == *'kcov'* ]]; then\n\texport TEST_C=True\n\texport TEST_DEBUG=True\n\texport BUILD_RELEASE=False\n\texport BUILD_DEBUG=False\n\texport REBUILD_C=False\n\texport CLEAN_RUST_TARGETS=False\n\texport COVERAGE=True\n\tIMAGEFLOW_BUILD_OVERRIDE=\"${IMAGEFLOW_BUILD_OVERRIDE/kcov/}\"\nfi\n\nif [[ \"$IMAGEFLOW_BUILD_OVERRIDE\" == *'codecov'* ]]; then\n\texport BUILD_QUIETER=False\n\texport SILENCE_CARGO=True\n\texport CODECOV=True\n\tIMAGEFLOW_BUILD_OVERRIDE=\"${IMAGEFLOW_BUILD_OVERRIDE/codecov/}\"\nfi\n\n\nif [[ \"$IMAGEFLOW_BUILD_OVERRIDE\" == *'valgrind'* ]]; then\n\texport TEST_C=True\n\texport TEST_DEBUG=False\n\texport TEST_RELEASE=True\n\texport VALGRIND=True\n\texport COVERAGE=True\nfi\nif [[ \"$IMAGEFLOW_BUILD_OVERRIDE\" == *'quiet1'* ]]; then\n\texport BUILD_QUIETER=True\nfi\nif [[ \"$IMAGEFLOW_BUILD_OVERRIDE\" == *'quiet2'* ]]; then\n\texport BUILD_QUIETER=True\n\texport SILENCE_CARGO=True\nfi\nif [[ \"$IMAGEFLOW_BUILD_OVERRIDE\" == *'quiet3'* ]]; then\n\texport BUILD_QUIETER=True\n\texport SILENCE_CARGO=True\n\texport SILENCE_VALGRIND=True\nfi\nif [[ \"$IMAGEFLOW_BUILD_OVERRIDE\" == *'quiet0'* ]]; then\n\texport BUILD_QUIETER=False\n\texport SILENCE_CARGO=False\n\texport SILENCE_VALGRIND=False\nfi\nif [[ \"$IMAGEFLOW_BUILD_OVERRIDE\" == *'target64linux'* ]]; then\n\texport CARGO_TARGET=\"x86_64-unknown-linux-gnu\"\nfi\n\n############# SILENCE STUFF #######################\nexport SILENCE_CARGO=\"${SILENCE_CARGO:-False}\"\nexport SILENCE_VALGRIND=\"${SILENCE_VALGRIND:-False}\"\nexport BUILD_QUIETER=\"${BUILD_QUIETER:-False}\"\nif [[ \"$BUILD_QUIETER\" != \"True\" ]]; then\n\texec 9>&1\nelse\n\texec 9>/dev/null\nfi\nexec 8>&9\nif [[ \"$SILENCE_CARGO\" != \"True\" ]]; then\n\texec 7>&1\nelse\n\texec 7>/dev/null\nfi\nif [[ \"$SILENCE_VALGRIND\" != \"True\" ]]; then\n\texec 6>&1\nelse\n\texec 6>/dev/null\nfi\n\n######################################################\n#### Parameters used by build.sh\n\n#echo \"$BUILD_QUIETER $SILENCE_CARGO $SILENCE_VALGRIND\"\n\necho_maybe(){\n\tif [[ \"$BUILD_QUIETER\" != \"True\" ]]; then\n\t\t\techo \"$1\"\n\tfi\n}\necho_maybe \"============================= [build.sh] ======================================\"\n\n######################################################\n\n\nif test -n \"$AWS_ACCESS_KEY_ID\" -a -n \"$AWS_SECRET_ACCESS_KEY\" -a -n \"$SCCACHE_BUCKET\"; then\n\texport PATH=$HOME/.cargo/bin:$PATH\n\tSCCACHE_BIN=$(command -v sccache || echo false)\n\n\tif \"$SCCACHE_BIN\" --start-server; then\n\t\texport RUSTC_WRAPPER=$SCCACHE_BIN\n\t\techo_maybe \"Using S3 sccache for $(uname -ms)\"\n\telse\n\t\techo_maybe \"warning: Failed to set up S3 sccache for $(uname -ms)\"\n\tfi\nelse\n\techo_maybe \"AWS bucket for sccache not set up (AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID + AWS_SECRET_ACCESS_KEY + SCCACHE_BUCKET=$SCCACHE_BUCKET)\"\nfi\n\nexport MACOSX_DEPLOYMENT_TARGET=10.11\nexport TARGET_CPU=\"${TARGET_CPU:-native}\"\nexport TUNE_CPU=\"${TUNE_CPU:-}\"\nexport CARGO_TARGET=\"${CARGO_TARGET:-}\"\n\n## all incremental\n# check debug, test debug  BUILD_DEBUG +\n# check debug, valgrind debug tests w/coverage\n# test release, build release, doc release\n# build release\n# build debug\n\n# clean release build (not incremental)\n\n# clean target/release\n#\n\n# Compile and run C tests\nexport TEST_C=\"${TEST_C:-True}\"\n# Run debug tests (both C and Rust) under Valgrind. Forces C tests to run under debug\nexport VALGRIND=\"${VALGRIND:-False}\"\n# Enables generated coverage information for C/Rust.\nexport COVERAGE=\"${COVERAGE:-False}\"\nexport LCOV=\"${LCOV:-False}\"\n# Rebuild C part of libimageflow (release mode only)\nexport REBUILD_C=\"${REBUILD_C:-True}\"\n# TODO: CLEAN_C\nexport CODECOV_TOKEN=\"${CODECOV_TOKEN:-8dc28cae-eb29-4d85-b0be-d20c34ac2c30}\"\n\nexport CLEAN_DEBUG=\"${CLEAN_DEBUG:-False}\"\nexport BUILD_DEBUG=\"${BUILD_DEBUG:-False}\"\nexport CHECK_DEBUG=\"${CHECK_DEBUG:-$BUILD_DEBUG}\"\nexport TEST_DEBUG=\"${TEST_DEBUG:-$BUILD_DEBUG}\" #(involve VALGRIND/COVERAGE)\n\nexport CLEAN_RELEASE=\"${CLEAN_RELEASE:-False}\"\nexport BUILD_RELEASE=\"${BUILD_RELEASE:-True}\"\nexport TEST_RELEASE=\"${TEST_RELEASE:-$BUILD_RELEASE}\"\n# Build docs; build release mode binaries (separate pass from testing); populate ./artifacts folder\n\n# Rebuild final Rust artifacts (not deps)\nexport CLEAN_RUST_TARGETS=\"${CLEAN_RUST_TARGETS:-False}\"\n\n\n# Chooses values for ARTIFACT_UPLOAD_PATH and DOCS_UPLOAD_DIR if they are empty\nexport UPLOAD_BY_DEFAULT=\"${UPLOAD_BY_DEFAULT:-False}\"\n\nif [[ \"$CLEAN_RUST_TARGETS\" == \"False\" ]]; then\n\texport CARGO_INCREMENTAL=\"${CARGO_INCREMENTAL:-1}\"\nelse\n\texport CARGO_INCREMENTAL=\"${CARGO_INCREMENTAL:-0}\"\nfi\n\n\n############ GIT VALUES ##################\n\nexport GIT_COMMIT\nGIT_COMMIT=\"${GIT_COMMIT:-$(git rev-parse HEAD)}\"\nGIT_COMMIT=\"${GIT_COMMIT:-unknown-commit}\"\nexport GIT_COMMIT_SHORT\nGIT_COMMIT_SHORT=\"${GIT_COMMIT_SHORT:-$(git rev-parse --short HEAD)}\"\nGIT_COMMIT_SHORT=\"${GIT_COMMIT_SHORT:-unknown-commit}\"\nexport GIT_OPTIONAL_TAG\nif git describe --exact-match --tags 2>&9 1>&9 ; then\n\tGIT_OPTIONAL_TAG=\"${GIT_OPTIONAL_TAG:-$(git describe --exact-match --tags)}\"\nfi\nexport GIT_DESCRIBE_ALWAYS\nGIT_DESCRIBE_ALWAYS=\"${GIT_DESCRIBE_ALWAYS:-$(git describe --always --tags)}\"\nexport GIT_DESCRIBE_ALWAYS_LONG\nGIT_DESCRIBE_ALWAYS_LONG=\"${GIT_DESCRIBE_ALWAYS_LONG:-$(git describe --always --tags --long)}\"\nexport GIT_DESCRIBE_AAL\nGIT_DESCRIBE_AAL=\"${GIT_DESCRIBE_AAL:-$(git describe --always --all --long)}\"\n\n# But let others override GIT_OPTIONAL_BRANCH, as HEAD might not have a symbolic ref, and it could crash\n# I.e, provide GIT_OPTIONAL_BRANCH to this script in Travis - but NOT For\nexport GIT_OPTIONAL_BRANCH\nif git symbolic-ref --short HEAD 2>&9 1>&9 ; then\n\tGIT_OPTIONAL_BRANCH=\"${GIT_OPTIONAL_BRANCH:-$(git symbolic-ref --short HEAD)}\"\nfi\n\n############ NAMING OF ARTIFACTS (local-only, CI should determine the rest) ##################\n\nif [[ \"$(uname -s)\" == 'Darwin' ]]; then\n\texport SHORT_OS_NAME=\"${SHORT_OS_NAME:-mac}\"\nelse\n\texport SHORT_OS_NAME=\"${SHORT_OS_NAME:-linux}\"\nfi\n\nif [[ \"$(uname -s)\" == 'Darwin' ]]; then\n\texport NUGET_RUNTIME=\"${NUGET_RUNTIME:-osx-x64}\"\nelse\n\texport NUGET_RUNTIME=\"${NUGET_RUNTIME:-linux-x64}\"\nfi\n\nif [[ \"${UPLOAD_BY_DEFAULT}\" == \"True\" ]]; then\n\tif [[ -n \"${GIT_OPTIONAL_BRANCH}\" ]]; then\n\t\texport ARTIFACT_UPLOAD_PATH=\"${ARTIFACT_UPLOAD_PATH:-${GIT_OPTIONAL_BRANCH}/imageflow-localbuild-${GIT_COMMIT_SHORT}-${SHORT_OS_NAME}}\"\n\t\texport DOCS_UPLOAD_DIR=\"${DOCS_UPLOAD_DIR:-${GIT_OPTIONAL_BRANCH}/doc}\"\n\t\texport ARTIFACT_UPLOAD_PATH_2=\"${ARTIFACT_UPLOAD_PATH_2}\"\n\t\texport DOCS_UPLOAD_DIR_2=\"${DOCS_UPLOAD_DIR_2}\"\n\tfi\nfi\n\n##################################\n\nexport RUST_BACKTRACE=1\nSTAMP=\"+[%H:%M:%S]\"\ndate_stamp(){\n\tif [[ \"$BUILD_QUIETER\" != \"True\" ]]; then\n\t\t\tdate \"$STAMP\"\n\tfi\n}\ndate_stamp\n\n\n#Turn off coverage if lcov is missing\ncommand -v lcov >/dev/null 2>&1 || { export LCOV=False; }\n\n# TODO: Add CI env vars?\nBUILD_VARS=(\n\t\"CLEAN_DEBUG=${CLEAN_DEBUG}\"\n\t\"CHECK_DEBUG=${CHECK_DEBUG}\"\n\t\"TEST_DEBUG=${TEST_DEBUG}\"\n\t\"BUILD_DEBUG=${BUILD_DEBUG}\"\n\t\"CLEAN_RELEASE=${CLEAN_RELEASE}\"\n\t\"TEST_RELEASE=${TEST_RELEASE}\"\n\t\"BUILD_RELEASE=${BUILD_RELEASE}\"\n\t\"TARGET_CPU=${TARGET_CPU}\"\n\t\"TUNE_CPU=${TUNE_CPU}\"\n\t\"BUILD_QUIETER=${BUILD_QUIETER}\"\n\t\"CARGO_TARGET=${CARGO_TARGET}\"\n\t\"SILENCE_CARGO=${SILENCE_CARGO}\"\n\t\"SILENCE_VALGRIND=${SILENCE_VALGRIND}\"\n\t\"IMAGEFLOW_BUILD_OVERRIDE=${IMAGEFLOW_BUILD_OVERRIDE}\"\n\t\"VALGRIND=${VALGRIND}\"\n\t\"TEST_C=${TEST_C}\"\n\t\"REBUILD_C=${REBUILD_C}\"\n\t\"CLEAN_RUST_TARGETS=${CLEAN_RUST_TARGETS}\"\n\t\"COVERAGE=${COVERAGE}\"\n\t\"COVERALLS=${COVERALLS}\"\n\t\"CODECOV=${CODECOV}\"\n\t\"COVERALLS_TOKEN=${COVERALLS_TOKEN}\"\n\t\"GIT_COMMIT=${GIT_COMMIT}\"\n\t\"ARTIFACT_UPLOAD_PATH=${ARTIFACT_UPLOAD_PATH}\"\n\t\"ARTIFACT_UPLOAD_PATH_2=${ARTIFACT_UPLOAD_PATH_2}\"\n\t\"ARTIFACT_UPLOAD_PATH_3=${ARTIFACT_UPLOAD_PATH_3}\"\n\t\"DOCS_UPLOAD_DIR=${DOCS_UPLOAD_DIR}\"\n\t\"DOCS_UPLOAD_DIR_2=${DOCS_UPLOAD_DIR_2}\"\n\t\"RUNTIME_REQUIREMENTS_FILE=${RUNTIME_REQUIREMENTS_FILE}\"\n\t\"RUST_BACKTRACE=${RUST_BACKTRACE}\"\n)\n\n\n\nsep_bar(){\n\t\tprintf \"\\n=================== %s ======================\\n\" \"$1\"\n}\n\n\n\nif [[ -n \"$TARGET_CPU\" ]]; then\n\texport RUST_FLAGS=\"$RUST_FLAGS -C target-cpu=$TARGET_CPU\"\n\n\texport FIXUP_CPU=\"$TARGET_CPU\"\n\tif [[ \"$CC\" == *\"gcc\"* ]]; then\n\t\tif [[ \"$($CC --version)\" == *\"4.8.\"* ]]; then\n\t\t\tif [[ \"$FIXUP_CPU\" == \"sandybridge\" ]]; then\n\t\t\t\tFIXUP_CPU=\"corei7-avx\"\n\t\t\tfi\n\t\t\tif [[ \"$FIXUP_CPU\" == \"haswell\" ]]; then\n\t\t\t\tFIXUP_CPU=\"core-avx2\"\n\t\t\tfi\n\t\tfi\n\tfi\n\texport CFLAGS=\"${CFLAGS} -march=$FIXUP_CPU -O3\"\n\texport CXXFLAGS=\"${CXXFLAGS} -march=$FIXUP_CPU -O3\"\nfi\n\nif [[ -n \"$TUNE_CPU\" ]]; then\n\texport CFLAGS=\"${CFLAGS} -mtune=$TUNE_CPU\"\n\texport CXXFLAGS=\"${CXXFLAGS} -mtune=$TUNE_CPU\"\nfi\n\nexport REL_RUST_FLAGS=\"$RUST_FLAGS\"\nif [[ \"$COVERAGE\" == 'True' ]]; then\n\texport TEST_RUST_FLAGS=\"$RUST_FLAGS -C link-dead-code\"\nfi\n\nexport RUST_FLAGS=\"$TEST_RUST_FLAGS\"\n\nif [[ -n \"$CARGO_TARGET\" ]]; then\n\texport CARGO_ARGS=(\"--target\" \"$CARGO_TARGET\")\n\texport TARGET_DIR=\"target/$CARGO_TARGET/\"\nelse\n\texport CARGO_ARGS=()\n\texport TARGET_DIR=\"target/\"\nfi\n\nprintf \"TARGET_CPU=%s  RUST_FLAGS=%s CFLAGS=%s TARGET_DIR=%s\\n\" \"$TARGET_CPU\" \"$RUST_FLAGS\" \"$CFLAGS\" \"$TARGET_DIR\"\n\n\necho_maybe \"build.sh sees these relevant variables: ${BUILD_VARS[*]}\"\n\necho_maybe\necho_maybe \"================================== Rust ============================ [build.sh]\"\n\n\nrustc --version\ncargo --version 1>&9\ndate_stamp\n\nif [[ \"$CLEAN_RUST_TARGETS\" == 'True' ]]; then\n\techo \"Removing output imageflow binaries (but not dependencies)\"\n\tif [ -d \"./${TARGET_DIR}debug\" ]; then\n\t\tfind  ./${TARGET_DIR}debug  -maxdepth 1 -type f  -delete\n\tfi\n\tif [ -d \"./${TARGET_DIR}release\" ]; then\n\t\tfind  ./${TARGET_DIR}release  -maxdepth 1 -type f  -delete\n\tfi\nfi\nif [[ \"$CLEAN_DEBUG\" == 'True' ]]; then\n\texport CARGO_INCREMENTAL=0\n\trm -rf ./target/debug\nelse\n\texport CARGO_INCREMENTAL=1\nfi\n\nif [[ \"$CHECK_DEBUG\" == 'True' ]]; then\n\techo_maybe Running debug cargo check\n\tdate_stamp\n\tcargo check --all \"${CARGO_ARGS[@]}\" 1>&7\nfi\nif [[ \"$TEST_DEBUG\" == 'True' ]]; then\n\techo_maybe Running debug cargo test\n\tdate_stamp\n\tcargo test --all \"${CARGO_ARGS[@]}\" 1>&7\nfi\nif [[ \"$COVERAGE\" == 'True' ]]; then\n\tdate_stamp\n\t./cov.sh   1>&9\nfi\n\nexport RUST_FLAGS=\"$REL_RUST_FLAGS\"\nprintf \"TARGET_CPU=%s  RUST_FLAGS=%s CFLAGS=%s TARGET_DIR=%s CARGO_ARGS=\" \"$TARGET_CPU\" \"$RUST_FLAGS\" \"$CFLAGS\" \"$TARGET_DIR\"\nprintf \"%s \" \"${CARGO_ARGS[@]}\"\nprintf \"\\n\"\n\nif [[ \"$BUILD_DEBUG\" == 'True' ]]; then\n\techo_maybe \"Building debug binaries\"\n\tdate_stamp\n\tcargo build --all \"${CARGO_ARGS[@]}\" 1>&7\n\t./${TARGET_DIR}debug/imageflow_tool diagnose --show-compilation-info 1>&9\nfi\n\nif [[ \"$CLEAN_RELEASE\" == 'True' ]]; then\n\texport CARGO_INCREMENTAL=0\n\trm -rf ./target/release\nelse\n\texport CARGO_INCREMENTAL=1\nfi\n\nif [[ \"$TEST_RELEASE\" == 'True' ]]; then\n\techo_maybe \"==================================================================== [build.sh]\"\n\techo \"Running release mode tests\"\n\techo_maybe\n\tdate_stamp\n\tcargo test --all --release \"${CARGO_ARGS[@]}\" 1>&7\n\tdate_stamp\n\tif [[ \"$VALGRIND\" == 'True' ]]; then\n\t\t./valgrind_existing.sh   1>&6\n\tfi\nfi\n\nif [[ \"$BUILD_RELEASE\" == 'True' ]]; then\n\techo_maybe \"==================================================================== [build.sh]\"\n\techo \"Building release mode binaries\"\n\techo_maybe\n\tdate_stamp\n\tcargo build --all --release \"${CARGO_ARGS[@]}\"  1>&7\n\techo_maybe \"Generating docs\"\n\tdate_stamp\n\tcargo doc --all --release \"${CARGO_ARGS[@]}\" --no-deps 1>&7 || true\n\tdate_stamp\n\t./${TARGET_DIR}release/imageflow_tool diagnose --show-compilation-info 1>&9\n\tdate_stamp\n\techo_maybe \"==================================================================== [build.sh]\"\n\techo \"Populating artifacts folder\"\n\tdate_stamp\n\tdate_stamp\n\t## Artifacts folder should exist - and be empty - at the beginning\n\tif [[ -d \"./artifacts/upload\" ]]; then\n\t\trm -rf ./artifacts/upload\n\tfi\n\tif [[ -d \"./artifacts/staging\" ]]; then\n\t\trm -rf ./artifacts/staging\n\tfi\n\tmkdir -p ./artifacts/upload || true\n\tmkdir -p ./artifacts/staging/headers || true\n\n\t(\n\t\tcd ./${TARGET_DIR}doc\n\t\ttar czf \"../docs.tar.gz\" ./*\n\t)\n\tmv ./${TARGET_DIR}docs.tar.gz ./artifacts/staging/\n\n\n\tcp -R ${TARGET_DIR}release/{imageflow_,libimageflow}*  ./artifacts/staging/\n\tcp bindings/headers/*.h  ./artifacts/staging/headers/\n\tcp bindings/headers/imageflow_default.h  ./artifacts/staging/imageflow.h\n\tcp ./ci/packaging_extras/{install,uninstall}.sh ./artifacts/staging\n\trm ./artifacts/staging/*.{o,d,rlib} || true\n\trm ./artifacts/staging/*-* || true\n\trm -rf ./artifacts/staging/doc || true\n\trm -rf ./artifacts/staging/release || true\n\n\tif [[ -n \"$RUNTIME_REQUIREMENTS_FILE\" ]]; then\n\t\tcp \"${RUNTIME_REQUIREMENTS_FILE}\" ./artifacts/staging/runtime_requirements.txt\n\tfi\n\n\t(\n\t\tcd ./artifacts/staging\n\t\ttar czf \"./archive.tar.gz\" ./*\n\t)\n\tARTIFACT_ARCHIVE_NAME=\"./artifacts/staging/archive.tar.gz\"\n\n\tif [[ -n \"$ARTIFACT_UPLOAD_PATH\" ]]; then\n\t\tmkdir -p \"./artifacts/upload/$(dirname \"${ARTIFACT_UPLOAD_PATH}\")\" || true\n\t\tcp \"${ARTIFACT_ARCHIVE_NAME}\" \"./artifacts/upload/${ARTIFACT_UPLOAD_PATH}.tar.gz\"\n\tfi\n\tif [[ -n \"$ARTIFACT_UPLOAD_PATH_2\" ]]; then\n\t\tmkdir -p \"./artifacts/upload/$(dirname \"${ARTIFACT_UPLOAD_PATH_2}\")\" || true\n\t\tcp \"${ARTIFACT_ARCHIVE_NAME}\" \"./artifacts/upload/${ARTIFACT_UPLOAD_PATH_2}.tar.gz\"\n\tfi\n\tif [[ -n \"$ARTIFACT_UPLOAD_PATH_3\" ]]; then\n\t\tmkdir -p \"./artifacts/upload/$(dirname \"${ARTIFACT_UPLOAD_PATH_3}\")\" || true\n\t\tcp \"${ARTIFACT_ARCHIVE_NAME}\" \"./artifacts/upload/${ARTIFACT_UPLOAD_PATH_3}.tar.gz\"\n\tfi\n\n\tif [[ -n \"$DOCS_UPLOAD_DIR\" ]]; then\n\t\tmkdir -p \"./artifacts/upload/${DOCS_UPLOAD_DIR}\" || true\n\t\tcp -a ${TARGET_DIR}doc/* \"./artifacts/upload/${DOCS_UPLOAD_DIR}/\"\n\tfi\n\tif [[ -n \"$DOCS_UPLOAD_DIR_2\" ]]; then\n\t\tmkdir -p \"./artifacts/upload/${DOCS_UPLOAD_DIR_2}\" || true\n\t\tcp -a ${TARGET_DIR}doc/* \"./artifacts/upload/${DOCS_UPLOAD_DIR_2}/\"\n\tfi\n\n\t# Create the nuget artifacts\n\t./ci/pack_nuget/pack.sh\n\t./ci/pack_nuget/pack.sh tool\n\nfi\necho_maybe\ndate_stamp\necho_maybe \"========================== Build complete :) =================== [build.sh]\"\n\nif test -n \"$SCCACHE_BIN\"; then\n\t\"$SCCACHE_BIN\" --stop-server || true;\nfi\n"
        },
        {
          "name": "build_via_docker.sh",
          "type": "blob",
          "size": 0.4755859375,
          "content": "#!/bin/bash\nset -e #Exit on failure.\n\n# Change directory to root (call this in a subshell if you have a problem with that)\ncd \"$( dirname \"${BASH_SOURCE[0]}\" )\"\n\n# To remove (the LARGE) caches this writes to your home directory \n# rm -rf ~/.docker_imageflow_caches\n\ncd ci \n\nexport OVERRIDE=\"$1\"\nexport OVERRIDE=\"${OVERRIDE:-debugquiet}\"\n\nexport UPLOAD_BUILD=False\nexport UPLOAD_DOCS=False\nexport IMAGEFLOW_BUILD_OVERRIDE=\"$OVERRIDE\"\n\n./simulate_travis.sh imazen/imageflow_build_ubuntu18\n"
        },
        {
          "name": "c_components",
          "type": "tree",
          "content": null
        },
        {
          "name": "ci",
          "type": "tree",
          "content": null
        },
        {
          "name": "cov.sh",
          "type": "blob",
          "size": 1.2099609375,
          "content": "#!/bin/bash\nset -e\n\nrm -rf ./target/{c_cov,rust_cov,rust_coverage,c_coverage} || true\n\nfor i in ./target/debug/imageflow*-[0-9a-f][0-9a-f]*\ndo\n\tif [[ \"$i\" == *.* ]]; then\n\t\techo \"Skipping $i\"\n\telse\n\t\techo \"Covering $i\"\n\t\tDIR=\"./target/rust_coverage/$(basename \"$i\")\"\n\t\tmkdir -p \"$DIR\"\n\t\tkcov --exclude-pattern=/.cargo,/usr,/tests --include-path=./c_components/lib,./imageflow_core/src,./imageflow_server/src,./imageflow_tool/src,./imageflow_types/src,./imageflow_helpers/src \"$DIR\" \"$i\"\n\tfi\ndone\n\nfor i in ./c_components/build/bin/test_*\ndo\n\tif [[ \"$i\" == *.* ]]; then\n\t\techo \"Skipping $i\"\n\telse\n\t\techo \"Covering $i\"\n\t\tDIR=\"./target/c_coverage/$(basename \"$i\")\"\n\t\tmkdir -p \"$DIR\"\n\t\tkcov --exclude-pattern=/.cargo,/usr,/tests \"$DIR\" \"$i\"\n\tfi\ndone\n\n\necho \"Merging $(ls ./target/c_coverage)\"\nkcov --merge ./target/c_cov ./target/coverage/*/\n\necho \"Merging $(ls ./target/rust_coverage)\"\nkcov --merge ./target/rust_cov ./target/coverage/*/\n\nif [[ \"$CODECOV\" == \"True\" ]]; then\n\techo \"Uploading to codecov.io\"\n\tbash <(curl -s https://codecov.io/bash) -s ./target/c_cov\n\tbash <(curl -s https://codecov.io/bash) -s ./target/rust_cov\nfi\n\n#kcov --merge ./target/cov  /home/n/.docker_imageflow_caches/.docker_build_if_gcc48_x86-64/target/coverage/*/\n"
        },
        {
          "name": "development.md",
          "type": "blob",
          "size": 1.71875,
          "content": "\n\n# Auto-formatting source code\n\nOn Ubuntu 14.04\n\n1. Ensure you have clang-format installed and you can run it as `clang-format`\n\nsudo apt-get install clang-format-3.5\n\nsudo ln -s /usr/bin/clang-format-3.5 /usr/bin/clang-format\n\n\n2. Install git-clang-format\n\nsudo wget -O /usr/local/bin/git-clang-format https://raw.githubusercontent.com/llvm-mirror/clang/master/tools/clang-format/git-clang-format\n\nsudo chmod +x /usr/local/bin/git-clang-format\n\n\n3. Clean up that nasty commit you just pushed\n\ngit clang-format --commit HEAD~1\n\ngit commit -m\"Reformatting\"\n\n4. Reformat the c_components folder\n\nclang-format -i c_components/{lib,tests}/*.{c,h,cpp,hpp}\n\n\n5. Import code style .clion.codestyle.xml into CLion to reduce the number of differences clang-format creates.\n\n## Using multiple versions of GCC\n\n1. export CC=gcc-4.8\n2. export CPP=g++-4.8\n\n\n## Generating animated gifs of graph progression.\n\n1. Switch to the directory holding the generated graph_version_XXX.dot files.\n2. Ensure you have graphviz, gifsicle and avtools:  sudo apt-get install libav-tools graphviz gifsicle\n3. Convert them to .png: `find . -type f -name '*.dot' -execdir dot -Tpng -Gsize=5,9\\! -Gdpi=100  -O {} \\;`\n4. Assemble .gif: `avconv -i job_2_graph_version_%d.dot.png -pix_fmt rgb24 -y output.gif`\n5: Add delay to frames, optimize: `gifsicle -d 200 output.gif -l=2 -O -o optimized.gif`\n\n\n\n## Benchmarking to-do:\n\nVs. https://github.com/h2non/imaginary\nVs. libvips directly\nVs. Imagemagick\n\n\n## Misc. resources\n\nhttps://github.com/mm2/Little-CMS/blob/master/utils/jpgicc/iccjpeg.c\n\n\n## Look at vectorization\n\n    gcc -DFLOW_GCC_IDCT -fopt-info-vec-missed  -std=gnu11 -iquotelib  -ffast-math -funroll-loops -mfpmath=both -mtune=native -march=native -O3 lib/codecs_jpeg_idct_fast.c\n\n\n\n"
        },
        {
          "name": "docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "imageflow.iml",
          "type": "blob",
          "size": 4.7587890625,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<module type=\"RUST_MODULE\" version=\"4\">\r\n  <component name=\"NewModuleRootManager\">\r\n    <content url=\"file://$MODULE_DIR$\">\r\n      <sourceFolder url=\"file://$MODULE_DIR$/src\" isTestSource=\"false\" />\r\n      <sourceFolder url=\"file://$MODULE_DIR$/examples\" isTestSource=\"false\" />\r\n      <sourceFolder url=\"file://$MODULE_DIR$/tests\" isTestSource=\"true\" />\r\n      <sourceFolder url=\"file://$MODULE_DIR$/benches\" isTestSource=\"true\" />\r\n      <sourceFolder url=\"file://$MODULE_DIR$/imageflow_core/src\" isTestSource=\"false\" />\r\n      <sourceFolder url=\"file://$MODULE_DIR$/imageflow_core/examples\" isTestSource=\"false\" />\r\n      <sourceFolder url=\"file://$MODULE_DIR$/imageflow_core/tests\" isTestSource=\"true\" />\r\n      <sourceFolder url=\"file://$MODULE_DIR$/imageflow_core/benches\" isTestSource=\"true\" />\r\n      <sourceFolder url=\"file://$MODULE_DIR$/c_components/src\" isTestSource=\"false\" />\r\n      <sourceFolder url=\"file://$MODULE_DIR$/c_components/examples\" isTestSource=\"false\" />\r\n      <sourceFolder url=\"file://$MODULE_DIR$/c_components/tests\" isTestSource=\"true\" />\r\n      <sourceFolder url=\"file://$MODULE_DIR$/imageflow_core/benches\" isTestSource=\"true\" />\r\n      <sourceFolder url=\"file://$MODULE_DIR$/imageflow_server/src\" isTestSource=\"false\" />\r\n      <sourceFolder url=\"file://$MODULE_DIR$/imageflow_server/examples\" isTestSource=\"false\" />\r\n      <sourceFolder url=\"file://$MODULE_DIR$/imageflow_server/tests\" isTestSource=\"true\" />\r\n      <sourceFolder url=\"file://$MODULE_DIR$/imageflow_server/benches\" isTestSource=\"true\" />\r\n      <sourceFolder url=\"file://$MODULE_DIR$/imageflow_riapi/src\" isTestSource=\"false\" />\r\n      <sourceFolder url=\"file://$MODULE_DIR$/imageflow_riapi/examples\" isTestSource=\"false\" />\r\n      <sourceFolder url=\"file://$MODULE_DIR$/imageflow_riapi/tests\" isTestSource=\"true\" />\r\n      <sourceFolder url=\"file://$MODULE_DIR$/imageflow_riapi/benches\" isTestSource=\"true\" />\r\n      <sourceFolder url=\"file://$MODULE_DIR$/imageflow_types/src\" isTestSource=\"false\" />\r\n      <sourceFolder url=\"file://$MODULE_DIR$/imageflow_types/examples\" isTestSource=\"false\" />\r\n      <sourceFolder url=\"file://$MODULE_DIR$/imageflow_types/tests\" isTestSource=\"true\" />\r\n      <sourceFolder url=\"file://$MODULE_DIR$/imageflow_types/benches\" isTestSource=\"true\" />\r\n      <sourceFolder url=\"file://$MODULE_DIR$/imageflow_tool/src\" isTestSource=\"false\" />\r\n      <sourceFolder url=\"file://$MODULE_DIR$/imageflow_tool/examples\" isTestSource=\"false\" />\r\n      <sourceFolder url=\"file://$MODULE_DIR$/imageflow_tool/tests\" isTestSource=\"true\" />\r\n      <sourceFolder url=\"file://$MODULE_DIR$/imageflow_tool/benches\" isTestSource=\"true\" />\r\n      <sourceFolder url=\"file://$MODULE_DIR$/imageflow_helpers/src\" isTestSource=\"false\" />\r\n      <sourceFolder url=\"file://$MODULE_DIR$/imageflow_helpers/examples\" isTestSource=\"false\" />\r\n      <sourceFolder url=\"file://$MODULE_DIR$/imageflow_helpers/tests\" isTestSource=\"true\" />\r\n      <sourceFolder url=\"file://$MODULE_DIR$/imageflow_helpers/benches\" isTestSource=\"true\" />\r\n      <sourceFolder url=\"file://$MODULE_DIR$/c_components/tests/src\" isTestSource=\"false\" />\r\n      <sourceFolder url=\"file://$MODULE_DIR$/c_components/tests/examples\" isTestSource=\"false\" />\r\n      <sourceFolder url=\"file://$MODULE_DIR$/c_components/tests/tests\" isTestSource=\"true\" />\r\n      <sourceFolder url=\"file://$MODULE_DIR$/c_components/tests/benches\" isTestSource=\"true\" />\r\n      <sourceFolder url=\"file://$MODULE_DIR$/imageflow_abi/src\" isTestSource=\"false\" />\r\n      <sourceFolder url=\"file://$MODULE_DIR$/imageflow_abi/examples\" isTestSource=\"false\" />\r\n      <sourceFolder url=\"file://$MODULE_DIR$/imageflow_abi/tests\" isTestSource=\"true\" />\r\n      <sourceFolder url=\"file://$MODULE_DIR$/imageflow_abi/benches\" isTestSource=\"true\" />\r\n      <sourceFolder url=\"file://$MODULE_DIR$/imageflow/src\" isTestSource=\"false\" />\r\n      <sourceFolder url=\"file://$MODULE_DIR$/imageflow_http_helpers/src\" isTestSource=\"false\" />\r\n      <excludeFolder url=\"file://$MODULE_DIR$/c_components/target\" />\r\n      <excludeFolder url=\"file://$MODULE_DIR$/c_components/tests/target\" />\r\n      <excludeFolder url=\"file://$MODULE_DIR$/imageflow_abi/target\" />\r\n      <excludeFolder url=\"file://$MODULE_DIR$/imageflow_core/target\" />\r\n      <excludeFolder url=\"file://$MODULE_DIR$/imageflow_helpers/target\" />\r\n      <excludeFolder url=\"file://$MODULE_DIR$/imageflow_riapi/target\" />\r\n      <excludeFolder url=\"file://$MODULE_DIR$/imageflow_server/target\" />\r\n      <excludeFolder url=\"file://$MODULE_DIR$/imageflow_tool/target\" />\r\n      <excludeFolder url=\"file://$MODULE_DIR$/imageflow_types/target\" />\r\n      <excludeFolder url=\"file://$MODULE_DIR$/target\" />\r\n    </content>\r\n    <orderEntry type=\"inheritedJdk\" />\r\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\r\n  </component>\r\n</module>"
        },
        {
          "name": "imageflow",
          "type": "tree",
          "content": null
        },
        {
          "name": "imageflow_abi",
          "type": "tree",
          "content": null
        },
        {
          "name": "imageflow_core",
          "type": "tree",
          "content": null
        },
        {
          "name": "imageflow_helpers",
          "type": "tree",
          "content": null
        },
        {
          "name": "imageflow_http_helpers",
          "type": "tree",
          "content": null
        },
        {
          "name": "imageflow_riapi",
          "type": "tree",
          "content": null
        },
        {
          "name": "imageflow_tool",
          "type": "tree",
          "content": null
        },
        {
          "name": "imageflow_types",
          "type": "tree",
          "content": null
        },
        {
          "name": "magick.md",
          "type": "blob",
          "size": 1.6826171875,
          "content": "\n# Compiling ImageMagick for high quality\n\n**We use 6.9.3-7 - the latest stable as of April 2016.**\n\nSee http://www.imagemagick.org/script/install-source.php\n\nAnd http://www.imagemagick.org/script/high-dynamic-range.php\n\n```bash\n\n#download and utar\nwget http://www.imagemagick.org/download/ImageMagick-6.9.3-7.tar.gz\ntar xvzf ImageMagick-6.9.3-7.tar.gz\ncd ImageMagick-6.9.3-7\n# Remove your existing imagemagick so you don't use it accidentally and generate crappy images. \n# Older and differently compiled versions of imagemagick have lots of bugs, and are roughly MS Paint quality.\nsudo apt-get remove imagemagick\n\n# Configure for HDRI support (don't truncate color depth)\n./configure --enable-hdri --with-modules\n#Build\nmake\n#Install\nsudo make install\n\n#Verify the output lists HDRI and the version matches\nconvert -v\n\n```\n\nIf you get this error:\n\n> convert: error while loading shared libraries: libMagickCore-6.Q16HDRI.so.2: cannot open shared object file: No such file or directory\n\nThen run `ldconfig /usr/local/lib`\n\nIf you need to remove the binaries installed by `make install`, try\n\n> sudo rm /usr/local/bin/{animate,compare,conjure,convert,composite,identify,display,import,mogrify,montage,stream}\n\n# Usage\n\n# Best general-purpose downsampling\n\nconvert INPUT.IMG -set colorspace WHATEVER_YOUR_INPUT_FITS_IN -colorspace RGB -filter Mitchell -distort Resize RESIZE_SPECIFICATION -colorspace YOUR_CHOSEN_OUTPUT_COLORSPACE OUTPUT.IMG\n\nconvert u1.jpg -set colorspace sRGB -colorspace RGB -filter Mitchell -distort Resize 800x800 -colorspace sRGB imagemagick_u1_800x800.jpg\n\n# Best general-purpose upscaling\n\nsame replacing -filter Mitchell -distort Resize with -gamma 2 -filter LanczosSharp -distort Resize -gamma .5\n"
        },
        {
          "name": "rust_perf_battery.ps1",
          "type": "blob",
          "size": 21.150390625,
          "content": "<#\n.SYNOPSIS\n    Continuously runs `cargo clean` followed by `cargo build` in a loop.\n    Logs comprehensive performance and battery statistics per iteration.\n    Prevents the system from sleeping or turning off the display during execution,\n    and restores the previous system state on script exit.\n    Detects large time jumps (sleep/resume) and exits if found.\n    Uses high-precision tracking of battery drop per mode.\n    Configures Energy Saver thresholds dynamically.\n    Reports CPU speed and screen brightness in logs.\n    Displays banners on screen brightness or mode changes.\n    Reports system uptime and RAM usage at script start.\n    Supports configurable sleep intervals and argument passing to `cargo build`.\n    Includes comprehensive documentation and comments.\n    Keeps API calls and format strings within the summary log.\n\n.DESCRIPTION\n    - Runs a self-test before starting. If self-test fails, prints error and exits.\n    - On start, sets Energy Saver to activate at 0% battery.\n    - Prevents the computer from sleeping or turning off the display by using Win32 API SetThreadExecutionState.\n      Uses 64-bit values for ES_CONTINUOUS etc.\n    - On start, prints initial line with date/time, battery, screen brightness, CPU speed, system uptime, RAM usage, and memory.\n    - For each iteration:\n        * Executes cargo clean then cargo build with forwarded arguments.\n        * Sleeps a configured interval between runs.\n        * Tracks performance stats, including battery usage per mode.\n        * Calculates estimated builds per % battery drop, build time per %, wall time per %,\n          using a 70% drop wall time estimate per mode.\n        * Monitors CPU speed and screen brightness, displaying banners on changes.\n        * If iteration takes too long (>3x baseline time), assumes sleep/resume and exits.\n    - On command failure, prints the error output and stops.\n    - On script end (or if killed), restores Energy Saver threshold to 30% and previous system state.\n    - The summary log matches exactly what's printed to terminal line-by-line.\n    - The full log includes all summary lines plus cargo outputs.\n\n.NOTES\n    Requires PowerShell 5.1+ and `cargo` in PATH.\n    Assumes the current directory has a Cargo project (Cargo.toml).\n\n.EXAMPLE\n    .\\rust_perf_battery.ps1 --sleep 15 --release\n#>\n\nparam(\n    [Parameter(Position=0, Mandatory=$false)]\n    [int]$SleepInterval = 10,\n\n    [Parameter(ValueFromRemainingArguments=$true)]\n    [string[]]$CargoArgs\n)\n\nSet-StrictMode -Version Latest\n$ErrorActionPreference = 'Stop'\n\n# Configuration\n$PauseBetweenRuns = $SleepInterval # seconds to sleep between each iteration\n$BaselineIterationTime = [TimeSpan]::FromMinutes(5)\n$MaxAllowedIterationTime = New-TimeSpan -Minutes ($BaselineIterationTime.TotalMinutes * 3) # 3x baseline\n\n# Formats\n$logTimeFormat = \"yyyy-MM-dd_HH-mm-ss\"    # for file names\n$displayTimeFormat = \"yyyy-MM-dd HH:mm:ss\" # for printed lines\n[DateTime]$GlobalScriptStart = Get-Date\n[string]$ScriptStartTime = (Get-Date -Format $logTimeFormat)\n[string]$FullLogPath = Join-Path (Get-Location) (\"rust_perf_battery_full_$ScriptStartTime.log\")\n[string]$SummaryLogPath = Join-Path (Get-Location) (\"rust_perf_battery_summary_$ScriptStartTime.log\")\n\n# Track global stats\n$CompileCount = 0\n$StopLoop = $false\n[TimeSpan]$TotalBuildTime = [TimeSpan]::Zero\n[TimeSpan]$TotalCleanTime = [TimeSpan]::Zero\n[TimeSpan]$TotalSleepTime = [TimeSpan]::Zero\n\n# Mode stats: Dictionary<string,PSObject>\n$ModeStats = [System.Collections.Generic.Dictionary[string, object]]::new()\n\nfunction Ensure-ModeStats($mode) {\n    if (-not $ModeStats.ContainsKey($mode)) {\n        $ModeStats[$mode] = [PSCustomObject]@{\n            Mode = $mode\n            TotalModeTime = [TimeSpan]::Zero\n            TotalBuildTime = [TimeSpan]::Zero\n            TotalCleanTime = [TimeSpan]::Zero\n            BuildCount = 0\n            LastScreenBrightness = $null\n        }\n    }\n}\n\nfunction Get-PowerSchemeName {\n    $output = powercfg /getactivescheme 2>$null\n    if ($LASTEXITCODE -ne 0 -or [string]::IsNullOrWhiteSpace($output)) {\n        throw \"Unable to retrieve power scheme name.\"\n    }\n\n    if ($output -match '\\((?<SchemeName>[^)]+)\\)') {\n        return ($Matches['SchemeName'].Trim())\n    } else {\n        throw \"No scheme name found in powercfg output.\"\n    }\n}\n\nfunction Get-BatteryStatus {\n    $batt = Get-CimInstance Win32_Battery -ErrorAction SilentlyContinue\n    if (-not $batt) {\n        return [PSCustomObject]@{\n            HasBattery         = $false\n            BatteryPercent     = 100\n            OnAC               = $true\n            BatteryStatus      = \"NoBattery\"\n            FullChargeCapacity = $null\n        }\n    }\n\n    $statusCode = [int]$batt.BatteryStatus\n    $percent = [int]$batt.EstimatedChargeRemaining\n    $onAC = $true\n    if ($statusCode -eq 1 -or $statusCode -eq 4 -or $statusCode -eq 5) {\n        $onAC = $false\n    }\n\n    $fcc = $batt.FullChargeCapacity\n    if (-not $fcc) {\n        $fcc = $null\n    }\n\n    return [PSCustomObject]@{\n        HasBattery         = $true\n        BatteryPercent     = $percent\n        OnAC               = $onAC\n        BatteryStatus      = $statusCode\n        FullChargeCapacity = $fcc\n    }\n}\n\nfunction Get-ScreenBrightness {\n    try {\n        $brightnessObj = Get-WmiObject -Namespace root/WMI -Class WmiMonitorBrightness -ErrorAction Stop\n        if ($brightnessObj -and $brightnessObj.CurrentBrightness) {\n            return \"$($brightnessObj.CurrentBrightness)%\"\n        } else {\n            return \"N/A\"\n        }\n    } catch {\n        return \"N/A\"\n    }\n}\n\nfunction Get-CPUSpeed {\n    try {\n        $cpu = Get-CimInstance -ClassName Win32_Processor -ErrorAction Stop\n        if ($cpu) {\n            $currentClock = $cpu.CurrentClockSpeed\n            $maxClock = $cpu.MaxClockSpeed\n            if ($maxClock -gt 0) {\n                $cpuPercent = [math]::Round(($currentClock / $maxClock) * 100, 0)\n                return \"$cpuPercent%\"\n            } else {\n                return \"N/A\"\n            }\n        } else {\n            return \"N/A\"\n        }\n    } catch {\n        return \"N/A\"\n    }\n}\n\nfunction Get-SystemUptime {\n    try {\n        $uptime = (Get-CimInstance -ClassName Win32_OperatingSystem).LastBootUpTime\n        $uptimeSpan = (Get-Date) - $uptime\n        return $uptimeSpan.ToString(\"dd\\.hh\\:mm\\:ss\")\n    } catch {\n        return \"N/A\"\n    }\n}\n\nfunction Format-ShortTime($ts) {\n    \"{0:00}:{1:00}:{2:00}s\" -f [int]$ts.TotalHours, $ts.Minutes, $ts.Seconds\n}\n\nfunction Format-HoursMinutes($ts) {\n    $totalMinutes = [int][Math]::Floor($ts.TotalMinutes)\n    $h = [int]($totalMinutes / 60)\n    $m = $totalMinutes % 60\n    if ($h -gt 0 -and $m -gt 0) {\n        return \"{0}h{1}m\" -f $h, $m\n    } elseif ($h -gt 0) {\n        return \"{0}h\" -f $h\n    } else {\n        return \"{0}m\" -f $m\n    }\n}\n\nfunction Self-Test {\n    try {\n        $mode = Get-CurrentEnergyMode\n        Ensure-ModeStats($mode)\n        $ModeStats[$mode].TotalModeTime += (New-TimeSpan -Seconds 5)\n        Test-Process-Functions\n        \n    } catch {\n        Write-Host \"Self-test failed: $($_.Exception.Message)\"\n        exit 1\n    }\n}\n\nfunction Test-Process-Functions {\n    $s = Get-ProcessStats\n    $t = Get-Date\n    $diff = Get-ProcessDiff $s $t\n    $table = Format-ProcessDiffTable $diff\n}\n\nfunction Run-CargoClean {\n    $start = Get-Date\n    $output = & cargo clean 2>&1\n    $exit = $LASTEXITCODE\n    $elapsed = (Get-Date) - $start\n    return [PSCustomObject]@{\n        Output = $output\n        Success = ($exit -eq 0)\n        Elapsed = $elapsed\n    }\n}\n\nfunction Run-CargoBuild {\n    $start = Get-Date\n    $output = & cargo build @CargoArgs 2>&1\n    $exit = $LASTEXITCODE\n    $elapsed = (Get-Date) - $start\n    return [PSCustomObject]@{\n        Output = $output\n        Success = ($exit -eq 0)\n        Elapsed = $elapsed\n    }\n}\n\n# Logging Functions\nfunction Write-And-LogSummary {\n    param([string]$Line)\n    Write-Host $Line\n    Add-Content $SummaryLogPath $Line\n    Add-Content $FullLogPath $Line\n}\n\nfunction Write-FullOnly {\n    param([string]$FullOutput)\n    Add-Content $FullLogPath $FullOutput\n}\n\n# Function to get current energy mode\nfunction Get-CurrentEnergyMode {\n    $battery = Get-BatteryStatus\n    $schemeName = Get-PowerSchemeName\n    $powerSource = if ($battery.OnAC) { \"ac\" } else { \"battery\" }\n    $modeName = ($schemeName -replace '\\s+', '-').ToLower()\n\n    return \"$powerSource-$modeName\"\n}\n\n\nfunction Get-RAMUsage {\n    try {\n        $os = Get-CimInstance Win32_OperatingSystem\n        if ($os.TotalVisibleMemorySize -gt 0) {\n            return [math]::Round((($os.TotalVisibleMemorySize - $os.FreePhysicalMemory) / $os.TotalVisibleMemorySize) * 100, 0)\n        }\n        return \"N/A\"\n    } catch {\n        return \"N/A\"\n    }\n}\n\nfunction Get-ProcessStats {\n    param([int]$MinProcessCPUSeconds = 10)\n    Get-Process | Where-Object {\n        $_.CPU -gt $MinProcessCPUSeconds\n    } | ForEach-Object {\n        @{\n            Name = $_.ProcessName\n            CPU = $_.CPU\n            WorkingSet = $_.WorkingSet64\n            Threads = $_.Threads.Count\n            Handles = $_.HandleCount\n            ID = if ($_.Id) { $_.Id } else { \"unknown\" }\n        }\n    }\n}\n\nfunction Get-ProcessDiff {\n    param([Array]$previous, [DateTime]$previousTaken)\n    \n    $current = Get-ProcessStats\n    $currentTaken = (Get-Date)\n    $diff = @()\n    $totalCpuDelta = 0\n    \n    foreach ($proc in $current) {\n        $prevProc = $previous | Where-Object { $_.ID -eq $proc.ID }\n        $cpuDelta = if ($prevProc) { $proc.CPU - $prevProc.CPU } else { $proc.CPU }\n\n        $totalCpuDelta += $cpuDelta\n        if ($cpuDelta -gt 0) {\n            $diff += @{\n                Name = $proc.Name\n                CPUDelta = $cpuDelta\n                CurrentCPU = $proc.CPU\n                WorkingSet = $proc.WorkingSet\n                ID = $proc.ID\n            }\n        }\n    }\n\n    $percentCpuDelta = $totalCpuDelta / ($currentTaken - $previousTaken).TotalSeconds\n    \n    return @{\n        CurrentProcesses = $current\n        CurrentTaken = $currentTaken\n        PreviousProcesses = $previous\n        PreviousTaken = $previousTaken\n        TotalCpuDelta = $totalCpuDelta\n        PercentCpuDelta = $percentCpuDelta\n        ElapsedTime = ($currentTaken - $previousTaken)\n        Changes = ($diff | Sort-Object -Property CPUDelta -Descending)\n    }\n}\n\nfunction Format-ProcessDiffTable {\n    param([PSCustomObject]$diff)\n    \n    if ($diff.TotalCpuDelta -eq 0) {\n        return \"No change to process cpu usage detected\"\n    }\n    # if percent cpu delta is less than 1%, then don't show it, unless ElapsedTime is under 10 minns\n    if ($diff.PercentCpuDelta -lt 1 -and $diff.ElapsedTime.TotalMinutes -gt 10) {\n        return \"Less than 1% overall CPU usage detected in long-running processes, skipping CPU table display\"\n    }\n\n    $totalCpuDelta = \"{0:N1}s\" -f $diff.TotalCpuDelta\n    $percentCpuDelta = \"{0:N1}%\" -f $diff.PercentCpuDelta\n    $timeDelta = Format-ShortTime $diff.ElapsedTime\n    \n    $text = \"CPU use $totalCpuDelta ($percentCpuDelta) over $timeDelta (among long-running processes), top 5:`r`n\"\n    $text += $diff.Changes | \n        Select-Object -First 5 | \n        ForEach-Object {\n            [PSCustomObject]@{\n                Name = $_.Name\n                CPUDelta = \"{0:N1}s\" -f $_.CPUDelta\n                Pct = \"{0:N1}%\" -f ($_.CPUDelta / $diff.ElapsedTime.TotalSeconds)\n                RAMMb = \"{0:N0}\" -f ($_.WorkingSet / 1MB)\n                PID = $_.ID\n            }\n        } | \n        Format-Table -Property @(\n            @{Label=\"NAME\"; Expression={$_.Name}; Align=\"Left\"},\n            @{Label=\"+CPU TIME\"; Expression={$_.CPUDelta}; Align=\"Right\"},\n            @{Label=\"% CPU\"; Expression={$_.Pct}; Align=\"Right\"},\n            @{Label=\"RAM MB\"; Expression={$_.RAMMb}; Align=\"Right\"},\n            @{Label=\"PID\"; Expression={$_.PID}; Align=\"Right\"}\n        ) -AutoSize | \n        Out-String\n\n    $text += \"`r`n\"\n    ## Now, a single liner with top RAM users\n    $text += \"Top RAM users: \" + ($diff.CurrentProcesses | Sort-Object -Property WorkingSet -Descending | Select-Object -First 5 | ForEach-Object { \"$($_.Name) ($($_.WorkingSet / 1MB) MB)\" } | Join-String -Separator \", \")\n    return $text\n}\n\nfunction Get-TopRAMUsersString {\n    return \"Top RAM users: \" + (Get-Process | Sort-Object -Property WorkingSet -Descending | Select-Object -First 5 | ForEach-Object { \"$($_.Name) ($($_.WorkingSet / 1MB) MB)\" } | Join-String -Separator \", \")\n}\n\nfunction Get-SystemStatusString {\n    $battery = Get-BatteryStatus\n    return \"battery $($battery.BatteryPercent)%, screen $(Get-ScreenBrightness), cpu speed $(Get-CPUSpeed), ram $(Get-RAMUsage)%\"\n}\n\n\n# Prevent sleep/display off\ntry {\n    Add-Type -Namespace SleepPreventer -Name Power -MemberDefinition @\"\n[System.Runtime.InteropServices.DllImport(\"kernel32.dll\", CharSet=System.Runtime.InteropServices.CharSet.Auto,SetLastError=true)]\npublic static extern System.UInt32 SetThreadExecutionState(System.UInt64 esFlags);\n\"@\n} catch {\n    Write-Host \"Failed to add SleepPreventer Power type.\"\n    exit 1\n}\n\n[uint64]$ES_CONTINUOUS = 2147483648\n[uint64]$ES_SYSTEM_REQUIRED = 1\n[uint64]$ES_DISPLAY_REQUIRED = 2\n\n# Set Energy Saver threshold to 0% at start\npowercfg /setdcvalueindex SCHEME_CURRENT SUB_ENERGYSAVER ESBATTTHRESHOLD 0\npowercfg /setactive SCHEME_CURRENT\nWrite-Host \"Setting Energy Saver to activate at 0% battery.\"\n\n# Register cleanup to restore Energy Saver threshold\n$cleanup = {\n    try {\n        powercfg /setdcvalueindex SCHEME_CURRENT SUB_ENERGYSAVER ESBATTTHRESHOLD 30\n        powercfg /setactive SCHEME_CURRENT\n        [SleepPreventer.Power]::SetThreadExecutionState($ES_CONTINUOUS) | Out-Null\n        Write-And-LogSummary \"Setting Energy Saver to activate at 30% battery.\"\n    } catch {\n        Write-Host \"Failed to restore Energy Saver settings: $_\"\n    }\n}\n\n# Suppress the output of Register-EngineEvent by piping to Out-Null\nRegister-EngineEvent PowerShell.Exiting -Action $cleanup | Out-Null\n\n# Prevent system sleep\n[SleepPreventer.Power]::SetThreadExecutionState($ES_CONTINUOUS -bor $ES_SYSTEM_REQUIRED -bor $ES_DISPLAY_REQUIRED) | Out-Null\n\nSelf-Test\n$ModeStats.Clear()\n\n# Initial System Metrics\n$batt = Get-BatteryStatus\n$initBattery = $batt\n$InitialBatteryPercent = $initBattery.BatteryPercent\n\n$initialLine = \"$(Get-Date -Format $displayTimeFormat) $(Get-CurrentEnergyMode), $(Get-SystemStatusString), sys uptime $(Get-SystemUptime)\"\nWrite-And-LogSummary $initialLine\nWrite-And-LogSummary \"Warning: 'balanced' may not be accurate, as powercfg /getactivescheme is a lying liar. Verify your power settings manually.\"\nWrite-And-LogSummary (Get-TopRAMUsersString)\n\n$logLine = \"Logs: $(Split-Path $FullLogPath -Leaf), $(Split-Path $SummaryLogPath -Leaf)\"\nWrite-And-LogSummary $logLine\n\n# Add these near the top with other global variables\n$LastProcessCheck = [DateTime]::MinValue\n$BaselineProcessStats = Get-ProcessStats\n$BaselineProcessCheck = Get-Date\n$ProcessCheckInterval = [TimeSpan]::FromMinutes(5)\n\n\n\ntry {\n    while (-not $StopLoop) {\n        $iterationStart = Get-Date\n        $CurrentEnergyMode = Get-CurrentEnergyMode\n        $currentScreenBrightness = Get-ScreenBrightness\n        \n\n        # Check for mode or screen brightness changes\n        if ($ModeStats.ContainsKey($CurrentEnergyMode)) {\n            $lastBrightness = $ModeStats[$CurrentEnergyMode].LastScreenBrightness\n            if ($lastBrightness -ne $currentScreenBrightness) {\n                Write-And-LogSummary \"=== Warning: Screen brightness changed from $lastBrightness to $currentScreenBrightness ===\"\n                $ModeStats[$CurrentEnergyMode].LastScreenBrightness = $currentScreenBrightness\n            }\n            \n            # Add mode change warning\n            if ($PreviousMode -and $PreviousMode -ne $CurrentEnergyMode) {\n                Write-And-LogSummary \"=== Warning: Power mode changed from $PreviousMode to $CurrentEnergyMode ===\"\n            }\n        }\n        $PreviousMode = $CurrentEnergyMode\n\n        Ensure-ModeStats($CurrentEnergyMode)\n        $ModeStats[$CurrentEnergyMode].LastScreenBrightness = $currentScreenBrightness\n\n        $cleanResult = Run-CargoClean\n        if (-not $cleanResult.Success) {\n            Write-And-LogSummary \"cargo clean failed, output:\"\n            foreach ($line in $cleanResult.Output) {\n                Write-And-LogSummary $line\n            }\n            $StopLoop = $true\n            break\n        }\n\n        $buildResult = Run-CargoBuild\n        if (-not $buildResult.Success) {\n            Write-And-LogSummary \"cargo build failed, output:\"\n            foreach ($line in $buildResult.Output) {\n                Write-And-LogSummary $line\n            }\n            $StopLoop = $true\n            break\n        }\n\n        $sleepStart = Get-Date\n        Start-Sleep -Seconds $PauseBetweenRuns\n        $sleepElapsed = (Get-Date) - $sleepStart\n\n        $iterationElapsed = (Get-Date) - $iterationStart\n\n        if ($iterationElapsed -gt $MaxAllowedIterationTime) {\n            Write-And-LogSummary \"Detected time jump (iteration took $($iterationElapsed.ToString())) - possibly slept. Exiting.\"\n            break\n        }\n\n        $TotalSleepTime += $sleepElapsed\n        $TotalCleanTime += $cleanResult.Elapsed\n        $TotalBuildTime += $buildResult.Elapsed\n\n        $ModeStats[$CurrentEnergyMode].TotalModeTime += $iterationElapsed\n        $ModeStats[$CurrentEnergyMode].TotalBuildTime += $buildResult.Elapsed\n        $ModeStats[$CurrentEnergyMode].TotalCleanTime += $cleanResult.Elapsed\n        $ModeStats[$CurrentEnergyMode].BuildCount += 1\n\n        $CompileCount++\n        $batt = Get-BatteryStatus\n\n        $buildLineObj = $buildResult.Output | Select-Object -Last 1\n        $lastBuildLine = if ($buildLineObj) { [string]$buildLineObj } else { \"\" }\n        $lastBuildLine = $lastBuildLine.Trim()\n\n        $totalElapsed = (Get-Date) - $GlobalScriptStart\n        $otherTime = $totalElapsed - ($TotalBuildTime + $TotalCleanTime + $TotalSleepTime)\n        $otherTimeStr = Format-ShortTime $otherTime\n\n        $totalBuildStr = Format-ShortTime $TotalBuildTime\n        $totalCleanStr = Format-ShortTime $TotalCleanTime\n        $totalSleepStr = Format-ShortTime $TotalSleepTime\n\n        $batteryDrop = $InitialBatteryPercent - $batt.BatteryPercent\n        $batteryDropFloat = [double]$batteryDrop\n        $currentTimestamp = (Get-Date -Format $displayTimeFormat)\n        $runCountStr = $CompileCount\n\n        \n        $overallLine = \"$currentTimestamp, run $runCountStr, $CurrentEnergyMode, $(Get-SystemStatusString), total build $totalBuildStr, clean $totalCleanStr, sleep $totalSleepStr, other $otherTimeStr\"\n        Write-And-LogSummary $overallLine\n\n        $secondLine = \"   Sleeping ${PauseBetweenRuns}s between builds. $lastBuildLine\"\n        Write-And-LogSummary $secondLine\n\n        # Show battery drop stats only if on battery\n        $showBatteryDropStats = (-not $batt.OnAC) -and ($batteryDropFloat -gt 0)\n\n        foreach ($modeKey in $ModeStats.Keys) {\n            $m = $ModeStats[$modeKey]\n            $avgBuild = \"N/A\"\n            $avgClean = \"N/A\"\n            if ($m.BuildCount -gt 0) {\n                $avgBuildSec = $m.TotalBuildTime.TotalSeconds / $m.BuildCount\n                $avgBuild = (\"{0:F1}s\" -f $avgBuildSec)\n                $avgCleanSec = $m.TotalCleanTime.TotalSeconds / $m.BuildCount\n                $avgClean = (\"{0:F1}s\" -f $avgCleanSec)\n            }\n\n            $buildsPerDrop = \"N/A\"\n            $buildTimePerDrop = \"N/A\"\n            $wallPerDrop = \"N/A\"\n            $timeFor70Drop = \"N/A\"\n            if ($showBatteryDropStats -and $batteryDropFloat -ne 0) {\n                $buildsPerDropVal = $m.BuildCount / $batteryDropFloat\n                $buildsPerDrop = (\"{0:F2}\" -f $buildsPerDropVal)\n\n                $buildTimePerDropVal = $m.TotalBuildTime.TotalSeconds / $batteryDropFloat\n                $buildTimePerDrop = (\"{0:F0}s\" -f $buildTimePerDropVal)\n\n                $wallPerDropVal = $m.TotalModeTime.TotalSeconds / $batteryDropFloat\n                $wallPerDrop = (\"{0:F0}s\" -f $wallPerDropVal)\n\n                # 70% drop wall estimate\n                $wallFor70PctSec = ($m.TotalModeTime.TotalSeconds / $batteryDropFloat) * 70\n                $wallFor70Pct = [TimeSpan]::FromSeconds($wallFor70PctSec)\n                $timeFor70Drop = Format-HoursMinutes $wallFor70Pct\n            }\n\n            $modeLine = \"   On $($m.Mode) for $(Format-ShortTime $m.TotalModeTime), avg build $avgBuild, avg clean $avgClean\"\n            if ($showBatteryDropStats -and $batteryDropFloat -ne 0) {\n                $modeLine += \", est. builds per % drop: $buildsPerDrop, build time per %: $buildTimePerDrop, wall per %: $wallPerDrop, est. $timeFor70Drop to drop 70% based on $batteryDropFloat% over $(Format-ShortTime $m.TotalModeTime)\"\n            }\n            Write-And-LogSummary $modeLine\n        }\n\n        # Write cargo outputs to full log only\n        $fullOutput = \"=== Iteration $CompileCount ===`r`n\" +\n                      \"--- Cargo clean output ---`r`n\" + ($cleanResult.Output -join \"`r`n\") + \"`r`n\" +\n                      \"--- Cargo build output ---`r`n\" + ($buildResult.Output -join \"`r`n\") + \"`r`n\"\n        Write-FullOnly $fullOutput\n\n        if (((Get-Date) - $LastProcessCheck) -gt $ProcessCheckInterval -or $CompileCount -eq 1) {\n            $diff = Get-ProcessDiff $BaselineProcessStats $BaselineProcessCheck\n            $table = Format-ProcessDiffTable $diff\n            Write-And-LogSummary $table\n            $LastProcessCheck = Get-Date\n        }\n    }\n} finally {\n    # Cleanup actions\n    $cleanup.Invoke()\n    Write-And-LogSummary \"Script ended.\"\n}\n"
        },
        {
          "name": "rustfmt.toml",
          "type": "blob",
          "size": 0.044921875,
          "content": "format_strings = false\nreorder_imports = true\n"
        },
        {
          "name": "valgrind_existing.sh",
          "type": "blob",
          "size": 3.3701171875,
          "content": "#!/bin/bash\nset -e #Exit on failure.\n\nVALGRIND_ARGS=\"-q --error-exitcode=9 --gen-suppressions=all\"\n\n\nTEST_BINARIES_TARGET=\"${TARGET_DIR:-target/}\"\n\n# Valgrind script args, or fallback to discovering them in ./target/release\nTEST_BINARIES=(\"$@\")\n\nprintf \"%s valgrind_existing.sh \" \"$(date '+[%H:%M:%S]')\"\n\nif [ \"$#\" -lt 1 ]; then\n\t# Remove old grind folders; they're going to be a problem with discovery\n\t(\n\t\tcd \"./${TEST_BINARIES_TARGET}release\"\n\t\tfind . -type d -name 'grind_*' -exec rm -rf {} +\n\t)\n\tshopt -s nullglob\n\tTEST_BINARIES=(./${TEST_BINARIES_TARGET}release/deps/imageflow*-[a-f0-9][a-f0-9][a-f0-9][a-f0-9][a-f0-9][a-f0-9][a-f0-9][a-f0-9][a-f0-9][a-f0-9][a-f0-9][a-f0-9][a-f0-9][a-f0-9][a-f0-9][a-f0-9])\n\tshopt -u nullglob\n\tprintf \"discovered binaries:\\n\"\nelse\n\tprintf \"passed arguments:\\n\"\nfi\nprintf \"%s\\n\" \"${TEST_BINARIES[@]}\"\n#echo \"${TEST_BINARIES[@]}\"\n\n# Sometimes we may need to exclude binaries\n#SKIP_BINARIES=()\n\n# valgrind breaks OpenSSL, so we can't test the server right now\n# imageflow_helpers and imageflow_types uses Regex, which valgrind causes to segfault\n# imageflow_riapi takes years to run under valgrind\n# Neither uses unsafe code\nSKIP_BINARIES+=(\"$(ls ./\"${TEST_BINARIES_TARGET}\"release/test_ir4* || true )\")\nSKIP_BINARIES+=(\"$(ls ./\"${TEST_BINARIES_TARGET}\"release/*imageflow_helpers* || true )\")\nSKIP_BINARIES+=(\"$(ls ./\"${TEST_BINARIES_TARGET}\"release/*imageflow_riapi* || true )\")\nSKIP_BINARIES+=(\"$(ls ./\"${TEST_BINARIES_TARGET}\"release/*imageflow_types* || true )\")\nSKIP_BINARIES+=(\"$(ls ./\"${TEST_BINARIES_TARGET}\"release/bench_graphics* || true )\")\n\nfunction join_by { local IFS=\"$1\"; shift; echo \"$*\"; }\nSKIP_BINARIES_STR=\"$(join_by \" \" \"${SKIP_BINARIES[@]}\")\"\nSKIP_BINARIES_STR=\" $SKIP_BINARIES_STR \"\necho \"Should skip: ${SKIP_BINARIES_STR}\"\n\n\n# If we're running as 'imageflow' (we assume this indicates we are in a docker container)\n# Then we need to also change permissions so that .valgrindrc is respected\n# It cannot be world-writable, and should be owned by the current user (according to valgrind)\nexport CHOWN_VALGRIND_FILE_IF_USER_IS=\"${CHOWN_VALGRIND_FILE_IF_USER_IS:-imageflow}\"\n\ncreate_valgrind_files_in()(\n\t(\n\t\tSCRIPT_DIR=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" && pwd )\"\n\n\t\tcd \"$1\"\n\t\tFILE_NAMES=(\".valgrindrc\" \"valgrind_suppressions.txt\")\n\t\tfor f in \"${FILE_NAMES[@]}\"\n\t\tdo\n\t\t\tcp \"${SCRIPT_DIR}/${f}\" \"./${f}\"\n\t\t\tif [[ \"$(id -u -n)\" == \"${CHOWN_VALGRIND_FILE_IF_USER_IS}\" ]]; then\n\t\t\t\tsudo chown \"${CHOWN_VALGRIND_FILE_IF_USER_IS}:\" \"./${f}\"\n\t\t\t\tsudo chmod o-w \"./${f}\"\n\t\t\tfi\n\t\tdone\t\n\t)\n)\n\n\nprint_modified_ago(){\n     echo \"Modified\" $(( $(date +%s) - $(stat -c%Y \"$1\") )) \"seconds ago\"\n}\n\nfor f in \"${TEST_BINARIES[@]}\"\ndo\n\tprintf \"\\n==============================================================\\n%s %s\\n\" \"$(date '+[%H:%M:%S]')\" \"$f\"\n\tif [[ \"$SKIP_BINARIES_STR\" == *\"${f}\"* ]]; then\n\t\techo \"SKIPPING\"\n\telse\n\t  print_modified_ago \"$f\"\n\t  \n\n\t  REL_F=$(basename \"${f}\")\n\t  DIR=$(dirname \"${f}\")\n\t  DIR=\"${DIR}/valgrind_${REL_F}_temp\"\n\t  mkdir -p \"${DIR}\" || true\n\n\t  create_valgrind_files_in \"$DIR\"\n\n\t  FULL_COMMAND=\"(cd $DIR && valgrind $VALGRIND_ARGS ../$REL_F)\"\n\t  printf \"\\n%s\\n\" \"$FULL_COMMAND\"\n\n\t  export VALGRIND_RUNNING=1\n\t  export RUST_BACKTRACE=1\n\t  export RUST_TEST_TASKS=1 \n\t  eval \"$FULL_COMMAND\"\n\n\t  echo \"Removing ${DIR}\"\n\t  rm -rf \"${DIR}\" || true\n\n\tfi\ndone\n\nprintf \"\\n%s Completed valgrind_existing.sh (\" \"$(date '+[%H:%M:%S]')\"\nprintf \"%s \" \"${TEST_BINARIES[@]}\"\nprintf \")\\n\"\n"
        },
        {
          "name": "valgrind_suppressions.txt",
          "type": "blob",
          "size": 2.7216796875,
          "content": "\n{\n   Rust reads terminal information from disk; Valgrind sees this as uninitialized memory\n   Memcheck:Cond\n   ...\n   fun:*TerminfoTerminal*\n   ...\n}\n{\n   Rust reads terminal information from disk; Valgrind sees this as uninitialized memory\n   Memcheck:Cond\n   ...\n   fun:*TermInfo*\n   ...\n}\n\n{\n   Don't show uninit issues inside cargo\n   Memcheck:Cond\n   ...\n   obj: */rustc\n   ...\n}\n\n{\n   Don't show uninit issues inside cargo\n   Memcheck:Cond\n   ...\n   obj: */cargo\n   ...\n}\n{\n   Rustup also reads things valgrind thinks are uninitialized. Rustup used in many binaries.\n   Memcheck:Cond\n   ...\n   fun:*rustup_init*\n   ...\n}\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Cond\n   ...\n   fun:*cargo_compile*\n   ...\n}\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Cond\n   ...\n   fun:*cargo_rustc*\n   ...\n}\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Cond\n   ...\n   fun:*cargo?main*\n   ...\n}\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Cond\n   ...\n   fun:*cargo?process*\n   ...\n}\n{\n   Rustdoc compiles tests; we can't block the process, though, since it's parent to the actual code.\n   Memcheck:Cond\n   ...\n   fun:*rustc_driver*\n   ...\n}\n{\n   Rustdoc compiles tests; we can't block the process, though, since it's parent to the actual code.\n   Memcheck:Cond\n   ...\n   fun:*rustc_trans*\n   ...\n}\n\n{\n   Rust test harness\n   Memcheck:Leak\n   match-leak-kinds: possible\n   fun:calloc\n   fun:allocate_dtv\n   fun:_dl_allocate_tls\n   fun:allocate_stack\n   ...\n}\n\n{\n   Rust test harness\n   Memcheck:Leak\n   ...\n   fun:allocate_stack\n   ...\n}\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Cond\n   fun:_ZN5regex4exec11ExecBuilder5build17hd0deb98f11b8ee35E\n   ...\n}\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Cond\n   ...\n   fun:_ZN5cargo3ops7resolve21resolve_with_previous17h35c94e6aca658849E\n}\n\n\n\n{\n   Our test runner isn't the most careful\n   Memcheck:Cond\n   fun:_ZNK5Catch12TestRegistry17getAllTestsSortedERKNS_7IConfigE\n   fun:_ZN5Catch8runTestsERKNS_3PtrINS_6ConfigEEE\n   fun:main\n}\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Cond\n   fun:*getAllTestCasesSorted*\n   ...\n}\n\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Leak\n   match-leak-kinds: definite\n   ...\n   fun:*Catch*CompositeGenerator*\n   ...\n}\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Leak\n   match-leak-kinds: definite\n   ...\n   fun:*Catch*getGeneratorIndex*\n   ...\n}\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Cond\n   ...\n   fun:*getAllTestCasesSorted*\n   ...\n}\n\n\n{\n   Reported to https://github.com/glennrp/libpng/issues/97\n   Memcheck:Cond\n   fun:fill_window\n   fun:deflate_fast\n   fun:deflate\n   ...\n}\n\n{\n   See http://zlib.net/zlib_faq.html#faq36\n   Memcheck:Cond\n   fun:slide_hash\n   fun:fill_window\n   fun:deflate_fast\n   fun:deflate\n   fun:png_compress_IDAT\n   ...\n}\n"
        },
        {
          "name": "win_enter_env.bat",
          "type": "blob",
          "size": 0.2060546875,
          "content": "\nREM To target 64-bit, use this:\nREM %COMSPEC% /c \"\"ci\\wintools\\SETUP_PATH.bat\"\"\n\nREM To target 32-bit, use this:\nREM %COMSPEC% /c \"\"ci\\wintools\\SETUP_PATH.bat\" x86\"\n\n%COMSPEC% /c \"\"ci\\wintools\\SETUP_PATH.bat\"\"\n"
        }
      ]
    }
  ]
}