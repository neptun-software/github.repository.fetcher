{
  "metadata": {
    "timestamp": 1736708999187,
    "page": 60,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjYw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "cloud-hypervisor/cloud-hypervisor",
      "stars": 4201,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0927734375,
          "content": "/build\n/.cargo\n/target\n**/*.rs.bk\n**/Cargo.lock\n**/rusty-tags.vi\n/rpm/SOURCES\n/.vscode\n/vendor\n"
        },
        {
          "name": ".gitlint",
          "type": "blob",
          "size": 0.2177734375,
          "content": "[general]\nextra-path=scripts/gitlint/rules.py\nregex-style-search=true\n\n[ignore-by-author-name]\nregex=dependabot\nignore=all\n\n# default 72\n[title-max-length]\nline-length=72\n\n# default 80\n[body-max-line-length]\nline-length=72\n"
        },
        {
          "name": ".reuse",
          "type": "tree",
          "content": null
        },
        {
          "name": ".rustfmt.toml",
          "type": "blob",
          "size": 0.078125,
          "content": "edition = \"2021\"\ngroup_imports=\"StdExternalCrate\"\nimports_granularity=\"Module\"\n\n"
        },
        {
          "name": ".taplo.toml",
          "type": "blob",
          "size": 0.08203125,
          "content": "include = [\"**/Cargo.toml\"]\n\n[formatting]\nreorder_arrays = true\nreorder_keys = true\n"
        },
        {
          "name": ".typos.toml",
          "type": "blob",
          "size": 0.357421875,
          "content": "# Configuration for https://github.com/crate-ci/typos\n\n[files]\nextend-exclude = [\n    \"hypervisor/src/kvm/x86_64/mod.rs\",\n    \"resources/linux-config-*\",\n]\n\n[default.extend-words]\nba = \"ba\"\nCLASSE = \"CLASSE\"\nconectix = \"conectix\"\nDake = \"Dake\"\nEXTINT = \"EXTINT\"\nINOUT = \"INOUT\"\nliness = \"liness\"\noutout = \"outout\"\n\n[default.extend-identifiers]\nfo = \"fo\"\nfpr = \"fpr\"\n"
        },
        {
          "name": "CODEOWNERS",
          "type": "blob",
          "size": 0.111328125,
          "content": "# Add the list of code owners here (using their GitHub username)\r\n* @cloud-hypervisor/cloud-hypervisor-reviewers\r\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.13671875,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, as\ncontributors and maintainers we pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, gender identity and expression, level of experience,\nnationality, personal appearance, race, religion, or sexual identity and\norientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude but is not limited to:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\n  advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n  address without explicit consent\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at otc.community@intel.com. All complaints\nwill be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at: https://www.contributor-covenant.org/version/1/4/code-of-conduct/\n\n[homepage]: https://www.contributor-covenant.org\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 4.2294921875,
          "content": "# Contributing to Cloud Hypervisor\n\nCloud Hypervisor is an open source project licensed under the [Apache v2\nLicense](https://opensource.org/licenses/Apache-2.0) and the [BSD 3\nClause](https://opensource.org/licenses/BSD-3-Clause) license. Individual files\ncontain details of their licensing and changes to that file are under the same\nlicense unless the contribution changes the license of the file. When importing\ncode from a third party project (e.g. Firecracker or crosvm) please respect the\nlicense of those projects.\n\nNew code should be under the [Apache v2\nLicense](https://opensource.org/licenses/Apache-2.0).\n\n## Coding Style\n\nWe follow the [Rust Style](https://github.com/rust-dev-tools/fmt-rfcs/blob/master/guide/guide.md)\nconvention and enforce it through the Continuous Integration (CI) process calling into `rustfmt`\nfor each submitted Pull Request (PR).\n\n## Basic Checks\n\nPlease consider creating the following hook as `.git/hooks/pre-commit` in order\nto ensure basic correctness of your code. You can extend this further if you\nhave specific features that you regularly develop against.\n\n```sh\n#!/bin/sh\n\ncargo fmt -- --check || exit 1\ncargo check --locked --all --all-targets --tests || exit 1\ncargo clippy --locked --all --all-targets --tests -- -D warnings || exit 1\n```\n\nYou will need to `chmod +x .git/hooks/pre-commit` to have it run on every\ncommit you make.\n\n## Certificate of Origin\n\nIn order to get a clear contribution chain of trust we use the [signed-off-by language](https://01.org/community/signed-process)\nused by the Linux kernel project.\n\n## Patch format\n\nBeside the signed-off-by footer, we expect each patch to comply with the following format:\n\n```\n<component>: Change summary\n\nMore detailed explanation of your changes: Why and how.\nWrap it to 72 characters.\nSee http://chris.beams.io/posts/git-commit/\nfor some more good pieces of advice.\n\nSigned-off-by: <contributor@foo.com>\n```\n\nFor example:\n\n```\nvm-virtio: Reset underlying device on driver request\n    \nIf the driver triggers a reset by writing zero into the status register\nthen reset the underlying device if supported. A device reset also\nrequires resetting various aspects of the queue.\n    \nIn order to be able to do a subsequent reactivate it is required to\nreclaim certain resources (interrupt and queue EventFDs.) If a device\nreset is requested by the driver but the underlying device does not\nsupport it then generate an error as the driver would not be able to\nconfigure it anyway.\n    \nSigned-off-by: Rob Bradford <robert.bradford@intel.com>\n```\n\n## Pull requests\n\nCloud Hypervisor uses the “fork-and-pull” development model. Follow these steps if\nyou want to merge your changes to `cloud-hypervisor`:\n\n1. Fork the [cloud-hypervisor](https://github.com/cloud-hypervisor/cloud-hypervisor) project\n   into your github organization.\n2. Within your fork, create a branch for your contribution.\n3. [Create a pull request](https://help.github.com/articles/creating-a-pull-request-from-a-fork/)\n   against the main branch of the Cloud Hypervisor repository.\n4. To update your pull request amend existing commits whenever applicable and\n   then push the new changes to your pull request branch.\n5. Once the pull request is approved it can be integrated.\n\n## Issue tracking\n\nIf you have a problem, please let us know. We recommend using\n[github issues](https://github.com/cloud-hypervisor/cloud-hypervisor/issues/new) for formally\nreporting and documenting them.\n\nTo quickly and informally bring something up to us, you can also reach out on [Slack](https://cloud-hypervisor.slack.com).\n\n## Closing issues\n\nYou can either close issues manually by adding the fixing commit SHA1 to the issue\ncomments or by adding the `Fixes` keyword to your commit message:\n\n```\nserial: Set terminal in raw mode\n    \nIn order to have proper output from the serial, we need to setup the\nterminal in raw mode. When the VM is shutting down, it is also the\nVMM responsibility to set the terminal back into canonical mode if we\ndon't want to get any weird behavior from the shell.\n    \nFixes #88\n\t\nSigned-off-by: Sebastien Boeuf <sebastien.boeuf@intel.com>\n```\n\nThen, after the corresponding PR is merged, GitHub will automatically close that issue when parsing the\n[commit message](https://help.github.com/articles/closing-issues-via-commit-messages/).\n"
        },
        {
          "name": "CREDITS.md",
          "type": "blob",
          "size": 1.146484375,
          "content": "# Cloud Hypervisor Credits and Thanks\n\nThe Cloud Hypervisor code is based on the [rust-vmm](https://github.com/rust-vmm), [Firecracker](https://firecracker-microvm.github.io/) and [crosvm](https://chromium.googlesource.com/chromiumos/platform/crosvm/)\nprojects implementations.\n\nOur thanks go to the contributors of those projects:\n\n## crosvm\n\n* [Zach Reizner](https://github.com/zachreizner) <zachr@chromium.org>\n* [Dylan Reid](https://github.com/dgreid) <dgreid@chromium.org>\n* [Daniel Verkamp](https://github.com/danielverkamp) <dverkamp@chromium.org>\n* [Stephen Barber](https://github.com/smibarber) <smbarber@chromium.org>\n* [Chirantan Ekbote](https://github.com/jynnantonix) <chirantan@chromium.org>\n* [Jason D. Clinton](https://github.com/jclinton) <jclinton@chromium.org>\n* Sonny Rao <sonnyrao@chromium.org>\n\n## Firecracker\n\nSee the [Firecracker CREDITS](https://github.com/firecracker-microvm/firecracker/blob/master/CREDITS.md).\n\n## rust-vmm\n\n* [Andreea Florescu](https://github.com/andreeaflorescu) <<fandree@amazon.com>>\n* [Paolo Bonzini](https://github.com/zachreizner) <pbonzini@redhat.com>\n* [Jiang Liu](https://github.com/jiangliu) <gerry@linux.alibaba.com>\n"
        },
        {
          "name": "Cargo.lock",
          "type": "blob",
          "size": 66.9375,
          "content": "# This file is automatically @generated by Cargo.\n# It is not intended for manual editing.\nversion = 3\n\n[[package]]\nname = \"acpi_tables\"\nversion = \"0.1.0\"\nsource = \"git+https://github.com/rust-vmm/acpi_tables?branch=main#e268627630839bd22f1c13e7e81ec70c7e9b73d6\"\ndependencies = [\n \"zerocopy 0.7.35\",\n]\n\n[[package]]\nname = \"addr2line\"\nversion = \"0.24.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dfbe277e56a376000877090da837660b4427aad530e3028d44e0bffe4f89a1c1\"\ndependencies = [\n \"gimli\",\n]\n\n[[package]]\nname = \"adler2\"\nversion = \"2.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"512761e0bb2578dd7380c6baaa0f4ce03e84f95e960231d1dec8bf4d7d6e2627\"\n\n[[package]]\nname = \"aho-corasick\"\nversion = \"1.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8e60d3430d3a69478ad0993f19238d2df97c507009a52b3c10addcd7f6bcb916\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"anstream\"\nversion = \"0.6.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"64e15c1ab1f89faffbf04a634d5e1962e9074f2741eef6d97f3c4e322426d526\"\ndependencies = [\n \"anstyle\",\n \"anstyle-parse\",\n \"anstyle-query\",\n \"anstyle-wincon\",\n \"colorchoice\",\n \"is_terminal_polyfill\",\n \"utf8parse\",\n]\n\n[[package]]\nname = \"anstyle\"\nversion = \"1.0.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1bec1de6f59aedf83baf9ff929c98f2ad654b97c9510f4e70cf6f661d49fd5b1\"\n\n[[package]]\nname = \"anstyle-parse\"\nversion = \"0.2.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3b2d16507662817a6a20a9ea92df6652ee4f94f914589377d69f3b21bc5798a9\"\ndependencies = [\n \"utf8parse\",\n]\n\n[[package]]\nname = \"anstyle-query\"\nversion = \"1.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6d36fc52c7f6c869915e99412912f22093507da8d9e942ceaf66fe4b7c14422a\"\ndependencies = [\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"anstyle-wincon\"\nversion = \"3.0.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2109dbce0e72be3ec00bed26e6a7479ca384ad226efdd66db8fa2e3a38c83125\"\ndependencies = [\n \"anstyle\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"anyhow\"\nversion = \"1.0.94\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c1fd03a028ef38ba2276dce7e33fcd6369c158a1bca17946c4b1b701891c1ff7\"\n\n[[package]]\nname = \"api_client\"\nversion = \"0.1.0\"\ndependencies = [\n \"thiserror 2.0.6\",\n \"vmm-sys-util\",\n]\n\n[[package]]\nname = \"arc-swap\"\nversion = \"1.7.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"69f7f8c3906b62b754cd5326047894316021dcfe5a194c8ea52bdd94934a3457\"\n\n[[package]]\nname = \"arch\"\nversion = \"0.1.0\"\ndependencies = [\n \"anyhow\",\n \"byteorder\",\n \"fdt\",\n \"hypervisor\",\n \"libc\",\n \"linux-loader\",\n \"log\",\n \"serde\",\n \"thiserror 2.0.6\",\n \"uuid\",\n \"vm-fdt\",\n \"vm-memory\",\n \"vm-migration\",\n \"vmm-sys-util\",\n]\n\n[[package]]\nname = \"async-broadcast\"\nversion = \"0.7.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"20cd0e2e25ea8e5f7e9df04578dc6cf5c83577fd09b1a46aaf5c85e1c33f2a7e\"\ndependencies = [\n \"event-listener\",\n \"event-listener-strategy\",\n \"futures-core\",\n \"pin-project-lite\",\n]\n\n[[package]]\nname = \"async-channel\"\nversion = \"2.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9f2776ead772134d55b62dd45e59a79e21612d85d0af729b8b7d3967d601a62a\"\ndependencies = [\n \"concurrent-queue\",\n \"event-listener\",\n \"event-listener-strategy\",\n \"futures-core\",\n \"pin-project-lite\",\n]\n\n[[package]]\nname = \"async-executor\"\nversion = \"1.11.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b10202063978b3351199d68f8b22c4e47e4b1b822f8d43fd862d5ea8c006b29a\"\ndependencies = [\n \"async-task\",\n \"concurrent-queue\",\n \"fastrand\",\n \"futures-lite\",\n \"slab\",\n]\n\n[[package]]\nname = \"async-fs\"\nversion = \"2.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ebcd09b382f40fcd159c2d695175b2ae620ffa5f3bd6f664131efff4e8b9e04a\"\ndependencies = [\n \"async-lock\",\n \"blocking\",\n \"futures-lite\",\n]\n\n[[package]]\nname = \"async-io\"\nversion = \"2.3.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0d6baa8f0178795da0e71bc42c9e5d13261aac7ee549853162e66a241ba17964\"\ndependencies = [\n \"async-lock\",\n \"cfg-if\",\n \"concurrent-queue\",\n \"futures-io\",\n \"futures-lite\",\n \"parking\",\n \"polling\",\n \"rustix\",\n \"slab\",\n \"tracing\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"async-lock\"\nversion = \"3.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ff6e472cdea888a4bd64f342f09b3f50e1886d32afe8df3d663c01140b811b18\"\ndependencies = [\n \"event-listener\",\n \"event-listener-strategy\",\n \"pin-project-lite\",\n]\n\n[[package]]\nname = \"async-process\"\nversion = \"2.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"63255f1dc2381611000436537bbedfe83183faa303a5a0edaf191edef06526bb\"\ndependencies = [\n \"async-channel\",\n \"async-io\",\n \"async-lock\",\n \"async-signal\",\n \"async-task\",\n \"blocking\",\n \"cfg-if\",\n \"event-listener\",\n \"futures-lite\",\n \"rustix\",\n \"tracing\",\n]\n\n[[package]]\nname = \"async-recursion\"\nversion = \"1.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3b43422f69d8ff38f95f1b2bb76517c91589a924d1559a0e935d7c8ce0274c11\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"async-signal\"\nversion = \"0.2.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"637e00349800c0bdf8bfc21ebbc0b6524abea702b0da4168ac00d070d0c0b9f3\"\ndependencies = [\n \"async-io\",\n \"async-lock\",\n \"atomic-waker\",\n \"cfg-if\",\n \"futures-core\",\n \"futures-io\",\n \"rustix\",\n \"signal-hook-registry\",\n \"slab\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"async-task\"\nversion = \"4.7.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8b75356056920673b02621b35afd0f7dda9306d03c79a30f5c56c44cf256e3de\"\n\n[[package]]\nname = \"async-trait\"\nversion = \"0.1.85\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3f934833b4b7233644e5848f235df3f57ed8c80f1528a26c3dfa13d2147fa056\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"atomic-waker\"\nversion = \"1.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1505bd5d3d116872e7271a6d4e16d81d0c8570876c8de68093a09ac269d8aac0\"\n\n[[package]]\nname = \"autocfg\"\nversion = \"1.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0c4b4d0bd25bd0b74681c0ad21497610ce1b7c91b1022cd21c80c6fbdd9476b0\"\n\n[[package]]\nname = \"backtrace\"\nversion = \"0.3.74\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8d82cb332cdfaed17ae235a638438ac4d4839913cc2af585c3c6746e8f8bee1a\"\ndependencies = [\n \"addr2line\",\n \"cfg-if\",\n \"libc\",\n \"miniz_oxide\",\n \"object\",\n \"rustc-demangle\",\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"bitfield-struct\"\nversion = \"0.7.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6c2ce686adbebce0ee484a502c440b4657739adbad65eadf06d64f5816ee9765\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"bitflags\"\nversion = \"1.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bef38d45163c2f1dde094a7dfd33ccf595c92905c8f8f4fdc18d06fb1037718a\"\n\n[[package]]\nname = \"bitflags\"\nversion = \"2.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b048fb63fd8b5923fc5aa7b340d8e156aec7ec02f0c78fa8a6ddc2613f6f71de\"\n\n[[package]]\nname = \"block\"\nversion = \"0.1.0\"\ndependencies = [\n \"byteorder\",\n \"crc-any\",\n \"io-uring\",\n \"libc\",\n \"log\",\n \"remain\",\n \"serde\",\n \"smallvec\",\n \"thiserror 2.0.6\",\n \"uuid\",\n \"virtio-bindings\",\n \"virtio-queue\",\n \"vm-memory\",\n \"vm-virtio\",\n \"vmm-sys-util\",\n]\n\n[[package]]\nname = \"block-buffer\"\nversion = \"0.10.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3078c7629b62d3f0439517fa394996acacc5cbc91c5a20d8c658e77abd503a71\"\ndependencies = [\n \"generic-array\",\n]\n\n[[package]]\nname = \"blocking\"\nversion = \"1.6.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"703f41c54fc768e63e091340b424302bb1c29ef4aa0c7f10fe849dfb114d29ea\"\ndependencies = [\n \"async-channel\",\n \"async-task\",\n \"futures-io\",\n \"futures-lite\",\n \"piper\",\n]\n\n[[package]]\nname = \"bumpalo\"\nversion = \"3.16.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"79296716171880943b8470b5f8d03aa55eb2e645a4874bdbb28adb49162e012c\"\n\n[[package]]\nname = \"byteorder\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1fd0f2584146f6f2ef48085050886acf353beff7305ebd1ae69500e27c67f64b\"\n\n[[package]]\nname = \"cc\"\nversion = \"1.0.99\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"96c51067fd44124faa7f870b4b1c969379ad32b2ba805aa959430ceaa384f695\"\n\n[[package]]\nname = \"cfg-if\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd\"\n\n[[package]]\nname = \"cfg_aliases\"\nversion = \"0.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"613afe47fcd5fac7ccf1db93babcb082c5994d996f20b8b159f2ad1658eb5724\"\n\n[[package]]\nname = \"clap\"\nversion = \"4.5.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0fbb260a053428790f3de475e304ff84cdbc4face759ea7a3e64c1edd938a7fc\"\ndependencies = [\n \"clap_builder\",\n]\n\n[[package]]\nname = \"clap_builder\"\nversion = \"4.5.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"64b17d7ea74e9f833c7dbf2cbe4fb12ff26783eda4782a8975b72f895c9b4d99\"\ndependencies = [\n \"anstream\",\n \"anstyle\",\n \"clap_lex\",\n \"strsim\",\n \"terminal_size\",\n]\n\n[[package]]\nname = \"clap_lex\"\nversion = \"0.7.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1462739cb27611015575c0c11df5df7601141071f07518d56fcc1be504cbec97\"\n\n[[package]]\nname = \"cloud-hypervisor\"\nversion = \"43.0.0\"\ndependencies = [\n \"anyhow\",\n \"api_client\",\n \"clap\",\n \"dhat\",\n \"dirs\",\n \"epoll\",\n \"event_monitor\",\n \"hypervisor\",\n \"libc\",\n \"log\",\n \"net_util\",\n \"once_cell\",\n \"option_parser\",\n \"seccompiler\",\n \"serde_json\",\n \"signal-hook\",\n \"test_infra\",\n \"thiserror 2.0.6\",\n \"tpm\",\n \"tracer\",\n \"vm-memory\",\n \"vmm\",\n \"vmm-sys-util\",\n \"wait-timeout\",\n \"zbus\",\n]\n\n[[package]]\nname = \"colorchoice\"\nversion = \"1.0.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d3fd119d74b830634cea2a0f58bbd0d54540518a14397557951e79340abc28c0\"\n\n[[package]]\nname = \"concat-idents\"\nversion = \"1.1.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f76990911f2267d837d9d0ad060aa63aaad170af40904b29461734c339030d4d\"\ndependencies = [\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"concurrent-queue\"\nversion = \"2.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4ca0197aee26d1ae37445ee532fefce43251d24cc7c166799f4d46817f1d3973\"\ndependencies = [\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"cpufeatures\"\nversion = \"0.2.16\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"16b80225097f2e5ae4e7179dd2266824648f3e2f49d9134d584b76389d31c4c3\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"crc-any\"\nversion = \"2.4.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c01a5e1f881f6fb6099a7bdf949e946719fd4f1fefa56264890574febf0eb6d0\"\ndependencies = [\n \"debug-helper\",\n]\n\n[[package]]\nname = \"crc32fast\"\nversion = \"1.4.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a97769d94ddab943e4510d138150169a2758b5ef3eb191a9ee688de3e23ef7b3\"\ndependencies = [\n \"cfg-if\",\n]\n\n[[package]]\nname = \"crossbeam-utils\"\nversion = \"0.8.20\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"22ec99545bb0ed0ea7bb9b8e1e9122ea386ff8a48c0922e43f36d45ab09e0e80\"\n\n[[package]]\nname = \"crypto-common\"\nversion = \"0.1.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1bfb12502f3fc46cca1bb51ac28df9d618d813cdc3d2f25b9fe775a34af26bb3\"\ndependencies = [\n \"generic-array\",\n \"typenum\",\n]\n\n[[package]]\nname = \"darling\"\nversion = \"0.20.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6f63b86c8a8826a49b8c21f08a2d07338eec8d900540f8630dc76284be802989\"\ndependencies = [\n \"darling_core\",\n \"darling_macro\",\n]\n\n[[package]]\nname = \"darling_core\"\nversion = \"0.20.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"95133861a8032aaea082871032f5815eb9e98cef03fa916ab4500513994df9e5\"\ndependencies = [\n \"fnv\",\n \"ident_case\",\n \"proc-macro2\",\n \"quote\",\n \"strsim\",\n \"syn\",\n]\n\n[[package]]\nname = \"darling_macro\"\nversion = \"0.20.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d336a2a514f6ccccaa3e09b02d41d35330c07ddf03a62165fcec10bb561c7806\"\ndependencies = [\n \"darling_core\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"debug-helper\"\nversion = \"0.3.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f578e8e2c440e7297e008bb5486a3a8a194775224bbc23729b0dbdfaeebf162e\"\n\n[[package]]\nname = \"devices\"\nversion = \"0.1.0\"\ndependencies = [\n \"acpi_tables\",\n \"anyhow\",\n \"arch\",\n \"bitflags 2.6.0\",\n \"byteorder\",\n \"event_monitor\",\n \"hypervisor\",\n \"libc\",\n \"log\",\n \"num_enum\",\n \"pci\",\n \"serde\",\n \"thiserror 2.0.6\",\n \"tpm\",\n \"vm-allocator\",\n \"vm-device\",\n \"vm-memory\",\n \"vm-migration\",\n \"vmm-sys-util\",\n]\n\n[[package]]\nname = \"dhat\"\nversion = \"0.3.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"98cd11d84628e233de0ce467de10b8633f4ddaecafadefc86e13b84b8739b827\"\ndependencies = [\n \"backtrace\",\n \"lazy_static\",\n \"mintex\",\n \"parking_lot 0.12.1\",\n \"rustc-hash\",\n \"serde\",\n \"serde_json\",\n \"thousands\",\n]\n\n[[package]]\nname = \"digest\"\nversion = \"0.10.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9ed9a281f7bc9b7576e61468ba615a66a5c8cfdff42420a70aa82701a3b1e292\"\ndependencies = [\n \"block-buffer\",\n \"crypto-common\",\n]\n\n[[package]]\nname = \"dirs\"\nversion = \"5.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"44c45a9d03d6676652bcb5e724c7e988de1acad23a711b5217ab9cbecbec2225\"\ndependencies = [\n \"dirs-sys\",\n]\n\n[[package]]\nname = \"dirs-sys\"\nversion = \"0.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"520f05a5cbd335fae5a99ff7a6ab8627577660ee5cfd6a94a6a929b52ff0321c\"\ndependencies = [\n \"libc\",\n \"option-ext\",\n \"redox_users\",\n \"windows-sys 0.48.0\",\n]\n\n[[package]]\nname = \"endi\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a3d8a32ae18130a3c84dd492d4215c3d913c3b07c6b63c2eb3eb7ff1101ab7bf\"\n\n[[package]]\nname = \"enumflags2\"\nversion = \"0.7.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d232db7f5956f3f14313dc2f87985c58bd2c695ce124c8cdd984e08e15ac133d\"\ndependencies = [\n \"enumflags2_derive\",\n \"serde\",\n]\n\n[[package]]\nname = \"enumflags2_derive\"\nversion = \"0.7.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"de0d48a183585823424a4ce1aa132d174a6a81bd540895822eb4c8373a8e49e8\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"env_filter\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4f2c92ceda6ceec50f43169f9ee8424fe2db276791afde7b2cd8bc084cb376ab\"\ndependencies = [\n \"log\",\n \"regex\",\n]\n\n[[package]]\nname = \"env_logger\"\nversion = \"0.11.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"38b35839ba51819680ba087cd351788c9a3c476841207e0b8cee0b04722343b9\"\ndependencies = [\n \"anstream\",\n \"anstyle\",\n \"env_filter\",\n \"humantime\",\n \"log\",\n]\n\n[[package]]\nname = \"epoll\"\nversion = \"4.3.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"74351c3392ea1ff6cd2628e0042d268ac2371cb613252ff383b6dfa50d22fa79\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"libc\",\n]\n\n[[package]]\nname = \"equivalent\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5443807d6dff69373d433ab9ef5378ad8df50ca6298caf15de6e52e24aaf54d5\"\n\n[[package]]\nname = \"errno\"\nversion = \"0.3.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"534c5cf6194dfab3db3242765c03bbe257cf92f22b38f6bc0c58d59108a820ba\"\ndependencies = [\n \"libc\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"event-listener\"\nversion = \"5.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6032be9bd27023a771701cc49f9f053c751055f71efb2e0ae5c15809093675ba\"\ndependencies = [\n \"concurrent-queue\",\n \"parking\",\n \"pin-project-lite\",\n]\n\n[[package]]\nname = \"event-listener-strategy\"\nversion = \"0.5.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3c3e4e0dd3673c1139bf041f3008816d9cf2946bbfac2945c09e523b8d7b05b2\"\ndependencies = [\n \"event-listener\",\n \"pin-project-lite\",\n]\n\n[[package]]\nname = \"event_monitor\"\nversion = \"0.1.0\"\ndependencies = [\n \"flume\",\n \"libc\",\n \"once_cell\",\n \"serde\",\n \"serde_json\",\n]\n\n[[package]]\nname = \"fastrand\"\nversion = \"2.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"486f806e73c5707928240ddc295403b1b93c96a02038563881c4a2fd84b81ac4\"\n\n[[package]]\nname = \"fdt\"\nversion = \"0.1.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"784a4df722dc6267a04af36895398f59d21d07dce47232adf31ec0ff2fa45e67\"\n\n[[package]]\nname = \"flume\"\nversion = \"0.11.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"da0e4dd2a88388a1f4ccc7c9ce104604dab68d9f408dc34cd45823d5a9069095\"\ndependencies = [\n \"futures-core\",\n \"futures-sink\",\n \"nanorand\",\n \"spin\",\n]\n\n[[package]]\nname = \"fnv\"\nversion = \"1.0.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3f9eec918d3f24069decb9af1554cad7c880e2da24a9afd88aca000531ab82c1\"\n\n[[package]]\nname = \"futures\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"65bc07b1a8bc7c85c5f2e110c476c7389b4554ba72af57d8445ea63a576b0876\"\ndependencies = [\n \"futures-channel\",\n \"futures-core\",\n \"futures-executor\",\n \"futures-io\",\n \"futures-sink\",\n \"futures-task\",\n \"futures-util\",\n]\n\n[[package]]\nname = \"futures-channel\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2dff15bf788c671c1934e366d07e30c1814a8ef514e1af724a602e8a2fbe1b10\"\ndependencies = [\n \"futures-core\",\n \"futures-sink\",\n]\n\n[[package]]\nname = \"futures-core\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"05f29059c0c2090612e8d742178b0580d2dc940c837851ad723096f87af6663e\"\n\n[[package]]\nname = \"futures-executor\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1e28d1d997f585e54aebc3f97d39e72338912123a67330d723fdbb564d646c9f\"\ndependencies = [\n \"futures-core\",\n \"futures-task\",\n \"futures-util\",\n]\n\n[[package]]\nname = \"futures-io\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9e5c1b78ca4aae1ac06c48a526a655760685149f0d465d21f37abfe57ce075c6\"\n\n[[package]]\nname = \"futures-lite\"\nversion = \"2.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"52527eb5074e35e9339c6b4e8d12600c7128b68fb25dcb9fa9dec18f7c25f3a5\"\ndependencies = [\n \"fastrand\",\n \"futures-core\",\n \"futures-io\",\n \"parking\",\n \"pin-project-lite\",\n]\n\n[[package]]\nname = \"futures-macro\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"162ee34ebcb7c64a8abebc059ce0fee27c2262618d7b60ed8faf72fef13c3650\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"futures-sink\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e575fab7d1e0dcb8d0c7bcf9a63ee213816ab51902e6d244a95819acacf1d4f7\"\n\n[[package]]\nname = \"futures-task\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f90f7dce0722e95104fcb095585910c0977252f286e354b5e3bd38902cd99988\"\n\n[[package]]\nname = \"futures-util\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9fa08315bb612088cc391249efdc3bc77536f16c91f6cf495e6fbe85b20a4a81\"\ndependencies = [\n \"futures-channel\",\n \"futures-core\",\n \"futures-io\",\n \"futures-macro\",\n \"futures-sink\",\n \"futures-task\",\n \"memchr\",\n \"pin-project-lite\",\n \"pin-utils\",\n \"slab\",\n]\n\n[[package]]\nname = \"gdbstub\"\nversion = \"0.7.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6341b3480afbb34eaefc7f92713bc92f2d83e338aaa1c44192f9c2956f4a4903\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"cfg-if\",\n \"log\",\n \"managed\",\n \"num-traits\",\n \"paste\",\n]\n\n[[package]]\nname = \"gdbstub_arch\"\nversion = \"0.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4e3b1357bd3203fc09a6601327ae0ab38865d14231d0b65d3143f5762cc7977d\"\ndependencies = [\n \"gdbstub\",\n \"num-traits\",\n]\n\n[[package]]\nname = \"generic-array\"\nversion = \"0.14.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"85649ca51fd72272d7821adaf274ad91c288277713d9c18820d8499a7ff69e9a\"\ndependencies = [\n \"typenum\",\n \"version_check\",\n]\n\n[[package]]\nname = \"getrandom\"\nversion = \"0.2.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c4567c8db10ae91089c99af84c68c38da3ec2f087c3f82960bcdbf3656b6f4d7\"\ndependencies = [\n \"cfg-if\",\n \"js-sys\",\n \"libc\",\n \"wasi\",\n \"wasm-bindgen\",\n]\n\n[[package]]\nname = \"gimli\"\nversion = \"0.31.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"07e28edb80900c19c28f1072f2e8aeca7fa06b23cd4169cefe1af5aa3260783f\"\n\n[[package]]\nname = \"glob\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d2fabcfbdc87f4758337ca535fb41a6d701b65693ce38287d856d1674551ec9b\"\n\n[[package]]\nname = \"hashbrown\"\nversion = \"0.14.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e5274423e17b7c9fc20b6e7e208532f9b19825d82dfd615708b70edd83df41f1\"\n\n[[package]]\nname = \"hermit-abi\"\nversion = \"0.3.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d231dfb89cfffdbc30e7fc41579ed6066ad03abda9e567ccafae602b97ec5024\"\n\n[[package]]\nname = \"hex\"\nversion = \"0.4.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7f24254aa9a54b5c858eaee2f5bccdb46aaf0e486a595ed5fd8f86ba55232a70\"\n\n[[package]]\nname = \"humantime\"\nversion = \"2.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9a3a5bfb195931eeb336b2a7b4d761daec841b97f947d34394601737a7bba5e4\"\n\n[[package]]\nname = \"hypervisor\"\nversion = \"0.1.0\"\ndependencies = [\n \"anyhow\",\n \"arc-swap\",\n \"byteorder\",\n \"cfg-if\",\n \"concat-idents\",\n \"env_logger\",\n \"iced-x86\",\n \"igvm\",\n \"igvm_defs\",\n \"kvm-bindings\",\n \"kvm-ioctls\",\n \"libc\",\n \"log\",\n \"mshv-bindings\",\n \"mshv-ioctls\",\n \"serde\",\n \"serde_with\",\n \"thiserror 2.0.6\",\n \"vfio-ioctls\",\n \"vm-memory\",\n \"vmm-sys-util\",\n]\n\n[[package]]\nname = \"iced-x86\"\nversion = \"1.21.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7c447cff8c7f384a7d4f741cfcff32f75f3ad02b406432e8d6c878d56b1edf6b\"\ndependencies = [\n \"lazy_static\",\n]\n\n[[package]]\nname = \"ident_case\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b9e0384b61958566e926dc50660321d12159025e767c18e043daf26b70104c39\"\n\n[[package]]\nname = \"igvm\"\nversion = \"0.3.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7984b10433b50e06a06bd50c69bca4888a5d7de8975f64ea4c2a7687eb99b09d\"\ndependencies = [\n \"bitfield-struct\",\n \"crc32fast\",\n \"hex\",\n \"igvm_defs\",\n \"open-enum\",\n \"range_map_vec\",\n \"thiserror 1.0.62\",\n \"tracing\",\n \"zerocopy 0.7.35\",\n]\n\n[[package]]\nname = \"igvm_defs\"\nversion = \"0.3.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b64ec5588c475372ae830475d3ee9a7bd255407dcb9f03faf6d493556eb6105a\"\ndependencies = [\n \"bitfield-struct\",\n \"open-enum\",\n \"static_assertions\",\n \"zerocopy 0.7.35\",\n]\n\n[[package]]\nname = \"indexmap\"\nversion = \"2.2.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"168fb715dda47215e360912c096649d23d58bf392ac62f73919e831745e40f26\"\ndependencies = [\n \"equivalent\",\n \"hashbrown\",\n]\n\n[[package]]\nname = \"instant\"\nversion = \"0.1.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e0242819d153cba4b4b05a5a8f2a7e9bbf97b6055b2a002b395c96b5ff3c0222\"\ndependencies = [\n \"cfg-if\",\n]\n\n[[package]]\nname = \"io-uring\"\nversion = \"0.6.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"595a0399f411a508feb2ec1e970a4a30c249351e30208960d58298de8660b0e5\"\ndependencies = [\n \"bitflags 1.3.2\",\n \"libc\",\n]\n\n[[package]]\nname = \"ipnetwork\"\nversion = \"0.20.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bf466541e9d546596ee94f9f69590f89473455f88372423e0008fc1a7daf100e\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"is_terminal_polyfill\"\nversion = \"1.70.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7943c866cc5cd64cbc25b2e01621d07fa8eb2a1a23160ee81ce38704e97b8ecf\"\n\n[[package]]\nname = \"itoa\"\nversion = \"1.0.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"49f1f14873335454500d59611f1cf4a4b0f786f9ac11f4312a78e4cf2566695b\"\n\n[[package]]\nname = \"js-sys\"\nversion = \"0.3.69\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"29c15563dc2726973df627357ce0c9ddddbea194836909d655df6a75d2cf296d\"\ndependencies = [\n \"wasm-bindgen\",\n]\n\n[[package]]\nname = \"kvm-bindings\"\nversion = \"0.10.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fa4933174d0cc4b77b958578cd45784071cc5ae212c2d78fbd755aaaa6dfa71a\"\ndependencies = [\n \"serde\",\n \"vmm-sys-util\",\n \"zerocopy 0.7.35\",\n]\n\n[[package]]\nname = \"kvm-ioctls\"\nversion = \"0.19.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e013ae7fcd2c6a8f384104d16afe7ea02969301ea2bb2a56e44b011ebc907cab\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"kvm-bindings\",\n \"libc\",\n \"vmm-sys-util\",\n]\n\n[[package]]\nname = \"landlock\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dafb8a4afee64f167eb2b52d32f0eea002e41a7a6450e68c799c8ec3a81a634c\"\ndependencies = [\n \"enumflags2\",\n \"libc\",\n \"thiserror 1.0.62\",\n]\n\n[[package]]\nname = \"lazy_static\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bbd2bcb4c963f2ddae06a2efc7e9f3591312473c50c6685e1f298068316e66fe\"\n\n[[package]]\nname = \"libc\"\nversion = \"0.2.167\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"09d6582e104315a817dff97f75133544b2e094ee22447d2acf4a74e189ba06fc\"\n\n[[package]]\nname = \"libredox\"\nversion = \"0.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c0ff37bd590ca25063e35af745c343cb7a0271906fb7b37e4813e8f79f00268d\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"libc\",\n]\n\n[[package]]\nname = \"libssh2-sys\"\nversion = \"0.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2dc8a030b787e2119a731f1951d6a773e2280c660f8ec4b0f5e1505a386e71ee\"\ndependencies = [\n \"cc\",\n \"libc\",\n \"libz-sys\",\n \"openssl-sys\",\n \"pkg-config\",\n \"vcpkg\",\n]\n\n[[package]]\nname = \"libz-sys\"\nversion = \"1.1.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c15da26e5af7e25c90b37a2d75cdbf940cf4a55316de9d84c679c9b8bfabf82e\"\ndependencies = [\n \"cc\",\n \"libc\",\n \"pkg-config\",\n \"vcpkg\",\n]\n\n[[package]]\nname = \"linux-loader\"\nversion = \"0.13.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"870c3814345f050991f99869417779f6062542bcf4ed81db7a1b926ad1306638\"\ndependencies = [\n \"vm-memory\",\n]\n\n[[package]]\nname = \"linux-raw-sys\"\nversion = \"0.4.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"78b3ae25bc7c8c38cec158d1f2757ee79e9b3740fbc7ccf0e59e4b08d793fa89\"\n\n[[package]]\nname = \"lock_api\"\nversion = \"0.4.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"07af8b9cdd281b7915f413fa73f29ebd5d55d0d3f0155584dade1ff18cea1b17\"\ndependencies = [\n \"autocfg\",\n \"scopeguard\",\n]\n\n[[package]]\nname = \"log\"\nversion = \"0.4.22\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a7a70ba024b9dc04c27ea2f0c0548feb474ec5c54bba33a7f72f873a39d07b24\"\n\n[[package]]\nname = \"managed\"\nversion = \"0.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0ca88d725a0a943b096803bd34e73a4437208b6077654cc4ecb2947a5f91618d\"\n\n[[package]]\nname = \"memchr\"\nversion = \"2.7.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6c8640c5d730cb13ebd907d8d04b52f55ac9a2eec55b440c8892f40d56c76c1d\"\n\n[[package]]\nname = \"memoffset\"\nversion = \"0.9.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"488016bfae457b036d996092f6cb448677611ce4449e970ceaf42695203f218a\"\ndependencies = [\n \"autocfg\",\n]\n\n[[package]]\nname = \"micro_http\"\nversion = \"0.1.0\"\nsource = \"git+https://github.com/firecracker-microvm/micro-http?branch=main#ef43cef7162a55a6790d528a5e76b4fe2da22de0\"\ndependencies = [\n \"libc\",\n \"vmm-sys-util\",\n]\n\n[[package]]\nname = \"miniz_oxide\"\nversion = \"0.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e2d80299ef12ff69b16a84bb182e3b9df68b5a91574d3d4fa6e41b65deec4df1\"\ndependencies = [\n \"adler2\",\n]\n\n[[package]]\nname = \"mintex\"\nversion = \"0.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9bec4598fddb13cc7b528819e697852653252b760f1228b7642679bf2ff2cd07\"\n\n[[package]]\nname = \"mshv-bindings\"\nversion = \"0.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1e0cb5031f3243a7459b7c13d960d25420980874eebda816db24ce6077e21d43\"\ndependencies = [\n \"libc\",\n \"num_enum\",\n \"serde\",\n \"serde_derive\",\n \"vmm-sys-util\",\n \"zerocopy 0.8.8\",\n]\n\n[[package]]\nname = \"mshv-ioctls\"\nversion = \"0.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"89abe853221fa6f14ad4066affb9abda241a03d65622887d5794e1422d0bd75a\"\ndependencies = [\n \"libc\",\n \"mshv-bindings\",\n \"thiserror 2.0.6\",\n \"vmm-sys-util\",\n]\n\n[[package]]\nname = \"nanorand\"\nversion = \"0.7.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6a51313c5820b0b02bd422f4b44776fbf47961755c74ce64afc73bfad10226c3\"\ndependencies = [\n \"getrandom\",\n]\n\n[[package]]\nname = \"net_gen\"\nversion = \"0.1.0\"\ndependencies = [\n \"vmm-sys-util\",\n]\n\n[[package]]\nname = \"net_util\"\nversion = \"0.1.0\"\ndependencies = [\n \"epoll\",\n \"getrandom\",\n \"libc\",\n \"log\",\n \"net_gen\",\n \"once_cell\",\n \"pnet\",\n \"pnet_datalink\",\n \"rate_limiter\",\n \"serde\",\n \"serde_json\",\n \"thiserror 2.0.6\",\n \"virtio-bindings\",\n \"virtio-queue\",\n \"vm-memory\",\n \"vm-virtio\",\n \"vmm-sys-util\",\n]\n\n[[package]]\nname = \"nix\"\nversion = \"0.29.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"71e2746dc3a24dd78b3cfcb7be93368c6de9963d30f43a6a73998a9cf4b17b46\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"cfg-if\",\n \"cfg_aliases\",\n \"libc\",\n \"memoffset\",\n]\n\n[[package]]\nname = \"no-std-net\"\nversion = \"0.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"43794a0ace135be66a25d3ae77d41b91615fb68ae937f904090203e81f755b65\"\n\n[[package]]\nname = \"num-traits\"\nversion = \"0.2.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"071dfc062690e90b734c0b2273ce72ad0ffa95f0c74596bc250dcfd960262841\"\ndependencies = [\n \"autocfg\",\n]\n\n[[package]]\nname = \"num_enum\"\nversion = \"0.7.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4e613fc340b2220f734a8595782c551f1250e969d87d3be1ae0579e8d4065179\"\ndependencies = [\n \"num_enum_derive\",\n]\n\n[[package]]\nname = \"num_enum_derive\"\nversion = \"0.7.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"af1844ef2428cc3e1cb900be36181049ef3d3193c63e43026cfe202983b27a56\"\ndependencies = [\n \"proc-macro-crate\",\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"object\"\nversion = \"0.36.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"aedf0a2d09c573ed1d8d85b30c119153926a2b36dce0ab28322c09a117a4683e\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"once_cell\"\nversion = \"1.20.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1261fe7e33c73b354eab43b1273a57c8f967d0391e80353e51f764ac02cf6775\"\n\n[[package]]\nname = \"open-enum\"\nversion = \"0.5.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2eb2508143a400b3361812094d987dd5adc81f0f5294a46491be648d6c94cab5\"\ndependencies = [\n \"open-enum-derive\",\n]\n\n[[package]]\nname = \"open-enum-derive\"\nversion = \"0.5.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8d1296fab5231654a5aec8bf9e87ba4e3938c502fc4c3c0425a00084c78944be\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"openssl-src\"\nversion = \"300.3.2+3.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a211a18d945ef7e648cc6e0058f4c548ee46aab922ea203e0d30e966ea23647b\"\ndependencies = [\n \"cc\",\n]\n\n[[package]]\nname = \"openssl-sys\"\nversion = \"0.9.104\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"45abf306cbf99debc8195b66b7346498d7b10c210de50418b5ccd7ceba08c741\"\ndependencies = [\n \"cc\",\n \"libc\",\n \"openssl-src\",\n \"pkg-config\",\n \"vcpkg\",\n]\n\n[[package]]\nname = \"option-ext\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"04744f49eae99ab78e0d5c0b603ab218f515ea8cfe5a456d7629ad883a3b6e7d\"\n\n[[package]]\nname = \"option_parser\"\nversion = \"0.1.0\"\n\n[[package]]\nname = \"ordered-stream\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9aa2b01e1d916879f73a53d01d1d6cee68adbb31d6d9177a8cfce093cced1d50\"\ndependencies = [\n \"futures-core\",\n \"pin-project-lite\",\n]\n\n[[package]]\nname = \"parking\"\nversion = \"2.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f38d5652c16fde515bb1ecef450ab0f6a219d619a7274976324d5e377f7dceba\"\n\n[[package]]\nname = \"parking_lot\"\nversion = \"0.11.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7d17b78036a60663b797adeaee46f5c9dfebb86948d1255007a1d6be0271ff99\"\ndependencies = [\n \"instant\",\n \"lock_api\",\n \"parking_lot_core 0.8.6\",\n]\n\n[[package]]\nname = \"parking_lot\"\nversion = \"0.12.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3742b2c103b9f06bc9fff0a37ff4912935851bee6d36f3c02bcc755bcfec228f\"\ndependencies = [\n \"lock_api\",\n \"parking_lot_core 0.9.9\",\n]\n\n[[package]]\nname = \"parking_lot_core\"\nversion = \"0.8.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"60a2cfe6f0ad2bfc16aefa463b497d5c7a5ecd44a23efa72aa342d90177356dc\"\ndependencies = [\n \"cfg-if\",\n \"instant\",\n \"libc\",\n \"redox_syscall 0.2.16\",\n \"smallvec\",\n \"winapi\",\n]\n\n[[package]]\nname = \"parking_lot_core\"\nversion = \"0.9.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4c42a9226546d68acdd9c0a280d17ce19bfe27a46bf68784e4066115788d008e\"\ndependencies = [\n \"cfg-if\",\n \"libc\",\n \"redox_syscall 0.4.1\",\n \"smallvec\",\n \"windows-targets 0.48.5\",\n]\n\n[[package]]\nname = \"paste\"\nversion = \"1.0.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\"\n\n[[package]]\nname = \"pci\"\nversion = \"0.1.0\"\ndependencies = [\n \"anyhow\",\n \"byteorder\",\n \"hypervisor\",\n \"libc\",\n \"log\",\n \"serde\",\n \"thiserror 2.0.6\",\n \"vfio-bindings\",\n \"vfio-ioctls\",\n \"vfio_user\",\n \"vm-allocator\",\n \"vm-device\",\n \"vm-memory\",\n \"vm-migration\",\n \"vmm-sys-util\",\n]\n\n[[package]]\nname = \"performance-metrics\"\nversion = \"0.1.0\"\ndependencies = [\n \"clap\",\n \"dirs\",\n \"serde\",\n \"serde_json\",\n \"test_infra\",\n \"thiserror 2.0.6\",\n \"wait-timeout\",\n]\n\n[[package]]\nname = \"pin-project-lite\"\nversion = \"0.2.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"915a1e146535de9163f3987b8944ed8cf49a18bb0056bcebcdcece385cece4ff\"\n\n[[package]]\nname = \"pin-utils\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8b870d8c151b6f2fb93e84a13146138f05d02ed11c7e7c54f8826aaaf7c9f184\"\n\n[[package]]\nname = \"piper\"\nversion = \"0.2.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"96c8c490f422ef9a4efd2cb5b42b76c8613d7e7dfc1caf667b8a3350a5acc066\"\ndependencies = [\n \"atomic-waker\",\n \"fastrand\",\n \"futures-io\",\n]\n\n[[package]]\nname = \"pkg-config\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"953ec861398dccce10c670dfeaf3ec4911ca479e9c02154b3a215178c5f566f2\"\n\n[[package]]\nname = \"pnet\"\nversion = \"0.35.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"682396b533413cc2e009fbb48aadf93619a149d3e57defba19ff50ce0201bd0d\"\ndependencies = [\n \"ipnetwork\",\n \"pnet_base\",\n \"pnet_datalink\",\n \"pnet_packet\",\n \"pnet_sys\",\n \"pnet_transport\",\n]\n\n[[package]]\nname = \"pnet_base\"\nversion = \"0.35.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ffc190d4067df16af3aba49b3b74c469e611cad6314676eaf1157f31aa0fb2f7\"\ndependencies = [\n \"no-std-net\",\n]\n\n[[package]]\nname = \"pnet_datalink\"\nversion = \"0.35.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e79e70ec0be163102a332e1d2d5586d362ad76b01cec86f830241f2b6452a7b7\"\ndependencies = [\n \"ipnetwork\",\n \"libc\",\n \"pnet_base\",\n \"pnet_sys\",\n \"winapi\",\n]\n\n[[package]]\nname = \"pnet_macros\"\nversion = \"0.35.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"13325ac86ee1a80a480b0bc8e3d30c25d133616112bb16e86f712dcf8a71c863\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"regex\",\n \"syn\",\n]\n\n[[package]]\nname = \"pnet_macros_support\"\nversion = \"0.35.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"eed67a952585d509dd0003049b1fc56b982ac665c8299b124b90ea2bdb3134ab\"\ndependencies = [\n \"pnet_base\",\n]\n\n[[package]]\nname = \"pnet_packet\"\nversion = \"0.35.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4c96ebadfab635fcc23036ba30a7d33a80c39e8461b8bd7dc7bb186acb96560f\"\ndependencies = [\n \"glob\",\n \"pnet_base\",\n \"pnet_macros\",\n \"pnet_macros_support\",\n]\n\n[[package]]\nname = \"pnet_sys\"\nversion = \"0.35.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7d4643d3d4db6b08741050c2f3afa9a892c4244c085a72fcda93c9c2c9a00f4b\"\ndependencies = [\n \"libc\",\n \"winapi\",\n]\n\n[[package]]\nname = \"pnet_transport\"\nversion = \"0.35.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5f604d98bc2a6591cf719b58d3203fd882bdd6bf1db696c4ac97978e9f4776bf\"\ndependencies = [\n \"libc\",\n \"pnet_base\",\n \"pnet_packet\",\n \"pnet_sys\",\n]\n\n[[package]]\nname = \"polling\"\nversion = \"3.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e0c976a60b2d7e99d6f229e414670a9b85d13ac305cc6d1e9c134de58c5aaaf6\"\ndependencies = [\n \"cfg-if\",\n \"concurrent-queue\",\n \"hermit-abi\",\n \"pin-project-lite\",\n \"rustix\",\n \"tracing\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"ppv-lite86\"\nversion = \"0.2.20\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"77957b295656769bb8ad2b6a6b09d897d94f05c41b069aede1fcdaa675eaea04\"\ndependencies = [\n \"zerocopy 0.7.35\",\n]\n\n[[package]]\nname = \"proc-macro-crate\"\nversion = \"3.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6d37c51ca738a55da99dc0c4a34860fd675453b8b36209178c2249bb13651284\"\ndependencies = [\n \"toml_edit\",\n]\n\n[[package]]\nname = \"proc-macro2\"\nversion = \"1.0.92\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"37d3544b3f2748c54e147655edb5025752e2303145b5aefb3c3ea2c78b973bb0\"\ndependencies = [\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"quote\"\nversion = \"1.0.36\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0fa76aaf39101c457836aec0ce2316dbdc3ab723cdda1c6bd4e6ad4208acaca7\"\ndependencies = [\n \"proc-macro2\",\n]\n\n[[package]]\nname = \"rand\"\nversion = \"0.8.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"34af8d1a0e25924bc5b7c43c079c942339d8f0a8b57c39049bef581b46327404\"\ndependencies = [\n \"libc\",\n \"rand_chacha\",\n \"rand_core\",\n]\n\n[[package]]\nname = \"rand_chacha\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e6c10a63a0fa32252be49d21e7709d4d4baf8d231c2dbce1eaa8141b9b127d88\"\ndependencies = [\n \"ppv-lite86\",\n \"rand_core\",\n]\n\n[[package]]\nname = \"rand_core\"\nversion = \"0.6.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ec0be4795e2f6a28069bec0b5ff3e2ac9bafc99e6a9a7dc3547996c5c816922c\"\ndependencies = [\n \"getrandom\",\n]\n\n[[package]]\nname = \"range_map_vec\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7cc2191ec1fd850e3ede4cf09ccfd40a33df561111f73e96e1b7c3f9eee31328\"\n\n[[package]]\nname = \"rate_limiter\"\nversion = \"0.1.0\"\ndependencies = [\n \"epoll\",\n \"libc\",\n \"log\",\n \"thiserror 2.0.6\",\n \"vmm-sys-util\",\n]\n\n[[package]]\nname = \"redox_syscall\"\nversion = \"0.2.16\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fb5a58c1855b4b6819d59012155603f0b22ad30cad752600aadfcb695265519a\"\ndependencies = [\n \"bitflags 1.3.2\",\n]\n\n[[package]]\nname = \"redox_syscall\"\nversion = \"0.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4722d768eff46b75989dd134e5c353f0d6296e5aaa3132e776cbdb56be7731aa\"\ndependencies = [\n \"bitflags 1.3.2\",\n]\n\n[[package]]\nname = \"redox_users\"\nversion = \"0.4.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ba009ff324d1fc1b900bd1fdb31564febe58a8ccc8a6fdbb93b543d33b13ca43\"\ndependencies = [\n \"getrandom\",\n \"libredox\",\n \"thiserror 1.0.62\",\n]\n\n[[package]]\nname = \"regex\"\nversion = \"1.11.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b544ef1b4eac5dc2db33ea63606ae9ffcfac26c1416a2806ae0bf5f56b201191\"\ndependencies = [\n \"aho-corasick\",\n \"memchr\",\n \"regex-automata\",\n \"regex-syntax\",\n]\n\n[[package]]\nname = \"regex-automata\"\nversion = \"0.4.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"809e8dc61f6de73b46c85f4c96486310fe304c434cfa43669d7b40f711150908\"\ndependencies = [\n \"aho-corasick\",\n \"memchr\",\n \"regex-syntax\",\n]\n\n[[package]]\nname = \"regex-syntax\"\nversion = \"0.8.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2b15c43186be67a4fd63bee50d0303afffcef381492ebe2c5d87f324e1b8815c\"\n\n[[package]]\nname = \"remain\"\nversion = \"0.2.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"46aef80f842736de545ada6ec65b81ee91504efd6853f4b96de7414c42ae7443\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"rustc-demangle\"\nversion = \"0.1.24\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"719b953e2095829ee67db738b3bfa9fa368c94900df327b3f07fe6e794d2fe1f\"\n\n[[package]]\nname = \"rustc-hash\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"08d43f7aa6b08d49f382cde6a7982047c3426db949b1424bc4b7ec9ae12c6ce2\"\n\n[[package]]\nname = \"rustix\"\nversion = \"0.38.34\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"70dc5ec042f7a43c4a73241207cecc9873a06d45debb38b329f8541d85c2730f\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"errno\",\n \"libc\",\n \"linux-raw-sys\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"ryu\"\nversion = \"1.0.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f3cb5ba0dc43242ce17de99c180e96db90b235b8a9fdc9543c96d2209116bd9f\"\n\n[[package]]\nname = \"scopeguard\"\nversion = \"1.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"94143f37725109f92c262ed2cf5e59bce7498c01bcc1502d7b9afe439a4e9f49\"\n\n[[package]]\nname = \"seccompiler\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"345a3e4dddf721a478089d4697b83c6c0a8f5bf16086f6c13397e4534eb6e2e5\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"serde\"\nversion = \"1.0.208\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cff085d2cb684faa248efb494c39b68e522822ac0de72ccf08109abde717cfb2\"\ndependencies = [\n \"serde_derive\",\n]\n\n[[package]]\nname = \"serde_derive\"\nversion = \"1.0.208\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"24008e81ff7613ed8e5ba0cfaf24e2c2f1e5b8a0495711e44fcd4882fca62bcf\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"serde_json\"\nversion = \"1.0.120\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4e0d21c9a8cae1235ad58a00c11cb40d4b1e5c784f1ef2c537876ed6ffd8b7c5\"\ndependencies = [\n \"itoa\",\n \"ryu\",\n \"serde\",\n]\n\n[[package]]\nname = \"serde_repr\"\nversion = \"0.1.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6c64451ba24fc7a6a2d60fc75dd9c83c90903b19028d4eff35e88fc1e86564e9\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"serde_with\"\nversion = \"3.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"69cecfa94848272156ea67b2b1a53f20fc7bc638c4a46d2f8abde08f05f4b857\"\ndependencies = [\n \"serde\",\n \"serde_derive\",\n \"serde_with_macros\",\n]\n\n[[package]]\nname = \"serde_with_macros\"\nversion = \"3.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a8fee4991ef4f274617a51ad4af30519438dacb2f56ac773b08a1922ff743350\"\ndependencies = [\n \"darling\",\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"serial_buffer\"\nversion = \"0.1.0\"\n\n[[package]]\nname = \"sha1\"\nversion = \"0.10.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e3bf829a2d51ab4a5ddf1352d8470c140cadc8301b2ae1789db023f01cedd6ba\"\ndependencies = [\n \"cfg-if\",\n \"cpufeatures\",\n \"digest\",\n]\n\n[[package]]\nname = \"signal-hook\"\nversion = \"0.3.17\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8621587d4798caf8eb44879d42e56b9a93ea5dcd315a6487c357130095b62801\"\ndependencies = [\n \"libc\",\n \"signal-hook-registry\",\n]\n\n[[package]]\nname = \"signal-hook-registry\"\nversion = \"1.4.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a9e9e0b4211b72e7b8b6e85c807d36c212bdb33ea8587f7569562a84df5465b1\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"slab\"\nversion = \"0.4.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8f92a496fb766b417c996b9c5e57daf2f7ad3b0bebe1ccfca4856390e3d3bb67\"\ndependencies = [\n \"autocfg\",\n]\n\n[[package]]\nname = \"smallvec\"\nversion = \"1.13.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3c5e1a9a646d36c3599cd173a41282daf47c44583ad367b8e6837255952e5c67\"\n\n[[package]]\nname = \"spin\"\nversion = \"0.9.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6980e8d7511241f8acf4aebddbb1ff938df5eebe98691418c4468d0b72a96a67\"\ndependencies = [\n \"lock_api\",\n]\n\n[[package]]\nname = \"ssh2\"\nversion = \"0.9.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e7fe461910559f6d5604c3731d00d2aafc4a83d1665922e280f42f9a168d5455\"\ndependencies = [\n \"bitflags 1.3.2\",\n \"libc\",\n \"libssh2-sys\",\n \"parking_lot 0.11.2\",\n]\n\n[[package]]\nname = \"static_assertions\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a2eb9349b6444b326872e140eb1cf5e7c522154d69e7a0ffb0fb81c06b37543f\"\n\n[[package]]\nname = \"strsim\"\nversion = \"0.11.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7da8b5736845d9f2fcb837ea5d9e2628564b3b043a70948a3f0b778838c5fb4f\"\n\n[[package]]\nname = \"syn\"\nversion = \"2.0.87\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"25aa4ce346d03a6dcd68dd8b4010bcb74e54e62c90c573f394c46eae99aba32d\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"tempfile\"\nversion = \"3.11.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b8fcd239983515c23a32fb82099f97d0b11b8c72f654ed659363a95c3dad7a53\"\ndependencies = [\n \"cfg-if\",\n \"fastrand\",\n \"once_cell\",\n \"rustix\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"terminal_size\"\nversion = \"0.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"21bebf2b7c9e0a515f6e0f8c51dc0f8e4696391e6f1ff30379559f8365fb0df7\"\ndependencies = [\n \"rustix\",\n \"windows-sys 0.48.0\",\n]\n\n[[package]]\nname = \"test_infra\"\nversion = \"0.1.0\"\ndependencies = [\n \"dirs\",\n \"epoll\",\n \"libc\",\n \"once_cell\",\n \"serde\",\n \"serde_json\",\n \"ssh2\",\n \"vmm-sys-util\",\n \"wait-timeout\",\n]\n\n[[package]]\nname = \"thiserror\"\nversion = \"1.0.62\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f2675633b1499176c2dff06b0856a27976a8f9d436737b4cf4f312d4d91d8bbb\"\ndependencies = [\n \"thiserror-impl 1.0.62\",\n]\n\n[[package]]\nname = \"thiserror\"\nversion = \"2.0.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8fec2a1820ebd077e2b90c4df007bebf344cd394098a13c563957d0afc83ea47\"\ndependencies = [\n \"thiserror-impl 2.0.6\",\n]\n\n[[package]]\nname = \"thiserror-impl\"\nversion = \"1.0.62\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d20468752b09f49e909e55a5d338caa8bedf615594e9d80bc4c565d30faf798c\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"thiserror-impl\"\nversion = \"2.0.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d65750cab40f4ff1929fb1ba509e9914eb756131cef4210da8d5d700d26f6312\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"thousands\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3bf63baf9f5039dadc247375c29eb13706706cfde997d0330d05aa63a77d8820\"\n\n[[package]]\nname = \"toml_datetime\"\nversion = \"0.6.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3550f4e9685620ac18a50ed434eb3aec30db8ba93b0287467bca5826ea25baf1\"\n\n[[package]]\nname = \"toml_edit\"\nversion = \"0.21.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6a8534fd7f78b5405e860340ad6575217ce99f38d4d5c8f2442cb5ecb50090e1\"\ndependencies = [\n \"indexmap\",\n \"toml_datetime\",\n \"winnow\",\n]\n\n[[package]]\nname = \"tpm\"\nversion = \"0.1.0\"\ndependencies = [\n \"anyhow\",\n \"byteorder\",\n \"libc\",\n \"log\",\n \"net_gen\",\n \"thiserror 2.0.6\",\n \"vmm-sys-util\",\n]\n\n[[package]]\nname = \"tracer\"\nversion = \"0.1.0\"\ndependencies = [\n \"libc\",\n \"log\",\n \"once_cell\",\n \"serde\",\n \"serde_json\",\n]\n\n[[package]]\nname = \"tracing\"\nversion = \"0.1.40\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c3523ab5a71916ccf420eebdf5521fcef02141234bbc0b8a49f2fdc4544364ef\"\ndependencies = [\n \"pin-project-lite\",\n \"tracing-attributes\",\n \"tracing-core\",\n]\n\n[[package]]\nname = \"tracing-attributes\"\nversion = \"0.1.27\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"34704c8d6ebcbc939824180af020566b01a7c01f80641264eba0999f6c2b6be7\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"tracing-core\"\nversion = \"0.1.32\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c06d3da6113f116aaee68e4d601191614c9053067f9ab7f6edbcb161237daa54\"\ndependencies = [\n \"once_cell\",\n]\n\n[[package]]\nname = \"typenum\"\nversion = \"1.17.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"42ff0bf0c66b8238c6f3b578df37d0b7848e55df8577b3f74f92a69acceeb825\"\n\n[[package]]\nname = \"uds_windows\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"89daebc3e6fd160ac4aa9fc8b3bf71e1f74fbf92367ae71fb83a037e8bf164b9\"\ndependencies = [\n \"memoffset\",\n \"tempfile\",\n \"winapi\",\n]\n\n[[package]]\nname = \"unicode-ident\"\nversion = \"1.0.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3354b9ac3fae1ff6755cb6db53683adb661634f67557942dea4facebec0fee4b\"\n\n[[package]]\nname = \"utf8parse\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"06abde3611657adf66d383f00b093d7faecc7fa57071cce2578660c9f1010821\"\n\n[[package]]\nname = \"uuid\"\nversion = \"1.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a183cf7feeba97b4dd1c0d46788634f6221d87fa961b305bed08c851829efcc0\"\ndependencies = [\n \"getrandom\",\n \"rand\",\n \"uuid-macro-internal\",\n]\n\n[[package]]\nname = \"uuid-macro-internal\"\nversion = \"1.10.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ee1cd046f83ea2c4e920d6ee9f7c3537ef928d75dce5d84a87c2c5d6b3999a3a\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"vcpkg\"\nversion = \"0.2.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"accd4ea62f7bb7a82fe23066fb0957d48ef677f6eeb8215f372f52e48bb32426\"\n\n[[package]]\nname = \"version_check\"\nversion = \"0.9.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0b928f33d975fc6ad9f86c8f283853ad26bdd5b10b7f1542aa2fa15e2289105a\"\n\n[[package]]\nname = \"vfio-bindings\"\nversion = \"0.4.0\"\nsource = \"git+https://github.com/rust-vmm/vfio?branch=main#bdbb1cd486484faa23db48c82d51484e2ee43692\"\ndependencies = [\n \"vmm-sys-util\",\n]\n\n[[package]]\nname = \"vfio-ioctls\"\nversion = \"0.2.0\"\nsource = \"git+https://github.com/rust-vmm/vfio?branch=main#bdbb1cd486484faa23db48c82d51484e2ee43692\"\ndependencies = [\n \"byteorder\",\n \"kvm-bindings\",\n \"kvm-ioctls\",\n \"libc\",\n \"log\",\n \"mshv-bindings\",\n \"mshv-ioctls\",\n \"thiserror 1.0.62\",\n \"vfio-bindings\",\n \"vm-memory\",\n \"vmm-sys-util\",\n]\n\n[[package]]\nname = \"vfio_user\"\nversion = \"0.1.0\"\nsource = \"git+https://github.com/rust-vmm/vfio-user?branch=main#3febcdd3fa2531623865663ca1721e1962ed9979\"\ndependencies = [\n \"bitflags 1.3.2\",\n \"libc\",\n \"log\",\n \"serde\",\n \"serde_derive\",\n \"serde_json\",\n \"thiserror 1.0.62\",\n \"vfio-bindings\",\n \"vm-memory\",\n \"vmm-sys-util\",\n]\n\n[[package]]\nname = \"vhost\"\nversion = \"0.12.1\"\nsource = \"git+https://github.com/rust-vmm/vhost?rev=d983ae0#d983ae07f78663b7d24059667376992460b571a2\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"libc\",\n \"uuid\",\n \"vm-memory\",\n \"vmm-sys-util\",\n]\n\n[[package]]\nname = \"vhost-user-backend\"\nversion = \"0.16.1\"\nsource = \"git+https://github.com/rust-vmm/vhost?rev=d983ae0#d983ae07f78663b7d24059667376992460b571a2\"\ndependencies = [\n \"libc\",\n \"log\",\n \"vhost\",\n \"virtio-bindings\",\n \"virtio-queue\",\n \"vm-memory\",\n \"vmm-sys-util\",\n]\n\n[[package]]\nname = \"vhost_user_block\"\nversion = \"0.1.0\"\ndependencies = [\n \"block\",\n \"clap\",\n \"env_logger\",\n \"epoll\",\n \"libc\",\n \"log\",\n \"option_parser\",\n \"vhost\",\n \"vhost-user-backend\",\n \"virtio-bindings\",\n \"virtio-queue\",\n \"vm-memory\",\n \"vmm-sys-util\",\n]\n\n[[package]]\nname = \"vhost_user_net\"\nversion = \"0.1.0\"\ndependencies = [\n \"clap\",\n \"env_logger\",\n \"epoll\",\n \"libc\",\n \"log\",\n \"net_util\",\n \"option_parser\",\n \"vhost\",\n \"vhost-user-backend\",\n \"virtio-bindings\",\n \"vm-memory\",\n \"vmm-sys-util\",\n]\n\n[[package]]\nname = \"virtio-bindings\"\nversion = \"0.2.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1711e61c00f8cb450bd15368152a1e37a12ef195008ddc7d0f4812f9e2b30a68\"\n\n[[package]]\nname = \"virtio-devices\"\nversion = \"0.1.0\"\ndependencies = [\n \"anyhow\",\n \"arc-swap\",\n \"block\",\n \"byteorder\",\n \"epoll\",\n \"event_monitor\",\n \"libc\",\n \"log\",\n \"mshv-ioctls\",\n \"net_gen\",\n \"net_util\",\n \"pci\",\n \"rate_limiter\",\n \"seccompiler\",\n \"serde\",\n \"serde_json\",\n \"serde_with\",\n \"serial_buffer\",\n \"thiserror 2.0.6\",\n \"vhost\",\n \"virtio-bindings\",\n \"virtio-queue\",\n \"vm-allocator\",\n \"vm-device\",\n \"vm-memory\",\n \"vm-migration\",\n \"vm-virtio\",\n \"vmm-sys-util\",\n]\n\n[[package]]\nname = \"virtio-queue\"\nversion = \"0.14.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"872e2f3fbd70a7e6f01689720cce3d5c2c5efe52b484dd07b674246ada0e9a8d\"\ndependencies = [\n \"log\",\n \"virtio-bindings\",\n \"vm-memory\",\n \"vmm-sys-util\",\n]\n\n[[package]]\nname = \"vm-allocator\"\nversion = \"0.1.0\"\ndependencies = [\n \"arch\",\n \"libc\",\n \"vm-memory\",\n]\n\n[[package]]\nname = \"vm-device\"\nversion = \"0.1.0\"\ndependencies = [\n \"anyhow\",\n \"hypervisor\",\n \"serde\",\n \"thiserror 2.0.6\",\n \"vfio-ioctls\",\n \"vm-memory\",\n \"vmm-sys-util\",\n]\n\n[[package]]\nname = \"vm-fdt\"\nversion = \"0.3.0\"\nsource = \"git+https://github.com/rust-vmm/vm-fdt?branch=main#ef5bd734f5f66fb07722d766981adbc915f0d941\"\n\n[[package]]\nname = \"vm-memory\"\nversion = \"0.16.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f1720e7240cdc739f935456eb77f370d7e9b2a3909204da1e2b47bef1137a013\"\ndependencies = [\n \"arc-swap\",\n \"libc\",\n \"thiserror 1.0.62\",\n \"winapi\",\n]\n\n[[package]]\nname = \"vm-migration\"\nversion = \"0.1.0\"\ndependencies = [\n \"anyhow\",\n \"serde\",\n \"serde_json\",\n \"thiserror 2.0.6\",\n \"vm-memory\",\n]\n\n[[package]]\nname = \"vm-virtio\"\nversion = \"0.1.0\"\ndependencies = [\n \"log\",\n \"virtio-queue\",\n \"vm-memory\",\n]\n\n[[package]]\nname = \"vmm\"\nversion = \"0.1.0\"\ndependencies = [\n \"acpi_tables\",\n \"anyhow\",\n \"arc-swap\",\n \"arch\",\n \"bitflags 2.6.0\",\n \"block\",\n \"blocking\",\n \"cfg-if\",\n \"clap\",\n \"devices\",\n \"dhat\",\n \"epoll\",\n \"event_monitor\",\n \"flume\",\n \"futures\",\n \"gdbstub\",\n \"gdbstub_arch\",\n \"hex\",\n \"hypervisor\",\n \"igvm\",\n \"igvm_defs\",\n \"landlock\",\n \"libc\",\n \"linux-loader\",\n \"log\",\n \"micro_http\",\n \"mshv-bindings\",\n \"net_util\",\n \"once_cell\",\n \"option_parser\",\n \"pci\",\n \"range_map_vec\",\n \"rate_limiter\",\n \"seccompiler\",\n \"serde\",\n \"serde_json\",\n \"serial_buffer\",\n \"signal-hook\",\n \"thiserror 2.0.6\",\n \"tracer\",\n \"uuid\",\n \"vfio-ioctls\",\n \"vfio_user\",\n \"virtio-devices\",\n \"virtio-queue\",\n \"vm-allocator\",\n \"vm-device\",\n \"vm-memory\",\n \"vm-migration\",\n \"vm-virtio\",\n \"vmm-sys-util\",\n \"zbus\",\n \"zerocopy 0.7.35\",\n]\n\n[[package]]\nname = \"vmm-sys-util\"\nversion = \"0.12.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1d1435039746e20da4f8d507a72ee1b916f7b4b05af7a91c093d2c6561934ede\"\ndependencies = [\n \"bitflags 1.3.2\",\n \"libc\",\n \"serde\",\n \"serde_derive\",\n]\n\n[[package]]\nname = \"wait-timeout\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9f200f5b12eb75f8c1ed65abd4b2db8a6e1b138a20de009dacee265a2498f3f6\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"wasi\"\nversion = \"0.11.0+wasi-snapshot-preview1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9c8d87e72b64a3b4db28d11ce29237c246188f4f51057d65a7eab63b7987e423\"\n\n[[package]]\nname = \"wasm-bindgen\"\nversion = \"0.2.92\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4be2531df63900aeb2bca0daaaddec08491ee64ceecbee5076636a3b026795a8\"\ndependencies = [\n \"cfg-if\",\n \"wasm-bindgen-macro\",\n]\n\n[[package]]\nname = \"wasm-bindgen-backend\"\nversion = \"0.2.92\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"614d787b966d3989fa7bb98a654e369c762374fd3213d212cfc0251257e747da\"\ndependencies = [\n \"bumpalo\",\n \"log\",\n \"once_cell\",\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n \"wasm-bindgen-shared\",\n]\n\n[[package]]\nname = \"wasm-bindgen-macro\"\nversion = \"0.2.92\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a1f8823de937b71b9460c0c34e25f3da88250760bec0ebac694b49997550d726\"\ndependencies = [\n \"quote\",\n \"wasm-bindgen-macro-support\",\n]\n\n[[package]]\nname = \"wasm-bindgen-macro-support\"\nversion = \"0.2.92\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e94f17b526d0a461a191c78ea52bbce64071ed5c04c9ffe424dcb38f74171bb7\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n \"wasm-bindgen-backend\",\n \"wasm-bindgen-shared\",\n]\n\n[[package]]\nname = \"wasm-bindgen-shared\"\nversion = \"0.2.92\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"af190c94f2773fdb3729c55b007a722abb5384da03bc0986df4c289bf5567e96\"\n\n[[package]]\nname = \"winapi\"\nversion = \"0.3.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5c839a674fcd7a98952e593242ea400abe93992746761e38641405d28b00f419\"\ndependencies = [\n \"winapi-i686-pc-windows-gnu\",\n \"winapi-x86_64-pc-windows-gnu\",\n]\n\n[[package]]\nname = \"winapi-i686-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ac3b87c63620426dd9b991e5ce0329eff545bccbbb34f3be09ff6fb6ab51b7b6\"\n\n[[package]]\nname = \"winapi-x86_64-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"712e227841d057c1ee1cd2fb22fa7e5a5461ae8e48fa2ca79ec42cfc1931183f\"\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.48.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"677d2418bec65e3338edb076e806bc1ec15693c5d0104683f2efe857f61056a9\"\ndependencies = [\n \"windows-targets 0.48.5\",\n]\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.52.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"282be5f36a8ce781fad8c8ae18fa3f9beff57ec1b52cb3de0789201425d9a33d\"\ndependencies = [\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.59.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1e38bc4d79ed67fd075bcc251a1c39b32a1776bbe92e5bef1f0bf1f8c531853b\"\ndependencies = [\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"windows-targets\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9a2fa6e2155d7247be68c096456083145c183cbbbc2764150dda45a87197940c\"\ndependencies = [\n \"windows_aarch64_gnullvm 0.48.5\",\n \"windows_aarch64_msvc 0.48.5\",\n \"windows_i686_gnu 0.48.5\",\n \"windows_i686_msvc 0.48.5\",\n \"windows_x86_64_gnu 0.48.5\",\n \"windows_x86_64_gnullvm 0.48.5\",\n \"windows_x86_64_msvc 0.48.5\",\n]\n\n[[package]]\nname = \"windows-targets\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9b724f72796e036ab90c1021d4780d4d3d648aca59e491e6b98e725b84e99973\"\ndependencies = [\n \"windows_aarch64_gnullvm 0.52.6\",\n \"windows_aarch64_msvc 0.52.6\",\n \"windows_i686_gnu 0.52.6\",\n \"windows_i686_gnullvm\",\n \"windows_i686_msvc 0.52.6\",\n \"windows_x86_64_gnu 0.52.6\",\n \"windows_x86_64_gnullvm 0.52.6\",\n \"windows_x86_64_msvc 0.52.6\",\n]\n\n[[package]]\nname = \"windows_aarch64_gnullvm\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2b38e32f0abccf9987a4e3079dfb67dcd799fb61361e53e2882c3cbaf0d905d8\"\n\n[[package]]\nname = \"windows_aarch64_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"32a4622180e7a0ec044bb555404c800bc9fd9ec262ec147edd5989ccd0c02cd3\"\n\n[[package]]\nname = \"windows_aarch64_msvc\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dc35310971f3b2dbbf3f0690a219f40e2d9afcf64f9ab7cc1be722937c26b4bc\"\n\n[[package]]\nname = \"windows_aarch64_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"09ec2a7bb152e2252b53fa7803150007879548bc709c039df7627cabbd05d469\"\n\n[[package]]\nname = \"windows_i686_gnu\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a75915e7def60c94dcef72200b9a8e58e5091744960da64ec734a6c6e9b3743e\"\n\n[[package]]\nname = \"windows_i686_gnu\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8e9b5ad5ab802e97eb8e295ac6720e509ee4c243f69d781394014ebfe8bbfa0b\"\n\n[[package]]\nname = \"windows_i686_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0eee52d38c090b3caa76c563b86c3a4bd71ef1a819287c19d586d7334ae8ed66\"\n\n[[package]]\nname = \"windows_i686_msvc\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8f55c233f70c4b27f66c523580f78f1004e8b5a8b659e05a4eb49d4166cca406\"\n\n[[package]]\nname = \"windows_i686_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"240948bc05c5e7c6dabba28bf89d89ffce3e303022809e73deaefe4f6ec56c66\"\n\n[[package]]\nname = \"windows_x86_64_gnu\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"53d40abd2583d23e4718fddf1ebec84dbff8381c07cae67ff7768bbf19c6718e\"\n\n[[package]]\nname = \"windows_x86_64_gnu\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"147a5c80aabfbf0c7d901cb5895d1de30ef2907eb21fbbab29ca94c5b08b1a78\"\n\n[[package]]\nname = \"windows_x86_64_gnullvm\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0b7b52767868a23d5bab768e390dc5f5c55825b6d30b86c844ff2dc7414044cc\"\n\n[[package]]\nname = \"windows_x86_64_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"24d5b23dc417412679681396f2b49f3de8c1473deb516bd34410872eff51ed0d\"\n\n[[package]]\nname = \"windows_x86_64_msvc\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ed94fce61571a4006852b7389a063ab983c02eb1bb37b47f8272ce92d06d9538\"\n\n[[package]]\nname = \"windows_x86_64_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"589f6da84c646204747d1270a2a5661ea66ed1cced2631d546fdfb155959f9ec\"\n\n[[package]]\nname = \"winnow\"\nversion = \"0.5.40\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f593a95398737aeed53e489c785df13f3618e41dbcd6718c6addbf1395aa6876\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"xdg-home\"\nversion = \"1.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ec1cdab258fb55c0da61328dc52c8764709b249011b2cad0454c72f0bf10a1f6\"\ndependencies = [\n \"libc\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"zbus\"\nversion = \"4.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bb97012beadd29e654708a0fdb4c84bc046f537aecfde2c3ee0a9e4b4d48c725\"\ndependencies = [\n \"async-broadcast\",\n \"async-executor\",\n \"async-fs\",\n \"async-io\",\n \"async-lock\",\n \"async-process\",\n \"async-recursion\",\n \"async-task\",\n \"async-trait\",\n \"blocking\",\n \"enumflags2\",\n \"event-listener\",\n \"futures-core\",\n \"futures-sink\",\n \"futures-util\",\n \"hex\",\n \"nix\",\n \"ordered-stream\",\n \"rand\",\n \"serde\",\n \"serde_repr\",\n \"sha1\",\n \"static_assertions\",\n \"tracing\",\n \"uds_windows\",\n \"windows-sys 0.52.0\",\n \"xdg-home\",\n \"zbus_macros\",\n \"zbus_names\",\n \"zvariant\",\n]\n\n[[package]]\nname = \"zbus_macros\"\nversion = \"4.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"267db9407081e90bbfa46d841d3cbc60f59c0351838c4bc65199ecd79ab1983e\"\ndependencies = [\n \"proc-macro-crate\",\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n \"zvariant_utils\",\n]\n\n[[package]]\nname = \"zbus_names\"\nversion = \"3.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4b9b1fef7d021261cc16cba64c351d291b715febe0fa10dc3a443ac5a5022e6c\"\ndependencies = [\n \"serde\",\n \"static_assertions\",\n \"zvariant\",\n]\n\n[[package]]\nname = \"zerocopy\"\nversion = \"0.7.35\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1b9b4fd18abc82b8136838da5d50bae7bdea537c574d8dc1a34ed098d6c166f0\"\ndependencies = [\n \"byteorder\",\n \"zerocopy-derive 0.7.35\",\n]\n\n[[package]]\nname = \"zerocopy\"\nversion = \"0.8.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5a4e33e6dce36f2adba29746927f8e848ba70989fdb61c772773bbdda8b5d6a7\"\ndependencies = [\n \"zerocopy-derive 0.8.8\",\n]\n\n[[package]]\nname = \"zerocopy-derive\"\nversion = \"0.7.35\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fa4f8080344d4671fb4e831a13ad1e68092748387dfc4f55e356242fae12ce3e\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"zerocopy-derive\"\nversion = \"0.8.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3cd137b4cc21bde6ecce3bbbb3350130872cda0be2c6888874279ea76e17d4c1\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"zvariant\"\nversion = \"4.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2084290ab9a1c471c38fc524945837734fbf124487e105daec2bb57fd48c81fe\"\ndependencies = [\n \"endi\",\n \"enumflags2\",\n \"serde\",\n \"static_assertions\",\n \"zvariant_derive\",\n]\n\n[[package]]\nname = \"zvariant_derive\"\nversion = \"4.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"73e2ba546bda683a90652bac4a279bc146adad1386f25379cf73200d2002c449\"\ndependencies = [\n \"proc-macro-crate\",\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n \"zvariant_utils\",\n]\n\n[[package]]\nname = \"zvariant_utils\"\nversion = \"2.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c51bcff7cc3dbb5055396bcf774748c3dab426b4b8659046963523cee4808340\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n"
        },
        {
          "name": "Cargo.toml",
          "type": "blob",
          "size": 3.341796875,
          "content": "[package]\nauthors = [\"The Cloud Hypervisor Authors\"]\nbuild = \"build.rs\"\ndefault-run = \"cloud-hypervisor\"\ndescription = \"Open source Virtual Machine Monitor (VMM) that runs on top of KVM & MSHV\"\nedition = \"2021\"\nhomepage = \"https://github.com/cloud-hypervisor/cloud-hypervisor\"\nlicense = \"Apache-2.0 AND BSD-3-Clause\"\nname = \"cloud-hypervisor\"\nversion = \"43.0.0\"\n# Minimum buildable version:\n# Keep in sync with version in .github/workflows/build.yaml\n# Policy on MSRV (see #4318):\n# Can only be bumped by:\n# a.) A dependency requires it,\n# b.) If we want to use a new feature and that MSRV is at least 6 months old,\n# c.) There is a security issue that is addressed by the toolchain update.\nrust-version = \"1.77.0\"\n\n[profile.release]\ncodegen-units = 1\nlto = true\nopt-level = \"s\"\nstrip = true\n\n[profile.profiling]\ndebug = true\ninherits = \"release\"\nstrip = false\n\n[dependencies]\nanyhow = \"1.0.94\"\napi_client = { path = \"api_client\" }\nclap = { version = \"4.5.13\", features = [\"string\"] }\ndhat = { version = \"0.3.3\", optional = true }\nepoll = \"4.3.3\"\nevent_monitor = { path = \"event_monitor\" }\nhypervisor = { path = \"hypervisor\" }\nlibc = \"0.2.167\"\nlog = { version = \"0.4.22\", features = [\"std\"] }\noption_parser = { path = \"option_parser\" }\nseccompiler = { workspace = true }\nserde_json = \"1.0.120\"\nsignal-hook = \"0.3.17\"\nthiserror = \"2.0.6\"\ntpm = { path = \"tpm\" }\ntracer = { path = \"tracer\" }\nvm-memory = { workspace = true }\nvmm = { path = \"vmm\" }\nvmm-sys-util = { workspace = true }\nzbus = { version = \"4.4.0\", optional = true }\n\n[dev-dependencies]\ndirs = \"5.0.1\"\nnet_util = { path = \"net_util\" }\nonce_cell = \"1.20.2\"\nserde_json = \"1.0.120\"\ntest_infra = { path = \"test_infra\" }\nwait-timeout = \"0.2.0\"\n\n# Please adjust `vmm::feature_list()` accordingly when changing the\n# feature list below\n[features]\ndbus_api = [\"vmm/dbus_api\", \"zbus\"]\ndefault = [\"io_uring\", \"kvm\"]\ndhat-heap = [\"dhat\", \"vmm/dhat-heap\"]       # For heap profiling\nguest_debug = [\"vmm/guest_debug\"]\nigvm = [\"mshv\", \"vmm/igvm\"]\nio_uring = [\"vmm/io_uring\"]\nkvm = [\"vmm/kvm\"]\nmshv = [\"vmm/mshv\"]\npvmemcontrol = [\"vmm/pvmemcontrol\"]\nsev_snp = [\"igvm\", \"mshv\", \"vmm/sev_snp\"]\ntdx = [\"vmm/tdx\"]\ntracing = [\"tracer/tracing\", \"vmm/tracing\"]\n\n[workspace]\nmembers = [\n  \"api_client\",\n  \"arch\",\n  \"block\",\n  \"devices\",\n  \"event_monitor\",\n  \"hypervisor\",\n  \"net_gen\",\n  \"net_util\",\n  \"option_parser\",\n  \"pci\",\n  \"performance-metrics\",\n  \"rate_limiter\",\n  \"serial_buffer\",\n  \"test_infra\",\n  \"tracer\",\n  \"vhost_user_block\",\n  \"vhost_user_net\",\n  \"virtio-devices\",\n  \"vm-allocator\",\n  \"vm-device\",\n  \"vm-migration\",\n  \"vm-virtio\",\n  \"vmm\",\n]\n\n[workspace.dependencies]\nacpi_tables = { git = \"https://github.com/rust-vmm/acpi_tables\", branch = \"main\" }\nkvm-bindings = \"0.10.0\"\nkvm-ioctls = \"0.19.1\"\nlinux-loader = \"0.13.0\"\nmshv-bindings = \"0.3.2\"\nmshv-ioctls = \"0.3.2\"\nseccompiler = \"0.4.0\"\nvfio-bindings = { git = \"https://github.com/rust-vmm/vfio\", branch = \"main\" }\nvfio-ioctls = { git = \"https://github.com/rust-vmm/vfio\", branch = \"main\", default-features = false }\nvfio_user = { git = \"https://github.com/rust-vmm/vfio-user\", branch = \"main\" }\nvhost = { git = \"https://github.com/rust-vmm/vhost\", rev = \"d983ae0\" }\nvhost-user-backend = { git = \"https://github.com/rust-vmm/vhost\", rev = \"d983ae0\" }\nvirtio-bindings = \"0.2.4\"\nvirtio-queue = \"0.14.0\"\nvm-fdt = { git = \"https://github.com/rust-vmm/vm-fdt\", branch = \"main\" }\nvm-memory = \"0.16.1\"\nvmm-sys-util = \"0.12.1\"\n"
        },
        {
          "name": "LICENSES",
          "type": "tree",
          "content": null
        },
        {
          "name": "MAINTAINERS.md",
          "type": "blob",
          "size": 0.1669921875,
          "content": "# Maintainers\n\n- Sebastien Boeuf - @sboeuf\n- Robert Bradford - @rbradford\n- Bo Chen - @likebreath\n- Samuel Ortiz - @sameo\n- Wei Liu - @liuw\n- Michael Zhao - @michael2012z\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 14.8916015625,
          "content": "- [1. What is Cloud Hypervisor?](#1-what-is-cloud-hypervisor)\n  - [Objectives](#objectives)\n    - [High Level](#high-level)\n    - [Architectures](#architectures)\n    - [Guest OS](#guest-os)\n- [2. Getting Started](#2-getting-started)\n  - [Host OS](#host-os)\n  - [Use Pre-built Binaries](#use-pre-built-binaries)\n  - [Packages](#packages)\n  - [Building from Source](#building-from-source)\n  - [Booting Linux](#booting-linux)\n    - [Firmware Booting](#firmware-booting)\n    - [Custom Kernel and Disk Image](#custom-kernel-and-disk-image)\n      - [Building your Kernel](#building-your-kernel)\n      - [Disk image](#disk-image)\n      - [Booting the guest VM](#booting-the-guest-vm)\n- [3. Status](#3-status)\n  - [Hot Plug](#hot-plug)\n  - [Device Model](#device-model)\n  - [Roadmap](#roadmap)\n- [4. Relationship with _Rust VMM_ Project](#4-relationship-with-rust-vmm-project)\n  - [Differences with Firecracker and crosvm](#differences-with-firecracker-and-crosvm)\n- [5. Community](#5-community)\n  - [Contribute](#contribute)\n  - [Slack](#slack)\n  - [Mailing list](#mailing-list)\n  - [Security issues](#security-issues)\n\n# 1. What is Cloud Hypervisor?\n\nCloud Hypervisor is an open source Virtual Machine Monitor (VMM) that runs on\ntop of the [KVM](https://www.kernel.org/doc/Documentation/virtual/kvm/api.txt)\nhypervisor and the Microsoft Hypervisor (MSHV).\n\nThe project focuses on running modern, _Cloud Workloads_, on specific, common,\nhardware architectures. In this case _Cloud Workloads_ refers to those that are\nrun by customers inside a Cloud Service Provider. This means modern operating\nsystems with most I/O handled by\nparavirtualised devices (e.g. _virtio_), no requirement for legacy devices, and\n64-bit CPUs.\n\nCloud Hypervisor is implemented in [Rust](https://www.rust-lang.org/) and is\nbased on the [Rust VMM](https://github.com/rust-vmm) crates.\n\n## Objectives\n\n### High Level\n\n- Runs on KVM or MSHV\n- Minimal emulation\n- Low latency\n- Low memory footprint\n- Low complexity\n- High performance\n- Small attack surface\n- 64-bit support only\n- CPU, memory, PCI hotplug\n- Machine to machine migration\n\n### Architectures\n\nCloud Hypervisor supports the `x86-64` and `AArch64` architectures. There are\nminor differences in functionality between the two architectures\n(see [#1125](https://github.com/cloud-hypervisor/cloud-hypervisor/issues/1125)).\n\n### Guest OS\n\nCloud Hypervisor supports `64-bit Linux` and Windows 10/Windows Server 2019.\n\n# 2. Getting Started\n\nThe following sections describe how to build and run Cloud Hypervisor.\n\n## Prerequisites for AArch64\n\n- AArch64 servers (recommended) or development boards equipped with the GICv3\n  interrupt controller.\n\n## Host OS\n\nFor required KVM functionality and adequate performance the recommended host\nkernel version is 5.13. The majority of the CI currently tests with kernel\nversion 5.15.\n\n## Use Pre-built Binaries\n\nThe recommended approach to getting started with Cloud Hypervisor is by using a\npre-built binary. Binaries are available for the [latest\nrelease](https://github.com/cloud-hypervisor/cloud-hypervisor/releases/latest).\nUse `cloud-hypervisor-static` for `x86-64` or `cloud-hypervisor-static-aarch64`\nfor `AArch64` platform.\n\n## Packages\n\nFor convenience, packages are also available targeting some popular Linux\ndistributions. This is thanks to the [Open Build\nService](https://build.opensuse.org). The [OBS\nREADME](https://github.com/cloud-hypervisor/obs-packaging) explains how to\nenable the repository in a supported Linux distribution and install Cloud Hypervisor\nand accompanying packages. Please report any packaging issues in the\n[obs-packaging](https://github.com/cloud-hypervisor/obs-packaging) repository.\n\n## Building from Source\n\nPlease see the [instructions for building from source](docs/building.md) if you\ndo not wish to use the pre-built binaries.\n\n## Booting Linux\n\nCloud Hypervisor supports direct kernel boot (the x86-64 kernel requires the kernel\nbuilt with PVH support or a bzImage) or booting via a firmware (either [Rust Hypervisor\nFirmware](https://github.com/cloud-hypervisor/rust-hypervisor-firmware) or an\nedk2 UEFI firmware called `CLOUDHV` / `CLOUDHV_EFI`.)\n\nBinary builds of the firmware files are available for the latest release of\n[Rust Hypervisor\nFirmware](https://github.com/cloud-hypervisor/rust-hypervisor-firmware/releases/latest)\nand [our edk2\nrepository](https://github.com/cloud-hypervisor/edk2/releases/latest)\n\nThe choice of firmware depends on your guest OS choice; some experimentation\nmay be required.\n\n### Firmware Booting\n\nCloud Hypervisor supports booting disk images containing all needed components\nto run cloud workloads, a.k.a. cloud images.\n\nThe following sample commands will download an Ubuntu Cloud image, converting\nit into a format that Cloud Hypervisor can use and a firmware to boot the image\nwith.\n\n```shell\n$ wget https://cloud-images.ubuntu.com/focal/current/focal-server-cloudimg-amd64.img\n$ qemu-img convert -p -f qcow2 -O raw focal-server-cloudimg-amd64.img focal-server-cloudimg-amd64.raw\n$ wget https://github.com/cloud-hypervisor/rust-hypervisor-firmware/releases/download/0.4.2/hypervisor-fw\n```\n\nThe Ubuntu cloud images do not ship with a default password so it necessary to\nuse a `cloud-init` disk image to customise the image on the first boot. A basic\n`cloud-init` image is generated by this [script](scripts/create-cloud-init.sh).\nThis seeds the image with a default username/password of `cloud/cloud123`. It\nis only necessary to add this disk image on the first boot. Script also assigns\ndefault IP address using `test_data/cloud-init/ubuntu/local/network-config` details\nwith `--net \"mac=12:34:56:78:90:ab,tap=\"` option. Then the matching mac address\ninterface will be enabled as per `network-config` details.\n\n```shell\n$ sudo setcap cap_net_admin+ep ./cloud-hypervisor\n$ ./create-cloud-init.sh\n$ ./cloud-hypervisor \\\n\t--kernel ./hypervisor-fw \\\n\t--disk path=focal-server-cloudimg-amd64.raw path=/tmp/ubuntu-cloudinit.img \\\n\t--cpus boot=4 \\\n\t--memory size=1024M \\\n\t--net \"tap=,mac=,ip=,mask=\"\n```\n\nIf access to the firmware messages or interaction with the boot loader (e.g.\nGRUB) is required then it necessary to switch to the serial console instead of\n`virtio-console`.\n\n```shell\n$ ./cloud-hypervisor \\\n\t--kernel ./hypervisor-fw \\\n\t--disk path=focal-server-cloudimg-amd64.raw path=/tmp/ubuntu-cloudinit.img \\\n\t--cpus boot=4 \\\n\t--memory size=1024M \\\n\t--net \"tap=,mac=,ip=,mask=\" \\\n\t--serial tty \\\n\t--console off\n```\n\n### Custom Kernel and Disk Image\n\n#### Building your Kernel\n\nCloud Hypervisor also supports direct kernel boot. For x86-64, a `vmlinux` ELF kernel (compiled with PVH support) or a regular bzImage are supported. In order to support development there is a custom branch; however provided the required options are enabled any recent kernel will suffice.\n\nTo build the kernel:\n\n```shell\n# Clone the Cloud Hypervisor Linux branch\n$ git clone --depth 1 https://github.com/cloud-hypervisor/linux.git -b ch-6.2 linux-cloud-hypervisor\n$ pushd linux-cloud-hypervisor\n# Use the x86-64 cloud-hypervisor kernel config to build your kernel for x86-64\n$ wget https://raw.githubusercontent.com/cloud-hypervisor/cloud-hypervisor/main/resources/linux-config-x86_64\n# Use the AArch64 cloud-hypervisor kernel config to build your kernel for AArch64\n$ wget https://raw.githubusercontent.com/cloud-hypervisor/cloud-hypervisor/main/resources/linux-config-aarch64\n$ cp linux-config-x86_64 .config  # x86-64\n$ cp linux-config-aarch64 .config # AArch64\n# Do native build of the x86-64 kernel\n$ KCFLAGS=\"-Wa,-mx86-used-note=no\" make bzImage -j `nproc`\n# Do native build of the AArch64 kernel\n$ make -j `nproc`\n$ popd\n```\n\nFor x86-64, the `vmlinux` kernel image will then be located at\n`linux-cloud-hypervisor/arch/x86/boot/compressed/vmlinux.bin`.\nFor AArch64, the `Image` kernel image will then be located at\n`linux-cloud-hypervisor/arch/arm64/boot/Image`.\n\n#### Disk image\n\nFor the disk image the same Ubuntu image as before can be used. This contains\nan `ext4` root filesystem.\n\n```shell\n$ wget https://cloud-images.ubuntu.com/focal/current/focal-server-cloudimg-amd64.img # x86-64\n$ wget https://cloud-images.ubuntu.com/focal/current/focal-server-cloudimg-arm64.img # AArch64\n$ qemu-img convert -p -f qcow2 -O raw focal-server-cloudimg-amd64.img focal-server-cloudimg-amd64.raw # x86-64\n$ qemu-img convert -p -f qcow2 -O raw focal-server-cloudimg-arm64.img focal-server-cloudimg-arm64.raw # AArch64\n```\n\n#### Booting the guest VM\n\nThese sample commands boot the disk image using the custom kernel whilst also\nsupplying the desired kernel command line.\n\n- x86-64\n\n```shell\n$ sudo setcap cap_net_admin+ep ./cloud-hypervisor\n$ ./create-cloud-init.sh\n$ ./cloud-hypervisor \\\n\t--kernel ./linux-cloud-hypervisor/arch/x86/boot/compressed/vmlinux.bin \\\n\t--disk path=focal-server-cloudimg-amd64.raw path=/tmp/ubuntu-cloudinit.img \\\n\t--cmdline \"console=hvc0 root=/dev/vda1 rw\" \\\n\t--cpus boot=4 \\\n\t--memory size=1024M \\\n\t--net \"tap=,mac=,ip=,mask=\"\n```\n\n- AArch64\n\n```shell\n$ sudo setcap cap_net_admin+ep ./cloud-hypervisor\n$ ./create-cloud-init.sh\n$ ./cloud-hypervisor \\\n\t--kernel ./linux-cloud-hypervisor/arch/arm64/boot/Image \\\n\t--disk path=focal-server-cloudimg-arm64.raw path=/tmp/ubuntu-cloudinit.img \\\n\t--cmdline \"console=hvc0 root=/dev/vda1 rw\" \\\n\t--cpus boot=4 \\\n\t--memory size=1024M \\\n\t--net \"tap=,mac=,ip=,mask=\"\n```\n\nIf earlier kernel messages are required the serial console should be used instead of `virtio-console`.\n\n- x86-64\n\n```shell\n$ ./cloud-hypervisor \\\n\t--kernel ./linux-cloud-hypervisor/arch/x86/boot/compressed/vmlinux.bin \\\n\t--console off \\\n\t--serial tty \\\n\t--disk path=focal-server-cloudimg-amd64.raw \\\n\t--cmdline \"console=ttyS0 root=/dev/vda1 rw\" \\\n\t--cpus boot=4 \\\n\t--memory size=1024M \\\n\t--net \"tap=,mac=,ip=,mask=\"\n```\n\n- AArch64\n\n```shell\n$ ./cloud-hypervisor \\\n\t--kernel ./linux-cloud-hypervisor/arch/arm64/boot/Image \\\n\t--console off \\\n\t--serial tty \\\n\t--disk path=focal-server-cloudimg-arm64.raw \\\n\t--cmdline \"console=ttyAMA0 root=/dev/vda1 rw\" \\\n\t--cpus boot=4 \\\n\t--memory size=1024M \\\n\t--net \"tap=,mac=,ip=,mask=\"\n```\n\n# 3. Status\n\nCloud Hypervisor is under active development. The following stability\nguarantees are currently made:\n\n* The API (including command line options) will not be removed or changed in a\n  breaking way without a minimum of 2 major releases notice. Where possible\n  warnings will be given about the use of deprecated functionality and the\n  deprecations will be documented in the release notes.\n\n* Point releases will be made between individual releases where there are\n  substantial bug fixes or security issues that need to be fixed. These point\n  releases will only include bug fixes.\n\nCurrently the following items are **not** guaranteed across updates:\n\n* Snapshot/restore is not supported across different versions\n* Live migration is not supported across different versions\n* The following features are considered experimental and may change\n  substantially between releases: TDX, vfio-user, vDPA.\n\nFurther details can be found in the [release documentation](docs/releases.md).\n\nAs of 2023-01-03, the following cloud images are supported:\n\n- [Ubuntu Focal](https://cloud-images.ubuntu.com/focal/current/) (focal-server-cloudimg-{amd64,arm64}.img)\n- [Ubuntu Jammy](https://cloud-images.ubuntu.com/jammy/current/) (jammy-server-cloudimg-{amd64,arm64}.img )\n- [Fedora 36](https://fedora.mirrorservice.org/fedora/linux/releases/36/Cloud/) ([Fedora-Cloud-Base-36-1.5.x86_64.raw.xz](https://fedora.mirrorservice.org/fedora/linux/releases/36/Cloud/x86_64/images/) / [Fedora-Cloud-Base-36-1.5.aarch64.raw.xz](https://fedora.mirrorservice.org/fedora/linux/releases/36/Cloud/aarch64/images/))\n\nDirect kernel boot to userspace should work with a rootfs from most\ndistributions although you may need to enable exotic filesystem types in the\nreference kernel configuration (e.g. XFS or btrfs.)\n\n## Hot Plug\n\nCloud Hypervisor supports hotplug of CPUs, passthrough devices (VFIO),\n`virtio-{net,block,pmem,fs,vsock}` and memory resizing. This\n[document](docs/hotplug.md) details how to add devices to a running VM.\n\n## Device Model\n\nDetails of the device model can be found in this\n[documentation](docs/device_model.md).\n\n## Roadmap\n\nThe project roadmap is tracked through a [GitHub\nproject](https://github.com/orgs/cloud-hypervisor/projects/6).\n\n# 4. Relationship with _Rust VMM_ Project\n\nIn order to satisfy the design goal of having a high-performance,\nsecurity-focused hypervisor the decision was made to use the\n[Rust](https://www.rust-lang.org/) programming language. The language's strong\nfocus on memory and thread safety makes it an ideal candidate for implementing\nVMMs.\n\nInstead of implementing the VMM components from scratch, Cloud Hypervisor is\nimporting the [Rust VMM](https://github.com/rust-vmm) crates, and sharing code\nand architecture together with other VMMs like e.g. Amazon's\n[Firecracker](https://firecracker-microvm.github.io/) and Google's\n[crosvm](https://chromium.googlesource.com/chromiumos/platform/crosvm/).\n\nCloud Hypervisor embraces the _Rust VMM_ project's goals, which is to be able\nto share and re-use as many virtualization crates as possible.\n\n## Differences with Firecracker and crosvm\n\nA large part of the Cloud Hypervisor code is based on either the Firecracker or\nthe crosvm project's implementations. Both of these are VMMs written in Rust\nwith a focus on safety and security, like Cloud Hypervisor.\n\nThe goal of the Cloud Hypervisor project differs from the aforementioned\nprojects in that it aims to be a general purpose VMM for _Cloud Workloads_ and\nnot limited to container/serverless or client workloads.\n\nThe Cloud Hypervisor community thanks the communities of both the Firecracker\nand crosvm projects for their excellent work.\n\n# 5. Community\n\nThe Cloud Hypervisor project follows the governance, and community guidelines\ndescribed in the [Community](https://github.com/cloud-hypervisor/community)\nrepository.\n\n## Contribute\n\nThe project strongly believes in building a global, diverse and collaborative\ncommunity around the Cloud Hypervisor project. Anyone who is interested in\n[contributing](CONTRIBUTING.md) to the project is welcome to participate.\n\nContributing to a open source project like Cloud Hypervisor covers a lot more\nthan just sending code. Testing, documentation, pull request\nreviews, bug reports, feature requests, project improvement suggestions, etc,\nare all equal and welcome means of contribution. See the\n[CONTRIBUTING](CONTRIBUTING.md) document for more details.\n\n## Slack\n\nGet an [invite to our Slack channel](https://join.slack.com/t/cloud-hypervisor/shared_invite/enQtNjY3MTE3MDkwNDQ4LWQ1MTA1ZDVmODkwMWQ1MTRhYzk4ZGNlN2UwNTI3ZmFlODU0OTcwOWZjMTkwZDExYWE3YjFmNzgzY2FmNDAyMjI),\n [join us on Slack](https://cloud-hypervisor.slack.com/), and [participate in our community activities](https://cloud-hypervisor.slack.com/archives/C04R5DUQVBN).\n\n## Mailing list\n\nPlease report bugs using the [GitHub issue\ntracker](https://github.com/cloud-hypervisor/cloud-hypervisor/issues) but for\nbroader community discussions you may use our [mailing\nlist](https://lists.cloudhypervisor.org/g/dev/).\n\n## Security issues\n\nPlease contact the maintainers listed in the MAINTAINERS.md file with security issues.\n"
        },
        {
          "name": "api_client",
          "type": "tree",
          "content": null
        },
        {
          "name": "arch",
          "type": "tree",
          "content": null
        },
        {
          "name": "block",
          "type": "tree",
          "content": null
        },
        {
          "name": "build.rs",
          "type": "blob",
          "size": 0.7392578125,
          "content": "// Copyright © 2020 Intel Corporation\n//\n// SPDX-License-Identifier: Apache-2.0\n//\n\nuse std::process::Command;\n\nfn main() {\n    let mut version = \"v\".to_owned() + env!(\"CARGO_PKG_VERSION\");\n\n    if let Ok(git_out) = Command::new(\"git\").args([\"describe\", \"--dirty\"]).output() {\n        if git_out.status.success() {\n            if let Ok(git_out_str) = String::from_utf8(git_out.stdout) {\n                version = git_out_str;\n            }\n        }\n    }\n\n    // This println!() has a special behavior, as it will set the environment\n    // variable BUILD_VERSION, so that it can be reused from the binary.\n    // Particularly, this is used from src/main.rs to display the exact\n    // version.\n    println!(\"cargo:rustc-env=BUILD_VERSION={version}\");\n}\n"
        },
        {
          "name": "devices",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "event_monitor",
          "type": "tree",
          "content": null
        },
        {
          "name": "fuzz",
          "type": "tree",
          "content": null
        },
        {
          "name": "hypervisor",
          "type": "tree",
          "content": null
        },
        {
          "name": "net_gen",
          "type": "tree",
          "content": null
        },
        {
          "name": "net_util",
          "type": "tree",
          "content": null
        },
        {
          "name": "option_parser",
          "type": "tree",
          "content": null
        },
        {
          "name": "pci",
          "type": "tree",
          "content": null
        },
        {
          "name": "performance-metrics",
          "type": "tree",
          "content": null
        },
        {
          "name": "rate_limiter",
          "type": "tree",
          "content": null
        },
        {
          "name": "release-notes.md",
          "type": "blob",
          "size": 129.546875,
          "content": "- [v43.0](#v430)\n    - [Live Migration over TCP Connections](#live-migration-over-tcp-connections)\n    - [Notable Performance Improvements](#notable-performance-improvements)\n    - [Notable Bug Fixes](#notable-bug-fixes)\n    - [Contributors](#contributors)\n- [v42.0](#v420)\n    - [SVE/SVE2 Support on AArch64](#svesve2-support-on-aarch64)\n    - [Notable Bug Fixes](#notable-bug-fixes-1)\n    - [Sponsorships](#sponsorships)\n    - [Contributors](#contributors-1)\n- [v41.0](#v410)\n    - [Experimental \"Pvmemcontrol\" Support](#experimental-pvmemcontrol-support)\n    - [Sandboxing With Landlock Support](#sandboxing-with-landlock-support)\n    - [Notable Performance Improvements](#notable-performance-improvements-1)\n    - [Notable Bug Fixes](#notable-bug-fixes-2)\n    - [Contributors](#contributors-2)\n- [v40.0](#v400)\n    - [Support for Restoring File Descriptor Backed Network Devices](#support-for-restoring-file-descriptor-backed-network-devices)\n    - [Notable Bug Fixes](#notable-bug-fixes-3)\n    - [Contributors](#contributors-3)\n- [v39.0](#v390)\n    - [Variable Sizing of PCI Apertures for Segments](#variable-sizing-of-pci-apertures-for-segments)\n    - [Direct Booting with bzImages](#direct-booting-with-bzimages)\n    - [Support for NVIDIA GPUDirect P2P Support](#support-for-nvidia-gpudirect-p2p-support)\n    - [Guest NMI Injection Support](#guest-nmi-injection-support)\n    - [Notable Bug Fixes](#notable-bug-fixes-4)\n    - [Contributors](#contributors-4)\n- [v38.0](#v380)\n    - [Group Rate Limiter on Block Devices](#group-rate-limiter-on-block-devices)\n    - [CPU Pinning Support for Block Device Worker Thread](#cpu-pinning-support-for-block-device-worker-thread)\n    - [Optimized Boot Time with Parallel Memory Prefault](#optimized-boot-time-with-parallel-memory-prefault)\n    - [New 'debug-console' Device](#new-debug-console-device)\n    - [Improved VFIO Device Support](#improved-vfio-device-support)\n    - [Extended CPU Affinity Support](#extended-cpu-affinity-support)\n    - [Notable Bug Fixes](#notable-bug-fixes-5)\n    - [Contributors](#contributors-5)\n- [v37.0](#v370)\n    - [Long Term Support (LTS) Release](#long-term-support-lts-release)\n    - [Multiple PCI segments Support for 32-bit VFIO devices](#multiple-pci-segments-support-for-32-bit-vfio-devices)\n    - [Configurable Named TAP Devices](#configurable-named-tap-devices)\n    - [TTY Output from Both Serial Device and Virtio Console](#tty-output-from-both-serial-device-and-virtio-console)\n    - [Faster VM Restoration from Snapshots](#faster-vm-restoration-from-snapshots)\n    - [Notable Bug Fixes](#notable-bug-fixes-6)\n    - [Contributors](#contributors-6)\n- [v36.0](#v360)\n    - [Command Line Changes](#command-line-changes)\n    - [Enabled Features Reported via API Endpoint and CLI](#enabled-features-reported-via-api-endpoint-and-cli)\n    - [NUMA Support for PCI segments](#numa-support-for-pci-segments)\n    - [CPU Topology Support on AMD Platforms](#cpu-topology-support-on-amd-platforms)\n    - [Unix Socket Backend for Serial Port](#unix-socket-backend-for-serial-port)\n    - [AIO Backend for Block Devices](#aio-backend-for-block-devices)\n    - [Documentation Improvements](#documentation-improvements)\n    - [Notable Bug Fixes](#notable-bug-fixes-7)\n    - [Contributors](#contributors-7)\n- [v35.0](#v350)\n    - [`virtio-vsock` Support for Linux Guest Kernel v6.3+](#virtio-vsock-support-for-linux-guest-kernel-v63)\n    - [User Specified Serial Number for `virtio-block`](#user-specified-serial-number-for-virtio-block)\n    - [vCPU TSC Frequency Included in Migration State](#vcpu-tsc-frequency-included-in-migration-state)\n    - [Notable Bug Fixes](#notable-bug-fixes-8)\n    - [Contributors](#contributors-8)\n- [v34.0](#v340)\n    - [Paravirtualised Panic Device Support](#paravirtualised-panic-device-support)\n    - [Improvements to VM Core Dump](#improvements-to-vm-core-dump)\n    - [QCOW2 Support for Backing Files](#qcow2-support-for-backing-files)\n    - [Minimum Host Kernel Bump](#minimum-host-kernel-bump)\n    - [Notable Bug Fixes](#notable-bug-fixes-9)\n    - [Contributors](#contributors-9)\n- [v33.0](#v330)\n    - [D-Bus based API](#d-bus-based-api)\n    - [Expose Host CPU Cache Details for AArch64](#expose-host-cpu-cache-details-for-aarch64)\n    - [Notable Bug Fixes](#notable-bug-fixes-10)\n    - [Contributors](#contributors-10)\n- [v32.0](#v320)\n    - [Increased PCI Segment Limit](#increased-pci-segment-limit)\n    - [API Changes](#api-changes)\n    - [Notable Bug Fixes](#notable-bug-fixes-11)\n    - [Contributors](#contributors-11)\n- [v31.1](#v311)\n- [v31.0](#v310)\n    - [Update to Latest `acpi_tables`](#update-to-latest-acpi_tables)\n    - [Update Reference Kernel to 6.2](#update-reference-kernel-to-62)\n    - [Improvements on Console `SIGWINCH` Handler](#improvements-on-console-sigwinch-handler)\n    - [Remove Directory Support from `MemoryZoneConfig::file`](#remove-directory-support-from-memoryzoneconfigfile)\n    - [Documentation Improvements](#documentation-improvements-1)\n    - [Notable Bug Fixes](#notable-bug-fixes-12)\n    - [Contributors](#contributors-12)\n- [v30.0](#v300)\n    - [Command Line Changes for Reduced Binary Size](#command-line-changes-for-reduced-binary-size)\n    - [Basic vfio-user Server Support](#basic-vfio-user-server-support)\n    - [Heap Profiling Support](#heap-profiling-support)\n    - [Documentation Improvements](#documentation-improvements-2)\n    - [Notable Bug Fixes](#notable-bug-fixes-13)\n    - [Contributors](#contributors-13)\n- [v28.2](#v282)\n- [v29.0](#v290)\n    - [Release Binary Supports Both MSHV and KVM](#release-binary-supports-both-mshv-and-kvm)\n    - [Snapshot/Restore and Live Migration Improvements](#snapshotrestore-and-live-migration-improvements)\n    - [Heap Allocation Improvements](#heap-allocation-improvements)\n    - [`ch-remote` Improvements](#ch-remote-improvements)\n    - [`AArch64` Documentation Integration](#aarch64-documentation-integration)\n    - [`virtio-block` Counters Enhancement](#virtio-block-counters-enhancement)\n    - [TCP Offload Control](#tcp-offload-control)\n    - [Notable Bug Fixes](#notable-bug-fixes-14)\n    - [Removals](#removals)\n    - [Deprecations](#deprecations)\n    - [Contributors](#contributors-14)\n- [v28.1](#v281)\n- [v28.0](#v280)\n    - [Community Engagement (Reminder)](#community-engagement-reminder)\n    - [Long Term Support (LTS) Release](#long-term-support-lts-release-1)\n    - [Virtualised TPM Support](#virtualised-tpm-support)\n    - [Transparent Huge Page Support](#transparent-huge-page-support)\n    - [README Quick Start Improved](#readme-quick-start-improved)\n    - [Notable Bug Fixes](#notable-bug-fixes-15)\n    - [Removals](#removals-1)\n    - [Contributors](#contributors-15)\n- [v27.0](#v270)\n    - [Community Engagement](#community-engagement)\n    - [Prebuilt Packages](#prebuilt-packages)\n    - [Network Device MTU Exposed to Guest](#network-device-mtu-exposed-to-guest)\n    - [Boot Tracing](#boot-tracing)\n    - [Simplified Build Feature Flags](#simplified-build-feature-flags)\n    - [Asynchronous Kernel Loading](#asynchronous-kernel-loading)\n    - [GDB Support for AArch64](#gdb-support-for-aarch64)\n    - [Notable Bug Fixes](#notable-bug-fixes-16)\n    - [Deprecations](#deprecations-1)\n    - [Contributors](#contributors-16)\n- [v26.0](#v260)\n    - [SMBIOS Improvements via `--platform`](#smbios-improvements-via---platform)\n    - [Unified Binary MSHV and KVM Support](#unified-binary-mshv-and-kvm-support)\n    - [Notable Bug Fixes](#notable-bug-fixes-17)\n    - [Deprecations](#deprecations-2)\n    - [Removals](#removals-2)\n    - [Contributors](#contributors-17)\n- [v25.0](#v250)\n    - [`ch-remote` Improvements](#ch-remote-improvements-1)\n    - [VM \"Coredump\" Support](#vm-coredump-support)\n    - [Notable Bug Fixes](#notable-bug-fixes-18)\n    - [Removals](#removals-3)\n    - [Contributors](#contributors-18)\n- [v24.0](#v240)\n    - [Bypass Mode for `virtio-iommu`](#bypass-mode-for-virtio-iommu)\n    - [Ensure Identifiers Uniqueness](#ensure-identifiers-uniqueness)\n    - [Sparse Mmap support](#sparse-mmap-support)\n    - [Expose Platform Serial Number](#expose-platform-serial-number)\n    - [Notable Bug Fixes](#notable-bug-fixes-19)\n    - [Notable Improvements](#notable-improvements)\n    - [Deprecations](#deprecations-3)\n    - [New on the Website](#new-on-the-website)\n    - [Contributors](#contributors-19)\n- [v23.1](#v231)\n- [v23.0](#v230)\n    - [vDPA Support](#vdpa-support)\n    - [Updated OS Support list](#updated-os-support-list)\n    - [`AArch64` Memory Map Improvements](#aarch64-memory-map-improvements)\n    - [`AMX` Support](#amx-support)\n    - [Notable Bug Fixes](#notable-bug-fixes-20)\n    - [Deprecations](#deprecations-4)\n    - [Contributors](#contributors-20)\n- [v22.1](#v221)\n- [v22.0](#v220)\n    - [GDB Debug Stub Support](#gdb-debug-stub-support)\n    - [`virtio-iommu` Backed Segments](#virtio-iommu-backed-segments)\n    - [Before Boot Configuration Changes](#before-boot-configuration-changes)\n    - [`virtio-balloon` Free Page Reporting](#virtio-balloon-free-page-reporting)\n    - [Support for Direct Kernel Booting with TDX](#support-for-direct-kernel-booting-with-tdx)\n    - [PMU Support for AArch64](#pmu-support-for-aarch64)\n    - [Documentation Under CC-BY-4.0 License](#documentation-under-cc-by-40-license)\n    - [Deprecation of \"Classic\" `virtiofsd`](#deprecation-of-classic-virtiofsd)\n    - [Notable Bug Fixes](#notable-bug-fixes-21)\n    - [Contributors](#contributors-21)\n- [v21.0](#v210)\n    - [Efficient Local Live Migration (for Live Upgrade)](#efficient-local-live-migration-for-live-upgrade)\n    - [Recommended Kernel is Now 5.15](#recommended-kernel-is-now-515)\n    - [Notable Bug fixes](#notable-bug-fixes-22)\n    - [Contributors](#contributors-22)\n- [v20.2](#v202)\n- [v20.1](#v201)\n- [v20.0](#v200)\n    - [Multiple PCI segments support](#multiple-pci-segments-support)\n    - [CPU pinning](#cpu-pinning)\n    - [Improved VFIO support](#improved-vfio-support)\n    - [Safer code](#safer-code)\n    - [Extended documentation](#extended-documentation)\n    - [Notable bug fixes](#notable-bug-fixes-23)\n    - [Contributors](#contributors-23)\n- [v19.0](#v190)\n    - [Improved PTY handling for serial and `virtio-console`](#improved-pty-handling-for-serial-and-virtio-console)\n    - [PCI boot time optimisations](#pci-boot-time-optimisations)\n    - [Improved TDX support](#improved-tdx-support)\n    - [Live migration enhancements](#live-migration-enhancements)\n    - [`virtio-mem` support with `vfio-user`](#virtio-mem-support-with-vfio-user)\n    - [AArch64 for `virtio-iommu`](#aarch64-for-virtio-iommu)\n    - [Notable bug fixes](#notable-bug-fixes-24)\n    - [Contributors](#contributors-24)\n- [v18.0](#v180)\n    - [Experimental User Device (`vfio-user`) support](#experimental-user-device-vfio-user-support)\n    - [Migration support for `vhost-user` devices](#migration-support-for-vhost-user-devices)\n    - [VHDX disk image support](#vhdx-disk-image-support)\n    - [Device pass through on MSHV hypervisor](#device-pass-through-on-mshv-hypervisor)\n    - [AArch64 for support `virtio-mem`](#aarch64-for-support-virtio-mem)\n    - [Live migration on MSHV hypervisor](#live-migration-on-mshv-hypervisor)\n    - [AArch64 CPU topology support](#aarch64-cpu-topology-support)\n    - [Power button support on AArch64](#power-button-support-on-aarch64)\n    - [Notable bug fixes](#notable-bug-fixes-25)\n    - [Contributors](#contributors-25)\n- [v17.0](#v170)\n    - [ARM64 NUMA support using ACPI](#arm64-numa-support-using-acpi)\n    - [`Seccomp` support for MSHV backend](#seccomp-support-for-mshv-backend)\n    - [Hotplug of `macvtap` devices](#hotplug-of-macvtap-devices)\n    - [Improved SGX support](#improved-sgx-support)\n    - [Inflight tracking for `vhost-user` devices](#inflight-tracking-for-vhost-user-devices)\n    - [Notable bug fixes](#notable-bug-fixes-26)\n    - [Contributors](#contributors-26)\n- [v16.0](#v160)\n    - [Improved live migration support](#improved-live-migration-support)\n    - [Improved `vhost-user` support](#improved-vhost-user-support)\n    - [ARM64 ACPI and UEFI support](#arm64-acpi-and-uefi-support)\n    - [Notable bug fixes](#notable-bug-fixes-27)\n    - [Removed functionality](#removed-functionality)\n    - [Contributors](#contributors-27)\n- [v15.0](#v150)\n    - [Version numbering and stability guarantees](#version-numbering-and-stability-guarantees)\n    - [Network device rate limiting](#network-device-rate-limiting)\n    - [Support for runtime control of `virtio-net` guest offload](#support-for-runtime-control-of-virtio-net-guest-offload)\n    - [`--api-socket` supports file descriptor parameter](#--api-socket-supports-file-descriptor-parameter)\n    - [Bug fixes](#bug-fixes)\n    - [Deprecations](#deprecations-5)\n    - [Contributors](#contributors-28)\n- [v0.14.1](#v0141)\n- [v0.14.0](#v0140)\n    - [Structured event monitoring](#structured-event-monitoring)\n    - [MSHV improvements](#mshv-improvements)\n    - [Improved aarch64 platform](#improved-aarch64-platform)\n    - [Updated hotplug documentation](#updated-hotplug-documentation)\n    - [PTY control for serial and `virtio-console`](#pty-control-for-serial-and-virtio-console)\n    - [Block device rate limiting](#block-device-rate-limiting)\n    - [Deprecations](#deprecations-6)\n    - [Contributors](#contributors-29)\n- [v0.13.0](#v0130)\n    - [Wider VFIO device support](#wider-vfio-device-support)\n    - [Improved huge page support](#improved-huge-page-support)\n    - [MACvTAP support](#macvtap-support)\n    - [VHD disk image support](#vhd-disk-image-support)\n    - [Improved Virtio device threading](#improved-virtio-device-threading)\n    - [Clean shutdown support via synthetic power button](#clean-shutdown-support-via-synthetic-power-button)\n    - [Contributors](#contributors-30)\n- [v0.12.0](#v0120)\n    - [ARM64 enhancements](#arm64-enhancements)\n    - [Removal of `vhost-user-net` and `vhost-user-block` self spawning](#removal-of-vhost-user-net-and-vhost-user-block-self-spawning)\n    - [Migration of `vhost-user-fs` backend](#migration-of-vhost-user-fs-backend)\n    - [Enhanced \"info\" API](#enhanced-info-api)\n    - [Contributors](#contributors-31)\n- [v0.11.0](#v0110)\n    - [`io_uring` support by default for `virtio-block`](#io_uring-support-by-default-for-virtio-block)\n    - [Windows Guest Support](#windows-guest-support)\n    - [`vhost-user` \"Self Spawning\" Deprecation](#vhost-user-self-spawning-deprecation)\n    - [`virtio-mmio` Removal](#virtio-mmio-removal)\n    - [Snapshot/Restore support for ARM64](#snapshotrestore-support-for-arm64)\n    - [Improved Linux Boot Time](#improved-linux-boot-time)\n    - [`SIGTERM/SIGINT` Interrupt Signal Handling](#sigtermsigint-interrupt-signal-handling)\n    - [Default Log Level Changed](#default-log-level-changed)\n    - [New `--balloon` Parameter Added](#new---balloon-parameter-added)\n    - [Experimental `virtio-watchdog` Support](#experimental-virtio-watchdog-support)\n    - [Notable Bug Fixes](#notable-bug-fixes-28)\n    - [Contributors](#contributors-32)\n- [v0.10.0](#v0100)\n    - [`virtio-block` Support for Multiple Descriptors](#virtio-block-support-for-multiple-descriptors)\n    - [Memory Zones](#memory-zones)\n    - [`Seccomp` Sandbox Improvements](#seccomp-sandbox-improvements)\n    - [Preliminary KVM HyperV Emulation Control](#preliminary-kvm-hyperv-emulation-control)\n    - [Notable Bug Fixes](#notable-bug-fixes-29)\n    - [Contributors](#contributors-33)\n- [v0.9.0](#v090)\n    - [`io_uring` Based Block Device Support](#io_uring-based-block-device-support)\n    - [Block and Network Device Statistics](#block-and-network-device-statistics)\n    - [HTTP API Responses](#http-api-responses)\n    - [CPU Topology](#cpu-topology)\n    - [Release Build Optimization](#release-build-optimization)\n    - [Hypervisor Abstraction](#hypervisor-abstraction)\n    - [Snapshot/Restore Improvements](#snapshotrestore-improvements)\n    - [Virtio Memory Ballooning Support](#virtio-memory-ballooning-support)\n    - [Enhancements to ARM64 Support](#enhancements-to-arm64-support)\n    - [Intel SGX Support](#intel-sgx-support)\n    - [`Seccomp` Sandbox Improvements](#seccomp-sandbox-improvements-1)\n    - [Notable Bug Fixes](#notable-bug-fixes-30)\n    - [Contributors](#contributors-34)\n- [v0.8.0](#v080)\n    - [Experimental Snapshot and Restore Support](#experimental-snapshot-and-restore-support)\n    - [Experimental ARM64 Support](#experimental-arm64-support)\n    - [Support for Using 5-level Paging in Guests](#support-for-using-5-level-paging-in-guests)\n    - [Virtio Device Interrupt Suppression for Network Devices](#virtio-device-interrupt-suppression-for-network-devices)\n    - [`vhost_user_fs` Improvements](#vhost_user_fs-improvements)\n    - [Notable Bug Fixes](#notable-bug-fixes-31)\n    - [Command Line and API Changes](#command-line-and-api-changes)\n    - [Contributors](#contributors-35)\n- [v0.7.0](#v070)\n    - [Block, Network, Persistent Memory (PMEM), VirtioFS and Vsock hotplug](#block-network-persistent-memory-pmem-virtiofs-and-vsock-hotplug)\n    - [Alternative `libc` Support](#alternative-libc-support)\n    - [Multithreaded Multi Queued `vhost-user` Backends](#multithreaded-multi-queued-vhost-user-backends)\n    - [Initial RamFS Support](#initial-ramfs-support)\n    - [Alternative Memory Hotplug: `virtio-mem`](#alternative-memory-hotplug-virtio-mem)\n    - [`Seccomp` Sandboxing](#seccomp-sandboxing)\n    - [Updated Distribution Support](#updated-distribution-support)\n    - [Command Line and API Changes](#command-line-and-api-changes-1)\n    - [Contributors](#contributors-36)\n- [v0.6.0](#v060)\n    - [Directly Assigned Devices Hotplug](#directly-assigned-devices-hotplug)\n    - [Shared Filesystem Improvements](#shared-filesystem-improvements)\n    - [Block and Networking IO Self Offloading](#block-and-networking-io-self-offloading)\n    - [Command Line Interface](#command-line-interface)\n    - [PVH Boot](#pvh-boot)\n    - [Contributors](#contributors-37)\n- [v0.5.1](#v051)\n- [v0.5.0](#v050)\n    - [Virtual Machine Dynamic Resizing](#virtual-machine-dynamic-resizing)\n    - [Multi-Queue, Multi-Threaded Paravirtualization](#multi-queue-multi-threaded-paravirtualization)\n    - [New Interrupt Management Framework](#new-interrupt-management-framework)\n    - [Development Tools](#development-tools)\n    - [Kata Containers Integration](#kata-containers-integration)\n    - [Contributors](#contributors-38)\n- [v0.4.0](#v040)\n    - [Dynamic virtual CPUs addition](#dynamic-virtual-cpus-addition)\n    - [Programmatic firmware tables generation](#programmatic-firmware-tables-generation)\n    - [Filesystem and block devices vhost-user backends](#filesystem-and-block-devices-vhost-user-backends)\n    - [Guest pause and resume](#guest-pause-and-resume)\n    - [Userspace IOAPIC by default](#userspace-ioapic-by-default)\n    - [PCI BAR reprogramming](#pci-bar-reprogramming)\n    - [New `cloud-hypervisor` organization](#new-cloud-hypervisor-organization)\n    - [Contributors](#contributors-39)\n- [v0.3.0](#v030)\n    - [Block device offloading](#block-device-offloading)\n    - [Network device backend](#network-device-backend)\n    - [Virtual sockets](#virtual-sockets)\n    - [HTTP based API](#http-based-api)\n    - [Memory mapped virtio transport](#memory-mapped-virtio-transport)\n    - [Paravirtualized IOMMU](#paravirtualized-iommu)\n    - [Ubuntu 19.10](#ubuntu-1910)\n    - [Large memory guests](#large-memory-guests)\n- [v0.2.0](#v020)\n    - [Network device offloading](#network-device-offloading)\n    - [Minimal hardware-reduced ACPI](#minimal-hardware-reduced-acpi)\n    - [Debug I/O port](#debug-io-port)\n    - [Improved direct device assignment](#improved-direct-device-assignment)\n    - [Improved shared filesystem](#improved-shared-filesystem)\n    - [Ubuntu bionic based CI](#ubuntu-bionic-based-ci)\n- [v0.1.0](#v010)\n    - [Shared filesystem](#shared-filesystem)\n    - [Initial direct device assignment support](#initial-direct-device-assignment-support)\n    - [Userspace IOAPIC](#userspace-ioapic)\n    - [Virtual persistent memory](#virtual-persistent-memory)\n    - [Linux kernel bzImage](#linux-kernel-bzimage)\n    - [Console over virtio](#console-over-virtio)\n    - [Unit testing](#unit-testing)\n    - [Integration tests parallelization](#integration-tests-parallelization)\n\n# v43.0\n\nThis release has been tracked in our [roadmap\nproject](https://github.com/orgs/cloud-hypervisor/projects/6) as iteration\nv43.0. The following user visible changes have been made:\n\n### Live Migration over TCP Connections\n\nSupport has been added to enable direct live migration from two hosts via TCP\nconnections. This supplements the existing support for migrating over a UNIX\nsocket which can then be tunnelled as desired. The documentation has been\nupdated. (#6850)\n\n### Notable Performance Improvements\n\nThe `VIRTIO_RING_F_INDIRECT_DESC` feature has been enabled for `virtio-block`\ndevices. This significantly increases the throughput of the devices with a\nsmall negative impact on latency. (#6826)\n\n### Notable Bug Fixes\n\n* Cloud Hypervisor now accepts VFIO devices that use I/O PCI BARs on non x86-64\n  architectures. Whether they function depends on the host PCI host bridge\n  support - previously they would be rejected even if the driver did not use\n  these BARs. (#6871)\n* Command line groups were adjusted to ensure that at least one payload\n  parameter was provided if any other VM parameters provided. (#6832)\n\n### Contributors\n\nMany thanks to everyone who has contributed to our release:\n\n* Alyssa Ross <hi@alyssa.is>\n* Andrew Consroe <aconz2@gmail.com>\n* Bo Chen <bo.arvin.chen@gmail.com>\n* Jinrong Liang <cloudliang@tencent.com>\n* Julian Stecklina <julian.stecklina@cyberus-technology.de>\n* Muminul Islam <muislam@microsoft.com>\n* Rob Bradford <rbradford@rivosinc.com>\n* Ruoqing He <heruoqing@iscas.ac.cn>\n* Wojtek Czekalski <wczekalski@me.com>\n\n# v42.0\n\nThis release has been tracked in our [roadmap\nproject](https://github.com/orgs/cloud-hypervisor/projects/6) as iteration\nv42.0. The following user visible changes have been made:\n\n### SVE/SVE2 Support on AArch64\n\nThe SVE and SVE2 feature bits are now propagated through to the guest on\nAArch64. (#6678, #6691)\n\n### Notable Bug Fixes\n\n* Reduce latency notification when rate limited (#6672)\n* Fix `virtio-console` resizing (#6704)\n* Fix resizing when console uses TTY (#6754)\n* Avoid deadlock in PCI BAR reprogramming that can occur when adding a new\n  `virtio` device to a VM that has been restored (#6775)\n* Fix console resizing after VM restore (#6748)\n* Fix memory resize error due to incorrect bounds checks (#6736)\n\n### Sponsorships\n\nDuring this release cycle a new VFIO CI worker has been provided by Crusoe\nEnergy and a new ARM64 CI worker has been provided by Ubicloud.\n\n### Contributors\n\nMany thanks to everyone who has contributed to our release:\n\n* Alexandru Matei <alexandru.matei@uipath.com>\n* Alyssa Ross <hi@alyssa.is>\n* Anirudh Rayabharam <anrayabh@microsoft.com>\n* BharatNarasimman <bharatn@microsoft.com>\n* Bo Chen <chen.bo@intel.com>\n* Jinank Jain <jinankjain@microsoft.com>\n* Jonas Scholz <Jonas.Scholz@bbscholz.de>\n* Nuno Das Neves <nudasnev@microsoft.com>\n* Praveen K Paladugu <prapal@linux.microsoft.com>\n* Purna Pavan Chandra <paekkaladevi@microsoft.com>\n* Rob Bradford <rbradford@rivosinc.com>\n* Ruoqing He <heruoqing@iscas.ac.cn>\n* Songqian Li <sionli@tencent.com>\n* Tom Dohrmann <erbse.13@gmx.de>\n* Wei Liu <liuwe@microsoft.com>\n* Wenyu Huang <huangwenyuu@outlook.com>\n* Yuhong Zhong <yz@cs.columbia.edu>\n* wuxinyue <wuxinyue.wxy@antgroup.com>\n\n# v41.0\n\nThis release has been tracked in our [roadmap\nproject](https://github.com/orgs/cloud-hypervisor/projects/6) as iteration\nv41.0. The following user visible changes have been made:\n\n### Experimental \"Pvmemcontrol\" Support\n\nVMM support has been added for this experimental functionality (requires\ncurrently out of tree Linux kernel patches) to allow guests to control its\nphysical memory properties to allow optimisations and security features.\n(#6318, #6467)\n\n### Sandboxing With Landlock Support\n\nSupport for restricting the VMM process using the Linux kernel \"Landlock\" API\nhas been added  - this can be used to restrict the files (and the read/write\npermissions) that the VMM process can access. This adds another layer of\nsecurity alongside the existing sycall filters (`seccomp`) - this can be\nenabled with `--landlock` and [fully documentated](docs/landlock.md). (#5170)\n\n### Notable Performance Improvements\n\n* Reduced heap allocations in `virtio-net` via the use of a cache of `Iovec`\n  structures (#6636)\n* Notification suppression (\"`EVENT_IDX`\") support has been added to\n  `virtio-block` giving a 60% improvement in single queue block throughput and\n  IOPs performance (#6580)\n* Correct size used for `status` field in `virtio-block` state (#6586)\n\n### Notable Bug Fixes\n\n* Avoid panic on out-of-bounds PCI MSI-X access (#6657)\n* Fix undefined behaviour on AArch64 leading to wrong optimisation on KVM API\n  access (#6647)\n* Rust v1.80.0 added use of `fcntl` syscall on debug assertions so this is now\n  included in the virtio-device seccomp filters for tests that use this (#6648)\n* Short reads are now handled correctly in the `virtio-vsock` device (#6621)\n* Fix undefined behaviour on TTY ioctl leading to wrong optimisation (#6568)\n\n### Contributors\n\nMany thanks to everyone who has contributed to our release:  \n\n* Alyssa Ross <hi@alyssa.is>\n* Bo Chen <chen.bo@intel.com>\n* Changyuan Lyu <changyuanl@google.com>\n* Jinank Jain <jinankjain@microsoft.com>\n* Julian Stecklina <julian.stecklina@cyberus-technology.de>\n* Muminul Islam <muislam@microsoft.com>\n* Nuno Das Neves <nudasnev@microsoft.com>\n* Praveen K Paladugu <prapal@linux.microsoft.com>\n* Rob Bradford <rbradford@rivosinc.com>\n* Songqian Li <sionli@tencent.com>\n* Wei Liu <liuwe@microsoft.com>\n* Yuanchu Xie <yuanchu@google.com>\n* ihciah <ihciah@gmail.com>\n* wuxinyue <wuxinyue.wxy@antgroup.com>\n\n# v40.0\n\nThis release has been tracked in our [roadmap\nproject](https://github.com/orgs/cloud-hypervisor/projects/6) as iteration\nv40.0. The following user visible changes have been made:\n\n### Support for Restoring File Descriptor Backed Network Devices\n\nIt is now possible to pass file descriptors over the HTTP API (and using\n`ch-remote`) when restoring to update the file descriptors for network devices.\nThis enables snapshot & restore functionality for guests using `macvtap` or\nother file descriptor backed network devices. (#6286)\n\n### Notable Bug Fixes\n\n* Default values have been removed from required fields in the OpenAPI metadata\n  (#6495)\n* The help syntax of `ch-remote remove-device` has been improved (#6456)\n* A double close of file descriptors has been fixed when using `--serial`\n  (#6486)\n* To prevent loops a limit on the nesting level for QCOW2 backing files has\n  been introduced (#6482)\n* Boot time performance has been improved with multiple cores by avoiding\n  `cpuid` instructions and by seeding the in kernel file descriptor table\n  (#6498, #6478)\n* L1 cache details are more likely to be propagated into the guest (#6523)\n* The default topology for guests now uses multiple cores rather than sockets\n  (#6504)\n\n### Contributors\n\nMany thanks to everyone who has contributed to our release:  \n\n* Alexandru Matei <alexandru.matei@uipath.com>\n* Bo Chen <chen.bo@intel.com>\n* Jinank Jain <jinankjain@microsoft.com>\n* Josh Soref <2119212+jsoref@users.noreply.github.com>\n* Muminul Islam <muislam@microsoft.com>\n* Nuno Das Neves <nudasnev@microsoft.com>\n* Omer Faruk Bayram <omer.faruk@sartura.hr>\n* Praveen K Paladugu <prapal@linux.microsoft.com>\n* Purna Pavan Chandra <paekkaladevi@linux.microsoft.com>\n* Rob Bradford <rbradford@rivosinc.com>\n* SamrutGadde <samrut.gadde@gmail.com>\n* Sean Banko <sbanko@crusoe.ai>\n* Songqian Li <sionli@tencent.com>\n* Wei Liu <liuwe@microsoft.com>\n* Yi Wang <foxywang@tencent.com>\n* Yu Li <liyu.yukiteru@bytedance.com>\n* \n\n# v39.0\n\nThis release has been tracked in our [roadmap\nproject](https://github.com/orgs/cloud-hypervisor/projects/6) as iteration\nv39.0. The following user visible changes have been made:\n\n### Variable Sizing of PCI Apertures for Segments\n\nIt is now possible to use `--pci-segment` to adjust the aperture size that\ndevices 32-bit and 64-bit PCI device BARs will be allocated from. Previously\nthe address space was equally distributed across all the segments which may\nleave insufficient space for devices that require a large 32-bit space. With\nthis change the weighting per segment can be adjusted. (#6387)\n\n### Direct Booting with bzImages\n\nSupport for directly booting Linux from bzImages has been added.(#6200)\n\n### Support for NVIDIA GPUDirect P2P Support\n\nThe `x_nv_gpudirect_clique` option was added to `--device` to allow the\nconfiguration of device P2P support with NVIDIA GPUs. (#6235)\n\n### Guest NMI Injection Support\n\nA new API endpoint and `ch-remote` option added for injecting an NMI into the\nguest. (#6047)\n\n### Notable Bug Fixes\n\n* Workaround for kernel bug affecting guest IRQ masking on AMD (#6353)\n* Correctly cleanup `sigwinch_listener` process (#6208)\n* Graceful shutdown of HTTP API thread (#6248, #6247)\n* Fix `queue_affinity` option in OpenAPI metadata (#6268)\n* Fix documentation to indicate only stream mode is supported by `virtio-vsock`\n  (#6306)\n* Fix `virtio-fs` tag validation (#6358, #6359)\n* Add missing `pvpanic` device to OpenAPI metadata (#6372)\n* Fixes for nested virtualization with VFIO devices (#6110, #6298, #6297,\n  #6319)\n* Fix for backing file for `virtio-mem` regions with snapshot/restore (#6337,\n  #6338)\n* Explicitly mark FDs used for network devices as invalid across\n  snapshot/restore (#6332, #6286)\n* Improve `event-monitor` events around reboot (#6277, #6274)\n* Fix potential deadlock around paused devices during live migration (#6293)\n* Fix panic when running `ch-remote` with no subcommand (#6230)\n* Fix hotplug of `virtio` devices after snapshot/restore and live migration\n  (#6326, #6265)\n  \n### Contributors\n\nMany thanks to everyone who has contributed to our release:  \n\n* Alexandru Matei <alexandru.matei@uipath.com>\n* Andrew Carp <acarp@crusoeenergy.com>\n* Bo Chen <chen.bo@intel.com>\n* Bouke van der Bijl <i@bou.ke>\n* Chris Webb <chris@arachsys.com>\n* Jinank Jain <jinankjain@microsoft.com>\n* Lucas Jacques <contact@lucasjacques.com>\n* Muminul Islam <muislam@microsoft.com>\n* Nuno Das Neves <nudasnev@microsoft.com>\n* Ravi kumar Veeramally <ravikumar.veeramally@intel.com>\n* Rob Bradford <rbradford@rivosinc.com>\n* Ruslan Mstoi <ruslan.mstoi@intel.com>\n* Stefan Nuernberger <stefan.nuernberger@cyberus-technology.de>\n* Thomas Barrett <tbarrett@crusoeenergy.com>\n* Wei Liu <liuwe@microsoft.com>\n* Yi Wang <foxywang@tencent.com>\n\n# v38.0\n\nThis release has been tracked in our [roadmap\nproject](https://github.com/orgs/cloud-hypervisor/projects/6) as iteration\nv38.0. The following user visible changes have been made:\n\n### Group Rate Limiter on Block Devices\n\nUsers now can throttle a group of block devices with the new\n`--rate-limiter-group` option. Details can be found from the [I/O\nThrottling documentation](docs/io_throttling.md)\n\n### CPU Pinning Support for Block Device Worker Thread\n\nUsers now have the option to pin virt-queue threads for block devices\nto specific host cpus.\n\n### Optimized Boot Time with Parallel Memory Prefault\n\nThe boot time with `prefault` option enabled is optimized via parallel\nmemory prefault.\n\n### New 'debug-console' Device\n\nA 'debug-console' device is added to provide a user-configurable debug\nport for logging guest information. Details can be found from the [Debug\nIO Ports documentation](docs/debug-port.md).\n\n### Improved VFIO Device Support\n\nAll non-emulated MMIO regions of VFIO devices are now mapped to the VFIO\ncontainer, allowing PCIe P2P between all VFIO devices on the same\nVM. This is required for a wide variety of multi-GPU workloads involving\nGPUDirect P2P (DMA between two GPUs), GPUDirect RDMA (DMA between a GPU\nand an IB device).\n\n### Extended CPU Affinity Support\n\nUsers now can set the vcpu affinity to a host CPU with index larger\nthan 255.\n\n### Notable Bug Fixes\n\n* Enable HTT flag to avoid crashing cpu topology enumeration software\nsuch as hwloc in the guest (#6146)\n* Fix several security advisories from dependencies (#6134, #6141)\n* Handle non-power-of-two CPU topology properly (#6062)\n* Various bug fixes around `virtio-vsock`(#6080, #6091, #6095)\n* Enable nested virtualization on AMD if supported (#6106)\n* Align VFIO devices PCI BARs naturally (#6196)\n\n### Contributors\n\nMany thanks to everyone who has contributed to our release:\n* Alyssa Ross <hi@alyssa.is>\n* Bo Chen <chen.bo@intel.com>\n* Daniel Farina <daniel@ubicloud.com>\n* Jinank Jain <jinankjain@microsoft.com>\n* Muminul Islam <muislam@microsoft.com>\n* Peteris Rudzusiks <rye@stripe.com>\n* Philipp Schuster <philipp.schuster@cyberus-technology.de>\n* Ravi kumar Veeramally <ravikumar.veeramally@intel.com>\n* Rob Bradford <rbradford@rivosinc.com>\n* Ruslan Mstoi <ruslan.mstoi@intel.com>\n* Sean Banko <sbanko@crusoeenergy.com>\n* Thomas Barrett <tbarrett@crusoeenergy.com>\n* Wei Liu <liuwe@microsoft.com>\n* Yi Wang <foxywang@tencent.com>\n* acarp <acarp@crusoeenergy.com>\n\n# v37.0\n\nThis release has been tracked in our [roadmap\nproject](https://github.com/orgs/cloud-hypervisor/projects/6) as iteration\nv37.0. The following user visible changes have been made:\n\n### Long Term Support (LTS) Release\n\nThis release is a LTS release. Point releases for bug fixes will be made\nfor the next 18 months; live migration and live upgrade will be\nsupported between the point releases of the LTS.\n\n### Multiple PCI segments Support for 32-bit VFIO devices\n\nNow VFIO devices with 32-bit memory BARs can be attached to non-zero PCI\nsegments on the guest, allowing users to have more 32-bit devices and\nassign such devices to appropriate NUMA nodes for better performance.\n\n### Configurable Named TAP Devices\n\nNamed TAP devices now accepts IP configuration from users, such as IP\nand MAC address, as long as the named TAP device is created by Cloud\nHypervisor (e.g. not existing TAP devices).\n\n### TTY Output from Both Serial Device and Virtio Console\n\nNow legacy serial device and virtio console can be set as TTY mode as\nthe same time. This allows users to capture early boot logs with the\nlegacy serial device without losing performance benefits of using\nvirtio-console, when appropriate kernel configuration is used (such as\nusing kernel command-line `console=hvc0 earlyprintk=ttyS0` on x86).\n\n### Faster VM Restoration from Snapshots\n\nThe speed of VM restoration from snapshots is improved with a better\nimplementation of deserializing JSON files.\n\n### Notable Bug Fixes\n\n* Fix aio backend behavior for block devices when writeback cache\n  disabled (#5930)\n* Fix PvPanic device PCI BAR alignment (#5956)\n* Bug fix to OpenAPI specification file (#5967)\n* Error out early for live migration when TDX is enabled (#6025)\n\n### Contributors\n\nMany thanks to everyone who has contributed to our release:\n\n* Bo Chen <chen.bo@intel.com>\n* Jinank Jain <jinankjain@microsoft.com>\n* Markus Sütter <markus.suetter@secunet.com>\n* Michael Zhao <michael.zhao@arm.com>\n* Muminul Islam <muislam@microsoft.com>\n* Rob Bradford <rbradford@rivosinc.com>\n* Rui Chang <rui.chang@arm.com>\n* Ruslan Mstoi <ruslan.mstoi@intel.com>\n* Thomas Barrett <tbarrett@crusoeenergy.com>\n* Wei Liu <liuwe@microsoft.com>\n* Yi Wang <foxywang@tencent.com>\n* Yong He <alexyonghe@tencent.com>\n\n# v36.0\n\nThis release has been tracked in our [roadmap\nproject](https://github.com/orgs/cloud-hypervisor/projects/6) as iteration\nv36.0. The following user visible changes have been made:\n\n### Command Line Changes\n\nWe switched back to use the `clap` crate to create our command line,\nsince the `argh` crate is barely maintained. There were several syntax\nchanges:\n\n* All `--option value` commands now are `--option=value`.\n* The `--disk DISK1 --disk DISK2` command now is `--disk DISK1 DISK2`.\n* The `-v -v -v`command now is `-vvv`.\n\nNote: the released binary size increased around 0.3M due to this change.\n\n### Enabled Features Reported via API Endpoint and CLI\n\nNow the enabled (Cargo) features of the running Cloud Hypervisor\ninstance can be queried via API endpoint (`/vmm.ping`) and CLI\n(`--version -v`).\n\n### NUMA Support for PCI segments\n\nThe `--numa` command is augmented with a new option `pci_segment=`, so\nthat users can define the relationship between PCI segments and NUMA\nnodes. Examples can be found from the [memory documentation](docs/memory.md)\n\n### CPU Topology Support on AMD Platforms\n\nNow the CPU topology on x86_64 platforms supports multiple vendors.\n\n### Unix Socket Backend for Serial Port\n\nThe `--serial` command is augmented with a new option `socket=`, allowing\nusers to access the serial port using a Unix socket.\n\n### AIO Backend for Block Devices\n\nAn AIO backend is added for `virtio-block` devices to improve block\ndevice performance when the `io_uring` feature is not supported by the\nhost Operating System.\n\n### Documentation Improvements\n\n* New [documentation](docs/coverage.md) for collecting coverage data\n* Various typo fixes\n\n### Notable Bug Fixes\n\n* Fix a deadlock when TDX is enabled (#5845)\n* Only advertise AMX feature bits to guest when the AMX cpu feature is\n  enabled (#5834)\n* Correct default value for vCPU topology on AArch64 (#5893)\n\n### Contributors\n\nMany thanks to everyone who has contributed to our release:\n\n*  Anatol Belski <anbelski@linux.microsoft.com>\n*  Bo Chen <chen.bo@intel.com>\n*  Dario Nieuwenhuis <dirbaio@dirbaio.net>\n*  Jianyong Wu <jianyong.wu@arm.com>\n*  Jinank Jain <jinankjain@microsoft.com>\n*  Muminul Islam <muislam@microsoft.com>\n*  Praveen K Paladugu <prapal@linux.microsoft.com>\n*  Ravi kumar Veeramally <ravikumar.veeramally@intel.com>\n*  Rob Bradford <rbradford@rivosinc.com>\n*  Thomas Barrett <tbarrett@crusoeenergy.com>\n*  Wei Liu <liuwe@microsoft.com>\n*  Yi Wang <foxywang@tencent.com>\n*  dom.song <dom.song@amperecomputing.com>\n\n# v35.0\n\nThis release has been tracked in our [roadmap\nproject](https://github.com/orgs/cloud-hypervisor/projects/6) as iteration\nv35.0. The following user visible changes have been made:\n\n### `virtio-vsock` Support for Linux Guest Kernel v6.3+\n\nSince kernel v6.3, a vsock packet can be included in a single descriptor,\ninstead of being split over two descriptors. Our `virtio-vsock` implementation\nnow support both situations.\n\n### User Specified Serial Number for `virtio-block`\n\nA new option `serial` is added to the `--block` command that allows users to\nspecify a serial number for block devices which will be guest visible.\n\n### vCPU TSC Frequency Included in Migration State\n\nThis ensures migration works correctly between hosts that have different TSC\nfrequencies if the guest is running with TSC as the source of timekeeping.\n\n### Notable Bug Fixes\n\n* Disallow concurrent CPU resizing (#5668)\n* Handle APIC EOI message for MSHV (#5681)\n* Use wrapping add for memory offset from instruction emulator (#5719)\n* Add global spell check via the 'typos' GitHub action (#5720)\n* Ensure probing reads are block size aligned (#5727)\n* Multiple bug fixes around the latency counter for block devices\n  (#5712, #5750, #5762, #5763)\n* Replace unsound `static mut` with `once_cell` (#5772)\n\n### Contributors\n\nMany thanks to everyone who has contributed to our release:\n\n*  Alyssa Ross <hi@alyssa.is>\n*  Anatol Belski <anbelski@linux.microsoft.com>\n*  Bo Chen <chen.bo@intel.com>\n*  Christian Blichmann <cblichmann@google.com>\n*  Jianyong Wu <jianyong.wu@arm.com>\n*  Jinank Jain <jinankjain@microsoft.com>\n*  Julian Stecklina <julian.stecklina@cyberus-technology.de>\n*  Omer Faruk Bayram <omer.faruk@sartura.hr>\n*  Philipp Schuster <philipp.schuster@cyberus-technology.de>\n*  Rob Bradford <rbradford@rivosinc.com>\n*  Ruslan Mstoi <ruslan.mstoi@intel.com>\n*  Thomas Barrett <tbarrett@crusoeenergy.com>\n*  Wei Liu <liuwe@microsoft.com>\n*  Yi Wang <foxywang@tencent.com>\n*  zhongbingnan <zhongbingnan@bytedance.com>\n\n# v34.0\n\nThis release has been tracked in our [roadmap\nproject](https://github.com/orgs/cloud-hypervisor/projects/6) as iteration\nv34.0. The following user visible changes have been made:\n\n### Paravirtualised Panic Device Support\n\nA new device has been added that can communicate when the guest kernel has\npanicked and share those details with the VMM. This is controlled with a new\n`--pvpanic` command line option and JSON API change equivalent. (#5526)\n\n### Improvements to VM Core Dump\n\nRequesting to dump the guest memory as core dump will now transparently pause\nthe VM if required; returning to the original state after. (#5604)\n\n### QCOW2 Support for Backing Files\n\nThe support for QCOW2 files has been enhanced to include support for using\nbacking files. (#5573)\n\n### Minimum Host Kernel Bump\n\nThe minimum supported host kernel is now 5.13 in order to incorporate a bug fix\nfor `KVM_FEATURE_ASYNC_PF_INT` functionality. (#5626)\n\n### Notable Bug Fixes\n\n* The x86 emulator is only compiled in if MSHV is compiled in (the kernel\n  carries out this job with KVM) (#5561).\n* A regression has been fixed in VFIO support for devices that use MSI rather\n  than MSI-X (#5658).\n* When triggering a VM shutdown or reset via I/O the vCPU thread will be\n  blocked until that asynchronous event has been received (#5645).\n* Pausing a VM is now a synchronous action with the request only completing\n  when all vCPUs are paused (#5611).\n* Event monitor support now correctly supports concurrent access (#5633).\n* Bug fixes for the QCOW2 file support (#5573).\n\n### Contributors\n\nMany thanks to everyone who has contributed to our release:\n\n* Alyssa Ross <hi@alyssa.is>\n* Anatol Belski <anbelski@linux.microsoft.com>\n* Bo Chen <chen.bo@intel.com>\n* Changyuan Lyu <changyuanl@google.com>\n* Christian Blichmann <cblichmann@google.com>\n* Manish Goregaokar <manishsmail@gmail.com>\n* Omer Faruk Bayram <omer.faruk@sartura.hr>\n* Philipp Schuster <philipp.schuster@cyberus-technology.de>\n* Praveen K Paladugu <prapal@linux.microsoft.com>\n* Rob Bradford <rbradford@rivosinc.com>\n* Ruslan Mstoi <ruslan.mstoi@intel.com>\n* Yi Wang <foxywang@tencent.com>\n* Yong He <alexyonghe@tencent.com>\n* Yu Li <liyu.yukiteru@bytedance.com>\n* dom.song <dom.song@amperecomputing.com>\n\n# v33.0\n\nThis release has been tracked in our [roadmap\nproject](https://github.com/orgs/cloud-hypervisor/projects/6) as iteration\nv33.0. The following user visible changes have been made:\n\n### D-Bus based API\n\nA D-Bus based API has been added as an alternative to the existing REST\nAPI. This feature is gated by the `dbus_api` feature. Details can be\nfound in the [API documentation](docs/api.md).\n\n### Expose Host CPU Cache Details for AArch64\n\nNow the CPU cache information on the host is properly exposed to the\nguest on AArch64.\n\n### Notable Bug Fixes\n\n* Report errors explicitly to users when VM failed to boot (#5453)\n* Fix VFIO on platforms with non-4k page size (#5450, #5469)\n* Fix TDX initialization (#5454)\n* Ensure all guest memory regions are page-size aligned (#5496)\n* Fix seccomp filter lists related to virtio-console, serial and pty\n  (#5506, #5524)\n* Populate APIC ID properly (#5512)\n* Ignore and warn TAP FDs in more situations (#5522)\n\n### Contributors\n\nMany thanks to everyone who has contributed to our release:\n\n* Alyssa Ross <hi@alyssa.is>\n* Anatol Belski <anbelski@linux.microsoft.com>\n* Bo Chen <chen.bo@intel.com>\n* Jianyong Wu <jianyong.wu@arm.com>\n* Omer Faruk Bayram <omer.faruk@sartura.hr>\n* Rafael Mendonca <rafaelmendsr@gmail.com>\n* Ravi kumar Veeramally <ravikumar.veeramally@intel.com>\n* Rob Bradford <rbradford@rivosinc.com>\n* Ruslan Mstoi <ruslan.mstoi@intel.com>\n* Yu Li <liyu.yukiteru@bytedance.com>\n* zhongbingnan <zhongbingnan@bytedance.com>\n\n# v32.0\n\nThis release has been tracked in our [roadmap\nproject](https://github.com/orgs/cloud-hypervisor/projects/6) as iteration\nv32.0. The following user visible changes have been made:\n\n### Increased PCI Segment Limit\n\nThe maximum number of PCI segments that can be used is now 96 (up from 16).\n\n### API Changes\n\n* The VmmPingResponse now includes the PID as well as the build details.\n  (#5348)\n\n### Notable Bug Fixes\n\n* Ignore and warn TAP FDs sent via the HTTP request body (#5350)\n* Properly preserve and close valid FDs for TAP devices (#5373)\n* Only use `KVM_ARM_VCPU_PMU_V3` if available (#5360)\n* Only touch the tty flags if it's being used (#5343)\n* Fix seccomp filter lists for vhost-user devices (#5361)\n* The number of vCPUs is capped at the hypervisor maximum (#5357)\n* Fixes for TTY reset (#5414)\n* CPU topology fixes on MSHV (#5325)\n* Seccomp fixes for older distributions (#5397)\n\n### Contributors\n\nMany thanks to everyone who has contributed to our release:\n\n* Alyssa Ross <hi@alyssa.is>\n* Anatol Belski <anbelski@linux.microsoft.com>\n* Bo Chen <chen.bo@intel.com>\n* Hao Xu <howeyxu@tencent.com>\n* Muminul Islam <muislam@microsoft.com>\n* Omer Faruk Bayram <omer.faruk@sartura.hr>\n* Rafael Mendonca <rafaelmendsr@gmail.com>\n* Rob Bradford <rbradford@rivosinc.com>\n* Ruslan Mstoi <ruslan.mstoi@intel.com>\n* Smit Gardhariya <gardhariya.smit@gmail.com>\n* Wei Liu <liuwe@microsoft.com>\n\n# v31.1\n\nThis is a bug fix release. The following issues have been addressed:\n\n* Ignore and warn TAP FDs sent via the HTTP request body (#5350)\n* Properly preserve and close valid FDs for TAP devices (#5373)\n* Only use `KVM_ARM_VCPU_PMU_V3` if available (#5360)\n* Only touch the tty flags if it's being used (#5343)\n* Fix seccomp filter lists for vhost-user devices (#5361)\n\n# v31.0\n\nThis release has been tracked in our [roadmap\nproject](https://github.com/orgs/cloud-hypervisor/projects/6) as iteration\nv31.0. The following user visible changes have been made:\n\n### Update to Latest `acpi_tables`\n\nAdapted to the latest [acpi_tables](https://github.com/rust-vmm/acpi_tables).\nThere has been significant API changes in the crate.\n\n### Update Reference Kernel to 6.2\n\nUpdated the recommended guest kernel version from 6.1.6 to 6.2.\n\n### Improvements on Console `SIGWINCH` Handler\n\nA separate thread had been created to capture the `SIGWINCH` signal and resize\nthe guest console. Now the thread is skipped if the console is not resizable.\n\nTwo completely different code paths existed for handling console resizing, one\nfor `tty` and the other for `pty`. That makes the understanding of the console\nhandling code unnecessarily complicated. Now the code paths are unified. Both\n`tty` and `pty` are supported in single `SIGWINCH` handler. And the new handler\ncan works with kernel versions earlier than v5.5.\n\n### Remove Directory Support from `MemoryZoneConfig::file`\n\nSetting a directory to `MemoryZoneConfig::file` is no longer supported.\n\nBefore this change, user can set a directory to `file` of the `--memory-zone`\noption. In that case, a temporary file will be created as the backing file for\nthe `mmap(2)` operation. This functionality has been unnecessary since we had\nthe native support for hugepages and allocating anonymous shared memory.\n\n### Documentation Improvements\n\n* Various improvements in API document\n* Improvements in Doc comments\n* Updated Slack channel information in README\n\n### Notable Bug Fixes\n\n* Fixed the offset setting while removing the entire mapping of `vhost-user` FS\n  client.\n* Fixed the `ShutdownVmm` and `Shutdown` commands to call the correct API\n  endpoint.\n\n### Contributors\n\nMany thanks to everyone who has contributed to our release:\n\n* Alyssa Ross <hi@alyssa.is>\n* Bo Chen <chen.bo@intel.com>\n* Daniel Farina <daniel@fdr.io>\n* Dom <peng6662001@163.com>\n* Hao Xu <howeyxu@tencent.com>\n* Muminul Islam <muislam@microsoft.com>\n* Omer Faruk Bayram <omer.faruk@sartura.hr>\n* Ravi kumar Veeramally <ravikumar.veeramally@intel.com>\n* Rob Bradford <rbradford@rivosinc.com>\n* Ruslan Mstoi <ruslan.mstoi@intel.com>\n* Smit Gardhariya <gardhariya.smit@gmail.com>\n* Yang <ailin.yang@intel.com>\n* Yong He <alexyonghe@tencent.com>\n\n# v30.0\n\nThis release has been tracked in our [roadmap\nproject](https://github.com/orgs/cloud-hypervisor/projects/6) as iteration\nv30.0. The following user visible changes have been made:\n\n### Command Line Changes for Reduced Binary Size\n\nThe `clap` crate was replaced by the `argh` crate to create our command\nline, which reduced our release binary size from 3.6MB to 3.3MB. There\nwere several syntax changes:\n\n* All `--option=value` commands now are `--option value`.\n* The `--disk DISK1 DISK2` command now is `--disk DISK1 --disk DISK2`.\n* The  `-vvv` command now is `-v -v -v`\n\n### Basic vfio-user Server Support\n\nOur `vfio-user` crate is extended to provide basic server side support\nwith an example of gpio vfio-user device. This crate now is moved to [its\nown repository](https://github.com/rust-vmm/vfio-user) under the\n`rust-vmm` organization.\n\n### Heap Profiling Support\n\nA new building target is added for profiling purposes with examples of\nheap profiling using `dhat` gated by the `dhat-heap` feature.\n\n### Documentation Improvements\n\nThe documentation on Intel TDX is expanded with details of the building\nand using [TD-Shim](https://github.com/confidential-containers/td-shim),\nreferences to [TDX Tools](https://github.com/intel/tdx-tools), and\nversion information of guest/host kernel/TDVF/TDShim being tested. Also,\na new 'heap profiling' documentation is added with improvements on the\nexisting 'profiling' documentation.\n\n### Notable Bug Fixes\n\n* Close FDs for TAP devices that are provided to VM (#5199, #5206)\n* Set vcpu thread status properly and signal `exit_evt` upon thread exit (#5211)\n* Populate CPUID leaf 0x4000_0010 (TSC frequency) (#5178, #5179)\n* Inform the TPM guest driver upon failed TPM requests on the host (#5151)\n* Bug fix to OpenAPI specification file (#5186)\n\n### Contributors\n\nMany thanks to everyone who has contributed to our release:\n\n* Anatol Belski <anbelski@linux.microsoft.com>\n* Anirudh Rayabharam <anrayabh@linux.microsoft.com>\n* Bo Chen <chen.bo@intel.com>\n* Jinank Jain <jinankjain@microsoft.com>\n* Kaihang Zhang <kaihang.zhang@smartx.com>\n* Michael Zhao <michael.zhao@arm.com>\n* Muminul Islam <muislam@microsoft.com>\n* Philipp Schuster <philipp.schuster@cyberus-technology.de>\n* Praveen K Paladugu <prapal@linux.microsoft.com>\n* Ravi kumar Veeramally <ravikumar.veeramally@intel.com>\n* Rob Bradford <robert.bradford@intel.com>\n* Ruslan Mstoi <ruslan.mstoi@intel.com>\n* Sebastien Boeuf <sebastien.boeuf@intel.com>\n* Wei Liu <liuwe@microsoft.com>\n* Yong He <alexyonghe@tencent.com>\n* Yu Li <liyu.yukiteru@bytedance.com>\n\n# v28.2\nThis is a bug fix release. The following issues have been addressed:\n\n* Fix QCOW2 refcount table size (#5034)\n* Fix unpause support on MSHV in dual binary (#5037)\n* Threads inside `virtio` devices are now shutdown on reboot (#5095)\n\n# v29.0\n\nThis release has been tracked in our [roadmap\nproject](https://github.com/orgs/cloud-hypervisor/projects/6) as iteration\nv29.0. The following user visible changes have been made:\n\n### Release Binary Supports Both MSHV and KVM\n\nOn `x86-64` the binary included in releases supports both the KVM and MSHV\nhypervisor with runtime detection to identify the correct hypervisor to use.\n\n### Snapshot/Restore and Live Migration Improvements\n\nImprovements have been made to the data structures used for both live migration\nand snapshot/restore. Unfortunately this has broken compatibility with older\nversions (support for migrating between major versions is not yet officially\nsupported but has worked for some versions.)\n\n### Heap Allocation Improvements\n\nImprovements have been made to the volume of heap allocations when running with\n`virtio-block` devices along with a reduction in the peak heap size.\n\n### `ch-remote` Improvements\n\nSupport for \"pinging\" the VMM and shutting the VMM down have been added to\n`ch-remote`.\n\n### `AArch64` Documentation Integration\n\nThe documentation for `AArch64` support has been integrated into the main\nREADME.\n\n### `virtio-block` Counters Enhancement\n\nThe counters for the `virtio-block` device has extended to include min/mean/max\nlatency counters.\n\n### TCP Offload Control\n\nThe `virtio-net` device has gained support for controlling the enabling of\nchecksum and offloading. This allows the device to be used in environments\nwhere the hardware lacks support for the offloading.\n\n### Notable Bug Fixes\n\n* Update dependencies including a version of `linux-loader` that addresses an\n  infinite loop issue ([details](https://github.com/rust-vmm/linux-loader/security/advisories/GHSA-52h2-m2cf-9jh6))\n* Fix bugs related to `virtio-net` including an integer overflow issue\n  (#4924, #4949)\n* Use host `cpuid` information for L2 cache for older KVM on x86 (#4920)\n* Memory mapped into the guest is now marked as non-dumpable which prevents large core files (#5016)\n* Fix QCOW2 refcount table size (#5034)\n* Fix unpause support on MSHV in dual binary (#5037)\n* Threads inside `virtio` devices are now shutdown on reboot (#5095)\n\n### Removals\n\nNo functionality has been removed in this release.\n\n### Deprecations\n\n* Support for specifying a directory with `MemoryZoneConfig::file` or\n  `MemoryConfig::file` has been deprecated. This was originally used for\n  supporting huge pages or shared memory backing which is now natively supported\n  (#5085)\n\n### Contributors\n\nMany thanks to everyone who has contributed to our release:\n\n* Bo Chen <chen.bo@intel.com>\n* Claudio Fontana <claudio.fontana@gmail.com>\n* Hao Xu <howeyxu@tencent.com>\n* Henry Wang <Henry.Wang@arm.com>\n* Jinank Jain <jinankjain@microsoft.com>\n* Michael Zhao <michael.zhao@arm.com>\n* Muminul Islam <muislam@microsoft.com>\n* Philipp Schuster <philipp.schuster@cyberus-technology.de>\n* Rob Bradford <robert.bradford@intel.com>\n* Sebastien Boeuf <sebastien.boeuf@intel.com>\n* Shuaiyi Zhang <zhangsy28@lenovo.com>\n* Wei Liu <liuwe@microsoft.com>\n* Yong He <alexyonghe@tencent.com>\n* Yuji Hagiwara <yuuzi41@gmail.com>\n\n\n# v28.1\nThis is a bug fix release. The following issues have been addressed:\n\n* Update dependencies including a version of `linux-loader` that\naddresses an infinite loop issue ([details](https://github.com/rust-vmm/linux-loader/security/advisories/GHSA-52h2-m2cf-9jh6))\n* Fix bugs related to `virtio-net` including an integer overflow issue\n  (#4924, #4949)\n* Use host `cpuid` information for L2 cache for older KVM on x86 (#4920)\n* Improve README and documentation\n\n# v28.0\n\nThis release has been tracked in our new [roadmap\nproject](https://github.com/orgs/cloud-hypervisor/projects/6) as iteration\nv28.0.\n\n### Community Engagement (Reminder)\n\nJust a reminder that we have a new mailing list to support broader community\ndiscussions.  Please consider\n[subscribing](https://lists.cloudhypervisor.org/g/dev/). We plan to use\nthis to announce a regular meeting for those interested in talking about Cloud\nHypervisor development.\n\n### Long Term Support (LTS) Release\n\nThis is the first version of Cloud Hypervisor to be released under the LTS\nrelease process. Point releases for bug fixes will be made for the next 18\nmonths; live migration and live upgrade will be supported between the point\nreleases of the LTS.\n\n### Virtualised TPM Support\n\nSupport for adding an emulated CRB TPM has been added. This has its own [TPM\ndocumentation](docs/tpm.md).\n\n### Transparent Huge Page Support\n\nBy default, but controllable through `--memory thp=off` if it possible to back\nthe guest memory with Transparent Huge Pages (no file backing/`shared=off`)\nthen this will be used resulting in improved boot performance.\n\n### README Quick Start Improved\n\nThe README has been refreshed with the quick start guide updated to reflect the\ndifferent firmware options and to recommend the use of pre-built binaries.\n\n### Notable Bug Fixes\n\n* Inappropriate Copy-on-Write of pinned pages (e.g. VFIO) leading to higher\n  memory consumption (#4835)\n* Multiple `virtio` device bug fixes found through fuzzing (#4859, #4799)\n* Large QCOW files (> 4TiB) are now supported (#4767)\n* Support for > 31 vCPUS on aarch64 (#4863)\n* Multiple fixes to OpenAPI specification file (#4720, #4811)\n* Programming of the MSI-X table has been optimised leading to faster boot on\n  newer Linux kernels (#4744)\n* Error on reboot from race to close TAP devices (#4871)\n* Non-spec compliant virtio-block read-only support (#4888)\n\n### Removals\n\nThe following functionality has been removed:\n\n* Support for non-PVH firmware booting has been removed (#4511)\n* I/O ports used for older versions of firmware have been removed (#3926)\n* Deprecated API options for kernel/cmdline/initramfs have been removed (#4737)\n\n### Contributors\n\nMany thanks to everyone who has contributed to our release:\n\n* Anatol Belski <anbelski@linux.microsoft.com>\n* Bo Chen <chen.bo@intel.com>\n* Fabiano Fidêncio <fabiano.fidencio@intel.com>\n* Jianyong Wu <jianyong.wu@arm.com>\n* Jinank Jain <jinankjain@microsoft.com>\n* Jinrong Liang <cloudliang@tencent.com>\n* lv.mengzhao <lv.mengzhao@zte.com.cn>\n* Michael Zhao <michael.zhao@arm.com>\n* Muminul Islam <muislam@microsoft.com>\n* Praveen K Paladugu <prapal@linux.microsoft.com>\n* Rob Bradford <robert.bradford@intel.com>\n* Sebastien Boeuf <sebastien.boeuf@intel.com>\n* Wei Liu <liuwe@microsoft.com>\n\n# v27.0\n\nThis release has been tracked in our new [roadmap\nproject](https://github.com/orgs/cloud-hypervisor/projects/6) as iteration\nv27.0.\n\n### Community Engagement\n\nA new mailing list has been created to support broader community discussions.\nPlease consider [subscribing](https://lists.cloudhypervisor.org/g/dev/); an\nannouncement of a regular meeting will be announced via this list shortly.\n\n### Prebuilt Packages\n\nPrebuilt packages are now available. Please see [this\ndocument](https://github.com/cloud-hypervisor/obs-packaging/blob/main/README.md)\non how to install. These packages also include packages for the different\nfirmware options available.\n\n### Network Device MTU Exposed to Guest\n\nThe MTU for the TAP device associated with a `virtio-net` device is now exposed\nto the guest. If the user provides a MTU with `--net mtu=..` then that MTU is\napplied to created TAP interfaces. This functionality is also exposed for\n`vhost-user-net` devices including those created with the reference backend\n(#4658, #4676.)\n\n### Boot Tracing\n\nSupport for generating a trace report for the boot time has been added\nincluding a script for generating an SVG from that trace (#4659.)\n\n### Simplified Build Feature Flags\n\nThe set of feature flags, for e.g. experimental features, have been simplified:\n\n* `msvh` and `kvm` features provide support for those specific hypervisors\n  (with `kvm` enabled by default),\n* `tdx` provides support for Intel TDX; and although there is no MSHV support\n  now it is now possible to compile with the `mshv` feature (#4696,)\n* `tracing` adds support for boot tracing,\n* `guest_debug` now covers both support for gdbing a guest (formerly `gdb`\n  feature) and dumping guest memory.\n\nThe following feature flags were removed as the functionality was enabled by\ndefault: `amx`, `fwdebug`, `cmos` and `common` (#4679, #4632.)\n\n### Asynchronous Kernel Loading\n\nAArch64 has gained support for loading the guest kernel asynchronously like\nx86-64. (#4538)\n\n### GDB Support for AArch64\n\nGDB stub support (accessed through `--gdb` under `guest_debug` feature) is now\navailable on AArch64 as well as as x86-64.\n\n### Notable Bug Fixes\n\n* This version incorporates a version of `virtio-queue` that addresses an issue\n  where a rogue guest can potentially DoS the VMM (rust-vmm/vm-virtio#196.)\n* Improvements around PTY handling for `virtio-console` and serial devices\n  (#4520, #4533, #4535.)\n* Improved error handling in virtio devices (#4626, #4605, #4509, #4631, #4697)\n\n### Deprecations\n\nDeprecated features will be removed in a subsequent release and users should\nplan to use alternatives.\n\n* Booting legacy firmware (compiled without a PVH header) has been deprecated.\n  All the firmware options (Cloud Hypervisor OVMF and Rust Hypervisor Firmware)\n  support booting with PVH so support for loading firmware in a legacy mode is no\n  longer needed. This functionality will be removed in the next release.\n\n### Contributors\n\nMany thanks to everyone who has contributed to our release:\n\n* Anatol Belski <anbelski@linux.microsoft.com>\n* Bo Chen <chen.bo@intel.com>\n* James O. D. Hunt <james.o.hunt@intel.com>\n* Jianyong Wu <jianyong.wu@arm.com>\n* Markus Napierkowski <markus.napierkowski@cyberus-technology.de>\n* Michael Zhao <michael.zhao@arm.com>\n* Nuno Das Neves <nudasnev@microsoft.com>\n* Rob Bradford <robert.bradford@intel.com>\n* Sebastien Boeuf <sebastien.boeuf@intel.com>\n* Smit Gardhariya <sgardhariya@microsoft.com>\n* Wei Liu <liuwe@microsoft.com>\n\n# v26.0\n\nThis release has been tracked through the [v26.0\nproject](https://github.com/cloud-hypervisor/cloud-hypervisor/projects/30).\n\n### SMBIOS Improvements via `--platform`\n\n`--platform` and the appropriate API structure has gained support for supplying\nOEM strings (primarily used to communicate metadata to systemd in the guest)\n(#4319, #4446) and support for specifying the UUID (#4389.)\n\n### Unified Binary MSHV and KVM Support\n\nSupport for both the MSHV and KVM hypervisors can be compiled into the same\nbinary with the detection of the hypervisor to use made at runtime.\n\n### Notable Bug Fixes\n\n* The prefetchable flag is preserved on BARs for VFIO devices (#4353, #4454)\n* PCI Express capabilities for functionality we do not support are now filtered\n  out (#4456)\n* GDB breakpoint support is more reliable (#4354, #4363)\n* `SIGINT` and `SIGTERM` signals are now handled before the VM has booted\n  (#4269, #4293)\n* Multiple API event loop handling bug fixes (#4309, #4362)\n* Incorrect assumptions in virtio queue numbering were addressed, allowing\n  the`virtio-fs` driver in OVMF to be used (#4341, #4314)\n* VHDX file format header fix (#4291)\n* The same VFIO device cannot be added twice (#4453, #4463)\n* SMBIOS tables were being incorrectly generated (#4442)\n\n### Deprecations\n\nDeprecated features will be removed in a subsequent release and users should\nplan to use alternatives.\n\n* The top-level `kernel` and `initramfs` members on the `VmConfig` have been\n  moved inside a `PayloadConfig` as the `payload` member. The OpenAPI document\n  has been updated to reflect the change and the old API members continue to\n  function and are mapped to the new version. The expectation is that these old\n  versions will be removed in the v28.0 release.\n\n### Removals\n\nThe following functionality has been removed:\n\n* The unused `poll_queue` parameter has been removed from `--disk` and\n  equivalent. This was residual from the removal of the `vhost-user-block`\n  spawning feature (#4402.)\n\n### Contributors\n\nMany thanks to everyone who has contributed to our release:\n\n* Alyssa Ross <hi@alyssa.is>\n* Anatol Belski <ab@php.net>\n* Archana Shinde <archana.m.shinde@intel.com>\n* Bo Chen <chen.bo@intel.com>\n* lizhaoxin1 <Lxiaoyouling@163.com>\n* Maximilian Nitsch <maximilian.nitsch@d3tn.com>\n* Michael Zhao <michael.zhao@arm.com>\n* Rob Bradford <robert.bradford@intel.com>\n* Sebastien Boeuf <sebastien.boeuf@intel.com>\n* Steven Dake <sdake@lambdal.com>\n* Wei Liu <liuwe@microsoft.com>\n\n# v25.0\n\nThis release has been tracked through the [v25.0\nproject](https://github.com/cloud-hypervisor/cloud-hypervisor/projects/29).\n\n### `ch-remote` Improvements\n\nThe `ch-remote` command has gained support for creating the VM from a JSON\nconfig and support for booting and deleting the VM from the VMM.\n\n### VM \"Coredump\" Support\n\nUnder the `guest_debug` feature flag it is now possible to extract the memory\nof the guest for use in debugging with e.g. the `crash` utility. (#4012)\n\n### Notable Bug Fixes\n\n* Always restore console mode on exit (#4249, #4248)\n* Restore vCPUs in numerical order which fixes aarch64 snapshot/restore (#4244)\n* Don't try and configure `IFF_RUNNING` on TAP devices (#4279)\n* Propagate configured queue size through to vhost-user backend (#4286)\n* Always Program vCPU CPUID before running the vCPU to fix running on Linux\n  5.16 (#4156)\n* Enable ACPI MADT \"Online Capable\" flag for hotpluggable vCPUs to fix newer\n  Linux guest\n\n### Removals\n\nThe following functionality has been removed:\n\n* The `mergeable` option from the `virtio-pmem` support has been removed\n  (#3968)\n* The `dax` option from the `virtio-fs` support has been removed (#3889)\n\n### Contributors\n\nMany thanks to everyone who has contributed to our release:\n\n* Dylan Bargatze <dbargatz@users.noreply.github.com>\n* Jinank Jain <jinankjain@microsoft.com>\n* Michael Zhao <michael.zhao@arm.com>\n* Rob Bradford <robert.bradford@intel.com>\n* Sebastien Boeuf <sebastien.boeuf@intel.com>\n* Wei Liu <liuwe@microsoft.com>\n* Yi Wang <wang.yi59@zte.com.cn>\n\n# v24.0\n\nThis release has been tracked through the [v24.0\nproject](https://github.com/cloud-hypervisor/cloud-hypervisor/projects/28).\n\n### Bypass Mode for `virtio-iommu`\n\n`virtio-iommu` specification describes how a device can be attached by default\nto a bypass domain. This feature is particularly helpful for booting a VM with\nguest software which doesn't support `virtio-iommu` but still need to access\nthe device. Now that Cloud Hypervisor supports this feature, it can boot a VM\nwith Rust Hypervisor Firmware or OVMF even if the `virtio-block` device exposing\nthe disk image is placed behind a virtual IOMMU.\n\n### Ensure Identifiers Uniqueness\n\nMultiple checks have been added to the code to prevent devices with identical\nidentifiers from being created, and therefore avoid unexpected behaviors at boot\nor whenever a device was hot plugged into the VM.\n\n### Sparse Mmap support\n\nSparse mmap support has been added to both VFIO and vfio-user devices. This\nallows the device regions that are not fully mappable to be partially mapped.\nAnd the more a device region can be mapped into the guest address space, the\nfewer VM exits will be generated when this device is accessed. This directly\nimpacts the performance related to this device.\n\n### Expose Platform Serial Number\n\nA new `serial_number` option has been added to `--platform`, allowing a user to\nset a specific serial number for the platform. This number is exposed to the\nguest through the SMBIOS.\n\n### Notable Bug Fixes\n\n* Fix loading RAW firmware (#4072)\n* Reject compressed QCOW images (#4055)\n* Reject virtio-mem resize if device is not activated (#4003)\n* Fix potential mmap leaks from VFIO/vfio-user MMIO regions (#4069)\n* Fix algorithm finding HOB memory resources (#3983)\n\n### Notable Improvements\n\n* Refactor interrupt handling (#4083)\n* Load kernel asynchronously (#4022)\n* Only create ACPI memory manager DSDT when resizable (#4013)\n\n### Deprecations\n\nDeprecated features will be removed in a subsequent release and users should\nplan to use alternatives\n\n* The `mergeable` option from the `virtio-pmem` support has been deprecated\n  (#3968)\n* The `dax` option from the `virtio-fs` support has been deprecated (#3889)\n\n### New on the Website\n\nA new blog post [Achieving Bare Metal Performance Within a Virtual\nMachine](https://www.cloudhypervisor.org/blog/achieving-bare-metal-performance-within-a-virtual-machine)\nhas been added to the Cloud Hypervisor website.\n\n### Contributors\n\nMany thanks to everyone who has contributed to our release:\n\n* Anatol Belski <anbelski@linux.microsoft.com>\n* Bo Chen <chen.bo@intel.com>\n* Fabiano Fidêncio <fabiano.fidencio@intel.com>\n* LiHui <andrewli@kubesphere.io>\n* Maksym Pavlenko <pavlenko.maksym@gmail.com>\n* Rob Bradford <robert.bradford@intel.com>\n* Sebastien Boeuf <sebastien.boeuf@intel.com>\n* Steven Dake <steven.dake@gmail.com>\n* Vincent Batts <vbatts@hashbangbash.com>\n* Wei Liu <liuwe@microsoft.com>\n\n# v23.1\n\nThis is a bug fix release. The following issues have been addressed:\n\n* Add some missing seccomp rules\n* Remove `virtio-fs` filesystem entries from config on removal\n* Do not delete API socket on API server start (#4026)\n* Reject `virtio-mem` resize if the guest doesn't activate the device\n* Fix OpenAPI naming of I/O throttling knobs\n\n# v23.0\n\nThis release has been tracked through the [v23.0\nproject](https://github.com/cloud-hypervisor/cloud-hypervisor/projects/27).\n\n### vDPA Support\n\nA vDPA device has a datapath that complies with the virtio specification but\nwith a vendor specific control path. The addition of `--vdpa` and the REST API\nequivalent allows the use of these devices with Cloud Hypervisor.\n\n### Updated OS Support list\n\nThe list of officially supported and tested OS versions has been updated to\ninclude Ubuntu \"jammy\" 22.04 and EOLed versions removed.\n\n### `AArch64` Memory Map Improvements\n\nThe memory map when running on `AArch64` has been improved for the handling of\nthe UEFI region which means that the booted guest OS now has full access to its\nallocated RAM. (#3938)\n\n### `AMX` Support\n\nUnder a compile time gate of `amx` it is possible compile in support for the\n`AMX` instruction set extension for guest use. This also requires runtime\nenabling with `--cpu features=amx`.\n\n### Notable Bug Fixes\n\n* Generate error when incorrect HTTP method used for some API endpoints (#3887)\n* CMOS based reset is now available to support rebooting on \"jammy\" (#3914)\n* ACPI tables are not produced for memory hotplug when running with\n  `virtio-mem` (#3883)\n* `virtio-iommu` backed PCI segments are now comprehensively placed behind the\n  vIOMMU (#3870)\n* Seccomp rules have been extended for `virtio-fs` to support direct access\n  (#3848)\n\n### Deprecations\n\nDeprecated features will be removed in a subsequent release and users should\nplan to use alternatives\n\n* The `mergeable` option from the `virtio-pmem` support has been deprecated\n  (#3968)\n* The `dax` option from the `virtio-fs` support has been deprecated (#3889)\n\n### Contributors\n\nMany thanks to everyone who has contributed to our release:\n\n* Bo Chen <chen.bo@intel.com>\n* Fabiano Fidêncio <fabiano.fidencio@intel.com>\n* Henry Wang <Henry.Wang@arm.com>\n* Jianyong Wu <jianyong.wu@arm.com>\n* LiHui <andrewli@kubesphere.io>\n* Michael Zhao <michael.zhao@arm.com>\n* Rob Bradford <robert.bradford@intel.com>\n* Sebastien Boeuf <sebastien.boeuf@intel.com>\n* Wei Liu <liuwe@microsoft.com>\n* William Douglas <william.douglas@intel.com>\n* Yi Wang <wang.yi59@zte.com.cn>\n\n# v22.1\n\nThis is a bug fix release. The following issues have been addressed:\n\n* VFIO ioctl reordering to fix MSI on AMD platforms (#3827)\n* Fix `virtio-net` control queue (#3829)\n\n# v22.0\n\nThis release has been tracked through the [v22.0\nproject](https://github.com/cloud-hypervisor/cloud-hypervisor/projects/25).\n\n### GDB Debug Stub Support\n\nCloud Hypervisor can now be used as debug target with GDB. This is controlled\nby the `gdb` compile time feature and details of how to use it can be found in\nthe [gdb\ndocumentation](https://github.com/cloud-hypervisor/cloud-hypervisor/blob/main/docs/gdb.md).\n\n### `virtio-iommu` Backed Segments\n\nIn order to facilitate hotplug devices that require being behind an IOMMU (e.g.\nQAT) there is a new option `--platform iommu_segments=<list_of_segments>` that\nwill place all the specified segments behind the IOMMU.\n\n### Before Boot Configuration Changes\n\nIt is now possible to change the VM configuration (e.g. add or remove devices,\nresize) before the VM is booted.\n\n### `virtio-balloon` Free Page Reporting\n\nIf `--balloon free_page_reporting=on` is used then the guest can report pages\nthat is it not using to the VMM. The VMM will then notify the host OS that\nthose pages are no longer in use and can be freed. This can result in improved\nmemory density.\n\n### Support for Direct Kernel Booting with TDX\n\nThrough the use of `TD-Shim` lightweight firmware it is now possible to\ndirectly boot into the kernel with TDX. The [TDX\ndocumentation](https://github.com/cloud-hypervisor/cloud-hypervisor/blob/main/docs/intel_tdx.md#tdshim)\nhas been updated for this usage.\n\n### PMU Support for AArch64\n\nA PMU is now available on AArch64 for guest performance profiling. This will be\nexposed automatically if available from the host.\n\n### Documentation Under CC-BY-4.0 License\n\nThe documentation is now licensed under the \"Creative Commons Attribution 4.0\nInternational\" license which is aligned with the project charter under the\nLinux Foundation.\n\n### Deprecation of \"Classic\" `virtiofsd`\n\nThe use of the Rust based [virtiofsd](https://gitlab.com/virtio-fs/virtiofsd)\nis now recommended and we are no longer testing against the C based \"classic\"\nversion.\n\n### Notable Bug Fixes\n\n* Can now be used on kernels without `AF_INET` support (#3785)\n* `virtio-balloon` size is now validated against guest RAM size (#3689)\n* Ensure that I/O related KVM VM Exits are correctly handled (#3677)\n* Multiple TAP file descriptors can be used for `virtio-net` device hotplug (#3607)\n* Minor API improvements and fixes (#3756, #3766, #3647, #3578)\n* Fix sporadic seccomp violation from glibc memory freeing (#3610, #3609)\n* Fix Windows 11 on AArch64 due to wider MSI-X register accesses (#3714, #3720)\n* Ensure `vhost-user` features are correct across migration (#3737)\n* Improved vCPU topology on AArch64 (#3735, #3733)\n\n### Contributors\n\nMany thanks to everyone who has contributed to our release:\n\n* Akira Moroo <retrage01@gmail.com>\n* Barret Rhoden <brho@google.com>\n* Bo Chen <chen.bo@intel.com>\n* Fabiano Fidêncio <fabiano.fidencio@intel.com>\n* Feng Ye <yefeng@smartx.com>\n* Henry Wang <Henry.Wang@arm.com>\n* Jianyong Wu <jianyong.wu@arm.com>\n* lizhaoxin1 <Lxiaoyouling@163.com>\n* Michael Zhao <michael.zhao@arm.com>\n* Rob Bradford <robert.bradford@intel.com>\n* Sebastien Boeuf <sebastien.boeuf@intel.com>\n* Wei Liu <liuwe@microsoft.com>\n\n# v21.0\n\nThis release has been tracked through the [v21.0\nproject](https://github.com/cloud-hypervisor/cloud-hypervisor/projects/24).\n\n### Efficient Local Live Migration (for Live Upgrade)\n\nIn order to support fast live upgrade of the VMM an optimised path has been\nadded in which the memory for the VM is not compared from source to\ndestination. This is activated by passing `--local` to the `ch-remote\nsend-migration` command. This means that the live upgrade can complete in the\norder of 50ms vs 3s. (#3566)\n\n### Recommended Kernel is Now 5.15\n\nDue to an issue in the `virtio-net` code in 5.14 the recommended Linux kernel\nis now 5.15. (#3530)\n\n### Notable Bug fixes\n\n* Multiple fixes were made to the OpenAPI YAML file to match the implementation (#3555,#3562)\n* Avoid live migration deadlock when triggered during the kernel boot (#3585)\n* Support live migration within firmware (#3586)\n* Validate the `virtio-net` descriptor chain (#3548)\n* `direct=on` (`O_DIRECT`) can now be used with a guest that makes unaligned accesses (e.g. firmware) (#3587)\n\n### Contributors\n\nMany thanks to everyone who has contributed to our release:\n\n* Anatol Belski <anbelski@linux.microsoft.com>\n* Barret Rhoden <brho@google.com>\n* Bo Chen <chen.bo@intel.com>\n* Fabiano Fidêncio <fabiano.fidencio@intel.com>\n* Henry Wang <Henry.Wang@arm.com>\n* Liang Zhou <zhoul110@chinatelecom.cn>\n* Michael Zhao <michael.zhao@arm.com>\n* Muhammad Falak R Wani <falakreyaz@gmail.com>\n* Muminul Islam <muislam@microsoft.com>\n* Rob Bradford <robert.bradford@intel.com>\n* Sebastien Boeuf <sebastien.boeuf@intel.com>\n* Wei Liu <liuwe@microsoft.com>\n* Ziye Yang <ziye.yang@intel.com>\n\n# v20.2\n\nThis is a bug fix release. The following issues have been addressed:\n\n* Don't error out when setting up the SIGWINCH handler (for console resize)\n  when this fails due to older kernel (#3456)\n* Seccomp rules were refined to remove syscalls that are now unused\n* Fix reboot on older host kernels when SIGWINCH handler was not initialised\n  (#3496)\n* Fix virtio-vsock blocking issue (#3497)\n\n# v20.1\n\nThis is a bug fix release. The following issues have been addressed:\n\n* Networking performance regression with `virtio-net` (#3450)\n* Limit file descriptors sent in `vfio-user` support (#3401)\n* Fully advertise PCI MMIO config regions in ACPI tables (#3432)\n* Set the TSS and KVM identity maps so they don't overlap with firmware RAM\n* Correctly update the `DeviceTree` on restore\n\n# v20.0\n\nThis release has been tracked through the [v20.0\nproject](https://github.com/cloud-hypervisor/cloud-hypervisor/projects/23).\n\n### Multiple PCI segments support\n\nCloud Hypervisor is no longer limited to 31 PCI devices. For both `x86_64` and\n`aarch64` architectures, it is now possible to create up to 16 PCI segments,\nincreasing the total amount of supported PCI devices to 496.\n\n### CPU pinning\n\nFor each vCPU, the user can define a limited set of host CPUs on which it is\nallowed to run. This can be useful when assigning a 1:1 mapping between host and\nguest resources, or when running a VM on a specific NUMA node.\n\n### Improved VFIO support\n\nBased on VFIO region capabilities, all regions can be memory mapped, limiting\nthe amount of triggered VM exits, and therefore increasing the performance of\nthe passthrough device.\n\n### Safer code\n\nSeveral sections containing unsafe Rust code have been replaced with safe\nalternatives, and multiple comments have been added to clarify why the remaining\nunsafe sections are safe to use.\n\n### Extended documentation\n\nThe documentation related to VFIO has been updated while some new documents have\nbeen introduced to cover the usage of `--cpus` parameter as well as how to run\nCloud Hypervisor on Intel TDX.\n\n### Notable bug fixes\n\n* Naturally align PCI BARs on relocation (#3244)\n* Fix panic in SIGWINCH listener thread when no seccomp filter set (#3338)\n* Use the tty raw mode implementation from libc (#3344)\n* Fix the emulation of register D for CMOS/RTC device (#3393)\n\n### Contributors\n\nMany thanks to everyone who has contributed to our release:\n\n* Alyssa Ross <hi@alyssa.is>\n* Bo Chen <chen.bo@intel.com>\n* Fabiano Fidêncio <fabiano.fidencio@intel.com>\n* Michael Zhao <michael.zhao@arm.com>\n* Muminul Islam <muislam@microsoft.com>\n* Rob Bradford <robert.bradford@intel.com>\n* Sebastien Boeuf <sebastien.boeuf@intel.com>\n* Wei Liu <liuwe@microsoft.com>\n* Willen Yang <willenyang@gmail.com>\n* William Douglas <william.douglas@intel.com>\n* Ziye Yang <ziye.yang@intel.com>\n\n# v19.0\n\nThis release has been tracked through the [v19.0\nproject](https://github.com/cloud-hypervisor/cloud-hypervisor/projects/22).\n\n### Improved PTY handling for serial and `virtio-console`\n\nThe PTY support for serial has been enhanced with improved buffering when the\nthe PTY is not yet connected to. Using `virtio-console` with PTY now results in\nthe console being resized if the PTY window is also resized.\n\n### PCI boot time optimisations\n\nMultiple optimisations have been made to the PCI handling resulting in\nsignificant improvements in the boot time of the guest.\n\n### Improved TDX support\n\nWhen using the latest TDVF firmware the ACPI tables created by the VMM are now\nexposed via the firmware to the guest.\n\n### Live migration enhancements\n\nLive migration support has been enhanced to support migration with `virtio-mem`\nbased memory hotplug and the `virtio-balloon` device now supports live\nmigration.\n\n### `virtio-mem` support with `vfio-user`\n\nThe use of `vfio-user` userspaces devices can now be used in conjunction with\n`virtio-mem` based memory hotplug and unplug.\n\n### AArch64 for `virtio-iommu`\n\nA paravirtualised IOMMU can now be used on the AArch64 platform.\n\n### Notable bug fixes\n\n* ACPI hotplugged memory is correctly restored after a live migration or\n  snapshot/restore (#3165)\n* Multiple devices from the same IOMMU group can be passed through via VFIO\n  (#3078 #3113)\n* Live migration with large blocks of memory was buggy due to an in issue in\n  the underlying crate (#3157)\n\n### Contributors\n\nMany thanks to everyone who has contributed to our release:\n\n* Alyssa Ross <hi@alyssa.is>\n* Bo Chen <chen.bo@intel.com>\n* Henry Wang <Henry.Wang@arm.com>\n* Hui Zhu <teawater@antfin.com>\n* Jianyong Wu <jianyong.wu@arm.com>\n* Li Yu <liyu.yukiteru@bytedance.com>\n* Michael Zhao <michael.zhao@arm.com>\n* Muminul Islam <muislam@microsoft.com>\n* Rob Bradford <robert.bradford@intel.com>\n* Sebastien Boeuf <sebastien.boeuf@intel.com>\n* Wei Liu <liuwe@microsoft.com>\n* William Douglas <william.douglas@intel.com>\n* Yu Li <liyu.yukiteru@bytedance.com>\n\n# v18.0\n\nThis release has been tracked through the [v18.0\nproject](https://github.com/cloud-hypervisor/cloud-hypervisor/projects/21).\n\n### Experimental User Device (`vfio-user`) support\n\nExperimental support for running PCI devices in userspace via `vfio-user`\nhas been included. This allows the use of the SPDK NVMe `vfio-user` controller\nwith Cloud Hypervisor. This is enabled by `--user-device` on the command line.\n\n### Migration support for `vhost-user` devices\n\nDevices exposed into the VM via `vhost-user` can now be migrated using the live\nmigration support. This requires support from the backend however the commonly\nused DPDK `vhost-user` backend does support this.\n\n### VHDX disk image support\n\nImages using the VHDX disk image format can now be used with Cloud Hypervisor.\n\n### Device pass through on MSHV hypervisor\n\nWhen running on the MSHV hypervisor it is possible to pass through devices from\nthe host through to the guest (e.g with `--device`)\n\n### AArch64 for support `virtio-mem`\n\nThe reference Linux kernel we recommend for using with Cloud Hypervisor now supports `virtio-mem` on AArch64.\n\n### Live migration on MSHV hypervisor\n\nLive migration is now supported when running on the MSHV hypervisor including\nefficient tracking of dirty pages.\n\n### AArch64 CPU topology support\n\nThe CPU topology (as configured through `--cpu topology=`) can now be\nconfigured on AArch64 platforms and is conveyed through either ACPI or device\ntree.\n\n### Power button support on AArch64\n\nUse of the ACPI power button (e.g `ch-remote --api-socket=<API socket> power-button`)\nis now supported when running on AArch64.\n\n### Notable bug fixes\n\n* Using two PTY outputs e.g. `--serial pty --console pty` now works correctly (#3012)\n* TTY input is now always sent to the correct destination (#3005)\n* The boot is no longer blocked when using a unattached PTY on the serial console (#3004)\n* Live migration is now supported on AArch64 (#3049)\n* Ensure signal handlers are run on the correct thread (#3069)\n\n### Contributors\n\nMany thanks to everyone who has contributed to our release:\n\n* Alyssa Ross <hi@alyssa.is>\n* Anatol Belski <anbelski@linux.microsoft.com>\n* Arafatms <arafatms@outlook.com>\n* Bo Chen <chen.bo@intel.com>\n* Fazla Mehrab <akm.fazla.mehrab@vt.edu>\n* Henry Wang <Henry.Wang@arm.com>\n* Jianyong Wu <jianyong.wu@arm.com>\n* Jiaqi Gao <jiaqi.gao@intel.com>\n* Markus Theil <markus.theil@tu-ilmenau.de>\n* Muminul Islam <muislam@microsoft.com>\n* Rob Bradford <robert.bradford@intel.com>\n* Sebastien Boeuf <sebastien.boeuf@intel.com>\n* Wei Liu <liuwe@microsoft.com>\n* Yu Li <liyu.yukiteru@bytedance.com>\n\n# v17.0\n\nThis release has been tracked through the [v17.0\nproject](https://github.com/cloud-hypervisor/cloud-hypervisor/projects/20).\n\n### ARM64 NUMA support using ACPI\n\nThe support for ACPI on ARM64 has been enhanced to include support for\nspecifying a NUMA configuration using the existing control options.\n\n### `Seccomp` support for MSHV backend\n\nThe `seccomp` rules have now been extended to support running against the MSHV\nhypervisor backend.\n\n### Hotplug of `macvtap` devices\n\nHotplug of `macvtap` devices is now supported with the file descriptor for the\nnetwork device if opened by the user and passed to the VMM. The `ch-remote`\ntool supports this functionality when adding a network device.\n\n### Improved SGX support\n\nThe SGX support has been updated to match the latest Linux kernel support and\nnow supports SGX provisioning and associating EPC sections to NUMA nodes.\n\n### Inflight tracking for `vhost-user` devices\n\nSupport for handling inflight tracking of I/O requests has been added to the\n`vhost-user` devices allowing recovery after device reconnection.\n\n### Notable bug fixes\n\n* VFIO PCI BAR calculation code now correctly handles I/O BARs (#2821).\n* The VMM side of `vhost-user` devices no longer advertise the\n  `VIRTIO_F_RING_PACKED` feature as they are not yet supported in the VMM\n(#2833).\n* On ARM64 VMs can be created with more than 16 vCPUs (#2763).\n\n### Contributors\n\nMany thanks to everyone who has contributed to our release:\n\n* Anatol Belski <anbelski@linux.microsoft.com>\n* Arafatms <arafatms@outlook.com>\n* Bo Chen <chen.bo@intel.com>\n* Fei Li <lifei.shirley@bytedance.com>\n* Henry Wang <Henry.Wang@arm.com>\n* Jiachen Zhang <zhangjiachen.jaycee@bytedance.com>\n* Jianyong Wu <jianyong.wu@arm.com>\n* Li Hangjing <lihangjing@bytedance.com>\n* Michael Zhao <michael.zhao@arm.com>\n* Muminul Islam <muislam@microsoft.com>\n* Rob Bradford <robert.bradford@intel.com>\n* Sebastien Boeuf <sebastien.boeuf@intel.com>\n* Wei Liu <liuwe@microsoft.com>\n* Yukiteru <wfly1998@sina.com>\n\n# v16.0\n\nThis release has been tracked through the [v16.0 project](https://github.com/cloud-hypervisor/cloud-hypervisor/projects/19).\n\n### Improved live migration support\n\nThe live migration support inside Cloud Hypervisor has been improved with the addition of the tracking of dirty pages written by the VMM to complement the tracking of dirty pages made by the guest itself. Further the internal state of the VMM now is versioned which allows the safe migration of VMs from one version of the VMM to a newer one. However further testing is required so this should be done with care. See the [live migration documentation](docs/live_migration.md) for more details.\n\n### Improved `vhost-user` support\n\nWhen using `vhost-user` to access devices implemented in different processes there is now support for reconnection of those devices in the case of a restart of the backend. In addition it is now possible to operate with the direction of the `vhost-user-net` connection reversed with the server in the VMM and the client in the backend. This is aligns with the default approach recommended by Open vSwitch.\n\n### ARM64 ACPI and UEFI support\n\nCloud Hypervisor now supports using ACPI and booting from a UEFI image on ARM64. This allows the use of stock OS images without direct kernel boot.\n\n### Notable bug fixes\n\n* Activating fewer `virtio-net` queues than advertised is now supported. This appeared when using OVMF with an MQ enabled device (#2578).\n* When using MQ with `virtio` devices Cloud Hypervisor now enforces a minimum vCPU count which ensures that the user will not see adverse guest performance (#2563).\n* The KVM clock is now correctly handled during live migration / snapshot & restore.\n\n### Removed functionality\n\nThe following formerly deprecated features have been removed:\n\n* Support for booting with the \"LinuxBoot\" protocol for ELF and `bzImage`\n  binaries has been deprecated. When using direct boot users should configure\n  their kernel with `CONFIG_PVH=y`.\n\n### Contributors\n\nMany thanks to everyone who has contributed to our release including some new faces.\n\n* Anatol Belski <anbelski@linux.microsoft.com>\n* Bo Chen <chen.bo@intel.com>\n* Dayu Liu <liu.dayu@zte.com.cn>\n* Henry Wang <Henry.Wang@arm.com>\n* Jiachen Zhang <zhangjiachen.jaycee@bytedance.com>\n* Jianyong Wu <jianyong.wu@arm.com>\n* Michael Zhao <michael.zhao@arm.com>\n* Mikko Ylinen <mikko.ylinen@intel.com>\n* Muminul Islam <muislam@microsoft.com>\n* Ren Lei <ren.lei4@zte.com.cn>\n* Rob Bradford <robert.bradford@intel.com>\n* Sebastien Boeuf <sebastien.boeuf@intel.com>\n* Wei Liu <liuwe@microsoft.com>\n* Yi Wang <wang.yi59@zte.com.cn>\n\n# v15.0\n\nThis release has been tracked through the [v15.0 project](https://github.com/cloud-hypervisor/cloud-hypervisor/projects/18).\n\nHighlights for `cloud-hypervisor` version v15.0 include:\n\n### Version numbering and stability guarantees\n\nThis release is the first in a new version numbering scheme to represent that\nwe believe Cloud Hypervisor is maturing and entering a period of stability.\nWith this new release we are beginning our new stability guarantees:\n\n* The API (including command line options) will not be removed or changed in a\n  breaking way without a minimum of 2 releases notice. Where possible warnings\n  will be given about the use of deprecated functionality and the deprecations\n  will be documented in the release notes.\n* Point releases will be made between individual releases where there are\n  substantial bug fixes or security issues that need to be fixed.\n\nCurrently the following items are **not** guaranteed across updates:\n\n* Snapshot/restore is not supported across different versions\n* Live migration is not supported across different versions\n* The following features are considered experimental and may change\n  substantially between releases: TDX, SGX.\n\n### Network device rate limiting\n\nBuilding on our existing support for rate limiting block activity the network\ndevice also now supports rate limiting. Full details of the controls are in the\n[IO throttling documentation.](docs/io_throttling.md)\n\n### Support for runtime control of `virtio-net` guest offload\n\nThe guest is now able to change the offload settings for the `virtio-net`\ndevice. As well as providing a useful control this mitigates an issue in the\nLinux kernel where the guest will attempt to reprogram the offload settings\neven if they are not advertised as configurable (#2528).\n\n### `--api-socket` supports file descriptor parameter\n\nThe `--api-socket` can now take an `fd=` parameter to specify an existing file\ndescriptor to use. This is particularly beneficial for frameworks that need to\nprogrammatically control Cloud Hypervisor.\n\n### Bug fixes\n\n* A workaround has been put in place to mitigate a Linux kernel issues that\n  results in the CPU thread spinning at 100% when using `virtio-pmem` (#2277).\n* PCI BARs are now correctly aligned removing the need for the guest to\n  reprogram them (#1797,#1798)\n* Handle TAP interface not being writable within virtio-net (due to the buffer\n  exhaustion on the host) (#2517)\n* The recommended Linux kernel is now v5.12.0 as it contains a fix that\n  prevents snapshot & restore working (#2535)\n\n### Deprecations\n\nDeprecated features will be removed in a subsequent release and users should plan to use alternatives\n\n* Support for booting with the \"LinuxBoot\" protocol for ELF and `bzImage`\n  binaries has been deprecated. When using direct boot users should configure\n  their kernel with `CONFIG_PVH=y`. Will be removed in v16.0.\n\n### Contributors\n\nMany thanks to everyone who has contributed to our release including some new faces.\n\n* Alyssa Ross <hi@alyssa.is>\n* Anatol Belski <anbelski@linux.microsoft.com>\n* Bo Chen <chen.bo@intel.com>\n* Gaelan Steele <gbs@canishe.com>\n* Jianyong Wu <jianyong.wu@arm.com>\n* Michael Zhao <michael.zhao@arm.com>\n* Muminul Islam <muislam@microsoft.com>\n* Rob Bradford <robert.bradford@intel.com>\n* Sebastien Boeuf <sebastien.boeuf@intel.com>\n* Wei Liu <liuwe@microsoft.com>\n* William Douglas <william.douglas@intel.com>\n\n# v0.14.1\n\nBug fix release branched off the v0.14.0 release. The following bugs were fixed\nin this release:\n\n* CPU hotplug on Windows failed due to misreported CPU state information and\n  the lack of HyperV CPUID bit enabled (#2437, #2449, #2436)\n* A seccomp rule was missing that was triggered on CPU unplug (#2455)\n* A bounds check in VIRTIO queue validation was erroneously generating\n  DescriptorChainTooShort errors in certain circumstances (#2450, #2424)\n\n# v0.14.0\n\nThis release has been tracked through the [0.14.0 project](https://github.com/cloud-hypervisor/cloud-hypervisor/projects/17).\n\nHighlights for `cloud-hypervisor` version 0.14.0 include:\n\n### Structured event monitoring\n\nA new option was added to the VMM `--event-monitor` which reports structured\nevents (JSON) over a file or file descriptor at key events in the lifecycle of\nthe VM. The list of events is limited at the moment but will be further\nextended over subsequent releases. The events exposed form part of the Cloud\nHypervisor API surface.\n\n### MSHV improvements\n\nBasic support has been added for running Windows guests atop the MSHV\nhypervisor as an alternative to KVM and further improvements have been made to\nthe MSHV support.\n\n### Improved aarch64 platform\n\nThe aarch64 platform has been enhanced with more devices exposed to the running\nVM including an enhanced serial UART.\n\n### Updated hotplug documentation\n\nThe documentation for the hotplug support has been updated to reflect the use\nof the `ch-remote` tool and to include details of `virtio-mem` based hotplug as\nwell as documenting hotplug of paravirtualised and VFIO devices.\n\n### PTY control for serial and `virtio-console`\n\nThe `--serial` and `--console` parameters can now direct the console to a PTY\nallowing programmatic control of the console from another process through the\nPTY subsystem.\n\n### Block device rate limiting\n\nThe block device performance can now be constrained as part of the VM\nconfiguration allowing rate limiting. Full details of the controls are in the\n[IO throttling documentation.](docs/io_throttling.md)\n\n\n### Deprecations\n\nDeprecated features will be removed in a subsequent release and users should plan to use alternatives\n\n* Support for booting with the \"LinuxBoot\" protocol for ELF and `bzImage`\n  binaries has been deprecated. When using direct boot users should configure\n  their kernel with `CONFIG_PVH=y`.\n\n\n### Contributors\n\nMany thanks to everyone who has contributed to our 0.14.0 release including\nsome new faces.\n\n* Bo Chen <chen.bo@intel.com>\n* Henry Wang <Henry.Wang@arm.com>\n* Iggy Jackson <iggy@theiggy.com>\n* Jiachen Zhang <zhangjiachen.jaycee@bytedance.com>\n* Michael Zhao <michael.zhao@arm.com>\n* Muminul Islam <muislam@microsoft.com>\n* Penny Zheng <Penny.Zheng@arm.com>\n* Rob Bradford <robert.bradford@intel.com>\n* Sebastien Boeuf <sebastien.boeuf@intel.com>\n* Vineeth Pillai <viremana@linux.microsoft.com>\n* Wei Liu <liuwe@microsoft.com>\n* William Douglas <william.r.douglas@gmail.com>\n* Zide Chen <zide.chen@intel.com>\n\n# v0.13.0\n\nThis release has been tracked through the [0.13.0 project](https://github.com/cloud-hypervisor/cloud-hypervisor/projects/16).\n\nHighlights for `cloud-hypervisor` version 0.13.0 include:\n\n### Wider VFIO device support\n\nIt is now possible to use Cloud Hypervisor's VFIO support to passthrough PCI\ndevices that do not support MSI or MSI-X and instead rely on INTx interrupts.\nMost notably this widens the support to most NVIDIA cards with the proprietary\ndrivers.\n\n### Improved huge page support\n\nThrough the addition of `hugepage_size` on `--memory` it is now possible to\nspecify the desired size of the huge pages used when allocating the guest\nmemory. The user is required to ensure they have sufficient pages of the\ndesired size in their pool.\n\n### MACvTAP support\n\nIt is now possible to provide file descriptors using the `fd` parameter to\n`--net` which point at TAP devices that have already been opened by the user.\nThis aids integration with `libvirt` but also permits the use of MACvTAP\nsupport. This is documented in dedicated [macvtap documentation](docs/macvtap-bridge.md).\n\n### VHD disk image support\n\nIt is now possible to use VHD (fixed) disk images as well as QCOWv2 and raw\ndisk image with Cloud Hypervisor.\n\n### Improved Virtio device threading\n\nDevice threads are now derived from the main VMM thread which allows more\nrestrictive seccomp filters to be applied to them. The threads also have a\npredictable name derived from the device id.\n\n### Clean shutdown support via synthetic power button\n\nIt is now possible to request that the guest VM shut itself down by triggering\na synthetic ACPI power button press from the VMM. If the guest is listening for\nsuch an event (e.g. using systemd) then it will process the event and cleanly\nshut down. This functionality is exposed through the HTTP API and can be\ntriggered via `ch-remote --api-socket=<API socket> power-button`.\n\n### Contributors\n\nMany thanks to everyone who has contributed to our 0.13.0 release including\nsome new faces.\n\n* Bo Chen <chen.bo@intel.com>\n* Mikko Ylinen <mikko.ylinen@intel.com>\n* Muminul Islam <muislam@microsoft.com>\n* Rob Bradford <robert.bradford@intel.com>\n* Samuel Ortiz <sameo@linux.intel.com>\n* Sebastien Boeuf <sebastien.boeuf@intel.com>\n* Vineeth Pillai <viremana@linux.microsoft.com>\n* Wei Liu <liuwe@microsoft.com>\n* William Douglas <william.r.douglas@gmail.com>\n* Xie Yongji <xieyongji@bytedance.com>\n\n# v0.12.0\n\nThis release has been tracked through the [0.12.0 project](https://github.com/cloud-hypervisor/cloud-hypervisor/projects/15).\n\nHighlights for `cloud-hypervisor` version 0.12.0 include:\n\n### ARM64 enhancements\n\nThe use of `--watchdog` is now fully supported as is the ability to reboot the\nVM from within the guest when running Cloud Hypervisor on an ARM64 system.\n\n### Removal of `vhost-user-net` and `vhost-user-block` self spawning\n\nIn order to use `vhost-user-net` or `vhost-user-block` backends the user is now\nresponsible for starting the backend and providing the socket for the VMM to\nuse. This functionality was deprecated in the last release and how now been\nremoved.\n\n### Migration of `vhost-user-fs` backend\n\nThe `vhost-user-fs` backend is no longer included in Cloud Hypervisor and it is\ninstead hosted in [its own\nrepository](https://gitlab.com/virtio-fs/virtiofsd-rs)\n\n### Enhanced \"info\" API\n\nThe `vm.info` HTTP API endpoint has been extended to include the details of the\ndevices used by the VM including any VFIO devices used.\n\n### Contributors\n\nMany thanks to everyone who has contributed to our 0.12.0 release:\n\n* Anatol Belski <anbelski@linux.microsoft.com>\n* Julio Montes <julio.montes@intel.com>\n* Michael Zhao <michael.zhao@arm.com>\n* Muminul Islam <muislam@microsoft.com>\n* Rob Bradford <robert.bradford@intel.com>\n* Samuel Ortiz <sameo@linux.intel.com>\n* Wei Liu <liuwe@microsoft.com>\n\n# v0.11.0\n\nThis release has been tracked through the [0.11.0 project](https://github.com/cloud-hypervisor/cloud-hypervisor/projects/14).\n\nHighlights for `cloud-hypervisor` version 0.11.0 include:\n\n### `io_uring` support by default for `virtio-block`\n\nProvided that the host OS supports it (Linux kernel 5.8+) then `io_uring` will\nbe used for a significantly higher performance block device.\n\n### Windows Guest Support\n\nThis is the first release where we officially support Windows running as a\nguest. Full details of how to setup the image and run Cloud Hypervisor with a\nWindows guest can be found in the dedicated [Windows\ndocumentation](docs/windows.md).\n\n### `vhost-user` \"Self Spawning\" Deprecation\n\nAutomatically spawning a `vhost-user-net` or `vhost-user-block` backend is now\ndeprecated. Users of this functionality will receive a warning and should make\nadjustments. The functionality will be removed in the next release.\n\n### `virtio-mmio` Removal\n\nSupport for using the `virtio-mmio` transport, rather than using PCI, has been\nremoved. This has been to simplify the code and significantly\nreduce the testing burden of the project.\n\n### Snapshot/Restore support for ARM64\n\nWhen running on the ARM64 architecture snapshot and restore has now been\nimplemented.\n\n### Improved Linux Boot Time\n\nThe time to boot the Linux kernel has been significantly improved by the\nidentifying some areas of delays around PCI bus probing, IOAPIC programming and\nMPTABLE issues. Full details can be seen in #1728.\n\n### `SIGTERM/SIGINT` Interrupt Signal Handling\n\nWhen the VMM process receives the `SIGTERM` or `SIGINT` signals then it will\ntrigger the VMM process to cleanly deallocate resources before exiting. The\nguest VM will not be cleanly shutdown but the VMM process will clean up its\nresources.\n\n### Default Log Level Changed\n\nThe default logging level was changed to include warnings which should make it\neasier to see potential issues. New [logging\ndocumentation](docs/logging) was also added.\n\n### New `--balloon` Parameter Added\n\nControl of the setup of `virtio-balloon` has been moved from `--memory` to its\nown dedicated parameter. This makes it easier to add more balloon specific\ncontrols without overloading `--memory`.\n\n### Experimental `virtio-watchdog` Support\n\nSupport for using a new `virtio-watchdog` has been added which can be used to\nhave the VMM reboot the guest if the guest userspace fails to ping the\nwatchdog. This is enabled with `--watchdog` and requires kernel support.\n\n### Notable Bug Fixes\n\n* MTRR bit was missing from CPUID advertised to guest\n* \"Return\" key could not be used under `CMD.EXE` under Windows SAC (#1170)\n* CPU identification string is now exposed to the guest\n* `virtio-pmem` with`discard_writes=on` no longer marks the guest memory as\n  read only so avoids excessive VM exits (#1795)\n* PCI device hotplug after an unplug was fixed (#1802)\n* When using the ACPI method to resize the guest memory the full reserved size\n  can be used (#1803)\n* Snapshot and restore followed by a second snapshot and restore now works\n  correctly\n* Snapshot and restore of VMs with more than 2GiB in one region now work\n  correctly\n\n### Contributors\n\nMany thanks to everyone who has contributed to our 0.11.0 release including some new faces.\n\n* Anatol Belski <anbelski@linux.microsoft.com>\n* Bo Chen <chen.bo@intel.com>\n* Daniel Verkamp <dverkamp@chromium.org>\n* Henry Wang <Henry.Wang@arm.com>\n* Hui Zhu <teawater@antfin.com>\n* Jiangbo Wu <jiangbo.wu@intel.com>\n* Josh Soref <jsoref@users.noreply.github.com>\n* Julio Montes <julio.montes@intel.com>\n* Michael Zhao <michael.zhao@arm.com>\n* Muminul Islam <muislam@microsoft.com>\n* pierwill <19642016+pierwill@users.noreply.github.com>\n* Praveen Paladugu <prapal@microsoft.com>\n* Rob Bradford <robert.bradford@intel.com>\n* Sebastien Boeuf <sebastien.boeuf@intel.com>\n* Wei Liu <liuwe@microsoft.com>\n\n\n# v0.10.0\n\nThis release has been tracked through the [0.10.0 project](https://github.com/cloud-hypervisor/cloud-hypervisor/projects/13).\n\nHighlights for `cloud-hypervisor` version 0.10.0 include:\n\n### `virtio-block` Support for Multiple Descriptors\n\nSome `virtio-block` device drivers may generate requests with multiple descriptors and support has been added for those drivers.\n\n### Memory Zones\n\nSupport has been added for fine-grained control of memory allocation for the guest. This includes controlling the backing of sections of guest memory, assigning to specific host NUMA nodes and assigning memory and vCPUs to specific memory nodes inside the guest. Full details of this can be found in the [memory documentation](docs/memory.md).\n\n### `Seccomp` Sandbox Improvements\n\nAll the remaining threads and devices are now isolated within their own `seccomp` filters. This provides a layer of sandboxing and enhances the security model of `cloud-hypervisor`.\n\n### Preliminary KVM HyperV Emulation Control\n\nA new option (`kvm_hyperv`) has been added to `--cpus` to provide an option to toggle on KVM's HyperV emulation support. This enables progress towards booting Windows without adding extra emulated devices.\n\n### Notable Bug Fixes\n\n- When using `ch-remote` to resize the VM parameter now accepts the standard sizes suffices (#1596)\n- `cloud-hypervisor` no longer panics when started with `--memory hotplug_method=virtio-mem` and no `hotplug_size` (#1564)\n- After a reboot memory can remove when using `--memory hotplug_method=virtio-mem` (#1593)\n- `--version` shows the version for released binaries (#1669)\n- Errors generated by worker threads for `virtio` devices are now printed out (#1551)\n\n### Contributors\n\nMany thanks to everyone who has contributed to our 0.10.0 release including some new faces.\n\n* Alyssa Ross <hi@alyssa.is>\n* Amey Narkhede <ameynarkhede02@gmail.com>\n* Anatol Belski <ab@php.net>\n* Bo Chen <chen.bo@intel.com>\n* Hui Zhu <teawater@antfin.com>\n* Michael Zhao <michael.zhao@arm.com>\n* Muminul Islam <muislam@microsoft.com>\n* Rob Bradford <robert.bradford@intel.com>\n* Samuel Ortiz <sameo@linux.intel.com>\n* Sebastien Boeuf <sebastien.boeuf@intel.com>\n* Wei Liu <liuwe@microsoft.com>\n\n# v0.9.0\n\nThis release has been tracked through the [0.9.0 project](https://github.com/cloud-hypervisor/cloud-hypervisor/projects/12).\n\nHighlights for `cloud-hypervisor` version 0.9.0 include:\n\n### `io_uring` Based Block Device Support\n\nIf the `io_uring` feature is enabled and the host kernel supports it then `io_uring` will be used for block devices. This results a very significant performance improvement.\n\n### Block and Network Device Statistics\n\nStatistics for activity of the `virtio` network and block devices is now exposed through a new `vm.counters` HTTP API entry point. These take the form of simple counters which can be used to observe the activity of the VM.\n\n### HTTP API Responses\n\nThe HTTP API for adding devices now responds with the name that was assigned to the device as well the PCI BDF.\n\n### CPU Topology\n\nA `topology` parameter has been added to `--cpus` which allows the configuration of the guest CPU topology allowing the user to specify the numbers of sockets, packages per socket, cores per package and threads per core.\n\n### Release Build Optimization\n\nOur release build is now built with LTO (*Link Time Optimization*) which results in a ~20% reduction in the binary size.\n\n### Hypervisor Abstraction\n\nA new abstraction has been introduced, in the form of a `hypervisor` crate so as to enable the support of additional hypervisors beyond `KVM`.\n\n### Snapshot/Restore Improvements\n\nMultiple improvements have been made to the VM snapshot/restore support that was added in the last release. This includes persisting more vCPU state and in particular preserving the guest paravirtualized clock in order to avoid vCPU hangs inside the guest when running with multiple vCPUs.\n\n### Virtio Memory Ballooning Support\n\nA `virtio-balloon` device has been added, controlled through the `resize` control, which allows the reclamation of host memory by resizing a memory balloon inside the guest.\n\n### Enhancements to ARM64 Support\n\nThe ARM64 support introduced in the last release has been further enhanced with support for using PCI for exposing devices into the guest as well as multiple bug fixes. It also now supports using an initramfs when booting.\n\n### Intel SGX Support\n\nThe guest can now use Intel SGX if the host supports it. Details can be found in the dedicated [SGX documentation](docs/intel_sgx.md).\n\n### `Seccomp` Sandbox Improvements\n\nThe most frequently used virtio devices are now isolated with their own `seccomp` filters. It is also now possible to pass `--seccomp=log` which result in the logging of requests that would have otherwise been denied to further aid development.\n\n### Notable Bug Fixes\n\n* Our `virtio-vsock` implementation has been resynced with the implementation from Firecracker and includes multiple bug fixes.\n* CPU hotplug has been fixed so that it is now possible to add, remove, and re-add vCPUs (#1338)\n* A workaround is now in place for when KVM reports MSRs available MSRs that are in fact unreadable preventing snapshot/restore from working correctly (#1543).\n* `virtio-mmio` based devices are now more widely tested (#275).\n* Multiple issues have been fixed with virtio device configuration (#1217)\n* Console input was wrongly consumed by both `virtio-console` and the serial. (#1521)\n\n### Contributors\n\nMany thanks to everyone who has contributed to our 0.9.0 release including some new faces.\n\n* Anatol Belski <ab@php.net>\n* Bo Chen <chen.bo@intel.com>\n* Dr. David Alan Gilbert <dgilbert@redhat.com>\n* Henry Wang <Henry.Wang@arm.com>\n* Howard Zhang <howard.zhang@arm.com>\n* Hui Zhu <teawater@antfin.com>\n* Jianyong Wu <jianyong.wu@arm.com>\n* Jose Carlos Venegas Munoz <jose.carlos.venegas.munoz@intel.com>\n* LiYa'nan <oliverliyn@gmail.com>\n* Michael Zhao <michael.zhao@arm.com>\n* Muminul Islam <muislam@microsoft.com>\n* Praveen Paladugu <prapal@microsoft.com>\n* Ricardo Koller <ricarkol@gmail.com>\n* Rob Bradford <robert.bradford@intel.com>\n* Samuel Ortiz <sameo@linux.intel.com>\n* Sebastien Boeuf <sebastien.boeuf@intel.com>\n* Stefano Garzarella <sgarzare@redhat.com>\n* Wei Liu <liuwe@microsoft.com>\n\n\n# v0.8.0\n\nThis release has been tracked through the [0.8.0 project](https://github.com/cloud-hypervisor/cloud-hypervisor/projects/10).\n\nHighlights for `cloud-hypervisor` version 0.8.0 include:\n\n### Experimental Snapshot and Restore Support\n\nThis release includes the first version of the snapshot and restore feature.\nThis allows a VM to be paused and then subsequently snapshotted. At a later\npoint that snapshot may be restored into a new running VM identical to the\noriginal VM at the point it was paused.\n\nThis feature can be used for offline migration from one VM host to another, to\nallow the upgrading or rebooting of the host machine transparently to the guest\nor for templating the VM. This is an experimental feature and cannot be used on\na VM using passthrough (VFIO) devices. Issues with SMP have also been observed\n(#1176).\n\n### Experimental ARM64 Support\n\nIncluded in this release is experimental support for running on ARM64.\nCurrently only `virtio-mmio` devices and a serial port are supported. Full\ndetails can be found in the [ARM64 documentation](docs/arm64.md).\n\n### Support for Using 5-level Paging in Guests\n\nIf the host supports it the guest is now enabled for 5-level paging (aka LA57).\nThis works when booting the Linux kernel with a vmlinux, bzImage or firmware\nbased boot. However booting an ELF kernel built with `CONFIG_PVH=y` does not\nwork due to current limitations in the PVH boot process.\n\n### Virtio Device Interrupt Suppression for Network Devices\n\nWith `virtio-net` and `vhost-user-net` devices the guest can suppress\ninterrupts from the VMM by using the `VIRTIO_RING_F_EVENT_IDX` feature. This\ncan lead to an improvement in performance by reducing the number of interrupts\nthe guest must service.\n\n### `vhost_user_fs` Improvements\n\nThe implementation in Cloud Hypervisor of the VirtioFS server now supports sandboxing itself with `seccomp`.\n\n\n### Notable Bug Fixes\n\n* VMs that have not yet been booted can now be deleted (#1110).\n* By creating the `tap` device ahead of creating the VM it is not required to\n  run the `cloud-hypervisor` binary with `CAP_NET_ADMIN` (#1273).\n* Block I/O via `virtio-block` or `vhost-user-block` now correctly adheres to\n  the specification and synchronizes to the underlying filesystem as required\n  based on guest feature negotiation. This avoids potential data loss (#399,\n  #1216).\n* When booting with a large number of vCPUs then the ACPI table would be\n  overwritten by the SMP `MPTABLE`. When compiled with the `acpi` feature the\n  `MPTABLE` will no longer be generated (#1132).\n* Shutting down VMs that have been paused is now supported (#816).\n* Created socket files are deleted on shutdown (#1083).\n* Trying to use passthrough devices (VFIO) will be rejected on `mmio` builds\n  (#751).\n\n### Command Line and API Changes\n\nThis is non exhaustive list of HTTP API and command line changes:\n\n* All user visible socket parameters are now consistently called `socket`\n  rather than `sock` in some cases.\n* The `ch-remote` tool now shows any error message generated by the VMM\n* The `wce` parameter has been removed from `--disk` as the feature is always\n  offered for negotiation.\n* `--net` has gained a `host_mac` option that allows the setting of the MAC\n  address for the `tap` device on the host.\n\n### Contributors\n\nMany thanks to everyone who has contributed to our 0.8.0 release including some new faces.\n\n* Anatol Belski <ab@php.net>\n* Arron Wang <arron.wang@intel.com>\n* Bo Chen <chen.bo@intel.com>\n* Dr. David Alan Gilbert <dgilbert@redhat.com>\n* Henry Wang <Henry.Wang@arm.com>\n* Hui Zhu <teawater@antfin.com>\n* LiYa'nan <oliverliyn@gmail.com>\n* Michael Zhao <michael.zhao@arm.com>\n* Rob Bradford <robert.bradford@intel.com>\n* Samuel Ortiz <sameo@linux.intel.com>\n* Sebastien Boeuf <sebastien.boeuf@intel.com>\n* Sergio Lopez <slp@redhat.com>\n\n# v0.7.0\n\nThis release has been tracked through the [0.7.0 project](https://github.com/cloud-hypervisor/cloud-hypervisor/projects/7).\n\nHighlights for `cloud-hypervisor` version 0.7.0 include:\n\n### Block, Network, Persistent Memory (PMEM), VirtioFS and Vsock hotplug\n\nFurther to our effort to support modifying a running guest we now support\nhotplug and unplug of the following virtio backed devices: block, network,\npmem, virtio-fs and vsock. This functionality is available on the (default) PCI\nbased transport and is exposed through the HTTP API. The `ch-remote` utility\nprovides a CLI for adding or removing these device types after the VM has\nbooted. User can use the `id` parameter on the devices to choose names for\ndevices to ease their removal.\n\n### Alternative `libc` Support\n\nCloud Hypervisor can now be compiled with the `musl` C library and this release\ncontains a static binary compiled using that toolchain.\n\n### Multithreaded Multi Queued `vhost-user` Backends\n\nThe `vhost-user` backends for network and block support that are shipped by\nCloud Hypervisor have been enhanced to support multiple threads and queues to\nimprove throughput. These backends are used automatically if `vhost_user=true`\nis passed when the devices are created.\n\n### Initial RamFS Support\n\nBy passing the `--initramfs` command line option the user can specify a file to\nbe loaded into the guest memory to be used as the kernel initial filesystem.\nThis is usually used to allow the loading of drivers needed to be able to\naccess the real root filesystem but it can also be used standalone for a very\nminimal image.\n\n### Alternative Memory Hotplug: `virtio-mem`\n\nAs well as supporting ACPI based hotplug Cloud Hypervisor now supports using\nthe `virtio-mem` hotplug alternative. This can be controlled by the\n`hotplug_method` parameter on the `--memory` command line option. It currently\nrequires kernel patches to be able to support it.\n\n### `Seccomp` Sandboxing\n\nCloud Hypervisor now has support for restricting the system calls that the\nprocess can use via the `seccomp` security API. This on by default and is\ncontrolled by the `--seccomp` command line option.\n\n### Updated Distribution Support\n\nWith the release of Ubuntu 20.04 we have added that to the list of supported\ndistributions and is part of our regular testing programme.\n\n### Command Line and API Changes\n\nThis is non exhaustive list of HTTP API and command line changes\n\n* New `id` fields added for devices to allow them to be named to ease removal.\n  If no name is specified the VMM chooses one.\n* Use `--memory`'s `shared` and `hugepages` controls for determining backing\n  memory instead of providing a path.\n* The `--vsock` parameter only takes one device as the Linux kernel only\n  supports a single Vsock device. The REST API has removed the vector for this\n  option and replaced it with a single optional field.\n* There is enhanced validation of the command line and API provided\n  configurations to ensure that the provided options are compatible e.g. that\n  shared memory is in use if any attempt is made to used a `vhost-user` backed\n  device.\n* `ch-remote` has added `add-disk`, `add-fs`, `add-net`, `add-pmem` and\n  `add-vsock` subcommands. For removal `remove-device` is used. The REST API\n  has appropriate new HTTP endpoints too.\n* Specifying a `size` with `--pmem` is no longer required and instead the size\n  will be obtained from the file. A `discard_writes` option has also been added\n  to provide the equivalent of a read-only file.\n* The parameters to `--block-backend` have been changed to more closely align\n  with those used by `--disk`.\n\n### Contributors\n\nMany thanks to everyone who has contributed to our 0.7.0 release including some new faces.\n\n* Alejandro Jimenez <alejandro.j.jimenez@oracle.com>\n* Bo Chen <chen.bo@intel.com>\n* Cathy Zhang <cathy.zhang@intel.com>\n* Damjan Georgievski <gdamjan@gmail.com>\n* Dean Sheather <dean@coder.com>\n* Eryu Guan <eguan@linux.alibaba.com>\n* Hui Zhu <teawater@antfin.com>\n* Jose Carlos Venegas Munoz <jose.carlos.venegas.munoz@intel.com>\n* Martin Xu <martin.xu@intel.com>\n* Muminul Islam <muislam@microsoft.com>\n* Rob Bradford <robert.bradford@intel.com>\n* Samuel Ortiz <sameo@linux.intel.com>\n* Sebastien Boeuf <sebastien.boeuf@intel.com>\n* Sergio Lopez <slp@redhat.com>\n* Yang Zhong <yang.zhong@intel.com>\n* Yi Sun <yi.y.sun@linux.intel.com>\n\n# v0.6.0\n\nThis release has been tracked through the [0.6.0 project](https://github.com/cloud-hypervisor/cloud-hypervisor/projects/7).\n\nHighlights for `cloud-hypervisor` version 0.6.0 include:\n\n### Directly Assigned Devices Hotplug\n\nWe continued our efforts around supporting dynamically changing the guest\nresources. After adding support for CPU and memory hotplug, Cloud Hypervisor\nnow supports hot plugging and hot unplugging directly assigned (a.k.a. `VFIO`)\ndevices into an already running guest. This closes the features gap for\nproviding a complete Kata Containers workloads support with Cloud Hypervisor.\n\n### Shared Filesystem Improvements\n\nWe enhanced our shared filesystem support through many `virtio-fs` improvements.\nBy adding support for DAX, parallel processing of multiple requests, `FS_IO`,\n`LSEEK` and the `MMIO` virtio transport layer to our `vhost_user_fs` daemon, we\nimproved our filesystem sharing performance, but also made it more stable and\ncompatible with other `virtio-fs` implementations.\n\n### Block and Networking IO Self Offloading\n\nWhen choosing to offload the paravirtualized block and networking I/O to an\nexternal process (through the `vhost-user` protocol), Cloud Hypervisor now\nautomatically spawns its default `vhost-user-blk` and `vhost-user-net` backends\ninto their own, separate processes.\nThis provides a seamless paravirtualized I/O user experience for those who want\nto run their guest I/O into separate executions contexts.\n\n### Command Line Interface\n\nMore and more Cloud Hypervisor services are exposed through the\n[Rest API](vmm/src/api/openapi/cloud-hypervisor.yaml) and thus only\naccessible via relatively cumbersome HTTP calls. In order to abstract\nthose calls into a more user friendly tool, we created a Cloud Hypervisor\nCommand Line Interface (CLI) called `ch-remote`.  The `ch-remote` binary\nis created with each build and available e.g. at\n`cloud-hypervisor/target/debug/ch-remote` when doing a debug build.\n\nPlease check `ch-remote --help` for a complete description of all available\ncommands.\n\n### PVH Boot\n\nIn addition to the traditional Linux boot protocol, Cloud Hypervisor now\nsupports direct kernel booting through the [PVH ABI](https://xenbits.xen.org/docs/unstable/misc/pvh.html).\n\n### Contributors\n\nWith the 0.6.0 release, we are welcoming a few new contributors. Many thanks\nto them and to everyone that contributed to this release:\n\n* Alejandro Jimenez <alejandro.j.jimenez@oracle.com>\n* Arron Wang <arron.wang@intel.com>\n* Bin Liu <liubin0329@gmail.com>\n* Bo Chen <chen.bo@intel.com>\n* Cathy Zhang <cathy.zhang@intel.com>\n* Eryu Guan <eguan@linux.alibaba.com>\n* Jose Carlos Venegas Munoz <jose.carlos.venegas.munoz@intel.com>\n* Liu Bo <bo.liu@linux.alibaba.com>\n* Qiu Wenbo <qiuwenbo@phytium.com.cn>\n* Rob Bradford <robert.bradford@intel.com>\n* Samuel Ortiz <sameo@linux.intel.com>\n* Sebastien Boeuf <sebastien.boeuf@intel.com>\n* Sergio Lopez <slp@redhat.com>\n\n# v0.5.1\n\nThis is a bugfix release branched off v0.5.0. It contains the following fixes:\n\n* Update DiskConfig to contain missing disk control features (#790) - Samuel Ortiz and Sergio Lopez\n* Prevent memory overcommit via virtio-fs (#763) - Sebastien Boeuf\n* Fixed error reporting for resize command - Samuel Ortiz\n* Double reboot workaround (#783) - Rob Bradford\n* Various CI and development tooling fixes - Sebastien Boeuf, Samuel Ortiz, Rob Bradford\n\n# v0.5.0\n\nThis release has been tracked through the [0.5.0 project](https://github.com/cloud-hypervisor/cloud-hypervisor/projects/6).\n\nHighlights for `cloud-hypervisor` version 0.5.0 include:\n\n### Virtual Machine Dynamic Resizing\n\nWith 0.4.0 we added support for CPU hot plug, and 0.5.0 adds CPU hot unplug and\nmemory hot plug as well. This allows to dynamically resize Cloud Hypervisor\nguests which is needed for e.g. Kubernetes related use cases.\nThe memory hot plug implementation is based on the same framework as the CPU hot\nplug/unplug one, i.e. hardware-reduced ACPI notifications to the guest.\n\nNext on our VM resizing roadmap is the PCI devices hotplug feature.\n\n### Multi-Queue, Multi-Threaded Paravirtualization\n\nWe enhanced our virtio networking and block support by having both devices use\nmultiple I/O queues handled by multiple threads. This improves our default\nparavirtualized networking and block devices throughput.\n\n### New Interrupt Management Framework\n\nWe improved our interrupt management implementation by introducing an Interrupt\nManager framework, based on the currently on-going [rust-vmm vm-device](https://github.com/rust-vmm/vm-device)\ncrates discussions. This move made the code significantly cleaner, and allowed\nus to remove several KVM related dependencies from crates like the PCI and\nvirtio ones.\n\n### Development Tools\n\nIn order to provide a better developer experience, we worked on improving our\nbuild, development and testing tools.\nSomehow similar to the excellent\n[Firecracker's devtool](https://github.com/firecracker-microvm/firecracker/blob/master/tools/devtool),\nwe now provide a [dev_cli script](scripts/dev_cli.sh).\n\nWith this new tool, our users and contributors will be able to build and test\nCloud Hypervisor through a containerized environment.\n\n### Kata Containers Integration\n\nWe spent some significant time and efforts debugging and fixing our integration\nwith the [Kata Containers](https://github.com/kata-containers) project. Cloud\nHypervisor is now a fully supported Kata Containers hypervisor, and is\nintegrated into the project's CI.\n\n### Contributors\n\nMany thanks to everyone that contributed to the 0.5.0 release:\n\n* Bo Chen <chen.bo@intel.com>\n* Cathy Zhang <cathy.zhang@intel.com>\n* Qiu Wenbo <qiuwenbo@phytium.com.cn>\n* Rob Bradford <robert.bradford@intel.com>\n* Samuel Ortiz <sameo@linux.intel.com>\n* Sebastien Boeuf <sebastien.boeuf@intel.com>\n* Sergio Lopez <slp@redhat.com>\n* Yang Zhong <yang.zhong@intel.com>\n\n# v0.4.0\n\nThis release has been tracked through the [0.4.0 project](https://github.com/cloud-hypervisor/cloud-hypervisor/projects/4).\n\nHighlights for `cloud-hypervisor` version 0.4.0 include:\n\n### Dynamic virtual CPUs addition\n\nAs a way to vertically scale Cloud Hypervisor guests, we now support dynamically\nadding virtual CPUs to the guests, a mechanism also known as CPU hot plug.\nThrough hardware-reduced ACPI notifications, Cloud Hypervisor can now add CPUs\nto an already running guest and the high level operations for that process are\ndocumented [here](docs/hotplug.md)\n\nDuring the next release cycles we are planning to extend Cloud Hypervisor\nhot plug framework to other resources, namely PCI devices and memory.\n\n### Programmatic firmware tables generation\n\nAs part of the CPU hot plug feature enablement, and as a requirement for hot\nplugging other resources like devices or RAM, we added support for\nprogrammatically generating the needed ACPI tables. Through a dedicated\n`acpi-tables` crate, we now have a flexible and clean way of generating those\ntables based on the VMM device model and topology.\n\n### Filesystem and block devices vhost-user backends\n\nOur objective of running all Cloud Hypervisor paravirtualized I/O to a\nvhost-user based framework is getting closer as we've added Rust based\nimplementations for vhost-user-blk and virtiofs backends. Together with the\nvhost-user-net backend that came with the 0.3.0 release, this will form the\ndefault Cloud Hypervisor I/O architecture.\n\n### Guest pause and resume\n\nAs an initial requirement for enabling live migration, we added support for\npausing and resuming any VMM components. As an intermediate step towards live\nmigration, the upcoming guest snapshotting feature will be based on the pause\nand resume capabilities.\n\n### Userspace IOAPIC by default\n\nAs a way to simplify our device manager implementation, but also in order to\nstay away from privileged rings as often as possible, any device that relies on\npin based interrupts will be using the userspace IOAPIC implementation by\ndefault.\n\n### PCI BAR reprogramming\n\nIn order to allow for a more flexible device model, and also support guests\nthat would want to move PCI devices, we added support for PCI devices BAR\nreprogramming.\n\n### New `cloud-hypervisor` organization\n\nAs we wanted to be more flexible on how we manage the Cloud Hypervisor project,\nwe decided to move it under a [dedicated GitHub organization](https://github.com/cloud-hypervisor).\nTogether with the [cloud-hypervisor](https://github.com/cloud-hypervisor/cloud-hypervisor)\nproject, this new organization also now hosts our [kernel](https://github.com/cloud-hypervisor/linux)\nand [firmware](https://github.com/cloud-hypervisor/rust-hypervisor-firmware)\nrepositories. We may also use it to host any rust-vmm that we'd need to\ntemporarily fork.\nThanks to GitHub's seamless repository redirections, the move is completely\ntransparent to all Cloud Hypervisor contributors, users and followers.\n\n### Contributors\n\nMany thanks to everyone that contributed to the 0.4.0 release:\n\n* Cathy Zhang <cathy.zhang@intel.com>\n* Emin Ghuliev <drmint80@gmail.com>\n* Jose Carlos Venegas Munoz <jose.carlos.venegas.munoz@intel.com>\n* Qiu Wenbo <qiuwenbo@phytium.com.cn>\n* Rob Bradford <robert.bradford@intel.com>\n* Samuel Ortiz <sameo@linux.intel.com>\n* Sebastien Boeuf <sebastien.boeuf@intel.com>\n* Sergio Lopez <slp@redhat.com>\n* Wu Zongyong <wuzongyong@linux.alibaba.com>\n\n# v0.3.0\n\nThis release has been tracked through the [0.3.0 project](https://github.com/cloud-hypervisor/cloud-hypervisor/projects/3).\n\nHighlights for `cloud-hypervisor` version 0.3.0 include:\n\n### Block device offloading\n\nWe continue to work on offloading paravirtualized I/O to external processes,\nand we added support for\n[vhost-user-blk](https://access.redhat.com/solutions/3394851) backends.\nThis enables `cloud-hypervisor` users to plug a `vhost-user` based block device\nlike [SPDK](https://spdk.io)) into the VMM as their paravirtualized storage\nbackend.\n\n### Network device backend\n\nThe previous release provided support for\n[vhost-user-net](https://access.redhat.com/solutions/3394851) backends. Now we\nalso provide a TAP based vhost-user-net backend, implemented in Rust. Together\nwith the vhost-user-net device implementation, this will eventually become the\nCloud Hypervisor default paravirtualized networking architecture.\n\n### Virtual sockets\n\nIn order to more efficiently and securely communicate between host and guest,\nwe added an hybrid implementation of the\n[VSOCK](http://man7.org/linux/man-pages/man7/vsock.7.html) socket address\nfamily over virtio. Credits go to the\n[Firecracker](https://github.com/firecracker-microvm/firecracker/blob/master/docs/vsock.md)\nproject as our implementation is a copy of theirs.\n\n### HTTP based API\n\nIn anticipation of the need to support asynchronous operations to Cloud\nHypervisor guests (e.g. resources hotplug and guest migration), we added a HTTP\nbased API to the VMM. The API will be more extensively documented during the\nnext release cycle.\n\n### Memory mapped virtio transport\n\nIn order to support potential PCI-free use cases, we added support for the\n[virtio MMIO](https://docs.oasis-open.org/virtio/virtio/v1.1/cs01/virtio-v1.1-cs01.html#x1-1440002)\ntransport layer. This will allow us to support simple, minimal guest\nconfigurations that do not require a PCI bus emulation.\n\n### Paravirtualized IOMMU\n\nAs we want to improve our nested guests support, we added support for exposing\na [paravirtualized IOMMU](docs/iommu.md) device through virtio. This allows\nfor a safer nested virtio and directly assigned devices support.\n\nTo add the IOMMU support, we had to make some CLI changes for Cloud Hypervisor\nusers to be able to specify if devices had to be handled through this virtual\nIOMMU or not. In particular, the `--disk` option now expects disk paths to be\nprefixed with a `path=` string, and supports an optional `iommu=[on|off]`\nsetting.\n\n### Ubuntu 19.10\n\nWith the latest [hypervisor firmware](https://github.com/cloud-hypervisor/rust-hypervisor-firmware),\nwe can now support the latest\n[Ubuntu 19.10 (Eoan Ermine)](http://releases.ubuntu.com/19.10/) cloud images.\n\n### Large memory guests\n\nAfter simplifying and changing our guest address space handling, we can now\nsupport guests with large amount of memory (more than 64GB).\n\n# v0.2.0\n\nThis release has been tracked through the [0.2.0 project](https://github.com/cloud-hypervisor/cloud-hypervisor/projects/2).\n\nHighlights for `cloud-hypervisor` version 0.2.0 include:\n\n### Network device offloading\n\nAs part of our general effort to offload paravirtualized I/O to external\nprocesses, we added support for\n[vhost-user-net](https://access.redhat.com/solutions/3394851) backends. This\nenables `cloud-hypervisor` users to plug a `vhost-user` based networking device\n(e.g. [DPDK](https://dpdk.org)) into the VMM as their virtio network backend.\n\n### Minimal hardware-reduced ACPI\n\nIn order to properly implement and guest reset and shutdown, we implemented\na minimal version of the hardware-reduced ACPI specification. Together with\na tiny I/O port based ACPI device, this allows `cloud-hypervisor` guests to\ncleanly reboot and shutdown.\n\nThe ACPI implementation is a `cloud-hypervisor` build time option that is\nenabled by default.\n\n### Debug I/O port\n\nBased on the Firecracker idea of using a dedicated I/O port to measure guest\nboot times, we added support for logging guest events through the\n[0x80](https://www.intel.com/content/www/us/en/support/articles/000005500/boards-and-kits.html)\nPC debug port. This allows, among other things, for granular guest boot time\nmeasurements. See our [debug port documentation](docs/debug-port.md) for more\ndetails.\n\n### Improved direct device assignment\n\nWe fixed a major performance issue with our initial VFIO implementation: When\nenabling VT-d through the KVM and VFIO APIs, our guest memory writes and reads\nwere (in many cases) not cached. After correctly tagging the guest memory from\n`cloud-hypervisor` we're now able to reach the expected performance from\ndirectly assigned devices.\n\n### Improved shared filesystem\n\nWe added shared memory region with [DAX](https://www.kernel.org/doc/Documentation/filesystems/dax.txt)\nsupport to our [virtio-fs](https://virtio-fs.gitlab.io/) shared file system.\nThis provides better shared filesystem IO performance with a smaller guest\nmemory footprint.\n\n### Ubuntu bionic based CI\n\nThanks to our [simple KVM firmware](https://github.com/cloud-hypervisor/rust-hypervisor-firmware)\nimprovements, we are now able to boot Ubuntu bionic images. We added those to\nour CI pipeline.\n\n# v0.1.0\n\nThis release has been tracked through the [0.1.0 project](https://github.com/cloud-hypervisor/cloud-hypervisor/projects/1).\n\nHighlights for `cloud-hypervisor` version 0.1.0 include:\n\n### Shared filesystem\n\nWe added support for the [virtio-fs](https://virtio-fs.gitlab.io/) shared file\nsystem, allowing for an efficient and reliable way of sharing a filesystem\nbetween the host and the `cloud-hypervisor` guest.\n\nSee our [filesystem sharing](docs/fs.md) documentation for more details on how\nto use virtio-fs with `cloud-hypervisor`.\n\n### Initial direct device assignment support\n\nVFIO (Virtual Function I/O) is a kernel framework that exposes direct device\naccess to userspace. `cloud-hypervisor` uses VFIO to directly assign host\nphysical devices into its guest.\n\nSee our [VFIO](docs/vfio.md) documentation for more detail on how to directly\nassign host devices to `cloud-hypervisor` guests.\n\n### Userspace IOAPIC\n\n`cloud-hypervisor` supports a so-called split IRQ chip implementation by\nimplementing support for the [IOAPIC](https://wiki.osdev.org/IOAPIC).\nBy moving part of the IRQ chip implementation from kernel space to user space,\nthe IRQ chip emulation does not always run in a fully privileged mode.\n\n### Virtual persistent memory\n\nThe `virtio-pmem` implementation emulates a virtual persistent memory device\nthat `cloud-hypervisor` can e.g. boot from. Booting from a `virtio-pmem` device\nallows to bypass the guest page cache and improve the guest memory footprint.\n\n### Linux kernel bzImage\n\nThe `cloud-hypervisor` linux kernel loader now supports direct kernel boot from\n`bzImage` kernel images, which is usually the format that Linux distributions\nuse to ship their kernels. For example, this allows for booting from the host\ndistribution kernel image.\n\n### Console over virtio\n\n`cloud-hypervisor` now exposes a `virtio-console` device to the guest. Although\nusing this device as a guest console can potentially cut some early boot\nmessages, it can reduce the guest boot time and provides a complete console\nimplementation.\n\nThe `virtio-console` device is enabled by default for the guest console.\nSwitching back to the legacy serial port is done by selecting\n`--serial tty --console off` from the command line.\n\n### Unit testing\n\nWe now run all unit tests from all our crates directly from our CI.\n\n### Integration tests parallelization\n\nThe CI cycle run time has been significantly reduced by refactoring our\nintegration tests; allowing them to all be run in parallel.\n"
        },
        {
          "name": "resources",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "serial_buffer",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test_data",
          "type": "tree",
          "content": null
        },
        {
          "name": "test_infra",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tpm",
          "type": "tree",
          "content": null
        },
        {
          "name": "tracer",
          "type": "tree",
          "content": null
        },
        {
          "name": "vhost_user_block",
          "type": "tree",
          "content": null
        },
        {
          "name": "vhost_user_net",
          "type": "tree",
          "content": null
        },
        {
          "name": "virtio-devices",
          "type": "tree",
          "content": null
        },
        {
          "name": "vm-allocator",
          "type": "tree",
          "content": null
        },
        {
          "name": "vm-device",
          "type": "tree",
          "content": null
        },
        {
          "name": "vm-migration",
          "type": "tree",
          "content": null
        },
        {
          "name": "vm-virtio",
          "type": "tree",
          "content": null
        },
        {
          "name": "vmm",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}