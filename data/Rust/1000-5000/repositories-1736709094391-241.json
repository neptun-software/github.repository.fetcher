{
  "metadata": {
    "timestamp": 1736709094391,
    "page": 241,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "apache/datafusion-sqlparser-rs",
      "stars": 2877,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".asf.yaml",
          "type": "blob",
          "size": 1.2685546875,
          "content": "# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n\n# This file controls the settings of this repository\n#\n# See more details at\n# https://cwiki.apache.org/confluence/display/INFRA/Git+-+.asf.yaml+features\n\nnotifications:\n  commits: commits@datafusion.apache.org\n  issues: github@datafusion.apache.org\n  pullrequests: github@datafusion.apache.org\ngithub:\n  description: \"Extensible SQL Lexer and Parser for Rust\"\n  labels:\n    - big-data\n    - rust\n    - sql\n  enabled_merge_buttons:\n    squash: true\n    merge: false\n    rebase: false\n  features:\n    issues: true\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.38671875,
          "content": "# Generated by Cargo\n# will have compiled files and executables\n/target/\n/sqlparser_bench/target/\n/derive/target/\ndev/dist\n\n# Remove Cargo.lock from gitignore if creating an executable, leave it for libraries\n# More information here http://doc.crates.io/guide.html#cargotoml-vs-cargolock\nCargo.lock\n\n# These are backup files generated by rustfmt\n**/*.rs.bk\n\n# IDEs\n.idea\n.vscode\n\n*.swp\n\n.DS_store"
        },
        {
          "name": ".tool-versions",
          "type": "blob",
          "size": 0.0107421875,
          "content": "rust 1.75.0"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 1.306640625,
          "content": "<!---\n  Licensed to the Apache Software Foundation (ASF) under one\n  or more contributor license agreements.  See the NOTICE file\n  distributed with this work for additional information\n  regarding copyright ownership.  The ASF licenses this file\n  to you under the Apache License, Version 2.0 (the\n  \"License\"); you may not use this file except in compliance\n  with the License.  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing,\n  software distributed under the License is distributed on an\n  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n  KIND, either express or implied.  See the License for the\n  specific language governing permissions and limitations\n  under the License.\n-->\n\n# Changelog\nAll notable changes to this project will be documented in this file.\n\nThis project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\nGiven that the parser produces a typed AST, any changes to the AST will\ntechnically be breaking and thus will result in a `0.(N+1)` version. \n\n\n- Unreleased: Check https://github.com/sqlparser-rs/sqlparser-rs/commits/main for undocumented changes.\n- `0.52.0`: [changelog/0.52.0.md](changelog/0.52.0.md)\n- `0.51.0` and earlier: [changelog/0.51.0-pre.md](changelog/0.51.0-pre.md)\n"
        },
        {
          "name": "Cargo.toml",
          "type": "blob",
          "size": 2.1953125,
          "content": "# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n\n[package]\nname = \"sqlparser\"\ndescription = \"Extensible SQL Lexer and Parser with support for ANSI SQL:2011\"\nversion = \"0.53.0\"\nauthors = [\"Apache DataFusion <dev@datafusion.apache.org>\"]\nhomepage = \"https://github.com/apache/datafusion-sqlparser-rs\"\ndocumentation = \"https://docs.rs/sqlparser/\"\nkeywords = [\"ansi\", \"sql\", \"lexer\", \"parser\"]\nrepository = \"https://github.com/apache/datafusion-sqlparser-rs\"\nlicense = \"Apache-2.0\"\ninclude = [\n    \"src/**/*.rs\",\n    \"Cargo.toml\",\n    \"LICENSE.TXT\",\n]\nedition = \"2021\"\n\n[lib]\nname = \"sqlparser\"\npath = \"src/lib.rs\"\n\n[features]\ndefault = [\"std\", \"recursive-protection\"]\nstd = []\nrecursive-protection = [\"std\", \"recursive\"]\n# Enable JSON output in the `cli` example:\njson_example = [\"serde_json\", \"serde\"]\nvisitor = [\"sqlparser_derive\"]\n\n[dependencies]\nbigdecimal = { version = \"0.4.1\", features = [\"serde\"], optional = true }\nlog = \"0.4\"\nrecursive = { version = \"0.1.1\", optional = true}\n\nserde = { version = \"1.0\", features = [\"derive\"], optional = true }\n# serde_json is only used in examples/cli, but we have to put it outside\n# of dev-dependencies because of\n# https://github.com/rust-lang/cargo/issues/1596\nserde_json = { version = \"1.0\", optional = true }\nsqlparser_derive = { version = \"0.3.0\", path = \"derive\", optional = true }\n\n[dev-dependencies]\nsimple_logger = \"5.0\"\nmatches = \"0.1\"\npretty_assertions = \"1\"\n\n[package.metadata.docs.rs]\n# Document these features on docs.rs\nfeatures = [\"serde\", \"visitor\"]\n"
        },
        {
          "name": "HEADER",
          "type": "blob",
          "size": 0.78125,
          "content": "// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License."
        },
        {
          "name": "LICENSE.TXT",
          "type": "blob",
          "size": 10.5927734375,
          "content": "                              Apache License\n                        Version 2.0, January 2004\n                     http://www.apache.org/licenses/\n\nTERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n1. Definitions.\n\n   \"License\" shall mean the terms and conditions for use, reproduction,\n   and distribution as defined by Sections 1 through 9 of this document.\n\n   \"Licensor\" shall mean the copyright owner or entity authorized by\n   the copyright owner that is granting the License.\n\n   \"Legal Entity\" shall mean the union of the acting entity and all\n   other entities that control, are controlled by, or are under common\n   control with that entity. For the purposes of this definition,\n   \"control\" means (i) the power, direct or indirect, to cause the\n   direction or management of such entity, whether by contract or\n   otherwise, or (ii) ownership of fifty percent (50%) or more of the\n   outstanding shares, or (iii) beneficial ownership of such entity.\n\n   \"You\" (or \"Your\") shall mean an individual or Legal Entity\n   exercising permissions granted by this License.\n\n   \"Source\" form shall mean the preferred form for making modifications,\n   including but not limited to software source code, documentation\n   source, and configuration files.\n\n   \"Object\" form shall mean any form resulting from mechanical\n   transformation or translation of a Source form, including but\n   not limited to compiled object code, generated documentation,\n   and conversions to other media types.\n\n   \"Work\" shall mean the work of authorship, whether in Source or\n   Object form, made available under the License, as indicated by a\n   copyright notice that is included in or attached to the work\n   (an example is provided in the Appendix below).\n\n   \"Derivative Works\" shall mean any work, whether in Source or Object\n   form, that is based on (or derived from) the Work and for which the\n   editorial revisions, annotations, elaborations, or other modifications\n   represent, as a whole, an original work of authorship. For the purposes\n   of this License, Derivative Works shall not include works that remain\n   separable from, or merely link (or bind by name) to the interfaces of,\n   the Work and Derivative Works thereof.\n\n   \"Contribution\" shall mean any work of authorship, including\n   the original version of the Work and any modifications or additions\n   to that Work or Derivative Works thereof, that is intentionally\n   submitted to Licensor for inclusion in the Work by the copyright owner\n   or by an individual or Legal Entity authorized to submit on behalf of\n   the copyright owner. For the purposes of this definition, \"submitted\"\n   means any form of electronic, verbal, or written communication sent\n   to the Licensor or its representatives, including but not limited to\n   communication on electronic mailing lists, source code control systems,\n   and issue tracking systems that are managed by, or on behalf of, the\n   Licensor for the purpose of discussing and improving the Work, but\n   excluding communication that is conspicuously marked or otherwise\n   designated in writing by the copyright owner as \"Not a Contribution.\"\n\n   \"Contributor\" shall mean Licensor and any individual or Legal Entity\n   on behalf of whom a Contribution has been received by Licensor and\n   subsequently incorporated within the Work.\n\n2. Grant of Copyright License. Subject to the terms and conditions of\n   this License, each Contributor hereby grants to You a perpetual,\n   worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n   copyright license to reproduce, prepare Derivative Works of,\n   publicly display, publicly perform, sublicense, and distribute the\n   Work and such Derivative Works in Source or Object form.\n\n3. Grant of Patent License. Subject to the terms and conditions of\n   this License, each Contributor hereby grants to You a perpetual,\n   worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n   (except as stated in this section) patent license to make, have made,\n   use, offer to sell, sell, import, and otherwise transfer the Work,\n   where such license applies only to those patent claims licensable\n   by such Contributor that are necessarily infringed by their\n   Contribution(s) alone or by combination of their Contribution(s)\n   with the Work to which such Contribution(s) was submitted. If You\n   institute patent litigation against any entity (including a\n   cross-claim or counterclaim in a lawsuit) alleging that the Work\n   or a Contribution incorporated within the Work constitutes direct\n   or contributory patent infringement, then any patent licenses\n   granted to You under this License for that Work shall terminate\n   as of the date such litigation is filed.\n\n4. Redistribution. You may reproduce and distribute copies of the\n   Work or Derivative Works thereof in any medium, with or without\n   modifications, and in Source or Object form, provided that You\n   meet the following conditions:\n\n   (a) You must give any other recipients of the Work or\n       Derivative Works a copy of this License; and\n\n   (b) You must cause any modified files to carry prominent notices\n       stating that You changed the files; and\n\n   (c) You must retain, in the Source form of any Derivative Works\n       that You distribute, all copyright, patent, trademark, and\n       attribution notices from the Source form of the Work,\n       excluding those notices that do not pertain to any part of\n       the Derivative Works; and\n\n   (d) If the Work includes a \"NOTICE\" text file as part of its\n       distribution, then any Derivative Works that You distribute must\n       include a readable copy of the attribution notices contained\n       within such NOTICE file, excluding those notices that do not\n       pertain to any part of the Derivative Works, in at least one\n       of the following places: within a NOTICE text file distributed\n       as part of the Derivative Works; within the Source form or\n       documentation, if provided along with the Derivative Works; or,\n       within a display generated by the Derivative Works, if and\n       wherever such third-party notices normally appear. The contents\n       of the NOTICE file are for informational purposes only and\n       do not modify the License. You may add Your own attribution\n       notices within Derivative Works that You distribute, alongside\n       or as an addendum to the NOTICE text from the Work, provided\n       that such additional attribution notices cannot be construed\n       as modifying the License.\n\n   You may add Your own copyright statement to Your modifications and\n   may provide additional or different license terms and conditions\n   for use, reproduction, or distribution of Your modifications, or\n   for any such Derivative Works as a whole, provided Your use,\n   reproduction, and distribution of the Work otherwise complies with\n   the conditions stated in this License.\n\n5. Submission of Contributions. Unless You explicitly state otherwise,\n   any Contribution intentionally submitted for inclusion in the Work\n   by You to the Licensor shall be under the terms and conditions of\n   this License, without any additional terms or conditions.\n   Notwithstanding the above, nothing herein shall supersede or modify\n   the terms of any separate license agreement you may have executed\n   with Licensor regarding such Contributions.\n\n6. Trademarks. This License does not grant permission to use the trade\n   names, trademarks, service marks, or product names of the Licensor,\n   except as required for reasonable and customary use in describing the\n   origin of the Work and reproducing the content of the NOTICE file.\n\n7. Disclaimer of Warranty. Unless required by applicable law or\n   agreed to in writing, Licensor provides the Work (and each\n   Contributor provides its Contributions) on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n   implied, including, without limitation, any warranties or conditions\n   of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n   PARTICULAR PURPOSE. You are solely responsible for determining the\n   appropriateness of using or redistributing the Work and assume any\n   risks associated with Your exercise of permissions under this License.\n\n8. Limitation of Liability. In no event and under no legal theory,\n   whether in tort (including negligence), contract, or otherwise,\n   unless required by applicable law (such as deliberate and grossly\n   negligent acts) or agreed to in writing, shall any Contributor be\n   liable to You for damages, including any direct, indirect, special,\n   incidental, or consequential damages of any character arising as a\n   result of this License or out of the use or inability to use the\n   Work (including but not limited to damages for loss of goodwill,\n   work stoppage, computer failure or malfunction, or any and all\n   other commercial damages or losses), even if such Contributor\n   has been advised of the possibility of such damages.\n\n9. Accepting Warranty or Additional Liability. While redistributing\n   the Work or Derivative Works thereof, You may choose to offer,\n   and charge a fee for, acceptance of support, warranty, indemnity,\n   or other liability obligations and/or rights consistent with this\n   License. However, in accepting such obligations, You may act only\n   on Your own behalf and on Your sole responsibility, not on behalf\n   of any other Contributor, and only if You agree to indemnify,\n   defend, and hold each Contributor harmless for any liability\n   incurred by, or claims asserted against, such Contributor by reason\n   of your accepting any such warranty or additional liability.\n\nEND OF TERMS AND CONDITIONS\n\nAPPENDIX: How to apply the Apache License to your work.\n\n   To apply the Apache License to your work, attach the following\n   boilerplate notice, with the fields enclosed by brackets \"[]\"\n   replaced with your own identifying information. (Don't include\n   the brackets!)  The text should be enclosed in the appropriate\n   comment syntax for the file format. We also recommend that a\n   file or class name and description of purpose be included on the\n   same \"printed page\" as the copyright notice for easier\n   identification within third-party archives.\n\nCopyright [yyyy] [name of copyright owner]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n\thttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 11.919921875,
          "content": "<!---\n  Licensed to the Apache Software Foundation (ASF) under one\n  or more contributor license agreements.  See the NOTICE file\n  distributed with this work for additional information\n  regarding copyright ownership.  The ASF licenses this file\n  to you under the Apache License, Version 2.0 (the\n  \"License\"); you may not use this file except in compliance\n  with the License.  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing,\n  software distributed under the License is distributed on an\n  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n  KIND, either express or implied.  See the License for the\n  specific language governing permissions and limitations\n  under the License.\n-->\n\n# Extensible SQL Lexer and Parser for Rust\n\n[![License](https://img.shields.io/badge/License-Apache%202.0-blue.svg)](https://opensource.org/licenses/Apache-2.0)\n[![Version](https://img.shields.io/crates/v/sqlparser.svg)](https://crates.io/crates/sqlparser)\n[![Build Status](https://github.com/sqlparser-rs/sqlparser-rs/workflows/Rust/badge.svg?branch=main)](https://github.com/sqlparser-rs/sqlparser-rs/actions?query=workflow%3ARust+branch%3Amain)\n[![Coverage Status](https://coveralls.io/repos/github/sqlparser-rs/sqlparser-rs/badge.svg?branch=main)](https://coveralls.io/github/sqlparser-rs/sqlparser-rs?branch=main)\n[![Gitter Chat](https://badges.gitter.im/sqlparser-rs/community.svg)](https://gitter.im/sqlparser-rs/community?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\nThis crate contains a lexer and parser for SQL that conforms with the\n[ANSI/ISO SQL standard][sql-standard] and other dialects. This crate\nis used as a foundation for SQL query engines, vendor-specific\nparsers, and various SQL analysis.\n\n## Example\n\nTo parse a simple `SELECT` statement:\n\n```rust\nuse sqlparser::dialect::GenericDialect;\nuse sqlparser::parser::Parser;\n\nlet sql = \"SELECT a, b, 123, myfunc(b) \\\n           FROM table_1 \\\n           WHERE a > b AND b < 100 \\\n           ORDER BY a DESC, b\";\n\nlet dialect = GenericDialect {}; // or AnsiDialect, or your own dialect ...\n\nlet ast = Parser::parse_sql(&dialect, sql).unwrap();\n\nprintln!(\"AST: {:?}\", ast);\n```\n\nThis outputs\n\n```rust\nAST: [Query(Query { ctes: [], body: Select(Select { distinct: false, projection: [UnnamedExpr(Identifier(\"a\")), UnnamedExpr(Identifier(\"b\")), UnnamedExpr(Value(Long(123))), UnnamedExpr(Function(Function { name: ObjectName([\"myfunc\"]), args: [Identifier(\"b\")], filter: None, over: None, distinct: false }))], from: [TableWithJoins { relation: Table { name: ObjectName([\"table_1\"]), alias: None, args: [], with_hints: [] }, joins: [] }], selection: Some(BinaryOp { left: BinaryOp { left: Identifier(\"a\"), op: Gt, right: Identifier(\"b\") }, op: And, right: BinaryOp { left: Identifier(\"b\"), op: Lt, right: Value(Long(100)) } }), group_by: [], having: None }), order_by: [OrderByExpr { expr: Identifier(\"a\"), asc: Some(false) }, OrderByExpr { expr: Identifier(\"b\"), asc: None }], limit: None, offset: None, fetch: None })]\n```\n\n\n## Features\n\nThe following optional [crate  features](https://doc.rust-lang.org/cargo/reference/features.html) are available:\n\n* `serde`: Adds [Serde](https://serde.rs/) support by implementing  `Serialize` and `Deserialize` for all AST nodes.\n* `visitor`: Adds a `Visitor` capable of recursively walking the AST tree.\n* `recursive-protection` (enabled by default), uses [recursive](https://docs.rs/recursive/latest/recursive/) for stack overflow protection. \n\n## Syntax vs Semantics\n\nThis crate provides only a syntax parser, and tries to avoid applying\nany SQL semantics, and accepts queries that specific databases would\nreject, even when using that Database's specific `Dialect`. For\nexample, `CREATE TABLE(x int, x int)` is accepted by this crate, even\nthough most SQL engines will reject this statement due to the repeated\ncolumn name `x`.\n\nThis crate avoids semantic analysis because it varies drastically\nbetween dialects and implementations. If you want to do semantic\nanalysis, feel free to use this project as a base.\n\n## Preserves Syntax Round Trip \n\nThis crate allows users to recover the original SQL text (with comments removed,\nnormalized whitespace and keyword capitalization), which is useful for tools\nthat analyze and manipulate SQL.\n\nThis means that other than comments, whitespace and the capitalization of\nkeywords, the following should hold true for all SQL:\n\n```rust\n// Parse SQL\nlet ast = Parser::parse_sql(&GenericDialect, sql).unwrap();\n\n// The original SQL text can be generated from the AST\nassert_eq!(ast[0].to_string(), sql);\n```\n\nThere are still some cases in this crate where different SQL with seemingly\nsimilar semantics are represented with the same AST. We welcome PRs to fix such\nissues and distinguish different syntaxes in the AST.\n\n\n## Source Locations (Work in Progress)\n\nThis crate allows recovering source locations from AST nodes via the [Spanned]\ntrait, which can be used for advanced diagnostics tooling. Note that this\nfeature is a work in progress and many nodes report missing or inaccurate spans.\nPlease see [this ticket] for information on how to contribute missing\nimprovements.\n\n[Spanned]: https://docs.rs/sqlparser/latest/sqlparser/ast/trait.Spanned.html\n[this ticket]: https://github.com/apache/datafusion-sqlparser-rs/issues/1548\n\n```rust\n// Parse SQL\nlet ast = Parser::parse_sql(&GenericDialect, \"SELECT A FROM B\").unwrap();\n\n// The source span can be retrieved with start and end locations\nassert_eq!(ast[0].span(), Span {\n  start: Location::of(1, 1),\n  end: Location::of(1, 16),\n});\n```\n\n## SQL compliance\n\nSQL was first standardized in 1987, and revisions of the standard have been\npublished regularly since. Most revisions have added significant new features to\nthe language, and as a result no database claims to support the full breadth of\nfeatures. This parser currently supports most of the SQL-92 syntax, plus some\nsyntax from newer versions that have been explicitly requested, plus various\nother dialect-specific syntax. Whenever possible, the [online SQL:2016\ngrammar][sql-2016-grammar] is used to guide what syntax to accept.\n\nUnfortunately, stating anything more specific about compliance is difficult.\nThere is no publicly available test suite that can assess compliance\nautomatically, and doing so manually would strain the project's limited\nresources. Still, we are interested in eventually supporting the full SQL\ndialect, and we are slowly building out our own test suite.\n\nIf you are assessing whether this project will be suitable for your needs,\nyou'll likely need to experimentally verify whether it supports the subset of\nSQL that you need. Please file issues about any unsupported queries that you\ndiscover. Doing so helps us prioritize support for the portions of the standard\nthat are actually used. Note that if you urgently need support for a feature,\nyou will likely need to write the implementation yourself. See the\n[Contributing](#Contributing) section for details.\n\n## Command line\n\nThis crate contains a CLI program that can parse a file and dump the results as JSON:\n```\n$ cargo run --features json_example --example cli FILENAME.sql [--dialectname]\n```\n\n## Users\n\nThis parser is currently being used by the [DataFusion] query engine, [LocustDB],\n[Ballista], [GlueSQL], [Opteryx], [Polars], [PRQL], [Qrlew], [JumpWire], and [ParadeDB].\n\nIf your project is using sqlparser-rs feel free to make a PR to add it\nto this list.\n\n## Design\n\nThe core expression parser uses the [Pratt Parser] design, which is a top-down\noperator-precedence (TDOP) parser, while the surrounding SQL statement parser is\na traditional, hand-written recursive descent parser. Eli Bendersky has a good\n[tutorial on TDOP parsers][tdop-tutorial], if you are interested in learning\nmore about the technique.\n\nWe are a fan of this design pattern over parser generators for the following\nreasons:\n\n- Code is simple to write and can be concise and elegant\n- Performance is generally better than code generated by parser generators\n- Debugging is much easier with hand-written code\n- It is far easier to extend and make dialect-specific extensions\n  compared to using a parser generator\n\n### Supporting custom SQL dialects\n\nThis is a work in progress, but we have some notes on [writing a custom SQL\nparser](docs/custom_sql_parser.md).\n\n## Contributing\n\nContributions are highly encouraged! However, the bandwidth we have to\nmaintain this crate is limited. Please read the following sections carefully.\n\n### New Syntax\n\nThe most commonly accepted PRs add support for or fix a bug in a feature in the\nSQL standard, or a popular RDBMS, such as Microsoft SQL\nServer or PostgreSQL, will likely be accepted after a brief\nreview.  Any SQL feature that is dialect specific should be parsed by *both* the relevant [`Dialect`] \nas well as [`GenericDialect`].\n\n### Major API Changes\n\nThe current maintainers do not plan for any substantial changes to\nthis crate's API. PRs proposing major refactors\nare not likely to be accepted.\n\n### Testing\n\nWhile we hope to review PRs in a reasonably\ntimely fashion, it may take a week or more. In order to speed the process,\nplease make sure the PR passes all CI checks, and includes tests\ndemonstrating your code works as intended (and to avoid\nregressions). Remember to also test error paths.\n\nPRs without tests will not be reviewed or merged.  Since the CI\nensures that `cargo test`, `cargo fmt`, and `cargo clippy`, pass you\nshould likely to run all three commands locally before submitting\nyour PR.\n\n### Filing Issues\n\nIf you are unable to submit a patch, feel free to file an issue instead. Please\ntry to include:\n\n  * some representative examples of the syntax you wish to support or fix;\n  * the relevant bits of the [SQL grammar][sql-2016-grammar], if the syntax is\n    part of SQL:2016; and\n  * links to documentation for the feature for a few of the most popular\n    databases that support it.\n\nUnfortunately, if you need support for a feature, you will likely need to implement\nit yourself, or file a well enough described ticket that another member of the community can do so.\nOur goal as maintainers is to facilitate the integration\nof various features from various contributors, but not to provide the\nimplementations ourselves, as we simply don't have the resources.\n\n### Benchmarking\n\nThere are several micro benchmarks in the `sqlparser_bench` directory. \nYou can run them with:\n\n```\ngit checkout main\ncd sqlparser_bench\ncargo bench -- --save-baseline main\ngit checkout <your branch>\ncargo bench -- --baseline main\n```\n\nBy adding the `--save-baseline main` and `--baseline main` you can track the\nprogress of your improvements as you continue working on the feature branch.\n\n## Licensing\n\nAll code in this repository is licensed under the [Apache Software License 2.0](LICENSE.txt).\n\nUnless you explicitly state otherwise, any contribution intentionally submitted\nfor inclusion in the work by you, as defined in the Apache-2.0 license, shall be\nlicensed as above, without any additional terms or conditions.\n\n\n[tdop-tutorial]: https://eli.thegreenplace.net/2010/01/02/top-down-operator-precedence-parsing\n[`cargo fmt`]: https://github.com/rust-lang/rustfmt#on-the-stable-toolchain\n[current issues]: https://github.com/sqlparser-rs/sqlparser-rs/issues\n[DataFusion]: https://github.com/apache/arrow-datafusion\n[LocustDB]: https://github.com/cswinter/LocustDB\n[Ballista]: https://github.com/apache/arrow-ballista\n[GlueSQL]: https://github.com/gluesql/gluesql\n[Opteryx]: https://github.com/mabel-dev/opteryx\n[Polars]: https://pola.rs/\n[PRQL]: https://github.com/PRQL/prql\n[Qrlew]: https://github.com/Qrlew/qrlew\n[JumpWire]: https://github.com/extragoodlabs/jumpwire\n[ParadeDB]: https://github.com/paradedb/paradedb\n[Pratt Parser]: https://tdop.github.io/\n[sql-2016-grammar]: https://jakewheat.github.io/sql-overview/sql-2016-foundation-grammar.html\n[sql-standard]: https://en.wikipedia.org/wiki/ISO/IEC_9075\n[`Dialect`]: https://docs.rs/sqlparser/latest/sqlparser/dialect/trait.Dialect.html\n[`GenericDialect`]: https://docs.rs/sqlparser/latest/sqlparser/dialect/struct.GenericDialect.html\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.8798828125,
          "content": "<!---\n  Licensed to the Apache Software Foundation (ASF) under one\n  or more contributor license agreements.  See the NOTICE file\n  distributed with this work for additional information\n  regarding copyright ownership.  The ASF licenses this file\n  to you under the Apache License, Version 2.0 (the\n  \"License\"); you may not use this file except in compliance\n  with the License.  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing,\n  software distributed under the License is distributed on an\n  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n  KIND, either express or implied.  See the License for the\n  specific language governing permissions and limitations\n  under the License.\n-->\n\n# Security Policy\n\n## Reporting a Vulnerability\n\nPlease report security issues to `andrew@nerdnetworks.org`"
        },
        {
          "name": "changelog",
          "type": "tree",
          "content": null
        },
        {
          "name": "derive",
          "type": "tree",
          "content": null
        },
        {
          "name": "dev",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "fuzz",
          "type": "tree",
          "content": null
        },
        {
          "name": "rustfmt.toml",
          "type": "blob",
          "size": 0.8271484375,
          "content": "# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n\n# We use rustfmt's default settings to format the source code"
        },
        {
          "name": "sqlparser_bench",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}