{
  "metadata": {
    "timestamp": 1736709073976,
    "page": 204,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "shssoichiro/oxipng",
      "stars": 3050,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".cargo",
          "type": "tree",
          "content": null
        },
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.0517578125,
          "content": "scripts\n.github\n.editorconfig\n.pre-commit-hooks.yaml\n"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.1513671875,
          "content": "root = true\n\n[*]\ncharset = utf-8\nend_of_line = lf\nindent_style = space\ninsert_final_newline = true\ntrim_trailing_whitespace = true\n\n[*.rs]\nindent_size = 4\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.0419921875,
          "content": "# Enforce Unix newlines\n* text=auto eol=lf\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0517578125,
          "content": "target\n*.bk\n.DS_Store\n*.out.png\n/.idea\n/node_modules\n"
        },
        {
          "name": ".pre-commit-hooks.yaml",
          "type": "blob",
          "size": 0.1708984375,
          "content": "-   id: oxipng\n    name: oxipng\n    description: 'Multithreaded PNG optimizer written in Rust.'\n    entry: oxipng\n    language: rust\n    types: [png]\n    require_serial: true\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 22.84375,
          "content": "## Version 9.1.3\n\n- [Feature] Add `--zi` option to control the number of Zopfli iterations.\n- [Improvement] Allow setting compression level to 0.\n- [Performance] Improve filtering performance for some images.\n- [Build] Move man page generation to an xtask.\n\n## Version 9.1.2\n\n- [Bugfix] Fix `--nx` still applying deinterlacing by default.\n- [Bugfix] Fix wildcard matching being case-sensitive on Windows.\n- [Bugfix] Fix optimized APNGs not being compatible with some programs.\n- [Build] Fix feature `sanity-checks` not working without `parallel`.\n- [Misc] Resolve ambiguity between optional dependencies and crate features.\n\n## Version 9.1.1\n\n- [Build] Change man page generation path to resolve issue with cargo publish.\n\n## Version 9.1.0\n\n- [Improvement] Add `--keep display` equivalent to `--strip safe`.\n- [Improvement] Add modified zeng palette sorting method, improving optimization of indexed images.\n- [Improvement] If only one filter is specified, guarantee to only use this one.\n- [Improvement] Evaluate low-depth indexed even if low-depth grayscale was already achieved.\n- [Bugfix] Fix battiato palette sorting method not being used if the input was not already indexed.\n- [Bugfix] Fix rare crash caused by a truncated palette.\n- [Build] Reduce size of binaries.\n- [Build] Add man page generation.\n- [Build] Publish deb archives for Linux.\n- [Misc] Bump minimum Rust version to 1.74.0.\n\n## Version 9.0.0\n\n- [Breaking] Remove `--backup` option. Use `--out` or `--dir` to preserve existing files.\n- [Breaking] Remove `--check` option. Use `--nx --nz` to perform a non-optimizing run.\n- [Breaking] API: Replace `pretend` option with `OutFile::None`.\n- [Breaking] API: Move `preserve_attrs` into `OutFile::Path`.\n- [Breaking] Default to removing interlacing. Use `-i keep` to retain existing interlacing.\n- [Feature] Add Raw API for creating optimised PNGs from raw image data.\n- [Feature] Add basic support for APNG files.\n- [Feature] Add `--scale16` option to forcibly reduce 16-bit images to 8-bit.\n- [Improvement] Process multiple files in parallel.\n- [Improvement] Improve reductions, particularly for indexed or very small images.\n- [Improvement] Improve compression with latest version of libdeflate.\n- [Improvement] Recompress iCCP chunks.\n- [Improvement] Change recursive mode to only process .png/.apng files.\n- [Improvement] Add support for glob patterns in quotes on Windows.\n- [Improvement] Quieter default output logging, with multiple levels of verbosity.\n- [Bugfix] Fix deadlock when using oxipng within an existing Rayon thread pool.\n- [Bugfix] Fix early abort in recursive mode when a read error occurred.\n- [Bugfix] Fix losing aux chunks when there's more than one of the same type.\n- [Bugfix] Fix sometimes writing output even when it was larger.\n- [Misc] Revamp CI workflow to upload artifacts and generate binaries for additional architectures.\n- [Misc] Bump minimum Rust version to 1.66.0.\n\n## Version 8.0.0\n\n- [Breaking] Revamp alpha optimization\n- [Bugfix] Fix grayscale depth reduction with tRNS pixel\n- [Bugfix] Fix fast mode with zopfli\n- [Improvement] Tweaks to interlacing and format display\n- [Improvement] Ability to reduce alpha channel to tRNS pixel\n- [Improvement] Performance improvements to colorspace reduction\n- [Misc] Disable image validation in release mode, as it is deemed no longer necessary\n\n## Version 7.0.0\n\n- [Breaking] Switch to libdeflater as the default\n- [Breaking] Rebalance presets\n- [Breaking] Update safe headers to remove\n- [Breaking] Bump minimum Rust version to 1.61.0\n- [Feature] Introduce new filter strategies\n- [Feature] Allow setting libdeflate compression level\n- [Feature] Add optional dockerization\n- [Improvement] Improve alpha reductions\n- [Improvement] Fast deinterlace for 8-bit\n- [Improvement] Refactor heuristics for fast filter evaluation\n- [Improvement] Improve file size reduction further\n- [Bugfix] Avoid printing output bytes on decompress error\n- [Bugfix] Fix compression level 0\n- [Bugfix] Fix directional alpha reductions\n- [Bugfix] Fix edge cases in palette reduction\n\n### Version 6.0.1\n\n- [Bugfix] Fix an issue where Zopfli mode could generate corrupt images\n\n### Version 6.0.0\n\n- [Breaking] Bump minimum Rust version to 1.57.0\n- [Feature] Add `--check`/`-c` CLI option\n- [Security] Update stderrlog to 0.5.2 (Fixes RUSTSEC-2022-0006)\n- [Security] Remove chrono as a transitive dependency (Fixes RUSTSEC-2020-0159)\n- [Misc] Bump `clap` to 3.2\n- [Misc] Bump `zopfli` to 0.7\n- [Misc] Bump `libdeflater` to 0.10\n- [Misc] Remove `byteorder` dependency in favor of stdlib functions\n- [Misc] Bump `image` to 0.24\n- [Misc] Bump `crc` to 3.0\n- [Misc] Bump `miniz_oxide` to 0.6\n- [Misc] Update to Rust edition 2021\n- [Misc] Various internal improvements\n\n### Version 5.0.1\n\n- [Bugfix] Fix an issue where -o5 and -o6 were not testing all options\n- [Misc] Bump miniz_oxide to 0.5\n\n### Version 5.0.0\n\n- [Breaking] Bump minimum Rust version to 1.46.0\n- [Bugfix] Avoid many panics that may occur on broken files\n- [Bugfix] Fix race condition that may cause tests to fail\n- [Performance] Optimizations to unfiltering and copying\n- [Feature] Add `--ng` option to skip grayscale reduction\n- [Feature] Also preserve timestamps when using `--preserve`\n- [Misc] Bump `crc` to 2.x\n\n### Version 4.0.3\n\n- Bump itertools to 0.10.x\n- Temporarily disable i686 releases, which were failing due to an odd linker issue,\n  so that at least amd64 builds will publish successfully\n  - This only relates to the releases published on Github. You can still manually compile oxipng for any platform.\n\n### Version 4.0.2\n\n- Includes another update to libdeflater that improves support for targets\n  without a C stdlib, like wasm32.\n\n### Version 4.0.1\n\n- Includes an update to libdeflater that improves support for targets\n  without a C stdlib, like wasm32.\n\n### Version 4.0.0\n\n- [Breaking] Bump minimum Rust version to 1.45.0\n- [Feature] Make `libdeflater` and `zopfli` optional for API users\n- [Bugfix] Fix cloudflare-zlib on aarch64 CPUs\n- [Bugfix] Don't exit on finding a non-PNG file when crawling recursively\n- [Bugfix] Make `rayon` truly optional\n- Various internal improvements\n\n### Version 3.0.1\n\n- [Bugfix] Re-add `--force` flag to CLI\n  - This was accidentally removed somehow\n- Many non-breaking dependency version bumps\n\n### Version 3.0.0\n\n- [Breaking] Bump minimum Rust version to 1.41.0\n- [Breaking] Use IndexMap/IndexSet to provide more consistent performance ([#202](https://github.com/shssoichiro/oxipng/pull/202))\n  - This changes some public-facing types.\n    `IndexMap` and `IndexSet` are reexported\n    at the crate root to aid migration.\n- [Breaking] Remove fields from the `Options` struct which were never used ([#211](https://github.com/shssoichiro/oxipng/pull/211/files#diff-b4aea3e418ccdb71239b96952d9cddb6L217), [#212](https://github.com/shssoichiro/oxipng/pull/212/files#diff-b4aea3e418ccdb71239b96952d9cddb6L134))\n- [Breaking] Refactor zlib-specific options in the `Options` struct ([#210](https://github.com/shssoichiro/oxipng/pull/210/files))\n- [Feature] Add libdeflater as an option ([#203](https://github.com/shssoichiro/oxipng/pull/203))\n- [Feature] Use standard `log` library ([#218](https://github.com/shssoichiro/oxipng/pull/218))\n- [Feature] Add `-o max` setting which will always reference the highest compression preset ([#224](https://github.com/shssoichiro/oxipng/pull/224))\n- [Deprecated] `-o 4` was found to be equivalent to `-o 3` and is deprecated.\n  It will likely be removed in a future release.\n  For now it remains equivalent to `-o 3`. ([#224](https://github.com/shssoichiro/oxipng/pull/224))\n- [Bugfix] Ensure output is deterministic ([#199](https://github.com/shssoichiro/oxipng/pull/199))\n- Update `image` crate to 0.23\n- Update `itertools` crate to 0.9\n- Various performance and internal improvements\n\n### Version 2.3.0\n\n- Allow disabling all alpha optimizations ([#181](https://github.com/shssoichiro/oxipng/pull/181))\n- Fix interlacing issues on tiny images ([#182](https://github.com/shssoichiro/oxipng/pull/182))\n- Reduce memory usage in filtering ([#191](https://github.com/shssoichiro/oxipng/pull/191))\n- Implement palette sorting to improve compression ([#193](https://github.com/shssoichiro/oxipng/pull/193))\n- Disable alpha optimizations by default ([#187](https://github.com/shssoichiro/oxipng/pull/187))\n- Add support for WASM ([#194](https://github.com/shssoichiro/oxipng/pull/194))\n\n### Version 2.2.2\n\n- Fix grayscale bit-depth reduction ([#171](https://github.com/shssoichiro/oxipng/pull/171))\n- Fix typos and incorrect log message ([#172](https://github.com/shssoichiro/oxipng/pull/172))\n- Make metadata order deterministic ([#174](https://github.com/shssoichiro/oxipng/pull/174))\n- Fix 32-bit builds ([#176](https://github.com/shssoichiro/oxipng/pull/176))\n- Enable LTO in release builds ([#177](https://github.com/shssoichiro/oxipng/pull/177))\n- Use deterministic compression strategy ([#179](https://github.com/shssoichiro/oxipng/pull/179))\n- Fix decoding interlaced images with height or width <= 2 ([#175](https://github.com/shssoichiro/oxipng/pull/175))\n- Preallocate memory in reduced_alpha_to_up ([#180](https://github.com/shssoichiro/oxipng/pull/180))\n- Update `bit-vec` crate to 0.6\n\n### Version 2.2.1\n\n- Fix compression of very large files ([#167](https://github.com/shssoichiro/oxipng/pull/167)) ([#168](https://github.com/shssoichiro/oxipng/pull/168))\n\n### Version 2.2.0\n\n- Various internal improvements ([#154](https://github.com/shssoichiro/oxipng/pull/154)) ([#158](https://github.com/shssoichiro/oxipng/pull/158)) ([#160](https://github.com/shssoichiro/oxipng/pull/160)) ([#161](https://github.com/shssoichiro/oxipng/pull/161)) ([#162](https://github.com/shssoichiro/oxipng/pull/162)) ([#163](https://github.com/shssoichiro/oxipng/pull/163))\n- Update `image` crate to 0.21.0\n- Update `itertools` crate to 0.8.0\n- Update `zopfli` crate to 0.4.0\n- Use Rust edition 2018\n- Bump minimum required Rust version to 1.31.0\n\n### Version 2.1.8\n\n- Fix non-standard sBIT headers in other code locations ([#153](https://github.com/shssoichiro/oxipng/issues/153))\n\n### Version 2.1.7\n\n- 80x faster palette reduction ([#150](https://github.com/shssoichiro/oxipng/pull/150))\n- Optimize RGB to palette conversion ([#148](https://github.com/shssoichiro/oxipng/pull/148))\n- Various microoptimizations ([#146](https://github.com/shssoichiro/oxipng/pull/146))\n- Introduce third-party safe wrapper around cloudflare-zlib ([#149](https://github.com/shssoichiro/oxipng/pull/149))\n\n### Version 2.1.6\n\n- Identify and drop useless sRGB profiles ([#143](https://github.com/shssoichiro/oxipng/pull/143))\n- Alpha heuristic improvements ([#144](https://github.com/shssoichiro/oxipng/pull/144))\n- Bump `miniz_oxide` and `cloudflare-zlib-sys` to 0.2.0\n\n### Version 2.1.5\n\n- Fix issue where some images will incorrectly reduce bit depth ([#140](https://github.com/shssoichiro/oxipng/issues/140))\n\n### Version 2.1.4\n\n- Bump `image` crate to 0.20.0\n\n### Version 2.1.3\n\n- Fix i686 builds\n- Performance improvements\n\n### Version 2.1.2\n\n- Fix issue with PNG to Indexed reduction on images with transparency pixel ([#129](https://github.com/shssoichiro/oxipng/issues/129))\n\n### Version 2.1.1\n\n- More fixes for alpha optimization on interlaced images ([#133](https://github.com/shssoichiro/oxipng/issues/133))\n\n### Version 2.1.0\n\n- [SEMVER_MINOR] Bump minimum Rust version to 1.27.0\n- [SEMVER_MINOR] Reenable faster Cloudflare zlib compression on platforms that support it\n- Fix memory leak with Cloudflare zlib ([#126](https://github.com/shssoichiro/oxipng/issues/126))\n- Minor fixes and cleanup\n\n### Version 2.0.2\n\n- Fix an issue in alpha optimization on interlaced images ([#113](https://github.com/shssoichiro/oxipng/issues/113))\n\n### Version 2.0.1\n\n- Revert making Cloudflare zlib the default, as it introduced a major memory leak. It will be put back behind a feature flag, and reenabled when the issue is fixed.\n- Revert minimum Rust version to 1.24.0\n\n### Version 2.0.0\n\n- [SEMVER_MAJOR] Make PngError a proper Error enum\n- [SEMVER_MINOR] Bump minimum Rust version to 1.27.0\n- [SEMVER_MINOR] Make Rayon an optional dependency (enabled by default)\n- [SEMVER_MINOR] Option to limit wall clock time spent in optimization trials\n- [SEMVER_MINOR] `--keep` option (works similar to `--strip`, but takes a comma-separated list of headers to keep, and removes all other non-critical headers)\n- Use faster Cloudflare zlib compression on platforms that support it\n- Allow specifying more than 2 filter types via the CLI\n- Avoid double glob processing on unix\n- Fix reading from stdin\n- Cleanup help text\n- Various performance improvements\n\n### Version 1.0.4\n\n- Bump `image` to 0.19.0\n- Bump `bit-vec` to 0.5.0\n- Bump `regex` to 1.0.0\n\n### Version 1.0.3\n\n- Bump dependencies\n\n### Version 1.0.2\n\n- Fix a change that breaks Itertools::flatten with recent Rust nightlies\n\n### Version 1.0.1\n\n- Bump rayon to 1.0 ([#99](https://github.com/shssoichiro/oxipng/pull/99) @cuviper)\n- Bump minor versions of other dependencies for binary distribution\n\n### Version 1.0.0\n\n- Remove the C dependency on miniz, and replace it with a Rust version ([#57](https://github.com/shssoichiro/oxipng/issues/57))\n  - This improves decompression speed by 15%. Compression speed is not affected.\n  - [SEMVER_MAJOR] This also obsoletes the `-zm` command line option and the `memory` key on the `Options` struct.\n  - Presets will be updated automatically. This means that presets 3 and higher will run significantly more quickly.\n- [SEMVER_MAJOR] Adjust the presets, now that `-zm` is no longer an option.\n  - `-o3` now tests all filter types. This will result in 50% more trials than before, but may give up to 10% more compression gain.\n  - `-o4` and higher now test all alpha optimization types. This adds 5 trials specific to the alpha channel. Only transparent images are affected.\n- Implement unix-specific permissions copying for `-p` option\n- Performance optimizations\n- Refactor of internal code\n\n### Version 0.19.0\n\n- [SEMVER_MAJOR] Default to overwriting the input file if `out_file` is not set.\n  This does not affect the CLI, but with the library, it was easy to forget to set the `out_file`,\n  and there was no warning that no output file would be written.\n- Bump dependencies, reduces binary size by a considerable amount\n- Hide all modules from documentation, and only export the specific structures that should be public.\n  Previously there were too many implementation details made public. The modules are still public for the purposes of our integration tests,\n  but we strongly advise against using undocumented modules. These may become private in the future.\n- Internal refactoring and code cleanup\n- Fix an error message that was displaying the wrong file path\n- Fix an issue where the output file would not be written if the input was already optimized,\n  even if the output path was different from the input path\n\n### Version 0.18.3\n\n- Return exit code of 1 if an error occurred while processing a file using the CLI app ([#93](https://github.com/shssoichiro/oxipng/issues/93))\n\n### Version 0.18.2\n\n- Bump `image` to 0.18\n- Fix unfiltering of scan lines in interlaced images ([#92](https://github.com/shssoichiro/oxipng/issues/92))\n\n### Version 0.18.1\n\n- Bump `rayon` to 0.9\n- Fix failure to optimize on certain grayscale images ([#89](https://github.com/shssoichiro/oxipng/issues/89))\n\n### Version 0.18.0\n\n- Bump `itertools` to 0.7\n- Bump `image` to 0.17\n- [SEMVER_MAJOR] Bump minimum rustc version to 1.20.0\n- Fix parsing of glob paths on Windows ([#90](https://github.com/shssoichiro/oxipng/issues/90))\n\n### Version 0.17.2\n\n- Bump `image` to 0.16\n- Quickly pass over files that do not have a PNG header ([#85](https://github.com/shssoichiro/oxipng/issues/85) @emielbeinema)\n- Return an error instead of crashing on APNG files ([#83](https://github.com/shssoichiro/oxipng/issues/83) @emielbeinema)\n\n### Version 0.17.1\n\n- Remove VC++ download requirement for Windows users\n\n### Version 0.17.0\n\n- [SEMVER_MAJOR] Bump minimum required rustc version to 1.19.0\n- [SEMVER_MINOR] Oxipng will now, by default, attempt to change all transparent pixels to `rgba(0, 0, 0, 0)` to improve compression.\n  It does fast trials with filters 0 and 5 to see if this is an improvement over\n  the existing alpha channel.\n- [SEMVER_MINOR] Add a `-a` option to the command line (`alphas` in the struct) which enables 6 different\n  trials for optimizing the alpha channel, using the previously mentioned fast heuristic.\n  This option will make optimization of images with transparency somewhat slower,\n  but may improve compression.\n- Fixed a bug in reducing palettes for images with bit depth of two ([#80](https://github.com/shssoichiro/oxipng/issues/80))\n- Fixed another bug in reducing palettes for images with bit depth less than eight ([#82](https://github.com/shssoichiro/oxipng/issues/82))\n- Code cleanup\n- Bump `image` to 0.15\n\n### Version 0.16.3\n\n- Fix command-line help text ([#70](https://github.com/shssoichiro/oxipng/issues/70))\n\n### Version 0.16.2\n\n- Publicly export `error` module\n\n### Version 0.16.1\n\n- Fix rayon's breaking changes that they made in a point release\n\n### Version 0.16.0\n\n- [SEMVER_MAJOR] Bump minimum rustc version to 1.17.0\n- Bump `image` to 0.14\n- Bump `rayon` to 0.8\n\n### Version 0.15.2\n\n- Bump `image` to 0.13 ([#65](https://github.com/shssoichiro/oxipng/pull/65))\n- Bump `rayon` to 0.7\n- Bump `itertools` to 0.6\n\n### Version 0.15.1\n\n- Ignore color reductions that would increase file size ([#61](https://github.com/shssoichiro/oxipng/issues/61))\n\n### Version 0.15.0\n\n- [SEMVER_MINOR] Check images for correctness before writing result ([#60](https://github.com/shssoichiro/oxipng/issues/60))\n- Fix invalid output when reducing image to a different color type but file size does not improve ([#60](https://github.com/shssoichiro/oxipng/issues/60))\n- Don't write new file if moving from interlaced to non-interlaced if new file would be larger\n\n### Version 0.14.4\n\n- Fix bug when reducing RGBA to Indexed if image has 256 colors plus a background color\n\n### Version 0.14.3\n\n- Fix multiple bugs when reducing transparency palettes\n\n### Version 0.14.2\n\n- Fix a bug when reducing palette in images with bit depth less than 8\n- Fix a bug when reducing palette in images with transparency\n\n### Version 0.14.1\n\n- Remove zlib dependency and switch entirely to miniz, since zlib 1.2.11 was not working with oxipng. This costs some performance, but is better than having a broken application.\n\n### Version 0.14.0\n\n- Performance optimizations\n- [SEMVER_MAJOR] Bump minimum rustc version to 1.13.0\n- Add categories on crates.io\n\n### Version 0.13.1\n\n- Bump regex dependency to 0.2\n- Bump byteorder dependency to 1.0\n- Bump rayon dependency to 0.6\n\n### Version 0.13.0\n\n- Fix bug in certain PNG headers when reducing color type ([#52](https://github.com/shssoichiro/oxipng/issues/52))\n- [SEMVER_MAJOR] Reduction functions now take `&mut PngData` and return a `bool` indicating whether the image was reduced\n- [SMEVER_MAJOR] Bump minimum required rustc version to 1.12.0\n\n### Version 0.12.0\n\n- Performance optimizations\n- Fix processing filenames that contain commas (@aliceatlas [#50](https://github.com/shssoichiro/oxipng/pull/50))\n- [SEMVER_MINOR] Add zopfli option (-Z), disabled by default. Gives about 10% better compression, but is currently 50-100x slower.\n\n### Version 0.11.0\n\n- [SEMVER_MAJOR] Bump minimum rustc version to 1.9.0, required by dependencies\n- [SEMVER_MINOR] Allow calling optimization presets via crate using `Options::from_preset`\n- [SEMVER_MAJOR] Return proper `PngError` type which implements `std::error::Error` from `Result`s\n- [SEMVER_MAJOR] Rename module `deflate::deflate` to `deflate`\n- Performance optimizations\n\n### Version 0.10.0\n\n- [SEMVER_MINOR] Make clap and regex dependencies optional\n  - Enabled by default, needed for executable build; can be disabled for use in crates\n- Remove reduction from palette to grayscale, which was not working and provided minimal benefit\n\n### Version 0.9.0\n\n- [SEMVER_MAJOR] Significant refactoring of modules\n- Use `itertools` to cleanup areas of code\n- Use multiple threads for filtering trials\n\n### Version 0.8.2\n\n- Fix issue where images smaller than 4px width would crash on interlacing ([#42](https://github.com/shssoichiro/oxipng/issues/42))\n\n### Version 0.8.1\n\n- Minor optimizations\n- Fix issue where interlaced images with certain widths would fail to optimize\n\n### Version 0.8.0\n\n- [SEMVER_MINOR] Add support for optimizing PNGs already loaded into memory via library function\n\n### Version 0.7.0\n\n- Minor compression improvement on interlaced images\n- Performance optimizations\n- [SEMVER_MINOR] Move default Options into a Default impl\n- [SEMVER_MINOR] Add option for setting number of threads ([#39](https://github.com/shssoichiro/oxipng/issues/39))\n\n### Version 0.6.0\n\n- Fix issue where output directory would not be created if it did not exist\n- Use miniz for compression strategies where it outperforms zlib\n- [SEMVER_MINOR] Partially implement -p / --preserve, as far as stable Rust will allow for now\n- [SEMVER_MINOR] Implement --fix to ignore CRC errors and recalculate correct CRC in output\n\n### Version 0.5.0\n\n- [SEMVER_MINOR] Palette entries can now reduced, on by default ([#11](https://github.com/shssoichiro/oxipng/issues/11))\n- Don't report that we are in pretend mode if verbosity is set to none\n- Add cargo bench suite ([#7](https://github.com/shssoichiro/oxipng/issues/7))\n\n### Version 0.4.0\n\n- Performance optimizations\n- [SEMVER_MAJOR] `-s` automatically infers `--strip safe` ([#31](https://github.com/shssoichiro/oxipng/issues/31))\n- Update byteorder and clap crates\n- Fix issue where interlaced images incorrectly applied filters on the first line of a pass\n\n### Version 0.3.0\n\n- Properly decode interlaced images\n- [SEMVER_MINOR] Allow converting between progressive and interlaced images ([#3](https://github.com/shssoichiro/oxipng/issues/3))\n- Fix a bug that would cause oxipng to crash on very small images\n\n### Version 0.2.2\n\n- Limit number of threads to 1.5x number of cores\n- Significantly improve memory usage, especially with high optimization levels. ([#32](https://github.com/shssoichiro/oxipng/issues/32))\n- Refactor output code ([#19](https://github.com/shssoichiro/oxipng/issues/19))\n\n### Version 0.2.1\n\n- Add rustdoc for public methods and structs\n- Improve filter mode 5 heuristic ([#16](https://github.com/shssoichiro/oxipng/issues/16))\n- Add tests for edge-case images with subtitles ([#29](https://github.com/shssoichiro/oxipng/issues/29))\n\n### Version 0.2.0\n\n- Fix program version that is displayed when running `oxipng -V`\n- Ensure `--quiet` mode is actually quiet (@SethDusek [#20](https://github.com/shssoichiro/oxipng/pull/20))\n- Write status/debug information to stderr instead of stdout\n- Use heuristics to determine best combination for `-o1` ([#21](https://github.com/shssoichiro/oxipng/issues/21))\n- [SEMVER_MAJOR] Allow 'safe', 'all', or comma-separated list as options for `--strip`\n- [SEMVER_MINOR] Add `-s` alias for `--strip`\n\n### Version 0.1.1\n\n- Fix `oxipng *` writing all input files to one output file ([#15](https://github.com/shssoichiro/oxipng/issues/15))\n\n### Version 0.1.0\n\n- Initial beta release\n- Reduce color type and bit depth\n- Recompress with zlib\n- Multithreading\n- Strip headers option\n- Backup file before writing option\n- Write to stdout option\n"
        },
        {
          "name": "Cargo.lock",
          "type": "blob",
          "size": 16.875,
          "content": "# This file is automatically @generated by Cargo.\n# It is not intended for manual editing.\nversion = 3\n\n[[package]]\nname = \"adler2\"\nversion = \"2.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"512761e0bb2578dd7380c6baaa0f4ce03e84f95e960231d1dec8bf4d7d6e2627\"\n\n[[package]]\nname = \"anstream\"\nversion = \"0.6.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8acc5369981196006228e28809f761875c0327210a891e941f4c683b3a99529b\"\ndependencies = [\n \"anstyle\",\n \"anstyle-parse\",\n \"anstyle-query\",\n \"anstyle-wincon\",\n \"colorchoice\",\n \"is_terminal_polyfill\",\n \"utf8parse\",\n]\n\n[[package]]\nname = \"anstyle\"\nversion = \"1.0.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"55cc3b69f167a1ef2e161439aa98aed94e6028e5f9a59be9a6ffb47aef1651f9\"\n\n[[package]]\nname = \"anstyle-parse\"\nversion = \"0.2.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3b2d16507662817a6a20a9ea92df6652ee4f94f914589377d69f3b21bc5798a9\"\ndependencies = [\n \"utf8parse\",\n]\n\n[[package]]\nname = \"anstyle-query\"\nversion = \"1.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"79947af37f4177cfead1110013d678905c37501914fba0efea834c3fe9a8d60c\"\ndependencies = [\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"anstyle-wincon\"\nversion = \"3.0.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2109dbce0e72be3ec00bed26e6a7479ca384ad226efdd66db8fa2e3a38c83125\"\ndependencies = [\n \"anstyle\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"autocfg\"\nversion = \"1.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ace50bade8e6234aa140d9a2f552bbee1db4d353f69b8217bc503490fc1a9f26\"\n\n[[package]]\nname = \"bitflags\"\nversion = \"1.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bef38d45163c2f1dde094a7dfd33ccf595c92905c8f8f4fdc18d06fb1037718a\"\n\n[[package]]\nname = \"bitflags\"\nversion = \"2.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b048fb63fd8b5923fc5aa7b340d8e156aec7ec02f0c78fa8a6ddc2613f6f71de\"\n\n[[package]]\nname = \"bitvec\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1bc2832c24239b0141d5674bb9174f9d68a8b5b3f2753311927c172ca46f7e9c\"\ndependencies = [\n \"funty\",\n \"radium\",\n \"tap\",\n \"wyz\",\n]\n\n[[package]]\nname = \"bumpalo\"\nversion = \"3.16.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"79296716171880943b8470b5f8d03aa55eb2e645a4874bdbb28adb49162e012c\"\n\n[[package]]\nname = \"bytemuck\"\nversion = \"1.20.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8b37c88a63ffd85d15b406896cc343916d7cf57838a847b3a6f2ca5d39a5695a\"\n\n[[package]]\nname = \"byteorder-lite\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8f1fe948ff07f4bd06c30984e69f5b4899c516a3ef74f34df92a2df2ab535495\"\n\n[[package]]\nname = \"cc\"\nversion = \"1.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fd9de9f2205d5ef3fd67e685b0df337994ddd4495e2a28d185500d0e1edfea47\"\ndependencies = [\n \"shlex\",\n]\n\n[[package]]\nname = \"cfg-if\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd\"\n\n[[package]]\nname = \"clap\"\nversion = \"4.5.21\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fb3b4b9e5a7c7514dfa52869339ee98b3156b0bfb4e8a77c4ff4babb64b1604f\"\ndependencies = [\n \"clap_builder\",\n]\n\n[[package]]\nname = \"clap_builder\"\nversion = \"4.5.21\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b17a95aa67cc7b5ebd32aa5370189aa0d79069ef1c64ce893bd30fb24bff20ec\"\ndependencies = [\n \"anstream\",\n \"anstyle\",\n \"clap_lex\",\n \"strsim\",\n \"terminal_size\",\n]\n\n[[package]]\nname = \"clap_lex\"\nversion = \"0.7.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"afb84c814227b90d6895e01398aee0d8033c00e7466aca416fb6a8e0eb19d8a7\"\n\n[[package]]\nname = \"colorchoice\"\nversion = \"1.0.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5b63caa9aa9397e2d9480a9b13673856c78d8ac123288526c37d7839f2a86990\"\n\n[[package]]\nname = \"crc32fast\"\nversion = \"1.4.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a97769d94ddab943e4510d138150169a2758b5ef3eb191a9ee688de3e23ef7b3\"\ndependencies = [\n \"cfg-if\",\n]\n\n[[package]]\nname = \"crossbeam-channel\"\nversion = \"0.5.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"33480d6946193aa8033910124896ca395333cae7e2d1113d1fef6c3272217df2\"\ndependencies = [\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"crossbeam-deque\"\nversion = \"0.8.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"613f8cc01fe9cf1a3eb3d7f488fd2fa8388403e97039e2f73692932e291a770d\"\ndependencies = [\n \"crossbeam-epoch\",\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"crossbeam-epoch\"\nversion = \"0.9.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5b82ac4a3c2ca9c3460964f020e1402edd5753411d7737aa39c3714ad1b5420e\"\ndependencies = [\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"crossbeam-utils\"\nversion = \"0.8.20\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"22ec99545bb0ed0ea7bb9b8e1e9122ea386ff8a48c0922e43f36d45ab09e0e80\"\n\n[[package]]\nname = \"either\"\nversion = \"1.13.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"60b1af1c220855b6ceac025d3f6ecdd2b7c4894bfe9cd9bda4fbb4bc7c0d4cf0\"\n\n[[package]]\nname = \"env_filter\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4f2c92ceda6ceec50f43169f9ee8424fe2db276791afde7b2cd8bc084cb376ab\"\ndependencies = [\n \"log\",\n]\n\n[[package]]\nname = \"env_logger\"\nversion = \"0.11.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e13fa619b91fb2381732789fc5de83b45675e882f66623b7d8cb4f643017018d\"\ndependencies = [\n \"anstream\",\n \"anstyle\",\n \"env_filter\",\n \"log\",\n]\n\n[[package]]\nname = \"equivalent\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5443807d6dff69373d433ab9ef5378ad8df50ca6298caf15de6e52e24aaf54d5\"\n\n[[package]]\nname = \"errno\"\nversion = \"0.3.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"534c5cf6194dfab3db3242765c03bbe257cf92f22b38f6bc0c58d59108a820ba\"\ndependencies = [\n \"libc\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"fdeflate\"\nversion = \"0.3.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"07c6f4c64c1d33a3111c4466f7365ebdcc37c5bd1ea0d62aae2e3d722aacbedb\"\ndependencies = [\n \"simd-adler32\",\n]\n\n[[package]]\nname = \"filetime\"\nversion = \"0.2.25\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"35c0522e981e68cbfa8c3f978441a5f34b30b96e146b33cd3359176b50fe8586\"\ndependencies = [\n \"cfg-if\",\n \"libc\",\n \"libredox\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"flate2\"\nversion = \"1.0.35\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c936bfdafb507ebbf50b8074c54fa31c5be9a1e7e5f467dd659697041407d07c\"\ndependencies = [\n \"crc32fast\",\n \"miniz_oxide\",\n]\n\n[[package]]\nname = \"funty\"\nversion = \"2.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e6d5a32815ae3f33302d95fdcb2ce17862f8c65363dcfd29360480ba1001fc9c\"\n\n[[package]]\nname = \"glob\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d2fabcfbdc87f4758337ca535fb41a6d701b65693ce38287d856d1674551ec9b\"\n\n[[package]]\nname = \"hashbrown\"\nversion = \"0.15.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3a9bfc1af68b1726ea47d3d5109de126281def866b33970e10fbab11b5dafab3\"\n\n[[package]]\nname = \"image\"\nversion = \"0.25.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cd6f44aed642f18953a158afeb30206f4d50da59fbc66ecb53c66488de73563b\"\ndependencies = [\n \"bytemuck\",\n \"byteorder-lite\",\n \"num-traits\",\n \"png\",\n]\n\n[[package]]\nname = \"indexmap\"\nversion = \"2.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"707907fe3c25f5424cce2cb7e1cbcafee6bdbe735ca90ef77c29e84591e5b9da\"\ndependencies = [\n \"equivalent\",\n \"hashbrown\",\n \"rayon\",\n]\n\n[[package]]\nname = \"is_terminal_polyfill\"\nversion = \"1.70.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7943c866cc5cd64cbc25b2e01621d07fa8eb2a1a23160ee81ce38704e97b8ecf\"\n\n[[package]]\nname = \"libc\"\nversion = \"0.2.164\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"433bfe06b8c75da9b2e3fbea6e5329ff87748f0b144ef75306e674c3f6f7c13f\"\n\n[[package]]\nname = \"libdeflate-sys\"\nversion = \"1.22.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2f4ae7b48098016dc3bc64a35605668f0af4425ec1a4a175ce2d0c1129067932\"\ndependencies = [\n \"cc\",\n \"pkg-config\",\n]\n\n[[package]]\nname = \"libdeflater\"\nversion = \"1.22.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"567ff5eb948d34d3f93d8da568e72db0f5a12c89efb6c3913e4d6b142cc7ec34\"\ndependencies = [\n \"libdeflate-sys\",\n]\n\n[[package]]\nname = \"libredox\"\nversion = \"0.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c0ff37bd590ca25063e35af745c343cb7a0271906fb7b37e4813e8f79f00268d\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"libc\",\n \"redox_syscall\",\n]\n\n[[package]]\nname = \"linux-raw-sys\"\nversion = \"0.4.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"78b3ae25bc7c8c38cec158d1f2757ee79e9b3740fbc7ccf0e59e4b08d793fa89\"\n\n[[package]]\nname = \"lockfree-object-pool\"\nversion = \"0.1.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9374ef4228402d4b7e403e5838cb880d9ee663314b0a900d5a6aabf0c213552e\"\n\n[[package]]\nname = \"log\"\nversion = \"0.4.22\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a7a70ba024b9dc04c27ea2f0c0548feb474ec5c54bba33a7f72f873a39d07b24\"\n\n[[package]]\nname = \"miniz_oxide\"\nversion = \"0.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e2d80299ef12ff69b16a84bb182e3b9df68b5a91574d3d4fa6e41b65deec4df1\"\ndependencies = [\n \"adler2\",\n \"simd-adler32\",\n]\n\n[[package]]\nname = \"num-traits\"\nversion = \"0.2.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"071dfc062690e90b734c0b2273ce72ad0ffa95f0c74596bc250dcfd960262841\"\ndependencies = [\n \"autocfg\",\n]\n\n[[package]]\nname = \"once_cell\"\nversion = \"1.20.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1261fe7e33c73b354eab43b1273a57c8f967d0391e80353e51f764ac02cf6775\"\n\n[[package]]\nname = \"oxipng\"\nversion = \"9.1.3\"\ndependencies = [\n \"bitvec\",\n \"clap\",\n \"crossbeam-channel\",\n \"env_logger\",\n \"filetime\",\n \"glob\",\n \"image\",\n \"indexmap\",\n \"libdeflater\",\n \"log\",\n \"rayon\",\n \"rgb\",\n \"rustc-hash\",\n \"zopfli\",\n]\n\n[[package]]\nname = \"pkg-config\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"953ec861398dccce10c670dfeaf3ec4911ca479e9c02154b3a215178c5f566f2\"\n\n[[package]]\nname = \"png\"\nversion = \"0.17.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"52f9d46a34a05a6a57566bc2bfae066ef07585a6e3fa30fbbdff5936380623f0\"\ndependencies = [\n \"bitflags 1.3.2\",\n \"crc32fast\",\n \"fdeflate\",\n \"flate2\",\n \"miniz_oxide\",\n]\n\n[[package]]\nname = \"radium\"\nversion = \"0.7.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dc33ff2d4973d518d823d61aa239014831e521c75da58e3df4840d3f47749d09\"\n\n[[package]]\nname = \"rayon\"\nversion = \"1.10.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b418a60154510ca1a002a752ca9714984e21e4241e804d32555251faf8b78ffa\"\ndependencies = [\n \"either\",\n \"rayon-core\",\n]\n\n[[package]]\nname = \"rayon-core\"\nversion = \"1.12.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1465873a3dfdaa8ae7cb14b4383657caab0b3e8a0aa9ae8e04b044854c8dfce2\"\ndependencies = [\n \"crossbeam-deque\",\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"redox_syscall\"\nversion = \"0.5.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9b6dfecf2c74bce2466cabf93f6664d6998a69eb21e39f4207930065b27b771f\"\ndependencies = [\n \"bitflags 2.6.0\",\n]\n\n[[package]]\nname = \"rgb\"\nversion = \"0.8.50\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"57397d16646700483b67d2dd6511d79318f9d057fdbd21a4066aeac8b41d310a\"\ndependencies = [\n \"bytemuck\",\n]\n\n[[package]]\nname = \"rustc-hash\"\nversion = \"2.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"583034fd73374156e66797ed8e5b0d5690409c9226b22d87cb7f19821c05d152\"\n\n[[package]]\nname = \"rustix\"\nversion = \"0.38.41\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d7f649912bc1495e167a6edee79151c84b1bad49748cb4f1f1167f459f6224f6\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"errno\",\n \"libc\",\n \"linux-raw-sys\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"shlex\"\nversion = \"1.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0fda2ff0d084019ba4d7c6f371c95d8fd75ce3524c3cb8fb653a3023f6323e64\"\n\n[[package]]\nname = \"simd-adler32\"\nversion = \"0.3.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d66dc143e6b11c1eddc06d5c423cfc97062865baf299914ab64caa38182078fe\"\n\n[[package]]\nname = \"strsim\"\nversion = \"0.11.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7da8b5736845d9f2fcb837ea5d9e2628564b3b043a70948a3f0b778838c5fb4f\"\n\n[[package]]\nname = \"tap\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"55937e1799185b12863d447f42597ed69d9928686b8d88a1df17376a097d8369\"\n\n[[package]]\nname = \"terminal_size\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4f599bd7ca042cfdf8f4512b277c02ba102247820f9d9d4a9f521f496751a6ef\"\ndependencies = [\n \"rustix\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"utf8parse\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"06abde3611657adf66d383f00b093d7faecc7fa57071cce2578660c9f1010821\"\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.52.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"282be5f36a8ce781fad8c8ae18fa3f9beff57ec1b52cb3de0789201425d9a33d\"\ndependencies = [\n \"windows-targets\",\n]\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.59.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1e38bc4d79ed67fd075bcc251a1c39b32a1776bbe92e5bef1f0bf1f8c531853b\"\ndependencies = [\n \"windows-targets\",\n]\n\n[[package]]\nname = \"windows-targets\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9b724f72796e036ab90c1021d4780d4d3d648aca59e491e6b98e725b84e99973\"\ndependencies = [\n \"windows_aarch64_gnullvm\",\n \"windows_aarch64_msvc\",\n \"windows_i686_gnu\",\n \"windows_i686_gnullvm\",\n \"windows_i686_msvc\",\n \"windows_x86_64_gnu\",\n \"windows_x86_64_gnullvm\",\n \"windows_x86_64_msvc\",\n]\n\n[[package]]\nname = \"windows_aarch64_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"32a4622180e7a0ec044bb555404c800bc9fd9ec262ec147edd5989ccd0c02cd3\"\n\n[[package]]\nname = \"windows_aarch64_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"09ec2a7bb152e2252b53fa7803150007879548bc709c039df7627cabbd05d469\"\n\n[[package]]\nname = \"windows_i686_gnu\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8e9b5ad5ab802e97eb8e295ac6720e509ee4c243f69d781394014ebfe8bbfa0b\"\n\n[[package]]\nname = \"windows_i686_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0eee52d38c090b3caa76c563b86c3a4bd71ef1a819287c19d586d7334ae8ed66\"\n\n[[package]]\nname = \"windows_i686_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"240948bc05c5e7c6dabba28bf89d89ffce3e303022809e73deaefe4f6ec56c66\"\n\n[[package]]\nname = \"windows_x86_64_gnu\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"147a5c80aabfbf0c7d901cb5895d1de30ef2907eb21fbbab29ca94c5b08b1a78\"\n\n[[package]]\nname = \"windows_x86_64_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"24d5b23dc417412679681396f2b49f3de8c1473deb516bd34410872eff51ed0d\"\n\n[[package]]\nname = \"windows_x86_64_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"589f6da84c646204747d1270a2a5661ea66ed1cced2631d546fdfb155959f9ec\"\n\n[[package]]\nname = \"wyz\"\nversion = \"0.5.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"05f360fc0b24296329c78fda852a1e9ae82de9cf7b27dae4b7f62f118f77b9ed\"\ndependencies = [\n \"tap\",\n]\n\n[[package]]\nname = \"zopfli\"\nversion = \"0.8.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e5019f391bac5cf252e93bbcc53d039ffd62c7bfb7c150414d61369afe57e946\"\ndependencies = [\n \"bumpalo\",\n \"crc32fast\",\n \"lockfree-object-pool\",\n \"log\",\n \"once_cell\",\n \"simd-adler32\",\n]\n"
        },
        {
          "name": "Cargo.toml",
          "type": "blob",
          "size": 2.42578125,
          "content": "[package]\nauthors = [\"Joshua Holmer <jholmer.in@gmail.com>\"]\ncategories = [\"command-line-utilities\", \"compression\"]\ndescription = \"A lossless PNG compression optimizer\"\nkeywords = [\"png\", \"image-compression\", \"optimization\", \"multi-threading\", \"lossless\"]\ndocumentation = \"https://docs.rs/oxipng\"\nedition = \"2021\"\nexclude = [\n  \".editorconfig\",\n  \".gitattributes\",\n  \".github/*\",\n  \".gitignore\",\n  \".pre-commit-hooks.yaml\",\n  \"Dockerfile\",\n  \"scripts/*\",\n  \"tests/*\",\n  \"xtask/*\",\n]\nhomepage = \"https://github.com/shssoichiro/oxipng\"\nlicense = \"MIT\"\nname = \"oxipng\"\nrepository = \"https://github.com/shssoichiro/oxipng\"\nversion = \"9.1.3\"\nrust-version = \"1.74.0\"\n\n[badges]\ntravis-ci = { repository = \"shssoichiro/oxipng\", branch = \"master\" }\nmaintenance = { status = \"actively-developed\" }\n\n[[bin]]\ndoc = false\nname = \"oxipng\"\npath = \"src/main.rs\"\nrequired-features = [\"binary\"]\n\n[[bench]]\nname = \"zopfli\"\nrequired-features = [\"zopfli\"]\n\n[dependencies]\nzopfli = { version = \"0.8.1\", optional = true, default-features = false, features = [\"std\", \"zlib\"] }\nrgb = \"0.8.50\"\nindexmap = \"2.6.0\"\nlibdeflater = \"1.22.0\"\nlog = \"0.4.22\"\nbitvec = \"1.0.1\"\nrustc-hash = \"2.0.0\"\n\n[dependencies.env_logger]\noptional = true\ndefault-features = false\nfeatures = [\"auto-color\"]\nversion = \"0.11.5\"\n\n[dependencies.crossbeam-channel]\noptional = true\nversion = \"0.5.13\"\n\n[dependencies.filetime]\noptional = true\nversion = \"0.2.25\"\n\n[dependencies.rayon]\noptional = true\nversion = \"1.10.0\"\n\n[dependencies.clap]\noptional = true\nversion = \"4.5.21\"\nfeatures = [\"wrap_help\"]\n\n[target.'cfg(windows)'.dependencies.glob]\noptional = true\nversion = \"0.3.1\"\n\n[dependencies.image]\noptional = true\ndefault-features = false\nfeatures = [\"png\"]\nversion = \"0.25.5\"\n\n[features]\nbinary = [\"dep:clap\", \"dep:glob\", \"dep:env_logger\"]\ndefault = [\"binary\", \"parallel\", \"zopfli\", \"filetime\"]\nparallel = [\"dep:rayon\", \"indexmap/rayon\", \"dep:crossbeam-channel\"]\nfreestanding = [\"libdeflater/freestanding\"]\nsanity-checks = [\"dep:image\"]\nzopfli = [\"dep:zopfli\"]\nfiletime = [\"dep:filetime\"]\nsystem-libdeflate = [\"libdeflater/dynamic\"]\n\n[lib]\nname = \"oxipng\"\npath = \"src/lib.rs\"\n\n[profile.dev]\nopt-level = 2\n\n[profile.release]\nlto = \"fat\"\nstrip = \"symbols\"\npanic = \"abort\"\n\n[package.metadata.deb]\nassets = [\n    [\"target/release/oxipng\", \"usr/bin/\", \"755\"],\n    [\"target/xtask/mangen/manpages/oxipng.1\", \"usr/share/man/man1/\", \"644\"],\n    [\"README.md\", \"usr/share/doc/oxipng/\", \"644\"],\n    [\"CHANGELOG.md\", \"usr/share/doc/oxipng/\", \"644\"],\n]\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 1.1650390625,
          "content": "# syntax=docker/dockerfile:1\nFROM --platform=$BUILDPLATFORM tonistiigi/xx AS xx\n\nFROM --platform=$BUILDPLATFORM rust:1.74-alpine AS base\n\nRUN apk update && \\\n    apk add \\\n        gcc \\\n        g++ \\\n        clang\n\nCOPY --from=xx / /\n\nARG TARGETPLATFORM\nRUN xx-info env\n\nRUN xx-apk add \\\n    gcc \\\n    musl-dev \\\n    libdeflate\n\nWORKDIR /src\n\nCOPY . .\n\nRUN --mount=type=cache,target=/root/.cargo/git/db \\\n    --mount=type=cache,target=/root/.cargo/registry/cache \\\n    --mount=type=cache,target=/root/.cargo/registry/index \\\n    xx-cargo build --release && \\\n    xx-verify /src/target/$(xx-cargo --print-target-triple)/release/oxipng && \\\n    cp /src/target/$(xx-cargo --print-target-triple)/release/oxipng /src/target/oxipng\n\nFROM alpine AS tool\n\nLABEL org.opencontainers.image.title=\"Oxipng\"\nLABEL org.opencontainers.image.description=\"Multithreaded PNG optimizer written in Rust\"\nLABEL org.opencontainers.image.authors=\"Joshua Holmer <jholmer.in@gmail.com>\"\nLABEL org.opencontainers.image.licenses=\"MIT\"\nLABEL org.opencontainers.image.source=\"https://github.com/shssoichiro/oxipng\"\n\nCOPY --from=base /src/target/oxipng /usr/local/bin\n\nWORKDIR /work\nENTRYPOINT [ \"oxipng\" ]\nCMD [ \"--help\" ]\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0537109375,
          "content": "The MIT License (MIT)\nCopyright (c) 2016 Joshua Holmer\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\nof the Software, and to permit persons to whom the Software is furnished to do\nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "MANUAL.txt",
          "type": "blob",
          "size": 7.6826171875,
          "content": "oxipng 9.1.3\nLosslessly improve compression of PNG files\n\nUsage: oxipng [OPTIONS] <files>...\n\nArguments:\n  <files>...\n          File(s) to compress (use '-' for stdin)\n\nOptions:\n  -o, --opt <level>\n          Set the optimization level preset. The default level 2 is quite fast and provides good\n          compression. Lower levels are faster, higher levels provide better compression, though\n          with increasingly diminishing returns.\n          \n              0   => --zc 5 --fast               (1 trial, determined heuristically)\n              1   => --zc 10 --fast              (1 trial, determined heuristically)\n              2   => --zc 11 -f 0,1,6,7 --fast   (4 fast trials, 1 main trial)\n              3   => --zc 11 -f 0,7,8,9          (4 trials)\n              4   => --zc 12 -f 0,7,8,9          (4 trials)\n              5   => --zc 12 -f 0,1,2,5,6,7,8,9  (8 trials)\n              6   => --zc 12 -f 0-9              (10 trials)\n              max =>                             (stable alias for the max level)\n          \n          Manually specifying a compression option (zc, f, etc.) will override the optimization\n          preset, regardless of the order you write the arguments.\n          \n          [default: 2]\n\n  -r, --recursive\n          When directories are given as input, traverse the directory trees and optimize all PNG\n          files found (files with “.png” or “.apng” extension).\n\n      --dir <directory>\n          Write output file(s) to <directory>. If the directory does not exist, it will be created.\n          Note that this will not preserve the directory structure of the input files when used with\n          '--recursive'.\n\n      --out <file>\n          Write output file to <file>\n\n      --stdout\n          Write output to stdout\n\n  -p, --preserve\n          Preserve file permissions and timestamps if possible\n\n  -P, --pretend\n          Do not write any files, only show compression results\n\n  -s\n          Strip safely-removable chunks, same as '--strip safe'\n\n      --strip <mode>\n          Strip metadata chunks, where <mode> is one of:\n          \n              safe    =>  Strip all non-critical chunks, except for the following:\n                              cICP, iCCP, sRGB, pHYs, acTL, fcTL, fdAT\n              all     =>  Strip all non-critical chunks\n              <list>  =>  Strip chunks in the comma-separated list, e.g. 'bKGD,cHRM'\n          \n          CAUTION: 'all' will convert APNGs to standard PNGs.\n          \n          Note that 'bKGD', 'sBIT' and 'hIST' will be forcibly stripped if the color type or bit\n          depth is changed, regardless of any options set.\n          \n          The default when --strip is not passed is to keep all metadata.\n\n      --keep <list>\n          Strip all metadata chunks except those in the comma-separated list. The special value\n          'display' includes chunks that affect the image appearance, equivalent to '--strip safe'.\n          \n          E.g. '--keep eXIf,display' will strip chunks, keeping only eXIf and those that affect the\n          image appearance.\n\n  -a, --alpha\n          Perform additional optimization on images with an alpha channel, by altering the color\n          values of fully transparent pixels. This is generally recommended for better compression,\n          but take care as while this is “visually lossless”, it is technically a lossy\n          transformation and may be unsuitable for some applications.\n\n  -i, --interlace <type>\n          Set the PNG interlacing type, where <type> is one of:\n          \n              0     =>  Remove interlacing from all images that are processed\n              1     =>  Apply Adam7 interlacing on all images that are processed\n              keep  =>  Keep the existing interlacing type of each image\n          \n          Note that interlacing can add 25-50% to the size of an optimized image. Only use it if you\n          believe the benefits outweigh the costs for your use case.\n          \n          [default: 0]\n\n      --scale16\n          Forcibly reduce images with 16 bits per channel to 8 bits per channel. This is a lossy\n          operation but can provide significant savings when you have no need for higher depth.\n          Reduction is performed by scaling the values such that, e.g. 0x00FF is reduced to 0x01\n          rather than 0x00.\n          \n          Without this flag, 16-bit images will only be reduced in depth if it can be done\n          losslessly.\n\n  -v, --verbose...\n          Run in verbose mode (use twice to increase verbosity)\n\n  -q, --quiet\n          Run in quiet mode\n\n  -f, --filters <list>\n          Perform compression trials with each of the given filter types. You can specify a\n          comma-separated list, or a range of values. E.g. '-f 0-3' is the same as '-f 0,1,2,3'.\n          \n          PNG delta filters (apply the same filter to every line)\n              0  =>  None      (recommended to always include this filter)\n              1  =>  Sub\n              2  =>  Up\n              3  =>  Average\n              4  =>  Paeth\n          \n          Heuristic strategies (try to find the best delta filter for each line)\n              5  =>  MinSum    Minimum sum of absolute differences\n              6  =>  Entropy   Highest Shannon entropy\n              7  =>  Bigrams   Lowest count of distinct bigrams\n              8  =>  BigEnt    Highest Shannon entropy of bigrams\n              9  =>  Brute     Smallest compressed size (slow)\n          \n          The default value depends on the optimization level preset.\n\n      --fast\n          Perform a fast compression evaluation of each enabled filter, followed by a single main\n          compression trial of the best result. Recommended if you have more filters enabled than\n          CPU cores.\n\n      --zc <level>\n          Deflate compression level (0-12) for main compression trials. The levels here are defined\n          by the libdeflate compression library.\n          \n          The default value depends on the optimization level preset.\n\n      --nb\n          Do not change bit depth\n\n      --nc\n          Do not change color type\n\n      --np\n          Do not change color palette\n\n      --ng\n          Do not change to or from grayscale\n\n      --nx\n          Do not perform any transformations and do not deinterlace by default.\n\n      --nz\n          Do not recompress IDAT unless required due to transformations. Recompression of other\n          compressed chunks (such as iCCP) will also be disabled. Note that the combination of\n          '--nx' and '--nz' will fully disable all optimization.\n\n      --fix\n          Do not perform checksum validation of PNG chunks. This may allow some files with errors to\n          be processed successfully.\n\n      --force\n          Write the output even if it is larger than the input\n\n  -Z, --zopfli\n          Use the much slower but stronger Zopfli compressor for main compression trials.\n          Recommended use is with '-o max' and '--fast'.\n\n      --zi <iterations>\n          Set the number of iterations to use for Zopfli compression. Using fewer iterations may\n          speed up compression for large files. This option requires '--zopfli' to be set.\n          \n          [default: 15]\n\n      --timeout <secs>\n          Maximum amount of time, in seconds, to spend on optimizations. Oxipng will check the\n          timeout before each transformation or compression trial, and will stop trying to optimize\n          the file if the timeout is exceeded. Note that this does not cut short any operations that\n          are already in progress, so it is currently of limited effectiveness for large files with\n          high compression levels.\n\n  -t, --threads <num>\n          Set number of threads to use [default: num CPU cores]\n\n  -h, --help\n          Print help (see a summary with '-h')\n\n  -V, --version\n          Print version\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 8.5166015625,
          "content": "# Oxipng\n\n[![Build Status](https://github.com/shssoichiro/oxipng/workflows/oxipng/badge.svg)](https://github.com/shssoichiro/oxipng/actions?query=branch%3Amaster)\n[![Version](https://img.shields.io/crates/v/oxipng.svg)](https://crates.io/crates/oxipng)\n[![License](https://img.shields.io/crates/l/oxipng.svg)](https://github.com/shssoichiro/oxipng/blob/master/LICENSE)\n[![Docs](https://docs.rs/oxipng/badge.svg)](https://docs.rs/oxipng)\n\n## Overview\n\nOxipng is a multithreaded lossless PNG/APNG compression optimizer. It can be used via a command-line\ninterface or as a library in other Rust programs.\n\n## Installing\n\nOxipng for Windows can be downloaded via the\n[Releases](https://github.com/shssoichiro/oxipng/releases) section on its GitHub page. Recently,\nhowever, Oxipng has also been made available through package managers. Check the list below for\nup-to-date options.\n\nFor MacOS or Linux, it is recommended to install from your distro's package repository, provided\nOxipng is available there in a not too outdated version for your use case.\n\nOxipng is known to be packaged for the environments listed below.\n\n[![Packaging status](https://repology.org/badge/vertical-allrepos/oxipng.svg?exclude_unsupported=1&columns=3&exclude_sources=modules,site)](https://repology.org/project/oxipng/versions)\n\nAlternatively, Oxipng can be installed from Cargo, via the following command:\n\n```\ncargo install oxipng\n```\n\nOxipng can also be built from source using the latest stable or nightly Rust.\nThis is primarily useful for developing on Oxipng.\n\n```\ngit clone https://github.com/shssoichiro/oxipng.git\ncd oxipng\ncargo build --release\ncp target/release/oxipng /usr/local/bin\n```\n\nThe current minimum supported Rust version is **1.74.0**.\n\nOxipng follows Semantic Versioning.\n\n## Usage\n\nOxipng is a command-line utility. An example usage, suitable for web, may be the following:\n\n```\noxipng -o 4 --strip safe --alpha *.png\n```\n\nThe most commonly used options are as follows:\n\n- Optimization: `-o 0` through `-o 6` (or `-o max`), lower is faster, higher is better compression.\n  The default (`-o 2`) is quite fast and provides good compression. Higher levels can be notably\n  better* but generally have increasingly diminishing returns.\n- Strip: Used to remove metadata info from processed images. Used via `--strip [safe,all]`.\n  Can save a few kilobytes if you don't need the metadata. \"Safe\" removes only metadata that\n  will never affect rendering of the image. \"All\" removes all metadata that is not critical\n  to the image. You can also pass a comma-separated list of specific metadata chunks to remove.\n  `-s` can be used as a shorthand for `--strip safe`.\n- Alpha: `--alpha` can improve compression of images with transparency, by altering the color\n  values of fully transparent pixels. This is generally recommended, but take care as this is\n  technically a lossy transformation and may be unsuitable for some specific applications.\n\nMore advanced options can be found by running `oxipng --help`, or viewed [here](MANUAL.txt).\n\nSome options have both short (`-a`) and long (`--alpha`) forms. Which form you use is just a\nmatter of preference. Multiple short options can be combined together, e.g.:\n`-savvo6` is equivalent to to `--strip safe --alpha --verbose --verbose --opt 6`.\nAll options are case-sensitive.\n\n\\* Note that oxipng is not a brute-force optimizer. This means that while higher optimization levels\nare almost always better or equal to lower levels, this is not guaranteed and it is possible in\nrare circumstances that a lower level may give a marginally smaller output. Similarly, using Zopfli\ncompression (`-Z`) is not guaranteed to always be better than without.\n\n## Git integration via [pre-commit]\n\nCreate a `.pre-commit-config.yaml` file like this, or add the lines after the `repos` map\npreamble to an already existing one:\n\n```yaml\nrepos:\n  - repo: https://github.com/shssoichiro/oxipng\n    rev: v9.0.0\n    hooks:\n      - id: oxipng\n        args: [\"-o\", \"4\", \"--strip\", \"safe\", \"--alpha\"]\n```\n[pre-commit]: https://pre-commit.com/\n\n## Docker\n\nA Docker image is availlable at `ghcr.io/shssoichiro/oxipng` for `linux/amd64` and `linux/arm64`.\n\nYou can use it the following way:\n\n```bash\ndocker run --rm -v $(pwd):/work ghcr.io/shssoichiro/oxipng -o 4 /work/file.png\n```\n\n## Library Usage\n\nAlthough originally intended to be used as an executable, Oxipng can also be used as a library in\nother Rust projects. To do so, simply add Oxipng as a dependency in your Cargo.toml. You should then\nhave access to all of the library functions [documented here](https://docs.rs/oxipng). The simplest\nmethod of usage involves creating an [Options\nstruct](https://docs.rs/oxipng/latest/oxipng/struct.Options.html) and passing it, along with an\ninput filename, into the [optimize function](https://docs.rs/oxipng/latest/oxipng/fn.optimize.html).\n\nIt is recommended to disable the \"binary\" feature when including Oxipng as a library. Currently, there is\nno simple way to just disable one feature in Cargo, it has to be done by disabling default features\nand specifying the desired ones, for example:\n`oxipng = { version = \"9.0\", features = [\"parallel\", \"zopfli\", \"filetime\"], default-features = false }`\n\n## Software using Oxipng\n\n- [ImageOptim](https://imageoptim.com): Mac app and web service for optimizing images\n- [Squoosh](https://squoosh.app): Web app for optimizing images\n- [FileOptimizer](https://nikkhokkho.sourceforge.io/?page=FileOptimizer): Windows app for optimizing files\n- [Curtial](https://github.com/Huluti/Curtail): Linux app for optimizing images\n- [pyoxipng](https://pypi.org/project/pyoxipng/): Python wrapper for Oxipng\n- [jSquash](https://github.com/jamsinclair/jSquash): Collection of WebAssembly image codecs\n- [Trunk](https://trunk.io): Developer experience toolkit for managing code\n\n## History\n\nOxipng began as a complete rewrite of the OptiPNG project,\nwhich was assumed to be dead as no commit had been made to it since March 2014.\n(OptiPNG has since released a new version, after Oxipng was first released.)\nThe name has been changed to avoid confusion and potential legal issues.\n\nThe core goal of rewriting OptiPNG was to implement multithreading,\nwhich would be very difficult to do within the existing C codebase of OptiPNG.\nThis also served as an opportunity to choose a more modern, safer language (Rust).\n\nNote that, while similar, Oxipng is not a drop-in replacement for OptiPNG.\nIf you are migrating from OptiPNG, please check the [help](MANUAL.txt) before using.\n\n## Contributing\n\nAny contributions are welcome and will be accepted via pull request on GitHub. Bug reports can be\nfiled via GitHub issues. Please include as many details as possible. If you have the capability\nto submit a fix with the bug report, it is preferred that you do so via pull request,\nhowever you do not need to be a Rust developer to contribute.\nOther contributions (such as improving documentation or translations) are also welcome via GitHub.\n\n## License\n\nOxipng is open-source software, distributed under the MIT license.\n\n## Benchmarks\n\nTested Oxipng 9.0.0 (commit `c16519b38b0519988db625913be919d4f0e42f5d`, compiled\non `rustc 1.74.0-nightly (7b4d9e155 2023-09-28)`) against OptiPNG version 0.7.7,\nas packaged by Debian unstable, on a Linux 6.5.0-2-amd64 kernel, Intel Core\ni7-12700 CPU (8 performance cores, 4 efficiency cores, 20 threads), DDR5-5200\nRAM in dual channel configuration.\n\n```\n\nBenchmark 1: ./target/release/oxipng -P ./tests/files/rgb_16_should_be_grayscale_8.png\n  Time (mean ± σ):      59.6 ms ±   7.7 ms    [User: 77.4 ms, System: 3.6 ms]\n  Range (min … max):    53.3 ms …  89.9 ms    32 runs\n\nBenchmark 2: optipng -simulate ./tests/files/rgb_16_should_be_grayscale_8.png\n  Time (mean ± σ):     132.4 ms ±   0.8 ms    [User: 132.5 ms, System: 0.6 ms]\n  Range (min … max):   131.8 ms … 134.4 ms    22 runs\n\nSummary\n  ./target/release/oxipng -P ./tests/files/rgb_16_should_be_grayscale_8.png ran\n    2.22 ± 0.29 times faster than optipng -simulate ./tests/files/rgb_16_should_be_grayscale_8.png\n\nBenchmark 1: ./target/release/oxipng -o4 -P ./tests/files/rgb_16_should_be_grayscale_8.png\n  Time (mean ± σ):      88.7 ms ±   4.3 ms    [User: 270.3 ms, System: 11.0 ms]\n  Range (min … max):    86.8 ms … 109.4 ms    26 runs\n\nBenchmark 2: optipng -o 4 -simulate ./tests/files/rgb_16_should_be_grayscale_8.png\n  Time (mean ± σ):     444.9 ms ±   0.3 ms    [User: 444.8 ms, System: 0.7 ms]\n  Range (min … max):   444.4 ms … 445.6 ms    10 runs\n\nSummary\n  ./target/release/oxipng -o4 -P ./tests/files/rgb_16_should_be_grayscale_8.png ran\n    5.01 ± 0.25 times faster than optipng -o 4 -simulate ./tests/files/rgb_16_should_be_grayscale_8.png\n\n```\n"
        },
        {
          "name": "benches",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "xtask",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}