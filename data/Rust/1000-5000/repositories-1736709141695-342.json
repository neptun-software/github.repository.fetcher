{
  "metadata": {
    "timestamp": 1736709141695,
    "page": 342,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjM1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Kintaro/wtftw",
      "stars": 2384,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1103515625,
          "content": "# Compiled files\n*.o\n*.so\n*.rlib\n*.dll\n\n# Executables\n*.exe\n\n# Generated by Cargo\n/target/\n/.project\n\n*.racertmp\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.146484375,
          "content": "language: rust\nrust: nightly\n\nbefore_install:\n  - sudo apt-get -qq update\n  - sudo apt-get install -y libxinerama1 libxinerama-dev\n\nscript: make test\n"
        },
        {
          "name": "Cargo.lock",
          "type": "blob",
          "size": 9.384765625,
          "content": "# This file is automatically @generated by Cargo.\n# It is not intended for manual editing.\n[[package]]\nname = \"anyhow\"\nversion = \"1.0.34\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bf8dcb5b4bbaa28653b647d8c77bd4ed40183b48882e130c1f1ffb73de069fd7\"\n\n[[package]]\nname = \"arrayref\"\nversion = \"0.3.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a4c527152e37cf757a3f78aae5a06fbeefdb07ccc535c980a3208ee3060dd544\"\n\n[[package]]\nname = \"arrayvec\"\nversion = \"0.5.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"23b62fc65de8e4e7f52534fb52b0f3ed04746ae267519eef2a83941e8085068b\"\n\n[[package]]\nname = \"autocfg\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cdb031dd78e28731d87d56cc8ffef4a8f36ca26c38fe2de700543e627f8a464a\"\n\n[[package]]\nname = \"base64\"\nversion = \"0.12.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3441f0f7b02788e948e47f457ca01f1d7e6d92c693bc132c22b087d3141c03ff\"\n\n[[package]]\nname = \"bitflags\"\nversion = \"1.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cf1de2fe8c75bc145a2f577add951f8134889b4795d47466a54a5c846d691693\"\n\n[[package]]\nname = \"blake2b_simd\"\nversion = \"0.5.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"afa748e348ad3be8263be728124b24a24f268266f6f5d58af9d75f6a40b5c587\"\ndependencies = [\n \"arrayref\",\n \"arrayvec\",\n \"constant_time_eq\",\n]\n\n[[package]]\nname = \"cfg-if\"\nversion = \"0.1.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4785bdd1c96b2a846b2bd7cc02e86b6b3dbf14e7e53446c4f54c92a361040822\"\n\n[[package]]\nname = \"chrono\"\nversion = \"0.4.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"670ad68c9088c2a963aaa298cb369688cf3f9465ce5e2d4ca10e6e0098a1ce73\"\ndependencies = [\n \"libc\",\n \"num-integer\",\n \"num-traits\",\n \"time\",\n \"winapi\",\n]\n\n[[package]]\nname = \"constant_time_eq\"\nversion = \"0.1.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"245097e9a4535ee1e3e3931fcfcd55a796a44c643e8596ff6566d68f09b87bbc\"\n\n[[package]]\nname = \"crossbeam-utils\"\nversion = \"0.7.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c3c7c73a2d1e9fc0886a08b93e98eb643461230d5f1925e4036204d5f2e261a8\"\ndependencies = [\n \"autocfg\",\n \"cfg-if\",\n \"lazy_static\",\n]\n\n[[package]]\nname = \"dirs\"\nversion = \"3.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"142995ed02755914747cc6ca76fc7e4583cd18578746716d0508ea6ed558b9ff\"\ndependencies = [\n \"dirs-sys\",\n]\n\n[[package]]\nname = \"dirs-sys\"\nversion = \"0.3.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8e93d7f5705de3e49895a2b5e0b8855a1c27f080192ae9c32a6432d50741a57a\"\ndependencies = [\n \"libc\",\n \"redox_users\",\n \"winapi\",\n]\n\n[[package]]\nname = \"dylib\"\nversion = \"0.0.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f06c13073013a912b363eee1433572499a2028a6b05432dad09383124d64731e\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"getopts\"\nversion = \"0.2.21\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"14dbbfd5c71d70241ecf9e6f13737f7b5ce823821063188d7e46c41d371eebd5\"\ndependencies = [\n \"unicode-width\",\n]\n\n[[package]]\nname = \"getrandom\"\nversion = \"0.1.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fc587bc0ec293155d5bfa6b9891ec18a1e330c234f896ea47fbada4cadbe47e6\"\ndependencies = [\n \"cfg-if\",\n \"libc\",\n \"wasi 0.9.0+wasi-snapshot-preview1\",\n]\n\n[[package]]\nname = \"itoa\"\nversion = \"0.4.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dc6f3ad7b9d11a0c00842ff8de1b60ee58661048eb8049ed33c73594f359d7e6\"\n\n[[package]]\nname = \"lazy_static\"\nversion = \"1.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e2abad23fbc42b3700f2f279844dc832adb2b2eb069b2df918f455c4e18cc646\"\n\n[[package]]\nname = \"libc\"\nversion = \"0.2.80\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4d58d1b70b004888f764dfbf6a26a3b0342a1632d33968e4a179d8011c760614\"\n\n[[package]]\nname = \"log\"\nversion = \"0.4.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4fabed175da42fed1fa0746b0ea71f412aa9d35e76e95e59b192c64b9dc2bf8b\"\ndependencies = [\n \"cfg-if\",\n]\n\n[[package]]\nname = \"num-integer\"\nversion = \"0.1.44\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d2cc698a63b549a70bc047073d2949cce27cd1c7b0a4a862d08a8031bc2801db\"\ndependencies = [\n \"autocfg\",\n \"num-traits\",\n]\n\n[[package]]\nname = \"num-traits\"\nversion = \"0.2.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9a64b1ec5cda2586e284722486d802acf1f7dbdc623e2bfc57e65ca1cd099290\"\ndependencies = [\n \"autocfg\",\n]\n\n[[package]]\nname = \"pkg-config\"\nversion = \"0.3.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3831453b3449ceb48b6d9c7ad7c96d5ea673e9b470a1dc578c2ce6521230884c\"\n\n[[package]]\nname = \"redox_syscall\"\nversion = \"0.1.57\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"41cc0f7e4d5d4544e8861606a285bb08d3e70712ccc7d2b84d7c0ccfaf4b05ce\"\n\n[[package]]\nname = \"redox_users\"\nversion = \"0.3.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"de0737333e7a9502c789a36d7c7fa6092a49895d4faa31ca5df163857ded2e9d\"\ndependencies = [\n \"getrandom\",\n \"redox_syscall\",\n \"rust-argon2\",\n]\n\n[[package]]\nname = \"rust-argon2\"\nversion = \"0.8.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9dab61250775933275e84053ac235621dfb739556d5c54a2f2e9313b7cf43a19\"\ndependencies = [\n \"base64\",\n \"blake2b_simd\",\n \"constant_time_eq\",\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"ryu\"\nversion = \"1.0.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"71d301d4193d031abdd79ff7e3dd721168a9572ef3fe51a1517aba235bd8f86e\"\n\n[[package]]\nname = \"serde\"\nversion = \"1.0.117\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b88fa983de7720629c9387e9f517353ed404164b1e482c970a90c1a4aaf7dc1a\"\n\n[[package]]\nname = \"serde_json\"\nversion = \"1.0.59\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dcac07dbffa1c65e7f816ab9eba78eb142c6d44410f4eeba1e26e4f5dfa56b95\"\ndependencies = [\n \"itoa\",\n \"ryu\",\n \"serde\",\n]\n\n[[package]]\nname = \"simplelog\"\nversion = \"0.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2b2736f58087298a448859961d3f4a0850b832e72619d75adc69da7993c2cd3c\"\ndependencies = [\n \"chrono\",\n \"log\",\n \"termcolor\",\n]\n\n[[package]]\nname = \"termcolor\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bb6bfa289a4d7c5766392812c0a1f4c1ba45afa1ad47803c11e1f407d846d75f\"\ndependencies = [\n \"winapi-util\",\n]\n\n[[package]]\nname = \"time\"\nversion = \"0.1.44\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6db9e6914ab8b1ae1c260a4ae7a49b6c5611b40328a735b21862567685e73255\"\ndependencies = [\n \"libc\",\n \"wasi 0.10.0+wasi-snapshot-preview1\",\n \"winapi\",\n]\n\n[[package]]\nname = \"unicode-width\"\nversion = \"0.1.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9337591893a19b88d8d87f2cec1e73fad5cdfd10e5a6f349f498ad6ea2ffb1e3\"\n\n[[package]]\nname = \"wasi\"\nversion = \"0.9.0+wasi-snapshot-preview1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cccddf32554fecc6acb585f82a32a72e28b48f8c4c1883ddfeeeaa96f7d8e519\"\n\n[[package]]\nname = \"wasi\"\nversion = \"0.10.0+wasi-snapshot-preview1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1a143597ca7c7793eff794def352d41792a93c481eb1042423ff7ff72ba2c31f\"\n\n[[package]]\nname = \"winapi\"\nversion = \"0.3.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5c839a674fcd7a98952e593242ea400abe93992746761e38641405d28b00f419\"\ndependencies = [\n \"winapi-i686-pc-windows-gnu\",\n \"winapi-x86_64-pc-windows-gnu\",\n]\n\n[[package]]\nname = \"winapi-i686-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ac3b87c63620426dd9b991e5ce0329eff545bccbbb34f3be09ff6fb6ab51b7b6\"\n\n[[package]]\nname = \"winapi-util\"\nversion = \"0.1.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"70ec6ce85bb158151cae5e5c87f95a8e97d2c0c4b001223f33a334e3ce5de178\"\ndependencies = [\n \"winapi\",\n]\n\n[[package]]\nname = \"winapi-x86_64-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"712e227841d057c1ee1cd2fb22fa7e5a5461ae8e48fa2ca79ec42cfc1931183f\"\n\n[[package]]\nname = \"wtftw\"\nversion = \"0.4.4\"\ndependencies = [\n \"anyhow\",\n \"bitflags\",\n \"dirs\",\n \"dylib\",\n \"getopts\",\n \"libc\",\n \"log\",\n \"serde_json\",\n \"simplelog\",\n \"wtftw_core\",\n \"wtftw_xlib\",\n \"zombie\",\n]\n\n[[package]]\nname = \"wtftw_core\"\nversion = \"0.3.2\"\ndependencies = [\n \"anyhow\",\n \"bitflags\",\n \"dirs\",\n \"dylib\",\n \"libc\",\n \"log\",\n \"serde_json\",\n]\n\n[[package]]\nname = \"wtftw_xlib\"\nversion = \"0.4.0\"\ndependencies = [\n \"libc\",\n \"log\",\n \"wtftw_core\",\n \"x11\",\n]\n\n[[package]]\nname = \"x11\"\nversion = \"2.18.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"77ecd092546cb16f25783a5451538e73afc8d32e242648d54f4ae5459ba1e773\"\ndependencies = [\n \"libc\",\n \"pkg-config\",\n]\n\n[[package]]\nname = \"zombie\"\nversion = \"0.0.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a2a923d29f39b60d437dc36e2f33e88493dd4386a397820105ac17100859c6e6\"\ndependencies = [\n \"libc\",\n]\n"
        },
        {
          "name": "Cargo.toml",
          "type": "blob",
          "size": 0.4375,
          "content": "[project]\n\nname = \"wtftw\"\nversion = \"0.4.4\"\nauthors = [\"Simon Wollwage\"]\nedition = \"2018\"\n\n[dependencies]\nanyhow = \"1.0.34\"\nbitflags = \"1.2.1\"\nserde_json = \"1.0.59\"\ngetopts = \"0.2.21\"\nlog = \"0.4.11\"\nlibc = \"0.2.80\"\ndylib = \"0.0.3\"\nsimplelog = \"0.8.0\"\nzombie = \"0.0.4\"\nwtftw_core = { path = \"core\" }\ndirs = \"3.0.1\"\n\n[dependencies.wtftw_xlib]\npath = \"xlib\"\n\n[lib]\nname = \"wtftw\"\npath = \"core/src/lib.rs\"\n\n[[bin]]\nname = \"wtftw\"\npath = \"src/wtftw.rs\"\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.443359375,
          "content": "Copyright (c) 2014, Simon Wollwage\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\n* Neither the name of wtftw nor the names of its\n  contributors may be used to endorse or promote products derived from\n  this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 0.166015625,
          "content": "test: test_core test_xlib build_all\n\ntest_core:\n\tcd core && cargo test\n\ntest_xlib:\n\tcd xlib && cargo test\n\nbuild_all:\n\tcargo build\n\n.PHONY: test_core test_xlib build_all\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.3662109375,
          "content": "wtftw\n=====\n\n\nWindow Tiling For The Win. A tiling window manager written in Rust\n\n![Screenshot](https://i.imgur.com/8KzbKB9.jpg)\n\n## Status\n[![Build Status](https://travis-ci.org/Kintaro/wtftw.svg?branch=master)](https://travis-ci.org/Kintaro/wtftw)\n[![Gitter](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/Kintaro/wtftw?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n[![Issue Stats](http://www.issuestats.com/github/Kintaro/wtftw/badge/pr?style=flat)](http://www.issuestats.com/github/Kintaro/wtftw)\n[![Issue Stats](http://www.issuestats.com/github/Kintaro/wtftw/badge/issue?style=flat)](http://www.issuestats.com/github/Kintaro/wtftw)\n\n## Build\n\n**Notice:** Wtftw is compiled against Rust1.2.0+, so make sure to have a recent enough *rustc*.\n\nTo build it, just run\n\n```\ncargo build\n```\n\n### Common build issues\nOn OSX, you might get a linker error when linking against X11 or Xinerama. For example:\n\n```\nld: library not found for -lXinerama\n```\n\nYou need to install XQuartz to get the X11 libraries, and make sure that they are found. Then just run\n\n```\nLIBRARY_PATH=/opt/X11/lib cargo build\n```\n\nOn Ubuntu if you have this issue, simply install libxinerama-dev and restart cargo build\n\n```\nsudo apt-get install libxinerama-dev\n```\n\n## Testing\n\nIf you want to have your own custom config, create one in *~/.wtftw/src/config.rs*.\nYou can find an example config in *config/config.rs* in this repository.\n\nFor testing, install either **Xnest** or **Xephyr** on your system and run\n\n```\nXephyr -screen 800x600 :1 &\nDISPLAY=:1 ./target/release/wtftw &\nDISPLAY=:1 thunar & (or whatever application you want to run)\n```\n\nor respectively\n\n```\nXnest -geometry 800x600+0+0 :1 &\nDISPLAY=:1 ./target/release/wtftw &\nDISPLAY=:1 thunar &\n```\n\n## Installation\n\nCompile it normally with **cargo build --release**, and then either use it with your .xinitrc\nor your favorite display manager. If you want to configure it, take a look at the example config in\n*config/*.\n\nAfter the first start, the config needs to be placed in *~/.wtftw/src/config.rs*. Voila.\n\n## Commands\n\nIn a default setting, the commands are hardcoded, but can be changed in your own config.\n\n### Switch workspace\n```\nALT+num\n```\n\n### Open terminal\n```\nALT+SHIFT+Enter\n```\n\n## Additional layouts and other extensions\n\nTo keep wtftw as small and lean as possible, all layouts (except the standard one) have been moved to \n[wtftw-contrib](https://github.com/Kintaro/wtftw-contrib)\n\n\n## FAQ\n\n#### Does it work with dual monitors?\n\nYes, yes it does. Just use xrandr and you're set. Wtftw will automatically detect the changed setup. It works with as many monitors as your xrandr and xinerama can handle.\n\n#### What are the alternatives to xmobar?\n\nDzen\n\n#### What font and programs are you using on the screenshot?\n\nThe font is Envy Code R, and the programs are xmobar, vim, htop, screenfetch, weechat and ncmpcpp.\n\n#### Why should I use wtftw than dwm or even awesome?\n\nThat is more of a personal choice. Wtftw is akin to xmonad. You can do almost anything you want with the config file. Extend it, change it at runtime, your only boundary is the rust language itself. Plus, using it would help a Rust project to detect bugs and improve it.\n\n## Tutorial\n\nI will be making a tutorial series on how to write a window manager. A bit busy with my thesis\nat the moment, but the first part is [here](https://kintaro.github.io/rust/window-manager-in-rust-01/)\n"
        },
        {
          "name": "config",
          "type": "tree",
          "content": null
        },
        {
          "name": "core",
          "type": "tree",
          "content": null
        },
        {
          "name": "default.nix",
          "type": "blob",
          "size": 0.2841796875,
          "content": "with import <nixpkgs> {}; with xlibs;\n  \n  stdenv.mkDerivation rec {\n      name = \"wtftw\";\n      buildInputs = [ makeWrapper cargo rustcMaster libXinerama libX11 ];\n      buildPhase = \"cargo build\";\n      libPath = lib.makeLibraryPath [ libXinerama libX11 ];\n      unpackPhase = \"true\";\n  }\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "xlib",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}