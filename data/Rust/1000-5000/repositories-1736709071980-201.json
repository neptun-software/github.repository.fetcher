{
  "metadata": {
    "timestamp": 1736709071980,
    "page": 201,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "rkyv/rkyv",
      "stars": 3058,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".cargo",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.013671875,
          "content": "*   text=auto\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.302734375,
          "content": "# Ignore build artifacts, backup files, and lockfiles\n\ntarget/\n**.*.rs.bk\nCargo.lock\n\n# Changes to VS Code configs are ignored by default. We intentionally check in\n# some settings when they're useful defaults.\n\n.vscode\n\n# Files ending in tildes are almost always temporary and not intended for\n# checkin.\n\n*~\n"
        },
        {
          "name": ".vscode",
          "type": "tree",
          "content": null
        },
        {
          "name": "Cargo.toml",
          "type": "blob",
          "size": 1.685546875,
          "content": "[workspace]\nmembers = [\n    \"benchlib\",\n    \"rkyv\",\n    \"rkyv_derive\",\n    # \"rkyv_dyn\",\n    # \"rkyv_dyn_derive\",\n    # \"rkyv_dyn_test\",\n]\ndefault-members = [\"rkyv\", \"rkyv_derive\"]\nresolver = \"2\"\n\n[workspace.package]\nversion = \"0.8.9\"\nauthors = [\"David Koloski <djkoloski@gmail.com>\"]\nedition = \"2021\"\nrust-version = \"1.81\"\nlicense = \"MIT\"\nreadme = \"README.md\"\nrepository = \"https://github.com/rkyv/rkyv\"\n\n[workspace.dependencies]\nbytecheck = { version = \"0.8\", default-features = false, features = [\"simdutf8\"] }\ndivan = { version = \"0.1\", default-features = false }\nhashbrown = { version = \"0.15\", default-features = false }\nmunge = { version = \"0.4\", default-features = false }\nproc-macro2 = { version = \"1\", default-features = false }\nptr_meta = { version = \"0.3\", default-features = false }\nquote = { version = \"1\", default-features = false }\nrend = { version = \"0.5\", default-features = false }\nrancor = { version = \"0.1\", default-features = false }\nrkyv = { version = \"0.8\", default-features = false, path = \"rkyv\" }\nrkyv_derive = { version = \"=0.8.9\", default-features = false, path = \"rkyv_derive\" }\n# rkyv_dyn = { version = \"=0.8.0-rc.1\", default-features = false, path = \"rkyv_dyn\" }\n# rkyv_dyn_derive = { version = \"=0.8.0-rc.1\", default-features = false, path = \"rkyv_dyn_derive\" }\nrustversion = { version = \"1\", default-features = false }\nsyn = { version = \"2.0.73\", default-features = false }\ntrybuild = { version = \"1\", default-features = false }\n\n[patch.crates-io]\nbytecheck = { git = \"https://github.com/rkyv/bytecheck\" }\nptr_meta = { git = \"https://github.com/rkyv/ptr_meta\" }\nrancor = { git = \"https://github.com/rkyv/rancor\" }\nrend = { git = \"https://github.com/rkyv/rend\" }\n\n[profile.bench]\ndebug = true\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0283203125,
          "content": "Copyright 2021 David Koloski\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.125,
          "content": "<p align=\"center\">\n    <img src=\"https://raw.githubusercontent.com/rkyv/rkyv/master/media/logo_text_color.svg\" alt=\"rkyv\">\n</p>\n<p align=\"center\">\n    rkyv (<em>archive</em>) is a zero-copy deserialization framework for Rust\n</p>\n<p align=\"center\">\n    <a href=\"https://discord.gg/65F6MdnbQh\"><img src=\"https://img.shields.io/discord/822925794249539645\" alt=\"Discord\"></a>\n    <a href=\"https://crates.io/crates/rkyv\"><img src=\"https://img.shields.io/crates/v/rkyv.svg\" alt=\"crates.io\"></a>\n    <a href=\"https://docs.rs/rkyv\"><img src=\"https://img.shields.io/docsrs/rkyv.svg\" alt=\"docs.rs\"></a>\n    <a href=\"https://github.com/rkyv/rkyv/blob/master/LICENSE\"><img src=\"https://img.shields.io/badge/license-MIT-blue.svg\" alt=\"MIT license\"></a>\n</p>\n\n# Resources\n\n## Learning Materials\n\n- The [rkyv book](https://rkyv.github.io/rkyv) covers the motivation, architecture, and major\n  features of rkyv\n- The [rkyv discord](https://discord.gg/65F6MdnbQh) is a great place to get help with specific issues and meet\n  other people using rkyv\n\n## Documentation\n\n- [rkyv](https://docs.rs/rkyv), the core library\n- [rkyv_dyn](https://docs.rs/rkyv_dyn), which adds trait object support to rkyv\n\n## Benchmarks\n\n- The [rust serialization benchmark](https://github.com/djkoloski/rust_serialization_benchmark) is a\n  shootout style benchmark comparing many rust serialization solutions. It includes special\n  benchmarks for zero-copy serialization solutions like rkyv.\n\n## Sister Crates\n\n- [rend](https://github.com/rkyv/rend), which rkyv uses for endian-agnostic features\n- [bytecheck](https://github.com/rkyv/bytecheck), which rkyv uses for validation\n- [rancor](https://github.com/rkyv/rancor), which rkyv uses for error handling\n- [ptr_meta](https://github.com/rkyv/ptr_meta), which rkyv uses for pointer manipulation\n\n# Example\n\n```rust\nuse rkyv::{deserialize, rancor::Error, Archive, Deserialize, Serialize};\n\n#[derive(Archive, Deserialize, Serialize, Debug, PartialEq)]\n#[rkyv(\n    // This will generate a PartialEq impl between our unarchived\n    // and archived types\n    compare(PartialEq),\n    // Derives can be passed through to the generated type:\n    derive(Debug),\n)]\nstruct Test {\n    int: u8,\n    string: String,\n    option: Option<Vec<i32>>,\n}\n\nfn main() {\n    let value = Test {\n        int: 42,\n        string: \"hello world\".to_string(),\n        option: Some(vec![1, 2, 3, 4]),\n    };\n\n    // Serializing is as easy as a single function call\n    let _bytes = rkyv::to_bytes::<Error>(&value).unwrap();\n\n    // Or you can customize your serialization for better performance or control\n    // over resource usage\n    use rkyv::{api::high::to_bytes_with_alloc, ser::allocator::Arena};\n\n    let mut arena = Arena::new();\n    let bytes =\n        to_bytes_with_alloc::<_, Error>(&value, arena.acquire()).unwrap();\n\n    // You can use the safe API for fast zero-copy deserialization\n    let archived = rkyv::access::<ArchivedTest, Error>(&bytes[..]).unwrap();\n    assert_eq!(archived, &value);\n\n    // Or you can use the unsafe API for maximum performance\n    let archived =\n        unsafe { rkyv::access_unchecked::<ArchivedTest>(&bytes[..]) };\n    assert_eq!(archived, &value);\n\n    // And you can always deserialize back to the original type\n    let deserialized = deserialize::<Test, Error>(archived).unwrap();\n    assert_eq!(deserialized, value);\n}\n```\n\n_Note: the safe API requires the `bytecheck` feature (enabled by default)_\n_Read more about [available features](https://docs.rs/rkyv/latest/rkyv/#features)._\n\n# Thanks\n\nThanks to all the sponsors that keep development sustainable. Special thanks to the following sponsors for going above and beyond supporting rkyv:\n\n## Bronze Sponsors\n\n<p align=\"center\">\n    <a href=\"https://climatiq.io\">\n        <img src=\"https://raw.githubusercontent.com/rkyv/rkyv/master/media/sponsors/climatiq.png\" alt=\"Climatiq\">\n    </a>\n</p>\n\n> Climatiq provides an embedded carbon intelligence solution that enables developers to automate GHG emission calculations based on verified scientific models. Its suite of products includes the largest dataset of emission factors, and intelligent APIs that integrate with any software platform for real time monitoring of greenhouse gas emissions.\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.56640625,
          "content": "# Security Policy\n\n## Supported Versions\n\nThese versions are currently being supported with security updates:\n\n| Version | Supported          |\n| ------- | ------------------ |\n| 0.7.x   | :white_check_mark: |\n| 0.6.x   | :white_check_mark: |\n| < 0.6   | :x:                |\n\n## Reporting a Vulnerability\n\nPlease report vulnerabilities by emailing djkoloski@gmail.com. I will\nrespond within 24 hours and will update you at least once a week on progress\ntowards fixing the issue. If the vulnerability is accepted, I will file a\nCVE after fixing the bug and list you as an author.\n"
        },
        {
          "name": "benchlib",
          "type": "tree",
          "content": null
        },
        {
          "name": "book.toml",
          "type": "blob",
          "size": 0.203125,
          "content": "[book]\nauthors = [\"David Koloski\"]\nlanguage = \"en\"\nmultilingual = false\nsrc = \"book_src\"\ntitle = \"rkyv\"\n\n[output.html]\ncname = \"rkyv.org\"\nedit-url-template = \"https://github.com/rkyv/rkyv/edit/master/{path}\"\n"
        },
        {
          "name": "book_src",
          "type": "tree",
          "content": null
        },
        {
          "name": "media",
          "type": "tree",
          "content": null
        },
        {
          "name": "rkyv",
          "type": "tree",
          "content": null
        },
        {
          "name": "rkyv_derive",
          "type": "tree",
          "content": null
        },
        {
          "name": "rkyv_dyn",
          "type": "tree",
          "content": null
        },
        {
          "name": "rkyv_dyn_derive",
          "type": "tree",
          "content": null
        },
        {
          "name": "rkyv_dyn_test",
          "type": "tree",
          "content": null
        },
        {
          "name": "rustfmt.toml",
          "type": "blob",
          "size": 0.400390625,
          "content": "max_width = 80\ncomment_width = 80\nwrap_comments = true\ngroup_imports = \"StdExternalCrate\"\nimports_granularity = \"Crate\"\ncondense_wildcard_suffixes = true\nerror_on_line_overflow = true\nerror_on_unformatted = true\nformat_code_in_doc_comments = true\nformat_macro_matchers = true\nformat_macro_bodies = true\nformat_strings = true\nhex_literal_case = \"Lower\"\nnormalize_comments = true\nuse_field_init_shorthand = true\n"
        }
      ]
    }
  ]
}