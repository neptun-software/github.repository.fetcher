{
  "metadata": {
    "timestamp": 1736709234948,
    "page": 541,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjU1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "ms-jpq/sad",
      "stars": 1814,
      "defaultBranch": "senpai",
      "files": [
        {
          "name": ".cargo",
          "type": "tree",
          "content": null
        },
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.0703125,
          "content": "**\n\n!Cargo.toml\n!src/\n!tests/\n\n!ci/deb/Dockerfile\n!ci/linux/Dockerfile\n\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.041015625,
          "content": "/.git/\n/.venv/\n/target/\n/packages/\n/temp/\n"
        },
        {
          "name": "Cargo.lock",
          "type": "blob",
          "size": 18.2138671875,
          "content": "# This file is automatically @generated by Cargo.\n# It is not intended for manual editing.\nversion = 3\n\n[[package]]\nname = \"addr2line\"\nversion = \"0.22.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6e4503c46a5c0c7844e948c9a4d6acd9f50cccb4de1c48eb9e291ea17470c678\"\ndependencies = [\n \"gimli\",\n]\n\n[[package]]\nname = \"adler\"\nversion = \"1.0.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f26201604c87b1e01bd3d98f8d5d9a8fcbb815e8cedb41ffccbeb4bf593a35fe\"\n\n[[package]]\nname = \"aho-corasick\"\nversion = \"1.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8e60d3430d3a69478ad0993f19238d2df97c507009a52b3c10addcd7f6bcb916\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"ansi_term\"\nversion = \"0.12.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d52a9bb7ec0cf484c551830a7ce27bd20d67eac647e1befb56b0be4ee39a55d2\"\ndependencies = [\n \"winapi\",\n]\n\n[[package]]\nname = \"anstream\"\nversion = \"0.6.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"418c75fa768af9c03be99d17643f93f79bbba589895012a80e3452a19ddda15b\"\ndependencies = [\n \"anstyle\",\n \"anstyle-parse\",\n \"anstyle-query\",\n \"anstyle-wincon\",\n \"colorchoice\",\n \"is_terminal_polyfill\",\n \"utf8parse\",\n]\n\n[[package]]\nname = \"anstyle\"\nversion = \"1.0.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1bec1de6f59aedf83baf9ff929c98f2ad654b97c9510f4e70cf6f661d49fd5b1\"\n\n[[package]]\nname = \"anstyle-parse\"\nversion = \"0.2.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c03a11a9034d92058ceb6ee011ce58af4a9bf61491aa7e1e59ecd24bd40d22d4\"\ndependencies = [\n \"utf8parse\",\n]\n\n[[package]]\nname = \"anstyle-query\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ad186efb764318d35165f1758e7dcef3b10628e26d41a44bc5550652e6804391\"\ndependencies = [\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"anstyle-wincon\"\nversion = \"3.0.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"61a38449feb7068f52bb06c12759005cf459ee52bb4adc1d5a7c4322d716fb19\"\ndependencies = [\n \"anstyle\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"autocfg\"\nversion = \"1.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0c4b4d0bd25bd0b74681c0ad21497610ce1b7c91b1022cd21c80c6fbdd9476b0\"\n\n[[package]]\nname = \"backtrace\"\nversion = \"0.3.73\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5cc23269a4f8976d0a4d2e7109211a419fe30e8d88d677cd60b6bc79c5732e0a\"\ndependencies = [\n \"addr2line\",\n \"cc\",\n \"cfg-if\",\n \"libc\",\n \"miniz_oxide\",\n \"object\",\n \"rustc-demangle\",\n]\n\n[[package]]\nname = \"bitflags\"\nversion = \"2.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b048fb63fd8b5923fc5aa7b340d8e156aec7ec02f0c78fa8a6ddc2613f6f71de\"\n\n[[package]]\nname = \"bytes\"\nversion = \"1.6.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a12916984aab3fa6e39d655a33e09c0071eb36d6ab3aea5c2d78551f1df6d952\"\n\n[[package]]\nname = \"cc\"\nversion = \"1.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"47de7e88bbbd467951ae7f5a6f34f70d1b4d9cfce53d5fd70f74ebe118b3db56\"\n\n[[package]]\nname = \"cfg-if\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd\"\n\n[[package]]\nname = \"clap\"\nversion = \"4.5.21\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fb3b4b9e5a7c7514dfa52869339ee98b3156b0bfb4e8a77c4ff4babb64b1604f\"\ndependencies = [\n \"clap_builder\",\n \"clap_derive\",\n]\n\n[[package]]\nname = \"clap_builder\"\nversion = \"4.5.21\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b17a95aa67cc7b5ebd32aa5370189aa0d79069ef1c64ce893bd30fb24bff20ec\"\ndependencies = [\n \"anstream\",\n \"anstyle\",\n \"clap_lex\",\n \"strsim\",\n \"terminal_size\",\n]\n\n[[package]]\nname = \"clap_derive\"\nversion = \"4.5.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4ac6a0c7b1a9e9a5186361f67dfa1b88213572f427fb9ab038efb2bd8c582dab\"\ndependencies = [\n \"heck\",\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"clap_lex\"\nversion = \"0.7.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4b82cf0babdbd58558212896d1a4272303a57bdb245c2bf1147185fb45640e70\"\n\n[[package]]\nname = \"colorchoice\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0b6a852b24ab71dffc585bcb46eaf7959d175cb865a7152e35b348d1b2960422\"\n\n[[package]]\nname = \"difflib\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6184e33543162437515c2e2b48714794e37845ec9851711914eec9d308f6ebe8\"\n\n[[package]]\nname = \"either\"\nversion = \"1.13.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"60b1af1c220855b6ceac025d3f6ecdd2b7c4894bfe9cd9bda4fbb4bc7c0d4cf0\"\n\n[[package]]\nname = \"env_home\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c7f84e12ccf0a7ddc17a6c41c93326024c42920d7ee630d04950e6926645c0fe\"\n\n[[package]]\nname = \"errno\"\nversion = \"0.3.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"534c5cf6194dfab3db3242765c03bbe257cf92f22b38f6bc0c58d59108a820ba\"\ndependencies = [\n \"libc\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"futures\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"65bc07b1a8bc7c85c5f2e110c476c7389b4554ba72af57d8445ea63a576b0876\"\ndependencies = [\n \"futures-channel\",\n \"futures-core\",\n \"futures-executor\",\n \"futures-io\",\n \"futures-sink\",\n \"futures-task\",\n \"futures-util\",\n]\n\n[[package]]\nname = \"futures-channel\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2dff15bf788c671c1934e366d07e30c1814a8ef514e1af724a602e8a2fbe1b10\"\ndependencies = [\n \"futures-core\",\n \"futures-sink\",\n]\n\n[[package]]\nname = \"futures-core\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"05f29059c0c2090612e8d742178b0580d2dc940c837851ad723096f87af6663e\"\n\n[[package]]\nname = \"futures-executor\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1e28d1d997f585e54aebc3f97d39e72338912123a67330d723fdbb564d646c9f\"\ndependencies = [\n \"futures-core\",\n \"futures-task\",\n \"futures-util\",\n]\n\n[[package]]\nname = \"futures-io\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9e5c1b78ca4aae1ac06c48a526a655760685149f0d465d21f37abfe57ce075c6\"\n\n[[package]]\nname = \"futures-macro\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"162ee34ebcb7c64a8abebc059ce0fee27c2262618d7b60ed8faf72fef13c3650\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"futures-sink\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e575fab7d1e0dcb8d0c7bcf9a63ee213816ab51902e6d244a95819acacf1d4f7\"\n\n[[package]]\nname = \"futures-task\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f90f7dce0722e95104fcb095585910c0977252f286e354b5e3bd38902cd99988\"\n\n[[package]]\nname = \"futures-util\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9fa08315bb612088cc391249efdc3bc77536f16c91f6cf495e6fbe85b20a4a81\"\ndependencies = [\n \"futures-channel\",\n \"futures-core\",\n \"futures-io\",\n \"futures-macro\",\n \"futures-sink\",\n \"futures-task\",\n \"memchr\",\n \"pin-project-lite\",\n \"pin-utils\",\n \"slab\",\n]\n\n[[package]]\nname = \"getrandom\"\nversion = \"0.2.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c4567c8db10ae91089c99af84c68c38da3ec2f087c3f82960bcdbf3656b6f4d7\"\ndependencies = [\n \"cfg-if\",\n \"libc\",\n \"wasi\",\n]\n\n[[package]]\nname = \"gimli\"\nversion = \"0.29.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"40ecd4077b5ae9fd2e9e169b102c6c330d0605168eb0e8bf79952b256dbefffd\"\n\n[[package]]\nname = \"heck\"\nversion = \"0.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2304e00983f87ffb38b55b444b5e3b60a884b5d30c0fca7d82fe33449bbe55ea\"\n\n[[package]]\nname = \"hermit-abi\"\nversion = \"0.3.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d231dfb89cfffdbc30e7fc41579ed6066ad03abda9e567ccafae602b97ec5024\"\n\n[[package]]\nname = \"is_terminal_polyfill\"\nversion = \"1.70.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f8478577c03552c21db0e2724ffb8986a5ce7af88107e6be5d2ee6e158c12800\"\n\n[[package]]\nname = \"libc\"\nversion = \"0.2.155\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"97b3888a4aecf77e811145cadf6eef5901f4782c53886191b2f693f24761847c\"\n\n[[package]]\nname = \"linux-raw-sys\"\nversion = \"0.4.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"78b3ae25bc7c8c38cec158d1f2757ee79e9b3740fbc7ccf0e59e4b08d793fa89\"\n\n[[package]]\nname = \"memchr\"\nversion = \"2.7.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"78ca9ab1a0babb1e7d5695e3530886289c18cf2f87ec19a575a0abdce112e3a3\"\n\n[[package]]\nname = \"miniz_oxide\"\nversion = \"0.7.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b8a240ddb74feaf34a79a7add65a741f3167852fba007066dcac1ca548d89c08\"\ndependencies = [\n \"adler\",\n]\n\n[[package]]\nname = \"mio\"\nversion = \"1.0.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"80e04d1dcff3aae0704555fe5fee3bcfaf3d1fdf8a7e521d5b9d2b42acb52cec\"\ndependencies = [\n \"hermit-abi\",\n \"libc\",\n \"wasi\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"object\"\nversion = \"0.36.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"081b846d1d56ddfc18fdf1a922e4f6e07a11768ea1b92dec44e42b72712ccfce\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"pin-project-lite\"\nversion = \"0.2.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bda66fc9667c18cb2758a2ac84d1167245054bcf85d5d1aaa6923f45801bdd02\"\n\n[[package]]\nname = \"pin-utils\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8b870d8c151b6f2fb93e84a13146138f05d02ed11c7e7c54f8826aaaf7c9f184\"\n\n[[package]]\nname = \"proc-macro2\"\nversion = \"1.0.86\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5e719e8df665df0d1c8fbfd238015744736151d4445ec0836b8e628aae103b77\"\ndependencies = [\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"quote\"\nversion = \"1.0.36\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0fa76aaf39101c457836aec0ce2316dbdc3ab723cdda1c6bd4e6ad4208acaca7\"\ndependencies = [\n \"proc-macro2\",\n]\n\n[[package]]\nname = \"regex\"\nversion = \"1.11.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b544ef1b4eac5dc2db33ea63606ae9ffcfac26c1416a2806ae0bf5f56b201191\"\ndependencies = [\n \"aho-corasick\",\n \"memchr\",\n \"regex-automata\",\n \"regex-syntax\",\n]\n\n[[package]]\nname = \"regex-automata\"\nversion = \"0.4.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"809e8dc61f6de73b46c85f4c96486310fe304c434cfa43669d7b40f711150908\"\ndependencies = [\n \"aho-corasick\",\n \"memchr\",\n \"regex-syntax\",\n]\n\n[[package]]\nname = \"regex-syntax\"\nversion = \"0.8.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2b15c43186be67a4fd63bee50d0303afffcef381492ebe2c5d87f324e1b8815c\"\n\n[[package]]\nname = \"rustc-demangle\"\nversion = \"0.1.24\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"719b953e2095829ee67db738b3bfa9fa368c94900df327b3f07fe6e794d2fe1f\"\n\n[[package]]\nname = \"rustix\"\nversion = \"0.38.34\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"70dc5ec042f7a43c4a73241207cecc9873a06d45debb38b329f8541d85c2730f\"\ndependencies = [\n \"bitflags\",\n \"errno\",\n \"libc\",\n \"linux-raw-sys\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"sad\"\nversion = \"0.4.32\"\ndependencies = [\n \"aho-corasick\",\n \"ansi_term\",\n \"clap\",\n \"difflib\",\n \"futures\",\n \"regex\",\n \"shlex\",\n \"tokio\",\n \"uuid\",\n \"which\",\n]\n\n[[package]]\nname = \"shlex\"\nversion = \"1.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0fda2ff0d084019ba4d7c6f371c95d8fd75ce3524c3cb8fb653a3023f6323e64\"\n\n[[package]]\nname = \"signal-hook-registry\"\nversion = \"1.4.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a9e9e0b4211b72e7b8b6e85c807d36c212bdb33ea8587f7569562a84df5465b1\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"slab\"\nversion = \"0.4.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8f92a496fb766b417c996b9c5e57daf2f7ad3b0bebe1ccfca4856390e3d3bb67\"\ndependencies = [\n \"autocfg\",\n]\n\n[[package]]\nname = \"socket2\"\nversion = \"0.5.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ce305eb0b4296696835b71df73eb912e0f1ffd2556a501fcede6e0c50349191c\"\ndependencies = [\n \"libc\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"strsim\"\nversion = \"0.11.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7da8b5736845d9f2fcb837ea5d9e2628564b3b043a70948a3f0b778838c5fb4f\"\n\n[[package]]\nname = \"syn\"\nversion = \"2.0.71\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b146dcf730474b4bcd16c311627b31ede9ab149045db4d6088b3becaea046462\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"terminal_size\"\nversion = \"0.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5352447f921fda68cf61b4101566c0bdb5104eff6804d0678e5227580ab6a4e9\"\ndependencies = [\n \"rustix\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"tokio\"\nversion = \"1.41.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"22cfb5bee7a6a52939ca9224d6ac897bb669134078daa8735560897f69de4d33\"\ndependencies = [\n \"backtrace\",\n \"bytes\",\n \"libc\",\n \"mio\",\n \"pin-project-lite\",\n \"signal-hook-registry\",\n \"socket2\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"unicode-ident\"\nversion = \"1.0.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3354b9ac3fae1ff6755cb6db53683adb661634f67557942dea4facebec0fee4b\"\n\n[[package]]\nname = \"utf8parse\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"06abde3611657adf66d383f00b093d7faecc7fa57071cce2578660c9f1010821\"\n\n[[package]]\nname = \"uuid\"\nversion = \"1.10.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"81dfa00651efa65069b0b6b651f4aaa31ba9e3c3ce0137aaad053604ee7e0314\"\ndependencies = [\n \"getrandom\",\n]\n\n[[package]]\nname = \"wasi\"\nversion = \"0.11.0+wasi-snapshot-preview1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9c8d87e72b64a3b4db28d11ce29237c246188f4f51057d65a7eab63b7987e423\"\n\n[[package]]\nname = \"which\"\nversion = \"7.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fb4a9e33648339dc1642b0e36e21b3385e6148e289226f657c809dee59df5028\"\ndependencies = [\n \"either\",\n \"env_home\",\n \"rustix\",\n \"winsafe\",\n]\n\n[[package]]\nname = \"winapi\"\nversion = \"0.3.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5c839a674fcd7a98952e593242ea400abe93992746761e38641405d28b00f419\"\ndependencies = [\n \"winapi-i686-pc-windows-gnu\",\n \"winapi-x86_64-pc-windows-gnu\",\n]\n\n[[package]]\nname = \"winapi-i686-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ac3b87c63620426dd9b991e5ce0329eff545bccbbb34f3be09ff6fb6ab51b7b6\"\n\n[[package]]\nname = \"winapi-x86_64-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"712e227841d057c1ee1cd2fb22fa7e5a5461ae8e48fa2ca79ec42cfc1931183f\"\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.52.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"282be5f36a8ce781fad8c8ae18fa3f9beff57ec1b52cb3de0789201425d9a33d\"\ndependencies = [\n \"windows-targets\",\n]\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.59.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1e38bc4d79ed67fd075bcc251a1c39b32a1776bbe92e5bef1f0bf1f8c531853b\"\ndependencies = [\n \"windows-targets\",\n]\n\n[[package]]\nname = \"windows-targets\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9b724f72796e036ab90c1021d4780d4d3d648aca59e491e6b98e725b84e99973\"\ndependencies = [\n \"windows_aarch64_gnullvm\",\n \"windows_aarch64_msvc\",\n \"windows_i686_gnu\",\n \"windows_i686_gnullvm\",\n \"windows_i686_msvc\",\n \"windows_x86_64_gnu\",\n \"windows_x86_64_gnullvm\",\n \"windows_x86_64_msvc\",\n]\n\n[[package]]\nname = \"windows_aarch64_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"32a4622180e7a0ec044bb555404c800bc9fd9ec262ec147edd5989ccd0c02cd3\"\n\n[[package]]\nname = \"windows_aarch64_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"09ec2a7bb152e2252b53fa7803150007879548bc709c039df7627cabbd05d469\"\n\n[[package]]\nname = \"windows_i686_gnu\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8e9b5ad5ab802e97eb8e295ac6720e509ee4c243f69d781394014ebfe8bbfa0b\"\n\n[[package]]\nname = \"windows_i686_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0eee52d38c090b3caa76c563b86c3a4bd71ef1a819287c19d586d7334ae8ed66\"\n\n[[package]]\nname = \"windows_i686_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"240948bc05c5e7c6dabba28bf89d89ffce3e303022809e73deaefe4f6ec56c66\"\n\n[[package]]\nname = \"windows_x86_64_gnu\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"147a5c80aabfbf0c7d901cb5895d1de30ef2907eb21fbbab29ca94c5b08b1a78\"\n\n[[package]]\nname = \"windows_x86_64_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"24d5b23dc417412679681396f2b49f3de8c1473deb516bd34410872eff51ed0d\"\n\n[[package]]\nname = \"windows_x86_64_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"589f6da84c646204747d1270a2a5661ea66ed1cced2631d546fdfb155959f9ec\"\n\n[[package]]\nname = \"winsafe\"\nversion = \"0.0.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d135d17ab770252ad95e9a872d365cf3090e3be864a34ab46f48555993efc904\"\n"
        },
        {
          "name": "Cargo.toml",
          "type": "blob",
          "size": 0.6025390625,
          "content": "[package]\nauthors     = [\"git@bigly.dog\"]\ndescription = \"Space Age seD | https://github.com/ms-jpq/sad\"\nedition     = \"2021\"\nname        = \"sad\"\nversion     = \"0.4.32\"\n\n\n[dependencies]\naho-corasick = { version = \"*\" }\nansi_term = { version = \"*\" }\nclap = { version = \"*\", features = [\"derive\", \"wrap_help\"] }\ndifflib = { version = \"*\" }\nfutures = { version = \"*\" }\nregex = { version = \"*\" }\nshlex = { version = \"*\" }\ntokio = { version = \"*\", features = [\n  \"fs\",\n  \"io-std\",\n  \"io-util\",\n  \"net\",\n  \"process\",\n  \"rt-multi-thread\",\n  \"signal\",\n] }\nuuid = { version = \"*\", features = [\"v4\"] }\nwhich = { version = \"*\" }\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.041015625,
          "content": "\nMIT License\n\nCopyright (c) 2020 whocares\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 1.1044921875,
          "content": "MAKEFLAGS += --jobs\nMAKEFLAGS += --no-builtin-rules\nMAKEFLAGS += --warn-undefined-variables\nSHELL := bash\n.DELETE_ON_ERROR:\n.ONESHELL:\n.SHELLFLAGS := --norc --noprofile -Eeuo pipefail -O dotglob -O nullglob -O failglob -O globstar -c\n\n.DEFAULT_GOAL := dev\n\n.PHONY: clean clobber lint mypy clippy deps build release ci test\n\nOS ?=\n\nifeq ($(OS),Windows_NT)\nVENV := Scripts\nelse\nVENV := bin\nendif\n\nclean:\n\tshopt -u failglob\n\trm -v -rf -- artifacts/*.{zip,deb} .mypy_cache/ target/ temp/\n\nclobber: clean\n\trm -v -rf -- .venv/\n\n.venv/$(VENV)/pip:\n\tpython3 -m venv -- .venv\n\n.venv/$(VENV)/mypy: .venv/$(VENV)/pip\n\t'$<' install --upgrade --requirement requirements.txt -- mypy types-PyYAML types-toml types-Jinja2\n\nmypy: .venv/$(VENV)/mypy\n\t'$<' -- .\n\ndev:\n\tcargo build\n\nclippy:\n\tcargo clippy --all-targets --all-features\n\nlint: mypy clippy\n\ndeps: .venv/$(VENV)/mypy\n\t.venv/$(VENV)/python3 ./build.py deps\n\nbuild: lint test\n\t.venv/$(VENV)/python3 ./build.py build\n\nrelease: .venv/$(VENV)/mypy\n\t.venv/$(VENV)/python3 ./build.py buildr -- \"$$TRIPLE\"\n\nci: .venv/$(VENV)/mypy\n\t.venv/$(VENV)/python3 ./ci/release.py\n\ntest:\n\tcargo test --locked\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.6025390625,
          "content": "# [SAD!](https://ms-jpq.github.io/sad)\n\n**Space Age seD**\n\n## What does it do?\n\nBasically `sad` is a **Batch File Edit** tool.\n\nIt will show you a really nice diff of proposed changes _before_ you commit them.\n\nUnlike `sed`, you can double check before you fat finger your edit.\n\n## Preview (with fzf)\n\nSelectively replace `std` -> `joseph joestar` in the `sad` repo.\n\nYou can pick and choose which changes to apply.\n\nYou can also choose the clustering factor for changes using `--unified=<n>`. (Same as in GNU diff)\n\n![preview1](https://github.com/ms-jpq/sad/raw/senpai/previews/preview1.gif)\n\n**If you have `delta` installed, try `--pager 'delta -s'` for side by side view**\n\n## Preview (no fzf)\n\nReplace all`'\"(\\d+)\"'` -> `'🌈$1🌈'` in the `chromium` repo.\n\nuse `--commit` or `-k` to commit changes all at once.\n\n`-c` is taken because `sad` has to trick `fzf` into thinking it's `bash` :)\n\n![preview2](https://github.com/ms-jpq/sad/raw/senpai/previews/preview2.gif)\n\n## How to use sad?\n\n**with fzf**\n\n```bash\nexport GIT_PAGER='<highlighter-of-your-choice>'\n# ^ can be done in your bash/zsh/rc file.\nfind \"$FIND_ARGS\" | sad '<pattern>' '<replacement>'\n```\nNote: `--multi` is passed to fzf so you can select multiple files with `Shift+tab` \n\n**without fzf**\n\n```bash\nfind \"$FIND_ARGS\" | sad '<pattern>' '<replacement>' | highlighter-of-your-choice\n```\n\nor\n\n```bash\nfind \"$FIND_ARGS\" | sad '<pattern>' '<replacement>' --pager=<highlighter-of-your-choice>\n```\n\nor\n\n```bash\nexport GIT_PAGER='<highlighter-of-your-choice>'\nfind \"$FIND_ARGS\" | sad '<pattern>' '<replacement>'\n```\n\n**gotta go fast**\n\nIf you wanna go fast.\n\n- preview to verify you really want the changes.\n\n- run with `--commit`, and redirect `stdout` to a file or `/dev/null`\n\n---\n\n## Requirements\n\nTechnically none of these are \"required\", but they make `sad` so much happier.\n\nIf you install the things below, `sad` will automatically use them. It's progressive enhancement!\n\n### Commandline fuzzer\n\n[**fzf**](https://github.com/junegunn/fzf)\n\n`sad` does not come with a UI, it uses `fzf` to perform selection.\n\n### Diff Colorizer\n\nAny `git` compatible colourizer would work. I prefer these two:\n\n[**delta**](https://github.com/dandavison/delta)\n\n`fd <files> | sad <pattern> <replacement> | delta`\n\n[**diff-so-fancy**](https://github.com/so-fancy/diff-so-fancy)\n\n`fd <files> | sad <pattern> <replacement> | diff-so-fancy | less`\n\n## Environmental Variables\n\n| Name        | Function                               |\n| ----------- | -------------------------------------- |\n| `GIT_PAGER` | `sad` will use the same pager as `git` |\n\n## Flags\n\n| Name             | Function                                  |\n| ---------------- | ----------------------------------------- |\n| `-f` `--flags`   | Regex flags, see below                    |\n| `-k` `--commit`  | No preview, write changes to file         |\n| `-0` `--read0`   | Use `\\x00` as stdin delimiter             |\n| `-e` `--exact`   | String literal mode                       |\n| `-p` `--pager`   | Colourizing program, disable = `never`    |\n| `--fzf`          | Additional Fzf options, disable = `never` |\n| `-u` `--unified` | Same as in GNU `diff`, affects hunk size  |\n\n## Regex Flags\n\nBy default, `sad` uses smartcase, and multiline matching.\n\nFor each options, lowercase toggles on and uppercase toggles off.\n\nie. `i` => on, `I` => off\n\n| Name | Function                                                                             |\n| ---- | ------------------------------------------------------------------------------------ |\n| `i`  | case insensitive (works for `--exact` mode as well)                                  |\n| `m`  | multiline: `^` `$` match each line                                                   |\n| `s`  | allow `.` match `\\n`                                                                 |\n| `u`  | swap the meaning of `*` and `*?` patterns, (normally `*` is lazy and `*?` is greedy) |\n| `x`  | ignore whitespace and allow `#` comments                                             |\n\n## Exit Codes\n\n| Code  | Meaning                                                                                                                |\n| ----- | ---------------------------------------------------------------------------------------------------------------------- |\n| `0`   | Good                                                                                                                   |\n| `1`   | Bad                                                                                                                    |\n| `130` | Interrupted (ie. user cancel), or if using `fzf`, [it will always exit `130`](https://github.com/ms-jpq/sad/issues/5). |\n\n## GET SAD NOW!\n\nFor scripting, use the following format:\n\n```bash\n# replace `x86_64-unknown-linux-gnu.deb` with your desired package\nwget 'https://github.com/ms-jpq/sad/releases/latest/download/x86_64-unknown-linux-gnu.deb'\n```\n\n### Homebrew:\n\n```bash\nbrew install sad\n```\n\n### Scoop:\n\n```bash\nscoop install sad\n```\n\n### Snap Store:\n\ncoming soon...\n\n### Distribution packages:\n\n##### Debian/Ubuntu:\n\nYou can download `sad` deb packages from the [github release page](https://github.com/ms-jpq/sad/releases/latest).\n\n##### Arch Linux:\n\nThere is an official Arch Linux package that can be installed via `pacman`:\n\n```\npacman -Syu sad\n```\n\n##### Other:\n\nMissing a package for your favourite distribution? Let us know!\n\n### Compile from source:\n\n##### Requirements:\n\nTo compile sad yourself you'll have to make sure you have\n[Rust](https://www.rust-lang.org/) and `cargo` installed.\n\n##### Install instructions:\n\nTo install cargo from source you can run the following commands:\n\n```bash\ncargo install --locked --all-features \\\n  --git https://github.com/ms-jpq/sad --branch senpai\n```\n\nIf you want to install it in a specific directory you can provide the `--root`\nflag, like so:\n\n```bash\ncargo install --locked --all-features --root=\"/usr/bin/\" \\\n  --git https://github.com/ms-jpq/sad --branch senpai\n```\n\n## What about stdin -> stdout\n\nIf you just want to edit the shell stream, I would recommend [`sd`](https://github.com/chmln/sd), it uses the same concept, but its more for in stream edits. `sad` was inspired by my initial usage of `sd`.\n\n```bash\ncommand1 | sd '<pattern>' '<replacement>' | command2\n```\n\n[`ripgrep`](https://github.com/BurntSushi/ripgrep) with `--replace` also works\n\n```bash\ncommand1 | rg --passthru --replace '<replacement>' -- '<pattern>' | command2\n```\n\nTake note however, `rg` will `exit 1`, it it finds no matches.\n\n## Thank yous\n\nSpecial thanks to [MadeOfMagicAndWires](https://github.com/MadeOfMagicAndWires) for their generous contribution for maintaining the AUR package.\n\n## Bugs\n\nPlease file an issue if you see one `<3`\n"
        },
        {
          "name": "RELEASE_NOTES.md",
          "type": "blob",
          "size": 0.5009765625,
          "content": "## Good news\n\nv0.4.31\n\n- Bump version purely for CI\n\nv0.4.30\n\n- Fix display issue with new fzf ( no longer use `\\n` as delimiter )\n\nv0.4.29\n\n- Revert multi-select preview, since it conflicts with incremental preview :(\n\n- Add PowerShell flag '\\r' flag under windows\n\nv0.4.28\n\n- Give up on trying to solve windows edge cases, instead of not working at all, it now works for utf-8 only\n\nv0.4.26\n\n- Reduce allocations\n\n- Preview multi-selects\n\n- Fewer dependencies\n\n- More robust signal handling\n\n**Released by CI**\n"
        },
        {
          "name": "_config.yml",
          "type": "blob",
          "size": 0.1015625,
          "content": "title: sad\n\nshowcase: True\n\nimages:\n  - https://github.com/ms-jpq/sad/raw/senpai/previews/preview1.gif\n\n"
        },
        {
          "name": "artifacts",
          "type": "tree",
          "content": null
        },
        {
          "name": "build.py",
          "type": "blob",
          "size": 5.0517578125,
          "content": "#!/usr/bin/env python3\n\nfrom argparse import ArgumentParser, Namespace\nfrom contextlib import nullcontext, suppress\nfrom fnmatch import fnmatch\nfrom locale import strxfrm\nfrom pathlib import Path, PurePath\nfrom platform import uname\nfrom posixpath import normcase\nfrom shutil import copy2, rmtree, which\nfrom subprocess import check_call\nfrom tomllib import loads\nfrom zipfile import ZipFile\n\nfrom jinja2 import Environment, FileSystemLoader, StrictUndefined\n\n_TOP_LEVEL = Path(__file__).resolve().parent\n_ARTS = _TOP_LEVEL / \"artifacts\"\n\n_DEFAULTS = {\n    \"Linux\": (\"unknown-linux\", \"musl\" if which(\"apk\") else \"gnu\"),\n    \"Darwin\": (\"apple\", \"darwin\"),\n    \"Windows\": (\"pc-windows\", \"gnu\"),\n}\n\n_TOOL_CHAINS = {\n    \"aarch64-apple-darwin\",\n    \"aarch64-pc-windows-msvc\",\n    \"aarch64-unknown-linux-gnu\",\n    \"aarch64-unknown-linux-musl\",\n    \"x86_64-apple-darwin\",\n    \"x86_64-pc-windows-gnu\",\n    \"x86_64-pc-windows-msvc\",\n    \"x86_64-unknown-linux-gnu\",\n    \"x86_64-unknown-linux-musl\",\n}\n\n_DPKG_ARCH = {\n    \"x86_64\": \"amd64\",\n    \"aarch64\": \"arm64\",\n}\n\nUNAME = uname()\n\n\ndef _deps() -> None:\n    if UNAME.system == \"Linux\" and (apt := which(\"apt\")):\n        check_call((\"sudo\", \"--\", apt, \"update\"), cwd=_TOP_LEVEL)\n        check_call(\n            (\n                \"sudo\",\n                \"--\",\n                apt,\n                \"install\",\n                \"--yes\",\n                \"--\",\n                \"gcc-mingw-w64\",  # windows\n                \"gcc-aarch64-linux-gnu\",  # aarch64\n                \"libc6-arm64-cross\",  # aarch64\n                \"libc6-dev-arm64-cross\",  # aarch64\n            ),\n            cwd=_TOP_LEVEL,\n        )\n    for toolchain in sorted(_TOOL_CHAINS, key=strxfrm):\n        check_call((\"rustup\", \"target\", \"add\", \"--\", toolchain), cwd=_TOP_LEVEL)\n\n\ndef _compile(triple: str) -> None:\n    check_call(\n        (\"cargo\", \"build\", \"--locked\", \"--release\", \"--target\", triple),\n        cwd=_TOP_LEVEL,\n    )\n\n\ndef _bin_path(triple: str) -> Path:\n    suffix = \".exe\" if \"windows\" in triple else \"\"\n    release = _TOP_LEVEL / \"target\" / triple / \"release\" / \"sad\"\n    return release.with_suffix(suffix)\n\n\ndef _archive(triple: str) -> None:\n    release = _bin_path(triple)\n    archive = (_ARTS / triple).with_suffix(\".zip\")\n    with ZipFile(archive, mode=\"w\") as fd:\n        fd.write(release, arcname=release.name)\n\n\ndef _deb(triple: str) -> None:\n    arch, _, _ = triple.partition(\"-\")\n    cargo = _TOP_LEVEL / \"Cargo.toml\"\n    templates = _TOP_LEVEL / \"ci\" / \"templates\"\n    ctrl = PurePath() / \"DEBIAN\" / \"control\"\n\n    release = _bin_path(triple)\n    tmp = _TOP_LEVEL / \"temp\" / triple\n\n    sad = tmp / \"usr\" / \"bin\" / \"sad\"\n    control = tmp / \"DEBIAN\" / \"control\"\n    deb = (_ARTS / triple).with_suffix(\".deb\")\n\n    j2 = Environment(\n        enable_async=True,\n        trim_blocks=True,\n        lstrip_blocks=True,\n        undefined=StrictUndefined,\n        loader=FileSystemLoader(templates),\n    )\n\n    env = {**loads(cargo.read_text())[\"package\"], \"arch\": _DPKG_ARCH[arch]}\n    render = j2.get_template(normcase(ctrl)).render(env)\n\n    with suppress(FileNotFoundError):\n        rmtree(tmp)\n    for path in (sad, control):\n        path.parent.mkdir(parents=True, exist_ok=True)\n    control.write_text(render)\n    copy2(release, sad)\n\n    if which(\"dpkg-deb\"):\n        check_call(\n            (\"dpkg-deb\", \"--root-owner-group\", \"--build\", tmp, deb),\n            cwd=_TOP_LEVEL,\n        )\n\n\ndef _build(triple: str) -> None:\n    assert triple in _TOOL_CHAINS\n    _compile(triple)\n    _archive(triple)\n    if fnmatch(triple, \"*-linux-*\"):\n        _deb(triple)\n\n\ndef _parse_args() -> Namespace:\n    arch_choices = {\"x86_64\", \"aarch64\"}\n    sys_choices = {vendor_sys for (vendor_sys, _) in _DEFAULTS.values()}\n    abi_choices = {\"musl\", \"gnu\", \"darwin\"}\n    os, compiler = _DEFAULTS.get(UNAME.system) or (None, None)\n\n    parser = ArgumentParser()\n    sub_parser = parser.add_subparsers(dest=\"action\", required=True)\n\n    with nullcontext(sub_parser.add_parser(\"deps\")) as p:\n        pass\n\n    with nullcontext(sub_parser.add_parser(\"build\")) as p:\n        p.add_argument(\n            \"-r\",\n            \"--release\",\n            action=\"store_true\",\n        )\n\n        p.add_argument(\n            \"--arch\",\n            choices=sorted(arch_choices, key=strxfrm),\n            default=UNAME.machine,\n        )\n        p.add_argument(\n            \"--os\",\n            required=not bool(os),\n            choices=sorted(sys_choices, key=strxfrm),\n            default=os,\n        )\n        p.add_argument(\n            \"--compiler\",\n            required=not bool(compiler),\n            choices=sorted(abi_choices, key=strxfrm),\n            default=compiler,\n        )\n\n    with nullcontext(sub_parser.add_parser(\"buildr\")) as p:\n        p.add_argument(\"triple\", choices=sorted(_TOOL_CHAINS, key=strxfrm))\n\n    return parser.parse_args()\n\n\ndef main() -> None:\n    args = _parse_args()\n    if args.action == \"deps\":\n        _deps()\n\n    elif args.action == \"build\":\n        triple = \"-\".join((args.arch, args.os, args.compiler))\n        _build(triple)\n\n    elif args.action == \"buildr\":\n        _build(args.triple)\n\n    else:\n        assert False\n\n\nmain()\n"
        },
        {
          "name": "build.rs",
          "type": "blob",
          "size": 0.53125,
          "content": "#!/usr/bin/env -S -- bash -Eeuo pipefail\n// || rustc --edition=2021 -o \"${T:=\"$(mktemp)\"}\" -- \"$0\" && exec -a \"$0\" -- \"$T\" \"$0\" \"$@\"\n#![deny(clippy::all, clippy::cargo, clippy::nursery, clippy::pedantic)]\n#![allow(clippy::cargo_common_metadata, clippy::wildcard_dependencies)]\n\nfn main() {\n  println!(\"cargo:rustc-env=SAD_ARGV_UUID=4f3828bf-ebf6-4f46-b07b-7eb9e4ae4380\");\n\n  println!(\"cargo:rustc-env=SAD_PREVIEW_UUID=b477f4c9-9fe7-4224-92cd-1632521ec2f0\");\n\n  println!(\"cargo:rustc-env=SAD_PATCH_UUID=cadfe8eb-0dae-46be-bb4a-a058330e62a4\");\n}\n"
        },
        {
          "name": "ci",
          "type": "tree",
          "content": null
        },
        {
          "name": "mypy.ini",
          "type": "blob",
          "size": 0.6455078125,
          "content": "[mypy]\ncheck_untyped_defs = true\ndisallow_any_decorated = true\ndisallow_any_generics = true\ndisallow_any_unimported = true\ndisallow_incomplete_defs = true\ndisallow_subclassing_any = true\ndisallow_untyped_calls = true\ndisallow_untyped_decorators = true\ndisallow_untyped_defs = true\nerror_summary = true\nextra_checks = true\nimplicit_reexport = false\nno_implicit_optional = true\npretty = true\nshow_column_numbers = true\nshow_error_codes = true\nshow_error_context = true\nstrict = true\nstrict_equality = true\nwarn_incomplete_stub = true\nwarn_redundant_casts = true\nwarn_return_any = true\nwarn_unreachable = true\nwarn_unused_configs = true\nwarn_unused_ignores = true\n"
        },
        {
          "name": "previews",
          "type": "tree",
          "content": null
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.01953125,
          "content": "toml\npyyaml \njinja2\n"
        },
        {
          "name": "rustfmt.toml",
          "type": "blob",
          "size": 0.2373046875,
          "content": "format_code_in_doc_comments = true\nformat_macro_matchers       = true\nformat_strings              = true\nimports_granularity         = \"One\"\nnormalize_doc_attributes    = true\ntab_spaces                  = 2\nunstable_features           = true\n"
        },
        {
          "name": "sad.spec",
          "type": "blob",
          "size": 1.587890625,
          "content": "Name:           sad\nVersion:        0.4.31\nRelease:        3%{?dist}\nSummary:        Space Age seD\nURL:            https://github.com/ms-jpq/sad\nLicense:        MIT\nSource0:        https://github.com/ms-jpq/sad/archive/refs/tags/v%{version}.tar.gz\n\n# BuildRequires: List all packages required to build the software\nBuildRequires:  git\nBuildRequires:  python3\nBuildRequires:  curl\nBuildRequires:  gcc\n\n%define debug_package %{nil}\n\n# Optional dependencies\n# For TUI usage\n#Requires:      fzf\n# For diff colourizer\n#Requires:      diff-so-fancy\n#Requires:      git-delta\n\n%description\nSpace Age seD\n\n%prep\n%setup -q\n%ifarch aarch64\nsed -i '/target.aarch64-unknown-linux-gnu/,+1d' .cargo/config.toml\n%endif\n\n%build\n# Install Rust using curl\ncurl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y\nexport PATH=\"$PATH:$HOME/.cargo/bin\"\n$HOME/.cargo/bin/cargo build --release --all-features\n\n%install\n# You may need to adjust paths and permissions as necessary\ninstall -D -m 755 target/release/%{name} %{buildroot}/usr/bin/%{name}\ninstall -D -m 644 LICENSE %{buildroot}/usr/share/licenses/%{name}/LICENSE\ninstall -D -m 644 README.md %{buildroot}/usr/share/doc/%{name}/README.md\n\n%check\n$HOME/.cargo/bin/cargo test --release --locked --all-features\n\n%files\n# List all installed files and directories\n%license LICENSE\n%doc README.md\n/usr/bin/%{name}\n\n%changelog\n* Sun December 8 2024 - Danie de Jager - 0.4.31-3\n* Wed October 2 2024 - Danie de Jager - 0.4.31-2\n* Sat June 29 2024 - Danie de Jager - 0.4.31-1\n* Sun May 26 2024 - Danie de Jager - 0.4.29-1\n* Mon May 13 2024 - Danie de Jager - 0.4.28-1\n- Initial version\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}