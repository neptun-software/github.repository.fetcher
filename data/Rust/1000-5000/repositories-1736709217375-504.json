{
  "metadata": {
    "timestamp": 1736709217375,
    "page": 504,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjUxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "face-hh/webx",
      "stars": 1890,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".github_assets",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1943359375,
          "content": "# jetbrains\n.idea\n.fleet\n\n# rust\ntarget\nstorage\n\n# maid\n.maid/cache\n.maid/temp\n.maid/server.toml\n\n# dependencies\n/node_modules\n/.pnp\n.pnp.js\n.yarn/install-state.gz\n\n# misc\n.DS_Store\n*.pem\nconfig.toml"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.076171875,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright 2024 FaceDevStuff\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "PKGBUILD",
          "type": "blob",
          "size": 0.740234375,
          "content": "pkgname=napture\npkgver=1.2.2\npkgrel=1\npkgdesc=\"An alternative for the World Wide Web\"\narch=('x86_64')\nurl=\"https://github.com/face-hh/webx\"\nlicense=('Apache-2.0')\ndepends=('glib2' 'gtk4' 'libadwaita' 'lua')\nmakedepends=('cargo')\nsource=(\"git+${url}.git#tag=v${pkgver}\")\nsha256sums=('SKIP')\nbuild() {\n    cd \"$srcdir/webx/napture\"\n    cargo build --release\n}\n\npackage() {\n    cd \"$srcdir/webx/napture\"\n    install -Dm755 \"target/release/webx\" \"$pkgdir/usr/bin/napture\"\n    install -Dm644 \"io.github.face_hh.Napture.metainfo.xml\" -t \"$pkgdir/usr/share/metainfo/\"\n    install -Dm644 \"io.github.face_hh.Napture.desktop\" -t \"$pkgdir/usr/share/applications/\"\n    install -Dm644 \"io.github.face_hh.Napture.svg\" -t \"$pkgdir/usr/share/icons/hicolor/scalable/apps/\"\n}\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 10.33984375,
          "content": "# Bussin Web X\n\nAn alternative to the World Wide Web (`http(s)://`), with:\n- its own **custom browser** written in Rust with [GTK](https://gtk.org/),\n- custom HTML, CSS and ***Lua*** engine (yup, **no javascript! 🎉**),\n- custom **DNS** allowing Top-Level domains such as `rizz`, `sigma`, `lol`, `dev`, etc,\n- and **search engine** at `buss://dingle.it`.\n\n![Preview of buss://register.it, the frontend for registering domains](.github_assets/image.png)\n\n# File structure\n- `/napture` - The source code for the **browser** Bussin Napture, used to view buss:// sites.\n- `/dns` - The source code for the **DNS** (Domain Name System), used for the API at `https://api.buss.lol`\n- `/dingle` - The source code for the official **search engine** (API) of Web X. For the frontend, check [dingle frontend repo](https://github.com/face-hh/dingle-frontend)\n- [registrar](https://github.com/face-hh/webx-registrar) - The source code for `buss://register.it`, frontend for `https://api.buss.lol` made for Bussin Web X. This can also serve as an example for how buss:// sites are made.\n\n# Download and Install\n## Arch Linux\n- `yay -S napture`, it's available on AUR.\n## Nix[OS]\n\n**Flakes**: The repository provides a flake which exposes an overlay providing the webx package, so you could just add the input in your flake.nix file\n\n```nix\n{\n    inputs = {\n        webx.url = \"github:face-hh/webx\";\n    };\n}\n```\n\nThen add it to your overlays and install it\n\n```nix\n{ inputs, ... }: {\n    nixpkgs.overlays = [\n        inputs.webx.overlays.x86_64-linux.default\n    ];\n}\n```\n\n> For now, only tested on x86_64-linux, but may work on others aswell, just change the arch\n\nAdd it to either home.packages (home manager) or environment.systemPackages (global packages).\n\n```nix\nhome.packages = with pkgs; [\n    webx\n];\n```\n\nThen you could just launch it using `webx` in your terminal.\n\n## Linux\n- For now, you have to download [Rust](https://www.rust-lang.org/tools/install). Then, you just need to open `install-linux.sh` in the `napture` folder as an executable (if you can't execute it, first do `sudo chmod +x ./install-linux.sh`, then you should be able to install).\n## macOS\n- For now, you have to download [Rust](https://www.rust-lang.org/tools/install) and [Homebrew](https://brew.sh). Then, you just need to open `install-macos.sh` in the `napture` folder as an executable (if you can't execute it, first do `chmod +x ./install-macos.sh`, then you should be able to install).\n## Windows\n- Install the executable from the release tab. It's a self-extractor with WinRAR because it has a lot of DLLs.\n\n# Download and Compile\n## Linux\nInstall [Rust](https://www.rust-lang.org/tools/install) if you haven't already.\nIt should work by default, but if you're getting errors such as \"missing PC files\", you should Google it. Most likely you just have to install a library\n\n## Windows\nWelcome to Gaming OS 🙂\n1. Download [Rust](https://www.rust-lang.org/tools/install)\n2. Download GNU target: `rustup toolchain install stable-gnu && rustup default stable-gnu`\n3. Download [MSYS32](https://www.msys2.org/)\n4. Open MSYS32 MINGW32\n5. Run: `pacman -Syu` just in case.\n6. Run `pacman -S mingw-w64-x86_64-toolchain base-devel mingw-w64-x86_64-gtk4 mingw-w64-x86_64-gettext mingw-w64-x86_64-libxml2 mingw-w64-x86_64-librsvg mingw-w64-x86_64-pkgconf mingw-w64-x86_64-gcc mingw-w64-x86_64-libadwaita mingw-w64-x86_64-lua`\n7. Go to `Settings` -> `Search` and open `Advanced system settings` -> Click on `Environment variables` (or just search \"path\")\n8. Select `Path` -> Click on `Edit` -> Add the following three entries: `C:\\msys64\\mingw64\\include`, `C:\\msys64\\mingw64\\bin`, and `C:\\msys64\\mingw64\\lib`.\n9. Open a terminal in the folder with `napture/`, run `cargo run`.\n\n## MacOS (Apple Silicon)\n1. Install [Rust](https://www.rust-lang.org/tools/install)\n2. Install [Homebrew](https://brew.sh/)\n3. Install PKG_CONFIG_PATH and ensure it's set in your path\n\n```bash\nbrew install pkg-config\nwhich pkg-config\n```\n\n3.1. Should return something like `/opt/homebrew/bin/pkg-config`. If it doesn't, add it to your path.\n\n4. Install GTK and Necessary Libraries\n\n```bash\nbrew install glib\nbrew install gobject-introspection\nbrew install graphene\nbrew install gdk-pixbuf\nbrew install pango\nbrew install gtk+4\nbrew install libadwaita\nbrew install lua@5.4\n\nbrew --prefix glib\nbrew --prefix gobject-introspection\nbrew --prefix graphene\nbrew --prefix gdk-pixbuf\nbrew --prefix pango\nbrew --prefix gtk4\nbrew --prefix libadwaita\nbrew --prefix lua@5.4\n```\n\n4.1 Validate if the libraries are installed adequately and set in PKG_CONFIG_PATH, command below should return the path to the libraries without any errors.\n\n```bash\npkg-config --libs --cflags glib-2.0\npkg-config --libs --cflags gobject-2.0\npkg-config --libs --cflags graphene-gobject-1.0\npkg-config --libs --cflags gdk-pixbuf-2.0\npkg-config --libs --cflags pango\npkg-config --libs --cflags gtk4\npkg-config --libs --cflags libadwaita-1\npkg-config --libs --cflags lua-5.4\n```\n\n5. Run `cargo run` in the `napture/` directory.\n\n```bash\ncd napture\n\ncargo build\n# or\ncargo run\n```\n\n# Register website\nPlease follow [How to code a Buss site](https://facedev.gitbook.io/bussin-web-x-how-to-make-a-website/) for a better visual guide.\n\nSo you wish to publish a website to Web X? Great! Let's go through the rules:\n\n1. If your website contains Not Safe For Work material of any kind, it will be removed.\n2. If your website contains frequent racial slurs, references made in bad faith to tragic events, racism towards other races, or anything of that kind, it will be removed.\n3. If your website is dedicated to the publication of private information, it will be removed.\n4. If your website is actively engaged in leaking information about incoming traffic (i.e., posting the IPs of users), it will be removed.\n5. If your website displays content that violates law or regulations, including but not limited to, piracy, hacking, or illegal activities such as drug usage, will result in a removal.\n6. If your website contains or distributes malware, viruses, or any other harmful software, it will be removed.\n7. If your website is dedicated to harassment, bullying, or targeted attacks against individuals or groups, it will be removed.\n8. If your website infringes upon intellectual property rights of others, it will be removed.\n9. If your website is involved in fradulent activities, scams, or deceptive practices, it will be removed.\n10. If your website contains content that encourages harmful behavior, including self-harm, suicide, substance abuse, or dangerous challanges, it will be removed.\n\nBy publishing content to this platform (\"Bussin Napture\"/\"Bussin Web X\"), you agree to comply with all rules and regulations set forth by the administrators. The administrators reserve the right to interpret and enforce these rules at their discretion. To report websites that are not following the listed rules, please contact `FaceDev` on either [Twitter](https://twitter.com/facedevstuff) or [Discord](https://discord.gg/cNwWvdWj42).\n\nNow, to register a website, navigate to `buss://register.it` **through Bussin Napture**.\n\nYou will see this interface.\n![Preview of buss://register.it, the frontend for registering domains](.github_assets/image.png)\n\nWhat you need is the **Publish** section.\n- for the domain name, choose whatever you want. (example: `duckduckgo`)\n- for the TLD, choose one displayed above the `Result will appear...` label. (example: `rizz`)\n- for the IP, you can either use:\n   - an IP that serves `/index.html` on port 80\n   - a GitHub repository that has `index.html`, **outside any folder**. (example: [registrar](https://github.com/face-hh/webx-registrar)), ***with the `main` default branch***.\n\nDon't worry! The IP doesn't have to be valid, and you can save the domain for later!\n\n**WARNING**: After creating the domain, you'll be shown a **secret key**. Please make sure to save it as you will need it to Update/Delete your domain.\n\n# Run website locally\nBussin Napture fetches `index.html` at whatever path you give it. For example, if you enter `http://localhost:3000`, Napture will fetch `http://localhost:3000/index.html`. From the index.html, if you have further `<link>` or `<script>` imports, they will be fetched at `http://localhost:3000/file.(css|lua)`.\n\n1. To locally test a website, you can use something like [Python](https://www.python.org/):\n```bash\npython -m http.server 3000\n```\n2. CLI support with `./napture file:///home/path/to/folder`.\n3. Enter `file:///home/path/to/folder` in the search bar.\n\n# HTML guide\nThe supported tags are: `head`, `title`, `link`, `meta`, `script`, `h1`-`h6`, `div`, `p`, `ul`, `ol`, `li`, `div`, `button`, `hr`, `img`, `input`, `textarea`, `button`, `select`, `option`. Keep in mind their syntax may be different if you're already familiar with HTML5 (i.e. `link` is used for the tab icon). Please check [registrar](https://github.com/face-hh/webx-registrar) or `/napture/test/index.html` for examples.\n\n# CSS guide\nThe supported properties are:\n- `border-color`\n- `border-width`\n- `border-style`\n- `border-radius`\n- `padding`\n- `direction` (row | column)\n- `align-items`: (fill | start | center | end)\n- `gap`\n- `color`\n- `font-size`\n- `font-height`\n- `font-family`\n- `font-weight` (ultralight | light | normal | bold | ultrabold | heavy)\n- `underline` (none | single | double | low | error)\n- `underline-color`\n- `overline` (none | single)\n- `overline-color`\n- `strikethrough` (false | true)\n- `strikethrough-color`\n- `margin-left`\n- `margin-right`\n- `margin-top`\n- `margin-bottom`\n- `width` (only on `<input>` & `<textarea>`)\n- `height` (only on `<input>` & `<textarea>`)\n\nProperties whose value type wasn't specified are either measured in `px`, or are colors (`#fff`, `red`, etc.)\n\n# Lua guide\nFor those coming from the traditional web...\n```diff\n- 1. const test = document.querySelector(\".classExample\");\n- 2. test.textContent = \"abc\";\n- 3. test.href = \"https://ok.test\"\n- 4. console.log(test.href)\n- 5. test.addEventListener(\"click\", () => {})\n- 6. test.addEventListener(\"submit\", () => {})\n+ 1. local test = get(\"classExample\")\n+ 2. test.set_content(\"abc\");\n+ 3. test.set_href(\"buss://register.it\")\n+ 4. print(test.get_href())\n+ 5. test.on_click(function())\n+ 6. test.on_submit(function())\n```\n\nI believe you'd get a better understand if you explored the [registrar](https://github.com/face-hh/webx-registrar) repository's `script.lua`.\n\nNOTE: Bussin Napture doesn't support `buss://` redirects yet. They will be added in the official release.\n\nMade by FaceDev with pure utter hatred and undesire :D"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.3720703125,
          "content": "# Security Policy\n\n## Supported Versions\n\n\n| Version | Supported          |\n| ------- | ------------------ |\n| 1.3.x   | :white_check_mark: |\n| < 1.3.x | :x:                |\n\n## Reporting a Vulnerability\n\nPlease report (suspected) security vulnerabilities to games.facedev@gmail.com. If the issue is confirmed, we will release a patch as soon as possible depending on complexity.\n"
        },
        {
          "name": "archive",
          "type": "tree",
          "content": null
        },
        {
          "name": "default.nix",
          "type": "blob",
          "size": 1.216796875,
          "content": "{ stdenv, lib, pkgs ? import <nixpkgs> {}, ... }: pkgs.rustPlatform.buildRustPackage {\n  pname = \"webx\";\n  version = \"git\";\n\n  src = \"${pkgs.webx-src}/napture\";\n\n  nativeBuildInputs = lib.optionals stdenv.isLinux (with pkgs; [\n    pkg-config\n  ]);\n\n  propagatedBuildInputs = lib.optionals stdenv.isLinux (with pkgs; [\n    glib\n    pango\n    gdk-pixbuf\n    openssl_3_3\n    graphene\n    gtk4\n    libadwaita\n    lua5_4_compat\n  ]);\n\n  cargoLock = {\n    lockFile = \"${pkgs.webx-src}/napture/Cargo.lock\";\n  };\n\n  postInstall = ''\n    mkdir -p $out/share/metainfo $out/share/applications $out/share/icons\n    install -Dm644 $src/io.github.face_hh.Napture.metainfo.xml -t $out/share/metainfo/\n    install -Dm644 $src/io.github.face_hh.Napture.desktop -t $out/share/applications/\n    install -Dm644 $src/io.github.face_hh.Napture.svg -t $out/share/icons/hicolor/scalable/apps/\n\n    # updating the `Exec` field\n    substituteInPlace $out/share/applications/io.github.face_hh.Napture.desktop \\\n      --replace napture $out/bin/webx\n  '';\n\n  meta = {\n    description = \"An alternative for the World Wide Web\";\n    license = lib.licenses.unlicense;\n    maintainers = [ lib.maintainers.alphatechnolog ]; # flake maintainer ig\n    mainProgram = \"webx\";\n  };\n}\n"
        },
        {
          "name": "dingle",
          "type": "tree",
          "content": null
        },
        {
          "name": "dns",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "flake.lock",
          "type": "blob",
          "size": 1.908203125,
          "content": "{\n  \"nodes\": {\n    \"flake-utils\": {\n      \"inputs\": {\n        \"systems\": \"systems\"\n      },\n      \"locked\": {\n        \"lastModified\": 1710146030,\n        \"narHash\": \"sha256-SZ5L6eA7HJ/nmkzGG7/ISclqe6oZdOZTNoesiInkXPQ=\",\n        \"owner\": \"numtide\",\n        \"repo\": \"flake-utils\",\n        \"rev\": \"b1d9ab70662946ef0850d488da1c9019f3a9752a\",\n        \"type\": \"github\"\n      },\n      \"original\": {\n        \"owner\": \"numtide\",\n        \"repo\": \"flake-utils\",\n        \"type\": \"github\"\n      }\n    },\n    \"nixpkgs\": {\n      \"locked\": {\n        \"lastModified\": 1716948383,\n        \"narHash\": \"sha256-SzDKxseEcHR5KzPXLwsemyTR/kaM9whxeiJohbL04rs=\",\n        \"owner\": \"nixos\",\n        \"repo\": \"nixpkgs\",\n        \"rev\": \"ad57eef4ef0659193044870c731987a6df5cf56b\",\n        \"type\": \"github\"\n      },\n      \"original\": {\n        \"owner\": \"nixos\",\n        \"ref\": \"nixos-unstable\",\n        \"repo\": \"nixpkgs\",\n        \"type\": \"github\"\n      }\n    },\n    \"root\": {\n      \"inputs\": {\n        \"flake-utils\": \"flake-utils\",\n        \"nixpkgs\": \"nixpkgs\",\n        \"webx-src\": \"webx-src\"\n      }\n    },\n    \"systems\": {\n      \"locked\": {\n        \"lastModified\": 1681028828,\n        \"narHash\": \"sha256-Vy1rq5AaRuLzOxct8nz4T6wlgyUR7zLU309k9mBC768=\",\n        \"owner\": \"nix-systems\",\n        \"repo\": \"default\",\n        \"rev\": \"da67096a3b9bf56a91d16901293e51ba5b49a27e\",\n        \"type\": \"github\"\n      },\n      \"original\": {\n        \"owner\": \"nix-systems\",\n        \"repo\": \"default\",\n        \"type\": \"github\"\n      }\n    },\n    \"webx-src\": {\n      \"flake\": false,\n      \"locked\": {\n        \"lastModified\": 1717155534,\n        \"narHash\": \"sha256-mXZCyIzcZqXyosq+OtKKPyM/q+ZSDtzXGsvmQRapur4=\",\n        \"owner\": \"face-hh\",\n        \"repo\": \"webx\",\n        \"rev\": \"2ddaa59caf7ab43c42d8a557ca1529de68b10204\",\n        \"type\": \"github\"\n      },\n      \"original\": {\n        \"owner\": \"face-hh\",\n        \"repo\": \"webx\",\n        \"type\": \"github\"\n      }\n    }\n  },\n  \"root\": \"root\",\n  \"version\": 7\n}\n"
        },
        {
          "name": "flake.nix",
          "type": "blob",
          "size": 1.1044921875,
          "content": "{\n  inputs = {\n    nixpkgs.url = \"github:nixos/nixpkgs?ref=nixos-unstable\";\n    flake-utils.url = \"github:numtide/flake-utils\";\n\n    webx-src = {\n      url = \"github:face-hh/webx\";\n      flake = false;\n    };\n  };\n\n  outputs = { self, nixpkgs, flake-utils, ... } @inputs: flake-utils.lib.eachDefaultSystem(system: let\n    pkgs = import nixpkgs {inherit system overlays;};\n\n    # same as the one in the overlay but with the current pkgs iteration (current system).\n    package = pkgs.callPackage ./default.nix {};\n\n    overlays = [mainOverlay];\n\n    mainOverlay = (final: _: {\n      inherit (inputs) webx-src;\n      webx = final.callPackage ./default.nix {};\n    });\n  in {\n    packages.default = package;\n    overlays.default = mainOverlay;\n\n    devShells.default = let inherit (pkgs) mkShell; in mkShell {\n      name = \"dev\";\n      nativeBuildInputs = [pkgs.pkg-config];\n      buildInputs = with pkgs; [package cargo rustc];\n\n      propagatedBuildInputs = with pkgs; [\n        glib\n        pango\n        gdk-pixbuf\n        openssl_3_3\n        graphene\n        gtk4\n        libadwaita\n        lua5_4_compat\n      ];\n    };\n  });\n}\n"
        },
        {
          "name": "napture",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}