{
  "metadata": {
    "timestamp": 1736709098454,
    "page": 250,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "watchexec/cargo-watch",
      "stars": 2820,
      "defaultBranch": "8.x",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.16796875,
          "content": "root = true\n\n[*]\nindent_style = space\nindent_size = 4\nend_of_line = lf\ncharset = utf-8\ntrim_trailing_whitespace = true\ninsert_final_newline = true\n\n[*.yml]\nindent_size = 2\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0859375,
          "content": "/target\n~*\n*~\n.*.sw*\n*.tar.xz\n*.zip\n/tests/touchdata\n/tests/snapshots/*.new\n\nCHECKSUMS*\n"
        },
        {
          "name": "CITATION.cff",
          "type": "blob",
          "size": 0.376953125,
          "content": "cff-version: 1.2.0\nmessage: |\n  If you use this software, please cite it using these metadata.\ntitle: \"Cargo Watch: a project-watching companion tool for Cargo\"\n\nversion: \"8.5.3\"\ndate-released: 2024-10-02\n\nrepository-code: https://github.com/watchexec/cargo-watch\nlicense: CC0-1.0\n\nauthors:\n- family-names: Saparelli\n  given-names: Félix\n  orcid: https://orcid.org/0000-0002-2010-630X\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 9.43359375,
          "content": "# Code of Conduct\n\n## When Something Happens\n\nIf you see a Code of Conduct violation, follow these steps:\n\n1. Let the person know that what they did is not appropriate and ask them to stop and/or edit their message(s) or commits.\n2. That person should immediately stop the behavior and correct the issue.\n3. If this doesn’t happen, or if you're uncomfortable speaking up, [contact the maintainers](#contacting-maintainers).\n4. As soon as available, a maintainer will look into the issue, and take [further action (see below)](#further-enforcement), starting with a warning, then temporary block, then long-term repo or organization ban.\n\nWhen reporting, please include any relevant details, links, screenshots, context, or other information that may be used to better understand and resolve the situation.\n\n**The maintainer team will prioritize the well-being and comfort of the recipients of the violation over the comfort of the violator.** See [some examples below](#enforcement-examples).\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers of this project pledge to making participation in our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, technical preferences, nationality, personal appearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment include:\n\n  * Using welcoming and inclusive language.\n  * Being respectful of differing viewpoints and experiences.\n  * Gracefully accepting constructive feedback.\n  * Focusing on what is best for the community.\n  * Showing empathy and kindness towards other community members.\n  * Encouraging and raising up your peers in the project so you can all bask in hacks and glory.\n\nExamples of unacceptable behavior by participants include:\n\n  * The use of sexualized language or imagery and unwelcome sexual attention or advances, including when simulated online. The only exception to sexual topics is channels/spaces specifically for topics of sexual identity.\n  * Trolling, insulting/derogatory comments, and personal or political attacks.\n  * Public or private harassment, deliberate intimidation, or threats.\n  * Publishing others' private information, such as a physical or electronic address, without explicit permission. This includes any sort of \"outing\" of any aspect of someone's identity without their consent.\n  * Publishing private screenshots or quotes of interactions in the context of this project without all quoted users' *explicit* consent.\n  * Publishing of private communication that doesn't have to do with reporting harrassment.\n  * Any of the above even when [presented as \"ironic\" or \"joking\"](https://en.wikipedia.org/wiki/Hipster_racism).\n  * Any attempt to present \"reverse-ism\" versions of the above as violations. Examples of reverse-isms are \"reverse racism\", \"reverse sexism\", \"heterophobia\", and \"cisphobia\".\n  * Unsolicited explanations under the assumption that someone doesn't already know it. Ask before you teach! Don't assume what people's knowledge gaps are.\n  * [Feigning or exaggerating surprise](https://www.recurse.com/manual#no-feigned-surprise) when someone admits to not knowing something.\n  * \"[Well-actuallies](https://www.recurse.com/manual#no-well-actuallys)\"\n  * Other conduct which could reasonably be considered inappropriate in a professional or community setting.\n\n## Scope\n\nThis Code of Conduct applies both within spaces involving this project and in other spaces involving community members. This includes the repository, its Pull Requests and Issue tracker, its Twitter community, private email communications in the context of the project, and any events where members of the project are participating, as well as adjacent communities and venues affecting the project's members.\n\nDepending on the violation, the maintainers may decide that violations of this code of conduct that have happened outside of the scope of the community may deem an individual unwelcome, and take appropriate action to maintain the comfort and safety of its members.\n\n### Other Community Standards\n\nAs a project on GitHub, this project is additionally covered by the [GitHub Community Guidelines](https://help.github.com/articles/github-community-guidelines/).\n\nWhile not directly under the umbrella of the Rust Project, it is a part of the Rust community and [its Code of Conduct](https://www.rust-lang.org/conduct.html) may be applicable in some instances.\n\nEnforcement of those guidelines after violations overlapping with the above are the responsibility of the entities, and enforcement may happen in any or all of the services/communities.\n\n## Maintainer Enforcement Process\n\nOnce the maintainers get involved, they will follow a documented series of steps and do their best to preserve the well-being of project members. This section covers actual concrete steps.\n\n### Contacting Maintainers\n\nRefer to the GitHub repository for collaborator/maintainer information and email someone there.\n### Further Enforcement\n\nIf you've already followed the [initial enforcement steps](#enforcement), these are the steps maintainers will take for further enforcement, as needed:\n\n  1. Repeat the request to stop.\n  2. If the person doubles down, they will have offending messages removed or edited by a maintainers given an official warning. The PR or Issue may be locked.\n  3. If the behavior continues or is repeated later, the person will be blocked from participating for 24 hours.\n  4. If the behavior continues or is repeated after the temporary block, a long-term (6-12mo) ban will be used.\n\nOn top of this, maintainers may remove any offending messages, images, contributions, etc, as they deem necessary.\n\nMaintainers reserve full rights to skip any of these steps, at their discretion, if the violation is considered to be a serious and/or immediate threat to the health and well-being of members of the community. These include any threats, serious physical or verbal attacks, and other such behavior that would be completely unacceptable in any social setting that puts our members at risk.\n\nMembers expelled from events or venues with any sort of paid attendance will not be refunded.\n\n### Who Watches the Watchers?\n\nMaintainers and other leaders who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership. These may include anything from removal from the maintainer team to a permanent ban from the community.\n\nAdditionally, as a project hosted on GitHub and part of the Rust community, [their own Codes of Conducts may be applied against maintainers of this project](#other-community-standards), externally of this project's procedures.\n\n### Enforcement Examples\n\n#### The Best Case\n\nThe vast majority of situations work out like this. This interaction is common, and generally positive.\n\n> Alex: \"Yeah I used X and it was retarded!\"\n\n> Patt (not a maintainer): \"Hey, could you not use that word? What about 'ridiculous' instead?\"\n\n> Alex: \"oh sorry, sure.\" -> edits old comment to say \"it was really confusing!\"\n\n#### The Maintainer Case\n\nSometimes, though, you need to get maintainers involved. Maintainers will do their best to resolve conflicts, but people who were harmed by something **will take priority**.\n\n> Patt: \"Honestly, sometimes I just really hate using $library and anyone who uses it probably sucks at their job.\"\n\n> Alex: \"Whoa there, could you dial it back a bit? There's a CoC thing about attacking folks' tech use like that.\"\n\n> Patt: \"I'm not attacking anyone, what's your problem?\"\n\n> Alex: \"@maintainers hey uh. Can someone look at this issue? Patt is getting a bit aggro. I tried to nudge them about it, but nope.\"\n\n> KeeperOfCommitBits: (on issue) \"Hey Patt, maintainer here. Could you tone it down? This sort of attack is really not okay in this space.\"\n\n> Patt: \"Leave me alone I haven't said anything bad wtf is wrong with you.\"\n\n> KeeperOfCommitBits: (deletes user's comment), \"@patt I mean it. Please refer to the CoC over at (URL to this CoC) if you have questions, but you can consider this an actual warning. I'd appreciate it if you reworded your messages in this thread, since they made folks there uncomfortable. Let's try and be kind, yeah?\"\n\n> Patt: \"@keeperofbits Okay sorry. I'm just frustrated and I'm kinda burnt out and I guess I got carried away. I'll DM Alex a note apologizing and edit my messages. Sorry for the trouble.\"\n\n> KeeperOfCommitBits: \"@patt Thanks for that. I hear you on the stress. Burnout sucks :/.  Have a good one!\"\n\n#### The Nope Case\n\n> PepeTheFrog🐸: \"Hi, I am a literal actual nazi and I think white supremacists are quite fashionable.\"\n\n> Patt: \"NOOOOPE. OH NOPE NOPE.\"\n\n> Alex: \"JFC NO. NOPE. @keeperofbits NOPE NOPE LOOK HERE\"\n\n> KeeperOfCommitBits: \"👀 Nope. NOPE NOPE NOPE. 🔥\"\n\n> PepeTheFrog🐸 has been banned from all organization or user repositories belonging to KeeperOfCommitBits.\n\n## Attribution\n\nThis Code of Conduct was generated (and then adapted) using [WeAllJS Code of Conduct Generator](https://npm.im/weallbehave), which is based on the [WeAllJS Code of\nConduct](https://wealljs.org/code-of-conduct), which is itself based on\n[Contributor Covenant](http://contributor-covenant.org), version 1.4, available\nat\n[http://contributor-covenant.org/version/1/4](http://contributor-covenant.org/version/1/4),\nand the LGBTQ in Technology Slack [Code of\nConduct](http://lgbtq.technology/coc.html).\n"
        },
        {
          "name": "Cargo.lock",
          "type": "blob",
          "size": 59.7685546875,
          "content": "# This file is automatically @generated by Cargo.\n# It is not intended for manual editing.\nversion = 3\n\n[[package]]\nname = \"aho-corasick\"\nversion = \"0.7.20\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cc936419f96fa211c1b9166887b38e5e40b19958e5b895be7c1f93adec7071ac\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"aho-corasick\"\nversion = \"1.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8e60d3430d3a69478ad0993f19238d2df97c507009a52b3c10addcd7f6bcb916\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"android-tzdata\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e999941b234f3131b00bc13c22d06e8c5ff726d1b6318ac7eb276997bbb4fef0\"\n\n[[package]]\nname = \"android_system_properties\"\nversion = \"0.1.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"819e7219dbd41043ac279b19830f2efc897156490d7fd6ea916720117ee66311\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"ansi_term\"\nversion = \"0.12.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d52a9bb7ec0cf484c551830a7ce27bd20d67eac647e1befb56b0be4ee39a55d2\"\ndependencies = [\n \"winapi 0.3.9\",\n]\n\n[[package]]\nname = \"anstyle\"\nversion = \"1.0.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1bec1de6f59aedf83baf9ff929c98f2ad654b97c9510f4e70cf6f661d49fd5b1\"\n\n[[package]]\nname = \"assert_cmd\"\nversion = \"1.0.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c98233c6673d8601ab23e77eb38f999c51100d46c5703b17288c57fddf3a1ffe\"\ndependencies = [\n \"bstr\",\n \"doc-comment\",\n \"predicates 2.1.5\",\n \"predicates-core\",\n \"predicates-tree\",\n \"wait-timeout\",\n]\n\n[[package]]\nname = \"async-broadcast\"\nversion = \"0.7.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"20cd0e2e25ea8e5f7e9df04578dc6cf5c83577fd09b1a46aaf5c85e1c33f2a7e\"\ndependencies = [\n \"event-listener\",\n \"event-listener-strategy\",\n \"futures-core\",\n \"pin-project-lite\",\n]\n\n[[package]]\nname = \"async-channel\"\nversion = \"2.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"89b47800b0be77592da0afd425cc03468052844aff33b84e33cc696f64e77b6a\"\ndependencies = [\n \"concurrent-queue\",\n \"event-listener-strategy\",\n \"futures-core\",\n \"pin-project-lite\",\n]\n\n[[package]]\nname = \"async-executor\"\nversion = \"1.13.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"30ca9a001c1e8ba5149f91a74362376cc6bc5b919d92d988668657bd570bdcec\"\ndependencies = [\n \"async-task\",\n \"concurrent-queue\",\n \"fastrand\",\n \"futures-lite\",\n \"slab\",\n]\n\n[[package]]\nname = \"async-fs\"\nversion = \"2.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ebcd09b382f40fcd159c2d695175b2ae620ffa5f3bd6f664131efff4e8b9e04a\"\ndependencies = [\n \"async-lock\",\n \"blocking\",\n \"futures-lite\",\n]\n\n[[package]]\nname = \"async-io\"\nversion = \"2.3.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"444b0228950ee6501b3568d3c93bf1176a1fdbc3b758dcd9475046d30f4dc7e8\"\ndependencies = [\n \"async-lock\",\n \"cfg-if 1.0.0\",\n \"concurrent-queue\",\n \"futures-io\",\n \"futures-lite\",\n \"parking\",\n \"polling\",\n \"rustix\",\n \"slab\",\n \"tracing\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"async-lock\"\nversion = \"3.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ff6e472cdea888a4bd64f342f09b3f50e1886d32afe8df3d663c01140b811b18\"\ndependencies = [\n \"event-listener\",\n \"event-listener-strategy\",\n \"pin-project-lite\",\n]\n\n[[package]]\nname = \"async-process\"\nversion = \"2.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"63255f1dc2381611000436537bbedfe83183faa303a5a0edaf191edef06526bb\"\ndependencies = [\n \"async-channel\",\n \"async-io\",\n \"async-lock\",\n \"async-signal\",\n \"async-task\",\n \"blocking\",\n \"cfg-if 1.0.0\",\n \"event-listener\",\n \"futures-lite\",\n \"rustix\",\n \"tracing\",\n]\n\n[[package]]\nname = \"async-recursion\"\nversion = \"1.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3b43422f69d8ff38f95f1b2bb76517c91589a924d1559a0e935d7c8ce0274c11\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.79\",\n]\n\n[[package]]\nname = \"async-signal\"\nversion = \"0.2.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"637e00349800c0bdf8bfc21ebbc0b6524abea702b0da4168ac00d070d0c0b9f3\"\ndependencies = [\n \"async-io\",\n \"async-lock\",\n \"atomic-waker\",\n \"cfg-if 1.0.0\",\n \"futures-core\",\n \"futures-io\",\n \"rustix\",\n \"signal-hook-registry\",\n \"slab\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"async-task\"\nversion = \"4.7.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8b75356056920673b02621b35afd0f7dda9306d03c79a30f5c56c44cf256e3de\"\n\n[[package]]\nname = \"async-trait\"\nversion = \"0.1.83\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"721cae7de5c34fbb2acd27e21e6d2cf7b886dce0c27388d46c4e6c47ea4318dd\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.79\",\n]\n\n[[package]]\nname = \"atomic-waker\"\nversion = \"1.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1505bd5d3d116872e7271a6d4e16d81d0c8570876c8de68093a09ac269d8aac0\"\n\n[[package]]\nname = \"atty\"\nversion = \"0.2.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d9b39be18770d11421cdb1b9947a45dd3f37e93092cbf377614828a319d5fee8\"\ndependencies = [\n \"hermit-abi 0.1.19\",\n \"libc\",\n \"winapi 0.3.9\",\n]\n\n[[package]]\nname = \"autocfg\"\nversion = \"1.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ace50bade8e6234aa140d9a2f552bbee1db4d353f69b8217bc503490fc1a9f26\"\n\n[[package]]\nname = \"bitflags\"\nversion = \"1.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bef38d45163c2f1dde094a7dfd33ccf595c92905c8f8f4fdc18d06fb1037718a\"\n\n[[package]]\nname = \"bitflags\"\nversion = \"2.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b048fb63fd8b5923fc5aa7b340d8e156aec7ec02f0c78fa8a6ddc2613f6f71de\"\n\n[[package]]\nname = \"block\"\nversion = \"0.1.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0d8c1fef690941d3e7788d328517591fecc684c084084702d6ff1641e993699a\"\n\n[[package]]\nname = \"block-buffer\"\nversion = \"0.10.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3078c7629b62d3f0439517fa394996acacc5cbc91c5a20d8c658e77abd503a71\"\ndependencies = [\n \"generic-array\",\n]\n\n[[package]]\nname = \"blocking\"\nversion = \"1.6.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"703f41c54fc768e63e091340b424302bb1c29ef4aa0c7f10fe849dfb114d29ea\"\ndependencies = [\n \"async-channel\",\n \"async-task\",\n \"futures-io\",\n \"futures-lite\",\n \"piper\",\n]\n\n[[package]]\nname = \"bstr\"\nversion = \"0.2.17\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ba3569f383e8f1598449f1a423e72e99569137b47740b1da11ef19af3d5c3223\"\ndependencies = [\n \"lazy_static\",\n \"memchr\",\n \"regex-automata 0.1.10\",\n]\n\n[[package]]\nname = \"bumpalo\"\nversion = \"3.16.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"79296716171880943b8470b5f8d03aa55eb2e645a4874bdbb28adb49162e012c\"\n\n[[package]]\nname = \"byteorder\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1fd0f2584146f6f2ef48085050886acf353beff7305ebd1ae69500e27c67f64b\"\n\n[[package]]\nname = \"camino\"\nversion = \"1.1.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8b96ec4966b5813e2c0507c1f86115c8c5abaadc3980879c3424042a02fd1ad3\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"cargo-platform\"\nversion = \"0.1.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"24b1f0365a6c6bb4020cd05806fd0d33c44d38046b8bd7f0e40814b9763cabfc\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"cargo-watch\"\nversion = \"8.5.3\"\ndependencies = [\n \"assert_cmd\",\n \"camino\",\n \"cargo_metadata\",\n \"clap\",\n \"dotenvy\",\n \"insta\",\n \"log\",\n \"notify-rust\",\n \"predicates 3.1.2\",\n \"shell-escape\",\n \"stderrlog\",\n \"wait-timeout\",\n \"watchexec\",\n]\n\n[[package]]\nname = \"cargo_metadata\"\nversion = \"0.18.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2d886547e41f740c616ae73108f6eb70afe6d940c7bc697cb30f13daec073037\"\ndependencies = [\n \"camino\",\n \"cargo-platform\",\n \"semver\",\n \"serde\",\n \"serde_json\",\n \"thiserror\",\n]\n\n[[package]]\nname = \"cc\"\nversion = \"1.1.24\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"812acba72f0a070b003d3697490d2b55b837230ae7c6c6497f05cc2ddbb8d938\"\ndependencies = [\n \"shlex\",\n]\n\n[[package]]\nname = \"cfg-if\"\nversion = \"0.1.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4785bdd1c96b2a846b2bd7cc02e86b6b3dbf14e7e53446c4f54c92a361040822\"\n\n[[package]]\nname = \"cfg-if\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd\"\n\n[[package]]\nname = \"cfg_aliases\"\nversion = \"0.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"613afe47fcd5fac7ccf1db93babcb082c5994d996f20b8b159f2ad1658eb5724\"\n\n[[package]]\nname = \"chrono\"\nversion = \"0.4.38\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a21f936df1771bf62b77f047b726c4625ff2e8aa607c01ec06e5a05bd8463401\"\ndependencies = [\n \"android-tzdata\",\n \"iana-time-zone\",\n \"js-sys\",\n \"num-traits\",\n \"wasm-bindgen\",\n \"windows-targets\",\n]\n\n[[package]]\nname = \"clap\"\nversion = \"2.34.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a0610544180c38b88101fecf2dd634b174a62eef6946f84dfc6a7127512b381c\"\ndependencies = [\n \"ansi_term\",\n \"atty\",\n \"bitflags 1.3.2\",\n \"strsim 0.8.0\",\n \"textwrap\",\n \"unicode-width\",\n \"vec_map\",\n]\n\n[[package]]\nname = \"clearscreen\"\nversion = \"1.0.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e55dadbdd203f69c0a107bc78fca6e47d605345610ee77dcf24203fdf510b317\"\ndependencies = [\n \"nix 0.24.3\",\n \"terminfo\",\n \"thiserror\",\n \"which\",\n \"winapi 0.3.9\",\n]\n\n[[package]]\nname = \"command-group\"\nversion = \"1.0.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f7a8a86f409b4a59df3a3e4bee2de0b83f1755fdd2a25e3a9684c396fc4bed2c\"\ndependencies = [\n \"nix 0.22.3\",\n \"winapi 0.3.9\",\n]\n\n[[package]]\nname = \"concurrent-queue\"\nversion = \"2.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4ca0197aee26d1ae37445ee532fefce43251d24cc7c166799f4d46817f1d3973\"\ndependencies = [\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"console\"\nversion = \"0.15.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0e1f83fc076bd6dd27517eacdf25fef6c4dfe5f1d7448bafaaf3a26f13b5e4eb\"\ndependencies = [\n \"encode_unicode\",\n \"lazy_static\",\n \"libc\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"core-foundation-sys\"\nversion = \"0.8.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"773648b94d0e5d620f64f280777445740e61fe701025087ec8b57f45c791888b\"\n\n[[package]]\nname = \"cpufeatures\"\nversion = \"0.2.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"608697df725056feaccfa42cffdaeeec3fccc4ffc38358ecd19b243e716a78e0\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"crossbeam-utils\"\nversion = \"0.8.20\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"22ec99545bb0ed0ea7bb9b8e1e9122ea386ff8a48c0922e43f36d45ab09e0e80\"\n\n[[package]]\nname = \"crypto-common\"\nversion = \"0.1.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1bfb12502f3fc46cca1bb51ac28df9d618d813cdc3d2f25b9fe775a34af26bb3\"\ndependencies = [\n \"generic-array\",\n \"typenum\",\n]\n\n[[package]]\nname = \"darling\"\nversion = \"0.12.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5f2c43f534ea4b0b049015d00269734195e6d3f0f6635cb692251aca6f9f8b3c\"\ndependencies = [\n \"darling_core\",\n \"darling_macro\",\n]\n\n[[package]]\nname = \"darling_core\"\nversion = \"0.12.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8e91455b86830a1c21799d94524df0845183fa55bafd9aa137b01c7d1065fa36\"\ndependencies = [\n \"fnv\",\n \"ident_case\",\n \"proc-macro2\",\n \"quote\",\n \"strsim 0.10.0\",\n \"syn 1.0.109\",\n]\n\n[[package]]\nname = \"darling_macro\"\nversion = \"0.12.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"29b5acf0dea37a7f66f7b25d2c5e93fd46f8f6968b1a5d7a3e02e97768afc95a\"\ndependencies = [\n \"darling_core\",\n \"quote\",\n \"syn 1.0.109\",\n]\n\n[[package]]\nname = \"deranged\"\nversion = \"0.3.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b42b6fa04a440b495c8b04d0e71b707c585f83cb9cb28cf8cd0d976c315e31b4\"\ndependencies = [\n \"powerfmt\",\n]\n\n[[package]]\nname = \"derive_builder\"\nversion = \"0.10.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d13202debe11181040ae9063d739fa32cfcaaebe2275fe387703460ae2365b30\"\ndependencies = [\n \"derive_builder_macro\",\n]\n\n[[package]]\nname = \"derive_builder_core\"\nversion = \"0.10.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"66e616858f6187ed828df7c64a6d71720d83767a7f19740b2d1b6fe6327b36e5\"\ndependencies = [\n \"darling\",\n \"proc-macro2\",\n \"quote\",\n \"syn 1.0.109\",\n]\n\n[[package]]\nname = \"derive_builder_macro\"\nversion = \"0.10.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"58a94ace95092c5acb1e97a7e846b310cfbd499652f72297da7493f618a98d73\"\ndependencies = [\n \"derive_builder_core\",\n \"syn 1.0.109\",\n]\n\n[[package]]\nname = \"difflib\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6184e33543162437515c2e2b48714794e37845ec9851711914eec9d308f6ebe8\"\n\n[[package]]\nname = \"digest\"\nversion = \"0.10.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9ed9a281f7bc9b7576e61468ba615a66a5c8cfdff42420a70aa82701a3b1e292\"\ndependencies = [\n \"block-buffer\",\n \"crypto-common\",\n]\n\n[[package]]\nname = \"dirs\"\nversion = \"4.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ca3aa72a6f96ea37bbc5aa912f6788242832f75369bdfdadcb0e38423f100059\"\ndependencies = [\n \"dirs-sys\",\n]\n\n[[package]]\nname = \"dirs-next\"\nversion = \"2.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b98cf8ebf19c3d1b223e151f99a4f9f0690dca41414773390fc824184ac833e1\"\ndependencies = [\n \"cfg-if 1.0.0\",\n \"dirs-sys-next\",\n]\n\n[[package]]\nname = \"dirs-sys\"\nversion = \"0.3.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1b1d1d91c932ef41c0f2663aa8b0ca0342d444d842c06914aa0a7e352d0bada6\"\ndependencies = [\n \"libc\",\n \"redox_users\",\n \"winapi 0.3.9\",\n]\n\n[[package]]\nname = \"dirs-sys-next\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4ebda144c4fe02d1f7ea1a7d9641b6fc6b580adcfa024ae48797ecdeb6825b4d\"\ndependencies = [\n \"libc\",\n \"redox_users\",\n \"winapi 0.3.9\",\n]\n\n[[package]]\nname = \"doc-comment\"\nversion = \"0.3.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fea41bba32d969b513997752735605054bc0dfa92b4c56bf1189f2e174be7a10\"\n\n[[package]]\nname = \"dotenvy\"\nversion = \"0.15.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1aaf95b3e5c8f23aa320147307562d361db0ae0d51242340f558153b4eb2439b\"\n\n[[package]]\nname = \"either\"\nversion = \"1.13.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"60b1af1c220855b6ceac025d3f6ecdd2b7c4894bfe9cd9bda4fbb4bc7c0d4cf0\"\n\n[[package]]\nname = \"encode_unicode\"\nversion = \"0.3.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a357d28ed41a50f9c765dbfe56cbc04a64e53e5fc58ba79fbc34c10ef3df831f\"\n\n[[package]]\nname = \"endi\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a3d8a32ae18130a3c84dd492d4215c3d913c3b07c6b63c2eb3eb7ff1101ab7bf\"\n\n[[package]]\nname = \"enumflags2\"\nversion = \"0.7.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d232db7f5956f3f14313dc2f87985c58bd2c695ce124c8cdd984e08e15ac133d\"\ndependencies = [\n \"enumflags2_derive\",\n \"serde\",\n]\n\n[[package]]\nname = \"enumflags2_derive\"\nversion = \"0.7.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"de0d48a183585823424a4ce1aa132d174a6a81bd540895822eb4c8373a8e49e8\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.79\",\n]\n\n[[package]]\nname = \"equivalent\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5443807d6dff69373d433ab9ef5378ad8df50ca6298caf15de6e52e24aaf54d5\"\n\n[[package]]\nname = \"errno\"\nversion = \"0.3.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"534c5cf6194dfab3db3242765c03bbe257cf92f22b38f6bc0c58d59108a820ba\"\ndependencies = [\n \"libc\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"event-listener\"\nversion = \"5.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6032be9bd27023a771701cc49f9f053c751055f71efb2e0ae5c15809093675ba\"\ndependencies = [\n \"concurrent-queue\",\n \"parking\",\n \"pin-project-lite\",\n]\n\n[[package]]\nname = \"event-listener-strategy\"\nversion = \"0.5.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0f214dc438f977e6d4e3500aaa277f5ad94ca83fbbd9b1a15713ce2344ccc5a1\"\ndependencies = [\n \"event-listener\",\n \"pin-project-lite\",\n]\n\n[[package]]\nname = \"fastrand\"\nversion = \"2.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e8c02a5121d4ea3eb16a80748c74f5549a5665e4c21333c6098f283870fbdea6\"\n\n[[package]]\nname = \"filetime\"\nversion = \"0.2.25\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"35c0522e981e68cbfa8c3f978441a5f34b30b96e146b33cd3359176b50fe8586\"\ndependencies = [\n \"cfg-if 1.0.0\",\n \"libc\",\n \"libredox\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"float-cmp\"\nversion = \"0.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"98de4bbd547a563b716d8dfa9aad1cb19bfab00f4fa09a6a4ed21dbcf44ce9c4\"\ndependencies = [\n \"num-traits\",\n]\n\n[[package]]\nname = \"fnv\"\nversion = \"1.0.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3f9eec918d3f24069decb9af1554cad7c880e2da24a9afd88aca000531ab82c1\"\n\n[[package]]\nname = \"fsevent\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5ab7d1bd1bd33cc98b0889831b72da23c0aa4df9cec7e0702f46ecea04b35db6\"\ndependencies = [\n \"bitflags 1.3.2\",\n \"fsevent-sys\",\n]\n\n[[package]]\nname = \"fsevent-sys\"\nversion = \"2.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f41b048a94555da0f42f1d632e2e19510084fb8e303b0daa2816e733fb3644a0\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"fuchsia-zircon\"\nversion = \"0.3.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2e9763c69ebaae630ba35f74888db465e49e259ba1bc0eda7d06f4a067615d82\"\ndependencies = [\n \"bitflags 1.3.2\",\n \"fuchsia-zircon-sys\",\n]\n\n[[package]]\nname = \"fuchsia-zircon-sys\"\nversion = \"0.3.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3dcaa9ae7725d12cdb85b3ad99a434db70b468c09ded17e012d86b5c1010f7a7\"\n\n[[package]]\nname = \"futures-core\"\nversion = \"0.3.30\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dfc6580bb841c5a68e9ef15c77ccc837b40a7504914d52e47b8b0e9bbda25a1d\"\n\n[[package]]\nname = \"futures-io\"\nversion = \"0.3.30\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a44623e20b9681a318efdd71c299b6b222ed6f231972bfe2f224ebad6311f0c1\"\n\n[[package]]\nname = \"futures-lite\"\nversion = \"2.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"52527eb5074e35e9339c6b4e8d12600c7128b68fb25dcb9fa9dec18f7c25f3a5\"\ndependencies = [\n \"fastrand\",\n \"futures-core\",\n \"futures-io\",\n \"parking\",\n \"pin-project-lite\",\n]\n\n[[package]]\nname = \"futures-sink\"\nversion = \"0.3.30\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9fb8e00e87438d937621c1c6269e53f536c14d3fbd6a042bb24879e57d474fb5\"\n\n[[package]]\nname = \"futures-task\"\nversion = \"0.3.30\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"38d84fa142264698cdce1a9f9172cf383a0c82de1bddcf3092901442c4097004\"\n\n[[package]]\nname = \"futures-util\"\nversion = \"0.3.30\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3d6401deb83407ab3da39eba7e33987a73c3df0c82b4bb5813ee871c19c41d48\"\ndependencies = [\n \"futures-core\",\n \"futures-io\",\n \"futures-sink\",\n \"futures-task\",\n \"memchr\",\n \"pin-project-lite\",\n \"pin-utils\",\n \"slab\",\n]\n\n[[package]]\nname = \"generic-array\"\nversion = \"0.14.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"85649ca51fd72272d7821adaf274ad91c288277713d9c18820d8499a7ff69e9a\"\ndependencies = [\n \"typenum\",\n \"version_check\",\n]\n\n[[package]]\nname = \"getrandom\"\nversion = \"0.2.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c4567c8db10ae91089c99af84c68c38da3ec2f087c3f82960bcdbf3656b6f4d7\"\ndependencies = [\n \"cfg-if 1.0.0\",\n \"libc\",\n \"wasi\",\n]\n\n[[package]]\nname = \"glob\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d2fabcfbdc87f4758337ca535fb41a6d701b65693ce38287d856d1674551ec9b\"\n\n[[package]]\nname = \"globset\"\nversion = \"0.4.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c152169ef1e421390738366d2f796655fec62621dabbd0fd476f905934061e4a\"\ndependencies = [\n \"aho-corasick 0.7.20\",\n \"bstr\",\n \"fnv\",\n \"log\",\n \"regex\",\n]\n\n[[package]]\nname = \"hashbrown\"\nversion = \"0.15.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1e087f84d4f86bf4b218b927129862374b72199ae7d8657835f1e89000eea4fb\"\n\n[[package]]\nname = \"hermit-abi\"\nversion = \"0.1.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"62b467343b94ba476dcb2500d242dadbb39557df889310ac77c5d99100aaac33\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"hermit-abi\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fbf6a919d6cf397374f7dfeeea91d974c7c0a7221d0d0f4f20d859d329e53fcc\"\n\n[[package]]\nname = \"hex\"\nversion = \"0.4.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7f24254aa9a54b5c858eaee2f5bccdb46aaf0e486a595ed5fd8f86ba55232a70\"\n\n[[package]]\nname = \"home\"\nversion = \"0.5.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e3d1354bf6b7235cb4a0576c2619fd4ed18183f689b12b006a0ee7329eeff9a5\"\ndependencies = [\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"iana-time-zone\"\nversion = \"0.1.61\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"235e081f3925a06703c2d0117ea8b91f042756fd6e7a6e5d901e8ca1a996b220\"\ndependencies = [\n \"android_system_properties\",\n \"core-foundation-sys\",\n \"iana-time-zone-haiku\",\n \"js-sys\",\n \"wasm-bindgen\",\n \"windows-core 0.52.0\",\n]\n\n[[package]]\nname = \"iana-time-zone-haiku\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f31827a206f56af32e590ba56d5d2d085f558508192593743f16b2306495269f\"\ndependencies = [\n \"cc\",\n]\n\n[[package]]\nname = \"ident_case\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b9e0384b61958566e926dc50660321d12159025e767c18e043daf26b70104c39\"\n\n[[package]]\nname = \"indexmap\"\nversion = \"2.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"707907fe3c25f5424cce2cb7e1cbcafee6bdbe735ca90ef77c29e84591e5b9da\"\ndependencies = [\n \"equivalent\",\n \"hashbrown\",\n]\n\n[[package]]\nname = \"inotify\"\nversion = \"0.7.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4816c66d2c8ae673df83366c18341538f234a26d65a9ecea5c348b453ac1d02f\"\ndependencies = [\n \"bitflags 1.3.2\",\n \"inotify-sys\",\n \"libc\",\n]\n\n[[package]]\nname = \"inotify-sys\"\nversion = \"0.1.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e05c02b5e89bff3b946cedeca278abc628fe811e604f027c45a8aa3cf793d0eb\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"insta\"\nversion = \"1.40.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6593a41c7a73841868772495db7dc1e8ecab43bb5c0b6da2059246c4b506ab60\"\ndependencies = [\n \"console\",\n \"lazy_static\",\n \"linked-hash-map\",\n \"similar\",\n]\n\n[[package]]\nname = \"iovec\"\nversion = \"0.1.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b2b3ea6ff95e175473f8ffe6a7eb7c00d054240321b84c57051175fe3c1e075e\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"is-terminal\"\nversion = \"0.4.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"261f68e344040fbd0edea105bef17c66edf46f984ddb1115b775ce31be948f4b\"\ndependencies = [\n \"hermit-abi 0.4.0\",\n \"libc\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"itertools\"\nversion = \"0.10.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b0fd2260e829bddf4cb6ea802289de2f86d6a7a690192fbe91b3f46e0f2c8473\"\ndependencies = [\n \"either\",\n]\n\n[[package]]\nname = \"itoa\"\nversion = \"1.0.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"49f1f14873335454500d59611f1cf4a4b0f786f9ac11f4312a78e4cf2566695b\"\n\n[[package]]\nname = \"js-sys\"\nversion = \"0.3.70\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1868808506b929d7b0cfa8f75951347aa71bb21144b7791bae35d9bccfcfe37a\"\ndependencies = [\n \"wasm-bindgen\",\n]\n\n[[package]]\nname = \"kernel32-sys\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7507624b29483431c0ba2d82aece8ca6cdba9382bff4ddd0f7490560c056098d\"\ndependencies = [\n \"winapi 0.2.8\",\n \"winapi-build\",\n]\n\n[[package]]\nname = \"lazy_static\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bbd2bcb4c963f2ddae06a2efc7e9f3591312473c50c6685e1f298068316e66fe\"\n\n[[package]]\nname = \"lazycell\"\nversion = \"1.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"830d08ce1d1d941e6b30645f1a0eb5643013d835ce3779a5fc208261dbe10f55\"\n\n[[package]]\nname = \"libc\"\nversion = \"0.2.159\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"561d97a539a36e26a9a5fad1ea11a3039a67714694aaa379433e580854bc3dc5\"\n\n[[package]]\nname = \"libredox\"\nversion = \"0.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c0ff37bd590ca25063e35af745c343cb7a0271906fb7b37e4813e8f79f00268d\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"libc\",\n \"redox_syscall\",\n]\n\n[[package]]\nname = \"linked-hash-map\"\nversion = \"0.5.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0717cef1bc8b636c6e1c1bbdefc09e6322da8a9321966e8928ef80d20f7f770f\"\n\n[[package]]\nname = \"linux-raw-sys\"\nversion = \"0.4.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"78b3ae25bc7c8c38cec158d1f2757ee79e9b3740fbc7ccf0e59e4b08d793fa89\"\n\n[[package]]\nname = \"log\"\nversion = \"0.4.22\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a7a70ba024b9dc04c27ea2f0c0548feb474ec5c54bba33a7f72f873a39d07b24\"\n\n[[package]]\nname = \"mac-notification-sys\"\nversion = \"0.6.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dce8f34f3717aa37177e723df6c1fc5fb02b2a1087374ea3fe0ea42316dc8f91\"\ndependencies = [\n \"cc\",\n \"dirs-next\",\n \"objc-foundation\",\n \"objc_id\",\n \"time\",\n]\n\n[[package]]\nname = \"malloc_buf\"\nversion = \"0.0.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"62bb907fe88d54d8d9ce32a3cceab4218ed2f6b7d35617cafe9adf84e43919cb\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"memchr\"\nversion = \"2.7.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"78ca9ab1a0babb1e7d5695e3530886289c18cf2f87ec19a575a0abdce112e3a3\"\n\n[[package]]\nname = \"memoffset\"\nversion = \"0.6.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5aa361d4faea93603064a027415f07bd8e1d5c88c9fbf68bf56a285428fd79ce\"\ndependencies = [\n \"autocfg\",\n]\n\n[[package]]\nname = \"memoffset\"\nversion = \"0.9.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"488016bfae457b036d996092f6cb448677611ce4449e970ceaf42695203f218a\"\ndependencies = [\n \"autocfg\",\n]\n\n[[package]]\nname = \"mio\"\nversion = \"0.6.23\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4afd66f5b91bf2a3bc13fad0e21caedac168ca4c707504e75585648ae80e4cc4\"\ndependencies = [\n \"cfg-if 0.1.10\",\n \"fuchsia-zircon\",\n \"fuchsia-zircon-sys\",\n \"iovec\",\n \"kernel32-sys\",\n \"libc\",\n \"log\",\n \"miow\",\n \"net2\",\n \"slab\",\n \"winapi 0.2.8\",\n]\n\n[[package]]\nname = \"mio-extras\"\nversion = \"2.0.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"52403fe290012ce777c4626790c8951324a2b9e3316b3143779c72b029742f19\"\ndependencies = [\n \"lazycell\",\n \"log\",\n \"mio\",\n \"slab\",\n]\n\n[[package]]\nname = \"miow\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ebd808424166322d4a38da87083bfddd3ac4c131334ed55856112eb06d46944d\"\ndependencies = [\n \"kernel32-sys\",\n \"net2\",\n \"winapi 0.2.8\",\n \"ws2_32-sys\",\n]\n\n[[package]]\nname = \"net2\"\nversion = \"0.2.39\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b13b648036a2339d06de780866fbdfda0dde886de7b3af2ddeba8b14f4ee34ac\"\ndependencies = [\n \"cfg-if 0.1.10\",\n \"libc\",\n \"winapi 0.3.9\",\n]\n\n[[package]]\nname = \"nix\"\nversion = \"0.22.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e4916f159ed8e5de0082076562152a76b7a1f64a01fd9d1e0fea002c37624faf\"\ndependencies = [\n \"bitflags 1.3.2\",\n \"cc\",\n \"cfg-if 1.0.0\",\n \"libc\",\n \"memoffset 0.6.5\",\n]\n\n[[package]]\nname = \"nix\"\nversion = \"0.24.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fa52e972a9a719cecb6864fb88568781eb706bac2cd1d4f04a648542dbf78069\"\ndependencies = [\n \"bitflags 1.3.2\",\n \"cfg-if 1.0.0\",\n \"libc\",\n]\n\n[[package]]\nname = \"nix\"\nversion = \"0.29.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"71e2746dc3a24dd78b3cfcb7be93368c6de9963d30f43a6a73998a9cf4b17b46\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"cfg-if 1.0.0\",\n \"cfg_aliases\",\n \"libc\",\n \"memoffset 0.9.1\",\n]\n\n[[package]]\nname = \"nom\"\nversion = \"5.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"08959a387a676302eebf4ddbcbc611da04285579f76f88ee0506c63b1a61dd4b\"\ndependencies = [\n \"memchr\",\n \"version_check\",\n]\n\n[[package]]\nname = \"normalize-line-endings\"\nversion = \"0.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"61807f77802ff30975e01f4f071c8ba10c022052f98b3294119f3e615d13e5be\"\n\n[[package]]\nname = \"notify\"\nversion = \"4.0.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b72dd35279a5dc895a30965e247b0961ba36c233dc48454a2de8ccd459f1afd3\"\ndependencies = [\n \"bitflags 1.3.2\",\n \"filetime\",\n \"fsevent\",\n \"fsevent-sys\",\n \"inotify\",\n \"libc\",\n \"mio\",\n \"mio-extras\",\n \"walkdir\",\n \"winapi 0.3.9\",\n]\n\n[[package]]\nname = \"notify-rust\"\nversion = \"4.11.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5134a72dc570b178bff81b01e81ab14a6fcc015391ed4b3b14853090658cd3a3\"\ndependencies = [\n \"log\",\n \"mac-notification-sys\",\n \"serde\",\n \"tauri-winrt-notification\",\n \"zbus\",\n]\n\n[[package]]\nname = \"num-conv\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"51d515d32fb182ee37cda2ccdcb92950d6a3c2893aa280e540671c2cd0f3b1d9\"\n\n[[package]]\nname = \"num-traits\"\nversion = \"0.2.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"071dfc062690e90b734c0b2273ce72ad0ffa95f0c74596bc250dcfd960262841\"\ndependencies = [\n \"autocfg\",\n]\n\n[[package]]\nname = \"objc\"\nversion = \"0.2.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"915b1b472bc21c53464d6c8461c9d3af805ba1ef837e1cac254428f4a77177b1\"\ndependencies = [\n \"malloc_buf\",\n]\n\n[[package]]\nname = \"objc-foundation\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1add1b659e36c9607c7aab864a76c7a4c2760cd0cd2e120f3fb8b952c7e22bf9\"\ndependencies = [\n \"block\",\n \"objc\",\n \"objc_id\",\n]\n\n[[package]]\nname = \"objc_id\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c92d4ddb4bd7b50d730c215ff871754d0da6b2178849f8a2a2ab69712d0c073b\"\ndependencies = [\n \"objc\",\n]\n\n[[package]]\nname = \"once_cell\"\nversion = \"1.20.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"82881c4be219ab5faaf2ad5e5e5ecdff8c66bd7402ca3160975c93b24961afd1\"\ndependencies = [\n \"portable-atomic\",\n]\n\n[[package]]\nname = \"ordered-stream\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9aa2b01e1d916879f73a53d01d1d6cee68adbb31d6d9177a8cfce093cced1d50\"\ndependencies = [\n \"futures-core\",\n \"pin-project-lite\",\n]\n\n[[package]]\nname = \"parking\"\nversion = \"2.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f38d5652c16fde515bb1ecef450ab0f6a219d619a7274976324d5e377f7dceba\"\n\n[[package]]\nname = \"phf\"\nversion = \"0.11.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ade2d8b8f33c7333b51bcf0428d37e217e9f32192ae4772156f65063b8ce03dc\"\ndependencies = [\n \"phf_shared\",\n]\n\n[[package]]\nname = \"phf_codegen\"\nversion = \"0.11.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e8d39688d359e6b34654d328e262234662d16cc0f60ec8dcbe5e718709342a5a\"\ndependencies = [\n \"phf_generator\",\n \"phf_shared\",\n]\n\n[[package]]\nname = \"phf_generator\"\nversion = \"0.11.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"48e4cc64c2ad9ebe670cb8fd69dd50ae301650392e81c05f9bfcb2d5bdbc24b0\"\ndependencies = [\n \"phf_shared\",\n \"rand\",\n]\n\n[[package]]\nname = \"phf_shared\"\nversion = \"0.11.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"90fcb95eef784c2ac79119d1dd819e162b5da872ce6f3c3abe1e8ca1c082f72b\"\ndependencies = [\n \"siphasher\",\n]\n\n[[package]]\nname = \"pin-project-lite\"\nversion = \"0.2.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bda66fc9667c18cb2758a2ac84d1167245054bcf85d5d1aaa6923f45801bdd02\"\n\n[[package]]\nname = \"pin-utils\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8b870d8c151b6f2fb93e84a13146138f05d02ed11c7e7c54f8826aaaf7c9f184\"\n\n[[package]]\nname = \"piper\"\nversion = \"0.2.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"96c8c490f422ef9a4efd2cb5b42b76c8613d7e7dfc1caf667b8a3350a5acc066\"\ndependencies = [\n \"atomic-waker\",\n \"fastrand\",\n \"futures-io\",\n]\n\n[[package]]\nname = \"polling\"\nversion = \"3.7.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cc2790cd301dec6cd3b7a025e4815cf825724a51c98dccfe6a3e55f05ffb6511\"\ndependencies = [\n \"cfg-if 1.0.0\",\n \"concurrent-queue\",\n \"hermit-abi 0.4.0\",\n \"pin-project-lite\",\n \"rustix\",\n \"tracing\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"portable-atomic\"\nversion = \"1.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cc9c68a3f6da06753e9335d63e27f6b9754dd1920d941135b7ea8224f141adb2\"\n\n[[package]]\nname = \"powerfmt\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"439ee305def115ba05938db6eb1644ff94165c5ab5e9420d1c1bcedbba909391\"\n\n[[package]]\nname = \"ppv-lite86\"\nversion = \"0.2.20\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"77957b295656769bb8ad2b6a6b09d897d94f05c41b069aede1fcdaa675eaea04\"\ndependencies = [\n \"zerocopy\",\n]\n\n[[package]]\nname = \"predicates\"\nversion = \"2.1.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"59230a63c37f3e18569bdb90e4a89cbf5bf8b06fea0b84e65ea10cc4df47addd\"\ndependencies = [\n \"difflib\",\n \"itertools\",\n \"predicates-core\",\n]\n\n[[package]]\nname = \"predicates\"\nversion = \"3.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7e9086cc7640c29a356d1a29fd134380bee9d8f79a17410aa76e7ad295f42c97\"\ndependencies = [\n \"anstyle\",\n \"difflib\",\n \"float-cmp\",\n \"normalize-line-endings\",\n \"predicates-core\",\n \"regex\",\n]\n\n[[package]]\nname = \"predicates-core\"\nversion = \"1.0.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ae8177bee8e75d6846599c6b9ff679ed51e882816914eec639944d7c9aa11931\"\n\n[[package]]\nname = \"predicates-tree\"\nversion = \"1.0.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"41b740d195ed3166cd147c8047ec98db0e22ec019eb8eeb76d343b795304fb13\"\ndependencies = [\n \"predicates-core\",\n \"termtree\",\n]\n\n[[package]]\nname = \"proc-macro-crate\"\nversion = \"3.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8ecf48c7ca261d60b74ab1a7b20da18bede46776b2e55535cb958eb595c5fa7b\"\ndependencies = [\n \"toml_edit\",\n]\n\n[[package]]\nname = \"proc-macro2\"\nversion = \"1.0.86\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5e719e8df665df0d1c8fbfd238015744736151d4445ec0836b8e628aae103b77\"\ndependencies = [\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"quick-xml\"\nversion = \"0.31.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1004a344b30a54e2ee58d66a71b32d2db2feb0a31f9a2d302bf0536f15de2a33\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"quote\"\nversion = \"1.0.37\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b5b9d34b8991d19d98081b46eacdd8eb58c6f2b201139f7c5f643cc155a633af\"\ndependencies = [\n \"proc-macro2\",\n]\n\n[[package]]\nname = \"rand\"\nversion = \"0.8.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"34af8d1a0e25924bc5b7c43c079c942339d8f0a8b57c39049bef581b46327404\"\ndependencies = [\n \"libc\",\n \"rand_chacha\",\n \"rand_core\",\n]\n\n[[package]]\nname = \"rand_chacha\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e6c10a63a0fa32252be49d21e7709d4d4baf8d231c2dbce1eaa8141b9b127d88\"\ndependencies = [\n \"ppv-lite86\",\n \"rand_core\",\n]\n\n[[package]]\nname = \"rand_core\"\nversion = \"0.6.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ec0be4795e2f6a28069bec0b5ff3e2ac9bafc99e6a9a7dc3547996c5c816922c\"\ndependencies = [\n \"getrandom\",\n]\n\n[[package]]\nname = \"redox_syscall\"\nversion = \"0.5.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9b6dfecf2c74bce2466cabf93f6664d6998a69eb21e39f4207930065b27b771f\"\ndependencies = [\n \"bitflags 2.6.0\",\n]\n\n[[package]]\nname = \"redox_users\"\nversion = \"0.4.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ba009ff324d1fc1b900bd1fdb31564febe58a8ccc8a6fdbb93b543d33b13ca43\"\ndependencies = [\n \"getrandom\",\n \"libredox\",\n \"thiserror\",\n]\n\n[[package]]\nname = \"regex\"\nversion = \"1.11.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"38200e5ee88914975b69f657f0801b6f6dccafd44fd9326302a4aaeecfacb1d8\"\ndependencies = [\n \"aho-corasick 1.1.3\",\n \"memchr\",\n \"regex-automata 0.4.8\",\n \"regex-syntax\",\n]\n\n[[package]]\nname = \"regex-automata\"\nversion = \"0.1.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6c230d73fb8d8c1b9c0b3135c5142a8acee3a0558fb8db5cf1cb65f8d7862132\"\n\n[[package]]\nname = \"regex-automata\"\nversion = \"0.4.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"368758f23274712b504848e9d5a6f010445cc8b87a7cdb4d7cbee666c1288da3\"\ndependencies = [\n \"aho-corasick 1.1.3\",\n \"memchr\",\n \"regex-syntax\",\n]\n\n[[package]]\nname = \"regex-syntax\"\nversion = \"0.8.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2b15c43186be67a4fd63bee50d0303afffcef381492ebe2c5d87f324e1b8815c\"\n\n[[package]]\nname = \"rustix\"\nversion = \"0.38.37\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8acb788b847c24f28525660c4d7758620a7210875711f79e7f663cc152726811\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"errno\",\n \"libc\",\n \"linux-raw-sys\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"ryu\"\nversion = \"1.0.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f3cb5ba0dc43242ce17de99c180e96db90b235b8a9fdc9543c96d2209116bd9f\"\n\n[[package]]\nname = \"same-file\"\nversion = \"1.0.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"93fc1dc3aaa9bfed95e02e6eadabb4baf7e3078b0bd1b4d7b6b0b68378900502\"\ndependencies = [\n \"winapi-util\",\n]\n\n[[package]]\nname = \"semver\"\nversion = \"1.0.23\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"61697e0a1c7e512e84a621326239844a24d8207b4669b41bc18b32ea5cbf988b\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"serde\"\nversion = \"1.0.210\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c8e3592472072e6e22e0a54d5904d9febf8508f65fb8552499a1abc7d1078c3a\"\ndependencies = [\n \"serde_derive\",\n]\n\n[[package]]\nname = \"serde_derive\"\nversion = \"1.0.210\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"243902eda00fad750862fc144cea25caca5e20d615af0a81bee94ca738f1df1f\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.79\",\n]\n\n[[package]]\nname = \"serde_json\"\nversion = \"1.0.128\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6ff5456707a1de34e7e37f2a6fd3d3f808c318259cbd01ab6377795054b483d8\"\ndependencies = [\n \"itoa\",\n \"memchr\",\n \"ryu\",\n \"serde\",\n]\n\n[[package]]\nname = \"serde_repr\"\nversion = \"0.1.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6c64451ba24fc7a6a2d60fc75dd9c83c90903b19028d4eff35e88fc1e86564e9\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.79\",\n]\n\n[[package]]\nname = \"sha1\"\nversion = \"0.10.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e3bf829a2d51ab4a5ddf1352d8470c140cadc8301b2ae1789db023f01cedd6ba\"\ndependencies = [\n \"cfg-if 1.0.0\",\n \"cpufeatures\",\n \"digest\",\n]\n\n[[package]]\nname = \"shell-escape\"\nversion = \"0.1.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"45bb67a18fa91266cc7807181f62f9178a6873bfad7dc788c42e6430db40184f\"\n\n[[package]]\nname = \"shlex\"\nversion = \"1.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0fda2ff0d084019ba4d7c6f371c95d8fd75ce3524c3cb8fb653a3023f6323e64\"\n\n[[package]]\nname = \"signal-hook-registry\"\nversion = \"1.4.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a9e9e0b4211b72e7b8b6e85c807d36c212bdb33ea8587f7569562a84df5465b1\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"similar\"\nversion = \"2.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1de1d4f81173b03af4c0cbed3c898f6bff5b870e4a7f5d6f4057d62a7a4b686e\"\n\n[[package]]\nname = \"siphasher\"\nversion = \"0.3.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"38b58827f4464d87d377d175e90bf58eb00fd8716ff0a62f80356b5e61555d0d\"\n\n[[package]]\nname = \"slab\"\nversion = \"0.4.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8f92a496fb766b417c996b9c5e57daf2f7ad3b0bebe1ccfca4856390e3d3bb67\"\ndependencies = [\n \"autocfg\",\n]\n\n[[package]]\nname = \"static_assertions\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a2eb9349b6444b326872e140eb1cf5e7c522154d69e7a0ffb0fb81c06b37543f\"\n\n[[package]]\nname = \"stderrlog\"\nversion = \"0.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"61c910772f992ab17d32d6760e167d2353f4130ed50e796752689556af07dc6b\"\ndependencies = [\n \"chrono\",\n \"is-terminal\",\n \"log\",\n \"termcolor\",\n \"thread_local\",\n]\n\n[[package]]\nname = \"strsim\"\nversion = \"0.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8ea5119cdb4c55b55d432abb513a0429384878c15dde60cc77b1c99de1a95a6a\"\n\n[[package]]\nname = \"strsim\"\nversion = \"0.10.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"73473c0e59e6d5812c5dfe2a064a6444949f089e20eec9a2e5506596494e4623\"\n\n[[package]]\nname = \"syn\"\nversion = \"1.0.109\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"72b64191b275b66ffe2469e8af2c1cfe3bafa67b529ead792a6d0160888b4237\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"syn\"\nversion = \"2.0.79\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"89132cd0bf050864e1d38dc3bbc07a0eb8e7530af26344d3d2bbbef83499f590\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"tauri-winrt-notification\"\nversion = \"0.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f89f5fb70d6f62381f5d9b2ba9008196150b40b75f3068eb24faeddf1c686871\"\ndependencies = [\n \"quick-xml\",\n \"windows\",\n \"windows-version\",\n]\n\n[[package]]\nname = \"tempfile\"\nversion = \"3.13.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f0f2c9fc62d0beef6951ccffd757e241266a2c833136efbe35af6cd2567dca5b\"\ndependencies = [\n \"cfg-if 1.0.0\",\n \"fastrand\",\n \"once_cell\",\n \"rustix\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"termcolor\"\nversion = \"1.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bab24d30b911b2376f3a13cc2cd443142f0c81dda04c118693e35b3835757755\"\ndependencies = [\n \"winapi-util\",\n]\n\n[[package]]\nname = \"terminfo\"\nversion = \"0.7.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"da31aef70da0f6352dbcb462683eb4dd2bfad01cf3fc96cf204547b9a839a585\"\ndependencies = [\n \"dirs\",\n \"fnv\",\n \"nom\",\n \"phf\",\n \"phf_codegen\",\n]\n\n[[package]]\nname = \"termtree\"\nversion = \"0.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3369f5ac52d5eb6ab48c6b4ffdc8efbcad6b89c765749064ba298f2c68a16a76\"\n\n[[package]]\nname = \"textwrap\"\nversion = \"0.11.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d326610f408c7a4eb6f51c37c330e496b08506c9457c9d34287ecc38809fb060\"\ndependencies = [\n \"unicode-width\",\n]\n\n[[package]]\nname = \"thiserror\"\nversion = \"1.0.64\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d50af8abc119fb8bb6dbabcfa89656f46f84aa0ac7688088608076ad2b459a84\"\ndependencies = [\n \"thiserror-impl\",\n]\n\n[[package]]\nname = \"thiserror-impl\"\nversion = \"1.0.64\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"08904e7672f5eb876eaaf87e0ce17857500934f4981c4a0ab2b4aa98baac7fc3\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.79\",\n]\n\n[[package]]\nname = \"thread_local\"\nversion = \"1.1.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8b9ef9bad013ada3808854ceac7b46812a6465ba368859a37e2100283d2d719c\"\ndependencies = [\n \"cfg-if 1.0.0\",\n \"once_cell\",\n]\n\n[[package]]\nname = \"time\"\nversion = \"0.3.36\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5dfd88e563464686c916c7e46e623e520ddc6d79fa6641390f2e3fa86e83e885\"\ndependencies = [\n \"deranged\",\n \"num-conv\",\n \"powerfmt\",\n \"serde\",\n \"time-core\",\n]\n\n[[package]]\nname = \"time-core\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ef927ca75afb808a4d64dd374f00a2adf8d0fcff8e7b184af886c3c87ec4a3f3\"\n\n[[package]]\nname = \"toml_datetime\"\nversion = \"0.6.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0dd7358ecb8fc2f8d014bf86f6f638ce72ba252a2c3a2572f2a795f1d23efb41\"\n\n[[package]]\nname = \"toml_edit\"\nversion = \"0.22.22\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4ae48d6208a266e853d946088ed816055e556cc6028c5e8e2b84d9fa5dd7c7f5\"\ndependencies = [\n \"indexmap\",\n \"toml_datetime\",\n \"winnow\",\n]\n\n[[package]]\nname = \"tracing\"\nversion = \"0.1.40\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c3523ab5a71916ccf420eebdf5521fcef02141234bbc0b8a49f2fdc4544364ef\"\ndependencies = [\n \"pin-project-lite\",\n \"tracing-attributes\",\n \"tracing-core\",\n]\n\n[[package]]\nname = \"tracing-attributes\"\nversion = \"0.1.27\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"34704c8d6ebcbc939824180af020566b01a7c01f80641264eba0999f6c2b6be7\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.79\",\n]\n\n[[package]]\nname = \"tracing-core\"\nversion = \"0.1.32\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c06d3da6113f116aaee68e4d601191614c9053067f9ab7f6edbcb161237daa54\"\ndependencies = [\n \"once_cell\",\n]\n\n[[package]]\nname = \"typenum\"\nversion = \"1.17.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"42ff0bf0c66b8238c6f3b578df37d0b7848e55df8577b3f74f92a69acceeb825\"\n\n[[package]]\nname = \"uds_windows\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"89daebc3e6fd160ac4aa9fc8b3bf71e1f74fbf92367ae71fb83a037e8bf164b9\"\ndependencies = [\n \"memoffset 0.9.1\",\n \"tempfile\",\n \"winapi 0.3.9\",\n]\n\n[[package]]\nname = \"unicode-ident\"\nversion = \"1.0.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e91b56cd4cadaeb79bbf1a5645f6b4f8dc5bde8834ad5894a8db35fda9efa1fe\"\n\n[[package]]\nname = \"unicode-width\"\nversion = \"0.1.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7dd6e30e90baa6f72411720665d41d89b9a3d039dc45b8faea1ddd07f617f6af\"\n\n[[package]]\nname = \"vec_map\"\nversion = \"0.8.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f1bddf1187be692e79c5ffeab891132dfb0f236ed36a43c7ed39f1165ee20191\"\n\n[[package]]\nname = \"version_check\"\nversion = \"0.9.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0b928f33d975fc6ad9f86c8f283853ad26bdd5b10b7f1542aa2fa15e2289105a\"\n\n[[package]]\nname = \"wait-timeout\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9f200f5b12eb75f8c1ed65abd4b2db8a6e1b138a20de009dacee265a2498f3f6\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"walkdir\"\nversion = \"2.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"29790946404f91d9c5d06f9874efddea1dc06c5efe94541a7d6863108e3a5e4b\"\ndependencies = [\n \"same-file\",\n \"winapi-util\",\n]\n\n[[package]]\nname = \"wasi\"\nversion = \"0.11.0+wasi-snapshot-preview1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9c8d87e72b64a3b4db28d11ce29237c246188f4f51057d65a7eab63b7987e423\"\n\n[[package]]\nname = \"wasm-bindgen\"\nversion = \"0.2.93\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a82edfc16a6c469f5f44dc7b571814045d60404b55a0ee849f9bcfa2e63dd9b5\"\ndependencies = [\n \"cfg-if 1.0.0\",\n \"once_cell\",\n \"wasm-bindgen-macro\",\n]\n\n[[package]]\nname = \"wasm-bindgen-backend\"\nversion = \"0.2.93\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9de396da306523044d3302746f1208fa71d7532227f15e347e2d93e4145dd77b\"\ndependencies = [\n \"bumpalo\",\n \"log\",\n \"once_cell\",\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.79\",\n \"wasm-bindgen-shared\",\n]\n\n[[package]]\nname = \"wasm-bindgen-macro\"\nversion = \"0.2.93\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"585c4c91a46b072c92e908d99cb1dcdf95c5218eeb6f3bf1efa991ee7a68cccf\"\ndependencies = [\n \"quote\",\n \"wasm-bindgen-macro-support\",\n]\n\n[[package]]\nname = \"wasm-bindgen-macro-support\"\nversion = \"0.2.93\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"afc340c74d9005395cf9dd098506f7f44e38f2b4a21c6aaacf9a105ea5e1e836\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.79\",\n \"wasm-bindgen-backend\",\n \"wasm-bindgen-shared\",\n]\n\n[[package]]\nname = \"wasm-bindgen-shared\"\nversion = \"0.2.93\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c62a0a307cb4a311d3a07867860911ca130c3494e8c2719593806c08bc5d0484\"\n\n[[package]]\nname = \"watchexec\"\nversion = \"1.17.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"38928d7ff5274e31594da2d46453a2c741fa340d1bf0ef6f2cb3e43537361265\"\ndependencies = [\n \"clearscreen\",\n \"command-group\",\n \"derive_builder\",\n \"glob\",\n \"globset\",\n \"lazy_static\",\n \"log\",\n \"nix 0.22.3\",\n \"notify\",\n \"walkdir\",\n \"winapi 0.3.9\",\n]\n\n[[package]]\nname = \"which\"\nversion = \"4.4.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"87ba24419a2078cd2b0f2ede2691b6c66d8e47836da3b6db8265ebad47afbfc7\"\ndependencies = [\n \"either\",\n \"home\",\n \"once_cell\",\n \"rustix\",\n]\n\n[[package]]\nname = \"winapi\"\nversion = \"0.2.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"167dc9d6949a9b857f3451275e911c3f44255842c1f7a76f33c55103a909087a\"\n\n[[package]]\nname = \"winapi\"\nversion = \"0.3.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5c839a674fcd7a98952e593242ea400abe93992746761e38641405d28b00f419\"\ndependencies = [\n \"winapi-i686-pc-windows-gnu\",\n \"winapi-x86_64-pc-windows-gnu\",\n]\n\n[[package]]\nname = \"winapi-build\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2d315eee3b34aca4797b2da6b13ed88266e6d612562a0c46390af8299fc699bc\"\n\n[[package]]\nname = \"winapi-i686-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ac3b87c63620426dd9b991e5ce0329eff545bccbbb34f3be09ff6fb6ab51b7b6\"\n\n[[package]]\nname = \"winapi-util\"\nversion = \"0.1.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cf221c93e13a30d793f7645a0e7762c55d169dbb0a49671918a2319d289b10bb\"\ndependencies = [\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"winapi-x86_64-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"712e227841d057c1ee1cd2fb22fa7e5a5461ae8e48fa2ca79ec42cfc1931183f\"\n\n[[package]]\nname = \"windows\"\nversion = \"0.56.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1de69df01bdf1ead2f4ac895dc77c9351aefff65b2f3db429a343f9cbf05e132\"\ndependencies = [\n \"windows-core 0.56.0\",\n \"windows-targets\",\n]\n\n[[package]]\nname = \"windows-core\"\nversion = \"0.52.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"33ab640c8d7e35bf8ba19b884ba838ceb4fba93a4e8c65a9059d08afcfc683d9\"\ndependencies = [\n \"windows-targets\",\n]\n\n[[package]]\nname = \"windows-core\"\nversion = \"0.56.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4698e52ed2d08f8658ab0c39512a7c00ee5fe2688c65f8c0a4f06750d729f2a6\"\ndependencies = [\n \"windows-implement\",\n \"windows-interface\",\n \"windows-result\",\n \"windows-targets\",\n]\n\n[[package]]\nname = \"windows-implement\"\nversion = \"0.56.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f6fc35f58ecd95a9b71c4f2329b911016e6bec66b3f2e6a4aad86bd2e99e2f9b\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.79\",\n]\n\n[[package]]\nname = \"windows-interface\"\nversion = \"0.56.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"08990546bf4edef8f431fa6326e032865f27138718c587dc21bc0265bbcb57cc\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.79\",\n]\n\n[[package]]\nname = \"windows-result\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5e383302e8ec8515204254685643de10811af0ed97ea37210dc26fb0032647f8\"\ndependencies = [\n \"windows-targets\",\n]\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.52.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"282be5f36a8ce781fad8c8ae18fa3f9beff57ec1b52cb3de0789201425d9a33d\"\ndependencies = [\n \"windows-targets\",\n]\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.59.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1e38bc4d79ed67fd075bcc251a1c39b32a1776bbe92e5bef1f0bf1f8c531853b\"\ndependencies = [\n \"windows-targets\",\n]\n\n[[package]]\nname = \"windows-targets\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9b724f72796e036ab90c1021d4780d4d3d648aca59e491e6b98e725b84e99973\"\ndependencies = [\n \"windows_aarch64_gnullvm\",\n \"windows_aarch64_msvc\",\n \"windows_i686_gnu\",\n \"windows_i686_gnullvm\",\n \"windows_i686_msvc\",\n \"windows_x86_64_gnu\",\n \"windows_x86_64_gnullvm\",\n \"windows_x86_64_msvc\",\n]\n\n[[package]]\nname = \"windows-version\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6998aa457c9ba8ff2fb9f13e9d2a930dabcea28f1d0ab94d687d8b3654844515\"\ndependencies = [\n \"windows-targets\",\n]\n\n[[package]]\nname = \"windows_aarch64_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"32a4622180e7a0ec044bb555404c800bc9fd9ec262ec147edd5989ccd0c02cd3\"\n\n[[package]]\nname = \"windows_aarch64_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"09ec2a7bb152e2252b53fa7803150007879548bc709c039df7627cabbd05d469\"\n\n[[package]]\nname = \"windows_i686_gnu\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8e9b5ad5ab802e97eb8e295ac6720e509ee4c243f69d781394014ebfe8bbfa0b\"\n\n[[package]]\nname = \"windows_i686_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0eee52d38c090b3caa76c563b86c3a4bd71ef1a819287c19d586d7334ae8ed66\"\n\n[[package]]\nname = \"windows_i686_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"240948bc05c5e7c6dabba28bf89d89ffce3e303022809e73deaefe4f6ec56c66\"\n\n[[package]]\nname = \"windows_x86_64_gnu\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"147a5c80aabfbf0c7d901cb5895d1de30ef2907eb21fbbab29ca94c5b08b1a78\"\n\n[[package]]\nname = \"windows_x86_64_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"24d5b23dc417412679681396f2b49f3de8c1473deb516bd34410872eff51ed0d\"\n\n[[package]]\nname = \"windows_x86_64_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"589f6da84c646204747d1270a2a5661ea66ed1cced2631d546fdfb155959f9ec\"\n\n[[package]]\nname = \"winnow\"\nversion = \"0.6.20\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"36c1fec1a2bb5866f07c25f68c26e565c4c200aebb96d7e55710c19d3e8ac49b\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"ws2_32-sys\"\nversion = \"0.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d59cefebd0c892fa2dd6de581e937301d8552cb44489cdff035c6187cb63fa5e\"\ndependencies = [\n \"winapi 0.2.8\",\n \"winapi-build\",\n]\n\n[[package]]\nname = \"xdg-home\"\nversion = \"1.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ec1cdab258fb55c0da61328dc52c8764709b249011b2cad0454c72f0bf10a1f6\"\ndependencies = [\n \"libc\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"zbus\"\nversion = \"4.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bb97012beadd29e654708a0fdb4c84bc046f537aecfde2c3ee0a9e4b4d48c725\"\ndependencies = [\n \"async-broadcast\",\n \"async-executor\",\n \"async-fs\",\n \"async-io\",\n \"async-lock\",\n \"async-process\",\n \"async-recursion\",\n \"async-task\",\n \"async-trait\",\n \"blocking\",\n \"enumflags2\",\n \"event-listener\",\n \"futures-core\",\n \"futures-sink\",\n \"futures-util\",\n \"hex\",\n \"nix 0.29.0\",\n \"ordered-stream\",\n \"rand\",\n \"serde\",\n \"serde_repr\",\n \"sha1\",\n \"static_assertions\",\n \"tracing\",\n \"uds_windows\",\n \"windows-sys 0.52.0\",\n \"xdg-home\",\n \"zbus_macros\",\n \"zbus_names\",\n \"zvariant\",\n]\n\n[[package]]\nname = \"zbus_macros\"\nversion = \"4.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"267db9407081e90bbfa46d841d3cbc60f59c0351838c4bc65199ecd79ab1983e\"\ndependencies = [\n \"proc-macro-crate\",\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.79\",\n \"zvariant_utils\",\n]\n\n[[package]]\nname = \"zbus_names\"\nversion = \"3.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4b9b1fef7d021261cc16cba64c351d291b715febe0fa10dc3a443ac5a5022e6c\"\ndependencies = [\n \"serde\",\n \"static_assertions\",\n \"zvariant\",\n]\n\n[[package]]\nname = \"zerocopy\"\nversion = \"0.7.35\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1b9b4fd18abc82b8136838da5d50bae7bdea537c574d8dc1a34ed098d6c166f0\"\ndependencies = [\n \"byteorder\",\n \"zerocopy-derive\",\n]\n\n[[package]]\nname = \"zerocopy-derive\"\nversion = \"0.7.35\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fa4f8080344d4671fb4e831a13ad1e68092748387dfc4f55e356242fae12ce3e\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.79\",\n]\n\n[[package]]\nname = \"zvariant\"\nversion = \"4.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2084290ab9a1c471c38fc524945837734fbf124487e105daec2bb57fd48c81fe\"\ndependencies = [\n \"endi\",\n \"enumflags2\",\n \"serde\",\n \"static_assertions\",\n \"zvariant_derive\",\n]\n\n[[package]]\nname = \"zvariant_derive\"\nversion = \"4.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"73e2ba546bda683a90652bac4a279bc146adad1386f25379cf73200d2002c449\"\ndependencies = [\n \"proc-macro-crate\",\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.79\",\n \"zvariant_utils\",\n]\n\n[[package]]\nname = \"zvariant_utils\"\nversion = \"2.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c51bcff7cc3dbb5055396bcf774748c3dab426b4b8659046963523cee4808340\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.79\",\n]\n"
        },
        {
          "name": "Cargo.toml",
          "type": "blob",
          "size": 1.9189453125,
          "content": "[package]\nname = \"cargo-watch\"\nversion = \"8.5.3\"\n\nauthors = [\"Félix Saparelli <felix@passcod.name>\"]\nlicense = \"CC0-1.0\"\ndescription = \"Watches over your Cargo project’s source\"\nkeywords = [\"cargo\", \"watch\", \"compile\", \"notify\"]\ncategories = [\"command-line-utilities\", \"development-tools\"]\n\ndocumentation = \"https://watchexec.github.io/docs/#cargo-watch\"\nhomepage = \"https://watchexec.github.io/#cargo-watch\"\nrepository = \"https://github.com/watchexec/cargo-watch\"\nreadme = \"README.md\"\n\nedition = \"2021\"\nrust-version = \"1.75.0\"\nexclude = [\"/.github\"]\n\n[[bin]]\nname = \"cargo-watch\"\n\n[dependencies]\ncamino = \"1.1.2\"\ncargo_metadata = \"0.18.1\"\nclap = \"2.34.0\"\ndotenvy = \"0.15.6\"\nlog = \"0.4.17\"\nnotify-rust = \"4.7.0\"\nshell-escape = \"0.1.5\"\nstderrlog = \"0.6.0\"\nwatchexec = \"1.17.2\"\n\n[dev-dependencies]\nassert_cmd = \"1.0.8\"\ninsta = \"1.32.0\"\npredicates = \"3.0.4\"\nwait-timeout = \"0.2.0\"\n\n[profile.release]\nlto = true\npanic = \"abort\"\ncodegen-units = 1\n\n[package.metadata.binstall]\nbin-dir = \"{ name }-v{ version }-{ target }/{ bin }{ format }\"\n\n[package.metadata.deb]\nmaintainer = \"Félix Saparelli <felix@passcod.name>\"\nlicense-file = [\"LICENSE\", \"0\"]\nsection = \"devel\"\n# conf-files = [] # look me up when config file lands\nassets = [\n  [\"target/release/cargo-watch\", \"usr/bin/\", \"755\"],\n  [\"README.md\", \"usr/share/doc/cargo-watch/README\", \"644\"],\n  [\"cargo-watch.1\", \"usr/share/man/man1/cargo-watch.1\", \"644\"],\n  [\"logo.svg\", \"usr/share/icons/hicolor/scalable/apps/cargo-watch.svg\", \"644\"],\n]\n\n[package.metadata.generate-rpm]\nassets = [\n  { source = \"target/release/cargo-watch\", dest = \"/usr/bin/\", mode = \"755\" },\n  { source = \"README.md\", dest = \"/usr/share/doc/cargo-watch/README\", mode = \"644\", doc = true },\n  { source = \"cargo-watch.1\", dest = \"/usr/share/man/man1/cargo-watch.1.html\", mode = \"644\" },\n  { source = \"logo.svg\", dest = \"/usr/share/icons/hicolor/scalable/apps/cargo-watch.svg\", mode = \"644\" },\n  # set conf = true for config file when that lands\n]\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 6.4345703125,
          "content": "Creative Commons CC0 1.0 Universal\n\nStatement of Purpose\n\nThe laws of most jurisdictions throughout the world automatically confer\nexclusive Copyright and Related Rights (defined below) upon the creator and\nsubsequent owner(s) (each and all, an \"owner\") of an original work of\nauthorship and/or a database (each, a \"Work\").\n\nCertain owners wish to permanently relinquish those rights to a Work for the\npurpose of contributing to a commons of creative, cultural and scientific works\n(\"Commons\") that the public can reliably and without fear of later claims of\ninfringement build upon, modify, incorporate in other works, reuse and\nredistribute as freely as possible in any form whatsoever and for any purposes,\nincluding without limitation commercial purposes. These owners may contribute\nto the Commons to promote the ideal of a free culture and the further\nproduction of creative, cultural and scientific works, or to gain reputation or\ngreater distribution for their Work in part through the use and efforts of\nothers.\n\nFor these and/or other purposes and motivations, and without any expectation of\nadditional consideration or compensation, the person associating CC0 with a\nWork (the \"Affirmer\"), to the extent that he or she is an owner of Copyright\nand Related Rights in the Work, voluntarily elects to apply CC0 to the Work and\npublicly distribute the Work under its terms, with knowledge of his or her\nCopyright and Related Rights in the Work and the meaning and intended legal\neffect of CC0 on those rights.\n\n1. Copyright and Related Rights. A Work made available under CC0 may be\nprotected by copyright and related or neighboring rights (\"Copyright and\nRelated Rights\"). Copyright and Related Rights include, but are not limited to,\nthe following:\n\n     i. the right to reproduce, adapt, distribute, perform, display,\n     communicate, and translate a Work;\n\n     ii. moral rights retained by the original author(s) and/or performer(s);\n\n     iii. publicity and privacy rights pertaining to a person's image or\n     likeness depicted in a Work;\n\n     iv. rights protecting against unfair competition in regards to a Work,\n     subject to the limitations in paragraph 4(a), below;\n\n     v. rights protecting the extraction, dissemination, use and reuse of data\n     in a Work;\n\n     vi. database rights (such as those arising under Directive 96/9/EC of the\n     European Parliament and of the Council of 11 March 1996 on the legal\n     protection of databases, and under any national implementation thereof,\n     including any amended or successor version of such directive); and\n\n     vii. other similar, equivalent or corresponding rights throughout the\n     world based on applicable law or treaty, and any national implementations\n     thereof.\n\n2. Waiver. To the greatest extent permitted by, but not in contravention of,\napplicable law, Affirmer hereby overtly, fully, permanently, irrevocably and\nunconditionally waives, abandons, and surrenders all of Affirmer's Copyright\nand Related Rights and associated claims and causes of action, whether now\nknown or unknown (including existing as well as future claims and causes of\naction), in the Work (i) in all territories worldwide, (ii) for the maximum\nduration provided by applicable law or treaty (including future time\nextensions), (iii) in any current or future medium and for any number of\ncopies, and (iv) for any purpose whatsoever, including without limitation\ncommercial, advertising or promotional purposes (the \"Waiver\"). Affirmer makes\nthe Waiver for the benefit of each member of the public at large and to the\ndetriment of Affirmer's heirs and successors, fully intending that such Waiver\nshall not be subject to revocation, rescission, cancellation, termination, or\nany other legal or equitable action to disrupt the quiet enjoyment of the Work\nby the public as contemplated by Affirmer's express Statement of Purpose.\n\n3. Public License Fallback. Should any part of the Waiver for any reason be\njudged legally invalid or ineffective under applicable law, then the Waiver\nshall be preserved to the maximum extent permitted taking into account\nAffirmer's express Statement of Purpose. In addition, to the extent the Waiver\nis so judged Affirmer hereby grants to each affected person a royalty-free, non\ntransferable, non sublicensable, non exclusive, irrevocable and unconditional\nlicense to exercise Affirmer's Copyright and Related Rights in the Work (i) in\nall territories worldwide, (ii) for the maximum duration provided by applicable\nlaw or treaty (including future time extensions), (iii) in any current or\nfuture medium and for any number of copies, and (iv) for any purpose\nwhatsoever, including without limitation commercial, advertising or promotional\npurposes (the \"License\"). The License shall be deemed effective as of the date\nCC0 was applied by Affirmer to the Work. Should any part of the License for any\nreason be judged legally invalid or ineffective under applicable law, such\npartial invalidity or ineffectiveness shall not invalidate the remainder of the\nLicense, and in such case Affirmer hereby affirms that he or she will not (i)\nexercise any of his or her remaining Copyright and Related Rights in the Work\nor (ii) assert any associated claims and causes of action with respect to the\nWork, in either case contrary to Affirmer's express Statement of Purpose.\n\n4. Limitations and Disclaimers.\n\n     a. No trademark or patent rights held by Affirmer are waived, abandoned,\n     surrendered, licensed or otherwise affected by this document.\n\n     b. Affirmer offers the Work as-is and makes no representations or\n     warranties of any kind concerning the Work, express, implied, statutory or\n     otherwise, including without limitation warranties of title,\n     merchantability, fitness for a particular purpose, non infringement, or\n     the absence of latent or other defects, accuracy, or the present or\n     absence of errors, whether or not discoverable, all to the greatest extent\n     permissible under applicable law.\n\n     c. Affirmer disclaims responsibility for clearing rights of other persons\n     that may apply to the Work or any use thereof, including without\n     limitation any person's Copyright and Related Rights in the Work. Further,\n     Affirmer disclaims responsibility for obtaining any necessary consents,\n     permissions or other rights required for any use of the Work.\n\n     d. Affirmer understands and acknowledges that Creative Commons is not a\n     party to this document and has no duty or obligation with respect to this\n     CC0 or use of the Work.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 18.818359375,
          "content": "# $ cargo watch\n\n[![Crate release version](https://flat.badgen.net/crates/v/cargo-watch)](https://crates.io/crates/cargo-watch)\n[![Crate license: CC0 1.0](https://flat.badgen.net/github/license/watchexec/cargo-watch)](https://creativecommons.org/publicdomain/zero/1.0/)\n[![Crate download count](https://flat.badgen.net/crates/d/cargo-watch)](https://crates.io/crates/cargo-watch)\n[![CI status](https://github.com/watchexec/cargo-watch/actions/workflows/check.yml/badge.svg)](https://github.com/watchexec/cargo-watch/actions/workflows/check.yml)\n\nCargo Watch watches over your project's source for changes, and runs Cargo\ncommands when they occur.\n\nIf you've used [nodemon], [guard], or [entr], it will probably feel familiar.\n\n**I recommend [Bacon] or [Watchexec] instead.** (see below for more)\n\n[nodemon]: http://nodemon.io/\n[entr]: https://github.com/eradman/entr\n[guard]: http://guardgem.org/\n[Bacon]: https://dystroy.org/bacon/\n\n- In the public domain / licensed with CC0.\n\n## Maintenance\n\nCargo Watch is on life support: it will not receive further updates, but does remain available.\n\nI (@passcod) currently have very little time to dedicate to unpaid OSS.\nThere is a significant amount of work I deem required to get Watchexec (the library) to a good-enough state to bring its improvements to Cargo Watch, and that has been the case for years without a realistic end in sight.\nI have dwindling motivation in the face of having spent 10 years on or around this project and its dependencies (it was a long while ago, but once upon a time the Notify library was spun off from Cargo Watch!), when at the very start, this tool was only made to clear a quick hurdle that I'd encountered while trying to code _other, probably more interesting, yet now long-forgotten_ Rust adventures.\n\nHowever, not all is lost, dear users.\nFor almost the entire life of the project, I have had a thought: that someone with more resources, skill, time, and/or the benefit of hindsight would come around and make something _better_.\nGranted, I thought this would happen to Notify.\nBut Notify has persisted, has been passed on to live a long life, and instead the contender is [Bacon].\n\nI have had no involvement in Bacon.\nYet it is everything I have wanted to achieve in Cargo Watch.\nIndeed some five years ago I started development on a Cargo Watch replacement I called \"Overwatch\", which would have a TUI, a tasks file, a rich pager, and more long-desired features.\nThat never eventuated, though a lot of the low-level improvements that I wrote in preparation for Overwatch \"made it\" into Notify version 5 and the Watchexec library version 2.\nBacon today is what I wanted Overwatch to be.\n\nLet's face it: Cargo Watch has gone through too many incremental changes, with too little overarching design.\nIt sports no less than four different syntaxes to run commands.\nIts lackluster filtering options can be obnoxious to use.\nPager support is non-existent, sometimes requiring arcane invocations to get right.\nIt can conflict with Rust Analyzer (which didn't exist 10 years ago!), though that has improved a lot over the years.\n\nIt's time to let it go.\nUse [Bacon].\nRemember Cargo Watch.\n\n## Install\n\n<a href=\"https://repology.org/project/cargo-watch/versions\"><img align=\"right\" src=\"https://repology.org/badge/vertical-allrepos/cargo-watch.svg\" alt=\"Packaging status\"></a>\n\nWith [cargo-binstall](https://github.com/ryankurte/cargo-binstall):\n\n```console\n$ cargo binstall cargo-watch\n```\n\nFrom source:\n\n```console\n$ cargo install cargo-watch --locked\n```\n\nOr clone and build with `$ cargo build` then place in your $PATH.\n\nYou can also install from the pre-built binaries available **[on the release page][releases]**.\n\n[releases]: https://github.com/watchexec/cargo-watch/releases/latest\n\n### Auxiliary\n\nThis repository contains a [manual page](./cargo-watch.1) and\n[Zsh completions](./completions) that you may want to install.\n\n## Usage\n\nBy default, it runs `check`. You can easily override this, though:\n\n```\n$ cargo watch [-x command]...\n```\n\nA few examples:\n\n```\n# Run tests only\n$ cargo watch -x test\n\n# Run check then tests\n$ cargo watch -x check -x test\n\n# Run run with arguments\n$ cargo watch -x 'run -- --some-arg'\n\n# Run an arbitrary command\n$ cargo watch -- echo Hello world\n\n# Run with features passed to cargo\n$ cargo watch --features \"foo,bar\"\n```\n\nThere's a lot more you can do! Here's a copy of the help:\n\n```\nUSAGE:\n    cargo watch [FLAGS] [OPTIONS]\n\nFLAGS:\n    -c, --clear              Clear the screen before each run\n    -h, --help               Display this message\n        --ignore-nothing     Ignore nothing, not even target/ and .git/\n        --debug              Show debug output\n        --why                Show paths that changed\n    -q, --quiet              Suppress output from cargo-watch itself\n        --no-vcs-ignores       Don’t use .gitignore files\n        --no-dot-ignores          Don’t use .ignore files\n        --no-restart         Don’t restart command while it’s still running\n    -N, --notify             Send a desktop notification when watchexec notices a change\n                             (experimental, behaviour may change)\n        --poll               Force use of polling for file changes\n        --postpone           Postpone first run until a file changes\n        --skip-local-deps    Don't try to find local dependencies of the current crate and watch\n                             their working directories. Only watch the current directory.\n    -V, --version            Display version information\n        --watch-when-idle    Ignore events emitted while the commands run.\n\nOPTIONS:\n    -x, --exec <cmd>...            Cargo command(s) to execute on changes [default: check]\n    -s, --shell <cmd>...           Shell command(s) to execute on changes\n    -d, --delay <delay>            File updates debounce delay in seconds [default: 0.5]\n        --features <features>      List of features passed to cargo invocations\n    -i, --ignore <pattern>...      Ignore a glob/gitignore-style pattern\n    -B <rust-backtrace>            Inject RUST_BACKTRACE=VALUE (generally you want to set it to 1)\n                                   into the environment\n        --use-shell <use-shell>    Use a different shell. E.g. --use-shell=bash\n    -w, --watch <watch>...         Watch specific file(s) or folder(s). Disables finding and\n                                   watching local dependencies.\n    -C, --workdir <workdir>        Change working directory before running command [default: crate\n                                   root]\n\nARGS:\n    <cmd:trail>...    Full command to run. -x and -s will be ignored!\n\nCargo commands (-x) are always executed before shell commands (-s). You can use the `-- command`\nstyle instead, note you'll need to use full commands, it won't prefix `cargo` for you.\n\nBy default, the workspace directories of your project and all local dependencies are watched,\nexcept for the target/ and .git/ folders. Your .ignore and .gitignore files are used to filter\npaths.\n\nOn Windows, patterns given to -i have forward slashes (/) automatically\nconverted to backward ones (\\) to ease command portability.\n```\n\n### Ignore files\n\n`.gitignore` files are used by default to ignore paths to watch and trigger\nruns. To stop honouring them, pass `--no-vcs-ignores`.\n\n`.ignore` files in the same syntax are also used by default. This file can be\nused to specify files that should be ignored by cargo watch but checked into\ngit, without constantly adding `--ignore abc` options on the command-line. Do\nnote that `.ignore` files may also be used by other programs, like\n[ripgrep](https://github.com/BurntSushi/ripgrep/blob/master/GUIDE.md#automatic-filtering).\nTo stop honouring these, pass `--no-dot-ignores`.\n\nCargo watch also has an internal list of default ignores on top of those\nspecified in files, like `target/` and `.git/` and various other common types\n(logs, editor swap files, lockfiles, etc).\n\nTo skip absolutely all ignores, use the `--ignore-nothing` flag.\n\n### Ignore syntax\n\nSee the [Glob patterns page][globdoc] for a description of how they work in the\ncontext of this tool. That’s the syntax used for the `--ignore` option.\n\nAdditionally, some specific quirks and behaviours:\n\n- On Windows, patterns should be specified with Windows-style (`\\\\`) separators.\nUnix-style separators (`/`) would not match Windows paths, which could be\nconfusing and give the appearance of commandline ignores not working.\n\n- From Cargo Watch 7.0.0, `/` in commandline ignores are automatically translated\nto `\\\\` when running on Windows, but one should still try to write the correct\npatterns for the platform, as there may be more subtle differences.\n\n- From Cargo Watch 7.3.0, `--ignore` patterns were fixed to provide better\nexperience with directory matching. Previously, ignoring a folder would need\nunyieldy `-i folder/**` patterns; now that is handled internally, and only `-i\nfolder` is needed for the same effect.\n\n[globdoc]: https://watchexec.github.io/docs/glob-patterns.html\n\n### Reloading servers seamlessly\n\nCargo Watch pairs very well with [systemfd]/[Catflap], tools for Unixy platforms that\nlets one spawn a socket before the watcher runs that Rust servers can then bind\nto, avoiding request-dropping and the infamous ADDRINUSE error. For example:\n\n```\n$ systemfd --no-pid -s http::5000 -- cargo watch -x run\n```\n\n[Catflap]: https://github.com/watchexec/catflap\n[systemfd]: https://github.com/mitsuhiko/systemfd\n\nOf course, if you don't need to guard against these issues or don't want to\nmodify your program to grab sockets instead of ports, you can use Cargo Watch\nas-is: it will happily just restart your server normally.\n\n### Restarting an application only if the build/check succeeds\n\nSupervising and starting/restarting/stopping long-running processes is explicitly not within Cargo Watch's remit.\nInstead, you should use a process manager.\nOn most Linuxes, `systemd-run --user` is greatly useful here.\nOn other platforms, a tool such as [pm2] or [pmc] can be used.\n\n[pm2]: https://pm2.keymetrics.io\n[pmc]: https://lib.rs/crates/pmc\n\n#### With systemd-run\n\nStart the application service:\n\n```\n$ systemd-run --user --pty --unit myappserver cargo run\n```\n\nRestart after a successful compile:\n\n```\n$ cargo -x check -x build -s 'systemctl --user restart myappserver'\n```\n\n#### With [pm2]\n\nStart the application service:\n\n```\n$ pm2 start --name myappserver cargo run\n$ pm2 logs -f myappserver\n```\n\nRestart after a successful compile:\n\n```\n$ cargo -x check -x build -s 'pm2 restart myappserver'\n```\n\n#### Or with cargo watch alone\n\nThis uses a \"trigger file\" that's watched by a second cargo watch to manage a process.\n\nStart the application service:\n\n```\n$ touch .trigger\n$ cargo watch --no-vcs-ignores -w .trigger -x run\n```\n\nRestart after a successful compile:\n\n```\n$ cargo watch -x check -x build -s 'touch .trigger'\n```\n\nThe `--no-vcs-ignores` flag ensures that you can safely add `.trigger` to your\n`.gitignore` file to avoid mistakenly committing it.\n\n## Troubleshooting\n\nIn all cases, start by checking your version with `cargo watch --version` and,\nif necessary, upgrading to [the latest one][releases].\n\n### RLS is slow while using cargo watch, or vice versa, or it's waiting for the project lock a lot\n\nCargo builds (and checks, and clippy, and tests because the tests have to be\nbuilt) take out a lock on the project so two cargo instances don't run at the\nsame time.\n\nHowever, Rust Analyzer is much better at this, so use that instead of RLS.\n\n### On Windows 7 (or lower): \"failed to add to job object: Access denied (OS Error 5)\"\n\nCargo Watch versions 5.0.0 and up (and Watchexec versions 1.3.0 and up) **[do\nnot support Windows 7 or lower][i-69].** Support _will not_ be added. Issues for\nWindows <=7 will be closed. If it works, lucky you, but that is not intentional.\n\n[i-69]: https://github.com/watchexec/cargo-watch/issues/69\n\n### I want to run cargo-watch directly, without going through cargo\n\nYou can! But you'll have to specify the `watch` subcommand as the first\nargument, like so:\n\n```\n$ /path/to/cargo-watch watch -x build\n```\n\n### I want to run cargo-watch outside of a Cargo project\n\nThat's not supported. If you have a good reason to use a Cargo-specific tool\noutside a Cargo project, please open an issue! Otherwise, you'll probably be\nbest served with using [Watchexec].\n\n### If file updates seems to never trigger\n\nTry using `--poll` to force the polling fallback.\n\nIf that still doesn't work, and you're using an editor that does \"safe saving\",\nlike IntelliJ / PyCharm, you may have to disable \"safe saving\" as that may\nprevent file notifications from being generated properly.\n\nAlso try using the `--why` option to see if the paths you expect are changing.\n\n### Linux: If it fails to watch some deep directories but not others / \"No space left on device\"\n\nYou may have hit the inotify watch limit. [Here's a summary of what this means\nand how to increase it.][inotify limit]\n\n[inotify limit]: https://watchexec.github.io/docs/inotify-limits.html\n\n### Docker: it's not responding correctly to signal or has trouble managing processes\n\nCargo Watch (and Watchexec underlying) does not currently support running as PID 1.\nIt will probably work for basic uses, but you should consider using a supervisor,\ninit, or shell to handle PID 1 concerns. With Docker, the `--init` option may be useful.\n\nSee [watchexec#140](https://github.com/watchexec/watchexec/issues/140) for more.\n\n### Docker: running cargo commands over a mount is very slow\n\nThis isn't really a Cargo Watch issue, but when your host system is not Linux,\nrunning commands from inside the container on a volume or bind mount from the\nhost will perform very badly due to filesystem indirection. Consider [building\noutside the mount if possible][i-219]:\n\n```dockerfile\n# ...\nRUN mkdir -p /build\nWORKDIR `/src`\nENTRYPOINT cargo watch -C /build --manifest-path=/src/Cargo.toml -- cargo run\n```\n\nOr similarly with [`CARGO_TARGET_DIR`](https://doc.rust-lang.org/cargo/reference/config.html#buildtarget-dir).\n\n```dockerfile\n# ...\nRUN mkdir -p /build\nWORKDIR `/src`\nENV CARGO_TARGET_DIR=/build\nENTRYPOINT cargo watch -- cargo run\n```\n\n[i-219]: https://github.com/watchexec/cargo-watch/issues/219\n\nYou may also have issues where it's the file updates that aren't triggering in\na timely manner, not the compilation taking a long time. In that case, you\nshould run Cargo Watch or [Watchexec] _outside_ of Docker, on the host, and\nsignal the container for restart or reload.\n\n### If you want to only recompile one Cargo workspace member crate\n\nWatching one or more specific workspace member [is not natively supported yet][i-52],\nalthough you can use `-w folder` to approximate it.\n\nWatching the entire workspace and running a command in one member is done via\nthe usual `-p` option _on the child command_:\n\n```\n$ cargo watch -x 'build -p subcrate'\n```\n\n[i-52]: https://github.com/watchexec/cargo-watch/issues/52\n\n### If it runs repeatedly without touching anything\n\nThat can happen when watching files that are modified by the command you're\nrunning.\n\nIf you're only running compiles or checks (i.e. any command that only affects\nthe target/ folder) and you're using `-w`, you might be confusing the\ntarget-folder-ignorer. Check your options and paths.\n\nYou can also use the `--watch-when-idle` flag to ignore any event that happens\nwhile the command is running.\n\n### If it runs repeatedly only touching ignored files\n\nMake sure the files you ignored are the only ones being touched. Use the\n`--why` option to see exactly which files were modified and triggered the\nrestart. Some programs and libraries create temporary files\nthat may not match a simple ignore pattern.\n\nAs above, you can also use the `--watch-when-idle` flag to help.\n\n### I don't have colour in my cargo output / for cargo test\n\nThis sometimes happens on some terminal configurations or for test harnesses.\nA quick workaround (instead of going down the rabbit hole of debugging your\nconsole settings) is to pass `--color=always` to the command. E.g.\n\n```\n$ cargo watch -x 'check --color=always'\n```\n\nFor test (and bench) commands, you'll need to pass the flag to the underlying\nprogram instead of cargo:\n\n```\n$ cargo watch -x 'test -- --color=always'\n```\n\n### I want to compile my build with additional features\n\n```\n$ cargo watch --features foo,bar\n```\n\nwill run `cargo check --features foo,bar` on every watched change.\n\nThe `--features` will be passed to every supported `cargo` subcommand.\n\n```\n$ cargo watch --features foo,bar -x build -x doc\n```\n\nwill run both `build` and `doc` with the `foo` and `bar` features.\n\n### Something not covered above / I have a feature request\n\nPlease [open an issue][watch-issues], or look through the existing ones. You\nmay also want to look through [issues for the Notify library][notify-issues]\nthis tool depends on, or the [issues for the Watchexec tool][watchexec-issues]\nthat we use under the covers (where I am also a maintainer).\n\nIf you want more verbose output, try running with the `--debug` flag. Note that\nthis will also enable debug mode for watchexec. When filing an issue, **make\nsure to include a log with `--debug` enabled so problems can be diagnosed.**\n\n**If your issue is a watchexec issue, open it there directly.** If you're not\nsure, feel free to open it here, but if it _is_ a watchexec issue, it will get\nclosed in favour of the upstream issue.\n\n[notify-issues]: https://github.com/notify-rs/notify/issues\n[watch-issues]: https://github.com/watchexec/cargo-watch/issues\n[watchexec-issues]: https://github.com/watchexec/watchexec/issues\n\n### I want to embed Cargo Watch in my own (Rust) tool\n\nIt is not recommended to do that directly. You may of course call `cargo-watch`\nas any other program, and technically it exposes an (undocumented) library that\ncould be directly / statically embedded. If you have no other option, that may\nbe your best bet.\n\nHowever, for most cases, consider building on top of [Watchexec] instead. That\nis itself built on [Notify], and both of these can be used as Rust libraries.\n\n- If you want to build a tool that runs, restarts, and otherwise manages\n  commands in response to file changes, you'll most probably want to use\n  **Watchexec**.\n\n- If you want to build a tool that responds to file changes, but does not need\n  to run commands, or does so in a way that is not well-supported by Watchexec,\n  then **Notify** is your ticket.\n\n[Notify]: https://github.com/notify-rs/notify\n[Watchexec]: https://github.com/watchexec/watchexec\n\n### Wait, is this just a wrapper on top of watchexec?\n\nKind of! [Watchexec] does a really good job of watching files and running\ncommands and all the details that go with this. Cargo Watch uses the Watchexec\nlibrary interface and calls it with its own custom options, defaults, and\nparticularities, so you can just run `cargo-watch` in your project and be in\nbusiness.\n\nWhen asking questions and/or filing bugs, keep in mind that Cargo Watch and\nWatchexec share the same maintainer at the moment (but Notify does not,\nanymore)!\n\n## About\n\nCreated by [Félix Saparelli][passcod] and [awesome contributors][contributors].\n\n[contributors]: https://github.com/watchexec/cargo-watch/network/members\n[passcod]: https://passcod.name\n"
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "cargo-watch.1",
          "type": "blob",
          "size": 10.8916015625,
          "content": ".\\\" generated with Ronn/v0.7.3\n.\\\" http://github.com/rtomayko/ronn/tree/0.7.3\n.\n.TH \"CARGO\\-WATCH\" \"1\" \"January 2024\" \"\" \"\"\n.\n.SH \"NAME\"\n\\fBcargo\\-watch\\fR \\- watches over your Cargo project\\'s source\n.\n.SH \"SYNOPSIS\"\ncargo watch [options] [\\fB\\-\\-exec\\fR | \\fB\\-x\\fR \\fIcargo subcommand\\fR]\\.\\.\\. [\\fB\\-\\-shell\\fR | \\fB\\-s\\fR \\fIcommand\\fR]\\.\\.\\. [\\-\\- \\fIcommand\\fR\\.\\.\\.] cargo watch [\\fB\\-\\-version\\fR | \\fB\\-V\\fR] cargo watch [\\fB\\-\\-help\\fR | \\fB\\-h\\fR]\n.\n.SH \"DESCRIPTION\"\nWatches over your project\\'s source for changes, and runs Cargo commands when they occur\\.\n.\n.SH \"COMMANDS\"\n.\n.TP\n\\fIcargo subcommand\\fR\nCargo subcommand to run when watched files are modified, and at startup, unless \\fB\\-\\-postpone\\fR is specified\\.\n.\n.P\nThis is essentially the same as \\fB<command>\\fR but with \\fBcargo\\fR prepended, except that in addition, cargo\\-specific options are applied, such as \\fB\\-\\-features\\fR\\.\n.\n.TP\n\\fIcommand\\fR\nCommand to run when watched files are modified, and at startup, unless \\fB\\-\\-postpone\\fR is specified\\.\n.\n.P\nAll commands passed are joined together with \\fB&&\\fR\\.\n.\n.P\nCargo commands (\\fB\\-x\\fR) are always executed before shell commands (\\fB\\-s\\fR)\\.\n.\n.P\nIf a trailing command is given with \\fB\\-\\- <command>\\fR, it supersedes all other commands\\.\n.\n.SH \"OPTIONS\"\n.\n.TP\n\\fB\\-h\\fR, \\fB\\-\\-help\\fR\nDisplay this message\\.\n.\n.TP\n\\fB\\-V\\fR, \\fB\\-\\-version\\fR\nDisplay version information\\.\n.\n.TP\n\\fB\\-\\-debug\\fR\nShow debug output\\.\n.\n.TP\n\\fB\\-\\-why\\fR\nShow paths that changed\\.\n.\n.TP\n\\fB\\-q\\fR, \\fB\\-\\-quiet\\fR\nSuppress output from cargo\\-watch itself\\.\n.\n.TP\n\\fB\\-\\-skip\\-local\\-deps\\fR\nDon\\'t try to find local dependencies of the current crate and watch their working directories\\. Only watch the current directory\\.\n.\n.TP\n\\fB\\-w\\fR, \\fB\\-\\-watch\\fR \\fIwatch\\fR\\.\\.\\.\nWatch specific file(s) or folder(s)\\. Disables finding and watching local dependencies\\.\n.\n.P\nBy default, the workspace directories of your project and all local dependencies are watched, except for the target/ and \\.git/ folders\\. Your \\.ignore and \\.gitignore files are used to filter paths\\.\n.\n.TP\n\\fB\\-i\\fR, \\fB\\-\\-ignore\\fR \\fIpattern\\fR\\.\\.\\.\nIgnore a glob/gitignore\\-style pattern\\.\n.\n.P\nOn Windows, patterns given to \\-i have forward slashes (/) automatically converted to backward ones () to ease command portability\\.\n.\n.TP\n\\fB\\-\\-no\\-vcs\\-ignores\\fR\nDon’t use \\.gitignore files\\.\n.\n.TP\n\\fB\\-\\-no\\-dot\\-ignores\\fR\nDon’t use \\.ignore files\\.\n.\n.TP\n\\fB\\-\\-ignore\\-nothing\\fR\nIgnore nothing, not even target/ and \\.git/\\.\n.\n.TP\n\\fB\\-c\\fR, \\fB\\-\\-clear\\fR\nClear the screen before each run\\.\n.\n.TP\n\\fB\\-E\\fR, \\fB\\-\\-env\\-var\\fR \\fIkey\\fR=\\fIvalue\\fR\nInject an environment variable\\.\n.\n.TP\n\\fB\\-\\-env\\-file\\fR \\fIpath\\fR\nInject environment variables from a dotenv\\-style file\\.\n.\n.TP\n\\fB\\-B\\fR \\fIvalue\\fR\nInject \\fBRUST_BACKTRACE=<value>\\fR into the environment\\.\n.\n.P\nThis is useful when panics are handled and you want a backtrace to be printed: usually you’d have to add \\fBRUST_BACKTRACE=1\\fR yourself, this shortens it to \\fB\\-B1\\fR!\n.\n.TP\n\\fB\\-L\\fR \\fIvalue\\fR\nInject \\fBRUST_LOG=<value>\\fR into the environment\\.\n.\n.TP\n\\fB\\-\\-experimental\\-\\-env\\-changes\\fR\nUnstable option which will set \\fBWATCHEXEC_*\\fR environment variables on the command to gather information on the files changes cargo watch saw\\. Do not rely on this, may disappear or change without notice\\.\n.\n.P\nNote that the files listed are not guaranteed to be the full list of files changed, nor indeed to even have been changed at all, and that this may vary between platforms\\. In general, finding the list of files that changed is best done by other tools such as \\fBfind\\fR, to list out all the files with a modification date greater than the last known execution\\.\n.\n.TP\n\\fB\\-C\\fR, \\fB\\-\\-workdir\\fR \\fIpath\\fR\nChange the working directory to the \\fIpath\\fR given\\.\n.\n.P\nThe default is the crate root, as found by \\fBcargo locate\\-project\\fR\\.\n.\n.TP\n\\fB\\-\\-postpone\\fR\nPostpone first run until a file changes\\.\n.\n.TP\n\\fB\\-\\-poll\\fR\nForce use of polling for file changes\\.\n.\n.TP\n\\fB\\-\\-no\\-process\\-group\\fR\nBy default, Cargo Watch uses a process group to run the command(s)\\. This disables that behaviour\\.\n.\n.TP\n\\fB\\-d\\fR, \\fB\\-\\-delay\\fR \\fIdelay\\fR\nFile updates debounce delay in seconds (default: 0\\.5)\\.\n.\n.TP\n\\fB\\-\\-no\\-restart\\fR\nDon’t restart command while it’s still running\\.\n.\n.TP\n\\fB\\-\\-watch\\-when\\-idle\\fR\nIgnore events emitted while the commands run\\.\n.\n.TP\n\\fB\\-\\-features\\fR \\fIfeatures\\fR\nList of features passed to cargo invocations\\.\n.\n.P\nThe features will be passed to every supported cargo subcommand\\. For example, with this command:\n.\n.IP \"\" 4\n.\n.nf\n\n$ cargo watch \\-\\-features foo,bar \\-x clean \\-x build \\-x doc\n.\n.fi\n.\n.IP \"\" 0\n.\n.P\nBoth \\fBbuild\\fR and \\fBdoc\\fR will be run with the \\fBfoo\\fR and \\fBbar\\fR features, but \\fBclean\\fR won\\'t\\.\n.\n.TP\n\\fB\\-\\-use\\-shell\\fR \\fIuse\\-shell\\fR\nUse a different shell\\. E\\.g\\. \\fB\\-\\-use\\-shell=bash\\fR\\. On Windows, try \\fB\\-\\-use\\-shell=powershell\\fR\\.\n.\n.P\nThe special value \\fBnone\\fR will use no shell, but will only work with a trailing command, not \\fB\\-x\\fR or \\fB\\-s\\fR\\.\n.\n.SH \"EXAMPLES\"\nRun \\fBcargo check\\fR on file save:\n.\n.IP \"\" 4\n.\n.nf\n\n$ cargo watch\n.\n.fi\n.\n.IP \"\" 0\n.\n.P\nRun tests only:\n.\n.IP \"\" 4\n.\n.nf\n\n$ cargo watch \\-x test\n.\n.fi\n.\n.IP \"\" 0\n.\n.P\nRun check then tests:\n.\n.IP \"\" 4\n.\n.nf\n\n$ cargo watch \\-x check \\-x test\n.\n.fi\n.\n.IP \"\" 0\n.\n.P\nRun run with arguments:\n.\n.IP \"\" 4\n.\n.nf\n\n$ cargo watch \\-x \\'run \\-\\- \\-\\-some\\-arg\\'\n.\n.fi\n.\n.IP \"\" 0\n.\n.P\nRun an arbitrary command:\n.\n.IP \"\" 4\n.\n.nf\n\n$ cargo watch \\-\\- echo Hello world\n.\n.fi\n.\n.IP \"\" 0\n.\n.P\nRun with features passed to cargo:\n.\n.IP \"\" 4\n.\n.nf\n\n$ cargo watch \\-\\-features \\'foo,bar\\'\n.\n.fi\n.\n.IP \"\" 0\n.\n.SH \"DETAILS\"\n.\n.SS \"Ignore files\"\n\\fB\\.gitignore\\fR files are used by default to ignore paths to watch and trigger runs\\. To stop honouring them, pass \\fB\\-\\-no\\-vcs\\-ignores\\fR\\.\n.\n.P\n\\fB\\.ignore\\fR files in the same syntax are also used by default\\. This file can be used to specify files that should be ignored by cargo watch but checked into git, without constantly adding \\fB\\-\\-ignore abc\\fR options on the command\\-line\\. Do note that \\fB\\.ignore\\fR files may also be used by other programs, like ripgrep(1)\\. To stop honouring these, pass \\fB\\-\\-no\\-dot\\-ignores\\fR\\.\n.\n.P\nCargo watch also has an internal list of default ignores on top of those specified in files, like \\fBtarget/\\fR and \\fB\\.git/\\fR and various other common types (logs, editor swap files, lockfiles, etc)\\.\n.\n.P\nTo skip absolutely all ignores, use the \\fB\\-\\-ignore\\-nothing\\fR flag\\.\n.\n.SS \"Ignore syntax\"\nSee the \\fBglob::Pattern\\fR docs0 \\fIhttps://doc\\.rust\\-lang\\.org/glob/glob/struct\\.Pattern\\.html\\fR for a more detailed specification of the glob matching syntax used for \\fB\\-\\-ignore\\fR\\.\n.\n.P\nOn Windows, patterns should be specified with Windows\\-style (\\fB\\e\\e\\fR) separators\\. Unix\\-style separators (\\fB/\\fR) would not match Windows paths, which could be confusing and give the appearance of commandline ignores not working\\. For convenience \\fB/\\fR in commandline ignores are automatically translated to \\fB\\e\\e\\fR when running on Windows, but one should still try to write the correct patterns for the platform, as there may be more subtle differences\\.\n.\n.SH \"BUGS\"\nPlease open an issue1 \\fIhttps://github\\.com/watchexec/cargo\\-watch/issues\\fR, or look through the existing ones\\.\n.\n.P\nIf you want more verbose output, try running with the \\fB\\-\\-debug\\fR flag\\. Note that this will also enable debug mode for watchexec\\. When filing an issue, \\fBmake sure to include a log with \\fB\\-\\-debug\\fR enabled so problems can be diagnosed\\fR, as well as your \\fB\\-\\-version\\fR and OS\\.\n.\n.P\n\\fBIf your issue is a watchexec (our main upstream) issue, open it there2 \\fIhttps://github\\.com/watchexec/watchexec/issues\\fR directly\\.\\fR If you\\'re not sure, feel free to open it on the cargo\\-watch issue tracker, but if it \\fIis\\fR a watchexec issue, it will transferred over anyway\\.\n.\n.SS \"KNOWN BUGS\"\nIn 7\\.8\\.0, the \\fB\\-\\-workdir\\fR option changes the directory before any other options are processed, so e\\.g\\. \\fB\\-\\-watch\\fR paths may not work as expected\\. This is fixed upstream in Watchexec library 2\\.\n.\n.P\nIn 8\\.x, the \\fB\\-B\\fR, \\fB\\-L\\fR, \\fB\\-E\\fR, \\fB\\-\\-env\\-var\\fR, \\fB\\-\\-env\\-file\\fR options inject environment variables into the main cargo\\-watch process, which may be unsound in some situations and may also affect cargo\\-watch itself\\. This is fixed upstream in Watchexec library 2\\.\n.\n.SH \"TROUBLESHOOTING\"\nAlways start by checking your version with \\fBcargo watch \\-\\-version\\fR and, if necessary, upgrading to the latest one by checking the website linked above\\.\n.\n.SS \"RLS is slow while using cargo watch, or vice versa, or it\\'s waiting for the project lock a lot\"\nCargo builds (and checks, and clippy, and tests because the tests have to be built) take out a lock on the project so two cargo instances don\\'t run at the same time\\.\n.\n.P\nHowever, Rust Analyzer is much better at this, so use that instead of RLS\\.\n.\n.SS \"File updates seems to never trigger\"\nTry using \\fB\\-\\-poll\\fR to force the polling fallback\\.\n.\n.P\nIf that still doesn\\'t work, and you\\'re using an editor that does \"safe saving\", like IntelliJ / PyCharm, you may have to disable \"safe saving\" as that may prevent file notifications from being generated properly\\.\n.\n.P\nAlso try using the \\fB\\-\\-why\\fR option to see if the paths you expect are changing\\.\n.\n.SS \"It runs repeatedly without touching anything\"\nThat can happen when watching files that are modified by the command you\\'re running\\.\n.\n.P\nIf you\\'re only running compiles or checks (i\\.e\\. any command that only affects the target/ folder) and you\\'re using \\fB\\-w\\fR, you might be confusing the target\\-folder\\-ignorer\\. Check your options and paths\\.\n.\n.P\nYou can also use the \\fB\\-\\-watch\\-when\\-idle\\fR flag to ignore any event that happens while the command is running\\. \\fBThis will become the default in 8\\.0\\.\\fR\n.\n.SS \"It runs repeatedly only touching ignored files\"\nMake sure the files you ignored are the only ones being touched\\. Use the \\fB\\-\\-why\\fR option to see exactly which files were modified and triggered the restart\\. Some programs and libraries create temporary files that may not match a simple ignore pattern\\.\n.\n.P\nAs above, you can also use the \\fB\\-\\-watch\\-when\\-idle\\fR flag to help\\.\n.\n.SS \"I don\\'t have colour in my cargo output / for cargo test\"\nThis sometimes happens on some terminal configurations or for test harnesses\\. A quick workaround (instead of going down the rabbit hole of debugging your console settings) is to pass \\fB\\-\\-color=always\\fR to the command\\. E\\.g\\.\n.\n.IP \"\" 4\n.\n.nf\n\n$ cargo watch \\-x \\'check \\-\\-color=always\\'\n.\n.fi\n.\n.IP \"\" 0\n.\n.P\nFor test (and bench) commands, you\\'ll need to pass the flag to the underlying program instead of cargo:\n.\n.IP \"\" 4\n.\n.nf\n\n$ cargo watch \\-x \\'test \\-\\- \\-\\-color=always\\'\n.\n.fi\n.\n.IP \"\" 0\n.\n.SH \"AUTHOR\"\nWritten and maintained by Félix Saparelli\\.\n.\n.P\nhttps://passcod\\.name\n.\n.P\nProject homepage:\n.\n.P\nhttps://watchexec\\.github\\.io/#cargo\\-watch\n.\n.P\nPublic domain\\.\n"
        },
        {
          "name": "cargo-watch.1.ronn",
          "type": "blob",
          "size": 9.4794921875,
          "content": "cargo-watch(1) -- watches over your Cargo project's source\n==========================================================\n\n## SYNOPSIS\n\ncargo watch [options] [`--exec` | `-x` <cargo subcommand>]... [`--shell` | `-s` <command>]... [-- <command>...]\ncargo watch [`--version` | `-V`]\ncargo watch [`--help` | `-h`]\n\n## DESCRIPTION\n\nWatches over your project's source for changes, and runs Cargo commands when they occur.\n\n## COMMANDS\n\n* <cargo subcommand>:\nCargo subcommand to run when watched files are modified, and at startup, unless `--postpone` is specified.\n\nThis is essentially the same as `<command>` but with `cargo ` prepended, except that in addition, cargo-specific options are applied, such as `--features`.\n\n* <command>:\nCommand to run when watched files are modified, and at startup, unless `--postpone` is specified.\n\nAll commands passed are joined together with `&&`.\n\nCargo commands (`-x`) are always executed before shell commands (`-s`).\n\nIf a trailing command is given with `-- <command>`, it supersedes all other commands.\n\n## OPTIONS\n\n* `-h`, `--help`:\nDisplay this message.\n\n* `-V`, `--version`:\nDisplay version information.\n\n* `--debug`:\nShow debug output.\n\n* `--why`:\nShow paths that changed.\n\n* `-q`, `--quiet`:\nSuppress output from cargo-watch itself.\n\n* `--skip-local-deps`:\nDon't try to find local dependencies of the current crate and watch their working directories. Only watch the current directory.\n\n* `-w`, `--watch` <watch>...:\nWatch specific file(s) or folder(s). Disables finding and watching local dependencies.\n\nBy default, the workspace directories of your project and all local dependencies are watched, except for the target/ and .git/ folders. Your .ignore and .gitignore files are used to filter paths.\n\n* `-i`, `--ignore` <pattern>...:\nIgnore a glob/gitignore-style pattern.\n\nOn Windows, patterns given to -i have forward slashes (/) automatically converted to backward ones (\\) to ease command portability.\n\n* `--no-vcs-ignores`:\nDon’t use .gitignore files.\n\n* `--no-dot-ignores`:\nDon’t use .ignore files.\n\n* `--ignore-nothing`:\nIgnore nothing, not even target/ and .git/.\n\n* `-c`, `--clear`:\nClear the screen before each run.\n\n* `-E`, `--env-var` <key>=<value>:\nInject an environment variable.\n\n* `--env-file` <path>:\nInject environment variables from a dotenv-style file.\n\n* `-B` <value>:\nInject `RUST_BACKTRACE=<value>` into the environment.\n\nThis is useful when panics are handled and you want a backtrace to be printed: usually you’d have to add `RUST_BACKTRACE=1` yourself, this shortens it to `-B1`!\n\n* `-L` <value>:\nInject `RUST_LOG=<value>` into the environment.\n\n* `--experimental--env-changes`:\nUnstable option which will set `WATCHEXEC_*` environment variables on the command to gather information on the files changes cargo watch saw. Do not rely on this, may disappear or change without notice.\n\nNote that the files listed are not guaranteed to be the full list of files changed, nor indeed to even have been changed at all, and that this may vary between platforms. In general, finding the list of files that changed is best done by other tools such as `find`, to list out all the files with a modification date greater than the last known execution.\n\n* `-C`, `--workdir` <path>:\nChange the working directory to the <path> given.\n\nThe default is the crate root, as found by `cargo locate-project`.\n\n* `--postpone`:\nPostpone first run until a file changes.\n\n* `--poll`:\nForce use of polling for file changes.\n\n* `--no-process-group`:\nBy default, Cargo Watch uses a process group to run the command(s). This disables that behaviour.\n\n* `-d`, `--delay` <delay>:\nFile updates debounce delay in seconds (default: 0.5).\n\n* `--no-restart`:\nDon’t restart command while it’s still running.\n\n* `--watch-when-idle`:\nIgnore events emitted while the commands run.\n\n* `--features` <features>:\nList of features passed to cargo invocations.\n\nThe features will be passed to every supported cargo subcommand. For example, with this command:\n\n    $ cargo watch --features foo,bar -x clean -x build -x doc\n\nBoth `build` and `doc` will be run with the `foo` and `bar` features, but `clean` won't.\n\n* `--use-shell` <use-shell>:\nUse a different shell. E.g. `--use-shell=bash`. On Windows, try `--use-shell=powershell`.\n\nThe special value `none` will use no shell, but will only work with a trailing command, not `-x` or `-s`.\n\n## EXAMPLES\n\nRun `cargo check` on file save:\n\n    $ cargo watch\n\nRun tests only:\n\n    $ cargo watch -x test\n\nRun check then tests:\n\n    $ cargo watch -x check -x test\n\nRun run with arguments:\n\n    $ cargo watch -x 'run -- --some-arg'\n\nRun an arbitrary command:\n\n    $ cargo watch -- echo Hello world\n\nRun with features passed to cargo:\n\n    $ cargo watch --features 'foo,bar'\n\n## DETAILS\n\n### Ignore files\n\n`.gitignore` files are used by default to ignore paths to watch and trigger runs. To stop honouring them, pass `--no-vcs-ignores`.\n\n`.ignore` files in the same syntax are also used by default. This file can be used to specify files that should be ignored by cargo watch but checked into git, without constantly adding `--ignore abc` options on the command-line. Do note that `.ignore` files may also be used by other programs, like ripgrep(1). To stop honouring these, pass `--no-dot-ignores`.\n\nCargo watch also has an internal list of default ignores on top of those specified in files, like `target/` and `.git/` and various other common types (logs, editor swap files, lockfiles, etc).\n\nTo skip absolutely all ignores, use the `--ignore-nothing` flag.\n\n### Ignore syntax\n\nSee the `glob::Pattern` docs[0] for a more detailed specification of the glob matching syntax used for `--ignore`.\n\nOn Windows, patterns should be specified with Windows-style (`\\\\`) separators. Unix-style separators (`/`) would not match Windows paths, which could be confusing and give the appearance of commandline ignores not working. For convenience `/` in commandline ignores are automatically translated to `\\\\` when running on Windows, but one should still try to write the correct patterns for the platform, as there may be more subtle differences.\n\n[0]: https://doc.rust-lang.org/glob/glob/struct.Pattern.html\n\n## BUGS\n\nPlease open an issue[1], or look through the existing ones.\n\nIf you want more verbose output, try running with the `--debug` flag. Note that this will also enable debug mode for watchexec. When filing an issue, **make sure to include a log with `--debug` enabled so problems can be diagnosed**, as well as your `--version` and OS.\n\n**If your issue is a watchexec (our main upstream) issue, open it there[2] directly.** If you're not sure, feel free to open it on the cargo-watch issue tracker, but if it _is_ a watchexec issue, it will transferred over anyway.\n\n[1]: https://github.com/watchexec/cargo-watch/issues\n[2]: https://github.com/watchexec/watchexec/issues\n\n### KNOWN BUGS\n\nIn 7.8.0, the `--workdir` option changes the directory before any other options are processed, so e.g. `--watch` paths may not work as expected. This is fixed upstream in Watchexec library 2.\n\nIn 8.x, the `-B`, `-L`, `-E`, `--env-var`, `--env-file` options inject environment variables into the main cargo-watch process, which may be unsound in some situations and may also affect cargo-watch itself. This is fixed upstream in Watchexec library 2.\n\n## TROUBLESHOOTING\n\nAlways start by checking your version with `cargo watch --version` and, if necessary, upgrading to the latest one by checking the website linked above.\n\n### RLS is slow while using cargo watch, or vice versa, or it's waiting for the project lock a lot\n\nCargo builds (and checks, and clippy, and tests because the tests have to be\nbuilt) take out a lock on the project so two cargo instances don't run at the\nsame time.\n\nHowever, Rust Analyzer is much better at this, so use that instead of RLS.\n\n### File updates seems to never trigger\n\nTry using `--poll` to force the polling fallback.\n\nIf that still doesn't work, and you're using an editor that does \"safe saving\", like IntelliJ / PyCharm, you may have to disable \"safe saving\" as that may prevent file notifications from being generated properly.\n\nAlso try using the `--why` option to see if the paths you expect are changing.\n\n### It runs repeatedly without touching anything\n\nThat can happen when watching files that are modified by the command you're running.\n\nIf you're only running compiles or checks (i.e. any command that only affects the target/ folder) and you're using `-w`, you might be confusing the target-folder-ignorer. Check your options and paths.\n\nYou can also use the `--watch-when-idle` flag to ignore any event that happens while the command is running. **This will become the default in 8.0.**\n\n### It runs repeatedly only touching ignored files\n\nMake sure the files you ignored are the only ones being touched. Use the `--why` option to see exactly which files were modified and triggered the restart. Some programs and libraries create temporary files that may not match a simple ignore pattern.\n\nAs above, you can also use the `--watch-when-idle` flag to help.\n\n### I don't have colour in my cargo output / for cargo test\n\nThis sometimes happens on some terminal configurations or for test harnesses. A quick workaround (instead of going down the rabbit hole of debugging your console settings) is to pass `--color=always` to the command. E.g.\n\n    $ cargo watch -x 'check --color=always'\n\nFor test (and bench) commands, you'll need to pass the flag to the underlying program instead of cargo:\n\n    $ cargo watch -x 'test -- --color=always'\n\n## AUTHOR\n\nWritten and maintained by Félix Saparelli.\n\nhttps://passcod.name\n\nProject homepage:\n\nhttps://watchexec.github.io/#cargo-watch\n\nPublic domain.\n"
        },
        {
          "name": "completions",
          "type": "tree",
          "content": null
        },
        {
          "name": "logo.png",
          "type": "blob",
          "size": 125.9384765625,
          "content": null
        },
        {
          "name": "logo.svg",
          "type": "blob",
          "size": 22.3076171875,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<svg\n   xmlns:dc=\"http://purl.org/dc/elements/1.1/\"\n   xmlns:cc=\"http://creativecommons.org/ns#\"\n   xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n   xmlns:svg=\"http://www.w3.org/2000/svg\"\n   xmlns=\"http://www.w3.org/2000/svg\"\n   xmlns:sodipodi=\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\"\n   xmlns:inkscape=\"http://www.inkscape.org/namespaces/inkscape\"\n   width=\"100mm\"\n   height=\"100mm\"\n   viewBox=\"0 0 100 100\"\n   version=\"1.1\"\n   id=\"svg8\"\n   inkscape:version=\"1.0.2 (e86c870879, 2021-01-15, custom)\"\n   sodipodi:docname=\"logo.svg\"\n   inkscape:export-filename=\"/home/code/rust/cargo-watch/logo.png\"\n   inkscape:export-xdpi=\"260.09601\"\n   inkscape:export-ydpi=\"260.09601\">\n  <defs\n     id=\"defs2\" />\n  <sodipodi:namedview\n     id=\"base\"\n     pagecolor=\"#ffffff\"\n     bordercolor=\"#666666\"\n     borderopacity=\"1.0\"\n     inkscape:pageopacity=\"1\"\n     inkscape:pageshadow=\"2\"\n     inkscape:zoom=\"1.28\"\n     inkscape:cx=\"71.307039\"\n     inkscape:cy=\"231.90602\"\n     inkscape:document-units=\"mm\"\n     inkscape:current-layer=\"g999\"\n     inkscape:document-rotation=\"0\"\n     showgrid=\"true\"\n     inkscape:pagecheckerboard=\"true\"\n     inkscape:showpageshadow=\"true\"\n     inkscape:lockguides=\"false\"\n     inkscape:snap-grids=\"true\"\n     inkscape:snap-bbox=\"true\"\n     inkscape:bbox-paths=\"true\"\n     inkscape:object-nodes=\"true\"\n     inkscape:bbox-nodes=\"true\"\n     inkscape:window-width=\"1920\"\n     inkscape:window-height=\"1048\"\n     inkscape:window-x=\"1920\"\n     inkscape:window-y=\"32\"\n     inkscape:window-maximized=\"1\">\n    <sodipodi:guide\n       position=\"0,99.999999\"\n       orientation=\"0,377.95276\"\n       id=\"guide833\"\n       inkscape:locked=\"false\" />\n    <sodipodi:guide\n       position=\"99.999999,99.999999\"\n       orientation=\"377.95276,0\"\n       id=\"guide835\"\n       inkscape:locked=\"false\" />\n    <sodipodi:guide\n       position=\"99.999999,0\"\n       orientation=\"0,-377.95276\"\n       id=\"guide837\"\n       inkscape:locked=\"false\" />\n    <sodipodi:guide\n       position=\"0,0\"\n       orientation=\"-377.95276,0\"\n       id=\"guide839\"\n       inkscape:locked=\"false\" />\n    <inkscape:grid\n       type=\"xygrid\"\n       id=\"grid843\"\n       units=\"mm\"\n       spacingx=\"0.99999999\"\n       spacingy=\"0.99999999\" />\n  </sodipodi:namedview>\n  <metadata\n     id=\"metadata5\">\n    <rdf:RDF>\n      <cc:Work\n         rdf:about=\"\">\n        <dc:format>image/svg+xml</dc:format>\n        <dc:type\n           rdf:resource=\"http://purl.org/dc/dcmitype/StillImage\" />\n        <dc:title></dc:title>\n      </cc:Work>\n    </rdf:RDF>\n  </metadata>\n  <g\n     id=\"g999\"\n     transform=\"matrix(0.65071938,0,0,0.65071938,-7.2093585,-7.1734636)\"\n     inkscape:label=\"Shell\">\n    <path\n       d=\"m 72.210765,104.70989 c -0.952609,-1.23929 -5.121961,-2.25299 -6.362323,-1.29044 l -5.877022,4.50581 C 49.206836,104.68258 40.412561,96.870699 35.923308,86.563523 l 4.536672,-7.838744 c 0.779701,-1.354203 0.313588,-3.094214 -1.0296,-3.882785 l -6.68368,-3.86897 c 0.01889,-2.217595 0.230254,-4.429396 0.632442,-6.610297 1.580035,-8.567934 5.204079,-14.179643 9.428263,-18.968404 1.195929,-1.355773 2.553817,-2.559584 3.959217,-3.696782 l 6.380933,2.106346 c 1.485795,0.492153 3.092171,-0.320286 3.584324,-1.80608 l 2.331611,-7.070756 c 10.585708,-3.483461 22.16402,-2.179678 31.709945,3.570716 l 0.770401,7.405301 c 0.164041,1.556564 1.550312,2.691753 3.106875,2.527711 l 6.540899,-0.682581 c 1.05436,1.351681 2.02939,2.765349 2.88054,4.25339 1.7564,3.070669 3.16134,6.498339 4.11095,10.28612 -1.42674,16.726002 -25.50442,0.471192 -30.470872,19.772731 -1.491158,5.795209 -5.16274,7.338256 -5.0995,14.732847 0.02053,2.400995 -0.379788,5.019214 -0.401963,7.916604 z\"\n       id=\"path985\"\n       style=\"display:inline;fill:#000000;fill-opacity:1;stroke:#ffffff;stroke-width:6.14704;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\"\n       sodipodi:nodetypes=\"cccccccssccccccccscssc\"\n       inkscape:label=\"inner\" />\n    <path\n       d=\"M 119.28525,63.919565 C 119.06514,60.816539 116.67841,57.82544 116.12752,56.738942 107.9032,40.518344 95.318596,26.023206 76.118572,23.952527 50.218759,21.159291 26.845764,39.981615 24.052527,65.881428 21.479553,89.738893 37.24753,111.45234 59.99354,116.91163 c 1.947201,0.46735 3.94554,0.81558 5.987888,1.03584 l 0.519945,-4.16828 c -1.666403,-0.2235 -2.850535,-1.73893 -2.669116,-3.41589 0.257418,-2.38686 2.438599,-3.1683 4.143469,-2.60319 3.54379,5.57593 4.053319,4.05919 1.840005,-3.82227 -0.952609,-1.23929 -2.726927,-1.48094 -3.967289,-0.51839 l -5.877022,4.50581 C 49.206836,104.68258 40.412561,96.870699 35.923308,86.563523 l 4.536672,-7.838744 c 0.779701,-1.354203 0.313588,-3.094214 -1.0296,-3.882785 l -6.68368,-3.86897 c 0.01889,-2.217595 0.230254,-4.429396 0.632442,-6.610297 1.580035,-8.567934 5.204079,-14.179643 9.428263,-18.968404 1.195929,-1.355773 2.553817,-2.559584 3.959217,-3.696782 l 6.380933,2.106346 c 1.485795,0.492153 3.092171,-0.320286 3.584324,-1.80608 l 2.331611,-7.070756 c 10.585708,-3.483461 22.16402,-2.179678 31.709945,3.570716 l 0.770401,7.405301 c 0.164041,1.556564 1.550312,2.691753 3.106875,2.527711 l 6.540899,-0.682581 c 1.05436,1.351681 2.02939,2.765349 2.88054,4.25339 1.7564,3.070669 3.16134,6.498339 4.11095,10.28612 0.83587,-0.362885 5.86858,-2.254792 7.82377,2.591142 1.09666,-0.827306 3.27838,-0.959285 3.27838,-0.959285 z M 32.677445,81.68737 c -1.667438,-0.228822 -2.85028,-1.742607 -2.669116,-3.415893 0.44463,-4.122758 6.62877,-3.455812 6.18414,0.666946 -0.187282,1.743345 -1.77793,2.987324 -3.515024,2.748947 z M 97.111363,44.733307 c -1.667437,-0.228821 -2.850285,-1.742611 -2.669116,-3.415892 0.44463,-4.122753 6.628773,-3.455807 6.184143,0.666946 -0.18728,1.74335 -1.777931,2.987324 -3.515027,2.748946 z M 51.341868,39.656358 c -1.667437,-0.228822 -2.850285,-1.742611 -2.669116,-3.415892 0.444629,-4.122753 6.628769,-3.455808 6.184139,0.666945 -0.187278,1.74335 -1.777928,2.987324 -3.515023,2.748947 z\"\n       id=\"path1010\"\n       style=\"display:inline;fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:1.00157;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\"\n       sodipodi:nodetypes=\"csssscccccccccccssccccccccscccsccssccssccs\"\n       inkscape:label=\"wheel\" />\n    <path\n       d=\"m 71.05,26.32 c -24.648468,0 -44.63,19.981532 -44.63,44.63 0,23.06932 17.503242,42.05054 39.814692,44.74319 C 67.771502,115.85319 61.15,120.72 61.15,120.72 l -2.87,-7.66 -6.65,4.78 -1.32,-8.09 -7.46,3.4 0.29,-8.19 -7.98,1.88 1.88,-7.98 -8.19,0.29 3.4,-7.46 -8.09,-1.32 4.78,-6.65 -7.66,-2.87 5.98,-5.59 -6.96,-4.31 6.96,-4.31 -5.98,-5.59 7.66,-2.87 -4.78,-6.65 8.09,-1.32 -3.4,-7.46 8.19,0.29 -1.88,-7.98 7.98,1.88 -0.29,-8.19 7.46,3.4 1.32,-8.09 6.65,4.78 2.87,-7.66 5.59,5.98 4.31,-6.96 4.31,6.96 5.59,-5.98 2.87,7.66 6.65,-4.78 1.32,8.09 7.46,-3.4 -0.29,8.19 7.98,-1.88 -1.88,7.98 8.19,-0.29 -3.4,7.46 8.09,1.32 -4.34108,5.945252 c 1.25387,0.65389 7.69281,1.889125 7.69281,1.889125 0,0 -1.57505,1.825978 -2.91472,3.147138 -0.93651,0.923572 -1.54563,-0.230531 -1.86119,0.06496 -0.35212,0.329718 -1.65794,-2.407316 -2.94848,-5.145618 -1.20775,-2.562628 -2.02319,-5.231775 -2.21647,-5.636952 C 104.14807,36.694393 88.81057,26.32 71.05,26.32 Z\"\n       fill-rule=\"evenodd\"\n       stroke=\"#000000\"\n       stroke-linecap=\"round\"\n       stroke-linejoin=\"round\"\n       stroke-width=\"3\"\n       id=\"path987\"\n       inkscape:label=\"outer\"\n       style=\"display:inline;fill:#000002;fill-opacity:1;stroke-width:3.07352;stroke-miterlimit:4;stroke-dasharray:none\"\n       sodipodi:nodetypes=\"ssccccccccccccccccccccccccccccccccccccccccccccccsssss\" />\n  </g>\n  <g\n     inkscape:groupmode=\"layer\"\n     id=\"layer2\"\n     inkscape:label=\"Hermit\"\n     style=\"display:inline\">\n    <g\n       inkscape:groupmode=\"layer\"\n       id=\"layer7\"\n       inkscape:label=\"Right Hind Leg\"\n       style=\"display:inline\">\n      <path\n         style=\"fill:#000000;fill-opacity:1;stroke:#ffffff;stroke-width:0.5;stroke-linecap:butt;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\"\n         d=\"m 81.500519,77.622995 c 3.527392,-3.543659 3.654821,-9.625088 1.388179,-11.316934 0.643875,0.164881 3.246453,-0.336213 3.814789,-1.564416 0.447365,10.039914 -2.491676,10.689337 -5.202968,12.88135 z\"\n         id=\"path1014\"\n         sodipodi:nodetypes=\"cccc\"\n         inkscape:label=\"toe\" />\n      <path\n         style=\"fill:#000000;fill-opacity:1;stroke:#ffffff;stroke-width:0.5;stroke-linecap:butt;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\"\n         d=\"m 83.406367,66.173556 c 6.62414,-0.495554 0.170004,-7.897498 -0.556837,-10.425445 -2.220298,-0.26509 -3.316182,0.685436 -4.367661,2.631259 2.896349,2.147363 4.476727,4.470873 4.924498,7.794186 z\"\n         id=\"path1016\"\n         sodipodi:nodetypes=\"cccc\"\n         inkscape:label=\"lower\" />\n      <path\n         style=\"fill:#000000;fill-opacity:1;stroke:#ffffff;stroke-width:0.5;stroke-linecap:butt;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\"\n         d=\"m 81.803149,55.382688 c -2.855567,0.849288 -2.35788,1.663178 -3.284723,2.492107 -1.948773,-0.242381 -2.537868,-2.211792 -3.804737,-3.811035 -0.848111,-1.918266 0.748486,-3.146301 2.498406,-4.331046 0.940885,0.03113 3.796147,2.826289 4.591054,5.649974 z\"\n         id=\"path1018\"\n         sodipodi:nodetypes=\"ccccc\"\n         inkscape:label=\"middle\" />\n      <path\n         style=\"fill:#000000;fill-opacity:1;stroke:#ffffff;stroke-width:0.5;stroke-linecap:butt;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\"\n         d=\"m 80.115777,50.909003 c -3,-1 -4.999999,0 -5,1.999999 -2.828741,-5.295986 -6,-5.999999 -9.000002,-8 -1.079496,-0.691202 -2.430978,-1.438145 2.000002,-1.000001 4.832718,0.688707 9.189418,4.037284 12,7.000002 z\"\n         id=\"path1020\"\n         sodipodi:nodetypes=\"ccccc\"\n         inkscape:label=\"upper\" />\n    </g>\n    <g\n       inkscape:groupmode=\"layer\"\n       id=\"layer8\"\n       inkscape:label=\"Right Fore Leg\">\n      <path\n         style=\"fill:#000000;fill-opacity:1;stroke:#ffffff;stroke-width:0.5;stroke-linecap:butt;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\"\n         d=\"m 73.488966,86.169915 c 7.174579,-4.746093 5.58765,-11.780415 5.58765,-11.780415 0.139038,0.181752 1,1 2.583436,-1.151457 -0.583436,9.151457 -4.295932,11.204685 -8.171086,12.931872 z\"\n         id=\"path1028\"\n         sodipodi:nodetypes=\"cccc\"\n         inkscape:label=\"toe\" />\n      <path\n         style=\"fill:#000000;fill-opacity:1;stroke:#ffffff;stroke-width:0.5;stroke-linecap:butt;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\"\n         d=\"m 76.115777,54.909002 c 1.567806,1.594361 1.190417,6.389244 2.180287,8.708697 1,2 -1,0 -2,1 -1,1 -6.180287,-8.708697 -0.180287,-9.708697 z\"\n         id=\"path1024\"\n         sodipodi:nodetypes=\"cccc\"\n         inkscape:label=\"middle\" />\n      <path\n         style=\"fill:#000000;fill-opacity:1;stroke:#ffffff;stroke-width:0.5;stroke-linecap:butt;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\"\n         d=\"m 75.365777,65.673045 c 1.000004,-1.999997 2,4e-6 3.000002,-0.999994 2.321469,4.157583 -0.134433,4.000726 2.521567,8.236952 0.478415,0.763054 -0.521589,2.763052 -1.92468,1.116741 -3.147186,-3.69274 -3.596895,-5.353699 -3.596889,-8.353699 z\"\n         id=\"path1026\"\n         sodipodi:nodetypes=\"ccssc\"\n         inkscape:label=\"lower\" />\n      <path\n         style=\"fill:#000000;fill-opacity:1;stroke:#ffffff;stroke-width:0.5;stroke-linecap:butt;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\"\n         d=\"m 77.115777,54.909002 c -1.618018,-0.270104 -3.206393,0.385895 -4,3 -3.700505,-4.453732 -3,-7.999999 -8,-10.999999 -0.350447,-3.050857 3.537371,-2.505431 4.668656,-2.24276 3.50432,2.469956 4.820248,4.037734 7.331344,10.242759 z\"\n         id=\"path1022\"\n         sodipodi:nodetypes=\"ccccc\"\n         inkscape:label=\"upper\" />\n    </g>\n    <g\n       inkscape:groupmode=\"layer\"\n       id=\"layer5\"\n       inkscape:label=\"Left Hind Leg\">\n      <path\n         style=\"fill:#000000;fill-opacity:1;stroke:#ffffff;stroke-width:0.5;stroke-linecap:butt;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\"\n         d=\"m 40.192561,52.96523 c 1,1 2.670118,2.749253 4.07424,2.309413 3.726898,-3.180737 1.12505,-9.174724 1.773593,-10.764972 -1.309498,-0.534047 -0.924616,-0.600668 -2.870934,-0.651418 -0.828217,5.272475 -3.053682,5.05075 -2.976899,9.106977 z\"\n         id=\"path910\"\n         sodipodi:nodetypes=\"ccccc\"\n         inkscape:label=\"upper\" />\n      <path\n         style=\"fill:#000000;fill-opacity:1;stroke:#ffffff;stroke-width:0.5;stroke-linecap:butt;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\"\n         d=\"m 40.115778,53.909002 c 1.324274,-0.327609 3.657389,0.989732 5,2 0.308563,3.289596 -1.264226,7.62085 -5,11 -6.50583,-3.976001 -0.196306,-9.384487 0,-13 z\"\n         id=\"path912\"\n         inkscape:label=\"middle\"\n         sodipodi:nodetypes=\"cccc\" />\n      <path\n         style=\"fill:#000000;fill-opacity:1;stroke:#ffffff;stroke-width:0.5;stroke-linecap:butt;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\"\n         d=\"m 30.115776,73.909002 c 0.739137,-4.788532 4.978493,-6.78665 5.978493,-11.786649 0,0.999999 0.969519,3.490465 4.021509,5.786649 -2.308595,1.389904 -5,4 -6,7 -1,1 -4.3051,0.976592 -4.000002,-1 z\"\n         id=\"path914\"\n         inkscape:label=\"lower\"\n         sodipodi:nodetypes=\"scccs\" />\n      <path\n         style=\"fill:#000000;fill-opacity:1;stroke:#ffffff;stroke-width:0.5;stroke-linecap:butt;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\"\n         d=\"m 16.927153,82.480883 c 4.12379,-2.229811 9.285719,-4.325022 13,-8 0.424793,0.704206 1.467553,1.437896 3.662003,1.001089 -4.586286,3.143365 -10.727246,6.495781 -16.662003,6.998911 z\"\n         id=\"path916\"\n         inkscape:label=\"toe\"\n         sodipodi:nodetypes=\"cccc\" />\n    </g>\n    <g\n       inkscape:groupmode=\"layer\"\n       id=\"layer6\"\n       inkscape:label=\"Left Fore Leg\">\n      <path\n         style=\"fill:#000000;fill-opacity:1;stroke:#ffffff;stroke-width:0.5;stroke-linecap:butt;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\"\n         d=\"m 26.407113,85.10637 c 4.306415,-2.223989 9.33034,-5.272998 10.357144,-8.98896 0.328098,0.641225 0.392728,3.543273 3.642857,2.988961 -4.37418,4.532478 -9.670194,4.21865 -14.000001,5.999999 z\"\n         id=\"path925\"\n         sodipodi:nodetypes=\"cccc\"\n         inkscape:label=\"toe\" />\n      <path\n         style=\"fill:#000000;fill-opacity:1;stroke:#ffffff;stroke-width:0.5;stroke-linecap:butt;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\"\n         d=\"m 49.365058,43.584598 c 0.971393,3.92503 2.593529,7.323738 0.866045,12.660777 -1.534815,-1.097037 -2.416409,-1.852333 -3.88918,-0.01558 C 46,51.999999 47.069093,45.681168 45.663166,42.671531 c 1.999291,0.05325 2.503505,-0.144408 3.701892,0.913067 z\"\n         id=\"path919\"\n         sodipodi:nodetypes=\"ccccc\"\n         inkscape:label=\"upper\" />\n      <path\n         style=\"fill:#000000;fill-opacity:1;stroke:#ffffff;stroke-width:0.5;stroke-linecap:butt;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\"\n         d=\"m 46.074054,56.118756 c 1.198663,-1.058155 2.479646,-1.282472 4.014799,0.303303 0.05216,1.328983 -0.39704,8.630983 -3.308266,13.726861 -6.23892,-4.488752 0.192638,-9.429227 -0.706533,-14.030164 z\"\n         id=\"path921\"\n         sodipodi:nodetypes=\"cccc\"\n         inkscape:label=\"middle\" />\n      <path\n         style=\"fill:#000000;fill-opacity:1;stroke:#ffffff;stroke-width:0.5;stroke-linecap:butt;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\"\n         d=\"m 37.115778,76.909001 c -0.448825,-3.792994 6.745464,-6.767355 6.90908,-11.899294 -0.01874,1.40083 0.550726,4.26504 3.545107,5.45721 -1.362164,3.0277 -4.543568,5.359071 -7.454187,8.442085 -1.228798,0.309329 -2.729065,0.289654 -3,-2.000001 z\"\n         id=\"path923\"\n         sodipodi:nodetypes=\"scccs\"\n         inkscape:label=\"lower\" />\n    </g>\n    <g\n       inkscape:groupmode=\"layer\"\n       id=\"layer4\"\n       inkscape:label=\"Right Cheliped\">\n      <path\n         style=\"fill:#000000;fill-opacity:1;stroke:#ffffff;stroke-width:0.5;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\"\n         d=\"m 71.115777,63.909002 c -2.668884,1.905679 -5.774963,0.615044 -8,0 -4.578367,8.726868 -0.660726,13.036701 2,17.999999 -1.923763,-9.76253 -1.223275,-10.337899 -0.63742,-13.017845 0.63742,5.017846 -0.616496,9.173406 1.637418,16.017845 4.206398,-4.450436 11.294106,-11.805867 5.000002,-20.999999 z\"\n         id=\"path903\"\n         sodipodi:nodetypes=\"cccccc\"\n         inkscape:label=\"lower\" />\n      <path\n         style=\"fill:#000000;fill-opacity:1;stroke:#ffffff;stroke-width:0.5;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\"\n         d=\"m 70.970573,62.999999 c -1.024047,0.975361 -4.566734,1.481143 -6.970574,1 0.07303,-2.999111 -3.128059,-5.884707 -0.759278,-12.191488 1.024048,-0.975359 2.048095,-1.950719 5.047206,-1.877689 0.926673,3.023454 6.130176,2.408047 2.682646,13.069177 z\"\n         id=\"path905\"\n         sodipodi:nodetypes=\"ccccc\"\n         inkscape:label=\"middle\" />\n      <path\n         style=\"fill:#000000;fill-opacity:1;stroke:#ffffff;stroke-width:0.5;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\"\n         d=\"m 62.352301,52.546818 c 2.581086,-2.888491 5.080805,-2.748336 7.32827,-2.644942 -5.173694,-5.484364 -6.746788,-8.720074 -13.564794,-5.992875 3.045341,2.497559 5.562295,5.756677 6.236524,8.637817 z\"\n         id=\"path907\"\n         sodipodi:nodetypes=\"cccc\"\n         inkscape:label=\"upper\" />\n    </g>\n    <g\n       inkscape:groupmode=\"layer\"\n       id=\"layer3\"\n       inkscape:label=\"Left Cheliped\">\n      <path\n         style=\"fill:#000000;fill-opacity:1;stroke:#ffffff;stroke-width:0.5;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\"\n         d=\"m 49.115778,42.909003 c 1.874206,4.775911 2.872953,11.02306 2.141441,14.843942 2.326812,-2.023803 4.869682,-3.582601 8.534944,-2.243308 -1.96186,-5.533223 -4.706338,-13.496686 -10.676385,-12.600634 z\"\n         id=\"path896\"\n         sodipodi:nodetypes=\"cccc\"\n         inkscape:label=\"upper\" />\n      <path\n         style=\"fill:#000000;fill-opacity:1;stroke:#ffffff;stroke-width:0.5;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\"\n         d=\"m 50.115776,67.909 c -0.361689,-3.648659 -0.506342,-7.301118 2.000001,-10.999999 3.031806,-2.730167 5.584891,-2.317936 8,-1 1.936265,6.370826 0.935871,8.873587 -1.000001,14.000001 -2.214463,1.690952 -4.979527,1.729395 -9,-2.000002 z\"\n         id=\"path898\"\n         sodipodi:nodetypes=\"ccccc\"\n         inkscape:label=\"middle\" />\n      <path\n         style=\"fill:#000000;fill-opacity:1;stroke:#ffffff;stroke-width:0.5;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\"\n         d=\"m 50.115777,92.909002 c -5.548626,-4.053882 -8.990525,-11.391203 1,-23 2.518723,0.772924 4.986345,1.424681 6.999999,1 4.517293,14.758297 -3.369964,19.488324 -6.999999,20.999998 -0.980858,-2.179079 3,-5.999998 3.999999,-8 -1.936564,3.377195 -5.857708,5.383213 -4.999999,9.000002 z\"\n         id=\"path900\"\n         sodipodi:nodetypes=\"cccccc\"\n         inkscape:label=\"lower\" />\n    </g>\n    <path\n       style=\"opacity:1;fill:#000000;fill-opacity:1;stroke:#ffffff;stroke-width:0.2;stroke-linecap:butt;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\"\n       d=\"M 24.115778,95.909002 C 43.60636,87.278476 75.376665,73.749313 64.115777,48.909003 62.746623,45.888795 58.999999,44 58.115776,44.909002 c 0.181069,0.647621 0.312306,1.464385 0.814518,2.414852 0.841187,1.592 4.398383,5.425292 0.550245,2.566875 -0.114741,1.837816 -0.276387,1.644793 -1.883139,-2.210758 -0.41733,-1.001422 -1.194958,-1.711632 -2.201611,-2.102892 -8.155699,-1.778525 -7.592003,-4.025034 -7.665076,-5.157929 2.059826,-2.135203 9.763573,-1.48809 11.385064,-2.510147 0.378509,2.022057 1.78325,2.184436 2.581892,1.127132 0.402725,-0.533159 1.005218,-1.459451 2.182066,-2.819531 0,0 1.516272,0.55102 1.414488,0.425445 -2.842941,2.584449 -4.122178,5.118101 -2.25449,5.659839 2.077371,0.602559 3.365648,-3.375542 7.076042,-5.392886 l 1.000001,1.000001 c -1.477414,0.891787 -2.672122,1.216642 -4.239759,4.790834 -0.857996,1.956219 2.070084,-0.03323 4.555974,-1.307273 1.979291,-1.180231 4.355143,-0.976834 6.283687,-0.324663 14.180053,4.909765 12.544061,40.133872 31.400102,44.841101 C 90.863441,82.952604 89.501261,49.380718 78.04312,43.044313 c -2.335221,-1.206434 -4.33105,-1.307413 -6.214119,0.05068 -1.084171,0.765071 -2.711829,1.779697 -5.997065,1.835959 -0.541223,0.0093 4.053911,1.212814 3.997617,1.892207 -0.01228,0.148227 -1.542196,-0.252945 -1.941113,-0.108686 3.851719,3.529877 -2.280337,-0.438997 -3.772663,-1.805467 C 63.350192,44.205348 61.999999,44 60.640193,44.057005 62.999999,45 63.945342,46.190647 64.877486,47.823172 80.281279,75.767598 37,90.999999 24.115778,95.909002 Z\"\n       id=\"path892\"\n       sodipodi:nodetypes=\"cscscscccsccsccscccccssccccc\"\n       inkscape:label=\"face\" />\n    <path\n       id=\"path862\"\n       style=\"fill:#000000;fill-opacity:1;fill-rule:evenodd;stroke:none;stroke-width:0.274192\"\n       inkscape:label=\"left eye\"\n       d=\"m 65.186173,34.076475 a 2.0726332,1.554475 3.7151065 0 0 -2.149646,1.41834 2.0726332,1.554475 3.7151065 0 0 1.967416,1.68567 2.0726332,1.554475 3.7151065 0 0 2.169422,-1.417057 2.0726332,1.554475 3.7151065 0 0 -1.967953,-1.685704 2.0726332,1.554475 3.7151065 0 0 -0.01923,-0.0012 z m 0.302928,0.591212 c 0.96284,0.122842 0.872401,1.078495 -0.212566,0.843778 -0.154391,-0.03341 -0.539541,-0.01324 -0.728561,0.186676 -0.647317,0.684666 -1.07554,-0.657063 0.105642,-0.957516 0.33511,-0.08524 0.61329,-0.101289 0.835485,-0.07294 z\" />\n    <path\n       id=\"path864\"\n       style=\"fill:#000000;fill-opacity:1;fill-rule:evenodd;stroke:none;stroke-width:0.264583;stroke-opacity:1\"\n       inkscape:label=\"right eye\"\n       d=\"m 70.714948,35.469831 a 1.9999999,1.5 2.3429749 0 0 -2.040947,1.417915 1.9999999,1.5 2.3429749 0 0 1.936899,1.580155 1.9999999,1.5 2.3429749 0 0 2.059513,-1.416641 1.9999999,1.5 2.3429749 0 0 -1.936878,-1.580668 1.9999999,1.5 2.3429749 0 0 -0.01858,-7.61e-4 z m -0.03659,0.439155 c 1.504655,0.08864 1.588122,1.512546 0.193988,0.808041 -0.136043,-0.06875 -0.577089,-0.07497 -0.812411,0.04796 -0.917426,0.479238 -0.888163,-0.781709 0.29876,-0.855115 0.112924,-0.007 0.21935,-0.0068 0.319663,-8.71e-4 z\" />\n  </g>\n</svg>\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}