{
  "metadata": {
    "timestamp": 1736709147594,
    "page": 355,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjM2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "cgag/loc",
      "stars": 2345,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.03515625,
          "content": "tests/data/* linguist-documentation\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1103515625,
          "content": "target\nsmall\nmedium\nbig\nbig2\nbig3\nbig4\n\nplasma.c\nplasma-huge.c\ntest.c\nlines.c\n\ncloc-out\n\nperf.data\nperf.old.data\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 3.185546875,
          "content": "# Based on the \"trust\" template v0.1.1\n# https://github.com/japaric/trust/tree/v0.1.1\n\ndist: trusty\nlanguage: rust\nservices: docker\nsudo: required\n\n# TODO Rust builds on stable by default, this can be\n# overridden on a case by case basis down below.\n\nenv:\n  global:\n    # TODO Update this to match the name of your project.\n    - CRATE_NAME=trust\n\nmatrix:\n  # TODO These are all the build jobs. Adjust as necessary. Comment out what you\n  # don't need\n  include:\n    # Linux\n    # - env: TARGET=i686-unknown-linux-gnu\n    # - env: TARGET=i686-unknown-linux-musl\n    - env: TARGET=x86_64-unknown-linux-gnu\n    - env: TARGET=x86_64-unknown-linux-musl\n\n    # OSX\n    - env: TARGET=i686-apple-darwin\n      os: osx\n    - env: TARGET=x86_64-apple-darwin\n      os: osx\n\n    # *BSD\n    - env: TARGET=i686-unknown-freebsd DISABLE_TESTS=1\n    - env: TARGET=x86_64-unknown-freebsd DISABLE_TESTS=1\n    - env: TARGET=x86_64-unknown-netbsd DISABLE_TESTS=1\n\n    # Other architectures\n    - env: TARGET=aarch64-unknown-linux-gnu\n    - env: TARGET=armv7-unknown-linux-gnueabihf\n    # - env: TARGET=mips-unknown-linux-gnu\n    # - env: TARGET=mips64-unknown-linux-gnuabi64\n    # - env: TARGET=mips64el-unknown-linux-gnuabi64\n    # - env: TARGET=mipsel-unknown-linux-gnu\n    # - env: TARGET=powerpc-unknown-linux-gnu\n    # - env: TARGET=powerpc64-unknown-linux-gnu\n    # - env: TARGET=powerpc64le-unknown-linux-gnu\n    # - env: TARGET=s390x-unknown-linux-gnu DISABLE_TESTS=1\n\n    # Testing other channels\n    - env: TARGET=x86_64-unknown-linux-gnu\n      rust: nightly\n    - env: TARGET=x86_64-apple-darwin\n      os: osx\n      rust: nightly\n\nbefore_install:\n  - set -e\n  - rustup self update\n\ninstall:\n  - sh ci/install.sh\n  - source ~/.cargo/env || true\n\nscript:\n  - bash ci/script.sh\n\nafter_script: set +e\n\nbefore_deploy:\n  - sh ci/before_deploy.sh\n\ndeploy:\n  api_key:\n    secure: ru/43ejUelnvh6acUxM6rNEnw1XA6+dHjoVTXkJPE/Vp0pFhRXwRrjvRP+Oo4TjLFKSp9IL9Y2RUyUE2QKGn3AaMNTX4TLjP0WaMA4lU5Fm/RiCIr5/As/XJVTnHENNCQ0pKEDPiP6HzbV2DAZSqaZTSSTkmFNTNVIUCz1+/m8wsgv+geZAOeV7UVD9olW2g2vDeXY0cQjRx+QQRvuqgTp2HsPypYVjNTeM9YDiAGXbIMz4xOpxKBKkQA/bGLVkyXgur1+SW/Ps+z9HPNtBqs02kMzhozOF2skSIhx1TsqBnl2OE8yMp6KqfjmDr61Po/P8yZBp3pG4dg18I/BLPyndQ0NZEyXScmDqSuaeTQfUVQ8QWEiIM1mpiyrZPhRbrMntyBCICglzJmVuGI/L7KH3rUcsjAa2C6ehZAw1rSlkc/rchcLdnAzdJ6R7M5AIlL6xKF/D0MOBXNRY9S3HKowpqNn3yYh4hcf4xFs2Ms5tSI5GPyKsKDIiimUoAHEpIMhNi7ojZVPucctc2ybf2Op3DXCJvRdstxA9Sln+1Ubb+0tz2/9i5w1P/dPq1v51HUj+eB5gcHqOSA5jSAJ9JuT3FQsmLyC6Xm9Pyv1sMVYrKchYleLezahG8hmwfzxdyQT+3LFjIV2Yx8ALcjvxs3cwolqcQ7T6cO1YQmBn/lag=\n  file_glob: true\n  file: $CRATE_NAME-$TRAVIS_TAG-$TARGET.*\n  on:\n    # TODO Here you can pick which targets will generate binary releases\n    # In this example, there are some targets that are tested using the stable\n    # and nightly channels. This condition makes sure there is only one release\n    # for such targets and that's generated using the stable channel\n    condition: $TRAVIS_RUST_VERSION = stable\n    tags: true\n  provider: releases\n  skip_cleanup: true\n\ncache: cargo\nbefore_cache:\n  # Travis can't cache files that are not readable by \"others\"\n  - chmod -R a+r $HOME/.cargo\n\nbranches:\n  only:\n    # release tags\n    - /^v\\d+\\.\\d+\\.\\d+.*$/\n    - master\n\nnotifications:\n  email:\n    on_success: never\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 2.404296875,
          "content": "## 0.4.0\n- respect .gitignore and ignore hidden files by default (-u to allow hidden -uu to allow hidden and ignored files)\n- allow multiple include / exclude regexs\n- remove unused errno crate\n- add languages:\n  - purescript\n  - haxe\n  - gherkin\n  - qml\n  - tsx (typescript + jsx)\n  - schemes (.ss, .scm, .rkt)\n  - pyret\n  - stylus\n\n## 0.3.4 (2016-11-04)\n- Default to searching `.` if no target is specified (suggested by chris-morgan)\n- F# support by red75prime\n- Fixed counting bug for Lua and other languages where the multi-line start pattern has the single-line\n  start pattern as a prefix (Lua single line comments start with `--`, multi with `--[[`)\n  - Issue raised by jswrenn, great catch.\n- Added tests for Lua, OCaml, Ruby, Ada.  Added a macro so the test file is much shorter despite\n  the added tests.  I still feel there's probably a better way.\n- Merged count_single, count_multi, count_single_multi into a single function.  The function\n  is a bit more complicated, the code is also now much shorter.\n\n## 0.3.3\n- support for including only files that match a regex (can be combined with exclude) (suggested by alekratz)\n- output is now 80 characters instead of 81 (gross) (issue raised by chneukirchen)\n- fixed support for multiple targets (issue raised by horacekmi, great catch)\n- zackshuster fixed compilation on windows by removing a broken dependency.\n- cypressious added instructions for running under the windows linux sub-system\n- pthariensflame synced the supported languages in the readme and also made it prettier\n- gebner added Lean support\n- AaronePower gave credit where it's due to Tokei and ripgrep.\n- AlexanderThaller added saltstack support\n- sunbubble added CUDA support\n- Switched to MIT license\n\n## 0.3.2 (2016-10-25)\n- Add a license file.\n- dignati added additional extensions for clojure (.cljs, .cljc)\n- pthariensflame fixed the display names for a bunch of languages\n- mclehmen fixed my broken wording in the readme\n- little-dude added TCL support\n- glennpratt fixed things so github correctly detects this as a Rust project\n\n## 0.3.1 (2016-10-25)\nThere was no 0.3.1. You saw nothing.\n\n## 0.3.0 (2016-10-24)\n\n- @svenstaro added OpenGL Shading Language (GLSL)\n\n### Bugs\n  - Fixed counting for python, which was extremely inaccurate due to an assumption that the\n    start of comment character is different from the end of comment character, but we treat\n    ''' as both starting and ending multiline comments for Python.\n"
        },
        {
          "name": "Cargo.lock",
          "type": "blob",
          "size": 7.6201171875,
          "content": "# This file is automatically @generated by Cargo.\n# It is not intended for manual editing.\nversion = 3\n\n[[package]]\nname = \"aho-corasick\"\nversion = \"0.7.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1e37cfd5e7657ada45f742d6e99ca5788580b5c529dc78faf11ece6dc702656f\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"ansi_term\"\nversion = \"0.12.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d52a9bb7ec0cf484c551830a7ce27bd20d67eac647e1befb56b0be4ee39a55d2\"\ndependencies = [\n \"winapi\",\n]\n\n[[package]]\nname = \"atty\"\nversion = \"0.2.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d9b39be18770d11421cdb1b9947a45dd3f37e93092cbf377614828a319d5fee8\"\ndependencies = [\n \"hermit-abi\",\n \"libc\",\n \"winapi\",\n]\n\n[[package]]\nname = \"bitflags\"\nversion = \"1.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bef38d45163c2f1dde094a7dfd33ccf595c92905c8f8f4fdc18d06fb1037718a\"\n\n[[package]]\nname = \"bstr\"\nversion = \"0.2.17\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ba3569f383e8f1598449f1a423e72e99569137b47740b1da11ef19af3d5c3223\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"cfg-if\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd\"\n\n[[package]]\nname = \"clap\"\nversion = \"2.34.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a0610544180c38b88101fecf2dd634b174a62eef6946f84dfc6a7127512b381c\"\ndependencies = [\n \"ansi_term\",\n \"atty\",\n \"bitflags\",\n \"strsim\",\n \"textwrap\",\n \"unicode-width\",\n \"vec_map\",\n]\n\n[[package]]\nname = \"crossbeam-utils\"\nversion = \"0.8.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b5e5bed1f1c269533fa816a0a5492b3545209a205ca1a54842be180eb63a16a6\"\ndependencies = [\n \"cfg-if\",\n \"lazy_static\",\n]\n\n[[package]]\nname = \"deque\"\nversion = \"0.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a694dae478589798d752c7125542f8a5ae8b6e59476172baf2eed67357bdfa27\"\n\n[[package]]\nname = \"edit-distance\"\nversion = \"2.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bbbaaaf38131deb9ca518a274a45bfdb8771f139517b073b16c2d3d32ae5037b\"\n\n[[package]]\nname = \"fnv\"\nversion = \"1.0.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3f9eec918d3f24069decb9af1554cad7c880e2da24a9afd88aca000531ab82c1\"\n\n[[package]]\nname = \"globset\"\nversion = \"0.4.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"10463d9ff00a2a068db14231982f5132edebad0d7660cd956a1c30292dbcbfbd\"\ndependencies = [\n \"aho-corasick\",\n \"bstr\",\n \"fnv\",\n \"log\",\n \"regex\",\n]\n\n[[package]]\nname = \"hermit-abi\"\nversion = \"0.1.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"62b467343b94ba476dcb2500d242dadbb39557df889310ac77c5d99100aaac33\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"ignore\"\nversion = \"0.4.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"713f1b139373f96a2e0ce3ac931cd01ee973c3c5dd7c40c0c2efe96ad2b6751d\"\ndependencies = [\n \"crossbeam-utils\",\n \"globset\",\n \"lazy_static\",\n \"log\",\n \"memchr\",\n \"regex\",\n \"same-file\",\n \"thread_local\",\n \"walkdir\",\n \"winapi-util\",\n]\n\n[[package]]\nname = \"lazy_static\"\nversion = \"1.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e2abad23fbc42b3700f2f279844dc832adb2b2eb069b2df918f455c4e18cc646\"\n\n[[package]]\nname = \"libc\"\nversion = \"0.2.119\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1bf2e165bb3457c8e098ea76f3e3bc9db55f87aa90d52d0e6be741470916aaa4\"\n\n[[package]]\nname = \"loc\"\nversion = \"0.5.0\"\ndependencies = [\n \"clap\",\n \"deque\",\n \"edit-distance\",\n \"ignore\",\n \"memchr\",\n \"num_cpus\",\n \"regex\",\n \"smallvec\",\n]\n\n[[package]]\nname = \"log\"\nversion = \"0.4.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"51b9bbe6c47d51fc3e1a9b945965946b4c44142ab8792c50835a980d362c2710\"\ndependencies = [\n \"cfg-if\",\n]\n\n[[package]]\nname = \"memchr\"\nversion = \"2.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"308cc39be01b73d0d18f82a0e7b2a3df85245f84af96fdddc5d202d27e47b86a\"\n\n[[package]]\nname = \"num_cpus\"\nversion = \"1.13.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"19e64526ebdee182341572e50e9ad03965aa510cd94427a4549448f285e957a1\"\ndependencies = [\n \"hermit-abi\",\n \"libc\",\n]\n\n[[package]]\nname = \"once_cell\"\nversion = \"1.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"da32515d9f6e6e489d7bc9d84c71b060db7247dc035bbe44eac88cf87486d8d5\"\n\n[[package]]\nname = \"regex\"\nversion = \"1.5.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d07a8629359eb56f1e2fb1652bb04212c072a87ba68546a04065d525673ac461\"\ndependencies = [\n \"aho-corasick\",\n \"memchr\",\n \"regex-syntax\",\n]\n\n[[package]]\nname = \"regex-syntax\"\nversion = \"0.6.25\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f497285884f3fcff424ffc933e56d7cbca511def0c9831a7f9b5f6153e3cc89b\"\n\n[[package]]\nname = \"same-file\"\nversion = \"1.0.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"93fc1dc3aaa9bfed95e02e6eadabb4baf7e3078b0bd1b4d7b6b0b68378900502\"\ndependencies = [\n \"winapi-util\",\n]\n\n[[package]]\nname = \"smallvec\"\nversion = \"1.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f2dd574626839106c320a323308629dcb1acfc96e32a8cba364ddc61ac23ee83\"\n\n[[package]]\nname = \"strsim\"\nversion = \"0.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8ea5119cdb4c55b55d432abb513a0429384878c15dde60cc77b1c99de1a95a6a\"\n\n[[package]]\nname = \"textwrap\"\nversion = \"0.11.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d326610f408c7a4eb6f51c37c330e496b08506c9457c9d34287ecc38809fb060\"\ndependencies = [\n \"unicode-width\",\n]\n\n[[package]]\nname = \"thread_local\"\nversion = \"1.1.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5516c27b78311c50bf42c071425c560ac799b11c30b31f87e3081965fe5e0180\"\ndependencies = [\n \"once_cell\",\n]\n\n[[package]]\nname = \"unicode-width\"\nversion = \"0.1.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3ed742d4ea2bd1176e236172c8429aaf54486e7ac098db29ffe6529e0ce50973\"\n\n[[package]]\nname = \"vec_map\"\nversion = \"0.8.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f1bddf1187be692e79c5ffeab891132dfb0f236ed36a43c7ed39f1165ee20191\"\n\n[[package]]\nname = \"walkdir\"\nversion = \"2.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"808cf2735cd4b6866113f648b791c6adc5714537bc222d9347bb203386ffda56\"\ndependencies = [\n \"same-file\",\n \"winapi\",\n \"winapi-util\",\n]\n\n[[package]]\nname = \"winapi\"\nversion = \"0.3.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5c839a674fcd7a98952e593242ea400abe93992746761e38641405d28b00f419\"\ndependencies = [\n \"winapi-i686-pc-windows-gnu\",\n \"winapi-x86_64-pc-windows-gnu\",\n]\n\n[[package]]\nname = \"winapi-i686-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ac3b87c63620426dd9b991e5ce0329eff545bccbbb34f3be09ff6fb6ab51b7b6\"\n\n[[package]]\nname = \"winapi-util\"\nversion = \"0.1.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"70ec6ce85bb158151cae5e5c87f95a8e97d2c0c4b001223f33a334e3ce5de178\"\ndependencies = [\n \"winapi\",\n]\n\n[[package]]\nname = \"winapi-x86_64-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"712e227841d057c1ee1cd2fb22fa7e5a5461ae8e48fa2ca79ec42cfc1931183f\"\n"
        },
        {
          "name": "Cargo.toml",
          "type": "blob",
          "size": 0.5341796875,
          "content": "[package]\nname = \"loc\"\nversion = \"0.5.0\"\ndescription = \"Count lines of code (cloc) fast.\"\nauthors = [\"Curtis Gagliardi <curtis@curtis.io>\"]\n\nrepository = \"https://github.com/cgag/loc\"\nhomepage = \"https://github.com/cgag/loc\"\ndocumentation = \"https://github.com/cgag/loc\"\n\nlicense=\"MIT\"\n\n[dependencies]\nclap          = \"2.34.0\"\ndeque         = \"0.3.2\"\nmemchr        = \"2.4.1\"\nregex         = \"1.5.4\"\nnum_cpus      = \"1.13.1\"\nignore        = \"0.4.18\"\nedit-distance = \"2.1.0\"\nsmallvec      = \"1.8.0\"\n\n[profile.release]\nincremental = false\nlto = true\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0576171875,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2016 Curtis Gagliardi\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 9.91796875,
          "content": "2019-10-07: I really haven't been on top of accepting pull requests or looking at issues, you guy should definitely look at [SCC](https://github.com/boyter/scc).  It's faster and more accurate than this, and Boyter has written a great series of blog posts detailing how it got this way:  [https://boyter.org/posts/sloc-cloc-code/](https://boyter.org/posts/sloc-cloc-code/)\n\n2018-03-08:\nI saw a bunch of stars pop up and thought I should mention that tokei is smarter and more accurate so please give that a look and see if there are any wild discrepancies (mostly for your benefit but please let me know if so).  Tokei is linked below but it's also rust so `cargo install tokei` is all you need.  Also these benchmarks are quite old. I doubt cloc has changed but tokei probably has. \n\n`loc` is a tool for counting lines of code. It's a rust implementation of [cloc](http://cloc.sourceforge.net/), but it's more than 100x faster. There's another rust code counting tool called [tokei](https://github.com/Aaronepower/tokei), loc is ~2-10x faster than tokei, depending on how many files are being counted.\n\nI can count my 400k file `src` directory (thanks npm) in just under 7 seconds with loc, in a 1m14s with tokei, and I'm not even willing to try with cloc.\n\nCounting just the dragonflybsd codebase (~9 million lines):\n  - loc: 1.09 seconds\n  - tokei: 5.3 seconds\n  - cloc: 1 minute, 50 seconds\n\n### Installation\n\nThere are binaries available on the [releases page](https://github.com/cgag/loc/releases), thanks to the wonderful rust-everywhere project and travisci. For anyone familiar with Rust there's `cargo install loc`.\nIf you want to install Rust/Cargo, this is probably the easiest way: [https://www.rustup.rs/](https://www.rustup.rs/).\n\n#### Windows\n\n`loc` should now compile on Windows, but you can also run it under Windows using linux emulation:\n\n> You can run `loc` on Windows 10 Anniversary Update build 14393 or later using the [Windows Subsystem for Linux](https://msdn.microsoft.com/de-de/commandline/wsl/install_guide?f=255&MSPPError=-2147217396). Simply download the Linux distribution from the [releases page](https://github.com/cgag/loc/releases), and run it in `bash` using a WSL-compatible path (e.g. `/mnt/c/Users/Foo/Repo/` instead of `C:\\Users\\Foo\\Repo`).\n\n### Usage\n\nBy default, `loc` will count lines of code in a target directory:\n\n``` shell\n$ loc\n--------------------------------------------------------------------------------\n Language             Files        Lines        Blank      Comment         Code\n--------------------------------------------------------------------------------\n Lua                      2       387088        24193       193544       169351\n Rust                     4         1172          111           31         1030\n C                        4          700           75          155          470\n Markdown                 2          249           39            0          210\n Bourne Shell             4          228           41           27          160\n Ada                      2           53           12            9           32\n Toml                     1           26            4            2           20\n Gherkin                  1           12            2            2            8\n OCaml                    1           13            4            6            3\n Ruby                     1            4            0            2            2\n Handlebars               1            4            0            2            2\n--------------------------------------------------------------------------------\n Total                   23       389549        24481       193780       171288\n--------------------------------------------------------------------------------\n\n```\n\nYou can also pass one or many targets for it to inspect\n\n``` shell\n$ loc ci benches\n--------------------------------------------------------------------------------\n Language             Files        Lines        Blank      Comment         Code\n--------------------------------------------------------------------------------\n Bourne Shell             4          228           41           27          160\n Rust                     1           17            4            0           13\n--------------------------------------------------------------------------------\n Total                    5          245           45           27          173\n--------------------------------------------------------------------------------\n```\n\nTo see stats for *each file* parsed, pass the `--files` flag:\n\n```sh\n$ loc --files src\n--------------------------------------------------------------------------------\n Language             Files        Lines        Blank      Comment         Code\n--------------------------------------------------------------------------------\n--------------------------------------------------------------------------------\n Rust                     2         1028           88           29          911\n--------------------------------------------------------------------------------\n|src/lib.rs                         677           54           19          604\n|src/main.rs                        351           34           10          307\n```\n\nBy default, the columns will be sorted by `Code` counted in descending order. You can select a different column to sort\nusing the `--sort` flag:\n\n``` shell\n$ loc --files --sort Comment ci\n--------------------------------------------------------------------------------\n Language             Files        Lines        Blank      Comment         Code\n--------------------------------------------------------------------------------\n--------------------------------------------------------------------------------\n Bourne Shell             4          228           41           27          160\n--------------------------------------------------------------------------------\n|ci/before_deploy.sh                 68           15           13           40\n|ci/install.sh                       60           13            6           41\n|ci/script.sh                        41            8            8           25\n|ci/utils.sh                         59            5            0           54\n\n```\n\n`loc` can also be called with regexes to match and/or exclude files.\n\n``` shell\n$ loc --include 'count'\n--------------------------------------------------------------------------------\n Language             Files        Lines        Blank      Comment         Code\n--------------------------------------------------------------------------------\n Rust                     2          144           23            2          119\n--------------------------------------------------------------------------------\n Total                    2          144           23            2          119\n```\n\n``` shell\nloc --exclude 'sh$'\n--------------------------------------------------------------------------------\n Language             Files        Lines        Blank      Comment         Code\n--------------------------------------------------------------------------------\n Lua                      2       387088        24193       193544       169351\n Rust                     4         1172          111           31         1030\n C                        4          700           75          155          470\n Markdown                 2          275           38            0          237\n Ada                      2           53           12            9           32\n Toml                     1           26            4            2           20\n Gherkin                  1           12            2            2            8\n OCaml                    1           13            4            6            3\n Handlebars               1            4            0            2            2\n Ruby                     1            4            0            2            2\n--------------------------------------------------------------------------------\n Total                   19       389347        24439       193753       171155\n--------------------------------------------------------------------------------\n```\n\n\n### Known Issues\nFortran has a rule that comments must start with the first character of a line. I only check if it's the first non-whitespace character of a line. I don't know\nhow often this is a problem in real code.  I would think not often.\n\nComments inside string literals: You can get incorrect counts if your code has something like this:\n\n```\nx = \"/* I haven't slept \\\nfor 10 days \\\nbecause that would be too long \\\n*/\";\n```\n\nloc counts the first line and last lines correctly as code, but the middle\nlines will be incorrectly counted as comments.\n\nIgnored and hidden files:\n\nBy default, loc respects .gitignore/.ignore files, and ignores hidden files and directories.  You can count disregard\nignore files with `loc -u`, and include hidden files/dirs with `loc -uu`.\n\n### Supported Languages\n\n- ActionScript\n- Ada\n- Agda\n- AmbientTalk\n- ASP\n- ASP.NET\n- Assembly\n- Autoconf\n- Awk\n- Batch\n- Bourne Shell\n- C\n- C Shell\n- C/C++ Header\n- C#\n- C++\n- Clojure\n- CoffeeScript\n- ColdFusion\n- ColdFusionScript\n- Coq\n- CSS\n- CUDA\n- CUDA Header\n- D\n- Dart\n- DeviceTree\n- Erlang\n- Forth\n- FORTRAN Legacy\n- FORTRAN Modern\n- F# (Fsharp)\n- GLSL\n- Go\n- Groovy\n- Handlebars\n- Haskell\n- Hex\n- HTML\n- Idris\n- INI\n- Intel Hex\n- Isabelle\n- Jai\n- Java\n- JavaScript\n- JSON\n- Jsx\n- Julia\n- Kotlin\n- Lean\n- Less\n- LinkerScript\n- Lisp\n- Lua\n- Make\n- Makefile\n- Markdown\n- Mustache\n- Nim\n- Nix\n- Objective-C\n- Objective-C++\n- OCaml\n- OpenCL\n- Oz\n- Pascal\n- Perl\n- PHP\n- Plain Text\n- Polly\n- PowerShell\n- Prolog\n- Protobuf\n- Pyret\n- Python\n- Qcl\n- QML\n- R\n- Razor\n- reStructuredText\n- Ruby\n- RubyHtml\n- Rust\n- SaltStack\n- Sass\n- Scala\n- SML\n- Solidity\n- SQL\n- Stylus\n- Swift\n- Tcl\n- Terraform\n- TeX\n- Toml\n- TypeScript\n- Tsx\n- UnrealScript\n- VimL\n- Wolfram\n- XML\n- Yacc\n- YAML\n- Zig\n- Z Shell\n\n## Attributions\n\nThis project contains code from [Tokei](https://github.com/Aaronepower/tokei) by [Aaronepower](https://github.com/Aaronepower) and [ripgrep](https://github.com/BurntSushi/ripgrep) by [BurntSushi](https://github.com/BurntSushi).\n\n### Contributors\n"
        },
        {
          "name": "appveyor.yml",
          "type": "blob",
          "size": 2.5576171875,
          "content": "# Based on the \"trust\" template v0.1.1\n# https://github.com/japaric/trust/tree/v0.1.1\n\nenvironment:\n  global:\n  # TODO This is the Rust channel that build jobs will use by default but can be\n  # overridden on a case by case basis down below\n    RUST_VERSION: stable\n\n    # TODO Update this to match the name of your project.\n    CRATE_NAME: trust\n\n  # TODO These are all the build jobs. Adjust as necessary. Comment out what you\n  # don't need\n  matrix:\n    # MinGW\n    - TARGET: i686-pc-windows-gnu\n    - TARGET: x86_64-pc-windows-gnu\n\n    # MSVC\n    - TARGET: i686-pc-windows-msvc\n    - TARGET: x86_64-pc-windows-msvc\n\n    # Testing other channels\n    - TARGET: x86_64-pc-windows-gnu\n      RUST_VERSION: nightly\n    - TARGET: x86_64-pc-windows-msvc\n      RUST_VERSION: nightly\n\ninstall:\n  - ps: >-\n      If ($Env:TARGET -eq 'x86_64-pc-windows-gnu') {\n        $Env:PATH += ';C:\\msys64\\mingw64\\bin'\n      } ElseIf ($Env:TARGET -eq 'i686-pc-windows-gnu') {\n        $Env:PATH += ';C:\\msys64\\mingw32\\bin'\n      }\n  - curl -sSf -o rustup-init.exe https://win.rustup.rs/\n  - rustup-init.exe -y --default-host %TARGET% --default-toolchain %RUST_VERSION%\n  - set PATH=%PATH%;C:\\Users\\appveyor\\.cargo\\bin\n  - rustc -Vv\n  - cargo -V\n\n# TODO This is the \"test phase\", tweak it as you see fit\ntest_script:\n  # we don't run the \"test phase\" when doing deploys\n  - if [%APPVEYOR_REPO_TAG%]==[false] (\n      cargo build --target %TARGET% &&\n      cargo build --target %TARGET% --release &&\n      cargo test --target %TARGET% &&\n      cargo test --target %TARGET% --release &&\n      cargo run --target %TARGET% &&\n      cargo run --target %TARGET% --release\n    )\n\nbefore_deploy:\n  # TODO Update this to build the artifacts that matter to you\n  - cargo rustc --target %TARGET% --release --bin loc\n  - ps: ci\\before_deploy.ps1\n\ndeploy:\n  artifact: /.*\\.zip/\n  auth_token:\n    secure: T/gSTGD/iDEFxRGveB6LOMegOzcb8P0o0+vshvwh97nLgXOapkDgl18NOIRlSstR\n  description: ''\n  on:\n    # TODO Here you can pick which targets will generate binary releases\n    # In this example, there are some targets that are tested using the stable\n    # and nightly channels. This condition makes sure there is only one release\n    # for such targets and that's generated using the stable channel\n    RUST_VERSION: stable\n    appveyor_repo_tag: true\n  provider: GitHub\n\ncache:\n  - C:\\Users\\appveyor\\.cargo\\registry\n  - target\n\nbranches:\n  only:\n    # Release tags\n    - /^v\\d+\\.\\d+\\.\\d+.*$/\n    - master\n\nnotifications:\n  - provider: Email\n    on_build_success: false\n\n# Building is done in the test phase, so we disable Appveyor's build phase.\nbuild: false\n"
        },
        {
          "name": "benches",
          "type": "tree",
          "content": null
        },
        {
          "name": "ci",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}