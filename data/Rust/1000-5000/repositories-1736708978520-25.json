{
  "metadata": {
    "timestamp": 1736708978520,
    "page": 25,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "PistonDevelopers/piston",
      "stars": 4649,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.3232421875,
          "content": ".DS_Store\n*~\n*#\n*.o\n*.so\n*.swp\n*.dylib\n*.dSYM\n*.dll\n*.rlib\n*.dummy\n*.exe\n*-test\n/bin/main\n/bin/test-internal\n/bin/test-external\n/doc/\n/target/\n/build/\n/.rust/\nrusti.sh\n\n\nexamples/image\n\nexamples/user_input\n\nexamples/image_iter\n\nexamples/audio\n\nexamples/audio_iter\n\nexamples/soundstream\n\nwatch.sh\n\nexamples/hgl_triangle\n\nCargo.lock\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.0810546875,
          "content": "language: rust\nrust:\n  - stable\n  - beta\n  - nightly\nscript:\n  - bash ci/script.sh\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 3.619140625,
          "content": "# How to contribute to Piston\n\n<a href=\"#donate_money\">How to donate money</a>\n\nGit commands, and the pull request process: https://github.com/PistonDevelopers/rust-empty/issues/31\n\nWe use the issue tracker heavily. We try to plan as much as possible up front and break the tasks down into 'Easy' tasks. You do not need to know a lot about Rust to work on the project. [Rust-Empty](https://github.com/pistondevelopers/rust-empty) contains a lot of information in the issue tracker for those new to Rust/Terminal/Vim/GitHub.\n\nThe most common way of contributing is by creating PRs.  \nIf you do not need write access, you do not have to be added as collaborator.  \nIf you need write access to a specific repository, people in the Admin group can invite you.  \n\n### Getting started\n\nHere is how you get started:\n\n1. [Fork](https://github.com/PistonDevelopers/piston/fork) the repository.\n2. Clone your repository to the local hard drive ([GitHub for Mac](https://mac.github.com/), [Github for Window](https://windows.github.com/)).\n3. Open up the Terminal and navigate to the project directory.\n4. If you have not installed Rust yet, download it [here](http://www.rust-lang.org/).\n5. Type `cargo build` to build the library.\n\nYou work against the fork as you would do with personal projects. When you want review of your code, open up a pull request on GitHub. *Even if it is just a small change, a PR makes it easier for other people to follow the changes!*\n\nFeel free to open issues, post comments about progress, questions, new ideas, brainstorming etc. The label \"Information\" is used to collect relevant information. You can remove and edit comments as a way of refining ideas in the issue tracker. This is very helpful because many concerns in this project are very complex. Many issues needs to be broken down into new issues before they can be implemented. Please add comments like \"can copy code from X\" that tells other people how you do it efficiently.\n\nIf you have an idea how to make collaboration better, open an issue.\n\n### Becoming a part of the PistonCollaborator team\n\nThe PistonCollaborator team is a group of people with write access to all projects.  \nFor security reasons there are some rules:\n\nTo be added as collaborator, it is required that you need some experience contributing to The Piston Project.  \nThe judgement of experience is made informally by the people sending the invitation.  \n\nMembership might be removed without warning if suspicious activity is discovered.\n\nIf you are not added as collaborator, post a message [here](https://github.com/PistonDevelopers/piston/issues/70) \"I want to contribute to Piston\" and @bvssvni or @mitchmindtree will add you as a collaborator. When you are a collaborator you can assign issues to yourself. Just look around and see if there are unassigned issues. We label tasks according to the amount of thinking involved: \"Easy\", \"Medium\" or \"Hard\".\n\n### How to donate money\n<a name=\"donate_money\"></a>\n\nIf you feel charitable, these fine people accept donations:\n\n| nick name | first name | last name | Transfer Options | comment |\n|---------------|---------------|---------------|-------------------|--------------|\n| bvssvni | Sven | Nilsen | PayPal: post at cutoutpro.com | I work on the core engine of Piston, Dyon, Turbine, general graphics, various smaller libraries and help administering repos and the Rust gamedev subreddit |\n| mitchmindtree | Mitchell | Nordine | PayPal: mitchell.nordine at gmail.com | I work primarily on user-interface [(see Conrod)](https://github.com/PistonDevelopers/conrod) and audio/dsp [(see rust-dsp)](https://github.com/PistonDevelopers/rust-dsp) while contributing to the other crates where I can. |\n"
        },
        {
          "name": "Cargo.toml",
          "type": "blob",
          "size": 1.0810546875,
          "content": "[package]\nname = \"piston\"\nversion = \"1.0.0\"\nedition = \"2018\"\nauthors = [\n    \"bvssvni <bvssvni@gmail.com>\",\n    \"Coeuvre <coeuvre@gmail.com>\",\n    \"gmorenz\",\n    \"leonkunert <info@leonkunert.de>\",\n    \"mitchmindtree <me@michellnordine.com>\",\n    \"Christiandh\",\n    \"Apointos\",\n    \"ccgn\",\n    \"reem\",\n    \"TyOverby <ty@pre-alpha.com>\",\n    \"eddyb\",\n    \"Phlosioneer <mattmdrr2@gmail.com\"\n]\nkeywords = [\"piston\", \"game\", \"engine\", \"core\"]\ndescription = \"The Piston game engine core libraries\"\nlicense = \"MIT\"\nrepository = \"https://github.com/PistonDevelopers/piston.git\"\nhomepage = \"https://github.com/PistonDevelopers/piston\"\ndocumentation = \"https://docs.rs/piston\"\nreadme = \"README.md\"\nexclude = [\"images/*\"]\n\n[lib]\nname = \"piston\"\npath = \"./src/lib.rs\"\n\n[features]\nasync = [\"pistoncore-event_loop/async\"]\n\n[dependencies.pistoncore-input]\npath = \"src/input\"\nversion = \"1.0.1\"\n\n[dependencies.pistoncore-window]\npath = \"src/window\"\nversion = \"1.0.0\"\n\n[dependencies.pistoncore-event_loop]\npath = \"src/event_loop\"\nversion = \"1.0.0\"\n\n[workspace]\nmembers = [\n  \"src/input\",\n  \"src/window\",\n  \"src/event_loop\"\n]\n"
        },
        {
          "name": "GUIDE.md",
          "type": "blob",
          "size": 4.1279296875,
          "content": "# Piston Guide\n\n## Getting Help\n\n*Notice! Piston is  being actively developed. Please let us know if anything in this tutorial is outdated.*\n\nIf you experience problems with content covered in this tutorial, or would like help in general, ask on the [#rust-gamedev](http://chat.mibbit.com/?server=irc.mozilla.org&channel=%23rust-gamedev) IRC channel or open an issue in the [Piston](https://github.com/PistonDevelopers/piston/) repository.\n\n## Introduction\n\n### Why Piston?\n\nPiston is a game engine focusing on user-friendliness, back-end agnostic interface and game development research using the Rust language.\n\nWith Piston, you should be able to get something up on the screen quickly, make a prototype, load images and sounds, polish it to look like a real game and port it to other platforms.\n\nOur goal is to provide the tools for creative game development, build the best 2D graphics API for Rust and make it easy to use with other libraries for game development in the Rust community. 3D can be achieved through OpenGL and [Gfx](https://github.com/gfx-rs/gfx-rs).\n\n### Why Rust?\n\nRust is a programming language with a focus on type safety, memory safety, concurrency and performance. It is intended for writing large-scale, high-performance software that is free from several classes of common errors. Rust has a sophisticated memory model that encourages efficient data structures and safe concurrency patterns, forbidding invalid memory accesses that would otherwise cause segmentation faults. It is statically typed and compiled ahead of time. For more information see http://www.rust-lang.org/\n\nSome of the things that make Rust suitable for game development:\n\n* Garbage collection is optional which makes it easier to reason about performance\n* The Rust enum type is suitable for state machines which are commonly used in game logic\n* Exhaustive match helps you cover all states\n* Allows low level programming and reuse of existing C libraries\n* Link libraries statically to create standalone executables\n* Generics & traits makes it possible to build zero cost abstractions\n* No null pointer exceptions\n* Functional iterator patterns that are optimized at compile time\n* Immutability by default which makes it easier to read Rust code\n* Flexible module system for organizing large projects\n* Active and friendly community with a rapidly growing open source ecosystem\n\n## Installing Rust and Cargo\n\nTo install Rust and Cargo (Rust's package manager) on your machine visit this page and install the appropriate package for your platform.\n\n* [Install Rust](https://www.rust-lang.org/en-US/install.html)\n\nOnce you're done, try these commands to confirm that each have been installed correctly.\n\n`rustc --version`\n`cargo --version`\n\nThings are moving fast in Rust-land, so be sure to keep your machine up to date.\n\n## Hello World\n\n[Getting Started](https://github.com/PistonDevelopers/Piston-Tutorials/tree/master/getting-started)\n\nNow that you have Rust and Cargo installed, check out the Getting Started tutorial above.\nIt will take you through creating your first Piston project, rendering a box to a window, all in Rust!\n\n## Next Steps\n\n### More of Piston in Action\n\n[Piston-Examples](https://github.com/pistondevelopers/piston-examples)\nTo see small samples of Piston's features, check out the Piston Examples repo.\n\n[Piston-Tutorials](https://github.com/PistonDevelopers/Piston-Tutorials)\nYou're already familiar with our Tutorials repo. Check it out for more in-depth guides to creating projects.\n\n### Piston Community\n\n* Join the [#rust-gamedev](http://chat.mibbit.com/?server=irc.mozilla.org&channel=%23rust-gamedev) IRC channel.\n* Browse current issues in the [Piston](https://github.com/PistonDevelopers/piston/issues) repo.\n\n### Contributing\n\nCheck out How To Contribute [How To Contribute](https://github.com/PistonDevelopers/piston/blob/master/CONTRIBUTING.md).\n\n### Show Us Your Games\n\n[Games Made With Piston](https://github.com/PistonDevelopers/piston/wiki/Games-Made-With-Piston)\n\nWe'd love to add whatever you make with Piston to the examples.\n\nYou can edit the page when you are added as a collaborator to the Piston project.\nAlternatively, you can also open up an issue to get your game submitted.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0517578125,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2014 Sven Nilsen\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE."
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 1.1611328125,
          "content": "# ![Piston](./images/piston-logo.png)\n\n[![Crates.io](https://img.shields.io/crates/v/piston.svg?style=flat-square)](https://crates.io/crates/piston) [![Crates.io](https://img.shields.io/crates/l/piston.svg)](https://github.com/PistonDevelopers/piston/blob/master/LICENSE)\n\nA modular game engine written in Rust\n\n[Maintainers of Piston core libraries](https://github.com/PistonDevelopers/piston/issues/1399)\n\n## Dive into the world of Piston\n* [Guide](./GUIDE.md)\n* [Overview](https://github.com/PistonDevelopers/piston/wiki/Piston-overview)\n* [Examples](https://github.com/pistondevelopers/piston-examples)\n* [Tutorials](https://github.com/pistondevelopers/piston-tutorials)\n* [Features](https://github.com/PistonDevelopers/piston/wiki/Features)\n* [List of games made with Piston](https://github.com/PistonDevelopers/piston/wiki/Games-Made-With-Piston)\n* [Piston online docs](https://docs.rs/piston/)\n* [How to contribute](https://github.com/PistonDevelopers/piston/blob/master/CONTRIBUTING.md)\n* [Online forums](https://github.com/PistonDevelopers/piston/issues/1400)\n* [FAQ - Frequently Asked Questions](https://github.com/PistonDevelopers/piston/wiki/Frequently-Asked-Questions-(FAQ))\n\n"
        },
        {
          "name": "ci",
          "type": "tree",
          "content": null
        },
        {
          "name": "images",
          "type": "tree",
          "content": null
        },
        {
          "name": "rustfmt.toml",
          "type": "blob",
          "size": 0.212890625,
          "content": "edition = \"2018\"\nuse_try_shorthand = true\nuse_field_init_shorthand = true\nhard_tabs = false\n\nunstable_features = true\nformat_code_in_doc_comments = true\nimports_granularity = \"crate\"\ngroup_imports = \"StdExternalCrate\"\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}