{
  "metadata": {
    "timestamp": 1736709077204,
    "page": 209,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "stacks-network/stacks-core",
      "stars": 3014,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".cargo",
          "type": "tree",
          "content": null
        },
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.19140625,
          "content": "Dockerfile*\ntarget\nintegration_tests/blockstack-consensus-data/\nintegration_tests/test-out/\napi/data\n.git\n.venv\n.dockerignore\ntestnet/index.html\ntestnet.log\ntestnet-logs*\nlegacy\nbuild-scripts\ndist"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.0361328125,
          "content": "legacy/* linguist-vendored\n* text=lf\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.025390625,
          "content": "*.py[cod]\n\n# C extensions\n*.so\n\n# Packages\n*.egg\n*.egg-info\ndist\nbuild\neggs\nparts\nvar\nsdist\ndevelop-eggs\n.installed.cfg\n__pycache__\n\n# Installer logs\npip-log.txt\n\n# Unit test / coverage reports\n.coverage\n.tox\nnosetests.xml\n\n# Translations\n*.mo\n\n# Mr Developer\n.mr.developer.cfg\n.project\n.pydevproject\n\nignore\nsecrets*\n\n*.pickle\n*.pid\n\n# vim\n*.swp\n\n#Docker\nDocker/blockstore.ini\n\n#Docs\napi/templates/index.html\napi/data\n\n# testnets\ntestnet-logs/\ntestnet.log\ntestnet/index.html\n\n# virtualenvs\n.venv\n\n# will have compiled files and executables\n/target/\n/testnet/helium/target/\n/contrib/tools/puppet-chain/target/\n/contrib/core-contract-tests/.cache/\n\n# These are backup files generated by rustfmt\n**/*.rs.bk\n\nnode_modules\ntarpaulin-report.html\nosxcross\nosxcross*.tar.xz\n.DS_Store\ntestnet/stacks-node/target\n\nnet-test/etc/*.toml\nnet-test/etc/*.conf\nnet-test/mnt/bitcoin-*\nnet-test/mnt/chainstate-*\nnet-test/mnt/*.log\nnet-test/mnt/archive/*\n*.log\n\n# Code Coverage files\n*.profraw\n*.profdata\nlcov.info\n\n# patch\n*.orig\n*.rej\n\n# codecov\ncoverage.lcov\n\n.idea\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0,
          "content": ""
        },
        {
          "name": ".vscode",
          "type": "tree",
          "content": null
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 46.1279296875,
          "content": "# Changelog\n\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\nand this project adheres to the versioning scheme outlined in the [README.md](README.md).\n\n## [Unreleased]\n\n### Added\n\n### Changed\n\n## [3.1.0.0.2]\n\n### Added\n\n- **SIP-029 consensus rules, activating in epoch 3.1 at block 875,000** (see [SIP-029](https://github.com/stacksgov/sips/blob/main/sips/sip-029/sip-029-halving-alignment.md) for details)\n- New RPC endpoints\n  - `/v2/clarity/marf/:marf_key_hash`\n  - `/v2/clarity/metadata/:principal/:contract_name/:clarity_metadata_key`\n- When a proposed block is validated by a node, the block can be validated even when the block version is different than the node's default ([#5539](https://github.com/stacks-network/stacks-core/pull/5539))\n- A miner will now generate a tenure-extend when at least 70% of the signers have confirmed that they are willing to allow one, via the new timestamp included in block responses. This allows the miner to refresh its budget in between Bitcoin blocks. ([#5476](https://github.com/stacks-network/stacks-core/discussions/5476))\n- Set the epoch to 3.1 in the Clarity DB upon activation.\n\n### Changed\n\n## [3.0.0.0.4]\n\n### Added\n\n### Changed\n\n- Use the same burn view loader in both block validation and block processing\n\n## [3.0.0.0.3]\n\n### Added\n\n### Changed\n- Add index for StacksBlockId to nakamoto block headers table (improves node performance)\n- Remove the panic for reporting DB deadlocks (just error and continue waiting)\n- Add index to `metadata_table` in Clarity DB on `blockhash`\n- Add `block_commit_delay_ms` to the config file to control the time to wait after seeing a new burn block, before submitting a block commit, to allow time for the first Nakamoto block of the new tenure to be mined, allowing this miner to avoid the need to RBF the block commit.\n- Add `tenure_cost_limit_per_block_percentage` to the miner config file to control the percentage remaining tenure cost limit to consume per nakamoto block.\n- Add `/v3/blocks/height/:block_height` rpc endpoint\n- If the winning miner of a sortition is committed to the wrong parent tenure, the previous miner can immediately tenure extend and continue mining since the winning miner would never be able to propose a valid block. (#5361)\n\n## [3.0.0.0.2]\n\n### Added\n\n### Changed\n- Fixes  a few bugs in the relayer and networking stack\n  - detects and deprioritizes unhealthy replicas\n  - fixes an issue in the p2p stack which was preventing it from caching the reward set.\n\n## [3.0.0.0.1]\n\n### Changed\n- Add index for StacksBlockId to nakamoto block headers table (improves node performance)\n- Remove the panic for reporting DB deadlocks (just error and continue waiting)\n- Various test fixes for CI (5353, 5368, 5372, 5371, 5380, 5378, 5387, 5396, 5390, 5394)\n- Various log fixes:\n    - don't say proceeding to mine blocks if not a miner\n    - misc. warns downgraded to debugs\n- 5391: Update default block proposal timeout to 10 minutes\n- 5406: After block rejection, miner pauses\n- Docs fixes\n    - Fix signer docs link\n    - Specify burn block in clarity docs\n\n## [3.0.0.0.0]\n\n### Added\n\n- **Nakamoto consensus rules, activating in epoch 3.0 at block 867,867** (see [SIP-021](https://github.com/stacksgov/sips/blob/main/sips/sip-021/sip-021-nakamoto.md) for details)\n- Clarity 3, activating with epoch 3.0\n  - Keywords / variable\n    - `tenure-height` added\n    - `stacks-block-height` added\n    - `block-height` removed\n  - Functions\n    - `get-stacks-block-info?` added\n    - `get-tenure-info?` added\n    - `get-block-info?` removed\n- New RPC endpoints\n  - `/v3/blocks/:block_id`\n  - `/v3/blocks/upload/`\n  - `/v3/signer/:signer_pubkey/:cycle_num`\n  - `/v3/sortitions`\n  - `/v3/stacker_set/:cycle_num`\n  - `/v3/tenures/:block_id`\n  - `/v3/tenures/fork_info/:start/:stop`\n  - `/v3/tenures/info`\n  - `/v3/tenures/tip/:consensus_hash`\n- Re-send events to event observers across restarts\n- Support custom chain-ids for testing\n- Add `replay-block` command to CLI\n\n### Changed\n\n- Strict config file validation (unknown fields will cause the node to fail to start)\n- Add optional `timeout_ms` to `events_observer` configuration\n- Modified RPC endpoints\n  - Include `tenure_height` in `/v2/info` endpoint\n  - Include `block_time` and `tenure_height` in `/new/block` event payload\n- Various improvements to logging, reducing log spam and improving log messages\n- Various improvements and bugfixes\n\n## [2.5.0.0.7]\n\n### Added\n\n- Add warn logs for block validate rejections (#5079)\n- Neon mock miner replay (#5060)\n\n### Changed\n\n- Revert BurnchainHeaderHash serialization change (#5094)\n- boot_to_epoch_3 in SignerTest should wait for a new commit (#5087)\n- Fix block proposal rejection test (#5084)\n- Mock signing revamp (#5070)\n- Multi miner fixes jude (#5040)\n- Remove spurious deadlock condition whenever the sortition DB is opened\n\n## [2.5.0.0.6]\n\n### Changed\n\n- If there is a getchunk/putchunk that fails due to a stale (or future) version NACK, the StackerDB sync state machine should immediately retry sync (#5066)\n\n## [2.5.0.0.5]\n\n### Added\n\n- Added configuration option `connections.antientropy_retry` (#4932)\n\n### Changed\n\n- Set default antientropy_retry to run once per hour (#4935)\n\n## [2.5.0.0.4]\n\n### Added\n\n- Adds the solo stacking scenarios to the stateful property-based testing strategy for PoX-4 (#4725)\n- Add signer-key to synthetic stack-aggregation-increase event (#4728)\n- Implement the assumed total commit with carry-over (ATC-C) strategy for denying opportunistic Bitcoin miners from mining Stacks at a discount (#4733)\n- Adding support for stacks-block-height and tenure-height in Clarity 3 (#4745)\n- Preserve PeerNetwork struct when transitioning to 3.0 (#4767)\n- Implement singer monitor server error (#4773)\n- Pull current stacks signer out into v1 implementation and create placeholder v0 mod (#4778)\n- Create new block signature message type for v0 signer (#4787)\n- Isolate the rusqlite dependency in stacks-common and clarity behind a cargo feature (#4791)\n- Add next_initiative_delay config option to control how frequently the miner checks if a new burnchain block has been processed (#4795)\n- Various performance improvements and cleanup\n\n### Changed\n\n- Downgraded log messages about transactions from warning to info (#4697)\n- Fix race condition between the signer binary and the /v2/pox endpoint (#4738)\n- Make node config mock_miner item hot-swappable (#4743)\n- Mandates that a burnchain block header be resolved by a BurnchainHeaderReader, which will resolve a block height to at most one burnchain header (#4748)\n- Optional config option to resolve DNS of bootstrap nodes (#4749)\n- Limit inventory syncs with new peers (#4750)\n- Update /v2/fees/transfer to report the median transaction fee estimate for a STX-transfer of 180 bytes (#4754)\n- Reduce connection spamming in stackerdb (#4759)\n- Remove deprecated signer cli commands (#4772)\n- Extra pair of signer slots got introduced at the epoch 2.5 boundary (#4845, #4868, #4891)\n- Never consider Stacks chain tips that are not on the canonical burn chain #4886 (#4893)\n\n### Fixed\n\n- Allow Nakamoto blocks to access the burn block associated with the current tenure (#4333)\n\n## [2.5.0.0.3]\n\nThis release fixes a regression in `2.5.0.0.0` from `2.4.0.1.0` caused by git merge\n\n## [2.5.0.0.2]\n\nThis release fixes two bugs in `2.5.0.0.0`, correctly setting the activation height for 2.5, and the network peer version.\n\n## [2.5.0.0.0]\n\nThis release implements the 2.5 Stacks consensus rules which activates at Bitcoin block `840,360`: primarily the instantiation\nof the pox-4 contract. For more details see SIP-021.\n\nThis is the first consensus-critical release for Nakamoto. Nodes which do not update before the 2.5 activation height will be forked away from the rest of the network. This release is compatible with 2.4.x chain state directories and does not require resyncing from genesis. The first time a node boots with this version it will perform some database migrations which could lengthen the normal node startup time.\n\n**This is a required release before Nakamoto rules are enabled in 3.0.**\n\n### Timing of Release from 2.5 to 3.0\n\nActivating Nakamoto will include two epochs:\n\n- **Epoch 2.5:** Pox-4 contract is booted up but no Nakamoto consensus rules take effect.\n- **Epoch 3:** Nakamoto consensus rules take effect.\n\n### Added\n\n- New RPC endpoint `/v2/stacker_set/{cycle_number}` to fetch stacker sets in PoX-4\n- New `/new_pox_anchor` endpoint for broadcasting PoX anchor block processing.\n- Stacker bitvec in NakamotoBlock\n- New [`pox-4` contract](./stackslib/src/chainstate/stacks/boot/pox-4.clar) that reflects changes in how Stackers are signers in Nakamoto:\n  - `stack-stx`, `stack-extend`, `stack-increase` and `stack-aggregation-commit` now include a `signer-key` parameter, which represents the public key used by the Signer. This key is used for determining the signer set in Nakamoto.\n  - Functions that include a `signer-key` parameter also include a `signer-sig` parameter to demonstrate that the owner of `signer-key` is approving that particular Stacking operation. For more details, refer to the `verify-signer-key-sig` method in the `pox-4` contract.\n  - Signer key authorizations can be added via `set-signer-key-authorization` to omit the need for `signer-key` signatures\n  - A `max-amount` field is a field in signer key authorizations and defines the maximum amount of STX that can be locked in a single transaction.\n- Added configuration parameters to customize the burn block at which to start processing Stacks blocks, when running on testnet or regtest.\n  ```\n  [burnchain]\n  first_burn_block_height = 2582526\n  first_burn_block_timestamp = 1710780828\n  first_burn_block_hash = \"000000000000001a17c68d43cb577d62074b63a09805e4a07e829ee717507f66\"\n  ```\n\n### Modified\n\n- `pox-4.aggregation-commit` contains a signing-key parameter (like\n  `stack-stx` and `stack-extend`), the signing-key parameter is removed from\n  `delegate-*` functions.\n\n## [2.4.0.1.0]\n\n### Added\n\n- When the Clarity library is built with feature flag `developer-mode`, comments\n  from the source code are now attached to the `SymbolicExpression` nodes. This\n  will be useful for tools that use the Clarity library to analyze and\n  manipulate Clarity source code, e.g. a formatter.\n- New RPC endpoint at /v2/constant_val to fetch a constant from a contract.\n- A new subsystem, called StackerDB, has been added, which allows a set of\n  Stacks nodes to store off-chain data on behalf of a specially-crafter smart\n  contract. This is an opt-in feature; Stacks nodes explicitly subscribe to\n  StackerDB replicas in their config files.\n- Message definitions and codecs for Stacker DB, a replicated off-chain DB\n  hosted by subscribed Stacks nodes and controlled by smart contracts\n- Added 3 new public and regionally diverse bootstrap nodes: est.stacksnodes.org, cet.stacksnodes.org, sgt.stacksnodes.org\n- satoshis_per_byte can be changed in the config file and miners will always use\n  the most up to date value\n- New RPC endpoint at /v2/block_proposal for miner to validate proposed block.\n  Only accessible on local loopback interface\n\nIn addition, this introduces a set of improvements to the Stacks miner behavior. In\nparticular:\n\n- The VRF public key can be re-used across node restarts.\n- Settings that affect mining are hot-reloaded from the config file. They take\n  effect once the file is updated; there is no longer a need to restart the\n  node.\n- The act of changing the miner settings in the config file automatically\n  triggers a subsequent block-build attempt, allowing the operator to force the\n  miner to re-try building blocks.\n- This adds a new tip-selection algorithm that minimizes block orphans within a\n  configurable window of time.\n- When configured, the node will automatically stop mining if it is not achieving a\n  targeted win rate over a configurable window of blocks.\n- When configured, the node will selectively mine transactions from only certain\n  addresses, or only of certain types (STX-transfers, contract-publishes,\n  contract-calls).\n- When configured, the node will optionally only RBF block-commits if it can\n  produce a block with strictly more transactions.\n\n### Changed\n\n- `developer-mode` is no longer enabled in the default feature set. This is the correct default behavior, since the stacks-node should NOT build with developer-mode enabled by default. Tools that need to use developer-mode should enable it explicitly.\n\n### Fixed\n\n- The transaction receipts for smart contract publish transactions now indicate\n  a result of `(err none)` if the top-level code of the smart contract contained\n  runtime error and include details about the error in the `vm_error` field of\n  the receipt. Fixes issues #3154, #3328.\n- Added config setting `burnchain.wallet_name` which addresses blank wallets no\n  longer being created by default in recent bitcoin versions. Fixes issue #3596\n- Use the current burnchain tip to lookup UTXOs (Issue #3733)\n- The node now gracefully shuts down even if it is in the middle of a handshake with\n  bitcoind. Fixes issue #3734.\n\n## [2.4.0.0.4]\n\nThis is a high-priority hotfix that addresses a bug in transaction processing which\ncould impact miner availability.\n\n## [2.4.0.0.3]\n\nThis is a high-priority hotfix that addresses a bug in transaction processing which\ncould impact miner availability.\n\n## [2.4.0.0.2]\n\nThis is a hotfix that changes the logging failure behavior from panicking to dropping\nthe log message (PR #3784).\n\n## [2.4.0.0.4]\n\nThis is a high-priority hotfix that addresses a bug in transaction processing which\ncould impact miner availability.\n\n## [2.4.0.0.3]\n\nThis is a high-priority hotfix that addresses a bug in transaction processing which\ncould impact miner availability.\n\n## [2.4.0.0.2]\n\nThis is a hotfix that changes the logging failure behavior from panicking to dropping\nthe log message (PR #3784).\n\n## [2.4.0.0.1]\n\nThis is a minor change to add `txid` fields into the log messages from failing\ncontract deploys. This will help tools (and users) more easily find the log\nmessages to determine what went wrong.\n\n## [2.4.0.0.0]\n\nThis is a **consensus-breaking** release to revert consensus to PoX, and is the second fork proposed in SIP-022.\n\n- [SIP-022](https://github.com/stacksgov/sips/blob/main/sips/sip-022/sip-022-emergency-pox-fix.md)\n- [SIP-024](https://github.com/stacksgov/sips/blob/main/sips/sip-024/sip-024-least-supertype-fix.md)\n\n### Fixed\n\n- PoX is re-enabled and stacking resumes starting at Bitcoin block `791551`\n- Peer network id is updated to `0x18000009`\n- Adds the type sanitization described in SIP-024\n\nThis release is compatible with chainstate directories from 2.1.0.0.x and 2.3.0.0.x\n\n## [2.3.0.0.2]\n\nThis is a high-priority hotfix release to address a bug in the\nstacks-node miner logic which could impact miner availability.\n\nThis release is compatible with chainstate directories from 2.3.0.0.x and 2.1.0.0.x\n\n## [2.3.0.0.1]\n\nThis is a hotfix release to update:\n\n- peer version identifier used by the stacks-node p2p network.\n- yield interpreter errors in deser_hex\n\nThis release is compatible with chainstate directories from 2.3.0.0.x and 2.1.0.0.x\n\n## [2.3.0.0.0]\n\nThis is a **consensus-breaking** release to address a Clarity VM bug discovered in 2.2.0.0.1.\nTx and read-only calls to functions with traits as parameters are rejected with unchecked TypeValueError.\nAdditional context and rationale can be found in [SIP-023](https://github.com/stacksgov/sips/blob/main/sips/sip-023/sip-023-emergency-fix-traits.md).\n\nThis release is compatible with chainstate directories from 2.1.0.0.x.\n\n## [2.2.0.0.1]\n\nThis is a **consensus-breaking** release to address a bug and DoS vector in pox-2's `stack-increase` function.\nAdditional context and rationale can be found in [SIP-022](https://github.com/stacksgov/sips/blob/main/sips/sip-022/sip-022-emergency-pox-fix.md).\n\nThis release is compatible with chainstate directories from 2.1.0.0.x.\n\n## [2.1.0.0.3]\n\nThis is a high-priority hotfix release to address a bug in the\nstacks-node miner logic which could impact miner availability. This\nrelease's chainstate directory is compatible with chainstate\ndirectories from 2.1.0.0.2.\n\n## [2.1.0.0.2]\n\nThis software update is a hotfix to resolve improper unlock handling\nin mempool admission. This release's chainstate directory is\ncompatible with chainstate directories from 2.1.0.0.1.\n\n### Fixed\n\n- Fix mempool admission logic's improper handling of PoX unlocks. This would\n  cause users to get spurious `NotEnoughFunds` rejections when trying to submit\n  their transactions (#3623)\n\n## [2.1.0.0.1]\n\n### Fixed\n\n- Handle the case where a bitcoin node returns zero headers (#3588)\n- The default value for `always_use_affirmation_maps` is now set to `false`,\n  instead of `true`. This was preventing testnet nodes from reaching the chain\n  tip with the default configuration.\n- Reduce default poll time of the `chain-liveness` thread which reduces the\n  possibility that a miner thread will get interrupted (#3610).\n\n## [2.1]\n\nThis is a **consensus-breaking** release that introduces a _lot_ of new\nfunctionality. Details on the how and why can be found in [SIP-015](https://github.com/stacksgov/sips/blob/feat/sip-015/sips/sip-015/sip-015-network-upgrade.md),\n[SIP-018](https://github.com/MarvinJanssen/sips/blob/feat/signed-structured-data/sips/sip-018/sip-018-signed-structured-data.md),\nand [SIP-20](https://github.com/obycode/sips/blob/bitwise-ops/sips/sip-020/sip-020-bitwise-ops.md).\n\nThe changelog for this release is a high-level summary of these SIPs.\n\n### Added\n\n- There is a new `.pox-2` contract for implementing proof-of-transfer. This PoX\n  contract enables re-stacking while the user's STX are locked, and incrementing\n  the amount stacked on top of a locked batch of STX.\n- The Clarity function `stx-account` has been added, which returns the account's\n  locked and unlocked balances.\n- The Clarity functions `principal-destruct` and `principal-construct?`\n  functions have been added, which provide the means to convert between a\n  `principal` instance and the `buff`s and `string-ascii`s that constitute it.\n- The Clarity function `get-burn-block-info?` has been added to support\n  fetching the burnchain header hash of _any_ burnchain block starting from the\n  sortition height of the Stacks genesis block, and to support fetching the PoX\n  addresses and rewards paid by miners for a particular burnchain block height.\n- The Clarity function `slice` has been added for obtaining a sub-sequence of a\n  `buff`, `string-ascii`, `string-utf8`, or `list`.\n- Clarity functions for converting between `string-ascii`, `string-utf8`,\n  `uint`, and `int` have been added.\n- Clarity functions for converting between big- and little-endian\n  `buff` representations of `int` and `uint` have been added.\n- The Clarity function `stx-transfer-memo?` has been added, which behaves the\n  same as `stx-transfer?` but also takes a memo argument.\n- The Clarity function `is-standard` has been added to identify whether or not a\n  `principal` instance is a standard or contract principal.\n- Clarity functions have been added for converting an arbitrary Clarity type to\n  and from its canonical byte string representation.\n- The Clarity function `replace-at?` has been added for replacing a single item\n  in a `list`, `string-ascii`, `string-utf8`, or `buff`.\n- The Clarity global variable `tx-sponsor?` has been added, which evaluates to\n  the sponsor of the transaction if the transaction is sponsored.\n- The Clarity global variable `chain-id` has been added, which evaluates to the\n  4-byte chain ID of this Stacks network.\n- The Clarity parser has been rewritten to be about 3x faster than the parser in\n  Stacks 2.05.x.x.x.\n- Clarity trait semantics have been refined and made more explicit, so as to\n  avoid certain corner cases where a trait reference might be downgraded to a\n  `principal` in Clarity 1.\n  - Trait values can be passed to compatible sub-trait types\n  - Traits can be embedded in compound types, e.g. `(optional <my-trait>)`\n  - Traits can be assigned to a let-variable\n- Fixes to unexpected behavior in traits\n  - A trait with duplicate function names is now an error\n  - Aliased trait names do not interfere with local trait definitions\n- The comparison functions `<`, `<=`, `>`, and `>=` now work on `string-ascii`,\n  `string-utf8`, and `buff` based on byte-by-byte comparison (note that this is\n  _not_ lexicographic comparison).\n- It is now possible to call `delegate-stx` from a burnchain transaction, just\n  as it is for `stack-stx` and `transfer-stx`.\n\n### Changed\n\n- The `delegate-stx` function in `.pox-2` can be called while the user's STX are\n  locked.\n- If a batch of STX is not enough to clinch even a single reward slot, then the\n  STX are automatically unlocked at the start of the reward cycle in which they\n  are rendered useless in this capacity.\n- The PoX sunset has been removed. PoX rewards will continue in perpetuity.\n- Support for segwit and taproot addresses (v0 and v1 witness programs) has been\n  added for Stacking.\n- The Clarity function `get-block-info?` now supports querying a block's total\n  burnchain spend by miners who tried to mine it, the spend by the winner, and\n  the total block reward (coinbase plus transaction fees).\n- A block's coinbase transaction may specify an alternative recipient principal,\n  which can be either a standard or contract principal.\n- A smart contract transaction can specify which version of Clarity to use. If\n  no version is given, then the epoch-default version will be used (in Stacks\n  2.1, this is Clarity 2).\n- The Stacks node now includes the number of PoX anchor blocks in its\n  fork-choice rules. The best Stacks fork is the fork that (1) is on the best\n  Bitcoin fork, (2) has the most PoX anchor blocks known, and (3) is the longest.\n- On-burnchain operations -- `stack-stx`, `delegate-stx`, and `transfer-stx` --\n  can take effect within six (6) burnchain blocks in which they are mined,\n  instead of one.\n- Transaction fees are debited from accounts _before_ the transaction is\n  processed.\n- All smart contract analysis errors are now treated as runtime errors, meaning\n  that smart contract transactions which don't pass analysis will still be mined\n  (so miners get paid for partially validating them).\n- The default Clarity version is now 2. Users can opt for version 1 by using\n  the new smart contract transaction wire format and explicitly setting version\n\n### Fixed\n\n- The authorization of a `contract-caller` in `.pox-2` for stacking will now\n  expire at the user-specified height, if given.\n- The Clarity function `principal-of?` now works on mainnet.\n- One or more late block-commits no longer result in the miner losing its\n  sortition weight.\n- Documentation will indicate explicitly which Clarity version introduced each\n  keyword or function.\n\n## [2.05.0.6.0]\n\n### Changed\n\n- The `/v2/neighbors` endpoint now reports a node's bootstrap peers, so other\n  nodes can find high-quality nodes to boot from (#3401)\n- If there are two or more Stacks chain tips that are tied for the canonical\n  tip, the node deterministically chooses one _independent_ of the arrival order\n  (#3419).\n- If Stacks blocks for a different fork arrive out-of-order and, in doing so,\n  constitute a better fork than the fork the node considers canonical, the node\n  will update the canonical Stacks tip pointer in the sortition DB before\n  processing the next sortition (#3419).\n\n### Fixed\n\n- The node keychain no longer maintains any internal state, but instead derives\n  keys based on the chain tip the miner is building off of. This prevents the\n  node from accidentally producing an invalid block that reuses a microblock\n  public key hash (#3387).\n- If a node mines an invalid block for some reason, it will no longer stall\n  forever. Instead, it will detect that its last-mined block is not the chain\n  tip, and resume mining (#3406).\n\n## [2.05.0.5.0]\n\n### Changed\n\n- The new minimum Rust version is 1.61\n- The act of walking the mempool will now cache address nonces in RAM and to a\n  temporary mempool table used for the purpose, instead of unconditionally\n  querying them from the chainstate MARF. This builds upon improvements to mempool\n  goodput over 2.05.0.4.0 (#3337).\n- The node and miner implementation has been refactored to remove write-lock\n  contention that can arise when the node's chains-coordinator thread attempts to store and\n  process newly-discovered (or newly-mined) blocks, and when the node's relayer\n  thread attempts to mine a new block. In addition, the miner logic has been\n  moved to a separate thread in order to avoid starving the relayer thread (which\n  must handle block and transaction propagation, as well as block-processing).\n  The refactored miner thread will be preemptively terminated and restarted\n  by the arrival of new Stacks blocks or burnchain blocks, which further\n  prevents the miner from holding open write-locks in the underlying\n  chainstate databases when there is new chain data to discover (which would\n  invalidate the miner's work anyway). (#3335).\n\n### Fixed\n\n- Fixed `pow` documentation in Clarity (#3338).\n- Backported unit tests that were omitted in the 2.05.0.3.0 release (#3348).\n\n## [2.05.0.4.0]\n\n### Fixed\n\n- Denormalize the mempool database so as to remove a `LEFT JOIN` from the SQL\n  query for choosing transactions in order by estimated fee rate. This\n  drastically speeds up mempool transaction iteration in the miner (#3314)\n\n## [2.05.0.3.0]\n\n### Added\n\n- Added prometheus output for \"transactions in last block\" (#3138).\n- Added environment variable STACKS_LOG_FORMAT_TIME to set the time format\n  stacks-node uses for logging. (#3219)\n  Example: STACKS_LOG_FORMAT_TIME=\"%Y-%m-%d %H:%M:%S\" cargo stacks-node\n- Added mock-miner sample config (#3225)\n\n### Changed\n\n- Updates to the logging of transaction events (#3139).\n- Moved puppet-chain to `./contrib/tools` directory and disabled compiling by default (#3200)\n\n### Fixed\n\n- Make it so that a new peer private key in the config file will propagate to\n  the peer database (#3165).\n- Fixed default miner behavior regarding block assembly\n  attempts. Previously, the miner would only attempt to assemble a\n  larger block after their first attempt (by Bitcoin RBF) if new\n  microblock or block data arrived. This changes the miner to always\n  attempt a second block assembly (#3184).\n- Fixed a bug in the node whereby the node would encounter a deadlock when\n  processing attachment requests before the P2P thread had started (#3236).\n- Fixed a bug in the P2P state machine whereby it would not absorb all transient errors\n  from sockets, but instead propagate them to the outer caller. This would lead\n  to a node crash in nodes connected to event observers, which expect the P2P\n  state machine to only report fatal errors (#3228)\n- Spawn the p2p thread before processing number of sortitions. Fixes issue (#3216) where sync from genesis paused (#3236)\n- Drop well-formed \"problematic\" transactions that result in miner performance degradation (#3212)\n- Ignore blocks that include problematic transactions\n\n## [2.05.0.2.1]\n\n### Fixed\n\n- Fixed a security bug in the SPV client whereby the chain work was not being\n  considered at all when determining the canonical Bitcoin fork. The SPV client\n  now only accepts a new Bitcoin fork if it has a higher chain work than any other\n  previously-seen chain (#3152).\n\n## [2.05.0.2.0]\n\n### IMPORTANT! READ THIS FIRST\n\nPlease read the following **WARNINGs** in their entirety before upgrading.\n\nWARNING: Please be aware that using this node on chainstate prior to this release will cause\nthe node to spend **up to 30 minutes** migrating the data to a new schema.\nDepending on the storage medium, this may take even longer.\n\nWARNING: This migration process cannot be interrupted. If it is, the chainstate\nwill be **irrecovarably corrupted and require a sync from genesis.**\n\nWARNING: You will need **at least 2x the disk space** for the migration to work.\nThis is because a copy of the chainstate will be made in the same directory in\norder to apply the new schema.\n\nIt is highly recommended that you **back up your chainstate** before running\nthis version of the software on it.\n\n### Changed\n\n- The MARF implementation will now defer calculating the root hash of a new trie\n  until the moment the trie is committed to disk. This avoids gratuitous hash\n  calculations, and yields a performance improvement of anywhere between 10x and\n  200x (#3041).\n- The MARF implementation will now store tries to an external file for instances\n  where the tries are expected to exceed the SQLite page size (namely, the\n  Clarity database). This improves read performance by a factor of 10x to 14x\n  (#3059).\n- The MARF implementation may now cache trie nodes in RAM if directed to do so\n  by an environment variable (#3042).\n- Sortition processing performance has been improved by about an order of\n  magnitude, by avoiding a slew of expensive database reads (#3045).\n- Updated chains coordinator so that before a Stacks block or a burn block is processed,\n  an event is sent through the event dispatcher. This fixes #3015.\n- Expose a node's public key and public key hash160 (i.e. what appears in\n  /v2/neighbors) via the /v2/info API endpoint (#3046)\n- Reduced the default subsequent block attempt timeout from 180 seconds to 30\n  seconds, based on benchmarking the new MARF performance data during a period\n  of network congestion (#3098)\n- The `blockstack-core` binary has been renamed to `stacks-inspect`.\n  This binary provides CLI tools for chain and mempool inspection.\n\n### Fixed\n\n- The AtlasDB previously could lose `AttachmentInstance` data during shutdown\n  or crashes (#3082). This release resolves that.\n\n## [2.05.0.1.0]\n\n### Added\n\n- A new fee estimator intended to produce fewer over-estimates, by having less\n  sensitivity to outliers. Its characteristic features are: 1) use a window to\n  forget past estimates instead of exponential averaging, 2) use weighted\n  percentiles, so that bigger transactions influence the estimates more, 3)\n  assess empty space in blocks as having paid the \"minimum fee\", so that empty\n  space is accounted for, 4) use random \"fuzz\" so that in busy times the fees can\n  change dynamically. (#2972)\n- Implements anti-entropy protocol for querying transactions from other\n  nodes' mempools. Before, nodes wouldn't sync mempool contents with one another.\n  (#2884)\n- Structured logging in the mining code paths. This will shine light\n  on what happens to transactions (successfully added, skipped or errored) that the\n  miner considers while buildings blocks. (#2975)\n- Added the mined microblock event, which includes information on transaction\n  events that occurred in the course of mining (will provide insight\n  on whether a transaction was successfully added to the block,\n  skipped, or had a processing error). (#2975)\n- For v2 endpoints, can now specify the `tip` parameter to `latest`. If\n  `tip=latest`, the node will try to run the query off of the latest tip. (#2778)\n- Adds the /v2/headers endpoint, which returns a sequence of SIP-003-encoded\n  block headers and consensus hashes (see the ExtendedStacksHeader struct that\n  this PR adds to represent this data). (#2862)\n- Adds the /v2/data_var endpoint, which returns a contract's data variable\n  value and a MARF proof of its existence. (#2862)\n- Fixed a bug in the unconfirmed state processing logic that could lead to a\n  denial of service (node crash) for nodes that mine microblocks (#2970)\n- Added prometheus metric that tracks block fullness by logging the percentage of each\n  cost dimension that is consumed in a given block (#3025).\n\n### Changed\n\n- Updated the mined block event. It now includes information on transaction\n  events that occurred in the course of mining (will provide insight\n  on whether a transaction was successfully added to the block,\n  skipped, or had a processing error). (#2975)\n- Updated some of the logic in the block assembly for the miner and the follower\n  to consolidate similar logic. Added functions `setup_block` and `finish_block`.\n  (#2946)\n- Makes the p2p state machine more reactive to newly-arrived\n  `BlocksAvailable` and `MicroblocksAvailable` messages for block and microblock\n  streams that this node does not have. If such messages arrive during an inventory\n  sync, the p2p state machine will immediately transition from the inventory sync\n  work state to the block downloader work state, and immediately proceed to fetch\n  the available block or microblock stream. (#2862)\n- Nodes will push recently-obtained blocks and microblock streams to outbound\n  neighbors if their cached inventories indicate that they do not yet have them\n  (#2986).\n- Nodes will no longer perform full inventory scans on their peers, except\n  during boot-up, in a bid to minimize block-download stalls (#2986).\n- Nodes will process sortitions in parallel to downloading the Stacks blocks for\n  a reward cycle, instead of doing these tasks sequentially (#2986).\n- The node's runloop will coalesce and expire stale requests to mine blocks on\n  top of parent blocks that are no longer the chain tip (#2969).\n- Several database indexes have been updated to avoid table scans, which\n  significantly improves most RPC endpoint speed and cuts node spin-up time in\n  half (#2989, #3005).\n- Fixed a rare denial-of-service bug whereby a node that processes a very deep\n  burnchain reorg can get stuck, and be rendered unable to process further\n  sortitions. This has never happened in production, but it can be replicated in\n  tests (#2989).\n- Updated what indices are created, and ensures that indices are created even\n  after the database is initialized (#3029).\n\n### Fixed\n\n- Updates the lookup key for contracts in the pessimistic cost estimator. Before, contracts\n  published by different principals with the same name would have had the same\n  key in the cost estimator. (#2984)\n- Fixed a few prometheus metrics to be more accurate compared to `/v2` endpoints\n  when polling data (#2987)\n- Fixed an error message from the type-checker that shows up when the type of a\n  parameter refers to a trait defined in the same contract (#3064).\n\n## [2.05.0.0.0]\n\nThis software update is a consensus changing release and the\nimplementation of the proposed cost changes in SIP-012. This release's\nchainstate directory is compatible with chainstate directories from\n2.0.11.4.0. However, this release is only compatible with chainstate\ndirectories before the 2.05 consensus changes activate (Bitcoin height\n713,000). If you run a 2.00 stacks-node beyond this point, and wish to\nrun a 2.05 node afterwards, you must start from a new chainstate\ndirectory.\n\n### Added\n\n- At height 713,000 a new `costs-2` contract will be launched by the\n  Stacks boot address.\n\n### Changed\n\n- Stacks blocks whose parents are mined >= 713,000 will use default costs\n  from the new `costs-2` contract.\n- Stacks blocks whose parents are mined >= 713,000 will use the real\n  serialized length of Clarity values as the cost inputs to several methods\n  that previously used the maximum possible size for the associated types.\n- Stacks blocks whose parents are mined >= 713,000 will use the new block\n  limit defined in SIP-012.\n\n### Fixed\n\n- Miners are now more aggressive in calculating their block limits\n  when confirming microblocks (#2916)\n\n## [2.0.11.4.0]\n\nThis software update is a point-release to change the transaction\nselection logic in the default miner to prioritize by an estimated fee\nrate instead of raw fee. This release's chainstate directory is\ncompatible with chainstate directories from 2.0.11.3.0.\n\n### Added\n\n- FeeEstimator and CostEstimator interfaces. These can be controlled\n  via node configuration options. See the `README.md` for more\n  information on the configuration.\n- New fee rate estimation endpoint `/v2/fees/transaction` (#2872). See\n  `docs/rpc/openapi.yaml` for more information.\n\n### Changed\n\n- Prioritize transaction inclusion in blocks by estimated fee rates (#2859).\n- MARF sqlite connections will now use `mmap`'ed connections with up to 256MB\n  space (#2869).\n\n## [2.0.11.3.0]\n\nThis software update is a point-release to change the transaction selection\nlogic in the default miner to prioritize by fee instead of nonce sequence. This\nrelease's chainstate directory is compatible with chainstate directories from\n2.0.11.2.0.\n\n## Added\n\n- The node will enforce a soft deadline for mining a block, so that a node\n  operator can control how frequently their node attempts to mine a block\n  regardless of how congested the mempool is. The timeout parameters are\n  controlled in the `[miner]` section of the node's config file (#2823).\n\n## Changed\n\n- Prioritize transaction inclusion in the mempool by transaction fee (#2823).\n\n## [2.0.11.2.0]\n\nNOTE: This change resets the `testnet`. Users running a testnet node will need\nto reset their chain states.\n\n### Added\n\n- `clarity-cli` will now also print a serialized version of the resulting\n  output from `eval` and `execute` commands. This serialization is in\n  hexademical string format and supports integration with other tools. (#2684)\n- The creation of a Bitcoin wallet with BTC version `> 0.19` is now supported\n  on a private testnet. (#2647)\n- `lcov`-compatible coverage reporting has been added to `clarity-cli` for\n  Clarity contract testing. (#2592)\n- The `README.md` file has new documentation about the release process. (#2726)\n\n### Changed\n\n- This change resets the testnet. (#2742)\n- Caching has been added to speed up `/v2/info` responses. (#2746)\n\n### Fixed\n\n- PoX syncing will only look back to the reward cycle prior to divergence,\n  instead of looking back over all history. This will speed up running a\n  follower node. (#2746)\n- The UTXO staleness check is re-ordered so that it occurs before the RBF-limit\n  check. This way, if stale UTXOs reached the \"RBF limit\" a miner will recover\n  by resetting the UTXO cache. (#2694)\n- Microblock events were being sent to the event observer when microblock data\n  was received by a peer, but were not emitted if the node mined the\n  microblocks itself. This made something like the private-testnet setup\n  incapable of emitting microblock events. Microblock events are now sent\n  even when self-mined. (#2653)\n- A bug is fixed in the mocknet/helium miner that would lead to a panic if a\n  burn block occurred without a sortition in it. (#2711)\n- Two bugs that caused problems syncing with the bitcoin chain during a\n  bitcoin reorg have been fixed (#2771, #2780).\n- Documentation is fixed in cases where string and buffer types are allowed\n  but not covered in the documentation. (#2676)\n\n## [2.0.11.1.0]\n\nThis software update is our monthly release. It introduces fixes and features for both developers and miners.\nThis release's chainstate directory is compatible with chainstate directories from 2.0.11.0.0.\n\n## Added\n\n- `/new_microblock` endpoint to notify event observers when a valid microblock\n  has been received (#2571).\n- Added new features to `clarity-cli` (#2597)\n- Exposing new mining-related metrics in prometheus (#2664)\n  - Miner's computed relative miner score as a percentage\n  - Miner's computed commitment, the min of their previous commitment and their median commitment\n  - Miner's current median commitment\n- Add `key-for-seed` command to the `stacks-node` binary - outputs the associated secret key hex string\n  and WIF formatted secret key for a given \"seed\" value (#2658).\n\n## Changed\n\n- Improved mempool walk order (#2514).\n- Renamed database `tx_tracking.db` to `tx_tracking.sqlite` (#2666).\n\n## Fixed\n\n- Alter the miner to prioritize spending the most recent UTXO when building a transaction,\n  instead of the largest UTXO. In the event of a tie, it uses the smallest UTXO first (#2661).\n- Fix trait rpc lookups for implicitly implemented traits (#2602).\n- Fix `v2/pox` endpoint, broken on Mocknet (#2634).\n- Align cost limits on mocknet, testnet and mainnet (#2660).\n- Log peer addresses in the HTTP server (#2667)\n- Mine microblocks if there are no recent unprocessed Stacks blocks\n\n## [2.0.11.0.0]\n\nThe chainstate directory has been restructured in this release. It is not\ncompatible with prior chainstate directories.\n\n## Added\n\n- `/drop_mempool_tx` endpoint to notify event observers when a mempool\n  transaction has been removed the mempool.\n- `\"reward_slot_holders\"` field to the `new_burn_block` event\n- CTRL-C handler for safe shutdown of `stacks-node`\n- Log transactions in local db table via setting env `STACKS_TRANSACTION_LOG=1`\n- New prometheus metrics for mempool transaction processing times and\n  outstanding mempool transactions\n- New RPC endpoint with path `/v2/traits/contractAddr/contractName/traitContractName\n/traitContractAddr/traitName` to determine whether a given trait is implemented\n  within the specified contract (either explicitly or implicitly).\n- Re-activate the Atlas network for propagating and storing transaction\n  attachments. This re-enables off-chain BNS name storage.\n- Re-activate microblock mining.\n\n## Changed\n\n- Improved chainstate directory layout\n- Improved node boot up time\n- Better handling of flash blocks\n- The `/v2/pox` RPC endpoint was updated to include more useful\n  information about the current and next PoX cycles. For details, see\n  `docs/rpc-endpoints.md`\n\n## Fixed\n\n- Fixed faulty logic in the mempool that was still treating the transaction fee\n  as a fee rate, which prevented replace-by-fee from working as expected.\n\n## [2.0.10.0.1]\n\nThis is a low-priority hotfix release to address a bug in the deserialization logic. The\nchainstate directory of 2.0.10.0.1 is compatible with 2.0.10. This release also begins the\nusage of the versioning scheme outlined in the [README.md](README.md).\n\n## [2.0.10]\n\nThis is a low-priority hotfix release to address two bugs in the block downloader. The\nchainstate directory of 2.0.10 is compatible with 2.0.9. If booting up a node from genesis, or\nan existing node has stalled in downloading blocks, this hotfix is necessary for your\nnode.\n\n## Fixed\n\n- Bug in microblocks inventory vector calculation that included invalidated microblocks\n  as present bit. This bug will impact nodes booting up from genesis, but not affect nodes\n  currently running at the chain tip (#2518).\n- Bug in microblocks downloader logic that would cause the stacks-node to fail to wake-up\n  to process newly arrived microblocks in certain instances (#2491).\n\n## [2.0.9]\n\nThis is a hotfix release for improved handling of arriving Stacks blocks through\nboth the RPC interface and the P2P ineterface. The chainstate directory of\n2.0.9 is compatible with the 2.0.8 chainstate.\n\n## Fixed\n\n- TOCTTOU bug fixed in the chain processing logic that, which now ensures that\n  an arriving Stacks block is processed at most once.\n\n## [2.0.8] - 2021-03-02\n\nThis is a hotfix release for improved handling of static analysis storage and\nimproved `at-block` behavior. The chainstate directory of 2.0.8 is compatible with\nthe 2.0.7 chainstate.\n\n## Fixed\n\n- Improved static analysis storage\n- `at-block` behavior in `clarity-cli` and unit tests (no changes in `stacks-node`\n  behavior).\n\n## [2.0.7] - 2021-02-26\n\nThis is an emergency hotfix that prevents the node from accidentally deleting\nvalid block data if its descendant microblock stream is invalid for some reason.\n\n## Fixed\n\n- Do not delete a valid parent Stacks block.\n\n## [2.0.6] - 2021-02-15\n\nThe database schema has not changed since 2.0.5, so when spinning up a\n2.0.6 node from a 2.0.5 chainstate, you do not need to use a fresh\nworking directory. Earlier versions' chainstate directories are\nincompatible, however.\n\n### Fixed\n\n- Miner RBF logic has two \"fallback\" logic changes. First, if the RBF\n  logic has increased fees by more than 50%, do not submit a new\n  transaction. Second, fix the \"same chainstate hash\" fallback check.\n- Winning block txid lookups in the SortitionDB have been corrected\n  to use the txid during the lookup.\n- The miner will no longer attempt to mine a new Stacks block if it receives a\n  microblock in a discontinuous microblock stream.\n\n## [2.0.5] - 2021-02-12\n\nThe database schema has changed since 2.0.4, so when spinning up a 2.0.5\nnode from an earlier chainstate, you must use a fresh working directory.\n\n### Added\n\n- Miner heuristic for handling relatively large or computationally\n  expensive transactions: such transactions will be dropped from the\n  mempool to prevent miners from re-attempting them once they fail.\n  Miners can also now continue processing transactions that are\n  behind those transactions in the mempool \"queue\".\n\n### Fixed\n\n- Miner block assembly now uses the correct block limit available via\n  the node config\n- `tx_fees_streamed_produced` fees are included in miner coinbase\n  events for event observers\n- SQLite indexes are now correctly created on database instantion\n\n### Changed\n\n- STX unlock events are now sent over the events endpoint bundled\n  into an associated unlock transaction\n- Atlas attachments networking endpoints are disabled for this\n  release, while networking issues are addressed in the\n  implementation\n\n## [2.0.4] - 2021-02-07\n\n### Changed\n\n- Atlas attachments networking endpoints are disabled for this\n  release, while networking issues are addressed in the\n  implementation.\n\n## [2.0.3] - 2021-02-04\n\n### Added\n\n- `stacks-node --mine-at-height` commandline option, which tells the\n  `stacks-node` not to mine until it has synchronized to the given\n  Stacks block height\n- A new RPC endpoint `/v2/blocks/upload/{consensus_hash}` that accepts\n  an uploaded a Stacks block for a given sortition\n\n### Changed\n\n- Enabled WAL mode for the chainstate databases. This allows much more\n  concurrency in the `stacks-node`, and improves network performance\n  across the board. **NOTE:** _This changed the database schema, any\n  running node would need to re-initialize their nodes from a new chain\n  state when upgrading_.\n- Default value `wait_time_for_microblocks`: from 60s to 30s\n- The mempool now performs more transfer semantics checks before admitting\n  a transaction (e.g., reject if origin = recipient): see issue #2354\n- Improved the performance of the code that handles `GetBlocksInv` p2p\n  messages by an order of magnitude.\n- Improved the performance of the block-downloader's block and\n  microblock search code by a factor of 5x.\n\n### Fixed\n\n- Miner mempool querying now works across short-lived forks: see issue #2389\n- JSON deserialization for high-depth JSON objects\n- Atlas attachment serving: see PR #2390\n- Address issues #2379, #2356, #2347, #2346. The tracking of the\n  `LeaderBlockCommit` operations inflight is improved, drastically\n  reducing the number of block commit rejections. When\n  a`LeaderBlockCommit` is not included in the Bitcoin block it was\n  targeting, it is condemned to be rejected, per the Stacks\n  consensus. To avoid wasting BTC, the miner now tries to send its\n  next `LeaderBlockCommit` operations using the UTXOs of the previous\n  transaction with a replacement by fee. The fee increase increments\n  can be configured with the setting `rbf_fee_increment`.\n"
        },
        {
          "name": "CODEOWNERS",
          "type": "blob",
          "size": 0.814453125,
          "content": "# These owners will be the default owners for everything in\n# the repo. Unless a later match takes precedence,\n# @stacks-network/blockchain-team-codeowners will be requested for\n# review when someone opens a pull request.\n* @stacks-network/blockchain-team-codeowners\n\n# Generic file extensions that shouldn't require much scrutiny. Anyone with write access to the repo may approve a PR\n*.md @stacks-network/blockchain-team\n*.yml @stacks-network/blockchain-team\n*.yaml @stacks-network/blockchain-team\n*.txt @stacks-network/blockchain-team\n*.toml @stacks-network/blockchain-team\n\n# Signer code\nlibsigner/**/*.rs @stacks-network/blockchain-team-signer\nstacks-signer/**/*.rs @stacks-network/blockchain-team-signer\n\n# CI workflows\n/.github/workflows/ @stacks-network/blockchain-team-ci\n/.github/actions/ @stacks-network/blockchain-team-ci\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 5.15234375,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nWe as members, contributors, and leaders pledge to make participation in our community a harassment-free experience for everyone, regardless of age, body size, visible or invisible disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation.\n\nWe pledge to act and interact in ways that contribute to an open, welcoming, diverse, inclusive, and healthy community.\n\n## Our Standards\n\nExamples of behavior that contributes to a positive environment for our community include:\n\n* Demonstrating empathy and kindness toward other people\n* Being respectful of differing opinions, viewpoints, and experiences\n* Giving and gracefully accepting constructive feedback\n* Accepting responsibility and apologizing to those affected by our mistakes, and learning from the experience\n* Focusing on what is best not just for us as individuals, but for the overall community\n\nExamples of unacceptable behavior include:\n\n* The use of sexualized language or imagery, and sexual attention or\n  advances of any kind\n* Trolling, insulting or derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or email\n  address, without their explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Enforcement Responsibilities\n\nCommunity leaders are responsible for clarifying and enforcing our standards of acceptable behavior and will take appropriate and fair corrective action in response to any behavior that they deem inappropriate, threatening, offensive, or harmful.\n\nCommunity leaders have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, and will communicate reasons for moderation decisions when appropriate.\n\n## Scope\n\nThis Code of Conduct applies within all community spaces, and also applies when an individual is officially representing the community in public spaces. Examples of representing our community include using an official e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported to the community leaders responsible for enforcement at opensource@stacks.org. All complaints will be reviewed and investigated promptly and fairly.\n\nAll community leaders are obligated to respect the privacy and security of the reporter of any incident.\n\n## Enforcement Guidelines\n\nCommunity leaders will follow these Community Impact Guidelines in determining the consequences for any action they deem in violation of this Code of Conduct:\n\n### 1. Correction\n\n**Community Impact**: Use of inappropriate language or other behavior deemed unprofessional or unwelcome in the community.\n\n**Consequence**: A private, written warning from community leaders, providing clarity around the nature of the violation and an explanation of why the behavior was inappropriate. A public apology may be requested.\n\n### 2. Warning\n\n**Community Impact**: A violation through a single incident or series of actions.\n\n**Consequence**: A warning with consequences for continued behavior. No interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, for a specified period of time. This includes avoiding interactions in community spaces as well as external channels like social media. Violating these terms may lead to a temporary or permanent ban.\n\n### 3. Temporary Ban\n\n**Community Impact**: A serious violation of community standards, including sustained inappropriate behavior.\n\n**Consequence**: A temporary ban from any sort of interaction or public communication with the community for a specified period of time. No public or private interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, is allowed during this period. Violating these terms may lead to a permanent ban.\n\n### 4. Permanent Ban\n\n**Community Impact**: Demonstrating a pattern of violation of community standards, including sustained inappropriate behavior,  harassment of an individual, or aggression toward or disparagement of classes of individuals.\n\n**Consequence**: A permanent ban from any sort of public interaction within the community.\n\n### Secret Code: \nThe code to the contest is: BITCOINL2\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 2.0,\navailable at https://www.contributor-covenant.org/version/2/0/code_of_conduct.html.\n\nCommunity Impact Guidelines were inspired by [Mozilla's code of conduct enforcement ladder](https://github.com/mozilla/diversity).\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see the FAQ at\nhttps://www.contributor-covenant.org/faq. Translations are available at https://www.contributor-covenant.org/translations.\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 35.0107421875,
          "content": "# Contributing to the Stacks Blockchain\n\nThe Stacks blockchain is open-source software written in Rust. Contributions\nshould adhere to the following best practices.\n\nBlockchain software development requires a much higher degree of rigor\nthan most other kinds of software. This is because with blockchains,\n**there is no roll-back** from a bad deployment. There is essentially\nzero room for consensus bugs. If you ship a consensus bug, that bug\ncould not only have catastrophic consequences for users (i.e. they\nlose all their money), but also be intractable to fix, mitigate, or\nremove. This is because unlike nearly every other kind of networked\nsoftware, **the state of the blockchain is what the users' computers\nsay it is.** If you want to make changes, you _must_ get _user_\nbuy-in, and this is necessarily time-consuming and not at all\nguaranteed to succeed.\n\nYou can find information on joining online community forums (Discord, mailing list etc.) in the [README](README.md).\n\n# Code of Conduct\n\nThis project and everyone participating in it is governed by this [Code of Conduct](CODE_OF_CONDUCT.md).\n\n# How Can I Contribute?\n\n## Development Workflow\n\nSee the branching document in [branching.md](./docs/branching.md).\n\n### Merging PRs from Forks\n\nPRs from forks or opened by contributors without commit access require\nsome special handling for merging. Any such PR, after being reviewed,\nmust get assigned to a contributor with commit access. This merge-owner\nis responsible for:\n\n1. Creating a new branch in this repository based on the base branch\n   for the PR.\n2. Retargeting the PR toward the new branch.\n3. Merging the PR into the new branch.\n4. Opening a new PR from `new_branch -> original_base`\n5. Tagging reviewers for re-approval.\n6. Merging the new PR.\n\nFor an example of this process, see PRs\n[#3598](https://github.com/stacks-network/stacks-core/pull/3598) and\n[#3626](https://github.com/stacks-network/stacks-core/pull/3626).\n\n### Documentation Updates\n\n- Any major changes should be added to the [CHANGELOG](CHANGELOG.md).\n- Mention any required documentation changes in the description of your pull request.\n- If adding or updating an RPC endpoint, ensure the change is documented in the\n  OpenAPI spec: [`./docs/rpc/openapi.yaml`](./docs/rpc/openapi.yaml).\n- If your code adds or modifies any major features (struct, trait,\n  test, module, function, etc.), each should be documented according\n  to our [coding guidelines](#Coding-Guidelines).\n\n## Git Commit Messages\n\nAim to use descriptive git commit messages. We try to follow [conventional commits](https://www.conventionalcommits.org/en/v1.0.0/).\nThe general format is as follows:\n\n```\n<type>[optional scope]: <one-line description>\n\n[optional body]\n[optional footer(s)]\n```\n\nCommon types include build, ci, docs, fix, feat, test, refactor, etc.\n\nWhen a commit is addressing or related to a particular Github issue, it\nshould reference the issue in the commit message. For example:\n\n```\nfix: incorporate unlocks in mempool admitter, #3623\n```\n\n## Recommended developer setup\n\n### Recommended githooks\n\nIt is helpful to set up the pre-commit git hook set up, so that Rust formatting issues are caught before\nyou push your code. Follow these instruction to set it up:\n\n1. Rename `.git/hooks/pre-commit.sample` to `.git/hooks/pre-commit`\n2. Change the content of `.git/hooks/pre-commit` to be the following\n\n```sh\n#!/bin/sh\ngit diff --name-only --staged | grep '\\.rs$' | xargs -P 8 -I {} rustfmt {} --edition 2021 --check --config group_imports=StdExternalCrate,imports_granularity=Module || (\n  echo 'rustfmt failed: run \"cargo fmt-stacks\"';\n  exit 1\n)\n```\n\n3. Make it executable by running `chmod +x .git/hooks/pre-commit`\n   That's it! Now your pre-commit hook should be configured on your local machine.\n\n# Creating and Reviewing PRs\n\nThis section describes some best practices on how to create and review PRs in this context. The target audience is people who have commit access to this repository (reviewers), and people who open PRs (submitters). This is a living document -- developers can and should document their own additional guidelines here.\n\n## Overview\n\nBlockchain software development requires a much higher degree of rigor than most other kinds of software. This is because with blockchains, **there is no roll-back** from a bad deployment.\n\nTherefore, making changes to the codebase is necessarily a review-intensive process. No one wants bugs, but **no one can afford consensus bugs**. This page describes how to make and review _non-consensus_ changes. The process for consensus changes includes not only the entirety of this document, but also the [SIP process](https://github.com/stacksgov/sips/blob/main/sips/sip-000/sip-000-stacks-improvement-proposal-process.md).\n\nA good PR review sets both the submitter and reviewers up for success. It minimizes the time required by both parties to get the code into an acceptable state, without sacrificing quality or safety. Unlike most other software development practices, _safety_ is the primary concern. A PR can and will be delayed or closed if there is any concern that it will lead to unintended consensus-breaking changes.\n\nThis document is formatted like a checklist. Each paragraph is one goal or action item that the reviewer and/or submitter must complete. The **key take-away** from each paragraph is bolded.\n\n## Reviewer Expectations\n\nThe overall task of a reviewer is to create an **acceptance plan** for the submitter. This is simply the list of things that the submitter _must_ do in order for the PR to be merged. The acceptance plan should be coherent, cohesive, succinct, and complete enough that the reviewer will understand exactly what they need to do to make the PR worthy of merging, without further reviews. The _lack of ambiguity_ is the most important trait of an acceptance plan.\n\nReviewers should **complete the review in one round**. The reviewer should provide enough detail to the submitter that the submitter can make all of the requested changes without further supervision. Whenever possible, the reviewer should provide all of these details publicly as comments, so that _other_ reviewers can vet them as well. If a reviewer _cannot_ complete the review in one round due to its size and complexity, then the reviewer may request that the PR be simplified or broken into multiple PRs.\n\nReviewers should make use of Github's \"pending comments\" feature. This ensures that the review is \"atomic\": when the reviewer submits the review, all the comments are published at once.\n\nReviewers should aim to **perform a review in one sitting** whenever possible. This enables a reviewer to time-box their review, and ensures that by the time they finish studying the patch, they have a complete understanding of what the PR does in their head. This, in turn, sets them up for success when writing up the acceptance plan. It also enables reviewers to mark time for it on their calendars, which helps everyone else develop reasonable expectations as to when things will be done.\n\nCode reviews should be timely. Reviewers should start no more than\n**2 business days** after reviewers are assigned. This applies to each\nreviewer: i.e., we expect all reviewers to respond within two days.\nThe `develop` and `next` branches in particular often change quickly,\nso letting a PR languish only creates more merge work for the\nsubmitter. If a review cannot be started within this timeframe, then\nthe reviewers should **tell the submitter when they can begin**. This\ngives the reviewer the opportunity to keep working on the PR (if\nneeded) or even withdraw and resubmit it.\n\nReviewers must, above all else, **ensure that submitters follow the PR checklist** below.\n\n**As a reviewer, if you do not understand the PR's code or the potential consequences of the code, it is the submitter's responsibility to simplify the code, provide better documentation, or withdraw the PR.**\n\n## Submitter Expectations\n\nEveryone is busy all the time with a host of different tasks. Consequently, a PR's size and scope should be constrained so that **a review can be written for it no more than 2 hours.** This time block starts when the reviewer opens the patch, and ends when the reviewer hits the \"submit review\" button. If it takes more than 2 hours, then the PR should be broken into multiple PRs unless the reviewers agree to spend more time on it. A PR can be rejected if the reviewers believe they will need longer than this.\n\nThe size and scale of a PR depend on the reviewers' abilities to process the change. Different reviewers and submitters have different levels of familiarity with the codebase. Moreover, everyone has a different schedule -- sometimes, some people are more busy than others.\n\nA successful PR submitter **takes the reviewers' familiarity and availability into account** when crafting the PR, even going so far as to ask in advance if a particular person could be available for review.\n\nProviding detailed answers to reviewer questions is often necessary as a submitter. In order to make this information accessible even after a PR has merged, **submitters should strive to incorporate any clarifications into code comments**.\n\n**Selecting Reviewers**. PR submitters may tag reviewers that they\nthink are relevant to the code changes in the PR (or using the\nreviewer suggestions provided by Github). If a PR is submitted without\nassigned reviewers, then reviewers will be assigned at least by the next\nWeekly Blockchain Engineering Meeting (information can be found in Discord).\n\n## Submission Checklist\n\nA PR submission's text should **answer the following questions** for reviewers:\n\n- What problem is being solved by this PR?\n- What does the solution do to address them?\n- Why is this the best solution? What alternatives were considered, and why are they worse?\n- What do reviewers need to be familiar with in order to provide useful feedback?\n- What issue(s) are addressed by this PR?\n- What are some hints to understanding some of the more intricate or clever parts of the PR?\n- Does this PR change any database schemas? Does a node need to re-sync from genesis when this PR is applied?\n\nIn addition, the PR submission should **answer the prompts of the Github template** we use for PRs.\n\nThe code itself should adhere to our coding guidelines and conventions, which both submitters and reviewers should check.\n\n# Coding Conventions\n\n### Simplicity of implementation\n\nThe most important consideration when accepting or rejecting a contribution is\nthe simplicity (i.e. ease of understanding) of its implementation.\nContributions that are \"clever\" or introduce functionality beyond the scope of\nthe immediate problem they are meant to solve will be rejected.\n\n#### Type simplicity\n\nSimplicity of implementation includes simplicity of types. Type parameters\nand associated types should only be used if there are at\nleast two possible implementations of those types.\n\nLifetime parameters should only be introduced if the compiler cannot deduce them\non its own.\n\n### Builds with a stable Rust compiler\n\nWe use a recent, stable Rust compiler. Contributions should _not_\nrequire nightly Rust features to build and run.\n\n### Minimal dependencies\n\nAdding new package dependencies is very much discouraged. Exceptions will be\ngranted on a case-by-case basis, and only if deemed absolutely necessary.\n\n### Minimal global macros\n\nAdding new global macros is discouraged. Exceptions will only be given if\nabsolutely necessary.\n\n### No compiler warnings\n\nContributions should not trigger compiler warnings if possible, and should not\nmask compiler warnings with macros.\n\n### Minimal `unsafe` code\n\nContributions should not contain `unsafe` blocks if at all possible.\n\n# Coding Guidelines\n\n## Documentation\n\n- Each file must have a **copyright statement**.\n- Any new non-test modules should have **module-level documentation** explaining what the module does, and how it fits into the blockchain as a whole ([example](https://github.com/stacks-network/stacks-core/blob/4852d6439b473e24705f14b8af637aded33cb422/testnet/stacks-node/src/neon_node.rs#L17)).\n- Any new files must have some **top-of-file documentation** that describes what the contained code does, and how it fits into the overall module.\n\nWithin the source files, the following **code documentation** standards are expected:\n\n- Each public function, struct, enum, and trait should have a Rustdoc comment block describing the API contract it offers. This goes for private structs and traits as well.\n- Each _non-trivial_ private function should likewise have a Rustdoc comment block. Trivial ones that are self-explanatory, like getters and setters, do not need documentation. If you are unsure if your function needs a docstring, err on the side of documenting it.\n- Each struct and enum member must have a Rustdoc comment string indicating what it does, and how it is used. This can be as little as a one-liner, as long as the relevant information is communicated.\n\n## Factoring\n\n- **Each non-`mod.rs` file implements at most one subsystem**. It may include multiple struct implementations and trait implementations. The filename should succinctly identify the subsystem, and the file-level documentation must succinctly describe it and how it relates to other subsystems it interacts with.\n\n- Directories represent collections of related but distinct subsystems.\n\n- To the greatest extent possible, **business logic and I/O should be\n  separated**. A common pattern used in the codebase is to place the\n  business logic into an \"inner\" function that does not do I/O, and\n  handle I/O reads and writes in an \"outer\" function. The \"outer\"\n  function only does the needful I/O and passes the data into the\n  \"inner\" function. The \"inner\" function is often private, whereas\n  the \"outer\" function is often public. For example, [`inner_try_mine_microblock` and `try_mine_microblock`](https://github.com/stacks-network/stacks-core/blob/4852d6439b473e24705f14b8af637aded33cb422/testnet/stacks-node/src/neon_node.rs#L1148-L1216).\n\n## Refactoring\n\n- **Any PR that does a large-scale refactoring must be in its own PR**. This includes PRs that touch multiple subsystems. Refactoring often adds line noise that obscures the new functional changes that the PR proposes. Small-scale refactorings are permitted to ship with functional changes.\n\n- Refactoring PRs can generally be bigger, because they are easier to review. However, **large refactorings that could impact the functional behavior of the system should be discussed first** before carried out. This is because it is imperative that they do not stay open for very long (to keep the submitter's maintenance burden low), but nevertheless reviewing them must still take at most 2 hours. Discussing them first front-loads part of the review process.\n\n## Databases\n\n- If at all possible, **the database schema should be preserved**. Exceptions can be made on a case-by-case basis. The reason for this is that it's a big ask for people to re-sync nodes from genesis when they upgrade to a new point release.\n\n- Any changes to a database schema must also ship with a **new schema version and new schema migration logic**, as well as _test coverage_ for it.\n\n- The submitter must verify that **any new database columns are indexed**, as relevant to the queries performed on them. Table scans are not permitted if they can be avoided (and they almost always can be). You can find table scans manually by setting the environment variable `BLOCKSTACK_DB_TRACE` when running your tests (this will cause every query executed to be preceded by the output of `EXPLAIN QUERY PLAN` on it).\n\n- Database changes **cannot be consensus-critical** unless part of a hard fork (see below).\n\n- If the database schema changes and no migration can be feasibly done, then the submitter **must spin up a node from genesis to verify that it works** _before_ submitting the PR. This genesis spin-up will be tested again before the next node release is made.\n\n## Data Input\n\n- **Data from the network, from Bitcoin, and from the config file is untrusted.** Code that ingests such data _cannot assume anything_ about its structure, and _must_ handle any possible byte sequence that can be submitted to the Stacks node.\n\n- **Data previously written to disk by the node is trusted.** If data loaded from the database that was previously stored by the node is invalid or corrupt, it is appropriate to panic.\n\n- **All input processing is space-bound.** Every piece of code that ingests data must impose a maximum size on its byte representation. Any inputs that exceed this size _must be discarded with as little processing as possible_.\n\n- **All input deserialization is resource-bound.** Every piece of code\n  that ingests data must impose a maximum amount of RAM and CPU\n  required to decode it into a structured representation. If the data\n  does not decode with the allotted resources, then no further\n  processing may be done and the data is discarded. For an example, see\n  how the parsing functions in the http module use `BoundReader` and\n  `MAX_PAYLOAD_LEN` in [http.rs](https://github.com/stacks-network/stacks-core/blob/4852d6439b473e24705f14b8af637aded33cb422/src/net/http.rs#L2260-L2285).\n\n- **All network input reception is time-bound.** Every piece of code that ingests data _from the network_ must impose a maximum amount of time that ingestion can take. If the data takes too long to arrive, then it must be discarded without any further processing. There is no time bound for data ingested from disk or passed as an argument; this requirement is meant by the space-bound requirement.\n\n- **Untrusted data ingestion must not panic.** Every piece of code that ingests untrusted data must gracefully handle errors. Panicking failures are forbidden for such data. Panics are only allowed if the ingested data was previously written by the node (and thus trusted).\n\n## Non-consensus Changes to Blocks, Microblocks, Transactions, and Clarity\n\nAny changes to code that alters how a block, microblock, or transaction is processed by the node should be **treated as a breaking change until proven otherwise**. This includes changes to the Clarity VM. The reviewer _must_ flag any such changes in the PR, and the submitter _must_ convince _all_ reviewers that they will _not_ break consensus.\n\nChanges that touch any of these four code paths must be treated with the utmost care. If _any_ core developer suspects that a given PR would break consensus, then they _must_ act to prevent the PR from merging.\n\n## Changes to the Peer Network\n\nAny changes to the peer networking code **must be run on both mainnet and testnet before the PR can be merged.** The submitter should set up a testable node or set of nodes that reviewers can interact with.\n\nChanges to the peer network should be deployed incrementally and tested by multiple parties when possible to verify that they function properly in a production setting.\n\n## Performance Improvements\n\nAny PRs that claim to improve performance **must ship with reproducible benchmarks** that accurately measure the improvement. This data must also be reported in the PR submission.\n\nFor an example, see [PR #3075](https://github.com/stacks-network/stacks-core/pull/3075).\n\n## Error Handling\n\n- **Results must use `Error` types**. Fallible functions in the\n  codebase must use `Error` types in their `Result`s. If a new module's\n  errors are sufficiently different from existing `Error` types in the\n  codebaes, the new module must define a new `Error` type. Errors that\n  are caused by other `Error` types should be wrapped in a variant of\n  the new `Error` type. You should provide conversions via a `From`\n  trait implementation.\n\n- Functions that act on externally-submitted data **must never panic**. This includes code that acts on incoming network messages, blockchain data, and burnchain (Bitcoin) data.\n\n- **Runtime panics should be used sparingly**. Generally speaking, a runtime panic is only appropriate if there is no reasonable way to recover from the error condition. For example, this includes (but is not limited to) disk I/O errors, database corruption, and unreachable code.\n\n- If a runtime panic is desired, it **must have an appropriate error message**.\n\n## Logging\n\n- Log messages should be informative and context-free as possible. They are used mainly to help us identify and diagnose problems. They are _not_ used to help you verify that your code works; that's the job of a unit test.\n\n- **DO NOT USE println!() OR eprintln!()**. Instead, use the logging macros (`test_debug!()`, `trace!()`, `debug!()`, `info!()`, `warn!()`, `error!()`).\n\n- Use **structured logging** to include dynamic data in your log entry. For example, `info!(\"Append block\"; \"block_id\" => %block_id)` as opposed to `info!(\"Append block with block_id = {}\", block_id)`.\n\n- Use `trace!()` and `test_debug!()` liberally. It only runs in tests.\n\n- Use `debug!()` for information that is relevant for diagnosing problems at runtime. This is off by default, but can be turned on with the `BLOCKSTACK_DEBUG` environment variable.\n\n- Use `info!()` sparingly.\n\n- Use `warn!()` or `error!()` only when there really is a problem.\n\n## Consensus-Critical Code\n\nA **consensus-critical change** is a change that affects how the Stacks blockchain processes blocks, microblocks, or transactions, such that a node with the patch _could_ produce a different state root hash than a node without the patch. If this is even _possible_, then the PR is automatically treated as a consensus-critical change and must ship as part of a hard fork. It must also be described in a SIP.\n\n- **All changes to consensus-critical code must be opened against `next`**. It is _never acceptable_ to open them against `develop` or `master`.\n\n- **All consensus-critical changes must be gated on the Stacks epoch**. They may only take effect once the system enters a specific epoch (and this must be documented).\n\nA non-exhaustive list of examples of consensus-critical changes include:\n\n- Adding or changing block, microblock, or transaction wire formats\n- Changing the criteria under which a burnchain operation will be accepted by the node\n- Changing the data that gets stored to a MARF key/value pair in the Clarity or Stacks chainstate MARFs\n- Changing the order in which data gets stored in the above\n- Adding, changing, or removing Clarity functions\n- Changing the cost of a Clarity function\n- Adding new kinds of transactions, or enabling certain transaction data field values that were previously forbidden.\n\n## Testing\n\n- **Unit tests should focus on the business logic with mocked data**. To the greatest extent possible, each error path should be tested _in addition to_ the success path. A submitter should expect to spend most of their test-writing time focusing on error paths; getting the success path to work is often much easier than the error paths.\n\n- **Unit tests should verify that the I/O code paths work**, but do so in a way that does not \"clobber\" other tests or prevent other tests from running in parallel (if it can be avoided). This means that unit tests should use their own directories for storing transient state (in `/tmp`), and should bind on ports that are not used anywhere else.\n\n- If randomness is needed, **tests should use a seeded random number generator if possible**. This ensures that they will reliably pass in CI.\n\n- When testing a consensus-critical code path, the test coverage should verify that the new behavior is only possible within the epoch(s) in which the behavior is slated to activate. Above all else, **backwards-compatibility is a hard requirement.**\n\n- **Integration tests are necessary when the PR has a consumer-visible effect**. For example, changes to the RESTful API, event stream, and mining behavior all require integration tests.\n\n- Every consensus-critical change needs an integration test to verify that the feature activates only when the hard fork activates.\n\nPRs must include test coverage. However, if your PR includes large tests or tests which cannot run in parallel\n(which is the default operation of the `cargo test` command), these tests should be decorated with `#[ignore]`.\n\nA test should be marked `#[ignore]` if:\n\n1. It does not _always_ pass `cargo test` in a vanilla environment\n   (i.e., it does not need to run with `--test-threads 1`).\n\n2. Or, it runs for over a minute via a normal `cargo test` execution\n   (the `cargo test` command will warn if this is not the case).\n\n## Formatting\n\nPRs will be checked against `rustfmt` and will _fail_ if not properly formatted.\nUnfortunately, some config options that we require cannot currently be set in `.rustfmt` files, so arguments must be passed via the command line.\nTherefore, we handle `rustfmt` configuration using a Cargo alias: `cargo fmt-stacks`\n\nYou can check the formatting locally via:\n\n```bash\ncargo fmt-stacks --check\n```\n\nYou can automatically reformat your commit via:\n\n```bash\ncargo fmt-stacks\n```\n\n## Comments\n\nComments are very important for the readability and correctness of the codebase. The purpose of comments is:\n\n- Allow readers to understand the roles of components and functions without having to check how they are used.\n- Allow readers to check the correctness of the code against the comments.\n- Allow readers to follow tests.\n\nIn the limit, if there are no comments, the problems that arise are:\n\n- Understanding one part of the code requires understanding _many_ parts of the code. This is because the reader is forced to learn the meanings of constructs inductively through their use. Learning how one construct is used requires understanding its neighbors, and then their neighbors, and so on, recursively. Instead, with a good comment, the reader can understand the role of a construct with `O(1)` work by reading the comment.\n- The user cannot be certain if there is a bug in the code, because there is no distinction between the contract of a function, and its definition.\n- The user cannot be sure if a test is correct, because the logic of the test is not specified, and the functions do not have contracts.\n\n### Comment Formatting\n\nComments are to be formatted in typical `rust` style, specifically:\n\n- Use markdown to format comments.\n\n- Use the triple forward slash \"///\" for modules, structs, enums, traits and functions. Use double forward slash \"//\" for comments on individual lines of code.\n\n- Start with a high-level description of the function, adding more sentences with details if necessary.\n\n- When documenting panics, errors, or other conceptual sections, introduce a Markdown section with a single `#`, e.g.:\n\n  ```rust\n  # Errors\n  * ContractTooLargeError: Thrown when `contract` is larger than `MAX_CONTRACT_SIZE`.\n  ```\n\n### Content of Comments\n\n#### Component Comments\n\nComments for a component (`struct`, `trait`, or `enum`) should explain what the overall\npurpose of that component is. This is usually a concept, and not a formal contract. Include anything that is not obvious about this component.\n\n**Example:**\n\n```rust\n/// The `ReadOnlyChecker` analyzes a contract to determine whether\n/// there are any violations of read-only declarations. By a \"violation\"\n/// we mean a function that is marked as \"read only\" but which tries\n/// to modify chainstate.\npub struct ReadOnlyChecker<'a, 'b> {\n```\n\nThis comment is considered positive because it explains the concept behind the class at a glance, so that the reader has some idea about what the methods will achieve, without reading each method declaration and comment. It also defines some terms that can be used in the comments on the method names.\n\n#### Function Comments\n\nThe comments on a function should explain what the function does, without having to read it. Wherever practical, it should specify the contract of a function, such that a bug in the logic could be discovered by a discrepancy between contract and implementation, or such that a test could be written with only access to the function comment.\n\nWithout being unnecessarily verbose, explain how the output is calculated\nfrom the inputs. Explain the side effects. Explain any restrictions on the inputs. Explain failure\nconditions, including when the function will panic, return an error\nor return an empty value.\n\n**Example:**\n\n```rust\n/// A contract that does not violate its read-only declarations is called\n/// *read-only correct*.\nimpl<'a, 'b> ReadOnlyChecker<'a, 'b> {\n    /// Checks each top-level expression in `contract_analysis.expressions`\n    /// for read-only correctness.\n    ///\n    /// Returns successfully iff this function is read-only correct.\n    ///\n    /// # Errors\n    ///\n    /// - Returns CheckErrors::WriteAttemptedInReadOnly if there is a read-only\n    ///   violation, i.e. if some function marked read-only attempts to modify\n    ///   the chainstate.\n    pub fn run(&mut self, contract_analysis: &ContractAnalysis) -> CheckResult<()>\n```\n\nThis comment is considered positive because it explains the contract of the function in pseudo-code. Someone who understands the constructs mentioned could, e.g., write a test for this method from this description.\n\n#### Comments on Implementations of Virtual Methods\n\nNote that, if a function implements a virtual function on an interface, the comments should not\nrepeat what was specified on the interface declaration. The comment should only add information specific to that implementation.\n\n#### Data Member Comments\n\nEach data member in a struct should have a comment describing what that member\nis, and what it is used for. Such comments are usually brief but should\nclear up any ambiguity that might result from having only the variable\nname and type.\n\n**Example:**\n\n```rust\npub struct ReadOnlyChecker<'a, 'b> {\n    /// Mapping from function name to a boolean indicating whether\n    /// the function with that name is read-only.\n    /// This map contains all functions in the contract analyzed.\n    defined_functions: HashMap<ClarityName, bool>,\n```\n\nThis comment is considered positive because it clarifies users might have about the content and role of this member. E.g., it explains that the `bool` indicates whether the function is _read-only_, whereas this cannot be gotten from the signature alone.\n\n#### Test Comments\n\nEach test should have enough comments to help an unfamiliar reader understand:\n\n1. what is conceptually being tested\n1. why a given answer is expected\n\nSometimes this can be obvious without much comments, perhaps from the context,\nor because the test is very simple. Often though, comments are necessary.\n\n**Example:**\n\n```rust\n#[test]\n#[ignore]\n/// The purpose of this test is to check if the mempool admission checks\n/// for the post tx endpoint are working as expected wrt the optional\n/// `mempool_admission_check` query parameter.\n///\n/// In this test, we are manually creating a microblock as well as\n/// reloading the unconfirmed state of the chainstate, instead of relying\n/// on `next_block_and_wait` to generate microblocks. We do this because\n/// the unconfirmed state is not automatically being initialized\n/// on the node, so attempting to validate any transactions against the\n/// expected unconfirmed state fails.\nfn transaction_validation_integration_test() {\n```\n\nThis comment is considered positive because it explains the purpose of the test (checking the case of an optional parameter), it also guides the reader to understand the low-level details about why a microblock is created manually.\n\n### How Much to Comment\n\nContributors should strike a balance between commenting \"too much\" and commenting \"too little\". Commenting \"too much\" primarily includes commenting things that are clear from the context. Commenting \"too little\" primarily includes writing no comments at all, or writing comments that leave important questions unresolved.\n\nHuman judgment and creativity must be used to create good comments, which convey important information with small amounts of text. There is no single rule which can determine what a good comment is. Longer comments are _not_ always better, since needlessly long comments have a cost: they require the reader to read more, take up whitespace, and take longer to write and review.\n\n### Don't Restate Names in Comments\n\nThe contracts of functions should be implemented precisely enough that tests could be written looking only at the declaration and the comments (and without looking at the definition!). However:\n\n- **the author should assume that the reader has already read and understood the function name, variable names, type names, etc.**\n- **the author should only state information that is new**\n\nSo, if a function and its variables have very descriptive names, then there may be nothing to add in the comments at all!\n\n**Bad Example**\n\n```rust\n/// Appends a transaction to a block.\nfn append_transaction_to_block(transaction:Transaction, &mut Block) -> Result<()>\n```\n\nThis is considered bad because the function name already says \"append transaction to block\", so it doesn't add anything to restate it in the comments. However, _do_ add anything that is not redundant, such as elaborating what it means to \"append\" (if there is more to say), or what conditions will lead to an error.\n\n**Good Example**\n\n```rust\n/// # Errors\n///\n/// - BlockTooBigError: Is returned if adding `transaction` to `block` results\n/// in a block size bigger than MAX_BLOCK_SIZE.\nfn append_transaction_to_block(transaction:Transaction, block:&mut Block) -> Result<()>\n```\n\nThis is considered good because the reader builds on the context created by the function and variable names. Rather than restating them, the function just adds elements of the contract that are not implicit in the declaration.\n\n### Do's and Dont's of Comments\n\n_Don't_ over-comment by documenting things that are clear from the context. E.g.:\n\n- Don't document the types of inputs or outputs, since these are parts of the type signature in `rust`.\n- Don't necessarily document standard \"getters\" and \"setters\", like `get_clarity_version()`, unless there is unexpected information to add with the comment.\n- Don't explain that a specific test does type-checking, if it is in a file that is dedicated to type-checking.\n\n_Do_ document things that are not clear, e.g.:\n\n- For a function called `process_block`, explain what it means to \"process\" a block.\n- For a function called `process_block`, make clear whether we mean anchored blocks, microblocks, or both.\n- For a function called `run`, explain the steps involved in \"running\".\n- For a function that takes arguments `peer1` and `peer2`, explain the difference between the two.\n- For a function that takes an argument `height`, either explain in the comment what this is the _height of_. Alternatively, expand the variable name to remove the ambiguity.\n- For a test, document what it is meant to test, and why the expected answers are, in fact, expected.\n\n### Changing Code Instead of Comments\n\nKeep in mind that better variable names can reduce the need for comments, e.g.:\n\n- `burnblock_height` instead of `height` may eliminate the need to comment that `height` refers to a burnblock height\n- `process_microblocks` instead of `process_blocks` is more correct, and may eliminate the need to explain that the inputs are microblocks\n- `add_transaction_to_microblock` explains more than `handle_transaction`, and reduces the need to even read the comment\n\n# Licensing and contributor license agreement\n\n`stacks-core` is released under the terms of the GPL version 3. Contributions\nthat are not licensed under compatible terms will be rejected. Moreover,\ncontributions will not be accepted unless _all_ authors accept the project's\ncontributor license agreement.\n\n## Use of AI-code Generation\n\nThe Stacks Foundation has a very strict policy of not accepting AI-generated code PRs due to uncertainly about licensing issues.\n"
        },
        {
          "name": "Cargo.lock",
          "type": "blob",
          "size": 106.0927734375,
          "content": "# This file is automatically @generated by Cargo.\n# It is not intended for manual editing.\nversion = 3\n\n[[package]]\nname = \"addr2line\"\nversion = \"0.21.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8a30b2e23b9e17a9f90641c7ab1549cd9b44f296d3ccbf309d2863cfe398a0cb\"\ndependencies = [\n \"gimli\",\n]\n\n[[package]]\nname = \"adler\"\nversion = \"1.0.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f26201604c87b1e01bd3d98f8d5d9a8fcbb815e8cedb41ffccbeb4bf593a35fe\"\n\n[[package]]\nname = \"adler32\"\nversion = \"1.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"aae1277d39aeec15cb388266ecc24b11c80469deae6067e17a1a7aa9e5c1f234\"\n\n[[package]]\nname = \"aead\"\nversion = \"0.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7fc95d1bdb8e6666b2b217308eeeb09f2d6728d104be3e31916cc74d15420331\"\ndependencies = [\n \"generic-array 0.14.7\",\n]\n\n[[package]]\nname = \"aes\"\nversion = \"0.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"884391ef1066acaa41e766ba8f596341b96e93ce34f9a43e7d24bf0a0eaf0561\"\ndependencies = [\n \"aes-soft\",\n \"aesni\",\n \"cipher\",\n]\n\n[[package]]\nname = \"aes-gcm\"\nversion = \"0.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5278b5fabbb9bd46e24aa69b2fdea62c99088e0a950a9be40e3e0101298f88da\"\ndependencies = [\n \"aead\",\n \"aes\",\n \"cipher\",\n \"ctr\",\n \"ghash\",\n \"subtle\",\n]\n\n[[package]]\nname = \"aes-soft\"\nversion = \"0.6.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"be14c7498ea50828a38d0e24a765ed2effe92a705885b57d029cd67d45744072\"\ndependencies = [\n \"cipher\",\n \"opaque-debug\",\n]\n\n[[package]]\nname = \"aesni\"\nversion = \"0.10.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ea2e11f5e94c2f7d386164cc2aa1f97823fed6f259e486940a71c174dd01b0ce\"\ndependencies = [\n \"cipher\",\n \"opaque-debug\",\n]\n\n[[package]]\nname = \"ahash\"\nversion = \"0.8.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"42cd52102d3df161c77a887b608d7a4897d7cc112886a9537b738a887a03aaff\"\ndependencies = [\n \"cfg-if 1.0.0\",\n \"once_cell\",\n \"version_check\",\n \"zerocopy\",\n]\n\n[[package]]\nname = \"aho-corasick\"\nversion = \"1.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b2969dcb958b36655471fc61f7e416fa76033bdd4bfed0678d8fee1e2d07a1f0\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"allocator-api2\"\nversion = \"0.2.16\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0942ffc6dcaadf03badf6e6a2d0228460359d5e34b57ccdc720b7382dfbd5ec5\"\n\n[[package]]\nname = \"android-tzdata\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e999941b234f3131b00bc13c22d06e8c5ff726d1b6318ac7eb276997bbb4fef0\"\n\n[[package]]\nname = \"android_system_properties\"\nversion = \"0.1.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"819e7219dbd41043ac279b19830f2efc897156490d7fd6ea916720117ee66311\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"anstream\"\nversion = \"0.6.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6e2e1ebcb11de5c03c67de28a7df593d32191b44939c482e97702baaaa6ab6a5\"\ndependencies = [\n \"anstyle\",\n \"anstyle-parse\",\n \"anstyle-query\",\n \"anstyle-wincon\",\n \"colorchoice\",\n \"utf8parse\",\n]\n\n[[package]]\nname = \"anstyle\"\nversion = \"1.0.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8901269c6307e8d93993578286ac0edf7f195079ffff5ebdeea6a59ffb7e36bc\"\n\n[[package]]\nname = \"anstyle-parse\"\nversion = \"0.2.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c75ac65da39e5fe5ab759307499ddad880d724eed2f6ce5b5e8a26f4f387928c\"\ndependencies = [\n \"utf8parse\",\n]\n\n[[package]]\nname = \"anstyle-query\"\nversion = \"1.0.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e28923312444cdd728e4738b3f9c9cac739500909bb3d3c94b43551b16517648\"\ndependencies = [\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"anstyle-wincon\"\nversion = \"3.0.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1cd54b81ec8d6180e24654d0b371ad22fc3dd083b6ff8ba325b72e00c87660a7\"\ndependencies = [\n \"anstyle\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"anyhow\"\nversion = \"1.0.79\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"080e9890a082662b09c1ad45f567faeeb47f22b5fb23895fbe1e651e718e25ca\"\n\n[[package]]\nname = \"ascii\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d92bec98840b8f03a5ff5413de5293bfcd8bf96467cf5452609f939ec6f5de16\"\n\n[[package]]\nname = \"assert-json-diff\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4259cbe96513d2f1073027a259fc2ca917feb3026a5a8d984e3628e490255cc0\"\ndependencies = [\n \"extend\",\n \"serde\",\n \"serde_json\",\n]\n\n[[package]]\nname = \"assert-json-diff\"\nversion = \"2.0.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"47e4f2b81832e72834d7518d8487a0396a28cc408186a2e8854c0f98011faf12\"\ndependencies = [\n \"serde\",\n \"serde_json\",\n]\n\n[[package]]\nname = \"async-attributes\"\nversion = \"1.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a3203e79f4dd9bdda415ed03cf14dae5a2bf775c683a00f94e9cd1faf0f596e5\"\ndependencies = [\n \"quote\",\n \"syn 1.0.109\",\n]\n\n[[package]]\nname = \"async-channel\"\nversion = \"1.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"81953c529336010edd6d8e358f886d9581267795c61b19475b71314bffa46d35\"\ndependencies = [\n \"concurrent-queue\",\n \"event-listener 2.5.3\",\n \"futures-core\",\n]\n\n[[package]]\nname = \"async-channel\"\nversion = \"2.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f28243a43d821d11341ab73c80bed182dc015c514b951616cf79bd4af39af0c3\"\ndependencies = [\n \"concurrent-queue\",\n \"event-listener 5.0.0\",\n \"event-listener-strategy 0.5.0\",\n \"futures-core\",\n \"pin-project-lite\",\n]\n\n[[package]]\nname = \"async-dup\"\nversion = \"1.2.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7c2886ab563af5038f79ec016dd7b87947ed138b794e8dd64992962c9cca0411\"\ndependencies = [\n \"async-lock 3.3.0\",\n \"futures-io\",\n]\n\n[[package]]\nname = \"async-executor\"\nversion = \"1.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"17ae5ebefcc48e7452b4987947920dac9450be1110cadf34d1b8c116bdbaf97c\"\ndependencies = [\n \"async-lock 3.3.0\",\n \"async-task\",\n \"concurrent-queue\",\n \"fastrand 2.0.1\",\n \"futures-lite 2.2.0\",\n \"slab\",\n]\n\n[[package]]\nname = \"async-global-executor\"\nversion = \"2.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"05b1b633a2115cd122d73b955eadd9916c18c8f510ec9cd1686404c60ad1c29c\"\ndependencies = [\n \"async-channel 2.2.0\",\n \"async-executor\",\n \"async-io 2.3.1\",\n \"async-lock 3.3.0\",\n \"blocking\",\n \"futures-lite 2.2.0\",\n \"once_cell\",\n]\n\n[[package]]\nname = \"async-h1\"\nversion = \"2.3.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5d1d1dae8cb2c4258a79d6ed088b7fb9b4763bf4e9b22d040779761e046a2971\"\ndependencies = [\n \"async-channel 1.9.0\",\n \"async-dup\",\n \"async-global-executor\",\n \"async-io 1.13.0\",\n \"futures-lite 1.13.0\",\n \"http-types\",\n \"httparse\",\n \"log\",\n \"pin-project\",\n]\n\n[[package]]\nname = \"async-io\"\nversion = \"1.13.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0fc5b45d93ef0529756f812ca52e44c221b35341892d3dcc34132ac02f3dd2af\"\ndependencies = [\n \"async-lock 2.8.0\",\n \"autocfg\",\n \"cfg-if 1.0.0\",\n \"concurrent-queue\",\n \"futures-lite 1.13.0\",\n \"log\",\n \"parking\",\n \"polling 2.8.0\",\n \"rustix 0.37.27\",\n \"slab\",\n \"socket2 0.4.10\",\n \"waker-fn\",\n]\n\n[[package]]\nname = \"async-io\"\nversion = \"2.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8f97ab0c5b00a7cdbe5a371b9a782ee7be1316095885c8a4ea1daf490eb0ef65\"\ndependencies = [\n \"async-lock 3.3.0\",\n \"cfg-if 1.0.0\",\n \"concurrent-queue\",\n \"futures-io\",\n \"futures-lite 2.2.0\",\n \"parking\",\n \"polling 3.4.0\",\n \"rustix 0.38.31\",\n \"slab\",\n \"tracing\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"async-lock\"\nversion = \"2.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"287272293e9d8c41773cec55e365490fe034813a2f172f502d6ddcf75b2f582b\"\ndependencies = [\n \"event-listener 2.5.3\",\n]\n\n[[package]]\nname = \"async-lock\"\nversion = \"3.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d034b430882f8381900d3fe6f0aaa3ad94f2cb4ac519b429692a1bc2dda4ae7b\"\ndependencies = [\n \"event-listener 4.0.3\",\n \"event-listener-strategy 0.4.0\",\n \"pin-project-lite\",\n]\n\n[[package]]\nname = \"async-std\"\nversion = \"1.12.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"62565bb4402e926b29953c785397c6dc0391b7b446e45008b0049eb43cec6f5d\"\ndependencies = [\n \"async-attributes\",\n \"async-channel 1.9.0\",\n \"async-global-executor\",\n \"async-io 1.13.0\",\n \"async-lock 2.8.0\",\n \"crossbeam-utils\",\n \"futures-channel\",\n \"futures-core\",\n \"futures-io\",\n \"futures-lite 1.13.0\",\n \"gloo-timers\",\n \"kv-log-macro\",\n \"log\",\n \"memchr\",\n \"once_cell\",\n \"pin-project-lite\",\n \"pin-utils\",\n \"slab\",\n \"wasm-bindgen-futures\",\n]\n\n[[package]]\nname = \"async-task\"\nversion = \"4.7.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fbb36e985947064623dbd357f727af08ffd077f93d696782f3c56365fa2e2799\"\n\n[[package]]\nname = \"atomic-waker\"\nversion = \"1.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1505bd5d3d116872e7271a6d4e16d81d0c8570876c8de68093a09ac269d8aac0\"\n\n[[package]]\nname = \"atty\"\nversion = \"0.2.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d9b39be18770d11421cdb1b9947a45dd3f37e93092cbf377614828a319d5fee8\"\ndependencies = [\n \"hermit-abi 0.1.19\",\n \"libc\",\n \"winapi 0.3.9\",\n]\n\n[[package]]\nname = \"autocfg\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d468802bab17cbc0cc575e9b053f41e72aa36bfa6b7f55e3529ffa43161b97fa\"\n\n[[package]]\nname = \"backoff\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b62ddb9cb1ec0a098ad4bbf9344d0713fa193ae1a80af55febcff2627b6a00c1\"\ndependencies = [\n \"getrandom 0.2.12\",\n \"instant\",\n \"rand 0.8.5\",\n]\n\n[[package]]\nname = \"backtrace\"\nversion = \"0.3.69\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2089b7e3f35b9dd2d0ed921ead4f6d318c27680d4a5bd167b3ee120edb105837\"\ndependencies = [\n \"addr2line\",\n \"cc\",\n \"cfg-if 1.0.0\",\n \"libc\",\n \"miniz_oxide\",\n \"object\",\n \"rustc-demangle\",\n]\n\n[[package]]\nname = \"base-x\"\nversion = \"0.2.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4cbbc9d0964165b47557570cce6c952866c2678457aca742aafc9fb771d30270\"\n\n[[package]]\nname = \"base64\"\nversion = \"0.12.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3441f0f7b02788e948e47f457ca01f1d7e6d92c693bc132c22b087d3141c03ff\"\n\n[[package]]\nname = \"base64\"\nversion = \"0.13.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9e1b586273c5702936fe7b7d6896644d8be71e6314cfe09d3167c95f712589e8\"\n\n[[package]]\nname = \"base64\"\nversion = \"0.21.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9d297deb1925b89f2ccc13d7635fa0714f12c87adce1c75356b39ca9b7178567\"\n\n[[package]]\nname = \"base64ct\"\nversion = \"1.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8c3c1a368f70d6cf7302d78f8f7093da241fb8e8807c05cc9e51a125895a6d5b\"\n\n[[package]]\nname = \"bitflags\"\nversion = \"1.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bef38d45163c2f1dde094a7dfd33ccf595c92905c8f8f4fdc18d06fb1037718a\"\n\n[[package]]\nname = \"bitflags\"\nversion = \"2.4.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ed570934406eb16438a4e976b1b4500774099c13b8cb96eec99f620f05090ddf\"\n\n[[package]]\nname = \"block-buffer\"\nversion = \"0.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4152116fd6e9dadb291ae18fc1ec3575ed6d84c29642d97890f4b4a3417297e4\"\ndependencies = [\n \"generic-array 0.14.7\",\n]\n\n[[package]]\nname = \"block-buffer\"\nversion = \"0.10.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3078c7629b62d3f0439517fa394996acacc5cbc91c5a20d8c658e77abd503a71\"\ndependencies = [\n \"generic-array 0.14.7\",\n]\n\n[[package]]\nname = \"blocking\"\nversion = \"1.5.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6a37913e8dc4ddcc604f0c6d3bf2887c995153af3611de9e23c352b44c1b9118\"\ndependencies = [\n \"async-channel 2.2.0\",\n \"async-lock 3.3.0\",\n \"async-task\",\n \"fastrand 2.0.1\",\n \"futures-io\",\n \"futures-lite 2.2.0\",\n \"piper\",\n \"tracing\",\n]\n\n[[package]]\nname = \"bumpalo\"\nversion = \"3.14.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7f30e7476521f6f8af1a1c4c0b8cc94f0bee37d91763d0ca2665f299b6cd8aec\"\n\n[[package]]\nname = \"byteorder\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1fd0f2584146f6f2ef48085050886acf353beff7305ebd1ae69500e27c67f64b\"\n\n[[package]]\nname = \"bytes\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a2bd12c1caf447e69cd4528f47f94d203fd2582878ecb9e9465484c4148a8223\"\n\n[[package]]\nname = \"cast\"\nversion = \"0.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"37b2a672a2cb129a2e41c10b1224bb368f9f37a2b16b612598138befd7b37eb5\"\n\n[[package]]\nname = \"cc\"\nversion = \"1.0.83\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f1174fb0b6ec23863f8b971027804a42614e347eafb0a95bf0b12cdae21fc4d0\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"cfg-if\"\nversion = \"0.1.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4785bdd1c96b2a846b2bd7cc02e86b6b3dbf14e7e53446c4f54c92a361040822\"\n\n[[package]]\nname = \"cfg-if\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd\"\n\n[[package]]\nname = \"chrono\"\nversion = \"0.4.34\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5bc015644b92d5890fab7489e49d21f879d5c990186827d42ec511919404f38b\"\ndependencies = [\n \"android-tzdata\",\n \"iana-time-zone\",\n \"js-sys\",\n \"num-traits\",\n \"wasm-bindgen\",\n \"windows-targets 0.52.0\",\n]\n\n[[package]]\nname = \"chunked_transfer\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6e4de3bc4ea267985becf712dc6d9eed8b04c953b3fcfb339ebc87acd9804901\"\n\n[[package]]\nname = \"cipher\"\nversion = \"0.2.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"12f8e7987cbd042a63249497f41aed09f8e65add917ea6566effbc56578d6801\"\ndependencies = [\n \"generic-array 0.14.7\",\n]\n\n[[package]]\nname = \"clap\"\nversion = \"2.34.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a0610544180c38b88101fecf2dd634b174a62eef6946f84dfc6a7127512b381c\"\ndependencies = [\n \"bitflags 1.3.2\",\n \"textwrap\",\n \"unicode-width\",\n]\n\n[[package]]\nname = \"clap\"\nversion = \"4.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"80c21025abd42669a92efc996ef13cfb2c5c627858421ea58d5c3b331a6c134f\"\ndependencies = [\n \"clap_builder\",\n \"clap_derive\",\n]\n\n[[package]]\nname = \"clap_builder\"\nversion = \"4.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"458bf1f341769dfcf849846f65dffdf9146daa56bcd2a47cb4e1de9915567c99\"\ndependencies = [\n \"anstream\",\n \"anstyle\",\n \"clap_lex\",\n \"strsim\",\n]\n\n[[package]]\nname = \"clap_derive\"\nversion = \"4.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"307bc0538d5f0f83b8248db3087aa92fe504e4691294d0c96c0eabc33f47ba47\"\ndependencies = [\n \"heck\",\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.48\",\n]\n\n[[package]]\nname = \"clap_lex\"\nversion = \"0.7.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"98cc8fbded0c607b7ba9dd60cd98df59af97e84d24e49c8557331cfc26d301ce\"\n\n[[package]]\nname = \"clarity\"\nversion = \"0.0.1\"\ndependencies = [\n \"assert-json-diff 1.1.0\",\n \"hashbrown\",\n \"integer-sqrt\",\n \"lazy_static\",\n \"mutants\",\n \"rand 0.8.5\",\n \"rand_chacha 0.3.1\",\n \"regex\",\n \"rstest 0.17.0\",\n \"rstest_reuse 0.5.0\",\n \"rusqlite\",\n \"serde\",\n \"serde_derive\",\n \"serde_json\",\n \"serde_stacker\",\n \"slog\",\n \"stacks-common\",\n \"time 0.2.27\",\n]\n\n[[package]]\nname = \"colorchoice\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"acbf1af155f9b9ef647e42cdc158db4b64a1b61f743629225fde6f3e0be2a7c7\"\n\n[[package]]\nname = \"colored\"\nversion = \"2.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cbf2150cce219b664a8a70df7a1f933836724b503f8a413af9365b4dcc4d90b8\"\ndependencies = [\n \"lazy_static\",\n \"windows-sys 0.48.0\",\n]\n\n[[package]]\nname = \"concurrent-queue\"\nversion = \"2.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d16048cd947b08fa32c24458a22f5dc5e835264f689f4f5653210c69fd107363\"\ndependencies = [\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"const-oid\"\nversion = \"0.9.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c2459377285ad874054d797f3ccebf984978aa39129f6eafde5cdc8315b612f8\"\n\n[[package]]\nname = \"const_fn\"\nversion = \"0.4.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fbdcdcb6d86f71c5e97409ad45898af11cbc995b4ee8112d59095a28d376c935\"\n\n[[package]]\nname = \"cookie\"\nversion = \"0.14.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"03a5d7b21829bc7b4bf4754a978a241ae54ea55a40f92bb20216e54096f4b951\"\ndependencies = [\n \"aes-gcm\",\n \"base64 0.13.1\",\n \"hkdf\",\n \"hmac\",\n \"percent-encoding\",\n \"rand 0.8.5\",\n \"sha2 0.9.9\",\n \"time 0.2.27\",\n \"version_check\",\n]\n\n[[package]]\nname = \"core-foundation\"\nversion = \"0.9.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"91e195e091a93c46f7102ec7818a2aa394e1e1771c3ab4825963fa03e45afb8f\"\ndependencies = [\n \"core-foundation-sys\",\n \"libc\",\n]\n\n[[package]]\nname = \"core-foundation-sys\"\nversion = \"0.8.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"06ea2b9bc92be3c2baa9334a323ebca2d6f074ff852cd1d7b11064035cd3868f\"\n\n[[package]]\nname = \"cpufeatures\"\nversion = \"0.2.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"53fe5e26ff1b7aef8bca9c6080520cfb8d9333c7568e1829cef191a9723e5504\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"cpuid-bool\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dcb25d077389e53838a8158c8e99174c5a9d902dee4904320db714f3c653ffba\"\n\n[[package]]\nname = \"crc32fast\"\nversion = \"1.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b3855a8a784b474f333699ef2bbca9db2c4a1f6d9088a90a2d25b1eb53111eaa\"\ndependencies = [\n \"cfg-if 1.0.0\",\n]\n\n[[package]]\nname = \"criterion\"\nversion = \"0.3.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b01d6de93b2b6c65e17c634a26653a29d107b3c98c607c765bf38d041531cd8f\"\ndependencies = [\n \"atty\",\n \"cast\",\n \"clap 2.34.0\",\n \"criterion-plot\",\n \"csv\",\n \"itertools\",\n \"lazy_static\",\n \"num-traits\",\n \"oorandom\",\n \"plotters\",\n \"rayon\",\n \"regex\",\n \"serde\",\n \"serde_cbor\",\n \"serde_derive\",\n \"serde_json\",\n \"tinytemplate\",\n \"walkdir\",\n]\n\n[[package]]\nname = \"criterion-plot\"\nversion = \"0.4.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2673cc8207403546f45f5fd319a974b1e6983ad1a3ee7e6041650013be041876\"\ndependencies = [\n \"cast\",\n \"itertools\",\n]\n\n[[package]]\nname = \"crossbeam-deque\"\nversion = \"0.8.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"613f8cc01fe9cf1a3eb3d7f488fd2fa8388403e97039e2f73692932e291a770d\"\ndependencies = [\n \"crossbeam-epoch\",\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"crossbeam-epoch\"\nversion = \"0.9.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5b82ac4a3c2ca9c3460964f020e1402edd5753411d7737aa39c3714ad1b5420e\"\ndependencies = [\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"crossbeam-utils\"\nversion = \"0.8.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"248e3bacc7dc6baa3b21e405ee045c3047101a49145e7e9eca583ab4c2ca5345\"\n\n[[package]]\nname = \"crypto-common\"\nversion = \"0.1.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1bfb12502f3fc46cca1bb51ac28df9d618d813cdc3d2f25b9fe775a34af26bb3\"\ndependencies = [\n \"generic-array 0.14.7\",\n \"typenum\",\n]\n\n[[package]]\nname = \"crypto-mac\"\nversion = \"0.10.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4857fd85a0c34b3c3297875b747c1e02e06b6a0ea32dd892d8192b9ce0813ea6\"\ndependencies = [\n \"generic-array 0.14.7\",\n \"subtle\",\n]\n\n[[package]]\nname = \"csv\"\nversion = \"1.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ac574ff4d437a7b5ad237ef331c17ccca63c46479e5b5453eb8e10bb99a759fe\"\ndependencies = [\n \"csv-core\",\n \"itoa\",\n \"ryu\",\n \"serde\",\n]\n\n[[package]]\nname = \"csv-core\"\nversion = \"0.1.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5efa2b3d7902f4b634a20cae3c9c4e6209dc4779feb6863329607560143efa70\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"ctr\"\nversion = \"0.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fb4a30d54f7443bf3d6191dcd486aca19e67cb3c49fa7a06a319966346707e7f\"\ndependencies = [\n \"cipher\",\n]\n\n[[package]]\nname = \"curve25519-dalek\"\nversion = \"2.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"26778518a7f6cffa1d25a44b602b62b979bd88adb9e99ffec546998cf3404839\"\ndependencies = [\n \"byteorder\",\n \"digest 0.8.1\",\n \"rand_core 0.5.1\",\n \"serde\",\n \"subtle\",\n \"zeroize\",\n]\n\n[[package]]\nname = \"curve25519-dalek\"\nversion = \"4.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0a677b8922c94e01bdbb12126b0bc852f00447528dee1782229af9c720c3f348\"\ndependencies = [\n \"cfg-if 1.0.0\",\n \"cpufeatures\",\n \"curve25519-dalek-derive\",\n \"digest 0.10.7\",\n \"fiat-crypto\",\n \"platforms\",\n \"rustc_version 0.4.0\",\n \"subtle\",\n \"zeroize\",\n]\n\n[[package]]\nname = \"curve25519-dalek-derive\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f46882e17999c6cc590af592290432be3bce0428cb0d5f8b6715e4dc7b383eb3\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.48\",\n]\n\n[[package]]\nname = \"data-encoding\"\nversion = \"2.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7e962a19be5cfc3f3bf6dd8f61eb50107f356ad6270fbb3ed41476571db78be5\"\n\n[[package]]\nname = \"der\"\nversion = \"0.7.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fffa369a668c8af7dbf8b5e56c9f744fbd399949ed171606040001947de40b1c\"\ndependencies = [\n \"const-oid\",\n \"zeroize\",\n]\n\n[[package]]\nname = \"deranged\"\nversion = \"0.3.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b42b6fa04a440b495c8b04d0e71b707c585f83cb9cb28cf8cd0d976c315e31b4\"\ndependencies = [\n \"powerfmt\",\n]\n\n[[package]]\nname = \"digest\"\nversion = \"0.8.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f3d0c8c8752312f9713efd397ff63acb9f85585afbf179282e720e7704954dd5\"\ndependencies = [\n \"generic-array 0.12.4\",\n]\n\n[[package]]\nname = \"digest\"\nversion = \"0.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d3dd60d1080a57a05ab032377049e0591415d2b31afd7028356dbf3cc6dcb066\"\ndependencies = [\n \"generic-array 0.14.7\",\n]\n\n[[package]]\nname = \"digest\"\nversion = \"0.10.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9ed9a281f7bc9b7576e61468ba615a66a5c8cfdff42420a70aa82701a3b1e292\"\ndependencies = [\n \"block-buffer 0.10.4\",\n \"crypto-common\",\n]\n\n[[package]]\nname = \"dirs-next\"\nversion = \"2.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b98cf8ebf19c3d1b223e151f99a4f9f0690dca41414773390fc824184ac833e1\"\ndependencies = [\n \"cfg-if 1.0.0\",\n \"dirs-sys-next\",\n]\n\n[[package]]\nname = \"dirs-sys-next\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4ebda144c4fe02d1f7ea1a7d9641b6fc6b580adcfa024ae48797ecdeb6825b4d\"\ndependencies = [\n \"libc\",\n \"redox_users\",\n \"winapi 0.3.9\",\n]\n\n[[package]]\nname = \"discard\"\nversion = \"1.0.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"212d0f5754cb6769937f4501cc0e67f4f4483c8d2c3e1e922ee9edbe4ab4c7c0\"\n\n[[package]]\nname = \"ed25519\"\nversion = \"2.2.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"115531babc129696a58c64a4fef0a8bf9e9698629fb97e9e40767d235cfbcd53\"\ndependencies = [\n \"pkcs8\",\n \"serde\",\n \"signature\",\n]\n\n[[package]]\nname = \"ed25519-dalek\"\nversion = \"2.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4a3daa8e81a3963a60642bcc1f90a670680bd4a77535faa384e9d1c79d620871\"\ndependencies = [\n \"curve25519-dalek 4.1.2\",\n \"ed25519\",\n \"rand_core 0.6.4\",\n \"serde\",\n \"sha2 0.10.8\",\n \"subtle\",\n \"zeroize\",\n]\n\n[[package]]\nname = \"either\"\nversion = \"1.10.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"11157ac094ffbdde99aa67b23417ebdd801842852b500e395a45a9c0aac03e4a\"\n\n[[package]]\nname = \"encoding_rs\"\nversion = \"0.8.33\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7268b386296a025e474d5140678f75d6de9493ae55a5d709eeb9dd08149945e1\"\ndependencies = [\n \"cfg-if 1.0.0\",\n]\n\n[[package]]\nname = \"equivalent\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5443807d6dff69373d433ab9ef5378ad8df50ca6298caf15de6e52e24aaf54d5\"\n\n[[package]]\nname = \"errno\"\nversion = \"0.3.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a258e46cdc063eb8519c00b9fc845fc47bcfca4130e2f08e88665ceda8474245\"\ndependencies = [\n \"libc\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"event-listener\"\nversion = \"2.5.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0206175f82b8d6bf6652ff7d71a1e27fd2e4efde587fd368662814d6ec1d9ce0\"\n\n[[package]]\nname = \"event-listener\"\nversion = \"4.0.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"67b215c49b2b248c855fb73579eb1f4f26c38ffdc12973e20e07b91d78d5646e\"\ndependencies = [\n \"concurrent-queue\",\n \"parking\",\n \"pin-project-lite\",\n]\n\n[[package]]\nname = \"event-listener\"\nversion = \"5.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b72557800024fabbaa2449dd4bf24e37b93702d457a4d4f2b0dd1f0f039f20c1\"\ndependencies = [\n \"concurrent-queue\",\n \"parking\",\n \"pin-project-lite\",\n]\n\n[[package]]\nname = \"event-listener-strategy\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"958e4d70b6d5e81971bebec42271ec641e7ff4e170a6fa605f2b8a8b65cb97d3\"\ndependencies = [\n \"event-listener 4.0.3\",\n \"pin-project-lite\",\n]\n\n[[package]]\nname = \"event-listener-strategy\"\nversion = \"0.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"feedafcaa9b749175d5ac357452a9d41ea2911da598fde46ce1fe02c37751291\"\ndependencies = [\n \"event-listener 5.0.0\",\n \"pin-project-lite\",\n]\n\n[[package]]\nname = \"extend\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f47da3a72ec598d9c8937a7ebca8962a5c7a1f28444e38c2b33c771ba3f55f05\"\ndependencies = [\n \"proc-macro-error\",\n \"proc-macro2\",\n \"quote\",\n \"syn 1.0.109\",\n]\n\n[[package]]\nname = \"fallible-iterator\"\nversion = \"0.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2acce4a10f12dc2fb14a218589d4f1f62ef011b2d0cc4b3cb1bba8e94da14649\"\n\n[[package]]\nname = \"fallible-streaming-iterator\"\nversion = \"0.1.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7360491ce676a36bf9bb3c56c1aa791658183a54d2744120f27285738d90465a\"\n\n[[package]]\nname = \"fastrand\"\nversion = \"1.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e51093e27b0797c359783294ca4f0a911c270184cb10f85783b118614a1501be\"\ndependencies = [\n \"instant\",\n]\n\n[[package]]\nname = \"fastrand\"\nversion = \"2.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"25cbce373ec4653f1a01a31e8a5e5ec0c622dc27ff9c4e6606eefef5cbbed4a5\"\n\n[[package]]\nname = \"fiat-crypto\"\nversion = \"0.2.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1676f435fc1dadde4d03e43f5d62b259e1ce5f40bd4ffb21db2b42ebe59c1382\"\n\n[[package]]\nname = \"fnv\"\nversion = \"1.0.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3f9eec918d3f24069decb9af1554cad7c880e2da24a9afd88aca000531ab82c1\"\n\n[[package]]\nname = \"form_urlencoded\"\nversion = \"1.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e13624c2627564efccf4934284bdd98cbaa14e79b0b5a141218e507b3a823456\"\ndependencies = [\n \"percent-encoding\",\n]\n\n[[package]]\nname = \"fuchsia-zircon\"\nversion = \"0.3.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2e9763c69ebaae630ba35f74888db465e49e259ba1bc0eda7d06f4a067615d82\"\ndependencies = [\n \"bitflags 1.3.2\",\n \"fuchsia-zircon-sys\",\n]\n\n[[package]]\nname = \"fuchsia-zircon-sys\"\nversion = \"0.3.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3dcaa9ae7725d12cdb85b3ad99a434db70b468c09ded17e012d86b5c1010f7a7\"\n\n[[package]]\nname = \"futures\"\nversion = \"0.3.30\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"645c6916888f6cb6350d2550b80fb63e734897a8498abe35cfb732b6487804b0\"\ndependencies = [\n \"futures-channel\",\n \"futures-core\",\n \"futures-executor\",\n \"futures-io\",\n \"futures-sink\",\n \"futures-task\",\n \"futures-util\",\n]\n\n[[package]]\nname = \"futures-channel\"\nversion = \"0.3.30\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"eac8f7d7865dcb88bd4373ab671c8cf4508703796caa2b1985a9ca867b3fcb78\"\ndependencies = [\n \"futures-core\",\n \"futures-sink\",\n]\n\n[[package]]\nname = \"futures-core\"\nversion = \"0.3.30\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dfc6580bb841c5a68e9ef15c77ccc837b40a7504914d52e47b8b0e9bbda25a1d\"\n\n[[package]]\nname = \"futures-executor\"\nversion = \"0.3.30\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a576fc72ae164fca6b9db127eaa9a9dda0d61316034f33a0a0d4eda41f02b01d\"\ndependencies = [\n \"futures-core\",\n \"futures-task\",\n \"futures-util\",\n]\n\n[[package]]\nname = \"futures-io\"\nversion = \"0.3.30\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a44623e20b9681a318efdd71c299b6b222ed6f231972bfe2f224ebad6311f0c1\"\n\n[[package]]\nname = \"futures-lite\"\nversion = \"1.13.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"49a9d51ce47660b1e808d3c990b4709f2f415d928835a17dfd16991515c46bce\"\ndependencies = [\n \"fastrand 1.9.0\",\n \"futures-core\",\n \"futures-io\",\n \"memchr\",\n \"parking\",\n \"pin-project-lite\",\n \"waker-fn\",\n]\n\n[[package]]\nname = \"futures-lite\"\nversion = \"2.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"445ba825b27408685aaecefd65178908c36c6e96aaf6d8599419d46e624192ba\"\ndependencies = [\n \"fastrand 2.0.1\",\n \"futures-core\",\n \"futures-io\",\n \"parking\",\n \"pin-project-lite\",\n]\n\n[[package]]\nname = \"futures-macro\"\nversion = \"0.3.30\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"87750cf4b7a4c0625b1529e4c543c2182106e4dedc60a2a6455e00d212c489ac\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.48\",\n]\n\n[[package]]\nname = \"futures-sink\"\nversion = \"0.3.30\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9fb8e00e87438d937621c1c6269e53f536c14d3fbd6a042bb24879e57d474fb5\"\n\n[[package]]\nname = \"futures-task\"\nversion = \"0.3.30\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"38d84fa142264698cdce1a9f9172cf383a0c82de1bddcf3092901442c4097004\"\n\n[[package]]\nname = \"futures-timer\"\nversion = \"3.0.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e64b03909df88034c26dc1547e8970b91f98bdb65165d6a4e9110d94263dbb2c\"\n\n[[package]]\nname = \"futures-util\"\nversion = \"0.3.30\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3d6401deb83407ab3da39eba7e33987a73c3df0c82b4bb5813ee871c19c41d48\"\ndependencies = [\n \"futures-channel\",\n \"futures-core\",\n \"futures-io\",\n \"futures-macro\",\n \"futures-sink\",\n \"futures-task\",\n \"memchr\",\n \"pin-project-lite\",\n \"pin-utils\",\n \"slab\",\n]\n\n[[package]]\nname = \"generic-array\"\nversion = \"0.12.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ffdf9f34f1447443d37393cc6c2b8313aebddcd96906caf34e54c68d8e57d7bd\"\ndependencies = [\n \"typenum\",\n]\n\n[[package]]\nname = \"generic-array\"\nversion = \"0.14.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"85649ca51fd72272d7821adaf274ad91c288277713d9c18820d8499a7ff69e9a\"\ndependencies = [\n \"typenum\",\n \"version_check\",\n]\n\n[[package]]\nname = \"getrandom\"\nversion = \"0.1.16\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8fc3cb4d91f53b50155bdcfd23f6a4c39ae1969c2ae85982b135750cccaf5fce\"\ndependencies = [\n \"cfg-if 1.0.0\",\n \"libc\",\n \"wasi 0.9.0+wasi-snapshot-preview1\",\n]\n\n[[package]]\nname = \"getrandom\"\nversion = \"0.2.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"190092ea657667030ac6a35e305e62fc4dd69fd98ac98631e5d3a2b1575a12b5\"\ndependencies = [\n \"cfg-if 1.0.0\",\n \"libc\",\n \"wasi 0.11.0+wasi-snapshot-preview1\",\n]\n\n[[package]]\nname = \"ghash\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"97304e4cd182c3846f7575ced3890c53012ce534ad9114046b0a9e00bb30a375\"\ndependencies = [\n \"opaque-debug\",\n \"polyval\",\n]\n\n[[package]]\nname = \"gimli\"\nversion = \"0.28.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4271d37baee1b8c7e4b708028c57d816cf9d2434acb33a549475f78c181f6253\"\n\n[[package]]\nname = \"gloo-timers\"\nversion = \"0.2.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9b995a66bb87bebce9a0f4a95aed01daca4872c050bfcb21653361c03bc35e5c\"\ndependencies = [\n \"futures-channel\",\n \"futures-core\",\n \"js-sys\",\n \"wasm-bindgen\",\n]\n\n[[package]]\nname = \"h2\"\nversion = \"0.3.24\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bb2c4422095b67ee78da96fbb51a4cc413b3b25883c7717ff7ca1ab31022c9c9\"\ndependencies = [\n \"bytes\",\n \"fnv\",\n \"futures-core\",\n \"futures-sink\",\n \"futures-util\",\n \"http 0.2.11\",\n \"indexmap\",\n \"slab\",\n \"tokio\",\n \"tokio-util\",\n \"tracing\",\n]\n\n[[package]]\nname = \"h2\"\nversion = \"0.4.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"524e8ac6999421f49a846c2d4411f337e53497d8ec55d67753beffa43c5d9205\"\ndependencies = [\n \"atomic-waker\",\n \"bytes\",\n \"fnv\",\n \"futures-core\",\n \"futures-sink\",\n \"http 1.1.0\",\n \"indexmap\",\n \"slab\",\n \"tokio\",\n \"tokio-util\",\n \"tracing\",\n]\n\n[[package]]\nname = \"half\"\nversion = \"1.8.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"eabb4a44450da02c90444cf74558da904edde8fb4e9035a9a6a4e15445af0bd7\"\n\n[[package]]\nname = \"hashbrown\"\nversion = \"0.14.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"290f1a1d9242c78d09ce40a5e87e7554ee637af1351968159f4952f028f75604\"\ndependencies = [\n \"ahash\",\n \"allocator-api2\",\n \"serde\",\n]\n\n[[package]]\nname = \"hashlink\"\nversion = \"0.9.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6ba4ff7128dee98c7dc9794b6a411377e1404dba1c97deb8d1a55297bd25d8af\"\ndependencies = [\n \"hashbrown\",\n]\n\n[[package]]\nname = \"headers\"\nversion = \"0.3.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"06683b93020a07e3dbcf5f8c0f6d40080d725bea7936fc01ad345c01b97dc270\"\ndependencies = [\n \"base64 0.21.7\",\n \"bytes\",\n \"headers-core\",\n \"http 0.2.11\",\n \"httpdate\",\n \"mime\",\n \"sha1 0.10.6\",\n]\n\n[[package]]\nname = \"headers-core\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e7f66481bfee273957b1f20485a4ff3362987f85b2c236580d81b4eb7a326429\"\ndependencies = [\n \"http 0.2.11\",\n]\n\n[[package]]\nname = \"heck\"\nversion = \"0.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"95505c38b4572b2d910cecb0281560f54b440a19336cbbcb27bf6ce6adc6f5a8\"\n\n[[package]]\nname = \"hermit-abi\"\nversion = \"0.1.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"62b467343b94ba476dcb2500d242dadbb39557df889310ac77c5d99100aaac33\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"hermit-abi\"\nversion = \"0.3.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bd5256b483761cd23699d0da46cc6fd2ee3be420bbe6d020ae4a091e70b7e9fd\"\n\n[[package]]\nname = \"hkdf\"\nversion = \"0.10.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"51ab2f639c231793c5f6114bdb9bbe50a7dbbfcd7c7c6bd8475dec2d991e964f\"\ndependencies = [\n \"digest 0.9.0\",\n \"hmac\",\n]\n\n[[package]]\nname = \"hmac\"\nversion = \"0.10.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c1441c6b1e930e2817404b5046f1f989899143a12bf92de603b69f4e0aee1e15\"\ndependencies = [\n \"crypto-mac\",\n \"digest 0.9.0\",\n]\n\n[[package]]\nname = \"http\"\nversion = \"0.2.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8947b1a6fad4393052c7ba1f4cd97bed3e953a95c79c92ad9b051a04611d9fbb\"\ndependencies = [\n \"bytes\",\n \"fnv\",\n \"itoa\",\n]\n\n[[package]]\nname = \"http\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"21b9ddb458710bc376481b842f5da65cdf31522de232c1ca8146abce2a358258\"\ndependencies = [\n \"bytes\",\n \"fnv\",\n \"itoa\",\n]\n\n[[package]]\nname = \"http-body\"\nversion = \"0.4.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7ceab25649e9960c0311ea418d17bee82c0dcec1bd053b5f9a66e265a693bed2\"\ndependencies = [\n \"bytes\",\n \"http 0.2.11\",\n \"pin-project-lite\",\n]\n\n[[package]]\nname = \"http-body\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1efedce1fb8e6913f23e0c92de8e62cd5b772a67e7b3946df930a62566c93184\"\ndependencies = [\n \"bytes\",\n \"http 1.1.0\",\n]\n\n[[package]]\nname = \"http-body-util\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"793429d76616a256bcb62c2a2ec2bed781c8307e797e2598c50010f2bee2544f\"\ndependencies = [\n \"bytes\",\n \"futures-util\",\n \"http 1.1.0\",\n \"http-body 1.0.1\",\n \"pin-project-lite\",\n]\n\n[[package]]\nname = \"http-types\"\nversion = \"2.12.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6e9b187a72d63adbfba487f48095306ac823049cb504ee195541e91c7775f5ad\"\ndependencies = [\n \"anyhow\",\n \"async-channel 1.9.0\",\n \"async-std\",\n \"base64 0.13.1\",\n \"cookie\",\n \"futures-lite 1.13.0\",\n \"infer\",\n \"pin-project-lite\",\n \"rand 0.7.3\",\n \"serde\",\n \"serde_json\",\n \"serde_qs\",\n \"serde_urlencoded\",\n \"url\",\n]\n\n[[package]]\nname = \"httparse\"\nversion = \"1.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d897f394bad6a705d5f4104762e116a75639e470d80901eed05a860a95cb1904\"\n\n[[package]]\nname = \"httpdate\"\nversion = \"1.0.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"df3b46402a9d5adb4c86a0cf463f42e19994e3ee891101b1841f30a545cb49a9\"\n\n[[package]]\nname = \"hyper\"\nversion = \"0.14.28\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bf96e135eb83a2a8ddf766e426a841d8ddd7449d5f00d34ea02b41d2f19eef80\"\ndependencies = [\n \"bytes\",\n \"futures-channel\",\n \"futures-core\",\n \"futures-util\",\n \"h2 0.3.24\",\n \"http 0.2.11\",\n \"http-body 0.4.6\",\n \"httparse\",\n \"httpdate\",\n \"itoa\",\n \"pin-project-lite\",\n \"socket2 0.5.5\",\n \"tokio\",\n \"tower-service\",\n \"tracing\",\n \"want\",\n]\n\n[[package]]\nname = \"hyper\"\nversion = \"1.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"50dfd22e0e76d0f662d429a5f80fcaf3855009297eab6a0a9f8543834744ba05\"\ndependencies = [\n \"bytes\",\n \"futures-channel\",\n \"futures-util\",\n \"h2 0.4.6\",\n \"http 1.1.0\",\n \"http-body 1.0.1\",\n \"httparse\",\n \"httpdate\",\n \"itoa\",\n \"pin-project-lite\",\n \"smallvec\",\n \"tokio\",\n]\n\n[[package]]\nname = \"hyper-rustls\"\nversion = \"0.24.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ec3efd23720e2049821a693cbc7e65ea87c72f1c58ff2f9522ff332b1491e590\"\ndependencies = [\n \"futures-util\",\n \"http 0.2.11\",\n \"hyper 0.14.28\",\n \"rustls\",\n \"tokio\",\n \"tokio-rustls\",\n]\n\n[[package]]\nname = \"hyper-util\"\nversion = \"0.1.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cde7055719c54e36e95e8719f95883f22072a48ede39db7fc17a4e1d5281e9b9\"\ndependencies = [\n \"bytes\",\n \"futures-util\",\n \"http 1.1.0\",\n \"http-body 1.0.1\",\n \"hyper 1.4.1\",\n \"pin-project-lite\",\n \"tokio\",\n]\n\n[[package]]\nname = \"iana-time-zone\"\nversion = \"0.1.60\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e7ffbb5a1b541ea2561f8c41c087286cc091e21e556a4f09a8f6cbf17b69b141\"\ndependencies = [\n \"android_system_properties\",\n \"core-foundation-sys\",\n \"iana-time-zone-haiku\",\n \"js-sys\",\n \"wasm-bindgen\",\n \"windows-core\",\n]\n\n[[package]]\nname = \"iana-time-zone-haiku\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f31827a206f56af32e590ba56d5d2d085f558508192593743f16b2306495269f\"\ndependencies = [\n \"cc\",\n]\n\n[[package]]\nname = \"idna\"\nversion = \"0.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"634d9b1461af396cad843f47fdba5597a4f9e6ddd4bfb6ff5d85028c25cb12f6\"\ndependencies = [\n \"unicode-bidi\",\n \"unicode-normalization\",\n]\n\n[[package]]\nname = \"indexmap\"\nversion = \"2.2.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"233cf39063f058ea2caae4091bf4a3ef70a653afbc026f5c4a4135d114e3c177\"\ndependencies = [\n \"equivalent\",\n \"hashbrown\",\n]\n\n[[package]]\nname = \"infer\"\nversion = \"0.2.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"64e9829a50b42bb782c1df523f78d332fe371b10c661e78b7a3c34b0198e9fac\"\n\n[[package]]\nname = \"instant\"\nversion = \"0.1.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7a5bbe824c507c5da5956355e86a746d82e0e1464f65d862cc5e71da70e94b2c\"\ndependencies = [\n \"cfg-if 1.0.0\",\n]\n\n[[package]]\nname = \"integer-sqrt\"\nversion = \"0.1.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"276ec31bcb4a9ee45f58bec6f9ec700ae4cf4f4f8f2fa7e06cb406bd5ffdd770\"\ndependencies = [\n \"num-traits\",\n]\n\n[[package]]\nname = \"io-lifetimes\"\nversion = \"1.0.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"eae7b9aee968036d54dce06cebaefd919e4472e753296daccd6d344e3e2df0c2\"\ndependencies = [\n \"hermit-abi 0.3.6\",\n \"libc\",\n \"windows-sys 0.48.0\",\n]\n\n[[package]]\nname = \"iovec\"\nversion = \"0.1.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b2b3ea6ff95e175473f8ffe6a7eb7c00d054240321b84c57051175fe3c1e075e\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"ipnet\"\nversion = \"2.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8f518f335dce6725a761382244631d86cf0ccb2863413590b31338feb467f9c3\"\n\n[[package]]\nname = \"itertools\"\nversion = \"0.10.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b0fd2260e829bddf4cb6ea802289de2f86d6a7a690192fbe91b3f46e0f2c8473\"\ndependencies = [\n \"either\",\n]\n\n[[package]]\nname = \"itoa\"\nversion = \"1.0.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b1a46d1a171d865aa5f83f92695765caa047a9b4cbae2cbf37dbd613a793fd4c\"\n\n[[package]]\nname = \"js-sys\"\nversion = \"0.3.68\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"406cda4b368d531c842222cf9d2600a9a4acce8d29423695379c6868a143a9ee\"\ndependencies = [\n \"wasm-bindgen\",\n]\n\n[[package]]\nname = \"keccak\"\nversion = \"0.1.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ecc2af9a1119c51f12a14607e783cb977bde58bc069ff0c3da1095e635d70654\"\ndependencies = [\n \"cpufeatures\",\n]\n\n[[package]]\nname = \"kernel32-sys\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7507624b29483431c0ba2d82aece8ca6cdba9382bff4ddd0f7490560c056098d\"\ndependencies = [\n \"winapi 0.2.8\",\n \"winapi-build\",\n]\n\n[[package]]\nname = \"kv-log-macro\"\nversion = \"1.0.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0de8b303297635ad57c9f5059fd9cee7a47f8e8daa09df0fcd07dd39fb22977f\"\ndependencies = [\n \"log\",\n]\n\n[[package]]\nname = \"lazy_static\"\nversion = \"1.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e2abad23fbc42b3700f2f279844dc832adb2b2eb069b2df918f455c4e18cc646\"\n\n[[package]]\nname = \"libc\"\nversion = \"0.2.153\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9c198f91728a82281a64e1f4f9eeb25d82cb32a5de251c6bd1b5154d63a8e7bd\"\n\n[[package]]\nname = \"libflate\"\nversion = \"1.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5ff4ae71b685bbad2f2f391fe74f6b7659a34871c08b210fdc039e43bee07d18\"\ndependencies = [\n \"adler32\",\n \"crc32fast\",\n \"libflate_lz77\",\n]\n\n[[package]]\nname = \"libflate_lz77\"\nversion = \"1.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a52d3a8bfc85f250440e4424db7d857e241a3aebbbe301f3eb606ab15c39acbf\"\ndependencies = [\n \"rle-decode-fast\",\n]\n\n[[package]]\nname = \"libredox\"\nversion = \"0.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"85c833ca1e66078851dba29046874e38f08b2c883700aa29a03ddd3b23814ee8\"\ndependencies = [\n \"bitflags 2.4.2\",\n \"libc\",\n \"redox_syscall 0.4.1\",\n]\n\n[[package]]\nname = \"libsigner\"\nversion = \"0.0.1\"\ndependencies = [\n \"clarity\",\n \"hashbrown\",\n \"lazy_static\",\n \"libc\",\n \"libstackerdb\",\n \"mutants\",\n \"prometheus\",\n \"rand 0.8.5\",\n \"rand_core 0.6.4\",\n \"secp256k1\",\n \"serde\",\n \"serde_derive\",\n \"serde_json\",\n \"serde_stacker\",\n \"sha2 0.10.8\",\n \"slog\",\n \"slog-json\",\n \"slog-term\",\n \"stacks-common\",\n \"stackslib\",\n \"thiserror\",\n \"tiny_http\",\n]\n\n[[package]]\nname = \"libsqlite3-sys\"\nversion = \"0.28.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0c10584274047cb335c23d3e61bcef8e323adae7c5c8c760540f73610177fc3f\"\ndependencies = [\n \"cc\",\n \"pkg-config\",\n \"vcpkg\",\n]\n\n[[package]]\nname = \"libstackerdb\"\nversion = \"0.0.1\"\ndependencies = [\n \"clarity\",\n \"secp256k1\",\n \"serde\",\n \"serde_derive\",\n \"serde_stacker\",\n \"sha2 0.10.8\",\n \"stacks-common\",\n]\n\n[[package]]\nname = \"linux-raw-sys\"\nversion = \"0.3.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ef53942eb7bf7ff43a617b3e2c1c4a5ecf5944a7c1bc12d7ee39bbb15e5c1519\"\n\n[[package]]\nname = \"linux-raw-sys\"\nversion = \"0.4.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"01cda141df6706de531b6c46c3a33ecca755538219bd484262fa09410c13539c\"\n\n[[package]]\nname = \"lock_api\"\nversion = \"0.4.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"07af8b9cdd281b7915f413fa73f29ebd5d55d0d3f0155584dade1ff18cea1b17\"\ndependencies = [\n \"autocfg\",\n \"scopeguard\",\n]\n\n[[package]]\nname = \"log\"\nversion = \"0.4.20\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b5e6163cb8c49088c2c36f57875e58ccd8c87c7427f7fbd50ea6710b2f3f2e8f\"\ndependencies = [\n \"value-bag\",\n]\n\n[[package]]\nname = \"matchers\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8263075bb86c5a1b1427b5ae862e8889656f126e9f77c484496e8b47cf5c5558\"\ndependencies = [\n \"regex-automata 0.1.10\",\n]\n\n[[package]]\nname = \"memchr\"\nversion = \"2.7.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"523dc4f511e55ab87b694dc30d0f820d60906ef06413f93d4d7a1385599cc149\"\n\n[[package]]\nname = \"memoffset\"\nversion = \"0.6.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5aa361d4faea93603064a027415f07bd8e1d5c88c9fbf68bf56a285428fd79ce\"\ndependencies = [\n \"autocfg\",\n]\n\n[[package]]\nname = \"mime\"\nversion = \"0.3.17\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6877bb514081ee2a7ff5ef9de3281f14a4dd4bceac4c09388074a6b5df8a139a\"\n\n[[package]]\nname = \"mime_guess\"\nversion = \"2.0.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4192263c238a5f0d0c6bfd21f336a313a4ce1c450542449ca191bb657b4642ef\"\ndependencies = [\n \"mime\",\n \"unicase\",\n]\n\n[[package]]\nname = \"miniz_oxide\"\nversion = \"0.7.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9d811f3e15f28568be3407c8e7fdb6514c1cda3cb30683f15b6a1a1dc4ea14a7\"\ndependencies = [\n \"adler\",\n]\n\n[[package]]\nname = \"mio\"\nversion = \"0.6.23\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4afd66f5b91bf2a3bc13fad0e21caedac168ca4c707504e75585648ae80e4cc4\"\ndependencies = [\n \"cfg-if 0.1.10\",\n \"fuchsia-zircon\",\n \"fuchsia-zircon-sys\",\n \"iovec\",\n \"kernel32-sys\",\n \"libc\",\n \"log\",\n \"miow\",\n \"net2\",\n \"slab\",\n \"winapi 0.2.8\",\n]\n\n[[package]]\nname = \"mio\"\nversion = \"0.8.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8f3d0b296e374a4e6f3c7b0a1f5a51d748a0d34c85e7dc48fc3fa9a87657fe09\"\ndependencies = [\n \"libc\",\n \"wasi 0.11.0+wasi-snapshot-preview1\",\n \"windows-sys 0.48.0\",\n]\n\n[[package]]\nname = \"miow\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ebd808424166322d4a38da87083bfddd3ac4c131334ed55856112eb06d46944d\"\ndependencies = [\n \"kernel32-sys\",\n \"net2\",\n \"winapi 0.2.8\",\n \"ws2_32-sys\",\n]\n\n[[package]]\nname = \"mockito\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"09b34bd91b9e5c5b06338d392463e1318d683cf82ec3d3af4014609be6e2108d\"\ndependencies = [\n \"assert-json-diff 2.0.2\",\n \"bytes\",\n \"colored\",\n \"futures-util\",\n \"http 1.1.0\",\n \"http-body 1.0.1\",\n \"http-body-util\",\n \"hyper 1.4.1\",\n \"hyper-util\",\n \"log\",\n \"rand 0.8.5\",\n \"regex\",\n \"serde_json\",\n \"serde_urlencoded\",\n \"similar\",\n \"tokio\",\n]\n\n[[package]]\nname = \"multer\"\nversion = \"2.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"01acbdc23469fd8fe07ab135923371d5f5a422fbf9c522158677c8eb15bc51c2\"\ndependencies = [\n \"bytes\",\n \"encoding_rs\",\n \"futures-util\",\n \"http 0.2.11\",\n \"httparse\",\n \"log\",\n \"memchr\",\n \"mime\",\n \"spin 0.9.8\",\n \"version_check\",\n]\n\n[[package]]\nname = \"mutants\"\nversion = \"0.0.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bc0287524726960e07b119cebd01678f852f147742ae0d925e6a520dca956126\"\n\n[[package]]\nname = \"net2\"\nversion = \"0.2.39\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b13b648036a2339d06de780866fbdfda0dde886de7b3af2ddeba8b14f4ee34ac\"\ndependencies = [\n \"cfg-if 0.1.10\",\n \"libc\",\n \"winapi 0.3.9\",\n]\n\n[[package]]\nname = \"nix\"\nversion = \"0.23.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8f3790c00a0150112de0f4cd161e3d7fc4b2d8a5542ffc35f099a2562aecb35c\"\ndependencies = [\n \"bitflags 1.3.2\",\n \"cc\",\n \"cfg-if 1.0.0\",\n \"libc\",\n \"memoffset\",\n]\n\n[[package]]\nname = \"nu-ansi-term\"\nversion = \"0.46.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"77a8165726e8236064dbb45459242600304b42a5ea24ee2948e18e023bf7ba84\"\ndependencies = [\n \"overload\",\n \"winapi 0.3.9\",\n]\n\n[[package]]\nname = \"num-conv\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"51d515d32fb182ee37cda2ccdcb92950d6a3c2893aa280e540671c2cd0f3b1d9\"\n\n[[package]]\nname = \"num-traits\"\nversion = \"0.2.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"da0df0e5185db44f69b44f26786fe401b6c293d1907744beaa7fa62b2e5a517a\"\ndependencies = [\n \"autocfg\",\n]\n\n[[package]]\nname = \"num_cpus\"\nversion = \"1.16.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4161fcb6d602d4d2081af7c3a45852d875a03dd337a6bfdd6e06407b61342a43\"\ndependencies = [\n \"hermit-abi 0.3.6\",\n \"libc\",\n]\n\n[[package]]\nname = \"num_threads\"\nversion = \"0.1.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2819ce041d2ee131036f4fc9d6ae7ae125a3a40e97ba64d04fe799ad9dabbb44\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"object\"\nversion = \"0.32.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a6a622008b6e321afc04970976f62ee297fdbaa6f95318ca343e3eebb9648441\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"once_cell\"\nversion = \"1.19.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3fdb12b2476b595f9358c5161aa467c2438859caa136dec86c26fdd2efe17b92\"\n\n[[package]]\nname = \"oorandom\"\nversion = \"11.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0ab1bc2a289d34bd04a330323ac98a1b4bc82c9d9fcb1e66b63caa84da26b575\"\n\n[[package]]\nname = \"opaque-debug\"\nversion = \"0.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"624a8340c38c1b80fd549087862da4ba43e08858af025b236e509b6649fc13d5\"\n\n[[package]]\nname = \"overload\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b15813163c1d831bf4a13c3610c05c0d03b39feb07f7e09fa234dac9b15aaf39\"\n\n[[package]]\nname = \"parking\"\nversion = \"2.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bb813b8af86854136c6922af0598d719255ecb2179515e6e7730d468f05c9cae\"\n\n[[package]]\nname = \"parking_lot\"\nversion = \"0.12.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f1bf18183cf54e8d6059647fc3063646a1801cf30896933ec2311622cc4b9a27\"\ndependencies = [\n \"lock_api\",\n \"parking_lot_core\",\n]\n\n[[package]]\nname = \"parking_lot_core\"\nversion = \"0.9.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1e401f977ab385c9e4e3ab30627d6f26d00e2c73eef317493c4ec6d468726cf8\"\ndependencies = [\n \"cfg-if 1.0.0\",\n \"libc\",\n \"redox_syscall 0.5.7\",\n \"smallvec\",\n \"windows-targets 0.52.0\",\n]\n\n[[package]]\nname = \"percent-encoding\"\nversion = \"2.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e3148f5046208a5d56bcfc03053e3ca6334e51da8dfb19b6cdc8b306fae3283e\"\n\n[[package]]\nname = \"pest\"\nversion = \"2.7.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"219c0dcc30b6a27553f9cc242972b67f75b60eb0db71f0b5462f38b058c41546\"\ndependencies = [\n \"memchr\",\n \"thiserror\",\n \"ucd-trie\",\n]\n\n[[package]]\nname = \"pico-args\"\nversion = \"0.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5be167a7af36ee22fe3115051bc51f6e6c7054c9348e28deb4f49bd6f705a315\"\n\n[[package]]\nname = \"pin-project\"\nversion = \"1.1.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0302c4a0442c456bd56f841aee5c3bfd17967563f6fadc9ceb9f9c23cf3807e0\"\ndependencies = [\n \"pin-project-internal\",\n]\n\n[[package]]\nname = \"pin-project-internal\"\nversion = \"1.1.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"266c042b60c9c76b8d53061e52b2e0d1116abc57cefc8c5cd671619a56ac3690\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.48\",\n]\n\n[[package]]\nname = \"pin-project-lite\"\nversion = \"0.2.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8afb450f006bf6385ca15ef45d71d2288452bc3683ce2e2cacc0d18e4be60b58\"\n\n[[package]]\nname = \"pin-utils\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8b870d8c151b6f2fb93e84a13146138f05d02ed11c7e7c54f8826aaaf7c9f184\"\n\n[[package]]\nname = \"piper\"\nversion = \"0.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"668d31b1c4eba19242f2088b2bf3316b82ca31082a8335764db4e083db7485d4\"\ndependencies = [\n \"atomic-waker\",\n \"fastrand 2.0.1\",\n \"futures-io\",\n]\n\n[[package]]\nname = \"pkcs8\"\nversion = \"0.10.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f950b2377845cebe5cf8b5165cb3cc1a5e0fa5cfa3e1f7f55707d8fd82e0a7b7\"\ndependencies = [\n \"der\",\n \"spki\",\n]\n\n[[package]]\nname = \"pkg-config\"\nversion = \"0.3.30\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d231b230927b5e4ad203db57bbcbee2802f6bce620b1e4a9024a07d94e2907ec\"\n\n[[package]]\nname = \"platforms\"\nversion = \"3.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"626dec3cac7cc0e1577a2ec3fc496277ec2baa084bebad95bb6fdbfae235f84c\"\n\n[[package]]\nname = \"plotters\"\nversion = \"0.3.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d2c224ba00d7cadd4d5c660deaf2098e5e80e07846537c51f9cfa4be50c1fd45\"\ndependencies = [\n \"num-traits\",\n \"plotters-backend\",\n \"plotters-svg\",\n \"wasm-bindgen\",\n \"web-sys\",\n]\n\n[[package]]\nname = \"plotters-backend\"\nversion = \"0.3.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9e76628b4d3a7581389a35d5b6e2139607ad7c75b17aed325f210aa91f4a9609\"\n\n[[package]]\nname = \"plotters-svg\"\nversion = \"0.3.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"38f6d39893cca0701371e3c27294f09797214b86f1fb951b89ade8ec04e2abab\"\ndependencies = [\n \"plotters-backend\",\n]\n\n[[package]]\nname = \"polling\"\nversion = \"2.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4b2d323e8ca7996b3e23126511a523f7e62924d93ecd5ae73b333815b0eb3dce\"\ndependencies = [\n \"autocfg\",\n \"bitflags 1.3.2\",\n \"cfg-if 1.0.0\",\n \"concurrent-queue\",\n \"libc\",\n \"log\",\n \"pin-project-lite\",\n \"windows-sys 0.48.0\",\n]\n\n[[package]]\nname = \"polling\"\nversion = \"3.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"30054e72317ab98eddd8561db0f6524df3367636884b7b21b703e4b280a84a14\"\ndependencies = [\n \"cfg-if 1.0.0\",\n \"concurrent-queue\",\n \"pin-project-lite\",\n \"rustix 0.38.31\",\n \"tracing\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"polynomial\"\nversion = \"0.2.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"27abb6e4638dcecc65a92b50d7f1d87dd6dea987ba71db987b6bf881f4877e9d\"\ndependencies = [\n \"num-traits\",\n]\n\n[[package]]\nname = \"polyval\"\nversion = \"0.4.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"eebcc4aa140b9abd2bc40d9c3f7ccec842679cd79045ac3a7ac698c1a064b7cd\"\ndependencies = [\n \"cpuid-bool\",\n \"opaque-debug\",\n \"universal-hash\",\n]\n\n[[package]]\nname = \"powerfmt\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"439ee305def115ba05938db6eb1644ff94165c5ab5e9420d1c1bcedbba909391\"\n\n[[package]]\nname = \"pox-locking\"\nversion = \"2.4.0\"\ndependencies = [\n \"clarity\",\n \"mutants\",\n \"slog\",\n \"stacks-common\",\n]\n\n[[package]]\nname = \"ppv-lite86\"\nversion = \"0.2.17\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5b40af805b3121feab8a3c29f04d8ad262fa8e0561883e7653e024ae4479e6de\"\n\n[[package]]\nname = \"proc-macro-error\"\nversion = \"1.0.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"da25490ff9892aab3fcf7c36f08cfb902dd3e71ca0f9f9517bea02a73a5ce38c\"\ndependencies = [\n \"proc-macro-error-attr\",\n \"proc-macro2\",\n \"quote\",\n \"syn 1.0.109\",\n \"version_check\",\n]\n\n[[package]]\nname = \"proc-macro-error-attr\"\nversion = \"1.0.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a1be40180e52ecc98ad80b184934baf3d0d29f979574e439af5a55274b35f869\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"version_check\",\n]\n\n[[package]]\nname = \"proc-macro-hack\"\nversion = \"0.5.20+deprecated\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dc375e1527247fe1a97d8b7156678dfe7c1af2fc075c9a4db3690ecd2a148068\"\n\n[[package]]\nname = \"proc-macro2\"\nversion = \"1.0.78\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e2422ad645d89c99f8f3e6b88a9fdeca7fabeac836b1002371c4367c8f984aae\"\ndependencies = [\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"prometheus\"\nversion = \"0.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dd0ced56dee39a6e960c15c74dc48849d614586db2eaada6497477af7c7811cd\"\ndependencies = [\n \"cfg-if 0.1.10\",\n \"fnv\",\n \"lazy_static\",\n \"protobuf\",\n \"spin 0.5.2\",\n \"thiserror\",\n]\n\n[[package]]\nname = \"protobuf\"\nversion = \"2.28.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"106dd99e98437432fed6519dedecfade6a06a73bb7b2a1e019fdd2bee5778d94\"\n\n[[package]]\nname = \"psm\"\nversion = \"0.1.21\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5787f7cda34e3033a72192c018bc5883100330f362ef279a8cbccfce8bb4e874\"\ndependencies = [\n \"cc\",\n]\n\n[[package]]\nname = \"quote\"\nversion = \"1.0.35\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"291ec9ab5efd934aaf503a6466c5d5251535d108ee747472c3977cc5acc868ef\"\ndependencies = [\n \"proc-macro2\",\n]\n\n[[package]]\nname = \"rand\"\nversion = \"0.7.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6a6b1679d49b24bbfe0c803429aa1874472f50d9b363131f0e89fc356b544d03\"\ndependencies = [\n \"getrandom 0.1.16\",\n \"libc\",\n \"rand_chacha 0.2.2\",\n \"rand_core 0.5.1\",\n \"rand_hc\",\n]\n\n[[package]]\nname = \"rand\"\nversion = \"0.8.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"34af8d1a0e25924bc5b7c43c079c942339d8f0a8b57c39049bef581b46327404\"\ndependencies = [\n \"libc\",\n \"rand_chacha 0.3.1\",\n \"rand_core 0.6.4\",\n]\n\n[[package]]\nname = \"rand_chacha\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f4c8ed856279c9737206bf725bf36935d8666ead7aa69b52be55af369d193402\"\ndependencies = [\n \"ppv-lite86\",\n \"rand_core 0.5.1\",\n]\n\n[[package]]\nname = \"rand_chacha\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e6c10a63a0fa32252be49d21e7709d4d4baf8d231c2dbce1eaa8141b9b127d88\"\ndependencies = [\n \"ppv-lite86\",\n \"rand_core 0.6.4\",\n]\n\n[[package]]\nname = \"rand_core\"\nversion = \"0.5.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"90bde5296fc891b0cef12a6d03ddccc162ce7b2aff54160af9338f8d40df6d19\"\ndependencies = [\n \"getrandom 0.1.16\",\n]\n\n[[package]]\nname = \"rand_core\"\nversion = \"0.6.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ec0be4795e2f6a28069bec0b5ff3e2ac9bafc99e6a9a7dc3547996c5c816922c\"\ndependencies = [\n \"getrandom 0.2.12\",\n]\n\n[[package]]\nname = \"rand_hc\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ca3129af7b92a17112d59ad498c6f81eaf463253766b90396d39ea7a39d6613c\"\ndependencies = [\n \"rand_core 0.5.1\",\n]\n\n[[package]]\nname = \"rayon\"\nversion = \"1.8.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fa7237101a77a10773db45d62004a272517633fbcc3df19d96455ede1122e051\"\ndependencies = [\n \"either\",\n \"rayon-core\",\n]\n\n[[package]]\nname = \"rayon-core\"\nversion = \"1.12.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1465873a3dfdaa8ae7cb14b4383657caab0b3e8a0aa9ae8e04b044854c8dfce2\"\ndependencies = [\n \"crossbeam-deque\",\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"redox_syscall\"\nversion = \"0.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4722d768eff46b75989dd134e5c353f0d6296e5aaa3132e776cbdb56be7731aa\"\ndependencies = [\n \"bitflags 1.3.2\",\n]\n\n[[package]]\nname = \"redox_syscall\"\nversion = \"0.5.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9b6dfecf2c74bce2466cabf93f6664d6998a69eb21e39f4207930065b27b771f\"\ndependencies = [\n \"bitflags 2.4.2\",\n]\n\n[[package]]\nname = \"redox_users\"\nversion = \"0.4.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a18479200779601e498ada4e8c1e1f50e3ee19deb0259c25825a98b5603b2cb4\"\ndependencies = [\n \"getrandom 0.2.12\",\n \"libredox\",\n \"thiserror\",\n]\n\n[[package]]\nname = \"regex\"\nversion = \"1.10.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b62dbe01f0b06f9d8dc7d49e05a0785f153b00b2c227856282f671e0318c9b15\"\ndependencies = [\n \"aho-corasick\",\n \"memchr\",\n \"regex-automata 0.4.5\",\n \"regex-syntax 0.8.2\",\n]\n\n[[package]]\nname = \"regex-automata\"\nversion = \"0.1.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6c230d73fb8d8c1b9c0b3135c5142a8acee3a0558fb8db5cf1cb65f8d7862132\"\ndependencies = [\n \"regex-syntax 0.6.29\",\n]\n\n[[package]]\nname = \"regex-automata\"\nversion = \"0.4.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5bb987efffd3c6d0d8f5f89510bb458559eab11e4f869acb20bf845e016259cd\"\ndependencies = [\n \"aho-corasick\",\n \"memchr\",\n \"regex-syntax 0.8.2\",\n]\n\n[[package]]\nname = \"regex-syntax\"\nversion = \"0.6.29\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f162c6dd7b008981e4d40210aca20b4bd0f9b60ca9271061b07f78537722f2e1\"\n\n[[package]]\nname = \"regex-syntax\"\nversion = \"0.8.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c08c74e62047bb2de4ff487b251e4a92e24f48745648451635cec7d591162d9f\"\n\n[[package]]\nname = \"relay-server\"\nversion = \"0.0.1\"\ndependencies = [\n \"hashbrown\",\n]\n\n[[package]]\nname = \"reqwest\"\nversion = \"0.11.24\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c6920094eb85afde5e4a138be3f2de8bbdf28000f0029e72c45025a56b042251\"\ndependencies = [\n \"base64 0.21.7\",\n \"bytes\",\n \"encoding_rs\",\n \"futures-core\",\n \"futures-util\",\n \"h2 0.3.24\",\n \"http 0.2.11\",\n \"http-body 0.4.6\",\n \"hyper 0.14.28\",\n \"hyper-rustls\",\n \"ipnet\",\n \"js-sys\",\n \"log\",\n \"mime\",\n \"once_cell\",\n \"percent-encoding\",\n \"pin-project-lite\",\n \"rustls\",\n \"rustls-pemfile\",\n \"serde\",\n \"serde_json\",\n \"serde_urlencoded\",\n \"sync_wrapper\",\n \"system-configuration\",\n \"tokio\",\n \"tokio-rustls\",\n \"tower-service\",\n \"url\",\n \"wasm-bindgen\",\n \"wasm-bindgen-futures\",\n \"web-sys\",\n \"webpki-roots\",\n \"winreg\",\n]\n\n[[package]]\nname = \"ring\"\nversion = \"0.16.20\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3053cf52e236a3ed746dfc745aa9cacf1b791d846bdaf412f60a8d7d6e17c8fc\"\ndependencies = [\n \"cc\",\n \"libc\",\n \"once_cell\",\n \"spin 0.5.2\",\n \"untrusted 0.7.1\",\n \"web-sys\",\n \"winapi 0.3.9\",\n]\n\n[[package]]\nname = \"ring\"\nversion = \"0.17.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"688c63d65483050968b2a8937f7995f443e27041a0f7700aa59b0822aedebb74\"\ndependencies = [\n \"cc\",\n \"getrandom 0.2.12\",\n \"libc\",\n \"spin 0.9.8\",\n \"untrusted 0.9.0\",\n \"windows-sys 0.48.0\",\n]\n\n[[package]]\nname = \"ripemd\"\nversion = \"0.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bd124222d17ad93a644ed9d011a40f4fb64aa54275c08cc216524a9ea82fb09f\"\ndependencies = [\n \"digest 0.10.7\",\n]\n\n[[package]]\nname = \"rle-decode-fast\"\nversion = \"1.0.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3582f63211428f83597b51b2ddb88e2a91a9d52d12831f9d08f5e624e8977422\"\n\n[[package]]\nname = \"rlimit\"\nversion = \"0.10.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7043b63bd0cd1aaa628e476b80e6d4023a3b50eb32789f2728908107bd0c793a\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"rstest\"\nversion = \"0.11.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2288c66aeafe3b2ed227c981f364f9968fa952ef0b30e84ada4486e7ee24d00a\"\ndependencies = [\n \"cfg-if 1.0.0\",\n \"proc-macro2\",\n \"quote\",\n \"rustc_version 0.4.0\",\n \"syn 1.0.109\",\n]\n\n[[package]]\nname = \"rstest\"\nversion = \"0.17.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"de1bb486a691878cd320c2f0d319ba91eeaa2e894066d8b5f8f117c000e9d962\"\ndependencies = [\n \"futures\",\n \"futures-timer\",\n \"rstest_macros\",\n \"rustc_version 0.4.0\",\n]\n\n[[package]]\nname = \"rstest_macros\"\nversion = \"0.17.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"290ca1a1c8ca7edb7c3283bd44dc35dd54fdec6253a3912e201ba1072018fca8\"\ndependencies = [\n \"cfg-if 1.0.0\",\n \"proc-macro2\",\n \"quote\",\n \"rustc_version 0.4.0\",\n \"syn 1.0.109\",\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"rstest_reuse\"\nversion = \"0.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"32c6cfaae58c048728261723a72b80a0aa9f3768e9a7da3b302a24d262525219\"\ndependencies = [\n \"quote\",\n \"rustc_version 0.3.3\",\n \"syn 1.0.109\",\n]\n\n[[package]]\nname = \"rstest_reuse\"\nversion = \"0.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"45f80dcc84beab3a327bbe161f77db25f336a1452428176787c8c79ac79d7073\"\ndependencies = [\n \"quote\",\n \"rand 0.8.5\",\n \"rustc_version 0.4.0\",\n \"syn 1.0.109\",\n]\n\n[[package]]\nname = \"rusqlite\"\nversion = \"0.31.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b838eba278d213a8beaf485bd313fd580ca4505a00d5871caeb1457c55322cae\"\ndependencies = [\n \"bitflags 2.4.2\",\n \"fallible-iterator\",\n \"fallible-streaming-iterator\",\n \"hashlink\",\n \"libsqlite3-sys\",\n \"serde_json\",\n \"smallvec\",\n]\n\n[[package]]\nname = \"rustc-demangle\"\nversion = \"0.1.23\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d626bb9dae77e28219937af045c257c28bfd3f69333c512553507f5f9798cb76\"\n\n[[package]]\nname = \"rustc_version\"\nversion = \"0.2.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"138e3e0acb6c9fb258b19b67cb8abd63c00679d2851805ea151465464fe9030a\"\ndependencies = [\n \"semver 0.9.0\",\n]\n\n[[package]]\nname = \"rustc_version\"\nversion = \"0.3.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f0dfe2087c51c460008730de8b57e6a320782fbfb312e1f4d520e6c6fae155ee\"\ndependencies = [\n \"semver 0.11.0\",\n]\n\n[[package]]\nname = \"rustc_version\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bfa0f585226d2e68097d4f95d113b15b83a82e819ab25717ec0590d9584ef366\"\ndependencies = [\n \"semver 1.0.21\",\n]\n\n[[package]]\nname = \"rustix\"\nversion = \"0.37.27\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fea8ca367a3a01fe35e6943c400addf443c0f57670e6ec51196f71a4b8762dd2\"\ndependencies = [\n \"bitflags 1.3.2\",\n \"errno\",\n \"io-lifetimes\",\n \"libc\",\n \"linux-raw-sys 0.3.8\",\n \"windows-sys 0.48.0\",\n]\n\n[[package]]\nname = \"rustix\"\nversion = \"0.38.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6ea3e1a662af26cd7a3ba09c0297a31af215563ecf42817c98df621387f4e949\"\ndependencies = [\n \"bitflags 2.4.2\",\n \"errno\",\n \"libc\",\n \"linux-raw-sys 0.4.13\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"rustls\"\nversion = \"0.21.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f9d5a6813c0759e4609cd494e8e725babae6a2ca7b62a5536a13daaec6fcb7ba\"\ndependencies = [\n \"log\",\n \"ring 0.17.7\",\n \"rustls-webpki\",\n \"sct\",\n]\n\n[[package]]\nname = \"rustls-pemfile\"\nversion = \"1.0.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1c74cae0a4cf6ccbbf5f359f08efdf8ee7e1dc532573bf0db71968cb56b1448c\"\ndependencies = [\n \"base64 0.21.7\",\n]\n\n[[package]]\nname = \"rustls-webpki\"\nversion = \"0.101.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8b6275d1ee7a1cd780b64aca7726599a1dbc893b1e64144529e55c3c2f745765\"\ndependencies = [\n \"ring 0.17.7\",\n \"untrusted 0.9.0\",\n]\n\n[[package]]\nname = \"rustversion\"\nversion = \"1.0.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7ffc183a10b4478d04cbbbfc96d0873219d962dd5accaff2ffbd4ceb7df837f4\"\n\n[[package]]\nname = \"ryu\"\nversion = \"1.0.16\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f98d2aa92eebf49b69786be48e4477826b256916e84a57ff2a4f21923b48eb4c\"\n\n[[package]]\nname = \"same-file\"\nversion = \"1.0.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"93fc1dc3aaa9bfed95e02e6eadabb4baf7e3078b0bd1b4d7b6b0b68378900502\"\ndependencies = [\n \"winapi-util\",\n]\n\n[[package]]\nname = \"scoped-tls\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e1cf6437eb19a8f4a6cc0f7dca544973b0b78843adbfeb3683d1a94a0024a294\"\n\n[[package]]\nname = \"scopeguard\"\nversion = \"1.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"94143f37725109f92c262ed2cf5e59bce7498c01bcc1502d7b9afe439a4e9f49\"\n\n[[package]]\nname = \"sct\"\nversion = \"0.7.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"da046153aa2352493d6cb7da4b6e5c0c057d8a1d0a9aa8560baffdd945acd414\"\ndependencies = [\n \"ring 0.17.7\",\n \"untrusted 0.9.0\",\n]\n\n[[package]]\nname = \"secp256k1\"\nversion = \"0.24.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6b1629c9c557ef9b293568b338dddfc8208c98a18c59d722a9d53f859d9c9b62\"\ndependencies = [\n \"secp256k1-sys\",\n \"serde\",\n]\n\n[[package]]\nname = \"secp256k1-sys\"\nversion = \"0.6.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"83080e2c2fc1006e625be82e5d1eb6a43b7fd9578b617fcc55814daf286bba4b\"\ndependencies = [\n \"cc\",\n]\n\n[[package]]\nname = \"semver\"\nversion = \"0.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1d7eb9ef2c18661902cc47e535f9bc51b78acd254da71d375c2f6720d9a40403\"\ndependencies = [\n \"semver-parser 0.7.0\",\n]\n\n[[package]]\nname = \"semver\"\nversion = \"0.11.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f301af10236f6df4160f7c3f04eec6dbc70ace82d23326abad5edee88801c6b6\"\ndependencies = [\n \"semver-parser 0.10.2\",\n]\n\n[[package]]\nname = \"semver\"\nversion = \"1.0.21\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b97ed7a9823b74f99c7742f5336af7be5ecd3eeafcb1507d1fa93347b1d589b0\"\n\n[[package]]\nname = \"semver-parser\"\nversion = \"0.7.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"388a1df253eca08550bef6c72392cfe7c30914bf41df5269b68cbd6ff8f570a3\"\n\n[[package]]\nname = \"semver-parser\"\nversion = \"0.10.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"00b0bef5b7f9e0df16536d3961cfb6e84331c065b4066afb39768d0e319411f7\"\ndependencies = [\n \"pest\",\n]\n\n[[package]]\nname = \"serde\"\nversion = \"1.0.196\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"870026e60fa08c69f064aa766c10f10b1d62db9ccd4d0abb206472bee0ce3b32\"\ndependencies = [\n \"serde_derive\",\n]\n\n[[package]]\nname = \"serde_cbor\"\nversion = \"0.11.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2bef2ebfde456fb76bbcf9f59315333decc4fda0b2b44b420243c11e0f5ec1f5\"\ndependencies = [\n \"half\",\n \"serde\",\n]\n\n[[package]]\nname = \"serde_derive\"\nversion = \"1.0.196\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"33c85360c95e7d137454dc81d9a4ed2b8efd8fbe19cee57357b32b9771fccb67\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.48\",\n]\n\n[[package]]\nname = \"serde_json\"\nversion = \"1.0.113\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"69801b70b1c3dac963ecb03a364ba0ceda9cf60c71cfe475e99864759c8b8a79\"\ndependencies = [\n \"itoa\",\n \"ryu\",\n \"serde\",\n]\n\n[[package]]\nname = \"serde_qs\"\nversion = \"0.8.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c7715380eec75f029a4ef7de39a9200e0a63823176b759d055b613f5a87df6a6\"\ndependencies = [\n \"percent-encoding\",\n \"serde\",\n \"thiserror\",\n]\n\n[[package]]\nname = \"serde_stacker\"\nversion = \"0.1.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"babfccff5773ff80657f0ecf553c7c516bdc2eb16389c0918b36b73e7015276e\"\ndependencies = [\n \"serde\",\n \"stacker\",\n]\n\n[[package]]\nname = \"serde_urlencoded\"\nversion = \"0.7.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d3491c14715ca2294c4d6a88f15e84739788c1d030eed8c110436aafdaa2f3fd\"\ndependencies = [\n \"form_urlencoded\",\n \"itoa\",\n \"ryu\",\n \"serde\",\n]\n\n[[package]]\nname = \"sha1\"\nversion = \"0.6.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c1da05c97445caa12d05e848c4a4fcbbea29e748ac28f7e80e9b010392063770\"\ndependencies = [\n \"sha1_smol\",\n]\n\n[[package]]\nname = \"sha1\"\nversion = \"0.10.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e3bf829a2d51ab4a5ddf1352d8470c140cadc8301b2ae1789db023f01cedd6ba\"\ndependencies = [\n \"cfg-if 1.0.0\",\n \"cpufeatures\",\n \"digest 0.10.7\",\n]\n\n[[package]]\nname = \"sha1_smol\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ae1a47186c03a32177042e55dbc5fd5aee900b8e0069a8d70fba96a9375cd012\"\n\n[[package]]\nname = \"sha2\"\nversion = \"0.9.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4d58a1e1bf39749807d89cf2d98ac2dfa0ff1cb3faa38fbb64dd88ac8013d800\"\ndependencies = [\n \"block-buffer 0.9.0\",\n \"cfg-if 1.0.0\",\n \"cpufeatures\",\n \"digest 0.9.0\",\n \"opaque-debug\",\n]\n\n[[package]]\nname = \"sha2\"\nversion = \"0.10.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"793db75ad2bcafc3ffa7c68b215fee268f537982cd901d132f89c6343f3a3dc8\"\ndependencies = [\n \"cfg-if 1.0.0\",\n \"cpufeatures\",\n \"digest 0.10.7\",\n \"sha2-asm\",\n]\n\n[[package]]\nname = \"sha2-asm\"\nversion = \"0.6.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f27ba7066011e3fb30d808b51affff34f0a66d3a03a58edd787c6e420e40e44e\"\ndependencies = [\n \"cc\",\n]\n\n[[package]]\nname = \"sha3\"\nversion = \"0.10.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"75872d278a8f37ef87fa0ddbda7802605cb18344497949862c0d4dcb291eba60\"\ndependencies = [\n \"digest 0.10.7\",\n \"keccak\",\n]\n\n[[package]]\nname = \"sharded-slab\"\nversion = \"0.1.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f40ca3c46823713e0d4209592e8d6e826aa57e928f09752619fc696c499637f6\"\ndependencies = [\n \"lazy_static\",\n]\n\n[[package]]\nname = \"signature\"\nversion = \"2.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"77549399552de45a898a580c1b41d445bf730df867cc44e6c0233bbc4b8329de\"\ndependencies = [\n \"rand_core 0.6.4\",\n]\n\n[[package]]\nname = \"similar\"\nversion = \"2.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1de1d4f81173b03af4c0cbed3c898f6bff5b870e4a7f5d6f4057d62a7a4b686e\"\n\n[[package]]\nname = \"siphasher\"\nversion = \"0.3.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"38b58827f4464d87d377d175e90bf58eb00fd8716ff0a62f80356b5e61555d0d\"\n\n[[package]]\nname = \"slab\"\nversion = \"0.4.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8f92a496fb766b417c996b9c5e57daf2f7ad3b0bebe1ccfca4856390e3d3bb67\"\ndependencies = [\n \"autocfg\",\n]\n\n[[package]]\nname = \"slog\"\nversion = \"2.7.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8347046d4ebd943127157b94d63abb990fcf729dc4e9978927fdf4ac3c998d06\"\n\n[[package]]\nname = \"slog-json\"\nversion = \"2.6.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3e1e53f61af1e3c8b852eef0a9dee29008f55d6dd63794f3f12cef786cf0f219\"\ndependencies = [\n \"serde\",\n \"serde_json\",\n \"slog\",\n \"time 0.3.36\",\n]\n\n[[package]]\nname = \"slog-term\"\nversion = \"2.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"87d29185c55b7b258b4f120eab00f48557d4d9bc814f41713f449d35b0f8977c\"\ndependencies = [\n \"atty\",\n \"slog\",\n \"term\",\n \"thread_local\",\n \"time 0.3.36\",\n]\n\n[[package]]\nname = \"smallvec\"\nversion = \"1.13.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e6ecd384b10a64542d77071bd64bd7b231f4ed5940fba55e98c3de13824cf3d7\"\n\n[[package]]\nname = \"socket2\"\nversion = \"0.4.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9f7916fc008ca5542385b89a3d3ce689953c143e9304a9bf8beec1de48994c0d\"\ndependencies = [\n \"libc\",\n \"winapi 0.3.9\",\n]\n\n[[package]]\nname = \"socket2\"\nversion = \"0.5.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7b5fac59a5cb5dd637972e5fca70daf0523c9067fcdc4842f053dae04a18f8e9\"\ndependencies = [\n \"libc\",\n \"windows-sys 0.48.0\",\n]\n\n[[package]]\nname = \"spin\"\nversion = \"0.5.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6e63cff320ae2c57904679ba7cb63280a3dc4613885beafb148ee7bf9aa9042d\"\n\n[[package]]\nname = \"spin\"\nversion = \"0.9.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6980e8d7511241f8acf4aebddbb1ff938df5eebe98691418c4468d0b72a96a67\"\n\n[[package]]\nname = \"spki\"\nversion = \"0.7.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d91ed6c858b01f942cd56b37a94b3e0a1798290327d1236e4d9cf4eaca44d29d\"\ndependencies = [\n \"base64ct\",\n \"der\",\n]\n\n[[package]]\nname = \"stacker\"\nversion = \"0.1.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c886bd4480155fd3ef527d45e9ac8dd7118a898a46530b7b94c3e21866259fce\"\ndependencies = [\n \"cc\",\n \"cfg-if 1.0.0\",\n \"libc\",\n \"psm\",\n \"winapi 0.3.9\",\n]\n\n[[package]]\nname = \"stacks-common\"\nversion = \"0.0.1\"\ndependencies = [\n \"assert-json-diff 1.1.0\",\n \"chrono\",\n \"curve25519-dalek 2.0.0\",\n \"ed25519-dalek\",\n \"hashbrown\",\n \"lazy_static\",\n \"libc\",\n \"nix\",\n \"percent-encoding\",\n \"rand 0.8.5\",\n \"rand_core 0.6.4\",\n \"ripemd\",\n \"rstest 0.11.0\",\n \"rstest_reuse 0.1.3\",\n \"rusqlite\",\n \"secp256k1\",\n \"serde\",\n \"serde_derive\",\n \"serde_json\",\n \"serde_stacker\",\n \"sha2 0.10.8\",\n \"sha3\",\n \"slog\",\n \"slog-json\",\n \"slog-term\",\n \"time 0.2.27\",\n \"winapi 0.3.9\",\n]\n\n[[package]]\nname = \"stacks-node\"\nversion = \"0.1.0\"\ndependencies = [\n \"async-h1\",\n \"async-std\",\n \"backtrace\",\n \"base64 0.12.3\",\n \"chrono\",\n \"clarity\",\n \"hashbrown\",\n \"http-types\",\n \"lazy_static\",\n \"libc\",\n \"libsigner\",\n \"mockito\",\n \"mutants\",\n \"pico-args\",\n \"rand 0.8.5\",\n \"rand_core 0.6.4\",\n \"regex\",\n \"reqwest\",\n \"ring 0.16.20\",\n \"rusqlite\",\n \"serde\",\n \"serde_derive\",\n \"serde_json\",\n \"slog\",\n \"stacks-common\",\n \"stacks-signer\",\n \"stackslib\",\n \"stx-genesis\",\n \"tempfile\",\n \"thiserror\",\n \"tikv-jemallocator\",\n \"tiny_http\",\n \"tokio\",\n \"toml\",\n \"tracing\",\n \"tracing-subscriber\",\n \"url\",\n \"warp\",\n]\n\n[[package]]\nname = \"stacks-signer\"\nversion = \"0.0.1\"\ndependencies = [\n \"backoff\",\n \"clap 4.5.0\",\n \"clarity\",\n \"hashbrown\",\n \"lazy_static\",\n \"libsigner\",\n \"libstackerdb\",\n \"num-traits\",\n \"polynomial\",\n \"prometheus\",\n \"rand 0.8.5\",\n \"rand_core 0.6.4\",\n \"reqwest\",\n \"rusqlite\",\n \"secp256k1\",\n \"serde\",\n \"serde_derive\",\n \"serde_json\",\n \"serde_stacker\",\n \"slog\",\n \"slog-json\",\n \"slog-term\",\n \"stacks-common\",\n \"stackslib\",\n \"thiserror\",\n \"tiny_http\",\n \"toml\",\n \"tracing\",\n \"tracing-subscriber\",\n \"url\",\n]\n\n[[package]]\nname = \"stackslib\"\nversion = \"0.0.1\"\ndependencies = [\n \"assert-json-diff 1.1.0\",\n \"chrono\",\n \"clarity\",\n \"criterion\",\n \"curve25519-dalek 2.0.0\",\n \"ed25519-dalek\",\n \"hashbrown\",\n \"integer-sqrt\",\n \"lazy_static\",\n \"libc\",\n \"libstackerdb\",\n \"mio 0.6.23\",\n \"mutants\",\n \"nix\",\n \"percent-encoding\",\n \"pox-locking\",\n \"prometheus\",\n \"rand 0.8.5\",\n \"rand_chacha 0.3.1\",\n \"rand_core 0.6.4\",\n \"regex\",\n \"ripemd\",\n \"rlimit\",\n \"rstest 0.17.0\",\n \"rstest_reuse 0.5.0\",\n \"rusqlite\",\n \"secp256k1\",\n \"serde\",\n \"serde_derive\",\n \"serde_json\",\n \"serde_stacker\",\n \"sha2 0.10.8\",\n \"sha3\",\n \"siphasher\",\n \"slog\",\n \"slog-json\",\n \"slog-term\",\n \"stacks-common\",\n \"stdext\",\n \"stx-genesis\",\n \"tikv-jemallocator\",\n \"time 0.2.27\",\n \"url\",\n \"winapi 0.3.9\",\n]\n\n[[package]]\nname = \"standback\"\nversion = \"0.2.17\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e113fb6f3de07a243d434a56ec6f186dfd51cb08448239fe7bcae73f87ff28ff\"\ndependencies = [\n \"version_check\",\n]\n\n[[package]]\nname = \"stdext\"\nversion = \"0.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6012f6ef4d674ce7021a8b0f5093f7e339f54d4ba04fc1f9c901659459b4f35b\"\n\n[[package]]\nname = \"stdweb\"\nversion = \"0.4.20\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d022496b16281348b52d0e30ae99e01a73d737b2f45d38fed4edf79f9325a1d5\"\ndependencies = [\n \"discard\",\n \"rustc_version 0.2.3\",\n \"stdweb-derive\",\n \"stdweb-internal-macros\",\n \"stdweb-internal-runtime\",\n \"wasm-bindgen\",\n]\n\n[[package]]\nname = \"stdweb-derive\"\nversion = \"0.5.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c87a60a40fccc84bef0652345bbbbbe20a605bf5d0ce81719fc476f5c03b50ef\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"serde\",\n \"serde_derive\",\n \"syn 1.0.109\",\n]\n\n[[package]]\nname = \"stdweb-internal-macros\"\nversion = \"0.2.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"58fa5ff6ad0d98d1ffa8cb115892b6e69d67799f6763e162a1c9db421dc22e11\"\ndependencies = [\n \"base-x\",\n \"proc-macro2\",\n \"quote\",\n \"serde\",\n \"serde_derive\",\n \"serde_json\",\n \"sha1 0.6.1\",\n \"syn 1.0.109\",\n]\n\n[[package]]\nname = \"stdweb-internal-runtime\"\nversion = \"0.1.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"213701ba3370744dcd1a12960caa4843b3d68b4d1c0a5d575e0d65b2ee9d16c0\"\n\n[[package]]\nname = \"strsim\"\nversion = \"0.11.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5ee073c9e4cd00e28217186dbe12796d692868f432bf2e97ee73bed0c56dfa01\"\n\n[[package]]\nname = \"stx-genesis\"\nversion = \"0.1.0\"\ndependencies = [\n \"libflate\",\n \"sha2 0.10.8\",\n]\n\n[[package]]\nname = \"subtle\"\nversion = \"2.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"81cdd64d312baedb58e21336b31bc043b77e01cc99033ce76ef539f78e965ebc\"\n\n[[package]]\nname = \"syn\"\nversion = \"1.0.109\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"72b64191b275b66ffe2469e8af2c1cfe3bafa67b529ead792a6d0160888b4237\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"syn\"\nversion = \"2.0.48\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0f3531638e407dfc0814761abb7c00a5b54992b849452a0646b7f65c9f770f3f\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"sync_wrapper\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2047c6ded9c721764247e62cd3b03c09ffc529b2ba5b10ec482ae507a4a70160\"\n\n[[package]]\nname = \"system-configuration\"\nversion = \"0.5.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ba3a3adc5c275d719af8cb4272ea1c4a6d668a777f37e115f6d11ddbc1c8e0e7\"\ndependencies = [\n \"bitflags 1.3.2\",\n \"core-foundation\",\n \"system-configuration-sys\",\n]\n\n[[package]]\nname = \"system-configuration-sys\"\nversion = \"0.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a75fb188eb626b924683e3b95e3a48e63551fcfb51949de2f06a9d91dbee93c9\"\ndependencies = [\n \"core-foundation-sys\",\n \"libc\",\n]\n\n[[package]]\nname = \"tempfile\"\nversion = \"3.11.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b8fcd239983515c23a32fb82099f97d0b11b8c72f654ed659363a95c3dad7a53\"\ndependencies = [\n \"cfg-if 1.0.0\",\n \"fastrand 2.0.1\",\n \"once_cell\",\n \"rustix 0.38.31\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"term\"\nversion = \"0.7.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c59df8ac95d96ff9bede18eb7300b0fda5e5d8d90960e76f8e14ae765eedbf1f\"\ndependencies = [\n \"dirs-next\",\n \"rustversion\",\n \"winapi 0.3.9\",\n]\n\n[[package]]\nname = \"textwrap\"\nversion = \"0.11.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d326610f408c7a4eb6f51c37c330e496b08506c9457c9d34287ecc38809fb060\"\ndependencies = [\n \"unicode-width\",\n]\n\n[[package]]\nname = \"thiserror\"\nversion = \"1.0.65\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5d11abd9594d9b38965ef50805c5e469ca9cc6f197f883f717e0269a3057b3d5\"\ndependencies = [\n \"thiserror-impl\",\n]\n\n[[package]]\nname = \"thiserror-impl\"\nversion = \"1.0.65\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ae71770322cbd277e69d762a16c444af02aa0575ac0d174f0b9562d3b37f8602\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.48\",\n]\n\n[[package]]\nname = \"thread_local\"\nversion = \"1.1.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3fdd6f064ccff2d6567adcb3873ca630700f00b5ad3f060c25b5dcfd9a4ce152\"\ndependencies = [\n \"cfg-if 1.0.0\",\n \"once_cell\",\n]\n\n[[package]]\nname = \"tikv-jemalloc-sys\"\nversion = \"0.5.4+5.3.0-patched\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9402443cb8fd499b6f327e40565234ff34dbda27460c5b47db0db77443dd85d1\"\ndependencies = [\n \"cc\",\n \"libc\",\n]\n\n[[package]]\nname = \"tikv-jemallocator\"\nversion = \"0.5.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"965fe0c26be5c56c94e38ba547249074803efd52adfb66de62107d95aab3eaca\"\ndependencies = [\n \"libc\",\n \"tikv-jemalloc-sys\",\n]\n\n[[package]]\nname = \"time\"\nversion = \"0.2.27\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4752a97f8eebd6854ff91f1c1824cd6160626ac4bd44287f7f4ea2035a02a242\"\ndependencies = [\n \"const_fn\",\n \"libc\",\n \"standback\",\n \"stdweb\",\n \"time-macros 0.1.1\",\n \"version_check\",\n \"winapi 0.3.9\",\n]\n\n[[package]]\nname = \"time\"\nversion = \"0.3.36\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5dfd88e563464686c916c7e46e623e520ddc6d79fa6641390f2e3fa86e83e885\"\ndependencies = [\n \"deranged\",\n \"itoa\",\n \"libc\",\n \"num-conv\",\n \"num_threads\",\n \"powerfmt\",\n \"serde\",\n \"time-core\",\n \"time-macros 0.2.18\",\n]\n\n[[package]]\nname = \"time-core\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ef927ca75afb808a4d64dd374f00a2adf8d0fcff8e7b184af886c3c87ec4a3f3\"\n\n[[package]]\nname = \"time-macros\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"957e9c6e26f12cb6d0dd7fc776bb67a706312e7299aed74c8dd5b17ebb27e2f1\"\ndependencies = [\n \"proc-macro-hack\",\n \"time-macros-impl\",\n]\n\n[[package]]\nname = \"time-macros\"\nversion = \"0.2.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3f252a68540fde3a3877aeea552b832b40ab9a69e318efd078774a01ddee1ccf\"\ndependencies = [\n \"num-conv\",\n \"time-core\",\n]\n\n[[package]]\nname = \"time-macros-impl\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fd3c141a1b43194f3f56a1411225df8646c55781d5f26db825b3d98507eb482f\"\ndependencies = [\n \"proc-macro-hack\",\n \"proc-macro2\",\n \"quote\",\n \"standback\",\n \"syn 1.0.109\",\n]\n\n[[package]]\nname = \"tiny_http\"\nversion = \"0.12.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"389915df6413a2e74fb181895f933386023c71110878cd0825588928e64cdc82\"\ndependencies = [\n \"ascii\",\n \"chunked_transfer\",\n \"httpdate\",\n \"log\",\n]\n\n[[package]]\nname = \"tinytemplate\"\nversion = \"1.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"be4d6b5f19ff7664e8c98d03e2139cb510db9b0a60b55f8e8709b689d939b6bc\"\ndependencies = [\n \"serde\",\n \"serde_json\",\n]\n\n[[package]]\nname = \"tinyvec\"\nversion = \"1.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"87cc5ceb3875bb20c2890005a4e226a4651264a5c75edb2421b52861a0a0cb50\"\ndependencies = [\n \"tinyvec_macros\",\n]\n\n[[package]]\nname = \"tinyvec_macros\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1f3ccbac311fea05f86f61904b462b55fb3df8837a366dfc601a0161d0532f20\"\n\n[[package]]\nname = \"tokio\"\nversion = \"1.36.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"61285f6515fa018fb2d1e46eb21223fff441ee8db5d0f1435e8ab4f5cdb80931\"\ndependencies = [\n \"backtrace\",\n \"bytes\",\n \"libc\",\n \"mio 0.8.10\",\n \"num_cpus\",\n \"parking_lot\",\n \"pin-project-lite\",\n \"socket2 0.5.5\",\n \"windows-sys 0.48.0\",\n]\n\n[[package]]\nname = \"tokio-rustls\"\nversion = \"0.24.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c28327cf380ac148141087fbfb9de9d7bd4e84ab5d2c28fbc911d753de8a7081\"\ndependencies = [\n \"rustls\",\n \"tokio\",\n]\n\n[[package]]\nname = \"tokio-stream\"\nversion = \"0.1.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"397c988d37662c7dda6d2208364a706264bf3d6138b11d436cbac0ad38832842\"\ndependencies = [\n \"futures-core\",\n \"pin-project-lite\",\n \"tokio\",\n]\n\n[[package]]\nname = \"tokio-tungstenite\"\nversion = \"0.20.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"212d5dcb2a1ce06d81107c3d0ffa3121fe974b73f068c8282cb1c32328113b6c\"\ndependencies = [\n \"futures-util\",\n \"log\",\n \"tokio\",\n \"tungstenite\",\n]\n\n[[package]]\nname = \"tokio-util\"\nversion = \"0.7.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5419f34732d9eb6ee4c3578b7989078579b7f039cbbb9ca2c4da015749371e15\"\ndependencies = [\n \"bytes\",\n \"futures-core\",\n \"futures-sink\",\n \"pin-project-lite\",\n \"tokio\",\n \"tracing\",\n]\n\n[[package]]\nname = \"toml\"\nversion = \"0.5.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f4f7f0dd8d50a853a531c426359045b1998f04219d88799810762cd4ad314234\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"tower-service\"\nversion = \"0.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b6bc1c9ce2b5135ac7f93c72918fc37feb872bdc6a5533a8b85eb4b86bfdae52\"\n\n[[package]]\nname = \"tracing\"\nversion = \"0.1.40\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c3523ab5a71916ccf420eebdf5521fcef02141234bbc0b8a49f2fdc4544364ef\"\ndependencies = [\n \"log\",\n \"pin-project-lite\",\n \"tracing-attributes\",\n \"tracing-core\",\n]\n\n[[package]]\nname = \"tracing-attributes\"\nversion = \"0.1.27\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"34704c8d6ebcbc939824180af020566b01a7c01f80641264eba0999f6c2b6be7\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.48\",\n]\n\n[[package]]\nname = \"tracing-core\"\nversion = \"0.1.32\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c06d3da6113f116aaee68e4d601191614c9053067f9ab7f6edbcb161237daa54\"\ndependencies = [\n \"once_cell\",\n \"valuable\",\n]\n\n[[package]]\nname = \"tracing-log\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ee855f1f400bd0e5c02d150ae5de3840039a3f54b025156404e34c23c03f47c3\"\ndependencies = [\n \"log\",\n \"once_cell\",\n \"tracing-core\",\n]\n\n[[package]]\nname = \"tracing-subscriber\"\nversion = \"0.3.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ad0f048c97dbd9faa9b7df56362b8ebcaa52adb06b498c050d2f4e32f90a7a8b\"\ndependencies = [\n \"matchers\",\n \"nu-ansi-term\",\n \"once_cell\",\n \"regex\",\n \"sharded-slab\",\n \"smallvec\",\n \"thread_local\",\n \"tracing\",\n \"tracing-core\",\n \"tracing-log\",\n]\n\n[[package]]\nname = \"try-lock\"\nversion = \"0.2.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e421abadd41a4225275504ea4d6566923418b7f05506fbc9c0fe86ba7396114b\"\n\n[[package]]\nname = \"tungstenite\"\nversion = \"0.20.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9e3dac10fd62eaf6617d3a904ae222845979aec67c615d1c842b4002c7666fb9\"\ndependencies = [\n \"byteorder\",\n \"bytes\",\n \"data-encoding\",\n \"http 0.2.11\",\n \"httparse\",\n \"log\",\n \"rand 0.8.5\",\n \"sha1 0.10.6\",\n \"thiserror\",\n \"url\",\n \"utf-8\",\n]\n\n[[package]]\nname = \"typenum\"\nversion = \"1.17.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"42ff0bf0c66b8238c6f3b578df37d0b7848e55df8577b3f74f92a69acceeb825\"\n\n[[package]]\nname = \"ucd-trie\"\nversion = \"0.1.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ed646292ffc8188ef8ea4d1e0e0150fb15a5c2e12ad9b8fc191ae7a8a7f3c4b9\"\n\n[[package]]\nname = \"unicase\"\nversion = \"2.7.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f7d2d4dafb69621809a81864c9c1b864479e1235c0dd4e199924b9742439ed89\"\ndependencies = [\n \"version_check\",\n]\n\n[[package]]\nname = \"unicode-bidi\"\nversion = \"0.3.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"08f95100a766bf4f8f28f90d77e0a5461bbdb219042e7679bebe79004fed8d75\"\n\n[[package]]\nname = \"unicode-ident\"\nversion = \"1.0.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3354b9ac3fae1ff6755cb6db53683adb661634f67557942dea4facebec0fee4b\"\n\n[[package]]\nname = \"unicode-normalization\"\nversion = \"0.1.22\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5c5713f0fc4b5db668a2ac63cdb7bb4469d8c9fed047b1d0292cc7b0ce2ba921\"\ndependencies = [\n \"tinyvec\",\n]\n\n[[package]]\nname = \"unicode-width\"\nversion = \"0.1.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e51733f11c9c4f72aa0c160008246859e340b00807569a0da0e7a1079b27ba85\"\n\n[[package]]\nname = \"universal-hash\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8326b2c654932e3e4f9196e69d08fdf7cfd718e1dc6f66b347e6024a0c961402\"\ndependencies = [\n \"generic-array 0.14.7\",\n \"subtle\",\n]\n\n[[package]]\nname = \"untrusted\"\nversion = \"0.7.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a156c684c91ea7d62626509bce3cb4e1d9ed5c4d978f7b4352658f96a4c26b4a\"\n\n[[package]]\nname = \"untrusted\"\nversion = \"0.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8ecb6da28b8a351d773b68d5825ac39017e680750f980f3a1a85cd8dd28a47c1\"\n\n[[package]]\nname = \"url\"\nversion = \"2.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"31e6302e3bb753d46e83516cae55ae196fc0c309407cf11ab35cc51a4c2a4633\"\ndependencies = [\n \"form_urlencoded\",\n \"idna\",\n \"percent-encoding\",\n \"serde\",\n]\n\n[[package]]\nname = \"utf-8\"\nversion = \"0.7.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"09cc8ee72d2a9becf2f2febe0205bbed8fc6615b7cb429ad062dc7b7ddd036a9\"\n\n[[package]]\nname = \"utf8parse\"\nversion = \"0.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"711b9620af191e0cdc7468a8d14e709c3dcdb115b36f838e601583af800a370a\"\n\n[[package]]\nname = \"valuable\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"830b7e5d4d90034032940e4ace0d9a9a057e7a45cd94e6c007832e39edb82f6d\"\n\n[[package]]\nname = \"value-bag\"\nversion = \"1.7.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"126e423afe2dd9ac52142e7e9d5ce4135d7e13776c529d27fd6bc49f19e3280b\"\n\n[[package]]\nname = \"vcpkg\"\nversion = \"0.2.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"accd4ea62f7bb7a82fe23066fb0957d48ef677f6eeb8215f372f52e48bb32426\"\n\n[[package]]\nname = \"version_check\"\nversion = \"0.9.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"49874b5167b65d7193b8aba1567f5c7d93d001cafc34600cee003eda787e483f\"\n\n[[package]]\nname = \"waker-fn\"\nversion = \"1.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f3c4517f54858c779bbcbf228f4fca63d121bf85fbecb2dc578cdf4a39395690\"\n\n[[package]]\nname = \"walkdir\"\nversion = \"2.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d71d857dc86794ca4c280d616f7da00d2dbfd8cd788846559a6813e6aa4b54ee\"\ndependencies = [\n \"same-file\",\n \"winapi-util\",\n]\n\n[[package]]\nname = \"want\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bfa7760aed19e106de2c7c0b581b509f2f25d3dacaf737cb82ac61bc6d760b0e\"\ndependencies = [\n \"try-lock\",\n]\n\n[[package]]\nname = \"warp\"\nversion = \"0.3.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c1e92e22e03ff1230c03a1a8ee37d2f89cd489e2e541b7550d6afad96faed169\"\ndependencies = [\n \"bytes\",\n \"futures-channel\",\n \"futures-util\",\n \"headers\",\n \"http 0.2.11\",\n \"hyper 0.14.28\",\n \"log\",\n \"mime\",\n \"mime_guess\",\n \"multer\",\n \"percent-encoding\",\n \"pin-project\",\n \"rustls-pemfile\",\n \"scoped-tls\",\n \"serde\",\n \"serde_json\",\n \"serde_urlencoded\",\n \"tokio\",\n \"tokio-stream\",\n \"tokio-tungstenite\",\n \"tokio-util\",\n \"tower-service\",\n \"tracing\",\n]\n\n[[package]]\nname = \"wasi\"\nversion = \"0.9.0+wasi-snapshot-preview1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cccddf32554fecc6acb585f82a32a72e28b48f8c4c1883ddfeeeaa96f7d8e519\"\n\n[[package]]\nname = \"wasi\"\nversion = \"0.11.0+wasi-snapshot-preview1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9c8d87e72b64a3b4db28d11ce29237c246188f4f51057d65a7eab63b7987e423\"\n\n[[package]]\nname = \"wasm-bindgen\"\nversion = \"0.2.91\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c1e124130aee3fb58c5bdd6b639a0509486b0338acaaae0c84a5124b0f588b7f\"\ndependencies = [\n \"cfg-if 1.0.0\",\n \"wasm-bindgen-macro\",\n]\n\n[[package]]\nname = \"wasm-bindgen-backend\"\nversion = \"0.2.91\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c9e7e1900c352b609c8488ad12639a311045f40a35491fb69ba8c12f758af70b\"\ndependencies = [\n \"bumpalo\",\n \"log\",\n \"once_cell\",\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.48\",\n \"wasm-bindgen-shared\",\n]\n\n[[package]]\nname = \"wasm-bindgen-futures\"\nversion = \"0.4.41\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"877b9c3f61ceea0e56331985743b13f3d25c406a7098d45180fb5f09bc19ed97\"\ndependencies = [\n \"cfg-if 1.0.0\",\n \"js-sys\",\n \"wasm-bindgen\",\n \"web-sys\",\n]\n\n[[package]]\nname = \"wasm-bindgen-macro\"\nversion = \"0.2.91\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b30af9e2d358182b5c7449424f017eba305ed32a7010509ede96cdc4696c46ed\"\ndependencies = [\n \"quote\",\n \"wasm-bindgen-macro-support\",\n]\n\n[[package]]\nname = \"wasm-bindgen-macro-support\"\nversion = \"0.2.91\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"642f325be6301eb8107a83d12a8ac6c1e1c54345a7ef1a9261962dfefda09e66\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.48\",\n \"wasm-bindgen-backend\",\n \"wasm-bindgen-shared\",\n]\n\n[[package]]\nname = \"wasm-bindgen-shared\"\nversion = \"0.2.91\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4f186bd2dcf04330886ce82d6f33dd75a7bfcf69ecf5763b89fcde53b6ac9838\"\n\n[[package]]\nname = \"web-sys\"\nversion = \"0.3.68\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"96565907687f7aceb35bc5fc03770a8a0471d82e479f25832f54a0e3f4b28446\"\ndependencies = [\n \"js-sys\",\n \"wasm-bindgen\",\n]\n\n[[package]]\nname = \"webpki-roots\"\nversion = \"0.25.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5f20c57d8d7db6d3b86154206ae5d8fba62dd39573114de97c2cb0578251f8e1\"\n\n[[package]]\nname = \"winapi\"\nversion = \"0.2.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"167dc9d6949a9b857f3451275e911c3f44255842c1f7a76f33c55103a909087a\"\n\n[[package]]\nname = \"winapi\"\nversion = \"0.3.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5c839a674fcd7a98952e593242ea400abe93992746761e38641405d28b00f419\"\ndependencies = [\n \"winapi-i686-pc-windows-gnu\",\n \"winapi-x86_64-pc-windows-gnu\",\n]\n\n[[package]]\nname = \"winapi-build\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2d315eee3b34aca4797b2da6b13ed88266e6d612562a0c46390af8299fc699bc\"\n\n[[package]]\nname = \"winapi-i686-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ac3b87c63620426dd9b991e5ce0329eff545bccbbb34f3be09ff6fb6ab51b7b6\"\n\n[[package]]\nname = \"winapi-util\"\nversion = \"0.1.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f29e6f9198ba0d26b4c9f07dbe6f9ed633e1f3d5b8b414090084349e46a52596\"\ndependencies = [\n \"winapi 0.3.9\",\n]\n\n[[package]]\nname = \"winapi-x86_64-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"712e227841d057c1ee1cd2fb22fa7e5a5461ae8e48fa2ca79ec42cfc1931183f\"\n\n[[package]]\nname = \"windows-core\"\nversion = \"0.52.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"33ab640c8d7e35bf8ba19b884ba838ceb4fba93a4e8c65a9059d08afcfc683d9\"\ndependencies = [\n \"windows-targets 0.52.0\",\n]\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.48.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"677d2418bec65e3338edb076e806bc1ec15693c5d0104683f2efe857f61056a9\"\ndependencies = [\n \"windows-targets 0.48.5\",\n]\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.52.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"282be5f36a8ce781fad8c8ae18fa3f9beff57ec1b52cb3de0789201425d9a33d\"\ndependencies = [\n \"windows-targets 0.52.0\",\n]\n\n[[package]]\nname = \"windows-targets\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9a2fa6e2155d7247be68c096456083145c183cbbbc2764150dda45a87197940c\"\ndependencies = [\n \"windows_aarch64_gnullvm 0.48.5\",\n \"windows_aarch64_msvc 0.48.5\",\n \"windows_i686_gnu 0.48.5\",\n \"windows_i686_msvc 0.48.5\",\n \"windows_x86_64_gnu 0.48.5\",\n \"windows_x86_64_gnullvm 0.48.5\",\n \"windows_x86_64_msvc 0.48.5\",\n]\n\n[[package]]\nname = \"windows-targets\"\nversion = \"0.52.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8a18201040b24831fbb9e4eb208f8892e1f50a37feb53cc7ff887feb8f50e7cd\"\ndependencies = [\n \"windows_aarch64_gnullvm 0.52.0\",\n \"windows_aarch64_msvc 0.52.0\",\n \"windows_i686_gnu 0.52.0\",\n \"windows_i686_msvc 0.52.0\",\n \"windows_x86_64_gnu 0.52.0\",\n \"windows_x86_64_gnullvm 0.52.0\",\n \"windows_x86_64_msvc 0.52.0\",\n]\n\n[[package]]\nname = \"windows_aarch64_gnullvm\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2b38e32f0abccf9987a4e3079dfb67dcd799fb61361e53e2882c3cbaf0d905d8\"\n\n[[package]]\nname = \"windows_aarch64_gnullvm\"\nversion = \"0.52.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cb7764e35d4db8a7921e09562a0304bf2f93e0a51bfccee0bd0bb0b666b015ea\"\n\n[[package]]\nname = \"windows_aarch64_msvc\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dc35310971f3b2dbbf3f0690a219f40e2d9afcf64f9ab7cc1be722937c26b4bc\"\n\n[[package]]\nname = \"windows_aarch64_msvc\"\nversion = \"0.52.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bbaa0368d4f1d2aaefc55b6fcfee13f41544ddf36801e793edbbfd7d7df075ef\"\n\n[[package]]\nname = \"windows_i686_gnu\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a75915e7def60c94dcef72200b9a8e58e5091744960da64ec734a6c6e9b3743e\"\n\n[[package]]\nname = \"windows_i686_gnu\"\nversion = \"0.52.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a28637cb1fa3560a16915793afb20081aba2c92ee8af57b4d5f28e4b3e7df313\"\n\n[[package]]\nname = \"windows_i686_msvc\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8f55c233f70c4b27f66c523580f78f1004e8b5a8b659e05a4eb49d4166cca406\"\n\n[[package]]\nname = \"windows_i686_msvc\"\nversion = \"0.52.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ffe5e8e31046ce6230cc7215707b816e339ff4d4d67c65dffa206fd0f7aa7b9a\"\n\n[[package]]\nname = \"windows_x86_64_gnu\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"53d40abd2583d23e4718fddf1ebec84dbff8381c07cae67ff7768bbf19c6718e\"\n\n[[package]]\nname = \"windows_x86_64_gnu\"\nversion = \"0.52.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3d6fa32db2bc4a2f5abeacf2b69f7992cd09dca97498da74a151a3132c26befd\"\n\n[[package]]\nname = \"windows_x86_64_gnullvm\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0b7b52767868a23d5bab768e390dc5f5c55825b6d30b86c844ff2dc7414044cc\"\n\n[[package]]\nname = \"windows_x86_64_gnullvm\"\nversion = \"0.52.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1a657e1e9d3f514745a572a6846d3c7aa7dbe1658c056ed9c3344c4109a6949e\"\n\n[[package]]\nname = \"windows_x86_64_msvc\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ed94fce61571a4006852b7389a063ab983c02eb1bb37b47f8272ce92d06d9538\"\n\n[[package]]\nname = \"windows_x86_64_msvc\"\nversion = \"0.52.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dff9641d1cd4be8d1a070daf9e3773c5f67e78b4d9d42263020c057706765c04\"\n\n[[package]]\nname = \"winreg\"\nversion = \"0.50.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"524e57b2c537c0f9b1e69f1965311ec12182b4122e45035b1508cd24d2adadb1\"\ndependencies = [\n \"cfg-if 1.0.0\",\n \"windows-sys 0.48.0\",\n]\n\n[[package]]\nname = \"ws2_32-sys\"\nversion = \"0.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d59cefebd0c892fa2dd6de581e937301d8552cb44489cdff035c6187cb63fa5e\"\ndependencies = [\n \"winapi 0.2.8\",\n \"winapi-build\",\n]\n\n[[package]]\nname = \"zerocopy\"\nversion = \"0.7.32\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"74d4d3961e53fa4c9a25a8637fc2bfaf2595b3d3ae34875568a5cf64787716be\"\ndependencies = [\n \"zerocopy-derive\",\n]\n\n[[package]]\nname = \"zerocopy-derive\"\nversion = \"0.7.32\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9ce1b18ccd8e73a9321186f97e46f9f04b778851177567b1975109d26a08d2a6\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.48\",\n]\n\n[[package]]\nname = \"zeroize\"\nversion = \"1.7.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"525b4ec142c6b68a2d10f01f7bbf6755599ca3f81ea53b8431b7dd348f5fdb2d\"\n"
        },
        {
          "name": "Cargo.toml",
          "type": "blob",
          "size": 1.1708984375,
          "content": "[workspace]\nresolver = \"2\"\nmembers = [\n    \"stackslib\",\n    \"stacks-common\",\n    \"pox-locking\",\n    \"clarity\",\n    \"stx-genesis\",\n    \"libstackerdb\",\n    \"contrib/tools/relay-server\",\n    \"libsigner\",\n    \"stacks-signer\",\n    \"testnet/stacks-node\"]\n\n# Dependencies we want to keep the same between workspace members\n[workspace.dependencies]\ned25519-dalek = { version = \"2.1.1\", features = [\"serde\", \"rand_core\"] }\nhashbrown = { version = \"0.14.3\", features = [\"serde\"] }\nrand_core = \"0.6\"\nrand = \"0.8\"\nrand_chacha = \"0.3.1\"\ntikv-jemallocator = \"0.5.4\"\nrusqlite = { version = \"0.31.0\", features = [\"blob\", \"serde_json\", \"i128_blob\", \"bundled\", \"trace\"] }\nthiserror = { version = \"1.0.65\" }\n\n# Use a bit more than default optimization for\n#  dev builds to speed up test execution\n[profile.dev]\nopt-level = 1\n\n# Use release-level optimization for dependencies\n# This slows down \"first\" builds on development environments,\n#  but won't impact subsequent builds.\n[profile.dev.package.\"*\"]\nopt-level = 3\n\n[profile.release]\ndebug = true\ncodegen-units = 1\nlto = \"fat\"\n\n# Release build with less LTO\n# Useful for faster builds or low-RAM environments\n[profile.release-lite]\ninherits = \"release\"\nlto = \"thin\"\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.376953125,
          "content": "FROM rust:alpine as build\n\nARG STACKS_NODE_VERSION=\"No Version Info\"\nARG GIT_BRANCH='No Branch Info'\nARG GIT_COMMIT='No Commit Info'\n\nWORKDIR /src\n\nCOPY . .\n\nRUN apk add --no-cache musl-dev\n\nRUN mkdir /out\n\nRUN cargo build --features monitoring_prom,slog_json --release\n\nRUN cp target/release/stacks-node /out\n\nFROM alpine\n\nCOPY --from=build /out/ /bin/\n\nCMD [\"stacks-node\", \"mainnet\"]\n"
        },
        {
          "name": "Dockerfile.debian",
          "type": "blob",
          "size": 0.3603515625,
          "content": "FROM rust:bookworm as build\n\nARG STACKS_NODE_VERSION=\"No Version Info\"\nARG GIT_BRANCH='No Branch Info'\nARG GIT_COMMIT='No Commit Info'\n\nWORKDIR /src\n\nCOPY . .\n\nRUN mkdir /out\n\nRUN cargo build --features monitoring_prom,slog_json --release\n\nRUN cp target/release/stacks-node /out\n\nFROM debian:bookworm-slim\n\nCOPY --from=build /out/ /bin/\n\nCMD [\"stacks-node\", \"mainnet\"]\n"
        },
        {
          "name": "Dockerfile.memtest",
          "type": "blob",
          "size": 0.2060546875,
          "content": "FROM rust:latest\n\nWORKDIR /src/blockstack-core\n\nRUN apt-get update\nRUN apt-get install valgrind heaptrack -y\nRUN apt-get install less\n\nRUN rustup install stable\n\nCOPY . .\n\nRUN cargo test --no-run \n\nCMD [\"bash\"]\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 34.3173828125,
          "content": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Use with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    {one line to give the program's name and a brief idea of what it does.}\n    Copyright (C) {year}  {name of author}\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\n\n    {project}  Copyright (C) {year}  {fullname}\n    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\n<http://www.gnu.org/licenses/>.\n\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\n<http://www.gnu.org/philosophy/why-not-lgpl.html>.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.9453125,
          "content": "<p align=\"left\">\n  <a href=\"https://stacks.co\">\n    <img alt=\"Stacks\" src=\"https://i.imgur.com/zzwnCnY.png\" width=\"250\" />\n  </a>\n</p>\n\n# Stacks Blockchain\n\nReference implementation of the [Stacks blockchain](https://github.com/stacks-network/stacks) in Rust.\n\nStacks is a layer-2 blockchain that uses Bitcoin as a base layer for security and enables decentralized apps and predictable smart contracts using the [Clarity language](https://clarity-lang.org/). Stacks implements [Proof of Transfer (PoX)](https://community.stacks.org/pox) mining that anchors to Bitcoin security. Leader election happens at the Bitcoin blockchain and Stacks (STX) miners write new blocks on the separate Stacks blockchain. With PoX there is no need to modify Bitcoin to enable smart contracts and decentralized apps.\n\n[![License: GPL v3](https://img.shields.io/badge/License-GPLv3-blue.svg?style=flat)](https://www.gnu.org/licenses/gpl-3.0)\n[![Release](https://img.shields.io/github/v/release/stacks-network/stacks-core?style=flat)](https://github.com/stacks-network/stacks-core/releases/latest)\n[![Discord Chat](https://img.shields.io/discord/621759717756370964.svg)](https://stacks.chat)\n\n## Building\n\n### 1. Download and install Rust\n\n_For building on Windows, follow the rustup installer instructions at https://rustup.rs/._\n\n```bash\ncurl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh\nsource $HOME/.cargo/env\nrustup component add rustfmt\n```\n\n- When building the [`master`](https://github.com/stacks-network/stacks-core/tree/master) branch, ensure you are using the latest stable release:\n\n```bash\nrustup update\n```\n\n### 2. Clone the source repository:\n\n```bash\ngit clone --depth=1 https://github.com/stacks-network/stacks-core.git\ncd stacks-core\n```\n\n### 3. Build the project\n\n```bash\n# Fully optimized release build\ncargo build --release\n# Faster but less optimized build. Necessary if < 16 GB RAM\ncargo build --profile release-lite\n```\n\n_Note on building_: you may set `RUSTFLAGS` to build binaries for your native cpu:\n\n```\nRUSTFLAGS=\"-Ctarget-cpu=native\"\n```\n\nor uncomment these lines in `./cargo/config.toml`:\n\n```\n# [build]\n# rustflags = [\"-Ctarget-cpu=native\"]\n```\n\n## Testing\n\n**Run the tests:**\n\n```bash\ncargo test testnet  -- --test-threads=1\n```\n\n**Run all unit tests in parallel using [nextest](https://nexte.st/):**\n\n_Warning, this typically takes a few minutes_\n\n```bash\ncargo nextest run\n```\n\n## Run the testnet\n\nYou can observe the state machine in action locally by running:\n\n```bash\ncd testnet/stacks-node\ncargo run --bin stacks-node -- start --config ./conf/testnet-follower-conf.toml\n```\n\n_On Windows, many tests will fail if the line endings aren't `LF`. Please ensure that you have git's `core.autocrlf` set to `input` when you clone the repository to avoid any potential issues. This is due to the Clarity language currently being sensitive to line endings._\n\nAdditional testnet documentation is available [here](./docs/testnet.md) and [here](https://docs.stacks.co/docs/nodes-and-miners/miner-testnet)\n\n## Release Process\n\nThe release process for the stacks blockchain is [defined here](./docs/release-process.md)\n\n## Further Reading\n\nYou can learn more by visiting [the Stacks Website](https://stacks.co) and checking out the documentation:\n\n- [Stacks docs](https://docs.stacks.co/)\n- [Stacks Improvement Proposals (SIPs)](./docs/SIPS.md)\n- [Mining](./docs/mining.md)\n- [Profiling](./docs/profiling.md)\n- [RPC endpoints](./docs/rpc-endpoints.md)\n- [Event dispatcher](./docs/event-dispatcher.md)\n\nYou can also read the technical papers:\n\n- [\"PoX: Proof of Transfer Mining with Bitcoin\"](https://community.stacks.org/pox), May 2020\n- [\"Stacks 2.0: Apps and Smart Contracts for Bitcoin\"](https://stacks.org/stacks), Dec 2020\n\n## Copyright and License\n\nThe code and documentation copyright are attributed to stacks.org.\n\nThis code is released under the [GPL v3 license](https://www.gnu.org/licenses/quick-guide-gplv3.en.html), and the docs are released under the [Creative Commons license](https://creativecommons.org/).\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 1.76953125,
          "content": "# Security Policy\n\n\n## Supported Versions\nPlease see [Releases](https://github.com/stacks-network/stacks-core/releases). It is recommended to use the [most recently released version](https://github.com/stacks-network/stacks-core/releases/latest).\n\n\n## Reporting a vulnerability\n**Please do not file a public issue or PR mentioning the vulnerability.**\n\nThe Stacks Foundation has partnered with [ImmuneFi](https://immunefi.com/) to reward honest researchers who find and responsibly disclose security vulnerabilities in our critical code. Bounties are payable in the Stacks token ([STX](https://www.coingecko.com/en/coins/stacks)) for accepted, high-quality submissions.\n\nLearn more here: [https://bounty.stacks.org](https://bounty.stacks.org)\n\n## Want to get in touch?\n\nPlease visit [https://stacks.org/security](https://stacks.org/security) for the most up-to-date information on our security policy.\n\nYou may also contact us with any questions or to report a vulnerabilty using the following key(s):\n\n\n| Name | Fingerprint          |\n| ------- | ------------------ |\n| security@stacks.org   | ABA3 7FA3 6DBB A591 B0E5  5949 0E94 D065 B32E C7E6 |\n\n\n```\n-----BEGIN PGP PUBLIC KEY BLOCK-----\n\nmDMEZrJ2wBYJKwYBBAHaRw8BAQdADVWSZGbVgc0SE8XmXkRonl85wXrPHkl9bN0B\njKFBIRS0KXNlY3VyaXR5QHN0YWNrcy5vcmcgPHNlY3VyaXR5QHN0YWNrcy5vcmc+\niJAEExYIADgWIQSro3+jbbulkbDlWUkOlNBlsy7H5gUCZrJ2wAIbAwULCQgHAgYV\nCgkICwIEFgIDAQIeAQIXgAAKCRAOlNBlsy7H5tznAQC6iKqtjCqn2RjtCkr2V6xe\nkCe92RfwWsG0415jVpVlDgEA350TCqIT1Jwyqz2aNT2TQ9F6fyKzAiNpLVRImOLH\n4Aq4OARmsnbAEgorBgEEAZdVAQUBAQdAvwusRitvUX9hSC8NKS48VTT3LVvZvn87\nJQXRc2CngAEDAQgHiHgEGBYIACAWIQSro3+jbbulkbDlWUkOlNBlsy7H5gUCZrJ2\nwAIbDAAKCRAOlNBlsy7H5oCNAQDae9VhB98HMOvZ99ZuSEyLqXxKjK7xT2P0y1Tm\nGuUnNAEAhI+1BjFvO/Hy50DcZTmHWvHJ6/dzibw5Ah+oE458IQo=\n=yhSO\n-----END PGP PUBLIC KEY BLOCK-----\n```\n\n\n"
        },
        {
          "name": "build.rs",
          "type": "blob",
          "size": 1.6953125,
          "content": "use std::process::Command;\n\nfn current_git_hash() -> Option<String> {\n    if option_env!(\"GIT_COMMIT\") == None {\n        let commit = Command::new(\"git\")\n            .arg(\"log\")\n            .arg(\"-1\")\n            .arg(\"--pretty=format:%h\") // Abbreviated commit hash\n            .current_dir(env!(\"CARGO_MANIFEST_DIR\"))\n            .output();\n\n        if let Ok(commit) = commit {\n            if let Ok(commit) = String::from_utf8(commit.stdout) {\n                return Some(commit);\n            }\n        }\n    } else {\n        return option_env!(\"GIT_COMMIT\").map(String::from);\n    }\n\n    None\n}\n\nfn current_git_branch() -> Option<String> {\n    if option_env!(\"GIT_BRANCH\") == None {\n        let commit = Command::new(\"git\")\n            .arg(\"rev-parse\")\n            .arg(\"--abbrev-ref\")\n            .arg(\"HEAD\")\n            .output();\n        if let Ok(commit) = commit {\n            if let Ok(commit) = String::from_utf8(commit.stdout) {\n                return Some(commit);\n            }\n        }\n    } else {\n        return option_env!(\"GIT_BRANCH\").map(String::from);\n    }\n\n    None\n}\n\nfn is_working_tree_clean() -> bool {\n    let status = Command::new(\"git\")\n        .arg(\"diff\")\n        .arg(\"--quiet\")\n        .arg(\"--exit-code\")\n        .current_dir(env!(\"CARGO_MANIFEST_DIR\"))\n        .status();\n\n    if let Ok(status) = status {\n        status.code() == Some(0)\n    } else {\n        true\n    }\n}\n\nfn main() {\n    if let Some(git) = current_git_hash() {\n        println!(\"cargo:rustc-env=GIT_COMMIT={}\", git);\n    }\n    if let Some(git) = current_git_branch() {\n        println!(\"cargo:rustc-env=GIT_BRANCH={}\", git);\n    }\n    if !is_working_tree_clean() {\n        println!(\"cargo:rustc-env=GIT_TREE_CLEAN=+\");\n    }\n}\n"
        },
        {
          "name": "clarity",
          "type": "tree",
          "content": null
        },
        {
          "name": "codecov.yml",
          "type": "blob",
          "size": 0.4296875,
          "content": "# https://docs.codecov.com/docs/codecovyml-reference\ncodecov:\n  require_ci_to_pass: false\n  notify:\n    wait_for_ci: true\ncoverage:\n  range: 60..79\n  round: down\n  precision: 2\n  status:\n    changes: false\n    patch: false\n    project:\n      default:\n        target: 80%\n        threshold: 1%\ncomment:\n  layout: \"condensed_header, diff, files, footer\"\n  hide_project_coverage: false\n  after_n_builds: 35\ngithub_checks:\n  annotations: false\n"
        },
        {
          "name": "contrib",
          "type": "tree",
          "content": null
        },
        {
          "name": "deployment",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "libsigner",
          "type": "tree",
          "content": null
        },
        {
          "name": "libstackerdb",
          "type": "tree",
          "content": null
        },
        {
          "name": "migration-verification",
          "type": "tree",
          "content": null
        },
        {
          "name": "net-test",
          "type": "tree",
          "content": null
        },
        {
          "name": "pox-locking",
          "type": "tree",
          "content": null
        },
        {
          "name": "rust-toolchain",
          "type": "blob",
          "size": 0.0068359375,
          "content": "stable\n"
        },
        {
          "name": "sample-contracts",
          "type": "tree",
          "content": null
        },
        {
          "name": "sip",
          "type": "tree",
          "content": null
        },
        {
          "name": "stacks-common",
          "type": "tree",
          "content": null
        },
        {
          "name": "stacks-signer",
          "type": "tree",
          "content": null
        },
        {
          "name": "stackslib",
          "type": "tree",
          "content": null
        },
        {
          "name": "stx-genesis",
          "type": "tree",
          "content": null
        },
        {
          "name": "testnet",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}