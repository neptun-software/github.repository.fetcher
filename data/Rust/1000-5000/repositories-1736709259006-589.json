{
  "metadata": {
    "timestamp": 1736709259006,
    "page": 589,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjU5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "BoundaryML/baml",
      "stars": 1735,
      "defaultBranch": "canary",
      "files": [
        {
          "name": ".actrc",
          "type": "blob",
          "size": 0.0380859375,
          "content": "--artifact-server-path ./tmp/artifacts\n"
        },
        {
          "name": ".devcontainer",
          "type": "tree",
          "content": null
        },
        {
          "name": ".envrc",
          "type": "blob",
          "size": 0.5,
          "content": "export CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER=aarch64-linux-gnu-gcc\n\n# Use nix if nix-shell is available,\n# Otherwise, use mise and brew.\nif command -v nix-shell >/dev/null 2>&1; then\n    use nix\n    export PATH=$(pwd)/tools:$PATH\nelse\n    PATH_add tools/\n    PATH_add \"$(brew --prefix llvm)/bin\"\n\n    # Use mise for tool versioning, e.g. Ruby\n    eval \"$(mise activate bash)\" || echo \"Please run 'brew install mise'\"\n    \n    export CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER=aarch64-linux-gnu-gcc\nfi\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.103515625,
          "content": "**/baml_client/inlinedbaml.py binary\n**/baml_client/inlinedbaml.ts binary\n**/baml_client/inlined.rb binary"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 2.0869140625,
          "content": "# sam@ merged all the gitignores in the repo on 2024-05-17 and then\n# did a manual pass over this file to rip out things that should not\n# be ignored at the root level\n\n!.gitignore\n!.vscode/*.code-snippets\n!.vscode/extensions.json\n!.vscode/launch.json\n!.vscode/settings.json\n!.vscode/tasks.json\n!.yarn/patches\n!.yarn/plugins\n!.yarn/releases\n!.yarn/sdks\n!.yarn/versions# autogenerated by NAPI\n$RECYCLE.BIN/\n*$py.class\n**/*.rs.bk\n**/dist\n*.cab\n*.env\n*.exe\n*.icloud\n*.lcov\n*.lnk\n*.local\n*.log\n*.msi\n*.msix\n*.msm\n*.msp\n*.njsproj\n*.node\n*.ntvs*\n*.pdb\n*.pem\n*.pid\n*.pid.lock\n*.py[cod]\n*.seed\n*.sln\n*.so\n*.so# Created by pytest automatically.\n*.so*# Byte-compiled / optimized / DLL files\n*.so_\n*.stackdump\n*.suo\n*.sw?\n*.tar.gz\n*.tgz\n*.tsbuildinfo\n*.vsix\n*.whl\n.AppleDB\n.AppleDesktop\n.AppleDouble\n.DS_Store\n.DocumentRevisions-V100\n.LSOverride\n.Spotlight-V100\n.TemporaryItems\n.Trash-*\n.Trashes\n.VolumeIcon.icns\n._*\n.apdisk\n.bundle/\n.cache\n.cache/\n.com.apple.timemachine.donotpresent\n.directory\n.docusaurus\n.dynamodb/\n.eslintcache\n.fseventsd\n.fuse_hidden*\n.fusebox/\n.grunt\n.history\n.history/\n.idea\n.ionide\n.lock-wscript\n.next\n.nfs*\n.node_repl_history\n.npm\n.nuxt\n.nyc_output\n.nyc_output/\n.parcel-cache\n.pnp.*\n.pnp.js\n.pnpm-debug.log*\n.rpt2_cache/\n.rts2_cache_cjs/\n.rts2_cache_es/\n.rts2_cache_umd/\n.serverless/\n.stylelintcache\n.temp\n.tern-port\n.turbo\n.venv\n.vercel\n.vscode-test\n.vscode-test/\n.vscode/\n.vuepress/dist\n.yarn-integrity\n.yarn/*\n.yarn/build-state.yml\n.yarn/cache\n.yarn/install-state.gz\n.yarn/unplugged\n/.next/\n/.pnp\n/build\n/coverage\n/dist\n/node_modules\n/out/\nengine/language_client_ruby/**/*.bundle\nengine/target/\nCargo.lock\nIcon\nNetwork Trash Folder\nTemporary Items\nThumbs.db\nThumbs.db:encryptable\n[Dd]esktop.ini\n__pycache__\n.pytest_cache\nbin/\nbower_components\ncoverage\ncoverage/# Logs\ndebug/\ndist\ndist-ssr\ndist/\nehthumbs.db\nehthumbs_vista.db\njspm_packages/\nlerna-debug.log*\nlogs\nlogs/\nnode_modules\nnode_modules/\nnodejs/src/*\nnpm-debug.log*\nout\npacking\npids\npnpm-debug.log*\npyvenv.cfg\nreport.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json\nsample/baml_client/*target\ntest_logs/**\ntmp\ntmp/\nvendor/\nweb_modules/\nyarn-debug.log*\nyarn-error.log*\nyarn.lock\n"
        },
        {
          "name": ".infisical.json",
          "type": "blob",
          "size": 0.1240234375,
          "content": "{\n    \"workspaceId\": \"63f942680b94e4248e89eb42\",\n    \"defaultEnvironment\": \"test\",\n    \"gitBranchToEnvironmentMapping\": null\n}\n"
        },
        {
          "name": ".mise.toml",
          "type": "blob",
          "size": 0.064453125,
          "content": "[tools]\nnode = \"20.14\"\nruby = \"3.1\"\npnpm = \"9.9\"\npoetry = \"1.8.4\"\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 57.6484375,
          "content": "# Changelog\n\n<info>BAML generally gets an update every Monday.</info>\n\nAll notable changes to this project will be documented in this file. See [conventional commits](https://www.conventionalcommits.org/) for commit guidelines.\n\n## [0.72.0](https://github.com/boundaryml/baml/compare/0.71.1..0.71.2) - 2025-01-07\n\n### Bug Fixes\n\n- Update gemini 2 flash thinking model name check (#1283) - ([76ceeff](https://github.com/boundaryml/baml/commit/76ceeff0f780c0ddc9b6baaa2dc786e63c5c7377)) - Gasser-Aly\n\n### Features\n\n- get baml-fmt ready for beta (#1278) - ([abb0958](https://github.com/boundaryml/baml/commit/abb0958b8ee1c5d5000a3781677ee32da03daba4)) - Samuel Lijin\n- provide saner semantics around aws_session_token (#1295) - ([98c6b99](https://github.com/boundaryml/baml/commit/98c6b999f5232c4bb6192183151ee52ce5416a0e)) - Samuel Lijin\n- Include type aliases in Jinja (#1286) - ([207eab8](https://github.com/boundaryml/baml/commit/207eab8e2591577ecc863ff57c3572f268b41773)) - Antonio Sarosi\n- Implement jump to definition for type aliases (#1287) - ([6cb5009](https://github.com/boundaryml/baml/commit/6cb50096e102f5c01f1371b616ca5bd2537610d9)) - Antonio Sarosi\n- Improved 'o1' model detection in OpenAI client and updated documentation for error handling and client setup (#1290) - ([479d06e](https://github.com/boundaryml/baml/commit/479d06e4546538b3908422801b21a50f22a3fc3f)) - hellovai\n- Add docs for recursive type aliases (#1294) - ([43a0007](https://github.com/boundaryml/baml/commit/43a0007876a04c3e71c808e377662a30a7c062b6)) - Antonio Sarosi\n\n## [0.71.1](https://github.com/boundaryml/baml/compare/0.71.0..0.71.1) - 2024-12-31\n\n- Bump version to 0.71.1 - ([4ff76e8](https://github.com/boundaryml/baml/commit/4ff76e8bbd697bd48b0f9b08044b3f2d98df476c)) - Aaron Villalpando\n\n## [0.71.0](https://github.com/boundaryml/baml/compare/0.70.5..0.71.0) - 2024-12-31\n\n### Bug Fixes\n\n- fix concurrency docs (#1269)\n- issue with aws credentials not being passed in correctly (#1266) - ([7b79ac4](https://github.com/boundaryml/baml/commit/7b79ac4c28620ca09e72139ee8cd8fc0dc23cec1)) - Chris Watts\n- Fix windows generation through vscode always outputting to the root workspace directory if the path was ../ (#1247) - ([cdc1838](https://github.com/boundaryml/baml/commit/cdc1838c114fd4d13e032da9cf7312aa55a8a889)) - aaronvg\n- Fix VSCode link (#1264) - ([14342cd](https://github.com/boundaryml/baml/commit/14342cd2b9cdf53d9c2cbdc16a800fc88ff1cdf1)) - Greg Hale\n- Special-case handling of Flash Thinking Mode for Gemini (#1276) - ([039b45a](https://github.com/boundaryml/baml/commit/039b45a965b56dd415f6ec104a8d44343d144e79)) - Greg Hale\n- Fix typescript trace bugs (#1275) - ([e41b5aa](https://github.com/boundaryml/baml/commit/e41b5aa8a52fad9f9a5f833b2d1cecd2cc195868)) - Edward Zhang\n- Add token counts to raw.**str**() (#1277) - ([b57bd30](https://github.com/boundaryml/baml/commit/b57bd30747dae563cf40b560cd5da3e50b783c5d)) - aaronvg\n\n### Features\n\n- **(serve)** Add graceful Ctrl+C handling with exit message (#1238) - ([83e68f2](https://github.com/boundaryml/baml/commit/83e68f2aadd6638e767eacfbb6087ef2483dd361)) - revidious\n- implement format-on-save in vscode and baml-cli fmt (#1246) - ([66af7c5](https://github.com/boundaryml/baml/commit/66af7c57d22098b8d4c42f0d49ead84090b16407)) - Samuel Lijin\n- allow optional lists and maps (#1251) - ([9170b89](https://github.com/boundaryml/baml/commit/9170b899b799302a4fc0781d99a493bf9fc13095)) - revidious\n- Implement Type Aliases (#1163) - ([6310c41](https://github.com/boundaryml/baml/commit/6310c41e7fbe838026180071e881242d79789a2a)) - Antonio Sarosi\n\n### Miscellaneous Chores\n\n- add approval reqs to release workflows (#1243) - ([d3b9596](https://github.com/boundaryml/baml/commit/d3b959674957bfd07fd44817022c64e5b4d248c7)) - Samuel Lijin\n- \"Switching LLMs\" Docs Fixes (#1244) - ([c62cef4](https://github.com/boundaryml/baml/commit/c62cef4949e1326c8da88dc46df762165c8f7b87)) - Ethan\n- Add tests for azure and failure scenarios (#1250) - ([20ec134](https://github.com/boundaryml/baml/commit/20ec1345d3b8e26cddea9eccacc1420bdb3be804)) - aaronvg\n- clarified readme (#1263) - ([8cac1ef](https://github.com/boundaryml/baml/commit/8cac1ef24e78b7f537b1aabf393d1b2a0e400ca2)) - MoofSoup\n\n## [0.70.5](https://github.com/boundaryml/baml/compare/0.70.1..0.70.5) - 2024-12-13\n\n### Bug Fixes\n\n- Remove log statements (#1230) - ([4bcdd19](https://github.com/boundaryml/baml/commit/4bcdd198f219cd016ee64cc6444dd62e69f796fb)) - hellovai\n- Fix playground proxy related issues (#1228, #1229, #1237) - ([7384ba8](https://github.com/boundaryml/baml/commit/7384ba8cb5d1f012c50ddfb2a44a142ec9654397)) ([7bb6df4](https://github.com/boundaryml/baml/commit/7bb6df40fe37753b946ceeec6b30c4d9cdcc4ce7)) ([16054f5](https://github.com/boundaryml/baml/commit/16054f5f858dcaf80f013d466ceb9354c6a160b7)) - aaronvg\n\n### DOCS\n\n- deno run instead of dpx (#1225) - ([7c64299](https://github.com/boundaryml/baml/commit/7c642992cd7d52b7e7cd718542dfa68c41b5aab3)) - Jeffrey Konowitch\n- Fix broken links (#1235) - ([859c699](https://github.com/boundaryml/baml/commit/859c6998cef7950d52cc3287f51d74106a58d89d)) - Samuel Lijin\n\n### Features\n\n- Support parsing primitive values from single-key objects (#1224) - ([935a190](https://github.com/boundaryml/baml/commit/935a190556d12077f961ce083723e7c1f816f387)) - revidious\n\n## [0.70.1](https://github.com/boundaryml/baml/compare/0.70.0..0.70.1) - 2024-12-05\n\n### Bug Fixes\n\n- Make baml_py work with playwright/inspect (#1214) - ([6741999](https://github.com/boundaryml/baml/commit/674199992e21fb439a5c972c5868b6b3f106d267)) - Samuel Lijin\n- Fix Python release pipeline (#1218) - ([bde634c](https://github.com/boundaryml/baml/commit/bde634cd6064784e77620f26f52202494fb659ec)) - Samuel Lijin\n\n### Documentation\n\n- Docs for LLM Clients paramaters updated (#1216) - ([6f99a28](https://github.com/boundaryml/baml/commit/6f99a28a918e557a75e2d763ac21ca587350adf4)) - hellovai\n\n## [0.70.0](https://github.com/boundaryml/baml/compare/0.69.0..0.70.0) - 2024-12-04\n\n### Bug Fixes\n\n- Improvements for promptfiddle (#1201) - ([c6fb306](https://github.com/boundaryml/baml/commit/c6fb3067ce74f7864c8e071ed9ea3b3b1f69d00a)) - aaronvg\n- Add vscode config to disable proxying (#1197) - ([c593284](https://github.com/boundaryml/baml/commit/c59328479a60847147d7141f0053fb208821d49a)) - aaronvg\n- update lezer syntax for tests (#1199) - ([269ad9d](https://github.com/boundaryml/baml/commit/269ad9da5ca1dede5bf3d6a42f11f158cfe57dda)) - aaronvg\n- Various playground fixes (#1202) - ([ce4f397](https://github.com/boundaryml/baml/commit/ce4f39737b88d2fcf27851ff8b230eda5a1e714b)) - aaronvg\n\n### Documentation\n\n- Add test-block constraints docs (#1198) - ([b566d4c](https://github.com/boundaryml/baml/commit/b566d4ceadab2bff0ae77765be63aadb4d3660d2)) - Greg Hale\n\n### Features\n\n- Fix azure client - ([9b57395](https://github.com/boundaryml/baml/commit/9b5739565b684c2179ac2ab24cabaa441a6269a7)) - hellovai\n- Add new client paramters: allowed_roles, default_role, finish_reason_allow_list, finish_reason_deny_list (#1209) - ([9b57395](https://github.com/boundaryml/baml/commit/9b5739565b684c2179ac2ab24cabaa441a6269a7)) - hellovai\n\n### Miscellaneous Chores\n\n- cargo clippy (#1206) - ([c17e0da](https://github.com/boundaryml/baml/commit/c17e0da45db4188e0b0618d9e69f21220dc2fcff)) - Antonio Sarosi\n- add colors to the CLI by default (#1208) - ([eba73c7](https://github.com/boundaryml/baml/commit/eba73c783c7f4e0013c0f128b0f2a7c20af330f0)) - Samuel Lijin\n- simplify string formatting for readability (#1072) - ([3ebf08f](https://github.com/boundaryml/baml/commit/3ebf08fe54bcfcc384188296f32efa6a878416ec)) - Hamir Mahal\n\n## [0.69.0](https://github.com/boundaryml/baml/compare/0.68.0..0.69.0) - 2024-11-26\n\n### Documentation\n\n- Move documentation link higher in README.md for better visibility (#1190) - ([aaa1149](https://github.com/boundaryml/baml/commit/aaa1149acca0b4552b2d84aba6e6ee933a3a6d6b)) - Dex\n- Update Vertex docs for different publishers (#1191) - ([66b2274](https://github.com/boundaryml/baml/commit/66b2274f895615f15b5a6edba51444b7d98dcaa5)) - Antonio Sarosi\n- Update TypeScript installation docs to use `pnpm exec` instead of deprecated `pnpx` (#1144) - ([56194b8](https://github.com/boundaryml/baml/commit/56194b8084a08447dfb6ca5bf537289cd36022c4)) - Manav Bokinala\n- Update LM Studio documentation (#1176) - ([7689ce7](https://github.com/boundaryml/baml/commit/7689ce7c3c42d49a020b81e0bdca16ef8e0209c7)) - Jeff Winkler\n\n### Features\n\n- Support enums & literals as map keys (#1178) - ([39e0271](https://github.com/boundaryml/baml/commit/39e0271f605234535cc53470a6aedff07aaa0c6c)) - Antonio Sarosi\n- Parse triple backtick strings, discarding the info header (#1162) - ([353b21e](https://github.com/boundaryml/baml/commit/353b21e0ba3689420dfea6ff50a9454cf87fa199)) - Samuel Lijin\n- Add ability to validate types for template strings (#1161) - ([a578cc2](https://github.com/boundaryml/baml/commit/a578cc287abbd9c23697adc4c83bcf0979916fcf)) - hellovai\n- Support single line quoteless JSON parsing (#1170) - ([b1b9cab](https://github.com/boundaryml/baml/commit/b1b9cabcd51f87afef0ef54c7ecd0e2349d97f83)) - hellovai\n- Generated code includes docstrings from BAML source docstrings (#1177) - ([170ece9](https://github.com/boundaryml/baml/commit/170ece9e8d72e235a7f5d628739899cd564ee995)) - Greg Hale\n- Add ability to parse clients statically whenever possible (#1193) - ([03d9475](https://github.com/boundaryml/baml/commit/03d947581ceb56a3c3498f2746f697ce06a55077)) - hellovai\n- Support setting all env vars for AWS-bedrock (#1179) - ([fcdbdfb](https://github.com/boundaryml/baml/commit/fcdbdfbb80e5e7d09411b0e55aa0039b0be998bc)) - hellovai\n- Add constraints to test blocks (#1185) - ([cafd2ea](https://github.com/boundaryml/baml/commit/cafd2ea35ac0d3129ddddb7c4fc81561a7316657)) - Greg Hale\n- Add sum jinja filter (#1174) - ([2353862](https://github.com/boundaryml/baml/commit/2353862730ed3be9b354a9f6a6c20c4c75a6058f)) - Greg Hale\n- Add openrouter key (#1186) - ([28d58c0](https://github.com/boundaryml/baml/commit/28d58c060320154bddfef03bdd6de67d27e26c0f)) - aaronvg\n\n### Bug Fixes\n\n- Fix image path in README.md (#1190) - ([aaa1149](https://github.com/boundaryml/baml/commit/aaa1149acca0b4552b2d84aba6e6ee933a3a6d6b)) - Dex\n- Fix template string highlights (#1182) - ([60c823a](https://github.com/boundaryml/baml/commit/60c823a000507e6667670f96f1607ba2ea160c57)) - aaronvg\n- Fix nextjs and TS server hot-reload (#1183) - ([22e6bbb](https://github.com/boundaryml/baml/commit/22e6bbb7dbe125b40f72d37e6fb8a73e603aade8)) - aaronvg\n- Fix lang name (#1188) - ([8c3d536](https://github.com/boundaryml/baml/commit/8c3d5363dd36c32a512430f970da8c76788335e3)) - aaronvg\n- Make id optional as gemini doesn't include it in openai generic (#1187) - ([97d1cd4](https://github.com/boundaryml/baml/commit/97d1cd48dc80bdfaeb08bf8a27b65c21a48145bd)) - aaronvg\n- Correctly compute required_env_vars even for shorthand clients (#1164) - ([8b51b6e](https://github.com/boundaryml/baml/commit/8b51b6eb186b8c2853139e37e87a69a87e893059)) - hellovai\n- Report wrong keyword errors in type defs (#1166) - ([3b1d152](https://github.com/boundaryml/baml/commit/3b1d15230c9ba6dae3cb8d9f0f7f7e9b75f8f00e)) - Antonio Sarosi\n- Remove win32-arm64 support for now to fix yarn and deno builds (#1173) - ([c0234d7](https://github.com/boundaryml/baml/commit/c0234d730915506097ff17b54afd7316fdc850cd)) - aaronvg\n- Validate fieldnames and types when using pydantic codegen (#1189) - ([93b393d](https://github.com/boundaryml/baml/commit/93b393ded048817fdb7ffef65cb698f9edb14764)) - Greg Hale\n\n## [0.68.0](https://github.com/boundaryml/baml/compare/0.67.0..0.68.0) - 2024-11-11\n\n### Documentation\n\n### Features\n\n- Recursive types! (#1065) - ([8100df9](https://github.com/boundaryml/baml/commit/8100df999e67690458e8bc6adc50575e855bd242)) - Antonio Sarosi\n- Support specifying \"region\" for aws-bedrock (#1150) - ([cbe3c92](https://github.com/boundaryml/baml/commit/cbe3c9261b3fa5cd026b9492a2858c1822e354df)) - Samuel Lijin\n- Add `hoisted_class_prefix` option in docs (#1154) - ([cf2298e](https://github.com/boundaryml/baml/commit/cf2298ec53c74c317c495c7b84e1a56a97193b4f)) - Antonio Sarosi\n- Make render messages dynamic and use `hoisted_class_prefix` instead of `\"schema\"` (#1155) - ([873751b](https://github.com/boundaryml/baml/commit/873751ba84f736dfbcbd9cbb0b6debfe7081cc1f)) - Antonio Sarosi\n- Support o1 in playground (allow certain models to disable streaming) (#1157) - ([09c6549](https://github.com/boundaryml/baml/commit/09c65497c3218387756775827ba22bcad16f0362)) - hellovai\n- Add basic grammar for `a` vs `an` articles in ctx.output_format (#1158) - ([e084130](https://github.com/boundaryml/baml/commit/e0841307d4da809754d995a4524b39b87040f2d0)) - Antonio Sarosi\n\n### Bug Fixes\n\n- Improved syntax highlighting for template_strings (#1151) - ([8c43e37](https://github.com/boundaryml/baml/commit/8c43e37fdaa05d9f3626fde7ad56614610727348)) - Greg Hale\n- Improved error detection for client&lt;llm&gt; parsing (#1026) - ([c6b1167](https://github.com/boundaryml/baml/commit/c6b116744f55f831352209c04cd6bce7b028eda9)) - hellovai\n- Fix BAML_LOG_JSON logs for py, ruby, and TS (#1153) - ([9e08642](https://github.com/boundaryml/baml/commit/9e08642470435fbefca20b163de010dd805560b8)) - aaronvg\n\n## [0.67.0](https://github.com/boundaryml/baml/compare/0.66.0..0.67.0) - 2024-11-05\n\n### Bug Fixes\n\n- URGENT: fix generated typescript code (#1147) - ([bd9da16](https://github.com/boundaryml/baml/commit/bd9da1683112d849595580866382cba2c6bed8be)) - hellovai\n\n### Features\n\n- Parser improvement: handle code within backticks (`) (#1146) - ([3d8ef34](https://github.com/boundaryml/baml/commit/3d8ef34af15a7f2b957876ffa71314ce38da2a01)) - hellovai\n\n## [0.66.0](https://github.com/boundaryml/baml/compare/0.65.0..0.66.0) - 2024-11-04\n\n### Features\n\n- BAML_LOG supports JSON mode (#1137) - ([f140767](https://github.com/boundaryml/baml/commit/f1407674fc0d91c079fd93b655ff097a05475740)) - aaronvg\n- Block-level constraints (#1124) - ([e931acb](https://github.com/boundaryml/baml/commit/e931acb7f765e86a70cb33cd86728aabe058024b)) - Greg Hale\n- Parser improvement! Streaming arrays is much more stable and parsing file paths improved (#1134) - ([56570f0](https://github.com/boundaryml/baml/commit/56570f0fe6c4c09594eb757c8a78158cf0e73fcd)) - hellovai\n\n### Documentation\n\n- Improvements to Reference Documentation (#1125) - ([12c8fa7](https://github.com/boundaryml/baml/commit/12c8fa7ec5aea8571f27fb65b8f2a327a1a5e0ce)) - hellovai\n- README.md: typo/readability fixes (#1092) - ([cb67e31](https://github.com/boundaryml/baml/commit/cb67e316dce2c4ee29b6fd625316f5df4409335f)) - Prathamesh Pawar\n- README.md: Correct Promptfiddle link (#1108) - ([b296c4c](https://github.com/boundaryml/baml/commit/b296c4cf6104513e40ef89f17d534d6d8858f223)) - Sagar Sharma\n- Fix broken links (#1133) - ([e0bfc94](https://github.com/boundaryml/baml/commit/e0bfc94f453f35971e871a4b121a1f35fa0b17cc)) - aaronvg\n\n### Bug-fix\n\n- Improve syntax highlighting for template strings (#1130) - ([54de4b6](https://github.com/boundaryml/baml/commit/54de4b6ed9144a68fe0a84d916679f9aec46fe28)) - hellovai\n- Improved static analysis for literals in jinja (#1132) - ([b8a221f](https://github.com/boundaryml/baml/commit/b8a221ff44668e2b1d9fa75100c270ce5a227ed4)) - Greg Hale\n- Adds missing imports to the sync_client template (#1131) - ([823f74c](https://github.com/boundaryml/baml/commit/823f74c88df3cc7b9ebb4b19b74b5ee6edbafd9c)) - Jesus Lizama\n- Add `Checked` in baml client typescript (#1135) - ([ad759cd](https://github.com/boundaryml/baml/commit/ad759cdb67cb0b6a6d2bd0d16575e3e1bc847a68)) - Greg Hale\n- Produce syntax error when user misses return type on functions (#1129) - ([034d6eb](https://github.com/boundaryml/baml/commit/034d6ebda38aded1c6a93321d363575156b0ecc6)) - hellovai\n\n## [0.65.0](https://github.com/boundaryml/baml/compare/0.64.0..0.65.0) - 2024-10-31\n\n### Documentation\n\n- **New Documentation Structure**: Introduced version 3 of the documentation, enhancing clarity and organization. ([#1118](https://github.com/boundaryml/baml/commit/bab2767414172dd632437a57631c4cee04910518))\n\n### Bug Fixes\n\n- **Python Type Handling**: Moved Python Checked and Check types into `baml_client` for better type management. ([#1122](https://github.com/boundaryml/baml/commit/0ccf473fd821d25d431bbf4341c4e837967104bf))\n- **Literal Input Type Checking**: Fixed an issue where literal inputs were not being type-checked correctly. ([#1121](https://github.com/boundaryml/baml/commit/aa5dc85026a175216b5caae6320d09a1fcd35752))\n\n## [0.64.0](https://github.com/boundaryml/baml/compare/0.63.0..0.64.0) - 2024-10-29\n\n### Bug Fixes\n\n- **Playground Stability:** Prevented crashes in the playground due to malformed vertex credentials ([#1107](https://github.com/boundaryml/baml/commit/e665346fbc84a9b969a979cfdf1c70d530201e93)) - _Samuel Lijin_\n- **Union Handling:** Addressed an issue with union types in the schema ([#1096](https://github.com/boundaryml/baml/commit/cb5ce7623d3e95464fb5e5152c4d2339458caa26)) - _Greg Hale_\n- **WASM Function Signatures:** Resolved stack overflow when computing WASM function signatures ([#1100](https://github.com/boundaryml/baml/commit/aa736ed2d7386cae78421c22d5669c73d8921085)) - _aaronvg_\n- **VSCode Extension:** Fixed crashes in the VSCode extension that caused the output panel to open unexpectedly ([#1103](https://github.com/boundaryml/baml/commit/cb5a266bc68f15483f3ec3fa0f4edbc8d176287a)) - _hellovai_\n- **Static Analysis Improvements:** Enhanced static analysis on Jinja expressions and `regex_match` functions ([#1102](https://github.com/boundaryml/baml/commit/7ca8136ffbc690877091627415941674f6f14b2f), [#1104](https://github.com/boundaryml/baml/commit/83ddb1cfe81c9b5f6ae620c331c4eefe512c78bd)) - _hellovai_\n- **Codegen Enhancements:** Fixed code generation for Python boolean literals and updated integration tests ([#1099](https://github.com/boundaryml/baml/commit/635976238fd9246bfb8764875358a36b4ec6a7f5)) - _Antonio Sarosi_\n- **Enum Handling:** Improved substring alias handling for enums ([#1098](https://github.com/boundaryml/baml/commit/0c5cbd4ae03d2bc836ee4b61a7df638855bb72ca)) - _Miguel Cárdenas_\n- **Syntax Highlighting:** Refined span calculations for Jinja expressions and improved VSCode syntax highlighting with Lezer ([#1110](https://github.com/boundaryml/baml/commit/a53072f5fe9fe83a0accb36e43a06550602a3c65)) - _hellovai_\n- **Ruby Support:** Fixed literal boolean tests for Ruby ([#1109](https://github.com/boundaryml/baml/commit/23e590b0b2fdb51f80e7eced769baabd12b3be22)) - _Antonio Sarosi_\n\n### Features\n\n- **Constraint Support:** Added the ability to define constraints using Jinja expressions ([#1006](https://github.com/boundaryml/baml/commit/d794f28b4f8830b1a40cd08043ecdc562938d36e)) - _Greg Hale_\n- **VSCode & Fiddle UI:** Introduced a new \"Intro to Checks\" UI for easier onboarding ([#1106](https://github.com/boundaryml/baml/commit/11efa5e97f8e9b8f385b7fb0e823f5ff2bc4c314)) - _Samuel Lijin_\n- **Dev Container Configurations:** Added Dev Container configurations for streamlined development environments ([#1112](https://github.com/boundaryml/baml/commit/5790393d7ad320e9e257c09e461c9bc39310a834)) - _Antonio Sarosi_\n\n### Documentation\n\n- **Constraints Documentation:** Published new documentation for defining constraints in BAML ([#1113](https://github.com/boundaryml/baml/commit/6332021a59661d3931934adc2afbf4f99f6f4bee)) - _Greg Hale_\n- **Dynamic Types Linking:** Added cross-links to dynamic types documentation for easier navigation ([#1116](https://github.com/boundaryml/baml/commit/8ce0a539d74d05438e8047e4e02022ddd7121e21)) - _Greg Hale_\n\n### Miscellaneous\n\n- **Code Quality:** Improved style and fixed typos in the codebase ([#1115](https://github.com/boundaryml/baml/commit/4c3970a6e6ce998a784e682f4c218ba2a69cf86a)) - _Greg Hale_\n- **Parsing Stability:** Added logic to prevent assertions from parsing errors and ensured checks no longer affect parsing ([#1101](https://github.com/boundaryml/baml/commit/5ec89c92ab14622afddc3ce348c5b981b4840492)) - _hellovai_\n- **Version Bump:** Bumped version to 0.64.0 ([#1114](https://github.com/boundaryml/baml/commit/90d3c17ba67bc1467ee5973ff6cf257069e265b9), [#ff7e152](https://github.com/boundaryml/baml/commit/ff7e152510395bab1d38afa60211226070d12cc2)) - _Vaibhav Gupta_\n\n## [0.63.0](https://github.com/boundaryml/baml/compare/0.62.0..0.63.0) - 2024-10-23\n\n### Bug Fixes\n\n- Fix dynamic enums which already are defined in BAML (#1080) - ([22d0f1c](https://github.com/boundaryml/baml/commit/22d0f1cff3428c2cd58ea78c50c4fc7ea39c8d0c)) - hellovai\n\n### Features\n\n- Updated clients.baml to use the latest sonnet model (#1081) - ([71df0b7](https://github.com/boundaryml/baml/commit/71df0b7b627ba218d581d2c21be01fea4e4993c1)) - aaronvg\n- Improved clients.baml generated via baml init (#1089) - ([682dd66](https://github.com/boundaryml/baml/commit/682dd66f4adab8c4fad13bfe32a3fc0268d8b511)) - hellovai\n\n## [0.62.0](https://github.com/boundaryml/baml/compare/0.61.1..0.62.0) - 2024-10-21\n\n### Features\n\n- Support serializing/deserializing `baml_py.Image`, `baml_py.Audio` for pydantic (#1062) - ([11cb699](https://github.com/boundaryml/baml/commit/11cb69903dce1ae348c68f88a82b4731da3977a7)) - Samuel Lijin\n- Support rendering input classes with aliases (#1045) - ([3824cda](https://github.com/boundaryml/baml/commit/3824cda75524105f3401e5c7e4c21e604d639f76)) - aaronvg\n- Add unstable_internal_repr on FunctionResult in python (#1068) - ([00082e8](https://github.com/boundaryml/baml/commit/00082e8b941d3648ec499215d2c38091f36db944)) - hellovai\n- Add literal support for type_builder (#1069) - ([c0085d9](https://github.com/boundaryml/baml/commit/c0085d908cbf8696623fd70f49de5ca8325de06c)) - hellovai\n\n### Bug Fixes\n\n- Surface errors in fallbacks containing only erroneous clients (#1061) - ([b69ef79](https://github.com/boundaryml/baml/commit/b69ef79542ec818b8779f9710dad65d33166c862)) - Greg Hale\n- Fix parser so that we are able to correctly detect sequences of empty strings. (#1048) - ([977e277](https://github.com/boundaryml/baml/commit/977e2776119a6f1e79f29cbe596b1c31697becb5)) - hellovai\n- Make substring match algorithm case insensitive (#1056) - ([fa2c477](https://github.com/boundaryml/baml/commit/fa2c4770791297a7a37a3f0c837ede4bb709f0ef)) - Antonio Sarosi\n- Fix vertex-ai citation data being optional (#1058) - ([5eae0a7](https://github.com/boundaryml/baml/commit/5eae0a73be6cc8286ce045185537aeed0b9feb7d)) - aaronvg\n- Fix bug to correctly cast to pydantic types in ambiguous scenarios where BAML knows better (#1059) - ([830b0cb](https://github.com/boundaryml/baml/commit/830b0cb194b99fa6f019928e7466dcf3e3992596)) - hellovai\n- Parser: Prefer case sensitive match over case insensitive (#1063) - ([cd6b141](https://github.com/boundaryml/baml/commit/cd6b141020ec8dfd2514c82ffffaebc5678a025b)) - Antonio Sarosi\n- Only popup the vscode env var dialog once (#1066) - ([1951474](https://github.com/boundaryml/baml/commit/19514745cfc8efeb8bda0be655e0fa2f216e4b29)) - aaronvg\n\n### Documentation\n\n- Docs for literal types (#1030) - ([55e5964](https://github.com/boundaryml/baml/commit/55e596419055c8da52b841b9ecbf16e328bc1033)) - Antonio Sarosi\n- Contribution guide (#1055) - ([f09d943](https://github.com/boundaryml/baml/commit/f09d9432d95c876f5e63f3abdb47a40417c5c45a)) - aaronvg\n\n### Misc\n\n- Fix VSCode metrics (#1044) - ([a131336](https://github.com/boundaryml/baml/commit/a13133656e1610cac9a92aa4b4459c78340c7304)) - hellovai\n- Add more test cases for unquoted strings in objects (#1054) - ([2d1b700](https://github.com/boundaryml/baml/commit/2d1b700e82604e444d904cfeb67f46ced97153a5)) - hellovai\n\n## [0.61.1](https://github.com/boundaryml/baml/compare/0.61.0..0.61.1) - 2024-10-15\n\n### Bug Fixes\n\n- add musl to the ts release artifacts (#1042) - ([e74f3e9](https://github.com/boundaryml/baml/commit/e74f3e90489a403e38b39cc694d30d038ad38b8d)) - Samuel Lijin\n\n## [0.61.0](https://github.com/boundaryml/baml/compare/0.60.0..0.61.0) - 2024-10-14\n\n### Features\n\n- Implement literal types (#978) - ([9e7431f](https://github.com/boundaryml/baml/commit/9e7431f43b74d4428e6a20b9aa3a1e93768ff905)) - Antonio Sarosi\n- allow installing the TS library on node-alpine (#1029) - ([1c37a0d](https://github.com/boundaryml/baml/commit/1c37a0d71d921d13f05340ff6727255ba6074152)) - Samuel Lijin\n- Add WYSIWYG UI (Swagger UI) to baml-cli dev (#1019) - ([0c73cab](https://github.com/boundaryml/baml/commit/0c73cab3d6ac3bbb04cc898ac102900ca9b17f86)) - Greg Hale\n- Suppress streaming for Numbers (#1032) - ([3f4621b](https://github.com/boundaryml/baml/commit/3f4621b36555062312aabd9ba8435b965ba8fd92)) - Greg Hale\n\n### Bug Fixes\n\n- Add limit on connection pool to prevent stalling issues in pyo3 and other ffi boundaries (#1027) - ([eb90e62](https://github.com/boundaryml/baml/commit/eb90e62ffe21109e0da1bd74439d36bb37246ec3)) - hellovai\n- Update docs (#1025) - ([2dd1bb6](https://github.com/boundaryml/baml/commit/2dd1bb6cf743c20af53d7147db8a4573de9cdbe0)) - Farookh Zaheer Siddiqui\n- Fix parsing for streaming of objects more stable (#1031) - ([8aa9c00](https://github.com/boundaryml/baml/commit/8aa9c00b8f26a8c30178ff25aecc1c3b47b6696e)) - hellovai\n- Fix python BamlValidationError type (#1036) - ([59a9510](https://github.com/boundaryml/baml/commit/59a9510c9d2c1216df01b0701cc23afb02e3f700)) - aaronvg\n\n### Miscellaneous\n\n- Popup settings dialog when no env vars set (#1033) - ([b9fa52a](https://github.com/boundaryml/baml/commit/b9fa52aea8686f8095878e7f210c2d937b533c63)) - aaronvg\n- Bump version to 0.61.0 - ([ca2242b](https://github.com/boundaryml/baml/commit/ca2242b26214699268fda9e9ac07338c6491026d)) - Aaron Villalpando\n\n## [0.60.0](https://github.com/boundaryml/baml/compare/0.59.0..0.60.0) - 2024-10-09\n\n### Miscellaneous Chores\n\n- update Dockerfile (#1017) - ([51539b7](https://github.com/boundaryml/baml/commit/51539b7b5778d6a3e6619698d2033d4f66f15d27)) - Ikko Eltociear Ashimine\n- Revert \"feat: add a WYSIWYG UI (Swagger UI) to `baml-cli dev` (#1011)\" (#1018) - ([f235050](https://github.com/boundaryml/baml/commit/f235050a57916116aff8359236b819ac69011a21)) - Greg Hale\n\n### Bug fixes\n\n- Fix python types for BamlValidationError (#1020) - ([520a09c](https://github.com/boundaryml/baml/commit/520a09c478ea8c5eb811447ce9b36689692aa01d)) - aaronvg\n- coerce floats and ints with commas and other special cases (#1023) - ([904492e](https://github.com/boundaryml/baml/commit/904492ee298727085e00a391beb628c8d999083e)) - aaronvg\n\n### Docs\n\n- Add Docs for Jupyter notebook usage (#1008) - ([c51d918](https://github.com/boundaryml/baml/commit/c51d918f76f63ce55b353661459ba3b27b9a0ea7)) - aaronvg\n\n## [0.59.0](https://github.com/boundaryml/baml/compare/0.58.0..0.59.0) - 2024-10-04\n\n### Features\n\n- **(vertex)** allow specifying creds as JSON object (#1009) - ([98868da](https://github.com/boundaryml/baml/commit/98868da4e75dde3a00178cbf60afebc501d37b0c)) - Samuel Lijin\n- Add prompt, raw_output and error message to BamlValidationError in TS and Python (#1005) - ([447dbf4](https://github.com/boundaryml/baml/commit/447dbf4e0d0cf0744307ef50f89050752334d982)) - aaronvg\n- Add BamlValidationError to `baml-cli serve` (#1007) - ([3b8cf16](https://github.com/boundaryml/baml/commit/3b8cf1636594c1a7245a733556efa690da40e139)) - aaronvg\n- Include a WYSIWYG UI (Swagger UI) to `baml-cli dev` (#1011) - ([fe9dde4](https://github.com/BoundaryML/baml/commit/fe9dde4f3a7ff0503fd13087da50e4da9d97c3a0)) - imalsogreg\n\n## [0.58.0](https://github.com/boundaryml/baml/compare/0.57.1..0.58.0) - 2024-10-02\n\n### Features\n\n- Add client registry support for BAML over Rest (OpenAPI) (#1000) - ([abe70bf](https://github.com/boundaryml/baml/commit/abe70bf368c9361a3ab32643735f68e0fafd8425)) - Lorenz Ohly\n\n### Bug Fixes\n\n- Improve performance of parsing escaped characters in strings during streaming. (#1002) - ([b35ae2c](https://github.com/boundaryml/baml/commit/b35ae2c4777572206a79af5c2943f5bdd6ada081)) - hellovai\n\n### Documentation\n\n- Add Docs for Document Extraction API (#996) - ([da1a5e8](https://github.com/boundaryml/baml/commit/da1a5e876368074235f4474673a1ebfe632e11ed)) - aaronvg\n\n## [0.57.1](https://github.com/boundaryml/baml/compare/0.57.0..0.57.1) - 2024-09-29\n\n### Bug Fixes\n\n- [BUGFIX] Parser should require a space between class keyword and class name (#990) - ([7528247](https://github.com/boundaryml/baml/commit/752824723404a4ed4c4b1e31c43d140e9346dca2)) - Greg Hale\n- Remove dynamic string attributes (#991) - ([0960ab2](https://github.com/boundaryml/baml/commit/0960ab2e0d16c50fef58772336b91297ddac6919)) - Greg Hale\n- ts fixes (#992) - ([36af43f](https://github.com/boundaryml/baml/commit/36af43f4f773e1565527916eff7d7837d9f8a983)) - aaronvg\n- Bump version to 0.57.1 - ([0aa71dd](https://github.com/boundaryml/baml/commit/0aa71dd4d3aa7082db6a19f0a3a976ff55789d83)) - Aaron Villalpando\n\n## [0.57.0](https://github.com/boundaryml/baml/compare/0.56.1..0.57.0) - 2024-09-27\n\n### Documentation\n\n- Fix Python dynamic types example (#979) - ([eade116](https://github.com/boundaryml/baml/commit/eade116de14bcc15d738fec911d8653685c13706)) - lorenzoh\n\n### Features\n\n- teach vscode/fiddle to explain when we drop information (#897) - ([93e2b9b](https://github.com/boundaryml/baml/commit/93e2b9b8d54a4ced0853ce72596d0b0a9896a0da)) - Samuel Lijin\n- Add ability for users to reset env vars to their desire. (#984) - ([69e6c29](https://github.com/boundaryml/baml/commit/69e6c29c82ccc06f8939b9ece75dd7797c8f6b98)) - hellovai\n\n### Bug Fixes\n\n- Fixed panic during logging for splitting on UTF-8 strings. (#987) - ([c27a64f](https://github.com/boundaryml/baml/commit/c27a64f6320515cd5ab6385ab93013d3d7ba88b8)) - hellovai\n- Improve SAP for triple quoted strings along with unions (#977) - ([44202ab](https://github.com/boundaryml/baml/commit/44202ab63aa3d2881485b9b32fa744797c908e33)) - hellovai\n- Add more unit tests for parsing logic inspired by user (#980) - ([48dd09f](https://github.com/boundaryml/baml/commit/48dd09f89b6447cbc1a539ecade66ab4da87b8dc)) - hellovai\n- Improve syntax errors e.g. class / enum parsing and also update pestmodel to handle traling comments (#981) - ([adbb6ae](https://github.com/boundaryml/baml/commit/adbb6ae38833d700bfe0123ac712cd90d7e4d970)) - hellovai\n- Updating docs for env vars (#985) - ([305d6b3](https://github.com/boundaryml/baml/commit/305d6b3e5a57513adc43c8ab9068c523dfc2e69c)) - hellovai\n- When using openai-generic, use a string as the content type in the api request if theres no media (#988) - ([e8fa739](https://github.com/boundaryml/baml/commit/e8fa739838cc124a8eed49103871b1b971063821)) - aaronvg\n\n## [0.56.1](https://github.com/boundaryml/baml/compare/0.56.0..0.56.1) - 2024-09-21\n\n### Bug Fixes\n\n- Improved parser for unions (#975) - ([b390521](https://github.com/boundaryml/baml/commit/b39052111529f217762b3271846006bec4a604de)) - hellovai\n- [syntax] Allow lists to contain trailing comma (#974) - ([9e3dc6c](https://github.com/boundaryml/baml/commit/9e3dc6c90954905a96b599ef28c40094fe48a43e)) - Greg Hale\n\n## [0.56.0](https://github.com/boundaryml/baml/compare/0.55.3..0.56.0) - 2024-09-20\n\nShout outs to Nico for fixing some internal Rust dependencies, and to Lorenz for correcting our documentation! We really appreciate it :)\n\n### Features\n\n- use better default for openapi/rust client (#958) - ([b74ef15](https://github.com/boundaryml/baml/commit/b74ef15fd4dc09ecc7d1ac8284e7f22cd6d5864c)) - Samuel Lijin\n\n### Bug Fixes\n\n- push optional-list and optional-map validation to post-parse (#959) - ([c0480d5](https://github.com/boundaryml/baml/commit/c0480d5cfd46ce979e957223dc7b5fa744778552)) - Samuel Lijin\n- improve OpenAPI instructions for windows/java (#962) - ([6010efb](https://github.com/boundaryml/baml/commit/6010efbb7990fda966640c3af267de41362d3fa4)) - Samuel Lijin\n- assorted fixes: unquoted strings, openai-generic add api_key for bearer auth, support escape characters in quoted strings (#965) - ([847f3a9](https://github.com/boundaryml/baml/commit/847f3a9bb0f00303eae7e410663efc63e54c38b6)) - hellovai\n- serde-serialize can cause a package dependency cycle (#967) - ([109ae09](https://github.com/boundaryml/baml/commit/109ae0914852f2ee4a771d27103e4e46ad672647)) - Nico\n- make anthropic work in fiddle/vscode (#970) - ([32eccae](https://github.com/boundaryml/baml/commit/32eccae44b27c3fec5fbc3270b6657819d75a426)) - Samuel Lijin\n- make dynamic enums work as outputs in Ruby (#972) - ([7530402](https://github.com/boundaryml/baml/commit/7530402f0dc063f10f57cf7aa7f06790574de705)) - Samuel Lijin\n\n### Documentation\n\n- suggest correct python init command in vscode readme (#954) - ([e99c5dd](https://github.com/boundaryml/baml/commit/e99c5dd1903078d08aef451e4addc6110d7ca279)) - Samuel Lijin\n- add more vscode debugging instructions (#955) - ([342b657](https://github.com/boundaryml/baml/commit/342b657da69441306fa7711d7d14893cf8036f84)) - Samuel Lijin\n- NextJS hook needs to be bound to the correct context (#957) - ([ee80451](https://github.com/boundaryml/baml/commit/ee80451de85063b37e658ba58571c791e8514273)) - aaronvg\n- update nextjs hooks and docs (#952) - ([01cf855](https://github.com/boundaryml/baml/commit/01cf855500159066fdcd162dc2e2087768d5ba28)) - aaronvg\n- Fix some documentation typos (#966) - ([5193cd7](https://github.com/boundaryml/baml/commit/5193cd70686173c863af5ce40fd6bb3792406951)) - Greg Hale\n- Keywords AI router (#953) - ([1c6f975](https://github.com/boundaryml/baml/commit/1c6f975d8cc793841745da0db82ee1e2f1908e56)) - aaronvg\n- Fix `post_generate` comment (#968) - ([919c79f](https://github.com/boundaryml/baml/commit/919c79fa8cd85a96e6559055b2bb436d925dcb2a)) - lorenzoh\n\n### Bug Fixes\n\n- show actionable errors for string[]? and map&gt;...>? type validation (#946) - ([48879c0](https://github.com/boundaryml/baml/commit/48879c0744f79b482ef0d2b0624464053558ada4)) - Samuel Lijin\n\n### Documentation\n\n- add reference docs about env vars (#945) - ([dd43bc5](https://github.com/boundaryml/baml/commit/dd43bc59087e809e09ca7d3caf628e179a28fc3e)) - Samuel Lijin\n\n## [0.55.2](https://github.com/boundaryml/baml/compare/0.55.1..0.55.2) - 2024-09-11\n\n### Bug Fixes\n\n- use correct locking strategy inside baml-cli serve (#943) - ([fcb694d](https://github.com/boundaryml/baml/commit/fcb694d033317d8538cc7b2c61aaa94f772778db)) - Samuel Lijin\n\n### Features\n\n- allow using DANGER_ACCEPT_INVALID_CERTS to disable https verification (#901) - ([8873fe7](https://github.com/boundaryml/baml/commit/8873fe7577bc879cf0d550063252c4532dcdfced)) - Samuel Lijin\n\n## [0.55.1](https://github.com/boundaryml/baml/compare/0.55.0..0.55.1) - 2024-09-10\n\n### Bug Fixes\n\n- in generated TS code, put eslint-disable before ts-nocheck - ([16d04c6](https://github.com/BoundaryML/baml/commit/16d04c6e360eefca10b4e0d008b03c34de279491)) - Sam Lijin\n- baml-cli in python works again - ([b57ca0f](https://github.com/boundaryml/baml/commit/b57ca0f529c80f59b79b19132a8f1339a6b7bfe2)) - Sam Lijin\n\n### Documentation\n\n- update java install instructions (#933) - ([b497003](https://github.com/boundaryml/baml/commit/b49700356f2f69c4acbdc953a66a95224656ffaf)) - Samuel Lijin\n\n### Miscellaneous Chores\n\n- add version headers to the openapi docs (#931) - ([21545f2](https://github.com/boundaryml/baml/commit/21545f2a4d9b3987134d98ac720705dde2045290)) - Samuel Lijin\n\n## [0.55.0](https://github.com/boundaryml/baml/compare/0.54.2..0.55.0) - 2024-09-09\n\nWith this release, we're announcing support for BAML in all languages: we now\nallow you to call your functions over an HTTP interface, and will generate an\nOpenAPI specification for your BAML functions, so you can now generate a client\nin any language of your choice, be it Golang, Java, PHP, Ruby, Rust, or any of\nthe other languages which OpenAPI supports.\n\nStart here to learn more: https://docs.boundaryml.com/docs/get-started/quickstart/openapi\n\n### Features\n\n- implement BAML-over-HTTP (#908) - ([484fa93](https://github.com/boundaryml/baml/commit/484fa93a5a4b4677f531e6ef03bb88d144925c12)) - Samuel Lijin\n- Add anonymous telemetry about playground actions (#925) - ([6f58c9e](https://github.com/boundaryml/baml/commit/6f58c9e3e464a8e774771706c2b0d76adb9e6cda)) - hellovai\n\n## [0.54.2](https://github.com/boundaryml/baml/compare/0.54.1..0.54.2) - 2024-09-05\n\n### Features\n\n- Add a setting to disable restarting TS server in VSCode (#920) - ([628f236](https://github.com/boundaryml/baml/commit/628f2360c415fa8a7b0cd90d7249733ff06acaa9)) - aaronvg\n- Add prompt prefix for map types in ctx.output_format and add more type validation for map params (#919) - ([4d304c5](https://github.com/boundaryml/baml/commit/4d304c583b9188c1963a34e2a153baaf003e36ac)) - hellovai\n\n### Bug fixes\n\n- Fix glibC issues for python linux-x86_64 (#922) - ([9161bec](https://github.com/boundaryml/baml/commit/9161becccf626f8d13a15626481720f29e0f992c)) - Samuel Lijin\n\n### Documentation\n\n- Add nextjs hooks (#921) - ([fe14f5a](https://github.com/boundaryml/baml/commit/fe14f5a4ef95c9ccda916ff80ce852d3855554a3)) - aaronvg\n\n## [0.54.1](https://github.com/boundaryml/baml/compare/0.54.0..0.54.1) - 2024-09-03\n\n### BREAKING CHANGE\n\n- Fix escape characters in quoted strings (#905) - ([9ba6eb8](https://github.com/boundaryml/baml/commit/9ba6eb834e0145f4c57e582b63730d3d0ac9b2e9)) - hellovai\n\nPrior `\"\\n\"` was interpreted as `\"\\\\n\"` in quoted strings. This has been fixed to interpret `\"\\n\"` as newline characters and true for other escape characters.\n\n### Documentation\n\n- updated dead vs-code-extension link (#914) - ([b12f164](https://github.com/boundaryml/baml/commit/b12f1649cf5bfd0d457c5d6d117fd3a21ba5dc6b)) - Christian Warmuth\n- Update docs for setting env vars (#904) - ([ec1ca94](https://github.com/boundaryml/baml/commit/ec1ca94c91af2a51b4190a0bad0e0bc1c052f2a3)) - hellovai\n- Add docs for LMStudio (#906) - ([ea4c187](https://github.com/boundaryml/baml/commit/ea4c18782de1f713e8d69d473f9e1818c97024c6)) - hellovai\n- Fix docs for anthropic (#910) - ([aba2764](https://github.com/boundaryml/baml/commit/aba2764e5b04820d00b08bf52bda603ee27631f1)) - hellovai\n- Update discord links on docs (#911) - ([927357d](https://github.com/boundaryml/baml/commit/927357dd64b36c25513352ed4968ebc62dad6132)) - hellovai\n\n### Features\n\n- BAML_LOG will truncate messages to 1000 characters (modify using env var BOUNDARY_MAX_LOG_CHUNK_SIZE) (#907) - ([d266e5c](https://github.com/boundaryml/baml/commit/d266e5c4157f3b28d2f6454a7ea265dda7296bb2)) - hellovai\n\n### Bug Fixes\n\n- Improve parsing parsing when there are initial closing `]` or `}` (#903) - ([46b0cde](https://github.com/boundaryml/baml/commit/46b0cdeffb15bbab20a43728f52ad2a05623e6f7)) - hellovai\n- Update build script for ruby to build all platforms (#915) - ([df2f51e](https://github.com/boundaryml/baml/commit/df2f51e52615451b3643cc124e7262f11965f3ef)) - hellovai\n- Add unit-test for openai-generic provider and ensure it compiles (#916) - ([fde7c50](https://github.com/boundaryml/baml/commit/fde7c50c939c505906417596d16c7c4607173339)) - hellovai\n\n## [0.54.0](https://github.com/boundaryml/baml/compare/0.53.1..0.54.0) - 2024-08-27\n\n### BREAKING CHANGE\n\n- Update Default Gemini Base URL to v1beta (#891) - ([a5d8c58](https://github.com/boundaryml/baml/commit/a5d8c588e0fd0b7e186d7c71f1f6171334250629)) - gleed\n\nThe default base URL for the Gemini provider has been updated to v1beta. This change is should have no impact on existing users as v1beta is the default version for the Gemini python library, we are mirroring this change in BAML.\n\n### Bug Fixes\n\n- Allow promptfiddle to talk to localhost ollama (#886) - ([5f02b2a](https://github.com/boundaryml/baml/commit/5f02b2ac688ceeb5a34e848a8ff87fd43a6b093a)) - Samuel Lijin\n- Update Parser for unions so they handle nested objects better (#900) - ([c5b9a75](https://github.com/boundaryml/baml/commit/c5b9a75ea6da7c45da1999032e2b256bec97d922)) - hellovai\n\n### Documentation\n\n- Add ollama to default prompt fiddle example (#888) - ([49146c0](https://github.com/boundaryml/baml/commit/49146c0e50c88615e4cc97adb595849c23bad8ae)) - Samuel Lijin\n- Adding improved docs + unit tests for caching (#895) - ([ff7be44](https://github.com/boundaryml/baml/commit/ff7be4478b706da049085d432b2ec98627b5da1f)) - hellovai\n\n### Features\n\n- Allow local filepaths to be used in tests in BAML files (image and audio) (#871) - ([fa6dc03](https://github.com/boundaryml/baml/commit/fa6dc03fcdd3255dd83e25d0bfb3b0e740991408)) - Samuel Lijin\n- Add support for absolute file paths in the file specifier (#881) - ([fcd189e](https://github.com/boundaryml/baml/commit/fcd189ed7eb81712bf3b641eb3dde158fc6a62af)) - hellovai\n- Implement shorthand clients (You can now use \"openai/gpt-4o\" as short for creating a complete client.) (#879) - ([ddd15c9](https://github.com/boundaryml/baml/commit/ddd15c92c3e8d81c24cb7305c9fcbb36b819900f)) - Samuel Lijin\n- Add support for arbritrary metadata (e.g. cache_policy for anthropic) (#893) - ([0d63a70](https://github.com/boundaryml/baml/commit/0d63a70332477761a97783e203c98fd0bf67f151)) - hellovai\n- Expose Exceptions to user code: BamlError, BamlInvalidArgumentError, BamlClientError, BamlClientHttpError, BamlValidationError (#770) - ([7da14c4](https://github.com/boundaryml/baml/commit/7da14c480506e9791b3f4ce52ac73836a042d38a)) - hellovai\n\n### Internal\n\n- AST Restructuring (#857) - ([75b51cb](https://github.com/boundaryml/baml/commit/75b51cbf80a0c8ba19ae05b021ef3c94dacb4e30)) - Anish Palakurthi\n\n## [0.53.1](https://github.com/boundaryml/baml/compare/0.53.0..0.53.1) - 2024-08-11\n\n### Bug Fixes\n\n- fix github release not passing params to napi script causing issues in x86_64 (#872)\n\n- ([06b962b](https://github.com/boundaryml/baml/commit/06b962b945f958bf0637d13fec22bd2d59c64c5f)) - aaronvg\n\n### Features\n\n- Add Client orchestration graph in playground (#801) - ([24b5895](https://github.com/boundaryml/baml/commit/24b5895a1f45ac04cba0f19e6da727b5ee766186)) - Anish Palakurthi\n- increase range of python FFI support (#870) - ([ec9b66c](https://github.com/boundaryml/baml/commit/ec9b66c31faf97a58c81c264c7fa1b32e0e9f0ae)) - Samuel Lijin\n\n### Misc\n\n- Bump version to 0.53.1 - ([e4301e3](https://github.com/boundaryml/baml/commit/e4301e37835483f51edf1cad6478e46ff67508fc)) - Aaron Villalpando\n\n## [0.53.0](https://github.com/boundaryml/baml/compare/0.52.1..0.53.0) - 2024-08-05\n\n### Bug Fixes\n\n- make image[] render correctly in prompts (#855) - ([4a17dce](https://github.com/boundaryml/baml/commit/4a17dce43c05efd5f4ea304f2609fe140de1dd8c)) - Samuel Lijin\n\n### Features\n\n- **(ruby)** implement dynamic types, dynamic clients, images, and audio (#842) - ([4a21eed](https://github.com/boundaryml/baml/commit/4a21eed668f32b042fba61f24c9efb8b3794a420)) - Samuel Lijin\n- Codelenses for test cases (#812) - ([7cd8794](https://github.com/boundaryml/baml/commit/7cd87942bf50a72de0ad46154f164fb2c174f25b)) - Anish Palakurthi\n\n### Issue\n\n- removed vertex auth token printing (#846) - ([b839316](https://github.com/boundaryml/baml/commit/b83931665a2c3b840eb6c6d31cf3d01c7926e52e)) - Anish Palakurthi\n- Fix google type deserialization issue - ([a55b9a1](https://github.com/boundaryml/baml/commit/a55b9a106176ed1ce34bb63397610c2640b37f16)) - Aaron Villalpando\n\n### Miscellaneous Chores\n\n- clean up release stuff (#836) - ([eed41b7](https://github.com/boundaryml/baml/commit/eed41b7474417d2e65b2c5d742234cc20fc5644e)) - Samuel Lijin\n- Add bfcl results to readme, fix links icons (#856) - ([5ef7f3d](https://github.com/boundaryml/baml/commit/5ef7f3db99d8d23ff97f1e8372ee71ab7aa127aa)) - aaronvg\n- Fix prompt fiddle and playground styles, add more logging, and add stop-reason to playground (#858) - ([38e3153](https://github.com/boundaryml/baml/commit/38e3153843a17ae1e87ae9879ab4374b083d77d0)) - aaronvg\n- Bump version to 0.53.0 - ([fd16839](https://github.com/boundaryml/baml/commit/fd16839a2c0b9d92bd5bdcb57f950e22d0a29959)) - Aaron Villalpando\n\n## [0.52.1](https://github.com/boundaryml/baml/compare/0.52.0..0.52.1) - 2024-07-24\n\n### Bug Fixes\n\n- build python x86_64-linux with an older glibc (#834) - ([db12540](https://github.com/boundaryml/baml/commit/db12540a92abf055e286c60864299f53c246b62a)) - Samuel Lijin\n\n## [0.52.0](https://github.com/boundaryml/baml/compare/0.51.3..0.52.0) - 2024-07-24\n\n### Features\n\n- Add official support for ruby (#823) - ([e81cc79](https://github.com/boundaryml/baml/commit/e81cc79498809a79f427864704b140967a41277a)) - Samuel Lijin\n\n### Bug Fixes\n\n- Fix ClientRegistry for Typescript code-gen (#828) - ([b69921f](https://github.com/boundaryml/baml/commit/b69921f45df0182072b09ab28fe6231ccfaa5767)) - hellovai\n\n## [0.51.2](https://github.com/boundaryml/baml/compare/0.51.1..0.51.2) - 2024-07-24\n\n### Features\n\n- Add support for unions / maps / null in TypeBuilder. (#820) - ([8d9e92d](https://github.com/boundaryml/baml/commit/8d9e92d3050a67edbec5ee6056397becbcdb754b)) - hellovai\n\n### Bug Fixes\n\n- [Playground] Add a feedback button (#818) - ([f749f2b](https://github.com/boundaryml/baml/commit/f749f2b19b247de2f050beccd1fe8e50b7625757)) - Samuel Lijin\n\n### Documentation\n\n- Improvements across docs (#807) - ([bc0c176](https://github.com/boundaryml/baml/commit/bc0c1761699ee2485a0a8ee61cf4fda6b579f974)) - Anish Palakurthi\n\n## [0.51.1](https://github.com/boundaryml/baml/compare/0.51.0..0.51.1) - 2024-07-21\n\n### Features\n\n- Add a feedback button to VSCode Extension (#811) - ([f371912](https://github.com/boundaryml/baml/commit/f3719127174d8f998579747f14fae8675dafba4c)) - Samuel Lijin\n\n### Bug\n\n- Allow default_client_mode in the generator #813 (#815) - ([6df7fca](https://github.com/boundaryml/baml/commit/6df7fcabc1eb55b08a50741f2346440f631abd63)) - hellovai\n\n## [0.51.0](https://github.com/boundaryml/baml/compare/0.50.0..0.51.0) - 2024-07-19\n\n### Bug Fixes\n\n- Improve BAML Parser for numbers and single-key objects (#785) - ([c5af7b0](https://github.com/boundaryml/baml/commit/c5af7b0d0e881c3046171ca17f317d820e8882e3)) - hellovai\n- Add docs for VLLM (#792) - ([79e8773](https://github.com/boundaryml/baml/commit/79e8773e38da524795dda606b9fae09a274118e1)) - hellovai\n- LLVM install and rebuild script (#794) - ([9ee66ed](https://github.com/boundaryml/baml/commit/9ee66ed2dd14bc0ee12a788f41eae64377e7f2b0)) - Anish Palakurthi\n- Prevent version mismatches when generating baml_client (#791) - ([d793603](https://github.com/boundaryml/baml/commit/d7936036e6afa4a0e738242cfb3feaa9e15b3657)) - aaronvg\n- fiddle build fix (#800) - ([d304203](https://github.com/boundaryml/baml/commit/d304203241726ac0ba8781db7ac5693339189eb4)) - aaronvg\n- Dont drop extra fields in dynamic classes when passing them as inputs to a function (#802) - ([4264c9b](https://github.com/boundaryml/baml/commit/4264c9b143edda0239af197d110357b1969bf12c)) - aaronvg\n- Adding support for a sync client for Python + Typescript (#803) - ([62085e7](https://github.com/boundaryml/baml/commit/62085e79d4d86f580ce189bc60f36bd1414893c4)) - hellovai\n- Fix WASM-related issues introduced in #803 (#804) - ([0a950e0](https://github.com/boundaryml/baml/commit/0a950e084748837ee2e269504d22dba66f339ca4)) - hellovai\n- Adding various fixes (#806) - ([e8c1a61](https://github.com/boundaryml/baml/commit/e8c1a61a96051160566b6458dac5c89d5ddfb86e)) - hellovai\n\n### Features\n\n- implement maps in BAML (#797) - ([97d7e62](https://github.com/boundaryml/baml/commit/97d7e6223c68e9c338fe7110554f1f26b966f7e3)) - Samuel Lijin\n- Support Vertex AI (Google Cloud SDK) (#790) - ([d98ee81](https://github.com/boundaryml/baml/commit/d98ee81a9440de0aaa6de05b33b8d3f709003a00)) - Anish Palakurthi\n- Add copy buttons to test results in playground (#799) - ([b5eee3d](https://github.com/boundaryml/baml/commit/b5eee3d15a1be4373e25cc8ef1cf6e70d5dd39c9)) - aaronvg\n\n### Miscellaneous Chores\n\n- in fern config, defer to installed version (#789) - ([479f1b2](https://github.com/boundaryml/baml/commit/479f1b2b0b52faf47bc529e4c06c533a9467269a)) - fern\n- publish docs on every push to the default branch (#796) - ([180824a](https://github.com/boundaryml/baml/commit/180824a3857a32eae679e4df5704abba3aa6246c)) - Samuel Lijin\n- 🌿 introducing fern docs (#779) - ([46f06a9](https://github.com/boundaryml/baml/commit/46f06a95a1e262e62476768b812b372b696da1be)) - fern\n- Add test for dynamic list input (#798) - ([7528d6a](https://github.com/boundaryml/baml/commit/7528d6ae10427c1304e356cf5b3c664e4fb2b1b1)) - aaronvg\n\n## [0.50.0](https://github.com/boundaryml/baml/compare/0.49.0..0.50.0) - 2024-07-11\n\n### Bug Fixes\n\n- [Playground] Environment variable button is now visible on all themes (#762) - ([adc4da1](https://github.com/boundaryml/baml/commit/adc4da1fa36cc9c30ea36e25de1a6cefcce0bc97)) - aaronvg\n- [Playground] Fix to cURL rendering and mime_type overriding (#763) - ([67f9c6a](https://github.com/boundaryml/baml/commit/67f9c6add5ea8bbbd5ee82c28476fe0ebbefe344)) - Anish Palakurthi\n\n### Features\n\n- [Runtime] Add support for clients that change at runtime using ClientRegistry (#683) - ([c0fb454](https://github.com/boundaryml/baml/commit/c0fb4540d9193194fcafd7fcef71468442d9e6fa)) - hellovai\n  https://docs.boundaryml.com/docs/calling-baml/client-registry\n\n### Documentation\n\n- Add more documentation for TypeBuilder (#767) - ([85dc8ab](https://github.com/boundaryml/baml/commit/85dc8ab41e0df3267249a1efc4a95f010e52cc73)) - Samuel Lijin\n\n## [0.49.0](https://github.com/boundaryml/baml/compare/0.46.0..0.49.0) - 2024-07-08\n\n### Bug Fixes\n\n- Fixed Azure / Ollama clients. Removing stream_options from azure and ollama clients (#760) - ([30bf88f](https://github.com/boundaryml/baml/commit/30bf88f65c8583ab02db6a7b7db40c1e9f3b05b6)) - hellovai\n\n### Features\n\n- Add support for arm64-linux (#751) - ([adb8ee3](https://github.com/boundaryml/baml/commit/adb8ee3097fd386370f75b3ba179d18b952e9678)) - Samuel Lijin\n\n## [0.48.0](https://github.com/boundaryml/baml/compare/0.47.0..0.48.0) - 2024-07-04\n\n### Bug Fixes\n\n- Fix env variables dialoge on VSCode (#750)\n- Playground selects correct function after loading (#757) - ([09963a0](https://github.com/boundaryml/baml/commit/09963a02e581da9eb8f7bafd3ba812058c97f672)) - aaronvg\n\n### Miscellaneous Chores\n\n- Better error messages on logging failures to Boundary Studio (#754) - ([49c768f](https://github.com/boundaryml/baml/commit/49c768fbe8eb8023cba28b8dc68c2553d8b2318a)) - aaronvg\n\n## [0.47.0](https://github.com/boundaryml/baml/compare/0.46.0..0.47.0) - 2024-07-03\n\n### Bug Fixes\n\n- make settings dialog work in vscode again (#750) ([c94e355](https://github.com/boundaryml/baml/commit/c94e35551872f65404136b60f800fb1688902c11)) - aaronvg\n- restore releases on arm64-linux (#751) - ([adb8ee3](https://github.com/boundaryml/baml/commit/adb8ee3097fd386370f75b3ba179d18b952e9678)) - Samuel Lijin\n\n## [0.46.0](https://github.com/boundaryml/baml/compare/0.45.0..0.46.0) - 2024-07-03\n\n### Bug Fixes\n\n- Fixed tracing issues for Boundary Studio (#740) - ([77a4db7](https://github.com/boundaryml/baml/commit/77a4db7ef4b939636472ad4975d74e9d1a577cbf)) - Samuel Lijin\n- Fixed flush() to be more reliable (#744) - ([9dd5fda](https://github.com/boundaryml/baml/commit/9dd5fdad5c2897b49a5a536df2e9ef775857a39d)) - Samuel Lijin\n- Remove error when user passes in extra fields in a class (#746) - ([2755b43](https://github.com/boundaryml/baml/commit/2755b43257f9405ae66a30982d9711fc3f2c0854)) - aaronvg\n\n### Features\n\n- Add support for base_url for the google-ai provider (#747) - ([005b1d9](https://github.com/boundaryml/baml/commit/005b1d93b7f7d2aa12a1487911766cccd9c25e98)) - hellovai\n- Playground UX improvements (#742) - ([5cb56fd](https://github.com/boundaryml/baml/commit/5cb56fdc39496f0aedacd79766c0e93cb0e401b8)) - hellovai\n- Prompt Fiddle now auto-switches functions when to change files (#745)\n\n### Documentation\n\n- Added a large example project on promptfiddle.com (#741) - ([f80da1e](https://github.com/boundaryml/baml/commit/f80da1e1dd11f0457b5789bc9ce6923a8ed88b51)) - aaronvg\n- Mark ruby as in beta (#743) - ([901109d](https://github.com/boundaryml/baml/commit/901109dbb327e6e3e1b65fda37100fcd45f97e07)) - Samuel Lijin\n\n## [0.45.0](https://github.com/boundaryml/baml/compare/0.44.0..0.45.0) - 2024-06-29\n\n### Bug Fixes\n\n- Fixed streaming in Python Client which didn't show result until later (#726) - ([e4f2daa](https://github.com/boundaryml/baml/commit/e4f2daa9e85bb1711d112fb0c87c0d769be0bb2d)) - Anish Palakurthi\n- Improve playground stability on first load (#732) - ([2ac7b32](https://github.com/boundaryml/baml/commit/2ac7b328e89400cba0d9eb4f6d09c6a03feb71a5)) - Anish Palakurthi\n- Add improved static analysis for jinja (#734) - ([423faa1](https://github.com/boundaryml/baml/commit/423faa1af5a594b7f78f7bb5620e3146a8989da5)) - hellovai\n\n### Documentation\n\n- Docs for Dynamic Types (#722) [https://docs.boundaryml.com/docs/calling-baml/dynamic-types](https://docs.boundaryml.com/docs/calling-baml/dynamic-types)\n\n### Features\n\n- Show raw cURL request in Playground (#723) - ([57928e1](https://github.com/boundaryml/baml/commit/57928e178549cb3e5118ce374aab5d0fbad7038b)) - Anish Palakurthi\n- Support bedrock as a provider (#725) - ([c64c665](https://github.com/boundaryml/baml/commit/c64c66522a1d496493a30f593103209acd201364)) - Samuel Lijin\n\n## [0.44.0](https://github.com/boundaryml/baml/compare/0.43.0..0.44.0) - 2024-06-26\n\n### Bug Fixes\n\n- Fix typebuilder for random enums (#721)\n\n## [0.43.0](https://github.com/boundaryml/baml/compare/0.42.0..0.43.0) - 2024-06-26\n\n### Bug Fixes\n\n- fix pnpm lockfile issue (#720)\n\n## [0.42.0](https://github.com/boundaryml/baml/compare/0.41.0..0.42.0) - 2024-06-26\n\n### Bug Fixes\n\n- correctly propagate LICENSE to baml-py (#695) - ([3fda880](https://github.com/boundaryml/baml/commit/3fda880bf39b32191b425ae75e8b491d10884cf6)) - Samuel Lijin\n\n### Miscellaneous Chores\n\n- update jsonish readme (#685) - ([b19f04a](https://github.com/boundaryml/baml/commit/b19f04a059ba18d54544cb278b6990b95170d3f3)) - Samuel Lijin\n\n### Vscode\n\n- add link to tracing, show token counts (#703) - ([64aa18a](https://github.com/boundaryml/baml/commit/64aa18a9cc34071655141c8f6e2ad04ac90e7be1)) - Samuel Lijin\n\n## [0.41.0] - 2024-06-20\n\n### Bug Fixes\n\n- rollback git lfs, images broken in docs rn (#534) - ([6945506](https://github.com/boundaryml/baml/commit/694550664fa45b5f76987e2663c9d7e7a9a6a2d2)) - Samuel Lijin\n- search for markdown blocks correctly (#641) - ([6b8abf1](https://github.com/boundaryml/baml/commit/6b8abf1ccf55bbe7c3bc1046c78081126e01f134)) - Samuel Lijin\n- restore one-workspace-per-folder (#656) - ([a464bde](https://github.com/boundaryml/baml/commit/a464bde566199ace45285a78a7f542cd7217fb65)) - Samuel Lijin\n- ruby generator should be ruby/sorbet (#661) - ([0019f39](https://github.com/boundaryml/baml/commit/0019f3951b8fe2b49e62eb11d869516b8088e9cb)) - Samuel Lijin\n- ruby compile error snuck in (#663) - ([0cb2583](https://github.com/boundaryml/baml/commit/0cb25831788eb8b3eb0a38383917f6d1ffb5633a)) - Samuel Lijin\n\n### Documentation\n\n- add typescript examples (#477) - ([532481c](https://github.com/boundaryml/baml/commit/532481c3df4063b37a8834a5fe2bbce3bb37d2f5)) - Samuel Lijin\n- add titles to code blocks for all CodeGroup elems (#483) - ([76c6b68](https://github.com/boundaryml/baml/commit/76c6b68b27ee37972fa226be0b4dfe31f7b4b5ec)) - Samuel Lijin\n- add docs for round-robin clients (#500) - ([221f902](https://github.com/boundaryml/baml/commit/221f9020d850e6d24fe2fd8a684081726a0659af)) - Samuel Lijin\n- add ruby example (#689) - ([16e187f](https://github.com/boundaryml/baml/commit/16e187f6698a1cc86a37eedf2447648d810370ad)) - Samuel Lijin\n\n### Features\n\n- implement `baml version --check --output json` (#444) - ([5f076ac](https://github.com/boundaryml/baml/commit/5f076ace1f92dc2141b231c9e62f4dc23f7fef18)) - Samuel Lijin\n- show update prompts in vscode (#451) - ([b66da3e](https://github.com/boundaryml/baml/commit/b66da3ee355fcd6a8677d834ecb05af44cbf8f20)) - Samuel Lijin\n- add tests to check that baml version --check works (#454) - ([be1499d](https://github.com/boundaryml/baml/commit/be1499dfa82ff8ab923a16d45290758120d95015)) - Samuel Lijin\n- parse typescript versions in version --check (#473) - ([b4b2250](https://github.com/boundaryml/baml/commit/b4b2250c37b900db899256159bbfc3aa2ec819cb)) - Samuel Lijin\n- implement round robin client strategies (#494) - ([599fcdd](https://github.com/boundaryml/baml/commit/599fcdd2a45c5b1e935f36769784ca944566b88c)) - Samuel Lijin\n- add integ-tests support to build (#542) - ([f59cf2e](https://github.com/boundaryml/baml/commit/f59cf2e1a9ec7edbe174f4bc7ff9391f2cff3208)) - Samuel Lijin\n- make ruby work again (#650) - ([6472bec](https://github.com/boundaryml/baml/commit/6472bec231b581076ee7edefaab2e7979b2bf336)) - Samuel Lijin\n- Add RB2B tracking script (#682) - ([54547a3](https://github.com/boundaryml/baml/commit/54547a34d40cd40a43767919dbc9faa68a82faea)) - hellovai\n\n### Miscellaneous Chores\n\n- add nodemon config to typescript/ (#435) - ([231b396](https://github.com/boundaryml/baml/commit/231b3967bc947c4651156bc55fd66552782824c9)) - Samuel Lijin\n- finish gloo to BoundaryML renames (#452) - ([88a7fda](https://github.com/boundaryml/baml/commit/88a7fdacc826e78ef21c6b24745ee469d9d02e6a)) - Samuel Lijin\n- set up lfs (#511) - ([3a43143](https://github.com/boundaryml/baml/commit/3a431431e8e38dfc68763f15ccdcd1d131f23984)) - Samuel Lijin\n- add internal build tooling for sam (#512) - ([9ebacca](https://github.com/boundaryml/baml/commit/9ebaccaa542760cb96382ae2a91d780f1ade613b)) - Samuel Lijin\n- delete clients dir, this is now dead code (#652) - ([ec2627f](https://github.com/boundaryml/baml/commit/ec2627f59c7fe9edfff46fcdb65f9b9f0e2e072c)) - Samuel Lijin\n- consolidate vscode workspace, bump a bunch of deps (#654) - ([82bf6ab](https://github.com/boundaryml/baml/commit/82bf6ab1ad839f84782a7ef0441f21124c368757)) - Samuel Lijin\n- Add RB2B tracking script to propmt fiddle (#681) - ([4cf806b](https://github.com/boundaryml/baml/commit/4cf806bba26563fd8b6ddbd68296ab8bdfac21c4)) - hellovai\n- Adding better release script (#688) - ([5bec282](https://github.com/boundaryml/baml/commit/5bec282d39d2250b39ef4aba5d6bba9830a35988)) - hellovai\n\n### [AUTO\n\n- patch] Version bump for nightly release [NIGHTLY:cli] [NIGHTLY:vscode_ext] [NIGHTLY:client-python] - ([d05a22c](https://github.com/boundaryml/baml/commit/d05a22ca4135887738adbce638193d71abca42ec)) - GitHub Action\n\n### Build\n\n- fix baml-core-ffi script (#521) - ([b1b7f4a](https://github.com/boundaryml/baml/commit/b1b7f4af0991ef6453f888f27930f3faaae337f5)) - Samuel Lijin\n- fix engine/ (#522) - ([154f646](https://github.com/boundaryml/baml/commit/154f6468ec0aa6de1b033ee1cbc76e60acc363ea)) - Samuel Lijin\n\n### Integ-tests\n\n- add ruby test - ([c0bc101](https://github.com/boundaryml/baml/commit/c0bc10126ea32d099f1398f2c5faa08b111554ba)) - Sam Lijin\n\n### Readme\n\n- add function calling, collapse the table (#505) - ([2f9024c](https://github.com/boundaryml/baml/commit/2f9024c28ba438267de37ac43c6570a2f0398b5a)) - Samuel Lijin\n\n### Release\n\n- bump versions for everything (#662) - ([c0254ae](https://github.com/boundaryml/baml/commit/c0254ae680365854c51c7a4e58ea68d1901ea033)) - Samuel Lijin\n\n### Vscode\n\n- check for updates on the hour (#434) - ([c70a3b3](https://github.com/boundaryml/baml/commit/c70a3b373cb2346a0df9a1eba0ebacb74d59b53e)) - Samuel Lijin\n\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 11.0771484375,
          "content": "# Contributing to BAML\n\nFirst off, thanks for your interest in contributing to BAML! We appreciate all the help we can get in making it the best way to build any AI agents or applications.\n\n## Table of Contents\n\n- [How to Contribute](#how-to-contribute)\n   - [Join our Community](#join-our-community)\n   - [Check Existing Issues](#check-existing-issues)\n   - [Creating an Issue](#creating-an-issue)\n   - [Fork the Repository](#fork-the-repository)\n   - [Submit a Pull Request (PR)](#submit-a-pull-request-pr)\n   - [Examples of Merged PRs](#examples-of-merged-prs)\n- [Setting up the BAML Compiler and Runtime](#setting-up-the-baml-compiler-and-runtime)\n   - [Compiler Architecture Overview](#compiler-architecture-overview)\n   - [Steps to Build and Test Locally](#steps-to-build-and-test-locally)\n- [Running Integration Tests](#running-integration-tests)\n   - [Python Integration Tests](#python-integration-tests)\n   - [TypeScript Integration Tests](#typescript-integration-tests)\n   - [OpenAPI Server Tests](#openapi-server-tests)\n- [Grammar Testing](#grammar-testing)\n- [VSCode Extension Testing](#vscode-extension-testing)\n- [Testing PromptFiddle.com](#testing-prompfiddlecom)\n\n\n## How to Contribute\n\n1. **Join our Community**:\n\n- Please join our [Discord](https://discord.gg/BTNBeXGuaS) and introduce yourself in the `#contributing` channel. Let us know what you're interested in working on, and we can help you get started.\n\n2. **Check Existing Issues**:\n\n- Look at the [issue tracker](https://github.com/BoundaryML/baml/issues) and find and issue to work on.\nIssues labeled `good first issue` are a good place to start.\n\n3. **Creating an Issue**:\n\n- If you find a bug or have a feature request, please tell us about in the discord channel and then open a new issue. Make sure to provide enough details and include a clear title.\n\n4. **Fork the Repository**:\n\n- Fork the repository and clone your fork locally. Work on your changes in a feature branch.\n\n5. **Submit a Pull Request (PR)**:\n\n- Submit your pull request with a clear description of the changes you've made. Make sure to reference the issue you're working on.\n\n### Examples of Merged PRs:\n\n- **Fix parsing issues**: [PR #1031](https://github.com/BoundaryML/baml/pull/1031)\n\n- **Coerce integers properly**: [PR #1023](https://github.com/BoundaryML/baml/pull/1023)\n\n- **Fix syntax highlighting and a grammar parser crash**: [PR #1013](https://github.com/BoundaryML/baml/pull/1013)\n\n- **Implement literal types (e.g., `sports \"SOCCER\" | \"BASKETBALL\"`)**: [PR #978](https://github.com/BoundaryML/baml/pull/978)\n\n- **Fix issue with OpenAI provider**: [PR #896](https://github.com/BoundaryML/baml/pull/896)\n\n- **Implement `map` type**: [PR #797](https://github.com/BoundaryML/baml/pull/797)\n\n\n\n## Setting up the BAML Compiler and Runtime\n\n#### Compiler Architecture Overview\n\n<TBD — we will write more details here>\n\n- `baml-cli/ VSCode` generates `baml_client`, containing all the interfaces people use to call the `baml-runtime`.\n\n- **Pest grammar -> AST (build diagnostics for linter) -> Intermediate Representation (IR)**: The runtime parses BAML files, builds and calls LLM endpoints, parses data into JSONish, and coerces that JSONish into the schema.\n\n\n### Steps to Build and Test Locally\n\n1. Install Rust\n\n2. Run `cargo build` in `engine/` and make sure everything builds on your machine.\n\n3. Run some unit tests:\n   - `cd engine/baml-lib/baml/` and run `cargo test` to execute grammar linting tests.\n\n4. Run the integration tests.\n\n## Running Integration Tests\n\nThe integration tests verify BAML's functionality across multiple programming languages. Each language has its own test suite in the `integ-tests/` directory.\n\n### Prerequisites for All Tests\n\n- [Rust toolchain](https://rustup.rs/) (for building native clients)\n- [BAML CLI](https://github.com/boundaryml/baml#installation)\n\n#### Environment Variables\nYou can set up environment variables in two ways:\n\n1. **Using .env file (Recommended for external contributors)**:\n   - Create a `.env` file in the `integ-tests` directory\n   - Required variables:\n     ```bash\n     OPENAI_API_KEY=your_key_here\n     # Add other provider keys as needed:\n     # ANTHROPIC_API_KEY=your_key_here\n     # AWS_ACCESS_KEY_ID=your_key_here\n     # etc.\n     ```\n\n2. **Using Infisical (BAML internal use only)**:\n   - Install [Infisical CLI](https://infisical.com/docs/cli/overview)\n   - Use the `infisical run` commands shown in examples below\n   - External contributors should replace `infisical run --env=test --` with `dotenv -e ../.env --` in all commands\n\n### TypeScript Integration Tests\n\n1. Install prerequisites:\n   - [Node.js](https://nodejs.org/) (Latest LTS recommended)\n   - [pnpm](https://pnpm.io/installation) package manager\n\n2. Build the TypeScript runtime:\n```bash\ncd engine/language_client_typescript\npnpm build:debug\n```\n\n3. Set up and run tests:\n```bash\ncd integ-tests/typescript\npnpm install\npnpm generate\ndotenv -e ../.env -- pnpm integ-tests  # or use infisical for internal BAML devs\n```\n\n### Python Integration Tests\n\n1. Install prerequisites:\n   - [Python](https://www.python.org/downloads/) 3.8 or higher\n   - [Poetry](https://python-poetry.org/docs/#installation) package manager\n\n2. Set up the environment:\n```bash\ncd integ-tests/python\npoetry install\n```\n\n3. Build and install the Python client:\n```bash\n# Note: env -u CONDA_PREFIX is needed if using Conda\nenv -u CONDA_PREFIX poetry run maturin develop --manifest-path ../../engine/language_client_python/Cargo.toml\n```\n\n4. Generate client code and run tests:\n```bash\npoetry run baml-cli generate --from ../baml_src\ndotenv -e ../.env -- poetry run pytest  # or use infisical for internal BAML devs\n```\n\n### Ruby Integration Tests\n\n1. Install prerequisites:\n   - [mise](https://mise.jdx.dev/getting-started.html) for Ruby version management:\n     ```bash\n     brew install mise  # on macOS\n     # or\n     curl https://mise.run | sh  # other platforms\n     ```\n   - Rust toolchain (installed above)\n\n2. Set up mise and build the Ruby client:\n```bash\ncd integ-tests/ruby\nmise install  # This will install Ruby version from .mise.toml\n(cd ../../engine/language_client_ruby && mise exec -- rake compile)\n```\n\n3. Install dependencies and generate client:\n```bash\nmise exec -- bundle install\nmise exec -- baml-cli generate --from ../baml_src\n```\n\n4. Run tests:\n```bash\ndotenv -e ../.env -- mise exec -- rake test  # or use infisical for internal BAML devs\n```\n\n### Adding New Tests\n\n1. Define your BAML files in `integ-tests/baml_src/`:\n   - Add clients in `clients.baml`\n   - Add functions and tests in `test-files/providers/`\n   - See [BAML Source README](integ-tests/baml_src/README.md) for details\n\n2. Generate client code for each language:\n```bash\n# TypeScript\ncd integ-tests/typescript && pnpm generate\n\n# Python\ncd integ-tests/python && poetry run baml-cli generate --from ../baml_src\n\n# Ruby\ncd integ-tests/ruby && mise exec -- baml-cli generate --from ../baml_src\n```\n\n3. Create language-specific test files:\n   - Follow the patterns in existing test files\n   - Use language-appropriate testing frameworks (Jest, pytest, Minitest)\n   - Include both success and error cases\n   - Test edge cases and timeouts\n\n4. Run the tests in each language to ensure cross-language compatibility\n\n### Debugging Tests\n\nEach language has its own debugging setup in VS Code:\n\n1. **TypeScript**:\n   - Install Jest Runner extension\n   - Use launch configuration from TypeScript README\n   - Set `BAML_LOG=trace` for detailed logs\n\n2. **Python**:\n   - Install Python Test Explorer\n   - Use launch configuration from Python README\n   - Use `-s` flag to show print statements\n\n3. **Ruby**:\n   - Install Ruby Test Explorer\n   - Use launch configuration from Ruby README\n   - Use verbose mode for detailed output\n\n### Common Issues and Solutions\n\n1. **Environment Setup**:\n   - For external contributors:\n     - Create a `.env` file with required API keys\n     - Use `dotenv` commands instead of Infisical\n   - For BAML internal developers:\n     - Ensure Infisical is configured correctly\n     - Use `infisical run` commands\n\n2. **Client Generation**:\n   - Ensure BAML CLI is up to date: `baml update-client`\n   - Check BAML source files for errors\n   - Regenerate client code after changes\n\n3. **Build Issues**:\n   - Clean and rebuild language clients\n   - Check language-specific toolchain versions\n   - Verify all dependencies are installed\n\n4. **Environment Variables**:\n   - Set up Infisical correctly\n   - Verify API keys are present\n   - Check `.env` file if not using Infisical\n\n5. **Test Timeouts**:\n   - Adjust timeout settings in test configurations\n   - Consider rate limiting for API calls\n   - Use appropriate test annotations/decorators\n\n### OpenAPI Server Testss\n\n1. Navigate to the test directory:\n   - `cd engine/baml-runtime/tests/`\n\n2. Run tests with:\n\n- `cargo test --features internal`\n\nThis will run the baml-serve server locally, and ping it. You may need to change the PORT variable for your new test to use a different port (we don’t have a good way of autoselecting a port).\n\n> Instructions for testing a particular OpenAPI client are TBD.\n\n## Grammar Testing\n\n1. Test new syntax in the [pest playground](https://pest.rs/).\n\n2. Update the following:\n\n   - **Pest grammar**: Modify the `.pest` file.\n   - **AST parsing**: Update the AST parsing of the new grammar.\n   - **IR**: Modify the Intermediate Representation (IR).\n\n3. Ensure all tests pass:\n\n   - Run `cargo test` in `engine/baml-lib/`\n   - Ensure integration tests still pass.\n\n4. Modify the grammar for the [PromptFiddle.com](http://PromptFiddle.com) syntax rendering that uses Lezer, if necessary.\n\n\n## VSCode Extension Testing\n\nThis requires a macos or linux machine, since we symlink some playground files between both [PromptFiddle.com](http://PromptFiddle.com) website app, and the VSCode extension itself.\n\n**Note:** If you are just making changes to the VSCode extension UI, you may want to go to the section: [Testing PromptFiddle.com](#testing-prompfiddlecom).\n\n1. Navigate to the TypeScript directory:\n   - `cd typescript/`\n\n2. Install dependencies:\n   - `pnpm i`\n\n3. Build and launch the extension:\n   - `npx turbo build --force`\n   - Open VSCode and go to the Run and Debug section (play button near the extensions button).\n   - Select \"Launch VSCode Extension\" and press the play button.\n     - This will open a new VSCode window in Debug mode.\n     - You can open a simple BAML project in this window (refer to our quickstart guide to set up a simple project, or clone the `baml-examples` repository).\n\n4. Reload the extension:\n   - Use `Command + Shift + P` to reload the extension when you change any core logic.\n   - Alternatively, close and reopen the playground if you rebuild the playground.\n\n\nTo rebuild the playground UI:\n\n1. `cd typescript/vscode-ext/packages/web-panel`\n2. `pnpm build`\n3. Close and open the playground in your “Debug mode VSCode window”\n\n## Testing [promptfiddle.com](http://promptfiddle.com)\n\nThis is useful if you want to iterate faster on the Extension UI, since it supports hot-reloading.\n\n1. Navigate to the Fiddle Frontend directory:\n   - `cd typescript/fiddle-frontend`\n\n2. Start the dev server:\n   - `pnpm dev`\n\n3. Modify the files in `typescript/playground-common`\n\n4. Use the `vscode-` prefixed tailwind classes to get proper colors."
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0908203125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 13.3212890625,
          "content": "<a href=\"https://boundaryml.com?utm_source=github\" target=\"_blank\" rel=\"noopener noreferrer\">\n  <picture>\n    <source media=\"(prefers-color-scheme: dark)\" srcset=\"fern/assets/baml-lamb-white.png\">\n    <img src=\"fern/assets/baml-lamb-white.png\" height=\"64\" id=\"top\">\n  </picture>\n\n</a>\n\n# BAML\n\nBAML is a domain-specific language to write and test LLM functions.\n\nAn LLM function is a prompt template with some defined input variables, and a specific output type like a class, enum, union, optional string, etc.\n\nBAML LLM functions plug into python, TS, and other languages, which makes it easy to focus more on engineering and less on prompting.\n\nBAML outperforms all other current methods of obtaining structured data, even when using it with GPT3.5. It also outperforms models fine-tuned for tool-use using the [Berkeley Function Calling Benchmark](https://gorilla.cs.berkeley.edu/leaderboard.html). See our [interactive results](https://www.boundaryml.com/blog/sota-function-calling?q=0). [Read more on our Schema-Aligned Parser](https://www.boundaryml.com/blog/schema-aligned-parsing).\n\n<img src=\"docs/old/assets/bfcl-baml-latest.png\" width=\"80%\" alt=\"Boundary Studio\">\n\n## Documentation - [docs.boundaryml.com](https://docs.boundaryml.com)\n## Try it out in the playground -- [PromptFiddle.com](https://promptfiddle.com)\n\nShare your creations and ask questions in our [Discord](https://discord.gg/BTNBeXGuaS).\n\n<br />\n\n## Features\n\n- **Python and Typescript support**: Plug-and-play BAML with other languages\n- **Type validation**: More resilient to common LLM mistakes than Pydantic or Zod\n- **Wide model support**: Ollama, Openai, Anthropic. Tested on small models like Llama2\n- **Streaming**: Stream structured partial outputs.\n- **Realtime Prompt Previews**: Always see the full prompt, even if it contains loops and conditionals\n- **Testing support**: Test functions in the playground with a single click.\n- **Resilience and fallback features**: Add retries and redundancy to your LLM calls\n- **Observability Platform**: Use Boundary Studio to visualize your functions and replay production requests with 1 click.\n\n## Resources\n\n<a href=\"https://discord.gg/ENtBB6kkXH\"><img src=\"https://img.shields.io/discord/1119368998161752075.svg?logo=discord&label=Discord%20Community\" /></a>\n<a href=\"https://twitter.com/intent/follow?screen_name=boundaryml\"><img src=\"https://img.shields.io/twitter/follow/boundaryml?style=social\"></a>\n\n- [Discord Office Hours](https://discord.gg/ENtBB6kkXH) - Come ask us anything! We hold office hours most days (9am - 12pm PST).\n- [Documentation](https://docs.boundaryml.com)\n- [Boundary Studio](https://app.boundaryml.com) - Observability of BAML functions\n\n## Starter projects\n\n- [BAML + NextJS 14](https://github.com/BoundaryML/baml-examples/tree/main/nextjs-starter)\n- [BAML + FastAPI + Streaming](https://github.com/BoundaryML/baml-examples/tree/main/python-fastapi-starter)\n- [All BAML Examples](https://github.com/BoundaryML/baml-examples)\n\n## A BAML LLM Function\n\nHere is how you extract a \"Resume\" from a chunk of free-form text. Run this prompt in [PromptFiddle](https://promptfiddle.com/extract-resume).\n\nNote: BAML syntax highlight is not supported yet in Github -- so we apologize, we're working on it!\n\n```rust\n// Declare some data models for my function, with descriptions\nclass Resume {\n  name string\n  education Education[] @description(\"Extract in the same order listed\")\n  skills string[] @description(\"Only include programming languages\")\n}\n\nclass Education {\n  school string\n  degree string\n  year int\n}\n\nfunction ExtractResume(resume_text: string) -> Resume {\n  // LLM client with params you want (not pictured)\n  client GPT4Turbo\n\n  // BAML prompts use Jinja syntax\n  prompt #\"\n    Parse the following resume and return a structured representation of the data in the schema below.\n\n    Resume:\n    ---\n    {{ resume_text }}\n    ---\n\n    {# special Jinja macro to print the output instructions. #}\n    {{ ctx.output_format }}\n\n    JSON:\n  \"#\n}\n```\n\nOnce you're done iterating on it using the interactive BAML VSCode Playground, you can convert it to Python or TS using the BAML CLI.\n\n## Usage in Python\n\n```python\n# baml_client is autogenerated\nfrom baml_client import baml as b\n# BAML types get converted to Pydantic models\nfrom baml_client.baml_types import Resume\n\nasync def main():\n    resume_text = \"\"\"Jason Doe\nPython, Rust\nUniversity of California, Berkeley, B.S.\nin Computer Science, 2020\nAlso an expert in Tableau, SQL, and C++\n\"\"\"\n\n    # this function comes from the autogenerated \"baml_client\".\n    # It calls the LLM you specified and handles the parsing.\n    resume = await b.ExtractResume(resume_text)\n\n    # Fully type-checked and validated!\n    assert isinstance(resume, Resume)\n```\n\n## Usage in TypeScript\n\n```typescript\n// baml_client is autogenerated\nimport baml as b from \"@/baml_client\";\n// BAML also auto generates types for all your data models\nimport { Resume } from \"@/baml_client/types\";\n\nfunction getResume(resumeUrl: string): Promise<Resume> {\n  const resume_text = await loadResume(resumeUrl);\n  // Call the BAML function, which calls the LLM client you specified\n  // and handles all the parsing.\n  return b.ExtractResume({ resumeText: content });\n}\n```\n\nWith BAML you have:\n\n- Better output parsing than Pydantic or Zod -- more on this later\n- Your code is looking as clean as ever\n- Calling your LLM feels like calling a normal function, with actual type guarantees.\n\n## BAML Toolchain\n\n|                                                                                           | Capabilities                                                                        |\n| ----------------------------------------------------------------------------------------- | ----------------------------------------------------------------------------------- |\n| VSCode Extension [install](https://marketplace.visualstudio.com/items?itemName=Boundary.baml-extension) | Syntax highlighting for BAML files<br /> Real-time prompt preview <br /> Testing UI |\n| Boundary Studio [open](https://app.boundaryml.com)<br />(not open source)                 | Type-safe observability <br />Labeling                                              |\n\n</p>\n\n## Installation\n\n### Python\n\n`pip install baml-py`\n\n### Typescript\n\n`npm install @boundaryml/baml`\n\n### 2. Download VSCode extension\n\nSearch for \"BAML\" or [Click here](https://marketplace.visualstudio.com/items?itemName=boundary.Baml-extension)\n\n> If you are using python, enable typechecking in VSCode’s settings.json:\n>\n> \"python.analysis.typecheckingMode\": \"basic\"\n\n### 3. Add BAML to any existing project\n\nTypescript: `npx baml-cli init`\nPython: `baml-cli init`\n\n### 4. OR use these starter projects:\n\n- [NextJS 14](https://github.com/BoundaryML/baml-examples/tree/main/nextjs-starter)\n- [FastAPI](https://github.com/BoundaryML/baml-examples/tree/main/python-fastapi-starter)\n\n## BAML in the wild\n\nShowcase of applications using BAML\n\n- [Zenfetch](https://zenfetch.com/) - ChatGPT for your bookmarks\n- [Vetrec](https://www.vetrec.io/) - AI-powered Clinical Notes for Veterinarians\n- [MagnaPlay](https://www.magnaplay.com/) - Production-quality machine translation for games\n- [Aer Compliance](https://www.aercompliance.com/) - AI-powered compliance tasks\n- [Haven](https://www.usehaven.ai/) - Automate Tenant communications with AI\n- [Muckrock](https://www.muckrock.com/) - FOIA request tracking and filing\n- and more! [Let us know](https://calendly.com/boundaryml/meeting-with-founders) if you want to be showcased or want to work with us 1-1 to solve your usecase.\n\n## Observability\n\nAnalyze, label, and trace each request in [Boundary Studio](https://app.boundaryml.com).\n\n<img src=\"docs/assets/images/v3/pipeline_view.png\" width=\"80%\" alt=\"Boundary Studio\">\n\n## Why not just use an existing Python framework?\n\nExisting frameworks can work pretty well (especially for very simple prompts), but they run into limitations when working with structured data and complex logic.\n\n<details>\n<summary>Iteration speed is slow</summary>\n\nThere are two reasons:\n\n1. **You can't visualize your prompt in realtime so you need to run it over and over to figure out what string the LLM is actually ingesting.**\n   This gets much worse if you build your prompt using conditionals and loops, or have structured outputs. BAML's prompt-preview feature in the playground works even with complex logic.\n2. **Poor testing support**. Testing prompts is 80% of the battle. Developers have to deal with copy pasting prompts from one playground UI to the codebase, and if you have structured outputs you'll need to generate the pydantic json schema yourself and do more copy-pasting around.\n</details>\n<br />\n<details>\n<summary>Pydantic and Zod weren't made with LLMs in mind</summary>\n\nLLMs don't always output correct JSON.\n\nSometimes you get something like this text blob below, where the json blob is in-between some other text:\n\n```\nBased on my observations X Y Z...., it seems the answer is:\n{\n  \"sentiment\": Happy,\n}\nHope this is what you wanted!\n```\n\nThis isn't valid JSON, since it's missing quotes in \"Happy\" and has some prefix text that you will have to regex out yourself before trying to parse using Pydantic or Zod.\nBAML handles this and many more cases, such as identifying `Enums` in LLM string responses.. See [flexible parsing](#flexible-parsing)\n\n**Aliasing issues**\n\nPrompt engineering requires you to think carefully about what the name of each key in the schema is. Rather than changing your code everytime you want to try a new name out, you can alias fields to a different name and convert them back into the original field name during parsing.\n\nHere's how BAML differs from these frameworks:\n\n**Aliasing object fields in Zod**\n\n```typescript\nconst UserSchema = z\n  .object({\n    first_name: z.string(),\n  })\n  .transform((user) => ({\n    firstName: user.first_name,\n  }));\n```\n\n**Aliasing object fields BAML**\n\n```rust\nclass User {\n  first_name string @alias(\"firstName\")\n}\n```\n\n**Aliasing enum values in Zod/Pydantic**\n\nZod: not possible\n\nPydantic:\n\n```python\nclass Sentiment(Enum):\n  HAPPY = (\"ecstatic\")\n  SAD = (\"sad\")\n\n  def __init__(self, alias):\n    self._alias = alias\n\n  @property\n  def alias(self):\n    return self._alias\n\n  @classmethod\n  def from_string(cls, category: str) -> \"Sentiment\":\n    for c in cls:\n      if c.alias == alias:\n        return c\n      raise ValueError(f\"Invalid alias: {alias}\")\n  ...\n  # more code here to actually parse the aliases\n```\n\n**Aliasing enum values in BAML**\n\n```rust\nenum Sentiment {\n  HAPPY @alias(\"ecstatic\")\n  SAD @alias(\"sad\")\n}\n```\n\n</details>\n<br />\nFinally, BAML is more of an ecosystem designed to bring you the best developer experience for doing any kind of LLM function-calling, which is why we've built tools like the playground and Boundary Studio -- our observability platform.\n\n## FAQ\n\n### Why make a new language?\n\nWe basically wanted [Jinja](https://jinja.palletsprojects.com/en/3.1.x/), but with types + function declarations, so we decided to make it happen. Earlier we tried making a YAML-based sdk, and even a Python SDK, but they were not powerful enough.\n\n<img src=\"https://imgs.xkcd.com/comics/standards.png\" />\n\n### Does BAML use LLMs to generate code?\n\nNo, the BAML dependency transpiles the code using Rust 🦀. It takes just a few milliseconds!\n\n### What does BAML stand for?\n\nBasically, A Made-up Language\n\n### How do I deploy with BAML?\n\nBAML files are only used to generate Python or Typescript code. Just commit the generated code as you would any other python code, and you're good to go\n\n### Is BAML secure?\n\nYour BAML-generated code never talks to our servers. We don’t proxy LLM APIs -- you call them directly from your machine. We only publish traces to our servers if you enable Boundary Studio explicitly.\n\n### How do you make money?\n\nBAML and the VSCode extension will always be 100% free and open-source.\n\nOur paid capabilities only start if you use Boundary Studio, which focuses on Monitoring, Collecting Feedback, and Improving your AI pipelines. Contact us for pricing details at [contact@boundaryml.com](mailto:contact@boundaryml.com?subject=I'd%20love%20to%20learn%20more%20about%20boundary).\n\n## Security\n\nPlease do not file GitHub issues or post on our public forum for security vulnerabilities, as they are public!\n\nBoundary takes security issues very seriously. If you have any concerns about BAML or believe you have uncovered a vulnerability, please get in touch via the e-mail address contact@boundaryml.com. In the message, try to provide a description of the issue and ideally a way of reproducing it. The security team will get back to you as soon as possible.\n\nNote that this security address should be used only for undisclosed vulnerabilities. Please report any security problems to us before disclosing it publicly.\n\n## Contributing\nCheckout our [guide on getting started](/CONTRIBUTING.md)\n\n## Documentation\n\n- [Getting Started](docs/getting-started.md)\n- [Code Generation Guide](docs/code-generation.md) - Learn how BAML generates type-safe client libraries\n- [Architecture](docs/architecture.md)\n- [Contributing](CONTRIBUTING.md)\n- [API Reference](docs/api-reference.md)\n\n<hr />\n\nMade with ❤️ by Boundary\n\nHQ in Seattle, WA\n\nP.S. We're hiring for software engineers. [Email us](founders@boundaryml.com) or reach out on [discord](https://discord.gg/ENtBB6kkXH)!\n\n<div align=\"left\" style=\"align-items: left;\">\n        <a href=\"#top\">\n            <img src=\"https://img.shields.io/badge/Back%20to%20Top-000000?style=for-the-badge&logo=github&logoColor=white\" alt=\"Back to Top\">\n        </a>\n</div>\n"
        },
        {
          "name": "biome.json",
          "type": "blob",
          "size": 0.125,
          "content": "{\n  \"$schema\": \"./typescript/node_modules/@biomejs/biome/configuration_schema.json\",\n  \"extends\": [\"./typescript/biome.json\"]\n}\n"
        },
        {
          "name": "cliff.toml",
          "type": "blob",
          "size": 3.837890625,
          "content": "# git-cliff ~ configuration file\n# https://git-cliff.org/docs/configuration\n\n[changelog]\n# template for the changelog footer\nheader = \"\"\"\n# Changelog\\n\nAll notable changes to this project will be documented in this file. See [conventional commits](https://www.conventionalcommits.org/) for commit guidelines.\\n\n\"\"\"\n# template for the changelog body\n# https://keats.github.io/tera/docs/#introduction\nbody = \"\"\"\n{% if version %}\\\n    {% if previous.version %}\\\n        ## [{{ version | trim_start_matches(pat=\"v\") }}]($REPO/compare/{{ previous.version }}..{{ version }}) - {{ timestamp | date(format=\"%Y-%m-%d\") }}\n    {% else %}\\\n        ## [{{ version | trim_start_matches(pat=\"v\") }}] - {{ timestamp | date(format=\"%Y-%m-%d\") }}\n    {% endif %}\\\n{% else %}\\\n    ## [unreleased]\n{% endif %}\\\n{% for group, commits in commits | group_by(attribute=\"group\") %}\n    ### {{ group | striptags | trim | upper_first }}\n    {% for commit in commits\n    | filter(attribute=\"scope\")\n    | sort(attribute=\"scope\") %}\n        - **({{commit.scope}})**{% if commit.breaking %} [**breaking**]{% endif %} \\\n            {{ commit.message }} - ([{{ commit.id | truncate(length=7, end=\"\") }}]($REPO/commit/{{ commit.id }})) - {{ commit.author.name }}\n    {%- endfor -%}\n    {% raw %}\\n{% endraw %}\\\n    {%- for commit in commits %}\n        {%- if commit.scope -%}\n        {% else -%}\n            - {% if commit.breaking %} [**breaking**]{% endif %}\\\n                {{ commit.message }} - ([{{ commit.id | truncate(length=7, end=\"\") }}]($REPO/commit/{{ commit.id }})) - {{ commit.author.name }}\n        {% endif -%}\n    {% endfor -%}\n{% endfor %}\\n\n### UNMATCHED\n{% for commit in commits %}\n    {%- if commit.group -%}\n    {% else -%}\n        - {% if commit.breaking %} [**breaking**]{% endif %}\\\n            {{ commit.message | split(pat=\"\\n\") | first }} - ([{{ commit.id | truncate(length=7, end=\"\") }}]($REPO/commit/{{ commit.id }})) - {{ commit.author.name }}\n    {% endif -%}\n{% endfor %}\\n\n\"\"\"\n# template for the changelog footer\nfooter = \"\"\"\n<!-- generated by git-cliff -->\n\"\"\"\n# remove the leading and trailing whitespace from the templates\ntrim = true\n# postprocessors\npostprocessors = [\n    { pattern = '\\$REPO', replace = \"https://github.com/boundaryml/baml\" }, # replace repository URL\n]\n\n[git]\n# parse the commits based on https://www.conventionalcommits.org\nconventional_commits = true\n# filter out the commits that are not conventional\nfilter_unconventional = false\n# process each line of a commit as an individual commit\nsplit_commits = false\n# regex for preprocessing the commit messages\ncommit_preprocessors = [\n    # { pattern = '\\((\\w+\\s)?#([0-9]+)\\)', replace = \"([#${2}](https://github.com/orhun/git-cliff/issues/${2}))\"}, # replace issue numbers\n]\n# regex for parsing and grouping commits\ncommit_parsers = [\n    { message = \"^feat\", group = \"Features\" },\n    { message = \"^fix\", group = \"Bug Fixes\" },\n    { message = \"^doc\", group = \"Documentation\" },\n    { message = \"^perf\", group = \"Performance\" },\n    { message = \"^refactor\", group = \"Refactoring\" },\n    { message = \"^style\", group = \"Style\" },\n    { message = \"^revert\", group = \"Revert\" },\n    { message = \"^test\", group = \"Tests\" },\n    { message = \"^chore\\\\(version\\\\):\", skip = true },\n    { message = \"^chore\", group = \"Miscellaneous Chores\" },\n    { body = \".*security\", group = \"Security\" },\n]\n# protect breaking changes from being skipped due to matching a skipping commit_parser\nprotect_breaking_commits = false\n# filter out the commits that are not matched by commit parsers\nfilter_commits = false\n# regex for matching git tags\ntag_pattern = \"^[0-9].[0-9]+.[0-9]+$\"\n# regex for skipping tags\nskip_tags = \"\"\n# regex for ignoring tags\nignore_tags = \"\"\n# sort the tags topologically\ntopo_order = false\n# sort the commits inside sections by oldest/newest order\nsort_commits = \"oldest\"\n# limit the number of commits included in the changelog.\n# limit_commits = 42\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "engine",
          "type": "tree",
          "content": null
        },
        {
          "name": "fern",
          "type": "tree",
          "content": null
        },
        {
          "name": "flake.nix",
          "type": "blob",
          "size": 4.5390625,
          "content": "{\n  inputs = {\n    nixpkgs.url = \"github:NixOS/nixpkgs/nixos-unstable\";\n    flake-utils.url = \"github:numtide/flake-utils\";\n    fenix = {\n      url = \"github:nix-community/fenix\";\n      inputs.nixpkgs.follows = \"nixpkgs\";\n    };\n    flake-compat = {\n      url = \"github:edolstra/flake-compat\";\n      flake = false;\n    };\n  };\n\n  outputs = { self, nixpkgs, flake-utils, fenix, ... }:\n\n    let\n\n      # buildTargets = {\n      #   \"x86_64-linux\" = {\n      #     crossSystemConfig = \"x86_64-unknown-linux-musl\";\n      #     rustTarget = \"x86_64-unknown-linux-musl\";\n      #   };\n      #   \"aarch64-linux\" = {\n      #     crossSystemConfig = \"x86_64-unknown-linux-musl\";\n      #     rustTarget = \"x86_64-unknown-linux-musl\";\n      #   };\n      #   \"aarch64-darwin\" = {};\n      #   \"wasm\" = {\n      #     crossSystemConfig = \"wasm32-unknown-unknown\";\n      #     rustTarget = \"wasm32-unknown-unknown\";\n      #     makeBuildPackageAttrs = pkgsCross: {\n      #       OPENSSL_STATIC = null;\n      #       OPENSSL_LIB_DIR = null;\n      #       OPENSSL_INCLUDE_DIR = null;\n      #     };\n      #   };\n      # };\n\n      # mkPkgs = buildSystem: targetSystem: import nixpkgs ({\n      #   system = buildSystem;\n      # } // (if targetSystem == null then {} else {\n      #   crossSystemcnofig = buildTargets.${targetSystem}.crossSystemConfig;\n      # }));\n\n      # eachSystem = supportedSystems: callback: builtins.fold'\n      #   (overall: system: overall // { ${system} = callback system; })\n      #   {}\n      #   supportedSystems;\n\n    in\n\n    flake-utils.lib.eachDefaultSystem (system:\n\n      let\n        pkgs = nixpkgs.legacyPackages.${system};\n        clang = pkgs.llvmPackages_19.clang;\n        pythonEnv = pkgs.python3.withPackages (ps: []);\n\n        toolchain = with fenix.packages.${system}; combine [\n          minimal.cargo\n          minimal.rustc\n          latest.rust-std\n        ];\n\n        version = (builtins.fromTOML (builtins.readFile ./engine/Cargo.toml)).workspace.package.version;\n\n        appleDeps = with pkgs.darwin.apple_sdk.frameworks; [\n          CoreServices\n          SystemConfiguration\n          pkgs.libiconv-darwin\n        ];\n\n        rustPlatform = pkgs.makeRustPlatform {\n          inherit (fenix.packages.${system}.minimal) cargo rustc;\n          inherit (fenix.packages.${system}.latest) rust-std;\n        };\n\n      in\n        {\n          packages.default = rustPlatform.buildRustPackage {\n            pname = \"baml-cli\";\n            version = version;\n            src = let\n              extraFiles = pkgs.copyPathToStore ./engine/baml-runtime/src/cli/initial_project/baml_src;\n            in pkgs.symlinkJoin {\n              name = \"source\";\n              paths = [ ./engine extraFiles ];\n            };\n            LIBCLANG_PATH = pkgs.libclang.lib + \"/lib/\";\n            BINDGEN_EXTRA_CLANG_ARGS = if pkgs.stdenv.isDarwin then\n              \"-I${pkgs.llvmPackages_19.libclang.lib}/lib/clang/19/headers \"\n            else\n              \"-isystem ${pkgs.llvmPackages_19.libclang.lib}/lib/clang/19/include -isystem ${pkgs.glibc.dev}/include\";\n\n            cargoLock = { lockFile = ./engine/Cargo.lock; outputHashes = {\n              \"pyo3-asyncio-0.21.0\" = \"sha256-5ZLzWkxp3e2u0B4+/JJTwO9SYKhtmBpMBiyIsTCW5Zw=\";\n              \"serde_magnus-0.9.0\" = \"sha256-+iIHleftJ+Yl9QHEBVI91NOhBw9qtUZfgooHKoyY1w4=\";\n            }; };\n\n            # Add build-time environment variables\n            RUSTFLAGS = \"-C target-feature=+crt-static --cfg tracing_unstable\";\n\n            # Modify the test phase to only run library tests\n            checkPhase = ''\n              runHook preCheck\n              echo \"Running cargo test --lib\"\n              cargo test --lib\n              runHook postCheck\n            '';\n\n            buildInputs = (with pkgs; [\n              openssl\n              pkg-config\n              lld_19\n              pythonEnv\n              ruby\n              maturin\n              nodePackages.pnpm\n              nodePackages.nodejs\n            ]) ++ (if pkgs.stdenv.isDarwin then appleDeps else []);\n            nativeBuildInputs = [\n              pkgs.openssl\n              pkgs.pkg-config\n              pkgs.ruby\n              pythonEnv\n              pkgs.maturin\n            ];\n            PYTHON_SYS_EXECUTABLE=\"${pythonEnv}/bin/python3\";\n            LD_LIBRARY_PATH=\"${pythonEnv}/lib\";\n            PYTHONPATH=\"${pythonEnv}/${pythonEnv.sitePackages}\";\n            CC=\"${clang}/bin/clang\";\n\n          };\n          devShell = pkgs.mkShell rec {\n            buildInputs = [toolchain];\n            PATH=\"${clang}/bin:$PATH\";\n            LIBCLANG_PATH = pkgs.libclang.lib + \"/lib/\";\n          };\n        }\n    );\n}\n"
        },
        {
          "name": "integ-tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "release",
          "type": "tree",
          "content": null
        },
        {
          "name": "root-wasm32.code-workspace",
          "type": "blob",
          "size": 2.2265625,
          "content": "{\n  \"folders\": [\n    {\n      \"path\": \".github\"\n    },\n    {\n      \"path\": \"fern\"\n    },\n    {\n      \"path\": \"engine\"\n    },\n    {\n      \"path\": \"integ-tests\"\n    },\n    {\n      \"path\": \"release\"\n    },\n    {\n      \"path\": \"tools\"\n    },\n    {\n      \"path\": \"typescript\"\n    }\n  ],\n  \"settings\": {\n    \"[rust]\": {\n      \"editor.defaultFormatter\": \"rust-lang.rust-analyzer\",\n      \"editor.formatOnSave\": true\n    },\n    \"[python]\": {\n      \"editor.defaultFormatter\": \"charliermarsh.ruff\"\n    },\n    \"[javascript]\": {\n      \"editor.defaultFormatter\": \"biomejs.biome\"\n    },\n    \"[typescript]\": {\n      \"editor.defaultFormatter\": \"biomejs.biome\"\n    },\n    \"[typescriptreact]\": {\n      \"editor.defaultFormatter\": \"biomejs.biome\"\n    },\n    \"files.associations\": {\n      \"*.baml.j2\": \"jinja\",\n      \"*.js.j2\": \"jinja-js\",\n      \"*.ts.j2\": \"jinja-js\"\n    },\n    \"editor.colorDecoratorsLimit\": 2000,\n    \"editor.formatOnSaveMode\": \"file\",\n    \"editor.formatOnSave\": true,\n    \"editor.tabSize\": 2,\n    \"mypy.enabled\": false,\n    \"git.openDiffOnClick\": true,\n    \"python.analysis.typeCheckingMode\": \"strict\",\n    \"rust-analyzer.cargo.target\": \"wasm32-unknown-unknown\",\n    \"rust-analyzer.procMacro.ignored\": {\n      \"napi-derive\": [\"napi\"]\n    },\n    \"sorbet.enabled\": true,\n    \"sorbet.lspConfigs\": [\n      {\n        \"id\": \"stable\",\n        \"name\": \"Sorbet\",\n        \"description\": \"Stable Sorbet Ruby IDE features\",\n        \"cwd\": \"${workspaceFolder}\",\n        \"command\": [\n          \"bundle\",\n          \"exec\",\n          \"srb\",\n          \"typecheck\",\n          \"--lsp\",\n          \"--disable-watchman\"\n        ]\n      }\n    ],\n    \"workbench.colorCustomizations\": {\n      \"activityBar.background\": \"#630001\",\n      \"titleBar.activeBackground\": \"#8B0002\",\n      \"titleBar.activeForeground\": \"#FFFBFB\"\n    },\n    \"biome.lspBin\": \"typescript/node_modules/@biomejs/biome/bin/biome\"\n    \n  },\n  \"extensions\": {\n    \"recommendations\": [\n      \"mhutchie.git-graph\",\n      \"github.copilot\",\n      \"pest.pest-ide-tools\",\n      \"ms-python.python\",\n      \"rust-lang.rust-analyzer\",\n      \"unifiedjs.vscode-mdx\",\n      \"tamasfe.even-better-toml\",\n      \"charliermarsh.ruff\",\n      \"matangover.mypy\",\n      \"samuelcolvin.jinjahtml\",\n      \"biomejs.biome\",\n      \"boundary.baml-extension\"\n    ]\n  }\n}\n"
        },
        {
          "name": "root.code-workspace",
          "type": "blob",
          "size": 2.373046875,
          "content": "{\n  \"folders\": [\n    {\n      \"path\": \".\"\n    },\n    {\n      \"path\": \".github\"\n    },\n    {\n      \"path\": \"docs\"\n    },\n    {\n      \"path\": \"fern\"\n    },\n    {\n      \"path\": \"engine\"\n    },\n    {\n      \"path\": \"integ-tests\"\n    },\n    {\n      \"path\": \"release\"\n    },\n    {\n      \"path\": \"tools\"\n    },\n    {\n      \"path\": \"typescript\"\n    }\n  ],\n  \"settings\": {\n    \"window.title\": \"${dirty}${activeFolderMedium}${separator}${rootPath}${separator}${appName}\",\n    \"[rust]\": {\n      \"editor.defaultFormatter\": \"rust-lang.rust-analyzer\",\n      \"editor.formatOnSave\": true\n    },\n    \"[python]\": {\n      \"editor.defaultFormatter\": \"charliermarsh.ruff\"\n    },\n    \"[javascript]\": {\n      \"editor.defaultFormatter\": \"biomejs.biome\"\n    },\n    \"[typescript]\": {\n      \"editor.defaultFormatter\": \"biomejs.biome\"\n    },\n    \"[typescriptreact]\": {\n      \"editor.defaultFormatter\": \"esbenp.prettier-vscode\"\n    },\n    \"files.associations\": {\n      \"*.baml.j2\": \"jinja\",\n      \"*.js.j2\": \"jinja-js\",\n      \"*.ts.j2\": \"jinja-js\"\n    },\n    \"editor.colorDecoratorsLimit\": 2000,\n    \"editor.formatOnSaveMode\": \"file\",\n    \"editor.formatOnSave\": true,\n    \"editor.tabSize\": 2,\n    \"mypy.enabled\": false,\n    \"git.openDiffOnClick\": true,\n    \"python.analysis.typeCheckingMode\": \"strict\",\n    \"rust-analyzer.procMacro.ignored\": {\n      \"napi-derive\": [\"napi\"]\n    },\n    \"sorbet.enabled\": true,\n    \"sorbet.lspConfigs\": [\n      {\n        \"id\": \"stable\",\n        \"name\": \"Sorbet\",\n        \"description\": \"Stable Sorbet Ruby IDE features\",\n        \"cwd\": \"${workspaceFolder}\",\n        \"command\": [\n          \"bundle\",\n          \"exec\",\n          \"srb\",\n          \"typecheck\",\n          \"--lsp\",\n          \"--disable-watchman\"\n        ]\n      }\n    ],\n    \"workbench.colorCustomizations\": {\n      \"activityBar.background\": \"#630001\",\n      \"titleBar.activeBackground\": \"#8B0002\",\n      \"titleBar.activeForeground\": \"#FFFBFB\"\n    },\n    \"biome.lspBin\": \"typescript/node_modules/@biomejs/biome/bin/biome\",\n    \"terminal.integrated.scrollback\": 1e6\n  },\n  \"extensions\": {\n    \"recommendations\": [\n      \"mhutchie.git-graph\",\n      \"github.copilot\",\n      \"pest.pest-ide-tools\",\n      \"ms-python.python\",\n      \"rust-lang.rust-analyzer\",\n      \"unifiedjs.vscode-mdx\",\n      \"tamasfe.even-better-toml\",\n      \"charliermarsh.ruff\",\n      \"matangover.mypy\",\n      \"samuelcolvin.jinjahtml\",\n      \"biomejs.biome\",\n      \"boundary.baml-extension\"\n    ]\n  }\n}\n"
        },
        {
          "name": "shell.nix",
          "type": "blob",
          "size": 1.4541015625,
          "content": "# TODO: Package jest\n\nlet\n  pkgs = import <nixpkgs> { };\n\n  nodeEnv =\n    pkgs.callPackage <nixpkgs/pkgs/development/node-packages/node-env.nix> { };\n  fern = nodeEnv.buildNodePackage rec {\n    name = \"fern-api\";\n    packageName = \"fern-api\";\n    version = \"0.42.8\";\n    src = pkgs.fetchurl {\n      url = \"https://registry.npmjs.org/fern-api/-/fern-api-${version}.tgz\";\n      sha256 = \"sha256-jaKXJsvgjRPpm2ojB6a2hkEAmk7NrfcTA28MLl3VjHg=\";\n    };\n    dependencies = [ ];\n  };\n\n  clang = pkgs.llvmPackages_19.clang;\n\n  appleDeps = with pkgs.darwin.apple_sdk.frameworks; [\n    CoreServices\n    SystemConfiguration\n    pkgs.libiconv-darwin\n  ];\n\nin pkgs.mkShell {\n\n  buildInputs = with pkgs;\n    [\n      cargo\n      cargo-watch\n      rustc\n      rustfmt\n      maturin\n      nodePackages.pnpm\n      nodePackages.nodejs\n      python3\n      poetry\n      rust-analyzer\n      fern\n      ruby\n      nixfmt-classic\n      swc\n      lld_19\n      turbo # js packaging\n      wasm-pack\n    ] ++ (if pkgs.stdenv.isDarwin then appleDeps else [ ]);\n\n  LIBCLANG_PATH = pkgs.libclang.lib + \"/lib/\";\n  BINDGEN_EXTRA_CLANG_ARGS = if pkgs.stdenv.isDarwin then\n    \"-I${pkgs.llvmPackages_19.libclang.lib}/lib/clang/19/headers \"\n  else\n    \"-isystem ${pkgs.llvmPackages_19.libclang.lib}/lib/clang/19/include -isystem ${pkgs.glibc.dev}/include\";\n\n  shellHook = ''\n    export PROJECT_ROOT=/$(pwd)\n    export PATH=${clang}/bin:/$PROJECT_ROOT/tools:$PROJECT_ROOT/integ-tests/typescript/node_modules/.bin:$PATH\n  '';\n}\n"
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "typescript",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}