{
  "metadata": {
    "timestamp": 1736709055366,
    "page": 168,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "aya-rs/aya",
      "stars": 3332,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".cargo",
          "type": "tree",
          "content": null
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0625,
          "content": "Cargo.lock\ntarget/\n.vscode/\n!.vscode/settings.json\nsite/\n.idea/\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.080078125,
          "content": "[submodule \"libbpf\"]\n\tpath = xtask/libbpf\n\turl = https://github.com/libbpf/libbpf\n"
        },
        {
          "name": ".markdownlint-cli2.yaml",
          "type": "blob",
          "size": 0.1298828125,
          "content": "config:\n  no-duplicate-heading: false\n\nglobs:\n  - \"**/*.md\"\nignores:\n  - \"**/CHANGELOG.md\"\n  - \"target/**/*\"\n  - \"xtask/libbpf/**/*\"\n"
        },
        {
          "name": ".mergify.yml",
          "type": "blob",
          "size": 2.0224609375,
          "content": "pull_request_rules:\n  - name: automatic merge for Dependabot pull request that pass CI\n    conditions:\n      - author=dependabot[bot]\n    actions:\n      comment:\n        message: \"@dependabot merge\"\n\n  # REVIEW MANAGEMENT\n\n  - name: ask alessandrod to review public API changes\n    conditions:\n      - files=xtask/public-api/aya.txt\n      - -closed\n    actions:\n      comment:\n        message: \"Hey @alessandrod, this pull request changes the Aya Public API and requires your review.\"\n      request_reviews:\n        users:\n          - alessandrod\n      label:\n        add:\n          - api/needs-review\n\n  # LABEL MANAGEMENT\n\n  - name: warn on conflicts\n    conditions:\n      - conflict\n    actions:\n      comment:\n        message: \"@{{author}}, this pull request is now in conflict and requires a rebase.\"\n      label:\n        add:\n          - needs-rebase\n\n  - name: remove conflict label if not needed\n    conditions:\n      - -conflict\n    actions:\n      label:\n        remove:\n          - needs-rebase\n\n  - name: add labels for aya PRs\n    conditions:\n      - files~=^aya/\n    actions:\n      label:\n        add:\n          - aya\n\n  - name: add labels for aya-bpf PRs\n    conditions:\n      - files~=^(aya-ebpf-macros|ebpf/aya-ebpf(-(cty|bindings))?)/\n    actions:\n      label:\n        add:\n          - aya-bpf\n\n  - name: add labels for aya-log PRs\n    conditions:\n      - files~=^aya-log(-common)?/\n    actions:\n      label:\n        add:\n          - aya-log\n\n  - name: add labels for aya-log-ebpf PRs\n    conditions:\n      - files~=^(aya-log-common|ebpf/aya-log-ebpf)/\n    actions:\n      label:\n        add:\n          - aya-log\n\n  - name: add labels for aya-obj PRs\n    conditions:\n      - files~=^aya-obj/\n    actions:\n      label:\n        add:\n          - aya-obj\n\n  - name: add labels for aya-tool PRs\n    conditions:\n      - files~=^aya-tool/\n    actions:\n      label:\n        add:\n          - aya-tool\n\n  - name: add labels for CI/Test and Automation PRs\n    conditions:\n      - files~=^(.github|test|xtask)/\n    actions:\n      label:\n        add:\n          - test\n"
        },
        {
          "name": ".taplo.toml",
          "type": "blob",
          "size": 0.0498046875,
          "content": "[[rule]]\n\n[rule.formatting]\nindent_string = \"    \"\n"
        },
        {
          "name": ".vim",
          "type": "tree",
          "content": null
        },
        {
          "name": ".vscode",
          "type": "tree",
          "content": null
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 5.1201171875,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nWe as members, contributors, and leaders pledge to make participation in our\ncommunity a harassment-free experience for everyone, regardless of age, body\nsize, visible or invisible disability, ethnicity, sex characteristics, gender\nidentity and expression, level of experience, education, socio-economic status,\nnationality, personal appearance, race, religion, or sexual identity\nand orientation.\n\nWe pledge to act and interact in ways that contribute to an open, welcoming,\ndiverse, inclusive, and healthy community.\n\n## Our Standards\n\nExamples of behavior that contributes to a positive environment for our\ncommunity include:\n\n* Demonstrating empathy and kindness toward other people\n* Being respectful of differing opinions, viewpoints, and experiences\n* Giving and gracefully accepting constructive feedback\n* Accepting responsibility and apologizing to those affected by our mistakes,\n  and learning from the experience\n* Focusing on what is best not just for us as individuals, but for the\n  overall community\n\nExamples of unacceptable behavior include:\n\n* The use of sexualized language or imagery, and sexual attention or\n  advances of any kind\n* Trolling, insulting or derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or email\n  address, without their explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Enforcement Responsibilities\n\nCommunity leaders are responsible for clarifying and enforcing our standards of\nacceptable behavior and will take appropriate and fair corrective action in\nresponse to any behavior that they deem inappropriate, threatening, offensive,\nor harmful.\n\nCommunity leaders have the right and responsibility to remove, edit, or reject\ncomments, commits, code, wiki edits, issues, and other contributions that are\nnot aligned to this Code of Conduct, and will communicate reasons for moderation\ndecisions when appropriate.\n\n## Scope\n\nThis Code of Conduct applies within all community spaces, and also applies when\nan individual is officially representing the community in public spaces.\nExamples of representing our community include using an official e-mail address,\nposting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported to the community leaders responsible for enforcement on\nDiscord.\nAll complaints will be reviewed and investigated promptly and fairly.\n\nAll community leaders are obligated to respect the privacy and security of the\nreporter of any incident.\n\n## Enforcement Guidelines\n\nCommunity leaders will follow these Community Impact Guidelines in determining\nthe consequences for any action they deem in violation of this Code of Conduct:\n\n### 1. Correction\n\n**Community Impact**: Use of inappropriate language or other behavior deemed\nunprofessional or unwelcome in the community.\n\n**Consequence**: A private, written warning from community leaders, providing\nclarity around the nature of the violation and an explanation of why the\nbehavior was inappropriate. A public apology may be requested.\n\n### 2. Warning\n\n**Community Impact**: A violation through a single incident or series\nof actions.\n\n**Consequence**: A warning with consequences for continued behavior. No\ninteraction with the people involved, including unsolicited interaction with\nthose enforcing the Code of Conduct, for a specified period of time. This\nincludes avoiding interactions in community spaces as well as external channels\nlike social media. Violating these terms may lead to a temporary or\npermanent ban.\n\n### 3. Temporary Ban\n\n**Community Impact**: A serious violation of community standards, including\nsustained inappropriate behavior.\n\n**Consequence**: A temporary ban from any sort of interaction or public\ncommunication with the community for a specified period of time. No public or\nprivate interaction with the people involved, including unsolicited interaction\nwith those enforcing the Code of Conduct, is allowed during this period.\nViolating these terms may lead to a permanent ban.\n\n### 4. Permanent Ban\n\n**Community Impact**: Demonstrating a pattern of violation of community\nstandards, including sustained inappropriate behavior,  harassment of an\nindividual, or aggression toward or disparagement of classes of individuals.\n\n**Consequence**: A permanent ban from any sort of public interaction within\nthe community.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage],\nversion 2.0, available [here][covenant-2-0].\n\nCommunity Impact Guidelines were inspired by [Mozilla's code of conduct\nenforcement ladder](https://github.com/mozilla/diversity).\n\n[homepage]: https://www.contributor-covenant.org\n[covenant-2-0]: https://www.contributor-covenant.org/version/2/0/code_of_conduct\n\nFor answers to common questions about this code of conduct, see the\n[FAQ](https://www.contributor-covenant.org/faq). Translations are available\n[here](https://www.contributor-covenant.org/translations).\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 3.3642578125,
          "content": "# Contributing to Aya\n\nThanks for your help improving the project!\n\n## Reporting issues\n\nIf you believe you've discovered a bug in aya, please check if the bug is\nalready known or [create an issue](https://github.com/aya-rs/aya/issues) on\ngithub. Please also report an issue if you find documentation that you think is\nconfusing or could be improved.\n\nWhen creating a new issue, make sure to include as many details as possible to\nhelp us understand the problem. When reporting a bug, always specify which\nversion of aya you're using and which version of the linux kernel.\n\n## Documentation\n\nIf you find an API that is not documented, unclear or missing examples, please\nfile an issue. If you make changes to the documentation, please read\n[How To Write Documentation] and make sure your changes conform to the\nformat outlined in [Documenting Components].\n\n[How To Write Documentation]: https://doc.rust-lang.org/rustdoc/how-to-write-documentation.html\n[Documenting Components]: https://doc.rust-lang.org/rustdoc/how-to-write-documentation.html#documenting-components\n\nIf you want to make changes to the Aya Book, see the readme in the\n[book repository].\n\n[book repository]: https://github.com/aya-rs/book\n\n## Fixing bugs and implementing new features\n\nMake sure that your work is tracked by an issue or a (draft) pull request, this\nhelps us avoid duplicating work. If your work includes publicly visible changes,\nmake sure those are properly documented as explained in the section above.\n\n### Running tests\n\nRun the unit tests with `cargo test`. See [Aya Integration Tests] regarding\nrunning the integration tests.\n\n[Aya Integration Tests]: https://github.com/aya-rs/aya/blob/main/test/README.md\n\n### Commits\n\nIt is a recommended best practice to keep your changes as logically grouped as\npossible within individual commits. If while you're developing you prefer doing\na number of commits that are \"checkpoints\" and don't represent a single logical\nchange, please squash those together before asking for a review.\n\n#### Commit message guidelines\n\nA good commit message should describe what changed and why.\n\n1. The first line should:\n    - Contain a short description of the change (preferably 50 characters or less,\n      and no more than 72 characters)\n    - Be entirely in lowercase with the exception of proper nouns, acronyms, and\n      the words that refer to code, like function/variable names\n    - Be prefixed with the name of the sub crate being changed\n\n    Examples:\n    - `aya: handle reordered functions`\n    - `aya-bpf: SkSkbContext: add ::l3_csum_replace`\n\n1. Keep the second line blank.\n1. Wrap all other lines at 72 columns (except for long URLs).\n1. If your patch fixes an open issue, you can add a reference to it at the end\n   of the log. Use the `Fixes: #` prefix and the issue number. For other\n   references use `Refs: #`. `Refs` may include multiple issues, separated by a\n   comma.\n\n   Examples:\n\n   - `Fixes: #1337`\n   - `Refs: #1234`\n\nSample complete commit message:\n\n```txt\nsubcrate: explain the commit in one line\n\nBody of commit message is a few lines of text, explaining things\nin more detail, possibly giving some background about the issue\nbeing fixed, etc.\n\nThe body of the commit message can be several paragraphs, and\nplease do proper word-wrap and keep columns shorter than about\n72 characters or so. That way, `git log` will show things\nnicely even when it is indented.\n\nFixes: #1337\nRefs: #453, #154\n```\n"
        },
        {
          "name": "Cargo.toml",
          "type": "blob",
          "size": 3.935546875,
          "content": "[workspace]\nmembers = [\n    \"aya\",\n    \"aya-build\",\n    \"aya-log\",\n    \"aya-log-common\",\n    \"aya-log-parser\",\n    \"aya-obj\",\n    \"aya-tool\",\n    \"init\",\n    \"test/integration-common\",\n    \"test/integration-test\",\n    \"xtask\",\n\n    # macros\n    \"aya-ebpf-macros\",\n    \"aya-log-ebpf-macros\",\n\n    # ebpf crates\n    \"ebpf/aya-ebpf\",\n    \"ebpf/aya-ebpf-bindings\",\n    \"ebpf/aya-log-ebpf\",\n    \"test/integration-ebpf\",\n]\n\nresolver = \"2\"\n\ndefault-members = [\n    \"aya\",\n    \"aya-build\",\n    \"aya-log\",\n    \"aya-log-common\",\n    \"aya-log-parser\",\n    \"aya-obj\",\n    \"aya-tool\",\n    \"init\",\n    \"test/integration-common\",\n    # test/integration-test is omitted; including it in this list causes `cargo test` to run its\n    # tests, and that doesn't work unless they've been built with `cargo xtask`.\n    \"xtask\",\n\n    \"aya-ebpf-macros\",\n    \"aya-log-ebpf-macros\",\n\n    # ebpf crates are omitted; they must be built with:\n    # --target bpfe{b,l}-unknown-none\n    # CARGO_CFG_BPF_TARGET_ARCH={x86_64,aarch64,arm,riscv64,powerpc64,s390x}\n]\n\n[workspace.package]\nauthors = [\"Aya Contributors\"]\nlicense = \"MIT OR Apache-2.0\"\nrepository = \"https://github.com/aya-rs/aya\"\nhomepage = \"https://aya-rs.dev\"\nedition = \"2021\"\n\n# NOTE(vadorovsky): Neither cargo-udeps nor cargo-machete are able to detect\n# unused crates defined in this section. It would be nice to teach either of\n# them to do that, but in the meantime we need to be careful.\n[workspace.dependencies]\nanyhow = { version = \"1\", default-features = false }\nbase64 = { version = \"0.22.1\", default-features = false }\nassert_matches = { version = \"1.5.0\", default-features = false }\nasync-io = { version = \"2.0\", default-features = false }\nbindgen = { version = \"0.71\", default-features = false }\nbitflags = { version = \"2.2.1\", default-features = false }\nbytes = { version = \"1\", default-features = false }\ncargo_metadata = { version = \"0.19.0\", default-features = false }\nclap = { version = \"4\", default-features = false }\nconst-assert = { version = \"1.0.1\", default-features = false }\ndialoguer = { version = \"0.11\", default-features = false }\ndiff = { version = \"0.1.13\", default-features = false }\nenv_logger = { version = \"0.11\", default-features = false }\nepoll = { version = \"4.3.3\", default-features = false }\nfutures = { version = \"0.3.28\", default-features = false }\nhashbrown = { version = \"0.15.0\", default-features = false }\nindoc = { version = \"2.0\", default-features = false }\nlibc = { version = \"0.2.105\", default-features = false }\nlog = { version = \"0.4\", default-features = false }\nnetns-rs = { version = \"0.1\", default-features = false }\nnix = { version = \"0.29.0\", default-features = false }\nnum_enum = { version = \"0.7\", default-features = false }\nobject = { version = \"0.36\", default-features = false }\noctorust = { version = \"0.9.0\", default-features = false }\nonce_cell = { version = \"1.20.1\", default-features = false }\nproc-macro2 = { version = \"1\", default-features = false }\nproc-macro2-diagnostics = { version = \"0.10.1\", default-features = false }\npublic-api = { version = \"0.42.0\", default-features = false }\nquote = { version = \"1\", default-features = false }\nrand = { version = \"0.8\", default-features = false }\nrbpf = { version = \"0.3.0\", default-features = false }\nrustdoc-json = { version = \"0.9.0\", default-features = false }\nrustup-toolchain = { version = \"0.1.5\", default-features = false }\nrustversion = { version = \"1.0.0\", default-features = false }\nsyn = { version = \"2\", default-features = false }\ntempfile = { version = \"3\", default-features = false }\ntest-case = { version = \"3.1.0\", default-features = false }\ntest-log = { version = \"0.2.13\", default-features = false }\ntesting_logger = { version = \"0.1.1\", default-features = false }\nthiserror = { version = \"2.0.3\", default-features = false }\ntokio = { version = \"1.24.0\", default-features = false }\nwhich = { version = \"7.0.0\", default-features = false }\nxdpilone = { version = \"1.0.5\", default-features = false }\n\n[profile.release.package.integration-ebpf]\ndebug = 2\ncodegen-units = 1\n"
        },
        {
          "name": "LICENSE-APACHE",
          "type": "blob",
          "size": 10.59765625,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\nTERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n1. Definitions.\n\n   \"License\" shall mean the terms and conditions for use, reproduction,\n   and distribution as defined by Sections 1 through 9 of this document.\n\n   \"Licensor\" shall mean the copyright owner or entity authorized by\n   the copyright owner that is granting the License.\n\n   \"Legal Entity\" shall mean the union of the acting entity and all\n   other entities that control, are controlled by, or are under common\n   control with that entity. For the purposes of this definition,\n   \"control\" means (i) the power, direct or indirect, to cause the\n   direction or management of such entity, whether by contract or\n   otherwise, or (ii) ownership of fifty percent (50%) or more of the\n   outstanding shares, or (iii) beneficial ownership of such entity.\n\n   \"You\" (or \"Your\") shall mean an individual or Legal Entity\n   exercising permissions granted by this License.\n\n   \"Source\" form shall mean the preferred form for making modifications,\n   including but not limited to software source code, documentation\n   source, and configuration files.\n\n   \"Object\" form shall mean any form resulting from mechanical\n   transformation or translation of a Source form, including but\n   not limited to compiled object code, generated documentation,\n   and conversions to other media types.\n\n   \"Work\" shall mean the work of authorship, whether in Source or\n   Object form, made available under the License, as indicated by a\n   copyright notice that is included in or attached to the work\n   (an example is provided in the Appendix below).\n\n   \"Derivative Works\" shall mean any work, whether in Source or Object\n   form, that is based on (or derived from) the Work and for which the\n   editorial revisions, annotations, elaborations, or other modifications\n   represent, as a whole, an original work of authorship. For the purposes\n   of this License, Derivative Works shall not include works that remain\n   separable from, or merely link (or bind by name) to the interfaces of,\n   the Work and Derivative Works thereof.\n\n   \"Contribution\" shall mean any work of authorship, including\n   the original version of the Work and any modifications or additions\n   to that Work or Derivative Works thereof, that is intentionally\n   submitted to Licensor for inclusion in the Work by the copyright owner\n   or by an individual or Legal Entity authorized to submit on behalf of\n   the copyright owner. For the purposes of this definition, \"submitted\"\n   means any form of electronic, verbal, or written communication sent\n   to the Licensor or its representatives, including but not limited to\n   communication on electronic mailing lists, source code control systems,\n   and issue tracking systems that are managed by, or on behalf of, the\n   Licensor for the purpose of discussing and improving the Work, but\n   excluding communication that is conspicuously marked or otherwise\n   designated in writing by the copyright owner as \"Not a Contribution.\"\n\n   \"Contributor\" shall mean Licensor and any individual or Legal Entity\n   on behalf of whom a Contribution has been received by Licensor and\n   subsequently incorporated within the Work.\n\n2. Grant of Copyright License. Subject to the terms and conditions of\n   this License, each Contributor hereby grants to You a perpetual,\n   worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n   copyright license to reproduce, prepare Derivative Works of,\n   publicly display, publicly perform, sublicense, and distribute the\n   Work and such Derivative Works in Source or Object form.\n\n3. Grant of Patent License. Subject to the terms and conditions of\n   this License, each Contributor hereby grants to You a perpetual,\n   worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n   (except as stated in this section) patent license to make, have made,\n   use, offer to sell, sell, import, and otherwise transfer the Work,\n   where such license applies only to those patent claims licensable\n   by such Contributor that are necessarily infringed by their\n   Contribution(s) alone or by combination of their Contribution(s)\n   with the Work to which such Contribution(s) was submitted. If You\n   institute patent litigation against any entity (including a\n   cross-claim or counterclaim in a lawsuit) alleging that the Work\n   or a Contribution incorporated within the Work constitutes direct\n   or contributory patent infringement, then any patent licenses\n   granted to You under this License for that Work shall terminate\n   as of the date such litigation is filed.\n\n4. Redistribution. You may reproduce and distribute copies of the\n   Work or Derivative Works thereof in any medium, with or without\n   modifications, and in Source or Object form, provided that You\n   meet the following conditions:\n\n   (a) You must give any other recipients of the Work or\n       Derivative Works a copy of this License; and\n\n   (b) You must cause any modified files to carry prominent notices\n       stating that You changed the files; and\n\n   (c) You must retain, in the Source form of any Derivative Works\n       that You distribute, all copyright, patent, trademark, and\n       attribution notices from the Source form of the Work,\n       excluding those notices that do not pertain to any part of\n       the Derivative Works; and\n\n   (d) If the Work includes a \"NOTICE\" text file as part of its\n       distribution, then any Derivative Works that You distribute must\n       include a readable copy of the attribution notices contained\n       within such NOTICE file, excluding those notices that do not\n       pertain to any part of the Derivative Works, in at least one\n       of the following places: within a NOTICE text file distributed\n       as part of the Derivative Works; within the Source form or\n       documentation, if provided along with the Derivative Works; or,\n       within a display generated by the Derivative Works, if and\n       wherever such third-party notices normally appear. The contents\n       of the NOTICE file are for informational purposes only and\n       do not modify the License. You may add Your own attribution\n       notices within Derivative Works that You distribute, alongside\n       or as an addendum to the NOTICE text from the Work, provided\n       that such additional attribution notices cannot be construed\n       as modifying the License.\n\n   You may add Your own copyright statement to Your modifications and\n   may provide additional or different license terms and conditions\n   for use, reproduction, or distribution of Your modifications, or\n   for any such Derivative Works as a whole, provided Your use,\n   reproduction, and distribution of the Work otherwise complies with\n   the conditions stated in this License.\n\n5. Submission of Contributions. Unless You explicitly state otherwise,\n   any Contribution intentionally submitted for inclusion in the Work\n   by You to the Licensor shall be under the terms and conditions of\n   this License, without any additional terms or conditions.\n   Notwithstanding the above, nothing herein shall supersede or modify\n   the terms of any separate license agreement you may have executed\n   with Licensor regarding such Contributions.\n\n6. Trademarks. This License does not grant permission to use the trade\n   names, trademarks, service marks, or product names of the Licensor,\n   except as required for reasonable and customary use in describing the\n   origin of the Work and reproducing the content of the NOTICE file.\n\n7. Disclaimer of Warranty. Unless required by applicable law or\n   agreed to in writing, Licensor provides the Work (and each\n   Contributor provides its Contributions) on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n   implied, including, without limitation, any warranties or conditions\n   of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n   PARTICULAR PURPOSE. You are solely responsible for determining the\n   appropriateness of using or redistributing the Work and assume any\n   risks associated with Your exercise of permissions under this License.\n\n8. Limitation of Liability. In no event and under no legal theory,\n   whether in tort (including negligence), contract, or otherwise,\n   unless required by applicable law (such as deliberate and grossly\n   negligent acts) or agreed to in writing, shall any Contributor be\n   liable to You for damages, including any direct, indirect, special,\n   incidental, or consequential damages of any character arising as a\n   result of this License or out of the use or inability to use the\n   Work (including but not limited to damages for loss of goodwill,\n   work stoppage, computer failure or malfunction, or any and all\n   other commercial damages or losses), even if such Contributor\n   has been advised of the possibility of such damages.\n\n9. Accepting Warranty or Additional Liability. While redistributing\n   the Work or Derivative Works thereof, You may choose to offer,\n   and charge a fee for, acceptance of support, warranty, indemnity,\n   or other liability obligations and/or rights consistent with this\n   License. However, in accepting such obligations, You may act only\n   on Your own behalf and on Your sole responsibility, not on behalf\n   of any other Contributor, and only if You agree to indemnify,\n   defend, and hold each Contributor harmless for any liability\n   incurred by, or claims asserted against, such Contributor by reason\n   of your accepting any such warranty or additional liability.\n\nEND OF TERMS AND CONDITIONS\n\nAPPENDIX: How to apply the Apache License to your work.\n\n   To apply the Apache License to your work, attach the following\n   boilerplate notice, with the fields enclosed by brackets \"[]\"\n   replaced with your own identifying information. (Don't include\n   the brackets!)  The text should be enclosed in the appropriate\n   comment syntax for the file format. We also recommend that a\n   file or class name and description of purpose be included on the\n   same \"printed page\" as the copyright notice for easier\n   identification within third-party archives.\n\nCopyright 2021 Alessandro Decina\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "LICENSE-MIT",
          "type": "blob",
          "size": 1.037109375,
          "content": "Copyright (c) 2021 Alessandro Decina\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.6591796875,
          "content": "# [![Aya](assets/logo.svg)](https://aya-rs.dev)\n\n[![Crates.io][crates-badge]][crates-url]\n![License][license-badge]\n[![Build status][build-badge]][build-url]\n[![Book][book-badge]][book-url]\n[![Gurubase][gurubase-badge]][gurubase-url]\n\n[crates-badge]: https://img.shields.io/crates/v/aya.svg?style=for-the-badge&logo=rust\n[crates-url]: https://crates.io/crates/aya\n[license-badge]: https://img.shields.io/badge/license-MIT%2FApache--2.0-blue?style=for-the-badge\n[build-badge]: https://img.shields.io/github/actions/workflow/status/aya-rs/aya/ci.yml?style=for-the-badge\n[build-url]: https://github.com/aya-rs/aya/actions/workflows/ci.yml\n[book-badge]: https://img.shields.io/badge/read%20the-book-9cf.svg?style=for-the-badge&logo=mdbook\n[book-url]: https://aya-rs.dev/book\n[gurubase-badge]: https://img.shields.io/badge/Gurubase-Ask%20Aya%20Guru-006BFF?style=for-the-badge\n[gurubase-url]: https://gurubase.io/g/aya\n\n## API Documentation\n\n[![Unreleased Documentation][git-docs-badge]][git-api-docs] [![Documentaiton][api-docs-badge]][api-docs]\n\n[git-docs-badge]: https://img.shields.io/badge/docs-unreleased-red.svg?style=for-the-badge&logo=docsdotrs\n[git-api-docs]: https://docs.aya-rs.dev\n[api-docs-badge]: https://img.shields.io/badge/docs-released-blue.svg?style=for-the-badge&logo=docsdotrs\n[api-docs]: https://docs.rs/aya\n\n## Community\n\n[![Discord][discord-badge]][chat-url] [![Awesome][awesome-badge]][awesome-aya]\n\nJoin [the conversation on Discord][chat-url] to discuss anything related to Aya\nor discover and contribute to a list of [Awesome Aya][awesome-aya] projects.\n\n[discord-badge]: https://img.shields.io/badge/Discord-chat-5865F2?style=for-the-badge&logo=discord\n[chat-url]: https://discord.gg/xHW2cb2N6G\n[awesome-aya]: https://github.com/aya-rs/awesome-aya\n[awesome-badge]: https://img.shields.io/badge/Awesome-Aya-FC60A8?style=for-the-badge&logo=awesomelists\n\n## Overview\n\neBPF is a technology that allows running user-supplied programs inside the Linux\nkernel. For more info see [What is eBPF](https://ebpf.io/what-is-ebpf).\n\nAya is an eBPF library built with a focus on operability and developer\nexperience. It does not rely on [libbpf] nor [bcc] - it's built from the ground\nup purely in Rust, using only the [libc] crate to execute syscalls. With BTF\nsupport and when linked with musl, it offers a true [compile once, run\neverywhere solution][co-re], where a single self-contained binary can be\ndeployed on many linux distributions and kernel versions.\n\nSome of the major features provided include:\n\n* Support for the **BPF Type Format** (BTF), which is transparently enabled when\n  supported by the target kernel. This allows eBPF programs compiled against\n  one kernel version to run on different kernel versions without the need to\n  recompile.\n* Support for function call relocation and global data maps, which\n  allows eBPF programs to make **function calls** and use **global variables\n  and initializers**.\n* **Async support** with both [tokio] and [async-std].\n* Easy to deploy and fast to build: aya doesn't require a kernel build or\n  compiled headers, and not even a C toolchain; a release build completes in a matter\n  of seconds.\n\n[libbpf]: https://github.com/libbpf/libbpf\n[bcc]: https://github.com/iovisor/bcc\n[libc]: https://docs.rs/libc\n[co-re]: https://facebookmicrosites.github.io/bpf/blog/2020/02/19/bpf-portability-and-co-re.html\n[tokio]: https://docs.rs/tokio\n[async-std]: https://docs.rs/async-std\n\n### Example\n\nAya supports a large chunk of the eBPF API. The following example shows how to\nuse a `BPF_PROG_TYPE_CGROUP_SKB` program with aya:\n\n```rust\nuse std::fs::File;\nuse aya::Ebpf;\nuse aya::programs::{CgroupSkb, CgroupSkbAttachType};\n\n// load the BPF code\nlet mut ebpf = Ebpf::load_file(\"ebpf.o\")?;\n\n// get the `ingress_filter` program compiled into `ebpf.o`.\nlet ingress: &mut CgroupSkb = ebpf.program_mut(\"ingress_filter\")?.try_into()?;\n\n// load the program into the kernel\ningress.load()?;\n\n// attach the program to the root cgroup. `ingress_filter` will be called for all\n// incoming packets.\nlet cgroup = File::open(\"/sys/fs/cgroup/unified\")?;\ningress.attach(cgroup, CgroupSkbAttachType::Ingress)?;\n```\n\n## Contributing\n\nPlease see the [contributing guide](https://github.com/aya-rs/aya/blob/main/CONTRIBUTING.md).\n\n## License\n\nAya is distributed under the terms of either the [MIT license] or the\n[Apache License] (version 2.0), at your option.\n\nUnless you explicitly state otherwise, any contribution intentionally submitted\nfor inclusion in this crate by you, as defined in the Apache-2.0 license, shall\nbe dual licensed as above, without any additional terms or conditions.\n\n[MIT license]: https://github.com/aya-rs/aya/blob/main/LICENSE-MIT\n[Apache license]: https://github.com/aya-rs/aya/blob/main/LICENSE-APACHE\n"
        },
        {
          "name": "assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "aya-build",
          "type": "tree",
          "content": null
        },
        {
          "name": "aya-ebpf-macros",
          "type": "tree",
          "content": null
        },
        {
          "name": "aya-log-common",
          "type": "tree",
          "content": null
        },
        {
          "name": "aya-log-ebpf-macros",
          "type": "tree",
          "content": null
        },
        {
          "name": "aya-log-parser",
          "type": "tree",
          "content": null
        },
        {
          "name": "aya-log",
          "type": "tree",
          "content": null
        },
        {
          "name": "aya-obj",
          "type": "tree",
          "content": null
        },
        {
          "name": "aya-tool",
          "type": "tree",
          "content": null
        },
        {
          "name": "aya",
          "type": "tree",
          "content": null
        },
        {
          "name": "clippy.sh",
          "type": "blob",
          "size": 1.138671875,
          "content": "#!/usr/bin/env sh\n\nset -eux\n\n# We cannot run clippy over the whole workspace at once due to feature unification. Since both\n# integration-test and integration-ebpf depend on integration-common and integration-test activates\n# integration-common's aya dependency, we end up trying to compile the panic handler twice: once\n# from the bpf program, and again from std via aya.\n# \n# `-C panic=abort` because \"unwinding panics are not supported without std\"; integration-ebpf\n# contains `#[no_std]` binaries.\n# \n# `-Zpanic_abort_tests` because \"building tests with panic=abort is not supported without\n# `-Zpanic_abort_tests`\"; Cargo does this automatically when panic=abort is set via profile but we\n# want to preserve unwinding at runtime - here we are just running clippy so we don't care about\n# unwinding behavior.\n# \n# `+nightly` because \"the option `Z` is only accepted on the nightly compiler\".\ncargo +nightly hack clippy \"$@\" --exclude integration-ebpf --all-targets --feature-powerset --workspace -- --deny warnings\ncargo +nightly hack clippy \"$@\" --package integration-ebpf --all-targets --feature-powerset -- --deny warnings -C panic=abort -Zpanic_abort_tests\n"
        },
        {
          "name": "ebpf",
          "type": "tree",
          "content": null
        },
        {
          "name": "init",
          "type": "tree",
          "content": null
        },
        {
          "name": "netlify.toml",
          "type": "blob",
          "size": 0.099609375,
          "content": "[build]\npublish = \"site\"\ncommand = \"rustup toolchain install nightly -c rust-src && cargo xtask docs\"\n"
        },
        {
          "name": "release.toml",
          "type": "blob",
          "size": 0.099609375,
          "content": "pre-release-commit-message = \"{{crate_name}}: release version {{version}}\"\nconsolidate-commits = true\n"
        },
        {
          "name": "rustfmt.toml",
          "type": "blob",
          "size": 0.1103515625,
          "content": "group_imports = \"StdExternalCrate\"\nimports_granularity = \"Crate\"\nreorder_imports = true\nunstable_features = true\n"
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "xtask",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}