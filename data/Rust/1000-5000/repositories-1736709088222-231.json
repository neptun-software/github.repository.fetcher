{
  "metadata": {
    "timestamp": 1736709088222,
    "page": 231,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "linebender/resvg",
      "stars": 2926,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.048828125,
          "content": "target\n.directory\n.DS_Store\n.vscode\ntools/build-*\n"
        },
        {
          "name": ".typos.toml",
          "type": "blob",
          "size": 0.76953125,
          "content": "# See the configuration reference at\n# https://github.com/crate-ci/typos/blob/master/docs/reference.md\n\n# Corrections take the form of a key/value pair. The key is the incorrect word\n# and the value is the correct word. If the key and value are the same, the\n# word is treated as always correct. If the value is an empty string, the word\n# is treated as always incorrect.\n\n# Match Identifier - Case Sensitive\n[default.extend-identifiers]\nba = \"ba\"\nflate2 = \"flate2\"\nHel = \"Hel\"\nPNGs = \"PNGs\"\nSVGinOT = \"SVGinOT\"\n\n# Match Inside a Word - Case Insensitive\n[default.extend-words]\n\n[files]\n# Include .github, .cargo, etc.\nignore-hidden = false\nextend-exclude = [\n    # /.git isn't in .gitignore, because git never tracks it.\n    # Typos doesn't know that, though.\n    \"/.git\",\n    \"*.svg\",\n]\n"
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 0.3115234375,
          "content": "# This is the list of Resvg's significant contributors.\n#\n# This does not necessarily list everyone who has contributed code,\n# especially since many employees of one corporation may be contributing.\n# To see the full list of contributors, see the revision history in\n# source control.\nYevhenii Reizner\nLaurenz Stampfl\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 56.5478515625,
          "content": "# Change Log\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](http://keepachangelog.com/)\nand this project adheres to [Semantic Versioning](http://semver.org/).\n\nThis changelog also contains important changes in dependencies.\n\n## [Unreleased]\n### Added\n- Added support for the `background-color` attribute.\n- Add support for additional `image-rendering` attributes.\n\n### Changed\n- License to `Apache-2.0 OR MIT`.\n  See [resvg#838](https://github.com/linebender/resvg/issues/838) for more information.\n\n### Fixed\n- Fix relative units handling when `use` references `symbol`.\n\n## [0.44.0] - 2024-09-28\n### Added\n- Stylesheet injection support.\n  Thanks to [@LaurenzV](https://github.com/LaurenzV).\n- (c-api) `resvg_get_object_bbox`\n- (c-api) `cargo-c` metadata.\n  Thanks to [@lu-zero](https://github.com/lu-zero).\n- Implement `From` for `fontdb` and `usvg` font types.\n  Thanks to [@dhardy](https://github.com/dhardy).\n\n### Changed\n- (c-api) `resvg_get_image_bbox` returns a _layer_ and not _object_ bounding box now.\n  Use `resvg_get_object_bbox` to preserve the old behavior.\n\n### Fixed\n- (svgtypes) Path parsing with `S` or `T` segments after `A`.\n- Bounding box calculation for the root group used for `viewBox` flattening.\n\n## [0.43.0] - 2024-08-10\n### Added\n- Support WebP images.\n  Thanks to [@notjosh](https://github.com/notjosh).\n\n### Changed\n- Use `zune-jpeg` instead of `jpeg-decoder`.\n  Thanks to [@mattfbacon](https://github.com/mattfbacon).\n- Update dependencies.\n\n### Fixed\n- Canvas size limits calculation.\n- SVG fonts handling.\n  Thanks to [@LaurenzV](https://github.com/LaurenzV).\n- Transforms in COLR fonts.\n  Thanks to [@LaurenzV](https://github.com/LaurenzV).\n\n## [0.42.0] - 2024-06-01\n### Added\n- `resvg` can render color fonts now, aka Emojis.<br>\n  In TrueType terms, `COLRv0`, `COLRv1` (mostly), `sbix`, `CBDT` and `SVG` tables are supported.<br>\n  Thanks to [@LaurenzV](https://github.com/LaurenzV).\n- Fonts matching and fallback can be controlled by the caller via `usvg::FontResolver` now.\n  Thanks to [@LaurenzV](https://github.com/LaurenzV).\n- `usvg::Options::font_resolver`. Similar to `usvg::Options::image_href_resolver` we already had.\n- `usvg::Options::fontdb`\n- Support double-quoted FuncIRIs, aka `url(\"#id\")`.\n- `image` element viewbox flattening.<br>\n  Instead of having `usvg::Image::view_box` that the caller should handle themselves,\n  we instead replace it with `transform` and optional `clip-path`.\n  This greatly simplifies `image` rendering.\n- `usvg::Image::size`\n- Tree viewbox flattening.<br>\n  Similar to `image` above, but affects the root `svg` element instead.\n- `pattern` viewbox flattening.<br>\n  Similar to `image` above, but for patterns.\n- Improve vertical text rendering.\n  Thanks to [@LaurenzV](https://github.com/LaurenzV).\n\n### Changed\n- `usvg::fontdb::Database` should be set in `usvg::Options` and not passed\n  to the parser separately now.\n- `usvg::Options` and `usvg::ImageHrefResolver` have a lifetime now.\n- Replace `usvg::Visibility` enum with just `bool`.\n- `usvg::Path::visibility()` is replaced with `usvg::Path::is_visible()`\n- `usvg::Image::visibility()` is replaced with `usvg::Image::is_visible()`\n- `usvg::TextSpan::visibility()` is replaced with `usvg::TextSpan::is_visible()`\n- Always represent `feImage` content as a link to an element.<br>\n  In SVG, `feImage` can contain a link to an element or a base64 image data, just like `image`.\n  From now, the inlined base64 data will always be represented by a link to an actual `image` element.\n  ```xml\n  <filter>\n    <feImage xlink:href=\"data:image/png;base64,...\"/>\n  </filter>\n  ```\n  will be parsed as\n  ```xml\n  <image id=\"image1\" xlink:href=\"data:image/png;base64,...\"/>\n  <filter>\n    <feImage xlink:href=\"#image1\"/>\n  </filter>\n  ```\n  This simplifies `feImage` rendering, since we don't have to handle both cases now.\n- The `--list-fonts` resvg argument can be used without providing an SVG file now.\n  Can simply call `resvg --list-fonts` now.\n- The `--list-fonts` resvg argument includes generic font family names as well now.\n- Make sure all warning and errors are printed to stderr.\n  Thanks to [@ahaoboy](https://github.com/ahaoboy).\n\n### Removed\n- `usvg::ViewBox`, `usvg::AspectRatio`, `usvg::Align` types. Nol longer used.\n- `usvg::filter::Image::aspect`. No longer needed.\n- `usvg::filter::Image::rendering_mode`. No longer needed.\n- `usvg::filter::Image::data`. Use `usvg::filter::Image::root` instead.\n- `usvg::Tree::view_box`. No longer needed.\n- `usvg::Image::view_box`. No longer needed.\n- `usvg::Image::pattern`. No longer needed.\n- `usvg::utils::align_pos`. No longer needed.\n- `usvg::Visibility`. No longer needed.\n- (c-api) `resvg_get_image_viewbox`. Use `resvg_get_image_size` instead.\n\n### Fixed\n- `context-fill` handling.\n  Thanks to [@LaurenzV](https://github.com/LaurenzV).\n\n## [0.41.0] - 2024-04-03\n### Added\n- `context-fill` and `context-stroke` support.\n  Thanks to [@LaurenzV](https://github.com/LaurenzV).\n- `usvg::Text::layouted()`, which returns a list of glyph IDs.\n  It can be used to manually draw glyphs, unlike with `usvg::Text::flattened()`, which returns\n  just vector paths.\n  Thanks to [@LaurenzV](https://github.com/LaurenzV).\n\n### Fixed\n- Missing text when a `text` element uses multiple fonts and one of them produces ligatures.\n- Absolute transform propagation during `use` resolving.\n- Absolute transform propagation during nested `svg` resolving.\n- `Node::abs_transform` documentation. The current element's transform _is_ included.\n\n## [0.40.0] - 2024-02-17\n### Added\n- `usvg::Tree` is `Send + Sync` compatible now.\n- `usvg::WriteOptions::preserve_text` to control how `usvg` generates an SVG.\n- `usvg::Image::abs_bounding_box`\n\n### Changed\n- All types in `usvg` are immutable now. Meaning that `usvg::Tree` cannot be modified\n  after creation anymore.\n- All struct fields in `usvg` are private now. Use getters instead.\n- All `usvg::Tree` parsing methods require the `fontdb` argument now.\n- All `defs` children like gradients, patterns, clipPaths, masks and filters are guarantee\n  to have a unique, non-empty ID.\n- All `defs` children like gradients, patterns, clipPaths, masks and filters are guarantee\n  to have `userSpaceOnUse` units now. No `objectBoundingBox` units anymore.\n- `usvg::Mask` is allowed to have no children now.\n- Text nodes will not be parsed when the `text` build feature isn't enabled.\n- `usvg::Tree::clip_paths`, `usvg::Tree::masks`, `usvg::Tree::filters` returns\n  a pre-collected slice of unique nodes now.\n  It's no longer a closure and you do not have to deduplicate nodes by yourself.\n- `usvg::filter::Primitive::x`, `y`, `width` and `height` methods were replaced\n  with `usvg::filter::Primitive::rect`.\n- Split `usvg::Tree::paint_servers` into `usvg::Tree::linear_gradients`,\n  `usvg::Tree::radial_gradients`, `usvg::Tree::patterns`.\n  All three returns pre-collected slices now.\n- A `usvg::Path` no longer can have an invalid bbox. Paths with an invalid bbox will be\n  rejected during parsing.\n- All `usvg` methods that return bounding boxes return non-optional `Rect` now.\n  No `NonZeroRect` as well.\n- `usvg::Text::flattened` returns `&Group` and not `Option<&Group>` now.\n- `usvg::ImageHrefDataResolverFn` and `usvg::ImageHrefStringResolverFn`\n  require `fontdb::Database` argument.\n- All shared nodes are stored in `Arc` and not `Rc<RefCell>` now.\n- `resvg::render_node` now includes filters bounding box. Meaning that a node with a blur filter\n  no longer be clipped.\n- Replace `usvg::utils::view_box_to_transform` with `usvg::ViewBox::to_transform`.\n- Rename `usvg::XmlOptions` into `usvg::WriteOptions` and embed `xmlwriter::Options`.\n\n### Removed\n- `usvg::Tree::postprocess()` and `usvg::PostProcessingSteps`. No longer needed.\n- `usvg::ClipPath::units()`, `usvg::Mask::units()`, `usvg::Mask::content_units()`,\n  `usvg::Filter::units()`, `usvg::Filter::content_units()`, `usvg::LinearGradient::units()`,\n  `usvg::RadialGradient::units()`, `usvg::Pattern::units()`, `usvg::Pattern::content_units()`\n  and `usvg::Paint::units()`. They are always `userSpaceOnUse` now.\n- `usvg::Units`. No longer needed.\n\n### Fixed\n- Text bounding box is accounted during SVG size resolving.\n  Previously, only paths and images were included.\n- Font selection when an italic font isn't explicitly marked as one.\n- Preserve `image` aspect ratio when only `width` or `height` are present.\n  Thanks to [@LaurenzV](https://github.com/LaurenzV).\n\n## [0.39.0] - 2024-02-06\n### Added\n- `font` shorthand parsing.\n  Thanks to [@LaurenzV](https://github.com/LaurenzV).\n- `usvg::Group::abs_bounding_box`\n- `usvg::Group::abs_stroke_bounding_box`\n- `usvg::Path::abs_bounding_box`\n- `usvg::Path::abs_stroke_bounding_box`\n- `usvg::Text::abs_bounding_box`\n- `usvg::Text::abs_stroke_bounding_box`\n\n### Changed\n- All `usvg-*` crates merged into one. There is just the `usvg` crate now, as before.\n\n### Removed\n- `usvg::Group::abs_bounding_box()` method. It's a field now.\n- `usvg::Group::abs_filters_bounding_box()`\n- `usvg::TreeParsing`, `usvg::TreePostProc` and `usvg::TreeWriting` traits.\n  They are no longer needed.\n\n### Fixed\n- `font-family` parsing.\n  Thanks to [@LaurenzV](https://github.com/LaurenzV).\n- Absolute bounding box calculation for paths.\n\n## [0.38.0] - 2024-01-21\n### Added\n- Each `usvg::Node` stores its absolute transform now.\n  `Node::abs_transform()` executes in constant time now.\n- `usvg::Tree::calculate_bounding_boxes` to calculate all bounding boxes beforehand.\n- `usvg::Node::bounding_box` which returns a precalculated node's bounding box in object coordinates.\n- `usvg::Node::abs_bounding_box` which returns a precalculated node's bounding box in canvas coordinates.\n- `usvg::Node::stroke_bounding_box` which returns a precalculated node's bounding box,\n  including stroke, in object coordinates.\n- `usvg::Node::abs_stroke_bounding_box` which returns a precalculated node's bounding box,\n  including stroke, in canvas coordinates.\n- (c-api) `resvg_get_node_stroke_bbox`\n- `usvg::Node::filters_bounding_box`\n- `usvg::Node::abs_filters_bounding_box`\n- `usvg::Tree::postprocess`\n\n### Changed\n- `resvg` renders `usvg::Tree` directly again. `resvg::Tree` is gone.\n- `usvg` no longer uses `rctree` for the nodes tree implementation.\n  The tree is a regular `enum` now.\n  - A caller no longer need to use the awkward `*node.borrow()`.\n  - No more panics on incorrect mutable `Rc<RefCell>` access.\n  - Tree nodes respect tree's mutability rules. Before, one could mutate tree nodes when the tree\n    itself is not mutable. Because `Rc<RefCell>` provides a shared mutable access.\n- Filters, clip paths, masks and patterns are stored as `Rc<RefCell<T>>` instead of `Rc<T>`.\n  This is required for proper mutability since `Node` itself is no longer an `Rc`.\n- Rename `usvg::NodeKind` into `usvg::Node`.\n- Upgrade to Rust 2021 edition.\n\n### Removed\n- `resvg::Tree`. No longer needed. `resvg` can render `usvg::Tree` directly once again.\n- `rctree::Node` methods. The `Node` API is completely different now.\n- `usvg::NodeExt`. No longer needed.\n- `usvg::Node::calculate_bbox`. Use `usvg::Node::abs_bounding_box` instead.\n- `usvg::Tree::convert_text`. Use `usvg::Tree::postprocess` instead.\n- `usvg::TreeTextToPath` trait. No longer needed.\n\n### Fixed\n- Mark `mask-type` as a presentation attribute.\n- Do not show needless warnings when parsing some attributes.\n- `feImage` rendering with a non-default position.\n  Thanks to [@LaurenzV](https://github.com/LaurenzV).\n\n## [0.37.0] - 2023-12-16\n### Added\n- `usvg` can write text back to SVG now.\n  Thanks to [@LaurenzV](https://github.com/LaurenzV).\n- `--preserve-text` flag to the `usvg` CLI tool.\n  Thanks to [@LaurenzV](https://github.com/LaurenzV).\n- Support [`transform-origin`](https://drafts.csswg.org/css-transforms/#transform-origin-property)\n  property.\n  Thanks to [@LaurenzV](https://github.com/LaurenzV).\n- Support non-default markers order via\n  [`paint-order`](https://svgwg.org/svg2-draft/painting.html#PaintOrder).\n  Previously, only fill and stroke could have been swapped.\n  Thanks to [@LaurenzV](https://github.com/LaurenzV).\n- `usvg_tree::Text::flattened` that will contain a flattened/outlined text.\n- `usvg_tree::Text::bounding_box`. Will be set only after text flattening.\n- Optimize `usvg_tree::NodeExt::abs_transform` by storing absolute transforms in the tree\n  instead of calculating them each time.\n\n### Changed\n- `usvg_tree::Text::positions` was replaced with `usvg_tree::Text::dx` and `usvg_tree::Text::dy`.<br>\n  `usvg_tree::CharacterPosition::x` and `usvg_tree::CharacterPosition::y` are gone.\n  They were redundant and you should use `usvg_tree::TextChunk::x`\n  and `usvg_tree::TextChunk::y` instead.\n- `usvg_tree::LinearGradient::id` and `usvg_tree::RadialGradient::id` are moved to\n  `usvg_tree::BaseGradient::id`.\n- Do not generate element IDs during parsing. Previously, some elements like `clipPath`s\n  and `filter`s could have generated IDs, but it wasn't very reliable and mostly unnecessary.\n  Renderer doesn't rely on them and usvg writer would generate them anyway.\n- Text-to-paths conversion via `usvg_text_layout::Tree::convert_text` no longer replaces\n  original text elements with paths, but instead puts them into `usvg_tree::Text::flattened`.\n\n### Removed\n- The `transform` field from `usvg_tree::Path`, `usvg_tree::Image` and `usvg_tree::Text`.\n  Only `usvg_tree::Group` can have it.<br>\n  It doesn't break anything, because those properties were never used before anyway.<br>\n  Thanks to [@LaurenzV](https://github.com/LaurenzV).\n- `usvg_tree::CharacterPosition`\n- `usvg_tree::Path::text_bbox`. Use `usvg_tree::Text::bounding_box` instead.\n- `usvg_text_layout::TextToPath` trait for `Text` nodes.\n  Only the whole tree can be converted at once.\n\n### Fixed\n- Path object bounding box calculation. We were using point bounds instead of tight contour bounds.\n  Was broken since v0.34\n- Convert text-to-paths in embedded SVGs as well. The one inside the `Image` node.\n  Thanks to [@LaurenzV](https://github.com/LaurenzV).\n- Indirect `text-decoration` resolving in some cases.\n  Thanks to [@LaurenzV](https://github.com/LaurenzV).\n- (usvg) Clip paths writing to SVG.\n  Thanks to [@LaurenzV](https://github.com/LaurenzV).\n\n## [0.36.0] - 2023-10-01\n### Added\n- `stroke-linejoin=miter-clip` support. SVG2.\n  Thanks to [@torokati44](https://github.com/torokati44).\n- Quoted FuncIRI support. Like `fill=\"url('#gradient')\"`. SVG2.\n  Thanks to [@romanzes](https://github.com/romanzes).\n- Allow float values in `rgb()` and `rgba()` colors. SVG2.\n  Thanks to [@yisibl](https://github.com/yisibl).\n- `auto-start-reverse` variant support to `orient` in markers. SVG2.\n  Thanks to [@EpicEricEE](https://github.com/EpicEricEE).\n\n### Changed\n- Update dependencies.\n\n### Fixed\n- Increase precision of the zero-scale transform check.\n  Was rejecting some valid transforms before.\n- Panic when rendering a very specific text.\n- Greatly improve parsing performance when an SVG has a lot of references.\n  Thanks to [@wez](https://github.com/wez).\n- (Qt API) Fix scaling factor calculation.\n  Thanks to [@missdeer](https://github.com/missdeer).\n\n## [0.35.0] - 2023-06-27\n### Fixed\n- Panic when an element is completely outside the viewbox.\n\n### Removed\n- `FillPaint` and `StrokePaint` filter inputs support.\n  It's a mostly undocumented SVG feature that no one supports and no one uses.\n  And it was adding a significant complexity to the codebase.\n- `usvg::filter::Filter::fill_paint` and `usvg::filter::Filter::stroke_paint`.\n- `BackgroundImage`, `BackgroundAlpha`, `FillPaint` and `StrokePaint` from `usvg::filter::Input`.\n- `usvg::Group::filter_fill_paint` and `usvg::Group::filter_stroke_paint`.\n\n## [0.34.1] - 2023-05-28\n### Fixed\n- Transform components order. Affects only `usvg` SVG output and C API.\n\n## [0.34.0] - 2023-05-27\n### Changed\n- `usvg` uses `tiny-skia` geometry primitives now, including the `Path` container.<br>\n  The main difference compared to the old `usvg` primitives\n  is that `tiny-skia` uses `f32` instead of `f64`.\n  So while in theory we could loose some precision, in practice, `f32` is used mainly\n  as a storage type and precise math operations are still done using `f64`.<br>\n  `tiny-skia` primitives are move robust, strict and have a nicer API.<br>\n  More importantly, this change reduces the peak memory usages for SVGs with large paths\n  (in terms of the number of segments).\n  And removes the need to convert `usvg::PathData` into `tiny-skia::Path` before rendering.\n  Which was just a useless reallocation.\n- All numbers are stored as `f32` instead of `f64` now.\n- Because we use `tiny-skia::Path` now, we allow _quadratic curves_ as well.\n  This includes `usvg` CLI output.\n- Because we allow _quadratic curves_ now, text might render slightly differently (better?).\n  This is because TrueType fonts contain only _quadratic curves_\n  and we were converting them to cubic before.\n- `usvg::Path` no longer implements `Default`. Use `usvg::Path::new` instead.\n- Replace `usvg::Rect` with `tiny_skia::NonZeroRect`.\n- Replace `usvg::PathBbox` with `tiny_skia::Rect`.\n- Unlike the old `usvg::PathBbox`, `tiny_skia::Rect` allows both width and height to be zero.\n  This is not an error.\n- `usvg::filter::Turbulence::base_frequency` was split into `base_frequency_x` and `base_frequency_y`.\n- `usvg::NodeExt::calculate_bbox` no longer includes stroke bbox.\n- (c-api) Use `float` instead of `double` everywhere.\n- The `svgfilters` crate was merged into `resvg`.\n- The `rosvgtree` crate was merged into `usvg-parser`.\n- `usvg::Group::filter_fill` moved to `usvg::filter::Filter::fill_paint`.\n- `usvg::Group::filter_stroke` moved to `usvg::filter::Filter::stroke_paint`.\n\n### Remove\n- `usvg::Point`. Use `tiny_skia::Point` instead.\n- `usvg::FuzzyEq`. Use `usvg::ApproxEqUlps` instead.\n- `usvg::FuzzyZero`. Use `usvg::ApproxZeroUlps` instead.\n- (c-api) `resvg_path_bbox`. Use `resvg_rect` instead.\n- `svgfilters` crate.\n- `rosvgtree` crate.\n\n### Fixed\n- Write `transform` on `clipPath` children in `usvg` SVG output.\n- Do not duplicate marker children IDs.\n  Previously, each element resolved for a marker would preserve its ID.\n  Affects only `usvg` SVG output and doesn't affect rendering.\n\n## [0.33.0] - 2023-05-17\n### Added\n- A new rendering algorithm.<br>\n  When rendering [isolated groups](https://razrfalcon.github.io/notes-on-svg-parsing/isolated-groups.html),\n  aka layers, we have to know the layer bounding box beforehand, which is ridiculously hard in SVG.<br>\n  Previously, resvg would simply use the canvas size for all the layers.\n  Meaning that to render a 10x10px layer on a 1000x1000px canvas, we would have to allocate and then blend\n  a 1000x1000px layer, which is just a waste of CPU cycles.<br>\n  The new rendering algorithm is able to calculate layer bounding boxes, which dramatically improves\n  performance when rendering a lot of tiny layers on a large canvas.<br>\n  Moreover, it makes performance more linear with a canvas size increase.<br>\n  The [paris-30k.svg](https://github.com/google/forma/blob/681e8bfd348caa61aab47437e7d857764c2ce522/assets/svgs/paris-30k.svg)\n  sample from [google/forma](https://github.com/google/forma) is rendered _115 times_ faster on M1 Pro now.\n  From ~33760ms down to ~290ms. 5269x3593px canvas.<br>\n  If we restrict the canvas to 1000x1000px, which would contain only the actual `paris-30k.svg` content,\n  then we're _13 times_ faster. From ~3252ms down to ~253ms.\n- `resvg::Tree`, aka a render tree, which is an even simpler version of `usvg::Tree`.\n  `usvg::Tree` had to be converted into `resvg::Tree` before rendering now.\n\n### Changed\n- Restructure the root directory. All crates are in the `crates` directory now.\n- Restructure tests. New directory structure and naming scheme.\n- Use `resvg::Tree::render` instead of `resvg::render`.\n- resvg's `--export-area-drawing` option uses calculated bounds instead of trimming\n  excessive alpha now. It's faster, but can lead to a slightly different output.\n- (c-api) Removed `fit_to` argument from `resvg_render`.\n- (c-api) Removed `fit_to` argument from `resvg_render_node`.\n- `usvg::ScreenSize` moved to `resvg`.\n- `usvg::ScreenRect` moved to `resvg`.\n- Rename `resvg::ScreenSize` into `resvg::IntSize`.\n- Rename `resvg::ScreenRect` into `resvg::IntRect`.\n\n### Removed\n- `filter` build feature from `resvg`. Filters are always enabled now.\n- `resvg::FitTo`\n- `usvg::utils::view_box_to_transform_with_clip`\n- `usvg::Size::to_screen_size`. Use `resvg::IntSize::from_usvg` instead.\n- `usvg::Rect::to_screen_size`. Use `resvg::IntSize::from_usvg(rect.size())` instead.\n- `usvg::Rect::to_screen_rect`. Use `resvg::IntRect::from_usvg` instead.\n- (c-api) `resvg_fit_to`\n- (c-api) `resvg_fit_to_type`\n\n### Fixed\n- Double quotes parsing in `font-family`.\n\n## [0.32.0] - 2023-04-23\n### Added\n- Clipping and masking is up to 20% faster.\n- `mask-type` property support. SVG2\n- `usvg_tree::MaskType`\n- `usvg_tree::Mask::kind`\n- (rosvgtree) New SVG 2 mask attributes.\n\n### Changed\n- `BackgroundImage` and `BackgroundAlpha` filter inputs will produce the same output\n  as `SourceGraphic` and `SourceAlpha` respectively.\n\n### Removed\n- `enable-background` support. This feature was never supported by browsers\n  and was deprecated in SVG 2. To my knowledge, only Batik has a good support of it.\n  Also, it's a performance nightmare, which caused multiple issues in resvg already.\n- `usvg_tree::EnableBackground`\n- `usvg_tree::Group::enable_background`\n- `usvg_tree::NodeExt::filter_background_start_node`\n\n### Fixed\n- Improve rectangular clipping anti-aliasing quality.\n- Mask's RGB to Luminance converter was ignoring premultiplied alpha.\n\n## [0.31.1] - 2023-04-22\n### Fixed\n- Use the latest `tiny-skia` to fix SVGs with large masks rendering.\n\n## [0.31.0] - 2023-04-10\n### Added\n- `usvg::Tree::paint_servers`\n- `usvg::Tree::clip_paths`\n- `usvg::Tree::masks`\n- `usvg::Tree::filters`\n- `usvg::Node::subroots`\n- (usvg) `--coordinates-precision` and `--transforms-precision` writing options.\n  Thanks to [@flxzt](https://github.com/flxzt).\n\n### Fixed\n- `fill-opacity` and `stroke-opacity` resolving.\n- Double `transform` when resolving `symbol`.\n- `symbol` clipping when its viewbox is the same as the document one.\n- (usvg) Deeply nested gradients, patterns, clip paths, masks and filters\n  were ignored during SVG writing.\n- Missing text in nested clip paths and mask, text decoration patterns, filter inputs and feImage.\n\n## [0.30.0] - 2023-03-25\n### Added\n- Readd `usvg` CLI tool. Can be installed via cargo as before.\n\n### Changed\n- Extract most `usvg` internals into new `usvg-tree` and `usvg-parser` crates.\n  `usvg-tree` contains just the SVG tree and all the types.\n  `usvg-parser` parsers SVG into `usvg-tree`.\n  And `usvg` is just an umbrella crate now.\n- To use `usvg::Tree::from*` methods one should import the `usvg::TreeParsing` trait now.\n- No need to import `usvg-text-layout` manually anymore. It is part of `usvg` now.\n- `rosvgtree` no longer reexports `svgtypes`.\n- `rosvgtree::Node::attribute` returns just a string now.\n- `rosvgtree::Node::find_attribute` returns just a `rosvgtree::Node` now.\n- Rename `usvg::Stretch` into `usvg::FontStretch`.\n- Rename `usvg::Style` into `usvg::FontStyle`.\n- `usvg::FitTo` moved to `resvg::FitTo`.\n- `usvg::IsDefault` trait is private now.\n\n### Removed\n- `rosvgtree::FromValue`. Due to Rust's orphan rules this trait is pretty useless.\n\n### Fixed\n- Recursive markers detection.\n- Skip malformed `transform` attributes without skipping the whole element.\n- Clipping path rectangle calculation for nested `svg` elements.\n  Thanks to [@LaurenzV](https://github.com/LaurenzV).\n- Panic when applying `text-decoration` on text with only one cluster.\n  Thanks to [@LaurenzV](https://github.com/LaurenzV).\n- (Qt API) Image size wasn't initialized. Thanks to [@missdeer](https://github.com/missdeer).\n- `resvg` CLI allows files with XML DTD again.\n- (svgtypes) Handle implicit MoveTo after ClosePath segments.\n\n## [0.29.0] - 2023-02-04\n### Added\n- `resvg` CLI loads system fonts only when an input SVG has text nodes now.\n  Fonts loading is an IO-heavy operation and by avoiding it we can speed up `resvg` execution.\n- `usvg::Group::should_isolate`\n- `usvg::Tree::has_text_nodes`\n\n### Changed\n- Some `usvg` internals were moved into the new `rosvgtree` crate.\n- Dummy groups are no longer removed. Use `usvg::Group::should_isolate` to check\n  if a group affects rendering.\n- `usvg-text-layout::TreeTextToPath::convert_text` no longer has the `keep_named_groups` argument.\n- MSRV bumped to 1.65\n- Update dependencies.\n\n### Removed\n- `usvg::Options::keep_named_groups`. Dummy groups are no longer removed.\n- (c-api) `resvg_options_set_keep_named_groups`\n- (Qt API) `ResvgOptions::setKeepNamedGroups`\n\n### Fixed\n- Missing `font-family` handling.\n- `font-weight` resolving.\n\n## [0.28.0] - 2022-12-03\n### Added\n- `usvg::Text` and `usvg::NodeKind::Text`.\n\n### Changed\n- `usvg` isn't converting text to paths by default now. A caller must call\n  `usvg::Tree::convert_text` or `usvg::Text::convert` from `usvg-text-layout` crate on demand.\n- `usvg` text layout implementation moved into `usvg-text-layout` crate.\n- During SVG size recovery, when no `width`, `height` and `viewBox` attributes have been set,\n  text nodes are no longer taken into an account. This is because a text node has no bbox\n  before conversion into path(s), which we no longer doing during parsing.\n- `usvg` is purely an SVG parser now. It doesn't convert text to paths\n  and doesn't write SVG anymore.\n- `usvg::filter::ConvolveMatrixData` methods are fields now.\n\n### Removed\n- `usvg` CLI binary. No alternatives for now.\n- All `usvg` build features.\n  - `filter`. Filter elements are always parsed by `usvg` now.\n  - `text`. Text elements are always parsed by `usvg` now.\n  - `export`. `usvg` cannot write an SVG anymore.\n- `usvg::Tree::to_string`. `usvg` cannot write an SVG anymore.\n- `usvg::TransformFromBBox` trait. This is just a regular `usvg::Transform` method now.\n- `usvg::OptionsRef`. `usvg::Options` is enough from now.\n- `usvg::Options::fontdb`. Used only by `usvg-text-layout` now.\n- `--dump-svg` from `resvg`.\n\n## [0.27.0] - 2022-11-27\n### Added\n- `lengthAdjust` and `textLength` attributes support.\n- Support automatic `image` size detection.\n  `width` and `height` attributes can be omitted or set to `auto` on `image` now. SVG2\n\n### Fixed\n- `--query-all` flag in `resvg` CLI.\n- Percentage values resolving.\n\n## [0.26.1] - 2022-11-21\n### Fixed\n- Allow `dominant-baseline` and `alignment-baseline` to be set via CSS.\n\n## [0.26.0] - 2022-11-20\n### Added\n- Minimal `dominant-baseline` and `alignment-baseline` support.\n- `mix-blend-mode` and `isolation` support. SVG2\n- Allow writing resvg output to stdout.\n- Allow disabling text kerning using `kerning=\"0\"` and `style=\"font-kerning:none\"`. SVG2\n- Allow `<percentage>` values for `opacity`, `fill-opacity`, `stroke-opacity`,\n  `flood-opacity` and `stop-opacity` attributes.<br>\n  You can write `opacity=\"50%\"` now. SVG2\n\n### Changed\n- Disable focal point correction on radial gradients to conform with SVG 2. SVG2\n- Update `feMorphology` radius value resolving.\n\n### Fixed\n- Do not clip nested `svg` when only the `viewBox` attribute is present.\n\n## [0.25.0] - 2022-10-30\n### Added\n- Partial `paint-order` attribute support.\n  Markers can only be under or above the shape.\n\n### Fixed\n- Compilation issues caused by `rustybuzz` update.\n\n## [0.24.0] - 2022-10-22\n### Added\n- CSS3 `writing-mode` variants `vertical-rl` and `vertical-lr`.\n  Thanks to [yisibl](https://github.com/yisibl).\n- (tiny-skia) AArch64 Neon SIMD support. Up to 3x faster on Apple M1.\n\n### Changed\n- `usvg::Tree` stores only `Group`, `Path` and `Image` nodes now.\n  Instead of emulating an SVG file structure, where gradients, patterns, filters, clips and masks\n  are part of the nodes tree (usually inside the `defs` element), we reference them using `Rc`\n  from now.\n  This change makes `usvg` a bit simpler. Makes `usvg` API way easier, since instead of\n  looking for a node via `usvg::Tree::defs_by_id` the caller can access the type directly via `Rc`.\n  And makes creation of custom `usvg::Tree`s way easier.\n- `clip_path`, `mask` and `filters` `usvg::Group` fields store `Rc` instead of `String` now.\n- `usvg::NodeExt::units` was moved to `usvg::Paint::units`.\n- `usvg::filter::ImageKind::Use` stores `usvg::Node` instead of `String`.\n- `usvg::PathData` stores commands and points separately now to reduce overall memory usage.\n- `usvg::PathData` segments should be accessed via `segments()` now.\n- Most numeric types have been moved to the `strict-num` crate.\n- Rename `NormalizedValue` into `NormalizedF64`.\n- Rename `PositiveNumber` into `PositiveF64`.\n- Raw number of numeric types should be accessed via `get()` method instead of `value()` now.\n- `usvg::TextSpan::font_size` is `NonZeroPositiveF64` instead of `f64` now.\n- Re-export `usvg` and `tiny-skia` dependencies in `resvg`.\n- Re-export `roxmltree` dependency in `usvg`.\n- (usvg) Output float precision is reduced from 11 to 8 digits.\n\n### Removed\n- `usvg::Tree::create`. `usvg::Tree` is an open struct now.\n- `usvg::Tree::root`. It's a public field now.\n- `usvg::Tree::svg_node`. Replaced with `usvg::Tree` public fields.\n- `defs`, `is_in_defs`, `append_to_defs` and `defs_by_id` from `usvg::Tree`.\n  We no longer emulate SVG structure. No alternative.\n- `usvg::Tree::is_in_defs`. There are no `defs` anymore.\n- `usvg::Paint::Link`. We store gradient and patterns directly in `usvg::Paint` now.\n- `usvg::Svg`. No longer needed. `size` and `view_box` are `usvg::Tree` fields now.\n- `usvg::SubPathIter` and `usvg::PathData::subpaths`. No longer used.\n\n### Fixed\n- Path bbox calculation scales stroke width too.\n  Thanks to [growler](https://github.com/growler).\n- (tiny-skia) Round caps roundness.\n- (xmlparser) Stack overflow on specific files.\n- (c-api) `resvg_is_image_empty` output was inverted.\n\n## [0.23.0] - 2022-06-11\n### Added\n- `#RRGGBBAA` and `#RGBA` color notation support.\n  Thanks to [demurgos](https://github.com/demurgos).\n\n### Fixed\n- Panic during recursive `pattern` resolving.\n  Thanks to [FylmTM](https://github.com/FylmTM).\n- Spurious warning when using `--export-id`.\n  Thanks to [benoit-pierre](https://github.com/benoit-pierre).\n\n## [0.22.0] - 2022-02-20\n### Added\n- Support `svg` referenced by `use`. External SVG files are still not supported.\n\n### Changed\n- `ttf-parser`, `fontdb` and `rustybuzz` have been updated.\n\n## [0.21.0] - 2022-02-13\n### Added\n- `usvg::ImageHrefResolver` that allows a custom `xlink:href` handling.\n  Thanks to [antmelnyk](https://github.com/antmelnyk).\n- `usvg::Options::image_href_resolver`\n- Support for GIF images inside the `<image>` element.\n- (fontdb) Support for loading user fonts on Windows.\n- (fontdb) Support for parsing fontconfig config files on Linux.\n  For now, only to retrieve a list of font dirs.\n\n### Changed\n- MSRV bumped to 1.51\n- `usvg::ImageKind` stores data as `Arc<Vec<u8>>` and not just `Vec<u8>` now.\n\n### Fixed\n- Every nested `svg` element defines a new viewBox now. Previously, we were always using the root one.\n- Correctly handle SVG size calculation when SVG doesn't have a size and any elements.\n- Improve groups ungrouping speed.\n\n## [0.20.0] - 2021-12-29\n### Changed\n- `resvg::render` and `resvg::render_node` accept a transform now.\n- (c-api) `resvg_render` and `resvg_render_node` accept a transform now.\n- `usvg::Color` is a custom type and not a `svgtypes::Color` reexport now.\n- `usvg::Color` doesn't contain alpha anymore, which have been added in v0.16\n  Alpha would be automatically flattened.\n  This makes [Micro SVG](https://github.com/linebender/resvg/blob/main/crates/usvg/docs/spec.adoc)\n  compatible with SVG 1.1 again.\n- (c-api) Rename `RESVG_FIT_TO_*` into `RESVG_FIT_TO_TYPE_*`.\n\n### Fixed\n- The `--background` argument in `resvg` correctly handles alpha now.\n- Fix building usvg without filter feature but with export.\n\n## [0.19.0] - 2021-10-04\n### Added\n- Better text-on-path converter accuracy by accounting the current transform.\n\n### Changed\n- `usvg::NodeExt::abs_transform` includes current node transform now.\n- Improved turbulence filter performance. Thanks to [akindle](https://github.com/akindle).\n- Multiple dependencies updated.\n\n## [0.18.0] - 2021-09-12\n### Added\n- `filter` build feature. Enabled by default.\n- `usvg::PathBbox` and `resvg_path_bbox` (to C API).\n\n### Changed\n- (usvg) All filter related types are under the `filter` module now.\n- (usvg) Remove `Fe` prefix from all filter types.\n- (c-api) `resvg_get_node_bbox` returns `resvg_path_bbox` now.\n\n### Fixed\n- Horizontal and vertical lines processing.\n- C API building without the `text` feature.\n\n## [0.17.0] - 2021-09-04\n### Added\n- `tiny-skia` updated with support of images larger than 8000x8000 pixels.\n- `feDropShadow` support. SVG2\n- [`<filter-value-list>`](https://www.w3.org/TR/filter-effects-1/#typedef-filter-value-list) support.\n  Meaning that the `filter` attribute can have multiple values now.\n  Like `url(#filter1) blur(2)`. SVG2\n- All [filter functions](https://www.w3.org/TR/filter-effects-1/#filter-functions). SVG2\n- Support all [new](https://www.w3.org/TR/compositing-1/#ltblendmodegt) `feBlend` modes. SVG2\n- Automatic SVG size detection when `width`/`height`/`viewBox` is not set.\n  Thanks to [reknih](https://github.com/reknih).\n- `usvg::Options::default_size`\n- `--default-width` and `--default-height` to usvg.\n\n### Changed\n- `usvg::Group::filter` is a list of filter IDs now.\n- `usvg::FeColorMatrixKind::Saturate` accepts any positive `f64` value now.\n- `svgfilters::ColorMatrix::Saturate` accepts any positive `f64` value now.\n- Fonts memory mapping was split into a separate build feature: `memmap-fonts`.\n  Now you can build resvg/usvg with `system-fonts`, but without `memmap-fonts`.\n  Enabled by default.\n- The `--dump-svg` argument in resvg CLI tool should be enabled using `--features dump-svg` now.\n  No enabled by default.\n- `usvg::Tree::to_string` is behind the `export` build feature now.\n\n### Fixed\n- When writing SVG, `usvg` will use `rgba()` notations for colors instead of `#RRGGBB`.\n\n## [0.16.0] - 2021-08-22\n### Added\n- CSS3 colors support. Specifically `rgba`, `hsl`, `hsla` and `transparent`. SVG2\n- Allow missing `rx`/`ry` attributes on `ellipse`. SVG2\n- Allow markers on all shapes. SVG2\n- `textPath` can reference basic shapes now. SVG2\n- `usvg::OptionsRef`, which is a non-owned `usvg::Options` variant.\n- `simplecss` updated with CSS specificity support.\n- `turn` angle unit support. SVG2\n- Basic `font-variant=small-caps` support. No font fallback.\n- `--export-area-page` to resvg.\n- `--export-area-drawing` to resvg.\n\n### Changed\n- `resvg::render_node` requires `usvg::Tree` now.\n- `usvg::Color` gained an `alpha` field.\n\n### Removed\n- `usvg::Node::tree`. Cannot be implemented efficiently anymore.\n- `usvg::SystemFontDB`. No longer needed.\n\n### Fixed\n- `pattern` scaling.\n- Greatly improve `symbol` resolving speed in `usvg`.\n- Whitespaces trimming on nested `tspan`.\n\n## [0.15.0] - 2021-06-13\n### Added\n- Allow reading SVG from stdin in `resvg` binary.\n- `--id-prefix` to `usvg`.\n- `FitTo::Size`\n- `resvg` binary accepts `--width` and `--height` args together now.\n  Previously, only `--width` or `--height` were allowed.\n- `usvg::Path::text_bbox`\n- The maximum number of SVG elements is limited by 1_000_000 now.\n  Mainly to prevent a billion laugh style attacks.\n- The maximum SVG elements nesting is limited by 1024 now.\n- `usvg::Error::ElementsLimitReached`\n\n### Changed\n- Improve clipping and masking performance on large images.\n- Remove layers caching. This was a pointless optimization.\n- Split _Preprocessing_ into _Reading_ and _Parsing_ in `resvg --perf`.\n- `usvg::XmlOptions` rewritten.\n- `usvg::Tree::to_string` requires a reference to `XmlOptions` now.\n\n### Removed\n- `usvg::Tree::from_file`. Use `from_data` or `from_str` instead.\n- `usvg::Error::InvalidFileSuffix`\n- `usvg::Error::FileOpenFailed`\n- (c-api) `RESVG_ERROR_INVALID_FILE_SUFFIX`\n\n### Fixed\n- Ignore tiny blur values. It could lead to a transparent image.\n- `use` style propagation when used with `symbol`.\n- Vertical text layout with relative offsets.\n- Text bbox calculation. `usvg` uses font metrics instead of path bbox now.\n\n## [0.14.1] - 2021-04-18\n### Added\n- Allow `href` without the `xlink` namespace.\n  This feature is part of SVG 2 (which we do not support),\n  but there are more and more files like this in the wild.\n\n### Changed\n- (usvg) Do not write `usvg:version` to the output SVG.\n\n### Fixed\n- (usvg) `overflow='inherit'` resolving.\n- (usvg) SVG Path length calculation that affects `startOffset` property in `textPath`.\n- (usvg) Fix `feImage` resolving when the linked element has\n  `opacity`, `clip-path`, `mask` and/or `filter` attributes.\n- (usvg) Fix chained `feImage` resolving.\n- CLI arguments processing.\n\n## [0.14.0] - 2021-03-06\n### Fixed\n- Multiple critical bugs in `tiny-skia`.\n\n## [0.13.1] - 2021-01-20\n### Fixed\n- `image` with float size scaling.\n- Critical bug in `tiny-skia`.\n\n## [0.13.0] - 2020-12-21\n### Added\n- `--resources-dir` option to CLI tools.\n- (usvg) `Tree::from_xmltree`\n\n### Changed\n- Remove the `Image` struct. `render()` and `render_node()` methods now accept `tiny_skia::PixmapMut`.\n- Update `fontdb`.\n- Update `tiny-skia`.\n- (c-api) `resvg_size` uses `double` instead of `uint32_t` now.\n- (qt-api) `defaultSize()` and `defaultSizeF()` methods now return SVG size\n  and not SVG viewbox size.\n- (usvg) `Options::path` changed to `Options::resources_dir` and requires a directory now.\n- (c-api) `resvg_options_set_file_path` changed to `resvg_options_set_resources_dir`\n  and requires a directory now.\n- (qt-api) `ResvgOptions::setFilePath` changed to `ResvgOptions::setResourcesDir`\n  and requires a directory now.\n\n### Fixed\n- Support multiple values inside a `text-decoration` attribute.\n\n### Removed\n- `Image`. Use `tiny_skia::PixmapMut` instead.\n- (c-api) `resvg_image` struct and `resvg_image_*` methods. `resvg` renders onto\n  the provided buffer now.\n- (c-api) `resvg_color`, because unused.\n\n## [0.12.0] - 2020-12-05\n### Changed\n- resvg no longer requires a C++ compiler!\n- `tiny-skia` was updated to a pure Rust version, which means that `resvg` no longer\n  depends on `clang` and should work on 32bit targets.\n- `rustybuzz` was updated to a pure Rust version.\n- `tools/explorer-thumbnailer` is back and written in Rust now.\n  Thanks to [gentoo90](https://github.com/gentoo90).\n\n### Fixed\n- (usvg) Do not panic when a font has a zero-sized underline thickness.\n- (usvg) Multiple `textPath` processing fixes by [chubei-oppen](https://github.com/chubei-oppen).\n- (qt-api) `boundsOnElement` and `boundingBox` were returning transposed bounds.\n\n## [0.11.0] - 2020-07-04\n### Highlights\n- All backends except Skia were removed. Skia is the only official one from now.\n- New C API implementation.\n\n### Added\n- Support for user-defined fonts in usvg, resvg and C API.\n- `--serif-family`, `--sans-serif-family`, `--cursive-family`, `--fantasy-family`\n  `--monospace-family`, `--use-font-file`, `--use-fonts-dir`, `--skip-system-fonts` and `--list-fonts`\n  options to all CLI tools.\n- New tests suite. Instead of testing against the previous build, now we're testing against\n  prerendered PNG images. Which is way faster.<br>\n  And you can test resvg without the internet connection now.<br>\n  And all you need is just `cargo test`.\n\n### Changed\n- Library uses an embedded Skia by default now.\n- Switch `harfbuzz_rs` with `rustybuzz`.\n- Rendering doesn't require `usvg::Options` now.\n- (usvg) The `fontdb` module moved into its own crate.\n- (usvg) `fontconfig` is no longer used for matching\n  [generic fonts](https://www.w3.org/TR/2018/REC-css-fonts-3-20180920/#generic-family-value)\n  on Linux. Mainly because it's very slow.\n- (usvg) When an `image` element contains a file path, the file will be loaded into memory now,\n  instead of simply storing a file path. And will be dumped as base64 on SVG save.\n  In case of an SVG image, it will be loaded as a `Tree` and saved as base64 encoded XML on save.\n- (usvg) `ImageData` replaced with `ImageKind`.\n- (usvg) Fonts database is empty by default now and should be filled manually.\n- (c-api) Almost a complete rewrite.\n\n### Removed\n- All backends except the Skia one.\n- `Options` from all backends. We don't use it anymore.\n- (usvg) `ImageFormat`.\n- (c-api) Rendering on a backends canvas no longer supported. Was constantly misused.\n\n## [0.10.0] - 2020-06-19\n\n### Changed\n- The `resvg` crate has been split into four: resvg-cairo, resvg-qt, resvg-skia and resvg-raqote.<br/>\n  So from now, instead of enabling a required backend via cargo features,\n  you should select a required backend-specific crate.<br/>\n  This allows us to have a better integration with a selected 2D library.<br/>\n  And we also have separated C API implementations now.<br/>\n  And each backend has its own vendored archive too.\n- (qt-backend) Use `QImage` instead of Rust libraries for raster images loading.\n\n### Removed\n- The `resvg` crate. Use backend-specific crates.\n- `tools/rendersvg`. Each backend has its own CLI tool now.\n- `tools/usvg`. `usvg` implements CLI by default now.\n- (c-api) `resvg_*_render_to_file` methods.\n- (qt-backend) `jpeg-decoder` and `png` dependencies.\n\n## [0.9.1] - 2020-06-03\n### Fixed\n- Stack overflow when `enable-background` and `filter` are set on the same element.\n- Grayscale PNG loading.\n- Allow building on BSD.\n- (usvg) Font fallback when shaping produces a different amount of glyphs.\n- (usvg) Ignore a space after the last character during `letter-spacing` processing.\n- (usvg) `marker-end` rendering when the last segment is a curve with the second control point\n  that coincides with end point.\n- (usvg) Accept embedded `image` data without mime.\n- (usvg) Fonts search in a home directory on Linux.\n- (usvg) `dy` calculation for `textPath` thanks to [Stoeoef](https://github.com/Stoeoef)\n- (usvg) `textPath` resolving when a referenced path has a transform.<br/>\n  Thanks to [Stoeoef](https://github.com/Stoeoef).\n- (usvg) Load user fonts on macOS too.\n- (xmlparser) Parsing comment before DTD.\n\n## [0.9.0] - 2020-01-18\n### Added\n- `feConvolveMatrix`, `feMorphology`, `feDisplacementMap`, `feTurbulence`,\n  `feDiffuseLighting` and `feSpecularLighting` support.\n- `BackgroundImage`, `BackgroundAlpha`, `FillPaint` and `StrokePaint` support as a filter input.\n- Load grayscale raster images.\n- `enable-background` support.\n- resvg/usvg can be built without text rendering support now.\n- `OutputImage::make_vec` and `OutputImage::make_rgba_vec`.\n- `feImage` with a reference to an internal element.\n\n### Changed\n- `feComposite` k1-4 coefficients can have any number now.\n  This matches browsers behaviour.\n- Use `flate2` instead of `libflate` for GZip decoding.\n- (usvg) `fill` and `stroke` attributes will always be set for `path` now.\n- (usvg) `g`, `path` and `image` can now be set inside `defs`. Required by `feImage`.\n- (c-api) Rename `resvg_*_render_to_image` into `resvg_*_render_to_file`.\n\n### Fixed\n- (usvg) Transform processing during text-to-path conversion.\n- `feComposite` with fully transparent region was producing an invalid result.\n- Fallback to `matrix` in `feColorMatrix` when `type` is not set or invalid.\n- ID preserving for `use` elements.\n- `feFlood` with subregion and `primitiveUnits=objectBoundingBox`.\n- (harfbuzz_rs) Memory leak.\n\n## [0.8.0] - 2019-08-17\n### Added\n- A [Skia](https://skia.org/) backend thanks to\n  [JaFenix](https://github.com/JaFenix).\n- `feComponentTransfer` support.\n- `feColorMatrix` support.\n- A better CSS support.\n- An `*.otf` fonts support.\n- (usvg) `dx`, `dy` are supported inside `textPath` now.\n- Use a box blur for `feGaussianBlur` with `stdDeviation`>=2.\n  This is 4-8 times faster than IIR blur.\n  Thanks to [Shnatsel](https://github.com/Shnatsel).\n\n### Changed\n- All backends are using Rust crates for raster images loading now.\n- Use `pico-args` instead of `gumdrop` to reduced the build time of `tools/rendersvg`\n  and `tools/usvg`.\n- (usvg) The `xmlwriter` is used for SVG generation now.\n  Almost 2x faster than generating an `svgdom`.\n- (usvg) Optimize font database initialization. Almost 50% faster.\n- Use a lower PNG compression ratio to speed up PNG generation.\n  Depending on a backend and image can be 2-4x faster.\n- `OutputImage::save` -> `OutputImage::save_png`.\n- (usvg) `Path::segments` -> `Path::data`.\n- Cairo backend compilation is 2x faster now due to overall changes.\n- Performance improvements (Oxygen Icon theme SVG-to-PNG):\n  - cairo-backend: 22% faster\n  - qt-backend: 20% faster\n  - raqote-backend: 34% faster\n\n### Fixed\n- (qt-api) A default font resolving.\n- (usvg) `baseline-shift` processing inside `textPath`.\n- (usvg) Remove all `tref` element children.\n- (usvg) `tref` with `xml:space` resolving.\n- (usvg) Ignore nested `tref`.\n- (usvg) Ignore invalid `clipPath` children that were referenced via `use`.\n- (usvg) `currentColor` will always fallback to black now.\n  Previously, `stroke` was set to `none` which is incorrect.\n- (usvg) `use` can reference an element inside a non-SVG element now.\n- (usvg) Collect all styles for generic fonts and not only *Regular*.\n- (usvg) Parse only presentation attributes from the `style` element and attribute.\n\n### Removed\n- (cairo-backend) `gdk-pixbuf` dependency.\n- (qt-backend) JPEG image format plugin dependency.\n- `svgdom` dependency.\n\n## [0.7.0] - 2019-06-19\n### Added\n- New text layout implementation:\n  - `textPath` support.\n  - `writing-mode` support, aka vertical text.\n  - [Text BIDI reordering](http://www.unicode.org/reports/tr9/).\n  - Better text shaping.\n  - `word-spacing` is supported for all backends now.\n  - [`harfbuzz`](https://github.com/harfbuzz/harfbuzz) dependency.\n  - Subscript, superscript offsets are extracted from font and not hardcoded now.\n- `shape-rendering`, `text-rendering` and `image-rendering` support.\n- The `arithmetic` operator for `feComposite`.\n- (usvg) `--quiet` argument.\n- (c-api) `resvg_get_image_bbox`.\n- (qt-api) `ResvgRenderer::boundingBox`.\n- (resvg) A [raqote](https://github.com/jrmuizel/raqote) backend thanks to\n  [jrmuizel](https://github.com/jrmuizel). Still experimental.\n\n### Changed\n- Text will be converted into paths on the `usvg` side now.\n- (resvg) Do not rescale images before rendering. This is faster and better.\n- (usvg) An `image` element with a zero or negative size will be skipped now.\n  Previously, a linked image size was used, which is incorrect.\n- Geometry primitives (`Rect`, `Size`, etc) are immutable and always valid now.\n- (usvg) The default `color-interpolation-filters` attribute will not be exported now.\n\n### Removed\n- (usvg) All text related structures and enums. Text will be converted into `Path` now.\n- `InitObject` and `init()` because they are no longer needed.\n- (c-api) `resvg_handle`, `resvg_init`, `resvg_destroy`.\n- (c-api) `resvg_cairo_get_node_bbox` and `resvg_qt_get_node_bbox`.\n  Use backend-independent `resvg_get_node_bbox` instead.\n- (cairo-backend) `pango` dependency.\n- (resvg) `Backend::calc_node_bbox`. Use `Node::calculate_bbox()` instead.\n\n### Fixed\n- `letter-spacing` on cursive scripts (like Arabic).\n- (rctree) Prevent stack overflow on a huge, deeply nested SVG.\n- (c-api) `resvg_is_image_empty` was always returning `false`.\n- (resvg) Panic when `filter` with `objectBoundingBox` was set on an empty group.\n- (usvg) `mask` with `objectBoundingBox` resolving.\n- (usvg) `pattern`'s `viewBox` attribute resolving via `href`.\n- (roxmltree) Namespace resolving.\n\n## [0.6.1] - 2019-03-16\n### Fixed\n- (usvg) `transform` multiplication.\n- (usvg) `use` inside `clipPath` resolving.\n\n## [0.6.0] - 2019-03-16\n### Added\n- Nested `baseline-shift` support.\n- (qt-api) `renderToImage`.\n- (usvg) A better algorithm for unused defs (`defs` element children, like gradients) removal.\n- (usvg) `Error::InvalidSize`.\n- (c-api) `RESVG_ERROR_INVALID_SIZE`.\n\n### Changed\n- (usvg) A major rewrite.\n- `baseline-shift` with `sub`, `super` and percent values calculation.\n- Marker resolving moved completely to `usvg`.\n- If an SVG doesn't have a valid size than an error will occur.\n  Previously, an empty tree was produced.\n- (qt-api) `render` methods are `const` now.\n- (usvg) Disable default attributes exporting.\n\n### Removed\n- (usvg) Marker element and attributes. Markers will be resolved just like `use` now.\n\n### Fixed\n- (resvg) During the `tspan` rendering, the `text` bbox will be used instead\n  of the `tspan` bbox itself. This is the correct behaviour by the SVG spec.\n- (cairo-backend) `font-family` parsing.\n- (usvg) `filter:none` processing.\n- (usvg) `text` inside `text` processing.\n- (usvg) Endless loop during `use` resolving.\n- (usvg) Endless loop when SVG has indirect recursive `xlink:href` links.\n- (usvg) Endless loop when SVG has recursive `marker-*` links.\n- (usvg) Panic during `use` resolving.\n- (usvg) Panic during inherited attributes resolving.\n- (usvg) Groups regrouping.\n- (usvg) `dx`/`dy` processing on `text`.\n- (usvg) `textAnchor` resolving.\n- (usvg) Ignore `fill-rule` on `text`.\n- (svgtypes) Style with comments parsing.\n- (roxmltree) Namespaces resolving.\n\n## [0.5.0] - 2019-01-04\n### Added\n- `marker` support.\n- Partial `baseline-shift` support.\n- `letter-spacing` support.\n- (qt-backend) `word-spacing` support.\n  Does not work on the cairo backend.\n- tools/explorer-thumbnailer\n- tools/kde-dolphin-thumbnailer\n\n### Fixed\n- Object bounding box calculation.\n- Pattern scaling.\n- Nested `objectBoundingBox` support.\n- (usvg) `color` on `use` resolving.\n- (usvg) `offset` attribute resolving inside the `stop` element.\n- (usvg) Ungrouping of groups with non-inheritable attributes.\n- (usvg) `rotate` attribute resolving.\n- (usvg) Paths without stroke and fill will no longer be removed.\n  Required for a proper bbox resolving.\n- (usvg) Coordinates resolving when units are `userSpaceOnUse`.\n- (usvg) Groups regrouping. Caused an incorrect rendering of `clipPath`\n  that had `filter` on a child.\n- (usvg) Style attributes resolving on the root `svg` element.\n- (usvg) `SmoothCurveTo` and `SmoothQuadratic` conversion.\n- (usvg) `symbol` resolving.\n- (cairo-backend) Font ascent calculation.\n- (qt-backend) Stroking of LineTo specified as CurveTo.\n- (svgdom) `stroke-miterlimit` attribute parsing.\n- (svgdom) `length` and `number` attribute types parsing.\n- (svgdom) `offset` attribute parsing.\n- (svgdom) IRI resolving order when SVG has duplicated ID's.\n\n## [0.4.0] - 2018-12-13\n### Added\n- (resvg) Initial filters support.\n- (resvg) Nested `clipPath` and `mask` support.\n- (resvg) MSVC support.\n- (rendersvg) `font-family`, `font-size` and `languages` to args.\n- (usvg) `systemLanguage` attribute support.\n- (usvg) Default font family and size is configurable now.\n- (c-api) `RESVG_ERROR_PARSING_FAILED`.\n- (c-api) `font_family`, `font_size` and `languages` to `resvg_options`.\n- (qt-api) `ResvgRenderer::setDevicePixelRatio`.\n\n### Changed\n- (rendersvg) Use `gumdrop` instead of `getopts`.\n- (c-api) Qt wrapper is header-only now.\n\n### Fixed\n- (cairo-backend) Text layout.\n- (cairo-backend) Rendering of a zero length subpath with a square cap.\n- (qt-backend) Transform retrieving via Qt bindings.\n- (resvg) Recursive SVG images via `image` tag.\n- (resvg) Bbox calculation of the text with rotate.\n- (resvg) Invisible elements processing.\n- (qt-api) SVG from QByteArray loading when data is invalid.\n- (usvg) `display` attribute processing.\n- (usvg) Recursive `mask` resolving.\n- (usvg) `inherit` attribute value resolving.\n- (svgdom) XML namespaces resolving.\n\n### Removed\n- (rendersvg) `failure` dependency.\n\n## [0.3.0] - 2018-05-23\n### Added\n- (c-api) `resvg_is_image_empty`.\n- (c-api) `resvg_error` enum.\n- (c-api) Qt wrapper.\n- (resvg) Advanced text layout support (lists of x, y, dx, dy and rotate).\n- (resvg) SVG support for `image` element.\n- (usvg) `symbol` element support.\n- (usvg) Nested `svg` elements support.\n- (usvg) Paint fallback resolving.\n- (usvg) Bbox validation for shapes that use painting servers.\n- (svgdom) Elements from ENTITY resolving.\n\n### Changed\n- (c-api) `resvg_parse_tree_from_file`, `resvg_parse_tree_from_data`\n  `resvg_cairo_render_to_image` and `resvg_qt_render_to_image`\n  will return an error code now.\n- (cairo-backend) Use `gdk-pixbuf` crate instead of `image`.\n- (resvg) `Render::render_to_image` and `Render::render_node_to_image` will return\n  `Option` and not `Result` now.\n- (resvg) New geometry primitives implementation.\n- (resvg) Rename `render_*` modules to `backend_`.\n- (rendersvg) Use `getopts` instead of `clap` to reduce the executable size.\n- (svgtypes) `StreamExt::parse_iri` and `StreamExt::parse_func_iri` will parse\n  not only well-formed data now.\n\n### Fixed\n- (qt-backend) Gradient with `objectBoundingBox` rendering.\n- (qt-backend) Text bounding box detection during the rendering.\n- (cairo-backend) `image` element clipping.\n- (cairo-backend) Layers management.\n- (c-api) `resvg_get_node_transform` will return a correct transform now.\n- (resvg) `text-decoration` thickness.\n- (resvg) `pattern` scaling.\n- (resvg) `image` without size rendering.\n- (usvg) Panic during `visibility` resolving.\n- (usvg) Gradients with one stop resolving.\n- (usvg) `use` attributes resolving.\n- (usvg) `clipPath` and `mask` attributes resolving.\n- (usvg) `offset` attribute in `stop` element resolving.\n- (usvg) Incorrect `font-size` attribute resolving.\n- (usvg) Gradient stops resolving.\n- (usvg) `switch` element resolving.\n- (svgdom) Mixed `xml:space` processing.\n- (svgtypes) `Paint::from_span` poor performance.\n\n### Removed\n- (c-api) `resvg_error_msg_destroy`.\n- (resvg) `parse_rtree_*` methods. Use `usvg::Tree::from_` instead.\n- (resvg) `Error`.\n\n## [0.2.0] - 2018-04-24\n### Added\n- (svg) Partial `clipPath` support.\n- (svg) Partial `mask` support.\n- (svg) Partial `pattern` support.\n- (svg) `preserveAspectRatio` support.\n- (svg) Check that an external image is PNG or JPEG.\n- (rendersvg) Added `--query-all` and `--export-id` arguments to render SVG items by ID.\n- (rendersvg) Added `--perf` argument for a simple performance stats.\n\n### Changed\n- (resvg) API is completely new.\n\n### Fixed\n- `font-size` attribute inheritance during `use` resolving.\n\n[Unreleased]: https://github.com/linebender/resvg/compare/v0.44.0...HEAD\n[0.44.0]: https://github.com/linebender/resvg/compare/v0.43.0...v0.44.0\n[0.43.0]: https://github.com/linebender/resvg/compare/v0.42.0...v0.43.0\n[0.42.0]: https://github.com/linebender/resvg/compare/v0.41.0...v0.42.0\n[0.41.0]: https://github.com/linebender/resvg/compare/v0.40.0...v0.41.0\n[0.40.0]: https://github.com/linebender/resvg/compare/v0.39.0...v0.40.0\n[0.39.0]: https://github.com/linebender/resvg/compare/v0.38.0...v0.39.0\n[0.38.0]: https://github.com/linebender/resvg/compare/v0.37.0...v0.38.0\n[0.37.0]: https://github.com/linebender/resvg/compare/v0.36.0...v0.37.0\n[0.36.0]: https://github.com/linebender/resvg/compare/v0.35.0...v0.36.0\n[0.35.0]: https://github.com/linebender/resvg/compare/v0.34.1...v0.35.0\n[0.34.1]: https://github.com/linebender/resvg/compare/v0.34.0...v0.34.1\n[0.34.0]: https://github.com/linebender/resvg/compare/v0.33.0...v0.34.0\n[0.33.0]: https://github.com/linebender/resvg/compare/v0.32.0...v0.33.0\n[0.32.0]: https://github.com/linebender/resvg/compare/v0.31.1...v0.32.0\n[0.31.1]: https://github.com/linebender/resvg/compare/v0.31.0...v0.31.1\n[0.31.0]: https://github.com/linebender/resvg/compare/v0.30.0...v0.31.0\n[0.30.0]: https://github.com/linebender/resvg/compare/v0.29.0...v0.30.0\n[0.29.0]: https://github.com/linebender/resvg/compare/v0.28.0...v0.29.0\n[0.28.0]: https://github.com/linebender/resvg/compare/v0.27.0...v0.28.0\n[0.27.0]: https://github.com/linebender/resvg/compare/v0.26.1...v0.27.0\n[0.26.1]: https://github.com/linebender/resvg/compare/v0.26.0...v0.26.1\n[0.26.0]: https://github.com/linebender/resvg/compare/v0.25.0...v0.26.0\n[0.25.0]: https://github.com/linebender/resvg/compare/v0.24.0...v0.25.0\n[0.24.0]: https://github.com/linebender/resvg/compare/v0.23.0...v0.24.0\n[0.23.0]: https://github.com/linebender/resvg/compare/v0.22.0...v0.23.0\n[0.22.0]: https://github.com/linebender/resvg/compare/v0.21.0...v0.22.0\n[0.21.0]: https://github.com/linebender/resvg/compare/v0.20.0...v0.21.0\n[0.20.0]: https://github.com/linebender/resvg/compare/v0.19.0...v0.20.0\n[0.19.0]: https://github.com/linebender/resvg/compare/v0.18.0...v0.19.0\n[0.18.0]: https://github.com/linebender/resvg/compare/v0.17.0...v0.18.0\n[0.17.0]: https://github.com/linebender/resvg/compare/v0.16.0...v0.17.0\n[0.16.0]: https://github.com/linebender/resvg/compare/v0.15.0...v0.16.0\n[0.15.0]: https://github.com/linebender/resvg/compare/v0.14.1...v0.15.0\n[0.14.1]: https://github.com/linebender/resvg/compare/v0.14.0...v0.14.1\n[0.14.0]: https://github.com/linebender/resvg/compare/v0.13.1...v0.14.0\n[0.13.1]: https://github.com/linebender/resvg/compare/v0.13.0...v0.13.1\n[0.13.0]: https://github.com/linebender/resvg/compare/v0.12.0...v0.13.0\n[0.12.0]: https://github.com/linebender/resvg/compare/v0.11.0...v0.12.0\n[0.11.0]: https://github.com/linebender/resvg/compare/v0.10.0...v0.11.0\n[0.10.0]: https://github.com/linebender/resvg/compare/v0.9.1...v0.10.0\n[0.9.1]: https://github.com/linebender/resvg/compare/v0.9.0...v0.9.1\n[0.9.0]: https://github.com/linebender/resvg/compare/v0.8.0...v0.9.0\n[0.8.0]: https://github.com/linebender/resvg/compare/v0.7.0...v0.8.0\n[0.7.0]: https://github.com/linebender/resvg/compare/v0.6.1...v0.7.0\n[0.6.1]: https://github.com/linebender/resvg/compare/v0.6.0...v0.6.1\n[0.6.0]: https://github.com/linebender/resvg/compare/v0.5.0...v0.6.0\n[0.5.0]: https://github.com/linebender/resvg/compare/v0.4.0...v0.5.0\n[0.4.0]: https://github.com/linebender/resvg/compare/v0.3.0...v0.4.0\n[0.3.0]: https://github.com/linebender/resvg/compare/v0.2.0...v0.3.0\n[0.2.0]: https://github.com/linebender/resvg/compare/v0.1.0...v0.2.0\n"
        },
        {
          "name": "Cargo.lock",
          "type": "blob",
          "size": 18.4970703125,
          "content": "# This file is automatically @generated by Cargo.\n# It is not intended for manual editing.\nversion = 3\n\n[[package]]\nname = \"adler2\"\nversion = \"2.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"512761e0bb2578dd7380c6baaa0f4ce03e84f95e960231d1dec8bf4d7d6e2627\"\n\n[[package]]\nname = \"arrayref\"\nversion = \"0.3.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"76a2e8124351fda1ef8aaaa3bbd7ebbcb486bbcd4225aca0aa0d84bb2db8fecb\"\n\n[[package]]\nname = \"arrayvec\"\nversion = \"0.7.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7c02d123df017efcdfbd739ef81735b36c5ba83ec3c59c80a9d7ecc718f92e50\"\n\n[[package]]\nname = \"autocfg\"\nversion = \"0.1.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0dde43e75fd43e8a1bf86103336bc699aa8d17ad1be60c76c0bdfd4828e19b78\"\ndependencies = [\n \"autocfg 1.4.0\",\n]\n\n[[package]]\nname = \"autocfg\"\nversion = \"1.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ace50bade8e6234aa140d9a2f552bbee1db4d353f69b8217bc503490fc1a9f26\"\n\n[[package]]\nname = \"base64\"\nversion = \"0.22.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"72b3254f16251a8381aa12e40e3c4d2f0199f8c6508fbecb9d91f575e0fbb8c6\"\n\n[[package]]\nname = \"bitflags\"\nversion = \"1.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bef38d45163c2f1dde094a7dfd33ccf595c92905c8f8f4fdc18d06fb1037718a\"\n\n[[package]]\nname = \"bitflags\"\nversion = \"2.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b048fb63fd8b5923fc5aa7b340d8e156aec7ec02f0c78fa8a6ddc2613f6f71de\"\n\n[[package]]\nname = \"bytemuck\"\nversion = \"1.18.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"94bbb0ad554ad961ddc5da507a12a29b14e4ae5bda06b19f575a3e6079d2e2ae\"\n\n[[package]]\nname = \"byteorder-lite\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8f1fe948ff07f4bd06c30984e69f5b4899c516a3ef74f34df92a2df2ab535495\"\n\n[[package]]\nname = \"cfg-if\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd\"\n\n[[package]]\nname = \"cloudabi\"\nversion = \"0.0.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ddfc5b9aa5d4507acaf872de71051dfd0e309860e88966e1051e462a077aac4f\"\ndependencies = [\n \"bitflags 1.3.2\",\n]\n\n[[package]]\nname = \"codegen\"\nversion = \"0.1.0\"\ndependencies = [\n \"itertools\",\n \"phf\",\n \"phf_codegen\",\n]\n\n[[package]]\nname = \"color_quant\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3d7b894f5411737b7867f4827955924d7c254fc9f4d91a6aad6b097804b1018b\"\n\n[[package]]\nname = \"core_maths\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e3b02505ccb8c50b0aa21ace0fc08c3e53adebd4e58caa18a36152803c7709a3\"\ndependencies = [\n \"libm\",\n]\n\n[[package]]\nname = \"crc32fast\"\nversion = \"1.4.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a97769d94ddab943e4510d138150169a2758b5ef3eb191a9ee688de3e23ef7b3\"\ndependencies = [\n \"cfg-if\",\n]\n\n[[package]]\nname = \"data-url\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5c297a1c74b71ae29df00c3e22dd9534821d60eb9af5a0192823fa2acea70c2a\"\n\n[[package]]\nname = \"either\"\nversion = \"1.13.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"60b1af1c220855b6ceac025d3f6ecdd2b7c4894bfe9cd9bda4fbb4bc7c0d4cf0\"\n\n[[package]]\nname = \"fdeflate\"\nversion = \"0.3.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d8090f921a24b04994d9929e204f50b498a33ea6ba559ffaa05e04f7ee7fb5ab\"\ndependencies = [\n \"simd-adler32\",\n]\n\n[[package]]\nname = \"flate2\"\nversion = \"1.0.34\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a1b589b4dc103969ad3cf85c950899926ec64300a1a46d76c03a6072957036f0\"\ndependencies = [\n \"crc32fast\",\n \"miniz_oxide\",\n]\n\n[[package]]\nname = \"float-cmp\"\nversion = \"0.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"98de4bbd547a563b716d8dfa9aad1cb19bfab00f4fa09a6a4ed21dbcf44ce9c4\"\n\n[[package]]\nname = \"fontconfig-parser\"\nversion = \"0.5.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c1fcfcd44ca6e90c921fee9fa665d530b21ef1327a4c1a6c5250ea44b776ada7\"\ndependencies = [\n \"roxmltree\",\n]\n\n[[package]]\nname = \"fontdb\"\nversion = \"0.23.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"457e789b3d1202543297a350643cf459f836cade38934e7a4cf6a39e7cde2905\"\ndependencies = [\n \"fontconfig-parser\",\n \"log\",\n \"memmap2\",\n \"slotmap\",\n \"tinyvec\",\n \"ttf-parser\",\n]\n\n[[package]]\nname = \"fuchsia-cprng\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a06f77d526c1a601b7c4cdd98f54b5eaabffc14d5f2f0296febdc7f357c6d3ba\"\n\n[[package]]\nname = \"gif\"\nversion = \"0.13.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3fb2d69b19215e18bb912fa30f7ce15846e301408695e44e0ef719f1da9e19f2\"\ndependencies = [\n \"color_quant\",\n \"weezl\",\n]\n\n[[package]]\nname = \"image-webp\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e031e8e3d94711a9ccb5d6ea357439ef3dcbed361798bd4071dc4d9793fbe22f\"\ndependencies = [\n \"byteorder-lite\",\n \"quick-error\",\n]\n\n[[package]]\nname = \"imagesize\"\nversion = \"0.13.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"edcd27d72f2f071c64249075f42e205ff93c9a4c5f6c6da53e79ed9f9832c285\"\n\n[[package]]\nname = \"itertools\"\nversion = \"0.7.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0d47946d458e94a1b7bcabbf6521ea7c037062c81f534615abcad76e84d4970d\"\ndependencies = [\n \"either\",\n]\n\n[[package]]\nname = \"kurbo\"\nversion = \"0.11.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"89234b2cc610a7dd927ebde6b41dd1a5d4214cffaef4cf1fb2195d592f92518f\"\ndependencies = [\n \"arrayvec\",\n \"smallvec\",\n]\n\n[[package]]\nname = \"libc\"\nversion = \"0.2.159\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"561d97a539a36e26a9a5fad1ea11a3039a67714694aaa379433e580854bc3dc5\"\n\n[[package]]\nname = \"libm\"\nversion = \"0.2.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4ec2a862134d2a7d32d7983ddcdd1c4923530833c9f2ea1a44fc5fa473989058\"\n\n[[package]]\nname = \"log\"\nversion = \"0.4.22\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a7a70ba024b9dc04c27ea2f0c0548feb474ec5c54bba33a7f72f873a39d07b24\"\n\n[[package]]\nname = \"memmap2\"\nversion = \"0.9.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fd3f7eed9d3848f8b98834af67102b720745c4ec028fcd0aa0239277e7de374f\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"miniz_oxide\"\nversion = \"0.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e2d80299ef12ff69b16a84bb182e3b9df68b5a91574d3d4fa6e41b65deec4df1\"\ndependencies = [\n \"adler2\",\n \"simd-adler32\",\n]\n\n[[package]]\nname = \"once_cell\"\nversion = \"1.19.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3fdb12b2476b595f9358c5161aa467c2438859caa136dec86c26fdd2efe17b92\"\n\n[[package]]\nname = \"phf\"\nversion = \"0.7.24\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b3da44b85f8e8dfaec21adae67f95d93244b2ecf6ad2a692320598dcc8e6dd18\"\ndependencies = [\n \"phf_shared\",\n]\n\n[[package]]\nname = \"phf_codegen\"\nversion = \"0.7.24\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b03e85129e324ad4166b06b2c7491ae27fe3ec353af72e72cd1654c7225d517e\"\ndependencies = [\n \"phf_generator\",\n \"phf_shared\",\n]\n\n[[package]]\nname = \"phf_generator\"\nversion = \"0.7.24\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"09364cc93c159b8b06b1f4dd8a4398984503483891b0c26b867cf431fb132662\"\ndependencies = [\n \"phf_shared\",\n \"rand\",\n]\n\n[[package]]\nname = \"phf_shared\"\nversion = \"0.7.24\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"234f71a15de2288bcb7e3b6515828d22af7ec8598ee6d24c3b526fa0a80b67a0\"\ndependencies = [\n \"siphasher 0.2.3\",\n]\n\n[[package]]\nname = \"pico-args\"\nversion = \"0.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5be167a7af36ee22fe3115051bc51f6e6c7054c9348e28deb4f49bd6f705a315\"\n\n[[package]]\nname = \"png\"\nversion = \"0.17.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"52f9d46a34a05a6a57566bc2bfae066ef07585a6e3fa30fbbdff5936380623f0\"\ndependencies = [\n \"bitflags 1.3.2\",\n \"crc32fast\",\n \"fdeflate\",\n \"flate2\",\n \"miniz_oxide\",\n]\n\n[[package]]\nname = \"quick-error\"\nversion = \"2.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a993555f31e5a609f617c12db6250dedcac1b0a85076912c436e6fc9b2c8e6a3\"\n\n[[package]]\nname = \"rand\"\nversion = \"0.6.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6d71dacdc3c88c1fde3885a3be3fbab9f35724e6ce99467f7d9c5026132184ca\"\ndependencies = [\n \"autocfg 0.1.8\",\n \"libc\",\n \"rand_chacha\",\n \"rand_core 0.4.2\",\n \"rand_hc\",\n \"rand_isaac\",\n \"rand_jitter\",\n \"rand_os\",\n \"rand_pcg\",\n \"rand_xorshift\",\n \"winapi\",\n]\n\n[[package]]\nname = \"rand_chacha\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"556d3a1ca6600bfcbab7c7c91ccb085ac7fbbcd70e008a98742e7847f4f7bcef\"\ndependencies = [\n \"autocfg 0.1.8\",\n \"rand_core 0.3.1\",\n]\n\n[[package]]\nname = \"rand_core\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7a6fdeb83b075e8266dcc8762c22776f6877a63111121f5f8c7411e5be7eed4b\"\ndependencies = [\n \"rand_core 0.4.2\",\n]\n\n[[package]]\nname = \"rand_core\"\nversion = \"0.4.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9c33a3c44ca05fa6f1807d8e6743f3824e8509beca625669633be0acbdf509dc\"\n\n[[package]]\nname = \"rand_hc\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7b40677c7be09ae76218dc623efbf7b18e34bced3f38883af07bb75630a21bc4\"\ndependencies = [\n \"rand_core 0.3.1\",\n]\n\n[[package]]\nname = \"rand_isaac\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ded997c9d5f13925be2a6fd7e66bf1872597f759fd9dd93513dd7e92e5a5ee08\"\ndependencies = [\n \"rand_core 0.3.1\",\n]\n\n[[package]]\nname = \"rand_jitter\"\nversion = \"0.1.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1166d5c91dc97b88d1decc3285bb0a99ed84b05cfd0bc2341bdf2d43fc41e39b\"\ndependencies = [\n \"libc\",\n \"rand_core 0.4.2\",\n \"winapi\",\n]\n\n[[package]]\nname = \"rand_os\"\nversion = \"0.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7b75f676a1e053fc562eafbb47838d67c84801e38fc1ba459e8f180deabd5071\"\ndependencies = [\n \"cloudabi\",\n \"fuchsia-cprng\",\n \"libc\",\n \"rand_core 0.4.2\",\n \"rdrand\",\n \"winapi\",\n]\n\n[[package]]\nname = \"rand_pcg\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"abf9b09b01790cfe0364f52bf32995ea3c39f4d2dd011eac241d2914146d0b44\"\ndependencies = [\n \"autocfg 0.1.8\",\n \"rand_core 0.4.2\",\n]\n\n[[package]]\nname = \"rand_xorshift\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cbf7e9e623549b0e21f6e97cf8ecf247c1a8fd2e8a992ae265314300b2455d5c\"\ndependencies = [\n \"rand_core 0.3.1\",\n]\n\n[[package]]\nname = \"rdrand\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"678054eb77286b51581ba43620cc911abf02758c91f93f479767aed0f90458b2\"\ndependencies = [\n \"rand_core 0.3.1\",\n]\n\n[[package]]\nname = \"resvg\"\nversion = \"0.44.0\"\ndependencies = [\n \"gif\",\n \"image-webp\",\n \"log\",\n \"once_cell\",\n \"pico-args\",\n \"png\",\n \"rgb\",\n \"svgtypes\",\n \"tiny-skia\",\n \"usvg\",\n \"zune-jpeg\",\n]\n\n[[package]]\nname = \"resvg-capi\"\nversion = \"0.44.0\"\ndependencies = [\n \"log\",\n \"resvg\",\n]\n\n[[package]]\nname = \"rgb\"\nversion = \"0.8.50\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"57397d16646700483b67d2dd6511d79318f9d057fdbd21a4066aeac8b41d310a\"\ndependencies = [\n \"bytemuck\",\n]\n\n[[package]]\nname = \"roxmltree\"\nversion = \"0.20.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6c20b6793b5c2fa6553b250154b78d6d0db37e72700ae35fad9387a46f487c97\"\n\n[[package]]\nname = \"rustybuzz\"\nversion = \"0.20.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fd3c7c96f8a08ee34eff8857b11b49b07d71d1c3f4e88f8a88d4c9e9f90b1702\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"bytemuck\",\n \"core_maths\",\n \"log\",\n \"smallvec\",\n \"ttf-parser\",\n \"unicode-bidi-mirroring\",\n \"unicode-ccc\",\n \"unicode-properties\",\n \"unicode-script\",\n]\n\n[[package]]\nname = \"simd-adler32\"\nversion = \"0.3.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d66dc143e6b11c1eddc06d5c423cfc97062865baf299914ab64caa38182078fe\"\n\n[[package]]\nname = \"simplecss\"\nversion = \"0.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a11be7c62927d9427e9f40f3444d5499d868648e2edbc4e2116de69e7ec0e89d\"\ndependencies = [\n \"log\",\n]\n\n[[package]]\nname = \"siphasher\"\nversion = \"0.2.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0b8de496cf83d4ed58b6be86c3a275b8602f6ffe98d3024a869e124147a9a3ac\"\n\n[[package]]\nname = \"siphasher\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"56199f7ddabf13fe5074ce809e7d3f42b42ae711800501b5b16ea82ad029c39d\"\n\n[[package]]\nname = \"slotmap\"\nversion = \"1.0.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dbff4acf519f630b3a3ddcfaea6c06b42174d9a44bc70c620e9ed1649d58b82a\"\ndependencies = [\n \"version_check\",\n]\n\n[[package]]\nname = \"smallvec\"\nversion = \"1.13.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3c5e1a9a646d36c3599cd173a41282daf47c44583ad367b8e6837255952e5c67\"\n\n[[package]]\nname = \"strict-num\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6637bab7722d379c8b41ba849228d680cc12d0a45ba1fa2b48f2a30577a06731\"\ndependencies = [\n \"float-cmp\",\n]\n\n[[package]]\nname = \"svgtypes\"\nversion = \"0.15.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"794de53cc48eaabeed0ab6a3404a65f40b3e38c067e4435883a65d2aa4ca000e\"\ndependencies = [\n \"kurbo\",\n \"siphasher 1.0.1\",\n]\n\n[[package]]\nname = \"tiny-skia\"\nversion = \"0.11.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"83d13394d44dae3207b52a326c0c85a8bf87f1541f23b0d143811088497b09ab\"\ndependencies = [\n \"arrayref\",\n \"arrayvec\",\n \"bytemuck\",\n \"cfg-if\",\n \"log\",\n \"png\",\n \"tiny-skia-path\",\n]\n\n[[package]]\nname = \"tiny-skia-path\"\nversion = \"0.11.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9c9e7fc0c2e86a30b117d0462aa261b72b7a99b7ebd7deb3a14ceda95c5bdc93\"\ndependencies = [\n \"arrayref\",\n \"bytemuck\",\n \"strict-num\",\n]\n\n[[package]]\nname = \"tinyvec\"\nversion = \"1.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"445e881f4f6d382d5f27c034e25eb92edd7c784ceab92a0937db7f2e9471b938\"\ndependencies = [\n \"tinyvec_macros\",\n]\n\n[[package]]\nname = \"tinyvec_macros\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1f3ccbac311fea05f86f61904b462b55fb3df8837a366dfc601a0161d0532f20\"\n\n[[package]]\nname = \"ttf-parser\"\nversion = \"0.25.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5902c5d130972a0000f60860bfbf46f7ca3db5391eddfedd1b8728bd9dc96c0e\"\ndependencies = [\n \"core_maths\",\n]\n\n[[package]]\nname = \"unicode-bidi\"\nversion = \"0.3.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"08f95100a766bf4f8f28f90d77e0a5461bbdb219042e7679bebe79004fed8d75\"\n\n[[package]]\nname = \"unicode-bidi-mirroring\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5dfa6e8c60bb66d49db113e0125ee8711b7647b5579dc7f5f19c42357ed039fe\"\n\n[[package]]\nname = \"unicode-ccc\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ce61d488bcdc9bc8b5d1772c404828b17fc481c0a582b5581e95fb233aef503e\"\n\n[[package]]\nname = \"unicode-properties\"\nversion = \"0.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e70f2a8b45122e719eb623c01822704c4e0907e7e426a05927e1a1cfff5b75d0\"\n\n[[package]]\nname = \"unicode-script\"\nversion = \"0.5.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9fb421b350c9aff471779e262955939f565ec18b86c15364e6bdf0d662ca7c1f\"\n\n[[package]]\nname = \"unicode-vo\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b1d386ff53b415b7fe27b50bb44679e2cc4660272694b7b6f3326d8480823a94\"\n\n[[package]]\nname = \"usvg\"\nversion = \"0.44.0\"\ndependencies = [\n \"base64\",\n \"data-url\",\n \"flate2\",\n \"fontdb\",\n \"imagesize\",\n \"kurbo\",\n \"log\",\n \"once_cell\",\n \"pico-args\",\n \"roxmltree\",\n \"rustybuzz\",\n \"simplecss\",\n \"siphasher 1.0.1\",\n \"strict-num\",\n \"svgtypes\",\n \"tiny-skia-path\",\n \"unicode-bidi\",\n \"unicode-script\",\n \"unicode-vo\",\n \"xmlwriter\",\n]\n\n[[package]]\nname = \"version_check\"\nversion = \"0.9.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0b928f33d975fc6ad9f86c8f283853ad26bdd5b10b7f1542aa2fa15e2289105a\"\n\n[[package]]\nname = \"weezl\"\nversion = \"0.1.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"53a85b86a771b1c87058196170769dd264f66c0782acf1ae6cc51bfd64b39082\"\n\n[[package]]\nname = \"winapi\"\nversion = \"0.3.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5c839a674fcd7a98952e593242ea400abe93992746761e38641405d28b00f419\"\ndependencies = [\n \"winapi-i686-pc-windows-gnu\",\n \"winapi-x86_64-pc-windows-gnu\",\n]\n\n[[package]]\nname = \"winapi-i686-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ac3b87c63620426dd9b991e5ce0329eff545bccbbb34f3be09ff6fb6ab51b7b6\"\n\n[[package]]\nname = \"winapi-x86_64-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"712e227841d057c1ee1cd2fb22fa7e5a5461ae8e48fa2ca79ec42cfc1931183f\"\n\n[[package]]\nname = \"xmlwriter\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ec7a2a501ed189703dba8b08142f057e887dfc4b2cc4db2d343ac6376ba3e0b9\"\n\n[[package]]\nname = \"zune-core\"\nversion = \"0.4.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3f423a2c17029964870cfaabb1f13dfab7d092a62a29a89264f4d36990ca414a\"\n\n[[package]]\nname = \"zune-jpeg\"\nversion = \"0.4.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"16099418600b4d8f028622f73ff6e3deaabdff330fb9a2a131dea781ee8b0768\"\ndependencies = [\n \"zune-core\",\n]\n"
        },
        {
          "name": "Cargo.toml",
          "type": "blob",
          "size": 0.2421875,
          "content": "[workspace]\nmembers = [\n    \"crates/c-api\",\n    \"crates/resvg\",\n    \"crates/usvg\",\n    \"crates/usvg/codegen\",\n    #\"tools/explorer-thumbnailer\",\n]\ndefault-members = [\"crates/resvg\"]\nresolver = \"2\"\n\n[workspace.package]\nlicense = \"Apache-2.0 OR MIT\"\n"
        },
        {
          "name": "LICENSE-APACHE",
          "type": "blob",
          "size": 9.9345703125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n"
        },
        {
          "name": "LICENSE-MIT",
          "type": "blob",
          "size": 1.0322265625,
          "content": "Copyright 2017 the Resvg Authors\n\nPermission is hereby granted, free of charge, to any\nperson obtaining a copy of this software and associated\ndocumentation files (the \"Software\"), to deal in the\nSoftware without restriction, including without\nlimitation the rights to use, copy, modify, merge,\npublish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software\nis furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice\nshall be included in all copies or substantial portions\nof the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF\nANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED\nTO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\nPARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT\nSHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR\nIN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\nDEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 7.205078125,
          "content": "## resvg\n![Build Status](https://github.com/linebender/resvg/workflows/Build/badge.svg)\n[![Crates.io](https://img.shields.io/crates/v/resvg.svg)](https://crates.io/crates/resvg)\n[![Documentation](https://docs.rs/resvg/badge.svg)](https://docs.rs/resvg)\n[![Rust 1.67.1+](https://img.shields.io/badge/rust-1.67.1+-orange.svg)](https://www.rust-lang.org)\n\n*resvg* is an [SVG](https://en.wikipedia.org/wiki/Scalable_Vector_Graphics) rendering library.\n\nIt can be used as a Rust library, as a C library, and as a CLI application to render static SVG files.\n\nThe core idea is to make a fast, small, portable SVG library with the goal to support the whole SVG spec.\n\n## Features\n\n### Designed for edge-cases\n\nSVG is a very complicated format with a large specification (SVG 1.1 is almost 900 pages).\nYou basically need a web browser to handle all of it. But the truth is that even browsers\nfail at this (see [SVG support](https://github.com/linebender/resvg#svg-support)).\nYes, unlike `resvg`, browsers do support dynamic SVG features like animations and scripting.\nBut using a browser to render SVG _correctly_ is sadly not an option.\n\nTo prove its correctness, `resvg` has a vast test suite that includes around 1600 tests.\nAnd those are only SVG-to-PNG regression tests. This doesn't include tests in `resvg` dependencies.\nAnd the best thing is that `resvg` test suite is available to everyone. It's not tied to `resvg`\nin any way. Which should help people who plan to develop their own SVG libraries.\n\n### Safety\n\nIt's hard not to mention safety when we talk about Rust and processing of a random input.\nAnd we're talking not only about SVG/XML, but also about CSS, TTF, PNG, JPEG, GIF, and GZIP.\n\nWhile `resvg` is not the only SVG library written in Rust, it's the only one that\nis written completely in Rust. There is no non-Rust code in the final binary.\n\nMoreover, there is almost no `unsafe` code either. Still, some dependencies have some `unsafe` code\nand font memory-mapping is inherently `unsafe`, but it's best you can get in terms of memory safety.\n\nHowever, this doesn't stop at memory safety. `resvg` has extensive checks to prevent endless loops (freezes)\nand stack overflows (via recursion).\n\n### Zero bloat\n\nRight now, the `resvg` CLI application is less than 3MB in size and doesn't require any external dependencies.\nThe binary contains nothing that isn't needed for rendering SVG files.\n\n### Portable\n\n`resvg` is guaranteed to work everywhere where you can compile the Rust itself,\nincluding WASM. There are some rough edges with obscure CPU architectures and\nmobile OSs (mainly system fonts loading), but it should be pretty painless otherwise.\n\n### SVG preprocessing\n\nAnother major difference from other SVG rendering libraries is that in `resvg`\nSVG parsing and rendering are two completely separate steps.\nThose steps are also split into two separate libraries: `resvg` and [usvg].\nMeaning you can easily write your own renderer on top of `usvg` using any 2D library of your liking.\n\n### Performance\n\nComparing performance between different SVG rendering libraries is like comparing apples and oranges.\nEveryone has a very different set of supported features, languages, build flags, etc...\nAnyhow, as `resvg` is written in Rust and uses [tiny-skia] for rendering - it's pretty fast.\nThere should also still be quite a lot of room for improvement.\n\n### Reproducibility\n\nSince `resvg` doesn't rely on any system libraries it allows us to have reproducible results\non all supported platforms. Meaning if you render an SVG file on x86 Windows and then render it\non ARM macOS - the produced image will be identical. Each pixel would have the same value.\n\n## Limitations\n\n- No animations<br>\n  There are no plans on implementing them either.\n- No native text rendering<br>\n  `resvg` doesn't rely on any system libraries, which implies that we cannot use native text rendering.\n  Nevertheless, native text rendering is optimized for small horizontal text, which is not\n  that common in SVG.\n- Unicode-only<br>\n  It's the 21st century. Text files that aren't UTF-8 encoded are no longer relevant.\n\n## SVG support\n\n`resvg` aims to only support the [static](http://www.w3.org/TR/SVG11/feature#SVG-static)\nSVG subset; i.e. no `a`, `script`, `view` or `cursor` elements, no events and no animations.\n\n[SVG 2](https://www.w3.org/TR/SVG2/) support is being worked on.\nYou can search for relevant issues with the\n[svg2 tag](https://github.com/linebender/resvg/issues?q=is%3Aissue+is%3Aopen+label%3Asvg2)\nor our [SVG 2 changelog](https://github.com/linebender/resvg/blob/main/docs/svg2-changelog.md).\n\n[SVG Tiny 1.2](https://www.w3.org/TR/SVGTiny12/) is not supported and support is also not planned.\n\nResults of the [resvg test suite](https://github.com/linebender/resvg-test-suite):\n\n![](./.github/chart.svg)\n\nSVG 2 only results:\n\n![](./.github/chart-svg2.svg)\n\nYou can find a complete table of supported features\n[here](https://linebender.org/resvg-test-suite/svg-support-table.html).\nIt also includes some alternative libraries.\n\nWe're not testing against all SVG libraries since many of them are pretty bad.\nSome libraries are not on the list because they don't pass the 25% mark.\nSuch libraries are: wxSvg, LunaSVG and nanosvg.\n\n## resvg project\n\nThere is a subtle difference between resvg as a _library_ and resvg as a _project_.\nWhile most users will interact only with the resvg library, it's just a tip of an iceberg.\nThere are a lot of libraries that I had to write to make resvg possible.\nHere are some of them:\n\n- resvg - the actual SVG renderer\n- [usvg] - an SVG preprocessor/simplifier\n- [tiny-skia] - a [Skia](https://github.com/google/skia) subset ported to Rust\n- [rustybuzz] - a [harfbuzz](https://github.com/harfbuzz/harfbuzz) subset ported to Rust\n- [ttf-parser] - a TrueType/OpenType font parser\n- [fontdb] - a simple, in-memory font database with CSS-like queries\n- [roxmltree] - an XML parsing library\n- [simplecss] - a pretty decent CSS 2 parser and selector\n- [pico-args] - an absolutely minimal, but surprisingly popular command-line arguments parser\n\nSo while the resvg _library_ is deceptively small (around 2500 LOC), the resvg _project_\nis nearing 75'000 LOC. Which is not that much considering how much resvg does.\nIt's definitely the smallest option out there.\n\n## License\n\nLicensed under either of\n\n- Apache License, Version 2.0 ([LICENSE-APACHE](LICENSE-APACHE) or <http://www.apache.org/licenses/LICENSE-2.0>)\n- MIT license ([LICENSE-MIT](LICENSE-MIT) or <http://opensource.org/licenses/MIT>)\n\nat your option.\n\n## Contribution\n\nContributions are welcome by pull request.\nThe [Rust code of conduct] applies.\n\nUnless you explicitly state otherwise, any contribution intentionally submitted for inclusion in the work by you, as defined in the Apache-2.0 license, shall be licensed as above, without any additional terms or conditions.\n\n[usvg]: https://github.com/linebender/resvg/tree/main/crates/usvg\n[rustybuzz]: https://github.com/harfbuzz/rustybuzz\n[tiny-skia]: https://github.com/linebender/tiny-skia\n[ttf-parser]: https://github.com/harfbuzz/ttf-parser\n[roxmltree]: https://github.com/RazrFalcon/roxmltree\n[simplecss]: https://github.com/linebender/simplecss\n[fontdb]: https://github.com/RazrFalcon/fontdb\n[pico-args]: https://github.com/RazrFalcon/pico-args\n[Rust Code of Conduct]: https://www.rust-lang.org/policies/code-of-conduct\n"
        },
        {
          "name": "crates",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "version-bump.md",
          "type": "blob",
          "size": 0.26953125,
          "content": "- .github/chart.svg\n- .github/chart-svg2.svg\n- CHANGELOG.md\n- crates/usvg/Cargo.toml\n- crates/resvg/Cargo.toml\n- crates/c-api/Cargo.toml\n- crates/c-api/resvg.h\n- crates/c-api/ResvgQt.h\n- tools/explorer-thumbnailer/install/installer.iss\n- tools/explorer-thumbnailer/Cargo.toml\n"
        }
      ]
    }
  ]
}