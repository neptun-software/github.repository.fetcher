{
  "metadata": {
    "timestamp": 1736709261627,
    "page": 596,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjYwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "dtolnay/case-studies",
      "stars": 1719,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.017578125,
          "content": "Cargo.lock\ntarget\n"
        },
        {
          "name": "Cargo.toml",
          "type": "blob",
          "size": 0.28515625,
          "content": "[workspace]\nmembers = [\n    \"bitfield-assertion/demo\",\n    \"bitfield-assertion/demo/bitfield\",\n    \"bitfield-assertion/demo/impl\",\n    \"callable-types/demo\",\n    \"function-epilogue/demo\",\n    \"integer-match/demo\",\n    \"readonly-fields/demo\",\n    \"unit-type-parameters/demo\",\n]\nresolver = \"2\"\n"
        },
        {
          "name": "LICENSE-APACHE",
          "type": "blob",
          "size": 9.4951171875,
          "content": "                              Apache License\n                        Version 2.0, January 2004\n                     http://www.apache.org/licenses/\n\nTERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n1. Definitions.\n\n   \"License\" shall mean the terms and conditions for use, reproduction,\n   and distribution as defined by Sections 1 through 9 of this document.\n\n   \"Licensor\" shall mean the copyright owner or entity authorized by\n   the copyright owner that is granting the License.\n\n   \"Legal Entity\" shall mean the union of the acting entity and all\n   other entities that control, are controlled by, or are under common\n   control with that entity. For the purposes of this definition,\n   \"control\" means (i) the power, direct or indirect, to cause the\n   direction or management of such entity, whether by contract or\n   otherwise, or (ii) ownership of fifty percent (50%) or more of the\n   outstanding shares, or (iii) beneficial ownership of such entity.\n\n   \"You\" (or \"Your\") shall mean an individual or Legal Entity\n   exercising permissions granted by this License.\n\n   \"Source\" form shall mean the preferred form for making modifications,\n   including but not limited to software source code, documentation\n   source, and configuration files.\n\n   \"Object\" form shall mean any form resulting from mechanical\n   transformation or translation of a Source form, including but\n   not limited to compiled object code, generated documentation,\n   and conversions to other media types.\n\n   \"Work\" shall mean the work of authorship, whether in Source or\n   Object form, made available under the License, as indicated by a\n   copyright notice that is included in or attached to the work\n   (an example is provided in the Appendix below).\n\n   \"Derivative Works\" shall mean any work, whether in Source or Object\n   form, that is based on (or derived from) the Work and for which the\n   editorial revisions, annotations, elaborations, or other modifications\n   represent, as a whole, an original work of authorship. For the purposes\n   of this License, Derivative Works shall not include works that remain\n   separable from, or merely link (or bind by name) to the interfaces of,\n   the Work and Derivative Works thereof.\n\n   \"Contribution\" shall mean any work of authorship, including\n   the original version of the Work and any modifications or additions\n   to that Work or Derivative Works thereof, that is intentionally\n   submitted to Licensor for inclusion in the Work by the copyright owner\n   or by an individual or Legal Entity authorized to submit on behalf of\n   the copyright owner. For the purposes of this definition, \"submitted\"\n   means any form of electronic, verbal, or written communication sent\n   to the Licensor or its representatives, including but not limited to\n   communication on electronic mailing lists, source code control systems,\n   and issue tracking systems that are managed by, or on behalf of, the\n   Licensor for the purpose of discussing and improving the Work, but\n   excluding communication that is conspicuously marked or otherwise\n   designated in writing by the copyright owner as \"Not a Contribution.\"\n\n   \"Contributor\" shall mean Licensor and any individual or Legal Entity\n   on behalf of whom a Contribution has been received by Licensor and\n   subsequently incorporated within the Work.\n\n2. Grant of Copyright License. Subject to the terms and conditions of\n   this License, each Contributor hereby grants to You a perpetual,\n   worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n   copyright license to reproduce, prepare Derivative Works of,\n   publicly display, publicly perform, sublicense, and distribute the\n   Work and such Derivative Works in Source or Object form.\n\n3. Grant of Patent License. Subject to the terms and conditions of\n   this License, each Contributor hereby grants to You a perpetual,\n   worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n   (except as stated in this section) patent license to make, have made,\n   use, offer to sell, sell, import, and otherwise transfer the Work,\n   where such license applies only to those patent claims licensable\n   by such Contributor that are necessarily infringed by their\n   Contribution(s) alone or by combination of their Contribution(s)\n   with the Work to which such Contribution(s) was submitted. If You\n   institute patent litigation against any entity (including a\n   cross-claim or counterclaim in a lawsuit) alleging that the Work\n   or a Contribution incorporated within the Work constitutes direct\n   or contributory patent infringement, then any patent licenses\n   granted to You under this License for that Work shall terminate\n   as of the date such litigation is filed.\n\n4. Redistribution. You may reproduce and distribute copies of the\n   Work or Derivative Works thereof in any medium, with or without\n   modifications, and in Source or Object form, provided that You\n   meet the following conditions:\n\n   (a) You must give any other recipients of the Work or\n       Derivative Works a copy of this License; and\n\n   (b) You must cause any modified files to carry prominent notices\n       stating that You changed the files; and\n\n   (c) You must retain, in the Source form of any Derivative Works\n       that You distribute, all copyright, patent, trademark, and\n       attribution notices from the Source form of the Work,\n       excluding those notices that do not pertain to any part of\n       the Derivative Works; and\n\n   (d) If the Work includes a \"NOTICE\" text file as part of its\n       distribution, then any Derivative Works that You distribute must\n       include a readable copy of the attribution notices contained\n       within such NOTICE file, excluding those notices that do not\n       pertain to any part of the Derivative Works, in at least one\n       of the following places: within a NOTICE text file distributed\n       as part of the Derivative Works; within the Source form or\n       documentation, if provided along with the Derivative Works; or,\n       within a display generated by the Derivative Works, if and\n       wherever such third-party notices normally appear. The contents\n       of the NOTICE file are for informational purposes only and\n       do not modify the License. You may add Your own attribution\n       notices within Derivative Works that You distribute, alongside\n       or as an addendum to the NOTICE text from the Work, provided\n       that such additional attribution notices cannot be construed\n       as modifying the License.\n\n   You may add Your own copyright statement to Your modifications and\n   may provide additional or different license terms and conditions\n   for use, reproduction, or distribution of Your modifications, or\n   for any such Derivative Works as a whole, provided Your use,\n   reproduction, and distribution of the Work otherwise complies with\n   the conditions stated in this License.\n\n5. Submission of Contributions. Unless You explicitly state otherwise,\n   any Contribution intentionally submitted for inclusion in the Work\n   by You to the Licensor shall be under the terms and conditions of\n   this License, without any additional terms or conditions.\n   Notwithstanding the above, nothing herein shall supersede or modify\n   the terms of any separate license agreement you may have executed\n   with Licensor regarding such Contributions.\n\n6. Trademarks. This License does not grant permission to use the trade\n   names, trademarks, service marks, or product names of the Licensor,\n   except as required for reasonable and customary use in describing the\n   origin of the Work and reproducing the content of the NOTICE file.\n\n7. Disclaimer of Warranty. Unless required by applicable law or\n   agreed to in writing, Licensor provides the Work (and each\n   Contributor provides its Contributions) on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n   implied, including, without limitation, any warranties or conditions\n   of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n   PARTICULAR PURPOSE. You are solely responsible for determining the\n   appropriateness of using or redistributing the Work and assume any\n   risks associated with Your exercise of permissions under this License.\n\n8. Limitation of Liability. In no event and under no legal theory,\n   whether in tort (including negligence), contract, or otherwise,\n   unless required by applicable law (such as deliberate and grossly\n   negligent acts) or agreed to in writing, shall any Contributor be\n   liable to You for damages, including any direct, indirect, special,\n   incidental, or consequential damages of any character arising as a\n   result of this License or out of the use or inability to use the\n   Work (including but not limited to damages for loss of goodwill,\n   work stoppage, computer failure or malfunction, or any and all\n   other commercial damages or losses), even if such Contributor\n   has been advised of the possibility of such damages.\n\n9. Accepting Warranty or Additional Liability. While redistributing\n   the Work or Derivative Works thereof, You may choose to offer,\n   and charge a fee for, acceptance of support, warranty, indemnity,\n   or other liability obligations and/or rights consistent with this\n   License. However, in accepting such obligations, You may act only\n   on Your own behalf and on Your sole responsibility, not on behalf\n   of any other Contributor, and only if You agree to indemnify,\n   defend, and hold each Contributor harmless for any liability\n   incurred by, or claims asserted against, such Contributor by reason\n   of your accepting any such warranty or additional liability.\n\nEND OF TERMS AND CONDITIONS\n"
        },
        {
          "name": "LICENSE-MIT",
          "type": "blob",
          "size": 0.9990234375,
          "content": "Permission is hereby granted, free of charge, to any\nperson obtaining a copy of this software and associated\ndocumentation files (the \"Software\"), to deal in the\nSoftware without restriction, including without\nlimitation the rights to use, copy, modify, merge,\npublish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software\nis furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice\nshall be included in all copies or substantial portions\nof the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF\nANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED\nTO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\nPARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT\nSHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR\nIN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\nDEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.0224609375,
          "content": "## Case&nbsp;studies\n\nThis repository showcases some examples of tricky Rust code that I have\nencountered during my years working with a variety of advanced macro libraries\nin Rust (my own and others').\n\n<br>\n\n<a name=\"the-point\"></a>\n# [:postal\\_horn:](#the-point)&ensp;The point\n\nThis project is dedicated to the one profound insight about Rust macro\ndevelopment: the difference between someone who is competent with macros vs an\nexpert at macros mostly has nothing to do with how good they are \"at macros\".\n\n90% of what enables people to push the limits of possibility in pursuit of a\npowerful and user-friendly macro library API is in their mastery of everything\nelse about Rust outside of macros, and their creativity to put together ordinary\nlanguage features in interesting ways that may not occur in handwritten code.\n\nYou may occasionally come across Rust macros that you feel are really advanced\nor magical. If you ever feel this way, I encourage you to take a closer look and\nyou'll discover that as far as the macro implementation itself is concerned,\nnone of those libraries are doing anything remotely interesting. If it is a\nprocedural macro, they always just parse some input in a boring way, crawl some\nsyntax trees in a boring way to find out about the input, and paste together\nsome output code in a boring way exactly like what you would learn in a few\nhours by working through any part of my [procedural macro workshop][workshop].\nIf it is a macro\\_rules macro, everything is conceptually just as boring but\nwhen stretched to its limits it becomes a write-only syntax that poses a\nchallenge for even the author to follow and understand later, let alone someone\nelse not already fluent in the basics of macro\\_rules.\n\nTo the extent that there are any tricks to macro development, all of them\nrevolve around *what* code the macros emit, not *how* the macros emit the code.\nThis realization can be surprising to people who entered into macro development\nwith a vague notion of procedural macros as a \"compiler plugin\" which they\nimagine must imply all sorts of complicated APIs for *how* to integrate with the\nrest of the compiler. That's not how it works. The only thing macros do is emit\ncode that could have been written by hand. If you couldn't have come up with\nsome piece of tricky code from one of those magical macros, learning more \"about\nmacros\" won't change that; but learning more about every other part of Rust\nwill. Inversely, once you come up with what code you want to generate, writing\nthe macro to generate it is generally the easy part.\n\n[workshop]: https://github.com/dtolnay/proc-macro-workshop\n\n<br>\n\n<a name=\"focus\"></a>\n# [:boot:](#focus)&ensp;Focus\n\nYes, these case studies are drawn from use cases that arise from work on macros,\nbut the macros are never the interesting part. The ingenuity and sophistication\nalways lie in what Rust code ultimately gets emitted by the macro, and I think\nyou will find that those are fully possible to appreciate even if you know\nnothing about macros.\n\nTo that end, I make an effort to minimize the role of macros in these case\nstudies. For each one I give only enough context about the relevant macro to\nexplain a set of constraints that the generated code will need to comply with.\nThe focus is on the generated code, which somehow solves the constraints using a\nclever combination of Rust language features unrelated to macros. Lastly and\nleast importantly, I tie it back to the macro to point out that making a macro\nproduce the generated code we came up with would be the easy part.\n\nRead and enjoy; I hope you find these an enlightening window into this corner of\nRust that has so far not been put into words.\n\n<br>\n\n<a name=\"case-studies\"></a>\n# [:jack\\_o\\_lantern:](#case-studies)&ensp;Case studies\n\n<table><tr><td><ul><li></li></ul></td><td><b>\n<a href=\"https://github.com/dtolnay/case-studies/blob/master/function-epilogue/README.md\">\nFunction epilogue</a></b><br>\n<sub><i>Topics: borrow checker, no_std, closures, lifetime elision</i></sub><br>\n</td></tr></table>\n\n<table><tr><td><ul><li></li></ul></td><td><b>\n<a href=\"https://github.com/dtolnay/case-studies/blob/master/bitfield-assertion/README.md\">\nMultiple of 8 const assertion</a></b><br>\n<sub><i>Topics: diagnostics, name resolution, const evaluation, traits</i></sub><br>\n</td></tr></table>\n\n<table><tr><td><ul><li></li></ul></td><td><b>\n<a href=\"https://github.com/dtolnay/case-studies/blob/master/unit-type-parameters/README.md\">\nUnit struct with type parameters</a></b><br>\n<sub><i>Topics: namespaces, glob imports, layout optimization, autotraits, documentation</i></sub><br>\n</td></tr></table>\n\n<table><tr><td><ul><li></li></ul></td><td><b>\n<a href=\"https://github.com/dtolnay/case-studies/blob/master/readonly-fields/README.md\">\nRead-only fields of mutable struct</a></b><br>\n<sub><i>Topics: deref coercion, borrow checker, repr, unsafe code, documentation</i></sub><br>\n</td></tr></table>\n\n<table><tr><td><ul><li></li></ul></td><td><b>\n<a href=\"https://github.com/dtolnay/case-studies/blob/master/integer-match/README.md\">\nConsecutive integer match patterns</a></b><br>\n<sub><i>Topics: macro_rules, const</i></sub><br>\n</td></tr></table>\n\n<table><tr><td><ul><li></li></ul></td><td><b>\n<a href=\"https://github.com/dtolnay/case-studies/blob/master/callable-types/README.md\">\nUser-defined callable types</a></b><br>\n<sub><i>Topics: deref coercion, closures, trait objects, repr, unsafe code</i></sub><br>\n</td></tr></table>\n\n<table><tr><td><ul><li></li></ul></td><td><b>\n<a href=\"https://github.com/dtolnay/case-studies/blob/master/autoref-specialization/README.md\">\nAutoref-based stable specialization</a></b><br>\n<sub><i>Topics: traits, method resolution</i></sub><br>\n</td></tr></table>\n\n<br>\n\n#### License\n\n<sup>\nLicensed under either of <a href=\"LICENSE-APACHE\">Apache License, Version\n2.0</a> or <a href=\"LICENSE-MIT\">MIT license</a> at your option.\n</sup>\n\n<br>\n\n<sub>\nUnless you explicitly state otherwise, any contribution intentionally submitted\nfor inclusion in this project by you, as defined in the Apache-2.0 license,\nshall be dual licensed as above, without any additional terms or conditions.\n</sub>\n"
        },
        {
          "name": "autoref-specialization",
          "type": "tree",
          "content": null
        },
        {
          "name": "bitfield-assertion",
          "type": "tree",
          "content": null
        },
        {
          "name": "callable-types",
          "type": "tree",
          "content": null
        },
        {
          "name": "function-epilogue",
          "type": "tree",
          "content": null
        },
        {
          "name": "integer-match",
          "type": "tree",
          "content": null
        },
        {
          "name": "readonly-fields",
          "type": "tree",
          "content": null
        },
        {
          "name": "unit-type-parameters",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}