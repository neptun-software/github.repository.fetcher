{
  "metadata": {
    "timestamp": 1736709301536,
    "page": 679,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjY4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "calebwin/emu",
      "stars": 1597,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.029296875,
          "content": "*.html linguist-language=Rust\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.04296875,
          "content": "/target\n**/*.rs.bk\nCargo.lock\n*.d\n*.ll\n*.xml"
        },
        {
          "name": ".idea",
          "type": "tree",
          "content": null
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 6.5703125,
          "content": "# contributing\n\nThe roadmap for Emu is simple - support a larger subset of Rust. In what order, though do we want to expand the subset, though? Consider the following program-\n\n```rust\n#[macro_use]\nextern crate em;\nuse em::*;\n\n#[gpu_use]\nfn main() {\n    let mut x = vec![0.0; 1000];\n    gpu_do!(load(x)); // move data to the GPU\n    \n    gpu_do!(launch()); // off-load to run on the GPU\n    for i in 0..1000 {\n        x[i] = x[i] * 10.0;\n    }\n\n    gpu_do!(read(x)); // move data back from the GPU\n    println!(\"{:?}\", x);\n}\n```\n\nThe order we want to expoand the subset is from outside to inside. From outside to inside, we will-\n\n1. work on `#[gpu_use]`\n2. work on `gpu_do!()`\n3. work on `gpu_do!(launch())` and support more kinds of for loops\n4. work on supporting more kinds of stuff inside the for loops\n5. etc.\n\nSome of the things that need to be worked on include but are not limited to-\n\n1. work on `#[gpu_use]`\n   - [ ] support methods\n   - [ ] support `?` operator\n2. work on `gpu_do!()`\n   - [ ] support `gpu_do!(load_async(data))`, `gpu_do!(read_async(data))`, `gpu_do!(launch_async())`, `gpu_do!(wait())` for asynchronous usage of GPUs\n   - [ ] support `gpu_do!(open(\"nvidia ti\"))`, `#[gpu_use(\"nvidia ti\", \"nvidia gt\")]` for usage of multiple GPUs\n   - [ ] support `gpu_do!(load_mut(data))` to optimize for data that isn't actually mutable\n3. work on `gpu_do!(launch())` and support more kinds of for loops\n   - [ ] support loops that declare block algorithms/blocked iteration/iteration over chunks\n   - [ ] support loops that `for x in data`\n   - [ ] support loops that `for x in 0..(i * j)`\n4. work on supporting more kinds of stuff inside the for loops\n   - [ ] support variables\n   - [ ] support all binary/unary operators\n   - [ ] support if/else-if/else\n   - [ ] support loops\n   - [ ] support more primitive types such as `char`, `i32`, `u128`\n5. etc.\n   - [ ] support structures with `#[gpu_use_struct]`\n   - [ ] support functions (that can be called from inside of for loop) `#[gpu_use_fn]`\n\nTo be even more specific, here is what we want to do-\n\n(Before you look through this list, please carefully read the [docs.rs/em](https://docs.rs/em/0.3.0/em/) so that you understand the terms `#[gpu_use]`, `gpu_do!()`, \"helper functions\". You might also want to see this [table of contents](https://github.com/calebwin/emu/blob/master/emu_macro/src/lib.rs#L18) of code to understand how Emu code is structured.)\n\n# 1. support methods\n\nCurrently, `#[gpu_use]` modifies 5 things.\n\n- the function signature to accept a `Gpu` (docs [here](https://docs.rs/em/0.3.0/em/struct.Gpu.html)) as input (if this is a helper function) (code [here](https://github.com/calebwin/emu/blob/master/emu_macro/src/passing.rs#L74))\n- the function signature to return the modified inputted `Gpu` as output (modifying `-> T` to `-> (T, Gpu)`) (if this is a helper function) (code also [here](https://github.com/calebwin/emu/blob/master/emu_macro/src/passing.rs#L74))\n- the body of the function to either use and mutate the `Gpu` as described by all `gpu_do!()`s (if this is a helper function) or otherwise instantiate a new `Gpu` (code [here](https://github.com/calebwin/emu/blob/master/emu_macro/src/accelerating.rs#L208) and [here](https://github.com/calebwin/emu/blob/master/emu_macro/src/passing.rs#L149))\n- the body of the function to use and mutate the `Gpu` by passing it into and out of all helper functions that are called in the body (code [here](https://github.com/calebwin/emu/blob/master/emu_macro/src/passing.rs#L149))\n- the body of the function to return the mutated `Gpu` (if this is a helper function) (code [here](https://github.com/calebwin/emu/blob/master/emu_macro/src/passing.rs#L149) and [here](https://github.com/calebwin/emu/blob/master/emu_macro/src/passing.rs#L149))\n\nAll of these modifications are great but they they don't support methods. Ideally we should support something like this.\n\n```rust\nstruct MyVec {\n    data: Vec<f32>\n    // ... other fields\n}\n\nimpl MyVec {\n    #[gpu_use(add)]\n    fn add(&mut self, other: Vec<f32>) {\n        // ... add the vectors and update \n    }\n    \n    #[gpu_use(other_add)]\n    fn other_add(x: Vec<f32>, y: Vec<f32>) -> Vec<f32> {\n        // ... some stuff\n    }\n}\n\n#[gpu_use(add, other_add)]\nfn main() {\n    // ... some initialization code\n    gpu_do!(load(data));\n    my_vec.add(data);\n    MyVec::other_add(data, vec![0.0; 1000]);\n}\n```\n\nTo make this code possible, there are 2 things we need to change.\n\n- modifying signatures (`Gpu` parameter needs to be added at end not start and passed as argument at end not start)\n- modifying calls (we should support any call/method and when we see something like `MyVec::other_add` we should only look at `other_add`\n\nThese 2 changes will need to be made in the following places.\n\n- modify `lib.rs` and some other places to not only parse for `ItemFn` but also methods\n- modify `passing.rs` to change how signatures are modified\n- modify `passing.rs` to change how calls are modified\n\n# 2. support `?` operator\n\nRemember how I said `#[gpu_use]` modifies things? Here was one thing I said.\n\n- the body of the function to return the mutated `Gpu` (if this is a helper function) (code [here](https://github.com/calebwin/emu/blob/master/emu_macro/src/passing.rs#L149) and [here](https://github.com/calebwin/emu/blob/master/emu_macro/src/passing.rs#L149))\n\nThere are 2 ways we do this.\n\n1. wrap the entire function body by transorming `body` to `(body, gpu)`.\n2. modify returns by transforming `return x` to `return (x, gpu)`.\n\nThis handles 2 ways that stuff can be returned from functions.\n\n1. blocks as expressions with last expression being what gets returned\n2. return statements\n\nBut there are at least 2 more.\n\n3. macros\n4. `?` operator implicitly returning an error in case of error and otherwise unwrapping and evaluating to unwrapped value\n\nWe can ignore macros because we simply can't expand them at compile time on stable Rust from a proc macro. But the `?` is important. To support `?` operator, we need to add the following.\n\n- finding `?` operator and modifying it\n\nThis entails 2 things.\n\n- modify `passing.rs` to include a new function that uses [`Fold`](https://docs.rs/syn/1.0.7/syn/fold/index.html) to modify `?` to return the `Gpu`\n- modify `lib.rs` to call the function from `passing.rs` on code in the function\n\n# 3...\n\nOf course, this isn't a complete list. This list will change. But unlike the list on the README, this list contains actual things that we are almost certain needs to be done. And the order of this list is also something we are almost certain about. If you have more questions about anything, please discuss at [gitter.im/talk-about-emu/thoughts](https://gitter.im/talk-about-emu/thoughts).\n"
        },
        {
          "name": "Cargo.lock",
          "type": "blob",
          "size": 68.173828125,
          "content": "# This file is automatically @generated by Cargo.\n# It is not intended for manual editing.\n[[package]]\nname = \"arithmetic\"\nversion = \"0.1.0\"\ndependencies = [\n \"em 0.3.0\",\n]\n\n[[package]]\nname = \"arrayvec\"\nversion = \"0.5.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\n\n[[package]]\nname = \"ash\"\nversion = \"0.30.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"libloading 0.5.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"atom\"\nversion = \"0.3.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\n\n[[package]]\nname = \"autocfg\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\n\n[[package]]\nname = \"backtrace\"\nversion = \"0.3.46\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"backtrace-sys 0.1.35 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"cfg-if 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"libc 0.2.68 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"rustc-demangle 0.1.16 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"backtrace-sys\"\nversion = \"0.1.35\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"cc 1.0.50 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"libc 0.2.68 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"bitflags\"\nversion = \"1.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\n\n[[package]]\nname = \"block\"\nversion = \"0.1.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\n\n[[package]]\nname = \"bumpalo\"\nversion = \"3.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\n\n[[package]]\nname = \"byteorder\"\nversion = \"1.3.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\n\n[[package]]\nname = \"cc\"\nversion = \"1.0.50\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\n\n[[package]]\nname = \"cfg-if\"\nversion = \"0.1.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\n\n[[package]]\nname = \"cl-sys\"\nversion = \"0.4.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"libc 0.2.68 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"cloudabi\"\nversion = \"0.0.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"bitflags 1.2.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"cmake\"\nversion = \"0.1.42\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"cc 1.0.50 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"cocoa\"\nversion = \"0.20.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"bitflags 1.2.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"block 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"core-foundation 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"core-graphics 0.19.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"foreign-types 0.3.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"libc 0.2.68 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"objc 0.2.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"copyless\"\nversion = \"0.1.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\n\n[[package]]\nname = \"core-foundation\"\nversion = \"0.7.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"core-foundation-sys 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"libc 0.2.68 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"core-foundation-sys\"\nversion = \"0.7.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\n\n[[package]]\nname = \"core-graphics\"\nversion = \"0.19.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"bitflags 1.2.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"core-foundation 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"foreign-types 0.3.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"libc 0.2.68 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"crossbeam\"\nversion = \"0.7.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"cfg-if 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"crossbeam-channel 0.4.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"crossbeam-deque 0.7.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"crossbeam-epoch 0.8.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"crossbeam-queue 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"crossbeam-utils 0.7.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"crossbeam-channel\"\nversion = \"0.4.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"crossbeam-utils 0.7.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"maybe-uninit 2.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"crossbeam-deque\"\nversion = \"0.7.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"crossbeam-epoch 0.8.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"crossbeam-utils 0.7.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"maybe-uninit 2.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"crossbeam-epoch\"\nversion = \"0.8.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"autocfg 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"cfg-if 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"crossbeam-utils 0.7.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"lazy_static 1.4.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"maybe-uninit 2.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"memoffset 0.5.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"scopeguard 1.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"crossbeam-queue\"\nversion = \"0.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"cfg-if 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"crossbeam-utils 0.7.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"crossbeam-utils\"\nversion = \"0.7.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"autocfg 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"cfg-if 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"lazy_static 1.4.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"d3d12\"\nversion = \"0.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"bitflags 1.2.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"libloading 0.5.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"winapi 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"derive_more\"\nversion = \"0.99.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"proc-macro2 1.0.9 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"quote 1.0.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"syn 1.0.17 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"em\"\nversion = \"0.3.0\"\ndependencies = [\n \"emu_macro 0.1.0\",\n \"ocl 0.19.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"emu_core\"\nversion = \"0.1.1\"\ndependencies = [\n \"derive_more 0.99.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"emu_glsl 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"futures 0.3.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"lazy_static 1.4.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"shaderc 0.6.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"timeit 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"wgpu 0.5.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"zerocopy 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"emu_glsl\"\nversion = \"0.1.0\"\ndependencies = [\n \"quote 1.0.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"syn 1.0.17 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"emu_glsl\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"quote 1.0.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"syn 1.0.17 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"emu_macro\"\nversion = \"0.1.0\"\ndependencies = [\n \"em 0.3.0\",\n \"proc-macro2 1.0.9 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"quote 1.0.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"syn 1.0.17 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"emu_tests\"\nversion = \"0.1.0\"\ndependencies = [\n \"em 0.3.0\",\n \"trybuild 1.0.24 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"enum_primitive\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"num-traits 0.1.43 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"failure\"\nversion = \"0.1.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"backtrace 0.3.46 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"failure_derive 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"failure_derive\"\nversion = \"0.1.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"proc-macro2 1.0.9 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"quote 1.0.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"syn 1.0.17 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"synstructure 0.12.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"foreign-types\"\nversion = \"0.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"foreign-types-shared 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"foreign-types-shared\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\n\n[[package]]\nname = \"fuchsia-cprng\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\n\n[[package]]\nname = \"futures\"\nversion = \"0.1.29\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\n\n[[package]]\nname = \"futures\"\nversion = \"0.3.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"futures-channel 0.3.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"futures-core 0.3.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"futures-executor 0.3.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"futures-io 0.3.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"futures-sink 0.3.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"futures-task 0.3.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"futures-util 0.3.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"futures-channel\"\nversion = \"0.3.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"futures-core 0.3.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"futures-sink 0.3.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"futures-core\"\nversion = \"0.3.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\n\n[[package]]\nname = \"futures-executor\"\nversion = \"0.3.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"futures-core 0.3.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"futures-task 0.3.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"futures-util 0.3.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"futures-io\"\nversion = \"0.3.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\n\n[[package]]\nname = \"futures-macro\"\nversion = \"0.3.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"proc-macro-hack 0.5.14 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"proc-macro2 1.0.9 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"quote 1.0.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"syn 1.0.17 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"futures-sink\"\nversion = \"0.3.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\n\n[[package]]\nname = \"futures-task\"\nversion = \"0.3.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\n\n[[package]]\nname = \"futures-util\"\nversion = \"0.3.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"futures-channel 0.3.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"futures-core 0.3.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"futures-io 0.3.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"futures-macro 0.3.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"futures-sink 0.3.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"futures-task 0.3.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"memchr 2.3.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"pin-utils 0.1.0-alpha.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"proc-macro-hack 0.5.14 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"proc-macro-nested 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"slab 0.4.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"fxhash\"\nversion = \"0.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"byteorder 1.3.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"gfx-auxil\"\nversion = \"0.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"fxhash 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"gfx-hal 0.5.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"spirv_cross 0.18.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"gfx-backend-dx11\"\nversion = \"0.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"bitflags 1.2.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"gfx-auxil 0.3.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"gfx-hal 0.5.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"libloading 0.5.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"log 0.4.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"parking_lot 0.10.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"range-alloc 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"raw-window-handle 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"smallvec 1.2.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"spirv_cross 0.18.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"winapi 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"wio 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"gfx-backend-dx12\"\nversion = \"0.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"bitflags 1.2.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"d3d12 0.3.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"gfx-auxil 0.3.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"gfx-hal 0.5.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"log 0.4.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"range-alloc 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"raw-window-handle 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"smallvec 1.2.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"spirv_cross 0.18.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"winapi 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"gfx-backend-empty\"\nversion = \"0.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"gfx-hal 0.5.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"raw-window-handle 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"gfx-backend-metal\"\nversion = \"0.5.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"arrayvec 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"bitflags 1.2.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"block 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"cocoa 0.20.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"copyless 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"core-graphics 0.19.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"foreign-types 0.3.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"gfx-auxil 0.3.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"gfx-hal 0.5.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"lazy_static 1.4.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"log 0.4.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"metal 0.18.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"objc 0.2.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"parking_lot 0.10.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"range-alloc 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"raw-window-handle 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"smallvec 1.2.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"spirv_cross 0.18.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"storage-map 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"gfx-backend-vulkan\"\nversion = \"0.5.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"arrayvec 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"ash 0.30.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"byteorder 1.3.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"core-graphics 0.19.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"gfx-hal 0.5.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"lazy_static 1.4.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"log 0.4.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"objc 0.2.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"raw-window-handle 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"smallvec 1.2.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"winapi 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"x11 2.18.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"gfx-descriptor\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"fxhash 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"gfx-hal 0.5.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"log 0.4.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"gfx-hal\"\nversion = \"0.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"bitflags 1.2.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"raw-window-handle 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"gfx-memory\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"fxhash 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"gfx-hal 0.5.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"hibitset 0.6.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"log 0.4.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"slab 0.4.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"glob\"\nversion = \"0.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\n\n[[package]]\nname = \"hibitset\"\nversion = \"0.6.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"atom 0.3.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"itoa\"\nversion = \"0.4.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\n\n[[package]]\nname = \"js-sys\"\nversion = \"0.3.37\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"wasm-bindgen 0.2.60 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"lazy_static\"\nversion = \"1.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\n\n[[package]]\nname = \"libc\"\nversion = \"0.2.68\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\n\n[[package]]\nname = \"libloading\"\nversion = \"0.5.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"cc 1.0.50 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"winapi 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"lock_api\"\nversion = \"0.3.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"scopeguard 1.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"log\"\nversion = \"0.4.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"cfg-if 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"malloc_buf\"\nversion = \"0.0.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"libc 0.2.68 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"maybe-uninit\"\nversion = \"2.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\n\n[[package]]\nname = \"memchr\"\nversion = \"2.3.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\n\n[[package]]\nname = \"memoffset\"\nversion = \"0.5.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"autocfg 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"metal\"\nversion = \"0.18.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"bitflags 1.2.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"block 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"cocoa 0.20.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"core-graphics 0.19.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"foreign-types 0.3.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"log 0.4.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"objc 0.2.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"nodrop\"\nversion = \"0.1.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\n\n[[package]]\nname = \"num\"\nversion = \"0.1.42\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"num-bigint 0.1.44 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"num-complex 0.1.43 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"num-integer 0.1.42 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"num-iter 0.1.40 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"num-rational 0.1.42 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"num-traits 0.2.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"num-bigint\"\nversion = \"0.1.44\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"num-integer 0.1.42 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"num-traits 0.2.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"rand 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"rustc-serialize 0.3.24 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"num-complex\"\nversion = \"0.1.43\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"num-traits 0.2.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"rustc-serialize 0.3.24 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"num-integer\"\nversion = \"0.1.42\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"autocfg 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"num-traits 0.2.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"num-iter\"\nversion = \"0.1.40\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"autocfg 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"num-integer 0.1.42 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"num-traits 0.2.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"num-rational\"\nversion = \"0.1.42\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"num-bigint 0.1.44 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"num-integer 0.1.42 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"num-traits 0.2.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"rustc-serialize 0.3.24 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"num-traits\"\nversion = \"0.1.43\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"num-traits 0.2.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"num-traits\"\nversion = \"0.2.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"autocfg 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"objc\"\nversion = \"0.2.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"malloc_buf 0.0.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"objc_exception 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"objc_exception\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"cc 1.0.50 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"ocl\"\nversion = \"0.19.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"failure 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"futures 0.1.29 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"nodrop 0.1.14 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"num-traits 0.2.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"ocl-core 0.11.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"qutex 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"ocl-core\"\nversion = \"0.11.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"bitflags 1.2.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"cl-sys 0.4.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"enum_primitive 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"failure 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"num-complex 0.1.43 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"num-traits 0.2.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"ocl-core-vector 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"rustc_version 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"ocl-core-vector\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"num 0.1.42 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"parking_lot\"\nversion = \"0.10.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"lock_api 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"parking_lot_core 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"parking_lot_core\"\nversion = \"0.7.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"cfg-if 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"cloudabi 0.0.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"libc 0.2.68 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"redox_syscall 0.1.56 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"smallvec 1.2.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"winapi 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"peek-poke\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"peek-poke-derive 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"peek-poke-derive\"\nversion = \"0.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"proc-macro2 1.0.9 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"quote 1.0.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"syn 1.0.17 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"synstructure 0.12.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"unicode-xid 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"pin-utils\"\nversion = \"0.1.0-alpha.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\n\n[[package]]\nname = \"pkg-config\"\nversion = \"0.3.17\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\n\n[[package]]\nname = \"proc-macro-hack\"\nversion = \"0.5.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\n\n[[package]]\nname = \"proc-macro-nested\"\nversion = \"0.1.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\n\n[[package]]\nname = \"proc-macro2\"\nversion = \"0.4.30\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"unicode-xid 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"proc-macro2\"\nversion = \"1.0.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"unicode-xid 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"quote\"\nversion = \"0.6.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"proc-macro2 0.4.30 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"quote\"\nversion = \"1.0.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"proc-macro2 1.0.9 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"qutex\"\nversion = \"0.2.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"crossbeam 0.7.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"futures 0.1.29 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"rand\"\nversion = \"0.4.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"fuchsia-cprng 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"libc 0.2.68 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"rand_core 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"rdrand 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"winapi 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"rand_core\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"rand_core 0.4.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"rand_core\"\nversion = \"0.4.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\n\n[[package]]\nname = \"range-alloc\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\n\n[[package]]\nname = \"raw-window-handle\"\nversion = \"0.3.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"libc 0.2.68 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"rdrand\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"rand_core 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"redox_syscall\"\nversion = \"0.1.56\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\n\n[[package]]\nname = \"rustc-demangle\"\nversion = \"0.1.16\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\n\n[[package]]\nname = \"rustc-serialize\"\nversion = \"0.3.24\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\n\n[[package]]\nname = \"rustc_version\"\nversion = \"0.1.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"semver 0.1.20 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"ryu\"\nversion = \"1.0.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\n\n[[package]]\nname = \"scopeguard\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\n\n[[package]]\nname = \"semver\"\nversion = \"0.1.20\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\n\n[[package]]\nname = \"serde\"\nversion = \"1.0.105\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"serde_derive 1.0.105 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"serde_derive\"\nversion = \"1.0.105\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"proc-macro2 1.0.9 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"quote 1.0.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"syn 1.0.17 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"serde_json\"\nversion = \"1.0.49\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"itoa 0.4.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"ryu 1.0.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"serde 1.0.105 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"shaderc\"\nversion = \"0.6.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"libc 0.2.68 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"shaderc-sys 0.6.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"shaderc-sys\"\nversion = \"0.6.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"cmake 0.1.42 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"libc 0.2.68 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"slab\"\nversion = \"0.4.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\n\n[[package]]\nname = \"smallvec\"\nversion = \"1.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\n\n[[package]]\nname = \"spirv_cross\"\nversion = \"0.18.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"cc 1.0.50 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"js-sys 0.3.37 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"wasm-bindgen 0.2.60 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"storage-map\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"lock_api 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"syn\"\nversion = \"0.15.44\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"proc-macro2 0.4.30 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"quote 0.6.13 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"unicode-xid 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"syn\"\nversion = \"1.0.17\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"proc-macro2 1.0.9 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"quote 1.0.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"unicode-xid 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"synstructure\"\nversion = \"0.10.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"proc-macro2 0.4.30 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"quote 0.6.13 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"syn 0.15.44 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"unicode-xid 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"synstructure\"\nversion = \"0.12.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"proc-macro2 1.0.9 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"quote 1.0.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"syn 1.0.17 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"unicode-xid 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"termcolor\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"winapi-util 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"time\"\nversion = \"0.1.42\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"libc 0.2.68 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"redox_syscall 0.1.56 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"winapi 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"timeit\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"time 0.1.42 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"toml\"\nversion = \"0.5.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"serde 1.0.105 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"trybuild\"\nversion = \"1.0.24\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"glob 0.3.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"lazy_static 1.4.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"serde 1.0.105 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"serde_json 1.0.49 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"termcolor 1.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"toml 0.5.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"unicode-xid\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\n\n[[package]]\nname = \"unicode-xid\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\n\n[[package]]\nname = \"vec_map\"\nversion = \"0.8.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\n\n[[package]]\nname = \"wasm-bindgen\"\nversion = \"0.2.60\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"cfg-if 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"wasm-bindgen-macro 0.2.60 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"wasm-bindgen-backend\"\nversion = \"0.2.60\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"bumpalo 3.2.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"lazy_static 1.4.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"log 0.4.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"proc-macro2 1.0.9 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"quote 1.0.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"syn 1.0.17 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"wasm-bindgen-shared 0.2.60 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"wasm-bindgen-macro\"\nversion = \"0.2.60\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"quote 1.0.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"wasm-bindgen-macro-support 0.2.60 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"wasm-bindgen-macro-support\"\nversion = \"0.2.60\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"proc-macro2 1.0.9 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"quote 1.0.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"syn 1.0.17 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"wasm-bindgen-backend 0.2.60 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"wasm-bindgen-shared 0.2.60 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"wasm-bindgen-shared\"\nversion = \"0.2.60\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\n\n[[package]]\nname = \"wgpu\"\nversion = \"0.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"arrayvec 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"parking_lot 0.10.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"raw-window-handle 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"smallvec 1.2.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"wgpu-core 0.5.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"wgpu-native 0.5.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"wgpu-types 0.5.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"wgpu-core\"\nversion = \"0.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"arrayvec 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"bitflags 1.2.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"copyless 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"fxhash 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"gfx-backend-dx11 0.5.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"gfx-backend-dx12 0.5.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"gfx-backend-empty 0.5.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"gfx-backend-metal 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"gfx-backend-vulkan 0.5.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"gfx-descriptor 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"gfx-hal 0.5.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"gfx-memory 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"log 0.4.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"parking_lot 0.10.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"peek-poke 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"smallvec 1.2.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"vec_map 0.8.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"wgpu-types 0.5.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"wgpu-native\"\nversion = \"0.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"arrayvec 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"lazy_static 1.4.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"libc 0.2.68 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"objc 0.2.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"parking_lot 0.10.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"raw-window-handle 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"wgpu-core 0.5.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"wgpu-types 0.5.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"wgpu-types\"\nversion = \"0.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"bitflags 1.2.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"peek-poke 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"winapi\"\nversion = \"0.3.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"winapi-i686-pc-windows-gnu 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"winapi-x86_64-pc-windows-gnu 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"winapi-i686-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\n\n[[package]]\nname = \"winapi-util\"\nversion = \"0.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"winapi 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"winapi-x86_64-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\n\n[[package]]\nname = \"wio\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"winapi 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"x11\"\nversion = \"2.18.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"libc 0.2.68 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"pkg-config 0.3.17 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"zerocopy\"\nversion = \"0.2.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"byteorder 1.3.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"zerocopy-derive 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"zerocopy-derive\"\nversion = \"0.1.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"proc-macro2 0.4.30 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"syn 0.15.44 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"synstructure 0.10.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[metadata]\n\"checksum arrayvec 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"cff77d8686867eceff3105329d4698d96c2391c176d5d03adc90c7389162b5b8\"\n\"checksum ash 0.30.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"69daec0742947f33a85931fa3cb0ce5f07929159dcbd1f0cbb5b2912e2978509\"\n\"checksum atom 0.3.5 (registry+https://github.com/rust-lang/crates.io-index)\" = \"3c86699c3f02778ec07158376991c8f783dd1f2f95c579ffaf0738dc984b2fe2\"\n\"checksum autocfg 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"f8aac770f1885fd7e387acedd76065302551364496e46b3dd00860b2f8359b9d\"\n\"checksum backtrace 0.3.46 (registry+https://github.com/rust-lang/crates.io-index)\" = \"b1e692897359247cc6bb902933361652380af0f1b7651ae5c5013407f30e109e\"\n\"checksum backtrace-sys 0.1.35 (registry+https://github.com/rust-lang/crates.io-index)\" = \"7de8aba10a69c8e8d7622c5710229485ec32e9d55fdad160ea559c086fdcd118\"\n\"checksum bitflags 1.2.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"cf1de2fe8c75bc145a2f577add951f8134889b4795d47466a54a5c846d691693\"\n\"checksum block 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)\" = \"0d8c1fef690941d3e7788d328517591fecc684c084084702d6ff1641e993699a\"\n\"checksum bumpalo 3.2.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"12ae9db68ad7fac5fe51304d20f016c911539251075a214f8e663babefa35187\"\n\"checksum byteorder 1.3.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"08c48aae112d48ed9f069b33538ea9e3e90aa263cfa3d1c24309612b1f7472de\"\n\"checksum cc 1.0.50 (registry+https://github.com/rust-lang/crates.io-index)\" = \"95e28fa049fda1c330bcf9d723be7663a899c4679724b34c81e9f5a326aab8cd\"\n\"checksum cfg-if 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)\" = \"4785bdd1c96b2a846b2bd7cc02e86b6b3dbf14e7e53446c4f54c92a361040822\"\n\"checksum cl-sys 0.4.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"e8573fa3ff8acd6c49e8e113296c54277e82376b96c6ca6307848632cce38e44\"\n\"checksum cloudabi 0.0.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ddfc5b9aa5d4507acaf872de71051dfd0e309860e88966e1051e462a077aac4f\"\n\"checksum cmake 0.1.42 (registry+https://github.com/rust-lang/crates.io-index)\" = \"81fb25b677f8bf1eb325017cb6bb8452f87969db0fedb4f757b297bee78a7c62\"\n\"checksum cocoa 0.20.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"0a4736c86d51bd878b474400d9ec888156f4037015f5d09794fab9f26eab1ad4\"\n\"checksum copyless 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"6ff9c56c9fb2a49c05ef0e431485a22400af20d33226dc0764d891d09e724127\"\n\"checksum core-foundation 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"57d24c7a13c43e870e37c1556b74555437870a04514f7685f5b354e090567171\"\n\"checksum core-foundation-sys 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"b3a71ab494c0b5b860bdc8407ae08978052417070c2ced38573a9157ad75b8ac\"\n\"checksum core-graphics 0.19.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"59e78b2e0aaf43f08e7ae0d6bc96895ef72ff0921c7d4ff4762201b2dba376dd\"\n\"checksum crossbeam 0.7.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"69323bff1fb41c635347b8ead484a5ca6c3f11914d784170b158d8449ab07f8e\"\n\"checksum crossbeam-channel 0.4.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"cced8691919c02aac3cb0a1bc2e9b73d89e832bf9a06fc579d4e71b68a2da061\"\n\"checksum crossbeam-deque 0.7.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"9f02af974daeee82218205558e51ec8768b48cf524bd01d550abe5573a608285\"\n\"checksum crossbeam-epoch 0.8.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"058ed274caafc1f60c4997b5fc07bf7dc7cca454af7c6e81edffe5f33f70dace\"\n\"checksum crossbeam-queue 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"c695eeca1e7173472a32221542ae469b3e9aac3a4fc81f7696bcad82029493db\"\n\"checksum crossbeam-utils 0.7.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"c3c7c73a2d1e9fc0886a08b93e98eb643461230d5f1925e4036204d5f2e261a8\"\n\"checksum d3d12 0.3.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"bc7ed48e89905e5e146bcc1951cc3facb9e44aea9adf5dc01078cda1bd24b662\"\n\"checksum derive_more 0.99.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"a806e96c59a76a5ba6e18735b6cf833344671e61e7863f2edb5c518ea2cac95c\"\n\"checksum emu_glsl 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"03565236eaf3a67a15cfd1bdfc7f2726b6de569f4edd872f1200929566a9b7ac\"\n\"checksum enum_primitive 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"be4551092f4d519593039259a9ed8daedf0da12e5109c5280338073eaeb81180\"\n\"checksum failure 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)\" = \"b8529c2421efa3066a5cbd8063d2244603824daccb6936b079010bb2aa89464b\"\n\"checksum failure_derive 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)\" = \"030a733c8287d6213886dd487564ff5c8f6aae10278b3588ed177f9d18f8d231\"\n\"checksum foreign-types 0.3.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"f6f339eb8adc052cd2ca78910fda869aefa38d22d5cb648e6485e4d3fc06f3b1\"\n\"checksum foreign-types-shared 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"00b0228411908ca8685dba7fc2cdd70ec9990a6e753e89b6ac91a84c40fbaf4b\"\n\"checksum fuchsia-cprng 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"a06f77d526c1a601b7c4cdd98f54b5eaabffc14d5f2f0296febdc7f357c6d3ba\"\n\"checksum futures 0.1.29 (registry+https://github.com/rust-lang/crates.io-index)\" = \"1b980f2816d6ee8673b6517b52cb0e808a180efc92e5c19d02cdda79066703ef\"\n\"checksum futures 0.3.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"5c329ae8753502fb44ae4fc2b622fa2a94652c41e795143765ba0927f92ab780\"\n\"checksum futures-channel 0.3.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"f0c77d04ce8edd9cb903932b608268b3fffec4163dc053b3b402bf47eac1f1a8\"\n\"checksum futures-core 0.3.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"f25592f769825e89b92358db00d26f965761e094951ac44d3663ef25b7ac464a\"\n\"checksum futures-executor 0.3.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"f674f3e1bcb15b37284a90cedf55afdba482ab061c407a9c0ebbd0f3109741ba\"\n\"checksum futures-io 0.3.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"a638959aa96152c7a4cddf50fcb1e3fede0583b27157c26e67d6f99904090dc6\"\n\"checksum futures-macro 0.3.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"9a5081aa3de1f7542a794a397cde100ed903b0630152d0973479018fd85423a7\"\n\"checksum futures-sink 0.3.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"3466821b4bc114d95b087b850a724c6f83115e929bc88f1fa98a3304a944c8a6\"\n\"checksum futures-task 0.3.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"7b0a34e53cf6cdcd0178aa573aed466b646eb3db769570841fda0c7ede375a27\"\n\"checksum futures-util 0.3.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"22766cf25d64306bedf0384da004d05c9974ab104fcc4528f1236181c18004c5\"\n\"checksum fxhash 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"c31b6d751ae2c7f11320402d34e41349dd1016f8d5d45e48c4312bc8625af50c\"\n\"checksum gfx-auxil 0.3.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"3b46e6f0031330a0be08d17820f2dcaaa91cb36710a97a9500cb4f1c36e785c8\"\n\"checksum gfx-backend-dx11 0.5.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"b148219292624126f78245e50a9720d95ea149a415ce8ce73ab7014205301b88\"\n\"checksum gfx-backend-dx12 0.5.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"a0e526746379e974501551b08958947e67a81b5ea8cdc717a000cdd72577da05\"\n\"checksum gfx-backend-empty 0.5.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"b67bd2d7bc022b257ddbdabc5fa3b10c29c292372c3409f2b6a6e3f4e11cdb85\"\n\"checksum gfx-backend-metal 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"cfe128c29675b5afc8acdda1dfe096d6abd5e3528059ab0b98bda8215d8beed9\"\n\"checksum gfx-backend-vulkan 0.5.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ebd1dee09bd8d8f1ba52c5ba22d1f70c7ffa990c5eb245eb3ef2d0206f631673\"\n\"checksum gfx-descriptor 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"1bf35f5d66d1bc56e63e68d7528441453f25992bd954b84309d23c659df2c5da\"\n\"checksum gfx-hal 0.5.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"bc96180204064c9493e0fe4a9efeb721e0ac59fe8e1906d0c659142a93114fb1\"\n\"checksum gfx-memory 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"9dbefe383365032c41ccfc8c2efda5eb8ba36593ed02883bf82c7e5e6c76a280\"\n\"checksum glob 0.3.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"9b919933a397b79c37e33b77bb2aa3dc8eb6e165ad809e58ff75bc7db2e34574\"\n\"checksum hibitset 0.6.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"93a1bb8316a44459a7d14253c4d28dd7395cbd23cc04a68c46e851b8e46d64b1\"\n\"checksum itoa 0.4.5 (registry+https://github.com/rust-lang/crates.io-index)\" = \"b8b7a7c0c47db5545ed3fef7468ee7bb5b74691498139e4b3f6a20685dc6dd8e\"\n\"checksum js-sys 0.3.37 (registry+https://github.com/rust-lang/crates.io-index)\" = \"6a27d435371a2fa5b6d2b028a74bbdb1234f308da363226a2854ca3ff8ba7055\"\n\"checksum lazy_static 1.4.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"e2abad23fbc42b3700f2f279844dc832adb2b2eb069b2df918f455c4e18cc646\"\n\"checksum libc 0.2.68 (registry+https://github.com/rust-lang/crates.io-index)\" = \"dea0c0405123bba743ee3f91f49b1c7cfb684eef0da0a50110f758ccf24cdff0\"\n\"checksum libloading 0.5.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"f2b111a074963af1d37a139918ac6d49ad1d0d5e47f72fd55388619691a7d753\"\n\"checksum lock_api 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"79b2de95ecb4691949fea4716ca53cdbcfccb2c612e19644a8bad05edcf9f47b\"\n\"checksum log 0.4.8 (registry+https://github.com/rust-lang/crates.io-index)\" = \"14b6052be84e6b71ab17edffc2eeabf5c2c3ae1fdb464aae35ac50c67a44e1f7\"\n\"checksum malloc_buf 0.0.6 (registry+https://github.com/rust-lang/crates.io-index)\" = \"62bb907fe88d54d8d9ce32a3cceab4218ed2f6b7d35617cafe9adf84e43919cb\"\n\"checksum maybe-uninit 2.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"60302e4db3a61da70c0cb7991976248362f30319e88850c487b9b95bbf059e00\"\n\"checksum memchr 2.3.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"3728d817d99e5ac407411fa471ff9800a778d88a24685968b36824eaf4bee400\"\n\"checksum memoffset 0.5.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"b4fc2c02a7e374099d4ee95a193111f72d2110197fe200272371758f6c3643d8\"\n\"checksum metal 0.18.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"e198a0ee42bdbe9ef2c09d0b9426f3b2b47d90d93a4a9b0395c4cea605e92dc0\"\n\"checksum nodrop 0.1.14 (registry+https://github.com/rust-lang/crates.io-index)\" = \"72ef4a56884ca558e5ddb05a1d1e7e1bfd9a68d9ed024c21704cc98872dae1bb\"\n\"checksum num 0.1.42 (registry+https://github.com/rust-lang/crates.io-index)\" = \"4703ad64153382334aa8db57c637364c322d3372e097840c72000dabdcf6156e\"\n\"checksum num-bigint 0.1.44 (registry+https://github.com/rust-lang/crates.io-index)\" = \"e63899ad0da84ce718c14936262a41cee2c79c981fc0a0e7c7beb47d5a07e8c1\"\n\"checksum num-complex 0.1.43 (registry+https://github.com/rust-lang/crates.io-index)\" = \"b288631d7878aaf59442cffd36910ea604ecd7745c36054328595114001c9656\"\n\"checksum num-integer 0.1.42 (registry+https://github.com/rust-lang/crates.io-index)\" = \"3f6ea62e9d81a77cd3ee9a2a5b9b609447857f3d358704331e4ef39eb247fcba\"\n\"checksum num-iter 0.1.40 (registry+https://github.com/rust-lang/crates.io-index)\" = \"dfb0800a0291891dd9f4fe7bd9c19384f98f7fbe0cd0f39a2c6b88b9868bbc00\"\n\"checksum num-rational 0.1.42 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ee314c74bd753fc86b4780aa9475da469155f3848473a261d2d18e35245a784e\"\n\"checksum num-traits 0.1.43 (registry+https://github.com/rust-lang/crates.io-index)\" = \"92e5113e9fd4cc14ded8e499429f396a20f98c772a47cc8622a736e1ec843c31\"\n\"checksum num-traits 0.2.11 (registry+https://github.com/rust-lang/crates.io-index)\" = \"c62be47e61d1842b9170f0fdeec8eba98e60e90e5446449a0545e5152acd7096\"\n\"checksum objc 0.2.7 (registry+https://github.com/rust-lang/crates.io-index)\" = \"915b1b472bc21c53464d6c8461c9d3af805ba1ef837e1cac254428f4a77177b1\"\n\"checksum objc_exception 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ad970fb455818ad6cba4c122ad012fae53ae8b4795f86378bce65e4f6bab2ca4\"\n\"checksum ocl 0.19.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"fa54742f44f5813a4cb4c8c16f7b4069cb3a17a88a354754a50d6b951ae32e31\"\n\"checksum ocl-core 0.11.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"81bc628faf959b5e07b1251252926dfe0dd1b3f2709cef8998c97936ddbdaa74\"\n\"checksum ocl-core-vector 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"b4072920739958adeec5abedec51af70febc58f7fff0601aaa0827c1f3c8fefd\"\n\"checksum parking_lot 0.10.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"92e98c49ab0b7ce5b222f2cc9193fc4efe11c6d0bd4f648e374684a6857b1cfc\"\n\"checksum parking_lot_core 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"7582838484df45743c8434fbff785e8edf260c28748353d44bc0da32e0ceabf1\"\n\"checksum peek-poke 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"d93fd6a575ebf1ac2668d08443c97a22872cfb463fd8b7ddd141e9f6be59af2f\"\n\"checksum peek-poke-derive 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"6fb44a25c5bba983be0fc8592dfaf3e6d0935ce8be0c6b15b2a39507af34a926\"\n\"checksum pin-utils 0.1.0-alpha.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"5894c618ce612a3fa23881b152b608bafb8c56cfc22f434a3ba3120b40f7b587\"\n\"checksum pkg-config 0.3.17 (registry+https://github.com/rust-lang/crates.io-index)\" = \"05da548ad6865900e60eaba7f589cc0783590a92e940c26953ff81ddbab2d677\"\n\"checksum proc-macro-hack 0.5.14 (registry+https://github.com/rust-lang/crates.io-index)\" = \"fcfdefadc3d57ca21cf17990a28ef4c0f7c61383a28cb7604cf4a18e6ede1420\"\n\"checksum proc-macro-nested 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"8e946095f9d3ed29ec38de908c22f95d9ac008e424c7bcae54c75a79c527c694\"\n\"checksum proc-macro2 0.4.30 (registry+https://github.com/rust-lang/crates.io-index)\" = \"cf3d2011ab5c909338f7887f4fc896d35932e29146c12c8d01da6b22a80ba759\"\n\"checksum proc-macro2 1.0.9 (registry+https://github.com/rust-lang/crates.io-index)\" = \"6c09721c6781493a2a492a96b5a5bf19b65917fe6728884e7c44dd0c60ca3435\"\n\"checksum quote 0.6.13 (registry+https://github.com/rust-lang/crates.io-index)\" = \"6ce23b6b870e8f94f81fb0a363d65d86675884b34a09043c81e5562f11c1f8e1\"\n\"checksum quote 1.0.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"2bdc6c187c65bca4260c9011c9e3132efe4909da44726bad24cf7572ae338d7f\"\n\"checksum qutex 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"084325f9fb9f2c23e4c225be1a4799583badd1666c3c6bbc67bacc6147f20ba1\"\n\"checksum rand 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\" = \"552840b97013b1a26992c11eac34bdd778e464601a4c2054b5f0bff7c6761293\"\n\"checksum rand_core 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"7a6fdeb83b075e8266dcc8762c22776f6877a63111121f5f8c7411e5be7eed4b\"\n\"checksum rand_core 0.4.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"9c33a3c44ca05fa6f1807d8e6743f3824e8509beca625669633be0acbdf509dc\"\n\"checksum range-alloc 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"dd5927936723a9e8b715d37d7e4b390455087c4bdf25b9f702309460577b14f9\"\n\"checksum raw-window-handle 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"0a441a7a6c80ad6473bd4b74ec1c9a4c951794285bf941c2126f607c72e48211\"\n\"checksum rdrand 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"678054eb77286b51581ba43620cc911abf02758c91f93f479767aed0f90458b2\"\n\"checksum redox_syscall 0.1.56 (registry+https://github.com/rust-lang/crates.io-index)\" = \"2439c63f3f6139d1b57529d16bc3b8bb855230c8efcc5d3a896c8bea7c3b1e84\"\n\"checksum rustc-demangle 0.1.16 (registry+https://github.com/rust-lang/crates.io-index)\" = \"4c691c0e608126e00913e33f0ccf3727d5fc84573623b8d65b2df340b5201783\"\n\"checksum rustc-serialize 0.3.24 (registry+https://github.com/rust-lang/crates.io-index)\" = \"dcf128d1287d2ea9d80910b5f1120d0b8eede3fbf1abe91c40d39ea7d51e6fda\"\n\"checksum rustc_version 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)\" = \"c5f5376ea5e30ce23c03eb77cbe4962b988deead10910c372b226388b594c084\"\n\"checksum ryu 1.0.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"535622e6be132bccd223f4bb2b8ac8d53cda3c7a6394944d3b2b33fb974f9d76\"\n\"checksum scopeguard 1.1.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"d29ab0c6d3fc0ee92fe66e2d99f700eab17a8d57d1c1d3b748380fb20baa78cd\"\n\"checksum semver 0.1.20 (registry+https://github.com/rust-lang/crates.io-index)\" = \"d4f410fedcf71af0345d7607d246e7ad15faaadd49d240ee3b24e5dc21a820ac\"\n\"checksum serde 1.0.105 (registry+https://github.com/rust-lang/crates.io-index)\" = \"e707fbbf255b8fc8c3b99abb91e7257a622caeb20a9818cbadbeeede4e0932ff\"\n\"checksum serde_derive 1.0.105 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ac5d00fc561ba2724df6758a17de23df5914f20e41cb00f94d5b7ae42fffaff8\"\n\"checksum serde_json 1.0.49 (registry+https://github.com/rust-lang/crates.io-index)\" = \"02044a6a92866fd61624b3db4d2c9dccc2feabbc6be490b87611bf285edbac55\"\n\"checksum shaderc 0.6.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ed344938df2d7fa3cc6bfb4af0b578f00f9b389d5fe7be0250fa657c442a8281\"\n\"checksum shaderc-sys 0.6.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"30075c712b08798cb2b5e54e4434970a4a3a3a3e838b0642590c74605d3cc528\"\n\"checksum slab 0.4.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"c111b5bd5695e56cffe5129854aa230b39c93a305372fdbb2668ca2394eea9f8\"\n\"checksum smallvec 1.2.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"5c2fb2ec9bcd216a5b0d0ccf31ab17b5ed1d627960edff65bbe95d3ce221cefc\"\n\"checksum spirv_cross 0.18.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"946216f8793f7199e3ea5b995ee8dc20a0ace1fcf46293a0ef4c17e1d046dbde\"\n\"checksum storage-map 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"fd0a4829a5c591dc24a944a736d6b1e4053e51339a79fd5d4702c4c999a9c45e\"\n\"checksum syn 0.15.44 (registry+https://github.com/rust-lang/crates.io-index)\" = \"9ca4b3b69a77cbe1ffc9e198781b7acb0c7365a883670e8f1c1bc66fba79a5c5\"\n\"checksum syn 1.0.17 (registry+https://github.com/rust-lang/crates.io-index)\" = \"0df0eb663f387145cab623dea85b09c2c5b4b0aef44e945d928e682fce71bb03\"\n\"checksum synstructure 0.10.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"02353edf96d6e4dc81aea2d8490a7e9db177bf8acb0e951c24940bf866cb313f\"\n\"checksum synstructure 0.12.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"67656ea1dc1b41b1451851562ea232ec2e5a80242139f7e679ceccfb5d61f545\"\n\"checksum termcolor 1.1.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"bb6bfa289a4d7c5766392812c0a1f4c1ba45afa1ad47803c11e1f407d846d75f\"\n\"checksum time 0.1.42 (registry+https://github.com/rust-lang/crates.io-index)\" = \"db8dcfca086c1143c9270ac42a2bbd8a7ee477b78ac8e45b19abfb0cbede4b6f\"\n\"checksum timeit 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"8b2942f5edfee7facb569dd9965b649370397d82fe2511383175f15f26eebfa5\"\n\"checksum toml 0.5.6 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ffc92d160b1eef40665be3a05630d003936a3bc7da7421277846c2613e92c71a\"\n\"checksum trybuild 1.0.24 (registry+https://github.com/rust-lang/crates.io-index)\" = \"24b4e093c5ed1a60b22557090120aa14f90ca801549c0949d775ea07c1407720\"\n\"checksum unicode-xid 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"fc72304796d0818e357ead4e000d19c9c174ab23dc11093ac919054d20a6a7fc\"\n\"checksum unicode-xid 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"826e7639553986605ec5979c7dd957c7895e93eabed50ab2ffa7f6128a75097c\"\n\"checksum vec_map 0.8.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"05c78687fb1a80548ae3250346c3db86a80a7cdd77bda190189f2d0a0987c81a\"\n\"checksum wasm-bindgen 0.2.60 (registry+https://github.com/rust-lang/crates.io-index)\" = \"2cc57ce05287f8376e998cbddfb4c8cb43b84a7ec55cf4551d7c00eef317a47f\"\n\"checksum wasm-bindgen-backend 0.2.60 (registry+https://github.com/rust-lang/crates.io-index)\" = \"d967d37bf6c16cca2973ca3af071d0a2523392e4a594548155d89a678f4237cd\"\n\"checksum wasm-bindgen-macro 0.2.60 (registry+https://github.com/rust-lang/crates.io-index)\" = \"8bd151b63e1ea881bb742cd20e1d6127cef28399558f3b5d415289bc41eee3a4\"\n\"checksum wasm-bindgen-macro-support 0.2.60 (registry+https://github.com/rust-lang/crates.io-index)\" = \"d68a5b36eef1be7868f668632863292e37739656a80fc4b9acec7b0bd35a4931\"\n\"checksum wasm-bindgen-shared 0.2.60 (registry+https://github.com/rust-lang/crates.io-index)\" = \"daf76fe7d25ac79748a37538b7daeed1c7a6867c92d3245c12c6222e4a20d639\"\n\"checksum wgpu 0.5.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"dbf715eb8571da470b856ecc67b057221360d9fce16f3e38001b2fb158d04012\"\n\"checksum wgpu-core 0.5.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"b10402ab7da35a3f0423ecf40693402945346b0600d538e6b6b86b4d04ea0e97\"\n\"checksum wgpu-native 0.5.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"19a5051a357d071fd69c24671e0ea6d644a83c7418e47eac3511427379007403\"\n\"checksum wgpu-types 0.5.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"67b69dfe001a8a6b78810c7e479717cd1898b9177dbf646611fa1f258f5a2512\"\n\"checksum winapi 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)\" = \"8093091eeb260906a183e6ae1abdba2ef5ef2257a21801128899c3fc699229c6\"\n\"checksum winapi-i686-pc-windows-gnu 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ac3b87c63620426dd9b991e5ce0329eff545bccbbb34f3be09ff6fb6ab51b7b6\"\n\"checksum winapi-util 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"4ccfbf554c6ad11084fb7517daca16cfdcaccbdadba4fc336f032a8b12c2ad80\"\n\"checksum winapi-x86_64-pc-windows-gnu 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"712e227841d057c1ee1cd2fb22fa7e5a5461ae8e48fa2ca79ec42cfc1931183f\"\n\"checksum wio 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"5d129932f4644ac2396cb456385cbf9e63b5b30c6e8dc4820bdca4eb082037a5\"\n\"checksum x11 2.18.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"77ecd092546cb16f25783a5451538e73afc8d32e242648d54f4ae5459ba1e773\"\n\"checksum zerocopy 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)\" = \"992b9b31f80fd4a167f903f879b8ca43d6716cc368ea01df90538baa2dd34056\"\n\"checksum zerocopy-derive 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"b090467ecd0624026e8a6405d343ac7382592530d54881330b3fc8e400280fa5\"\n"
        },
        {
          "name": "Cargo.toml",
          "type": "blob",
          "size": 0.109375,
          "content": "[workspace]\n\nmembers = [\n    \"em\", \"emu_macro\", \"emu_examples/arithmetic\", \"emu_tests\", \"emu_core\", \"emu_glsl\"\n]"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.044921875,
          "content": "MIT License\n\nCopyright (c) 2019 caleb winston\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.8408203125,
          "content": "> The old version of Emu (which used macros) is [here](https://github.com/calebwin/emu/tree/master/em).\n\n[![Discord Chat](https://img.shields.io/discord/308323056592486420.svg)](https://discord.gg/sKf6KCs)\n[![crates.io](https://img.shields.io/crates/v/emu_core.svg)](https://www.crates.io/crates/emu_core)\n[![docs.rs](https://docs.rs/emu_core/badge.svg)](https://calebwin.github.io/emu/)\n<!-- [![docs.rs](https://docs.rs/emu_core/badge.svg)](https://www.docs.rs/emu_core) -->\n\n<p align=\"center\">\n<!-- <img width=\"250px\" src=\"https://i.imgur.com/kTap42K.png\"/> -->\n    <img width=\"250px\" src=\"https://i.imgur.com/CZEkdK1.png\"/>\n</p>\n\n# Overview\n\nEmu is a GPGPU library for Rust with a focus on portability, modularity, and performance. \n\nIt's a CUDA-esque compute-specific abstraction over [WebGPU](https://github.com/gfx-rs/wgpu-rs) providing specific functionality to make WebGPU feel more like CUDA. Here's a quick run-down of highlight features...\n\n- **Emu can run anywhere** - Emu uses WebGPU to support DirectX, Metal, Vulkan (and also OpenGL and browser eventually) as compile targets. This allows Emu to run on pretty much any user interface including desktop, mobile, and browser. By moving \nheavy computations to the user's device, you can reduce system latency and improve privacy.\n\n- **Emu makes compute easier** - Emu makes WebGPU feel like CUDA. It does this by providing...\n    - `DeviceBox<T>` as a wrapper for data that lives on the GPU (thereby ensuring type-safe data movement)\n    - `DevicePool` as a no-config auto-managed pool of devices (similar to CUDA)\n    - `trait Cache` - a no-setup-required LRU cache of JITed compute kernels.\n    \n- **Emu is transparent** - Emu is a fully transparent abstraction. This means, at any point, you can decide to remove the abstraction and work directly with WebGPU constructs with zero overhead. For example, if you want to mix Emu with WebGPU-based graphics, you can do that with zero overhead. You can also swap out the JIT compiler artifact cache with your own cache, manage the device pool if you wish, and define your own compile-to-SPIR-V compiler that interops with Emu.\n\n- **Emu is asynchronous** - Emu is fully asynchronous. Most API calls will be non-blocking and can be synchronized by calls to `DeviceBox::get` when data is read back from device.\n\n# An example\n\nHere's a quick example of Emu. You can find more in `emu_core/examples` and most recent documentation [here](https://calebwin.github.io/emu).\n\nFirst, we just import a bunch of stuff\n```rust\nuse emu_glsl::*;\nuse emu_core::prelude::*;\nuse zerocopy::*;\n```\nWe can define types of structures so that they can be safely serialized and deserialized to/from the GPU.\n```rust\n#[repr(C)]\n#[derive(AsBytes, FromBytes, Copy, Clone, Default, Debug)]\nstruct Rectangle {\n    x: u32,\n    y: u32,\n    w: i32,\n    h: i32,\n}\n```\nFor this example, we make this entire function async but in reality you will only want small blocks of code to be async (like a bunch of asynchronous memory transfers and computation) and these blocks will be sent off to an executor to execute. You definitely don't want to do something like this where you are blocking (by doing an entire compilation step) in your async code.\n```rust\nfn main() -> Result<(), Box<dyn std::error::Error>> {\n    futures::executor::block_on(assert_device_pool_initialized());\n\n    // first, we move a bunch of rectangles to the GPU\n    let mut x: DeviceBox<[Rectangle]> = vec![Default::default(); 128].as_device_boxed()?;\n    \n    // then we compile some GLSL code using the GlslCompile compiler and\n    // the GlobalCache for caching compiler artifacts\n    let c = compile::<String, GlslCompile, _, GlobalCache>(\n        GlslBuilder::new()\n            .set_entry_point_name(\"main\")\n            .add_param_mut()\n            .set_code_with_glsl(\n            r#\"\n#version 450\nlayout(local_size_x = 1) in; // our thread block size is 1, that is we only have 1 thread per block\n\nstruct Rectangle {\n    uint x;\n    uint y;\n    int w;\n    int h;\n};\n\n// make sure to use only a single set and keep all your n parameters in n storage buffers in bindings 0 to n-1\n// you shouldn't use push constants or anything OTHER than storage buffers for passing stuff into the kernel\n// just use buffers with one buffer per binding\nlayout(set = 0, binding = 0) buffer Rectangles {\n    Rectangle[] rectangles;\n}; // this is used as both input and output for convenience\n\nRectangle flip(Rectangle r) {\n    r.x = r.x + r.w;\n    r.y = r.y + r.h;\n    r.w *= -1;\n    r.h *= -1;\n    return r;\n}\n\n// there should be only one entry point and it should be named \"main\"\n// ultimately, Emu has to kind of restrict how you use GLSL because it is compute focused\nvoid main() {\n    uint index = gl_GlobalInvocationID.x; // this gives us the index in the x dimension of the thread space\n    rectangles[index] = flip(rectangles[index]);\n}\n            \"#,\n        )\n    )?.finish()?;\n    \n    // we spawn 128 threads (really 128 thread blocks)\n    unsafe {\n        spawn(128).launch(call!(c, &mut x));\n    }\n\n    // this is the Future we need to block on to get stuff to happen\n    // everything else is non-blocking in the API (except stuff like compilation)\n    println!(\"{:?}\", futures::executor::block_on(x.get())?);\n\n    Ok(())\n}\n```\nAnd last but certainly not least, we use an executor to execute.\n```rust\nfn main() {\n    futures::executor::block_on(do_some_stuff()).expect(\"failed to do stuff on GPU\");\n}\n```\n\n# Built with Emu\n\nEmu is relatively new but has already been used for GPU acceleration in a variety of projects.\n\n- Used in [toil](https://github.com/vadixidav/toil) for GPU-accelerated linear algebra\n- Used in [ipl3hasher](https://github.com/awygle/ipl3hasher) for hash collision finding\n- Used in [bigbang](https://github.com/sezna/bigbang) for simulating gravitational acceleration (used older version of Emu)\n\n# Getting started\n\nThe latest stable version is [on Crates.io](https://crates.io/crates/emu_core). To start using Emu, simply add the following line to your `Cargo.toml`.\n\n```toml\n[dependencies]\nemu_core = \"0.1.1\"\n```\n\nTo understand how to start using Emu, check out [the docs](https://calebwin.github.io/emu/). If you have any questions, please [ask in the Discord](https://discord.gg/sKf6KCs).\n\n# Contributing\n\nFeedback, discussion, PRs would all very much be appreciated. Some relatively high-priority, non-API-breaking things that have yet to be implemented are the following in rough order of priority.\n- [ ] Enusre that WebGPU polling is done correctly in `DeviceBox::get\n- [ ] Add support for WGLSL as input, use [Naga](https://github.com/gfx-rs/naga) for shader compilation\n- [ ] Add WASM support in `Cargo.toml`\n- [ ] Add benchmarks`\n- [ ] Reuse staging buffers between different `DeviceBox`es\n- [ ] Maybe use uniforms for `DeviceBox<T>` when `T` is small (maybe)\n\nIf you are interested in any of these or anything else, please don't hesitate to open an issue on GitHub or discuss more [on Discord](https://discord.gg/sKf6KCs).\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "em",
          "type": "tree",
          "content": null
        },
        {
          "name": "emu_core",
          "type": "tree",
          "content": null
        },
        {
          "name": "emu_examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "emu_glsl",
          "type": "tree",
          "content": null
        },
        {
          "name": "emu_macro",
          "type": "tree",
          "content": null
        },
        {
          "name": "emu_tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}