{
  "metadata": {
    "timestamp": 1736709181245,
    "page": 422,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "nexus-xyz/nexus-zkvm",
      "stars": 2113,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.123046875,
          "content": "target\nCargo.lock\n\n# editors\n.*.swp\n\n.config.env\n\n# public parameter files\n*.zst\n\n# proof file\nnexus-proof\n\n# macos\n.DS_Store\n"
        },
        {
          "name": ".rustfmt.toml",
          "type": "blob",
          "size": 0.18359375,
          "content": "# format_code_in_doc_comments = true\n# group_imports = \"StdExternalCrate\"\n# wrap_comments = true\n\nuse_field_init_shorthand = true\nstruct_lit_width = 40\nsingle_line_let_else_max_width = 60\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 6.16796875,
          "content": "# Contributing to the Nexus zkVM\n\nThe Nexus zkVM (zero-knowledge virtual machine) is a contributor-friendly zkVM. We welcome all contributions, no matter your experience with Rust or cryptography.\n\nThis document will help you get started. But first, **thank you for your interest in contributing!** We immensely appreciate quality contributions. This guide is intended to help you navigate the process.\n\nThe [dev Telegram][dev-tg] is always available for any concerns you may have that are not covered in this guide, or for any other questions or discussions you want to raise with the Nexus team or broader Nexus zkVM community.\n\n### Code of Conduct\n\nThe Nexus zkVM project adheres to the [Rust Code of Conduct][rust-coc]. This code of conduct describes the _minimum_ behavior\nexpected from all contributors.\n\nInstances of violations of the Code of Conduct can be reported by contacting the Nexus team.\n\n### Ways to contribute\n\nThere are three main ways to contribute:\n\n1. **By reporting an issue:** If you believe that you have uncovered a bug in the Nexus zkVM, report it by creating a new issue in the [Github][gh] issue tracker. See below for an extended discussion on how to make a bug report most helpful.\n2. **By adding information:** Even if collaborators are already aware of your issue, you can always provide additional context, such as further evidence in the form of reproduction steps, screenshots, code snippets, or logging outputs.\n3. **By resolving an issue:** Typically this is done in the form of either demonstrating that the issue reported is not a problem after all in a polite, thoughtfully explained, and evidence supported manner, or by opening a pull request that fixes the underlying problem and participating in its review and refinement.\n\n**Anybody can participate in any stage of contribution**. We urge you to participate in all discussions around bugs, feature requests, existing code, and PRs.\n\n## Reporting Issues \n\n#### Asking for help\n\nIf you have reviewed this document and existing documentation and still have questions or are still having problems, but don't quite know enough to create a bug report, then \nyou can get help by **starting a discussion**. \n\nYou can do so either on the [dev Telegram][dev-tg] or on discussion board of the [Github][gh] page for this repository. Look for the \"Discussions\" tab at the top.\n\n#### Submitting a bug report\n\nIf you believe that you have uncovered a bug, please describe it to the best of your ability, and provide whatever context and evidence you have. Don't worry if you cannot provide every detail, just give us what you can. Contributors will ask follow-up questions if something is unclear.\n\nAs a starting point, in a bug report we will pretty much always want:\n\n- the Nexus zkVM version/revision you are using;\n- the platform you are on, ideally both the operating system (Windows, macOS, or Linux) and the machine architecture (_e.g.,_ if you're using an M-series Mac) if you know them;\n- code snippets if this is happening in relation to testing or building code; and\n- concrete and comprehensive steps to reproduce the bug.\n\nCode snippets should be as minimal as possible. It is always better if you can reproduce the bug with a small snippet that focuses on your Nexus zkVM usage rather than on the surrounding code in your project. This will help collaborators verify, reproduce, and zero in on a fix.\n\nSee [this guide][mcve] on how to create a minimal, complete, and verifiable example.\n\n#### Submitting a feature request\n\nPlease include as detailed of an explanation as possible of the feature you would like, and add any additional context you think may be necessary or just helpful.\n\nIf you have examples of other tools that have the feature you are requesting, please include references/links to them as well.\n\n## Resolving Issues\n\nPull requests are the way concrete changes are made to the code, documentation, and dependencies of the Nexus zkVM.\n\nBefore making a large change, it is usually a good idea to first open an issue describing the change to solicit feedback and guidance. \nThis will increase the likelihood of the PR getting merged. Striking up a discussion the [dev Telegram][dev-tg] to let the community know\nwhat you'll be working on can also be helpful for getting early feedback before diving in.\n\nIf you are working on a larger feature, we encourage you to open up a draft pull request and also check in with the [dev Telegram][dev-tg], to make sure that other\ncontributors are not duplicating work.\n\n#### Discussion\n\nYou will probably get feedback or requests for changes to your pull request. \nThis is a regular and important part of the submission process, so don't be discouraged! Some reviewers may sign off on the pull\nrequest right away, others may have more detailed comments or feedback. This is a necessary part of the process in order\nto evaluate whether the changes are correct and necessary.\n\nRemember to **always be aware of the person behind the code**. _How_ you communicate during reviews (of your code or others!) can have a significant impact on the success\nof the pull request. We never want the cost of a change that makes the Nexus zkVM better to be a valued contributor not\nwanting to have anything to do with the project ever again. The goal is not just having good code. It's having a positive community that continues to turn good code into better code.\n\n#### Abandoned or stale pull requests\n\nIf a pull request appears to be abandoned or stalled, it is polite to first check with the contributor to see if they\nintend to continue the work before checking if they would mind if you took it over (especially if it just has minor revisions\nremaining). When doing so, it is courteous to give the original contributor credit for the work they started, either by\npreserving their name and e-mail address in the commit log, or by using the `Author: ` or `Co-authored-by: ` metadata\ntag in the commits.\n\n<sub><sup>_Adapted from the [Reth contributing guide][reth-contributing]_.</sub></sup>\n\n[rust-coc]: https://github.com/rust-lang/rust/blob/master/CODE_OF_CONDUCT.md\n\n[gh]: https://github.com/nexus-xyz/nexus-zkvm\n\n[dev-tg]: https://t.me/nexus_zkvm\n\n[mcve]: https://stackoverflow.com/help/mcve\n\n[reth-contributing]: https://github.com/paradigmxyz/reth/blob/main/CONTRIBUTING.md\n"
        },
        {
          "name": "Cargo.toml",
          "type": "blob",
          "size": 1.7529296875,
          "content": "[workspace]\nresolver = \"2\"\nmembers = [\n    \"runtime\",\n    \"examples\",\n    \"vm\",\n    \"cli\",\n    \"cli/progress-bar\",\n    \"config\",\n    \"config/serde_wrapper\",\n    \"network\",\n    \"network/rpc/common\",\n    \"network/rpc/traits\",\n    \"nova\",\n    \"spartan\",\n    \"core\",\n    \"jolt\",\n    \"sdk\", \n    \"macro\",\n    \"macro/profiler\",\n]\ndefault-members = [\n    \"vm\",\n    \"cli\",\n    \"network\",\n    \"nova\",\n    \"runtime\",\n    \"spartan\",\n    \"core\",\n    \"sdk\",\n]\nexclude = [\"nova-benches\"]\n\n[workspace.package]\nedition = \"2021\"\nversion = \"0.2.4\"\nauthors = [\"The Nexus Team <hello@nexus.xyz>\"]\nhomepage = \"https://nexus.xyz/\"\nrepository = \"https://github.com/nexus-xyz/nexus-zkvm/\"\nkeywords = [\"nexus\", \"zero-knowledge\", \"zkvm\", \"cryptography\", \"proofs\"]\ncategories = [\"cryptography\"]\npublish = false\n\n[workspace.dependencies]\nclap = { version = \"4.3\", features = [\"derive\"] }\nserde = { version = \"1.0\", features = [\"derive\"] }\nserde_json = \"1.0\"\nelf = { version = \"0.7\", default-features = false, features = [\"std\"] }\n\njsonrpsee = { version = \"0.23\", default-features = false }\n\nsha3 = { version = \"0.10\", default-features = false }\nhex = { version = \"0.4.3\" }\n\nark-crypto-primitives = { version = \"0.5.0\", features = [\n    \"r1cs\",\n    \"sponge\",\n    \"crh\",\n    \"merkle_tree\",\n] }\nark-std = \"0.5.0\"\n\nark-relations = { version = \"0.5.0\" }\nark-r1cs-std = { version = \"0.5.0\" }\n\nark-ff = \"0.5.0\"\nark-ec = { version = \"0.5.0\", default-features = false }\nark-serialize = { version = \"0.5.0\", features = [\"derive\"] }\nark-poly = \"0.5.0\"\nark-poly-commit = \"0.5.0\"\n\nark-bn254 = \"0.5.0\"\nark-grumpkin = \"0.5.0\"\nark-pallas = \"0.5.0\"\nark-vesta = \"0.5.0\"\nark-test-curves = { version = \"0.5.0\", features = [\"bls12_381_curve\"] }\n\n[profile.release]\ncodegen-units = 1\nlto = true\n\n[profile.bench]\ninherits = \"release\"\ndebug = true\n"
        },
        {
          "name": "LICENSE-APACHE",
          "type": "blob",
          "size": 9.4951171875,
          "content": "                              Apache License\n                        Version 2.0, January 2004\n                     http://www.apache.org/licenses/\n\nTERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n1. Definitions.\n\n   \"License\" shall mean the terms and conditions for use, reproduction,\n   and distribution as defined by Sections 1 through 9 of this document.\n\n   \"Licensor\" shall mean the copyright owner or entity authorized by\n   the copyright owner that is granting the License.\n\n   \"Legal Entity\" shall mean the union of the acting entity and all\n   other entities that control, are controlled by, or are under common\n   control with that entity. For the purposes of this definition,\n   \"control\" means (i) the power, direct or indirect, to cause the\n   direction or management of such entity, whether by contract or\n   otherwise, or (ii) ownership of fifty percent (50%) or more of the\n   outstanding shares, or (iii) beneficial ownership of such entity.\n\n   \"You\" (or \"Your\") shall mean an individual or Legal Entity\n   exercising permissions granted by this License.\n\n   \"Source\" form shall mean the preferred form for making modifications,\n   including but not limited to software source code, documentation\n   source, and configuration files.\n\n   \"Object\" form shall mean any form resulting from mechanical\n   transformation or translation of a Source form, including but\n   not limited to compiled object code, generated documentation,\n   and conversions to other media types.\n\n   \"Work\" shall mean the work of authorship, whether in Source or\n   Object form, made available under the License, as indicated by a\n   copyright notice that is included in or attached to the work\n   (an example is provided in the Appendix below).\n\n   \"Derivative Works\" shall mean any work, whether in Source or Object\n   form, that is based on (or derived from) the Work and for which the\n   editorial revisions, annotations, elaborations, or other modifications\n   represent, as a whole, an original work of authorship. For the purposes\n   of this License, Derivative Works shall not include works that remain\n   separable from, or merely link (or bind by name) to the interfaces of,\n   the Work and Derivative Works thereof.\n\n   \"Contribution\" shall mean any work of authorship, including\n   the original version of the Work and any modifications or additions\n   to that Work or Derivative Works thereof, that is intentionally\n   submitted to Licensor for inclusion in the Work by the copyright owner\n   or by an individual or Legal Entity authorized to submit on behalf of\n   the copyright owner. For the purposes of this definition, \"submitted\"\n   means any form of electronic, verbal, or written communication sent\n   to the Licensor or its representatives, including but not limited to\n   communication on electronic mailing lists, source code control systems,\n   and issue tracking systems that are managed by, or on behalf of, the\n   Licensor for the purpose of discussing and improving the Work, but\n   excluding communication that is conspicuously marked or otherwise\n   designated in writing by the copyright owner as \"Not a Contribution.\"\n\n   \"Contributor\" shall mean Licensor and any individual or Legal Entity\n   on behalf of whom a Contribution has been received by Licensor and\n   subsequently incorporated within the Work.\n\n2. Grant of Copyright License. Subject to the terms and conditions of\n   this License, each Contributor hereby grants to You a perpetual,\n   worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n   copyright license to reproduce, prepare Derivative Works of,\n   publicly display, publicly perform, sublicense, and distribute the\n   Work and such Derivative Works in Source or Object form.\n\n3. Grant of Patent License. Subject to the terms and conditions of\n   this License, each Contributor hereby grants to You a perpetual,\n   worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n   (except as stated in this section) patent license to make, have made,\n   use, offer to sell, sell, import, and otherwise transfer the Work,\n   where such license applies only to those patent claims licensable\n   by such Contributor that are necessarily infringed by their\n   Contribution(s) alone or by combination of their Contribution(s)\n   with the Work to which such Contribution(s) was submitted. If You\n   institute patent litigation against any entity (including a\n   cross-claim or counterclaim in a lawsuit) alleging that the Work\n   or a Contribution incorporated within the Work constitutes direct\n   or contributory patent infringement, then any patent licenses\n   granted to You under this License for that Work shall terminate\n   as of the date such litigation is filed.\n\n4. Redistribution. You may reproduce and distribute copies of the\n   Work or Derivative Works thereof in any medium, with or without\n   modifications, and in Source or Object form, provided that You\n   meet the following conditions:\n\n   (a) You must give any other recipients of the Work or\n       Derivative Works a copy of this License; and\n\n   (b) You must cause any modified files to carry prominent notices\n       stating that You changed the files; and\n\n   (c) You must retain, in the Source form of any Derivative Works\n       that You distribute, all copyright, patent, trademark, and\n       attribution notices from the Source form of the Work,\n       excluding those notices that do not pertain to any part of\n       the Derivative Works; and\n\n   (d) If the Work includes a \"NOTICE\" text file as part of its\n       distribution, then any Derivative Works that You distribute must\n       include a readable copy of the attribution notices contained\n       within such NOTICE file, excluding those notices that do not\n       pertain to any part of the Derivative Works, in at least one\n       of the following places: within a NOTICE text file distributed\n       as part of the Derivative Works; within the Source form or\n       documentation, if provided along with the Derivative Works; or,\n       within a display generated by the Derivative Works, if and\n       wherever such third-party notices normally appear. The contents\n       of the NOTICE file are for informational purposes only and\n       do not modify the License. You may add Your own attribution\n       notices within Derivative Works that You distribute, alongside\n       or as an addendum to the NOTICE text from the Work, provided\n       that such additional attribution notices cannot be construed\n       as modifying the License.\n\n   You may add Your own copyright statement to Your modifications and\n   may provide additional or different license terms and conditions\n   for use, reproduction, or distribution of Your modifications, or\n   for any such Derivative Works as a whole, provided Your use,\n   reproduction, and distribution of the Work otherwise complies with\n   the conditions stated in this License.\n\n5. Submission of Contributions. Unless You explicitly state otherwise,\n   any Contribution intentionally submitted for inclusion in the Work\n   by You to the Licensor shall be under the terms and conditions of\n   this License, without any additional terms or conditions.\n   Notwithstanding the above, nothing herein shall supersede or modify\n   the terms of any separate license agreement you may have executed\n   with Licensor regarding such Contributions.\n\n6. Trademarks. This License does not grant permission to use the trade\n   names, trademarks, service marks, or product names of the Licensor,\n   except as required for reasonable and customary use in describing the\n   origin of the Work and reproducing the content of the NOTICE file.\n\n7. Disclaimer of Warranty. Unless required by applicable law or\n   agreed to in writing, Licensor provides the Work (and each\n   Contributor provides its Contributions) on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n   implied, including, without limitation, any warranties or conditions\n   of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n   PARTICULAR PURPOSE. You are solely responsible for determining the\n   appropriateness of using or redistributing the Work and assume any\n   risks associated with Your exercise of permissions under this License.\n\n8. Limitation of Liability. In no event and under no legal theory,\n   whether in tort (including negligence), contract, or otherwise,\n   unless required by applicable law (such as deliberate and grossly\n   negligent acts) or agreed to in writing, shall any Contributor be\n   liable to You for damages, including any direct, indirect, special,\n   incidental, or consequential damages of any character arising as a\n   result of this License or out of the use or inability to use the\n   Work (including but not limited to damages for loss of goodwill,\n   work stoppage, computer failure or malfunction, or any and all\n   other commercial damages or losses), even if such Contributor\n   has been advised of the possibility of such damages.\n\n9. Accepting Warranty or Additional Liability. While redistributing\n   the Work or Derivative Works thereof, You may choose to offer,\n   and charge a fee for, acceptance of support, warranty, indemnity,\n   or other liability obligations and/or rights consistent with this\n   License. However, in accepting such obligations, You may act only\n   on Your own behalf and on Your sole responsibility, not on behalf\n   of any other Contributor, and only if You agree to indemnify,\n   defend, and hold each Contributor harmless for any liability\n   incurred by, or claims asserted against, such Contributor by reason\n   of your accepting any such warranty or additional liability.\n\nEND OF TERMS AND CONDITIONS\n"
        },
        {
          "name": "LICENSE-MIT",
          "type": "blob",
          "size": 0.9990234375,
          "content": "Permission is hereby granted, free of charge, to any\nperson obtaining a copy of this software and associated\ndocumentation files (the \"Software\"), to deal in the\nSoftware without restriction, including without\nlimitation the rights to use, copy, modify, merge,\npublish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software\nis furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice\nshall be included in all copies or substantial portions\nof the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF\nANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED\nTO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\nPARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT\nSHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR\nIN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\nDEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.4296875,
          "content": "# The Nexus zkVM\n\n<div align=\"left\">\n    <a href=\"https://t.me/nexus_zkvm\">\n        <img src=\"https://img.shields.io/endpoint?color=neon&logo=telegram&label=chat&url=https%3A%2F%2Fmogyo.ro%2Fquart-apis%2Ftgmembercount%3Fchat_id%3Dnexus_zkvm\"/></a>\n    <a href=\"https://github.com/nexus-xyz/nexus-zkvm/graphs/contributors\">\n        <img src=\"https://img.shields.io/github/contributors/nexus-xyz/nexus-zkvm.svg\"></a>\n    <a href=\"https://twitter.com/NexusLabsHQ\">\n        <img src=\"https://img.shields.io/badge/Twitter-black?logo=x&logoColor=white\"/></a>\n    <a href=\"https://nexus.xyz\">\n        <img src=\"https://img.shields.io/static/v1?label=Stage&message=Alpha&color=2BB4AB\"/></a>\n    <a href=\"https://github.com/nexus-xyz/nexus-zkvm/blob/main/LICENSE-MIT\">\n        <img src=\"https://img.shields.io/badge/license-MIT-blue\"/></a>\n    <a href=\"https://github.com/nexus-xyz/nexus-zkvm/blob/main/LICENSE-APACHE\">\n        <img src=\"https://img.shields.io/badge/license-APACHE-blue\"/></a>\n</div>\n\n<p align=\"center\">\n  <p align=\"center\">\n   <img width=\"100%\" src=\"assets/nexus_docs-header.png\" alt=\"Logo\">\n  </p>\n</p>\n\nThe Nexus zkVM is a modular, extensible, open-source, and highly-parallelized zkVM, designed to run at *a trillion CPU cycles proved per second* given enough machine power.\n\n## Folding schemes\n\nIf you're interested in our implementation of folding schemes, check the [`nexus-nova`](./nova/) crate.\n\n## Quick Start\n\n### 1. Install the Nexus zkVM\n\nFirst, install Rust: https://www.rust-lang.org/tools/install.\n\nAlso, make sure you have a working version of [cmake](https://cmake.org/).\n\nNote: cmake is a required dependency.\n\nNext, install the RISC-V target:\n\n```shell\nrustup target add riscv32i-unknown-none-elf\n```\n\nThen, install the Nexus zkVM:\n\n```shell\ncargo install --git https://github.com/nexus-xyz/nexus-zkvm cargo-nexus --tag 'v0.2.4'\n```\n\nVerify the installation:\n\n```shell\ncargo nexus --help\n```\n\nThis should print the available CLI commands.\n\n### 2. Create a new Nexus project\n\n```shell\ncargo nexus new nexus-project\n```\n\nAnd change directory to the new project:\n\n```shell\ncd nexus-project\n```\n\nThis will create a new Rust project directory with the following structure:\n\n```shell\n./nexus-project\n├── Cargo.lock\n├── Cargo.toml\n└── src\n    └── main.rs\n```\n\nAs an example, you can change the content of `./src/main.rs` to:\n\n```rust\n#![cfg_attr(target_arch = \"riscv32\", no_std, no_main)]\n \nuse nexus_rt::write_log;\n \n#[nexus_rt::main]\nfn main() {\n    write_log(\"Hello, World!\\n\");\n}\n```\n\n### 3. Run your program\n\n```bash\ncargo nexus run\n```\n\nYou should see the program print:\n```bash\n\"Hello, World!\"\n```\n\nThis command should run successfully. To print the full step-by-step execution trace on the NVM, run:\n\n```bash\ncargo nexus run -v\n```\n\n### 4. Prove your program\n\nGenerate a proof for your Rust program using the Nexus zkVM.\n\n```shell\ncargo nexus prove\n```\n\nThis command will save the proof to `./nexus-proof`.\n\n### 5. Verify your proof\n\nFinally, load and verify the proof:\n\n```shell\ncargo nexus verify\n```\n\nYou should see the program print \"Verifying Proof...\" and finally \"Finished\" when complete.\n\n## Learn More\n\nRun `cargo nexus --help` to see all the available commands.\n\nAlso check out the documentation at [docs.nexus.xyz](https://docs.nexus.xyz), or join our [Telegram](https://t.me/nexus_zkvm) chat to discuss!\n\nNexus is committed to open-source. All of our code is dual licensed under MIT and Apache licenses. We encourage and appreciate contributions.\n"
        },
        {
          "name": "assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "cli",
          "type": "tree",
          "content": null
        },
        {
          "name": "config",
          "type": "tree",
          "content": null
        },
        {
          "name": "core",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "jolt",
          "type": "tree",
          "content": null
        },
        {
          "name": "macro",
          "type": "tree",
          "content": null
        },
        {
          "name": "network",
          "type": "tree",
          "content": null
        },
        {
          "name": "nova-benches",
          "type": "tree",
          "content": null
        },
        {
          "name": "nova",
          "type": "tree",
          "content": null
        },
        {
          "name": "runtime",
          "type": "tree",
          "content": null
        },
        {
          "name": "sdk",
          "type": "tree",
          "content": null
        },
        {
          "name": "spartan",
          "type": "tree",
          "content": null
        },
        {
          "name": "vm",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}