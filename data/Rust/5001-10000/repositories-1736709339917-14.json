{
  "metadata": {
    "timestamp": 1736709339917,
    "page": 14,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "GitoxideLabs/gitoxide",
      "stars": 9353,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".config",
          "type": "tree",
          "content": null
        },
        {
          "name": ".devcontainer",
          "type": "tree",
          "content": null
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.4150390625,
          "content": "# EditorConfig is awesome: http://EditorConfig.org\n\n# top-most EditorConfig file\nroot = true\n\n# Unix-style newlines with a newline ending every file\n[*]\nend_of_line = lf\ninsert_final_newline = true\n\n[*.sh]\nindent_style = space\nindent_size = 2\n\n# Tab indentation (no size specified)\n[Makefile]\nindent_style = tab\n\n# Matches .json files or the exact file .travis.yml\n[{*.json,.travis.yml}]\nindent_style = space\nindent_size = 2\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.40625,
          "content": "**/generated-archives/*.tar* filter=lfs-disabled diff=lfs merge=lfs -text\n\n# assure line feeds don't interfere with our working copy hash\n*.sh text eol=lf\njustfile text eol=lf\n\n# have GitHub include fixture-making scripts when it counts code\n**/tests/fixtures/**/*.sh -linguist-vendored\n\n# have GitHub treat the gix-packetline-blocking src copy as auto-generated\n/gix-packetline-blocking/src/**/* linguist-generated\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.7412109375,
          "content": "# Created by .ignore support plugin (hsz.mobi)\n### Rust template\n# Generated by Cargo\n# will have compiled files and executables\ntarget/\n\n# repositories used for local testing\n/tests/fixtures/repos\n$/tests/fixtures/repos/\n\n/tests/fixtures/commit-graphs/\n$/tests/fixtures/commit-graphs/\n\n**/generated-do-not-edit/\n\n# Cargo lock files of fuzz targets - let's have the latest versions of everything under test\n**/fuzz/Cargo.lock\n\n# newer Git sees these as precious, older Git falls through to the pattern above\n$**/fuzz/Cargo.lock\n\n# Instead of adding more environment-specific ignores here, like for the IDE in use, prefer Git's user-global\n# `core.excludesFile` mechanism, see https://git-scm.com/docs/git-config#Documentation/git-config.txt-coreexcludesFile.\n"
        },
        {
          "name": ".gov",
          "type": "tree",
          "content": null
        },
        {
          "name": ".mailmap",
          "type": "blob",
          "size": 0.1044921875,
          "content": "<sebastian.thiel@icloud.com> <byronimo@gmail.com>  \n<sebastian.thiel@icloud.com> <sthiel@thoughtworks.com>\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 152.240234375,
          "content": "# Changelog\n\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n\n## 0.40.0 (2024-12-22)\n\n### New Features\n\n - <csr-id-c7e04e976989435ba752628522d53ac39348b49b/> add first 'debug' version of `gix log`\n   It's primarily meant to better understand `gix blame`.\n - <csr-id-471e046a6002a68209e215db7ee904a4149f9d51/> add `--tree-favor` to `gix merge tree|commit`.\n   With it one can decide which side to favor in case of\n   irreconcilable tree-conflicts.\n\n### Bug Fixes\n\n - <csr-id-0727b5679f9ddeb05a9a50c895b6d77ba61ed544/> `gix merge file` now uses `THEIRS` instead of `OURS` where needed\n\n### Commit Statistics\n\n<csr-read-only-do-not-edit/>\n\n - 7 commits contributed to the release over the course of 27 calendar days.\n - 28 days passed between releases.\n - 3 commits were understood as [conventional](https://www.conventionalcommits.org).\n - 1 unique issue was worked on: [#1703](https://github.com/GitoxideLabs/gitoxide/issues/1703)\n\n### Commit Details\n\n<csr-read-only-do-not-edit/>\n\n<details><summary>view details</summary>\n\n * **[#1703](https://github.com/GitoxideLabs/gitoxide/issues/1703)**\n    - `gix merge file` now uses `THEIRS` instead of `OURS` where needed ([`0727b56`](https://github.com/GitoxideLabs/gitoxide/commit/0727b5679f9ddeb05a9a50c895b6d77ba61ed544))\n * **Uncategorized**\n    - Merge pull request #1643 from cruessler/add-gix-log ([`29cb775`](https://github.com/GitoxideLabs/gitoxide/commit/29cb775e6b85265a4907e882a45621aeb0432564))\n    - Add first 'debug' version of `gix log` ([`c7e04e9`](https://github.com/GitoxideLabs/gitoxide/commit/c7e04e976989435ba752628522d53ac39348b49b))\n    - Merge pull request #1705 from GitoxideLabs/merge ([`520c832`](https://github.com/GitoxideLabs/gitoxide/commit/520c832cfcfb34eb7617be55ebe2719ab35595fd))\n    - Adapt to changes in `gix-diff` ([`960773e`](https://github.com/GitoxideLabs/gitoxide/commit/960773e5526d02e1f2294224859c821ed86a3463))\n    - Add `--tree-favor` to `gix merge tree|commit`. ([`471e046`](https://github.com/GitoxideLabs/gitoxide/commit/471e046a6002a68209e215db7ee904a4149f9d51))\n    - Merge pull request #1704 from GitoxideLabs/fix-1703 ([`e8ce25f`](https://github.com/GitoxideLabs/gitoxide/commit/e8ce25f8d752c383ad8aea45fc7710a6d4aeb2ef))\n</details>\n\n## 0.39.0 (2024-11-24)\n\n### New Features\n\n - <csr-id-0a5993f4ed6e3815949b3cd398d38d69417d21c8/> add `gix merge commit --debug`\n   This yields additional debugging information with details about detected conflicts.\n - <csr-id-4a5afc7524fc96213385454079ebf9baf302ad4b/> add `gix merge commits`\n - <csr-id-84707c2b7540f9a73cc3f0cde74dabd9822cd809/> add `gix merge tree` to merge trees similarly to `git merge-tree`.\n\n### Commit Statistics\n\n<csr-read-only-do-not-edit/>\n\n - 9 commits contributed to the release over the course of 21 calendar days.\n - 3 commits were understood as [conventional](https://www.conventionalcommits.org).\n - 0 issues like '(#ID)' were seen in commit messages\n\n### Commit Details\n\n<csr-read-only-do-not-edit/>\n\n<details><summary>view details</summary>\n\n * **Uncategorized**\n    - Merge pull request #1661 from GitoxideLabs/merge ([`0b7abfb`](https://github.com/GitoxideLabs/gitoxide/commit/0b7abfbdebe8c5ab30b89499a70dd7727de41184))\n    - Add `gix merge commit --debug` ([`0a5993f`](https://github.com/GitoxideLabs/gitoxide/commit/0a5993f4ed6e3815949b3cd398d38d69417d21c8))\n    - Merge pull request #1658 from GitoxideLabs/merge ([`905e5b4`](https://github.com/GitoxideLabs/gitoxide/commit/905e5b42a6163f92edef8fab82d97aeb6f17cf06))\n    - Add `gix merge commits` ([`4a5afc7`](https://github.com/GitoxideLabs/gitoxide/commit/4a5afc7524fc96213385454079ebf9baf302ad4b))\n    - Merge pull request #1651 from GitoxideLabs/merge ([`a876533`](https://github.com/GitoxideLabs/gitoxide/commit/a8765330fc16997dee275866b18a128dec1c5d55))\n    - Adapt to changes in `gix` ([`8d590f3`](https://github.com/GitoxideLabs/gitoxide/commit/8d590f33f49b556de1748818e0bbec610566842f))\n    - Merge pull request #1618 from GitoxideLabs/merge ([`3fb989b`](https://github.com/GitoxideLabs/gitoxide/commit/3fb989be21c739bbfeac93953c1685e7c6cd2106))\n    - Add `gix merge tree` to merge trees similarly to `git merge-tree`. ([`84707c2`](https://github.com/GitoxideLabs/gitoxide/commit/84707c2b7540f9a73cc3f0cde74dabd9822cd809))\n    - Support for merge related options in config tree ([`80e006b`](https://github.com/GitoxideLabs/gitoxide/commit/80e006b759d130f4f07a346b75cfc0b39986210c))\n</details>\n\n## 0.38.0 (2024-10-22)\n\n<csr-id-28ac6572722f7ea31795dc0417521c70bcb6ec8f/>\n<csr-id-786bfec7c2cf25a68705b6ef09ba6390600742b8/>\n\n### New Features\n\n - <csr-id-c7213bcf2cf6be4058a78dbd86bbab4c5ad4afa7/> support for listing worktrees with `gix worktree list`\n - <csr-id-0c554e096cf2bf0a2bb91397143f524219693a3b/> add first 'debug' version of `gix diff tree`.\n   It's primarily meant to better understand `gix blame`.\n - <csr-id-9c8bc03de99e6494abd9755deef7e7be5577bce2/> add new `gix cat` command.\n   It only prints things without fuzz.\n   \n   Inspired by https://youtu.be/JYH5ILv5g1g?si=bHLBPFJiZyRUTl6u&t=211.\n - <csr-id-3da2da9d7993adc16b19fc63e7524c768a6e2e7f/> add `gix merge-file` with similar features as `git merge-file`\n - <csr-id-7249291016253647c920852fb37eb9e29d615775/> `gix merge-base` for the CLI\n   For now it only supports the standard merge-base, but more derivatives\n   can be added easily on demand.\n\n### Bug Fixes\n\n - <csr-id-6eb4ea6cf27b2feb3edb9dbf754393b0c7d272fd/> Adjust `gix clean` warning and help for worktree fix\n - <csr-id-c241422dc64f97e9dc781465ae69130a423ee501/> Clarify -r/--repositories and --skip-hidden-repositories\n   This adds information to the help text for the `git clean` options\n   `-r`/`--repositories` and `--skip-hidden-repositories` to make it\n   clearer what their relationship is, avoid creating the false\n   impression that repositories are never deleted in the absence of\n   `-r`/`--repositories`, and note that `--skip-hidden-repositories`\n   is sometimes needed to preserve not only separate repositories but\n   the (probably rarer) case of hidden nested worktrees of the current\n   repository.\n\n### Other\n\n - <csr-id-28ac6572722f7ea31795dc0417521c70bcb6ec8f/> switch from `time` to `jiff`\n   This swaps out `time` for `jiff`. It doesn't completely remove `time`\n   from the dependency tree. The last remaining use of `time` is in\n   `prodash`, outside of the gitoxide project.\n\n### Other\n\n - <csr-id-786bfec7c2cf25a68705b6ef09ba6390600742b8/> Unify style in config support info\n   This builds on b31d6b7 (#1531) by adjusting the capitalization and\n   quoting style of string arguments in `progress.rs` that help\n   document the status of what configuration options are and are not\n   planned.\n   \n   - Since I believe these strings are not usually rendered as\n     Markdown, and most places that code formatting in Markdown would\n     be used were already written with single quotes, this applies\n     that quoting style consistently.\n   \n   - This applies initial capitalization, which was sometimes but not\n     always done. It does not apply a consistent style for when a\n     string will end in a `.`, which seems already to differ\n     deliberately for reasons of clarity. That can be adjusted later.\n   \n   - A small amount of minor rewording for clarity is also included.\n\n### Commit Statistics\n\n<csr-read-only-do-not-edit/>\n\n - 28 commits contributed to the release over the course of 89 calendar days.\n - 91 days passed between releases.\n - 9 commits were understood as [conventional](https://www.conventionalcommits.org).\n - 1 unique issue was worked on: [#1572](https://github.com/GitoxideLabs/gitoxide/issues/1572)\n\n### Commit Details\n\n<csr-read-only-do-not-edit/>\n\n<details><summary>view details</summary>\n\n * **[#1572](https://github.com/GitoxideLabs/gitoxide/issues/1572)**\n    - Make clear what `gix commit-graph` is ([`49bca2a`](https://github.com/GitoxideLabs/gitoxide/commit/49bca2abe4512180f080f678e73c0fa40885379a))\n * **Uncategorized**\n    - Merge pull request #1639 from cruessler/respect-env-variables ([`48aa74b`](https://github.com/GitoxideLabs/gitoxide/commit/48aa74b911fb874986c244712b7fd5b5cc10070b))\n    - Respect env variables when running gix ([`0bebe52`](https://github.com/GitoxideLabs/gitoxide/commit/0bebe524b75346edca219d13c10b52dee3273643))\n    - Merge pull request #1626 from cruessler/add-gix-diff ([`f186c23`](https://github.com/GitoxideLabs/gitoxide/commit/f186c2381b91f350813076927bf988d253fe1ad0))\n    - Some minor modifications ([`6777ecb`](https://github.com/GitoxideLabs/gitoxide/commit/6777ecb99306830a3353a0db24caaa69e348ca74))\n    - Add first 'debug' version of `gix diff tree`. ([`0c554e0`](https://github.com/GitoxideLabs/gitoxide/commit/0c554e096cf2bf0a2bb91397143f524219693a3b))\n    - Merge pull request #1616 from Byron/git-cat ([`31bdd2e`](https://github.com/GitoxideLabs/gitoxide/commit/31bdd2ecc6c800dc57faedc9250be6d5fbcc1133))\n    - Add new `gix cat` command. ([`9c8bc03`](https://github.com/GitoxideLabs/gitoxide/commit/9c8bc03de99e6494abd9755deef7e7be5577bce2))\n    - Merge pull request #1611 from Byron/merge ([`5ffccd2`](https://github.com/GitoxideLabs/gitoxide/commit/5ffccd2f08d70576347e3ae17a66ca5a60f1d81c))\n    - Add `gix merge-file` with similar features as `git merge-file` ([`3da2da9`](https://github.com/GitoxideLabs/gitoxide/commit/3da2da9d7993adc16b19fc63e7524c768a6e2e7f))\n    - Add all keys for merge-configuration ([`e0b09d2`](https://github.com/GitoxideLabs/gitoxide/commit/e0b09d2764fd02a2b69340d9b3aef9773ae899ce))\n    - Merge pull request #1566 from Byron/merge ([`d69c617`](https://github.com/GitoxideLabs/gitoxide/commit/d69c6175574f34d6df92b4488ed2c9a85df12c89))\n    - Merge pull request #1557 from Byron/merge-base ([`649f588`](https://github.com/GitoxideLabs/gitoxide/commit/649f5882cbebadf1133fa5f310e09b4aab77217e))\n    - `gix merge-base` for the CLI ([`7249291`](https://github.com/GitoxideLabs/gitoxide/commit/7249291016253647c920852fb37eb9e29d615775))\n    - Allow empty-docs ([`beba720`](https://github.com/GitoxideLabs/gitoxide/commit/beba7204a50a84b30e3eb81413d968920599e226))\n    - Merge pull request #1546 from nyurik/semilocons ([`f992fb7`](https://github.com/GitoxideLabs/gitoxide/commit/f992fb773b443454015bd14658cfaa2f3ac07997))\n    - Add missing semicolons ([`ec69c88`](https://github.com/GitoxideLabs/gitoxide/commit/ec69c88fc119f3aa1967a7e7f5fca30e3ce97595))\n    - Merge pull request #1537 from EliahKagan/progress-style ([`472fe5f`](https://github.com/GitoxideLabs/gitoxide/commit/472fe5fa18d6d1b948e319919a48f965a1199929))\n    - Unify style in config support info ([`786bfec`](https://github.com/GitoxideLabs/gitoxide/commit/786bfec7c2cf25a68705b6ef09ba6390600742b8))\n    - Merge pull request #1531 from EliahKagan/progress-typos ([`25a3f1b`](https://github.com/GitoxideLabs/gitoxide/commit/25a3f1b0b07c01dd44df254f46caa6f78a4d3014))\n    - Fix typos in config support info ([`b31d6b7`](https://github.com/GitoxideLabs/gitoxide/commit/b31d6b79fd9bc528deaf0e3027dcaae0229ff581))\n    - Merge branch 'ag/jiff' ([`5871fb1`](https://github.com/GitoxideLabs/gitoxide/commit/5871fb130b1a603c1e768f4b2371ac9d7cc56330))\n    - Switch from `time` to `jiff` ([`28ac657`](https://github.com/GitoxideLabs/gitoxide/commit/28ac6572722f7ea31795dc0417521c70bcb6ec8f))\n    - Merge pull request #1471 from EliahKagan/hidden ([`a9aac4f`](https://github.com/GitoxideLabs/gitoxide/commit/a9aac4f88d1d6245a3b03bd46e691697f661c114))\n    - Adjust `gix clean` warning and help for worktree fix ([`6eb4ea6`](https://github.com/GitoxideLabs/gitoxide/commit/6eb4ea6cf27b2feb3edb9dbf754393b0c7d272fd))\n    - Clarify -r/--repositories and --skip-hidden-repositories ([`c241422`](https://github.com/GitoxideLabs/gitoxide/commit/c241422dc64f97e9dc781465ae69130a423ee501))\n    - Merge branch 'fix-clean' ([`33eacfb`](https://github.com/GitoxideLabs/gitoxide/commit/33eacfbaace2021043e2b5d72dcb9293af6c4020))\n    - Support for listing worktrees with `gix worktree list` ([`c7213bc`](https://github.com/GitoxideLabs/gitoxide/commit/c7213bcf2cf6be4058a78dbd86bbab4c5ad4afa7))\n</details>\n\n## 0.37.0 (2024-07-23)\n\n<csr-id-202f3e48a96b38d32b11d28449358c7d1f3546ff/>\n\n### New Features\n\n - <csr-id-2a563870fc4d2f65e34c4e4a448b446fc05a43b2/> add `mailmap check` similar to `git check-mailmap`.\n   That way it becomes a little easier to maybe try out other special cases\n   in the wild.\n - <csr-id-9bf01e42b8d8964dfd1e099d645082c10bdabcdf/> `gix clone` with `--ref` support.\n   `--ref` is similar to `--branch`, but was renamed as it also supports\n   tags for example.\n\n### Other\n\n - <csr-id-202f3e48a96b38d32b11d28449358c7d1f3546ff/> Make it easier to compile gitoxide as dynlib\n   And also optimize compilation time: By making `plumbing` and `porcelain`\n   as modules the `lib.rs`, they can be compiled after the rmeta for the\n   dependencies are generated.\n   \n   For the `uni.rs` which uses both `plumbing` and `porcelain`, this would avoid\n   compiling these two modules twice.\n\n### Commit Statistics\n\n<csr-read-only-do-not-edit/>\n\n - 13 commits contributed to the release.\n - 62 days passed between releases.\n - 3 commits were understood as [conventional](https://www.conventionalcommits.org).\n - 0 issues like '(#ID)' were seen in commit messages\n\n### Thanks Clippy\n\n<csr-read-only-do-not-edit/>\n\n[Clippy](https://github.com/rust-lang/rust-clippy) helped 1 time to make code idiomatic. \n\n### Commit Details\n\n<csr-read-only-do-not-edit/>\n\n<details><summary>view details</summary>\n\n * **Uncategorized**\n    - Merge branch 'fix-mailmap' ([`f107014`](https://github.com/GitoxideLabs/gitoxide/commit/f107014022a62271f02790a83336aed186ad38a3))\n    - Add descriptive docs for `mailmap check` ([`3e08fa3`](https://github.com/GitoxideLabs/gitoxide/commit/3e08fa313c490f4ff299724a9363e0f3b370eea6))\n    - Add `mailmap check` similar to `git check-mailmap`. ([`2a56387`](https://github.com/GitoxideLabs/gitoxide/commit/2a563870fc4d2f65e34c4e4a448b446fc05a43b2))\n    - Merge branch 'main' into config-key-take-2 ([`9fa1054`](https://github.com/GitoxideLabs/gitoxide/commit/9fa1054a01071180d7b08c8c2b5bd61e9d0d32da))\n    - Merge branch 'feat/checkout-other-refs' ([`ecfde07`](https://github.com/GitoxideLabs/gitoxide/commit/ecfde07d0887322db34f5ea531891c92676e1ff4))\n    - `gix clone` with `--ref` support. ([`9bf01e4`](https://github.com/GitoxideLabs/gitoxide/commit/9bf01e42b8d8964dfd1e099d645082c10bdabcdf))\n    - Merge branch 'status' ([`2f9f0ac`](https://github.com/GitoxideLabs/gitoxide/commit/2f9f0ac36eb37b1736e21ee09e5a91833b80fc65))\n    - Thanks clippy ([`acc1331`](https://github.com/GitoxideLabs/gitoxide/commit/acc13318731fabac8f65d604baf7e47814f92ad4))\n    - Merge pull request #1384 from NobodyXu/feat/easier-to-compile-gix-as-dynlib ([`bb30e52`](https://github.com/GitoxideLabs/gitoxide/commit/bb30e52112a1b738afae557f6ba7bc23889cdcb7))\n    - Fix clippy warning ([`bf5a111`](https://github.com/GitoxideLabs/gitoxide/commit/bf5a1112245b6d60ceaf5591acf15acd0c8c6363))\n    - Fix compilation error in `src/plumbing/main.rs` ([`4596a39`](https://github.com/GitoxideLabs/gitoxide/commit/4596a3949cdeb7c6953c2a9b8ac1e51609e1b160))\n    - Fix compilation errors ([`0b5dc74`](https://github.com/GitoxideLabs/gitoxide/commit/0b5dc744b951a2ff49ddc4d2c10aaeaf10da2c4b))\n    - Make it easier to compile gitoxide as dynlib ([`202f3e4`](https://github.com/GitoxideLabs/gitoxide/commit/202f3e48a96b38d32b11d28449358c7d1f3546ff))\n</details>\n\n## 0.36.0 (2024-05-22)\n\n### New Features\n\n - <csr-id-886d6b58e4612ac21cc660ea4ddf1dd0b49d1c6e/> checkout respects options for `core.protectHFS` and `core.protectNTFS`.\n   This also adds `gitoxide.core.protectWindows` as a way to enforce\n   additional restrictions that are usually only available on Windows.\n   \n   Note that `core.protectNFS` is always enabled by default, just like\n   [it is in Git](https://github.com/git/git/commit/9102f958ee5254b10c0be72672aa3305bf4f4704).\n\n### Bug Fixes\n\n - <csr-id-addf446f052ff74edcdb083f2b2968b313daa940/> more robustness in the face of a trampling-herd of threads loading a single index.\n   The motivating example is here: https://github.com/praetorian-inc/noseyparker/issues/179\n   \n   Previously, it was possible for a trampling herd of threads to consolidate the\n   disk state. Most of them would be 'needs-init' threads which could notice that\n   the initialization already happened, and just use that.\n   \n   But a thread might be late for the party and somehow manages to not get any\n   newly loaded index, and thus tries to consolidate with what's on disk again.\n   Then it would again determine no change, and return nothing, causing the caller\n   to abort and not find objects it should find because it wouldn't see the index\n   that it should have seen.\n   \n   The reason the thread got into this mess is that the 'is-load-ongoing' flagging\n   was racy itself, so it would not wait for ongoing loads and just conclude nothing\n   happened. An extra delay (by yielding) now assures it either seees the loading state\n   and waits for it, sees the newly loaded indices.\n   \n   Note that this issue can be reproduced with:\n   \n   ```\n   './target/release/gix -r repo-with-one-pack -t10 --trace odb stats --extra-header-lookup'\n   ```\n\n### Commit Statistics\n\n<csr-read-only-do-not-edit/>\n\n - 6 commits contributed to the release over the course of 10 calendar days.\n - 38 days passed between releases.\n - 2 commits were understood as [conventional](https://www.conventionalcommits.org).\n - 0 issues like '(#ID)' were seen in commit messages\n\n### Commit Details\n\n<csr-read-only-do-not-edit/>\n\n<details><summary>view details</summary>\n\n * **Uncategorized**\n    - Merge branch 'various-fixes' ([`d6cd449`](https://github.com/GitoxideLabs/gitoxide/commit/d6cd44930fb204b06e2b70fc6965e7705530c47a))\n    - Merge pull request from GHSA-7w47-3wg8-547c ([`79dce79`](https://github.com/GitoxideLabs/gitoxide/commit/79dce79c62f6072aa2653780d590dc3993dfa401))\n    - Checkout respects options for `core.protectHFS` and `core.protectNTFS`. ([`886d6b5`](https://github.com/GitoxideLabs/gitoxide/commit/886d6b58e4612ac21cc660ea4ddf1dd0b49d1c6e))\n    - Mark safety-related core-flags as planned ([`f3d5a69`](https://github.com/GitoxideLabs/gitoxide/commit/f3d5a69bbe0ad14502ce617dc580cc2aa481bb0a))\n    - Merge branch 'status' ([`04ef31e`](https://github.com/GitoxideLabs/gitoxide/commit/04ef31e9d6f5332d49037a5a4c248ebbb5aaf92b))\n    - More robustness in the face of a trampling-herd of threads loading a single index. ([`addf446`](https://github.com/GitoxideLabs/gitoxide/commit/addf446f052ff74edcdb083f2b2968b313daa940))\n</details>\n\n## 0.35.0 (2024-04-13)\n\n### New Features\n\n - <csr-id-84c74ffa698d35f8395c63db6acd3d0e6700d07f/> add `gix status --ignored` support\n - <csr-id-66e87cd31c060c3f97ac685ee0541c408f600362/> add `gix status --index-worktree-renames`\n   This enables rename-tracking between worktree and index, something\n   that Git also doesn't do or doesn't do by default.\n   It is, however, available in `git2`.\n - <csr-id-61c002bc4ca5b5345c411e561fdcb492e7ae1d97/> `gix status` with submodule and rewrite support.\n   Submodule changes are now picked up as long as the submodule is\n   in the index.\n   Further, it's possible to enable rename-tracking between\n   index and worktree separately.\n - <csr-id-98b368095ec99d1bc287da7f9294a9fce424deed/> add `gix is-clean|is-changed`\n   It's a good way to compare the time it takes to run a full status\n   compared to a quick is-dirty check.\n - <csr-id-afd20caadb40b6b793f2099b7232669f9a8f9086/> `gix submodules list --dirty-suffix` for dirty-information\n   This is a submodule-centric and greatly simplified way of obtaining\n   describe information with dirty-suffix.\n   \n   Note that `status` information is also possible, but it seems\n   hard to display nicely, which this command isn't great at\n   in the first place.\n - <csr-id-58231b418fa39ea122ef41bb7691289f5b0be855/> add `gix commit describe --dirty-suffix`\n   That way a suffix will be added depending on the dirty-state of the repository.\n\n### Commit Statistics\n\n<csr-read-only-do-not-edit/>\n\n - 11 commits contributed to the release.\n - 6 commits were understood as [conventional](https://www.conventionalcommits.org).\n - 0 issues like '(#ID)' were seen in commit messages\n\n### Commit Details\n\n<csr-read-only-do-not-edit/>\n\n<details><summary>view details</summary>\n\n * **Uncategorized**\n    - Merge pull request #1341 from szepeviktor/typos ([`55f379b`](https://github.com/GitoxideLabs/gitoxide/commit/55f379bc47065822d078393d83d30c0835a89782))\n    - Fix typos ([`f72ecce`](https://github.com/GitoxideLabs/gitoxide/commit/f72ecce45babcad2a0c9b73c79d01ff502907a57))\n    - Merge branch 'status' ([`3e5c974`](https://github.com/GitoxideLabs/gitoxide/commit/3e5c974dd62ac134711c6c2f5a5490187a6ea55e))\n    - Add `gix status --format` to communicate the current format is very simple. ([`23bea36`](https://github.com/GitoxideLabs/gitoxide/commit/23bea36f046a6f652cd1e06885ae132c85bb4f05))\n    - Add `gix status --ignored` support ([`84c74ff`](https://github.com/GitoxideLabs/gitoxide/commit/84c74ffa698d35f8395c63db6acd3d0e6700d07f))\n    - Add `gix status --index-worktree-renames` ([`66e87cd`](https://github.com/GitoxideLabs/gitoxide/commit/66e87cd31c060c3f97ac685ee0541c408f600362))\n    - Fix lints for nightly, and clippy ([`f8ce3d0`](https://github.com/GitoxideLabs/gitoxide/commit/f8ce3d0721b6a53713a9392f2451874f520bc44c))\n    - `gix status` with submodule and rewrite support. ([`61c002b`](https://github.com/GitoxideLabs/gitoxide/commit/61c002bc4ca5b5345c411e561fdcb492e7ae1d97))\n    - Add `gix is-clean|is-changed` ([`98b3680`](https://github.com/GitoxideLabs/gitoxide/commit/98b368095ec99d1bc287da7f9294a9fce424deed))\n    - `gix submodules list --dirty-suffix` for dirty-information ([`afd20ca`](https://github.com/GitoxideLabs/gitoxide/commit/afd20caadb40b6b793f2099b7232669f9a8f9086))\n    - Add `gix commit describe --dirty-suffix` ([`58231b4`](https://github.com/GitoxideLabs/gitoxide/commit/58231b418fa39ea122ef41bb7691289f5b0be855))\n</details>\n\n## 0.34.0 (2024-02-25)\n\n### New Features\n\n - <csr-id-9863d75147445d3a598fe1339d88c353850a5984/> add `gix clean --patterns-for-entries|-m` to help with wildcards.\n - <csr-id-e8597f3559187fc8add294e72eb33403cdff0e09/> basic `gix clean`\n\n### Commit Statistics\n\n<csr-read-only-do-not-edit/>\n\n - 20 commits contributed to the release.\n - 58 days passed between releases.\n - 2 commits were understood as [conventional](https://www.conventionalcommits.org).\n - 0 issues like '(#ID)' were seen in commit messages\n\n### Commit Details\n\n<csr-read-only-do-not-edit/>\n\n<details><summary>view details</summary>\n\n * **Uncategorized**\n    - Merge branch 'status' ([`d53504a`](https://github.com/GitoxideLabs/gitoxide/commit/d53504a1fad41cec7b6ca2a4abb7f185d8941e3f))\n    - Allow the `-n` argument as no-op to make them more compatible. ([`8959b21`](https://github.com/GitoxideLabs/gitoxide/commit/8959b2153f32c2fba599e3dfa1720e155b462b94))\n    - Add `gix clean --patterns-for-entries|-m` to help with wildcards. ([`9863d75`](https://github.com/GitoxideLabs/gitoxide/commit/9863d75147445d3a598fe1339d88c353850a5984))\n    - Merge branch 'tabled' ([`ed79aa7`](https://github.com/GitoxideLabs/gitoxide/commit/ed79aa7b410b9e5a013c4f204b20abd51d270559))\n    - Refactor ([`e25d7eb`](https://github.com/GitoxideLabs/gitoxide/commit/e25d7eb443d9e1fde8d16422251ee0d288ff4a51))\n    - Merge branch 'ein-completions' ([`cebeedf`](https://github.com/GitoxideLabs/gitoxide/commit/cebeedf572d7086c9959754c873312a183d575e3))\n    - Fix clippy lints ([`454e6b9`](https://github.com/GitoxideLabs/gitoxide/commit/454e6b9de86def27c811cc93fd80f4eb169dda52))\n    - Add back line wrapping simplify Usage Variants ([`4ac597a`](https://github.com/GitoxideLabs/gitoxide/commit/4ac597a0e9ccb8ed1e1864afcffdc55abc37260c))\n    - Tell clap that ein is named ein ([`4fd6ab8`](https://github.com/GitoxideLabs/gitoxide/commit/4fd6ab89753f9b947034806fecb60ad77380334c))\n    - Copy over code from gix to generate completions for ein as well ([`abe0043`](https://github.com/GitoxideLabs/gitoxide/commit/abe004372c6a0027339563a88162ca1aca320a1d))\n    - Fix indenting by removing formatting on the config str ([`c0c4d59`](https://github.com/GitoxideLabs/gitoxide/commit/c0c4d59bbae688074184b186e08c6bf8e23c5705))\n    - Reserve 50 characters for the config name ([`cc8d008`](https://github.com/GitoxideLabs/gitoxide/commit/cc8d008843a4e4567301c14ce5f25855417cf898))\n    - Bring back old implementation from https://github.com/Byron/gitoxide/commit/65e64964c7cd151e53e5a7d4b9ba8fabda1c0e16 this also removes terminal_size, although its not large ([`1ecc96d`](https://github.com/GitoxideLabs/gitoxide/commit/1ecc96d319bc60cb9dbabcf17211aa7057134fd6))\n    - Remove tabled ([`fcd585b`](https://github.com/GitoxideLabs/gitoxide/commit/fcd585bb6dc27bbf5bf74b422b36614241b59eb4))\n    - Merge branch 'dirwalk' ([`face359`](https://github.com/GitoxideLabs/gitoxide/commit/face359443ba33e8985ec1525d5ec38b743ea7a9))\n    - Basic `gix clean` ([`e8597f3`](https://github.com/GitoxideLabs/gitoxide/commit/e8597f3559187fc8add294e72eb33403cdff0e09))\n    - Merge branch 'chunks_exact' ([`d4d478b`](https://github.com/GitoxideLabs/gitoxide/commit/d4d478ba6a70fce34717e2164f8b3aa7a1521a2d))\n    - Use chunks_exact where possible ([`2482023`](https://github.com/GitoxideLabs/gitoxide/commit/24820232f07ae55c80d95470228cc9e874830487))\n    - Merge pull request #1248 from joshtriplett/tyop ([`39f35da`](https://github.com/GitoxideLabs/gitoxide/commit/39f35da390bc46005d0374b9bf4e7106fc1bd0ec))\n    - Typo fixes ([`3ef3bc2`](https://github.com/GitoxideLabs/gitoxide/commit/3ef3bc20a1b90799e5ac26858f898bc7a7c96901))\n</details>\n\n## 0.33.0 (2023-12-29)\n\n### New Features\n\n - <csr-id-193ffcd9945891867a14aa5b6f87e27d3880b280/> Add `rev parse --reference`.\n   It's similar to `git rev-parse --symbolic-full-name`.\n\n### Bug Fixes (BREAKING)\n\n - <csr-id-59b8104a5320d946abc9f5736fa76696cef1459d/> mark `gix::interrupt::init_handler()` as unsafe\n   The passed `interrupt()` argument will be called from a signal\n   handler, so that needs to be documented and the call sites need to\n   state that they fulfill the contract.\n   \n   Thanks to @Manishearth for pointing this out.\n\n### Commit Statistics\n\n<csr-read-only-do-not-edit/>\n\n - 7 commits contributed to the release over the course of 21 calendar days.\n - 22 days passed between releases.\n - 2 commits were understood as [conventional](https://www.conventionalcommits.org).\n - 0 issues like '(#ID)' were seen in commit messages\n\n### Commit Details\n\n<csr-read-only-do-not-edit/>\n\n<details><summary>view details</summary>\n\n * **Uncategorized**\n    - Merge branch 'maintenance' ([`4454c9d`](https://github.com/GitoxideLabs/gitoxide/commit/4454c9d66c32a1de75a66639016c73edbda3bd34))\n    - Upgrade tabled and setup wordwrapping ([`a78caba`](https://github.com/GitoxideLabs/gitoxide/commit/a78caba1e70adfae7beb2b4f6a18b8124efba46c))\n    - Merge branch 'tracking-branch' ([`0fe20e8`](https://github.com/GitoxideLabs/gitoxide/commit/0fe20e80145419e1662f869657dabf689786395f))\n    - Add `rev parse --reference`. ([`193ffcd`](https://github.com/GitoxideLabs/gitoxide/commit/193ffcd9945891867a14aa5b6f87e27d3880b280))\n    - Merge branch 'main' into fix-1183 ([`1691ba6`](https://github.com/GitoxideLabs/gitoxide/commit/1691ba669537f4a39ebb0891747dc509a6aedbef))\n    - Merge branch 'push-yvzxzqrkkvry' ([`4917beb`](https://github.com/GitoxideLabs/gitoxide/commit/4917beb5760a9bafb75b59331b282f4d6dbb64f5))\n    - Mark `gix::interrupt::init_handler()` as unsafe ([`59b8104`](https://github.com/GitoxideLabs/gitoxide/commit/59b8104a5320d946abc9f5736fa76696cef1459d))\n</details>\n\n## 0.32.0 (2023-12-06)\n\n### New Features\n\n<csr-id-4aea9b097fb08e504cdfc4a7c3b7511a308dc074/>\n<csr-id-c6e83cf69f1a17e9ba3010bcce3a4ddd3305424c/>\n<csr-id-8f795e8abf706a24fe104500bf15efaa2bc07b15/>\n<csr-id-8dfbb4ba531d86894a59e2b85ec29cd3133c8c4d/>\n<csr-id-f9ae1bc6b514b6bbcda2c672f7b7ccbd999356a0/>\n<csr-id-886289f98003f935d774a40f6db746ae70649936/>\n\n - <csr-id-cf51a4de2d06eb28435ef8e386131710003b6928/> `gix rev parse --format` to provide different versions of the same content.\n   This only applies to blobs, but allows to obtain different versions of the same blob\n   like:\n   \n   * what's stored in Git\n* what would be checked out to the worktree\n* what would be diffed\n\n### Bug Fixes\n\n - <csr-id-b2300782ad09f17730fe2a5ba4938517d4e7ec16/> in `--trace` mode, greatly increase message-buffer size.\n   That way, it's much less likely that messages will get lost\n   due to being overwritten before they can be displayed every\n   100ms or so.\n - <csr-id-eab22bd5d56bf91ee0edfc7156023c159c7f65f9/> set binary name for completions\n\n### Bug Fixes (BREAKING)\n\n - <csr-id-2189cee47f99350b368390eaa2a01961bb77c250/> rename `GITOXIDE_*` environment variables to `GIX_#`\n\n### Commit Statistics\n\n<csr-read-only-do-not-edit/>\n\n - 27 commits contributed to the release.\n - 10 commits were understood as [conventional](https://www.conventionalcommits.org).\n - 0 issues like '(#ID)' were seen in commit messages\n\n### Commit Details\n\n<csr-read-only-do-not-edit/>\n\n<details><summary>view details</summary>\n\n * **Uncategorized**\n    - Merge branch 'adjustments-for-cargo' ([`8156340`](https://github.com/GitoxideLabs/gitoxide/commit/8156340724b1b7cb15824f88c75f6ddd7302cff5))\n    - Rename `GITOXIDE_*` environment variables to `GIX_#` ([`2189cee`](https://github.com/GitoxideLabs/gitoxide/commit/2189cee47f99350b368390eaa2a01961bb77c250))\n    - Merge branch 'gix-status' ([`5fdc9df`](https://github.com/GitoxideLabs/gitoxide/commit/5fdc9df069f3d9a4bd88e4e0ca5d67916e2908c9))\n    - `gix rev parse --format` to provide different versions of the same content. ([`cf51a4d`](https://github.com/GitoxideLabs/gitoxide/commit/cf51a4de2d06eb28435ef8e386131710003b6928))\n    - J fmt ([`51c7abc`](https://github.com/GitoxideLabs/gitoxide/commit/51c7abc65f368b1b2bd3d82473793d3cd4fcbad5))\n    - Merge branch 'gix-status' ([`dfb3f18`](https://github.com/GitoxideLabs/gitoxide/commit/dfb3f1821428f294f1832543ad0cf2fc883b03fb))\n    - Adapt to changes in `gix-diff` ([`1706e23`](https://github.com/GitoxideLabs/gitoxide/commit/1706e2394380c35cd98d0e106eb0985ae1912da0))\n    - Add the`diff::resource_cache()` low-level utility for rapid in-memory diffing of combinations of resources. ([`4aea9b0`](https://github.com/GitoxideLabs/gitoxide/commit/4aea9b097fb08e504cdfc4a7c3b7511a308dc074))\n    - Merge branch 'support_ssl_verify' ([`5ce9784`](https://github.com/GitoxideLabs/gitoxide/commit/5ce978432231e257ef625fc401895b34f963bf6d))\n    - In gix read http.sslVerify config value and pass it to gix-transport. ([`c6e83cf`](https://github.com/GitoxideLabs/gitoxide/commit/c6e83cf69f1a17e9ba3010bcce3a4ddd3305424c))\n    - Merge branch 'check-cfg' ([`5a0d93e`](https://github.com/GitoxideLabs/gitoxide/commit/5a0d93e7522564d126c34ce5d569f9a385698513))\n    - Remove dead code from non-existent \"lean-cli\" feature ([`be1fa2f`](https://github.com/GitoxideLabs/gitoxide/commit/be1fa2f6370501c6b8bbe9bb89f6ef5507b5f425))\n    - Replace all docsrs config by the document-features feature ([`bb3224c`](https://github.com/GitoxideLabs/gitoxide/commit/bb3224c25abf6df50286b3bbdf2cdef01e9eeca1))\n    - Merge branch 'feat_basic_connectivity_check' ([`1f9aca5`](https://github.com/GitoxideLabs/gitoxide/commit/1f9aca5de45c1f7c25606cd1ddc6b93a915dcd77))\n    - Flatten `fsck connectivity` into just `fsck` much like `git fsck` ([`7ab5c76`](https://github.com/GitoxideLabs/gitoxide/commit/7ab5c7625fcbfade21d4f754be7afd2f73a828ba))\n    - Refactor ([`7a88b42`](https://github.com/GitoxideLabs/gitoxide/commit/7a88b420f0a43fb1ce163698723b30566add97a9))\n    - Add basic connectivity check ([`8f795e8`](https://github.com/GitoxideLabs/gitoxide/commit/8f795e8abf706a24fe104500bf15efaa2bc07b15))\n    - Merge branch 'fix-1096' ([`48ef17e`](https://github.com/GitoxideLabs/gitoxide/commit/48ef17e4d169f2b08d119c2dba51fcfd9c06fe61))\n    - Allow to print a tree without prettification, using `--tree-style raw`. ([`8dfbb4b`](https://github.com/GitoxideLabs/gitoxide/commit/8dfbb4ba531d86894a59e2b85ec29cd3133c8c4d))\n    - Merge branch 'trace-packetlines' ([`e7de4c7`](https://github.com/GitoxideLabs/gitoxide/commit/e7de4c702a223ad9eb19b407391028dcb08d80c4))\n    - Automatically enforce strict mode if `-c` options are given on the command-line. ([`f9ae1bc`](https://github.com/GitoxideLabs/gitoxide/commit/f9ae1bc6b514b6bbcda2c672f7b7ccbd999356a0))\n    - In `--trace` mode, greatly increase message-buffer size. ([`b230078`](https://github.com/GitoxideLabs/gitoxide/commit/b2300782ad09f17730fe2a5ba4938517d4e7ec16))\n    - Merge branch 'discover-split-worktree' ([`16170d9`](https://github.com/GitoxideLabs/gitoxide/commit/16170d9c2e4de6a2e639ff99b75e65bbd0e782d7))\n    - Add `gix free discover` to inform about repository discovery. ([`886289f`](https://github.com/GitoxideLabs/gitoxide/commit/886289f98003f935d774a40f6db746ae70649936))\n    - Merge branch 'fix_completion-bin-name' ([`fb81093`](https://github.com/GitoxideLabs/gitoxide/commit/fb81093684a7ff3d9979ef21c2c8f771b6f99a50))\n    - Refactor ([`7f2bc08`](https://github.com/GitoxideLabs/gitoxide/commit/7f2bc08e5713758c6188428221aac518cc6ecf2f))\n    - Set binary name for completions ([`eab22bd`](https://github.com/GitoxideLabs/gitoxide/commit/eab22bd5d56bf91ee0edfc7156023c159c7f65f9))\n</details>\n\n## 0.31.1 (2023-10-13)\n\nA re-release to deal with breakage in the dependency tree (self-caused).\n\n### Commit Statistics\n\n<csr-read-only-do-not-edit/>\n\n - 1 commit contributed to the release.\n - 0 commits were understood as [conventional](https://www.conventionalcommits.org).\n - 0 issues like '(#ID)' were seen in commit messages\n\n### Commit Details\n\n<csr-read-only-do-not-edit/>\n\n<details><summary>view details</summary>\n\n * **Uncategorized**\n    - Improve documentation slightly ([`b7c9275`](https://github.com/GitoxideLabs/gitoxide/commit/b7c92753f52e71f118b6e21ab672ae56961306c5))\n</details>\n\n## 0.31.0 (2023-10-12)\n\nThis release includes an overhaul of the url parsing implementation, allowing more urls to be parsed correctly and refining the error messages for\ninvalid ones. Improvements include the added support for ssh aliases (`github:byron/gitoxide` has previously been parsed as local path), adjustments\naround the interpretation of colons in file names (previously we disallowed colons that were not followed up with a slash character) and some smaller\nchanges that bring the interpretation of file urls more in line with Git's implementation.\n\nThere are still many (edge) cases in Git's url parsing implementation which are not handled correctly by Gitoxide. If you notice any such deviation please\nopen a new issue to help us making Gitoxide even more correct.\n\n### New Features\n\n - <csr-id-70923a0fad3d409069bd9d0b492e6a9b7b113261/> add shell completions for bash\n - <csr-id-46e591914d548bacae2656ffe14a0ea7ca2eb7ae/> `gix status` auto-writes changed indices.\n   This prevents expensive operations to re-occour.\n - <csr-id-7ba2fa1c7781230913b0a04ad8684fa7d0143c18/> `gix status -s/--statistics` to obtain additional information on what happened.\n   This is useful for understanding performance characteristics in detail.\n\n### Commit Statistics\n\n<csr-read-only-do-not-edit/>\n\n - 8 commits contributed to the release over the course of 7 calendar days.\n - 18 days passed between releases.\n - 3 commits were understood as [conventional](https://www.conventionalcommits.org).\n - 0 issues like '(#ID)' were seen in commit messages\n\n### Commit Details\n\n<csr-read-only-do-not-edit/>\n\n<details><summary>view details</summary>\n\n * **Uncategorized**\n    - Merge branch 'feat_completions' ([`681c607`](https://github.com/GitoxideLabs/gitoxide/commit/681c60774704a3c1d3ed8de916078833cf0398a7))\n    - Refactor ([`fdd2df8`](https://github.com/GitoxideLabs/gitoxide/commit/fdd2df8e42f2a14a90e9a575e19811f25ab62237))\n    - User decides completion output ([`215c3ac`](https://github.com/GitoxideLabs/gitoxide/commit/215c3acfd25554b9c2259d069f3916a9d6d911f5))\n    - Add shell completions for bash ([`70923a0`](https://github.com/GitoxideLabs/gitoxide/commit/70923a0fad3d409069bd9d0b492e6a9b7b113261))\n    - Merge branch 'reset' ([`b842691`](https://github.com/GitoxideLabs/gitoxide/commit/b8426919a491dc3a7df01ee3f258fc0d8a3a327c))\n    - Trust Ctime again ([`f929d42`](https://github.com/GitoxideLabs/gitoxide/commit/f929d420cb768f2df1d7886564ca03b3c3254a82))\n    - `gix status` auto-writes changed indices. ([`46e5919`](https://github.com/GitoxideLabs/gitoxide/commit/46e591914d548bacae2656ffe14a0ea7ca2eb7ae))\n    - `gix status -s/--statistics` to obtain additional information on what happened. ([`7ba2fa1`](https://github.com/GitoxideLabs/gitoxide/commit/7ba2fa1c7781230913b0a04ad8684fa7d0143c18))\n</details>\n\n## 0.30.0 (2023-09-24)\n\n<csr-id-d3ac691446c9d029eb4f04d111887fa06720939d/>\n<csr-id-ed327f6163f54756e58c20f86a563a97efb256ca/>\n\nThis release contains a security fix which assure URLs like `'ssh://-oProxyCommand=open$IFS-aCalculator/foo'` will not execute attacker-controlled\nstrings. The above can, on MacOS, launch the calculator app when using it with `gix clone` for example, up to v0.29.0.\n\n### New Features\n\n - <csr-id-f094f71dc1a50955552509d108556c01517c6ed6/> `gix status` with basic index-worktree comparison\n - <csr-id-3ff5ac0cda9e3e089dc79fdfbff5ff619ee60b1f/> `gix free index from-list` and `gix index from-tree` gain `--skip-hash`.\n   This flag can be derived from options, but thus far we have no higher-level\n   writing of the index so this has to do to see the difference in performance.\n\n### Refactor\n\n - <csr-id-d3ac691446c9d029eb4f04d111887fa06720939d/> both `ein` and `gix` now share some code via the `gitoxide` library.\n   This can slightly improve compile times as well, even though it wasn't measured.\n\n### Chore (BREAKING)\n\n - <csr-id-ed327f6163f54756e58c20f86a563a97efb256ca/> update to the latest `prodash`\n   It makes proper usage of `Progress` types easier and allows them to be used\n   as `dyn` traits as well.\n\n### Bug Fixes (BREAKING)\n\n - <csr-id-072ee32f693a31161cd6a843da6582d13efbb20b/> use `dyn` trait where possible.\n   This reduces compile time due to avoiding duplication.\n\n### Commit Statistics\n\n<csr-read-only-do-not-edit/>\n\n - 13 commits contributed to the release over the course of 27 calendar days.\n - 33 days passed between releases.\n - 5 commits were understood as [conventional](https://www.conventionalcommits.org).\n - 2 unique issues were worked on: [#987](https://github.com/GitoxideLabs/gitoxide/issues/987), [#992](https://github.com/GitoxideLabs/gitoxide/issues/992)\n\n### Thanks Clippy\n\n<csr-read-only-do-not-edit/>\n\n[Clippy](https://github.com/rust-lang/rust-clippy) helped 1 time to make code idiomatic. \n\n### Commit Details\n\n<csr-read-only-do-not-edit/>\n\n<details><summary>view details</summary>\n\n * **[#987](https://github.com/GitoxideLabs/gitoxide/issues/987)**\n    - Use a multi-call binary ('uni') to have only one build step ([`4ef9a32`](https://github.com/GitoxideLabs/gitoxide/commit/4ef9a32307a5e91868161a5f683b6b97ad9ebbdd))\n * **[#992](https://github.com/GitoxideLabs/gitoxide/issues/992)**\n    - Both `ein` and `gix` now share some code via the `gitoxide` library. ([`d3ac691`](https://github.com/GitoxideLabs/gitoxide/commit/d3ac691446c9d029eb4f04d111887fa06720939d))\n * **Uncategorized**\n    - Merge branch 'reset' ([`54a8495`](https://github.com/GitoxideLabs/gitoxide/commit/54a849545140f7f1c0c7564c418071c0a76a34e7))\n    - `gix status` with basic index-worktree comparison ([`f094f71`](https://github.com/GitoxideLabs/gitoxide/commit/f094f71dc1a50955552509d108556c01517c6ed6))\n    - Merge branch `dyn`ification ([`f658fcc`](https://github.com/GitoxideLabs/gitoxide/commit/f658fcc52dc2200ae34ca53dc10be97fb9012057))\n    - Use `dyn` trait where possible. ([`072ee32`](https://github.com/GitoxideLabs/gitoxide/commit/072ee32f693a31161cd6a843da6582d13efbb20b))\n    - Update to the latest `prodash` ([`ed327f6`](https://github.com/GitoxideLabs/gitoxide/commit/ed327f6163f54756e58c20f86a563a97efb256ca))\n    - Merge branch 'adjustments-for-cargo' ([`b7560a2`](https://github.com/GitoxideLabs/gitoxide/commit/b7560a2445b62f888bf5aa2ba4c5a47ae037cb23))\n    - Merge branch 'fixes' ([`4bfd1cc`](https://github.com/GitoxideLabs/gitoxide/commit/4bfd1cc8f7922a8c4de6b9d078d54b93e78f51ff))\n    - Thanks clippy ([`0d6d4ec`](https://github.com/GitoxideLabs/gitoxide/commit/0d6d4ec8030d2e8f4c7a9d6f421d54776c4b67fb))\n    - Adapt to changes in `gix-index` and pass skip-hash through for performance.. ([`713cd59`](https://github.com/GitoxideLabs/gitoxide/commit/713cd59f0b1eff6397b80f1e1fceec278532fd59))\n    - `gix free index from-list` and `gix index from-tree` gain `--skip-hash`. ([`3ff5ac0`](https://github.com/GitoxideLabs/gitoxide/commit/3ff5ac0cda9e3e089dc79fdfbff5ff619ee60b1f))\n    - Add more configuration variables prior to potentially using them; remove `index.skipHash` ([`773b6e3`](https://github.com/GitoxideLabs/gitoxide/commit/773b6e3d5b69f819805fc77e963ec2a059bf40be))\n</details>\n\n## 0.29.0 (2023-08-22)\n\n### New Features\n\n - <csr-id-1ccbe16117d58b68b25a8e3e66676a61a07dd49c/> `gix submodule` subcommand for simple submodule listing and information retrieval\n - <csr-id-6bc69e37deb3ebd88af8b0e8ffb9661562dcc679/> `gix index entries --recurse-subomdules` to also list submodules.\n - <csr-id-c30ac0c9f89fb4480c8f8c8c0c06fa046dcd4314/> `gix index entries` with styles and pathspecs.\n   This adds support for more simple git style, which is faster and thus\n   allows for more direct comparisons to `git ls-files`.\n - <csr-id-f194cfc920cc8622215bab5aa6b7b87e4fb9d7b2/> use real pathspecs where it was supported before.\n - <csr-id-cd6cfe4049bacd8d8a691668b5501a673867f149/> add `gix commit verify-signature` to do something akin to `git ... --show-signature`.\n\n### Commit Statistics\n\n<csr-read-only-do-not-edit/>\n\n - 20 commits contributed to the release over the course of 15 calendar days.\n - 30 days passed between releases.\n - 5 commits were understood as [conventional](https://www.conventionalcommits.org).\n - 0 issues like '(#ID)' were seen in commit messages\n\n### Commit Details\n\n<csr-read-only-do-not-edit/>\n\n<details><summary>view details</summary>\n\n * **Uncategorized**\n    - Merge branch 'gix-submodule' ([`8f3f358`](https://github.com/GitoxideLabs/gitoxide/commit/8f3f358800f1fe77d7ba7ebd396a90b692d3c0c1))\n    - `gix submodule` subcommand for simple submodule listing and information retrieval ([`1ccbe16`](https://github.com/GitoxideLabs/gitoxide/commit/1ccbe16117d58b68b25a8e3e66676a61a07dd49c))\n    - Just fmt ([`0d258f4`](https://github.com/GitoxideLabs/gitoxide/commit/0d258f40afcd848509e2b0c7c264e9f346ed1726))\n    - Merge branch 'submodule-in-gix' ([`36f7b78`](https://github.com/GitoxideLabs/gitoxide/commit/36f7b783c67b8a087076a130f5ee9b90b23bc3cc))\n    - `gix index entries --recurse-subomdules` to also list submodules. ([`6bc69e3`](https://github.com/GitoxideLabs/gitoxide/commit/6bc69e37deb3ebd88af8b0e8ffb9661562dcc679))\n    - Merge branch 'submodule-active' ([`a3afaa4`](https://github.com/GitoxideLabs/gitoxide/commit/a3afaa42741616a0f1abeef9b54557e7c2b800cb))\n    - Adapt to changes in `gix` ([`ca972a2`](https://github.com/GitoxideLabs/gitoxide/commit/ca972a244c9b074a2dc89ff3bbf83df0c3853904))\n    - Use `Defaults::from_environment()` when parsing pathspecs. ([`2a99034`](https://github.com/GitoxideLabs/gitoxide/commit/2a99034bf451b1a801650b80705c96ce4c9e61c1))\n    - Optimize startup times of `gix index entries` ([`22477bd`](https://github.com/GitoxideLabs/gitoxide/commit/22477bdcf37419627dbb7afe0df166935825ad2b))\n    - Merge branch 'pathspec-matching' ([`9f4dfe0`](https://github.com/GitoxideLabs/gitoxide/commit/9f4dfe0f0b948280692916b596923959ea2fd9da))\n    - `gix index entries` with styles and pathspecs. ([`c30ac0c`](https://github.com/GitoxideLabs/gitoxide/commit/c30ac0c9f89fb4480c8f8c8c0c06fa046dcd4314))\n    - Use real pathspecs where it was supported before. ([`f194cfc`](https://github.com/GitoxideLabs/gitoxide/commit/f194cfc920cc8622215bab5aa6b7b87e4fb9d7b2))\n    - Merge branch 'handlers-mt' ([`f584d76`](https://github.com/GitoxideLabs/gitoxide/commit/f584d7698d93836daef2000fd369034de46037f0))\n    - Adapt to changes in `gix` ([`a201f0d`](https://github.com/GitoxideLabs/gitoxide/commit/a201f0d45936826ef26ac815acb9d2efbb3d5c68))\n    - Merge branch 'extract-signatures' ([`b37affe`](https://github.com/GitoxideLabs/gitoxide/commit/b37affefecfb30a94431cd21dae6659004ca6244))\n    - Add `gix commit verify-signature` to do something akin to `git ... --show-signature`. ([`cd6cfe4`](https://github.com/GitoxideLabs/gitoxide/commit/cd6cfe4049bacd8d8a691668b5501a673867f149))\n    - Merge branch 'archive-gz' ([`c7d9129`](https://github.com/GitoxideLabs/gitoxide/commit/c7d912917a2dad5c076d0bd645cfda092c66ff79))\n    - Adapt to changes in `gix-archive` ([`feba76d`](https://github.com/GitoxideLabs/gitoxide/commit/feba76d636e3d177c41f120639980f8b46edfcaa))\n    - Merge branch 'submodules' ([`b629f8a`](https://github.com/GitoxideLabs/gitoxide/commit/b629f8a774931d58c0a9b124fa75f85807c6c5d1))\n    - `.gitmodule` file abstraction ([`6a2e6a4`](https://github.com/GitoxideLabs/gitoxide/commit/6a2e6a436f76c8bbf2487f9967413a51356667a0))\n</details>\n\n## 0.28.0 (2023-07-22)\n\n### New Features\n\n - <csr-id-32bbb8b7b1f195adf7e5f06fd2ddc19153516a2f/> add simple CLI for `gix archive`\n\n### Commit Statistics\n\n<csr-read-only-do-not-edit/>\n\n - 8 commits contributed to the release over the course of 29 calendar days.\n - 30 days passed between releases.\n - 1 commit was understood as [conventional](https://www.conventionalcommits.org).\n - 0 issues like '(#ID)' were seen in commit messages\n\n### Commit Details\n\n<csr-read-only-do-not-edit/>\n\n<details><summary>view details</summary>\n\n * **Uncategorized**\n    - Merge branch 'gix-archive' ([`1dda48b`](https://github.com/GitoxideLabs/gitoxide/commit/1dda48ba2fccb93ebac00fe3460e923af43c86ce))\n    - Allow to create additional entries via the command-line ([`4a9d0f1`](https://github.com/GitoxideLabs/gitoxide/commit/4a9d0f1df6f7a20f7f1769fd9c7dae2e53f7e83f))\n    - Add compression support to `gix archive`, which is where it should shine. ([`567b1a4`](https://github.com/GitoxideLabs/gitoxide/commit/567b1a4488c43c1f7099435d10cdddbc3a98a5cc))\n    - Add simple CLI for `gix archive` ([`32bbb8b`](https://github.com/GitoxideLabs/gitoxide/commit/32bbb8b7b1f195adf7e5f06fd2ddc19153516a2f))\n    - Merge branch 'integrate-filtering' ([`b19a56d`](https://github.com/GitoxideLabs/gitoxide/commit/b19a56dcfa9bea86332a84aa4e8fad445e7d1724))\n    - Add keys required to deal with worktree conversions and filters. ([`3fbd7b0`](https://github.com/GitoxideLabs/gitoxide/commit/3fbd7b0c864cf2f1a38ae24e85d47b0b26b271a7))\n    - Merge branch 'basic-filtering' ([`3fd5e16`](https://github.com/GitoxideLabs/gitoxide/commit/3fd5e16e205db18edc21341fb4c2a75d0726f5a5))\n    - Add some configuration variables as planned due to relevancy with filters ([`fa04378`](https://github.com/GitoxideLabs/gitoxide/commit/fa0437899292e9e23db932041220bbeda732c246))\n</details>\n\n## 0.27.0 (2023-06-22)\n\n<csr-id-bcad5c22049d56a25ef69d6c7a3344e78f9a1d4d/>\n\nThis release fixes a possibility for V1 fetches to deadlock if negotiation would span multiple rounds \n(see issue [#882](https://github.com/Byron/gitoxide/issues/882)) for details.\n\n### New Features (BREAKING)\n\n - <csr-id-b82edc8b965344a866039f6c99295db4f8e776e2/> list commit-graph entries by graph traversal, move commit-graph up to `gix` level.\n   This is merely a debug tool to learn about generation numbers.\n   All commit-graph commands now operate on a repository.\n\n### New Features\n\n - <csr-id-c494cfd6f80cf273107c626d0f2cbe054db378ee/> `gix --trace` to also print tree-like instrumentation\n - <csr-id-452ed6b79ed0e12ae214af3c8cd49a87dba91c73/> `gix fetch --open-negotiation-graph[=limit]`\n   Open the negotiation graph as SVG, after optionally specifying a limit\n   as rendering/layouting can be very slow.\n   \n   It's useful to see how the negotiation algorithm is reasoning about each commit.\n - <csr-id-096838ffa529148b2da3a2382a2d1fdbfe5bee5b/> `gix fetch --negotiation-info` to provide additional information about the negotiation phase.\n - <csr-id-bd32e393fedd01e27a4f6984281bcc3182c63b67/> `bit revision list --svg` to create a visual graph of commits.\n   It's mainly a test of how well `layout-rs` performs.\n\n### Chore\n\n - <csr-id-bcad5c22049d56a25ef69d6c7a3344e78f9a1d4d/> Add `clippy::redundant-closure-for-method-calls` lint\n\n### Commit Statistics\n\n<csr-read-only-do-not-edit/>\n\n - 27 commits contributed to the release over the course of 10 calendar days.\n - 15 days passed between releases.\n - 6 commits were understood as [conventional](https://www.conventionalcommits.org).\n - 0 issues like '(#ID)' were seen in commit messages\n\n### Thanks Clippy\n\n<csr-read-only-do-not-edit/>\n\n[Clippy](https://github.com/rust-lang/rust-clippy) helped 1 time to make code idiomatic. \n\n### Commit Details\n\n<csr-read-only-do-not-edit/>\n\n<details><summary>view details</summary>\n\n * **Uncategorized**\n    - Make `gitoxide` publishable again ([`c16b1df`](https://github.com/GitoxideLabs/gitoxide/commit/c16b1dfda63f08c40ebab22b0a07e4617765acf5))\n    - Merge branch 'gix-corpus' ([`5861afb`](https://github.com/GitoxideLabs/gitoxide/commit/5861afb45f32c16eefcd8e7b7480309bf44b6edc))\n    - Add `corpus --dry-run` and `--task-sql-suffix` and `--repo-sql-suffix` ([`4cef57d`](https://github.com/GitoxideLabs/gitoxide/commit/4cef57db735c20da3fa1c56d9c1744e4f653bce0))\n    - Gix-corpus now respects the --trace flag ([`0f973ac`](https://github.com/GitoxideLabs/gitoxide/commit/0f973ac53df631ad2abdf85dbe2453e528c7e6c3))\n    - Adapt to changes in `gix-trace` ([`bd6e3d7`](https://github.com/GitoxideLabs/gitoxide/commit/bd6e3d7682d122997f8d3543eb87a62121ef0669))\n    - Merge branch 'corpus' ([`aa16c8c`](https://github.com/GitoxideLabs/gitoxide/commit/aa16c8ce91452a3e3063cf1cf0240b6014c4743f))\n    - Thanks clippy ([`361cf96`](https://github.com/GitoxideLabs/gitoxide/commit/361cf964f523fff5d92a8641bc3805b7e1082b18))\n    - `gix --trace` to also print tree-like instrumentation ([`c494cfd`](https://github.com/GitoxideLabs/gitoxide/commit/c494cfd6f80cf273107c626d0f2cbe054db378ee))\n    - Run tasks in parallel ([`cfd8e88`](https://github.com/GitoxideLabs/gitoxide/commit/cfd8e88e428075701a162cf8da6986700fd8c5af))\n    - Refresh a corpus repositories by updating all of them. ([`a0b4385`](https://github.com/GitoxideLabs/gitoxide/commit/a0b4385d33112fc3f950ac40d874883e7ad075c0))\n    - Obtain a repository-list with classifiers ([`a4300c8`](https://github.com/GitoxideLabs/gitoxide/commit/a4300c8318ded98dc465405d39ed014e0534de66))\n    - Provide all the meta-data that is needed to make a run (and associate it with that) ([`fcbda1d`](https://github.com/GitoxideLabs/gitoxide/commit/fcbda1d2fee735c8bf3e7357a8691af2f7637922))\n    - A build script to set a `gitoxide` version according to what's in git ([`83f6466`](https://github.com/GitoxideLabs/gitoxide/commit/83f646674118ff6227a605dc17b0be7325481069))\n    - A basic command to perform a corpus run ([`d9e74ff`](https://github.com/GitoxideLabs/gitoxide/commit/d9e74ffdedf585a68d09d04f493c98eda729ff3b))\n    - Merge branch 'gix-revision-graph' ([`036e60a`](https://github.com/GitoxideLabs/gitoxide/commit/036e60a3ad39ba9b018c0b56454f12fad455c7bb))\n    - `gix fetch --open-negotiation-graph[=limit]` ([`452ed6b`](https://github.com/GitoxideLabs/gitoxide/commit/452ed6b79ed0e12ae214af3c8cd49a87dba91c73))\n    - `gix fetch --negotiation-info` to provide additional information about the negotiation phase. ([`096838f`](https://github.com/GitoxideLabs/gitoxide/commit/096838ffa529148b2da3a2382a2d1fdbfe5bee5b))\n    - Make top-level `gix` docs available when using `cargo doc` ([`518159d`](https://github.com/GitoxideLabs/gitoxide/commit/518159da99cf07384e9cacdc1d62a5dc1e02f09c))\n    - `bit revision list --svg` to create a visual graph of commits. ([`bd32e39`](https://github.com/GitoxideLabs/gitoxide/commit/bd32e393fedd01e27a4f6984281bcc3182c63b67))\n    - Merge branch 'help-874-redundant-closures' ([`fe59956`](https://github.com/GitoxideLabs/gitoxide/commit/fe59956ad667303a923d7cfd9ffd72283df41d78))\n    - Merge branch 'fix-commitgraph' ([`2213321`](https://github.com/GitoxideLabs/gitoxide/commit/22133210f2d073eb472c51c83f29b18cf8bdd7ca))\n    - Bring back the no-repo commitgraph for stress-tests to work ([`ff8d42a`](https://github.com/GitoxideLabs/gitoxide/commit/ff8d42aef988b99153950a24efda80acebde5cac))\n    - Move commit-graph implementation into its correct place ([`750b07a`](https://github.com/GitoxideLabs/gitoxide/commit/750b07a69c659cedd46f33396468d4faa7e73f10))\n    - Add `clippy::redundant-closure-for-method-calls` lint ([`bcad5c2`](https://github.com/GitoxideLabs/gitoxide/commit/bcad5c22049d56a25ef69d6c7a3344e78f9a1d4d))\n    - Merge branch 'future-dates' ([`8d2e6a9`](https://github.com/GitoxideLabs/gitoxide/commit/8d2e6a91ac92a033e9e3daad5cffa90263075536))\n    - List commit-graph entries by graph traversal, move commit-graph up to `gix` level. ([`b82edc8`](https://github.com/GitoxideLabs/gitoxide/commit/b82edc8b965344a866039f6c99295db4f8e776e2))\n    - Add options related to commitgraph to `gix config tree` ([`7aaaebf`](https://github.com/GitoxideLabs/gitoxide/commit/7aaaebfea9c1935f0a87ab81cef4261e00e4c159))\n</details>\n\n## 0.26.0 (2023-06-07)\n\nThe main attraction of this release is support for multi-round negotiations thanks to support for the standard negotiations algorithms.\nFurther, `gix index entries` now lists attributes as well, and there is the new `gix attribute query` sub-command in the vain of `git check-attrs`.\n\n### New Features\n\n - <csr-id-e1fcc7f69e7b95aeac8cbbde3719a1e6b9dafeba/> `gix attributes validate` to validate attributes and ignore against `git` as baseline.\n   Use this command to test the entire index for ignored paths and their attributes and use\n   `git check-attr` and `git check-ignore` to validate that `git` agrees. Collect all\n   mismatches and print them.\n - <csr-id-450b2325909459c7061f3d02f461c3f0f20f1e86/> `--statistics` for `gix excludes query`\n   With it one gets some insights into the work done to fulfil the query.\n - <csr-id-bfdcb147cdc3d0338a4cd2bc915b0e0eeced1e99/> `gix attribute query` as something similar to `git check-attrs`.\n - <csr-id-b8db2072bb6a5625f37debe9e58d08461ece67dd/> `no-repo index from-list` to create an index with empty files from the given list.\n   The list could be created with `find . -type f` for example.\n - <csr-id-13a0f1e568cf9ee462ecf01d416cfcd4949fd9c6/> add pro-forma library to allow feature documentation of `gitoxide` on docs.rs\n\n### Commit Statistics\n\n<csr-read-only-do-not-edit/>\n\n - 17 commits contributed to the release over the course of 34 calendar days.\n - 40 days passed between releases.\n - 5 commits were understood as [conventional](https://www.conventionalcommits.org).\n - 0 issues like '(#ID)' were seen in commit messages\n\n### Commit Details\n\n<csr-read-only-do-not-edit/>\n\n<details><summary>view details</summary>\n\n * **Uncategorized**\n    - `just fmt` ([`ffc1276`](https://github.com/GitoxideLabs/gitoxide/commit/ffc1276e0c991ac33ce842f5dca0b45ac69680c0))\n    - Merge branch 'integrate-gix-negotiate' ([`ae845de`](https://github.com/GitoxideLabs/gitoxide/commit/ae845dea6cee6523c88a23d7a14293589cf8092f))\n    - Adapt to changes in `gix` ([`7983f6f`](https://github.com/GitoxideLabs/gitoxide/commit/7983f6fd4ef242d494962fe35b8b8f91a6135f32))\n    - Keep track of core.alternateRefsCommand ([`d925896`](https://github.com/GitoxideLabs/gitoxide/commit/d9258969047a53bcb437b4ebd9467e6c95d715d7))\n    - Merge branch 'auto-clippy' ([`dbf8aa1`](https://github.com/GitoxideLabs/gitoxide/commit/dbf8aa19d19109195d0274928eae4b94f248cd88))\n    - Include custom clippy settings ([`b057500`](https://github.com/GitoxideLabs/gitoxide/commit/b057500dd3e6b75be3ebcd258cda0b946bedd9e1))\n    - Merge branch 'consecutive-negotiation' ([`4507f94`](https://github.com/GitoxideLabs/gitoxide/commit/4507f94984c811ea098e43472e5f54ec4dbb90c1))\n    - Support reading the fetch algorithm from configuration ([`33b7770`](https://github.com/GitoxideLabs/gitoxide/commit/33b777074db21db8cd060ecf8cfdac0409a7e10c))\n    - Merge branch 'gix-attributes-validate' ([`a849da8`](https://github.com/GitoxideLabs/gitoxide/commit/a849da8e35ca14fef9a2431fe1bb1c05b249680e))\n    - `gix attributes validate` to validate attributes and ignore against `git` as baseline. ([`e1fcc7f`](https://github.com/GitoxideLabs/gitoxide/commit/e1fcc7f69e7b95aeac8cbbde3719a1e6b9dafeba))\n    - Merge branch 'gix-attribute-query' ([`1d70213`](https://github.com/GitoxideLabs/gitoxide/commit/1d70213b5c41611c9a6172901b78844a76dece0e))\n    - `--statistics` for `gix excludes query` ([`450b232`](https://github.com/GitoxideLabs/gitoxide/commit/450b2325909459c7061f3d02f461c3f0f20f1e86))\n    - `gix attribute query` as something similar to `git check-attrs`. ([`bfdcb14`](https://github.com/GitoxideLabs/gitoxide/commit/bfdcb147cdc3d0338a4cd2bc915b0e0eeced1e99))\n    - `no-repo index from-list` to create an index with empty files from the given list. ([`b8db207`](https://github.com/GitoxideLabs/gitoxide/commit/b8db2072bb6a5625f37debe9e58d08461ece67dd))\n    - Merge branch 'fix-841' ([`edeb4de`](https://github.com/GitoxideLabs/gitoxide/commit/edeb4de2fa0f4e8ecab0c7f4af169d4443cf0eaf))\n    - Add pro-forma libaray to allow feature documentation of `gitoxide` on docs.rs ([`13a0f1e`](https://github.com/GitoxideLabs/gitoxide/commit/13a0f1e568cf9ee462ecf01d416cfcd4949fd9c6))\n    - Use unlimited parallelism for `jwalk` to have a better comparison. ([`d67551d`](https://github.com/GitoxideLabs/gitoxide/commit/d67551d4e43359990b4391ea2902eaf13631dd99))\n</details>\n\n## 0.25.0 (2023-04-27)\n\nA maintenance release without user-facing changes, just to fix installation\n\n## 0.24.0 (2023-04-27)\n\n### New Features\n\n - <csr-id-08e8fc2152794652ba1c986df493c2ac915af9e7/> `gix index entries` also prints attributes.\n - <csr-id-9723e1addf52cc336d59322de039ea0537cdca36/> `gix clone` and `gix fetch` with controls for shallow repositories.\n - <csr-id-f93e964b1f7ba95861966ce58ebef477013dd1b4/> `ein t trace-path` know accepts the `trace-file` alias.\n\n### Bug Fixes\n\n - <csr-id-dd14a80a78fea3f092b1d5300637c80cfd9e59a7/> printing to stdout for commands that don't show progress is greatly improved.\n   Previously it would have to lock `stdout` on each write, now this is done only once.\n - <csr-id-7bd8823ab4241d6d0401f03aec8c0d34f68c347c/> opening repositories without 'strict' mode also ignores IO errors.\n   These will instead be logged, but won't make it impossible to open an\n   otherwise fine repository.\n\n### New Features (BREAKING)\n\n - <csr-id-ca8ebdfb9647ff15b0293823bb3bb3c6779c8dd2/> turn `gix free index entries` into `gix index entries`.\n\n### Commit Statistics\n\n<csr-read-only-do-not-edit/>\n\n - 25 commits contributed to the release.\n - 6 commits were understood as [conventional](https://www.conventionalcommits.org).\n - 2 unique issues were worked on: [#301](https://github.com/GitoxideLabs/gitoxide/issues/301), [#790](https://github.com/GitoxideLabs/gitoxide/issues/790)\n\n### Commit Details\n\n<csr-read-only-do-not-edit/>\n\n<details><summary>view details</summary>\n\n * **[#301](https://github.com/GitoxideLabs/gitoxide/issues/301)**\n    - Update crate status ([`ed63ec0`](https://github.com/GitoxideLabs/gitoxide/commit/ed63ec08ac651d642123d5abd1d4589e67049ff2))\n * **[#790](https://github.com/GitoxideLabs/gitoxide/issues/790)**\n    - Opening repositories without 'strict' mode also ignores IO errors. ([`7bd8823`](https://github.com/GitoxideLabs/gitoxide/commit/7bd8823ab4241d6d0401f03aec8c0d34f68c347c))\n * **Uncategorized**\n    - Merge branch 'index-entries-attrs' ([`f37a930`](https://github.com/GitoxideLabs/gitoxide/commit/f37a930aefa27e67f0b693ba9669cc26d49044fa))\n    - `gix index entries` also prints attributes. ([`08e8fc2`](https://github.com/GitoxideLabs/gitoxide/commit/08e8fc2152794652ba1c986df493c2ac915af9e7))\n    - Printing to stdout for commands that don't show progress is greatly improved. ([`dd14a80`](https://github.com/GitoxideLabs/gitoxide/commit/dd14a80a78fea3f092b1d5300637c80cfd9e59a7))\n    - Turn `gix free index entries` into `gix index entries`. ([`ca8ebdf`](https://github.com/GitoxideLabs/gitoxide/commit/ca8ebdfb9647ff15b0293823bb3bb3c6779c8dd2))\n    - Merge branch 'attributes-cache' ([`3456c84`](https://github.com/GitoxideLabs/gitoxide/commit/3456c845dfeedd2fa96b4313b1a84c8cbe9433c5))\n    - Adjust to changes in `gix-worktree` ([`13a070f`](https://github.com/GitoxideLabs/gitoxide/commit/13a070f405230d52e4377e18f6bdc5c673b718a0))\n    - Merge branch 'fix-819' ([`69faad0`](https://github.com/GitoxideLabs/gitoxide/commit/69faad0d7cc100de54d757d42acc152a22edc022))\n    - Add information about configuration flags related to fsync usage ([`8d5762c`](https://github.com/GitoxideLabs/gitoxide/commit/8d5762c2031cc24bcea7eaba2911b907ba443b72))\n    - Merge branch 'main' into dev ([`23ee47f`](https://github.com/GitoxideLabs/gitoxide/commit/23ee47fb24c197f8437bd426544b2aa74e005bdc))\n    - Merge branch 'worktree-stack' ([`3d47919`](https://github.com/GitoxideLabs/gitoxide/commit/3d47919c1a2f83fc7c1fd7ae590d098057a22626))\n    - Assure we load all gitattributes when needed. ([`9237121`](https://github.com/GitoxideLabs/gitoxide/commit/923712175fffaa6d0b71e109f243bdd6bea3ff36))\n    - Merge branch 'fix-790' ([`ee36e5b`](https://github.com/GitoxideLabs/gitoxide/commit/ee36e5bb985e9ad90bc382cdd051a8b5295ca18c))\n    - Add group headings to all shallow-related arguments. ([`bbb4cb0`](https://github.com/GitoxideLabs/gitoxide/commit/bbb4cb03ee2bcd0c5dd0635da542a942179cf6fd))\n    - Keep track of `index.skipHash` ([`f29f35c`](https://github.com/GitoxideLabs/gitoxide/commit/f29f35cfc43f435f15aebc4d678f01d7f7ab7fbf))\n    - Make fmt ([`3836cc0`](https://github.com/GitoxideLabs/gitoxide/commit/3836cc0c9c3e1158b56142b924483c8a77217d53))\n    - Merge branch 'various-fixes' ([`cc0f506`](https://github.com/GitoxideLabs/gitoxide/commit/cc0f5061fba27d57022dc616c941034b98fd4875))\n    - Fix clap derive declaration of conflicts ([`c502fa8`](https://github.com/GitoxideLabs/gitoxide/commit/c502fa8362cb449dc1837a0b8febfad03d9f66ef))\n    - Merge branch 'shallow-protocol' ([`531dd19`](https://github.com/GitoxideLabs/gitoxide/commit/531dd19502b8b635fb1a60f747eb381fd12e00ca))\n    - `gix clone` and `gix fetch` with controls for shallow repositories. ([`9723e1a`](https://github.com/GitoxideLabs/gitoxide/commit/9723e1addf52cc336d59322de039ea0537cdca36))\n    - Improve error handling and reporting of `ein t query` ([`d5616b6`](https://github.com/GitoxideLabs/gitoxide/commit/d5616b66052cd20cbfabbecc1f5f500f754e89a2))\n    - Make fmt ([`8ef1cb2`](https://github.com/GitoxideLabs/gitoxide/commit/8ef1cb293434c7b9e1fda4a6963368e0435920a9))\n    - Merge branch 'rename-tracking' ([`3827ac6`](https://github.com/GitoxideLabs/gitoxide/commit/3827ac6c6b002219a7fb0877ec01d8afc909ca4c))\n    - `ein t trace-path` know accepts the `trace-file` alias. ([`f93e964`](https://github.com/GitoxideLabs/gitoxide/commit/f93e964b1f7ba95861966ce58ebef477013dd1b4))\n</details>\n\n## 0.23.0 (2023-02-24)\n\nThis release adds the new `ein tool query` analytics engine, which maintains a database of a git repository as acceleration data structure to run useful queries on.\nIt's nothing more than an MVP, and was inspired by a program to accelerate [Git-Heat-Map](https://github.com/jmforsythe/Git-Heat-Map/pull/6).\n\n### New Features\n\n - <csr-id-f8cc62376bd6e940be4c41e84ccbfce111e64e39/> `ein tool query` - a git analytics engine.\n   A tool to build and efficiently maintain a database of information contained\n   in a git repository, preferably the kind of information that is expensive to obtain,\n   in order to facilitate queries that would be prohibitive without an accelerating\n   data structure.\n - <csr-id-49520d1f03ee1d011f6e9f2eb07084d327fe95ae/> `gix tree entries` with rev-spec support.\n   Previously it wanted a tree-id, now it can derive it itself.\n\n### Commit Statistics\n\n<csr-read-only-do-not-edit/>\n\n - 4 commits contributed to the release over the course of 7 calendar days.\n - 7 days passed between releases.\n - 2 commits were understood as [conventional](https://www.conventionalcommits.org).\n - 0 issues like '(#ID)' were seen in commit messages\n\n### Commit Details\n\n<csr-read-only-do-not-edit/>\n\n<details><summary>view details</summary>\n\n * **Uncategorized**\n    - Merge branch 'rename-tracking' ([`550144a`](https://github.com/GitoxideLabs/gitoxide/commit/550144a5fd37d501d86f4b1c4db2948d951d1c93))\n    - `ein tool query` - a git analytics engine. ([`f8cc623`](https://github.com/GitoxideLabs/gitoxide/commit/f8cc62376bd6e940be4c41e84ccbfce111e64e39))\n    - `gix tree entries` with rev-spec support. ([`49520d1`](https://github.com/GitoxideLabs/gitoxide/commit/49520d1f03ee1d011f6e9f2eb07084d327fe95ae))\n    - Fix journey tests; improve panic handling when --progress is used. ([`571121c`](https://github.com/GitoxideLabs/gitoxide/commit/571121ccceaab25323bc6cd1ed2e2a1560289a57))\n</details>\n\n## 0.22.1 (2023-02-17)\n\n### Bug Fixes\n\n - <csr-id-73372d0bcdca8cf201f057ebee8d67a8e4752625/> re-enable local-time support for all binaries\n   The `time` improved the way one can opt-in to potential unsoundness\n   in their local time support, forcing the application to make that\n   decision at runtime.\n\n### Commit Statistics\n\n<csr-read-only-do-not-edit/>\n\n - 1 commit contributed to the release.\n - 1 commit was understood as [conventional](https://www.conventionalcommits.org).\n - 0 issues like '(#ID)' were seen in commit messages\n\n### Commit Details\n\n<csr-read-only-do-not-edit/>\n\n<details><summary>view details</summary>\n\n * **Uncategorized**\n    - Re-enable local-time support for all binaries ([`73372d0`](https://github.com/GitoxideLabs/gitoxide/commit/73372d0bcdca8cf201f057ebee8d67a8e4752625))\n</details>\n\n## 0.22.0 (2023-02-17)\n\nA maintenance release without user-facing changes.\n\n### Commit Statistics\n\n<csr-read-only-do-not-edit/>\n\n - 7 commits contributed to the release.\n - 7 days passed between releases.\n - 0 commits were understood as [conventional](https://www.conventionalcommits.org).\n - 0 issues like '(#ID)' were seen in commit messages\n\n### Commit Details\n\n<csr-read-only-do-not-edit/>\n\n<details><summary>view details</summary>\n\n * **Uncategorized**\n    - Merge branch 'rename-crates' into inform-about-gix-rename ([`c9275b9`](https://github.com/GitoxideLabs/gitoxide/commit/c9275b99ea43949306d93775d9d78c98fb86cfb1))\n    - Adjust to renaming for `git-protocol` to `gix-protocol` ([`823795a`](https://github.com/GitoxideLabs/gitoxide/commit/823795addea3810243cab7936cd8ec0137cbc224))\n    - Adjust to renaming of `git-features` to `gix-features` ([`e2dd68a`](https://github.com/GitoxideLabs/gitoxide/commit/e2dd68a417aad229e194ff20dbbfd77668096ec6))\n    - Merge branch 'rename-crates' ([`6461c3d`](https://github.com/GitoxideLabs/gitoxide/commit/6461c3da4d6daee857606d94294c3f87fc36965a))\n    - Rename `git-repository` to `gix` ([`7bed2a9`](https://github.com/GitoxideLabs/gitoxide/commit/7bed2a96604397fa990f427b1a970ddeb6f09f1c))\n    - Merge branch 'rename-tracking' ([`9e7d792`](https://github.com/GitoxideLabs/gitoxide/commit/9e7d79273487abfcb99ed2d439c475a659cd25e6))\n    - Keep track of all keys relevant renaming when merging and obtaining status ([`0f2ed59`](https://github.com/GitoxideLabs/gitoxide/commit/0f2ed59b928ef3f4d6cd5a0cd0380504891d92f2))\n</details>\n\n## 0.21.0 (2023-02-09)\n\n<csr-id-1d9a5e925890883e9e712db14ac82411ad2fdfc3/>\n\n### Chore\n\n - <csr-id-1d9a5e925890883e9e712db14ac82411ad2fdfc3/> upgrade to clap 4.1\n\n### New Features\n\n - <csr-id-b81f650b476354c5bd030aa03b9a723d9d7a0970/> `gix clone <url>` is now permitted without specifying a destination directory.\n   Note that the implementation doesn't take into account potential redirects and renames\n   as it's implemented only with the first URL it sees (not the redirected ones).\n - <csr-id-38ae61a805bd8cca5df8d1c1dcf3a8a0f9c85f5a/> make more HTTP options available\n   - `http.schannelCheckRevoke`\n\n### Commit Statistics\n\n<csr-read-only-do-not-edit/>\n\n - 15 commits contributed to the release over the course of 47 calendar days.\n - 49 days passed between releases.\n - 3 commits were understood as [conventional](https://www.conventionalcommits.org).\n - 1 unique issue was worked on: [#683](https://github.com/GitoxideLabs/gitoxide/issues/683)\n\n### Thanks Clippy\n\n<csr-read-only-do-not-edit/>\n\n[Clippy](https://github.com/rust-lang/rust-clippy) helped 2 times to make code idiomatic. \n\n### Commit Details\n\n<csr-read-only-do-not-edit/>\n\n<details><summary>view details</summary>\n\n * **[#683](https://github.com/GitoxideLabs/gitoxide/issues/683)**\n    - `gix clone <url>` is now permitted without specifying a destination directory. ([`b81f650`](https://github.com/GitoxideLabs/gitoxide/commit/b81f650b476354c5bd030aa03b9a723d9d7a0970))\n * **Uncategorized**\n    - Make fmt ([`e22080e`](https://github.com/GitoxideLabs/gitoxide/commit/e22080e4a29d0bad15a99d565a5e3e304a8743ec))\n    - Merge branch 'adjustments-for-cargo' ([`7bba270`](https://github.com/GitoxideLabs/gitoxide/commit/7bba2709488b7eb999b8136dbab03af977241678))\n    - `gix progress` now usees the configuration tree as basis for data. ([`ea76bf5`](https://github.com/GitoxideLabs/gitoxide/commit/ea76bf5ba1b06bcf94bcadf5129ce265c90144d3))\n    - Thanks clippy ([`f7b8794`](https://github.com/GitoxideLabs/gitoxide/commit/f7b879448258a058b8607916da0ddf13b83896d9))\n    - Upgrade to clap 4.1 ([`1d9a5e9`](https://github.com/GitoxideLabs/gitoxide/commit/1d9a5e925890883e9e712db14ac82411ad2fdfc3))\n    - Merge branch 'patch-1' ([`b93f0c4`](https://github.com/GitoxideLabs/gitoxide/commit/b93f0c49fc677b6c19aea332cbfc1445ce475375))\n    - Thanks clippy ([`9e04685`](https://github.com/GitoxideLabs/gitoxide/commit/9e04685dd3f109bfb27663f9dc7c04102e660bf2))\n    - Upgrade `tabled` ([`7aed326`](https://github.com/GitoxideLabs/gitoxide/commit/7aed326e706b13ae88f98880de055201b2a869cc))\n    - Merge branch 'gix-clone-improvements' ([`76c99f3`](https://github.com/GitoxideLabs/gitoxide/commit/76c99f3005f1b0031921b536f5d268715e41f3c8))\n    - Merge branch 'adjustments-for-cargo' ([`f8c562a`](https://github.com/GitoxideLabs/gitoxide/commit/f8c562a559e6dc3377583cc7200585dad7c3d481))\n    - Adapt to changes in git-repository and git-transport ([`d336368`](https://github.com/GitoxideLabs/gitoxide/commit/d336368ea2b6e5918b709220522cf1509ef30be2))\n    - Update planned usage of `ssh` related configuration variables. ([`3f91088`](https://github.com/GitoxideLabs/gitoxide/commit/3f910880fdf691b59460eea272772c7aff284716))\n    - Merge branch 'adjustments-for-cargo' ([`d821fc5`](https://github.com/GitoxideLabs/gitoxide/commit/d821fc5b4ef4ba606f2b6bb68b66f7260a0205dc))\n    - Make more HTTP options available ([`38ae61a`](https://github.com/GitoxideLabs/gitoxide/commit/38ae61a805bd8cca5df8d1c1dcf3a8a0f9c85f5a))\n</details>\n\n## 0.20.0 (2022-12-22)\n\nThis release also fixes compatibility issues that formerly prevented to fetch or clone form `https://googlesource.com`.\n\n### Changed\n\n - <csr-id-a4ac9cf3e667a3059e33aac8188150529578622d/> represent `GIT_(COMMITTER|AUTHOR)_(NAME|EMAIL|DATE)` with git configuration.\n   That way it becomes more obvious where values are coming from.\n\n### New Features\n\n - <csr-id-98143699bb9481b010e21647f64dcb8a74bd80ad/> auto-enabled verbosity for `gix fetch/clone` and add `--no-verbose`.\n   I found myself always adding (and having to remember to add) the `-v` flag\n   for long-running operations so these should be able to default to a\n   higher verbosity level.\n   \n   To counter that, there is a new `--no-verbose` flag to turn that off.\n - <csr-id-aeb4a1d5cb76316058c7d687e26f5c7db351c09c/> add `--strict` option to enforce strict checking of configuration.\n - <csr-id-8c9c243fc574dc17b92a8e2025fbd8efdf2833da/> `gix odb stats` to calculate statistics on the object database.\n   This includes the amount of objects along with a listing of where they are\n   located.\n - <csr-id-e2b8c5dce7185b5fa194b90f32e642e5c9d1227f/> `gix clone --no-tags` support.\n   This is the same as `git clone --no-tags`.\n\n### Changed (BREAKING)\n\n - <csr-id-49f39d6bb487c0254176a5082f2c7851b83952a1/> `open::ReplacementObjects` is removed in favor of two custom git-configuration flags.\n   Now it's possible to map the environment variables `GIT_REPLACE_REF_BASE` and `GIT_NO_REPLACE_OBJECTS`\n   to custom git configuration keys which can also be set, namely `gitoxide.odb.replaceObjectsRefBase`\n   and `gitoxide.odb.noReplaceObjects`.\n   \n   Along with the possibility of disabling the usage of `GIT_` prefixed environment variables one\n   reaches the previous level of control without making object replacement a special case.\n\n### New Features (BREAKING)\n\n - <csr-id-becbd8d896a1663f1607be4e86e632773e926f1f/> represent object cache configuration like `GITOXIDE_PACK_CACHE_MEMORY` in git-configuration.\n   That way there is a unified system for how to set values, which may be overridable by configuration\n   variables or not.\n   \n   With this changes, the explicit application of environment variables for setting the cache\n   isn't required anymore as everything happens using git-configuration, and automatically,\n   while providing full control like before.\n\n### Commit Statistics\n\n<csr-read-only-do-not-edit/>\n\n - 22 commits contributed to the release over the course of 30 calendar days.\n - 30 days passed between releases.\n - 7 commits were understood as [conventional](https://www.conventionalcommits.org).\n - 0 issues like '(#ID)' were seen in commit messages\n\n### Commit Details\n\n<csr-read-only-do-not-edit/>\n\n<details><summary>view details</summary>\n\n * **Uncategorized**\n    - Fix label for `ein t estimate-hours` command ([`4c93de1`](https://github.com/GitoxideLabs/gitoxide/commit/4c93de113898c6ff6ae1da3ea38d646626c86205))\n    - Merge branch 'read-header' ([`3d01252`](https://github.com/GitoxideLabs/gitoxide/commit/3d0125271ec7bd606734bd74757a7e31a18c7ce5))\n    - `gix odb stats` to calculate statistics on the object database. ([`8c9c243`](https://github.com/GitoxideLabs/gitoxide/commit/8c9c243fc574dc17b92a8e2025fbd8efdf2833da))\n    - Merge branch 'main' into read-split-index ([`c57bdde`](https://github.com/GitoxideLabs/gitoxide/commit/c57bdde6de37eca9672ea715962bbd02aa3eb055))\n    - Merge branch 'adjustments-for-cargo' ([`083909b`](https://github.com/GitoxideLabs/gitoxide/commit/083909bc7eb902eeee2002034fdb6ed88280dc5c))\n    - `gix clone --no-tags` support. ([`e2b8c5d`](https://github.com/GitoxideLabs/gitoxide/commit/e2b8c5dce7185b5fa194b90f32e642e5c9d1227f))\n    - Update `gix progress` to inform about `remote.<name>.tagOpt` ([`3ebb340`](https://github.com/GitoxideLabs/gitoxide/commit/3ebb3405f265fbd78a89c01bd30c3ad34036ef84))\n    - Merge branch 'adjustments-for-cargo' ([`70ccbb2`](https://github.com/GitoxideLabs/gitoxide/commit/70ccbb21b1113bdeb20b52d274141a9fdb75f579))\n    - Upgrade to prodash v22 for API improvements ([`77ab98d`](https://github.com/GitoxideLabs/gitoxide/commit/77ab98dd41c3849b674d8b3794ef29219ca1447d))\n    - Auto-enabled verbosity for `gix fetch/clone` and add `--no-verbose`. ([`9814369`](https://github.com/GitoxideLabs/gitoxide/commit/98143699bb9481b010e21647f64dcb8a74bd80ad))\n    - Switch from `atty` to `is-terminal` ([`7304bc1`](https://github.com/GitoxideLabs/gitoxide/commit/7304bc1c0efaad64a39520962072343ef02f6c25))\n    - Adapt to changes in `git-repository` ([`c4f68bf`](https://github.com/GitoxideLabs/gitoxide/commit/c4f68bf775b854625d901fe0bfcbdd38f656d408))\n    - Represent object cache configuration like `GITOXIDE_PACK_CACHE_MEMORY` in git-configuration. ([`becbd8d`](https://github.com/GitoxideLabs/gitoxide/commit/becbd8d896a1663f1607be4e86e632773e926f1f))\n    - Represent `GIT_(COMMITTER|AUTHOR)_(NAME|EMAIL|DATE)` with git configuration. ([`a4ac9cf`](https://github.com/GitoxideLabs/gitoxide/commit/a4ac9cf3e667a3059e33aac8188150529578622d))\n    - `open::ReplacementObjects` is removed in favor of two custom git-configuration flags. ([`49f39d6`](https://github.com/GitoxideLabs/gitoxide/commit/49f39d6bb487c0254176a5082f2c7851b83952a1))\n    - Apply related environment variables as config overrides ([`9441c26`](https://github.com/GitoxideLabs/gitoxide/commit/9441c261bcae61d1d1e674b5e783f38b0471be29))\n    - Adapt to changes in `git-repository` ([`f1a4c8b`](https://github.com/GitoxideLabs/gitoxide/commit/f1a4c8b42ed8c94e7fe3a61eb222cf6b0886f4ee))\n    - Update progress of http.proxyAuthMethod ([`872dc1a`](https://github.com/GitoxideLabs/gitoxide/commit/872dc1ab43ce626b4166dae3dc8bddf8e85c9409))\n    - Add `--strict` option to enforce strict checking of configuration. ([`aeb4a1d`](https://github.com/GitoxideLabs/gitoxide/commit/aeb4a1d5cb76316058c7d687e26f5c7db351c09c))\n    - Don't lock stdout/stderr as it will deadlock on dbg-printing ([`62cae0e`](https://github.com/GitoxideLabs/gitoxide/commit/62cae0e6bfe8113c0225152a896338017c8de474))\n    - Adapt to changes in `git-config` ([`1c2e755`](https://github.com/GitoxideLabs/gitoxide/commit/1c2e755e517b0f9fe8671187f5c30076ce43a3c9))\n    - Merge branch 'main' into http-config ([`bcd9654`](https://github.com/GitoxideLabs/gitoxide/commit/bcd9654e56169799eb706646da6ee1f4ef2021a9))\n</details>\n\n## 0.19.0 (2022-11-21)\n\n### New Features\n\n - <csr-id-3ddbd2de369b521fa3f21935f10fe9c248840893/> Make `reqwest` TLS backend configuration easy.\n   We provide the choice of `native-tls` or `rust-tls`. If none is\n   provided, the user can configure on their on similar to how it's done\n   in `gix`.\n   \n   Please note that a choice now has to be made or HTTPS will not be\n   available, so use one of…\n   \n   * blocking-http-transport-reqwest-rust-tls\n* blocking-http-transport-reqwest-native-tls\n\n### Commit Statistics\n\n<csr-read-only-do-not-edit/>\n\n - 1 commit contributed to the release.\n - 4 days passed between releases.\n - 1 commit was understood as [conventional](https://www.conventionalcommits.org).\n - 0 issues like '(#ID)' were seen in commit messages\n\n### Commit Details\n\n<csr-read-only-do-not-edit/>\n\n<details><summary>view details</summary>\n\n * **Uncategorized**\n    - Make `reqwest` TLS backend configuration easy. ([`3ddbd2d`](https://github.com/GitoxideLabs/gitoxide/commit/3ddbd2de369b521fa3f21935f10fe9c248840893))\n</details>\n\n## 0.18.0 (2022-11-17)\n\nThis releases fixes `gix fetch` so that it is able to clone or fetch `pytorch` or other repositories on case-insensitive file systems. \n\nIt's also an attempt to trigger CI to build binary releases.\n\n### Commit Statistics\n\n<csr-read-only-do-not-edit/>\n\n - 9 commits contributed to the release over the course of 9 calendar days.\n - 10 days passed between releases.\n - 0 commits were understood as [conventional](https://www.conventionalcommits.org).\n - 0 issues like '(#ID)' were seen in commit messages\n\n### Commit Details\n\n<csr-read-only-do-not-edit/>\n\n<details><summary>view details</summary>\n\n * **Uncategorized**\n    - Merge branch 'http-config' ([`665b53e`](https://github.com/GitoxideLabs/gitoxide/commit/665b53e1c2e1de65fafa28b669f58977868bbc81))\n    - Document that histogram is now the default diff algorithm ([`c76572b`](https://github.com/GitoxideLabs/gitoxide/commit/c76572b3662776b524a7e4a1fd96d2eaa22a560f))\n    - Introduce new `gitoxide.http.connectTimeout` for more control for git clients ([`2ab80e4`](https://github.com/GitoxideLabs/gitoxide/commit/2ab80e4c95a7bf3c7e56bb5a95ac78ac930fc9ee))\n    - Keep track of `no_proxy` environment variable support ([`f0625de`](https://github.com/GitoxideLabs/gitoxide/commit/f0625de13073de4767881ed0398d0cd2791b0ad2))\n    - Update progress ([`3d9fb6c`](https://github.com/GitoxideLabs/gitoxide/commit/3d9fb6c095a272d5ddf6c5b6ce96820bc9d59cbb))\n    - Don't forget to update 'progress' ([`0ec5220`](https://github.com/GitoxideLabs/gitoxide/commit/0ec5220fea50f06eb61bafff525111ce2435c994))\n    - Update progress with gitoxide.userAgent ([`1c012f4`](https://github.com/GitoxideLabs/gitoxide/commit/1c012f4c2e05e1f565fc51fffee2f7d278e5a7de))\n    - Plan for user agent string configuration ([`f5499a5`](https://github.com/GitoxideLabs/gitoxide/commit/f5499a55ed0230e2852b41b54648003e3d6cb859))\n    - Keep track of http related configuration keys. ([`1afaebd`](https://github.com/GitoxideLabs/gitoxide/commit/1afaebdcae977af8a9a0f0788ec754746d6d05bb))\n</details>\n\n## 0.17.0 (2022-11-06)\n\n### New Features\n\n - <csr-id-e973dfeaf17ca63385496202e9fdcdd912e20f42/> `gix remote ref-map --show-unmapped-remote-refs`.\n   That way it's more obvious to see what was filtered out by ref-specs.\n   \n   It's also great to validate that server-side filtering via ref-prefix\n   will not send refs that are referred to by symbolic refs that are\n   not filtered out. That should be fine as it's all about objects,\n   it's just something to deal with as we may have to deal with symbolic\n   refs that aren't in the set of refs the server sent to us.\n - <csr-id-b1edb9e3537df86669714f03666f4a88e0ac3709/> diff algorithm is controlled by git configuration `diff.algorithm`\n - <csr-id-20259da4ddf9fabfb2d2bd4e2274c0ed42bdb0e5/> `ein t hours` allows to specify the amount of worker threads.\n\n### Bug Fixes\n\n - <csr-id-3a053284cfefe27873dcc5b4f74d63a560bb5d41/> collect `stderr` and print it afterwards to avoid intersection with line progress.\n   Previously it would happen that stderr would be printed directly and mix\n   with the line progress (as in `-v`) which also prints to stderr.\n   \n   Now errors are collected and output at the end once the line renderer\n   was already shutdown.\n\n### Changed (BREAKING)\n\n - <csr-id-3a0fb1b45c757add49677450836c0aaf6179a2b5/> remote `lock_mode` from all methods dealing with reference edits.\n   It is now read from `core.filesRefLockTimeout` accordingly.\n\n### New Features (BREAKING)\n\n - <csr-id-92bbe335688e4c8e96061663e71a599022f7b96f/> remove `gix remote --url` in favor of determining the intention similar to `git fetch`\n\n### Commit Statistics\n\n<csr-read-only-do-not-edit/>\n\n - 65 commits contributed to the release.\n - 6 commits were understood as [conventional](https://www.conventionalcommits.org).\n - 2 unique issues were worked on: [#450](https://github.com/GitoxideLabs/gitoxide/issues/450), [#536](https://github.com/GitoxideLabs/gitoxide/issues/536)\n\n### Thanks Clippy\n\n<csr-read-only-do-not-edit/>\n\n[Clippy](https://github.com/rust-lang/rust-clippy) helped 1 time to make code idiomatic. \n\n### Commit Details\n\n<csr-read-only-do-not-edit/>\n\n<details><summary>view details</summary>\n\n * **[#450](https://github.com/GitoxideLabs/gitoxide/issues/450)**\n    - Keep track of several branch related keys ([`443a75a`](https://github.com/GitoxideLabs/gitoxide/commit/443a75a6098968995bed644c84ed8ce9d8ed0c34))\n    - `gix remote ref-map --show-unmapped-remote-refs`. ([`e973dfe`](https://github.com/GitoxideLabs/gitoxide/commit/e973dfeaf17ca63385496202e9fdcdd912e20f42))\n    - Update progress as we now respect `diff.algorithm` ([`30d32e7`](https://github.com/GitoxideLabs/gitoxide/commit/30d32e7255986e6e7ec92d55c86b747d7486e183))\n    - Apply configuration overrides to newborn repo during clone ([`c8ef759`](https://github.com/GitoxideLabs/gitoxide/commit/c8ef759923a3c980b5a23c868f38804eccbc0fbc))\n    - Collect `stderr` and print it afterwards to avoid intersection with line progress. ([`3a05328`](https://github.com/GitoxideLabs/gitoxide/commit/3a053284cfefe27873dcc5b4f74d63a560bb5d41))\n    - Reduce verbosity of `clone` and print once entire clone is done ([`9a476df`](https://github.com/GitoxideLabs/gitoxide/commit/9a476df519bccfc6bcda8bd02aa4c1573a2691e7))\n    - First rough sketch of `gix clone` ([`23a5e8b`](https://github.com/GitoxideLabs/gitoxide/commit/23a5e8b658c5642c3f3060e013fd0eab06cbf027))\n    - Progress totals (planned, devitaion) ([`63947ae`](https://github.com/GitoxideLabs/gitoxide/commit/63947ae77ecb5952d7b5da5c6695f002bb7a7c4c))\n    - Prepare attribute-group setup as far as possible. ([`f5e2eeb`](https://github.com/GitoxideLabs/gitoxide/commit/f5e2eebe9560f664f044b82ffa0cd19fd0df311f))\n    - Update usage of `core.checkState` ([`8b2aba1`](https://github.com/GitoxideLabs/gitoxide/commit/8b2aba1d2baf42a3578ee8c9ce89dbe29d4d3f4c))\n    - Update progress based on filesystem config usage ([`de13c66`](https://github.com/GitoxideLabs/gitoxide/commit/de13c66ade29635ff585241fec2783cf972dd5c3))\n    - Inform about even more keys in `gix progress` ([`0e9bd41`](https://github.com/GitoxideLabs/gitoxide/commit/0e9bd4133fe33382d6d8c42ca1280601582a1a17))\n    - Plan more core filesystem attributes ([`d10a82e`](https://github.com/GitoxideLabs/gitoxide/commit/d10a82e86a461e72b9e5339a180f8adb34721e3e))\n    - Update `init.defaultBranch` - now used by custom initialization. ([`4d6d7bb`](https://github.com/GitoxideLabs/gitoxide/commit/4d6d7bbf5c3d8159535e5756da082ca493e9a66a))\n    - Support for handshake information in `gix fetch` ([`c47dcc6`](https://github.com/GitoxideLabs/gitoxide/commit/c47dcc69e54c635650b540c590131dbe7d32d05b))\n    - Fix build ([`d034882`](https://github.com/GitoxideLabs/gitoxide/commit/d03488211ec5bd186f6d274c55cd96cfd9d119d5))\n    - Remove `gix remote --url` in favor of determining the intention similar to `git fetch` ([`92bbe33`](https://github.com/GitoxideLabs/gitoxide/commit/92bbe335688e4c8e96061663e71a599022f7b96f))\n    - Support for `--url` for arbitrary urls when fetching ([`8c7351c`](https://github.com/GitoxideLabs/gitoxide/commit/8c7351c4c50517b3ccc3479f2a7a020bc607bf24))\n    - Frame for `gix fetch` ([`5b72d27`](https://github.com/GitoxideLabs/gitoxide/commit/5b72d2708889dc388facd9cbc61e5bfa5403e003))\n    - Update progress information to include packedRefsTimeout ([`fd18320`](https://github.com/GitoxideLabs/gitoxide/commit/fd18320561e05431796aa4044c0a2b0605c9ca9d))\n    - Remote `lock_mode` from all methods dealing with reference edits. ([`3a0fb1b`](https://github.com/GitoxideLabs/gitoxide/commit/3a0fb1b45c757add49677450836c0aaf6179a2b5))\n    - Add information about planned lock timeout support (from configuration) ([`7076891`](https://github.com/GitoxideLabs/gitoxide/commit/7076891fb1b44cd442928f7e56f53f4b085e7a11))\n    - Add remotes.<group> as planned feature for remotes ([`3c188b2`](https://github.com/GitoxideLabs/gitoxide/commit/3c188b2253bfb6d47394718425eef2d1a0547949))\n    - Slightly nicer styling of config keys ([`eade88f`](https://github.com/GitoxideLabs/gitoxide/commit/eade88f8ebc638f504881e8bbbd60d42a5a3d9be))\n    - Complete listing of records based on current usage, probably ([`6abd5a4`](https://github.com/GitoxideLabs/gitoxide/commit/6abd5a4e1daaf91fd109acb714057a82f67fa076))\n    - Add more records ([`5c0d0ab`](https://github.com/GitoxideLabs/gitoxide/commit/5c0d0ab66d46a8d093ca0b5451996099a27ef1dd))\n    - Add tabled for nicer printing ([`65e6496`](https://github.com/GitoxideLabs/gitoxide/commit/65e64964c7cd151e53e5a7d4b9ba8fabda1c0e16))\n    - Refactor ([`b42b08a`](https://github.com/GitoxideLabs/gitoxide/commit/b42b08afafd904ff2adb1f00688437357532193a))\n    - Add support for more types of configurations ([`317e02a`](https://github.com/GitoxideLabs/gitoxide/commit/317e02a5900189ec7f9f3c2bb27d5696178d7869))\n    - A very first version of `gix progress show` ([`92e082a`](https://github.com/GitoxideLabs/gitoxide/commit/92e082a288cf5e48caa205a4c7bd1ced025fea46))\n * **[#536](https://github.com/GitoxideLabs/gitoxide/issues/536)**\n    - `ein t hours` allows to specify the amount of worker threads. ([`20259da`](https://github.com/GitoxideLabs/gitoxide/commit/20259da4ddf9fabfb2d2bd4e2274c0ed42bdb0e5))\n * **Uncategorized**\n    - Merge branch 'write-sparse-index' ([`ba17db0`](https://github.com/GitoxideLabs/gitoxide/commit/ba17db03e4e832db724ab3e08e3df05eb61dd401))\n    - Plan `index.version` for when we can write V4 indices. ([`da96d34`](https://github.com/GitoxideLabs/gitoxide/commit/da96d34bd609776f3c8590171ddbf894f2205ae5))\n    - Notes about the split-index extension. ([`ad44982`](https://github.com/GitoxideLabs/gitoxide/commit/ad449822c952a7ed5e6124216e7d7668f0f5873f))\n    - Take note of additional options for promisor packs and partial clone filters ([`1ec27f8`](https://github.com/GitoxideLabs/gitoxide/commit/1ec27f86113aa45a1540441a21152988b3911015))\n    - Make note of `extension.worktreeConfig` ([`fe1e646`](https://github.com/GitoxideLabs/gitoxide/commit/fe1e6467296ff93c23fe191ed5a265348ce930dc))\n    - Merge branch 'main' into write-sparse-index ([`c4e6849`](https://github.com/GitoxideLabs/gitoxide/commit/c4e68496c368611ebe17c6693d06c8147c28c717))\n    - Add `init.templateDir` to `gix progress` ([`9fab050`](https://github.com/GitoxideLabs/gitoxide/commit/9fab0501f5017e43132138579238a46726a7348f))\n    - Make fmt ([`ea2136b`](https://github.com/GitoxideLabs/gitoxide/commit/ea2136b065979cecb3a1fdbf7b20ed7514128d9a))\n    - Merge branch 'gix-clone' ([`def53b3`](https://github.com/GitoxideLabs/gitoxide/commit/def53b36c3dec26fa78939ab0584fe4ff930909c))\n    - Diff algorithm is controlled by git configuration `diff.algorithm` ([`b1edb9e`](https://github.com/GitoxideLabs/gitoxide/commit/b1edb9e3537df86669714f03666f4a88e0ac3709))\n    - Merge branch 'main' into gix-clone ([`fa27570`](https://github.com/GitoxideLabs/gitoxide/commit/fa27570f491388cce6137af44330d76870d07202))\n    - Merge branch 'imra-diff' ([`f53f942`](https://github.com/GitoxideLabs/gitoxide/commit/f53f9426f206686b30abd73a201a92b1405e782d))\n    - Adapt to changes in `git-diff` for a 2x speedup when calculating line changes ([`296f3b6`](https://github.com/GitoxideLabs/gitoxide/commit/296f3b6ee29d5e628a19d56db80ba8736223e226))\n    - Update `gix progress` records ([`b05a2e7`](https://github.com/GitoxideLabs/gitoxide/commit/b05a2e7939df0c25da8186395e7eceda9e1baa9b))\n    - Merge branch 'main' into gix-clone ([`de4fe06`](https://github.com/GitoxideLabs/gitoxide/commit/de4fe06202906ea5c62e667826b42cf7b57b1ff0))\n    - Mark the upcoming usage of init.defaultBranch. ([`6225f35`](https://github.com/GitoxideLabs/gitoxide/commit/6225f35398bc494ad74da342c4ebbe0487b106f8))\n    - Merge branch 'fix-gix-index-from-tree' ([`da5f63c`](https://github.com/GitoxideLabs/gitoxide/commit/da5f63cbc7506990f46d310f8064678decb86928))\n    - Write index without output path to memory only. ([`c8d0345`](https://github.com/GitoxideLabs/gitoxide/commit/c8d03454f1b2c18876cc8935e0afcea611cb8647))\n    - Merge branch 'gix-index-from-tree' ([`8c24386`](https://github.com/GitoxideLabs/gitoxide/commit/8c24386f1874cd94f78fefbe434963f772878b1f))\n    - Refactor ([`67f2247`](https://github.com/GitoxideLabs/gitoxide/commit/67f224785193a5269cf65963fd21b21b723d485e))\n    - Refactor ([`01ab5ca`](https://github.com/GitoxideLabs/gitoxide/commit/01ab5cac23427a9c3b7f153201627eb8c8898e96))\n    - Update with various configuration variables relevant to checking out worktrees ([`09d767a`](https://github.com/GitoxideLabs/gitoxide/commit/09d767abd371a268a9fa475956be09ddda6b42ea))\n    - Merge branch 'clone' ([`507dc7e`](https://github.com/GitoxideLabs/gitoxide/commit/507dc7e706cb3c9d89d048b3aff5df239a9b6788))\n    - Update usage of clone related configuration ([`1a1e862`](https://github.com/GitoxideLabs/gitoxide/commit/1a1e862b2e8cd88f5f6fbb9d86f618761bb71ef1))\n    - Update progress with intended uses of `clone.` variables ([`8b804a3`](https://github.com/GitoxideLabs/gitoxide/commit/8b804a31cb20a5264311f0b6ba02f857bea933ad))\n    - Merge branch 'main' into new-http-impl ([`702a161`](https://github.com/GitoxideLabs/gitoxide/commit/702a161ef11fc959611bf44b70e9ffe04561c7ad))\n    - Make fmt ([`53acf25`](https://github.com/GitoxideLabs/gitoxide/commit/53acf2565743eff7cead7a42011107b2fc8d7e0e))\n    - Merge branch 'fetch-pack' ([`f47c891`](https://github.com/GitoxideLabs/gitoxide/commit/f47c89129732bcb06fe76a4696fe38ab1151fb0c))\n    - Merge branch 'fetch-pack' ([`3c49400`](https://github.com/GitoxideLabs/gitoxide/commit/3c49400809c7c2120f4ce704c19a0421545b5acd))\n    - Update docs ([`c5c0ac5`](https://github.com/GitoxideLabs/gitoxide/commit/c5c0ac50616957b5b0dcaf530d294abe63e3b4c7))\n    - Input id can now be a commit or tree as prefix or full object id ([`8ef3fcb`](https://github.com/GitoxideLabs/gitoxide/commit/8ef3fcbc416b2a53ead7d6ba36991a3d035f5f22))\n    - Thanks clippy ([`8dadd70`](https://github.com/GitoxideLabs/gitoxide/commit/8dadd70f8b7db1794652805c6238763886a8570d))\n    - Merge branch 'fix-odb-race' ([`b862fc5`](https://github.com/GitoxideLabs/gitoxide/commit/b862fc52dd2409e912c892c7f428a571f565b64a))\n    - Merge branch 'diff' ([`25a7726`](https://github.com/GitoxideLabs/gitoxide/commit/25a7726377fbe400ea3c4927d04e9dec99802b7b))\n</details>\n\n## 0.16.0 (2022-09-20)\n\n### Changed\n\n - <csr-id-3c7c9a735f5771ef787cbc86b46cbafc9226f4d6/> `ein tool hours -s` was split into `-f|--file-stats` and `-l|line-stats`.\n   That way more information is generated at increasingly high costs.\n\n### New Features\n\n - <csr-id-28c4cae70aab2bd5b479961fcc6ee91ff80f651b/> `ein tool hours --stat` to collect additional statistics per author.\n   Note that these are expensive and unconditionally use threads to speed\n   up these computations.\n - <csr-id-5d0332f51c63c5456a28c8f3f466ad805b2e0626/> `ein tool hours -b` ignores bots.\n   For now it only considers bots with names containing `[bot]`.\n\n### Commit Statistics\n\n<csr-read-only-do-not-edit/>\n\n - 21 commits contributed to the release over the course of 20 calendar days.\n - 27 days passed between releases.\n - 3 commits were understood as [conventional](https://www.conventionalcommits.org).\n - 2 unique issues were worked on: [#450](https://github.com/GitoxideLabs/gitoxide/issues/450), [#470](https://github.com/GitoxideLabs/gitoxide/issues/470)\n\n### Commit Details\n\n<csr-read-only-do-not-edit/>\n\n<details><summary>view details</summary>\n\n * **[#450](https://github.com/GitoxideLabs/gitoxide/issues/450)**\n    - Refactor ([`11851f3`](https://github.com/GitoxideLabs/gitoxide/commit/11851f334f642e7bd69bcbfc7ad4f1990fc326ba))\n    - Option to print server information about the connection ([`4720666`](https://github.com/GitoxideLabs/gitoxide/commit/4720666c8bfdaa3acc5c832b44755d4b4f86e16e))\n    - Show fixes as well ([`2237495`](https://github.com/GitoxideLabs/gitoxide/commit/2237495d82624b39bf75c6430549424a5e36b8bb))\n    - Correct printing of tag information (even though it doesn't look great) ([`f4d8198`](https://github.com/GitoxideLabs/gitoxide/commit/f4d8198992b4c45f64d81e20f40a1cad69883162))\n    - Wire up the `ref-map` sub-command. ([`94c2b78`](https://github.com/GitoxideLabs/gitoxide/commit/94c2b785f892f85503b8927c7fa98ae99d677be7))\n    - Select `gix` commands will now load the git installation configuration ([`23d2dec`](https://github.com/GitoxideLabs/gitoxide/commit/23d2dec375305c39d472c4f8ff764274dd033f6b))\n    - Refactor ([`7abc0a3`](https://github.com/GitoxideLabs/gitoxide/commit/7abc0a39205b9f374c90c4750fe6cc9b3749d7b9))\n    - Add sketch of `gix credential` ([`642e21f`](https://github.com/GitoxideLabs/gitoxide/commit/642e21fc58d8d4b68cba3067c88d44c019ec4ace))\n * **[#470](https://github.com/GitoxideLabs/gitoxide/issues/470)**\n    - `ein tool hours -s` was split into `-f|--file-stats` and `-l|line-stats`. ([`3c7c9a7`](https://github.com/GitoxideLabs/gitoxide/commit/3c7c9a735f5771ef787cbc86b46cbafc9226f4d6))\n    - Upgrade to prodash 20.1 for `Progress::counter()` feature ([`0ac4a2c`](https://github.com/GitoxideLabs/gitoxide/commit/0ac4a2c514aeb94d8e90ce28ae7a0e0350c21ab2))\n    - `ein tool hours --stat` to collect additional statistics per author. ([`28c4cae`](https://github.com/GitoxideLabs/gitoxide/commit/28c4cae70aab2bd5b479961fcc6ee91ff80f651b))\n * **Uncategorized**\n    - Merge branch 'hours-upgrade' ([`26489d1`](https://github.com/GitoxideLabs/gitoxide/commit/26489d14472b840b36696435c22d9077f7ab323d))\n    - Use rev-specs instead of ref-names ([`cf7182e`](https://github.com/GitoxideLabs/gitoxide/commit/cf7182e3390c03df97c10cd101440f7aa8874904))\n    - `ein tool hours -b` ignores bots. ([`5d0332f`](https://github.com/GitoxideLabs/gitoxide/commit/5d0332f51c63c5456a28c8f3f466ad805b2e0626))\n    - Merge branch 'filter-refs' ([`3773b92`](https://github.com/GitoxideLabs/gitoxide/commit/3773b92b8372c9a40a74d281149ca65b057a7da9))\n    - Implement `gix index from-tree` ([`2fbd3df`](https://github.com/GitoxideLabs/gitoxide/commit/2fbd3df89373eea5d6268fa47e046c8ebad8bba9))\n    - Make fmt ([`535e967`](https://github.com/GitoxideLabs/gitoxide/commit/535e967666c6da657ff1b7eff7c64ab27cafb182))\n    - Merge branch 'filter-refs-by-spec' ([`5c05198`](https://github.com/GitoxideLabs/gitoxide/commit/5c051986bd89590a9287d85d84c713d83dfab83a))\n    - Merge branch 'main' into index-from-tree ([`bc64b96`](https://github.com/GitoxideLabs/gitoxide/commit/bc64b96a2ec781c72d1d4daad38aa7fb8b74f99b))\n    - Merge branch 'main' into filter-refs-by-spec ([`56ba481`](https://github.com/GitoxideLabs/gitoxide/commit/56ba481f4c48f74f10397feb1b6dc3d7dd3704fb))\n    - A basic implementation of rev-list without anything fancy ([`791dd66`](https://github.com/GitoxideLabs/gitoxide/commit/791dd666430fe0586c7db75b352487a72d3789e7))\n</details>\n\n## 0.15.0 (2022-08-24)\n\n<csr-id-f7f136dbe4f86e7dee1d54835c420ec07c96cd78/>\n\n### Chore\n\n - <csr-id-f7f136dbe4f86e7dee1d54835c420ec07c96cd78/> uniformize deny attributes\n\n### New Features\n\n - <csr-id-45a30f0f31a99cda5cf105408e9c3905f43071f2/> Support for `-c/--config` in `gix`\n - <csr-id-5d6d5ca305615568dfedbcc10ea86294c0a0472d/> `gix remote refs` to list all remote references of a suitable remote.\n   This takes into account either a named remote, or the remote associated\n   with the current branch, or the default remote it could deduce or obtain\n   from the configuration.\n - <csr-id-b1c40b0364ef092cd52d03b34f491b254816b18d/> use docsrs feature in code to show what is feature-gated automatically on docs.rs\n\n### Changed (BREAKING)\n\n - <csr-id-dda995790c260131048484a11e66185b9c841311/> remove `gix free remote ref-list` in favor of `gix remote refs`\n   The functionality is the same, but the latter is built on top of a\n   repository which is slightly less flexible, but preferable over\n   maintaining a non-repo version.\n\n### Commit Statistics\n\n<csr-read-only-do-not-edit/>\n\n - 15 commits contributed to the release over the course of 5 calendar days.\n - 6 days passed between releases.\n - 5 commits were understood as [conventional](https://www.conventionalcommits.org).\n - 1 unique issue was worked on: [#450](https://github.com/GitoxideLabs/gitoxide/issues/450)\n\n### Thanks Clippy\n\n<csr-read-only-do-not-edit/>\n\n[Clippy](https://github.com/rust-lang/rust-clippy) helped 1 time to make code idiomatic. \n\n### Commit Details\n\n<csr-read-only-do-not-edit/>\n\n<details><summary>view details</summary>\n\n * **[#450](https://github.com/GitoxideLabs/gitoxide/issues/450)**\n    - Support for -c CLI config overrides in `gix config`. ([`19c1746`](https://github.com/GitoxideLabs/gitoxide/commit/19c1746cefca9bc76537637ec99634eb4cf66a92))\n    - Remove `gix free remote ref-list` in favor of `gix remote refs` ([`dda9957`](https://github.com/GitoxideLabs/gitoxide/commit/dda995790c260131048484a11e66185b9c841311))\n    - Support for `-c/--config` in `gix` ([`45a30f0`](https://github.com/GitoxideLabs/gitoxide/commit/45a30f0f31a99cda5cf105408e9c3905f43071f2))\n    - Refactor ([`e0be6e9`](https://github.com/GitoxideLabs/gitoxide/commit/e0be6e9558add3255de63f3785306daace2707a6))\n    - Add support for passing urls directly to bypass all remote repository logic. ([`df3cf18`](https://github.com/GitoxideLabs/gitoxide/commit/df3cf18a6ac1e4f35f6d11d62184a43722397bbe))\n    - `gix remote refs` to list all remote references of a suitable remote. ([`5d6d5ca`](https://github.com/GitoxideLabs/gitoxide/commit/5d6d5ca305615568dfedbcc10ea86294c0a0472d))\n    - Try to use maybe async for the simplest of possibly blocking remote interactions ([`db4df25`](https://github.com/GitoxideLabs/gitoxide/commit/db4df250d7e58518015bed0b9a1e3391b209cb29))\n    - Basic parsing of `gix remote refs` without any implementation. ([`f8f1249`](https://github.com/GitoxideLabs/gitoxide/commit/f8f124943f73bacf816c6d0055f0b66659fd3906))\n * **Uncategorized**\n    - Merge branch 'remote-ls-refs' ([`39d585d`](https://github.com/GitoxideLabs/gitoxide/commit/39d585d9f9ac6f3ecf51359c8e37f0a50e21ed45))\n    - Thanks clippy ([`bb6813a`](https://github.com/GitoxideLabs/gitoxide/commit/bb6813abf365728d9851ee205b2c25b925a0f06a))\n    - Merge branch 'main' into remote-ls-refs ([`e2ee3de`](https://github.com/GitoxideLabs/gitoxide/commit/e2ee3ded97e5c449933712883535b30d151c7c78))\n    - Merge branch 'docsrs-show-features' ([`31c2351`](https://github.com/GitoxideLabs/gitoxide/commit/31c235140cad212d16a56195763fbddd971d87ce))\n    - Use docsrs feature in code to show what is feature-gated automatically on docs.rs ([`b1c40b0`](https://github.com/GitoxideLabs/gitoxide/commit/b1c40b0364ef092cd52d03b34f491b254816b18d))\n    - Uniformize deny attributes ([`f7f136d`](https://github.com/GitoxideLabs/gitoxide/commit/f7f136dbe4f86e7dee1d54835c420ec07c96cd78))\n    - Merge branch 'main' into remote-ls-refs ([`bd5f3e8`](https://github.com/GitoxideLabs/gitoxide/commit/bd5f3e8db7e0bb4abfb7b0f79f585ab82c3a14ab))\n</details>\n\n## 0.14.0 (2022-08-17)\n\n### Changed\n\n - <csr-id-0235111a4fcc40c7b57d973bfce27a66eddea901/> Invert behaviour to `open::Options::strict_config()`, with lenient being the default.\n   This means API users will get libgit2 behaviour but commands like `gix` can\n   change options to emulate `git` behaviour.\n\n### New Features\n\n - <csr-id-b83f6bdf7f8d8f5cef2a57fa3932b6a0e0988db1/> `--cat-file` flag for `gix rev parse` to cat instead of resolving.\n - <csr-id-e972aad020d3653a53b20fa6e535d5759e239a45/> `gix rev previous-branches` subcommand\n\n### Changed (BREAKING)\n\n - <csr-id-edf73dd4db5b0f5d9309c95bf366e11ea6723885/> `ein tools` to `ein tool` for as it's more intuitive\n\n### New Features (BREAKING)\n\n - <csr-id-c5846e05aa54f0601ac7b8e2e59bcf1ffaa305f1/> `gix rev resolve --explain`\n\n### Commit Statistics\n\n<csr-read-only-do-not-edit/>\n\n - 21 commits contributed to the release over the course of 26 calendar days.\n - 26 days passed between releases.\n - 5 commits were understood as [conventional](https://www.conventionalcommits.org).\n - 1 unique issue was worked on: [#427](https://github.com/GitoxideLabs/gitoxide/issues/427)\n\n### Commit Details\n\n<csr-read-only-do-not-edit/>\n\n<details><summary>view details</summary>\n\n * **[#427](https://github.com/GitoxideLabs/gitoxide/issues/427)**\n    - `--cat-file` flag for `gix rev parse` to cat instead of resolving. ([`b83f6bd`](https://github.com/GitoxideLabs/gitoxide/commit/b83f6bdf7f8d8f5cef2a57fa3932b6a0e0988db1))\n    - `gix rev resolve --explain` ([`c5846e0`](https://github.com/GitoxideLabs/gitoxide/commit/c5846e05aa54f0601ac7b8e2e59bcf1ffaa305f1))\n    - `gix rev previous-branches` subcommand ([`e972aad`](https://github.com/GitoxideLabs/gitoxide/commit/e972aad020d3653a53b20fa6e535d5759e239a45))\n    - Support for parsing multiple specs in one invocation ([`84b5448`](https://github.com/GitoxideLabs/gitoxide/commit/84b5448deb7b87f67a1b7461f00793e7ae33ef31))\n    - Support overriding cache settings with environment variables in `gix` ([`b838202`](https://github.com/GitoxideLabs/gitoxide/commit/b8382026cb5b979a5c563ea40d1d8e483c1ca23a))\n * **Uncategorized**\n    - Merge branch 'core-abbrev-handling' ([`dbaff13`](https://github.com/GitoxideLabs/gitoxide/commit/dbaff13eaf7ba5f9c0ee2c90ac9f17e6078cad9e))\n    - Control which command is lenient or not. That way `gix-config` can be lenient. ([`6a9c58f`](https://github.com/GitoxideLabs/gitoxide/commit/6a9c58fde7ca4a52fa1c3225974a2019e7d93168))\n    - Invert behaviour to `open::Options::strict_config()`, with lenient being the default. ([`0235111`](https://github.com/GitoxideLabs/gitoxide/commit/0235111a4fcc40c7b57d973bfce27a66eddea901))\n    - Merge branch 'main' into remote-ls-refs ([`c4bf958`](https://github.com/GitoxideLabs/gitoxide/commit/c4bf9585d815bc342e5fb383336cc654280dd34f))\n    - Merge branch 'index-write-refactor' ([`805f432`](https://github.com/GitoxideLabs/gitoxide/commit/805f432bf8e9d2dd9ede56caf959de386d5d80c7))\n    - `ein tools` to `ein tool` for as it's more intuitive ([`edf73dd`](https://github.com/GitoxideLabs/gitoxide/commit/edf73dd4db5b0f5d9309c95bf366e11ea6723885))\n    - Merge branch 'main' into write-index-v2 ([`a938986`](https://github.com/GitoxideLabs/gitoxide/commit/a938986877302c197d1aed087594c5605416fe5f))\n    - Add aliases to make revision sub-commands more accessible ([`a6d79e3`](https://github.com/GitoxideLabs/gitoxide/commit/a6d79e38cb0dd7e87d00a098030bbcaa614f259d))\n    - Merge branch 'rev-parse-delegate' ([`2f506c7`](https://github.com/GitoxideLabs/gitoxide/commit/2f506c7c2988477b0f97d272a9ac9ed47b236457))\n    - Merge pull request #2 from SidneyDouw/main ([`ce885ad`](https://github.com/GitoxideLabs/gitoxide/commit/ce885ad4c3324c09c83751c32e014f246c748766))\n    - Merge branch 'Byron:main' into main ([`9b9ea02`](https://github.com/GitoxideLabs/gitoxide/commit/9b9ea0275f8ff5862f24cf5a4ca53bb1cd610709))\n    - Merge branch 'main' into rev-parse-delegate ([`6da8250`](https://github.com/GitoxideLabs/gitoxide/commit/6da82507588d3bc849217c11d9a1d398b67f2ed6))\n    - Merge branch 'main' into pathspec ([`7b61506`](https://github.com/GitoxideLabs/gitoxide/commit/7b615060712565f515515e35a3e8346278ad770c))\n    - Make fmt ([`47724c0`](https://github.com/GitoxideLabs/gitoxide/commit/47724c0edb382c036a3fc99884becfd2b0740d4b))\n    - Merge branch 'kianmeng-fix-typos' ([`4e7b343`](https://github.com/GitoxideLabs/gitoxide/commit/4e7b34349c0a01ad8686bbb4eb987e9338259d9c))\n    - Fix typos ([`e9fcb70`](https://github.com/GitoxideLabs/gitoxide/commit/e9fcb70e429edb2974afa3f58d181f3ef14c3da3))\n</details>\n\n## 0.13.0 (2022-07-22)\n\n### New Features\n\n - <csr-id-eda39ec7d736d49af1ad9e2ad775e4aa12b264b7/> `gix config` with section and sub-section filtering.\n - <csr-id-d99453ebeb970ed493be236def299d1e82b01f83/> `gix config` lists all entries of all configuration files git considers.\n   Filters allow to narrow down the output.\n\n### Commit Statistics\n\n<csr-read-only-do-not-edit/>\n\n - 47 commits contributed to the release over the course of 101 calendar days.\n - 108 days passed between releases.\n - 2 commits were understood as [conventional](https://www.conventionalcommits.org).\n - 3 unique issues were worked on: [#301](https://github.com/GitoxideLabs/gitoxide/issues/301), [#331](https://github.com/GitoxideLabs/gitoxide/issues/331), [#427](https://github.com/GitoxideLabs/gitoxide/issues/427)\n\n### Thanks Clippy\n\n<csr-read-only-do-not-edit/>\n\n[Clippy](https://github.com/rust-lang/rust-clippy) helped 3 times to make code idiomatic. \n\n### Commit Details\n\n<csr-read-only-do-not-edit/>\n\n<details><summary>view details</summary>\n\n * **[#301](https://github.com/GitoxideLabs/gitoxide/issues/301)**\n    - Allow reading patterns from stdin ([`0c597fe`](https://github.com/GitoxideLabs/gitoxide/commit/0c597fe78acdd5672b4535a7d82620c5f7f93649))\n    - Add `--show-ignore-patterns` to `gix repo exclude query` ([`09f904b`](https://github.com/GitoxideLabs/gitoxide/commit/09f904b1f393f03176882d491d7fffcad4058b49))\n    - Basic prefix support as well the first working version of `exclude query` ([`9cb8385`](https://github.com/GitoxideLabs/gitoxide/commit/9cb83859f9bb76f38ab5bbd0ae6d6f20a691e9e1))\n    - Support for overrides on the command-line ([`7d98b21`](https://github.com/GitoxideLabs/gitoxide/commit/7d98b2196c130263ace4a948418affdd950302ed))\n    - Fix build ([`cb56f12`](https://github.com/GitoxideLabs/gitoxide/commit/cb56f12ad83cf2932a068ef4fa0ca5ce4aa73e84))\n    - Refactor ([`3ff991d`](https://github.com/GitoxideLabs/gitoxide/commit/3ff991d0ca0d63632fc5710680351840f51c14c3))\n    - Frame for `gix repo exclude query` ([`a331314`](https://github.com/GitoxideLabs/gitoxide/commit/a331314758629a93ba036245a5dd03cf4109dc52))\n    - Make fmt ([`50ff7aa`](https://github.com/GitoxideLabs/gitoxide/commit/50ff7aa7fa86e5e2a94fb15aab86470532ac3f51))\n * **[#331](https://github.com/GitoxideLabs/gitoxide/issues/331)**\n    - Fix journey tests after `gix` restructuring ([`59b95c9`](https://github.com/GitoxideLabs/gitoxide/commit/59b95c94aacac174e374048b7d11d2c0984a19e0))\n    - `gix config` with section and sub-section filtering. ([`eda39ec`](https://github.com/GitoxideLabs/gitoxide/commit/eda39ec7d736d49af1ad9e2ad775e4aa12b264b7))\n    - `gix config` lists all entries of all configuration files git considers. ([`d99453e`](https://github.com/GitoxideLabs/gitoxide/commit/d99453ebeb970ed493be236def299d1e82b01f83))\n    - Refactor ([`a437abe`](https://github.com/GitoxideLabs/gitoxide/commit/a437abe8e77ad07bf25a16f19ca046ebdaef42d6))\n    - Move 'exclude' up one level and dissolve 'repo' subcommand ([`8e5b796`](https://github.com/GitoxideLabs/gitoxide/commit/8e5b796ea3fd760839f3c29a4f65bb42b1f3e893))\n    - Move 'mailmap' up one level ([`5cf08ce`](https://github.com/GitoxideLabs/gitoxide/commit/5cf08ce3d04d635bbfee169cb77ce259efbf6bc3))\n    - Move 'odb' up one level ([`0ed65da`](https://github.com/GitoxideLabs/gitoxide/commit/0ed65da9b66d4cc3c85d3b70fa4bc383c7a0d1a3))\n    - Move 'tree' up one level ([`38a8350`](https://github.com/GitoxideLabs/gitoxide/commit/38a8350d75720a8455e9c55d12f7cdf4b1742e56))\n    - Move 'commit' up one level ([`72876f1`](https://github.com/GitoxideLabs/gitoxide/commit/72876f1fd65efc816b704db6880ab881c89cff01))\n    - Move 'verify' up one level ([`ac7d99a`](https://github.com/GitoxideLabs/gitoxide/commit/ac7d99ac42ff8561e81f476856d0bbe86b5fa627))\n    - Move 'revision' one level up ([`c9c78e8`](https://github.com/GitoxideLabs/gitoxide/commit/c9c78e86c387c09838404c90de420892f41f4356))\n    - Move 'remote' to 'free' ([`8967fcd`](https://github.com/GitoxideLabs/gitoxide/commit/8967fcd009260c2d32881866244ba673894775f2))\n    - Move commitgraph to 'free' ([`f99c3b2`](https://github.com/GitoxideLabs/gitoxide/commit/f99c3b29cea30f1cbbea7e5855abfec3de6ca630))\n    - Move index to 'free' ([`83585bd`](https://github.com/GitoxideLabs/gitoxide/commit/83585bdfccdc42b5307255b2d56d8cb12d4136cb))\n    - Move 'pack' to 'free' ([`1cdecbc`](https://github.com/GitoxideLabs/gitoxide/commit/1cdecbc583ae412e7f25cade73b46e00a182125f))\n    - Migrate mailmap to the new 'free' section ([`141c5f1`](https://github.com/GitoxideLabs/gitoxide/commit/141c5f1145f9d3864e2d879089c66c62f38a2b5d))\n    - First step towards moving all repository-commands one level up. ([`f4e1810`](https://github.com/GitoxideLabs/gitoxide/commit/f4e1810fb711d57778be79c88f49aa583821abab))\n    - Make obvious what plumbing and porcelain really are ([`faaf791`](https://github.com/GitoxideLabs/gitoxide/commit/faaf791cc960c37b180ddef9792dfabc7d106138))\n    - Adjustments due to breaking changes in `git_path` ([`4420ae9`](https://github.com/GitoxideLabs/gitoxide/commit/4420ae932d5b20a9662a6d36353a27111b5cd672))\n * **[#427](https://github.com/GitoxideLabs/gitoxide/issues/427)**\n    - Add rough but working version of `rev-parse` ([`f3f176d`](https://github.com/GitoxideLabs/gitoxide/commit/f3f176db42cef4036cc7c0ced1ee68f247424896))\n    - Basic infrastructure for delegate implementation ([`d3c0bc6`](https://github.com/GitoxideLabs/gitoxide/commit/d3c0bc6e8d7764728f4e10500bb895152ccd0b0b))\n    - Hookup explain command ([`1049b00`](https://github.com/GitoxideLabs/gitoxide/commit/1049b00eaa261a67f060eaca4eb50dcda831eafd))\n    - Frame for `gix repo rev explain` ([`12e6277`](https://github.com/GitoxideLabs/gitoxide/commit/12e6277a65a6572a0e43e8324d2d1dfb23d0bb40))\n * **Uncategorized**\n    - Merge branch 'gix-repo-config' ([`afecb63`](https://github.com/GitoxideLabs/gitoxide/commit/afecb6337dcf0fc51d5c74747c3c60fa06ae6346))\n    - Thanks clippy ([`48b3f4a`](https://github.com/GitoxideLabs/gitoxide/commit/48b3f4a5077ba66d47482a80e505feb69e9ac9fc))\n    - Merge pull request #1 from Byron/main ([`085e76b`](https://github.com/GitoxideLabs/gitoxide/commit/085e76b121291ed9bd324139105d2bd4117bedf8))\n    - Make fmt ([`0700b09`](https://github.com/GitoxideLabs/gitoxide/commit/0700b09d6828849fa2470df89af1f75a67bfb27d))\n    - Merge branch 'main' into pathspec ([`89ea12b`](https://github.com/GitoxideLabs/gitoxide/commit/89ea12b558bcc056b892193ee8fb44b8664b5da4))\n    - Merge branch 'main' into cont_include_if ([`0e9df36`](https://github.com/GitoxideLabs/gitoxide/commit/0e9df364c4cddf006b1de18b8d167319b7cc1186))\n    - Use git_path::realpath in all places that allow it right now ([`229dc91`](https://github.com/GitoxideLabs/gitoxide/commit/229dc917fc7d9241b85e5818260a6fbdd3a5daaa))\n    - Merge branch 'main' into cont_include_if ([`41ea8ba`](https://github.com/GitoxideLabs/gitoxide/commit/41ea8ba78e74f5c988148367386a1f4f304cb951))\n    - Merge branch 'main' into git_includeif ([`05eb340`](https://github.com/GitoxideLabs/gitoxide/commit/05eb34023933918c51c03cf2afd774db89cc5a33))\n    - Merge branch 'main' into msrv-for-windows ([`7cb1972`](https://github.com/GitoxideLabs/gitoxide/commit/7cb19729133325bdfacedf44cdc0500cbcf36684))\n    - Make fmt ([`251b6df`](https://github.com/GitoxideLabs/gitoxide/commit/251b6df5dbdda24b7bdc452085f808f3acef69d8))\n    - Merge branch 'worktree-stack' ([`98da8ba`](https://github.com/GitoxideLabs/gitoxide/commit/98da8ba52cef8ec27f705fcbc84773e5bacc4e10))\n    - Thanks clippy ([`056e8d2`](https://github.com/GitoxideLabs/gitoxide/commit/056e8d26dc511fe7939ec87c62ef16aafd34fa9c))\n    - Thanks clippy ([`fdec111`](https://github.com/GitoxideLabs/gitoxide/commit/fdec11135692b3503087b0a3245c12cc87554d67))\n    - Merge branch 'main' into repo-status ([`4086335`](https://github.com/GitoxideLabs/gitoxide/commit/40863353a739ec971b49410fbc2ba048b2762732))\n    - Merge branch 'worktree-stack' ([`e90d3fd`](https://github.com/GitoxideLabs/gitoxide/commit/e90d3fd0a9764511e6280596f21d3a0494ed7021))\n</details>\n\n## 0.12.0 (2022-04-05)\n\n### New Features\n\n - <csr-id-7e99e6aeee9bf200a561d215c586301f5e4a8cbc/> Add `gix repo commit describe`\n   It supports typical but basic flags mostly similar to the ones in git.\n\n### Commit Statistics\n\n<csr-read-only-do-not-edit/>\n\n - 5 commits contributed to the release over the course of 1 calendar day.\n - 2 days passed between releases.\n - 1 commit was understood as [conventional](https://www.conventionalcommits.org).\n - 1 unique issue was worked on: [#298](https://github.com/GitoxideLabs/gitoxide/issues/298)\n\n### Commit Details\n\n<csr-read-only-do-not-edit/>\n\n<details><summary>view details</summary>\n\n * **[#298](https://github.com/GitoxideLabs/gitoxide/issues/298)**\n    - Use all tags by default, instead of requiring annotated tags ([`00c42ca`](https://github.com/GitoxideLabs/gitoxide/commit/00c42ca36e93a22f233fc1d3f9a1afc241fd4464))\n    - Support for the --max-candidates flag ([`b9e6754`](https://github.com/GitoxideLabs/gitoxide/commit/b9e67540801f2630be8aa1acbfddfec4202360ac))\n    - Reduce amount of max candidates, add --debug flag ([`c8c13e3`](https://github.com/GitoxideLabs/gitoxide/commit/c8c13e398671a21e96282547fc0e3bd445627e2f))\n    - Add `gix repo commit describe` ([`7e99e6a`](https://github.com/GitoxideLabs/gitoxide/commit/7e99e6aeee9bf200a561d215c586301f5e4a8cbc))\n    - A first sketch of the `gix repo describe` plumbing command ([`2d6ccef`](https://github.com/GitoxideLabs/gitoxide/commit/2d6ccefd5506d84ba14e3ff11c2af4cb107a386d))\n</details>\n\n## 0.11.0 (2022-04-03)\n\n<csr-id-4d2d433e7e98ac42db858688edac06e68ee4d10d/>\n\nAdapt to changes in `gix-features` which change `Send + Sync` to `Send + Clone`. This happens to allow non-sync implementations (i.e. thread-local), along with `Sync` ones\nwhich usually are `Clone` too as they are passed by immutable reference (which is `Clone + Copy`).\n\n### Refactor (BREAKING)\n\n - <csr-id-4d2d433e7e98ac42db858688edac06e68ee4d10d/> Remove light* features, add 'lean-async' in its place; remove termion support\n\n### Changed (BREAKING)\n\n - <csr-id-bf04644ab75ed1969507f957dc8d4868790d462d/> remove `Option<impl Progress>` in favor of `impl Progress`\n - <csr-id-d851bede97801096d188ff6af06c98a79fe276db/> remove unnecessary `Arc` around `should_interrupt` flag\n - <csr-id-c2679a03358b9c19d63ed1af1cd57324c6381447/> remove Sha1 mentions in `index::verify::Mode::*` variants\n   The hash is repository defined and not hard-coded\n - <csr-id-51bf03feaa94bebb26690dff92262b2134070a44/> Remove lean plumbing CLI\n\n### Bug Fixes\n\n - <csr-id-57ca0456cf02073099bfd403f9155290af756ecd/> Collect all stdout messages in line renderer as well\n   Otherwise the threaded line renderer will interfere with genuine\n   program output.\n\n### New Features\n\n - <csr-id-384ed665c7423feca1b1ee1f81db10867fa813a8/> `gix mailmap verify` command\n - <csr-id-70109bee679d33a5c5fb3a78a708b479684b03b1/> `ein find --debug` to learn why it is slow\n - <csr-id-00909619ff04e247aabc9ffe3c025f0064c3092d/> --counting-threads flag to configure amount of threads when counting\n   The efficiency of multi-threaded counting is low per core, and despite\n   some speedups might be desirable, one might not want to commit all cores\n   to this amount of waste.\n - <csr-id-25da30f3652bd72c157e84439dd6e3957471fa08/> in-manifest and in-bin documentation of feature toggles\n   Unfortunately, these don't show up on docs.rs due to it being a binary\n   only crate. One could consider throwing in a lib just for good measure.\n\n### Commit Statistics\n\n<csr-read-only-do-not-edit/>\n\n - 63 commits contributed to the release over the course of 126 calendar days.\n - 165 days passed between releases.\n - 10 commits were understood as [conventional](https://www.conventionalcommits.org).\n - 12 unique issues were worked on: [#215](https://github.com/GitoxideLabs/gitoxide/issues/215), [#263](https://github.com/GitoxideLabs/gitoxide/issues/263), [#266](https://github.com/GitoxideLabs/gitoxide/issues/266), [#279](https://github.com/GitoxideLabs/gitoxide/issues/279), [#287](https://github.com/GitoxideLabs/gitoxide/issues/287), [#289](https://github.com/GitoxideLabs/gitoxide/issues/289), [#293](https://github.com/GitoxideLabs/gitoxide/issues/293), [#298](https://github.com/GitoxideLabs/gitoxide/issues/298), [#301](https://github.com/GitoxideLabs/gitoxide/issues/301), [#329](https://github.com/GitoxideLabs/gitoxide/issues/329), [#366](https://github.com/GitoxideLabs/gitoxide/issues/366), [#67](https://github.com/GitoxideLabs/gitoxide/issues/67)\n\n### Commit Details\n\n<csr-read-only-do-not-edit/>\n\n<details><summary>view details</summary>\n\n * **[#215](https://github.com/GitoxideLabs/gitoxide/issues/215)**\n    - Collect all stdout messages in line renderer as well ([`57ca045`](https://github.com/GitoxideLabs/gitoxide/commit/57ca0456cf02073099bfd403f9155290af756ecd))\n    - Fix compile warning ([`e4514a8`](https://github.com/GitoxideLabs/gitoxide/commit/e4514a85d406aaa0aa959a18e0e32d46f1994cc8))\n    - Remove reference of pretty-cli in code tree ([`4bd2f29`](https://github.com/GitoxideLabs/gitoxide/commit/4bd2f29da7e37c5d6e920c97df82c7860dd9f22c))\n    - Remove lean plumbing CLI ([`51bf03f`](https://github.com/GitoxideLabs/gitoxide/commit/51bf03feaa94bebb26690dff92262b2134070a44))\n    - Remove light* features, add 'lean-async' in its place; remove termion support ([`4d2d433`](https://github.com/GitoxideLabs/gitoxide/commit/4d2d433e7e98ac42db858688edac06e68ee4d10d))\n * **[#263](https://github.com/GitoxideLabs/gitoxide/issues/263)**\n    - Fmt ([`fbeddeb`](https://github.com/GitoxideLabs/gitoxide/commit/fbeddebcab999f4898f768a3184906091f8ce0b8))\n    - A mad attempt to use thread-local everywhere and avoid Sync… ([`0af5077`](https://github.com/GitoxideLabs/gitoxide/commit/0af5077e1f028c1c69bbdc098bb567e486282c37))\n * **[#266](https://github.com/GitoxideLabs/gitoxide/issues/266)**\n    - Provide handle with a snapshot of the store's state ([`6e0cd6d`](https://github.com/GitoxideLabs/gitoxide/commit/6e0cd6d38c5df874990ace6c2c3c0b39342c4d05))\n * **[#279](https://github.com/GitoxideLabs/gitoxide/issues/279)**\n    - Fast-path multi-pack index verification in the CLI ([`bcde935`](https://github.com/GitoxideLabs/gitoxide/commit/bcde935e7102ba5cd50c057a8323353247d3dd85))\n    - Basic multi-pack index creation ([`89428b2`](https://github.com/GitoxideLabs/gitoxide/commit/89428b2936fb0169606a543cf531bddaacb8187c))\n    - 'index' with its own sub-commands ([`c4c5678`](https://github.com/GitoxideLabs/gitoxide/commit/c4c56787b1f9165984a8bddf35cfee530554fa2f))\n    - Even nicer printing ([`d2bea27`](https://github.com/GitoxideLabs/gitoxide/commit/d2bea270787597d6aef48ffe023ff49969c33bd9))\n    - Remove `Option<impl Progress>` in favor of `impl Progress` ([`bf04644`](https://github.com/GitoxideLabs/gitoxide/commit/bf04644ab75ed1969507f957dc8d4868790d462d))\n    - Remove unnecessary `Arc` around `should_interrupt` flag ([`d851bed`](https://github.com/GitoxideLabs/gitoxide/commit/d851bede97801096d188ff6af06c98a79fe276db))\n    - Remove Sha1 mentions in `index::verify::Mode::*` variants ([`c2679a0`](https://github.com/GitoxideLabs/gitoxide/commit/c2679a03358b9c19d63ed1af1cd57324c6381447))\n * **[#287](https://github.com/GitoxideLabs/gitoxide/issues/287)**\n    - Share and pass cli arguments for pack verification ([`db43e47`](https://github.com/GitoxideLabs/gitoxide/commit/db43e47fc0a43ef45824ac1c9426c1889bdb13a3))\n    - Very rough version of repository verification ([`80a4a7a`](https://github.com/GitoxideLabs/gitoxide/commit/80a4a7add688d16376b9bf2ed7f1c7f655b7c912))\n    - Adjustments to deal with changes to git-pack/git-odb ([`fcf8fde`](https://github.com/GitoxideLabs/gitoxide/commit/fcf8fde7272974a70df808bd7ac03e925b7e39a8))\n * **[#289](https://github.com/GitoxideLabs/gitoxide/issues/289)**\n    - 'pack' with its own sub-commands ([`fb64af4`](https://github.com/GitoxideLabs/gitoxide/commit/fb64af4d747960bfa40ec23051ecb03ea8ec5d83))\n    - 'remote' with its own sub-commands ([`8677f7e`](https://github.com/GitoxideLabs/gitoxide/commit/8677f7edd516ea54ec652a4a59cb220422036b90))\n    - 'commitgraph' with its own sub-commands ([`db0251e`](https://github.com/GitoxideLabs/gitoxide/commit/db0251e277ee9035bd3b44bf5ec9152fb64ac8c8))\n * **[#293](https://github.com/GitoxideLabs/gitoxide/issues/293)**\n    - Faster writing to stdout/stderr for plumbing commands ([`d04dc01`](https://github.com/GitoxideLabs/gitoxide/commit/d04dc01115efa6688e71a2a0ef4ffce45d3d0db6))\n    - Add 'index verify' subcommand to 'gix' ([`1ac2c21`](https://github.com/GitoxideLabs/gitoxide/commit/1ac2c210c311c4b2ef835e04e2d7c477981b850f))\n    - Flag to hide extension details ([`34ea001`](https://github.com/GitoxideLabs/gitoxide/commit/34ea001fafa93b6453513cf458fe24327a13ff28))\n    - Print basic index information, including the tree extension ([`9277cf8`](https://github.com/GitoxideLabs/gitoxide/commit/9277cf877e1f2276dcad1efdeb97e0e3d96ed3f0))\n    - Basic entry information ([`239e7b2`](https://github.com/GitoxideLabs/gitoxide/commit/239e7b291297d6d49ebdf3d4986fb9fb86480e9a))\n    - Refactor ([`8bf585d`](https://github.com/GitoxideLabs/gitoxide/commit/8bf585d67cd67b168d819ba05858cef7d9b90894))\n    - JSON output for index entries ([`3fc1622`](https://github.com/GitoxideLabs/gitoxide/commit/3fc1622488054c6ab655eb9d2f941b68cc3ccf18))\n * **[#298](https://github.com/GitoxideLabs/gitoxide/issues/298)**\n    - Simplify command-line options declaration ([`f790a55`](https://github.com/GitoxideLabs/gitoxide/commit/f790a55ff4263bea9b9476137bac3824912044ac))\n    - Frame for printing index information ([`9ea98fd`](https://github.com/GitoxideLabs/gitoxide/commit/9ea98fda75fbef339647a0ca03776060356d1206))\n * **[#301](https://github.com/GitoxideLabs/gitoxide/issues/301)**\n    - Greatly simplify render-line logic ([`a8fa53a`](https://github.com/GitoxideLabs/gitoxide/commit/a8fa53a007780ec89f4768745b1549e8e73a8478))\n    - Pass thread-limit along to checkout ([`07e9081`](https://github.com/GitoxideLabs/gitoxide/commit/07e9081fb5628e4ddc8f87e2d4ba0c7b3247bb35))\n    - Add thread-count and chunk-size computation; interrupt capability ([`8cbe85d`](https://github.com/GitoxideLabs/gitoxide/commit/8cbe85d135898826a91939726465a9e295c1e24b))\n    - A first sketch of access odb information using a sub-command ([`89b628a`](https://github.com/GitoxideLabs/gitoxide/commit/89b628ab5b833a34f0b426b3a399bb182e63f3f4))\n    - Sub-command to print multi-index entries ([`6c10e09`](https://github.com/GitoxideLabs/gitoxide/commit/6c10e097a432d81b930008abc00c6821ed7ac9be))\n    - Pack multi-index info subcommand ([`21c2dd5`](https://github.com/GitoxideLabs/gitoxide/commit/21c2dd5da20a9e3cbae618b6311b6c9de12cf43c))\n    - Refactor ([`e6a3d43`](https://github.com/GitoxideLabs/gitoxide/commit/e6a3d437e1a97c56fba18d80ac54928d953cb507))\n    - Detailed report about issues after checkout ([`613483b`](https://github.com/GitoxideLabs/gitoxide/commit/613483b297b8a7e9a91cac3ef8205f2103ea946b))\n    - Keep-going support on the command-line ([`73a7393`](https://github.com/GitoxideLabs/gitoxide/commit/73a73932f430fe991f26222ba2735332c03c0e77))\n    - Add tree-info subcommand to more easily test actual tree-traversal performance ([`29fb0c8`](https://github.com/GitoxideLabs/gitoxide/commit/29fb0c8ff628716d33c9c41d3910e617791dcc77))\n    - Frame for traversing tree entries ([`0e55fbb`](https://github.com/GitoxideLabs/gitoxide/commit/0e55fbb2fb0cec6f402b7a3aed7ee55078d233a1))\n    - Properly use 'max-performance' feature toggle to get pack caches :D ([`a39d476`](https://github.com/GitoxideLabs/gitoxide/commit/a39d4768e36f27aababefd5bd519e51f33ffa7b6))\n    - Allow writing empty files during checkout but also query the odb ([`5388d80`](https://github.com/GitoxideLabs/gitoxide/commit/5388d8091ef02cf927478a1492847ae1666040d4))\n    - Support for repo to write actual objects ([`5494fb3`](https://github.com/GitoxideLabs/gitoxide/commit/5494fb3e1de1234dde8c47336597283dbd8bcb29))\n    - Basic version of index checkout via command-line ([`f23b8d2`](https://github.com/GitoxideLabs/gitoxide/commit/f23b8d2f1c4b767d337ec51888afaa8b3719798c))\n    - Support for unicode-precomposition for gix apps ([`e90c123`](https://github.com/GitoxideLabs/gitoxide/commit/e90c123675a98ab62fc6bb22019f889cee8b7301))\n * **[#329](https://github.com/GitoxideLabs/gitoxide/issues/329)**\n    - In-manifest and in-bin documentation of feature toggles ([`25da30f`](https://github.com/GitoxideLabs/gitoxide/commit/25da30f3652bd72c157e84439dd6e3957471fa08))\n * **[#366](https://github.com/GitoxideLabs/gitoxide/issues/366)**\n    - Frame for printing mailmap entries using git-repository ([`2a01f47`](https://github.com/GitoxideLabs/gitoxide/commit/2a01f4728ae858b47280b587501d343fdb86655d))\n    - Gix mailmap verify can now detect collisions ([`f89fe2f`](https://github.com/GitoxideLabs/gitoxide/commit/f89fe2f867fa792db5d9e003ce342a337a6ac973))\n    - `gix mailmap verify` command ([`384ed66`](https://github.com/GitoxideLabs/gitoxide/commit/384ed665c7423feca1b1ee1f81db10867fa813a8))\n * **[#67](https://github.com/GitoxideLabs/gitoxide/issues/67)**\n    - --counting-threads flag to configure amount of threads when counting ([`0090961`](https://github.com/GitoxideLabs/gitoxide/commit/00909619ff04e247aabc9ffe3c025f0064c3092d))\n * **Uncategorized**\n    - Make fmt ([`7cf3545`](https://github.com/GitoxideLabs/gitoxide/commit/7cf354509b545f7e7c99e159b5989ddfbe86273d))\n    - Small build now uses the line renderer as well ([`652a0ac`](https://github.com/GitoxideLabs/gitoxide/commit/652a0acdf9f06e35e65c1b66d264d5e8734ccc65))\n    - Upgrade to prodash 19 ([`90c6c5a`](https://github.com/GitoxideLabs/gitoxide/commit/90c6c5aec4015ff969d6e2514fa4d49873ee80f5))\n    - `ein find --debug` to learn why it is slow ([`70109be`](https://github.com/GitoxideLabs/gitoxide/commit/70109bee679d33a5c5fb3a78a708b479684b03b1))\n    - Fix clap warnings ([`aa51e05`](https://github.com/GitoxideLabs/gitoxide/commit/aa51e05923695e20aecc16317331c7e26d49a2e7))\n    - Merge branch 'index-verification' ([`ad3c803`](https://github.com/GitoxideLabs/gitoxide/commit/ad3c8032cee02052ef3940d1d7c950270a0a299a))\n    - Merge branch 'index-information' ([`025f157`](https://github.com/GitoxideLabs/gitoxide/commit/025f157de10a509a4b36a9aed41de80487e8c15c))\n    - Improve CLI docs ([`866530a`](https://github.com/GitoxideLabs/gitoxide/commit/866530a154c3ef9383fae30c694991e31e97528c))\n    - Rename 'gix commitgraph' back to 'gix commit-graph' ([`d6a72e7`](https://github.com/GitoxideLabs/gitoxide/commit/d6a72e70c9b4ee9b10a1172cce64ade5664599eb))\n    - Merge branch 'use-midx-in-store' ([`338521b`](https://github.com/GitoxideLabs/gitoxide/commit/338521b0443b9dc1007581de42ef6a950f6e0bbf))\n    - Merge branch 'sync-db-draft' ([`7d2e20c`](https://github.com/GitoxideLabs/gitoxide/commit/7d2e20c6fedc2c7e71a307d8d072412fa847a4aa))\n    - Thanks clippy ([`b0f7328`](https://github.com/GitoxideLabs/gitoxide/commit/b0f73280c0233e05b68a22b0b01f40d574786a03))\n</details>\n\n## v0.10.0 (2021-10-20)\n\nThis release pins beta versions of `clap` to avoid it to automatically fetch the latest one\nduring installation.\n\nThis is made possible due to `clap` itself pinning its dependency\nto the `clap-derive` crate.\n\n### Commit Statistics\n\n<csr-read-only-do-not-edit/>\n\n - 1 commit contributed to the release over the course of 1 calendar day.\n - 4 days passed between releases.\n - 0 commits were understood as [conventional](https://www.conventionalcommits.org).\n - 1 unique issue was worked on: [#222](https://github.com/GitoxideLabs/gitoxide/issues/222)\n\n### Commit Details\n\n<csr-read-only-do-not-edit/>\n\n<details><summary>view details</summary>\n\n * **[#222](https://github.com/GitoxideLabs/gitoxide/issues/222)**\n    - Upgrade to clap 3 beta 5 ([`2ddc4ed`](https://github.com/GitoxideLabs/gitoxide/commit/2ddc4eddda23c77b5891a11a3e7215702c63882b))\n</details>\n\n## v0.9.0 (2021-10-15)\n\nA first usable version of `gix` to make using `gitoxide` from your applications so much easier. It serves as a one-stop shop for application developers without sacrificing performance by default while making common use-cases more convenient.\n\n### Feature list\n\n* `gix` as hub crate for application development with focus on usability without sacrificing any knob to tune performance.\n* opt-in `async` for `gix-packetline`, `gix-transport` and `gix-protocol` for fully async git clients, along with the `light-async` feature toggle to build a `gix pack-receive` with an async client instead of a blocking one.\n* Statistics for `gix pack-create` with the `-s/--statistics` flag to have data indicating the cost of the operation. Currently it's doing a lot of work that has to be avoided in order to be useable in production and the numbers underline that. Future iterations will cause key metrics to go down.\n* Packs are now reproducible by default, which means that the same tip will always generate a pack with the same hash. This may be a desirable property for some kinds of packs, but not for others which is why it can be turned off for a considerable speed boost.\n* `gix-tempfile` crate\n* `gix-lock` crate\n* `gix-ref` crate with complete loose-ref, packed-ref and transaction support.\n\n\n### Performance\n\n* On M1, thanks to [a new release](https://github.com/RustCrypto/hashes/pull/289#event-5035369215), Sha1 is now computed much faster which unlocks a massive performance boost. In my test, verifying/decoding the entire linux kernel pack now happens in 17s, as compared to 37s for canonical `git`.\n* `gix-object` parsing is a few percent faster thanks a reworked error handling for objects. By default, error collection is disabled entirely making the error case zero-sized. If needed, verbose and stacked errors can be turned on using a feature toggle for applications who expect repositories with malformed objects and need detailed diagnostics.\n\n### New Features\n\n - <csr-id-60c9fad8002b4e3f6b9607bba6361871752f4d3d/> control pack and object cache size in megabytes in some sub-commands\n\n### Commit Statistics\n\n<csr-read-only-do-not-edit/>\n\n - 5 commits contributed to the release over the course of 26 calendar days.\n - 35 days passed between releases.\n - 1 commit was understood as [conventional](https://www.conventionalcommits.org).\n - 2 unique issues were worked on: [#200](https://github.com/GitoxideLabs/gitoxide/issues/200), [#67](https://github.com/GitoxideLabs/gitoxide/issues/67)\n\n## v0.8.4 (2021-09-10)\n\nThis is a maintenance release.\n\n## v0.8.3 (2021-09-07)\n\n### Commit Statistics\n\n<csr-read-only-do-not-edit/>\n\n - 1 commit contributed to the release over the course of 8 calendar days.\n - 20 days passed between releases.\n - 0 commits were understood as [conventional](https://www.conventionalcommits.org).\n - 0 issues like '(#ID)' were seen in commit messages\n\n## v0.8.2 (2021-08-17)\n\n### Commit Statistics\n\n<csr-read-only-do-not-edit/>\n\n - 1 commit contributed to the release over the course of 1 calendar day.\n - 1 day passed between releases.\n - 0 commits were understood as [conventional](https://www.conventionalcommits.org).\n - 0 issues like '(#ID)' were seen in commit messages\n\n## v0.8.1 (2021-08-15)\n\n### Commit Statistics\n\n<csr-read-only-do-not-edit/>\n\n - 42 commits contributed to the release over the course of 95 calendar days.\n - 98 days passed between releases.\n - 0 commits were understood as [conventional](https://www.conventionalcommits.org).\n - 1 unique issue was worked on: [#83](https://github.com/GitoxideLabs/gitoxide/issues/83)\n\n### Thanks Clippy\n\n<csr-read-only-do-not-edit/>\n\n[Clippy](https://github.com/rust-lang/rust-clippy) helped 1 time to make code idiomatic. \n\n## v0.7.0 (2021-05-09)\n\n### Commit Statistics\n\n<csr-read-only-do-not-edit/>\n\n - 32 commits contributed to the release over the course of 128 calendar days.\n - 143 days passed between releases.\n - 0 commits were understood as [conventional](https://www.conventionalcommits.org).\n - 0 issues like '(#ID)' were seen in commit messages\n\n### Thanks Clippy\n\n<csr-read-only-do-not-edit/>\n\n[Clippy](https://github.com/rust-lang/rust-clippy) helped 3 times to make code idiomatic. \n\n## v0.6.0 (2020-12-16)\n\nMaintenance release without any new features.\n\nThese are created to account for breaking changes within the dependency graph of\n`gitoxide` crates. Due to some blunders in the past the version on crates.io\ncould not be installed anymore.\nThis was eventually fixed with new minor releases across the ecosystem.\n\nFinally, yet another breaking change due to the introduction of the `gix-hash`\ncrate to break a dependency cycle between `gix-object` and `gix-features` caused\nyet another maintenance release.\n\n## v0.5.0 (2020-12-15)\n\nMaintenance release without any new features.\n\n### Commit Statistics\n\n<csr-read-only-do-not-edit/>\n\n - 5 commits contributed to the release over the course of 78 calendar days.\n - 84 days passed between releases.\n - 0 commits were understood as [conventional](https://www.conventionalcommits.org).\n - 0 issues like '(#ID)' were seen in commit messages\n\n### Commit Details\n\n<csr-read-only-do-not-edit/>\n\n<details><summary>view details</summary>\n\n * **Uncategorized**\n    - Merge branch 'commit-graph' into main ([`9cb09b2`](https://github.com/GitoxideLabs/gitoxide/commit/9cb09b248796f0ff5c9d3f3e857de4731324cfd5))\n    - Add lean-plumbing docs for path of commit-graph-verify ([`5c7b52d`](https://github.com/GitoxideLabs/gitoxide/commit/5c7b52d658d5b86bf4cf05c724202e824016c0e2))\n    - [commitgraph] Implement basic commit-graph file verification. ([`2571113`](https://github.com/GitoxideLabs/gitoxide/commit/2571113fea516737acedac08d66632ead499b474))\n    - [commitgraph] Stub out commit-graph-verify plumbing command. ([`aacf0f0`](https://github.com/GitoxideLabs/gitoxide/commit/aacf0f05a909e5b7d9ffd5623ef9833e0465be93))\n    - Merge branch 'main' into commit-graph ([`ca5b801`](https://github.com/GitoxideLabs/gitoxide/commit/ca5b80174b73cc9ac162b3f33b5d3721ef936cb1))\n</details>\n\n## v0.4.3 (2020-09-22)\n\n### Commit Statistics\n\n<csr-read-only-do-not-edit/>\n\n - 1 commit contributed to the release over the course of 1 calendar day.\n - 3 days passed between releases.\n - 0 commits were understood as [conventional](https://www.conventionalcommits.org).\n - 0 issues like '(#ID)' were seen in commit messages\n\n## v0.4.1 (2020-09-18)\n\n* fix installation via `cargo install`\n\n### Commit Statistics\n\n<csr-read-only-do-not-edit/>\n\n - 3 commits contributed to the release over the course of 6 calendar days.\n - 6 days passed between releases.\n - 0 commits were understood as [conventional](https://www.conventionalcommits.org).\n - 0 issues like '(#ID)' were seen in commit messages\n\n### Commit Details\n\n<csr-read-only-do-not-edit/>\n\n<details><summary>view details</summary>\n\n * **Uncategorized**\n    - Merge from main. ([`b59bd5e`](https://github.com/GitoxideLabs/gitoxide/commit/b59bd5e0b0895c7d1d585816cec8be4dea78c278))\n    - Finish removal of rust 2018 idioms ([`0d1699e`](https://github.com/GitoxideLabs/gitoxide/commit/0d1699e0e0bc9052be0a74b1b3f3d3eeeec39e3e))\n    - Provide terminal dimensions to better use horizontal space ([`11f6b84`](https://github.com/GitoxideLabs/gitoxide/commit/11f6b8497a5089377e605f4cbe1cd317ef677d59))\n</details>\n\n## v0.4.0 (2020-09-12)\n\n* add `remote-ref-list` and `pack-receive` subcommands to **gix**\n\n### CLI Breaking\n\n * rename plumbing sub-command from `index-from-pack` to `pack-index-from-data`\n\n### Commit Statistics\n\n<csr-read-only-do-not-edit/>\n\n - 14 commits contributed to the release over the course of 29 calendar days.\n - 30 days passed between releases.\n - 0 commits were understood as [conventional](https://www.conventionalcommits.org).\n - 0 issues like '(#ID)' were seen in commit messages\n\n### Commit Details\n\n<csr-read-only-do-not-edit/>\n\n<details><summary>view details</summary>\n\n * **Uncategorized**\n    - [clone] refs can now be written into a specified directory ([`fb1f048`](https://github.com/GitoxideLabs/gitoxide/commit/fb1f04837be994fa5bcb9aa24f25b5f4f72e4ce0))\n    - [clone] First version of writing references, but… ([`445be27`](https://github.com/GitoxideLabs/gitoxide/commit/445be27cf81663ba4fe941c00262448444efbac2))\n    - [clone] first journey test for pack-receive ([`46a3511`](https://github.com/GitoxideLabs/gitoxide/commit/46a3511aead043bc45256ce603285ff4d0fff60a))\n    - [clone] This actually works: first MVP of retrieving packs via clone ([`c06d819`](https://github.com/GitoxideLabs/gitoxide/commit/c06d8194173f9ec468ddd0faf72dd6d8dbf7d35d))\n    - [ref-ls] add pretty version for ls-refs ([`487d06d`](https://github.com/GitoxideLabs/gitoxide/commit/487d06d53b9cc201b5a009977e835b51f4b9f690))\n    - [ref-ls] Fix progress display ([`2fcb557`](https://github.com/GitoxideLabs/gitoxide/commit/2fcb557dce941eb94ca60f46ecee86b94e029db7))\n    - Refactor ([`b38290e`](https://github.com/GitoxideLabs/gitoxide/commit/b38290e4a8fcabd758f26a15407710ab2abcdc07))\n    - [ref-ls] refactor ([`35e26fc`](https://github.com/GitoxideLabs/gitoxide/commit/35e26fc32978232aebda3468c9f172fb7b08b815))\n    - Refactor ([`f90b92f`](https://github.com/GitoxideLabs/gitoxide/commit/f90b92ffc2994f594352abaf4bacd9767cbc2e6c))\n    - [ref-ls] Frame for remote-ref-ls command in gitoxide-core ([`161e7df`](https://github.com/GitoxideLabs/gitoxide/commit/161e7df34a53db40551879c6d2319ee775dfd551))\n    - [clone] link up lean plumbing command with gitoxide-core: pack-receive ([`5ea49c8`](https://github.com/GitoxideLabs/gitoxide/commit/5ea49c8aa0d449bed98ce0147ad222ff25c27c32))\n    - Refactor ([`40a6412`](https://github.com/GitoxideLabs/gitoxide/commit/40a64125dc5556630576ec2164b68838c76ccd79))\n    - Less ambiguous name for 'index-from-pack': 'pack-index-from-data' ([`386673c`](https://github.com/GitoxideLabs/gitoxide/commit/386673ccc99d18d023c7df3fcd40e86d71960b25))\n    - Refactor ([`b4a6e16`](https://github.com/GitoxideLabs/gitoxide/commit/b4a6e16364822c0dccb56f98dbfb0ca4c8007069))\n</details>\n\n## v0.3.0 (2020-08-12)\n\n* add `pack-explode` and `pack-index-from-data` sub-commands\n* massive speed improvements for `pack-verify`\n\nMany small and possibly breaking changes are not mentioned here.\n\n### Commit Statistics\n\n<csr-read-only-do-not-edit/>\n\n - 46 commits contributed to the release over the course of 30 calendar days.\n - 31 days passed between releases.\n - 0 commits were understood as [conventional](https://www.conventionalcommits.org).\n - 0 issues like '(#ID)' were seen in commit messages\n\n### Commit Details\n\n<csr-read-only-do-not-edit/>\n\n<details><summary>view details</summary>\n\n * **Uncategorized**\n    - Make obvious that interrupt request was received ([`34b2373`](https://github.com/GitoxideLabs/gitoxide/commit/34b23737f560fe52d4f98fb886eba754652f9a5e))\n    - Make interrupt handler work reliably ([`e71da0f`](https://github.com/GitoxideLabs/gitoxide/commit/e71da0fce6d6eab68f7b81b13cdc78ce8e9b7ee3))\n    - Unify used ranges for line renderer amond pretty and lean interface ([`f59f66e`](https://github.com/GitoxideLabs/gitoxide/commit/f59f66e189732f567414f68c7463364e510f41c4))\n    - Add percentage and throughput to tasks that matter ([`763d7ca`](https://github.com/GitoxideLabs/gitoxide/commit/763d7caa4c70111b7cb3ef5733d2c3c697758c28))\n    - Upgrade to latest iteration of prodash ([`3a4faec`](https://github.com/GitoxideLabs/gitoxide/commit/3a4faecab56e37670c553e6563f11a46d740c333))\n    - Support for JSON format output ([`1931575`](https://github.com/GitoxideLabs/gitoxide/commit/19315750f4f409e3f105c3c4054c4afbef91daad))\n    - First pieces of the index-from-pack journey tests ([`181d69c`](https://github.com/GitoxideLabs/gitoxide/commit/181d69c1da46a931c513cbd7d8bca7b2fa53351c))\n    - Add versions back to main command, remove from sub-commands ([`e509373`](https://github.com/GitoxideLabs/gitoxide/commit/e509373b26c9a7b120057fc6e75970568f328fc4))\n    - Ditch structopt in favor of clap 3.0 beta1 ([`d7591e2`](https://github.com/GitoxideLabs/gitoxide/commit/d7591e24a5178732713286a5e28cbc90f5fe9ed9))\n    - Move common flags to common plac ([`c0352c2`](https://github.com/GitoxideLabs/gitoxide/commit/c0352c2643e2badde79778d4a22d2e392a44f0a3))\n    - Write about user interfaces and the use/non-use of async ([`91ba045`](https://github.com/GitoxideLabs/gitoxide/commit/91ba0457745f860b7a68cb38b13e69754747e8d9))\n    - Interrupt support for pretty plumbing ([`bca7ce2`](https://github.com/GitoxideLabs/gitoxide/commit/bca7ce2e668a4be2600d2d04d00f46b21c82eee2))\n    - Revert \"Less memory for look up mode, faster start\" - too slow ([`584350a`](https://github.com/GitoxideLabs/gitoxide/commit/584350af91f533db4cf980327d530445384c6b5a))\n    - Less memory for look up mode, faster start ([`395c7e7`](https://github.com/GitoxideLabs/gitoxide/commit/395c7e78ef344ee56cf3d4ef49828942a09094bc))\n    - Remove memory mode entirely (and some complexity with it) ([`8812e91`](https://github.com/GitoxideLabs/gitoxide/commit/8812e916a21983868a37c4aade10f79a1dc9b926))\n    - Turns out you never want to keep deltas in memory ([`657aa2c`](https://github.com/GitoxideLabs/gitoxide/commit/657aa2c38673cf10174f42bcb97039ac37b2926e))\n    - Remove support for keeping compressed memory to reduce the index size ([`1e2ec7e`](https://github.com/GitoxideLabs/gitoxide/commit/1e2ec7e9d0ef2f2a4908860672080e411e945bff))\n    - …but there seem to be issues with the kernel pack… ([`cc147bc`](https://github.com/GitoxideLabs/gitoxide/commit/cc147bc60066c4ef31353a499958edadc960a9c4))\n    - Minor fixes after first local tests - it's up to twice as fast!! ([`43c7fd1`](https://github.com/GitoxideLabs/gitoxide/commit/43c7fd1f81b9b4c938f99c0bf1deabdf121226b9))\n    - Quick and dirty impl of lean command-line for index-from-pack ([`9660bbf`](https://github.com/GitoxideLabs/gitoxide/commit/9660bbffd8ace621178b067e22d227ef8c50ba84))\n    - Upgrade dependencies ([`44b8221`](https://github.com/GitoxideLabs/gitoxide/commit/44b8221800454f9b651778a422186bd5061877f4))\n    - Remove invalid clap configuration ([`665696f`](https://github.com/GitoxideLabs/gitoxide/commit/665696f636e152ad9969ea0ca004cb83f1641ae6))\n    - Prepare full 'verify' implementation ([`ee45c7f`](https://github.com/GitoxideLabs/gitoxide/commit/ee45c7f47b95fc406cc5922a322c8fd6c0f52775))\n    - Refactor ([`0a33b24`](https://github.com/GitoxideLabs/gitoxide/commit/0a33b24f5b61ccdf1358f1e9adcf0f6fd4099c1c))\n    - Allow sink-compress configuration; choose best algorithm ([`29b9c23`](https://github.com/GitoxideLabs/gitoxide/commit/29b9c230e35ba9b4334797b63ab9fa88c2fe59d0))\n    - Nice error message on failure ([`adbc82c`](https://github.com/GitoxideLabs/gitoxide/commit/adbc82c31450681fcb38233eeb8095efc5e52a18))\n    - The first 'explode' implementation… ([`0d31ad1`](https://github.com/GitoxideLabs/gitoxide/commit/0d31ad1b61997fa0d0692c5919fb8032ffaaa35b))\n    - Get all pieces ready for action ([`1805d64`](https://github.com/GitoxideLabs/gitoxide/commit/1805d64b9222d6a05a8718f04b29b789c1f42fea))\n    - Pass option for safety checks down to explode(…) ([`0bcb790`](https://github.com/GitoxideLabs/gitoxide/commit/0bcb790dc8c35097916876afbb68bbfcc894c369))\n    - Refactor ([`f66b116`](https://github.com/GitoxideLabs/gitoxide/commit/f66b116ddfbee62c3e20a4c5e7cd878fbf064195))\n    - Basic tests and CLI args for explode pack ([`f932256`](https://github.com/GitoxideLabs/gitoxide/commit/f932256a62d6fc5d5558446de079fb666ddc27da))\n    - Rename verify-pack to pack-verify (keeping it more formal) ([`ec8c48a`](https://github.com/GitoxideLabs/gitoxide/commit/ec8c48a8fcbcd748c9c764734d881b5f0217e1e4))\n    - Refactor ([`d3c00c8`](https://github.com/GitoxideLabs/gitoxide/commit/d3c00c841ee1aeda6bb0534fe365db13c31f8d3c))\n    - Change bin names from 'gio' to 'gix' and 'gixp' ([`5e23137`](https://github.com/GitoxideLabs/gitoxide/commit/5e231371432ad02c67b095448564b2aa6af76799))\n    - Revert \"Invert --statitics switch to become --no-statistics\" ([`93a9b30`](https://github.com/GitoxideLabs/gitoxide/commit/93a9b30069d9abc5742546ade90913026ac5774b))\n    - Invert --statitics switch to become --no-statistics ([`aeb8778`](https://github.com/GitoxideLabs/gitoxide/commit/aeb87789ecc5cf3fd0ac69d67c7d0785e4eb329c))\n    - Use faster algorithm by default ([`bb45c3d`](https://github.com/GitoxideLabs/gitoxide/commit/bb45c3d8a2aabf87231981000240f0444abf6fc4))\n    - Fix clippy ([`ec40e09`](https://github.com/GitoxideLabs/gitoxide/commit/ec40e093d72f93d86168f39ebaca5b122ca0bec3))\n    - Change course and do pack streaming first ([`bcb275e`](https://github.com/GitoxideLabs/gitoxide/commit/bcb275e91cfd6f0a71b3cb59a2b706b60608a594))\n    - Get rid of annoying warnings - there is no better and easier way ([`41f38c4`](https://github.com/GitoxideLabs/gitoxide/commit/41f38c442e086b1f3fb48eea25839ef6207f0cbc))\n    - Fully implement --encode and --re-encode flags ([`a7cfac8`](https://github.com/GitoxideLabs/gitoxide/commit/a7cfac83ddd859d9c2c25e457c0d7043738792dc))\n    - Prepare for re-encoding each pack object ([`afae684`](https://github.com/GitoxideLabs/gitoxide/commit/afae684c72e5dc4b718976056dd5d34ed61de72a))\n    - Fix naming change, which was introduced accidentally ([`fbb9f98`](https://github.com/GitoxideLabs/gitoxide/commit/fbb9f98508ec722e192466e28ded47aef2fb78b3))\n    - Refactor ([`2888f1b`](https://github.com/GitoxideLabs/gitoxide/commit/2888f1b10a2baf40155544e667ddd461f3ddc938))\n    - Pass threadlimit down from CLIs ([`f98c5b1`](https://github.com/GitoxideLabs/gitoxide/commit/f98c5b160db80a7cac530e18b9256562c25be47f))\n    - Add new Context argument to support more configuration options ([`7c5d8b8`](https://github.com/GitoxideLabs/gitoxide/commit/7c5d8b8bb318e59a59ad74ad767a1525e2833632))\n</details>\n\n## v0.1.0 (2020-07-12)\n\n* Initial release with `pack-verify`\n\n### Commit Statistics\n\n<csr-read-only-do-not-edit/>\n\n - 54 commits contributed to the release.\n - 0 commits were understood as [conventional](https://www.conventionalcommits.org).\n - 0 issues like '(#ID)' were seen in commit messages\n\n### Commit Details\n\n<csr-read-only-do-not-edit/>\n\n<details><summary>view details</summary>\n\n * **Uncategorized**\n    - Bring color back to 'max' versions ([`c68d9ab`](https://github.com/GitoxideLabs/gitoxide/commit/c68d9ab6e9cccab3610a77a2c6839a26fb42de2d))\n    - Support for disabling the cursor in the pretty line renderer ([`48c4bbd`](https://github.com/GitoxideLabs/gitoxide/commit/48c4bbd35f678de801fa2243f7a8705e825bdbf9))\n    - Allow TUI to terminate action properly ([`1f1b725`](https://github.com/GitoxideLabs/gitoxide/commit/1f1b7257895a219b5623b1ba3beaee1282ff2b63))\n    - Refactor ([`cce71aa`](https://github.com/GitoxideLabs/gitoxide/commit/cce71aadb53528cb2f1d173b81df939ad1df8083))\n    - Refactor ([`f276a05`](https://github.com/GitoxideLabs/gitoxide/commit/f276a0561fcec78f802b166f09110becf22ea7ee))\n    - Preliminary support for line renderer in max version ([`4aa8022`](https://github.com/GitoxideLabs/gitoxide/commit/4aa8022c248fc26292ea9f1c61e2e8dbadc56e7c))\n    - Unify frame rate across plumbing (and later potentially porcelain) ([`e2a7bdd`](https://github.com/GitoxideLabs/gitoxide/commit/e2a7bdd9a549400f0e8d31b590f469660e458c89))\n    - Refactor ([`41e01a5`](https://github.com/GitoxideLabs/gitoxide/commit/41e01a53a7f48dd3341ee287a243a33190bccea0))\n    - Proper implementation of line renderer into 'lean' CLI ([`e98e7c2`](https://github.com/GitoxideLabs/gitoxide/commit/e98e7c280d73e9d9ebd13202afb93a56cb2f7c9c))\n    - Mild improvements to look of verbose log ([`5fff552`](https://github.com/GitoxideLabs/gitoxide/commit/5fff5524c4443d9c9ae26307c19745c722334d0c))\n    - First very basic version of line renderer progress - works… ([`0cc1bf2`](https://github.com/GitoxideLabs/gitoxide/commit/0cc1bf25c69611f9512fec415ae8e09b608706fc))\n    - Prepare for optional addition of line renderer for lean version ([`aac0d34`](https://github.com/GitoxideLabs/gitoxide/commit/aac0d341eb02f0dccdf740f7ef15e8f585907544))\n    - Upgrade to prodash version 7 ([`af02b46`](https://github.com/GitoxideLabs/gitoxide/commit/af02b46cc1eff5ba1da7da20d3f524a79fad686f))\n    - Make --version flags work as expected. ([`a4d978c`](https://github.com/GitoxideLabs/gitoxide/commit/a4d978ccc11e73fd752055c9a28b3b23dea145ea))\n    - Merge branch 'release' ([`a1a0b13`](https://github.com/GitoxideLabs/gitoxide/commit/a1a0b135c991edfe5cddb71c5fbfbed25b47e3b3))\n    - Rename 'pretty' target into 'max', a better fit for what it is ([`5acecc5`](https://github.com/GitoxideLabs/gitoxide/commit/5acecc59d2d39141f2e98b6f8556c6d457ab0965))\n    - Make gio commands less cumbersome, self-document their build type (pretty, lean) ([`1f9bc03`](https://github.com/GitoxideLabs/gitoxide/commit/1f9bc03dd773d90960a6f6d4ee59af3f938ad80b))\n    - Allow to limit the logging depth for less cluttered output ([`fce7035`](https://github.com/GitoxideLabs/gitoxide/commit/fce703531d7006f7d961d6ffa66f51f6c9bc0efc))\n    - Support for json in pretty-plumbing and gitoxide (on demand) ([`b3780f8`](https://github.com/GitoxideLabs/gitoxide/commit/b3780f87438d34b372c48b7385199f7ea22b3965))\n    - Simplify the 'keep open' logic of TUI progress window ([`13cd8ce`](https://github.com/GitoxideLabs/gitoxide/commit/13cd8ce372800eb0016190960834c759c9744b9c))\n    - Attempt to implement progress with a mode enum ([`ac490c2`](https://github.com/GitoxideLabs/gitoxide/commit/ac490c21b8f369c45ee0d7688ddb381ce6f4af94))\n    - Allow for more screen space when formatting ([`6794300`](https://github.com/GitoxideLabs/gitoxide/commit/67943002e7f4215b5383bd0538786ce2857f011e))\n    - Assure pretty progress doesn't occlude the output ([`122d69f`](https://github.com/GitoxideLabs/gitoxide/commit/122d69fee217eb264a335f0a056d03eba066332e))\n    - Fix pretty build ([`6adf615`](https://github.com/GitoxideLabs/gitoxide/commit/6adf615ed7d6c488c25589940fc0a55bf0fb3d5c))\n    - Pass average stats through to the top level ([`5b4979c`](https://github.com/GitoxideLabs/gitoxide/commit/5b4979c1dfeb9a29974dd4e6529ae5da074d0b1a))\n    - Refactor ([`7add82c`](https://github.com/GitoxideLabs/gitoxide/commit/7add82c39169e3c2fff76c48cdd318fe6040d7bc))\n    - Now ACTUALLY stop TUI when there is no progress anymore :D ([`3bf3321`](https://github.com/GitoxideLabs/gitoxide/commit/3bf33210a96e1e3bc2a81782b339b5c67344ac34))\n    - Automatically close the TUI when there is no progress anymore. ([`c416152`](https://github.com/GitoxideLabs/gitoxide/commit/c416152b04051958de7bd161a8a2ee42ca163275))\n    - Assure we wait for GUI thread to finish ([`60eaea0`](https://github.com/GitoxideLabs/gitoxide/commit/60eaea0ee01214202ab9f23514dc45a9909d7888))\n    - Pretty progress in a generalized form ([`caa883b`](https://github.com/GitoxideLabs/gitoxide/commit/caa883b96827deb63b5c8787ed820d22f2c85249))\n    - Neater progress log messages: don't show the module it originates from ([`026a0dd`](https://github.com/GitoxideLabs/gitoxide/commit/026a0dd1faf28c4668f58bd1790c168a0134559f))\n    - Refactor ([`30925e6`](https://github.com/GitoxideLabs/gitoxide/commit/30925e654144a05365908f7d2aa90deb7b2952d3))\n    - Support for logging in pretty binaries ([`67026e4`](https://github.com/GitoxideLabs/gitoxide/commit/67026e479f0aa3e47ff3fd230c8741a7a5dbe99c))\n    - --verbose flag for lean plumbing binary ([`aaf4825`](https://github.com/GitoxideLabs/gitoxide/commit/aaf482584d1ee080c0a6c091c4675736c4c8d6a7))\n    - First very basic progress implementation ([`b820717`](https://github.com/GitoxideLabs/gitoxide/commit/b8207177daee8a9ffa23c7c052cf9ca651b15804))\n    - Pass progress everywhere, for now just to discard it ([`da3ae1c`](https://github.com/GitoxideLabs/gitoxide/commit/da3ae1c82cd726b8fae9b8d26069719930e9ba99))\n    - Split plumbing into separate binary ([`b1e51d6`](https://github.com/GitoxideLabs/gitoxide/commit/b1e51d6a83ca7a00923b39209d0a2bfb3b78de0d))\n    - Refactor ([`0fbba9f`](https://github.com/GitoxideLabs/gitoxide/commit/0fbba9fe7597af03912f956c251c88472b48c3eb))\n    - Refactor ([`ba6a8ef`](https://github.com/GitoxideLabs/gitoxide/commit/ba6a8ef064a9884066414c82f4f7d1bb72ab524f))\n    - Add initial version of 'lean-cli' feature toggle, but… ([`f01c298`](https://github.com/GitoxideLabs/gitoxide/commit/f01c2985732ac05b24a7fcbc3752ef52dd1bc438))\n    - Support for verifying pack files and index files ([`b09b4e1`](https://github.com/GitoxideLabs/gitoxide/commit/b09b4e1f35c3802dfd3418bda42b96828acd9ec8))\n    - Reorganize crates to make 'gitoxide' the CLI, and 'gitoxide-core' the library ([`0ac9c5a`](https://github.com/GitoxideLabs/gitoxide/commit/0ac9c5af0cbb562d3cb48a661736afd98dd1a940))\n    - Add simple pack verification to gio ([`8c0e0b5`](https://github.com/GitoxideLabs/gitoxide/commit/8c0e0b5bb79c8c337eed03d37cbf818d8bb9c924))\n    - Goodbye git-core, hello git-repository ([`7cec2b6`](https://github.com/GitoxideLabs/gitoxide/commit/7cec2b648f86fc665b4fc5bfe269e9ca16679a55))\n    - Document existing use of unsafe, deny everywhere else ([`41f4bce`](https://github.com/GitoxideLabs/gitoxide/commit/41f4bce9d9a492f8e20a6eb5b3eaf5adc6d78329))\n    - Cargo clippy ([`1179ac1`](https://github.com/GitoxideLabs/gitoxide/commit/1179ac16ea2bb84816f9b615d1191f8a2d4e775b))\n    - Move parsing tests close to actual parsing ([`3ca2c59`](https://github.com/GitoxideLabs/gitoxide/commit/3ca2c592d91c9aa8fab8ed749871d6d96f2ef4e2))\n    - Color for all grit commands/subcommands ([`aa8efdd`](https://github.com/GitoxideLabs/gitoxide/commit/aa8efdd922d45bdab668dc71e8b30adf79930667))\n    - Use structopt instead of clap ([`eb7388c`](https://github.com/GitoxideLabs/gitoxide/commit/eb7388c5d51e4ef3ea928d5f8f9e5b218cdbbd57))\n    - Remove failure from grit binary, too ([`417c34b`](https://github.com/GitoxideLabs/gitoxide/commit/417c34b82469bcc3391706646dd39c7f6d1ad69c))\n    - Refactor ([`87c8a2e`](https://github.com/GitoxideLabs/gitoxide/commit/87c8a2e288140b04e163fe85266d040d039ec69c))\n    - Cargo fmt ([`2aa0857`](https://github.com/GitoxideLabs/gitoxide/commit/2aa085752aa3e99b51034a3dec882aea8c27ad94))\n    - Implement git-init ([`57737c2`](https://github.com/GitoxideLabs/gitoxide/commit/57737c2c48ff898a327ba57712fea21b5d83188e))\n    - Initial commit - based on standard project template ([`c3d319f`](https://github.com/GitoxideLabs/gitoxide/commit/c3d319f2b3076a0bb169bcd8a7b6a011f6aba9a5))\n</details>\n\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 5.10546875,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nWe as members, contributors, and leaders pledge to make participation in our\ncommunity a harassment-free experience for everyone, regardless of age, body\nsize, visible or invisible disability, ethnicity, sex characteristics, gender\nidentity and expression, level of experience, education, socio-economic status,\nnationality, personal appearance, race, religion, or sexual identity\nand orientation.\n\nWe pledge to act and interact in ways that contribute to an open, welcoming,\ndiverse, inclusive, and healthy community.\n\n## Our Standards\n\nExamples of behavior that contributes to a positive environment for our\ncommunity include:\n\n* Demonstrating empathy and kindness toward other people\n* Being respectful of differing opinions, viewpoints, and experiences\n* Giving and gracefully accepting constructive feedback\n* Accepting responsibility and apologizing to those affected by our mistakes,\n  and learning from the experience\n* Focusing on what is best not just for us as individuals, but for the\n  overall community\n\nExamples of unacceptable behavior include:\n\n* The use of sexualized language or imagery, and sexual attention or\n  advances of any kind\n* Trolling, insulting or derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or email\n  address, without their explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Enforcement Responsibilities\n\nCommunity leaders are responsible for clarifying and enforcing our standards of\nacceptable behavior and will take appropriate and fair corrective action in\nresponse to any behavior that they deem inappropriate, threatening, offensive,\nor harmful.\n\nCommunity leaders have the right and responsibility to remove, edit, or reject\ncomments, commits, code, wiki edits, issues, and other contributions that are\nnot aligned to this Code of Conduct, and will communicate reasons for moderation\ndecisions when appropriate.\n\n## Scope\n\nThis Code of Conduct applies within all community spaces, and also applies when\nan individual is officially representing the community in public spaces.\nExamples of representing our community include using an official e-mail address,\nposting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported to the community leaders responsible for enforcement at\nsebastian.thiel@icloud.com.\nAll complaints will be reviewed and investigated promptly and fairly.\n\nAll community leaders are obligated to respect the privacy and security of the\nreporter of any incident.\n\n## Enforcement Guidelines\n\nCommunity leaders will follow these Community Impact Guidelines in determining\nthe consequences for any action they deem in violation of this Code of Conduct:\n\n### 1. Correction\n\n**Community Impact**: Use of inappropriate language or other behavior deemed\nunprofessional or unwelcome in the community.\n\n**Consequence**: A private, written warning from community leaders, providing\nclarity around the nature of the violation and an explanation of why the\nbehavior was inappropriate. A public apology may be requested.\n\n### 2. Warning\n\n**Community Impact**: A violation through a single incident or series\nof actions.\n\n**Consequence**: A warning with consequences for continued behavior. No\ninteraction with the people involved, including unsolicited interaction with\nthose enforcing the Code of Conduct, for a specified period of time. This\nincludes avoiding interactions in community spaces as well as external channels\nlike social media. Violating these terms may lead to a temporary or\npermanent ban.\n\n### 3. Temporary Ban\n\n**Community Impact**: A serious violation of community standards, including\nsustained inappropriate behavior.\n\n**Consequence**: A temporary ban from any sort of interaction or public\ncommunication with the community for a specified period of time. No public or\nprivate interaction with the people involved, including unsolicited interaction\nwith those enforcing the Code of Conduct, is allowed during this period.\nViolating these terms may lead to a permanent ban.\n\n### 4. Permanent Ban\n\n**Community Impact**: Demonstrating a pattern of violation of community\nstandards, including sustained inappropriate behavior,  harassment of an\nindividual, or aggression toward or disparagement of classes of individuals.\n\n**Consequence**: A permanent ban from any sort of public interaction within\nthe community.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage],\nversion 2.0, available at\nhttps://www.contributor-covenant.org/version/2/0/code_of_conduct.html.\n\nCommunity Impact Guidelines were inspired by [Mozilla's code of conduct\nenforcement ladder](https://github.com/mozilla/diversity).\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see the FAQ at\nhttps://www.contributor-covenant.org/faq. Translations are available at\nhttps://www.contributor-covenant.org/translations.\n"
        },
        {
          "name": "COLLABORATING.md",
          "type": "blob",
          "size": 2.25390625,
          "content": "\n### On how to work together\n\n- **we do trunk-based development** with a _twist_\n   - Long lasting feature branches are discouraged, and instead small commits to `main` are preferred.\n   - **use preferably short-lived PRs when…**\n     - …you potentially want feedback on changes\n     - …changes would break _known_ downstream users, to allow those who are affected to influence the outcome towards greater value.\n   - **use issues for analysis and discussion of features and to track PRs…**\n     - …if collaboration on a feature and prior feedback is desired\n   - **feel free to use the [project-board] to organize your issues, PRs or cards**\n- **`main` must never be broken or show warnings**\n   - An easy way to achieve this is to run `just test check-size` before pushing or `just check-size && git push`.\n   - If you're unsure about remembering to do this, we suggest using a pre-commit git hook.\n- **if `main` breaks on CI** _which can happen nonetheless_…\n    - …and you _do know_ the cause, please fix it immediately. If necessary by reverting the offending commit until a more durable fix is possible.\n    - …and you _do not know_ the cause, please open a PR to invite collaborators for their input. This is to avoid multiple collaborators\n      trying to fix the issue independently, causing merge-conflicts and confusion. We use this PR as synchronization primitive.\n- **for crates _you own_**\n    - feel free to make any kind of changes to it, including major ones.\n    - please use `cargo smart-release` for publishing to crates.io as it will handle dependencies properly.\n- **for crates _you do not own_**\n    - for major or architectural changes please open a [discussion], an issue or a PR to allow\n      participation and don't merge until there is agreement.\n    - for minor code changes, if they are minor, feel free to make any kind of change you need.\n\nThe workflow can be changed after public discussion - to get started, open a PR.\n\n\nPlease see the [development guide] for more detailed information on how code and cargo manifests are structured.\n\n[development guide]: https://github.com/GitoxideLabs/gitoxide/blob/main/DEVELOPMENT.md\n[project-board]: https://github.com/GitoxideLabs/gitoxide/projects\n[discussions]: https://github.com/GitoxideLabs/gitoxide/discussions\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.1279296875,
          "content": "For now, please have a look at the section in the [README] file.\n\n[README]: https://github.com/GitoxideLabs/gitoxide#contributions\n"
        },
        {
          "name": "Cargo.lock",
          "type": "blob",
          "size": 140.826171875,
          "content": "# This file is automatically @generated by Cargo.\n# It is not intended for manual editing.\nversion = 3\n\n[[package]]\nname = \"addr2line\"\nversion = \"0.24.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dfbe277e56a376000877090da837660b4427aad530e3028d44e0bffe4f89a1c1\"\ndependencies = [\n \"gimli\",\n]\n\n[[package]]\nname = \"adler2\"\nversion = \"2.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"512761e0bb2578dd7380c6baaa0f4ce03e84f95e960231d1dec8bf4d7d6e2627\"\n\n[[package]]\nname = \"ahash\"\nversion = \"0.8.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e89da841a80418a9b391ebaea17f5c112ffaaa96f621d2c285b5174da76b9011\"\ndependencies = [\n \"cfg-if\",\n \"getrandom\",\n \"once_cell\",\n \"version_check\",\n \"zerocopy\",\n]\n\n[[package]]\nname = \"aho-corasick\"\nversion = \"1.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8e60d3430d3a69478ad0993f19238d2df97c507009a52b3c10addcd7f6bcb916\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"allocator-api2\"\nversion = \"0.2.20\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"45862d1c77f2228b9e10bc609d5bc203d86ebc9b87ad8d5d5167a6c9abf739d9\"\n\n[[package]]\nname = \"anes\"\nversion = \"0.1.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4b46cbb362ab8752921c97e041f5e366ee6297bd428a31275b9fcf1e380f7299\"\n\n[[package]]\nname = \"ansiterm\"\nversion = \"0.12.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4ab587f5395da16dd2e6939adf53dede583221b320cadfb94e02b5b7b9bf24cc\"\ndependencies = [\n \"winapi\",\n]\n\n[[package]]\nname = \"anstream\"\nversion = \"0.6.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8acc5369981196006228e28809f761875c0327210a891e941f4c683b3a99529b\"\ndependencies = [\n \"anstyle\",\n \"anstyle-parse\",\n \"anstyle-query\",\n \"anstyle-wincon\",\n \"colorchoice\",\n \"is_terminal_polyfill\",\n \"utf8parse\",\n]\n\n[[package]]\nname = \"anstyle\"\nversion = \"1.0.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"55cc3b69f167a1ef2e161439aa98aed94e6028e5f9a59be9a6ffb47aef1651f9\"\n\n[[package]]\nname = \"anstyle-parse\"\nversion = \"0.2.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3b2d16507662817a6a20a9ea92df6652ee4f94f914589377d69f3b21bc5798a9\"\ndependencies = [\n \"utf8parse\",\n]\n\n[[package]]\nname = \"anstyle-query\"\nversion = \"1.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"79947af37f4177cfead1110013d678905c37501914fba0efea834c3fe9a8d60c\"\ndependencies = [\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"anstyle-wincon\"\nversion = \"3.0.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2109dbce0e72be3ec00bed26e6a7479ca384ad226efdd66db8fa2e3a38c83125\"\ndependencies = [\n \"anstyle\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"anyhow\"\nversion = \"1.0.93\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4c95c10ba0b00a02636238b814946408b1322d5ac4760326e6fb8ec956d85775\"\n\n[[package]]\nname = \"arbitrary\"\nversion = \"1.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dde20b3d026af13f561bdd0f15edf01fc734f0dafcedbaf42bba506a9517f223\"\ndependencies = [\n \"derive_arbitrary\",\n]\n\n[[package]]\nname = \"arc-swap\"\nversion = \"1.7.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"69f7f8c3906b62b754cd5326047894316021dcfe5a194c8ea52bdd94934a3457\"\n\n[[package]]\nname = \"arrayvec\"\nversion = \"0.7.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7c02d123df017efcdfbd739ef81735b36c5ba83ec3c59c80a9d7ecc718f92e50\"\n\n[[package]]\nname = \"assert_matches\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9b34d609dfbaf33d6889b2b7106d3ca345eacad44200913df5ba02bfd31d2ba9\"\n\n[[package]]\nname = \"async-attributes\"\nversion = \"1.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a3203e79f4dd9bdda415ed03cf14dae5a2bf775c683a00f94e9cd1faf0f596e5\"\ndependencies = [\n \"quote\",\n \"syn 1.0.109\",\n]\n\n[[package]]\nname = \"async-channel\"\nversion = \"1.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"81953c529336010edd6d8e358f886d9581267795c61b19475b71314bffa46d35\"\ndependencies = [\n \"concurrent-queue\",\n \"event-listener 2.5.3\",\n \"futures-core\",\n]\n\n[[package]]\nname = \"async-channel\"\nversion = \"2.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"89b47800b0be77592da0afd425cc03468052844aff33b84e33cc696f64e77b6a\"\ndependencies = [\n \"concurrent-queue\",\n \"event-listener-strategy\",\n \"futures-core\",\n \"pin-project-lite\",\n]\n\n[[package]]\nname = \"async-executor\"\nversion = \"1.13.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"30ca9a001c1e8ba5149f91a74362376cc6bc5b919d92d988668657bd570bdcec\"\ndependencies = [\n \"async-task\",\n \"concurrent-queue\",\n \"fastrand\",\n \"futures-lite\",\n \"slab\",\n]\n\n[[package]]\nname = \"async-global-executor\"\nversion = \"2.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"05b1b633a2115cd122d73b955eadd9916c18c8f510ec9cd1686404c60ad1c29c\"\ndependencies = [\n \"async-channel 2.3.1\",\n \"async-executor\",\n \"async-io\",\n \"async-lock\",\n \"blocking\",\n \"futures-lite\",\n \"once_cell\",\n]\n\n[[package]]\nname = \"async-io\"\nversion = \"2.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"43a2b323ccce0a1d90b449fd71f2a06ca7faa7c54c2751f06c9bd851fc061059\"\ndependencies = [\n \"async-lock\",\n \"cfg-if\",\n \"concurrent-queue\",\n \"futures-io\",\n \"futures-lite\",\n \"parking\",\n \"polling\",\n \"rustix\",\n \"slab\",\n \"tracing\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"async-lock\"\nversion = \"3.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ff6e472cdea888a4bd64f342f09b3f50e1886d32afe8df3d663c01140b811b18\"\ndependencies = [\n \"event-listener 5.3.1\",\n \"event-listener-strategy\",\n \"pin-project-lite\",\n]\n\n[[package]]\nname = \"async-net\"\nversion = \"2.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b948000fad4873c1c9339d60f2623323a0cfd3816e5181033c6a5cb68b2accf7\"\ndependencies = [\n \"async-io\",\n \"blocking\",\n \"futures-lite\",\n]\n\n[[package]]\nname = \"async-std\"\nversion = \"1.13.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c634475f29802fde2b8f0b505b1bd00dfe4df7d4a000f0b36f7671197d5c3615\"\ndependencies = [\n \"async-attributes\",\n \"async-channel 1.9.0\",\n \"async-global-executor\",\n \"async-io\",\n \"async-lock\",\n \"crossbeam-utils\",\n \"futures-channel\",\n \"futures-core\",\n \"futures-io\",\n \"futures-lite\",\n \"gloo-timers\",\n \"kv-log-macro\",\n \"log\",\n \"memchr\",\n \"once_cell\",\n \"pin-project-lite\",\n \"pin-utils\",\n \"slab\",\n \"wasm-bindgen-futures\",\n]\n\n[[package]]\nname = \"async-task\"\nversion = \"4.7.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8b75356056920673b02621b35afd0f7dda9306d03c79a30f5c56c44cf256e3de\"\n\n[[package]]\nname = \"async-trait\"\nversion = \"0.1.83\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"721cae7de5c34fbb2acd27e21e6d2cf7b886dce0c27388d46c4e6c47ea4318dd\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.89\",\n]\n\n[[package]]\nname = \"atomic-waker\"\nversion = \"1.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1505bd5d3d116872e7271a6d4e16d81d0c8570876c8de68093a09ac269d8aac0\"\n\n[[package]]\nname = \"autocfg\"\nversion = \"1.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ace50bade8e6234aa140d9a2f552bbee1db4d353f69b8217bc503490fc1a9f26\"\n\n[[package]]\nname = \"aws-lc-rs\"\nversion = \"1.11.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f47bb8cc16b669d267eeccf585aea077d0882f4777b1c1f740217885d6e6e5a3\"\ndependencies = [\n \"aws-lc-sys\",\n \"paste\",\n \"zeroize\",\n]\n\n[[package]]\nname = \"aws-lc-sys\"\nversion = \"0.23.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a2101df3813227bbaaaa0b04cd61c534c7954b22bd68d399b440be937dc63ff7\"\ndependencies = [\n \"bindgen\",\n \"cc\",\n \"cmake\",\n \"dunce\",\n \"fs_extra\",\n \"libc\",\n \"paste\",\n]\n\n[[package]]\nname = \"backtrace\"\nversion = \"0.3.74\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8d82cb332cdfaed17ae235a638438ac4d4839913cc2af585c3c6746e8f8bee1a\"\ndependencies = [\n \"addr2line\",\n \"cfg-if\",\n \"libc\",\n \"miniz_oxide\",\n \"object\",\n \"rustc-demangle\",\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"base64\"\nversion = \"0.22.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"72b3254f16251a8381aa12e40e3c4d2f0199f8c6508fbecb9d91f575e0fbb8c6\"\n\n[[package]]\nname = \"bindgen\"\nversion = \"0.69.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"271383c67ccabffb7381723dea0672a673f292304fcb45c01cc648c7a8d58088\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"cexpr\",\n \"clang-sys\",\n \"itertools 0.12.1\",\n \"lazy_static\",\n \"lazycell\",\n \"log\",\n \"prettyplease\",\n \"proc-macro2\",\n \"quote\",\n \"regex\",\n \"rustc-hash 1.1.0\",\n \"shlex\",\n \"syn 2.0.89\",\n \"which\",\n]\n\n[[package]]\nname = \"bitflags\"\nversion = \"1.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bef38d45163c2f1dde094a7dfd33ccf595c92905c8f8f4fdc18d06fb1037718a\"\n\n[[package]]\nname = \"bitflags\"\nversion = \"2.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b048fb63fd8b5923fc5aa7b340d8e156aec7ec02f0c78fa8a6ddc2613f6f71de\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"block-buffer\"\nversion = \"0.10.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3078c7629b62d3f0439517fa394996acacc5cbc91c5a20d8c658e77abd503a71\"\ndependencies = [\n \"generic-array\",\n]\n\n[[package]]\nname = \"blocking\"\nversion = \"1.6.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"703f41c54fc768e63e091340b424302bb1c29ef4aa0c7f10fe849dfb114d29ea\"\ndependencies = [\n \"async-channel 2.3.1\",\n \"async-task\",\n \"futures-io\",\n \"futures-lite\",\n \"piper\",\n]\n\n[[package]]\nname = \"bstr\"\nversion = \"1.11.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1a68f1f47cdf0ec8ee4b941b2eee2a80cb796db73118c0dd09ac63fbe405be22\"\ndependencies = [\n \"memchr\",\n \"regex-automata\",\n \"serde\",\n]\n\n[[package]]\nname = \"bumpalo\"\nversion = \"3.16.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"79296716171880943b8470b5f8d03aa55eb2e645a4874bdbb28adb49162e012c\"\n\n[[package]]\nname = \"byteorder\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1fd0f2584146f6f2ef48085050886acf353beff7305ebd1ae69500e27c67f64b\"\n\n[[package]]\nname = \"bytes\"\nversion = \"1.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9ac0150caa2ae65ca5bd83f25c7de183dea78d4d366469f148435e2acfbad0da\"\n\n[[package]]\nname = \"bytesize\"\nversion = \"1.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a3e368af43e418a04d52505cf3dbc23dda4e3407ae2fa99fd0e4f308ce546acc\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"cap\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6f125eb85b84a24c36b02ed1d22c9dd8632f53b3cde6e4d23512f94021030003\"\n\n[[package]]\nname = \"cassowary\"\nversion = \"0.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"df8670b8c7b9dae1793364eafadf7239c40d669904660c5960d74cfd80b46a53\"\n\n[[package]]\nname = \"cast\"\nversion = \"0.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"37b2a672a2cb129a2e41c10b1224bb368f9f37a2b16b612598138befd7b37eb5\"\n\n[[package]]\nname = \"castaway\"\nversion = \"0.2.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0abae9be0aaf9ea96a3b1b8b1b55c602ca751eba1b1500220cea4ecbafe7c0d5\"\ndependencies = [\n \"rustversion\",\n]\n\n[[package]]\nname = \"cc\"\nversion = \"1.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fd9de9f2205d5ef3fd67e685b0df337994ddd4495e2a28d185500d0e1edfea47\"\ndependencies = [\n \"jobserver\",\n \"libc\",\n \"shlex\",\n]\n\n[[package]]\nname = \"cesu8\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6d43a04d8753f35258c91f8ec639f792891f748a1edbd759cf1dcea3382ad83c\"\n\n[[package]]\nname = \"cexpr\"\nversion = \"0.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6fac387a98bb7c37292057cffc56d62ecb629900026402633ae9160df93a8766\"\ndependencies = [\n \"nom\",\n]\n\n[[package]]\nname = \"cfg-if\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd\"\n\n[[package]]\nname = \"cfg_aliases\"\nversion = \"0.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"613afe47fcd5fac7ccf1db93babcb082c5994d996f20b8b159f2ad1658eb5724\"\n\n[[package]]\nname = \"ciborium\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"42e69ffd6f0917f5c029256a24d0161db17cea3997d185db0d35926308770f0e\"\ndependencies = [\n \"ciborium-io\",\n \"ciborium-ll\",\n \"serde\",\n]\n\n[[package]]\nname = \"ciborium-io\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"05afea1e0a06c9be33d539b876f1ce3692f4afea2cb41f740e7743225ed1c757\"\n\n[[package]]\nname = \"ciborium-ll\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"57663b653d948a338bfb3eeba9bb2fd5fcfaecb9e199e87e1eda4d9e8b240fd9\"\ndependencies = [\n \"ciborium-io\",\n \"half\",\n]\n\n[[package]]\nname = \"clang-sys\"\nversion = \"1.8.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0b023947811758c97c59bf9d1c188fd619ad4718dcaa767947df1cadb14f39f4\"\ndependencies = [\n \"glob\",\n \"libc\",\n \"libloading\",\n]\n\n[[package]]\nname = \"clap\"\nversion = \"4.5.21\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fb3b4b9e5a7c7514dfa52869339ee98b3156b0bfb4e8a77c4ff4babb64b1604f\"\ndependencies = [\n \"clap_builder\",\n \"clap_derive\",\n]\n\n[[package]]\nname = \"clap_builder\"\nversion = \"4.5.21\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b17a95aa67cc7b5ebd32aa5370189aa0d79069ef1c64ce893bd30fb24bff20ec\"\ndependencies = [\n \"anstream\",\n \"anstyle\",\n \"clap_lex\",\n \"strsim\",\n]\n\n[[package]]\nname = \"clap_complete\"\nversion = \"4.5.38\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d9647a559c112175f17cf724dc72d3645680a883c58481332779192b0d8e7a01\"\ndependencies = [\n \"clap\",\n]\n\n[[package]]\nname = \"clap_derive\"\nversion = \"4.5.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4ac6a0c7b1a9e9a5186361f67dfa1b88213572f427fb9ab038efb2bd8c582dab\"\ndependencies = [\n \"heck\",\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.89\",\n]\n\n[[package]]\nname = \"clap_lex\"\nversion = \"0.7.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"afb84c814227b90d6895e01398aee0d8033c00e7466aca416fb6a8e0eb19d8a7\"\n\n[[package]]\nname = \"clru\"\nversion = \"0.6.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cbd0f76e066e64fdc5631e3bb46381254deab9ef1158292f27c8c57e3bf3fe59\"\n\n[[package]]\nname = \"cmake\"\nversion = \"0.1.51\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fb1e43aa7fd152b1f968787f7dbcdeb306d1867ff373c69955211876c053f91a\"\ndependencies = [\n \"cc\",\n]\n\n[[package]]\nname = \"colorchoice\"\nversion = \"1.0.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5b63caa9aa9397e2d9480a9b13673856c78d8ac123288526c37d7839f2a86990\"\n\n[[package]]\nname = \"combine\"\nversion = \"4.6.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ba5a308b75df32fe02788e748662718f03fde005016435c444eea572398219fd\"\ndependencies = [\n \"bytes\",\n \"memchr\",\n]\n\n[[package]]\nname = \"compact_str\"\nversion = \"0.7.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f86b9c4c00838774a6d902ef931eff7470720c51d90c2e32cfe15dc304737b3f\"\ndependencies = [\n \"castaway\",\n \"cfg-if\",\n \"itoa\",\n \"ryu\",\n \"static_assertions\",\n]\n\n[[package]]\nname = \"concurrent-queue\"\nversion = \"2.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4ca0197aee26d1ae37445ee532fefce43251d24cc7c166799f4d46817f1d3973\"\ndependencies = [\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"conpty\"\nversion = \"0.5.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b72b06487a0d4683349ad74d62e87ad639b09667082b3c495c5b6bab7d84b3da\"\ndependencies = [\n \"windows 0.44.0\",\n]\n\n[[package]]\nname = \"console\"\nversion = \"0.15.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0e1f83fc076bd6dd27517eacdf25fef6c4dfe5f1d7448bafaaf3a26f13b5e4eb\"\ndependencies = [\n \"encode_unicode\",\n \"lazy_static\",\n \"libc\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"core-foundation\"\nversion = \"0.9.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"91e195e091a93c46f7102ec7818a2aa394e1e1771c3ab4825963fa03e45afb8f\"\ndependencies = [\n \"core-foundation-sys\",\n \"libc\",\n]\n\n[[package]]\nname = \"core-foundation-sys\"\nversion = \"0.8.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"773648b94d0e5d620f64f280777445740e61fe701025087ec8b57f45c791888b\"\n\n[[package]]\nname = \"cpufeatures\"\nversion = \"0.2.16\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"16b80225097f2e5ae4e7179dd2266824648f3e2f49d9134d584b76389d31c4c3\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"crc\"\nversion = \"3.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"69e6e4d7b33a94f0991c26729976b10ebde1d34c3ee82408fb536164fa10d636\"\ndependencies = [\n \"crc-catalog\",\n]\n\n[[package]]\nname = \"crc-catalog\"\nversion = \"2.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"19d374276b40fb8bbdee95aef7c7fa6b5316ec764510eb64b8dd0e2ed0d7e7f5\"\n\n[[package]]\nname = \"crc32fast\"\nversion = \"1.4.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a97769d94ddab943e4510d138150169a2758b5ef3eb191a9ee688de3e23ef7b3\"\ndependencies = [\n \"cfg-if\",\n]\n\n[[package]]\nname = \"criterion\"\nversion = \"0.5.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f2b12d017a929603d80db1831cd3a24082f8137ce19c69e6447f54f5fc8d692f\"\ndependencies = [\n \"anes\",\n \"cast\",\n \"ciborium\",\n \"clap\",\n \"criterion-plot\",\n \"is-terminal\",\n \"itertools 0.10.5\",\n \"num-traits\",\n \"once_cell\",\n \"oorandom\",\n \"plotters\",\n \"rayon\",\n \"regex\",\n \"serde\",\n \"serde_derive\",\n \"serde_json\",\n \"tinytemplate\",\n \"walkdir\",\n]\n\n[[package]]\nname = \"criterion-plot\"\nversion = \"0.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6b50826342786a51a89e2da3a28f1c32b06e387201bc2d19791f622c673706b1\"\ndependencies = [\n \"cast\",\n \"itertools 0.10.5\",\n]\n\n[[package]]\nname = \"crossbeam\"\nversion = \"0.8.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1137cd7e7fc0fb5d3c5a8678be38ec56e819125d8d7907411fe24ccb943faca8\"\ndependencies = [\n \"crossbeam-channel\",\n \"crossbeam-deque\",\n \"crossbeam-epoch\",\n \"crossbeam-queue\",\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"crossbeam-channel\"\nversion = \"0.5.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"33480d6946193aa8033910124896ca395333cae7e2d1113d1fef6c3272217df2\"\ndependencies = [\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"crossbeam-deque\"\nversion = \"0.8.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"613f8cc01fe9cf1a3eb3d7f488fd2fa8388403e97039e2f73692932e291a770d\"\ndependencies = [\n \"crossbeam-epoch\",\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"crossbeam-epoch\"\nversion = \"0.9.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5b82ac4a3c2ca9c3460964f020e1402edd5753411d7737aa39c3714ad1b5420e\"\ndependencies = [\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"crossbeam-queue\"\nversion = \"0.3.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"df0346b5d5e76ac2fe4e327c5fd1118d6be7c51dfb18f9b7922923f287471e35\"\ndependencies = [\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"crossbeam-utils\"\nversion = \"0.8.20\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"22ec99545bb0ed0ea7bb9b8e1e9122ea386ff8a48c0922e43f36d45ab09e0e80\"\n\n[[package]]\nname = \"crossterm\"\nversion = \"0.27.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f476fe445d41c9e991fd07515a6f463074b782242ccf4a5b7b1d1012e70824df\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"crossterm_winapi\",\n \"futures-core\",\n \"libc\",\n \"mio 0.8.11\",\n \"parking_lot\",\n \"signal-hook\",\n \"signal-hook-mio\",\n \"winapi\",\n]\n\n[[package]]\nname = \"crossterm_winapi\"\nversion = \"0.9.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"acdd7c62a3665c7f6830a51635d9ac9b23ed385797f70a83bb8bafe9c572ab2b\"\ndependencies = [\n \"winapi\",\n]\n\n[[package]]\nname = \"crosstermion\"\nversion = \"0.14.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3bb8ffe01d18963d7cdeb1b90d80ff1fc2adc8dd05517a8dfce4844f7157ecc4\"\ndependencies = [\n \"ansiterm\",\n \"async-channel 2.3.1\",\n \"crossterm\",\n \"futures-channel\",\n \"futures-core\",\n \"futures-lite\",\n \"ratatui\",\n \"tui-react\",\n]\n\n[[package]]\nname = \"crunchy\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7a81dae078cea95a014a339291cec439d2f232ebe854a9d672b796c6afafa9b7\"\n\n[[package]]\nname = \"crypto-common\"\nversion = \"0.1.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1bfb12502f3fc46cca1bb51ac28df9d618d813cdc3d2f25b9fe775a34af26bb3\"\ndependencies = [\n \"generic-array\",\n \"typenum\",\n]\n\n[[package]]\nname = \"curl\"\nversion = \"0.4.47\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d9fb4d13a1be2b58f14d60adba57c9834b78c62fd86c3e76a148f732686e9265\"\ndependencies = [\n \"curl-sys\",\n \"libc\",\n \"openssl-probe\",\n \"openssl-sys\",\n \"schannel\",\n \"socket2\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"curl-sys\"\nversion = \"0.4.78+curl-8.11.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8eec768341c5c7789611ae51cf6c459099f22e64a5d5d0ce4892434e33821eaf\"\ndependencies = [\n \"cc\",\n \"libc\",\n \"libz-sys\",\n \"openssl-sys\",\n \"pkg-config\",\n \"rustls-ffi\",\n \"vcpkg\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"dashmap\"\nversion = \"6.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5041cc499144891f3790297212f32a74fb938e5136a14943f338ef9e0ae276cf\"\ndependencies = [\n \"cfg-if\",\n \"crossbeam-utils\",\n \"hashbrown 0.14.5\",\n \"lock_api\",\n \"once_cell\",\n \"parking_lot_core\",\n]\n\n[[package]]\nname = \"defer\"\nversion = \"0.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"930c7171c8df9fb1782bdf9b918ed9ed2d33d1d22300abb754f9085bc48bf8e8\"\n\n[[package]]\nname = \"deranged\"\nversion = \"0.3.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b42b6fa04a440b495c8b04d0e71b707c585f83cb9cb28cf8cd0d976c315e31b4\"\ndependencies = [\n \"powerfmt\",\n]\n\n[[package]]\nname = \"derive_arbitrary\"\nversion = \"1.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"30542c1ad912e0e3d22a1935c290e12e8a29d704a420177a31faad4a601a0800\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.89\",\n]\n\n[[package]]\nname = \"diff\"\nversion = \"0.1.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"56254986775e3233ffa9c4d7d3faaf6d36a2c09d30b20687e9f88bc8bafc16c8\"\n\n[[package]]\nname = \"digest\"\nversion = \"0.10.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9ed9a281f7bc9b7576e61468ba615a66a5c8cfdff42420a70aa82701a3b1e292\"\ndependencies = [\n \"block-buffer\",\n \"crypto-common\",\n]\n\n[[package]]\nname = \"displaydoc\"\nversion = \"0.2.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"97369cbbc041bc366949bc74d34658d6cda5621039731c6310521892a3a20ae0\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.89\",\n]\n\n[[package]]\nname = \"document-features\"\nversion = \"0.2.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cb6969eaabd2421f8a2775cfd2471a2b634372b4a25d41e3bd647b79912850a0\"\ndependencies = [\n \"litrs\",\n]\n\n[[package]]\nname = \"dunce\"\nversion = \"1.0.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"92773504d58c093f6de2459af4af33faa518c13451eb8f2b5698ed3d36e7c813\"\n\n[[package]]\nname = \"either\"\nversion = \"1.13.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"60b1af1c220855b6ceac025d3f6ecdd2b7c4894bfe9cd9bda4fbb4bc7c0d4cf0\"\n\n[[package]]\nname = \"encode_unicode\"\nversion = \"0.3.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a357d28ed41a50f9c765dbfe56cbc04a64e53e5fc58ba79fbc34c10ef3df831f\"\n\n[[package]]\nname = \"encoding_rs\"\nversion = \"0.8.35\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"75030f3c4f45dafd7586dd6780965a8c7e8e285a5ecb86713e63a79c5b2766f3\"\ndependencies = [\n \"cfg-if\",\n]\n\n[[package]]\nname = \"env_logger\"\nversion = \"0.10.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4cd405aab171cb85d6735e5c8d9db038c17d3ca007a4d2c25f337935c3d90580\"\ndependencies = [\n \"humantime\",\n \"is-terminal\",\n \"log\",\n \"termcolor\",\n]\n\n[[package]]\nname = \"equivalent\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5443807d6dff69373d433ab9ef5378ad8df50ca6298caf15de6e52e24aaf54d5\"\n\n[[package]]\nname = \"errno\"\nversion = \"0.3.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"534c5cf6194dfab3db3242765c03bbe257cf92f22b38f6bc0c58d59108a820ba\"\ndependencies = [\n \"libc\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"event-listener\"\nversion = \"2.5.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0206175f82b8d6bf6652ff7d71a1e27fd2e4efde587fd368662814d6ec1d9ce0\"\n\n[[package]]\nname = \"event-listener\"\nversion = \"5.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6032be9bd27023a771701cc49f9f053c751055f71efb2e0ae5c15809093675ba\"\ndependencies = [\n \"concurrent-queue\",\n \"parking\",\n \"pin-project-lite\",\n]\n\n[[package]]\nname = \"event-listener-strategy\"\nversion = \"0.5.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0f214dc438f977e6d4e3500aaa277f5ad94ca83fbbd9b1a15713ce2344ccc5a1\"\ndependencies = [\n \"event-listener 5.3.1\",\n \"pin-project-lite\",\n]\n\n[[package]]\nname = \"expectrl\"\nversion = \"0.7.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ede784925953fcab9a3351d5009bcb8d2b0c13e940924c88087e8e2ce0c4717a\"\ndependencies = [\n \"conpty\",\n \"nix\",\n \"ptyprocess\",\n \"regex\",\n]\n\n[[package]]\nname = \"fallible-iterator\"\nversion = \"0.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2acce4a10f12dc2fb14a218589d4f1f62ef011b2d0cc4b3cb1bba8e94da14649\"\n\n[[package]]\nname = \"fallible-streaming-iterator\"\nversion = \"0.1.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7360491ce676a36bf9bb3c56c1aa791658183a54d2744120f27285738d90465a\"\n\n[[package]]\nname = \"faster-hex\"\nversion = \"0.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a2a2b11eda1d40935b26cf18f6833c526845ae8c41e58d09af6adeb6f0269183\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"fastrand\"\nversion = \"2.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"486f806e73c5707928240ddc295403b1b93c96a02038563881c4a2fd84b81ac4\"\n\n[[package]]\nname = \"filetime\"\nversion = \"0.2.25\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"35c0522e981e68cbfa8c3f978441a5f34b30b96e146b33cd3359176b50fe8586\"\ndependencies = [\n \"cfg-if\",\n \"libc\",\n \"libredox\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"flate2\"\nversion = \"1.0.35\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c936bfdafb507ebbf50b8074c54fa31c5be9a1e7e5f467dd659697041407d07c\"\ndependencies = [\n \"crc32fast\",\n \"libz-ng-sys\",\n \"libz-sys\",\n \"miniz_oxide\",\n]\n\n[[package]]\nname = \"fnv\"\nversion = \"1.0.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3f9eec918d3f24069decb9af1554cad7c880e2da24a9afd88aca000531ab82c1\"\n\n[[package]]\nname = \"foldhash\"\nversion = \"0.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f81ec6369c545a7d40e4589b5597581fa1c441fe1cce96dd1de43159910a36a2\"\n\n[[package]]\nname = \"foreign-types\"\nversion = \"0.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f6f339eb8adc052cd2ca78910fda869aefa38d22d5cb648e6485e4d3fc06f3b1\"\ndependencies = [\n \"foreign-types-shared\",\n]\n\n[[package]]\nname = \"foreign-types-shared\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"00b0228411908ca8685dba7fc2cdd70ec9990a6e753e89b6ac91a84c40fbaf4b\"\n\n[[package]]\nname = \"form_urlencoded\"\nversion = \"1.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e13624c2627564efccf4934284bdd98cbaa14e79b0b5a141218e507b3a823456\"\ndependencies = [\n \"percent-encoding\",\n]\n\n[[package]]\nname = \"fs-err\"\nversion = \"2.11.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"88a41f105fe1d5b6b34b2055e3dc59bb79b46b48b2040b9e6c7b4b5de097aa41\"\ndependencies = [\n \"autocfg\",\n]\n\n[[package]]\nname = \"fs_extra\"\nversion = \"1.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"42703706b716c37f96a77aea830392ad231f44c9e9a67872fa5548707e11b11c\"\n\n[[package]]\nname = \"futures\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"65bc07b1a8bc7c85c5f2e110c476c7389b4554ba72af57d8445ea63a576b0876\"\ndependencies = [\n \"futures-channel\",\n \"futures-core\",\n \"futures-executor\",\n \"futures-io\",\n \"futures-sink\",\n \"futures-task\",\n \"futures-util\",\n]\n\n[[package]]\nname = \"futures-channel\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2dff15bf788c671c1934e366d07e30c1814a8ef514e1af724a602e8a2fbe1b10\"\ndependencies = [\n \"futures-core\",\n \"futures-sink\",\n]\n\n[[package]]\nname = \"futures-core\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"05f29059c0c2090612e8d742178b0580d2dc940c837851ad723096f87af6663e\"\n\n[[package]]\nname = \"futures-executor\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1e28d1d997f585e54aebc3f97d39e72338912123a67330d723fdbb564d646c9f\"\ndependencies = [\n \"futures-core\",\n \"futures-task\",\n \"futures-util\",\n]\n\n[[package]]\nname = \"futures-io\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9e5c1b78ca4aae1ac06c48a526a655760685149f0d465d21f37abfe57ce075c6\"\n\n[[package]]\nname = \"futures-lite\"\nversion = \"2.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cef40d21ae2c515b51041df9ed313ed21e572df340ea58a922a0aefe7e8891a1\"\ndependencies = [\n \"fastrand\",\n \"futures-core\",\n \"futures-io\",\n \"parking\",\n \"pin-project-lite\",\n]\n\n[[package]]\nname = \"futures-sink\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e575fab7d1e0dcb8d0c7bcf9a63ee213816ab51902e6d244a95819acacf1d4f7\"\n\n[[package]]\nname = \"futures-task\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f90f7dce0722e95104fcb095585910c0977252f286e354b5e3bd38902cd99988\"\n\n[[package]]\nname = \"futures-util\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9fa08315bb612088cc391249efdc3bc77536f16c91f6cf495e6fbe85b20a4a81\"\ndependencies = [\n \"futures-channel\",\n \"futures-core\",\n \"futures-io\",\n \"futures-sink\",\n \"futures-task\",\n \"memchr\",\n \"pin-project-lite\",\n \"pin-utils\",\n \"slab\",\n]\n\n[[package]]\nname = \"generic-array\"\nversion = \"0.14.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"85649ca51fd72272d7821adaf274ad91c288277713d9c18820d8499a7ff69e9a\"\ndependencies = [\n \"typenum\",\n \"version_check\",\n]\n\n[[package]]\nname = \"getrandom\"\nversion = \"0.2.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c4567c8db10ae91089c99af84c68c38da3ec2f087c3f82960bcdbf3656b6f4d7\"\ndependencies = [\n \"cfg-if\",\n \"js-sys\",\n \"libc\",\n \"wasi\",\n \"wasm-bindgen\",\n]\n\n[[package]]\nname = \"gimli\"\nversion = \"0.31.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"07e28edb80900c19c28f1072f2e8aeca7fa06b23cd4169cefe1af5aa3260783f\"\n\n[[package]]\nname = \"gitoxide\"\nversion = \"0.40.0\"\ndependencies = [\n \"anyhow\",\n \"clap\",\n \"clap_complete\",\n \"crosstermion\",\n \"document-features\",\n \"env_logger\",\n \"futures-lite\",\n \"gitoxide-core\",\n \"gix\",\n \"gix-features 0.39.1\",\n \"is-terminal\",\n \"once_cell\",\n \"prodash 29.0.0\",\n \"serde_derive\",\n \"terminal_size\",\n \"tracing\",\n \"tracing-forest\",\n \"tracing-subscriber\",\n]\n\n[[package]]\nname = \"gitoxide-core\"\nversion = \"0.44.0\"\ndependencies = [\n \"anyhow\",\n \"async-io\",\n \"async-net\",\n \"async-trait\",\n \"blocking\",\n \"bytesize\",\n \"crossbeam-channel\",\n \"document-features\",\n \"fs-err\",\n \"futures-io\",\n \"futures-lite\",\n \"gix\",\n \"gix-archive\",\n \"gix-fsck\",\n \"gix-pack\",\n \"gix-status\",\n \"gix-transport\",\n \"gix-url\",\n \"jwalk\",\n \"layout-rs\",\n \"open\",\n \"parking_lot\",\n \"rusqlite\",\n \"serde\",\n \"serde_json\",\n \"smallvec\",\n \"sysinfo\",\n \"tempfile\",\n \"thiserror 2.0.3\",\n \"tracing\",\n \"tracing-forest\",\n \"tracing-subscriber\",\n]\n\n[[package]]\nname = \"gix\"\nversion = \"0.69.1\"\ndependencies = [\n \"anyhow\",\n \"async-std\",\n \"document-features\",\n \"gix\",\n \"gix-actor 0.33.1\",\n \"gix-archive\",\n \"gix-attributes 0.23.1\",\n \"gix-blame\",\n \"gix-command\",\n \"gix-commitgraph 0.25.1\",\n \"gix-config\",\n \"gix-credentials\",\n \"gix-date 0.9.3\",\n \"gix-diff\",\n \"gix-dir\",\n \"gix-discover 0.37.0\",\n \"gix-features 0.39.1\",\n \"gix-filter\",\n \"gix-fs 0.12.1\",\n \"gix-glob 0.17.1\",\n \"gix-hash 0.15.1\",\n \"gix-hashtable 0.6.0\",\n \"gix-ignore 0.12.1\",\n \"gix-index 0.37.0\",\n \"gix-lock 15.0.1\",\n \"gix-mailmap\",\n \"gix-merge\",\n \"gix-negotiate\",\n \"gix-object 0.46.1\",\n \"gix-odb\",\n \"gix-pack\",\n \"gix-path 0.10.13\",\n \"gix-pathspec\",\n \"gix-prompt\",\n \"gix-protocol\",\n \"gix-ref 0.49.1\",\n \"gix-refspec\",\n \"gix-revision\",\n \"gix-revwalk 0.17.0\",\n \"gix-sec 0.10.10\",\n \"gix-shallow\",\n \"gix-status\",\n \"gix-submodule\",\n \"gix-tempfile 15.0.0\",\n \"gix-testtools\",\n \"gix-trace 0.1.11\",\n \"gix-transport\",\n \"gix-traverse 0.43.1\",\n \"gix-url\",\n \"gix-utils 0.1.13\",\n \"gix-validate 0.9.2\",\n \"gix-worktree 0.38.0\",\n \"gix-worktree-state\",\n \"gix-worktree-stream\",\n \"insta\",\n \"is_ci\",\n \"once_cell\",\n \"parking_lot\",\n \"pretty_assertions\",\n \"prodash 29.0.0\",\n \"regex\",\n \"serde\",\n \"serial_test\",\n \"signal-hook\",\n \"smallvec\",\n \"termtree\",\n \"thiserror 2.0.3\",\n \"walkdir\",\n]\n\n[[package]]\nname = \"gix-actor\"\nversion = \"0.31.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a0e454357e34b833cc3a00b6efbbd3dd4d18b24b9fb0c023876ec2645e8aa3f2\"\ndependencies = [\n \"bstr\",\n \"gix-date 0.8.7\",\n \"gix-utils 0.1.13 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"itoa\",\n \"thiserror 1.0.69\",\n \"winnow\",\n]\n\n[[package]]\nname = \"gix-actor\"\nversion = \"0.33.1\"\ndependencies = [\n \"bstr\",\n \"document-features\",\n \"gix-date 0.9.3\",\n \"gix-hash 0.15.1\",\n \"gix-testtools\",\n \"gix-utils 0.1.13\",\n \"itoa\",\n \"pretty_assertions\",\n \"serde\",\n \"thiserror 2.0.3\",\n \"winnow\",\n]\n\n[[package]]\nname = \"gix-archive\"\nversion = \"0.18.0\"\ndependencies = [\n \"bstr\",\n \"document-features\",\n \"flate2\",\n \"gix-attributes 0.23.1\",\n \"gix-date 0.9.3\",\n \"gix-filter\",\n \"gix-hash 0.15.1\",\n \"gix-object 0.46.1\",\n \"gix-odb\",\n \"gix-path 0.10.13\",\n \"gix-testtools\",\n \"gix-worktree 0.38.0\",\n \"gix-worktree-stream\",\n \"jiff\",\n \"tar\",\n \"thiserror 2.0.3\",\n \"zip\",\n]\n\n[[package]]\nname = \"gix-attributes\"\nversion = \"0.22.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ebccbf25aa4a973dd352564a9000af69edca90623e8a16dad9cbc03713131311\"\ndependencies = [\n \"bstr\",\n \"gix-glob 0.16.5\",\n \"gix-path 0.10.13 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"gix-quote 0.4.14 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"gix-trace 0.1.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"kstring\",\n \"smallvec\",\n \"thiserror 1.0.69\",\n \"unicode-bom\",\n]\n\n[[package]]\nname = \"gix-attributes\"\nversion = \"0.23.1\"\ndependencies = [\n \"bstr\",\n \"document-features\",\n \"gix-fs 0.12.1\",\n \"gix-glob 0.17.1\",\n \"gix-path 0.10.13\",\n \"gix-quote 0.4.14\",\n \"gix-testtools\",\n \"gix-trace 0.1.11\",\n \"kstring\",\n \"serde\",\n \"smallvec\",\n \"thiserror 2.0.3\",\n \"unicode-bom\",\n]\n\n[[package]]\nname = \"gix-bitmap\"\nversion = \"0.2.13\"\ndependencies = [\n \"gix-testtools\",\n \"thiserror 2.0.3\",\n]\n\n[[package]]\nname = \"gix-bitmap\"\nversion = \"0.2.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d48b897b4bbc881aea994b4a5bbb340a04979d7be9089791304e04a9fbc66b53\"\ndependencies = [\n \"thiserror 2.0.3\",\n]\n\n[[package]]\nname = \"gix-blame\"\nversion = \"0.0.0\"\ndependencies = [\n \"gix-diff\",\n \"gix-filter\",\n \"gix-fs 0.12.1\",\n \"gix-hash 0.15.1\",\n \"gix-index 0.37.0\",\n \"gix-object 0.46.1\",\n \"gix-odb\",\n \"gix-ref 0.49.1\",\n \"gix-testtools\",\n \"gix-trace 0.1.11\",\n \"gix-traverse 0.43.1\",\n \"gix-worktree 0.38.0\",\n \"thiserror 2.0.3\",\n]\n\n[[package]]\nname = \"gix-chunk\"\nversion = \"0.4.10\"\ndependencies = [\n \"thiserror 2.0.3\",\n]\n\n[[package]]\nname = \"gix-chunk\"\nversion = \"0.4.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c6ffbeb3a5c0b8b84c3fe4133a6f8c82fa962f4caefe8d0762eced025d3eb4f7\"\ndependencies = [\n \"thiserror 2.0.3\",\n]\n\n[[package]]\nname = \"gix-command\"\nversion = \"0.4.0\"\ndependencies = [\n \"bstr\",\n \"gix-path 0.10.13\",\n \"gix-testtools\",\n \"gix-trace 0.1.11\",\n \"shell-words\",\n]\n\n[[package]]\nname = \"gix-commitgraph\"\nversion = \"0.24.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"133b06f67f565836ec0c473e2116a60fb74f80b6435e21d88013ac0e3c60fc78\"\ndependencies = [\n \"bstr\",\n \"gix-chunk 0.4.10 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"gix-features 0.38.2\",\n \"gix-hash 0.14.2\",\n \"memmap2\",\n \"thiserror 1.0.69\",\n]\n\n[[package]]\nname = \"gix-commitgraph\"\nversion = \"0.25.1\"\ndependencies = [\n \"bstr\",\n \"document-features\",\n \"gix-chunk 0.4.10\",\n \"gix-date 0.9.3\",\n \"gix-features 0.39.1\",\n \"gix-hash 0.15.1\",\n \"gix-testtools\",\n \"memmap2\",\n \"serde\",\n \"thiserror 2.0.3\",\n]\n\n[[package]]\nname = \"gix-config\"\nversion = \"0.42.0\"\ndependencies = [\n \"bstr\",\n \"criterion\",\n \"document-features\",\n \"gix-config-value\",\n \"gix-features 0.39.1\",\n \"gix-glob 0.17.1\",\n \"gix-path 0.10.13\",\n \"gix-ref 0.49.1\",\n \"gix-sec 0.10.10\",\n \"memchr\",\n \"once_cell\",\n \"serde\",\n \"smallvec\",\n \"thiserror 2.0.3\",\n \"unicode-bom\",\n \"winnow\",\n]\n\n[[package]]\nname = \"gix-config-tests\"\nversion = \"0.0.0\"\ndependencies = [\n \"bstr\",\n \"bytesize\",\n \"cap\",\n \"gix-config\",\n \"gix-path 0.10.13\",\n \"gix-ref 0.49.1\",\n \"gix-sec 0.10.10\",\n \"gix-testtools\",\n \"serial_test\",\n]\n\n[[package]]\nname = \"gix-config-value\"\nversion = \"0.14.10\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"bstr\",\n \"document-features\",\n \"gix-path 0.10.13\",\n \"libc\",\n \"serde\",\n \"thiserror 2.0.3\",\n]\n\n[[package]]\nname = \"gix-credentials\"\nversion = \"0.26.0\"\ndependencies = [\n \"bstr\",\n \"document-features\",\n \"gix-command\",\n \"gix-config-value\",\n \"gix-path 0.10.13\",\n \"gix-prompt\",\n \"gix-sec 0.10.10\",\n \"gix-testtools\",\n \"gix-trace 0.1.11\",\n \"gix-url\",\n \"once_cell\",\n \"serde\",\n \"thiserror 2.0.3\",\n]\n\n[[package]]\nname = \"gix-date\"\nversion = \"0.8.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9eed6931f21491ee0aeb922751bd7ec97b4b2fe8fbfedcb678e2a2dce5f3b8c0\"\ndependencies = [\n \"bstr\",\n \"itoa\",\n \"thiserror 1.0.69\",\n \"time\",\n]\n\n[[package]]\nname = \"gix-date\"\nversion = \"0.9.3\"\ndependencies = [\n \"bstr\",\n \"document-features\",\n \"gix-hash 0.15.1\",\n \"gix-testtools\",\n \"itoa\",\n \"jiff\",\n \"once_cell\",\n \"pretty_assertions\",\n \"serde\",\n \"thiserror 2.0.3\",\n]\n\n[[package]]\nname = \"gix-diff\"\nversion = \"0.49.0\"\ndependencies = [\n \"bstr\",\n \"document-features\",\n \"getrandom\",\n \"gix-attributes 0.23.1\",\n \"gix-command\",\n \"gix-filter\",\n \"gix-fs 0.12.1\",\n \"gix-hash 0.15.1\",\n \"gix-index 0.37.0\",\n \"gix-object 0.46.1\",\n \"gix-path 0.10.13\",\n \"gix-pathspec\",\n \"gix-tempfile 15.0.0\",\n \"gix-trace 0.1.11\",\n \"gix-traverse 0.43.1\",\n \"gix-worktree 0.38.0\",\n \"imara-diff\",\n \"serde\",\n \"thiserror 2.0.3\",\n]\n\n[[package]]\nname = \"gix-diff-tests\"\nversion = \"0.0.0\"\ndependencies = [\n \"gix-diff\",\n \"gix-filter\",\n \"gix-fs 0.12.1\",\n \"gix-hash 0.15.1\",\n \"gix-index 0.37.0\",\n \"gix-object 0.46.1\",\n \"gix-odb\",\n \"gix-pathspec\",\n \"gix-testtools\",\n \"gix-traverse 0.43.1\",\n \"gix-worktree 0.38.0\",\n \"insta\",\n \"pretty_assertions\",\n \"shell-words\",\n]\n\n[[package]]\nname = \"gix-dir\"\nversion = \"0.11.0\"\ndependencies = [\n \"bstr\",\n \"gix-discover 0.37.0\",\n \"gix-fs 0.12.1\",\n \"gix-ignore 0.12.1\",\n \"gix-index 0.37.0\",\n \"gix-object 0.46.1\",\n \"gix-path 0.10.13\",\n \"gix-pathspec\",\n \"gix-testtools\",\n \"gix-trace 0.1.11\",\n \"gix-utils 0.1.13\",\n \"gix-worktree 0.38.0\",\n \"pretty_assertions\",\n \"thiserror 2.0.3\",\n]\n\n[[package]]\nname = \"gix-discover\"\nversion = \"0.32.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fc27c699b63da66b50d50c00668bc0b7e90c3a382ef302865e891559935f3dbf\"\ndependencies = [\n \"bstr\",\n \"dunce\",\n \"gix-fs 0.11.3\",\n \"gix-hash 0.14.2\",\n \"gix-path 0.10.13 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"gix-ref 0.44.1\",\n \"gix-sec 0.10.10 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"thiserror 1.0.69\",\n]\n\n[[package]]\nname = \"gix-discover\"\nversion = \"0.37.0\"\ndependencies = [\n \"bstr\",\n \"defer\",\n \"dunce\",\n \"gix-fs 0.12.1\",\n \"gix-hash 0.15.1\",\n \"gix-path 0.10.13\",\n \"gix-ref 0.49.1\",\n \"gix-sec 0.10.10\",\n \"gix-testtools\",\n \"is_ci\",\n \"serial_test\",\n \"tempfile\",\n \"thiserror 2.0.3\",\n]\n\n[[package]]\nname = \"gix-features\"\nversion = \"0.38.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ac7045ac9fe5f9c727f38799d002a7ed3583cd777e3322a7c4b43e3cf437dc69\"\ndependencies = [\n \"gix-hash 0.14.2\",\n \"gix-trace 0.1.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"gix-utils 0.1.13 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"libc\",\n \"prodash 28.0.0\",\n \"sha1_smol\",\n \"walkdir\",\n]\n\n[[package]]\nname = \"gix-features\"\nversion = \"0.39.1\"\ndependencies = [\n \"bstr\",\n \"bytes\",\n \"bytesize\",\n \"crc32fast\",\n \"crossbeam-channel\",\n \"document-features\",\n \"flate2\",\n \"gix-hash 0.15.1\",\n \"gix-trace 0.1.11\",\n \"gix-utils 0.1.13\",\n \"jwalk\",\n \"libc\",\n \"once_cell\",\n \"parking_lot\",\n \"prodash 29.0.0\",\n \"sha1\",\n \"sha1_smol\",\n \"thiserror 2.0.3\",\n \"walkdir\",\n]\n\n[[package]]\nname = \"gix-fetchhead\"\nversion = \"0.0.0\"\n\n[[package]]\nname = \"gix-filter\"\nversion = \"0.16.0\"\ndependencies = [\n \"bstr\",\n \"encoding_rs\",\n \"gix-attributes 0.23.1\",\n \"gix-command\",\n \"gix-hash 0.15.1\",\n \"gix-object 0.46.1\",\n \"gix-packetline-blocking\",\n \"gix-path 0.10.13\",\n \"gix-quote 0.4.14\",\n \"gix-testtools\",\n \"gix-trace 0.1.11\",\n \"gix-utils 0.1.13\",\n \"gix-worktree 0.38.0\",\n \"serial_test\",\n \"smallvec\",\n \"thiserror 2.0.3\",\n]\n\n[[package]]\nname = \"gix-fs\"\nversion = \"0.11.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f2bfe6249cfea6d0c0e0990d5226a4cb36f030444ba9e35e0639275db8f98575\"\ndependencies = [\n \"fastrand\",\n \"gix-features 0.38.2\",\n \"gix-utils 0.1.13 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"gix-fs\"\nversion = \"0.12.1\"\ndependencies = [\n \"crossbeam-channel\",\n \"fastrand\",\n \"gix-features 0.39.1\",\n \"gix-utils 0.1.13\",\n \"serde\",\n \"tempfile\",\n]\n\n[[package]]\nname = \"gix-fsck\"\nversion = \"0.8.0\"\ndependencies = [\n \"gix-hash 0.15.1\",\n \"gix-hashtable 0.6.0\",\n \"gix-object 0.46.1\",\n \"gix-odb\",\n \"gix-testtools\",\n]\n\n[[package]]\nname = \"gix-glob\"\nversion = \"0.16.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"74908b4bbc0a0a40852737e5d7889f676f081e340d5451a16e5b4c50d592f111\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"bstr\",\n \"gix-features 0.38.2\",\n \"gix-path 0.10.13 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"gix-glob\"\nversion = \"0.17.1\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"bstr\",\n \"document-features\",\n \"gix-features 0.39.1\",\n \"gix-path 0.10.13\",\n \"gix-testtools\",\n \"serde\",\n]\n\n[[package]]\nname = \"gix-hash\"\nversion = \"0.14.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f93d7df7366121b5018f947a04d37f034717e113dcf9ccd85c34b58e57a74d5e\"\ndependencies = [\n \"faster-hex\",\n \"thiserror 1.0.69\",\n]\n\n[[package]]\nname = \"gix-hash\"\nversion = \"0.15.1\"\ndependencies = [\n \"document-features\",\n \"faster-hex\",\n \"gix-features 0.39.1\",\n \"gix-testtools\",\n \"serde\",\n \"thiserror 2.0.3\",\n]\n\n[[package]]\nname = \"gix-hashtable\"\nversion = \"0.5.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7ddf80e16f3c19ac06ce415a38b8591993d3f73aede049cb561becb5b3a8e242\"\ndependencies = [\n \"gix-hash 0.14.2\",\n \"hashbrown 0.14.5\",\n \"parking_lot\",\n]\n\n[[package]]\nname = \"gix-hashtable\"\nversion = \"0.6.0\"\ndependencies = [\n \"gix-hash 0.15.1\",\n \"hashbrown 0.14.5\",\n \"parking_lot\",\n]\n\n[[package]]\nname = \"gix-ignore\"\nversion = \"0.11.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e447cd96598460f5906a0f6c75e950a39f98c2705fc755ad2f2020c9e937fab7\"\ndependencies = [\n \"bstr\",\n \"gix-glob 0.16.5\",\n \"gix-path 0.10.13 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"gix-trace 0.1.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"unicode-bom\",\n]\n\n[[package]]\nname = \"gix-ignore\"\nversion = \"0.12.1\"\ndependencies = [\n \"bstr\",\n \"document-features\",\n \"gix-fs 0.12.1\",\n \"gix-glob 0.17.1\",\n \"gix-path 0.10.13\",\n \"gix-testtools\",\n \"gix-trace 0.1.11\",\n \"serde\",\n \"unicode-bom\",\n]\n\n[[package]]\nname = \"gix-index\"\nversion = \"0.33.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9a9a44eb55bd84bb48f8a44980e951968ced21e171b22d115d1cdcef82a7d73f\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"bstr\",\n \"filetime\",\n \"fnv\",\n \"gix-bitmap 0.2.13 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"gix-features 0.38.2\",\n \"gix-fs 0.11.3\",\n \"gix-hash 0.14.2\",\n \"gix-lock 14.0.0\",\n \"gix-object 0.42.3\",\n \"gix-traverse 0.39.2\",\n \"gix-utils 0.1.13 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"gix-validate 0.8.5\",\n \"hashbrown 0.14.5\",\n \"itoa\",\n \"libc\",\n \"memmap2\",\n \"rustix\",\n \"smallvec\",\n \"thiserror 1.0.69\",\n]\n\n[[package]]\nname = \"gix-index\"\nversion = \"0.37.0\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"bstr\",\n \"document-features\",\n \"filetime\",\n \"fnv\",\n \"gix-bitmap 0.2.13\",\n \"gix-features 0.39.1\",\n \"gix-fs 0.12.1\",\n \"gix-hash 0.15.1\",\n \"gix-lock 15.0.1\",\n \"gix-object 0.46.1\",\n \"gix-testtools\",\n \"gix-traverse 0.43.1\",\n \"gix-utils 0.1.13\",\n \"gix-validate 0.9.2\",\n \"hashbrown 0.14.5\",\n \"itoa\",\n \"libc\",\n \"memmap2\",\n \"rustix\",\n \"serde\",\n \"smallvec\",\n \"thiserror 2.0.3\",\n]\n\n[[package]]\nname = \"gix-index-tests\"\nversion = \"0.0.0\"\ndependencies = [\n \"bstr\",\n \"filetime\",\n \"gix-features 0.39.1\",\n \"gix-hash 0.15.1\",\n \"gix-index 0.37.0\",\n \"gix-object 0.46.1\",\n \"gix-odb\",\n \"gix-testtools\",\n]\n\n[[package]]\nname = \"gix-lfs\"\nversion = \"0.0.0\"\n\n[[package]]\nname = \"gix-lock\"\nversion = \"14.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e3bc7fe297f1f4614774989c00ec8b1add59571dc9b024b4c00acb7dedd4e19d\"\ndependencies = [\n \"gix-tempfile 14.0.2\",\n \"gix-utils 0.1.13 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"thiserror 1.0.69\",\n]\n\n[[package]]\nname = \"gix-lock\"\nversion = \"15.0.1\"\ndependencies = [\n \"gix-tempfile 15.0.0\",\n \"gix-utils 0.1.13\",\n \"tempfile\",\n \"thiserror 2.0.3\",\n]\n\n[[package]]\nname = \"gix-macros\"\nversion = \"0.1.5\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.89\",\n \"trybuild\",\n]\n\n[[package]]\nname = \"gix-mailmap\"\nversion = \"0.25.1\"\ndependencies = [\n \"bstr\",\n \"document-features\",\n \"gix-actor 0.33.1\",\n \"gix-date 0.9.3\",\n \"gix-testtools\",\n \"serde\",\n \"thiserror 2.0.3\",\n]\n\n[[package]]\nname = \"gix-merge\"\nversion = \"0.2.0\"\ndependencies = [\n \"bstr\",\n \"document-features\",\n \"gix-command\",\n \"gix-diff\",\n \"gix-filter\",\n \"gix-fs 0.12.1\",\n \"gix-hash 0.15.1\",\n \"gix-index 0.37.0\",\n \"gix-object 0.46.1\",\n \"gix-odb\",\n \"gix-path 0.10.13\",\n \"gix-quote 0.4.14\",\n \"gix-revision\",\n \"gix-revwalk 0.17.0\",\n \"gix-tempfile 15.0.0\",\n \"gix-testtools\",\n \"gix-trace 0.1.11\",\n \"gix-utils 0.1.13\",\n \"gix-worktree 0.38.0\",\n \"imara-diff\",\n \"pretty_assertions\",\n \"serde\",\n \"termtree\",\n \"thiserror 2.0.3\",\n]\n\n[[package]]\nname = \"gix-negotiate\"\nversion = \"0.17.0\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"gix-commitgraph 0.25.1\",\n \"gix-date 0.9.3\",\n \"gix-hash 0.15.1\",\n \"gix-object 0.46.1\",\n \"gix-odb\",\n \"gix-ref 0.49.1\",\n \"gix-revwalk 0.17.0\",\n \"gix-testtools\",\n \"smallvec\",\n \"thiserror 2.0.3\",\n]\n\n[[package]]\nname = \"gix-note\"\nversion = \"0.0.0\"\n\n[[package]]\nname = \"gix-object\"\nversion = \"0.42.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"25da2f46b4e7c2fa7b413ce4dffb87f69eaf89c2057e386491f4c55cadbfe386\"\ndependencies = [\n \"bstr\",\n \"gix-actor 0.31.5\",\n \"gix-date 0.8.7\",\n \"gix-features 0.38.2\",\n \"gix-hash 0.14.2\",\n \"gix-utils 0.1.13 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"gix-validate 0.8.5\",\n \"itoa\",\n \"smallvec\",\n \"thiserror 1.0.69\",\n \"winnow\",\n]\n\n[[package]]\nname = \"gix-object\"\nversion = \"0.46.1\"\ndependencies = [\n \"bstr\",\n \"criterion\",\n \"document-features\",\n \"gix-actor 0.33.1\",\n \"gix-date 0.9.3\",\n \"gix-features 0.39.1\",\n \"gix-hash 0.15.1\",\n \"gix-hashtable 0.6.0\",\n \"gix-odb\",\n \"gix-path 0.10.13\",\n \"gix-testtools\",\n \"gix-utils 0.1.13\",\n \"gix-validate 0.9.2\",\n \"itoa\",\n \"pretty_assertions\",\n \"serde\",\n \"smallvec\",\n \"termtree\",\n \"thiserror 2.0.3\",\n \"winnow\",\n]\n\n[[package]]\nname = \"gix-odb\"\nversion = \"0.66.0\"\ndependencies = [\n \"arc-swap\",\n \"document-features\",\n \"gix-date 0.9.3\",\n \"gix-features 0.39.1\",\n \"gix-fs 0.12.1\",\n \"gix-hash 0.15.1\",\n \"gix-hashtable 0.6.0\",\n \"gix-object 0.46.1\",\n \"gix-pack\",\n \"gix-path 0.10.13\",\n \"gix-quote 0.4.14\",\n \"parking_lot\",\n \"serde\",\n \"tempfile\",\n \"thiserror 2.0.3\",\n]\n\n[[package]]\nname = \"gix-odb-tests\"\nversion = \"0.0.0\"\ndependencies = [\n \"crossbeam-channel\",\n \"filetime\",\n \"gix-actor 0.33.1\",\n \"gix-date 0.9.3\",\n \"gix-features 0.39.1\",\n \"gix-hash 0.15.1\",\n \"gix-object 0.46.1\",\n \"gix-odb\",\n \"gix-pack\",\n \"gix-testtools\",\n \"maplit\",\n \"pretty_assertions\",\n]\n\n[[package]]\nname = \"gix-pack\"\nversion = \"0.56.0\"\ndependencies = [\n \"clru\",\n \"document-features\",\n \"gix-chunk 0.4.10\",\n \"gix-diff\",\n \"gix-features 0.39.1\",\n \"gix-hash 0.15.1\",\n \"gix-hashtable 0.6.0\",\n \"gix-object 0.46.1\",\n \"gix-path 0.10.13\",\n \"gix-tempfile 15.0.0\",\n \"gix-testtools\",\n \"gix-traverse 0.43.1\",\n \"memmap2\",\n \"parking_lot\",\n \"serde\",\n \"smallvec\",\n \"thiserror 2.0.3\",\n \"uluru\",\n]\n\n[[package]]\nname = \"gix-pack-tests\"\nversion = \"0.0.0\"\ndependencies = [\n \"bstr\",\n \"gix-features 0.39.1\",\n \"gix-hash 0.15.1\",\n \"gix-object 0.46.1\",\n \"gix-odb\",\n \"gix-pack\",\n \"gix-testtools\",\n \"gix-traverse 0.43.1\",\n \"maplit\",\n \"memmap2\",\n]\n\n[[package]]\nname = \"gix-packetline\"\nversion = \"0.18.2\"\ndependencies = [\n \"async-std\",\n \"bstr\",\n \"document-features\",\n \"faster-hex\",\n \"futures-io\",\n \"futures-lite\",\n \"gix-hash 0.15.1\",\n \"gix-odb\",\n \"gix-pack\",\n \"gix-trace 0.1.11\",\n \"maybe-async\",\n \"pin-project-lite\",\n \"serde\",\n \"thiserror 2.0.3\",\n]\n\n[[package]]\nname = \"gix-packetline-blocking\"\nversion = \"0.18.1\"\ndependencies = [\n \"bstr\",\n \"document-features\",\n \"faster-hex\",\n \"gix-trace 0.1.11\",\n \"serde\",\n \"thiserror 2.0.3\",\n]\n\n[[package]]\nname = \"gix-path\"\nversion = \"0.10.13\"\ndependencies = [\n \"bstr\",\n \"gix-testtools\",\n \"gix-trace 0.1.11\",\n \"home\",\n \"known-folders\",\n \"once_cell\",\n \"serial_test\",\n \"thiserror 2.0.3\",\n \"windows 0.58.0\",\n \"winreg\",\n]\n\n[[package]]\nname = \"gix-path\"\nversion = \"0.10.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"afc292ef1a51e340aeb0e720800338c805975724c1dfbd243185452efd8645b7\"\ndependencies = [\n \"bstr\",\n \"gix-trace 0.1.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"home\",\n \"once_cell\",\n \"thiserror 2.0.3\",\n]\n\n[[package]]\nname = \"gix-pathspec\"\nversion = \"0.8.1\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"bstr\",\n \"gix-attributes 0.23.1\",\n \"gix-config-value\",\n \"gix-glob 0.17.1\",\n \"gix-path 0.10.13\",\n \"gix-testtools\",\n \"once_cell\",\n \"serial_test\",\n \"thiserror 2.0.3\",\n]\n\n[[package]]\nname = \"gix-prompt\"\nversion = \"0.9.0\"\ndependencies = [\n \"expectrl\",\n \"gix-command\",\n \"gix-config-value\",\n \"gix-testtools\",\n \"parking_lot\",\n \"rustix\",\n \"serial_test\",\n \"thiserror 2.0.3\",\n]\n\n[[package]]\nname = \"gix-protocol\"\nversion = \"0.47.0\"\ndependencies = [\n \"async-std\",\n \"async-trait\",\n \"bstr\",\n \"document-features\",\n \"futures-io\",\n \"futures-lite\",\n \"gix-credentials\",\n \"gix-date 0.9.3\",\n \"gix-features 0.39.1\",\n \"gix-hash 0.15.1\",\n \"gix-lock 15.0.1\",\n \"gix-negotiate\",\n \"gix-object 0.46.1\",\n \"gix-packetline\",\n \"gix-ref 0.49.1\",\n \"gix-refspec\",\n \"gix-revwalk 0.17.0\",\n \"gix-shallow\",\n \"gix-trace 0.1.11\",\n \"gix-transport\",\n \"gix-utils 0.1.13\",\n \"maybe-async\",\n \"serde\",\n \"thiserror 2.0.3\",\n \"winnow\",\n]\n\n[[package]]\nname = \"gix-quote\"\nversion = \"0.4.14\"\ndependencies = [\n \"bstr\",\n \"gix-utils 0.1.13\",\n \"thiserror 2.0.3\",\n]\n\n[[package]]\nname = \"gix-quote\"\nversion = \"0.4.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"64a1e282216ec2ab2816cd57e6ed88f8009e634aec47562883c05ac8a7009a63\"\ndependencies = [\n \"bstr\",\n \"gix-utils 0.1.13 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"thiserror 2.0.3\",\n]\n\n[[package]]\nname = \"gix-rebase\"\nversion = \"0.0.0\"\n\n[[package]]\nname = \"gix-ref\"\nversion = \"0.44.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3394a2997e5bc6b22ebc1e1a87b41eeefbcfcff3dbfa7c4bd73cb0ac8f1f3e2e\"\ndependencies = [\n \"gix-actor 0.31.5\",\n \"gix-date 0.8.7\",\n \"gix-features 0.38.2\",\n \"gix-fs 0.11.3\",\n \"gix-hash 0.14.2\",\n \"gix-lock 14.0.0\",\n \"gix-object 0.42.3\",\n \"gix-path 0.10.13 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"gix-tempfile 14.0.2\",\n \"gix-utils 0.1.13 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"gix-validate 0.8.5\",\n \"memmap2\",\n \"thiserror 1.0.69\",\n \"winnow\",\n]\n\n[[package]]\nname = \"gix-ref\"\nversion = \"0.49.1\"\ndependencies = [\n \"document-features\",\n \"gix-actor 0.33.1\",\n \"gix-date 0.9.3\",\n \"gix-features 0.39.1\",\n \"gix-fs 0.12.1\",\n \"gix-hash 0.15.1\",\n \"gix-lock 15.0.1\",\n \"gix-object 0.46.1\",\n \"gix-path 0.10.13\",\n \"gix-tempfile 15.0.0\",\n \"gix-testtools\",\n \"gix-utils 0.1.13\",\n \"gix-validate 0.9.2\",\n \"memmap2\",\n \"serde\",\n \"thiserror 2.0.3\",\n \"winnow\",\n]\n\n[[package]]\nname = \"gix-ref-tests\"\nversion = \"0.0.0\"\ndependencies = [\n \"gix-actor 0.33.1\",\n \"gix-date 0.9.3\",\n \"gix-discover 0.37.0\",\n \"gix-features 0.39.1\",\n \"gix-fs 0.12.1\",\n \"gix-hash 0.15.1\",\n \"gix-lock 15.0.1\",\n \"gix-object 0.46.1\",\n \"gix-odb\",\n \"gix-ref 0.49.1\",\n \"gix-testtools\",\n \"gix-validate 0.9.2\",\n]\n\n[[package]]\nname = \"gix-refspec\"\nversion = \"0.27.0\"\ndependencies = [\n \"bstr\",\n \"gix-hash 0.15.1\",\n \"gix-revision\",\n \"gix-testtools\",\n \"gix-validate 0.9.2\",\n \"smallvec\",\n \"thiserror 2.0.3\",\n]\n\n[[package]]\nname = \"gix-revision\"\nversion = \"0.31.1\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"bstr\",\n \"document-features\",\n \"gix-commitgraph 0.25.1\",\n \"gix-date 0.9.3\",\n \"gix-hash 0.15.1\",\n \"gix-hashtable 0.6.0\",\n \"gix-object 0.46.1\",\n \"gix-odb\",\n \"gix-revwalk 0.17.0\",\n \"gix-testtools\",\n \"gix-trace 0.1.11\",\n \"permutohedron\",\n \"serde\",\n \"thiserror 2.0.3\",\n]\n\n[[package]]\nname = \"gix-revwalk\"\nversion = \"0.13.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1b030ccaab71af141f537e0225f19b9e74f25fefdba0372246b844491cab43e0\"\ndependencies = [\n \"gix-commitgraph 0.24.3\",\n \"gix-date 0.8.7\",\n \"gix-hash 0.14.2\",\n \"gix-hashtable 0.5.2\",\n \"gix-object 0.42.3\",\n \"smallvec\",\n \"thiserror 1.0.69\",\n]\n\n[[package]]\nname = \"gix-revwalk\"\nversion = \"0.17.0\"\ndependencies = [\n \"gix-commitgraph 0.25.1\",\n \"gix-date 0.9.3\",\n \"gix-hash 0.15.1\",\n \"gix-hashtable 0.6.0\",\n \"gix-object 0.46.1\",\n \"gix-testtools\",\n \"smallvec\",\n \"thiserror 2.0.3\",\n]\n\n[[package]]\nname = \"gix-sec\"\nversion = \"0.10.10\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"document-features\",\n \"gix-path 0.10.13\",\n \"libc\",\n \"serde\",\n \"tempfile\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"gix-sec\"\nversion = \"0.10.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a8b876ef997a955397809a2ec398d6a45b7a55b4918f2446344330f778d14fd6\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"gix-path 0.10.13 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"libc\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"gix-sequencer\"\nversion = \"0.0.0\"\n\n[[package]]\nname = \"gix-shallow\"\nversion = \"0.1.0\"\ndependencies = [\n \"bstr\",\n \"gix-hash 0.15.1\",\n \"gix-lock 15.0.1\",\n \"serde\",\n \"thiserror 2.0.3\",\n]\n\n[[package]]\nname = \"gix-status\"\nversion = \"0.16.0\"\ndependencies = [\n \"bstr\",\n \"document-features\",\n \"filetime\",\n \"gix-diff\",\n \"gix-dir\",\n \"gix-features 0.39.1\",\n \"gix-filter\",\n \"gix-fs 0.12.1\",\n \"gix-hash 0.15.1\",\n \"gix-index 0.37.0\",\n \"gix-object 0.46.1\",\n \"gix-path 0.10.13\",\n \"gix-pathspec\",\n \"gix-worktree 0.38.0\",\n \"portable-atomic\",\n \"thiserror 2.0.3\",\n]\n\n[[package]]\nname = \"gix-status-tests\"\nversion = \"0.0.0\"\ndependencies = [\n \"bstr\",\n \"filetime\",\n \"gix-diff\",\n \"gix-dir\",\n \"gix-features 0.39.1\",\n \"gix-filter\",\n \"gix-fs 0.12.1\",\n \"gix-hash 0.15.1\",\n \"gix-index 0.37.0\",\n \"gix-object 0.46.1\",\n \"gix-odb\",\n \"gix-path 0.10.13\",\n \"gix-pathspec\",\n \"gix-status\",\n \"gix-testtools\",\n \"gix-worktree 0.38.0\",\n \"pretty_assertions\",\n]\n\n[[package]]\nname = \"gix-submodule\"\nversion = \"0.16.0\"\ndependencies = [\n \"bstr\",\n \"gix-config\",\n \"gix-features 0.39.1\",\n \"gix-path 0.10.13\",\n \"gix-pathspec\",\n \"gix-refspec\",\n \"gix-testtools\",\n \"gix-url\",\n \"thiserror 2.0.3\",\n]\n\n[[package]]\nname = \"gix-tempfile\"\nversion = \"14.0.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"046b4927969fa816a150a0cda2e62c80016fe11fb3c3184e4dddf4e542f108aa\"\ndependencies = [\n \"gix-fs 0.11.3\",\n \"libc\",\n \"once_cell\",\n \"parking_lot\",\n \"signal-hook\",\n \"signal-hook-registry\",\n \"tempfile\",\n]\n\n[[package]]\nname = \"gix-tempfile\"\nversion = \"15.0.0\"\ndependencies = [\n \"dashmap\",\n \"document-features\",\n \"gix-fs 0.12.1\",\n \"libc\",\n \"once_cell\",\n \"parking_lot\",\n \"signal-hook\",\n \"signal-hook-registry\",\n \"tempfile\",\n]\n\n[[package]]\nname = \"gix-testtools\"\nversion = \"0.16.0\"\ndependencies = [\n \"bstr\",\n \"crc\",\n \"document-features\",\n \"fastrand\",\n \"fs_extra\",\n \"gix-discover 0.32.0\",\n \"gix-fs 0.11.3\",\n \"gix-lock 14.0.0\",\n \"gix-tempfile 14.0.2\",\n \"gix-worktree 0.34.1\",\n \"io-close\",\n \"is_ci\",\n \"once_cell\",\n \"parking_lot\",\n \"serial_test\",\n \"tar\",\n \"tempfile\",\n \"winnow\",\n \"xz2\",\n]\n\n[[package]]\nname = \"gix-tix\"\nversion = \"0.0.0\"\n\n[[package]]\nname = \"gix-trace\"\nversion = \"0.1.11\"\ndependencies = [\n \"document-features\",\n \"tracing-core\",\n]\n\n[[package]]\nname = \"gix-trace\"\nversion = \"0.1.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"04bdde120c29f1fc23a24d3e115aeeea3d60d8e65bab92cc5f9d90d9302eb952\"\n\n[[package]]\nname = \"gix-transport\"\nversion = \"0.44.0\"\ndependencies = [\n \"async-std\",\n \"async-trait\",\n \"base64\",\n \"blocking\",\n \"bstr\",\n \"curl\",\n \"document-features\",\n \"futures-io\",\n \"futures-lite\",\n \"gix-command\",\n \"gix-credentials\",\n \"gix-features 0.39.1\",\n \"gix-hash 0.15.1\",\n \"gix-pack\",\n \"gix-packetline\",\n \"gix-quote 0.4.14\",\n \"gix-sec 0.10.10\",\n \"gix-url\",\n \"maybe-async\",\n \"pin-project-lite\",\n \"reqwest\",\n \"serde\",\n \"thiserror 2.0.3\",\n]\n\n[[package]]\nname = \"gix-traverse\"\nversion = \"0.39.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e499a18c511e71cf4a20413b743b9f5bcf64b3d9e81e9c3c6cd399eae55a8840\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"gix-commitgraph 0.24.3\",\n \"gix-date 0.8.7\",\n \"gix-hash 0.14.2\",\n \"gix-hashtable 0.5.2\",\n \"gix-object 0.42.3\",\n \"gix-revwalk 0.13.2\",\n \"smallvec\",\n \"thiserror 1.0.69\",\n]\n\n[[package]]\nname = \"gix-traverse\"\nversion = \"0.43.1\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"gix-commitgraph 0.25.1\",\n \"gix-date 0.9.3\",\n \"gix-hash 0.15.1\",\n \"gix-hashtable 0.6.0\",\n \"gix-object 0.46.1\",\n \"gix-revwalk 0.17.0\",\n \"smallvec\",\n \"thiserror 2.0.3\",\n]\n\n[[package]]\nname = \"gix-traverse-tests\"\nversion = \"0.0.0\"\ndependencies = [\n \"gix-commitgraph 0.25.1\",\n \"gix-hash 0.15.1\",\n \"gix-object 0.46.1\",\n \"gix-odb\",\n \"gix-testtools\",\n \"gix-traverse 0.43.1\",\n \"insta\",\n]\n\n[[package]]\nname = \"gix-tui\"\nversion = \"0.0.0\"\n\n[[package]]\nname = \"gix-url\"\nversion = \"0.28.2\"\ndependencies = [\n \"assert_matches\",\n \"bstr\",\n \"document-features\",\n \"gix-features 0.39.1\",\n \"gix-path 0.10.13\",\n \"gix-testtools\",\n \"percent-encoding\",\n \"serde\",\n \"thiserror 2.0.3\",\n \"url\",\n]\n\n[[package]]\nname = \"gix-utils\"\nversion = \"0.1.13\"\ndependencies = [\n \"bstr\",\n \"fastrand\",\n \"unicode-normalization\",\n]\n\n[[package]]\nname = \"gix-utils\"\nversion = \"0.1.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ba427e3e9599508ed98a6ddf8ed05493db114564e338e41f6a996d2e4790335f\"\ndependencies = [\n \"fastrand\",\n \"unicode-normalization\",\n]\n\n[[package]]\nname = \"gix-validate\"\nversion = \"0.8.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"82c27dd34a49b1addf193c92070bcbf3beaf6e10f16a78544de6372e146a0acf\"\ndependencies = [\n \"bstr\",\n \"thiserror 1.0.69\",\n]\n\n[[package]]\nname = \"gix-validate\"\nversion = \"0.9.2\"\ndependencies = [\n \"bstr\",\n \"gix-testtools\",\n \"thiserror 2.0.3\",\n]\n\n[[package]]\nname = \"gix-worktree\"\nversion = \"0.34.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"26f7326ebe0b9172220694ea69d344c536009a9b98fb0f9de092c440f3efe7a6\"\ndependencies = [\n \"bstr\",\n \"gix-attributes 0.22.5\",\n \"gix-features 0.38.2\",\n \"gix-fs 0.11.3\",\n \"gix-glob 0.16.5\",\n \"gix-hash 0.14.2\",\n \"gix-ignore 0.11.4\",\n \"gix-index 0.33.1\",\n \"gix-object 0.42.3\",\n \"gix-path 0.10.13 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"gix-validate 0.8.5\",\n]\n\n[[package]]\nname = \"gix-worktree\"\nversion = \"0.38.0\"\ndependencies = [\n \"bstr\",\n \"document-features\",\n \"gix-attributes 0.23.1\",\n \"gix-features 0.39.1\",\n \"gix-fs 0.12.1\",\n \"gix-glob 0.17.1\",\n \"gix-hash 0.15.1\",\n \"gix-ignore 0.12.1\",\n \"gix-index 0.37.0\",\n \"gix-object 0.46.1\",\n \"gix-path 0.10.13\",\n \"gix-validate 0.9.2\",\n \"serde\",\n]\n\n[[package]]\nname = \"gix-worktree-state\"\nversion = \"0.16.0\"\ndependencies = [\n \"bstr\",\n \"gix-features 0.39.1\",\n \"gix-filter\",\n \"gix-fs 0.12.1\",\n \"gix-glob 0.17.1\",\n \"gix-hash 0.15.1\",\n \"gix-index 0.37.0\",\n \"gix-object 0.46.1\",\n \"gix-path 0.10.13\",\n \"gix-worktree 0.38.0\",\n \"io-close\",\n \"thiserror 2.0.3\",\n]\n\n[[package]]\nname = \"gix-worktree-state-tests\"\nversion = \"0.0.0\"\ndependencies = [\n \"gix-discover 0.37.0\",\n \"gix-features 0.39.1\",\n \"gix-filter\",\n \"gix-fs 0.12.1\",\n \"gix-hash 0.15.1\",\n \"gix-index 0.37.0\",\n \"gix-object 0.46.1\",\n \"gix-odb\",\n \"gix-testtools\",\n \"gix-worktree-state\",\n \"once_cell\",\n \"symlink\",\n \"walkdir\",\n]\n\n[[package]]\nname = \"gix-worktree-stream\"\nversion = \"0.18.0\"\ndependencies = [\n \"gix-attributes 0.23.1\",\n \"gix-features 0.39.1\",\n \"gix-filter\",\n \"gix-fs 0.12.1\",\n \"gix-hash 0.15.1\",\n \"gix-object 0.46.1\",\n \"gix-odb\",\n \"gix-path 0.10.13\",\n \"gix-testtools\",\n \"gix-traverse 0.43.1\",\n \"gix-worktree 0.38.0\",\n \"parking_lot\",\n \"thiserror 2.0.3\",\n]\n\n[[package]]\nname = \"gix-worktree-tests\"\nversion = \"0.0.0\"\ndependencies = [\n \"bstr\",\n \"gix-attributes 0.23.1\",\n \"gix-discover 0.37.0\",\n \"gix-features 0.39.1\",\n \"gix-fs 0.12.1\",\n \"gix-glob 0.17.1\",\n \"gix-hash 0.15.1\",\n \"gix-ignore 0.12.1\",\n \"gix-index 0.37.0\",\n \"gix-object 0.46.1\",\n \"gix-odb\",\n \"gix-path 0.10.13\",\n \"gix-testtools\",\n \"gix-worktree 0.38.0\",\n \"symlink\",\n]\n\n[[package]]\nname = \"glob\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d2fabcfbdc87f4758337ca535fb41a6d701b65693ce38287d856d1674551ec9b\"\n\n[[package]]\nname = \"gloo-timers\"\nversion = \"0.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bbb143cf96099802033e0d4f4963b19fd2e0b728bcf076cd9cf7f6634f092994\"\ndependencies = [\n \"futures-channel\",\n \"futures-core\",\n \"js-sys\",\n \"wasm-bindgen\",\n]\n\n[[package]]\nname = \"h2\"\nversion = \"0.4.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ccae279728d634d083c00f6099cb58f01cc99c145b84b8be2f6c74618d79922e\"\ndependencies = [\n \"atomic-waker\",\n \"bytes\",\n \"fnv\",\n \"futures-core\",\n \"futures-sink\",\n \"http\",\n \"indexmap\",\n \"slab\",\n \"tokio\",\n \"tokio-util\",\n \"tracing\",\n]\n\n[[package]]\nname = \"half\"\nversion = \"2.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6dd08c532ae367adf81c312a4580bc67f1d0fe8bc9c460520283f4c0ff277888\"\ndependencies = [\n \"cfg-if\",\n \"crunchy\",\n]\n\n[[package]]\nname = \"hashbrown\"\nversion = \"0.14.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e5274423e17b7c9fc20b6e7e208532f9b19825d82dfd615708b70edd83df41f1\"\ndependencies = [\n \"ahash\",\n \"allocator-api2\",\n]\n\n[[package]]\nname = \"hashbrown\"\nversion = \"0.15.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bf151400ff0baff5465007dd2f3e717f3fe502074ca563069ce3a6629d07b289\"\ndependencies = [\n \"allocator-api2\",\n \"equivalent\",\n \"foldhash\",\n]\n\n[[package]]\nname = \"hashlink\"\nversion = \"0.9.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6ba4ff7128dee98c7dc9794b6a411377e1404dba1c97deb8d1a55297bd25d8af\"\ndependencies = [\n \"hashbrown 0.14.5\",\n]\n\n[[package]]\nname = \"heck\"\nversion = \"0.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2304e00983f87ffb38b55b444b5e3b60a884b5d30c0fca7d82fe33449bbe55ea\"\n\n[[package]]\nname = \"hermit-abi\"\nversion = \"0.3.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d231dfb89cfffdbc30e7fc41579ed6066ad03abda9e567ccafae602b97ec5024\"\n\n[[package]]\nname = \"hermit-abi\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fbf6a919d6cf397374f7dfeeea91d974c7c0a7221d0d0f4f20d859d329e53fcc\"\n\n[[package]]\nname = \"home\"\nversion = \"0.5.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e3d1354bf6b7235cb4a0576c2619fd4ed18183f689b12b006a0ee7329eeff9a5\"\ndependencies = [\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"http\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"21b9ddb458710bc376481b842f5da65cdf31522de232c1ca8146abce2a358258\"\ndependencies = [\n \"bytes\",\n \"fnv\",\n \"itoa\",\n]\n\n[[package]]\nname = \"http-body\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1efedce1fb8e6913f23e0c92de8e62cd5b772a67e7b3946df930a62566c93184\"\ndependencies = [\n \"bytes\",\n \"http\",\n]\n\n[[package]]\nname = \"http-body-util\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"793429d76616a256bcb62c2a2ec2bed781c8307e797e2598c50010f2bee2544f\"\ndependencies = [\n \"bytes\",\n \"futures-util\",\n \"http\",\n \"http-body\",\n \"pin-project-lite\",\n]\n\n[[package]]\nname = \"httparse\"\nversion = \"1.9.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7d71d3574edd2771538b901e6549113b4006ece66150fb69c0fb6d9a2adae946\"\n\n[[package]]\nname = \"human_format\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5c3b1f728c459d27b12448862017b96ad4767b1ec2ec5e6434e99f1577f085b8\"\n\n[[package]]\nname = \"humantime\"\nversion = \"2.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9a3a5bfb195931eeb336b2a7b4d761daec841b97f947d34394601737a7bba5e4\"\n\n[[package]]\nname = \"hyper\"\nversion = \"1.5.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"97818827ef4f364230e16705d4706e2897df2bb60617d6ca15d598025a3c481f\"\ndependencies = [\n \"bytes\",\n \"futures-channel\",\n \"futures-util\",\n \"h2\",\n \"http\",\n \"http-body\",\n \"httparse\",\n \"itoa\",\n \"pin-project-lite\",\n \"smallvec\",\n \"tokio\",\n \"want\",\n]\n\n[[package]]\nname = \"hyper-rustls\"\nversion = \"0.27.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"08afdbb5c31130e3034af566421053ab03787c640246a446327f550d11bcb333\"\ndependencies = [\n \"futures-util\",\n \"http\",\n \"hyper\",\n \"hyper-util\",\n \"rustls\",\n \"rustls-pki-types\",\n \"tokio\",\n \"tokio-rustls\",\n \"tower-service\",\n \"webpki-roots\",\n]\n\n[[package]]\nname = \"hyper-tls\"\nversion = \"0.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"70206fc6890eaca9fde8a0bf71caa2ddfc9fe045ac9e5c70df101a7dbde866e0\"\ndependencies = [\n \"bytes\",\n \"http-body-util\",\n \"hyper\",\n \"hyper-util\",\n \"native-tls\",\n \"tokio\",\n \"tokio-native-tls\",\n \"tower-service\",\n]\n\n[[package]]\nname = \"hyper-util\"\nversion = \"0.1.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"df2dcfbe0677734ab2f3ffa7fa7bfd4706bfdc1ef393f2ee30184aed67e631b4\"\ndependencies = [\n \"bytes\",\n \"futures-channel\",\n \"futures-util\",\n \"http\",\n \"http-body\",\n \"hyper\",\n \"pin-project-lite\",\n \"socket2\",\n \"tokio\",\n \"tower-service\",\n \"tracing\",\n]\n\n[[package]]\nname = \"icu_collections\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"db2fa452206ebee18c4b5c2274dbf1de17008e874b4dc4f0aea9d01ca79e4526\"\ndependencies = [\n \"displaydoc\",\n \"yoke\",\n \"zerofrom\",\n \"zerovec\",\n]\n\n[[package]]\nname = \"icu_locid\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"13acbb8371917fc971be86fc8057c41a64b521c184808a698c02acc242dbf637\"\ndependencies = [\n \"displaydoc\",\n \"litemap\",\n \"tinystr\",\n \"writeable\",\n \"zerovec\",\n]\n\n[[package]]\nname = \"icu_locid_transform\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"01d11ac35de8e40fdeda00d9e1e9d92525f3f9d887cdd7aa81d727596788b54e\"\ndependencies = [\n \"displaydoc\",\n \"icu_locid\",\n \"icu_locid_transform_data\",\n \"icu_provider\",\n \"tinystr\",\n \"zerovec\",\n]\n\n[[package]]\nname = \"icu_locid_transform_data\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fdc8ff3388f852bede6b579ad4e978ab004f139284d7b28715f773507b946f6e\"\n\n[[package]]\nname = \"icu_normalizer\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"19ce3e0da2ec68599d193c93d088142efd7f9c5d6fc9b803774855747dc6a84f\"\ndependencies = [\n \"displaydoc\",\n \"icu_collections\",\n \"icu_normalizer_data\",\n \"icu_properties\",\n \"icu_provider\",\n \"smallvec\",\n \"utf16_iter\",\n \"utf8_iter\",\n \"write16\",\n \"zerovec\",\n]\n\n[[package]]\nname = \"icu_normalizer_data\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f8cafbf7aa791e9b22bec55a167906f9e1215fd475cd22adfcf660e03e989516\"\n\n[[package]]\nname = \"icu_properties\"\nversion = \"1.5.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"93d6020766cfc6302c15dbbc9c8778c37e62c14427cb7f6e601d849e092aeef5\"\ndependencies = [\n \"displaydoc\",\n \"icu_collections\",\n \"icu_locid_transform\",\n \"icu_properties_data\",\n \"icu_provider\",\n \"tinystr\",\n \"zerovec\",\n]\n\n[[package]]\nname = \"icu_properties_data\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"67a8effbc3dd3e4ba1afa8ad918d5684b8868b3b26500753effea8d2eed19569\"\n\n[[package]]\nname = \"icu_provider\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6ed421c8a8ef78d3e2dbc98a973be2f3770cb42b606e3ab18d6237c4dfde68d9\"\ndependencies = [\n \"displaydoc\",\n \"icu_locid\",\n \"icu_provider_macros\",\n \"stable_deref_trait\",\n \"tinystr\",\n \"writeable\",\n \"yoke\",\n \"zerofrom\",\n \"zerovec\",\n]\n\n[[package]]\nname = \"icu_provider_macros\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1ec89e9337638ecdc08744df490b221a7399bf8d164eb52a665454e60e075ad6\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.89\",\n]\n\n[[package]]\nname = \"idna\"\nversion = \"1.0.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"686f825264d630750a544639377bae737628043f20d38bbc029e8f29ea968a7e\"\ndependencies = [\n \"idna_adapter\",\n \"smallvec\",\n \"utf8_iter\",\n]\n\n[[package]]\nname = \"idna_adapter\"\nversion = \"1.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"daca1df1c957320b2cf139ac61e7bd64fed304c5040df000a745aa1de3b4ef71\"\ndependencies = [\n \"icu_normalizer\",\n \"icu_properties\",\n]\n\n[[package]]\nname = \"imara-diff\"\nversion = \"0.1.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fc9da1a252bd44cd341657203722352efc9bc0c847d06ea6d2dc1cd1135e0a01\"\ndependencies = [\n \"ahash\",\n \"hashbrown 0.14.5\",\n]\n\n[[package]]\nname = \"indexmap\"\nversion = \"2.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"707907fe3c25f5424cce2cb7e1cbcafee6bdbe735ca90ef77c29e84591e5b9da\"\ndependencies = [\n \"equivalent\",\n \"hashbrown 0.15.2\",\n]\n\n[[package]]\nname = \"insta\"\nversion = \"1.41.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7e9ffc4d4892617c50a928c52b2961cb5174b6fc6ebf252b2fac9d21955c48b8\"\ndependencies = [\n \"console\",\n \"lazy_static\",\n \"linked-hash-map\",\n \"similar\",\n]\n\n[[package]]\nname = \"internal-tools\"\nversion = \"0.0.0\"\ndependencies = [\n \"anyhow\",\n \"clap\",\n \"gix\",\n \"once_cell\",\n \"regex\",\n]\n\n[[package]]\nname = \"io-close\"\nversion = \"0.3.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9cadcf447f06744f8ce713d2d6239bb5bde2c357a452397a9ed90c625da390bc\"\ndependencies = [\n \"libc\",\n \"winapi\",\n]\n\n[[package]]\nname = \"ipnet\"\nversion = \"2.10.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ddc24109865250148c2e0f3d25d4f0f479571723792d3802153c60922a4fb708\"\n\n[[package]]\nname = \"is-docker\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"928bae27f42bc99b60d9ac7334e3a21d10ad8f1835a4e12ec3ec0464765ed1b3\"\ndependencies = [\n \"once_cell\",\n]\n\n[[package]]\nname = \"is-terminal\"\nversion = \"0.4.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"261f68e344040fbd0edea105bef17c66edf46f984ddb1115b775ce31be948f4b\"\ndependencies = [\n \"hermit-abi 0.4.0\",\n \"libc\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"is-wsl\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"173609498df190136aa7dea1a91db051746d339e18476eed5ca40521f02d7aa5\"\ndependencies = [\n \"is-docker\",\n \"once_cell\",\n]\n\n[[package]]\nname = \"is_ci\"\nversion = \"1.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7655c9839580ee829dfacba1d1278c2b7883e50a277ff7541299489d6bdfdc45\"\n\n[[package]]\nname = \"is_terminal_polyfill\"\nversion = \"1.70.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7943c866cc5cd64cbc25b2e01621d07fa8eb2a1a23160ee81ce38704e97b8ecf\"\n\n[[package]]\nname = \"itertools\"\nversion = \"0.10.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b0fd2260e829bddf4cb6ea802289de2f86d6a7a690192fbe91b3f46e0f2c8473\"\ndependencies = [\n \"either\",\n]\n\n[[package]]\nname = \"itertools\"\nversion = \"0.12.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ba291022dbbd398a455acf126c1e341954079855bc60dfdda641363bd6922569\"\ndependencies = [\n \"either\",\n]\n\n[[package]]\nname = \"itertools\"\nversion = \"0.13.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"413ee7dfc52ee1a4949ceeb7dbc8a33f2d6c088194d9f922fb8318faf1f01186\"\ndependencies = [\n \"either\",\n]\n\n[[package]]\nname = \"itoa\"\nversion = \"1.0.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"540654e97a3f4470a492cd30ff187bc95d89557a903a2bbf112e2fae98104ef2\"\n\n[[package]]\nname = \"jiff\"\nversion = \"0.1.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b9d9d414fc817d3e3d62b2598616733f76c4cc74fbac96069674739b881295c8\"\ndependencies = [\n \"jiff-tzdb-platform\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"jiff-tzdb\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"91335e575850c5c4c673b9bd467b0e025f164ca59d0564f69d0c2ee0ffad4653\"\n\n[[package]]\nname = \"jiff-tzdb-platform\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9835f0060a626fe59f160437bc725491a6af23133ea906500027d1bd2f8f4329\"\ndependencies = [\n \"jiff-tzdb\",\n]\n\n[[package]]\nname = \"jni\"\nversion = \"0.19.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c6df18c2e3db7e453d3c6ac5b3e9d5182664d28788126d39b91f2d1e22b017ec\"\ndependencies = [\n \"cesu8\",\n \"combine\",\n \"jni-sys\",\n \"log\",\n \"thiserror 1.0.69\",\n \"walkdir\",\n]\n\n[[package]]\nname = \"jni-sys\"\nversion = \"0.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8eaf4bc02d17cbdd7ff4c7438cafcdf7fb9a4613313ad11b4f8fefe7d3fa0130\"\n\n[[package]]\nname = \"jobserver\"\nversion = \"0.1.32\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"48d1dbcbbeb6a7fec7e059840aa538bd62aaccf972c7346c4d9d2059312853d0\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"js-sys\"\nversion = \"0.3.72\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6a88f1bda2bd75b0452a14784937d796722fdebfe50df998aeb3f0b7603019a9\"\ndependencies = [\n \"wasm-bindgen\",\n]\n\n[[package]]\nname = \"jwalk\"\nversion = \"0.8.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2735847566356cd2179a2a38264839308f7079fa96e6bd5a42d740460e003c56\"\ndependencies = [\n \"crossbeam\",\n \"rayon\",\n]\n\n[[package]]\nname = \"known-folders\"\nversion = \"1.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b7d9a1740cc8b46e259a0eb787d79d855e79ff10b9855a5eba58868d5da7927c\"\ndependencies = [\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"kstring\"\nversion = \"2.0.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"558bf9508a558512042d3095138b1f7b8fe90c5467d94f9f1da28b3731c5dbd1\"\ndependencies = [\n \"serde\",\n \"static_assertions\",\n]\n\n[[package]]\nname = \"kv-log-macro\"\nversion = \"1.0.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0de8b303297635ad57c9f5059fd9cee7a47f8e8daa09df0fcd07dd39fb22977f\"\ndependencies = [\n \"log\",\n]\n\n[[package]]\nname = \"layout-rs\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"84deb28a3a6c839ca42a7341664f32281416d69e2f29deb85aec5cc0243fdea8\"\n\n[[package]]\nname = \"lazy_static\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bbd2bcb4c963f2ddae06a2efc7e9f3591312473c50c6685e1f298068316e66fe\"\n\n[[package]]\nname = \"lazycell\"\nversion = \"1.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"830d08ce1d1d941e6b30645f1a0eb5643013d835ce3779a5fc208261dbe10f55\"\n\n[[package]]\nname = \"libc\"\nversion = \"0.2.164\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"433bfe06b8c75da9b2e3fbea6e5329ff87748f0b144ef75306e674c3f6f7c13f\"\n\n[[package]]\nname = \"libloading\"\nversion = \"0.8.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4979f22fdb869068da03c9f7528f8297c6fd2606bc3a4affe42e6a823fdb8da4\"\ndependencies = [\n \"cfg-if\",\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"libredox\"\nversion = \"0.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c0ff37bd590ca25063e35af745c343cb7a0271906fb7b37e4813e8f79f00268d\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"libc\",\n \"redox_syscall\",\n]\n\n[[package]]\nname = \"libsqlite3-sys\"\nversion = \"0.30.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2e99fb7a497b1e3339bc746195567ed8d3e24945ecd636e3619d20b9de9e9149\"\ndependencies = [\n \"cc\",\n \"pkg-config\",\n \"vcpkg\",\n]\n\n[[package]]\nname = \"libz-ng-sys\"\nversion = \"1.1.20\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8f0f7295a34685977acb2e8cc8b08ee4a8dffd6cf278eeccddbe1ed55ba815d5\"\ndependencies = [\n \"cmake\",\n \"libc\",\n]\n\n[[package]]\nname = \"libz-sys\"\nversion = \"1.1.20\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d2d16453e800a8cf6dd2fc3eb4bc99b786a9b90c663b8559a5b1a041bf89e472\"\ndependencies = [\n \"cc\",\n \"cmake\",\n \"libc\",\n \"pkg-config\",\n \"vcpkg\",\n]\n\n[[package]]\nname = \"linked-hash-map\"\nversion = \"0.5.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0717cef1bc8b636c6e1c1bbdefc09e6322da8a9321966e8928ef80d20f7f770f\"\n\n[[package]]\nname = \"linux-raw-sys\"\nversion = \"0.4.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"78b3ae25bc7c8c38cec158d1f2757ee79e9b3740fbc7ccf0e59e4b08d793fa89\"\n\n[[package]]\nname = \"litemap\"\nversion = \"0.7.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4ee93343901ab17bd981295f2cf0026d4ad018c7c31ba84549a4ddbb47a45104\"\n\n[[package]]\nname = \"litrs\"\nversion = \"0.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b4ce301924b7887e9d637144fdade93f9dfff9b60981d4ac161db09720d39aa5\"\n\n[[package]]\nname = \"lock_api\"\nversion = \"0.4.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"07af8b9cdd281b7915f413fa73f29ebd5d55d0d3f0155584dade1ff18cea1b17\"\ndependencies = [\n \"autocfg\",\n \"scopeguard\",\n]\n\n[[package]]\nname = \"lockfree-object-pool\"\nversion = \"0.1.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9374ef4228402d4b7e403e5838cb880d9ee663314b0a900d5a6aabf0c213552e\"\n\n[[package]]\nname = \"log\"\nversion = \"0.4.22\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a7a70ba024b9dc04c27ea2f0c0548feb474ec5c54bba33a7f72f873a39d07b24\"\ndependencies = [\n \"value-bag\",\n]\n\n[[package]]\nname = \"lru\"\nversion = \"0.12.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"234cf4f4a04dc1f57e24b96cc0cd600cf2af460d4161ac5ecdd0af8e1f3b2a38\"\ndependencies = [\n \"hashbrown 0.15.2\",\n]\n\n[[package]]\nname = \"lzma-sys\"\nversion = \"0.1.20\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5fda04ab3764e6cde78b9974eec4f779acaba7c4e84b36eca3cf77c581b85d27\"\ndependencies = [\n \"cc\",\n \"libc\",\n \"pkg-config\",\n]\n\n[[package]]\nname = \"maplit\"\nversion = \"1.0.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3e2e65a1a2e43cfcb47a895c4c8b10d1f4a61097f9f254f183aee60cad9c651d\"\n\n[[package]]\nname = \"maybe-async\"\nversion = \"0.2.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5cf92c10c7e361d6b99666ec1c6f9805b0bea2c3bd8c78dc6fe98ac5bd78db11\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.89\",\n]\n\n[[package]]\nname = \"memchr\"\nversion = \"2.7.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"78ca9ab1a0babb1e7d5695e3530886289c18cf2f87ec19a575a0abdce112e3a3\"\n\n[[package]]\nname = \"memmap2\"\nversion = \"0.9.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fd3f7eed9d3848f8b98834af67102b720745c4ec028fcd0aa0239277e7de374f\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"memoffset\"\nversion = \"0.7.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5de893c32cde5f383baa4c04c5d6dbdd735cfd4a794b0debdb2bb1b421da5ff4\"\ndependencies = [\n \"autocfg\",\n]\n\n[[package]]\nname = \"mime\"\nversion = \"0.3.17\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6877bb514081ee2a7ff5ef9de3281f14a4dd4bceac4c09388074a6b5df8a139a\"\n\n[[package]]\nname = \"minimal-lexical\"\nversion = \"0.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"68354c5c6bd36d73ff3feceb05efa59b6acb7626617f4962be322a825e61f79a\"\n\n[[package]]\nname = \"miniz_oxide\"\nversion = \"0.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e2d80299ef12ff69b16a84bb182e3b9df68b5a91574d3d4fa6e41b65deec4df1\"\ndependencies = [\n \"adler2\",\n]\n\n[[package]]\nname = \"mio\"\nversion = \"0.8.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a4a650543ca06a924e8b371db273b2756685faae30f8487da1b56505a8f78b0c\"\ndependencies = [\n \"libc\",\n \"log\",\n \"wasi\",\n \"windows-sys 0.48.0\",\n]\n\n[[package]]\nname = \"mio\"\nversion = \"1.0.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"80e04d1dcff3aae0704555fe5fee3bcfaf3d1fdf8a7e521d5b9d2b42acb52cec\"\ndependencies = [\n \"hermit-abi 0.3.9\",\n \"libc\",\n \"wasi\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"native-tls\"\nversion = \"0.2.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a8614eb2c83d59d1c8cc974dd3f920198647674a0a035e1af1fa58707e317466\"\ndependencies = [\n \"libc\",\n \"log\",\n \"openssl\",\n \"openssl-probe\",\n \"openssl-sys\",\n \"schannel\",\n \"security-framework\",\n \"security-framework-sys\",\n \"tempfile\",\n]\n\n[[package]]\nname = \"nix\"\nversion = \"0.26.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"598beaf3cc6fdd9a5dfb1630c2800c7acd31df7aaf0f565796fba2b53ca1af1b\"\ndependencies = [\n \"bitflags 1.3.2\",\n \"cfg-if\",\n \"libc\",\n \"memoffset\",\n \"pin-utils\",\n]\n\n[[package]]\nname = \"nom\"\nversion = \"7.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d273983c5a657a70a3e8f2a01329822f3b8c8172b73826411a55751e404a0a4a\"\ndependencies = [\n \"memchr\",\n \"minimal-lexical\",\n]\n\n[[package]]\nname = \"ntapi\"\nversion = \"0.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e8a3895c6391c39d7fe7ebc444a87eb2991b2a0bc718fdabd071eec617fc68e4\"\ndependencies = [\n \"winapi\",\n]\n\n[[package]]\nname = \"nu-ansi-term\"\nversion = \"0.46.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"77a8165726e8236064dbb45459242600304b42a5ea24ee2948e18e023bf7ba84\"\ndependencies = [\n \"overload\",\n \"winapi\",\n]\n\n[[package]]\nname = \"num-bigint\"\nversion = \"0.4.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a5e44f723f1133c9deac646763579fdb3ac745e418f2a7af9cd0c431da1f20b9\"\ndependencies = [\n \"num-integer\",\n \"num-traits\",\n]\n\n[[package]]\nname = \"num-conv\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"51d515d32fb182ee37cda2ccdcb92950d6a3c2893aa280e540671c2cd0f3b1d9\"\n\n[[package]]\nname = \"num-integer\"\nversion = \"0.1.46\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7969661fd2958a5cb096e56c8e1ad0444ac2bbcd0061bd28660485a44879858f\"\ndependencies = [\n \"num-traits\",\n]\n\n[[package]]\nname = \"num-traits\"\nversion = \"0.2.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"071dfc062690e90b734c0b2273ce72ad0ffa95f0c74596bc250dcfd960262841\"\ndependencies = [\n \"autocfg\",\n]\n\n[[package]]\nname = \"num_threads\"\nversion = \"0.1.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5c7398b9c8b70908f6371f47ed36737907c87c52af34c268fed0bf0ceb92ead9\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"object\"\nversion = \"0.36.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"aedf0a2d09c573ed1d8d85b30c119153926a2b36dce0ab28322c09a117a4683e\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"once_cell\"\nversion = \"1.20.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1261fe7e33c73b354eab43b1273a57c8f967d0391e80353e51f764ac02cf6775\"\n\n[[package]]\nname = \"oorandom\"\nversion = \"11.1.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b410bbe7e14ab526a0e86877eb47c6996a2bd7746f027ba551028c925390e4e9\"\n\n[[package]]\nname = \"open\"\nversion = \"5.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3ecd52f0b8d15c40ce4820aa251ed5de032e5d91fab27f7db2f40d42a8bdf69c\"\ndependencies = [\n \"is-wsl\",\n \"libc\",\n \"pathdiff\",\n]\n\n[[package]]\nname = \"openssl\"\nversion = \"0.10.68\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6174bc48f102d208783c2c84bf931bb75927a617866870de8a4ea85597f871f5\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"cfg-if\",\n \"foreign-types\",\n \"libc\",\n \"once_cell\",\n \"openssl-macros\",\n \"openssl-sys\",\n]\n\n[[package]]\nname = \"openssl-macros\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a948666b637a0f465e8564c73e89d4dde00d72d4d473cc972f390fc3dcee7d9c\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.89\",\n]\n\n[[package]]\nname = \"openssl-probe\"\nversion = \"0.1.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ff011a302c396a5197692431fc1948019154afc178baf7d8e37367442a4601cf\"\n\n[[package]]\nname = \"openssl-sys\"\nversion = \"0.9.104\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"45abf306cbf99debc8195b66b7346498d7b10c210de50418b5ccd7ceba08c741\"\ndependencies = [\n \"cc\",\n \"libc\",\n \"pkg-config\",\n \"vcpkg\",\n]\n\n[[package]]\nname = \"overload\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b15813163c1d831bf4a13c3610c05c0d03b39feb07f7e09fa234dac9b15aaf39\"\n\n[[package]]\nname = \"parking\"\nversion = \"2.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f38d5652c16fde515bb1ecef450ab0f6a219d619a7274976324d5e377f7dceba\"\n\n[[package]]\nname = \"parking_lot\"\nversion = \"0.12.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f1bf18183cf54e8d6059647fc3063646a1801cf30896933ec2311622cc4b9a27\"\ndependencies = [\n \"lock_api\",\n \"parking_lot_core\",\n]\n\n[[package]]\nname = \"parking_lot_core\"\nversion = \"0.9.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1e401f977ab385c9e4e3ab30627d6f26d00e2c73eef317493c4ec6d468726cf8\"\ndependencies = [\n \"cfg-if\",\n \"libc\",\n \"redox_syscall\",\n \"smallvec\",\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"paste\"\nversion = \"1.0.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\"\n\n[[package]]\nname = \"pathdiff\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d61c5ce1153ab5b689d0c074c4e7fc613e942dfb7dd9eea5ab202d2ad91fe361\"\n\n[[package]]\nname = \"percent-encoding\"\nversion = \"2.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e3148f5046208a5d56bcfc03053e3ca6334e51da8dfb19b6cdc8b306fae3283e\"\n\n[[package]]\nname = \"permutohedron\"\nversion = \"0.2.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b687ff7b5da449d39e418ad391e5e08da53ec334903ddbb921db208908fc372c\"\n\n[[package]]\nname = \"pin-project-lite\"\nversion = \"0.2.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"915a1e146535de9163f3987b8944ed8cf49a18bb0056bcebcdcece385cece4ff\"\n\n[[package]]\nname = \"pin-utils\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8b870d8c151b6f2fb93e84a13146138f05d02ed11c7e7c54f8826aaaf7c9f184\"\n\n[[package]]\nname = \"piper\"\nversion = \"0.2.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"96c8c490f422ef9a4efd2cb5b42b76c8613d7e7dfc1caf667b8a3350a5acc066\"\ndependencies = [\n \"atomic-waker\",\n \"fastrand\",\n \"futures-io\",\n]\n\n[[package]]\nname = \"pkg-config\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"953ec861398dccce10c670dfeaf3ec4911ca479e9c02154b3a215178c5f566f2\"\n\n[[package]]\nname = \"plotters\"\nversion = \"0.3.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5aeb6f403d7a4911efb1e33402027fc44f29b5bf6def3effcc22d7bb75f2b747\"\ndependencies = [\n \"num-traits\",\n \"plotters-backend\",\n \"plotters-svg\",\n \"wasm-bindgen\",\n \"web-sys\",\n]\n\n[[package]]\nname = \"plotters-backend\"\nversion = \"0.3.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"df42e13c12958a16b3f7f4386b9ab1f3e7933914ecea48da7139435263a4172a\"\n\n[[package]]\nname = \"plotters-svg\"\nversion = \"0.3.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"51bae2ac328883f7acdfea3d66a7c35751187f870bc81f94563733a154d7a670\"\ndependencies = [\n \"plotters-backend\",\n]\n\n[[package]]\nname = \"polling\"\nversion = \"3.7.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a604568c3202727d1507653cb121dbd627a58684eb09a820fd746bee38b4442f\"\ndependencies = [\n \"cfg-if\",\n \"concurrent-queue\",\n \"hermit-abi 0.4.0\",\n \"pin-project-lite\",\n \"rustix\",\n \"tracing\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"portable-atomic\"\nversion = \"1.10.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"280dc24453071f1b63954171985a0b0d30058d287960968b9b2aca264c8d4ee6\"\n\n[[package]]\nname = \"powerfmt\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"439ee305def115ba05938db6eb1644ff94165c5ab5e9420d1c1bcedbba909391\"\n\n[[package]]\nname = \"ppv-lite86\"\nversion = \"0.2.20\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"77957b295656769bb8ad2b6a6b09d897d94f05c41b069aede1fcdaa675eaea04\"\ndependencies = [\n \"zerocopy\",\n]\n\n[[package]]\nname = \"pretty_assertions\"\nversion = \"1.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3ae130e2f271fbc2ac3a40fb1d07180839cdbbe443c7a27e1e3c13c5cac0116d\"\ndependencies = [\n \"diff\",\n \"yansi\",\n]\n\n[[package]]\nname = \"prettyplease\"\nversion = \"0.2.25\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"64d1ec885c64d0457d564db4ec299b2dae3f9c02808b8ad9c3a089c591b18033\"\ndependencies = [\n \"proc-macro2\",\n \"syn 2.0.89\",\n]\n\n[[package]]\nname = \"proc-macro2\"\nversion = \"1.0.92\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"37d3544b3f2748c54e147655edb5025752e2303145b5aefb3c3ea2c78b973bb0\"\ndependencies = [\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"prodash\"\nversion = \"28.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"744a264d26b88a6a7e37cbad97953fa233b94d585236310bcbc88474b4092d79\"\n\n[[package]]\nname = \"prodash\"\nversion = \"29.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a266d8d6020c61a437be704c5e618037588e1985c7dbb7bf8d265db84cffe325\"\ndependencies = [\n \"async-io\",\n \"bytesize\",\n \"crosstermion\",\n \"futures-core\",\n \"futures-lite\",\n \"human_format\",\n \"humantime\",\n \"is-terminal\",\n \"jiff\",\n \"log\",\n \"parking_lot\",\n \"ratatui\",\n \"signal-hook\",\n \"tui-react\",\n \"unicode-segmentation\",\n \"unicode-width\",\n]\n\n[[package]]\nname = \"ptyprocess\"\nversion = \"0.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7e05aef7befb11a210468a2d77d978dde2c6381a0381e33beb575e91f57fe8cf\"\ndependencies = [\n \"nix\",\n]\n\n[[package]]\nname = \"quinn\"\nversion = \"0.11.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"62e96808277ec6f97351a2380e6c25114bc9e67037775464979f3037c92d05ef\"\ndependencies = [\n \"bytes\",\n \"pin-project-lite\",\n \"quinn-proto\",\n \"quinn-udp\",\n \"rustc-hash 2.0.0\",\n \"rustls\",\n \"socket2\",\n \"thiserror 2.0.3\",\n \"tokio\",\n \"tracing\",\n]\n\n[[package]]\nname = \"quinn-proto\"\nversion = \"0.11.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a2fe5ef3495d7d2e377ff17b1a8ce2ee2ec2a18cde8b6ad6619d65d0701c135d\"\ndependencies = [\n \"bytes\",\n \"getrandom\",\n \"rand\",\n \"ring\",\n \"rustc-hash 2.0.0\",\n \"rustls\",\n \"rustls-pki-types\",\n \"slab\",\n \"thiserror 2.0.3\",\n \"tinyvec\",\n \"tracing\",\n \"web-time\",\n]\n\n[[package]]\nname = \"quinn-udp\"\nversion = \"0.5.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7d5a626c6807713b15cac82a6acaccd6043c9a5408c24baae07611fec3f243da\"\ndependencies = [\n \"cfg_aliases\",\n \"libc\",\n \"once_cell\",\n \"socket2\",\n \"tracing\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"quote\"\nversion = \"1.0.37\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b5b9d34b8991d19d98081b46eacdd8eb58c6f2b201139f7c5f643cc155a633af\"\ndependencies = [\n \"proc-macro2\",\n]\n\n[[package]]\nname = \"rand\"\nversion = \"0.8.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"34af8d1a0e25924bc5b7c43c079c942339d8f0a8b57c39049bef581b46327404\"\ndependencies = [\n \"libc\",\n \"rand_chacha\",\n \"rand_core\",\n]\n\n[[package]]\nname = \"rand_chacha\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e6c10a63a0fa32252be49d21e7709d4d4baf8d231c2dbce1eaa8141b9b127d88\"\ndependencies = [\n \"ppv-lite86\",\n \"rand_core\",\n]\n\n[[package]]\nname = \"rand_core\"\nversion = \"0.6.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ec0be4795e2f6a28069bec0b5ff3e2ac9bafc99e6a9a7dc3547996c5c816922c\"\ndependencies = [\n \"getrandom\",\n]\n\n[[package]]\nname = \"ratatui\"\nversion = \"0.26.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f44c9e68fd46eda15c646fbb85e1040b657a58cdc8c98db1d97a55930d991eef\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"cassowary\",\n \"compact_str\",\n \"crossterm\",\n \"itertools 0.12.1\",\n \"lru\",\n \"paste\",\n \"stability\",\n \"strum\",\n \"unicode-segmentation\",\n \"unicode-truncate\",\n \"unicode-width\",\n]\n\n[[package]]\nname = \"rayon\"\nversion = \"1.10.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b418a60154510ca1a002a752ca9714984e21e4241e804d32555251faf8b78ffa\"\ndependencies = [\n \"either\",\n \"rayon-core\",\n]\n\n[[package]]\nname = \"rayon-core\"\nversion = \"1.12.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1465873a3dfdaa8ae7cb14b4383657caab0b3e8a0aa9ae8e04b044854c8dfce2\"\ndependencies = [\n \"crossbeam-deque\",\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"redox_syscall\"\nversion = \"0.5.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9b6dfecf2c74bce2466cabf93f6664d6998a69eb21e39f4207930065b27b771f\"\ndependencies = [\n \"bitflags 2.6.0\",\n]\n\n[[package]]\nname = \"regex\"\nversion = \"1.11.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b544ef1b4eac5dc2db33ea63606ae9ffcfac26c1416a2806ae0bf5f56b201191\"\ndependencies = [\n \"aho-corasick\",\n \"memchr\",\n \"regex-automata\",\n \"regex-syntax\",\n]\n\n[[package]]\nname = \"regex-automata\"\nversion = \"0.4.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"809e8dc61f6de73b46c85f4c96486310fe304c434cfa43669d7b40f711150908\"\ndependencies = [\n \"aho-corasick\",\n \"memchr\",\n \"regex-syntax\",\n]\n\n[[package]]\nname = \"regex-syntax\"\nversion = \"0.8.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2b15c43186be67a4fd63bee50d0303afffcef381492ebe2c5d87f324e1b8815c\"\n\n[[package]]\nname = \"reqwest\"\nversion = \"0.12.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a77c62af46e79de0a562e1a9849205ffcb7fc1238876e9bd743357570e04046f\"\ndependencies = [\n \"base64\",\n \"bytes\",\n \"encoding_rs\",\n \"futures-channel\",\n \"futures-core\",\n \"futures-util\",\n \"h2\",\n \"http\",\n \"http-body\",\n \"http-body-util\",\n \"hyper\",\n \"hyper-rustls\",\n \"hyper-tls\",\n \"hyper-util\",\n \"ipnet\",\n \"js-sys\",\n \"log\",\n \"mime\",\n \"native-tls\",\n \"once_cell\",\n \"percent-encoding\",\n \"pin-project-lite\",\n \"quinn\",\n \"rustls\",\n \"rustls-pemfile\",\n \"rustls-pki-types\",\n \"serde\",\n \"serde_json\",\n \"serde_urlencoded\",\n \"sync_wrapper\",\n \"system-configuration\",\n \"tokio\",\n \"tokio-native-tls\",\n \"tokio-rustls\",\n \"tower-service\",\n \"url\",\n \"wasm-bindgen\",\n \"wasm-bindgen-futures\",\n \"web-sys\",\n \"webpki-roots\",\n \"windows-registry\",\n]\n\n[[package]]\nname = \"ring\"\nversion = \"0.17.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c17fa4cb658e3583423e915b9f3acc01cceaee1860e33d59ebae66adc3a2dc0d\"\ndependencies = [\n \"cc\",\n \"cfg-if\",\n \"getrandom\",\n \"libc\",\n \"spin\",\n \"untrusted\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"rusqlite\"\nversion = \"0.32.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7753b721174eb8ff87a9a0e799e2d7bc3749323e773db92e0984debb00019d6e\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"fallible-iterator\",\n \"fallible-streaming-iterator\",\n \"hashlink\",\n \"libsqlite3-sys\",\n \"smallvec\",\n]\n\n[[package]]\nname = \"rustc-demangle\"\nversion = \"0.1.24\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"719b953e2095829ee67db738b3bfa9fa368c94900df327b3f07fe6e794d2fe1f\"\n\n[[package]]\nname = \"rustc-hash\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"08d43f7aa6b08d49f382cde6a7982047c3426db949b1424bc4b7ec9ae12c6ce2\"\n\n[[package]]\nname = \"rustc-hash\"\nversion = \"2.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"583034fd73374156e66797ed8e5b0d5690409c9226b22d87cb7f19821c05d152\"\n\n[[package]]\nname = \"rustix\"\nversion = \"0.38.41\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d7f649912bc1495e167a6edee79151c84b1bad49748cb4f1f1167f459f6224f6\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"errno\",\n \"libc\",\n \"linux-raw-sys\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"rustls\"\nversion = \"0.23.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9c9cc1d47e243d655ace55ed38201c19ae02c148ae56412ab8750e8f0166ab7f\"\ndependencies = [\n \"aws-lc-rs\",\n \"once_cell\",\n \"ring\",\n \"rustls-pki-types\",\n \"rustls-webpki\",\n \"subtle\",\n \"zeroize\",\n]\n\n[[package]]\nname = \"rustls-ffi\"\nversion = \"0.14.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c916a3be537e52de0f3e311048dd1cfbdb2972048b1417d6088826d7d1477ec2\"\ndependencies = [\n \"libc\",\n \"log\",\n \"rustls\",\n \"rustls-pemfile\",\n \"rustls-pki-types\",\n \"rustls-platform-verifier\",\n \"rustls-webpki\",\n]\n\n[[package]]\nname = \"rustls-native-certs\"\nversion = \"0.7.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e5bfb394eeed242e909609f56089eecfe5fda225042e8b171791b9c95f5931e5\"\ndependencies = [\n \"openssl-probe\",\n \"rustls-pemfile\",\n \"rustls-pki-types\",\n \"schannel\",\n \"security-framework\",\n]\n\n[[package]]\nname = \"rustls-pemfile\"\nversion = \"2.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dce314e5fee3f39953d46bb63bb8a46d40c2f8fb7cc5a3b6cab2bde9721d6e50\"\ndependencies = [\n \"rustls-pki-types\",\n]\n\n[[package]]\nname = \"rustls-pki-types\"\nversion = \"1.10.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"16f1201b3c9a7ee8039bcadc17b7e605e2945b27eee7631788c1bd2b0643674b\"\ndependencies = [\n \"web-time\",\n]\n\n[[package]]\nname = \"rustls-platform-verifier\"\nversion = \"0.3.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"afbb878bdfdf63a336a5e63561b1835e7a8c91524f51621db870169eac84b490\"\ndependencies = [\n \"core-foundation\",\n \"core-foundation-sys\",\n \"jni\",\n \"log\",\n \"once_cell\",\n \"rustls\",\n \"rustls-native-certs\",\n \"rustls-platform-verifier-android\",\n \"rustls-webpki\",\n \"security-framework\",\n \"security-framework-sys\",\n \"webpki-roots\",\n \"winapi\",\n]\n\n[[package]]\nname = \"rustls-platform-verifier-android\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f87165f0995f63a9fbeea62b64d10b4d9d8e78ec6d7d51fb2125fda7bb36788f\"\n\n[[package]]\nname = \"rustls-webpki\"\nversion = \"0.102.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"64ca1bc8749bd4cf37b5ce386cc146580777b4e8572c7b97baf22c83f444bee9\"\ndependencies = [\n \"aws-lc-rs\",\n \"ring\",\n \"rustls-pki-types\",\n \"untrusted\",\n]\n\n[[package]]\nname = \"rustversion\"\nversion = \"1.0.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0e819f2bc632f285be6d7cd36e25940d45b2391dd6d9b939e79de557f7014248\"\n\n[[package]]\nname = \"ryu\"\nversion = \"1.0.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f3cb5ba0dc43242ce17de99c180e96db90b235b8a9fdc9543c96d2209116bd9f\"\n\n[[package]]\nname = \"same-file\"\nversion = \"1.0.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"93fc1dc3aaa9bfed95e02e6eadabb4baf7e3078b0bd1b4d7b6b0b68378900502\"\ndependencies = [\n \"winapi-util\",\n]\n\n[[package]]\nname = \"scc\"\nversion = \"2.2.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"66b202022bb57c049555430e11fc22fea12909276a80a4c3d368da36ac1d88ed\"\ndependencies = [\n \"sdd\",\n]\n\n[[package]]\nname = \"schannel\"\nversion = \"0.1.27\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1f29ebaa345f945cec9fbbc532eb307f0fdad8161f281b6369539c8d84876b3d\"\ndependencies = [\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"scopeguard\"\nversion = \"1.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"94143f37725109f92c262ed2cf5e59bce7498c01bcc1502d7b9afe439a4e9f49\"\n\n[[package]]\nname = \"sdd\"\nversion = \"3.0.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"49c1eeaf4b6a87c7479688c6d52b9f1153cedd3c489300564f932b065c6eab95\"\n\n[[package]]\nname = \"security-framework\"\nversion = \"2.11.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"897b2245f0b511c87893af39b033e5ca9cce68824c4d7e7630b5a1d339658d02\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"core-foundation\",\n \"core-foundation-sys\",\n \"libc\",\n \"num-bigint\",\n \"security-framework-sys\",\n]\n\n[[package]]\nname = \"security-framework-sys\"\nversion = \"2.12.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fa39c7303dc58b5543c94d22c1766b0d31f2ee58306363ea622b10bbc075eaa2\"\ndependencies = [\n \"core-foundation-sys\",\n \"libc\",\n]\n\n[[package]]\nname = \"serde\"\nversion = \"1.0.215\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6513c1ad0b11a9376da888e3e0baa0077f1aed55c17f50e7b2397136129fb88f\"\ndependencies = [\n \"serde_derive\",\n]\n\n[[package]]\nname = \"serde_derive\"\nversion = \"1.0.215\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ad1e866f866923f252f05c889987993144fb74e722403468a4ebd70c3cd756c0\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.89\",\n]\n\n[[package]]\nname = \"serde_json\"\nversion = \"1.0.133\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c7fceb2473b9166b2294ef05efcb65a3db80803f0b03ef86a5fc88a2b85ee377\"\ndependencies = [\n \"itoa\",\n \"memchr\",\n \"ryu\",\n \"serde\",\n]\n\n[[package]]\nname = \"serde_spanned\"\nversion = \"0.6.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"87607cb1398ed59d48732e575a4c28a7a8ebf2454b964fe3f224f2afc07909e1\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"serde_urlencoded\"\nversion = \"0.7.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d3491c14715ca2294c4d6a88f15e84739788c1d030eed8c110436aafdaa2f3fd\"\ndependencies = [\n \"form_urlencoded\",\n \"itoa\",\n \"ryu\",\n \"serde\",\n]\n\n[[package]]\nname = \"serial_test\"\nversion = \"3.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1b258109f244e1d6891bf1053a55d63a5cd4f8f4c30cf9a1280989f80e7a1fa9\"\ndependencies = [\n \"futures\",\n \"log\",\n \"once_cell\",\n \"parking_lot\",\n \"scc\",\n \"serial_test_derive\",\n]\n\n[[package]]\nname = \"serial_test_derive\"\nversion = \"3.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5d69265a08751de7844521fd15003ae0a888e035773ba05695c5c759a6f89eef\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.89\",\n]\n\n[[package]]\nname = \"sha1\"\nversion = \"0.10.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e3bf829a2d51ab4a5ddf1352d8470c140cadc8301b2ae1789db023f01cedd6ba\"\ndependencies = [\n \"cfg-if\",\n \"cpufeatures\",\n \"digest\",\n \"sha1-asm\",\n]\n\n[[package]]\nname = \"sha1-asm\"\nversion = \"0.5.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"286acebaf8b67c1130aedffad26f594eff0c1292389158135327d2e23aed582b\"\ndependencies = [\n \"cc\",\n]\n\n[[package]]\nname = \"sha1_smol\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bbfa15b3dddfee50a0fff136974b3e1bde555604ba463834a7eb7deb6417705d\"\n\n[[package]]\nname = \"sharded-slab\"\nversion = \"0.1.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f40ca3c46823713e0d4209592e8d6e826aa57e928f09752619fc696c499637f6\"\ndependencies = [\n \"lazy_static\",\n]\n\n[[package]]\nname = \"shell-words\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"24188a676b6ae68c3b2cb3a01be17fbf7240ce009799bb56d5b1409051e78fde\"\n\n[[package]]\nname = \"shlex\"\nversion = \"1.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0fda2ff0d084019ba4d7c6f371c95d8fd75ce3524c3cb8fb653a3023f6323e64\"\n\n[[package]]\nname = \"signal-hook\"\nversion = \"0.3.17\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8621587d4798caf8eb44879d42e56b9a93ea5dcd315a6487c357130095b62801\"\ndependencies = [\n \"libc\",\n \"signal-hook-registry\",\n]\n\n[[package]]\nname = \"signal-hook-mio\"\nversion = \"0.2.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"34db1a06d485c9142248b7a054f034b349b212551f3dfd19c94d45a754a217cd\"\ndependencies = [\n \"libc\",\n \"mio 0.8.11\",\n \"signal-hook\",\n]\n\n[[package]]\nname = \"signal-hook-registry\"\nversion = \"1.4.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a9e9e0b4211b72e7b8b6e85c807d36c212bdb33ea8587f7569562a84df5465b1\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"simd-adler32\"\nversion = \"0.3.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d66dc143e6b11c1eddc06d5c423cfc97062865baf299914ab64caa38182078fe\"\n\n[[package]]\nname = \"similar\"\nversion = \"2.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1de1d4f81173b03af4c0cbed3c898f6bff5b870e4a7f5d6f4057d62a7a4b686e\"\n\n[[package]]\nname = \"slab\"\nversion = \"0.4.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8f92a496fb766b417c996b9c5e57daf2f7ad3b0bebe1ccfca4856390e3d3bb67\"\ndependencies = [\n \"autocfg\",\n]\n\n[[package]]\nname = \"smallvec\"\nversion = \"1.13.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3c5e1a9a646d36c3599cd173a41282daf47c44583ad367b8e6837255952e5c67\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"socket2\"\nversion = \"0.5.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ce305eb0b4296696835b71df73eb912e0f1ffd2556a501fcede6e0c50349191c\"\ndependencies = [\n \"libc\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"spin\"\nversion = \"0.9.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6980e8d7511241f8acf4aebddbb1ff938df5eebe98691418c4468d0b72a96a67\"\n\n[[package]]\nname = \"stability\"\nversion = \"0.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d904e7009df136af5297832a3ace3370cd14ff1546a232f4f185036c2736fcac\"\ndependencies = [\n \"quote\",\n \"syn 2.0.89\",\n]\n\n[[package]]\nname = \"stable_deref_trait\"\nversion = \"1.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a8f112729512f8e442d81f95a8a7ddf2b7c6b8a1a6f509a95864142b30cab2d3\"\n\n[[package]]\nname = \"static_assertions\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a2eb9349b6444b326872e140eb1cf5e7c522154d69e7a0ffb0fb81c06b37543f\"\n\n[[package]]\nname = \"strsim\"\nversion = \"0.11.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7da8b5736845d9f2fcb837ea5d9e2628564b3b043a70948a3f0b778838c5fb4f\"\n\n[[package]]\nname = \"strum\"\nversion = \"0.26.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8fec0f0aef304996cf250b31b5a10dee7980c85da9d759361292b8bca5a18f06\"\ndependencies = [\n \"strum_macros\",\n]\n\n[[package]]\nname = \"strum_macros\"\nversion = \"0.26.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4c6bee85a5a24955dc440386795aa378cd9cf82acd5f764469152d2270e581be\"\ndependencies = [\n \"heck\",\n \"proc-macro2\",\n \"quote\",\n \"rustversion\",\n \"syn 2.0.89\",\n]\n\n[[package]]\nname = \"subtle\"\nversion = \"2.6.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"13c2bddecc57b384dee18652358fb23172facb8a2c51ccc10d74c157bdea3292\"\n\n[[package]]\nname = \"symlink\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a7973cce6668464ea31f176d85b13c7ab3bba2cb3b77a2ed26abd7801688010a\"\n\n[[package]]\nname = \"syn\"\nversion = \"1.0.109\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"72b64191b275b66ffe2469e8af2c1cfe3bafa67b529ead792a6d0160888b4237\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"syn\"\nversion = \"2.0.89\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"44d46482f1c1c87acd84dea20c1bf5ebff4c757009ed6bf19cfd36fb10e92c4e\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"sync_wrapper\"\nversion = \"1.0.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0bf256ce5efdfa370213c1dabab5935a12e49f2c58d15e9eac2870d3b4f27263\"\ndependencies = [\n \"futures-core\",\n]\n\n[[package]]\nname = \"synstructure\"\nversion = \"0.13.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c8af7666ab7b6390ab78131fb5b0fce11d6b7a6951602017c35fa82800708971\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.89\",\n]\n\n[[package]]\nname = \"sysinfo\"\nversion = \"0.31.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"355dbe4f8799b304b05e1b0f05fc59b2a18d36645cf169607da45bde2f69a1be\"\ndependencies = [\n \"core-foundation-sys\",\n \"libc\",\n \"memchr\",\n \"ntapi\",\n \"windows 0.57.0\",\n]\n\n[[package]]\nname = \"system-configuration\"\nversion = \"0.6.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3c879d448e9d986b661742763247d3693ed13609438cf3d006f51f5368a5ba6b\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"core-foundation\",\n \"system-configuration-sys\",\n]\n\n[[package]]\nname = \"system-configuration-sys\"\nversion = \"0.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8e1d1b10ced5ca923a1fcb8d03e96b8d3268065d724548c0211415ff6ac6bac4\"\ndependencies = [\n \"core-foundation-sys\",\n \"libc\",\n]\n\n[[package]]\nname = \"tar\"\nversion = \"0.4.43\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c65998313f8e17d0d553d28f91a0df93e4dbbbf770279c7bc21ca0f09ea1a1f6\"\ndependencies = [\n \"filetime\",\n \"libc\",\n \"xattr\",\n]\n\n[[package]]\nname = \"target-triple\"\nversion = \"0.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"42a4d50cdb458045afc8131fd91b64904da29548bcb63c7236e0844936c13078\"\n\n[[package]]\nname = \"tempfile\"\nversion = \"3.14.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"28cce251fcbc87fac86a866eeb0d6c2d536fc16d06f184bb61aeae11aa4cee0c\"\ndependencies = [\n \"cfg-if\",\n \"fastrand\",\n \"once_cell\",\n \"rustix\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"termcolor\"\nversion = \"1.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"06794f8f6c5c898b3275aebefa6b8a1cb24cd2c6c79397ab15774837a0bc5755\"\ndependencies = [\n \"winapi-util\",\n]\n\n[[package]]\nname = \"terminal_size\"\nversion = \"0.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"21bebf2b7c9e0a515f6e0f8c51dc0f8e4696391e6f1ff30379559f8365fb0df7\"\ndependencies = [\n \"rustix\",\n \"windows-sys 0.48.0\",\n]\n\n[[package]]\nname = \"termtree\"\nversion = \"0.5.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8f50febec83f5ee1df3015341d8bd429f2d1cc62bcba7ea2076759d315084683\"\n\n[[package]]\nname = \"thiserror\"\nversion = \"1.0.69\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b6aaf5339b578ea85b50e080feb250a3e8ae8cfcdff9a461c9ec2904bc923f52\"\ndependencies = [\n \"thiserror-impl 1.0.69\",\n]\n\n[[package]]\nname = \"thiserror\"\nversion = \"2.0.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c006c85c7651b3cf2ada4584faa36773bd07bac24acfb39f3c431b36d7e667aa\"\ndependencies = [\n \"thiserror-impl 2.0.3\",\n]\n\n[[package]]\nname = \"thiserror-impl\"\nversion = \"1.0.69\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4fee6c4efc90059e10f81e6d42c60a18f76588c3d74cb83a0b242a2b6c7504c1\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.89\",\n]\n\n[[package]]\nname = \"thiserror-impl\"\nversion = \"2.0.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f077553d607adc1caf65430528a576c757a71ed73944b66ebb58ef2bbd243568\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.89\",\n]\n\n[[package]]\nname = \"thread_local\"\nversion = \"1.1.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8b9ef9bad013ada3808854ceac7b46812a6465ba368859a37e2100283d2d719c\"\ndependencies = [\n \"cfg-if\",\n \"once_cell\",\n]\n\n[[package]]\nname = \"time\"\nversion = \"0.3.36\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5dfd88e563464686c916c7e46e623e520ddc6d79fa6641390f2e3fa86e83e885\"\ndependencies = [\n \"deranged\",\n \"itoa\",\n \"libc\",\n \"num-conv\",\n \"num_threads\",\n \"powerfmt\",\n \"serde\",\n \"time-core\",\n \"time-macros\",\n]\n\n[[package]]\nname = \"time-core\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ef927ca75afb808a4d64dd374f00a2adf8d0fcff8e7b184af886c3c87ec4a3f3\"\n\n[[package]]\nname = \"time-macros\"\nversion = \"0.2.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3f252a68540fde3a3877aeea552b832b40ab9a69e318efd078774a01ddee1ccf\"\ndependencies = [\n \"num-conv\",\n \"time-core\",\n]\n\n[[package]]\nname = \"tinystr\"\nversion = \"0.7.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9117f5d4db391c1cf6927e7bea3db74b9a1c1add8f7eda9ffd5364f40f57b82f\"\ndependencies = [\n \"displaydoc\",\n \"zerovec\",\n]\n\n[[package]]\nname = \"tinytemplate\"\nversion = \"1.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"be4d6b5f19ff7664e8c98d03e2139cb510db9b0a60b55f8e8709b689d939b6bc\"\ndependencies = [\n \"serde\",\n \"serde_json\",\n]\n\n[[package]]\nname = \"tinyvec\"\nversion = \"1.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"445e881f4f6d382d5f27c034e25eb92edd7c784ceab92a0937db7f2e9471b938\"\ndependencies = [\n \"tinyvec_macros\",\n]\n\n[[package]]\nname = \"tinyvec_macros\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1f3ccbac311fea05f86f61904b462b55fb3df8837a366dfc601a0161d0532f20\"\n\n[[package]]\nname = \"tokio\"\nversion = \"1.41.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"22cfb5bee7a6a52939ca9224d6ac897bb669134078daa8735560897f69de4d33\"\ndependencies = [\n \"backtrace\",\n \"bytes\",\n \"libc\",\n \"mio 1.0.2\",\n \"pin-project-lite\",\n \"socket2\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"tokio-native-tls\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bbae76ab933c85776efabc971569dd6119c580d8f5d448769dec1764bf796ef2\"\ndependencies = [\n \"native-tls\",\n \"tokio\",\n]\n\n[[package]]\nname = \"tokio-rustls\"\nversion = \"0.26.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0c7bc40d0e5a97695bb96e27995cd3a08538541b0a846f65bba7a359f36700d4\"\ndependencies = [\n \"rustls\",\n \"rustls-pki-types\",\n \"tokio\",\n]\n\n[[package]]\nname = \"tokio-util\"\nversion = \"0.7.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"61e7c3654c13bcd040d4a03abee2c75b1d14a37b423cf5a813ceae1cc903ec6a\"\ndependencies = [\n \"bytes\",\n \"futures-core\",\n \"futures-sink\",\n \"pin-project-lite\",\n \"tokio\",\n]\n\n[[package]]\nname = \"toml\"\nversion = \"0.8.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a1ed1f98e3fdc28d6d910e6737ae6ab1a93bf1985935a1193e68f93eeb68d24e\"\ndependencies = [\n \"serde\",\n \"serde_spanned\",\n \"toml_datetime\",\n \"toml_edit\",\n]\n\n[[package]]\nname = \"toml_datetime\"\nversion = \"0.6.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0dd7358ecb8fc2f8d014bf86f6f638ce72ba252a2c3a2572f2a795f1d23efb41\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"toml_edit\"\nversion = \"0.22.22\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4ae48d6208a266e853d946088ed816055e556cc6028c5e8e2b84d9fa5dd7c7f5\"\ndependencies = [\n \"indexmap\",\n \"serde\",\n \"serde_spanned\",\n \"toml_datetime\",\n \"winnow\",\n]\n\n[[package]]\nname = \"tower-service\"\nversion = \"0.3.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8df9b6e13f2d32c91b9bd719c00d1958837bc7dec474d94952798cc8e69eeec3\"\n\n[[package]]\nname = \"tracing\"\nversion = \"0.1.40\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c3523ab5a71916ccf420eebdf5521fcef02141234bbc0b8a49f2fdc4544364ef\"\ndependencies = [\n \"pin-project-lite\",\n \"tracing-attributes\",\n \"tracing-core\",\n]\n\n[[package]]\nname = \"tracing-attributes\"\nversion = \"0.1.27\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"34704c8d6ebcbc939824180af020566b01a7c01f80641264eba0999f6c2b6be7\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.89\",\n]\n\n[[package]]\nname = \"tracing-core\"\nversion = \"0.1.32\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c06d3da6113f116aaee68e4d601191614c9053067f9ab7f6edbcb161237daa54\"\ndependencies = [\n \"once_cell\",\n \"valuable\",\n]\n\n[[package]]\nname = \"tracing-forest\"\nversion = \"0.1.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ee40835db14ddd1e3ba414292272eddde9dad04d3d4b65509656414d1c42592f\"\ndependencies = [\n \"serde\",\n \"smallvec\",\n \"thiserror 1.0.69\",\n \"tracing\",\n \"tracing-subscriber\",\n]\n\n[[package]]\nname = \"tracing-log\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ee855f1f400bd0e5c02d150ae5de3840039a3f54b025156404e34c23c03f47c3\"\ndependencies = [\n \"log\",\n \"once_cell\",\n \"tracing-core\",\n]\n\n[[package]]\nname = \"tracing-subscriber\"\nversion = \"0.3.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ad0f048c97dbd9faa9b7df56362b8ebcaa52adb06b498c050d2f4e32f90a7a8b\"\ndependencies = [\n \"nu-ansi-term\",\n \"sharded-slab\",\n \"smallvec\",\n \"thread_local\",\n \"tracing-core\",\n \"tracing-log\",\n]\n\n[[package]]\nname = \"try-lock\"\nversion = \"0.2.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e421abadd41a4225275504ea4d6566923418b7f05506fbc9c0fe86ba7396114b\"\n\n[[package]]\nname = \"trybuild\"\nversion = \"1.0.101\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8dcd332a5496c026f1e14b7f3d2b7bd98e509660c04239c58b0ba38a12daded4\"\ndependencies = [\n \"glob\",\n \"serde\",\n \"serde_derive\",\n \"serde_json\",\n \"target-triple\",\n \"termcolor\",\n \"toml\",\n]\n\n[[package]]\nname = \"tui-react\"\nversion = \"0.23.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2914a701e00f3311d869175d83dbb7da374ba9a22a6876f3aa6af2673d3accc6\"\ndependencies = [\n \"log\",\n \"ratatui\",\n \"unicode-segmentation\",\n \"unicode-width\",\n]\n\n[[package]]\nname = \"typenum\"\nversion = \"1.17.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"42ff0bf0c66b8238c6f3b578df37d0b7848e55df8577b3f74f92a69acceeb825\"\n\n[[package]]\nname = \"uluru\"\nversion = \"3.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7c8a2469e56e6e5095c82ccd3afb98dad95f7af7929aab6d8ba8d6e0f73657da\"\ndependencies = [\n \"arrayvec\",\n]\n\n[[package]]\nname = \"unicode-bom\"\nversion = \"2.0.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7eec5d1121208364f6793f7d2e222bf75a915c19557537745b195b253dd64217\"\n\n[[package]]\nname = \"unicode-ident\"\nversion = \"1.0.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"adb9e6ca4f869e1180728b7950e35922a7fc6397f7b641499e8f3ef06e50dc83\"\n\n[[package]]\nname = \"unicode-normalization\"\nversion = \"0.1.24\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5033c97c4262335cded6d6fc3e5c18ab755e1a3dc96376350f3d8e9f009ad956\"\ndependencies = [\n \"tinyvec\",\n]\n\n[[package]]\nname = \"unicode-segmentation\"\nversion = \"1.12.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f6ccf251212114b54433ec949fd6a7841275f9ada20dddd2f29e9ceea4501493\"\n\n[[package]]\nname = \"unicode-truncate\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b3644627a5af5fa321c95b9b235a72fd24cd29c648c2c379431e6628655627bf\"\ndependencies = [\n \"itertools 0.13.0\",\n \"unicode-segmentation\",\n \"unicode-width\",\n]\n\n[[package]]\nname = \"unicode-width\"\nversion = \"0.1.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7dd6e30e90baa6f72411720665d41d89b9a3d039dc45b8faea1ddd07f617f6af\"\n\n[[package]]\nname = \"untrusted\"\nversion = \"0.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8ecb6da28b8a351d773b68d5825ac39017e680750f980f3a1a85cd8dd28a47c1\"\n\n[[package]]\nname = \"url\"\nversion = \"2.5.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"32f8b686cadd1473f4bd0117a5d28d36b1ade384ea9b5069a1c40aefed7fda60\"\ndependencies = [\n \"form_urlencoded\",\n \"idna\",\n \"percent-encoding\",\n]\n\n[[package]]\nname = \"utf16_iter\"\nversion = \"1.0.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c8232dd3cdaed5356e0f716d285e4b40b932ac434100fe9b7e0e8e935b9e6246\"\n\n[[package]]\nname = \"utf8_iter\"\nversion = \"1.0.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b6c140620e7ffbb22c2dee59cafe6084a59b5ffc27a8859a5f0d494b5d52b6be\"\n\n[[package]]\nname = \"utf8parse\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"06abde3611657adf66d383f00b093d7faecc7fa57071cce2578660c9f1010821\"\n\n[[package]]\nname = \"valuable\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"830b7e5d4d90034032940e4ace0d9a9a057e7a45cd94e6c007832e39edb82f6d\"\n\n[[package]]\nname = \"value-bag\"\nversion = \"1.10.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3ef4c4aa54d5d05a279399bfa921ec387b7aba77caf7a682ae8d86785b8fdad2\"\n\n[[package]]\nname = \"vcpkg\"\nversion = \"0.2.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"accd4ea62f7bb7a82fe23066fb0957d48ef677f6eeb8215f372f52e48bb32426\"\n\n[[package]]\nname = \"version_check\"\nversion = \"0.9.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0b928f33d975fc6ad9f86c8f283853ad26bdd5b10b7f1542aa2fa15e2289105a\"\n\n[[package]]\nname = \"walkdir\"\nversion = \"2.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"29790946404f91d9c5d06f9874efddea1dc06c5efe94541a7d6863108e3a5e4b\"\ndependencies = [\n \"same-file\",\n \"winapi-util\",\n]\n\n[[package]]\nname = \"want\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bfa7760aed19e106de2c7c0b581b509f2f25d3dacaf737cb82ac61bc6d760b0e\"\ndependencies = [\n \"try-lock\",\n]\n\n[[package]]\nname = \"wasi\"\nversion = \"0.11.0+wasi-snapshot-preview1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9c8d87e72b64a3b4db28d11ce29237c246188f4f51057d65a7eab63b7987e423\"\n\n[[package]]\nname = \"wasm-bindgen\"\nversion = \"0.2.95\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"128d1e363af62632b8eb57219c8fd7877144af57558fb2ef0368d0087bddeb2e\"\ndependencies = [\n \"cfg-if\",\n \"once_cell\",\n \"wasm-bindgen-macro\",\n]\n\n[[package]]\nname = \"wasm-bindgen-backend\"\nversion = \"0.2.95\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cb6dd4d3ca0ddffd1dd1c9c04f94b868c37ff5fac97c30b97cff2d74fce3a358\"\ndependencies = [\n \"bumpalo\",\n \"log\",\n \"once_cell\",\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.89\",\n \"wasm-bindgen-shared\",\n]\n\n[[package]]\nname = \"wasm-bindgen-futures\"\nversion = \"0.4.45\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cc7ec4f8827a71586374db3e87abdb5a2bb3a15afed140221307c3ec06b1f63b\"\ndependencies = [\n \"cfg-if\",\n \"js-sys\",\n \"wasm-bindgen\",\n \"web-sys\",\n]\n\n[[package]]\nname = \"wasm-bindgen-macro\"\nversion = \"0.2.95\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e79384be7f8f5a9dd5d7167216f022090cf1f9ec128e6e6a482a2cb5c5422c56\"\ndependencies = [\n \"quote\",\n \"wasm-bindgen-macro-support\",\n]\n\n[[package]]\nname = \"wasm-bindgen-macro-support\"\nversion = \"0.2.95\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"26c6ab57572f7a24a4985830b120de1594465e5d500f24afe89e16b4e833ef68\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.89\",\n \"wasm-bindgen-backend\",\n \"wasm-bindgen-shared\",\n]\n\n[[package]]\nname = \"wasm-bindgen-shared\"\nversion = \"0.2.95\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"65fc09f10666a9f147042251e0dda9c18f166ff7de300607007e96bdebc1068d\"\n\n[[package]]\nname = \"web-sys\"\nversion = \"0.3.72\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f6488b90108c040df0fe62fa815cbdee25124641df01814dd7282749234c6112\"\ndependencies = [\n \"js-sys\",\n \"wasm-bindgen\",\n]\n\n[[package]]\nname = \"web-time\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5a6580f308b1fad9207618087a65c04e7a10bc77e02c8e84e9b00dd4b12fa0bb\"\ndependencies = [\n \"js-sys\",\n \"wasm-bindgen\",\n]\n\n[[package]]\nname = \"webpki-roots\"\nversion = \"0.26.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5d642ff16b7e79272ae451b7322067cdc17cadf68c23264be9d94a32319efe7e\"\ndependencies = [\n \"rustls-pki-types\",\n]\n\n[[package]]\nname = \"which\"\nversion = \"4.4.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"87ba24419a2078cd2b0f2ede2691b6c66d8e47836da3b6db8265ebad47afbfc7\"\ndependencies = [\n \"either\",\n \"home\",\n \"once_cell\",\n \"rustix\",\n]\n\n[[package]]\nname = \"winapi\"\nversion = \"0.3.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5c839a674fcd7a98952e593242ea400abe93992746761e38641405d28b00f419\"\ndependencies = [\n \"winapi-i686-pc-windows-gnu\",\n \"winapi-x86_64-pc-windows-gnu\",\n]\n\n[[package]]\nname = \"winapi-i686-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ac3b87c63620426dd9b991e5ce0329eff545bccbbb34f3be09ff6fb6ab51b7b6\"\n\n[[package]]\nname = \"winapi-util\"\nversion = \"0.1.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cf221c93e13a30d793f7645a0e7762c55d169dbb0a49671918a2319d289b10bb\"\ndependencies = [\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"winapi-x86_64-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"712e227841d057c1ee1cd2fb22fa7e5a5461ae8e48fa2ca79ec42cfc1931183f\"\n\n[[package]]\nname = \"windows\"\nversion = \"0.44.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9e745dab35a0c4c77aa3ce42d595e13d2003d6902d6b08c9ef5fc326d08da12b\"\ndependencies = [\n \"windows-targets 0.42.2\",\n]\n\n[[package]]\nname = \"windows\"\nversion = \"0.57.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"12342cb4d8e3b046f3d80effd474a7a02447231330ef77d71daa6fbc40681143\"\ndependencies = [\n \"windows-core 0.57.0\",\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"windows\"\nversion = \"0.58.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dd04d41d93c4992d421894c18c8b43496aa748dd4c081bac0dc93eb0489272b6\"\ndependencies = [\n \"windows-core 0.58.0\",\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"windows-core\"\nversion = \"0.57.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d2ed2439a290666cd67ecce2b0ffaad89c2a56b976b736e6ece670297897832d\"\ndependencies = [\n \"windows-implement 0.57.0\",\n \"windows-interface 0.57.0\",\n \"windows-result 0.1.2\",\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"windows-core\"\nversion = \"0.58.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6ba6d44ec8c2591c134257ce647b7ea6b20335bf6379a27dac5f1641fcf59f99\"\ndependencies = [\n \"windows-implement 0.58.0\",\n \"windows-interface 0.58.0\",\n \"windows-result 0.2.0\",\n \"windows-strings\",\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"windows-implement\"\nversion = \"0.57.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9107ddc059d5b6fbfbffdfa7a7fe3e22a226def0b2608f72e9d552763d3e1ad7\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.89\",\n]\n\n[[package]]\nname = \"windows-implement\"\nversion = \"0.58.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2bbd5b46c938e506ecbce286b6628a02171d56153ba733b6c741fc627ec9579b\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.89\",\n]\n\n[[package]]\nname = \"windows-interface\"\nversion = \"0.57.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"29bee4b38ea3cde66011baa44dba677c432a78593e202392d1e9070cf2a7fca7\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.89\",\n]\n\n[[package]]\nname = \"windows-interface\"\nversion = \"0.58.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"053c4c462dc91d3b1504c6fe5a726dd15e216ba718e84a0e46a88fbe5ded3515\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.89\",\n]\n\n[[package]]\nname = \"windows-registry\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e400001bb720a623c1c69032f8e3e4cf09984deec740f007dd2b03ec864804b0\"\ndependencies = [\n \"windows-result 0.2.0\",\n \"windows-strings\",\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"windows-result\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5e383302e8ec8515204254685643de10811af0ed97ea37210dc26fb0032647f8\"\ndependencies = [\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"windows-result\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1d1043d8214f791817bab27572aaa8af63732e11bf84aa21a45a78d6c317ae0e\"\ndependencies = [\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"windows-strings\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4cd9b125c486025df0eabcb585e62173c6c9eddcec5d117d3b6e8c30e2ee4d10\"\ndependencies = [\n \"windows-result 0.2.0\",\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.48.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"677d2418bec65e3338edb076e806bc1ec15693c5d0104683f2efe857f61056a9\"\ndependencies = [\n \"windows-targets 0.48.5\",\n]\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.52.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"282be5f36a8ce781fad8c8ae18fa3f9beff57ec1b52cb3de0789201425d9a33d\"\ndependencies = [\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.59.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1e38bc4d79ed67fd075bcc251a1c39b32a1776bbe92e5bef1f0bf1f8c531853b\"\ndependencies = [\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"windows-targets\"\nversion = \"0.42.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8e5180c00cd44c9b1c88adb3693291f1cd93605ded80c250a75d472756b4d071\"\ndependencies = [\n \"windows_aarch64_gnullvm 0.42.2\",\n \"windows_aarch64_msvc 0.42.2\",\n \"windows_i686_gnu 0.42.2\",\n \"windows_i686_msvc 0.42.2\",\n \"windows_x86_64_gnu 0.42.2\",\n \"windows_x86_64_gnullvm 0.42.2\",\n \"windows_x86_64_msvc 0.42.2\",\n]\n\n[[package]]\nname = \"windows-targets\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9a2fa6e2155d7247be68c096456083145c183cbbbc2764150dda45a87197940c\"\ndependencies = [\n \"windows_aarch64_gnullvm 0.48.5\",\n \"windows_aarch64_msvc 0.48.5\",\n \"windows_i686_gnu 0.48.5\",\n \"windows_i686_msvc 0.48.5\",\n \"windows_x86_64_gnu 0.48.5\",\n \"windows_x86_64_gnullvm 0.48.5\",\n \"windows_x86_64_msvc 0.48.5\",\n]\n\n[[package]]\nname = \"windows-targets\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9b724f72796e036ab90c1021d4780d4d3d648aca59e491e6b98e725b84e99973\"\ndependencies = [\n \"windows_aarch64_gnullvm 0.52.6\",\n \"windows_aarch64_msvc 0.52.6\",\n \"windows_i686_gnu 0.52.6\",\n \"windows_i686_gnullvm\",\n \"windows_i686_msvc 0.52.6\",\n \"windows_x86_64_gnu 0.52.6\",\n \"windows_x86_64_gnullvm 0.52.6\",\n \"windows_x86_64_msvc 0.52.6\",\n]\n\n[[package]]\nname = \"windows_aarch64_gnullvm\"\nversion = \"0.42.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"597a5118570b68bc08d8d59125332c54f1ba9d9adeedeef5b99b02ba2b0698f8\"\n\n[[package]]\nname = \"windows_aarch64_gnullvm\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2b38e32f0abccf9987a4e3079dfb67dcd799fb61361e53e2882c3cbaf0d905d8\"\n\n[[package]]\nname = \"windows_aarch64_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"32a4622180e7a0ec044bb555404c800bc9fd9ec262ec147edd5989ccd0c02cd3\"\n\n[[package]]\nname = \"windows_aarch64_msvc\"\nversion = \"0.42.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e08e8864a60f06ef0d0ff4ba04124db8b0fb3be5776a5cd47641e942e58c4d43\"\n\n[[package]]\nname = \"windows_aarch64_msvc\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dc35310971f3b2dbbf3f0690a219f40e2d9afcf64f9ab7cc1be722937c26b4bc\"\n\n[[package]]\nname = \"windows_aarch64_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"09ec2a7bb152e2252b53fa7803150007879548bc709c039df7627cabbd05d469\"\n\n[[package]]\nname = \"windows_i686_gnu\"\nversion = \"0.42.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c61d927d8da41da96a81f029489353e68739737d3beca43145c8afec9a31a84f\"\n\n[[package]]\nname = \"windows_i686_gnu\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a75915e7def60c94dcef72200b9a8e58e5091744960da64ec734a6c6e9b3743e\"\n\n[[package]]\nname = \"windows_i686_gnu\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8e9b5ad5ab802e97eb8e295ac6720e509ee4c243f69d781394014ebfe8bbfa0b\"\n\n[[package]]\nname = \"windows_i686_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0eee52d38c090b3caa76c563b86c3a4bd71ef1a819287c19d586d7334ae8ed66\"\n\n[[package]]\nname = \"windows_i686_msvc\"\nversion = \"0.42.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"44d840b6ec649f480a41c8d80f9c65108b92d89345dd94027bfe06ac444d1060\"\n\n[[package]]\nname = \"windows_i686_msvc\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8f55c233f70c4b27f66c523580f78f1004e8b5a8b659e05a4eb49d4166cca406\"\n\n[[package]]\nname = \"windows_i686_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"240948bc05c5e7c6dabba28bf89d89ffce3e303022809e73deaefe4f6ec56c66\"\n\n[[package]]\nname = \"windows_x86_64_gnu\"\nversion = \"0.42.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8de912b8b8feb55c064867cf047dda097f92d51efad5b491dfb98f6bbb70cb36\"\n\n[[package]]\nname = \"windows_x86_64_gnu\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"53d40abd2583d23e4718fddf1ebec84dbff8381c07cae67ff7768bbf19c6718e\"\n\n[[package]]\nname = \"windows_x86_64_gnu\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"147a5c80aabfbf0c7d901cb5895d1de30ef2907eb21fbbab29ca94c5b08b1a78\"\n\n[[package]]\nname = \"windows_x86_64_gnullvm\"\nversion = \"0.42.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"26d41b46a36d453748aedef1486d5c7a85db22e56aff34643984ea85514e94a3\"\n\n[[package]]\nname = \"windows_x86_64_gnullvm\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0b7b52767868a23d5bab768e390dc5f5c55825b6d30b86c844ff2dc7414044cc\"\n\n[[package]]\nname = \"windows_x86_64_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"24d5b23dc417412679681396f2b49f3de8c1473deb516bd34410872eff51ed0d\"\n\n[[package]]\nname = \"windows_x86_64_msvc\"\nversion = \"0.42.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9aec5da331524158c6d1a4ac0ab1541149c0b9505fde06423b02f5ef0106b9f0\"\n\n[[package]]\nname = \"windows_x86_64_msvc\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ed94fce61571a4006852b7389a063ab983c02eb1bb37b47f8272ce92d06d9538\"\n\n[[package]]\nname = \"windows_x86_64_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"589f6da84c646204747d1270a2a5661ea66ed1cced2631d546fdfb155959f9ec\"\n\n[[package]]\nname = \"winnow\"\nversion = \"0.6.20\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"36c1fec1a2bb5866f07c25f68c26e565c4c200aebb96d7e55710c19d3e8ac49b\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"winreg\"\nversion = \"0.52.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a277a57398d4bfa075df44f501a17cfdf8542d224f0d36095a2adc7aee4ef0a5\"\ndependencies = [\n \"cfg-if\",\n \"windows-sys 0.48.0\",\n]\n\n[[package]]\nname = \"write16\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d1890f4022759daae28ed4fe62859b1236caebfc61ede2f63ed4e695f3f6d936\"\n\n[[package]]\nname = \"writeable\"\nversion = \"0.5.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1e9df38ee2d2c3c5948ea468a8406ff0db0b29ae1ffde1bcf20ef305bcc95c51\"\n\n[[package]]\nname = \"xattr\"\nversion = \"1.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8da84f1a25939b27f6820d92aed108f83ff920fdf11a7b19366c27c4cda81d4f\"\ndependencies = [\n \"libc\",\n \"linux-raw-sys\",\n \"rustix\",\n]\n\n[[package]]\nname = \"xz2\"\nversion = \"0.1.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"388c44dc09d76f1536602ead6d325eb532f5c122f17782bd57fb47baeeb767e2\"\ndependencies = [\n \"lzma-sys\",\n]\n\n[[package]]\nname = \"yansi\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cfe53a6657fd280eaa890a3bc59152892ffa3e30101319d168b781ed6529b049\"\n\n[[package]]\nname = \"yoke\"\nversion = \"0.7.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"120e6aef9aa629e3d4f52dc8cc43a015c7724194c97dfaf45180d2daf2b77f40\"\ndependencies = [\n \"serde\",\n \"stable_deref_trait\",\n \"yoke-derive\",\n \"zerofrom\",\n]\n\n[[package]]\nname = \"yoke-derive\"\nversion = \"0.7.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2380878cad4ac9aac1e2435f3eb4020e8374b5f13c296cb75b4620ff8e229154\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.89\",\n \"synstructure\",\n]\n\n[[package]]\nname = \"zerocopy\"\nversion = \"0.7.35\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1b9b4fd18abc82b8136838da5d50bae7bdea537c574d8dc1a34ed098d6c166f0\"\ndependencies = [\n \"byteorder\",\n \"zerocopy-derive\",\n]\n\n[[package]]\nname = \"zerocopy-derive\"\nversion = \"0.7.35\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fa4f8080344d4671fb4e831a13ad1e68092748387dfc4f55e356242fae12ce3e\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.89\",\n]\n\n[[package]]\nname = \"zerofrom\"\nversion = \"0.1.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cff3ee08c995dee1859d998dea82f7374f2826091dd9cd47def953cae446cd2e\"\ndependencies = [\n \"zerofrom-derive\",\n]\n\n[[package]]\nname = \"zerofrom-derive\"\nversion = \"0.1.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"595eed982f7d355beb85837f651fa22e90b3c044842dc7f2c2842c086f295808\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.89\",\n \"synstructure\",\n]\n\n[[package]]\nname = \"zeroize\"\nversion = \"1.8.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ced3678a2879b30306d323f4542626697a464a97c0a07c9aebf7ebca65cd4dde\"\n\n[[package]]\nname = \"zerovec\"\nversion = \"0.10.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"aa2b893d79df23bfb12d5461018d408ea19dfafe76c2c7ef6d4eba614f8ff079\"\ndependencies = [\n \"yoke\",\n \"zerofrom\",\n \"zerovec-derive\",\n]\n\n[[package]]\nname = \"zerovec-derive\"\nversion = \"0.10.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6eafa6dfb17584ea3e2bd6e76e0cc15ad7af12b09abdd1ca55961bed9b1063c6\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.89\",\n]\n\n[[package]]\nname = \"zip\"\nversion = \"2.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"99d52293fc86ea7cf13971b3bb81eb21683636e7ae24c729cdaf1b7c4157a352\"\ndependencies = [\n \"arbitrary\",\n \"crc32fast\",\n \"crossbeam-utils\",\n \"displaydoc\",\n \"flate2\",\n \"indexmap\",\n \"memchr\",\n \"thiserror 2.0.3\",\n \"zopfli\",\n]\n\n[[package]]\nname = \"zopfli\"\nversion = \"0.8.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e5019f391bac5cf252e93bbcc53d039ffd62c7bfb7c150414d61369afe57e946\"\ndependencies = [\n \"bumpalo\",\n \"crc32fast\",\n \"lockfree-object-pool\",\n \"log\",\n \"once_cell\",\n \"simd-adler32\",\n]\n"
        },
        {
          "name": "Cargo.toml",
          "type": "blob",
          "size": 15.783203125,
          "content": "lints.workspace = true\n\n[package]\nname = \"gitoxide\"\ndescription = \"A command-line application for interacting with git repositories\"\nrepository = \"https://github.com/GitoxideLabs/gitoxide\"\nauthors = [\"Sebastian Thiel <sebastian.thiel@icloud.com>\"]\nedition = \"2021\"\nlicense = \"MIT OR Apache-2.0\"\nversion = \"0.40.0\"\ndefault-run = \"gix\"\ninclude = [\"src/**/*\", \"/build.rs\", \"LICENSE-*\", \"README.md\"]\nresolver = \"2\"\n\n[[bin]]\nname = \"ein\"\npath = \"src/ein.rs\"\ndoc = false\ntest = false\ndoctest = false\n\n[[bin]]\nname = \"gix\"\npath = \"src/gix.rs\"\ndoc = false\ntest = false\ndoctest = false\n\n[features]\ndefault = [\"max\"]\n\n#! ### Build Configuration\n#! These combine common choices of building blocks to represent typical builds.\n\n## Everything, all at once.\n##\n## As fast as possible, tracing, with TUI progress, progress line rendering with autoconfiguration, all transports based on their most mature implementation (HTTP), all `ein` tools, CLI colors and local-time support, JSON output, regex support for rev-specs.\n## Can be amended with the `http-client-curl-rustls` feature to avoid `openssl` as backend.\nmax = [\"max-control\", \"fast\", \"gitoxide-core-tools-query\", \"gitoxide-core-tools-corpus\", \"gitoxide-core-blocking-client\", \"http-client-curl\"]\n\n## Like `max`, but only Rust is allowed.\n##\n## This is the most compatible build as it won't need a C compiler or C toolchains to build. It's also not the fastest as or the most feature-rich in terms of available\n## transports as it uses Rust's HTTP implementation.\n##\n## As fast as possible, with TUI progress, progress line rendering with auto-configuration, all transports available but less mature pure Rust HTTP implementation, all `ein` tools, CLI colors and local-time support, JSON output, regex support for rev-specs.\nmax-pure = [\"max-control\", \"gix-features/rustsha1\", \"gix-features/zlib-rust-backend\", \"http-client-reqwest\", \"gitoxide-core-blocking-client\"]\n\n## Like `max`, but with more control for configuration. See the *Package Maintainers* headline for more information.\nmax-control = [\"tracing\", \"fast-safe\", \"pretty-cli\", \"gitoxide-core-tools\", \"prodash-render-line\", \"prodash-render-tui\", \"prodash/render-line-autoconfigure\", \"gix/revparse-regex\"]\n\n## All the good stuff, with less fanciness for smaller binaries.\n##\n## As fast as possible, progress line rendering, all transports based on their most mature implementation (HTTP), all `ein` tools, CLI colors and local-time support, JSON output.\nlean = [\"fast\", \"tracing\", \"pretty-cli\", \"http-client-curl\", \"gitoxide-core-tools-query\", \"gitoxide-core-tools-corpus\", \"gitoxide-core-tools\", \"gitoxide-core-blocking-client\", \"prodash-render-line\"]\n\n## The smallest possible build, best suitable for small single-core machines.\n##\n## This build is essentially limited to local operations without any fanciness.\n##\n## Optimized for size, no parallelism thus much slower, progress line rendering.\nsmall = [\"pretty-cli\", \"gix-features/rustsha1\", \"gix-features/zlib-rust-backend\", \"prodash-render-line\", \"is-terminal\"]\n\n## Like lean, but uses Rusts async implementations for networking.\n##\n## This build is more of a demonstration showing how async can work with `gitoxide`, which generally is blocking. This also means that the selection of async transports\n## is very limited to only HTTP (without typical `git` configuration) and git over TCP like provided by the `git daemon`.\n##\n## As fast as possible, progress line rendering, less featureful HTTP (pure Rust) and only `git-daemon` support, all `ein` tools, CLI colors and local-time support, JSON output.\n##\n## Due to async client-networking not being implemented for most transports, this one supports only the 'git+tcp' and HTTP transport.\n## It uses, however, a fully asynchronous networking implementation which can serve a real-world example on how to implement custom async transports.\nlean-async = [\"fast\", \"tracing\", \"pretty-cli\", \"gitoxide-core-tools\", \"gitoxide-core-tools-query\", \"gitoxide-core-tools-corpus\", \"gitoxide-core-async-client\", \"prodash-render-line\"]\n\n#! ### Package Maintainers\n#! `*-control` features leave it to you to configure C libraries, involving choices for `zlib`, ! hashing and transport implementation.\n#!\n#! Additional features *can* be provided with `--features` and are handled by the [`gix-features` crate](https://docs.rs/gix-features/latest).\n#! If nothing else is specified, the Rust implementation is used. ! Note that only one feature of each section can be enabled at a time.\n#!\n#! * **zlib**\n#!     - `gix-features/zlib-ng`\n#!     - `gix-features/zlib-ng-compat`\n#!     - `gix-features/zlib-stock`\n#!     - `gix-features/zlib-rust-backend` (*default if no choice is made*)\n#! * **sha1**\n#!     - `gix-features/fast-sha1`\n#!     - `gix-features/rustsha1` (*default if no choice is made*)\n#! * **HTTP** - see the *Building Blocks for mutually exclusive networking* headline\n#!\n#! #### Examples\n#!\n#! * `cargo build --release --no-default-features --features max-control,gix-features/zlib-stock,gitoxide-core-blocking-client,http-client-curl`\n#!     - Create a build just like `max`, but using the stock `zlib` library instead of `zlib-ng`\n#! * `cargo build --release --no-default-features --features max-control,http-client-reqwest,gitoxide-core-blocking-client,gix-features/fast-sha1`\n#!     - Create a build just like `max-pure`, but with faster hashing due to `fast-sha1`.\n\n#! ### Building Blocks\n#! Typical combinations of features of our dependencies, some of which are referred to in the `gitoxide` crate's code for conditional compilation.\n\n## Makes the crate execute as fast as possible by supporting parallel computation of otherwise long-running functions\n## as well as fast, hardware accelerated hashing, along with a faster zlib backend.\n## If disabled, the binary will be visibly smaller.\nfast = [\"gix/max-performance\", \"gix/comfort\"]\n\n## Makes the crate execute as fast as possible by supporting parallel computation of otherwise long-running functions\n## as well as fast, hardware accelerated hashing, along with a faster zlib backend.\n## If disabled, the binary will be visibly smaller.\nfast-safe = [\"gix/max-performance-safe\", \"gix/comfort\"]\n\n## Enable tracing in `gitoxide-core`.\ntracing = [\"dep:tracing-forest\", \"dep:tracing-subscriber\", \"dep:tracing\", \"gix-features/tracing\", \"gix-features/tracing-detail\"]\n\n## Use `clap` 3.0 to build the prettiest, best documented and most user-friendly CLI at the expense of binary size.\n## Provides a terminal user interface for detailed and exhaustive progress.\n## Provides a line renderer for leaner progress display, without the need for a full-blown TUI.\npretty-cli = [\"gitoxide-core/serde\", \"prodash/progress-tree\", \"prodash/progress-tree-log\", \"prodash/local-time\", \"env_logger/humantime\", \"env_logger/color\", \"env_logger/auto-color\"]\n\n## The `--verbose` flag will be powered by an interactive progress mechanism that doubles as log as well as interactive progress\n## that appears after a short duration.\nprodash-render-line-crossterm = [\"prodash-render-line\", \"prodash/render-line-crossterm\", \"prodash/signal-hook\", \"is-terminal\", \"crosstermion\"]\n\n## Progress reporting with a TUI, can then be enabled with the `--progress` flag.\nprodash-render-tui = [\"prodash/render-tui\", \"prodash/render-tui-crossterm\", \"gix/progress-tree\", \"futures-lite\"]\n\n## Progress reporting by visually drawing lines into the terminal without switching to an alternate window.\nprodash-render-line = [\"prodash/render-line\", \"prodash-render-line-crossterm\", \"gix/progress-tree\"]\n\n## Prints statistical information to inform about cache efficiency when those are dropped.\n## Use this as a way to understand if bigger caches actually produce greater yiedls.\ncache-efficiency-debug = [\"gix-features/cache-efficiency-debug\"]\n\n##  A way to enable most `gitoxide-core` tools found in `ein tools`, namely `organize` and `estimate hours`.\ngitoxide-core-tools = [\"gitoxide-core/organize\", \"gitoxide-core/estimate-hours\", \"gitoxide-core-tools-archive\", \"gitoxide-core-tools-clean\"]\n\n## A program to perform analytics on a `git` repository, using an auto-maintained sqlite database\ngitoxide-core-tools-query = [\"gitoxide-core/query\"]\n\n## A program to run algorithms on a corpus of repositories, recording each run for later comparison.\ngitoxide-core-tools-corpus = [\"gitoxide-core/corpus\"]\n\n## A sub-command to generate archive from virtual worktree checkouts.\ngitoxide-core-tools-archive = [\"gitoxide-core/archive\"]\n\n## A sub-command to clean the worktree from untracked and ignored files.\ngitoxide-core-tools-clean = [\"gitoxide-core/clean\"]\n\n#! ### Building Blocks for mutually exclusive networking\n#! Blocking and async features are mutually exclusive and cause a compile-time error. This also means that `cargo … --all-features` will fail.\n#! Within each section, features can be combined.\n#!\n#! #### Blocking\n#! The backends are mutually exclusive, e.g. choose either `curl` or `request`.\n#!\n## Use blocking client networking.\ngitoxide-core-blocking-client = [\"gitoxide-core/blocking-client\"]\n## Support synchronous 'http' and 'https' transports (e.g. for clone, fetch and push) using **curl**.\nhttp-client-curl = [\"gix/blocking-http-transport-curl\"]\n## Implies `http-client-curl` and configures `curl` to use the `rust-tls` backend.\nhttp-client-curl-rustls = [\"gix/blocking-http-transport-curl-rustls\"]\n## Support synchronous 'http' and 'https' transports (e.g. for clone, fetch and push) using **reqwest**.\nhttp-client-reqwest = [\"gix/blocking-http-transport-reqwest-rust-tls\"]\n\n#! #### Async\n#!\n## Use async client networking.\ngitoxide-core-async-client = [\"gitoxide-core/async-client\", \"futures-lite\"]\n\n[dependencies]\nanyhow = \"1.0.42\"\n\ngitoxide-core = { version = \"^0.44.0\", path = \"gitoxide-core\" }\ngix-features = { version = \"^0.39.1\", path = \"gix-features\" }\ngix = { version = \"^0.69.1\", path = \"gix\", default-features = false }\n\nclap = { version = \"4.1.1\", features = [\"derive\", \"cargo\"] }\nclap_complete = \"4.4.3\"\nprodash = { version = \"29.0.0\", optional = true }\nis-terminal = { version = \"0.4.0\", optional = true }\nenv_logger = { version = \"0.10.0\", default-features = false }\ncrosstermion = { version = \"0.14.0\", optional = true, default-features = false }\nfutures-lite = { version = \"2.1.0\", optional = true }\n\n# for 'tracing'\ntracing-forest = { version = \"0.1.5\", features = [\"serde\"], optional = true }\ntracing-subscriber = { version = \"0.3.17\", optional = true }\ntracing = { version = \"0.1.37\", optional = true }\n\n# for config-tree\nterminal_size = \"0.3.0\"\n\n# Avoid pre-compiled binaries, see https://github.com/serde-rs/serde/issues/2538 and https://github.com/serde-rs/serde/pull/2590\nserde_derive = \">=1.0.185\"\n\nonce_cell = \"1.18.0\"\ndocument-features = { version = \"0.2.0\", optional = true }\n[profile.dev.package]\ninsta.opt-level = 3\nsimilar.opt-level = 3\ngix-object = { opt-level = 3 }\ngix-ref = { opt-level = 3 }\n#gix-pack = { opt-level = 3 }\ngix-hash = { opt-level = 3 }\ngix-actor = { opt-level = 3 }\ngix-config = { opt-level = 3 }\nminiz_oxide = { opt-level = 3 }\nsha1 = { opt-level = 3 }\nsha1_smol = { opt-level = 3 }\n\n[profile.release]\noverflow-checks = false\nlto = \"thin\"\n# This bloats files but assures destructors are called, important for tempfiles. One day I hope we\n# can wire up the 'abrt' signal handler so tempfiles will be removed in case of panics.\npanic = \"unwind\"\nincremental = false\n\n# This profile is currently used in building releases for GitHub.\n# It may be removed at any time and should not otherwise be relied on.\n[profile.release-github]\ninherits = \"release\"\noverflow-checks = false\npanic = \"unwind\"\nlto = \"fat\"\ncodegen-units = 1\nstrip = \"symbols\"\n\n[workspace]\nmembers = [\n    \"gix-actor\",\n    \"gix-url\",\n    \"gix-hash\",\n    \"gix-validate\",\n    \"gix-ref\",\n    \"gix-command\",\n    \"gix-config\",\n    \"gix-config-value\",\n    \"gix-discover\",\n    \"gix-features\",\n    \"gix-trace\",\n    \"gix-commitgraph\",\n    \"gix-chunk\",\n    \"gix-quote\",\n    \"gix-object\",\n    \"gix-glob\",\n    \"gix-diff\",\n    \"gix-merge\",\n    \"gix-date\",\n    \"gix-traverse\",\n    \"gix-dir\",\n    \"gix-index\",\n    \"gix-bitmap\",\n    \"gix-worktree\",\n    \"gix-worktree-state\",\n    \"gix-status\",\n    \"gix-revision\",\n    \"gix-packetline\",\n    \"gix-packetline-blocking\",\n    \"gix-mailmap\",\n    \"gix-macros\",\n    \"gix-note\",\n    \"gix-negotiate\",\n    \"gix-fetchhead\",\n    \"gix-prompt\",\n    \"gix-filter\",\n    \"gix-sec\",\n    \"gix-lfs\",\n    \"gix-rebase\",\n    \"gix-sequencer\",\n    \"gix-submodule\",\n    \"gix-transport\",\n    \"gix-credentials\",\n    \"gix-protocol\",\n    \"gix-pack\",\n    \"gix-odb\",\n    \"gix-tempfile\",\n    \"gix-lock\",\n    \"gix-attributes\",\n    \"gix-ignore\",\n    \"gix-pathspec\",\n    \"gix-refspec\",\n    \"gix-path\",\n    \"gix-utils\",\n    \"gix-fs\",\n    \"gix-blame\",\n    \"gix\",\n    \"gitoxide-core\",\n    \"gix-hashtable\",\n    \"gix-tui\",\n    \"gix-tix\",\n    \"gix-archive\",\n    \"gix-worktree-stream\",\n    \"gix-revwalk\",\n    \"gix-fsck\",\n    \"tests/tools\",\n    \"tests/it\",\n    \"gix-diff/tests\",\n    \"gix-pack/tests\",\n    \"gix-odb/tests\",\n    \"gix-worktree-state/tests\",\n    \"gix-status/tests\",\n    \"gix-worktree/tests\",\n    \"gix-index/tests\",\n    \"gix-ref/tests\",\n    \"gix-config/tests\",\n    \"gix-traverse/tests\",\n    \"gix-shallow\"\n]\n\n[workspace.dependencies]\n\n\n[package.metadata.docs.rs]\nfeatures = [\"document-features\", \"max\"]\n\n[package.metadata.binstall]\npkg-url = \"{ repo }/releases/download/v{ version }/gitoxide-max-pure-v{ version }-{ target }{ archive-suffix }\"\nbin-dir = \"gitoxide-max-pure-v{ version }-{ target }/{ bin }{ binary-ext }\"\n\n[workspace.lints.rust]\n# TODO: enable this\n# unused_qualifications = \"warn\"\n\n[workspace.lints.clippy]\npedantic = { level = \"warn\", priority = -1 }\n#\n# Reviewed and allowed lints\nenum_glob_use = \"allow\"  # x97\nmissing_errors_doc = \"allow\"  # x1792\nmissing_panics_doc = \"allow\"  # x447\nmodule_name_repetitions = \"allow\"  # x125\nmust_use_candidate = \"allow\"  # x1696\n#\n# Lints that we may want to forbid in the future\ndefault_trait_access = \"allow\"  # x709\ndoc_markdown = \"allow\"  # x552\ncast_possible_truncation = \"allow\"  # x216\nneedless_pass_by_value = \"allow\"  # x205\nreturn_self_not_must_use = \"allow\"  # x204\nunreadable_literal = \"allow\"  # x169\nitems_after_statements = \"allow\"  # x164\nsingle_match_else = \"allow\"  # x162\ntoo_many_lines = \"allow\"  # x161\nunnecessary_wraps = \"allow\"  # x110\nmatch_same_arms = \"allow\"  # x99\ncast_lossless = \"allow\"  # x91\nignored_unit_patterns = \"allow\"  # x80\nused_underscore_binding = \"allow\"  # x75\nneedless_raw_string_hashes = \"allow\"  # x75\nimplicit_clone = \"allow\"  # x70\nmanual_let_else = \"allow\"  # x64\ncast_precision_loss = \"allow\"  # x56\ntrivially_copy_pass_by_ref = \"allow\"  # x43\nredundant_else = \"allow\"  # x42\nif_not_else = \"allow\"  # x37\nmatch_wildcard_for_single_variants = \"allow\"  # x35\ncast_sign_loss = \"allow\"  # x35\nsimilar_names = \"allow\"  # x32\nstruct_excessive_bools = \"allow\"  # x29\ncast_possible_wrap = \"allow\"  # x26\nexplicit_iter_loop = \"allow\"  # x24\nexplicit_into_iter_loop = \"allow\"  # x22\nexplicit_deref_methods = \"allow\"  # x22\ninconsistent_struct_constructor = \"allow\"  # x18\nrange_plus_one = \"allow\"  # x17\ninefficient_to_string = \"allow\"  # x14\nfrom_iter_instead_of_collect = \"allow\"  # x13\nunused_self = \"allow\"  # x10\nmany_single_char_names = \"allow\"  # x10\nmanual_string_new = \"allow\"  # x10\niter_not_returning_iterator = \"allow\"  # x10\noption_option = \"allow\"  # x9\ninline_always = \"allow\"  # x8\nmanual_assert = \"allow\"  # x7\niter_without_into_iter = \"allow\"  # x6\ncopy_iterator = \"allow\"  # x6\nshould_panic_without_expect = \"allow\"  # x5\ntransmute_ptr_to_ptr = \"allow\"  # x4\nmatch_wild_err_arm = \"allow\"  # x4\nmanual_is_variant_and = \"allow\"  # x4\nbool_to_int_with_if = \"allow\"  # x4\nstruct_field_names = \"allow\"  # x3\nwildcard_imports = \"allow\"  # x2\nneedless_for_each = \"allow\"  # x2\nnaive_bytecount = \"allow\"  # x2\nmut_mut = \"allow\"  # x2\nmatch_bool = \"allow\"  # x2\nfn_params_excessive_bools = \"allow\"  # x2\nfilter_map_next = \"allow\"  # x2\nchecked_conversions = \"allow\"  # x2\nborrow_as_ptr = \"allow\"  # x2\nunnecessary_join = \"allow\"  # x1\nstable_sort_primitive = \"allow\"  # x1\nno_effect_underscore_binding = \"allow\"  # x1\nempty_docs = \"allow\"\ntoo_long_first_doc_paragraph = \"allow\"\nlarge_stack_arrays = \"allow\"\n"
        },
        {
          "name": "DEVELOPMENT.md",
          "type": "blob",
          "size": 18.515625,
          "content": "# Development Guide\n\n## Practices\n\n * **test-first development**\n   * protect against regression and make implementing features easy.\n   * user containers to test more elaborate user interactions\n   * keep it practical, knowing the Rust compiler already has your back\n     for the mundane things, like unhappy code paths.\n   * *use git itself* as reference implementation, and use their test-cases and fixtures where\n     appropriate. At the very least, try to learn from them.\n      * Run the same test against git whenever feasible to assure git agrees with our implementation.\n        See `gix-glob` for examples.\n   * *use libgit2* test fixtures and cases where appropriate, or learn from them.\n * **safety first**\n   * handle all errors, never `unwrap()`. If needed, `expect(\"why\")`.\n   * provide an error chain and make it easy to understand what went wrong.\n   * We `thiserror` generally.\n * Adhere to the [stability guide](https://github.com/GitoxideLabs/gitoxide/blob/main/STABILITY.md)\n\n## Commit Messages\n\nWe use a style I'd call 'purposeful [conventional commits](https://www.conventionalcommits.org/en/v1.0.0/)', and instead of classifying\nevery commit using _conventional commit_ messaging, we do so only if the message should show up in the changelog.\n\nThe _subject_ usually informs about the *what* and the body provides details and explains the *why*.\n\nCommit messages _must_ show up in the changelog in case of breaking changes. Examples for that are:\n\n- change!: rename `Foo` to `Bar`. (#123)\n\n  And this is why we do it in the body.\n- remove!: `Repository::obsolete()`.\n\n  Nobody used this method.\n\nFeatures or other changes that are visible and people should know about look like this:\n\n- feat: add `Repository::foo()` to do great things. (#234)\n\n  And here is how it's used and some more details.\n- fix: don't panic when calling `foo()` in a bare repository. (#456)\n\nEverything else, particularly refactors or chores, don't use _conventional commits_ as these don't affect users of the API.\nExamples could be:\n\n- make test module structure similar to the modules they are testing for consistency\n- `make fmt`\n- thanks clippy\n\nPlease refrain from using `chore:` or `refactor:` prefixes as for the most part, users of the API don't care about those. When a `refactor`\nchanges the API in some way, prefer to use `feat`, `change`, `rename` or `remove` instead, and most of the time the ones that are not `feat`\nare breaking so would be seen with their _exclamation mark_ suffix, like `change!`.\n\n### Reasoning\n\nCommit messages are used for guiding `cargo smart-release` to do most of the release work for us. This includes changelog generation\nas well as picking the right version bump for each crate.\n\n## Commit splitting on breaking changes.\n\nKnowing that `cargo smart-release` is driven by commit messages and affects their versions with per-crate granularity, it becomes important\nto split edits into multiple commits to clearly indicate which crate is actually broken.\n\nTypical patterns include making a breaking change in one crate and then fix all others to work with it. For changelogs to look proper\nand version bumps to be correct, the first commit would contain only the breaking changes themselves,\nlike \"rename: `foo()` to `bar()`\", and the second commit would contain all changes to adapt to that and look like \"adapt to changes in `<crate name>`\".\n\n## Commit History\n\nWe generally follow a 'track everything' approach and there is a lot of freedom leading to more commits rather than less. There\nis no obligation to squash commits or to otherwise tune the history.\n\nWe use feature branches and PRs most of the time to be able to take advantage of CI and GitHub review tools, and merge with merge commits\nto make individual efforts stand out. There is no need for linearizing history or tuning it in any other way. However, each commit\n_must_ follow the guidelines laid out in the `Commit Messages` paragraph.\n\nThere is value in organizing commits by topic and [_Stacked Git_](https://stacked-git.github.io) is hereby endorsed to do that.\n\n## Configuration and overrides\n\nAs a general rule, respect and implement all applicable [git-config](https://git-scm.com/docs/git-config) by default, but allow the\ncaller to set overrides. How overrides work depends on the goals of the particular API so it can be done on the main call path,\nforcing a choice, or more typically, as a side-lane where overrides can be done on demand.\n\nNote that it should be possible to obtain the current configuration for modification by the user for selective overrides, either\nby calling methods or by obtaining a data structure that can be set as a whole using a `get -> modify -> set` cycle.\n\nNote that without any of that, one should document that with `config_snapshot_mut()` any of the relevant configuration can be\nchanged in memory before invoking a method in order to affect it.\n\nParameters which are not available in git or specific to `gitoxide` or the needs of the caller can be passed as parameters or via\n`Options` or `Context` structures as needed.\n\n## General\n\n* **async**\n  * **library client-side**\n    * ~~Don't use it client side, as operations there are usually bound by the CPU and ultra-fast access to memory mapped files.\n      It's no problem to saturate either CPU or the IO system.~~\n      * Provide `async` clients as opt-in using feature toggles to help integrating into an existing async codebase.\n  * **User Interfaces**\n    * User interfaces can greatly benefit from using async as it's much easier to maintain a responsive UI thread that way thanks\n      to the wonderful future combinators.\n    * `blocking` can be used to make `Read` and `Iterator` async, or move any operation onto a thread which blends it into the\n      async world.\n       * Most operations are fast and 'interrupting' them is as easy as ignoring their result by cancelling their task.\n       * Long-running operations can be roughly interacted with using `gix_features::interrupt::trigger()` function, and after a moment\n         of waiting the flag can be unset with the `…::uninterrupt()` function to allow new long-running operations to work.\n         Every long running operation supports this.\n  * **server-side**\n    * ~~Building a pack is CPU and at some point, IO bound, and it makes no sense to use async to handle more connections - git\n      needs a lot of resources and threads will do just fine.~~\n      * Support async out of the box without locking it into particular traits using conditional complication. This will make integrating\n        into an async codebase easier, which we assume is given on the server side _these days_.\n  * **usage of `maybe_async`**\n    * Right not we intentionally only use it in tests to allow one set of test cases to test both blocking and async implementations. This is the\n      only way to prevent drift of otherwise distinct implementations.\n    * **Why not use it to generate blocking versions of traits automatically?**\n      * This would require `maybe_async` and its dependencies to always be present, increasing compile times. For now we chose a little more code to handle\n        over increasing compile times for everyone. This stance may change later once compile times don't matter that much anymore to allow the removal of code.\n\n* **`Default` trait implementations**\n  * These can change only if the effect is contained within the callers process.\n    This means **changing the default of a file version** is a **breaking change**.\n* **Using the `Progress` trait**\n  * When receiving a `Progress` implementation\n     * without calling `add_child(…)` then use it directly to communicate progress, leaving\n       control of the name to the caller. However, call `.init(…)` to configure the iteration.\n     * and when calling `add_child(…)` don't use the parent progress instance for anything else.\n* **interruption of long-running operations**\n  * Use `gix-features::interrupt::*` for building support for interruptions of long-running operations only.\n    * It's up to the author to decide how to best integrate it, generally we use a poll-based mechanism to check whether\n      an interrupt flag is set.\n    * **this is a must if…**\n      * …temporary resources like files might otherwise be leaked.\n    * **this is optional but desirable if…**\n      * …there is no leakage otherwise to support user interfaces. They background long-running operations and need them to be cancellable.\n\n* **prepare for SHA256 support by using `gix_hash::ObjectId` and `gix_hash::oid`**\n  * eventually there will be the need to support both Sha1 and Sha256. We anticipate it by using the `Id` type instead\n    of slices or arrays of 20 bytes. This way, eventually we can support multiple hash digest sizes.\n  * Right now it's unclear how Sha256 is going to work in git, so we only support Sha1 for now. It might be an avenue to proactively\n    implement it ahead of time once there is a specification to follow.\n  * It looks like Git prepares to support it by using compile time, we can support it at runtime though with minimal cost. If needed,\n    we can later remove support using a cargo feature toggle.\n* **symbolic links do not exist** as far as we are concerned\n  * in older, probably linux only, git versions symbolic links were used for symbolic references for example. This required special handling\n    in some places. We don't implement that and assume more modern repositories.\n* **when to use interior mutability**\n  - in **plumbing**, do not use it at all but instead provide the mutable part (like caches, buffers) as arguments, pushing their handling entirely to the caller.\n  - Set on top an optional abstraction that manages the above for you using **interior mutability only if part of the mutable state has to be returned as borrow**\n    or if otherwise it wouldn't be possible to borrowcheck. Or in other words: start without interior mutability and try to do it the standard way, but switch when needed.\n  - When using primitives to support interior mutability, use the provided ones and utility functions in `gix_features::threading::*` exclusively to allow switching between\n    thread-safe and none-threadsafe versions at compile time.\n      - The preferred way of using it is to start out as upgradable reader, and upgrading to write if needed, keeping contention to a minimum.\n  - If _shared ownership_ is involved, one always needs _interior mutability_, but may still decide to use an API that requires `&mut self` if locally stored caches are involved.\n  - Types that are not thread-local must be `Sync`, but only if the `gix-features/parallel` is enabled due to the usage of `gix_features::threading::…` primitives which won't\n    be thread-safe without the feature.\n* **when to use shared ownership**\n  - Use `gix_features::threading::OwnShared` particularly when shared resources supposed to be used by thread-local handles. Going through a wrapper for shared ownership is fast\n    and won't be the bottleneck, as it's only about 16% slower than going through a shared reference on a single core.\n* **Path encoding**\n  - For `git`, paths are just bytes no matter on which platform. We assume that on windows its path handling goes through some abstraction layer like `MSYS2`\n    which avoids it to seeing UTF-16 encoded paths (and writing them). Thus it should be safe to assume `git`s path encoding is byte oriented.\n  - Assuming UTF8-ish bytes in paths produced by `git` even on windows due to `MSYS2`, we use `os_str_bytes` to convert these back into `OsStr` and derivatives like `Path`\n    as needed even though it might not always be the case depending on the actual encoding used by `MSYS2` or other abstraction layers, or avoiding to use std types altogether\n    using our own instead.\n\n## Sha256\n\nA bunch of notes collected to keep track of what's needed to eventually support it\n\n* read `hash-function-transition.txt`\n* [x] support `gpgsig-sha256` field - we won't break, but also don't do anything with it (e.g. `extra_headers`)\n* [ ] support index V3\n* [ ] Pack file PSRC field\n\n## `.unwrap()` vs `.expect(…)`\n\n* don't use unwrap, not even in tests. Instead use `quick_error!()` or `Box<dyn std::error::Error>`.\n* Use `expect(…)` as assertion on Options, providing context on *why* the expectations should hold. Or in other words,\n  answer \"This should work _because_…<expect(…)>\"\n\n## `Options` vs `Context`\n\n- Use `Options` whenever there is something to configure in terms of branching behaviour. It can be defaulted, and if it can't these fields should be parameters of the method\n  that takes these `Options`.\n- Use `Context` when data is required to perform an operation at all. See `gix_config::path::Context` as reference. It can't be defaulted and the fields could also be parameters.\n\n## Lifetimes\n\nIn _plumbing_ crates, prefer to default to keeping references if this is feasible to avoid typically expensive clones.\n\nIn _porcelain_ crates, like `gix`, we have `Platforms` which are typically cheap enough to create on demand as they configure one or more method calls. These\nshould keep a reference to the `Repository` instance that created them as the user is expected to clone the `Repository` if there is the need.\nHowever, if these structures are more expensive, call them `Cache` or `<NotPlatform>` and prefer to clone the `Repository` into them or otherwise keep them free of lifetimes\nto allow the user to keep this structure around for repeated calls. References for this paragraph are [this PR](https://github.com/Canop/bacon/pull/98) and\n[this discussion](https://github.com/GitoxideLabs/gitoxide/discussions/675).\n\n## Examples, Porcelain CLI and Plumbing CLI - which does what?\n\n### Plumbing vs Porcelain\n\nBoth terms are coming from the `git` implementation itself, even though it won't necessarily point out which commands are plumbing and which\nare porcelain.\nThe term *plumbing* refers to lower-level, more rarely used commands that complement porcelain by being invoked by it or by hand for certain use\ncases.\nThe term *porcelain* refers to those with a decent user experience, they are primarily intended for use by humans.\n\nIn any case, both types of programs must self-document their capabilities using through the `--help` flag.\n\nFrom there, we can derive a few rules to adhere to unless there are good reasons not to:\n\n#### Plumbing\n\n* does not show any progress or logging output by default\n* if supported and logging is enabled, it will show timestamps in UTC\n* it does not need a git repository, but instead takes all required information via the command-line\n\n#### Porcelain\n\n* Provides output to stderr by default to provide progress information. There is no need to allow disabling it, but it shouldn't show up unless\n  the operation takes some time.\n* If timestamps are shown, they are in localtime.\n* Non-progress information goes to stdout.\n\n#### Summary\n\nHere is the hierarchy of programs - each level requires more polish and generally work to be done.\n_Experiments_ are the quickest ways to obtain some insights. _Examples_ are materialized ideas that others can learn from but that don't quite have\nthe polish (or the potential) to move up to _plumbing_ or _porcelain_. _Plumbing_ is programs for use in scripts, whereas _porcelain_ is for use\nby humans.\n\n* **Experiments** (out of tree due to `git2` builds sometimes failing CI)\n  * quick, potentially one-off programs to learn about an aspect of gitoxide potentially in comparison to other implementations like `libgit2`.\n  * No need for tests of any kind, but it must compile and be idiomatic Rust and `gitoxide`.\n  * Manual command-line parsing is OK\n  * no polish\n  * make it compile quickly, so no extras\n* **Examples**\n  * An implementation of ideas for actual occasional use and the first step towards getting integrated into Porcelain or Plumbing CLIs.\n  * Proper command-line parsing with Clap.\n  * No tests or progress.\n  * High quality Rust code along with idiomatic `gitoxide` usage so people can learn from it.\n* **Plumbing CLI**\n  * Use Clap AND Argh for command-line parsing via feature toggles to allow for tiny builds as plumbing is mostly for scripts.\n  * Journey tests\n  * Progress can be turned on using the `--verbose` flag, quiet by default.\n  * Examples can be turned into plumbing by adding journey tests and `argh` command-line parsing, as well as progress.\n* **Porcelain CLI**\n  * Use Clap for command-line parsing for the best quality CLI experience - it's for the user.\n  * Journey tests.\n  * Support for `--quiet` and `--progress`.\n  * Verbose by default.\n  * Examples can be turned into plumbing by adding journey tests and progress.\n\n# Maintenance Guide\n\nUtilities to aid in keeping the project fresh and in sync can be found in the `Maintenance` section of the `makefile`. Run `make` to\nget an overview.\n\n## Reviewing PRs\n\n- Be sure to clone locally and run tests with `GIX_TEST_IGNORE_ARCHIVES=1` to assure new fixture scripts (if there are any) are validated\n  on _MacOS_ and _Windows_. Linux doesn't need to be tested locally that way, as CI on Linux includes it.\n\n## Creating a release\n\nRun `make publish-all` to publish all crates in leaf-first order using `cargo release` based on the currently set version.\nFor this to work, you have to run `cargo release minor|major` each time you break the API of a crate but abort it during package verification.\nThat way, `cargo release` updates all the dependents for you with the new version, without actually publishing to crates.io.\n\n## Which git-version to chase?\n\nGenerally, we take the git version installed on ubuntu-latest as the one we stay compatible with (_while maintaining backwards\ncompatibility_). Certain tests only run on CI, designed to validate certain assumptions still hold against possibly changed\ngit program versions.\n\nThis also means that CI may fail despite everything being alright locally, and the fix depends on the problem at hand.\n\n## How to update fixtures\n\n### For object data\n\nFixtures are created by using a line like this which produces a line we ignore via `tail +1` followed by the un-prettified object payload\ntrailed by a newline.\n```sh\necho c56a8e7aa92c86c41a923bc760d2dc39e8a31cf7  | git cat-file --batch | tail +2 > fixture\n```\n\nThus one has to post-process the file by reducing its size by one using `truncate -s -1 fixture`, **removing the newline byte**.\n\n# Tips & Tricks\n\n## Git debug mode cranked up to 11\n\n```\nGIT_TRACE=true \\\nGIT_TRACE_PACK_ACCESS=true \\\nGIT_TRACE_PACKET=true \\\nGIT_TRACE_PACKFILE=true \\\nGIT_TRACE_PERFORMANCE=true \\\nGIT_TRACE_SHALLOW=true \\\nGIT_TRACE_SETUP=true \\\nGIT_CURL_VERBOSE=true \\\nGIT_SSH_COMMAND=\"ssh -VVV\" \\\ngit <command>\n```\n\nConsider adding `GIT_TRACE2_PERF=1` (possibly add `GIT_TRACE2_PERF_BRIEF=1` for brevity) as well for statistics and variables\n(see [their source for more](https://github.com/git/git/blob/b50a608ba20348cb3dfc16a696816d51780e3f0f/trace2/tr2_sysenv.c#L50).\n"
        },
        {
          "name": "FUNDING.json",
          "type": "blob",
          "size": 0.1044921875,
          "content": "{\n  \"drips\": {\n    \"ethereum\": {\n      \"ownedBy\": \"0xD0d4dCFc194ec24bCc777e635289e0b10E1a7b87\"\n    }\n  }\n}\n"
        },
        {
          "name": "LICENSE-APACHE",
          "type": "blob",
          "size": 10.474609375,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "LICENSE-MIT",
          "type": "blob",
          "size": 0.9990234375,
          "content": "Permission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 6.9619140625,
          "content": "help:  ## Display this help\n\t@awk 'BEGIN {FS = \":.*##\"; printf \"\\nNote: Make is only for specific functionality used by CI - run `just` for developer targets:\\n  make \\033[36m<target>\\033[0m\\n\"} /^[a-zA-Z_-]+:.*?##/ { printf \"  \\033[36m%-15s\\033[0m %s\\n\", $$1, $$2 } /^##@/ { printf \"\\n\\033[1m%s\\033[0m\\n\", substr($$0, 5) } ' $(MAKEFILE_LIST)\n\nalways:\n\n##@ Release Builds\n\nrelease-all: release release-lean release-small ## all release builds\n\nrelease: always ## the default build, big but pretty (builds in ~2min 35s)\n\tcargo build --release\n\nrelease-lean: always ## lean and fast, with line renderer (builds in ~1min 30s)\n\tcargo build --release --no-default-features --features lean\n\nrelease-small: always ## minimal dependencies, at cost of performance (builds in ~46s)\n\tcargo build --release --no-default-features --features small\n\n##@ Debug Builds\n\ndebug: always ## the default build, big but pretty\n\tcargo build\n\ndebug-lean: always ## lean and fast, with line renderer\n\tcargo build --no-default-features --features lean\n\ndebug-small: always ## minimal dependencies, at cost of performance\n\tcargo build --no-default-features --features small\n\n##@ Development\n\ngix := $(shell cargo metadata --format-version 1 | jq -r .target_directory)/release/gix\n$(gix): always\n\tcargo build --release --no-default-features --features small\n\n##@ Testing\n\nclear-cache: ## Remove persisted results of test-repositories, they regenerate automatically\n\t-find . -path \"*fixtures/generated\" -type d -exec rm -Rf \\{\\} \\;\n\nrust_repo = tests/fixtures/repos/rust.git\n$(rust_repo):\n\tmkdir -p $@\n\tcd $@ && git init --bare && git remote add origin https://github.com/rust-lang/rust && git fetch\n\nlinux_repo = tests/fixtures/repos/linux.git\n$(linux_repo):\n\tmkdir -p $@\n\tcd $@ && git init --bare && git remote add origin https://github.com/torvalds/linux && git fetch\n\ntest_many_commits_1m_repo = tests/fixtures/repos/test-many-commits-1m.git\n$(test_many_commits_1m_repo):\n\tmkdir -p $@\n\tcd $@ && git init --bare && git remote add origin https://github.com/cirosantilli/test-many-commits-1m.git && git fetch\n\n## get all non-rc tags up to v5.8, oldest tag first (should have 78 tags)\n## -> convert to commit ids\n## -> write a new incremental commit-graph file for each commit id\ntests/fixtures/commit-graphs/linux/long-chain: $(linux_repo)\n\tmkdir -p $@\n\trm -rf $(linux_repo)/objects/info/*graph*\n\tset -x && cd $(linux_repo) && \\\n\t\tfor tag in $$(git tag --list --merged v5.8 --sort=version:refname | grep -Fv -- -rc); do \\\n\t\t\tgit show-ref -s \"$$tag\" | git commit-graph write --split=no-merge --stdin-commits; \\\n\t\tdone\n\tmv -f $(linux_repo)/objects/info/*graphs* $@\n\tactual=$$(ls -1 $@/commit-graphs/*.graph | wc -l); \\\n\t\tif [ $$actual -ne 78 ]; then echo expected 78 commit-graph files, got $$actual; exit 1; fi\n\ntests/fixtures/commit-graphs/linux/single-file: $(linux_repo)\n\tmkdir -p $@\n\trm -rf $(linux_repo)/objects/info/*graph*\n\tcd $(linux_repo) && git show-ref -s v5.8 | git commit-graph write --stdin-commits\n\tmv -f $(linux_repo)/objects/info/*graph* $@\n\ntests/fixtures/commit-graphs/rust/single-file: $(rust_repo)\n\tmkdir -p $@\n\trm -rf $(rust_repo)/objects/info/*graph*\n\tcd $(rust_repo) && git fetch --tags && git show-ref -s 1.47.0 | git commit-graph write --stdin-commits\n\tmv -f $(rust_repo)/objects/info/*graph* $@\n\ntests/fixtures/commit-graphs/test-many-commits-1m/single-file: $(test_many_commits_1m_repo)\n\tmkdir -p $@\n\trm -rf $(test_many_commits_1m_repo)/objects/info/*graph*\n\tcd $(test_many_commits_1m_repo) \\\n\t\t&& echo f4d21576c13d917e1464d9bc1323a560a5b8595d | git commit-graph write --stdin-commits\n\tmv -f $(test_many_commits_1m_repo)/objects/info/*graph* $@\n\ncommit_graphs = \\\n\ttests/fixtures/commit-graphs/linux/long-chain \\\n\ttests/fixtures/commit-graphs/linux/single-file \\\n\ttests/fixtures/commit-graphs/rust/single-file \\\n\ttests/fixtures/commit-graphs/test-many-commits-1m/single-file\n\n##@ on CI\n\nstress: ## Run various algorithms on big repositories\n\t$(MAKE) -j3 $(linux_repo) $(rust_repo) release-lean\n\ttime $(gix) --verbose no-repo pack verify --re-encode $(linux_repo)/objects/pack/*.idx\n\ttime $(gix) --verbose no-repo pack multi-index -i $(linux_repo)/objects/pack/multi-pack-index create $(linux_repo)/objects/pack/*.idx\n\ttime $(gix) --verbose no-repo pack verify $(linux_repo)/objects/pack/multi-pack-index\n\trm -Rf out; mkdir out && time $(gix) --verbose no-repo pack index create -p $(linux_repo)/objects/pack/*.pack out/\n\ttime $(gix) --verbose no-repo pack verify out/*.idx\n\n\ttime $(gix) --verbose no-repo pack verify --statistics $(rust_repo)/objects/pack/*.idx\n\ttime $(gix) --verbose no-repo pack verify --algorithm less-memory $(rust_repo)/objects/pack/*.idx\n\ttime $(gix) --verbose no-repo pack verify --re-encode $(rust_repo)/objects/pack/*.idx\n\t# We must ensure there is exactly one pack file for the pack-explode *.idx globs to work.\n\tgit repack -Ad\n\ttime $(gix) --verbose no-repo pack explode .git/objects/pack/*.idx\n\n\trm -Rf delme; mkdir delme && time $(gix) --verbose no-repo pack explode .git/objects/pack/*.idx delme/\n\n\t$(MAKE) stress-commitgraph\n\t$(MAKE) bench-gix-config\n\n.PHONY: stress-commitgraph\nstress-commitgraph: release-lean $(commit_graphs)\n\tset -x; for path in $(wordlist 2, 999, $^); do \\\n\t\ttime $(gix) --verbose no-repo commit-graph verify $$path; \\\n\tdone\n\n.PHONY: bench-gix-config\nbench-gix-config:\n\tcd gix-config && cargo bench\n\ncheck-msrv-on-ci: ## Check the minimal support rust version for currently installed Rust version\n\trustc --version\n\tcargo check --package gix\n\tcargo check --package gix --no-default-features --features async-network-client,max-performance\n\n##@ Maintenance\n\nbaseline_asset_dir = gix/src/assets/baseline-init\nbaseline_asset_fixture = tests/fixtures/baseline-init\n\n$(baseline_asset_fixture):\n\tmkdir -p $@\n\tcd \"$@\" && git init --bare && \\\n\t\tsed -i '' -E '/bare = true|ignorecase = true|precomposeunicode = true|filemode = true/d' config && \\\n\t\tsed -i '' 's/master/main/g' $$(find . -type f)\n\ntransport_fixtures = gix-transport/tests/fixtures\nbase_url = https://github.com/GitoxideLabs/gitoxide.git\nupdate-curl-fixtures: ## use curl to fetch raw fixtures for use in unit test. Changes there might break them\n\tcurl -D - -L \"$(base_url)/info/refs?service=git-upload-pack\"  > $(transport_fixtures)/v1/http-handshake.response\n\tcurl -D - -H 'Git-Protocol: version=2' -L \"$(base_url)/info/refs?service=git-upload-pack\"  > $(transport_fixtures)/v2/http-handshake.response\n\tcurl -H 'User-Agent: git/oxide-0.1.0' -D - -H 'Git-Protocol: version=1' -L \"https://github.com/GitoxideLabs/nonexistent/info/refs?service=git-upload-pack\"  > $(transport_fixtures)/http-401.response\n\tcurl -D - -H 'Git-Protocol: version=1' -L \"https://github.com/GitoxideLabs/gitoxide/info/refs?service=git-upload-pack\"  > $(transport_fixtures)/http-404.response\n\nupdate-assets: $(baseline_asset_fixture) ## refresh assets compiled into the binaries from their source\n\t-rm -Rf $(baseline_asset_dir)\n\tmkdir -p $(dir $(baseline_asset_dir))\n\tcp -R $< $(baseline_asset_dir)\n\nforce-update-assets: ## As update-assets, but will run git to update the baseline as well\n\t-rm -Rf $(baseline_asset_fixture)\n\t$(MAKE) update-assets\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 24.2451171875,
          "content": "[![CI](https://github.com/GitoxideLabs/gitoxide/workflows/ci/badge.svg)](https://github.com/GitoxideLabs/gitoxide/actions)\n[![Crates.io](https://img.shields.io/crates/v/gitoxide.svg)](https://crates.io/crates/gitoxide)\n<img src=\"etc/msrv-badge.svg\">\n\n`gitoxide` is an implementation of `git` written in Rust for developing future-proof applications which strive for correctness and\nperformance while providing a pleasant and unsurprising developer experience.\n\n`gitoxide` provides the `gix` and `ein` binaries for use on the command-line to allow experimentation with key features\nlike `fetch` and `clone`, and to validate the usability and control of the API offered by the [`gix`] crate.\n\n`gitoxide` aspires to be a production-grade server implementation and the `ein` binary aspires to become the default way to interact with git repositories.\n\n[![asciicast](https://asciinema.org/a/542159.svg)](https://asciinema.org/a/542159)\n\n[`gix`]: https://docs.rs/gix\n\n## Development Status\n\nThe command-line tools as well as the status of each crate is described in\n[the crate status document](https://github.com/GitoxideLabs/gitoxide/blob/main/crate-status.md).\n\nFor use in applications, look for the [`gix`](https://github.com/GitoxideLabs/gitoxide/blob/main/crate-status.md#gix) crate,\nwhich serves as entrypoint to the functionality provided by various lower-level plumbing crates like\n[`gix-config`](https://github.com/GitoxideLabs/gitoxide/blob/main/crate-status.md#gix-config).\n\n### Feature Discovery\n\n> Can `gix` do what I need it to do?\n\nThe above can be hard to answer and this paragraph is here to help with feature discovery.\n\nLook at [`crate-status.md`](https://github.com/GitoxideLabs/gitoxide/blob/main/crate-status.md) for a rather exhaustive document that contains\nboth implemented and planned features.\n\nFurther, the [`gix` crate documentation with the `git2` search term](https://docs.rs/gix/latest/gix?search=git2) helps to find all currently\nknown `git2` equivalent method calls. Please note that this list is definitely not exhaustive yet, but might help if you are coming from `git2`.\n\nWhat follows is a high-level list of features and those which are planned:\n\n* [x] clone\n* [x] fetch\n* [ ] blame\n* [ ] push\n* [ ] reset\n* [ ] status\n* [x] blob-diff\n* [ ] merge\n    - [x] blobs\n    - [x] trees\n    - [ ] commits\n* [ ] rebase\n* [ ] commit\n* [x] worktree checkout and worktree stream\n* [x] reading and writing of objects\n* [x] reading and writing of refs\n* [x] reading and writing of `.git/index`\n* [x] reading and writing of git configuration\n* [x] pathspecs\n* [x] revspecs\n* [x] `.gitignore` and `.gitattributes`\n\n### Crates\n\nFollow linked crate name for detailed status. Please note that all crates follow [semver] as well as the [stability guide].\n\n[semver]: https://semver.org\n\n### Production Grade\n\n* **Stability Tier 1**\n  - [gix-lock](https://github.com/GitoxideLabs/gitoxide/blob/main/gix-lock/README.md)\n\n* **Stability Tier 2**\n  - [gix-tempfile](https://github.com/GitoxideLabs/gitoxide/blob/main/gix-tempfile/README.md)\n\n### Stabilization Candidates\n\nCrates that seem feature complete and need to see some more use before they can be released as 1.0.\nDocumentation is complete and was reviewed at least once.\n\n* [gix-mailmap](https://github.com/GitoxideLabs/gitoxide/blob/main/crate-status.md#gix-mailmap)\n* [gix-chunk](https://github.com/GitoxideLabs/gitoxide/blob/main/crate-status.md#gix-chunk)\n* [gix-ref](https://github.com/GitoxideLabs/gitoxide/blob/main/crate-status.md#gix-ref)\n* [gix-config](https://github.com/GitoxideLabs/gitoxide/blob/main/crate-status.md#gix-config)\n* [gix-config-value](https://github.com/GitoxideLabs/gitoxide/blob/main/crate-status.md#gix-config-value)\n* [gix-glob](https://github.com/GitoxideLabs/gitoxide/blob/main/crate-status.md#gix-glob)\n* [gix-actor](https://github.com/GitoxideLabs/gitoxide/blob/main/crate-status.md#gix-actor)\n* [gix-hash](https://github.com/GitoxideLabs/gitoxide/blob/main/crate-status.md#gix-hash)\n\n### Initial Development\n\nThese crates may be missing some features and thus are somewhat incomplete, but what's there\nis usable to some extent.\n\n* **usable** _(with rough but complete docs, possibly incomplete functionality)_\n  * [gix](https://github.com/GitoxideLabs/gitoxide/blob/main/crate-status.md#gix) (**⬅ entrypoint**)\n  * [gix-object](https://github.com/GitoxideLabs/gitoxide/blob/main/crate-status.md#gix-object)\n  * [gix-validate](https://github.com/GitoxideLabs/gitoxide/blob/main/crate-status.md#gix-validate)\n  * [gix-url](https://github.com/GitoxideLabs/gitoxide/blob/main/crate-status.md#gix-url)\n  * [gix-packetline](https://github.com/GitoxideLabs/gitoxide/blob/main/crate-status.md#gix-packetline)\n  * [gix-packetline-blocking](https://github.com/GitoxideLabs/gitoxide/blob/main/crate-status.md#gix-packetline)\n  * [gix-transport](https://github.com/GitoxideLabs/gitoxide/blob/main/crate-status.md#gix-transport)\n  * [gix-protocol](https://github.com/GitoxideLabs/gitoxide/blob/main/crate-status.md#gix-protocol)\n  * [gix-pack](https://github.com/GitoxideLabs/gitoxide/blob/main/crate-status.md#gix-pack)\n  * [gix-odb](https://github.com/GitoxideLabs/gitoxide/blob/main/crate-status.md#gix-odb)\n  * [gix-commitgraph](https://github.com/GitoxideLabs/gitoxide/blob/main/crate-status.md#gix-commitgraph)\n  * [gix-diff](https://github.com/GitoxideLabs/gitoxide/blob/main/crate-status.md#gix-diff)\n  * [gix-traverse](https://github.com/GitoxideLabs/gitoxide/blob/main/crate-status.md#gix-traverse)\n  * [gix-features](https://github.com/GitoxideLabs/gitoxide/blob/main/crate-status.md#gix-features)\n  * [gix-credentials](https://github.com/GitoxideLabs/gitoxide/blob/main/crate-status.md#gix-credentials)\n  * [gix-sec](https://github.com/GitoxideLabs/gitoxide/blob/main/crate-status.md#gix-sec)\n  * [gix-quote](https://github.com/GitoxideLabs/gitoxide/blob/main/crate-status.md#gix-quote)\n  * [gix-discover](https://github.com/GitoxideLabs/gitoxide/blob/main/crate-status.md#gix-discover)\n  * [gix-path](https://github.com/GitoxideLabs/gitoxide/blob/main/crate-status.md#gix-path)\n  * [gix-attributes](https://github.com/GitoxideLabs/gitoxide/blob/main/crate-status.md#gix-attributes)\n  * [gix-ignore](https://github.com/GitoxideLabs/gitoxide/blob/main/crate-status.md#gix-ignore)\n  * [gix-pathspec](https://github.com/GitoxideLabs/gitoxide/blob/main/crate-status.md#gix-pathspec)\n  * [gix-index](https://github.com/GitoxideLabs/gitoxide/blob/main/crate-status.md#gix-index)\n  * [gix-revision](https://github.com/GitoxideLabs/gitoxide/blob/main/crate-status.md#gix-revision)\n  * [gix-revwalk](https://github.com/GitoxideLabs/gitoxide/blob/main/crate-status.md#gix-revwalk)\n  * [gix-command](https://github.com/GitoxideLabs/gitoxide/blob/main/crate-status.md#gix-command)\n  * [gix-prompt](https://github.com/GitoxideLabs/gitoxide/blob/main/crate-status.md#gix-prompt)\n  * [gix-refspec](https://github.com/GitoxideLabs/gitoxide/blob/main/crate-status.md#gix-refspec)\n  * [gix-fs](https://github.com/GitoxideLabs/gitoxide/blob/main/crate-status.md#gix-fs)\n  * [gix-utils](https://github.com/GitoxideLabs/gitoxide/blob/main/crate-status.md#gix-utils)\n  * [gix-hashtable](https://github.com/GitoxideLabs/gitoxide/blob/main/crate-status.md#gix-hashtable)\n  * [gix-worktree](https://github.com/GitoxideLabs/gitoxide/blob/main/crate-status.md#gix-worktree)\n  * [gix-bitmap](https://github.com/GitoxideLabs/gitoxide/blob/main/crate-status.md#gix-bitmap)\n  * [gix-negotiate](https://github.com/GitoxideLabs/gitoxide/blob/main/crate-status.md#gix-negotiate)\n  * [gix-filter](https://github.com/GitoxideLabs/gitoxide/blob/main/crate-status.md#gix-filter)\n  * [gix-worktree-stream](https://github.com/GitoxideLabs/gitoxide/blob/main/crate-status.md#gix-worktree-stream)\n  * [gix-archive](https://github.com/GitoxideLabs/gitoxide/blob/main/crate-status.md#gix-archive)\n  * [gix-submodule](https://github.com/GitoxideLabs/gitoxide/blob/main/crate-status.md#gix-submodule)\n  * [gix-status](https://github.com/GitoxideLabs/gitoxide/blob/main/crate-status.md#gix-status)\n  * [gix-worktree-state](https://github.com/GitoxideLabs/gitoxide/blob/main/crate-status.md#gix-worktree-state)\n  * [gix-date](https://github.com/GitoxideLabs/gitoxide/blob/main/crate-status.md#gix-date)\n  * [gix-dir](https://github.com/GitoxideLabs/gitoxide/blob/main/crate-status.md#gix-dir)\n  * [gix-merge](https://github.com/GitoxideLabs/gitoxide/blob/main/crate-status.md#gix-merge)\n  * [gix-shallow](https://github.com/GitoxideLabs/gitoxide/blob/main/crate-status.md#gix-shallow)\n  * `gitoxide-core`\n* **very early**  _(possibly without any documentation and many rough edges)_\n  * [gix-blame](https://github.com/GitoxideLabs/gitoxide/blob/main/crate-status.md#gix-blame)\n* **idea** _(just a name placeholder)_\n  * [gix-note](https://github.com/GitoxideLabs/gitoxide/blob/main/crate-status.md#gix-note)\n  * [gix-fetchhead](https://github.com/GitoxideLabs/gitoxide/blob/main/crate-status.md#gix-fetchhead)\n  * [gix-lfs](https://github.com/GitoxideLabs/gitoxide/blob/main/crate-status.md#gix-lfs)\n  * [gix-rebase](https://github.com/GitoxideLabs/gitoxide/blob/main/crate-status.md#gix-rebase)\n  * [gix-sequencer](https://github.com/GitoxideLabs/gitoxide/blob/main/crate-status.md#gix-sequencer)\n  * [gix-tui](https://github.com/GitoxideLabs/gitoxide/blob/main/crate-status.md#gix-tui)\n  * [gix-tix](https://github.com/GitoxideLabs/gitoxide/blob/main/crate-status.md#gix-tix)\n  * [gix-bundle](https://github.com/GitoxideLabs/gitoxide/blob/main/crate-status.md#gix-bundle)\n  * [gix-fsck](https://github.com/GitoxideLabs/gitoxide/blob/main/crate-status.md#gix-fsck)\n\n### Stress Testing\n  * [x] Verify huge packs\n  * [x] Explode a pack to disk\n  * [x] Generate and verify large commit graphs\n  * [ ] Generate huge pack from a lot of loose objects\n\n### Stability and MSRV\n\nOur [stability guide] helps to judge how much churn can be expected when depending on crates in this workspace.\n\n[stability guide]: https://github.com/GitoxideLabs/gitoxide/blob/main/STABILITY.md\n\n## Installation\n\n### Download a Binary Release\n\nUsing `cargo binstall`, one is able to fetch [binary releases][releases]. You can install it via `cargo install cargo-binstall`, assuming\nthe [rust toolchain][rustup] is present.\n\nThen install gitoxide with `cargo binstall gitoxide`.\n\nSee the [releases section][releases] for manual installation and various alternative builds that are _slimmer_ or _smaller_, depending\non your needs, for _Linux_, _MacOS_ and _Windows_.\n\n[releases]: https://github.com/GitoxideLabs/gitoxide/releases\n\n### Download from Arch-Repository\n\nFor Arch Linux you can download `gitoxide` from `community` repository:\n```\npacman -S gitoxide\n```\n\n### Download from Exherbo Linux Rust repository\n\nFor Exherbo Linux you can download `gitoxide` from the [Rust](https://gitlab.exherbo.org/exherbo/rust/-/tree/master/packages/dev-scm/gitoxide) repository:\n```\ncave resolve -x repository/rust\ncave resolve -x gitoxide\n```\n\n### From Source via Cargo\n\n`cargo` is the Rust package manager which can easily be obtained through [rustup]. With it, you can build your own binary\neffortlessly and for your particular CPU for additional performance gains.\n\nThe minimum supported Rust version is [documented in the CI configuration](https://github.com/GitoxideLabs/gitoxide/blob/main/.github/workflows/msrv.yml#L23),\nthe latest stable one will work as well.\n\nThere are various build configurations, all of them are [documented here](https://docs.rs/crate/gitoxide/latest). The documentation should also be useful\nfor packagers who need to tune external dependencies.\n\n```\n# A way to install `gitoxide` with just Rust and a C compiler installed.\n# If there are problems with SSL certificates during clones, try to omit `--locked`.\ncargo install gitoxide --locked --no-default-features --features max-pure\n\n# The default installation, 'max', is the fastest, but also needs `cmake` to build successfully.\n# Installing it is platform-dependent.\ncargo install gitoxide\n\n# For smaller binaries and even faster build times that are traded for a less fancy CLI implementation,\n# use the `lean` feature.\ncargo install gitoxide --locked --no-default-features --features lean\n```\n\nThe following installs the latest unpublished `max` release directly from git:\n\n```sh\ncargo install --git https://github.com/GitoxideLabs/gitoxide  gitoxide\n```\n\n#### How to deal with build failures\n\nOn some platforms, installation may fail due to lack of tools required by `C` toolchains. This can generally be avoided by installation\nwith `cargo install gitoxide --no-default-features --features max-pure`.\n\nWhat follows is a list of known failures.\n\n- On Fedora, `perl` needs to be installed for `OpenSSL` to build properly. This can be done with the following command:\n  `dnf install perl` (see [this issue](https://github.com/GitoxideLabs/gitoxide/issues/592)).\n-\n### Using Docker\n\nSome CI/CD pipelines leverage repository cloning. Below is a copy-paste-able example to build docker images for such workflows.\nAs no official image exists (at this time), an image must first be built.\n\n> [!NOTE]\n> The dockerfile isn't continuously tested as it costs too much time and thus might already be broken.\n> PRs are welcome.\n\n#### Building the most compatible base image\n\n```sh\ndocker build -f etc/docker/Dockerfile.alpine -t gitoxide:latest --compress . --target=pipeline\n```\n\n#### Basic usage in a Pipeline\n\nFor example, if a `Dockerfile` currently uses something like `RUN git clone https://github.com/GitoxideLabs/gitoxide`, first build the image:\n\n```sh\ndocker build -f etc/docker/Dockerfile.alpine -t gitoxide:latest --compress .\n```\n\nThen copy the binaries into your image and replace the `git` directive with a `gix` equivalent.\n\n```dockerfile\nCOPY --from gitoxide:latest /bin/gix /usr/local/bin/\nCOPY --from gitoxide:latest /bin/ein /usr/local/bin/\n\nRUN /usr/local/bin/gix clone --depth 1 https://github.com/GitoxideLabs/gitoxide gitoxide\n```\n\n\n[releases]: https://github.com/GitoxideLabs/gitoxide/releases\n[rustup]: https://rustup.rs\n\n## Usage\n\nOnce installed, there are two binaries:\n\n* **ein**\n  * high level commands, _porcelain_, for every-day use, optimized for a pleasant user experience\n* **gix**\n  * low level commands, _plumbing_, for use in more specialized cases and to validate newly written code in real-world scenarios\n\n## Project Goals\n\nProject goals can change over time as we learn more, and they can be challenged.\n\n * **a pure-rust implementation of git**\n   * including *transport*, *object database*, *references*, *cli* and *tui*\n   * a simple command-line interface is provided for the most common git operations, optimized for\n     user experience. A *simple-git* if you so will.\n   * be the go-to implementation for anyone who wants to solve problems around git, and become\n     *the* alternative to `GitPython` and *libgit2* in the process.\n   * become the foundation for a distributed alternative to GitHub, and maybe even for use within GitHub itself\n * **learn from the best to write the best possible idiomatic Rust**\n   * *libgit2* is a fantastic resource to see what abstractions work, we will use them\n   * use Rust's type system to make misuse impossible\n * **be the best performing implementation**\n   * use Rust's type system to optimize for work not done without being hard to use\n   * make use of parallelism from the get go\n   * _sparse checkout_ support from day one\n * **assure on-disk consistency**\n   * assure reads never interfere with concurrent writes\n   * assure multiple concurrent writes don't cause trouble\n * **take shortcuts, but not in quality**\n   * binaries may use `anyhow::Error` exhaustively, knowing these errors are solely user-facing.\n   * libraries use light-weight custom errors implemented using `quick-error` or `thiserror`.\n   * internationalization is nothing we are concerned with right now.\n   * IO errors due to insufficient amount of open file handles don't always lead to operation failure\n * **Cross platform support, including Windows**\n   * With the tools and experience available here there is no reason not to support Windows.\n   * [Windows is tested on CI](https://github.com/GitoxideLabs/gitoxide/blob/df66d74aa2a8cb62d8a03383135f08c8e8c579a8/.github/workflows/rust.yml#L34)\n     and failures do prevent releases.\n\n## Non-Goals\n\nProject non-goals can change over time as we learn more, and they can be challenged.\n\n * **replicate `git` command functionality perfectly**\n   * `git` is `git`, and there is no reason to not use it. Our path is the one of simplicity to make\n     getting started with git easy.\n * **be incompatible to git**\n   * the on-disk format must remain compatible, and we will never contend with it.\n * **use async IO everywhere**\n   * for the most part, git operations are heavily reliant on memory mapped IO as well as CPU to decompress data,\n     which doesn't lend itself well to async IO out of the box.\n   * Use `blocking` as well as `gix-features::interrupt` to bring operations into the async world and to control\n     long running operations.\n   * When connecting or streaming over TCP connections, especially when receiving on the server, async seems like a must\n     though, but behind a feature flag.\n\n## Contributions\n\nIf what you have seen so far sparked your interest to contribute, then let us say: We are happy to have you and help you to get started.\n\nWe recommend running `just test` during the development process to assure CI is green before pushing.\n\nA backlog for work ready to be picked up is [available in the Project's Kanban board][project-board], which contains instructions on how\nto pick a task. If it's empty or you have other questions, feel free to [start a discussion][discussions] or reach out to @Byron [privately][keybase].\n\nFor additional details, also take a look at the [collaboration guide].\n\n[collaboration guide]: https://github.com/GitoxideLabs/gitoxide/blob/main/COLLABORATING.md\n[project-board]: https://github.com/GitoxideLabs/gitoxide/projects\n[discussions]: https://github.com/GitoxideLabs/gitoxide/discussions\n[keybase]: https://keybase.io/byronbates\n[cargo-diet]: https://crates.io/crates/cargo-diet\n\n### Getting started with Video Tutorials\n\n- [Learning Rust with Gitoxide](https://youtube.com/playlist?list=PLMHbQxe1e9Mk5kOHrm9v20-umkE2ck_gE)\n   - In 17 episodes you can learn all you need to meaningfully contribute to `gitoxide`.\n- [Getting into Gitoxide](https://youtube.com/playlist?list=PLMHbQxe1e9MkEmuj9csczEK1O06l0Npy5)\n   - Get an introduction to `gitoxide` itself which should be a good foundation for any contribution, but isn't a requirement for contributions either.\n- [Gifting Gitoxide](https://www.youtube.com/playlist?list=PLMHbQxe1e9MlhyyZQXPi_dc-bKudE-WUw)\n   - See how PRs are reviewed along with a lot of inner monologue.\n\n#### Other Media\n\n- [Rustacean Station Podcast](https://rustacean-station.org/episode/055-sebastian-thiel/)\n\n## Roadmap\n\n### Features for 1.0\n\nProvide a CLI to for the most basic user journey:\n\n* [x] initialize a repository\n* [x] fetch\n    * [ ] and update worktree\n* clone a repository\n   - [ ] bare\n   - [ ] with working tree\n* [ ] create a commit after adding worktree files\n* [x] add a remote\n* [ ] push\n  * [x] create (thin) pack\n\n### Ideas for Examples\n\n* [ ] `gix tool open-remote` open the URL of the remote, possibly after applying known transformations to go from `ssh` to `https`.\n* [ ] `tix` as example implementation of `tig`, displaying a version of the commit graph, useful for practicing how highly responsive GUIs can be made.\n* [ ] Something like [`git-sizer`](https://github.com/github/git-sizer), but leveraging extreme decompression speeds of indexed packs.\n* [ ] Open up SQL for git using [sqlite virtual tables](https://github.com/rusqlite/rusqlite/blob/master/tests/vtab.rs). Check out gitqlite\n  as well. What would an MVP look like? Maybe even something that could ship with gitoxide. See [this go implementation as example](https://github.com/filhodanuvem/gitql).\n* [ ] A truly awesome history rewriter which makes it easy to understand what happened while avoiding all pitfalls. Think BFG, but more awesome, if that's possible.\n* [ ] `gix-tui` should learn a lot from [fossil-scm] regarding the presentation of data. Maybe [this](https://github.com/Lutetium-Vanadium/requestty/) can be used for prompts. Probably [magit] has a lot to offer, too.\n\n### Ideas for Spin-Offs\n\n* [ ] A system to integrate tightly with `gix-lfs` to allow a multi-tier architecture so that assets can be stored in git and are accessible quickly from an intranet location\n  (for example by accessing the storage read-only over the network) while changes are pushed immediately by the server to other edge locations, like _the cloud_ or backups. Sparse checkouts along with explorer/finder integrations\n  make it convenient to only work on a small subset of files locally. Clones can contain all configuration somebody would need to work efficiently from their location,\n  and authentication for the git history as well as LFS resources make the system secure. One could imagine encryption support for untrusted locations in _the cloud_\n  even though more research would have to be done to make it truly secure.\n* [ ] A [syncthing] like client/server application. This is to demonstrate how lower-level crates can be combined into custom applications that use\n  only part of git's technology to achieve their very own thing. Watch out for big file support, multi-device cross-syncing, the possibility for\n  untrusted destinations using full-encryption, case-insensitive and sensitive filesystems, and extended file attributes as well as ignore files.\n* An event-based database that uses commit messages to store deltas, while occasionally aggregating the actual state in a tree. Of course it's distributed by nature, allowing\n  people to work offline.\n    - It's abstracted to completely hide the actual data model behind it, allowing for all kinds of things to be implemented on top.\n    - Commits probably need a nanosecond component for the timestamp, which can be added via custom header field.\n    - having recording all changes allows for perfect merging, both on the client or on the server, while keeping a natural audit log which makes it useful for mission critical\n      databases in business.\n    * **Applications**\n      - Can markdown be used as database so issue-trackers along with meta-data could just be markdown files which are mostly human-editable? Could user interfaces\n        be meta-data aware and just hide the meta-data chunks which are now editable in the GUI itself? Doing this would make conflicts easier to resolve than an `sqlite`\n        database.\n      - A time tracker - simple data, very likely naturally conflict free, and interesting to see it in terms of teams or companies using it with maybe GitHub as Backing for authentication.\n        - How about supporting multiple different trackers, as in different remotes?\n\n[syncthing]: https://github.com/syncthing/syncthing\n[fossil-scm]: https://www.fossil-scm.org\n[magit]: https://magit.vc\n\n## Shortcomings & Limitations\n\nPlease take a look at the [`SHORTCOMINGS.md` file](https://github.com/GitoxideLabs/gitoxide/blob/main/SHORTCOMINGS.md) for details.\n\n## Credits\n\n* **itertools** _(MIT Licensed)_\n  * We use the `izip!` macro in code\n* **deflate2** _(MIT Licensed)_\n  * We use various abstractions to implement decompression and compression directly on top of the rather low-level `miniz_oxide` crate\n\n## 🙏 Special Thanks 🙏\n\nAt least for now this section is exclusive to highlight the incredible support that [Josh Triplett](https://github.com/joshtriplett) has provided to me\nin the form of advice, sponsorship and countless other benefits that were incredibly meaningful. Going full time with `gitoxide` would hardly have been\nfeasible without his involvement, and I couldn't be more grateful 😌.\n\n## License\n\nThis project is licensed under either of\n\n * Apache License, Version 2.0, ([LICENSE-APACHE](LICENSE-APACHE) or\n   http://www.apache.org/licenses/LICENSE-2.0)\n * MIT license ([LICENSE-MIT](LICENSE-MIT) or\n   http://opensource.org/licenses/MIT)\n\nat your option.\n\n## Fun facts\n\n* Originally @Byron was really fascinated by [this problem](https://github.com/gitpython-developers/GitPython/issues/765#issuecomment-396072153)\n  and believes that with `gitoxide` it will be possible to provide the fastest solution for it.\n* @Byron has been absolutely blown away by `git` from the first time he experienced git more than 13 years ago, and\n  tried to implement it in [various shapes](https://github.com/gitpython-developers/GitPython/pull/1028) and [forms](https://github.com/byron/gogit)\n  multiple [times](https://github.com/Byron/gitplusplus). Now with Rust @Byron finally feels to have found the right tool for the job!\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.3876953125,
          "content": "# Security Policy\n\n## Reporting a Vulnerability\n\nPlease feel free to [draft a GitHub advisory](https://github.com/GitoxideLabs/gitoxide/security/advisories/new), and I will work with you to disclose and or resolve the issue\nresponsibly.\n\nIf this doesn't seem like the right approach or there are questions, please feel free to reach out to the email used in Sebastian Thiel's commits.\n\nThank you.\n"
        },
        {
          "name": "SHORTCOMINGS.md",
          "type": "blob",
          "size": 2.3212890625,
          "content": "This file is for tracking features that are less well implemented or less powerful than their `git` counterparts for one reason or another.\n\n#### `gix`\n\n### gix-index\n\n* The `link` extension can be read, but won't be written. This effectively disables the use of a split index once a mutating operation is run on it with `gitixode`.\n\n### gix-protocol\n* **fetches using protocol V1 and stateful connections, i.e. ssh, git, file, may hang**\n    * This can be fixed by making response parsing.\n    * Note that this does not affect cloning, which works fine.\n\n### `gix-pack`\n* **Packfiles use memory maps**\n    * Even though they are comfortable to use and fast, they squelch IO errors.\n    * _potential remedy_: We could generalize the Pack to make it possible to work on in-memory buffers directly. That way, one\n      would initialize a Pack by reading the whole file into memory, thus not squelching IO errors at the expense of latency as well\n      as memory efficiency.\n* **Packfiles cannot load files bigger than 2^31 or 2^32 on 32 bit systems**\n    * As these systems cannot address more memory than that.\n    * _potential remedy_: implement a sliding window to map and unmap portions of the file as needed.\n        * However, those who need to access big packs on these systems would rather resort to `git` itself, allowing\n          our implementation to be simpler and potentially more performant.\n* **Objects larger than 32 bits cannot be loaded on 32 bit systems**\n    * in-memory representations objects cannot handle objects greater than the amount of addressable memory.\n    * This will not affect git LFS though.\n\n### `gix`\n\n* object replacements are read once upon opening the repository from their refs and changes to these won't be picked up.\n\n### `gix-url`\n\n* **gix-url** _might_ be more restrictive than what git allows as for the most part, it uses a browser grade URL parser.\n    * Thus far there is no proof for this, and as _potential remedy_ we could certainly re-implement exactly what git does\n      to handle its URLs.\n\n### `gix-features`\n\n* **sha1** isn't hardened (i.e. doesn't have collision detection). Needs [to be contributed](https://github.com/GitoxideLabs/gitoxide/issues/585).\n* **local time** is currently impeded by [this issue](https://github.com/time-rs/time/issues/293#issuecomment-909158529) but it's planned to resolve it eventually.\n"
        },
        {
          "name": "STABILITY.md",
          "type": "blob",
          "size": 10.4853515625,
          "content": "# Stability\n\nEven though this project adheres to [semver], this guide aims to explain how semantic versioning is used exactly and how we aim to provide stability within an\never-changing codebase.\n\nPlease note that this guide isn't stable itself and may be adjusted to fit changes in requirements or new ways are discovered.\n\n## Terminology\n\n- _dependent crate_\n  - A crate which depends on a crate in this workspace directly.\n- _downstream crate_\n  - A crate which directly or indirectly depends on a crate in this workspace.\n- _workspace crate_\n  - A crate which is a member of this workspace and hence is stored in this repository\n- _breaking change_\n  - A change in code that requires a `dependent crate` to adjust their code to fix compile errors.\n- _release_\n  - A new version of a crate is published to crates.io\n- _development version_\n  - A crate version whose _major_ version is 0.\n- _release version_\n  - A crate version whose _major_ version is 1 or higher.\n- _initial development phase_ (IDP)\n  - The phase of development leading up to producing a crate with a major version of 1 or greater, as per `semver`.\n  - Not to be confused with the term _pre-release_, which is used to indicate any release version prior to an actual release, like `1.1.0-beta.1`.\n\n## Tiers\n\nThe project uses three stability tiers for all of its crates, and all crates use [semver] for their version numbers.\nTiers differ primarily in the time between breaking changes, which always have to be announced with `PRs` as per\nour [collaboration guide].\n\nThe following schematic helps to visualize what follows.\n\n```text\n                Release Software v1.X\n    Stability Tier 1 ═════════════════════════════╗\n    ║                                             ║\n    ║    gix──────────────┐ ein──────────────┐    ║\n    ║    │  plumbing app  │ │  porcelain app │    ║\n    ║    └────────────────┘ └────────────────┘    ║\n    ║             │                  │            ║\n    ║             ▼                  ▼            ║\n    ║    gitoxide-core───────────────────────┐    ║\n    ║    │        application functionality  │    ║\n    ║    └───────────────────────────────────┘    ║\n    ║                      │                      ║\n    ║                      ▼                      ║\n    ║    gix   ──────────────────────────────┐    ║\n    ║    │                application crate  │─ ─ ╬ ─\n    ║    └───────────────────────────────────┘    ║  │\n    ║                      │                      ║\n    ║                      ▼                      ║  │\n    ║    Foundation Crates───────────────────┐    ║\n    ║    │ ┌─────────────┐   ┌─────────────┐ │    ║  │\n    ║    │ │  gix-hash   │   │  gix-actor  │ │    ║\n    ║    │ └─────────────┘   └─────────────┘ │    ║  │\n    ║    │ ┌─────────────┐   ┌─────────────┐ │    ║\n    ║    │ │   gix-ref   │   │ gix-config  │ │    ║  │\n    ║    │ └─────────────┘   └─────────────┘ │    ║\n    ║    │ ┌─────────────┐   ┌─────────────┐ │    ║  │\n    ║    │ │ gix-object  │   │  gix-lock   │ │    ║\n    ║    │ └─────────────┘   └─────────────┘ │    ║  │\n    ║    │ ┌───────────────────────────────┐ │    ║\n    ║    │ │         gix-features          │ │    ║  │\n    ║    │ └───────────────────────────────┘ │    ║\n    ║    └───────────────────────────────────┘    ║  │\n    ║                                             ║\n    ╚═════════════════════════════════════════════╝  │\n\n    Stability Tier 2 ─────────────────────────────┐  │\n    │                                             │\n    │    Plumbing Crates─────────────────────┐    │  │\n    │    │ ┌─────────────┐   ┌─────────────┐ │    │\n    │    │ │   gix-odb   │   │  gix-diff   │ │    │  │\n    │    │ └─────────────┘   └─────────────┘ │    │\n    │    │ ┌─────────────┐   ┌─────────────┐ │    │  │\n    │    │ │gix-traverse │   │  gix-pack   │ │◀ ─ ┼ ─\n    │    │ └─────────────┘   └─────────────┘ │    │\n    │    │ ┌ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ┐ │    │\n    │    │            …many more…            │    │\n    │    │ └ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ┘ │    │\n    │    └───────────────────────────────────┘    │\n    │                                             │\n    └─────────────────────────────────────────────┘\n```\n\n### Tier 3: IDP crates\n\nCrates in initial development are marked with the major version number zero, for example `0.1.4` and live in stability tier 3 _(->ST3)_.\n\nIt's acceptable to let each breaking change be immediately followed by a minor version release.\n\n### Tier 2: released plumbing crates\n\nReleased plumbing crates are marked with major version number 1 or above, for example `1.2.4` and live in stability tier 2 _(->ST2)_.\n\n*These crates may not expose parts of unstable crates in their public API*.\n\nBreaking changes are collected and may be released no more often than every 4 weeks by incrementing the major version number.\n\nFor example, `gix-odb` and `gix-ref` both have breaking changes, where `gix-odb`'s change is on August 1st and `gix-ref`'s dependent change\nis on September 10th. `gix-odb`'s breaking change can be released earliest on September 1st, whereas `gix-ref` can be released earliest at October 10th.\n\nIf there are additional breaking changes without a release, these push back the earliest release date accordingly.\n\n### Tier 1: released apps and application crates\n\nReleased apps and application crates are marked with major version number 1 or above, like `2.3.0+21.06` and live in tier 1 _(->ST1)_,\nwith the build identifiers for year (`21`) and month `06` appended, based on the actual release year and month.\n\nBreaking changes are collected and may be released no more often than every 6 months by incrementing the major version number. If there are additional breaking changes,\nthese push bac the release date so that they can be tested at least for 3 months. For example, a breaking change happens in January 01, and another breaking change in February 15.\nThe earliest release date is July 1st. Had the second breaking change happened in April 01, the release date would have to be pushed to August 1st.\n\nIntermediate pre-releases may be created at most every 4 weeks by appending `-alpha.X` where `X` is the sequential release number. These should help testing\nbreaking changes or new features without forcing the use of `git` sources for dependencies in cargo manifests. Pre-release releases must pin all the pre-release\ncrates they depend on to prevent automatic upgrades. Dependent external crates are advised to pin their `alpha` dependencies with `=<version>` version requirements to avoid\nautomatic updates which may be breaking.\n\nOnce breaking changes are known to be planned, deprecation warnings should be provided in intermediate pre-releases.\n\nMinor version updates for new features can be released when needed assuming there are no other breaking changes, updating the build identifiers for year and month accordingly.\n\n## The _Minimal Supported Rust Version_ (->MSRV)\n\nThe MSRV is automatically assumed to be the latest stable version for all crates with the following exception: `gix` and all it's dependencies must\nadhere to an MSRV, as validated by the `msrv.yml` GitHub workflow.\n\nIncreasing the MSRV is *not* considered a breaking change like is the case for most other crates in the community.\n\nPlease let us know if you have other requirement and we see if we can provide stability guarantees for it or reduce the MSRV to a given version.\n\n## Transitioning from IDP to production crates\n\nHow do we avoid staying in the initial development phase (IDP) forever?\n\nThere is a couple of questions to ask and answer positively:\n\n- _Is everything in it's tracking issue named \"`<crate-name>` towards 1.0\" resolved?_\n- _Are all checkboxes in its section in `crate-status.md` ticked (and is it OK if not)?_\n- _Does the crate fulfill its intended purpose well enough?_\n- _Do the dependent workspace crates fulfill their intended purposes well enough?_\n- _Do they hide types and functionality of lower-tier workspace crates and external IDP crates?_\n\nFor plumbing crates, the intended purpose is narrow which would allow them to transition earlier. For plumbing crates, if in doubt or fear of future requirements\nespecially if dependent crates are still early in development, prefer to release them anyway and live with requirements of _ST2_.\n\nApps and application crates may take longer as they are larger in scope. A good indicator for them to get to a release may be maturing plumbing crates they\nuse. Their scope should also be narrowed to a minimal viable product.\n\n[semver]: https://semver.org\n[collaboration guide]: https://github.com/GitoxideLabs/gitoxide/blob/main/COLLABORATING.md\n"
        },
        {
          "name": "_typos.toml",
          "type": "blob",
          "size": 0.7490234375,
          "content": "[files]\nextend-exclude = [\n    \"**/CHANGELOG.md\",\n    \"*.response\",\n    \"etc/corpus/repo_metadata.sample.jsonl\",\n    \"gix-config/benches/large_config_file.rs\",\n    \"gix-config/tests/fixtures/clusterfuzz-testcase-minimized-gix-config-parse-6431708583690240\",\n    \"gix-glob/tests/wildmatch/mod.rs\",\n    \"gix-path/tests/fixtures/fuzzed/54k-path-components.path\",\n]\nignore-hidden = false\n\n[default]\nextend-ignore-re = [\n    # PGP signature\n    \"[0-9A-Za-z+=]{44,}\",\n    '\"egal\"',\n    '\"bar\", \"bart\", \"ba\"',\n    '\"foo/ba\"',\n    '\"FO\", \"FO\", &\\[\\], \"FO\"',\n    '\"(BarFoO|BarFoOo|FoO|FoOo)\"',\n    \"\\\\|pn: &BStr\\\\| pn !=\",\n]\nextend-ignore-identifiers-re = [\n    # Git commit hash\n    \"[0-9a-f]{7,}\",\n    \"rela_[a-z_]+\",\n]\n\n[default.extend-identifiers]\n_pn = \"_pn\"\nein = \"ein\"\n"
        },
        {
          "name": "build.rs",
          "type": "blob",
          "size": 0.5009765625,
          "content": "use std::process::Command;\n\nfn main() {\n    let version = Command::new(if cfg!(windows) { \"git.exe\" } else { \"git\" })\n        .args([\"describe\", \"--match=v*\\\\.*\\\\.*\"])\n        .output()\n        .ok()\n        .and_then(|out| parse_describe(&out.stdout))\n        .unwrap_or_else(|| env!(\"CARGO_PKG_VERSION\").into());\n\n    println!(\"cargo:rustc-env=GIX_VERSION={version}\");\n}\n\nfn parse_describe(input: &[u8]) -> Option<String> {\n    let input = std::str::from_utf8(input).ok()?;\n    input.trim().to_owned().into()\n}\n"
        },
        {
          "name": "crate-status.md",
          "type": "blob",
          "size": 38.3603515625,
          "content": "### gitoxide\n\n**gix** is a command-line interface (*CLI*) to access git repositories in various ways best described as low-level\nfor use by experts or those validating functionality in real-world scenarios. Performance and efficiency are staples\nof the implementation.\n\n**ein** is reserved for one-off tools that are useful to many, and will one day implement a truly unique workflow\nwith the potential to become the preferred way to interact with git repositories.\n\nPlease note that all functionality comes from the `gitoxide-core` library, which mirrors these capabilities\nand itself relies on all `gix-*` crates. It's not meant for consumption, for application development, please use `gix`.\n\n* **the `ein` program** - convenient and for humans\n    * [x] **init** - initialize a new non-bare repository with a `main` branch\n    * [ ] **clone** - initialize a local copy of a remote repository\n    * **tools**\n        * [x] **organize** - find all git repositories and place them in directories according to their remote paths\n        * [x] **find** - find all git repositories in a given directory - useful for tools like [skim][skim]\n        * [x] **estimate-hours** - estimate the time invested into a repository by evaluating commit dates.\n            * Based on the [git-hours] algorithm.\n            * See the [discussion][git-hours-discussion] for some performance data.\n* **the `gix` program** _(plumbing)_ - lower level commands for use during development\n    - As its main purpose is to help running the latest improvements in the real world, it's self-documenting without\n      duplicating its features here. Use `gix --help` to start discovery.\n\n[skim]: https://github.com/lotabout/skim\n[git-hours]: https://github.com/kimmobrunfeldt/git-hours/blob/8aaeee237cb9d9028e7a2592a25ad8468b1f45e4/index.js#L114-L143\n[git-hours-discussion]: https://github.com/GitoxideLabs/gitoxide/discussions/78\n\n### gix\n\nThe top-level crate that acts as hub to all functionality provided by the `gix-*` plumbing crates.\n\n* [x] utilities for applications to make long running operations interruptible gracefully and to support timeouts in servers.\n* [x] handle `core.repositoryFormatVersion` and extensions\n* [x] support for unicode-precomposition of command-line arguments (needs explicit use in parent application)\n* [ ] strict object creation (validate objects referenced by newly created objects exist)\n* [ ] strict hash verification (validate that objects actually have the hashes they claim to have)\n* **Repository**\n    * [x] discovery\n        * [x] option to not cross file systems (default)\n        * [x] handle git-common-dir\n        * [x] support for `GIT_CEILING_DIRECTORIES` environment variable\n        * [ ] handle other non-discovery modes and provide control over environment variable usage required in applications\n    * [x] rev-parse\n       - [ ] handle relative paths as relative to working directory\n       - [x] handle `upstream` and `push` resolution.\n    * [x] rev-walk\n        * [x] include tips\n        * [ ] exclude commits\n    * [x] instantiation\n    * [x] access to refs and objects\n    * [x] create a pathspec-search from a set of strings\n        - [ ] allow to construct Pathspecs using data structure instead of enforcing them to be passed as strings.\n    * **credentials**\n        * [x] run `git credential` directly\n        * [x] use credential helper configuration and to obtain credentials with `gix_credentials::helper::Cascade`\n    * **traverse**\n        * [x] commit graphs\n        * [ ] make [git-notes](https://git-scm.com/docs/git-notes) accessible\n        * [x] tree entries\n    * **diffs/changes**\n        * [x] tree with other tree\n            * [x] respect case-sensitivity of host filesystem.\n            * [x] a way to access various diff related settings or use them\n            * [x] respect `diff.*.textconv`, `diff.*.cachetextconv` and external diff viewers with `diff.*.command`,\n              [along with support for reading `diff` gitattributes](https://github.com/git/git/blob/73876f4861cd3d187a4682290ab75c9dccadbc56/Documentation/gitattributes.txt#L699:L699).\n            * **rewrite tracking**\n                * **deviation** - git keeps up to four candidates whereas we use the first-found candidate that matches the similarity percentage.\n                  This can lead to different sources being found. As such, we also don't consider the filename at all.\n                * [x] handle binary files correctly, and apply filters for that matter\n                * [x] computation limit with observable reduction of precision when it is hit, for copies and renames separately\n                * **by identity**\n                    * [x] renames (sym-links are only ever compared by identity)\n                    * [x] copies\n                * **by similarity** - similarity factor controllable separately from renames\n                    * [x] renames\n                    * [x] copies\n                * [x] 'find-copies-harder' - find copies with the source being the entire tree.\n        * [x] tree or index with working tree\n             - [x] rename tracking\n             - [x] submodule status (recursive)\n        * [x] diffs between modified blobs with various algorithms\n        * [ ] tree with index (via index-from-tree and index)\n            - [ ] rename tracking\n            - [ ] submodule status (recursive)\n    * [x] initialize\n        * [x] Proper configuration depending on platform (e.g. ignorecase, filemode, …)\n    * **Id**\n        * [x] short hashes with detection of ambiguity.\n    * **Commit**\n        * [x] `git describe` like functionality, with optional commit-graph acceleration\n        * [x] create new commit from tree\n    * **Objects**\n        * [x] lookup\n        * [x] peel to object kind\n        * [ ] create [signed commits and tags](https://github.com/GitoxideLabs/gitoxide/issues/12)\n        * **trees**\n            * [x] lookup path\n            * [x] edit\n    * **references**\n        * [x] peel to end\n        * [x] ref-log access\n        * [x] remote name\n        * [x] find remote itself\n            - [ ] respect `branch.<name>.merge` in the returned remote.\n    * **remotes**\n        * [x] clone\n            * [x] shallow\n                * [ ] include-tags when shallow is used (needs separate fetch)\n                * [ ] prune non-existing shallow commits\n            * [ ] [bundles](https://git-scm.com/docs/git-bundle)\n        * [x] fetch\n            * [x] shallow (remains shallow, options to adjust shallow boundary)\n            * [ ] a way to auto-explode small packs to avoid them to pile up\n            * [x] 'ref-in-want'\n            * [ ] 'wanted-ref'\n            * [x] standard negotiation algorithms `consecutive`, `skipping` and `noop`.\n        * [ ] push\n        * [x] ls-refs\n        * [x] ls-refs with ref-spec filter\n        * [x] list, find by name\n        * [x] create in memory\n        * [ ] groups\n        * [ ] [remote and branch files](https://github.com/git/git/blob/master/remote.c#L300)\n    * [ ] execute hooks\n    * **refs**\n        * [ ] run transaction hooks and handle special repository states like quarantine\n        * [ ] support for different backends like `files` and `reftable`\n    * **main or linked worktree**\n        * [ ] add files with `.gitignore` handling\n        * [ ] checkout with conversions like clean + smudge as in `.gitattributes`\n        * [ ] _diff_ index with working tree\n        * [ ] sparse checkout support\n        * [x] read per-worktree config if `extensions.worktreeConfig` is enabled.\n        * **index**\n            * [ ] tree from index\n            * [x] index from tree\n    * **worktrees**\n        * [x] open a repository with worktrees\n            * [x] read locked state\n            * [ ] obtain 'prunable' information\n        * [x] proper handling of worktree related refs\n        * [x] create a byte stream and create archives for such a stream, including worktree filters and conversions\n        * [ ] create, move, remove, and repair\n        * [x] access exclude information\n        * [x] access attribute information\n        * [x] respect `core.worktree` configuration\n            - **deviation**\n                * The delicate interplay between `GIT_COMMON_DIR` and `GIT_WORK_TREE` isn't implemented.\n    * **config**\n        * [x] read the primitive types `boolean`, `integer`, `string`\n        * [x] read and interpolate trusted paths\n        * [x] low-level API for more elaborate access to all details of `git-config` files\n        * [ ] a way to make changes to individual configuration files in memory\n        * [ ] write configuration back\n        * [ ] auto-refresh configuration values after they changed on disk\n        * [ ] facilities to apply the [url-match](https://git-scm.com/docs/git-config#Documentation/git-config.txt-httplturlgt) algorithm and to [normalize urls](https://github.com/git/git/blob/be1a02a17ede4082a86dfbfee0f54f345e8b43ac/urlmatch.c#L109:L109) before comparison.\n    * [x] mailmap\n    * [x] object replacements (`git replace`)\n    * [x] read git configuration\n    * [ ] merging\n    * [ ] stashing\n    * [ ] Use _Commit Graph_ to speed up certain queries\n    * [ ] subtree\n    * [ ] interactive rebase status/manipulation\n    * **submodules**\n        * [x] handle 'old' form for reading and detect old form\n        * [x] list\n        * [ ] edit\n* [ ] API documentation\n    * [ ] Some examples\n\n### gix-actor\n* [x] read and write a signature that uniquely identifies an actor within a git repository\n* [x] a way to parse `name <email>` tuples (instead of full signatures) to facilitate parsing\n      commit trailers.\n* [x] a way to write only actors, useful for commit trailers.\n\n### gix-hash\n* types to represent hash digests to identify git objects.\n* used to abstract over different kinds of hashes, like SHA1 and the upcoming SHA256\n* [x] API documentation\n    * [ ] Some examples\n\n### gix-chunk\n* [x] decode the chunk file table of contents and provide convenient API\n* [x] write the table of contents\n\n### gix-hashtable\n* [x] hashmap\n* [x] hashset\n\n### gix-utils\n* **filesystem**\n   * [x] probe capabilities\n   * [x] symlink creation and removal\n   * [x] file snapshots\n* [ ] **BString Interner with Arena-Backing and arbitrary value association**\n    - probably based on [`internment`](https://docs.rs/internment/latest/internment/struct.Arena.html#),\n      but needs `bumpalo` support to avoid item allocations/boxing, and avoid internal `Mutex`. (key type is pointer based).\n\n### gix-fs\n* [x] probe capabilities\n* [x] symlink creation and removal\n* [x] file snapshots\n* [x] stack abstraction\n\n### gix-object\n* *decode (zero-copy)* borrowed objects\n    * [x] commit\n      * [ ] parse [trailers](https://git-scm.com/docs/git-interpret-trailers#_description)\n    * [x] tree\n* encode owned objects\n    * [x] commit\n    * [x] tree\n    * [x] tag\n      * [x] [name validation][tagname-validation]\n* [x] transform borrowed to owned objects\n* [x] edit trees efficiently and write changes back\n    - [ ] See if `gix-fs::InternedMap` improves performance.\n* [x] API documentation\n    * [ ] Some examples\n\n### gix-pack\n* **packs**\n    * [x] traverse pack index\n    * [x] 'object' abstraction\n        * [x] decode (zero copy)\n        * [x] verify checksum\n    * [x] simple and fast pack traversal\n    * [x] decode\n        * [x] full objects\n        * [x] deltified objects\n    * **decode**\n        * _decode a pack from `Read` input_\n            * [x] Add support for zlib-ng for 20% faster _decompression_ performance\n            * [x] `Read` to `Iterator` of entries\n                * _read as is, verify hash, and restore partial packs_\n        * [x] create index from pack alone (_much faster than git_)\n            * [x] resolve 'thin' packs\n    * **encode**\n        * [x] Add support for zlib-ng for 2.5x _compression_ performance\n        * [x] objects to entries iterator\n            * [x] input objects as-is\n            * [x] pack only changed objects as derived from input\n            * [x] base object compression\n            * [ ] delta compression\n               * [ ] respect the `delta=false` attribute\n            * [x] create 'thin' pack, i.e. deltas that are based on objects the other side has.\n            * [x] parallel implementation that scales perfectly\n        * [x] entries to pack data iterator\n        * [ ] write index along with the new pack\n    * [x] **verify** pack with statistics\n        * [x] brute force - less memory\n        * [x] indexed - optimal speed, but more memory\n    * **advanced**\n        * [x] Multi-Pack index file (MIDX)\n            * [x] read\n            * [x] write\n            * [x] verify\n        * [ ] 'bitmap' file\n        * [ ] [special handling for networked packs](https://github.com/git/git/blob/89b43f80a514aee58b662ad606e6352e03eaeee4/packfile.c#L949:L949)\n        * [ ] [detect and retry packed object reading](https://github.com/git/git/blob/89b43f80a514aee58b662ad606e6352e03eaeee4/packfile.c#L1268:L1268)\n* [x] API documentation\n    * [ ] Some examples\n\n### gix-odb\n* **loose object store**\n    * [x] traverse\n    * [x] read\n        * [x] into memory\n        * [x] streaming\n        * [x] verify checksum\n    * [x] streaming write for blobs\n    * [x] buffer write for small in-memory objects/non-blobs to bring IO down to open-read-close == 3 syscalls\n    * [ ] read object header (size + kind) without full decompression\n* **dynamic store**\n    * [x] auto-refresh of on-disk state\n    * [x] handles alternates\n    * [x] multi-pack indices\n    * [x] perfect scaling with cores\n    * [x] support for pack caches, object caches and MRU for best per-thread performance.\n    * [x] prefix/short-id lookup, with optional listing of ambiguous objects.\n    * [x] object replacements (`git replace`)\n    * [x] high-speed packed object traversal without wasted CPU time\n      - [ ] user defined filters\n    * [ ] read object header (size + kind) without full decompression\n* **sink**\n    * [x] write objects and obtain id\n* **alternates**\n    * _resolve links between object databases_\n    * [x] safe with cycles and recursive configurations\n    * [x] multi-line with comments and quotes\n* **promisor**\n    * It's vague, but these seem to be like index files allowing to fetch objects from a server on demand.\n* [x] API documentation\n    * [ ] Some examples\n\n### gix-diff\n\nCheck out the [performance discussion][gix-diff-performance] as well.\n\n* **tree**\n    * [x] changes needed to obtain _other tree_\n* **blobs**\n    * **patches**\n        * There are various ways to generate a patch from two blobs.\n        * [ ] text\n        * [ ] binary\n        * [ ] `git-apply` compatibility\n        * [ ] merge hunks that are close enough based on line-setting (`interhunk-lines`)\n        * [ ] white-space related settings\n    * **lines**\n        * [x] Simple line-by-line diffs powered by the `imara-diff` crate.\n* **generic rename tracker to find renames and copies**\n    * [x] find blobs by exact match\n    * [x] find blobs by similarity check\n    * [ ] heuristics to find best candidate\n    * [ ] find by basename to support similarity check\n        - Not having it can lead to issues when files with the same or similar content are part of a move\n          as files can be lost that way.\n    * [x] directory tracking\n        - [x] by identity\n        - [ ] by similarity\n* **blob**\n    * [x] a choice of to-worktree, to-git and to-worktree-if-needed conversions\n    * [x] `textconv` filters\n    * [x] special handling of files beyond the big-file threshold.\n    * [x] detection of binary files by looking at header (first 8k bytes)\n    * [x] caching of diff-able data\n    * [x] prepare invocation of external diff program\n        - [ ] pass meta-info\n* [ ] working with hunks of data\n* [ ] diff-heuristics match Git perfectly\n* [x] API documentation\n    * [ ] Examples\n\n[gix-diff-performance]: https://github.com/GitoxideLabs/gitoxide/discussions/74\n\n### gix-merge\n\n* [x] three-way content-merge analysis of **blobs** with choice of how to resolve conflicts\n    - [x] respect git attributes and drivers.\n    - [ ] choose how to resolve conflicts on the data-structure\n    - [ ] more efficient handling of paths with `merge=binary` attributes (do not load them into memory)\n    - [x] produce a new blob based on data-structure containing possible resolutions\n        - [x] `merge` style\n        - [x] `diff3` style\n        - [x] `zdiff` style\n    - [ ] various newlines-related options during the merge (see https://git-scm.com/docs/git-merge#Documentation/git-merge.txt-ignore-space-change).\n    - [ ] a way to control inter-hunk merging based on proximity (maybe via `gix-diff` feature which could use the same)\n* [x] **tree**-diff-heuristics match Git for its test-cases\n    - [x] a way to generate an index with stages, mostly conforming with Git.\n    - [ ] resolve to be *ours* or the *ancestors* version of the tree.\n    - [ ] submodule merges (*right now they count as conflicts if they differ*)\n    - [ ] assure sparse indices are handled correctly during application - right now we refuse.\n    - [ ] rewrite so that the whole logic can be proven to be correct - it's too insane now and probably has way \n          more possible states than are tested, despite best attempts.\n* [x] **commits** - with handling of multiple merge bases by recursive merge-base merge\n* [x] API documentation\n    * [ ] Examples\n\n### gix-blame\n\n* [x] commit-annotations for a single file\n    - [ ] progress\n    - [ ] interruptibility\n    - [ ] streaming\n- [ ] support for worktree changes (creates virtual commit on top of `HEAD`) \n- [ ] shallow-history support\n- [ ] rename tracking (track different paths through history)\n- [ ] commits to ignore\n- [ ] pass all blame-cornercases (from Git)\n* **Performance-Improvements**\n    * Without the following the performance isn't competitive with Git.\n    1. Implement custom graph walk which won't run down parents that don't have the path in question.\n    2. Implement access of trees from commit-graph and fill that information into the traversal info by default.\n    3. commit-graph with bloom filter, used to quickly check if a commit has a path.\n* [x] API documentation\n    * [ ] Examples\n\n### gix-traverse\n\nCheck out the [performance discussion][gix-traverse-performance] as well.\n\n* **trees**\n  * [x] nested traversal\n* **commits**\n  * [x] ancestor graph traversal similar to `git revlog`\n  * [ ] `commitgraph` support\n* [x] API documentation\n    * [ ] Examples\n\n[gix-traverse-performance]: https://github.com/GitoxideLabs/gitoxide/discussions/76\n\n### gix-shallow\n\nA utility crate with types and functionality related to shallow-file handling.\n\n### gix-url\n* As documented here: https://www.git-scm.com/docs/git-clone#_git_urls\n* **parse**\n    * [x] ssh URLs and SCP like syntax\n    * [x] file, git, and SSH\n    * [x] paths (OS paths, without need for UTF-8)\n* [x] username expansion for ssh and git urls\n* [x] convert URL to string\n* [x] API documentation\n    * [ ] Some examples\n\n### gix-packetline\n* [PKT-Line](https://github.com/git/git/blob/master/Documentation/technical/protocol-common.txt#L52:L52)\n* [x] encode\n* [x] decode (zero-copy)\n* [x] [error line](https://github.com/git/git/blob/master/Documentation/technical/pack-protocol.txt#L28:L28)\n* [x] [V2 additions](https://github.com/git/git/blob/master/Documentation/technical/protocol-v2.txt#L35:L36)\n* [x] [side-band mode](https://github.com/git/git/blob/master/Documentation/technical/pack-protocol.txt#L467:L467)\n* [x] `Read` from packet line with (optional) progress support via sidebands\n* [x] `Write` with built-in packet line encoding\n* [x] `async` support\n* [x] API documentation\n    * [ ] Some examples\n\n### gix-transport\n* No matter what we do here, timeouts must be supported to prevent hanging forever and to make interrupts destructor-safe.\n* **client**\n    * [x] general purpose `connect(…)` for clients\n        * [x] _file://_ launches service application\n        * [x] _ssh://_ launches service application in a remote shell using _ssh_\n        * [x] _git://_ establishes a tcp connection to a git daemon\n        * [x] _http(s)://_ establishes connections to web server\n            * [x] via `curl` (blocking only)\n            * [x] via `reqwest` (blocking only)\n        * [ ] pass context for scheme specific configuration, like timeouts\n    * [x] git://<service>\n        * [x] V1 handshake\n            * [x] send values + receive data with sidebands\n            * [ ] ~~support for receiving 'shallow' refs in case the remote repository is shallow itself (I presume)~~\n                * Since V2 doesn't seem to support that, let's skip this until there is an actual need. No completionist :D\n        * [x] V2 handshake\n            * [x] send command request, receive response with sideband support\n    * [x] http(s)://<service>\n        * [x] set identity for basic authentication\n        * [x] V1 handshake\n            * [x] send values + receive data with sidebands\n        * [x] V2 handshake\n            * [x] send command request, receive response with sideband support\n        * [ ] ~~'dumb'~~ - _we opt out using this protocol seems too slow to be useful, unless it downloads entire packs for clones?_\n    * [x] authentication failures are communicated by io::ErrorKind::PermissionDenied, allowing other layers to retry with authentication\n    * [x] `async` support\n* **server**\n    * [ ] general purpose `accept(…)` for servers\n* [x] API documentation\n    * [ ] Some examples\n\n#### Advanced HTTP transport features\n\n| **feature** | **curl** | **reqwest** |\n|-------------|----------|-------------|\n|      01     |          |             |\n|      02     |     X    |             |\n|      03     |          |      X      |\n|      04     |     X    |             |\n|      05     |          |             |\n\n* **01** -> async\n* **02** -> proxy support\n* **03** -> custom request configuration via fn(request)\n* **04** -> proxy authentication\n* **05** -> [reauthentication after redirect](https://github.com/git/git/blob/eea7033409a0ed713c78437fc76486983d211e25/http.c#L1931)\n\n### gix-protocol\n* _abstract over protocol versions to allow delegates to deal only with a single way of doing things_\n* [x] **credentials**\n    * [x] via gix-credentials\n    * [ ] via pure Rust implementation if no git is installed\n* [x] handshake\n    * parse initial response of V1 and V2 servers\n* [x] ls-refs\n    * [x] parse V1 refs as provided during handshake\n    * [x] parse V2 refs\n    * [ ] handle empty refs, AKA PKT-LINE(zero-id SP \"capabilities^{}\" NUL capability-list)\n* [x] fetch\n    * [x] detailed progress\n    * [x] control credentials provider to fill, approve and reject\n    * [x] initialize and validate command arguments and features sanely\n    * [x] abort early for ls-remote capabilities\n    * [x] packfile negotiation\n        * [x] delegate can support for all fetch features, including shallow, deepen, etc.\n        * [x] receive parsed shallow refs\n* [ ] push\n* [ ] remote helper protocol and integration\n* [x] API documentation\n    * [ ] Some examples\n\n### gix-attributes\n* [x] parse `.gitattribute` files\n* [ ] an attributes stack for matching paths to their attributes, with support for built-in `binary` macro for `-text -diff -merge`\n\n### gix-ignore\n* [x] parse `.gitignore` files\n* [x] an attributes stack for checking if paths are excluded\n\n### gix-quote\n* **ansi-c**\n  * [x] quote\n  * [ ] unquote\n\n### gix-mailmap\n* [x] parsing\n* [x] lookup and mapping of author names\n\n### gix-path\n* [x] transformations to and from bytes\n* [x] conversions between different platforms\n* [x] virtual canonicalization for more concise paths via `absolutize()`\n* [x] more flexible canonicalization with symlink resolution for paths which are partially virtual via `realpath()`\n* **spec**\n    * [ ] parse\n    * [ ] check for match\n\n### gix-pathspec\n* [x] parse single\n* [ ] parse file line by line (with or without quoting, NUL and LF/CRLF line separation) (see `--pathspec-from-file` and `--pathspec-file-nul`)\n* [x] matching of paths with git-attributes support\n* [ ] programmatic creation of pathspecs\n* [ ] `TryIntoPathspec` trait to parse strings or accept ready-made pathspecs as well, for use in APIs\n\n### gix-refspec\n* [x] parse\n* [x] matching of references and object names\n    * [x] for fetch\n    * [ ] for push\n\n### gix-command\n* [x] execute commands directly\n* [x] execute commands with `sh`\n* [ ] support for `GIT_EXEC_PATH` environment variable with `gix-sec` filter\n\n### gix-prompt\n* [x] open prompts for usernames for example\n* [x] secure prompts for password\n* [x] use `askpass` program if available\n* [ ] signal handling (resetting and restoring terminal settings)\n* [ ] windows prompts for `cmd.exe` and mingw terminals\n\n### gix-note\n\nA mechanism to associate metadata with any object, and keep revisions of it using git itself.\n\n* [ ] CRUD for git notes\n\n### gix-negotiate\n* **algorithms**\n  - [x] `noop`\n  - [x] `consecutive`\n  - [x] `skipping`\n\n### gix-fetchhead\n* [ ] parse `FETCH_HEAD` information back entirely\n* [ ] write typical fetch-head lines\n\n### gix-discover\n\n* [x] check if a git directory is a git repository\n* [x] find a git repository by searching upward\n   * [x] define ceilings that should not be surpassed\n   * [x] prevent crossing file-systems (non-windows only)\n* [x] handle linked worktrees\n* [ ] a way to handle `safe.directory`\n     - note that it's less critical to support it as `gitoxide` allows access but prevents untrusted configuration to become effective.\n\n### gix-date\n* [ ] parse git dates\n* [ ] serialize `Time`\n\n### gix-credentials\n* [x] launch git credentials helpers with a given action\n  - [x] built-in `git credential` program\n  - [x] as scripts\n  - [x] as absolute paths to programs with optional arguments\n  - [x] program name with optional arguments, transformed into `git credential-<name>`\n* [x] `helper::main()` for easy custom credential helper programs written in Rust\n\n### gix-filter\n\nProvide base-implementations for dealing with smudge and clean filters as well as filter processes, facilitating their development.\n\n* [ ] clean filter base\n* [ ] smudge filter base\n* [ ] filter process base\n\n### gix-sec\n\nProvides a trust model to share across gitoxide crates. It helps configuring how to interact with external processes, among other things.\n\n* **integrations**\n   * [x] gix-config\n   * [x] gix\n\n### gix-rebase\n* [ ] obtain rebase status\n* [ ] drive a rebase operation\n\n### gix-sequencer\n\nHandle human-aided operations which cannot be completed in one command invocation.\n\n### gix-lfs\n\nImplement git large file support using the process protocol and make it flexible enough to handle a variety of cases.\nMake it the best-performing implementation and the most convenient one.\n\n### gix-glob\n* [x] parse pattern\n* [x] a type for pattern matching of paths and non-paths, optionally case-insensitively.\n\n### gix-status\n* [x] differences between index and worktree to turn index into worktree\n    - [x] rename tracking\n    - [x] untracked files\n    - [ ] support for fs-monitor for modification checks\n* [ ] differences between index and index to learn what changed\n    - [ ] rename tracking\n\n### gix-worktree-state\n* handle the working **tree/checkout**\n    - [x] checkout an index of files, executables and symlinks just as fast as git\n        - [x] forbid symlinks in directories\n        - [ ] handle submodules\n        - [ ] handle sparse directories\n        - [ ] handle sparse index\n        - [x] linear scaling with multi-threading up to IO saturation\n    - supported attributes to affect working tree and index contents\n        - [x] eol\n        - [x] working-tree-encoding\n        - …more\n    - **filtering**\n        - [x] `text`\n        - [x] `ident`\n        - [x] filter processes\n        - [x] single-invocation clean/smudge filters\n* access to per-path information, like `.gitignore` and `.gitattributes` in a manner well suited for efficient lookups\n    * [x] _exclude_ information\n    * [x] attributes\n\n### gix-worktree\n* [x] A stack to to efficiently generate attribute lists for matching paths against.\n\n### gix-revision\n* [x] `describe()` (similar to `git name-rev`)\n* [x] merge-base\n* [x] merge-base octopus\n* parse specifications\n    * [x] parsing and navigation\n    * [x] revision ranges\n    * [ ] full date parsing support (depends on `gix-date`)\n\n### gix-revision\n* [x] primitives to help with graph traversal, along with commit-graph acceleration.\n\n### gix-submodule\n* [x] read `.gitmodule` files, access all their fields, and apply overrides\n* [x] check if a submodule is 'active'\n* [ ] CRUD for submodules\n* [ ] try to handle with all the nifty interactions and be a little more comfortable than what git offers, lay a foundation for smarter git submodules.\n\n### gix-bitmap\n\nA plumbing crate with shared functionality regarding EWAH compressed bitmaps, as well as other kinds of bitmap implementations.\n\n* **EWAH**\n  * `Array` type to read and write bits\n     * [x] execute closure for each `true` bit\n  * [x] decode on-disk representation\n  * [ ] encode on-disk representation\n\n### gix-dir\n\nA git directory walk.\n\n* [x] list untracked files\n* [x] list ignored files\n* [x] collapsing of untracked and ignored directories\n* [x] pathspec based filtering\n* [ ] multi-threaded initialization of icase hash table is always used to accelerate index lookups, even if ignoreCase = false for performance\n* [ ] special handling of submodules (for now, submodules or nested repositories are detected, but they can't be walked into naturally)\n* [ ] accelerated walk with `untracked`-cache (as provided by `UNTR` extension of `gix_index::File`)\n\n### gix-index\n\nThe git staging area.\n\n* read\n  * [x] V2 - the default, including long-paths support\n  * [x] V3 - extended flags\n  * [x] V4 - delta-compression for paths\n  * [ ] TODO(perf): multi-threaded implementation should boost performance, spends most time in storing paths, has barely any benefit right now.\n  * optional threading\n    * [x] concurrent loading of index extensions\n    * [x] threaded entry reading\n  * extensions\n    * [x] TREE for speeding up tree generation\n    * [x] REUC resolving undo\n    * [x] UNTR untracked cache\n    * [x] FSMN file system monitor cache V1 and V2\n    * [x] EOIE end of index entry\n    * [x] IEOT index entry offset table\n    * [x] 'link' base indices to take information from, split index\n    * [x] 'sdir' [sparse directory entries](https://github.blog/2021-08-16-highlights-from-git-2-33/) - marker\n  * [x] verification of entries and extensions as well as checksum\n  * [ ] expand sparse directory entries using information of the tree itself\n* write\n  * [x] V2\n  * [x] V3 - extension bits\n  * [ ] V4\n  * extensions\n      * [x] TREE\n      * [ ] REUC\n      * [ ] UNTR\n      * [ ] FSMN\n      * [x] EOIE\n      * [x] 'sdir'\n      * [ ] 'link'\n          - **note** that we currently **dissolve** any shared index we read so when writing this extension is removed.\n* `stat` update\n    * [ ] optional threaded `stat` based on thread_cost (aka preload)\n* [x] handling of `.gitignore` and system file exclude configuration\n* [x] lookups that ignore the case\n    * [ ] multi-threaded lookup table generation with the same algorithm as the one used by Git\n    * [ ] expand sparse folders (don't know how this relates to traversals right now)\n* maintain extensions when altering the cache\n    * [ ] TREE for speeding up tree generation\n    * [ ] REUC resolving undo\n    * [ ] UNTR untracked cache\n    * [ ] FSMN file system monitor cache V1 and V2\n    * [ ] EOIE end of index entry\n    * [ ] IEOT index entry offset table\n    * [ ] 'link' base indices to take information from, split index\n    * [ ] 'sdir' sparse directory entries\n* [ ] add and remove entries\n* [x] API documentation\n    * [ ] Some examples\n\n### gix-commitgraph\n\n* [x] read-only access\n    * [x] Graph lookup of commit information to obtain timestamps, generation and parents, and extra edges\n    * [ ] [Corrected generation dates](https://github.com/git/git/commit/e8b63005c48696a26f976f5f9b0ccaf1983e439d)\n    * [ ] Bloom filter index\n    * [ ] Bloom filter data\n* [ ] create and update graphs and graph files\n* [x] API documentation\n    * [ ] Some examples\n\n### gix-tempfile\n\nSee its [README.md](https://github.com/GitoxideLabs/gitoxide/blob/main/gix-tempfile/README.md).\n\n### gix-lock\n\nSee its [README.md](https://github.com/GitoxideLabs/gitoxide/blob/main/gix-lock/README.md).\n\n### gix-config-value\n* **parse**\n    * [x] boolean\n    * [x] integer\n    * [x] color\n       * [ ] ANSI code output for terminal colors\n    * [x] path (incl. resolution)\n    * [ ] date\n    * [ ] [permission][https://github.com/git/git/blob/71a8fab31b70c417e8f5b5f716581f89955a7082/setup.c#L1526:L1526]\n\n### gix-config\n* [x] read\n    * zero-copy parsing with event emission\n    * all config values as per the `gix-config-value` crate\n    * **includeIf**\n      * [x] `gitdir`,  `gitdir/i`, and `onbranch`\n      * [x] `hasconfig:remote.*.url`\n* [x] access values and sections by name and sub-section\n* [x] edit configuration in memory, non-destructively\n    * cross-platform newline handling\n* [x] write files back for lossless round-trips.\n    * keep comments and whitespace, and only change lines that are affected by actual changes, to allow truly non-destructive editing\n* [x] cascaded loading of various configuration files into one\n    * [x] load from environment variables\n    * [x] load from well-known sources for global configuration\n    * [x] load repository configuration with all known sources\n* [x] API documentation\n    * [x] Some examples\n\n### gix-worktree-stream\n\n* [x] encode git-tree as stream of bytes (with large file support and actual streaming)\n* [x] produce a stream of entries\n* [x] add custom entries to the stream\n* [x] respect `export-ignore` git attribute\n* [x] apply standard worktree conversion to simulate an actual checkout\n* [ ] support for submodule inclusion\n* [x] API documentation\n    * [ ] Some examples\n\n### gix-archive\n\n* [x] `write_to()` for creating an archive with various container formats\n    * [x] `tar` and `tar.gz`\n    * [x] `zip`\n* [x] add prefix and modification date\n* [ ] API documentation\n    * [ ] Some examples\n\n### gix-bundle\n* [ ] create a bundle from an archive\n   * [ ] respect `export-ignore` and `export-subst`\n* [ ] extract a branch from a bundle into a repository\n* [ ] API documentation\n    * [ ] Some examples\n\n### gix-validate\n* [x] validate ref names\n* [x] validate submodule names\n* [x] [validate][tagname-validation] tag names\n\n### gix-fsck\n* [x] validate connectivity and find missing objects starting from…\n    - [x] commits\n    - [ ] tags\n    - [ ] tree-cache in the `index` or any entry within\n* [ ] validate object hashes during connectivity traversal\n* [ ] progress reporting and interruptability\n* [ ] skipList to exclude objects which are known to be broken\n* [ ] validate blob hashes (connectivity check\n* [ ] identify objects that exist but are not reachable (i.e. what remains after a full graph traversal from all valid starting points)\n* [ ] write dangling objects to the `.git/log-found` directory structure\n* [ ] `strict` mode, to check for tree objects with `g+w` permissions\n* [ ] consider reflog entries from `ref` starting points\n* [ ] when reporting reachable objects, provide the path through which they are reachable, i.e. ref-log@{3} -> commit -> tree -> path-in-tree\n* [ ] limit search to ODB without alternates (default is equivalent to `git fsck --full` due to ODB implementation)\n* [ ] all individual [checks available in `git fsck`](https://git-scm.com/docs/git-fsck#_fsck_messages) (*too many to print here*)\n\n### gix-ref\n* [ ] Prepare code for arrival of longer hashes like Sha256. It's part of the [V2 proposal][reftable-v2] but should work for loose refs as well.\n* **Stores**\n  * [ ] disable transactions during [quarantine]\n  * [x] namespaces\n    * a server-side feature to transparently isolate refs in a single shared repository, allowing all forks to live in the same condensed repository.\n  * **loose file**\n    * [x] ref validation\n    * [x] find single ref by name\n    * [ ] special handling of `FETCH_HEAD` and `MERGE_HEAD`\n    * [x] iterate refs with optional prefix\n    * **worktree support**\n        * [x] support multiple bases and classify refs\n        * [x] support for ref iteration merging common and private refs seamlessly.\n        * [x] avoid packing refs which are worktree private\n    * ~~symbolic ref support, using symbolic links~~\n        * This is a legacy feature which is not in use anymore.\n    * **transactions**\n      * [x] delete, create or update single ref or multiple refs while handling the _reflog_\n      * [x] set any valid ref value (not just object ids)\n      * [x] reflog changes can be entirely disabled (i.e. for bare repos)\n      * [ ] rename or copy references\n      * [x] transparent handling of packed-refs during deletion\n      * [x] writing loose refs into packed-refs and optionally delete them\n      * [ ] initial transaction optimization (a faster way to create clones with a lot of refs)\n    * **log**\n      * [x] forward iteration\n      * [x] backward iteration\n      * [ ] expire\n    * **ref**\n      * [x] peel to id\n    * **packed**\n      * [x] find single ref by name\n      * [x] iterate refs with optional prefix\n      * [x] handle unsorted packed refs and those without a header\n  * [ ] **[reftable][reftable-spec]**,\n    * see [here for a Go/C implementation][reftable-impl]\n* [x] API documentation\n    * [ ] Some examples\n\n[reftable-spec]: https://github.com/eclipse/jgit/blob/master/Documentation/technical/reftable.md\n[reftable-impl]: https://github.com/google/reftable\n[reftable-v2]: https://github.com/google/reftable/blob/master/reftable-v2-proposal.md\n[quarantine]: https://github.com/git/git/blob/master/Documentation/git-receive-pack.txt#L223:L223\n\n\n### gix-features\n* **io-pipe** feature toggle\n    * a unix like pipeline for bytes\n* **parallel** feature toggle\n    * _When on…_\n        * `in_parallel`\n        * `join`\n    * _When off all functions execute serially_\n* **fast-sha1**\n    * provides a faster SHA1 implementation using CPU intrinsics\n* [x] API documentation\n\n### gix-tui\n* _a terminal user interface seeking to replace and improve on `tig`_\n* Can display complex history in novel ways to make them graspable. Maybe [this post] can be an inspiration.\n\n### gix-tix\n\nA re-implementation of a minimal `tig` like UI that aims to be fast and to the point.\n\n### gix-lfs\n\nDefinitely optimize for performance and see how we fare compared to [oxen](https://github.com/Oxen-AI/oxen-release/blob/main/Performance.md).\nRight now, `git lfs` is 40x slower, due to sequential uploads and lack of fast compression. It seems this can be greatly improved to get\nclose to 6min for 200k images (1.4GB). GitHub seems to cap upload speeds to 100kb/s, one major reason it's so slow, and it can only do\nit sequentially as `git-lfs` doesn't use the new `filter-process` protocol which would allow parallelization.\nOxen uses the XXH3 (30gb/s) which greatly outperforms SHA1 - however, it doesn't look like the hash is necessarily the bottleneck in typical benchmarks.\n\n[tagname-validation]: https://github.com/git/git/blob/master/Documentation/technical/protocol-common.txt#L23:L23\n[this post]: http://blog.danieljanus.pl/2021/07/01/commit-groups/\n"
        },
        {
          "name": "deny.toml",
          "type": "blob",
          "size": 2.00390625,
          "content": "# Note that all fields that take a lint level have these possible values:\n# * deny - An error will be produced and the check will fail\n# * warn - A warning will be produced, but the check will not fail\n# * allow - No warning or error will be produced, though in some cases a note\n# will be\n\n# This section is considered when running `cargo deny check advisories`\n# More documentation for the advisories section can be found here:\n# https://embarkstudios.github.io/cargo-deny/checks/advisories/cfg.html\n[advisories]\nignore = []\n\n\n\n# This section is considered when running `cargo deny check licenses`\n# More documentation for the licenses section can be found here:\n# https://embarkstudios.github.io/cargo-deny/checks/licenses/cfg.html\n[licenses]\n# List of explicitly allowed licenses\n# See https://spdx.org/licenses/ for list of possible licenses\n# [possible values: any SPDX 3.11 short identifier (+ optional exception)].\nallow = [\n    \"Apache-2.0\",\n    \"BSD-3-Clause\",\n    \"BSL-1.0\",\n    \"MIT\",\n    \"MIT-0\",\n    \"ISC\",\n    \"LicenseRef-ring\",\n    \"OpenSSL\",\n    \"Unicode-DFS-2016\",\n    \"Zlib\",\n    \"MPL-2.0\",\n    \"Unicode-3.0\"\n]\n# The confidence threshold for detecting a license from license text.\n# The higher the value, the more closely the license text must be to the\n# canonical license text of a valid SPDX license file.\n# [possible values: any between 0.0 and 1.0].\nconfidence-threshold = 0.8\n\n# This section is considered when running `cargo deny check bans`.\n# More documentation about the 'bans' section can be found here:\n# https://embarkstudios.github.io/cargo-deny/checks/bans/cfg.html\n[bans]\n# Lint level for when multiple versions of the same crate are detected\nmultiple-versions = \"allow\"\ndeny = [\n    # Start range due to https://github.com/serde-rs/serde/issues/2538\n    # end range due to https://github.com/serde-rs/serde/pull/2590\n    { name = \"serde_derive\", version = \">1.0.171, <1.0.185\" },\n]\n\n\n[[licenses.clarify]]\nname = \"ring\"\nexpression = \"LicenseRef-ring\"\nlicense-files = [\n    { path = \"LICENSE\", hash = 0xbd0eed23 },\n]\n\n"
        },
        {
          "name": "etc",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "general-tasks.md",
          "type": "blob",
          "size": 5.0537109375,
          "content": "## General\n\n*Note: Some of these items may be out of date.*\n\n### Get rid of unsafe pointer magic [WithSidebands] _(cost: high)_\n\nWhat needs to be done is to transform the &mut StreamingPeekableIter into a child future, and when exhausted, it must be transformed back\ninto the &mut _ that created it. That way, only a single mutable reference to said Iter is present at any time. Unfortunately the generated futures (using async)\ndon't support that as we would have to keep both the future and the parent that created it inside of our own struct. Instead of hiding this using\npointers, one could implement the magical part by hand, a custom future, which happily dissolves into its mutable parent iter ref.\nThat would be quite some work though.\n\n[WithSidebands]: https://github.com/GitoxideLabs/gitoxide/blob/64872690e60efdd9267d517f4d9971eecd3b875c/gix-packetline/src/read/sidebands/async_io.rs#L270\n\n## Potential for improving performance\n\n### gix-object\n\n* **tree-parsing performance**\n  * when diffing trees parsing [can take substantial time](https://github.com/GitoxideLabs/gitoxide/discussions/74#discussioncomment-684927). Maybe optimizations are possible here.\n\n### NLL/Borrowcheck limitation gix-odb::(compound|linked)::Db cause additional code complexity\n\n* Once polonius is available with production-ready performance, we should simplify the `locate(…)` code in `(compound|linked)::Db()` respectively.\n  Currently these first have to obtain an index, and when found, access the data to avoid having the borrowchecker fail to understand our buffer\n  usage within a loop correctly. Performance itself it probably not reasonably affected.\n\n### Pack Decoding\n\n* [ ] Pack decoding takes [5x more memory][android-base-discussion] than git on the [android-base repository][android-base-repo].\n* [ ] On **ARM64 on MacOS** the SHA1 implementation of the [`sha-1` crate](https://github.com/RustCrypto/hashes) is capped at about 550MB/s, half the speed of what I saw on Intel and about 50% slower than what's implemented in `libcorecrypto.dylib`. Get that fast and the decoding stage will be able\n      to beat git on fewer cores. [See this comment for more](https://github.com/GitoxideLabs/gitoxide/discussions/46#discussioncomment-511268). Right now we only do when scaling beyond what `git` can do due to lock contention.\n    * This should work once the `asm` feature can be enabled in the `sha-1` crate, which currently fails but is tracked [in this issue](https://github.com/RustCrypto/asm-hashes/issues/28).\n        * If it's not fast enough, one might hope that ARM8 instructions can improve performance, but right now they [aren't available](https://github.com/rust-lang/stdarch/issues/1055#issuecomment-803737796).\n        * Maybe the path forward for that crate is to [use system or openssl dylibs](https://github.com/RustCrypto/asm-hashes/issues/5).\n* [ ] ~~`pack::cache::lru::Memory` all copy input data in individual allocations. Could a pre-allocated arena or slab be faster?~~\n  * Probably not, as allocation performance might not be the issue here. Even though there definitely is a lot of effectively useless copying\n    of data and deallocation happening if caches are not used after all.\n* [ ] Add more control over the amount of memory used for the `less-memory` algorithm of `pack-verify` to increase cache hit rate at the cost of memory.\n  Note that depending on this setting, it might not be needed anymore to iterated over sorted offsets, freeing 150MB of memory in the process\n  that could be used for the improved cache. With the current cache and no sorted offsets, the time nearly triples.\n* [ ] _progress measuring costs when using 96 cores_ (see [this comment][josh-aug-12])\n  * potential savings: low\n* [ ] Add '--chunk|batch-size' flag to `pack-verify` and `pack-index-from-data` to allow tuning sizes for large amounts of cores\n  * @joshtriplett write: \"I did find that algorithm when I was looking for the chunk size, though I didn't dig into the details. As a quick hack, I tried dropping the upper number from 1000 to 250, which made no apparent difference in performance.\"\n  * potential savings: ~~medium~~ unclear\n* [ ] On 96 core machines, it takes visible time until all threads are started and have work. Is it because starting 100 threads takes so long? Or is it contention to get work?\n* [ ] Improve cache hit rate of `lookup` pack traversal by using partial DAGs build with help of the index\n  * @joshtriplett writes: \"Would it be possible, with some care, to use the index to figure out in advance which objects will be needed again and which ones won't? Could you compute a small DAG of objects you need for deltas (without storing the objects themselves), and use that to decide the order you process objects in?\"\n  * Note that there is tension between adding more latency to build such tree and the algorithms ability to (otherwise) start instantly.\n  * potential savings: unknown\n\n[android-base-discussion]: https://github.com/GitoxideLabs/gitoxide/pull/81\n[android-base-repo]: https://android.googlesource.com/platform/frameworks/base\n[josh-aug-12]: https://github.com/GitoxideLabs/gitoxide/issues/1#issuecomment-672566602\n"
        },
        {
          "name": "gitoxide-core",
          "type": "tree",
          "content": null
        },
        {
          "name": "gix-actor",
          "type": "tree",
          "content": null
        },
        {
          "name": "gix-archive",
          "type": "tree",
          "content": null
        },
        {
          "name": "gix-attributes",
          "type": "tree",
          "content": null
        },
        {
          "name": "gix-bitmap",
          "type": "tree",
          "content": null
        },
        {
          "name": "gix-blame",
          "type": "tree",
          "content": null
        },
        {
          "name": "gix-chunk",
          "type": "tree",
          "content": null
        },
        {
          "name": "gix-command",
          "type": "tree",
          "content": null
        },
        {
          "name": "gix-commitgraph",
          "type": "tree",
          "content": null
        },
        {
          "name": "gix-config-value",
          "type": "tree",
          "content": null
        },
        {
          "name": "gix-config",
          "type": "tree",
          "content": null
        },
        {
          "name": "gix-credentials",
          "type": "tree",
          "content": null
        },
        {
          "name": "gix-date",
          "type": "tree",
          "content": null
        },
        {
          "name": "gix-diff",
          "type": "tree",
          "content": null
        },
        {
          "name": "gix-dir",
          "type": "tree",
          "content": null
        },
        {
          "name": "gix-discover",
          "type": "tree",
          "content": null
        },
        {
          "name": "gix-features",
          "type": "tree",
          "content": null
        },
        {
          "name": "gix-fetchhead",
          "type": "tree",
          "content": null
        },
        {
          "name": "gix-filter",
          "type": "tree",
          "content": null
        },
        {
          "name": "gix-fs",
          "type": "tree",
          "content": null
        },
        {
          "name": "gix-fsck",
          "type": "tree",
          "content": null
        },
        {
          "name": "gix-glob",
          "type": "tree",
          "content": null
        },
        {
          "name": "gix-hash",
          "type": "tree",
          "content": null
        },
        {
          "name": "gix-hashtable",
          "type": "tree",
          "content": null
        },
        {
          "name": "gix-ignore",
          "type": "tree",
          "content": null
        },
        {
          "name": "gix-index",
          "type": "tree",
          "content": null
        },
        {
          "name": "gix-lfs",
          "type": "tree",
          "content": null
        },
        {
          "name": "gix-lock",
          "type": "tree",
          "content": null
        },
        {
          "name": "gix-macros",
          "type": "tree",
          "content": null
        },
        {
          "name": "gix-mailmap",
          "type": "tree",
          "content": null
        },
        {
          "name": "gix-merge",
          "type": "tree",
          "content": null
        },
        {
          "name": "gix-negotiate",
          "type": "tree",
          "content": null
        },
        {
          "name": "gix-note",
          "type": "tree",
          "content": null
        },
        {
          "name": "gix-object",
          "type": "tree",
          "content": null
        },
        {
          "name": "gix-odb",
          "type": "tree",
          "content": null
        },
        {
          "name": "gix-pack",
          "type": "tree",
          "content": null
        },
        {
          "name": "gix-packetline-blocking",
          "type": "tree",
          "content": null
        },
        {
          "name": "gix-packetline",
          "type": "tree",
          "content": null
        },
        {
          "name": "gix-path",
          "type": "tree",
          "content": null
        },
        {
          "name": "gix-pathspec",
          "type": "tree",
          "content": null
        },
        {
          "name": "gix-prompt",
          "type": "tree",
          "content": null
        },
        {
          "name": "gix-protocol",
          "type": "tree",
          "content": null
        },
        {
          "name": "gix-quote",
          "type": "tree",
          "content": null
        },
        {
          "name": "gix-rebase",
          "type": "tree",
          "content": null
        },
        {
          "name": "gix-ref",
          "type": "tree",
          "content": null
        },
        {
          "name": "gix-refspec",
          "type": "tree",
          "content": null
        },
        {
          "name": "gix-revision",
          "type": "tree",
          "content": null
        },
        {
          "name": "gix-revwalk",
          "type": "tree",
          "content": null
        },
        {
          "name": "gix-sec",
          "type": "tree",
          "content": null
        },
        {
          "name": "gix-sequencer",
          "type": "tree",
          "content": null
        },
        {
          "name": "gix-shallow",
          "type": "tree",
          "content": null
        },
        {
          "name": "gix-status",
          "type": "tree",
          "content": null
        },
        {
          "name": "gix-submodule",
          "type": "tree",
          "content": null
        },
        {
          "name": "gix-tempfile",
          "type": "tree",
          "content": null
        },
        {
          "name": "gix-tix",
          "type": "tree",
          "content": null
        },
        {
          "name": "gix-trace",
          "type": "tree",
          "content": null
        },
        {
          "name": "gix-transport",
          "type": "tree",
          "content": null
        },
        {
          "name": "gix-traverse",
          "type": "tree",
          "content": null
        },
        {
          "name": "gix-tui",
          "type": "tree",
          "content": null
        },
        {
          "name": "gix-url",
          "type": "tree",
          "content": null
        },
        {
          "name": "gix-utils",
          "type": "tree",
          "content": null
        },
        {
          "name": "gix-validate",
          "type": "tree",
          "content": null
        },
        {
          "name": "gix-worktree-state",
          "type": "tree",
          "content": null
        },
        {
          "name": "gix-worktree-stream",
          "type": "tree",
          "content": null
        },
        {
          "name": "gix-worktree",
          "type": "tree",
          "content": null
        },
        {
          "name": "gix",
          "type": "tree",
          "content": null
        },
        {
          "name": "justfile",
          "type": "blob",
          "size": 12.6474609375,
          "content": "#!/usr/bin/env -S just --justfile\n# ^ A shebang isn't required, but allows a justfile to be executed\n#   like a script, with `./justfile test`, for example.\n\ndefault:\n    {{ just_executable() }} --list\n\nalias t := test\nalias c := check\nalias nt := nextest\n\n# run all tests, clippy, including journey tests, try building docs\ntest: clippy check doc unit-tests journey-tests-pure journey-tests-small journey-tests-async journey-tests check-mode\n\n# run all tests, without clippy, and try building docs\nci-test: check doc unit-tests check-mode\n\n# run all journey tests - should be run in a fresh clone or after `cargo clean`\nci-journey-tests: journey-tests-pure journey-tests-small journey-tests-async journey-tests\n\nclear-target:\n    cargo clean\n\n# Run cargo clippy on all crates\nclippy *clippy-args:\n    cargo clippy --workspace --all-targets -- {{ clippy-args }}\n    cargo clippy --workspace --no-default-features --features small -- {{ clippy-args }}\n    cargo clippy --workspace --no-default-features --features max-pure -- {{ clippy-args }}\n    cargo clippy --workspace --no-default-features --features lean-async --tests -- {{ clippy-args }}\n\n# Run cargo clippy on all crates, fixing what can be fixed, and format all code\nclippy-fix:\n    cargo clippy --fix --workspace --all-targets\n    cargo clippy --fix --allow-dirty --workspace --no-default-features --features small\n    cargo clippy --fix --allow-dirty --workspace --no-default-features --features max-pure\n    cargo clippy --fix --allow-dirty --workspace --no-default-features --features lean-async --tests\n    cargo fmt --all\n\n# Build all code in suitable configurations\ncheck:\n    cargo check --workspace\n    cargo check --no-default-features --features small\n    # assure compile error occurs\n    if cargo check --features lean-async 2>/dev/null; then false; else true; fi\n    if cargo check -p gitoxide-core --all-features 2>/dev/null; then false; else true; fi\n    if cargo check -p gix-packetline --all-features 2>/dev/null; then false; else true; fi\n    if cargo check -p gix-transport --all-features 2>/dev/null; then false; else true; fi\n    if cargo check -p gix-protocol --all-features 2>/dev/null; then false; else true; fi\n    cargo tree -p gix --no-default-features -e normal -i imara-diff 2>&1 | grep warning # warning happens if nothing found, no exit code :/\n    cargo tree -p gix --no-default-features -e normal -i gix-submodule 2>&1 | grep warning\n    cargo tree -p gix --no-default-features -e normal -i gix-pathspec 2>&1 | grep warning\n    cargo tree -p gix --no-default-features -e normal -i gix-filter 2>&1 | grep warning\n    if cargo tree -p gix --no-default-features -i gix-credentials 2>/dev/null; then false; else true; fi\n    cargo check --no-default-features --features lean\n    cargo check --no-default-features --features lean-async\n    cargo check --no-default-features --features max\n    cargo check -p gitoxide-core --features blocking-client\n    cargo check -p gitoxide-core --features async-client\n    cargo check -p gix-pack --no-default-features\n    cargo check -p gix-pack --no-default-features --features generate\n    cargo check -p gix-pack --no-default-features --features streaming-input\n    cd gix-hash; \\\n        set -ex; \\\n        cargo check --all-features; \\\n        cargo check\n    cd gix-object; \\\n        set -ex; \\\n        cargo check --all-features; \\\n        cargo check --features verbose-object-parsing-errors\n    cd gix-attributes && cargo check --features serde\n    cd gix-glob && cargo check --features serde\n    cd gix-worktree; \\\n        set -ex; \\\n        cargo check --features serde; \\\n        cargo check --no-default-features;\n    cd gix-actor && cargo check --features serde\n    cd gix-date && cargo check --features serde\n    cargo check -p gix-tempfile --features signals\n    cargo check -p gix-tempfile --features hp-hashmap\n    cargo check -p gix-pack --features serde\n    cargo check -p gix-pack --features pack-cache-lru-static\n    cargo check -p gix-pack --features pack-cache-lru-dynamic\n    cargo check -p gix-pack --features object-cache-dynamic\n    cargo check -p gix-packetline --features blocking-io\n    cargo check -p gix-packetline --features async-io\n    cd gix-index && cargo check --features serde\n    cargo check -p gix-credentials --features serde\n    cargo check -p gix-sec --features serde\n    cargo check -p gix-revision --features serde\n    cargo check -p gix-revision --no-default-features --features describe\n    cargo check -p gix-mailmap --features serde\n    cargo check -p gix-url --all-features\n    cargo check -p gix-status\n    cargo check -p gix-status --all-features\n    cargo check -p gix-features --all-features\n    cargo check -p gix-features --features parallel\n    cargo check -p gix-features --features fs-walkdir-parallel\n    cargo check -p gix-features --features fs-read-dir\n    cargo check -p gix-features --features rustsha1\n    cargo check -p gix-features --features fast-sha1\n    cargo check -p gix-features --features progress\n    cargo check -p gix-features --features io-pipe\n    cargo check -p gix-features --features crc32\n    cargo check -p gix-features --features zlib\n    cargo check -p gix-features --features zlib,zlib-ng\n    cargo check -p gix-features --features zlib,zlib-ng-compat\n    cargo check -p gix-features --features zlib-stock\n    cargo check -p gix-features --features zlib,zlib-stock\n    cargo check -p gix-features --features cache-efficiency-debug\n    cd gix-commitgraph; \\\n      set -ex; \\\n      cargo check --all-features\n    cargo check -p gix-config-value --all-features\n    cargo check -p gix-config --all-features\n    cargo check -p gix-diff --no-default-features\n    cargo check -p gix-transport --features blocking-client\n    cargo check -p gix-transport --features async-client\n    cargo check -p gix-transport --features async-client,async-std\n    cargo check -p gix-transport --features http-client\n    cargo check -p gix-transport --features http-client-curl\n    cargo check -p gix-transport --features http-client-reqwest\n    cargo check -p gix-protocol --features blocking-client\n    cargo check -p gix-protocol --features async-client\n    cargo check -p gix --no-default-features --features async-network-client\n    cargo check -p gix --no-default-features --features async-network-client-async-std\n    cargo check -p gix --no-default-features --features blocking-network-client\n    cargo check -p gix --no-default-features --features blocking-http-transport-curl\n    cargo check -p gix --no-default-features --features blocking-http-transport-reqwest\n    cargo check -p gix --no-default-features --features max-performance --tests\n    cargo check -p gix --no-default-features --features max-performance-safe --tests\n    cargo check -p gix --no-default-features --features progress-tree --tests\n    cargo check -p gix --no-default-features --features blob-diff --tests\n    cargo check -p gix --no-default-features --features revision --tests\n    cargo check -p gix --no-default-features --features revparse-regex --tests\n    cargo check -p gix --no-default-features --features mailmap --tests\n    cargo check -p gix --no-default-features --features excludes --tests\n    cargo check -p gix --no-default-features --features attributes --tests\n    cargo check -p gix --no-default-features --features worktree-mutation --tests\n    cargo check -p gix --no-default-features --features credentials --tests\n    cargo check -p gix --no-default-features --features index --tests\n    cargo check -p gix --no-default-features --features interrupt --tests\n    cargo check -p gix --no-default-features\n    cargo check -p gix-odb --features serde\n    cargo check --no-default-features --features max-control\n\n# Run cargo doc on all crates\ndoc $RUSTDOCFLAGS=\"-D warnings\":\n    cargo doc --workspace --no-deps --features need-more-recent-msrv\n    cargo doc --features=max,lean,small --workspace --no-deps --features need-more-recent-msrv\n\n# run all unit tests\nunit-tests:\n    cargo nextest run\n    cargo test --doc\n    cargo nextest run -p gix-testtools\n    cargo nextest run -p gix-testtools --features xz\n    cargo nextest run -p gix-archive --no-default-features\n    cargo nextest run -p gix-archive --features tar\n    cargo nextest run -p gix-archive --features tar_gz\n    cargo nextest run -p gix-archive --features zip\n    cargo nextest run -p gix-status-tests --features \"gix-features-parallel\"\n    cargo nextest run -p gix-worktree-state-tests --features \"gix-features-parallel\"\n    cargo nextest run -p gix-worktree-tests --features \"gix-features-parallel\"\n    cd gix-object; \\\n        set -ex; \\\n        cargo nextest run; \\\n        cargo nextest run --features verbose-object-parsing-errors\n    cargo nextest run -p gix-tempfile --features signals\n    cargo nextest run -p gix-features --all-features\n    cargo nextest run -p gix-ref-tests --all-features\n    cargo nextest run -p gix-odb --all-features\n    cargo nextest run -p gix-odb-tests --features gix-features-parallel\n    cargo nextest run -p gix-pack --all-features\n    cargo nextest run -p gix-pack-tests --features all-features\n    cargo nextest run -p gix-pack-tests --features \"gix-features-parallel\"\n    cargo nextest run -p gix-index-tests --features \"gix-features-parallel\"\n    cargo nextest run -p gix-packetline --features blocking-io,maybe-async/is_sync --test blocking-packetline\n    cargo nextest run -p gix-packetline --features \"async-io\" --test async-packetline\n    cargo nextest run -p gix-transport --features http-client-curl,maybe-async/is_sync\n    cargo nextest run -p gix-transport --features http-client-reqwest,maybe-async/is_sync\n    cargo nextest run -p gix-transport --features async-client\n    cargo nextest run -p gix-protocol --features blocking-client\n    cargo nextest run -p gix-protocol --features async-client\n    cargo nextest run -p gix --no-default-features\n    cargo nextest run -p gix --no-default-features --features basic,extras,comfort,need-more-recent-msrv\n    cargo nextest run -p gix --features async-network-client\n    cargo nextest run -p gix --features blocking-network-client\n    cargo nextest run -p gitoxide-core --lib --no-tests=warn\n\n# These tests aren't run by default as they are flaky (even locally)\nunit-tests-flaky:\n    cargo test -p gix --features async-network-client-async-std\n\ntarget_dir := `cargo metadata --format-version 1 | jq -r .target_directory`\nein := target_dir / \"debug/ein\"\ngix := target_dir / \"debug/gix\"\njtt := target_dir / \"debug/jtt\"\nit := target_dir / \"debug/it\"\n\n# run journey tests (max)\njourney-tests:\n    cargo build --features http-client-curl-rustls\n    cargo build -p gix-testtools --bin jtt\n    ./tests/journey.sh {{ ein }} {{ gix }} {{ jtt }} max\n\n# run journey tests (max-pure)\njourney-tests-pure:\n    cargo build --no-default-features --features max-pure\n    cargo build -p gix-testtools --bin jtt\n    ./tests/journey.sh {{ ein }} {{ gix }} {{ jtt }} max-pure\n\n# run journey tests (small)\njourney-tests-small:\n    cargo build --no-default-features --features small\n    cargo build -p gix-testtools\n    ./tests/journey.sh {{ ein }} {{ gix }} {{ jtt }} small\n\n# run journey tests (lean-async)\njourney-tests-async:\n    cargo build --no-default-features --features lean-async\n    cargo build -p gix-testtools\n    ./tests/journey.sh {{ ein }} {{ gix }} {{ jtt }} async\n\n# Run cargo-diet on all crates to see that they are still in bound\ncheck-size:\n    ./etc/check-package-size.sh\n\n# Check the minimal support rust version for currently installed Rust version\nci-check-msrv:\n    rustc --version\n    cargo check -p gix\n    cargo check -p gix --no-default-features --features async-network-client,max-performance\n\n# Enter a nix-shell able to build on macos\nnix-shell-macos:\n    nix-shell -p pkg-config openssl libiconv darwin.apple_sdk.frameworks.Security darwin.apple_sdk.frameworks.SystemConfiguration\n\n# run various auditing tools to assure we are legal and safe\naudit:\n    cargo deny check advisories bans licenses sources\n\n# run tests with `cargo nextest` (all unit-tests, no doc-tests, faster)\nnextest *FLAGS=\"--workspace\":\n    cargo nextest run {{ FLAGS }}\n\nsummarize EXPRESSION=\"all()\": (nextest \"--workspace --run-ignored all --no-fail-fast --status-level none --final-status-level none -E '\" EXPRESSION \"'\")\n\n# run nightly rustfmt for its extra features, but check that it won't upset stable rustfmt\nfmt:\n    cargo +nightly fmt --all -- --config-path rustfmt-nightly.toml\n    cargo +stable fmt --all -- --check\n    just --fmt --unstable\n\n# Cancel this after the first few seconds, as yanked crates will appear in warnings.\nfind-yanked:\n    cargo install --debug --locked --no-default-features --features max-pure --path .\n\n# Find shell scripts whose +x/-x bits and magic bytes (e.g. `#!`) disagree\ncheck-mode:\n    cargo build -p internal-tools\n    \"{{ it }}\" check-mode\n\n# Delete gix-packetline-blocking/src and regenerate from gix-packetline/src\ncopy-packetline:\n    ./etc/copy-packetline.sh\n"
        },
        {
          "name": "rustfmt-nightly.toml",
          "type": "blob",
          "size": 0.0791015625,
          "content": "group_imports = \"StdExternalCrate\"\nimports_granularity = \"Crate\"\nmax_width = 120\n"
        },
        {
          "name": "rustfmt.toml",
          "type": "blob",
          "size": 0.015625,
          "content": "max_width = 120\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tasks.md",
          "type": "blob",
          "size": 0.8515625,
          "content": "## Tracking issues\n\n* [repository clone](https://github.com/GitoxideLabs/gitoxide/issues/303)\n* [repository FSCK](https://github.com/GitoxideLabs/gitoxide/issues/304)\n* [Show changes in various forms](https://github.com/GitoxideLabs/gitoxide/issues/305)\n* [Client side push (client to server)](https://github.com/GitoxideLabs/gitoxide/issues/306)\n* [Server fetch/pull (server to client)](https://github.com/GitoxideLabs/gitoxide/issues/307)\n\n## Smaller Tasks\n\n…to not forget. Might get reorganized.\n\n### gix organize\n\n* [ ] Add journey test to cover case with non-bare repository. Try to only read `non-bare` git config files and see the journey test fail.\n\n### gix cat\n\n* A program to cat objects and pretty-print them, similar to git cat-file. Useful to get a feel for\n  'locate(…)' performance and stress test it a little.\n* Be sure to escape terminal escape codes\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}