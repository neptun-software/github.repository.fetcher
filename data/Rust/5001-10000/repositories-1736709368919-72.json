{
  "metadata": {
    "timestamp": 1736709368919,
    "page": 72,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjgw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "rustls/rustls",
      "stars": 6397,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".cargo",
          "type": "tree",
          "content": null
        },
        {
          "name": ".clippy.toml",
          "type": "blob",
          "size": 0.037109375,
          "content": "upper-case-acronyms-aggressive = true\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1318359375,
          "content": "target/\n*.gcda\n*.gcno\n*.info\nsslkeylogfile.txt\nadmin/rustfmt\n.DS_Store\n._.DS_Store\n**/.DS_Store\n**/._.DS_Store\n/.idea\n/default.profraw\n"
        },
        {
          "name": ".lycheeignore",
          "type": "blob",
          "size": 0.12109375,
          "content": "^file\\:\\/\\/\\/.*\\/target\\/doc\\/index\\.html$\n^http:\\/\\/www\\.isg\\.rhul\\.ac\\.uk\\/tls\\/Lucky13.html$\n^http:\\/\\/www\\.adobe\\.com/$\n"
        },
        {
          "name": ".rustfmt.toml",
          "type": "blob",
          "size": 0.0146484375,
          "content": "chain_width=40\n"
        },
        {
          "name": ".rustfmt.unstable.toml",
          "type": "blob",
          "size": 0.1318359375,
          "content": "# keep in sync with .rustfmt.toml\nchain_width = 40\n\n# format imports\ngroup_imports = \"StdExternalCrate\"\nimports_granularity = \"Module\"\n"
        },
        {
          "name": "BENCHMARKING.md",
          "type": "blob",
          "size": 3.9375,
          "content": "# Benchmarking\n\nThis repository includes benchmarks for multiple use cases. They are described below, along with\ninformation on how to run them.\n\n## Throughput and memory usage benchmarks\n\nThese benchmarks measure the throughput and memory footprint you get from rustls. They have been\nused in the past to compare performance against OpenSSL (see the results of [December\n2023](https://github.com/aochagavia/rustls-bench-results) and [July\n2019](https://jbp.io/2019/07/01/rustls-vs-openssl-performance.html)). You can also use them to\nevaluate rustls' performance on different hardware (e.g. a bare-metal server with support for\nAVX-512 instructions vs. a cloud VM with a consumer-grade CPU).\n\nThe measured aspects are:\n\n1. Bulk data transfer throughput in MiB/s;\n2. Handshake throughput (full, session id, tickets) in handshakes per second;\n3. Memory usage per connection.\n\nIf you are interested in comparing against OpenSSL, check out the [twin OpenSSL\nbenchmarks](https://github.com/ctz/openssl-bench), which produce similar measurements.\n\n#### Building\n\nThe benchmarks are implemented in `rustls-bench/src/main.rs`.\nUse `cargo build --profile=bench -p rustls-bench --features aws-lc-rs` to obtain the corresponding\nbinary (you can toggle conditionally compiled code with the `--no-default-features` and `--features`\nflags) or simply run below, which will build and run the benchmark.\n\nNote: The usage of `--release` instead of `--profile=bench` also works, but it is less performant.\n\n#### Running\n\nThere is a makefile in [admin/bench-measure.mk](admin/bench-measure.mk) providing useful commands to\nfacilitate benchmarking:\n\n- `make measure`: runs bulk transfer and handshake throughput benchmarks using a predefined list of\n  cipher suites.\n- `make memory`: measures memory usage for different amounts of connections.\n\nYou can inspect the makefile to get an idea of the command line arguments accepted by `bench`. With\nthe right arguments, you can run benchmarks for other cipher suites (through `cargo run --release`\nor by directly launching the compiled binary).\n\n#### Reducing noise\n\nWe usually extend the duration of the benchmarks in an attempt to neutralize the effect of cold CPU\nand page caches, giving us more accurate results. This is done through the `BENCH_MULTIPLIER`\nenvironment variable, which tells the benchmark runner to multiply the amount of work done. For\ninstance, `BENCH_MULTIPLIER=8` will ensure we do 8 times the work.\n\nAdditional ways to reduce noise are:\n\n- Disabling ASLR (through `setarch -R`).\n- Disabling CPU dynamic frequency scaling (usually on the BIOS/UEFI level).\n- Disabling CPU hyper-threading (usually on the BIOS/UEFI level).\n- Setting the Linux CPU governor to performance for all cores.\n- Running the benchmarks multiple times (e.g. 30) and taking the median for each scenario (the\n  [December 2023 results](https://github.com/aochagavia/rustls-bench-results) include Python code\n  doing this).\n\n## CI benchmarks\n\nThese benchmarks are meant to provide _automated_ and _accurate_ feedback on a PR's performance\nimpact compared to the main branch. By automating them we ensure they are regularly used, by keeping\nthem accurate we ensure they are actionable (i.e. too much noise would train reviewers to ignore the\ninformation).\n\nThe benchmarks themselves are located under [ci-bench](ci-bench), together with a detailed readme\n(including instructions on how to run them locally). The automated runner lives in its own\n[repository](https://github.com/rustls/rustls-bench-app) and is deployed to a bare-metal machine to\nensure low-noise results.\n\n## Nightly benchmarks\n\nThere are some `#[bench]` benchmarks spread throughout the codebase. We do not use them\nsystematically, but they help understand the performance of smaller pieces of code (one or two\nfunctions), which would be difficult to see when the unit-of-benchmark is an entire handshake.\n\nThese benchmarks require a nightly compiler. If you are using `rustup`, you can run them with\n`RUSTFLAGS=--cfg=bench cargo +nightly bench`\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 0.1142578125,
          "content": "# Changelog\n\nThe detailed list of changes in each release can be found at\nhttps://github.com/rustls/rustls/releases.\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 0.2568359375,
          "content": "# Code of conduct\n\nThis project adopts the [Rust Code of Conduct](https://www.rust-lang.org/policies/code-of-conduct).\nPlease email rustls-mod@googlegroups.com to report any instance of misconduct, or if you\nhave any comments or questions on the Code of Conduct.\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 17.591796875,
          "content": "# Contributing\n\nThanks for considering helping this project.  There are many\nways you can help: using the library and reporting bugs,\nreporting usability issues, making additions and improvements\nto the library, documentation and finding security bugs.\n\n## Reporting bugs\n\nPlease file a github issue.  Include as much information as\npossible.  Suspected protocol bugs are easier debugged with\na pcap or reproduction steps.\n\nFeel free to file github issues to get help, or ask a question.\n\nIf you believe you've found a security bug please\n[open a draft security advisory](https://github.com/rustls/rustls/security/advisories/new)\nin GitHub, and not as a regular repository issue. See [SECURITY.md] for more\ninformation.\n\n[SECURITY.md]: SECURITY.md\n\n## Code changes\n\nSome ideas and guidelines for contributions:\n\n- For large features, file an issue prior to starting work.\n  This means everyone can see what is in progress prior to a PR.\n- Feel free to submit a PR even if the work is not totally finished,\n  for feedback or to hand-over.\n- Prefer not to reference github issue or PR numbers in commits.\n- Try to keep code formatting commits separate from functional commits.\n- See [`.github/workflows/build.yml`](.github/workflows/build.yml) for\n  how to run the various test suites, and how to make coverage measurements.\n- I run `cargo outdated` prior to major releases; but PRs to update specific\n  dependencies are welcome.\n\n## Commit history\n\nWe prefer to keep the commit history clean and easy to follow. As such, we prefer small commits\nthat do one thing. In particular:\n\n* Avoid mixing refactoring and functional changes in the same commit if possible\n* Make mechanical changes (like renaming or moving code around) in a separate commit\n* Isolate updates to `Cargo.lock` in their own commits\n\nOur default workflow is to rebase clean commit history from a PR to `main`.\n\n## Security bugs\n\nPlease report security bugs by [opening a draft security advisory](https://github.com/rustls/rustls/security/advisories/new)\nin GitHub, and not as a regular repository issue.\n\nSee [SECURITY.md] for more information.\n\nIf you're *looking* for security bugs, this crate is set up for\n`cargo fuzz` but would benefit from more runtime, targets and corpora.\n\n## Testing\n\n- Features involving additions to the public API should have (at least)\n  API-level tests (see [`rustls/tests/api.rs`](rustls/tests/api.rs)).\n- Protocol additions should have some coverage -- consider enabling\n  corresponding tests in the bogo suite, or writing some ad hoc tests.\n\nPRs which cause test failures or a significant coverage decrease\nare unlikely to be accepted.\n\n### Testing with multiple `CryptoProvider`s\n\nGenerally any test that relies on a `CryptoProvider` anywhere, should\nbe run against all `CryptoProvider`s, such that\n`cargo test --all-features` runs the test several times.  To achieve that\nwe have two methods:\n\n- For unit tests, see `rustls/src/test_macros.rs` which provides the\n  `test_for_each_provider!` macro.  This can be placed around normal\n  tests and instantiates the tests once per provider.\n\n  Note that rustfmt does not format code inside a macro invocation:\n  when developing test code, sed `test_for_each_provider! {` to `mod tests {`,\n  format the code, then sed it back.\n\n- For integration tests -- where the amount of test code is more significant,\n  and lack of rustfmt support is more painful -- we instantiate the tests\n  by importing them multiple times, and then the tests resolve the provider\n  module to use via `super::provider`.\n  For example, see `rustls/tests/runners/unbuffered.rs` and\n  `rustls/tests/unbuffered.rs`.\n\n## Style guide\n\n### Ordering\n\n#### Top-down ordering within modules\n\nWithin a module, we prefer to order items top-down. This means that items within\na module will depend on items defined below them, but not (usually) above them.\nThe idea here is that the public API, with more internal dependencies, will be\nread (and changed) more often, and putting it closer to the top of the module\nmakes it more accessible.\n\nThis can be surprising to many engineers who are used to the bottom-up ordering\nused in languages like Python, where items can have a run-time dependency on\nother items defined in the same module.\n\nUsually `const` values will thus go on the bottom of the module (least complex,\nusually no dependencies of their own), although in larger modules it can make\nsense to place a `const` directly below the user (especially if there is a\nsingle user, or just a few co-located users).\n\nThe `#[cfg(test)] mod tests {}` module goes on the very bottom, if present.\nOther module definitions (like `mod foo { .. }`) can be ordered among other\nitems as it makes sense in the context of the items imported from them.\nModule declarations (like `mod foo;`) should be ordered before other items\nbut after imports. Imports from local modules (both declared and defined)\nshould be kept close to the module declaration/definition.\n\nFiles that have substantial amounts of code inside inline modules should\nprobably avoid also having much code outside of these modules.\n\n#### Ordering for a given type\n\nFor a given type, we prefer to order items as follows:\n\n1. The type definition (`struct` or `enum`)\n2. The inherent `impl` block (that is, not a trait implementation)\n3. `impl` blocks for traits, from most specific to least specific.\n   The least specific would be something like a `Debug` or `Clone` impl.\n\n#### Ordering associated functions within an inherent `impl` block\n\nHere's a guide to how we like to order associated functions:\n\n0. Associated functions (that is, `fn foo() {}` instead of `fn foo(&self) {}`)\n1. Constructors, starting with the constructor that takes the least arguments\n2. Public API that takes a `&mut self`\n3. Public API that takes a `&self`\n4. Private API that takes a `&mut self`\n5. Private API that takes a `&self`\n6. `const` values\n\nNote that we usually also practice top-down ordering here; where these are in\nconflict, make a choice that you think makes sense. For getters and setters, the\norder should typically mirror the order of the fields in the type definition.\n\n### Functions\n\n#### Consider avoiding short single-use functions\n\nWhile single-use functions can make sense if the algorithm is sufficiently complex\nthat it warrants an explicit name and interface, using many short single-use\nfunctions can make the code harder to follow, due to having to jump around in order\nto gain an understanding of what's going on. When writing a single-use function,\nconsider whether it needs the dedicated interface, or if it could be inlined into\nits caller instead.\n\n#### Consider avoiding free-standing functions\n\nIf a function's semantics or implementation are strongly dependent on one of its\narguments, and the argument is defined in a type within the current crate,\nprefer using a method on the type. Similarly, if a function is taking multiple\narguments that originate from the same common type in all call-sites it is\na strong candidate for becoming a method on the type.\n\n#### Order arguments from most specific to least specific\n\nWhen writing a function, we prefer to order arguments from most specific to\nleast specific. This means that an `image_id` might go before the `domain`,\nwhich will go before the `app` context. More specific arguments are more\ndifferentiating between a given function and other functions, so putting them\nfirst makes it easier to infer the context/meaning of the function (compared to\nstarting with a number of generic context-like types).\n\n#### Use `impl` where possible\n\nWe prefer to use `impl ...` for arguments and return types when there's a single\nuse of the type. Generic type argument bounds add a level of indirection that's\nharder to read in one pass.\n\n#### Avoid type elision for fully qualified function calls\n\nWe prefer to write [fully qualified function calls] with types included, rather\nthan elided. For example:\n\n```rust\n// Incorrect:\n<_>::default()\n\n// Correct:\nCertificateChain::default()\n```\n\n[fully qualified function calls]: https://doc.rust-lang.org/beta/reference/expressions/call-expr.html#disambiguating-function-calls\n\n#### Validation\n\nWhere possible, avoid writing `validate` or `check` type functions that try to\ncheck for error conditions based on the state of a populated object. Prefer\n[\"parse, don't validate\"](https://lexi-lambda.github.io/blog/2019/11/05/parse-don-t-validate/)\nstyle and try to use the type system to make it impossible for invalid states to\nbe represented.\n\n#### Error handling\n\nWe use `Result` types pervasively throughout the code to signal error cases.\nOutside of unit/integration tests we prefer to avoid `unwrap()` and `expect()`\ncalls unless there is a clear invariant which can be locally validated by the\nstructure of the code. If there is such an invariant, we usually add a comment\nexplaining how the invariant is upheld. In other cases (especially for error\ncases which can arise from network traffic, which could represent an attacker),\nwe always prefer to handle errors and ultimately return an error to the network\npeer or close the connection.\n\n### Expressions\n\n#### Avoid single-use bindings\n\nWe generally make full use of the expression-oriented nature of Rust. For\nexample, when using iterators we prefer to use `map` and other combinators\ninstead of `for`-loops when possible, and will often avoid variable bindings if\na variable is only used once. Naming variables takes cognitive efforts, and so\ndoes tracking references to bindings in your mind. One metric we like to\nminimize is the number of mutable bindings in a given scope.\n\nRemember that the overall goal is to make the code easy to understand.\nCombinators can help with this by eliding boilerplate (like replacing a\n`None => None` arm with a `map()` call), but they can also make it harder to\nunderstand the code. One example is that a combinator chain like\n`.map().map_err()` might be harder to understand than a `match` statement\n(since, in this case, both of the arms have a significant transformation).\n\n#### Use early `return` and `continue` to reduce nesting\n\nThe typed nature of Rust can cause some code to end up at deeply indented\nlevels, which we call \"rightward drift\". This makes lines shorter, making the\ncode harder to read. To avoid this, try to `return` early for error cases, or\n`continue` early in a loop to skip an iteration.\n\n#### Hoist common expression returns\n\nWhen writing a `match` or `if` expression that has arms that each share a return\ntype (e.g. `Ok(...)`), hoist the commonality outside the `match`. This helps\nseparate out the important differences and reduces code duplication.\n\n```rust\n// Incorrect:\nmatch foo {\n    1..10 => Ok(do_one_thing()),\n    _ => Ok(do_another()),\n}\n\n// Correct:\nOk(match foo {\n    1..10 => do_one_thing(),\n    _ => do_another(),\n})\n```\n\n#### Avoid `ref` in match patterns\n\nWhen writing match expressions, try to avoid using `ref` in patterns. Prefer\ntaking a reference on the\n[scrutinee](https://doc.rust-lang.org/reference/expressions/match-expr.html)\nof the `match`.\n\nSince the addition of [binding\nmodes](https://rust-lang.github.io/rfcs/2005-match-ergonomics.html) for improved\nmatch ergonomics the `ref` keyword is unidiomatic and can be unfamiliar to\nreaders.\n\n### Naming\n\n#### Use concise names\n\nWe prefer concise names, especially for local variables, but prefer to\nexpand acronyms/abbreviations that are not very well known (e.g. prefer\n`key_usage` instead of `ku`, `anonymous` instead of `anon`). Extremely common\nshort-forms like `url` are acceptable.\n\nAvoid adding a suffix for a variable that describes its type (provided that its\ntype is hard to confuse with other types -- for example, we do still use `_id`\nsuffixes because we usually use numeric IDs for database entities). The\nprecision/conciseness trade-off for variable names also depends on the scope of\nthe binding.\n\n#### Avoid `get_` prefixes\n\nPer the\n[API guidelines](https://rust-lang.github.io/api-guidelines/naming.html#getter-names-follow-rust-convention-c-getter),\n`get_()` prefixes are discouraged.\n\n#### Enum variants\n\nWhen implementing or modifying an `enum` type, list its variants in alphabetical\norder. It's acceptable to ignore this advice when matching the order imposed by\nan external source, e.g. a standards document.\n\nPrefer active verbs for variant names. E.g. `Allow` instead of `Allowed`,\n`Forbid` instead of `Forbidden`. Avoid faux-bools like `Yes` and `No`, instead\npreferring variant names that are descriptive of the different states.\n\n#### Don't elide generic lifetimes\n\nWe prefer not to elide lifetimes when naming types that are generic over\nlifetimes. Always include a lifetime placeholder (e.g. `<'_>`) to avoid\nconfusion.\n\n### Imports\n\nWe use 3 blocks of imports in our Rust files:\n\n1. `std` imports\n2. Imports from external crates\n3. Crate-internal imports\n\nWe believe that this makes it easier to see where a particular import comes from.\n\nWithin the import blocks we prefer to separate imports that don't share a parent\nmodule. For example,\n\n```rust\n// Incorrect\nuse alloc::{format, vec::Vec};\n\n// Correct\nuse alloc::format;\nuse alloc::vec::Vec;\n```\n\nWe prefer to reference types and traits by an imported symbol name instead of\nusing qualified references. Qualification paths generally add noise and are\nunnecessary. The one exception to this is when the symbol name is overly\ngeneric, or easily confused between different crates. In this case we prefer to\nimport the symbol name under an alias, or if the parent module name is short,\nusing a one-level qualified path. E.g. for a crate with a local `Error` type,\nprefer to `import std::error::Error as StdError`.\n\n### Exports\n\nWe prefer to export types under a single name, avoiding re-exporting types from\nthe top-level `lib.rs`. The exception to this are \"paved path\" exports that we\nexpect every user will need. The canonical example of such types are\n`client::ClientConfig` and `server::ServerConfig`. In general this sort of type\nis rare and most new types should be exported only from the module in which they\nare defined.\n\n### Misc\n\n#### Numeric literals\n\nPrefer a numeric base that fits with the domain of the value being used. E.g.\nuse hexadecimal for protocol message literals, and octal for UNIX privileges.\nUse digit grouping to make larger numeric constants easy to read, e.g. use\n`100_000_000` instead of `100000000`.\n\n#### Avoid type aliases\n\nWe prefer to avoid type aliases as they obfuscate the underlying type and\ndon't provide additional type safety. Using the\n[newtype idiom](https://doc.rust-lang.org/rust-by-example/generics/new_types.html)\nis one alternative when an abstraction boundary is worth the added complexity.\n\n## Design and Architecture\n\nSome general concepts about how the library should fit together:\n\n- Linker friendliness\n- Small mandatory API\n- Safe and sensible defaults\n- Separation of mechanism and policy\n\n### Linker friendliness\n\nWhen a program incorporates rustls, we should try to ensure that parts\nthat are not used can be discarded by the linker.\n\nThe linker can discard code if it is unreachable by the code that is referenced\nby the downstream program.  This generally means that:\n\n- runtime trait-based or function pointer dynamic dispatch is good,\n- compile-time trait-based generics are good (so long as the same code is\n  not monomorphized multiple times in a typical program),\n- enum-based dispatch is bad.\n\nHere is an example that is less good:\n\n```rust\nenum Algorithm {\n    Aes128,\n    ChaCha20,\n}\n\nfn encrypt(alg: Algorithm, buffer: &mut [u8]) {\n    match alg {\n        Algorithm::Aes128 => encrypt_aes128(buffer),\n        Algorithm::ChaCha20 => encrypt_chacha20(buffer),\n    }\n}\n```\n\nA program that only used `encrypt(Algorithm::ChaCha20, ..)` would end\nup with a copy of AES inside.  (If such a function was\ninlined into its caller, the reference to `encrypt_aes128` could\ntheoretically be deleted if the compiler can be certain of the value\nof `alg`.  This is not guaranteed to happen.)\n\nInstead, prefer:\n\n```rust\ntrait Algorithm {\n    fn encrypt(&self, buffer: &mut [u8]);\n}\n\nstruct Aes128;\nstruct ChaCha20;\n\nimpl Algorithm for Aes128 {\n    fn encrypt(&self, buffer: &mut [u8]) {\n        encrypt_aes128(buffer)\n    }\n}\n\nimpl Algorithm for ChaCha20 {\n    fn encrypt(&self, buffer: &mut [u8]) {\n        encrypt_chacha20(buffer)\n    }\n}\n```\n\n(or a function-pointer equivalent, which would be less idiomatic Rust.)\n\nSome judgement is needed: this is only worth it if a reasonable program\nwould not use all the possibilities, and the individual parts are large\nenough to have an impact on the size of a final program.\n\n### Small mandatory API\n\nWe should try to keep the API for achieving the most common goals\nas simple as possible.  Good models for this are `simpleclient` and\n`simpleserver`.  The purpose of this is to allow people interacting\nwith the library for the first time to make progress.\n\n### Safe and sensible defaults\n\nWe should be confident to make decisions on behalf of our users and\nexpress that in the [library's defaults][defaults].  It is good to\nencode our experience of TLS in this way, and we should not require that\nusers are experts in TLS to end up with a result that is working,\nsecure, stable, and performant.\n\n[defaults]: https://docs.rs/rustls/latest/rustls/manual/_05_defaults/index.html\n\n### Separation of mechanism and policy\n\nA configuration knob with a good default is preferable to a fixed\nbehavior, even if the end result is the same for 99% of users.\n\nWith that said, we should take care to avoid overloading users with\nchoices, and direct them (with examples, documentation, and simplified\ntop-level APIs) away from that complexity.\n\nThere is quite a lot of nuance here: configuration should avoid allowing\nbad outcomes (in the cryptographic, memory safety, and \"good netizen\" senses).\nWhere that is not possible we typically include `danger` in API naming to\nassist code reviewers of end-user code.\n\n## Licensing\n\nContributions are made under [rustls's licenses](LICENSE).\n"
        },
        {
          "name": "Cargo.lock",
          "type": "blob",
          "size": 85.80859375,
          "content": "# This file is automatically @generated by Cargo.\n# It is not intended for manual editing.\nversion = 3\n\n[[package]]\nname = \"addr2line\"\nversion = \"0.24.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dfbe277e56a376000877090da837660b4427aad530e3028d44e0bffe4f89a1c1\"\ndependencies = [\n \"gimli\",\n]\n\n[[package]]\nname = \"adler2\"\nversion = \"2.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"512761e0bb2578dd7380c6baaa0f4ce03e84f95e960231d1dec8bf4d7d6e2627\"\n\n[[package]]\nname = \"aead\"\nversion = \"0.5.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d122413f284cf2d62fb1b7db97e02edb8cda96d769b16e443a4f6195e35662b0\"\ndependencies = [\n \"crypto-common\",\n \"generic-array\",\n]\n\n[[package]]\nname = \"aes\"\nversion = \"0.8.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b169f7a6d4742236a0a00c541b845991d0ac43e546831af1249753ab4c3aa3a0\"\ndependencies = [\n \"cfg-if\",\n \"cipher\",\n \"cpufeatures\",\n]\n\n[[package]]\nname = \"aes-gcm\"\nversion = \"0.10.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"831010a0f742e1209b3bcea8fab6a8e149051ba6099432c8cb2cc117dec3ead1\"\ndependencies = [\n \"aead\",\n \"aes\",\n \"cipher\",\n \"ctr\",\n \"ghash\",\n \"subtle\",\n]\n\n[[package]]\nname = \"aho-corasick\"\nversion = \"1.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8e60d3430d3a69478ad0993f19238d2df97c507009a52b3c10addcd7f6bcb916\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"alloc-no-stdlib\"\nversion = \"2.0.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cc7bb162ec39d46ab1ca8c77bf72e890535becd1751bb45f64c597edb4c8c6b3\"\n\n[[package]]\nname = \"alloc-stdlib\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"94fb8275041c72129eb51b7d0322c29b8387a0386127718b096429201a5d6ece\"\ndependencies = [\n \"alloc-no-stdlib\",\n]\n\n[[package]]\nname = \"anes\"\nversion = \"0.1.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4b46cbb362ab8752921c97e041f5e366ee6297bd428a31275b9fcf1e380f7299\"\n\n[[package]]\nname = \"anstream\"\nversion = \"0.6.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8acc5369981196006228e28809f761875c0327210a891e941f4c683b3a99529b\"\ndependencies = [\n \"anstyle\",\n \"anstyle-parse\",\n \"anstyle-query\",\n \"anstyle-wincon\",\n \"colorchoice\",\n \"is_terminal_polyfill\",\n \"utf8parse\",\n]\n\n[[package]]\nname = \"anstyle\"\nversion = \"1.0.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"55cc3b69f167a1ef2e161439aa98aed94e6028e5f9a59be9a6ffb47aef1651f9\"\n\n[[package]]\nname = \"anstyle-parse\"\nversion = \"0.2.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3b2d16507662817a6a20a9ea92df6652ee4f94f914589377d69f3b21bc5798a9\"\ndependencies = [\n \"utf8parse\",\n]\n\n[[package]]\nname = \"anstyle-query\"\nversion = \"1.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"79947af37f4177cfead1110013d678905c37501914fba0efea834c3fe9a8d60c\"\ndependencies = [\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"anstyle-wincon\"\nversion = \"3.0.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2109dbce0e72be3ec00bed26e6a7479ca384ad226efdd66db8fa2e3a38c83125\"\ndependencies = [\n \"anstyle\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"anyhow\"\nversion = \"1.0.95\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"34ac096ce696dc2fcabef30516bb13c0a68a11d30131d3df6f04711467681b04\"\n\n[[package]]\nname = \"asn1\"\nversion = \"0.20.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2d8b84b4ea1de2bf1dcd2a759737ddb328fb6695b2a95eb7e44fed67e3406f32\"\ndependencies = [\n \"asn1_derive\",\n \"itoa\",\n]\n\n[[package]]\nname = \"asn1-rs\"\nversion = \"0.6.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5493c3bedbacf7fd7382c6346bbd66687d12bbaad3a89a2d2c303ee6cf20b048\"\ndependencies = [\n \"asn1-rs-derive\",\n \"asn1-rs-impl\",\n \"displaydoc\",\n \"nom\",\n \"num-traits\",\n \"rusticata-macros\",\n \"thiserror 1.0.69\",\n \"time\",\n]\n\n[[package]]\nname = \"asn1-rs-derive\"\nversion = \"0.5.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"965c2d33e53cb6b267e148a4cb0760bc01f4904c1cd4bb4002a085bb016d1490\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.95\",\n \"synstructure\",\n]\n\n[[package]]\nname = \"asn1-rs-impl\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7b18050c2cd6fe86c3a76584ef5e0baf286d038cda203eb6223df2cc413565f7\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.95\",\n]\n\n[[package]]\nname = \"asn1_derive\"\nversion = \"0.20.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a200809d0138620b3dba989f1d08d0620e76248bc1e62a2ec1b2df5eb1ee08ad\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.95\",\n]\n\n[[package]]\nname = \"async-attributes\"\nversion = \"1.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a3203e79f4dd9bdda415ed03cf14dae5a2bf775c683a00f94e9cd1faf0f596e5\"\ndependencies = [\n \"quote\",\n \"syn 1.0.109\",\n]\n\n[[package]]\nname = \"async-channel\"\nversion = \"1.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"81953c529336010edd6d8e358f886d9581267795c61b19475b71314bffa46d35\"\ndependencies = [\n \"concurrent-queue\",\n \"event-listener 2.5.3\",\n \"futures-core\",\n]\n\n[[package]]\nname = \"async-channel\"\nversion = \"2.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"89b47800b0be77592da0afd425cc03468052844aff33b84e33cc696f64e77b6a\"\ndependencies = [\n \"concurrent-queue\",\n \"event-listener-strategy\",\n \"futures-core\",\n \"pin-project-lite\",\n]\n\n[[package]]\nname = \"async-executor\"\nversion = \"1.13.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"30ca9a001c1e8ba5149f91a74362376cc6bc5b919d92d988668657bd570bdcec\"\ndependencies = [\n \"async-task\",\n \"concurrent-queue\",\n \"fastrand\",\n \"futures-lite\",\n \"slab\",\n]\n\n[[package]]\nname = \"async-global-executor\"\nversion = \"2.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"05b1b633a2115cd122d73b955eadd9916c18c8f510ec9cd1686404c60ad1c29c\"\ndependencies = [\n \"async-channel 2.3.1\",\n \"async-executor\",\n \"async-io\",\n \"async-lock\",\n \"blocking\",\n \"futures-lite\",\n \"once_cell\",\n]\n\n[[package]]\nname = \"async-io\"\nversion = \"2.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"43a2b323ccce0a1d90b449fd71f2a06ca7faa7c54c2751f06c9bd851fc061059\"\ndependencies = [\n \"async-lock\",\n \"cfg-if\",\n \"concurrent-queue\",\n \"futures-io\",\n \"futures-lite\",\n \"parking\",\n \"polling\",\n \"rustix\",\n \"slab\",\n \"tracing\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"async-lock\"\nversion = \"3.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ff6e472cdea888a4bd64f342f09b3f50e1886d32afe8df3d663c01140b811b18\"\ndependencies = [\n \"event-listener 5.4.0\",\n \"event-listener-strategy\",\n \"pin-project-lite\",\n]\n\n[[package]]\nname = \"async-recursion\"\nversion = \"1.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3b43422f69d8ff38f95f1b2bb76517c91589a924d1559a0e935d7c8ce0274c11\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.95\",\n]\n\n[[package]]\nname = \"async-std\"\nversion = \"1.13.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c634475f29802fde2b8f0b505b1bd00dfe4df7d4a000f0b36f7671197d5c3615\"\ndependencies = [\n \"async-attributes\",\n \"async-channel 1.9.0\",\n \"async-global-executor\",\n \"async-io\",\n \"async-lock\",\n \"crossbeam-utils\",\n \"futures-channel\",\n \"futures-core\",\n \"futures-io\",\n \"futures-lite\",\n \"gloo-timers\",\n \"kv-log-macro\",\n \"log\",\n \"memchr\",\n \"once_cell\",\n \"pin-project-lite\",\n \"pin-utils\",\n \"slab\",\n \"wasm-bindgen-futures\",\n]\n\n[[package]]\nname = \"async-task\"\nversion = \"4.7.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8b75356056920673b02621b35afd0f7dda9306d03c79a30f5c56c44cf256e3de\"\n\n[[package]]\nname = \"async-trait\"\nversion = \"0.1.85\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3f934833b4b7233644e5848f235df3f57ed8c80f1528a26c3dfa13d2147fa056\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.95\",\n]\n\n[[package]]\nname = \"atomic-waker\"\nversion = \"1.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1505bd5d3d116872e7271a6d4e16d81d0c8570876c8de68093a09ac269d8aac0\"\n\n[[package]]\nname = \"autocfg\"\nversion = \"1.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ace50bade8e6234aa140d9a2f552bbee1db4d353f69b8217bc503490fc1a9f26\"\n\n[[package]]\nname = \"aws-lc-fips-sys\"\nversion = \"0.13.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"59057b878509d88952425fe694a2806e468612bde2d71943f3cd8034935b5032\"\ndependencies = [\n \"bindgen\",\n \"cc\",\n \"cmake\",\n \"dunce\",\n \"fs_extra\",\n \"libc\",\n \"paste\",\n \"regex\",\n]\n\n[[package]]\nname = \"aws-lc-rs\"\nversion = \"1.12.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f409eb70b561706bf8abba8ca9c112729c481595893fd06a2dd9af8ed8441148\"\ndependencies = [\n \"aws-lc-fips-sys\",\n \"aws-lc-sys\",\n \"paste\",\n \"zeroize\",\n]\n\n[[package]]\nname = \"aws-lc-sys\"\nversion = \"0.24.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"923ded50f602b3007e5e63e3f094c479d9c8a9b42d7f4034e4afe456aa48bfd2\"\ndependencies = [\n \"bindgen\",\n \"cc\",\n \"cmake\",\n \"dunce\",\n \"fs_extra\",\n \"paste\",\n]\n\n[[package]]\nname = \"backtrace\"\nversion = \"0.3.74\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8d82cb332cdfaed17ae235a638438ac4d4839913cc2af585c3c6746e8f8bee1a\"\ndependencies = [\n \"addr2line\",\n \"cfg-if\",\n \"libc\",\n \"miniz_oxide\",\n \"object\",\n \"rustc-demangle\",\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"base16ct\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4c7f02d4ea65f2c1853089ffd8d2787bdbc63de2f0d29dedbcf8ccdfa0ccd4cf\"\n\n[[package]]\nname = \"base64\"\nversion = \"0.22.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"72b3254f16251a8381aa12e40e3c4d2f0199f8c6508fbecb9d91f575e0fbb8c6\"\n\n[[package]]\nname = \"base64ct\"\nversion = \"1.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8c3c1a368f70d6cf7302d78f8f7093da241fb8e8807c05cc9e51a125895a6d5b\"\n\n[[package]]\nname = \"bencher\"\nversion = \"0.1.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7dfdb4953a096c551ce9ace855a604d702e6e62d77fac690575ae347571717f5\"\n\n[[package]]\nname = \"bindgen\"\nversion = \"0.69.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"271383c67ccabffb7381723dea0672a673f292304fcb45c01cc648c7a8d58088\"\ndependencies = [\n \"bitflags\",\n \"cexpr\",\n \"clang-sys\",\n \"itertools 0.12.1\",\n \"lazy_static\",\n \"lazycell\",\n \"log\",\n \"prettyplease\",\n \"proc-macro2\",\n \"quote\",\n \"regex\",\n \"rustc-hash\",\n \"shlex\",\n \"syn 2.0.95\",\n \"which\",\n]\n\n[[package]]\nname = \"bitflags\"\nversion = \"2.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b048fb63fd8b5923fc5aa7b340d8e156aec7ec02f0c78fa8a6ddc2613f6f71de\"\n\n[[package]]\nname = \"block-buffer\"\nversion = \"0.10.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3078c7629b62d3f0439517fa394996acacc5cbc91c5a20d8c658e77abd503a71\"\ndependencies = [\n \"generic-array\",\n]\n\n[[package]]\nname = \"blocking\"\nversion = \"1.6.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"703f41c54fc768e63e091340b424302bb1c29ef4aa0c7f10fe849dfb114d29ea\"\ndependencies = [\n \"async-channel 2.3.1\",\n \"async-task\",\n \"futures-io\",\n \"futures-lite\",\n \"piper\",\n]\n\n[[package]]\nname = \"bogo\"\nversion = \"0.1.0\"\ndependencies = [\n \"base64\",\n \"env_logger\",\n \"rustls 0.23.21\",\n \"rustls-post-quantum\",\n]\n\n[[package]]\nname = \"brotli\"\nversion = \"7.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cc97b8f16f944bba54f0433f07e30be199b6dc2bd25937444bbad560bcea29bd\"\ndependencies = [\n \"alloc-no-stdlib\",\n \"alloc-stdlib\",\n \"brotli-decompressor\",\n]\n\n[[package]]\nname = \"brotli-decompressor\"\nversion = \"4.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9a45bd2e4095a8b518033b128020dd4a55aab1c0a381ba4404a472630f4bc362\"\ndependencies = [\n \"alloc-no-stdlib\",\n \"alloc-stdlib\",\n]\n\n[[package]]\nname = \"bumpalo\"\nversion = \"3.16.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"79296716171880943b8470b5f8d03aa55eb2e645a4874bdbb28adb49162e012c\"\n\n[[package]]\nname = \"byteorder\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1fd0f2584146f6f2ef48085050886acf353beff7305ebd1ae69500e27c67f64b\"\n\n[[package]]\nname = \"bytes\"\nversion = \"1.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"325918d6fe32f23b19878fe4b34794ae41fc19ddbe53b10571a4874d44ffd39b\"\n\n[[package]]\nname = \"cast\"\nversion = \"0.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"37b2a672a2cb129a2e41c10b1224bb368f9f37a2b16b612598138befd7b37eb5\"\n\n[[package]]\nname = \"cc\"\nversion = \"1.2.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a012a0df96dd6d06ba9a1b29d6402d1a5d77c6befd2566afdc26e10603dc93d7\"\ndependencies = [\n \"jobserver\",\n \"libc\",\n \"shlex\",\n]\n\n[[package]]\nname = \"cexpr\"\nversion = \"0.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6fac387a98bb7c37292057cffc56d62ecb629900026402633ae9160df93a8766\"\ndependencies = [\n \"nom\",\n]\n\n[[package]]\nname = \"cfg-if\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd\"\n\n[[package]]\nname = \"chacha20\"\nversion = \"0.9.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c3613f74bd2eac03dad61bd53dbe620703d4371614fe0bc3b9f04dd36fe4e818\"\ndependencies = [\n \"cfg-if\",\n \"cipher\",\n \"cpufeatures\",\n]\n\n[[package]]\nname = \"chacha20poly1305\"\nversion = \"0.10.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"10cd79432192d1c0f4e1a0fef9527696cc039165d729fb41b3f4f4f354c2dc35\"\ndependencies = [\n \"aead\",\n \"chacha20\",\n \"cipher\",\n \"poly1305\",\n \"zeroize\",\n]\n\n[[package]]\nname = \"ciborium\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"42e69ffd6f0917f5c029256a24d0161db17cea3997d185db0d35926308770f0e\"\ndependencies = [\n \"ciborium-io\",\n \"ciborium-ll\",\n \"serde\",\n]\n\n[[package]]\nname = \"ciborium-io\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"05afea1e0a06c9be33d539b876f1ce3692f4afea2cb41f740e7743225ed1c757\"\n\n[[package]]\nname = \"ciborium-ll\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"57663b653d948a338bfb3eeba9bb2fd5fcfaecb9e199e87e1eda4d9e8b240fd9\"\ndependencies = [\n \"ciborium-io\",\n \"half\",\n]\n\n[[package]]\nname = \"cipher\"\nversion = \"0.4.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"773f3b9af64447d2ce9850330c473515014aa235e6a783b02db81ff39e4a3dad\"\ndependencies = [\n \"crypto-common\",\n \"inout\",\n \"zeroize\",\n]\n\n[[package]]\nname = \"clang-sys\"\nversion = \"1.8.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0b023947811758c97c59bf9d1c188fd619ad4718dcaa767947df1cadb14f39f4\"\ndependencies = [\n \"glob\",\n \"libc\",\n \"libloading\",\n]\n\n[[package]]\nname = \"clap\"\nversion = \"4.5.26\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a8eb5e908ef3a6efbe1ed62520fb7287959888c88485abe072543190ecc66783\"\ndependencies = [\n \"clap_builder\",\n \"clap_derive\",\n]\n\n[[package]]\nname = \"clap_builder\"\nversion = \"4.5.26\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"96b01801b5fc6a0a232407abc821660c9c6d25a1cafc0d4f85f29fb8d9afc121\"\ndependencies = [\n \"anstream\",\n \"anstyle\",\n \"clap_lex\",\n \"strsim\",\n]\n\n[[package]]\nname = \"clap_derive\"\nversion = \"4.5.24\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"54b755194d6389280185988721fffba69495eed5ee9feeee9a599b53db80318c\"\ndependencies = [\n \"heck\",\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.95\",\n]\n\n[[package]]\nname = \"clap_lex\"\nversion = \"0.7.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f46ad14479a25103f283c0f10005961cf086d8dc42205bb44c46ac563475dca6\"\n\n[[package]]\nname = \"cmake\"\nversion = \"0.1.52\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c682c223677e0e5b6b7f63a64b9351844c3f1b1678a68b7ee617e30fb082620e\"\ndependencies = [\n \"cc\",\n]\n\n[[package]]\nname = \"colorchoice\"\nversion = \"1.0.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5b63caa9aa9397e2d9480a9b13673856c78d8ac123288526c37d7839f2a86990\"\n\n[[package]]\nname = \"concurrent-queue\"\nversion = \"2.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4ca0197aee26d1ae37445ee532fefce43251d24cc7c166799f4d46817f1d3973\"\ndependencies = [\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"const-oid\"\nversion = \"0.9.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c2459377285ad874054d797f3ccebf984978aa39129f6eafde5cdc8315b612f8\"\n\n[[package]]\nname = \"cpufeatures\"\nversion = \"0.2.16\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"16b80225097f2e5ae4e7179dd2266824648f3e2f49d9134d584b76389d31c4c3\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"crabgrind\"\nversion = \"0.1.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bdbd43e4f32a9681a504577db2d4ea7d3f7b1bf2e97955561af98501ab600508\"\ndependencies = [\n \"cc\",\n]\n\n[[package]]\nname = \"criterion\"\nversion = \"0.5.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f2b12d017a929603d80db1831cd3a24082f8137ce19c69e6447f54f5fc8d692f\"\ndependencies = [\n \"anes\",\n \"cast\",\n \"ciborium\",\n \"clap\",\n \"criterion-plot\",\n \"is-terminal\",\n \"itertools 0.10.5\",\n \"num-traits\",\n \"once_cell\",\n \"oorandom\",\n \"plotters\",\n \"rayon\",\n \"regex\",\n \"serde\",\n \"serde_derive\",\n \"serde_json\",\n \"tinytemplate\",\n \"walkdir\",\n]\n\n[[package]]\nname = \"criterion-plot\"\nversion = \"0.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6b50826342786a51a89e2da3a28f1c32b06e387201bc2d19791f622c673706b1\"\ndependencies = [\n \"cast\",\n \"itertools 0.10.5\",\n]\n\n[[package]]\nname = \"crossbeam-deque\"\nversion = \"0.8.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9dd111b7b7f7d55b72c0a6ae361660ee5853c9af73f70c3c2ef6858b950e2e51\"\ndependencies = [\n \"crossbeam-epoch\",\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"crossbeam-epoch\"\nversion = \"0.9.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5b82ac4a3c2ca9c3460964f020e1402edd5753411d7737aa39c3714ad1b5420e\"\ndependencies = [\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"crossbeam-utils\"\nversion = \"0.8.21\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d0a5c400df2834b80a4c3327b3aad3a4c4cd4de0629063962b03235697506a28\"\n\n[[package]]\nname = \"crunchy\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7a81dae078cea95a014a339291cec439d2f232ebe854a9d672b796c6afafa9b7\"\n\n[[package]]\nname = \"crypto-bigint\"\nversion = \"0.5.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0dc92fb57ca44df6db8059111ab3af99a63d5d0f8375d9972e319a379c6bab76\"\ndependencies = [\n \"generic-array\",\n \"rand_core\",\n \"subtle\",\n \"zeroize\",\n]\n\n[[package]]\nname = \"crypto-common\"\nversion = \"0.1.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1bfb12502f3fc46cca1bb51ac28df9d618d813cdc3d2f25b9fe775a34af26bb3\"\ndependencies = [\n \"generic-array\",\n \"typenum\",\n]\n\n[[package]]\nname = \"ctr\"\nversion = \"0.9.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0369ee1ad671834580515889b80f2ea915f23b8be8d0daa4bbaf2ac5c7590835\"\ndependencies = [\n \"cipher\",\n]\n\n[[package]]\nname = \"curve25519-dalek\"\nversion = \"4.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"97fb8b7c4503de7d6ae7b42ab72a5a59857b4c937ec27a3d4539dba95b5ab2be\"\ndependencies = [\n \"cfg-if\",\n \"cpufeatures\",\n \"curve25519-dalek-derive\",\n \"fiat-crypto\",\n \"rustc_version\",\n \"subtle\",\n \"zeroize\",\n]\n\n[[package]]\nname = \"curve25519-dalek-derive\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f46882e17999c6cc590af592290432be3bce0428cb0d5f8b6715e4dc7b383eb3\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.95\",\n]\n\n[[package]]\nname = \"data-encoding\"\nversion = \"2.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e8566979429cf69b49a5c740c60791108e86440e8be149bbea4fe54d2c32d6e2\"\n\n[[package]]\nname = \"der\"\nversion = \"0.7.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f55bf8e7b65898637379c1b74eb1551107c8294ed26d855ceb9fd1a09cfc9bc0\"\ndependencies = [\n \"const-oid\",\n \"zeroize\",\n]\n\n[[package]]\nname = \"der-parser\"\nversion = \"9.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5cd0a5c643689626bec213c4d8bd4d96acc8ffdb4ad4bb6bc16abf27d5f4b553\"\ndependencies = [\n \"asn1-rs\",\n \"displaydoc\",\n \"nom\",\n \"num-bigint\",\n \"num-traits\",\n \"rusticata-macros\",\n]\n\n[[package]]\nname = \"deranged\"\nversion = \"0.3.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b42b6fa04a440b495c8b04d0e71b707c585f83cb9cb28cf8cd0d976c315e31b4\"\ndependencies = [\n \"powerfmt\",\n]\n\n[[package]]\nname = \"digest\"\nversion = \"0.10.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9ed9a281f7bc9b7576e61468ba615a66a5c8cfdff42420a70aa82701a3b1e292\"\ndependencies = [\n \"block-buffer\",\n \"const-oid\",\n \"crypto-common\",\n \"subtle\",\n]\n\n[[package]]\nname = \"displaydoc\"\nversion = \"0.2.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"97369cbbc041bc366949bc74d34658d6cda5621039731c6310521892a3a20ae0\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.95\",\n]\n\n[[package]]\nname = \"dunce\"\nversion = \"1.0.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"92773504d58c093f6de2459af4af33faa518c13451eb8f2b5698ed3d36e7c813\"\n\n[[package]]\nname = \"ecdsa\"\nversion = \"0.16.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ee27f32b5c5292967d2d4a9d7f1e0b0aed2c15daded5a60300e4abb9d8020bca\"\ndependencies = [\n \"der\",\n \"digest\",\n \"elliptic-curve\",\n \"rfc6979\",\n \"signature\",\n \"spki\",\n]\n\n[[package]]\nname = \"either\"\nversion = \"1.13.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"60b1af1c220855b6ceac025d3f6ecdd2b7c4894bfe9cd9bda4fbb4bc7c0d4cf0\"\n\n[[package]]\nname = \"elliptic-curve\"\nversion = \"0.13.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b5e6043086bf7973472e0c7dff2142ea0b680d30e18d9cc40f267efbf222bd47\"\ndependencies = [\n \"base16ct\",\n \"crypto-bigint\",\n \"digest\",\n \"ff\",\n \"generic-array\",\n \"group\",\n \"hkdf\",\n \"pkcs8\",\n \"rand_core\",\n \"sec1\",\n \"subtle\",\n \"zeroize\",\n]\n\n[[package]]\nname = \"enum-as-inner\"\nversion = \"0.6.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a1e6a265c649f3f5979b601d26f1d05ada116434c87741c9493cb56218f76cbc\"\ndependencies = [\n \"heck\",\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.95\",\n]\n\n[[package]]\nname = \"env_filter\"\nversion = \"0.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"186e05a59d4c50738528153b83b0b0194d3a29507dfec16eccd4b342903397d0\"\ndependencies = [\n \"log\",\n \"regex\",\n]\n\n[[package]]\nname = \"env_logger\"\nversion = \"0.11.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dcaee3d8e3cfc3fd92428d477bc97fc29ec8716d180c0d74c643bb26166660e0\"\ndependencies = [\n \"anstream\",\n \"anstyle\",\n \"env_filter\",\n \"humantime\",\n \"log\",\n]\n\n[[package]]\nname = \"equivalent\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5443807d6dff69373d433ab9ef5378ad8df50ca6298caf15de6e52e24aaf54d5\"\n\n[[package]]\nname = \"errno\"\nversion = \"0.3.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"33d852cb9b869c2a9b3df2f71a3074817f01e1844f839a144f5fcef059a4eb5d\"\ndependencies = [\n \"libc\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"event-listener\"\nversion = \"2.5.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0206175f82b8d6bf6652ff7d71a1e27fd2e4efde587fd368662814d6ec1d9ce0\"\n\n[[package]]\nname = \"event-listener\"\nversion = \"5.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3492acde4c3fc54c845eaab3eed8bd00c7a7d881f78bfc801e43a93dec1331ae\"\ndependencies = [\n \"concurrent-queue\",\n \"parking\",\n \"pin-project-lite\",\n]\n\n[[package]]\nname = \"event-listener-strategy\"\nversion = \"0.5.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3c3e4e0dd3673c1139bf041f3008816d9cf2946bbfac2945c09e523b8d7b05b2\"\ndependencies = [\n \"event-listener 5.4.0\",\n \"pin-project-lite\",\n]\n\n[[package]]\nname = \"fastrand\"\nversion = \"2.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"37909eebbb50d72f9059c3b6d82c0463f2ff062c9e95845c43a6c9c0355411be\"\n\n[[package]]\nname = \"ff\"\nversion = \"0.13.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ded41244b729663b1e574f1b4fb731469f69f79c17667b5d776b16cda0479449\"\ndependencies = [\n \"rand_core\",\n \"subtle\",\n]\n\n[[package]]\nname = \"fiat-crypto\"\nversion = \"0.2.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"28dea519a9695b9977216879a3ebfddf92f1c08c05d984f8996aecd6ecdc811d\"\n\n[[package]]\nname = \"fnv\"\nversion = \"1.0.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3f9eec918d3f24069decb9af1554cad7c880e2da24a9afd88aca000531ab82c1\"\n\n[[package]]\nname = \"foldhash\"\nversion = \"0.1.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a0d2fde1f7b3d48b8395d5f2de76c18a528bd6a9cdde438df747bfcba3e05d6f\"\n\n[[package]]\nname = \"foreign-types\"\nversion = \"0.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f6f339eb8adc052cd2ca78910fda869aefa38d22d5cb648e6485e4d3fc06f3b1\"\ndependencies = [\n \"foreign-types-shared\",\n]\n\n[[package]]\nname = \"foreign-types-shared\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"00b0228411908ca8685dba7fc2cdd70ec9990a6e753e89b6ac91a84c40fbaf4b\"\n\n[[package]]\nname = \"form_urlencoded\"\nversion = \"1.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e13624c2627564efccf4934284bdd98cbaa14e79b0b5a141218e507b3a823456\"\ndependencies = [\n \"percent-encoding\",\n]\n\n[[package]]\nname = \"fs_extra\"\nversion = \"1.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"42703706b716c37f96a77aea830392ad231f44c9e9a67872fa5548707e11b11c\"\n\n[[package]]\nname = \"futures-channel\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2dff15bf788c671c1934e366d07e30c1814a8ef514e1af724a602e8a2fbe1b10\"\ndependencies = [\n \"futures-core\",\n]\n\n[[package]]\nname = \"futures-core\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"05f29059c0c2090612e8d742178b0580d2dc940c837851ad723096f87af6663e\"\n\n[[package]]\nname = \"futures-io\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9e5c1b78ca4aae1ac06c48a526a655760685149f0d465d21f37abfe57ce075c6\"\n\n[[package]]\nname = \"futures-lite\"\nversion = \"2.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cef40d21ae2c515b51041df9ed313ed21e572df340ea58a922a0aefe7e8891a1\"\ndependencies = [\n \"fastrand\",\n \"futures-core\",\n \"futures-io\",\n \"parking\",\n \"pin-project-lite\",\n]\n\n[[package]]\nname = \"futures-sink\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e575fab7d1e0dcb8d0c7bcf9a63ee213816ab51902e6d244a95819acacf1d4f7\"\n\n[[package]]\nname = \"futures-task\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f90f7dce0722e95104fcb095585910c0977252f286e354b5e3bd38902cd99988\"\n\n[[package]]\nname = \"futures-util\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9fa08315bb612088cc391249efdc3bc77536f16c91f6cf495e6fbe85b20a4a81\"\ndependencies = [\n \"futures-core\",\n \"futures-task\",\n \"pin-project-lite\",\n \"pin-utils\",\n \"slab\",\n]\n\n[[package]]\nname = \"fxhash\"\nversion = \"0.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c31b6d751ae2c7f11320402d34e41349dd1016f8d5d45e48c4312bc8625af50c\"\ndependencies = [\n \"byteorder\",\n]\n\n[[package]]\nname = \"generic-array\"\nversion = \"0.14.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"85649ca51fd72272d7821adaf274ad91c288277713d9c18820d8499a7ff69e9a\"\ndependencies = [\n \"typenum\",\n \"version_check\",\n \"zeroize\",\n]\n\n[[package]]\nname = \"getrandom\"\nversion = \"0.2.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c4567c8db10ae91089c99af84c68c38da3ec2f087c3f82960bcdbf3656b6f4d7\"\ndependencies = [\n \"cfg-if\",\n \"libc\",\n \"wasi\",\n]\n\n[[package]]\nname = \"ghash\"\nversion = \"0.5.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f0d8a4362ccb29cb0b265253fb0a2728f592895ee6854fd9bc13f2ffda266ff1\"\ndependencies = [\n \"opaque-debug\",\n \"polyval\",\n]\n\n[[package]]\nname = \"gimli\"\nversion = \"0.31.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"07e28edb80900c19c28f1072f2e8aeca7fa06b23cd4169cefe1af5aa3260783f\"\n\n[[package]]\nname = \"glob\"\nversion = \"0.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a8d1add55171497b4705a648c6b583acafb01d58050a51727785f0b2c8e0a2b2\"\n\n[[package]]\nname = \"gloo-timers\"\nversion = \"0.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bbb143cf96099802033e0d4f4963b19fd2e0b728bcf076cd9cf7f6634f092994\"\ndependencies = [\n \"futures-channel\",\n \"futures-core\",\n \"js-sys\",\n \"wasm-bindgen\",\n]\n\n[[package]]\nname = \"group\"\nversion = \"0.13.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f0f9ef7462f7c099f518d754361858f86d8a07af53ba9af0fe635bbccb151a63\"\ndependencies = [\n \"ff\",\n \"rand_core\",\n \"subtle\",\n]\n\n[[package]]\nname = \"h2\"\nversion = \"0.4.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ccae279728d634d083c00f6099cb58f01cc99c145b84b8be2f6c74618d79922e\"\ndependencies = [\n \"atomic-waker\",\n \"bytes\",\n \"fnv\",\n \"futures-core\",\n \"futures-sink\",\n \"http\",\n \"indexmap\",\n \"slab\",\n \"tokio\",\n \"tokio-util\",\n \"tracing\",\n]\n\n[[package]]\nname = \"half\"\nversion = \"2.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6dd08c532ae367adf81c312a4580bc67f1d0fe8bc9c460520283f4c0ff277888\"\ndependencies = [\n \"cfg-if\",\n \"crunchy\",\n]\n\n[[package]]\nname = \"hashbrown\"\nversion = \"0.15.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bf151400ff0baff5465007dd2f3e717f3fe502074ca563069ce3a6629d07b289\"\ndependencies = [\n \"foldhash\",\n]\n\n[[package]]\nname = \"heck\"\nversion = \"0.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2304e00983f87ffb38b55b444b5e3b60a884b5d30c0fca7d82fe33449bbe55ea\"\n\n[[package]]\nname = \"hermit-abi\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fbf6a919d6cf397374f7dfeeea91d974c7c0a7221d0d0f4f20d859d329e53fcc\"\n\n[[package]]\nname = \"hex\"\nversion = \"0.4.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7f24254aa9a54b5c858eaee2f5bccdb46aaf0e486a595ed5fd8f86ba55232a70\"\n\n[[package]]\nname = \"hickory-proto\"\nversion = \"0.25.0-alpha.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d063c0692ee669aa6d261988aa19ca5510f1cc40e4f211024f50c888499a35d7\"\ndependencies = [\n \"async-recursion\",\n \"async-trait\",\n \"bytes\",\n \"cfg-if\",\n \"data-encoding\",\n \"enum-as-inner\",\n \"futures-channel\",\n \"futures-io\",\n \"futures-util\",\n \"h2\",\n \"http\",\n \"idna\",\n \"ipnet\",\n \"once_cell\",\n \"rand\",\n \"rustls 0.23.20\",\n \"thiserror 2.0.10\",\n \"tinyvec\",\n \"tokio\",\n \"tokio-rustls\",\n \"tracing\",\n \"url\",\n \"webpki-roots\",\n]\n\n[[package]]\nname = \"hickory-resolver\"\nversion = \"0.25.0-alpha.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0eec9ac701a9b34a77c8ccbe39d589db876290f6bdc6e05ac118fd114cb1ad26\"\ndependencies = [\n \"cfg-if\",\n \"futures-util\",\n \"hickory-proto\",\n \"ipconfig\",\n \"lru-cache\",\n \"once_cell\",\n \"parking_lot\",\n \"rand\",\n \"resolv-conf\",\n \"rustls 0.23.20\",\n \"smallvec\",\n \"thiserror 1.0.69\",\n \"tokio\",\n \"tokio-rustls\",\n \"tracing\",\n \"webpki-roots\",\n]\n\n[[package]]\nname = \"hkdf\"\nversion = \"0.12.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7b5f8eb2ad728638ea2c7d47a21db23b7b58a72ed6a38256b8a1849f15fbbdf7\"\ndependencies = [\n \"hmac\",\n]\n\n[[package]]\nname = \"hmac\"\nversion = \"0.12.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6c49c37c09c17a53d937dfbb742eb3a961d65a994e6bcdcf37e7399d0cc8ab5e\"\ndependencies = [\n \"digest\",\n]\n\n[[package]]\nname = \"home\"\nversion = \"0.5.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"589533453244b0995c858700322199b2becb13b627df2851f64a2775d024abcf\"\ndependencies = [\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"hostname\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3c731c3e10504cc8ed35cfe2f1db4c9274c3d35fa486e3b31df46f068ef3e867\"\ndependencies = [\n \"libc\",\n \"match_cfg\",\n \"winapi\",\n]\n\n[[package]]\nname = \"hpke-rs\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e11bd4ee27b79fa1820e72ef8489cc729c87299ec3f7f52b8fc8dcb87cb2d485\"\ndependencies = [\n \"hpke-rs-crypto\",\n \"log\",\n \"zeroize\",\n]\n\n[[package]]\nname = \"hpke-rs-crypto\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1c3f1ae0a26c18d6469a70db1217136056261c4a244b09a755bc60bd4e055b67\"\ndependencies = [\n \"rand_core\",\n]\n\n[[package]]\nname = \"hpke-rs-rust-crypto\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a08d4500baf0aced746723d3515d08212bdb9d941df6d1aca3d46d1619b2a1cf\"\ndependencies = [\n \"aes-gcm\",\n \"chacha20poly1305\",\n \"hkdf\",\n \"hpke-rs-crypto\",\n \"p256\",\n \"p384\",\n \"rand_chacha\",\n \"rand_core\",\n \"sha2\",\n \"x25519-dalek\",\n]\n\n[[package]]\nname = \"http\"\nversion = \"1.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f16ca2af56261c99fba8bac40a10251ce8188205a4c448fbb745a2e4daa76fea\"\ndependencies = [\n \"bytes\",\n \"fnv\",\n \"itoa\",\n]\n\n[[package]]\nname = \"humantime\"\nversion = \"2.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9a3a5bfb195931eeb336b2a7b4d761daec841b97f947d34394601737a7bba5e4\"\n\n[[package]]\nname = \"icu_collections\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"db2fa452206ebee18c4b5c2274dbf1de17008e874b4dc4f0aea9d01ca79e4526\"\ndependencies = [\n \"displaydoc\",\n \"yoke\",\n \"zerofrom\",\n \"zerovec\",\n]\n\n[[package]]\nname = \"icu_locid\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"13acbb8371917fc971be86fc8057c41a64b521c184808a698c02acc242dbf637\"\ndependencies = [\n \"displaydoc\",\n \"litemap\",\n \"tinystr\",\n \"writeable\",\n \"zerovec\",\n]\n\n[[package]]\nname = \"icu_locid_transform\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"01d11ac35de8e40fdeda00d9e1e9d92525f3f9d887cdd7aa81d727596788b54e\"\ndependencies = [\n \"displaydoc\",\n \"icu_locid\",\n \"icu_locid_transform_data\",\n \"icu_provider\",\n \"tinystr\",\n \"zerovec\",\n]\n\n[[package]]\nname = \"icu_locid_transform_data\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fdc8ff3388f852bede6b579ad4e978ab004f139284d7b28715f773507b946f6e\"\n\n[[package]]\nname = \"icu_normalizer\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"19ce3e0da2ec68599d193c93d088142efd7f9c5d6fc9b803774855747dc6a84f\"\ndependencies = [\n \"displaydoc\",\n \"icu_collections\",\n \"icu_normalizer_data\",\n \"icu_properties\",\n \"icu_provider\",\n \"smallvec\",\n \"utf16_iter\",\n \"utf8_iter\",\n \"write16\",\n \"zerovec\",\n]\n\n[[package]]\nname = \"icu_normalizer_data\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f8cafbf7aa791e9b22bec55a167906f9e1215fd475cd22adfcf660e03e989516\"\n\n[[package]]\nname = \"icu_properties\"\nversion = \"1.5.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"93d6020766cfc6302c15dbbc9c8778c37e62c14427cb7f6e601d849e092aeef5\"\ndependencies = [\n \"displaydoc\",\n \"icu_collections\",\n \"icu_locid_transform\",\n \"icu_properties_data\",\n \"icu_provider\",\n \"tinystr\",\n \"zerovec\",\n]\n\n[[package]]\nname = \"icu_properties_data\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"67a8effbc3dd3e4ba1afa8ad918d5684b8868b3b26500753effea8d2eed19569\"\n\n[[package]]\nname = \"icu_provider\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6ed421c8a8ef78d3e2dbc98a973be2f3770cb42b606e3ab18d6237c4dfde68d9\"\ndependencies = [\n \"displaydoc\",\n \"icu_locid\",\n \"icu_provider_macros\",\n \"stable_deref_trait\",\n \"tinystr\",\n \"writeable\",\n \"yoke\",\n \"zerofrom\",\n \"zerovec\",\n]\n\n[[package]]\nname = \"icu_provider_macros\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1ec89e9337638ecdc08744df490b221a7399bf8d164eb52a665454e60e075ad6\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.95\",\n]\n\n[[package]]\nname = \"idna\"\nversion = \"1.0.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"686f825264d630750a544639377bae737628043f20d38bbc029e8f29ea968a7e\"\ndependencies = [\n \"idna_adapter\",\n \"smallvec\",\n \"utf8_iter\",\n]\n\n[[package]]\nname = \"idna_adapter\"\nversion = \"1.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"daca1df1c957320b2cf139ac61e7bd64fed304c5040df000a745aa1de3b4ef71\"\ndependencies = [\n \"icu_normalizer\",\n \"icu_properties\",\n]\n\n[[package]]\nname = \"indexmap\"\nversion = \"2.7.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"62f822373a4fe84d4bb149bf54e584a7f4abec90e072ed49cda0edea5b95471f\"\ndependencies = [\n \"equivalent\",\n \"hashbrown\",\n]\n\n[[package]]\nname = \"inout\"\nversion = \"0.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a0c10553d664a4d0bcff9f4215d0aac67a639cc68ef660840afe309b807bc9f5\"\ndependencies = [\n \"generic-array\",\n]\n\n[[package]]\nname = \"ipconfig\"\nversion = \"0.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b58db92f96b720de98181bbbe63c831e87005ab460c1bf306eb2622b4707997f\"\ndependencies = [\n \"socket2\",\n \"widestring\",\n \"windows-sys 0.48.0\",\n \"winreg\",\n]\n\n[[package]]\nname = \"ipnet\"\nversion = \"2.10.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ddc24109865250148c2e0f3d25d4f0f479571723792d3802153c60922a4fb708\"\n\n[[package]]\nname = \"is-terminal\"\nversion = \"0.4.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"261f68e344040fbd0edea105bef17c66edf46f984ddb1115b775ce31be948f4b\"\ndependencies = [\n \"hermit-abi\",\n \"libc\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"is_terminal_polyfill\"\nversion = \"1.70.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7943c866cc5cd64cbc25b2e01621d07fa8eb2a1a23160ee81ce38704e97b8ecf\"\n\n[[package]]\nname = \"itertools\"\nversion = \"0.10.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b0fd2260e829bddf4cb6ea802289de2f86d6a7a690192fbe91b3f46e0f2c8473\"\ndependencies = [\n \"either\",\n]\n\n[[package]]\nname = \"itertools\"\nversion = \"0.12.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ba291022dbbd398a455acf126c1e341954079855bc60dfdda641363bd6922569\"\ndependencies = [\n \"either\",\n]\n\n[[package]]\nname = \"itertools\"\nversion = \"0.14.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2b192c782037fadd9cfa75548310488aabdbf3d2da73885b31bd0abd03351285\"\ndependencies = [\n \"either\",\n]\n\n[[package]]\nname = \"itoa\"\nversion = \"1.0.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d75a2a4b1b190afb6f5425f10f6a8f959d2ea0b9c2b1d79553551850539e4674\"\n\n[[package]]\nname = \"jobserver\"\nversion = \"0.1.32\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"48d1dbcbbeb6a7fec7e059840aa538bd62aaccf972c7346c4d9d2059312853d0\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"js-sys\"\nversion = \"0.3.76\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6717b6b5b077764fb5966237269cb3c64edddde4b14ce42647430a78ced9e7b7\"\ndependencies = [\n \"once_cell\",\n \"wasm-bindgen\",\n]\n\n[[package]]\nname = \"kv-log-macro\"\nversion = \"1.0.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0de8b303297635ad57c9f5059fd9cee7a47f8e8daa09df0fcd07dd39fb22977f\"\ndependencies = [\n \"log\",\n]\n\n[[package]]\nname = \"lazy_static\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bbd2bcb4c963f2ddae06a2efc7e9f3591312473c50c6685e1f298068316e66fe\"\ndependencies = [\n \"spin\",\n]\n\n[[package]]\nname = \"lazycell\"\nversion = \"1.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"830d08ce1d1d941e6b30645f1a0eb5643013d835ce3779a5fc208261dbe10f55\"\n\n[[package]]\nname = \"libc\"\nversion = \"0.2.169\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b5aba8db14291edd000dfcc4d620c7ebfb122c613afb886ca8803fa4e128a20a\"\n\n[[package]]\nname = \"libloading\"\nversion = \"0.8.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fc2f4eb4bc735547cfed7c0a4922cbd04a4655978c09b54f1f7b228750664c34\"\ndependencies = [\n \"cfg-if\",\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"libm\"\nversion = \"0.2.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8355be11b20d696c8f18f6cc018c4e372165b1fa8126cef092399c9951984ffa\"\n\n[[package]]\nname = \"linked-hash-map\"\nversion = \"0.5.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0717cef1bc8b636c6e1c1bbdefc09e6322da8a9321966e8928ef80d20f7f770f\"\n\n[[package]]\nname = \"linux-raw-sys\"\nversion = \"0.4.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d26c52dbd32dccf2d10cac7725f8eae5296885fb5703b261f7d0a0739ec807ab\"\n\n[[package]]\nname = \"litemap\"\nversion = \"0.7.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4ee93343901ab17bd981295f2cf0026d4ad018c7c31ba84549a4ddbb47a45104\"\n\n[[package]]\nname = \"lock_api\"\nversion = \"0.4.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"07af8b9cdd281b7915f413fa73f29ebd5d55d0d3f0155584dade1ff18cea1b17\"\ndependencies = [\n \"autocfg\",\n \"scopeguard\",\n]\n\n[[package]]\nname = \"log\"\nversion = \"0.4.22\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a7a70ba024b9dc04c27ea2f0c0548feb474ec5c54bba33a7f72f873a39d07b24\"\ndependencies = [\n \"value-bag\",\n]\n\n[[package]]\nname = \"lru-cache\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"31e24f1ad8321ca0e8a1e0ac13f23cb668e6f5466c2c57319f6a5cf1cc8e3b1c\"\ndependencies = [\n \"linked-hash-map\",\n]\n\n[[package]]\nname = \"macro_rules_attribute\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8a82271f7bc033d84bbca59a3ce3e4159938cb08a9c3aebbe54d215131518a13\"\ndependencies = [\n \"macro_rules_attribute-proc_macro\",\n \"paste\",\n]\n\n[[package]]\nname = \"macro_rules_attribute-proc_macro\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b8dd856d451cc0da70e2ef2ce95a18e39a93b7558bedf10201ad28503f918568\"\n\n[[package]]\nname = \"match_cfg\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ffbee8634e0d45d258acb448e7eaab3fce7a0a467395d4d9f228e3c1f01fb2e4\"\n\n[[package]]\nname = \"memchr\"\nversion = \"2.7.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"78ca9ab1a0babb1e7d5695e3530886289c18cf2f87ec19a575a0abdce112e3a3\"\n\n[[package]]\nname = \"minimal-lexical\"\nversion = \"0.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"68354c5c6bd36d73ff3feceb05efa59b6acb7626617f4962be322a825e61f79a\"\n\n[[package]]\nname = \"miniz_oxide\"\nversion = \"0.8.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4ffbe83022cedc1d264172192511ae958937694cd57ce297164951b8b3568394\"\ndependencies = [\n \"adler2\",\n]\n\n[[package]]\nname = \"mio\"\nversion = \"1.0.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2886843bf800fba2e3377cff24abf6379b4c4d5c6681eaf9ea5b0d15090450bd\"\ndependencies = [\n \"libc\",\n \"log\",\n \"wasi\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"nom\"\nversion = \"7.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d273983c5a657a70a3e8f2a01329822f3b8c8172b73826411a55751e404a0a4a\"\ndependencies = [\n \"memchr\",\n \"minimal-lexical\",\n]\n\n[[package]]\nname = \"num-bigint\"\nversion = \"0.4.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a5e44f723f1133c9deac646763579fdb3ac745e418f2a7af9cd0c431da1f20b9\"\ndependencies = [\n \"num-integer\",\n \"num-traits\",\n]\n\n[[package]]\nname = \"num-bigint-dig\"\nversion = \"0.8.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dc84195820f291c7697304f3cbdadd1cb7199c0efc917ff5eafd71225c136151\"\ndependencies = [\n \"byteorder\",\n \"lazy_static\",\n \"libm\",\n \"num-integer\",\n \"num-iter\",\n \"num-traits\",\n \"rand\",\n \"smallvec\",\n \"zeroize\",\n]\n\n[[package]]\nname = \"num-conv\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"51d515d32fb182ee37cda2ccdcb92950d6a3c2893aa280e540671c2cd0f3b1d9\"\n\n[[package]]\nname = \"num-integer\"\nversion = \"0.1.46\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7969661fd2958a5cb096e56c8e1ad0444ac2bbcd0061bd28660485a44879858f\"\ndependencies = [\n \"num-traits\",\n]\n\n[[package]]\nname = \"num-iter\"\nversion = \"0.1.45\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1429034a0490724d0075ebb2bc9e875d6503c3cf69e235a8941aa757d83ef5bf\"\ndependencies = [\n \"autocfg\",\n \"num-integer\",\n \"num-traits\",\n]\n\n[[package]]\nname = \"num-traits\"\nversion = \"0.2.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"071dfc062690e90b734c0b2273ce72ad0ffa95f0c74596bc250dcfd960262841\"\ndependencies = [\n \"autocfg\",\n \"libm\",\n]\n\n[[package]]\nname = \"object\"\nversion = \"0.36.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"62948e14d923ea95ea2c7c86c71013138b66525b86bdc08d2dcc262bdb497b87\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"oid-registry\"\nversion = \"0.7.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a8d8034d9489cdaf79228eb9f6a3b8d7bb32ba00d6645ebd48eef4077ceb5bd9\"\ndependencies = [\n \"asn1-rs\",\n]\n\n[[package]]\nname = \"once_cell\"\nversion = \"1.20.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1261fe7e33c73b354eab43b1273a57c8f967d0391e80353e51f764ac02cf6775\"\n\n[[package]]\nname = \"oorandom\"\nversion = \"11.1.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b410bbe7e14ab526a0e86877eb47c6996a2bd7746f027ba551028c925390e4e9\"\n\n[[package]]\nname = \"opaque-debug\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c08d65885ee38876c4f86fa503fb49d7b507c2b62552df7c70b2fce627e06381\"\n\n[[package]]\nname = \"openssl\"\nversion = \"0.10.68\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6174bc48f102d208783c2c84bf931bb75927a617866870de8a4ea85597f871f5\"\ndependencies = [\n \"bitflags\",\n \"cfg-if\",\n \"foreign-types\",\n \"libc\",\n \"once_cell\",\n \"openssl-macros\",\n \"openssl-sys\",\n]\n\n[[package]]\nname = \"openssl-macros\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a948666b637a0f465e8564c73e89d4dde00d72d4d473cc972f390fc3dcee7d9c\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.95\",\n]\n\n[[package]]\nname = \"openssl-sys\"\nversion = \"0.9.104\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"45abf306cbf99debc8195b66b7346498d7b10c210de50418b5ccd7ceba08c741\"\ndependencies = [\n \"cc\",\n \"libc\",\n \"pkg-config\",\n \"vcpkg\",\n]\n\n[[package]]\nname = \"p256\"\nversion = \"0.13.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c9863ad85fa8f4460f9c48cb909d38a0d689dba1f6f6988a5e3e0d31071bcd4b\"\ndependencies = [\n \"ecdsa\",\n \"elliptic-curve\",\n \"primeorder\",\n \"sha2\",\n]\n\n[[package]]\nname = \"p384\"\nversion = \"0.13.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"70786f51bcc69f6a4c0360e063a4cac5419ef7c5cd5b3c99ad70f3be5ba79209\"\ndependencies = [\n \"elliptic-curve\",\n \"primeorder\",\n]\n\n[[package]]\nname = \"parking\"\nversion = \"2.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f38d5652c16fde515bb1ecef450ab0f6a219d619a7274976324d5e377f7dceba\"\n\n[[package]]\nname = \"parking_lot\"\nversion = \"0.12.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f1bf18183cf54e8d6059647fc3063646a1801cf30896933ec2311622cc4b9a27\"\ndependencies = [\n \"lock_api\",\n \"parking_lot_core\",\n]\n\n[[package]]\nname = \"parking_lot_core\"\nversion = \"0.9.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1e401f977ab385c9e4e3ab30627d6f26d00e2c73eef317493c4ec6d468726cf8\"\ndependencies = [\n \"cfg-if\",\n \"libc\",\n \"redox_syscall\",\n \"smallvec\",\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"paste\"\nversion = \"1.0.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\"\n\n[[package]]\nname = \"pem\"\nversion = \"3.0.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8e459365e590736a54c3fa561947c84837534b8e9af6fc5bf781307e82658fae\"\ndependencies = [\n \"base64\",\n \"serde\",\n]\n\n[[package]]\nname = \"percent-encoding\"\nversion = \"2.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e3148f5046208a5d56bcfc03053e3ca6334e51da8dfb19b6cdc8b306fae3283e\"\n\n[[package]]\nname = \"pin-project-lite\"\nversion = \"0.2.16\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3b3cff922bd51709b605d9ead9aa71031d81447142d828eb4a6eba76fe619f9b\"\n\n[[package]]\nname = \"pin-utils\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8b870d8c151b6f2fb93e84a13146138f05d02ed11c7e7c54f8826aaaf7c9f184\"\n\n[[package]]\nname = \"piper\"\nversion = \"0.2.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"96c8c490f422ef9a4efd2cb5b42b76c8613d7e7dfc1caf667b8a3350a5acc066\"\ndependencies = [\n \"atomic-waker\",\n \"fastrand\",\n \"futures-io\",\n]\n\n[[package]]\nname = \"pkcs1\"\nversion = \"0.7.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c8ffb9f10fa047879315e6625af03c164b16962a5368d724ed16323b68ace47f\"\ndependencies = [\n \"der\",\n \"pkcs8\",\n \"spki\",\n]\n\n[[package]]\nname = \"pkcs8\"\nversion = \"0.10.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f950b2377845cebe5cf8b5165cb3cc1a5e0fa5cfa3e1f7f55707d8fd82e0a7b7\"\ndependencies = [\n \"der\",\n \"spki\",\n]\n\n[[package]]\nname = \"pkg-config\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"953ec861398dccce10c670dfeaf3ec4911ca479e9c02154b3a215178c5f566f2\"\n\n[[package]]\nname = \"plotters\"\nversion = \"0.3.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5aeb6f403d7a4911efb1e33402027fc44f29b5bf6def3effcc22d7bb75f2b747\"\ndependencies = [\n \"num-traits\",\n \"plotters-backend\",\n \"plotters-svg\",\n \"wasm-bindgen\",\n \"web-sys\",\n]\n\n[[package]]\nname = \"plotters-backend\"\nversion = \"0.3.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"df42e13c12958a16b3f7f4386b9ab1f3e7933914ecea48da7139435263a4172a\"\n\n[[package]]\nname = \"plotters-svg\"\nversion = \"0.3.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"51bae2ac328883f7acdfea3d66a7c35751187f870bc81f94563733a154d7a670\"\ndependencies = [\n \"plotters-backend\",\n]\n\n[[package]]\nname = \"polling\"\nversion = \"3.7.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a604568c3202727d1507653cb121dbd627a58684eb09a820fd746bee38b4442f\"\ndependencies = [\n \"cfg-if\",\n \"concurrent-queue\",\n \"hermit-abi\",\n \"pin-project-lite\",\n \"rustix\",\n \"tracing\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"poly1305\"\nversion = \"0.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8159bd90725d2df49889a078b54f4f79e87f1f8a8444194cdca81d38f5393abf\"\ndependencies = [\n \"cpufeatures\",\n \"opaque-debug\",\n \"universal-hash\",\n]\n\n[[package]]\nname = \"polyval\"\nversion = \"0.6.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9d1fe60d06143b2430aa532c94cfe9e29783047f06c0d7fd359a9a51b729fa25\"\ndependencies = [\n \"cfg-if\",\n \"cpufeatures\",\n \"opaque-debug\",\n \"universal-hash\",\n]\n\n[[package]]\nname = \"powerfmt\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"439ee305def115ba05938db6eb1644ff94165c5ab5e9420d1c1bcedbba909391\"\n\n[[package]]\nname = \"ppv-lite86\"\nversion = \"0.2.20\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"77957b295656769bb8ad2b6a6b09d897d94f05c41b069aede1fcdaa675eaea04\"\ndependencies = [\n \"zerocopy\",\n]\n\n[[package]]\nname = \"prettyplease\"\nversion = \"0.2.27\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"483f8c21f64f3ea09fe0f30f5d48c3e8eefe5dac9129f0075f76593b4c1da705\"\ndependencies = [\n \"proc-macro2\",\n \"syn 2.0.95\",\n]\n\n[[package]]\nname = \"primeorder\"\nversion = \"0.13.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"353e1ca18966c16d9deb1c69278edbc5f194139612772bd9537af60ac231e1e6\"\ndependencies = [\n \"elliptic-curve\",\n]\n\n[[package]]\nname = \"proc-macro2\"\nversion = \"1.0.92\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"37d3544b3f2748c54e147655edb5025752e2303145b5aefb3c3ea2c78b973bb0\"\ndependencies = [\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"quick-error\"\nversion = \"1.2.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a1d01941d82fa2ab50be1e79e6714289dd7cde78eba4c074bc5a4374f650dfe0\"\n\n[[package]]\nname = \"quote\"\nversion = \"1.0.38\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0e4dccaaaf89514f546c693ddc140f729f958c247918a13380cccc6078391acc\"\ndependencies = [\n \"proc-macro2\",\n]\n\n[[package]]\nname = \"rand\"\nversion = \"0.8.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"34af8d1a0e25924bc5b7c43c079c942339d8f0a8b57c39049bef581b46327404\"\ndependencies = [\n \"libc\",\n \"rand_chacha\",\n \"rand_core\",\n]\n\n[[package]]\nname = \"rand_chacha\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e6c10a63a0fa32252be49d21e7709d4d4baf8d231c2dbce1eaa8141b9b127d88\"\ndependencies = [\n \"ppv-lite86\",\n \"rand_core\",\n]\n\n[[package]]\nname = \"rand_core\"\nversion = \"0.6.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ec0be4795e2f6a28069bec0b5ff3e2ac9bafc99e6a9a7dc3547996c5c816922c\"\ndependencies = [\n \"getrandom\",\n]\n\n[[package]]\nname = \"rayon\"\nversion = \"1.10.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b418a60154510ca1a002a752ca9714984e21e4241e804d32555251faf8b78ffa\"\ndependencies = [\n \"either\",\n \"rayon-core\",\n]\n\n[[package]]\nname = \"rayon-core\"\nversion = \"1.12.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1465873a3dfdaa8ae7cb14b4383657caab0b3e8a0aa9ae8e04b044854c8dfce2\"\ndependencies = [\n \"crossbeam-deque\",\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"rcgen\"\nversion = \"0.13.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"75e669e5202259b5314d1ea5397316ad400819437857b90861765f24c4cf80a2\"\ndependencies = [\n \"aws-lc-rs\",\n \"pem\",\n \"rustls-pki-types\",\n \"time\",\n \"yasna\",\n]\n\n[[package]]\nname = \"redox_syscall\"\nversion = \"0.5.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"03a862b389f93e68874fbf580b9de08dd02facb9a788ebadaf4a3fd33cf58834\"\ndependencies = [\n \"bitflags\",\n]\n\n[[package]]\nname = \"regex\"\nversion = \"1.11.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b544ef1b4eac5dc2db33ea63606ae9ffcfac26c1416a2806ae0bf5f56b201191\"\ndependencies = [\n \"aho-corasick\",\n \"memchr\",\n \"regex-automata\",\n \"regex-syntax\",\n]\n\n[[package]]\nname = \"regex-automata\"\nversion = \"0.4.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"809e8dc61f6de73b46c85f4c96486310fe304c434cfa43669d7b40f711150908\"\ndependencies = [\n \"aho-corasick\",\n \"memchr\",\n \"regex-syntax\",\n]\n\n[[package]]\nname = \"regex-syntax\"\nversion = \"0.8.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2b15c43186be67a4fd63bee50d0303afffcef381492ebe2c5d87f324e1b8815c\"\n\n[[package]]\nname = \"resolv-conf\"\nversion = \"0.7.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"52e44394d2086d010551b14b53b1f24e31647570cd1deb0379e2c21b329aba00\"\ndependencies = [\n \"hostname\",\n \"quick-error\",\n]\n\n[[package]]\nname = \"rfc6979\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f8dd2a808d456c4a54e300a23e9f5a67e122c3024119acbfd73e3bf664491cb2\"\ndependencies = [\n \"hmac\",\n \"subtle\",\n]\n\n[[package]]\nname = \"ring\"\nversion = \"0.17.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c17fa4cb658e3583423e915b9f3acc01cceaee1860e33d59ebae66adc3a2dc0d\"\ndependencies = [\n \"cc\",\n \"cfg-if\",\n \"getrandom\",\n \"libc\",\n \"spin\",\n \"untrusted\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"rsa\"\nversion = \"0.9.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"47c75d7c5c6b673e58bf54d8544a9f432e3a925b0e80f7cd3602ab5c50c55519\"\ndependencies = [\n \"const-oid\",\n \"digest\",\n \"num-bigint-dig\",\n \"num-integer\",\n \"num-traits\",\n \"pkcs1\",\n \"pkcs8\",\n \"rand_core\",\n \"sha2\",\n \"signature\",\n \"spki\",\n \"subtle\",\n \"zeroize\",\n]\n\n[[package]]\nname = \"rustc-demangle\"\nversion = \"0.1.24\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"719b953e2095829ee67db738b3bfa9fa368c94900df327b3f07fe6e794d2fe1f\"\n\n[[package]]\nname = \"rustc-hash\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"08d43f7aa6b08d49f382cde6a7982047c3426db949b1424bc4b7ec9ae12c6ce2\"\n\n[[package]]\nname = \"rustc_version\"\nversion = \"0.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cfcb3a22ef46e85b45de6ee7e79d063319ebb6594faafcf1c225ea92ab6e9b92\"\ndependencies = [\n \"semver\",\n]\n\n[[package]]\nname = \"rusticata-macros\"\nversion = \"4.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"faf0c4a6ece9950b9abdb62b1cfcf2a68b3b67a10ba445b3bb85be2a293d0632\"\ndependencies = [\n \"nom\",\n]\n\n[[package]]\nname = \"rustix\"\nversion = \"0.38.43\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a78891ee6bf2340288408954ac787aa063d8e8817e9f53abb37c695c6d834ef6\"\ndependencies = [\n \"bitflags\",\n \"errno\",\n \"libc\",\n \"linux-raw-sys\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"rustls\"\nversion = \"0.23.20\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5065c3f250cbd332cd894be57c40fa52387247659b14a2d6041d121547903b1b\"\ndependencies = [\n \"log\",\n \"once_cell\",\n \"ring\",\n \"rustls-pki-types\",\n \"rustls-webpki\",\n \"subtle\",\n \"zeroize\",\n]\n\n[[package]]\nname = \"rustls\"\nversion = \"0.23.21\"\ndependencies = [\n \"aws-lc-rs\",\n \"base64\",\n \"bencher\",\n \"brotli\",\n \"brotli-decompressor\",\n \"env_logger\",\n \"hashbrown\",\n \"hex\",\n \"log\",\n \"macro_rules_attribute\",\n \"num-bigint\",\n \"once_cell\",\n \"rcgen\",\n \"ring\",\n \"rustls-pki-types\",\n \"rustls-webpki\",\n \"rustversion\",\n \"serde\",\n \"serde_json\",\n \"subtle\",\n \"time\",\n \"webpki-roots\",\n \"x509-parser\",\n \"zeroize\",\n \"zlib-rs\",\n]\n\n[[package]]\nname = \"rustls-bench\"\nversion = \"0.1.0\"\ndependencies = [\n \"clap\",\n \"rustls 0.23.21\",\n \"rustls-post-quantum\",\n \"tikv-jemallocator\",\n]\n\n[[package]]\nname = \"rustls-ci-bench\"\nversion = \"0.0.1\"\ndependencies = [\n \"anyhow\",\n \"async-trait\",\n \"byteorder\",\n \"clap\",\n \"crabgrind\",\n \"fxhash\",\n \"itertools 0.14.0\",\n \"rayon\",\n \"rustls 0.23.21\",\n \"tikv-jemallocator\",\n]\n\n[[package]]\nname = \"rustls-connect-tests\"\nversion = \"0.0.1\"\ndependencies = [\n \"hickory-resolver\",\n \"regex\",\n \"ring\",\n \"rustls 0.23.21\",\n \"tokio\",\n]\n\n[[package]]\nname = \"rustls-examples\"\nversion = \"0.0.1\"\ndependencies = [\n \"async-std\",\n \"clap\",\n \"env_logger\",\n \"hickory-resolver\",\n \"log\",\n \"mio\",\n \"rcgen\",\n \"rustls 0.23.21\",\n \"serde\",\n \"tokio\",\n \"webpki-roots\",\n]\n\n[[package]]\nname = \"rustls-fuzzing-provider\"\nversion = \"0.1.0\"\ndependencies = [\n \"env_logger\",\n \"rustls 0.23.21\",\n \"rustls-webpki\",\n]\n\n[[package]]\nname = \"rustls-openssl-tests\"\nversion = \"0.0.1\"\ndependencies = [\n \"asn1\",\n \"base64\",\n \"num-bigint\",\n \"once_cell\",\n \"openssl\",\n \"rustls 0.23.21\",\n]\n\n[[package]]\nname = \"rustls-pki-types\"\nversion = \"1.10.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d2bf47e6ff922db3825eb750c4e2ff784c6ff8fb9e13046ef6a1d1c5401b0b37\"\n\n[[package]]\nname = \"rustls-post-quantum\"\nversion = \"0.2.1\"\ndependencies = [\n \"aws-lc-rs\",\n \"criterion\",\n \"env_logger\",\n \"rustls 0.23.21\",\n \"webpki-roots\",\n]\n\n[[package]]\nname = \"rustls-provider-example\"\nversion = \"0.0.1\"\ndependencies = [\n \"chacha20poly1305\",\n \"der\",\n \"ecdsa\",\n \"env_logger\",\n \"hmac\",\n \"hpke-rs\",\n \"hpke-rs-crypto\",\n \"hpke-rs-rust-crypto\",\n \"p256\",\n \"pkcs8\",\n \"rand_core\",\n \"rcgen\",\n \"rsa\",\n \"rustls 0.23.21\",\n \"rustls-webpki\",\n \"sha2\",\n \"signature\",\n \"webpki-roots\",\n \"x25519-dalek\",\n]\n\n[[package]]\nname = \"rustls-provider-test\"\nversion = \"0.1.0\"\ndependencies = [\n \"hex\",\n \"rustls 0.23.21\",\n \"rustls-provider-example\",\n \"serde\",\n \"serde_json\",\n]\n\n[[package]]\nname = \"rustls-webpki\"\nversion = \"0.102.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"64ca1bc8749bd4cf37b5ce386cc146580777b4e8572c7b97baf22c83f444bee9\"\ndependencies = [\n \"aws-lc-rs\",\n \"ring\",\n \"rustls-pki-types\",\n \"untrusted\",\n]\n\n[[package]]\nname = \"rustversion\"\nversion = \"1.0.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f7c45b9784283f1b2e7fb61b42047c2fd678ef0960d4f6f1eba131594cc369d4\"\n\n[[package]]\nname = \"ryu\"\nversion = \"1.0.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f3cb5ba0dc43242ce17de99c180e96db90b235b8a9fdc9543c96d2209116bd9f\"\n\n[[package]]\nname = \"same-file\"\nversion = \"1.0.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"93fc1dc3aaa9bfed95e02e6eadabb4baf7e3078b0bd1b4d7b6b0b68378900502\"\ndependencies = [\n \"winapi-util\",\n]\n\n[[package]]\nname = \"scopeguard\"\nversion = \"1.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"94143f37725109f92c262ed2cf5e59bce7498c01bcc1502d7b9afe439a4e9f49\"\n\n[[package]]\nname = \"sec1\"\nversion = \"0.7.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d3e97a565f76233a6003f9f5c54be1d9c5bdfa3eccfb189469f11ec4901c47dc\"\ndependencies = [\n \"base16ct\",\n \"der\",\n \"generic-array\",\n \"pkcs8\",\n \"subtle\",\n \"zeroize\",\n]\n\n[[package]]\nname = \"semver\"\nversion = \"1.0.24\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3cb6eb87a131f756572d7fb904f6e7b68633f09cca868c5df1c4b8d1a694bbba\"\n\n[[package]]\nname = \"serde\"\nversion = \"1.0.217\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"02fc4265df13d6fa1d00ecff087228cc0a2b5f3c0e87e258d8b94a156e984c70\"\ndependencies = [\n \"serde_derive\",\n]\n\n[[package]]\nname = \"serde_derive\"\nversion = \"1.0.217\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5a9bf7cf98d04a2b28aead066b7496853d4779c9cc183c440dbac457641e19a0\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.95\",\n]\n\n[[package]]\nname = \"serde_json\"\nversion = \"1.0.135\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2b0d7ba2887406110130a978386c4e1befb98c674b4fba677954e4db976630d9\"\ndependencies = [\n \"itoa\",\n \"memchr\",\n \"ryu\",\n \"serde\",\n]\n\n[[package]]\nname = \"sha2\"\nversion = \"0.10.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"793db75ad2bcafc3ffa7c68b215fee268f537982cd901d132f89c6343f3a3dc8\"\ndependencies = [\n \"cfg-if\",\n \"cpufeatures\",\n \"digest\",\n]\n\n[[package]]\nname = \"shlex\"\nversion = \"1.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0fda2ff0d084019ba4d7c6f371c95d8fd75ce3524c3cb8fb653a3023f6323e64\"\n\n[[package]]\nname = \"signature\"\nversion = \"2.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"77549399552de45a898a580c1b41d445bf730df867cc44e6c0233bbc4b8329de\"\ndependencies = [\n \"digest\",\n \"rand_core\",\n]\n\n[[package]]\nname = \"slab\"\nversion = \"0.4.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8f92a496fb766b417c996b9c5e57daf2f7ad3b0bebe1ccfca4856390e3d3bb67\"\ndependencies = [\n \"autocfg\",\n]\n\n[[package]]\nname = \"smallvec\"\nversion = \"1.13.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3c5e1a9a646d36c3599cd173a41282daf47c44583ad367b8e6837255952e5c67\"\n\n[[package]]\nname = \"socket2\"\nversion = \"0.5.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c970269d99b64e60ec3bd6ad27270092a5394c4e309314b18ae3fe575695fbe8\"\ndependencies = [\n \"libc\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"spin\"\nversion = \"0.9.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6980e8d7511241f8acf4aebddbb1ff938df5eebe98691418c4468d0b72a96a67\"\n\n[[package]]\nname = \"spki\"\nversion = \"0.7.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d91ed6c858b01f942cd56b37a94b3e0a1798290327d1236e4d9cf4eaca44d29d\"\ndependencies = [\n \"base64ct\",\n \"der\",\n]\n\n[[package]]\nname = \"stable_deref_trait\"\nversion = \"1.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a8f112729512f8e442d81f95a8a7ddf2b7c6b8a1a6f509a95864142b30cab2d3\"\n\n[[package]]\nname = \"strsim\"\nversion = \"0.11.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7da8b5736845d9f2fcb837ea5d9e2628564b3b043a70948a3f0b778838c5fb4f\"\n\n[[package]]\nname = \"subtle\"\nversion = \"2.6.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"13c2bddecc57b384dee18652358fb23172facb8a2c51ccc10d74c157bdea3292\"\n\n[[package]]\nname = \"syn\"\nversion = \"1.0.109\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"72b64191b275b66ffe2469e8af2c1cfe3bafa67b529ead792a6d0160888b4237\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"syn\"\nversion = \"2.0.95\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"46f71c0377baf4ef1cc3e3402ded576dccc315800fbc62dfc7fe04b009773b4a\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"synstructure\"\nversion = \"0.13.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c8af7666ab7b6390ab78131fb5b0fce11d6b7a6951602017c35fa82800708971\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.95\",\n]\n\n[[package]]\nname = \"thiserror\"\nversion = \"1.0.69\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b6aaf5339b578ea85b50e080feb250a3e8ae8cfcdff9a461c9ec2904bc923f52\"\ndependencies = [\n \"thiserror-impl 1.0.69\",\n]\n\n[[package]]\nname = \"thiserror\"\nversion = \"2.0.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a3ac7f54ca534db81081ef1c1e7f6ea8a3ef428d2fc069097c079443d24124d3\"\ndependencies = [\n \"thiserror-impl 2.0.10\",\n]\n\n[[package]]\nname = \"thiserror-impl\"\nversion = \"1.0.69\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4fee6c4efc90059e10f81e6d42c60a18f76588c3d74cb83a0b242a2b6c7504c1\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.95\",\n]\n\n[[package]]\nname = \"thiserror-impl\"\nversion = \"2.0.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9e9465d30713b56a37ede7185763c3492a91be2f5fa68d958c44e41ab9248beb\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.95\",\n]\n\n[[package]]\nname = \"tikv-jemalloc-sys\"\nversion = \"0.6.0+5.3.0-1-ge13ca993e8ccb9ba9847cc330696e02839f328f7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cd3c60906412afa9c2b5b5a48ca6a5abe5736aec9eb48ad05037a677e52e4e2d\"\ndependencies = [\n \"cc\",\n \"libc\",\n]\n\n[[package]]\nname = \"tikv-jemallocator\"\nversion = \"0.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4cec5ff18518d81584f477e9bfdf957f5bb0979b0bac3af4ca30b5b3ae2d2865\"\ndependencies = [\n \"libc\",\n \"tikv-jemalloc-sys\",\n]\n\n[[package]]\nname = \"time\"\nversion = \"0.3.37\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"35e7868883861bd0e56d9ac6efcaaca0d6d5d82a2a7ec8209ff492c07cf37b21\"\ndependencies = [\n \"deranged\",\n \"itoa\",\n \"num-conv\",\n \"powerfmt\",\n \"serde\",\n \"time-core\",\n \"time-macros\",\n]\n\n[[package]]\nname = \"time-core\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ef927ca75afb808a4d64dd374f00a2adf8d0fcff8e7b184af886c3c87ec4a3f3\"\n\n[[package]]\nname = \"time-macros\"\nversion = \"0.2.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2834e6017e3e5e4b9834939793b282bc03b37a3336245fa820e35e233e2a85de\"\ndependencies = [\n \"num-conv\",\n \"time-core\",\n]\n\n[[package]]\nname = \"tinystr\"\nversion = \"0.7.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9117f5d4db391c1cf6927e7bea3db74b9a1c1add8f7eda9ffd5364f40f57b82f\"\ndependencies = [\n \"displaydoc\",\n \"zerovec\",\n]\n\n[[package]]\nname = \"tinytemplate\"\nversion = \"1.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"be4d6b5f19ff7664e8c98d03e2139cb510db9b0a60b55f8e8709b689d939b6bc\"\ndependencies = [\n \"serde\",\n \"serde_json\",\n]\n\n[[package]]\nname = \"tinyvec\"\nversion = \"1.8.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"022db8904dfa342efe721985167e9fcd16c29b226db4397ed752a761cfce81e8\"\ndependencies = [\n \"tinyvec_macros\",\n]\n\n[[package]]\nname = \"tinyvec_macros\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1f3ccbac311fea05f86f61904b462b55fb3df8837a366dfc601a0161d0532f20\"\n\n[[package]]\nname = \"tokio\"\nversion = \"1.43.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3d61fa4ffa3de412bfea335c6ecff681de2b609ba3c77ef3e00e521813a9ed9e\"\ndependencies = [\n \"backtrace\",\n \"bytes\",\n \"libc\",\n \"mio\",\n \"pin-project-lite\",\n \"socket2\",\n \"tokio-macros\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"tokio-macros\"\nversion = \"2.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6e06d43f1345a3bcd39f6a56dbb7dcab2ba47e68e8ac134855e7e2bdbaf8cab8\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.95\",\n]\n\n[[package]]\nname = \"tokio-rustls\"\nversion = \"0.26.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5f6d0975eaace0cf0fcadee4e4aaa5da15b5c079146f2cffb67c113be122bf37\"\ndependencies = [\n \"rustls 0.23.20\",\n \"tokio\",\n]\n\n[[package]]\nname = \"tokio-util\"\nversion = \"0.7.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d7fcaa8d55a2bdd6b83ace262b016eca0d79ee02818c5c1bcdf0305114081078\"\ndependencies = [\n \"bytes\",\n \"futures-core\",\n \"futures-sink\",\n \"pin-project-lite\",\n \"tokio\",\n]\n\n[[package]]\nname = \"tracing\"\nversion = \"0.1.41\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"784e0ac535deb450455cbfa28a6f0df145ea1bb7ae51b821cf5e7927fdcfbdd0\"\ndependencies = [\n \"pin-project-lite\",\n \"tracing-attributes\",\n \"tracing-core\",\n]\n\n[[package]]\nname = \"tracing-attributes\"\nversion = \"0.1.28\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"395ae124c09f9e6918a2310af6038fba074bcf474ac352496d5910dd59a2226d\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.95\",\n]\n\n[[package]]\nname = \"tracing-core\"\nversion = \"0.1.33\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e672c95779cf947c5311f83787af4fa8fffd12fb27e4993211a84bdfd9610f9c\"\ndependencies = [\n \"once_cell\",\n]\n\n[[package]]\nname = \"typenum\"\nversion = \"1.17.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"42ff0bf0c66b8238c6f3b578df37d0b7848e55df8577b3f74f92a69acceeb825\"\n\n[[package]]\nname = \"unicode-ident\"\nversion = \"1.0.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"adb9e6ca4f869e1180728b7950e35922a7fc6397f7b641499e8f3ef06e50dc83\"\n\n[[package]]\nname = \"universal-hash\"\nversion = \"0.5.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fc1de2c688dc15305988b563c3854064043356019f97a4b46276fe734c4f07ea\"\ndependencies = [\n \"crypto-common\",\n \"subtle\",\n]\n\n[[package]]\nname = \"untrusted\"\nversion = \"0.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8ecb6da28b8a351d773b68d5825ac39017e680750f980f3a1a85cd8dd28a47c1\"\n\n[[package]]\nname = \"url\"\nversion = \"2.5.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"32f8b686cadd1473f4bd0117a5d28d36b1ade384ea9b5069a1c40aefed7fda60\"\ndependencies = [\n \"form_urlencoded\",\n \"idna\",\n \"percent-encoding\",\n]\n\n[[package]]\nname = \"utf16_iter\"\nversion = \"1.0.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c8232dd3cdaed5356e0f716d285e4b40b932ac434100fe9b7e0e8e935b9e6246\"\n\n[[package]]\nname = \"utf8_iter\"\nversion = \"1.0.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b6c140620e7ffbb22c2dee59cafe6084a59b5ffc27a8859a5f0d494b5d52b6be\"\n\n[[package]]\nname = \"utf8parse\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"06abde3611657adf66d383f00b093d7faecc7fa57071cce2578660c9f1010821\"\n\n[[package]]\nname = \"value-bag\"\nversion = \"1.10.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3ef4c4aa54d5d05a279399bfa921ec387b7aba77caf7a682ae8d86785b8fdad2\"\n\n[[package]]\nname = \"vcpkg\"\nversion = \"0.2.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"accd4ea62f7bb7a82fe23066fb0957d48ef677f6eeb8215f372f52e48bb32426\"\n\n[[package]]\nname = \"version_check\"\nversion = \"0.9.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0b928f33d975fc6ad9f86c8f283853ad26bdd5b10b7f1542aa2fa15e2289105a\"\n\n[[package]]\nname = \"walkdir\"\nversion = \"2.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"29790946404f91d9c5d06f9874efddea1dc06c5efe94541a7d6863108e3a5e4b\"\ndependencies = [\n \"same-file\",\n \"winapi-util\",\n]\n\n[[package]]\nname = \"wasi\"\nversion = \"0.11.0+wasi-snapshot-preview1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9c8d87e72b64a3b4db28d11ce29237c246188f4f51057d65a7eab63b7987e423\"\n\n[[package]]\nname = \"wasm-bindgen\"\nversion = \"0.2.99\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a474f6281d1d70c17ae7aa6a613c87fce69a127e2624002df63dcb39d6cf6396\"\ndependencies = [\n \"cfg-if\",\n \"once_cell\",\n \"wasm-bindgen-macro\",\n]\n\n[[package]]\nname = \"wasm-bindgen-backend\"\nversion = \"0.2.99\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5f89bb38646b4f81674e8f5c3fb81b562be1fd936d84320f3264486418519c79\"\ndependencies = [\n \"bumpalo\",\n \"log\",\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.95\",\n \"wasm-bindgen-shared\",\n]\n\n[[package]]\nname = \"wasm-bindgen-futures\"\nversion = \"0.4.49\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"38176d9b44ea84e9184eff0bc34cc167ed044f816accfe5922e54d84cf48eca2\"\ndependencies = [\n \"cfg-if\",\n \"js-sys\",\n \"once_cell\",\n \"wasm-bindgen\",\n \"web-sys\",\n]\n\n[[package]]\nname = \"wasm-bindgen-macro\"\nversion = \"0.2.99\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2cc6181fd9a7492eef6fef1f33961e3695e4579b9872a6f7c83aee556666d4fe\"\ndependencies = [\n \"quote\",\n \"wasm-bindgen-macro-support\",\n]\n\n[[package]]\nname = \"wasm-bindgen-macro-support\"\nversion = \"0.2.99\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"30d7a95b763d3c45903ed6c81f156801839e5ee968bb07e534c44df0fcd330c2\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.95\",\n \"wasm-bindgen-backend\",\n \"wasm-bindgen-shared\",\n]\n\n[[package]]\nname = \"wasm-bindgen-shared\"\nversion = \"0.2.99\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"943aab3fdaaa029a6e0271b35ea10b72b943135afe9bffca82384098ad0e06a6\"\n\n[[package]]\nname = \"web-sys\"\nversion = \"0.3.76\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"04dd7223427d52553d3702c004d3b2fe07c148165faa56313cb00211e31c12bc\"\ndependencies = [\n \"js-sys\",\n \"wasm-bindgen\",\n]\n\n[[package]]\nname = \"webpki-roots\"\nversion = \"0.26.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5d642ff16b7e79272ae451b7322067cdc17cadf68c23264be9d94a32319efe7e\"\ndependencies = [\n \"rustls-pki-types\",\n]\n\n[[package]]\nname = \"which\"\nversion = \"4.4.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"87ba24419a2078cd2b0f2ede2691b6c66d8e47836da3b6db8265ebad47afbfc7\"\ndependencies = [\n \"either\",\n \"home\",\n \"once_cell\",\n \"rustix\",\n]\n\n[[package]]\nname = \"widestring\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7219d36b6eac893fa81e84ebe06485e7dcbb616177469b142df14f1f4deb1311\"\n\n[[package]]\nname = \"winapi\"\nversion = \"0.3.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5c839a674fcd7a98952e593242ea400abe93992746761e38641405d28b00f419\"\ndependencies = [\n \"winapi-i686-pc-windows-gnu\",\n \"winapi-x86_64-pc-windows-gnu\",\n]\n\n[[package]]\nname = \"winapi-i686-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ac3b87c63620426dd9b991e5ce0329eff545bccbbb34f3be09ff6fb6ab51b7b6\"\n\n[[package]]\nname = \"winapi-util\"\nversion = \"0.1.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cf221c93e13a30d793f7645a0e7762c55d169dbb0a49671918a2319d289b10bb\"\ndependencies = [\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"winapi-x86_64-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"712e227841d057c1ee1cd2fb22fa7e5a5461ae8e48fa2ca79ec42cfc1931183f\"\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.48.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"677d2418bec65e3338edb076e806bc1ec15693c5d0104683f2efe857f61056a9\"\ndependencies = [\n \"windows-targets 0.48.5\",\n]\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.52.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"282be5f36a8ce781fad8c8ae18fa3f9beff57ec1b52cb3de0789201425d9a33d\"\ndependencies = [\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.59.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1e38bc4d79ed67fd075bcc251a1c39b32a1776bbe92e5bef1f0bf1f8c531853b\"\ndependencies = [\n \"windows-targets 0.52.6\",\n]\n\n[[package]]\nname = \"windows-targets\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9a2fa6e2155d7247be68c096456083145c183cbbbc2764150dda45a87197940c\"\ndependencies = [\n \"windows_aarch64_gnullvm 0.48.5\",\n \"windows_aarch64_msvc 0.48.5\",\n \"windows_i686_gnu 0.48.5\",\n \"windows_i686_msvc 0.48.5\",\n \"windows_x86_64_gnu 0.48.5\",\n \"windows_x86_64_gnullvm 0.48.5\",\n \"windows_x86_64_msvc 0.48.5\",\n]\n\n[[package]]\nname = \"windows-targets\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9b724f72796e036ab90c1021d4780d4d3d648aca59e491e6b98e725b84e99973\"\ndependencies = [\n \"windows_aarch64_gnullvm 0.52.6\",\n \"windows_aarch64_msvc 0.52.6\",\n \"windows_i686_gnu 0.52.6\",\n \"windows_i686_gnullvm\",\n \"windows_i686_msvc 0.52.6\",\n \"windows_x86_64_gnu 0.52.6\",\n \"windows_x86_64_gnullvm 0.52.6\",\n \"windows_x86_64_msvc 0.52.6\",\n]\n\n[[package]]\nname = \"windows_aarch64_gnullvm\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2b38e32f0abccf9987a4e3079dfb67dcd799fb61361e53e2882c3cbaf0d905d8\"\n\n[[package]]\nname = \"windows_aarch64_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"32a4622180e7a0ec044bb555404c800bc9fd9ec262ec147edd5989ccd0c02cd3\"\n\n[[package]]\nname = \"windows_aarch64_msvc\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dc35310971f3b2dbbf3f0690a219f40e2d9afcf64f9ab7cc1be722937c26b4bc\"\n\n[[package]]\nname = \"windows_aarch64_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"09ec2a7bb152e2252b53fa7803150007879548bc709c039df7627cabbd05d469\"\n\n[[package]]\nname = \"windows_i686_gnu\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a75915e7def60c94dcef72200b9a8e58e5091744960da64ec734a6c6e9b3743e\"\n\n[[package]]\nname = \"windows_i686_gnu\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8e9b5ad5ab802e97eb8e295ac6720e509ee4c243f69d781394014ebfe8bbfa0b\"\n\n[[package]]\nname = \"windows_i686_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0eee52d38c090b3caa76c563b86c3a4bd71ef1a819287c19d586d7334ae8ed66\"\n\n[[package]]\nname = \"windows_i686_msvc\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8f55c233f70c4b27f66c523580f78f1004e8b5a8b659e05a4eb49d4166cca406\"\n\n[[package]]\nname = \"windows_i686_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"240948bc05c5e7c6dabba28bf89d89ffce3e303022809e73deaefe4f6ec56c66\"\n\n[[package]]\nname = \"windows_x86_64_gnu\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"53d40abd2583d23e4718fddf1ebec84dbff8381c07cae67ff7768bbf19c6718e\"\n\n[[package]]\nname = \"windows_x86_64_gnu\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"147a5c80aabfbf0c7d901cb5895d1de30ef2907eb21fbbab29ca94c5b08b1a78\"\n\n[[package]]\nname = \"windows_x86_64_gnullvm\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0b7b52767868a23d5bab768e390dc5f5c55825b6d30b86c844ff2dc7414044cc\"\n\n[[package]]\nname = \"windows_x86_64_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"24d5b23dc417412679681396f2b49f3de8c1473deb516bd34410872eff51ed0d\"\n\n[[package]]\nname = \"windows_x86_64_msvc\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ed94fce61571a4006852b7389a063ab983c02eb1bb37b47f8272ce92d06d9538\"\n\n[[package]]\nname = \"windows_x86_64_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"589f6da84c646204747d1270a2a5661ea66ed1cced2631d546fdfb155959f9ec\"\n\n[[package]]\nname = \"winreg\"\nversion = \"0.50.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"524e57b2c537c0f9b1e69f1965311ec12182b4122e45035b1508cd24d2adadb1\"\ndependencies = [\n \"cfg-if\",\n \"windows-sys 0.48.0\",\n]\n\n[[package]]\nname = \"write16\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d1890f4022759daae28ed4fe62859b1236caebfc61ede2f63ed4e695f3f6d936\"\n\n[[package]]\nname = \"writeable\"\nversion = \"0.5.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1e9df38ee2d2c3c5948ea468a8406ff0db0b29ae1ffde1bcf20ef305bcc95c51\"\n\n[[package]]\nname = \"x25519-dalek\"\nversion = \"2.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c7e468321c81fb07fa7f4c636c3972b9100f0346e5b6a9f2bd0603a52f7ed277\"\ndependencies = [\n \"curve25519-dalek\",\n \"rand_core\",\n \"serde\",\n \"zeroize\",\n]\n\n[[package]]\nname = \"x509-parser\"\nversion = \"0.16.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fcbc162f30700d6f3f82a24bf7cc62ffe7caea42c0b2cba8bf7f3ae50cf51f69\"\ndependencies = [\n \"asn1-rs\",\n \"data-encoding\",\n \"der-parser\",\n \"lazy_static\",\n \"nom\",\n \"oid-registry\",\n \"rusticata-macros\",\n \"thiserror 1.0.69\",\n \"time\",\n]\n\n[[package]]\nname = \"yasna\"\nversion = \"0.5.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e17bb3549cc1321ae1296b9cdc2698e2b6cb1992adfa19a8c72e5b7a738f44cd\"\ndependencies = [\n \"time\",\n]\n\n[[package]]\nname = \"yoke\"\nversion = \"0.7.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"120e6aef9aa629e3d4f52dc8cc43a015c7724194c97dfaf45180d2daf2b77f40\"\ndependencies = [\n \"serde\",\n \"stable_deref_trait\",\n \"yoke-derive\",\n \"zerofrom\",\n]\n\n[[package]]\nname = \"yoke-derive\"\nversion = \"0.7.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2380878cad4ac9aac1e2435f3eb4020e8374b5f13c296cb75b4620ff8e229154\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.95\",\n \"synstructure\",\n]\n\n[[package]]\nname = \"zerocopy\"\nversion = \"0.7.35\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1b9b4fd18abc82b8136838da5d50bae7bdea537c574d8dc1a34ed098d6c166f0\"\ndependencies = [\n \"byteorder\",\n \"zerocopy-derive\",\n]\n\n[[package]]\nname = \"zerocopy-derive\"\nversion = \"0.7.35\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fa4f8080344d4671fb4e831a13ad1e68092748387dfc4f55e356242fae12ce3e\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.95\",\n]\n\n[[package]]\nname = \"zerofrom\"\nversion = \"0.1.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cff3ee08c995dee1859d998dea82f7374f2826091dd9cd47def953cae446cd2e\"\ndependencies = [\n \"zerofrom-derive\",\n]\n\n[[package]]\nname = \"zerofrom-derive\"\nversion = \"0.1.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"595eed982f7d355beb85837f651fa22e90b3c044842dc7f2c2842c086f295808\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.95\",\n \"synstructure\",\n]\n\n[[package]]\nname = \"zeroize\"\nversion = \"1.8.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ced3678a2879b30306d323f4542626697a464a97c0a07c9aebf7ebca65cd4dde\"\ndependencies = [\n \"zeroize_derive\",\n]\n\n[[package]]\nname = \"zeroize_derive\"\nversion = \"1.4.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ce36e65b0d2999d2aafac989fb249189a141aee1f53c612c1f37d72631959f69\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.95\",\n]\n\n[[package]]\nname = \"zerovec\"\nversion = \"0.10.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"aa2b893d79df23bfb12d5461018d408ea19dfafe76c2c7ef6d4eba614f8ff079\"\ndependencies = [\n \"yoke\",\n \"zerofrom\",\n \"zerovec-derive\",\n]\n\n[[package]]\nname = \"zerovec-derive\"\nversion = \"0.10.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6eafa6dfb17584ea3e2bd6e76e0cc15ad7af12b09abdd1ca55961bed9b1063c6\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.95\",\n]\n\n[[package]]\nname = \"zlib-rs\"\nversion = \"0.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"aada01553a9312bad4b9569035a1f12b05e5ec9770a1a4b323757356928944f8\"\n"
        },
        {
          "name": "Cargo.toml",
          "type": "blob",
          "size": 3.029296875,
          "content": "[workspace]\nmembers = [\n  # Bogo test shim\n  \"bogo\",\n  # CI benchmarks\n  \"ci-bench\",\n  # Network-based tests\n  \"connect-tests\",\n  # tests and example code\n  \"examples\",\n  # Tests that require OpenSSL\n  \"openssl-tests\",\n  # example of custom provider\n  \"provider-example\",\n  # the main library and tests\n  \"rustls\",\n  # benchmarking tool\n  \"rustls-bench\",\n  # experimental post-quantum algorithm support\n  \"rustls-post-quantum\",\n  # rustls cryptography provider integration tests\n  \"rustls-provider-test\",\n  # rustls cryptography provider for fuzzing\n  \"rustls-fuzzing-provider\",\n]\n\n## Deliberately not included in `members`:\nexclude = [\n  # `cargo fuzz` integration (requires nightly)\n  \"fuzz\",\n]\n\ndefault-members = [\n  \"examples\",\n  \"rustls\",\n]\nresolver = \"2\"\n\n[workspace.dependencies]\nanyhow = \"1.0.73\"\nasn1 = \"0.20\"\nasync-std = { version = \"1.12.0\", features = [\"attributes\"] }\nasync-trait = \"0.1.74\"\naws-lc-rs = { version = \"1.12\", default-features = false, features = [\"aws-lc-sys\", \"prebuilt-nasm\"] }\nbase64 = \"0.22\"\nbencher = \"0.1.5\"\nbrotli = { version = \"7\", default-features = false, features = [\"std\"] }\nbrotli-decompressor = \"4.0.1\" # 4.0.1 required for panic fix\nbyteorder = \"1.4.3\"\nchacha20poly1305 = { version = \"0.10\", default-features = false, features = [\"alloc\"] }\nclap = { version = \"4.3.21\", features = [\"derive\", \"env\"] }\ncrabgrind = \"=0.1.9\" # compatible with valgrind package on GHA ubuntu-latest\nder = \"0.7\"\necdsa = \"0.16.8\"\nenv_logger = \"0.11\"\nfxhash = \"0.2.1\"\nhashbrown = { version = \"0.15\", default-features = false, features = [\"default-hasher\", \"inline-more\"] }\nhex = \"0.4\"\nhickory-resolver = { version = \"=0.25.0-alpha.3\", features = [\"dns-over-https-rustls\", \"webpki-roots\"] }\nhmac = \"0.12\"\nhpke-rs = \"0.2\"\nhpke-rs-crypto = \"0.2\"\nhpke-rs-rust-crypto = \"0.2\"\nitertools = \"0.14\"\nlog = { version = \"0.4.8\" }\nmacro_rules_attribute = \"0.2\"\nmio = { version = \"1\", features = [\"net\", \"os-poll\"] }\nnum-bigint = \"0.4.4\"\nonce_cell = { version = \"1.16\", default-features = false, features = [\"alloc\", \"race\"] }\nopenssl = \"0.10\"\np256 = { version = \"0.13.2\", default-features = false, features = [\"alloc\", \"ecdsa\", \"pkcs8\"] }\npkcs8 = \"0.10.2\"\npki-types = { package = \"rustls-pki-types\", version = \"1.10\", features = [\"alloc\"] }\nrand_core = { version = \"0.6\", features = [\"getrandom\"] }\nrayon = \"1.7\"\nrcgen = { version = \"0.13\", features = [\"pem\", \"aws_lc_rs\"], default-features = false }\nregex = \"1\"\nring = \"0.17\"\nrsa = { version = \"0.9\", features = [\"sha2\"], default-features = false }\nserde = { version = \"1\", features = [\"derive\"] }\nserde_json = \"1\"\nsha2 = { version = \"0.10\", default-features = false }\nsignature = \"2\"\nsubtle = { version = \"2.5.0\", default-features = false }\ntime = { version = \"0.3.6\", default-features = false }\ntikv-jemallocator = \"0.6\"\ntokio = { version = \"1.34\", features = [\"io-util\", \"macros\", \"net\", \"rt\"]}\nwebpki = { package = \"rustls-webpki\", version = \"0.102.8\", features = [\"alloc\"], default-features = false }\nwebpki-roots = \"0.26\"\nx25519-dalek = \"2\"\nx509-parser = \"0.16\"\nzeroize = \"1.7\"\nzlib-rs = \"0.4\"\n\n[profile.bench]\ncodegen-units = 1\nlto = true\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 0.279296875,
          "content": "Rustls is distributed under the following three licenses:\n\n- Apache License version 2.0.\n- MIT license.\n- ISC license.\n\nThese are included as LICENSE-APACHE, LICENSE-MIT and LICENSE-ISC\nrespectively.  You may use this software under the terms of any\nof these licenses, at your option.\n\n"
        },
        {
          "name": "LICENSE-APACHE",
          "type": "blob",
          "size": 10.5927734375,
          "content": "                              Apache License\n                        Version 2.0, January 2004\n                     http://www.apache.org/licenses/\n\nTERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n1. Definitions.\n\n   \"License\" shall mean the terms and conditions for use, reproduction,\n   and distribution as defined by Sections 1 through 9 of this document.\n\n   \"Licensor\" shall mean the copyright owner or entity authorized by\n   the copyright owner that is granting the License.\n\n   \"Legal Entity\" shall mean the union of the acting entity and all\n   other entities that control, are controlled by, or are under common\n   control with that entity. For the purposes of this definition,\n   \"control\" means (i) the power, direct or indirect, to cause the\n   direction or management of such entity, whether by contract or\n   otherwise, or (ii) ownership of fifty percent (50%) or more of the\n   outstanding shares, or (iii) beneficial ownership of such entity.\n\n   \"You\" (or \"Your\") shall mean an individual or Legal Entity\n   exercising permissions granted by this License.\n\n   \"Source\" form shall mean the preferred form for making modifications,\n   including but not limited to software source code, documentation\n   source, and configuration files.\n\n   \"Object\" form shall mean any form resulting from mechanical\n   transformation or translation of a Source form, including but\n   not limited to compiled object code, generated documentation,\n   and conversions to other media types.\n\n   \"Work\" shall mean the work of authorship, whether in Source or\n   Object form, made available under the License, as indicated by a\n   copyright notice that is included in or attached to the work\n   (an example is provided in the Appendix below).\n\n   \"Derivative Works\" shall mean any work, whether in Source or Object\n   form, that is based on (or derived from) the Work and for which the\n   editorial revisions, annotations, elaborations, or other modifications\n   represent, as a whole, an original work of authorship. For the purposes\n   of this License, Derivative Works shall not include works that remain\n   separable from, or merely link (or bind by name) to the interfaces of,\n   the Work and Derivative Works thereof.\n\n   \"Contribution\" shall mean any work of authorship, including\n   the original version of the Work and any modifications or additions\n   to that Work or Derivative Works thereof, that is intentionally\n   submitted to Licensor for inclusion in the Work by the copyright owner\n   or by an individual or Legal Entity authorized to submit on behalf of\n   the copyright owner. For the purposes of this definition, \"submitted\"\n   means any form of electronic, verbal, or written communication sent\n   to the Licensor or its representatives, including but not limited to\n   communication on electronic mailing lists, source code control systems,\n   and issue tracking systems that are managed by, or on behalf of, the\n   Licensor for the purpose of discussing and improving the Work, but\n   excluding communication that is conspicuously marked or otherwise\n   designated in writing by the copyright owner as \"Not a Contribution.\"\n\n   \"Contributor\" shall mean Licensor and any individual or Legal Entity\n   on behalf of whom a Contribution has been received by Licensor and\n   subsequently incorporated within the Work.\n\n2. Grant of Copyright License. Subject to the terms and conditions of\n   this License, each Contributor hereby grants to You a perpetual,\n   worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n   copyright license to reproduce, prepare Derivative Works of,\n   publicly display, publicly perform, sublicense, and distribute the\n   Work and such Derivative Works in Source or Object form.\n\n3. Grant of Patent License. Subject to the terms and conditions of\n   this License, each Contributor hereby grants to You a perpetual,\n   worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n   (except as stated in this section) patent license to make, have made,\n   use, offer to sell, sell, import, and otherwise transfer the Work,\n   where such license applies only to those patent claims licensable\n   by such Contributor that are necessarily infringed by their\n   Contribution(s) alone or by combination of their Contribution(s)\n   with the Work to which such Contribution(s) was submitted. If You\n   institute patent litigation against any entity (including a\n   cross-claim or counterclaim in a lawsuit) alleging that the Work\n   or a Contribution incorporated within the Work constitutes direct\n   or contributory patent infringement, then any patent licenses\n   granted to You under this License for that Work shall terminate\n   as of the date such litigation is filed.\n\n4. Redistribution. You may reproduce and distribute copies of the\n   Work or Derivative Works thereof in any medium, with or without\n   modifications, and in Source or Object form, provided that You\n   meet the following conditions:\n\n   (a) You must give any other recipients of the Work or\n       Derivative Works a copy of this License; and\n\n   (b) You must cause any modified files to carry prominent notices\n       stating that You changed the files; and\n\n   (c) You must retain, in the Source form of any Derivative Works\n       that You distribute, all copyright, patent, trademark, and\n       attribution notices from the Source form of the Work,\n       excluding those notices that do not pertain to any part of\n       the Derivative Works; and\n\n   (d) If the Work includes a \"NOTICE\" text file as part of its\n       distribution, then any Derivative Works that You distribute must\n       include a readable copy of the attribution notices contained\n       within such NOTICE file, excluding those notices that do not\n       pertain to any part of the Derivative Works, in at least one\n       of the following places: within a NOTICE text file distributed\n       as part of the Derivative Works; within the Source form or\n       documentation, if provided along with the Derivative Works; or,\n       within a display generated by the Derivative Works, if and\n       wherever such third-party notices normally appear. The contents\n       of the NOTICE file are for informational purposes only and\n       do not modify the License. You may add Your own attribution\n       notices within Derivative Works that You distribute, alongside\n       or as an addendum to the NOTICE text from the Work, provided\n       that such additional attribution notices cannot be construed\n       as modifying the License.\n\n   You may add Your own copyright statement to Your modifications and\n   may provide additional or different license terms and conditions\n   for use, reproduction, or distribution of Your modifications, or\n   for any such Derivative Works as a whole, provided Your use,\n   reproduction, and distribution of the Work otherwise complies with\n   the conditions stated in this License.\n\n5. Submission of Contributions. Unless You explicitly state otherwise,\n   any Contribution intentionally submitted for inclusion in the Work\n   by You to the Licensor shall be under the terms and conditions of\n   this License, without any additional terms or conditions.\n   Notwithstanding the above, nothing herein shall supersede or modify\n   the terms of any separate license agreement you may have executed\n   with Licensor regarding such Contributions.\n\n6. Trademarks. This License does not grant permission to use the trade\n   names, trademarks, service marks, or product names of the Licensor,\n   except as required for reasonable and customary use in describing the\n   origin of the Work and reproducing the content of the NOTICE file.\n\n7. Disclaimer of Warranty. Unless required by applicable law or\n   agreed to in writing, Licensor provides the Work (and each\n   Contributor provides its Contributions) on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n   implied, including, without limitation, any warranties or conditions\n   of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n   PARTICULAR PURPOSE. You are solely responsible for determining the\n   appropriateness of using or redistributing the Work and assume any\n   risks associated with Your exercise of permissions under this License.\n\n8. Limitation of Liability. In no event and under no legal theory,\n   whether in tort (including negligence), contract, or otherwise,\n   unless required by applicable law (such as deliberate and grossly\n   negligent acts) or agreed to in writing, shall any Contributor be\n   liable to You for damages, including any direct, indirect, special,\n   incidental, or consequential damages of any character arising as a\n   result of this License or out of the use or inability to use the\n   Work (including but not limited to damages for loss of goodwill,\n   work stoppage, computer failure or malfunction, or any and all\n   other commercial damages or losses), even if such Contributor\n   has been advised of the possibility of such damages.\n\n9. Accepting Warranty or Additional Liability. While redistributing\n   the Work or Derivative Works thereof, You may choose to offer,\n   and charge a fee for, acceptance of support, warranty, indemnity,\n   or other liability obligations and/or rights consistent with this\n   License. However, in accepting such obligations, You may act only\n   on Your own behalf and on Your sole responsibility, not on behalf\n   of any other Contributor, and only if You agree to indemnify,\n   defend, and hold each Contributor harmless for any liability\n   incurred by, or claims asserted against, such Contributor by reason\n   of your accepting any such warranty or additional liability.\n\nEND OF TERMS AND CONDITIONS\n\nAPPENDIX: How to apply the Apache License to your work.\n\n   To apply the Apache License to your work, attach the following\n   boilerplate notice, with the fields enclosed by brackets \"[]\"\n   replaced with your own identifying information. (Don't include\n   the brackets!)  The text should be enclosed in the appropriate\n   comment syntax for the file format. We also recommend that a\n   file or class name and description of purpose be included on the\n   same \"printed page\" as the copyright notice for easier\n   identification within third-party archives.\n\nCopyright [yyyy] [name of copyright owner]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n\thttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n"
        },
        {
          "name": "LICENSE-ISC",
          "type": "blob",
          "size": 0.7568359375,
          "content": "ISC License (ISC)\nCopyright (c) 2016, Joseph Birr-Pixton <jpixton@gmail.com>\n\nPermission to use, copy, modify, and/or distribute this software for\nany purpose with or without fee is hereby granted, provided that the\nabove copyright notice and this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL\nWARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE\nAUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL\nDAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR\nPROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS\nACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF\nTHIS SOFTWARE.\n"
        },
        {
          "name": "LICENSE-MIT",
          "type": "blob",
          "size": 1.056640625,
          "content": "Copyright (c) 2016 Joseph Birr-Pixton <jpixton@gmail.com>\n\nPermission is hereby granted, free of charge, to any\nperson obtaining a copy of this software and associated\ndocumentation files (the \"Software\"), to deal in the\nSoftware without restriction, including without\nlimitation the rights to use, copy, modify, merge,\npublish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software\nis furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice\nshall be included in all copies or substantial portions\nof the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF\nANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED\nTO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\nPARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT\nSHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR\nIN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\nDEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 9.052734375,
          "content": "<p align=\"center\">\n  <img width=\"460\" height=\"300\" src=\"https://raw.githubusercontent.com/rustls/rustls/main/admin/rustls-logo-web.png\">\n</p>\n\n<p align=\"center\">\nRustls is a modern TLS library written in Rust.\n</p>\n\n# Status\n\nRustls is used in production at many organizations and projects. We aim to maintain\nreasonable API surface stability but the API may evolve as we make changes to accommodate\nnew features or performance improvements.\n\nWe have a [roadmap](ROADMAP.md) for our future plans. We also have [benchmarks](BENCHMARKING.md) to\nprevent performance regressions and to let you evaluate rustls on your target hardware.\n\nIf you'd like to help out, please see [CONTRIBUTING.md](CONTRIBUTING.md).\n\n[![Build Status](https://github.com/rustls/rustls/actions/workflows/build.yml/badge.svg?branch=main)](https://github.com/rustls/rustls/actions/workflows/build.yml?query=branch%3Amain)\n[![Coverage Status (codecov.io)](https://codecov.io/gh/rustls/rustls/branch/main/graph/badge.svg)](https://codecov.io/gh/rustls/rustls/)\n[![Documentation](https://docs.rs/rustls/badge.svg)](https://docs.rs/rustls/)\n[![Chat](https://img.shields.io/discord/976380008299917365?logo=discord)](https://discord.gg/MCSB76RU96)\n[![OpenSSF Best Practices](https://www.bestpractices.dev/projects/9034/badge)](https://www.bestpractices.dev/projects/9034)\n\n## Changelog\n\nThe detailed list of changes in each release can be found at\nhttps://github.com/rustls/rustls/releases.\n\n# Documentation\n\nhttps://docs.rs/rustls/\n\n# Approach\n\nRustls is a TLS library that aims to provide a good level of cryptographic security,\nrequires no configuration to achieve that security, and provides no unsafe features or\nobsolete cryptography by default.\n\nRustls implements TLS1.2 and TLS1.3 for both clients and servers. See [the full\nlist of protocol features](https://docs.rs/rustls/latest/rustls/manual/_04_features/index.html).\n\n### Platform support\n\nWhile Rustls itself is platform independent, by default it uses [`aws-lc-rs`] for implementing\nthe cryptography in TLS.  See [the aws-lc-rs FAQ][aws-lc-rs-platforms-faq] for more details of the\nplatform/architecture support constraints in aws-lc-rs.\n\n[`ring`] is also available via the `ring` crate feature: see\n[the supported `ring` target platforms][ring-target-platforms].\n\nBy providing a custom instance of the [`crypto::CryptoProvider`] struct, you\ncan replace all cryptography dependencies of rustls.  This is a route to being portable\nto a wider set of architectures and environments, or compliance requirements.  See the\n[`crypto::CryptoProvider`] documentation for more details.\n\nSpecifying `default-features = false` when depending on rustls will remove the\ndependency on aws-lc-rs.\n\nRustls requires Rust 1.63 or later. It has an optional dependency on zlib-rs which requires 1.75 or later.\n\n[ring-target-platforms]: https://github.com/briansmith/ring/blob/2e8363b433fa3b3962c877d9ed2e9145612f3160/include/ring-core/target.h#L18-L64\n[`crypto::CryptoProvider`]: https://docs.rs/rustls/latest/rustls/crypto/struct.CryptoProvider.html\n[`ring`]: https://crates.io/crates/ring\n[aws-lc-rs-platforms-faq]: https://aws.github.io/aws-lc-rs/faq.html#can-i-run-aws-lc-rs-on-x-platform-or-architecture\n[`aws-lc-rs`]: https://crates.io/crates/aws-lc-rs\n\n### Cryptography providers\n\nSince Rustls 0.22 it has been possible to choose the provider of the cryptographic primitives\nthat Rustls uses. This may be appealing if you have specific platform, compliance or feature\nrequirements that aren't met by the default provider, [`aws-lc-rs`].\n\nUsers that wish to customize the provider in use can do so when constructing `ClientConfig`\nand `ServerConfig` instances using the `with_crypto_provider` method on the respective config\nbuilder types. See the [`crypto::CryptoProvider`] documentation for more details.\n\n#### Built-in providers\n\nRustls ships with two built-in providers controlled with associated feature flags:\n\n* [`aws-lc-rs`] - enabled by default, available with the `aws_lc_rs` feature flag enabled.\n* [`ring`] - available with the `ring` feature flag enabled.\n\nSee the documentation for [`crypto::CryptoProvider`] for details on how providers are\nselected.\n\n#### Third-party providers\n\nThe community has also started developing third-party providers for Rustls:\n\n* [`rustls-mbedtls-provider`] - a provider that uses [`mbedtls`] for cryptography.\n* [`rustls-openssl`] - a provider that uses [OpenSSL] for cryptography.\n* [`rustls-post-quantum`]: an experimental provider that adds support for post-quantum\nkey exchange to the default aws-lc-rs provider.\n* [`boring-rustls-provider`] - a work-in-progress provider that uses [`boringssl`] for\ncryptography.\n* [`rustls-rustcrypto`] - an experimental provider that uses the crypto primitives\nfrom [`RustCrypto`] for cryptography.\n* [`rustls-symcrypt`] - a provider that uses Microsoft's [SymCrypt] library.\n* [`rustls-wolfcrypt-provider`] - a work-in-progress provider that uses [`wolfCrypt`] for cryptography.\n\n[`rustls-mbedtls-provider`]: https://github.com/fortanix/rustls-mbedtls-provider\n[`mbedtls`]: https://github.com/Mbed-TLS/mbedtls\n[`rustls-openssl`]: https://github.com/tofay/rustls-openssl\n[OpenSSL]: https://openssl-library.org/\n[`rustls-symcrypt`]: https://github.com/microsoft/rustls-symcrypt\n[SymCrypt]: https://github.com/microsoft/SymCrypt\n[`boring-rustls-provider`]: https://github.com/janrueth/boring-rustls-provider\n[`boringssl`]: https://github.com/google/boringssl\n[`rustls-rustcrypto`]: https://github.com/RustCrypto/rustls-rustcrypto\n[`RustCrypto`]: https://github.com/RustCrypto\n[`rustls-post-quantum`]: https://crates.io/crates/rustls-post-quantum\n[`rustls-wolfcrypt-provider`]: https://github.com/wolfSSL/rustls-wolfcrypt-provider\n[`wolfCrypt`]: https://www.wolfssl.com/products/wolfcrypt\n\n#### Custom provider\n\nWe also provide a simple example of writing your own provider in the [`custom-provider`]\nexample. This example implements a minimal provider using parts of the [`RustCrypto`]\necosystem.\n\nSee the [Making a custom CryptoProvider] section of the documentation for more information\non this topic.\n\n[`custom-provider`]: https://github.com/rustls/rustls/tree/main/provider-example/\n[`RustCrypto`]: https://github.com/RustCrypto\n[Making a custom CryptoProvider]: https://docs.rs/rustls/latest/rustls/crypto/struct.CryptoProvider.html#making-a-custom-cryptoprovider\n\n# Example code\n\nOur [examples] directory contains demos that show how to handle I/O using the\n[`stream::Stream`] helper, as well as more complex asynchronous I/O using [`mio`].\nIf you're already using Tokio for an async runtime you may prefer to use\n[`tokio-rustls`] instead of interacting with rustls directly.\n\nThe [`mio`] based examples are the most complete, and discussed below. Users\nnew to Rustls may prefer to look at the simple client/server examples before\ndiving in to the more complex MIO examples.\n\n[examples]: examples/\n[`stream::Stream`]: https://docs.rs/rustls/latest/rustls/struct.Stream.html\n[`mio`]: https://docs.rs/mio/latest/mio/\n[`tokio-rustls`]: https://docs.rs/tokio-rustls/latest/tokio_rustls/\n\n## Client example program\n\nThe MIO client example program is named `tlsclient-mio`.\n\nSome sample runs:\n\n```\n$ cargo run --bin tlsclient-mio -- --http mozilla-modern.badssl.com\nHTTP/1.1 200 OK\nServer: nginx/1.6.2 (Ubuntu)\nDate: Wed, 01 Jun 2016 18:44:00 GMT\nContent-Type: text/html\nContent-Length: 644\n(...)\n```\n\nor\n\n```\n$ cargo run --bin tlsclient-mio -- --http expired.badssl.com\nTLS error: InvalidCertificate(Expired)\nConnection closed\n```\n\nRun `cargo run --bin tlsclient-mio -- --help` for more options.\n\n## Server example program\n\nThe MIO server example program is named `tlsserver-mio`.\n\nHere's a sample run; we start a TLS echo server, then connect to it with\n`openssl` and `tlsclient-mio`:\n\n```\n$ cargo run --bin tlsserver-mio -- --certs test-ca/rsa-2048/end.fullchain --key test-ca/rsa-2048/end.key -p 8443 echo &\n$ echo hello world | openssl s_client -ign_eof -quiet -connect localhost:8443\ndepth=2 CN = ponytown RSA CA\nverify error:num=19:self signed certificate in certificate chain\nhello world\n^C\n$ echo hello world | cargo run --bin tlsclient-mio -- --cafile test-ca/rsa-2048/ca.cert -p 8443 localhost\nhello world\n^C\n```\n\nRun `cargo run --bin tlsserver-mio -- --help` for more options.\n\n# License\n\nRustls is distributed under the following three licenses:\n\n- Apache License version 2.0.\n- MIT license.\n- ISC license.\n\nThese are included as LICENSE-APACHE, LICENSE-MIT and LICENSE-ISC\nrespectively.  You may use this software under the terms of any\nof these licenses, at your option.\n\n# Project Membership\n\n- Joe Birr-Pixton ([@ctz], Project Founder - full-time funded by [Prossimo])\n- Dirkjan Ochtman ([@djc], Co-maintainer)\n- Daniel McCarney ([@cpu], Co-maintainer)\n- Josh Aas ([@bdaehlie], Project Management)\n\n[@ctz]: https://github.com/ctz\n[@djc]: https://github.com/djc\n[@cpu]: https://github.com/cpu\n[@bdaehlie]: https://github.com/bdaehlie\n[Prossimo]: https://www.memorysafety.org/initiative/rustls/\n\n# Code of conduct\n\nThis project adopts the [Rust Code of Conduct](https://www.rust-lang.org/policies/code-of-conduct).\nPlease email rustls-mod@googlegroups.com to report any instance of misconduct, or if you\nhave any comments or questions on the Code of Conduct.\n"
        },
        {
          "name": "RELEASING.md",
          "type": "blob",
          "size": 3.8740234375,
          "content": "## Before making a release\n\n1. Run `cargo update` followed by `cargo outdated`, to check if we have any\n   dependency updates which are not already automatically taken by their semver specs.\n   - If we do, take them if possible.  There should be dependabot PRs submitted for these already, but if\n     not make separate commits for these and land those first.\n2. Run the daily-tests CI workflow to check if we have any unfixed regressions.\n   You can run the workflow manually for the to-be-released branch by visiting\n   [the daily-tests workflow](https://github.com/rustls/rustls/actions/workflows/daily-tests.yml)\n   in your browser and selecting \"Run workflow\".\n3. Update `rustls/Cargo.toml` to set the correct version. Then run `cargo update` again in repo root and in `fuzz/`\n   so that lock files pick the new rustls version.\n4. Make a commit with the new version number, something like 'Prepare $VERSION'.  This\n   should not contain functional changes: just version numbers, and perhaps markdown changes.\n5. Do a dry run: in `rustls/` check `cargo publish --dry-run`.\n   - Do not use `--allow-dirty`; use a separate working tree if needed.\n6. Come up with text detailing headline changes for this release.  General guidelines:\n   * :green_heart: include any breaking changes.\n   * :green_heart: include any major new headline features.\n   * :green_heart: include any major, user-visible bug fixes.\n   * :green_heart: include any new API deprecations.\n   * :green_heart: emphasise contributions from outside the maintainer team.\n   * :x: omit any internal build, process or test improvements.\n   * :x: omit any minor or user-invisible bug fixes.\n   * :x: omit any changes to dependency versions (unless these cause breaking changes).\n7. Open a PR with the above commit and include the release notes in the description.\n   Wait for review and CI to confirm it as green.\n   - Any red _should_ naturally block the release.\n   - If rustc nightly is broken, this _may_ be acceptable if the reason is understood\n     and does not point to a defect in rustls.  eg, at the time of writing in releasing 0.20:\n     - `cargo fuzz` is broken: https://github.com/rust-fuzz/cargo-fuzz/issues/276\n     - oss fuzz is broken: https://github.com/google/oss-fuzz/issues/6268\n     (Both of these share the same root cause of LLVM13 breaking changes; which are\n      unfortunately common when rustc nightly takes a new LLVM.)\n\n## Making a release\n\n1. Tag the released version: eg. `git tag -m '0.20.0' v/0.20.0`\n2. Push the tag: eg. `git push origin v/0.20.0`\n3. Do the release: `cargo publish` when sat in `rustls/`.\n   - Do not use `--allow-dirty`; use a separate working tree if needed.\n\n## After making a release\n\n1. Create a new GitHub release for that tag.  Use \"Generate release notes\" (against the tag for the previous release)\n   as a starting point for the release description.  Then add the \"headlines\" produced earlier at the top.\n2. Update dependent crates (eg, hyper-rustls, rustls-native-certs, etc.) if this was a semver-incompatible release.\n\n## Maintenance point releases\n\nWhen point releases for bug fixes and small backwards compatible changes, but `main` contains unreleased breaking\nchanges we follow a modified release process using a longer-lived maintenance branch.\n\n1. Check if there is an existing release branch, e.g. `rel-0.21` for point releases in the `0.21.x` series.\n   - If there is, use that branch.\n   - If there is not, create a new branch from the tag for the previous release, e.g. `git checkout -b rel-0.21 v/0.21.0`.\n     Remember to also create a branch protection rule for the release branch, matching the settings from `main`.\n2. Make pull-requests for any changes you want to include in the point release, targeted against the release branch.\n3. Follow the usual release process, but use the release branch instead of `main` when making the release.\n   - For example, `cargo publish` should be run from the release branch, not `main`.\n"
        },
        {
          "name": "ROADMAP.md",
          "type": "blob",
          "size": 4.7919921875,
          "content": "# Rustls development roadmap\n\n## Future priorities\n\nSpecific features, in rough order of priority:\n\n* **Address asynchronous handshake interruption**.\n  Allow completion of user-provided operations to be deferred.\n  rustls/rustls#850\n\n* **Support Encrypted Client Hello (ECH) (Server Side)**.\n  Encrypted Client Hello is an upcoming standard from the TLS WG providing better\n  protection for some of the data sent by a client in the initial Client Hello\n  message. Rustls already supports client side ECH, we will add server side support.\n  rustls/rustls#1980\n\nGeneral priorities:\n\n* **Additional Performance Optimization**.\n  Additional performance optimization including CPU usage, latency, and memory\n  usage. The goal is to outperform OpenSSL across the board if we are not already.\n\n* **Improve OpenSSL Compatibility**.\n  Continue to improve the OpenSSL compatibility layer.\n\n* **Rustls API Refinements**.\n  Continue to improve the Rustls API. Aim for ease of use, clarity.\n\n## Past priorities\n\nDelivered in 0.23.11:\n\n* **Enforce Confidentiality / Integrity Limits**.\n  The QUIC use of TLS mandates limited usage of AEAD keys. While TLS 1.3 and 1.2\n  do not require this, the same kinds of issues can apply here, and we should\n  consider implementing limits for TLS over TCP as well.\n  rustls/rustls#755\n\nDelivered in 0.23.10:\n\n* **Support Encrypted Client Hello (Client Side)**.\n  Encrypted Client Hello is an upcoming standard from the TLS WG providing better\n  protection for some of the data sent by a client in the initial Client Hello\n  message.\n  rustls/rustls#1718\n\nDelivered in 0.23.9:\n\n* **Support RFC 8879 Certificate Compression**.\n  Support for a TLS extension that substantially shrinks certificates (one of the\n  largest parts of the TLS handshake), improving handshake latency by decreasing\n  bandwidth used.\n  rustls/rustls#534\n\nDelivered in [rustls-openssl-compat](https://github.com/rustls/rustls-openssl-compat) 0.1.0:\n\n* **OpenSSL API Compatibility Layer**.\n  Add an OpenSSL C API compatibility layer for adoption purposes.\n\nDelivered in 0.23.2:\n\n* **Support Post-Quantum Hybrid Key Exchange**.\n  Experimental, optional support for the `X25519Kyber768Draft00` key exchange.\n  This should track [the draft](https://datatracker.ietf.org/doc/draft-tls-westerbaan-xyber768d00/).\n  rustls/rustls#1687\n\nDelivered in 0.23:\n\n* **FIPS Certification for Default Cryptographic Library**.\n  Change the default cryptographic library to something with FIPS certification.\n  rustls/rustls#1540\n\n* **Add No-Allocation / Write-Through API**.\n  Would make handshakes faster and give the caller more control over allocations.\n  RFC: rustls/rustls#1420\n\n* **Support no_std**.\n  Enables use of rustls in more memory-constrained environments.\n  RFC: rustls/rustls#1399\n\nDelivered in [rustls-platform-verifier](https://github.com/rustls/rustls-platform-verifier) 0.1.0:\n\n* **Improve OS Trust Verifier Support**.\n  While we currently have a way to trust certificates stored in the platform trust\n  store, platform trust stores can have other ways of restricting how/when roots\n  that they expose are trusted. In order to rely on these (on Windows, Android,\n  and Apple platforms) we should rely on the platform verifier directly.\n\nDelivered in 0.22:\n\n* **Enable Pluggable Cryptographic Back-ends**.\n  Allow plugging in different cryptographic back-ends.\n  rustls/rustls#1184\n\n* **Comprehensive Performance Benchmarking**.\n  Performance should be a headline feature of Rustls. We need to develop a more\n  comprehensive benchmarking system so that we can assess and improve performance\n  from multiple angles, including CPU usage, latency, and memory usage.\n\nDelivered in 0.21:\n\n* **Support IP Address Certificates**.\n  There are some popular use cases where applications want TLS certificates for\n  services that don’t have their own host name, relying on the IP address directly\n  instead. This is common in Kubernetes deployments and service meshes.\n  rustls/rustls#184\n\n* **Implement RFC 8446 Appendix C.4 in session cache**.\n  TLS clients should use session tickets at most once for resumption. Without this,\n  TLS clients may be tracked across connections through reuse of session tickets.\n  Requires changes of the internal APIs to the session caching infrastructure.\n  rustls/rustls#466\n\n* **Improve Client Certificate Authentication Support**.\n  Rustls and webpki currently do not provide access to client information supplied\n  as part of the certificate, and there’s no infrastructure to deal with revocation\n  checks.\n  rustls/rustls-ffi#87\n\nDelivered in 0.20:\n\n* **Add/extend support for TLS 1.3 Early Data**.\n  Early data allows clients to submit data before the TLS handshake is complete\n  in some cases (idempotent requests, data where replay is not a risk), improving\n  latency in the cases of, for example, HTTP requests by submitting the request\n  in parallel with the TLS handshake.\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 2.6201171875,
          "content": "# Security Policy\n\n## Supported Versions\n\nSecurity fixes will be backported only to the rustls versions for which the\noriginal semver-compatible release was published less than 2 years ago.\n\nFor example, as of 2024-04-18 the latest release is 0.23.4.\n\n* 0.23.0 was released in February of 2024\n* 0.22.0 was released in December of 2023\n* 0.21.0 was released in March of 2023\n* 0.20.0 was released in September of 2021\n* 0.19.0 was released in November of 2020\n\nTherefore 0.23.x, 0.22.x and 0.21.x will be updated, while 0.20.x and 0.19.x\nwill not be.\n\n> [!NOTE]\n> We use the date of `crates.io` publication when evaluating the security\n> policy. For example, while the Rustls 0.20.0 GitHub release note was created\n> Jul, 2023 the actual release in `crates.io` was published in Sept. 2021.\n\n### Minimum Supported Rust Version\n\nFrom time to time we will update our minimum supported Rust version (MSRV)\nin the course of normal development, subject to these constraints:\n\n- Our MSRV will be no more recent than 9 versions old, or approximately 12 months.\n\n> [!TIP]\n> At the time of writing, the most recent Rust release is 1.82.0.  That means\n> our MSRV could be as recent as 1.73.0. As it happens, it is 1.71.0.\n\n- Our MSRV policy only covers the core library crate: it does not cover tests\n  or example code, and is not binding on our dependencies.\n\n- We do not consider MSRV changes to be breaking for the purposes of semver.\n\n- Once we reach 1.0.0, we will not make MSRV changes in patch releases.\n  (Prior to reaching 1.0.0, cargo does not support patch releases.)\n\n- We will not make MSRV changes to security maintenance branches.\n\n> [!NOTE]\n> For the avoidance of doubt: security maintenance branches exist for each\n> release line _that is not the latest_: so (at the time of writing) 0.22\n> and 0.21 have maintenance branches, but 0.23 does not and is released from\n> the `main` branch.\n\n#### MSRV of new dependencies\n\nWe may take _non-default_ optional new dependencies on a crate with a later\nMSRV than this policy.\n\n> [!NOTE]\n> This is currently the case for our optional dependency on `zlib-rs`, which\n> has a current MSRV of 1.75.0.\n\n## Reporting a Vulnerability\n\nPlease report security bugs [via github](https://github.com/rustls/rustls/security/advisories/new).\nWe'll then:\n\n- Prepare a fix and regression tests.\n- Backport the fix and make a patch release for most recent release.\n- Submit an advisory to [rustsec/advisory-db](https://github.com/RustSec/advisory-db).\n- Refer to the advisory on the main README.md and release notes.\n\nIf you're *looking* for security bugs, this crate is set up for\n`cargo fuzz` but would benefit from more runtime, targets and corpora.\n"
        },
        {
          "name": "admin",
          "type": "tree",
          "content": null
        },
        {
          "name": "audit",
          "type": "tree",
          "content": null
        },
        {
          "name": "bogo",
          "type": "tree",
          "content": null
        },
        {
          "name": "ci-bench",
          "type": "tree",
          "content": null
        },
        {
          "name": "connect-tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "fuzz",
          "type": "tree",
          "content": null
        },
        {
          "name": "openssl-tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "provider-example",
          "type": "tree",
          "content": null
        },
        {
          "name": "rustls-bench",
          "type": "tree",
          "content": null
        },
        {
          "name": "rustls-fuzzing-provider",
          "type": "tree",
          "content": null
        },
        {
          "name": "rustls-post-quantum",
          "type": "tree",
          "content": null
        },
        {
          "name": "rustls-provider-test",
          "type": "tree",
          "content": null
        },
        {
          "name": "rustls",
          "type": "tree",
          "content": null
        },
        {
          "name": "test-ca",
          "type": "tree",
          "content": null
        },
        {
          "name": "website",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}