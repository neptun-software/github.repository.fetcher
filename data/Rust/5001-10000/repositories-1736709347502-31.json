{
  "metadata": {
    "timestamp": 1736709347502,
    "page": 31,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "google/magika",
      "stars": 8339,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".cargo",
          "type": "tree",
          "content": null
        },
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.6005859375,
          "content": "# Include any files or directories that you don't want to be copied to your\n# container here (e.g., local build artifacts, temporary files, etc.).\n#\n# For more help, visit the .dockerignore file reference guide at\n# https://docs.docker.com/go/build-context-dockerignore/\n\n**/.DS_Store\n**/__pycache__\n**/.venv\n**/.classpath\n**/.dockerignore\n**/.env\n**/.git\n**/.gitignore\n**/.project\n**/.settings\n**/.toolstarget\n**/.vs\n**/.vscode\n**/*.*proj.user\n**/*.dbmdl\n**/*.jfm\n**/bin\n**/charts\n**/docker-compose*\n**/compose*\n**/Dockerfile*\n**/node_modules\n**/npm-debug.log\n**/obj\n**/secrets.dev.yaml\n**/values.dev.yaml\nLICENSE\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1650390625,
          "content": "*.pyc\n__pycache__/\n.ipynb_checkpoints\nvenv/\ntmp/\n.env\n*.swp\n*.egg-info\ndist/*\n*.pickle\n.s.yml\n\n*/models-data/*\n\n.vscode\n\nscratchpad/\n\n*/node_modules/*\ndocs/dist\njs/dist\n"
        },
        {
          "name": "CITATION.cff",
          "type": "blob",
          "size": 0.767578125,
          "content": "cff-version: 1.2.0\nmessage: \"If you use this software, please cite it as below.\"\nauthors:\n- family-names: \"Fratantonio\"\n  given-names: \"Yanick\"\n- family-names: \"Invernizzi\"\n  given-names: \"Luca\"\n- family-names: \"Farah\"\n  given-names: \"Loua\"\n- family-names: \"Kurt\"\n  given-names: \"Thomas\"\n- family-names: \"Zhang\"\n  given-names: \"Marina\"\n- family-names: \"Albertini\"\n  given-names: \"Ange\"\n- family-names: \"Galilee\"\n  given-names: \"Francois\"\n- family-names: \"Metitieri\"\n  given-names: \"Giancarlo\"\n- family-names: \"Cretin\"\n  given-names: \"Julien\"\n- family-names: \"Petit-Bianco\"\n  given-names: \"Alexandre\"\n- family-names: \"Tao\"\n  given-names: \"David\"\n- family-names: \"Bursztein\"\n  given-names: \"Elie\"\ntitle: \"Magika: AI-Powered Content-Type Detection\"\nurl: \"https://arxiv.org/abs/2409.13768\"\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.1953125,
          "content": "# How to Contribute\n\nWe would love to accept your patches and contributions to this project!\n\nCheck [open issues labeled as \"help wanted\"](https://github.com/google/magika/issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22) as a starting point.\n\n## Before you begin\n\n### Sign our Contributor License Agreement\n\nContributions to this project must be accompanied by a\n[Contributor License Agreement](https://cla.developers.google.com/about) (CLA).\nYou (or your employer) retain the copyright to your contribution; this simply\ngives us permission to use and redistribute your contributions as part of the\nproject.\n\nIf you or your current employer have already signed the Google CLA (even if it\nwas for a different project), you probably don't need to do it again.\n\nVisit <https://cla.developers.google.com/> to see your current agreements or to\nsign a new one.\n\n### Review our Community Guidelines\n\nThis project follows [Google's Open Source Community\nGuidelines](https://opensource.google/conduct/).\n\n## Contribution process\n\n### Code Reviews\n\nAll submissions, including submissions by project members, require review. We\nuse [GitHub pull requests](https://docs.github.com/articles/about-pull-requests)\nfor this purpose.\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.2548828125,
          "content": "# syntax=docker/dockerfile:1\n\nARG PYTHON_VERSION=3.11\nFROM python:${PYTHON_VERSION}-slim as base\n\nWORKDIR /magika\n\n# This requires buildx\n# RUN --mount=type=cache,target=/root/.cache/pip \\\n#     pip install magika\n\nRUN pip install magika\n\nENTRYPOINT [\"magika\"]\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0908203125,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License."
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 13.4384765625,
          "content": "# Magika\n\n[![image](https://img.shields.io/pypi/v/magika.svg)](https://pypi.python.org/pypi/magika)<!-- [![image](https://img.shields.io/pypi/l/magika.svg)](https://pypi.python.org/pypi/magika) -->\n[![image](https://img.shields.io/pypi/pyversions/magika.svg)](https://pypi.python.org/pypi/magika)\n[![OpenSSF Scorecard](https://api.securityscorecards.dev/projects/github.com/google/magika/badge)](https://securityscorecards.dev/viewer/?uri=github.com/google/magika)\n[![OpenSSF Best Practices](https://www.bestpractices.dev/projects/8706/badge)](https://www.bestpractices.dev/en/projects/8706)\n![CodeQL](https://github.com/google/magika/workflows/CodeQL/badge.svg)\n[![Actions status](https://github.com/google/magika/actions/workflows/python-build-package.yml/badge.svg)](https://github.com/google/magika/actions)\n[![PyPI Monthly Downloads](https://img.shields.io/pypi/dm/magika)](https://pypi.org/project/magika/)\n\nMagika is a novel AI powered file type detection tool that relies on the recent advance of deep learning to provide accurate detection. Under the hood, Magika employs a custom, highly optimized Keras model that only weighs about a few MBs, and enables precise file identification within milliseconds, even when running on a single CPU.\n\nIn an evaluation with over 1M files and over 100 content types (covering both binary and textual file formats), Magika achieves 99%+ precision and recall. Magika is used at scale to help improve Google users’ safety by routing Gmail, Drive, and Safe Browsing files to the proper security and content policy scanners.\nRead more in our [research paper](https://arxiv.org/abs/2409.13768)!\n\nYou can try Magika without installing anything by using our [web demo](https://google.github.io/magika/), which runs locally in your browser!\n\nHere is an example of what Magika command line output look like:\n<p align=\"center\">\n    <img src=\"./assets/magika-screenshot.png\" width=\"600\">\n</p>\n\nFor more context you can read our initial [announcement post on Google's OSS blog](https://opensource.googleblog.com/2024/02/magika-ai-powered-fast-and-efficient-file-type-identification.html)\n\n## News\n\n> [!IMPORTANT]\n> We are about to release a number of new things, and they are ready for testing!\n> - We uploaded to pypi a release candidate for v0.6.0 (e.g., [`magika 0.6.0rc3`](https://pypi.org/project/magika/0.6.0rc3/)), it's ready for testing! Please report any problems here: https://github.com/google/magika/issues/798. You can install the latest release candidate with `pip install --pre magika`.\n> - A new ML model with support for [200+ content types](./assets/models/standard_v2_1/README.md).\n> - A new CLI written in Rust. This will replace the previous CLI written in python. More information [here](./rust/cli/README.md). The Rust codebase can also be used for applications written in rust, see the [docs](https://docs.rs/magika/0.1.0-rc.1/magika/index.html).\n> - Upcoming python package v0.6.0: this version ships the new model with support for 200+ content types, the CLI written in Rust (which replaces the old one written in python), and a revamped Python API with a few breaking changes, see the [docs](./python/README.md) and the [changelog](./python/CHANGELOG.md)!\n> - If you need docs about the stable release, browse this repository at the latest stable tag, [here](https://github.com/google/magika/tree/python-v0.5.1).\n> - The Magika paper was accepted at IEEE/ACM International Conference on Software Engineering (ICSE) 2025! Stay tuned!\n\n\n## Highlights\n\n- Available as a command line tool written in Rust, a Python API, a Rust API, and an experimental TFJS version (which powers our [web demo](https://google.github.io/magika/)).\n- Trained on a dataset of over 25M files across more than 100 content types.\n- On our evaluation, Magika achieves 99%+ average precision and recall, outperforming existing approaches.\n- More than 200 content types (see [full list](./assets/models/standard_v2_1/README.md)).\n- After the model is loaded (this is a one-off overhead), the inference time is about 5ms per file.\n- Batching: You can pass to the command line and API multiple files at the same time, and Magika will use batching to speed up the inference time. You can invoke Magika with even thousands of files at the same time. You can also use `-r` for recursively scanning a directory.\n- Near-constant inference time independently from the file size; Magika only uses a limited subset of the file's bytes.\n- Magika uses a per-content-type threshold system that determines whether to \"trust\" the prediction for the model, or whether to return a generic label, such as \"Generic text document\" or \"Unknown binary data\".\n- Support three different prediction modes, which tweak the tolerance to errors: `high-confidence`, `medium-confidence`, and `best-guess`.\n- It's open source! (And more is yet to come.)\n\nFor more details, see the documentation for the [python package](./python/README.md) and for the [js package](./js/README.md) (dev [docs](./docs/js.md)).\n\n\n## Table of Contents\n\n1. [Getting Started](#getting-started)\n    1. [Installation](#installation)\n    1. [Running on Docker](#running-in-docker)\n    1. [Usage](#usage)\n        1. [Command line (written in Rust)](#command-line-written-in-rust)\n        1. [Python API](#python-api)\n        1. [Experimental TFJS model & npm package](#experimental-tfjs-model--npm-package)\n1. [Development Setup](#development-setup)\n1. [Important Documentation](#important-documentation)\n1. [Known Limitations & Contributing](#known-limitations--contributing)\n1. [Frequently Asked Questions](#frequently-asked-questions)\n1. [Additional Resources](#additional-resources)\n1. [Research Paper and Citation](#research-paper-and-citation)\n1. [License](#license)\n1. [Disclaimer](#disclaimer)\n\n\n## Getting Started\n\n### Installation\n\nMagika is available as `magika` on PyPI:\n\n```shell\n$ pip install magika\n```\n\nIf you intend to use Magika only as a command line, you may want to use `$ pipx install magika` instead.\n\nIf you want to test out the latest release candidate, you can install with `pip install --pre magika`.\n\n\n### Running in Docker\n\n```\ngit clone https://github.com/google/magika\ncd magika/\ndocker build -t magika .\ndocker run -it --rm -v $(pwd):/magika magika -r /magika/tests_data\n```\n\n### Usage\n\n#### Command line (written in Rust)\n\nThe new command line is written in Rust, and it is available in the `magika` python package.\n\nExamples:\n\n```shell\n$ cd tests_data/basic && magika -r *\nasm/code.asm: Assembly (code)\nbatch/simple.bat: DOS batch file (code)\nc/code.c: C source (code)\ncss/code.css: CSS source (code)\ncsv/magika_test.csv: CSV document (code)\ndockerfile/Dockerfile: Dockerfile (code)\ndocx/doc.docx: Microsoft Word 2007+ document (document)\nepub/doc.epub: EPUB document (document)\nepub/magika_test.epub: EPUB document (document)\nflac/test.flac: FLAC audio bitstream data (audio)\nhandlebars/example.handlebars: Handlebars source (code)\nhtml/doc.html: HTML document (code)\nini/doc.ini: INI configuration file (text)\njavascript/code.js: JavaScript source (code)\njinja/example.j2: Jinja template (code)\njpeg/magika_test.jpg: JPEG image data (image)\njson/doc.json: JSON document (code)\nlatex/sample.tex: LaTeX document (text)\nmakefile/simple.Makefile: Makefile source (code)\nmarkdown/README.md: Markdown document (text)\n[...]\n```\n\n```shell\n$ magika ./tests_data/basic/python/code.py --json\n[\n  {\n    \"path\": \"./tests_data/basic/python/code.py\",\n    \"result\": {\n      \"status\": \"ok\",\n      \"value\": {\n        \"dl\": {\n          \"description\": \"Python source\",\n          \"extensions\": [\n            \"py\",\n            \"pyi\"\n          ],\n          \"group\": \"code\",\n          \"is_text\": true,\n          \"label\": \"python\",\n          \"mime_type\": \"text/x-python\"\n        },\n        \"output\": {\n          \"description\": \"Python source\",\n          \"extensions\": [\n            \"py\",\n            \"pyi\"\n          ],\n          \"group\": \"code\",\n          \"is_text\": true,\n          \"label\": \"python\",\n          \"mime_type\": \"text/x-python\"\n        },\n        \"score\": 0.753000020980835\n      }\n    }\n  }\n]\n```\n\n```shell\n$ cat doc.ini | magika -\n-: INI configuration file (text)\n```\n\n```help\n$ magika --help\nDetermines the content type of files with deep-learning\n\nUsage: magika [OPTIONS] [PATH]...\n\nArguments:\n  [PATH]...\n          List of paths to the files to analyze.\n\n          Use a dash (-) to read from standard input (can only be used once).\n\nOptions:\n  -r, --recursive\n          Identifies files within directories instead of identifying the directory itself\n\n      --no-dereference\n          Identifies symbolic links as is instead of identifying their content by following them\n\n      --colors\n          Prints with colors regardless of terminal support\n\n      --no-colors\n          Prints without colors regardless of terminal support\n\n  -s, --output-score\n          Prints the prediction score in addition to the content type\n\n  -i, --mime-type\n          Prints the MIME type instead of the content type description\n\n  -l, --label\n          Prints a simple label instead of the content type description\n\n      --json\n          Prints in JSON format\n\n      --jsonl\n          Prints in JSONL format\n\n      --format <CUSTOM>\n          Prints using a custom format (use --help for details).\n\n          The following placeholders are supported:\n\n            %p  The file path\n            %l  The unique label identifying the content type\n            %d  The description of the content type\n            %g  The group of the content type\n            %m  The MIME type of the content type\n            %e  Possible file extensions for the content type\n            %s  The score of the content type for the file\n            %S  The score of the content type for the file in percent\n            %b  The model output if overruled (empty otherwise)\n            %%  A literal %\n\n  -h, --help\n          Print help (see a summary with '-h')\n\n  -V, --version\n          Print version\n```\n\nSee [here](./rust/cli/README.md) for more detailed documentation.\n\n\n#### Python API\n\nExamples:\n\n```python\n>>> from magika import Magika\n>>> m = Magika()\n>>> res = m.identify_bytes(b\"# Example\\nThis is an example of markdown!\")\n>>> print(res.output.label)\nmarkdown\n```\n\n\nSee [python documentation](./python/README.md) for detailed documentation.\n\n\n#### Experimental TFJS model & npm package\n\nWe also provide Magika as an experimental package for people interested in using in a web app.\nNote that Magika JS implementation performance is significantly slower and you should expect to spend 100ms+ per file.\n\nSee [js documentation](./docs/js.md) for the details.\n\n\n## Development Setup\n\nSee the \"Development Setup\" section in the [python docs](./python/README.md).\n\n\n## Important Documentation\n\n- [Documentation about the CLI](./docs/command_line_interface.md)\n- [Documentation about the new Rust CLI](./rust/cli/README.md)\n- [Documentation about the bindings for different languages](./docs/bindings.md)\n- [List of supported content types (for v1, more to come).](./docs/supported_content_types_list.md)\n- [List of supported content types for the new model](./assets/models/standard_v2_1/README.md)\n- [Documentation on how to interpret Magika's output.](./docs/magika_output.md)\n- [Frequently Asked Questions](./docs/faq.md)\n\n\n## Known Limitations & Contributing\n\nMagika significantly improves over the state of the art, but there's always room for improvement! More work can be done to increase detection accuracy, support for additional content types, bindings for more languages, etc.\n\nThis initial release is not targeting polyglot detection, and we're looking forward to seeing adversarial examples from the community.\nWe would also love to hear from the community about encountered problems, misdetections, features requests, need for support for additional content types, etc.\n\nCheck our open GitHub issues to see what is on our roadmap and please report misdetections or feature requests by either opening GitHub issues (preferred) or by emailing us at magika-dev@google.com.\n\n**NOTE: Do NOT send reports about files that may contain PII, the report contains (a small) part of the file content!**\n\nSee [`CONTRIBUTING.md`](CONTRIBUTING.md) for details.\n\n\n## Frequently Asked Questions\n\nWe have collected a number of FAQs [here](./docs/faq.md).\n\n\n## Additional Resources\n\n- [Google's OSS blog post](https://opensource.googleblog.com/2024/02/magika-ai-powered-fast-and-efficient-file-type-identification.html) about Magika announcement.\n- Web demo: [web demo](https://google.github.io/magika/).\n\n\n## Research Paper and Citation\nWe describe how we developed Magika and the choices we made in [our research paper](https://arxiv.org/abs/2409.13768).\n\nIf you use this software for your research, please cite it as:\n```bibtex\n@misc{magika,\n      title={{Magika: AI-Powered Content-Type Detection}},\n      author={{Fratantonio, Yanick and Invernizzi, Luca and Farah, Loua and Kurt, Thomas and Zhang, Marina and Albertini, Ange and Galilee, Francois and Metitieri, Giancarlo and Cretin, Julien and Petit-Bianco, Alexandre and Tao, David and Bursztein, Elie}},\n      year={2024},\n      eprint={2409.13768},\n      archivePrefix={arXiv},\n      primaryClass={cs.CR},\n      url={https://arxiv.org/abs/2409.13768},\n}\n```\n\n> [!NOTE]\n> The Magika paper was accepted at IEEE/ACM International Conference on Software Engineering (ICSE) 2025!\n\n## Security vulnerabilities\nPlease contact us directly at magika-dev@google.com\n\n## License\n\nApache 2.0; see [`LICENSE`](LICENSE) for details.\n\n## Disclaimer\n\nThis project is not an official Google project. It is not supported by\nGoogle and Google specifically disclaims all warranties as to its quality,\nmerchantability, or fitness for a particular purpose.\n"
        },
        {
          "name": "assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "assets_generation",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "go",
          "type": "tree",
          "content": null
        },
        {
          "name": "js",
          "type": "tree",
          "content": null
        },
        {
          "name": "python",
          "type": "tree",
          "content": null
        },
        {
          "name": "rust",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests_data",
          "type": "tree",
          "content": null
        },
        {
          "name": "website",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}