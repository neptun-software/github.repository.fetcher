{
  "metadata": {
    "timestamp": 1736709386273,
    "page": 103,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjExMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "kata-containers/kata-containers",
      "stars": 5734,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.3212890625,
          "content": "**/*.bk\n**/*~\n**/*.orig\n**/*.rej\n**/target\n**/.vscode\n**/.idea\n**/.fleet\n**/*.swp\n**/*.swo\npkg/logging/Cargo.lock\nsrc/agent/src/version.rs\nsrc/agent/kata-agent.service\nsrc/agent/protocols/src/*.rs\n!src/agent/protocols/src/lib.rs\nbuild\nsrc/tools/log-parser/kata-log-parser\ntools/packaging/static-build/agent/install_libseccomp.sh\n"
        },
        {
          "name": "CODEOWNERS",
          "type": "blob",
          "size": 2.8095703125,
          "content": "# Copyright (c) 2019-2023 Intel Corporation\n#\n# SPDX-License-Identifier: Apache-2.0\n#\n# Define any code owners for this repository.\n# The code owners lists are used to help automatically enforce\n# reviews and acks of the right groups on the right PRs.\n\n# Order in this file is important. Only the last match will be\n# used. See https://help.github.com/articles/about-code-owners/\n\n/CODEOWNERS\t\t\t@kata-containers/codeowners\n\nVERSION\t\t\t\t@kata-containers/release\n\n# The versions database needs careful handling\nversions.yaml\t\t\t@kata-containers/release @kata-containers/ci @kata-containers/tests\n\nMakefile*\t\t\t@kata-containers/build\n*.mak\t\t\t\t@kata-containers/build\n*.mk\t\t\t\t@kata-containers/build\n\n# Documentation related files could also appear anywhere\n# else in the repo.\n*.md\t\t\t\t@kata-containers/documentation\n*.drawio\t\t\t@kata-containers/documentation\n*.jpg\t\t\t\t@kata-containers/documentation\n*.png\t\t\t\t@kata-containers/documentation\n*.svg\t\t\t\t@kata-containers/documentation\n\n*.bash\t\t\t\t@kata-containers/shell\n*.sh\t\t\t\t@kata-containers/shell\n**/completions/\t\t\t@kata-containers/shell\n\nDockerfile*\t\t\t@kata-containers/docker\n\n/ci/\t\t\t\t@kata-containers/ci\n\n*.bats\t\t\t\t@kata-containers/tests\n/tests/\t\t\t\t@kata-containers/tests\n\n*.rs\t\t\t\t@kata-containers/rust\n*.go\t\t\t\t@kata-containers/golang\n\n/utils/\t\t\t\t@kata-containers/utils\n\n# FIXME: Maybe a new \"protocol\" team would be better?\n#\n# All protocol changes must be reviewed.\n# Note, we include all subdirs, including the vendor dir, as at present there are no .proto files\n# in the vendor dir. Later we may have to extend this matching rule if that changes.\n/src/libs/protocols/*.proto\t@kata-containers/architecture-committee @kata-containers/builder @kata-containers/packaging\n\n# GitHub Actions\n/.github/workflows/\t\t@kata-containers/action-admins @kata-containers/ci\n\n/ci/\t\t\t\t@kata-containers/ci @kata-containers/tests\n/docs/\t\t\t\t@kata-containers/documentation\n\n/src/agent/\t\t\t@kata-containers/agent\n\n/src/runtime*/\t\t\t@kata-containers/runtime\n\n/src/runtime/\t\t\t@kata-containers/golang\n\nsrc/runtime-rs/\t\t\t@kata-containers/rust\nsrc/libs/\t\t\t@kata-containers/rust\n\nsrc/dragonball/\t\t\t@kata-containers/dragonball\n\n/tools/osbuilder/\t\t@kata-containers/builder\n/tools/packaging/\t\t@kata-containers/packaging\n/tools/packaging/kernel/\t@kata-containers/kernel\n/tools/packaging/kata-deploy/\t@kata-containers/kata-deploy\n/tools/packaging/qemu/\t\t@kata-containers/qemu\n/tools/packaging/release/\t@kata-containers/release\n\n**/vendor/\t\t\t@kata-containers/vendoring\n\n# Handle arch specific files last so they match more specifically than\n# the kernel packaging files.\n**/*aarch64*\t\t\t@kata-containers/arch-aarch64\n**/*arm64*\t\t\t@kata-containers/arch-aarch64\n\n**/*amd64*\t\t\t@kata-containers/arch-amd64\n**/*x86-64*\t\t\t@kata-containers/arch-amd64\n**/*x86_64*\t\t\t@kata-containers/arch-amd64\n\n**/*ppc64*\t\t\t@kata-containers/arch-ppc64le\n\n**/*s390x*\t\t\t@kata-containers/arch-s390x\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 0.16015625,
          "content": "## Kata Containers Code of Conduct\n\nKata Containers follows the [OpenStack Foundation Code of Conduct](https://www.openstack.org/legal/community-code-of-conduct/).\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.26171875,
          "content": "# Contributing\n\n## This repo is part of [Kata Containers](https://katacontainers.io)\n\nFor details on how to contribute to the Kata Containers project, please see the main [contributing document](https://github.com/kata-containers/community/blob/main/CONTRIBUTING.md).\n"
        },
        {
          "name": "Glossary.md",
          "type": "blob",
          "size": 0.1220703125,
          "content": "# Glossary\n\nSee the [project glossary hosted in the wiki](https://github.com/kata-containers/kata-containers/wiki/Glossary).\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0908203125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 1.2734375,
          "content": "# Copyright (c) 2020-2023 Intel Corporation\n#\n# SPDX-License-Identifier: Apache-2.0\n#\n\n# List of available components\nCOMPONENTS =\n\nCOMPONENTS += libs\nCOMPONENTS += agent\nCOMPONENTS += dragonball\nCOMPONENTS += runtime\nCOMPONENTS += runtime-rs\n\n# List of available tools\nTOOLS =\n\nTOOLS += agent-ctl\nTOOLS += kata-ctl\nTOOLS += log-parser\nTOOLS += runk\nTOOLS += trace-forwarder\n\nSTANDARD_TARGETS = build check clean install static-checks-build test vendor\n\n# Variables for the build-and-publish-kata-debug target\nKATA_DEBUG_REGISTRY ?= \"\"\nKATA_DEBUG_TAG ?= \"\"\n\ndefault: all\n\ninclude utils.mk\ninclude ./tools/packaging/kata-deploy/local-build/Makefile\n\n# Create the rules\n$(eval $(call create_all_rules,$(COMPONENTS),$(TOOLS),$(STANDARD_TARGETS)))\n\n# Non-standard rules\n\ngenerate-protocols:\n\tmake -C src/agent generate-protocols\n\n# Some static checks rely on generated source files of components.\nstatic-checks: static-checks-build\n\tbash tests/static-checks.sh github.com/kata-containers/kata-containers\n\ndocs-url-alive-check:\n\tbash ci/docs-url-alive-check.sh\n\nbuild-and-publish-kata-debug:\n\tbash tools/packaging/kata-debug/kata-debug-build-and-upload-payload.sh ${KATA_DEBUG_REGISTRY} ${KATA_DEBUG_TAG} \n\n.PHONY: \\\n\tall \\\n\tkata-tarball \\\n\tinstall-tarball \\\n\tdefault \\\n\tstatic-checks \\\n\tdocs-url-alive-check\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.80859375,
          "content": "<img src=\"https://object-storage-ca-ymq-1.vexxhost.net/swift/v1/6e4619c416ff4bd19e1c087f27a43eea/www-images-prod/openstack-logo/kata/SVG/kata-1.svg\" width=\"900\">\n\n[![CI | Publish Kata Containers payload](https://github.com/kata-containers/kata-containers/actions/workflows/payload-after-push.yaml/badge.svg)](https://github.com/kata-containers/kata-containers/actions/workflows/payload-after-push.yaml) [![Kata Containers Nightly CI](https://github.com/kata-containers/kata-containers/actions/workflows/ci-nightly.yaml/badge.svg)](https://github.com/kata-containers/kata-containers/actions/workflows/ci-nightly.yaml)\n\n# Kata Containers\n\nWelcome to Kata Containers!\n\nThis repository is the home of the Kata Containers code for the 2.0 and newer\nreleases.\n\nIf you want to learn about Kata Containers, visit the main\n[Kata Containers website](https://katacontainers.io).\n\n## Introduction\n\nKata Containers is an open source project and community working to build a\nstandard implementation of lightweight Virtual Machines (VMs) that feel and\nperform like containers, but provide the workload isolation and security\nadvantages of VMs.\n\n## License\n\nThe code is licensed under the Apache 2.0 license.\nSee [the license file](LICENSE) for further details.\n\n## Platform support\n\nKata Containers currently runs on 64-bit systems supporting the following\ntechnologies:\n\n| Architecture | Virtualization technology |\n|-|-|\n| `x86_64`, `amd64` | [Intel](https://www.intel.com) VT-x, AMD SVM |\n| `aarch64` (\"`arm64`\")| [ARM](https://www.arm.com) Hyp |\n| `ppc64le` | [IBM](https://www.ibm.com) Power |\n| `s390x` | [IBM](https://www.ibm.com) Z & LinuxONE SIE |\n\n### Hardware requirements\n\nThe [Kata Containers runtime](src/runtime) provides a command to\ndetermine if your host system is capable of running and creating a\nKata Container:\n\n```bash\n$ kata-runtime check\n```\n\n> **Notes:**\n>\n> - This command runs a number of checks including connecting to the\n>   network to determine if a newer release of Kata Containers is\n>   available on GitHub. If you do not wish this to check to run, add\n>   the `--no-network-checks` option.\n>\n> - By default, only a brief success / failure message is printed.\n>   If more details are needed, the `--verbose` flag can be used to display the\n>   list of all the checks performed.\n>\n> - If the command is run as the `root` user additional checks are\n>   run (including checking if another incompatible hypervisor is running).\n>   When running as `root`, network checks are automatically disabled.\n\n## Getting started\n\nSee the [installation documentation](docs/install).\n\n## Documentation\n\nSee the [official documentation](docs) including:\n\n- [Installation guides](docs/install)\n- [Developer guide](docs/Developer-Guide.md)\n- [Design documents](docs/design)\n  - [Architecture overview](docs/design/architecture)\n  - [Architecture 3.0 overview](docs/design/architecture_3.0/)\n\n## Configuration\n\nKata Containers uses a single\n[configuration file](src/runtime/README.md#configuration)\nwhich contains a number of sections for various parts of the Kata\nContainers system including the [runtime](src/runtime), the\n[agent](src/agent) and the [hypervisor](#hypervisors).\n\n## Hypervisors\n\nSee the [hypervisors document](docs/hypervisors.md) and the\n[Hypervisor specific configuration details](src/runtime/README.md#hypervisor-specific-configuration).\n\n## Community\n\nTo learn more about the project, its community and governance, see the\n[community repository](https://github.com/kata-containers/community). This is\nthe first place to go if you wish to contribute to the project.\n\n## Getting help\n\nSee the [community](#community) section for ways to contact us.\n\n### Raising issues\n\nPlease raise an issue\n[in this repository](https://github.com/kata-containers/kata-containers/issues).\n\n> **Note:**\n> If you are reporting a security issue, please follow the [vulnerability reporting process](https://github.com/kata-containers/community#vulnerability-handling)\n\n## Developers\n\nSee the [developer guide](docs/Developer-Guide.md).\n\n### Components\n\n### Main components\n\nThe table below lists the core parts of the project:\n\n| Component | Type | Description |\n|-|-|-|\n| [runtime](src/runtime) | core | Main component run by a container manager and providing a containerd shimv2 runtime implementation. |\n| [runtime-rs](src/runtime-rs) | core | The Rust version runtime. |\n| [agent](src/agent) | core | Management process running inside the virtual machine / POD that sets up the container environment. |\n| [`dragonball`](src/dragonball) | core | An optional built-in VMM brings out-of-the-box Kata Containers experience with optimizations on container workloads |\n| [documentation](docs) | documentation | Documentation common to all components (such as design and install documentation). |\n| [tests](tests) | tests | Excludes unit tests which live with the main code. |\n\n### Additional components\n\nThe table below lists the remaining parts of the project:\n\n| Component | Type | Description |\n|-|-|-|\n| [packaging](tools/packaging) | infrastructure | Scripts and metadata for producing packaged binaries<br/>(components, hypervisors, kernel and rootfs). |\n| [kernel](https://www.kernel.org) | kernel | Linux kernel used by the hypervisor to boot the guest image. Patches are stored [here](tools/packaging/kernel). |\n| [osbuilder](tools/osbuilder) | infrastructure | Tool to create \"mini O/S\" rootfs and initrd images and kernel for the hypervisor. |\n| [kata-debug](tools/packaging/kata-debug/README.md) | infrastructure | Utility tool to gather Kata Containers debug information from Kubernetes clusters. |\n| [`agent-ctl`](src/tools/agent-ctl) | utility | Tool that provides low-level access for testing the agent. |\n| [`kata-ctl`](src/tools/kata-ctl) | utility | Tool that provides advanced commands and debug facilities. |\n| [`trace-forwarder`](src/tools/trace-forwarder) | utility | Agent tracing helper. |\n| [`runk`](src/tools/runk) | utility | Standard OCI container runtime based on the agent. |\n| [`ci`](.github/workflows) | CI | Continuous Integration configuration files and scripts. |\n| [`ocp-ci`](ci/openshift-ci/README.md) | CI | Continuous Integration configuration for the OpenShift pipelines. |\n| [`katacontainers.io`](https://github.com/kata-containers/www.katacontainers.io) | Source for the [`katacontainers.io`](https://www.katacontainers.io) site. |\n| [`Webhook`](tools/testing/kata-webhook/README.md) | utility | Example of a simple admission controller webhook to annotate pods with the Kata runtime class |\n\n### Packaging and releases\n\nKata Containers is now\n[available natively for most distributions](docs/install/README.md#packaged-installation-methods).\n\n## General tests\n\nSee the [tests documentation](tests/README.md).\n\n## Metrics tests\n\nSee the [metrics documentation](tests/metrics/README.md).\n\n## Glossary of Terms\n\nSee the [glossary of terms](https://github.com/kata-containers/kata-containers/wiki/Glossary) related to Kata Containers.\n"
        },
        {
          "name": "VERSION",
          "type": "blob",
          "size": 0.0068359375,
          "content": "3.12.0\n"
        },
        {
          "name": "ci",
          "type": "tree",
          "content": null
        },
        {
          "name": "deny.toml",
          "type": "blob",
          "size": 0.7158203125,
          "content": "targets = [\n    { triple = \"x86_64-apple-darwin\" },\n    { triple = \"x86_64-unknown-linux-gnu\" },\n    { triple = \"x86_64-unknown-linux-musl\" },\n]\n\n[advisories]\nvulnerability = \"deny\"\nunsound = \"deny\"\nunmaintained = \"deny\"\nignore = [\"RUSTSEC-2020-0071\"]\n\n[bans]\nmultiple-versions = \"allow\"\ndeny = [\n    { name = \"cmake\" },\n    { name = \"openssl-sys\" },\n]\n\n[licenses]\nunlicensed = \"deny\"\nallow-osi-fsf-free = \"neither\"\ncopyleft = \"allow\"\n# We want really high confidence when inferring licenses from text\nconfidence-threshold = 0.93\nallow = [\"0BSD\", \"Apache-2.0\", \"BSD-2-Clause\", \"BSD-3-Clause\", \"CC0-1.0\", \"ISC\", \"MIT\", \"MPL-2.0\"]\nprivate = { ignore = true}\n\nexceptions = []\n\n[sources]\nunknown-registry = \"allow\"\nunknown-git = \"allow\"\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "utils.mk",
          "type": "blob",
          "size": 4.2958984375,
          "content": "# Copyright (c) 2020 Intel Corporation\n#\n# SPDX-License-Identifier: Apache-2.0\n#\n\n# Note:\n#\n# Since this file defines rules, it should be included\n# in other makefiles *after* their default rule has been defined.\n\n# Owner for installed files\nexport KATA_INSTALL_OWNER     ?= root\n\n# Group for installed files\nexport KATA_INSTALL_GROUP     ?= adm\n\n# Permissions for installed configuration files.\n#\n# XXX: Note that the permissions MUST be zero for \"other\"\n# XXX: in case the configuration file contains secrets.\nexport KATA_INSTALL_CFG_PERMS ?= 0640\n\n# Create a set of standard rules for a project such that:\n#\n# - The component depends on its Makefile.\n# - \"build-$(component)\" is an alias for \"$(component)\".\n#\n# Parameters:\n#\n# $1 - Directory component lives in.\n# $2 - Name of component.\n#\n# Note: The \"clean\" and \"vendor\" rules are the \"odd one out\" - they only\n# depend on the Makefile. This ensure that running them won't first try\n# to build the project.\n\ndefine make_rules\n$(2) : $(1)/$(2)/Makefile\n\tmake -C $(1)/$(2)\nbuild-$(2) : $(2)\n\nstatic-checks-build-$(2):\n\tmake -C $(1)/$(2) static-checks-build\n\ncheck-$(2) : $(2)\n\tmake -C $(1)/$(2) check\n\nvendor-$(2) : $(1)/$(2)/Makefile\n\tmake -C $(1)/$(2) vendor\n\nclean-$(2) : $(1)/$(2)/Makefile\n\tmake -C $(1)/$(2) clean\n\ninstall-$(2) : $(2)\n\tmake -C $(1)/$(2) install\n\ntest-$(2) : $(2)\n\tmake -C $(1)/$(2) test\n\n.PHONY: \\\n    $(2) \\\n    build-$(2) \\\n    clean-$(2) \\\n    check-$(2) \\\n    vendor-$(2) \\\n    test-$(2) \\\n    install-$(2)\nendef\n\n# Define a set of rules for a source component.\n#\n# Parameters:\n#\n# $1 - Name of component.\n\ndefine make_component_rules\n$(eval $(call make_rules,src,$(1)))\nendef\n\n# Define a set of rules for a tool.\n#\n# Parameters:\n#\n# $1 - name of tool\n\ndefine make_tool_rules\n$(eval $(call make_rules,src/tools,$(1)))\nendef\n\n# Create a \"${target}-all\" alias which will cause each component/tool\n# rule to be called.\n#\n# Parameters:\n#\n# $1 - List of targets to create rules for.\n\ndefine make_all_rules\n$(1)-all: $(foreach c,$(COMPONENTS) $(TOOLS),$(1)-$(c))\n\n.PHONY: $(1) $(1)-all\nendef\n\n# Create all rules for the caller.\n#\n# Entry point to this file.\n#\n# Parameters:\n#\n# $1 - List of components.\n# $2 - List of tools.\n# $3 - List of standard targets.\ndefine create_all_rules\n\nall: $(1) $(2)\n\n# Create rules for all components.\n$(foreach c,$(1),$(eval $(call make_component_rules,$(c))))\n\n# Create rules for all tools.\n$(foreach c,$(2),$(eval $(call make_tool_rules,$(c))))\n\n# Create the \"-all\" rules.\n$(foreach a,$(3),$(eval $(call make_all_rules,$(a))))\n\n# Support \"make ${target}\"\n# (which is an alias for \"make ${target}-all\").\n$(3) : % : %-all\n\nendef\n\n\n##VAR BUILD_TYPE=release|debug type of rust build\nBUILD_TYPE ?= release\n\n##VAR ARCH=arch target to build (format: uname -m)\nHOST_ARCH = $(shell uname -m)\nARCH ?= $(HOST_ARCH)\n##VAR LIBC=musl|gnu\nLIBC ?= musl\nifneq ($(LIBC),musl)\n    ifeq ($(LIBC),gnu)\n        override LIBC = gnu\n    else\n        $(error \"ERROR: A non supported LIBC value was passed. Supported values are musl and gnu\")\n    endif\nendif\n\nifeq ($(ARCH), ppc64le)\n    override LIBC = gnu\n    $(warning \"WARNING: powerpc64le-unknown-linux-musl target is unavailable\")\nendif\n\nifeq ($(ARCH), s390x)\n    override LIBC = gnu\n    $(warning \"WARNING: s390x-unknown-linux-musl target is unavailable\")\nendif\n\n\nEXTRA_RUSTFLAGS :=\n\nifneq ($(HOST_ARCH),$(ARCH))\n    ifeq ($(CC),)\n         CC = gcc\n         $(warning \"WARNING: A foreign ARCH was passed, but no CC alternative. Using gcc.\")\n    endif\n    override EXTRA_RUSTFLAGS += -C linker=$(CC)\n    undefine CC\nendif\n\nTRIPLE = $(ARCH)-unknown-linux-$(LIBC)\n\nCWD := $(shell dirname $(realpath $(firstword $(MAKEFILE_LIST))))\n\nstandard_rust_check:\n\t@echo \"standard rust check...\"\n\tcargo fmt -- --check\n\tcargo clippy --all-targets --all-features --release \\\n\t\t-- \\\n\t\t-D warnings\n\n# Install a file (full version).\n#\n# params:\n#\n# $1 : File to install.\n# $2 : Directory path where file will be installed.\n# $3 : Permissions to apply to the installed file.\ndefine INSTALL_FILE_FULL\n    sudo install \\\n        --mode $3 \\\n        --owner $(KATA_INSTALL_OWNER) \\\n        --group $(KATA_INSTALL_GROUP) \\\n        -D $1 $2/$(notdir $1) || exit 1;\nendef\n\n# Install a configuration file.\n#\n# params:\n#\n# $1 : File to install.\n# $2 : Directory path where file will be installed.\ndefine INSTALL_CONFIG\n    $(call INSTALL_FILE_FULL,$1,$2,$(KATA_INSTALL_CFG_PERMS))\nendef\n"
        },
        {
          "name": "utils",
          "type": "tree",
          "content": null
        },
        {
          "name": "versions.yaml",
          "type": "blob",
          "size": 13.6025390625,
          "content": "#\n# Copyright (c) 2018-2023 Intel Corporation\n#\n# SPDX-License-Identifier: Apache-2.0\n#\n\n---\ndescription: |\n  This file contains version details that are used by various\n  repositories for setting up the correct environment to run\n  tests and package components.\n\nformat: |\n  Each entry in this file MUST conform to the following format:\n\n  <group>:\n   description: \"<brief-description>\"\n   notes: \"<notes>\"\n\n   <project>:\n     description: \"<brief-description>\"\n     notes: \"<notes>\"\n     url: \"<project-url>\"\n     issue: \"<bug-url>\"\n     commit: \"<commit>\"\n     version: \"<version>\"\n     uscan-opts: \"<optional uscan options>\"\n     uscan-url: \"<url regex for uscan to list versions>\"\n     release: \"<version>\"\n     branch: \"<git-branch>\"\n     meta:\n       <key-1>: \"<value-1>\"\n       <key-n>: \"<value-n>\"\n\n  Notes:\n\n  - All sections (except \"meta\") MUST include a description where\n    applicable. This is expected to be a brief summary.\n\n  - A section MAY specify a \"notes\" section which may be multi-line.\n    It is expected to be expand on the information specified in\n    \"description\".\n\n  - All sections (except \"meta\") MUST include a URL where applicable.\n\n  - A section MAY specify a bug URL using the \"issue\" field.\n\n  - A section MAY define a \"meta\" section to store additional\n    information about a project or group.\n\n  - Each entry MUST specify ATLEAST one of \"commit\", \"version\", \"release\"\n    and \"branch\".\n\n  - WARNING: Gotcha alert! Remember to double-quote all strings\n    (except multi-line strings)! This avoids the possibility of a\n    version containing a period being treated as a floating point\n    number (and truncated!)\n\n  - NOTE: For the uscan related entries, refer to the following uscan pages:\n    https://manpages.debian.org/stretch/devscripts/uscan.1.en.html\n    https://wiki.debian.org/debian/watch\n    Particularly note the 'Common mistakes' section.\n    Also note, if you place the uscan strings on single lines in this file then\n    '\\'s need to be '\\'d, so are replaced with '\\\\', but this does not apply\n    for '>-' multi line entries, which can then use the normal uscan syntax.\n\nassets:\n  description: \"Additional required system elements\"\n\n  hypervisor:\n    description: \"Component used to create virtual machines\"\n\n    cloud_hypervisor:\n      description: \"Cloud Hypervisor is an open source Virtual Machine Monitor\"\n      url: \"https://github.com/cloud-hypervisor/cloud-hypervisor\"\n      uscan-url: >-\n        https://github.com/cloud-hypervisor/cloud-hypervisor/tags.*/v?(\\d\\S+)\\.tar\\.gz\n      version: \"v41.0\"\n\n    firecracker:\n      description: \"Firecracker micro-VMM\"\n      url: \"https://github.com/firecracker-microvm/firecracker\"\n      uscan-url: >-\n        https://github.com/firecracker-microvm/firecracker/tags\n        .*/v?(\\d\\S+)\\.tar\\.gz\n      version: \"v1.8.0\"\n\n    qemu:\n      description: \"VMM that uses KVM\"\n      url: \"https://github.com/qemu/qemu\"\n      version: \"v9.1.2\"\n      tag: \"v9.1.2\"\n      # Do not include any non-full release versions\n      # Break the line *without CR or space being appended*, to appease\n      # yamllint, and note the deliberate ' ' at the end of the expression.\n      uscan-opts: \"opts=uversionmangle=s/(\\\\d)[_\\\\.\\\\-\\\\+]?\\\n        ((RC|rc|pre|dev|beta|alpha)\\\\d*)$/$1~$2/ \"\n      uscan-url: >-\n        https://github.com/qemu/qemu/tags\n        .*/v?(\\d\\S+)\\.tar\\.gz\n\n    qemu-snp-experimental:\n      description: \"QEMU with SNP support\"\n      url: \"https://github.com/confidential-containers/qemu.git\"\n      tag: \"amd-snp-202402240000\"\n\n    stratovirt:\n      description: \"StratoVirt is an lightweight opensource VMM\"\n      url: \"https://github.com/openeuler-mirror/stratovirt\"\n      version: \"v2.3.0\"\n\n  image:\n    description: |\n      Root filesystem disk image used to boot the guest virtual\n      machine.\n    url: \"https://github.com/kata-containers/kata-containers/tools/osbuilder\"\n    architecture:\n      aarch64:\n        name: &default-image-name \"ubuntu\"\n        version: &default-image-version \"latest\"\n        nvidia-gpu:\n          name: *default-image-name\n          version: \"jammy\"\n        nvidia-gpu-confidential:\n          name: *default-image-name\n          version: \"jammy\"\n      ppc64le:\n        name: *default-image-name\n        version: *default-image-version\n      s390x:\n        name: *default-image-name\n        version: *default-image-version\n        confidential:\n          name: *default-image-name\n          version: *default-image-version\n      x86_64:\n        name: *default-image-name\n        version: *default-image-version\n        confidential:\n          name: *default-image-name\n          version: *default-image-version\n        mariner:\n          name: \"cbl-mariner\"\n          version: \"2.0\"\n        nvidia-gpu:\n          name: *default-image-name\n          version: \"jammy\"\n        nvidia-gpu-confidential:\n          name: *default-image-name\n          version: \"jammy\"\n\n    meta:\n      image-type: *default-image-name\n\n  initrd:\n    description: |\n      Root filesystem initrd used to boot the guest virtual\n      machine.\n    url: \"https://github.com/kata-containers/kata-containers/tools/osbuilder\"\n    architecture:\n      aarch64:\n        name: &default-initrd-name \"alpine\"\n        version: &default-initrd-version \"3.18\"\n        nvidia-gpu:\n          name: \"ubuntu\"\n          version: \"jammy\"\n        nvidia-gpu-confidential:\n          name: \"ubuntu\"\n          version: \"jammy\"\n      # Do not use Alpine on ppc64le & s390x, the agent cannot use musl because\n      # there is no such Rust target\n      ppc64le:\n        name: &glibc-initrd-name \"ubuntu\"\n        version: &glibc-initrd-version \"20.04\"\n      s390x:\n        name: *glibc-initrd-name\n        version: *glibc-initrd-version\n        confidential:\n          name: *glibc-initrd-name\n          version: *glibc-initrd-version\n      x86_64:\n        name: *default-initrd-name\n        version: *default-initrd-version\n        confidential:\n          name: *glibc-initrd-name\n          version: *glibc-initrd-version\n        nvidia-gpu:\n          name: *glibc-initrd-name\n          version: \"jammy\"\n        nvidia-gpu-confidential:\n          name: *glibc-initrd-name\n          version: \"jammy\"\n\n  kernel:\n    description: \"Linux kernel optimised for virtual machines\"\n    url: \"https://cdn.kernel.org/pub/linux/kernel/v6.x/\"\n    version: \"v6.12.8\"\n    confidential:\n      description: \"Linux kernel with x86_64 TEEs (SEV, SNP, and TDX) support\"\n      url: \"https://cdn.kernel.org/pub/linux/kernel/v6.x/\"\n      version: \"v6.12.8\"\n\n  kernel-arm-experimental:\n    description: \"Linux kernel with cpu/mem hotplug support on arm64\"\n    url: \"https://cdn.kernel.org/pub/linux/kernel/v5.x/\"\n    version: \"v5.15.138\"\n\n  kernel-dragonball-experimental:\n    description: \"Linux kernel with Dragonball VMM optimizations like upcall\"\n    url: \"https://cdn.kernel.org/pub/linux/kernel/v6.x/\"\n    version: \"v6.1.62\"\n\nexternals:\n  description: \"Third-party projects used by the system\"\n\n  busybox:\n    desc: \"The Swiss Army Knife of Embedded Linux\"\n    version: \"1.36.1\"\n    url: \"https://busybox.net/downloads\"\n\n  helm:\n    description: \"Kubernetes package manager\"\n    url: \"https://get.helm.sh/\"\n    version: \"v3.15.2\"\n\n  cni-plugins:\n    description: \"CNI network plugins\"\n    url: \"https://github.com/containernetworking/plugins\"\n    version: \"v1.2.0\"\n\n  coco-guest-components:\n    description: \"Provides attested key unwrapping for image decryption\"\n    url: \"https://github.com/confidential-containers/guest-components/\"\n    version: \"3df6c412059f29127715c3fdbac9fa41f56cfce4\"\n    toolchain: \"1.80.0\"\n\n  coco-trustee:\n    description: \"Provides attestation and secret delivery components\"\n    url: \"https://github.com/confidential-containers/trustee\"\n    version: \"cc5738439964cd2bd0d11bb935b4f68e01b14cd7\"\n    # image / ita_image and image_tag / ita_image_tag must be in sync\n    image: \"ghcr.io/confidential-containers/staged-images/kbs\"\n    image_tag: \"cc5738439964cd2bd0d11bb935b4f68e01b14cd7\"\n    ita_image: \"ghcr.io/confidential-containers/staged-images/kbs-ita-as\"\n    ita_image_tag: \"cc5738439964cd2bd0d11bb935b4f68e01b14cd7-x86_64\"\n    toolchain: \"1.76.0\"\n\n  crio:\n    description: |\n      OCI-based Kubernetes Container Runtime Interface implementation\n    url: \"https://github.com/cri-o/cri-o\"\n    branch: \"release-1.23\"\n\n  containerd:\n    description: |\n      Containerd for Kubernetes Container Runtime Interface.\n    url: \"github.com/containerd/containerd\"\n    tarball_url: \"https://github.com/containerd/containerd/releases/download\"\n    # containerd from v1.5.0 used the path unix socket\n    # instead of abstract socket, thus kata wouldn's support the containerd's\n    # version older than them.\n    version: \"v1.6.8\"\n    lts: \"v1.6\"\n    active: \"v1.7\"\n\n  critools:\n    description: \"CLI tool for Container Runtime Interface (CRI)\"\n    url: \"https://github.com/kubernetes-sigs/cri-tools\"\n    version: \"1.23.0\"\n    # As we don't want to disrupt what we have on the `tests` repo, let's\n    # create a \"latest\" entry and use that for the GitHub actions tests.\n    latest: \"v1.29\"\n\n  runc:\n    description: \"CLI tool for spawning and running containers\"\n    url: \"https://github.com/opencontainers/runc\"\n    latest: \"v1.2\"\n\n  cryptsetup:\n    description: \"A utility used to setup disk encryption, integrity protection\"\n    url: \"https://gitlab.com/cryptsetup/cryptsetup\"\n    version: \"v2.5.0\"\n\n  gperf:\n    description: \"GNU gperf is a perfect hash function generator\"\n    url: \"http://ftp.gnu.org/pub/gnu/gperf/\"\n    version: \"3.1\"\n\n  hadolint:\n    description: \"the dockerfile linter used by static-checks\"\n    url: \"https://github.com/hadolint/hadolint\"\n    version: \"2.12.0\"\n\n  lvm2:\n    description: \"LVM2 and device-mapper tools and libraries\"\n    url: \"https://github.com/lvmteam/lvm2\"\n    version: \"v2_03_16\"\n\n  kubernetes:\n    description: \"Kubernetes project container manager\"\n    url: \"https://github.com/kubernetes/kubernetes\"\n    # regexp formed to match 'd.tar.gz', deliberately to not match any alpha or\n    # beta type releases\n    uscan-url: >-\n      https://github.com/kubernetes/kubernetes/tags\n      .*/v?([\\d\\.]+)\\.tar\\.gz\n    version: \"1.23.1-00\"\n\n  kustomize:\n    description: \"Kubernetes native configuration management\"\n    url: \"https://github.com/kubernetes-sigs/kustomize\"\n    version: \"v5.3.0\"\n    checksum:\n      amd64: \"3ab32f92360d752a2a53e56be073b649abc1e7351b912c0fb32b960d1def854c\"\n      arm64: \"a1ec622d4adeb483e3cdabd70f0d66058b1e4bcec013c4f74f370666e1e045d8\"\n      # yamllint disable-line rule:line-length\n      ppc64le: \"946b1aa9325e7234157881fe2098e59c05c6834e56205bf6ec0a9a5fc83c9cc4\"\n      s390x: \"0b1a00f0e33efa2ecaa6cda9eeb63141ddccf97a912425974d6b65e66cf96cd4\"\n\n  libseccomp:\n    description: \"High level interface to Linux seccomp filter\"\n    url: \"https://github.com/seccomp/libseccomp\"\n    version: \"2.5.5\"\n\n  pause:\n    description: \"Kubernetes pause container image\"\n    repo: \"docker://registry.k8s.io/pause\"\n    version: \"3.9\"\n\n  nydus:\n    description: \"Nydus image acceleration service\"\n    url: \"https://github.com/dragonflyoss/image-service\"\n    version: \"v2.2.3\"\n\n  nydus-snapshotter:\n    description: \"Snapshotter for Nydus image acceleration service\"\n    url: \"https://github.com/containerd/nydus-snapshotter\"\n    version: \"v0.13.14\"\n\n  ovmf:\n    description: \"Firmware, implementation of UEFI for virtual machines.\"\n    url: \"https://github.com/tianocore/edk2\"\n    x86_64:\n      description: \"Vanilla firmware build\"\n      version: \"edk2-stable202402\"\n      package: \"OvmfPkg/OvmfPkgX64.dsc\"\n      package_output_dir: \"OvmfX64\"\n    sev:\n      description: \"AmdSev build needed for SEV measured direct boot.\"\n      version: \"edk2-stable202402\"\n      package: \"OvmfPkg/AmdSev/AmdSevX64.dsc\"\n      package_output_dir: \"AmdSev\"\n\n  virtiofsd:\n    description: \"vhost-user virtio-fs device backend written in Rust\"\n    url: \"https://gitlab.com/virtio-fs/virtiofsd\"\n    # v1.13.0 + seccomp patch allowing the tkill syscall\n    version: \"cecc61bca981ab42aae6ec490dfd59965e79025e\"\n    toolchain: \"1.83.0\"\n\n  xurls:\n    description: |\n      Tool used by the CI to check URLs in documents and code comments.\n    url: \"mvdan.cc/xurls/v2/cmd/xurls\"\n    version: \"v2.5.0\"\n\nlanguages:\n  description: |\n    Details of programming languages required to build system\n    components.\n\n  golang:\n    description: \"Google's 'go' language\"\n    notes: \"'version' is the default minimum version used by this project.\"\n    version: \"1.22.2\"\n    meta:\n      description: |\n        'newest-version' is the latest version known to work when\n        building Kata\n      newest-version: \"1.22.2\"\n\n  rust:\n    description: \"Rust language\"\n    notes: \"'version' is the default minimum version used by this project.\"\n    version: \"1.75.0\"\n    meta:\n      description: |\n        'newest-version' is the latest version known to work when\n        building Kata\n      newest-version: \"1.75.0\"\n\n  golangci-lint:\n    description: \"golangci-lint\"\n    notes: \"'version' is the default minimum version used by this project.\"\n    url: \"github.com/golangci/golangci-lint\"\n    version: \"1.57.2\"\n    meta:\n      description: |\n        'newest-version' is the latest version known to work when\n        building Kata\n      newest-version: \"1.57.2\"\n\nplugins:\n  description: |\n    Details of plugins required for the components or testing.\n\n  sriov-network-device:\n    description: |\n      The SR-IOV network device plugin is Kubernetes device plugin for\n      discovering and advertising SR-IOV virtual functions (VFs)\n      available on a Kubernetes host.\n    url: \"https://github.com/k8snetworkplumbingwg/sriov-network-device-plugin\"\n    version: \"b7f6d3e0679796e907ecca88cfab0e32e326850d\"\n\ndocker_images:\n  description: \"Docker hub images used for testing\"\n\n  nginx:\n    description: \"Proxy server for HTTP, HTTPS, SMTP, POP3 and IMAP protocols\"\n    url: \"https://hub.docker.com/_/nginx/\"\n    version: \"1.15-alpine\"\n"
        }
      ]
    }
  ]
}