{
  "metadata": {
    "timestamp": 1736709355322,
    "page": 45,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjUw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "EmbarkStudios/rust-gpu",
      "stars": 7385,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".cargo",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.1337890625,
          "content": "# configure GitHub linguist (language bar) https://github.com/github/linguist#overrides\ndocs/* linguist-documentation\n* text=auto eol=lf\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0771484375,
          "content": "target/\n.vscode/\n.vim/\ntests/Cargo.lock\n.github/install-spirv-tools/Cargo.lock\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 29.388671875,
          "content": "# `rust-gpu` Changelog\n\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n\n<!-- NOTE(eddyb) sections from the original template:\n\n### Added ⭐\n- New features go here in a bullet list\n\n### Changed 🛠\n- Changes to existing functionality go here in a bullet list\n\n### Deprecated 🚧\n- Mark features soon-to-be removed in a bullet list\n\n### Removed 🔥\n- Features that have been removed in a bullet list\n\n### Fixed 🩹\n- Bug fixes in a bullet list\n\n### Security 🔐\n- Changes/fixes related to security vulnerabilities in a bullet list\n\n-->\n\n## [Unreleased]\n\n### Changed 🛠\n- [PR#1127](https://github.com/EmbarkStudios/rust-gpu/pull/1127) updated `spirv-tools` to `0.10.0`, which follows `vulkan-sdk-1.3.275`\n- [PR#1101](https://github.com/EmbarkStudios/rust-gpu/pull/1101) added `ignore` and `no_run` to documentation to make `cargo test` pass\n- [PR#1112](https://github.com/EmbarkStudios/rust-gpu/pull/1112) updated wgpu and winit in example runners\n- [PR#1100](https://github.com/EmbarkStudios/rust-gpu/pull/1100) updated toolchain to `nightly-2023-09-30`\n- [PR#1091](https://github.com/EmbarkStudios/rust-gpu/pull/1091) updated toolchain to `nightly-2023-08-29`\n- [PR#1085](https://github.com/EmbarkStudios/rust-gpu/pull/1085) updated toolchain to `nightly-2023-07-08`\n- [PR#1115](https://github.com/EmbarkStudios/rust-gpu/pull/1115) relaxed `glam` version requirements (from `>=0.22, <=0.24` to `>=0.22, <=0.25`)\n\n### Fixed 🩹\n- [PR#1129](https://github.com/EmbarkStudios/rust-gpu/pull/1129) fixed [#1062](https://github.com/EmbarkStudios/rust-gpu/issues/1062) by not flipping the comparison of the rotate amount with zero\n\n## [0.9.0]\n\n### Added ⭐\n- [PR#1082](https://github.com/EmbarkStudios/rust-gpu/pull/1082) added partial\n  support for extracting `format_args!` from `panic!`s, and converting them to\n  `debugPrintf` calls (if enabled via `ShaderPanicStrategy`), including runtime\n  arguments (`u32`/`i32`/`f32` with `Display`/`Debug` formatting, for now)\n- [PR#1081](https://github.com/EmbarkStudios/rust-gpu/pull/1081) added the ability\n  to access SPIR-V specialization constants (`OpSpecConstant`) via entry-point\n  inputs declared as `#[spirv(spec_constant(id = ..., default = ...))] x: u32`  \n  (see also [the `#[spirv(spec_constant)]` attribute documentation](docs/src/attributes.md#specialization-constants))\n- [PR#1036](https://github.com/EmbarkStudios/rust-gpu/pull/1036) added a `--force-spirv-passthru` flag to `example-runner-wgpu`, to bypass Naga (`wgpu`'s shader translator),\n  used it to test `debugPrintf` for `wgpu`,  and updated `ShaderPanicStrategy::DebugPrintfThenExit` docs to reflect what \"enabling `debugPrintf`\" looks like for `wgpu`  \n  <sub><sup>(e.g. `VK_LOADER_LAYERS_ENABLE=VK_LAYER_KHRONOS_validation VK_LAYER_ENABLES=VK_VALIDATION_FEATURE_ENABLE_DEBUG_PRINTF_EXT DEBUG_PRINTF_TO_STDOUT=1`)</sup></sub>\n- [PR#1080](https://github.com/EmbarkStudios/rust-gpu/pull/1080) added `debugPrintf`-based\n  panic reporting, with the desired behavior selected via `spirv_builder::ShaderPanicStrategy`  \n  (see its documentation for more details about each available panic handling strategy)\n\n### Changed 🛠\n- [PR#1083](https://github.com/EmbarkStudios/rust-gpu/pull/1083) updated SPIR-T to get pretty-printer\n  improvements (especially for `OpExtInst`, including Rust-GPU's custom ones), and started more\n  aggressively deduplicating custom debuginfo instructions (to make SPIR-T dumps more readable)\n- [PR#1079](https://github.com/EmbarkStudios/rust-gpu/pull/1079) revised `spirv-builder`'s `README.md`,\n  and added a way for `docs.rs` to be able to build it (via `cargo +stable doc --no-default-features`)\n- [PR#1070](https://github.com/EmbarkStudios/rust-gpu/pull/1070) made panics (via the `abort` intrinsic)\n  early-exit (i.e. `return` from) the shader entry-point, instead of looping infinitely\n- [PR#1071](https://github.com/EmbarkStudios/rust-gpu/pull/1071) updated toolchain to `nightly-2023-05-27`\n\n## [0.8.0]\n\n### Added ⭐\n- [PR#1064](https://github.com/EmbarkStudios/rust-gpu/pull/1064) added a Rust-GPU-private\n  \"extended instruction set\" (to allow us to have custom `OpExtInst`s), with the\n  initial custom `OpExtInst`s being used to improve debuginfo source locations\n  (using ranges instead of just the starting position, and tracking inlined calls)\n\n### Changed 🛠\n- [PR#1067](https://github.com/EmbarkStudios/rust-gpu/pull/1067) updated toolchain to `nightly-2023-04-15`\n- [PR#1038](https://github.com/EmbarkStudios/rust-gpu/pull/1038) relaxed `glam` version requirements (from only `0.22`, to `>=0.22, <=0.24`)\n\n### Removed 🔥\n- [PR#1052](https://github.com/EmbarkStudios/rust-gpu/pull/1052) removed `--no-spirt`,\n  committing to SPIR-T as a mandatory part of the Rust-GPU compiler backend,\n  to reduce the cost of maintenance, testing and further feature development  \n  * Note: if you were using `--no-spirt` to work around [`naga` issue #1977](https://github.com/gfx-rs/naga/issues/1977)  \n    (valid loops causing `The 'break' is used outside of a 'loop' or 'switch' context`),  \n    you may be able to `cargo update -p naga` to update to a fixed `naga` version  \n    (`0.11.1` for `wgpu 0.15`, `0.12.1` for `wgpu 0.16`, and any later versions)\n\n### Fixed 🩹\n- [PR#1059](https://github.com/EmbarkStudios/rust-gpu/pull/1059) fixed the `inline` pass not copying `OpDecorate`s in the callee (which led to their loss).\n\n## [0.7.0]\n\n### Added ⭐\n- [PR#1020](https://github.com/EmbarkStudios/rust-gpu/pull/1020) added SPIR-T `qptr`\n  support in the form of `--spirt-passes=qptr`, a way to turn off \"Storage Class inference\",\n  and reporting for SPIR-T diagnostics - to test `qptr` fully, you can use:  \n  `RUSTGPU_CODEGEN_ARGS=\"--no-infer-storage-classes --spirt-passes=qptr\"`  \n  (see also [the SPIR-T `qptr` PR](https://github.com/EmbarkStudios/spirt/pull/24) for more details about the `qptr` experiment)\n- [PR#1039](https://github.com/EmbarkStudios/rust-gpu/pull/1039) added new experimental `sample_with` to `Image` API to set additional image operands\n- [PR#1031](https://github.com/EmbarkStudios/rust-gpu/pull/1031) added `Components` generic parameter to `Image` type, allowing images to return lower dimensional vectors and even scalars from the sampling API\n\n### Changed 🛠\n- [PR#1040](https://github.com/EmbarkStudios/rust-gpu/pull/1040) refactored \"zombie\" (delayed error) reporting to use SPIR-V `OpSource`, be more helpful, and added `--no-early-report-zombies` to delay it even further  \n  (see also [the `--no-early-report-zombies` codegen args docs](docs/src/codegen-args.md#--no-early-report-zombies))\n- [PR#1035](https://github.com/EmbarkStudios/rust-gpu/pull/1035) reduced the number of CGUs (\"codegen units\") used by `spirv-builder` to just `1`\n- [PR#1011](https://github.com/EmbarkStudios/rust-gpu/pull/1011) made `NonWritable` all read-only storage buffers (i.e. those typed `&T`, where `T` doesn't have interior mutability)\n- [PR#1029](https://github.com/EmbarkStudios/rust-gpu/pull/1029) fixed `SampledImage::sample` `fn`s being unnecessarily marked as `unsafe`\n- [PR#1005](https://github.com/EmbarkStudios/rust-gpu/pull/1005) updated toolchain to `nightly-2023-03-04`\n\n### Fixed 🩹\n- [PR#1041](https://github.com/EmbarkStudios/rust-gpu/pull/1041) fixed `Image::gather()` not always returning a `Vec4`.\n- [PR#1025](https://github.com/EmbarkStudios/rust-gpu/pull/1025) fixed [#1024](https://github.com/EmbarkStudios/rust-gpu/issues/1024) by keeping checked arithmetic \"zombie\" `bool`s disjoint from normal `bool` (`false`) consts\n- [PR#1023](https://github.com/EmbarkStudios/rust-gpu/pull/1023) fixed [#1021](https://github.com/EmbarkStudios/rust-gpu/issues/1021) by always inlining calls with \"not obviously legal\" pointer args (instead of only inlining calls with \"obviously illegal\" pointer args)\n- [PR#1009](https://github.com/EmbarkStudios/rust-gpu/pull/1009) fixed [#1008](https://github.com/EmbarkStudios/rust-gpu/issues/1008) by reinstating mutability checks for entry-point parameters pointing into read-only storage classes (e.g. `#[spirv(uniform)] x: &mut u32` is now again an error)\n- [PR#995](https://github.com/EmbarkStudios/rust-gpu/pull/995) fixed [#994](https://github.com/EmbarkStudios/rust-gpu/issues/994) by using `OpAtomicFAddEXT` instead of `OpAtomicFMaxEXT` in `atomic_f_add`\n\n## [0.6.1]\n\n### Fixed 🩹\n- [PR#1006](https://github.com/EmbarkStudios/rust-gpu/pull/1006) fixed [#1002](https://github.com/EmbarkStudios/rust-gpu/issues/1002) by rewriting away all `spirv-std` uses of `asm!(\"OpReturnValue %result\")` and disallowing `OpReturn`/`OpReturnValue` from inline `asm!` (as it's always UB to leave `asm!` blocks in any way other than falling through their end)\n\n## [0.6.0]\n\n### Added ⭐\n- [PR#998](https://github.com/EmbarkStudios/rust-gpu/pull/998) added `extra_arg()` SpirvBuilder API to be able to set codegen args otherwise not supported by the API (for example, to set `--spirv-passes`)\n\n### Changed 🛠\n- [PR#999](https://github.com/EmbarkStudios/rust-gpu/pull/999) made the [`SPIR-🇹` shader IR framework](https://github.com/EmbarkStudios/spirt) the default (you can opt out via `RUSTGPU_CODEGEN_ARGS=--no-spirt`)\n- [PR#992](https://github.com/EmbarkStudios/rust-gpu/pull/992) renamed `rust-toolchain` to `rust-toolchain.toml`\n- [PR#991](https://github.com/EmbarkStudios/rust-gpu/pull/991) updated toolchain to `nightly-2023-01-21`\n- [PR#990](https://github.com/EmbarkStudios/rust-gpu/pull/990) removed return type inference from `Image` API and made `glam` usage mandatory\n\n## [0.5.0]\n\n### Added ⭐\n- [PR#988](https://github.com/EmbarkStudios/rust-gpu/pull/988) added a couple of (highly experimental)\n  `SPIR-🇹` optimization passes, and `--spirt-passes=...` codegen args as a way to enable them  \n  (see also [the `--spirt-passes` codegen args docs](docs/src/codegen-args.md#--spirt-passes-PASSES))\n\n### Changed 🛠️\n- [PR#982](https://github.com/EmbarkStudios/rust-gpu/pull/982) updated toolchain to `nightly-2022-12-18`\n- [PR#953](https://github.com/EmbarkStudios/rust-gpu/pull/953) migrated to the Rust 2021 edition, and fixed Rust 2021 support for shader crates to be on par with Rust 2018 (discrepancies having been limited to/caused by `panic!` changes in Rust 2021)\n\n## [0.4.0]\n\n### Added ⭐\n- [PR#959](https://github.com/EmbarkStudios/rust-gpu/pull/959) added two `spirv-builder` environment variables to customize *only* the `rustc` invocations for shader crates and their dependencies:\n  - `RUSTGPU_RUSTFLAGS=\"...\"` for shader `RUSTFLAGS=\"...\"`\n  - `RUSTGPU_CODEGEN_ARGS=\"...\"` for shader \"codegen args\" (i.e. `RUSTFLAGS=-Cllvm-args=\"...\"`)  \n    (check out [the \"codegen args\" docs](docs/src/codegen-args.md), or run with `RUSTGPU_CODEGEN_ARGS=--help` to see the full list of options)\n- [PR#940](https://github.com/EmbarkStudios/rust-gpu/pull/940) integrated the experimental [`SPIR-🇹` shader IR framework](https://github.com/EmbarkStudios/spirt) into the linker  \n  (opt-in via `RUSTGPU_CODEGEN_ARGS=--spirt`, see also [the `--spirt` docs](docs/src/codegen-args.md#--spirt), for more details)\n\n### Changed 🛠️\n- [PR#958](https://github.com/EmbarkStudios/rust-gpu/pull/958) updated toolchain to `nightly-2022-10-29`\n- [PR#941](https://github.com/EmbarkStudios/rust-gpu/pull/941) applied workspace inheritance to `Cargo.toml` files\n- [PR#959](https://github.com/EmbarkStudios/rust-gpu/pull/959) moved `rustc_codegen_spirv` debugging functionality from environment variables to \"codegen args\" options/flags (see [the updated docs](docs/src/codegen-args.md) for more details)\n- [PR#967](https://github.com/EmbarkStudios/rust-gpu/pull/967) made `--dump-*` [\"codegen args\"](docs/src/codegen-args.md) include identifying information (e.g. crate names) in the names of files they emit\n\n### Removed 🔥\n- [PR#946](https://github.com/EmbarkStudios/rust-gpu/pull/946) removed the `fn`/closure `#[spirv(unroll_loops)]` attribute, as it has no users, is becoming non-trivial to support, and requires redesign for better ergonomics (e.g. `#[spirv(unroll)]` applied to individual loops, not the whole `fn`/closure)\n\n## [0.4.0-alpha.17]\n\n### Fixed 🩹\n- [PR#937](https://github.com/EmbarkStudios/rust-gpu/pull/937) fixed Rust-GPU crates not referring to each-other by exact version\n- [PR#937](https://github.com/EmbarkStudios/rust-gpu/pull/937) fixed `spirv-std` referring to an older version of `spirv-std-macros`\n\n## [0.4.0-alpha.16]\n\n### Added ⭐\n- [PR#935](https://github.com/EmbarkStudios/rust-gpu/pull/935) added check for environment variable `RUSTGPU_SKIP_TOOLCHAIN_CHECK` to prevent toolchain check\n\n### Changed 🛠️\n- 🚨BREAKING🚨 [#926](https://github.com/EmbarkStudios/rust-gpu/pull/926) migrated from `register_attr` to `register_tool`. [More information](docs/src/migration-to-register-tool.md).\n- [PR#935](https://github.com/EmbarkStudios/rust-gpu/pull/935) updated toolchain to `nightly-2022-10-01`\n- [PR#934](https://github.com/EmbarkStudios/rust-gpu/pull/934) updated `glam` to `0.22`\n- [PR#928](https://github.com/EmbarkStudios/rust-gpu/pull/928) updated `spirv-tools` to `0.9` (SPIRV-Tools `2022.4`)\n\n### Removed 🔥\n- [PR#934](https://github.com/EmbarkStudios/rust-gpu/pull/934) Removed `glam::BVec` support (they are no longer `#[repl(simd)]` in `glam`, as Rust doesn't support SIMD vectors with `bool` elements)\n\n### Fixed 🩹\n- [PR#927](https://github.com/EmbarkStudios/rust-gpu/pull/927) re-taught Cargo to rebuild shader crates when `rustc_codegen_spirv` is rebuilt, via [`-Zbinary-dep-depinfo`](https://github.com/rust-lang/rust/pull/93969) (broken since a toolchain update in `0.4.0-alpha.13`, and has been causing spurious build failures ever since)\n\n## [0.4.0-alpha.15]\n\n### Added ⭐\n- [PR#919](https://github.com/EmbarkStudios/rust-gpu/pull/919) added a build-time check for the nightly toolchain version, to provide user-friendly error messages\n\n### Changed 🛠️\n- [PR#918](https://github.com/EmbarkStudios/rust-gpu/pull/918) updated toolchain to `nightly-2022-08-29`\n\n## [0.4.0-alpha.14]\n\n### Changed 🛠\n- [PR#904](https://github.com/EmbarkStudios/rust-gpu/pull/904) renamed helper `spirv-types` crate to `spirv-std-types`\n\n## [0.4.0-alpha.13]\n\n### Added ⭐\n- [PR#717](https://github.com/EmbarkStudios/rust-gpu/pull/717) added `noreturn` support to inline `asm!`\n- [PR#742](https://github.com/EmbarkStudios/rust-gpu/pull/742) added a `spirv-builder` option to include all debug info\n- [PR#787](https://github.com/EmbarkStudios/rust-gpu/pull/787) documented `Cargo.toml` `[profile.⋯.build-override]` setting for avoiding slow builds\n- [PR#830](https://github.com/EmbarkStudios/rust-gpu/pull/830) added a `spirv-builder` option to preserve unused descriptor bindings\n- [PR#875](https://github.com/EmbarkStudios/rust-gpu/pull/875) added warnings for `#[inline(never)]`s the inliner doesn't respect (for legalization reasons)\n- [PR#848](https://github.com/EmbarkStudios/rust-gpu/pull/848) added `#[spirv(subgroup_local_invocation_id)]` built-in (and an `examples/shaders/reduce` compute shader)\n- new `spirv-std` APIs: `ByteAddressableBuffer`<sup>[#735](https://github.com/EmbarkStudios/rust-gpu/pull/735)</sup>, `SampledImage::sample_by_lod`<sup>[#755](https://github.com/EmbarkStudios/rust-gpu/pull/755)</sup>, `arch::read_clock_khr`<sup>[#757](https://github.com/EmbarkStudios/rust-gpu/pull/757)</sup>, `arch::{signed,unsigned}_{min,max}`<sup>[#763](https://github.com/EmbarkStudios/rust-gpu/pull/763)</sup>, `debug_printf!`<sup>[#768](https://github.com/EmbarkStudios/rust-gpu/pull/768)</sup>, `arch::*memory_barrier*`<sup>[#769](https://github.com/EmbarkStudios/rust-gpu/pull/769)</sup>, `arch::IndexUnchecked`<sup>[#805](https://github.com/EmbarkStudios/rust-gpu/pull/805)</sup>, `RayQuery::confirm_intersection`<sup>[#822](https://github.com/EmbarkStudios/rust-gpu/pull/822)</sup>, `arch::atomic_i_increment`<sup>[#839](https://github.com/EmbarkStudios/rust-gpu/pull/839)</sup>, `arch::atomic`<sup>[#877](https://github.com/EmbarkStudios/rust-gpu/pull/877)</sup>\n\n### Changed 🛠\n- [PR#743](https://github.com/EmbarkStudios/rust-gpu/pull/743) set the SPIR-V \"generator magic number\" to [the value reserved for Rust-GPU](https://github.com/KhronosGroup/SPIRV-Headers/pull/174)\n- [PR#761](https://github.com/EmbarkStudios/rust-gpu/pull/761) made `spirv-std` build on stable Rust by avoiding `enum`s in `const`-generics\n- [PR#784](https://github.com/EmbarkStudios/rust-gpu/pull/784) documented `spirv-std` throughout\n- [PR#862](https://github.com/EmbarkStudios/rust-gpu/pull/862) updated toolchain to `nightly-2022-04-11`\n- [PR#846](https://github.com/EmbarkStudios/rust-gpu/pull/846) updated `spirv-tools` to `0.8` (SPIRV-Tools `2022.1`)\n- [PR#888](https://github.com/EmbarkStudios/rust-gpu/pull/888) widened the supported `glam` version range to `0.17`-`0.21`\n\n### Fixed 🩹\n- [PR#729](https://github.com/EmbarkStudios/rust-gpu/pull/729) fixed [#723](https://github.com/EmbarkStudios/rust-gpu/issues/723) by explicitly allowing unused shader inputs/outputs in storage class inference\n- [PR#732](https://github.com/EmbarkStudios/rust-gpu/pull/732) fixed `rustc` ICE messages being truncated with `rustc_codegen_spirv` (broken since a toolchain update in `0.4.0-alpha.12`)\n- [PR#737](https://github.com/EmbarkStudios/rust-gpu/pull/737) fixed [#642](https://github.com/EmbarkStudios/rust-gpu/issues/642) by re-adding `-Zsymbol-mangling-version=v0` (for generic parameters in `fn` names)\n- [PR#766](https://github.com/EmbarkStudios/rust-gpu/pull/766) fixed [#373](https://github.com/EmbarkStudios/rust-gpu/issues/373) and [#731](https://github.com/EmbarkStudios/rust-gpu/issues/731) by hooking `rustc` to limit function call ABIs to what Rust-GPU supports\n- [PR#793](https://github.com/EmbarkStudios/rust-gpu/pull/793) fixed [#748](https://github.com/EmbarkStudios/rust-gpu/issues/748) by supporting SPIR-V `1.4`'s changed entry-point rules\n- [PR#844](https://github.com/EmbarkStudios/rust-gpu/pull/844) fixed [#836](https://github.com/EmbarkStudios/rust-gpu/issues/836) by making newtypes (e.g. single-field structs) wrapping `ScalarPair`s (e.g. `(u32, u32)` or `&[T]`) have the same SPIR-V type as their inner field\n\n## [0.4.0-alpha.12]\n\n### Added ⭐\n- [PR#704](https://github.com/EmbarkStudios/rust-gpu/pull/704) added `Image::gather` and `Image::sample_bias` to `spirv-std`\n- [PR#709](https://github.com/EmbarkStudios/rust-gpu/pull/709) added float packing/unpacking operations to `spirv-std`\n\n### Changed 🛠\n- [PR#716](https://github.com/EmbarkStudios/rust-gpu/pull/716) updated toolchain to `nightly-2021-08-10`\n\n### Removed 🔥\n- [PR#710](https://github.com/EmbarkStudios/rust-gpu/pull/710) removed \"implicit bindless\" and kernel modes\n\n## [0.4.0-alpha.11]\n\n### Changed 🛠\n- [PR#702](https://github.com/EmbarkStudios/rust-gpu/pull/702) updated `glam` to `0.17`\n\n## [0.4.0-alpha.10]\n\n### Added ⭐\n- [PR#655](https://github.com/EmbarkStudios/rust-gpu/pull/655) added a `watch` feature to `spirv-builder` for hot reloading shaders\n- [PR#652](https://github.com/EmbarkStudios/rust-gpu/pull/652) documented `Image!` in the Rust-GPU book\n- [PR#660](https://github.com/EmbarkStudios/rust-gpu/pull/660) added a `spirv-builder` option to name global `OpVariables`\n- [PR#662](https://github.com/EmbarkStudios/rust-gpu/pull/662) added type aliases for common uses of `Image!`\n- [PR#683](https://github.com/EmbarkStudios/rust-gpu/pull/683) added a `spirv-builder` option to treat warnings as errors\n\n### Changed 🛠\n- [PR#672](https://github.com/EmbarkStudios/rust-gpu/pull/672) updated toolchain to `nightly-2021-06-09`\n- [PR#674](https://github.com/EmbarkStudios/rust-gpu/pull/674) updated `glam` to `0.16`\n\n### Removed 🔥\n- [PR#666](https://github.com/EmbarkStudios/rust-gpu/pull/666) removed `arch::arithmetic` from `spirv-std`\n\n## [0.4.0-alpha.9]\n\n### Fixed 🩹\n- fixed miscompilation in peephole optimizations (see [PR#646](https://github.com/EmbarkStudios/rust-gpu/pull/646))\n\n## [0.4.0-alpha.8]\n\n### Added ⭐\n- [PR#608](https://github.com/EmbarkStudios/rust-gpu/pull/608) added `Image::query_*` operations to `spirv-std`\n- [PR#610](https://github.com/EmbarkStudios/rust-gpu/pull/610) added `spirv-builder` support for enabling extra extensions and/or capabilities\n- [PR#612](https://github.com/EmbarkStudios/rust-gpu/pull/612) added `is_helper_invocation` to `spirv-std`\n- [PR#624](https://github.com/EmbarkStudios/rust-gpu/pull/624) added `OpTypeSampler` and `OpTypeAccelerationStructureKHR` support to inline `asm!`\n- [PR#622](https://github.com/EmbarkStudios/rust-gpu/pull/622) added the ability to query entry-point names from `spirv-builder`\n- [PR#630](https://github.com/EmbarkStudios/rust-gpu/pull/630) added a more convenient API to `spirv-builder`, for requesting extensions and/or capabilties\n- [PR#629](https://github.com/EmbarkStudios/rust-gpu/pull/629) added an optimization to convert N identical scalar (e.g. arithmetic) ops, into one N-wide vector op (as e.g. `glam` only emits the former)\n- [PR#596](https://github.com/EmbarkStudios/rust-gpu/pull/596) added a `RuntimeArray` type to `spirv-val`, to represent SPIR-V `OpRuntimeArray`s\n- [PR#635](https://github.com/EmbarkStudios/rust-gpu/pull/635) added several `spirv-builder` options for controlling `spirv-val` flags\n- [PR#643](https://github.com/EmbarkStudios/rust-gpu/pull/643) added `Image::read_subpass` to `spirv-std`\n\n### Changed 🛠\n- [PR#616](https://github.com/EmbarkStudios/rust-gpu/pull/616) updated `spirv-tools` to `0.6.1` and turned on emission of line-based debug info\n- [PR#631](https://github.com/EmbarkStudios/rust-gpu/pull/631) updated toolchain to `nightly-2021-05-24`\n- [PR#641](https://github.com/EmbarkStudios/rust-gpu/pull/641) made `spirv-std` depend on `glam` (`0.15.2`), instead of the other way around\n\n## [0.4.0-alpha.7]\n\n### Fixed 🩹\n- [PR#607](https://github.com/EmbarkStudios/rust-gpu/pull/607) removed accidental use of `feature(or_patterns)` (recently stabilized, only on nightly)\n\n## [0.4.0-alpha.6]\n\n### Added ⭐\n- [PR#586](https://github.com/EmbarkStudios/rust-gpu/pull/586) added support for constant memory (`&'static _` references), within the limits of SPIR-V\n- [PR#559](https://github.com/EmbarkStudios/rust-gpu/pull/559) added the ability to set a Rust \"target triple\" in `spirv-builder` (e.g. `\"spirv-unknown-vulkan1.1\"` for Vulkan `1.1`)\n- [PR#563](https://github.com/EmbarkStudios/rust-gpu/pull/563) added `SPV_KHR_ray_tracing` APIs to `spirv-std`\n- [PR#572](https://github.com/EmbarkStudios/rust-gpu/pull/572) added `SPV_KHR_ray_query` APIs to `spirv-std`\n- [PR#359](https://github.com/EmbarkStudios/rust-gpu/pull/359) added a `const`-generic `Image` type, and `Image!` macro wrapping it (to add \"named parameters\"), to `spirv-std`\n\n### Changed 🛠\n- [PR#587](https://github.com/EmbarkStudios/rust-gpu/pull/587) updated `glam` to `0.14`\n- [PR#605](https://github.com/EmbarkStudios/rust-gpu/pull/605) updated toolchain to `nightly-2021-04-25`\n\n### Fixed 🩹\n- [PR#594](https://github.com/EmbarkStudios/rust-gpu/pull/594) fixed [#585](https://github.com/EmbarkStudios/rust-gpu/issues/585) by explicitly banning `Image`/`Sampler`/`SampledImage` entry-point parameters not behind references\n- [PR#598](https://github.com/EmbarkStudios/rust-gpu/pull/598) fixed [#581](https://github.com/EmbarkStudios/rust-gpu/issues/581) by switching `memory::Semantics` from an `enum` to a `bitflags!`, in `spirv-std`\n\n## [0.4.0-alpha.5]\n\n### Removed 🔥\n- [PR#583](https://github.com/EmbarkStudios/rust-gpu/pull/583) removed `memcmp` from `spirv-std`\n\n## [0.4.0-alpha.4]\n\n### Added ⭐\n- [PR#519](https://github.com/EmbarkStudios/rust-gpu/pull/519) added `memory_barrier` and `control_barrier` to `spirv-std`\n\n### Changed 🛠\n- [PR#567](https://github.com/EmbarkStudios/rust-gpu/pull/567) removed the need to manually specify the storage class for `Image`/`Sampler`/`ImageSampler` entry-point parameters\n\n### Deprecated 🚧\n- [PR#576](https://github.com/EmbarkStudios/rust-gpu/pull/576) deprecated `#[spirv(block)]` in favor of automatically wrapping the user types in \"interface blocks\"\n\n## [0.4.0-alpha.3]\n\n### Added ⭐\n- [PR#551](https://github.com/EmbarkStudios/rust-gpu/pull/551) added multi-module (one SPIR-V module per entry-point) support to `spirv-builder`\n- [PR#504](https://github.com/EmbarkStudios/rust-gpu/pull/504) added basic support for unsized `struct`s (e.g. ending with a `[T]` field)\n- [PR#545](https://github.com/EmbarkStudios/rust-gpu/pull/545) added `Image` methods for sampling depth reference and/or with project coordinate, to `spirv-std`\n\n## [0.4.0-alpha.2]\n\n### Added ⭐\n- [PR#541](https://github.com/EmbarkStudios/rust-gpu/pull/541) added `#[spirv(invariant)]` (like the `invariant` keyword in GLSL)\n\n### Fixed 🩹\n- made `arch::derivative` functions public, in `spirv-std`\n\n## [0.4.0-alpha.1]\n\n### Added ⭐\n- [PR#498](https://github.com/EmbarkStudios/rust-gpu/pull/498) added `sample_by_lod`/`sample_by_gradient` image methods to `spirv-std`\n- [PR#521](https://github.com/EmbarkStudios/rust-gpu/pull/521) added `Cubemap` to `spirv-std`\n- [PR#520](https://github.com/EmbarkStudios/rust-gpu/pull/520) added `arch::primitive` functions to `spirv-std`\n\n### Changed 🛠\n- [PR#496](https://github.com/EmbarkStudios/rust-gpu/pull/496) updated `spirv-tools` to `0.5.0`\n- [PR#516](https://github.com/EmbarkStudios/rust-gpu/pull/516) updated toolchain to `nightly-2021-03-21`\n- [PR#443](https://github.com/EmbarkStudios/rust-gpu/pull/443) replaced `spirv_std::storage_class` \"named pointer types\" with `#[spirv(...)] &T` entry-point parameters\n\n## [0.3.1]\n\n### Added ⭐\n- [PR#480](https://github.com/EmbarkStudios/rust-gpu/pull/480) added a `fetch` image method to `spirv-std`\n- [PR#446](https://github.com/EmbarkStudios/rust-gpu/pull/446) added `arch::*` functions for all SPIR-V arithmetic operations (not involving matrices), to `spirv-std`\n\n### Removed 🔥\n- [PR#476](https://github.com/EmbarkStudios/rust-gpu/pull/476) removed `glam` as a dependency of `spirv-std`\n\n## [0.3.0]\n\n### Added ⭐\n- [PR#414](https://github.com/EmbarkStudios/rust-gpu/pull/414) added storage class type inference\n- [PR#469](https://github.com/EmbarkStudios/rust-gpu/pull/469) added initial support for Algebraic Data Type enums (e.g. `Option<T>`)\n- [PR#421](https://github.com/EmbarkStudios/rust-gpu/pull/421) added ability to provide `const` arguments to `asm!`\n- [PR#458](https://github.com/EmbarkStudios/rust-gpu/pull/458) added ability to set `entry_point_name` in entry point attributes to change the final name of an entry point\n- [PR#337](https://github.com/EmbarkStudios/rust-gpu/pull/337) added `#[spirv(unroll_loops)]` attribute to functions, which tells `rustc_codegen_spirv` to annotate all loops inside with `Unroll`\n- [PR#394](https://github.com/EmbarkStudios/rust-gpu/pull/394) added a new [`arch`] module which provides an abstraction some basic SPIR-V instructions as free functions.\n- [PR#340](https://github.com/EmbarkStudios/rust-gpu/pull/340) added the `spirv-std-macros` crate for holding the `spirv` proc macro\n- [PR#392](https://github.com/EmbarkStudios/rust-gpu/pull/392) added the `gpu_only` proc macro\n- [PR#377](https://github.com/EmbarkStudios/rust-gpu/pull/377) `Derivative` is now implemented for `glam::{Vec2, Vec3, Vec3A, Vec4}`\n- [PR#401](https://github.com/EmbarkStudios/rust-gpu/pull/401) added ability to build shaders in `release` mode\n- new `spirv-std` APIs: `vector_extract_dynamic`<sup>[PR#394](https://github.com/EmbarkStudios/rust-gpu/pull/394)</sup>, `vector_insert_dynamic`<sup>[PR#411](https://github.com/EmbarkStudios/rust-gpu/pull/411)</sup>, `textures::StorageImage2d`<sup>[PR#434](https://github.com/EmbarkStudios/rust-gpu/pull/434)</sup>, `any`/`all`<sup>[PR#380](https://github.com/EmbarkStudios/rust-gpu/pull/441)</sup>, `discard`<sup>[PR#441](https://github.com/EmbarkStudios/rust-gpu/pull/380)</sup>, `demote_to_helper_invocation`<sup>[PR#380](https://github.com/EmbarkStudios/rust-gpu/pull/380)</sup>, ``SampledImage``<sup>[PR#320](https://github.com/EmbarkStudios/rust-gpu/pull/320)</sup>\n\n### Changed 🛠\n- [PR#461](https://github.com/EmbarkStudios/rust-gpu/pull/461) removed requirement of `#[allow(unused_attributes)]` in front of `#[spirv]` attributes to remove warnings\n- [PR#398](https://github.com/EmbarkStudios/rust-gpu/pull/398) `rustc_codegen_spirv` now removes different `OpName`s that target the same ID\n- [PR#396](https://github.com/EmbarkStudios/rust-gpu/pull/396) `rustc_codegen_spirv` now tries to deduplicate generated `OpVariable`s\n\n## [0.2.0]\n\n### Added ⭐\n- [PR#287](https://github.com/EmbarkStudios/rust-gpu/pull/287) added a new structurizer, which means that you can now use `match` expressions and `continue`s\n- [PR#317](https://github.com/EmbarkStudios/rust-gpu/pull/317) added the `#[spirv(flat)]` attribute that matches SPIR-V's \"Flat\" decorator.\n- [PR#276](https://github.com/EmbarkStudios/rust-gpu/pull/276) added support for textures.\n- [PR#305](https://github.com/EmbarkStudios/rust-gpu/pull/305) added support for `panic!`\n- [PR#165](https://github.com/EmbarkStudios/rust-gpu/pull/165) added support for SPIR-V `1.0`\n- [PR#268](https://github.com/EmbarkStudios/rust-gpu/pull/268) added support for procedural macros\n- [PR#195](https://github.com/EmbarkStudios/rust-gpu/pull/195) added initial support for  compute shaders\n- [PR#254](https://github.com/EmbarkStudios/rust-gpu/pull/254) added initial support in Rust and `rust-gpu` for inline SPIR-V with the `asm!` nightly feature\n\n### Changed 🛠\n- [PR#219](https://github.com/EmbarkStudios/rust-gpu/pull/219) improvements to error messages regarding constant pointers\n- [PR#280](https://github.com/EmbarkStudios/rust-gpu/pull/280) all Storage Classes (e.g. `Input`/`Output`) are now defined in `spirv_std::storage_class`\n- [PR#275](https://github.com/EmbarkStudios/rust-gpu/pull/275) Rust's language items such `rust_eh_personality` and `panic_handler` are now defined in `spirv-std` for SPIR-V targets\n\n## [0.1.0]\n\nInitial release.\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 5.3544921875,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nWe as members, contributors, and leaders pledge to make participation in our\ncommunity a harassment-free experience for everyone, regardless of age, body\nsize, visible or invisible disability, ethnicity, sex characteristics, gender\nidentity and expression, level of experience, education, socio-economic status,\nnationality, personal appearance, race, religion, or sexual identity\nand orientation.\n\nWe pledge to act and interact in ways that contribute to an open, welcoming,\ndiverse, inclusive, and healthy community.\n\n## Our Standards\n\nExamples of behavior that contributes to a positive environment for our\ncommunity include:\n\n* Demonstrating empathy and kindness toward other people\n* Being respectful of differing opinions, viewpoints, and experiences\n* Giving and gracefully accepting constructive feedback\n* Accepting responsibility and apologizing to those affected by our mistakes,\n  and learning from the experience\n* Focusing on what is best not just for us as individuals, but for the\n  overall community\n\nExamples of unacceptable behavior include:\n\n* The use of sexualized language or imagery, and sexual attention or\n  advances of any kind\n* Trolling, insulting or derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or email\n  address, without their explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Enforcement Responsibilities\n\nCommunity leaders are responsible for clarifying and enforcing our standards of\nacceptable behavior and will take appropriate and fair corrective action in\nresponse to any behavior that they deem inappropriate, threatening, offensive,\nor harmful.\n\nCommunity leaders have the right and responsibility to remove, edit, or reject\ncomments, commits, code, wiki edits, issues, and other contributions that are\nnot aligned to this Code of Conduct, and will communicate reasons for moderation\ndecisions when appropriate.\n\n## Scope\n\nThis Code of Conduct applies within all community spaces, and also applies when\nan individual is officially representing the community in public spaces.\nExamples of representing our community include using an official e-mail address,\nposting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported to the community leaders responsible for enforcement at\nopensource@embark-studios.com.\nAll complaints will be reviewed and investigated promptly and fairly.\n\nAll community leaders are obligated to respect the privacy and security of the\nreporter of any incident.\n\n## Enforcement Guidelines\n\nCommunity leaders will follow these Community Impact Guidelines in determining\nthe consequences for any action they deem in violation of this Code of Conduct:\n\n### 1. Correction\n\n**Community Impact**: Use of inappropriate language or other behavior deemed\nunprofessional or unwelcome in the community.\n\n**Consequence**: A private, written warning from community leaders, providing\nclarity around the nature of the violation and an explanation of why the\nbehavior was inappropriate. A public apology may be requested.\n\n### 2. Warning\n\n**Community Impact**: A violation through a single incident or series\nof actions.\n\n**Consequence**: A warning with consequences for continued behavior. No\ninteraction with the people involved, including unsolicited interaction with\nthose enforcing the Code of Conduct, for a specified period of time. This\nincludes avoiding interactions in community spaces as well as external channels\nlike social media. Violating these terms may lead to a temporary or\npermanent ban.\n\n### 3. Temporary Ban\n\n**Community Impact**: A serious violation of community standards, including\nsustained inappropriate behavior.\n\n**Consequence**: A temporary ban from any sort of interaction or public\ncommunication with the community for a specified period of time. No public or\nprivate interaction with the people involved, including unsolicited interaction\nwith those enforcing the Code of Conduct, is allowed during this period.\nViolating these terms may lead to a permanent ban.\n\n### 4. Permanent Ban\n\n**Community Impact**: Demonstrating a pattern of violation of community\nstandards, including sustained inappropriate behavior,  harassment of an\nindividual, or aggression toward or disparagement of classes of individuals.\n\n**Consequence**: A permanent ban from any sort of public interaction within\nthe community.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage],\nversion 2.0, available at\n[https://www.contributor-covenant.org/version/2/0/code_of_conduct.html][v2.0].\n\nCommunity Impact Guidelines were inspired by \n[Mozilla's code of conduct enforcement ladder][Mozilla CoC].\n\nFor answers to common questions about this code of conduct, see the FAQ at\n[https://www.contributor-covenant.org/faq][FAQ]. Translations are available \nat [https://www.contributor-covenant.org/translations][translations].\n\n[homepage]: https://www.contributor-covenant.org\n[v2.0]: https://www.contributor-covenant.org/version/2/0/code_of_conduct.html\n[Mozilla CoC]: https://github.com/mozilla/diversity\n[FAQ]: https://www.contributor-covenant.org/faq\n[translations]: https://www.contributor-covenant.org/translations\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 6.294921875,
          "content": "# Embark Contributor Guidelines\n\nWelcome! This project is created by the team at [Embark Studios](https://embark.games). We're glad you're interested in contributing! We welcome contributions from people of all backgrounds who are interested in making great software with us.\n\nAt Embark, we aspire to empower everyone to create interactive experiences. To do this, we're exploring and pushing the boundaries of new technologies, and sharing our learnings with the open source community.\n\nIf you have ideas for collaboration, email us at opensource@embark-studios.com.\n\nWe're also hiring full-time engineers to work with us in Stockholm! Check out our current job postings [here](https://www.embark-studios.com/jobs).\n\n## Issues\n\n### Feature Requests\n\nIf you have ideas or how to improve our projects, you can suggest features by opening a GitHub issue. Make sure to include details about the feature or change, and describe any uses cases it would enable.\n\nFeature requests will be tagged as `enhancement` and their status will be updated in the comments of the issue.\n\n### Bugs\n\nWhen reporting a bug or unexpected behaviour in a project, make sure your issue describes steps to reproduce the behaviour, including the platform you were using, what steps you took, and any error messages.\n\nReproducible bugs will be tagged as `bug` and their status will be updated in the comments of the issue.\n\n### Wontfix\n\nIssues will be closed and tagged as `wontfix` if we decide that we do not wish to implement it, usually due to being misaligned with the project vision or out of scope. We will comment on the issue with more detailed reasoning.\n\n### Labels\nThe labels for this repository are divided into the following categories;\n\n- **`c:` Crate** Issues specific a single crate in the repository.\n- **`g:` GPU** Issues specific a GPU vendor.\n- **`p:` Platform** Issues specific a single operating system or platform.\n- **`s:` Status** The current status of a PR or issue.\n- **`t:` Type** The general type of the issue. (E.g. `t: bug` for bugs.)\n\n## Contribution Workflow\n\n### Open Issues\n\nIf you're ready to contribute, start by looking at our open issues tagged as [`help wanted`](../../issues?q=is%3Aopen+is%3Aissue+label%3A\"help+wanted\") or [`good first issue`](../../issues?q=is%3Aopen+is%3Aissue+label%3A\"good+first+issue\").\n\nYou can comment on the issue to let others know you're interested in working on it or to ask questions.\n\n### Major Change Process\nMost bug fixes can be implemented directly by opening a PR, however for larger design decisions and major changes to the compiler's architecture, this repository uses a two stage \"Major Change Proposal\" and \"Request For Comments\" process. If you're unsure about what's required for a specific change you should always start with [**opening an issue**][open-issue] or asking the team over on the `#rust-gpu` channel in the [Embark Discord][dis].\n\n[dis]: https://discord.gg/8TW9nfF\n[open-issue]: https://github.com/EmbarkStudios/rust-gpu/issues/new\n\n#### Definitions\n\n##### **Major Change Proposal (MCP)**\nA proposal to make a significant internal changes or small public facing changes to the compiler. An MCP is opened as an issue on `rust-gpu` the repository. An MCP typically only requires one member's approval. Though if the change is significantly big enough it may require the full team's sign off or require an RFC.\n\n  An MCP should generally be a short (1-2 paragraphs) high level overview of the change you would want to make, the motivation behind the change, and potential solutions. There is a [major change issue template][mcp-template] you can use for convenience.\n\n[mcp-template]: https://github.com/rust-lang/rust/issues/new?labels=mcp%3A%20proposed&template=mcp.md\n\n  Examples of what would require an MCP:\n\n  - Changing the compiler architecture.\n  - Adding support for an existing Rust language or feature.\n  - Small additions (e.g. new methods) to `spirv-std` types.\n  - Proposing an RFC.\n\n  Examples of what would **not** require an MCP:\n\n  - Updating documentation\n  - Fixing existing bugs\n  - Performance improvements\n\n##### **Request For Comments (RFC)**\nA proposal to make significant public facing changes to the compiler or standard library. RFCs are opened as pull requests to the `rust-gpu` repository. RFCs require full sign off by the team, before being approved or implemented. Check out the [RFC `000-template.md` document][rfc-template] for details on the structure.\n\n[rfc-template]: https://github.com/EmbarkStudios/rust-gpu/blob/main/rfcs/000-template.md\n\nExamples of what would require an RFC:\n\n- Major additions to `spirv-std`, such as new APIs, or breaking changes to existing ones.\n\n#### Life-cycle\n\n1. You file a [major change proposal][mcp-template] outlining the changes and the motivation for it.\n2. A member of the team will review the proposal and tag it with the appropriate label.\n  2.1. `mcp: accepted` means that the MCP has been accepted and is ready for a pull request implementing it.\n  2.2. `mcp: rfc needed` means that the MCP has been accepted as something the team would like but needs a full RFC before the implementation.\n  2.3 Closing an issue means that the MCP has rejected.\n3. If the proposal has been accepted then the implementation can begin.\n\n### Pull Request Process\n\n1. Fork the repository.\n2. Create a new feature branch.\n3. Make your changes. Ensure that there are no build errors by running the project with your changes locally.\n4. Open a pull request with a name and description of what you did. You can read more about working with pull requests on GitHub [here](https://help.github.com/en/articles/creating-a-pull-request-from-a-fork).\n5. A maintainer will review your pull request and may ask you to make changes.\n\n## Code Guidelines\n\n### Rust\n\nYou can read about our standards and recommendations for working with Rust [here](https://github.com/EmbarkStudios/rust-ecosystem/blob/master/guidelines.md).\n\n## Licensing\n\nUnless otherwise specified, all Embark open source projects are licensed under a dual MIT OR Apache-2.0 license, allowing licensees to chose either at their option. You can read more in each project's respective README.\n\n## Code of Conduct\n\nPlease note that our projects are released with a [Contributor Code of Conduct](CODE_OF_CONDUCT.md) to ensure that they are welcoming places for everyone to contribute. By participating in any Embark open source project, you agree to abide by these terms.\n"
        },
        {
          "name": "Cargo.lock",
          "type": "blob",
          "size": 87.1796875,
          "content": "# This file is automatically @generated by Cargo.\n# It is not intended for manual editing.\nversion = 3\n\n[[package]]\nname = \"ab_glyph\"\nversion = \"0.2.23\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"80179d7dd5d7e8c285d67c4a1e652972a92de7475beddfb92028c76463b13225\"\ndependencies = [\n \"ab_glyph_rasterizer\",\n \"owned_ttf_parser\",\n]\n\n[[package]]\nname = \"ab_glyph_rasterizer\"\nversion = \"0.1.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c71b1793ee61086797f5c80b6efa2b8ffa6d5dd703f118545808a7f2e27f7046\"\n\n[[package]]\nname = \"ahash\"\nversion = \"0.7.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5a824f2aa7e75a0c98c5a504fceb80649e9c35265d44525b5f94de4771a395cd\"\ndependencies = [\n \"getrandom\",\n \"once_cell\",\n \"version_check\",\n]\n\n[[package]]\nname = \"ahash\"\nversion = \"0.8.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"77c3a9648d43b9cd48db467b3f87fdd6e146bcc88ab0180006cef2179fe11d01\"\ndependencies = [\n \"cfg-if\",\n \"getrandom\",\n \"once_cell\",\n \"version_check\",\n \"zerocopy\",\n]\n\n[[package]]\nname = \"aho-corasick\"\nversion = \"1.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b2969dcb958b36655471fc61f7e416fa76033bdd4bfed0678d8fee1e2d07a1f0\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"allocator-api2\"\nversion = \"0.2.16\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0942ffc6dcaadf03badf6e6a2d0228460359d5e34b57ccdc720b7382dfbd5ec5\"\n\n[[package]]\nname = \"android-activity\"\nversion = \"0.5.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"39b801912a977c3fd52d80511fe1c0c8480c6f957f21ae2ce1b92ffe970cf4b9\"\ndependencies = [\n \"android-properties\",\n \"bitflags 2.6.0\",\n \"cc\",\n \"cesu8\",\n \"jni\",\n \"jni-sys\",\n \"libc\",\n \"log\",\n \"ndk\",\n \"ndk-context\",\n \"ndk-sys\",\n \"num_enum\",\n \"thiserror\",\n]\n\n[[package]]\nname = \"android-properties\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fc7eb209b1518d6bb87b283c20095f5228ecda460da70b44f0802523dea6da04\"\n\n[[package]]\nname = \"android_log-sys\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5ecc8056bf6ab9892dcd53216c83d1597487d7dacac16c8df6b877d127df9937\"\n\n[[package]]\nname = \"android_logger\"\nversion = \"0.13.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c494134f746c14dc653a35a4ea5aca24ac368529da5370ecf41fe0341c35772f\"\ndependencies = [\n \"android_log-sys\",\n \"env_logger 0.10.2\",\n \"log\",\n \"once_cell\",\n]\n\n[[package]]\nname = \"android_system_properties\"\nversion = \"0.1.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"819e7219dbd41043ac279b19830f2efc897156490d7fd6ea916720117ee66311\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"anstream\"\nversion = \"0.6.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6e2e1ebcb11de5c03c67de28a7df593d32191b44939c482e97702baaaa6ab6a5\"\ndependencies = [\n \"anstyle\",\n \"anstyle-parse\",\n \"anstyle-query\",\n \"anstyle-wincon\",\n \"colorchoice\",\n \"utf8parse\",\n]\n\n[[package]]\nname = \"anstyle\"\nversion = \"1.0.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7079075b41f533b8c61d2a4d073c4676e1f8b249ff94a393b0595db304e0dd87\"\n\n[[package]]\nname = \"anstyle-parse\"\nversion = \"0.2.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c75ac65da39e5fe5ab759307499ddad880d724eed2f6ce5b5e8a26f4f387928c\"\ndependencies = [\n \"utf8parse\",\n]\n\n[[package]]\nname = \"anstyle-query\"\nversion = \"1.0.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e28923312444cdd728e4738b3f9c9cac739500909bb3d3c94b43551b16517648\"\ndependencies = [\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"anstyle-wincon\"\nversion = \"3.0.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1cd54b81ec8d6180e24654d0b371ad22fc3dd083b6ff8ba325b72e00c87660a7\"\ndependencies = [\n \"anstyle\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"anyhow\"\nversion = \"1.0.79\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"080e9890a082662b09c1ad45f567faeeb47f22b5fb23895fbe1e651e718e25ca\"\n\n[[package]]\nname = \"ar\"\nversion = \"0.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d67af77d68a931ecd5cbd8a3b5987d63a1d1d1278f7f6a60ae33db485cdebb69\"\n\n[[package]]\nname = \"arrayref\"\nversion = \"0.3.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6b4930d2cb77ce62f89ee5d5289b4ac049559b1c45539271f5ed4fdc7db34545\"\n\n[[package]]\nname = \"arrayvec\"\nversion = \"0.7.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"96d30a06541fbafbc7f82ed10c06164cfbd2c401138f6addd8404629c4b16711\"\n\n[[package]]\nname = \"as-raw-xcb-connection\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"175571dd1d178ced59193a6fc02dde1b972eb0bc56c892cde9beeceac5bf0f6b\"\n\n[[package]]\nname = \"ash\"\nversion = \"0.37.3+1.3.251\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"39e9c3835d686b0a6084ab4234fcd1b07dbf6e4767dce60874b12356a25ecd4a\"\ndependencies = [\n \"libloading 0.7.4\",\n]\n\n[[package]]\nname = \"ash\"\nversion = \"0.38.0+1.3.281\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0bb44936d800fea8f016d7f2311c6a4f97aebd5dc86f09906139ec848cf3a46f\"\ndependencies = [\n \"libloading 0.8.1\",\n]\n\n[[package]]\nname = \"ash-molten\"\nversion = \"0.13.1+1.1.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"74f01aab261481bd870f4a4e44de72894b1721a5f9f25e5fbd79c9612d1d1605\"\ndependencies = [\n \"anyhow\",\n \"ash 0.37.3+1.3.251\",\n \"plist\",\n \"serde\",\n]\n\n[[package]]\nname = \"ash-window\"\nversion = \"0.12.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b912285a7c29f3a8f87ca6f55afc48768624e5e33ec17dbd2f2075903f5e35ab\"\ndependencies = [\n \"ash 0.37.3+1.3.251\",\n \"raw-window-handle 0.5.2\",\n \"raw-window-metal\",\n]\n\n[[package]]\nname = \"atomic-waker\"\nversion = \"1.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1505bd5d3d116872e7271a6d4e16d81d0c8570876c8de68093a09ac269d8aac0\"\n\n[[package]]\nname = \"autocfg\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d468802bab17cbc0cc575e9b053f41e72aa36bfa6b7f55e3529ffa43161b97fa\"\n\n[[package]]\nname = \"base64\"\nversion = \"0.21.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9d297deb1925b89f2ccc13d7635fa0714f12c87adce1c75356b39ca9b7178567\"\n\n[[package]]\nname = \"bit-set\"\nversion = \"0.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f0481a0e032742109b1133a095184ee93d88f3dc9e0d28a5d033dc77a073f44f\"\ndependencies = [\n \"bit-vec\",\n]\n\n[[package]]\nname = \"bit-vec\"\nversion = \"0.7.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d2c54ff287cfc0a34f38a6b832ea1bd8e448a330b3e40a50859e6488bee07f22\"\n\n[[package]]\nname = \"bitflags\"\nversion = \"1.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bef38d45163c2f1dde094a7dfd33ccf595c92905c8f8f4fdc18d06fb1037718a\"\n\n[[package]]\nname = \"bitflags\"\nversion = \"2.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b048fb63fd8b5923fc5aa7b340d8e156aec7ec02f0c78fa8a6ddc2613f6f71de\"\n\n[[package]]\nname = \"block\"\nversion = \"0.1.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0d8c1fef690941d3e7788d328517591fecc684c084084702d6ff1641e993699a\"\n\n[[package]]\nname = \"block-sys\"\nversion = \"0.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ae85a0696e7ea3b835a453750bf002770776609115e6d25c6d2ff28a8200f7e7\"\ndependencies = [\n \"objc-sys\",\n]\n\n[[package]]\nname = \"block2\"\nversion = \"0.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"15b55663a85f33501257357e6421bb33e769d5c9ffb5ba0921c975a123e35e68\"\ndependencies = [\n \"block-sys\",\n \"objc2\",\n]\n\n[[package]]\nname = \"bumpalo\"\nversion = \"3.14.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7f30e7476521f6f8af1a1c4c0b8cc94f0bee37d91763d0ca2665f299b6cd8aec\"\n\n[[package]]\nname = \"bytemuck\"\nversion = \"1.18.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"94bbb0ad554ad961ddc5da507a12a29b14e4ae5bda06b19f575a3e6079d2e2ae\"\ndependencies = [\n \"bytemuck_derive\",\n]\n\n[[package]]\nname = \"bytemuck_derive\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"965ab7eb5f8f97d2a083c799f3a1b994fc397b2fe2da5d1da1626ce15a39f2b1\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.48\",\n]\n\n[[package]]\nname = \"byteorder\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1fd0f2584146f6f2ef48085050886acf353beff7305ebd1ae69500e27c67f64b\"\n\n[[package]]\nname = \"bytes\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a2bd12c1caf447e69cd4528f47f94d203fd2582878ecb9e9465484c4148a8223\"\n\n[[package]]\nname = \"calloop\"\nversion = \"0.12.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fba7adb4dd5aa98e5553510223000e7148f621165ec5f9acd7113f6ca4995298\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"log\",\n \"polling\",\n \"rustix\",\n \"slab\",\n \"thiserror\",\n]\n\n[[package]]\nname = \"calloop-wayland-source\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0f0ea9b9476c7fad82841a8dbb380e2eae480c21910feba80725b46931ed8f02\"\ndependencies = [\n \"calloop\",\n \"rustix\",\n \"wayland-backend\",\n \"wayland-client 0.31.1\",\n]\n\n[[package]]\nname = \"cc\"\nversion = \"1.0.83\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f1174fb0b6ec23863f8b971027804a42614e347eafb0a95bf0b12cdae21fc4d0\"\ndependencies = [\n \"jobserver\",\n \"libc\",\n]\n\n[[package]]\nname = \"cesu8\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6d43a04d8753f35258c91f8ec639f792891f748a1edbd759cf1dcea3382ad83c\"\n\n[[package]]\nname = \"cfg-if\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd\"\n\n[[package]]\nname = \"cfg_aliases\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fd16c4719339c4530435d38e511904438d07cce7950afa3718a84ac36c10e89e\"\n\n[[package]]\nname = \"clap\"\nversion = \"4.4.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1e578d6ec4194633722ccf9544794b71b1385c3c027efe0c55db226fc880865c\"\ndependencies = [\n \"clap_builder\",\n \"clap_derive\",\n]\n\n[[package]]\nname = \"clap_builder\"\nversion = \"4.4.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4df4df40ec50c46000231c914968278b1eb05098cf8f1b3a518a95030e71d1c7\"\ndependencies = [\n \"anstream\",\n \"anstyle\",\n \"clap_lex\",\n \"strsim\",\n]\n\n[[package]]\nname = \"clap_derive\"\nversion = \"4.4.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cf9804afaaf59a91e75b022a30fb7229a7901f60c755489cc61c9b423b836442\"\ndependencies = [\n \"heck\",\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.48\",\n]\n\n[[package]]\nname = \"clap_lex\"\nversion = \"0.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"702fc72eb24e5a1e48ce58027a675bc24edd52096d5397d4aea7c6dd9eca0bd1\"\n\n[[package]]\nname = \"cocoa\"\nversion = \"0.25.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f6140449f97a6e97f9511815c5632d84c8aacf8ac271ad77c559218161a1373c\"\ndependencies = [\n \"bitflags 1.3.2\",\n \"block\",\n \"cocoa-foundation\",\n \"core-foundation\",\n \"core-graphics\",\n \"foreign-types\",\n \"libc\",\n \"objc\",\n]\n\n[[package]]\nname = \"cocoa-foundation\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8c6234cbb2e4c785b456c0644748b1ac416dd045799740356f8363dfe00c93f7\"\ndependencies = [\n \"bitflags 1.3.2\",\n \"block\",\n \"core-foundation\",\n \"core-graphics-types\",\n \"libc\",\n \"objc\",\n]\n\n[[package]]\nname = \"codespan-reporting\"\nversion = \"0.11.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3538270d33cc669650c4b093848450d380def10c331d38c768e34cac80576e6e\"\ndependencies = [\n \"termcolor\",\n \"unicode-width\",\n]\n\n[[package]]\nname = \"colorchoice\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"acbf1af155f9b9ef647e42cdc158db4b64a1b61f743629225fde6f3e0be2a7c7\"\n\n[[package]]\nname = \"com\"\nversion = \"0.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7e17887fd17353b65b1b2ef1c526c83e26cd72e74f598a8dc1bee13a48f3d9f6\"\ndependencies = [\n \"com_macros\",\n]\n\n[[package]]\nname = \"com_macros\"\nversion = \"0.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d375883580a668c7481ea6631fc1a8863e33cc335bf56bfad8d7e6d4b04b13a5\"\ndependencies = [\n \"com_macros_support\",\n \"proc-macro2\",\n \"syn 1.0.109\",\n]\n\n[[package]]\nname = \"com_macros_support\"\nversion = \"0.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ad899a1087a9296d5644792d7cb72b8e34c1bec8e7d4fbc002230169a6e8710c\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 1.0.109\",\n]\n\n[[package]]\nname = \"combine\"\nversion = \"4.6.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"35ed6e9d84f0b51a7f52daf1c7d71dd136fd7a3f41a8462b8cdb8c78d920fad4\"\ndependencies = [\n \"bytes\",\n \"memchr\",\n]\n\n[[package]]\nname = \"compiletest_rs\"\nversion = \"0.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"70489bbb718aea4f92e5f48f2e3b5be670c2051de30e57cb6e5377b4aa08b372\"\ndependencies = [\n \"diff\",\n \"filetime\",\n \"getopts\",\n \"lazy_static\",\n \"libc\",\n \"log\",\n \"miow\",\n \"regex\",\n \"rustfix\",\n \"serde\",\n \"serde_derive\",\n \"serde_json\",\n \"tester\",\n \"winapi\",\n]\n\n[[package]]\nname = \"compiletests\"\nversion = \"0.0.0\"\ndependencies = [\n \"clap\",\n \"compiletest_rs\",\n \"rustc_codegen_spirv\",\n]\n\n[[package]]\nname = \"compiletests-deps-helper\"\nversion = \"0.0.0\"\ndependencies = [\n \"spirv-std\",\n]\n\n[[package]]\nname = \"compute-shader\"\nversion = \"0.0.0\"\ndependencies = [\n \"rayon\",\n \"spirv-std\",\n]\n\n[[package]]\nname = \"concurrent-queue\"\nversion = \"2.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d16048cd947b08fa32c24458a22f5dc5e835264f689f4f5653210c69fd107363\"\ndependencies = [\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"console_error_panic_hook\"\nversion = \"0.1.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a06aeb73f470f66dcdbf7223caeebb85984942f22f1adb2a088cf9668146bbbc\"\ndependencies = [\n \"cfg-if\",\n \"wasm-bindgen\",\n]\n\n[[package]]\nname = \"console_log\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e89f72f65e8501878b8a004d5a1afb780987e2ce2b4532c562e367a72c57499f\"\ndependencies = [\n \"log\",\n \"web-sys\",\n]\n\n[[package]]\nname = \"convert_case\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6245d59a3e82a7fc217c5828a6692dbc6dfb63a0c8c90495621f7b9d79704a0e\"\n\n[[package]]\nname = \"core-foundation\"\nversion = \"0.9.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"91e195e091a93c46f7102ec7818a2aa394e1e1771c3ab4825963fa03e45afb8f\"\ndependencies = [\n \"core-foundation-sys\",\n \"libc\",\n]\n\n[[package]]\nname = \"core-foundation-sys\"\nversion = \"0.8.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"06ea2b9bc92be3c2baa9334a323ebca2d6f074ff852cd1d7b11064035cd3868f\"\n\n[[package]]\nname = \"core-graphics\"\nversion = \"0.23.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"970a29baf4110c26fedbc7f82107d42c23f7e88e404c4577ed73fe99ff85a212\"\ndependencies = [\n \"bitflags 1.3.2\",\n \"core-foundation\",\n \"core-graphics-types\",\n \"foreign-types\",\n \"libc\",\n]\n\n[[package]]\nname = \"core-graphics-types\"\nversion = \"0.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"45390e6114f68f718cc7a830514a96f903cccd70d02a8f6d9f643ac4ba45afaf\"\ndependencies = [\n \"bitflags 1.3.2\",\n \"core-foundation\",\n \"libc\",\n]\n\n[[package]]\nname = \"crossbeam-channel\"\nversion = \"0.5.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"176dc175b78f56c0f321911d9c8eb2b77a78a4860b9c19db83835fea1a46649b\"\ndependencies = [\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"crossbeam-deque\"\nversion = \"0.8.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"613f8cc01fe9cf1a3eb3d7f488fd2fa8388403e97039e2f73692932e291a770d\"\ndependencies = [\n \"crossbeam-epoch\",\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"crossbeam-epoch\"\nversion = \"0.9.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5b82ac4a3c2ca9c3460964f020e1402edd5753411d7737aa39c3714ad1b5420e\"\ndependencies = [\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"crossbeam-utils\"\nversion = \"0.8.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"248e3bacc7dc6baa3b21e405ee045c3047101a49145e7e9eca583ab4c2ca5345\"\n\n[[package]]\nname = \"cty\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b365fabc795046672053e29c954733ec3b05e4be654ab130fe8f1f94d7051f35\"\n\n[[package]]\nname = \"cursor-icon\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"96a6ac251f4a2aca6b3f91340350eab87ae57c3f127ffeb585e92bd336717991\"\n\n[[package]]\nname = \"d3d12\"\nversion = \"22.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bdbd1f579714e3c809ebd822c81ef148b1ceaeb3d535352afc73fd0c4c6a0017\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"libloading 0.8.1\",\n \"winapi\",\n]\n\n[[package]]\nname = \"deranged\"\nversion = \"0.3.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b42b6fa04a440b495c8b04d0e71b707c585f83cb9cb28cf8cd0d976c315e31b4\"\ndependencies = [\n \"powerfmt\",\n]\n\n[[package]]\nname = \"derive_more\"\nversion = \"0.99.17\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4fb810d30a7c1953f91334de7244731fc3f3c10d7fe163338a35b9f640960321\"\ndependencies = [\n \"convert_case\",\n \"proc-macro2\",\n \"quote\",\n \"rustc_version\",\n \"syn 1.0.109\",\n]\n\n[[package]]\nname = \"diff\"\nversion = \"0.1.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"56254986775e3233ffa9c4d7d3faaf6d36a2c09d30b20687e9f88bc8bafc16c8\"\n\n[[package]]\nname = \"dirs-next\"\nversion = \"2.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b98cf8ebf19c3d1b223e151f99a4f9f0690dca41414773390fc824184ac833e1\"\ndependencies = [\n \"cfg-if\",\n \"dirs-sys-next\",\n]\n\n[[package]]\nname = \"dirs-sys-next\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4ebda144c4fe02d1f7ea1a7d9641b6fc6b580adcfa024ae48797ecdeb6825b4d\"\ndependencies = [\n \"libc\",\n \"redox_users\",\n \"winapi\",\n]\n\n[[package]]\nname = \"dispatch\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bd0c93bb4b0c6d9b77f4435b0ae98c24d17f1c45b2ff844c6151a07256ca923b\"\n\n[[package]]\nname = \"dlib\"\nversion = \"0.5.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"330c60081dcc4c72131f8eb70510f1ac07223e5d4163db481a04a0befcffa412\"\ndependencies = [\n \"libloading 0.8.1\",\n]\n\n[[package]]\nname = \"document-features\"\nversion = \"0.2.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cb6969eaabd2421f8a2775cfd2471a2b634372b4a25d41e3bd647b79912850a0\"\ndependencies = [\n \"litrs\",\n]\n\n[[package]]\nname = \"downcast-rs\"\nversion = \"1.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9ea835d29036a4087793836fa931b08837ad5e957da9e23886b29586fb9b6650\"\n\n[[package]]\nname = \"either\"\nversion = \"1.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a26ae43d7bcc3b814de94796a5e736d4029efb0ee900c12e2d54c993ad1a1e07\"\n\n[[package]]\nname = \"elsa\"\nversion = \"1.10.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d98e71ae4df57d214182a2e5cb90230c0192c6ddfcaa05c36453d46a54713e10\"\ndependencies = [\n \"indexmap 2.1.0\",\n \"stable_deref_trait\",\n]\n\n[[package]]\nname = \"env_filter\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a009aa4810eb158359dda09d0c87378e4bbb89b5a801f016885a4707ba24f7ea\"\ndependencies = [\n \"log\",\n \"regex\",\n]\n\n[[package]]\nname = \"env_logger\"\nversion = \"0.10.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4cd405aab171cb85d6735e5c8d9db038c17d3ca007a4d2c25f337935c3d90580\"\ndependencies = [\n \"log\",\n \"regex\",\n]\n\n[[package]]\nname = \"env_logger\"\nversion = \"0.11.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9eeb342678d785662fd2514be38c459bb925f02b68dd2a3e0f21d7ef82d979dd\"\ndependencies = [\n \"anstream\",\n \"anstyle\",\n \"env_filter\",\n \"humantime\",\n \"log\",\n]\n\n[[package]]\nname = \"equivalent\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5443807d6dff69373d433ab9ef5378ad8df50ca6298caf15de6e52e24aaf54d5\"\n\n[[package]]\nname = \"errno\"\nversion = \"0.3.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a258e46cdc063eb8519c00b9fc845fc47bcfca4130e2f08e88665ceda8474245\"\ndependencies = [\n \"libc\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"example-runner-ash\"\nversion = \"0.0.0\"\ndependencies = [\n \"ash 0.37.3+1.3.251\",\n \"ash-molten\",\n \"ash-window\",\n \"cfg-if\",\n \"clap\",\n \"raw-window-handle 0.5.2\",\n \"shared\",\n \"spirv-builder\",\n \"winit\",\n]\n\n[[package]]\nname = \"example-runner-cpu\"\nversion = \"0.0.0\"\ndependencies = [\n \"minifb\",\n \"rayon\",\n \"shared\",\n \"sky-shader\",\n]\n\n[[package]]\nname = \"example-runner-wgpu\"\nversion = \"0.0.0\"\ndependencies = [\n \"android_logger\",\n \"bytemuck\",\n \"cfg-if\",\n \"clap\",\n \"console_error_panic_hook\",\n \"console_log\",\n \"env_logger 0.11.0\",\n \"futures\",\n \"shared\",\n \"spirv-builder\",\n \"strum\",\n \"wasm-bindgen-futures\",\n \"web-sys\",\n \"wgpu\",\n \"winit\",\n]\n\n[[package]]\nname = \"example-runner-wgpu-builder\"\nversion = \"0.0.0\"\ndependencies = [\n \"spirv-builder\",\n]\n\n[[package]]\nname = \"fastrand\"\nversion = \"2.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"25cbce373ec4653f1a01a31e8a5e5ec0c622dc27ff9c4e6606eefef5cbbed4a5\"\n\n[[package]]\nname = \"filetime\"\nversion = \"0.2.23\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1ee447700ac8aa0b2f2bd7bc4462ad686ba06baa6727ac149a2d6277f0d240fd\"\ndependencies = [\n \"cfg-if\",\n \"libc\",\n \"redox_syscall 0.4.1\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"fixedbitset\"\nversion = \"0.4.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0ce7134b9999ecaf8bcd65542e436736ef32ddca1b3e06094cb6ec5755203b80\"\n\n[[package]]\nname = \"foreign-types\"\nversion = \"0.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d737d9aa519fb7b749cbc3b962edcf310a8dd1f4b67c91c4f83975dbdd17d965\"\ndependencies = [\n \"foreign-types-macros\",\n \"foreign-types-shared\",\n]\n\n[[package]]\nname = \"foreign-types-macros\"\nversion = \"0.2.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1a5c6c585bc94aaf2c7b51dd4c2ba22680844aba4c687be581871a6f518c5742\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.48\",\n]\n\n[[package]]\nname = \"foreign-types-shared\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"aa9a19cbb55df58761df49b23516a86d432839add4af60fc256da840f66ed35b\"\n\n[[package]]\nname = \"fsevent-sys\"\nversion = \"4.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"76ee7a02da4d231650c7cea31349b889be2f45ddb3ef3032d2ec8185f6313fd2\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"futures\"\nversion = \"0.3.30\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"645c6916888f6cb6350d2550b80fb63e734897a8498abe35cfb732b6487804b0\"\ndependencies = [\n \"futures-channel\",\n \"futures-core\",\n \"futures-executor\",\n \"futures-io\",\n \"futures-sink\",\n \"futures-task\",\n \"futures-util\",\n]\n\n[[package]]\nname = \"futures-channel\"\nversion = \"0.3.30\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"eac8f7d7865dcb88bd4373ab671c8cf4508703796caa2b1985a9ca867b3fcb78\"\ndependencies = [\n \"futures-core\",\n \"futures-sink\",\n]\n\n[[package]]\nname = \"futures-core\"\nversion = \"0.3.30\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dfc6580bb841c5a68e9ef15c77ccc837b40a7504914d52e47b8b0e9bbda25a1d\"\n\n[[package]]\nname = \"futures-executor\"\nversion = \"0.3.30\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a576fc72ae164fca6b9db127eaa9a9dda0d61316034f33a0a0d4eda41f02b01d\"\ndependencies = [\n \"futures-core\",\n \"futures-task\",\n \"futures-util\",\n]\n\n[[package]]\nname = \"futures-io\"\nversion = \"0.3.30\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a44623e20b9681a318efdd71c299b6b222ed6f231972bfe2f224ebad6311f0c1\"\n\n[[package]]\nname = \"futures-macro\"\nversion = \"0.3.30\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"87750cf4b7a4c0625b1529e4c543c2182106e4dedc60a2a6455e00d212c489ac\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.48\",\n]\n\n[[package]]\nname = \"futures-sink\"\nversion = \"0.3.30\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9fb8e00e87438d937621c1c6269e53f536c14d3fbd6a042bb24879e57d474fb5\"\n\n[[package]]\nname = \"futures-task\"\nversion = \"0.3.30\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"38d84fa142264698cdce1a9f9172cf383a0c82de1bddcf3092901442c4097004\"\n\n[[package]]\nname = \"futures-util\"\nversion = \"0.3.30\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3d6401deb83407ab3da39eba7e33987a73c3df0c82b4bb5813ee871c19c41d48\"\ndependencies = [\n \"futures-channel\",\n \"futures-core\",\n \"futures-io\",\n \"futures-macro\",\n \"futures-sink\",\n \"futures-task\",\n \"memchr\",\n \"pin-project-lite\",\n \"pin-utils\",\n \"slab\",\n]\n\n[[package]]\nname = \"fxhash\"\nversion = \"0.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c31b6d751ae2c7f11320402d34e41349dd1016f8d5d45e48c4312bc8625af50c\"\ndependencies = [\n \"byteorder\",\n]\n\n[[package]]\nname = \"gethostname\"\nversion = \"0.4.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0176e0459c2e4a1fe232f984bca6890e681076abb9934f6cea7c326f3fc47818\"\ndependencies = [\n \"libc\",\n \"windows-targets 0.48.5\",\n]\n\n[[package]]\nname = \"getopts\"\nversion = \"0.2.21\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"14dbbfd5c71d70241ecf9e6f13737f7b5ce823821063188d7e46c41d371eebd5\"\ndependencies = [\n \"unicode-width\",\n]\n\n[[package]]\nname = \"getrandom\"\nversion = \"0.2.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"190092ea657667030ac6a35e305e62fc4dd69fd98ac98631e5d3a2b1575a12b5\"\ndependencies = [\n \"cfg-if\",\n \"libc\",\n \"wasi\",\n]\n\n[[package]]\nname = \"gl_generator\"\nversion = \"0.14.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1a95dfc23a2b4a9a2f5ab41d194f8bfda3cabec42af4e39f08c339eb2a0c124d\"\ndependencies = [\n \"khronos_api\",\n \"log\",\n \"xml-rs\",\n]\n\n[[package]]\nname = \"glam\"\nversion = \"0.29.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c28091a37a5d09b555cb6628fd954da299b536433834f5b8e59eba78e0cbbf8a\"\ndependencies = [\n \"libm\",\n]\n\n[[package]]\nname = \"glow\"\nversion = \"0.13.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bd348e04c43b32574f2de31c8bb397d96c9fcfa1371bd4ca6d8bdc464ab121b1\"\ndependencies = [\n \"js-sys\",\n \"slotmap\",\n \"wasm-bindgen\",\n \"web-sys\",\n]\n\n[[package]]\nname = \"glutin_wgl_sys\"\nversion = \"0.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0a4e1951bbd9434a81aa496fe59ccc2235af3820d27b85f9314e279609211e2c\"\ndependencies = [\n \"gl_generator\",\n]\n\n[[package]]\nname = \"gpu-alloc\"\nversion = \"0.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fbcd2dba93594b227a1f57ee09b8b9da8892c34d55aa332e034a228d0fe6a171\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"gpu-alloc-types\",\n]\n\n[[package]]\nname = \"gpu-alloc-types\"\nversion = \"0.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"98ff03b468aa837d70984d55f5d3f846f6ec31fe34bbb97c4f85219caeee1ca4\"\ndependencies = [\n \"bitflags 2.6.0\",\n]\n\n[[package]]\nname = \"gpu-allocator\"\nversion = \"0.26.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fdd4240fc91d3433d5e5b0fc5b67672d771850dc19bbee03c1381e19322803d7\"\ndependencies = [\n \"log\",\n \"presser\",\n \"thiserror\",\n \"winapi\",\n \"windows\",\n]\n\n[[package]]\nname = \"gpu-descriptor\"\nversion = \"0.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9c08c1f623a8d0b722b8b99f821eb0ba672a1618f0d3b16ddbee1cedd2dd8557\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"gpu-descriptor-types\",\n \"hashbrown 0.14.3\",\n]\n\n[[package]]\nname = \"gpu-descriptor-types\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fdf242682df893b86f33a73828fb09ca4b2d3bb6cc95249707fc684d27484b91\"\ndependencies = [\n \"bitflags 2.6.0\",\n]\n\n[[package]]\nname = \"hashbrown\"\nversion = \"0.11.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ab5ef0d4909ef3724cc8cce6ccc8572c5c817592e9285f5464f8e86f8bd3726e\"\ndependencies = [\n \"ahash 0.7.7\",\n]\n\n[[package]]\nname = \"hashbrown\"\nversion = \"0.12.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8a9ee70c43aaf417c914396645a0fa852624801b24ebb7ae78fe8272889ac888\"\n\n[[package]]\nname = \"hashbrown\"\nversion = \"0.14.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"290f1a1d9242c78d09ce40a5e87e7554ee637af1351968159f4952f028f75604\"\ndependencies = [\n \"ahash 0.8.7\",\n \"allocator-api2\",\n]\n\n[[package]]\nname = \"hassle-rs\"\nversion = \"0.11.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"af2a7e73e1f34c48da31fb668a907f250794837e08faa144fd24f0b8b741e890\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"com\",\n \"libc\",\n \"libloading 0.8.1\",\n \"thiserror\",\n \"widestring\",\n \"winapi\",\n]\n\n[[package]]\nname = \"heck\"\nversion = \"0.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"95505c38b4572b2d910cecb0281560f54b440a19336cbbcb27bf6ce6adc6f5a8\"\n\n[[package]]\nname = \"hermit-abi\"\nversion = \"0.3.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5d3d0e0f38255e7fa3cf31335b3a56f05febd18025f4db5ef7a0cfb4f8da651f\"\n\n[[package]]\nname = \"hexf-parse\"\nversion = \"0.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dfa686283ad6dd069f105e5ab091b04c62850d3e4cf5d67debad1933f55023df\"\n\n[[package]]\nname = \"humantime\"\nversion = \"2.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9a3a5bfb195931eeb336b2a7b4d761daec841b97f947d34394601737a7bba5e4\"\n\n[[package]]\nname = \"icrate\"\nversion = \"0.0.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"99d3aaff8a54577104bafdf686ff18565c3b6903ca5782a2026ef06e2c7aa319\"\ndependencies = [\n \"block2\",\n \"dispatch\",\n \"objc2\",\n]\n\n[[package]]\nname = \"indexmap\"\nversion = \"1.9.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bd070e393353796e801d209ad339e89596eb4c8d430d18ede6a1cced8fafbd99\"\ndependencies = [\n \"autocfg\",\n \"hashbrown 0.12.3\",\n]\n\n[[package]]\nname = \"indexmap\"\nversion = \"2.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d530e1a18b1cb4c484e6e34556a0d948706958449fca0cab753d649f2bce3d1f\"\ndependencies = [\n \"equivalent\",\n \"hashbrown 0.14.3\",\n]\n\n[[package]]\nname = \"inotify\"\nversion = \"0.9.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f8069d3ec154eb856955c1c0fbffefbf5f3c40a104ec912d4797314c1801abff\"\ndependencies = [\n \"bitflags 1.3.2\",\n \"inotify-sys\",\n \"libc\",\n]\n\n[[package]]\nname = \"inotify-sys\"\nversion = \"0.1.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e05c02b5e89bff3b946cedeca278abc628fe811e604f027c45a8aa3cf793d0eb\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"instant\"\nversion = \"0.1.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7a5bbe824c507c5da5956355e86a746d82e0e1464f65d862cc5e71da70e94b2c\"\ndependencies = [\n \"cfg-if\",\n \"js-sys\",\n \"wasm-bindgen\",\n \"web-sys\",\n]\n\n[[package]]\nname = \"internal-iterator\"\nversion = \"0.2.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"969ee3fc68ec2e88eb21434ce4d9b7e1600d1ce92ff974560a6c4a304f5124b9\"\n\n[[package]]\nname = \"itertools\"\nversion = \"0.10.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b0fd2260e829bddf4cb6ea802289de2f86d6a7a690192fbe91b3f46e0f2c8473\"\ndependencies = [\n \"either\",\n]\n\n[[package]]\nname = \"itoa\"\nversion = \"1.0.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b1a46d1a171d865aa5f83f92695765caa047a9b4cbae2cbf37dbd613a793fd4c\"\n\n[[package]]\nname = \"jni\"\nversion = \"0.21.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1a87aa2bb7d2af34197c04845522473242e1aa17c12f4935d5856491a7fb8c97\"\ndependencies = [\n \"cesu8\",\n \"cfg-if\",\n \"combine\",\n \"jni-sys\",\n \"log\",\n \"thiserror\",\n \"walkdir\",\n \"windows-sys 0.45.0\",\n]\n\n[[package]]\nname = \"jni-sys\"\nversion = \"0.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8eaf4bc02d17cbdd7ff4c7438cafcdf7fb9a4613313ad11b4f8fefe7d3fa0130\"\n\n[[package]]\nname = \"jobserver\"\nversion = \"0.1.27\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8c37f63953c4c63420ed5fd3d6d398c719489b9f872b9fa683262f8edd363c7d\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"js-sys\"\nversion = \"0.3.70\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1868808506b929d7b0cfa8f75951347aa71bb21144b7791bae35d9bccfcfe37a\"\ndependencies = [\n \"wasm-bindgen\",\n]\n\n[[package]]\nname = \"khronos-egl\"\nversion = \"6.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6aae1df220ece3c0ada96b8153459b67eebe9ae9212258bb0134ae60416fdf76\"\ndependencies = [\n \"libc\",\n \"libloading 0.8.1\",\n \"pkg-config\",\n]\n\n[[package]]\nname = \"khronos_api\"\nversion = \"3.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e2db585e1d738fc771bf08a151420d3ed193d9d895a36df7f6f8a9456b911ddc\"\n\n[[package]]\nname = \"kqueue\"\nversion = \"1.0.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7447f1ca1b7b563588a205fe93dea8df60fd981423a768bc1c0ded35ed147d0c\"\ndependencies = [\n \"kqueue-sys\",\n \"libc\",\n]\n\n[[package]]\nname = \"kqueue-sys\"\nversion = \"1.0.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ed9625ffda8729b85e45cf04090035ac368927b8cebc34898e7c120f52e4838b\"\ndependencies = [\n \"bitflags 1.3.2\",\n \"libc\",\n]\n\n[[package]]\nname = \"lazy_static\"\nversion = \"1.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e2abad23fbc42b3700f2f279844dc832adb2b2eb069b2df918f455c4e18cc646\"\n\n[[package]]\nname = \"libc\"\nversion = \"0.2.152\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"13e3bf6590cbc649f4d1a3eefc9d5d6eb746f5200ffb04e5e142700b8faa56e7\"\n\n[[package]]\nname = \"libloading\"\nversion = \"0.7.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b67380fd3b2fbe7527a606e18729d21c6f3951633d0500574c4dc22d2d638b9f\"\ndependencies = [\n \"cfg-if\",\n \"winapi\",\n]\n\n[[package]]\nname = \"libloading\"\nversion = \"0.8.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c571b676ddfc9a8c12f1f3d3085a7b163966a8fd8098a90640953ce5f6170161\"\ndependencies = [\n \"cfg-if\",\n \"windows-sys 0.48.0\",\n]\n\n[[package]]\nname = \"libm\"\nversion = \"0.2.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4ec2a862134d2a7d32d7983ddcdd1c4923530833c9f2ea1a44fc5fa473989058\"\n\n[[package]]\nname = \"libredox\"\nversion = \"0.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"85c833ca1e66078851dba29046874e38f08b2c883700aa29a03ddd3b23814ee8\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"libc\",\n \"redox_syscall 0.4.1\",\n]\n\n[[package]]\nname = \"libredox\"\nversion = \"0.0.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3af92c55d7d839293953fcd0fda5ecfe93297cfde6ffbdec13b41d99c0ba6607\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"libc\",\n \"redox_syscall 0.4.1\",\n]\n\n[[package]]\nname = \"line-wrap\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f30344350a2a51da54c1d53be93fade8a237e545dbcc4bdbe635413f2117cab9\"\ndependencies = [\n \"safemem\",\n]\n\n[[package]]\nname = \"linux-raw-sys\"\nversion = \"0.4.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"01cda141df6706de531b6c46c3a33ecca755538219bd484262fa09410c13539c\"\n\n[[package]]\nname = \"litrs\"\nversion = \"0.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b4ce301924b7887e9d637144fdade93f9dfff9b60981d4ac161db09720d39aa5\"\n\n[[package]]\nname = \"lock_api\"\nversion = \"0.4.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3c168f8615b12bc01f9c17e2eb0cc07dcae1940121185446edc3744920e8ef45\"\ndependencies = [\n \"autocfg\",\n \"scopeguard\",\n]\n\n[[package]]\nname = \"log\"\nversion = \"0.4.20\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b5e6163cb8c49088c2c36f57875e58ccd8c87c7427f7fbd50ea6710b2f3f2e8f\"\n\n[[package]]\nname = \"longest-increasing-subsequence\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b3bd0dd2cd90571056fdb71f6275fada10131182f84899f4b2a916e565d81d86\"\n\n[[package]]\nname = \"malloc_buf\"\nversion = \"0.0.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"62bb907fe88d54d8d9ce32a3cceab4218ed2f6b7d35617cafe9adf84e43919cb\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"memchr\"\nversion = \"2.7.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"523dc4f511e55ab87b694dc30d0f820d60906ef06413f93d4d7a1385599cc149\"\n\n[[package]]\nname = \"memmap2\"\nversion = \"0.9.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"45fd3a57831bf88bc63f8cebc0cf956116276e97fef3966103e96416209f7c92\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"memoffset\"\nversion = \"0.6.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5aa361d4faea93603064a027415f07bd8e1d5c88c9fbf68bf56a285428fd79ce\"\ndependencies = [\n \"autocfg\",\n]\n\n[[package]]\nname = \"memoffset\"\nversion = \"0.7.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5de893c32cde5f383baa4c04c5d6dbdd735cfd4a794b0debdb2bb1b421da5ff4\"\ndependencies = [\n \"autocfg\",\n]\n\n[[package]]\nname = \"metal\"\nversion = \"0.29.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7ecfd3296f8c56b7c1f6fbac3c71cefa9d78ce009850c45000015f206dc7fa21\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"block\",\n \"core-graphics-types\",\n \"foreign-types\",\n \"log\",\n \"objc\",\n \"paste\",\n]\n\n[[package]]\nname = \"minifb\"\nversion = \"0.25.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"05eddefadb505d3dcb66a89fa77dd0936e72ec84e891cc8fc36e3c05bfe61103\"\ndependencies = [\n \"cc\",\n \"dlib\",\n \"futures\",\n \"instant\",\n \"js-sys\",\n \"lazy_static\",\n \"libc\",\n \"orbclient\",\n \"raw-window-handle 0.4.3\",\n \"serde\",\n \"serde_derive\",\n \"tempfile\",\n \"wasm-bindgen-futures\",\n \"wayland-client 0.29.5\",\n \"wayland-cursor 0.29.5\",\n \"wayland-protocols 0.29.5\",\n \"winapi\",\n \"x11-dl\",\n]\n\n[[package]]\nname = \"mio\"\nversion = \"0.8.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a4a650543ca06a924e8b371db273b2756685faae30f8487da1b56505a8f78b0c\"\ndependencies = [\n \"libc\",\n \"log\",\n \"wasi\",\n \"windows-sys 0.48.0\",\n]\n\n[[package]]\nname = \"miow\"\nversion = \"0.3.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b9f1c5b025cda876f66ef43a113f91ebc9f4ccef34843000e0adf6ebbab84e21\"\ndependencies = [\n \"winapi\",\n]\n\n[[package]]\nname = \"mouse-shader\"\nversion = \"0.0.0\"\ndependencies = [\n \"shared\",\n \"spirv-std\",\n]\n\n[[package]]\nname = \"multibuilder\"\nversion = \"0.0.0\"\ndependencies = [\n \"spirv-builder\",\n]\n\n[[package]]\nname = \"naga\"\nversion = \"22.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8bd5a652b6faf21496f2cfd88fc49989c8db0825d1f6746b1a71a6ede24a63ad\"\ndependencies = [\n \"arrayvec\",\n \"bit-set\",\n \"bitflags 2.6.0\",\n \"cfg_aliases\",\n \"codespan-reporting\",\n \"hexf-parse\",\n \"indexmap 2.1.0\",\n \"log\",\n \"petgraph\",\n \"rustc-hash\",\n \"spirv 0.3.0+sdk-1.3.268.0\",\n \"termcolor\",\n \"thiserror\",\n \"unicode-xid\",\n]\n\n[[package]]\nname = \"ndk\"\nversion = \"0.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2076a31b7010b17a38c01907c45b945e8f11495ee4dd588309718901b1f7a5b7\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"jni-sys\",\n \"log\",\n \"ndk-sys\",\n \"num_enum\",\n \"raw-window-handle 0.5.2\",\n \"raw-window-handle 0.6.0\",\n \"thiserror\",\n]\n\n[[package]]\nname = \"ndk-context\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"27b02d87554356db9e9a873add8782d4ea6e3e58ea071a9adb9a2e8ddb884a8b\"\n\n[[package]]\nname = \"ndk-sys\"\nversion = \"0.5.0+25.2.9519653\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8c196769dd60fd4f363e11d948139556a344e79d451aeb2fa2fd040738ef7691\"\ndependencies = [\n \"jni-sys\",\n]\n\n[[package]]\nname = \"nix\"\nversion = \"0.24.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fa52e972a9a719cecb6864fb88568781eb706bac2cd1d4f04a648542dbf78069\"\ndependencies = [\n \"bitflags 1.3.2\",\n \"cfg-if\",\n \"libc\",\n \"memoffset 0.6.5\",\n]\n\n[[package]]\nname = \"nix\"\nversion = \"0.26.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"598beaf3cc6fdd9a5dfb1630c2800c7acd31df7aaf0f565796fba2b53ca1af1b\"\ndependencies = [\n \"bitflags 1.3.2\",\n \"cfg-if\",\n \"libc\",\n \"memoffset 0.7.1\",\n]\n\n[[package]]\nname = \"notify\"\nversion = \"5.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"729f63e1ca555a43fe3efa4f3efdf4801c479da85b432242a7b726f353c88486\"\ndependencies = [\n \"bitflags 1.3.2\",\n \"crossbeam-channel\",\n \"filetime\",\n \"fsevent-sys\",\n \"inotify\",\n \"kqueue\",\n \"libc\",\n \"mio\",\n \"walkdir\",\n \"windows-sys 0.45.0\",\n]\n\n[[package]]\nname = \"num-traits\"\nversion = \"0.2.17\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"39e3200413f237f41ab11ad6d161bc7239c84dcb631773ccd7de3dfe4b5c267c\"\ndependencies = [\n \"autocfg\",\n \"libm\",\n]\n\n[[package]]\nname = \"num_cpus\"\nversion = \"1.16.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4161fcb6d602d4d2081af7c3a45852d875a03dd337a6bfdd6e06407b61342a43\"\ndependencies = [\n \"hermit-abi\",\n \"libc\",\n]\n\n[[package]]\nname = \"num_enum\"\nversion = \"0.7.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"02339744ee7253741199f897151b38e72257d13802d4ee837285cc2990a90845\"\ndependencies = [\n \"num_enum_derive\",\n]\n\n[[package]]\nname = \"num_enum_derive\"\nversion = \"0.7.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"681030a937600a36906c185595136d26abfebb4aa9c65701cefcaf8578bb982b\"\ndependencies = [\n \"proc-macro-crate\",\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.48\",\n]\n\n[[package]]\nname = \"objc\"\nversion = \"0.2.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"915b1b472bc21c53464d6c8461c9d3af805ba1ef837e1cac254428f4a77177b1\"\ndependencies = [\n \"malloc_buf\",\n]\n\n[[package]]\nname = \"objc-sys\"\nversion = \"0.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c7c71324e4180d0899963fc83d9d241ac39e699609fc1025a850aadac8257459\"\n\n[[package]]\nname = \"objc2\"\nversion = \"0.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"559c5a40fdd30eb5e344fbceacf7595a81e242529fb4e21cf5f43fb4f11ff98d\"\ndependencies = [\n \"objc-sys\",\n \"objc2-encode\",\n]\n\n[[package]]\nname = \"objc2-encode\"\nversion = \"3.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d079845b37af429bfe5dfa76e6d087d788031045b25cfc6fd898486fd9847666\"\n\n[[package]]\nname = \"once_cell\"\nversion = \"1.19.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3fdb12b2476b595f9358c5161aa467c2438859caa136dec86c26fdd2efe17b92\"\n\n[[package]]\nname = \"orbclient\"\nversion = \"0.3.47\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"52f0d54bde9774d3a51dcf281a5def240c71996bc6ca05d2c847ec8b2b216166\"\ndependencies = [\n \"libc\",\n \"libredox 0.0.2\",\n \"sdl2\",\n \"sdl2-sys\",\n]\n\n[[package]]\nname = \"owned_ttf_parser\"\nversion = \"0.20.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d4586edfe4c648c71797a74c84bacb32b52b212eff5dfe2bb9f2c599844023e7\"\ndependencies = [\n \"ttf-parser\",\n]\n\n[[package]]\nname = \"parking_lot\"\nversion = \"0.12.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3742b2c103b9f06bc9fff0a37ff4912935851bee6d36f3c02bcc755bcfec228f\"\ndependencies = [\n \"lock_api\",\n \"parking_lot_core\",\n]\n\n[[package]]\nname = \"parking_lot_core\"\nversion = \"0.9.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4c42a9226546d68acdd9c0a280d17ce19bfe27a46bf68784e4066115788d008e\"\ndependencies = [\n \"cfg-if\",\n \"libc\",\n \"redox_syscall 0.4.1\",\n \"smallvec\",\n \"windows-targets 0.48.5\",\n]\n\n[[package]]\nname = \"paste\"\nversion = \"1.0.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"de3145af08024dea9fa9914f381a17b8fc6034dfb00f3a84013f7ff43f29ed4c\"\n\n[[package]]\nname = \"percent-encoding\"\nversion = \"2.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e3148f5046208a5d56bcfc03053e3ca6334e51da8dfb19b6cdc8b306fae3283e\"\n\n[[package]]\nname = \"petgraph\"\nversion = \"0.6.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e1d3afd2628e69da2be385eb6f2fd57c8ac7977ceeff6dc166ff1657b0e386a9\"\ndependencies = [\n \"fixedbitset\",\n \"indexmap 2.1.0\",\n]\n\n[[package]]\nname = \"pin-project-lite\"\nversion = \"0.2.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8afb450f006bf6385ca15ef45d71d2288452bc3683ce2e2cacc0d18e4be60b58\"\n\n[[package]]\nname = \"pin-utils\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8b870d8c151b6f2fb93e84a13146138f05d02ed11c7e7c54f8826aaaf7c9f184\"\n\n[[package]]\nname = \"pipe\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1c7b8f27da217eb966df4c58d4159ea939431950ca03cf782c22bd7c5c1d8d75\"\ndependencies = [\n \"crossbeam-channel\",\n]\n\n[[package]]\nname = \"pkg-config\"\nversion = \"0.3.29\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2900ede94e305130c13ddd391e0ab7cbaeb783945ae07a279c268cb05109c6cb\"\n\n[[package]]\nname = \"plist\"\nversion = \"1.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e5699cc8a63d1aa2b1ee8e12b9ad70ac790d65788cd36101fa37f87ea46c4cef\"\ndependencies = [\n \"base64\",\n \"indexmap 2.1.0\",\n \"line-wrap\",\n \"quick-xml 0.31.0\",\n \"serde\",\n \"time\",\n]\n\n[[package]]\nname = \"polling\"\nversion = \"3.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"545c980a3880efd47b2e262f6a4bb6daad6555cf3367aa9c4e52895f69537a41\"\ndependencies = [\n \"cfg-if\",\n \"concurrent-queue\",\n \"pin-project-lite\",\n \"rustix\",\n \"tracing\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"powerfmt\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"439ee305def115ba05938db6eb1644ff94165c5ab5e9420d1c1bcedbba909391\"\n\n[[package]]\nname = \"presser\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e8cf8e6a8aa66ce33f63993ffc4ea4271eb5b0530a9002db8455ea6050c77bfa\"\n\n[[package]]\nname = \"pretty_assertions\"\nversion = \"1.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"af7cee1a6c8a5b9208b3cb1061f10c0cb689087b3d8ce85fb9d2dd7a29b6ba66\"\ndependencies = [\n \"diff\",\n \"yansi\",\n]\n\n[[package]]\nname = \"proc-macro-crate\"\nversion = \"3.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6d37c51ca738a55da99dc0c4a34860fd675453b8b36209178c2249bb13651284\"\ndependencies = [\n \"toml_edit\",\n]\n\n[[package]]\nname = \"proc-macro2\"\nversion = \"1.0.78\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e2422ad645d89c99f8f3e6b88a9fdeca7fabeac836b1002371c4367c8f984aae\"\ndependencies = [\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"profiling\"\nversion = \"1.0.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d135ede8821cf6376eb7a64148901e1690b788c11ae94dc297ae917dbc91dc0e\"\n\n[[package]]\nname = \"quick-xml\"\nversion = \"0.30.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"eff6510e86862b57b210fd8cbe8ed3f0d7d600b9c2863cd4549a2e033c66e956\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"quick-xml\"\nversion = \"0.31.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1004a344b30a54e2ee58d66a71b32d2db2feb0a31f9a2d302bf0536f15de2a33\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"quote\"\nversion = \"1.0.35\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"291ec9ab5efd934aaf503a6466c5d5251535d108ee747472c3977cc5acc868ef\"\ndependencies = [\n \"proc-macro2\",\n]\n\n[[package]]\nname = \"range-alloc\"\nversion = \"0.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9c8a99fddc9f0ba0a85884b8d14e3592853e787d581ca1816c91349b10e4eeab\"\n\n[[package]]\nname = \"raw-string\"\nversion = \"0.3.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e0501e134c6905fee1f10fed25b0a7e1261bf676cffac9543a7d0730dec01af2\"\n\n[[package]]\nname = \"raw-window-handle\"\nversion = \"0.4.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b800beb9b6e7d2df1fe337c9e3d04e3af22a124460fb4c30fcc22c9117cefb41\"\ndependencies = [\n \"cty\",\n]\n\n[[package]]\nname = \"raw-window-handle\"\nversion = \"0.5.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f2ff9a1f06a88b01621b7ae906ef0211290d1c8a168a15542486a8f61c0833b9\"\n\n[[package]]\nname = \"raw-window-handle\"\nversion = \"0.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"42a9830a0e1b9fb145ebb365b8bc4ccd75f290f98c0247deafbbe2c75cefb544\"\n\n[[package]]\nname = \"raw-window-metal\"\nversion = \"0.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ac4ea493258d54c24cb46aa9345d099e58e2ea3f30dd63667fc54fc892f18e76\"\ndependencies = [\n \"cocoa\",\n \"core-graphics\",\n \"objc\",\n \"raw-window-handle 0.5.2\",\n]\n\n[[package]]\nname = \"rayon\"\nversion = \"1.8.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fa7237101a77a10773db45d62004a272517633fbcc3df19d96455ede1122e051\"\ndependencies = [\n \"either\",\n \"rayon-core\",\n]\n\n[[package]]\nname = \"rayon-core\"\nversion = \"1.12.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1465873a3dfdaa8ae7cb14b4383657caab0b3e8a0aa9ae8e04b044854c8dfce2\"\ndependencies = [\n \"crossbeam-deque\",\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"redox_syscall\"\nversion = \"0.3.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"567664f262709473930a4bf9e51bf2ebf3348f2e748ccc50dea20646858f8f29\"\ndependencies = [\n \"bitflags 1.3.2\",\n]\n\n[[package]]\nname = \"redox_syscall\"\nversion = \"0.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4722d768eff46b75989dd134e5c353f0d6296e5aaa3132e776cbdb56be7731aa\"\ndependencies = [\n \"bitflags 1.3.2\",\n]\n\n[[package]]\nname = \"redox_users\"\nversion = \"0.4.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a18479200779601e498ada4e8c1e1f50e3ee19deb0259c25825a98b5603b2cb4\"\ndependencies = [\n \"getrandom\",\n \"libredox 0.0.1\",\n \"thiserror\",\n]\n\n[[package]]\nname = \"reduce\"\nversion = \"0.0.0\"\ndependencies = [\n \"spirv-std\",\n]\n\n[[package]]\nname = \"regex\"\nversion = \"1.10.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b62dbe01f0b06f9d8dc7d49e05a0785f153b00b2c227856282f671e0318c9b15\"\ndependencies = [\n \"aho-corasick\",\n \"memchr\",\n \"regex-automata\",\n \"regex-syntax\",\n]\n\n[[package]]\nname = \"regex-automata\"\nversion = \"0.4.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3b7fa1134405e2ec9353fd416b17f8dacd46c473d7d3fd1cf202706a14eb792a\"\ndependencies = [\n \"aho-corasick\",\n \"memchr\",\n \"regex-syntax\",\n]\n\n[[package]]\nname = \"regex-syntax\"\nversion = \"0.8.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c08c74e62047bb2de4ff487b251e4a92e24f48745648451635cec7d591162d9f\"\n\n[[package]]\nname = \"renderdoc-sys\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"19b30a45b0cd0bcca8037f3d0dc3421eaf95327a17cad11964fb8179b4fc4832\"\n\n[[package]]\nname = \"rspirv\"\nversion = \"0.11.0+1.5.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1503993b59ca9ae4127365c3293517576d7ce56be9f3d8abb1625c85ddc583ba\"\ndependencies = [\n \"fxhash\",\n \"num-traits\",\n \"spirv 0.2.0+1.5.4\",\n]\n\n[[package]]\nname = \"rustc-demangle\"\nversion = \"0.1.23\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d626bb9dae77e28219937af045c257c28bfd3f69333c512553507f5f9798cb76\"\n\n[[package]]\nname = \"rustc-hash\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"08d43f7aa6b08d49f382cde6a7982047c3426db949b1424bc4b7ec9ae12c6ce2\"\n\n[[package]]\nname = \"rustc_codegen_spirv\"\nversion = \"0.9.0\"\ndependencies = [\n \"ar\",\n \"either\",\n \"hashbrown 0.11.2\",\n \"indexmap 1.9.3\",\n \"itertools\",\n \"lazy_static\",\n \"libc\",\n \"num-traits\",\n \"once_cell\",\n \"pipe\",\n \"pretty_assertions\",\n \"regex\",\n \"rspirv\",\n \"rustc-demangle\",\n \"rustc_codegen_spirv-types\",\n \"sanitize-filename\",\n \"serde\",\n \"serde_json\",\n \"smallvec\",\n \"spirt\",\n \"spirv-tools\",\n \"syn 1.0.109\",\n \"tempfile\",\n]\n\n[[package]]\nname = \"rustc_codegen_spirv-types\"\nversion = \"0.9.0\"\ndependencies = [\n \"rspirv\",\n \"serde\",\n]\n\n[[package]]\nname = \"rustc_version\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bfa0f585226d2e68097d4f95d113b15b83a82e819ab25717ec0590d9584ef366\"\ndependencies = [\n \"semver\",\n]\n\n[[package]]\nname = \"rustfix\"\nversion = \"0.6.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ecd2853d9e26988467753bd9912c3a126f642d05d229a4b53f5752ee36c56481\"\ndependencies = [\n \"anyhow\",\n \"log\",\n \"serde\",\n \"serde_json\",\n]\n\n[[package]]\nname = \"rustix\"\nversion = \"0.38.30\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"322394588aaf33c24007e8bb3238ee3e4c5c09c084ab32bc73890b99ff326bca\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"errno\",\n \"libc\",\n \"linux-raw-sys\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"rustversion\"\nversion = \"1.0.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7ffc183a10b4478d04cbbbfc96d0873219d962dd5accaff2ffbd4ceb7df837f4\"\n\n[[package]]\nname = \"ryu\"\nversion = \"1.0.16\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f98d2aa92eebf49b69786be48e4477826b256916e84a57ff2a4f21923b48eb4c\"\n\n[[package]]\nname = \"safemem\"\nversion = \"0.3.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ef703b7cb59335eae2eb93ceb664c0eb7ea6bf567079d843e09420219668e072\"\n\n[[package]]\nname = \"same-file\"\nversion = \"1.0.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"93fc1dc3aaa9bfed95e02e6eadabb4baf7e3078b0bd1b4d7b6b0b68378900502\"\ndependencies = [\n \"winapi-util\",\n]\n\n[[package]]\nname = \"sanitize-filename\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"08c502bdb638f1396509467cb0580ef3b29aa2a45c5d43e5d84928241280296c\"\ndependencies = [\n \"lazy_static\",\n \"regex\",\n]\n\n[[package]]\nname = \"scoped-tls\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e1cf6437eb19a8f4a6cc0f7dca544973b0b78843adbfeb3683d1a94a0024a294\"\n\n[[package]]\nname = \"scopeguard\"\nversion = \"1.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"94143f37725109f92c262ed2cf5e59bce7498c01bcc1502d7b9afe439a4e9f49\"\n\n[[package]]\nname = \"sctk-adwaita\"\nversion = \"0.8.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"82b2eaf3a5b264a521b988b2e73042e742df700c4f962cde845d1541adb46550\"\ndependencies = [\n \"ab_glyph\",\n \"log\",\n \"memmap2\",\n \"smithay-client-toolkit\",\n \"tiny-skia\",\n]\n\n[[package]]\nname = \"sdl2\"\nversion = \"0.35.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f7959277b623f1fb9e04aea73686c3ca52f01b2145f8ea16f4ff30d8b7623b1a\"\ndependencies = [\n \"bitflags 1.3.2\",\n \"lazy_static\",\n \"libc\",\n \"sdl2-sys\",\n]\n\n[[package]]\nname = \"sdl2-sys\"\nversion = \"0.35.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e3586be2cf6c0a8099a79a12b4084357aa9b3e0b0d7980e3b67aaf7a9d55f9f0\"\ndependencies = [\n \"cfg-if\",\n \"libc\",\n \"version-compare\",\n]\n\n[[package]]\nname = \"semver\"\nversion = \"1.0.21\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b97ed7a9823b74f99c7742f5336af7be5ecd3eeafcb1507d1fa93347b1d589b0\"\n\n[[package]]\nname = \"serde\"\nversion = \"1.0.195\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"63261df402c67811e9ac6def069e4786148c4563f4b50fd4bf30aa370d626b02\"\ndependencies = [\n \"serde_derive\",\n]\n\n[[package]]\nname = \"serde_derive\"\nversion = \"1.0.195\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"46fe8f8603d81ba86327b23a2e9cdf49e1255fb94a4c5f297f6ee0547178ea2c\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.48\",\n]\n\n[[package]]\nname = \"serde_json\"\nversion = \"1.0.111\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"176e46fa42316f18edd598015a5166857fc835ec732f5215eac6b7bdbf0a84f4\"\ndependencies = [\n \"itoa\",\n \"ryu\",\n \"serde\",\n]\n\n[[package]]\nname = \"shared\"\nversion = \"0.0.0\"\ndependencies = [\n \"bytemuck\",\n \"spirv-std\",\n]\n\n[[package]]\nname = \"simplest-shader\"\nversion = \"0.0.0\"\ndependencies = [\n \"shared\",\n \"spirv-std\",\n]\n\n[[package]]\nname = \"sky-shader\"\nversion = \"0.0.0\"\ndependencies = [\n \"shared\",\n \"spirv-std\",\n]\n\n[[package]]\nname = \"slab\"\nversion = \"0.4.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8f92a496fb766b417c996b9c5e57daf2f7ad3b0bebe1ccfca4856390e3d3bb67\"\ndependencies = [\n \"autocfg\",\n]\n\n[[package]]\nname = \"slotmap\"\nversion = \"1.0.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dbff4acf519f630b3a3ddcfaea6c06b42174d9a44bc70c620e9ed1649d58b82a\"\ndependencies = [\n \"version_check\",\n]\n\n[[package]]\nname = \"smallvec\"\nversion = \"1.13.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e6ecd384b10a64542d77071bd64bd7b231f4ed5940fba55e98c3de13824cf3d7\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"smithay-client-toolkit\"\nversion = \"0.18.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"60e3d9941fa3bacf7c2bf4b065304faa14164151254cd16ce1b1bc8fc381600f\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"calloop\",\n \"calloop-wayland-source\",\n \"cursor-icon\",\n \"libc\",\n \"log\",\n \"memmap2\",\n \"rustix\",\n \"thiserror\",\n \"wayland-backend\",\n \"wayland-client 0.31.1\",\n \"wayland-csd-frame\",\n \"wayland-cursor 0.31.0\",\n \"wayland-protocols 0.31.0\",\n \"wayland-protocols-wlr\",\n \"wayland-scanner 0.31.0\",\n \"xkeysym\",\n]\n\n[[package]]\nname = \"smol_str\"\nversion = \"0.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e6845563ada680337a52d43bb0b29f396f2d911616f6573012645b9e3d048a49\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"spirt\"\nversion = \"0.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"64e1f7903720ff818d6da824edf2c4082c6e7a029a99317fd10c39dd7c40c7ff\"\ndependencies = [\n \"arrayvec\",\n \"bytemuck\",\n \"derive_more\",\n \"elsa\",\n \"indexmap 1.9.3\",\n \"internal-iterator\",\n \"itertools\",\n \"lazy_static\",\n \"longest-increasing-subsequence\",\n \"rustc-hash\",\n \"serde\",\n \"serde_json\",\n \"smallvec\",\n]\n\n[[package]]\nname = \"spirv\"\nversion = \"0.2.0+1.5.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"246bfa38fe3db3f1dfc8ca5a2cdeb7348c78be2112740cc0ec8ef18b6d94f830\"\ndependencies = [\n \"bitflags 1.3.2\",\n \"num-traits\",\n]\n\n[[package]]\nname = \"spirv\"\nversion = \"0.3.0+sdk-1.3.268.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"eda41003dc44290527a59b13432d4a0379379fa074b70174882adfbdfd917844\"\ndependencies = [\n \"bitflags 2.6.0\",\n]\n\n[[package]]\nname = \"spirv-builder\"\nversion = \"0.9.0\"\ndependencies = [\n \"memchr\",\n \"notify\",\n \"raw-string\",\n \"rustc_codegen_spirv\",\n \"rustc_codegen_spirv-types\",\n \"serde\",\n \"serde_json\",\n]\n\n[[package]]\nname = \"spirv-std\"\nversion = \"0.9.0\"\ndependencies = [\n \"bitflags 1.3.2\",\n \"glam\",\n \"num-traits\",\n \"spirv-std-macros\",\n \"spirv-std-types\",\n]\n\n[[package]]\nname = \"spirv-std-macros\"\nversion = \"0.9.0\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"spirv-std-types\",\n \"syn 1.0.109\",\n]\n\n[[package]]\nname = \"spirv-std-types\"\nversion = \"0.9.0\"\n\n[[package]]\nname = \"spirv-tools\"\nversion = \"0.10.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bcb3b0832881834994b7ec82b709ec5491043ceb4bf8101e27da6b5234b24261\"\ndependencies = [\n \"memchr\",\n \"spirv-tools-sys\",\n \"tempfile\",\n]\n\n[[package]]\nname = \"spirv-tools-sys\"\nversion = \"0.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"48e68b55a97aa6856e010a6f2477425875a97873e147bb0232160e73c45bdae7\"\ndependencies = [\n \"cc\",\n]\n\n[[package]]\nname = \"stable_deref_trait\"\nversion = \"1.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a8f112729512f8e442d81f95a8a7ddf2b7c6b8a1a6f509a95864142b30cab2d3\"\n\n[[package]]\nname = \"static_assertions\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a2eb9349b6444b326872e140eb1cf5e7c522154d69e7a0ffb0fb81c06b37543f\"\n\n[[package]]\nname = \"strict-num\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6637bab7722d379c8b41ba849228d680cc12d0a45ba1fa2b48f2a30577a06731\"\n\n[[package]]\nname = \"strsim\"\nversion = \"0.10.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"73473c0e59e6d5812c5dfe2a064a6444949f089e20eec9a2e5506596494e4623\"\n\n[[package]]\nname = \"strum\"\nversion = \"0.25.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"290d54ea6f91c969195bdbcd7442c8c2a2ba87da8bf60a7ee86a235d4bc1e125\"\ndependencies = [\n \"strum_macros\",\n]\n\n[[package]]\nname = \"strum_macros\"\nversion = \"0.25.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"23dc1fa9ac9c169a78ba62f0b841814b7abae11bdd047b9c58f893439e309ea0\"\ndependencies = [\n \"heck\",\n \"proc-macro2\",\n \"quote\",\n \"rustversion\",\n \"syn 2.0.48\",\n]\n\n[[package]]\nname = \"syn\"\nversion = \"1.0.109\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"72b64191b275b66ffe2469e8af2c1cfe3bafa67b529ead792a6d0160888b4237\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"syn\"\nversion = \"2.0.48\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0f3531638e407dfc0814761abb7c00a5b54992b849452a0646b7f65c9f770f3f\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"tempfile\"\nversion = \"3.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"01ce4141aa927a6d1bd34a041795abd0db1cccba5d5f24b009f694bdf3a1f3fa\"\ndependencies = [\n \"cfg-if\",\n \"fastrand\",\n \"redox_syscall 0.4.1\",\n \"rustix\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"term\"\nversion = \"0.7.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c59df8ac95d96ff9bede18eb7300b0fda5e5d8d90960e76f8e14ae765eedbf1f\"\ndependencies = [\n \"dirs-next\",\n \"rustversion\",\n \"winapi\",\n]\n\n[[package]]\nname = \"termcolor\"\nversion = \"1.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"06794f8f6c5c898b3275aebefa6b8a1cb24cd2c6c79397ab15774837a0bc5755\"\ndependencies = [\n \"winapi-util\",\n]\n\n[[package]]\nname = \"tester\"\nversion = \"0.9.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"89e8bf7e0eb2dd7b4228cc1b6821fc5114cd6841ae59f652a85488c016091e5f\"\ndependencies = [\n \"cfg-if\",\n \"getopts\",\n \"libc\",\n \"num_cpus\",\n \"term\",\n]\n\n[[package]]\nname = \"thiserror\"\nversion = \"1.0.63\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c0342370b38b6a11b6cc11d6a805569958d54cfa061a29969c3b5ce2ea405724\"\ndependencies = [\n \"thiserror-impl\",\n]\n\n[[package]]\nname = \"thiserror-impl\"\nversion = \"1.0.63\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a4558b58466b9ad7ca0f102865eccc95938dca1a74a856f2b57b6629050da261\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.48\",\n]\n\n[[package]]\nname = \"time\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f657ba42c3f86e7680e53c8cd3af8abbe56b5491790b46e22e19c0d57463583e\"\ndependencies = [\n \"deranged\",\n \"itoa\",\n \"powerfmt\",\n \"serde\",\n \"time-core\",\n \"time-macros\",\n]\n\n[[package]]\nname = \"time-core\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ef927ca75afb808a4d64dd374f00a2adf8d0fcff8e7b184af886c3c87ec4a3f3\"\n\n[[package]]\nname = \"time-macros\"\nversion = \"0.2.16\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"26197e33420244aeb70c3e8c78376ca46571bc4e701e4791c2cd9f57dcb3a43f\"\ndependencies = [\n \"time-core\",\n]\n\n[[package]]\nname = \"tiny-skia\"\nversion = \"0.11.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b6a067b809476893fce6a254cf285850ff69c847e6cfbade6a20b655b6c7e80d\"\ndependencies = [\n \"arrayref\",\n \"arrayvec\",\n \"bytemuck\",\n \"cfg-if\",\n \"log\",\n \"tiny-skia-path\",\n]\n\n[[package]]\nname = \"tiny-skia-path\"\nversion = \"0.11.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5de35e8a90052baaaf61f171680ac2f8e925a1e43ea9d2e3a00514772250e541\"\ndependencies = [\n \"arrayref\",\n \"bytemuck\",\n \"strict-num\",\n]\n\n[[package]]\nname = \"toml_datetime\"\nversion = \"0.6.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3550f4e9685620ac18a50ed434eb3aec30db8ba93b0287467bca5826ea25baf1\"\n\n[[package]]\nname = \"toml_edit\"\nversion = \"0.21.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d34d383cd00a163b4a5b85053df514d45bc330f6de7737edfe0a93311d1eaa03\"\ndependencies = [\n \"indexmap 2.1.0\",\n \"toml_datetime\",\n \"winnow\",\n]\n\n[[package]]\nname = \"tracing\"\nversion = \"0.1.40\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c3523ab5a71916ccf420eebdf5521fcef02141234bbc0b8a49f2fdc4544364ef\"\ndependencies = [\n \"pin-project-lite\",\n \"tracing-core\",\n]\n\n[[package]]\nname = \"tracing-core\"\nversion = \"0.1.32\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c06d3da6113f116aaee68e4d601191614c9053067f9ab7f6edbcb161237daa54\"\n\n[[package]]\nname = \"ttf-parser\"\nversion = \"0.20.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"17f77d76d837a7830fe1d4f12b7b4ba4192c1888001c7164257e4bc6d21d96b4\"\n\n[[package]]\nname = \"unicode-ident\"\nversion = \"1.0.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3354b9ac3fae1ff6755cb6db53683adb661634f67557942dea4facebec0fee4b\"\n\n[[package]]\nname = \"unicode-segmentation\"\nversion = \"1.10.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1dd624098567895118886609431a7c3b8f516e41d30e0643f03d94592a147e36\"\n\n[[package]]\nname = \"unicode-width\"\nversion = \"0.1.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e51733f11c9c4f72aa0c160008246859e340b00807569a0da0e7a1079b27ba85\"\n\n[[package]]\nname = \"unicode-xid\"\nversion = \"0.2.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f962df74c8c05a667b5ee8bcf162993134c104e96440b663c8daa176dc772d8c\"\n\n[[package]]\nname = \"utf8parse\"\nversion = \"0.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"711b9620af191e0cdc7468a8d14e709c3dcdb115b36f838e601583af800a370a\"\n\n[[package]]\nname = \"version-compare\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"579a42fc0b8e0c63b76519a339be31bed574929511fa53c1a3acae26eb258f29\"\n\n[[package]]\nname = \"version_check\"\nversion = \"0.9.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"49874b5167b65d7193b8aba1567f5c7d93d001cafc34600cee003eda787e483f\"\n\n[[package]]\nname = \"walkdir\"\nversion = \"2.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d71d857dc86794ca4c280d616f7da00d2dbfd8cd788846559a6813e6aa4b54ee\"\ndependencies = [\n \"same-file\",\n \"winapi-util\",\n]\n\n[[package]]\nname = \"wasi\"\nversion = \"0.11.0+wasi-snapshot-preview1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9c8d87e72b64a3b4db28d11ce29237c246188f4f51057d65a7eab63b7987e423\"\n\n[[package]]\nname = \"wasm-bindgen\"\nversion = \"0.2.93\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a82edfc16a6c469f5f44dc7b571814045d60404b55a0ee849f9bcfa2e63dd9b5\"\ndependencies = [\n \"cfg-if\",\n \"once_cell\",\n \"wasm-bindgen-macro\",\n]\n\n[[package]]\nname = \"wasm-bindgen-backend\"\nversion = \"0.2.93\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9de396da306523044d3302746f1208fa71d7532227f15e347e2d93e4145dd77b\"\ndependencies = [\n \"bumpalo\",\n \"log\",\n \"once_cell\",\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.48\",\n \"wasm-bindgen-shared\",\n]\n\n[[package]]\nname = \"wasm-bindgen-futures\"\nversion = \"0.4.43\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"61e9300f63a621e96ed275155c108eb6f843b6a26d053f122ab69724559dc8ed\"\ndependencies = [\n \"cfg-if\",\n \"js-sys\",\n \"wasm-bindgen\",\n \"web-sys\",\n]\n\n[[package]]\nname = \"wasm-bindgen-macro\"\nversion = \"0.2.93\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"585c4c91a46b072c92e908d99cb1dcdf95c5218eeb6f3bf1efa991ee7a68cccf\"\ndependencies = [\n \"quote\",\n \"wasm-bindgen-macro-support\",\n]\n\n[[package]]\nname = \"wasm-bindgen-macro-support\"\nversion = \"0.2.93\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"afc340c74d9005395cf9dd098506f7f44e38f2b4a21c6aaacf9a105ea5e1e836\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.48\",\n \"wasm-bindgen-backend\",\n \"wasm-bindgen-shared\",\n]\n\n[[package]]\nname = \"wasm-bindgen-shared\"\nversion = \"0.2.93\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c62a0a307cb4a311d3a07867860911ca130c3494e8c2719593806c08bc5d0484\"\n\n[[package]]\nname = \"wayland-backend\"\nversion = \"0.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"19152ddd73f45f024ed4534d9ca2594e0ef252c1847695255dae47f34df9fbe4\"\ndependencies = [\n \"cc\",\n \"downcast-rs\",\n \"nix 0.26.4\",\n \"scoped-tls\",\n \"smallvec\",\n \"wayland-sys 0.31.1\",\n]\n\n[[package]]\nname = \"wayland-client\"\nversion = \"0.29.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3f3b068c05a039c9f755f881dc50f01732214f5685e379829759088967c46715\"\ndependencies = [\n \"bitflags 1.3.2\",\n \"downcast-rs\",\n \"libc\",\n \"nix 0.24.3\",\n \"scoped-tls\",\n \"wayland-commons\",\n \"wayland-scanner 0.29.5\",\n \"wayland-sys 0.29.5\",\n]\n\n[[package]]\nname = \"wayland-client\"\nversion = \"0.31.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1ca7d52347346f5473bf2f56705f360e8440873052e575e55890c4fa57843ed3\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"nix 0.26.4\",\n \"wayland-backend\",\n \"wayland-scanner 0.31.0\",\n]\n\n[[package]]\nname = \"wayland-commons\"\nversion = \"0.29.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8691f134d584a33a6606d9d717b95c4fa20065605f798a3f350d78dced02a902\"\ndependencies = [\n \"nix 0.24.3\",\n \"once_cell\",\n \"smallvec\",\n \"wayland-sys 0.29.5\",\n]\n\n[[package]]\nname = \"wayland-csd-frame\"\nversion = \"0.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"625c5029dbd43d25e6aa9615e88b829a5cad13b2819c4ae129fdbb7c31ab4c7e\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"cursor-icon\",\n \"wayland-backend\",\n]\n\n[[package]]\nname = \"wayland-cursor\"\nversion = \"0.29.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6865c6b66f13d6257bef1cd40cbfe8ef2f150fb8ebbdb1e8e873455931377661\"\ndependencies = [\n \"nix 0.24.3\",\n \"wayland-client 0.29.5\",\n \"xcursor\",\n]\n\n[[package]]\nname = \"wayland-cursor\"\nversion = \"0.31.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a44aa20ae986659d6c77d64d808a046996a932aa763913864dc40c359ef7ad5b\"\ndependencies = [\n \"nix 0.26.4\",\n \"wayland-client 0.31.1\",\n \"xcursor\",\n]\n\n[[package]]\nname = \"wayland-protocols\"\nversion = \"0.29.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b950621f9354b322ee817a23474e479b34be96c2e909c14f7bc0100e9a970bc6\"\ndependencies = [\n \"bitflags 1.3.2\",\n \"wayland-client 0.29.5\",\n \"wayland-commons\",\n \"wayland-scanner 0.29.5\",\n]\n\n[[package]]\nname = \"wayland-protocols\"\nversion = \"0.31.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e253d7107ba913923dc253967f35e8561a3c65f914543e46843c88ddd729e21c\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"wayland-backend\",\n \"wayland-client 0.31.1\",\n \"wayland-scanner 0.31.0\",\n]\n\n[[package]]\nname = \"wayland-protocols-plasma\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"23803551115ff9ea9bce586860c5c5a971e360825a0309264102a9495a5ff479\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"wayland-backend\",\n \"wayland-client 0.31.1\",\n \"wayland-protocols 0.31.0\",\n \"wayland-scanner 0.31.0\",\n]\n\n[[package]]\nname = \"wayland-protocols-wlr\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ad1f61b76b6c2d8742e10f9ba5c3737f6530b4c243132c2a2ccc8aa96fe25cd6\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"wayland-backend\",\n \"wayland-client 0.31.1\",\n \"wayland-protocols 0.31.0\",\n \"wayland-scanner 0.31.0\",\n]\n\n[[package]]\nname = \"wayland-scanner\"\nversion = \"0.29.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8f4303d8fa22ab852f789e75a967f0a2cdc430a607751c0499bada3e451cbd53\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"xml-rs\",\n]\n\n[[package]]\nname = \"wayland-scanner\"\nversion = \"0.31.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fb8e28403665c9f9513202b7e1ed71ec56fde5c107816843fb14057910b2c09c\"\ndependencies = [\n \"proc-macro2\",\n \"quick-xml 0.30.0\",\n \"quote\",\n]\n\n[[package]]\nname = \"wayland-sys\"\nversion = \"0.29.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"be12ce1a3c39ec7dba25594b97b42cb3195d54953ddb9d3d95a7c3902bc6e9d4\"\ndependencies = [\n \"dlib\",\n \"lazy_static\",\n \"pkg-config\",\n]\n\n[[package]]\nname = \"wayland-sys\"\nversion = \"0.31.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"15a0c8eaff5216d07f226cb7a549159267f3467b289d9a2e52fd3ef5aae2b7af\"\ndependencies = [\n \"dlib\",\n \"log\",\n \"once_cell\",\n \"pkg-config\",\n]\n\n[[package]]\nname = \"web-sys\"\nversion = \"0.3.70\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"26fdeaafd9bd129f65e7c031593c24d62186301e0c72c8978fa1678be7d532c0\"\ndependencies = [\n \"js-sys\",\n \"wasm-bindgen\",\n]\n\n[[package]]\nname = \"web-time\"\nversion = \"0.2.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"aa30049b1c872b72c89866d458eae9f20380ab280ffd1b1e18df2d3e2d98cfe0\"\ndependencies = [\n \"js-sys\",\n \"wasm-bindgen\",\n]\n\n[[package]]\nname = \"wgpu\"\nversion = \"22.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e1d1c4ba43f80542cf63a0a6ed3134629ae73e8ab51e4b765a67f3aa062eb433\"\ndependencies = [\n \"arrayvec\",\n \"cfg_aliases\",\n \"document-features\",\n \"js-sys\",\n \"log\",\n \"naga\",\n \"parking_lot\",\n \"profiling\",\n \"raw-window-handle 0.6.0\",\n \"smallvec\",\n \"static_assertions\",\n \"wasm-bindgen\",\n \"wasm-bindgen-futures\",\n \"web-sys\",\n \"wgpu-core\",\n \"wgpu-hal\",\n \"wgpu-types\",\n]\n\n[[package]]\nname = \"wgpu-core\"\nversion = \"22.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0348c840d1051b8e86c3bcd31206080c5e71e5933dabd79be1ce732b0b2f089a\"\ndependencies = [\n \"arrayvec\",\n \"bit-vec\",\n \"bitflags 2.6.0\",\n \"bytemuck\",\n \"cfg_aliases\",\n \"document-features\",\n \"indexmap 2.1.0\",\n \"log\",\n \"naga\",\n \"once_cell\",\n \"parking_lot\",\n \"profiling\",\n \"raw-window-handle 0.6.0\",\n \"rustc-hash\",\n \"smallvec\",\n \"thiserror\",\n \"wgpu-hal\",\n \"wgpu-types\",\n]\n\n[[package]]\nname = \"wgpu-hal\"\nversion = \"22.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f6bbf4b4de8b2a83c0401d9e5ae0080a2792055f25859a02bf9be97952bbed4f\"\ndependencies = [\n \"android_system_properties\",\n \"arrayvec\",\n \"ash 0.38.0+1.3.281\",\n \"bit-set\",\n \"bitflags 2.6.0\",\n \"block\",\n \"cfg_aliases\",\n \"core-graphics-types\",\n \"d3d12\",\n \"glow\",\n \"glutin_wgl_sys\",\n \"gpu-alloc\",\n \"gpu-allocator\",\n \"gpu-descriptor\",\n \"hassle-rs\",\n \"js-sys\",\n \"khronos-egl\",\n \"libc\",\n \"libloading 0.8.1\",\n \"log\",\n \"metal\",\n \"naga\",\n \"ndk-sys\",\n \"objc\",\n \"once_cell\",\n \"parking_lot\",\n \"profiling\",\n \"range-alloc\",\n \"raw-window-handle 0.6.0\",\n \"renderdoc-sys\",\n \"rustc-hash\",\n \"smallvec\",\n \"thiserror\",\n \"wasm-bindgen\",\n \"web-sys\",\n \"wgpu-types\",\n \"winapi\",\n]\n\n[[package]]\nname = \"wgpu-types\"\nversion = \"22.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bc9d91f0e2c4b51434dfa6db77846f2793149d8e73f800fa2e41f52b8eac3c5d\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"js-sys\",\n \"web-sys\",\n]\n\n[[package]]\nname = \"widestring\"\nversion = \"1.0.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"653f141f39ec16bba3c5abe400a0c60da7468261cc2cbf36805022876bc721a8\"\n\n[[package]]\nname = \"winapi\"\nversion = \"0.3.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5c839a674fcd7a98952e593242ea400abe93992746761e38641405d28b00f419\"\ndependencies = [\n \"winapi-i686-pc-windows-gnu\",\n \"winapi-x86_64-pc-windows-gnu\",\n]\n\n[[package]]\nname = \"winapi-i686-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ac3b87c63620426dd9b991e5ce0329eff545bccbbb34f3be09ff6fb6ab51b7b6\"\n\n[[package]]\nname = \"winapi-util\"\nversion = \"0.1.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f29e6f9198ba0d26b4c9f07dbe6f9ed633e1f3d5b8b414090084349e46a52596\"\ndependencies = [\n \"winapi\",\n]\n\n[[package]]\nname = \"winapi-x86_64-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"712e227841d057c1ee1cd2fb22fa7e5a5461ae8e48fa2ca79ec42cfc1931183f\"\n\n[[package]]\nname = \"windows\"\nversion = \"0.52.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e48a53791691ab099e5e2ad123536d0fff50652600abaf43bbf952894110d0be\"\ndependencies = [\n \"windows-core\",\n \"windows-targets 0.52.0\",\n]\n\n[[package]]\nname = \"windows-core\"\nversion = \"0.52.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"33ab640c8d7e35bf8ba19b884ba838ceb4fba93a4e8c65a9059d08afcfc683d9\"\ndependencies = [\n \"windows-targets 0.52.0\",\n]\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.45.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"75283be5efb2831d37ea142365f009c02ec203cd29a3ebecbc093d52315b66d0\"\ndependencies = [\n \"windows-targets 0.42.2\",\n]\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.48.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"677d2418bec65e3338edb076e806bc1ec15693c5d0104683f2efe857f61056a9\"\ndependencies = [\n \"windows-targets 0.48.5\",\n]\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.52.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"282be5f36a8ce781fad8c8ae18fa3f9beff57ec1b52cb3de0789201425d9a33d\"\ndependencies = [\n \"windows-targets 0.52.0\",\n]\n\n[[package]]\nname = \"windows-targets\"\nversion = \"0.42.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8e5180c00cd44c9b1c88adb3693291f1cd93605ded80c250a75d472756b4d071\"\ndependencies = [\n \"windows_aarch64_gnullvm 0.42.2\",\n \"windows_aarch64_msvc 0.42.2\",\n \"windows_i686_gnu 0.42.2\",\n \"windows_i686_msvc 0.42.2\",\n \"windows_x86_64_gnu 0.42.2\",\n \"windows_x86_64_gnullvm 0.42.2\",\n \"windows_x86_64_msvc 0.42.2\",\n]\n\n[[package]]\nname = \"windows-targets\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9a2fa6e2155d7247be68c096456083145c183cbbbc2764150dda45a87197940c\"\ndependencies = [\n \"windows_aarch64_gnullvm 0.48.5\",\n \"windows_aarch64_msvc 0.48.5\",\n \"windows_i686_gnu 0.48.5\",\n \"windows_i686_msvc 0.48.5\",\n \"windows_x86_64_gnu 0.48.5\",\n \"windows_x86_64_gnullvm 0.48.5\",\n \"windows_x86_64_msvc 0.48.5\",\n]\n\n[[package]]\nname = \"windows-targets\"\nversion = \"0.52.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8a18201040b24831fbb9e4eb208f8892e1f50a37feb53cc7ff887feb8f50e7cd\"\ndependencies = [\n \"windows_aarch64_gnullvm 0.52.0\",\n \"windows_aarch64_msvc 0.52.0\",\n \"windows_i686_gnu 0.52.0\",\n \"windows_i686_msvc 0.52.0\",\n \"windows_x86_64_gnu 0.52.0\",\n \"windows_x86_64_gnullvm 0.52.0\",\n \"windows_x86_64_msvc 0.52.0\",\n]\n\n[[package]]\nname = \"windows_aarch64_gnullvm\"\nversion = \"0.42.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"597a5118570b68bc08d8d59125332c54f1ba9d9adeedeef5b99b02ba2b0698f8\"\n\n[[package]]\nname = \"windows_aarch64_gnullvm\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2b38e32f0abccf9987a4e3079dfb67dcd799fb61361e53e2882c3cbaf0d905d8\"\n\n[[package]]\nname = \"windows_aarch64_gnullvm\"\nversion = \"0.52.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cb7764e35d4db8a7921e09562a0304bf2f93e0a51bfccee0bd0bb0b666b015ea\"\n\n[[package]]\nname = \"windows_aarch64_msvc\"\nversion = \"0.42.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e08e8864a60f06ef0d0ff4ba04124db8b0fb3be5776a5cd47641e942e58c4d43\"\n\n[[package]]\nname = \"windows_aarch64_msvc\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dc35310971f3b2dbbf3f0690a219f40e2d9afcf64f9ab7cc1be722937c26b4bc\"\n\n[[package]]\nname = \"windows_aarch64_msvc\"\nversion = \"0.52.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bbaa0368d4f1d2aaefc55b6fcfee13f41544ddf36801e793edbbfd7d7df075ef\"\n\n[[package]]\nname = \"windows_i686_gnu\"\nversion = \"0.42.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c61d927d8da41da96a81f029489353e68739737d3beca43145c8afec9a31a84f\"\n\n[[package]]\nname = \"windows_i686_gnu\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a75915e7def60c94dcef72200b9a8e58e5091744960da64ec734a6c6e9b3743e\"\n\n[[package]]\nname = \"windows_i686_gnu\"\nversion = \"0.52.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a28637cb1fa3560a16915793afb20081aba2c92ee8af57b4d5f28e4b3e7df313\"\n\n[[package]]\nname = \"windows_i686_msvc\"\nversion = \"0.42.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"44d840b6ec649f480a41c8d80f9c65108b92d89345dd94027bfe06ac444d1060\"\n\n[[package]]\nname = \"windows_i686_msvc\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8f55c233f70c4b27f66c523580f78f1004e8b5a8b659e05a4eb49d4166cca406\"\n\n[[package]]\nname = \"windows_i686_msvc\"\nversion = \"0.52.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ffe5e8e31046ce6230cc7215707b816e339ff4d4d67c65dffa206fd0f7aa7b9a\"\n\n[[package]]\nname = \"windows_x86_64_gnu\"\nversion = \"0.42.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8de912b8b8feb55c064867cf047dda097f92d51efad5b491dfb98f6bbb70cb36\"\n\n[[package]]\nname = \"windows_x86_64_gnu\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"53d40abd2583d23e4718fddf1ebec84dbff8381c07cae67ff7768bbf19c6718e\"\n\n[[package]]\nname = \"windows_x86_64_gnu\"\nversion = \"0.52.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3d6fa32db2bc4a2f5abeacf2b69f7992cd09dca97498da74a151a3132c26befd\"\n\n[[package]]\nname = \"windows_x86_64_gnullvm\"\nversion = \"0.42.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"26d41b46a36d453748aedef1486d5c7a85db22e56aff34643984ea85514e94a3\"\n\n[[package]]\nname = \"windows_x86_64_gnullvm\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0b7b52767868a23d5bab768e390dc5f5c55825b6d30b86c844ff2dc7414044cc\"\n\n[[package]]\nname = \"windows_x86_64_gnullvm\"\nversion = \"0.52.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1a657e1e9d3f514745a572a6846d3c7aa7dbe1658c056ed9c3344c4109a6949e\"\n\n[[package]]\nname = \"windows_x86_64_msvc\"\nversion = \"0.42.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9aec5da331524158c6d1a4ac0ab1541149c0b9505fde06423b02f5ef0106b9f0\"\n\n[[package]]\nname = \"windows_x86_64_msvc\"\nversion = \"0.48.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ed94fce61571a4006852b7389a063ab983c02eb1bb37b47f8272ce92d06d9538\"\n\n[[package]]\nname = \"windows_x86_64_msvc\"\nversion = \"0.52.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dff9641d1cd4be8d1a070daf9e3773c5f67e78b4d9d42263020c057706765c04\"\n\n[[package]]\nname = \"winit\"\nversion = \"0.29.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4c824f11941eeae66ec71111cc2674373c772f482b58939bb4066b642aa2ffcf\"\ndependencies = [\n \"ahash 0.8.7\",\n \"android-activity\",\n \"atomic-waker\",\n \"bitflags 2.6.0\",\n \"bytemuck\",\n \"calloop\",\n \"cfg_aliases\",\n \"core-foundation\",\n \"core-graphics\",\n \"cursor-icon\",\n \"icrate\",\n \"js-sys\",\n \"libc\",\n \"log\",\n \"memmap2\",\n \"ndk\",\n \"ndk-sys\",\n \"objc2\",\n \"once_cell\",\n \"orbclient\",\n \"percent-encoding\",\n \"raw-window-handle 0.5.2\",\n \"raw-window-handle 0.6.0\",\n \"redox_syscall 0.3.5\",\n \"rustix\",\n \"sctk-adwaita\",\n \"smithay-client-toolkit\",\n \"smol_str\",\n \"unicode-segmentation\",\n \"wasm-bindgen\",\n \"wasm-bindgen-futures\",\n \"wayland-backend\",\n \"wayland-client 0.31.1\",\n \"wayland-protocols 0.31.0\",\n \"wayland-protocols-plasma\",\n \"web-sys\",\n \"web-time\",\n \"windows-sys 0.48.0\",\n \"x11-dl\",\n \"x11rb\",\n \"xkbcommon-dl\",\n]\n\n[[package]]\nname = \"winnow\"\nversion = \"0.5.34\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b7cf47b659b318dccbd69cc4797a39ae128f533dce7902a1096044d1967b9c16\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"x11-dl\"\nversion = \"2.21.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"38735924fedd5314a6e548792904ed8c6de6636285cb9fec04d5b1db85c1516f\"\ndependencies = [\n \"libc\",\n \"once_cell\",\n \"pkg-config\",\n]\n\n[[package]]\nname = \"x11rb\"\nversion = \"0.13.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f8f25ead8c7e4cba123243a6367da5d3990e0d3affa708ea19dce96356bd9f1a\"\ndependencies = [\n \"as-raw-xcb-connection\",\n \"gethostname\",\n \"libc\",\n \"libloading 0.8.1\",\n \"once_cell\",\n \"rustix\",\n \"x11rb-protocol\",\n]\n\n[[package]]\nname = \"x11rb-protocol\"\nversion = \"0.13.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e63e71c4b8bd9ffec2c963173a4dc4cbde9ee96961d4fcb4429db9929b606c34\"\n\n[[package]]\nname = \"xcursor\"\nversion = \"0.3.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6a0ccd7b4a5345edfcd0c3535718a4e9ff7798ffc536bb5b5a0e26ff84732911\"\n\n[[package]]\nname = \"xkbcommon-dl\"\nversion = \"0.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6924668544c48c0133152e7eec86d644a056ca3d09275eb8d5cdb9855f9d8699\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"dlib\",\n \"log\",\n \"once_cell\",\n \"xkeysym\",\n]\n\n[[package]]\nname = \"xkeysym\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"054a8e68b76250b253f671d1268cb7f1ae089ec35e195b2efb2a4e9a836d0621\"\n\n[[package]]\nname = \"xml-rs\"\nversion = \"0.8.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0fcb9cbac069e033553e8bb871be2fbdffcab578eb25bd0f7c508cedc6dcd75a\"\n\n[[package]]\nname = \"yansi\"\nversion = \"0.5.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"09041cd90cf85f7f8b2df60c646f853b7f535ce68f85244eb6731cf89fa498ec\"\n\n[[package]]\nname = \"zerocopy\"\nversion = \"0.7.32\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"74d4d3961e53fa4c9a25a8637fc2bfaf2595b3d3ae34875568a5cf64787716be\"\ndependencies = [\n \"zerocopy-derive\",\n]\n\n[[package]]\nname = \"zerocopy-derive\"\nversion = \"0.7.32\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9ce1b18ccd8e73a9321186f97e46f9f04b778851177567b1975109d26a08d2a6\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn 2.0.48\",\n]\n"
        },
        {
          "name": "Cargo.toml",
          "type": "blob",
          "size": 2.2294921875,
          "content": "[workspace]\nresolver = \"2\"\nmembers = [\n    \"examples/runners/cpu\",\n    \"examples/runners/ash\",\n    \"examples/runners/wgpu\",\n    \"examples/runners/wgpu/builder\",\n    \"examples/shaders/reduce\",\n    \"examples/shaders/sky-shader\",\n    \"examples/shaders/simplest-shader\",\n    \"examples/shaders/compute-shader\",\n    \"examples/shaders/mouse-shader\",\n    \"examples/multibuilder\",\n\n    \"crates/rustc_codegen_spirv\",\n    \"crates/rustc_codegen_spirv-types\",\n    \"crates/spirv-builder\",\n    \"crates/spirv-std\",\n    \"crates/spirv-std/shared\",\n    \"crates/spirv-std/macros\",\n\n    \"tests\",\n    \"tests/deps-helper\",\n]\n\n[workspace.package]\nversion = \"0.9.0\"\nauthors = [\"Embark <opensource@embark-studios.com>\"]\nedition = \"2021\"\nlicense = \"MIT OR Apache-2.0\"\nrepository = \"https://github.com/EmbarkStudios/rust-gpu\"\n\n[workspace.lints.rust]\nunexpected_cfgs = { level = \"allow\", check-cfg = ['cfg(target_arch, values(\"spirv\"))'] }\n\n[workspace.dependencies]\nspirv-builder = { path = \"./crates/spirv-builder\", version = \"=0.9.0\", default-features = false }\nspirv-std = { path = \"./crates/spirv-std\", version = \"=0.9.0\" }\nspirv-std-types = { path = \"./crates/spirv-std/shared\", version = \"=0.9.0\" }\nspirv-std-macros = { path = \"./crates/spirv-std/macros\", version = \"=0.9.0\" }\nspirv-tools = { version = \"0.10\", default-features = false }\nrustc_codegen_spirv = { path = \"./crates/rustc_codegen_spirv\", version = \"=0.9.0\", default-features = false }\nrustc_codegen_spirv-types = { path = \"./crates/rustc_codegen_spirv-types\", version = \"=0.9.0\" }\n\n# External dependencies that need to be mentioned more than once.\nnum-traits = { version = \"0.2.15\", default-features = false }\nglam = { version = \">=0.22, <=0.29\", default-features = false }\n\n# Enable incremental by default in release mode.\n[profile.release]\nincremental = true\n# HACK(eddyb) this is the default but without explicitly specifying it, Cargo\n# will treat the identical settings in `[profile.release.build-override]` below\n# as different sets of `rustc` flags and will not reuse artifacts between them.\ncodegen-units = 256\n\n# Compile build-dependencies in release mode with the same settings\n# as regular dependencies (including the incremental enabled above).\n[profile.release.build-override]\nopt-level = 3\nincremental = true\ncodegen-units = 256\n"
        },
        {
          "name": "LICENSE-APACHE",
          "type": "blob",
          "size": 10.595703125,
          "content": "                              Apache License\n                        Version 2.0, January 2004\n                     http://www.apache.org/licenses/\n\nTERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n1. Definitions.\n\n   \"License\" shall mean the terms and conditions for use, reproduction,\n   and distribution as defined by Sections 1 through 9 of this document.\n\n   \"Licensor\" shall mean the copyright owner or entity authorized by\n   the copyright owner that is granting the License.\n\n   \"Legal Entity\" shall mean the union of the acting entity and all\n   other entities that control, are controlled by, or are under common\n   control with that entity. For the purposes of this definition,\n   \"control\" means (i) the power, direct or indirect, to cause the\n   direction or management of such entity, whether by contract or\n   otherwise, or (ii) ownership of fifty percent (50%) or more of the\n   outstanding shares, or (iii) beneficial ownership of such entity.\n\n   \"You\" (or \"Your\") shall mean an individual or Legal Entity\n   exercising permissions granted by this License.\n\n   \"Source\" form shall mean the preferred form for making modifications,\n   including but not limited to software source code, documentation\n   source, and configuration files.\n\n   \"Object\" form shall mean any form resulting from mechanical\n   transformation or translation of a Source form, including but\n   not limited to compiled object code, generated documentation,\n   and conversions to other media types.\n\n   \"Work\" shall mean the work of authorship, whether in Source or\n   Object form, made available under the License, as indicated by a\n   copyright notice that is included in or attached to the work\n   (an example is provided in the Appendix below).\n\n   \"Derivative Works\" shall mean any work, whether in Source or Object\n   form, that is based on (or derived from) the Work and for which the\n   editorial revisions, annotations, elaborations, or other modifications\n   represent, as a whole, an original work of authorship. For the purposes\n   of this License, Derivative Works shall not include works that remain\n   separable from, or merely link (or bind by name) to the interfaces of,\n   the Work and Derivative Works thereof.\n\n   \"Contribution\" shall mean any work of authorship, including\n   the original version of the Work and any modifications or additions\n   to that Work or Derivative Works thereof, that is intentionally\n   submitted to Licensor for inclusion in the Work by the copyright owner\n   or by an individual or Legal Entity authorized to submit on behalf of\n   the copyright owner. For the purposes of this definition, \"submitted\"\n   means any form of electronic, verbal, or written communication sent\n   to the Licensor or its representatives, including but not limited to\n   communication on electronic mailing lists, source code control systems,\n   and issue tracking systems that are managed by, or on behalf of, the\n   Licensor for the purpose of discussing and improving the Work, but\n   excluding communication that is conspicuously marked or otherwise\n   designated in writing by the copyright owner as \"Not a Contribution.\"\n\n   \"Contributor\" shall mean Licensor and any individual or Legal Entity\n   on behalf of whom a Contribution has been received by Licensor and\n   subsequently incorporated within the Work.\n\n2. Grant of Copyright License. Subject to the terms and conditions of\n   this License, each Contributor hereby grants to You a perpetual,\n   worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n   copyright license to reproduce, prepare Derivative Works of,\n   publicly display, publicly perform, sublicense, and distribute the\n   Work and such Derivative Works in Source or Object form.\n\n3. Grant of Patent License. Subject to the terms and conditions of\n   this License, each Contributor hereby grants to You a perpetual,\n   worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n   (except as stated in this section) patent license to make, have made,\n   use, offer to sell, sell, import, and otherwise transfer the Work,\n   where such license applies only to those patent claims licensable\n   by such Contributor that are necessarily infringed by their\n   Contribution(s) alone or by combination of their Contribution(s)\n   with the Work to which such Contribution(s) was submitted. If You\n   institute patent litigation against any entity (including a\n   cross-claim or counterclaim in a lawsuit) alleging that the Work\n   or a Contribution incorporated within the Work constitutes direct\n   or contributory patent infringement, then any patent licenses\n   granted to You under this License for that Work shall terminate\n   as of the date such litigation is filed.\n\n4. Redistribution. You may reproduce and distribute copies of the\n   Work or Derivative Works thereof in any medium, with or without\n   modifications, and in Source or Object form, provided that You\n   meet the following conditions:\n\n   (a) You must give any other recipients of the Work or\n       Derivative Works a copy of this License; and\n\n   (b) You must cause any modified files to carry prominent notices\n       stating that You changed the files; and\n\n   (c) You must retain, in the Source form of any Derivative Works\n       that You distribute, all copyright, patent, trademark, and\n       attribution notices from the Source form of the Work,\n       excluding those notices that do not pertain to any part of\n       the Derivative Works; and\n\n   (d) If the Work includes a \"NOTICE\" text file as part of its\n       distribution, then any Derivative Works that You distribute must\n       include a readable copy of the attribution notices contained\n       within such NOTICE file, excluding those notices that do not\n       pertain to any part of the Derivative Works, in at least one\n       of the following places: within a NOTICE text file distributed\n       as part of the Derivative Works; within the Source form or\n       documentation, if provided along with the Derivative Works; or,\n       within a display generated by the Derivative Works, if and\n       wherever such third-party notices normally appear. The contents\n       of the NOTICE file are for informational purposes only and\n       do not modify the License. You may add Your own attribution\n       notices within Derivative Works that You distribute, alongside\n       or as an addendum to the NOTICE text from the Work, provided\n       that such additional attribution notices cannot be construed\n       as modifying the License.\n\n   You may add Your own copyright statement to Your modifications and\n   may provide additional or different license terms and conditions\n   for use, reproduction, or distribution of Your modifications, or\n   for any such Derivative Works as a whole, provided Your use,\n   reproduction, and distribution of the Work otherwise complies with\n   the conditions stated in this License.\n\n5. Submission of Contributions. Unless You explicitly state otherwise,\n   any Contribution intentionally submitted for inclusion in the Work\n   by You to the Licensor shall be under the terms and conditions of\n   this License, without any additional terms or conditions.\n   Notwithstanding the above, nothing herein shall supersede or modify\n   the terms of any separate license agreement you may have executed\n   with Licensor regarding such Contributions.\n\n6. Trademarks. This License does not grant permission to use the trade\n   names, trademarks, service marks, or product names of the Licensor,\n   except as required for reasonable and customary use in describing the\n   origin of the Work and reproducing the content of the NOTICE file.\n\n7. Disclaimer of Warranty. Unless required by applicable law or\n   agreed to in writing, Licensor provides the Work (and each\n   Contributor provides its Contributions) on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n   implied, including, without limitation, any warranties or conditions\n   of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n   PARTICULAR PURPOSE. You are solely responsible for determining the\n   appropriateness of using or redistributing the Work and assume any\n   risks associated with Your exercise of permissions under this License.\n\n8. Limitation of Liability. In no event and under no legal theory,\n   whether in tort (including negligence), contract, or otherwise,\n   unless required by applicable law (such as deliberate and grossly\n   negligent acts) or agreed to in writing, shall any Contributor be\n   liable to You for damages, including any direct, indirect, special,\n   incidental, or consequential damages of any character arising as a\n   result of this License or out of the use or inability to use the\n   Work (including but not limited to damages for loss of goodwill,\n   work stoppage, computer failure or malfunction, or any and all\n   other commercial damages or losses), even if such Contributor\n   has been advised of the possibility of such damages.\n\n9. Accepting Warranty or Additional Liability. While redistributing\n   the Work or Derivative Works thereof, You may choose to offer,\n   and charge a fee for, acceptance of support, warranty, indemnity,\n   or other liability obligations and/or rights consistent with this\n   License. However, in accepting such obligations, You may act only\n   on Your own behalf and on Your sole responsibility, not on behalf\n   of any other Contributor, and only if You agree to indemnify,\n   defend, and hold each Contributor harmless for any liability\n   incurred by, or claims asserted against, such Contributor by reason\n   of your accepting any such warranty or additional liability.\n\nEND OF TERMS AND CONDITIONS\n\nAPPENDIX: How to apply the Apache License to your work.\n\n   To apply the Apache License to your work, attach the following\n   boilerplate notice, with the fields enclosed by brackets \"[]\"\n   replaced with your own identifying information. (Don't include\n   the brackets!)  The text should be enclosed in the appropriate\n   comment syntax for the file format. We also recommend that a\n   file or class name and description of purpose be included on the\n   same \"printed page\" as the copyright notice for easier\n   identification within third-party archives.\n\nCopyright [yyyy] [name of copyright owner]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n"
        },
        {
          "name": "LICENSE-MIT",
          "type": "blob",
          "size": 1.033203125,
          "content": "Copyright (c) 2019 Embark Studios\n\nPermission is hereby granted, free of charge, to any\nperson obtaining a copy of this software and associated\ndocumentation files (the \"Software\"), to deal in the\nSoftware without restriction, including without\nlimitation the rights to use, copy, modify, merge,\npublish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software\nis furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice\nshall be included in all copies or substantial portions\nof the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF\nANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED\nTO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\nPARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT\nSHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR\nIN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\nDEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.4501953125,
          "content": "<!-- Allow this file to not have a first line heading -->\n<!-- markdownlint-disable-file MD041 -->\n<!-- Disable warning om emphasis after first heading -->\n<!-- markdownlint-disable-file MD036 -->\n\n<!-- inline html -->\n<!-- markdownlint-disable-file MD033 -->\n\n<div align=\"center\">\n\n# `🐉 rust-gpu`\n\n**Rust as a first-class language and ecosystem for GPU graphics & compute shaders**\n\n## This project has moved home!\n</div>\n\nThis repository was the nursery of `rust-gpu` during its inception and while it was still under the\nstewardship of [Embark Studios](https://embark.dev/). It has now moved into community ownership\nunder the Rust-GPU GitHub organization. `rust-gpu` is still used by Embark and this repository still\ngets used for work specific to us. However, its main home has relocated to the community.\n\n<div align=\"center\">\n\n### [**Active development continues in its new home, under the Rust-GPU org!**](https://github.com/Rust-GPU/rust-gpu)\n\n</div>\n\n## How `rust-gpu` began\n\nHistorically in games GPU programming has been done through writing either HLSL, or to a lesser extent GLSL. These are simple programming languages that have evolved along with rendering APIs over the years. However, as game engines have evolved, these languages have failed to provide mechanisms for dealing with large codebases, and have generally stayed behind the curve compared to other programming languages.\n\nIn part this is because it's a niche language for a niche market, and in part this has been because the industry as a whole has sunk quite a lot of time and effort into the status quo. While over-all better alternatives to both languages exist, none of them are in a place to replace HLSL or GLSL. Either because they are vendor locked, or because they don't support the traditional graphics pipeline. Examples of this include CUDA and OpenCL. And while attempts have been made to create language in this space, none of them have gained any notable traction in the gamedev community.\n\nOur hope with this project is that we push the industry forward by bringing an existing, low-level, safe, and high performance language to the GPU; namely [Rust](https://rust-lang.org). And with it come some additional benefits that can't be overlooked: a package/module system that's one of the industry's best, built in safety against race-conditions or out of bounds memory access, a wide range of tools and utilities to improve programmer workflows, and many others!\n\n## Backwards compatibility, breaking changes and deprecation\n\nRight now because the project is in an early state of development, we might introduce temporary changes as stop-gap measures, or implement features or APIs that might not work exactly in a way we end up liking. Therefore it is expected that some (if not most) of the user facing code will change and evolve over time. At the moment this means that we make no guarantees about backwards compatibility and have no formal deprecation model in place. Effectively meaning that currently we only support building from source with the latest `main` branch in our repository. We appreciate our early adopters and would ask them to evolve their code along with ours.\n\nPlease read our [Contributor Guide](CONTRIBUTING.md) for more information on how to get started.\n\n## License\n\nLicensed under either of\n\n- Apache License, Version 2.0, ([LICENSE-APACHE](LICENSE-APACHE) or <http://www.apache.org/licenses/LICENSE-2.0>)\n- MIT license ([LICENSE-MIT](LICENSE-MIT) or <http://opensource.org/licenses/MIT>)\n\nat your option.\n"
        },
        {
          "name": "android.nix",
          "type": "blob",
          "size": 1.404296875,
          "content": "# HACK(eddyb) this is a minimal setup to allow testing the Android build on NixOS.\n#\n# Tested in `NIXPKGS_ACCEPT_ANDROID_SDK_LICENSE=1 nix-shell android.nix --pure`,\n# by running the following commands (x64 target is for the Android Emulator):\n#   rustup target add aarch64-linux-android x86_64-linux-android\n#   cargo apk build -p example-runner-wgpu --lib --target aarch64-linux-android\n#   cargo apk build -p example-runner-wgpu --lib --target x86_64-linux-android\n#\n# (you can also replace `cargo apk build` with `cargo apk run` to launch it,\n# via `adb`, into either the Android Emulator, or a physical Android device)\n\nlet\n  pkgs = import <nixpkgs> {};\nin with pkgs; mkShell rec {\n  # Workaround for https://github.com/NixOS/nixpkgs/issues/60919.\n  # NOTE(eddyb) needed only in debug mode (warnings about needing optimizations\n  # turn into errors due to `-Werror`, for at least `spirv-tools-sys`).\n  hardeningDisable = [ \"fortify\" ];\n\n  # Allow cargo to download crates (even inside `nix-shell --pure`).\n  SSL_CERT_FILE = \"${cacert}/etc/ssl/certs/ca-bundle.crt\";\n\n  nativeBuildInputs = [ rustup cargo-apk jdk ];\n\n  ANDROID_SDK_ROOT = let\n    androidComposition = androidenv.composeAndroidPackages {\n      abiVersions = [ \"arm64-v8a\" \"x86_64\" ];\n      includeNDK = true;\n      platformVersions = [ \"30\" ];\n    };\n  in \"${androidComposition.androidsdk}/libexec/android-sdk\";\n\n  ANDROID_NDK_ROOT = \"${ANDROID_SDK_ROOT}/ndk-bundle\";\n}\n"
        },
        {
          "name": "clippy.toml",
          "type": "blob",
          "size": 0.03515625,
          "content": "avoid-breaking-exported-api = false\n"
        },
        {
          "name": "crates",
          "type": "tree",
          "content": null
        },
        {
          "name": "default.nix",
          "type": "blob",
          "size": 0.84765625,
          "content": "let\n  pkgs = import <nixpkgs> {};\nin with pkgs; stdenv.mkDerivation rec {\n  name = \"rust-gpu\";\n\n  # Workaround for https://github.com/NixOS/nixpkgs/issues/60919.\n  # NOTE(eddyb) needed only in debug mode (warnings about needing optimizations\n  # turn into errors due to `-Werror`, for at least `spirv-tools-sys`).\n  hardeningDisable = [ \"fortify\" ];\n\n  # Allow cargo to download crates (even inside `nix-shell --pure`).\n  SSL_CERT_FILE = \"${cacert}/etc/ssl/certs/ca-bundle.crt\";\n\n  nativeBuildInputs = [ rustup ];\n\n  # Runtime dependencies (for the example runners).\n  LD_LIBRARY_PATH = with xorg; lib.makeLibraryPath [\n    vulkan-loader\n\n    # NOTE(eddyb) winit really wants `libxkbcommon` on Wayland for some reason\n    # (see https://github.com/rust-windowing/winit/issues/1760 for more info).\n    wayland libxkbcommon\n\n    libX11 libXcursor libXi libXrandr\n  ];\n}\n"
        },
        {
          "name": "deny.toml",
          "type": "blob",
          "size": 3.314453125,
          "content": "# This section is considered when running `cargo deny check advisories`\n# More documentation for the advisories section can be found here:\n# https://embarkstudios.github.io/cargo-deny/checks/advisories/cfg.html\n[advisories]\nignore = [\n    # safemem transitive dependency, old and unmaintained but not critical and stable\n    \"RUSTSEC-2023-0081\",\n]\n\n# This section is considered when running `cargo deny check bans`.\n# More documentation about the 'bans' section can be found here:\n# https://embarkstudios.github.io/cargo-deny/checks/bans/cfg.html\n[bans]\n# Lint level for when multiple versions of the same crate are detected\nmultiple-versions = \"deny\"\n# Lint level for when a crate version requirement is `*`\nwildcards = \"allow\"\nhighlight = \"all\"\n# List of crates to deny\ndeny = [\n    # Each entry the name of a crate and a version range. If version is\n    # not specified, all versions will be matched.\n    #{ name = \"ansi_term\", version = \"=0.11.0\" },\n]\n# Certain crates/versions that will be skipped when doing duplicate detection.\nskip = [\n    #{ name = \"ansi_term\", version = \"=0.11.0\" },\n]\n# Similarly to `skip` allows you to skip certain crates during duplicate\n# detection. Unlike skip, it also includes the entire tree of transitive\n# dependencies starting at the specified crate, up to a certain depth, which is\n# by default infinite\nskip-tree = [\n    # we don't really care if our example brings in some duplicate dependencies, for now\n    { name = \"example-runner-ash\", version = \"0.0.0\", depth = 20 },\n    { name = \"example-runner-cpu\", version = \"0.0.0\", depth = 20 },\n    { name = \"example-runner-wgpu\", version = \"0.0.0\", depth = 20 },\n    { name = \"compiletests\", version = \"0.0.0\", depth = 20 },\n    { name = \"compiletests-deps-helper\", version = \"0.0.0\", depth = 20 },\n]\n\n\n\n\n[licenses]\n# List of explictly allowed licenses\n# See https://spdx.org/licenses/ for list of possible licenses\n# [possible values: any SPDX 3.7 short identifier (+ optional exception)].\nallow = [\n    \"MIT\",\n    \"Apache-2.0\",\n    \"Apache-2.0 WITH LLVM-exception\",\n    \"BSD-2-Clause\",\n    \"BSD-3-Clause\",\n    \"ISC\",\n\n    \"Zlib\",\n\n    \"Unicode-DFS-2016\",\n]\n# Allow 1 or more licenses on a per-crate basis, so that particular licenses\n# aren't accepted for every possible crate as with the normal allow list\nexceptions = [\n    # CC0 is a permissive license but somewhat unclear status for source code\n    # so we prefer to not have dependencies using it\n    # https://tldrlegal.com/license/creative-commons-cc0-1.0-universal\n    { allow = [\"CC0-1.0\"], name = \"notify\", version = \"5.0.0-pre.13\" },\n    { allow = [\"CC0-1.0\"], name = \"hexf-parse\" },\n]\n\n# See note in encoding_rs's readme! This clarification is copied directly from there.\n[[licenses.clarify]]\nname = \"encoding_rs\"\nversion = \"*\"\nexpression = \"(Apache-2.0 OR MIT) AND BSD-3-Clause\"\nlicense-files = [\n    { path = \"COPYRIGHT\", hash = 0x39f8ad31 }\n]\n\n# This section is considered when running `cargo deny check sources`.\n# More documentation about the 'sources' section can be found here:\n# https://embarkstudios.github.io/cargo-deny/checks/sources/cfg.html\n[sources]\n# Lint level for what to happen when a crate from a crate registry that is not\n# in the allow list is encountered\nunknown-registry = \"warn\"\n# Lint level for what to happen when a crate from a git repository that is not\n# in the allow list is encountered\nunknown-git = \"allow\"\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "rust-toolchain.toml",
          "type": "blob",
          "size": 0.3115234375,
          "content": "[toolchain]\nchannel = \"nightly-2023-09-30\"\ncomponents = [\"rust-src\", \"rustc-dev\", \"llvm-tools\"]\n# commit_hash = 8ce4540bd6fe7d58d4bc05f1b137d61937d3cf72\n\n# Whenever changing the nightly channel, update the commit hash above, and make\n# sure to change `REQUIRED_TOOLCHAIN` in `crates/rustc_codegen_spirv/build.rs` also.\n"
        },
        {
          "name": "rustfmt.toml",
          "type": "blob",
          "size": 0.1611328125,
          "content": "# HACK(eddyb) needed to format array/slice patterns at all, because it was a\n# breaking change (see https://github.com/rust-lang/rustfmt/pull/4994).\nversion = \"Two\"\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}