{
  "metadata": {
    "timestamp": 1736709345224,
    "page": 26,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "atom-archive/xray",
      "stars": 8470,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.134765625,
          "content": "**/node_modules\n**/target/\n**/*.rs.bk\n**/.DS_Store\n**/.cargo\nIcon*\n.tags*\nxray_wasm/dist\nxray_browser/dist\nmemo_js/dist\nmemo_js/test/dist\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.494140625,
          "content": "language: rust\n\nbefore_install:\n- curl -o- -L https://yarnpkg.com/install.sh | bash\n- export PATH=\"$HOME/.yarn/bin:$PATH\"\n- curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh | bash\n- nvm install v11\n\n# Create a virtual display for electron\n- export DISPLAY=':99.0'\n- Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &\n\nscript: script/cibuild\n\ncache:\n  cargo: true\n  yarn: true\n\nbranches:\n  only:\n    - master\n\nnotifications:\n  email:\n    on_success: never\n    on_failure: change\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 4.146484375,
          "content": "# Contributing to Xray\n\nThis project is still in the very early days, and isn't going to be usable for even basic editing for some time. At this point, we're looking for contributors that are willing to roll up their sleeves and solve problems. Please communicate with us however it makes sense, but in general opening a *pull request that fixes an issue* is going to be far more valuable than just reporting an issue.\n\nAs the architecture stabilizes and the surface area of the project expands, there will be increasing opportunities to help out. To get some ideas for specific projects that could help in the short term, check out [issues that are labeled \"help wanted\"](https://github.com/atom/xray/issues?q=is%3Aopen+is%3Aissue+label%3A%22help+wanted%22). If you have an idea you'd like to pursue outside of these, that's awesome, but you may want to discuss it with us in an issue first to ensure it fits before spending too much time on it.\n\nIt's really important to us to have a smooth on-ramp for contributors, and one great way you can contribute is by helping us improve this guide. If your experience is bumpy, can you open a pull request that makes it smoother for the next person?\n\n## Communicating with maintainers\n\nThe best way to communicate with maintainers is by posting a issue to this repository. The more thought you put into articulating your question or idea, the more value you'll be adding to the community and the easier it will be for maintainers to respond. That said, just try your best. If you have something you want to say, we'd prefer that you say it imperfectly rather than not saying it at all.\n\nYou can also communicate with maintainers or other community members on the `#xray` channel on Atom's public slack instance. After you [request an invite via this form](http://atom-slack.herokuapp.com/), you can access our Slack instance at https://atomio.slack.com.\n\n## Building\n\nSo far, we have only built this project on macOS. If you'd like to help us improve our build or documentation to support other platforms, that would be a huge help!\n\n### Install system dependencies\n\n#### Install Node v8.9.3\n\nTo install Node, you can install [`nvm`](https://github.com/creationix/nvm) and then run `nvm install v8.9.3`.\n\nLater versions may work, but you should ideally run the build with the same version of Node that is bundled into Xray's current Electron dependency. If in doubt, you can check the version of the `electron` dependency in [`xray_electron/package.json`](https://github.com/atom/xray/blob/master/xray_electron/package.json), then run `process.versions.node` in the console of that version of Electron to ensure that these instructions haven't gotten out of date.\n\n#### Install Rust\n\nYou can install Rust via [`rustup`](https://www.rustup.rs/). We currently require building on the nightly channel in order to use `wasm_bindgen` for browser support.\n\n#### Install Yarn\n\nFollow the [installation instructions](https://yarnpkg.com/en/docs/install) on the Yarn site.\n\n### Run the build script\n\nThis repository contains several components in top-level folders prefixed with `xray_*`. To build all of the components, simply run this in the root of the repository:\n\n```sh\nscript/build\n```\n\nTo build a release version (which will be much faster):\n\n```sh\nscript/build --release\n```\n\n## Running\n\nWe currently *only* support launching the application via the CLI. For this to work, you need to set the `XRAY_SRC_PATH` environment variable to the location of your repository. The CLI also currently *requires* an argument:\n\n```sh\nXRAY_SRC_PATH=. script/xray .\n```\n\nThat assumes you built with `--release`. To run the debug version, use `xray_debug` instead:\n\n```sh\nXRAY_SRC_PATH=. script/xray_debug .\n```\n\nOnce a blank window has opened, press <kbd>cmd-t</kbd> to open the file selection menu. Search for a file, and press <kbd>enter</kbd> to open it. The contents of the file should appear in the window. If something does not go as expected, check the dev tools (<kbd>cmd-shift-i</kbd>) for errors.\n\n## Running tests and benchmarks\n\n* All tests: `script/test`\n* Rust tests: `cargo test` in the root of the repository or a Rust subfolder.\n* Front-end tests: `cd xray_ui && yarn test`\n* Benchmarks: `cargo bench`\n"
        },
        {
          "name": "Cargo.lock",
          "type": "blob",
          "size": 67.00390625,
          "content": "# This file is automatically @generated by Cargo.\n# It is not intended for manual editing.\n[[package]]\nname = \"aho-corasick\"\nversion = \"0.6.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"memchr 2.0.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"ansi_term\"\nversion = \"0.11.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"winapi 0.3.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"arrayvec\"\nversion = \"0.4.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"nodrop 0.1.12 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"atty\"\nversion = \"0.2.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"libc 0.2.40 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"termion 1.5.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"winapi 0.3.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"backtrace\"\nversion = \"0.3.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"backtrace-sys 0.1.16 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"cfg-if 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"libc 0.2.40 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"rustc-demangle 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"winapi 0.3.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"backtrace-sys\"\nversion = \"0.1.16\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"cc 1.0.10 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"libc 0.2.40 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"bincode\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"byteorder 1.2.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"serde 1.0.80 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"bitflags\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\n\n[[package]]\nname = \"byteorder\"\nversion = \"1.2.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\n\n[[package]]\nname = \"bytes\"\nversion = \"0.4.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"byteorder 1.2.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"iovec 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"serde 1.0.80 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"cast\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\n\n[[package]]\nname = \"cc\"\nversion = \"1.0.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\n\n[[package]]\nname = \"cfg-if\"\nversion = \"0.1.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\n\n[[package]]\nname = \"chrono\"\nversion = \"0.4.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"num-integer 0.1.36 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"num-traits 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"time 0.1.39 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"clap\"\nversion = \"2.31.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"ansi_term 0.11.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"atty 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"bitflags 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"strsim 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"textwrap 0.9.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"unicode-width 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"vec_map 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"console_error_panic_hook\"\nversion = \"0.1.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"cfg-if 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"wasm-bindgen 0.2.33 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"criterion\"\nversion = \"0.2.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"atty 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"clap 2.31.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"criterion-plot 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"criterion-stats 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"failure 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"failure_derive 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"handlebars 0.31.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"itertools 0.7.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"itertools-num 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"log 0.4.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"serde 1.0.80 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"serde_derive 1.0.39 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"serde_json 1.0.15 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"simplelog 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"criterion-plot\"\nversion = \"0.2.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"byteorder 1.2.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"cast 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"itertools 0.7.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"criterion-stats\"\nversion = \"0.2.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"cast 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"num-traits 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"num_cpus 1.8.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"rand 0.4.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"thread-scoped 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"crossbeam\"\nversion = \"0.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\n\n[[package]]\nname = \"crossbeam-deque\"\nversion = \"0.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"crossbeam-epoch 0.4.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"crossbeam-utils 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"crossbeam-epoch\"\nversion = \"0.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"arrayvec 0.4.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"cfg-if 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"crossbeam-utils 0.3.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"lazy_static 1.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"memoffset 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"scopeguard 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"crossbeam-utils\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"cfg-if 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"crossbeam-utils\"\nversion = \"0.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"cfg-if 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"diffs\"\nversion = \"0.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\n\n[[package]]\nname = \"docopt\"\nversion = \"0.8.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"lazy_static 1.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"regex 0.2.10 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"serde 1.0.80 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"serde_derive 1.0.39 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"strsim 0.6.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"dtoa\"\nversion = \"0.4.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\n\n[[package]]\nname = \"either\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\n\n[[package]]\nname = \"failure\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"backtrace 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"failure_derive 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"failure_derive\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"quote 0.3.15 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"syn 0.11.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"synstructure 0.6.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"flatbuffers\"\nversion = \"0.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"smallvec 0.6.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"fnv\"\nversion = \"1.0.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\n\n[[package]]\nname = \"fuchsia-zircon\"\nversion = \"0.3.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"bitflags 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"fuchsia-zircon-sys 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"fuchsia-zircon-sys\"\nversion = \"0.3.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\n\n[[package]]\nname = \"futures\"\nversion = \"0.1.21\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\n\n[[package]]\nname = \"futures-cpupool\"\nversion = \"0.1.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"futures 0.1.21 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"num_cpus 1.8.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"globset\"\nversion = \"0.3.0\"\nsource = \"git+https://github.com/atom/ripgrep?branch=include_ignored#e3c5a61b62f43906fa0555e0222de241196fcf95\"\ndependencies = [\n \"aho-corasick 0.6.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"fnv 1.0.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"log 0.4.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"memchr 2.0.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"regex 0.2.10 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"handlebars\"\nversion = \"0.31.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"lazy_static 1.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"log 0.4.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"pest 1.0.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"pest_derive 1.0.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"quick-error 1.2.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"regex 0.2.10 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"serde 1.0.80 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"serde_json 1.0.15 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"hex\"\nversion = \"0.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\n\n[[package]]\nname = \"ignore\"\nversion = \"0.4.1\"\nsource = \"git+https://github.com/atom/ripgrep?branch=include_ignored#e3c5a61b62f43906fa0555e0222de241196fcf95\"\ndependencies = [\n \"crossbeam 0.3.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"globset 0.3.0 (git+https://github.com/atom/ripgrep?branch=include_ignored)\",\n \"lazy_static 1.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"log 0.4.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"memchr 2.0.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"regex 0.2.10 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"same-file 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"thread_local 0.3.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"walkdir 2.1.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"winapi 0.3.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"iovec\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"libc 0.2.40 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"winapi 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"itertools\"\nversion = \"0.7.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"either 1.5.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"itertools-num\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"num-traits 0.1.43 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"itoa\"\nversion = \"0.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\n\n[[package]]\nname = \"js-sys\"\nversion = \"0.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"wasm-bindgen 0.2.33 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"kernel32-sys\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"winapi 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"winapi-build 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"lazy_static\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"version_check 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"lazycell\"\nversion = \"0.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\n\n[[package]]\nname = \"libc\"\nversion = \"0.2.40\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\n\n[[package]]\nname = \"log\"\nversion = \"0.3.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"log 0.4.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"log\"\nversion = \"0.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"cfg-if 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"memchr\"\nversion = \"2.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"libc 0.2.40 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"memo_core\"\nversion = \"0.1.0\"\ndependencies = [\n \"diffs 0.3.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"flatbuffers 0.5.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"futures 0.1.21 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"futures-cpupool 0.1.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"lazy_static 1.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"rand 0.3.22 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"serde 1.0.80 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"serde_derive 1.0.39 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"smallvec 0.6.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"uuid 0.7.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"memo_js\"\nversion = \"0.1.0\"\ndependencies = [\n \"bincode 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"console_error_panic_hook 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"futures 0.1.21 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"hex 0.3.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"js-sys 0.3.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"memo_core 0.1.0\",\n \"serde 1.0.80 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"serde_derive 1.0.39 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"wasm-bindgen 0.2.33 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"wasm-bindgen-futures 0.3.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"memoffset\"\nversion = \"0.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\n\n[[package]]\nname = \"mio\"\nversion = \"0.6.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"fuchsia-zircon 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"fuchsia-zircon-sys 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"iovec 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"kernel32-sys 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"lazycell 0.6.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"libc 0.2.40 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"log 0.4.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"miow 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"net2 0.2.32 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"slab 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"winapi 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"mio-named-pipes\"\nversion = \"0.1.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"log 0.4.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"mio 0.6.14 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"miow 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"winapi 0.3.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"mio-uds\"\nversion = \"0.6.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"libc 0.2.40 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"mio 0.6.14 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"miow\"\nversion = \"0.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"kernel32-sys 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"net2 0.2.32 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"winapi 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"ws2_32-sys 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"miow\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"socket2 0.3.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"winapi 0.3.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"net2\"\nversion = \"0.2.32\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"cfg-if 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"libc 0.2.40 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"winapi 0.3.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"nodrop\"\nversion = \"0.1.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\n\n[[package]]\nname = \"num-integer\"\nversion = \"0.1.36\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"num-traits 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"num-traits\"\nversion = \"0.1.43\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"num-traits 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"num-traits\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\n\n[[package]]\nname = \"num_cpus\"\nversion = \"1.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"libc 0.2.40 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"owning_ref\"\nversion = \"0.3.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"stable_deref_trait 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"parking_lot\"\nversion = \"0.5.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"owning_ref 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"parking_lot_core 0.2.13 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"parking_lot_core\"\nversion = \"0.2.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"libc 0.2.40 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"rand 0.4.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"smallvec 0.6.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"winapi 0.3.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"pest\"\nversion = \"1.0.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\n\n[[package]]\nname = \"pest_derive\"\nversion = \"1.0.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"pest 1.0.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"quote 0.3.15 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"syn 0.11.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"proc-macro2\"\nversion = \"0.3.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"unicode-xid 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"proc-macro2\"\nversion = \"0.4.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"unicode-xid 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"quick-error\"\nversion = \"1.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\n\n[[package]]\nname = \"quote\"\nversion = \"0.3.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\n\n[[package]]\nname = \"quote\"\nversion = \"0.5.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"proc-macro2 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"quote\"\nversion = \"0.6.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"proc-macro2 0.4.13 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"rand\"\nversion = \"0.3.22\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"fuchsia-zircon 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"libc 0.2.40 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"rand 0.4.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"rand\"\nversion = \"0.4.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"fuchsia-zircon 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"libc 0.2.40 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"winapi 0.3.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"redox_syscall\"\nversion = \"0.1.37\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\n\n[[package]]\nname = \"redox_termios\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"redox_syscall 0.1.37 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"regex\"\nversion = \"0.2.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"aho-corasick 0.6.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"memchr 2.0.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"regex-syntax 0.5.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"thread_local 0.3.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"utf8-ranges 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"regex-syntax\"\nversion = \"0.5.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"ucd-util 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"rustc-demangle\"\nversion = \"0.1.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\n\n[[package]]\nname = \"same-file\"\nversion = \"1.0.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"winapi 0.3.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"scoped-tls\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\n\n[[package]]\nname = \"scopeguard\"\nversion = \"0.3.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\n\n[[package]]\nname = \"seahash\"\nversion = \"3.0.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\n\n[[package]]\nname = \"serde\"\nversion = \"1.0.80\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\n\n[[package]]\nname = \"serde_derive\"\nversion = \"1.0.39\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"proc-macro2 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"quote 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"serde_derive_internals 0.23.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"syn 0.13.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"serde_derive_internals\"\nversion = \"0.23.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"proc-macro2 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"syn 0.13.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"serde_json\"\nversion = \"1.0.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"dtoa 0.4.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"itoa 0.4.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"num-traits 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"serde 1.0.80 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"simplelog\"\nversion = \"0.5.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"chrono 0.4.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"log 0.4.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"term 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"slab\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\n\n[[package]]\nname = \"smallvec\"\nversion = \"0.6.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"unreachable 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"socket2\"\nversion = \"0.3.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"cfg-if 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"libc 0.2.40 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"winapi 0.3.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"stable_deref_trait\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\n\n[[package]]\nname = \"strsim\"\nversion = \"0.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\n\n[[package]]\nname = \"strsim\"\nversion = \"0.7.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\n\n[[package]]\nname = \"syn\"\nversion = \"0.11.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"quote 0.3.15 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"synom 0.11.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"unicode-xid 0.0.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"syn\"\nversion = \"0.13.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"proc-macro2 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"quote 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"unicode-xid 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"syn\"\nversion = \"0.15.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"proc-macro2 0.4.13 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"quote 0.6.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"unicode-xid 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"synom\"\nversion = \"0.11.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"unicode-xid 0.0.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"synstructure\"\nversion = \"0.6.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"quote 0.3.15 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"syn 0.11.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"term\"\nversion = \"0.5.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"byteorder 1.2.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"winapi 0.3.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"termion\"\nversion = \"1.5.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"libc 0.2.40 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"redox_syscall 0.1.37 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"redox_termios 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"textwrap\"\nversion = \"0.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"unicode-width 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"thread-scoped\"\nversion = \"1.0.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\n\n[[package]]\nname = \"thread_local\"\nversion = \"0.3.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"lazy_static 1.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"unreachable 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"time\"\nversion = \"0.1.39\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"libc 0.2.40 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"redox_syscall 0.1.37 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"winapi 0.3.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"tokio\"\nversion = \"0.1.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"futures 0.1.21 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"mio 0.6.14 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"tokio-executor 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"tokio-io 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"tokio-reactor 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"tokio-tcp 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"tokio-threadpool 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"tokio-timer 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"tokio-udp 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"tokio-core\"\nversion = \"0.1.17\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"bytes 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"futures 0.1.21 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"iovec 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"log 0.4.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"mio 0.6.14 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"scoped-tls 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"tokio 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"tokio-executor 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"tokio-io 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"tokio-reactor 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"tokio-timer 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"tokio-executor\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"futures 0.1.21 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"tokio-io\"\nversion = \"0.1.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"bytes 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"futures 0.1.21 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"log 0.4.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"tokio-process\"\nversion = \"0.1.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"futures 0.1.21 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"libc 0.2.40 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"mio 0.6.14 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"mio-named-pipes 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"tokio-core 0.1.17 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"tokio-io 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"tokio-signal 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"winapi 0.3.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"tokio-reactor\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"futures 0.1.21 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"log 0.4.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"mio 0.6.14 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"slab 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"tokio-executor 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"tokio-io 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"tokio-signal\"\nversion = \"0.1.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"futures 0.1.21 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"libc 0.2.40 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"mio 0.6.14 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"mio-uds 0.6.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"tokio-core 0.1.17 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"tokio-io 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"winapi 0.3.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"tokio-tcp\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"bytes 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"futures 0.1.21 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"iovec 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"mio 0.6.14 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"tokio-io 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"tokio-reactor 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"tokio-threadpool\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"crossbeam-deque 0.3.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"futures 0.1.21 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"log 0.4.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"num_cpus 1.8.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"rand 0.4.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"tokio-executor 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"tokio-timer\"\nversion = \"0.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"futures 0.1.21 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"tokio-executor 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"tokio-udp\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"bytes 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"futures 0.1.21 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"log 0.4.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"mio 0.6.14 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"tokio-io 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"tokio-reactor 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"tokio-uds\"\nversion = \"0.1.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"bytes 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"futures 0.1.21 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"iovec 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"libc 0.2.40 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"log 0.3.9 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"mio 0.6.14 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"mio-uds 0.6.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"tokio-core 0.1.17 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"tokio-io 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"ucd-util\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\n\n[[package]]\nname = \"unicode-width\"\nversion = \"0.1.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\n\n[[package]]\nname = \"unicode-xid\"\nversion = \"0.0.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\n\n[[package]]\nname = \"unicode-xid\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\n\n[[package]]\nname = \"unreachable\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"void 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"utf8-ranges\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\n\n[[package]]\nname = \"uuid\"\nversion = \"0.7.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"byteorder 1.2.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"serde 1.0.80 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"vec_map\"\nversion = \"0.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\n\n[[package]]\nname = \"version_check\"\nversion = \"0.1.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\n\n[[package]]\nname = \"void\"\nversion = \"1.0.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\n\n[[package]]\nname = \"walkdir\"\nversion = \"2.1.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"same-file 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"winapi 0.3.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"wasm-bindgen\"\nversion = \"0.2.33\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"serde 1.0.80 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"serde_json 1.0.15 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"wasm-bindgen-macro 0.2.33 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"wasm-bindgen-backend\"\nversion = \"0.2.33\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"lazy_static 1.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"log 0.4.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"proc-macro2 0.4.13 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"quote 0.6.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"syn 0.15.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"wasm-bindgen-shared 0.2.33 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"wasm-bindgen-futures\"\nversion = \"0.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"futures 0.1.21 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"js-sys 0.3.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"wasm-bindgen 0.2.33 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"wasm-bindgen-macro\"\nversion = \"0.2.33\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"quote 0.6.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"wasm-bindgen-macro-support 0.2.33 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"wasm-bindgen-macro-support\"\nversion = \"0.2.33\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"proc-macro2 0.4.13 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"quote 0.6.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"syn 0.15.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"wasm-bindgen-backend 0.2.33 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"wasm-bindgen-shared 0.2.33 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"wasm-bindgen-shared\"\nversion = \"0.2.33\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\n\n[[package]]\nname = \"winapi\"\nversion = \"0.2.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\n\n[[package]]\nname = \"winapi\"\nversion = \"0.3.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"winapi-i686-pc-windows-gnu 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"winapi-x86_64-pc-windows-gnu 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"winapi-build\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\n\n[[package]]\nname = \"winapi-i686-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\n\n[[package]]\nname = \"winapi-x86_64-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\n\n[[package]]\nname = \"ws2_32-sys\"\nversion = \"0.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\ndependencies = [\n \"winapi 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"winapi-build 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"xray_cli\"\nversion = \"0.1.0\"\ndependencies = [\n \"docopt 0.8.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"serde 1.0.80 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"serde_derive 1.0.39 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"serde_json 1.0.15 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"xray_core\"\nversion = \"0.1.0\"\ndependencies = [\n \"bincode 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"bytes 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"criterion 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"futures 0.1.21 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"futures-cpupool 0.1.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"lazy_static 1.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"parking_lot 0.5.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"rand 0.3.22 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"seahash 3.0.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"serde 1.0.80 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"serde_derive 1.0.39 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"serde_json 1.0.15 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"smallvec 0.6.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"tokio-core 0.1.17 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"tokio-timer 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"wasm-bindgen 0.2.33 (registry+https://github.com/rust-lang/crates.io-index)\",\n]\n\n[[package]]\nname = \"xray_server\"\nversion = \"0.1.0\"\ndependencies = [\n \"bytes 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"futures 0.1.21 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"futures-cpupool 0.1.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"ignore 0.4.1 (git+https://github.com/atom/ripgrep?branch=include_ignored)\",\n \"parking_lot 0.5.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"rand 0.4.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"serde 1.0.80 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"serde_derive 1.0.39 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"serde_json 1.0.15 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"tokio-core 0.1.17 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"tokio-io 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"tokio-process 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"tokio-uds 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"xray_core 0.1.0\",\n]\n\n[[package]]\nname = \"xray_wasm\"\nversion = \"0.1.0\"\ndependencies = [\n \"bytes 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"futures 0.1.21 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"serde 1.0.80 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"serde_derive 1.0.39 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"serde_json 1.0.15 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"wasm-bindgen 0.2.33 (registry+https://github.com/rust-lang/crates.io-index)\",\n \"xray_core 0.1.0\",\n]\n\n[metadata]\n\"checksum aho-corasick 0.6.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"d6531d44de723825aa81398a6415283229725a00fa30713812ab9323faa82fc4\"\n\"checksum ansi_term 0.11.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ee49baf6cb617b853aa8d93bf420db2383fab46d314482ca2803b40d5fde979b\"\n\"checksum arrayvec 0.4.7 (registry+https://github.com/rust-lang/crates.io-index)\" = \"a1e964f9e24d588183fcb43503abda40d288c8657dfc27311516ce2f05675aef\"\n\"checksum atty 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)\" = \"af80143d6f7608d746df1520709e5d141c96f240b0e62b0aa41bdfb53374d9d4\"\n\"checksum backtrace 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ebbe525f66f42d207968308ee86bc2dd60aa5fab535b22e616323a173d097d8e\"\n\"checksum backtrace-sys 0.1.16 (registry+https://github.com/rust-lang/crates.io-index)\" = \"44585761d6161b0f57afc49482ab6bd067e4edef48c12a152c237eb0203f7661\"\n\"checksum bincode 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"bda13183df33055cbb84b847becce220d392df502ebe7a4a78d7021771ed94d0\"\n\"checksum bitflags 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"b3c30d3802dfb7281680d6285f2ccdaa8c2d8fee41f93805dba5c4cf50dc23cf\"\n\"checksum byteorder 1.2.7 (registry+https://github.com/rust-lang/crates.io-index)\" = \"94f88df23a25417badc922ab0f5716cc1330e87f71ddd9203b3a3ccd9cedf75d\"\n\"checksum bytes 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\" = \"1b7db437d718977f6dc9b2e3fd6fc343c02ac6b899b73fdd2179163447bd9ce9\"\n\"checksum cast 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"926013f2860c46252efceabb19f4a6b308197505082c609025aa6706c011d427\"\n\"checksum cc 1.0.10 (registry+https://github.com/rust-lang/crates.io-index)\" = \"8b9d2900f78631a5876dc5d6c9033ede027253efcd33dd36b1309fc6cab97ee0\"\n\"checksum cfg-if 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)\" = \"082bb9b28e00d3c9d39cc03e64ce4cea0f1bb9b3fde493f0cbc008472d22bdf4\"\n\"checksum chrono 0.4.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"1cce36c92cb605414e9b824f866f5babe0a0368e39ea07393b9b63cf3844c0e6\"\n\"checksum clap 2.31.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"f0f16b89cbb9ee36d87483dc939fe9f1e13c05898d56d7b230a0d4dff033a536\"\n\"checksum console_error_panic_hook 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)\" = \"6c5dd2c094474ec60a6acaf31780af270275e3153bafff2db5995b715295762e\"\n\"checksum criterion 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"4f11151e2961d0483e5eb7a2ede5ed8071a460d04d2b7c89e8257aa5502b0e0b\"\n\"checksum criterion-plot 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"9f7f7c88a8d341dd9fd9e31a72ca2ca24428db79afb491852873b2c784e037e6\"\n\"checksum criterion-stats 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"dd48feb0253b2968ff3085e7f3fba6738c9ff859f420a2fb81a48986eb66da36\"\n\"checksum crossbeam 0.3.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"24ce9782d4d5c53674646a6a4c1863a21a8fc0cb649b3c94dfc16e45071dea19\"\n\"checksum crossbeam-deque 0.3.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"c1bdc73742c36f7f35ebcda81dbb33a7e0d33757d03a06d9ddca762712ec5ea2\"\n\"checksum crossbeam-epoch 0.4.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"9b4e2817eb773f770dcb294127c011e22771899c21d18fce7dd739c0b9832e81\"\n\"checksum crossbeam-utils 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"2760899e32a1d58d5abb31129f8fae5de75220bc2176e77ff7c627ae45c918d9\"\n\"checksum crossbeam-utils 0.3.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"d636a8b3bcc1b409d7ffd3facef8f21dcb4009626adbd0c5e6c4305c07253c7b\"\n\"checksum diffs 0.3.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"a195326f620ab1da14f60d991c066311122cbdce579a00085d8be45899c7da0c\"\n\"checksum docopt 0.8.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"d8acd393692c503b168471874953a2531df0e9ab77d0b6bbc582395743300a4a\"\n\"checksum dtoa 0.4.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"09c3753c3db574d215cba4ea76018483895d7bff25a31b49ba45db21c48e50ab\"\n\"checksum either 1.5.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"3be565ca5c557d7f59e7cfcf1844f9e3033650c929c6566f511e8005f205c1d0\"\n\"checksum failure 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"934799b6c1de475a012a02dab0ace1ace43789ee4b99bcfbf1a2e3e8ced5de82\"\n\"checksum failure_derive 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"c7cdda555bb90c9bb67a3b670a0f42de8e73f5981524123ad8578aafec8ddb8b\"\n\"checksum flatbuffers 0.5.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ea0c34f669be9911826facafe996adfda978aeee67285a13556869e2d8b8331f\"\n\"checksum fnv 1.0.6 (registry+https://github.com/rust-lang/crates.io-index)\" = \"2fad85553e09a6f881f739c29f0b00b0f01357c743266d478b68951ce23285f3\"\n\"checksum fuchsia-zircon 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"2e9763c69ebaae630ba35f74888db465e49e259ba1bc0eda7d06f4a067615d82\"\n\"checksum fuchsia-zircon-sys 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"3dcaa9ae7725d12cdb85b3ad99a434db70b468c09ded17e012d86b5c1010f7a7\"\n\"checksum futures 0.1.21 (registry+https://github.com/rust-lang/crates.io-index)\" = \"1a70b146671de62ec8c8ed572219ca5d594d9b06c0b364d5e67b722fc559b48c\"\n\"checksum futures-cpupool 0.1.8 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ab90cde24b3319636588d0c35fe03b1333857621051837ed769faefb4c2162e4\"\n\"checksum globset 0.3.0 (git+https://github.com/atom/ripgrep?branch=include_ignored)\" = \"<none>\"\n\"checksum handlebars 0.31.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"e7bdb08e879b8c78ee90f5022d121897c31ea022cb0cc6d13f2158c7a9fbabb1\"\n\"checksum hex 0.3.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"805026a5d0141ffc30abb3be3173848ad46a1b1664fe632428479619a3644d77\"\n\"checksum ignore 0.4.1 (git+https://github.com/atom/ripgrep?branch=include_ignored)\" = \"<none>\"\n\"checksum iovec 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"dbe6e417e7d0975db6512b90796e8ce223145ac4e33c377e4a42882a0e88bb08\"\n\"checksum itertools 0.7.8 (registry+https://github.com/rust-lang/crates.io-index)\" = \"f58856976b776fedd95533137617a02fb25719f40e7d9b01c7043cd65474f450\"\n\"checksum itertools-num 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"4d78fa608383e6e608ba36f962ac991d5d6878d7203eb93b4711b14fa6717813\"\n\"checksum itoa 0.4.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"c069bbec61e1ca5a596166e55dfe4773ff745c3d16b700013bcaff9a6df2c682\"\n\"checksum js-sys 0.3.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"8be516f4c4de4e62aa70070b8c34a62b8909b67ef93809918edefaba01df7594\"\n\"checksum kernel32-sys 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"7507624b29483431c0ba2d82aece8ca6cdba9382bff4ddd0f7490560c056098d\"\n\"checksum lazy_static 1.1.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ca488b89a5657b0a2ecd45b95609b3e848cf1755da332a0da46e2b2b1cb371a7\"\n\"checksum lazycell 0.6.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"a6f08839bc70ef4a3fe1d566d5350f519c5912ea86be0df1740a7d247c7fc0ef\"\n\"checksum libc 0.2.40 (registry+https://github.com/rust-lang/crates.io-index)\" = \"6fd41f331ac7c5b8ac259b8bf82c75c0fb2e469bbf37d2becbba9a6a2221965b\"\n\"checksum log 0.3.9 (registry+https://github.com/rust-lang/crates.io-index)\" = \"e19e8d5c34a3e0e2223db8e060f9e8264aeeb5c5fc64a4ee9965c062211c024b\"\n\"checksum log 0.4.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"89f010e843f2b1a31dbd316b3b8d443758bc634bed37aabade59c686d644e0a2\"\n\"checksum memchr 2.0.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"796fba70e76612589ed2ce7f45282f5af869e0fdd7cc6199fa1aa1f1d591ba9d\"\n\"checksum memoffset 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"0f9dc261e2b62d7a622bf416ea3c5245cdd5d9a7fcc428c0d06804dfce1775b3\"\n\"checksum mio 0.6.14 (registry+https://github.com/rust-lang/crates.io-index)\" = \"6d771e3ef92d58a8da8df7d6976bfca9371ed1de6619d9d5a5ce5b1f29b85bfe\"\n\"checksum mio-named-pipes 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)\" = \"f5e374eff525ce1c5b7687c4cef63943e7686524a387933ad27ca7ec43779cb3\"\n\"checksum mio-uds 0.6.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"1731a873077147b626d89cc6c2a0db6288d607496c5d10c0cfcf3adc697ec673\"\n\"checksum miow 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"8c1f2f3b1cf331de6896aabf6e9d55dca90356cc9960cca7eaaf408a355ae919\"\n\"checksum miow 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"9224c91f82b3c47cf53dcf78dfaa20d6888fbcc5d272d5f2fcdf8a697f3c987d\"\n\"checksum net2 0.2.32 (registry+https://github.com/rust-lang/crates.io-index)\" = \"9044faf1413a1057267be51b5afba8eb1090bd2231c693664aa1db716fe1eae0\"\n\"checksum nodrop 0.1.12 (registry+https://github.com/rust-lang/crates.io-index)\" = \"9a2228dca57108069a5262f2ed8bd2e82496d2e074a06d1ccc7ce1687b6ae0a2\"\n\"checksum num-integer 0.1.36 (registry+https://github.com/rust-lang/crates.io-index)\" = \"f8d26da319fb45674985c78f1d1caf99aa4941f785d384a2ae36d0740bc3e2fe\"\n\"checksum num-traits 0.1.43 (registry+https://github.com/rust-lang/crates.io-index)\" = \"92e5113e9fd4cc14ded8e499429f396a20f98c772a47cc8622a736e1ec843c31\"\n\"checksum num-traits 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"dee092fcdf725aee04dd7da1d21debff559237d49ef1cb3e69bcb8ece44c7364\"\n\"checksum num_cpus 1.8.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"c51a3322e4bca9d212ad9a158a02abc6934d005490c054a2778df73a70aa0a30\"\n\"checksum owning_ref 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"cdf84f41639e037b484f93433aa3897863b561ed65c6e59c7073d7c561710f37\"\n\"checksum parking_lot 0.5.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"9fd9d732f2de194336fb02fe11f9eed13d9e76f13f4315b4d88a14ca411750cd\"\n\"checksum parking_lot_core 0.2.13 (registry+https://github.com/rust-lang/crates.io-index)\" = \"538ef00b7317875071d5e00f603f24d16f0b474c1a5fc0ccb8b454ca72eafa79\"\n\"checksum pest 1.0.6 (registry+https://github.com/rust-lang/crates.io-index)\" = \"0fce5d8b5cc33983fc74f78ad552b5522ab41442c4ca91606e4236eb4b5ceefc\"\n\"checksum pest_derive 1.0.7 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ab94faafeb93f4c5e3ce81ca0e5a779529a602ad5d09ae6d21996bfb8b6a52bf\"\n\"checksum proc-macro2 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)\" = \"49b6a521dc81b643e9a51e0d1cf05df46d5a2f3c0280ea72bcb68276ba64a118\"\n\"checksum proc-macro2 0.4.13 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ee5697238f0d893c7f0ecc59c0999f18d2af85e424de441178bcacc9f9e6cf67\"\n\"checksum quick-error 1.2.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"eda5fe9b71976e62bc81b781206aaa076401769b2143379d3eb2118388babac4\"\n\"checksum quote 0.3.15 (registry+https://github.com/rust-lang/crates.io-index)\" = \"7a6e920b65c65f10b2ae65c831a81a073a89edd28c7cce89475bff467ab4167a\"\n\"checksum quote 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"7b0ff51282f28dc1b53fd154298feaa2e77c5ea0dba68e1fd8b03b72fbe13d2a\"\n\"checksum quote 0.6.8 (registry+https://github.com/rust-lang/crates.io-index)\" = \"dd636425967c33af890042c483632d33fa7a18f19ad1d7ea72e8998c6ef8dea5\"\n\"checksum rand 0.3.22 (registry+https://github.com/rust-lang/crates.io-index)\" = \"15a732abf9d20f0ad8eeb6f909bf6868722d9a06e1e50802b6a70351f40b4eb1\"\n\"checksum rand 0.4.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"eba5f8cb59cc50ed56be8880a5c7b496bfd9bd26394e176bc67884094145c2c5\"\n\"checksum redox_syscall 0.1.37 (registry+https://github.com/rust-lang/crates.io-index)\" = \"0d92eecebad22b767915e4d529f89f28ee96dbbf5a4810d2b844373f136417fd\"\n\"checksum redox_termios 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"7e891cfe48e9100a70a3b6eb652fef28920c117d366339687bd5576160db0f76\"\n\"checksum regex 0.2.10 (registry+https://github.com/rust-lang/crates.io-index)\" = \"aec3f58d903a7d2a9dc2bf0e41a746f4530e0cab6b615494e058f67a3ef947fb\"\n\"checksum regex-syntax 0.5.5 (registry+https://github.com/rust-lang/crates.io-index)\" = \"bd90079345f4a4c3409214734ae220fd773c6f2e8a543d07370c6c1c369cfbfb\"\n\"checksum rustc-demangle 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)\" = \"11fb43a206a04116ffd7cfcf9bcb941f8eb6cc7ff667272246b0a1c74259a3cb\"\n\"checksum same-file 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"cfb6eded0b06a0b512c8ddbcf04089138c9b4362c2f696f3c3d76039d68f3637\"\n\"checksum scoped-tls 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"8674d439c964889e2476f474a3bf198cc9e199e77499960893bac5de7e9218a4\"\n\"checksum scopeguard 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"94258f53601af11e6a49f722422f6e3425c52b06245a5cf9bc09908b174f5e27\"\n\"checksum seahash 3.0.5 (registry+https://github.com/rust-lang/crates.io-index)\" = \"e048636bed25842fcdc36e5ad1ec6295b72d4b5b8a4b759b64915a4ce2b9d09d\"\n\"checksum serde 1.0.80 (registry+https://github.com/rust-lang/crates.io-index)\" = \"15c141fc7027dd265a47c090bf864cf62b42c4d228bbcf4e51a0c9e2b0d3f7ef\"\n\"checksum serde_derive 1.0.39 (registry+https://github.com/rust-lang/crates.io-index)\" = \"16e97f8dc5b2dabc0183e0cde24b1a53835e5bb3d2c9e0fdb077f895bba7f2a9\"\n\"checksum serde_derive_internals 0.23.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"9d30c4596450fd7bbda79ef15559683f9a79ac0193ea819db90000d7e1cae794\"\n\"checksum serde_json 1.0.15 (registry+https://github.com/rust-lang/crates.io-index)\" = \"7bf1cbb1387028a13739cb018ee0d9b3db534f22ca3c84a5904f7eadfde14e75\"\n\"checksum simplelog 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ce595117de34b75e057b41e99079e43e9fcc4e5ec9c7ba5f2fea55321f0c624e\"\n\"checksum slab 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"fdeff4cd9ecff59ec7e3744cbca73dfe5ac35c2aedb2cfba8a1c715a18912e9d\"\n\"checksum smallvec 0.6.5 (registry+https://github.com/rust-lang/crates.io-index)\" = \"153ffa32fd170e9944f7e0838edf824a754ec4c1fc64746fcc9fe1f8fa602e5d\"\n\"checksum socket2 0.3.5 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ff606e0486e88f5fc6cfeb3966e434fb409abbc7a3ab495238f70a1ca97f789d\"\n\"checksum stable_deref_trait 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"15132e0e364248108c5e2c02e3ab539be8d6f5d52a01ca9bbf27ed657316f02b\"\n\"checksum strsim 0.6.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"b4d15c810519a91cf877e7e36e63fe068815c678181439f2f29e2562147c3694\"\n\"checksum strsim 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"bb4f380125926a99e52bc279241539c018323fab05ad6368b56f93d9369ff550\"\n\"checksum syn 0.11.11 (registry+https://github.com/rust-lang/crates.io-index)\" = \"d3b891b9015c88c576343b9b3e41c2c11a51c219ef067b264bd9c8aa9b441dad\"\n\"checksum syn 0.13.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"91b52877572087400e83d24b9178488541e3d535259e04ff17a63df1e5ceff59\"\n\"checksum syn 0.15.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"9056ebe7f2d6a38bc63171816fd1d3430da5a43896de21676dc5c0a4b8274a11\"\n\"checksum synom 0.11.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"a393066ed9010ebaed60b9eafa373d4b1baac186dd7e008555b0f702b51945b6\"\n\"checksum synstructure 0.6.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"3a761d12e6d8dcb4dcf952a7a89b475e3a9d69e4a69307e01a470977642914bd\"\n\"checksum term 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"5e6b677dd1e8214ea1ef4297f85dbcbed8e8cdddb561040cc998ca2551c37561\"\n\"checksum termion 1.5.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"689a3bdfaab439fd92bc87df5c4c78417d3cbe537487274e9b0b2dce76e92096\"\n\"checksum textwrap 0.9.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"c0b59b6b4b44d867f1370ef1bd91bfb262bf07bf0ae65c202ea2fbc16153b693\"\n\"checksum thread-scoped 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"bcbb6aa301e5d3b0b5ef639c9a9c7e2f1c944f177b460c04dc24c69b1fa2bd99\"\n\"checksum thread_local 0.3.5 (registry+https://github.com/rust-lang/crates.io-index)\" = \"279ef31c19ededf577bfd12dfae728040a21f635b06a24cd670ff510edd38963\"\n\"checksum time 0.1.39 (registry+https://github.com/rust-lang/crates.io-index)\" = \"a15375f1df02096fb3317256ce2cee6a1f42fc84ea5ad5fc8c421cfe40c73098\"\n\"checksum tokio 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)\" = \"be15ef40f675c9fe66e354d74c73f3ed012ca1aa14d65846a33ee48f1ae8d922\"\n\"checksum tokio-core 0.1.17 (registry+https://github.com/rust-lang/crates.io-index)\" = \"aeeffbbb94209023feaef3c196a41cbcdafa06b4a6f893f68779bb5e53796f71\"\n\"checksum tokio-executor 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"8cac2a7883ff3567e9d66bb09100d09b33d90311feca0206c7ca034bc0c55113\"\n\"checksum tokio-io 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)\" = \"6af9eb326f64b2d6b68438e1953341e00ab3cf54de7e35d92bfc73af8555313a\"\n\"checksum tokio-process 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)\" = \"2e76e0cd21a4ae5362697e85f98aa5d26c88f09ce9fc367b57c0643ba0b022c2\"\n\"checksum tokio-reactor 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"b3cedc8e5af5131dc3423ffa4f877cce78ad25259a9a62de0613735a13ebc64b\"\n\"checksum tokio-signal 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)\" = \"e8f46863230f9a05cf52d173721ec391b9c5782a2465f593029922b8782b9ffe\"\n\"checksum tokio-tcp 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ec9b094851aadd2caf83ba3ad8e8c4ce65a42104f7b94d9e6550023f0407853f\"\n\"checksum tokio-threadpool 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"bf3d05cdd6a78005e535d2b27c21521bdf91fbb321027a62d8e178929d18966d\"\n\"checksum tokio-timer 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"29a89e4ad0c8f1e4c9860e605c38c69bfdad3cccd4ea446e58ff588c1c07a397\"\n\"checksum tokio-udp 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"137bda266504893ac4774e0ec4c2108f7ccdbcb7ac8dced6305fe9e4e0b5041a\"\n\"checksum tokio-uds 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)\" = \"65ae5d255ce739e8537221ed2942e0445f4b3b813daebac1c0050ddaaa3587f9\"\n\"checksum ucd-util 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"fd2be2d6639d0f8fe6cdda291ad456e23629558d466e2789d2c3e9892bda285d\"\n\"checksum unicode-width 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"bf3a113775714a22dcb774d8ea3655c53a32debae63a063acc00a91cc586245f\"\n\"checksum unicode-xid 0.0.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"8c1f860d7d29cf02cb2f3f359fd35991af3d30bac52c57d265a3c461074cb4dc\"\n\"checksum unicode-xid 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"fc72304796d0818e357ead4e000d19c9c174ab23dc11093ac919054d20a6a7fc\"\n\"checksum unreachable 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"382810877fe448991dfc7f0dd6e3ae5d58088fd0ea5e35189655f84e6814fa56\"\n\"checksum utf8-ranges 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"662fab6525a98beff2921d7f61a39e7d59e0b425ebc7d0d9e66d316e55124122\"\n\"checksum uuid 0.7.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"dab5c5526c5caa3d106653401a267fed923e7046f35895ffcb5ca42db64942e6\"\n\"checksum vec_map 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"887b5b631c2ad01628bbbaa7dd4c869f80d3186688f8d0b6f58774fbe324988c\"\n\"checksum version_check 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)\" = \"914b1a6776c4c929a602fafd8bc742e06365d4bcbe48c30f9cca5824f70dc9dd\"\n\"checksum void 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"6a02e4885ed3bc0f2de90ea6dd45ebcbb66dacffe03547fadbb0eeae2770887d\"\n\"checksum walkdir 2.1.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"63636bd0eb3d00ccb8b9036381b526efac53caf112b7783b730ab3f8e44da369\"\n\"checksum wasm-bindgen 0.2.33 (registry+https://github.com/rust-lang/crates.io-index)\" = \"2d8c1eb210a0e91e24feb8ccd6f7484a5d442bfdf2ff179204b3a1d16e1029cc\"\n\"checksum wasm-bindgen-backend 0.2.33 (registry+https://github.com/rust-lang/crates.io-index)\" = \"57ab9a5e88bf5dea5be82bb5f8b68c0f8e550675796ac88570ea4c4e89923413\"\n\"checksum wasm-bindgen-futures 0.3.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"c320440301b2ffc52496d8bb0bce9f5d01b560976e55dff37b838d8f72279f7c\"\n\"checksum wasm-bindgen-macro 0.2.33 (registry+https://github.com/rust-lang/crates.io-index)\" = \"52909345426e198a0d34f63526f9f4d86ca50c24b4a22a019d0bc86570ffe1e3\"\n\"checksum wasm-bindgen-macro-support 0.2.33 (registry+https://github.com/rust-lang/crates.io-index)\" = \"2a130a5906bd540390cda0a28e7f8a2d450222461beb92a5eb5c6a33b8b8bc2a\"\n\"checksum wasm-bindgen-shared 0.2.33 (registry+https://github.com/rust-lang/crates.io-index)\" = \"9c406cd5b42c36db6f76f17d28bcd26187fd90cda686231f3d04de07a716fc3a\"\n\"checksum winapi 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)\" = \"167dc9d6949a9b857f3451275e911c3f44255842c1f7a76f33c55103a909087a\"\n\"checksum winapi 0.3.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"04e3bd221fcbe8a271359c04f21a76db7d0c6028862d1bb5512d85e1e2eb5bb3\"\n\"checksum winapi-build 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"2d315eee3b34aca4797b2da6b13ed88266e6d612562a0c46390af8299fc699bc\"\n\"checksum winapi-i686-pc-windows-gnu 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ac3b87c63620426dd9b991e5ce0329eff545bccbbb34f3be09ff6fb6ab51b7b6\"\n\"checksum winapi-x86_64-pc-windows-gnu 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"712e227841d057c1ee1cd2fb22fa7e5a5461ae8e48fa2ca79ec42cfc1931183f\"\n\"checksum ws2_32-sys 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"d59cefebd0c892fa2dd6de581e937301d8552cb44489cdff035c6187cb63fa5e\"\n"
        },
        {
          "name": "Cargo.toml",
          "type": "blob",
          "size": 0.1240234375,
          "content": "[workspace]\nmembers = [\n    \"memo_core\",\n    \"memo_js\",\n    \"xray_core\",\n    \"xray_server\",\n    \"xray_cli\",\n    \"xray_wasm\",\n]\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0380859375,
          "content": "MIT License\n\nCopyright (c) 2018 GitHub\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 16.0224609375,
          "content": "**Attention:** GitHub has decided not to move forward with any aspect of this project. We'll archive the repository in case anybody finds value here, but we don't expect to actively work on this in the foreseeable future. Thanks to everyone for their interest and support.\n\n# Xray\n\n[![Build Status](https://travis-ci.org/atom/xray.svg?branch=master)](https://travis-ci.org/atom/xray)\n\nXray is an experimental Electron-based text editor informed by what we've learned in the four years since the launch of Atom. In the short term, this project is a testbed for rapidly iterating on several radical ideas without risking the stability of Atom. The longer term future of the code in this repository will become clearer after a few months of progress. For now, our primary goal is to iterate rapidly and learn as much as possible.\n\n## Q3 2018 Focus\n\nWe're currently focused on a sub-project of Xray called [Memo](./memo_core), which will serve as the foundation of Xray but also be available as a standalone tool. Memo is an operation-based version control system that tracks changes at the level of individual keystrokes and synchronizes branches in real time.\n\n## Updates\n\n* [October 2, 2018](./docs/updates/2018_10_02.md)\n* [September 14, 2018](./docs/updates/2018_09_14.md)\n* [August 28, 2018](./docs/updates/2018_08_28.md)\n* [August 21, 2018](./docs/updates/2018_08_21.md)\n* [July 31, 2018](./docs/updates/2018_07_31.md)\n* [July 23, 2018](./docs/updates/2018_07_23.md)\n* [July 16, 2018](./docs/updates/2018_07_16.md)\n* [July 10, 2018](./docs/updates/2018_07_10.md)\n* [Archives](./docs/updates/)\n\n## Foundational priorities\n\nOur goal is to build a cross-platform text editor that is designed from the beginning around the following foundational priorities:\n\n### Collaboration\n\n*Xray makes it as easy to code together as it is to code alone.*\n\nWe design features for collaborative use from the beginning. Editors and other relevant UI elements are designed to be occupied by multiple users. Interactions with the file system and other resources such as subprocesses are abstracted to work over network connections.\n\n### High performance\n\n*Xray feels lightweight and responsive.*\n\nWe design our features to be responsive from the beginning. We reliably provide visual feedback within the latency windows suggested by the [RAIL performance model](https://developers.google.com/web/fundamentals/performance/rail). For all interactions, we shoot for the following targets on the hardware of our median user:\n\n| Duration | Action |    \n| - | - |\n| 8ms | Scrolling, animations, and fine-grained interactions such as typing or cursor movement. |\n| 50ms | Coarse-grained interactions such as opening a file or initiating a search. If we can't complete the action within this window, we should show a progress bar. |\n| 150ms | Opening an application window. |\n\nWe are careful to maximize throughput of batch operations such as project-wide search. Memory consumption is kept within a low constant factor of the size of the project and open buffer set, but we trade memory for speed and extensibility so long as memory requirements are reasonable.\n\n### Extensibility\n\n*Xray gives developers control over their own tools.*\n\nWe expose convenient and powerful APIs to enable users to add non-trivial functionality to the application. We balance the power of our APIs with the ability to ensure the responsiveness, stability, and security of the application as a whole. We avoid leaking implementation details and use versioning where possible to enable a sustained rapid development without destabilizing the package ecosystem.\n\n### Web compatibility\n\n*Editing on GitHub feels like editing in Xray.*\n\nWe want to provide a full-featured editor experience that can be used from within a browser. This will ultimately help us provide a more unified experience between GitHub.com and Xray and give us a stronger base of stakeholders in the core editing technology.\n\n## Architecture\n\nMartin Fowler defines software architecture as those decisions which are both important and hard to change. Since these decisions are hard to change, we need to be sure that our foundational priorities are well-served by these decisions.\n\n![Architecture](docs/images/architecture.png)\n\n### The UI is built with web technology\n\nWeb tech adds a lot of overhead, which detracts from our top priority of high-performance. However, web standards are also the best approach that we know of to deliver a cross-platform, extensible user interface. Atom proved that developers want to add non-trivial UI elements to their editor, and we still see web technologies as the most viable way to offer them that ability.\n\nThe fundamental question is whether we can gain the web's benefits for extensibility while still meeting our desired performance goals. Our hypothesis is that it's possible–with the right architecture.\n\n### Core application logic is written in Rust\n\nWhile the UI will be web-based, the core of the application is implemented in a server process written in Rust. We place as much logic as possible in a library crate located in `/xray_core`, then expose this logic as a server when running Xray on the desktop (`/xray_server`) and a web-assembly library running on a worker thread when running Xray in the browser (`/xray_wasm`). We communicate between the UI and the back end process via JSON RPC.\n\nAll of the core application code other than the view logic should be written in Rust. This will ensure that it has a minimal footprint to load and execute, and Rust's robust type system will help us maintain it more efficiently than dynamically typed code. A language that is fundamentally designed for multi-threading will also make it easier to exploit parallelism whenever the need arises, whereas JavaScript's single-threaded nature makes parallelism awkward and challenging.\n\nFundamentally, we want to spend our time writing in a language that is fast by default. It's true that it's possible to write slow Rust, and also possible to write fast JavaScript. It's *also* true that it's much harder to write slow Rust than it is to write slow JavaScript. By spending fewer resources on the implementation of the platform itself, we'll make more resources available to run package code.\n\n### I/O will be centralized in the server\n\nThe server will serialize buffer loads and saves on a per-path basis, and maintains a persistent database of CRDT operations for each file. As edits are performed in windows, they will be streamed to the host process to be stored and echoed out to any other windows with the same open buffer. This will enable unsaved changes to always be incrementally preserved in case of a crash or power failure and preserves the history associated with a file indefinitely.\n\nEarly on, we should design the application process to be capable of connecting to multiple workspace servers to facilitate real-time collaboration or editing files on a remote server by running a headless host process. To support these use cases, all code paths that touch the file system or spawn subprocesses will occur in the server process. The UI will not make use of the I/O facilities provided by Electron, and instead interact with the server via RPC.\n\n### Packages will run in a JavaScript VM in the server process\n\nA misbehaving package should not be able to impact the responsiveness of the application. The best way to guarantee this while preserving ease of development is to activate packages on their own threads. We can run a worker thread per package or run packages in their own contexts across a pool of threads.\n\nPackages *can* run code on the render thread by specifying versioned components in their `package.json`.\n\n```json\n\"components\": {\n  \"TodoList\": \"./components/todo-list.js\"\n}\n```\n\nIf a package called `my-todos` had the above entry in its `package.json`, it could request that the workspace attach that component by referring to `myTodos.TodoList` when adding an item. During package installation on the desktop, we can automatically update the V8 snapshot of the UI to include the components of every installed package. Components will only be dynamically loaded from the provided paths in development mode.\n\nCustom views will only have access to the DOM and an asynchronous channel to communicate with the package's back end running on the server. APIs for interacting with the core application state and the underlying operating system will only be available within the server process, discouraging package authors from putting too much logic into their views. We'll use a combination of asynchronous channels and CRDTs to present convenient APIs to package authors within worker threads.\n\n### Text is stored in a copy-on-write CRDT\n\nTo fully exploit Rust's unique advantage of parallelism, we need to store text in a concurrency-friendly way. We use a variant of RGA called RGASplit, which is described in [this research paper](https://pages.lip6.fr/Marc.Shapiro/papers/rgasplit-group2016-11.pdf).\n\n![CRDT diagram](docs/images/crdt.png)\n\nIn RGA split, the document is stored as a sequence of insertion fragments. In the example above, the document starts as just a single insertion containing `hello world`. We then introduce `, there` and `!` as additional insertions, splitting the original insertion into two fragments. To delete the `ld` at the end of `world` in the third step, we create another fragment containing just the `ld` and mark it as deleted with a tombstone.\n\nStructuring the document in this way has a number of advantages.\n\n* Real-time collaboration works out of the box\n* Concurrent edits: Any thread can read or write its own replica of the document without diverging in the presence of concurrent edits.\n* Integrated non-linear history: To undo any group of operations, we increment an undo counter associated with any insertions and deletions that controls their visibility. This means we only need to store operation ids in the history rather than operations themselves, and we can undo any operation at any time rather than adhering to historical order.\n* Stable logical positions: Instead of tracking the location of markers on every edit, we can refer to stable positions that are guaranteed to be valid for any future buffer state. For example, we can mark the positions of all search results in a background thread and continue to interpret them in a foreground thread if edits are performed in the meantime.\n\nOur use of a CRDT is similar to the Xi editor, but the approach we're exploring is somewhat different. Our current understanding is that in Xi, the buffer is stored in a rope data structure, then a secondary layer is used to incorporate edits. In Xray, the fundamental storage structure of all text is itself a CRDT. It's similar to Xi's rope in that it uses a copy-on-write B-tree to index all inserted fragments, but it does not require any secondary system for incorporating edits.\n\n### Derived state will be computed asynchronously\n\nWe should avoid implementing synchronous APIs that depend on open-ended computations of derived state. For example, when soft wrapping is enabled in Atom, we synchronously update a display index that maps display coordinates to buffer coordinates, which can block the UI.\n\nIn Xray, we want to avoid making these kinds of promises in our API. For example, we will allow the display index to be accessed synchronously after a buffer edit, but only provide an interpolated version of its state that can be produced in logarithmic time. This means it will be spatially consistent with the underlying buffer, but may contain lines that have not yet been soft-wrapped.\n\nWe can expose an asynchronous API that allows a package author to wait until the display layer is up to date with a specific version of the buffer. In the user interface, we can display a progress bar for any derived state updates that exceed 50ms, which may occur when the user pastes multiple megabytes of text into the editor.\n\n### React will be used for presentation\n\nBy using React, we completely eliminate the view framework as a concern that we need to deal with and give package authors access to a tool they're likely to be familiar with. We also raise the level of abstraction above basic DOM APIs. The risk of using React is of course that it is not standardized and could have breaking API changes. To mitigate this risk, we will require packages to declare which version of React they depend on. We will attempt using this version information to provide shims to older versions of React when we upgrade the bundled version. When it's not possible to shim breaking changes, we'll use the version information to present a warning.\n\n### Styling will be specified in JS\n\nCSS is a widely-known and well-supported tool for styling user interfaces, which is why we embraced it in Atom. Unfortunately, the performance and maintainability of CSS degrade as the number of selectors increases. CSS also lacks good tools for exposing a versioned theming API and applying programmatic logic such as altering colors. Finally, the browser does not expose APIs for being notified when computed styles change, making it difficult to use CSS as a source of truth for complex components. For a theming system that performs well and scales, we need more direct control. We plan to use a CSS-in-JS approach that automatically generates atomic selectors so as to keep our total number of selectors minimal.\n\n### Text is rendered via WebGL\n\nIn Atom, the vast majority of computation of any given frame is spent manipulating the DOM, recalculating styles, and performing layout. To achieve good text rendering performance, it is critical that we bypass this overhead and take direct control over rendering. Like Alacritty and Xi, we plan to employ OpenGL to position quads that are mapped to glyph bitmaps in a texture atlas.\n\nThere isn't always a 1:1 relationship between code units inside a JavaScript string and glyphs on screen. Characters (code points) can be expressed as two 16-bit units, but this situation is simple to detect by examining the numeric ranges of the code units. In other cases, the correspondence between code units and glyphs is less straightforward to determine. If the current font and/or locale depends on ligatures or contextual alternates to render correctly, determining the correspondence between code points and glyphs requires support for complex text shaping that references metadata embedded in the font. Bi-directional text complicates the situation further.\n\nFor now, our plan is to detect the presence of characters that may require such complex text shaping and fall back to rendering with HTML on the specific lines that require these features. This will enable us to support scripts such as Arabic and Devanagari. For fonts like FiraCode, which include ligatures for common character sequences used in programming, we'll need a different approach. One idea would be to perform a limited subset of text-shaping that just handles ligatures, so as to keep performance high. Another approach that would only work on the desktop would be to use the platform text-shaping and rasterization APIs in this environment.\n\nBypassing the DOM means that we'll need to implement styling and text layout ourselves. That is a high price to pay, but we think it will be worth it to bypass the performance overhead imposed by the DOM.\n\n## Development process\n\n### Experiment\n\nAt this phase, this code is focused on learning. Whatever code we write should be production-quality, but we don't need to support everything at this phase. We can defer features that don't contribute substantially to learning.\n\n### Documentation-driven development\n\nBefore coding, we ask ourselves whether the code we're writing can be motivated by something that's written in the guide. The right approach here will always be a judgment call, but let's err on the side of transparency and see what happens.\n\n### Disciplined monorepo\n\nAll code related to Xray should live in this repository, but intra-repository dependencies should be expressed in a disciplined way to ensure that a one-line docs change doesn't require us to rebuild the world. Builds should be finger-printed on a per-component basis and we should aim to keep components granular.\n\n## Contributing\n\nInterested in helping out? Welcome! Check out the [CONTRIBUTING](./CONTRIBUTING.md) guide to get started.\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "memo_core",
          "type": "tree",
          "content": null
        },
        {
          "name": "memo_js",
          "type": "tree",
          "content": null
        },
        {
          "name": "rust-toolchain",
          "type": "blob",
          "size": 0.0185546875,
          "content": "nightly-2019-01-26\n"
        },
        {
          "name": "script",
          "type": "tree",
          "content": null
        },
        {
          "name": "xray_browser",
          "type": "tree",
          "content": null
        },
        {
          "name": "xray_cli",
          "type": "tree",
          "content": null
        },
        {
          "name": "xray_core",
          "type": "tree",
          "content": null
        },
        {
          "name": "xray_electron",
          "type": "tree",
          "content": null
        },
        {
          "name": "xray_server",
          "type": "tree",
          "content": null
        },
        {
          "name": "xray_ui",
          "type": "tree",
          "content": null
        },
        {
          "name": "xray_wasm",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}