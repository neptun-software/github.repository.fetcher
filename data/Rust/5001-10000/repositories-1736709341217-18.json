{
  "metadata": {
    "timestamp": 1736709341217,
    "page": 18,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "quickwit-oss/quickwit",
      "stars": 8956,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".cargo",
          "type": "tree",
          "content": null
        },
        {
          "name": ".devcontainer",
          "type": "tree",
          "content": null
        },
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.1728515625,
          "content": "**/*.md\n**/*.txt\n**/.*\n**/build\n**/Dockerfile\n**/node_modules\n**/qwdata\n**/target\ndocs\nexamples\n!.git/\n!quickwit-ui/build/.gitignore\n!quickwit-ui/.gitignore_for_build_directory\n"
        },
        {
          "name": ".env.example",
          "type": "blob",
          "size": 0.6591796875,
          "content": "# Change the user name and password of the postgres database\nPOSTGRES_USER=quickwit-dev\nPOSTGRES_PASSWORD=quickwit-dev\nPOSTGRES_DB=quickwit-metastore-dev\n\n# Update all services to the latest versions\nLOCALSTACK_VERSION=latest\nPOSTGRES_VERSION=latest\nPULSAR_VERSION=latest\nCP_VERSION=latest\nAZURITE_VERSION=latest\nJAEGER_VERSION=latest\nOTEL_VERSION=latest\nPROMETHEUS_VERSION=latest\n\n# Expose the services to outside network\nMAP_HOST_LOCALSTACK=0.0.0.0\nMAP_HOST_POSTGRES=0.0.0.0\nMAP_HOST_PULSAR=0.0.0.0\nMAP_HOST_KAFKA=0.0.0.0\nMAP_HOST_ZOOKEEPER=0.0.0.0\nMAP_HOST_AZURITE=0.0.0.0\nMAP_HOST_GRAFANA=0.0.0.0\nMAP_HOST_JAEGER=0.0.0.0\nMAP_HOST_OTEL=0.0.0.0\nMAP_HOST_PROMETHEUS=0.0.0.0\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.0322265625,
          "content": "**/codegen/** linguist-generated\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.5263671875,
          "content": "# Generated by Cargo\n# will have compiled files and executables\n**/target/**\n**/proptest-regressions\n**/perf.data*\n**/flamegraph.svg\nlocal/**\nquickwit/quickwit-ui/package-lock.json\n**/.DS_Store\n\nTODO.md\nQUESTIONS.txt\n\n\n# Remove Cargo.lock from gitignore if creating an executable, leave it for libraries\n# More information here https://doc.rust-lang.org/cargo/guide/cargo-toml-vs-cargo-lock.html\n#Cargo.lock\n\n# These are backup files generated by rustfmt\n**/*.rs.bk\n\n.idea\n.vscode\n.vscode-license\ndeps\nqwdata\nelastic-search-artifacts\n.env\n"
        },
        {
          "name": ".localstack",
          "type": "tree",
          "content": null
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 14.1484375,
          "content": "<!--\n# Changelog\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n\n## [Unreleased]\n\n### Added\n\n### Fixed\n- (Jaeger) Query resource attributes when Jaeger request carries tags\n\n### Changed\n\n### Deprecated\n\n### Removed\n\n### Security\n\n--->\n\n# [0.8.1]\n\n### Fixed\n\n- Bug in the chitchat digest message serialization (chitchat#144)\n\n## [0.8.0]\n\n### Added\n\n- Remove some noisy logs (#4447)\n- Add `/{index}/_stats` and `/_stats` ES API (#4442)\n- Use `search_after` in ES scroll API (#4280)\n- Add support for wildcard exclusion in index patterns (#4458)\n- Add `.` support in DSL indentifiers (#3989)\n- Add cat indices ES API (#4465)\n- Limit concurrent merges (#4473)\n- Add Index Template API and auto create index (#4456) (only available with ingest V2)\n- Add support for compressed ES `_bulk` requests (#4506)\n- Add support for slash `/` character in field names (#4510)\n- Handle SIGTERM shutdown signal (#4539)\n- Add `start_timestamp` and `end_timestamp` filter to ES `_field_caps` API (#4547)\n- Limit the number of merge pipelines that can be spawned concurrently (#4574)\n- Add support for `_source_excludes` and `_source_includes` query parameters in ES API (#4572)\n- Add gRPC metrics layer to clients and servers (#4591)\n- Add additional cluster metrics (#4597)\n- Add index patterns query param on GET `/indexes` endpoint (#4600)\n- Add support for GCS file backed metastore (#4604)\n- Add default search fields for OTEL traces index (#4602)\n- Add support for delete index in ES API (#4606)\n- Add a handler to dynamically change the log level (#4662)\n- Add REST endpoint to parse a query into a query AST (#4652)\n- Add postgresql index and use `IN` instead of many `OR` (#4670)\n- Add support for `_source_excludes`, `_source_includes`, `extra_filters` in `_msearch` ES API (#4696)\n- Handle `track_total_size` on request ES body (#4710)\n- Add a metric for the number number of indexes (#4711)\n- Add various performance optimizations in Quickwit and Tantivy\n\nMore details in tantivy's [changelog](https://github.com/quickwit-oss/tantivy/blob/main/CHANGELOG.md).\n\n### Fixed\n\n- Fix aggregation result on empty index (#4449)\n- Fix Gzip file source (#4457)\n- Rate limit noisy logs (#4483)\n- Prevent the exponential backoff from overflowing after 64 attempts (#4501)\n- Remove field presence in ES `_field_caps` API (#4492)\n- Remove `source` in ES parameter, remove unsupported field `fields` in response (#4590)\n- Fix aggregation `split_size` parameter, add docs and test (#4627)\n- Various fixes in chitchat (gossip): more details in [chitchat commit history](https://github.com/quickwit-oss/chitchat/commits/main/?since=2024-01-08&until=2024-03-13)\n- Various fixes in mrecordlog (WAL): more details in [mrecordlog commit history](https://github.com/quickwit-oss/mrecordlog/commits/main/?since=2024-01-08&until=2024-03-13)\n\n### Changed\n\n- (Breaking) [Add ZSTD compression to chitchat's Deltas](https://github.com/quickwit-oss/chitchat/pull/112)\n\n### Removed\n\n### Migration from 0.7.x to 0.8.0\n\nTo deploy Quickwit 0.8.0, you must either:\n- **shutdown down** your cluster **entirely** before deploying, or\n- **restart all** the nodes of your cluster after deploying.\n\nBecause we made some breaking changes in the gossip protocol (chitchat), nodes running different versions of Quickwit cannot communicate with each other and crash upon receiving messages that do not match their release version. The new protocol is now versioned, and future updates of the gossip protocol will be backward compatible.\n\n\n## [0.7.1]\n\n### Added\n\n- Add es _count API (#4410)\n- Add _elastic/_field_caps API (#4350)\n- Make gRPC message size configurable (#4388)\n- Add API endpoint to get some control-plan internal info (#4339)\n- Add Google Cloud Storage Implementation available for storage paths starting with `gs://` (#4344)\n\n### Changed\n\n- Return 404 on index not found in ES Bulk API (#4425)\n- Allow $ and @ characters in field names (#4413)\n\n### Fixed\n- Assign all sources/shards, even if this requires exceeding the indexer #4363\n- Fix traces doc mapping (service name set as  fast) and update default otel logs index ID to `otel-logs-v0_7` (#4401)\n- Fix parsing multi-line queries (#4409)\n- Fix range query for optional fast field panics with Index out of bounds (#4362)\n\n### Migration from 0.7.0 to 0.7.1\n\nQuickwit 0.7.1 will create the new index `otel-logs-v0_7` which is now used by default when ingesting data with the OTEL gRPC and HTTP API.\n\nIn the traces index `otel-traces-v0_7`, the `service_name` field is now fast. No migration is done if `otel-traces-v0_7` already exists. If you want `service_name` field to be fast, you have to delete first the existing `otel-traces-v0_7` index or create your own index.\n\n## [0.7.0]\n\n### Added\n\n- Elasticsearch-compatible API\n  - Added scroll and search_after APIs and support for multi-index search queries\n  - Added exists, multi-match, match phrase prefix, match bool prefix, bool queries\n  - Added `_field_caps` API\n- Added support for OTLP over HTTP API (Protobuf only) (#4335)\n- Added Jaeger REST endpoints for Grafana tracing support (#4197)\n- Added support for injecting custom HTTP headers and moved REST config parameters into REST config section (#4198)\n- Added support for OTLP trace data in arbitrary sources\n- Commit Kafka offsets on suggest truncate (#3638)\n- Honor `auto.offset.reset` parameter in Kafka source (#4095)\n- Added exact count optimization (#4019)\n- Added stream splits gRPC (#4109)\n- Adding a split cache in Searchers (#3857)\n- Added `coerce` and `output_format` options for numeric fields (#3704)\n- Added `PhraseMatchQuery` and `MultiMatchQuery` (#3727)\n- Added Elasticsearch's `TermsQuery` (#3747)\n- Added GCP PubSub source (#3720)\n- Parse timestamp strings (#3639)\n- Added Digital Ocean storage flavor (#3632)\n- Added new tokenizers: `source_code_default`, `source_code`, `multilang` (#3647, #3655, #3608)\n\n\n### Fixed\n\n- Fixed dates in UI (#4277)\n- Fixed duplicate splits planned on pipeline crash-respawn (#3854)\n- Fixed sorting (#3799)\n\nMore details in tantivy's [changelog](https://github.com/quickwit-oss/tantivy/blob/main/CHANGELOG.md).\n\n### Changed\n\n- Improve OTEL traces index config (#4311)\n  - OTEL endpoints are now using by default indexes `otel-logs-v0_7` and `otel-traces-v0_7` instead of `otel-logs-v0_6` and `otel-traces-v0_6`\n  - OTEL indexes have more fields stored as \"fast\" and have Trace and Span ID bytes field in hex format\n\n- Increased the gRPC payload limits from 10MiB to 20MiB (#4227)\n- Reject malformed Elasticsearch API requests (#4175)\n- Better logging when doc processing fails (#4323)\n- Search performance improvements\n- Indexing performance improvements\n\n### Removed\n\n### Migration from 0.6.x to 0.7\n\nThe format of the index and internal objects stored in the metastore of 0.7 is backward compatible with 0.6.\n\nIf you are using the OTEL indexes and ingesting data into indexes the `otel-logs-v0_6` and `otel-traces-v0_6`, you must stop indexing before upgrading.\nIndeed, the first time you start Quickwit 0.7, it will update the doc mapping fields of Trace ID and Span ID of those two indexes by changing their input/output formats from base64 to hex. This is automatic: you don't have to perform any manual operation.\nQuickwit 0.7 will create new indexes `otel-logs-v0_7` and `otel-traces-v0_7`, which are now used by default when ingesting data with the OTEL gRPC and HTTP API. The Jaeger gRPC and HTTP APIs will query both `otel-traces-v0_6` and `otel-traces-v0_7` by default.\nIt's possible to define the index ID you want to use for OTEL gRPC endpoints and Jaeger gRPC API by setting the request header `qw-otel-logs-index` or `qw-otel-traces-index` to the index ID you want to target.\n\n\n## [0.6.1]\n\n### Added\n- Support of phrase prefix queries in the query language.\n\n### Fixed\n- Fix timestamp field which was not allowed when defined in an object mapping.\n- Fix querying of integer on a JSON field (no document were returned).\n\n\n## [0.6.0] - 2023-06-03\n\n### Added\n- Elasticsearch/Opensearch compatible API.\n- New columnar format:\n    - Fast fields can now have any cardinality (Optional, Multivalued, restricted). In fact cardinality is now only used to format the output.\n    - Dynamic Fields are now fast fields.\n- String fast fields now can be normalized.\n- Various parameters of object storages can now be configured.\n- The ingest API makes it possible to force a commit, or wait for a scheduled commit to occur.\n- Ability to parse non-JSON data using VRL to extract some structure from documents.\n- Object storage can now use the `virtual-hosted–style`.\n- `date_histogram` aggregation.\n- `percentiles` aggregation.\n- Added support for Prefix Phrase query.\n- Added support for range queries.\n- The query language now supports different date formats.\n- Added support for base16 input/output configuration for bytes field. You can search for bytes fields using base16 encoded values.\n- Autotagging: fields used in the partition key are automatically added to tags.\n- Added arm64 docker image.\n- Added CORS configuration for the REST API.\n\n\n### Fixed\n- Major bug fix that required to restart quickwit when deleting and recreating an index with the same name.\n- The number of concurrent GET requests to object stores is now limited. This fixes a bug observed with when requested a lot of documents from MinIO.\n- Quickwit now searches into resource attributes when receiving a Jaeger request carrying tags\n- Object storage can be figured to:\n    - avoid Bulk delete API (workaround for Google Cloud Storage).\n    - Use virtual-host style addresses (workaround for Alibaba Object Storage Service).\n- Fix aggregation min doc_count empty merge bug.\n- Fix: Sort order for term aggregations.\n- Switch to ms in histogram for date type (aligning with ES).\n\n### Improvements\n\n- Search performance improvement.\n- Aggregation performance improvement.\n- Aggregation memory improvement.\n\nMore details in tantivy's [changelog](https://github.com/quickwit-oss/tantivy/blob/main/CHANGELOG.md).\n\n### Changed\n- Datetime now have up to a nanosecond precision.\n- By default, quickwit now uses the node's hostname as the default node ID.\n- By default, Quickwit is in dynamic mode and all dynamic fields are marked as fast fields.\n- JSON field uses by default the raw tokanizer and is set to fast field.\n- Various performance/compression improvements.\n- OTEL indexes Trace ID and Span ID are now bytes fields.\n- OTEL indexes stores timestamps with nanosecond precision.\n- pan status is now indexed in the OTEL trace index.\n- Default and raw tokenizers filter tokesn longer than 255 bytes instead of 40 bytes.\n\n\n## [0.5.0] - 2023-03-16\n\n### Added\n- gRPC OpenTelemetry Protocol support for traces\n- gRPC OpenTelemetry Protocol support for logs\n- Control plane (indexing tasks scheduling)\n- Ingest API rate limiter\n- Pulsar source\n- VRL transform for data sources\n- REST API enhanced to fully manage indexes, sources, and splits\n- OpenAPI specification and swagger UI for all REST available endpoints\n- Large responses from REST API can be compressed\n- Add bulk stage splits method to metastore\n- MacOS M1 binary\n- Doc mapping field names starting with `_` are now valid\n\n### Fixed\n- Fix UI index completion on search page\n- Fix CLI index describe command to show stats on published splits\n- Fix REST API to always return on error a body formatted as `{\"message\": \"error message\"}`\n- Fixed REST status code when deleting unexisting index, source and when fetching splits on unexisting index\n\n### Changed\n- Source config schema (breaking or not? use serde rename to be not breaking?)\n- RocksDB replaced by [mrecordlog](https://github.com/quickwit-oss/mrecordlog) to store ingest API queues records\n- (Breaking) Indexing partition key new DSL\n- (Breaking) Helm chart updated with the new CLI\n- (Breaking) CLI indexes, sources, and splits commands use the REST API\n- (Breaking) Index new format: you need to reindex all your data\n\n## [0.4.0] - 2022-12-03\n\n### Added\n- Boolean, datetime, and IP address fields\n- Chinese tokenizer\n- Distributed indexing (Kafka only)\n- gRPC metastore server\n- Index partitioning\n- Kubernetes\n- Node config templating\n- Prometheus metrics\n- Retention policies\n- REST API for CRUD operations on indexes/sources\n- Support for Azure Blob Storage\n- Support for BM25 document scoring\n- Support for deletions\n- Support for slop in phrase queries\n- Support for snippeting\n\n### Fixed\n- Fixed cache misses during search fetch docs phase\n- Fixed credentials leak in metastore URI\n- Fixed GC scalability issues\n- Fixed support for multi-source\n\n### Changed\n- Changed default docstore block size to 1 MiB and compression algorithm to ZSTD\n\n- Quickwit now relies on sqlx rather than Diesel for PostgreSQL interactions.\nMigrating from 0.3 should work as expected. Migrating from earlier version however is\nnot supported.\n\n### Removed\n- Removed support for i64 as timestamp field\n- Removed support for sorting index by field\n\n### Security\n- Forbid access to paths with `..` at storage level\n\n## [0.3.1] - 2022-06-22\n\n### Added\n- Add support for Google Cloud Storage\n- Sort hits by timestamp desc by default in search UI\n- Add `description` attribute to field mappings\n- Display split state in output of `quickwit split list` command\n\n### Fixed\n- Clean up local split cache after index deletion\n- Fix API URLs displayed for copy and paste in UI\n- Fix custom S3 endpoint with trailing `/`\n- Fix `quickwit index create` command with `--overwrite` option\n\n## [0.3.0] - 2022-05-31\n\n### Added\n- Embedded UI for displaying search hits and cluster state\n- Schemaless indexing with JSON field\n- Ingest API (Elasticsearch-compatible)\n- Aggregation queries\n- Support for Amazon Kinesis\n\n### Fixed\n- Switched cluster membership algorithm from S.W.I.M. to Chitchat\n\n### Removed\n- u64 as date field\n\n## [0.2.1] - 2022-02-28\n\n### Added\n- Query validation against index schema before dispatch to leaf nodes (#1109, @linxGnu)\n- Support for custom S3 endpoint (#1108)\n- Warm up terms and fastfields concurrently (#1147)\n\n### Fixed\n- Minor bug in leaf search stream (#1110)\n- Default index root URI and metastore URI correctly default to data dir (#1140, @ddelemeny)\n\n### Removed\n- QW_ENV environment variable\n\n### Security\n- Compiled binaries with Rust 1.58.1, which fixes CVE-2022-21658\n\n## [0.2.0] - 2022-01-12\n\n## [0.1.0] - 2021-07-13\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 5.365234375,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nWe as members, contributors, and leaders pledge to make participation in our\ncommunity a harassment-free experience for everyone, regardless of age, body\nsize, visible or invisible disability, ethnicity, sex characteristics, gender\nidentity and expression, level of experience, education, socio-economic status,\nnationality, personal appearance, race, caste, color, religion, or sexual identity\nand orientation.\n\nWe pledge to act and interact in ways that contribute to an open, welcoming,\ndiverse, inclusive, and healthy community.\n\n## Our Standards\n\nExamples of behavior that contributes to a positive environment for our\ncommunity include:\n\n* Demonstrating empathy and kindness toward other people\n* Being respectful of differing opinions, viewpoints, and experiences\n* Giving and gracefully accepting constructive feedback\n* Accepting responsibility and apologizing to those affected by our mistakes,\n  and learning from the experience\n* Focusing on what is best not just for us as individuals, but for the\n  overall community\n\nExamples of unacceptable behavior include:\n\n* The use of sexualized language or imagery, and sexual attention or\n  advances of any kind\n* Trolling, insulting or derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or email\n  address, without their explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Enforcement Responsibilities\n\nCommunity leaders are responsible for clarifying and enforcing our standards of\nacceptable behavior and will take appropriate and fair corrective action in\nresponse to any behavior that they deem inappropriate, threatening, offensive,\nor harmful.\n\nCommunity leaders have the right and responsibility to remove, edit, or reject\ncomments, commits, code, wiki edits, issues, and other contributions that are\nnot aligned to this Code of Conduct, and will communicate reasons for moderation\ndecisions when appropriate.\n\n## Scope\n\nThis Code of Conduct applies within all community spaces, and also applies when\nan individual is officially representing the community in public spaces.\nExamples of representing our community include using an official e-mail address,\nposting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported to the community leaders responsible for enforcement at adrien+cc at quickwit dot io.\nAll complaints will be reviewed and investigated promptly and fairly.\n\nAll community leaders are obligated to respect the privacy and security of the\nreporter of any incident.\n\n## Enforcement Guidelines\n\nCommunity leaders will follow these Community Impact Guidelines in determining\nthe consequences for any action they deem in violation of this Code of Conduct:\n\n### 1. Correction\n\n**Community Impact**: Use of inappropriate language or other behavior deemed\nunprofessional or unwelcome in the community.\n\n**Consequence**: A private, written warning from community leaders, providing\nclarity around the nature of the violation and an explanation of why the\nbehavior was inappropriate. A public apology may be requested.\n\n### 2. Warning\n\n**Community Impact**: A violation through a single incident or series\nof actions.\n\n**Consequence**: A warning with consequences for continued behavior. No\ninteraction with the people involved, including unsolicited interaction with\nthose enforcing the Code of Conduct, for a specified period of time. This\nincludes avoiding interactions in community spaces as well as external channels\nlike social media. Violating these terms may lead to a temporary or\npermanent ban.\n\n### 3. Temporary Ban\n\n**Community Impact**: A serious violation of community standards, including\nsustained inappropriate behavior.\n\n**Consequence**: A temporary ban from any sort of interaction or public\ncommunication with the community for a specified period of time. No public or\nprivate interaction with the people involved, including unsolicited interaction\nwith those enforcing the Code of Conduct, is allowed during this period.\nViolating these terms may lead to a permanent ban.\n\n### 4. Permanent Ban\n\n**Community Impact**: Demonstrating a pattern of violation of community\nstandards, including sustained inappropriate behavior,  harassment of an\nindividual, or aggression toward or disparagement of classes of individuals.\n\n**Consequence**: A permanent ban from any sort of public interaction within\nthe community.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage],\nversion 2.0, available at\n[https://www.contributor-covenant.org/version/2/0/code_of_conduct.html][v2.0].\n\nCommunity Impact Guidelines were inspired by\n[Mozilla's code of conduct enforcement ladder][Mozilla CoC].\n\nFor answers to common questions about this code of conduct, see the FAQ at\n[https://www.contributor-covenant.org/faq][FAQ]. Translations are available\nat [https://www.contributor-covenant.org/translations][translations].\n\n[homepage]: https://www.contributor-covenant.org\n[v2.0]: https://www.contributor-covenant.org/version/2/0/code_of_conduct.html\n[Mozilla CoC]: https://github.com/mozilla/diversity\n[FAQ]: https://www.contributor-covenant.org/faq\n[translations]: https://www.contributor-covenant.org/translations\n"
        },
        {
          "name": "CODE_STYLE.md",
          "type": "blob",
          "size": 9.1826171875,
          "content": "# Quickwit Coding Style\n\nThis document resumes a couple of points we try to embrace in our coding style. Some of these points take an opinionated side on a trade-off story.\nThe description will try to make that clear.\n\nThe driving motivation of this code style is to make your code more readable.\n\nReadable is one word that hides several dimensions:\n- the reader understands the intent very rapidly\n- the reader can proofread. It can become confident that the code is correct very easily.\n\nNoticing how the two are different should not require too much squinting.\nShoot for *proofreadability*.\n\n## Code reviews\n\nDo a pass on your own code before sending it for review to avoid wasting the review time.\nAlso, a trivial code style issues can come in the way and avoid spotting\ndeeper issues with the code.\n\nAs a reviewer, your first mission is proofreading. If you find a logical bug, feel good. You did an awesome job today.\n\nYour second goal is to make sure the code quality stays high.\n\nYou can express \"nitpicks\": suggestions about some local aspect of the code that do not matter too much. Just prepend \"nitpick:\" to your comment.\nYou can also express an opinion/advice that you know is not universal.\nMake sure you make it clear to the reviewee that it is fine to ignore the comment.\n\nDo not use rhetorical questions... If you are 95% sure of something, there is no need to express it as a question.\nPrefer `I believe this should be n+1` to `Shouldn't this be n+1?`.\n\nThe issue with rhetorical questions is that when you will have a genuine\nquestion, reviewees may over interpret it as an affirmation.\n\nAs a reviewee, if you are not used to CRs, it can feel like an adversarial process. Relax. This is normal to end up with a lot of comments on your first few CRs.\n\nYou might feel like the comments are unjustified, try as much as possible to not feel frustrated.\nIf you want to discuss it, the best place is the chat, or maybe send a PR to modify this document.\n\nBut remember to pick your battles... If you think it does not matter much but it takes 2 secs to fix, just consider doing what is suggested by the reviewer or this style guide.\n\n## Rust gives us a lot of tools... this does not mean we need to abuse them.\n\nRust is an amazing language. It offers all kinds of tools to allow for zero-cost code reuse. Within these tools, however, generics and macros tend to hurt readability (and compile-time). Let's ONLY use them where necessary.\n\nThe same goes with the chaining iterator style.\nWhen coupled with error handling, rust's chaining iterator style can\nhurt readability.\nUsing a good old procedural for-loop is fine and recommended in that case.\n\n**example needed**\n\n\n## Naming\n\nFunction and variable names are key for readability.\n\nA good function name is often sufficient for the reader to build reasonable expectations of what it does.\n\nIf this implies long names, let's have very long names.\n\nTrying to fit this rule has an interesting side effect.\nNobody likes to type long function names. It just feels ugly.\nBut these are frequently symptoms of a badly organized code, and it can\nhelp spot refactoring opportunities.\n\n**example needed**\n\n## Explanatory variables\n\nOne incredibly powerful tool and simple tool to help make your code\nmore readable is to introduce explanatory variables.\n\nExplanatory variables are intermediary variables that were not really\nnecessary, but make it possible -through their names- to convey their\nsemantics to the reader.\n\n**example needed**\n\n## Shadowing\n\nAs much as possible, do not use reuse the same variable name in a function.\nIt is never necessary, very rarely helpful and can hurt.\n\n## Types\n\nRust handles type elision. That's great.\nChances are, your editor even automatically hints the type of\nyour variables.\n\nSometimes, however, it can be helpful for the reviewer to have the type of some very strategic variables.\n\n**example needed**\n\n## Early returns\n\nWe prefer early return.\nRather than chaining `else` statement, we prefer to isolate\ncorner case in short `if` statement to prevent nesting\n\n**example needed**\n\n## Invariants\n\nA good idea to help reviewers proofread your code is to\nidentify invariants and express them as `debug_assert`.\n\nThese assert will not be part of the release binary and won't hurt the execution time.\n\n**example needed**\n\n## Errors and log messages\n\nError and log messages follow the same format. They should be concise, lowercase (except proper names), and without trailing punctuation.\n\nAs a loose rule, where it does not hurt readability, log messages should rely on `tracing` \nstructured logging instead of templating. \n\nIn other words, prefer:\n`warn!(remaining=remaining_attempts, \"trubulizor rpc plane retry failed\")`\nto \n`warn!(\"trubulizor rpc plane retry failed ({remaining_attempts} attempts remaining)\")`\n\n### Error Examples\n- \"failed to start actor runtimes\"\n- \"cannot join PostgreSQL URI {} with path {:?}\"\n- \"could not find split metadata in Metastore {}\"\n- \"unknown output format {:?}\"\n \n### Log examples\n\n\n## Comments\n\nWe use on the same code style, [rustc's doc comments](https://doc.rust-lang.org/1.0.0/style/style/comments.html).\nIn particular, the summary line should be written in third-person singular present indicative form.\n\nNo rustdoc in Quickwit or in private API is ok.\nNo rustdoc on Tantivy public API is not ok.\n\nWe usually do not expect comments to contain any implementation details.\nTo some extent, it is normal for the user to have to look at the code.\n\nWhen it is not clear, comments should convey:\n- intent\n- context (links to a Wikipedia page or a paper, link to the original issue can be helpful too)\n- hidden contracts... but really you should avoid those.\n\nInline comments in the code can be very useful to help the reader understand\nthe justification of a thorny piece of code.\n\n**example needed**\n\n## Hidden contracts\n\nWe call hidden contract, a pre-condition on the arguments that is not enforced by their types.\n\nSometimes, hidden contracts are unavoidable.\n\nFor instance, a binary search requires the array to be sorted.\n\nWhenever possible, you should avoid having hidden contracts.\n\nTo avoid hidden contracts, you should consider:\n- changing your argument types to have the type system enforce the contract\n- internalize the contract enforcement.\n\nFor instance, the following function is not good because it hides a contract on values not being empty:\n\n```\nfn min(&self, values: &[usize]) -> usize {\n\tlet mut min_val = usize::MAX;\n\tfor val in values {\n\t\tmin_val = min_val.min(val)\n\t}\n\tmin_val\n}\n```\nIt can be done by changing the prototype to a `Result` or an `Option`.\n\nIn addition, while the author might have thought that the `usize::MAX` trick was a nice touch, it can easily backfire. Panicking is often better than returning a wrong result.\n\nThe better approach here is of course an `Option<usize>` like `Iterator::min` does.\n\nAnother way to internalize the contract enforcement is to move some logic from the caller to within the function.\n\nFor instance:\n```\n// The algorithms requires splits to be sorted by `end_time`\nfn merge_candidates(splits: &mut Vec<SplitMetadata>) -> Vec<SplitMetadata>\n```\n\nIt is tempting to rely on the fact that splits `Vec` is always sorted on the caller side and put this as a hidden contract.\nIf it is not too much work, just redoing the sorting within merge candidates\nis a good idea. For the above function, that extra work is tiny.\n\nBy the way, did you know Rust's std sort is inspired by timsort?\nIt will perform in linear time if the array is already sorted...\n\nWhen implementing a function with a hidden contract, as long as it does not hurt the overall performance, add an assert statement to your code to check the contract. (For instance, check that the array is sorted).\n\n**example needed*\n\n## Tests\n\nTest do not need to match the same quality as the original code.\n\nWhen a bug is encountered, it is ok to introduce a test that seems weirdly\noverfitted to the specific issue. A comment should then add a link to the issue.\n\nUnit test should run fast, and if possible they should not do any IO.\nCode should be structured to make unit testing possible.\n\nSome of our unit tests would not be considered good unit tests in some companies, and that's ok.\n\nHere are the controversial bits:\n\n### Not just for spotting regression\n\nOur unit tests are not here just to spot regression.\nThey are also here to check the correctness of our code.\n\n### Not just testing public API\n\nUnit test do not only test public API.\nComplex code often calls half a dozen smaller functions.\n\nThe cardinality of the corner case of the complex code\ncan make it difficult to test all corner case.\n\nOn the other hand, the smaller functions could be tested\nexhaustively.\n\nFor this reason, testing internal private functions is actually encouraged.\n\n### Not always \"unit\" tests\n\nIdeally, unit tests should be testing one thing and one thing only, but if they don't and it helps cover more ground, this is ok.\n\n### Not necessarily deterministic.\n\nFinally, unit tests are not necessarily deterministic. We really like proptests.\nWhen proptesting, make sure to reduce as much as possible the space of exploration to get the most out of it.\n\n## async vs sync\n\nYour async code should block for at most 500 microseconds.\nIf you are unsure whether your code blocks for 500 microseconds, or if it is a non-trivial question, it should run via `tokio::spawn_block`.\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 7.6103515625,
          "content": "# Contributing to Quickwit\nThere are many ways to contribute to Quickwit.\nCode contributions are welcome of course, but also\nbug reports, feature requests, and evangelizing are as valuable.\n\n# Submitting a PR\nCheck if your issue is already listed on [github](https://github.com/quickwit-oss/quickwit/issues).\nIf it is not, create your own issue.\n\nPlease add the following phrase at the end of your commit `Closes #<Issue Number>`.\nIt will automatically link your PR in the issue page. Also, once your PR is merged, it will\nclose the issue. If your PR only partially addresses the issue and you would like to\nkeep it open, just write `See #<Issue Number>`.\n\nFeel free to send your contribution in an unfinished state to get early feedback.\nIn that case, simply mark the PR with the tag [WIP] (standing for work in progress).\n\n## Signing the CLA\nQuickwit is an open source project licensed under AGPLv3.\nIt is also distributed under a commercial license by Quickwit, Inc.\n\nContributors are required to sign a Contributor License Agreement.\nThe process is simple and fast. Upon your first pull request, you will be prompted to\n[sign our CLA by visiting this link](https://cla-assistant.io/quickwit-oss/quickwit).\n\n## PR verification checks\nWhen you submit a pull request to the project, the CI system runs several verification checks. After your PR is merged, a more exhaustive list of tests will be run.\n\nYou will be notified by email from the CI system if any issues are discovered, but if you want to run these checks locally before submitting PR or in order to verify changes you can use the following commands in the root directory:\n1. To verify that all tests are passing, run `make test-all`.\n2. To fix code style and format as well as catch common mistakes run `make fix`. Alternatively, run `make -k test-all docker-compose-down` to tear down the Docker services after running all the tests.\n3. To build docs run `make build-rustdoc`.\n\n# Development\n\n## Setup & run tests\n\n### Local Development\n\n1. Install Rust, CMake, Docker (https://docs.docker.com/engine/install/) and Docker Compose (https://docs.docker.com/compose/install/)\n2. Install node@20 and `npm install -g yarn`\n3. Install awslocal https://github.com/localstack/awscli-local\n4. Install protoc https://grpc.io/docs/protoc-installation/ (you may need to install the latest binaries rather than your distro's flavor)\n5. Install nextest https://nexte.st/docs/installation/pre-built-binaries/\n\n### GitHub Codespaces\n\n[![Open in GitHub Codespaces](https://github.com/codespaces/badge.svg)](https://codespaces.new/quickwit-oss/quickwit?devcontainer_path=.devcontainer/devcontainer.json)\n\nGitHub Codespaces provides a fully configured development environment in the cloud, making it easy to get started with Quickwit development. By clicking the badge above, you can create a codespace with all the necessary tools installed and configured.\n\n### Running tests\nRun `make test-all` to run all tests.\n\n## Useful commands\n* `make test-all` - starts necessary Docker services and runs all tests.\n* `make -k test-all docker-compose-down` - the same as above, but tears down the Docker services after running all the tests.\n* `make fmt` - runs formatter, this command requires the nightly toolchain to be installed by running `rustup toolchain install nightly`.\n* `make fix` - runs formatter and clippy checks.\n* `make typos` - runs the spellcheck tool over the codebase. (Install by running `cargo install typos-cli`)\n* `make doc` - builds docs.\n* `make docker-compose-up` - starts Docker services.\n* `make docker-compose-down` - stops Docker services.\n* `make docker-compose-logs` - shows Docker logs.\n\n## Start the UI\n1. Switch to the `quickwit` subdirectory of the project and create a data directory `qwdata` there if it doesn't exist\n2. Start a server `cargo r run --config ../config/quickwit.yaml`\n3. `yarn --cwd quickwit-ui install` and `yarn --cwd quickwit-ui start`\n4. Open your browser at `http://localhost:3000/ui` if it doesn't open automatically\n\n## Running UI Tests\n1. Run `yarn --cwd quickwit-ui install` and `yarn --cwd quickwit-ui test` in the `quickwit` directory\n\n## Running UI e2e tests\n1. Ensure to run a searcher `cargo r run --service searcher --config ../config/quickwit.yaml`\n2. Run `yarn --cwd quickwit-ui e2e-test`\n\n## Running services such as Amazon Kinesis or S3, Kafka, or PostgreSQL locally.\n1. Ensure Docker and Docker Compose are correctly installed on your machine (see above)\n2. Run `make docker-compose-up` to launch all the services or `make docker-compose-up DOCKER_SERVICES=kafka,postgres` to launch a subset of services.\n\n## Tracing with Jaeger\n1. Ensure Docker and Docker Compose are correctly installed on your machine (see above)\n2. Start the Jaeger services (UI, collector, agent, ...) running the command `make docker-compose-up DOCKER_SERVICES=jaeger`\n3. Start Quickwit with the following environment variables:\n   \n```\nOTEL_EXPORTER_OTLP_ENDPOINT=http://localhost:4317\nQW_ENABLE_OPENTELEMETRY_OTLP_EXPORTER=true\n```\n\n4. Open your browser and visit [localhost:16686](http://localhost:16686/)\n\n## Using tokio console\n1. Install tokio-console by running `cargo install tokio-console`.\n2. Install the quickwit binary in the quickwit-cli folder `RUSTFLAGS=\"--cfg tokio_unstable\" cargo install --path . --features tokio-console`\n3. Launch a long running command such as index and activate tokio with the: `QW_ENABLE_TOKIO_CONSOLE=1 quickwit index ...`\n4. Run `tokio-console`.\n\n## Building binaries\n\nCurrently, we use [cross](https://github.com/rust-embedded/cross) to build Quickwit binaries for different architectures.\nFor this to work, we've had to customize the docker images cross uses. These customizations can be found in docker files located in the `./cross-images` folder. To make cross take into account any change on those\ndocker files, you will need to build and push the images on Docker Hub by running `make cross-images`.\nWe also have nightly builds that are pushed to Docker Hub. This helps continuously check that our binaries are still built even with external dependency updates. Successful builds let you access the artifacts for the next three days. Release builds always have their artifacts attached to the release.\n\n## Docker images\n\nEach merge on the `main` branch triggers the build of a new Docker image available on DockerHub at `quickwit/quickwit:edge`. Tagging a commit also creates a new image `quickwit/quickwit:<tag name>` if the tag name starts with `v*` or `qw*`. The Docker images are based on Debian.\n\n### Notes on the embedded UI\nAs the react UI is embedded in the rust binary, we need to build the react app before building the binary. Hence `make cross-image` depends on the command `build-ui`.\n\n## Testing release (alpha, beta, rc)\n\nThe following Quickwit installation command `curl -L https://install.quickwit.io | sh` always installs the latest stable version of quickwit. To make it easier in installing and testing new (alpha, beta, rc) releases, you can manually pull and execute the script as `./install.sh --allow-any-latest-version`. This will force the script to install any latest available release package.\n\n# Documentation\n\nQuickwit documentation is located in the docs directory.\n\n## Generating the CLI docs.\n\nThe [CLI doc page](docs/reference/cli.md) is partly generated by a script.\nTo update it, first run the script:\n\n```bash\ncargo run --bin generate_markdown > ../docs/reference/cli_insert.md\n```\n\nThen manually edit the [doc page](docs/reference/cli.md) to update it and delete the generated file.\nThere are two comments to indicate where you want to insert the new docs and where it ends:\n\n```markdown\n[comment]: <> (Insert auto generated CLI docs from here.)\n\n...docs to insert...\n\n[comment]: <> (End of auto generated CLI docs.)\n```\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 2.171875,
          "content": "FROM node:20 as ui-builder\n\nCOPY quickwit/quickwit-ui /quickwit/quickwit-ui\n\nWORKDIR /quickwit/quickwit-ui\n\nRUN touch .gitignore_for_build_directory \\\n    && NODE_ENV=production make install build\n\n\nFROM rust:bookworm AS bin-builder\n\nARG CARGO_FEATURES=release-feature-set\nARG CARGO_PROFILE=release\nARG QW_COMMIT_DATE\nARG QW_COMMIT_HASH\nARG QW_COMMIT_TAGS\n\nENV QW_COMMIT_DATE=$QW_COMMIT_DATE\nENV QW_COMMIT_HASH=$QW_COMMIT_HASH\nENV QW_COMMIT_TAGS=$QW_COMMIT_TAGS\n\nRUN apt-get -y update \\\n    && apt-get -y install ca-certificates \\\n                          clang \\\n                          cmake \\\n                          libssl-dev \\\n                          llvm \\\n                          protobuf-compiler \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Required by tonic\nRUN rustup component add rustfmt\n\nCOPY quickwit /quickwit\nCOPY config/quickwit.yaml /quickwit/config/quickwit.yaml\nCOPY --from=ui-builder /quickwit/quickwit-ui/build /quickwit/quickwit-ui/build\n\nWORKDIR /quickwit\n\nRUN echo \"Building workspace with feature(s) '$CARGO_FEATURES' and profile '$CARGO_PROFILE'\" \\\n    && RUSTFLAGS=\"--cfg tokio_unstable\" \\\n        cargo build \\\n        -p quickwit-cli \\\n        --features $CARGO_FEATURES \\\n        --bin quickwit \\\n        $(test \"$CARGO_PROFILE\" = \"release\" && echo \"--release\") \\\n    && echo \"Copying binaries to /quickwit/bin\" \\\n    && mkdir -p /quickwit/bin \\\n    && find target/$CARGO_PROFILE -maxdepth 1 -perm /a+x -type f -exec mv {} /quickwit/bin \\;\n\n\nFROM debian:bookworm-slim AS quickwit\n\nLABEL org.opencontainers.image.title=\"Quickwit\"\nLABEL maintainer=\"Quickwit, Inc. <hello@quickwit.io>\"\nLABEL org.opencontainers.image.vendor=\"Quickwit, Inc.\"\nLABEL org.opencontainers.image.licenses=\"AGPL-3.0\"\n\nRUN apt-get -y update \\\n    && apt-get -y install ca-certificates \\\n                          libssl3 \\\n    && rm -rf /var/lib/apt/lists/*\n\nWORKDIR /quickwit\nRUN mkdir config qwdata\nCOPY --from=bin-builder /quickwit/bin/quickwit /usr/local/bin/quickwit\nCOPY --from=bin-builder /quickwit/config/quickwit.yaml /quickwit/config/quickwit.yaml\n\nENV QW_CONFIG=/quickwit/config/quickwit.yaml\nENV QW_DATA_DIR=/quickwit/qwdata\nENV QW_LISTEN_ADDRESS=0.0.0.0\n\nRUN quickwit --version\n\nENTRYPOINT [\"quickwit\"]\n"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 0.9658203125,
          "content": "Copyright (C) 2024 Quickwit, Inc.\n\nQuickwit is offered under the [GNU Affero General Public License v3.0](https://opensource.org/licenses/AGPL-3.0)\nand as commercial software.\nA copy of the AGPL license can be found in [LICENSE_AGPLv3.0.txt](LICENSE_AGPLv3.0.txt)\n\n# Commercial Licensing\nFor commercial licensing, contact us at hello@quickwit.io.\n\n\n# AGPL\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as\npublished by the Free Software Foundation, either version 3 of the\nLicense, or (at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Affero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public License\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\n"
        },
        {
          "name": "LICENSE_AGPLv3.0.txt",
          "type": "blob",
          "size": 33.7138671875,
          "content": "                    GNU AFFERO GENERAL PUBLIC LICENSE\n                       Version 3, 19 November 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <https://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU Affero General Public License is a free, copyleft license for\nsoftware and other kinds of works, specifically designed to ensure\ncooperation with the community in the case of network server software.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nour General Public Licenses are intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  Developers that use our General Public Licenses protect your rights\nwith two steps: (1) assert copyright on the software, and (2) offer\nyou this License which gives you legal permission to copy, distribute\nand/or modify the software.\n\n  A secondary benefit of defending all users' freedom is that\nimprovements made in alternate versions of the program, if they\nreceive widespread use, become available for other developers to\nincorporate.  Many developers of free software are heartened and\nencouraged by the resulting cooperation.  However, in the case of\nsoftware used on network servers, this result may fail to come about.\nThe GNU General Public License permits making a modified version and\nletting the public access it on a server without ever releasing its\nsource code to the public.\n\n  The GNU Affero General Public License is designed specifically to\nensure that, in such cases, the modified source code becomes available\nto the community.  It requires the operator of a network server to\nprovide the source code of the modified version running there to the\nusers of that server.  Therefore, public use of a modified version, on\na publicly accessible server, gives the public access to the source\ncode of the modified version.\n\n  An older license, called the Affero General Public License and\npublished by Affero, was designed to accomplish similar goals.  This is\na different license, not a version of the Affero GPL, but Affero has\nreleased a new version of the Affero GPL which permits relicensing under\nthis license.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU Affero General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Remote Network Interaction; Use with the GNU General Public License.\n\n  Notwithstanding any other provision of this License, if you modify the\nProgram, your modified version must prominently offer all users\ninteracting with it remotely through a computer network (if your version\nsupports such interaction) an opportunity to receive the Corresponding\nSource of your version by providing access to the Corresponding Source\nfrom a network server at no charge, through some standard or customary\nmeans of facilitating copying of software.  This Corresponding Source\nshall include the Corresponding Source for any work covered by version 3\nof the GNU General Public License that is incorporated pursuant to the\nfollowing paragraph.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the work with which it is combined will remain governed by version\n3 of the GNU General Public License.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU Affero General Public License from time to time.  Such new versions\nwill be similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU Affero General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU Affero General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU Affero General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Affero General Public License as published\n    by the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Affero General Public License for more details.\n\n    You should have received a copy of the GNU Affero General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If your software can interact with users remotely through a computer\nnetwork, you should also make sure that it provides a way for users to\nget its source.  For example, if your program is a web application, its\ninterface could display a \"Source\" link that leads users to an archive\nof the code.  There are many ways you could offer source, and different\nsolutions will be better for different programs; see section 13 for the\nspecific requirements.\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU AGPL, see\n<https://www.gnu.org/licenses/>.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 3.501953125,
          "content": "DOCKER_SERVICES ?= all\n\nQUICKWIT_SRC = quickwit\n\nhelp:\n\t@grep '^[^\\.#[:space:]].*:' Makefile\n\n\nIMAGE_TAG := $(shell git branch --show-current | tr '\\#/' '-')\n\nQW_COMMIT_DATE := $(shell TZ=UTC0 git log -1 --format=%cd --date=format-local:'%Y-%m-%dT%H:%M:%SZ')\nQW_COMMIT_HASH := $(shell git rev-parse HEAD)\nQW_COMMIT_TAGS := $(shell git tag --points-at HEAD | tr '\\n' ',')\n\ndocker-build:\n\t@docker build \\\n\t\t--build-arg QW_COMMIT_DATE=$(QW_COMMIT_DATE) \\\n\t\t--build-arg QW_COMMIT_HASH=$(QW_COMMIT_HASH) \\\n\t\t--build-arg QW_COMMIT_TAGS=$(QW_COMMIT_TAGS) \\\n\t\t-t quickwit/quickwit:$(IMAGE_TAG) .\n\n# Usage:\n# `make docker-compose-up` starts all the services.\n# `make docker-compose-up DOCKER_SERVICES='jaeger,localstack'` starts the subset of services matching the profiles.\ndocker-compose-up:\n\t@echo \"Launching ${DOCKER_SERVICES} Docker service(s)\"\n\tCOMPOSE_PROFILES=$(DOCKER_SERVICES) docker compose -f docker-compose.yml up -d --remove-orphans --wait\n\ndocker-compose-down:\n\tdocker compose -p quickwit down --remove-orphans\n\ndocker-compose-logs:\n\tdocker compose logs -f docker-compose.yml -t\n\ndocker-compose-monitoring:\n\tCOMPOSE_PROFILES=monitoring docker compose -f docker-compose.yml up -d --remove-orphans\n\ndocker-rm-postgres-volume:\n\tdocker volume rm quickwit_postgres_data\n\ndocker-rm-volumes:\n\tdocker volume rm quickwit_azurite_data quickwit_fake_gcs_server_data quickwit_grafana_conf quickwit_grafana_data quickwit_localstack_data quickwit_postgres_data\n\ndoc:\n\t@$(MAKE) -C $(QUICKWIT_SRC) doc\n\nfmt:\n\t@$(MAKE) -C $(QUICKWIT_SRC) fmt\n\nfix:\n\t@$(MAKE) -C $(QUICKWIT_SRC) fix\n\ntypos:\n\ttypos\n\n# Usage:\n# `make test-all` starts the Docker services and runs all the tests.\n# `make -k test-all docker-compose-down`, tears down the Docker services after running all the tests.\ntest-all: docker-compose-up\n\t@$(MAKE) -C $(QUICKWIT_SRC) test-all\n\ntest-failpoints:\n\t@$(MAKE) -C $(QUICKWIT_SRC) test-failpoints\n\ntest-lambda: DOCKER_SERVICES=localstack\ntest-lambda: docker-compose-up\n\t@$(MAKE) -C $(QUICKWIT_SRC) test-lambda\n\n# This will build and push all custom cross images for cross-compilation.\n# You will need to login into Docker Hub with the `quickwit` account.\nIMAGE_TAGS = x86_64-unknown-linux-gnu aarch64-unknown-linux-gnu x86_64-unknown-linux-musl aarch64-unknown-linux-musl\n\n.PHONY: cross-images\ncross-images:\n\t@for tag in ${IMAGE_TAGS}; do \\\n\t\tdocker build --tag quickwit/cross:$$tag --file ./build/cross-images/$$tag.dockerfile ./build/cross-images; \\\n\t\tdocker push quickwit/cross:$$tag; \\\n\tdone\n\n# TODO: to be replaced by https://github.com/quickwit-oss/quickwit/issues/237\n.PHONY: build\nbuild: build-ui\n\t$(MAKE) -C $(QUICKWIT_SRC) build\n\n# Usage:\n# `BINARY_FILE=path/to/quickwit/binary BINARY_VERSION=0.1.0 ARCHIVE_NAME=quickwit make archive`\n# - BINARY_FILE: Path of the quickwit binary file.\n# - BINARY_VERSION: Version of the quickwit binary.\n# - ARCHIVE_NAME: Name of the resulting archive file (without extension).\n.PHONY: archive\narchive:\n\t@echo \"Archiving release binary & assets\"\n\t@mkdir -p \"./quickwit-${BINARY_VERSION}/config\"\n\t@mkdir -p \"./quickwit-${BINARY_VERSION}/qwdata\"\n\t@cp ./config/quickwit.yaml \"./quickwit-${BINARY_VERSION}/config\"\n\t@cp ./LICENSE_AGPLv3.0.txt \"./quickwit-${BINARY_VERSION}\"\n\t@cp \"${BINARY_FILE}\" \"./quickwit-${BINARY_VERSION}\"\n\t@tar -czf \"${ARCHIVE_NAME}.tar.gz\" \"./quickwit-${BINARY_VERSION}\"\n\t@rm -rf \"./quickwit-${BINARY_VERSION}\"\n\nworkspace-deps-tree:\n\t$(MAKE) -C $(QUICKWIT_SRC) workspace-deps-tree\n\n.PHONY: build-rustdoc\nbuild-rustdoc:\n\t$(MAKE) -C $(QUICKWIT_SRC) build-rustdoc\n\n.PHONY: build-ui\nbuild-ui:\n\t$(MAKE) -C $(QUICKWIT_SRC) build-ui\n"
        },
        {
          "name": "Quickwit_individual_CLA.md",
          "type": "blob",
          "size": 7.677734375,
          "content": "# Quickwit Individual Contributor License Agreement\n\nThank you for your interest in contributing to Quickwit (\"We\" or \"Us\").\n\nThis contributor agreement (\"Agreement\") documents the rights granted by contributors to Us. To make this document effective, please sign it and send it to Us by electronic submission, following the instructions at https://cla-assistant.io/quickwit-oss/quickwit. This is a legally binding document, so please read it carefully before agreeing to it. The Agreement may cover more than one software project managed by Us.\n\n\n## 1. Definitions\n\n\"*You*\" means the individual who Submits a Contribution to Us.\n\n\"*Contribution*\" means any work of authorship that is Submitted by You to Us in which You own or assert ownership of the Copyright. If You do not own the Copyright in the entire work of authorship, please follow the instructions in .\n\n\"*Copyright*\" means all rights protecting works of authorship owned or controlled by You, including copyright, moral and neighboring rights, as appropriate, for the full term of their existence including any extensions by You.\n\n\"*Material*\" means the work of authorship which is made available by Us to third parties. When this Agreement covers more than one software project, the Material means the work of authorship to which the Contribution was Submitted. After You Submit the Contribution, it may be included in the Material.\n\n\"*Submit*\" means any form of electronic, verbal, or written communication sent to Us or our representatives, including but not limited to electronic mailing lists, source code control systems, and issue tracking systems that are managed by, or on behalf of, Us for the purpose of discussing and improving the Material, but excluding communication that is conspicuously marked or otherwise designated in writing by You as \"Not a Contribution.\"\n\n\"*Submission Date*\" means the date on which You Submit a Contribution to Us.\n\n\"*Effective Date*\" means the date You execute this Agreement or the date You first Submit a Contribution to Us, whichever is earlier.\n\n## 2. Grant of Rights\n\n**2.1 Copyright License**\n\n(a) You retain ownership of the Copyright in Your Contribution and have the same rights to use or license the Contribution which You would have had without entering into the Agreement.\n\n(b) To the maximum extent permitted by the relevant law, You grant to Us a perpetual, worldwide, non-exclusive, transferable, royalty-free, irrevocable license under the Copyright covering the Contribution, with the right to sublicense such rights through multiple tiers of sublicensees, to reproduce, modify, display, perform and distribute the Contribution as part of the Material; provided that this license is conditioned upon compliance with Section 2.3.\n\n**2.2 Patent License.** For patent claims including, without limitation, method, process, and apparatus claims which You own, control or have the right to grant, now or in the future, You grant to Us a perpetual, worldwide, non-exclusive, transferable, royalty-free, irrevocable patent license, with the right to sublicense these rights to multiple tiers of sublicensees, to make, have made, use, sell, offer for sale, import and otherwise transfer the Contribution and the Contribution in combination with the Material (and portions of such combination). This license is granted only to the extent that the exercise of the licensed rights infringes such patent claims; and provided that this license is conditioned upon compliance with Section 2.3.\n\n**2.3 Outbound License.** Based on the grant of rights in Sections 2.1 and 2.2, if We include Your Contribution in a Material, We may license the Contribution under any license, including copyleft, permissive, commercial, or proprietary licenses. As a condition on the exercise of this right, We agree to also license the Contribution under the terms of the license or licenses which We are using for the Material on the Submission Date.\n\n**2.4 Moral Rights.** If moral rights apply to the Contribution, to the maximum extent permitted by law, You waive and agree not to assert such moral rights against Us or our successors in interest, or any of our licensees, either direct or indirect.\n\n**2.5 Our Rights.** You acknowledge that We are not obligated to use Your Contribution as part of the Material and may decide to include any Contribution We consider appropriate.\n\n**2.6 Reservation of Rights.** Any rights not expressly licensed under this section are expressly reserved by You.\n\n## 3. Agreement\n\nYou confirm that:\n\n- (a) You have the legal authority to enter into this Agreement.\n- (b) You own the Copyright and patent claims covering the Contribution which are required to grant the rights under Section 2.\n- (c) The grant of rights under Section 2 does not violate any grant of rights which You have made to third parties, including Your employer. If You are an employee, You have had Your employer approve this Agreement or sign the Entity version of this document. If You are less than eighteen years old, please have Your parents or guardian sign the Agreement.\n- (d) You have followed the instructions in , if You do not own the Copyright in the entire work of authorship Submitted.\n\n## 4. Disclaimer\n\nEXCEPT FOR THE EXPRESS WARRANTIES IN SECTION 3, THE CONTRIBUTION IS PROVIDED \"AS IS\". MORE PARTICULARLY, ALL EXPRESS OR IMPLIED WARRANTIES INCLUDING, WITHOUT LIMITATION, ANY IMPLIED WARRANTY OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE EXPRESSLY DISCLAIMED BY YOU TO US. TO THE EXTENT THAT ANY SUCH WARRANTIES CANNOT BE DISCLAIMED, SUCH WARRANTY IS LIMITED IN DURATION TO THE MINIMUM PERIOD PERMITTED BY LAW.\n\n## 5. Consequential Damage Waiver\nTO THE MAXIMUM EXTENT PERMITTED BY APPLICABLE LAW, IN NO EVENT WILL YOU BE LIABLE FOR ANY LOSS OF PROFITS, LOSS OF ANTICIPATED SAVINGS, LOSS OF DATA, INDIRECT, SPECIAL, INCIDENTAL, CONSEQUENTIAL AND EXEMPLARY DAMAGES ARISING OUT OF THIS AGREEMENT REGARDLESS OF THE LEGAL OR EQUITABLE THEORY (CONTRACT, TORT OR OTHERWISE) UPON WHICH THE CLAIM IS BASED.\n\n## 6. Miscellaneous\n\n**6.1** This Agreement will be governed by and construed in accordance with the laws of United States, California excluding its conflicts of law provisions. Under certain circumstances, the governing law in this section might be superseded by the United Nations Convention on Contracts for the International Sale of Goods (\"UN Convention\") and the parties intend to avoid the application of the UN Convention to this Agreement and, thus, exclude the application of the UN Convention in its entirety to this Agreement.\n\n**6.2** This Agreement sets out the entire agreement between You and Us for Your Contributions to Us and overrides all other agreements or understandings.\n\n**6.3** If You or We assign the rights or obligations received through this Agreement to a third party, as a condition of the assignment, that third party must agree in writing to abide by all the rights and obligations in the Agreement.\n\n**6.4** The failure of either party to require performance by the other party of any provision of this Agreement in one situation shall not affect the right of a party to require such performance at any time in the future. A waiver of performance under a provision in one situation shall not be considered a waiver of the performance of the provision in the future or a waiver of the provision in its entirety.\n\n**6.5** If any provision of this Agreement is found void and unenforceable, such provision will be replaced to the extent possible with a provision that comes closest to the meaning of the original provision and which is enforceable. The terms and conditions set forth in this Agreement shall apply notwithstanding any failure of essential purpose of this Agreement or any limited remedy to the maximum extent possible under law.\n\nHarmony (HA-CLA-I-ANY) Version 1.0\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 8.892578125,
          "content": "[![CI](https://github.com/quickwit-oss/quickwit/actions/workflows/ci.yml/badge.svg)](https://github.com/quickwit-oss/quickwit/actions?query=workflow%3ACI+branch%3Amain)\n[![codecov](https://codecov.io/gh/quickwit-oss/quickwit/branch/main/graph/badge.svg?token=06SRGAV5SS)](https://codecov.io/gh/quickwit-oss/quickwit)\n[![Contributor Covenant](https://img.shields.io/badge/Contributor%20Covenant-2.0-4baaaa.svg)](CODE_OF_CONDUCT.md)\n[![License: AGPL V3](https://img.shields.io/badge/license-AGPL%20V3-blue)](LICENSE.md)\n[![Twitter Follow](https://img.shields.io/twitter/follow/Quickwit_Inc?color=%231DA1F2&logo=Twitter&style=plastic)](https://twitter.com/Quickwit_Inc)\n[![Discord](https://img.shields.io/discord/908281611840282624?logo=Discord&logoColor=%23FFFFFF&style=plastic)](https://discord.quickwit.io)\n<br/>\n\n<br/>\n<br/>\n<p align=\"center\">\n  <img src=\"docs/assets/images/logo_horizontal.svg#gh-light-mode-only\" alt=\"Quickwit Cloud-Native Search Engine\" height=\"40\">\n  <img src=\"docs/assets/images/quickwit-dark-theme-logo.png#gh-dark-mode-only\" alt=\"Quickwit Cloud-Native Search Engine\" height=\"40\">\n</p>\n\n<h2 align=\"center\">\nCloud-native search engine for observability (logs, traces, and soon metrics!). An open-source alternative to Datadog, Elasticsearch,  Loki, and Tempo.\n</h2>\n\n<h4 align=\"center\">\n  <a href=\"https://quickwit.io/docs/get-started/quickstart\">Quickstart</a> |\n  <a href=\"https://quickwit.io/docs/\">Docs</a> |\n  <a href=\"https://quickwit.io/tutorials\">Tutorials</a> |\n  <a href=\"https://discord.quickwit.io\">Chat</a> |\n  <a href=\"https://quickwit.io/docs/get-started/installation\">Download</a>\n</h4>\n<br/>\n\n<b>We just released Quickwit 0.8! Read the [blog post](https://quickwit.io/blog/quickwit-0.8) to learn about the latest powerful features!</b>\n\n### **Quickwit is the fastest search engine on cloud storage. It's the perfect fit for observability use cases**\n\n- [Log management](https://quickwit.io/docs/log-management/overview)\n- [Distributed tracing](https://quickwit.io/docs/distributed-tracing/overview)\n- Metrics support is on the roadmap\n\n### 🚀 Quickstart\n\n- [Search and analytics on Stack Overflow dataset](https://quickwit.io/docs/get-started/quickstart)\n- [Trace analytics with Grafana](https://quickwit.io/docs/get-started/tutorials/trace-analytics-with-grafana)\n- [Distributed tracing with Jaeger](https://quickwit.io/docs/get-started/tutorials/tutorial-jaeger)\n\n<br/>\n\n<video src=\"https://github.com/quickwit-oss/quickwit/assets/653704/020b94b9-deeb-4376-9a3a-b82e1168094c\" controls=\"controls\" style=\"max-width: 1200px;\">\n</video>\n\n<br/>\n\n# 💡 Features\n\n- Full-text search and aggregation queries\n- Elasticsearch-compatible API, use Quickwit with any Elasticsearch or OpenSearch client\n- [Jaeger-native](https://quickwit.io/docs/distributed-tracing/plug-quickwit-to-jaeger)\n- OTEL-native for [logs](https://quickwit.io/docs/log-management/overview) and [traces](https://quickwit.io/docs/distributed-tracing/overview)\n- [Schemaless](https://quickwit.io/docs/guides/schemaless) or strict schema indexing\n- Schemaless analytics\n- Sub-second search on cloud storage (Amazon S3, Azure Blob Storage, Google Cloud Storage, …)\n- Decoupled compute and storage, stateless indexers & searchers\n- [Grafana data source](https://github.com/quickwit-oss/quickwit-datasource)\n- Kubernetes ready - See our [helm-chart](https://quickwit.io/docs/deployment/kubernetes/helm)\n- RESTful API\n\n## Enterprise ready\n\n- Multiple [data sources](https://quickwit.io/docs/ingest-data/) Kafka / Kinesis / Pulsar native\n- Multi-tenancy: indexing with many indexes and partitioning\n- Retention policies\n- Delete tasks (for GDPR use cases)\n- Distributed and highly available* engine that scales out in seconds (*HA indexing only with Kafka)\n\n# 📑 Architecture overview\n\n![Quickwit Distributed Tracing](./docs/assets/images/quickwit-overview-light.svg#gh-light-mode-only)![Quickwit Distributed Tracing](./docs/assets/images/quickwit-overview-dark.svg#gh-dark-mode-only)\n\n- [Architecture overview]([https://quickwit.io/docs/distributed-tracing/overview](https://quickwit.io/docs/overview/architecture))\n- [Log management](https://quickwit.io/docs/log-management/overview)\n- [Distributed traces](https://quickwit.io/docs/distributed-tracing/overview)\n\n\n# 📕 Documentation\n\n- [Installation](https://quickwit.io/docs/get-started/installation)\n- [Log management with Quickwit](https://quickwit.io/docs/log-management/overview)\n- [Distributed Tracing with Quickwit](https://quickwit.io/docs/distributed-tracing/overview)\n- [Ingest data](https://quickwit.io/docs/ingest-data/)\n- [REST API](https://quickwit.io/docs/reference/rest-api)\n\n# 📚 Resources\n\n- [Blog posts](https://quickwit.io/blog/)\n- [Youtube channel](https://www.youtube.com/@quickwit8103)\n- [Discord](https://discord.quickwit.io)\n\n# 🔮 Roadmap\n\n- Quickwit 0.9 (July 2024)\n  - Indexing and search performance improvements\n  - Index configuration updates (retention policy, indexing and search settings)\n  - Concatenated field\n\n- Quickwit 0.10 (October 2024)\n  - Schema (doc mapping) updates\n  - Native distributed ingestion\n  - Index templates\n\n# 🙋 FAQ\n\n### How can I switch from Elasticsearch or OpenSearch to Quickwit?\n\nQuickwit supports a large subset of Elasticsearch/OpenSearch API.\n\nFor instance, it has an ES-compatible ingest API to make it easier to migrate your log shippers (Vector, Fluent Bit, Syslog, ...) to Quickwit.\n\nOn the search side, the most popular Elasticsearch endpoints, query DSL, and even aggregations are supported.\n\nThe list of available endpoints and queries is available [here](https://quickwit.io/docs/reference/es_compatible_api), while the list of supported aggregations is available [here](https://quickwit.io/docs/reference/aggregation).\n\nLet us know if part of the API you are using is missing!\n\nIf the client you are using is refusing to connect to Quickwit due to missing headers, you can use the `extra_headers` option in the [node configuration](https://quickwit.io/docs/configuration/node-config#rest-configuration) to impersonate any compatible version of Elasticsearch or OpenSearch.\n\n### How is Quickwit different from traditional search engines like Elasticsearch or Solr?\n\nThe core difference and advantage of Quickwit is its architecture built from the ground to search on cloud storage. We optimized IO paths, revamped the index data structures and made search stateless and sub-second on cloud storage.\n\n### How does Quickwit compare to Elastic in terms of cost?\n\nWe estimate that Quickwit can be up to 10x cheaper on average than Elastic. To understand how, check out our [blog post](https://quickwit.io/blog/commoncrawl/) about searching the web on AWS S3.\n\n### What license does Quickwit use?\n\nQuickwit is open-source under the GNU Affero General Public License Version 3 - AGPLv3. Fundamentally, this means you are free to use Quickwit for your project if you don't modify Quickwit. However, if you do and you are distributing your modified version to the public, you have to make the modifications public.\nWe also provide a commercial license for enterprises to provide support and a voice on our roadmap.\n\n### Is it possible to set up Quickwit for a High Availability (HA)?\n\nHA is available for search, for indexing it's available only with a Kafka source.\n\n### What is Quickwit's business model?\n\nOur business model relies on our commercial license. There is no plan to become SaaS soon.\n\n\n# 🤝 Contribute and spread the word\n\nWe are always thrilled to receive contributions: code, documentation, issues, or feedback. Here's how you can help us build the future of log management:\n\n- Start by checking out the [GitHub issues labeled \"Good first issue\"](https://github.com/quickwit-oss/quickwit/issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22). These are a great place for newcomers to contribute.\n- Read our [Contributor Covenant Code of Conduct](./CODE_OF_CONDUCT.md) to understand our community standards.\n- [Create a fork of Quickwit](https://github.com/quickwit-oss/quickwit/fork) to have your own copy of the repository where you can make changes.\n- To understand how to contribute, read our [contributing guide](./CONTRIBUTING.md).\n- Set up your development environment following our [development setup guide](./CONTRIBUTING.md#development).\n- Once you've made your changes and tested them, you can contribute by [submitting a pull request](./CONTRIBUTING.md#submitting-a-pr).\n\n✨ After your contributions are accepted, don't forget to claim your swag by emailing us at hello@quickwit.io. Thank you for contributing!\n\n# 💬 Join Our Community\n\nWe welcome everyone to our community! Whether you're contributing code or just saying hello, we'd love to hear from you. Here's how you can connect with us:\n\n- Join the conversation on [Discord](https://discord.quickwit.io).\n- Follow us on [Twitter](https://twitter.com/Quickwit_Inc).\n- Check out our [website](https://quickwit.io/) and [blog](https://quickwit.io/blog) for the latest updates.\n- Watch our [YouTube](https://www.youtube.com/channel/UCvZVuRm2FiDq1_ul0mY85wA) channel for video content.\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.6845703125,
          "content": "# Security Policy\n\n## Supported Versions\n\n| Version | Supported          |\n| ------- | ------------------ |\n| 0.3.1   | :white_check_mark: |\n| < 0.3.1   | :x:                |\n\n## Reporting a Vulnerability\n\nTo disclose a vulnerability in our code, please notify us by email at security@quickwit.io or private message _@fulmicoton_ or _@guilload_ on our Discord \nserver ([discord.quickwit.io](https://discord.quickwit.io)). We will open a draft security advisory on our repository and grant you access so you can\nshare with us more details about the vulnerability. After releasing a fix, we will publish the security advisory to publicly disclose the security vulnerability\nto the project's community.\n"
        },
        {
          "name": "_typos.toml",
          "type": "blob",
          "size": 0.1103515625,
          "content": "[files]\nextend-exclude = [\"**/*.json\"]\n\n[default.extend-words]\n# Don't correct the surname \"Teh\"\nstrat = \"strat\"\n"
        },
        {
          "name": "build",
          "type": "tree",
          "content": null
        },
        {
          "name": "config",
          "type": "tree",
          "content": null
        },
        {
          "name": "distribution",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker-compose.yml",
          "type": "blob",
          "size": 7.7509765625,
          "content": "# By default, this docker compose script maps all services to localhost only.\n# If you need to make services available outside of your machine, add\n# appropriate service mappings to the .env file. See .env.example file for\n# configuration example.\n#\n# Notes on image versions:\n#  - For the key services such as postgres and pulsar we are trying to run\n#    against the oldest supported version\n#  - For the zookeeper and kafka we are trying to use the oldest supported\n#    version that has arm64 images\n#  - For everything else we are trying to run against the latest version.\n#\n# To run against the latest image versions update .env file. See .env.example\n# file for configuration examples. You might need to remove the old images\n# first if they are already tagged latest and volumes if their content is\n# incompatible with the latest version, as in case of postgres.\n\nname: quickwit\n\nnetworks:\n  default:\n    name: quickwit-network\n    ipam:\n      config:\n      - subnet: 172.16.7.0/24\n        gateway: 172.16.7.1\n\nservices:\n  localstack:\n    image: localstack/localstack:${LOCALSTACK_VERSION:-3.5.0}\n    container_name: localstack\n    ports:\n      - \"${MAP_HOST_LOCALSTACK:-127.0.0.1}:4566:4566\"\n      - \"${MAP_HOST_LOCALSTACK:-127.0.0.1}:4571:4571\"\n      - \"${MAP_HOST_LOCALSTACK:-127.0.0.1}:8080:8080\"\n    profiles:\n      - all\n      - localstack\n    environment:\n      SERVICES: kinesis,s3,sqs\n      PERSISTENCE: 1\n    volumes:\n      - .localstack:/etc/localstack/init/ready.d\n      - localstack_data:/var/lib/localstack\n    healthcheck:\n      test: [\"CMD\", \"curl\", \"-k\", \"-f\", \"https://localhost:4566/quickwit-integration-tests\"]\n      interval: 1s\n      timeout: 5s\n      retries: 100\n\n  postgres:\n    # The oldest supported version. EOL November 14, 2024\n    image: postgres:${POSTGRES_VERSION:-12.17-alpine}\n    container_name: postgres\n    ports:\n      - \"${MAP_HOST_POSTGRES:-127.0.0.1}:5432:5432\"\n    profiles:\n      - all\n      - postgres\n    environment:\n      PGDATA: /var/lib/postgresql/data/pgdata\n      POSTGRES_USER: ${POSTGRES_USER:-quickwit-dev}\n      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-quickwit-dev}\n      POSTGRES_DB: ${POSTGRES_DB:-quickwit-metastore-dev}\n    volumes:\n      - postgres_data:/var/lib/postgresql/data\n    healthcheck:\n      test: [\"CMD\", \"pg_isready\"]\n      interval: 1s\n      timeout: 5s\n      retries: 100\n\n  pulsar-broker:\n    # The oldest version with arm64 docker images. EOL May 2 2025\n    image: apachepulsar/pulsar:${PULSAR_VERSION:-3.0.0}\n    container_name: pulsar-broker\n    command: bin/pulsar standalone\n    ports:\n      - \"${MAP_HOST_PULSAR:-127.0.0.1}:6650:6650\"\n      - \"${MAP_HOST_PULSAR:-127.0.0.1}:8081:8080\"\n    environment:\n      PULSAR_MEM: \"-Xms384M -Xmx384M\"\n    profiles:\n      - all\n      - pulsar\n\n  kafka-broker:\n    # The oldest supported version with arm64 docker images. EOL October 27, 2023\n    image: confluentinc/cp-kafka:${CP_VERSION:-7.0.9}\n    container_name: kafka-broker\n    depends_on:\n      - zookeeper\n    ports:\n      - \"${MAP_HOST_KAFKA:-127.0.0.1}:9092:9092\"\n      - \"${MAP_HOST_KAFKA:-127.0.0.1}:9101:9101\"\n      - \"${MAP_HOST_KAFKA:-127.0.0.1}:29092:29092\"\n    profiles:\n      - all\n      - kafka\n    environment:\n      KAFKA_BROKER_ID: 1\n      KAFKA_ZOOKEEPER_CONNECT: \"zookeeper:2181\"\n      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT\n      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT_HOST://localhost:9092,PLAINTEXT://kafka-broker:29092\n      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1\n      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0\n      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1\n      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1\n      KAFKA_JMX_PORT: 9101\n      KAFKA_JMX_HOSTNAME: localhost\n      KAFKA_HEAP_OPTS: -Xms256M -Xmx256M\n    healthcheck:\n      test: [\"CMD\", \"cub\", \"kafka-ready\", \"-b\", \"localhost:9092\", \"1\", \"5\"]\n      start_period: 5s\n      interval: 5s\n      timeout: 10s\n      retries: 100\n\n  zookeeper:\n    # The oldest supported version with arm64 images. EOL October 27, 2023\n    image: confluentinc/cp-zookeeper:${CP_VERSION:-7.0.9}\n    container_name: zookeeper\n    ports:\n      - \"${MAP_HOST_ZOOKEEPER:-127.0.0.1}:2181:2181\"\n    profiles:\n      - all\n      - kafka\n    environment:\n      KAFKA_HEAP_OPTS: -Xms256M -Xmx256M\n      ZOOKEEPER_CLIENT_PORT: 2181\n      ZOOKEEPER_TICK_TIME: 2000\n    healthcheck:\n      test: [\"CMD\", \"cub\", \"zk-ready\", \"localhost:2181\", \"5\"]\n      start_period: 5s\n      interval: 5s\n      timeout: 10s\n      retries: 100\n\n  azurite:\n    image: mcr.microsoft.com/azure-storage/azurite:${AZURITE_VERSION:-3.24.0}\n    container_name: azurite\n    ports:\n        - \"${MAP_HOST_AZURITE:-127.0.0.1}:10000:10000\" # Blob store port\n    profiles:\n      - all\n      - azurite\n    volumes:\n        - azurite_data:/data\n    command: azurite --blobHost 0.0.0.0 --loose\n\n  fake-gcs-server:\n    image: fsouza/fake-gcs-server:${FAKE_GCS_SERVER_VERSION:-1.47.7}\n    container_name: fake-gcs-server\n    ports:\n      - \"${MAP_HOST_FAKE_GCS_SERVER:-127.0.0.1}:4443:4443\" # Blob store port\n    profiles:\n      - all\n      - fake-gcs-server\n    volumes:\n      - fake_gcs_server_data:/data/sample-bucket\n    command: -scheme http\n\n  grafana:\n    image: grafana/grafana-oss:${GRAFANA_VERSION:-10.4.1}\n    container_name: grafana\n    ports:\n      - \"${MAP_HOST_GRAFANA:-127.0.0.1}:3000:3000\"\n    profiles:\n      - grafana\n      - monitoring\n    environment:\n      GF_AUTH_DISABLE_LOGIN_FORM: \"true\"\n      GF_AUTH_ANONYMOUS_ENABLED: \"true\"\n      GF_AUTH_ANONYMOUS_ORG_ROLE: Admin\n    volumes:\n      - grafana_conf:/etc/grafana\n      - grafana_data:/var/lib/grafana\n      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards\n      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning\n\n  jaeger:\n    image: jaegertracing/all-in-one:${JAEGER_VERSION:-1.48.0}\n    container_name: jaeger\n    ports:\n      - \"${MAP_HOST_JAEGER:-127.0.0.1}:16686:16686\" # Frontend\n    profiles:\n      - jaeger\n      - monitoring\n\n  otel-collector:\n    image: otel/opentelemetry-collector:${OTEL_VERSION:-0.84.0}\n    container_name: otel-collector\n    ports:\n      - \"${MAP_HOST_OTEL:-127.0.0.1}:1888:1888\"   # pprof extension\n      - \"${MAP_HOST_OTEL:-127.0.0.1}:8888:8888\"   # Prometheus metrics exposed by the collector\n      - \"${MAP_HOST_OTEL:-127.0.0.1}:8889:8889\"   # Prometheus exporter metrics\n      - \"${MAP_HOST_OTEL:-127.0.0.1}:13133:13133\" # health_check extension\n      - \"${MAP_HOST_OTEL:-127.0.0.1}:4317:4317\"   # OTLP gRPC receiver\n      - \"${MAP_HOST_OTEL:-127.0.0.1}:4318:4318\"   # OTLP http receiver\n      - \"${MAP_HOST_OTEL:-127.0.0.1}:55679:55679\" # zpages extension\n    profiles:\n      - otel\n      - monitoring\n    volumes:\n      - ./monitoring/otel-collector-config.yaml:/etc/otel-collector-config.yaml\n    command: [\"--config=/etc/otel-collector-config.yaml\"]\n\n  prometheus:\n    image: prom/prometheus:${PROMETHEUS_VERSION:-v2.43.0}\n    container_name: prometheus\n    ports:\n      - \"${MAP_HOST_PROMETHEUS:-127.0.0.1}:9090:9090\"\n    profiles:\n      - prometheus\n      - monitoring\n    volumes:\n      - ./monitoring/prometheus.yaml:/etc/prometheus/prometheus.yml\n    extra_hosts:\n      - \"host.docker.internal:host-gateway\"\n\n  gcp-pubsub-emulator:\n    # It is not an official docker image\n    # if we prefer we can build a docker from the official docker image (gcloud cli)\n    # and install the pubsub emulator https://cloud.google.com/pubsub/docs/emulator\n    image: thekevjames/gcloud-pubsub-emulator:${GCLOUD_EMULATOR:-455.0.0}\n    container_name: gcp-pubsub-emulator\n    ports:\n      - \"${MAP_HOST_GCLOUD_EMULATOR:-127.0.0.1}:8681:8681\"\n    environment:\n      # create a fake gcp project and a topic / subscription\n      - PUBSUB_PROJECT1=quickwit-emulator,emulator_topic:emulator_subscription\n    profiles:\n      - all\n      - gcp-pubsub\n\nvolumes:\n  azurite_data:\n  fake_gcs_server_data:\n  grafana_conf:\n  grafana_data:\n  localstack_data:\n  postgres_data:\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "install.sh",
          "type": "blob",
          "size": 14.6318359375,
          "content": "#!/bin/bash\n\n# installer.sh\n#\n# This is just a little script that can be downloaded from the internet to\n# install Quickwit.\n# It just does platform detection, fetches the latest appropriate release version from github\n# and execute the appropriate commands to download the binary.\n#\n# Heavily inspired by the Vector & Meilisearch installation scripts\n\nset -u\n\n# If PACKAGE_ROOT is unset or empty, default it.\nPACKAGE_ROOT=\"${PACKAGE_ROOT:-\"https://github.com/quickwit-oss/quickwit/releases/download\"}\"\nPACKAGE_RELEASE_API=\"${PACKAGE_RELEASE_API:-\"https://api.github.com/repos/quickwit-oss/quickwit/releases\"}\"\nPACKAGE_NAME=\"quickwit\"\n_divider=\"--------------------------------------------------------------------------------\"\n_prompt=\">>>\"\n_indent=\"   \"\n\nheader() {\n    cat 1>&2 <<EOF\n\n                                   Q U I C K W I T\n                                      Installer\n\n$_divider\nWebsite: https://quickwit.io/\nDocs: https://quickwit.io/docs/\n$_divider\n\nEOF\n}\n\nusage() {\n    cat 1>&2 <<EOF\nquickwit-install\nThe installer for Quickwit (https://quickwit.io/)\n\nUSAGE:\n    quickwit-install [FLAGS] [OPTIONS]\n\nFLAGS:\n    -h, --help              Prints help information\nEOF\n}\n\nmain() {\n    downloader --check\n    header\n    install_from_archive \"${1:-\"\"}\"\n}\n\ninstall_from_archive() {\n    need_cmd cp\n    need_cmd mv\n    need_cmd rm\n    need_cmd tar\n    need_cmd gzip\n    need_cmd chmod\n    need_cmd grep\n    need_cmd head\n    need_cmd sed\n    need_cmd curl\n\n    get_architecture || return 1\n    local _arch=\"$RETVAL\"\n    assert_nz \"$_arch\" \"arch\"\n\n    local _binary_arch=\"\"\n    case \"$_arch\" in\n        aarch64-apple-darwin)\n            _binary_arch=$_arch\n            ;;\n        x86_64-apple-darwin)\n            _binary_arch=$_arch\n            ;;\n        x86_64-*linux*-gnu)\n            _binary_arch=\"x86_64-unknown-linux-gnu\"\n            ;;\n        aarch64-*linux*-gnu)\n            _binary_arch=\"aarch64-unknown-linux-gnu\"\n            ;;\n        *)\n            printf \"%s A pre-built package is not available for your OS architecture: %s\" \"$_prompt\" \"$_arch\"\n            printf \"\\n\"\n            err \"You can easily build it from source following the docs: https://quickwit.io/docs\"\n            ;;\n    esac\n\n    local _version=$(get_latest_version \"$1\")\n    local _archive_content_file=\"quickwit-${_version}-${_binary_arch}\"\n    local _file=\"${_archive_content_file}.tar.gz\"\n    local _url=\"${PACKAGE_ROOT}/${_version}/${_file}\"\n\n    printf \"%s Downloading Quickwit via %s\" \"$_prompt\" \"$_url\"\n    ensure downloader \"$_url\" \"$_file\"\n    printf \"\\n\"\n\n    printf \"%s Unpacking archive ...\" \"$_prompt\"\n    ensure tar -xzf \"$_file\"\n    chmod 744 \"./quickwit-${_version}/quickwit\"\n    ensure rm \"$_file\"\n    printf \"\\n\"\n\n    printf \"\\n\"\n    printf \"%s Install succeeded!\\n\" \"$_prompt\"\n    printf \"%s To start using Quickwit:\\n\" \"$_prompt\"\n    printf \"\\n\"\n    printf \"%s ./quickwit-${_version}/quickwit --version \\n\" \"$_indent\"\n    printf \"\\n\"\n    printf \"%s More information at https://quickwit.io/docs/\\n\" \"$_prompt\"\n\n    local _retval=$?\n\n    return \"$_retval\"\n}\n\n# ------------------------------------------------------------------------------\n# semverParseInto and semverLT from https://github.com/cloudflare/semver_bash/blob/master/semver.sh\n#\n# usage: semverParseInto version major minor patch special\n# version: the string version\n# major, minor, patch, special: will be assigned by the function\n# ------------------------------------------------------------------------------\n\nsemverParseInto() {\n    local RE='[^0-9]*\\([0-9]*\\)[.]\\([0-9]*\\)[.]\\([0-9]*\\)\\([0-9A-Za-z-]*\\)'\n    #MAJOR\n    eval $2=`echo $1 | sed -e \"s#$RE#\\1#\"`\n    #MINOR\n    eval $3=`echo $1 | sed -e \"s#$RE#\\2#\"`\n    #PATCH\n    eval $4=`echo $1 | sed -e \"s#$RE#\\3#\"`\n    #SPECIAL\n    eval $5=`echo $1 | sed -e \"s#$RE#\\4#\"`\n}\n\n# usage: semverLT version1 version2\nsemverLT() {\n    local MAJOR_A=0\n    local MINOR_A=0\n    local PATCH_A=0\n    local SPECIAL_A=0\n\n    local MAJOR_B=0\n    local MINOR_B=0\n    local PATCH_B=0\n    local SPECIAL_B=0\n\n    semverParseInto $1 MAJOR_A MINOR_A PATCH_A SPECIAL_A\n    semverParseInto $2 MAJOR_B MINOR_B PATCH_B SPECIAL_B\n\n    if [ $MAJOR_A -lt $MAJOR_B ]; then\n        return 0\n    fi\n    if [ $MAJOR_A -le $MAJOR_B ] && [ $MINOR_A -lt $MINOR_B ]; then\n        return 0\n    fi\n    if [ $MAJOR_A -le $MAJOR_B ] && [ $MINOR_A -le $MINOR_B ] && [ $PATCH_A -lt $PATCH_B ]; then\n        return 0\n    fi\n    if [ \"_$SPECIAL_A\"  == \"_\" ] && [ \"_$SPECIAL_B\"  == \"_\" ] ; then\n        return 1\n    fi\n    if [ \"_$SPECIAL_A\"  == \"_\" ] && [ \"_$SPECIAL_B\"  != \"_\" ] ; then\n        return 1\n    fi\n    if [ \"_$SPECIAL_A\"  != \"_\" ] && [ \"_$SPECIAL_B\"  == \"_\" ] ; then\n        return 0\n    fi\n    if [ \"_$SPECIAL_A\" < \"_$SPECIAL_B\" ]; then\n        return 0\n    fi\n\n    return 1\n}\n\n# Returns the tag of the latest stable release (in terms of semver and not of release date)\nget_latest_version() {\n    GREP_SEMVER_REGEXP='v\\([0-9]*\\)[.]\\([0-9]*\\)[.]\\([0-9]*\\)$' # i.e. v[number].[number].[number]\n    temp_file='temp_file' # temp_file needed because the grep would start before the download is over\n    curl -s \"${PACKAGE_RELEASE_API}\" > \"$temp_file\" || return 1\n    releases=$(cat \"$temp_file\" | \\\n        grep -E \"tag_name|draft|prerelease\" \\\n        | tr -d ',\"' | cut -d ':' -f2 | tr -d ' ')\n        # Returns a list of [tag_name draft_boolean prerelease_boolean ...]\n        # Ex: v0.10.1 false false v0.9.1-rc.1 false true v0.9.0 false false...\n\n    # clean up early\n    rm -f \"$temp_file\"\n\n    if [ \"$1\" = \"--allow-any-latest-version\" ]; then\n        local first_release=$(echo $releases | { read first rest; echo $first; })\n        echo $first_release\n        return\n    fi\n\n    i=0\n    latest=\"\"\n    current_tag=\"\"\n    for release_info in $releases; do\n        if [ $i -eq 0 ]; then # Checking tag_name\n            if echo \"$release_info\" | grep -q \"$GREP_SEMVER_REGEXP\"; then # If it's not an alpha or beta release\n                current_tag=$release_info\n            else\n                current_tag=\"\"\n            fi\n            i=1\n        elif [ $i -eq 1 ]; then # Checking draft boolean\n            if [ \"$release_info\" = \"true\" ]; then\n                current_tag=\"\"\n            fi\n            i=2\n        elif [ $i -eq 2 ]; then # Checking prerelease boolean\n            if [ \"$release_info\" = \"true\" ]; then\n                current_tag=\"\"\n            fi\n            i=0\n            if [ \"$current_tag\" != \"\" ]; then # If the current_tag is valid\n                if [ \"$latest\" = \"\" ]; then # If there is no latest yet\n                    latest=\"$current_tag\"\n                else\n                    semverLT $current_tag $latest # Comparing latest and the current tag\n                    if [ $? -eq 1 ]; then\n                        latest=\"$current_tag\"\n                    fi\n                fi\n            fi\n        fi\n    done\n\n    echo $latest\n}\n\n# ------------------------------------------------------------------------------\n# All code below here was copied from https://sh.rustup.rs and can safely\n# be updated if necessary.\n# ------------------------------------------------------------------------------\n\nget_gnu_musl_glibc() {\n  need_cmd ldd\n  need_cmd bc\n  need_cmd awk\n  # Detect both gnu and musl\n  local _ldd_version\n  local _glibc_version\n  _ldd_version=$(ldd --version)\n  if ldd --version 2>&1 | grep -Eq 'GNU'; then\n    _glibc_version=$(echo \"$_ldd_version\" | awk '/ldd/{print $NF}')\n    if [ 1 -eq \"$(echo \"${_glibc_version} < 2.18\" | bc)\" ]; then\n      echo \"musl\"\n    else\n      echo \"gnu\"\n    fi\n  elif ldd --version 2>&1 | grep -Eq \"musl\"; then\n    echo \"musl\"\n  else\n    err \"Warning: Unable to detect architecture from ldd (using gnu-unknown)\"\n  fi\n}\n\nget_bitness() {\n    need_cmd head\n    # Architecture detection without dependencies beyond coreutils.\n    # ELF files start out \"\\x7fELF\", and the following byte is\n    #   0x01 for 32-bit and\n    #   0x02 for 64-bit.\n    # The printf builtin on some shells like dash only supports octal\n    # escape sequences, so we use those.\n    local _current_exe_head\n    _current_exe_head=$(head -c 5 /proc/self/exe )\n    if [ \"$_current_exe_head\" = \"$(printf '\\177ELF\\001')\" ]; then\n        echo 32\n    elif [ \"$_current_exe_head\" = \"$(printf '\\177ELF\\002')\" ]; then\n        echo 64\n    else\n        err \"unknown platform bitness\"\n    fi\n}\n\nget_endianness() {\n    local cputype=$1\n    local suffix_eb=$2\n    local suffix_el=$3\n\n    # detect endianness without od/hexdump, like get_bitness() does.\n    need_cmd head\n    need_cmd tail\n\n    local _current_exe_endianness\n    _current_exe_endianness=\"$(head -c 6 /proc/self/exe | tail -c 1)\"\n    if [ \"$_current_exe_endianness\" = \"$(printf '\\001')\" ]; then\n        echo \"${cputype}${suffix_el}\"\n    elif [ \"$_current_exe_endianness\" = \"$(printf '\\002')\" ]; then\n        echo \"${cputype}${suffix_eb}\"\n    else\n        err \"unknown platform endianness\"\n    fi\n}\n\nget_architecture() {\n    local _ostype _cputype _bitness _arch\n    _ostype=\"$(uname -s)\"\n    _cputype=\"$(uname -m)\"\n\n    if [ \"$_ostype\" = Linux ]; then\n        if [ \"$(uname -o)\" = Android ]; then\n            _ostype=Android\n        fi\n    fi\n\n    if [ \"$_ostype\" = Darwin ] && [ \"$_cputype\" = i386 ]; then\n        # Darwin `uname -m` lies\n        if sysctl hw.optional.x86_64 | grep -q ': 1'; then\n            _cputype=x86_64\n        fi\n    fi\n\n    case \"$_ostype\" in\n\n        Android)\n            _ostype=linux-android\n            ;;\n\n        Linux)\n            case $(get_gnu_musl_glibc) in\n              \"musl\")\n                _ostype=unknown-linux-musl\n                ;;\n              \"gnu\")\n                _ostype=unknown-linux-gnu\n                ;;\n              # Fallback\n              *)\n                _ostype=unknown-linux-gnu\n                ;;\n            esac\n            _bitness=$(get_bitness)\n            ;;\n\n        FreeBSD)\n            _ostype=unknown-freebsd\n            ;;\n\n        NetBSD)\n            _ostype=unknown-netbsd\n            ;;\n\n        DragonFly)\n            _ostype=unknown-dragonfly\n            ;;\n\n        Darwin)\n            _ostype=apple-darwin\n            ;;\n\n        MINGW* | MSYS* | CYGWIN*)\n            _ostype=pc-windows-gnu\n            ;;\n\n        *)\n            err \"unrecognized OS type: $_ostype\"\n            ;;\n\n    esac\n\n    case \"$_cputype\" in\n\n        i386 | i486 | i686 | i786 | x86)\n            _cputype=i686\n            ;;\n\n        xscale | arm)\n            _cputype=arm\n            if [ \"$_ostype\" = \"linux-android\" ]; then\n                _ostype=linux-androideabi\n            fi\n            ;;\n\n        armv6l)\n            _cputype=arm\n            if [ \"$_ostype\" = \"linux-android\" ]; then\n                _ostype=linux-androideabi\n            else\n                _ostype=\"${_ostype}eabihf\"\n            fi\n            ;;\n\n        armv7l | armv8l)\n            _cputype=armv7\n            if [ \"$_ostype\" = \"linux-android\" ]; then\n                _ostype=linux-androideabi\n            else\n                _ostype=\"${_ostype}eabihf\"\n            fi\n            ;;\n\n        aarch64 | arm64)\n            _cputype=aarch64\n            ;;\n\n        x86_64 | x86-64 | x64 | amd64)\n            _cputype=x86_64\n            ;;\n\n        mips)\n            _cputype=$(get_endianness mips '' el)\n            ;;\n\n        mips64)\n            if [ \"$_bitness\" -eq 64 ]; then\n                # only n64 ABI is supported for now\n                _ostype=\"${_ostype}abi64\"\n                _cputype=$(get_endianness mips64 '' el)\n            fi\n            ;;\n\n        ppc)\n            _cputype=powerpc\n            ;;\n\n        ppc64)\n            _cputype=powerpc64\n            ;;\n\n        ppc64le)\n            _cputype=powerpc64le\n            ;;\n\n        s390x)\n            _cputype=s390x\n            ;;\n\n        *)\n            err \"unknown CPU type: $_cputype\"\n\n    esac\n\n    # Detect 64-bit linux with 32-bit userland\n    if [ \"${_ostype}\" = unknown-linux-gnu ] && [ \"${_bitness}\" -eq 32 ]; then\n        case $_cputype in\n            x86_64)\n                _cputype=i686\n                ;;\n            mips64)\n                _cputype=$(get_endianness mips '' el)\n                ;;\n            powerpc64)\n                _cputype=powerpc\n                ;;\n            aarch64)\n                _cputype=armv7\n                if [ \"$_ostype\" = \"linux-android\" ]; then\n                    _ostype=linux-androideabi\n                else\n                    _ostype=\"${_ostype}eabihf\"\n                fi\n                ;;\n        esac\n    fi\n\n    # Detect armv7 but without the CPU features Rust needs in that build,\n    # and fall back to arm.\n    # See https://github.com/rust-lang/rustup.rs/issues/587.\n    if [ \"$_ostype\" = \"unknown-linux-gnueabihf\" ] && [ \"$_cputype\" = armv7 ]; then\n        if ensure grep '^Features' /proc/cpuinfo | grep -q -v neon; then\n            # At least one processor does not have NEON.\n            _cputype=arm\n        fi\n    fi\n\n    _arch=\"${_cputype}-${_ostype}\"\n\n    RETVAL=\"$_arch\"\n}\n\nerr() {\n    echo \"$_prompt $1\" >&2\n    exit 1\n}\n\nneed_cmd() {\n    if ! check_cmd \"$1\"; then\n        err \"Error: the install script failed because the command '$1' was not found\"\n    fi\n}\n\ncheck_cmd() {\n    command -v \"$1\" > /dev/null 2>&1\n}\n\nassert_nz() {\n    if [ -z \"$1\" ]; then err \"assert_nz $2\"; fi\n}\n\n# Run a command that should never fail. If the command fails execution\n# will immediately terminate with an error showing the failing\n# command.\nensure() {\n    local output\n    output=\"$(\"$@\" 2>&1 > /dev/null)\"\n\n    if [ \"$output\" ]; then\n        echo \"\"\n        echo \"$_prompt command failed: $*\"\n        echo \"\"\n        echo \"$_divider\"\n        echo \"\"\n        echo \"$output\" >&2\n        exit 1\n    fi\n}\n\n# This is just for indicating that commands' results are being\n# intentionally ignored. Usually, because it's being executed\n# as part of error handling.\nignore() {\n    \"$@\"\n}\n\n# This wraps curl or wget. Try curl first, if not installed,\n# use wget instead.\ndownloader() {\n    if [ \"$1\" = --check ]; then\n        need_cmd curl\n    else\n        if ! check_help_for curl --proto --tlsv1.2; then\n            echo \"Warning: Not forcing TLS v1.2, this is potentially less secure\"\n            curl --silent --show-error --fail --location \"$1\" --output \"$2\"\n        else\n            curl --proto '=https' --tlsv1.2 --silent --show-error --fail --location \"$1\" --output \"$2\"\n        fi\n    fi\n}\n\ncheck_help_for() {\n    local _cmd\n    local _arg\n    local _ok\n    _cmd=\"$1\"\n    _ok=\"y\"\n    shift\n\n    # If we're running on OS-X, older than 10.13, then we always\n    # fail to find these options to force fallback\n    if check_cmd sw_vers; then\n        if [ \"$(sw_vers -productVersion | cut -d. -f2)\" -lt 13 ]; then\n            # Older than 10.13\n            echo \"Warning: Detected OS X platform older than 10.13\"\n            _ok=\"n\"\n        fi\n    fi\n\n    for _arg in \"$@\"; do\n        if ! \"$_cmd\" --help | grep -q -- \"$_arg\"; then\n            _ok=\"n\"\n        fi\n    done\n\n    test \"$_ok\" = \"y\"\n}\n\nmain \"$@\" || exit 1\n"
        },
        {
          "name": "monitoring",
          "type": "tree",
          "content": null
        },
        {
          "name": "quickwit",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}