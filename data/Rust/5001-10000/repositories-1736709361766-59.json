{
  "metadata": {
    "timestamp": 1736709361766,
    "page": 59,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjYw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "cross-rs/cross",
      "stars": 6963,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".cargo",
          "type": "tree",
          "content": null
        },
        {
          "name": ".changes",
          "type": "tree",
          "content": null
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.35546875,
          "content": "root = true\n\n[*]\nend_of_line = lf\ninsert_final_newline = true\n\n[*.{rs,py,sh,md,toml,yml,js}]\ncharset = utf-8\n\n[*.{rs,py,sh,yml,js}]\ntrim_trailing_whitespace = true\n\n[*.{rs,py,sh}]\nindent_style = space\nindent_size = 4\n\n[*.yml]\nindent_style = space\nindent_size = 2\n\n[Dockerfile.*]\ncharset = utf-8\ntrim_trailing_whitespace = true\nindent_style = space\nindent_size = 4\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.060546875,
          "content": "* text=auto\n\nDockerfile.* linguist-language=Dockerfile eol=lf\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.6279296875,
          "content": "**/target/\n**/.idea/\n**/.vscode/*.*\n**/*.log\n/cargo-timing*.html\nCHANGELOG.md.draft\n\n# python stuff\n__pycache__/\n.pytest_cache/\n*.py[cod]\n*$py.class\n*.egg-info/\n*.egg\n.tox\n\n#--------------------------------------------------#\n# The following was generated with gitignore.nvim: #\n#--------------------------------------------------#\n# Gitignore for the following technologies: Vim\n\n# Swap\n[._]*.s[a-v][a-z]\n!*.svg  # comment out if you don't need vector files\n[._]*.sw[a-p]\n[._]s[a-rt-v][a-z]\n[._]ss[a-gi-z]\n[._]sw[a-p]\n\n# Session\nSession.vim\nSessionx.vim\n\n# Temporary\n.netrwhist\n*~\n# Auto-generated tag files\ntags\n# Persistent undo\n[._]*.un~\n\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.123046875,
          "content": "[submodule \"docker/cross-toolchains\"]\n\tpath = docker/cross-toolchains\n\turl = https://github.com/cross-rs/cross-toolchains.git\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 15.1396484375,
          "content": "# Change Log\n\nAll notable changes to this project will be documented in this file. This is an automatically-generated document: entries are added via changesets present in the `.changes` directory.\nThis project adheres to [Semantic Versioning](http://semver.org/).\n\n<!-- next-header -->\n\n## [Unreleased] - ReleaseDate\n\n## [v0.2.5] - 2023-02-04\n\n## Fixed\n\n- #962 - fix SELinux labels to allow use in multiple containers and/or the host filesystem.\n- #1166 - freebsd: include memstat in build image to fix build with libc 0.2.138 and up.\n- #1183 - resolve issue when using `pre-build` in `Cargo.toml`\n\n## [v0.2.4] - 2022-07-10\n\n### Fixed\n\n- #930 - fix any parsing of 1-character subcommands\n- #929 - Fixed issue where `--verbose` would not output data when it should\n\n## [v0.2.3] - 2022-07-09\n\n### Added\n\n- #921 - use `CARGO_TERM_VERBOSE`, `CARGO_TERM_QUIET`, and `CARGO_TERM_COLOR` environment variables for cross terminal output.\n- #913 - added the `x86_64-unknown-illumos` target.\n- #910 - `pre-build` can now take a string pointing to a script file to run.\n- #905 - added `qemu-runner` for musl images, allowing use of native or emulated runners.\n- #905 - added qemu emulation to `i586-unknown-linux-gnu`, `i686-unknown-linux-musl`, and `i586-unknown-linux-gnu`, so they can run on an `x86` CPU, rather than an `x86_64` CPU.\n- #900 - add the option to skip copying build artifacts back to host when using remote cross via `CROSS_REMOTE_SKIP_BUILD_ARTIFACTS`.\n- #891 - support custom user namespace overrides by setting the `CROSS_CONTAINER_USER_NAMESPACE` environment variable.\n- #890 - support rootless docker via the `CROSS_ROOTLESS_CONTAINER_ENGINE` environment variable.\n- #878 - added an image `ghcr.io/cross-rs/cross` containing cross.\n\n### Changed\n\n- #869 - ensure cargo configuration environment variable flags are passed to the docker container.\n- #859 - added color diagnostic output and error messages.\n\n### Fixed\n\n- #905 - fixed running dynamically-linked libraries for all musl targets except `x86_64-unknown-linux-musl`.\n- #904 - ensure `cargo metadata` works by using the same channel.\n- #904 - fixed the path for workspace volumes and passthrough volumes with docker-in-docker.\n- #898 - fix the path to the mount root with docker-in-docker if mounting volumes.\n- #897 - ensure `target.$(...)` config options override `build` ones when parsing strings and vecs.\n- #895 - convert filenames in docker tags to ASCII lowercase and ignore invalid characters\n- #885 - handle symlinks when using remote docker.\n- #868 - ignore the `CARGO` environment variable.\n- #867 - fixed parsing of `build.env.passthrough` config values.\n\n## [v0.2.2] - 2022-06-24\n\n### Added\n\n- #803 - added `CROSS_CUSTOM_TOOLCHAIN` to disable automatic installation of components for use with tools like `cargo-bisect-rustc`\n- #795 - added images for additional toolchains maintained by cross-rs.\n- #792 - added `CROSS_CONTAINER_IN_CONTAINER` environment variable to replace `CROSS_DOCKER_IN_DOCKER`.\n- #785 - added support for remote container engines through data volumes through setting the `CROSS_REMOTE` environment variable. also adds in utility commands to create and remove persistent data volumes.\n- #782 - added `build-std` config option, which builds the rust standard library from source if enabled.\n- #678 - Add optional `target.{target}.dockerfile[.file]`, `target.{target}.dockerfile.context` and `target.{target}.dockerfile.build-args` to invoke docker/podman build before using an image.\n- #678 - Add `target.{target}.pre-build` config for running commands before building the image.\n- #772 - added `CROSS_CONTAINER_OPTS` environment variable to replace `DOCKER_OPTS`.\n- #767, #788 - added the `cross-util` and `xtask` commands.\n- #842 - Add `Cargo.toml` as configuration source\n- #745 - added `thumbv7neon-*` targets.\n- #741 - added `armv7-unknown-linux-gnueabi` and `armv7-unknown-linux-musleabi` targets.\n- #721 - add support for running doctests on nightly if `CROSS_UNSTABLE_ENABLE_DOCTESTS=true`.\n- #719 - add `--list` to known subcommands.\n- #681 - Warn on unknown fields and confusable targets\n- #624 - Add `build.default-target`\n- #647 - Add `mips64-unknown-linux-muslabi64` and `mips64el-unknown-linux-muslabi64` support\n- #543 - Added environment variables to control the UID and GID in the container\n- #524 - docker: Add Nix Store volume support\n- Added support for mounting volumes.\n- #684 - Enable cargo workspaces to work from any path in the workspace, and make path dependencies mount seamlessly. Also added support for private SSH dependencies.\n\n### Changed\n\n- #838 - re-enabled the solaris targets.\n- #807 - update Qemu to 6.1.0 on images using Ubuntu 18.04+ with python3.6+.\n- #775 - forward Cargo exit code to host\n- #762 - re-enabled `x86_64-unknown-dragonfly` target.\n- #747 - reduced android image sizes.\n- #746 - limit image permissions for android images.\n- #377 - update WINE versions to 7.0.\n- #734 - patch `arm-unknown-linux-gnueabihf` to build for ARMv6, and add architecture for crosstool-ng-based images.\n- #709 - Update Emscripten targets to `emcc` version 3.1.10\n- #707, #708 - Set `BINDGEN_EXTRA_CLANG_ARGS` environment variable to pass sysroot to `rust-bindgen`\n- #696 - bump freebsd to 12.3\n- #629 - Update Android NDK version and API version\n- #497 - don't set RUSTFLAGS in aarch64-musl image\n- #492 - Add cmake to FreeBSD images\n- #748 - allow definitions in the environment variable passthrough\n\n### Fixed\n\n- #836 - write a `CACHEDIR.TAG` when creating the target directory, similar to `cargo`.\n- #804 - allow usage of env `CARGO_BUILD_TARGET` as an alias for `CROSS_BUILD_TARGET`\n- #792 - fixed container-in-container support when using podman.\n- #781 - ensure `target.$(...)` config options override `build` ones.\n- #771 - fix parsing of `DOCKER_OPTS`.\n- #727 - add `PKG_CONFIG_PATH` to all `*-linux-gnu` images.\n- #722 - boolean environment variables are evaluated as truthy or falsey.\n- #720 - add android runner to preload `libc++_shared.so`.\n- #725 - support `CROSS_DEBUG` and `CROSS_RUNNER` on android images.\n- #714 - use host target directory when falling back to host cargo.\n- #713 - convert relative target directories to absolute paths.\n- #501 (reverted, see #764) - x86_64-linux: lower glibc version requirement to 2.17 (compatible with centos 7)\n- #500 - use runner setting specified in Cross.toml\n- #498 - bump linux-image version to fix CI\n- Re-enabled `powerpc64-unknown-linux-gnu` image\n- Re-enabled `sparc64-unknown-linux-gnu` image\n- #582 - Added `libprocstat.so` to FreeBSD images\n- #665 - when not using [env.volumes](https://github.com/cross-rs/cross#mounting-volumes-into-the-build-environment), mount project in /project\n- #494 - Parse Cargo's --manifest-path option to determine mounted docker root\n\n### Removed\n\n- #718 - remove deb subcommand.\n\n### Internal\n\n- #856 - remove use of external wslpath and create internal helper that properly handles UNC paths.\n- #828 - assume paths are Unicode and provide better error messages for path encoding errors.\n- #787 - add installer for git hooks.\n- #786, #791 - Migrate build script to rust: `cargo build-docker-image $TARGET`\n- #730 - make FreeBSD builds more resilient.\n- #670 - Use serde for deserialization of Cross.toml\n- Change rust edition to 2021 and bump MSRV for the cross binary to 1.58.1\n- #654 - Use color-eyre for error reporting\n- #658 - Upgrade dependencies\n- #652 - Allow trying individual targets via bors.\n- #650 - Improve Docker caching.\n- #609 - Switch to Github Actions and GHCR.\n- #588 - fix ci: bump openssl version in freebsd again\n- #552 - Added CHANGELOG.md automation\n- #534 - fix image builds with update of dependencies\n- #502 - fix ci: bump openssl version in freebsd\n- #489 - Add support for more hosts and simplify/unify host support checks\n- #477 - Fix Docker/Podman links in README\n- #476 - Use Rustlang mirror for Sabotage linux tarballs\n- Bump nix dependency to `0.22.1`\n- Bump musl version to 1.1.24.\n\n## [v0.2.1] - 2020-06-30\n\n- Disabled `powerpc64-unknown-linux-gnu` image.\n- Disabled `sparc64-unknown-linux-gnu` image.\n- Disabled `x86_64-unknown-dragonfly` image.\n- Removed CI testing for `i686-apple-darwin`.\n\n## [v0.2.0] - 2020-02-22\n\n- Removed OpenSSL from all images.\n- Added support for Podman.\n- Bumped all images to at least Ubuntu 16.04.\n\n## [v0.1.16] - 2019-09-17\n\n- Bump OpenSSL version to 1.0.2t.\n- Re-enabled `asmjs-unknown-emscripten` target.\n- Default to `native` runner instead of `qemu-user` for certain targets.\n\n## [v0.1.15] - 2019-09-04\n\n- Images are now hosted at <https://hub.docker.com/r/rustembedded/cross>.\n- Bump OpenSSL version to 1.0.2p.\n- Bump musl version to 1.1.20.\n- Bump Ubuntu to 18.04 to all musl targets.\n- Bump gcc version to 6.3.0 for all musl targets.\n- OpenSSL support for the `arm-unknown-linux-musleabi` target.\n- OpenSSL support for the `armv7-unknown-linux-musleabihf` target.\n- Build and test support for `aarch64-unknown-linux-musl`, `arm-unknown-linux-musleabihf`,\n  `armv5te-unknown-linux-musleabi`, `i586-unknown-linux-musl`, `mips-unknown-linux-musl`,\n  add `mipsel-unknown-linux-musl` targets.\n\n## [v0.1.14] - 2017-11-22\n\n### Added\n\n- Support for the `i586-unknown-linux-gnu` target.\n\n### Changed\n\n- Downgraded the Solaris toolchains from 2.11 to 2.10 to make the binaries produced by Cross more\n  compatible (this version matches what rust-lang/rust is using).\n\n## [v0.1.13] - 2017-11-08\n\n### Added\n\n- Support for the custom [`deb`] subcommand.\n\n[`deb`]: https://github.com/mmstick/cargo-deb\n\n- Partial `test` / `run` support for android targets. Using the android API via `cross run` / `cross test` is _not_ supported because Cross is using QEMU instead of the official Android emulator.\n\n- Partial support for the `sparcv9-sun-solaris` and `x86_64-sun-solaris` targets. `cross test` and\n  `cross run` doesn't work for these new targets.\n\n- OpenSSL support for the `i686-unknown-linux-musl` target.\n\n### Changed\n\n- Bump OpenSSL version to 1.0.2m.\n\n## [v0.1.12] - 2017-09-22\n\n### Added\n\n- Support for `cross check`. This subcommand won't use any Docker container.\n\n### Changed\n\n- `binfmt_misc` is not required on the host for toolchain v1.19.0 and newer.\n  With these toolchains `binfmt_misc` interpreters don't need to be installed\n  on the host saving a _privileged_ docker run which some systems don't allow.\n\n## [v0.1.11] - 2017-06-10\n\n### Added\n\n- Build and test support for `i686-pc-windows-gnu`, `x86_64-pc-windows-gnu`,\n  `asmjs-unknown-emscripten` and `wasm-unknown-emscripten`.\n\n- Build support for `aarch64-linux-android`, `arm-linux-androideabi`,\n  `armv7-linux-androideabi`, `x86_64-linux-android` and `i686-linux-android`\n\n- A `build.env.passthrough` / `build.target.*.passthrough` option to Cross.toml\n  to support passing environment variables from the host to the Docker image.\n\n### Changed\n\n- Bumped OpenSSL version to 1.0.2k\n- Bumped QEMU version to 2.9.0\n\n## [v0.1.10] - 2017-04-02\n\n### Added\n\n- Cross compilation support for `x86_64-pc-windows-gnu`\n\n- Cross compilation support for Android targets\n\n### Changed\n\n- Bumped OpenSSL version to 1.0.2k\n\n## [v0.1.9] - 2017-02-08\n\n### Added\n\n- Support for ARM MUSL targets.\n\n### Changed\n\n- The automatic lockfile update that happens every time `cross` is invoked\n  should no longer hit the network when there's no git dependency to add/update.\n\n- The QEMU_STRACE variable is passed to the underlying Docker container. Paired\n  with `cross run`, this lets you get a trace of system call from the execution\n  of \"foreign\" (non x86_64) binaries.\n\n## [v0.1.8] - 2017-01-21\n\n### Added\n\n- Support for custom targets. Cross will now also try to use a docker image for\n  them. As with the built-in targets, one can override the image using\n  `[target.{}.image]` in Cross.toml.\n\n### Changed\n\n- Moved to a newer Xargo: v0.3.5\n\n## [v0.1.7] - 2017-01-19\n\n### Changed\n\n- Moved to a newer Xargo: v0.3.4\n\n### Fixed\n\n- QEMU interpreters were being register when not required, e.g. for the\n  `x86_64-unknown-linux-gnu` target.\n\n## [v0.1.6] - 2017-01-14\n\n### Fixed\n\n- Stable releases were picking the wrong image (wrong tag: 0.1.5 instead of\n  v0.1.5)\n\n## [v0.1.5] - 2017-01-14 [YANKED]\n\n### Added\n\n- `cross run` support for the thumb targets.\n\n- A `build.xargo` / `target.$TARGET.xargo` option to Cross.toml to use Xargo\n  instead of Cargo.\n\n- A `target.$TARGET.image` option to override the Docker image used for\n  `$TARGET`.\n\n- A `sparc64-unknown-linux-gnu` environment.\n\n- A `x86_64-unknown-dragonfly` environment.\n\n### Changed\n\n- Building older versions (<0.7.0) of the `openssl` crate is now supported.\n\n- Before Docker is invoked, `cross` will _always_ (re)generate the lockfile to\n  avoid errors later on due to read/write permissions. This removes the need to\n  call `cargo generate-lockfile` before `cross` in _all_ cases.\n\n## [v0.1.4] - 2017-01-07\n\n### Added\n\n- Support for the `arm-unknown-linux-gnueabi` target\n\n- `cross build` support for:\n  - `i686-unknown-freebsd`\n  - `x86_64-unknown-freebsd`\n  - `x86_64-unknown-netbsd`\n\n### Changed\n\n- It's no longer necessary to call `cargo generate-lockfile` before using\n  `cross` as `cross` will now take care of creating a lockfile when necessary.\n\n- The C environments for the `thumb` targets now include newlib (`libc.a`,\n  `libm.a`, etc.)\n\n### Fixed\n\n- A segfault when `cross` was trying to figure out the name of the user that\n  called it.\n\n## [v0.1.3] - 2017-01-01\n\n### Changed\n\n- Fix the `i686-unknown-linux-musl` target\n\n## [v0.1.2] - 2016-12-31\n\n### Added\n\n- Support for `i686-unknown-linux-musl`\n- Support for `cross build`ing crates for the `thumbv*-none-eabi*` targets.\n\n## [v0.1.1] - 2016-12-28\n\n### Added\n\n- Support for `x86_64-unknown-linux-musl`\n- Print shell commands when the verbose flag is used.\n- Support crossing from x86_64 osx to i686 osx\n\n## v0.1.0 - 2016-12-26\n\n- Initial release. Supports 12 targets.\n\n<!-- prettier-ignore-start -->\n<!-- next-url -->\n\n[Unreleased]: https://github.com/cross-rs/cross/compare/v0.2.5...HEAD\n\n[v0.2.5]: https://github.com/cross-rs/cross/compare/v0.2.4...v0.2.5\n\n[v0.2.4]: https://github.com/cross-rs/cross/compare/v0.2.3...v0.2.4\n\n[v0.2.3]: https://github.com/cross-rs/cross/compare/v0.2.2...v0.2.3\n\n[v0.2.2]: https://github.com/cross-rs/cross/compare/v0.2.1...v0.2.2\n[v0.2.1]: https://github.com/cross-rs/cross/compare/v0.2.0...v0.2.1\n[v0.2.0]: https://github.com/cross-rs/cross/compare/v0.1.16...v0.2.0\n[v0.1.16]: https://github.com/cross-rs/cross/compare/v0.1.15...v0.1.16\n[v0.1.15]: https://github.com/cross-rs/cross/compare/v0.1.14...v0.1.15\n[v0.1.14]: https://github.com/cross-rs/cross/compare/v0.1.13...v0.1.14\n[v0.1.13]: https://github.com/cross-rs/cross/compare/v0.1.12...v0.1.13\n[v0.1.12]: https://github.com/cross-rs/cross/compare/v0.1.11...v0.1.12\n[v0.1.11]: https://github.com/cross-rs/cross/compare/v0.1.10...v0.1.11\n[v0.1.10]: https://github.com/cross-rs/cross/compare/v0.1.9...v0.1.10\n[v0.1.9]: https://github.com/cross-rs/cross/compare/v0.1.8...v0.1.9\n[v0.1.8]: https://github.com/cross-rs/cross/compare/v0.1.7...v0.1.8\n[v0.1.7]: https://github.com/cross-rs/cross/compare/v0.1.6...v0.1.7\n[v0.1.6]: https://github.com/cross-rs/cross/compare/v0.1.5...v0.1.6\n[v0.1.5]: https://github.com/cross-rs/cross/compare/v0.1.4...v0.1.5\n[v0.1.4]: https://github.com/cross-rs/cross/compare/v0.1.3...v0.1.4\n[v0.1.3]: https://github.com/cross-rs/cross/compare/v0.1.2...v0.1.3\n[v0.1.2]: https://github.com/cross-rs/cross/compare/v0.1.1...v0.1.2\n[v0.1.1]: https://github.com/cross-rs/cross/compare/v0.1.0...v0.1.1\n<!-- prettier-ignore-end -->\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 4.37109375,
          "content": "# The Rust Code of Conduct\n\n## Conduct\n\n* We are committed to providing a friendly, safe and welcoming environment for all, regardless of level of experience, gender identity and expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, religion, nationality, or other similar characteristic.\n* On IRC, please avoid using overtly sexual nicknames or other nicknames that might detract from a friendly, safe and welcoming environment for all.\n* Please be kind and courteous. There's no need to be mean or rude.\n* Respect that people have differences of opinion and that every design or implementation choice carries a trade-off and numerous costs. There is seldom a right answer.\n* Please keep unstructured critique to a minimum. If you have solid ideas you want to experiment with, make a fork and see how it works.\n* We will exclude you from interaction if you insult, demean or harass anyone. That is not welcome behavior. We interpret the term \"harassment\" as including the definition in the [Citizen Code of Conduct](http://citizencodeofconduct.org/); if you have any lack of clarity about what might be included in that concept, please read their definition. In particular, we don't tolerate behavior that excludes people in socially marginalized groups.\n* Private harassment is also unacceptable. No matter who you are, if you feel you have been or are being harassed or made uncomfortable by a community member, please contact one of the channel ops or any of the [Tools team][team] immediately. Whether you're a regular contributor or a newcomer, we care about making this community a safe place for you and we've got your back.\n* Likewise any spamming, trolling, flaming, baiting or other attention-stealing behavior is not welcome.\n\n## Moderation\n\nThese are the policies for upholding our community's standards of conduct.\n\n1. Remarks that violate the Rust standards of conduct, including hateful, hurtful, oppressive, or exclusionary remarks, are not allowed. (Cursing is allowed, but never targeting another user, and never in a hateful manner.)\n2. Remarks that moderators find inappropriate, whether listed in the code of conduct or not, are also not allowed.\n3. Moderators will first respond to such remarks with a warning.\n4. If the warning is unheeded, the user will be \"kicked,\" i.e., kicked out of the communication channel to cool off.\n5. If the user comes back and continues to make trouble, they will be banned, i.e., indefinitely excluded.\n6. Moderators may choose at their discretion to un-ban the user if it was a first offense and they offer the offended party a genuine apology.\n7. If a moderator bans someone and you think it was unjustified, please take it up with that moderator, or with a different moderator, **in private**. Complaints about bans in-channel are not allowed.\n8. Moderators are held to a higher standard than other community members. If a moderator creates an inappropriate situation, they should expect less leeway than others.\n\nIn the Rust community we strive to go the extra step to look out for each other. Don't just aim to be technically unimpeachable, try to be your best self. In particular, avoid flirting with offensive or sensitive issues, particularly if they're off-topic; this all too often leads to unnecessary fights, hurt feelings, and damaged trust; worse, it can drive people away from the community entirely.\n\nAnd if someone takes issue with something you said or did, resist the urge to be defensive. Just stop doing what it was they complained about and apologize. Even if you feel you were misinterpreted or unfairly accused, chances are good there was something you could've communicated better — remember that it's your responsibility to make your fellow Rustaceans comfortable. Everyone wants to get along and we are all here first and foremost because we want to talk about cool technology. You will find that people will be eager to assume good intent and forgive as long as you earn their trust.\n\nThe enforcement policies listed above apply to the cross-rs [GitHub repositories]\nand the cross-rs [Matrix room].\n\n*Adapted from the [Node.js Policy on Trolling](http://blog.izs.me/post/30036893703/policy-on-trolling) as well as the [Contributor Covenant v1.3.0](https://www.contributor-covenant.org/version/1/3/0/).*\n\n[team]: https://github.com/cross-rs\n[GitHub repositories]: https://github.com/cross-rs\n[Matrix room]: https://matrix.to/#/#cross-rs:matrix.org\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.947265625,
          "content": "Thank you for looking to contribute to cross. Have a new feature you'd like to add? Know how to fix an open bug? Want to add an image for a new target? We host documentation for how to contribute on our [wiki](https://github.com/cross-rs/cross/wiki/Contributing).\n\nPlease read our [code of conduct](https://github.com/cross-rs/cross/blob/main/CODE_OF_CONDUCT.md) so our community stays positive and welcoming. If you have any additional questions, please feel free to ask in either our [discussions](https://github.com/cross-rs/cross/discussions) or our [Matrix room](https://matrix.to/#/#cross-rs:matrix.org).\n\n<!--\nNOTE: we don't have specific information provided here since this\nwould require us to check the contributing changes into our Git\nhistory and therefore CI, which would make any changes to the\nrepository require separate commits or additional changes to the\ncode base, making either more difficult for new contributors or\nadding unnecessary commits.\n-->\n"
        },
        {
          "name": "Cargo.lock",
          "type": "blob",
          "size": 30.7509765625,
          "content": "# This file is automatically @generated by Cargo.\n# It is not intended for manual editing.\nversion = 3\n\n[[package]]\nname = \"addr2line\"\nversion = \"0.21.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8a30b2e23b9e17a9f90641c7ab1549cd9b44f296d3ccbf309d2863cfe398a0cb\"\ndependencies = [\n \"gimli\",\n]\n\n[[package]]\nname = \"adler\"\nversion = \"1.0.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f26201604c87b1e01bd3d98f8d5d9a8fcbb815e8cedb41ffccbeb4bf593a35fe\"\n\n[[package]]\nname = \"aho-corasick\"\nversion = \"1.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8e60d3430d3a69478ad0993f19238d2df97c507009a52b3c10addcd7f6bcb916\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"android-tzdata\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e999941b234f3131b00bc13c22d06e8c5ff726d1b6318ac7eb276997bbb4fef0\"\n\n[[package]]\nname = \"android_system_properties\"\nversion = \"0.1.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"819e7219dbd41043ac279b19830f2efc897156490d7fd6ea916720117ee66311\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"anstream\"\nversion = \"0.6.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d96bd03f33fe50a863e394ee9718a706f988b9079b20c3784fb726e7678b62fb\"\ndependencies = [\n \"anstyle\",\n \"anstyle-parse\",\n \"anstyle-query\",\n \"anstyle-wincon\",\n \"colorchoice\",\n \"utf8parse\",\n]\n\n[[package]]\nname = \"anstyle\"\nversion = \"1.0.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8901269c6307e8d93993578286ac0edf7f195079ffff5ebdeea6a59ffb7e36bc\"\n\n[[package]]\nname = \"anstyle-parse\"\nversion = \"0.2.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c75ac65da39e5fe5ab759307499ddad880d724eed2f6ce5b5e8a26f4f387928c\"\ndependencies = [\n \"utf8parse\",\n]\n\n[[package]]\nname = \"anstyle-query\"\nversion = \"1.0.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e28923312444cdd728e4738b3f9c9cac739500909bb3d3c94b43551b16517648\"\ndependencies = [\n \"windows-sys\",\n]\n\n[[package]]\nname = \"anstyle-wincon\"\nversion = \"3.0.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1cd54b81ec8d6180e24654d0b371ad22fc3dd083b6ff8ba325b72e00c87660a7\"\ndependencies = [\n \"anstyle\",\n \"windows-sys\",\n]\n\n[[package]]\nname = \"atty\"\nversion = \"0.2.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d9b39be18770d11421cdb1b9947a45dd3f37e93092cbf377614828a319d5fee8\"\ndependencies = [\n \"hermit-abi 0.1.19\",\n \"libc\",\n \"winapi\",\n]\n\n[[package]]\nname = \"autocfg\"\nversion = \"1.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f1fdabc7756949593fe60f30ec81974b613357de856987752631dea1e3394c80\"\n\n[[package]]\nname = \"backtrace\"\nversion = \"0.3.71\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"26b05800d2e817c8b3b4b54abd461726265fa9789ae34330622f2db9ee696f9d\"\ndependencies = [\n \"addr2line\",\n \"cc\",\n \"cfg-if\",\n \"libc\",\n \"miniz_oxide\",\n \"object\",\n \"rustc-demangle\",\n]\n\n[[package]]\nname = \"bitflags\"\nversion = \"1.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bef38d45163c2f1dde094a7dfd33ccf595c92905c8f8f4fdc18d06fb1037718a\"\n\n[[package]]\nname = \"bitflags\"\nversion = \"2.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cf4b9d6a944f767f8e5e0db018570623c85f3d925ac718db4e06d0187adb21c1\"\n\n[[package]]\nname = \"bstr\"\nversion = \"1.9.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"05efc5cfd9110c8416e471df0e96702d58690178e206e61b7173706673c93706\"\ndependencies = [\n \"memchr\",\n \"serde\",\n]\n\n[[package]]\nname = \"bumpalo\"\nversion = \"3.16.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"79296716171880943b8470b5f8d03aa55eb2e645a4874bdbb28adb49162e012c\"\n\n[[package]]\nname = \"cc\"\nversion = \"1.0.96\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"065a29261d53ba54260972629f9ca6bffa69bac13cd1fed61420f7fa68b9f8bd\"\n\n[[package]]\nname = \"cfg-if\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd\"\n\n[[package]]\nname = \"chrono\"\nversion = \"0.4.38\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a21f936df1771bf62b77f047b726c4625ff2e8aa607c01ec06e5a05bd8463401\"\ndependencies = [\n \"android-tzdata\",\n \"iana-time-zone\",\n \"js-sys\",\n \"num-traits\",\n \"wasm-bindgen\",\n \"windows-targets\",\n]\n\n[[package]]\nname = \"clap\"\nversion = \"4.5.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"90bc066a67923782aa8515dbaea16946c5bcc5addbd668bb80af688e53e548a0\"\ndependencies = [\n \"clap_builder\",\n \"clap_derive\",\n]\n\n[[package]]\nname = \"clap_builder\"\nversion = \"4.5.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ae129e2e766ae0ec03484e609954119f123cc1fe650337e155d03b022f24f7b4\"\ndependencies = [\n \"anstream\",\n \"anstyle\",\n \"clap_lex\",\n \"strsim\",\n]\n\n[[package]]\nname = \"clap_derive\"\nversion = \"4.5.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"528131438037fd55894f62d6e9f068b8f45ac57ffa77517819645d10aed04f64\"\ndependencies = [\n \"heck\",\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"clap_lex\"\nversion = \"0.7.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"98cc8fbded0c607b7ba9dd60cd98df59af97e84d24e49c8557331cfc26d301ce\"\n\n[[package]]\nname = \"color-eyre\"\nversion = \"0.6.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"55146f5e46f237f7423d74111267d4597b59b0dad0ffaf7303bce9945d843ad5\"\ndependencies = [\n \"backtrace\",\n \"color-spantrace\",\n \"eyre\",\n \"indenter\",\n \"once_cell\",\n \"owo-colors\",\n \"tracing-error\",\n]\n\n[[package]]\nname = \"color-spantrace\"\nversion = \"0.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cd6be1b2a7e382e2b98b43b2adcca6bb0e465af0bdd38123873ae61eb17a72c2\"\ndependencies = [\n \"once_cell\",\n \"owo-colors\",\n \"tracing-core\",\n \"tracing-error\",\n]\n\n[[package]]\nname = \"colorchoice\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"acbf1af155f9b9ef647e42cdc158db4b64a1b61f743629225fde6f3e0be2a7c7\"\n\n[[package]]\nname = \"const-sha1\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fb58b6451e8c2a812ad979ed1d83378caa5e927eef2622017a45f251457c2c9d\"\n\n[[package]]\nname = \"core-foundation-sys\"\nversion = \"0.8.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"06ea2b9bc92be3c2baa9334a323ebca2d6f074ff852cd1d7b11064035cd3868f\"\n\n[[package]]\nname = \"cross\"\nversion = \"0.2.5\"\ndependencies = [\n \"clap\",\n \"color-eyre\",\n \"const-sha1\",\n \"directories\",\n \"dunce\",\n \"eyre\",\n \"home\",\n \"ignore\",\n \"is-terminal\",\n \"is_ci\",\n \"libc\",\n \"nix\",\n \"once_cell\",\n \"owo-colors\",\n \"regex\",\n \"rustc_version\",\n \"semver\",\n \"serde\",\n \"serde_ignored\",\n \"serde_json\",\n \"shell-escape\",\n \"shell-words\",\n \"signal-hook\",\n \"tempfile\",\n \"thiserror\",\n \"toml\",\n \"walkdir\",\n \"which\",\n \"winapi\",\n]\n\n[[package]]\nname = \"crossbeam-deque\"\nversion = \"0.8.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"613f8cc01fe9cf1a3eb3d7f488fd2fa8388403e97039e2f73692932e291a770d\"\ndependencies = [\n \"crossbeam-epoch\",\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"crossbeam-epoch\"\nversion = \"0.9.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5b82ac4a3c2ca9c3460964f020e1402edd5753411d7737aa39c3714ad1b5420e\"\ndependencies = [\n \"crossbeam-utils\",\n]\n\n[[package]]\nname = \"crossbeam-utils\"\nversion = \"0.8.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"248e3bacc7dc6baa3b21e405ee045c3047101a49145e7e9eca583ab4c2ca5345\"\n\n[[package]]\nname = \"directories\"\nversion = \"4.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f51c5d4ddabd36886dd3e1438cb358cdcb0d7c499cb99cb4ac2e38e18b5cb210\"\ndependencies = [\n \"dirs-sys\",\n]\n\n[[package]]\nname = \"dirs-sys\"\nversion = \"0.3.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1b1d1d91c932ef41c0f2663aa8b0ca0342d444d842c06914aa0a7e352d0bada6\"\ndependencies = [\n \"libc\",\n \"redox_users\",\n \"winapi\",\n]\n\n[[package]]\nname = \"dunce\"\nversion = \"1.0.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"56ce8c6da7551ec6c462cbaf3bfbc75131ebbfa1c944aeaa9dab51ca1c5f0c3b\"\n\n[[package]]\nname = \"either\"\nversion = \"1.11.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a47c1c47d2f5964e29c61246e81db715514cd532db6b5116a25ea3c03d6780a2\"\n\n[[package]]\nname = \"equivalent\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5443807d6dff69373d433ab9ef5378ad8df50ca6298caf15de6e52e24aaf54d5\"\n\n[[package]]\nname = \"errno\"\nversion = \"0.3.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a258e46cdc063eb8519c00b9fc845fc47bcfca4130e2f08e88665ceda8474245\"\ndependencies = [\n \"libc\",\n \"windows-sys\",\n]\n\n[[package]]\nname = \"eyre\"\nversion = \"0.6.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7cd915d99f24784cdc19fd37ef22b97e3ff0ae756c7e492e9fbfe897d61e2aec\"\ndependencies = [\n \"indenter\",\n \"once_cell\",\n]\n\n[[package]]\nname = \"fastrand\"\nversion = \"2.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9fc0510504f03c51ada170672ac806f1f105a88aa97a5281117e1ddc3368e51a\"\n\n[[package]]\nname = \"getrandom\"\nversion = \"0.2.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"94b22e06ecb0110981051723910cbf0b5f5e09a2062dd7663334ee79a9d1286c\"\ndependencies = [\n \"cfg-if\",\n \"libc\",\n \"wasi\",\n]\n\n[[package]]\nname = \"gimli\"\nversion = \"0.28.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4271d37baee1b8c7e4b708028c57d816cf9d2434acb33a549475f78c181f6253\"\n\n[[package]]\nname = \"globset\"\nversion = \"0.4.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"57da3b9b5b85bd66f31093f8c408b90a74431672542466497dcbdfdc02034be1\"\ndependencies = [\n \"aho-corasick\",\n \"bstr\",\n \"log\",\n \"regex-automata\",\n \"regex-syntax\",\n]\n\n[[package]]\nname = \"hashbrown\"\nversion = \"0.14.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e5274423e17b7c9fc20b6e7e208532f9b19825d82dfd615708b70edd83df41f1\"\n\n[[package]]\nname = \"heck\"\nversion = \"0.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2304e00983f87ffb38b55b444b5e3b60a884b5d30c0fca7d82fe33449bbe55ea\"\n\n[[package]]\nname = \"hermit-abi\"\nversion = \"0.1.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"62b467343b94ba476dcb2500d242dadbb39557df889310ac77c5d99100aaac33\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"hermit-abi\"\nversion = \"0.3.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d231dfb89cfffdbc30e7fc41579ed6066ad03abda9e567ccafae602b97ec5024\"\n\n[[package]]\nname = \"home\"\nversion = \"0.5.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e3d1354bf6b7235cb4a0576c2619fd4ed18183f689b12b006a0ee7329eeff9a5\"\ndependencies = [\n \"windows-sys\",\n]\n\n[[package]]\nname = \"iana-time-zone\"\nversion = \"0.1.60\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e7ffbb5a1b541ea2561f8c41c087286cc091e21e556a4f09a8f6cbf17b69b141\"\ndependencies = [\n \"android_system_properties\",\n \"core-foundation-sys\",\n \"iana-time-zone-haiku\",\n \"js-sys\",\n \"wasm-bindgen\",\n \"windows-core\",\n]\n\n[[package]]\nname = \"iana-time-zone-haiku\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f31827a206f56af32e590ba56d5d2d085f558508192593743f16b2306495269f\"\ndependencies = [\n \"cc\",\n]\n\n[[package]]\nname = \"ignore\"\nversion = \"0.4.22\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b46810df39e66e925525d6e38ce1e7f6e1d208f72dc39757880fcb66e2c58af1\"\ndependencies = [\n \"crossbeam-deque\",\n \"globset\",\n \"log\",\n \"memchr\",\n \"regex-automata\",\n \"same-file\",\n \"walkdir\",\n \"winapi-util\",\n]\n\n[[package]]\nname = \"indenter\"\nversion = \"0.3.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ce23b50ad8242c51a442f3ff322d56b02f08852c77e4c0b4d3fd684abc89c683\"\n\n[[package]]\nname = \"indexmap\"\nversion = \"2.2.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"168fb715dda47215e360912c096649d23d58bf392ac62f73919e831745e40f26\"\ndependencies = [\n \"equivalent\",\n \"hashbrown\",\n]\n\n[[package]]\nname = \"is-terminal\"\nversion = \"0.4.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f23ff5ef2b80d608d61efee834934d862cd92461afc0560dedf493e4c033738b\"\ndependencies = [\n \"hermit-abi 0.3.9\",\n \"libc\",\n \"windows-sys\",\n]\n\n[[package]]\nname = \"is_ci\"\nversion = \"1.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7655c9839580ee829dfacba1d1278c2b7883e50a277ff7541299489d6bdfdc45\"\n\n[[package]]\nname = \"itoa\"\nversion = \"1.0.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"49f1f14873335454500d59611f1cf4a4b0f786f9ac11f4312a78e4cf2566695b\"\n\n[[package]]\nname = \"js-sys\"\nversion = \"0.3.69\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"29c15563dc2726973df627357ce0c9ddddbea194836909d655df6a75d2cf296d\"\ndependencies = [\n \"wasm-bindgen\",\n]\n\n[[package]]\nname = \"lazy_static\"\nversion = \"1.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e2abad23fbc42b3700f2f279844dc832adb2b2eb069b2df918f455c4e18cc646\"\n\n[[package]]\nname = \"libc\"\nversion = \"0.2.154\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ae743338b92ff9146ce83992f766a31066a91a8c84a45e0e9f21e7cf6de6d346\"\n\n[[package]]\nname = \"libredox\"\nversion = \"0.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c0ff37bd590ca25063e35af745c343cb7a0271906fb7b37e4813e8f79f00268d\"\ndependencies = [\n \"bitflags 2.5.0\",\n \"libc\",\n]\n\n[[package]]\nname = \"linux-raw-sys\"\nversion = \"0.4.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"01cda141df6706de531b6c46c3a33ecca755538219bd484262fa09410c13539c\"\n\n[[package]]\nname = \"log\"\nversion = \"0.4.21\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"90ed8c1e510134f979dbc4f070f87d4313098b704861a105fe34231c70a3901c\"\n\n[[package]]\nname = \"memchr\"\nversion = \"2.7.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6c8640c5d730cb13ebd907d8d04b52f55ac9a2eec55b440c8892f40d56c76c1d\"\n\n[[package]]\nname = \"miniz_oxide\"\nversion = \"0.7.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9d811f3e15f28568be3407c8e7fdb6514c1cda3cb30683f15b6a1a1dc4ea14a7\"\ndependencies = [\n \"adler\",\n]\n\n[[package]]\nname = \"nix\"\nversion = \"0.26.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"598beaf3cc6fdd9a5dfb1630c2800c7acd31df7aaf0f565796fba2b53ca1af1b\"\ndependencies = [\n \"bitflags 1.3.2\",\n \"cfg-if\",\n \"libc\",\n]\n\n[[package]]\nname = \"num-traits\"\nversion = \"0.2.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"da0df0e5185db44f69b44f26786fe401b6c293d1907744beaa7fa62b2e5a517a\"\ndependencies = [\n \"autocfg\",\n]\n\n[[package]]\nname = \"object\"\nversion = \"0.32.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a6a622008b6e321afc04970976f62ee297fdbaa6f95318ca343e3eebb9648441\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"once_cell\"\nversion = \"1.19.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3fdb12b2476b595f9358c5161aa467c2438859caa136dec86c26fdd2efe17b92\"\n\n[[package]]\nname = \"owo-colors\"\nversion = \"3.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c1b04fb49957986fdce4d6ee7a65027d55d4b6d2265e5848bbb507b58ccfdb6f\"\ndependencies = [\n \"supports-color\",\n]\n\n[[package]]\nname = \"pin-project-lite\"\nversion = \"0.2.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bda66fc9667c18cb2758a2ac84d1167245054bcf85d5d1aaa6923f45801bdd02\"\n\n[[package]]\nname = \"proc-macro2\"\nversion = \"1.0.81\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3d1597b0c024618f09a9c3b8655b7e430397a36d23fdafec26d6965e9eec3eba\"\ndependencies = [\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"quote\"\nversion = \"1.0.36\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0fa76aaf39101c457836aec0ce2316dbdc3ab723cdda1c6bd4e6ad4208acaca7\"\ndependencies = [\n \"proc-macro2\",\n]\n\n[[package]]\nname = \"redox_users\"\nversion = \"0.4.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bd283d9651eeda4b2a83a43c1c91b266c40fd76ecd39a50a8c630ae69dc72891\"\ndependencies = [\n \"getrandom\",\n \"libredox\",\n \"thiserror\",\n]\n\n[[package]]\nname = \"regex\"\nversion = \"1.10.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c117dbdfde9c8308975b6a18d71f3f385c89461f7b3fb054288ecf2a2058ba4c\"\ndependencies = [\n \"aho-corasick\",\n \"memchr\",\n \"regex-automata\",\n \"regex-syntax\",\n]\n\n[[package]]\nname = \"regex-automata\"\nversion = \"0.4.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"86b83b8b9847f9bf95ef68afb0b8e6cdb80f498442f5179a29fad448fcc1eaea\"\ndependencies = [\n \"aho-corasick\",\n \"memchr\",\n \"regex-syntax\",\n]\n\n[[package]]\nname = \"regex-syntax\"\nversion = \"0.8.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"adad44e29e4c806119491a7f06f03de4d1af22c3a680dd47f1e6e179439d1f56\"\n\n[[package]]\nname = \"rustc-demangle\"\nversion = \"0.1.23\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d626bb9dae77e28219937af045c257c28bfd3f69333c512553507f5f9798cb76\"\n\n[[package]]\nname = \"rustc_version\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bfa0f585226d2e68097d4f95d113b15b83a82e819ab25717ec0590d9584ef366\"\ndependencies = [\n \"semver\",\n]\n\n[[package]]\nname = \"rustix\"\nversion = \"0.38.34\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"70dc5ec042f7a43c4a73241207cecc9873a06d45debb38b329f8541d85c2730f\"\ndependencies = [\n \"bitflags 2.5.0\",\n \"errno\",\n \"libc\",\n \"linux-raw-sys\",\n \"windows-sys\",\n]\n\n[[package]]\nname = \"ryu\"\nversion = \"1.0.17\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e86697c916019a8588c99b5fac3cead74ec0b4b819707a682fd4d23fa0ce1ba1\"\n\n[[package]]\nname = \"same-file\"\nversion = \"1.0.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"93fc1dc3aaa9bfed95e02e6eadabb4baf7e3078b0bd1b4d7b6b0b68378900502\"\ndependencies = [\n \"winapi-util\",\n]\n\n[[package]]\nname = \"semver\"\nversion = \"1.0.22\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"92d43fe69e652f3df9bdc2b85b2854a0825b86e4fb76bc44d945137d053639ca\"\n\n[[package]]\nname = \"serde\"\nversion = \"1.0.199\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0c9f6e76df036c77cd94996771fb40db98187f096dd0b9af39c6c6e452ba966a\"\ndependencies = [\n \"serde_derive\",\n]\n\n[[package]]\nname = \"serde_derive\"\nversion = \"1.0.199\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"11bd257a6541e141e42ca6d24ae26f7714887b47e89aa739099104c7e4d3b7fc\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"serde_ignored\"\nversion = \"0.1.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a8e319a36d1b52126a0d608f24e93b2d81297091818cd70625fcf50a15d84ddf\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"serde_json\"\nversion = \"1.0.116\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3e17db7126d17feb94eb3fad46bf1a96b034e8aacbc2e775fe81505f8b0b2813\"\ndependencies = [\n \"itoa\",\n \"ryu\",\n \"serde\",\n]\n\n[[package]]\nname = \"serde_spanned\"\nversion = \"0.6.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"eb3622f419d1296904700073ea6cc23ad690adbd66f13ea683df73298736f0c1\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"sharded-slab\"\nversion = \"0.1.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f40ca3c46823713e0d4209592e8d6e826aa57e928f09752619fc696c499637f6\"\ndependencies = [\n \"lazy_static\",\n]\n\n[[package]]\nname = \"shell-escape\"\nversion = \"0.1.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"45bb67a18fa91266cc7807181f62f9178a6873bfad7dc788c42e6430db40184f\"\n\n[[package]]\nname = \"shell-words\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"24188a676b6ae68c3b2cb3a01be17fbf7240ce009799bb56d5b1409051e78fde\"\n\n[[package]]\nname = \"signal-hook\"\nversion = \"0.3.17\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8621587d4798caf8eb44879d42e56b9a93ea5dcd315a6487c357130095b62801\"\ndependencies = [\n \"libc\",\n \"signal-hook-registry\",\n]\n\n[[package]]\nname = \"signal-hook-registry\"\nversion = \"1.4.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a9e9e0b4211b72e7b8b6e85c807d36c212bdb33ea8587f7569562a84df5465b1\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"strsim\"\nversion = \"0.11.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7da8b5736845d9f2fcb837ea5d9e2628564b3b043a70948a3f0b778838c5fb4f\"\n\n[[package]]\nname = \"supports-color\"\nversion = \"1.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8ba6faf2ca7ee42fdd458f4347ae0a9bd6bcc445ad7cb57ad82b383f18870d6f\"\ndependencies = [\n \"atty\",\n \"is_ci\",\n]\n\n[[package]]\nname = \"syn\"\nversion = \"2.0.60\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"909518bc7b1c9b779f1bbf07f2929d35af9f0f37e47c6e9ef7f9dddc1e1821f3\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"tempfile\"\nversion = \"3.10.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"85b77fafb263dd9d05cbeac119526425676db3784113aa9295c88498cbf8bff1\"\ndependencies = [\n \"cfg-if\",\n \"fastrand\",\n \"rustix\",\n \"windows-sys\",\n]\n\n[[package]]\nname = \"thiserror\"\nversion = \"1.0.59\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f0126ad08bff79f29fc3ae6a55cc72352056dfff61e3ff8bb7129476d44b23aa\"\ndependencies = [\n \"thiserror-impl\",\n]\n\n[[package]]\nname = \"thiserror-impl\"\nversion = \"1.0.59\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d1cd413b5d558b4c5bf3680e324a6fa5014e7b7c067a51e69dbdf47eb7148b66\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"thread_local\"\nversion = \"1.1.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8b9ef9bad013ada3808854ceac7b46812a6465ba368859a37e2100283d2d719c\"\ndependencies = [\n \"cfg-if\",\n \"once_cell\",\n]\n\n[[package]]\nname = \"toml\"\nversion = \"0.7.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dd79e69d3b627db300ff956027cc6c3798cef26d22526befdfcd12feeb6d2257\"\ndependencies = [\n \"serde\",\n \"serde_spanned\",\n \"toml_datetime\",\n \"toml_edit\",\n]\n\n[[package]]\nname = \"toml_datetime\"\nversion = \"0.6.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3550f4e9685620ac18a50ed434eb3aec30db8ba93b0287467bca5826ea25baf1\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"toml_edit\"\nversion = \"0.19.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1b5bb770da30e5cbfde35a2d7b9b8a2c4b8ef89548a7a6aeab5c9a576e3e7421\"\ndependencies = [\n \"indexmap\",\n \"serde\",\n \"serde_spanned\",\n \"toml_datetime\",\n \"winnow\",\n]\n\n[[package]]\nname = \"tracing\"\nversion = \"0.1.40\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c3523ab5a71916ccf420eebdf5521fcef02141234bbc0b8a49f2fdc4544364ef\"\ndependencies = [\n \"pin-project-lite\",\n \"tracing-core\",\n]\n\n[[package]]\nname = \"tracing-core\"\nversion = \"0.1.32\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c06d3da6113f116aaee68e4d601191614c9053067f9ab7f6edbcb161237daa54\"\ndependencies = [\n \"once_cell\",\n \"valuable\",\n]\n\n[[package]]\nname = \"tracing-error\"\nversion = \"0.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d686ec1c0f384b1277f097b2f279a2ecc11afe8c133c1aabf036a27cb4cd206e\"\ndependencies = [\n \"tracing\",\n \"tracing-subscriber\",\n]\n\n[[package]]\nname = \"tracing-subscriber\"\nversion = \"0.3.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ad0f048c97dbd9faa9b7df56362b8ebcaa52adb06b498c050d2f4e32f90a7a8b\"\ndependencies = [\n \"sharded-slab\",\n \"thread_local\",\n \"tracing-core\",\n]\n\n[[package]]\nname = \"unicode-ident\"\nversion = \"1.0.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3354b9ac3fae1ff6755cb6db53683adb661634f67557942dea4facebec0fee4b\"\n\n[[package]]\nname = \"utf8parse\"\nversion = \"0.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"711b9620af191e0cdc7468a8d14e709c3dcdb115b36f838e601583af800a370a\"\n\n[[package]]\nname = \"valuable\"\nversion = \"0.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"830b7e5d4d90034032940e4ace0d9a9a057e7a45cd94e6c007832e39edb82f6d\"\n\n[[package]]\nname = \"walkdir\"\nversion = \"2.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"29790946404f91d9c5d06f9874efddea1dc06c5efe94541a7d6863108e3a5e4b\"\ndependencies = [\n \"same-file\",\n \"winapi-util\",\n]\n\n[[package]]\nname = \"wasi\"\nversion = \"0.11.0+wasi-snapshot-preview1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9c8d87e72b64a3b4db28d11ce29237c246188f4f51057d65a7eab63b7987e423\"\n\n[[package]]\nname = \"wasm-bindgen\"\nversion = \"0.2.92\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4be2531df63900aeb2bca0daaaddec08491ee64ceecbee5076636a3b026795a8\"\ndependencies = [\n \"cfg-if\",\n \"wasm-bindgen-macro\",\n]\n\n[[package]]\nname = \"wasm-bindgen-backend\"\nversion = \"0.2.92\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"614d787b966d3989fa7bb98a654e369c762374fd3213d212cfc0251257e747da\"\ndependencies = [\n \"bumpalo\",\n \"log\",\n \"once_cell\",\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n \"wasm-bindgen-shared\",\n]\n\n[[package]]\nname = \"wasm-bindgen-macro\"\nversion = \"0.2.92\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a1f8823de937b71b9460c0c34e25f3da88250760bec0ebac694b49997550d726\"\ndependencies = [\n \"quote\",\n \"wasm-bindgen-macro-support\",\n]\n\n[[package]]\nname = \"wasm-bindgen-macro-support\"\nversion = \"0.2.92\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e94f17b526d0a461a191c78ea52bbce64071ed5c04c9ffe424dcb38f74171bb7\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n \"wasm-bindgen-backend\",\n \"wasm-bindgen-shared\",\n]\n\n[[package]]\nname = \"wasm-bindgen-shared\"\nversion = \"0.2.92\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"af190c94f2773fdb3729c55b007a722abb5384da03bc0986df4c289bf5567e96\"\n\n[[package]]\nname = \"which\"\nversion = \"4.4.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"87ba24419a2078cd2b0f2ede2691b6c66d8e47836da3b6db8265ebad47afbfc7\"\ndependencies = [\n \"either\",\n \"home\",\n \"once_cell\",\n \"rustix\",\n]\n\n[[package]]\nname = \"wildmatch\"\nversion = \"2.3.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"939e59c1bc731542357fdaad98b209ef78c8743d652bb61439d16b16a79eb025\"\n\n[[package]]\nname = \"winapi\"\nversion = \"0.3.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5c839a674fcd7a98952e593242ea400abe93992746761e38641405d28b00f419\"\ndependencies = [\n \"winapi-i686-pc-windows-gnu\",\n \"winapi-x86_64-pc-windows-gnu\",\n]\n\n[[package]]\nname = \"winapi-i686-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ac3b87c63620426dd9b991e5ce0329eff545bccbbb34f3be09ff6fb6ab51b7b6\"\n\n[[package]]\nname = \"winapi-util\"\nversion = \"0.1.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4d4cc384e1e73b93bafa6fb4f1df8c41695c8a91cf9c4c64358067d15a7b6c6b\"\ndependencies = [\n \"windows-sys\",\n]\n\n[[package]]\nname = \"winapi-x86_64-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"712e227841d057c1ee1cd2fb22fa7e5a5461ae8e48fa2ca79ec42cfc1931183f\"\n\n[[package]]\nname = \"windows-core\"\nversion = \"0.52.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"33ab640c8d7e35bf8ba19b884ba838ceb4fba93a4e8c65a9059d08afcfc683d9\"\ndependencies = [\n \"windows-targets\",\n]\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.52.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"282be5f36a8ce781fad8c8ae18fa3f9beff57ec1b52cb3de0789201425d9a33d\"\ndependencies = [\n \"windows-targets\",\n]\n\n[[package]]\nname = \"windows-targets\"\nversion = \"0.52.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6f0713a46559409d202e70e28227288446bf7841d3211583a4b53e3f6d96e7eb\"\ndependencies = [\n \"windows_aarch64_gnullvm\",\n \"windows_aarch64_msvc\",\n \"windows_i686_gnu\",\n \"windows_i686_gnullvm\",\n \"windows_i686_msvc\",\n \"windows_x86_64_gnu\",\n \"windows_x86_64_gnullvm\",\n \"windows_x86_64_msvc\",\n]\n\n[[package]]\nname = \"windows_aarch64_gnullvm\"\nversion = \"0.52.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7088eed71e8b8dda258ecc8bac5fb1153c5cffaf2578fc8ff5d61e23578d3263\"\n\n[[package]]\nname = \"windows_aarch64_msvc\"\nversion = \"0.52.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9985fd1504e250c615ca5f281c3f7a6da76213ebd5ccc9561496568a2752afb6\"\n\n[[package]]\nname = \"windows_i686_gnu\"\nversion = \"0.52.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"88ba073cf16d5372720ec942a8ccbf61626074c6d4dd2e745299726ce8b89670\"\n\n[[package]]\nname = \"windows_i686_gnullvm\"\nversion = \"0.52.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"87f4261229030a858f36b459e748ae97545d6f1ec60e5e0d6a3d32e0dc232ee9\"\n\n[[package]]\nname = \"windows_i686_msvc\"\nversion = \"0.52.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"db3c2bf3d13d5b658be73463284eaf12830ac9a26a90c717b7f771dfe97487bf\"\n\n[[package]]\nname = \"windows_x86_64_gnu\"\nversion = \"0.52.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4e4246f76bdeff09eb48875a0fd3e2af6aada79d409d33011886d3e1581517d9\"\n\n[[package]]\nname = \"windows_x86_64_gnullvm\"\nversion = \"0.52.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"852298e482cd67c356ddd9570386e2862b5673c85bd5f88df9ab6802b334c596\"\n\n[[package]]\nname = \"windows_x86_64_msvc\"\nversion = \"0.52.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bec47e5bfd1bff0eeaf6d8b485cc1074891a197ab4225d504cb7a1ab88b02bf0\"\n\n[[package]]\nname = \"winnow\"\nversion = \"0.5.40\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f593a95398737aeed53e489c785df13f3618e41dbcd6718c6addbf1395aa6876\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"xtask\"\nversion = \"0.0.0-dev.0\"\ndependencies = [\n \"chrono\",\n \"clap\",\n \"color-eyre\",\n \"cross\",\n \"eyre\",\n \"once_cell\",\n \"semver\",\n \"serde\",\n \"serde_json\",\n \"shell-words\",\n \"toml\",\n \"walkdir\",\n \"which\",\n \"wildmatch\",\n]\n"
        },
        {
          "name": "Cargo.toml",
          "type": "blob",
          "size": 2.544921875,
          "content": "[package]\nbuild = \"src/build.rs\"\ndescription = \"Zero setup cross compilation and cross testing\"\ndocumentation = \"https://github.com/cross-rs/cross\"\nkeywords = [\"cross\", \"compilation\", \"testing\", \"tool\"]\nlicense = \"MIT OR Apache-2.0\"\nname = \"cross\"\nrepository = \"https://github.com/cross-rs/cross\"\nversion = \"0.2.5\"\nedition = \"2021\"\ninclude = [\n  \"src/**/*\",\n  \"docs/*.md\",\n  \"Cargo.toml\",\n  \"Cargo.lock\",\n  \"LICENSE*\",\n  \"README.md\",\n  \"assets/*\",\n]\nrust-version = \"1.77.2\"\n\n[features]\ndefault = []\ndev = []\n\n[workspace]\nmembers = [\"xtask\"]\n\n[dependencies]\nis-terminal = \"0.4.2\"\nclap = { version = \"4.1.4\", features = [\"derive\"] }\ncolor-eyre = { version = \"0.6.2\", default-features = false, features = [\"track-caller\"] }\neyre = \"0.6.8\"\nthiserror = \"1.0.38\"\nhome = \"0.5.4\"\nrustc_version = \"0.4.0\"\ntoml = \"0.7.0\"\nwhich = { version = \"4.4.0\", default-features = false }\nshell-escape = \"0.1.5\"\nserde = { version = \"1.0.152\", features = [\"derive\"] }\nserde_json = { version = \"1.0.91\", features = [\"raw_value\"] }\nserde_ignored = \"0.1.7\"\nshell-words = \"1.1.0\"\nconst-sha1 = \"0.2.0\"\nsignal-hook = { version = \"0.3.15\" }\ndirectories = \"4.0.1\"\nwalkdir = { version = \"2.3.2\", optional = true }\ntempfile = \"3.3.0\"\nowo-colors = { version = \"3.5.0\", features = [\"supports-colors\"] }\nsemver = \"1.0.16\"\nis_ci = \"1.1.1\"\n\n[target.'cfg(not(windows))'.dependencies]\nnix = { version = \"0.26.2\", default-features = false, features = [\"user\"] }\nlibc = \"0.2.139\"\n\n[target.'cfg(windows)'.dependencies]\nwinapi = { version = \"0.3.9\", features = [\"winbase\"] }\ndunce = \"1.0.3\"\n\n[profile.release]\nlto = true\n\n[dev-dependencies]\nregex = \"1.7.1\"\nonce_cell = \"1.17.0\"\nignore = \"0.4.20\"\n\n[package.metadata.release]\npush = false\npublish = false\ntag = false\nconsolidate-commits = false\npre-release-hook = [\"cargo\", \"xtask\", \"changelog\", \"build\", \"--release\", \"{{version}}\"]\npre-release-commit-message = \"release version {{version}}\"\n\n[[package.metadata.release.pre-release-replacements]]\nfile = \"CHANGELOG.md\"\nsearch = \"\\\\.\\\\.\\\\.HEAD\"\nreplace = \"...v{{version}}\"\nexactly = 1\n\n[[package.metadata.release.pre-release-replacements]]\nfile = \"CHANGELOG.md\"\nsearch = \"<!-- next-url -->\"\nreplace = \"<!-- next-url -->\\n\\n[Unreleased]: https://github.com/cross-rs/{{crate_name}}/compare/v{{version}}...HEAD\"\nexactly = 1\n\n[[package.metadata.release.pre-release-replacements]]\nfile = \"docs/config_file.md\"\nsearch = \"(# Translates to `.*?:).*?(-centos`)\"\nreplace = \"${1}{{version}}$2\"\nexactly = 1\n\n[package.metadata.binstall]\npkg-url = \"{ repo }/releases/download/v{ version }/{ name }-{ target }.tar.gz\"\nbin-dir = \"{ bin }{ binary-ext }\"\npkg-fmt = \"tgz\"\n"
        },
        {
          "name": "LICENSE-APACHE",
          "type": "blob",
          "size": 9.4951171875,
          "content": "                              Apache License\n                        Version 2.0, January 2004\n                     http://www.apache.org/licenses/\n\nTERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n1. Definitions.\n\n   \"License\" shall mean the terms and conditions for use, reproduction,\n   and distribution as defined by Sections 1 through 9 of this document.\n\n   \"Licensor\" shall mean the copyright owner or entity authorized by\n   the copyright owner that is granting the License.\n\n   \"Legal Entity\" shall mean the union of the acting entity and all\n   other entities that control, are controlled by, or are under common\n   control with that entity. For the purposes of this definition,\n   \"control\" means (i) the power, direct or indirect, to cause the\n   direction or management of such entity, whether by contract or\n   otherwise, or (ii) ownership of fifty percent (50%) or more of the\n   outstanding shares, or (iii) beneficial ownership of such entity.\n\n   \"You\" (or \"Your\") shall mean an individual or Legal Entity\n   exercising permissions granted by this License.\n\n   \"Source\" form shall mean the preferred form for making modifications,\n   including but not limited to software source code, documentation\n   source, and configuration files.\n\n   \"Object\" form shall mean any form resulting from mechanical\n   transformation or translation of a Source form, including but\n   not limited to compiled object code, generated documentation,\n   and conversions to other media types.\n\n   \"Work\" shall mean the work of authorship, whether in Source or\n   Object form, made available under the License, as indicated by a\n   copyright notice that is included in or attached to the work\n   (an example is provided in the Appendix below).\n\n   \"Derivative Works\" shall mean any work, whether in Source or Object\n   form, that is based on (or derived from) the Work and for which the\n   editorial revisions, annotations, elaborations, or other modifications\n   represent, as a whole, an original work of authorship. For the purposes\n   of this License, Derivative Works shall not include works that remain\n   separable from, or merely link (or bind by name) to the interfaces of,\n   the Work and Derivative Works thereof.\n\n   \"Contribution\" shall mean any work of authorship, including\n   the original version of the Work and any modifications or additions\n   to that Work or Derivative Works thereof, that is intentionally\n   submitted to Licensor for inclusion in the Work by the copyright owner\n   or by an individual or Legal Entity authorized to submit on behalf of\n   the copyright owner. For the purposes of this definition, \"submitted\"\n   means any form of electronic, verbal, or written communication sent\n   to the Licensor or its representatives, including but not limited to\n   communication on electronic mailing lists, source code control systems,\n   and issue tracking systems that are managed by, or on behalf of, the\n   Licensor for the purpose of discussing and improving the Work, but\n   excluding communication that is conspicuously marked or otherwise\n   designated in writing by the copyright owner as \"Not a Contribution.\"\n\n   \"Contributor\" shall mean Licensor and any individual or Legal Entity\n   on behalf of whom a Contribution has been received by Licensor and\n   subsequently incorporated within the Work.\n\n2. Grant of Copyright License. Subject to the terms and conditions of\n   this License, each Contributor hereby grants to You a perpetual,\n   worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n   copyright license to reproduce, prepare Derivative Works of,\n   publicly display, publicly perform, sublicense, and distribute the\n   Work and such Derivative Works in Source or Object form.\n\n3. Grant of Patent License. Subject to the terms and conditions of\n   this License, each Contributor hereby grants to You a perpetual,\n   worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n   (except as stated in this section) patent license to make, have made,\n   use, offer to sell, sell, import, and otherwise transfer the Work,\n   where such license applies only to those patent claims licensable\n   by such Contributor that are necessarily infringed by their\n   Contribution(s) alone or by combination of their Contribution(s)\n   with the Work to which such Contribution(s) was submitted. If You\n   institute patent litigation against any entity (including a\n   cross-claim or counterclaim in a lawsuit) alleging that the Work\n   or a Contribution incorporated within the Work constitutes direct\n   or contributory patent infringement, then any patent licenses\n   granted to You under this License for that Work shall terminate\n   as of the date such litigation is filed.\n\n4. Redistribution. You may reproduce and distribute copies of the\n   Work or Derivative Works thereof in any medium, with or without\n   modifications, and in Source or Object form, provided that You\n   meet the following conditions:\n\n   (a) You must give any other recipients of the Work or\n       Derivative Works a copy of this License; and\n\n   (b) You must cause any modified files to carry prominent notices\n       stating that You changed the files; and\n\n   (c) You must retain, in the Source form of any Derivative Works\n       that You distribute, all copyright, patent, trademark, and\n       attribution notices from the Source form of the Work,\n       excluding those notices that do not pertain to any part of\n       the Derivative Works; and\n\n   (d) If the Work includes a \"NOTICE\" text file as part of its\n       distribution, then any Derivative Works that You distribute must\n       include a readable copy of the attribution notices contained\n       within such NOTICE file, excluding those notices that do not\n       pertain to any part of the Derivative Works, in at least one\n       of the following places: within a NOTICE text file distributed\n       as part of the Derivative Works; within the Source form or\n       documentation, if provided along with the Derivative Works; or,\n       within a display generated by the Derivative Works, if and\n       wherever such third-party notices normally appear. The contents\n       of the NOTICE file are for informational purposes only and\n       do not modify the License. You may add Your own attribution\n       notices within Derivative Works that You distribute, alongside\n       or as an addendum to the NOTICE text from the Work, provided\n       that such additional attribution notices cannot be construed\n       as modifying the License.\n\n   You may add Your own copyright statement to Your modifications and\n   may provide additional or different license terms and conditions\n   for use, reproduction, or distribution of Your modifications, or\n   for any such Derivative Works as a whole, provided Your use,\n   reproduction, and distribution of the Work otherwise complies with\n   the conditions stated in this License.\n\n5. Submission of Contributions. Unless You explicitly state otherwise,\n   any Contribution intentionally submitted for inclusion in the Work\n   by You to the Licensor shall be under the terms and conditions of\n   this License, without any additional terms or conditions.\n   Notwithstanding the above, nothing herein shall supersede or modify\n   the terms of any separate license agreement you may have executed\n   with Licensor regarding such Contributions.\n\n6. Trademarks. This License does not grant permission to use the trade\n   names, trademarks, service marks, or product names of the Licensor,\n   except as required for reasonable and customary use in describing the\n   origin of the Work and reproducing the content of the NOTICE file.\n\n7. Disclaimer of Warranty. Unless required by applicable law or\n   agreed to in writing, Licensor provides the Work (and each\n   Contributor provides its Contributions) on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n   implied, including, without limitation, any warranties or conditions\n   of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n   PARTICULAR PURPOSE. You are solely responsible for determining the\n   appropriateness of using or redistributing the Work and assume any\n   risks associated with Your exercise of permissions under this License.\n\n8. Limitation of Liability. In no event and under no legal theory,\n   whether in tort (including negligence), contract, or otherwise,\n   unless required by applicable law (such as deliberate and grossly\n   negligent acts) or agreed to in writing, shall any Contributor be\n   liable to You for damages, including any direct, indirect, special,\n   incidental, or consequential damages of any character arising as a\n   result of this License or out of the use or inability to use the\n   Work (including but not limited to damages for loss of goodwill,\n   work stoppage, computer failure or malfunction, or any and all\n   other commercial damages or losses), even if such Contributor\n   has been advised of the possibility of such damages.\n\n9. Accepting Warranty or Additional Liability. While redistributing\n   the Work or Derivative Works thereof, You may choose to offer,\n   and charge a fee for, acceptance of support, warranty, indemnity,\n   or other liability obligations and/or rights consistent with this\n   License. However, in accepting such obligations, You may act only\n   on Your own behalf and on Your sole responsibility, not on behalf\n   of any other Contributor, and only if You agree to indemnify,\n   defend, and hold each Contributor harmless for any liability\n   incurred by, or claims asserted against, such Contributor by reason\n   of your accepting any such warranty or additional liability.\n\nEND OF TERMS AND CONDITIONS\n"
        },
        {
          "name": "LICENSE-MIT",
          "type": "blob",
          "size": 1.08203125,
          "content": "Copyright (c) 2017-2022 by the respective authors\nCopyright (c) 2016 Jorge Aparicio\n\nPermission is hereby granted, free of charge, to any\nperson obtaining a copy of this software and associated\ndocumentation files (the \"Software\"), to deal in the\nSoftware without restriction, including without\nlimitation the rights to use, copy, modify, merge,\npublish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software\nis furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice\nshall be included in all copies or substantial portions\nof the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF\nANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED\nTO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\nPARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT\nSHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR\nIN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\nDEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 15.8203125,
          "content": "[![crates.io](https://img.shields.io/crates/v/cross.svg)](https://crates.io/crates/cross)\n[![crates.io](https://img.shields.io/crates/d/cross.svg)](https://crates.io/crates/cross)\n[![CI](https://github.com/cross-rs/cross/actions/workflows/ci.yml/badge.svg?query=branch%3Amain)](https://github.com/cross-rs/cross/actions/workflows/ci.yml?query=branch)\n[![Matrix](https://img.shields.io/matrix/cross-rs:matrix.org)](https://matrix.to/#/#cross-rs:matrix.org)\n\n# `cross`\n\n> “Zero setup” cross compilation and “cross testing” of Rust crates\n\nThis project is developed and maintained by the [cross-rs] team.\nIt was previously maintained by the Rust Embedded Working Group Tools team.\nNew contributors are welcome! Please join our [Matrix room] and say hi.\n\n<p align=\"center\">\n<img\n  alt=\"`cross test`ing a crate for the aarch64-unknown-linux-gnu target\"\n  src=\"assets/cross-test.png\"\n  title=\"`cross test`ing a crate for the aarch64-unknown-linux-gnu target\"\n>\n<br>\n<em>`cross test`ing a crate for the aarch64-unknown-linux-gnu target</em>\n</p>\n\n## Features\n\n- `cross` will provide all the ingredients needed for cross compilation without\n  touching your system installation.\n\n- `cross` provides an environment, cross toolchain and cross compiled libraries,\n  that produces the most portable binaries.\n\n- “cross testing”, `cross` can test crates for architectures other than i686 and\n  x86_64.\n\n- The stable, beta and nightly channels are supported.\n\n## Dependencies\n\nSee our [Getting Started](./docs/getting-started.md) guide for detailed\ninstallation instructions.\n\n- [rustup](https://rustup.rs/)\n- A Linux kernel with [binfmt_misc] support is required for cross testing.\n\nOne of these container engines is required. If both are installed, `cross` will\ndefault to `docker`.\n\n- [Docker]. Note that on Linux non-sudo users need to be in the `docker` group or use rootless docker.\n  Read the container engine [install guide][docker_install] for the required installation and post-installation steps. Requires version 20.10 (API 1.40) or later.\n- [Podman]. Requires version 3.4.0 or later.\n\n## Installation\n\n```sh\ncargo install cross --git https://github.com/cross-rs/cross\n```\n\nIt's also possible to directly download the pre-compiled [release\nbinaries](https://github.com/cross-rs/cross/releases) or use\n[cargo-binstall](https://github.com/cargo-bins/cargo-binstall).\n\n## Usage\n\n`cross` has the exact same CLI as [Cargo](https://github.com/rust-lang/cargo)\nbut relies on Docker or Podman. For Docker, you'll have to start\nthe daemon before you can use it.\n\n```\n# (ONCE PER BOOT, on Linux)\n# Start the Docker daemon, if it's not already running using systemd\n# on WSL2 and other systems using SysVinit, use `sudo service docker start`.\n$ sudo systemctl start docker\n\n# MAGIC! This Just Works\n$ cross build --target aarch64-unknown-linux-gnu\n\n# EVEN MORE MAGICAL! This also Just Works\n$ cross test --target mips64-unknown-linux-gnuabi64\n\n# Obviously, this also Just Works\n$ cross rustc --target powerpc-unknown-linux-gnu --release -- -C lto\n```\n\nAdditional documentation can be found on the\n[wiki](https://github.com/cross-rs/cross/wiki) or the `docs/` subfolder.\n\n## Configuration\n\n### Configuring cross behavior\n\nYou have four options to configure `cross`. All of these options use the TOML\nformat for configuration and the possible configuration values are documented\n[here][config_file].\n\n#### Option 1: Configuring `cross` directly in your `Cargo.toml`\n\nYou can directly set [configuration values][config_file] in your `Cargo.toml`\nfile, under the `[workspace.metadata.cross]` table, i.e. key prefix. An example\nconfig snippet would look like this:\n\n```toml,cargo\n[workspace.metadata.cross.target.aarch64-unknown-linux-gnu]\n# Install libssl-dev:arm64, see <https://github.com/cross-rs/cross/blob/main/docs/custom_images.md#adding-dependencies-to-existing-images>\npre-build = [\n    \"dpkg --add-architecture $CROSS_DEB_ARCH\",\n    \"apt-get update && apt-get --assume-yes install libssl-dev:$CROSS_DEB_ARCH\"\n]\n[workspace.metadata.cross.target.armv7-unknown-linux-gnueabi]\nimage = \"my/image:latest\"\n[workspace.metadata.cross.build]\nenv.volumes = [\"A_DIRECTORY=/path/to/volume\"]\n```\n\n#### Option 2: Configuring `cross` via a `Cross.toml` file\n\nYou can put your [configuration][config_file] inside a `Cross.toml` file\nin your project root directory.\n\n#### Option 3: Using `CROSS_CONFIG` to specify the location of your configuration\n\nBy setting the `CROSS_CONFIG` environment variable, you can tell `cross` where\nit should search for the config file. This way you are not limited to a\n`Cross.toml` file in the project root.\n\n#### Option 4: Configuring `cross` through environment variables\n\nBesides the TOML-based configuration files, config can be passed through\n[environment variables][docs_env_vars], too.\n\n\n### Docker in Docker\n\nWhen running `cross` from inside a container, `cross` needs access to\nthe hosts docker daemon itself. This is normally achieved by mounting the\ndocker daemons socket `/var/run/docker.sock`. For example:\n\n```\n$ docker run -v /var/run/docker.sock:/var/run/docker.sock -v .:/project \\\n  -w /project my/development-image:tag cross build --target mips64-unknown-linux-gnuabi64\n```\n\nThe image running `cross` requires the rust development tools to be installed.\n\nWith this setup `cross` must find and mount the correct host paths into the\ncontainer used for cross compilation. This includes the original project\ndirectory as well as the root path of the parent container to give access to\nthe rust build tools.\n\nTo inform `cross` that it is running inside a container set\n`CROSS_CONTAINER_IN_CONTAINER=true`.\n\nA development or CI container can be created like this:\n\n```\nFROM rust:1\n\n# set CROSS_CONTAINER_IN_CONTAINER to inform `cross` that it is executed from within a container\nENV CROSS_CONTAINER_IN_CONTAINER=true\n\n# install `cross`\nRUN cargo install cross\n\n...\n\n```\n\n**Limitations**: Finding the mount point for the containers root directory is\ncurrently only available for the overlayfs2 storage driver. In order to access\nthe parent containers rust setup, the child container mounts the parents\noverlayfs. The parent must not be stopped before the child container, as the\noverlayfs can not be unmounted correctly by Docker if the child container still\naccesses it.\n\n\n### Explicitly choose the container engine\n\nBy default, `cross` tries to use [Docker] or [Podman], in that order.\nIf you want to choose a container engine explicitly, you can set the\nbinary name (or path) using the `CROSS_CONTAINER_ENGINE`\nenvironment variable.\n\nFor example in case you want use [Podman], you can set `CROSS_CONTAINER_ENGINE=podman`.\n\n\n## Supported targets\n\nA target is considered as “supported” if `cross` can cross compile a\n“non-trivial” (binary) crate, usually Cargo, for that target.\n\nTesting support (`cross test`) is more complicated. It relies on [QEMU]\nemulation, so testing may fail due to QEMU bugs rather than bugs in your crate.\nThat said, a target has a ✓ in `test` column of the table below if it can run\nthe [`compiler-builtins`] test suite.\n\n[QEMU]: https://www.qemu.org/\n[`compiler-builtins`]: https://github.com/rust-lang-nursery/compiler-builtins\n\nAlso, testing is very slow. `cross test` runs units tests *sequentially* because\nQEMU gets upset when you spawn multiple threads. This means that, if one of your\nunit tests spawns threads, then it's more likely to fail or, worst, never\nterminate.\n\n| Target                                 |  libc  |  GCC   | C++ | QEMU  | `test` |\n|----------------------------------------|-------:|-------:|:---:|------:|:------:|\n| `aarch64-linux-android` [1]            | 9.0.8  | 9.0.8  | ✓   | 6.1.0 |   ✓    |\n| `aarch64-unknown-linux-gnu`            | 2.31   | 9.4.0  | ✓   | 6.1.0 |   ✓    |\n| `aarch64-unknown-linux-gnu:centos` [7] | 2.17   | 4.8.5  |     | 4.2.1 |   ✓    |\n| `aarch64-unknown-linux-musl`           | 1.2.3  | 9.2.0  | ✓   | 6.1.0 |   ✓    |\n| `arm-linux-androideabi` [1]            | 9.0.8  | 9.0.8  | ✓   | 6.1.0 |   ✓    |\n| `arm-unknown-linux-gnueabi`            | 2.31   | 9.4.0  | ✓   | 6.1.0 |   ✓    |\n| `arm-unknown-linux-gnueabihf`          | 2.31   | 8.5.0  | ✓   | 6.1.0 |   ✓    |\n| `arm-unknown-linux-musleabi`           | 1.2.3  | 9.2.0  | ✓   | 6.1.0 |   ✓    |\n| `arm-unknown-linux-musleabihf`         | 1.2.3  | 9.2.0  | ✓   | 6.1.0 |   ✓    |\n| `armv5te-unknown-linux-gnueabi`        | 2.31   | 9.4.0  | ✓   | 6.1.0 |   ✓    |\n| `armv5te-unknown-linux-musleabi`       | 1.2.3  | 9.2.0  | ✓   | 6.1.0 |   ✓    |\n| `armv7-linux-androideabi` [1]          | 9.0.8  | 9.0.8  | ✓   | 6.1.0 |   ✓    |\n| `armv7-unknown-linux-gnueabi`          | 2.31   | 9.4.0  | ✓   | 6.1.0 |   ✓    |\n| `armv7-unknown-linux-gnueabihf`        | 2.31   | 9.4.0  | ✓   | 6.1.0 |   ✓    |\n| `armv7-unknown-linux-musleabi`         | 1.2.3  | 9.2.0  | ✓   | 6.1.0 |   ✓    |\n| `armv7-unknown-linux-musleabihf`       | 1.2.3  | 9.2.0  | ✓   | 6.1.0 |   ✓    |\n| `i586-unknown-linux-gnu`               | 2.31   | 9.4.0  | ✓   | N/A   |   ✓    |\n| `i586-unknown-linux-musl`              | 1.2.3  | 9.2.0  | ✓   | N/A   |   ✓    |\n| `i686-unknown-freebsd`                 | 1.5    | 6.4.0  | ✓   | N/A   |        |\n| `i686-linux-android` [1]               | 9.0.8  | 9.0.8  | ✓   | 6.1.0 |   ✓    |\n| `i686-pc-windows-gnu`                  | N/A    | 9.4    | ✓   | N/A   |   ✓    |\n| `i686-unknown-linux-gnu`               | 2.31   | 9.4.0  | ✓   | 6.1.0 |   ✓    |\n| `loongarch64-unknown-linux-gnu`        | 2.36   | 14.2.0 | ✓   | 8.2.2 |   ✓    |\n| `loongarch64-unknown-linux-musl`       | 1.2.5  | 14.2.0 | ✓   | 8.2.2 |   ✓    |\n| `mips-unknown-linux-gnu`               | 2.30   | 9.4.0  | ✓   | 6.1.0 |   ✓    |\n| `mips-unknown-linux-musl`              | 1.2.3  | 9.2.0  | ✓   | 6.1.0 |   ✓    |\n| `mips64-unknown-linux-gnuabi64`        | 2.30   | 9.4.0  | ✓   | 6.1.0 |   ✓    |\n| `mips64-unknown-linux-muslabi64`       | 1.2.3  | 9.2.0  | ✓   | 6.1.0 |   ✓    |\n| `mips64el-unknown-linux-gnuabi64`      | 2.30   | 9.4.0  | ✓   | 6.1.0 |   ✓    |\n| `mips64el-unknown-linux-muslabi64`     | 1.2.3  | 9.2.0  | ✓   | 6.1.0 |   ✓    |\n| `mipsel-unknown-linux-gnu`             | 2.30   | 9.4.0  | ✓   | 6.1.0 |   ✓    |\n| `mipsel-unknown-linux-musl`            | 1.2.3  | 9.2.0  | ✓   | 6.1.0 |   ✓    |\n| `powerpc-unknown-linux-gnu`            | 2.31   | 9.4.0  | ✓   | 6.1.0 |   ✓    |\n| `powerpc64-unknown-linux-gnu`          | 2.31   | 9.4.0  | ✓   | 6.1.0 |   ✓    |\n| `powerpc64le-unknown-linux-gnu`        | 2.31   | 9.4.0  | ✓   | 6.1.0 |   ✓    |\n| `riscv64gc-unknown-linux-gnu`          | 2.35   | 11.4.0 | ✓   | 8.2.2 |   ✓    |\n| `s390x-unknown-linux-gnu`              | 2.31   | 9.4.0  | ✓   | 6.1.0 |   ✓    |\n| `sparc64-unknown-linux-gnu`            | 2.31   | 9.4.0  | ✓   | 6.1.0 |   ✓    |\n| `sparcv9-sun-solaris`                  | 1.22.7 | 8.4.0  | ✓   | N/A   |        |\n| `thumbv6m-none-eabi` [4]               | 3.3.0  | 9.2.1  |     | N/A   |        |\n| `thumbv7em-none-eabi` [4]              | 3.3.0  | 9.2.1  |     | N/A   |        |\n| `thumbv7em-none-eabihf` [4]            | 3.3.0  | 9.2.1  |     | N/A   |        |\n| `thumbv7m-none-eabi` [4]               | 3.3.0  | 9.2.1  |     | N/A   |        |\n| `thumbv7neon-linux-androideabi` [1]    | 9.0.8  | 9.0.8  | ✓   | 6.1.0 |   ✓    |\n| `thumbv7neon-unknown-linux-gnueabihf`  | 2.31   | 9.4.0  | ✓   | N/A   |   ✓    |\n| `thumbv8m.base-none-eabi` [4]          | 3.3.0  | 9.2.1  |     | N/A   |        |\n| `thumbv8m.main-none-eabi` [4]          | 3.3.0  | 9.2.1  |     | N/A   |        |\n| `thumbv8m.main-none-eabihf` [4]        | 3.3.0  | 9.2.1  |     | N/A   |        |\n| `wasm32-unknown-emscripten` [6]        | 3.1.14 | 15.0.0 | ✓   | N/A   |   ✓    |\n| `x86_64-linux-android` [1]             | 9.0.8  | 9.0.8  | ✓   | 6.1.0 |   ✓    |\n| `x86_64-pc-windows-gnu`                | N/A    | 9.3    | ✓   | N/A   |   ✓    |\n| `x86_64-pc-solaris`                    | 1.22.7 | 8.4.0  | ✓   | N/A   |        |\n| `x86_64-unknown-freebsd`               | 1.5    | 6.4.0  | ✓   | N/A   |        |\n| `x86_64-unknown-dragonfly` [2] [3]     | 6.0.1  | 10.3.0 | ✓   | N/A   |        |\n| `x86_64-unknown-illumos`               | 1.20.4 | 8.4.0  | ✓   | N/A   |        |\n| `x86_64-unknown-linux-gnu`             | 2.31   | 9.4.0  | ✓   | 6.1.0 |   ✓    |\n| `x86_64-unknown-linux-gnu:centos` [5]  | 2.17   | 4.8.5  | ✓   | 4.2.1 |   ✓    |\n| `x86_64-unknown-linux-musl`            | 1.2.3  | 9.2.0  | ✓   | N/A   |   ✓    |\n| `x86_64-unknown-netbsd` [3]            | 9.2.0  | 9.4.0  | ✓   | N/A   |        |\n<!--| `asmjs-unknown-emscripten` [7]       | 3.1.14 | 15.0.0  | ✓   | N/A   |   ✓    |-->\n\n[1] libc = bionic; Only works with native tests, that is, tests that do not\n    depends on the Android Runtime. For i686 some tests may fails with the\n    error `assertion failed: signal(libc::SIGPIPE, libc::SIG_IGN) !=\n    libc::SIG_ERR`, see [issue\n    #140](https://github.com/cross-rs/cross/issues/140) for more information.\n\n[2] No `std` component available.\n\n[3] For some \\*BSD and Solaris targets, the libc column indicates the OS\n    release version from which libc was extracted.\n\n[4] libc = newlib\n\n[5] Must change\n    `image = \"ghcr.io/cross-rs/x86_64-unknown-linux-gnu:main-centos\"` in\n    `Cross.toml` for `[target.x86_64-unknown-linux-gnu]` to use the\n    CentOS7-compatible target.\n\n[6] libc = emscripten and GCC = clang\n\n[7] Must change\n    `image = \"ghcr.io/cross-rs/aarch64-unknown-linux-gnu:main-centos\"` in\n    `Cross.toml` for `[target.aarch64-unknown-linux-gnu]` to use the\n    CentOS7-compatible target.\n\n<!--[7] libc = emscripten and GCC = clang. The Docker images for these targets are currently not built automatically\ndue to a [compiler bug](https://github.com/rust-lang/rust/issues/98216), you will have to build them yourself for now.-->\n\nAdditional Dockerfiles for other targets can be found in\n[cross-toolchains](https://github.com/cross-rs/cross-toolchains). These include\nMSVC and Apple Darwin targets, which we cannot ship pre-built images of.\n\n\n## Debugging\n\n### QEMU_STRACE (v0.1.9+)\n\nYou can set the QEMU_STRACE variable when you use `cross run` to get a backtrace\nof system calls from “foreign” (non x86_64) binaries.\n\n```\n$ cargo new --bin hello && cd $_\n\n$ QEMU_STRACE=1 cross run --target aarch64-unknown-linux-gnu\n9 brk(NULL) = 0x0000004000023000\n9 uname(0x4000823128) = 0\n(..)\n9 write(1,0xa06320,14)Hello, world!\n = 14\n9 sigaltstack(0x4000823588,(nil)) = 0\n9 munmap(0x0000004000b16000,16384) = 0\n9 exit_group(0)\n```\n\n## Minimum Supported Rust Version (MSRV)\n\nThis crate is guaranteed to compile on stable Rust 1.77.2 and up. It *might*\ncompile with older versions but that may change in any new patch release.\n\nSome cross-compilation targets require a later Rust version, and using Xargo\nrequires a nightly Rust toolchain.\n\n## License\n\nLicensed under either of\n\n- Apache License, Version 2.0 ([LICENSE-APACHE](LICENSE-APACHE) or\n  http://www.apache.org/licenses/LICENSE-2.0)\n- MIT License ([LICENSE-MIT](LICENSE-MIT) or http://opensource.org/licenses/MIT)\n\nat your option.\n\n### Contribution\n\nUnless you explicitly state otherwise, any contribution intentionally submitted\nfor inclusion in the work by you, as defined in the Apache-2.0 license, shall be\ndual licensed as above, without any additional terms or conditions.\n\n## Code of Conduct\n\nContribution to this crate is organized under the terms of the [Rust Code of\nConduct][CoC], the maintainer of this crate, the [cross-rs] team, promises\nto intervene to uphold that code of conduct.\n\n[CoC]: CODE_OF_CONDUCT.md\n[cross-rs]: https://github.com/cross-rs\n[Docker]: https://www.docker.com\n[Podman]: https://podman.io\n[Matrix room]: https://matrix.to/#/#cross-rs:matrix.org\n[docker_install]: https://github.com/cross-rs/cross/wiki/Getting-Started#installing-a-container-engine\n[binfmt_misc]: https://www.kernel.org/doc/html/latest/admin-guide/binfmt-misc.html\n[config_file]: ./docs/config_file.md\n[docs_env_vars]: ./docs/environment_variables.md\n"
        },
        {
          "name": "assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "ci",
          "type": "tree",
          "content": null
        },
        {
          "name": "clippy.toml",
          "type": "blob",
          "size": 0.2099609375,
          "content": "disallowed-methods = [\n    { path = \"std::path::Path::display\", reason = \"incorrect handling of non-Unicode paths, use path.to_utf8() or debug (`{path:?}`) instead\" },\n]\nallow-unwrap-in-tests = true\nmsrv = \"1.77.2\"\n"
        },
        {
          "name": "crosstool-ng",
          "type": "tree",
          "content": null
        },
        {
          "name": "deny.toml",
          "type": "blob",
          "size": 0.9296875,
          "content": "[graph]\n# only check for the targets we currently publish\ntargets = [\n  { triple = \"x86_64-apple-darwin\" },\n  { triple = \"x86_64-unknown-linux-gnu\" },\n  { triple = \"x86_64-unknown-linux-musl\" },\n  { triple = \"x86_64-pc-windows-msvc\" },\n]\n\n[advisories]\nversion = 2\n# FIXME: remove this if/when clap changes to is-terminal, atty is\n# patched, or we migrated to an MSRV of 1.66.0.\nignore = [\n    \"RUSTSEC-2021-0145\",\n]\n\n[bans]\nmultiple-versions = \"deny\"\ndeny = []\nskip-tree = [\n    { name = \"nix\", version = \"=0.26.4\", depth = 2 },\n]\n\n[sources]\nunknown-registry = \"deny\"\nunknown-git = \"deny\"\nallow-git = []\n\n[licenses]\nversion = 2\n# need this since to suppress errors in case we add crates with these allowed licenses\nunused-allowed-license = \"allow\"\nconfidence-threshold = 0.93\nallow = [\n  \"Apache-2.0\",\n  \"MIT\",\n  \"CC0-1.0\",\n  \"ISC\",\n  \"0BSD\",\n  \"BSD-2-Clause\",\n  \"BSD-3-Clause\",\n  \"Unlicense\",\n  \"Unicode-DFS-2016\",\n]\n\n[licenses.private]\nignore = true\n"
        },
        {
          "name": "docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "rustfmt.yml",
          "type": "blob",
          "size": 0.2392578125,
          "content": "condense_wildcard_suffixes = true\nbrace_style = \"PreferSameLine\"\nfn_single_line = true\nwhere_single_line = true\nuse_field_init_shorthand = true\nreorder_impl_items = true\nedition = \"2021\"\nnewline_style = \"Unix\"\nformat_code_in_doc_comments = true\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "targets.toml",
          "type": "blob",
          "size": 8.7900390625,
          "content": "# This file contains all the \"targets\" cross can be used with by default and is used for generating `src/docker/provided_images.rs` and our images\n# the only required value for a `target` entry is its name in `target.target` and the `os` to use in CI\n#\n# spec is available in `xtask/src/util.rs` on `CiTarget`\n\n[[target]]\ntarget = \"x86_64-apple-darwin\"\nos = \"macos-12\"\nspecial = true\ndeploy = true\n\n[[target]]\ntarget = \"x86_64-unknown-linux-gnu\"\nos = \"ubuntu-latest\"\ncpp = true\ndylib = true\nstd = true\nrun = true\nrunners = \"native qemu-user qemu-system\"\ndeploy = true\n\n[[target]]\ntarget = \"x86_64-unknown-linux-musl\"\nos = \"ubuntu-latest\"\ncpp = true\ndylib = true\nstd = true\nrun = true\nrunners = \"native qemu-user\"\ndeploy = true\n\n[[target]]\ntarget = \"x86_64-pc-windows-msvc\"\nos = \"windows-2019\"\nspecial = true\ndeploy = true\n\n[[target]]\ntarget = \"x86_64-unknown-linux-gnu\"\nsub = \"centos\"\nos = \"ubuntu-latest\"\ncpp = true\ndylib = true\nstd = true\nrun = true\nrunners = \"native qemu-user qemu-system\"\n\n[[target]]\ntarget = \"aarch64-unknown-linux-gnu\"\nos = \"ubuntu-latest\"\ncpp = true\ndylib = true\nstd = true\nrun = true\nrunners = \"qemu-user qemu-system\"\n\n[[target]]\ntarget = \"arm-unknown-linux-gnueabi\"\nos = \"ubuntu-latest\"\ncpp = true\ndylib = true\nstd = true\nrun = true\n\n[[target]]\ntarget = \"arm-unknown-linux-gnueabihf\"\nos = \"ubuntu-latest\"\ncpp = true\ndylib = true\nstd = true\nrun = true\n\n[[target]]\ntarget = \"armv7-unknown-linux-gnueabi\"\nos = \"ubuntu-latest\"\ncpp = true\ndylib = true\nstd = true\nrun = true\nrunners = \"qemu-user\"\n\n[[target]]\ntarget = \"armv7-unknown-linux-gnueabihf\"\nos = \"ubuntu-latest\"\ncpp = true\ndylib = true\nstd = true\nrun = true\nrunners = \"qemu-user qemu-system\"\n\n[[target]]\ntarget = \"thumbv7neon-unknown-linux-gnueabihf\"\nos = \"ubuntu-latest\"\ncpp = true\ndylib = true\nstd = true\nrun = true\nrunners = \"qemu-user qemu-system\"\n\n[[target]]\ntarget = \"i586-unknown-linux-gnu\"\nos = \"ubuntu-latest\"\ncpp = true\ndylib = true\nstd = true\nrun = true\n\n[[target]]\ntarget = \"i686-unknown-linux-gnu\"\nos = \"ubuntu-latest\"\ncpp = true\ndylib = true\nstd = true\nrun = true\nrunners = \"native qemu-user qemu-system\"\n\n[[target]]\ntarget = \"loongarch64-unknown-linux-gnu\"\nos = \"ubuntu-latest\"\ncpp = true\ndylib = true\nstd = true\nrun = true\nrunners = \"qemu-user\"\n\n[[target]]\ntarget = \"loongarch64-unknown-linux-musl\"\nos = \"ubuntu-latest\"\ncpp = true\ndylib = true\nstd = true\nrun = true\nrunners = \"qemu-user\"\n\n[[target]]\ntarget = \"mips-unknown-linux-gnu\"\nos = \"ubuntu-latest\"\ncpp = true\ndylib = true\nstd = true\nrun = true\nrunners = \"qemu-user\"\nbuild-std = true\n\n[[target]]\ntarget = \"mipsel-unknown-linux-gnu\"\nos = \"ubuntu-latest\"\ncpp = true\ndylib = true\nstd = true\nrun = true\nrunners = \"qemu-user qemu-system\"\nbuild-std = true\n\n[[target]]\ntarget = \"mips64-unknown-linux-gnuabi64\"\nos = \"ubuntu-latest\"\ncpp = true\ndylib = true\nstd = true\nrun = true\nbuild-std = true\n\n[[target]]\ntarget = \"mips64el-unknown-linux-gnuabi64\"\nos = \"ubuntu-latest\"\ncpp = true\ndylib = true\nstd = true\nrun = true\nrunners = \"qemu-user qemu-system\"\nbuild-std = true\n\n[[target]]\ndisabled = true # https://github.com/cross-rs/cross/issues/1422\ntarget = \"mips64-unknown-linux-muslabi64\"\nos = \"ubuntu-latest\"\ncpp = true\ndylib = true\nstd = true\nrun = true\nbuild-std = true\n\n[[target]]\ndisabled = true # https://github.com/cross-rs/cross/issues/1422\ntarget = \"mips64el-unknown-linux-muslabi64\"\nos = \"ubuntu-latest\"\n# FIXME: Lacking partial C++ support due to missing compiler builtins.\ncpp = true\nstd = true\nrun = true\nbuild-std = true\n\n[[target]]\ntarget = \"powerpc-unknown-linux-gnu\"\nos = \"ubuntu-latest\"\ncpp = true\ndylib = true\nstd = true\nrun = true\nrunners = \"qemu-user qemu-system\"\n\n[[target]]\ntarget = \"powerpc64-unknown-linux-gnu\"\nos = \"ubuntu-latest\"\ncpp = true\ndylib = true\nstd = true\nrun = true\nrunners = \"qemu-user qemu-system\"\n\n[[target]]\ntarget = \"powerpc64le-unknown-linux-gnu\"\nos = \"ubuntu-latest\"\ncpp = true\ndylib = true\nstd = true\nrun = true\nrunners = \"qemu-user qemu-system\"\n\n[[target]]\ntarget = \"riscv64gc-unknown-linux-gnu\"\nos = \"ubuntu-latest\"\ncpp = true\ndylib = true\nstd = true\nrun = true\nrunners = \"qemu-user qemu-system\"\n\n[[target]]\ntarget = \"s390x-unknown-linux-gnu\"\nos = \"ubuntu-latest\"\ncpp = true\ndylib = true\nstd = true\nrun = true\nrunners = \"qemu-user qemu-system\"\n\n[[target]]\ntarget = \"sparc64-unknown-linux-gnu\"\nos = \"ubuntu-latest\"\ncpp = true\ndylib = true\nstd = true\nrun = true\nrunners = \"qemu-user qemu-system\"\n\n[[target]]\ntarget = \"aarch64-unknown-linux-musl\"\nos = \"ubuntu-latest\"\ncpp = true\ndylib = true\nstd = true\nrun = true\n\n[[target]]\ntarget = \"arm-unknown-linux-musleabihf\"\nos = \"ubuntu-latest\"\ncpp = true\ndylib = true\nstd = true\nrun = true\n\n[[target]]\ntarget = \"arm-unknown-linux-musleabi\"\nos = \"ubuntu-latest\"\ncpp = true\ndylib = true\nstd = true\nrun = true\n\n[[target]]\ntarget = \"armv5te-unknown-linux-gnueabi\"\nos = \"ubuntu-latest\"\ncpp = true\ndylib = true\nstd = true\nrun = true\n\n[[target]]\ntarget = \"armv5te-unknown-linux-musleabi\"\nos = \"ubuntu-latest\"\ncpp = true\ndylib = true\nstd = true\nrun = true\n\n[[target]]\ntarget = \"armv7-unknown-linux-musleabi\"\nos = \"ubuntu-latest\"\ncpp = true\ndylib = true\nstd = true\nrun = true\n\n[[target]]\ntarget = \"armv7-unknown-linux-musleabihf\"\nos = \"ubuntu-latest\"\ncpp = true\ndylib = true\nstd = true\nrun = true\n\n[[target]]\ntarget = \"i586-unknown-linux-musl\"\nos = \"ubuntu-latest\"\ncpp = true\ndylib = true\nstd = true\nrun = true\n# FIXME: These could run without qemu in our tests (`native`), but it fails today\nrunners = \"qemu-user\"\n\n[[target]]\ntarget = \"i686-unknown-linux-musl\"\nos = \"ubuntu-latest\"\ncpp = true\ndylib = true\nstd = true\nrun = true\n# FIXME: These could run without qemu in our tests (`native`), but it fails today\nrunners = \"qemu-user\"\n\n[[target]]\ndisabled = true # https://github.com/cross-rs/cross/issues/1422\ntarget = \"mips-unknown-linux-musl\"\nos = \"ubuntu-latest\"\ncpp = true\ndylib = true\nstd = true\nrun = true\nbuild-std = true\n\n[[target]]\ndisabled = true # https://github.com/cross-rs/cross/issues/1422\ntarget = \"mipsel-unknown-linux-musl\"\nos = \"ubuntu-latest\"\ncpp = true\ndylib = true\nstd = true\nrun = true\nbuild-std = true\n\n[[target]]\ntarget = \"aarch64-linux-android\"\nos = \"ubuntu-latest\"\ncpp = true\ndylib = true\nstd = true\nrun = true\n\n[[target]]\ntarget = \"arm-linux-androideabi\"\nos = \"ubuntu-latest\"\ncpp = true\ndylib = true\nstd = true\nrun = true\n\n[[target]]\ntarget = \"armv7-linux-androideabi\"\nos = \"ubuntu-latest\"\ncpp = true\ndylib = true\nstd = true\nrun = true\n\n[[target]]\ntarget = \"thumbv7neon-linux-androideabi\"\nos = \"ubuntu-latest\"\ncpp = true\nstd = true\nrun = true\n\n[[target]]\ntarget = \"i686-linux-android\"\nos = \"ubuntu-latest\"\ncpp = true\ndylib = true\nstd = true\nrun = true\n\n[[target]]\ntarget = \"x86_64-linux-android\"\nos = \"ubuntu-latest\"\ncpp = true\ndylib = true\nstd = true\nrun = true\n\n[[target]]\ntarget = \"x86_64-pc-windows-gnu\"\nos = \"ubuntu-latest\"\ncpp = true\nstd = true\nrun = true\n\n[[target]]\ntarget = \"i686-pc-windows-gnu\"\nos = \"ubuntu-latest\"\ncpp = true\nstd = true\nrun = true\n\n[[target]]\n# Disabled for now, see https://github.com/rust-lang/rust/issues/98216 & https://github.com/cross-rs/cross/issues/634\ndisabled = true\ntarget = \"asmjs-unknown-emscripten\"\nos = \"ubuntu-latest\"\ncpp = true\nstd = true\nrun = true\n\n[[target]]\ntarget = \"wasm32-unknown-emscripten\"\nos = \"ubuntu-latest\"\ncpp = true\nstd = true\nrun = true\n\n[[target]]\ntarget = \"x86_64-unknown-dragonfly\"\nos = \"ubuntu-latest\"\ncpp = true\ndylib = true\nstd = true\nbuild-std = true\n\n[[target]]\ntarget = \"i686-unknown-freebsd\"\nos = \"ubuntu-latest\"\ncpp = true\ndylib = true\nstd = true\n\n[[target]]\ntarget = \"x86_64-unknown-freebsd\"\nos = \"ubuntu-latest\"\ncpp = true\ndylib = true\nstd = true\n\n[[target]]\ntarget = \"aarch64-unknown-freebsd\"\nos = \"ubuntu-latest\"\ncpp = true\ndylib = true\nstd = true\nbuild-std = true\n\n[[target]]\ntarget = \"x86_64-unknown-netbsd\"\nos = \"ubuntu-latest\"\ncpp = true\ndylib = true\nstd = true\n\n[[target]]\ntarget = \"sparcv9-sun-solaris\"\nos = \"ubuntu-latest\"\ncpp = true\ndylib = true\nstd = true\n\n[[target]]\ntarget = \"x86_64-pc-solaris\"\nos = \"ubuntu-latest\"\ncpp = true\ndylib = true\nstd = true\n\n[[target]]\ntarget = \"x86_64-unknown-illumos\"\nos = \"ubuntu-latest\"\ncpp = true\ndylib = true\nstd = true\n\n[[target]]\ntarget = \"thumbv6m-none-eabi\"\nos = \"ubuntu-latest\"\ncpp = true\nstd = false\n\n[[target]]\ntarget = \"thumbv7em-none-eabi\"\nos = \"ubuntu-latest\"\ncpp = true\nstd = false\n\n[[target]]\ntarget = \"thumbv7em-none-eabihf\"\nos = \"ubuntu-latest\"\ncpp = true\nstd = false\n\n[[target]]\ntarget = \"thumbv7m-none-eabi\"\nos = \"ubuntu-latest\"\ncpp = true\nstd = false\n\n[[target]]\ntarget = \"thumbv8m.base-none-eabi\"\nos = \"ubuntu-latest\"\ncpp = true\nstd = false\n\n[[target]]\ntarget = \"thumbv8m.main-none-eabi\"\nos = \"ubuntu-latest\"\ncpp = true\nstd = false\n\n[[target]]\ntarget = \"thumbv8m.main-none-eabihf\"\nos = \"ubuntu-latest\"\ncpp = true\nstd = false\n\n[[target]]\ntarget = \"cross\"\nos = \"ubuntu-latest\"\nspecial = true\n\n[[target]]\ntarget = \"zig\"\nos = \"ubuntu-latest\"\nspecial = true\n\n[[target]]\ntarget = \"aarch64-unknown-linux-gnu\"\nsub = \"centos\"\nos = \"ubuntu-latest\"\ncpp = true\ndylib = true\nstd = true\nrun = true\nrunners = \"qemu-user qemu-system\"\n"
        },
        {
          "name": "xtask",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}