{
  "metadata": {
    "timestamp": 1736709333338,
    "page": 3,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "cloudflare/quiche",
      "stars": 9759,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.044921875,
          "content": "**/target\n**/*.rs.bk\n**/Cargo.lock\n**/*.*qlog\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.1142578125,
          "content": "[submodule \"boringssl\"]\n\tpath = quiche/deps/boringssl\n\turl = https://github.com/google/boringssl.git\n\tignore = dirty\n"
        },
        {
          "name": ".semgrepignore",
          "type": "blob",
          "size": 0.03125,
          "content": "/apps/\n/fuzz/\n/quiche/examples/\n"
        },
        {
          "name": "CODEOWNERS",
          "type": "blob",
          "size": 0.0234375,
          "content": "* @cloudflare/protocols\n"
        },
        {
          "name": "COPYING",
          "type": "blob",
          "size": 1.275390625,
          "content": "Copyright (C) 2018-2019, Cloudflare, Inc.\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\nDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\nON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "Cargo.toml",
          "type": "blob",
          "size": 0.1669921875,
          "content": "[workspace]\nmembers = [ \"apps\", \"h3i\", \"octets\", \"qlog\", \"quiche\" ]\nexclude = [ \"fuzz\", \"tools/http3_test\" ]\n\n[profile.bench]\ndebug = true\n\n[profile.release]\ndebug = true\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 1.1494140625,
          "content": "FROM rust:1.70 as build\n\nWORKDIR /build\n\nCOPY apps/ ./apps/\nCOPY octets/ ./octets/\nCOPY qlog/ ./qlog/\nCOPY quiche/ ./quiche/\n\nRUN apt-get update && apt-get install -y cmake && rm -rf /var/lib/apt/lists/*\n\nRUN cargo build --manifest-path apps/Cargo.toml\n\n##\n## quiche-base: quiche image for apps\n##\nFROM debian:latest as quiche-base\n\nRUN apt-get update && apt-get install -y ca-certificates && \\\n    rm -rf /var/lib/apt/lists/*\n\nCOPY --from=build \\\n     /build/apps/target/debug/quiche-client \\\n     /build/apps/target/debug/quiche-server \\\n     /usr/local/bin/\n\nENV PATH=\"/usr/local/bin/:${PATH}\"\nENV RUST_LOG=info\n\n##\n## quiche-qns: quiche image for quic-interop-runner\n## https://github.com/marten-seemann/quic-network-simulator\n## https://github.com/marten-seemann/quic-interop-runner\n##\nFROM martenseemann/quic-network-simulator-endpoint:latest as quiche-qns\n\nWORKDIR /quiche\n\nRUN apt-get update && apt-get install -y wait-for-it && rm -rf /var/lib/apt/lists/*\n\nCOPY --from=build \\\n     /build/apps/target/debug/quiche-client \\\n     /build/apps/target/debug/quiche-server \\\n     /build/apps/run_endpoint.sh \\\n     ./\n\nENV RUST_LOG=trace\n\nENTRYPOINT [ \"./run_endpoint.sh\" ]\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 1.423828125,
          "content": "DOCKER    = docker\n\nBASE_REPO = cloudflare/quiche\nBASE_TAG  = latest\n\nQNS_REPO  = cloudflare/quiche-qns\nQNS_TAG   = latest\n\nFUZZ_REPO = cloudflare.mayhem.security:5000/protocols/quiche-libfuzzer\nFUZZ_TAG  = latest\n\ndocker-build: docker-base docker-qns\n\n# build quiche-apps only\n.PHONY: build-apps\nbuild-apps:\n\tcargo build --package=quiche_apps\n\n# build base image\n.PHONY: docker-base\ndocker-base: Dockerfile\n\t$(DOCKER) build --target quiche-base -t $(BASE_REPO):$(BASE_TAG) .\n\n# build qns image\n.PHONY: docker-qns\ndocker-qns: Dockerfile apps/run_endpoint.sh\n\t$(DOCKER) build --target quiche-qns -t $(QNS_REPO):$(QNS_TAG) .\n\n.PHONY: docker-publish\ndocker-publish:\n\t$(DOCKER) push $(BASE_REPO):$(BASE_TAG)\n\t$(DOCKER) push $(QNS_REPO):$(QNS_TAG)\n\n# build fuzzers\n.PHONY: build-fuzz\nbuild-fuzz:\n\tcargo +nightly fuzz build --release --debug-assertions packet_recv_client\n\tcargo +nightly fuzz build --release --debug-assertions packet_recv_server\n\tcargo +nightly fuzz build --release --debug-assertions qpack_decode\n\n# build fuzzing image\n.PHONY: docker-fuzz\ndocker-fuzz:\n\t$(DOCKER) build -f fuzz/Dockerfile --target quiche-libfuzzer --tag $(FUZZ_REPO):$(FUZZ_TAG) .\n\n.PHONY: docker-fuzz-publish\ndocker-fuzz-publish:\n\t$(DOCKER) push $(FUZZ_REPO):$(FUZZ_TAG)\n\n.PHONY: clean\nclean:\n\t@for id in `$(DOCKER) images -q $(BASE_REPO)` `$(DOCKER) images -q $(QNS_REPO)` `$(DOCKER) images -q $(FUZZ_REPO)`; do \\\n\t\techo \">> Removing $$id\"; \\\n\t\t$(DOCKER) rmi -f $$id; \\\n\tdone\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 14.8671875,
          "content": "![quiche](quiche.svg)\n\n[![crates.io](https://img.shields.io/crates/v/quiche.svg)](https://crates.io/crates/quiche)\n[![docs.rs](https://docs.rs/quiche/badge.svg)](https://docs.rs/quiche)\n[![license](https://img.shields.io/github/license/cloudflare/quiche.svg)](https://opensource.org/licenses/BSD-2-Clause)\n![build](https://img.shields.io/github/actions/workflow/status/cloudflare/quiche/stable.yml?branch=master)\n\n[quiche] is an implementation of the QUIC transport protocol and HTTP/3 as\nspecified by the [IETF]. It provides a low level API for processing QUIC packets\nand handling connection state. The application is responsible for providing I/O\n(e.g. sockets handling) as well as an event loop with support for timers.\n\nFor more information on how quiche came about and some insights into its design\nyou can read a [post] on Cloudflare's blog that goes into some more detail.\n\n[quiche]: https://docs.quic.tech/quiche/\n[ietf]: https://quicwg.org/\n[post]: https://blog.cloudflare.com/enjoy-a-slice-of-quic-and-rust/\n\nWho uses quiche?\n----------------\n\n### Cloudflare\n\nquiche powers Cloudflare edge network's [HTTP/3 support][cloudflare-http3]. The\n[cloudflare-quic.com](https://cloudflare-quic.com) website can be used for\ntesting and experimentation.\n\n### Android\n\nAndroid's DNS resolver uses quiche to [implement DNS over HTTP/3][android-http3].\n\n### curl\n\nquiche can be [integrated into curl][curl-http3] to provide support for HTTP/3.\n\n[cloudflare-http3]: https://blog.cloudflare.com/http3-the-past-present-and-future/\n[android-http3]: https://security.googleblog.com/2022/07/dns-over-http3-in-android.html\n[curl-http3]: https://github.com/curl/curl/blob/master/docs/HTTP3.md#quiche-version\n\nGetting Started\n---------------\n\n### Command-line apps\n\nBefore diving into the quiche API, here are a few examples on how to use the\nquiche tools provided as part of the [quiche-apps](apps/) crate.\n\nAfter cloning the project according to the command mentioned in the [building](#building) section, the client can be run as follows:\n\n```bash\n $ cargo run --bin quiche-client -- https://cloudflare-quic.com/\n```\n\nwhile the server can be run as follows:\n\n```bash\n $ cargo run --bin quiche-server -- --cert apps/src/bin/cert.crt --key apps/src/bin/cert.key\n```\n\n(note that the certificate provided is self-signed and should not be used in\nproduction)\n\nUse the `--help` command-line flag to get a more detailed description of each\ntool's options.\n\n### Configuring connections\n\nThe first step in establishing a QUIC connection using quiche is creating a\n[`Config`] object:\n\n```rust\nlet mut config = quiche::Config::new(quiche::PROTOCOL_VERSION)?;\nconfig.set_application_protos(&[b\"example-proto\"]);\n\n// Additional configuration specific to application and use case...\n```\n\nThe [`Config`] object controls important aspects of the QUIC connection such\nas QUIC version, ALPN IDs, flow control, congestion control, idle timeout\nand other properties or features.\n\nQUIC is a general-purpose transport protocol and there are several\nconfiguration properties where there is no reasonable default value. For\nexample, the permitted number of concurrent streams of any particular type\nis dependent on the application running over QUIC, and other use-case\nspecific concerns.\n\nquiche defaults several properties to zero, applications most likely need\nto set these to something else to satisfy their needs using the following:\n\n- [`set_initial_max_streams_bidi()`]\n- [`set_initial_max_streams_uni()`]\n- [`set_initial_max_data()`]\n- [`set_initial_max_stream_data_bidi_local()`]\n- [`set_initial_max_stream_data_bidi_remote()`]\n- [`set_initial_max_stream_data_uni()`]\n\n[`Config`] also holds TLS configuration. This can be changed by mutators on\nthe an existing object, or by constructing a TLS context manually and\ncreating a configuration using [`with_boring_ssl_ctx_builder()`].\n\nA configuration object can be shared among multiple connections.\n\n### Connection setup\n\nOn the client-side the [`connect()`] utility function can be used to create\na new connection, while [`accept()`] is for servers:\n\n```rust\n// Client connection.\nlet conn = quiche::connect(Some(&server_name), &scid, local, peer, &mut config)?;\n\n// Server connection.\nlet conn = quiche::accept(&scid, None, local, peer, &mut config)?;\n```\n\n### Handling incoming packets\n\nUsing the connection's [`recv()`] method the application can process\nincoming packets that belong to that connection from the network:\n\n```rust\nlet to = socket.local_addr().unwrap();\n\nloop {\n    let (read, from) = socket.recv_from(&mut buf).unwrap();\n\n    let recv_info = quiche::RecvInfo { from, to };\n\n    let read = match conn.recv(&mut buf[..read], recv_info) {\n        Ok(v) => v,\n\n        Err(e) => {\n            // An error occurred, handle it.\n            break;\n        },\n    };\n}\n```\n\n### Generating outgoing packets\n\nOutgoing packet are generated using the connection's [`send()`] method\ninstead:\n\n```rust\nloop {\n    let (write, send_info) = match conn.send(&mut out) {\n        Ok(v) => v,\n\n        Err(quiche::Error::Done) => {\n            // Done writing.\n            break;\n        },\n\n        Err(e) => {\n            // An error occurred, handle it.\n            break;\n        },\n    };\n\n    socket.send_to(&out[..write], &send_info.to).unwrap();\n}\n```\n\nWhen packets are sent, the application is responsible for maintaining a\ntimer to react to time-based connection events. The timer expiration can be\nobtained using the connection's [`timeout()`] method.\n\n```rust\nlet timeout = conn.timeout();\n```\n\nThe application is responsible for providing a timer implementation, which\ncan be specific to the operating system or networking framework used. When\na timer expires, the connection's [`on_timeout()`] method should be called,\nafter which additional packets might need to be sent on the network:\n\n```rust\n// Timeout expired, handle it.\nconn.on_timeout();\n\n// Send more packets as needed after timeout.\nloop {\n    let (write, send_info) = match conn.send(&mut out) {\n        Ok(v) => v,\n\n        Err(quiche::Error::Done) => {\n            // Done writing.\n            break;\n        },\n\n        Err(e) => {\n            // An error occurred, handle it.\n            break;\n        },\n    };\n\n    socket.send_to(&out[..write], &send_info.to).unwrap();\n}\n```\n\n#### Pacing\n\nIt is recommended that applications [pace] sending of outgoing packets to\navoid creating packet bursts that could cause short-term congestion and\nlosses in the network.\n\nquiche exposes pacing hints for outgoing packets through the [`at`] field\nof the [`SendInfo`] structure that is returned by the [`send()`] method.\nThis field represents the time when a specific packet should be sent into\nthe network.\n\nApplications can use these hints by artificially delaying the sending of\npackets through platform-specific mechanisms (such as the [`SO_TXTIME`]\nsocket option on Linux), or custom methods (for example by using user-space\ntimers).\n\n[pace]: https://datatracker.ietf.org/doc/html/rfc9002#section-7.7\n[`SO_TXTIME`]: https://man7.org/linux/man-pages/man8/tc-etf.8.html\n\n### Sending and receiving stream data\n\nAfter some back and forth, the connection will complete its handshake and\nwill be ready for sending or receiving application data.\n\nData can be sent on a stream by using the [`stream_send()`] method:\n\n```rust\nif conn.is_established() {\n    // Handshake completed, send some data on stream 0.\n    conn.stream_send(0, b\"hello\", true)?;\n}\n```\n\nThe application can check whether there are any readable streams by using\nthe connection's [`readable()`] method, which returns an iterator over all\nthe streams that have outstanding data to read.\n\nThe [`stream_recv()`] method can then be used to retrieve the application\ndata from the readable stream:\n\n```rust\nif conn.is_established() {\n    // Iterate over readable streams.\n    for stream_id in conn.readable() {\n        // Stream is readable, read until there's no more data.\n        while let Ok((read, fin)) = conn.stream_recv(stream_id, &mut buf) {\n            println!(\"Got {} bytes on stream {}\", read, stream_id);\n        }\n    }\n}\n```\n\n### HTTP/3\n\nThe quiche [HTTP/3 module] provides a high level API for sending and\nreceiving HTTP requests and responses on top of the QUIC transport protocol.\n\n[`Config`]: https://docs.quic.tech/quiche/struct.Config.html\n[`set_initial_max_streams_bidi()`]: https://docs.rs/quiche/latest/quiche/struct.Config.html#method.set_initial_max_streams_bidi\n[`set_initial_max_streams_uni()`]: https://docs.rs/quiche/latest/quiche/struct.Config.html#method.set_initial_max_streams_uni\n[`set_initial_max_data()`]: https://docs.rs/quiche/latest/quiche/struct.Config.html#method.set_initial_max_data\n[`set_initial_max_stream_data_bidi_local()`]: https://docs.rs/quiche/latest/quiche/struct.Config.html#method.set_initial_max_stream_data_bidi_local\n[`set_initial_max_stream_data_bidi_remote()`]: https://docs.rs/quiche/latest/quiche/struct.Config.html#method.set_initial_max_stream_data_bidi_remote\n[`set_initial_max_stream_data_uni()`]: https://docs.rs/quiche/latest/quiche/struct.Config.html#method.set_initial_max_stream_data_uni\n[`with_boring_ssl_ctx_builder()`]: https://docs.quic.tech/quiche/struct.Config.html#method.with_boring_ssl_ctx_builder\n[`connect()`]: https://docs.quic.tech/quiche/fn.connect.html\n[`accept()`]: https://docs.quic.tech/quiche/fn.accept.html\n[`recv()`]: https://docs.quic.tech/quiche/struct.Connection.html#method.recv\n[`send()`]: https://docs.quic.tech/quiche/struct.Connection.html#method.send\n[`timeout()`]: https://docs.quic.tech/quiche/struct.Connection.html#method.timeout\n[`on_timeout()`]: https://docs.quic.tech/quiche/struct.Connection.html#method.on_timeout\n[`stream_send()`]: https://docs.quic.tech/quiche/struct.Connection.html#method.stream_send\n[`readable()`]: https://docs.quic.tech/quiche/struct.Connection.html#method.readable\n[`stream_recv()`]: https://docs.quic.tech/quiche/struct.Connection.html#method.stream_recv\n[HTTP/3 module]: https://docs.quic.tech/quiche/h3/index.html\n\nHave a look at the [quiche/examples/] directory for more complete examples on\nhow to use the quiche API, including examples on how to use quiche in C/C++\napplications (see below for more information).\n\n[examples/]: quiche/examples/\n\nCalling quiche from C/C++\n-------------------------\n\nquiche exposes a [thin C API] on top of the Rust API that can be used to more\neasily integrate quiche into C/C++ applications (as well as in other languages\nthat allow calling C APIs via some form of FFI). The C API follows the same\ndesign of the Rust one, modulo the constraints imposed by the C language itself.\n\nWhen running ``cargo build``, a static library called ``libquiche.a`` will be\nbuilt automatically alongside the Rust one. This is fully stand-alone and can\nbe linked directly into C/C++ applications.\n\nNote that in order to enable the FFI API, the ``ffi`` feature must be enabled (it\nis disabled by default), by passing ``--features ffi`` to ``cargo``.\n\n[thin C API]: https://github.com/cloudflare/quiche/blob/master/quiche/include/quiche.h\n\nBuilding\n--------\n\nquiche requires Rust 1.70 or later to build. The latest stable Rust release can\nbe installed using [rustup](https://rustup.rs/).\n\nOnce the Rust build environment is setup, the quiche source code can be fetched\nusing git:\n\n```bash\n $ git clone --recursive https://github.com/cloudflare/quiche\n```\n\nand then built using cargo:\n\n```bash\n $ cargo build --examples\n```\n\ncargo can also be used to run the testsuite:\n\n```bash\n $ cargo test\n```\n\nNote that [BoringSSL], which is used to implement QUIC's cryptographic handshake\nbased on TLS, needs to be built and linked to quiche. This is done automatically\nwhen building quiche using cargo, but requires the `cmake` command to be\navailable during the build process. On Windows you also need\n[NASM](https://www.nasm.us/). The [official BoringSSL\ndocumentation](https://github.com/google/boringssl/blob/master/BUILDING.md) has\nmore details.\n\nIn alternative you can use your own custom build of BoringSSL by configuring\nthe BoringSSL directory with the ``QUICHE_BSSL_PATH`` environment variable:\n\n```bash\n $ QUICHE_BSSL_PATH=\"/path/to/boringssl\" cargo build --examples\n```\n\nAlternatively you can use [OpenSSL/quictls]. To enable quiche to use this vendor\nthe ``openssl`` feature can be added to the ``--feature`` list. Be aware that\n``0-RTT`` is not supported if this vendor is used.\n\n[BoringSSL]: https://boringssl.googlesource.com/boringssl/\n\n[OpenSSL/quictls]: https://github.com/quictls/openssl\n\n### Building for Android\n\nBuilding quiche for Android (NDK version 19 or higher, 21 recommended), can be\ndone using [cargo-ndk] (v2.0 or later).\n\nFirst the [Android NDK] needs to be installed, either using Android Studio or\ndirectly, and the `ANDROID_NDK_HOME` environment variable needs to be set to the\nNDK installation path, e.g.:\n\n```bash\n $ export ANDROID_NDK_HOME=/usr/local/share/android-ndk\n```\n\nThen the Rust toolchain for the Android architectures needed can be installed as\nfollows:\n\n```bash\n $ rustup target add aarch64-linux-android armv7-linux-androideabi i686-linux-android x86_64-linux-android\n```\n\nNote that the minimum API level is 21 for all target architectures.\n\n[cargo-ndk] (v2.0 or later) also needs to be installed:\n\n```bash\n $ cargo install cargo-ndk\n```\n\nFinally the quiche library can be built using the following procedure. Note that\nthe `-t <architecture>` and `-p <NDK version>` options are mandatory.\n\n```bash\n $ cargo ndk -t arm64-v8a -p 21 -- build --features ffi\n```\n\nSee [build_android_ndk19.sh] for more information.\n\n[Android NDK]: https://developer.android.com/ndk\n[cargo-ndk]: https://docs.rs/crate/cargo-ndk\n[build_android_ndk19.sh]: https://github.com/cloudflare/quiche/blob/master/tools/android/build_android_ndk19.sh\n\n### Building for iOS\n\nTo build quiche for iOS, you need the following:\n\n- Install Xcode command-line tools. You can install them with Xcode or with the\n  following command:\n\n```bash\n $ xcode-select --install\n```\n\n- Install the Rust toolchain for iOS architectures:\n\n```bash\n $ rustup target add aarch64-apple-ios x86_64-apple-ios\n```\n\n- Install `cargo-lipo`:\n\n```bash\n $ cargo install cargo-lipo\n```\n\nTo build libquiche, run the following command:\n\n```bash\n $ cargo lipo --features ffi\n```\n\nor\n\n```bash\n $ cargo lipo --features ffi --release\n```\n\niOS build is tested in Xcode 10.1 and Xcode 11.2.\n\n### Building Docker images\n\nIn order to build the Docker images, simply run the following command:\n\n```bash\n $ make docker-build\n```\n\nYou can find the quiche Docker images on the following Docker Hub repositories:\n\n- [cloudflare/quiche](https://hub.docker.com/repository/docker/cloudflare/quiche)\n- [cloudflare/quiche-qns](https://hub.docker.com/repository/docker/cloudflare/quiche-qns)\n\nThe `latest` tag will be updated whenever quiche master branch updates.\n\n**cloudflare/quiche**\n\nProvides a server and client installed in /usr/local/bin.\n\n**cloudflare/quiche-qns**\n\nProvides the script to test quiche within the [quic-interop-runner](https://github.com/marten-seemann/quic-interop-runner).\n\nCopyright\n---------\n\nCopyright (C) 2018-2019, Cloudflare, Inc.\n\nSee [COPYING] for the license.\n\n[COPYING]: https://github.com/cloudflare/quiche/tree/master/COPYING\n"
        },
        {
          "name": "apps",
          "type": "tree",
          "content": null
        },
        {
          "name": "catalog-info.yaml",
          "type": "blob",
          "size": 0.6064453125,
          "content": "apiVersion: backstage.io/v1alpha1\nkind: Component\nmetadata:\n  title: \"quiche\"\n  name: \"quiche\"\n  description: \"Savoury implementation of the QUIC transport protocol and HTTP/3.\"\n  annotations:\n    backstage.io/source-location: url:https://github.com/cloudflare/quiche\n    cloudflare.com/jira-project-key: \"FLPROTO\"\n    cloudflare.com/software-excellence-opt-in: \"true\"\n  links:\n    - title: Documentation\n      url: https://docs.quic.tech/quiche/\n      icon: docs\n  tags:\n    - external\n    - edge\nspec:\n  type: \"library\"\n  lifecycle: \"Active\"\n  owner: \"teams/fl-protocols\"\n  dependsOn:\n    - component:default/boringssl\n"
        },
        {
          "name": "clippy.toml",
          "type": "blob",
          "size": 0.0361328125,
          "content": "cognitive-complexity-threshold = 100\n"
        },
        {
          "name": "fuzz",
          "type": "tree",
          "content": null
        },
        {
          "name": "h3i",
          "type": "tree",
          "content": null
        },
        {
          "name": "octets",
          "type": "tree",
          "content": null
        },
        {
          "name": "qlog",
          "type": "tree",
          "content": null
        },
        {
          "name": "quiche.svg",
          "type": "blob",
          "size": 10.0634765625,
          "content": "<svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 2469 414\"><defs><style>.cls-1{fill:#f48120;}.cls-2{fill:#edf2f8;stroke:#bfcce2;stroke-miterlimit:10;}.cls-16,.cls-19,.cls-2{stroke-width:3px;}.cls-3{fill:#d9e4f4;}.cls-4{fill:url(#New_Gradient_Swatch_10);}.cls-5{fill:url(#linear-gradient);}.cls-6{fill:#ffdb6f;}.cls-7{fill:#f16975;}.cls-8{fill:url(#linear-gradient-2);}.cls-9{fill:#e04e64;}.cls-10{fill:url(#linear-gradient-3);}.cls-11{fill:url(#linear-gradient-4);}.cls-12{fill:url(#linear-gradient-5);}.cls-13{fill:url(#linear-gradient-6);}.cls-14{fill:url(#linear-gradient-7);}.cls-15{fill:#f58220;}.cls-16,.cls-19{fill:none;stroke-linecap:round;stroke-linejoin:round;}.cls-16{stroke:url(#linear-gradient-8);}.cls-17{fill:url(#linear-gradient-9);}.cls-18{fill:url(#linear-gradient-10);}.cls-19{stroke:url(#linear-gradient-11);}</style><linearGradient id=\"New_Gradient_Swatch_10\" x1=\"4197.72\" y1=\"124.27\" x2=\"4512.45\" y2=\"124.27\" gradientTransform=\"translate(-2800.79)\" gradientUnits=\"userSpaceOnUse\"><stop offset=\"0\" stop-color=\"#f48120\"/><stop offset=\"1\" stop-color=\"#ffcc32\"/></linearGradient><linearGradient id=\"linear-gradient\" x1=\"-552\" y1=\"199.14\" x2=\"-231.66\" y2=\"199.14\" gradientTransform=\"matrix(-1, 0, 0, 1, 1164.62, 0)\" gradientUnits=\"userSpaceOnUse\"><stop offset=\"0\" stop-color=\"#ffcc32\"/><stop offset=\"1\" stop-color=\"#f48120\"/></linearGradient><linearGradient id=\"linear-gradient-2\" x1=\"-3038.1\" y1=\"2486.22\" x2=\"-3000.4\" y2=\"2486.22\" gradientTransform=\"translate(34.41 3798.56) rotate(153.05)\" gradientUnits=\"userSpaceOnUse\"><stop offset=\"0\" stop-color=\"#76c4e2\"/><stop offset=\"0.17\" stop-color=\"#85cba8\"/></linearGradient><linearGradient id=\"linear-gradient-3\" x1=\"3051.9\" y1=\"3317.56\" x2=\"3089.59\" y2=\"3317.56\" gradientTransform=\"translate(-1986.07 3186.57) rotate(-88.39)\" xlink:href=\"#linear-gradient-2\"/><linearGradient id=\"linear-gradient-4\" x1=\"1834.7\" y1=\"1037.18\" x2=\"1872.41\" y2=\"1037.18\" gradientTransform=\"translate(3362.56 1038.67) rotate(174.9)\" xlink:href=\"#linear-gradient-2\"/><linearGradient id=\"linear-gradient-5\" x1=\"970.49\" y1=\"5629.27\" x2=\"1046.27\" y2=\"5629.27\" gradientTransform=\"matrix(-0.78, -1.2, 0.67, -0.43, -1300.03, 3843.89)\" xlink:href=\"#linear-gradient-2\"/><linearGradient id=\"linear-gradient-6\" x1=\"-1218.8\" y1=\"4678.97\" x2=\"-1195.56\" y2=\"4678.97\" gradientTransform=\"matrix(-1.43, -0.05, 0.03, -0.79, -289.08, 3840.43)\" xlink:href=\"#linear-gradient-2\"/><linearGradient id=\"linear-gradient-7\" x1=\"696.71\" y1=\"3496.3\" x2=\"740.46\" y2=\"3496.3\" gradientTransform=\"matrix(-0.96, -1.06, 1.11, -1.01, -1716.58, 4495.9)\" xlink:href=\"#linear-gradient-2\"/><linearGradient id=\"linear-gradient-8\" x1=\"-381.86\" y1=\"-813.78\" x2=\"-310.73\" y2=\"-813.78\" gradientTransform=\"matrix(-0.87, -0.49, -0.49, 0.87, 805.63, 652.35)\" gradientUnits=\"userSpaceOnUse\"><stop offset=\"0.46\" stop-color=\"#85cba8\"/><stop offset=\"1\" stop-color=\"#ffdb6f\"/></linearGradient><linearGradient id=\"linear-gradient-9\" x1=\"-351.56\" y1=\"104.87\" x2=\"-307.87\" y2=\"104.87\" gradientTransform=\"matrix(-1, 0, 0, 1, 1164.62, 0)\" xlink:href=\"#linear-gradient-8\"/><linearGradient id=\"linear-gradient-10\" x1=\"2312.2\" y1=\"891.63\" x2=\"2401.76\" y2=\"891.63\" gradientTransform=\"matrix(0.54, 1.61, -1.41, 0.47, 1468.85, -4071.66)\" gradientUnits=\"userSpaceOnUse\"><stop offset=\"0\" stop-color=\"#85cba8\"/><stop offset=\"0.54\" stop-color=\"#76c4e2\"/></linearGradient><linearGradient id=\"linear-gradient-11\" x1=\"-428.03\" y1=\"-475.26\" x2=\"-333.03\" y2=\"-475.26\" gradientTransform=\"matrix(-0.94, -0.34, -0.34, 0.94, 969.14, 440.86)\" xlink:href=\"#linear-gradient-8\"/></defs><title>quiche banner</title><path class=\"cls-1\" d=\"M817.5,193.45q0,17.33-6.15,29.05a37.54,37.54,0,0,1-18,17.16L817,266.06H790.29l-18-22h-1.54q-22.57,0-34.66-13.1T724,193.31q0-24.51,12.12-37.44t34.76-12.93q22.64,0,34.63,13T817.5,193.45Zm-71.67,0q0,16.45,6.25,24.78t18.67,8.33q24.91,0,24.92-33.11t-24.79-33.18q-12.42,0-18.74,8.36T745.83,193.45Z\"/><path class=\"cls-1\" d=\"M937,144.48V208a36.69,36.69,0,0,1-4.87,19.08,31.74,31.74,0,0,1-14.07,12.56Q908.89,244,896.33,244q-18.93,0-29.42-9.71t-10.47-26.57V144.48h20.75V204.6q0,11.35,4.57,16.66t15.11,5.3q10.21,0,14.81-5.34t4.6-16.76v-60Z\"/><path class=\"cls-1\" d=\"M980.34,242.68v-98.2h20.82v98.2Z\"/><path class=\"cls-1\" d=\"M1086.85,160.4q-11.76,0-18.2,8.83t-6.45,24.62q0,32.85,24.65,32.85,10.35,0,25.05-5.18V239a69.54,69.54,0,0,1-27,5q-21.42,0-32.77-13t-11.36-37.31q0-15.32,5.58-26.84a40.27,40.27,0,0,1,16-17.66q10.44-6.15,24.48-6.15A66.12,66.12,0,0,1,1115.6,150l-6.72,16.93a110.14,110.14,0,0,0-11.08-4.57A33.06,33.06,0,0,0,1086.85,160.4Z\"/><path class=\"cls-1\" d=\"M1232.52,242.68h-20.76V200.3h-38.89v42.38h-20.82v-98.2h20.82V183h38.89V144.48h20.76Z\"/><path class=\"cls-1\" d=\"M1333.12,242.68h-56.56v-98.2h56.56v17.06h-35.74V183.1h33.25v17.06h-33.25v25.33h35.74Z\"/><path class=\"cls-2\" d=\"M1327.19,237.32c0-31.85,102.13-57.68,228.12-57.68s228.11,25.83,228.11,57.68S1681.29,295,1555.31,295,1327.19,269.18,1327.19,237.32Z\"/><path class=\"cls-3\" d=\"M1375.85,231.87c0-23.15,80.34-41.92,179.46-41.92s179.46,18.77,179.46,41.92-80.35,41.92-179.46,41.92S1375.85,255,1375.85,231.87Z\"/><path class=\"cls-4\" d=\"M1463.59,87.38c-25.85,16.48-65.06,34.26-65.21,63.88a3.22,3.22,0,0,0,0,5.4c.21,2.54,1.55,4.51,3.18,4.51h306.84c1.78,0,3.23-3.4,3.23-6.27C1711.66,153.39,1463.59,87.38,1463.59,87.38Z\"/><path class=\"cls-5\" d=\"M1709.87,244H1400.75c-4.13-.05-4.13-3.05-4.13-7.05l-.35-82.61h313.6c3.75.65,6.75,1.25,6.75,9.65l-.28,64.81C1716.34,237.16,1713.44,244,1709.87,244Z\"/><path class=\"cls-6\" d=\"M1716,237.32H1408.39c-3.5,0-4.77-.4-4.34-4.91V161.17h311c3.5,0,2.33,5.78,2.33,12.91v50.33C1717.34,231.54,1719.51,237.32,1716,237.32Z\"/><path class=\"cls-7\" d=\"M1536.62,189.09l4.81-3.72a7.36,7.36,0,0,0,1.53-10.05h0a7.37,7.37,0,0,0-10.54-1.6l-4.81,3.72a7.36,7.36,0,0,0-1.52,10.05h0A7.37,7.37,0,0,0,1536.62,189.09Z\"/><path class=\"cls-8\" d=\"M1601.14,217.3a5.51,5.51,0,0,0,.38.67l.17-.08c4.63-2.35,13-10.74,12-15.6a8.32,8.32,0,0,0-2.93.85C1606.73,205.16,1599.11,213.31,1601.14,217.3Z\"/><path class=\"cls-7\" d=\"M1580,230.17l2.57-2a3.93,3.93,0,0,0,.82-5.37h0a3.94,3.94,0,0,0-5.63-.85l-2.57,2a3.93,3.93,0,0,0-.81,5.37h0A3.93,3.93,0,0,0,1580,230.17Z\"/><path class=\"cls-7\" d=\"M1448.87,233.57l4.08-3.15a6.23,6.23,0,0,0,1.29-8.51h0a6.24,6.24,0,0,0-8.92-1.35l-4.08,3.15a6.23,6.23,0,0,0-1.29,8.51h0A6.24,6.24,0,0,0,1448.87,233.57Z\"/><path class=\"cls-9\" d=\"M1702.46,173.07l-2.6-2.49a4.38,4.38,0,0,0-6,0h0a4.37,4.37,0,0,0,0,6.3l2.61,2.49a4.36,4.36,0,0,0,6,0h0A4.37,4.37,0,0,0,1702.46,173.07Z\"/><path class=\"cls-10\" d=\"M1412.81,210.52a6.77,6.77,0,0,0-.78,0,1.09,1.09,0,0,1,0,.18c-.14,5.19,3.25,16.52,8,17.95a8.11,8.11,0,0,0,.66-3C1420.8,221.23,1417.28,210.65,1412.81,210.52Z\"/><path class=\"cls-11\" d=\"M1424.7,174.16c0,.26.07.51.11.76h.19c5.17-.46,16-5.15,16.9-10a8.24,8.24,0,0,0-3-.31C1434.41,165,1424.31,169.7,1424.7,174.16Z\"/><path class=\"cls-12\" d=\"M1660.8,194.72a8.1,8.1,0,0,0-1,.77l.29.45c8.15,12.53,30.76,36.37,39.21,35.34a39.34,39.34,0,0,0-3.93-7.72C1688.37,212.77,1666.79,190.82,1660.8,194.72Z\"/><path class=\"cls-13\" d=\"M1577.87,187.56a1.62,1.62,0,0,0,0,.38h.16c4.58.17,14.55-1.28,15.79-3.58a12.72,12.72,0,0,0-2.63-.38C1587.27,183.84,1578,185.37,1577.87,187.56Z\"/><path class=\"cls-14\" d=\"M1485.56,207.57c-.34.31-.65.63-1,1,.07.08.13.16.2.23,5.8,6.4,23.13,15.87,30.77,11.87a12.9,12.9,0,0,0-2.59-4.36C1508,210.77,1491.35,202.33,1485.56,207.57Z\"/><ellipse class=\"cls-15\" cx=\"1390.66\" cy=\"150.32\" rx=\"10.9\" ry=\"10.89\"/><ellipse class=\"cls-15\" cx=\"1396.27\" cy=\"134.17\" rx=\"10.9\" ry=\"10.89\"/><ellipse class=\"cls-15\" cx=\"1408.48\" cy=\"121.06\" rx=\"10.9\" ry=\"10.89\"/><ellipse class=\"cls-15\" cx=\"1420.69\" cy=\"109.17\" rx=\"10.9\" ry=\"10.89\"/><ellipse class=\"cls-15\" cx=\"1433.33\" cy=\"100.14\" rx=\"10.9\" ry=\"10.89\"/><ellipse class=\"cls-15\" cx=\"1446.62\" cy=\"91.61\" rx=\"10.9\" ry=\"10.89\"/><ellipse class=\"cls-15\" cx=\"1460.45\" cy=\"84.01\" rx=\"10.9\" ry=\"10.89\"/><path class=\"cls-16\" d=\"M1542.75,124.21c-2.68,1.17-19.12,8-37.48,0s-24.43-24.42-25.43-27.2\"/><path class=\"cls-17\" d=\"M1513,128.76a30.44,30.44,0,0,0,3.21-.68c0-.3-.07-.6-.12-.9-3.84-24.83-21.82-43.44-42.84-46.56a43.76,43.76,0,0,0-.2,14.69C1476.32,116.69,1494.21,131.67,1513,128.76Z\"/><path class=\"cls-18\" d=\"M1497.7,140.12a43.67,43.67,0,0,0,4.12-1.65c-.13-.39-.23-.77-.36-1.16-10.76-32.18-38.92-52.87-67.6-52.26a59.17,59.17,0,0,0,3.06,19.59C1446.18,132.35,1473.39,148.23,1497.7,140.12Z\"/><path class=\"cls-19\" d=\"M1536.32,127.3c-3.31,2.17-23.63,15-49.88,8.52-26.06-6.42-38.08-27-40-30.43\"/><path class=\"cls-1\" d=\"M1438.55,284.29a3.24,3.24,0,0,0-3.78-.87c-12.25,4.9-24.16,10.25-36.15,15.18-6,2.46-12,4.84-18.14,7s-12.24,4.1-18.45,5.71a164.22,164.22,0,0,1-18.78,3.76,129.46,129.46,0,0,1-18.94,1.22c-1.83,0-3.65-.08-5.45-.18a152.16,152.16,0,0,0,40-7.27c6.5-2,12.78-4.44,18.88-7s12.06-5.36,17.87-8.27c11.65-5.78,22.82-12,34.09-18a2.21,2.21,0,0,0,1-3.27,3.27,3.27,0,0,0-3.79-.86c-12.11,4.84-23.9,10.13-35.75,15-6,2.44-11.93,4.79-17.94,6.94-3,1.06-6,2.09-9.08,3s-6.09,1.86-9.16,2.68a144.77,144.77,0,0,1-37.29,5.19c-1.56,0-3.14,0-4.69-.08l-2-.1c.38,0,.76,0,1.15-.06l5.25-.31c1.75-.1,3.47-.37,5.21-.55,3.48-.32,6.88-1,10.29-1.55l1.28-.22,1.26-.28,2.52-.56,2.51-.56,1.25-.29,1.23-.34c3.28-.91,6.58-1.77,9.75-2.85,6.45-2,12.61-4.45,18.67-7s11.93-5.32,17.66-8.22c2.9-1.42,5.73-2.9,8.58-4.36l8.44-4.47,16.73-9h0a2.19,2.19,0,0,0,.93-3.26,3.24,3.24,0,0,0-3.77-.86c-12,4.79-23.67,10-35.41,14.87l-4.42,1.8-4.44,1.74c-2.94,1.19-5.93,2.25-8.89,3.35-6,2.08-12,4.09-18,5.68-3,.88-6.09,1.52-9.14,2.22l-1.15.26-1.15.21-2.31.41-2.3.43-1.15.21-1.16.16c-3.09.4-6.17.89-9.27,1.06-1.54.1-3.09.3-4.63.32l-4.64.11c-1.54.07-3.09,0-4.63-.06l-2.6-.09c1.22,0,2.43-.06,3.65-.12a152.65,152.65,0,0,0,40.48-7.54c6.39-2.06,12.6-4.42,18.62-7s11.89-5.32,17.63-8.21c11.5-5.72,22.55-11.85,33.68-17.78a2.2,2.2,0,0,0,.95-3.26,3.25,3.25,0,0,0-3.78-.87c-12,4.78-23.63,10-35.34,14.85-5.89,2.41-11.78,4.75-17.73,6.88q-4.45,1.61-9,3c-3,1-6,1.84-9,2.69a147.37,147.37,0,0,1-36.85,5.4c-3.08.05-43.67-2.18-57.17-3.19-30.8-2.32-104.77-19.5-198.37-10.5-101.91,9.79-244.3,47.63-247.47,48.43l-.27.08h0a2.4,2.4,0,0,0-1.77,2.41c-.08.4-10.75,25,270-29.15,71.68-13.83,172.78.38,172.89.39,6.19.55,26.73,21.56,33.53,27.61,13.72,12.22,38,12.16,45.06,12a150.48,150.48,0,0,0,41.6-7.1,203.22,203.22,0,0,0,19.14-7q9.27-3.92,18.08-8.34c11.79-5.84,23.09-12.11,34.48-18.18A2.2,2.2,0,0,0,1438.55,284.29Z\"/></svg>"
        },
        {
          "name": "quiche",
          "type": "tree",
          "content": null
        },
        {
          "name": "rustfmt.toml",
          "type": "blob",
          "size": 1.546875,
          "content": "max_width = 82\nhard_tabs = false\ntab_spaces = 4\nnewline_style = \"Auto\"\nuse_small_heuristics = \"Default\"\nindent_style = \"Block\"\nwrap_comments = true\nformat_code_in_doc_comments = true\ncomment_width = 80\nnormalize_comments = true\nnormalize_doc_attributes = true\nformat_strings = false\nformat_macro_matchers = false\nformat_macro_bodies = true\nempty_item_single_line = true\nstruct_lit_single_line = true\nfn_single_line = false\nwhere_single_line = false\nimports_indent = \"Block\"\nimports_layout = \"Vertical\"\nimports_granularity = \"Item\"\nreorder_imports = true\nreorder_modules = true\nreorder_impl_items = true\ntype_punctuation_density = \"Wide\"\nspace_before_colon = false\nspace_after_colon = true\nspaces_around_ranges = false\nbinop_separator = \"Back\"\nremove_nested_parens = true\ncombine_control_expr = true\noverflow_delimited_expr = true\nstruct_field_align_threshold = 0\nenum_discrim_align_threshold = 20\nmatch_arm_blocks = false\nforce_multiline_blocks = false\nfn_params_layout = \"Compressed\"\nbrace_style = \"SameLineWhere\"\ncontrol_brace_style = \"AlwaysSameLine\"\ntrailing_semicolon = true\ntrailing_comma = \"Vertical\"\nmatch_block_trailing_comma = true\nblank_lines_upper_bound = 1\nblank_lines_lower_bound = 0\nedition = \"2018\"\nmerge_derives = true\nuse_try_shorthand = true\nuse_field_init_shorthand = true\nforce_explicit_abi = false\ncondense_wildcard_suffixes = true\ncolor = \"Auto\"\nunstable_features = true\ndisable_all_formatting = false\nskip_children = false\nshow_parse_errors = true\nerror_on_line_overflow = false\nerror_on_unformatted = false\nignore = []\nemit_mode = \"Files\"\nmake_backup = false\n"
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}