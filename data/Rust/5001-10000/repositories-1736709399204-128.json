{
  "metadata": {
    "timestamp": 1736709399204,
    "page": 128,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "EvilGenius-dot/RustMinerSystem",
      "stars": 5178,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.0537109375,
          "content": "*.sh linguist-language=Rust\n*.md linguist-language=Rust"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.046875,
          "content": "MIT License\n\nCopyright (c) 2023 RustMinerSystem\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 10.1533203125,
          "content": "<div id=\"top\"></div>\n\n<div align=\"center\">\n\n# <img src=\"./image/ktlogo.gif\" alt=\"Logo\" width=\"24\">RUSTMINERSYSTEM\n\n### <a href=\"https://rustminersystem.gitbook.io/rustminersystem\">代理传统矿池, 或成为真正的矿池节点! 点击查看!</a>\n\n<img src=\"/image/1.jpg\" alt=\"Logo\">\n\n\n\n<a href=\"https://rustminersystem.gitbook.io/rustminersystem\">English</a>｜<a href=\"https://rustminersystem.gitbook.io/rustminersystem\">简体中文</a> | <a href=\"https://rustminersystem.gitbook.io/rustminersystem\">Русский язык</a>\n\n<a href=\"#dingzhi\">\n   <img src=\"https://img.shields.io/badge/%E7%82%B9%E6%88%91%E5%85%8D%E8%B4%B9%E5%AE%9A%E5%88%B6-%F0%9F%94%A5-8A2BE2\">\n</a>\n<a href=\"#anzhuang\">\n   <img src=\"https://img.shields.io/badge/%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B-%F0%9F%91%88-00b9ff\">\n</a>\n<a href=\"#liaotian\" target=\"_blank\">\n   <img src=\"https://img.shields.io/badge/%E5%8A%A0%E5%85%A5%E8%81%8A%E5%A4%A9-%F0%9F%91%88-00b9ff\">\n</a>\n<a href=\"#gengxin\" target=\"_blank\">\n   <img src=\"https://img.shields.io/badge/%E6%9B%B4%E6%96%B0%E6%97%A5%E5%BF%97-%F0%9F%91%88-00b9ff\">\n</a>\n<a href=\"https://github.com/EvilGenius-dot/RMS\" target=\"_blank\">\n   <img src=\"https://img.shields.io/badge/RMS%E6%9C%AC%E5%9C%B0%E5%AE%A2%E6%88%B7%E7%AB%AF-%F0%9F%91%88-00b9ff\">\n</a>\n\n[![RustMinerSystem][rustminersystem.io-badge]][rustminersystem.io]\n[![Stargazers][stars-shield]][stars-url]\n\n</div>\n\n<table>\n   <tr>\n   <td>\n\n<span id=\"anzhuang\"></span>\n\n### 👉 **服务协议**\n\n   <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;RustMinerSystem受香港法律监管。请注意，不同国家/地区的法律要求可能会限制此类产品和服务。\n\n   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;因此，该产品和服务以及某些功能可能不可用，或者在某些司法管辖区或地区或某些用户中可能受到限制。\n\n   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;本产品并非VPN类型产品, 因为他无法使不允许地区访问禁止访问的内容。\n\n   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;本产品为矿机、矿场管理软件，并非通过不正当手段获取矿机数据, 所有接入的设备均需设备拥有者主动设置矿机连接地址，以此确保任意使用本程序的客户拥有知情权。\n\n   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;您不在任何恐怖活动组织及恐怖活动人员名单中，如联合国安理会决议中所列的恐怖活动组织及恐怖活动人员名单。\n\n   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;您未被任何国家或地区的行政执法机构限制或禁止使用本程序。\n\n   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;您非古巴、伊朗、朝鲜、叙利亚以及其他受到相关国家政府或国际机构执行制裁的国家或地区居民。\n\n   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;您非限制或禁止开展数字货币相关活动国家或地区的居民，包括但不限于中国大陆地区等。\n\n   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;您使用本程序提供的服务在您所在的国家或地区符合相关法律法规和政策。\n\n   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;您同意：如因您所在国家或地区的法律法规和政策或其他任何适用法律的原因，导致您使用本程序的服务违法，您将独立承担相关法律风险和责任，您无条件且不可撤销地放弃向本程序进行追索的权利。\n\n   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;您应该理解并遵守当地的法律法规。如果您使用此产品，默认代表将接受上述许可证。如果本产品引起的法律问题与本产品无关。\n   </p>\n\n   </td>\n   </tr>\n   <tr>\n   <td>\n\n### 👉 **Linux安装**\n\n   <p>&emsp;&emsp;运行以下shell指令以运行工具包</p>\n\n   ```sh\n     bash <(curl -s -L https://github.com/EvilGenius-dot/RustMinerSystem/raw/main/install.sh)\n   ```\n\n   <p>&emsp;&emsp;如果在部分地区下载过慢或是无法访问, 您可尝试备用安装地址</p>\n\n   ```sh\n     bash <(curl -s -L -k https://rustminersystem.com/EvilGenius-dot/RustMinerSystem/raw/main/install.sh)\n   ```\n   \n   <p>&emsp;&emsp;成功运行后，您将看到以下菜单, 根据提示安装即可。</p>\n   \n   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<img src=\"/image/install.gif\">\n\n   <p>&emsp;&emsp;默认后台账号密码为 qzpm19kkx xloqslz913</p>\n\n   <p>&emsp;&emsp;ARM版本请使用以下命令进行安装</p>\n   \n   &emsp;&emsp;ARM:\n\n   ```sh\n     bash <(curl -s -L https://github.com/EvilGenius-dot/RustMinerSystem/raw/main/arm-install.sh)\n   ```\n\n   &emsp;&emsp;ARMV7:\n\n   ```sh\n     bash <(curl -s -L https://github.com/EvilGenius-dot/RustMinerSystem/raw/main/armv7-install.sh)\n   ```\n\n   </td>\n   </tr>\n   <tr>\n   <td>\n\n### 👉 **Windows安装**\n\n   <p>&emsp;&emsp;请直接从此项目的Windows目录下载指定的版本：</p>\n\n   ```sh\n     https://github.com/EvilGenius-dot/RustMinerSystem/tree/main/windows\n   ```\n\n   <p>&emsp;&emsp;Windows版本直接双击启动即可。</p>\n\n   <p>&emsp;&emsp;默认后台账号密码为 qzpm19kkx xloqslz913</p>\n\n   </td>\n   </tr>   \n   <tr>\n   <td>\n  \n### 👉 **支持的算法及币种**\n\n<p>&emsp;&emsp;对于支持的算法，相应的货币将随时热更新</p>\n\n<div>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n<img src=\"/image/icon-btc.png\" alt=\"Logo\" width=\"25\">\n<img src=\"/image/icon-bch.png\" alt=\"Logo\" width=\"25\">\n<img src=\"/image/icon-etc.png\" alt=\"Logo\" width=\"25\">\n<img src=\"/image/icon-ethw.png\" alt=\"Logo\" width=\"25\">\n<img src=\"/image/icon-ethf.png\" alt=\"Logo\" width=\"25\">\n<img src=\"/image/icon-octa.png\" alt=\"Logo\" width=\"25\">\n<img src=\"/image/icon-etc+zil.png\" alt=\"Logo\" height=\"25\">\n<img src=\"/image/icon-ethw+zil.png\" alt=\"Logo\" height=\"25\">\n<img src=\"/image/icon-ethf+zil.png\" alt=\"Logo\" height=\"25\">\n<img src=\"/image/icon-ltc.png\" alt=\"Logo\" width=\"25\">\n<img src=\"/image/icon-kaspa.png\" alt=\"Logo\" width=\"25\">\n<img src=\"/image/icon-kda.png\" alt=\"Logo\" width=\"25\">\n<img src=\"/image/icon-sc.png\" alt=\"Logo\" width=\"25\">\n<img src=\"/image/icon-hns.png\" alt=\"Logo\" width=\"25\">\n<img src=\"/image/icon-cfx.png\" alt=\"Logo\" width=\"25\">\n<img src=\"/image/icon-dnx.png\" alt=\"Logo\" width=\"25\">\n<img src=\"/image/icon-ckb.png\" alt=\"Logo\" width=\"25\">\n<img src=\"/image/icon-zen.png\" alt=\"Logo\" width=\"25\">\n<img src=\"/image/icon-zec.png\" alt=\"Logo\" width=\"25\">\n<img src=\"/image/icon-lbc.png\" alt=\"Logo\" width=\"25\">\n<img src=\"/image/icon-dash.png\" alt=\"Logo\" width=\"25\">\n<img src=\"/image/icon-sero.png\" alt=\"Logo\" width=\"25\">\n<img src=\"/image/icon-alph.png\" alt=\"Logo\" width=\"25\">\n<img src=\"/image/icon-xmr.png\" alt=\"Logo\" width=\"25\">\n<img src=\"/image/icon-zeph.png\" alt=\"Logo\" width=\"25\">\n<img src=\"/image/icon-rvn.png\" alt=\"Logo\" height=\"25\">\n<img src=\"/image/icon-rxd.png\" alt=\"Logo\" width=\"25\">\n<img src=\"/image/icon-erg.png\" alt=\"Logo\" width=\"25\">\n</div>\n\n```text\n  算法                支持的币种\n  SHA256              BTC、BCH、SPACE\n  ETHASH              ETC、ETHW、ETHF、OCTA、 ETC+ZIL、ETHW+ZIL、ETHF+ZIL、CLORE、NEURAI、NEOXA、ZIL、CLO、UBQ、EGAZ、ELH、AVS、CAU、PAC、PWR、BTN、DUBX、XPB、REDEV2、RTH、DOGETHER\n  SCRYPT              LTC、BEL\n  KHEAVYHASH          KASPA、PYI、SDR\n  KARLSENHASH         KLS\n  BLAKE2S             KDA\n  BLAKE2B             SC、HNS\n  OCTOPUS             CFX\n  DYNEXSOLVE          DNX\n  EAGLESONG           CKB\n  EQUIHASH            ZEN、ZEC\n  LBRY                LBC\n  X11                 DASH、BLOCX\n  PROGPOW             SERO\n  BLAKE3              ALPH、IRON\n  RANDOMX             XMR、ZEPH、NEVO\n  KAWPOW              RVN、MEWC、AIPG\n  SHA512256D          RXD\n  AUTOYKOS2           ERG                \n  NEXAPOW             NEXA\n  GHOSTRIDER          RTM、RTC、MECU、MAXE、NIKI、SUBI、NEVO\n  CUCKATOO32          GRIN\n```\n\n\n   </td>\n   </tr>\n   <tr>\n   <td>\n\n<span id=\"liaotian\"></span>\n\n### 👉 **加入聊天组**\n\n<p>&emsp;&emsp;Telegram：<a href=\"https://t.me/rustkt\">https://t.me/rustkt</a></p>\n\n<p>&emsp;&emsp;Discord: <a href=\"https://discord.gg/xpjRnv8wpX\">https://discord.gg/xpjRnv8wpX</a></p>\n\n   </td>\n   </tr>\n   <tr>\n   <td>\n\n### 👉 **特别感谢**\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n<img src=\"/image/icon-logo-blue.png\" alt=\"Logo\" width=\"100\">\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n<img src=\"/image/poolin.svg\" alt=\"Logo\" width=\"100\">\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n<img src=\"/image/hd_logo.png\" alt=\"Logo\" width=\"100\">\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n<img src=\"/image/antpool.png\" alt=\"Logo\" width=\"100\">\n\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;感谢以上矿池在一定范围内提供了技术支持😊</p>\n\n   </td>\n   </tr>\n   <tr>\n   <td>\n\n<span id=\"gengxin\"></span>\n\n### 👉 **更新日志**\n\n   <p>&emsp;&emsp;<a href=\"https://github.com/EvilGenius-dot/RustMinerSystem/releases\">点击查看更新日志</a>\n\n\n   </td>\n   </tr>\n   <tr>\n   <td>\n\n<span id=\"dingzhi\"></span>\n\n### 👉 **定制专属版本说明**\n\n   <p>&emsp;&emsp;1. 加入聊天群组 <a href=\"https://t.me/rustkt\">https://t.me/rustkt</a></p>\n   <p>&emsp;&emsp;2. 联系群主或管理员提供相关信息即可免费定制。</p>\n\n   </td>\n   </tr>\n   <tr>\n   <td>\n\n### 👉 **端口导入、导出**\n\n   <p>&emsp;&emsp;三种方式可以进行端口的导入导出, 此处仅强调EXCEL文件导入, 如需使用Excel导入, 请下载并参照Excel模板文件:</p>\n\n   <p>&emsp;&emsp;<a href=\"https://github.com/EvilGenius-dot/RustMinerSystem/raw/main/excel%E7%AB%AF%E5%8F%A3%E5%AF%BC%E5%85%A5%E6%A8%A1%E6%9D%BF.xlsx\">下载Excel模板</a></p>\n\n   </td>\n   </tr>\n\n   <tr>\n   <td>\n\n### 👉 **Other issues**\n\n   <p>&emsp;&emsp;这是一个免费软件，不收取任何费用。从技术角度来看，它只需要终端设备计算能力的0.2%作为技术回报。</p>\n\n   </tr>\n   </td>\n\n</table>\n\n\n\n\n[rustminersystem.io]: https://github.com/EvilGenius-dot/RustMinerSystem\n[rustminersystem.io-badge]: https://img.shields.io/badge/RustMinerSystem-v3.9.94-green?logo=rust\n[downloads-badge]: https://img.shields.io/github/downloads/ajeetdsouza/zoxide/total?logo=github&logoColor=white&style=flat-square\n[releases]: https://github.com/EvilGenius-dot/RustMinerSystem/releases\n[stars-url]: https://github.com/EvilGenius-dot/RustMinerSystem/stargazers\n[stars-shield]: https://img.shields.io/github/stars/EvilGenius-dot/RustMinerSystem.svg?style=flat\n[stars-url]: https://github.com/EvilGenius-dot/RustMinerSystem/stargazers\n\n"
        },
        {
          "name": "Readme",
          "type": "tree",
          "content": null
        },
        {
          "name": "arm-install.sh",
          "type": "blob",
          "size": 17.474609375,
          "content": "#!/bin/bash\n\nVERSION=\"4.0.0\"\nDOWNLOAD_HOST=\"https://github.com/EvilGenius-dot/RustMinerSystem/raw/main/linux/arm\"\nORIGIN_EXEC=\"rustminersystem-${VERSION}\"\n\nSERVICE_NAME=\"rustservice\"\n\nPATH_RUST=\"/root/rustminersystem\"\nPATH_EXEC=\"rustminersystem\"\n\nPATH_CONFIG=\"${PATH_RUST}/rust-config\"\nPATH_NOHUP=\"${PATH_RUST}/nohup.out\"\nPATH_ERR=\"${PATH_RUST}/err.log\"\nPATH_CUE=\"${PATH_RUST}/cue\"\nPATH_D_1=\"${PATH_RUST}/0.d1\"\nPATH_D_2=\"${PATH_RUST}/0.d1-shm\"\nPATH_D_3=\"${PATH_RUST}/0.d1-wal\"\n\n# 语言选择菜单\nclear\necho \"Please select your language / 请选择语言:\"\n# echo \"\"\necho \"1. English\"\necho \"2. 中文\"\n# echo \"\"\nread -p \"$(echo -e \"[1-2]：\")\" lang_choice\n\nif [ \"$lang_choice\" = \"1\" ]; then\n    prompt_title=\"---------- English Menu ----------\"\n    prompt_install=\"1. Install\"\n    prompt_update=\"2. Update\"\n    prompt_start=\"3. Start software\"\n    prompt_stop=\"4. Stop software\"\n    prompt_restart=\"5. Restart software\"\n    prompt_port=\"6. Modify startup port\"\n    prompt_ulimit=\"7. Remove Linux system connection limit (requires server restart to take effect)\"\n    prompt_auto_start=\"8. Set automatic startup\"\n    prompt_disable_auto_start=\"9. Disable automatic startup...\"\n    prompt_status=\"10. Check program running status\"\n    prompt_error_log=\"11. View error log\"\n    prompt_clear_log=\"12. Clear log files\"\n    prompt_web_port=\"13. View current WEB access port\"\n    prompt_uninstall=\"14. Uninstall\"\n    prompt_reset_pwd=\"15. Reset account password\"\n    prompt_target_version=\"16. Install specified version\"\n    prompt_root_no=\"Please run this script as root!\"\n    prompt_error_command=\"Invalid command entered. Please try again.\"\n    prompt_msg_1=\"Start installation\"\n    prompt_msg_2=\"Disable firewall\"\n    prompt_msg_3=\"Unknown operating system, failed to disable firewall\"\n    m_4=\"Start program\"\n    m_5=\"Program is already running, please do not start it again.\"\n    m_6=\"Program started successfully, WEB access port is\"\n    m_7=\"Default account is qzpm19kkx default password is xloqslz913\"\n    m_8=\"If you are using the default password and port, please change the account password and web access port in a timely manner through the web settings.\"\n    m_9=\"Password reset completed, changed to default account password qzpm19kkx xloqslz913\"\n    m_10=\"Terminating process...\"\n    m_11=\"Not found\"\n    m_12=\"Process\"\n    m_13=\"Terminated\"\n    m_14=\"Set up automatic startup\"\n    m_15=\"Disable automatic startup...\"\n    m_16=\"Failed\"\n    m_17=\"Environment variable configuration file not found, creating one now\"\n    m_18=\"Modify system connection limit\"\n    m_19=\"Connection limit has been changed to 65535, please restart the server for the change to take effect\"\n    m_20=\"Current connection limit:\"\n    m_21=\"Modification completed, please restart the server for the change to take effect\"\n    m_22=\"Detected running\"\n    m_23=\", it must be stopped before continuing with the installation.\"\n    m_24=\"Enter 1 to stop the running\"\n    m_25=\"and continue with the installation, enter 2 to cancel the installation.\"\n    m_26=\"Please choose\"\n    m_27=\"Cancel installation\"\n    m_28=\"Invalid input, cancelling installation.\"\n    m_29=\"Creating directory\"\n    m_30=\"Directory already exists, no need to create it again, continuing with the installation.\"\n    m_31=\"Downloading...\"\n    m_32=\"Downloading program\"\n    m_33=\"Uninstall completed\"\n    m_34=\"Press CTRL+C to run in the background\"\n    m_35=\"Cleaning up logs\"\n    m_36=\"Cleanup completed\"\n    m_37=\"Current WEB access port is\"\n    m_38=\"Enter the published version number to install:\"\n    m_39=\"Please enter the version number:\"\n    m_40=\"Program startup failure!!!\"\n\nelif [ \"$lang_choice\" = \"2\" ]; then\n    prompt_title=\"---------- 中文菜单 ----------\"\n    prompt_install=\"1. 安装\"\n    prompt_update=\"2. 更新\"\n    prompt_start=\"3. 启动软件\"\n    prompt_stop=\"4. 停止软件\"\n    prompt_restart=\"5. 重启软件\"\n    prompt_port=\"6. 修改启动端口\"\n    prompt_ulimit=\"7. 解除Linux系统连接数限制（需要重启服务器生效）\"\n    prompt_auto_start=\"8. 设置开机启动\"\n    prompt_disable_auto_start=\"9. 关闭开机启动\"\n    prompt_status=\"10. 查看程序运行状态\"\n    prompt_error_log=\"11. 查看错误日志\"\n    prompt_clear_log=\"12. 清理日志文件\"\n    prompt_web_port=\"13. 查看当前WEB访问端口\"\n    prompt_uninstall=\"14. 卸载\"\n    prompt_reset_pwd=\"15. 重置认账号密码\"\n    prompt_target_version=\"16. 安装指定版本\"\n    prompt_root_no=\"请使用root用户运行此脚本！\"\n    prompt_error_command=\"输入了错误的指令, 请重新输入。\"\n    prompt_msg_1=\"开始安装\"\n    prompt_msg_2=\"关闭防火墙\"\n    prompt_msg_3=\"未知的操作系统, 关闭防火墙失败\"\n    m_4=\"启动程序\"\n    m_5=\"程序已经启动，请不要重复启动。\"\n    m_6=\"程序启动成功, WEB访问端口\"\n    m_7=\"默认账号 qzpm19kkx 默认密码 xloqslz913\"\n    m_8=\"如果您是默认密码及默认端口, 请及时在网页设置中修改账号密码及web访问端口。\"\n    m_9=\"重置密码完成, 已修改为默认账号密码 qzpm19kkx xloqslz913\"\n    m_10=\"终止进程...\"\n    m_11=\"未发现\"\n    m_12=\"进程\"\n    m_13=\"终止\"\n    m_14=\"设置开机启动\"\n    m_15=\"关闭开机启动...\"\n    m_16=\"失败\"\n    m_17=\"未发现环境变量配置文件, 开始创建\"\n    m_18=\"修改系统连接数限制\"\n    m_19=\"连接数限制已修改为65535,重启服务器后生效\"\n    m_20=\"当前连接数限制：\"\n    m_21=\"修改完成, 重启服务器后生效\"\n    m_22=\"发现正在运行的\"\n    m_23=\", 需要停止才可继续安装。\"\n    m_24=\"输入1停止正在运行的\"\n    m_25=\"并且继续安装, 输入2取消安装。\"\n    m_26=\"请选择\"\n    m_27=\"取消安装\"\n    m_28=\"输入错误, 取消安装。\"\n    m_29=\"开始创建目录\"\n    m_30=\"目录已存在, 无需重复创建, 继续执行安装。\"\n    m_31=\"开始下载...\"\n    m_32=\"下载程序\"\n    m_33=\"卸载完成\"\n    m_34=\"按住CTRL+C后台运行\"\n    m_35=\"清理日志\"\n    m_36=\"清理完成\"\n    m_37=\"当前WEB访问端口\"\n    m_38=\"输入已发布的版本来进行安装：\"\n    m_39=\"请输入版本号：\"\n    m_40=\"程序启动失败!!!\"\nelse\n  echo \"无效的选择\"\n  exit 1\nfi\n\nclear\n\n[ $(id -u) != \"0\" ] && { echo \"$prompt_root_no\"; exit 1; }\n\necho \"$prompt_title\"\necho \"$prompt_install\"\necho \"$prompt_update\"\necho \"$prompt_start\"\necho \"$prompt_stop\"\necho \"$prompt_restart\"\necho \"$prompt_port\"\necho \"$prompt_ulimit\"\necho \"$prompt_auto_start\"\necho \"$prompt_disable_auto_start\"\necho \"$prompt_status\"\necho \"$prompt_error_log\"\necho \"$prompt_clear_log\"\necho \"$prompt_web_port\"\necho \"$prompt_uninstall\"\necho \"$prompt_reset_pwd\"\necho \"$prompt_target_version\"\necho \"17. 设置后台https访问\"\n\nupdate() {\n    stop\n\n    disable_autostart\n\n    installapp $VERSION\n}\n\n\ncheck_process() {\n    if [[ $(uname) == \"Linux\" ]]; then\n        if pgrep -x \"$1\" >/dev/null; then\n            return 0\n        else\n            return 1\n        fi\n    else\n        if ps aux | grep -v grep | grep \"$1\" >/dev/null; then\n            return 0\n        else\n            return 1\n        fi\n    fi\n}\n\nset_port() {\n    read -p \"$(echo -e \"请输入要设置的端口号：\")\" choose\n\n    setConfig START_PORT $choose\n\n    stop\n\n    start\n}\n\nset_https_admin() {\n    stop\n\n    start\n}\n\nset_https() {\n    echo \"是否开启https后台访问? 请注意,开启后后台地址必须使用https://访问, 关闭后必须使用http://访问。\"\n    echo \"1. 不开启\"\n    echo \"2. 开启\"\n\n    read -p \"$(echo -e \"请选择[1-2]?：\")\" choose\n\n    case $choose in\n    1)\n        setConfig ENABLE_WEB_TLS 0\n        ;;\n    2)\n        setConfig ENABLE_WEB_TLS 1\n        return\n        ;;\n    *)\n        setConfig ENABLE_WEB_TLS 1\n        echo \"输入错误, 默认不开启。\"\n        return\n        ;;\n    esac\n}\n\nget_ip(){\n    local IP=$( ip addr | egrep -o '[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}' | egrep -v \"^192\\.168|^172\\.1[6-9]\\.|^172\\.2[0-9]\\.|^172\\.3[0-2]\\.|^10\\.|^127\\.|^255\\.|^0\\.\" | head -n 1 )\n    [ -z ${IP} ] && IP=$( wget -qO- -t1 -T2 ipv4.icanhazip.com )\n    [ -z ${IP} ] && IP=$( wget -qO- -t1 -T2 ipinfo.io/ip )\n    [ ! -z ${IP} ] && echo ${IP} || echo\n}\n\nstart() {\n    # set_https\n\n    echo $BLUE \"${m_4}...\"\n    check_process $PATH_EXEC\n\n    if [ $? -eq 0 ]; then\n        echo \"${m_5}\"\n        return\n    else\n        enable_autostart\n\n        sleep 1\n\n        check_process $PATH_EXEC\n\n        if [ $? -eq 0 ]; then\n            clear   \n            port=$(getConfig \"START_PORT\")\n            https=$(getConfig \"ENABLE_WEB_TLS\")\n            http_h=\"http://\"\n            http_t=\"未开启\"\n            \n            if [ $https = 0 ];then\n                http_t=\"当前后台为http协议访问, 请不要使用https访问, 如需使用https, 请运行脚本选择17进行设置。\"\n                http_h=\"http://\"\n            else\n                http_t=\"当前后台为https协议访问, 请不要使用http访问, 如需使用http, 请运行脚本选择17进行设置。\"\n                http_h=\"https://\"\n            fi\n\n            echo \"\"\n            echo \"\"\n            echo \"|----------------------------------------------------------------|\"\n            echo \"程序启动成功, 版本号: ${VERSION}\"\n            echo $http_t\n            echo \"后台访问地址:     ${http_h}$(get_ip):${port}\"\n            echo \"默认用户名为      qzpm19kkx\"\n            echo \"默认密码为        xloqslz913\"\n            echo \"如果您是默认密码及默认端口, 请及时在网页设置中修改账号密码及web访问端口。\"\n            echo \"|----------------------------------------------------------------|\"\n        else\n            echo \"${m_40}\"\n        fi\n    fi\n}\n\nresetpass() {\n    stop\n\n    echo \"删除配置文件\"\n\n    rm -rf $PATH_D_1\n    rm -rf $PATH_D_2\n    rm -rf $PATH_D_3\n\n    start\n\n    echo \"${m_9}\"\n}\n\nrestart() {\n    stop\n\n    start\n}\n\nstop() {\n    sleep 1\n\n    disable_autostart\n\n    sleep 1\n\n    echo \"${m_10}\"\n\n    kill_process $PATH_EXEC\n\n    sleep 1\n}\n\nkill_process() {\n    local process_name=\"$1\"\n  local pids=($(pgrep \"$process_name\"))\n  if [ ${#pids[@]} -eq 0 ]; then\n    echo \"${m_11} $process_name ${m_12}.\"\n    return 1\n  fi\n  for pid in \"${pids[@]}\"; do\n    echo \"Stopping process $pid ...\"\n    kill -TERM \"$pid\"\n  done\n  echo \"${m_13} $process_name .\"\n\n  sleep 1\n}\n\n# 设置开机启动且进程守护\nenable_autostart() {\n    echo \"${m_14}\"\n    if [ \"$(command -v systemctl)\" ]; then\n        sudo tee /etc/systemd/system/$SERVICE_NAME.service > /dev/null <<EOF\n[Unit]\nDescription=My Program\nAfter=network.target\n\n[Service]\nType=simple\nExecStart=$PATH_RUST/$PATH_EXEC\nWorkingDirectory=$PATH_RUST/\nRestart=always\nStandardOutput=file:$PATH_RUST/nohup.out\nStandardError=file:$PATH_RUST/err.log\nTimeoutStopSec=5\n\n[Install]\nWantedBy=multi-user.target\nEOF\n        sudo systemctl daemon-reload\n        sudo systemctl enable $SERVICE_NAME.service\n        sudo systemctl start $SERVICE_NAME.service\n    else\n        sudo sh -c \"echo '${PATH_RUST}/${PATH_EXEC} &' >> /etc/rc.local\"\n        sudo chmod +x /etc/rc.local\n    fi\n}\n\n# 禁用开机启动函数\ndisable_autostart() {\n    echo \"${m_15}\"\n    if [ \"$(command -v systemctl)\" ]; then\n        sudo systemctl stop $SERVICE_NAME.service\n        sudo systemctl disable $SERVICE_NAME.service\n        sudo rm /etc/systemd/system/$SERVICE_NAME.service\n        sudo systemctl daemon-reload\n    else # 系统使用的是SysVinit\n        sudo sed -i '/\\/root\\/rustminersystem\\/rustminersystem\\ &/d' /etc/rc.local\n    fi\n\n    sleep 1\n}\n\n\nISSUE() {\n    echo \"请输入指定的版本号, 例如 3.5.0\"\n}\n\nfilterResult() {\n    if [ $1 -eq 0 ]; then\n        echo \"\"\n    else\n        echo \"!!!!!!!!!!!!!!!ERROR!!!!!!!!!!!!!!!!\"\n        echo \"【${2}】${m_16}。\"\n\t\n        if [ ! $3 ];then\n            echo \"!!!!!!!!!!!!!!!ERROR!!!!!!!!!!!!!!!!\"\n            exit 1\n        fi\n    fi\n    echo -e\n}\n\ngetConfig() {\n    value=$(sed -n 's/^[[:space:]]*'$1'[[:space:]]*=[[:space:]]*\\(.*[^[:space:]]\\)\\([[:space:]]*\\)$/\\1/p' $PATH_CONFIG)\n    echo $value\n}\n\nsetConfig() {\n    if [ ! -f \"$PATH_CONFIG\" ]; then\n        echo \"${m_17}\"\n        \n        touch $PATH_CONFIG\n\n        chmod -R 777 $PATH_CONFIG\n\n        echo \"START_PORT=63521\" >> $PATH_CONFIG\n        echo \"ENABLE_WEB_TLS=0\" >> $PATH_CONFIG\n    fi\n\n    if grep -q \"^$1=\" \"$PATH_CONFIG\"; then\n        # 如果key已经存在，则修改它的值\n        sed -i \"s/^$1=.*/$1=$2/\" \"$PATH_CONFIG\"\n        echo \"已更新配置文件: $PATH_CONFIG\"\n    else\n        # 如果key不存在，则添加新的key=value行\n        echo \"$1=$2\" >> \"$PATH_CONFIG\"\n        echo \"已添加配置到文件: $PATH_CONFIG\"\n    fi\n\n    echo \"$1已修改为$2\"\n}\n\n# 关闭防火墙\ndisable_firewall() {\n    os_name=$(grep \"^ID=\" /etc/os-release | cut -d \"=\" -f 2 | tr -d '\"')\n    echo $prompt_msg_2\n\n    if [ \"$os_name\" == \"ubuntu\" ]; then\n        sudo ufw disable\n    elif [ \"$os_name\" == \"centos\" ]; then\n        sudo systemctl stop firewalld\n        sudo systemctl disable firewalld\n    else\n        echo $prompt_msg_3\n    fi\n}\n\nchange_limit() {\n    echo \"${m_18}\"\n\n    changeLimit=\"n\"\n\n    if [[ -f /etc/debian_version ]]; then\n    echo \"soft nofile 65535\" | sudo tee -a /etc/security/limits.conf\n    echo \"hard nofile 65535\" | sudo tee -a /etc/security/limits.conf\n    echo \"fs.file-max = 100000\" | sudo tee -a /etc/sysctl.conf\n    sudo sysctl -p\n\n    # add PAM configuration to enable the limits for login sessions\n    if [[ -f /etc/pam.d/common-session ]]; then\n        grep -q '^session.*pam_limits.so$' /etc/pam.d/common-session || sudo sh -c \"echo 'session required pam_limits.so' >> /etc/pam.d/common-session\"\n        fi\n    fi\n\n    # set file descriptor limits for CentOS/RHEL\n    if [[ -f /etc/redhat-release ]]; then\n        echo \"* soft nofile 65535\" | sudo tee -a /etc/security/limits.conf\n        echo \"* hard nofile 65535\" | sudo tee -a /etc/security/limits.conf\n        echo \"fs.file-max = 100000\" | sudo tee -a /etc/sysctl.conf\n        sudo sysctl -p\n    fi\n\n    # set file descriptor limits for macOS\n    if [[ \"$(uname)\" == \"Darwin\" ]]; then\n        sudo launchctl limit maxfiles 65535 65535\n        sudo sysctl -w kern.maxfiles=100000\n        sudo sysctl -w kern.maxfilesperproc=65535\n    fi\n\n    # set systemd file descriptor limits\n    if [[ -x /bin/systemctl ]]; then\n        echo \"DefaultLimitNOFILE=65535\" >>/etc/systemd/user.conf\n        echo \"DefaultLimitNOFILE=65535\" >>/etc/systemd/system.conf\n        systemctl daemon-reexec\n    fi\n\n    if [ $(grep -c \"root soft nofile\" /etc/security/limits.conf) -eq '0' ]; then\n        echo \"root soft nofile 65535\" >>/etc/security/limits.conf\n        echo \"* soft nofile 65535\" >>/etc/security/limits.conf\n        changeLimit=\"y\"\n    fi\n\n    if [ $(grep -c \"root hard nofile\" /etc/security/limits.conf) -eq '0' ]; then\n        echo \"root hard nofile 65535\" >>/etc/security/limits.conf\n        echo \"* hard nofile 65535\" >>/etc/security/limits.conf\n        changeLimit=\"y\"\n    fi\n\n    if [ $(grep -c \"DefaultLimitNOFILE=65535\" /etc/systemd/user.conf) -eq '0' ]; then\n        echo \"DefaultLimitNOFILE=65535\" >>/etc/systemd/user.conf\n        changeLimit=\"y\"\n    fi\n\n    if [ $(grep -c \"DefaultLimitNOFILE=65535\" /etc/systemd/system.conf) -eq '0' ]; then\n        echo \"DefaultLimitNOFILE=65535\" >>/etc/systemd/system.conf\n        changeLimit=\"y\"\n    fi\n\n    if [[ \"$changeLimit\" = \"y\" ]]; then\n        echo \"${m_19}\"\n    else\n        echo -n \"${m_20}\"\n        ulimit -n\n    fi\n\n    echo \"${m_21}\"\n}\n\ninstallapp() {\n    if [ -n \"$1\" ]; then\n        VERSION=\"$1\"\n        ORIGIN_EXEC=\"rustminersystem-${1}\"\n    fi\n\n    echo $ORIGIN_EXEC\n\n    echo \"${prompt_msg_1}${ORIGIN_EXEC}\"\n\n    disable_firewall\n\n    check_process $PATH_EXEC\n    \n    if [ $? -eq 0 ]; then\n        echo \"${m_22}${PATH_EXEC}${m_23}\"\n        echo \"${m_24}${PATH_EXEC}${m_25}\"\n\n        read -p \"$(echo -e \"${m_26}[1-2]：\")\" choose\n        case $choose in\n        1)\n            stop\n            ;;\n        2)\n            echo \"${m_27}\"\n            return\n            ;;\n        *)\n            echo \"${m_28}\"\n            return\n            ;;\n        esac\n    fi\n\n    echo \"${m_29}\"\n\n    if [[ ! -d $PATH_RUST ]];then\n        mkdir $PATH_RUST\n        chmod 777 -R $PATH_RUST\n    else\n        echo $YELLOW \"${m_30}\"\n    fi\n\n    if [[ ! -d $PATH_NOHUP ]];then\n        touch $PATH_NOHUP\n        touch $PATH_ERR\n\n        chmod 777 -R $PATH_NOHUP\n        chmod 777 -R $PATH_ERR\n    fi\n\n    if [[ ! -f $PATH_CONFIG ]];then\n        setConfig START_PORT $((RANDOM%65535+1))\n    fi\n\n    echo \"${m_31}\"\n\n    wget -P $PATH_RUST \"${DOWNLOAD_HOST}/${ORIGIN_EXEC}\" -O \"${PATH_RUST}/${PATH_EXEC}\" 1>/dev/null\n\n    filterResult $? \"${m_32}\"\n\n    chmod 777 -R \"${PATH_RUST}/${PATH_EXEC}\"\n\n    # enable_autostart\n\n    start\n}\n\nuninstall() {\n    stop\n\n    rm -rf ${PATH_RUST}\n\n    disable_autostart\n\n    echo \"${m_33}\"\n}\n\ncheck_hub() {\n    echo \"${m_34}\"\n    tail -f $PATH_NOHUP\n}\n\ncheck_err() {\n    echo \"${m_34}\"\n    tail -f $PATH_ERR\n}\n\nclearlog() {\n    echo \"${m_35}\"\n    rm $PATH_NOHUP > /dev/null 2>&1\n    rm $PATH_ERR > /dev/null 2>&1\n    echo \"${m_36}\"\n}\n\n\nlookport() {\n    port=$(getConfig \"START_PORT\")\n\n    echo \"${m_37}${port}\"\n}\n\ninstall_target() {\n    echo \"${m_38}\"\n    echo \"\"\n    ISSUE\n    echo \"\"\n    read -p \"$(echo -e \"${m_39}\")\" choose\n\n    installapp $choose\n}\n\n\nread -p \"$(echo -e \"[1-17]：\")\" choose\n\ncase $choose in\n1)\n    installapp $VERSION\n    ;;\n2)\n    update\n    ;;\n3)\n    start\n    ;;\n4)\n    stop\n    ;;\n5)\n    restart\n    ;;\n6)\n    set_port\n    ;;\n7)\n    change_limit\n    ;;\n8)\n    enable_autostart\n    ;;\n9)\n    disable_autostart\n    ;;\n10)\n    check_hub\n    ;;\n11)\n    check_err\n    ;;\n12)\n    clearlog\n    ;;\n13)\n    lookport\n    ;;\n14)\n    uninstall\n    ;;\n15)\n    resetpass\n    ;;\n16)\n    install_target\n    ;;\n17)\n    set_https_admin\n    ;;\n*)\n    echo $prompt_error_command\n    ;;\nesac"
        },
        {
          "name": "armv7-install.sh",
          "type": "blob",
          "size": 17.4765625,
          "content": "#!/bin/bash\n\nVERSION=\"4.0.0\"\nDOWNLOAD_HOST=\"https://github.com/EvilGenius-dot/RustMinerSystem/raw/main/linux/armv7\"\nORIGIN_EXEC=\"rustminersystem-${VERSION}\"\n\nSERVICE_NAME=\"rustservice\"\n\nPATH_RUST=\"/root/rustminersystem\"\nPATH_EXEC=\"rustminersystem\"\n\nPATH_CONFIG=\"${PATH_RUST}/rust-config\"\nPATH_NOHUP=\"${PATH_RUST}/nohup.out\"\nPATH_ERR=\"${PATH_RUST}/err.log\"\nPATH_CUE=\"${PATH_RUST}/cue\"\nPATH_D_1=\"${PATH_RUST}/0.d1\"\nPATH_D_2=\"${PATH_RUST}/0.d1-shm\"\nPATH_D_3=\"${PATH_RUST}/0.d1-wal\"\n\n# 语言选择菜单\nclear\necho \"Please select your language / 请选择语言:\"\n# echo \"\"\necho \"1. English\"\necho \"2. 中文\"\n# echo \"\"\nread -p \"$(echo -e \"[1-2]：\")\" lang_choice\n\nif [ \"$lang_choice\" = \"1\" ]; then\n    prompt_title=\"---------- English Menu ----------\"\n    prompt_install=\"1. Install\"\n    prompt_update=\"2. Update\"\n    prompt_start=\"3. Start software\"\n    prompt_stop=\"4. Stop software\"\n    prompt_restart=\"5. Restart software\"\n    prompt_port=\"6. Modify startup port\"\n    prompt_ulimit=\"7. Remove Linux system connection limit (requires server restart to take effect)\"\n    prompt_auto_start=\"8. Set automatic startup\"\n    prompt_disable_auto_start=\"9. Disable automatic startup...\"\n    prompt_status=\"10. Check program running status\"\n    prompt_error_log=\"11. View error log\"\n    prompt_clear_log=\"12. Clear log files\"\n    prompt_web_port=\"13. View current WEB access port\"\n    prompt_uninstall=\"14. Uninstall\"\n    prompt_reset_pwd=\"15. Reset account password\"\n    prompt_target_version=\"16. Install specified version\"\n    prompt_root_no=\"Please run this script as root!\"\n    prompt_error_command=\"Invalid command entered. Please try again.\"\n    prompt_msg_1=\"Start installation\"\n    prompt_msg_2=\"Disable firewall\"\n    prompt_msg_3=\"Unknown operating system, failed to disable firewall\"\n    m_4=\"Start program\"\n    m_5=\"Program is already running, please do not start it again.\"\n    m_6=\"Program started successfully, WEB access port is\"\n    m_7=\"Default account is qzpm19kkx default password is xloqslz913\"\n    m_8=\"If you are using the default password and port, please change the account password and web access port in a timely manner through the web settings.\"\n    m_9=\"Password reset completed, changed to default account password qzpm19kkx xloqslz913\"\n    m_10=\"Terminating process...\"\n    m_11=\"Not found\"\n    m_12=\"Process\"\n    m_13=\"Terminated\"\n    m_14=\"Set up automatic startup\"\n    m_15=\"Disable automatic startup...\"\n    m_16=\"Failed\"\n    m_17=\"Environment variable configuration file not found, creating one now\"\n    m_18=\"Modify system connection limit\"\n    m_19=\"Connection limit has been changed to 65535, please restart the server for the change to take effect\"\n    m_20=\"Current connection limit:\"\n    m_21=\"Modification completed, please restart the server for the change to take effect\"\n    m_22=\"Detected running\"\n    m_23=\", it must be stopped before continuing with the installation.\"\n    m_24=\"Enter 1 to stop the running\"\n    m_25=\"and continue with the installation, enter 2 to cancel the installation.\"\n    m_26=\"Please choose\"\n    m_27=\"Cancel installation\"\n    m_28=\"Invalid input, cancelling installation.\"\n    m_29=\"Creating directory\"\n    m_30=\"Directory already exists, no need to create it again, continuing with the installation.\"\n    m_31=\"Downloading...\"\n    m_32=\"Downloading program\"\n    m_33=\"Uninstall completed\"\n    m_34=\"Press CTRL+C to run in the background\"\n    m_35=\"Cleaning up logs\"\n    m_36=\"Cleanup completed\"\n    m_37=\"Current WEB access port is\"\n    m_38=\"Enter the published version number to install:\"\n    m_39=\"Please enter the version number:\"\n    m_40=\"Program startup failure!!!\"\n\nelif [ \"$lang_choice\" = \"2\" ]; then\n    prompt_title=\"---------- 中文菜单 ----------\"\n    prompt_install=\"1. 安装\"\n    prompt_update=\"2. 更新\"\n    prompt_start=\"3. 启动软件\"\n    prompt_stop=\"4. 停止软件\"\n    prompt_restart=\"5. 重启软件\"\n    prompt_port=\"6. 修改启动端口\"\n    prompt_ulimit=\"7. 解除Linux系统连接数限制（需要重启服务器生效）\"\n    prompt_auto_start=\"8. 设置开机启动\"\n    prompt_disable_auto_start=\"9. 关闭开机启动\"\n    prompt_status=\"10. 查看程序运行状态\"\n    prompt_error_log=\"11. 查看错误日志\"\n    prompt_clear_log=\"12. 清理日志文件\"\n    prompt_web_port=\"13. 查看当前WEB访问端口\"\n    prompt_uninstall=\"14. 卸载\"\n    prompt_reset_pwd=\"15. 重置认账号密码\"\n    prompt_target_version=\"16. 安装指定版本\"\n    prompt_root_no=\"请使用root用户运行此脚本！\"\n    prompt_error_command=\"输入了错误的指令, 请重新输入。\"\n    prompt_msg_1=\"开始安装\"\n    prompt_msg_2=\"关闭防火墙\"\n    prompt_msg_3=\"未知的操作系统, 关闭防火墙失败\"\n    m_4=\"启动程序\"\n    m_5=\"程序已经启动，请不要重复启动。\"\n    m_6=\"程序启动成功, WEB访问端口\"\n    m_7=\"默认账号 qzpm19kkx 默认密码 xloqslz913\"\n    m_8=\"如果您是默认密码及默认端口, 请及时在网页设置中修改账号密码及web访问端口。\"\n    m_9=\"重置密码完成, 已修改为默认账号密码 qzpm19kkx xloqslz913\"\n    m_10=\"终止进程...\"\n    m_11=\"未发现\"\n    m_12=\"进程\"\n    m_13=\"终止\"\n    m_14=\"设置开机启动\"\n    m_15=\"关闭开机启动...\"\n    m_16=\"失败\"\n    m_17=\"未发现环境变量配置文件, 开始创建\"\n    m_18=\"修改系统连接数限制\"\n    m_19=\"连接数限制已修改为65535,重启服务器后生效\"\n    m_20=\"当前连接数限制：\"\n    m_21=\"修改完成, 重启服务器后生效\"\n    m_22=\"发现正在运行的\"\n    m_23=\", 需要停止才可继续安装。\"\n    m_24=\"输入1停止正在运行的\"\n    m_25=\"并且继续安装, 输入2取消安装。\"\n    m_26=\"请选择\"\n    m_27=\"取消安装\"\n    m_28=\"输入错误, 取消安装。\"\n    m_29=\"开始创建目录\"\n    m_30=\"目录已存在, 无需重复创建, 继续执行安装。\"\n    m_31=\"开始下载...\"\n    m_32=\"下载程序\"\n    m_33=\"卸载完成\"\n    m_34=\"按住CTRL+C后台运行\"\n    m_35=\"清理日志\"\n    m_36=\"清理完成\"\n    m_37=\"当前WEB访问端口\"\n    m_38=\"输入已发布的版本来进行安装：\"\n    m_39=\"请输入版本号：\"\n    m_40=\"程序启动失败!!!\"\nelse\n  echo \"无效的选择\"\n  exit 1\nfi\n\nclear\n\n[ $(id -u) != \"0\" ] && { echo \"$prompt_root_no\"; exit 1; }\n\necho \"$prompt_title\"\necho \"$prompt_install\"\necho \"$prompt_update\"\necho \"$prompt_start\"\necho \"$prompt_stop\"\necho \"$prompt_restart\"\necho \"$prompt_port\"\necho \"$prompt_ulimit\"\necho \"$prompt_auto_start\"\necho \"$prompt_disable_auto_start\"\necho \"$prompt_status\"\necho \"$prompt_error_log\"\necho \"$prompt_clear_log\"\necho \"$prompt_web_port\"\necho \"$prompt_uninstall\"\necho \"$prompt_reset_pwd\"\necho \"$prompt_target_version\"\necho \"17. 设置后台https访问\"\n\nupdate() {\n    stop\n\n    disable_autostart\n\n    installapp $VERSION\n}\n\n\ncheck_process() {\n    if [[ $(uname) == \"Linux\" ]]; then\n        if pgrep -x \"$1\" >/dev/null; then\n            return 0\n        else\n            return 1\n        fi\n    else\n        if ps aux | grep -v grep | grep \"$1\" >/dev/null; then\n            return 0\n        else\n            return 1\n        fi\n    fi\n}\n\nset_port() {\n    read -p \"$(echo -e \"请输入要设置的端口号：\")\" choose\n\n    setConfig START_PORT $choose\n\n    stop\n\n    start\n}\n\nset_https_admin() {\n    stop\n\n    start\n}\n\nset_https() {\n    echo \"是否开启https后台访问? 请注意,开启后后台地址必须使用https://访问, 关闭后必须使用http://访问。\"\n    echo \"1. 不开启\"\n    echo \"2. 开启\"\n\n    read -p \"$(echo -e \"请选择[1-2]?：\")\" choose\n\n    case $choose in\n    1)\n        setConfig ENABLE_WEB_TLS 0\n        ;;\n    2)\n        setConfig ENABLE_WEB_TLS 1\n        return\n        ;;\n    *)\n        setConfig ENABLE_WEB_TLS 1\n        echo \"输入错误, 默认不开启。\"\n        return\n        ;;\n    esac\n}\n\nget_ip(){\n    local IP=$( ip addr | egrep -o '[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}' | egrep -v \"^192\\.168|^172\\.1[6-9]\\.|^172\\.2[0-9]\\.|^172\\.3[0-2]\\.|^10\\.|^127\\.|^255\\.|^0\\.\" | head -n 1 )\n    [ -z ${IP} ] && IP=$( wget -qO- -t1 -T2 ipv4.icanhazip.com )\n    [ -z ${IP} ] && IP=$( wget -qO- -t1 -T2 ipinfo.io/ip )\n    [ ! -z ${IP} ] && echo ${IP} || echo\n}\n\nstart() {\n    # set_https\n\n    echo $BLUE \"${m_4}...\"\n    check_process $PATH_EXEC\n\n    if [ $? -eq 0 ]; then\n        echo \"${m_5}\"\n        return\n    else\n        enable_autostart\n\n        sleep 1\n\n        check_process $PATH_EXEC\n\n        if [ $? -eq 0 ]; then\n            clear   \n            port=$(getConfig \"START_PORT\")\n            https=$(getConfig \"ENABLE_WEB_TLS\")\n            http_h=\"http://\"\n            http_t=\"未开启\"\n            \n            if [ $https = 0 ];then\n                http_t=\"当前后台为http协议访问, 请不要使用https访问, 如需使用https, 请运行脚本选择17进行设置。\"\n                http_h=\"http://\"\n            else\n                http_t=\"当前后台为https协议访问, 请不要使用http访问, 如需使用http, 请运行脚本选择17进行设置。\"\n                http_h=\"https://\"\n            fi\n\n            echo \"\"\n            echo \"\"\n            echo \"|----------------------------------------------------------------|\"\n            echo \"程序启动成功, 版本号: ${VERSION}\"\n            echo $http_t\n            echo \"后台访问地址:     ${http_h}$(get_ip):${port}\"\n            echo \"默认用户名为      qzpm19kkx\"\n            echo \"默认密码为        xloqslz913\"\n            echo \"如果您是默认密码及默认端口, 请及时在网页设置中修改账号密码及web访问端口。\"\n            echo \"|----------------------------------------------------------------|\"\n        else\n            echo \"${m_40}\"\n        fi\n    fi\n}\n\nresetpass() {\n    stop\n\n    echo \"删除配置文件\"\n\n    rm -rf $PATH_D_1\n    rm -rf $PATH_D_2\n    rm -rf $PATH_D_3\n\n    start\n\n    echo \"${m_9}\"\n}\n\nrestart() {\n    stop\n\n    start\n}\n\nstop() {\n    sleep 1\n\n    disable_autostart\n\n    sleep 1\n\n    echo \"${m_10}\"\n\n    kill_process $PATH_EXEC\n\n    sleep 1\n}\n\nkill_process() {\n    local process_name=\"$1\"\n  local pids=($(pgrep \"$process_name\"))\n  if [ ${#pids[@]} -eq 0 ]; then\n    echo \"${m_11} $process_name ${m_12}.\"\n    return 1\n  fi\n  for pid in \"${pids[@]}\"; do\n    echo \"Stopping process $pid ...\"\n    kill -TERM \"$pid\"\n  done\n  echo \"${m_13} $process_name .\"\n\n  sleep 1\n}\n\n# 设置开机启动且进程守护\nenable_autostart() {\n    echo \"${m_14}\"\n    if [ \"$(command -v systemctl)\" ]; then\n        sudo tee /etc/systemd/system/$SERVICE_NAME.service > /dev/null <<EOF\n[Unit]\nDescription=My Program\nAfter=network.target\n\n[Service]\nType=simple\nExecStart=$PATH_RUST/$PATH_EXEC\nWorkingDirectory=$PATH_RUST/\nRestart=always\nStandardOutput=file:$PATH_RUST/nohup.out\nStandardError=file:$PATH_RUST/err.log\nTimeoutStopSec=5\n\n[Install]\nWantedBy=multi-user.target\nEOF\n        sudo systemctl daemon-reload\n        sudo systemctl enable $SERVICE_NAME.service\n        sudo systemctl start $SERVICE_NAME.service\n    else\n        sudo sh -c \"echo '${PATH_RUST}/${PATH_EXEC} &' >> /etc/rc.local\"\n        sudo chmod +x /etc/rc.local\n    fi\n}\n\n# 禁用开机启动函数\ndisable_autostart() {\n    echo \"${m_15}\"\n    if [ \"$(command -v systemctl)\" ]; then\n        sudo systemctl stop $SERVICE_NAME.service\n        sudo systemctl disable $SERVICE_NAME.service\n        sudo rm /etc/systemd/system/$SERVICE_NAME.service\n        sudo systemctl daemon-reload\n    else # 系统使用的是SysVinit\n        sudo sed -i '/\\/root\\/rustminersystem\\/rustminersystem\\ &/d' /etc/rc.local\n    fi\n\n    sleep 1\n}\n\n\nISSUE() {\n    echo \"请输入指定的版本号, 例如 3.5.0\"\n}\n\nfilterResult() {\n    if [ $1 -eq 0 ]; then\n        echo \"\"\n    else\n        echo \"!!!!!!!!!!!!!!!ERROR!!!!!!!!!!!!!!!!\"\n        echo \"【${2}】${m_16}。\"\n\t\n        if [ ! $3 ];then\n            echo \"!!!!!!!!!!!!!!!ERROR!!!!!!!!!!!!!!!!\"\n            exit 1\n        fi\n    fi\n    echo -e\n}\n\ngetConfig() {\n    value=$(sed -n 's/^[[:space:]]*'$1'[[:space:]]*=[[:space:]]*\\(.*[^[:space:]]\\)\\([[:space:]]*\\)$/\\1/p' $PATH_CONFIG)\n    echo $value\n}\n\nsetConfig() {\n    if [ ! -f \"$PATH_CONFIG\" ]; then\n        echo \"${m_17}\"\n        \n        touch $PATH_CONFIG\n\n        chmod -R 777 $PATH_CONFIG\n\n        echo \"START_PORT=63521\" >> $PATH_CONFIG\n        echo \"ENABLE_WEB_TLS=0\" >> $PATH_CONFIG\n    fi\n\n    if grep -q \"^$1=\" \"$PATH_CONFIG\"; then\n        # 如果key已经存在，则修改它的值\n        sed -i \"s/^$1=.*/$1=$2/\" \"$PATH_CONFIG\"\n        echo \"已更新配置文件: $PATH_CONFIG\"\n    else\n        # 如果key不存在，则添加新的key=value行\n        echo \"$1=$2\" >> \"$PATH_CONFIG\"\n        echo \"已添加配置到文件: $PATH_CONFIG\"\n    fi\n\n    echo \"$1已修改为$2\"\n}\n\n# 关闭防火墙\ndisable_firewall() {\n    os_name=$(grep \"^ID=\" /etc/os-release | cut -d \"=\" -f 2 | tr -d '\"')\n    echo $prompt_msg_2\n\n    if [ \"$os_name\" == \"ubuntu\" ]; then\n        sudo ufw disable\n    elif [ \"$os_name\" == \"centos\" ]; then\n        sudo systemctl stop firewalld\n        sudo systemctl disable firewalld\n    else\n        echo $prompt_msg_3\n    fi\n}\n\nchange_limit() {\n    echo \"${m_18}\"\n\n    changeLimit=\"n\"\n\n    if [[ -f /etc/debian_version ]]; then\n    echo \"soft nofile 65535\" | sudo tee -a /etc/security/limits.conf\n    echo \"hard nofile 65535\" | sudo tee -a /etc/security/limits.conf\n    echo \"fs.file-max = 100000\" | sudo tee -a /etc/sysctl.conf\n    sudo sysctl -p\n\n    # add PAM configuration to enable the limits for login sessions\n    if [[ -f /etc/pam.d/common-session ]]; then\n        grep -q '^session.*pam_limits.so$' /etc/pam.d/common-session || sudo sh -c \"echo 'session required pam_limits.so' >> /etc/pam.d/common-session\"\n        fi\n    fi\n\n    # set file descriptor limits for CentOS/RHEL\n    if [[ -f /etc/redhat-release ]]; then\n        echo \"* soft nofile 65535\" | sudo tee -a /etc/security/limits.conf\n        echo \"* hard nofile 65535\" | sudo tee -a /etc/security/limits.conf\n        echo \"fs.file-max = 100000\" | sudo tee -a /etc/sysctl.conf\n        sudo sysctl -p\n    fi\n\n    # set file descriptor limits for macOS\n    if [[ \"$(uname)\" == \"Darwin\" ]]; then\n        sudo launchctl limit maxfiles 65535 65535\n        sudo sysctl -w kern.maxfiles=100000\n        sudo sysctl -w kern.maxfilesperproc=65535\n    fi\n\n    # set systemd file descriptor limits\n    if [[ -x /bin/systemctl ]]; then\n        echo \"DefaultLimitNOFILE=65535\" >>/etc/systemd/user.conf\n        echo \"DefaultLimitNOFILE=65535\" >>/etc/systemd/system.conf\n        systemctl daemon-reexec\n    fi\n\n    if [ $(grep -c \"root soft nofile\" /etc/security/limits.conf) -eq '0' ]; then\n        echo \"root soft nofile 65535\" >>/etc/security/limits.conf\n        echo \"* soft nofile 65535\" >>/etc/security/limits.conf\n        changeLimit=\"y\"\n    fi\n\n    if [ $(grep -c \"root hard nofile\" /etc/security/limits.conf) -eq '0' ]; then\n        echo \"root hard nofile 65535\" >>/etc/security/limits.conf\n        echo \"* hard nofile 65535\" >>/etc/security/limits.conf\n        changeLimit=\"y\"\n    fi\n\n    if [ $(grep -c \"DefaultLimitNOFILE=65535\" /etc/systemd/user.conf) -eq '0' ]; then\n        echo \"DefaultLimitNOFILE=65535\" >>/etc/systemd/user.conf\n        changeLimit=\"y\"\n    fi\n\n    if [ $(grep -c \"DefaultLimitNOFILE=65535\" /etc/systemd/system.conf) -eq '0' ]; then\n        echo \"DefaultLimitNOFILE=65535\" >>/etc/systemd/system.conf\n        changeLimit=\"y\"\n    fi\n\n    if [[ \"$changeLimit\" = \"y\" ]]; then\n        echo \"${m_19}\"\n    else\n        echo -n \"${m_20}\"\n        ulimit -n\n    fi\n\n    echo \"${m_21}\"\n}\n\ninstallapp() {\n    if [ -n \"$1\" ]; then\n        VERSION=\"$1\"\n        ORIGIN_EXEC=\"rustminersystem-${1}\"\n    fi\n\n    echo $ORIGIN_EXEC\n\n    echo \"${prompt_msg_1}${ORIGIN_EXEC}\"\n\n    disable_firewall\n\n    check_process $PATH_EXEC\n    \n    if [ $? -eq 0 ]; then\n        echo \"${m_22}${PATH_EXEC}${m_23}\"\n        echo \"${m_24}${PATH_EXEC}${m_25}\"\n\n        read -p \"$(echo -e \"${m_26}[1-2]：\")\" choose\n        case $choose in\n        1)\n            stop\n            ;;\n        2)\n            echo \"${m_27}\"\n            return\n            ;;\n        *)\n            echo \"${m_28}\"\n            return\n            ;;\n        esac\n    fi\n\n    echo \"${m_29}\"\n\n    if [[ ! -d $PATH_RUST ]];then\n        mkdir $PATH_RUST\n        chmod 777 -R $PATH_RUST\n    else\n        echo $YELLOW \"${m_30}\"\n    fi\n\n    if [[ ! -d $PATH_NOHUP ]];then\n        touch $PATH_NOHUP\n        touch $PATH_ERR\n\n        chmod 777 -R $PATH_NOHUP\n        chmod 777 -R $PATH_ERR\n    fi\n\n    if [[ ! -f $PATH_CONFIG ]];then\n        setConfig START_PORT $((RANDOM%65535+1))\n    fi\n\n    echo \"${m_31}\"\n\n    wget -P $PATH_RUST \"${DOWNLOAD_HOST}/${ORIGIN_EXEC}\" -O \"${PATH_RUST}/${PATH_EXEC}\" 1>/dev/null\n\n    filterResult $? \"${m_32}\"\n\n    chmod 777 -R \"${PATH_RUST}/${PATH_EXEC}\"\n\n    # enable_autostart\n\n    start\n}\n\nuninstall() {\n    stop\n\n    rm -rf ${PATH_RUST}\n\n    disable_autostart\n\n    echo \"${m_33}\"\n}\n\ncheck_hub() {\n    echo \"${m_34}\"\n    tail -f $PATH_NOHUP\n}\n\ncheck_err() {\n    echo \"${m_34}\"\n    tail -f $PATH_ERR\n}\n\nclearlog() {\n    echo \"${m_35}\"\n    rm $PATH_NOHUP > /dev/null 2>&1\n    rm $PATH_ERR > /dev/null 2>&1\n    echo \"${m_36}\"\n}\n\n\nlookport() {\n    port=$(getConfig \"START_PORT\")\n\n    echo \"${m_37}${port}\"\n}\n\ninstall_target() {\n    echo \"${m_38}\"\n    echo \"\"\n    ISSUE\n    echo \"\"\n    read -p \"$(echo -e \"${m_39}\")\" choose\n\n    installapp $choose\n}\n\n\nread -p \"$(echo -e \"[1-17]：\")\" choose\n\ncase $choose in\n1)\n    installapp $VERSION\n    ;;\n2)\n    update\n    ;;\n3)\n    start\n    ;;\n4)\n    stop\n    ;;\n5)\n    restart\n    ;;\n6)\n    set_port\n    ;;\n7)\n    change_limit\n    ;;\n8)\n    enable_autostart\n    ;;\n9)\n    disable_autostart\n    ;;\n10)\n    check_hub\n    ;;\n11)\n    check_err\n    ;;\n12)\n    clearlog\n    ;;\n13)\n    lookport\n    ;;\n14)\n    uninstall\n    ;;\n15)\n    resetpass\n    ;;\n16)\n    install_target\n    ;;\n17)\n    set_https_admin\n    ;;\n*)\n    echo $prompt_error_command\n    ;;\nesac"
        },
        {
          "name": "excel端口导入模板.xlsx",
          "type": "blob",
          "size": 11.6806640625,
          "content": null
        },
        {
          "name": "image",
          "type": "tree",
          "content": null
        },
        {
          "name": "install.sh",
          "type": "blob",
          "size": 17.8466796875,
          "content": "#!/bin/bash\n\nVERSION=\"4.3.1\"\nDOWNLOAD_HOST=\"https://github.com/EvilGenius-dot/RustMinerSystem/raw/main/linux\"\nORIGIN_EXEC=\"rustminersystem-${VERSION}\"\n\nSERVICE_NAME=\"rustservice\"\n\nPATH_RUST=\"/root/rustminersystem\"\nPATH_EXEC=\"rustminersystem\"\n\nPATH_CONFIG=\"${PATH_RUST}/rust-config\"\nPATH_NOHUP=\"${PATH_RUST}/nohup.out\"\nPATH_ERR=\"${PATH_RUST}/err.log\"\nPATH_CUE=\"${PATH_RUST}/cue\"\nPATH_D_1=\"${PATH_RUST}/0.d1\"\nPATH_D_2=\"${PATH_RUST}/0.d1-shm\"\nPATH_D_3=\"${PATH_RUST}/0.d1-wal\"\n\nRED=\"\\033[31m\"\nGREEN=\"\\033[32m\"\nYELLOW=\"\\033[33m\"\nBLUE=\"\\033[34m\"\nBOLD=\"\\033[1m\"\nRESET=\"\\033[0m\"\n\n\n# 语言选择菜单\nclear\necho \"Please select your language / 请选择语言:\"\n# echo \"\"\necho \"1. English\"\necho \"2. 中文\"\n# echo \"\"\nread -p \"$(echo -e \"[1-2]：\")\" lang_choice\n\nif [ \"$lang_choice\" = \"1\" ]; then\n    prompt_title=\"---------- English Menu ----------\"\n    prompt_install=\"1. Install\"\n    prompt_update=\"2. Update\"\n    prompt_start=\"3. Start software\"\n    prompt_stop=\"4. Stop software\"\n    prompt_restart=\"5. Restart software\"\n    prompt_port=\"6. Modify startup port\"\n    prompt_ulimit=\"7. Remove Linux system connection limit (requires server restart to take effect)\"\n    prompt_auto_start=\"8. Set automatic startup\"\n    prompt_disable_auto_start=\"9. Disable automatic startup...\"\n    prompt_status=\"10. Check program running status\"\n    prompt_error_log=\"11. View error log\"\n    prompt_clear_log=\"12. Clear log files\"\n    prompt_web_port=\"13. View current WEB access port\"\n    prompt_uninstall=\"14. Uninstall\"\n    prompt_reset_pwd=\"15. Reset account password\"\n    prompt_target_version=\"16. Install specified version\"\n    prompt_root_no=\"Please run this script as root!\"\n    prompt_error_command=\"Invalid command entered. Please try again.\"\n    prompt_msg_1=\"Start installation\"\n    prompt_msg_2=\"Disable firewall\"\n    prompt_msg_3=\"Unknown operating system, failed to disable firewall\"\n    m_4=\"Start program\"\n    m_5=\"Program is already running, please do not start it again.\"\n    m_6=\"Program started successfully, WEB access port is\"\n    m_7=\"Default account is qzpm19kkx default password is xloqslz913\"\n    m_8=\"If you are using the default password and port, please change the account password and web access port in a timely manner through the web settings.\"\n    m_9=\"Password reset completed, changed to default account password qzpm19kkx xloqslz913\"\n    m_10=\"Terminating process...\"\n    m_11=\"Not found\"\n    m_12=\"Process\"\n    m_13=\"Terminated\"\n    m_14=\"Set up automatic startup\"\n    m_15=\"Disable automatic startup...\"\n    m_16=\"Failed\"\n    m_17=\"Environment variable configuration file not found, creating one now\"\n    m_18=\"Modify system connection limit\"\n    m_19=\"Connection limit has been changed to 65535, please restart the server for the change to take effect\"\n    m_20=\"Current connection limit:\"\n    m_21=\"Modification completed, please restart the server for the change to take effect\"\n    m_22=\"Detected running\"\n    m_23=\", it must be stopped before continuing with the installation.\"\n    m_24=\"Enter 1 to stop the running\"\n    m_25=\"and continue with the installation, enter 2 to cancel the installation.\"\n    m_26=\"Please choose\"\n    m_27=\"Cancel installation\"\n    m_28=\"Invalid input, cancelling installation.\"\n    m_29=\"Creating directory\"\n    m_30=\"Directory already exists, no need to create it again, continuing with the installation.\"\n    m_31=\"Downloading...\"\n    m_32=\"Downloading program\"\n    m_33=\"Uninstall completed\"\n    m_34=\"Press CTRL+C to run in the background\"\n    m_35=\"Cleaning up logs\"\n    m_36=\"Cleanup completed\"\n    m_37=\"Current WEB access port is\"\n    m_38=\"Enter the published version number to install:\"\n    m_39=\"Please enter the version number:\"\n    m_40=\"Program startup failure!!!\"\n\nelif [ \"$lang_choice\" = \"2\" ]; then\n    prompt_title=\"---------- 中文菜单 ----------\"\n    prompt_install=\"1. 安装\"\n    prompt_update=\"2. 更新\"\n    prompt_start=\"3. 启动软件\"\n    prompt_stop=\"4. 停止软件\"\n    prompt_restart=\"5. 重启软件\"\n    prompt_port=\"6. 修改启动端口\"\n    prompt_ulimit=\"7. 解除Linux系统连接数限制（需要重启服务器生效）\"\n    prompt_auto_start=\"8. 设置开机启动\"\n    prompt_disable_auto_start=\"9. 关闭开机启动\"\n    prompt_status=\"10. 查看程序运行状态\"\n    prompt_error_log=\"11. 查看错误日志\"\n    prompt_clear_log=\"12. 清理日志文件\"\n    prompt_web_port=\"13. 查看当前WEB访问端口\"\n    prompt_uninstall=\"14. 卸载\"\n    prompt_reset_pwd=\"15. 重置认账号密码\"\n    prompt_target_version=\"16. 安装指定版本\"\n    prompt_root_no=\"请使用root用户运行此脚本！\"\n    prompt_error_command=\"输入了错误的指令, 请重新输入。\"\n    prompt_msg_1=\"开始安装\"\n    prompt_msg_2=\"关闭防火墙\"\n    prompt_msg_3=\"未知的操作系统, 关闭防火墙失败\"\n    m_4=\"启动程序\"\n    m_5=\"程序已经启动，请不要重复启动。\"\n    m_6=\"程序启动成功, WEB访问端口\"\n    m_7=\"默认账号 qzpm19kkx 默认密码 xloqslz913\"\n    m_8=\"如果您是默认密码及默认端口, 请及时在网页设置中修改账号密码及web访问端口。\"\n    m_9=\"重置密码完成, 已修改为默认账号密码 qzpm19kkx xloqslz913\"\n    m_10=\"终止进程...\"\n    m_11=\"未发现\"\n    m_12=\"进程\"\n    m_13=\"终止\"\n    m_14=\"设置开机启动\"\n    m_15=\"关闭开机启动...\"\n    m_16=\"失败\"\n    m_17=\"未发现环境变量配置文件, 开始创建\"\n    m_18=\"修改系统连接数限制\"\n    m_19=\"连接数限制已修改为65535,重启服务器后生效\"\n    m_20=\"当前连接数限制：\"\n    m_21=\"修改完成, 重启服务器后生效\"\n    m_22=\"发现正在运行的\"\n    m_23=\", 需要停止才可继续安装。\"\n    m_24=\"输入1停止正在运行的\"\n    m_25=\"并且继续安装, 输入2取消安装。\"\n    m_26=\"请选择\"\n    m_27=\"取消安装\"\n    m_28=\"输入错误, 取消安装。\"\n    m_29=\"开始创建目录\"\n    m_30=\"目录已存在, 无需重复创建, 继续执行安装。\"\n    m_31=\"开始下载...\"\n    m_32=\"下载程序\"\n    m_33=\"卸载完成\"\n    m_34=\"按住CTRL+C后台运行\"\n    m_35=\"清理日志\"\n    m_36=\"清理完成\"\n    m_37=\"当前WEB访问端口\"\n    m_38=\"输入已发布的版本来进行安装：\"\n    m_39=\"请输入版本号：\"\n    m_40=\"程序启动失败!!!\"\nelse\n  echo \"无效的选择\"\n  exit 1\nfi\n\nclear\n\n[ $(id -u) != \"0\" ] && { echo \"$prompt_root_no\"; exit 1; }\n\necho \"$prompt_title\"\necho \"$prompt_install\"\necho \"$prompt_update\"\necho \"$prompt_start\"\necho \"$prompt_stop\"\necho \"$prompt_restart\"\necho \"$prompt_port\"\necho \"$prompt_ulimit\"\necho \"$prompt_auto_start\"\necho \"$prompt_disable_auto_start\"\necho \"$prompt_status\"\necho \"$prompt_error_log\"\necho \"$prompt_clear_log\"\necho \"$prompt_web_port\"\necho \"$prompt_uninstall\"\necho \"$prompt_reset_pwd\"\necho \"$prompt_target_version\"\necho \"17. 设置后台https访问\"\n\nupdate() {\n    stop\n\n    disable_autostart\n\n    installapp $VERSION\n}\n\n\ncheck_process() {\n    if [[ $(uname) == \"Linux\" ]]; then\n        if pgrep -x \"$1\" >/dev/null; then\n            return 0\n        else\n            return 1\n        fi\n    else\n        if ps aux | grep -v grep | grep \"$1\" >/dev/null; then\n            return 0\n        else\n            return 1\n        fi\n    fi\n}\n\nset_port() {\n    read -p \"$(echo -e \"请输入要设置的端口号：\")\" choose\n\n    setConfig START_PORT $choose\n\n    stop\n\n    start\n}\n\nset_https_admin() {\n    stop\n\n    start\n}\n\nset_https() {\n    echo \"是否开启https后台访问? 请注意,开启后后台地址必须使用https://访问, 关闭后必须使用http://访问。\"\n    echo \"1. 不开启\"\n    echo \"2. 开启\"\n\n    read -p \"$(echo -e \"请选择[1-2]?：\")\" choose\n\n    case $choose in\n    1)\n        setConfig ENABLE_WEB_TLS 0\n        ;;\n    2)\n        setConfig ENABLE_WEB_TLS 1\n        return\n        ;;\n    *)\n        setConfig ENABLE_WEB_TLS 1\n        echo \"输入错误, 默认不开启。\"\n        return\n        ;;\n    esac\n}\n\nget_ip(){\n    local IP=$( ip addr | egrep -o '[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}' | egrep -v \"^192\\.168|^172\\.1[6-9]\\.|^172\\.2[0-9]\\.|^172\\.3[0-2]\\.|^10\\.|^127\\.|^255\\.|^0\\.\" | head -n 1 )\n    [ -z ${IP} ] && IP=$( wget -qO- -t1 -T2 ipv4.icanhazip.com )\n    [ -z ${IP} ] && IP=$( wget -qO- -t1 -T2 ipinfo.io/ip )\n    [ ! -z ${IP} ] && echo ${IP} || echo\n}\n\nstart() {\n    # set_https\n\n    echo \"${m_4}...\"\n    check_process $PATH_EXEC\n\n    if [ $? -eq 0 ]; then\n        echo \"${m_5}\"\n        return\n    else\n        enable_autostart\n\n        sleep 1\n\n        check_process $PATH_EXEC\n\n        if [ $? -eq 0 ]; then\n            clear   \n            port=$(getConfig \"START_PORT\")\n            https=$(getConfig \"ENABLE_WEB_TLS\")\n            http_h=\"http://\"\n            http_t=\"未开启\"\n            \n            if [ $https = 0 ];then\n                http_t=\"当前后台为http协议访问, 请不要使用https访问, 如需使用https, 请运行脚本选择17进行设置。\"\n                http_h=\"http://\"\n            else\n                http_t=\"当前后台为https协议访问, 请不要使用http访问, 如需使用http, 请运行脚本选择17进行设置。\"\n                http_h=\"https://\"\n            fi\n\n            echo \"\"\n            echo \"\"\n            echo -e \"|----------------------------------------------------------------|\"\n            echo -e \"           ✅程序启动成功, 版本号: ${BOLD}${BLUE}${VERSION}${RESET}          \"\n            echo -e \"\"\n            echo -e \"👉️后台访问地址:     ${BOLD}${GREEN}${http_h}$(get_ip):${port}${RESET}\"\n            echo -e \"👉️默认用户名:       ${BOLD}${GREEN}qzpm19kkx${RESET}\"\n            echo -e \"👉️默认密码:         ${BOLD}${GREEN}xloqslz913${RESET}\"\n            echo -e \"\"\n            echo -e \"⭐️提示: ${BOLD}${BLUE}公网访问管理后台, 请记得打开运营商后台防火墙。${RESET}\"\n            echo -e \"⭐️提示: ${BOLD}${BLUE}如果您是默认密码及默认端口, 请及时在网页设置中修改账号密码及web访问端口。${RESET}\"\n            echo -e \"⭐️提示: ${BOLD}${BLUE}${http_t}${RESET}\"\n            echo \"|----------------------------------------------------------------|\"\n        else\n            echo \"${m_40}\"\n        fi\n    fi\n}\n\nresetpass() {\n    stop\n\n    echo \"删除配置文件\"\n\n    rm -rf $PATH_D_1\n    rm -rf $PATH_D_2\n    rm -rf $PATH_D_3\n\n    start\n\n    echo \"${m_9}\"\n}\n\nrestart() {\n    stop\n\n    start\n}\n\nstop() {\n    sleep 1\n\n    disable_autostart\n\n    sleep 1\n\n    echo \"${m_10}\"\n\n    kill_process $PATH_EXEC\n\n    sleep 1\n}\n\nkill_process() {\n    local process_name=\"$1\"\n  local pids=($(pgrep \"$process_name\"))\n  if [ ${#pids[@]} -eq 0 ]; then\n    echo \"${m_11} $process_name ${m_12}.\"\n    return 1\n  fi\n  for pid in \"${pids[@]}\"; do\n    echo \"Stopping process $pid ...\"\n    kill -TERM \"$pid\"\n  done\n  echo \"${m_13} $process_name .\"\n\n  sleep 1\n}\n\n# 设置开机启动且进程守护\nenable_autostart() {\n    echo \"${m_14}\"\n    if [ \"$(command -v systemctl)\" ]; then\n        tee /etc/systemd/system/$SERVICE_NAME.service > /dev/null <<EOF\n[Unit]\nDescription=My Program\nAfter=network.target\n\n[Service]\nType=simple\nExecStart=$PATH_RUST/$PATH_EXEC\nWorkingDirectory=$PATH_RUST/\nRestart=always\nStandardOutput=file:$PATH_RUST/nohup.out\nStandardError=file:$PATH_RUST/err.log\nTimeoutStopSec=5\n\n[Install]\nWantedBy=multi-user.target\nEOF\n        systemctl daemon-reload\n        systemctl enable $SERVICE_NAME.service\n        systemctl start $SERVICE_NAME.service\n    else\n        sh -c \"echo '${PATH_RUST}/${PATH_EXEC} &' >> /etc/rc.local\"\n        chmod +x /etc/rc.local\n    fi\n}\n\n# 禁用开机启动函数\ndisable_autostart() {\n    echo \"${m_15}\"\n    if [ \"$(command -v systemctl)\" ]; then\n        systemctl stop $SERVICE_NAME.service\n        systemctl disable $SERVICE_NAME.service\n        rm /etc/systemd/system/$SERVICE_NAME.service\n        systemctl daemon-reload\n    else # 系统使用的是SysVinit\n        sed -i '/\\/root\\/rustminersystem\\/rustminersystem\\ &/d' /etc/rc.local\n    fi\n\n    sleep 1\n}\n\n\nISSUE() {\n    echo \"请输入指定的版本号, 例如 3.5.0\"\n}\n\nfilterResult() {\n    if [ $1 -eq 0 ]; then\n        echo \"\"\n    else\n        echo \"!!!!!!!!!!!!!!!ERROR!!!!!!!!!!!!!!!!\"\n        echo \"【${2}】${m_16}。\"\n\t\n        if [ ! $3 ];then\n            echo \"!!!!!!!!!!!!!!!ERROR!!!!!!!!!!!!!!!!\"\n            exit 1\n        fi\n    fi\n    echo -e\n}\n\ngetConfig() {\n    value=$(sed -n 's/^[[:space:]]*'$1'[[:space:]]*=[[:space:]]*\\(.*[^[:space:]]\\)\\([[:space:]]*\\)$/\\1/p' $PATH_CONFIG)\n    echo $value\n}\n\nsetConfig() {\n    if [ ! -f \"$PATH_CONFIG\" ]; then\n        echo \"${m_17}\"\n        \n        touch $PATH_CONFIG\n\n        chmod -R 777 $PATH_CONFIG\n\n        echo \"START_PORT=63521\" >> $PATH_CONFIG\n        echo \"ENABLE_WEB_TLS=0\" >> $PATH_CONFIG\n    fi\n\n    if grep -q \"^$1=\" \"$PATH_CONFIG\"; then\n        # 如果key已经存在，则修改它的值\n        sed -i \"s/^$1=.*/$1=$2/\" \"$PATH_CONFIG\"\n        echo \"已更新配置文件: $PATH_CONFIG\"\n    else\n        # 如果key不存在，则添加新的key=value行\n        echo \"$1=$2\" >> \"$PATH_CONFIG\"\n        echo \"已添加配置到文件: $PATH_CONFIG\"\n    fi\n\n    echo \"$1已修改为$2\"\n}\n\n# 关闭防火墙\ndisable_firewall() {\n    os_name=$(grep \"^ID=\" /etc/os-release | cut -d \"=\" -f 2 | tr -d '\"')\n    echo $prompt_msg_2\n\n    if [ \"$os_name\" == \"ubuntu\" ]; then\n        ufw disable\n    elif [ \"$os_name\" == \"centos\" ]; then\n        systemctl stop firewalld\n        systemctl disable firewalld\n    else\n        echo $prompt_msg_3\n    fi\n}\n\nchange_limit() {\n    echo \"${m_18}\"\n\n    changeLimit=\"n\"\n\n    if [[ -f /etc/debian_version ]]; then\n    echo \"soft nofile 65535\" | tee -a /etc/security/limits.conf\n    echo \"hard nofile 65535\" | tee -a /etc/security/limits.conf\n    echo \"fs.file-max = 100000\" | tee -a /etc/sysctl.conf\n    sysctl -p\n\n    # add PAM configuration to enable the limits for login sessions\n    if [[ -f /etc/pam.d/common-session ]]; then\n        grep -q '^session.*pam_limits.so$' /etc/pam.d/common-session || sh -c \"echo 'session required pam_limits.so' >> /etc/pam.d/common-session\"\n        fi\n    fi\n\n    # set file descriptor limits for CentOS/RHEL\n    if [[ -f /etc/redhat-release ]]; then\n        echo \"* soft nofile 65535\" | tee -a /etc/security/limits.conf\n        echo \"* hard nofile 65535\" | tee -a /etc/security/limits.conf\n        echo \"fs.file-max = 100000\" | tee -a /etc/sysctl.conf\n        sysctl -p\n    fi\n\n    # set file descriptor limits for macOS\n    if [[ \"$(uname)\" == \"Darwin\" ]]; then\n        launchctl limit maxfiles 65535 65535\n        sysctl -w kern.maxfiles=100000\n        sysctl -w kern.maxfilesperproc=65535\n    fi\n\n    # set systemd file descriptor limits\n    if [[ -x /bin/systemctl ]]; then\n        echo \"DefaultLimitNOFILE=65535\" >>/etc/systemd/user.conf\n        echo \"DefaultLimitNOFILE=65535\" >>/etc/systemd/system.conf\n        systemctl daemon-reexec\n    fi\n\n    if [ $(grep -c \"root soft nofile\" /etc/security/limits.conf) -eq '0' ]; then\n        echo \"root soft nofile 65535\" >>/etc/security/limits.conf\n        echo \"* soft nofile 65535\" >>/etc/security/limits.conf\n        changeLimit=\"y\"\n    fi\n\n    if [ $(grep -c \"root hard nofile\" /etc/security/limits.conf) -eq '0' ]; then\n        echo \"root hard nofile 65535\" >>/etc/security/limits.conf\n        echo \"* hard nofile 65535\" >>/etc/security/limits.conf\n        changeLimit=\"y\"\n    fi\n\n    if [ $(grep -c \"DefaultLimitNOFILE=65535\" /etc/systemd/user.conf) -eq '0' ]; then\n        echo \"DefaultLimitNOFILE=65535\" >>/etc/systemd/user.conf\n        changeLimit=\"y\"\n    fi\n\n    if [ $(grep -c \"DefaultLimitNOFILE=65535\" /etc/systemd/system.conf) -eq '0' ]; then\n        echo \"DefaultLimitNOFILE=65535\" >>/etc/systemd/system.conf\n        changeLimit=\"y\"\n    fi\n\n    if [[ \"$changeLimit\" = \"y\" ]]; then\n        echo \"${m_19}\"\n    else\n        echo -n \"${m_20}\"\n        ulimit -n\n    fi\n\n    echo \"${m_21}\"\n}\n\ninstallapp() {\n    if [ -n \"$1\" ]; then\n        VERSION=\"$1\"\n        ORIGIN_EXEC=\"rustminersystem-${1}\"\n    fi\n\n    echo $ORIGIN_EXEC\n\n    echo \"${prompt_msg_1}${ORIGIN_EXEC}\"\n\n    disable_firewall\n\n    check_process $PATH_EXEC\n    \n    if [ $? -eq 0 ]; then\n        echo \"${m_22}${PATH_EXEC}${m_23}\"\n        echo \"${m_24}${PATH_EXEC}${m_25}\"\n\n        read -p \"$(echo -e \"${m_26}[1-2]：\")\" choose\n        case $choose in\n        1)\n            stop\n            ;;\n        2)\n            echo \"${m_27}\"\n            return\n            ;;\n        *)\n            echo \"${m_28}\"\n            return\n            ;;\n        esac\n    fi\n\n    echo \"${m_29}\"\n\n    if [[ ! -d $PATH_RUST ]];then\n        mkdir $PATH_RUST\n        chmod 777 -R $PATH_RUST\n    else\n        echo $YELLOW \"${m_30}\"\n    fi\n\n    if [[ ! -d $PATH_NOHUP ]];then\n        touch $PATH_NOHUP\n        touch $PATH_ERR\n\n        chmod 777 -R $PATH_NOHUP\n        chmod 777 -R $PATH_ERR\n    fi\n\n    if [[ ! -f $PATH_CONFIG ]];then\n        setConfig START_PORT $((RANDOM%65535+1))\n    fi\n\n    change_limit\n\n    echo \"${m_31}\"\n\n    wget -P $PATH_RUST \"${DOWNLOAD_HOST}/${ORIGIN_EXEC}\" -O \"${PATH_RUST}/${PATH_EXEC}\" 1>/dev/null\n\n    filterResult $? \"${m_32}\"\n\n    chmod 777 -R \"${PATH_RUST}/${PATH_EXEC}\"\n\n    # enable_autostart\n\n    start\n}\n\nuninstall() {\n    stop\n\n    rm -rf ${PATH_RUST}\n\n    disable_autostart\n\n    echo \"${m_33}\"\n}\n\ncheck_hub() {\n    echo \"${m_34}\"\n    tail -f $PATH_NOHUP\n}\n\ncheck_err() {\n    echo \"${m_34}\"\n    tail -f $PATH_ERR\n}\n\nclearlog() {\n    echo \"${m_35}\"\n    rm $PATH_NOHUP > /dev/null 2>&1\n    rm $PATH_ERR > /dev/null 2>&1\n    echo \"${m_36}\"\n}\n\n\nlookport() {\n    port=$(getConfig \"START_PORT\")\n\n    echo \"${m_37}${port}\"\n}\n\ninstall_target() {\n    echo \"${m_38}\"\n    echo \"\"\n    ISSUE\n    echo \"\"\n    read -p \"$(echo -e \"${m_39}\")\" choose\n\n    installapp $choose\n}\n\n\nread -p \"$(echo -e \"[1-17]：\")\" choose\n\ncase $choose in\n1)\n    installapp $VERSION\n    ;;\n2)\n    update\n    ;;\n3)\n    start\n    ;;\n4)\n    stop\n    ;;\n5)\n    restart\n    ;;\n6)\n    set_port\n    ;;\n7)\n    change_limit\n    ;;\n8)\n    enable_autostart\n    ;;\n9)\n    disable_autostart\n    ;;\n10)\n    check_hub\n    ;;\n11)\n    check_err\n    ;;\n12)\n    clearlog\n    ;;\n13)\n    lookport\n    ;;\n14)\n    uninstall\n    ;;\n15)\n    resetpass\n    ;;\n16)\n    install_target\n    ;;\n17)\n    set_https_admin\n    ;;\n*)\n    echo $prompt_error_command\n    ;;\nesac"
        },
        {
          "name": "linux",
          "type": "tree",
          "content": null
        },
        {
          "name": "origin.json",
          "type": "blob",
          "size": 0.025390625,
          "content": "{\n    \"version\": \"4.3.1\"\n}"
        },
        {
          "name": "windows",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}