{
  "metadata": {
    "timestamp": 1736709370777,
    "page": 76,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjgw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "ogham/dog",
      "stars": 6248,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.060546875,
          "content": "/target\n/tarpaulin-report.html\nfuzz-*.log\n/cargo-timing*.html\n"
        },
        {
          "name": ".rustfmt.toml",
          "type": "blob",
          "size": 0.029296875,
          "content": "disable_all_formatting = true\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.80859375,
          "content": "language: rust\nrust:\n  - 1.45.0\n  - stable\n  - beta\n  - nightly\n\nscript:\n  - cargo build --verbose --workspace\n  - cargo test --verbose --workspace --no-run\n  - cargo test --verbose --workspace\n\nos:\n  - windows\n  - linux\n  - osx\n\njobs:\n  fast_finish: true\n  allow_failures:\n    - rust: nightly\n\n  include:\n    - name: 'Rust: lint with Clippy'\n      rust: stable\n      install:\n        - rustup component add clippy\n      script:\n        - cargo clippy\n\n    - name: 'Rust: mutation testing'\n      rust: nightly\n      install:\n        - git clone https://github.com/llogiq/mutagen.git\n        - cd mutagen/mutagen-runner\n        - cargo install --path .\n        - cd ../..\n      script:\n        - cargo test    --package dns --features=dns/with_mutagen -- --quiet\n        - cargo mutagen --package dns --features=dns/with_mutagen\n"
        },
        {
          "name": "Cargo.lock",
          "type": "blob",
          "size": 23.77734375,
          "content": "# This file is automatically @generated by Cargo.\n# It is not intended for manual editing.\n[[package]]\nname = \"addr2line\"\nversion = \"0.14.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a55f82cfe485775d02112886f4169bde0c5894d75e79ead7eafe7e40a25e45f7\"\ndependencies = [\n \"gimli\",\n]\n\n[[package]]\nname = \"adler\"\nversion = \"1.0.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f26201604c87b1e01bd3d98f8d5d9a8fcbb815e8cedb41ffccbeb4bf593a35fe\"\n\n[[package]]\nname = \"ansi_term\"\nversion = \"0.12.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d52a9bb7ec0cf484c551830a7ce27bd20d67eac647e1befb56b0be4ee39a55d2\"\ndependencies = [\n \"winapi\",\n]\n\n[[package]]\nname = \"atty\"\nversion = \"0.2.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d9b39be18770d11421cdb1b9947a45dd3f37e93092cbf377614828a319d5fee8\"\ndependencies = [\n \"hermit-abi\",\n \"libc\",\n \"winapi\",\n]\n\n[[package]]\nname = \"autocfg\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cdb031dd78e28731d87d56cc8ffef4a8f36ca26c38fe2de700543e627f8a464a\"\n\n[[package]]\nname = \"backtrace\"\nversion = \"0.3.56\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9d117600f438b1707d4e4ae15d3595657288f8235a0eb593e80ecc98ab34e1bc\"\ndependencies = [\n \"addr2line\",\n \"cfg-if\",\n \"libc\",\n \"miniz_oxide\",\n \"object\",\n \"rustc-demangle\",\n]\n\n[[package]]\nname = \"base64\"\nversion = \"0.13.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"904dfeac50f3cdaba28fc6f57fdcddb75f49ed61346676a78c4ffe55877802fd\"\n\n[[package]]\nname = \"bitflags\"\nversion = \"1.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cf1de2fe8c75bc145a2f577add951f8134889b4795d47466a54a5c846d691693\"\n\n[[package]]\nname = \"bumpalo\"\nversion = \"3.7.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9c59e7af012c713f529e7a3ee57ce9b31ddd858d4b512923602f74608b009631\"\n\n[[package]]\nname = \"byteorder\"\nversion = \"1.4.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"14c189c53d098945499cdfa7ecc63567cf3886b3332b312a5b4585d8d3a6a610\"\n\n[[package]]\nname = \"cc\"\nversion = \"1.0.67\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e3c69b077ad434294d3ce9f1f6143a2a4b89a8a2d54ef813d85003a4fd1137fd\"\n\n[[package]]\nname = \"cfg-if\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd\"\n\n[[package]]\nname = \"core-foundation\"\nversion = \"0.9.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0a89e2ae426ea83155dccf10c0fa6b1463ef6d5fcb44cee0b224a408fa640a62\"\ndependencies = [\n \"core-foundation-sys\",\n \"libc\",\n]\n\n[[package]]\nname = \"core-foundation-sys\"\nversion = \"0.8.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ea221b5284a47e40033bf9b66f35f984ec0ea2931eb03505246cd27a963f981b\"\n\n[[package]]\nname = \"ctor\"\nversion = \"0.1.20\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5e98e2ad1a782e33928b96fc3948e7c355e5af34ba4de7670fe8bac2a3b2006d\"\ndependencies = [\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"datetime\"\nversion = \"0.5.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d0fcb4df22ae812fa2f6d5e3b577247584cc67fce06ad0779168d1dd41cbcce3\"\ndependencies = [\n \"libc\",\n \"redox_syscall 0.1.57\",\n \"winapi\",\n]\n\n[[package]]\nname = \"diff\"\nversion = \"0.1.12\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0e25ea47919b1560c4e3b7fe0aaab9becf5b84a10325ddf7db0f0ba5e1026499\"\n\n[[package]]\nname = \"dns\"\nversion = \"0.2.0-pre\"\ndependencies = [\n \"base64\",\n \"byteorder\",\n \"log\",\n \"mutagen\",\n \"pretty_assertions\",\n \"unic-idna\",\n]\n\n[[package]]\nname = \"dns-transport\"\nversion = \"0.2.0-pre\"\ndependencies = [\n \"cfg-if\",\n \"dns\",\n \"httparse\",\n \"log\",\n \"native-tls\",\n \"rustls\",\n \"webpki\",\n \"webpki-roots\",\n]\n\n[[package]]\nname = \"dog\"\nversion = \"0.2.0-pre\"\ndependencies = [\n \"ansi_term\",\n \"atty\",\n \"datetime\",\n \"dns\",\n \"dns-transport\",\n \"getopts\",\n \"ipconfig\",\n \"json\",\n \"log\",\n \"pretty_assertions\",\n \"rand\",\n]\n\n[[package]]\nname = \"failure\"\nversion = \"0.1.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d32e9bd16cc02eae7db7ef620b392808b89f6a5e16bb3497d159c6b92a0f4f86\"\ndependencies = [\n \"backtrace\",\n \"failure_derive\",\n]\n\n[[package]]\nname = \"failure_derive\"\nversion = \"0.1.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"aa4da3c766cd7a0db8242e326e9e4e081edd567072893ed320008189715366a4\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n \"synstructure\",\n]\n\n[[package]]\nname = \"foreign-types\"\nversion = \"0.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f6f339eb8adc052cd2ca78910fda869aefa38d22d5cb648e6485e4d3fc06f3b1\"\ndependencies = [\n \"foreign-types-shared\",\n]\n\n[[package]]\nname = \"foreign-types-shared\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"00b0228411908ca8685dba7fc2cdd70ec9990a6e753e89b6ac91a84c40fbaf4b\"\n\n[[package]]\nname = \"getopts\"\nversion = \"0.2.21\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"14dbbfd5c71d70241ecf9e6f13737f7b5ce823821063188d7e46c41d371eebd5\"\ndependencies = [\n \"unicode-width\",\n]\n\n[[package]]\nname = \"getrandom\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c9495705279e7140bf035dde1f6e750c162df8b625267cd52cc44e0b156732c8\"\ndependencies = [\n \"cfg-if\",\n \"libc\",\n \"wasi\",\n]\n\n[[package]]\nname = \"gimli\"\nversion = \"0.23.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f6503fe142514ca4799d4c26297c4248239fe8838d827db6bd6065c6ed29a6ce\"\n\n[[package]]\nname = \"hermit-abi\"\nversion = \"0.1.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"322f4de77956e22ed0e5032c359a0f1273f1f7f0d79bfa3b8ffbc730d7fbcc5c\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"httparse\"\nversion = \"1.3.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"615caabe2c3160b313d52ccc905335f4ed5f10881dd63dc5699d47e90be85691\"\n\n[[package]]\nname = \"ipconfig\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f7e2f18aece9709094573a9f24f483c4f65caa4298e2f7ae1b71cc65d853fad7\"\ndependencies = [\n \"socket2\",\n \"widestring\",\n \"winapi\",\n \"winreg\",\n]\n\n[[package]]\nname = \"itoa\"\nversion = \"0.4.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dd25036021b0de88a0aff6b850051563c6516d0bf53f8638938edbb9de732736\"\n\n[[package]]\nname = \"js-sys\"\nversion = \"0.3.49\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dc15e39392125075f60c95ba416f5381ff6c3a948ff02ab12464715adf56c821\"\ndependencies = [\n \"wasm-bindgen\",\n]\n\n[[package]]\nname = \"json\"\nversion = \"0.12.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"078e285eafdfb6c4b434e0d31e8cfcb5115b651496faca5749b88fafd4f23bfd\"\n\n[[package]]\nname = \"lazy_static\"\nversion = \"1.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e2abad23fbc42b3700f2f279844dc832adb2b2eb069b2df918f455c4e18cc646\"\n\n[[package]]\nname = \"libc\"\nversion = \"0.2.91\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8916b1f6ca17130ec6568feccee27c156ad12037880833a3b842a823236502e7\"\n\n[[package]]\nname = \"log\"\nversion = \"0.4.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"51b9bbe6c47d51fc3e1a9b945965946b4c44142ab8792c50835a980d362c2710\"\ndependencies = [\n \"cfg-if\",\n]\n\n[[package]]\nname = \"matches\"\nversion = \"0.1.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7ffc5c5338469d4d3ea17d269fa8ea3512ad247247c30bd2df69e68309ed0a08\"\n\n[[package]]\nname = \"miniz_oxide\"\nversion = \"0.4.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a92518e98c078586bc6c934028adcca4c92a53d6a958196de835170a01d84e4b\"\ndependencies = [\n \"adler\",\n \"autocfg\",\n]\n\n[[package]]\nname = \"mutagen\"\nversion = \"0.2.0\"\nsource = \"git+https://github.com/llogiq/mutagen#933bbaf4edaa22f6237b2201dff2940ff7f4193c\"\ndependencies = [\n \"mutagen-core\",\n \"mutagen-transform\",\n]\n\n[[package]]\nname = \"mutagen-core\"\nversion = \"0.2.0\"\nsource = \"git+https://github.com/llogiq/mutagen#933bbaf4edaa22f6237b2201dff2940ff7f4193c\"\ndependencies = [\n \"failure\",\n \"json\",\n \"lazy_static\",\n \"proc-macro2\",\n \"quote\",\n \"serde\",\n \"serde_json\",\n \"syn\",\n]\n\n[[package]]\nname = \"mutagen-transform\"\nversion = \"0.2.0\"\nsource = \"git+https://github.com/llogiq/mutagen#933bbaf4edaa22f6237b2201dff2940ff7f4193c\"\ndependencies = [\n \"mutagen-core\",\n \"proc-macro2\",\n]\n\n[[package]]\nname = \"native-tls\"\nversion = \"0.2.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b8d96b2e1c8da3957d58100b09f102c6d9cfdfced01b7ec5a8974044bb09dbd4\"\ndependencies = [\n \"lazy_static\",\n \"libc\",\n \"log\",\n \"openssl\",\n \"openssl-probe\",\n \"openssl-sys\",\n \"schannel\",\n \"security-framework\",\n \"security-framework-sys\",\n \"tempfile\",\n]\n\n[[package]]\nname = \"object\"\nversion = \"0.23.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a9a7ab5d64814df0fe4a4b5ead45ed6c5f181ee3ff04ba344313a6c80446c5d4\"\n\n[[package]]\nname = \"once_cell\"\nversion = \"1.7.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"af8b08b04175473088b46763e51ee54da5f9a164bc162f615b91bc179dbf15a3\"\n\n[[package]]\nname = \"openssl\"\nversion = \"0.10.33\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a61075b62a23fef5a29815de7536d940aa35ce96d18ce0cc5076272db678a577\"\ndependencies = [\n \"bitflags\",\n \"cfg-if\",\n \"foreign-types\",\n \"libc\",\n \"once_cell\",\n \"openssl-sys\",\n]\n\n[[package]]\nname = \"openssl-probe\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"77af24da69f9d9341038eba93a073b1fdaaa1b788221b00a69bce9e762cb32de\"\n\n[[package]]\nname = \"openssl-src\"\nversion = \"111.15.0+1.1.1k\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b1a5f6ae2ac04393b217ea9f700cd04fa9bf3d93fae2872069f3d15d908af70a\"\ndependencies = [\n \"cc\",\n]\n\n[[package]]\nname = \"openssl-sys\"\nversion = \"0.9.61\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"313752393519e876837e09e1fa183ddef0be7735868dced3196f4472d536277f\"\ndependencies = [\n \"autocfg\",\n \"cc\",\n \"libc\",\n \"openssl-src\",\n \"pkg-config\",\n \"vcpkg\",\n]\n\n[[package]]\nname = \"output_vt100\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"53cdc5b785b7a58c5aad8216b3dfa114df64b0b06ae6e1501cef91df2fbdf8f9\"\ndependencies = [\n \"winapi\",\n]\n\n[[package]]\nname = \"pkg-config\"\nversion = \"0.3.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3831453b3449ceb48b6d9c7ad7c96d5ea673e9b470a1dc578c2ce6521230884c\"\n\n[[package]]\nname = \"ppv-lite86\"\nversion = \"0.2.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ac74c624d6b2d21f425f752262f42188365d7b8ff1aff74c82e45136510a4857\"\n\n[[package]]\nname = \"pretty_assertions\"\nversion = \"0.7.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f297542c27a7df8d45de2b0e620308ab883ad232d06c14b76ac3e144bda50184\"\ndependencies = [\n \"ansi_term\",\n \"ctor\",\n \"diff\",\n \"output_vt100\",\n]\n\n[[package]]\nname = \"proc-macro2\"\nversion = \"1.0.24\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1e0704ee1a7e00d7bb417d0770ea303c1bccbabf0ef1667dae92b5967f5f8a71\"\ndependencies = [\n \"unicode-xid\",\n]\n\n[[package]]\nname = \"quote\"\nversion = \"1.0.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c3d0b9745dc2debf507c8422de05d7226cc1f0644216dfdfead988f9b1ab32a7\"\ndependencies = [\n \"proc-macro2\",\n]\n\n[[package]]\nname = \"rand\"\nversion = \"0.8.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0ef9e7e66b4468674bfcb0c81af8b7fa0bb154fa9f28eb840da5c447baeb8d7e\"\ndependencies = [\n \"libc\",\n \"rand_chacha\",\n \"rand_core\",\n \"rand_hc\",\n]\n\n[[package]]\nname = \"rand_chacha\"\nversion = \"0.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e12735cf05c9e10bf21534da50a147b924d555dc7a547c42e6bb2d5b6017ae0d\"\ndependencies = [\n \"ppv-lite86\",\n \"rand_core\",\n]\n\n[[package]]\nname = \"rand_core\"\nversion = \"0.6.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"34cf66eb183df1c5876e2dcf6b13d57340741e8dc255b48e40a26de954d06ae7\"\ndependencies = [\n \"getrandom\",\n]\n\n[[package]]\nname = \"rand_hc\"\nversion = \"0.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3190ef7066a446f2e7f42e239d161e905420ccab01eb967c9eb27d21b2322a73\"\ndependencies = [\n \"rand_core\",\n]\n\n[[package]]\nname = \"redox_syscall\"\nversion = \"0.1.57\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"41cc0f7e4d5d4544e8861606a285bb08d3e70712ccc7d2b84d7c0ccfaf4b05ce\"\n\n[[package]]\nname = \"redox_syscall\"\nversion = \"0.2.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"94341e4e44e24f6b591b59e47a8a027df12e008d73fd5672dbea9cc22f4507d9\"\ndependencies = [\n \"bitflags\",\n]\n\n[[package]]\nname = \"remove_dir_all\"\nversion = \"0.5.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3acd125665422973a33ac9d3dd2df85edad0f4ae9b00dafb1a05e43a9f5ef8e7\"\ndependencies = [\n \"winapi\",\n]\n\n[[package]]\nname = \"ring\"\nversion = \"0.16.20\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3053cf52e236a3ed746dfc745aa9cacf1b791d846bdaf412f60a8d7d6e17c8fc\"\ndependencies = [\n \"cc\",\n \"libc\",\n \"once_cell\",\n \"spin\",\n \"untrusted\",\n \"web-sys\",\n \"winapi\",\n]\n\n[[package]]\nname = \"rustc-demangle\"\nversion = \"0.1.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6e3bad0ee36814ca07d7968269dd4b7ec89ec2da10c4bb613928d3077083c232\"\n\n[[package]]\nname = \"rustls\"\nversion = \"0.19.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"35edb675feee39aec9c99fa5ff985081995a06d594114ae14cbe797ad7b7a6d7\"\ndependencies = [\n \"base64\",\n \"log\",\n \"ring\",\n \"sct\",\n \"webpki\",\n]\n\n[[package]]\nname = \"ryu\"\nversion = \"1.0.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"71d301d4193d031abdd79ff7e3dd721168a9572ef3fe51a1517aba235bd8f86e\"\n\n[[package]]\nname = \"schannel\"\nversion = \"0.1.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8f05ba609c234e60bee0d547fe94a4c7e9da733d1c962cf6e59efa4cd9c8bc75\"\ndependencies = [\n \"lazy_static\",\n \"winapi\",\n]\n\n[[package]]\nname = \"sct\"\nversion = \"0.6.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b362b83898e0e69f38515b82ee15aa80636befe47c3b6d3d89a911e78fc228ce\"\ndependencies = [\n \"ring\",\n \"untrusted\",\n]\n\n[[package]]\nname = \"security-framework\"\nversion = \"2.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3670b1d2fdf6084d192bc71ead7aabe6c06aa2ea3fbd9cc3ac111fa5c2b1bd84\"\ndependencies = [\n \"bitflags\",\n \"core-foundation\",\n \"core-foundation-sys\",\n \"libc\",\n \"security-framework-sys\",\n]\n\n[[package]]\nname = \"security-framework-sys\"\nversion = \"2.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3676258fd3cfe2c9a0ec99ce3038798d847ce3e4bb17746373eb9f0f1ac16339\"\ndependencies = [\n \"core-foundation-sys\",\n \"libc\",\n]\n\n[[package]]\nname = \"serde\"\nversion = \"1.0.125\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"558dc50e1a5a5fa7112ca2ce4effcb321b0300c0d4ccf0776a9f60cd89031171\"\ndependencies = [\n \"serde_derive\",\n]\n\n[[package]]\nname = \"serde_derive\"\nversion = \"1.0.125\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b093b7a2bb58203b5da3056c05b4ec1fed827dcfdb37347a8841695263b3d06d\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"serde_json\"\nversion = \"1.0.64\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"799e97dc9fdae36a5c8b8f2cae9ce2ee9fdce2058c57a93e6099d919fd982f79\"\ndependencies = [\n \"itoa\",\n \"ryu\",\n \"serde\",\n]\n\n[[package]]\nname = \"socket2\"\nversion = \"0.3.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"122e570113d28d773067fab24266b66753f6ea915758651696b6e35e49f88d6e\"\ndependencies = [\n \"cfg-if\",\n \"libc\",\n \"winapi\",\n]\n\n[[package]]\nname = \"spin\"\nversion = \"0.5.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6e63cff320ae2c57904679ba7cb63280a3dc4613885beafb148ee7bf9aa9042d\"\n\n[[package]]\nname = \"syn\"\nversion = \"1.0.65\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f3a1d708c221c5a612956ef9f75b37e454e88d1f7b899fbd3a18d4252012d663\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"unicode-xid\",\n]\n\n[[package]]\nname = \"synstructure\"\nversion = \"0.12.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b834f2d66f734cb897113e34aaff2f1ab4719ca946f9a7358dba8f8064148701\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n \"unicode-xid\",\n]\n\n[[package]]\nname = \"tempfile\"\nversion = \"3.2.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dac1c663cfc93810f88aed9b8941d48cabf856a1b111c29a40439018d870eb22\"\ndependencies = [\n \"cfg-if\",\n \"libc\",\n \"rand\",\n \"redox_syscall 0.2.5\",\n \"remove_dir_all\",\n \"winapi\",\n]\n\n[[package]]\nname = \"unic-char-property\"\nversion = \"0.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a8c57a407d9b6fa02b4795eb81c5b6652060a15a7903ea981f3d723e6c0be221\"\ndependencies = [\n \"unic-char-range\",\n]\n\n[[package]]\nname = \"unic-char-range\"\nversion = \"0.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0398022d5f700414f6b899e10b8348231abf9173fa93144cbc1a43b9793c1fbc\"\n\n[[package]]\nname = \"unic-common\"\nversion = \"0.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"80d7ff825a6a654ee85a63e80f92f054f904f21e7d12da4e22f9834a4aaa35bc\"\n\n[[package]]\nname = \"unic-idna\"\nversion = \"0.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"621e9cf526f2094d2c2ced579766458a92f8f422d6bb934c503ba1a95823a62d\"\ndependencies = [\n \"matches\",\n \"unic-idna-mapping\",\n \"unic-idna-punycode\",\n \"unic-normal\",\n \"unic-ucd-bidi\",\n \"unic-ucd-normal\",\n \"unic-ucd-version\",\n]\n\n[[package]]\nname = \"unic-idna-mapping\"\nversion = \"0.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4de70fd4e5331537347a50a0dbc938efb1f127c9f6e5efec980fc90585aa1343\"\ndependencies = [\n \"unic-char-property\",\n \"unic-char-range\",\n \"unic-ucd-version\",\n]\n\n[[package]]\nname = \"unic-idna-punycode\"\nversion = \"0.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"06feaedcbf9f1fc259144d833c0d630b8b15207b0486ab817d29258bc89f2f8a\"\n\n[[package]]\nname = \"unic-normal\"\nversion = \"0.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f09d64d33589a94628bc2aeb037f35c2e25f3f049c7348b5aa5580b48e6bba62\"\ndependencies = [\n \"unic-ucd-normal\",\n]\n\n[[package]]\nname = \"unic-ucd-bidi\"\nversion = \"0.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d1d568b51222484e1f8209ce48caa6b430bf352962b877d592c29ab31fb53d8c\"\ndependencies = [\n \"unic-char-property\",\n \"unic-char-range\",\n \"unic-ucd-version\",\n]\n\n[[package]]\nname = \"unic-ucd-hangul\"\nversion = \"0.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"eb1dc690e19010e1523edb9713224cba5ef55b54894fe33424439ec9a40c0054\"\ndependencies = [\n \"unic-ucd-version\",\n]\n\n[[package]]\nname = \"unic-ucd-normal\"\nversion = \"0.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"86aed873b8202d22b13859dda5fe7c001d271412c31d411fd9b827e030569410\"\ndependencies = [\n \"unic-char-property\",\n \"unic-char-range\",\n \"unic-ucd-hangul\",\n \"unic-ucd-version\",\n]\n\n[[package]]\nname = \"unic-ucd-version\"\nversion = \"0.9.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"96bd2f2237fe450fcd0a1d2f5f4e91711124f7857ba2e964247776ebeeb7b0c4\"\ndependencies = [\n \"unic-common\",\n]\n\n[[package]]\nname = \"unicode-width\"\nversion = \"0.1.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9337591893a19b88d8d87f2cec1e73fad5cdfd10e5a6f349f498ad6ea2ffb1e3\"\n\n[[package]]\nname = \"unicode-xid\"\nversion = \"0.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f7fe0bb3479651439c9112f72b6c505038574c9fbb575ed1bf3b797fa39dd564\"\n\n[[package]]\nname = \"untrusted\"\nversion = \"0.7.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a156c684c91ea7d62626509bce3cb4e1d9ed5c4d978f7b4352658f96a4c26b4a\"\n\n[[package]]\nname = \"vcpkg\"\nversion = \"0.2.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b00bca6106a5e23f3eee943593759b7fcddb00554332e856d990c893966879fb\"\n\n[[package]]\nname = \"wasi\"\nversion = \"0.10.2+wasi-snapshot-preview1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fd6fbd9a79829dd1ad0cc20627bf1ed606756a7f77edff7b66b7064f9cb327c6\"\n\n[[package]]\nname = \"wasm-bindgen\"\nversion = \"0.2.72\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8fe8f61dba8e5d645a4d8132dc7a0a66861ed5e1045d2c0ed940fab33bac0fbe\"\ndependencies = [\n \"cfg-if\",\n \"wasm-bindgen-macro\",\n]\n\n[[package]]\nname = \"wasm-bindgen-backend\"\nversion = \"0.2.72\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"046ceba58ff062da072c7cb4ba5b22a37f00a302483f7e2a6cdc18fedbdc1fd3\"\ndependencies = [\n \"bumpalo\",\n \"lazy_static\",\n \"log\",\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n \"wasm-bindgen-shared\",\n]\n\n[[package]]\nname = \"wasm-bindgen-macro\"\nversion = \"0.2.72\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0ef9aa01d36cda046f797c57959ff5f3c615c9cc63997a8d545831ec7976819b\"\ndependencies = [\n \"quote\",\n \"wasm-bindgen-macro-support\",\n]\n\n[[package]]\nname = \"wasm-bindgen-macro-support\"\nversion = \"0.2.72\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"96eb45c1b2ee33545a813a92dbb53856418bf7eb54ab34f7f7ff1448a5b3735d\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n \"wasm-bindgen-backend\",\n \"wasm-bindgen-shared\",\n]\n\n[[package]]\nname = \"wasm-bindgen-shared\"\nversion = \"0.2.72\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b7148f4696fb4960a346eaa60bbfb42a1ac4ebba21f750f75fc1375b098d5ffa\"\n\n[[package]]\nname = \"web-sys\"\nversion = \"0.3.49\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"59fe19d70f5dacc03f6e46777213facae5ac3801575d56ca6cbd4c93dcd12310\"\ndependencies = [\n \"js-sys\",\n \"wasm-bindgen\",\n]\n\n[[package]]\nname = \"webpki\"\nversion = \"0.21.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b8e38c0608262c46d4a56202ebabdeb094cef7e560ca7a226c6bf055188aa4ea\"\ndependencies = [\n \"ring\",\n \"untrusted\",\n]\n\n[[package]]\nname = \"webpki-roots\"\nversion = \"0.21.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"aabe153544e473b775453675851ecc86863d2a81d786d741f6b76778f2a48940\"\ndependencies = [\n \"webpki\",\n]\n\n[[package]]\nname = \"widestring\"\nversion = \"0.4.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c168940144dd21fd8046987c16a46a33d5fc84eec29ef9dcddc2ac9e31526b7c\"\n\n[[package]]\nname = \"winapi\"\nversion = \"0.3.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5c839a674fcd7a98952e593242ea400abe93992746761e38641405d28b00f419\"\ndependencies = [\n \"winapi-i686-pc-windows-gnu\",\n \"winapi-x86_64-pc-windows-gnu\",\n]\n\n[[package]]\nname = \"winapi-i686-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ac3b87c63620426dd9b991e5ce0329eff545bccbbb34f3be09ff6fb6ab51b7b6\"\n\n[[package]]\nname = \"winapi-x86_64-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"712e227841d057c1ee1cd2fb22fa7e5a5461ae8e48fa2ca79ec42cfc1931183f\"\n\n[[package]]\nname = \"winreg\"\nversion = \"0.6.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b2986deb581c4fe11b621998a5e53361efe6b48a151178d0cd9eeffa4dc6acc9\"\ndependencies = [\n \"winapi\",\n]\n"
        },
        {
          "name": "Cargo.toml",
          "type": "blob",
          "size": 1.583984375,
          "content": "[package]\nname = \"dog\"\ndescription = \"A command-line DNS client\"\n\nauthors = [\"Benjamin Sago <ogham@bsago.me>\"]\ncategories = [\"command-line-utilities\"]\nedition = \"2018\"\nexclude = [\n    \"/completions/*\", \"/man/*\", \"/xtests/*\",\n    \"/dog-screenshot.png\", \"/Justfile\", \"/README.md\", \"/.rustfmt.toml\", \"/.travis.yml\",\n]\nhomepage = \"https://dns.lookup.dog/\"\nlicense = \"EUPL-1.2\"\nversion = \"0.2.0-pre\"\n\n\n[[bin]]\nname = \"dog\"\npath = \"src/main.rs\"\ndoctest = false\n\n\n[workspace]\nmembers = [\n  \"dns\",\n  \"dns-transport\",\n]\n\n\n# make dev builds faster by excluding debug symbols\n[profile.dev]\ndebug = false\n\n# use LTO for smaller binaries (that take longer to build)\n[profile.release]\nlto = true\noverflow-checks = true\npanic = \"abort\"\n\n\n[dependencies]\n\n# dns stuff\ndns = { path = \"./dns\" }\ndns-transport = { path = \"./dns-transport\" }\n\n# command-line\nansi_term = \"0.12\"\natty = \"0.2\"\ngetopts = \"0.2\"\n\n# transaction ID generation\nrand = \"0.8\"\n\n# json output\njson = \"0.12\"\n\n# logging\nlog = \"0.4\"\n\n# windows default nameserver determination\n[target.'cfg(windows)'.dependencies]\nipconfig = { version = \"0.2\" }\n\n[build-dependencies]\ndatetime = { version = \"0.5.1\", default_features = false }\n\n[dev-dependencies]\npretty_assertions = \"0.7\"\n\n[features]\ndefault = [\"with_idna\", \"with_tls\", \"with_https\", \"with_nativetls\"]\nwith_idna = [\"dns/with_idna\"]\n\nwith_tls = [\"dns-transport/with_tls\"]\nwith_https = [\"dns-transport/with_https\"]\n\nwith_nativetls = [\"dns-transport/with_nativetls\"]\nwith_nativetls_vendored = [\"with_nativetls\", \"dns-transport/with_nativetls\", \"dns-transport/with_nativetls_vendored\"]\nwith_rustls = [\"dns-transport/with_rustls\"]\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.36328125,
          "content": "FROM rust as build\n\nWORKDIR /build\nCOPY /src /build/src\nCOPY /dns /build/dns\nCOPY /dns-transport /build/dns-transport\nCOPY /man /build/man\nCOPY build.rs Cargo.toml /build/\n\nRUN cargo build --release\n\nFROM debian:buster-slim\n\nRUN apt update && apt install -y libssl1.1 ca-certificates && apt clean all\n\nCOPY --from=build /build/target/release/dog /dog\n\nENTRYPOINT [\"/dog\"]\n"
        },
        {
          "name": "Justfile",
          "type": "blob",
          "size": 4.7109375,
          "content": "all: build test xtests\nall-release: build-release test-release xtests-release\nall-quick: build-quick test-quick xtests-quick\n\nexport DOG_DEBUG := \"\"\n\n\n#----------#\n# building #\n#----------#\n\n# compile the dog binary\n@build:\n    cargo build\n\n# compile the dog binary (in release mode)\n@build-release:\n    cargo build --release --verbose\n    strip \"${CARGO_TARGET_DIR:-target}/release/dog\"\n\n# produce an HTML chart of compilation timings\n@build-time:\n    cargo +nightly clean\n    cargo +nightly build -Z timings\n\n# compile the dog binary (without some features)\n@build-quick:\n    cargo build --no-default-features\n\n# check that the dog binary can compile\n@check:\n    cargo check\n\n\n#---------------#\n# running tests #\n#---------------#\n\n# run unit tests\n@test:\n    cargo test --workspace -- --quiet\n\n# run unit tests (in release mode)\n@test-release:\n    cargo test --workspace --release --verbose\n\n# run unit tests (without some features)\n@test-quick:\n    cargo test --workspace --no-default-features -- --quiet\n\n# run mutation tests\n@test-mutation:\n    cargo +nightly test    --package dns --features=dns/with_mutagen -- --quiet\n    cargo +nightly mutagen --package dns --features=dns/with_mutagen\n\n\n#------------------------#\n# running extended tests #\n#------------------------#\n\n# run extended tests\n@xtests *args:\n    specsheet xtests/{options,live,madns}/*.toml -shide {{args}} \\\n        -O cmd.target.dog=\"${CARGO_TARGET_DIR:-../../target}/debug/dog\"\n\n# run extended tests (in release mode)\n@xtests-release *args:\n    specsheet xtests/{options,live,madns}/*.toml {{args}} \\\n        -O cmd.target.dog=\"${CARGO_TARGET_DIR:-../../target}/release/dog\"\n\n# run extended tests (omitting certain feature tests)\n@xtests-quick *args:\n    specsheet xtests/options/*.toml xtests/live/{basics,tcp}.toml -shide {{args}} \\\n        -O cmd.target.dog=\"${CARGO_TARGET_DIR:-../../target}/debug/dog\"\n\n# run extended tests against a local madns instance\n@xtests-madns-local *args:\n    env MADNS_ARGS=\"@localhost:5301 --tcp\" \\\n        specsheet xtests/madns/*.toml -shide {{args}} \\\n            -O cmd.target.dog=\"${CARGO_TARGET_DIR:-../../target}/debug/dog\"\n\n# display the number of extended tests that get run\n@count-xtests:\n    grep -F '[[cmd]]' -R xtests | wc -l\n\n\n#---------#\n# fuzzing #\n#---------#\n\n# run fuzzing on the dns crate\n@fuzz:\n    cargo +nightly fuzz --version\n    cd dns; cargo +nightly fuzz run fuzz_parsing -- -jobs=`nproc` -workers=`nproc` -runs=69105\n\n# print out the data that caused crashes during fuzzing as hexadecimal\n@fuzz-hex:\n    for crash in dns/fuzz/artifacts/fuzz_parsing/crash-*; do echo; echo $crash; hexyl $crash; done\n\n# remove fuzz log files\n@fuzz-clean:\n    rm dns/fuzz/fuzz-*.log\n\n\n#-----------------------#\n# code quality and misc #\n#-----------------------#\n\n# lint the code\n@clippy:\n    touch dns/src/lib.rs\n    cargo clippy\n\n# generate a code coverage report using tarpaulin via docker\n@coverage-docker:\n    docker run --security-opt seccomp=unconfined -v \"${PWD}:/volume\" xd009642/tarpaulin cargo tarpaulin --all --out Html\n\n# update dependency versions, and check for outdated ones\n@update-deps:\n    cargo update\n    command -v cargo-outdated >/dev/null || (echo \"cargo-outdated not installed\" && exit 1)\n    cargo outdated\n\n# list unused dependencies\n@unused-deps:\n    command -v cargo-udeps >/dev/null || (echo \"cargo-udeps not installed\" && exit 1)\n    cargo +nightly udeps\n\n# builds dog and runs extended tests with features disabled\n@feature-checks *args:\n    cargo build --no-default-features\n    specsheet xtests/features/none.toml -shide {{args}} \\\n        -O cmd.target.dog=\"${CARGO_TARGET_DIR:-../../target}/debug/dog\"\n\n# print versions of the necessary build tools\n@versions:\n    rustc --version\n    cargo --version\n\n\n#---------------#\n# documentation #\n#---------------#\n\n# render the documentation\n@doc:\n    cargo doc --no-deps --workspace\n\n# build the man pages\n@man:\n    mkdir -p \"${CARGO_TARGET_DIR:-target}/man\"\n    pandoc --standalone -f markdown -t man man/dog.1.md > \"${CARGO_TARGET_DIR:-target}/man/dog.1\"\n\n# build and preview the man page\n@man-preview: man\n    man \"${CARGO_TARGET_DIR:-target}/man/dog.1\"\n\n\n#-----------#\n# packaging #\n#-----------#\n\n# create a distributable package\nzip desc exe=\"dog\":\n    #!/usr/bin/env perl\n    use Archive::Zip;\n    -e 'target/release/{{ exe }}' || die 'Binary not built!';\n    -e 'target/man/dog.1' || die 'Man page not built!';\n    my $zip = Archive::Zip->new();\n    $zip->addFile('completions/dog.bash');\n    $zip->addFile('completions/dog.zsh');\n    $zip->addFile('completions/dog.fish');\n    $zip->addFile('target/man/dog.1', 'man/dog.1');\n    $zip->addFile('target/release/{{ exe }}', 'bin/{{ exe }}');\n    $zip->writeToFileNamed('dog-{{ desc }}.zip') == AZ_OK || die 'Zip write error!';\n    system 'unzip -l \"dog-{{ desc }}\".zip'\n"
        },
        {
          "name": "LICENCE",
          "type": "blob",
          "size": 13.5029296875,
          "content": "                      EUROPEAN UNION PUBLIC LICENCE v. 1.2\n                      EUPL © the European Union 2007, 2016\n\nThis European Union Public Licence (the ‘EUPL’) applies to the Work (as defined\nbelow) which is provided under the terms of this Licence. Any use of the Work,\nother than as authorised under this Licence is prohibited (to the extent such\nuse is covered by a right of the copyright holder of the Work).\n\nThe Work is provided under the terms of this Licence when the Licensor (as\ndefined below) has placed the following notice immediately following the\ncopyright notice for the Work:\n\n        Licensed under the EUPL\n\nor has expressed by any other means his willingness to license under the EUPL.\n\n1. Definitions\n\nIn this Licence, the following terms have the following meaning:\n\n- ‘The Licence’: this Licence.\n\n- ‘The Original Work’: the work or software distributed or communicated by the\n  Licensor under this Licence, available as Source Code and also as Executable\n  Code as the case may be.\n\n- ‘Derivative Works’: the works or software that could be created by the\n  Licensee, based upon the Original Work or modifications thereof. This Licence\n  does not define the extent of modification or dependence on the Original Work\n  required in order to classify a work as a Derivative Work; this extent is\n  determined by copyright law applicable in the country mentioned in Article 15.\n\n- ‘The Work’: the Original Work or its Derivative Works.\n\n- ‘The Source Code’: the human-readable form of the Work which is the most\n  convenient for people to study and modify.\n\n- ‘The Executable Code’: any code which has generally been compiled and which is\n  meant to be interpreted by a computer as a program.\n\n- ‘The Licensor’: the natural or legal person that distributes or communicates\n  the Work under the Licence.\n\n- ‘Contributor(s)’: any natural or legal person who modifies the Work under the\n  Licence, or otherwise contributes to the creation of a Derivative Work.\n\n- ‘The Licensee’ or ‘You’: any natural or legal person who makes any usage of\n  the Work under the terms of the Licence.\n\n- ‘Distribution’ or ‘Communication’: any act of selling, giving, lending,\n  renting, distributing, communicating, transmitting, or otherwise making\n  available, online or offline, copies of the Work or providing access to its\n  essential functionalities at the disposal of any other natural or legal\n  person.\n\n2. Scope of the rights granted by the Licence\n\nThe Licensor hereby grants You a worldwide, royalty-free, non-exclusive,\nsublicensable licence to do the following, for the duration of copyright vested\nin the Original Work:\n\n- use the Work in any circumstance and for all usage,\n- reproduce the Work,\n- modify the Work, and make Derivative Works based upon the Work,\n- communicate to the public, including the right to make available or display\n  the Work or copies thereof to the public and perform publicly, as the case may\n  be, the Work,\n- distribute the Work or copies thereof,\n- lend and rent the Work or copies thereof,\n- sublicense rights in the Work or copies thereof.\n\nThose rights can be exercised on any media, supports and formats, whether now\nknown or later invented, as far as the applicable law permits so.\n\nIn the countries where moral rights apply, the Licensor waives his right to\nexercise his moral right to the extent allowed by law in order to make effective\nthe licence of the economic rights here above listed.\n\nThe Licensor grants to the Licensee royalty-free, non-exclusive usage rights to\nany patents held by the Licensor, to the extent necessary to make use of the\nrights granted on the Work under this Licence.\n\n3. Communication of the Source Code\n\nThe Licensor may provide the Work either in its Source Code form, or as\nExecutable Code. If the Work is provided as Executable Code, the Licensor\nprovides in addition a machine-readable copy of the Source Code of the Work\nalong with each copy of the Work that the Licensor distributes or indicates, in\na notice following the copyright notice attached to the Work, a repository where\nthe Source Code is easily and freely accessible for as long as the Licensor\ncontinues to distribute or communicate the Work.\n\n4. Limitations on copyright\n\nNothing in this Licence is intended to deprive the Licensee of the benefits from\nany exception or limitation to the exclusive rights of the rights owners in the\nWork, of the exhaustion of those rights or of other applicable limitations\nthereto.\n\n5. Obligations of the Licensee\n\nThe grant of the rights mentioned above is subject to some restrictions and\nobligations imposed on the Licensee. Those obligations are the following:\n\nAttribution right: The Licensee shall keep intact all copyright, patent or\ntrademarks notices and all notices that refer to the Licence and to the\ndisclaimer of warranties. The Licensee must include a copy of such notices and a\ncopy of the Licence with every copy of the Work he/she distributes or\ncommunicates. The Licensee must cause any Derivative Work to carry prominent\nnotices stating that the Work has been modified and the date of modification.\n\nCopyleft clause: If the Licensee distributes or communicates copies of the\nOriginal Works or Derivative Works, this Distribution or Communication will be\ndone under the terms of this Licence or of a later version of this Licence\nunless the Original Work is expressly distributed only under this version of the\nLicence — for example by communicating ‘EUPL v. 1.2 only’. The Licensee\n(becoming Licensor) cannot offer or impose any additional terms or conditions on\nthe Work or Derivative Work that alter or restrict the terms of the Licence.\n\nCompatibility clause: If the Licensee Distributes or Communicates Derivative\nWorks or copies thereof based upon both the Work and another work licensed under\na Compatible Licence, this Distribution or Communication can be done under the\nterms of this Compatible Licence. For the sake of this clause, ‘Compatible\nLicence’ refers to the licences listed in the appendix attached to this Licence.\nShould the Licensee's obligations under the Compatible Licence conflict with\nhis/her obligations under this Licence, the obligations of the Compatible\nLicence shall prevail.\n\nProvision of Source Code: When distributing or communicating copies of the Work,\nthe Licensee will provide a machine-readable copy of the Source Code or indicate\na repository where this Source will be easily and freely available for as long\nas the Licensee continues to distribute or communicate the Work.\n\nLegal Protection: This Licence does not grant permission to use the trade names,\ntrademarks, service marks, or names of the Licensor, except as required for\nreasonable and customary use in describing the origin of the Work and\nreproducing the content of the copyright notice.\n\n6. Chain of Authorship\n\nThe original Licensor warrants that the copyright in the Original Work granted\nhereunder is owned by him/her or licensed to him/her and that he/she has the\npower and authority to grant the Licence.\n\nEach Contributor warrants that the copyright in the modifications he/she brings\nto the Work are owned by him/her or licensed to him/her and that he/she has the\npower and authority to grant the Licence.\n\nEach time You accept the Licence, the original Licensor and subsequent\nContributors grant You a licence to their contributions to the Work, under the\nterms of this Licence.\n\n7. Disclaimer of Warranty\n\nThe Work is a work in progress, which is continuously improved by numerous\nContributors. It is not a finished work and may therefore contain defects or\n‘bugs’ inherent to this type of development.\n\nFor the above reason, the Work is provided under the Licence on an ‘as is’ basis\nand without warranties of any kind concerning the Work, including without\nlimitation merchantability, fitness for a particular purpose, absence of defects\nor errors, accuracy, non-infringement of intellectual property rights other than\ncopyright as stated in Article 6 of this Licence.\n\nThis disclaimer of warranty is an essential part of the Licence and a condition\nfor the grant of any rights to the Work.\n\n8. Disclaimer of Liability\n\nExcept in the cases of wilful misconduct or damages directly caused to natural\npersons, the Licensor will in no event be liable for any direct or indirect,\nmaterial or moral, damages of any kind, arising out of the Licence or of the use\nof the Work, including without limitation, damages for loss of goodwill, work\nstoppage, computer failure or malfunction, loss of data or any commercial\ndamage, even if the Licensor has been advised of the possibility of such damage.\nHowever, the Licensor will be liable under statutory product liability laws as\nfar such laws apply to the Work.\n\n9. Additional agreements\n\nWhile distributing the Work, You may choose to conclude an additional agreement,\ndefining obligations or services consistent with this Licence. However, if\naccepting obligations, You may act only on your own behalf and on your sole\nresponsibility, not on behalf of the original Licensor or any other Contributor,\nand only if You agree to indemnify, defend, and hold each Contributor harmless\nfor any liability incurred by, or claims asserted against such Contributor by\nthe fact You have accepted any warranty or additional liability.\n\n10. Acceptance of the Licence\n\nThe provisions of this Licence can be accepted by clicking on an icon ‘I agree’\nplaced under the bottom of a window displaying the text of this Licence or by\naffirming consent in any other similar way, in accordance with the rules of\napplicable law. Clicking on that icon indicates your clear and irrevocable\nacceptance of this Licence and all of its terms and conditions.\n\nSimilarly, you irrevocably accept this Licence and all of its terms and\nconditions by exercising any rights granted to You by Article 2 of this Licence,\nsuch as the use of the Work, the creation by You of a Derivative Work or the\nDistribution or Communication by You of the Work or copies thereof.\n\n11. Information to the public\n\nIn case of any Distribution or Communication of the Work by means of electronic\ncommunication by You (for example, by offering to download the Work from a\nremote location) the distribution channel or media (for example, a website) must\nat least provide to the public the information requested by the applicable law\nregarding the Licensor, the Licence and the way it may be accessible, concluded,\nstored and reproduced by the Licensee.\n\n12. Termination of the Licence\n\nThe Licence and the rights granted hereunder will terminate automatically upon\nany breach by the Licensee of the terms of the Licence.\n\nSuch a termination will not terminate the licences of any person who has\nreceived the Work from the Licensee under the Licence, provided such persons\nremain in full compliance with the Licence.\n\n13. Miscellaneous\n\nWithout prejudice of Article 9 above, the Licence represents the complete\nagreement between the Parties as to the Work.\n\nIf any provision of the Licence is invalid or unenforceable under applicable\nlaw, this will not affect the validity or enforceability of the Licence as a\nwhole. Such provision will be construed or reformed so as necessary to make it\nvalid and enforceable.\n\nThe European Commission may publish other linguistic versions or new versions of\nthis Licence or updated versions of the Appendix, so far this is required and\nreasonable, without reducing the scope of the rights granted by the Licence. New\nversions of the Licence will be published with a unique version number.\n\nAll linguistic versions of this Licence, approved by the European Commission,\nhave identical value. Parties can take advantage of the linguistic version of\ntheir choice.\n\n14. Jurisdiction\n\nWithout prejudice to specific agreement between parties,\n\n- any litigation resulting from the interpretation of this License, arising\n  between the European Union institutions, bodies, offices or agencies, as a\n  Licensor, and any Licensee, will be subject to the jurisdiction of the Court\n  of Justice of the European Union, as laid down in article 272 of the Treaty on\n  the Functioning of the European Union,\n\n- any litigation arising between other parties and resulting from the\n  interpretation of this License, will be subject to the exclusive jurisdiction\n  of the competent court where the Licensor resides or conducts its primary\n  business.\n\n15. Applicable Law\n\nWithout prejudice to specific agreement between parties,\n\n- this Licence shall be governed by the law of the European Union Member State\n  where the Licensor has his seat, resides or has his registered office,\n\n- this licence shall be governed by Belgian law if the Licensor has no seat,\n  residence or registered office inside a European Union Member State.\n\nAppendix\n\n‘Compatible Licences’ according to Article 5 EUPL are:\n\n- GNU General Public License (GPL) v. 2, v. 3\n- GNU Affero General Public License (AGPL) v. 3\n- Open Software License (OSL) v. 2.1, v. 3.0\n- Eclipse Public License (EPL) v. 1.0\n- CeCILL v. 2.0, v. 2.1\n- Mozilla Public Licence (MPL) v. 2\n- GNU Lesser General Public Licence (LGPL) v. 2.1, v. 3\n- Creative Commons Attribution-ShareAlike v. 3.0 Unported (CC BY-SA 3.0) for\n  works other than software\n- European Union Public Licence (EUPL) v. 1.1, v. 1.2\n- Québec Free and Open-Source Licence — Reciprocity (LiLiQ-R) or Strong\n  Reciprocity (LiLiQ-R+).\n\nThe European Commission may update this Appendix to later versions of the above\nlicences without producing a new version of the EUPL, as long as they provide\nthe rights granted in Article 2 of this Licence and protect the covered Source\nCode from exclusive appropriation.\n\nAll other changes or additions to this Appendix require the production of a new\nEUPL version.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.203125,
          "content": "<div align=\"center\">\n<h1>dog</h1>\n\n[dog](https://dns.lookup.dog/) is a command-line DNS client.\n\n<a href=\"https://travis-ci.org/github/ogham/dog\">\n    <img src=\"https://travis-ci.org/ogham/dog.svg?branch=master\" alt=\"Build status\" />\n</a>\n\n<a href=\"https://saythanks.io/to/ogham%40bsago.me\">\n    <img src=\"https://img.shields.io/badge/Say%20Thanks-!-1EAEDB.svg\" alt=\"Say thanks!\" />\n</a>\n</div>\n\n![A screenshot of dog making a DNS request](dog-screenshot.png)\n\n---\n\nDogs _can_ look up!\n\n**dog** is a command-line DNS client, like `dig`.\nIt has colourful output, understands normal command-line argument syntax, supports the DNS-over-TLS and DNS-over-HTTPS protocols, and can emit JSON.\n\n## Examples\n\n    dog example.net                          Query a domain using default settings\n    dog example.net MX                       ...looking up MX records instead\n    dog example.net MX @1.1.1.1              ...using a specific nameserver instead\n    dog example.net MX @1.1.1.1 -T           ...using TCP rather than UDP\n    dog -q example.net -t MX -n 1.1.1.1 -T   As above, but using explicit arguments\n\n---\n\n## Command-line options\n\n### Query options\n\n    <arguments>              Human-readable host names, nameservers, types, or classes\n    -q, --query=HOST         Host name or domain name to query\n    -t, --type=TYPE          Type of the DNS record being queried (A, MX, NS...)\n    -n, --nameserver=ADDR    Address of the nameserver to send packets to\n    --class=CLASS            Network class of the DNS record being queried (IN, CH, HS)\n\n### Sending options\n\n    --edns=SETTING           Whether to OPT in to EDNS (disable, hide, show)\n    --txid=NUMBER            Set the transaction ID to a specific value\n    -Z=TWEAKS                Set uncommon protocol-level tweaks\n\n### Protocol options\n\n    -U, --udp                Use the DNS protocol over UDP\n    -T, --tcp                Use the DNS protocol over TCP\n    -S, --tls                Use the DNS-over-TLS protocol\n    -H, --https              Use the DNS-over-HTTPS protocol\n\n### Output options\n\n    -1, --short              Short mode: display nothing but the first result\n    -J, --json               Display the output as JSON\n    --color, --colour=WHEN   When to colourise the output (always, automatic, never)\n    --seconds                Do not format durations, display them as seconds\n    --time                   Print how long the response took to arrive\n\n\n---\n\n## Installation\n\nTo install dog, you can download a pre-compiled binary, or you can compile it from source. You _may_ be able to install dog using your OS’s package manager, depending on your platform.\n\n\n### Packages\n\n- For Arch Linux, install the [`dog`](https://www.archlinux.org/packages/community/x86_64/dog/) package.\n- For Homebrew on macOS, install the [`dog`](https://formulae.brew.sh/formula/dog) formula.\n- For NixOS, install the [`dogdns`](https://search.nixos.org/packages?channel=unstable&show=dogdns&query=dogdns) package.\n\n\n### Downloads\n\nBinary downloads of dog are available from [the releases section on GitHub](https://github.com/ogham/dog/releases/) for 64-bit Windows, macOS, and Linux targets. They contain the compiled executable, the manual page, and shell completions.\n\n\n### Compilation\n\ndog is written in [Rust](https://www.rust-lang.org).\nYou will need rustc version [1.45.0](https://blog.rust-lang.org/2020/07/16/Rust-1.45.0.html) or higher.\nThe recommended way to install Rust for development is from the [official download page](https://www.rust-lang.org/tools/install), using rustup.\n\nTo build, download the source code and run:\n\n    $ cargo build\n    $ cargo test\n\n- The [just](https://github.com/casey/just) command runner can be used to run some helpful development commands, in a manner similar to `make`.\nRun `just --list` to get an overview of what’s available.\n\n- If you are compiling a copy for yourself, be sure to run `cargo build --release` or `just build-release` to benefit from release-mode optimisations.\nCopy the resulting binary, which will be in the `target/release` directory, into a folder in your `$PATH`.\n`/usr/local/bin` is usually a good choice.\n\n- To compile and install the manual pages, you will need [pandoc](https://pandoc.org/).\nThe `just man` command will compile the Markdown into manual pages, which it will place in the `target/man` directory.\nTo use them, copy them into a directory that `man` will read.\n`/usr/local/share/man` is usually a good choice.\n\n\n### Container image\n\nTo build the container image of dog, you can use Docker or Kaniko. Here an example using Docker:\n\n    $ docker build -t dog .\n\nYou can then run it using the following command:\n\n    $ docker run -it --rm dog\n\nTo run dog directly, you can then define the following alias:\n\n    $ alias dog=\"docker run -it --rm dog\"\n\n\n### End-to-end testing\n\ndog has an integration test suite written as [Specsheet](https://specsheet.software/) check documents.\nIf you have a copy installed, you can run:\n\n    $ just xtests\n\nSpecsheet will test the compiled binary by making DNS requests over the network, checking that dog returns the correct results and does not crash.\nNote that this will expose your IP address.\nFor more information, read [the xtests README](xtests/README.md).\n\n\n### Feature toggles\n\ndog has three Cargo features that can be switched off to remove functionality.\nWhile doing so makes dog less useful, it results in a smaller binary that takes less time to build.\n\nThere are three feature toggles available, all of which are active by default:\n\n- `with_idna`, which enables [IDNA](https://en.wikipedia.org/wiki/Internationalized_domain_name) processing\n- `with_tls`, which enables DNS-over-TLS\n- `with_https`, which enables DNS-over-HTTPS (requires `with_tls`)\n\nUse `cargo` to build a binary that uses feature toggles. For example, to disable TLS and HTTPS support but keep IDNA support enabled, you can run:\n\n    $ cargo build --no-default-features --features=with_idna\n\nThe list of features that have been disabled can be checked at runtime as part of the `--version` string.\n\n\n---\n\n## Documentation\n\nFor documentation on how to use dog, see the website: <https://dns.lookup.dog/>\n\n\n## See also\n\n`mutt`, `tail`, `sleep`, `roff`\n\n\n## Licence\n\ndog’s source code is licenced under the [European Union Public Licence](https://choosealicense.com/licenses/eupl-1.2/).\n"
        },
        {
          "name": "build.rs",
          "type": "blob",
          "size": 4.8095703125,
          "content": "//! This build script gets run during every build. Its purpose is to put\n//! together the files used for the `--help` and `--version`, which need to\n//! come in both coloured and non-coloured variants. The main usage text is\n//! contained in `src/usage.txt`; to make it easier to edit, backslashes (\\)\n//! are used instead of the beginning of ANSI escape codes.\n//!\n//! The version string is quite complex: we want to show the version,\n//! current Git hash, and compilation date when building *debug*\n//! versions, but just the version for *release* versions.\n//!\n//! This script generates the string from the environment variables\n//! that Cargo adds (http://doc.crates.io/environment-variables.html)\n//! and runs `git` to get the SHA1 hash. It then writes the strings\n//! into files, which we can include during compilation.\n\nuse std::env;\nuse std::fs::File;\nuse std::io::{self, Write};\nuse std::path::PathBuf;\n\nuse datetime::{LocalDateTime, ISO};\n\n\n/// The build script entry point.\nfn main() -> io::Result<()> {\n    #![allow(clippy::write_with_newline)]\n\n    let usage   = include_str!(\"src/usage.txt\");\n    let tagline = \"dog \\\\1;32m●\\\\0m command-line DNS client\";\n    let url     = \"https://dns.lookup.dog/\";\n\n    let ver =\n        if is_debug_build() {\n            format!(\"{}\\nv{} \\\\1;31m(pre-release debug build!)\\\\0m\\n\\\\1;4;34m{}\\\\0m\", tagline, version_string(), url)\n        }\n        else if is_development_version() {\n            format!(\"{}\\nv{} [{}] built on {} \\\\1;31m(pre-release!)\\\\0m\\n\\\\1;4;34m{}\\\\0m\", tagline, version_string(), git_hash(), build_date(), url)\n        }\n        else {\n            format!(\"{}\\nv{}\\n\\\\1;4;34m{}\\\\0m\", tagline, version_string(), url)\n        };\n\n    // We need to create these files in the Cargo output directory.\n    let out = PathBuf::from(env::var(\"OUT_DIR\").unwrap());\n\n    // Pretty version text\n    let mut f = File::create(&out.join(\"version.pretty.txt\"))?;\n    writeln!(f, \"{}\", convert_codes(&ver))?;\n\n    // Bland version text\n    let mut f = File::create(&out.join(\"version.bland.txt\"))?;\n    writeln!(f, \"{}\", strip_codes(&ver))?;\n\n    // Pretty usage text\n    let mut f = File::create(&out.join(\"usage.pretty.txt\"))?;\n    writeln!(f, \"{}\", convert_codes(&tagline))?;\n    writeln!(f)?;\n    write!(f, \"{}\", convert_codes(&usage))?;\n\n    // Bland usage text\n    let mut f = File::create(&out.join(\"usage.bland.txt\"))?;\n    writeln!(f, \"{}\", strip_codes(&tagline))?;\n    writeln!(f)?;\n    write!(f, \"{}\", strip_codes(&usage))?;\n\n    Ok(())\n}\n\n/// Converts the escape codes in ‘usage.txt’ to ANSI escape codes.\nfn convert_codes(input: &str) -> String {\n    input.replace(\"\\\\\", \"\\x1B[\")\n}\n\n/// Removes escape codes from ‘usage.txt’.\nfn strip_codes(input: &str) -> String {\n    input.replace(\"\\\\0m\", \"\")\n         .replace(\"\\\\1m\", \"\")\n         .replace(\"\\\\4m\", \"\")\n         .replace(\"\\\\32m\", \"\")\n         .replace(\"\\\\33m\", \"\")\n         .replace(\"\\\\1;31m\", \"\")\n         .replace(\"\\\\1;32m\", \"\")\n         .replace(\"\\\\1;33m\", \"\")\n         .replace(\"\\\\1;4;34\", \"\")\n}\n\n/// Retrieve the project’s current Git hash, as a string.\nfn git_hash() -> String {\n    use std::process::Command;\n\n    String::from_utf8_lossy(\n        &Command::new(\"git\")\n            .args(&[\"rev-parse\", \"--short\", \"HEAD\"])\n            .output().unwrap()\n            .stdout).trim().to_string()\n}\n\n/// Whether we should show pre-release info in the version string.\n///\n/// Both weekly releases and actual releases are --release releases,\n/// but actual releases will have a proper version number.\nfn is_development_version() -> bool {\n    cargo_version().ends_with(\"-pre\") || env::var(\"PROFILE\").unwrap() == \"debug\"\n}\n\n/// Whether we are building in debug mode.\nfn is_debug_build() -> bool {\n    env::var(\"PROFILE\").unwrap() == \"debug\"\n}\n\n/// Retrieves the [package] version in Cargo.toml as a string.\nfn cargo_version() -> String {\n    env::var(\"CARGO_PKG_VERSION\").unwrap()\n}\n\n/// Returns the version and build parameters string.\nfn version_string() -> String {\n    let mut ver = cargo_version();\n\n    let feats = nonstandard_features_string();\n    if ! feats.is_empty() {\n        ver.push_str(&format!(\" [{}]\", &feats));\n    }\n\n    ver\n}\n\n/// Finds whether a feature is enabled by examining the Cargo variable.\nfn feature_enabled(name: &str) -> bool {\n    env::var(&format!(\"CARGO_FEATURE_{}\", name))\n        .map(|e| ! e.is_empty())\n        .unwrap_or(false)\n}\n\n/// A comma-separated list of non-standard feature choices.\nfn nonstandard_features_string() -> String {\n    let mut s = Vec::new();\n\n    if ! feature_enabled(\"WITH_IDNA\") {\n        s.push(\"-idna\");\n    }\n\n    if ! feature_enabled(\"WITH_TLS\") {\n        s.push(\"-tls\");\n    }\n\n    if ! feature_enabled(\"WITH_HTTPS\") {\n        s.push(\"-https\");\n    }\n\n    s.join(\", \")\n}\n\n\n/// Formats the current date as an ISO 8601 string.\nfn build_date() -> String {\n    let now = LocalDateTime::now();\n    format!(\"{}\", now.date().iso())\n}\n"
        },
        {
          "name": "completions",
          "type": "tree",
          "content": null
        },
        {
          "name": "dns-transport",
          "type": "tree",
          "content": null
        },
        {
          "name": "dns",
          "type": "tree",
          "content": null
        },
        {
          "name": "dog-screenshot.png",
          "type": "blob",
          "size": 380.7197265625,
          "content": null
        },
        {
          "name": "man",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "xtests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}