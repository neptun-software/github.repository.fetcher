{
  "metadata": {
    "timestamp": 1736709482191,
    "page": 25,
    "hasNextPage": false,
    "endCursor": "Y3Vyc29yOjI4",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "firecracker-microvm/firecracker",
      "stars": 26718,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".buildkite",
          "type": "tree",
          "content": null
        },
        {
          "name": ".cargo",
          "type": "tree",
          "content": null
        },
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.0849609375,
          "content": ".git/\nbuild/\nsrc/\ntests/\ndocs/\nresources/\ntools/test-popular-containers/\ntest_results/\n"
        },
        {
          "name": ".git-blame-ignore-revs",
          "type": "blob",
          "size": 0.2001953125,
          "content": "8d2463fa21386d6c0c90b2010aaee5550b505c87\nae93e49470433648b144a64514eef708cce15143\n45739f4b57b7b824473b612aefebec8b7c2e31fd\n7221ae7f943bcd127c6710e81d9fa2f520afa073\n7c4687fab64d4dd574fe43cf583a302b43ce53ab\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1689453125,
          "content": "/build/\n/.kernel/\ntarget\n*.rs.bk\n*.iml\n.idea\n__pycache__\n*.pyc\n.vscode\ntest_results/*\n*.core\n*.profraw\n.DS_Store\n*.bin\n/resources/linux\n/resources/x86_64\n/resources/aarch64\n"
        },
        {
          "name": ".gitlint",
          "type": "blob",
          "size": 0.6591796875,
          "content": "[general]\nregex-style-search=True\n\n[title-max-length]\nline-length=72\n\n[body-max-line-length]\nline-length=72\n\n[ignore-body-lines]\n# Ignore HTTP reference links\n# Ignore lines that start with 'Co-Authored-By', with 'Signed-off-by' or with 'Fixes'\nregex=(^\\[.+\\]: http.+)|(^Co-Authored-By)|(^Signed-off-by)|(^Fixes:)\n\n[ignore-by-author-name]\n# Ignore certain rules for commits of which the author name matches a regex\n# E.g. Match commits made by dependabot\nregex=dependabot\n\n# Ignore certain rules, you can reference them by their id or by their full name\n# Use 'all' to ignore all rules. Dependabot constructs commit bodies from\n# changelogs, so disable all rules.\nignore=all\n"
        },
        {
          "name": ".mailmap",
          "type": "blob",
          "size": 2.146484375,
          "content": "Alexandra Iordache <aghecen@amazon.com> Alexandra Ghecenco <aghecen@amazon.com>\nAlexandru Branciog <branciog@amazon.com> <31914537+alexbranciog@users.noreply.github.com>\nBogdan Ionita <bci@amazon.com> <bci@u249973545f4b59.ant.amazon.com>\nLiu Jiang <gerry@linux.alibaba.com> <liu.jiang@alibaba-inc.com>\nMarc Brooker <mbrooker@amazon.com> <marcbrooker@users.noreply.github.com>\nRadu Weiss <raduweis@amazon.com> <31901393+raduweiss@users.noreply.github.com>\nRolf Neugebauer <neugebar@amazon.com> <rn@rneugeba.io>\nSerban Iorga <seriorga@amazon.com> <serban300@gmail.com>\nJulian Stecklina <js@alien8.de> <jsteckli@amazon.de>\nTamio-Vesa Nakajima <tamiove@amazon.com> <tnk@amazon.com>\nIulian Barbu <iul@amazon.com>\nPetre Eftime <epetre@amazon.com> <petre.eftime@gmail.com>\nkarthik nedunchezhiyan <karthik.n@zohocorp.com> <karthik1705.n@gmail.com>\nAlin Dima <alindima@amazon.com>\nAndrei Sandu <sandreim@amazon.com> <54316454+sandreim@users.noreply.github.com>\nDiana Popa <dpopa@amazon.com> <dpopa@38f9d3563971.ant.amazon.com>\nAlexandru Cihodaru <cihodar@amazon.com>\nLiviu Berciu <lberciu@amazon.com>\nJonathan Woollett-Light <jcawl@amazon.co.uk> <jonathanwoollettlight@gmail.com>\nJonathan Woollett-Light <jcawl@amazon.co.uk> <jonthanwoollettlight@gmail.com>\nSudan Landge <sudanl@amazon.co.uk> <119602619+sudanl0@users.noreply.github.com>\nSudan Landge <sudanl@amazon.co.uk> <sudanl@amazon.com>\nkarthik nedunchezhiyan <karthik.n@zohocorp.com>\nBabis Chalios <bchalios@amazon.es> <babis.chalios@gmail.com>\nPablo Barbáchano <pablob@amazon.com>\nNikita Kalyazin <kalyazin@amazon.co.uk> <kalyazin@amazon.com>\nTrăistaru Andrei Cristian <atc@amazon.com>\nTrăistaru Andrei Cristian <atc@amazon.com> <56828222+andreitraistaru@users.noreply.github.com>\nTakahiro Itazuri <itazur@amazon.com> <zulinx86@gmail.com>\nJack Thomson <jackabt@amazon.co.uk> <jackabt@amazon.com>\nAshwin Ginoria <aginoria@amazon.com> <ec2-user@ip-10-0-10-88.us-west-2.compute.internal>\nMuskaan Singla <msinglaa@amazon.com> <ec2-user@ip-172-31-1-28.us-west-2.compute.internal>\nEgor Lazarchuk <yegorlz@amazon.co.uk>\nNikita Zakirov <zakironi@amazon.com> <ec2-user@ip-10-0-15-219.us-west-2.compute.internal>\nTomoya Iwata <iwata.tomoya@classmethod.jp>\n"
        },
        {
          "name": ".mdformat.toml",
          "type": "blob",
          "size": 0.1279296875,
          "content": "wrap = 80\n# Defaults from https://mdformat.readthedocs.io/en/stable/users/configuration_file.html\nnumber = false\nend_of_line = \"lf\""
        },
        {
          "name": ".python-version",
          "type": "blob",
          "size": 0.0078125,
          "content": "3.10.14\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 71.5556640625,
          "content": "# Changelog\n\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\nand this project adheres to\n[Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n\n## [Unreleased]\n\n### Added\n\n### Changed\n\n- [#4913](https://github.com/firecracker-microvm/firecracker/pull/4913): Removed\n  unnecessary fields (`max_connections` and `max_pending_resets`) from the\n  snapshot format, bumping the snapshot version to 5.0.0. Users need to\n  regenerate snapshots.\n\n### Deprecated\n\n### Removed\n\n### Fixed\n\n- [#4921](https://github.com/firecracker-microvm/firecracker/pull/4921): Fixed\n  swagger `CpuConfig` definition to include missing aarch64-specific fields.\n- [#4916](https://github.com/firecracker-microvm/firecracker/pull/4916): Fixed\n  `IovDeque` implementation to work with any host page size. This fixes\n  virtio-net device on non 4K host kernels.\n\n## [1.10.1]\n\n### Changed\n\n- [#4907](https://github.com/firecracker-microvm/firecracker/pull/4907): Bumped\n  the snapshot version to 4.0.0, so users need to regenerate snapshots.\n\n## [1.10.0]\n\n### Added\n\n- [#4834](https://github.com/firecracker-microvm/firecracker/pull/4834): Add\n  `VIRTIO_NET_F_RX_MRGBUF` support to the `virtio-net` device. When this feature\n  is negotiated, guest `virtio-net` driver can perform more efficient memory\n  management which in turn improves RX and TX performance.\n- [#4460](https://github.com/firecracker-microvm/firecracker/pull/4460): Add a\n  call to\n  [`KVM_KVMCLOCK_CTRL`](https://docs.kernel.org/virt/kvm/api.html#kvm-kvmclock-ctrl)\n  after pausing vCPUs on x86_64 architectures. This ioctl sets a flag in the KVM\n  state of the vCPU indicating that it has been paused by the host userspace. In\n  guests that use kvmclock, the soft lockup watchdog checks this flag. If it is\n  set, it won't trigger the lockup condition. Calling the ioctl for guests that\n  don't use kvmclock will fail. These failures are not fatal. We log the failure\n  and increase the `vcpu.kvmclock_ctrl_fails` metric.\n- [#4869](https://github.com/firecracker-microvm/firecracker/pull/4869): Added\n  support for Aarch64 systems which feature CPU caches with a number of sets\n  higher than `u16::MAX`.\n- [#4797](https://github.com/firecracker-microvm/firecracker/pull/4797),\n  [#4854](https://github.com/firecracker-microvm/firecracker/pull/4854): Added\n  GDB debugging support for a microVM guest kernel. Please see our\n  [GDB debugging documentation](docs/gdb-debugging.md) for more information.\n\n### Changed\n\n- [#4844](https://github.com/firecracker-microvm/firecracker/pull/4844): Upgrade\n  `virtio-net` device to use `readv` syscall to avoid unnecessary memory copies\n  on RX path, increasing the RX performance.\n\n### Deprecated\n\n### Removed\n\n- [#4804](https://github.com/firecracker-microvm/firecracker/pull/4804): Drop\n  Support for guest kernel 4.14. Linux 4.14 reached end-of-life in\n  [January 2024](https://lore.kernel.org/lkml/2024011046-ecology-tiptoeing-ce50@gregkh/)\n  The minimum supported guest kernel now is 5.10.\n\n### Fixed\n\n- [#4796](https://github.com/firecracker-microvm/firecracker/pull/4796): Fixed\n  Vsock not notifying guest about `TRANSPORT_RESET_EVENT` event after snapshot\n  restore. This resulted in guest waiting indefinitely on a connection which was\n  reset during snapshot creation.\n- [#4790](https://github.com/firecracker-microvm/firecracker/pull/4790): v1.9.0\n  was missing most of the debugging information in the debuginfo file, due to a\n  change in the Cargo defaults. This has been corrected.\n- [#4826](https://github.com/firecracker-microvm/firecracker/pull/4826): Add\n  missing configuration of tap offload features when restoring from a snapshot.\n  Setting the features was previously\n  [moved](https://github.com/firecracker-microvm/firecracker/pull/4680/commits/49ed5ea4b48ccd98903da037368fa3108f58ac1f)\n  from net device creation to device activation time, but it was not reflected\n  in the restore path. This was leading to inability to connect to the restored\n  VM if the offload features were used.\n\n## [1.9.0]\n\n### Added\n\n- [#4687](https://github.com/firecracker-microvm/firecracker/pull/4687): Added\n  VMGenID support for microVMs running on ARM hosts with 6.1 guest kernels.\n  Support for VMGenID via DeviceTree bindings exists only on mainline 6.10 Linux\n  onwards. Users of Firecracker will need to backport the relevant patches on\n  top of their 6.1 kernels to make use of the feature.\n- [#4732](https://github.com/firecracker-microvm/firecracker/pull/4732),\n  [#4733](https://github.com/firecracker-microvm/firecracker/pull/4733),\n  [#4741](https://github.com/firecracker-microvm/firecracker/pull/4741),\n  [#4746](https://github.com/firecracker-microvm/firecracker/pull/4746): Added\n  official support for 6.1 microVM guest kernels.\n- [#4743](https://github.com/firecracker-microvm/firecracker/pull/4743): Added\n  support for `-h` help flag to the Jailer. The Jailer will now print the help\n  message with either `--help` or `-h`.\n\n### Changed\n\n### Deprecated\n\n- Support for guest kernel 4.14 is now deprecated. We will completely remove\n  4.14 support with Firecracker version v1.10\n\n### Removed\n\n- [#4689](https://github.com/firecracker-microvm/firecracker/pull/4689): Drop\n  support for host kernel 4.14. Linux 4.14 reached end-of-life in\n  [January 2024](https://lore.kernel.org/lkml/2024011046-ecology-tiptoeing-ce50@gregkh/).\n  The minimum supported kernel now is 5.10. Guest kernel 4.14 is still\n  supported.\n\n### Fixed\n\n- [4680](https://github.com/firecracker-microvm/firecracker/pull/4680): Fixed an\n  issue\n  ([#4659](https://github.com/firecracker-microvm/firecracker/issues/4659))\n  where the virtio-net device implementation would always assume the guest\n  accepts all VirtIO features the device offers. This is always true with the\n  Linux guest kernels we are testing but other kernels, like FreeBSD make\n  different assumptions. This PR fixes the emulation code to set the TAP\n  features based on the features accepted by the guest.\n\n## [1.8.0]\n\n### Added\n\n- [#4428](https://github.com/firecracker-microvm/firecracker/pull/4428): Added\n  ACPI support to Firecracker for x86_64 microVMs. Currently, we pass ACPI\n  tables with information about the available vCPUs, interrupt controllers,\n  VirtIO and legacy x86 devices to the guest. This allows booting kernels\n  without MPTable support. Please see our\n  [kernel policy documentation](docs/kernel-policy.md) for more information\n  regarding relevant kernel configurations.\n- [#4487](https://github.com/firecracker-microvm/firecracker/pull/4487): Added\n  support for the Virtual Machine Generation Identifier (VMGenID) device on\n  x86_64 platforms. VMGenID is a virtual device that allows VMMs to notify\n  guests when they are resumed from a snapshot. Linux includes VMGenID support\n  since version 5.18. It uses notifications from the device to reseed its\n  internal CSPRNG. Please refer to\n  [snapshot support](docs/snapshotting/snapshot-support.md) and\n  [random for clones](docs/snapshotting/random-for-clones.md) documention for\n  more info on VMGenID. VMGenID state is part of the snapshot format of\n  Firecracker. As a result, Firecracker snapshot version is now 2.0.0.\n\n### Changed\n\n- [#4492](https://github.com/firecracker-microvm/firecracker/pull/4492): Changed\n  `--config` parameter of `cpu-template-helper` optional. Users no longer need\n  to prepare kernel, rootfs and Firecracker configuration files to use\n  `cpu-template-helper`.\n- [#4537](https://github.com/firecracker-microvm/firecracker/pull/4537) Changed\n  T2CL template to pass through bit 27 and 28 of `MSR_IA32_ARCH_CAPABILITIES`\n  (`RFDS_NO` and `RFDS_CLEAR`) since KVM consider they are able to be passed\n  through and T2CL isn't designed for secure snapshot migration between\n  different processors.\n- [#4537](https://github.com/firecracker-microvm/firecracker/pull/4537) Changed\n  T2S template to set bit 27 of `MSR_IA32_ARCH_CAPABILITIES` (`RFDS_NO`) to 1\n  since it assumes that the fleet only consists of processors that are not\n  affected by RFDS.\n- [#4388](https://github.com/firecracker-microvm/firecracker/pull/4388): Avoid\n  setting `kvm_immediate_exit` to 1 if are already handling an exit, or if the\n  vCPU is stopped. This avoids a spurious KVM exit upon restoring snapshots.\n- [#4567](https://github.com/firecracker-microvm/firecracker/pull/4567): Do not\n  initialize vCPUs in powered-off state upon snapshot restore. No functional\n  change, as vCPU initialization is only relevant for the booted case (where the\n  guest expects CPUs to be powered off).\n\n### Deprecated\n\n- Firecracker's `--start-time-cpu-us` and `--start-time-us` parameters are\n  deprecated and will be removed in v2.0 or later. They are used by the jailer\n  to pass the value that should be subtracted from the (CPU) time, when emitting\n  the `start_time_us` and `start_time_cpu_us` metrics. These parameters were\n  never meant to be used by end customers, and we recommend doing any such time\n  adjustments outside Firecracker.\n- Booting with microVM kernels that rely on MPTable on x86_64 is deprecated and\n  support will be removed in v2.0 or later. We suggest to users of Firecracker\n  to use guest kernels with ACPI support. For x86_64 microVMs, ACPI will be the\n  only way Firecracker passes hardware information to the guest once MPTable\n  support is removed.\n\n### Fixed\n\n- [#4526](https://github.com/firecracker-microvm/firecracker/pull/4526): Added a\n  check in the network TX path that the size of the network frames the guest\n  passes to us is not bigger than the maximum frame the device expects to\n  handle. On the TX path, we copy frames destined to MMDS from guest memory to\n  Firecracker memory. Without the check, a mis-behaving virtio-net driver could\n  cause an increase in the memory footprint of the Firecracker process. Now, if\n  we receive such a frame, we ignore it and increase `Net::tx_malformed_frames`\n  metric.\n- [#4536](https://github.com/firecracker-microvm/firecracker/pull/4536): Make\n  the first differential snapshot taken after a full snapshot contain only the\n  set of memory pages changed since the full snapshot. Previously, these\n  differential snapshots would contain all memory pages. This will result in\n  potentially much smaller differential snapshots after a full snapshot.\n- [#4578](https://github.com/firecracker-microvm/firecracker/pull/4578): Fix\n  UFFD support not being forward-compatible with new ioctl options introduced in\n  Linux 6.6. See also\n  https://github.com/bytecodealliance/userfaultfd-rs/issues/61.\n- [#4618](https://github.com/firecracker-microvm/firecracker/pull/4618): On\n  x86_64, when taking a snapshot, if a vCPU has MSR_IA32_TSC_DEADLINE set to 0,\n  Firecracker will replace it with the MSR_IA32_TSC value from the same vCPU.\n  This is to guarantee that the vCPU will continue receiving TSC interrupts\n  after restoring from the snapshot even if an interrupt is lost when taking a\n  snapshot.\n- [#4666](https://github.com/firecracker-microvm/firecracker/pull/4666): Fixed\n  Firecracker sometimes restoring `MSR_IA32_TSC_DEADLINE` before `MSR_IA32_TSC`.\n  Now it always restores `MSR_IA32_TSC_DEADLINE` MSR after `MSR_IA32_TSC`, as\n  KVM relies on the guest TSC for correct restoration of\n  `MSR_IA32_TSC_DEADLINE`. This fixed guests using the `TSC_DEADLINE` hardware\n  feature receiving incorrect timer interrupts after snapshot restoration, which\n  could lead to them seemingly getting stuck in sleep-related syscalls (see also\n  https://github.com/firecracker-microvm/firecracker/pull/4099).\n\n## [1.7.0]\n\n### Added\n\n- [#4346](https://github.com/firecracker-microvm/firecracker/pull/4346): Added\n  support to emit aggregate (minimum/maximum/sum) latency for\n  `VcpuExit::MmioRead`, `VcpuExit::MmioWrite`, `VcpuExit::IoIn` and\n  `VcpuExit::IoOut`. The average for these VM exits is not emitted since it can\n  be deduced from the available emitted metrics.\n- [#4360](https://github.com/firecracker-microvm/firecracker/pull/4360): Added\n  dev-preview support for backing a VM's guest memory by 2M hugetlbfs pages.\n  Please see the [documentation](docs/hugepages.md) for more information\n- [#4486](https://github.com/firecracker-microvm/firecracker/pull/4486): Added\n  block and net device metrics for file/tap access latencies and queue backlog\n  lengths, which can be used to analyse saturation of the Firecracker VMM thread\n  and underlying layers. Queue backlog length metrics are flushed periodically.\n  They can be used to esimtate an average queue length by request by dividing\n  its value by the number of requests served.\n\n### Changed\n\n- [#4230](https://github.com/firecracker-microvm/firecracker/pull/4230): Changed\n  microVM snapshot format version strategy. Firecracker snapshot format now has\n  a version that is independent of Firecracker version. The current version of\n  the snapshot format is v1.0.0. From now on, the Firecracker binary will define\n  the snapshot format version it supports and it will only be able to load\n  snapshots with format that is backwards compatible with that version. Users\n  can pass the `--snapshot-version` flag to the Firecracker binary to see its\n  supported snapshot version format. This change renders all previous\n  Firecracker snapshots (up to Firecracker version v1.6.0) incompatible with the\n  current Firecracker version.\n\n- [#4449](https://github.com/firecracker-microvm/firecracker/pull/4449): Added\n  information about page size to the payload Firecracker sends to the UFFD\n  handler. Each memory region object now contains a `page_size_kib` field. See\n  also the [hugepages documentation](docs/hugepages.md).\n\n- [#4498](https://github.com/firecracker-microvm/firecracker/pull/4498): Only\n  use memfd to back guest memory if a vhost-user-blk device is configured,\n  otherwise use anonymous private memory. This is because serving page faults of\n  shared memory used by memfd is slower and may impact workloads.\n\n### Fixed\n\n- [#4409](https://github.com/firecracker-microvm/firecracker/pull/4409): Fixed a\n  bug in the cpu-template-helper that made it panic during conversion of cpu\n  configuration with SVE registers to the cpu template on aarch64 platform. Now\n  cpu-template-helper will print warnings if it encounters SVE registers during\n  the conversion process. This is because cpu templates are limited to only\n  modify registers less than 128 bits.\n- [#4413](https://github.com/firecracker-microvm/firecracker/pull/4413): Fixed a\n  bug in the Firecracker that prevented it to restore snapshots of VMs that had\n  SVE enabled.\n- [#4414](https://github.com/firecracker-microvm/firecracker/pull/4360): Made\n  `PATCH` requests to the `/machine-config` endpoint transactional, meaning\n  Firecracker's configuration will be unchanged if the request returns an error.\n  This fixes a bug where a microVM with incompatible balloon and guest memory\n  size could be booted, due to the check for this condition happening after\n  Firecracker's configuration was updated.\n- [#4259](https://github.com/firecracker-microvm/firecracker/pull/4259): Added a\n  double fork mechanism in the Jailer to avoid setsid() failures occurred while\n  running Jailer as the process group leader. However, this changed the\n  behaviour of Jailer and now the Firecracker process will always have a\n  different PID than the Jailer process.\n  [#4436](https://github.com/firecracker-microvm/firecracker/pull/4436): Added a\n  \"Known Limitations\" section in the Jailer docs to highlight the above change\n  in behaviour introduced in PR#4259.\n  [#4442](https://github.com/firecracker-microvm/firecracker/pull/4442): As a\n  solution to the change in behaviour introduced in PR#4259, provided a\n  mechanism to reliably fetch Firecracker PID. With this change, Firecracker\n  process's PID will always be available in the Jailer's root directory\n  regardless of whether new_pid_ns was set.\n- [#4468](https://github.com/firecracker-microvm/firecracker/pull/4468): Fixed a\n  bug where a client would hang or timeout when querying for an MMDS path whose\n  content is empty, because the 'Content-Length' header field was missing in a\n  response.\n\n## [1.6.0]\n\n### Added\n\n- [#4145](https://github.com/firecracker-microvm/firecracker/pull/4145): Added\n  support for per net device metrics. In addition to aggregate metrics `net`,\n  each individual net device will emit metrics under the label\n  `\"net_{iface_id}\"`. E.g. the associated metrics for the endpoint\n  `\"/network-interfaces/eth0\"` will be available under `\"net_eth0\"` in the\n  metrics json object.\n- [#4202](https://github.com/firecracker-microvm/firecracker/pull/4202): Added\n  support for per block device metrics. In addition to aggregate metrics\n  `block`, each individual block device will emit metrics under the label\n  `\"block_{drive_id}\"`. E.g. the associated metrics for the endpoint\n  `\"/drives/{drive_id}\"` will be available under `\"block_drive_id\"` in the\n  metrics json object.\n- [#4205](https://github.com/firecracker-microvm/firecracker/pull/4205): Added a\n  new `vm-state` subcommand to `info-vmstate` command in the `snapshot-editor`\n  tool to print MicrovmState of vmstate snapshot file in a readable format. Also\n  made the `vcpu-states` subcommand available on x86_64.\n- [#4063](https://github.com/firecracker-microvm/firecracker/pull/4063): Added\n  source-level instrumentation based tracing. See [tracing](./docs/tracing.md)\n  for more details.\n- [#4138](https://github.com/firecracker-microvm/firecracker/pull/4138),\n  [#4170](https://github.com/firecracker-microvm/firecracker/pull/4170),\n  [#4223](https://github.com/firecracker-microvm/firecracker/pull/4223),\n  [#4247](https://github.com/firecracker-microvm/firecracker/pull/4247),\n  [#4226](https://github.com/firecracker-microvm/firecracker/pull/4226): Added\n  **developer preview only** (NOT for production use) support for vhost-user\n  block devices. Firecracker implements a vhost-user frontend. Users are free to\n  choose from existing open source backend solutions or their own\n  implementation. Known limitation: snapshotting is not currently supported for\n  microVMs containing vhost-user block devices. See the\n  [related doc page](./docs/api_requests/block-vhost-user.md) for details. The\n  device emits metrics under the label `\"vhost_user_{device}_{drive_id}\"`.\n\n### Changed\n\n- [#4309](https://github.com/firecracker-microvm/firecracker/pull/4309): The\n  jailer's option `--parent-cgroup` will move the process to that cgroup if no\n  `cgroup` options are provided.\n- Simplified and clarified the removal policy of deprecated API elements to\n  follow semantic versioning 2.0.0. For more information, please refer to\n  [this GitHub discussion](https://github.com/firecracker-microvm/firecracker/discussions/4135).\n- [#4180](https://github.com/firecracker-microvm/firecracker/pull/4180):\n  Refactored error propagation to avoid logging and printing an error on exits\n  with a zero exit code. Now, on successful exit \"Firecracker exited\n  successfully\" is logged.\n- [#4194](https://github.com/firecracker-microvm/firecracker/pull/4194): Removed\n  support for creating Firecracker snapshots targeting older versions of\n  Firecracker. With this change, running 'firecracker --version' will not print\n  the supported snapshot versions.\n- [#4301](https://github.com/firecracker-microvm/firecracker/pull/4301): Allow\n  merging of diff snapshots into base snapshots by directly writing the diff\n  snapshot on top of the base snapshot's memory file. This can be done by\n  setting the `mem_file_path` to the path of the pre-existing full snapshot.\n\n### Deprecated\n\n- [#4209](https://github.com/firecracker-microvm/firecracker/pull/4209):\n  `rebase-snap` tool is now deprecated. Users should use `snapshot-editor` for\n  rebasing diff snapshots.\n\n### Fixed\n\n- [#4171](https://github.com/firecracker-microvm/firecracker/pull/4171): Fixed a\n  bug that ignored the `--show-log-origin` option, preventing it from printing\n  the source code file of the log messages.\n- [#4178](https://github.com/firecracker-microvm/firecracker/pull/4178): Fixed a\n  bug reporting a non-zero exit code on successful shutdown when starting\n  Firecracker with `--no-api`.\n- [#4261](https://github.com/firecracker-microvm/firecracker/pull/4261): Fixed a\n  bug where Firecracker would log \"RunWithApiError error: MicroVMStopped without\n  an error: GenericError\" when exiting after encountering an emulation error. It\n  now correctly prints \"RunWithApiError error: MicroVMStopped *with* an error:\n  GenericError\".\n- [#4242](https://github.com/firecracker-microvm/firecracker/pull/4242): Fixed a\n  bug introduced in #4047 that limited the `--level` option of logger to\n  Pascal-cased values (e.g. accepting \"Info\", but not \"info\"). It now ignores\n  case again.\n- [#4286](https://github.com/firecracker-microvm/firecracker/pull/4286): Fixed a\n  bug in the asynchronous virtio-block engine that rendered the device\n  non-functional after a PATCH request was issued to Firecracker for updating\n  the path to the host-side backing file of the device.\n- [#4301](https://github.com/firecracker-microvm/firecracker/pull/4301): Fixed a\n  bug where if Firecracker was instructed to take a snapshot of a microvm which\n  itself was restored from a snapshot, specifying `mem_file_path` to be the path\n  of the memory file from which the microvm was restored would result in both\n  the microvm and the snapshot being corrupted. It now instead performs a\n  \"write-back\" of all memory that was updated since the snapshot was originally\n  loaded.\n\n## [1.5.0]\n\n### Added\n\n- [#3837](https://github.com/firecracker-microvm/firecracker/issues/3837): Added\n  official support for Linux 6.1. See\n  [prod-host-setup](./docs/prod-host-setup.md) for some security and performance\n  considerations.\n- [#4045](https://github.com/firecracker-microvm/firecracker/pull/4045) and\n  [#4075](https://github.com/firecracker-microvm/firecracker/pull/4075): Added\n  `snapshot-editor` tool for modifications of snapshot files. It allows for\n  rebasing of memory snapshot files, printing and removing aarch64 registers\n  from the vmstate and obtaining snapshot version.\n- [#3967](https://github.com/firecracker-microvm/firecracker/pull/3967/): Added\n  new fields to the custom CPU templates. (aarch64 only) `vcpu_features` field\n  allows modifications of vCPU features enabled during vCPU initialization.\n  `kvm_capabilities` field allows modifications of KVM capability checks that\n  Firecracker performs during boot. If any of these fields are in use, minimal\n  target snapshot version is restricted to 1.5.\n\n### Changed\n\n- Updated deserialization of `bitmap` for custom CPU templates to allow usage of\n  '\\_' as a separator.\n- Changed the strip feature of `cpu-template-helper` tool to operate bitwise.\n- Better logs during validation of CPU ID in snapshot restoration path. Also\n  Firecracker now does not fail if it can't get CPU ID from the host or can't\n  find CPU ID in the snapshot.\n- Changed the serial device to only try to initialize itself if stdin is a\n  terminal or a FIFO pipe. This fixes logged warnings about the serial device\n  failing to initialize if the process is daemonized (in which case stdin is\n  /dev/null instead of a terminal).\n- Changed to show a warning message when launching a microVM with C3 template on\n  a processor prior to Intel Cascade Lake, because the guest kernel does not\n  apply the mitigation against MMIO stale data vulnerability when it is running\n  on a processor that does not enumerate FBSDP_NO, PSDP_NO and SBDR_SSDP_NO on\n  IA32_ARCH_CAPABILITIES MSR.\n- Made Firecracker resize its file descriptor table on process start. It now\n  preallocates the in-kernel fdtable to hold `RLIMIT_NOFILE` many fds (or 2048\n  if no limit is set). This avoids the kernel reallocating the fdtable during\n  Firecracker operations, resulting in a 30ms to 70ms reduction of snapshot\n  restore times for medium to large microVMs with many devices attached.\n- Changed the dump feature of `cpu-template-helper` tool not to enumerate\n  program counter (PC) on ARM because it is determined by the given kernel image\n  and it is useless in the custom CPU template context.\n- The ability to create snapshots for an older version of Firecracker is now\n  deprecated. As a result, the `version` body field in `PUT` on\n  `/snapshot/create` request in deprecated.\n- Added support for the /dev/userfaultfd device available on linux kernels >=\n  6.1. This is the default for creating UFFD handlers on these kernel versions.\n  If it is unavailable, Firecracker falls back to the userfaultfd syscall.\n- Deprecated `cpu_template` field in `PUT` and `PATCH` requests on\n  `/machine-config` API, which is used to set a static CPU template. Custom CPU\n  templates added in v1.4.0 are available as an improved iteration of the static\n  CPU templates. For more information about the transition from static CPU\n  templates to custom CPU templates, please refer to\n  [this GitHub discussion](https://github.com/firecracker-microvm/firecracker/discussions/4135).\n- Changed default log level from\n  [`Warn`](https://docs.rs/log/latest/log/enum.Level.html#variant.Warn) to\n  [`Info`](https://docs.rs/log/latest/log/enum.Level.html#variant.Info). This\n  results in more logs being output by default.\n\n### Fixed\n\n- Fixed a change in behavior of normalize host brand string that breaks\n  Firecracker on external instances.\n- Fixed the T2A CPU template not to unset the MMX bit (CPUID.80000001h:EDX[23])\n  and the FXSR bit (CPUID.80000001h:EDX[24]).\n- Fixed the T2A CPU template to set the RstrFpErrPtrs bit\n  (CPUID.80000008h:EBX[2]).\n- Fixed a bug where Firecracker would crash during boot if a guest set up a\n  virtio queue that partially overlapped with the MMIO gap. Now Firecracker\n  instead correctly refuses to activate the corresponding virtio device.\n- Fixed the T2CL CPU template to pass through security mitigation bits that are\n  listed by KVM as bits able to be passed through. By making the most use of the\n  available hardware security mitigations on a processor that a guest is running\n  on, the guest might be able to benefit from performance improvements.\n- Fixed the T2S CPU template to set the GDS_NO bit of the IA32_ARCH_CAPABILITIES\n  MSR to 1 in accordance with an Intel microcode update. To use the template\n  securely, users should apply the latest microcode update on the host.\n- Fixed the spelling of the `nomodule` param passed in the default kernel\n  command line parameters. This is a **breaking change** for setups that use the\n  default kernel command line which also depend on being able to load kernel\n  modules at runtime. This may also break setups which use the default kernel\n  command line and which use an init binary that inadvertently depends on the\n  misspelled param (\"nomodules\") being present at the command line, since this\n  param will no longer be passed.\n\n## [1.4.0]\n\n### Added\n\n- Added support for custom CPU templates allowing users to adjust vCPU features\n  exposed to the guest via CPUID, MSRs and ARM registers.\n- Introduced V1N1 static CPU template for ARM to represent Neoverse V1 CPU as\n  Neoverse N1.\n- Added support for the `virtio-rng` entropy device. The device is optional. A\n  single device can be enabled per VM using the `/entropy` endpoint.\n- Added a `cpu-template-helper` tool for assisting with creating and managing\n  custom CPU templates.\n\n### Changed\n\n- Set FDP_EXCPTN_ONLY bit (CPUID.7h.0:EBX[6]) and ZERO_FCS_FDS bit\n  (CPUID.7h.0:EBX[13]) in Intel's CPUID normalization process.\n\n### Fixed\n\n- Fixed feature flags in T2S CPU template on Intel Ice Lake.\n- Fixed CPUID leaf 0xb to be exposed to guests running on AMD host.\n- Fixed a performance regression in the jailer logic for closing open file\n  descriptors. Related to:\n  [#3542](https://github.com/firecracker-microvm/firecracker/issues/3542).\n- A race condition that has been identified between the API thread and the VMM\n  thread due to a misconfiguration of the `api_event_fd`.\n- Fixed CPUID leaf 0x1 to disable perfmon and debug feature on x86 host.\n- Fixed passing through cache information from host in CPUID leaf 0x80000006.\n- Fixed the T2S CPU template to set the RRSBA bit of the IA32_ARCH_CAPABILITIES\n  MSR to 1 in accordance with an Intel microcode update.\n- Fixed the T2CL CPU template to pass through the RSBA and RRSBA bits of the\n  IA32_ARCH_CAPABILITIES MSR from the host in accordance with an Intel microcode\n  update.\n- Fixed passing through cache information from host in CPUID leaf 0x80000005.\n- Fixed the T2A CPU template to disable SVM (nested virtualization).\n- Fixed the T2A CPU template to set EferLmsleUnsupported bit\n  (CPUID.80000008h:EBX[20]), which indicates that EFER[LMSLE] is not supported.\n\n## [1.3.0]\n\n### Added\n\n- Introduced T2CL (Intel) and T2A (AMD) CPU templates to provide instruction set\n  feature parity between Intel and AMD CPUs when using these templates.\n- Added Graviton3 support (c7g instance type).\n\n### Changed\n\n- Improved error message when invalid network backend provided.\n- Improved TCP throughput by between 5% and 15% (depending on CPU) by using\n  scatter-gather I/O in the net device's TX path.\n- Upgraded Rust toolchain from 1.64.0 to 1.66.0.\n- Made seccompiler output bit-reproducible.\n\n### Fixed\n\n- Fixed feature flags in T2 CPU template on Intel Ice Lake.\n\n## [1.2.0]\n\n### Added\n\n- Added a new CPU template called `T2S`. This exposes the same CPUID as `T2` to\n  the Guest and also overwrites the `ARCH_CAPABILITIES` MSR to expose a reduced\n  set of capabilities. With regards to hardware vulnerabilities and mitigations,\n  the Guest vCPU will apear to look like a Skylake CPU, making it safe to\n  snapshot uVMs running on a newer host CPU (Cascade Lake) and restore on a host\n  that has a Skylake CPU.\n- Added a new CLI option `--metrics-path PATH`. It accepts a file parameter\n  where metrics will be sent to.\n- Added baselines for m6i.metal and m6a.metal for all long running performance\n  tests.\n- Releases now include debuginfo files.\n\n### Changed\n\n- Changed the jailer option `--exec-file` to fail if the filename does not\n  contain the string `firecracker` to prevent from running non-firecracker\n  binaries.\n- Upgraded Rust toolchain from 1.52.1 to 1.64.0.\n- Switched to specifying our dependencies using caret requirements instead of\n  comparison requirements.\n- Updated all dependencies to their respective newest versions.\n\n### Fixed\n\n- Made the `T2` template more robust by explicitly disabling additional CPUID\n  flags that should be off but were missed initially or that were not available\n  in the spec when the template was created.\n- Now MAC address is correctly displayed when queried with GET `/vm/config` if\n  left unspecified in both pre and post snapshot states.\n- Fixed a self-DoS scenario in the virtio-queue code by reporting and\n  terminating execution when the number of available descriptors reported by the\n  driver is higher than the queue size.\n- Fixed the bad handling of kernel cmdline parameters when init arguments were\n  provided in the `boot_args` field of the JSON body of the PUT `/boot-source`\n  request.\n- Fixed a bug on ARM64 hosts where the upper 64bits of the V0-V31 FL/SIMD\n  registers were not saved correctly when taking a snapshot, potentially leading\n  to data loss. This change invalidates all ARM64 snapshots taken with versions\n  of Firecracker \\<= 1.1.3.\n- Improved stability and security when saving CPU MSRs in snapshots.\n\n## [1.1.0]\n\n### Added\n\n- The API `PATCH` methods for `machine-config` can now be used to reset the\n  `cpu_template` to `\"None\"`. Until this change there was no way to reset the\n  `cpu_template` once it was set.\n- Added a `rebase-snap` tool for rebasing a diff snapshot over a base snapshot.\n- Mmds version is persisted across snapshot-restore. Snapshot compatibility is\n  preserved bidirectionally, to and from a Firecracker version that does not\n  support persisting the Mmds version. In such cases, the default V1 option is\n  used.\n- Added `--mmds-size-limit` for limiting the mmds data store size instead of\n  piggy-backing on `--http-api-max-payload-size`. If left unconfigured it\n  defaults to the value of `--http-api-max-payload-size`, to provide backwards\n  compatibility.\n- Added optional `mem_backend` body field in `PUT` requests on `/snapshot/load`.\n  This new parameter is an object that defines the configuration of the backend\n  responsible for handling memory loading during snapshot restore. The\n  `mem_backend` parameter contains `backend_type` and `backend_path` required\n  fields. `backend_type` is an enum that can take either `File` or `Uffd` as\n  value. Interpretation of `backend_path` field depends on the value of\n  `backend_type`. If `File`, then the user must provide the path to file that\n  contains the guest memory to be loaded. Otherwise, if `backend_type` is\n  `Uffd`, then `backend_path` is the path to a unix domain socket where a custom\n  page fault handler process is listening and expecting a UFFD to be sent by\n  Firecracker. The UFFD is used to handle the guest memory page faults in the\n  separate process.\n- Added logging for the snapshot/restore and async block device IO engine\n  features to indicate they are in development preview.\n\n### Changed\n\n- The API `PATCH` method for `/machine-config` can be now used to change\n  `track_dirty_pages` on aarch64.\n- MmdsV2 is now Generally Available.\n- MmdsV1 is now deprecated and will be removed in Firecracker v2.0.0. Use MmdsV2\n  instead.\n- Deprecated `mem_file_path` body field in `PUT` on `/snapshot/load` request.\n\n### Fixed\n\n- Fixed inconsistency that allowed the start of a microVM from a JSON file\n  without specifying the `vcpu_count` and `mem_size_mib` parameters for\n  `machine-config` although they are mandatory when configuring via the API. Now\n  these fields are mandatory when specifying `machine-config` in the JSON file\n  and when using the `PUT` request on `/machine-config`.\n- Fixed inconsistency that allowed a user to specify the `cpu_template`\n  parameter and set `smt` to `True` in `machine-config` when starting from a\n  JSON file on aarch64 even though they are not permitted when using `PUT` or\n  `PATCH` in the API. Now Firecracker will return an error on aarch64 if `smt`\n  is set to `True` or if `cpu_template` is specified.\n- Fixed inconsistent behaviour of the `PUT` method for `/machine-config` that\n  would reset the `track_dirty_pages` parameter to `false` if it was not\n  specified in the JSON body of the request, but left the `cpu_template`\n  parameter intact if it was not present in the request. Now a `PUT` request for\n  `/machine-config` will reset all optional parameters (`smt`, `cpu_template`,\n  `track_dirty_pages`) to their default values if they are not specified in the\n  `PUT` request.\n- Fixed incosistency in the swagger definition with the current state of the\n  `/vm/config` endpoint.\n\n## [1.0.0]\n\n### Added\n\n- Added jailer option `--parent-cgroup <relative_path>` to allow the placement\n  of microvm cgroups in custom cgroup nested hierarchies. The default value is\n  `<exec-file>` which is backwards compatible to the behavior before this\n  change.\n- Added jailer option `--cgroup-version <1|2>` to support running the jailer on\n  systems that have cgroup-v2. Default value is `1` which means that if\n  `--cgroup-version` is not specified, the jailer will try to create cgroups on\n  cgroup-v1 hierarchies only.\n- Added `--http-api-max-payload-size` parameter to configure the maximum payload\n  size for PUT and PATCH requests.\n- Limit MMDS data store size to `--http-api-max-payload-size`.\n- Cleanup all environment variables in Jailer.\n- Added metrics for accesses to deprecated HTTP and command line API endpoints.\n- Added permanent HTTP endpoint for `GET` on `/version` for getting the\n  Firecracker version.\n- Added `--metadata` parameter to enable MMDS content to be supplied from a file\n  allowing the MMDS to be used when using `--no-api` to disable the API server.\n- Checksum file for the release assets.\n- Added support for custom headers to MMDS requests. Accepted headers are:\n  `X-metadata-token`, which accepts a string value that provides a session token\n  for MMDS requests; and `X-metadata-token-ttl-seconds`, which specifies the\n  lifetime of the session token in seconds.\n- Support and validation for host and guest kernel 5.10.\n- A [kernel support policy](docs/kernel-policy.md).\n- Added `io_engine` to the pre-boot block device configuration. Possible values:\n  `Sync` (the default option) or `Async` (only available for kernels newer than\n  5.10.51). The `Async` variant introduces a block device engine that uses\n  io_uring for executing requests asynchronously, which is in **developer\n  preview** (NOT for production use). See\n  `docs/api_requests/block-io-engine.md`.\n- Added `block.io_engine_throttled_events` metric for measuring the number of\n  virtio events throttled because of the IO engine.\n- New optional `version` field to PUT requests towards `/mmds/config` to\n  configure MMDS version. Accepted values are `V1` and `V2` and default is `V1`.\n  MMDS `V2` is **developer preview only** (NOT for production use) and it does\n  not currently work after snapshot load.\n- Mandatory `network_interfaces` field to PUT requests towards `/mmds/config`\n  which contains a list of network interface IDs capable of forwarding packets\n  to MMDS.\n\n### Changed\n\n- Removed the `--node` jailer parameter.\n- Deprecated `vsock_id` body field in `PUT`s on `/vsock`.\n- Removed the deprecated the `--seccomp-level parameter`.\n- `GET` requests to MMDS require a session token to be provided through\n  `X-metadata-token` header when using V2.\n- Allow `PUT` requests to MMDS in order to generate a session token to be used\n  for future `GET` requests when version 2 is used.\n- Remove `allow_mmds_requests` field from the request body that attaches network\n  interfaces. Specifying interfaces that allow forwarding requests to MMDS is\n  done by adding the network interface's ID to the `network_interfaces` field of\n  PUT `/mmds/config` request's body.\n- Renamed `/machine-config` `ht_enabled` to `smt`.\n- `smt` field is now optional on PUT `/machine-config`, defaulting to `false`.\n- Configuring `smt: true` on aarch64 via the API is forbidden.\n\n### Fixed\n\n- GET `/vm/config` was returning a default config object after restoring from a\n  snapshot. It now correctly returns the config of the original microVM, except\n  for boot_config and the cpu_template and smt fields of the machine config,\n  which are currently lost.\n- Fixed incorrect propagation of init parameters in kernel commandline. Related\n  to: [#2709](https://github.com/firecracker-microvm/firecracker/issues/2709).\n- Adapt T2 and C3 CPU templates for kernel 5.10. Firecracker was not previously\n  masking some CPU features of the host or emulated by KVM, introduced in more\n  recent kernels: `umip`, `vmx`, `avx512_vnni`.\n- Fix jailer's cgroup implementation to accept properties that contain multiple\n  dots.\n\n## [0.25.0]\n\n### Added\n\n- Added devtool build `--ssh-keys` flag to support fetching from private git\n  repositories.\n- Added option to configure block device flush.\n- Added `--new-pid-ns` flag to the Jailer in order to spawn the Firecracker\n  process in a new PID namespace.\n- Added API metrics for `GET`, `PUT` and `PATCH` requests on `/mmds` endpoint.\n- Added `--describe-snapshot` flag to Firecracker to fetch the data format\n  version of a snapshot state file provided as argument.\n- Added `--no-seccomp` parameter for disabling the default seccomp filters.\n- Added `--seccomp-filter` parameter for supplying user-provided, custom\n  filters.\n- Added the `seccompiler-bin` binary that is used to compile JSON seccomp\n  filters into serialized BPF for Firecracker consumption.\n- Snapshotting support for GICv2 enabled guests.\n- Added `devtool install` to deploy built binaries in `/usr/local/bin` or a\n  given path.\n- Added code logic to send `VIRTIO_VSOCK_EVENT_TRANSPORT_RESET` on snapshot\n  creation, when the Vsock device is active. The event will close active\n  connections on the guest.\n- Added `GET` request on `/vm/config` that provides full microVM configuration\n  as a JSON HTTP response.\n- Added `--resource-limit` flag to jailer to limit resources such as: number of\n  file descriptors allowed at a time (with a default value of 2048) and maximum\n  size of files created by the process.\n\n### Changed\n\n- Changed Docker images repository from DockerHub to Amazon ECR.\n- Fixed off-by-one error in virtio-block descriptor address validation.\n- Changed the `PATCH` request on `/balloon/statistics` to schedule the first\n  statistics update immediately after processing the request.\n- Deprecated the `--seccomp-level parameter`. It will be removed in a future\n  release. Using it logs a runtime warning.\n- Experimental gnu libc builds use empty default seccomp filters, allowing all\n  system calls.\n\n### Fixed\n\n- Fixed non-compliant check for the RTC device ensuring a fixed 4-sized data\n  buffer.\n- Unnecessary interrupt assertion was removed from the RTC. However, a dummy\n  interrupt is still allocated for snapshot compatibility reasons.\n- Fixed the SIGPIPE signal handler so Firecracker no longer exits. The signal is\n  still recorded in metrics and logs.\n- Fixed ballooning API definitions by renaming all fields which mentioned \"MB\"\n  to use \"MiB\" instead.\n- Snapshot related host files (vm-state, memory, block backing files) are now\n  flushed to their backing mediums as part of the CreateSnapshot operation.\n- Fixed the SSBD mitigation not being enabled on `aarch64` with the provided\n  `prod-host-setup.md`.\n- Fixed the balloon statistics not working after a snapshot restore event.\n- The `utc_timestamp_ms` now reports the timestamp in ms from the UTC UNIX\n  Epoch, as the name suggests. It was previously using a monotonic clock with an\n  undefined starting point.\n\n## [0.24.0]\n\n### Added\n\n- Added optional `resume_vm` field to `/snapshot/load` API call.\n- Added support for block rate limiter PATCH.\n- Added devtool test `-c|--cpuset-cpus` flag for cpus confinement when tests\n  run.\n- Added devtool test `-m|--cpuset-mems` flag for memory confinement when tests\n  run.\n- Added the virtio traditional memory ballooning device.\n- Added a mechanism to handle vCPU/VMM errors that result in process\n  termination.\n- Added incremental guest memory snapshot support.\n- Added aarch64 snapshot support.\n\n### Changed\n\n- Change the information provided in `DescribeInstance` command to provide\n  microVM state information (Not started/Running/Paused) instead of whether it's\n  started or not.\n- Removed the jailer `--extra-args` parameter. It was a noop, having been\n  replaced by the `--` separator for extra arguments.\n- Changed the output of the `--version` command line parameter to include a list\n  of supported snapshot data format versions for the firecracker binary.\n- Increased the maximum number of virtio devices from 11 to 19.\n- Added a new check that prevents creating v0.23 snapshots when more than 11\n  devices are attached.\n- If the stdout buffer is full and non-blocking, the serial writes no longer\n  block. Any new bytes will be lost, until the buffer is freed. The device also\n  logs these errors and increments the `uart.error_count` metric for each lost\n  byte.\n\n### Fixed\n\n- Fixed inconsistency in YAML file InstanceInfo definition\n\n## [0.23.0]\n\n### Added\n\n- Added metric for throttled block device events.\n- Added metrics for counting rate limiter throttling events.\n- Added metric for counting MAC address updates.\n- Added metrics for counting TAP read and write errors.\n- Added metrics for counting RX and TX partial writes.\n- Added metrics that measure the duration of pausing and resuming the microVM,\n  from the VMM perspective.\n- Added metric for measuring the duration of the last full/diff snapshot\n  created, from the VMM perspective.\n- Added metric for measuring the duration of loading a snapshot, from the VMM\n  perspective.\n- Added metrics that measure the duration of pausing and resuming the microVM,\n  from the API (user) perspective.\n- Added metric for measuring the duration of the last full/diff snapshot\n  created, from the API (user) perspective.\n- Added metric for measuring the duration of loading a snapshot, from the API\n  (user) perspective.\n- Added `track_dirty_pages` field to `machine-config`. If enabled, Firecracker\n  can create incremental guest memory snapshots by saving the dirty guest pages\n  in a sparse file.\n- Added a new API call, `PATCH /vm`, for changing the microVM state (to `Paused`\n  or `Resumed`).\n- Added a new API call, `PUT /snapshot/create`, for creating a full or diff\n  snapshot.\n- Added a new API call, `PUT /snapshot/load`, for loading a snapshot.\n- Added new jailer command line argument `--cgroup` which allow the user to\n  specify the cgroups that are going to be set by the Jailer.\n- Added full support for AMD CPUs (General Availability). More details\n  [here](README.md#supported-platforms).\n\n### Fixed\n\n- Boot time on AMD achieves the desired performance (i.e under 150ms).\n\n### Changed\n\n- The logger `level` field is now case-insensitive.\n- Disabled boot timer device after restoring a snapshot.\n- Enabled boot timer device only when specifically requested, by using the\n  `--boot-timer` dedicated cmdline parameter.\n- firecracker and jailer `--version` now gets updated on each devtool build to\n  the output of `git describe --dirty`, if the git repo is available.\n- MicroVM process is only attached to the cgroups defined by using `--cgroups`\n  or the ones defined indirectly by using `--node`.\n- Changed `devtool build` to build jailer binary for `musl` only targets.\n  Building jailer binary for `non-musl` targets have been removed.\n\n## [0.22.0]\n\n### Added\n\n- Added a new API call, `PUT /metrics`, for configuring the metrics system.\n- Added `app_name` field in InstanceInfo struct for storing the application\n  name.\n- New command-line parameters for `firecracker`, named `--log-path`, `--level`,\n  `--show-level` and `--show-log-origin` that can be used for configuring the\n  Logger when starting the process. When using this method for configuration,\n  only `--log-path` is mandatory.\n- Added a\n  [guide](https://github.com/firecracker-microvm/firecracker/blob/v0.22.0/docs/devctr-image.md)\n  for updating the dev container image.\n- Added a new API call, `PUT /mmds/config`, for configuring the `MMDS` with a\n  custom valid link-local IPv4 address.\n- Added experimental JSON response format support for MMDS guest applications\n  requests.\n- Added metrics for the vsock device.\n- Added `devtool strip` command which removes debug symbols from the release\n  binaries.\n- Added the `tx_malformed_frames` metric for the virtio net device, emitted when\n  a TX frame missing the VNET header is encountered.\n\n### Fixed\n\n- Added `--version` flag to both Firecracker and Jailer.\n- Return `405 Method Not Allowed` MMDS response for non HTTP `GET` MMDS requests\n  originating from guest.\n- Fixed folder permissions in the jail (#1802).\n- Any number of whitespace characters are accepted after \":\" when parsing HTTP\n  headers.\n- Potential panic condition caused by the net device expecting to find a VNET\n  header in every frame.\n- Potential crash scenario caused by \"Content-Length\" HTTP header field\n  accepting negative values.\n- Fixed #1754 - net: traffic blocks when running ingress UDP performance tests\n  with very large buffers.\n\n### Changed\n\n- Updated CVE-2019-3016 mitigation information in\n  [Production Host Setup](docs/prod-host-setup.md)\n- In case of using an invalid JSON as a 'config-file' for Firecracker, the\n  process will exit with return code 152.\n- Removed the `testrun.sh` wrapper.\n- Removed `metrics_fifo` field from the logger configuration.\n- Renamed `log_fifo` field from LoggerConfig to `log_path` and `metrics_fifo`\n  field from MetricsConfig to `metrics_path`.\n- `PATCH /drives/{id}` only allowed post-boot. Use `PUT` for pre-boot updates to\n  existing configurations.\n- `PATCH /network-interfaces/{id}` only allowed post-boot. Use `PUT` for\n  pre-boot updates to existing configurations.\n- Changed returned status code from `500 Internal Server Error` to\n  `501 Not Implemented`, for queries on the MMDS endpoint in IMDS format, when\n  the requested resource value type is unsupported.\n- Allowed the MMDS data store to be initialized with all supported JSON types.\n  Retrieval of these values within the guest, besides String, Array, and\n  Dictionary, is only possible in JSON mode.\n- `PATCH` request on `/mmds` before the data store is initialized returns\n  `403 BadRequest`.\n- Segregated MMDS documentation in MMDS design documentation and MMDS user guide\n  documentation.\n\n## [0.21.0]\n\n### Added\n\n- Support for booting with an initial RAM disk image. This image can be\n  specified through the new `initrd_path` field of the `/boot-source` API\n  request.\n\n### Fixed\n\n- Fixed #1469 - Broken GitHub location for Firecracker release binary.\n- The jailer allows changing the default api socket path by using the extra\n  arguments passed to firecracker.\n- Fixed #1456 - Occasional KVM_EXIT_SHUTDOWN and bad syscall (14) during VM\n  shutdown.\n- Updated the production host setup guide with steps for addressing\n  CVE-2019-18960.\n- The HTTP header parsing is now case insensitive.\n- The `put_api_requests` and `patch_api_requests` metrics for net devices were\n  un-swapped.\n\n### Changed\n\n- Removed redundant `--seccomp-level` jailer parameter since it can be simply\n  forwarded to the Firecracker executable using \"end of command options\"\n  convention.\n- Removed `memory.dirty_pages` metric.\n- Removed `options` field from the logger configuration.\n- Decreased release binary size by ~15%.\n- Changed default API socket path to `/run/firecracker.socket`. This path also\n  applies when running with the jailer.\n- Disabled KVM dirty page tracking by default.\n- Removed redundant RescanBlockDevice action from the /actions API. The\n  functionality is available through the PATCH /drives API. See\n  `docs/api_requests/patch-block.md`.\n\n## [0.20.0]\n\n### Added\n\n- Added support for GICv2.\n\n### Fixed\n\n- Fixed CVE-2019-18960 - Fixed a logical error in bounds checking performed on\n  vsock virtio descriptors.\n- Fixed #1283 - Can't start a VM in AARCH64 with vcpus number more than 16.\n- Fixed #1088 - The backtrace are printed on `panic`, no longer causing a\n  seccomp fault.\n- Fixed #1375 - Change logger options type from `Value` to `Vec<LogOption>` to\n  prevent potential unwrap on None panics.\n- Fixed #1436 - Raise interrupt for TX queue used descriptors\n- Fixed #1439 - Prevent achieving 100% cpu load when the net device rx is\n  throttled by the ratelimiter\n- Fixed #1437 - Invalid fields in rate limiter related API requests are now\n  failing with a proper error message.\n- Fixed #1316 - correctly determine the size of a virtio device backed by a\n  block device.\n- Fixed #1383 - Log failed api requests.\n\n### Changed\n\n- Decreased release binary size by 10%.\n\n## [0.19.0]\n\n### Added\n\n- New command-line parameter for `firecracker`, named `--no-api`, which will\n  disable the API server thread. If set, the user won't be able to send any API\n  requests, neither before, nor after the vm has booted. It must be paired with\n  `--config-file` parameter. Also, when API server is disabled, MMDS is no\n  longer available now.\n- New command-line parameter for `firecracker`, named `--config-file`, which\n  represents the path to a file that contains a JSON which can be used for\n  configuring and starting a microVM without sending any API requests.\n- The jailer adheres to the \"end of command options\" convention, meaning all\n  parameters specified after `--` are forwarded verbatim to Firecracker.\n- Added `KVM_PTP` support to the recommended guest kernel config.\n- Added entry in FAQ.md for Firecracker Guest timekeeping.\n\n### Changed\n\n- Vsock API call: `PUT /vsocks/{id}` changed to `PUT /vsock` and no longer\n  appear to support multiple vsock devices. Any subsequent calls to this API\n  endpoint will override the previous vsock device configuration.\n- Removed unused 'Halting' and 'Halted' instance states.\n- Vsock host-initiated connections now implement a trivial handshake protocol.\n  See the [vsock doc](docs/vsock.md#host-initiated-connections) for details.\n  Related to:\n  [#1253](https://github.com/firecracker-microvm/firecracker/issues/1253),\n  [#1432](https://github.com/firecracker-microvm/firecracker/issues/1432),\n  [#1443](https://github.com/firecracker-microvm/firecracker/pull/1443)\n\n### Fixed\n\n- Fixed serial console on aarch64 (GitHub issue #1147).\n- Upon panic, the terminal is now reset to canonical mode.\n- Explicit error upon failure of vsock device creation.\n- The failure message returned by an API call is flushed in the log FIFOs.\n- Insert virtio devices in the FDT in order of their addresses sorted from low\n  to high.\n- Enforce the maximum length of the network interface name to be 16 chars as\n  specified in the Linux Kernel.\n- Changed the vsock property `id` to `vsock_id` so that the API client can be\n  successfully generated from the swagger definition.\n\n## [0.18.0]\n\n### Added\n\n- New device: virtio-vsock, backed by Unix domain sockets (GitHub issue #650).\n  See `docs/vsock.md`.\n\n### Changed\n\n- No error is thrown upon a flush metrics intent if logger has not been\n  configured.\n\n### Fixed\n\n- Updated the documentation for integration tests.\n- Fixed high CPU usage before guest network interface is brought up (GitHub\n  issue #1049).\n- Fixed an issue that caused the wrong date (month) to appear in the log.\n- Fixed a bug that caused the seccomp filter to reject legit syscalls in some\n  rare cases (GitHub issue #1206).\n- Docs: updated the production host setup guide.\n- Docs: updated the rootfs and kernel creation guide.\n\n### Removed\n\n- Removed experimental support for vhost-based vsock devices.\n\n## [0.17.0]\n\n### Added\n\n- New API call: `PATCH /machine-config/`, used to update VM configuration,\n  before the microVM boots.\n- Added an experimental swagger definition that includes the specification for\n  the vsock API call.\n- Added a signal handler for `SIGBUS` and `SIGSEGV` that immediately terminates\n  the process upon intercepting the signal.\n- Added documentation for signal handling utilities.\n- Added [alpha] aarch64 support.\n- Added metrics for successful read and write operations of MMDS, Net and Block\n  devices.\n\n### Changed\n\n- `vcpu_count`, `mem_size_mib` and `ht_enabled` have been changed to be\n  mandatory for `PUT` requests on `/machine-config/`.\n- Disallow invalid seccomp levels by exiting with error.\n\n### Fixed\n\n- Incorrect handling of bind mounts within the jailed rootfs.\n- Corrected the guide for `Alpine` guest setup.\n\n## [0.16.0]\n\n### Added\n\n- Added [alpha] AMD support.\n- New `devtool` command: `prepare_release`. This updates the Firecracker\n  version, crate dependencies and credits in preparation for a new release.\n- New `devtool` command: `tag`. This creates a new git tag for the specified\n  release number, based on the changelog contents.\n- New doc section about building with glibc.\n\n### Changed\n\n- Dropped the JSON-formatted `context` command-line parameter from Firecracker\n  in favor of individual classic command-line parameters.\n- When running with `jailer` the location of the API socket has changed to\n  `<jail-root-path>/api.socket` (API socket was moved _inside_ the jail).\n- `PUT` and `PATCH` requests on `/mmds` with data containing any value type\n  other than `String`, `Array`, `Object` will returns status code 400.\n- Improved multiple error messages.\n- Removed all kernel modules from the recommended kernel config.\n\n### Fixed\n\n- Corrected the seccomp filter when building with glibc.\n\n### Removed\n\n- Removed the `seccomp.bad_syscalls` metric.\n\n## [0.15.2]\n\n### Fixed\n\n- Corrected the conditional compilation of the seccomp rule for `madvise`.\n\n## [0.15.1]\n\n### Fixed\n\n- A `madvise` call issued by the `musl` allocator was added to the seccomp allow\n  list to prevent Firecracker from terminating abruptly when allocating memory\n  in certain conditions.\n\n## [0.15.0]\n\n### Added\n\n- New API action: SendCtrlAltDel, used to initiate a graceful shutdown, if the\n  guest has driver support for i8042 and AT Keyboard. See\n  [the docs](docs/api_requests/actions.md#sendctrlaltdel) for details.\n- New metric counting the number of egress packets with a spoofed MAC:\n  `net.tx_spoofed_mac_count`.\n- New API call: `PATCH /network-interfaces/`, used to update the rate limiters\n  on a network interface, after the start of a microVM.\n\n### Changed\n\n- Added missing `vmm_version` field to the InstanceInfo API swagger definition,\n  and marked several other mandatory fields as such.\n- New default command line for guest kernel:\n  `reboot=k panic=1 pci=off nomodules 8250.nr_uarts=0 i8042.noaux i8042.nomux i8042.nopnp i8042.dumbkbd`.\n\n### Fixed\n\n- virtio-blk: VIRTIO_BLK_T_FLUSH now working as expected.\n- Vsock devices can be attached when starting Firecracker using the jailer.\n- Vsock devices work properly when seccomp filtering is enabled.\n\n## [0.14.0]\n\n### Added\n\n- Documentation for development environment setup on AWS in\n  `dev-machine-setup.md`.\n- Documentation for microVM networking setup in `docs/network-setup.md`.\n- Limit the maximum supported vCPUs to 32.\n\n### Changed\n\n- Log the app version when the `Logger` is initialized.\n- Pretty print panic information.\n- Firecracker terminates with exit code 148 when a syscall which is not present\n  in the allow list is intercepted.\n\n### Fixed\n\n- Fixed build with the `vsock` feature.\n\n## [0.13.0]\n\n### Added\n\n- Documentation for Logger API Requests in `docs/api_requests/logger.md`.\n- Documentation for Actions API Requests in `docs/api_requests/actions.md`.\n- Documentation for MMDS in `docs/mmds.md`.\n- Flush metrics on request via a PUT `/actions` with the `action_type` field set\n  to `FlushMetrics`.\n\n### Changed\n\n- Updated the swagger definition of the `Logger` to specify the required fields\n  and provide default values for optional fields.\n- Default `seccomp-level` is `2` (was previously 0).\n- API Resource IDs can only contain alphanumeric characters and underscores.\n\n### Fixed\n\n- Seccomp filters are now applied to all Firecracker threads.\n- Enforce minimum length of 1 character for the jailer ID.\n- Exit with error code when starting the jailer process fails.\n\n### Removed\n\n- Removed `InstanceHalt` from the list of possible actions.\n\n## [0.12.0]\n\n### Added\n\n- The `/logger` API has a new field called `options`. This is an array of\n  strings that specify additional logging configurations. The only supported\n  value is `LogDirtyPages`.\n- When the `LogDirtyPages` option is configured via `PUT /logger`, a new metric\n  called `memory.dirty_pages` is computed as the number of pages dirtied by the\n  guest since the last time the metric was flushed.\n- Log messages on both graceful and forceful termination.\n- Availability of the list of dependencies for each commit inside the code base.\n- Documentation on vsock experimental feature and host setup recommendations.\n\n### Changed\n\n- `PUT` requests on `/mmds` always return 204 on success.\n- `PUT` operations on `/network-interfaces` API resources no longer accept the\n  previously required `state` parameter.\n- The jailer starts with `--seccomp-level=2` (was previously 0) by default.\n- Log messages use `anonymous-instance` as instance id if none is specified.\n\n### Fixed\n\n- Fixed crash upon instance start on hosts without 1GB huge page support.\n- Fixed \"fault_message\" inconsistency between Open API specification and code\n  base.\n- Ensure MMDS compatibility with C5's IMDS implementation.\n- Corrected the swagger specification to ensure `OpenAPI 2.0` compatibility.\n\n## [0.11.0]\n\n### Added\n\n- Apache-2.0 license\n- Docs:\n  - [charter](CHARTER.md)\n  - [contribution guidelines](CONTRIBUTING.md)\n  - [design](docs/design.md)\n  - [getting started guide](docs/getting-started.md)\n  - [security policy](SECURITY.md)\n  - [specifications](SPECIFICATION.md)\n- **Experimental** vhost-based vsock implementation.\n\n### Changed\n\n- Improved MMDS network stack performance.\n- If the logging system is not yet initialized (via `PUT /logger`), log events\n  are now sent to stdout/stderr.\n- Moved the `instance_info_fails` metric under `get_api_requests`\n- Improved [readme](README.md) and added links to more detailed information, now\n  featured in subject-specific docs.\n\n### Fixed\n\n- Fixed bug in the MMDS network stack, that caused some RST packets to be sent\n  without a destination.\n- Fixed bug in `PATCH /drives`, whereby the ID in the path was not checked\n  against the ID in the body.\n\n## [0.10.1]\n\n### Fixed\n\n- The Swagger definition was corrected.\n\n## [0.10.0]\n\n### Added\n\n- Each Firecracker process has an associated microVM Metadata Store (MMDS). Its\n  contents can be configured using the `/mmds` API resource.\n\n### Changed\n\n- The boot source is specified only with the `kernel_image_path` and the\n  optional parameter `boot_args`. All other fields are removed.\n- The `path_on_host` property in the drive specification is now marked as\n  *mandatory*.\n- PATCH drive only allows patching/changing the `path_on_host` property.\n- All PUT and PATCH requests return the status code 204.\n- CPUID brand string (aka model name) now includes the host CPU frequency.\n- API requests which add guest network interfaces have an additional parameter,\n  `allow_mmds_requests` which defaults to `false`.\n- Stopping the guest (e.g. using the `reboot` command) also terminates the\n  Firecracker process. When the Firecracker process ends for any reason, (other\n  than `kill -9`), metrics are flushed at the very end.\n- On startup `jailer` closes all inherited file descriptors based on\n  `sysconf(_SC_OPEN_MAX)` except input, output and error.\n- The microVM ID prefixes each Firecracker log line. This ID also appears in the\n  process `cmdline` so it's now possible to `ps | grep <ID>` for it.\n\n## [0.9.0]\n\n### Added\n\n- Seccomp filtering is configured via the `--seccomp-level` jailer parameter.\n- Firecracker logs the starting addresses of host memory areas provided as guest\n  memory slots to KVM.\n- The metric `panic_count` gets incremented to signal that a panic has occurred.\n- Firecracker logs a backtrace when it crashes following a panic.\n- Added basic instrumentation support for measuring boot time.\n\n### Changed\n\n- `StartInstance` is a synchronous API request (it used to be an asynchronous\n  request).\n\n### Fixed\n\n- Ensure that fault messages sent by the API have valid JSON bodies.\n- Use HTTP response code 500 for internal Firecracker errors, and 400 for user\n  errors on InstanceStart.\n- Serialize the machine configuration fields to the correct data types (as\n  specified in the Swagger definition).\n- NUMA node assignment is properly enforced by the jailer.\n- The `is_root_device` and `is_read_only` properties are now marked as required\n  in the Swagger definition of `Drive` object properties.\n\n### Removed\n\n- `GET` requests on the `/actions` API resource are no longer supported.\n- The metrics associated with asynchronous actions have been removed.\n- Remove the `action_id` parameter for `InstanceStart`, both from the URI and\n  the JSON request body.\n\n## [0.8.0]\n\n### Added\n\n- The jailer can now be configured to enter a preexisting network namespace, and\n  to run as a daemon.\n- Enabled PATCH operations on `/drives` resources.\n\n### Changed\n\n- The microVM `id` supplied to the jailer may now contain alphanumeric\n  characters and hyphens, up to a maximum length of 64 characters.\n- Replaced the `permissions` property of `/drives` resources with a boolean.\n- Removed the `state` property of `/drives` resources.\n\n## [0.7.0]\n\n### Added\n\n- Rate limiting functionality allows specifying an initial one time burst size.\n- Firecracker can now boot from an arbitrary boot partition by specifying its\n  unique id in the driver's API call.\n- Block device rescan is triggered via a PUT `/actions` with the drive ID in the\n  action body's `payload` field and the `action_type` field set to\n  `BlockDeviceRescan`.\n\n### Changed\n\n- Removed `noapic` from the default guest kernel command line.\n- The `action_id` parameter is no longer required for synchronous PUT requests\n  to `/actions`.\n- PUT requests are no longer allowed on `/drives` resources after the guest has\n  booted.\n\n### Fixed\n\n- Fixed guest instance kernel loader to accelerate vCPUs launch and consequently\n  guest kernel boot.\n- Fixed network emulation to improve IO performance.\n\n## [0.6.0]\n\n### Added\n\n- Firecracker uses two different named pipes to record human readable logs and\n  metrics, respectively.\n\n### Changed\n\n- Seccomp filtering can be enabled via setting the `USE_SECCOMP` environment\n  variable.\n- It is possible to supply only a partial specification when attaching a rate\n  limiter (i.e. just the bandwidth or ops parameter).\n- Errors related to guest network interfaces are now more detailed.\n\n### Fixed\n\n- Fixed a bug that was causing Firecracker to panic whenever a `PUT` request was\n  sent on an existing network interface.\n- The `id` parameter of the `jailer` is required to be an RFC 4122-compliant\n  UUID.\n- Fixed an issue which caused the network RX rate limiter to be more restrictive\n  than intended.\n- API requests which contain unknown fields will generate an error.\n- Fixed an issue related to high CPU utilization caused by improper `KVM PIT`\n  configuration.\n- It is now possible to create more than one network tun/tap interface inside a\n  jailed Firecracker.\n\n## [0.5.0]\n\n### Added\n\n- Added metrics for API requests, VCPU and device actions for the serial console\n  (`UART`), keyboard (`i8042`), block and network devices. Metrics are logged\n  every 60 seconds.\n- A CPU features template for C3 is available, in addition to the one for T2.\n- Seccomp filters restrict Firecracker from calling any other system calls than\n  the minimum set it needs to function properly. The filters are enabled by\n  setting the `USE_SECCOMP` environment variable to 1 before running\n  Firecracker.\n- Firecracker can be started by a new binary called `jailer`. The jailer takes\n  as command line arguments a unique ID, the path to the Firecracker binary, the\n  NUMA node that Firecracker will be assigned to and a `uid` and `gid` for\n  Firecracker to run under. It sets up a `chroot` environment and a `cgroup`,\n  and calls exec to morph into Firecracker.\n\n### Changed\n\n- In case of failure, the metrics and the panic location are logged before\n  aborting.\n- Metric values are reset with every flush.\n- `CPUTemplate` is now called `CpuTemplate` in order to work seamlessly with the\n  swagger code generator for Go.\n- `firecracker-beta.yaml` is now called `firecracker.yaml`.\n\n### Fixed\n\n- Handling was added for several untreated KVM exit scenarios, which could have\n  led to panic.\n- Fixed a bug that caused Firecracker to crash when attempting to disable the\n  `IA32_DEBUG_INTERFACE MSR` flag in the T2 CPU features.\n\n### Removed\n\n- Removed a leftover file generated by the logger unit tests.\n- Removed `firecracker-v1.0.yaml`.\n\n## [0.4.0]\n\n### Added\n\n- The CPU Template can be set with an API call on `PUT /machine-config`. The\n  only available template is T2.\n- Hyperthreading can be enabled/disabled with an API call on\n  `PUT /machine-config`. By default, hyperthreading is disabled.\n- Added boot time performance test (`tests/performance/test_boottime.py`).\n- Added Rate Limiter for VirtIO/net and VirtIO/net devices. The Rate Limiter\n  uses two token buckets to limit rate on bytes/s and ops/s. The rate limiter\n  can be (optionally) configured per drive with a `PUT` on `/drives/{drive_id}`\n  and per network interface with a `PUT` on `/network-interface/{iface_id}`.\n- Implemented pre-boot PUT updates for `/boot-source`, `/drives`,\n  `/network-interfaces` and `/vsock`.\n- Added integration tests for `PUT` updates.\n\n### Changed\n\n- Moved the API definition (`swagger/firecracker-beta.yaml`) to the `api_server`\n  crate.\n- Removed `\"console=ttyS0\"` and added `\"8250.nr_uarts=0\"` to the default kernel\n  command line to decrease the boot time.\n- Changed the CPU topology to have all logical CPUs on a single socket.\n- Removed the upper bound on CPU count as with musl there is no good way to get\n  the total number of logical processors on a host.\n- Build time tests now print the full output of commands.\n- Disabled the Performance Monitor Unit and the Turbo Boost.\n- Check the expected KVM capabilities before starting the VM.\n- Logs now have timestamps.\n\n### Fixed\n\n- `testrun.sh` can run on platforms with more than one package manager by\n  setting the package manager via a command line parameter (`-p`).\n- Allow correct set up of multiple network-interfaces with auto-generated MAC.\n- Fixed sporadic bug in VirtIO which was causing lost packages.\n- Don't allow `PUT` requests with empty body on `/machine-config`.\n- Deny `PUT` operations after the microvm boots (exception: the temporarily fix\n  for live resize of block devices).\n\n### Removed\n\n- Removed examples crate. This used to have a Python example of starting\n  Firecracker. This is replaced by `test_api.py` integration tests.\n- Removed helper scripts for getting coverage and coding style errors. These\n  were replaced by `test_coverage.py` and `test_style.py` test integration\n  tests.\n- Removed `--vmm-no-api` command line option. Firecracker can only be started\n  via the API.\n\n## [0.3.0]\n\n### Added\n\n- Users can interrogate the Machine Configuration (i.e. vcpu count and memory\n  size) using a `GET` request on `/machine-config`.\n- The logging system can be configured through the API using a `PUT` on\n  `/logger`.\n- Block devices support live resize by calling `PUT` with the same parameters as\n  when the block was created.\n- Release builds have Link Time Optimization (LTO) enabled.\n- Firecracker is built with `musl`, resulting in a statically linked binary.\n- More in-tree integration tests were added as part of the continuous\n  integration system.\n\n### Changed\n\n- The vcpu count is enforced to `1` or an even number.\n- The Swagger definition of rate limiters was updated.\n- Syslog-enabled logs were replaced with a host-file backed mechanism.\n\n### Fixed\n\n- The host topology of the CPU and the caches is not leaked into the microvm\n  anymore.\n- Boot time was improved by advertising the availability of the TSC deadline\n  timer.\n- Fixed an issue which prevented Firecracker from working on 4.14 (or newer)\n  host kernels.\n- Specifying the MAC address for an interface through the API is optional.\n\n### Removed\n\n- Removed support for attaching vsock devices.\n- Removed support for building Firecracker with glibc.\n\n## [0.2.0]\n\n### Added\n\n- Users can now interrogate Instance Information (currently just instance state)\n  through the API.\n\n### Changed\n\n- Renamed `api/swagger/all.yaml` to `api/swagger/firecracker-v1.0.yaml` which\n  specifies targeted API support for Firecracker v1.0.\n- Renamed `api/swagger/firecracker-v0.1.yaml` to\n  `api/swagger/firecracker-beta.yaml` which specifies the currently supported\n  API.\n- Users can now enforce that an emulated block device is read-only via the API.\n  To specify whether a block device is read-only or read-write, an extra\n  \"permissions\" field was added to the Drive definition in the API. The root\n  filesystem is automatically mounted in the guest OS as `ro`/`rw` according to\n  the specified \"permissions\". It's the responsibility of the user to mount any\n  other read-only block device as such within the guest OS.\n- Users can now stop the guest VM using the API. Actions of type `InstanceHalt`\n  are now supported via the API.\n\n### Fixed\n\n- Added support for `getDeviceID()` in `virtIO-block`. Without this, the guest\n  Linux kernel would complain at boot time that the operation is unsupported.\n- `stdin` control is returned to the Firecracker process when guest VM is\n  inactive. Raw mode `stdin` is forwarded to the guest OS when guest VM is\n  running.\n\n### Removed\n\n- Removed `api/swagger/actions.yaml`.\n- Removed `api/swagger/devices.yaml`.\n- Removed `api/swagger/firecracker-mvp.yaml`.\n- Removed `api/swagger/limiters.yaml`.\n\n## [0.1.1]\n\n### Changed\n\n- Users can now specify the MAC address of a guest network interface via the\n  `PUT` network interface API request. Previously, the guest MAC address\n  parameter was ignored.\n\n### Fixed\n\n- Fixed a guest memory allocation issue, which previously led to a potentially\n  significant memory chunk being wasted.\n- Fixed an issue which caused compilation problems, due to a compatibility\n  breaking transitive dependency in the tokio suite of crates.\n\n## [0.1.0]\n\n### Added\n\n- One-process virtual machine manager (one Firecracker per microVM).\n- RESTful API running on a unix socket. The API supported by v0.1 can be found\n  at `api/swagger/firecracker-v0.1.yaml`.\n- Emulated keyboard (`i8042`) and serial console (`UART`). The microVM serial\n  console input and output are connected to those of the Firecracker process\n  (this allows direct console access to the guest OS).\n- The capability of mapping an existing host tun-tap device as a VirtIO/net\n  device into the microVM.\n- The capability of mapping an existing host file as a GirtIO/block device into\n  the microVM.\n- The capability of creating a VirtIO/vsock between the host and the microVM.\n- Default demand fault paging & CPU oversubscription.\n"
        },
        {
          "name": "CHARTER.md",
          "type": "blob",
          "size": 1.5478515625,
          "content": "# Firecracker Charter\n\n## Mission\n\nOur mission is to enable secure, multi-tenant, minimal-overhead execution of\ncontainer and function workloads.\n\n## Tenets (unless you know better ones)\n\nThese tenets guide Firecracker's development:\n\n1. **Built-In Security**: We provide compute security barriers that enable\n   multi-tenant workloads, and cannot be mistakenly disabled by customers.\n   Customer workloads are simultaneously considered sacred (shall not be\n   touched) and malicious (shall be defended against). We continuously invest in\n   defense in depth and maintain mechanisms that ensure security best practices.\n1. **Light-Weight Virtualization**: We prioritize measuring Firecracker's\n   hardware overhead in the dimensions that are important for our customers, and\n   we strive to make this overhead negligible.\n1. **Minimalist in Features**: If it's not clearly required for our mission, we\n   won't build it. We maintain a single implementation per capability, and\n   deprecate obsolete implementations; resolving exceptions is a high priority\n   issue.\n1. **Compute Oversubscription**: All of the hardware compute resources exposed\n   by Firecracker to guests can be securely oversubscribed.\n\n## Contributions & Project Roles\n\nAll contributions must align with this charter and follow Firecracker's\n[contribution process](CONTRIBUTING.md).\n\nFirecracker [maintainers](MAINTAINERS.md) merge contributions into the main\nbranch and create Firecracker releases. Maintainers are also subject to the\nmission and tenets outlined above. Anyone may submit and review contributions.\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 0.3466796875,
          "content": "# Code of Conduct\n\nThis project has adopted the\n[Amazon Open Source Code of Conduct](https://aws.github.io/code-of-conduct). For\nmore information see the\n[Code of Conduct FAQ](https://aws.github.io/code-of-conduct-faq) or contact\n[opensource-codeofconduct@amazon.com](mailto:opensource-codeofconduct@amazon.com)\nwith any additional questions or comments.\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 9.6181640625,
          "content": "# Contributions Welcome\n\nFirecracker is running serverless workloads at scale within AWS, but it's still\nday 1 on the journey guided by our [mission](CHARTER.md). There's a lot more to\nbuild and we welcome all contributions.\n\nThere's a lot to contribute to in Firecracker. We've opened issues for all the\nfeatures we want to build and improvements we want to make. Good first issues\nare labeled accordingly. We're also keen to hearing about your use cases and how\nwe can support them, your ideas, and your feedback for what's already here.\n\nIf you're just looking for quick feedback for an idea or proposal, open an\n[issue](https://github.com/firecracker-microvm/firecracker/issues) or chat with\nus on the [Firecracker Slack workgroup](https://firecracker-microvm.slack.com).\n\nFollow the [contribution workflow](#contribution-workflow) for submitting your\nchanges to the Firecracker codebase. If you want to receive high-level but still\ncommit-based feedback for a contribution, follow the\n[request for comments](#request-for-comments) steps instead.\n\n## Contribution Workflow\n\nFirecracker uses the “fork-and-pull” development model. Follow these steps if\nyou want to merge your changes to Firecracker:\n\n1. Within your fork of\n   [Firecracker](https://github.com/firecracker-microvm/firecracker), create a\n   branch for your contribution. Use a meaningful name.\n1. Create your contribution, meeting all\n   [contribution quality standards](#contribution-quality-standards)\n1. [Create a pull request](https://help.github.com/articles/creating-a-pull-request-from-a-fork/)\n   against the main branch of the Firecracker repository.\n1. Add two reviewers to your pull request (a maintainer will do that for you if\n   you're new). Work with your reviewers to address any comments and obtain a\n   minimum of 2 approvals from [maintainers](MAINTAINERS.md). To update your\n   pull request, amend existing commits whenever applicable. Then force-push the\n   new changes to your pull request branch. Address all review comments you\n   receive.\n1. Once the pull request is approved, one of the maintainers will merge it.\n\n## Request for Comments\n\nIf you just want to receive feedback for a contribution proposal, open an “RFC”\n(“Request for Comments”) pull request:\n\n1. On your fork of\n   [Firecracker](https://github.com/firecracker-microvm/firecracker), create a\n   branch for the contribution you want feedback on. Use a meaningful name.\n1. Create your proposal based on the existing codebase.\n1. [Create a pull request](https://help.github.com/articles/creating-a-pull-request-from-a-fork/)\n   against the main branch of the Firecracker repository. Prefix your pull\n   request name with `[RFC]`.\n1. Discuss your proposal with the community on the pull request page (or on any\n   other channel). Add the conclusion(s) of this discussion to the pull request\n   page.\n\n## Contribution Quality Standards\n\nMost quality and style standards are enforced automatically during integration\ntesting. For ease of use you can setup a git pre-commit hook by running the\nfollowing in the Firecracker root directory:\n\n```\ncargo install rusty-hook\nrusty-hook init\n```\n\nThis project also has linters for Python and Markdown. These will be called by\nthe pre-commit when you modify any Python and Markdown files. In order to make\nsure you are setup we recommend you install\n[poetry](https://python-poetry.org/docs/) and\n[pyenv](https://github.com/pyenv/pyenv?tab=readme-ov-file#installation).\n\nPoetry is used by this project and pyenv will help you make sure you have a\nPython version compatible with the poetry python project we use as part of\n`./tools/devctr`.\n\nOnce you have these two installed you can run the following to install the dev\ncontainer poetry project:\n\n```\npoetry -C ./tools/devctr install --no-root\n```\n\nThen, you can activate the poetry virtual environment by running:\n\n```\npoetry shell -C ./tools/devctr\n```\n\nWhich you will need to do after modifying python or markdown files so that the\npre-commit can finish successfully.\n\nYour contribution needs to meet the following standards:\n\n- Separate each **logical change** into its own commit.\n\n- Each commit must pass all unit & code style tests, and the full pull request\n  must pass all integration tests. See [tests/README.md](tests/README.md) for\n  information on how to run tests.\n\n- Unit test coverage must _increase_ the overall project code coverage.\n\n- Include integration tests for any new functionality in your pull request.\n\n- Document all your public functions.\n\n- Add a descriptive message for each commit. Follow\n  [commit message best practices](https://github.com/erlang/otp/wiki/writing-good-commit-messages).\n\n- A good commit message may look like\n\n  ```\n  A descriptive title of 72 characters or fewer\n\n  A concise description where each line is 72 characters or fewer.\n\n  Signed-off-by: <A full name> <A email>\n  Co-authored-by: <B full name> <B email>\n  ```\n\n- **Usage of `unsafe` is heavily discouraged**. If `unsafe` is required, it\n  should be accompanied by a comment detailing its...\n\n  - Justification, potentially including quantifiable reasons why safe\n    alternatives were not used (e.g. via a benchmark showing a valuable[^1]\n    performance improvements).\n  - Safety, as per\n    [`clippy::undocumented_unsafe_blocks`](https://rust-lang.github.io/rust-clippy/master/#undocumented_unsafe_blocks).\n    This comment must list all invariants of the called function, and explain\n    why there are upheld. If relevant, it must also prove that\n    [undefined behavior](https://doc.rust-lang.org/reference/behavior-considered-undefined.html)\n    is not possible.\n\n  E.g.\n\n  ```rust\n  // Test creating a resource.\n  // JUSTIFICATION: This cannot be accomplished without unsafe as\n  // `external_function()` returns `RawFd`. An alternative here still uses\n  // unsafe e.g. `drop(unsafe { OwnedFd::from_raw_fd(external_function()) });`.\n  // SAFETY: `external_function()` returns a valid file descriptor.\n  unsafe {\n      libc::close(external_function());\n  }\n  ```\n\n- Avoid using `Option::unwrap`/`Result::unwrap`. Prefer propagating errors\n  instead of aborting execution, or using `Option::expect`/`Result::except` if\n  no alternative exists. Leave a comment explaining why the code will not panic\n  in practice. Often, `unwrap`s are used because a previous check ensures they\n  are safe, e.g.\n\n  ```rs\n  let my_value: u32 = ...;\n  if my_value <= u16::MAX {\n      Ok(my_value.try_into::<u16>().unwrap())\n  } else {\n      Err(Error::Overflow)\n  }\n  ```\n\n  These can often be rewritten using `.map`/`.map_err` or `match`/`if let`\n  constructs such as\n\n  ```rs\n  my_value.try_into::<u16>()\n      .map_err(|_| Error::Overflow)\n  ```\n\n  See also\n  [this PR](https://github.com/firecracker-microvm/firecracker/pull/3557) for a\n  lot of examples.\n\n- Document your pull requests. Include the reasoning behind each change, and the\n  testing done.\n\n- Acknowledge Firecracker's [Apache 2.0 license](LICENSE) and certify that no\n  part of your contribution contravenes this license by signing off on all your\n  commits with `git -s`. Ensure that every file in your pull request has a\n  header referring to the repository license file.\n\n## Developer Certificate of Origin\n\nFirecracker is an open source product released under the\n[Apache 2.0 license](LICENSE).\n\nWe respect intellectual property rights of others and we want to make sure all\nincoming contributions are correctly attributed and licensed. A Developer\nCertificate of Origin (DCO) is a lightweight mechanism to do that.\n\nThe DCO is a declaration attached to every contribution made by every developer.\nIn the commit message of the contribution, the developer simply adds a\n`Signed-off-by` statement and thereby agrees to the DCO, which you can find\nbelow or at DeveloperCertificate.org (<http://developercertificate.org/>).\n\n```\nDeveloper's Certificate of Origin 1.1\n\nBy making a contribution to this project, I certify that:\n\n(a) The contribution was created in whole or in part by me and I\n    have the right to submit it under the open source license\n    indicated in the file; or\n\n(b) The contribution is based upon previous work that, to the\n    best of my knowledge, is covered under an appropriate open\n    source license and I have the right under that license to\n    submit that work with modifications, whether created in whole\n    or in part by me, under the same open source license (unless\n    I am permitted to submit under a different license), as\n    Indicated in the file; or\n\n(c) The contribution was provided directly to me by some other\n    person who certified (a), (b) or (c) and I have not modified\n    it.\n\n(d) I understand and agree that this project and the contribution\n    are public and that a record of the contribution (including\n    all personal information I submit with it, including my\n    sign-off) is maintained indefinitely and may be redistributed\n    consistent with this project or the open source license(s)\n    involved.\n```\n\nWe require that every contribution to Firecracker is signed with a Developer\nCertificate of Origin. DCO checks are enabled via <https://github.com/apps/dco>,\nand your PR will fail CI without it.\n\nAdditionally, we kindly ask you to use your real name. We do not accept\nanonymous contributors, nor those utilizing pseudonyms. Each commit must include\na DCO which looks like this:\n\n```\nSigned-off-by: Jane Smith <jane.smith@email.com>\n```\n\nYou may type this line on your own when writing your commit messages. However,\nif your `user.name` and `user.email` are set in your git config, you can use\n`-s` or `--signoff` to add the `Signed-off-by` line to the end of the commit\nmessage automatically.\n\nForgot to add DCO to a commit? Amend it with `git commit --amend -s`.\n\n[^1]: Performance improvements in non-hot paths are unlikely to be considered\n    valuable.\n"
        },
        {
          "name": "CREDITS.md",
          "type": "blob",
          "size": 10.5703125,
          "content": "# Firecracker Credits and Thanks\n\n(This file is autogenerated using [update-credits.sh](tools/update-credits.sh).)\n\nFirecracker started with the code from the Chrome OS Virtual Machine Monitor\n([crosvm](https://github.com/google/crosvm)), a VMM written in Rust with a focus\non safety and security. Thanks go to:\n\n- [Zach Reizner](https://github.com/zachreizner) <zachr@chromium.org>\n- [Dylan Reid](https://github.com/dgreid) <dgreid@chromium.org>\n- [Daniel Verkamp](https://github.com/danielverkamp) <dverkamp@chromium.org>\n- [Stephen Barber](https://github.com/smibarber) <smbarber@chromium.org>\n- [Chirantan Ekbote](https://github.com/jynnantonix) <chirantan@chromium.org>\n- [Jason D. Clinton](https://github.com/jclinton) <jclinton@chromium.org>\n- Sonny Rao <sonnyrao@chromium.org>\n\nContributors to the Firecracker repository:\n\n- Aaqa Ishtyaq <aaqaishtyaq@gmail.com>\n- Aaron Hill <aa1ronham@gmail.com>\n- Aaron O'Mullan <aaron.omullan@gmail.com>\n- Abhijeet Kasurde <akasurde@redhat.com>\n- acatangiu <adrian@parity.io>\n- Adam Jensen <adam@acj.sh>\n- Adam Leskis <leskis@gmail.com>\n- Adrian Catangiu <acatan@amazon.com>\n- Ahmed Abouzied <ahmedaabouzied44@gmail.com>\n- Akhil Mohan <akhilerm@gmail.com>\n- Alakesh <alakeshh@amazon.com>\n- Aleksa Sarai <cyphar@cyphar.com>\n- Alex Chan <a.chan@wellcome.ac.uk>\n- Alex Glikson <alex.glikson@gmail.com>\n- Alexandra Iordache <aghecen@amazon.com>\n- Alexandru Agache <aagch@amazon.com>\n- Alexandru Branciog <branciog@amazon.com>\n- Alexandru Cihodaru <cihodar@amazon.com>\n- Alexandru-Cezar Sardan <alsardan@amazon.com>\n- Alin Dima <alindima@amazon.com>\n- Andrea Manzini <ilmanzo@gmail.com>\n- Andreea Florescu <fandree@amazon.com>\n- Andrei Casu-Pop <cpo@amazon.com>\n- Andrei Cipu <acipu@amazon.com>\n- Andrei Sandu <sandreim@amazon.com>\n- Andrew Yao <andr3wy@gmail.com>\n- Andrii Radyk <ander.ender@gmail.com>\n- andros21 <andrea.ros21@murena.io>\n- Angus McInnes <angus@amcinnes.info>\n- Arjun Ramachandrula <avrdev77@gmail.com>\n- Arun Gupta <arun.gupta@gmail.com>\n- Arunav Sanyal <Khalian@users.noreply.github.com>\n- Ashwin Ginoria <aginoria@amazon.com>\n- Atsushi Ishibashi <atsushi.ishibashi@finatext.com>\n- Aussie Schnore <aussiev123@yahoo.com>\n- Austin Vazquez <macedonv@amazon.com>\n- Ayato Tokubi <tokubi.ayato@gmail.com>\n- Babis Chalios <bchalios@amazon.es>\n- Bartosz Zbytniewski <bartosz.zbytniewski.dev@gmail.com>\n- Begley Brothers Inc <begleybrothers@gmail.com>\n- Ben Holmes <bencwholmes@gmail.com>\n- Benjamin Fry <benjaminfry@me.com>\n- bin liu <bin@hyper.sh>\n- binoychitale <binoychitale@gmail.com>\n- Bob Potter <bobby.potter@gmail.com>\n- Bogdan Ionita <bci@amazon.com>\n- Brandon Duffany <brandon@buildbuddy.io>\n- Brandon Pike <bpike@amazon.com>\n- Caleb Albers <7110138+CalebAlbers@users.noreply.github.com>\n- Cam Mannett <camden.mannett@protonmail.ch>\n- Carlos López <carlos.lopez@suse.com>\n- chaos matrix <mythsphoenix@outlook.com>\n- Char1ee <xingjianli59@gmail.com>\n- Chinmay Kousik <chinmaykousik1@gmail.com>\n- Chris Christensen <christianchristensen@gmail.com>\n- Christian González <cgonzalez@opennebula.io>\n- Christopher Diehl <diehl.chris24@gmail.com>\n- cneira <cneirabustos@gmail.com>\n- Colin Percival <cperciva@tarsnap.com>\n- Colton J. McCurdy <mccurdyc22@gmail.com>\n- Constantin Musca <mcostin@amazon.com>\n- CuriousCorrelation <curiouscorrelation@protonmail.com>\n- czybjtu <smartczy@outlook.com>\n- Damien Stanton <damien.stanton@gmail.com>\n- Dan Horobeanu <dhr@amazon.com>\n- Dan Lemmond <d.j.lemmond@gmail.com>\n- David Michael <fedora.dm0@gmail.com>\n- David Nguyen <nguydavi@amazon.com>\n- David Son <davbson@amazon.com>\n- David Ventura <davidventura27@gmail.com>\n- Deepesh Pathak <deepshpathak@gmail.com>\n- defunct <defunct@defunct.io>\n- Denis Andrejew <da.colonel@gmail.com>\n- Derek Manwaring <derekmn@amazon.com>\n- Diana Popa <dpopa@amazon.com>\n- Dmitrii <dmitrii.ustiugov@epfl.ch>\n- Echo-Head-Wall <101990236+Echo-Head-Wall@users.noreply.github.com>\n- Eddie Cazares <Ecazares15@utexas.edu>\n- Eduard Kyvenko <eduard.kyvenko@gmail.com>\n- Egor Lazarchuk <yegorlz@amazon.co.uk>\n- EvanJP <evanp1999@gmail.com>\n- Felipe R. Monteiro <felisous@amazon.com>\n- Filippo Sironi <sironi@amazon.de>\n- Fraser Pringle <fraser.pringle@gmail.com>\n- Gabe Jackson <gj@mail.co.de>\n- Gabriel Ionescu <gbi@amazon.com>\n- Garrett Squire <garrettsquire@gmail.com>\n- George Pisaltu <gpl@amazon.com>\n- George Siton <geosit@amazon.com>\n- german gomez <germangb42@gmail.com>\n- Gilad Naaman <gilad@naaman.io>\n- Greg Dunn <gregdunn@amazon.com>\n- Gregory Brzeski <gregory@brzeski.pl>\n- Grzegorz Uriasz <gorbak25@gmail.com>\n- Gulshan Kumar <kumargu@amazon.com>\n- Gábor Lipták <gliptak@gmail.com>\n- hacker65536 <s.hacker65536@gmail.com>\n- hatf0 <harrison@0xcc.pw>\n- Henri Yandell <hyandell@users.noreply.github.com>\n- Hermes <hermes.espinola@gmail.com>\n- Himanshu Neema <himanshun.iitkgp@gmail.com>\n- HQ01 <qh384@nyu.edu>\n- Iggy Jackson <iggy@theiggy.com>\n- ihciah <ihciah@gmail.com>\n- Ioana Chirca <chioana@amazon.com>\n- Ishwor Gurung <me@ishworgurung.com>\n- Iulian Barbu <iul@amazon.com>\n- Ives van Hoorne <ives@codesandbox.io>\n- Jack Thomson <jackabt@amazon.co.uk>\n- James Curtis <jxcurtis@amazon.co.uk>\n- James Turnbull <james@lovedthanlost.net>\n- Javier Romero <xavinux@gmail.com>\n- Jeff Widman <jeff@jeffwidman.com>\n- Jerome Gravel-Niquet <jeromegn@gmail.com>\n- Jing Yang <k.jingyang@gmail.com>\n- joaoleal <devjoaoleal1006@gmail.com>\n- Joel Winarske <joel.winarske@linux.com>\n- jonas serrano <jonas.corp@gmail.com>\n- Jonathan Browne <12983479+JBYoshi@users.noreply.github.com>\n- Jonathan Woollett-Light <jcawl@amazon.co.uk>\n- Josh Abraham <sinisterpatrician@gmail.com>\n- Josh McConnell <jmcconnell26@qub.ac.uk>\n- Joshua Abraham <sinisterpatrician@gmail.com>\n- Julian Stecklina <js@alien8.de>\n- Justus Adam <justbldr@amazon.com>\n- Ján Mochňak <mochja@users.noreply.github.com>\n- karthik nedunchezhiyan <karthik.n@zohocorp.com>\n- KarthikVelayutham <karthik.velayutham@gmail.com>\n- Kazuyoshi Kato <katokazu@amazon.com>\n- keyangxie <keyang.xie@gmail.com>\n- Kornel <kornel@cloudflare.com>\n- Krishna Kumar T <krishna.thokala2010@gmail.com>\n- krk <keremkat@gmail.com>\n- kumargu <kumargu@amazon.com>\n- Laura Loghin <lauralg@amazon.com>\n- lifupan <lifupan@gmail.com>\n- Liu Jiang <gerry@linux.alibaba.com>\n- Liviu Berciu <lberciu@amazon.com>\n- Lloyd <lloydmeta@gmail.com>\n- lloydmeta <lloydmeta@gmail.com>\n- Lorenzo Fontana <fontanalorenz@gmail.com>\n- LOU Xun <aquarhead@ela.build>\n- Lucas Zanela <me@lucaszanella.com>\n- Lukas Schwerdtfeger <lukas.schwerdtfeger@gmail.com>\n- Luminita Voicu <lumivo@amazon.com>\n- maciejhirsz <maciej.hirsz@gmail.com>\n- Malhar Vora <mlvora.2010@gmail.com>\n- Manohar Castelino <manohar.r.castelino@intel.com>\n- Marc Brooker <mbrooker@amazon.com>\n- Marco Cali <xmarcalx@amazon.co.uk>\n- Marco Vedovati <mvedovati@suse.com>\n- Markus Ziller <web+github@markusziller.de>\n- Masatoshi Higuchi <matt9ucci@gmail.com>\n- Massimiliano Torromeo <massimiliano.torromeo@gmail.com>\n- Matias Teragni <mteragni@amazon.com>\n- Matt Wilson <msw@amazon.com>\n- Matthew Schlebusch <schlebus@amazon.com>\n- Max Wittek <wimax@graplsecurity.com>\n- Mehrdad Arshad Rad <arshad.rad@gmail.com>\n- Michael Jarrett <1077485+EmeraldShift@users.noreply.github.com>\n- Michael Saah <msaah@linode.com>\n- Mihai Stan <stanmihai17cs@gmail.com>\n- milahu <milahu@gmail.com>\n- moricho <ikeda.morito@gmail.com>\n- Muki Kiboigo <muki@kiboigo.com>\n- Muskaan Singla <msinglaa@amazon.com>\n- Narek Galstyan <narekg@berkeley.edu>\n- Nathan Hoang <nathanhoang5@gmail.com>\n- Nathan Sizemore <nathanrsizemore@gmail.com>\n- Nicolas Mesa <nicolasmesa@gmail.com>\n- NikeNano <niklas.sven.hansson@gmail.com>\n- Nikita Kalyazin <kalyazin@amazon.co.uk>\n- Nikita Zakirov <zakironi@amazon.com>\n- Nikolay Edigaryev <edigaryev@gmail.com>\n- Noah Meyerhans <nmeyerha@amazon.com>\n- not required <bertdeb@gmail.com>\n- one230six <723682061@qq.com>\n- Pablo Barbáchano <pablob@amazon.com>\n- Patrick Roy <roypat@amazon.co.uk>\n- Paweł Bęza <pawel.beza99@gmail.com>\n- Peng Tao <bergwolf@gmail.com>\n- Penny Zheng <penny.zheng@arm.com>\n- Peter Hrvola <peter.hrvola@hotmail.com>\n- Petre Eftime <epetre@amazon.com>\n- Petros Angelatos <petrosagg@gmail.com>\n- Piyush Jain <piyushkj@cs.utexas.edu>\n- python273 <iam@python273.pw>\n- Radu Iliescu <riliescu@amazon.com>\n- Radu Matei Lăcraru <ral@amazon.com>\n- Radu Weiss <raduweis@amazon.com>\n- Ram Sripracha <ramsri@amazon.com>\n- rares <raresgmihalcea@gmail.com>\n- razn <rezwele@gmail.com>\n- Ria <juthi_paul@utexas.edu>\n- Riccardo Mancini <mancio@amazon.com>\n- Richard Case <richard@weave.works>\n- Rob Devereux <robdevereux92@gmail.com>\n- Robert Grimes <rmzgrimes@gmail.com>\n- Rodrigue Chakode <rodrigue.chakode@continental-corporation.com>\n- Rolf Neugebauer <neugebar@amazon.com>\n- Ryan Russell <git@ryanrussell.org>\n- Ryan Summerlin <summerlinryan@gmail.com>\n- Sam Jackson <sam@clique.app>\n- Samuel Knox <knoxsa@oregonstate.edu>\n- Samuel Ortiz <sameo@linux.intel.com>\n- ScmTble <ScmTble@qq.com>\n- seafoodfry <99568361+seafoodfry@users.noreply.github.com>\n- Sean Lavine <freewil@users.noreply.github.com>\n- Sebastien Boeuf <sebastien.boeuf@intel.com>\n- Serban Iorga <seriorga@amazon.com>\n- shakram02 <ahmedhamdyau@gmail.com>\n- Shen Jiale <shenjiale@baidu.com>\n- Shion Yamashita <shioyama1118@gmail.com>\n- singwm <singwm@amazon.com>\n- sladynnunes <snunes@usc.edu>\n- Sripracha <ramsri@amazon.com>\n- Stefan Nita <32079871+stefannita01@users.noreply.github.com>\n- StemCll <lydjotj6f@mozmail.com>\n- Sudan Landge <sudanl@amazon.co.uk>\n- sundar.preston.789@gmail.com <sundar.preston.789@gmail.com>\n- Takahiro Itazuri <itazur@amazon.com>\n- Tal Hoffman <talhof8@gmail.com>\n- Tamio-Vesa Nakajima <tamiove@amazon.com>\n- tidux <jon@dorsal.tk>\n- Tim Bannister <tim@scalefactory.com>\n- Tim Deegan <tdeegan@amazon.com>\n- timvisee <tim@visee.me>\n- Tobias Pfandzelter <pfandzelter@campus.tu-berlin.de>\n- Tomas Valenta <valenta.and.thomas@gmail.com>\n- Tomoya Iwata <iwata.tomoya@classmethod.jp>\n- Trăistaru Andrei Cristian <atc@amazon.com>\n- Tyler Anton <tyler@debian.anton>\n- Urvil Patel <patelurvil38@gmail.com>\n- Vibha Acharya <vibharya@amazon.co.uk>\n- Volker Simonis <volker.simonis@gmail.com>\n- Wei Yang <richard.weiyang@linux.alibaba.com>\n- Weixiao Huang <hwx.simle@gmail.com>\n- Wesley Norris <repnop@outlook.com>\n- William Hammond <william.t.hammond@gmail.com>\n- wllenyj <wllenyj@linux.alibaba.com>\n- wt-l00 <ei13suke@gmail.com>\n- Xiangpeng Hao <haoxiangpeng123@gmail.com>\n- xibz <impactbchang@gmail.com>\n- xiekeyang <keyang.xie@gmail.com>\n- Ye Sijun <junnplus@gmail.com>\n- Yichen Zhang <jakezhang2020@gmail.com>\n- YLyu <lyuyuan92@gmail.com>\n- YUAN LYU <lyuyuan92@gmail.com>\n- Yuval Kohavi <yuval.kohavi@gmail.com>\n- Yılmaz ŞEN <yilmazsen94@gmail.com>\n- Zhenyu Qi <qzydustin@hotmail.com>\n- Zi Shen Lim <zlim.lnx@gmail.com>\n- Zicklag <zicklag@katharostech.com>\n- Дамјан Георгиевски <gdamjan@gmail.com>\n"
        },
        {
          "name": "Cargo.lock",
          "type": "blob",
          "size": 42.75,
          "content": "# This file is automatically @generated by Cargo.\n# It is not intended for manual editing.\nversion = 4\n\n[[package]]\nname = \"acpi_tables\"\nversion = \"0.1.0\"\ndependencies = [\n \"displaydoc\",\n \"thiserror 2.0.9\",\n \"vm-memory\",\n \"zerocopy 0.8.14\",\n]\n\n[[package]]\nname = \"aead\"\nversion = \"0.5.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d122413f284cf2d62fb1b7db97e02edb8cda96d769b16e443a4f6195e35662b0\"\ndependencies = [\n \"crypto-common\",\n \"generic-array\",\n]\n\n[[package]]\nname = \"aes\"\nversion = \"0.8.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b169f7a6d4742236a0a00c541b845991d0ac43e546831af1249753ab4c3aa3a0\"\ndependencies = [\n \"cfg-if\",\n \"cipher\",\n \"cpufeatures\",\n]\n\n[[package]]\nname = \"aes-gcm\"\nversion = \"0.10.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"831010a0f742e1209b3bcea8fab6a8e149051ba6099432c8cb2cc117dec3ead1\"\ndependencies = [\n \"aead\",\n \"aes\",\n \"cipher\",\n \"ctr\",\n \"ghash\",\n \"subtle\",\n]\n\n[[package]]\nname = \"aho-corasick\"\nversion = \"1.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8e60d3430d3a69478ad0993f19238d2df97c507009a52b3c10addcd7f6bcb916\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"anes\"\nversion = \"0.1.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4b46cbb362ab8752921c97e041f5e366ee6297bd428a31275b9fcf1e380f7299\"\n\n[[package]]\nname = \"anstream\"\nversion = \"0.6.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8acc5369981196006228e28809f761875c0327210a891e941f4c683b3a99529b\"\ndependencies = [\n \"anstyle\",\n \"anstyle-parse\",\n \"anstyle-query\",\n \"anstyle-wincon\",\n \"colorchoice\",\n \"is_terminal_polyfill\",\n \"utf8parse\",\n]\n\n[[package]]\nname = \"anstyle\"\nversion = \"1.0.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"55cc3b69f167a1ef2e161439aa98aed94e6028e5f9a59be9a6ffb47aef1651f9\"\n\n[[package]]\nname = \"anstyle-parse\"\nversion = \"0.2.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3b2d16507662817a6a20a9ea92df6652ee4f94f914589377d69f3b21bc5798a9\"\ndependencies = [\n \"utf8parse\",\n]\n\n[[package]]\nname = \"anstyle-query\"\nversion = \"1.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"79947af37f4177cfead1110013d678905c37501914fba0efea834c3fe9a8d60c\"\ndependencies = [\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"anstyle-wincon\"\nversion = \"3.0.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2109dbce0e72be3ec00bed26e6a7479ca384ad226efdd66db8fa2e3a38c83125\"\ndependencies = [\n \"anstyle\",\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"arrayvec\"\nversion = \"0.7.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7c02d123df017efcdfbd739ef81735b36c5ba83ec3c59c80a9d7ecc718f92e50\"\n\n[[package]]\nname = \"autocfg\"\nversion = \"1.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ace50bade8e6234aa140d9a2f552bbee1db4d353f69b8217bc503490fc1a9f26\"\n\n[[package]]\nname = \"aws-lc-fips-sys\"\nversion = \"0.13.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"59057b878509d88952425fe694a2806e468612bde2d71943f3cd8034935b5032\"\ndependencies = [\n \"bindgen 0.69.5\",\n \"cc\",\n \"cmake\",\n \"dunce\",\n \"fs_extra\",\n \"libc\",\n \"paste\",\n \"regex\",\n]\n\n[[package]]\nname = \"aws-lc-rs\"\nversion = \"1.12.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f409eb70b561706bf8abba8ca9c112729c481595893fd06a2dd9af8ed8441148\"\ndependencies = [\n \"aws-lc-fips-sys\",\n \"aws-lc-sys\",\n \"paste\",\n \"untrusted\",\n \"zeroize\",\n]\n\n[[package]]\nname = \"aws-lc-sys\"\nversion = \"0.24.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"923ded50f602b3007e5e63e3f094c479d9c8a9b42d7f4034e4afe456aa48bfd2\"\ndependencies = [\n \"bindgen 0.69.5\",\n \"cc\",\n \"cmake\",\n \"dunce\",\n \"fs_extra\",\n \"paste\",\n]\n\n[[package]]\nname = \"base64\"\nversion = \"0.22.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"72b3254f16251a8381aa12e40e3c4d2f0199f8c6508fbecb9d91f575e0fbb8c6\"\n\n[[package]]\nname = \"bincode\"\nversion = \"1.3.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b1f45e9417d87227c7a56d22e471c6206462cba514c7590c09aff4cf6d1ddcad\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"bindgen\"\nversion = \"0.68.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"726e4313eb6ec35d2730258ad4e15b547ee75d6afaa1361a922e78e59b7d8078\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"cexpr\",\n \"clang-sys\",\n \"lazy_static\",\n \"lazycell\",\n \"peeking_take_while\",\n \"proc-macro2\",\n \"quote\",\n \"regex\",\n \"rustc-hash\",\n \"shlex\",\n \"syn\",\n]\n\n[[package]]\nname = \"bindgen\"\nversion = \"0.69.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"271383c67ccabffb7381723dea0672a673f292304fcb45c01cc648c7a8d58088\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"cexpr\",\n \"clang-sys\",\n \"itertools 0.10.5\",\n \"lazy_static\",\n \"lazycell\",\n \"log\",\n \"prettyplease\",\n \"proc-macro2\",\n \"quote\",\n \"regex\",\n \"rustc-hash\",\n \"shlex\",\n \"syn\",\n \"which\",\n]\n\n[[package]]\nname = \"bitflags\"\nversion = \"1.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bef38d45163c2f1dde094a7dfd33ccf595c92905c8f8f4fdc18d06fb1037718a\"\n\n[[package]]\nname = \"bitflags\"\nversion = \"2.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b048fb63fd8b5923fc5aa7b340d8e156aec7ec02f0c78fa8a6ddc2613f6f71de\"\n\n[[package]]\nname = \"byteorder\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1fd0f2584146f6f2ef48085050886acf353beff7305ebd1ae69500e27c67f64b\"\n\n[[package]]\nname = \"cargo_toml\"\nversion = \"0.21.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5fbd1fe9db3ebf71b89060adaf7b0504c2d6a425cf061313099547e382c2e472\"\ndependencies = [\n \"serde\",\n \"toml\",\n]\n\n[[package]]\nname = \"cast\"\nversion = \"0.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"37b2a672a2cb129a2e41c10b1224bb368f9f37a2b16b612598138befd7b37eb5\"\n\n[[package]]\nname = \"cc\"\nversion = \"1.2.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a012a0df96dd6d06ba9a1b29d6402d1a5d77c6befd2566afdc26e10603dc93d7\"\ndependencies = [\n \"jobserver\",\n \"libc\",\n \"shlex\",\n]\n\n[[package]]\nname = \"cexpr\"\nversion = \"0.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6fac387a98bb7c37292057cffc56d62ecb629900026402633ae9160df93a8766\"\ndependencies = [\n \"nom\",\n]\n\n[[package]]\nname = \"cfg-if\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd\"\n\n[[package]]\nname = \"ciborium\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"42e69ffd6f0917f5c029256a24d0161db17cea3997d185db0d35926308770f0e\"\ndependencies = [\n \"ciborium-io\",\n \"ciborium-ll\",\n \"serde\",\n]\n\n[[package]]\nname = \"ciborium-io\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"05afea1e0a06c9be33d539b876f1ce3692f4afea2cb41f740e7743225ed1c757\"\n\n[[package]]\nname = \"ciborium-ll\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"57663b653d948a338bfb3eeba9bb2fd5fcfaecb9e199e87e1eda4d9e8b240fd9\"\ndependencies = [\n \"ciborium-io\",\n \"half\",\n]\n\n[[package]]\nname = \"cipher\"\nversion = \"0.4.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"773f3b9af64447d2ce9850330c473515014aa235e6a783b02db81ff39e4a3dad\"\ndependencies = [\n \"crypto-common\",\n \"inout\",\n]\n\n[[package]]\nname = \"clang-sys\"\nversion = \"1.8.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0b023947811758c97c59bf9d1c188fd619ad4718dcaa767947df1cadb14f39f4\"\ndependencies = [\n \"glob\",\n \"libc\",\n \"libloading\",\n]\n\n[[package]]\nname = \"clap\"\nversion = \"4.5.23\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3135e7ec2ef7b10c6ed8950f0f792ed96ee093fa088608f1c76e569722700c84\"\ndependencies = [\n \"clap_builder\",\n \"clap_derive\",\n]\n\n[[package]]\nname = \"clap-num\"\nversion = \"1.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0e063d263364859dc54fb064cedb7c122740cd4733644b14b176c097f51e8ab7\"\ndependencies = [\n \"num-traits\",\n]\n\n[[package]]\nname = \"clap_builder\"\nversion = \"4.5.23\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"30582fc632330df2bd26877bde0c1f4470d57c582bbc070376afcd04d8cb4838\"\ndependencies = [\n \"anstream\",\n \"anstyle\",\n \"clap_lex\",\n \"strsim\",\n]\n\n[[package]]\nname = \"clap_derive\"\nversion = \"4.5.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4ac6a0c7b1a9e9a5186361f67dfa1b88213572f427fb9ab038efb2bd8c582dab\"\ndependencies = [\n \"heck\",\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"clap_lex\"\nversion = \"0.7.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f46ad14479a25103f283c0f10005961cf086d8dc42205bb44c46ac563475dca6\"\n\n[[package]]\nname = \"clippy-tracing\"\nversion = \"0.1.0\"\ndependencies = [\n \"clap\",\n \"itertools 0.14.0\",\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n \"uuid\",\n \"walkdir\",\n]\n\n[[package]]\nname = \"cmake\"\nversion = \"0.1.52\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c682c223677e0e5b6b7f63a64b9351844c3f1b1678a68b7ee617e30fb082620e\"\ndependencies = [\n \"cc\",\n]\n\n[[package]]\nname = \"colorchoice\"\nversion = \"1.0.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5b63caa9aa9397e2d9480a9b13673856c78d8ac123288526c37d7839f2a86990\"\n\n[[package]]\nname = \"cpu-template-helper\"\nversion = \"1.11.0-dev\"\ndependencies = [\n \"clap\",\n \"displaydoc\",\n \"libc\",\n \"log-instrument\",\n \"serde\",\n \"serde_json\",\n \"thiserror 2.0.9\",\n \"vmm\",\n \"vmm-sys-util\",\n]\n\n[[package]]\nname = \"cpufeatures\"\nversion = \"0.2.16\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"16b80225097f2e5ae4e7179dd2266824648f3e2f49d9134d584b76389d31c4c3\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"crc64\"\nversion = \"2.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2707e3afba5e19b75d582d88bc79237418f2a2a2d673d01cf9b03633b46e98f3\"\n\n[[package]]\nname = \"criterion\"\nversion = \"0.5.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f2b12d017a929603d80db1831cd3a24082f8137ce19c69e6447f54f5fc8d692f\"\ndependencies = [\n \"anes\",\n \"cast\",\n \"ciborium\",\n \"clap\",\n \"criterion-plot\",\n \"is-terminal\",\n \"itertools 0.10.5\",\n \"num-traits\",\n \"once_cell\",\n \"oorandom\",\n \"regex\",\n \"serde\",\n \"serde_derive\",\n \"serde_json\",\n \"tinytemplate\",\n \"walkdir\",\n]\n\n[[package]]\nname = \"criterion-plot\"\nversion = \"0.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6b50826342786a51a89e2da3a28f1c32b06e387201bc2d19791f622c673706b1\"\ndependencies = [\n \"cast\",\n \"itertools 0.10.5\",\n]\n\n[[package]]\nname = \"crunchy\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7a81dae078cea95a014a339291cec439d2f232ebe854a9d672b796c6afafa9b7\"\n\n[[package]]\nname = \"crypto-common\"\nversion = \"0.1.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1bfb12502f3fc46cca1bb51ac28df9d618d813cdc3d2f25b9fe775a34af26bb3\"\ndependencies = [\n \"generic-array\",\n \"typenum\",\n]\n\n[[package]]\nname = \"ctr\"\nversion = \"0.9.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0369ee1ad671834580515889b80f2ea915f23b8be8d0daa4bbaf2ac5c7590835\"\ndependencies = [\n \"cipher\",\n]\n\n[[package]]\nname = \"derive_more\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4a9b99b9cbbe49445b21764dc0625032a89b145a2642e67603e1c936f5458d05\"\ndependencies = [\n \"derive_more-impl\",\n]\n\n[[package]]\nname = \"derive_more-impl\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cb7330aeadfbe296029522e6c40f315320aba36fc43a5b3632f3795348f3bd22\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n \"unicode-xid\",\n]\n\n[[package]]\nname = \"device_tree\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f18f717c5c7c2e3483feb64cccebd077245ad6d19007c2db0fd341d38595353c\"\n\n[[package]]\nname = \"displaydoc\"\nversion = \"0.2.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"97369cbbc041bc366949bc74d34658d6cda5621039731c6310521892a3a20ae0\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"dunce\"\nversion = \"1.0.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"92773504d58c093f6de2459af4af33faa518c13451eb8f2b5698ed3d36e7c813\"\n\n[[package]]\nname = \"either\"\nversion = \"1.13.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"60b1af1c220855b6ceac025d3f6ecdd2b7c4894bfe9cd9bda4fbb4bc7c0d4cf0\"\n\n[[package]]\nname = \"env_filter\"\nversion = \"0.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"186e05a59d4c50738528153b83b0b0194d3a29507dfec16eccd4b342903397d0\"\ndependencies = [\n \"log\",\n \"regex\",\n]\n\n[[package]]\nname = \"env_logger\"\nversion = \"0.11.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dcaee3d8e3cfc3fd92428d477bc97fc29ec8716d180c0d74c643bb26166660e0\"\ndependencies = [\n \"anstream\",\n \"anstyle\",\n \"env_filter\",\n \"humantime\",\n \"log\",\n]\n\n[[package]]\nname = \"equivalent\"\nversion = \"1.0.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5443807d6dff69373d433ab9ef5378ad8df50ca6298caf15de6e52e24aaf54d5\"\n\n[[package]]\nname = \"errno\"\nversion = \"0.3.10\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"33d852cb9b869c2a9b3df2f71a3074817f01e1844f839a144f5fcef059a4eb5d\"\ndependencies = [\n \"libc\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"event-manager\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"90b16fe5161a1160c9c7cece9f7504f2412ef5e2c0643d1e322eccf37692a42b\"\ndependencies = [\n \"libc\",\n \"vmm-sys-util\",\n]\n\n[[package]]\nname = \"firecracker\"\nversion = \"1.11.0-dev\"\ndependencies = [\n \"bincode\",\n \"cargo_toml\",\n \"displaydoc\",\n \"event-manager\",\n \"libc\",\n \"log-instrument\",\n \"micro_http\",\n \"regex\",\n \"seccompiler\",\n \"serde\",\n \"serde_derive\",\n \"serde_json\",\n \"thiserror 2.0.9\",\n \"timerfd\",\n \"userfaultfd\",\n \"utils\",\n \"vmm\",\n \"vmm-sys-util\",\n]\n\n[[package]]\nname = \"fs_extra\"\nversion = \"1.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"42703706b716c37f96a77aea830392ad231f44c9e9a67872fa5548707e11b11c\"\n\n[[package]]\nname = \"gdbstub\"\nversion = \"0.7.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"31c683a9f13de31432e6097131d5f385898c7f0635c0f392b9d0fa165063c8ac\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"cfg-if\",\n \"log\",\n \"managed\",\n \"num-traits\",\n \"paste\",\n]\n\n[[package]]\nname = \"gdbstub_arch\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"328a9e9425db13770d0d11de6332a608854266e44c53d12776be7b4aa427e3de\"\ndependencies = [\n \"gdbstub\",\n \"num-traits\",\n]\n\n[[package]]\nname = \"generic-array\"\nversion = \"0.14.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"85649ca51fd72272d7821adaf274ad91c288277713d9c18820d8499a7ff69e9a\"\ndependencies = [\n \"typenum\",\n \"version_check\",\n]\n\n[[package]]\nname = \"getrandom\"\nversion = \"0.2.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c4567c8db10ae91089c99af84c68c38da3ec2f087c3f82960bcdbf3656b6f4d7\"\ndependencies = [\n \"cfg-if\",\n \"libc\",\n \"wasi\",\n]\n\n[[package]]\nname = \"ghash\"\nversion = \"0.5.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f0d8a4362ccb29cb0b265253fb0a2728f592895ee6854fd9bc13f2ffda266ff1\"\ndependencies = [\n \"opaque-debug\",\n \"polyval\",\n]\n\n[[package]]\nname = \"glob\"\nversion = \"0.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a8d1add55171497b4705a648c6b583acafb01d58050a51727785f0b2c8e0a2b2\"\n\n[[package]]\nname = \"half\"\nversion = \"2.4.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6dd08c532ae367adf81c312a4580bc67f1d0fe8bc9c460520283f4c0ff277888\"\ndependencies = [\n \"cfg-if\",\n \"crunchy\",\n]\n\n[[package]]\nname = \"hashbrown\"\nversion = \"0.15.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bf151400ff0baff5465007dd2f3e717f3fe502074ca563069ce3a6629d07b289\"\n\n[[package]]\nname = \"heck\"\nversion = \"0.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2304e00983f87ffb38b55b444b5e3b60a884b5d30c0fca7d82fe33449bbe55ea\"\n\n[[package]]\nname = \"hermit-abi\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fbf6a919d6cf397374f7dfeeea91d974c7c0a7221d0d0f4f20d859d329e53fcc\"\n\n[[package]]\nname = \"home\"\nversion = \"0.5.11\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"589533453244b0995c858700322199b2becb13b627df2851f64a2775d024abcf\"\ndependencies = [\n \"windows-sys 0.59.0\",\n]\n\n[[package]]\nname = \"humantime\"\nversion = \"2.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9a3a5bfb195931eeb336b2a7b4d761daec841b97f947d34394601737a7bba5e4\"\n\n[[package]]\nname = \"indexmap\"\nversion = \"2.7.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"62f822373a4fe84d4bb149bf54e584a7f4abec90e072ed49cda0edea5b95471f\"\ndependencies = [\n \"equivalent\",\n \"hashbrown\",\n]\n\n[[package]]\nname = \"inout\"\nversion = \"0.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a0c10553d664a4d0bcff9f4215d0aac67a639cc68ef660840afe309b807bc9f5\"\ndependencies = [\n \"generic-array\",\n]\n\n[[package]]\nname = \"is-terminal\"\nversion = \"0.4.13\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"261f68e344040fbd0edea105bef17c66edf46f984ddb1115b775ce31be948f4b\"\ndependencies = [\n \"hermit-abi\",\n \"libc\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"is_terminal_polyfill\"\nversion = \"1.70.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7943c866cc5cd64cbc25b2e01621d07fa8eb2a1a23160ee81ce38704e97b8ecf\"\n\n[[package]]\nname = \"itertools\"\nversion = \"0.10.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b0fd2260e829bddf4cb6ea802289de2f86d6a7a690192fbe91b3f46e0f2c8473\"\ndependencies = [\n \"either\",\n]\n\n[[package]]\nname = \"itertools\"\nversion = \"0.14.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2b192c782037fadd9cfa75548310488aabdbf3d2da73885b31bd0abd03351285\"\ndependencies = [\n \"either\",\n]\n\n[[package]]\nname = \"itoa\"\nversion = \"1.0.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d75a2a4b1b190afb6f5425f10f6a8f959d2ea0b9c2b1d79553551850539e4674\"\n\n[[package]]\nname = \"jailer\"\nversion = \"1.11.0-dev\"\ndependencies = [\n \"libc\",\n \"log-instrument\",\n \"regex\",\n \"thiserror 2.0.9\",\n \"utils\",\n \"vmm-sys-util\",\n]\n\n[[package]]\nname = \"jobserver\"\nversion = \"0.1.32\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"48d1dbcbbeb6a7fec7e059840aa538bd62aaccf972c7346c4d9d2059312853d0\"\ndependencies = [\n \"libc\",\n]\n\n[[package]]\nname = \"kvm-bindings\"\nversion = \"0.10.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fa4933174d0cc4b77b958578cd45784071cc5ae212c2d78fbd755aaaa6dfa71a\"\ndependencies = [\n \"serde\",\n \"vmm-sys-util\",\n \"zerocopy 0.7.35\",\n]\n\n[[package]]\nname = \"kvm-ioctls\"\nversion = \"0.19.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e013ae7fcd2c6a8f384104d16afe7ea02969301ea2bb2a56e44b011ebc907cab\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"kvm-bindings\",\n \"libc\",\n \"vmm-sys-util\",\n]\n\n[[package]]\nname = \"lazy_static\"\nversion = \"1.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bbd2bcb4c963f2ddae06a2efc7e9f3591312473c50c6685e1f298068316e66fe\"\n\n[[package]]\nname = \"lazycell\"\nversion = \"1.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"830d08ce1d1d941e6b30645f1a0eb5643013d835ce3779a5fc208261dbe10f55\"\n\n[[package]]\nname = \"libc\"\nversion = \"0.2.169\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b5aba8db14291edd000dfcc4d620c7ebfb122c613afb886ca8803fa4e128a20a\"\n\n[[package]]\nname = \"libloading\"\nversion = \"0.8.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fc2f4eb4bc735547cfed7c0a4922cbd04a4655978c09b54f1f7b228750664c34\"\ndependencies = [\n \"cfg-if\",\n \"windows-targets\",\n]\n\n[[package]]\nname = \"linux-loader\"\nversion = \"0.13.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"870c3814345f050991f99869417779f6062542bcf4ed81db7a1b926ad1306638\"\ndependencies = [\n \"vm-memory\",\n]\n\n[[package]]\nname = \"linux-raw-sys\"\nversion = \"0.4.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"78b3ae25bc7c8c38cec158d1f2757ee79e9b3740fbc7ccf0e59e4b08d793fa89\"\n\n[[package]]\nname = \"log\"\nversion = \"0.4.22\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a7a70ba024b9dc04c27ea2f0c0548feb474ec5c54bba33a7f72f873a39d07b24\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"log-instrument\"\nversion = \"0.3.0\"\ndependencies = [\n \"env_logger\",\n \"log\",\n \"log-instrument-macros\",\n]\n\n[[package]]\nname = \"log-instrument-macros\"\nversion = \"0.1.0\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"managed\"\nversion = \"0.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0ca88d725a0a943b096803bd34e73a4437208b6077654cc4ecb2947a5f91618d\"\n\n[[package]]\nname = \"memchr\"\nversion = \"2.7.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"78ca9ab1a0babb1e7d5695e3530886289c18cf2f87ec19a575a0abdce112e3a3\"\n\n[[package]]\nname = \"memfd\"\nversion = \"0.6.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b2cffa4ad52c6f791f4f8b15f0c05f9824b2ced1160e88cc393d64fff9a8ac64\"\ndependencies = [\n \"rustix\",\n]\n\n[[package]]\nname = \"micro_http\"\nversion = \"0.1.0\"\nsource = \"git+https://github.com/firecracker-microvm/micro-http#8182cd5523b63ceb52ad9d0e7eb6fb95683e6d1b\"\ndependencies = [\n \"libc\",\n \"vmm-sys-util\",\n]\n\n[[package]]\nname = \"minimal-lexical\"\nversion = \"0.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"68354c5c6bd36d73ff3feceb05efa59b6acb7626617f4962be322a825e61f79a\"\n\n[[package]]\nname = \"nix\"\nversion = \"0.27.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2eb04e9c688eff1c89d72b407f168cf79bb9e867a9d3323ed6c01519eb9cc053\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"cfg-if\",\n \"libc\",\n]\n\n[[package]]\nname = \"nom\"\nversion = \"7.1.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d273983c5a657a70a3e8f2a01329822f3b8c8172b73826411a55751e404a0a4a\"\ndependencies = [\n \"memchr\",\n \"minimal-lexical\",\n]\n\n[[package]]\nname = \"num-traits\"\nversion = \"0.2.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"071dfc062690e90b734c0b2273ce72ad0ffa95f0c74596bc250dcfd960262841\"\ndependencies = [\n \"autocfg\",\n]\n\n[[package]]\nname = \"once_cell\"\nversion = \"1.20.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1261fe7e33c73b354eab43b1273a57c8f967d0391e80353e51f764ac02cf6775\"\n\n[[package]]\nname = \"oorandom\"\nversion = \"11.1.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b410bbe7e14ab526a0e86877eb47c6996a2bd7746f027ba551028c925390e4e9\"\n\n[[package]]\nname = \"opaque-debug\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c08d65885ee38876c4f86fa503fb49d7b507c2b62552df7c70b2fce627e06381\"\n\n[[package]]\nname = \"paste\"\nversion = \"1.0.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\"\n\n[[package]]\nname = \"peeking_take_while\"\nversion = \"0.1.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"19b17cddbe7ec3f8bc800887bab5e717348c95ea2ca0b1bf0837fb964dc67099\"\n\n[[package]]\nname = \"polyval\"\nversion = \"0.6.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9d1fe60d06143b2430aa532c94cfe9e29783047f06c0d7fd359a9a51b729fa25\"\ndependencies = [\n \"cfg-if\",\n \"cpufeatures\",\n \"opaque-debug\",\n \"universal-hash\",\n]\n\n[[package]]\nname = \"ppv-lite86\"\nversion = \"0.2.20\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"77957b295656769bb8ad2b6a6b09d897d94f05c41b069aede1fcdaa675eaea04\"\ndependencies = [\n \"zerocopy 0.7.35\",\n]\n\n[[package]]\nname = \"prettyplease\"\nversion = \"0.2.27\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"483f8c21f64f3ea09fe0f30f5d48c3e8eefe5dac9129f0075f76593b4c1da705\"\ndependencies = [\n \"proc-macro2\",\n \"syn\",\n]\n\n[[package]]\nname = \"proc-macro2\"\nversion = \"1.0.92\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"37d3544b3f2748c54e147655edb5025752e2303145b5aefb3c3ea2c78b973bb0\"\ndependencies = [\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"proptest\"\nversion = \"1.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"14cae93065090804185d3b75f0bf93b8eeda30c7a9b4a33d3bdb3988d6229e50\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"lazy_static\",\n \"num-traits\",\n \"rand\",\n \"rand_chacha\",\n \"rand_xorshift\",\n \"regex-syntax\",\n \"unarray\",\n]\n\n[[package]]\nname = \"quote\"\nversion = \"1.0.38\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0e4dccaaaf89514f546c693ddc140f729f958c247918a13380cccc6078391acc\"\ndependencies = [\n \"proc-macro2\",\n]\n\n[[package]]\nname = \"rand\"\nversion = \"0.8.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"34af8d1a0e25924bc5b7c43c079c942339d8f0a8b57c39049bef581b46327404\"\ndependencies = [\n \"libc\",\n \"rand_chacha\",\n \"rand_core\",\n]\n\n[[package]]\nname = \"rand_chacha\"\nversion = \"0.3.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e6c10a63a0fa32252be49d21e7709d4d4baf8d231c2dbce1eaa8141b9b127d88\"\ndependencies = [\n \"ppv-lite86\",\n \"rand_core\",\n]\n\n[[package]]\nname = \"rand_core\"\nversion = \"0.6.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ec0be4795e2f6a28069bec0b5ff3e2ac9bafc99e6a9a7dc3547996c5c816922c\"\ndependencies = [\n \"getrandom\",\n]\n\n[[package]]\nname = \"rand_xorshift\"\nversion = \"0.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d25bf25ec5ae4a3f1b92f929810509a2f53d7dca2f50b794ff57e3face536c8f\"\ndependencies = [\n \"rand_core\",\n]\n\n[[package]]\nname = \"rebase-snap\"\nversion = \"1.11.0-dev\"\ndependencies = [\n \"displaydoc\",\n \"libc\",\n \"log-instrument\",\n \"thiserror 2.0.9\",\n \"utils\",\n \"vmm-sys-util\",\n]\n\n[[package]]\nname = \"regex\"\nversion = \"1.11.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b544ef1b4eac5dc2db33ea63606ae9ffcfac26c1416a2806ae0bf5f56b201191\"\ndependencies = [\n \"aho-corasick\",\n \"memchr\",\n \"regex-automata\",\n \"regex-syntax\",\n]\n\n[[package]]\nname = \"regex-automata\"\nversion = \"0.4.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"809e8dc61f6de73b46c85f4c96486310fe304c434cfa43669d7b40f711150908\"\ndependencies = [\n \"aho-corasick\",\n \"memchr\",\n \"regex-syntax\",\n]\n\n[[package]]\nname = \"regex-syntax\"\nversion = \"0.8.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2b15c43186be67a4fd63bee50d0303afffcef381492ebe2c5d87f324e1b8815c\"\n\n[[package]]\nname = \"rustc-hash\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"08d43f7aa6b08d49f382cde6a7982047c3426db949b1424bc4b7ec9ae12c6ce2\"\n\n[[package]]\nname = \"rustix\"\nversion = \"0.38.42\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f93dc38ecbab2eb790ff964bb77fa94faf256fd3e73285fd7ba0903b76bedb85\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"errno\",\n \"libc\",\n \"linux-raw-sys\",\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"ryu\"\nversion = \"1.0.18\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f3cb5ba0dc43242ce17de99c180e96db90b235b8a9fdc9543c96d2209116bd9f\"\n\n[[package]]\nname = \"same-file\"\nversion = \"1.0.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"93fc1dc3aaa9bfed95e02e6eadabb4baf7e3078b0bd1b4d7b6b0b68378900502\"\ndependencies = [\n \"winapi-util\",\n]\n\n[[package]]\nname = \"seccompiler\"\nversion = \"1.11.0-dev\"\ndependencies = [\n \"bincode\",\n \"displaydoc\",\n \"libc\",\n \"log-instrument\",\n \"serde\",\n \"serde_json\",\n \"thiserror 2.0.9\",\n \"utils\",\n \"vmm-sys-util\",\n]\n\n[[package]]\nname = \"semver\"\nversion = \"1.0.24\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3cb6eb87a131f756572d7fb904f6e7b68633f09cca868c5df1c4b8d1a694bbba\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"serde\"\nversion = \"1.0.217\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"02fc4265df13d6fa1d00ecff087228cc0a2b5f3c0e87e258d8b94a156e984c70\"\ndependencies = [\n \"serde_derive\",\n]\n\n[[package]]\nname = \"serde_derive\"\nversion = \"1.0.217\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5a9bf7cf98d04a2b28aead066b7496853d4779c9cc183c440dbac457641e19a0\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"serde_json\"\nversion = \"1.0.134\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d00f4175c42ee48b15416f6193a959ba3a0d67fc699a0db9ad12df9f83991c7d\"\ndependencies = [\n \"itoa\",\n \"memchr\",\n \"ryu\",\n \"serde\",\n]\n\n[[package]]\nname = \"serde_spanned\"\nversion = \"0.6.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"87607cb1398ed59d48732e575a4c28a7a8ebf2454b964fe3f224f2afc07909e1\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"shlex\"\nversion = \"1.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0fda2ff0d084019ba4d7c6f371c95d8fd75ce3524c3cb8fb653a3023f6323e64\"\n\n[[package]]\nname = \"slab\"\nversion = \"0.4.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8f92a496fb766b417c996b9c5e57daf2f7ad3b0bebe1ccfca4856390e3d3bb67\"\ndependencies = [\n \"autocfg\",\n]\n\n[[package]]\nname = \"snapshot-editor\"\nversion = \"1.11.0-dev\"\ndependencies = [\n \"clap\",\n \"clap-num\",\n \"displaydoc\",\n \"libc\",\n \"log-instrument\",\n \"semver\",\n \"thiserror 2.0.9\",\n \"utils\",\n \"vmm\",\n \"vmm-sys-util\",\n]\n\n[[package]]\nname = \"strsim\"\nversion = \"0.11.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7da8b5736845d9f2fcb837ea5d9e2628564b3b043a70948a3f0b778838c5fb4f\"\n\n[[package]]\nname = \"subtle\"\nversion = \"2.6.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"13c2bddecc57b384dee18652358fb23172facb8a2c51ccc10d74c157bdea3292\"\n\n[[package]]\nname = \"syn\"\nversion = \"2.0.95\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"46f71c0377baf4ef1cc3e3402ded576dccc315800fbc62dfc7fe04b009773b4a\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"thiserror\"\nversion = \"1.0.69\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b6aaf5339b578ea85b50e080feb250a3e8ae8cfcdff9a461c9ec2904bc923f52\"\ndependencies = [\n \"thiserror-impl 1.0.69\",\n]\n\n[[package]]\nname = \"thiserror\"\nversion = \"2.0.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f072643fd0190df67a8bab670c20ef5d8737177d6ac6b2e9a236cb096206b2cc\"\ndependencies = [\n \"thiserror-impl 2.0.9\",\n]\n\n[[package]]\nname = \"thiserror-impl\"\nversion = \"1.0.69\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4fee6c4efc90059e10f81e6d42c60a18f76588c3d74cb83a0b242a2b6c7504c1\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"thiserror-impl\"\nversion = \"2.0.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7b50fa271071aae2e6ee85f842e2e28ba8cd2c5fb67f11fcb1fd70b276f9e7d4\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"timerfd\"\nversion = \"1.6.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"84e482e368cf7efa2c8b570f476e5b9fd9fd5e9b9219fc567832b05f13511091\"\ndependencies = [\n \"rustix\",\n]\n\n[[package]]\nname = \"tinytemplate\"\nversion = \"1.2.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"be4d6b5f19ff7664e8c98d03e2139cb510db9b0a60b55f8e8709b689d939b6bc\"\ndependencies = [\n \"serde\",\n \"serde_json\",\n]\n\n[[package]]\nname = \"toml\"\nversion = \"0.8.19\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a1ed1f98e3fdc28d6d910e6737ae6ab1a93bf1985935a1193e68f93eeb68d24e\"\ndependencies = [\n \"serde\",\n \"serde_spanned\",\n \"toml_datetime\",\n \"toml_edit\",\n]\n\n[[package]]\nname = \"toml_datetime\"\nversion = \"0.6.8\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0dd7358ecb8fc2f8d014bf86f6f638ce72ba252a2c3a2572f2a795f1d23efb41\"\ndependencies = [\n \"serde\",\n]\n\n[[package]]\nname = \"toml_edit\"\nversion = \"0.22.22\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"4ae48d6208a266e853d946088ed816055e556cc6028c5e8e2b84d9fa5dd7c7f5\"\ndependencies = [\n \"indexmap\",\n \"serde\",\n \"serde_spanned\",\n \"toml_datetime\",\n \"winnow\",\n]\n\n[[package]]\nname = \"typenum\"\nversion = \"1.17.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"42ff0bf0c66b8238c6f3b578df37d0b7848e55df8577b3f74f92a69acceeb825\"\n\n[[package]]\nname = \"unarray\"\nversion = \"0.1.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"eaea85b334db583fe3274d12b4cd1880032beab409c0d774be044d4480ab9a94\"\n\n[[package]]\nname = \"unicode-ident\"\nversion = \"1.0.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"adb9e6ca4f869e1180728b7950e35922a7fc6397f7b641499e8f3ef06e50dc83\"\n\n[[package]]\nname = \"unicode-xid\"\nversion = \"0.2.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ebc1c04c71510c7f702b52b7c350734c9ff1295c464a03335b00bb84fc54f853\"\n\n[[package]]\nname = \"universal-hash\"\nversion = \"0.5.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fc1de2c688dc15305988b563c3854064043356019f97a4b46276fe734c4f07ea\"\ndependencies = [\n \"crypto-common\",\n \"subtle\",\n]\n\n[[package]]\nname = \"untrusted\"\nversion = \"0.7.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a156c684c91ea7d62626509bce3cb4e1d9ed5c4d978f7b4352658f96a4c26b4a\"\n\n[[package]]\nname = \"userfaultfd\"\nversion = \"0.8.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"18d8b176d4d3e420685e964f87c25df5fdd5b26d7eb0d0e7c892d771f5b81035\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"cfg-if\",\n \"libc\",\n \"nix\",\n \"thiserror 1.0.69\",\n \"userfaultfd-sys\",\n]\n\n[[package]]\nname = \"userfaultfd-sys\"\nversion = \"0.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d75595d2a62b7db16bd47f5a1ce14e1fe05ccbe27d6c96721a958e0a027cad41\"\ndependencies = [\n \"bindgen 0.68.1\",\n \"cc\",\n \"cfg-if\",\n]\n\n[[package]]\nname = \"utf8parse\"\nversion = \"0.2.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"06abde3611657adf66d383f00b093d7faecc7fa57071cce2578660c9f1010821\"\n\n[[package]]\nname = \"utils\"\nversion = \"0.1.0\"\ndependencies = [\n \"displaydoc\",\n \"libc\",\n \"log-instrument\",\n \"thiserror 2.0.9\",\n]\n\n[[package]]\nname = \"uuid\"\nversion = \"1.11.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f8c5f0a0af699448548ad1a2fbf920fb4bee257eae39953ba95cb84891a0446a\"\ndependencies = [\n \"getrandom\",\n \"rand\",\n \"uuid-macro-internal\",\n]\n\n[[package]]\nname = \"uuid-macro-internal\"\nversion = \"1.11.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6b91f57fe13a38d0ce9e28a03463d8d3c2468ed03d75375110ec71d93b449a08\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"version_check\"\nversion = \"0.9.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0b928f33d975fc6ad9f86c8f283853ad26bdd5b10b7f1542aa2fa15e2289105a\"\n\n[[package]]\nname = \"vhost\"\nversion = \"0.13.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"bce0aad4d8776cb64f1ac591e908a561c50ba6adac4416296efee590b155623f\"\ndependencies = [\n \"bitflags 2.6.0\",\n \"libc\",\n \"uuid\",\n \"vm-memory\",\n \"vmm-sys-util\",\n]\n\n[[package]]\nname = \"vm-allocator\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5e4ce718bd4e8d74b1747363e27f715a6b1bd6971597cb21425dadbf4e712241\"\ndependencies = [\n \"libc\",\n \"thiserror 1.0.69\",\n]\n\n[[package]]\nname = \"vm-fdt\"\nversion = \"0.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"7e21282841a059bb62627ce8441c491f09603622cd5a21c43bfedc85a2952f23\"\n\n[[package]]\nname = \"vm-memory\"\nversion = \"0.16.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f1720e7240cdc739f935456eb77f370d7e9b2a3909204da1e2b47bef1137a013\"\ndependencies = [\n \"libc\",\n \"thiserror 1.0.69\",\n \"winapi\",\n]\n\n[[package]]\nname = \"vm-superio\"\nversion = \"0.8.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"3428ee25acbfc75ed14600f2043876e0889cbd57c39dd441191417377cdceda0\"\n\n[[package]]\nname = \"vmm\"\nversion = \"0.1.0\"\ndependencies = [\n \"acpi_tables\",\n \"aes-gcm\",\n \"arrayvec\",\n \"aws-lc-rs\",\n \"base64\",\n \"bincode\",\n \"bitflags 2.6.0\",\n \"crc64\",\n \"criterion\",\n \"derive_more\",\n \"device_tree\",\n \"displaydoc\",\n \"event-manager\",\n \"gdbstub\",\n \"gdbstub_arch\",\n \"itertools 0.14.0\",\n \"kvm-bindings\",\n \"kvm-ioctls\",\n \"libc\",\n \"linux-loader\",\n \"log\",\n \"log-instrument\",\n \"memfd\",\n \"micro_http\",\n \"proptest\",\n \"seccompiler\",\n \"semver\",\n \"serde\",\n \"serde_json\",\n \"slab\",\n \"thiserror 2.0.9\",\n \"timerfd\",\n \"userfaultfd\",\n \"utils\",\n \"vhost\",\n \"vm-allocator\",\n \"vm-fdt\",\n \"vm-memory\",\n \"vm-superio\",\n \"vmm-sys-util\",\n \"zerocopy 0.8.14\",\n]\n\n[[package]]\nname = \"vmm-sys-util\"\nversion = \"0.12.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1d1435039746e20da4f8d507a72ee1b916f7b4b05af7a91c093d2c6561934ede\"\ndependencies = [\n \"bitflags 1.3.2\",\n \"libc\",\n \"serde\",\n \"serde_derive\",\n]\n\n[[package]]\nname = \"walkdir\"\nversion = \"2.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"29790946404f91d9c5d06f9874efddea1dc06c5efe94541a7d6863108e3a5e4b\"\ndependencies = [\n \"same-file\",\n \"winapi-util\",\n]\n\n[[package]]\nname = \"wasi\"\nversion = \"0.11.0+wasi-snapshot-preview1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9c8d87e72b64a3b4db28d11ce29237c246188f4f51057d65a7eab63b7987e423\"\n\n[[package]]\nname = \"which\"\nversion = \"4.4.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"87ba24419a2078cd2b0f2ede2691b6c66d8e47836da3b6db8265ebad47afbfc7\"\ndependencies = [\n \"either\",\n \"home\",\n \"once_cell\",\n \"rustix\",\n]\n\n[[package]]\nname = \"winapi\"\nversion = \"0.3.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"5c839a674fcd7a98952e593242ea400abe93992746761e38641405d28b00f419\"\ndependencies = [\n \"winapi-i686-pc-windows-gnu\",\n \"winapi-x86_64-pc-windows-gnu\",\n]\n\n[[package]]\nname = \"winapi-i686-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ac3b87c63620426dd9b991e5ce0329eff545bccbbb34f3be09ff6fb6ab51b7b6\"\n\n[[package]]\nname = \"winapi-util\"\nversion = \"0.1.9\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"cf221c93e13a30d793f7645a0e7762c55d169dbb0a49671918a2319d289b10bb\"\ndependencies = [\n \"windows-sys 0.52.0\",\n]\n\n[[package]]\nname = \"winapi-x86_64-pc-windows-gnu\"\nversion = \"0.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"712e227841d057c1ee1cd2fb22fa7e5a5461ae8e48fa2ca79ec42cfc1931183f\"\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.52.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"282be5f36a8ce781fad8c8ae18fa3f9beff57ec1b52cb3de0789201425d9a33d\"\ndependencies = [\n \"windows-targets\",\n]\n\n[[package]]\nname = \"windows-sys\"\nversion = \"0.59.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1e38bc4d79ed67fd075bcc251a1c39b32a1776bbe92e5bef1f0bf1f8c531853b\"\ndependencies = [\n \"windows-targets\",\n]\n\n[[package]]\nname = \"windows-targets\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"9b724f72796e036ab90c1021d4780d4d3d648aca59e491e6b98e725b84e99973\"\ndependencies = [\n \"windows_aarch64_gnullvm\",\n \"windows_aarch64_msvc\",\n \"windows_i686_gnu\",\n \"windows_i686_gnullvm\",\n \"windows_i686_msvc\",\n \"windows_x86_64_gnu\",\n \"windows_x86_64_gnullvm\",\n \"windows_x86_64_msvc\",\n]\n\n[[package]]\nname = \"windows_aarch64_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"32a4622180e7a0ec044bb555404c800bc9fd9ec262ec147edd5989ccd0c02cd3\"\n\n[[package]]\nname = \"windows_aarch64_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"09ec2a7bb152e2252b53fa7803150007879548bc709c039df7627cabbd05d469\"\n\n[[package]]\nname = \"windows_i686_gnu\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8e9b5ad5ab802e97eb8e295ac6720e509ee4c243f69d781394014ebfe8bbfa0b\"\n\n[[package]]\nname = \"windows_i686_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0eee52d38c090b3caa76c563b86c3a4bd71ef1a819287c19d586d7334ae8ed66\"\n\n[[package]]\nname = \"windows_i686_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"240948bc05c5e7c6dabba28bf89d89ffce3e303022809e73deaefe4f6ec56c66\"\n\n[[package]]\nname = \"windows_x86_64_gnu\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"147a5c80aabfbf0c7d901cb5895d1de30ef2907eb21fbbab29ca94c5b08b1a78\"\n\n[[package]]\nname = \"windows_x86_64_gnullvm\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"24d5b23dc417412679681396f2b49f3de8c1473deb516bd34410872eff51ed0d\"\n\n[[package]]\nname = \"windows_x86_64_msvc\"\nversion = \"0.52.6\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"589f6da84c646204747d1270a2a5661ea66ed1cced2631d546fdfb155959f9ec\"\n\n[[package]]\nname = \"winnow\"\nversion = \"0.6.22\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"39281189af81c07ec09db316b302a3e67bf9bd7cbf6c820b50e35fee9c2fa980\"\ndependencies = [\n \"memchr\",\n]\n\n[[package]]\nname = \"zerocopy\"\nversion = \"0.7.35\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1b9b4fd18abc82b8136838da5d50bae7bdea537c574d8dc1a34ed098d6c166f0\"\ndependencies = [\n \"byteorder\",\n \"zerocopy-derive 0.7.35\",\n]\n\n[[package]]\nname = \"zerocopy\"\nversion = \"0.8.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a367f292d93d4eab890745e75a778da40909cab4d6ff8173693812f79c4a2468\"\ndependencies = [\n \"zerocopy-derive 0.8.14\",\n]\n\n[[package]]\nname = \"zerocopy-derive\"\nversion = \"0.7.35\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fa4f8080344d4671fb4e831a13ad1e68092748387dfc4f55e356242fae12ce3e\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"zerocopy-derive\"\nversion = \"0.8.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d3931cb58c62c13adec22e38686b559c86a30565e16ad6e8510a337cedc611e1\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"zeroize\"\nversion = \"1.8.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ced3678a2879b30306d323f4542626697a464a97c0a07c9aebf7ebca65cd4dde\"\n"
        },
        {
          "name": "Cargo.toml",
          "type": "blob",
          "size": 1.099609375,
          "content": "[workspace]\nmembers = [\"src/*\"]\n# We exclude the jailer below so that it does not get build by default. This is because \"cargo build\" compiles\n# for the gnu target, and the jailer needs a statically compiled binary to work correctly.\n# See https://github.com/firecracker-microvm/firecracker/commit/3bf285c8f8a815149923c562dd7edaffcaf10c4e\n# and https://github.com/firecracker-microvm/firecracker/issues/2102\ndefault-members = [\"src/clippy-tracing\", \"src/cpu-template-helper\", \"src/firecracker\", \"src/rebase-snap\", \"src/seccompiler\", \"src/snapshot-editor\", \"src/acpi-tables\"]\nresolver = \"2\"\n\n[workspace.lints.rust]\nmissing_debug_implementations = \"warn\"\nunexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(kani)'] }\n\n[workspace.lints.clippy]\nptr_as_ptr = \"warn\"\nundocumented_unsafe_blocks = \"warn\"\ncast_possible_truncation = \"warn\"\ncast_possible_wrap = \"warn\"\ncast_sign_loss = \"warn\"\nexit = \"warn\"\ntests_outside_test_module = \"warn\"\nassertions_on_result_states = \"warn\"\nerror_impl_error = \"warn\"\n\n[profile.dev]\npanic = \"abort\"\n\n[profile.release]\npanic = \"abort\"\nlto = true\nstrip = \"none\"\n\n[profile.bench]\nstrip = \"debuginfo\"\n"
        },
        {
          "name": "DEPRECATED.md",
          "type": "blob",
          "size": 1.2392578125,
          "content": "# Deprecated Features\n\nThe following functionality of Firecracker is deprecated, and will be removed in\na future major Firecracker release, in accordance with our\n[release policy](docs/RELEASE_POLICY.md).\n\n- \\[[#2763](https://github.com/firecracker-microvm/firecracker/pull/2763)\\] The\n  `vsock_id` body field in `PUT` requests on `/vsock`\n- \\[[#2980](https://github.com/firecracker-microvm/firecracker/pull/2980)\\] The\n  `mem_file_path` body field in `PUT` requests on `/snapshot/load`\n- \\[[#2973](https://github.com/firecracker-microvm/firecracker/pull/2973)\\]\n  MicroVM Metadata Service v1 (MMDSv1)\n- \\[[#4126](https://github.com/firecracker-microvm/firecracker/pull/4126)\\]\n  Static CPU templates\n- \\[[#4209](https://github.com/firecracker-microvm/firecracker/pull/4209)\\] The\n  `rebase-snap` tool\n- \\[[#4500](https://github.com/firecracker-microvm/firecracker/pull/4500)\\] The\n  `--start-time-cpu-us` and `--start-time-us` CLI arguments\n- \\[[#4428](https://github.com/firecracker-microvm/firecracker/pull/4428)\\]\n  Booting microVMs using MPTable and command line parameters for VirtIO devices.\n  The functionality is substituted with ACPI.\n- \\[[#2628](https://github.com/firecracker-microvm/firecracker/pull/2628)\\] The\n  `--basic` parameter of `seccompiler-bin`.\n"
        },
        {
          "name": "FAQ.md",
          "type": "blob",
          "size": 11.7763671875,
          "content": "# Firecracker Frequently Asked Questions\n\n## About Firecracker\n\n### What is Firecracker?\n\nFirecracker is an open source Virtual Machine Monitor (VMM) that enables secure,\nmulti-tenant, minimal-overhead execution of container and function workloads.\n\n### Who developed Firecracker?\n\nFirecracker was built by developers at Amazon Web Services to enable services\nsuch as [AWS Lambda](https://aws.amazon.com/lambda/) and\n[AWS Fargate](https://aws.amazon.com/fargate/) to improve resource utilization\nand customer experience, while providing the security and isolation required of\npublic cloud infrastructure. Firecracker started from Chromium OS's Virtual\nMachine Monitor, [crosvm](https://github.com/google/crosvm), an open source VMM\nwritten in Rust. Today, crosvm and Firecracker have diverged to serve very\ndifferent customer needs. [Rust-vmm](https://github.com/rust-vmm) is an open\nsource community where we collaborate with the crosvm maintainers and other\ngroups and individuals to build and share quality Rust virtualization\ncomponents.\n\n### Why did you develop Firecracker?\n\nWhen we launched Lambda in November of 2014, we were focused on providing a\nsecure [serverless](https://aws.amazon.com/serverless/) experience. At launch we\nused per-customer EC2 instances to provide strong security and isolation between\ncustomers. As Lambda grew, we saw the need for technology to provide a highly\nsecure, flexible, and efficient runtime environment for services like Lambda and\nFargate. Using our experience building isolated EC2 instances with hardware\nvirtualization technology, we started an effort to build a VMM that was tailored\nto integrate with container ecosystems.\n\n### What processors does Firecracker support?\n\nThe Firecracker VMM is built to be processor agnostic. Intel, AMD and 64 bit ARM\nprocessors are supported for production workloads.\n\nYou can find more details [here](README.md#supported-platforms).\n\n### Can Firecracker be used within the container ecosystem?\n\nYes. Firecracker is integrated with\n[Kata Containers](https://github.com/kata-containers/documentation/wiki/Initial-release-of-Kata-Containers-with-Firecracker-support),\n[Weave FireKube](https://www.weave.works/oss/firekube/) (via\n[Weave Ignite](https://github.com/weaveworks/ignite)), and containerd via\n[firecracker-containerd](https://github.com/firecracker-microvm/firecracker-containerd).\nWe welcome contributions that enable Firecracker to integrate naturally with the\ncontainer ecosystem and provide more choices in how container workloads are\nisolated.\n\n### What is the difference between Firecracker and QEMU?\n\nFirecracker is an\n[alternative to QEMU](https://www.redhat.com/en/blog/all-you-need-know-about-kvm-userspace)\nthat is purpose-built for running serverless functions and containers safely and\nefficiently, and nothing more. Firecracker is written in Rust, provides a\nminimal required device model to the guest operating system while excluding\nnon-essential functionality (only 6 emulated devices are available: virtio-net,\nvirtio-balloon, virtio-block, virtio-vsock, serial console, and a minimal\nkeyboard controller used only to stop the microVM). This, along with a\nstreamlined kernel loading process enables a < 125 ms startup time and a < 5 MiB\nmemory footprint. The Firecracker process also provides a RESTful control API,\nhandles resource rate limiting for microVMs, and provides a microVM metadata\nservice to enable the sharing of configuration data between the host and guest.\n\n### What operating systems are supported by Firecracker?\n\nFirecracker supports Linux host and guest operating systems as well as\n[OSv](http://blog.osv.io/blog/2019/04/19/making-OSv-run-on-firecraker/) guests.\nCurrently supported host/guest kernel versions can be found in the\n[kernel support policy](docs/kernel-policy.md).\n\n### What is the open source license for Firecracker?\n\nFirecracker is licensed under the Apache License, version 2.0, allowing you to\nfreely use, copy, and distribute your changes under the terms of your choice.\n[Read more about Apache 2.0](https://www.apache.org/licenses/LICENSE-2.0).\nCrosvm code sections are licensed under a\n[BSD-3-Clause license](https://opensource.org/licenses/BSD-3-Clause) that also\nallows you to use, copy, and distribute your changes under the terms of your\nchoice.\n\n### How can I contribute?\n\nFirecracker is an AWS open source project that encourages contributions from\ncustomers and the developer community. Any contribution is welcome as long as it\naligns with our [charter](CHARTER.md). You can learn more about how to\ncontribute in [CONTRIBUTING.md](CONTRIBUTING.md). You can chat with others in\nthe community on the\n[Firecracker Slack workspace](https://firecracker-microvm.slack.com).\n\n### How is Firecracker project governed?\n\nThe Firecracker [team at Amazon Web Services](MAINTAINERS.md) owns project\nmaintainer responsibilities, permissions to merge pull requests, and the ability\nto create new Firecracker releases.\n\n## Technical FAQ & Troubleshooting\n\n### Can I emulate a different architecture in the guest than the one on the host?\n\nGuest operating systems must be built for the same CPU architecture as the host\non which it will run. Firecracker does not support running microVMs on any\narchitecture other than the one the host is running on. In other words, running\nan OS built for a `x86_64` on an `aarch64` system will not work, and vice versa.\n\n### I tried using an initrd for boot but it doesn't seem to be used. Is initrd supported?\n\nInitrds are only recently supported in Firecracker. If your release predates\nissue [#228](https://github.com/firecracker-microvm/firecracker/issues/208)\nbeing resolved, please update.\n\n### Firecracker is not showing any output on the console.\n\nIn order to debug the issue, check the response of the `InstanceStart` API\nrequest. Possible responses:\n\n- **Error**: Submit a new issue with the label \"Support: Failure\".\n- **Success**: If the boot was successful, you should get a response with 204 as\n  the status code.\n\nIf you have no output in the console, most likely you will have to update the\nkernel command line. By default, Firecracker starts with the serial console\ndisabled for boot time performance reasons.\n\nExample of a kernel valid command line that enables the serial console (which\ngoes in the `boot_args` field of the `/boot-source` Firecracker API resource):\n\n```console\nconsole=ttyS0 reboot=k panic=1 pci=off nomodule\n```\n\n### How can I configure multiple Ethernet devices through the kernel command line?\n\nThe `ip=` boot param in the linux kernel only actually supports configuring a\nsingle interface. Multiple interfaces can be set up in Firecracker using the\nAPI, but guest IP configuration at boot time through boot arguments can only be\ndone for a single interface.\n\n### My guest wall-clock is drifting, how can I fix it?\n\nThe canonical solution is to use NTP in your guests.\n\nHowever, if you want to run Firecracker at scale, we suggest using a PTP\nemulated device as the guest's NTP time source so as to minimize network traffic\nand resource overhead. With this solution the guests will constantly update time\nto stay in sync with host wall-clock. They do so using cheap para-virtualized\ncalls into kvm ptp instead of actual network NTP traffic.\n\nTo be able to do this you need to have a guest kernel compiled with `KVM_PTP`\nsupport:\n\n```console\nCONFIG_PTP_1588_CLOCK=y\nCONFIG_PTP_1588_CLOCK_KVM=y\n```\n\nOur [recommended x86_64 guest kernel config](resources/guest_configs) already\nhas these included.\n\nNow `/dev/ptp0` should be available in the guest. Next you need to configure\n`/dev/ptp0` as a NTP time source.\n\nFor example when using `chrony`:\n\n1. Add `refclock PHC /dev/ptp0 poll 3 dpoll -2 offset 0` to the chrony conf file\n   (`/etc/chrony/chrony.conf`)\n1. Restart the `chrony` daemon.\n\nYou can see more info about the `refclock` parameters\n[here](https://chrony-project.org/doc/3.4/chrony.conf.html#refclock). Adjust\nthem according to your needs.\n\n### Each Firecracker opens 20+ file descriptors. Is this an issue?\n\nThe relatively high FD usage is expected and correct. Firecracker heavily relies\non event file descriptors to drive device emulation.\n\n### How does network interface numbering work?\n\nThere is no relation between the numbering of the `/network-interface` API calls\nand the number of the network interface in the guest. Rather, it is usually the\norder of network interface creation that determines the number in the guest (but\nthis depends on the distribution).\n\nFor example, when you create two network interfaces by calling\n`/network-interfaces/1` and then `/network-interfaces/0`, it may result in this\nmapping:\n\n```console\n/network-interfaces/1 -> eth0\n/network-interfaces/0 -> eth1\n```\n\n### How can I gracefully reboot the guest? How can I gracefully poweroff the guest?\n\nFirecracker does not implement ACPI and PM devices, therefore operations like\ngracefully rebooting or powering off the guest are supported in unconventional\nways.\n\nRunning the `poweroff` or `halt` commands inside a Linux guest will bring it\ndown but Firecracker process remains unaware of the guest shutdown so it lives\non.\n\nRunning the `reboot` command in a Linux guest will gracefully bring down the\nguest system and also bring a graceful end to the Firecracker process.\n\nOn `x86_64` systems, issuing a `SendCtrlAltDel` action command through the\nFirecracker API will generate a `Ctrl + Alt + Del` keyboard event in the guest\nwhich triggers a behavior identical to running the `reboot` command. This is,\nhowever, not supported on `aarch64` systems.\n\n### How can I create my own rootfs or kernel images?\n\nCheck out our\n[rootfs and kernel image creation guide](docs/rootfs-and-kernel-setup.md).\n\n### We are seeing page allocation failures from Firecracker in the `dmesg` output.\n\nIf you see errors like ...\n\n```console\n[<TIMESTAMP>] fc_vmm: page allocation failure: order:6, mode:0x140c0c0\n(GFP_KERNEL|__GFP_COMP|__GFP_ZERO), nodemask=(null)\n[<TIMESTAMP>] fc_vmm cpuset=<GUID> mems_allowed=0\n```\n\n... then your host is running out of memory. KVM is attempting to do an\nallocation of 2^`order` bytes (in this case, 6) and there aren't sufficient\ncontiguous pages.\n\nPossible mitigations are:\n\n- Reduce memory pressure on the host.\n- Maybe the host has memory but it's too fragmented for the kernel to use. The\n  allocation above of order 6 means the kernel could not find 2^6\n  **consecutive** pages. One way to mitigate memory fragmentation is to\n  [set a higher value](https://linuxhint.com/vm_min_free_kbytes_sysctl/) for\n  `vm.min_free_kbytes`\n  - Or investigate other\n    [mitigations](https://savvinov.com/2019/10/14/memory-fragmentation-the-silent-performance-killer/)\n\n### How can I configure and start a microVM without sending API calls?\n\nPassing an optional command line parameter, `--config-file`, to the Firecracker\nprocess allows this type of configuration. This parameter must be the path to a\nfile that contains the JSON specification that will be used to configure and\nstart the microVM. One example of such file can be found at\n`tests/framework/vm_config.json`.\n\n### Firecracker fails to start and returns an Out of Memory error\n\nIf the Firecracker process exits with `12` exit code (`Out of memory` error),\nthe root cause is that there is not enough memory on the host to be used by the\nFirecracker microVM.\n\nIf the microVM was not configured in terms of memory size through an API\nrequest, the host needs to meet the minimum requirement in terms of free memory\nsize, namely 128 MB of free memory which the microVM defaults to.\n\nThis may be related to \"We are seeing page allocation failures ...\" above. To\nvalidate, run this:\n\n```sh\nsudo dmesg | grep \"page allocation failure\"\n```\n\n### Firecracker fails to start and returns \"Resource busy\" error\n\nIf another hypervisor like VMware or VirtualBox is running on the host and locks\n`/dev/kvm`, Firecracker process will fail to start with \"Resource busy\" error.\n\nThis issue can be resolved by terminating the other hypervisor running on the\nhost, and allowing Firecracker to start.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.091796875,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "MAINTAINERS.md",
          "type": "blob",
          "size": 0.4072265625,
          "content": "# Maintainers\n\nFirecracker is maintained by a dedicated team within Amazon:\n\n- Babis Chalios <bchalios@amazon.com>\n- Egor Lazarchuk <yegorlz@amazon.co.uk>\n- Jack Thomson <jackabt@amazon.com>\n- Marco Cali <xmarcalx@amazon.com>\n- Nikita Kalyazin <kalyazin@amazon.com>\n- Pablo Barbachano <pablob@amazon.com>\n- Patrick Roy <roypat@amazon.com>\n- Riccardo Mancini <mancio@amazon.com>\n- Takahiro Itazuri <itazur@amazon.com>\n"
        },
        {
          "name": "NOTICE",
          "type": "blob",
          "size": 0.291015625,
          "content": "Firecracker\nCopyright 2017-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\nSPDX-License-Identifier: Apache-2.0\n\nPortions Copyright 2017 The Chromium OS Authors. All rights reserved.\nUse of this source code is governed by a BSD-style license that can be\nfound in the THIRD-PARTY file.\n"
        },
        {
          "name": "PGP-KEY.asc",
          "type": "blob",
          "size": 1.3837890625,
          "content": "-----BEGIN PGP PUBLIC KEY BLOCK-----\n\nmDMEXoNLVhYJKwYBBAHaRw8BAQdA/RBM+jgzq6EXzTc7zDmDgcSNENKJqZ7djI7G\nIz1Os720TkZpcmVjcmFja2VyIFNlY3VyaXR5IERpc2Nsb3N1cmVzIDxmaXJlY3Jh\nY2tlci1zZWN1cml0eS1kaXNjbG9zdXJlc0BhbWF6b24uY29tPoiZBBMWCABBAhsD\nBQkJZgGABQsJCAcCBhUKCQgLAgQWAgMBAh4BAheAFiEEp07t53fN17pTgiajKCi5\njaKQW+AFAl6DTtACGQEACgkQKCi5jaKQW+BnBwEA/+VBs/9t5aUBb20HZMSYL3tu\nFfh+fI1FSOsMSjXfAe8A/2MlxfdDdYtAhxwwN1Y+hGrm/PdT1LULJqoz14r3xUUJ\ntCVCYXJidSwgSXVsaWFuIE1hcmlhbiA8aXVsQGFtYXpvbi5jb20+iHgEMBYIACAW\nIQSnTu3nd83XulOCJqMoKLmNopBb4AUCXoNO2QIdAAAKCRAoKLmNopBb4EHTAQDS\nZzcN7MU7mtM79+ev9aoX0/OltBPq/QQy22qa3wbCwQD/cd1nXu3pKUKvyHtTpVFB\nJd+YNpG2ox3e3SfVZyXeRgiIlgQTFggAPgIbAwUJCWYBgAULCQgHAgYVCgkICwIE\nFgIDAQIeAQIXgBYhBKdO7ed3zde6U4ImoygouY2ikFvgBQJeg07QAAoJECgouY2i\nkFvgKggBAIUpB5stOoo/NjSMwpTMwa/jiqephv/GarCrluYRbQ/aAQDTn7aCX4ab\nb/vqLjiePos5tuToBoRXkL8QzdGyeONpBrQsQ29tcHV0ZSBDYXBzdWxlIDxjb21w\ndXRlLWNhcHN1bGVAYW1hem9uLmNvbT6IlgQTFggAPhYhBKdO7ed3zde6U4Imoygo\nuY2ikFvgBQJeg09JAhsDBQkJZgGABQsJCAcCBhUKCQgLAgQWAgMBAh4BAheAAAoJ\nECgouY2ikFvgyNcBAKSacUhi9Kb4C7Ybdzu4EKgQxfKnBucoubonF658K/GVAQDA\nd0sVeTVu3g/Z/7DHCBg8Jn+LSl3fCoEUeK4Z2fBeAbg4BF6DS1YSCisGAQQBl1UB\nBQEBB0B8rM1FwSBZzXAg2IxqJ8qUkwMVorbXlA+p/MNXQdeACAMBCAeIfgQYFggA\nJhYhBKdO7ed3zde6U4ImoygouY2ikFvgBQJeg0tWAhsMBQkJZgGAAAoJECgouY2i\nkFvgz8sA/jz0dUAwtTMtkdvjP4Dewrq1d8o7sgy1wV5Ax/a20DFyAQCJQIMf4MtF\njrojJjAIHRUlukf4VVEtGS7IroK56JS3Bw==\n=1xBx\n-----END PGP PUBLIC KEY BLOCK-----\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 7.4541015625,
          "content": "<picture>\n   <source media=\"(prefers-color-scheme: dark)\" srcset=\"docs/images/fc_logo_full_transparent-bg_white-fg.png\">\n   <source media=\"(prefers-color-scheme: light)\" srcset=\"docs/images/fc_logo_full_transparent-bg.png\">\n   <img alt=\"Firecracker Logo Title\" width=\"750\" src=\"docs/images/fc_logo_full_transparent-bg.png\">\n</picture>\n\nOur mission is to enable secure, multi-tenant, minimal-overhead execution of\ncontainer and function workloads.\n\nRead more about the Firecracker Charter [here](CHARTER.md).\n\n## What is Firecracker?\n\nFirecracker is an open source virtualization technology that is purpose-built\nfor creating and managing secure, multi-tenant container and function-based\nservices that provide serverless operational models. Firecracker runs workloads\nin lightweight virtual machines, called microVMs, which combine the security and\nisolation properties provided by hardware virtualization technology with the\nspeed and flexibility of containers.\n\n## Overview\n\nThe main component of Firecracker is a virtual machine monitor (VMM) that uses\nthe Linux Kernel Virtual Machine (KVM) to create and run microVMs. Firecracker\nhas a minimalist design. It excludes unnecessary devices and guest-facing\nfunctionality to reduce the memory footprint and attack surface area of each\nmicroVM. This improves security, decreases the startup time, and increases\nhardware utilization. Firecracker has also been integrated in container\nruntimes, for example\n[Kata Containers](https://github.com/kata-containers/kata-containers) and\n[Flintlock](https://github.com/liquidmetal-dev/flintlock).\n\nFirecracker was developed at Amazon Web Services to accelerate the speed and\nefficiency of services like [AWS Lambda](https://aws.amazon.com/lambda/) and\n[AWS Fargate](https://aws.amazon.com/fargate/). Firecracker is open sourced\nunder [Apache version 2.0](LICENSE).\n\nTo read more about Firecracker, check out\n[firecracker-microvm.io](https://firecracker-microvm.github.io).\n\n## Getting Started\n\nTo get started with Firecracker, download the latest\n[release](https://github.com/firecracker-microvm/firecracker/releases) binaries\nor build it from source.\n\nYou can build Firecracker on any Unix/Linux system that has Docker running (we\nuse a development container) and `bash` installed, as follows:\n\n```bash\ngit clone https://github.com/firecracker-microvm/firecracker\ncd firecracker\ntools/devtool build\ntoolchain=\"$(uname -m)-unknown-linux-musl\"\n```\n\nThe Firecracker binary will be placed at\n`build/cargo_target/${toolchain}/debug/firecracker`. For more information on\nbuilding, testing, and running Firecracker, go to the\n[quickstart guide](docs/getting-started.md).\n\nThe overall security of Firecracker microVMs, including the ability to meet the\ncriteria for safe multi-tenant computing, depends on a well configured Linux\nhost operating system. A configuration that we believe meets this bar is\nincluded in [the production host setup document](docs/prod-host-setup.md).\n\n## Contributing\n\nFirecracker is already running production workloads within AWS, but it's still\nDay 1 on the journey guided by our [mission](CHARTER.md). There's a lot more to\nbuild and we welcome all contributions.\n\nTo contribute to Firecracker, check out the development setup section in the\n[getting started guide](docs/getting-started.md) and then the Firecracker\n[contribution guidelines](CONTRIBUTING.md).\n\n## Releases\n\nNew Firecracker versions are released via the GitHub repository\n[releases](https://github.com/firecracker-microvm/firecracker/releases) page,\ntypically every two or three months. A history of changes is recorded in our\n[changelog](CHANGELOG.md).\n\nThe Firecracker release policy is detailed [here](docs/RELEASE_POLICY.md).\n\n## Design\n\nFirecracker's overall architecture is described in\n[the design document](docs/design.md).\n\n## Features & Capabilities\n\nFirecracker consists of a single micro Virtual Machine Manager process that\nexposes an API endpoint to the host once started. The API is\n[specified in OpenAPI format](src/firecracker/swagger/firecracker.yaml). Read\nmore about it in the [API docs](docs/api_requests).\n\nThe **API endpoint** can be used to:\n\n- Configure the microvm by:\n  - Setting the number of vCPUs (the default is 1).\n  - Setting the memory size (the default is 128 MiB).\n  - Configuring a [CPU template](docs/cpu_templates/cpu-templates.md).\n- Add one or more network interfaces to the microVM.\n- Add one or more read-write or read-only disks to the microVM, each represented\n  by a file-backed block device.\n- Trigger a block device re-scan while the guest is running. This enables the\n  guest OS to pick up size changes to the block device's backing file.\n- Change the backing file for a block device, before or after the guest boots.\n- Configure rate limiters for virtio devices which can limit the bandwidth,\n  operations per second, or both.\n- Configure the logging and metric system.\n- `[BETA]` Configure the data tree of the guest-facing metadata service. The\n  service is only available to the guest if this resource is configured.\n- Add a [vsock socket](docs/vsock.md) to the microVM.\n- Add a [entropy device](docs/entropy.md) to the microVM.\n- Start the microVM using a given kernel image, root file system, and boot\n  arguments.\n- [x86_64 only] Stop the microVM.\n\n**Built-in Capabilities**:\n\n- Demand fault paging and CPU oversubscription enabled by default.\n- Advanced, thread-specific seccomp filters for enhanced security.\n- [Jailer](docs/jailer.md) process for starting Firecracker in production\n  scenarios; applies a cgroup/namespace isolation barrier and then drops\n  privileges.\n\n## Tested platforms\n\nWe test all combinations of:\n\n| Instance  | Host OS & Kernel | Guest Rootfs | Guest Kernel |\n| :-------- | :--------------- | :----------- | :----------- |\n| c5n.metal | al2 linux_5.10   | ubuntu 24.04 | linux_5.10   |\n| m5n.metal | al2023 linux_6.1 |              | linux_6.1    |\n| m6i.metal |                  |              |              |\n| m6a.metal |                  |              |              |\n| m6g.metal |                  |              |              |\n| m7g.metal |                  |              |              |\n\n## Known issues and Limitations\n\n- The `pl031` RTC device on aarch64 does not support interrupts, so guest\n  programs which use an RTC alarm (e.g. `hwclock`) will not work.\n\n## Performance\n\nFirecracker's performance characteristics are listed as part of the\n[specification documentation](SPECIFICATION.md). All specifications are a part\nof our commitment to supporting container and function workloads in serverless\noperational models, and are therefore enforced via continuous integration\ntesting.\n\n## Policy for Security Disclosures\n\nThe security of Firecracker is our top priority. If you suspect you have\nuncovered a vulnerability, contact us privately, as outlined in our\n[security policy document](SECURITY.md); we will immediately prioritize your\ndisclosure.\n\n## FAQ & Contact\n\nFrequently asked questions are collected in our [FAQ doc](FAQ.md).\n\nYou can get in touch with the Firecracker community in the following ways:\n\n- Security-related issues, see our [security policy document](SECURITY.md).\n- Chat with us on our\n  [Slack workspace](https://join.slack.com/t/firecracker-microvm/shared_invite/zt-2tc0mfxpc-tU~HYAYSzLDl5XGGJU3YIg)\n  _Note: most of the maintainers are on a European time zone._\n- Open a GitHub issue in this repository.\n- Email the maintainers at\n  [firecracker-maintainers@amazon.com](mailto:firecracker-maintainers@amazon.com).\n\nWhen communicating within the Firecracker community, please mind our\n[code of conduct](CODE_OF_CONDUCT.md).\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.51171875,
          "content": "## Reporting Security Issues\n\nWe take all security reports seriously. When we receive such reports, we will\ninvestigate and subsequently address any potential vulnerabilities as quickly as\npossible. If you discover a potential security issue in this project, please\nnotify AWS/Amazon Security via our\n[vulnerability reporting page](http://aws.amazon.com/security/vulnerability-reporting/)\nor directly via email to [AWS Security](mailto:aws-security@amazon.com). Please\ndo *not* create a public GitHub issue in this project.\n"
        },
        {
          "name": "SPECIFICATION.md",
          "type": "blob",
          "size": 3.7265625,
          "content": "# Specification\n\nThe specifications below quantify Firecracker's promise to enable\nminimal-overhead execution of container and serverless workloads. These\nspecifications are enforced by integration tests (that run for each PR and main\nbranch merge).\n\nOn an [M5D.metal instance][1] (with hyperthreading disabled) and an\n[M6G.metal instance][2] and given host system resources are available (e.g.,\nthere are enough free CPU cycles, there is enough RAM, etc.), customers can rely\non the following:\n\n1. **Stability:** The Firecracker virtual machine manager starts (up to API\n   socket availability) within `8 CPU ms`[^1] and never crashes/halts/terminates\n   for internal reasons once started. _Note_: The wall-clock time has a large\n   standard deviation, spanning `6 ms to 60 ms`, with typical durations around\n   `12 ms`.\n1. **Failure Information:** When failures occur due to external circumstances,\n   they are logged[^2] by the Firecracker process.\n1. **API Stability:** The API socket is always available and the API conforms to\n   the in-tree\n   [Open API specification](src/firecracker/swagger/firecracker.yaml). API\n   failures are logged in the Firecracker log.\n1. **Overhead:** For a Firecracker virtual machine manager running a microVM\n   with `1 CPUs and 128 MiB of RAM`, and a guest OS with the Firecracker-tuned\n   kernel:\n   - Firecracker's virtual machine manager threads have a memory overhead\n     `<= 5 MiB`. The memory overhead is dependent on the **workload** (e.g. a\n     workload with multiple [vsock](docs/vsock.md) connections might generate a\n     memory overhead > 5MiB) and on the VMM **configuration** (the overhead does\n     not include the memory used by the [MMDS](docs/mmds/mmds-design.md) data\n     store.\n\n     The overhead is tested as part of the Firecracker CI using a\n     [memory cop](tests/host_tools/memory.py).\n\n   - It takes `<= 125 ms` to go from receiving the Firecracker InstanceStart API\n     call to the start of the Linux guest user-space `/sbin/init` process. The\n     boot time is measured using a VM with the serial console disabled and a\n     minimal kernel and root file system. For more details check the\n     [boot time](tests/integration_tests/performance/test_boottime.py)\n     integration tests.\n\n   - The compute-only guest CPU performance is `> 95%` of the equivalent\n     bare-metal performance. _`[integration test pending]`_\n1. **IO Performance:** With a host CPU core dedicated to the Firecracker device\n   emulation thread,\n   - the guest achieves up to `14.5 Gbps` network throughput by using `<= 80%`\n     of the host CPU core for emulation. _`[integration test pending]`_\n   - the guest achieves up to `25 Gbps` network throughput by using `100%` of\n     the host CPU core for emulation. _`[integration test pending]`_\n   - the virtualization layer adds on average `0.06ms` of latency.\n     _`[integration test pending]`_\n     [See further details on network performance](docs/network-performance.md)\n   - the guest achieves up to `1 GiB/s` storage throughput by using `<= 70%` of\n     the host CPU core for emulation. _`[integration test pending]`_\n1. **Telemetry:** Firecracker emits logs and metrics to the named pipes passed\n   to the logging API. Any logs and metrics emitted while their respective pipes\n   are full will be lost. Any such events will be signaled through the\n   `lost-logs` and `lost-metrics` counters.\n\n[^1]: CPU ms are actual ms of a user space thread's on-CPU runtime; useful for\n    getting consistent measurements for some performance metrics.\n\n[^2]: No logs are currently produced in the span of time between the `jailer`\n    process start-up and the logging system initialization in the `firecracker`\n    process.\n\n[1]: https://aws.amazon.com/ec2/instance-types/m5/\n[2]: https://aws.amazon.com/ec2/instance-types/m6/\n"
        },
        {
          "name": "THIRD-PARTY",
          "type": "blob",
          "size": 1.525390625,
          "content": "// Copyright 2017 The Chromium OS Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n//    * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n//    * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n//    * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "deny.toml",
          "type": "blob",
          "size": 0.1923828125,
          "content": "[licenses]\nversion = 2\nallow = [\n    \"MIT\",\n    \"Apache-2.0\",\n    \"BSD-3-Clause\",\n    \"ISC\",\n    \"Unicode-3.0\",\n    \"OpenSSL\"\n]\n\n[[bans.deny]]\nname = \"serde_derive\"\nversion = \">1.0.171, < 1.0.184\"\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "pre-commit",
          "type": "blob",
          "size": 1.6904296875,
          "content": "#!/bin/sh\n\n# Copyright 2022 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n# SPDX-License-Identifier: Apache-2.0\n\n# We avoid checks which require building firecracker due to the issues this introduces when\n# attempting to interact with the repository from an enviroment in which you cannot build\n# firecracker.\n\n# This will only fail when a staged file does not contain an appropriate license\n# when formatting is incorrect this will automaticalt rectify it.\n\n# Exit immediately when encountering a non-zero command\nset -e\n\n# Audit code base\ncargo audit\n# For every staged file\nfor i in $(git diff --name-only --cached --diff-filter=d); do\n    echo $i\n    # Get the extension\n    filename=$(basename -- \"$i\")\n    extension=\"${filename##*.}\"\n    if [ \"$extension\" = \"rs\" ]; then\n        # Read rustfmt config, replace '\\n' with ','\n        rustfmt_config=\"$(paste -sd, ./tests/fmt.toml)\"\n        # We first do a check run, this will fail when it finds a non-matching license.\n        rustfmt $i --check --config $rustfmt_config\n        # Run `cargo fmt` for this file\n        rustfmt $i --config $rustfmt_config\n    fi\n    if [ \"$extension\" = \"py\" ]; then\n        # Apply formatters for this file\n        black $i\n        isort $i\n    fi\n    if [ \"$extension\" = \"md\" ]; then\n        mdformat $i\n    fi\n    # Add changes to this file (as a result of formatting) to the commit.\n    git add $i\ndone\n\n# Check if git-secrets is present.\nif command -v git-secrets >/dev/null 2>&1; then\n    # Ensure the AWS patterns are registered.\n    git-secrets --register-aws\n    # Scan for and report secrets.\n    git-secrets --scan\nelse\n    echo \"WARNING: git-secrets is not on PATH. Automated secrets scanning could not be performed.\"\nfi\n"
        },
        {
          "name": "resources",
          "type": "tree",
          "content": null
        },
        {
          "name": "rust-toolchain.toml",
          "type": "blob",
          "size": 0.837890625,
          "content": "# Copyright 2023 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n# SPDX-License-Identifier: Apache-2.0\n\n# We keep a rust-toolchain file checked into the repository such that in the\n# rare event that we need to do an A/B-test across toolchains, cargo will\n# download the toolchains of the A and B revisions on the fly (if they do not\n# match the toolchain installed in the environment in which the test is\n# executed). This is needed for example if a toolchain upgrade introduces a new\n# syscall into our seccomp filters. Then, since our PR CI contains A/B-tests,\n# we will compile a version of Firecracker that does not have this syscall\n# allowlisted using a toolchain that requires it, causing the A/B-test to\n# always fail.\n[toolchain]\nchannel = \"1.83.0\"\ntargets = [\"x86_64-unknown-linux-musl\", \"aarch64-unknown-linux-musl\"]\nprofile = \"minimal\"\n\n"
        },
        {
          "name": "rusty-hook.toml",
          "type": "blob",
          "size": 0.1162109375,
          "content": "# To set up git hooks run\n# ```\n# cargo install rusty-hook\n# rusty-hook init\n# ```\n[hooks]\npre-commit = \"sh pre-commit\""
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}