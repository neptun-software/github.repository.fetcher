{
  "metadata": {
    "timestamp": 1736557335640,
    "page": 281,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "TryGhost/Ghost",
      "stars": 48000,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".devcontainer",
          "type": "tree",
          "content": null
        },
        {
          "name": ".docker",
          "type": "tree",
          "content": null
        },
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.06,
          "content": "node_modules/\n\n.nxcache\n.nx/cache\n.nx/workspace-data\n\n**/*.log"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.3,
          "content": "# http://editorconfig.org\n\nroot = true\n\n[*]\ncharset = utf-8\nindent_style = space\nindent_size = 4\nend_of_line = lf\ninsert_final_newline = true\ntrim_trailing_whitespace = true\n\n[*.hbs]\ninsert_final_newline = false\n\n[{package}.json]\nindent_size = 2\n\n[*.md]\ntrim_trailing_whitespace = false\n\n[*.yml]\nindent_size = 2\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.12,
          "content": "# enforce unix style line endings\n*.js text eol=lf\n*.md text eol=lf\n*.json text eol=lf\n*.yml text eol=lf\n*.hbs text eol=lf"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 3.2,
          "content": "# Node template\n\n# Logs\nlogs\n*.log\nnpm-debug.log*\nyarn-debug.log*\nyarn-error.log*\n\n# Runtime data\npids\n*.pid\n*.seed\n*.pid.lock\n\n# Directory for instrumented libs generated by jscoverage/JSCover\nlib-cov\n\n# Coverage directory used by tools like istanbul\ncoverage\ncoverage-e2e\ncoverage-integration\ncoverage-regression\ncoverage_*\n\n# nyc test coverage\n.nyc_output\n\n# Grunt intermediate storage (http://gruntjs.com/creating-plugins#storing-task-files)\n.grunt\n\n# Bower dependency directory (https://bower.io/)\nbower_components\n\n# node-waf configuration\n.lock-wscript\n\n# Compiled binary addons (https://nodejs.org/api/addons.html)\nbuild/Release\n\n# Dependency directories\nnode_modules/\njspm_packages/\n\n# Typescript v1 declaration files\ntypings/\n\n# Optional npm cache directory\n.npm\n\n# Nx\n.nxcache\n.nx/cache\n.nx/workspace-data\n\n# Optional eslint cache\n.eslintcache\n\n# Optional REPL history\n.node_repl_history\n\n# Output of 'npm pack'\n*.tgz\n\n# Yarn Integrity file\n.yarn-integrity\n\n# dotenv environment variables file\n.env\n\n# IDE\n.idea/*\n*.iml\n*.sublime-*\n.vscode/*\n!.vscode/launch.json\n!.vscode/settings.json\n\n# OSX\n.DS_Store\n\n!test/utils/fixtures/**/*.csv\n\n# Ghost DB file\n*.db\n*.db-journal\n\n/ghost/core/test-results/\n/ghost/core/core/server/data/export/exported*\n/ghost/core/content/tmp/*\n/ghost/core/content/data/*\n/ghost/core/content/logs/*\n/ghost/core/content/settings/*\n/ghost/core/content/apps/**/*\n/ghost/core/content/themes/**/*\n/ghost/core/content/images/**/*\n/ghost/core/content/media/**/*\n/ghost/core/content/files/**/*\n/ghost/core/content/public/*\n/ghost/core/content/adapters/storage/**/*\n/ghost/core/content/adapters/scheduling/**/*\n/ghost/core/content/themes/casper\n/ghost/core/content/themes/source\n!/ghost/core/README.md\n!/ghost/core/content/**/README.md\n\n# Changelog, which is autogenerated, not committed\n/ghost/core/CHANGELOG.md\n\n# Assets bundled into the release but we don't want to commit\n/ghost/core/LICENSE\n/ghost/core/PRIVACY.md\n/ghost/core/README.md\n/ghost/core/yarn.lock\n\n# Test generated files\ntest/functional/*.png\n\n# ignore all custom json files for config\n/ghost/core/config.*.json\n\n# Built asset files\n/ghost/core/core/built\n/ghost/core/core/frontend/public/ghost.min.css\n\n# Caddyfile - for local development with ssl + caddy\nCaddyfile\n\n# Playwright state with cookies it keeps across tests\n/ghost/core/playwright-state.json\n/ghost/core/playwright-report\n\n# Admin\n/ghost/admin/dist\n\n# Comments-UI\n/apps/comments-ui/umd\n/apps/comments-ui/playwright-report\n/ghost/comments-ui/playwright/.cache/\n/apps/comments-ui/test-results/\n\n# Portal\n!/apps/portal/.env\n/apps/portal/umd\n\n# Sodo-Search\n/apps/sodo-search/public/main.css\n/apps/sodo-search/umd\n\n# Signup Form and local environments\n/apps/signup-form/umd\n/apps/signup-form/.env*.local\n/apps/signup-form/test-results/\n/apps/signup-form/playwright-report/\n/apps/signup-form/playwright/.cache/\n\n# Announcement-Bar\n/apps/announcement-bar/umd\n\n# Build files\n/apps/*/build\n/ghost/*/build\n\n# Typescript build artifacts\ntsconfig.tsbuildinfo\n\n# Admin X\n/apps/admin-x-settings/dist\n/apps/admin-x-settings/dist-ssr\n/apps/admin-x-settings/test-results/\n/apps/admin-x-settings/playwright-report/\n/apps/admin-x-settings/playwright/.cache/\n\n# Tinybird\n.tinyb\n.venv\n.diff_tmp\n\n# Docker Yarn Cache\n.yarncache\n.yarncachecopy\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.26,
          "content": "[submodule \"ghost/core/content/themes/casper\"]\n\tpath = ghost/core/content/themes/casper\n\turl = ../../TryGhost/Casper.git\n\tignore = all\n[submodule \"ghost/core/content/themes/source\"]\n\tpath = ghost/core/content/themes/source\n\turl = ../../TryGhost/Source.git\n\tignore = all\n"
        },
        {
          "name": ".vscode",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.04,
          "content": "Copyright (c) 2013-2025 Ghost Foundation\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without\nrestriction, including without limitation the rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "PRIVACY.md",
          "type": "blob",
          "size": 2.62,
          "content": "# Privacy\n\nThis is a plain English summary of all of the components within Ghost which may affect your privacy in some way. Please keep in mind that if you use third party Themes or Apps with Ghost, there may be additional things not listed here.\n\nEach of the items listed in this document can be disabled via Ghost's `config.[env].json` file. Check out the [configuration guide](https://ghost.org/docs/config/#privacy) for details.\n\n## Official Services\n\nSome official services for Ghost are enabled by default. These services connect to Ghost.org and are managed by the Ghost Foundation: the Non-Profit organisation which runs the Ghost project.\n\n\n### Automatic Update Checks\n\nWhen a new session is started, Ghost pings a Ghost.org service to check if the current version of Ghost is the latest version of Ghost. If an update is available, a notification on the About Page appears to let you know.\n\nGhost will collect basic anonymised usage statistics from your blog before sending the request to the service. You can disable collecting statistics using the [privacy configuration](https://ghost.org/docs/config/). You will still receive notifications from the service.\n\nAll of the information and code related to this service is available in the [update-check.js](https://github.com/TryGhost/Ghost/blob/master/core/server/update-check.js) file.\n\n\n## Third Party Services\n\nGhost uses a number of third party services for specific functionality within Ghost.\n\n### JSDELIVR\n\nTo easily load functionality for membership features & search, Ghost leverages [JSDELIVR](https://www.jsdelivr.com/) to provide a CDN for drop-in scripts. \n\n### Gravatar\n\nTo automatically populate your profile picture, Ghost pings [Gravatar](http://gravatar.com) to see if your email address is associated with a profile there. If it is, we pull in your profile picture. If not: nothing happens.\n\n### RPC Pings\n\nWhen you publish a new post, Ghost sends out an RPC ping to let third party services know that new content is available on your blog. This enables search engines and other services to discover and index content on your blog more quickly. At present Ghost sends an RPC ping to the following service when you publish a new post:\n\n- http://rpc.pingomatic.com\n\nRPC pings only happen when Ghost is running in the `production` environment.\n\n### Structured Data\n\nGhost outputs basic meta tags to allow rich snippets of your content to be recognised by popular social networks. Currently there are 3 supported rich data protocols which are output in `{{ghost_head}}`:\n\n- Schema.org - http://schema.org/docs/documents.html\n- Open Graph - http://ogp.me/\n- Twitter cards - https://dev.twitter.com/cards/overview"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.07,
          "content": "&nbsp;\n<p align=\"center\">\n  <a href=\"https://ghost.org/#gh-light-mode-only\" target=\"_blank\">\n    <img src=\"https://user-images.githubusercontent.com/65487235/157884383-1b75feb1-45d8-4430-b636-3f7e06577347.png\" alt=\"Ghost\" width=\"200px\">\n  </a>\n  <a href=\"https://ghost.org/#gh-dark-mode-only\" target=\"_blank\">\n    <img src=\"https://user-images.githubusercontent.com/65487235/157849205-aa24152c-4610-4d7d-b752-3a8c4f9319e6.png\" alt=\"Ghost\" width=\"200px\">\n  </a>\n</p>\n&nbsp;\n\n<p align=\"center\">\n    <a href=\"https://ghost.org/\">Ghost.org</a> •\n    <a href=\"https://forum.ghost.org\">Forum</a> •\n    <a href=\"https://ghost.org/docs/\">Docs</a> •\n    <a href=\"https://github.com/TryGhost/Ghost/blob/main/.github/CONTRIBUTING.md\">Contributing</a> •\n    <a href=\"https://twitter.com/ghost\">Twitter</a>\n    <br /><br />\n    <a href=\"https://ghost.org/\">\n        <img src=\"https://img.shields.io/badge/downloads-100M+-brightgreen.svg\" alt=\"Downloads\" />\n    </a>\n    <a href=\"https://github.com/TryGhost/Ghost/releases/\">\n        <img src=\"https://img.shields.io/github/release/TryGhost/Ghost.svg\" alt=\"Latest release\" />\n    </a>\n    <a href=\"https://github.com/TryGhost/Ghost/actions\">\n        <img src=\"https://github.com/TryGhost/Ghost/workflows/CI/badge.svg?branch=main\" alt=\"Build status\" />\n    </a>\n    <a href=\"https://github.com/TryGhost/Ghost/contributors/\">\n        <img src=\"https://img.shields.io/github/contributors/TryGhost/Ghost.svg\" alt=\"Contributors\" />\n    </a>\n</p>\n\n\n&nbsp;\n\n<a href=\"https://ghost.org/\"><img src=\"https://user-images.githubusercontent.com/353959/169805900-66be5b89-0859-4816-8da9-528ed7534704.png\" alt=\"Fiercely independent, professional publishing. Ghost is the most popular open source, headless Node.js CMS which already works with all the tools you know and love.\" /></a>\n\n&nbsp;\n\n<a href=\"https://ghost.org/pricing/#gh-light-mode-only\" target=\"_blank\"><img src=\"https://user-images.githubusercontent.com/65487235/157849437-9b8fcc48-1920-4b26-a1e8-5806db0e6bb9.png\" alt=\"Ghost(Pro)\" width=\"165px\" /></a>\n<a href=\"https://ghost.org/pricing/#gh-dark-mode-only\" target=\"_blank\"><img src=\"https://user-images.githubusercontent.com/65487235/157849438-79889b04-b7b6-4ba7-8de6-4c1e4b4e16a5.png\" alt=\"Ghost(Pro)\" width=\"165px\" /></a>\n\nThe easiest way to get a production instance deployed is with our official **[Ghost(Pro)](https://ghost.org/pricing/)** managed service. It takes about 2 minutes to launch a new site with worldwide CDN, backups, security and maintenance all done for you.\n\nFor most people this ends up being the best value option because of [how much time it saves](https://ghost.org/docs/hosting/) — and 100% of revenue goes to the Ghost Foundation; funding the maintenance and further development of the project itself. So you’ll be supporting open source software *and* getting a great service!\n\n&nbsp;\n\n# Quickstart install\n\nIf you want to run your own instance of Ghost, in most cases the best way is to use our **CLI tool**\n\n```\nnpm install ghost-cli -g\n```\n\n&nbsp;\n\nThen, if installing locally add the `local` flag to get up and running in under a minute - [Local install docs](https://ghost.org/docs/install/local/)\n\n```\nghost install local\n```\n\n&nbsp;\n\nor on a server run the full install, including automatic SSL setup using LetsEncrypt - [Production install docs](https://ghost.org/docs/install/ubuntu/)\n\n```\nghost install\n```\n\n&nbsp;\n\nCheck out our [official documentation](https://ghost.org/docs/) for more information about our [recommended hosting stack](https://ghost.org/docs/hosting/) & properly [upgrading Ghost](https://ghost.org/docs/update/), plus everything you need to develop your own Ghost [themes](https://ghost.org/docs/themes/) or work with [our API](https://ghost.org/docs/content-api/).\n\n### Contributors & advanced developers\n\nFor anyone wishing to contribute to Ghost or to hack/customize core files we recommend following our full development setup guides: [Contributor guide](https://ghost.org/docs/contributing/) • [Developer setup](https://ghost.org/docs/install/source/)\n\n&nbsp;\n\n# Ghost sponsors\n\nA big thanks to our sponsors and partners who make Ghost possible. If you're interested in sponsoring Ghost and supporting the project, please check out our profile on [GitHub sponsors](https://github.com/sponsors/TryGhost) :heart:\n\n**[DigitalOcean](https://m.do.co/c/9ff29836d717)** • **[Fastly](https://www.fastly.com/)**\n\n&nbsp;\n\n# Getting help\n\nEveryone can get help and support from a large community of developers over on the [Ghost forum](https://forum.ghost.org/). **Ghost(Pro)** customers have access to 24/7 email support.\n\nTo stay up to date with all the latest news and product updates, make sure you [subscribe to our changelog newsletter](https://ghost.org/changelog/) — or follow us [on Twitter](https://twitter.com/Ghost), if you prefer your updates bite-sized and facetious. :saxophone::turtle:\n\n&nbsp;\n\n# Copyright & license\n\nCopyright (c) 2013-2025 Ghost Foundation - Released under the [MIT license](LICENSE). \nGhost and the Ghost Logo are trademarks of Ghost Foundation Ltd. Please see our [trademark policy](https://ghost.org/trademark/) for info on acceptable usage.\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.51,
          "content": "# Reporting Security Vulnerabilities\n\nPotential security vulnerabilities can be reported directly us at `security@ghost.org`. The Ghost Security Team communicates privately and works in a secured, isolated repository for tracking, testing, and resolving security-related issues.\n\nThe full, up-to-date details of our security policy and procedure can always be found in our documentation:\n\nhttps://ghost.org/docs/security/\n\nPlease refer to this before emailing us. Thanks for helping make Ghost safe for everyone 🙏.\n"
        },
        {
          "name": "apps",
          "type": "tree",
          "content": null
        },
        {
          "name": "compose.yml",
          "type": "blob",
          "size": 2.2,
          "content": "name: ghost\n\nservices:\n  ghost:\n    build:\n      context: .\n      dockerfile: ./.docker/Dockerfile\n      target: development\n    ports:\n      - \"2368:2368\"\n      - \"4200:4200\"\n    profiles: [full]\n    volumes:\n      - .:/home/ghost\n    tty: true\n    env_file:\n      - .env\n    depends_on:\n      - mysql\n      - redis\n  mysql:\n    image: mysql:8.0.35\n    container_name: ghost-mysql\n    # We'll need to look into how we can further fine tune the memory usage/performance here\n    command: --innodb-buffer-pool-size=1G --innodb-log-buffer-size=500M --innodb-change-buffer-max-size=50 --innodb-flush-log-at-trx_commit=0 --innodb-flush-method=O_DIRECT\n    ports:\n      - \"3306:3306\"\n    environment:\n      MYSQL_ROOT_PASSWORD: root\n      MYSQL_DATABASE: ghost\n    restart: always\n    volumes:\n      # Turns out you can drop .sql or .sql.gz files in here, cool!\n      - ./.docker/mysql-preload:/docker-entrypoint-initdb.d\n      - mysql-data:/var/lib/mysql\n    healthcheck:\n      test: \"mysql -uroot -proot ghost -e 'select 1'\"\n      interval: 1s\n      retries: 120\n  redis:\n    image: redis:7.0\n    container_name: ghost-redis\n    ports:\n      - \"6379:6379\"\n    restart: always\n    volumes:\n      - redis-data:/data\n    healthcheck:\n      test: [ \"CMD\", \"redis-cli\", \"--raw\", \"incr\", \"ping\" ]\n      interval: 1s\n      retries: 120\n  prometheus:\n    profiles: [monitoring]\n    image: prom/prometheus:v2.30.3\n    container_name: ghost-prometheus\n    ports:\n      - \"9090:9090\"\n    restart: always\n    volumes:\n      - ./.docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml\n  grafana:\n    profiles: [monitoring]\n    image: grafana/grafana:8.3.0\n    container_name: ghost-grafana\n    ports:\n      - \"3000:3000\"\n    restart: always\n    environment:\n      - GF_AUTH_ANONYMOUS_ENABLED=true\n      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin\n    volumes:\n      - ./.docker/grafana/datasources:/etc/grafana/provisioning/datasources\n      - ./.docker/grafana/dashboard.yml:/etc/grafana/provisioning/dashboards/main.yaml\n      - ./.docker/grafana/dashboards:/var/lib/grafana/dashboards\n  pushgateway:\n    profiles: [monitoring]\n    image: prom/pushgateway:v1.6.0\n    container_name: ghost-pushgateway\n    ports:\n      - \"9091:9091\"\nvolumes:\n  mysql-data:\n  redis-data:\n"
        },
        {
          "name": "ghost",
          "type": "tree",
          "content": null
        },
        {
          "name": "nx.json",
          "type": "blob",
          "size": 1.09,
          "content": "{\n    \"$schema\": \"./node_modules/nx/schemas/nx-schema.json\",\n    \"namedInputs\": {\n        \"default\": [\"{projectRoot}/**/*\", \"{workspaceRoot}/ghost/tsconfig.json\"]\n    },\n    \"parallel\": 4,\n    \"targetDefaults\": {\n        \"build\": {\n            \"dependsOn\": [\"^build\"],\n            \"inputs\": [\n                {\n                    \"env\": \"GHOST_CDN_URL\"\n                },\n                \"default\",\n                \"^default\"\n            ],\n            \"outputs\": [\n                \"{projectRoot}/dist\",\n                \"{projectRoot}/es\",\n                \"{projectRoot}/types\",\n                \"{projectRoot}/umd\"\n            ],\n            \"cache\": true\n        },\n        \"build:ts\": {\n            \"dependsOn\": [\"^build:ts\"],\n            \"inputs\": [\"default\", \"^default\"],\n            \"outputs\": [\"{projectRoot}/build\"],\n            \"cache\": true\n        },\n        \"lint\": {\n            \"cache\": true\n        },\n        \"test\": {\n            \"cache\": true\n        },\n        \"test:unit\": {\n            \"dependsOn\": [\"^build:ts\"],\n            \"cache\": true\n        }\n    },\n    \"cacheDirectory\": \".nxcache\"\n}\n"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 4.27,
          "content": "{\n  \"name\": \"ghost-monorepo\",\n  \"version\": \"0.0.0-private\",\n  \"description\": \"The professional publishing platform\",\n  \"private\": true,\n  \"repository\": \"https://github.com/TryGhost/Ghost\",\n  \"author\": \"Ghost Foundation\",\n  \"license\": \"MIT\",\n  \"workspaces\": [\n    \"ghost/*\",\n    \"apps/*\"\n  ],\n  \"monorepo\": {\n    \"public\": false,\n    \"internalPackages\": true,\n    \"repo\": \"https://github.com/TryGhost/Ghost\",\n    \"scope\": \"@tryghost\"\n  },\n  \"eslintIgnore\": [\n    \"**/node_modules/**\"\n  ],\n  \"scripts\": {\n    \"archive\": \"nx run ghost:archive\",\n    \"build\": \"nx run-many -t build\",\n    \"build:clean\": \"nx reset && rimraf -g 'ghost/*/build' && rimraf -g 'ghost/*/tsconfig.tsbuildinfo'\",\n    \"clean:hard\": \"node ./.github/scripts/clean.js\",\n    \"dev:debug\": \"DEBUG_COLORS=true DEBUG=@tryghost*,ghost:* yarn dev\",\n    \"dev:admin\": \"node .github/scripts/dev.js --admin\",\n    \"dev:ghost\": \"node .github/scripts/dev.js --ghost\",\n    \"dev\": \"node .github/scripts/dev.js\",\n    \"fix\": \"yarn cache clean && rimraf -g '**/node_modules' && yarn\",\n    \"knex-migrator\": \"yarn workspace ghost run knex-migrator\",\n    \"setup\": \"yarn && git submodule update --init && nx run-many -t build:ts && NODE_ENV=development node .github/scripts/setup.js\",\n    \"reset:data\": \"cd ghost/core && node index.js generate-data --clear-database --quantities members:100000,posts:500 --seed 123\",\n    \"reset:data:empty\": \"cd ghost/core && node index.js generate-data --clear-database --quantities members:0,posts:0 --seed 123\",\n    \"reset:data:xxl\": \"cd ghost/core && node index.js generate-data --clear-database --quantities members:2000000,posts:0,emails:0,members_stripe_customers:0,members_login_events:0,members_status_events:0 --seed 123\",\n    \"docker:reset\": \"docker compose down -v && docker compose up -d --wait\",\n    \"docker:down\": \"docker compose down\",\n    \"compose\": \"docker compose -f .devcontainer/compose.yml\",\n    \"lint\": \"nx run-many -t lint\",\n    \"test\": \"nx run-many -t test\",\n    \"test:unit\": \"nx run-many -t test:unit\",\n    \"test:browser\": \"node .github/scripts/dev.js --browser-tests --all\",\n    \"main\": \"yarn main:monorepo && yarn main:submodules\",\n    \"main:monorepo\": \"git checkout main && git pull ${GHOST_UPSTREAM:-origin} main && yarn\",\n    \"main:submodules\": \"git submodule sync && git submodule update && git submodule foreach \\\"git checkout main && git pull ${GHOST_UPSTREAM:-origin} main\\\"\",\n    \"prepare\": \"husky install .github/hooks\",\n    \"tb\": \"docker run --rm -v $(pwd):/ghost -w /ghost/ghost/tinybird -it tinybirdco/tinybird-cli-docker\",\n    \"tb:update\": \"docker pull tinybirdco/tinybird-cli-docker\"\n  },\n  \"resolutions\": {\n    \"@tryghost/errors\": \"1.3.5\",\n    \"@tryghost/logging\": \"2.4.18\",\n    \"jackspeak\": \"2.1.1\",\n    \"moment\": \"2.24.0\",\n    \"moment-timezone\": \"0.5.45\"\n  },\n  \"renovate\": {\n    \"extends\": [\n      \"github>tryghost/renovate-config:quiet\"\n    ],\n    \"rebaseWhen\": \"never\",\n    \"ignoreDeps\": [\n      \"got\",\n      \"intl-messageformat\",\n      \"moment\",\n      \"moment-timezone\",\n      \"simple-dom\",\n      \"ember-drag-drop\",\n      \"normalize.css\",\n      \"validator\",\n      \"codemirror\",\n      \"faker\",\n      \"ember-cli-code-coverage\",\n      \"ember-cli-terser\"\n    ],\n    \"ignorePaths\": [\n      \"test\",\n      \"ghost/admin/lib/koenig-editor/package.json\"\n    ],\n    \"packageRules\": [\n      {\n        \"groupName\": \"ember-basic-dropdown addons\",\n        \"packagePatterns\": [\n          \"^ember-basic\",\n          \"^ember-power\"\n        ]\n      },\n      {\n        \"groupName\": \"ember core\",\n        \"packageNames\": [\n          \"ember-source\",\n          \"ember-cli\",\n          \"ember-data\"\n        ]\n      },\n      {\n        \"groupName\": \"disable css\",\n        \"matchFiles\": [\n          \"ghost/admin/package.json\"\n        ],\n        \"packagePatterns\": [\n          \"^postcss\",\n          \"^css\"\n        ],\n        \"packageNames\": [\n          \"autoprefixer\",\n          \"ember-cli-postcss\"\n        ],\n        \"enabled\": false\n      }\n    ]\n  },\n  \"lint-staged\": {\n    \"*.js\": \"eslint\"\n  },\n  \"devDependencies\": {\n    \"@actions/core\": \"1.11.1\",\n    \"chalk\": \"4.1.2\",\n    \"concurrently\": \"8.2.2\",\n    \"eslint\": \"8.44.0\",\n    \"eslint-plugin-ghost\": \"3.4.0\",\n    \"eslint-plugin-react\": \"7.33.0\",\n    \"husky\": \"8.0.3\",\n    \"inquirer\": \"8.2.6\",\n    \"lint-staged\": \"15.2.10\",\n    \"nx\": \"19.8.4\",\n    \"rimraf\": \"5.0.10\",\n    \"ts-node\": \"10.9.2\",\n    \"typescript\": \"5.4.5\"\n  }\n}\n"
        },
        {
          "name": "yarn.lock",
          "type": "blob",
          "size": 1512.84,
          "content": null
        }
      ]
    }
  ]
}