{
  "metadata": {
    "timestamp": 1736708698891,
    "page": 128,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "ogaclejapan/SmartTabLayout",
      "stars": 7090,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.234375,
          "content": "# https://github.com/github/gitignore\n# https://github.com/hsz/idea-gitignore\n\n\n### JetBrains template\n# Covers JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm\n\n*.iml\n\n## Directory-based project format:\n.idea/\n# if you remove the above rule, at least ignore the following:\n\n# User-specific stuff:\n# .idea/workspace.xml\n# .idea/tasks.xml\n# .idea/dictionaries\n\n# Sensitive or high-churn files:\n# .idea/dataSources.ids\n# .idea/dataSources.xml\n# .idea/sqlDataSources.xml\n# .idea/dynamic.xml\n# .idea/uiDesigner.xml\n\n# Gradle:\n# .idea/gradle.xml\n# .idea/libraries\n\n# Mongo Explorer plugin:\n# .idea/mongoSettings.xml\n\n## File-based project format:\n*.ipr\n*.iws\n\n## Plugin-specific files:\n\n# IntelliJ\n/out/\n\n# mpeltonen/sbt-idea plugin\n.idea_modules/\n\n# JIRA plugin\natlassian-ide-plugin.xml\n\n# Crashlytics plugin (for Android Studio and IntelliJ)\ncom_crashlytics_export_strings.xml\ncrashlytics.properties\ncrashlytics-build.properties\n\n\n### Android template\n# Built application files\n*.apk\n*.ap_\n\n# Files for the Dalvik VM\n*.dex\n\n# Java class files\n*.class\n\n# Generated files\nbin/\ngen/\n\n# Gradle files\n.gradle/\nbuild/\n/*/build/\n\n# Local configuration file (sdk path, etc)\nlocal.properties\n\n# Proguard folder generated by Eclipse\nproguard/\n\n# Log Files\n*.log\n\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 1.70703125,
          "content": "# Version 2.0.0\n\n* Migrate to androidx 1.0.0\n* Remove util-v13 library\n\n# Version 1.7.0\n\n* Update support library version to 28.0.0\n* Change target sdk version to 28\n* Change min sdk version to 14\n* Deprecated util-v13 library\n\n# Version 1.6.1\n\n* Fixed issue with center last item in always in center tablayout #160\n\n# Version 1.6.0\n\n* Add `stl_indicatorWidth` to custom indicator's width #106\n\n# Version 1.5.1\n\n* Fixed indicator position of auto_center #100\n\n# Version 1.5.0\n\n* Add `stl_drawDecorationAfterTab` attribute for change the drawing order #58\n* Add `stl_titleOffset` attribute for adjust the slide position #89\n* Fixed a condition code of onSizeChanged for always in center\n\n# Version 1.4.2\n\n* Change the call order of OnTabClickListener when press the tab #74\n\n# Version 1.4.1\n\n* Update android support library version to 22.2.1\n\n# Version 1.4.0\n\n* Add TabClickListener interface #68\n\n# Version 1.3.0\n\n* RTL support #48\n* Add `stl_clickable` attribute.\n\n# Version 1.2.3\n\n* Modify to ensure the first scroll #54\n\n# Version 1.2.2\n\n* Fix bug when indicatorAlwaysInCenter is true and tabHost has only two tabs #50\n\n# Version 1.2.1\n\n* Add custom ScrollListener interface #46\n\n# Version 1.2.0\n\n* Support the margin of each tab.\n* Add `stl_indicatorWithoutPadding` and `stl_indicatorGravity` attributes.\n* Add `stl_overlineColor` and `stl_overlineThickness` attributes.\n\n# Version 1.1.3\n\n* Allow to set the background on default tab #13\n\n# Version 1.1.2\n\n* Added setter for tab text colors #10\n* Allow to set a String title dynamically on PagerItems. #7\n\n# Version 1.1.1\n\n* Enable the format of ‘reference’ for defaultTextColor to support ColorStateList #3\n\n# Version 1.1.0\n\n* Supported Icon Tab. #1\n\n\n# Version 1.0.0\n\n* Initial release.\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.4189453125,
          "content": "# Contributing\n\nIf you would like to contribute code to SmartTabLayout you can do so through GitHub by\nforking the repository and sending a pull request.\n\nWhen submitting code, please make every effort to follow existing conventions\nand style in order to keep the code as readable as possible.\n\n## Coding Style\n\n* Use the AndroidModernStyle of [Android Code Styles](https://github.com/ogaclejapan/android-code-styles) repository\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 11.1328125,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright (C) 2015 ogaclejapan\n   Copyright (C) 2013 The Android Open Source Project\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 11.8466796875,
          "content": "# SmartTabLayout\n[![Maven Central][maven_central_badge_svg]][maven_central_badge_app] [![Android Arsenal][android_arsenal_badge_svg]][android_arsenal_badge_link] [![Android Weekly][android_weekly_badge_svg]][android_weekly_badge_link]\n\n![icon][demo_icon]\n\nA custom ViewPager title strip which gives continuous feedback to the user when scrolling.\n\nThis library has been added some features and utilities based on [android-SlidingTabBasic][google_slidingtabbasic] project of Google Samples.\n\n\n![SmartTabLayout Demo1][demo1_gif] ![SmartTabLayout Demo2][demo2_gif]\n![SmartTabLayout Demo3][demo3_gif] ![SmartTabLayout Demo4][demo4_gif]\n![SmartTabLayout Demo5][demo5_gif] ![SmartTabLayout Demo6][demo6_gif]\n![SmartTabLayout Demo7][demo7_gif]\n\n\nTry out the sample application on the Play Store.\n\n[![Get it on Google Play][googleplay_store_badge]][demo_app]\n\n\n# Usage\n\n_(For a working implementation of this project see the demo/ folder.)_\n\nAdd the dependency to your build.gradle.\n\n```\n// For androidx (1.0.0)\ndependencies {\n    compile 'com.ogaclejapan.smarttablayout:library:2.0.0@aar'\n\n    //Optional: see how to use the utility.\n    compile 'com.ogaclejapan.smarttablayout:utils-v4:2.0.0@aar'\n}\n\n// For legacy android support library (28.0.0)\ndependencies {\n    compile 'com.ogaclejapan.smarttablayout:library:1.7.0@aar'\n\n    //Optional: see how to use the utility.\n    compile 'com.ogaclejapan.smarttablayout:utils-v4:1.7.0@aar'\n\n    //Deprecated since 1.7.0\n    compile 'com.ogaclejapan.smarttablayout:utils-v13:1.7.0@aar'\n}\n```\n\nInclude the SmartTabLayout widget in your layout.\nThis should usually be placed above the ViewPager it represents.\n\n```xml\n\n<com.ogaclejapan.smarttablayout.SmartTabLayout\n    android:id=\"@+id/viewpagertab\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"48dp\"\n    app:stl_indicatorAlwaysInCenter=\"false\"\n    app:stl_indicatorWithoutPadding=\"false\"\n    app:stl_indicatorInFront=\"false\"\n    app:stl_indicatorInterpolation=\"smart\"\n    app:stl_indicatorGravity=\"bottom\"\n    app:stl_indicatorColor=\"#40C4FF\"\n    app:stl_indicatorThickness=\"4dp\"\n    app:stl_indicatorWidth=\"auto\"\n    app:stl_indicatorCornerRadius=\"2dp\"\n    app:stl_overlineColor=\"#4D000000\"\n    app:stl_overlineThickness=\"0dp\"\n    app:stl_underlineColor=\"#4D000000\"\n    app:stl_underlineThickness=\"1dp\"\n    app:stl_dividerColor=\"#4D000000\"\n    app:stl_dividerThickness=\"1dp\"\n    app:stl_defaultTabBackground=\"?attr/selectableItemBackground\"\n    app:stl_defaultTabTextAllCaps=\"true\"\n    app:stl_defaultTabTextColor=\"#FC000000\"\n    app:stl_defaultTabTextSize=\"12sp\"\n    app:stl_defaultTabTextHorizontalPadding=\"16dp\"\n    app:stl_defaultTabTextMinWidth=\"0dp\"\n    app:stl_distributeEvenly=\"false\"\n    app:stl_clickable=\"true\"\n    app:stl_titleOffset=\"24dp\"\n    app:stl_drawDecorationAfterTab=\"false\"\n    />\n\n<androidx.viewpager.widget.ViewPager\n    android:id=\"@+id/viewpager\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:layout_below=\"@id/viewpagertab\"\n    />\n\n```\n\nIn your onCreate method (or onCreateView for a fragment), bind the widget to the ViewPager.\n(If you use a utility together, you can easily add items to PagerAdapter)\n\ne.g. ViewPager of v4.Fragment\n\n```java\n\nFragmentPagerItemAdapter adapter = new FragmentPagerItemAdapter(\n        getSupportFragmentManager(), FragmentPagerItems.with(this)\n        .add(R.string.titleA, PageFragment.class)\n        .add(R.string.titleB, PageFragment.class)\n        .create());\n\nViewPager viewPager = (ViewPager) findViewById(R.id.viewpager);\nviewPager.setAdapter(adapter);\n\nSmartTabLayout viewPagerTab = (SmartTabLayout) findViewById(R.id.viewpagertab);\nviewPagerTab.setViewPager(viewPager);\n\n```\n\n(Optional) If you use an OnPageChangeListener with your view pager you should set it in the widget rather than on the pager directly.\n\n\n```java\n\nviewPagerTab.setOnPageChangeListener(mPageChangeListener);\n\n```\n\n(Optional) Using the FragmentPagerItemAdapter of utility, you will be able to get a position in the Fragment side.\n\n```java\n\nint position = FragmentPagerItem.getPosition(getArguments());\n\n```\n\nThis position will help to implement the parallax scrolling header that contains the ViewPager :P\n\n# Attributes\n\nThere are several attributes you can set:\n\n| attr | description |\n|:---|:---|\n| stl_indicatorAlwaysInCenter | If set to true, active tab is always displayed in center (Like Newsstand google app), default false |\n| stl_indicatorWithoutPadding | If set to true, draw the indicator without padding of tab, default false |\n| stl_indicatorInFront | Draw the indicator in front of the underline, default false |\n| stl_indicatorInterpolation | Behavior of the indicator: 'linear' or 'smart' |\n| stl_indicatorGravity | Drawing position of the indicator: 'bottom' or 'top' or 'center', default 'bottom' |\n| stl_indicatorColor | Color of the indicator |\n| stl_indicatorColors | Multiple colors of the indicator, can set the color for each tab |\n| stl_indicatorThickness | Thickness of the indicator |\n| stl_indicatorWidth | Width of the indicator, default 'auto' |\n| stl_indicatorCornerRadius | Radius of rounded corner the indicator |\n| stl_overlineColor | Color of the top line |\n| stl_overlineThickness | Thickness of the top line |\n| stl_underlineColor | Color of the bottom line |\n| stl_underlineThickness | Thickness of the bottom line |\n| stl_dividerColor | Color of the dividers between tabs |\n| stl_dividerColors | Multiple colors of the dividers between tabs, can set the color for each tab |\n| stl_dividerThickness | Thickness of the divider |\n| stl_defaultTabBackground | Background drawable of each tab. In general it set the StateListDrawable |\n| stl_defaultTabTextAllCaps | If set to true, all tab titles will be upper case, default true |\n| stl_defaultTabTextColor | Text color of the tab that was included by default |\n| stl_defaultTabTextSize | Text size of the tab that was included by default |\n| stl_defaultTabTextHorizontalPadding | Text layout padding of the tab that was included by default |\n| stl_defaultTabTextMinWidth | Minimum width of tab |\n| stl_customTabTextLayoutId | Layout ID defined custom tab. If you do not specify a layout, use the default tab |\n| stl_customTabTextViewId | Text view ID in a custom tab layout. If you do not define with customTabTextLayoutId, does not work |\n| stl_distributeEvenly | If set to true, each tab is given the same weight, default false |\n| stl_clickable | If set to false, disable the selection of a tab click, default true |\n| stl_titleOffset | If set to 'auto_center', the slide position of the tab in the middle it will keep to the center. If specify a dimension it will be offset from the left edge, default 24dp |\n| stl_drawDecorationAfterTab | Draw the decoration(indicator and lines) after drawing of tab, default false |\n\n*__Notes:__ Both 'stl_indicatorAlwaysInCenter' and 'stl_distributeEvenly' if it is set to true, it will throw UnsupportedOperationException.*\n\n# How to customize the tab\n\nThe customization of tab There are three ways.\n\n* Customize the attribute\n* SmartTabLayout#setCustomTabView(int layoutResId, int textViewId)\n* SmartTabLayout#setCustomTabView(TabProvider provider)\n\nIf set the TabProvider, can build a view for each tab.\n\n```java\n\npublic class SmartTabLayout extends HorizontalScrollView {\n\n    //...\n\n    /**\n     * Create the custom tabs in the tab layout. Set with\n     * {@link #setCustomTabView(com.ogaclejapan.smarttablayout.SmartTabLayout.TabProvider)}\n     */\n    public interface TabProvider {\n\n        /**\n         * @return Return the View of {@code position} for the Tabs\n         */\n        View createTabView(ViewGroup container, int position, PagerAdapter adapter);\n\n    }\n\n    //...\n}\n\n```\n\n# How to use the utility\n\nUtility has two types available to suit the Android support library.\n\n* utils-v4 library contains the PagerAdapter implementation class for _androidx.fragment.app.Fragment_\n* (Deprecated) utils-v13 library contains the PagerAdapter implementation class for _android.app.Fragment_\n\nThe two libraries have different Android support libraries that depend,\nbut implemented functionality is the same.\n\n## PagerAdapter for View-based Page\n\n```java\n\nViewPagerItemAdapter adapter = new ViewPagerItemAdapter(ViewPagerItems.with(this)\n        .add(R.string.title, R.layout.page)\n        .add(\"title\", R.layout.page)\n        .create());\n\nviewPager.setAdapter(adapter);\n\n//...\n\npublic void onPageSelected(int position) {\n\n  //.instantiateItem() from until .destroyItem() is called it will be able to get the View of page.\n  View page = adapter.getPage(position);\n\n}\n\n\n```\n\n## PagerAdapter for Fragment-based Page\n\nFragment-based PagerAdapter There are two implementations.\nPlease differences refer to the library documentation for Android.\n\n* FragmentPagerItemAdapter extends FragmentPagerAdapter\n* FragmentStatePagerItemAdapter extends FragmentStatePagerAdapter\n\n```java\n\nFragmentPagerItemAdapter adapter = new FragmentPagerItemAdapter(\n        getSupportFragmentManager(), FragmentPagerItems.with(this)\n        .add(R.string.title, PageFragment.class),\n        .add(R.string.title, WithArgumentsPageFragment.class, new Bundler().putString(\"key\", \"value\").get()),\n        .add(\"title\", PageFragment.class)\n        .create());\n\nviewPager.setAdapter(adapter);\n\n//...\n\npublic void onPageSelected(int position) {\n\n  //.instantiateItem() from until .destoryItem() is called it will be able to get the Fragment of page.\n  Fragment page = adapter.getPage(position);\n\n}\n\n```\n\n*__Notes:__ If using fragment inside a ViewPager, Must be use [Fragment#getChildFragmentManager()](https://developer.android.com/reference/androidx/fragment/app/Fragment.html#getChildFragmentManager).*\n\n\n# Looking for iOS ?\n Check [WormTabStrip](https://github.com/EzimetYusup/WormTabStrip) out.\n \n# LICENSE\n\n```\nCopyright (C) 2015 ogaclejapan\nCopyright (C) 2013 The Android Open Source Project\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```\n\n[demo1_gif]: https://raw.githubusercontent.com/ogaclejapan/SmartTabLayout/master/art/demo1.gif\n[demo2_gif]: https://raw.githubusercontent.com/ogaclejapan/SmartTabLayout/master/art/demo2.gif\n[demo3_gif]: https://raw.githubusercontent.com/ogaclejapan/SmartTabLayout/master/art/demo3.gif\n[demo4_gif]: https://raw.githubusercontent.com/ogaclejapan/SmartTabLayout/master/art/demo4.gif\n[demo5_gif]: https://raw.githubusercontent.com/ogaclejapan/SmartTabLayout/master/art/demo5.gif\n[demo6_gif]: https://raw.githubusercontent.com/ogaclejapan/SmartTabLayout/master/art/demo6.gif\n[demo7_gif]: https://raw.githubusercontent.com/ogaclejapan/SmartTabLayout/master/art/demo7.gif\n[demo_app]: https://play.google.com/store/apps/details?id=com.ogaclejapan.smarttablayout.demo&referrer=utm_source%3Dgithub\n[demo_icon]: https://raw.githubusercontent.com/ogaclejapan/SmartTabLayout/master/art/icon.png\n[googleplay_store_badge]: http://www.android.com/images/brand/get_it_on_play_logo_large.png\n[maven_central_badge_svg]: https://maven-badges.herokuapp.com/maven-central/com.ogaclejapan.smarttablayout/library/badge.svg?style=flat\n[maven_central_badge_app]: https://maven-badges.herokuapp.com/maven-central/com.ogaclejapan.smarttablayout/library\n[android_arsenal_badge_svg]: https://img.shields.io/badge/Android%20Arsenal-SmartTabLayout-brightgreen.svg?style=flat\n[android_arsenal_badge_link]: http://android-arsenal.com/details/1/1683\n[android_weekly_badge_svg]: https://img.shields.io/badge/AndroidWeekly-%23148-blue.svg\n[android_weekly_badge_link]: http://androidweekly.net/issues/issue-148\n[qiitanium]: https://github.com/ogaclejapan/Qiitanium\n[google_slidingtabbasic]: https://github.com/googlesamples/android-SlidingTabsBasic\n"
        },
        {
          "name": "art",
          "type": "tree",
          "content": null
        },
        {
          "name": "build.gradle",
          "type": "blob",
          "size": 1.140625,
          "content": "// Top-level build file where you can add configuration options common to all sub-projects/modules.\next {\n  // Package information for bintray\n  pkginfo = [name       : ARTIFACT_NAME,\n             description: ARTIFACT_DESCRIPTION,\n             site       : SITE_URL,\n             issue      : ISSUE_URL,\n             vcs        : SCM_URL]\n}\n\nbuildscript {\n  repositories {\n    google()\n    mavenCentral()\n    maven {\n      url \"https://plugins.gradle.org/m2/\"\n    }\n    jcenter()\n  }\n  dependencies {\n    classpath 'com.android.tools.build:gradle:3.3.1'\n    classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.4'\n    classpath 'com.github.dcendents:android-maven-gradle-plugin:2.1'\n    classpath 'com.github.ben-manes:gradle-versions-plugin:0.21.0'\n    classpath 'gradle.plugin.com.hierynomus.gradle.plugins:license-gradle-plugin:0.15.0'\n\n    // NOTE: Do not place your application dependencies here; they belong\n    // in the individual module build.gradle files\n  }\n}\n\nallprojects {\n\n  version = VERSION_NAME\n  group = GROUP\n\n  repositories {\n    google()\n    mavenCentral()\n    jcenter()\n  }\n}\n\ntask clean(type: Delete) {\n  delete rootProject.buildDir\n}\n"
        },
        {
          "name": "demo",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradle.properties",
          "type": "blob",
          "size": 0.8505859375,
          "content": "android.useAndroidX=true\n\nVERSION_NAME=2.0.0\nVERSION_CODE=18\nCOMPILE_SDK_VERSION=28\nANDROIDX_APPCOMPAT_VERSION=1.0.2\nANDROIDX_BASE_VERSION=1.0.0\n\nGROUP=com.ogaclejapan.smarttablayout\nARTIFACT_NAME=SmartTabLayout\nARTIFACT_DESCRIPTION=A custom ViewPager title strip which gives continuous feedback to the user when scrolling\nSITE_URL=https://github.com/ogaclejapan/SmartTabLayout\nISSUE_SYSTEM=github\nISSUE_URL=https://github.com/ogaclejapan/SmartTabLayout/issues\nSCM_URL=https://github.com/ogaclejapan/SmartTabLayout\nSCM_CONNECTION=scm:git@github.com:ogaclejapan/SmartTabLayout.git\nSCM_DEV_CONNECTION=scm:git@github.com:ogaclejapan/SmartTabLayout.git\nLICENCE_NAME=The Apache Software License, Version 2.0\nLICENCE_URL=http://www.apache.org/licenses/LICENSE-2.0.txt\nLICENCE_DIST=repo\nDEVELOPER_ID=ogaclejapan\nDEVELOPER_NAME=Masaki Ogata\nDEVELOPER_EMAIL=ogaclejapan@gmail.com\n"
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 4.9609375,
          "content": "#!/usr/bin/env bash\n\n##############################################################################\n##\n##  Gradle start up script for UN*X\n##\n##############################################################################\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS=\"\"\n\nAPP_NAME=\"Gradle\"\nAPP_BASE_NAME=`basename \"$0\"`\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=\"maximum\"\n\nwarn ( ) {\n    echo \"$*\"\n}\n\ndie ( ) {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n}\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\ncase \"`uname`\" in\n  CYGWIN* )\n    cygwin=true\n    ;;\n  Darwin* )\n    darwin=true\n    ;;\n  MINGW* )\n    msys=true\n    ;;\nesac\n\n# For Cygwin, ensure paths are in UNIX format before anything is touched.\nif $cygwin ; then\n    [ -n \"$JAVA_HOME\" ] && JAVA_HOME=`cygpath --unix \"$JAVA_HOME\"`\nfi\n\n# Attempt to set APP_HOME\n# Resolve links: $0 may be a link\nPRG=\"$0\"\n# Need this for relative symlinks.\nwhile [ -h \"$PRG\" ] ; do\n    ls=`ls -ld \"$PRG\"`\n    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n    if expr \"$link\" : '/.*' > /dev/null; then\n        PRG=\"$link\"\n    else\n        PRG=`dirname \"$PRG\"`\"/$link\"\n    fi\ndone\nSAVED=\"`pwd`\"\ncd \"`dirname \\\"$PRG\\\"`/\" >&-\nAPP_HOME=\"`pwd -P`\"\ncd \"$SAVED\" >&-\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n    else\n        JAVACMD=\"$JAVA_HOME/bin/java\"\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=\"java\"\n    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\nfi\n\n# Increase the maximum file descriptors if we can.\nif [ \"$cygwin\" = \"false\" -a \"$darwin\" = \"false\" ] ; then\n    MAX_FD_LIMIT=`ulimit -H -n`\n    if [ $? -eq 0 ] ; then\n        if [ \"$MAX_FD\" = \"maximum\" -o \"$MAX_FD\" = \"max\" ] ; then\n            MAX_FD=\"$MAX_FD_LIMIT\"\n        fi\n        ulimit -n $MAX_FD\n        if [ $? -ne 0 ] ; then\n            warn \"Could not set maximum file descriptor limit: $MAX_FD\"\n        fi\n    else\n        warn \"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\"\n    fi\nfi\n\n# For Darwin, add options to specify how the application appears in the dock\nif $darwin; then\n    GRADLE_OPTS=\"$GRADLE_OPTS \\\"-Xdock:name=$APP_NAME\\\" \\\"-Xdock:icon=$APP_HOME/media/gradle.icns\\\"\"\nfi\n\n# For Cygwin, switch paths to Windows format before running java\nif $cygwin ; then\n    APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`\n    CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`\n\n    # We build the pattern for arguments to be converted via cygpath\n    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`\n    SEP=\"\"\n    for dir in $ROOTDIRSRAW ; do\n        ROOTDIRS=\"$ROOTDIRS$SEP$dir\"\n        SEP=\"|\"\n    done\n    OURCYGPATTERN=\"(^($ROOTDIRS))\"\n    # Add a user-defined pattern to the cygpath arguments\n    if [ \"$GRADLE_CYGPATTERN\" != \"\" ] ; then\n        OURCYGPATTERN=\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\"\n    fi\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    i=0\n    for arg in \"$@\" ; do\n        CHECK=`echo \"$arg\"|egrep -c \"$OURCYGPATTERN\" -`\n        CHECK2=`echo \"$arg\"|egrep -c \"^-\"`                                 ### Determine if an option\n\n        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition\n            eval `echo args$i`=`cygpath --path --ignore --mixed \"$arg\"`\n        else\n            eval `echo args$i`=\"\\\"$arg\\\"\"\n        fi\n        i=$((i+1))\n    done\n    case $i in\n        (0) set -- ;;\n        (1) set -- \"$args0\" ;;\n        (2) set -- \"$args0\" \"$args1\" ;;\n        (3) set -- \"$args0\" \"$args1\" \"$args2\" ;;\n        (4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;\n        (5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;\n        (6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;\n        (7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;\n        (8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;\n        (9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;\n    esac\nfi\n\n# Split up the JVM_OPTS And GRADLE_OPTS values into an array, following the shell quoting and substitution rules\nfunction splitJvmOpts() {\n    JVM_OPTS=(\"$@\")\n}\neval splitJvmOpts $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS\nJVM_OPTS[${#JVM_OPTS[*]}]=\"-Dorg.gradle.appname=$APP_BASE_NAME\"\n\nexec \"$JAVACMD\" \"${JVM_OPTS[@]}\" -classpath \"$CLASSPATH\" org.gradle.wrapper.GradleWrapperMain \"$@\"\n"
        },
        {
          "name": "gradlew.bat",
          "type": "blob",
          "size": 2.259765625,
          "content": "@if \"%DEBUG%\" == \"\" @echo off\n@rem ##########################################################################\n@rem\n@rem  Gradle startup script for Windows\n@rem\n@rem ##########################################################################\n\n@rem Set local scope for the variables with windows NT shell\nif \"%OS%\"==\"Windows_NT\" setlocal\n\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nset DEFAULT_JVM_OPTS=\n\nset DIRNAME=%~dp0\nif \"%DIRNAME%\" == \"\" set DIRNAME=.\nset APP_BASE_NAME=%~n0\nset APP_HOME=%DIRNAME%\n\n@rem Find java.exe\nif defined JAVA_HOME goto findJavaFromJavaHome\n\nset JAVA_EXE=java.exe\n%JAVA_EXE% -version >NUL 2>&1\nif \"%ERRORLEVEL%\" == \"0\" goto init\n\necho.\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\necho.\necho Please set the JAVA_HOME variable in your environment to match the\necho location of your Java installation.\n\ngoto fail\n\n:findJavaFromJavaHome\nset JAVA_HOME=%JAVA_HOME:\"=%\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\n\nif exist \"%JAVA_EXE%\" goto init\n\necho.\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\necho.\necho Please set the JAVA_HOME variable in your environment to match the\necho location of your Java installation.\n\ngoto fail\n\n:init\n@rem Get command-line arguments, handling Windowz variants\n\nif not \"%OS%\" == \"Windows_NT\" goto win9xME_args\nif \"%@eval[2+2]\" == \"4\" goto 4NT_args\n\n:win9xME_args\n@rem Slurp the command line arguments.\nset CMD_LINE_ARGS=\nset _SKIP=2\n\n:win9xME_args_slurp\nif \"x%~1\" == \"x\" goto execute\n\nset CMD_LINE_ARGS=%*\ngoto execute\n\n:4NT_args\n@rem Get arguments from the 4NT Shell from JP Software\nset CMD_LINE_ARGS=%$\n\n:execute\n@rem Setup the command line\n\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\n\n@rem Execute Gradle\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%\n\n:end\n@rem End local scope for the variables with windows NT shell\nif \"%ERRORLEVEL%\"==\"0\" goto mainEnd\n\n:fail\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\nrem the _cmd.exe /c_ return code!\nif  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1\nexit /b 1\n\n:mainEnd\nif \"%OS%\"==\"Windows_NT\" endlocal\n\n:omega\n"
        },
        {
          "name": "library",
          "type": "tree",
          "content": null
        },
        {
          "name": "publish.gradle",
          "type": "blob",
          "size": 2.09765625,
          "content": "apply plugin: 'com.jfrog.bintray'\napply plugin: 'com.github.dcendents.android-maven'\n\n\n// build a jar with source files\ntask sourcesJar(type: Jar) {\n  from android.sourceSets.main.java.srcDirs\n  classifier = 'sources'\n}\n\ntask javadoc(type: Javadoc) {\n  failOnError false\n  source = android.sourceSets.main.java.sourceFiles\n  classpath += project.files(android.getBootClasspath().join(File.pathSeparator))\n  classpath += configurations.compile\n}\n\n// build a jar with javadoc\ntask javadocJar(type: Jar, dependsOn: javadoc) {\n  classifier = 'javadoc'\n  from javadoc.destinationDir\n}\n\nartifacts {\n  archives sourcesJar\n  archives javadocJar\n}\n\ninstall {\n  repositories.mavenInstaller {\n    // This generates POM.xml with proper parameters\n    pom {\n      project {\n        packaging 'aar'\n\n        name ARTIFACT_NAME\n        description ARTIFACT_DESCRIPTION\n        url SITE_URL\n\n        licenses {\n          license {\n            name LICENCE_NAME\n            url LICENCE_URL\n            distribution LICENCE_DIST\n          }\n        }\n\n        developers {\n          developer {\n            id DEVELOPER_ID\n            name DEVELOPER_NAME\n            email DEVELOPER_EMAIL\n          }\n        }\n        issueManagement {\n          system ISSUE_SYSTEM\n          url ISSUE_URL\n        }\n\n        scm {\n          connection SCM_CONNECTION\n          developerConnection SCM_DEV_CONNECTION\n          url SCM_URL\n\n        }\n      }\n    }\n  }\n}\n\nbintray {\n\n  user = findProperty('BINTRAY_USER')\n  key = findProperty('BINTRAY_APIKEY')\n\n  configurations = ['archives']\n\n  dryRun = false\n  publish = true\n\n  pkg {\n    repo = \"maven\"\n    name = pkginfo.name\n    desc = pkginfo.description\n    websiteUrl = pkginfo.site\n    issueTrackerUrl = pkginfo.issue\n    vcsUrl = pkginfo.vcs\n    licenses = [\"Apache-2.0\"]\n    labels = ['android']\n    publicDownloadNumbers = true\n\n    version {\n      gpg {\n        sign = true\n        passphrase = findProperty('BINTRAY_GPG_PASSPHRASE')\n      }\n\n      mavenCentralSync {\n        sync = true\n        user = findProperty('NEXUS_USER')\n        password = findProperty('NEXUS_PASSWORD')\n        close = '1'\n      }\n    }\n  }\n}\n"
        },
        {
          "name": "settings.gradle",
          "type": "blob",
          "size": 0.0400390625,
          "content": "include ':demo', ':library', ':utils-v4'\n"
        },
        {
          "name": "utils-v4",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}