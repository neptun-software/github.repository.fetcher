{
  "metadata": {
    "timestamp": 1736708686732,
    "page": 101,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjExMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Tencent/Shadow",
      "stars": 7501,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".commitlintrc.yml",
          "type": "blob",
          "size": 0.2314453125,
          "content": "extends:\n  - '@commitlint/config-conventional'\ndefaultIgnores: false\nrules:\n  #允许中文\n  subject-case: [ 0 ]\n  footer-max-line-length: [ 0 ]\n  body-max-line-length: [ 0 ]\nhelpUrl: https://www.conventionalcommits.org/zh-hans/v1.0.0/\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.130859375,
          "content": "*.iml\n.gradle\n/local.properties\n!.idea\n.idea/*\n!.idea/codeStyles\n.DS_Store\n/build\n/captures\n.externalNativeBuild\n.gradletasknamecache\n"
        },
        {
          "name": ".idea",
          "type": "tree",
          "content": null
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 5.095703125,
          "content": "# Contributing\n我们非常欢迎您向Tencent Shadow提交Issue或Pull Request。\n\n# Issue\n在Tencent Shadow开源的初期，我们会密切关注所有Issue反馈。晚些时候再根据反馈的情况制定Issue模板。\n\n反馈问题时，请Fork Shadow的代码库到自己的名下。新建分支，添加可以复现问题的最小改动，提交后push到Github上。然后在Issue单中附上你的代码库地址和分支名即可。\n\n```sh\ngit clone https://github.com/Tencent/Shadow.git //大概之前你已经这样clone过Shadow的代码库了\ncd shadow //切换到你clone的shadow目录\ngit remote add your_name https://github.com/<your_name>/Shadow.git //把你fork的版本库添加成一个远端\ngit fetch --all //更新所有远端的代码\ngit checkout -b new_branch_name origin/dev // 基于Shadow代码库的dev分支新建一个分支\n//加上你复现问题的修改\ngit commit\ngit push -u your_name  //推送new_branch_name分支到你fork的版本库\n```\n然后你的分支地址应该类似：`https://github.com/<your_name>/Shadow/tree/new_branch_name`\n\n其他人可以用这样的命令获取到你的分支，看到你的提交做了哪些改动，运行并Debug。\n```sh\ncd shadow //切换到shadow目录\ngit fetch https://github.com/<your_name>/Shadow.git new_branch_name\ngit checkout -b new_branch_name FETCH_HEAD\n```\n\n# Pull Request\n由于PR会修改代码，因此即便是在开源初期，我们也会对PR谨慎处理。\n\n请注意以下问题：\n\n1. 不要提交无意义改动。\n1. 除非是提交复现问题的测试用例，请确保`gradlew testSdk`构建成功（需要连接Android设备）\n1. 测试机需要至少有API 28，API 19两种机器，以保证ART和Dalvik虚拟机都能正常工作。\n1. 尽量原子化的提交，配有较为清晰的提交信息。\n\n我们会根据大家的PR再调整PR的要求的。\n\n# 开发指引\n\n## Debug编译期代码(Gradle插件、Transform等)\n\nShadow的`coding`和`core.gradle-plugin`、`core.manifest-parser`、`core.transform`,`core.transform-kit`\n等模块都是在插件工程的编译期执行的。如果需要Debug它们，需要额外的配置。\n\n1. 添加`Remote JVM Debug` Configuration。在Android Studio的`Run`菜单中找到`Edit Configuration`。 点\"＋\"（Add New\n   Configuration），选择`Remote JVM Debug`，配置参数一般采用默认值不用修改。\n   `Name`可以任意修改成方便识别的名字，稍后在工具栏执行时选择。 复制`Command line arguments for remote JVM`。\n   一般的默认值是:`-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005`。\n   将这行复制到`gradle.properties`中的`org.gradle.jvmargs=-Xmx4096m`后面作为更多的参数，注意加上空格。 然后将其中的`suspend=n`\n   改为`suspend=y`，表示让JVM启动Gradle时等待Debugger连接，再继续执行。\n\n2. 终止正在运行的Gradle Daemon。在命令行执行`./gradlew --stop`，终止掉没有采用新参数的JVM进程。\n\n3. Debug编译期代码。通过`./gradlew`或者Android Studio的Gradle sync，或运行`sample-host`等任务， 都会在一启动时因为前面的`suspend=y`\n   卡住。这时再选择刚刚添加的`Remote JVM Debug` Configuration， 点击`Debug`执行按钮，即可连接上Gradle JVM。如果在`ShadowPlugin`\n   或者某个Transform代码中设置了断点， 就会正常在断点处暂停。 注意选择`Remote JVM Debug` Configuration的位置同选择`sample-host`\n   等模块在同一个菜单中。 并且Android Studio可以同时执行多个Configuration，先运行`sample-host`， 再Debug `Remote JVM Debug`\n   Configuration是没有问题的。\n\n4. 在其他不是Shadow源码工程中，也可以同样设置`gradle.properties`参数，在其中执行Gradle任务。\n   然后切换到Shadow源码工程中执行Debug `Remote JVM Debug` Configuration， 也可以Debug Shadow在其他工程中的编译期代码执行情况。\n\n5. 还原。回退对`gradle.properties`的修改，然后执行`./gradlew --stop`。以上所有改动的作用即可恢复。\n\n## 虚拟机\n\n启动虚拟机\n\n```shell\n~/Library/Android/sdk/emulator/emulator @Pixel_XL_API_28 -noaudio -no-boot-anim -wipe-data -no-snapstorage\n```\n\n其中`Pixel_XL_API_28`来自：\n\n```shell\n~/Library/Android/sdk/emulator/emulator -list-avds\n```\n\n`-noaudio`可以避免耳机切换到通话模式。\n`-wipe-data -no-snapstorage`使得虚拟机完全恢复到新建状态。\n`-no-boot-anim`稍微加快点启动。\n\n## 启动指定自动化测试用例\n\n随着Android Studio更新，在#1263 解决之前，只能通过命令行执行自动化测试。\n如下命令，传入类名#方法可以指定单个方法。只传入类名可以测试整个类。\n如果测试方法是抽象类中的，需要传入一个具体的实现类。\n\n```shell\n./gradlew :test-dynamic-host:connectedTarget28DebugAndroidTest -Pandroid.testInstrumentationRunnerArguments.class=com.tencent.shadow.test.cases.plugin_main.ApplicationContextSubDirTest#testGetDatabasePath\n```\n\n## 清理工作区\n\n由于复合构建的存在，Gradle clean任务不能总是很好的完成清理工作区的目的。\n\n```shell\ngit clean -fdx -e .idea -e local.properties \n```\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 1.4658203125,
          "content": "Copyright (C) 2019 THL A29 Limited, a Tencent company.  All rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n\n3. Neither the name of THL A29 Limited nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "PRIVACY.md",
          "type": "blob",
          "size": 1.80859375,
          "content": "# Tencent Shadow SDK个人信息保护规则\n_生效日期：2022年4月6日_\n\n## 引言\n\nTencent Shadow SDK (以下简称“SDK产品”)由深圳市腾讯计算机系统有限公司(以下简称“我们”)开发, 公司注册地为深圳市南山区粤海街道麻岭社区科技中一路腾讯大厦35层。\n\n**我们在此特别声明:**\n\n**1. 本SDK产品功能的实现将不需要收集、获取、传输、分享或者使用终端用户的任何个人信息。**\n\n**2. 我们不会因为开发者适配、集成和装载本SDK产品而向其提供、传输或共享任何的个人信息。**\n\n**3. 如果开发者因提供其产品或服务而需要处理终端用户的个人信息, 由开发者独自承担相应的法律责任。**\n\n**4. 请终端用户注意, 在开发者将本SDK产品适配、集成或装载到开发者产品或服务前, 我们已经要求相关开发者仔细阅读我们在官网公示的相关服务协议、本规则及开发者合规指南(或具有同样性质的相关法律文件), 并已经要求开发者依据开发者的产品收集使用个人信息的情况进行合规自查。**\n\n**5. 如果我们更新、改进或修改了本SDK产品, 并因此导致我们需要处理终端用户的个人信息的, 我们将会依据适用法律的要求对本规则进行修订, 并将修订后的内容及时告知开发者和终端用户, 我们将要求开发者适时更新其隐私政策,并以弹框形式通知终端用户并且获得其同意。**\n\n**6. 对于本规则的任何内容存在疑问的, 可以通过如下的方式与我们取得联系:**\n\n(1) 通过 https://kf.qq.com/ 与我们联系进行在线咨询;\n(2) 发送邮件至 Dataprivacy@tencent.com ;  \n(3) 邮寄信件至：中国广东省深圳市南山区海天二路33号腾讯滨海大厦 数据隐私保护部(收)邮编：518054。\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.2294921875,
          "content": "# Shadow\n\n![Android CI](https://github.com/Tencent/Shadow/workflows/Android%20CI/badge.svg?event=push)\n[![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square)](http://makeapullrequest.com)\n\n## 介绍\nShadow是一个腾讯自主研发的Android插件框架，经过线上亿级用户量检验。\nShadow不仅开源分享了插件技术的关键代码，还完整的分享了上线部署所需要的所有设计。\n\n与市面上其他插件框架相比，Shadow主要具有以下特点：\n\n* **复用独立安装App的源码**：插件App的源码原本就是可以正常安装运行的。\n* **零反射无Hack实现插件技术**：从理论上就已经确定无需对任何系统做兼容开发，更无任何隐藏API调用，和Google限制非公开SDK接口访问的策略完全不冲突。\n* **全动态插件框架**：一次性实现完美的插件框架很难，但Shadow将这些实现全部动态化起来，使插件框架的代码成为了插件的一部分。插件的迭代不再受宿主打包了旧版本插件框架所限制。\n* **宿主增量极小**：得益于全动态实现，真正合入宿主程序的代码量极小（15KB，160方法数左右）。\n* **Kotlin实现**：core.loader，core.transform核心代码完全用Kotlin实现，代码简洁易维护。\n\n### 支持特性\n* 四大组件\n* Fragment（代码添加和Xml添加）\n* DataBinding（无需特别支持，但已验证可正常工作）\n* 跨进程使用插件Service\n* 自定义Theme\n* 插件访问宿主类\n* So加载\n* 分段加载插件（多Apk分别加载或多Apk以此依赖加载）\n* 一个Activity中加载多个Apk中的View\n* 等等……\n\n## 编译与开发环境\n\n### 环境准备\n建议直接用最新的稳定版本Android Studio打开工程。目前项目已适配`Android Studio Arctic Fox | 2020.3.1`，\n低版本的Android Studio可能因为Gradle版本过高而无法正常打开项目。\n\n然后在IDE中选择`sample-app`或`sample-host`模块直接运行，分别体验同一份代码在正常安装情况下和插件情况下的运行情况。\n\n![选择sample-host直接运行](pics/run-sample-host-in-ide.png)\n\nShadow的所有代码都位于`projects`目录下的3个目录，分别是：\n\n* `sdk`包含SDK的所有代码\n* `test`包含SDK的自动化测试代码\n* `sample`包含演示代码\n\n其中`sample`应该是大家体验Shadow的最佳环境。\n详见`sample`目录中的[README](projects/sample/README.md)介绍。\n\n### 兼容性\n\nShadow项目有较为完善的自动化测试，因此最新代码对外部环境的版本兼容性可以参考自动化测试的配置。\n\n* [pr-check.yml](.github/workflows/pr-check.yml) 虚拟机自动化测试，包含Android测试机版本和编译环境JDK等版本。\n* [pr-check-gradle-plugin.yml](.github/workflows/pr-check-gradle-plugin.yml) AGP兼容性测试。\n  其中指向的[test_JDK17.sh](projects/test/gradle-plugin-agp-compat-test/test_JDK17.sh)和\n  [test_JDK11.sh](projects/test/gradle-plugin-agp-compat-test/test_JDK11.sh)中定义了被测试的AGP版本。\n\n## 自己写的测试代码出错？\n\n以我们多年的插件环境下业务开发经验，插件框架是不可能一步到位实现完美的。\n因此，我们相信大部分业务在接入时都是需要一定的二次开发工作。\nShadow现有的代码满足的是我们自己的业务现在的需求。得益于全动态的设计，\n插件框架和插件本身都是动态发布的，插件包里既有插件代码也有插件框架代码，\n所以可以根据新版本插件的需要同时开发插件框架。\n\n例如，ShadowActivity没有实现全所有Activity方法，你写的测试代码可能用到了，\n就会出现Method Not Found错误，只需要在ShadowActivity中实现对应方法就可以了。\n大部分方法的实现都只是需要简单的转调就能工作正常。\n\n如果遇到不会实现的功能，可以提Issue。最好附上测试代码。\n\n## 后续开发\n* 原理与设计说明文档\n* 多插件支持的演示工程\n* 自动化测试用例补充\n* 开源包含下载能力的manager实现\n\n## 贡献代码\n\n详见[CONTRIBUTING.md](CONTRIBUTING.md)\n\n## 许可协议\n\nTencent Shadow采用`BSD 3-Clause License`，详见[LICENSE](LICENSE.txt)。\n\n## 个人信息保护规则声明\n\n详见[PRIVACY.md](PRIVACY.md)\n"
        },
        {
          "name": "build.gradle",
          "type": "blob",
          "size": 1.4326171875,
          "content": "// Top-level build file where you can add configuration options common to all sub-projects/modules.\n\n//buildscript不能从其他gradle文件中apply，所以这段buildscript脚本存在于多个子构建中。\n//请更新buildscript时同步更新。\nbuildscript {\n    loadVersions:\n    {// 读取versions.properties到ext中，供项目中直接用变量引用版本号\n        def versions_properties_path = 'buildScripts/gradle/versions.properties'\n        def versions = new Properties()\n        versions.load(file(versions_properties_path).newReader())\n        versions.forEach { key, stringValue ->\n            def value = stringValue?.isInteger() ? stringValue as Integer : stringValue\n            ext.set(key, value)\n        }\n    }\n    repositories {\n        if (!System.getenv().containsKey(\"DISABLE_TENCENT_MAVEN_MIRROR\")) {\n            maven { url 'https://mirrors.tencent.com/nexus/repository/maven-public/' }\n        } else {\n            google()\n            mavenCentral()\n        }\n    }\n    dependencies {\n        classpath \"com.android.tools.build:gradle:$build_gradle_version\"\n        classpath \"org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version\"\n        classpath 'com.tencent.shadow.coding:aar-to-jar-plugin'\n        classpath 'com.tencent.shadow.coding:common-jar-settings'\n    }\n}\napply from: 'buildScripts/gradle/common.gradle'\n\napply from: \"buildScripts/gradle/maven.gradle\"\n\napply from: \"buildScripts/gradle/fix_issue_1263.gradle\"\n"
        },
        {
          "name": "buildScripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradle.properties",
          "type": "blob",
          "size": 0.7900390625,
          "content": "# Project-wide Gradle settings.\n# IDE (e.g. Android Studio) users:\n# Gradle settings configured through the IDE *will override*\n# any settings specified in this file.\n# For more details on how to configure your build environment visit\n# http://www.gradle.org/docs/current/userguide/build_environment.html\n# Specifies the JVM arguments used for the daemon process.\n# The setting is particularly useful for tweaking memory settings.\norg.gradle.jvmargs=-Xmx4096m\n# When configured, Gradle will run in incubating parallel mode.\n# This option should only be used with decoupled projects. More details, visit\n# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects\n# org.gradle.parallel=true\nandroid.useAndroidX=true\norg.gradle.caching=true\n\nandroid.nonTransitiveRClass=true\n"
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 5.630859375,
          "content": "#!/usr/bin/env sh\n\n#\n# Copyright 2015 the original author or authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      https://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\n##############################################################################\n##\n##  Gradle start up script for UN*X\n##\n##############################################################################\n\n# Attempt to set APP_HOME\n# Resolve links: $0 may be a link\nPRG=\"$0\"\n# Need this for relative symlinks.\nwhile [ -h \"$PRG\" ] ; do\n    ls=`ls -ld \"$PRG\"`\n    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n    if expr \"$link\" : '/.*' > /dev/null; then\n        PRG=\"$link\"\n    else\n        PRG=`dirname \"$PRG\"`\"/$link\"\n    fi\ndone\nSAVED=\"`pwd`\"\ncd \"`dirname \\\"$PRG\\\"`/\" >/dev/null\nAPP_HOME=\"`pwd -P`\"\ncd \"$SAVED\" >/dev/null\n\nAPP_NAME=\"Gradle\"\nAPP_BASE_NAME=`basename \"$0\"`\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS='\"-Xmx64m\" \"-Xms64m\"'\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=\"maximum\"\n\nwarn () {\n    echo \"$*\"\n}\n\ndie () {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n}\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\nnonstop=false\ncase \"`uname`\" in\n  CYGWIN* )\n    cygwin=true\n    ;;\n  Darwin* )\n    darwin=true\n    ;;\n  MINGW* )\n    msys=true\n    ;;\n  NONSTOP* )\n    nonstop=true\n    ;;\nesac\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n    else\n        JAVACMD=\"$JAVA_HOME/bin/java\"\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=\"java\"\n    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\nfi\n\n# Increase the maximum file descriptors if we can.\nif [ \"$cygwin\" = \"false\" -a \"$darwin\" = \"false\" -a \"$nonstop\" = \"false\" ] ; then\n    MAX_FD_LIMIT=`ulimit -H -n`\n    if [ $? -eq 0 ] ; then\n        if [ \"$MAX_FD\" = \"maximum\" -o \"$MAX_FD\" = \"max\" ] ; then\n            MAX_FD=\"$MAX_FD_LIMIT\"\n        fi\n        ulimit -n $MAX_FD\n        if [ $? -ne 0 ] ; then\n            warn \"Could not set maximum file descriptor limit: $MAX_FD\"\n        fi\n    else\n        warn \"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\"\n    fi\nfi\n\n# For Darwin, add options to specify how the application appears in the dock\nif $darwin; then\n    GRADLE_OPTS=\"$GRADLE_OPTS \\\"-Xdock:name=$APP_NAME\\\" \\\"-Xdock:icon=$APP_HOME/media/gradle.icns\\\"\"\nfi\n\n# For Cygwin or MSYS, switch paths to Windows format before running java\nif [ \"$cygwin\" = \"true\" -o \"$msys\" = \"true\" ] ; then\n    APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`\n    CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`\n\n    JAVACMD=`cygpath --unix \"$JAVACMD\"`\n\n    # We build the pattern for arguments to be converted via cygpath\n    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`\n    SEP=\"\"\n    for dir in $ROOTDIRSRAW ; do\n        ROOTDIRS=\"$ROOTDIRS$SEP$dir\"\n        SEP=\"|\"\n    done\n    OURCYGPATTERN=\"(^($ROOTDIRS))\"\n    # Add a user-defined pattern to the cygpath arguments\n    if [ \"$GRADLE_CYGPATTERN\" != \"\" ] ; then\n        OURCYGPATTERN=\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\"\n    fi\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    i=0\n    for arg in \"$@\" ; do\n        CHECK=`echo \"$arg\"|egrep -c \"$OURCYGPATTERN\" -`\n        CHECK2=`echo \"$arg\"|egrep -c \"^-\"`                                 ### Determine if an option\n\n        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition\n            eval `echo args$i`=`cygpath --path --ignore --mixed \"$arg\"`\n        else\n            eval `echo args$i`=\"\\\"$arg\\\"\"\n        fi\n        i=`expr $i + 1`\n    done\n    case $i in\n        0) set -- ;;\n        1) set -- \"$args0\" ;;\n        2) set -- \"$args0\" \"$args1\" ;;\n        3) set -- \"$args0\" \"$args1\" \"$args2\" ;;\n        4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;\n        5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;\n        6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;\n        7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;\n        8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;\n        9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;\n    esac\nfi\n\n# Escape application args\nsave () {\n    for i do printf %s\\\\n \"$i\" | sed \"s/'/'\\\\\\\\''/g;1s/^/'/;\\$s/\\$/' \\\\\\\\/\" ; done\n    echo \" \"\n}\nAPP_ARGS=`save \"$@\"`\n\n# Collect all arguments for the java command, following the shell quoting and substitution rules\neval set -- $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS \"\\\"-Dorg.gradle.appname=$APP_BASE_NAME\\\"\" -classpath \"\\\"$CLASSPATH\\\"\" org.gradle.wrapper.GradleWrapperMain \"$APP_ARGS\"\n\nexec \"$JAVACMD\" \"$@\"\n"
        },
        {
          "name": "gradlew.bat",
          "type": "blob",
          "size": 2.611328125,
          "content": "@rem\n@rem Copyright 2015 the original author or authors.\n@rem\n@rem Licensed under the Apache License, Version 2.0 (the \"License\");\n@rem you may not use this file except in compliance with the License.\n@rem You may obtain a copy of the License at\n@rem\n@rem      https://www.apache.org/licenses/LICENSE-2.0\n@rem\n@rem Unless required by applicable law or agreed to in writing, software\n@rem distributed under the License is distributed on an \"AS IS\" BASIS,\n@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@rem See the License for the specific language governing permissions and\n@rem limitations under the License.\n@rem\n\n@if \"%DEBUG%\" == \"\" @echo off\n@rem ##########################################################################\n@rem\n@rem  Gradle startup script for Windows\n@rem\n@rem ##########################################################################\n\n@rem Set local scope for the variables with windows NT shell\nif \"%OS%\"==\"Windows_NT\" setlocal\n\nset DIRNAME=%~dp0\nif \"%DIRNAME%\" == \"\" set DIRNAME=.\nset APP_BASE_NAME=%~n0\nset APP_HOME=%DIRNAME%\n\n@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.\nfor %%i in (\"%APP_HOME%\") do set APP_HOME=%%~fi\n\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nset DEFAULT_JVM_OPTS=\"-Xmx64m\" \"-Xms64m\"\n\n@rem Find java.exe\nif defined JAVA_HOME goto findJavaFromJavaHome\n\nset JAVA_EXE=java.exe\n%JAVA_EXE% -version >NUL 2>&1\nif \"%ERRORLEVEL%\" == \"0\" goto execute\n\necho.\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\necho.\necho Please set the JAVA_HOME variable in your environment to match the\necho location of your Java installation.\n\ngoto fail\n\n:findJavaFromJavaHome\nset JAVA_HOME=%JAVA_HOME:\"=%\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\n\nif exist \"%JAVA_EXE%\" goto execute\n\necho.\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\necho.\necho Please set the JAVA_HOME variable in your environment to match the\necho location of your Java installation.\n\ngoto fail\n\n:execute\n@rem Setup the command line\n\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\n\n\n@rem Execute Gradle\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*\n\n:end\n@rem End local scope for the variables with windows NT shell\nif \"%ERRORLEVEL%\"==\"0\" goto mainEnd\n\n:fail\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\nrem the _cmd.exe /c_ return code!\nif  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1\nexit /b 1\n\n:mainEnd\nif \"%OS%\"==\"Windows_NT\" endlocal\n\n:omega\n"
        },
        {
          "name": "pics",
          "type": "tree",
          "content": null
        },
        {
          "name": "projects",
          "type": "tree",
          "content": null
        },
        {
          "name": "settings.gradle",
          "type": "blob",
          "size": 5.4052734375,
          "content": "import java.nio.file.Files\n\nrootProject.name = 'shadow'\n\ncopyLocalPropertiesForIncludeBuilds()\nincludeBuild 'projects/sdk/coding'\nincludeBuild 'projects/sdk/core'\nincludeBuild 'projects/sdk/dynamic'\n\nincludeTest()\nincludeSample()\nincludeSampleDynamicApk()\n\ndef includeTest() {\n    include 'test-dynamic-host',\n            'test-dynamic-manager',\n            'test-dynamic-loader',\n            'test-dynamic-runtime',\n            'common-jar-settings-test',\n            'constant',\n            'custom-view',\n            'plugin-use-host-code-lib',\n            'test-manager',\n            'general-cases-lib',\n            'test-plugin-general-cases',\n            'general-cases-app',\n            'androidx-cases-lib',\n            'androidx-cases-app',\n            'test-plugin-androidx-cases',\n            'plugin-service-for-host',\n            'test-none-dynamic-host'\n    project(':test-dynamic-host').projectDir = file('projects/test/dynamic/host/test-dynamic-host')\n    project(':test-dynamic-manager').projectDir = file('projects/test/dynamic/manager/test-dynamic-manager')\n    project(':test-dynamic-loader').projectDir = file('projects/test/dynamic/plugin/test-dynamic-loader')\n    project(':test-dynamic-runtime').projectDir = file('projects/test/dynamic/plugin/test-dynamic-runtime')\n    project(':common-jar-settings-test').projectDir = file('projects/test/common-jar-settings-test')\n    project(':constant').projectDir = file('projects/test/lib/constant')\n    project(':custom-view').projectDir = file('projects/test/lib/custom-view')\n    project(':plugin-use-host-code-lib').projectDir = file('projects/test/lib/plugin-use-host-code-lib')\n    project(':test-manager').projectDir = file('projects/test/lib/test-manager')\n    project(':general-cases-lib').projectDir = file('projects/test/plugin/general-cases/general-cases-lib')\n    project(':androidx-cases-lib').projectDir = file('projects/test/plugin/androidx-cases/androidx-cases-lib')\n    project(':androidx-cases-app').projectDir = file('projects/test/plugin/androidx-cases/androidx-cases-app')\n    project(':test-plugin-androidx-cases').projectDir = file('projects/test/plugin/androidx-cases/test-plugin-androidx-cases')\n    project(':test-plugin-general-cases').projectDir = file('projects/test/plugin/general-cases/test-plugin-general-cases')\n    project(':general-cases-app').projectDir = file('projects/test/plugin/general-cases/general-cases-app')\n    project(':plugin-service-for-host').projectDir = file('projects/test/plugin/particular-cases/plugin-service-for-host')\n    project(':test-none-dynamic-host').projectDir = file('projects/test/none-dynamic/host/test-none-dynamic-host')\n}\n\ndef includeSample() {\n    include 'sample-constant',\n            'sample-host',\n            'sample-host-lib',\n            'sample-manager',\n            'sample-loader',\n            'sample-runtime',\n            'pinnedheaderexpandablelistview',\n            'slidingmenu',\n            'sample-base-lib',\n            'sample-base',\n            'sample-app'\n    project(':sample-constant').projectDir = file('projects/sample/source/sample-constant')\n    project(':sample-host').projectDir = file('projects/sample/source/sample-host')\n    project(':sample-host-lib').projectDir = file('projects/sample/source/sample-host-lib')\n    project(':sample-manager').projectDir = file('projects/sample/source/sample-manager')\n    project(':sample-loader').projectDir = file('projects/sample/source/sample-plugin/sample-loader')\n    project(':sample-runtime').projectDir = file('projects/sample/source/sample-plugin/sample-runtime')\n    project(':pinnedheaderexpandablelistview').projectDir = file('projects/sample/source/sample-plugin/third-party/pinnedheaderexpandablelistview')\n    project(':slidingmenu').projectDir = file('projects/sample/source/sample-plugin/third-party/slidingmenu')\n    project(':sample-base-lib').projectDir = file('projects/sample/source/sample-plugin/sample-base-lib')\n    project(':sample-base').projectDir = file('projects/sample/source/sample-plugin/sample-base')\n    project(':sample-app').projectDir = file('projects/sample/source/sample-plugin/sample-app')\n}\n\ndef includeSampleDynamicApk() {\n    include 'sample-hello-api',\n            'sample-hello-api-holder',\n            'sample-hello-apk',\n            'sample-hello-host'\n    project(':sample-hello-api').projectDir = file('projects/sample/dynamic-apk/sample-hello-api')\n    project(':sample-hello-api-holder').projectDir = file('projects/sample/dynamic-apk/sample-hello-api-holder')\n    project(':sample-hello-apk').projectDir = file('projects/sample/dynamic-apk/sample-hello-apk')\n    project(':sample-hello-host').projectDir = file('projects/sample/dynamic-apk/sample-hello-host')\n}\n\n/**\n * Android Studio当前不会为IncludeBuild创建包含sdk.dir的local.properties\n * 使得没有ANDROID_HOME或等效环境变量时仅依赖根目录的local.properties无法编译IncludeBuild。\n * 为了使此含有IncludeBuild的项目和其他不含有IncludeBuild的普通Android工程一样可以在\n * 只有根目录的local.properties情况下正常编译，用此任务复制local.properties。\n */\ndef copyLocalPropertiesForIncludeBuilds() {\n    def rootFile = file('local.properties')\n    if (rootFile.exists()) {\n        ['coding', 'core', 'dynamic'].forEach {\n            def includeBuildFile = file(\"projects/sdk/${it}/local.properties\")\n            if (!includeBuildFile.exists()) {\n                Files.copy(rootFile.toPath(), includeBuildFile.toPath())\n            }\n        }\n    }\n}\n"
        }
      ]
    }
  ]
}