{
  "metadata": {
    "timestamp": 1736708766568,
    "page": 247,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "google/google-java-format",
      "stars": 5684,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1171875,
          "content": ".idea/\n*.ims\n*.iml\n\n.classpath\n.project\n.factorypath\n.settings/\n.apt_generated/\n\ntarget/\n\nbin/\nout/\neclipse_plugin/lib/\n"
        },
        {
          "name": ".mvn",
          "type": "tree",
          "content": null
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.365234375,
          "content": "Want to contribute? Great! First, read this page (including the small print at\nthe end).\n\n### Before you contribute\n\nBefore we can use your code, you must sign the [Google Individual Contributor\nLicense\nAgreement](https://developers.google.com/open-source/cla/individual?csw=1)\n(CLA), which you can do online. The CLA is necessary mainly because you own the\ncopyright to your changes, even after your contribution becomes part of our\ncodebase, so we need your permission to use and distribute your code. We also\nneed to be sure of various other thingsâ€”for instance that you'll tell us if you\nknow that your code infringes on other people's patents. You don't have to sign\nthe CLA until after you've submitted your code for review and a member has\napproved it, but you must do it before we can put your code into our codebase.\nBefore you start working on a larger contribution, you should get in touch with\nus first through the issue tracker with your idea so that we can help out and\npossibly guide you. Coordinating up front makes it much easier to avoid\nfrustration later on.\n\n### Code reviews\n\nAll submissions, including submissions by project members, require review. We\nuse GitHub pull requests for this purpose.\n\n### The small print\n\nContributions made by corporations are covered by a different agreement than the\none above, the Software Grant and Corporate Contributor License Agreement.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 14.02734375,
          "content": "The following Apache 2.0 license applies to all code in this package except\ngoogle-java-format-diff.py.\n\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n------------------------------------------------------------------------------\n\nThe following NCSA license applies only to google-java-format-diff.py.\n\n==============================================================================\nLLVM Release License\n==============================================================================\nUniversity of Illinois/NCSA\nOpen Source License\n\nCopyright (c) 2007-2015 University of Illinois at Urbana-Champaign.\nAll rights reserved.\n\nDeveloped by:\n\n    LLVM Team\n\n    University of Illinois at Urbana-Champaign\n\n    http://llvm.org\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal with\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\nof the Software, and to permit persons to whom the Software is furnished to do\nso, subject to the following conditions:\n\n    * Redistributions of source code must retain the above copyright notice,\n      this list of conditions and the following disclaimers.\n\n    * Redistributions in binary form must reproduce the above copyright notice,\n      this list of conditions and the following disclaimers in the\n      documentation and/or other materials provided with the distribution.\n\n    * Neither the names of the LLVM Team, University of Illinois at\n      Urbana-Champaign, nor the names of its contributors may be used to\n      endorse or promote products derived from this Software without specific\n      prior written permission.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\nCONTRIBUTORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS WITH THE\nSOFTWARE.\n\n==============================================================================\nThe LLVM software contains code written by third parties.  Such software will\nhave its own individual LICENSE.TXT file in the directory in which it appears.\nThis file will describe the copyrights, license, and restrictions which apply\nto that code.\n\nThe disclaimer of warranty in the University of Illinois Open Source License\napplies to all code in the LLVM Distribution, and nothing in any of the\nother licenses gives permission to use the names of the LLVM Team or the\nUniversity of Illinois to endorse or promote products derived from this\nSoftware.\n\nThe following pieces of software have additional or alternate copyrights,\nlicenses, and/or restrictions:\n\nProgram             Directory\n-------             ---------\n<none yet>\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.548828125,
          "content": "# google-java-format\n\n`google-java-format` is a program that reformats Java source code to comply with\n[Google Java Style][].\n\n[Google Java Style]: https://google.github.io/styleguide/javaguide.html\n\n## Using the formatter\n\n### From the command-line\n\n[Download the formatter](https://github.com/google/google-java-format/releases)\nand run it with:\n\n```\njava -jar /path/to/google-java-format-${GJF_VERSION?}-all-deps.jar <options> [files...]\n```\n\nThe formatter can act on whole files, on limited lines (`--lines`), on specific\noffsets (`--offset`), passing through to standard-out (default) or altered\nin-place (`--replace`).\n\nTo reformat changed lines in a specific patch, use\n[`google-java-format-diff.py`](https://github.com/google/google-java-format/blob/master/scripts/google-java-format-diff.py).\n\n***Note:*** *There is no configurability as to the formatter's algorithm for\nformatting. This is a deliberate design decision to unify our code formatting on\na single format.*\n\n### IntelliJ, Android Studio, and other JetBrains IDEs\n\nA\n[google-java-format IntelliJ plugin](https://plugins.jetbrains.com/plugin/8527)\nis available from the plugin repository. To install it, go to your IDE's\nsettings and select the `Plugins` category. Click the `Marketplace` tab, search\nfor the `google-java-format` plugin, and click the `Install` button.\n\nThe plugin will be disabled by default. To enable,\n[open the Project settings](https://www.jetbrains.com/help/idea/configure-project-settings.html),\nthen click \"google-java-format Settings\" and check the \"Enable\ngoogle-java-format\" checkbox.\n\nTo enable it by default in new projects,\n[open the default settings for new projects](https://www.jetbrains.com/help/idea/configure-project-settings.html#new-default-settings)\nand configure it under \"Other Settings/google-java-format Settings\".\n\nWhen enabled, it will replace the normal `Reformat Code` and `Optimize Imports`\nactions.\n\n#### IntelliJ JRE Config\n\nThe google-java-format plugin uses some internal classes that aren't available\nwithout extra configuration. To use the plugin, you need to\n[add some options to your IDE's Java runtime](https://www.jetbrains.com/help/idea/tuning-the-ide.html#procedure-jvm-options).\nTo do that, go to `Helpâ†’Edit Custom VM Options...` and paste in these lines:\n\n```\n--add-exports=jdk.compiler/com.sun.tools.javac.api=ALL-UNNAMED\n--add-exports=jdk.compiler/com.sun.tools.javac.code=ALL-UNNAMED\n--add-exports=jdk.compiler/com.sun.tools.javac.file=ALL-UNNAMED\n--add-exports=jdk.compiler/com.sun.tools.javac.parser=ALL-UNNAMED\n--add-exports=jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED\n--add-exports=jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED\n```\n\nOnce you've done that, restart the IDE.\n\n### Eclipse\n\nThe latest version of the `google-java-format` Eclipse plugin can be downloaded\nfrom the [releases page](https://github.com/google/google-java-format/releases).\nDrop it into the Eclipse\n[drop-ins folder](http://help.eclipse.org/neon/index.jsp?topic=%2Forg.eclipse.platform.doc.isv%2Freference%2Fmisc%2Fp2_dropins_format.html)\nto activate the plugin.\n\nThe plugin adds a `google-java-format` formatter implementation that can be\nconfigured in `Window > Preferences > Java > Code Style > Formatter > Formatter\nImplementation`.\n\n### Third-party integrations\n\n*   Visual Studio Code\n    *   [google-java-format-for-vs-code](https://marketplace.visualstudio.com/items?itemName=JoseVSeb.google-java-format-for-vs-code)\n*   Gradle plugins\n    *   [spotless](https://github.com/diffplug/spotless/tree/main/plugin-gradle#google-java-format)\n    *   [sherter/google-java-format-gradle-plugin](https://github.com/sherter/google-java-format-gradle-plugin)\n*   Apache Maven plugins\n    *   [spotless](https://github.com/diffplug/spotless/tree/main/plugin-maven#google-java-format)\n    *   [spotify/fmt-maven-plugin](https://github.com/spotify/fmt-maven-plugin)\n    *   [talios/googleformatter-maven-plugin](https://github.com/talios/googleformatter-maven-plugin)\n    *   [Cosium/maven-git-code-format](https://github.com/Cosium/maven-git-code-format):\n        A maven plugin that automatically deploys google-java-format as a\n        pre-commit git hook.\n*   SBT plugins\n    *   [sbt/sbt-java-formatter](https://github.com/sbt/sbt-java-formatter)\n*   [Github Actions](https://github.com/features/actions)\n    *   [googlejavaformat-action](https://github.com/axel-op/googlejavaformat-action):\n        Automatically format your Java files when you push on github\n\n### as a library\n\nThe formatter can be used in software which generates java to output more\nlegible java code. Just include the library in your maven/gradle/etc.\nconfiguration.\n\n`google-java-format` uses internal javac APIs for parsing Java source. The\nfollowing JVM flags are required when running on JDK 16 and newer, due to\n[JEP 396: Strongly Encapsulate JDK Internals by Default](https://openjdk.java.net/jeps/396):\n\n```\n--add-exports=jdk.compiler/com.sun.tools.javac.api=ALL-UNNAMED\n--add-exports=jdk.compiler/com.sun.tools.javac.code=ALL-UNNAMED\n--add-exports=jdk.compiler/com.sun.tools.javac.file=ALL-UNNAMED\n--add-exports=jdk.compiler/com.sun.tools.javac.parser=ALL-UNNAMED\n--add-exports=jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED\n--add-exports=jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED\n```\n\n#### Maven\n\n```xml\n<dependency>\n  <groupId>com.google.googlejavaformat</groupId>\n  <artifactId>google-java-format</artifactId>\n  <version>${google-java-format.version}</version>\n</dependency>\n```\n\n#### Gradle\n\n```groovy\ndependencies {\n  implementation 'com.google.googlejavaformat:google-java-format:$googleJavaFormatVersion'\n}\n```\n\nYou can then use the formatter through the `formatSource` methods. E.g.\n\n```java\nString formattedSource = new Formatter().formatSource(sourceString);\n```\n\nor\n\n```java\nCharSource source = ...\nCharSink output = ...\nnew Formatter().formatSource(source, output);\n```\n\nYour starting point should be the instance methods of\n`com.google.googlejavaformat.java.Formatter`.\n\n## Building from source\n\n```\nmvn install\n```\n\n## Contributing\n\nPlease see [the contributors guide](CONTRIBUTING.md) for details.\n\n## License\n\n```text\nCopyright 2015 Google Inc.\n\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not\nuse this file except in compliance with the License. You may obtain a copy of\nthe License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\nWARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\nLicense for the specific language governing permissions and limitations under\nthe License.\n```\n"
        },
        {
          "name": "core",
          "type": "tree",
          "content": null
        },
        {
          "name": "eclipse_plugin",
          "type": "tree",
          "content": null
        },
        {
          "name": "idea_plugin",
          "type": "tree",
          "content": null
        },
        {
          "name": "pom.xml",
          "type": "blob",
          "size": 12.486328125,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!--\n  ~ Copyright 2015 Google Inc.\n  ~\n  ~ Licensed under the Apache License, Version 2.0 (the \"License\");\n  ~ you may not use this file except in compliance with the License.\n  ~ You may obtain a copy of the License at\n  ~\n  ~     http://www.apache.org/licenses/LICENSE-2.0\n  ~\n  ~ Unless required by applicable law or agreed to in writing, software\n  ~ distributed under the License is distributed on an \"AS IS\" BASIS,\n  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  ~ See the License for the specific language governing permissions and\n  ~ limitations under the License.\n  -->\n\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n  <modelVersion>4.0.0</modelVersion>\n\n  <groupId>com.google.googlejavaformat</groupId>\n  <artifactId>google-java-format-parent</artifactId>\n  <packaging>pom</packaging>\n  <version>HEAD-SNAPSHOT</version>\n\n  <modules>\n    <module>core</module>\n  </modules>\n\n  <name>Google Java Format Parent</name>\n\n  <description>\n    A Java source code formatter that follows Google Java Style.\n  </description>\n\n  <url>https://github.com/google/google-java-format</url>\n\n  <inceptionYear>2015</inceptionYear>\n\n  <organization>\n    <name>Google Inc.</name>\n    <url>http://www.google.com/</url>\n  </organization>\n\n  <licenses>\n    <license>\n      <name>The Apache Software License, Version 2.0</name>\n      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>\n      <distribution>repo</distribution>\n    </license>\n  </licenses>\n\n  <developers>\n    <developer>\n      <id>jdd</id>\n      <name>John DeTreville</name>\n      <email>jdd@google.com</email>\n      <organization>Google Inc.</organization>\n      <organizationUrl>http://www.google.com/</organizationUrl>\n      <roles>\n        <role>owner</role>\n        <role>developer</role>\n      </roles>\n      <timezone>-8</timezone>\n    </developer>\n  </developers>\n\n  <scm>\n    <url>http://github.com/google/google-java-format/</url>\n    <connection>scm:git:git://github.com/google/google-java-format.git</connection>\n    <developerConnection>scm:git:ssh://git@github.com/google/google-java-format.git</developerConnection>\n    <tag>HEAD</tag>\n  </scm>\n\n  <issueManagement>\n    <system>GitHub Issues</system>\n    <url>http://github.com/google/google-java-format/issues</url>\n  </issueManagement>\n\n  <prerequisites>\n    <maven>3.0.3</maven>\n  </prerequisites>\n\n  <properties>\n    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n    <java.version>1.8</java.version>\n    <guava.version>32.1.3-jre</guava.version>\n    <truth.version>1.4.0</truth.version>\n    <jspecify.version>1.0.0</jspecify.version>\n    <errorprone.version>2.36.0</errorprone.version>\n    <auto-value.version>1.9</auto-value.version>\n    <auto-service.version>1.0.1</auto-service.version>\n    <maven-javadoc-plugin.version>3.6.3</maven-javadoc-plugin.version>\n    <maven-source-plugin.version>3.2.1</maven-source-plugin.version>\n  </properties>\n\n  <dependencyManagement>\n    <dependencies>\n      <!-- Required runtime dependencies -->\n      <dependency>\n        <groupId>com.google.guava</groupId>\n        <artifactId>guava</artifactId>\n        <version>${guava.version}</version>\n      </dependency>\n\n      <!-- Compile-time dependencies -->\n      <dependency>\n        <groupId>org.jspecify</groupId>\n        <artifactId>jspecify</artifactId>\n        <version>${jspecify.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>com.google.errorprone</groupId>\n        <artifactId>error_prone_annotations</artifactId>\n        <version>${errorprone.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>com.google.auto.value</groupId>\n        <artifactId>auto-value-annotations</artifactId>\n        <version>${auto-value.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>com.google.auto.service</groupId>\n        <artifactId>auto-service-annotations</artifactId>\n        <version>${auto-service.version}</version>\n      </dependency>\n\n      <!-- Test dependencies -->\n      <dependency>\n        <groupId>junit</groupId>\n        <artifactId>junit</artifactId>\n        <version>4.13.2</version>\n        <scope>test</scope>\n      </dependency>\n      <dependency>\n        <groupId>com.google.guava</groupId>\n        <artifactId>guava-testlib</artifactId>\n        <version>${guava.version}</version>\n        <scope>test</scope>\n      </dependency>\n      <dependency>\n        <groupId>com.google.truth</groupId>\n        <artifactId>truth</artifactId>\n        <version>${truth.version}</version>\n        <scope>test</scope>\n      </dependency>\n      <dependency>\n        <groupId>com.google.truth.extensions</groupId>\n        <artifactId>truth-java8-extension</artifactId>\n        <version>${truth.version}</version>\n        <scope>test</scope>\n      </dependency>\n    </dependencies>\n  </dependencyManagement>\n\n  <build>\n    <pluginManagement>\n      <plugins>\n        <plugin>\n          <artifactId>maven-compiler-plugin</artifactId>\n          <version>3.9.0</version>\n        </plugin>\n        <plugin>\n          <artifactId>maven-jar-plugin</artifactId>\n          <version>3.2.2</version>\n        </plugin>\n        <plugin>\n          <artifactId>maven-source-plugin</artifactId>\n          <version>3.2.1</version>\n        </plugin>\n        <plugin>\n          <artifactId>maven-javadoc-plugin</artifactId>\n          <version>${maven-javadoc-plugin.version}</version>\n        </plugin>\n        <plugin>\n          <artifactId>maven-gpg-plugin</artifactId>\n          <version>3.0.1</version>\n        </plugin>\n        <plugin>\n          <groupId>org.apache.felix</groupId>\n          <artifactId>maven-bundle-plugin</artifactId>\n          <version>5.1.4</version>\n        </plugin>\n      </plugins>\n    </pluginManagement>\n\n    <plugins>\n      <plugin>\n        <artifactId>maven-compiler-plugin</artifactId>\n        <configuration>\n          <source>${java.version}</source>\n          <target>${java.version}</target>\n          <encoding>UTF-8</encoding>\n          <compilerArgs>\n            <!-- compile-time arguments for google-java-format -->\n            <arg>-XDcompilePolicy=simple</arg>\n            <arg>--should-stop=ifError=FLOW</arg>\n            <arg>-Xplugin:ErrorProne</arg>\n            <arg>--add-exports=jdk.compiler/com.sun.tools.javac.api=ALL-UNNAMED</arg>\n            <arg>--add-exports=jdk.compiler/com.sun.tools.javac.code=ALL-UNNAMED</arg>\n            <arg>--add-exports=jdk.compiler/com.sun.tools.javac.file=ALL-UNNAMED</arg>\n            <arg>--add-exports=jdk.compiler/com.sun.tools.javac.main=ALL-UNNAMED</arg>\n            <arg>--add-exports=jdk.compiler/com.sun.tools.javac.parser=ALL-UNNAMED</arg>\n            <arg>--add-exports=jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED</arg>\n            <arg>--add-exports=jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED</arg>\n          </compilerArgs>\n          <annotationProcessorPaths>\n            <path>\n              <groupId>com.google.errorprone</groupId>\n              <artifactId>error_prone_core</artifactId>\n              <version>${errorprone.version}</version>\n            </path>\n            <path>\n              <groupId>com.google.auto.value</groupId>\n              <artifactId>auto-value</artifactId>\n              <version>${auto-value.version}</version>\n            </path>\n            <path>\n              <groupId>com.google.auto.service</groupId>\n              <artifactId>auto-service</artifactId>\n              <version>${auto-service.version}</version>\n            </path>\n          </annotationProcessorPaths>\n        </configuration>\n      </plugin>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-jar-plugin</artifactId>\n        <configuration>\n          <archive>\n            <manifest>\n              <mainClass>com.google.googlejavaformat.java.Main</mainClass>\n            </manifest>\n            <manifestEntries>\n              <Add-Exports><!--\n                -->jdk.compiler/com.sun.tools.javac.api <!--\n                -->jdk.compiler/com.sun.tools.javac.code <!--\n                -->jdk.compiler/com.sun.tools.javac.file <!--\n                -->jdk.compiler/com.sun.tools.javac.parser <!--\n                -->jdk.compiler/com.sun.tools.javac.tree <!--\n                -->jdk.compiler/com.sun.tools.javac.util<!--\n              --></Add-Exports>\n            </manifestEntries>\n          </archive>\n        </configuration>\n      </plugin>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-source-plugin</artifactId>\n        <executions>\n          <execution>\n            <id>attach-sources</id>\n            <goals>\n              <goal>jar</goal>\n            </goals>\n          </execution>\n        </executions>\n      </plugin>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-javadoc-plugin</artifactId>\n        <version>${maven-javadoc-plugin.version}</version>\n        <configuration>\n          <doclint>none</doclint>\n        </configuration>\n        <executions>\n          <execution>\n          <id>attach-javadocs</id>\n            <goals>\n              <goal>jar</goal>\n            </goals>\n          </execution>\n        </executions>\n      </plugin>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-surefire-plugin</artifactId>\n        <version>2.22.2</version>\n        <configuration>\n          <!-- set heap size to work around http://github.com/travis-ci/travis-ci/issues/3396 -->\n          <argLine>\n            -Xmx1024m\n            --add-exports=jdk.compiler/com.sun.tools.javac.api=ALL-UNNAMED\n            --add-exports=jdk.compiler/com.sun.tools.javac.file=ALL-UNNAMED\n            --add-exports=jdk.compiler/com.sun.tools.javac.main=ALL-UNNAMED\n            --add-exports=jdk.compiler/com.sun.tools.javac.model=ALL-UNNAMED\n            --add-exports=jdk.compiler/com.sun.tools.javac.parser=ALL-UNNAMED\n            --add-exports=jdk.compiler/com.sun.tools.javac.processing=ALL-UNNAMED\n            --add-exports=jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED\n            --add-exports=jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED\n            --add-opens=jdk.compiler/com.sun.tools.javac.code=ALL-UNNAMED\n            --add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED\n          </argLine>\n        </configuration>\n      </plugin>\n    </plugins>\n  </build>\n\n  <distributionManagement>\n    <snapshotRepository>\n      <id>sonatype-nexus-snapshots</id>\n      <name>Sonatype Nexus Snapshots</name>\n      <url>https://oss.sonatype.org/content/repositories/snapshots/</url>\n    </snapshotRepository>\n    <repository>\n      <id>sonatype-nexus-staging</id>\n      <name>Nexus Release Repository</name>\n      <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>\n    </repository>\n  </distributionManagement>\n\n  <profiles>\n    <profile>\n      <id>sonatype-oss-release</id>\n      <build>\n        <plugins>\n          <plugin>\n            <groupId>org.apache.maven.plugins</groupId>\n            <artifactId>maven-source-plugin</artifactId>\n            <version>${maven-source-plugin.version}</version>\n            <executions>\n              <execution>\n                <id>attach-sources</id>\n                <goals>\n                  <goal>jar-no-fork</goal>\n                </goals>\n              </execution>\n            </executions>\n          </plugin>\n          <plugin>\n            <groupId>org.apache.maven.plugins</groupId>\n            <artifactId>maven-javadoc-plugin</artifactId>\n            <version>${maven-javadoc-plugin.version}</version>\n            <executions>\n              <execution>\n                <id>attach-javadocs</id>\n                <goals>\n                  <goal>jar</goal>\n                </goals>\n              </execution>\n            </executions>\n          </plugin>\n          <plugin>\n            <groupId>org.apache.maven.plugins</groupId>\n            <artifactId>maven-gpg-plugin</artifactId>\n            <version>3.0.1</version>\n            <executions>\n              <execution>\n                <id>sign-artifacts</id>\n                <phase>verify</phase>\n                <goals>\n                  <goal>sign</goal>\n                </goals>\n              </execution>\n            </executions>\n          </plugin>\n        </plugins>\n      </build>\n    </profile>\n    <profile>\n      <id>eclipse</id>\n      <activation>\n        <jdk>[17,)</jdk>\n      </activation>\n      <modules>\n        <module>eclipse_plugin</module>\n      </modules>\n    </profile>\n  </profiles>\n</project>\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "util",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}