{
  "metadata": {
    "timestamp": 1736708799071,
    "page": 307,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "evant/gradle-retrolambda",
      "stars": 5294,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0419921875,
          "content": ".gradle\n.idea\n*.iml\nbuild/\nlocal.properties"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 8.4599609375,
          "content": "#### 3.7.1\n 2019-04-21\n- Support gradle 5.0+\n\n#### 3.7.0\n_2017-07-23_\n- Support android gradle plugin 3.0\n- Support android feature modules\n\n#### 3.6.1\n_2017-04-22_\n- Support Android Gradle Plugin 2.5\n\n#### 3.6.0\n_2017-03-02_\n- *Deprecated* oldJdk (and reading from JAVA6/JAVA7_HOME).\n- *Deprecated* running gradle with java 6 or 7.\n- Fixed incremental build sometimes leaving deleted classes (madisp)\n- No longer fail if old jdk is not defined. Instead run with the current jdk.\n- Bumped default retrolambda version to `2.5.1`\n\n#### 3.5.0\n_2017-01-23_\n- Don't disable extractAnnotation task on android libs as it now supports java 8 sources.\n- Bumped default retrolambda version to `2.5.0`\n\n#### 3.4.0\n_2016-11-19_\n- Support build dirs with custom names\n- Support com.android.test modules\n\n#### 3.3.1\n_2016-10-19_\n- Fixed retrolambda classpath when running and android test with multiple flavors.\n\n#### 3.3.0\n_2016-09-08_\n- Fixed certain cases where android tests would fail to compile because wrong classpath was used.\n- Bumped default retrolambda version to `2.3.0`\n\n#### 3.3.0-beta4\n_2016-02-05_\n- Merged in all changes up to `3.2.5`\n- Supports running with other transforms (this is a bit hackey, hopefully we'll get per-variant\ntransforms and it can be implemented far more cleanly).\n\n#### 3.3.0-beta3\n_2015-11-18_\n- Supports transform api in android plugin `1.5.0`\n\n#### 3.3.0-beta2\n_2015-10-03_\nExperimental support for the new transform api\n- Requires android plugin `1.4.0-beta4`\n\nhttp://tools.android.com/tech-docs/new-build-system/transform-api\n\n- Transform api used in library projects.\n- Prints retrolambda output to log level --info\nknown issues:\n- include/exclude are ignored\n\n#### 3.3.0-beta1\n_2015-09-15_\nExperimental support for the new transform api\n- Requires android plugin `1.4.0-beta2`\n\nhttp://tools.android.com/tech-docs/new-build-system/transform-api\n\nknown issues:\n- Include/exclude are ignored.\n- Does not work in library projects (falls back to the old method).\n- Prints retrolambda output to stdout instead of log level --info.\n\n#### 3.2.5\n_2016-02-04_\n- Bumped default retrolambda version to `2.1.0`\n- If the commandline parameters are over a certain limit, they will be written to files. This should\nprevent failures on projects with large classpaths or when a huge number of incremental changes\nhappen.\n\n#### 3.2.4\n_2015-11-18_\n- Bumped default retrolambda version to `2.0.6`.\n\n#### 3.2.3\n_2015-09-20_\n- Fixed long builds times on large projects due to https://issues.gradle.org/browse/GRADLE-3283.\nNote: Running the retrolambda task directly will no longer work, you must run the relevant java\ncompile task instead.\n\n#### 3.2.2\n_2015-08-17_\n- Fixed wrongly deleting lambda classes where the related class is a prefix of the one that actually\nchanged during incremental compilation. (thanks clemp6r!)\n\n#### 3.2.1\n_2015-08-10_\n- Fixed unit tests on android gradle plugin `1.3.0`.\n- Bumped default retrolambda version to `2.0.5`.\n\n#### 3.2.0\n_2015-06-27_\n- Support for targeting java 5 with retrolambda.\n- Don't depend on the android gradle plugin being on the classpath when using in pure java projects.\n- Delay calculating classpath for retrolambda. This fixes missing aar libs added by the android \ngradle plugin.\n\n#### 3.1.0\n_2015-05-02_\n- Major refactoring of android plugin.\nThe method for modifying the javaCompile task is now *way* less hackey. In fact,\nit is much closer to the original way that it was done. I had originally\nabandoned this approach because it was breaking increment compilation is some\nweird ways. However, I think I have solved it.\n\nWhat this means for you: It is now less fickle of plugin application order and\nway less likely to break other plugins.\n- Properly split bootclasspath if it has multiple paths\n\n#### 3.0.1\n_2015-04-05_\n- Fixed occasional \"Build exception: cannot call Task.setEnabled(boolean)\" error.\n- Fixed minor warning typo.\n- Uploaded to the gradle plugin portal.\n\n#### 3.0.0\n_2015-03-30_\nA whole bunch of changes!\n- Changed the default retrolambda to 2.0.0\n- Added support for default methods, add `defaultMethods true` to the retrolambda block. Note: due\n  to a current limitation in retrolamba, this will require all of your class files to be fed through\n  retrolambda on each build. This may adversely affect build times.\n- `incremental false` is no longer deprecated but has different semantics. Instead of being a hack\n  around gradle-retrolambda breaking other plugins, it now only forces all of your class files to be\n  run through retrolambda instead of only the changed ones.\n- Added support for android unit tests, including lambdas in the tests themselves.\n- No longer patch the android jar, modify the classpath instead. This should resolve issues with\n  using gradle-retrolambda with more obscure android sdks, like google glass. This should also speed\n  up a clean build since it doesn't have to do any zipping shenanigans.\n- Ensure the gradle plugin is compiled with java 6 compatibility. This should allow you to run\n  gradle with an older version of java if you don't want java 8 set as the default. This was always\n  the intention, but was broken in the last build.\n- More minor changes to how the java compile task is replaced, this should ensure better\n  compatibility with other plugins. Note: these changes make the plugin application order more\n  important. *Make sure you you apply this plugin last.*\n- Removed 'retrolambda', now you can only apply the plugin with 'me.tatarka.retrolambda'.\n\n#### 2.5.0\n_2014-12-14_\n- A more robust fix for android-apt compatibility. Important: If you were experiencing issues with\nandroid-apt previously and updated to this version, you must run `gradle build --rerun-tasks` once.\n- Deprecate plugin name 'retrolambda' for 'me.tatarka.retrolambda' in preparation to publishing on\nthe gradle plugin portal.\n\n#### 2.4.1\n_2014-11-01_\n- Fixed compatibility with android-apt.\n- Fixed typo in one of the thrown exceptions. (tomxor)\n- Support groovy testing (ex. spock). (harningt)\n\n#### 2.4.0\n_2014-09-21_\n- Better incremental compile method that doesn't break lint and proguard (and\n  probably other tasks). Because of this, `retrolambda.incremental` is deprecated\n  and does nothing.\n- Better handling of manually setting the retrolamba version with\n  `retrolambConfig`.\n- Don't use the retrolambda javaagent if using version `1.6.0+`.\n- Set the default retrolambda version to `1.6.0`.\n\n#### 2.3.1\n_2014-09-18_\n- Fixed `retrolambda.incremental false` causing the retrolambda task not to run.\n\n#### 2.3.0\n_2014-09-17_\n- Add ability to set `retrolambda.incremental false` to disable incremental compilation, since it is\n  incompatible with android lint/proguard.\n\n#### 2.2.3\n_2014-08-17_\n- Change dependency back to `localGroovy()`, `org.codehaus.groovy:groovy-all:2.3.3` was causing\n  issues.\n\n#### 2.2.2\n_2014-08-11_\n- Support a `java.home` path that does not end in `/jre`, by using it as it is.\nThis is an issue on OSX which may have a different directory structure.\n\n#### 2.2.1\n_2014-08-03_\n- Ensure output directory is created even if the source set is missing files for the java plugin.\nOtherwise, compiling the source set would error out.\n\n#### 2.2.0\n_2014-07-26_\n- Added way to add custom jvm arguments when running retrolambda.\n- Disable `extractAnnotations` tasks since they are incompatible with java 8 sources.\n\n#### 2.1.0\n_2014-07-14_\n- Also check system property 'java.home' for the current java location. IDEs set this but not\n  JAVA_HOME, so checking here first is more robust. (aphexcx)\n\n#### 2.0.0\n_2014-07-04_\n- Hooks into gradle's incremental compilcation support. This should mean faster build times and less\n  inconsistencies when changing the build script without running `clean`. To fully take advantage of\n  this you need to use retrolambda `1.4.0+` which is now the default.\n\n#### 1.3.3\n_2014-06-23_\n- Allow `retrolamba` plugin to be applied before or after `java` and `android`\n  plugins\n\n#### 1.3.2\n_2014-05-02_\n- Fixed for android gradle plugin `0.10.+`\n\n#### 1.3.1\n_014-03-29_\n- Removed `compile` property, which didn't work anyway. Use `retrolambdaConfig`\n  instead.\n- Minor error message improvement.\n\n#### 1.3.0\n_2014-03-02_\n- Support android instrument tests.\n\n#### 1.2.0\n_2014-02-15_\n- Support android-library projects.\n\n#### 1.1.1\n_2014-01-28_\n- Fixed not correctly finding java 8 executable when running from java 6 or 7 on\n  windows. (Mart-Bogdan)\n\n#### 1.1\n_2014-01-24_\n- Fixed bug where java unit tests were not being run through retrolambda\n- Allow gradle to be called with java 6 or 7, i.e. Java 8 no longer has to be\n  your default java.\n- Thank you Mart-Bogdan for starting these fixes.\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 11.0810546875,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [2013] [Evan Tatarka]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.3740234375,
          "content": "Gradle Retrolambda Plugin\n========================\n\n[![Maven Central](https://maven-badges.herokuapp.com/maven-central/me.tatarka/gradle-retrolambda/badge.svg?style=flat)](https://maven-badges.herokuapp.com/maven-central/me.tatarka/gradle-retrolambda)\n\nThis plugin will automatically build your java or *android* project with\nretrolambda, giving you lambda goodness on java 6 or 7. It relies on the\nwonderful [retrolambda](https://github.com/orfjackal/retrolambda) by Esko\nLuontola.\n\nNote: The minimum android gradle plugin is `1.5.0` and the minimum gradle plugin is `2.5`.\n\nUsage\n----\n\n1. Download [jdk8](http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html) and set it as your default.\n\n2. Add the following to your build.gradle\n\n   ```groovy\n   buildscript {\n      repositories {\n         mavenCentral()\n      }\n\n      dependencies {\n         classpath 'me.tatarka:gradle-retrolambda:3.7.1'\n      }\n   }\n\n   // Required because retrolambda is on maven central\n   repositories {\n      mavenCentral()\n   }\n\n   apply plugin: 'com.android.application' //or apply plugin: 'java'\n   apply plugin: 'me.tatarka.retrolambda'\n   ```\n   alternatively, you can use the new plugin syntax for gradle `2.1+`\n   ```groovy\n   plugins {\n      id \"me.tatarka.retrolambda\" version \"3.7.1\"\n   }\n   ```\n\n3. There is no step three!\n\nThe plugin will compile the source code with java8 and then replace the class\nfiles with the output of retrolambda.\n\nConfiguration\n-------------\nYou can add a block like the following to configure the plugin:\n```groovy\nretrolambda {\n  javaVersion JavaVersion.VERSION_1_6\n  jvmArgs '-arg1', '-arg2'\n  defaultMethods false\n  incremental true\n}\n```\n\n- `javaVersion` Set the java version to compile to. The default is 6. Only 5, 6 or 7 are accepted.\n- `include 'Debug', 'Release'` Sets which sets/variants to run through\n    retrolambda. The default is all of them.\n- `exclude 'Test'` Sets which sets/variants to not run through retrolambda. Only\n    one of either `include` or `exclude` should be defined.\n- `jvmArgs` Add additional jvm args when running retrolambda.\n- `defaultMethods` Turn on default and static methods in interfaces support. Note: due to a\n   limitation in retrolamba, this will set `incremental` to false. The default is false.\n- `incremental` Setting this to false forces all of your class files to be run through retrolambda\n   instead of only the ones that have changed. The default is true.\n\n### Using a Different Version of the retrolambda.jar\n\nThe default version of retrolambda used is\n`'net.orfjackal.retrolambda:retrolambda:2.5.6'`. If you want to use a different\none, you can configure it in your dependencies.\n\n```groovy\ndependencies {\n  // Latest one on maven central\n  retrolambdaConfig 'net.orfjackal.retrolambda:retrolambda:+'\n  // Or a local version\n  // retrolambdaConfig files('libs/retrolambda.jar')\n}\n```\n\n### Deprecated Features\n\nIf you are running with java 6 or 7 you should really consider updating. However, you may use the\nbelow configuration instead.\n\nSet the environment variable `JAVA8_HOME` to point to the java 8 jdk. Alternatively, you can set the\n`jdk` property.\n```groovy\nretrolambda {\n  jdk System.getenv(\"JAVA8_HOME\")\n}\n```\n\nYou can force unit tests to be run with an older version of java by setting\n `JAVA5_HOME`/`JAVA6_HOME`/`JAVA7_HOME` or with the `oldJdk` property.\n```groovy\nretrolambda {\n  oldJdk System.getenv(\"JAVA6_HOME\")\n}\n```\n\nAndroid Studio Setup\n--------------------\nAdd these lines to your `build.gradle` to inform the IDE of the language level.\n\n```groovy\nandroid {\n  compileOptions {\n    sourceCompatibility JavaVersion.VERSION_1_8\n    targetCompatibility JavaVersion.VERSION_1_8\n  }\n}\n```\n\nProguard\n----------\nThis plugin is fully compatible with proguard (since `v2.4.0`). In your proguard file, add\n```\n-dontwarn java.lang.invoke.*\n-dontwarn **$$Lambda$*\n```\n\nKnown Issues\n---------------\n### Lint fails on java files that have lambdas.\nFirst try updating to the latest version of the android gradle plugin. Newer versions of lint are\ncompatible with java 8 sources. If you can't for some reason, you can still use the\n[experimental fork](https://github.com/evant/android-retrolambda-lombok) to fix the issue.\n\n### Using Google Play Services causes retrolambda to fail\nVersion `5.0.77` contains bytecode that is incompatible with retrolambda. This should be fixed in\nnewer versions of play services, if you can update, that should be the preferred solution. To work\naround this issue, you can either use an earlier version like `4.4.52` or add `-noverify` to the jvm\nargs. See [orfjackal/retrolambda#25](https://github.com/orfjackal/retrolambda/issues/25) for more\ninformation.\n\n```groovy\nretrolambda {\n  jvmArgs '-noverify'\n}\n```\n\nUpdates\n-------\nAll updates have moved to the [CHANGELOG](https://github.com/evant/gradle-retrolambda/blob/master/CHANGELOG.md).\n\nLicense\n-------\n\n    Copyright 2013 Evan Tatarka\n    \n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n    \n       http://www.apache.org/licenses/LICENSE-2.0\n    \n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n"
        },
        {
          "name": "build.gradle",
          "type": "blob",
          "size": 0.53125,
          "content": "allprojects {\n    group = project.property('group')\n    version = project.property('version')\n    ext.androidPluginVersion = project.property('androidPluginVersion')\n}\n\ntask test {\n    dependsOn gradle.includedBuild('gradle-retrolambda').task(':test')\n}\n\ntask install {\n    dependsOn gradle.includedBuild('gradle-retrolambda').task(':install')\n}\n\ntask publish {\n    dependsOn gradle.includedBuild('gradle-retrolambda').task(':publish')\n}\n\ntask publishPlugins {\n    dependsOn gradle.includedBuild('gradle-retrolambda').task(':publishPlugins')\n}\n"
        },
        {
          "name": "gradle-retrolambda",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradle.properties",
          "type": "blob",
          "size": 0.078125,
          "content": "group = me.tatarka\nversion = 3.7.1\nandroidPluginVersion = 3.4.0\nuseAlpha = true\n"
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 5.77734375,
          "content": "#!/usr/bin/env sh\n\n#\n# Copyright 2015 the original author or authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\n##############################################################################\n##\n##  Gradle start up script for UN*X\n##\n##############################################################################\n\n# Attempt to set APP_HOME\n# Resolve links: $0 may be a link\nPRG=\"$0\"\n# Need this for relative symlinks.\nwhile [ -h \"$PRG\" ] ; do\n    ls=`ls -ld \"$PRG\"`\n    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n    if expr \"$link\" : '/.*' > /dev/null; then\n        PRG=\"$link\"\n    else\n        PRG=`dirname \"$PRG\"`\"/$link\"\n    fi\ndone\nSAVED=\"`pwd`\"\ncd \"`dirname \\\"$PRG\\\"`/\" >/dev/null\nAPP_HOME=\"`pwd -P`\"\ncd \"$SAVED\" >/dev/null\n\nAPP_NAME=\"Gradle\"\nAPP_BASE_NAME=`basename \"$0\"`\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS='\"-Xmx64m\" \"-Xms64m\"'\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=\"maximum\"\n\nwarn () {\n    echo \"$*\"\n}\n\ndie () {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n}\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\nnonstop=false\ncase \"`uname`\" in\n  CYGWIN* )\n    cygwin=true\n    ;;\n  Darwin* )\n    darwin=true\n    ;;\n  MINGW* )\n    msys=true\n    ;;\n  NONSTOP* )\n    nonstop=true\n    ;;\nesac\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n    else\n        JAVACMD=\"$JAVA_HOME/bin/java\"\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=\"java\"\n    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\nfi\n\n# Increase the maximum file descriptors if we can.\nif [ \"$cygwin\" = \"false\" -a \"$darwin\" = \"false\" -a \"$nonstop\" = \"false\" ] ; then\n    MAX_FD_LIMIT=`ulimit -H -n`\n    if [ $? -eq 0 ] ; then\n        if [ \"$MAX_FD\" = \"maximum\" -o \"$MAX_FD\" = \"max\" ] ; then\n            MAX_FD=\"$MAX_FD_LIMIT\"\n        fi\n        ulimit -n $MAX_FD\n        if [ $? -ne 0 ] ; then\n            warn \"Could not set maximum file descriptor limit: $MAX_FD\"\n        fi\n    else\n        warn \"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\"\n    fi\nfi\n\n# For Darwin, add options to specify how the application appears in the dock\nif $darwin; then\n    GRADLE_OPTS=\"$GRADLE_OPTS \\\"-Xdock:name=$APP_NAME\\\" \\\"-Xdock:icon=$APP_HOME/media/gradle.icns\\\"\"\nfi\n\n# For Cygwin, switch paths to Windows format before running java\nif $cygwin ; then\n    APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`\n    CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`\n    JAVACMD=`cygpath --unix \"$JAVACMD\"`\n\n    # We build the pattern for arguments to be converted via cygpath\n    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`\n    SEP=\"\"\n    for dir in $ROOTDIRSRAW ; do\n        ROOTDIRS=\"$ROOTDIRS$SEP$dir\"\n        SEP=\"|\"\n    done\n    OURCYGPATTERN=\"(^($ROOTDIRS))\"\n    # Add a user-defined pattern to the cygpath arguments\n    if [ \"$GRADLE_CYGPATTERN\" != \"\" ] ; then\n        OURCYGPATTERN=\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\"\n    fi\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    i=0\n    for arg in \"$@\" ; do\n        CHECK=`echo \"$arg\"|egrep -c \"$OURCYGPATTERN\" -`\n        CHECK2=`echo \"$arg\"|egrep -c \"^-\"`                                 ### Determine if an option\n\n        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition\n            eval `echo args$i`=`cygpath --path --ignore --mixed \"$arg\"`\n        else\n            eval `echo args$i`=\"\\\"$arg\\\"\"\n        fi\n        i=$((i+1))\n    done\n    case $i in\n        (0) set -- ;;\n        (1) set -- \"$args0\" ;;\n        (2) set -- \"$args0\" \"$args1\" ;;\n        (3) set -- \"$args0\" \"$args1\" \"$args2\" ;;\n        (4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;\n        (5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;\n        (6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;\n        (7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;\n        (8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;\n        (9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;\n    esac\nfi\n\n# Escape application args\nsave () {\n    for i do printf %s\\\\n \"$i\" | sed \"s/'/'\\\\\\\\''/g;1s/^/'/;\\$s/\\$/' \\\\\\\\/\" ; done\n    echo \" \"\n}\nAPP_ARGS=$(save \"$@\")\n\n# Collect all arguments for the java command, following the shell quoting and substitution rules\neval set -- $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS \"\\\"-Dorg.gradle.appname=$APP_BASE_NAME\\\"\" -classpath \"\\\"$CLASSPATH\\\"\" org.gradle.wrapper.GradleWrapperMain \"$APP_ARGS\"\n\n# by default we should be in the correct project dir, but when run from Finder on Mac, the cwd is wrong\nif [ \"$(uname)\" = \"Darwin\" ] && [ \"$HOME\" = \"$PWD\" ]; then\n  cd \"$(dirname \"$0\")\"\nfi\n\nexec \"$JAVACMD\" \"$@\"\n"
        },
        {
          "name": "gradlew.bat",
          "type": "blob",
          "size": 2.8720703125,
          "content": "@rem\r\n@rem Copyright 2015 the original author or authors.\r\n@rem\r\n@rem Licensed under the Apache License, Version 2.0 (the \"License\");\r\n@rem you may not use this file except in compliance with the License.\r\n@rem You may obtain a copy of the License at\r\n@rem\r\n@rem      http://www.apache.org/licenses/LICENSE-2.0\r\n@rem\r\n@rem Unless required by applicable law or agreed to in writing, software\r\n@rem distributed under the License is distributed on an \"AS IS\" BASIS,\r\n@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n@rem See the License for the specific language governing permissions and\r\n@rem limitations under the License.\r\n@rem\r\n\r\n@if \"%DEBUG%\" == \"\" @echo off\r\n@rem ##########################################################################\r\n@rem\r\n@rem  Gradle startup script for Windows\r\n@rem\r\n@rem ##########################################################################\r\n\r\n@rem Set local scope for the variables with windows NT shell\r\nif \"%OS%\"==\"Windows_NT\" setlocal\r\n\r\nset DIRNAME=%~dp0\r\nif \"%DIRNAME%\" == \"\" set DIRNAME=.\r\nset APP_BASE_NAME=%~n0\r\nset APP_HOME=%DIRNAME%\r\n\r\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\r\nset DEFAULT_JVM_OPTS=\"-Xmx64m\" \"-Xms64m\"\r\n\r\n@rem Find java.exe\r\nif defined JAVA_HOME goto findJavaFromJavaHome\r\n\r\nset JAVA_EXE=java.exe\r\n%JAVA_EXE% -version >NUL 2>&1\r\nif \"%ERRORLEVEL%\" == \"0\" goto init\r\n\r\necho.\r\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\r\necho.\r\necho Please set the JAVA_HOME variable in your environment to match the\r\necho location of your Java installation.\r\n\r\ngoto fail\r\n\r\n:findJavaFromJavaHome\r\nset JAVA_HOME=%JAVA_HOME:\"=%\r\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\r\n\r\nif exist \"%JAVA_EXE%\" goto init\r\n\r\necho.\r\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\r\necho.\r\necho Please set the JAVA_HOME variable in your environment to match the\r\necho location of your Java installation.\r\n\r\ngoto fail\r\n\r\n:init\r\n@rem Get command-line arguments, handling Windows variants\r\n\r\nif not \"%OS%\" == \"Windows_NT\" goto win9xME_args\r\n\r\n:win9xME_args\r\n@rem Slurp the command line arguments.\r\nset CMD_LINE_ARGS=\r\nset _SKIP=2\r\n\r\n:win9xME_args_slurp\r\nif \"x%~1\" == \"x\" goto execute\r\n\r\nset CMD_LINE_ARGS=%*\r\n\r\n:execute\r\n@rem Setup the command line\r\n\r\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\r\n\r\n@rem Execute Gradle\r\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%\r\n\r\n:end\r\n@rem End local scope for the variables with windows NT shell\r\nif \"%ERRORLEVEL%\"==\"0\" goto mainEnd\r\n\r\n:fail\r\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\r\nrem the _cmd.exe /c_ return code!\r\nif  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1\r\nexit /b 1\r\n\r\n:mainEnd\r\nif \"%OS%\"==\"Windows_NT\" endlocal\r\n\r\n:omega\r\n"
        },
        {
          "name": "sample-android-app",
          "type": "tree",
          "content": null
        },
        {
          "name": "sample-android-feature",
          "type": "tree",
          "content": null
        },
        {
          "name": "sample-android-lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "sample-android-test",
          "type": "tree",
          "content": null
        },
        {
          "name": "sample-java-default-methods",
          "type": "tree",
          "content": null
        },
        {
          "name": "sample-java",
          "type": "tree",
          "content": null
        },
        {
          "name": "settings.gradle",
          "type": "blob",
          "size": 0.271484375,
          "content": "rootProject.name = 'gradle-retrolambda-project'\n\ninclude ':sample-java',\n        ':sample-java-default-methods',\n        ':sample-android-app',\n        ':sample-android-lib',\n        ':sample-android-feature',\n        ':sample-android-test'\n\nincludeBuild './gradle-retrolambda'\n"
        },
        {
          "name": "test.sh",
          "type": "blob",
          "size": 0.2822265625,
          "content": "#!/bin/sh\n# A simple script to run tests both under java 7 and java 8.\n# JAVA7_HOME and JAVA8_HOME environment variables must be set.\n\ncd ./gradle-retrolambda\necho JAVA_HOME=$JAVA8_HOME\nJAVA_HOME=$JAVA8_HOME ../gradlew test\necho JAVA_HOME=$JAVA7_HOME\nJAVA_HOME=$JAVA7_HOME ../gradlew test\n"
        }
      ]
    }
  ]
}