{
  "metadata": {
    "timestamp": 1736708751326,
    "page": 220,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "prolificinteractive/material-calendarview",
      "stars": 5919,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.2265625,
          "content": ".gradle\n/local.properties\n/.idea/workspace.xml\n/.idea/libraries\n.DS_Store\n/build\n\n### JetBrains template\n# Covers JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm\n\n*.iml\n\n## Directory-based project format:\n.idea/\n# if you remove the above rule, at least ignore the following:\n\n# User-specific stuff:\n# .idea/workspace.xml\n# .idea/tasks.xml\n# .idea/dictionaries\n\n# Sensitive or high-churn files:\n# .idea/dataSources.ids\n# .idea/dataSources.xml\n# .idea/sqlDataSources.xml\n# .idea/dynamic.xml\n# .idea/uiDesigner.xml\n\n# Gradle:\n# .idea/gradle.xml\n# .idea/libraries\n\n# Mongo Explorer plugin:\n# .idea/mongoSettings.xml\n\n## File-based project format:\n*.ipr\n*.iws\n\n## Plugin-specific files:\n\n# IntelliJ\nout/\n\n# mpeltonen/sbt-idea plugin\n.idea_modules/\n\n# JIRA plugin\natlassian-ide-plugin.xml\n\n# Crashlytics plugin (for Android Studio and IntelliJ)\ncom_crashlytics_export_strings.xml\ncrashlytics.properties\ncrashlytics-build.properties\n\n\n### Android template\n# Built application files\n*.apk\n*.ap_\n\n# Files for the Dalvik VM\n*.dex\n\n# Java class files\n*.class\n\n# Generated files\nbin/\ngen/\n\n# Gradle files\n.gradle/\nbuild/\n\n# Local configuration file (sdk path, etc)\nlocal.properties\n\n# Proguard folder generated by Eclipse\nproguard/\n\n# Log Files\n*.log\n\n\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.33984375,
          "content": "language: android\n\njdk:\n - oraclejdk8\n\nandroid:\n  components:\n    - tools\n    - platform-tools\n    - build-tools-28.0.3\n    - android-28\n    - extra-android-m2repository\n    - extra-google-m2repository\n\nscript:\n  - ./gradlew clean check assemble -Dpre-dex=false\n\nnotifications:\n  email: false\n\nsudo: false\n\ncache:\n  directories:\n    - $HOME/.gradle"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 9.1865234375,
          "content": "Change Log\n==========\n\nVersion 2.0.0 *(2018-09-07)*\n----------------------------\n* New: Changed `java.util.Calendar` in favor of `java.time.LocalDate`.\n* New: Api naming for setting the arrows drawable: `setLeftArrow` and `setRightArrow`\n* Fix: Range selection ordering & Issues\n* Fix: Timezone Issues\n* Fix: Now the Month is indexed from 1 to 12 (previously 0-11 due to `java.util` api)\n* Fix: RTL Support\n* Fix: Remove Restored XML Parameters\n* Code Style Reformat\n* Replaced arrows pngs with vectors\n  \nVersion 1.6.1 *(2018-07-23)*\n----------------------------\n* New: A new xml parameter for choosing selection mode `app:mcv_selectionMode=\"single\"` with the possible values being none, single, multiple and range. Default mode is still single.\n* Fix: Issue with weekdays not being shown after rotation changes.\n\nVersion 1.6.0 *(2018-07-06)*\n----------------------------\n* New: Added api for setting long click listener for cells using `void setOnDateLongClickListener(OnDateLongClickListener longClickListener)`.\n* New: Show and Hide WeekDays row in xml and Programmatically.\n* New: Added api for setting content description formatter `void setDayFormatterContentDescription(DayFormatter formatter)`.\n* New: Apply custom fonts through text appearance styling.\n* Fix: Talkback improvements.\n* Fix: Range mode selection issues.\n\nVersion 1.5.0 *(2018-05-15)*\n----------------------------\n* Update: Dependency has now been migrated to Jitpack. Refer to the installation section to install the latest using gradle.\n* Update: Gradle has been updated to the latest.\n\nVersion 1.4.3 *(2017-02-21)*\n----------------------------\n* New: Added set click listener method for title\n* New: Added `setSaveCurrentPosition` builder method to use the current position when switching mode\n* Fix: Fixed title update when only year changed\n* Fix: Fixed decorator rendering with custom tile dimensions on API Level 21\n* Fix: Added missing `dynamicHeightEnabled` save in `onSaveInstanceState()`\n* Fix: If we used `match_parent` for the MaterialCalendarView but the size available is not enough, the view was truncated\n\nVersion 1.4.2 *(2016-10-10)*\n----------------------------\n* New: match_parent is now supported by tileSize, tileWidth and tileHeight\n* New: api for title animation orientation horizontal/vertical `setTitleAnimationOrientation`\n* Fix: Issue with custom arrow mask being overwritten when set in xml\n* Fix: Issue when clicking date outside of current year would trigger the wrong goToNext or goToPrevious method\n* Fix: WeekDayFormatter would overwritten first day of the week\n\nVersion 1.4.0 *(2016-06-01)*\n----------------------------\n* New: Add select range functionality. Use `setSelectionMode(MaterialCalendarView.SELECTION_MODE_RANGE)` and `setOnRangeSelectedListener`\n* Breaking Change: `setFirstDayOfWeek`, `setMin/MaxDate`, and `setCalendarDisplayMode` are moved to a `State` object. Call `mcv.state().edit()` to edit them and commit the changes with `commit`. See [CUSTOMIZATION_BUILDER](docs/CUSTOMIZATION_BUILDER.md) for usage details.\n* Change: Updated documentation regarding 1.3.0 additions\n* Fix: Current month and title pager updates correctly if minDate is set after the current month\n* Fix: Week number difference calculation correctly accounts for DST offsets. Thanks Igor Levaja!\n* Fix: Date formatter uses L instead of M for month (standalone instead of context sensitive)\n\nVersion 1.3.0 *(2016-05-16)*\n----------------------------\n\n* New: MCV `goToNext` and `goToPrevious` API to programmatically trigger paging\n* New: Allow users to click on dates outside of current month with `setAllowClickDaysOutsideCurrentMonth`\n* New: Set tile width/height separately rather than single tile size\n* New: Attributes: mcv_tileWidth, mcv_tileHeight, mcv_calendarMode\n* Change: `CalendarMode.WEEK` officially marked `@Experimental`, use with caution\n* Change: `getTileSize` is deprecated, use `getTileWidth` and `getTileHeight`. `setTileSize` still works as a convenience method to set width and height at the same time.\n* Fix: Issue with arrow not enabled when setting maxDate\n* Fix: Issue with number of pages not calculated correctly with maxDate causing last page to be unreachable\n* Fix: TalkBack content descriptions for pager view, forward/back arrows, and ability to set them manually\n* Fix: Crash while in Week mode when `CalendarPagerAdapter#getItemPosition` is called\n* Fix: Calendar Mode is retained on restore instance state\n* Fix: Min/Max date range is retained on restore instance state\n* Issue: Week mode - Restore instance state shows the previous week of the one that was saved\n* Issue: Week mode - Some combinations of first day of week, min/max date can cause the last week not to be pagable\n\nVersion 1.2.1 *(2016-05-05)*\n----------------------------\n\n* Fix: Scrolling for nested view pagers\n* Fix: Crash on switching Calendar modes with no days selected\n\nVersion 1.2.0 *(2016-01-24)*\n----------------------------\n\n* Fix: Disable paging also disables arrows\n* Fix: Allow paging from the entire width of the view\n* New: Dynamic Height, the calendar can now resize its height based on the currently visible month\n* New: Add single week calendar mode\n\nVersion 1.1.0 *(2015-10-19)*\n----------------------------\n\n* New: Ability to disable month swiping with `setPagingEnabled()`\n* Fix [#149](https://github.com/prolificinteractive/material-calendarview/issues/149):\n  save selected dates as a typed List instead of an array.\n* Change: Some performance optimizations\n\nVersion 1.0.1 *(2015-09-30)*\n----------------------------\n\n* Fix [#143](https://github.com/prolificinteractive/material-calendarview/issues/143):\n flag implementation for `showOtherDates` was a little weird and ambiguous. Clarified and added documentation.\n\nVersion 1.0.0 *(2015-09-30)*\n----------------------------\n\n* New: Added ability to select multiple dates or disable selection completely\n* Change: `OnDateChangedListener` has become `OnDateSelectedListener` with different functionality\n* Change: `showOtherDates` is now a integer flag for finer control over which days are shown\n* Change: `CalendarDay.toString()` no longer adds one to the month\n\nVersion 0.8.1 *(2015-08-28)*\n----------------------------\n\n* Fix: Setting the topbar to invisible didn't correctly resize the view\n* Change: Made `DayViewFacade` non final for unit test mocking\n\nVersion 0.8.0 *(2015-08-21)*\n----------------------------\n\n* Change: The view now responds better to layout parameters.\nThe functionality is similar to how `adjustViewBounds` works with ImageView,\nwhere the view will try and take up as much space as necessary,\nbut we base it on tile size instead of an aspect ratio.\nThe exception being that if a `tileSize` is set,\nthat will override everything and set the view to that size.\n* Fix: Use more efficient method for indexing months\n\nVersion 0.7.0 *(2015-07-09)*\n----------------------------\n\n* Fix: Being in certain timezones only showed the last week of the month\n* Fix: Decorating with a custom selection drawable now works correctly\n* Change: Now detect the first day of the week based off of Locale\n* New: You can now change the current month without animating using `setCurrentDate(day, false)`\n* Fix: Null pointer when trying to remove decorators when none have been added\n* Fix: Improve Javadoc\n\nVersion 0.6.1 *(2015-06-29)*\n----------------------------\n\n* Fix: Hidding top bar will no longer distort the calendar\n* Change: top bar visibility, first day of the week, and tile size are now saved during rotation\n\nVersion 0.6.0 *(2015-06-24)*\n----------------------------\n\n* New: DayViewDecorators now support disabling individual days\n* New: You can set custom masks for arrows\n* New: You can now set the top bar (arrows and title) as no visible\n\nVersion 0.5.0 *(2015-06-17)*\n----------------------------\n\n* Change: There are several factory methods on `CalendarDay` which should be used in place of the now deprecated constructors\n* Bugfix: You can now clear the selected date. Either by passing null or calling `clearSelection()`\n* New: You can now supply a custom `DayFormatter` to format day labels.\n\nVersion 0.4.0 *(2015-05-18)*\n----------------------------\n\n* Change: Revamp DayViewDecorators to be more efficent. See README for differences.\n\nVersion 0.3.2 *(2015-05-03)*\n----------------------------\n\n * New: Added ability to change the first day of the month\n * New: Added month change listener\n\nVersion 0.3.1 *(2015-04-23)*\n----------------------------\n\n * New: Added DayViewDecorator and DayViewFacade to allow for day decorating\n\nVersion 0.3.0 *(2015-04-15)*\n----------------------------\n\n * Change: Namespaced library resources. Everything is now prefixed with `mcv_`\n * New: Widget resizing is now possible by setting the tileSize\n     * Change: XML layouts are no longer used\n     * Change: Default tile size is now an integer resource\n\nVersion 0.2.5 *(2015-03-11)*\n----------------------------\n\n * New: Customize labels for weekdays and months\n\nVersion 0.2.4 *(2015-03-06)*\n----------------------------\n\n * Bugfix: Full fix issue that was supposed to be fixed in 0.2.2\n * Bugfix: Text didn't center on RTL apps, default the text alignment to center\n\nVersion 0.2.2 *(2015-02-26)*\n----------------------------\n\n * Bugfix: Using `Date` for setting anything in the library wasn't getting set correctly\n * New: Added `Date` variants for min and max setters\n\n\nVersion 0.2.1\n-------------\n\n * Start of ChangeLog\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0390625,
          "content": "Copyright (c) 2018 Prolific Interactive\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.5615234375,
          "content": "<img src=\"/images/hero.png\"/>\n\n# Material Calendar View \n[![Android Arsenal](https://img.shields.io/badge/Android%20Arsenal-Material%20Calendar%20View-blue.svg?style=flat)](https://android-arsenal.com/details/1/1531) [![](https://jitpack.io/v/prolificinteractive/material-calendarview.svg)](https://jitpack.io/#prolificinteractive/material-calendarview) [![Travis branch](https://img.shields.io/travis/prolificinteractive/material-calendarview.svg?maxAge=2592000)](https://travis-ci.org/prolificinteractive/material-calendarview)\n\nA Material design back port of Android's CalendarView. The goal is to have a Material look\nand feel, rather than 100% parity with the platform's implementation.\n\n<img src=\"/images/screencast.gif\" alt=\"Demo Screen Capture\" width=\"300px\" />\n\n## Installation\n\nStep 1. Add the JitPack repository to your build file\n\n```groovy\nallprojects {\n  repositories {\n    ...\n    maven { url 'https://jitpack.io' }\n  }\n}\n```\n\nStep 2. Add the dependency\n\n```groovy\ndependencies {\n  implementation 'com.github.prolificinteractive:material-calendarview:${version}'\n}\n```\n\n## Usage\n\n1. Add `MaterialCalendarView` into your layouts or view hierarchy.\n2. Set a `OnDateSelectedListener` or call `MaterialCalendarView.getSelectedDates()` when you need it.\n\n[Javadoc Available Here](http://prolificinteractive.github.io/material-calendarview/)\n\nExample:\n\n```xml\n<com.prolificinteractive.materialcalendarview.MaterialCalendarView\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    android:id=\"@+id/calendarView\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    app:mcv_showOtherDates=\"all\"\n    app:mcv_selectionColor=\"#00F\"\n    />\n```\n\n\n## Documentation\n\nMake sure to check all the documentation available [here](https://github.com/prolificinteractive/material-calendarview/wiki).\n\n## Customization\n\nOne of the aims of this library is to be customizable. The many options include:\n\n* [Define the view's width and height in terms of tile size](https://github.com/prolificinteractive/material-calendarview/wiki/Customization#tile-size)\n* [Single or Multiple date selection, or disabling selection entirely](https://github.com/prolificinteractive/material-calendarview/wiki/Customization#date-selection)\n* [Showing dates from other months or those out of range](https://github.com/prolificinteractive/material-calendarview/wiki/Customization#showing-other-dates)\n* [Setting the first day of the week](https://github.com/prolificinteractive/material-calendarview/wiki/Customization-Builder#first-day-of-the-week)\n* [Show only a range of dates](https://github.com/prolificinteractive/material-calendarview/wiki/Customization-Builder#date-ranges)\n* [Customize the top bar](https://github.com/prolificinteractive/material-calendarview/wiki/Customization#topbar-options)\n* [Custom labels for the header, weekdays, or individual days](https://github.com/prolificinteractive/material-calendarview/wiki/Customization#custom-labels)\n\n\n### Events, Highlighting, Custom Selectors, and More!\n\nAll of this and more can be done via the decorator api. Please check out the [decorator documentation](https://github.com/prolificinteractive/material-calendarview/wiki/Decorators).\n\n## Recent Changes\n\n### Major Change in 2.0\n\nMaterial CalendarView 2.0 comes in with a major change into the core of it's API, we transitioned from using `java.util.Calendar` to `java.time.LocalDate`. Also that should not impact the public api (we are still using `CalendarDay`), both `Calendar` and `LocalDate` function a little bit differently.\nOne example of that: Months are now indexed from 1 (January) to 12 (December). You can access from the `LocalDate` from `CalendarDay` using `getDate()`.\n\n### Major Change in 1.6.0\n\nAlso this release doesn't have any break changes, it provides significant improvements to the widget. More customization have been added for the user (custom fonts, long click listener, show/hide weekdays) as well as various fixes, improvements to the sample app, and general cleanup. Make sure to check the CHANGELOG and the release section for more details. \n\n### Major Change in 1.5.0\n\nWe recently updated to the latest gradle and decided to move over our libraries to the hosting service Jitpack.\nPlease refer to the installation section for more details.\n\n### Major Change in 1.4.0\n\n* Breaking Change: `setFirstDayOfWeek`, `setMin/MaxDate`, and `setCalendarDisplayMode` are moved to a `State` object. This was necessary because it was unclear that these were not simple setters--individually, they were side effecting and triggered full adapter/date range recalculations. Typical usage of the view involves setting all these invariants up front during `onCreate` and it was unknown to the user that setting all 4 of these would create a lot of waste. Not to mention certain things were side effecting--some would reset the current day or selected date. As a result, the same 4 methods called in a different order could result in a different state, which is bad.\n\n  For most cases you will simply need to replace setting those invariants with: \n  ```java\n  mcv.state().edit()\n    .setFirstDayOfWeek(Calendar.WEDNESDAY)\n    .setMinimumDate(CalendarDay.from(2016, 4, 3))\n    .setMaximumDate(CalendarDay.from(2016, 5, 12))\n    .setCalendarDisplayMode(CalendarMode.WEEKS)\n    .commit();\n  ```\n\n  `mcv.state().edit()` will retain previously set values; `mcv.newState()` will create a new state using default values. Calling `commit` will trigger the rebuild of adapters and date ranges. It is recommended these state changes occur as the first modification to MCV (before configuring anything else like current date or selected date); we make no guarantee those modifications will be retained when the state is modified.\n\n  See [CUSTOMIZATION_BUILDER](https://github.com/prolificinteractive/material-calendarview/wiki/Customization-Builder) for usage details.\n* New: `setSelectionMode(SELECTION_MODE_RANGE)` was added to allow 2 dates to be selected and have the entire range of dates selected. Much thanks to [papageorgiouk](https://github.com/papageorgiouk) for his work on this feature. \n\nSee other changes in the [CHANGELOG](/CHANGELOG.md).\n\n# Contributing\n\nWould you like to contribute? Fork us and send a pull request! Be sure to checkout our issues first.\n\n## License\n\nMaterial Calendar View is Copyright (c) 2018 Prolific Interactive. It may be redistributed under the terms specified in the [LICENSE] file.\n\n[LICENSE]: /LICENSE\n\n## Maintainers\n\n![prolific](https://s3.amazonaws.com/prolificsitestaging/logos/Prolific_Logo_Full_Color.png)\n\nMaterial Calendar View is maintained and funded by Prolific Interactive. The names and logos are trademarks of Prolific Interactive.\n"
        },
        {
          "name": "build.gradle",
          "type": "blob",
          "size": 0.6826171875,
          "content": "wrapper {\n  //if you change this version you will need to run the 'gradlew wrapper' command twice from the command line to auto update the gradle cache\n  gradleVersion = \"5.1.1\"\n}\nbuildscript {\n  repositories {\n    google()\n    jcenter()\n  }\n  dependencies {\n    classpath 'com.android.tools.build:gradle:3.3.0'\n    classpath 'com.github.dcendents:android-maven-gradle-plugin:2.1'\n  }\n}\n\nallprojects {\n  repositories {\n    google()\n    jcenter()\n    // Here for convenience when testing new releases\n    // maven { url \"https://oss.sonatype.org/content/repositories/snapshots/\" }\n  }\n}\n\ntask clean(type: Delete) {\n  delete rootProject.buildDir\n}\n\napply from: rootProject.file('dependencies.gradle')\n"
        },
        {
          "name": "dependencies.gradle",
          "type": "blob",
          "size": 1.4111328125,
          "content": "ext {\n  minSdkVersion = 16\n  compileSdkVersion = 28\n  targetSdkVersion = 27\n\n  hamcrestVersion = '1.3'\n  junitVersion = '4.12'\n  runnerVersion = '0.5'\n  supportVersion = '27.0.2'\n\n  supportV4 = \"com.android.support:support-v4:$supportVersion\"\n  supportDesign = \"com.android.support:design:$supportVersion\"\n  supportAnnotations = \"com.android.support:support-annotations:$supportVersion\"\n  supportAppCompat = \"com.android.support:appcompat-v7:$supportVersion\"\n  recyclerviewV7 = \"com.android.support:recyclerview-v7:$supportVersion\"\n\n  // Test\n  junit = \"junit:junit:$junitVersion\"\n  testRunner = \"com.android.support.test:runner:$runnerVersion\"\n  testRules = \"com.android.support.test:rules:$runnerVersion\"\n\n  // Hamcrest\n  hamcrestCore = \"org.hamcrest:hamcrest-core:$hamcrestVersion\"\n  hamcrestLibrary = \"org.hamcrest:hamcrest-library:$hamcrestVersion\"\n  hamcrestIntegration = \"org.hamcrest:hamcrest-integration:$hamcrestVersion\"\n\n  // Other\n  threeTenAbp = 'com.jakewharton.threetenabp:threetenabp:1.1.1'\n  butterknife = 'com.jakewharton:butterknife:8.5.1'\n  butterknifeCompiler = 'com.jakewharton:butterknife-compiler:8.5.1'\n\n  testDep = [junit,\n             hamcrestCore,\n             hamcrestLibrary,\n             hamcrestIntegration]\n\n  androidTestDep = [junit,\n                    testRunner,\n                    testRules,\n                    hamcrestCore,\n                    hamcrestLibrary,\n                    hamcrestIntegration]\n}\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradle.properties",
          "type": "blob",
          "size": 0.8740234375,
          "content": "# Project-wide Gradle settings.\n\n# IDE (e.g. Android Studio) users:\n# Gradle settings configured through the IDE *will override*\n# any settings specified in this file.\n\n# For more details on how to configure your build environment visit\n# http://www.gradle.org/docs/current/userguide/build_environment.html\n\n# Specifies the JVM arguments used for the daemon process.\n# The setting is particularly useful for tweaking memory settings.\n# Default value: -Xmx10248m -XX:MaxPermSize=256m\n# org.gradle.jvmargs=-Xmx2048m -XX:MaxPermSize=512m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8\n\n# When configured, Gradle will run in incubating parallel mode.\n# This option should only be used with decoupled projects. More details, visit\n# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects\n# org.gradle.parallel=true\n\nVERSION_NAME = 2.0.1\nVERSION_CODE = 19"
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 5.171875,
          "content": "#!/usr/bin/env sh\n\n##############################################################################\n##\n##  Gradle start up script for UN*X\n##\n##############################################################################\n\n# Attempt to set APP_HOME\n# Resolve links: $0 may be a link\nPRG=\"$0\"\n# Need this for relative symlinks.\nwhile [ -h \"$PRG\" ] ; do\n    ls=`ls -ld \"$PRG\"`\n    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n    if expr \"$link\" : '/.*' > /dev/null; then\n        PRG=\"$link\"\n    else\n        PRG=`dirname \"$PRG\"`\"/$link\"\n    fi\ndone\nSAVED=\"`pwd`\"\ncd \"`dirname \\\"$PRG\\\"`/\" >/dev/null\nAPP_HOME=\"`pwd -P`\"\ncd \"$SAVED\" >/dev/null\n\nAPP_NAME=\"Gradle\"\nAPP_BASE_NAME=`basename \"$0\"`\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS=\"\"\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=\"maximum\"\n\nwarn () {\n    echo \"$*\"\n}\n\ndie () {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n}\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\nnonstop=false\ncase \"`uname`\" in\n  CYGWIN* )\n    cygwin=true\n    ;;\n  Darwin* )\n    darwin=true\n    ;;\n  MINGW* )\n    msys=true\n    ;;\n  NONSTOP* )\n    nonstop=true\n    ;;\nesac\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n    else\n        JAVACMD=\"$JAVA_HOME/bin/java\"\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=\"java\"\n    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\nfi\n\n# Increase the maximum file descriptors if we can.\nif [ \"$cygwin\" = \"false\" -a \"$darwin\" = \"false\" -a \"$nonstop\" = \"false\" ] ; then\n    MAX_FD_LIMIT=`ulimit -H -n`\n    if [ $? -eq 0 ] ; then\n        if [ \"$MAX_FD\" = \"maximum\" -o \"$MAX_FD\" = \"max\" ] ; then\n            MAX_FD=\"$MAX_FD_LIMIT\"\n        fi\n        ulimit -n $MAX_FD\n        if [ $? -ne 0 ] ; then\n            warn \"Could not set maximum file descriptor limit: $MAX_FD\"\n        fi\n    else\n        warn \"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\"\n    fi\nfi\n\n# For Darwin, add options to specify how the application appears in the dock\nif $darwin; then\n    GRADLE_OPTS=\"$GRADLE_OPTS \\\"-Xdock:name=$APP_NAME\\\" \\\"-Xdock:icon=$APP_HOME/media/gradle.icns\\\"\"\nfi\n\n# For Cygwin, switch paths to Windows format before running java\nif $cygwin ; then\n    APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`\n    CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`\n    JAVACMD=`cygpath --unix \"$JAVACMD\"`\n\n    # We build the pattern for arguments to be converted via cygpath\n    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`\n    SEP=\"\"\n    for dir in $ROOTDIRSRAW ; do\n        ROOTDIRS=\"$ROOTDIRS$SEP$dir\"\n        SEP=\"|\"\n    done\n    OURCYGPATTERN=\"(^($ROOTDIRS))\"\n    # Add a user-defined pattern to the cygpath arguments\n    if [ \"$GRADLE_CYGPATTERN\" != \"\" ] ; then\n        OURCYGPATTERN=\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\"\n    fi\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    i=0\n    for arg in \"$@\" ; do\n        CHECK=`echo \"$arg\"|egrep -c \"$OURCYGPATTERN\" -`\n        CHECK2=`echo \"$arg\"|egrep -c \"^-\"`                                 ### Determine if an option\n\n        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition\n            eval `echo args$i`=`cygpath --path --ignore --mixed \"$arg\"`\n        else\n            eval `echo args$i`=\"\\\"$arg\\\"\"\n        fi\n        i=$((i+1))\n    done\n    case $i in\n        (0) set -- ;;\n        (1) set -- \"$args0\" ;;\n        (2) set -- \"$args0\" \"$args1\" ;;\n        (3) set -- \"$args0\" \"$args1\" \"$args2\" ;;\n        (4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;\n        (5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;\n        (6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;\n        (7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;\n        (8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;\n        (9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;\n    esac\nfi\n\n# Escape application args\nsave () {\n    for i do printf %s\\\\n \"$i\" | sed \"s/'/'\\\\\\\\''/g;1s/^/'/;\\$s/\\$/' \\\\\\\\/\" ; done\n    echo \" \"\n}\nAPP_ARGS=$(save \"$@\")\n\n# Collect all arguments for the java command, following the shell quoting and substitution rules\neval set -- $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS \"\\\"-Dorg.gradle.appname=$APP_BASE_NAME\\\"\" -classpath \"\\\"$CLASSPATH\\\"\" org.gradle.wrapper.GradleWrapperMain \"$APP_ARGS\"\n\n# by default we should be in the correct project dir, but when run from Finder on Mac, the cwd is wrong\nif [ \"$(uname)\" = \"Darwin\" ] && [ \"$HOME\" = \"$PWD\" ]; then\n  cd \"$(dirname \"$0\")\"\nfi\n\nexec \"$JAVACMD\" \"$@\"\n"
        },
        {
          "name": "gradlew.bat",
          "type": "blob",
          "size": 2.20703125,
          "content": "@if \"%DEBUG%\" == \"\" @echo off\r\n@rem ##########################################################################\r\n@rem\r\n@rem  Gradle startup script for Windows\r\n@rem\r\n@rem ##########################################################################\r\n\r\n@rem Set local scope for the variables with windows NT shell\r\nif \"%OS%\"==\"Windows_NT\" setlocal\r\n\r\nset DIRNAME=%~dp0\r\nif \"%DIRNAME%\" == \"\" set DIRNAME=.\r\nset APP_BASE_NAME=%~n0\r\nset APP_HOME=%DIRNAME%\r\n\r\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\r\nset DEFAULT_JVM_OPTS=\r\n\r\n@rem Find java.exe\r\nif defined JAVA_HOME goto findJavaFromJavaHome\r\n\r\nset JAVA_EXE=java.exe\r\n%JAVA_EXE% -version >NUL 2>&1\r\nif \"%ERRORLEVEL%\" == \"0\" goto init\r\n\r\necho.\r\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\r\necho.\r\necho Please set the JAVA_HOME variable in your environment to match the\r\necho location of your Java installation.\r\n\r\ngoto fail\r\n\r\n:findJavaFromJavaHome\r\nset JAVA_HOME=%JAVA_HOME:\"=%\r\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\r\n\r\nif exist \"%JAVA_EXE%\" goto init\r\n\r\necho.\r\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\r\necho.\r\necho Please set the JAVA_HOME variable in your environment to match the\r\necho location of your Java installation.\r\n\r\ngoto fail\r\n\r\n:init\r\n@rem Get command-line arguments, handling Windows variants\r\n\r\nif not \"%OS%\" == \"Windows_NT\" goto win9xME_args\r\n\r\n:win9xME_args\r\n@rem Slurp the command line arguments.\r\nset CMD_LINE_ARGS=\r\nset _SKIP=2\r\n\r\n:win9xME_args_slurp\r\nif \"x%~1\" == \"x\" goto execute\r\n\r\nset CMD_LINE_ARGS=%*\r\n\r\n:execute\r\n@rem Setup the command line\r\n\r\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\r\n\r\n@rem Execute Gradle\r\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%\r\n\r\n:end\r\n@rem End local scope for the variables with windows NT shell\r\nif \"%ERRORLEVEL%\"==\"0\" goto mainEnd\r\n\r\n:fail\r\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\r\nrem the _cmd.exe /c_ return code!\r\nif  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1\r\nexit /b 1\r\n\r\n:mainEnd\r\nif \"%OS%\"==\"Windows_NT\" endlocal\r\n\r\n:omega\r\n"
        },
        {
          "name": "images",
          "type": "tree",
          "content": null
        },
        {
          "name": "library",
          "type": "tree",
          "content": null
        },
        {
          "name": "sample",
          "type": "tree",
          "content": null
        },
        {
          "name": "settings.gradle",
          "type": "blob",
          "size": 0.029296875,
          "content": "include ':library', ':sample'\n"
        }
      ]
    }
  ]
}