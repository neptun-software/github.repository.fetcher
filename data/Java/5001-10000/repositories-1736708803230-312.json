{
  "metadata": {
    "timestamp": 1736708803230,
    "page": 312,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "apache/groovy",
      "stars": 5243,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".asf.yaml",
          "type": "blob",
          "size": 0.4091796875,
          "content": "# see https://s.apache.org/asfyaml\ngithub:\n  description: \"Apache Groovy: A powerful multi-faceted programming language for the JVM platform\"\n  homepage: https://groovy-lang.org\n  labels:\n    - groovy\n    - jvm-languages\n    - programming-language\n    - metaprogramming\n    - functional-programming\n    - dynamic-typing\n    - static-typing\n    - compiler\n    - apache\n\nnotifications:\n  jira_options: link label comment\n"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.900390625,
          "content": "# Licensed to the Apache Software Foundation (ASF) under one or more\n# contributor license agreements.  See the NOTICE file distributed with\n# this work for additional information regarding copyright ownership.\n# The ASF licenses this file to You under the Apache License, Version 2.0\n# (the \"License\"); you may not use this file except in compliance with\n# the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\nroot = true\n\n[*]\ncharset = utf-8\nindent_size = 4\ninsert_final_newline = true\ntrim_trailing_whitespace = true\n\n[*.{yml,yaml}]\nindent_size = 2\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.05078125,
          "content": "* text=auto eol=lf\n\n*.bat text eol=crlf\n*.jar binary"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.21484375,
          "content": "user.gradle\nbuild.bat\n.gradle/\ntarget/\nbuild/\nbin/\nout/\n\n*.DS_Store\n*.class\n*.dat\n*.swp\n*~\n\n.idea\n*.iml\n*.ipr\n*.iws\n\n.settings/\n.classpath\n.project\n\n.fleet\n.shelf\n.vscode\n.jqwik-database\nverification-metadata.dryrun.xml\n"
        },
        {
          "name": ".muse",
          "type": "tree",
          "content": null
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 0.8251953125,
          "content": "<!--\nSPDX-License-Identifier: Apache-2.0\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    https://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n-->\n\n# Community Conduct\n\nWe try to keep the Groovy community a friendly and welcoming place,\nby keeping discussions respectful and following the\n[Apache Software Foundation Code of Conduct](https://www.apache.org/foundation/policies/conduct.html) when interacting with others.\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.7265625,
          "content": "<!--\nSPDX-License-Identifier: Apache-2.0\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    https://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n-->\n\n# Contributing\n\nPlease visit the\n[project development website](https://groovy.apache.org/)\nto find out more about contributing to the project.\nWe welcome all contributors.\n"
        },
        {
          "name": "DOAP.rdf",
          "type": "blob",
          "size": 2.7470703125,
          "content": "<?xml version=\"1.0\"?>\n<?xml-stylesheet type=\"text/xsl\"?>\n<rdf:RDF xml:lang=\"en\"\n         xmlns=\"http://usefulinc.com/ns/doap#\"\n         xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n         xmlns:asfext=\"http://projects.apache.org/ns/asfext#\"\n         xmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n<!--\n    Licensed to the Apache Software Foundation (ASF) under one or more\n    contributor license agreements.  See the NOTICE file distributed with\n    this work for additional information regarding copyright ownership.\n    The ASF licenses this file to You under the Apache License, Version 2.0\n    (the \"License\"); you may not use this file except in compliance with\n    the License.  You may obtain a copy of the License at\n\n         http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n-->\n  <Project rdf:about=\"http://groovy.apache.org\">\n    <created>2015-12-23</created>\n    <license rdf:resource=\"http://spdx.org/licenses/Apache-2.0\" />\n    <name>Apache Groovy</name>\n    <homepage rdf:resource=\"http://groovy.apache.org\" />\n    <asfext:pmc rdf:resource=\"http://groovy.apache.org\" />\n    <shortdesc>A multi-faceted language for the Java platform</shortdesc>\n    <description>Apache Groovy is a powerful, optionally typed and dynamic language, with static-typing and static compilation capabilities, for the Java platform aimed at improving developer productivity thanks to a concise, familiar and easy to learn syntax. It integrates smoothly with any Java program, and immediately delivers to your application powerful features, including scripting capabilities, Domain-Specific Language authoring, runtime and compile-time meta-programming and functional programming.</description>\n    <bug-database rdf:resource=\"https://issues.apache.org/jira/browse/GROOVY\" />\n    <mailing-list rdf:resource=\"http://groovy-lang.org/mailing-lists.html\" />\n    <download-page rdf:resource=\"http://groovy-lang.org/download.html\" />\n    <programming-language>Java</programming-language>\n    <category rdf:resource=\"http://projects.apache.org/category/library\" />\n    <repository>\n      <GitRepository>\n        <location rdf:resource=\"https://gitbox.apache.org/repos/asf/groovy.git\"/>\n        <browse rdf:resource=\"http://github.com/apache/groovy\"/>\n      </GitRepository>\n    </repository>\n    <maintainer>\n      <foaf:Person>\n        <foaf:name>Groovy Team</foaf:name>\n          <foaf:mbox rdf:resource=\"mailto:dev@groovy.apache.org\"/>\n      </foaf:Person>\n    </maintainer>\n  </Project>\n</rdf:RDF>\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 12.44140625,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n------------------------------------------------------------------------\n\nAsciidoc License\n\nThis product uses the style.css from asciidoctor.org within\ndocumentation. The file is available under the MIT License.\nFor details, see licenses/asciidoc-style-license.txt.\n\n------------------------------------------------------------------------\n\nJQuery License\n\nThe following file is used within documentation:\n\n    src/spec/assets/css/jquery-2.1.1.min.js\n\nThis file is made available under the following MIT license:\nlicenses/jquery-js-license.txt\n\n------------------------------------------------------------------------\n\nJSR223 License\n\nThe following classes within this product:\n\n    org.codehaus.groovy.jsr223.GroovyCompiledScript\n    org.codehaus.groovy.jsr223.GroovyScriptEngineFactory\n    org.codehaus.groovy.jsr223.GroovyScriptEngineImpl\n\nwere derived from reference implementation files developed by Sun in\ncollaboration with the Groovy community. The reference implementation\nhas a BSD-style license. Details can be found in: licenses/jsr223-license.txt\n\n------------------------------------------------------------------------\n\nnormalize.css License\n\nThe stylesheet.css file (originally normalize.css) is used by the\ngroovydoc and docgenerator components for groovy-jdk/gapi documentation.\nIt is made available under a MIT License:\nlicenses/normalize-stylesheet-license.txt\n"
        },
        {
          "name": "NOTICE",
          "type": "blob",
          "size": 0.845703125,
          "content": "Apache Groovy\nCopyright 2003-2025 The Apache Software Foundation\n\nThis product includes software developed at\nThe Apache Software Foundation (http://www.apache.org/).\n\nThe Java source files in src/main/java/org/apache/groovy/util/concurrent/concurrentlinkedhashmap/\nare from https://github.com/ben-manes/concurrentlinkedhashmap and the following notice applies:\nCopyright 2010-2012 Google Inc. All Rights Reserved.\n\nThe Java source file src/main/java/org/apache/groovy/util/concurrent/ConcurrentReferenceHashMap\nis from https://github.com/hazelcast/hazelcast and the following notice applies:\nCopyright (c) 2008-2020, Hazelcast, Inc. All Rights Reserved.\n\nThis product bundles icons from the famfamfam.com silk icons set\nhttp://www.famfamfam.com/lab/icons/silk/\nLicensed under the Creative Commons Attribution Licence v2.5\nhttp://creativecommons.org/licenses/by/2.5/"
        },
        {
          "name": "README.adoc",
          "type": "blob",
          "size": 9.32421875,
          "content": "//////////////////////////////////////////\n\n  Licensed to the Apache Software Foundation (ASF) under one\n  or more contributor license agreements.  See the NOTICE file\n  distributed with this work for additional information\n  regarding copyright ownership.  The ASF licenses this file\n  to you under the Apache License, Version 2.0 (the\n  \"License\"); you may not use this file except in compliance\n  with the License.  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing,\n  software distributed under the License is distributed on an\n  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n  KIND, either express or implied.  See the License for the\n  specific language governing permissions and limitations\n  under the License.\n\n//////////////////////////////////////////\n\n= Apache Groovy\nThe Groovy development team\n:revdate: 24-02-2014\n:build-icon: https://ci.groovy-lang.org/app/rest/builds/buildType:(id:MasterTestJdk11)/statusIcon\n:github-build-icon: https://github.com/apache/groovy/actions/workflows/groovy-build-test.yml/badge.svg?branch=master\n:sonarcloud-icon: https://sonarcloud.io/api/project_badges/measure?project=apache_groovy&metric=sqale_rating\n:noheader:\n:groovy-www: https://groovy-lang.org/\n:groovy-ci: https://ci.groovy-lang.org?guest=1\n:github-ci: https://github.com/apache/groovy/actions?query=branch%3Amaster\n:sonarcloud: https://sonarcloud.io/dashboard?id=apache_groovy\n:jdk: https://www.oracle.com/technetwork/java/javase/downloads\n:codecov: https://codecov.io/gh/apache/groovy\n//:bintray-latest-version-image: https://api.bintray.com/packages/groovy/maven/groovy/images/download.png\n//:bintray-latest-version-link: https://bintray.com/groovy/maven/groovy/_latestVersion\n:apache-license-icon: https://img.shields.io/badge/license-APL2-blue.svg\n:apache-license-link: https://www.apache.org/licenses/LICENSE-2.0.txt\n:apache-groovy-twitter-icon: https://img.shields.io/twitter/follow/ApacheGroovy.svg?style=social\n:apache-groovy-twitter-link: https://twitter.com/intent/follow?screen_name=ApacheGroovy\n:jdk-icon: https://img.shields.io/badge/java-11+-4c7e9f.svg\n:codecov-icon: https://codecov.io/gh/apache/groovy/branch/master/graph/badge.svg\n//:bintray-download-icon: https://api.bintray.com/packages/groovy/maven/groovy/images/download.svg\n:opencollective-link: https://opencollective.com/friends-of-groovy\n:sponsors-silver-img: https://opencollective.com/friends-of-groovy/tiers/silver-sponsor.svg?avatarHeight=45&width=890\n:sponsors-bronze-img: https://opencollective.com/friends-of-groovy/tiers/bronze-sponsor.svg?avatarHeight=40&width=890\n:backers-monthly-img: https://opencollective.com/friends-of-groovy/tiers/backer.svg?avatarHeight=36&width=890\n:backers-all-img: https://opencollective.com/friends-of-groovy/backers.svg?avatarHeight=32&width=890\n\n\n[.left.text-left]\nimage::https://raw.githubusercontent.com/groovy/artwork/master/medium.png[]\nimage:{jdk-icon}[jdk, link={jdk}]\nimage:{apache-license-icon}[Apache License 2, link={apache-license-link}]\nimage:{build-icon}[teamcity build status, link={groovy-ci}]\nimage:{github-build-icon}[github build status, link={github-ci}]\nimage:{codecov-icon}[codecov, link={codecov}]\n// image:{sonarcloud-icon}[maintainability rating, link={sonarcloud}]\n// image:{bintray-download-icon}[bintray download, link={bintray-latest-version-link}]\nimage:{apache-groovy-twitter-icon}[follow on Twitter, link={apache-groovy-twitter-link}]\n\n{groovy-www}[Groovy] is a powerful multi-faceted programming language for the JVM platform.\nIt supports a spectrum of programming styles incorporating features from dynamic languages such as optional and duck typing, but also\nstatic compilation and static type checking at levels similar to or greater than Java through its extensible static type checker.\nIt aims to greatly increase developer productivity with many powerful features but also a concise, familiar and easy to learn syntax.\n\nIt integrates smoothly with any Java class or library, and immediately delivers to your application powerful capabilities,\nincluding scripting support, Domain-Specific Language authoring, runtime and compile-time meta-programming and functional programming.\n\n== Downloading\n\nDistribution links are on the https://groovy.apache.org/download.html[download] page.\n\nMaven, Gradle and Ivy dependency declaration snippets are available on specific files of a particular module.\n\n== Obtaining the Source\n\nYou don't need the source code to use Apache Groovy but if you wish to explore its inner workings or build it for yourself\nthere are two ways to obtain the source files.\n\n=== Checking out from Version Control\n\nApache Groovy uses Git. The official Git repository is at:\n\n    https://gitbox.apache.org/repos/asf/groovy.git\n\nAnd a mirror is hosted on GitHub:\n\n    https://github.com/apache/groovy\n\nThe GitHub mirror is read-only and provides convenience to users and developers to explore the code and for the\ncommunity to accept contributions via GitHub Pull Requests.\n\nSimply `git clone` the repo (or the repo you forked via the GitHub website) and you will have the complete source.\n\n=== Unpacking the src distribution\n\nAlternatively, you can download the source distribution and unpack it.\n\nIf obtaining the source from the source distribution and you intend to build from source,\nyou also need to https://gradle.org/downloads/[download] and install https://gradle.org/[Gradle] and\nuse it to execute one bootstrap step.\n\n==== Bootstrapping Gradle\n\nAs mentioned in the previous paragraph, if you download the source distribution\nyou need to bootstrap Gradle. This isn't needed if you clone from the GitHub repo.\n\nEach version of Groovy is built and tested using a specific version of Gradle.\nThat version is specified by the `gradle_version` property defined in the `gradle.properties`\nfile within the root directory. Luckily you shouldn't need to know that version and,\nafter bootstrapping, you should use the `gradlew` command which will ensure the\ncorrect version is always used.\n\nThe version of Gradle used for the bootstrap step has some flexibility though in general\nyou might need to download a version similar to the version of Groovy the build is\nexpecting.\n\nTo bootstrap Gradle, at the top directory of your unpacked source, run the command:\n\n    gradle -p bootstrap\n\n[NOTE]\nAt this point, the Gradle wrapper should be set up and from now on you should use\nthe `gradlew` command instead of `gradle`. (On Unix-like systems, use `./gradlew`).\n\n== Building from Source\n\n// Build is image:{build-icon}[build status, link={groovy-ci}].\n\nTo build you will need:\n\n* {jdk}[JDK 16+]\n\nTo build everything using Gradle, use the following command (`./gradlew` on Unix-like systems):\n\n    gradlew clean dist\n\n[NOTE]\nThe gradlew command automatically downloads the correct Gradle version if needed, you do not need to download it first.\n\nThis will generate a distribution similar to the zip you can download on the Groovy download page.\n\nTo build everything and launch unit tests, use:\n\n    gradlew test\n\nIf you want to launch one unit test, use this. <TestClassName> is like `groovy.GroovyMethodsTest`.\n\n    gradlew :test --tests <TestClassName>\n\nTo build from IntelliJ IDEA:\n\n    gradlew jar idea\n\nThen open the generated project in IDEA.\n\nTo build from Eclipse:\n\n    gradlew jar eclipse\n\nThen open the generated project and the generated subprojects in Eclipse. But be aware that Eclipse tends to be more limited in its ability to reproduce a Gradle build structure. The generated project files may contain a circular dependency which may or may not prevent Eclipse from using them. It depends on the Eclipse version, if this is an issue or not.\n\nTo build the documentation (Groovy Language Documentation):\n\n    gradlew asciidoc\n\nAll code samples of the documentation guide are pulled from actual test cases. To run a single documentation test case, take for example `src/spec/test/semantics/PowerAssertTest.groovy`\n\n    gradlew testSinglePowerAssertTest\n\n[NOTE]\nThe omission of package name: class is `semantics.PowerAssertTest` but only `PowerAssertTest` is added to `testSingle`.\n\n== Verifying dependencies\nTo generate the missing verification metadata when add/bump dependencies:\n\n    gradlew --write-verification-metadata pgp,sha512 --dry-run\n\nthen compare `verification-metadata.xml` with the generated `verification-metadata.dryrun.xml`, and merge the missing verification metadata into `verification-metadata.xml`\nafter the result of the above operation is reviewed.\n\n== Continuous Integration Server\n\nThe official CI server runs {groovy-ci}[here] and is sponsored by https://www.jetbrains.com[JetBrains].\n\n== Java Profiler\n\nGroovy core team tunes performance through YourKit Java Profiler, which is sponsored by https://www.yourkit.com[YourKit].\n\n== Friends of Groovy Open Collective\nAs an independent initiative, we have set up an open collective for Groovy:\n\nhttps://opencollective.com/friends-of-groovy\n\nThis initiative is designed to complement the Apache project and the many contributions we get from our great community and supporters.\n\n* Thank you to our Silver Sponsors:\n\nimage:{sponsors-silver-img}[]\n\n* Thank you to our Bronze Sponsors:\n\nimage:{sponsors-bronze-img}[]\n\n* Thank you to our backers (donating monthly):\n\nimage:{backers-monthly-img}[]\n\n* Thank you to all our backers:\n\nimage:{backers-all-img}[]\n\n== License\n\nGroovy is licensed under the terms of the http://www.apache.org/licenses/LICENSE-2.0.html[Apache License, Version 2.0]\n\n"
        },
        {
          "name": "appveyor.yml",
          "type": "blob",
          "size": 1.353515625,
          "content": "# Licensed to the Apache Software Foundation (ASF) under one or more\n# contributor license agreements.  See the NOTICE file distributed with\n# this work for additional information regarding copyright ownership.\n# The ASF licenses this file to You under the Apache License, Version 2.0\n# (the \"License\"); you may not use this file except in compliance with\n# the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nversion: '{branch} {build}'\n\nbranches:\n  only:\n    - master\n    - GROOVY_2_6_X\n    - GROOVY_2_5_X\n    - GROOVY_2_4_X\n\nskip_commits:\n  message: /\\[ci skip\\]/\n\nenvironment:\n  TERM: dumb\n  matrix:\n    - JAVA_HOME: C:\\Program Files\\Java\\jdk1.8.0\n\ninstall:\n  # prepend Java entry, remove Ruby entry (C:\\Ruby193\\bin;) from PATH\n  - SET PATH=%JAVA_HOME%\\bin;%PATH:C:\\Ruby193\\bin;=%\n  - echo %PATH%\n  - gradlew.bat --version\n\nbuild:\n  verbosity: detailed\n\nbuild_script:\n  - gradlew.bat --no-daemon clean classes\n\ntest_script:\n  - gradlew.bat --no-daemon -S test\n\ncache:\n  - .gradle\n  - C:\\Users\\appveyor\\.gradle\n"
        },
        {
          "name": "benchmark",
          "type": "tree",
          "content": null
        },
        {
          "name": "bootstrap",
          "type": "tree",
          "content": null
        },
        {
          "name": "build-logic",
          "type": "tree",
          "content": null
        },
        {
          "name": "build.gradle",
          "type": "blob",
          "size": 11.462890625,
          "content": "/*\n *  Licensed to the Apache Software Foundation (ASF) under one\n *  or more contributor license agreements.  See the NOTICE file\n *  distributed with this work for additional information\n *  regarding copyright ownership.  The ASF licenses this file\n *  to you under the Apache License, Version 2.0 (the\n *  \"License\"); you may not use this file except in compliance\n *  with the License.  You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing,\n *  software distributed under the License is distributed on an\n *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n *  KIND, either express or implied.  See the License for the\n *  specific language governing permissions and limitations\n *  under the License.\n */\nplugins {\n    id 'me.champeau.buildscan-recipes' version '0.2.3'\n    id 'com.github.ben-manes.versions' version '0.51.0'\n    id 'com.github.blindpirate.osgi' version '0.0.7'\n    id 'com.github.jk1.dependency-license-report' version '2.9'\n    id 'org.sonarqube' version '6.0.1.5171'\n    id 'org.apache.groovy-core'\n    id 'java-test-fixtures'\n    id 'org.apache.groovy-jacoco-aggregation'\n}\n\nbuildScanRecipes {\n    recipe 'git-commit', baseUrl: 'https://github.com/apache/groovy/tree'\n    recipe 'teamcity', baseUrl: 'https://ci.groovy-lang.org', guest: 'true'\n    recipes 'git-status', 'gc-stats', 'teamcity', 'travis-ci'\n}\n\nbase {\n    archivesName = 'groovy'\n}\n\ngroovyLibrary {\n    registerOptionalFeature 'gpars'\n    registerOptionalFeature 'grapes'\n    registerOptionalFeature 'logging'\n    registerOptionalFeature 'xstreamAst'\n\n    repackagedDependencies = [\n            'antlr', 'antlr-runtime', 'antlr4', 'antlr4-runtime', 'antlr4-annotations',\n            'asm', 'asm-commons', 'asm-tree', 'asm-util', 'picocli'\n    ]\n\n    withGrooid(\n            \"org.apache.groovy:groovy-grooid:${sharedConfiguration.groovyVersion.get()}\",\n            ['openbeans'] as Set,\n            [\n                    'com.googlecode.openbeans.**': 'groovyjarjaropenbeans.@1',\n                    'org.apache.harmony.beans.**': 'groovyjarjarharmonybeans.@1',\n                    'java.beans.**': 'groovyjarjaropenbeans.@1'\n            ],\n            [\n                    '*': ['META-INF/NOTICE']\n            ],\n            ['META-INF/NOTICE', 'META-INF/INDEX.LIST'],\n            [\n                    (project.relativePath(rootProject.file('notices/NOTICE-GROOIDJARJAR'))): 'META-INF/NOTICE'\n            ]\n    )\n}\n\ngroovyCore {\n    def supportClasses = ['Boolean','Char','Byte','Short','Int','Long','Float','Double'].collect {\n        'org.codehaus.groovy.transform.stc.StaticTypeCheckingSupport$'+it+'ArrayStaticTypesHelper'\n    }\n\n    bridgedClasses *supportClasses,\n            'org.codehaus.groovy.classgen.Verifier',\n            'org.codehaus.groovy.ast.tools.GeneralUtils',\n            'org.codehaus.groovy.ast.stmt.TryCatchStatement',\n            'org.codehaus.groovy.runtime.StringGroovyMethods',\n            'org.codehaus.groovy.runtime.DefaultGroovyMethods',\n            'org.codehaus.groovy.transform.stc.DefaultTypeCheckingExtension'\n\n    excludeFromJavadoc '**/GroovyRecognizer.java', '*.g4' // generated file\n}\n\ndependencies {\n    // for internal CLI usage\n    api \"info.picocli:picocli:${versions.picocli}\" // marked as api but manually excluded later in assemble.gradle - modules will use shaded version\n    // for internal usage of things like Opcode\n    api \"org.ow2.asm:asm:${versions.asm}\" // marked as api but manually excluded later in assemble.gradle - modules will use shaded version\n    // for internal usage by the parser but manually excluded later in assemble.gradle - modules will use shaded version\n    implementation \"org.ow2.asm:asm-analysis:${versions.asm}\"\n    implementation \"org.ow2.asm:asm-commons:${versions.asm}\"\n    implementation \"org.ow2.asm:asm-tree:${versions.asm}\"\n    implementation \"org.ow2.asm:asm-util:${versions.asm}\"\n    implementation \"me.champeau.openbeans:openbeans:${versions.openbeans}\"\n    implementation \"me.sunlan:antlr4-runtime:${versions.antlr4}\"\n\n    antlr \"me.sunlan:antlr4:${versions.antlr4}\"\n\n    gparsImplementation \"org.codehaus.gpars:gpars:${versions.gpars}\", {\n        exclude(group: 'org.codehaus.groovy', module: 'groovy-all')\n    }\n\n    grapesImplementation \"org.apache.ivy:ivy:${versions.ivy}\", {\n        transitive = false\n    }\n\n    loggingImplementation \"org.fusesource.jansi:jansi:${versions.jansi}\"\n\n    xstreamAstImplementation \"com.thoughtworks.xstream:xstream:${versions.xstream}\", {\n        exclude(group: 'xpp3'   , module: 'xpp3_min')\n        exclude(group: 'junit'  , module: 'junit'   )\n        exclude(group: 'jmock'  , module: 'jmock'   )\n        exclude(group: 'xmlpull', module: 'xmlpull' )\n    }\n\n    testImplementation projects.groovyAnt\n    testImplementation projects.groovyXml\n    testImplementation projects.groovyJson\n    testImplementation projects.groovyTest\n    testImplementation projects.groovyMacro\n    testImplementation projects.groovyDateutil\n    testImplementation \"net.jcip:jcip-annotations:${versions.jcipAnnotations}\"\n    testImplementation \"ch.qos.logback:logback-classic:${versions.logback}\"\n    testImplementation \"log4j:log4j:${versions.log4j}\"\n    testImplementation \"org.apache.logging.log4j:log4j-core:${versions.log4j2}\"\n    testImplementation \"org.slf4j:jcl-over-slf4j:${versions.slf4j}\"\n    testImplementation \"com.thoughtworks.qdox:qdox:${versions.qdox}\"\n    testImplementation \"com.fasterxml.jackson.core:jackson-databind:${versions.jacksonDatabind}\"\n    testImplementation \"com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:${versions.jackson}\"\n    testImplementation \"com.fasterxml.jackson.core:jackson-annotations:${versions.jackson}\"\n\n    testFixturesImplementation projects.groovyXml\n    testFixturesImplementation projects.groovyTest\n    testFixturesImplementation \"xmlunit:xmlunit:${versions.xmlunit}\"\n\n    tools \"com.eed3si9n.jarjar:jarjar:${versions.jarjar}\"\n    tools \"org.apache.ant:ant:1.10.15\" // updated jarjar dependency to remove vulnerability\n    tools \"org.jboss.bridger:bridger:${versions.bridger}\"\n    tools \"org.codehaus.plexus:plexus-utils:4.0.2\" // updated bridger dependency to remove vulnerability\n    tools \"org.apache.maven:maven-core:3.9.9\" // updated bridger dependency to remove vulnerability\n    tools \"com.jcraft:jsch:0.1.55\" // updated bridger dependency to remove vulnerability\n    tools \"commons-io:commons-io:2.18.0\" // updated bridger dependency to remove vulnerability\n    tools \"org.apache.maven.shared:maven-shared-utils:3.4.2\" // updated bridger dependency to remove vulnerability\n    tools \"org.ow2.asm:asm:${versions.asm}\"\n    tools \"com.thoughtworks.qdox:qdox:${versions.qdox}\"\n\n    spotbugsPlugins 'com.h3xstream.findsecbugs:findsecbugs-plugin:1.13.0'\n\n    testRuntimeOnly \"org.slf4j:slf4j-simple:${versions.slf4j}\"\n    testRuntimeOnly(project(':')) {\n        because 'Tests are using Grapes'\n        capabilities {\n            requireCapability 'org.apache.groovy:groovy-grapes'\n        }\n    }\n    testRuntimeOnly(project(':')) {\n        because 'Tests are using GPars'\n        capabilities {\n            requireCapability 'org.apache.groovy:groovy-gpars'\n        }\n    }\n}\n\nconfigurations {\n    javadocClasspath.extendsFrom(\n            loggingImplementation,\n            xstreamAstImplementation,\n            gparsImplementation,\n            grapesImplementation\n    )\n    groovyCompilerClasspath {\n        extendsFrom(implementation, compileOnly, gparsImplementation, grapesImplementation, loggingImplementation, xstreamAstImplementation, runtimeOnly)\n    }\n}\n\nallprojects {\n    tasks.withType(AbstractCopyTask).configureEach {\n        it.duplicatesStrategy = DuplicatesStrategy.WARN\n    }\n}\n\ntasks.named('jar') {\n    metaInf {\n        from(\"$projectDir/licenses/LICENSE-JARJAR\")\n        from(\"$projectDir/licenses\") {\n            into('licenses')\n            include('asm-license.txt')\n            include('antlr4-license.txt')\n        }\n        from(\"$projectDir/notices/NOTICE-JARJAR\")\n        rename '^([A-Z]+)-([^.]*)', '$1'\n    }\n    exclude '**/package-info.class'\n}\n\n\n// some tests require Jars, but those are not allowed in the source directory\n// by the Apache policy, so we need to build them and add them to the test\n// resources classpath\n\ndef extModuleFixtureDir = project.layout.projectDirectory.dir(\"src/test-fixtures/extmodule\")\ndef extModuleOutputDir = project.layout.buildDirectory.dir(\"testFixtures/extmodule\")\ndef extModuleRepoDir = extModuleOutputDir.map { it.dir(\"repo\") }\n\ndef compileTestExtensionModule = tasks.register(\"compileTestExtensionModule\", JavaCompile) {\n    classpath = files(tasks.named('jar'))\n    source fileTree(extModuleFixtureDir.dir(\"src/main/java\"))\n    destinationDirectory = extModuleOutputDir.map  { it.dir(\"classes\") }\n    sourceCompatibility = sharedConfiguration.targetJavaVersion.get()\n    targetCompatibility = sharedConfiguration.targetJavaVersion.get()\n}\n\ndef testExtensionModuleJar = tasks.register(\"testExtensionModuleJar\", Jar) {\n    description = 'Builds a sample extension module used in tests'\n    archiveBaseName = 'module-test'\n    archiveVersion = '1.4'\n    from compileTestExtensionModule\n    from extModuleFixtureDir.dir(\"src/main/resources\")\n    // emulate Maven repo format for output\n    destinationDirectory = extModuleRepoDir.map { it.dir(\"jars/module-test/module-test/${archiveVersion.get()}\") }\n}\n\ndependencies {\n    testRuntimeOnly files(extModuleRepoDir)\n}\n\ntasks.named('test') {\n    dependsOn testExtensionModuleJar\n}\n\nif (!JavaVersion.current().isCompatibleWith(JavaVersion.VERSION_16)) {\n    logger.lifecycle '''\n************************************* WARNING ***********************************************\n****  You're running the build with an older JDK. NEVER try to release with an old JDK!  ****\n****  You must use a JDK 16+ in order to compile all features of the language.           ****\n*********************************************************************************************\n'''\n}\n\napply from: 'gradle/licenses.gradle'\n\n// CC: This can probably be removed as the native IDEA import\n// works pretty nice, but it's up to the Groovy devs to decide\napply from: 'gradle/idea.gradle'\napply from: 'gradle/eclipse.gradle'\n\n// If a local configuration file for tweaking the build is present, apply it\nif (file('user.gradle').exists()) {\n    apply from: 'user.gradle'\n}\n\nlicenseReport {\n    excludeGroups = [\n            'org.multiverse'  // we never include this optional dependency of an optional dependency\n    ]\n}\n\nsonarqube {\n    properties {\n        property \"sonar.projectName\", \"Apache Groovy\"\n        property \"sonar.projectKey\", \"apache_groovy\"\n        property \"sonar.organization\", \"apache\"\n        property \"sonar.host.url\", \"https://sonarcloud.io\"\n        property \"sonar.cpd.exclusions\", \"**/*\"\n//        property \"sonar.coverage.jacoco.xmlReportPaths\", layout.buildDirectory.file(\"reports/jacoco/jacocoAllReport/jacocoAllReport.xml\").get().asFile.absolutePath\n    }\n}\n\ndef UNSTABLE = /^([\\d.-]+(alpha|beta|rc|m)[\\d.-]+(groovy[\\d.-]+)?|20030203.000550|20031129.200437|200404\\d\\d|2004-03-19)$/\n// ignore non-stable releases\ntasks.named(\"dependencyUpdates\")?.configure {\n    gradleReleaseChannel = 'current'\n    rejectVersionIf {\n        !(it.currentVersion.toLowerCase() ==~ UNSTABLE) && it.candidate.version.toLowerCase() ==~ UNSTABLE\n    }\n}\n\nartifacts {\n    grapesRuntimeElements file: jar.archiveFile.get().asFile, type: 'jar'\n    xstreamAstRuntimeElements file: jar.archiveFile.get().asFile, type: 'jar'\n    gparsRuntimeElements file: jar.archiveFile.get().asFile, type: 'jar'\n    loggingRuntimeElements file: jar.archiveFile.get().asFile, type: 'jar'\n}\n"
        },
        {
          "name": "codecov.yml",
          "type": "blob",
          "size": 1.126953125,
          "content": "# Licensed to the Apache Software Foundation (ASF) under one or more\n# contributor license agreements.  See the NOTICE file distributed with\n# this work for additional information regarding copyright ownership.\n# The ASF licenses this file to You under the Apache License, Version 2.0\n# (the \"License\"); you may not use this file except in compliance with\n# the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\ncodecov:\n  require_ci_to_pass: yes\n\ncomment:\n  layout: \"reach, diff, flags, files\"\n  behavior: default\n  require_changes: false\n  require_base: no\n  require_head: yes\n\ncoverage:\n  precision: 4\n  round: nearest\n  status:\n    patch:\n      default:\n        target: auto\n        informational: true\n    project:\n      default:\n        target: auto\n        informational: true\n"
        },
        {
          "name": "config",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradle.properties",
          "type": "blob",
          "size": 1.669921875,
          "content": "# Licensed to the Apache Software Foundation (ASF) under one or more\n# contributor license agreements.  See the NOTICE file distributed with\n# this work for additional information regarding copyright ownership.\n# The ASF licenses this file to You under the Apache License, Version 2.0\n# (the \"License\"); you may not use this file except in compliance with\n# the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\ngroovyVersion=5.0.0-SNAPSHOT\n# bundle version format: major('.'minor('.'micro('.'qualifier)?)?)? (first 3 only digits)\ngroovyBundleVersion=5.0.0.SNAPSHOT\n\ngroovyTargetBytecodeVersion=11\ntargetJavaVersion=11\n\nbinaryCompatibilityBaseline=4.0.18\ngradle_version=8.12\n\ngroovyJUnit_ms=512m\ngroovyJUnit_mx=2g\ngroovyJUnit_permSize=64m\ngroovyJUnit_maxPermSize=256m\n\njavacMain_mx=512m\ngroovycMain_mx=1g\ngroovycTest_mx=1g\n\njavaDoc_mx=1g\n\n# adjust if needed for different jdk versions\n#org.gradle.jvmargs=-ea -Xmx1500m\norg.gradle.jvmargs=-Xms800m -Xmx2g -XX:MaxMetaspaceSize=1024m -XX:+UseG1GC\n\n# enable the Gradle build cache\norg.gradle.caching=true\n\n# enable --parallel\norg.gradle.parallel=true\n\n# prefer jars over class folders on the compile classpath\norg.gradle.java.compile-classpath-packaging=true\n\n# make dependency-verification lenient\norg.gradle.dependency.verification=lenient\n\n# log stacktrace\norg.gradle.logging.stacktrace=all\n"
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 8.5576171875,
          "content": "#!/bin/sh\n\n#\n# Copyright © 2015-2021 the original authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      https://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n# SPDX-License-Identifier: Apache-2.0\n#\n\n##############################################################################\n#\n#   Gradle start up script for POSIX generated by Gradle.\n#\n#   Important for running:\n#\n#   (1) You need a POSIX-compliant shell to run this script. If your /bin/sh is\n#       noncompliant, but you have some other compliant shell such as ksh or\n#       bash, then to run this script, type that shell name before the whole\n#       command line, like:\n#\n#           ksh Gradle\n#\n#       Busybox and similar reduced shells will NOT work, because this script\n#       requires all of these POSIX shell features:\n#         * functions;\n#         * expansions «$var», «${var}», «${var:-default}», «${var+SET}»,\n#           «${var#prefix}», «${var%suffix}», and «$( cmd )»;\n#         * compound commands having a testable exit status, especially «case»;\n#         * various built-in commands including «command», «set», and «ulimit».\n#\n#   Important for patching:\n#\n#   (2) This script targets any POSIX shell, so it avoids extensions provided\n#       by Bash, Ksh, etc; in particular arrays are avoided.\n#\n#       The \"traditional\" practice of packing multiple parameters into a\n#       space-separated string is a well documented source of bugs and security\n#       problems, so this is (mostly) avoided, by progressively accumulating\n#       options in \"$@\", and eventually passing that to Java.\n#\n#       Where the inherited environment variables (DEFAULT_JVM_OPTS, JAVA_OPTS,\n#       and GRADLE_OPTS) rely on word-splitting, this is performed explicitly;\n#       see the in-line comments for details.\n#\n#       There are tweaks for specific operating systems such as AIX, CygWin,\n#       Darwin, MinGW, and NonStop.\n#\n#   (3) This script is generated from the Groovy template\n#       https://github.com/gradle/gradle/blob/HEAD/platforms/jvm/plugins-application/src/main/resources/org/gradle/api/internal/plugins/unixStartScript.txt\n#       within the Gradle project.\n#\n#       You can find Gradle at https://github.com/gradle/gradle/.\n#\n##############################################################################\n\n# Attempt to set APP_HOME\n\n# Resolve links: $0 may be a link\napp_path=$0\n\n# Need this for daisy-chained symlinks.\nwhile\n    APP_HOME=${app_path%\"${app_path##*/}\"}  # leaves a trailing /; empty if no leading path\n    [ -h \"$app_path\" ]\ndo\n    ls=$( ls -ld \"$app_path\" )\n    link=${ls#*' -> '}\n    case $link in             #(\n      /*)   app_path=$link ;; #(\n      *)    app_path=$APP_HOME$link ;;\n    esac\ndone\n\n# This is normally unused\n# shellcheck disable=SC2034\nAPP_BASE_NAME=${0##*/}\n# Discard cd standard output in case $CDPATH is set (https://github.com/gradle/gradle/issues/25036)\nAPP_HOME=$( cd -P \"${APP_HOME:-./}\" > /dev/null && printf '%s\\n' \"$PWD\" ) || exit\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=maximum\n\nwarn () {\n    echo \"$*\"\n} >&2\n\ndie () {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n} >&2\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\nnonstop=false\ncase \"$( uname )\" in                #(\n  CYGWIN* )         cygwin=true  ;; #(\n  Darwin* )         darwin=true  ;; #(\n  MSYS* | MINGW* )  msys=true    ;; #(\n  NONSTOP* )        nonstop=true ;;\nesac\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=$JAVA_HOME/jre/sh/java\n    else\n        JAVACMD=$JAVA_HOME/bin/java\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=java\n    if ! command -v java >/dev/null 2>&1\n    then\n        die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nfi\n\n# Increase the maximum file descriptors if we can.\nif ! \"$cygwin\" && ! \"$darwin\" && ! \"$nonstop\" ; then\n    case $MAX_FD in #(\n      max*)\n        # In POSIX sh, ulimit -H is undefined. That's why the result is checked to see if it worked.\n        # shellcheck disable=SC2039,SC3045\n        MAX_FD=$( ulimit -H -n ) ||\n            warn \"Could not query maximum file descriptor limit\"\n    esac\n    case $MAX_FD in  #(\n      '' | soft) :;; #(\n      *)\n        # In POSIX sh, ulimit -n is undefined. That's why the result is checked to see if it worked.\n        # shellcheck disable=SC2039,SC3045\n        ulimit -n \"$MAX_FD\" ||\n            warn \"Could not set maximum file descriptor limit to $MAX_FD\"\n    esac\nfi\n\n# Collect all arguments for the java command, stacking in reverse order:\n#   * args from the command line\n#   * the main class name\n#   * -classpath\n#   * -D...appname settings\n#   * --module-path (only if needed)\n#   * DEFAULT_JVM_OPTS, JAVA_OPTS, and GRADLE_OPTS environment variables.\n\n# For Cygwin or MSYS, switch paths to Windows format before running java\nif \"$cygwin\" || \"$msys\" ; then\n    APP_HOME=$( cygpath --path --mixed \"$APP_HOME\" )\n    CLASSPATH=$( cygpath --path --mixed \"$CLASSPATH\" )\n\n    JAVACMD=$( cygpath --unix \"$JAVACMD\" )\n\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    for arg do\n        if\n            case $arg in                                #(\n              -*)   false ;;                            # don't mess with options #(\n              /?*)  t=${arg#/} t=/${t%%/*}              # looks like a POSIX filepath\n                    [ -e \"$t\" ] ;;                      #(\n              *)    false ;;\n            esac\n        then\n            arg=$( cygpath --path --ignore --mixed \"$arg\" )\n        fi\n        # Roll the args list around exactly as many times as the number of\n        # args, so each arg winds up back in the position where it started, but\n        # possibly modified.\n        #\n        # NB: a `for` loop captures its iteration list before it begins, so\n        # changing the positional parameters here affects neither the number of\n        # iterations, nor the values presented in `arg`.\n        shift                   # remove old arg\n        set -- \"$@\" \"$arg\"      # push replacement arg\n    done\nfi\n\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS='\"-Xmx64m\" \"-Xms64m\"'\n\n# Collect all arguments for the java command:\n#   * DEFAULT_JVM_OPTS, JAVA_OPTS, JAVA_OPTS, and optsEnvironmentVar are not allowed to contain shell fragments,\n#     and any embedded shellness will be escaped.\n#   * For example: A user cannot expect ${Hostname} to be expanded, as it is an environment variable and will be\n#     treated as '${Hostname}' itself on the command line.\n\nset -- \\\n        \"-Dorg.gradle.appname=$APP_BASE_NAME\" \\\n        -classpath \"$CLASSPATH\" \\\n        org.gradle.wrapper.GradleWrapperMain \\\n        \"$@\"\n\n# Stop when \"xargs\" is not available.\nif ! command -v xargs >/dev/null 2>&1\nthen\n    die \"xargs is not available\"\nfi\n\n# Use \"xargs\" to parse quoted args.\n#\n# With -n1 it outputs one arg per line, with the quotes and backslashes removed.\n#\n# In Bash we could simply go:\n#\n#   readarray ARGS < <( xargs -n1 <<<\"$var\" ) &&\n#   set -- \"${ARGS[@]}\" \"$@\"\n#\n# but POSIX shell has neither arrays nor command substitution, so instead we\n# post-process each arg (as a line of input to sed) to backslash-escape any\n# character that might be a shell metacharacter, then use eval to reverse\n# that process (while maintaining the separation between arguments), and wrap\n# the whole thing up as a single \"set\" statement.\n#\n# This will of course break if any of these variables contains a newline or\n# an unmatched quote.\n#\n\neval \"set -- $(\n        printf '%s\\n' \"$DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS\" |\n        xargs -n1 |\n        sed ' s~[^-[:alnum:]+,./:=@_]~\\\\&~g; ' |\n        tr '\\n' ' '\n    )\" '\"$@\"'\n\nexec \"$JAVACMD\" \"$@\"\n"
        },
        {
          "name": "gradlew.bat",
          "type": "blob",
          "size": 2.8046875,
          "content": "@rem\n@rem Copyright 2015 the original author or authors.\n@rem\n@rem Licensed under the Apache License, Version 2.0 (the \"License\");\n@rem you may not use this file except in compliance with the License.\n@rem You may obtain a copy of the License at\n@rem\n@rem      https://www.apache.org/licenses/LICENSE-2.0\n@rem\n@rem Unless required by applicable law or agreed to in writing, software\n@rem distributed under the License is distributed on an \"AS IS\" BASIS,\n@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@rem See the License for the specific language governing permissions and\n@rem limitations under the License.\n@rem\n@rem SPDX-License-Identifier: Apache-2.0\n@rem\n\n@if \"%DEBUG%\"==\"\" @echo off\n@rem ##########################################################################\n@rem\n@rem  Gradle startup script for Windows\n@rem\n@rem ##########################################################################\n\n@rem Set local scope for the variables with windows NT shell\nif \"%OS%\"==\"Windows_NT\" setlocal\n\nset DIRNAME=%~dp0\nif \"%DIRNAME%\"==\"\" set DIRNAME=.\n@rem This is normally unused\nset APP_BASE_NAME=%~n0\nset APP_HOME=%DIRNAME%\n\n@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.\nfor %%i in (\"%APP_HOME%\") do set APP_HOME=%%~fi\n\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nset DEFAULT_JVM_OPTS=\"-Xmx64m\" \"-Xms64m\"\n\n@rem Find java.exe\nif defined JAVA_HOME goto findJavaFromJavaHome\n\nset JAVA_EXE=java.exe\n%JAVA_EXE% -version >NUL 2>&1\nif %ERRORLEVEL% equ 0 goto execute\n\necho. 1>&2\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH. 1>&2\necho. 1>&2\necho Please set the JAVA_HOME variable in your environment to match the 1>&2\necho location of your Java installation. 1>&2\n\ngoto fail\n\n:findJavaFromJavaHome\nset JAVA_HOME=%JAVA_HOME:\"=%\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\n\nif exist \"%JAVA_EXE%\" goto execute\n\necho. 1>&2\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME% 1>&2\necho. 1>&2\necho Please set the JAVA_HOME variable in your environment to match the 1>&2\necho location of your Java installation. 1>&2\n\ngoto fail\n\n:execute\n@rem Setup the command line\n\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\n\n\n@rem Execute Gradle\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*\n\n:end\n@rem End local scope for the variables with windows NT shell\nif %ERRORLEVEL% equ 0 goto mainEnd\n\n:fail\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\nrem the _cmd.exe /c_ return code!\nset EXIT_CODE=%ERRORLEVEL%\nif %EXIT_CODE% equ 0 set EXIT_CODE=1\nif not \"\"==\"%GRADLE_EXIT_CONSOLE%\" exit %EXIT_CODE%\nexit /b %EXIT_CODE%\n\n:mainEnd\nif \"%OS%\"==\"Windows_NT\" endlocal\n\n:omega\n"
        },
        {
          "name": "jitpack.yml",
          "type": "blob",
          "size": 0.8330078125,
          "content": "# Licensed to the Apache Software Foundation (ASF) under one or more\n# contributor license agreements.  See the NOTICE file distributed with\n# this work for additional information regarding copyright ownership.\n# The ASF licenses this file to You under the Apache License, Version 2.0\n# (the \"License\"); you may not use this file except in compliance with\n# the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\njdk: oraclejdk9\n\ninstall:\n  - ./gradlew install -x test -x asciidoctor\n"
        },
        {
          "name": "licenses",
          "type": "tree",
          "content": null
        },
        {
          "name": "notices",
          "type": "tree",
          "content": null
        },
        {
          "name": "security",
          "type": "tree",
          "content": null
        },
        {
          "name": "settings.gradle",
          "type": "blob",
          "size": 2.828125,
          "content": "/*\n *  Licensed to the Apache Software Foundation (ASF) under one\n *  or more contributor license agreements.  See the NOTICE file\n *  distributed with this work for additional information\n *  regarding copyright ownership.  The ASF licenses this file\n *  to you under the Apache License, Version 2.0 (the\n *  \"License\"); you may not use this file except in compliance\n *  with the License.  You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing,\n *  software distributed under the License is distributed on an\n *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n *  KIND, either express or implied.  See the License for the\n *  specific language governing permissions and limitations\n *  under the License.\n */\nimport org.gradle.util.GradleVersion\n\npluginManagement {\n    repositories {\n        gradlePluginPortal()\n        mavenCentral()\n//        maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }\n    }\n\n    includeBuild(\"build-logic\")\n}\n\n// check https://gradle.com/enterprise/releases with new versions. GE plugin version should not lag behind Gradle version\nplugins {\n    // Before updating this, please check the compatibility from https://docs.gradle.com/enterprise/compatibility/#develocity_compatibility and https://ge.apache.org/scans.\n    id \"com.gradle.develocity\" version \"3.18.2\"\n    id 'com.gradle.common-custom-user-data-gradle-plugin' version '2.0.2'\n}\n\napply from: 'gradle/build-scans.gradle'\n\ndependencyResolutionManagement {\n    repositories {\n        mavenCentral()\n    }\n}\n\nenableFeaturePreview(\"TYPESAFE_PROJECT_ACCESSORS\")\n\ndef subprojects = [\n        'groovy-all',\n        'groovy-ant',\n        'groovy-astbuilder',\n        'groovy-binary',\n        'groovy-bom',\n        'groovy-cli-commons',\n        'groovy-cli-picocli',\n        'groovy-console',\n        'groovy-contracts',\n        'groovy-datetime',\n        'groovy-dateutil',\n        'groovy-docgenerator',\n        'groovy-groovydoc',\n        'groovy-groovysh',\n        'groovy-jmx',\n        'groovy-json',\n        'groovy-jsr223',\n        'groovy-ginq',\n        'groovy-macro',\n        'groovy-macro-library',\n        'groovy-nio',\n        'groovy-servlet',\n        'groovy-sql',\n        'groovy-swing',\n        'groovy-templates',\n        'groovy-test',\n        'groovy-test-junit5',\n        'groovy-testng',\n        'groovy-toml',\n        'groovy-typecheckers',\n        'groovy-xml',\n        'groovy-yaml',\n        'performance',\n        'tests-preview',\n        'binary-compatibility',\n        'stress'\n]\n\ninclude(subprojects as String[])\n\nrootProject.children.each { prj ->\n    prj.projectDir = new File(\"$rootDir/subprojects/$prj.name\")\n}\n\nrootProject.name = 'groovy'\n\nenableFeaturePreview('GROOVY_COMPILATION_AVOIDANCE')\nSystem.setProperty(\"sonar.gradle.skipCompile\", \"true\")\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "subprojects",
          "type": "tree",
          "content": null
        },
        {
          "name": "versions.properties",
          "type": "blob",
          "size": 1.7353515625,
          "content": "# Licensed to the Apache Software Foundation (ASF) under one or more\n# contributor license agreements.  See the NOTICE file distributed with\n# this work for additional information regarding copyright ownership.\n# The ASF licenses this file to You under the Apache License, Version 2.0\n# (the \"License\"); you may not use this file except in compliance with\n# the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nant=1.10.15\nasciidoctorj=2.5.11\n# later asciidoctorDiagram versions seem to break some diagrams\nasciidoctorDiagram=2.2.17\nasciidoctorPdf=2.3.19\nasciidoctorGroovyDsl=2.0.2\nasm=9.7.1\nantlr4=4.13.2.4\nbridger=1.6.Final\ncheckstyle=10.21.1\ncodenarc=3.5.0-groovy-4.0\ncobertura=1.9.4.1\ncommonsCli=1.9.0\ncommonsMath3=3.6.1\ngpars=1.2.1\nivy=2.5.3\njansi=2.4.1\njacksonDatabind=2.18.2\njackson=2.18.2\n# later jarjar versions sometimes leave empty META-INF/services files, see also https://github.com/eed3si9n/jarjar-abrams/issues/60\njarjar=1.8.0\njavaParser=3.26.3\njline=2.14.6\njmh=1.37\njruby=9.2.17.0\njunit=4.13.2\njunit5=5.11.4\njunit5Platform=1.11.4\nlog4j=1.2.17\nlog4j2=2.24.3\nlogback=1.5.16\nopenbeans=1.0.2\npicocli=4.7.6\nqdox=2.2.0\nslf4j=2.0.16\nxmlunit=1.6\nxstream=1.4.21\n# running with Groovy 5 can be allowed with -Dspock.iKnowWhatImDoing.disableGroovyVersionCheck=true\nspock=2.3-groovy-4.0\nspotbugs=4.8.6\njcipAnnotations=1.0\ntreelayout=1.0.3\njakartaServletApi=6.0.0\njakartaServerPagesApi=3.1.1\njqwik=1.9.2\n"
        },
        {
          "name": "xdocs",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}