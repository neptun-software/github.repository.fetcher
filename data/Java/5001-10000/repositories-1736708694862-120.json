{
  "metadata": {
    "timestamp": 1736708694862,
    "page": 120,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "crazycodeboy/TakePhoto",
      "stars": 7238,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.396484375,
          "content": "# Created by .ignore support plugin (hsz.mobi)\n### Android template\n# Built application files\n#*.apk\n*.ap_\n\n# Files for the Dalvik VM\n*.dex\n\n# Java class files\n*.class\n\n# Generated files\nbin/\ngen/\n\n# Gradle files\n.gradle/\nbuild/\n/*/build/\n\n# Local configuration file (sdk path, etc)\nlocal.properties\n\n# Proguard folder generated by Eclipse\nproguard/\n\n# Log Files\n*.log\n\n\n### JetBrains template\n# Covers JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm, CLion\n\n*.iml\n\n## Directory-based project format:\n.idea/\n# if you remove the above rule, at least ignore the following:\n\n# User-specific stuff:\n# .idea/workspace.xml\n# .idea/tasks.xml\n# .idea/dictionaries\n\n# Sensitive or high-churn files:\n# .idea/dataSources.ids\n# .idea/dataSources.xml\n# .idea/sqlDataSources.xml\n# .idea/dynamic.xml\n# .idea/uiDesigner.xml\n\n# Gradle:\n# .idea/gradle.xml\n# .idea/libraries\n\n# Mongo Explorer plugin:\n# .idea/mongoSettings.xml\n\n## File-based project format:\n*.ipr\n*.iws\n\n## Plugin-specific files:\n\n# IntelliJ\n/out/\n\n# mpeltonen/sbt-idea plugin\n.idea_modules/\n\n# JIRA plugin\natlassian-ide-plugin.xml\n\n# Crashlytics plugin (for Android Studio and IntelliJ)\ncom_crashlytics_export_strings.xml\ncrashlytics.properties\ncrashlytics-build.properties\n\n\n### Gradle template\n.gradle\n\n# Ignore Gradle GUI config\ngradle-app.setting\n\n# Avoid ignoring Gradle wrapper jar file (.jar files are usually ignored)\n!gradle-wrapper.jar\n\n###\nandroid-crop\n\n\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.091796875,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright {yyyy} {name of copyright owner}\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n"
        },
        {
          "name": "README -V1.0+.md",
          "type": "blob",
          "size": 4.08203125,
          "content": "## [TakePhoto](https://github.com/crazycodeboy/TakePhoto) 简介    \n`TakePhoto`是一款用于Android设备获取照片（拍照或从相册、文件中选择）、裁剪图片、压缩图片的开源工具库，目前最新版本**[2.0.0已发布，请使用最新版](https://github.com/crazycodeboy/TakePhoto)**。   \n\n**V1.0+**  \n\n- 支持以拍照的方式获取照片 \n- 支持从相册选择照片  \n- 支持对照片进行裁切\n- 支持对照片进行压缩\n- 支持对裁切及压缩参数自定义  \n- 支持因拍照Activity被回收后的自动恢复   \n\nGitHub地址： [https://github.com/crazycodeboy/TakePhoto](https://github.com/crazycodeboy/TakePhoto)\n## 如何使用   \n### 使用TakePhoto有以下两种方式：\n**方式一：通过继承的方式**  \n1. 继承TakePhotoActivity、TakePhotoFragmentActivity、TakePhotoFragment三者之一。  \n2. 通过`getTakePhoto()`获取TakePhoto实例进行相关操作。  \n3. 重写以下方法获取结果        \n```java\nvoid takeSuccess(String imagePath);  \nvoid takeFail(String msg);\nvoid takeCancel();\n```  \n此方式使用简单，满足的大部分的使用需求，具体使用详见simple。如果通过继承的方式无法满足实际项目的使用，可以通过下面介绍的方式。  \n\n**方式二：通过组装的方式**  \n1. 获取TakePhoto实例`TakePhoto takePhoto=new TakePhotoImpl(getActivity(),this);`  \n2. 在 `onCreate`,`onActivityResult`,`onSaveInstanceState`方法中调用TakePhoto对用的方法。  \n3. 调用TakePhoto实例进行相关操作。  \n4. 在`TakeResultListener`相关方法中获取结果。      \n### 关于压缩照片 \n你可以选择是否对照片进行压缩处理。  \n```java\n /**\n  * 启用照片压缩\n  * @param config 压缩照片配置\n  * @param showCompressDialog 压缩时是否显示进度对话框\n  * @return \n  */\n TakePhoto onEnableCompress(CompressConfig config,boolean showCompressDialog);\n```\neg：  \n`getTakePhoto().onEnableCompress(new CompressConfig.Builder().setMaxSize(50*1024).setMaxPixel(800).create(),true).onPicSelectCrop(imageUri);`  \n如果你启用了照片压缩，TakePhoto会使用`CompressImage`对照片进行压缩处理，CompressImage目前支持对照片的尺寸以及照片的质量进行压缩。默认情况下，CompressImage开启了尺寸与质量双重压缩，\n你可以通过CompressConfig.Builder对照片压缩后的尺寸以及质量进行相关设置。如果你想改变压缩的方式可以通过CompressConfig.Builder进行相关设置。  \n## 关于兼容性问题  \nTakePhoto是基于Android官方标准API编写的，适配了目前市场上主流的Rom。如果你在使用过程中发现了适配问题，可以提交Issues。   \n1. 为适配部分手机拍照时会回收Activity,TakePhoto在`onSaveInstanceState`与 `onCreate`做了相应的恢复处理。  \n2. 为适配部分手机拍照或从相册选择照片时屏幕方向会发生转变,从而导致拍照失败的问题，可以在AndroidManifest.xml中对使用了TakePhoto的Activity添加android:configChanges=\"orientation|keyboardHidden|screenSize\"配置。  \neg:  \n```\n<activity\n    android:name=\".MainActivity\"\n    android:screenOrientation=\"portrait\"\n    android:configChanges=\"orientation|keyboardHidden|screenSize\"\n    android:label=\"@string/app_name\" >\n    <intent-filter>\n        <action android:name=\"android.intent.action.MAIN\" />\n        <category android:name=\"android.intent.category.LAUNCHER\" />\n    </intent-filter>\n</activity>\n```\n\n## 在项目中使用    \n为方便大家使用，现已将TakePhoto发布到JCenter(如果你对如何将项目发布到JCenter感兴趣可以参考：《[教你轻松将Android library 发布到JCenter](http://blog.csdn.net/fengyuzhengfan/article/details/51407009))》  \nGradle:  \n```groovy \n    compile 'com.jph.takephoto:takephoto_library:1.0.1'\n```\n\nMaven:  \n```groovy \n<dependency>\n  <groupId>com.jph.takephoto</groupId>\n  <artifactId>takephoto_library</artifactId>\n  <version>1.0.1</version>\n  <type>pom</type>\n</dependency>\n```  \n## 最后  \n如果你对[TakePhoto](https://github.com/crazycodeboy/TakePhoto)有更好的建议或想改造它，欢迎大家Fork and Pull requests。  \n"
        },
        {
          "name": "README.2+.md",
          "type": "blob",
          "size": 8.3525390625,
          "content": "## [TakePhoto](https://github.com/crazycodeboy/TakePhoto) 简介  \n`TakePhoto`是一款用于在Android设备上获取照片（拍照或从相册、文件中选择）、裁剪图片、压缩图片的开源工具库，目前最新版本[2.0.4](https://github.com/crazycodeboy/TakePhoto/)。  \n2.0以下版本及API说明，详见[TakePhoto1.0+](https://github.com/crazycodeboy/TakePhoto/blob/master/README%20-V1.0+.md)。  \n\n**V2.0**    \n\n- 支持通过相机拍照获取图片\n- 支持从相册选择图片\n- 支持从文件选择图片  \n- 支持对图片进行压缩\n- 支持对图片进行裁剪\n- 支持对裁剪及压缩参数个性化配置  \n- 提供自带裁剪工具(可选)  \n- 支持智能选取及裁剪异常处理\n- 支持因拍照Activity被回收后的自动恢复   \n\nGitHub地址： [https://github.com/crazycodeboy/TakePhoto](https://github.com/crazycodeboy/TakePhoto)\n\n## 预览图  \n\n运行效果图：    \n\n![运行效果图](https://raw.githubusercontent.com/crazycodeboy/TakePhoto/master/Screenshots/%E9%A2%84%E8%A7%88%E5%9B%BE.jpg)\n\n\n## 如何使用   \n\n### 使用TakePhoto有以下两种方式：\n**方式一：通过继承的方式**  \n1. 继承`TakePhotoActivity`、`TakePhotoFragmentActivity`、`TakePhotoFragment`三者之一。  \n2. 通过`getTakePhoto()`获取`TakePhoto`实例进行相关操作。  \n3. 重写以下方法获取结果        \n\n```java\nvoid takeSuccess(String imagePath);  \nvoid takeFail(String msg);\nvoid takeCancel();\n```  \n此方式使用简单，满足的大部分的使用需求，具体使用详见simple。如果通过继承的方式无法满足实际项目的使用，可以通过下面介绍的方式。  \n\n**方式二：通过组装的方式**  \n1. 获取TakePhoto实例`TakePhoto takePhoto=new TakePhotoImpl(getActivity(),this);`  \n2. 在 `onCreate`,`onActivityResult`,`onSaveInstanceState`方法中调用TakePhoto对用的方法。  \n3. 调用TakePhoto实例进行相关操作。  \n4. 在`TakeResultListener`相关方法中获取结果。      \n\n### 获取图片\nTakePhoto提供拍照，从相册选择，从文件中选择三种方式获取图片。    \n\n#### API:\n\n```java\n/**\n * 从文件中获取图片（不裁剪）\n */\nvoid onPickFromDocuments();\n/**\n * 从相册中获取图片（不裁剪）\n */\nvoid onPickFromGallery();\n/**\n * 从相机获取图片(不裁剪)\n * @param outPutUri 图片保存的路径\n */\nvoid onPickFromCapture(Uri outPutUri);\n```\n以上三种方式均提供对应的裁剪API，详见：[裁剪图片](https://github.com/crazycodeboy/TakePhoto#裁剪图片)。    \n**注：**  \n由于不同Android Rom厂商对系统有不同程度的定制，有可能导致某种选择图片的方式不支持，所以为了提高`TakePhoto`的兼容性，当某种选的图片的方式不支持时，`TakePhoto`会自动切换成使用另一种选择图片的方式进行图片选择。      \n\n### 裁剪图片  \n\n#### API  \n`TakePhoto`支持对图片进行裁剪，无论是拍照的照片,还是从相册、文件中选择的图片。你只需要调用`TakePhoto`的相应方法即可：  \n\n```java\n/**\n * 从相机获取图片并裁剪\n * @param outPutUri 图片裁剪之后保存的路径\n * @param options 裁剪配置             \n */\nvoid onPickFromCaptureWithCrop(Uri outPutUri, CropOptions options);\n/**\n * 从相册中获取图片并裁剪\n * @param outPutUri 图片裁剪之后保存的路径\n * @param options 裁剪配置\n */\nvoid onPickFromGalleryWithCrop(Uri outPutUri, CropOptions options);\n/**\n * 从文件中获取图片并裁剪\n * @param outPutUri 图片裁剪之后保存的路径\n * @param options 裁剪配置\n */\nvoid onPickFromDocumentsWithCrop(Uri outPutUri, CropOptions options);\n```   \n#### 对指定图片进行裁剪     \n另外，TakePhoto也支持你对指定图片进行裁剪：     \n\n```java\n/**\n * 裁剪图片\n * @param imageUri 要裁剪的图片\n * @param outPutUri 图片裁剪之后保存的路径\n * @param options 裁剪配置\n */\nvoid onCrop(Uri imageUri, Uri outPutUri, CropOptions options)throws TException;\n```\n\n#### CropOptions\n`CropOptions`是用于裁剪的配置类，通过它你可以对图片的裁剪比例，最大输出大小，以及是否使用`TakePhoto`自带的裁剪工具进行裁剪等，进行个性化配置。    \n\n**Usage:**  \n\n```java\n CropOptions cropOptions=new CropOptions.Builder().setAspectX(1).setAspectY(1).setWithOwnCrop(true).create();  \n getTakePhoto().onPickFromDocumentsWithCrop(imageUri,cropOptions);  \n //或  \n getTakePhoto().onCrop(imageUri,outPutUri,cropOptions);  \n\n```\n\n**注：**  \n由于不同Android Rom厂商对系统有不同程度的定制，有可能系统中没有自带或第三方的裁剪工具，所以为了提高`TakePhoto`的兼容性，当系统中没有自带或第三方裁剪工具时，`TakePhoto`会自动切换到使用`TakePhoto`自带的裁剪工具进行裁剪。  \n\n\n### 压缩图片\n你可以选择是否对图片进行压缩处理，你只需要告诉它你是否要启用压缩功能以及`CompressConfig`即可。  \n\n#### API\n```java\n /**\n  * 启用图片压缩\n  * @param config 压缩图片配置\n  * @param showCompressDialog 压缩时是否显示进度对话框\n  * @return\n  */\n TakePhoto onEnableCompress(CompressConfig config,boolean showCompressDialog);\n```\n\n**Usage:**  \n\n```java\ngetTakePhoto().onEnableCompress(compressConfig,true).onPickFromGalleryWithCrop(imageUri,cropOptions);\n```  \n如果你启用了图片压缩，`TakePhoto`会使用`CompressImage`对图片进行压缩处理，`CompressImage`目前支持对图片的尺寸以及图片的质量进行压缩。默认情况下，`CompressImage`开启了尺寸与质量双重压缩。  \n\n#### 对指定图片进行压缩  \n另外，你也可以对指定图片进行压缩：    \n**Usage:**  \n\n```java\nnew CompressImageImpl(compressConfig).compress(picturePath, new CompressImage.CompressListener() {\n    @Override\n    public void onCompressSuccess(String imgPath) {//图片压缩成功\n\n    }\n    @Override\n    public void onCompressFailed(String imagePath,String msg) {//图片压缩失败\n\n    }\n});\n```\n\n#### CompressConfig  \n`CompressConfig`是用于图片压缩的配置类，你可以通过`CompressConfig.Builder`对图片压缩后的尺寸以及质量进行相关设置。如果你想改变压缩的方式可以通过`CompressConfig.Builder`进行相关设置。     \n**Usage:**   \n\n```java\nCompressConfig compressConfig=new CompressConfig.Builder().setMaxSize(50*1024).setMaxPixel(800).create();\ngetTakePhoto().onEnableCompress(compressConfig,true).onPickFromGallery();\n```\n\n\n## 兼容性\n\n### TakePhoto在深度兼容性方面的测试    \n![兼容性测试报告](https://raw.githubusercontent.com/crazycodeboy/TakePhoto/master/Screenshots/%E5%85%BC%E5%AE%B9%E6%80%A7%E6%B5%8B%E8%AF%95.jpg)\n\n### 获取更高的兼容性    \n`TakePhot`o是基于Android官方标准API编写的，适配了目前市场上主流的Rom。如果你在使用过程中发现了适配问题，可以[提交Issues](https://github.com/crazycodeboy/TakePhoto/issues)。   \n1. 为适配部分手机拍照时会回收`Activity`，`TakePhoto`在`onSaveInstanceState`与 `onCreate`做了相应的恢复处理。  \n2. 为适配部分手机拍照或从相册选择图片时屏幕方向会发生转变,从而导致拍照失败的问题，可以在AndroidManifest.xml中对使用了`TakePhoto`的`Activity`添加android:configChanges=\"orientation|keyboardHidden|screenSize\"配置。  \neg:  \n\n```\n<activity\n    android:name=\".MainActivity\"\n    android:screenOrientation=\"portrait\"\n    android:configChanges=\"orientation|keyboardHidden|screenSize\"\n    android:label=\"@string/app_name\" >\n    <intent-filter>\n        <action android:name=\"android.intent.action.MAIN\" />\n        <category android:name=\"android.intent.category.LAUNCHER\" />\n    </intent-filter>\n</activity>\n```\n\n## 在项目中使用    \n为方便大家使用，现已将TakePhoto V2.0.4发布到JCenter(如果你对如何将项目发布到JCenter感兴趣可以参考：《[教你轻松将Android library 发布到JCenter](http://blog.csdn.net/fengyuzhengfan/article/details/51407009))》  \nGradle:  \n\n```groovy\n    compile 'com.jph.takephoto:takephoto_library:2.0.4'\n```\n\nMaven:  \n\n```groovy\n<dependency>\n  <groupId>com.jph.takephoto</groupId>\n  <artifactId>takephoto_library</artifactId>\n  <version>2.0.4</version>\n  <type>pom</type>\n</dependency>\n```  \n\n## 最后  \n如果你对[TakePhoto](https://github.com/crazycodeboy/TakePhoto)有更好的建议或想改造它，欢迎大家[Fork and Pull requests](https://github.com/crazycodeboy/TakePhoto)。  \n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 17.896484375,
          "content": "## [TakePhoto](https://github.com/crazycodeboy/TakePhoto) 简介\n\n[![PRs Welcome](https://img.shields.io/badge/PRs-Welcome-brightgreen.svg)](https://github.com/crazycodeboy/TakePhoto/pulls)\n[![Download](https://api.bintray.com/packages/crazycodeboy/maven/TakePhoto/images/download.svg) ](https://bintray.com/crazycodeboy/maven/TakePhoto/_latestVersion)\n[![GitHub release](https://img.shields.io/github/release/crazycodeboy/TakePhoto.svg?maxAge=2592000?style=flat-square)](https://github.com/crazycodeboy/TakePhoto/releases)\n[![License Apache2.0](http://img.shields.io/badge/license-Apache2.0-brightgreen.svg?style=flat)](https://raw.githubusercontent.com/crazycodeboy/TakePhoto/master/LICENSE)\n\n\n\n`TakePhoto`是一款用于在Android设备上获取照片（拍照或从相册、文件中选择）、裁剪图片、压缩图片的开源工具库，目前最新版本[4.1.0](https://github.com/crazycodeboy/TakePhoto/)。\n3.0以下版本及API说明，详见[TakePhoto2.0+](https://github.com/crazycodeboy/TakePhoto/blob/master/README.2+.md)。  \n\n>TakePhoto交流平台：QQ群：556387607（群1，未满）\n\n**V4.0**\n\n- 支持通过相机拍照获取图片\n- 支持从相册选择图片\n- 支持从文件选择图片  \n- 支持批量图片选取\n- 支持图片压缩以及批量图片压缩\n- 支持图片裁切以及批量图片裁切\n- 支持照片旋转角度自动纠正\n- 支持自动权限管理(无需关心SD卡及摄像头权限等问题)\n- 支持对裁剪及压缩参数个性化配置  \n- 提供自带裁剪工具(可选)  \n- 支持智能选取及裁剪异常处理\n- 支持因拍照Activity被回收后的自动恢复   \n- 支持Android8.1\n- +支持多种压缩工具\n- +支持多种图片选择工具\n\nGitHub地址： [https://github.com/crazycodeboy/TakePhoto](https://github.com/crazycodeboy/TakePhoto)\n## 目录\n\n- [安装说明](#安装说明)\n- [演示](#演示)\n- [使用说明](#使用说明)\n- [自定义UI](#自定义ui)\n- [API](#api)\n- [兼容性](#兼容性)\n- [贡献](#贡献)\n- [更新说明](#更新说明)\n- [最后](#混淆)\n\n## 安装说明  \n**Gradle:**  \n\n```groovy\n    compile 'com.jph.takephoto:takephoto_library:4.1.0'\n```\n\n**Maven:**  \n\n```groovy\n<dependency>\n  <groupId>com.jph.takephoto</groupId>\n  <artifactId>takephoto_library</artifactId>\n  <version>4.1.0</version>\n  <type>pom</type>\n</dependency>\n```  \n\n\n## 演示 \n\n运行效果图：    \n![预览图](https://raw.githubusercontent.com/crazycodeboy/TakePhoto/master/Screenshots/takephoto_preview.png)\n![运行效果图](https://raw.githubusercontent.com/crazycodeboy/TakePhoto/master/Screenshots/%E9%A2%84%E8%A7%88%E5%9B%BE.jpg)\n\n\n## 使用说明   \n\n### 使用TakePhoto有以下两种方式：\n**方式一：通过继承的方式**  \n1. 继承`TakePhotoActivity`、`TakePhotoFragmentActivity`、`TakePhotoFragment`三者之一。  \n2. 通过`getTakePhoto()`获取`TakePhoto`实例进行相关操作。  \n3. 重写以下方法获取结果        \n\n```java\n void takeSuccess(TResult result);\n void takeFail(TResult result,String msg);\n void takeCancel();\n```  \n此方式使用简单，满足的大部分的使用需求，具体使用详见[simple](https://github.com/crazycodeboy/TakePhoto/blob/master/simple/src/main/java/com/jph/simple/SimpleActivity.java)。如果通过继承的方式无法满足实际项目的使用，可以通过下面介绍的方式。  \n\n**方式二：通过组装的方式**  \n\n可参照：[TakePhotoActivity](https://github.com/crazycodeboy/TakePhoto/blob/master/takephoto_library/src/main/java/com/jph/takephoto/app/TakePhotoActivity.java)，以下为主要步骤：  \n\n1.实现`TakePhoto.TakeResultListener,InvokeListener`接口。\n\n2.在 `onCreate`,`onActivityResult`,`onSaveInstanceState`方法中调用TakePhoto对用的方法。  \n\n3.重写`onRequestPermissionsResult(int requestCode, String[] permissions, int[] grantResults)`，添加如下代码。\n\n```java\n  @Override\n    public void onRequestPermissionsResult(int requestCode, String[] permissions, int[] grantResults) {\n        super.onRequestPermissionsResult(requestCode, permissions, grantResults);\n        //以下代码为处理Android6.0、7.0动态权限所需\n        TPermissionType type=PermissionManager.onRequestPermissionsResult(requestCode,permissions,grantResults);\n        PermissionManager.handlePermissionsResult(this,type,invokeParam,this);\n    }\n```    \n\n4.重写`TPermissionType invoke(InvokeParam invokeParam)`方法，添加如下代码：  \n\n```java\n @Override\n    public TPermissionType invoke(InvokeParam invokeParam) {\n        TPermissionType type=PermissionManager.checkPermission(TContextWrap.of(this),invokeParam.getMethod());\n        if(TPermissionType.WAIT.equals(type)){\n            this.invokeParam=invokeParam;\n        }\n        return type;\n    }\n```\n\n5.添加如下代码获取TakePhoto实例：  \n\n```java\n   /**\n     *  获取TakePhoto实例\n     * @return\n     */\n    public TakePhoto getTakePhoto(){\n        if (takePhoto==null){\n            takePhoto= (TakePhoto) TakePhotoInvocationHandler.of(this).bind(new TakePhotoImpl(this,this));\n        }\n        return takePhoto;\n    }    \n```\n\n## 自定义UI\n\nTakePhoto不仅支持对相关参数的自定义，也支持对UI的自定义，下面就像大家介绍如何自定义TakePhoto的相册与裁剪工具的UI。\n\n### 自定义相册\n如果TakePhoto自带相册的UI不符合你应用的主题的话，你可以对它进行自定义。方法如下：   \n\n#### 自定义Toolbar \n\n在“res/layout”目录中创建一个名为“toolbar.xml”的布局文件，内容如下：   \n\n```xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<android.support.v7.widget.Toolbar xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"?attr/actionBarSize\"\n    app:theme=\"@style/CustomToolbarTheme\"\n    android:background=\"#ffa352\">\n</android.support.v7.widget.Toolbar>\n```\n\n在“toolbar.xml”文件中你可以指定TakePhoto自带相册的主题以及Toolbar的背景色。\n\n#### 自定义状态栏\n\n在“res/values”目录中创建一个名为“colors.xml”的资源文件，内容如下： \n\n```xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<resources>\n    <color name=\"multiple_image_select_primaryDark\">#212121</color>\n</resources>\n```\n\n通过上述方式便可以自定义状态栏的颜色。\n\n#### 自定义提示文字\n\n在“res/values”目录的“string.xml”文件冲添加如下代码：\n\n```xml\n<resources>    \n    <string name=\"album_view\">选择图片</string>\n    <string name=\"image_view\">单击选择</string>\n    <string name=\"add\">确定</string>\n    <string name=\"selected\">已选</string>\n    <string name=\"limit_exceeded\">最多能选 %d 张</string>\n</resources>\n```\n\n重写上述代码，便可以自定义TakePhoto自带相册的提示文字。\n\n### 自定义裁切工具\n\n在“res/layout”目录中创建一个名为“crop__activity_crop.xml”与“crop__layout_done_cancel.xml”的布局文件，内容如下：  \n\n**crop__activity_crop.xml**  \n\n```xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<RelativeLayout\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\">\n    <com.soundcloud.android.crop.CropImageView\n        android:id=\"@+id/crop_image\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:layout_alignParentTop=\"true\"\n        android:background=\"@drawable/crop__texture\"\n        android:layout_above=\"@+id/done_cancel_bar\" />\n    <include\n        android:id=\"@+id/done_cancel_bar\"\n        android:layout_alignParentBottom=\"true\"\n        layout=\"@layout/crop__layout_done_cancel\"\n        android:layout_height=\"50dp\"\n        android:layout_width=\"match_parent\" />\n</RelativeLayout>\n```\n\n**crop__layout_done_cancel.xml**  \n\n```xml\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    style=\"@style/Crop.DoneCancelBar\">\n    <FrameLayout\n        android:id=\"@+id/btn_cancel\"\n        style=\"@style/Crop.ActionButton\">\n        <TextView style=\"@style/Crop.ActionButtonText.Cancel\" />\n    </FrameLayout>\n    <FrameLayout\n        android:id=\"@+id/btn_done\"\n        style=\"@style/Crop.ActionButton\">\n        <TextView style=\"@style/Crop.ActionButtonText.Done\" />\n    </FrameLayout>\n</LinearLayout>\n```\n\n重写上述代码，便可以自定义TakePhoto裁切工具的UI。\n\n## API\n\n### 获取图片\nTakePhoto提供拍照，从相册选择，从文件中选择三种方式获取图片。    \n\n#### API:\n\n```java\n/**\n * 从文件中获取图片（不裁剪）\n */\nvoid onPickFromDocuments();\n/**\n * 从相册中获取图片（不裁剪）\n */\nvoid onPickFromGallery();\n/**\n * 从相机获取图片(不裁剪)\n * @param outPutUri 图片保存的路径\n */\nvoid onPickFromCapture(Uri outPutUri);\n/**\n * 图片多选\n * @param limit 最多选择图片张数的限制\n **/\nvoid onPickMultiple(int limit);\n```\n以上三种方式均提供对应的裁剪API，详见：[裁剪图片](https://github.com/crazycodeboy/TakePhoto#裁剪图片)。    \n**注：**  \n由于不同Android Rom厂商对系统有不同程度的定制，有可能导致某种选择图片的方式不支持，所以为了提高`TakePhoto`的兼容性，当某种选的图片的方式不支持时，`TakePhoto`会自动切换成使用另一种选择图片的方式进行图片选择。      \n\n### 裁剪图片  \n\n#### API  \n`TakePhoto`支持对图片进行裁剪，无论是拍照的照片,还是从相册、文件中选择的图片。你只需要调用`TakePhoto`的相应方法即可：  \n\n```java\n/**\n * 从相机获取图片并裁剪\n * @param outPutUri 图片裁剪之后保存的路径\n * @param options 裁剪配置             \n */\nvoid onPickFromCaptureWithCrop(Uri outPutUri, CropOptions options);\n/**\n * 从相册中获取图片并裁剪\n * @param outPutUri 图片裁剪之后保存的路径\n * @param options 裁剪配置\n */\nvoid onPickFromGalleryWithCrop(Uri outPutUri, CropOptions options);\n/**\n * 从文件中获取图片并裁剪\n * @param outPutUri 图片裁剪之后保存的路径\n * @param options 裁剪配置\n */\nvoid onPickFromDocumentsWithCrop(Uri outPutUri, CropOptions options);\n/**\n * 图片多选，并裁切\n * @param limit 最多选择图片张数的限制\n * @param options  裁剪配置\n * */\nvoid onPickMultipleWithCrop(int limit, CropOptions options);\n```   \n#### 对指定图片进行裁剪     \n另外，TakePhoto也支持你对指定图片进行裁剪：     \n\n```java\n/**\n * 裁剪图片\n * @param imageUri 要裁剪的图片\n * @param outPutUri 图片裁剪之后保存的路径\n * @param options 裁剪配置\n */\nvoid onCrop(Uri imageUri, Uri outPutUri, CropOptions options)throws TException;\n/**\n * 裁剪多张图片\n * @param multipleCrop 要裁切的图片的路径以及输出路径\n * @param options 裁剪配置\n */\nvoid onCrop(MultipleCrop multipleCrop, CropOptions options)throws TException;\n```\n\n#### CropOptions\n`CropOptions`是用于裁剪的配置类，通过它你可以对图片的裁剪比例，最大输出大小，以及是否使用`TakePhoto`自带的裁剪工具进行裁剪等，进行个性化配置。    \n\n**Usage:**  \n\n```java\n CropOptions cropOptions=new CropOptions.Builder().setAspectX(1).setAspectY(1).setWithOwnCrop(true).create();  \n getTakePhoto().onPickFromDocumentsWithCrop(imageUri,cropOptions);  \n //或  \n getTakePhoto().onCrop(imageUri,outPutUri,cropOptions);  \n\n```\n\n**注：**  \n由于不同Android Rom厂商对系统有不同程度的定制，有可能系统中没有自带或第三方的裁剪工具，所以为了提高`TakePhoto`的兼容性，当系统中没有自带或第三方裁剪工具时，`TakePhoto`会自动切换到使用`TakePhoto`自带的裁剪工具进行裁剪。  \n\n>另外TakePhoto4.0+支持指定使用TakePhoto自带相册,如：`takePhoto.setTakePhotoOptions(new TakePhotoOptions.Builder().setWithOwnGallery(true).create());`\n详情可参考:[Demo](https://github.com/crazycodeboy/TakePhoto/blob/master/simple/src/main/java/com/jph/simple/CustomHelper.java)\n\n### 压缩图片\n你可以选择是否对图片进行压缩处理，你只需要告诉它你是否要启用压缩功能以及`CompressConfig`即可。  \n\n#### API\n```java\n /**\n  * 启用图片压缩\n  * @param config 压缩图片配置\n  * @param showCompressDialog 压缩时是否显示进度对话框\n  * @return\n  */\n void onEnableCompress(CompressConfig config,boolean showCompressDialog);\n```\n\n**Usage:**  \n\n```java\nTakePhoto takePhoto=getTakePhoto();\ntakePhoto.onEnableCompress(compressConfig,true);\ntakePhoto.onPickFromGallery();\n```  \n如果你启用了图片压缩，`TakePhoto`会使用`CompressImage`对图片进行压缩处理，`CompressImage`目前支持对图片的尺寸以及图片的质量进行压缩。默认情况下，`CompressImage`开启了尺寸与质量双重压缩。  \n\n#### 对指定图片进行压缩  \n另外，你也可以对指定图片进行压缩：    \n**Usage:**  \n\n```java\nnew CompressImageImpl(compressConfig,result.getImages(), new CompressImage.CompressListener() {\n    @Override\n    public void onCompressSuccess(ArrayList<TImage> images) {\n        //图片压缩成功\n    }\n    @Override\n    public void onCompressFailed(ArrayList<TImage> images, String msg) {\n        //图片压缩失败\n    }\n}).compress();\n```\n\n#### CompressConfig  \n`CompressConfig`是用于图片压缩的配置类，你可以通过`CompressConfig.Builder`对图片压缩后的尺寸以及质量进行相关设置。如果你想改变压缩的方式可以通过`CompressConfig.Builder`进行相关设置。     \n**Usage:**   \n\n```java\nCompressConfig compressConfig=new CompressConfig.Builder().setMaxSize(50*1024).setMaxPixel(800).create();\n```\n#### 指定压缩工具\n\n#### 使用TakePhoto压缩工具进行压缩： \n\n```\nCompressConfig config=new CompressConfig.Builder()\n                    .setMaxSize(maxSize)\n                    .setMaxPixel(width>=height? width:height)\n                    .create();\ntakePhoto.onEnableCompress(config,showProgressBar);\n```\n\n#### 使用Luban进行压缩： \n```\nLubanOptions option=new LubanOptions.Builder()\n                    .setGear(Luban.CUSTOM_GEAR)\n                    .setMaxHeight(height)\n                    .setMaxWidth(width)\n                    .setMaxSize(maxSize)\n                    .create();\nCompressConfig config=CompressConfig.ofLuban(option);\ntakePhoto.onEnableCompress(config,showProgressBar);\n```\n\n>详情可参考Demo:[CustomHelper.java](https://github.com/crazycodeboy/TakePhoto/blob/master/simple/src/main/java/com/jph/simple/CustomHelper.java)\n\n\n## 兼容性\n\n### Android6.0\n由于Android6.0新增了\"运行时权限控制(Runtime Permissions)\"，为了应对这一改变，TakePhoto加入和自动权限管理，当TakePhoto检测到需要权限时，TakePhoto会自动申请权限，所以小伙伴们不用担心权限的使用问题。\n\n### Android7.0  \n\n在Android N中，Android 框架执行了 StrictMode，应用间共享文件和以前也有所区别。为了适配Android7.0的改变，同时也为了方便大家使用TakePhoto，TakePhoto会自动根据手机的Android版本自行适配，小伙伴们依旧可以向TakePhoto传递`Uri imageUri = Uri.fromFile(file);`类型的Uri而不用担心兼容性问题。\n\n### TakePhoto在深度兼容性方面的测试    \n![兼容性测试报告](https://raw.githubusercontent.com/crazycodeboy/TakePhoto/master/Screenshots/%E5%85%BC%E5%AE%B9%E6%80%A7%E6%B5%8B%E8%AF%95.jpg)\n\n### 获取更高的兼容性    \n`TakePhot`o是基于Android官方标准API编写的，适配了目前市场上主流的Rom。如果你在使用过程中发现了适配问题，可以[提交Issues](https://github.com/crazycodeboy/TakePhoto/issues)。   \n1. 为适配部分手机拍照时会回收`Activity`，`TakePhoto`在`onSaveInstanceState`与 `onCreate`做了相应的恢复处理。  \n2. 为适配部分手机拍照或从相册选择图片时屏幕方向会发生转变,从而导致拍照失败的问题，可以在AndroidManifest.xml中对使用了`TakePhoto`的`Activity`添加android:configChanges=\"orientation|keyboardHidden|screenSize\"配置。  \neg:  \n\n```\n<activity\n    android:name=\".MainActivity\"\n    android:screenOrientation=\"portrait\"\n    android:configChanges=\"orientation|keyboardHidden|screenSize\"\n    android:label=\"@string/app_name\" >\n    <intent-filter>\n        <action android:name=\"android.intent.action.MAIN\" />\n        <category android:name=\"android.intent.category.LAUNCHER\" />\n    </intent-filter>\n</activity>\n```\n\n## 贡献  \n如果你在使用TakePhoto中遇到任何问题可以提[Issues](https://github.com/crazycodeboy/TakePhoto/issues)出来。另外欢迎大家为TakePhoto贡献智慧，欢迎大家[Fork and Pull requests](https://github.com/crazycodeboy/TakePhoto)。     \n\n## 更新说明\n\nv4.1.0(2018/4/2)\n-----------------\n\n1. Upgrade glide to 4.6.1；\n2. Upgrade  buildToolsVersion & targetSdkVersion ；\n3. rename package name ;\n\nv4.0.3(2017/1/18)\n-----------------\n**Bugfixes**\n\n1. Fixed bug and add new features([`62a6725`](https://github.com/crazycodeboy/TakePhoto/commit/62a6725a99118ec0ce0f4cf1cd76b2ba70e21745))-@[Yanqilong](https://github.com/Yanqilong)\n2. fix 鲁班压缩出现路径重复([`a0a64a59`](https://github.com/crazycodeboy/TakePhoto/commit/a0a64a59762fa8554eb46b6ec544f70a5d46f551))-@[namezhouyu](https://github.com/namezhouyu)\n\n\nv4.0.2(2016/11/28)\n------------------\n1. 压缩成功后返回原图路径(originalPath), 以便用户可以自行处理原图。\n2. 压缩成功后压缩路径path改为compressPath。\n3. 压缩成功后返回图片来源类型，现在分CAMERA, OTHER两种。\n4. 用户可以配置CompressConfig.enableReserveRaw(boolean)方法，ture保留原图，false删除原图，当且仅当类型为CAMERA此配置才有效\n5. 纠正拍照旋转角度功能改为可选\n\n## 最后\n\n### 关于代码混淆\n如果你的项目中启用了代码混淆，可在混淆规则文件(如：proguard-rules.pro)中添加如下代码：   \n\n```\n-keep class com.jph.takephoto.** { *; }\n-dontwarn com.jph.takephoto.**\n\n-keep class com.darsh.multipleimageselect.** { *; }\n-dontwarn com.darsh.multipleimageselect.**\n\n-keep class com.soundcloud.android.crop.** { *; }\n-dontwarn com.soundcloud.android.crop.**\n\n```\n"
        },
        {
          "name": "Screenshots",
          "type": "tree",
          "content": null
        },
        {
          "name": "build.gradle",
          "type": "blob",
          "size": 0.6044921875,
          "content": "// Top-level build file where you can add configuration options common to all sub-projects/modules.\n\nbuildscript {\n    repositories {\n        jcenter()\n        google()\n    }\n    dependencies {\n        classpath 'com.android.tools.build:gradle:3.1.0'\n//        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.5'\n//        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3'\n        // NOTE: Do not place your application dependencies here; they belong\n        // in the individual module build.gradle files\n    }\n}\n\nallprojects {\n    repositories {\n        jcenter()\n        google()\n    }\n}\n"
        },
        {
          "name": "gradle.properties",
          "type": "blob",
          "size": 0.8349609375,
          "content": "# Project-wide Gradle settings.\n\n# IDE (e.g. Android Studio) users:\n# Gradle settings configured through the IDE *will override*\n# any settings specified in this file.\n\n# For more details on how to configure your build environment visit\n# http://www.gradle.org/docs/current/userguide/build_environment.html\n\n# Specifies the JVM arguments used for the daemon process.\n# The setting is particularly useful for tweaking memory settings.\n# Default value: -Xmx10248m -XX:MaxPermSize=256m\n# org.gradle.jvmargs=-Xmx2048m -XX:MaxPermSize=512m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8\n\n# When configured, Gradle will run in incubating parallel mode.\n# This option should only be used with decoupled projects. More details, visit\n# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects\n# org.gradle.parallel=true"
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 4.9609375,
          "content": "#!/usr/bin/env bash\n\n##############################################################################\n##\n##  Gradle start up script for UN*X\n##\n##############################################################################\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS=\"\"\n\nAPP_NAME=\"Gradle\"\nAPP_BASE_NAME=`basename \"$0\"`\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=\"maximum\"\n\nwarn ( ) {\n    echo \"$*\"\n}\n\ndie ( ) {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n}\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\ncase \"`uname`\" in\n  CYGWIN* )\n    cygwin=true\n    ;;\n  Darwin* )\n    darwin=true\n    ;;\n  MINGW* )\n    msys=true\n    ;;\nesac\n\n# For Cygwin, ensure paths are in UNIX format before anything is touched.\nif $cygwin ; then\n    [ -n \"$JAVA_HOME\" ] && JAVA_HOME=`cygpath --unix \"$JAVA_HOME\"`\nfi\n\n# Attempt to set APP_HOME\n# Resolve links: $0 may be a link\nPRG=\"$0\"\n# Need this for relative symlinks.\nwhile [ -h \"$PRG\" ] ; do\n    ls=`ls -ld \"$PRG\"`\n    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n    if expr \"$link\" : '/.*' > /dev/null; then\n        PRG=\"$link\"\n    else\n        PRG=`dirname \"$PRG\"`\"/$link\"\n    fi\ndone\nSAVED=\"`pwd`\"\ncd \"`dirname \\\"$PRG\\\"`/\" >&-\nAPP_HOME=\"`pwd -P`\"\ncd \"$SAVED\" >&-\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n    else\n        JAVACMD=\"$JAVA_HOME/bin/java\"\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=\"java\"\n    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\nfi\n\n# Increase the maximum file descriptors if we can.\nif [ \"$cygwin\" = \"false\" -a \"$darwin\" = \"false\" ] ; then\n    MAX_FD_LIMIT=`ulimit -H -n`\n    if [ $? -eq 0 ] ; then\n        if [ \"$MAX_FD\" = \"maximum\" -o \"$MAX_FD\" = \"max\" ] ; then\n            MAX_FD=\"$MAX_FD_LIMIT\"\n        fi\n        ulimit -n $MAX_FD\n        if [ $? -ne 0 ] ; then\n            warn \"Could not set maximum file descriptor limit: $MAX_FD\"\n        fi\n    else\n        warn \"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\"\n    fi\nfi\n\n# For Darwin, add options to specify how the application appears in the dock\nif $darwin; then\n    GRADLE_OPTS=\"$GRADLE_OPTS \\\"-Xdock:name=$APP_NAME\\\" \\\"-Xdock:icon=$APP_HOME/media/gradle.icns\\\"\"\nfi\n\n# For Cygwin, switch paths to Windows format before running java\nif $cygwin ; then\n    APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`\n    CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`\n\n    # We build the pattern for arguments to be converted via cygpath\n    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`\n    SEP=\"\"\n    for dir in $ROOTDIRSRAW ; do\n        ROOTDIRS=\"$ROOTDIRS$SEP$dir\"\n        SEP=\"|\"\n    done\n    OURCYGPATTERN=\"(^($ROOTDIRS))\"\n    # Add a user-defined pattern to the cygpath arguments\n    if [ \"$GRADLE_CYGPATTERN\" != \"\" ] ; then\n        OURCYGPATTERN=\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\"\n    fi\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    i=0\n    for arg in \"$@\" ; do\n        CHECK=`echo \"$arg\"|egrep -c \"$OURCYGPATTERN\" -`\n        CHECK2=`echo \"$arg\"|egrep -c \"^-\"`                                 ### Determine if an option\n\n        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition\n            eval `echo args$i`=`cygpath --path --ignore --mixed \"$arg\"`\n        else\n            eval `echo args$i`=\"\\\"$arg\\\"\"\n        fi\n        i=$((i+1))\n    done\n    case $i in\n        (0) set -- ;;\n        (1) set -- \"$args0\" ;;\n        (2) set -- \"$args0\" \"$args1\" ;;\n        (3) set -- \"$args0\" \"$args1\" \"$args2\" ;;\n        (4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;\n        (5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;\n        (6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;\n        (7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;\n        (8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;\n        (9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;\n    esac\nfi\n\n# Split up the JVM_OPTS And GRADLE_OPTS values into an array, following the shell quoting and substitution rules\nfunction splitJvmOpts() {\n    JVM_OPTS=(\"$@\")\n}\neval splitJvmOpts $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS\nJVM_OPTS[${#JVM_OPTS[*]}]=\"-Dorg.gradle.appname=$APP_BASE_NAME\"\n\nexec \"$JAVACMD\" \"${JVM_OPTS[@]}\" -classpath \"$CLASSPATH\" org.gradle.wrapper.GradleWrapperMain \"$@\"\n"
        },
        {
          "name": "gradlew.bat",
          "type": "blob",
          "size": 2.259765625,
          "content": "@if \"%DEBUG%\" == \"\" @echo off\n@rem ##########################################################################\n@rem\n@rem  Gradle startup script for Windows\n@rem\n@rem ##########################################################################\n\n@rem Set local scope for the variables with windows NT shell\nif \"%OS%\"==\"Windows_NT\" setlocal\n\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nset DEFAULT_JVM_OPTS=\n\nset DIRNAME=%~dp0\nif \"%DIRNAME%\" == \"\" set DIRNAME=.\nset APP_BASE_NAME=%~n0\nset APP_HOME=%DIRNAME%\n\n@rem Find java.exe\nif defined JAVA_HOME goto findJavaFromJavaHome\n\nset JAVA_EXE=java.exe\n%JAVA_EXE% -version >NUL 2>&1\nif \"%ERRORLEVEL%\" == \"0\" goto init\n\necho.\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\necho.\necho Please set the JAVA_HOME variable in your environment to match the\necho location of your Java installation.\n\ngoto fail\n\n:findJavaFromJavaHome\nset JAVA_HOME=%JAVA_HOME:\"=%\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\n\nif exist \"%JAVA_EXE%\" goto init\n\necho.\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\necho.\necho Please set the JAVA_HOME variable in your environment to match the\necho location of your Java installation.\n\ngoto fail\n\n:init\n@rem Get command-line arguments, handling Windowz variants\n\nif not \"%OS%\" == \"Windows_NT\" goto win9xME_args\nif \"%@eval[2+2]\" == \"4\" goto 4NT_args\n\n:win9xME_args\n@rem Slurp the command line arguments.\nset CMD_LINE_ARGS=\nset _SKIP=2\n\n:win9xME_args_slurp\nif \"x%~1\" == \"x\" goto execute\n\nset CMD_LINE_ARGS=%*\ngoto execute\n\n:4NT_args\n@rem Get arguments from the 4NT Shell from JP Software\nset CMD_LINE_ARGS=%$\n\n:execute\n@rem Setup the command line\n\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\n\n@rem Execute Gradle\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%\n\n:end\n@rem End local scope for the variables with windows NT shell\nif \"%ERRORLEVEL%\"==\"0\" goto mainEnd\n\n:fail\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\nrem the _cmd.exe /c_ return code!\nif  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1\nexit /b 1\n\n:mainEnd\nif \"%OS%\"==\"Windows_NT\" endlocal\n\n:omega\n"
        },
        {
          "name": "settings.gradle",
          "type": "blob",
          "size": 0.0390625,
          "content": "include ':takephoto_library', ':simple'\n"
        },
        {
          "name": "simple",
          "type": "tree",
          "content": null
        },
        {
          "name": "takephoto_library",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}