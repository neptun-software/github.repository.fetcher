{
  "metadata": {
    "timestamp": 1736708784692,
    "page": 279,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "traccar/traccar",
      "stars": 5486,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1123046875,
          "content": "target\nnbactions.xml\n.classpath\n.project\n.settings\n.idea\n*.iml\n.DS_Store\n.checkstyle\n.gradle\nout\nbuild\n.vscode\nbin\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.1005859375,
          "content": "[submodule \"traccar-web\"]\n\tpath = traccar-web\n\turl = ../traccar-web.git\n\tbranch = master\n\tignore = all\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 11.091796875,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 1.947265625,
          "content": "# [Traccar](https://www.traccar.org)\n\n## Overview\n\nTraccar is an open source GPS tracking system. This repository contains Java-based back-end service. It supports more than 200 GPS protocols and more than 2000 models of GPS tracking devices. Traccar can be used with any major SQL database system. It also provides easy to use [REST API](https://www.traccar.org/traccar-api/).\n\nOther parts of Traccar solution include:\n\n- [Traccar web app](https://github.com/traccar/traccar-web)\n- [Traccar Manager Android app](https://github.com/traccar/traccar-manager-android)\n- [Traccar Manager iOS app](https://github.com/traccar/traccar-manager-ios)\n\nThere is also a set of mobile apps that you can use for tracking mobile devices:\n\n- [Traccar Client Android app](https://github.com/traccar/traccar-client-android)\n- [Traccar Client iOS app](https://github.com/traccar/traccar-client-ios)\n\n## Features\n\nSome of the available features include:\n\n- Real-time GPS tracking\n- Driver behaviour monitoring\n- Detailed and summary reports\n- Geofencing functionality\n- Alarms and notifications\n- Account and device management\n- Email and SMS support\n\n## Build\n\nPlease read [build from source documentation](https://www.traccar.org/build/) on the official website.\n\n## Team\n\n- Anton Tananaev ([anton@traccar.org](mailto:anton@traccar.org))\n- Andrey Kunitsyn ([andrey@traccar.org](mailto:andrey@traccar.org))\n\n## License\n\n    Apache License, Version 2.0\n\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n        http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n"
        },
        {
          "name": "build.gradle",
          "type": "blob",
          "size": 4.71484375,
          "content": "plugins {\n    id \"java\"\n    id \"checkstyle\"\n    id \"com.google.protobuf\" version \"0.9.4\"\n    id \"org.kordamp.gradle.project-enforcer\" version \"0.14.0\"\n}\n\nrepositories {\n    mavenCentral()\n}\n\njava {\n    sourceCompatibility = JavaVersion.VERSION_17\n    targetCompatibility = JavaVersion.VERSION_17\n}\n\ncompileJava.options.encoding = \"UTF-8\"\njar.destinationDirectory = file(\"$projectDir/target\")\n\ncheckstyle {\n    toolVersion = \"10.21.1\"\n    configFile = file(\"gradle/checkstyle.xml\")\n    checkstyleTest.enabled = false\n}\n\nenforce {\n    // noinspection UnnecessaryQualifiedReference\n    rule(enforcer.rules.EnforceBytecodeVersion) { r ->\n        r.maxJdkVersion = \"17\"\n    }\n}\n\next {\n    guiceVersion = \"7.0.0\"\n    jettyVersion = \"11.0.24\"\n    jerseyVersion = \"3.1.10\"\n    jacksonVersion = \"2.18.2\" // same version as jersey-media-json-jackson dependency\n    protobufVersion = \"4.29.3\"\n    jxlsVersion = \"2.14.0\" // version 3 has breaking changes\n    junitVersion = \"5.11.4\"\n}\n\nprotobuf {\n    protoc {\n        artifact = \"com.google.protobuf:protoc:$protobufVersion\"\n    }\n}\n\ndependencies {\n    implementation \"commons-codec:commons-codec:1.17.2\"\n    implementation \"com.h2database:h2:2.3.232\"\n    implementation \"com.mysql:mysql-connector-j:9.1.0\"\n    implementation \"org.mariadb.jdbc:mariadb-java-client:3.5.1\"\n    implementation \"org.postgresql:postgresql:42.7.4\"\n    implementation \"com.microsoft.sqlserver:mssql-jdbc:12.8.1.jre11\"\n    implementation \"com.zaxxer:HikariCP:6.2.1\"\n    implementation \"io.netty:netty-all:4.1.116.Final\"\n    implementation \"org.slf4j:slf4j-jdk14:2.0.16\"\n    implementation \"com.google.inject:guice:$guiceVersion\"\n    implementation \"com.google.inject.extensions:guice-servlet:$guiceVersion\"\n    implementation \"org.glassfish:jakarta.json:2.0.1\"\n    implementation \"com.sun.mail:jakarta.mail:2.0.1\"\n    implementation \"org.eclipse.jetty:jetty-server:$jettyVersion\"\n    implementation \"org.eclipse.jetty:jetty-servlet:$jettyVersion\"\n    implementation \"org.eclipse.jetty:jetty-servlets:$jettyVersion\"\n    implementation \"org.eclipse.jetty:jetty-webapp:$jettyVersion\"\n    implementation \"org.eclipse.jetty:jetty-jndi:$jettyVersion\"\n    implementation \"org.eclipse.jetty:jetty-proxy:$jettyVersion\"\n    implementation \"org.eclipse.jetty.websocket:websocket-jetty-server:$jettyVersion\"\n    implementation \"org.glassfish.jersey.containers:jersey-container-servlet:$jerseyVersion\"\n    implementation \"org.glassfish.jersey.media:jersey-media-json-jackson:$jerseyVersion\"\n    implementation \"org.glassfish.jersey.inject:jersey-hk2:$jerseyVersion\"\n    implementation \"org.glassfish.hk2:guice-bridge:3.1.1\" // same version as jersey-hk2\n    implementation \"com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:$jacksonVersion\"\n    implementation \"com.fasterxml.jackson.datatype:jackson-datatype-jakarta-jsonp:$jacksonVersion\"\n    implementation \"org.liquibase:liquibase-core:4.23.2\" // upgrade has issues\n    implementation \"org.apache.commons:commons-jexl3:3.4.0\"\n    implementation \"org.jxls:jxls:$jxlsVersion\"\n    implementation \"org.jxls:jxls-poi:$jxlsVersion\"\n    implementation \"org.apache.velocity:velocity-engine-core:2.4.1\"\n    implementation \"org.apache.velocity.tools:velocity-tools-generic:3.1\"\n    implementation \"org.apache.commons:commons-collections4:4.4\"\n    implementation \"org.mnode.ical4j:ical4j:4.0.8\"\n    implementation \"org.locationtech.spatial4j:spatial4j:0.8\"\n    implementation \"org.locationtech.jts:jts-core:1.20.0\"\n    implementation \"net.java.dev.jna:jna-platform:5.16.0\"\n    implementation \"com.github.jnr:jnr-posix:3.1.20\"\n    implementation \"com.google.protobuf:protobuf-java:$protobufVersion\"\n    implementation \"com.amazonaws:aws-java-sdk-sns:1.12.780\"\n    implementation \"org.apache.kafka:kafka-clients:3.9.0\"\n    implementation \"com.hivemq:hivemq-mqtt-client:1.3.4\"\n    implementation \"redis.clients:jedis:5.2.0\"\n    implementation \"com.google.firebase:firebase-admin:9.4.3\"\n    implementation \"com.nimbusds:oauth2-oidc-sdk:11.20.2\"\n    implementation \"com.rabbitmq:amqp-client:5.24.0\"\n    implementation \"com.warrenstrange:googleauth:1.5.0\"\n    implementation \"com.google.openlocationcode:openlocationcode:1.0.4\"\n    testImplementation \"org.junit.jupiter:junit-jupiter-api:$junitVersion\"\n    testImplementation \"org.junit.jupiter:junit-jupiter-engine:$junitVersion\"\n    testImplementation \"org.mockito:mockito-core:5.15.2\"\n}\n\ntest {\n    useJUnitPlatform()\n}\n\ntasks.register('copyDependencies', Copy) {\n    into \"$projectDir/target/lib\"\n    from configurations.runtimeClasspath\n}\nassemble.dependsOn(copyDependencies)\n\njar {\n    manifest {\n        attributes(\n                \"Main-Class\": \"org.traccar.Main\",\n                \"Implementation-Version\": \"6.6\",\n                \"Class-Path\": configurations.runtimeClasspath.files.collect { \"lib/$it.name\" }.join(\" \"))\n    }\n}\n"
        },
        {
          "name": "debug.xml",
          "type": "blob",
          "size": 0.9638671875,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE properties SYSTEM 'http://java.sun.com/dtd/properties.dtd'>\n<properties>\n\n    <entry key='web.path'>./traccar-web/simple</entry>\n    <entry key='web.debug'>true</entry>\n    <entry key='web.console'>true</entry>\n\n    <entry key='geocoder.type'>pluscodes</entry>\n\n    <entry key='media.path'>./target/media</entry>\n\n    <entry key='logger.console'>true</entry>\n    <entry key='logger.queries'>false</entry>\n    <entry key='logger.fullStackTraces'>true</entry>\n\n    <entry key='mail.debug'>true</entry>\n\n    <entry key='database.driver'>org.h2.Driver</entry>\n    <entry key='database.url'>jdbc:h2:./target/database</entry>\n    <entry key='database.user'>sa</entry>\n    <entry key='database.password'></entry>\n\n    <!--<entry key='server.instantAcknowledgement'>true</entry>\n    <entry key='server.buffering.threshold'>5000</entry>-->\n\n    <entry key='atrack.custom'>true</entry>\n    <entry key='intellitrac.port'>6037</entry>\n\n</properties>\n"
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 8.501953125,
          "content": "#!/bin/sh\n\n#\n# Copyright © 2015-2021 the original authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      https://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\n##############################################################################\n#\n#   Gradle start up script for POSIX generated by Gradle.\n#\n#   Important for running:\n#\n#   (1) You need a POSIX-compliant shell to run this script. If your /bin/sh is\n#       noncompliant, but you have some other compliant shell such as ksh or\n#       bash, then to run this script, type that shell name before the whole\n#       command line, like:\n#\n#           ksh Gradle\n#\n#       Busybox and similar reduced shells will NOT work, because this script\n#       requires all of these POSIX shell features:\n#         * functions;\n#         * expansions «$var», «${var}», «${var:-default}», «${var+SET}»,\n#           «${var#prefix}», «${var%suffix}», and «$( cmd )»;\n#         * compound commands having a testable exit status, especially «case»;\n#         * various built-in commands including «command», «set», and «ulimit».\n#\n#   Important for patching:\n#\n#   (2) This script targets any POSIX shell, so it avoids extensions provided\n#       by Bash, Ksh, etc; in particular arrays are avoided.\n#\n#       The \"traditional\" practice of packing multiple parameters into a\n#       space-separated string is a well documented source of bugs and security\n#       problems, so this is (mostly) avoided, by progressively accumulating\n#       options in \"$@\", and eventually passing that to Java.\n#\n#       Where the inherited environment variables (DEFAULT_JVM_OPTS, JAVA_OPTS,\n#       and GRADLE_OPTS) rely on word-splitting, this is performed explicitly;\n#       see the in-line comments for details.\n#\n#       There are tweaks for specific operating systems such as AIX, CygWin,\n#       Darwin, MinGW, and NonStop.\n#\n#   (3) This script is generated from the Groovy template\n#       https://github.com/gradle/gradle/blob/HEAD/platforms/jvm/plugins-application/src/main/resources/org/gradle/api/internal/plugins/unixStartScript.txt\n#       within the Gradle project.\n#\n#       You can find Gradle at https://github.com/gradle/gradle/.\n#\n##############################################################################\n\n# Attempt to set APP_HOME\n\n# Resolve links: $0 may be a link\napp_path=$0\n\n# Need this for daisy-chained symlinks.\nwhile\n    APP_HOME=${app_path%\"${app_path##*/}\"}  # leaves a trailing /; empty if no leading path\n    [ -h \"$app_path\" ]\ndo\n    ls=$( ls -ld \"$app_path\" )\n    link=${ls#*' -> '}\n    case $link in             #(\n      /*)   app_path=$link ;; #(\n      *)    app_path=$APP_HOME$link ;;\n    esac\ndone\n\n# This is normally unused\n# shellcheck disable=SC2034\nAPP_BASE_NAME=${0##*/}\n# Discard cd standard output in case $CDPATH is set (https://github.com/gradle/gradle/issues/25036)\nAPP_HOME=$( cd \"${APP_HOME:-./}\" > /dev/null && pwd -P ) || exit\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=maximum\n\nwarn () {\n    echo \"$*\"\n} >&2\n\ndie () {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n} >&2\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\nnonstop=false\ncase \"$( uname )\" in                #(\n  CYGWIN* )         cygwin=true  ;; #(\n  Darwin* )         darwin=true  ;; #(\n  MSYS* | MINGW* )  msys=true    ;; #(\n  NONSTOP* )        nonstop=true ;;\nesac\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=$JAVA_HOME/jre/sh/java\n    else\n        JAVACMD=$JAVA_HOME/bin/java\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=java\n    if ! command -v java >/dev/null 2>&1\n    then\n        die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nfi\n\n# Increase the maximum file descriptors if we can.\nif ! \"$cygwin\" && ! \"$darwin\" && ! \"$nonstop\" ; then\n    case $MAX_FD in #(\n      max*)\n        # In POSIX sh, ulimit -H is undefined. That's why the result is checked to see if it worked.\n        # shellcheck disable=SC2039,SC3045\n        MAX_FD=$( ulimit -H -n ) ||\n            warn \"Could not query maximum file descriptor limit\"\n    esac\n    case $MAX_FD in  #(\n      '' | soft) :;; #(\n      *)\n        # In POSIX sh, ulimit -n is undefined. That's why the result is checked to see if it worked.\n        # shellcheck disable=SC2039,SC3045\n        ulimit -n \"$MAX_FD\" ||\n            warn \"Could not set maximum file descriptor limit to $MAX_FD\"\n    esac\nfi\n\n# Collect all arguments for the java command, stacking in reverse order:\n#   * args from the command line\n#   * the main class name\n#   * -classpath\n#   * -D...appname settings\n#   * --module-path (only if needed)\n#   * DEFAULT_JVM_OPTS, JAVA_OPTS, and GRADLE_OPTS environment variables.\n\n# For Cygwin or MSYS, switch paths to Windows format before running java\nif \"$cygwin\" || \"$msys\" ; then\n    APP_HOME=$( cygpath --path --mixed \"$APP_HOME\" )\n    CLASSPATH=$( cygpath --path --mixed \"$CLASSPATH\" )\n\n    JAVACMD=$( cygpath --unix \"$JAVACMD\" )\n\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    for arg do\n        if\n            case $arg in                                #(\n              -*)   false ;;                            # don't mess with options #(\n              /?*)  t=${arg#/} t=/${t%%/*}              # looks like a POSIX filepath\n                    [ -e \"$t\" ] ;;                      #(\n              *)    false ;;\n            esac\n        then\n            arg=$( cygpath --path --ignore --mixed \"$arg\" )\n        fi\n        # Roll the args list around exactly as many times as the number of\n        # args, so each arg winds up back in the position where it started, but\n        # possibly modified.\n        #\n        # NB: a `for` loop captures its iteration list before it begins, so\n        # changing the positional parameters here affects neither the number of\n        # iterations, nor the values presented in `arg`.\n        shift                   # remove old arg\n        set -- \"$@\" \"$arg\"      # push replacement arg\n    done\nfi\n\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS='\"-Xmx64m\" \"-Xms64m\"'\n\n# Collect all arguments for the java command:\n#   * DEFAULT_JVM_OPTS, JAVA_OPTS, JAVA_OPTS, and optsEnvironmentVar are not allowed to contain shell fragments,\n#     and any embedded shellness will be escaped.\n#   * For example: A user cannot expect ${Hostname} to be expanded, as it is an environment variable and will be\n#     treated as '${Hostname}' itself on the command line.\n\nset -- \\\n        \"-Dorg.gradle.appname=$APP_BASE_NAME\" \\\n        -classpath \"$CLASSPATH\" \\\n        org.gradle.wrapper.GradleWrapperMain \\\n        \"$@\"\n\n# Stop when \"xargs\" is not available.\nif ! command -v xargs >/dev/null 2>&1\nthen\n    die \"xargs is not available\"\nfi\n\n# Use \"xargs\" to parse quoted args.\n#\n# With -n1 it outputs one arg per line, with the quotes and backslashes removed.\n#\n# In Bash we could simply go:\n#\n#   readarray ARGS < <( xargs -n1 <<<\"$var\" ) &&\n#   set -- \"${ARGS[@]}\" \"$@\"\n#\n# but POSIX shell has neither arrays nor command substitution, so instead we\n# post-process each arg (as a line of input to sed) to backslash-escape any\n# character that might be a shell metacharacter, then use eval to reverse\n# that process (while maintaining the separation between arguments), and wrap\n# the whole thing up as a single \"set\" statement.\n#\n# This will of course break if any of these variables contains a newline or\n# an unmatched quote.\n#\n\neval \"set -- $(\n        printf '%s\\n' \"$DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS\" |\n        xargs -n1 |\n        sed ' s~[^-[:alnum:]+,./:=@_]~\\\\&~g; ' |\n        tr '\\n' ' '\n    )\" '\"$@\"'\n\nexec \"$JAVACMD\" \"$@\"\n"
        },
        {
          "name": "gradlew.bat",
          "type": "blob",
          "size": 2.759765625,
          "content": "@rem\n@rem Copyright 2015 the original author or authors.\n@rem\n@rem Licensed under the Apache License, Version 2.0 (the \"License\");\n@rem you may not use this file except in compliance with the License.\n@rem You may obtain a copy of the License at\n@rem\n@rem      https://www.apache.org/licenses/LICENSE-2.0\n@rem\n@rem Unless required by applicable law or agreed to in writing, software\n@rem distributed under the License is distributed on an \"AS IS\" BASIS,\n@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@rem See the License for the specific language governing permissions and\n@rem limitations under the License.\n@rem\n\n@if \"%DEBUG%\"==\"\" @echo off\n@rem ##########################################################################\n@rem\n@rem  Gradle startup script for Windows\n@rem\n@rem ##########################################################################\n\n@rem Set local scope for the variables with windows NT shell\nif \"%OS%\"==\"Windows_NT\" setlocal\n\nset DIRNAME=%~dp0\nif \"%DIRNAME%\"==\"\" set DIRNAME=.\n@rem This is normally unused\nset APP_BASE_NAME=%~n0\nset APP_HOME=%DIRNAME%\n\n@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.\nfor %%i in (\"%APP_HOME%\") do set APP_HOME=%%~fi\n\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nset DEFAULT_JVM_OPTS=\"-Xmx64m\" \"-Xms64m\"\n\n@rem Find java.exe\nif defined JAVA_HOME goto findJavaFromJavaHome\n\nset JAVA_EXE=java.exe\n%JAVA_EXE% -version >NUL 2>&1\nif %ERRORLEVEL% equ 0 goto execute\n\necho. 1>&2\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH. 1>&2\necho. 1>&2\necho Please set the JAVA_HOME variable in your environment to match the 1>&2\necho location of your Java installation. 1>&2\n\ngoto fail\n\n:findJavaFromJavaHome\nset JAVA_HOME=%JAVA_HOME:\"=%\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\n\nif exist \"%JAVA_EXE%\" goto execute\n\necho. 1>&2\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME% 1>&2\necho. 1>&2\necho Please set the JAVA_HOME variable in your environment to match the 1>&2\necho location of your Java installation. 1>&2\n\ngoto fail\n\n:execute\n@rem Setup the command line\n\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\n\n\n@rem Execute Gradle\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*\n\n:end\n@rem End local scope for the variables with windows NT shell\nif %ERRORLEVEL% equ 0 goto mainEnd\n\n:fail\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\nrem the _cmd.exe /c_ return code!\nset EXIT_CODE=%ERRORLEVEL%\nif %EXIT_CODE% equ 0 set EXIT_CODE=1\nif not \"\"==\"%GRADLE_EXIT_CONSOLE%\" exit %EXIT_CODE%\nexit /b %EXIT_CODE%\n\n:mainEnd\nif \"%OS%\"==\"Windows_NT\" endlocal\n\n:omega\n"
        },
        {
          "name": "openapi.yaml",
          "type": "blob",
          "size": 59.22265625,
          "content": "openapi: 3.1.0\ninfo:\n  title: Traccar\n  description: Traccar GPS tracking server API documentation. To use the API you need to have a server instance. For testing purposes you can use one of free [demo servers](https://www.traccar.org/demo-server/). For production use you can install your own server or get a [subscription service](https://www.traccar.org/product/tracking-server/).\n  contact:\n    name: Traccar Support\n    url: https://www.traccar.org/\n    email: support@traccar.org\n  license:\n    name: Apache 2.0\n    url: https://www.apache.org/licenses/LICENSE-2.0.html\n  version: '6.6'\nservers:\n  - url: https://demo.traccar.org/api\n    description: Demo Server 1\n  - url: https://demo2.traccar.org/api\n    description: Demo Server 2\n  - url: https://demo3.traccar.org/api\n    description: Demo Server 3\n  - url: https://demo4.traccar.org/api\n    description: Demo Server 4\n  - url: https://server.traccar.org/api\n    description: Subscription Server\n  - url: http://{host}:{port}/api\n    description: Other Server\n    variables:\n      host:\n        default: localhost\n      port:\n        enum:\n          - '8082'\n          - '80'\n        default: '8082'\nsecurity:\n  - BasicAuth: []\n  - ApiKey: []\ntags:\n  - name: Server\n    description: Server information\n  - name: Session\n    description: User session management\n  - name: Devices\n    description: Device management\n  - name: Groups\n    description: Group management\n  - name: Users\n    description: User management\n  - name: Permissions\n    description: User permissions and other object linking\n  - name: Positions\n    description: Retrieving raw location information\n  - name: Events\n    description: Retrieving event information\n  - name: Reports\n    description: Reports generation\n  - name: Notifications\n    description: User notifications management\n  - name: Geofences\n    description: Geofence management\n  - name: Commands\n    description: Sending commands to devices and stored command management\n  - name: Attributes\n    description: Computed attributes management\n  - name: Drivers\n    description: Drivers management\n  - name: Maintenance\n    description: Maintenance management\n  - name: Calendars\n    description: Calendar management\n  - name: Statistics\n    description: Retrieving server statistics\npaths:\n  /commands:\n    get:\n      summary: Fetch a list of Saved Commands\n      tags:\n        - Commands\n      description: Without params, it returns a list of Saved Commands the user has access to\n      parameters:\n        - name: all\n          in: query\n          description: Can only be used by admins or managers to fetch all entities\n          schema:\n            type: boolean\n        - name: userId\n          in: query\n          description: Standard users can use this only with their own _userId_\n          schema:\n            type: integer\n        - name: deviceId\n          in: query\n          description: Standard users can use this only with _deviceId_s, they have access to\n          schema:\n            type: integer\n        - name: groupId\n          in: query\n          description: >-\n            Standard users can use this only with _groupId_s, they have access\n            to\n          schema:\n            type: integer\n        - name: refresh\n          in: query\n          schema:\n            type: boolean\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Command'\n    post:\n      summary: Create a Saved Command\n      tags:\n        - Commands\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Command'\n        required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Command'\n      x-codegen-request-body-name: body\n  /commands/{id}:\n    put:\n      summary: Update a Saved Command\n      tags:\n        - Commands\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Command'\n        required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Command'\n      x-codegen-request-body-name: body\n    delete:\n      summary: Delete a Saved Command\n      tags:\n        - Commands\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: integer\n      responses:\n        '204':\n          description: No Content\n          content: {}\n  /commands/send:\n    get:\n      summary: Fetch a list of Saved Commands supported by Device at the moment\n      description: >-\n        Return a list of saved commands linked to Device and its groups,\n        filtered by current Device protocol support\n      tags:\n        - Commands\n      parameters:\n        - name: deviceId\n          in: query\n          description: >-\n            Standard users can use this only with _deviceId_s, they have access\n            to\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Command'\n        '400':\n          description: Could happen when the user doesn't have permission for the device\n          content: {}\n    post:\n      summary: Dispatch commands to device\n      description: Dispatch a new command or Saved Command if _body.id_ set\n      tags:\n        - Commands\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Command'\n        required: true\n      responses:\n        '200':\n          description: Command sent\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Command'\n        '202':\n          description: Command queued\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Command'\n        '400':\n          description: >-\n            Could happen when the user doesn't have permission or an incorrect\n            command _type_ for the device\n          content: {}\n      x-codegen-request-body-name: body\n  /commands/types:\n    get:\n      summary: >-\n        Fetch a list of available Commands for the Device or all possible\n        Commands if Device ommited\n      tags:\n        - Commands\n      parameters:\n        - name: deviceId\n          in: query\n          description: >-\n            Internal device identifier. Only works if device has already\n            reported some locations\n          schema:\n            type: integer\n        - name: protocol\n          in: query\n          description: Protocol name. Can be used instead of device id\n          schema:\n            type: string\n        - name: textChannel\n          in: query\n          description: >-\n            When `true` return SMS commands. If not specified or `false` return\n            data commands\n          schema:\n            type: boolean\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/CommandType'\n        '400':\n          description: >-\n            Could happen when trying to fetch from a device the user does not\n            have permission\n          content: {}\n  /devices:\n    get:\n      summary: Fetch a list of Devices\n      description: Without any params, returns a list of the user's devices\n      tags:\n        - Devices\n      parameters:\n        - name: all\n          in: query\n          description: Can only be used by admins or managers to fetch all entities\n          schema:\n            type: boolean\n        - name: userId\n          in: query\n          description: Standard users can use this only with their own _userId_\n          schema:\n            type: integer\n        - name: id\n          in: query\n          description: >-\n            To fetch one or more devices. Multiple params can be passed like\n            `id=31&id=42`\n          schema:\n            type: integer\n        - name: uniqueId\n          in: query\n          description: >-\n            To fetch one or more devices. Multiple params can be passed like\n            `uniqueId=333331&uniqieId=44442`\n          schema:\n            type: string\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Device'\n        '400':\n          description: No permission\n          content: {}\n    post:\n      summary: Create a Device\n      tags:\n        - Devices\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Device'\n        required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Device'\n      x-codegen-request-body-name: body\n  /devices/{id}:\n    put:\n      summary: Update a Device\n      tags:\n        - Devices\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Device'\n        required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Device'\n      x-codegen-request-body-name: body\n    delete:\n      summary: Delete a Device\n      tags:\n        - Devices\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: integer\n      responses:\n        '204':\n          description: No Content\n          content: {}\n  /devices/{id}/accumulators:\n    put:\n      summary: Update total distance and hours of the Device\n      tags:\n        - Devices\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeviceAccumulators'\n        required: true\n      responses:\n        '204':\n          description: No Content\n          content: {}\n      x-codegen-request-body-name: body\n  /groups:\n    get:\n      summary: Fetch a list of Groups\n      description: Without any params, returns a list of the Groups the user belongs to\n      tags:\n        - Groups\n      parameters:\n        - name: all\n          in: query\n          description: Can only be used by admins or managers to fetch all entities\n          schema:\n            type: boolean\n        - name: userId\n          in: query\n          description: Standard users can use this only with their own _userId_\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Group'\n    post:\n      summary: Create a Group\n      tags:\n        - Groups\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Group'\n        required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Group'\n        '400':\n          description: No permission\n          content: {}\n      x-codegen-request-body-name: body\n  /groups/{id}:\n    put:\n      summary: Update a Group\n      tags:\n        - Groups\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Group'\n        required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Group'\n      x-codegen-request-body-name: body\n    delete:\n      summary: Delete a Group\n      tags:\n        - Groups\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: integer\n      responses:\n        '204':\n          description: No Content\n          content: {}\n  /permissions:\n    post:\n      summary: Link an Object to another Object\n      tags:\n        - Permissions\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Permission'\n        required: true\n      responses:\n        '204':\n          description: No Content\n          content: {}\n        '400':\n          description: No permission\n          content: {}\n      x-codegen-request-body-name: body\n    delete:\n      summary: Unlink an Object from another Object\n      tags:\n        - Permissions\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Permission'\n        required: true\n      responses:\n        '204':\n          description: No Content\n          content: {}\n      x-codegen-request-body-name: body\n  /positions:\n    get:\n      summary: Fetches a list of Positions\n      description: >-\n        We strongly recommend using [Traccar WebSocket\n        API](https://www.traccar.org/traccar-api/) instead of periodically\n        polling positions endpoint. Without any params, it returns a list of\n        last known positions for all the user's Devices. _from_ and _to_ fields\n        are not required with _id_.\n      tags:\n        - Positions\n      parameters:\n        - name: deviceId\n          in: query\n          description: >-\n            _deviceId_ is optional, but requires the _from_ and _to_ parameters\n            when used\n          schema:\n            type: integer\n        - name: from\n          in: query\n          description: in IS0 8601 format. eg. `1963-11-22T18:30:00Z`\n          schema:\n            type: string\n            format: date-time\n        - name: to\n          in: query\n          description: in IS0 8601 format. eg. `1963-11-22T18:30:00Z`\n          schema:\n            type: string\n            format: date-time\n        - name: id\n          in: query\n          description: >-\n            To fetch one or more positions. Multiple params can be passed like\n            `id=31&id=42`\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Position'\n            text/csv:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Position'\n            application/gpx+xml:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Position'\n    delete:\n      summary: Deletes all the Positions of a device in the time span specified\n      description: ''\n      tags:\n        - Positions\n      parameters:\n        - name: deviceId\n          in: query\n          description: ''\n          schema:\n            type: integer\n          required: true\n        - name: from\n          in: query\n          description: in IS0 8601 format. eg. `1963-11-22T18:30:00Z`\n          schema:\n            type: string\n            format: date-time\n          required: true\n        - name: to\n          in: query\n          description: in IS0 8601 format. eg. `1963-11-22T18:30:00Z`\n          schema:\n            type: string\n            format: date-time\n          required: true\n      responses:\n        '204':\n          description: No Content\n          content: {}\n        '400':\n          description: Bad Request\n          content: {}\n  /server:\n    get:\n      summary: Fetch Server information\n      tags:\n        - Server\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Server'\n    put:\n      summary: Update Server information\n      tags:\n        - Server\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Server'\n        required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Server'\n      x-codegen-request-body-name: body\n  /session:\n    get:\n      summary: Fetch Session information\n      tags:\n        - Session\n      parameters:\n        - name: token\n          in: query\n          schema:\n            type: string\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n        '404':\n          description: Not Found\n          content: {}\n    post:\n      summary: Create a new Session\n      tags:\n        - Session\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              required:\n                - email\n                - password\n              properties:\n                email:\n                  type: string\n                password:\n                  type: string\n                  format: password\n        required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n        '401':\n          description: Unauthorized\n          content: {}\n    delete:\n      summary: Close the Session\n      tags:\n        - Session\n      responses:\n        '204':\n          description: No Content\n          content: {}\n  /session/openid/auth:\n    get:\n      summary: Fetch Session information\n      tags:\n        - Session\n      responses:\n        '303':\n          description: Redirect to OpenID Connect identity provider\n          content: {}\n  /session/openid/callback:\n    get:\n      summary: OpenID Callback\n      tags:\n        - Session\n      responses:\n        '303':\n          description: Successful authentication, redirect to homepage\n          content: {}\n  /users:\n    get:\n      summary: Fetch a list of Users\n      tags:\n        - Users\n      parameters:\n        - name: userId\n          in: query\n          description: Can only be used by admin or manager users\n          schema:\n            type: string\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/User'\n        '400':\n          description: No Permission\n          content: {}\n    post:\n      summary: Create a User\n      tags:\n        - Users\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/User'\n        required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n      x-codegen-request-body-name: body\n  /users/{id}:\n    put:\n      summary: Update a User\n      tags:\n        - Users\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/User'\n        required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n      x-codegen-request-body-name: body\n    delete:\n      summary: Delete a User\n      tags:\n        - Users\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: integer\n      responses:\n        '204':\n          description: No Content\n          content: {}\n  /notifications:\n    get:\n      summary: Fetch a list of Notifications\n      description: >-\n        Without params, it returns a list of Notifications the user has access\n        to\n      tags:\n        - Notifications\n      parameters:\n        - name: all\n          in: query\n          description: Can only be used by admins or managers to fetch all entities\n          schema:\n            type: boolean\n        - name: userId\n          in: query\n          description: Standard users can use this only with their own _userId_\n          schema:\n            type: integer\n        - name: deviceId\n          in: query\n          description: >-\n            Standard users can use this only with _deviceId_s, they have access\n            to\n          schema:\n            type: integer\n        - name: groupId\n          in: query\n          description: >-\n            Standard users can use this only with _groupId_s, they have access\n            to\n          schema:\n            type: integer\n        - name: refresh\n          in: query\n          schema:\n            type: boolean\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Notification'\n    post:\n      summary: Create a Notification\n      tags:\n        - Notifications\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Notification'\n        required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Notification'\n      x-codegen-request-body-name: body\n  /notifications/{id}:\n    put:\n      summary: Update a Notification\n      tags:\n        - Notifications\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Notification'\n        required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Notification'\n      x-codegen-request-body-name: body\n    delete:\n      summary: Delete a Notification\n      tags:\n        - Notifications\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: integer\n      responses:\n        '204':\n          description: No Content\n          content: {}\n  /notifications/types:\n    get:\n      summary: Fetch a list of available Notification types\n      tags:\n        - Notifications\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/NotificationType'\n  /notifications/test:\n    post:\n      summary: Send test notification to current user via Email and SMS\n      tags:\n        - Notifications\n      responses:\n        '204':\n          description: Successful sending\n          content: {}\n        '400':\n          description: Could happen if sending has failed\n          content: {}\n  /geofences:\n    get:\n      summary: Fetch a list of Geofences\n      description: Without params, it returns a list of Geofences the user has access to\n      tags:\n        - Geofences\n      parameters:\n        - name: all\n          in: query\n          description: Can only be used by admins or managers to fetch all entities\n          schema:\n            type: boolean\n        - name: userId\n          in: query\n          description: Standard users can use this only with their own _userId_\n          schema:\n            type: integer\n        - name: deviceId\n          in: query\n          description: >-\n            Standard users can use this only with _deviceId_s, they have access\n            to\n          schema:\n            type: integer\n        - name: groupId\n          in: query\n          description: >-\n            Standard users can use this only with _groupId_s, they have access\n            to\n          schema:\n            type: integer\n        - name: refresh\n          in: query\n          schema:\n            type: boolean\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Geofence'\n    post:\n      summary: Create a Geofence\n      tags:\n        - Geofences\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Geofence'\n        required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Geofence'\n      x-codegen-request-body-name: body\n  /geofences/{id}:\n    put:\n      summary: Update a Geofence\n      tags:\n        - Geofences\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Geofence'\n        required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Geofence'\n      x-codegen-request-body-name: body\n    delete:\n      summary: Delete a Geofence\n      tags:\n        - Geofences\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: integer\n      responses:\n        '204':\n          description: No Content\n          content: {}\n  /events/{id}:\n    get:\n      tags:\n        - Events\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Event'\n  /reports/route:\n    get:\n      summary: >-\n        Fetch a list of Positions within the time period for the Devices or\n        Groups\n      description: At least one _deviceId_ or one _groupId_ must be passed\n      tags:\n        - Reports\n      parameters:\n        - name: deviceId\n          in: query\n          style: form\n          explode: true\n          schema:\n            type: array\n            items:\n              type: integer\n        - name: groupId\n          in: query\n          style: form\n          explode: true\n          schema:\n            type: array\n            items:\n              type: integer\n        - name: from\n          in: query\n          description: in IS0 8601 format. eg. `1963-11-22T18:30:00Z`\n          required: true\n          schema:\n            type: string\n            format: date-time\n        - name: to\n          in: query\n          description: in IS0 8601 format. eg. `1963-11-22T18:30:00Z`\n          required: true\n          schema:\n            type: string\n            format: date-time\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Position'\n            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Position'\n  /reports/events:\n    get:\n      summary: Fetch a list of Events within the time period for the Devices or Groups\n      description: At least one _deviceId_ or one _groupId_ must be passed\n      tags:\n        - Reports\n      parameters:\n        - name: deviceId\n          in: query\n          style: form\n          explode: true\n          schema:\n            type: array\n            items:\n              type: integer\n        - name: groupId\n          in: query\n          style: form\n          explode: true\n          schema:\n            type: array\n            items:\n              type: integer\n        - name: type\n          in: query\n          description: '% can be used to return events of all types'\n          style: form\n          explode: false\n          schema:\n            type: array\n            items:\n              type: string\n        - name: from\n          in: query\n          description: in IS0 8601 format. eg. `1963-11-22T18:30:00Z`\n          required: true\n          schema:\n            type: string\n            format: date-time\n        - name: to\n          in: query\n          description: in IS0 8601 format. eg. `1963-11-22T18:30:00Z`\n          required: true\n          schema:\n            type: string\n            format: date-time\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Event'\n            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Event'\n  /reports/summary:\n    get:\n      summary: >-\n        Fetch a list of ReportSummary within the time period for the Devices or\n        Groups\n      description: At least one _deviceId_ or one _groupId_ must be passed\n      tags:\n        - Reports\n      parameters:\n        - name: deviceId\n          in: query\n          style: form\n          explode: true\n          schema:\n            type: array\n            items:\n              type: integer\n        - name: groupId\n          in: query\n          style: form\n          explode: true\n          schema:\n            type: array\n            items:\n              type: integer\n        - name: from\n          in: query\n          description: in IS0 8601 format. eg. `1963-11-22T18:30:00Z`\n          required: true\n          schema:\n            type: string\n            format: date-time\n        - name: to\n          in: query\n          description: in IS0 8601 format. eg. `1963-11-22T18:30:00Z`\n          required: true\n          schema:\n            type: string\n            format: date-time\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ReportSummary'\n            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ReportSummary'\n  /reports/trips:\n    get:\n      summary: >-\n        Fetch a list of ReportTrips within the time period for the Devices or\n        Groups\n      description: At least one _deviceId_ or one _groupId_ must be passed\n      tags:\n        - Reports\n      parameters:\n        - name: deviceId\n          in: query\n          style: form\n          explode: true\n          schema:\n            type: array\n            items:\n              type: integer\n        - name: groupId\n          in: query\n          style: form\n          explode: true\n          schema:\n            type: array\n            items:\n              type: integer\n        - name: from\n          in: query\n          description: in IS0 8601 format. eg. `1963-11-22T18:30:00Z`\n          required: true\n          schema:\n            type: string\n            format: date-time\n        - name: to\n          in: query\n          description: in IS0 8601 format. eg. `1963-11-22T18:30:00Z`\n          required: true\n          schema:\n            type: string\n            format: date-time\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ReportTrips'\n            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ReportTrips'\n  /reports/stops:\n    get:\n      summary: >-\n        Fetch a list of ReportStops within the time period for the Devices or\n        Groups\n      description: At least one _deviceId_ or one _groupId_ must be passed\n      tags:\n        - Reports\n      parameters:\n        - name: deviceId\n          in: query\n          style: form\n          explode: true\n          schema:\n            type: array\n            items:\n              type: integer\n        - name: groupId\n          in: query\n          style: form\n          explode: true\n          schema:\n            type: array\n            items:\n              type: integer\n        - name: from\n          in: query\n          description: in IS0 8601 format. eg. `1963-11-22T18:30:00Z`\n          required: true\n          schema:\n            type: string\n            format: date-time\n        - name: to\n          in: query\n          description: in IS0 8601 format. eg. `1963-11-22T18:30:00Z`\n          required: true\n          schema:\n            type: string\n            format: date-time\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ReportStops'\n            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ReportStops'\n  /statistics:\n    get:\n      summary: Fetch server Statistics\n      tags:\n        - Statistics\n      parameters:\n        - name: from\n          in: query\n          description: in IS0 8601 format. eg. `1963-11-22T18:30:00Z`\n          required: true\n          schema:\n            type: string\n            format: date-time\n        - name: to\n          in: query\n          description: in IS0 8601 format. eg. `1963-11-22T18:30:00Z`\n          required: true\n          schema:\n            type: string\n            format: date-time\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Statistics'\n  /calendars:\n    get:\n      summary: Fetch a list of Calendars\n      description: Without params, it returns a list of Calendars the user has access to\n      tags:\n        - Calendars\n      parameters:\n        - name: all\n          in: query\n          description: Can only be used by admins or managers to fetch all entities\n          schema:\n            type: boolean\n        - name: userId\n          in: query\n          description: Standard users can use this only with their own _userId_\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Calendar'\n    post:\n      summary: Create a Calendar\n      tags:\n        - Calendars\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Calendar'\n        required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Calendar'\n      x-codegen-request-body-name: body\n  /calendars/{id}:\n    put:\n      summary: Update a Calendar\n      tags:\n        - Calendars\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Calendar'\n        required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Calendar'\n      x-codegen-request-body-name: body\n    delete:\n      summary: Delete a Calendar\n      tags:\n        - Calendars\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: integer\n      responses:\n        '204':\n          description: No Content\n          content: {}\n  /attributes/computed:\n    get:\n      summary: Fetch a list of Attributes\n      description: Without params, it returns a list of Attributes the user has access to\n      tags:\n        - Attributes\n      parameters:\n        - name: all\n          in: query\n          description: Can only be used by admins or managers to fetch all entities\n          schema:\n            type: boolean\n        - name: userId\n          in: query\n          description: Standard users can use this only with their own _userId_\n          schema:\n            type: integer\n        - name: deviceId\n          in: query\n          description: >-\n            Standard users can use this only with _deviceId_s, they have access\n            to\n          schema:\n            type: integer\n        - name: groupId\n          in: query\n          description: >-\n            Standard users can use this only with _groupId_s, they have access\n            to\n          schema:\n            type: integer\n        - name: refresh\n          in: query\n          schema:\n            type: boolean\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Attribute'\n    post:\n      summary: Create an Attribute\n      tags:\n        - Attributes\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Attribute'\n        required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Attribute'\n      x-codegen-request-body-name: body\n  /attributes/computed/{id}:\n    put:\n      summary: Update an Attribute\n      tags:\n        - Attributes\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Attribute'\n        required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Attribute'\n      x-codegen-request-body-name: body\n    delete:\n      summary: Delete an Attribute\n      tags:\n        - Attributes\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: integer\n      responses:\n        '204':\n          description: No Content\n          content: {}\n  /drivers:\n    get:\n      summary: Fetch a list of Drivers\n      description: Without params, it returns a list of Drivers the user has access to\n      tags:\n        - Drivers\n      parameters:\n        - name: all\n          in: query\n          description: Can only be used by admins or managers to fetch all entities\n          schema:\n            type: boolean\n        - name: userId\n          in: query\n          description: Standard users can use this only with their own _userId_\n          schema:\n            type: integer\n        - name: deviceId\n          in: query\n          description: >-\n            Standard users can use this only with _deviceId_s, they have access\n            to\n          schema:\n            type: integer\n        - name: groupId\n          in: query\n          description: >-\n            Standard users can use this only with _groupId_s, they have access\n            to\n          schema:\n            type: integer\n        - name: refresh\n          in: query\n          schema:\n            type: boolean\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Driver'\n    post:\n      summary: Create a Driver\n      tags:\n        - Drivers\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Driver'\n        required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Driver'\n      x-codegen-request-body-name: body\n  /drivers/{id}:\n    put:\n      summary: Update a Driver\n      tags:\n        - Drivers\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Driver'\n        required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Driver'\n      x-codegen-request-body-name: body\n    delete:\n      summary: Delete a Driver\n      tags:\n        - Drivers\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: integer\n      responses:\n        '204':\n          description: No Content\n          content: {}\n  /maintenance:\n    get:\n      summary: Fetch a list of Maintenance\n      description: Without params, it returns a list of Maintenance the user has access to\n      tags:\n        - Maintenance\n      parameters:\n        - name: all\n          in: query\n          description: Can only be used by admins or managers to fetch all entities\n          schema:\n            type: boolean\n        - name: userId\n          in: query\n          description: Standard users can use this only with their own _userId_\n          schema:\n            type: integer\n        - name: deviceId\n          in: query\n          description: >-\n            Standard users can use this only with _deviceId_s, they have access\n            to\n          schema:\n            type: integer\n        - name: groupId\n          in: query\n          description: >-\n            Standard users can use this only with _groupId_s, they have access\n            to\n          schema:\n            type: integer\n        - name: refresh\n          in: query\n          schema:\n            type: boolean\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Maintenance'\n    post:\n      summary: Create a Maintenance\n      tags:\n        - Maintenance\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Maintenance'\n        required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Maintenance'\n      x-codegen-request-body-name: body\n  /maintenance/{id}:\n    put:\n      summary: Update a Maintenance\n      tags:\n        - Maintenance\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Maintenance'\n        required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Maintenance'\n      x-codegen-request-body-name: body\n    delete:\n      summary: Delete a Maintenance\n      tags:\n        - Maintenance\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: integer\n      responses:\n        '204':\n          description: No Content\n          content: {}\ncomponents:\n  schemas:\n    Position:\n      type: object\n      properties:\n        id:\n          type: integer\n        deviceId:\n          type: integer\n        protocol:\n          type: string\n        deviceTime:\n          type: string\n          description: in IS0 8601 format. eg. `1963-11-22T18:30:00Z`\n          format: date-time\n        fixTime:\n          type: string\n          description: in IS0 8601 format. eg. `1963-11-22T18:30:00Z`\n          format: date-time\n        serverTime:\n          type: string\n          description: in IS0 8601 format. eg. `1963-11-22T18:30:00Z`\n          format: date-time\n        outdated:\n          type: boolean\n        valid:\n          type: boolean\n        latitude:\n          type: number\n        longitude:\n          type: number\n        altitude:\n          type: number\n        speed:\n          type: number\n          description: in knots\n        course:\n          type: number\n        address:\n          type: string\n        accuracy:\n          type: number\n        network:\n          type: object\n          properties: {}\n        geofenceIds:\n          type: array\n          items:\n            type: integer\n        attributes:\n          type: object\n          properties: {}\n    User:\n      type: object\n      properties:\n        id:\n          type: integer\n        name:\n          type: string\n        email:\n          type: string\n        phone:\n          type: string\n        readonly:\n          type: boolean\n        administrator:\n          type: boolean\n        map:\n          type: string\n        latitude:\n          type: number\n        longitude:\n          type: number\n        zoom:\n          type: integer\n        password:\n          type: string\n        coordinateFormat:\n          type: string\n        disabled:\n          type: boolean\n        expirationTime:\n          type: string\n          description: in IS0 8601 format. eg. `1963-11-22T18:30:00Z`\n          format: date-time\n          nullable: true\n        deviceLimit:\n          type: integer\n        userLimit:\n          type: integer\n        deviceReadonly:\n          type: boolean\n        limitCommands:\n          type: boolean\n        fixedEmail:\n          type: boolean\n        poiLayer:\n          type: string\n        attributes:\n          type: object\n          properties: {}\n    Server:\n      type: object\n      properties:\n        id:\n          type: integer\n        registration:\n          type: boolean\n        readonly:\n          type: boolean\n        deviceReadonly:\n          type: boolean\n        limitCommands:\n          type: boolean\n        map:\n          type: string\n        bingKey:\n          type: string\n        mapUrl:\n          type: string\n        poiLayer:\n          type: string\n        latitude:\n          type: number\n        longitude:\n          type: number\n        zoom:\n          type: integer\n        version:\n          type: string\n        forceSettings:\n          type: boolean\n        coordinateFormat:\n          type: string\n        openIdEnabled:\n          type: boolean\n        openIdForce:\n          type: boolean\n        attributes:\n          type: object\n          properties: {}\n    Command:\n      type: object\n      properties:\n        id:\n          type: integer\n        deviceId:\n          type: integer\n        description:\n          type: string\n        type:\n          type: string\n        attributes:\n          type: object\n          properties: {}\n    Device:\n      type: object\n      properties:\n        id:\n          type: integer\n        name:\n          type: string\n        uniqueId:\n          type: string\n        status:\n          type: string\n        disabled:\n          type: boolean\n        lastUpdate:\n          type: string\n          description: in IS0 8601 format. eg. `1963-11-22T18:30:00Z`\n          format: date-time\n        positionId:\n          type: integer\n        groupId:\n          type: integer\n        phone:\n          type: string\n        model:\n          type: string\n        contact:\n          type: string\n        category:\n          type: string\n        attributes:\n          type: object\n          properties: {}\n    Group:\n      type: object\n      properties:\n        id:\n          type: integer\n        name:\n          type: string\n        groupId:\n          type: integer\n        attributes:\n          type: object\n          properties: {}\n    Permission:\n      type: object\n      properties:\n        userId:\n          type: integer\n          description: User id, can be only first parameter\n        deviceId:\n          type: integer\n          description: >-\n            Device id, can be first parameter or second only in combination with\n            userId\n        groupId:\n          type: integer\n          description: >-\n            Group id, can be first parameter or second only in combination with\n            userId\n        geofenceId:\n          type: integer\n          description: Geofence id, can be second parameter only\n        notificationId:\n          type: integer\n          description: Notification id, can be second parameter only\n        calendarId:\n          type: integer\n          description: >-\n            Calendar id, can be second parameter only and only in combination\n            with userId\n        attributeId:\n          type: integer\n          description: Computed attribute id, can be second parameter only\n        driverId:\n          type: integer\n          description: Driver id, can be second parameter only\n        managedUserId:\n          type: integer\n          description: >-\n            User id, can be second parameter only and only in combination with\n            userId\n        commandId:\n          type: integer\n          description: Saved command id, can be second parameter only\n      description: >-\n        This is a permission map that contain two object indexes. It is used to\n        link/unlink objects. Order is important. Example: { deviceId:8,\n        geofenceId: 16 }\n    CommandType:\n      type: object\n      properties:\n        type:\n          type: string\n    Geofence:\n      type: object\n      properties:\n        id:\n          type: integer\n        name:\n          type: string\n        description:\n          type: string\n        area:\n          type: string\n        calendarId:\n          type: integer\n        attributes:\n          type: object\n          properties: {}\n    Notification:\n      type: object\n      properties:\n        id:\n          type: integer\n        type:\n          type: string\n        always:\n          type: boolean\n        web:\n          type: boolean\n        mail:\n          type: boolean\n        sms:\n          type: boolean\n        calendarId:\n          type: integer\n        attributes:\n          type: object\n          properties: {}\n    NotificationType:\n      type: object\n      properties:\n        type:\n          type: string\n    Event:\n      type: object\n      properties:\n        id:\n          type: integer\n        type:\n          type: string\n        eventTime:\n          type: string\n          description: in IS0 8601 format. eg. `1963-11-22T18:30:00Z`\n          format: date-time\n        deviceId:\n          type: integer\n        positionId:\n          type: integer\n        geofenceId:\n          type: integer\n        maintenanceId:\n          type: integer\n        attributes:\n          type: object\n          properties: {}\n    ReportSummary:\n      type: object\n      properties:\n        deviceId:\n          type: integer\n        deviceName:\n          type: string\n        maxSpeed:\n          type: number\n          description: in knots\n        averageSpeed:\n          type: number\n          description: in knots\n        distance:\n          type: number\n          description: in meters\n        spentFuel:\n          type: number\n          description: in liters\n        engineHours:\n          type: integer\n    ReportTrips:\n      type: object\n      properties:\n        deviceId:\n          type: integer\n        deviceName:\n          type: string\n        maxSpeed:\n          type: number\n          description: in knots\n        averageSpeed:\n          type: number\n          description: in knots\n        distance:\n          type: number\n          description: in meters\n        spentFuel:\n          type: number\n          description: in liters\n        duration:\n          type: integer\n        startTime:\n          type: string\n          description: in IS0 8601 format. eg. `1963-11-22T18:30:00Z`\n          format: date-time\n        startAddress:\n          type: string\n        startLat:\n          type: number\n        startLon:\n          type: number\n        endTime:\n          type: string\n          description: in IS0 8601 format. eg. `1963-11-22T18:30:00Z`\n          format: date-time\n        endAddress:\n          type: string\n        endLat:\n          type: number\n        endLon:\n          type: number\n        driverUniqueId:\n          type: integer\n        driverName:\n          type: string\n    ReportStops:\n      type: object\n      properties:\n        deviceId:\n          type: integer\n        deviceName:\n          type: string\n        duration:\n          type: integer\n        startTime:\n          type: string\n          description: in IS0 8601 format. eg. `1963-11-22T18:30:00Z`\n          format: date-time\n        address:\n          type: string\n        lat:\n          type: number\n        lon:\n          type: number\n        endTime:\n          type: string\n          description: in IS0 8601 format. eg. `1963-11-22T18:30:00Z`\n          format: date-time\n        spentFuel:\n          type: number\n          description: in liters\n        engineHours:\n          type: integer\n    Statistics:\n      type: object\n      properties:\n        captureTime:\n          type: string\n          description: in IS0 8601 format. eg. `1963-11-22T18:30:00Z`\n          format: date-time\n        activeUsers:\n          type: integer\n        activeDevices:\n          type: integer\n        requests:\n          type: integer\n        messagesReceived:\n          type: integer\n        messagesStored:\n          type: integer\n    DeviceAccumulators:\n      type: object\n      properties:\n        deviceId:\n          type: integer\n        totalDistance:\n          type: number\n          description: in meters\n        hours:\n          type: number\n    Calendar:\n      type: object\n      properties:\n        id:\n          type: integer\n        name:\n          type: string\n        data:\n          type: string\n          description: base64 encoded in iCalendar format\n        attributes:\n          type: object\n          properties: {}\n    Attribute:\n      type: object\n      properties:\n        id:\n          type: integer\n        description:\n          type: string\n        attribute:\n          type: string\n        expression:\n          type: string\n        type:\n          type: string\n          description: String|Number|Boolean\n    Driver:\n      type: object\n      properties:\n        id:\n          type: integer\n        name:\n          type: string\n        uniqueId:\n          type: string\n        attributes:\n          type: object\n          properties: {}\n    Maintenance:\n      type: object\n      properties:\n        id:\n          type: integer\n        name:\n          type: string\n        type:\n          type: string\n        start:\n          type: number\n        period:\n          type: number\n        attributes:\n          type: object\n          properties: {}\n  parameters:\n    entityId:\n      name: id\n      in: path\n      required: true\n      schema:\n        type: integer\n    all:\n      name: all\n      in: query\n      description: Can only be used by admins or managers to fetch all entities\n      schema:\n        type: boolean\n    refresh:\n      name: refresh\n      in: query\n      schema:\n        type: boolean\n    userId:\n      name: userId\n      in: query\n      description: Standard users can use this only with their own _userId_\n      schema:\n        type: integer\n    deviceId:\n      name: deviceId\n      in: query\n      description: Standard users can use this only with _deviceId_s, they have access to\n      schema:\n        type: integer\n    groupId:\n      name: groupId\n      in: query\n      description: Standard users can use this only with _groupId_s, they have access to\n      schema:\n        type: integer\n    deviceIdArray:\n      name: deviceId\n      in: query\n      style: form\n      explode: true\n      schema:\n        type: array\n        items:\n          type: integer\n    groupIdArray:\n      name: groupId\n      in: query\n      style: form\n      explode: true\n      schema:\n        type: array\n        items:\n          type: integer\n    fromTime:\n      name: from\n      in: query\n      description: in IS0 8601 format. eg. `1963-11-22T18:30:00Z`\n      required: true\n      schema:\n        type: string\n        format: date-time\n    toTime:\n      name: to\n      in: query\n      description: in IS0 8601 format. eg. `1963-11-22T18:30:00Z`\n      required: true\n      schema:\n        type: string\n        format: date-time\n  requestBodies:\n    Device:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Device'\n      required: true\n    Permission:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Permission'\n      required: true\n    Group:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Group'\n      required: true\n    User:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/User'\n      required: true\n    Geofence:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Geofence'\n      required: true\n    Calendar:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Calendar'\n      required: true\n    Attribute:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Attribute'\n      required: true\n    Driver:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Driver'\n      required: true\n    Command:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Command'\n      required: true\n    Notification:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Notification'\n      required: true\n    Maintenance:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Maintenance'\n      required: true\n  securitySchemes:\n    BasicAuth:\n      type: http\n      scheme: basic\n    ApiKey:\n      type: http\n      scheme: bearer\n"
        },
        {
          "name": "schema",
          "type": "tree",
          "content": null
        },
        {
          "name": "settings.gradle",
          "type": "blob",
          "size": 0.03515625,
          "content": "rootProject.name = \"tracker-server\"\n"
        },
        {
          "name": "setup",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "templates",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "traccar-web",
          "type": "commit",
          "content": null
        }
      ]
    }
  ]
}