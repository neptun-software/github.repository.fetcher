{
  "metadata": {
    "timestamp": 1736708796676,
    "page": 301,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Jasonchenlijian/FastBle",
      "stars": 5339,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0439453125,
          "content": "*.iml\n.gradle\n/local.properties\n/.idea\nbuild\n"
        },
        {
          "name": "FastBLE-2.3.4.jar",
          "type": "blob",
          "size": 75.9658203125,
          "content": null
        },
        {
          "name": "FastBLE-2.4.0.aar",
          "type": "blob",
          "size": 59.677734375,
          "content": null
        },
        {
          "name": "FastBLE.apk",
          "type": "blob",
          "size": 1422.3037109375,
          "content": null
        },
        {
          "name": "FastBleLib",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.087890625,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright 2016 chenlijian(陈利健)\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 17.3515625,
          "content": "![效果图](https://github.com/Jasonchenlijian/FastBle/raw/master/preview/fastble_poster.png)\n\nThanks to the logo designed by [anharismail](https://github.com/anharismail)\n\n\n# FastBle\nAndroid Bluetooth Low Energy\n\n- Filtering, scanning, linking, reading, writing, notification subscription and cancellation in a simple way.\n- Supports acquiring signal strength and setting the maximum transmission unit.\n- Support custom scan rules  \n- Support multi device connections  \n- Support reconnection  \n- Support configuration timeout for conncet or operation  \n\n\n### Preview\n![Preview_1](https://github.com/Jasonchenlijian/FastBle/raw/master/preview/new_1.png) \n![Preview_2](https://github.com/Jasonchenlijian/FastBle/raw/master/preview/new_2.png) \n![Preview_3](https://github.com/Jasonchenlijian/FastBle/raw/master/preview/new_3.png)\n![Preview_4](https://github.com/Jasonchenlijian/FastBle/raw/master/preview/new_4.png)\n\n\n### APK\nIf you want to quickly preview all the functions, you can download APK as a test tool directly.\n\n [FastBLE.apk](https://github.com/Jasonchenlijian/FastBle/raw/master/FastBLE.apk) \n\n\n### Gradle\n\n- Setp1: Add it in your root build.gradle at the end of repositories\n\n        allprojects {\n            repositories {\n                ...\n                maven { url 'https://jitpack.io' }\n            }\n        }\n\n\n- Step2: Add the dependency\n\n        dependencies {\n            implementation 'com.github.Jasonchenlijian:FastBle:2.4.0'\n        }\n    \n### Jar\n\n[FastBLE-2.4.0.jar](https://github.com/Jasonchenlijian/FastBle/raw/master/FastBLE-2.4.0.jar)\n\n\n## Wiki\n\n[中文文档](https://github.com/Jasonchenlijian/FastBle/wiki)\n\n[Android BLE开发详解和FastBle源码解析](https://www.jianshu.com/p/795bb0a08beb)\n\n\n\n## Usage\n\n- #### Init\n    \n        BleManager.getInstance().init(getApplication());\n\n- #### Determine whether the current Android system supports BLE\n\n        boolean isSupportBle()\n\n- #### Open or close Bluetooth\n\n\t\tvoid enableBluetooth()\n\t\tvoid disableBluetooth()\n\n- #### Initialization configuration\n\n        BleManager.getInstance()\n                .enableLog(true)\n                .setReConnectCount(1, 5000)\n\t            .setSplitWriteNum(20)\n\t            .setConnectOverTime(10000)\n                .setOperateTimeout(5000);\n\n- #### Configuration scan rules\n\n\t`void initScanRule(BleScanRuleConfig scanRuleConfig)`\n\n        BleScanRuleConfig scanRuleConfig = new BleScanRuleConfig.Builder()\n                .setServiceUuids(serviceUuids)\n                .setDeviceName(true, names)\n                .setDeviceMac(mac)\n                .setAutoConnect(isAutoConnect)\n                .setScanTimeOut(10000)\n                .build();\n        BleManager.getInstance().initScanRule(scanRuleConfig);\n\n\tTips：\n\t- Before scanning the device, scan rules can be configured to filter out the equipment matching the program.\n\t- What is not configured is the default parameter\n\n- #### Scan\n\n\t`void scan(BleScanCallback callback)`\n\n        BleManager.getInstance().scan(new BleScanCallback() {\n            @Override\n            public void onScanStarted(boolean success) {\n\n            }\n\n            @Override\n            public void onScanning(BleDevice bleDevice) {\n\n            }\n\n            @Override\n            public void onScanFinished(List<BleDevice> scanResultList) {\n\n            }\n        });\n\n\tTips:\n\t- The scanning and filtering process is carried out in the worker thread, so it will not affect the UI operation of the main thread. Eventually, every callback result will return to the main thread.。\n\n- #### Connect with device\n\n\n\t`BluetoothGatt connect(BleDevice bleDevice, BleGattCallback bleGattCallback)`\n\n        BleManager.getInstance().connect(bleDevice, new BleGattCallback() {\n            @Override\n            public void onStartConnect() {\n\n            }\n\n            @Override\n            public void onConnectFail(BleDevice bleDevice, BleException exception) {\n\n            }\n\n            @Override\n            public void onConnectSuccess(BleDevice bleDevice, BluetoothGatt gatt, int status) {\n\n            }\n\n            @Override\n            public void onDisConnected(boolean isActiveDisConnected, BleDevice bleDevice, BluetoothGatt gatt, int status) {\n\n            }\n        });\n\n\tTips:\n\t- On some types of phones, connectGatt must be effective on the main thread. It is very recommended that the connection process be placed in the main thread.\n\t- After connection failure, reconnect: the framework contains reconnection mechanism after connection failure, which can configure reconnection times and intervals. Of course, you can also call the `connect` method in `onConnectFail` callback automatically.\n\t- The connection is disconnected and reconnected: you can call the `connect` method again in the `onDisConnected` callback method.\n\t- In order to ensure the success rate of reconnection, it is recommended to reconnect after a period of interval.\n\t- When some models fail, they will be unable to scan devices for a short time. They can be connected directly through device objects or devices MAC without scanning.\n\n- #### Connect with Mac\n\n\t`BluetoothGatt connect(String mac, BleGattCallback bleGattCallback)`\n\n        BleManager.getInstance().connect(mac, new BleGattCallback() {\n            @Override\n            public void onStartConnect() {\n\n            }\n\n            @Override\n            public void onConnectFail(BleDevice bleDevice, BleException exception) {\n\n            }\n\n            @Override\n            public void onConnectSuccess(BleDevice bleDevice, BluetoothGatt gatt, int status) {\n\n            }\n\n            @Override\n            public void onDisConnected(boolean isActiveDisConnected, BleDevice bleDevice, BluetoothGatt gatt, int status) {\n\n            }\n        });\n\n\tTips:\n\t- This method can attempt to connect directly to the BLE device around the Mac without scanning.\n\t- In many usage scenarios, I suggest that APP save the Mac of the user's customary device, then use this method to connect, which will greatly improve the connection efficiency.\n\n- #### Scan and connect\n\n\tAfter scanning the first equipment that meets the scanning rules, it will stop scanning and connect to the device.\n\n\t`void scanAndConnect(BleScanAndConnectCallback callback)`\n\n        BleManager.getInstance().scanAndConnect(new BleScanAndConnectCallback() {\n            @Override\n            public void onScanStarted(boolean success) {\n\n            }\n\n            @Override\n            public void onScanFinished(BleDevice scanResult) {\n\n            }\n\n            @Override\n            public void onStartConnect() {\n\n            }\n\n            @Override\n            public void onConnectFail(BleDevice bleDevice,BleException exception) {\n\n            }\n\n            @Override\n            public void onConnectSuccess(BleDevice bleDevice, BluetoothGatt gatt, int status) {\n\n            }\n\n            @Override\n            public void onDisConnected(boolean isActiveDisConnected, BleDevice device, BluetoothGatt gatt, int status) {\n\n            }\n        }); \n\n\n- #### Cancel scan\n\n\t`void cancelScan()`\n\n\t\tBleManager.getInstance().cancelScan();\n\n\tTips:\n\t- If this method is called, if it is still in the scan state, it will end immediately, and callback the `onScanFinished` method.\n\n\n- #### Notify\n\t`void notify(BleDevice bleDevice,\n                       String uuid_service,\n                       String uuid_notify,\n                       BleNotifyCallback callback)`\n\t`void notify(BleDevice bleDevice,\n                       String uuid_service,\n                       String uuid_notify,\n                       boolean useCharacteristicDescriptor,\n                       BleNotifyCallback callback)`\n                        \n        BleManager.getInstance().notify(\n                bleDevice,\n                uuid_service,\n                uuid_characteristic_notify,\n                new BleNotifyCallback() {\n                    @Override\n                    public void onNotifySuccess() {\n\n                    }\n\n                    @Override\n                    public void onNotifyFailure(BleException exception) {\n\n                    }\n\n                    @Override\n                    public void onCharacteristicChanged(byte[] data) {\n\n                    }\n                });\n\t\n\n- #### Stop Notify\n\n\t`boolean stopNotify(BleDevice bleDevice,\n                              String uuid_service,\n                              String uuid_notify)`\n\t`boolean stopNotify(BleDevice bleDevice,\n                              String uuid_service,\n                              String uuid_notify,\n                              boolean useCharacteristicDescriptor)`\n\n\t\tBleManager.getInstance().stopNotify(uuid_service, uuid_characteristic_notify);\n\n- #### Indicate\n\n\t`void indicate(BleDevice bleDevice,\n                         String uuid_service,\n                         String uuid_indicate,\n                         BleIndicateCallback callback)`\n\t`void indicate(BleDevice bleDevice,\n                         String uuid_service,\n                         String uuid_indicate,\n                         boolean useCharacteristicDescriptor,\n                         BleIndicateCallback callback)`\n\n        BleManager.getInstance().indicate(\n                bleDevice,\n                uuid_service,\n                uuid_characteristic_indicate,\n                new BleIndicateCallback() {\n                    @Override\n                    public void onIndicateSuccess() {\n\n                    }\n\n                    @Override\n                    public void onIndicateFailure(BleException exception) {\n\n                    }\n\n                    @Override\n                    public void onCharacteristicChanged(byte[] data) {\n\n                    }\n                });\n\n\n- #### Stop Indicate\n\n    `boolean stopIndicate(BleDevice bleDevice,\n                                String uuid_service,\n                                String uuid_indicate)`\n\t`boolean stopIndicate(BleDevice bleDevice,\n                                String uuid_service,\n                                String uuid_indicate,\n                                boolean useCharacteristicDescriptor)`\n    \n\t\tBleManager.getInstance().stopIndicate(uuid_service, uuid_characteristic_indicate);\n\n- #### Write\n\n\t`void write(BleDevice bleDevice,\n                      String uuid_service,\n                      String uuid_write,\n                      byte[] data,\n                      BleWriteCallback callback)`\n\t`void write(BleDevice bleDevice,\n                      String uuid_service,\n                      String uuid_write,\n                      byte[] data,\n                      boolean split,\n                      BleWriteCallback callback)`\n\t`void write(BleDevice bleDevice,\n                      String uuid_service,\n                      String uuid_write,\n                      byte[] data,\n                      boolean split,\n                      boolean sendNextWhenLastSuccess,\n                      long intervalBetweenTwoPackage,\n                      BleWriteCallback callback)`\n\n        BleManager.getInstance().write(\n                bleDevice,\n                uuid_service,\n                uuid_characteristic_write,\n                data,\n                new BleWriteCallback() {\n                    @Override\n                    public void onWriteSuccess(int current, int total, byte[] justWrite) {\n\n                    }\n\n                    @Override\n                    public void onWriteFailure(BleException exception) {\n\n                    }\n                });\n\n\tTips:\n\t- Without expanding MTU and expanding MTU's ineffectiveness, subcontracting is required when long data with more than 20 bytes are to be sent. The parameter `boolean split` indicates whether to use packet delivery; the `write` method without the `boolean split` parameter is subcontracted to the data by more than 20 bytes by default.\n\t- On the `onWriteSuccess` callback method: `current` represents the number of packets that are currently sent, and `total` represents the total packet data this time, and `justWrite` represents the successful packet that has just been sent.\n\n- #### Read\n\n\t`void read(BleDevice bleDevice,\n                     String uuid_service,\n                     String uuid_read,\n                     BleReadCallback callback)`\n\n        BleManager.getInstance().read(\n                bleDevice,\n                uuid_service,\n                uuid_characteristic_read,\n                new BleReadCallback() {\n                    @Override\n                    public void onReadSuccess(byte[] data) {\n\n                    }\n\n                    @Override\n                    public void onReadFailure(BleException exception) {\n\n                    }\n                });\n\n\n- #### Get Rssi\n\n\t`void readRssi(BleDevice bleDevice, BleRssiCallback callback)`\n\n        BleManager.getInstance().readRssi(\n                bleDevice,\n                new BleRssiCallback() {\n\n                    @Override\n                    public void onRssiFailure(BleException exception) {\n\n                    }\n\n                    @Override\n                    public void onRssiSuccess(int rssi) {\n\n                    }\n                });\n\n\tTips：\n\t- Obtaining the signal strength of the device must be carried out after the device is connected.\n\t- Some devices may not be able to read Rssi, do not callback onRssiSuccess (), and callback onRssiFailure () because of timeout.\n\n- #### set Mtu\n\n\t`void setMtu(BleDevice bleDevice,\n                       int mtu,\n                       BleMtuChangedCallback callback)`\n\n        BleManager.getInstance().setMtu(bleDevice, mtu, new BleMtuChangedCallback() {\n            @Override\n            public void onSetMTUFailure(BleException exception) {\n\n            }\n\n            @Override\n            public void onMtuChanged(int mtu) {\n\n            }\n        });\n\n\tTips：\n\t- Setting up MTU requires operation after the device is connected.\n\t- There is no such restriction in the Android Version (API-17 to API-20). Therefore, only the equipment above API21 will expand the demand for MTU.\n\t- The parameter MTU of the method is set to 23, and the maximum setting is 512.\n\t- Not every device supports the expansion of MTU, which requires both sides of the communication, that is to say, the need for the device hardware also supports the expansion of the MTU method. After calling this method, you can see through onMtuChanged (int MTU) how much the maximum transmission unit of the device is expanded to after the final setup. If the device does not support, no matter how many settings, the final MTU will be 23.\n\n- #### requestConnectionPriority\n\n\t`boolean requestConnectionPriority(BleDevice bleDevice,int connectionPriority)`\n\n\tTips:\n\t- Request a specific connection priority. Must be one of{@link BluetoothGatt#CONNECTION_PRIORITY_BALANCED}, {@link BluetoothGatt#CONNECTION_PRIORITY_HIGH} or {@link BluetoothGatt#CONNECTION_PRIORITY_LOW_POWER}.\n\n- #### Converte BleDevice object\n\n\t`BleDevice convertBleDevice(BluetoothDevice bluetoothDevice)`\n\n\t`BleDevice convertBleDevice(ScanResult scanResult)`\n\n\tTips：\n\t- The completed BleDevice object is still unconnected, if necessary, advanced connection.\n\n- #### Get all connected devices\n\n\t`List<BleDevice> getAllConnectedDevice()`\n\n        BleManager.getInstance().getAllConnectedDevice();\n\n- #### Get a BluetoothGatt of a connected device\n\n\t`BluetoothGatt getBluetoothGatt(BleDevice bleDevice)`\n\n- #### Get all Service of a connected device\n\n\t`List<BluetoothGattService> getBluetoothGattServices(BleDevice bleDevice)`\n\n- #### Get all the Characteristic of a Service\n\n\t`List<BluetoothGattCharacteristic> getBluetoothGattCharacteristics(BluetoothGattService service)`\n\t\t\n- #### Determine whether a device has been connected\n\n\t`boolean isConnected(BleDevice bleDevice)`\n\n        BleManager.getInstance().isConnected(bleDevice);\n\n\t`boolean isConnected(String mac)`\n\n\t\tBleManager.getInstance().isConnected(mac);\n\n- #### Determine the current connection state of a device\n\n\t`int getConnectState(BleDevice bleDevice)`\n\n\t\tBleManager.getInstance().getConnectState(bleDevice);\n\n- #### Disconnect a device\n\n\t`void disconnect(BleDevice bleDevice)`\n\n        BleManager.getInstance().disconnect(bleDevice);\n\n- #### Disconnect all devices\n\n\t`void disconnectAllDevice()`\n\n        BleManager.getInstance().disconnectAllDevice();\n\n- #### Out of use, clean up resources\n\n\t`void destroy()`\n\n        BleManager.getInstance().destroy();\n\n\n- #### HexUtil\n\n    Data operation tool class\n\n    `String formatHexString(byte[] data, boolean addSpace)`\n\n\t`byte[] hexStringToBytes(String hexString)`\n\n\t`char[] encodeHex(byte[] data, boolean toLowerCase)`\n\n\n- #### BleDevice\n\n    BLE device object is the smallest unit object of scanning, connection and operation in this framework.\n\n    `String getName()` Bluetooth broadcast name\n\n    `String getMac()` Bluetooth MAC\n\n    `byte[] getScanRecord()` Broadcast data\n\n    `int getRssi()` Initial signal intensity\n\n\n\n## Contact\nIf you have problems and ideas to communicate with me, you can contact me in the following ways.\n\nWeChat： chenlijian1216\n\nEmail： jasonchenlijian@gmail.com\n\n\n## License\n\n\t   Copyright 2016 chenlijian\n\n\t   Licensed under the Apache License, Version 2.0 (the \"License\");\n\t   you may not use this file except in compliance with the License.\n\t   You may obtain a copy of the License at\n\n   \t\t   http://www.apache.org/licenses/LICENSE-2.0\n\n\t   Unless required by applicable law or agreed to in writing, software\n\t   distributed under the License is distributed on an \"AS IS\" BASIS,\n\t   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t   See the License for the specific language governing permissions and\n\t   limitations under the License.\n\n\n\n\n"
        },
        {
          "name": "app",
          "type": "tree",
          "content": null
        },
        {
          "name": "build.gradle",
          "type": "blob",
          "size": 0.333984375,
          "content": "\nbuildscript {\n\n    apply from: 'config.gradle'\n\n    repositories {\n        mavenCentral()\n        google()\n    }\n    dependencies {\n        classpath 'com.android.tools.build:gradle:4.1.3'\n    }\n}\n\nallprojects {\n    repositories {\n        mavenCentral()\n        google()\n    }\n}\n\ntask clean(type: Delete) {\n    delete rootProject.buildDir\n}\n"
        },
        {
          "name": "config.gradle",
          "type": "blob",
          "size": 0.2646484375,
          "content": "ext {\n    versionControl = [\n            versionCode: 240,\n            versonName : \"2.4.0\"\n    ]\n\n    android = [\n            minSdkVersion    : 14,\n            targetSdkVersion : 30,\n            compileSdkVersion: 30,\n            buildToolsVersion: \"30.0.3\",\n    ]\n\n}\n\n"
        },
        {
          "name": "gradle.properties",
          "type": "blob",
          "size": 0.759765625,
          "content": "## Project-wide Gradle settings.\n#\n# For more details on how to configure your build environment visit\n# http://www.gradle.org/docs/current/userguide/build_environment.html\n#\n# Specifies the JVM arguments used for the daemon process.\n# The setting is particularly useful for tweaking memory settings.\n# Default value: -Xmx10248m -XX:MaxPermSize=256m\n# org.gradle.jvmargs=-Xmx2048m -XX:MaxPermSize=512m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8\n#\n# When configured, Gradle will run in incubating parallel mode.\n# This option should only be used with decoupled projects. More details, visit\n# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects\n# org.gradle.parallel=true\n#Wed Aug 10 16:29:06 CST 2016\nandroid.useAndroidX=true"
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 4.8544921875,
          "content": "#!/usr/bin/env bash\n\n##############################################################################\n##\n##  Gradle start up script for UN*X\n##\n##############################################################################\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS=\"\"\n\nAPP_NAME=\"Gradle\"\nAPP_BASE_NAME=`basename \"$0\"`\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=\"maximum\"\n\nwarn ( ) {\n    echo \"$*\"\n}\n\ndie ( ) {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n}\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\ncase \"`uname`\" in\n  CYGWIN* )\n    cygwin=true\n    ;;\n  Darwin* )\n    darwin=true\n    ;;\n  MINGW* )\n    msys=true\n    ;;\nesac\n\n# Attempt to set APP_HOME\n# Resolve links: $0 may be a link\nPRG=\"$0\"\n# Need this for relative symlinks.\nwhile [ -h \"$PRG\" ] ; do\n    ls=`ls -ld \"$PRG\"`\n    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n    if expr \"$link\" : '/.*' > /dev/null; then\n        PRG=\"$link\"\n    else\n        PRG=`dirname \"$PRG\"`\"/$link\"\n    fi\ndone\nSAVED=\"`pwd`\"\ncd \"`dirname \\\"$PRG\\\"`/\" >/dev/null\nAPP_HOME=\"`pwd -P`\"\ncd \"$SAVED\" >/dev/null\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n    else\n        JAVACMD=\"$JAVA_HOME/bin/java\"\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=\"java\"\n    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\nfi\n\n# Increase the maximum file descriptors if we can.\nif [ \"$cygwin\" = \"false\" -a \"$darwin\" = \"false\" ] ; then\n    MAX_FD_LIMIT=`ulimit -H -n`\n    if [ $? -eq 0 ] ; then\n        if [ \"$MAX_FD\" = \"maximum\" -o \"$MAX_FD\" = \"max\" ] ; then\n            MAX_FD=\"$MAX_FD_LIMIT\"\n        fi\n        ulimit -n $MAX_FD\n        if [ $? -ne 0 ] ; then\n            warn \"Could not set maximum file descriptor limit: $MAX_FD\"\n        fi\n    else\n        warn \"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\"\n    fi\nfi\n\n# For Darwin, add options to specify how the application appears in the dock\nif $darwin; then\n    GRADLE_OPTS=\"$GRADLE_OPTS \\\"-Xdock:name=$APP_NAME\\\" \\\"-Xdock:icon=$APP_HOME/media/gradle.icns\\\"\"\nfi\n\n# For Cygwin, switch paths to Windows format before running java\nif $cygwin ; then\n    APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`\n    CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`\n    JAVACMD=`cygpath --unix \"$JAVACMD\"`\n\n    # We build the pattern for arguments to be converted via cygpath\n    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`\n    SEP=\"\"\n    for dir in $ROOTDIRSRAW ; do\n        ROOTDIRS=\"$ROOTDIRS$SEP$dir\"\n        SEP=\"|\"\n    done\n    OURCYGPATTERN=\"(^($ROOTDIRS))\"\n    # Add a user-defined pattern to the cygpath arguments\n    if [ \"$GRADLE_CYGPATTERN\" != \"\" ] ; then\n        OURCYGPATTERN=\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\"\n    fi\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    i=0\n    for arg in \"$@\" ; do\n        CHECK=`echo \"$arg\"|egrep -c \"$OURCYGPATTERN\" -`\n        CHECK2=`echo \"$arg\"|egrep -c \"^-\"`                                 ### Determine if an option\n\n        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition\n            eval `echo args$i`=`cygpath --path --ignore --mixed \"$arg\"`\n        else\n            eval `echo args$i`=\"\\\"$arg\\\"\"\n        fi\n        i=$((i+1))\n    done\n    case $i in\n        (0) set -- ;;\n        (1) set -- \"$args0\" ;;\n        (2) set -- \"$args0\" \"$args1\" ;;\n        (3) set -- \"$args0\" \"$args1\" \"$args2\" ;;\n        (4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;\n        (5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;\n        (6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;\n        (7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;\n        (8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;\n        (9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;\n    esac\nfi\n\n# Split up the JVM_OPTS And GRADLE_OPTS values into an array, following the shell quoting and substitution rules\nfunction splitJvmOpts() {\n    JVM_OPTS=(\"$@\")\n}\neval splitJvmOpts $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS\nJVM_OPTS[${#JVM_OPTS[*]}]=\"-Dorg.gradle.appname=$APP_BASE_NAME\"\n\nexec \"$JAVACMD\" \"${JVM_OPTS[@]}\" -classpath \"$CLASSPATH\" org.gradle.wrapper.GradleWrapperMain \"$@\"\n"
        },
        {
          "name": "gradlew.bat",
          "type": "blob",
          "size": 2.259765625,
          "content": "@if \"%DEBUG%\" == \"\" @echo off\n@rem ##########################################################################\n@rem\n@rem  Gradle startup script for Windows\n@rem\n@rem ##########################################################################\n\n@rem Set local scope for the variables with windows NT shell\nif \"%OS%\"==\"Windows_NT\" setlocal\n\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nset DEFAULT_JVM_OPTS=\n\nset DIRNAME=%~dp0\nif \"%DIRNAME%\" == \"\" set DIRNAME=.\nset APP_BASE_NAME=%~n0\nset APP_HOME=%DIRNAME%\n\n@rem Find java.exe\nif defined JAVA_HOME goto findJavaFromJavaHome\n\nset JAVA_EXE=java.exe\n%JAVA_EXE% -version >NUL 2>&1\nif \"%ERRORLEVEL%\" == \"0\" goto init\n\necho.\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\necho.\necho Please set the JAVA_HOME variable in your environment to match the\necho location of your Java installation.\n\ngoto fail\n\n:findJavaFromJavaHome\nset JAVA_HOME=%JAVA_HOME:\"=%\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\n\nif exist \"%JAVA_EXE%\" goto init\n\necho.\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\necho.\necho Please set the JAVA_HOME variable in your environment to match the\necho location of your Java installation.\n\ngoto fail\n\n:init\n@rem Get command-line arguments, handling Windowz variants\n\nif not \"%OS%\" == \"Windows_NT\" goto win9xME_args\nif \"%@eval[2+2]\" == \"4\" goto 4NT_args\n\n:win9xME_args\n@rem Slurp the command line arguments.\nset CMD_LINE_ARGS=\nset _SKIP=2\n\n:win9xME_args_slurp\nif \"x%~1\" == \"x\" goto execute\n\nset CMD_LINE_ARGS=%*\ngoto execute\n\n:4NT_args\n@rem Get arguments from the 4NT Shell from JP Software\nset CMD_LINE_ARGS=%$\n\n:execute\n@rem Setup the command line\n\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\n\n@rem Execute Gradle\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%\n\n:end\n@rem End local scope for the variables with windows NT shell\nif \"%ERRORLEVEL%\"==\"0\" goto mainEnd\n\n:fail\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\nrem the _cmd.exe /c_ return code!\nif  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1\nexit /b 1\n\n:mainEnd\nif \"%OS%\"==\"Windows_NT\" endlocal\n\n:omega\n"
        },
        {
          "name": "preview",
          "type": "tree",
          "content": null
        },
        {
          "name": "settings.gradle",
          "type": "blob",
          "size": 0.029296875,
          "content": "include ':app', ':FastBleLib'\n"
        }
      ]
    }
  ]
}