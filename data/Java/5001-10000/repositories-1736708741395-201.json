{
  "metadata": {
    "timestamp": 1736708741395,
    "page": 201,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "google/grafika",
      "stars": 6088,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0419921875,
          "content": "build\n.gradle\n.idea\n*.iml\nlocal.properties\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.091796875,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 13.7607421875,
          "content": "Grafika\n=======\n\nWelcome to Grafika, a dumping ground for Android graphics & media hacks.\n\nGrafika is:\n- A collection of hacks exercising graphics features.\n- An SDK app, developed for API 18 (Android 4.3).  While some of the code\n  may work with older versions of Android, some sporatic work is done to\n  support them.\n- Open source (Apache 2 license), copyright by Google.  So you can use the\n  code according to the terms of the license (see \"LICENSE\").\n- A perpetual work-in-progress.  It's updated whenever the need arises.\n\nHowever:\n- It's not stable.\n- It's not polished or well tested.  Expect the UI to be ugly and awkward.\n- It's not intended as a demonstration of the proper way to do things.\n  The code may handle edge cases poorly or not at all.  Logging is often\n  left enabled at a moderately verbose level.\n- It's barely documented.\n- It's not part of the Android Open Source Project.  We cannot accept\n  contributions to Grafika, even if you have an AOSP CLA on file.\n- It's NOT AN OFFICIAL GOOGLE PRODUCT.  It's just a bunch of stuff that\n  got thrown together on company time and equipment.\n- It's generally just not supported.\n\nTo some extent, Grafika can be treated as a companion to the\n[Android System-Level Graphics Architecture](http://source.android.com/devices/graphics/architecture.html)\ndocument.  The doc explains the technology that the examples rely on, and uses some of\nGrafika's activities as examples.  If you want to understand how the code here works, start\nby reading that.\n\nThere is some overlap with the code on http://www.bigflake.com/mediacodec/.\nThe code there largely consists of \"headless\" CTS tests, which are designed\nto be robust, self-contained, and largely independent of the usual app\nlifecycle issues.  Grafika is a conventional app, and makes an effort to\nhandle app issues correctly (like not doing lots of work on the UI thread).\n\nFeatures are added to Grafika as the need arises, often in response to\ndeveloper complaints about correctness or performance problems in the\nplatform (either to confirm that the problems exist, or demonstrate an\napproach that works).\n\nThere are two areas where some amount of care is taken:\n- Thread safety.  It's really easy to get threads crossed in subtly dangerous ways when\n  working with the media classes.  (Read the\n  [Android SMP Primer](http://developer.android.com/training/articles/smp.html)\n  for a detailed introduction to the problem.)  GL/EGL's reliance on thread-local storage\n  doesn't help.  Threading issues are frequently called out in comments in the source code.\n- Garbage collection.  GC pauses cause jank.  Ideally, none of the activities will do any\n  allocations while in a \"steady state\".  Allocations may occur while changing modes,\n  e.g. starting or stopping recording.\n\nAll code is written in the Java programming language -- the NDK is not used.\n\nThe first time Grafika starts, two videos are generated (gen-eight-rects, gen-sliders).\nIf you want to experiment with the generation code, you can cause them to be re-generated\nfrom the main activity menu (\"Regenerate content\").\n\nCurrent features\n----------------\n\n[* Play video (TextureView)](app/src/main/java/com/android/grafika/PlayMovieActivity.java).  Plays the video track from an MP4 file.\n- Only sees files in `/data/data/com.android.grafika/files/`.  All of the activities that\n  create video leave their files there.  You'll also find two automatically-generated videos\n  (gen-eight-rects.mp4 and gen-slides.mp4).\n- By default the video is played once, at the same rate it was recorded.  You can use the\n  checkboxes to loop playback and/or play the frames at a fixed rate of 60 FPS.\n- Uses a `TextureView` for output.\n- Name starts with an asterisk so it's at the top of the list of activities.\n\n[Continuous capture](app/src/main/java/com/android/grafika/ContinuousCaptureActivity.java).  Stores video in a circular buffer, saving it when you hit the \"capture\" button.  (Formerly \"Constant capture\".)\n- Currently hard-wired to try to capture 7 seconds of video from the camera at 6MB/sec,\n  preferably 15fps 720p.  That requires a buffer size of about 5MB.\n- The time span of frames currently held in the buffer is displayed.  The actual\n  time span saved when you hit \"capture\" will be slightly less than what is shown because\n  we have to start the output on a sync frame, which are configured to appear once per second.\n- Output is a video-only MP4 file (\"constant-capture.mp4\").  Video is always 1280x720, which\n  usually matches what the camera provides; if it doesn't, the recorded video will have the\n  wrong aspect ratio.\n\n[Double decode](app/src/main/java/com/android/grafika/DoubleDecodeActivity.java).  Decodes two video streams side-by-side to a pair of `TextureViews`.\n- Plays the two auto-generated videos.  Note they play at different rates.\n- The video decoders don't stop when the screen is rotated.  We retain the `SurfaceTexture`\n  and just attach it to the new `TextureView`.  Useful for avoiding expensive codec reconfigures.\n  The decoders *do* stop if you leave the activity, so we don't tie up hardware codec\n  resources indefinitely.  (It also doesn't stop if you turn the screen off with the power\n  button, which isn't good for the battery, but might be handy if you're feeding an external\n  display or your player also handles audio.)\n- Unlike most activities in Grafika, this provides different layouts for portrait and landscape.\n  The videos are scaled to fit.\n\n[Hardware scaler exerciser](app/src/main/java/com/android/grafika/HardwareScalerActivity.java).  Shows GL rendering with on-the-fly surface size changes.\n- The motivation behind the feature this explores is described in a developer blog post:\n  http://android-developers.blogspot.com/2013/09/using-hardware-scaler-for-performance.html\n- You will see one frame rendered incorrectly when changing sizes.  This is because the\n  render size is adjusted in the \"surface changed\" callback, but the surface's size doesn't\n  actually change until we latch the next buffer.  This is straightforward to fix (left as\n  an exercise for the reader).\n\n[Live camera (TextureView)](app/src/main/java/com/android/grafika/LiveCameraActivity.java).  Directs the camera preview to a `TextureView`.\n- This comes more or less verbatim from the [TextureView](http://developer.android.com/reference/android/view/TextureView.html) documentation.\n- Uses the default (rear-facing) camera.  If the device has no default camera (e.g.\n  Nexus 7 (2012)), the Activity will crash.\n\n[Multi-surface test](app/src/main/java/com/android/grafika/MultiSurfaceTest.java).  Simple activity with three overlapping SurfaceViews, one marked secure.\n- Useful for examining HWC behavior with multiple static layers, and\n  screencap / screenrecord behavior with a secure surface.  (If you record the screen one\n  of the circles should be missing, and capturing the screen should just show black.)\n- If you tap the \"bounce\" button, the circle on the non-secure layer will animate.  It will\n  update as quickly as possible, which may be slower than the display refresh rate because\n  the circle is rendered in software.  The frame rate will be reported in logcat.\n\n[Play video (SurfaceView)](app/src/main/java/com/android/grafika/PlayMovieSurfaceActivity.java).  Plays the video track from an MP4 file.\n- Works very much like \"Play video (TextureView)\", though not all features are present.\n  See the class comment for a list of advantages to using SurfaceView.\n\n[Record GL app](app/src/main/java/com/android/grafika/RecordFBOActivity.java).  Simultaneously draws to the display and to a video encoder with OpenGL ES, using framebuffer objects to avoid re-rendering.\n- It can write to the video encoder three different ways: (1) draw twice; (2) draw offscreen and\n  blit twice; (3) draw onscreen and blit framebuffer.  #3 doesn't work yet.\n- The renderer is trigged by Choreographer to update every vsync.  If we get too far behind,\n  we will skip frames.  This is noted by an on-screen drop counter and a border flash.  You\n  generally won't see any stutter in the animation, because we don't skip the object\n  movement, just the render.\n- The encoder is fed every-other frame, so the recorded output will be ~30fps rather than ~60fps\n  on a typical device.\n- The recording is letter- or pillar-boxed to maintain an aspect ratio that matches the\n  display, so you'll get different results from recording in landscape vs. portrait.\n- The output is a video-only MP4 file (\"fbo-gl-recording.mp4\").\n\n[Record Screen using MediaProjectionManager](app/src/main/java/com/android/grafika/ScreenRecordActivity.java).\nRecords the screen to a movie using the MediaProjectionManager.  This API\nrequires API level 23 (Marshmallow) or greater.\n\n[Scheduled swap](app/src/main/java/com/android/grafika/ScheduledSwapActivity.java).  Exercises a SurfaceFlinger feature that allows you to submit buffers to be displayed at a specific time.\n- Requires API 19 (Android 4.4 \"KitKat\") to do what it's supposed to.  The current implementation\n  doesn't really look any different on API 18 to the naked eye.\n- You can configure the frame delivery timing (e.g. 24fps uses a 3-2 pattern) and how far\n  in advance frames are scheduled.  Selecting \"ASAP\" disables scheduling.\n- Use systrace with tags `sched gfx view --app=com.android.grafika` to observe the effects.\n- The moving square changes colors when the app is unhappy about timing.\n\n[Show + capture camera](app/src/main/java/com/android/grafika/CameraCaptureActivity.java).  Attempts to record at 720p from the front-facing camera, displaying the preview and recording it simultaneously.\n- Use the record button to toggle recording on and off.\n- Recording continues until stopped.  If you back out and return, recording will start again,\n  with a real-time gap.  If you try to play the movie while it's recording, you will see\n  an incomplete file (and probably cause the play movie activity to crash).\n- The recorded video is scaled to 640x480, so it will probably look squished.  A real app\n  would either set the recording size equal to the camera input size, or correct the aspect\n  ratio by letter- or pillar-boxing the frames as they are rendered to the encoder.\n- You can select a filter to apply to the preview.  It does not get applied to the recording.\n  The shader used for the filters is not optimized, but seems to perform well on most devices\n  (the original Nexus 7 (2012) being a notable exception).  Demo\n  here: http://www.youtube.com/watch?v=kH9kCP2T5Gg\n- The output is a video-only MP4 file (\"camera-test.mp4\").\n\n[Simple Canvas in TextureView](app/src/main/java/com/android/grafika/TextureViewCanvasActivity.java).  Exercises software rendering to a `TextureView` with a `Canvas`.\n- Renders as quickly as possible.  Because it's using software rendering, this will likely\n  run more slowly than the \"Simple GL in TextureView\" activity.\n- Toggles the use of a dirty rect every 64 frames.  When enabled, the dirty rect extends\n  horizontally across the screen.\n\n[Simple GL in TextureView](app/src/main/java/com/android/grafika/TextureViewGLActivity.java).  Demonstates simple use of GLES in a `TextureView`, rather than a `GLSurfaceView`.\n- Renders as quickly as possible.  On most devices it will exceed 60fps and flicker wildly,\n  but in 4.4 (\"KitKat\") a bug prevents the system from dropping frames.\n\n[Texture from Camera](app/src/main/java/com/android/grafika/TextureFromCameraActivity.java).  Renders Camera preview output with a GLES texture.\n- Adjust the sliders to set the size, rotation, and zoom.  Touch anywhere else to center\n  the rect at the point of the touch.\n\n[Color bars](app/src/main/java/com/android/grafika/ColorBarActivity.java).  Displays RGB color bars.\n\n[OpenGL ES Info](app/src/main/java/com/android/grafika/GlesInfoActivity.java).  Dumps version info and extension lists.\n- The \"Save\" button writes a copy of the output to the app's file area.\n\n[glTexImage2D speed test](app/src/main/java/com/android/grafika/TextureUploadActivity.java).  Simple, unscientific measurement of the time required to upload a 512x512 RGBA texture with `glTexImage2D()`.\n\n[glReadPixels speed test](app/src/main/java/com/android/grafika/ReadPixelsActivity.java).  Simple, unscientific measurement of the time required for `glReadPixels()` to read a 720p frame.\n\n\nKnown issues\n------------\n\n- Nexus 4 running Android 4.3 (JWR67E): \"Show + capture camera\" crashes if you select one of\n  the filtered modes.  Appears to be a driver bug (Adreno \"Internal compiler error\").\n\n\nFeature & fix ideas\n-------------------\n\nIn no particular order.\n\n- Stop using AsyncTask for anything where performance or latency matters.\n- Add a \"fat bits\" viewer for camera (single SurfaceView; left half has live camera feed\n  and a pan rect, right half has 8x pixels)\n- Change the \"Simple GL in TextureView\" animation.  Or add an epilepsy warning.\n- Cross-fade from one video to another, recording the result.  Allow specification of\n  the resolution (maybe QVGA, 720p, 1080p) and generate appropriately.\n- Add features to the video player, like a slider for random access, and buttons for\n  single-frame advance / rewind (requires seeking to nearest sync frame and decoding frames\n  until target is reached).\n- Convert a series of PNG images to video.\n- Play continuous video from a series of MP4 files with different characteristics.  Will\n  probably require \"preloading\" the next movie to keep playback seamless.\n- Experiment with alternatives to glReadPixels().  Add a PBO speed test.  (Doesn't seem\n  to be a way to play with eglCreateImageKHR from Java.)\n- Do something with ImageReader class (req API 19).\n- Figure out why \"double decode\" playback is sometimes janky.\n- Add fps indicator to \"Simple GL in TextureView\".\n- Capture audio from microphone, record + mux it.\n- Enable preview on front/back cameras simultaneously, display them side-by-side.  (This\n  appears to be impossible except on specific devices.)\n- Add a test that renders to two different TextureViews using different EGLContexts\n  from a single renderer thread.\n\n"
        },
        {
          "name": "app",
          "type": "tree",
          "content": null
        },
        {
          "name": "build.gradle",
          "type": "blob",
          "size": 0.9150390625,
          "content": "// Top-level build file where you can add configuration options common to all\n// sub-projects/modules.\n/*\n * Copyright 2017 (C) Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nbuildscript {\n    repositories {\n        google()\n        jcenter()\n    }\n    dependencies {\n        classpath 'com.android.tools.build:gradle:3.3.0'\n    }\n}\n\nallprojects {\n    repositories {\n        google()\n        jcenter()\n    }\n}\n"
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 4.8544921875,
          "content": "#!/usr/bin/env bash\n\n##############################################################################\n##\n##  Gradle start up script for UN*X\n##\n##############################################################################\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS=\"\"\n\nAPP_NAME=\"Gradle\"\nAPP_BASE_NAME=`basename \"$0\"`\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=\"maximum\"\n\nwarn ( ) {\n    echo \"$*\"\n}\n\ndie ( ) {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n}\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\ncase \"`uname`\" in\n  CYGWIN* )\n    cygwin=true\n    ;;\n  Darwin* )\n    darwin=true\n    ;;\n  MINGW* )\n    msys=true\n    ;;\nesac\n\n# Attempt to set APP_HOME\n# Resolve links: $0 may be a link\nPRG=\"$0\"\n# Need this for relative symlinks.\nwhile [ -h \"$PRG\" ] ; do\n    ls=`ls -ld \"$PRG\"`\n    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n    if expr \"$link\" : '/.*' > /dev/null; then\n        PRG=\"$link\"\n    else\n        PRG=`dirname \"$PRG\"`\"/$link\"\n    fi\ndone\nSAVED=\"`pwd`\"\ncd \"`dirname \\\"$PRG\\\"`/\" >/dev/null\nAPP_HOME=\"`pwd -P`\"\ncd \"$SAVED\" >/dev/null\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n    else\n        JAVACMD=\"$JAVA_HOME/bin/java\"\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=\"java\"\n    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\nfi\n\n# Increase the maximum file descriptors if we can.\nif [ \"$cygwin\" = \"false\" -a \"$darwin\" = \"false\" ] ; then\n    MAX_FD_LIMIT=`ulimit -H -n`\n    if [ $? -eq 0 ] ; then\n        if [ \"$MAX_FD\" = \"maximum\" -o \"$MAX_FD\" = \"max\" ] ; then\n            MAX_FD=\"$MAX_FD_LIMIT\"\n        fi\n        ulimit -n $MAX_FD\n        if [ $? -ne 0 ] ; then\n            warn \"Could not set maximum file descriptor limit: $MAX_FD\"\n        fi\n    else\n        warn \"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\"\n    fi\nfi\n\n# For Darwin, add options to specify how the application appears in the dock\nif $darwin; then\n    GRADLE_OPTS=\"$GRADLE_OPTS \\\"-Xdock:name=$APP_NAME\\\" \\\"-Xdock:icon=$APP_HOME/media/gradle.icns\\\"\"\nfi\n\n# For Cygwin, switch paths to Windows format before running java\nif $cygwin ; then\n    APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`\n    CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`\n    JAVACMD=`cygpath --unix \"$JAVACMD\"`\n\n    # We build the pattern for arguments to be converted via cygpath\n    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`\n    SEP=\"\"\n    for dir in $ROOTDIRSRAW ; do\n        ROOTDIRS=\"$ROOTDIRS$SEP$dir\"\n        SEP=\"|\"\n    done\n    OURCYGPATTERN=\"(^($ROOTDIRS))\"\n    # Add a user-defined pattern to the cygpath arguments\n    if [ \"$GRADLE_CYGPATTERN\" != \"\" ] ; then\n        OURCYGPATTERN=\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\"\n    fi\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    i=0\n    for arg in \"$@\" ; do\n        CHECK=`echo \"$arg\"|egrep -c \"$OURCYGPATTERN\" -`\n        CHECK2=`echo \"$arg\"|egrep -c \"^-\"`                                 ### Determine if an option\n\n        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition\n            eval `echo args$i`=`cygpath --path --ignore --mixed \"$arg\"`\n        else\n            eval `echo args$i`=\"\\\"$arg\\\"\"\n        fi\n        i=$((i+1))\n    done\n    case $i in\n        (0) set -- ;;\n        (1) set -- \"$args0\" ;;\n        (2) set -- \"$args0\" \"$args1\" ;;\n        (3) set -- \"$args0\" \"$args1\" \"$args2\" ;;\n        (4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;\n        (5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;\n        (6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;\n        (7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;\n        (8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;\n        (9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;\n    esac\nfi\n\n# Split up the JVM_OPTS And GRADLE_OPTS values into an array, following the shell quoting and substitution rules\nfunction splitJvmOpts() {\n    JVM_OPTS=(\"$@\")\n}\neval splitJvmOpts $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS\nJVM_OPTS[${#JVM_OPTS[*]}]=\"-Dorg.gradle.appname=$APP_BASE_NAME\"\n\nexec \"$JAVACMD\" \"${JVM_OPTS[@]}\" -classpath \"$CLASSPATH\" org.gradle.wrapper.GradleWrapperMain \"$@\"\n"
        },
        {
          "name": "gradlew.bat",
          "type": "blob",
          "size": 2.259765625,
          "content": "@if \"%DEBUG%\" == \"\" @echo off\n@rem ##########################################################################\n@rem\n@rem  Gradle startup script for Windows\n@rem\n@rem ##########################################################################\n\n@rem Set local scope for the variables with windows NT shell\nif \"%OS%\"==\"Windows_NT\" setlocal\n\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nset DEFAULT_JVM_OPTS=\n\nset DIRNAME=%~dp0\nif \"%DIRNAME%\" == \"\" set DIRNAME=.\nset APP_BASE_NAME=%~n0\nset APP_HOME=%DIRNAME%\n\n@rem Find java.exe\nif defined JAVA_HOME goto findJavaFromJavaHome\n\nset JAVA_EXE=java.exe\n%JAVA_EXE% -version >NUL 2>&1\nif \"%ERRORLEVEL%\" == \"0\" goto init\n\necho.\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\necho.\necho Please set the JAVA_HOME variable in your environment to match the\necho location of your Java installation.\n\ngoto fail\n\n:findJavaFromJavaHome\nset JAVA_HOME=%JAVA_HOME:\"=%\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\n\nif exist \"%JAVA_EXE%\" goto init\n\necho.\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\necho.\necho Please set the JAVA_HOME variable in your environment to match the\necho location of your Java installation.\n\ngoto fail\n\n:init\n@rem Get command-line arguments, handling Windowz variants\n\nif not \"%OS%\" == \"Windows_NT\" goto win9xME_args\nif \"%@eval[2+2]\" == \"4\" goto 4NT_args\n\n:win9xME_args\n@rem Slurp the command line arguments.\nset CMD_LINE_ARGS=\nset _SKIP=2\n\n:win9xME_args_slurp\nif \"x%~1\" == \"x\" goto execute\n\nset CMD_LINE_ARGS=%*\ngoto execute\n\n:4NT_args\n@rem Get arguments from the 4NT Shell from JP Software\nset CMD_LINE_ARGS=%$\n\n:execute\n@rem Setup the command line\n\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\n\n@rem Execute Gradle\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%\n\n:end\n@rem End local scope for the variables with windows NT shell\nif \"%ERRORLEVEL%\"==\"0\" goto mainEnd\n\n:fail\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\nrem the _cmd.exe /c_ return code!\nif  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1\nexit /b 1\n\n:mainEnd\nif \"%OS%\"==\"Windows_NT\" endlocal\n\n:omega\n"
        },
        {
          "name": "settings.gradle",
          "type": "blob",
          "size": 0.0146484375,
          "content": "include ':app'\n"
        }
      ]
    }
  ]
}