{
  "metadata": {
    "timestamp": 1736708702619,
    "page": 136,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "DroidPluginTeam/DroidPlugin",
      "stars": 6914,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.2919921875,
          "content": "/project/Libraries/DroidPlugin/gen\n/project/Libraries/DroidPlugin/bin\n/project/Test/ApiTest/gen\n/project/Test/ApiTest/bin\n/project/TestPlugin/gen\n/project/TestPlugin/bin\n/project/gradle\n/project/.gradle\n/project/.idea\n/project/build\n/project/local.properties\n/happy_chinese_new_year_of_monkey\n*.iml\n"
        },
        {
          "name": "DOC",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 7.47265625,
          "content": "                   GNU LESSER GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n\n  This version of the GNU Lesser General Public License incorporates\nthe terms and conditions of version 3 of the GNU General Public\nLicense, supplemented by the additional permissions listed below.\n\n  0. Additional Definitions.\n\n  As used herein, \"this License\" refers to version 3 of the GNU Lesser\nGeneral Public License, and the \"GNU GPL\" refers to version 3 of the GNU\nGeneral Public License.\n\n  \"The Library\" refers to a covered work governed by this License,\nother than an Application or a Combined Work as defined below.\n\n  An \"Application\" is any work that makes use of an interface provided\nby the Library, but which is not otherwise based on the Library.\nDefining a subclass of a class defined by the Library is deemed a mode\nof using an interface provided by the Library.\n\n  A \"Combined Work\" is a work produced by combining or linking an\nApplication with the Library.  The particular version of the Library\nwith which the Combined Work was made is also called the \"Linked\nVersion\".\n\n  The \"Minimal Corresponding Source\" for a Combined Work means the\nCorresponding Source for the Combined Work, excluding any source code\nfor portions of the Combined Work that, considered in isolation, are\nbased on the Application, and not on the Linked Version.\n\n  The \"Corresponding Application Code\" for a Combined Work means the\nobject code and/or source code for the Application, including any data\nand utility programs needed for reproducing the Combined Work from the\nApplication, but excluding the System Libraries of the Combined Work.\n\n  1. Exception to Section 3 of the GNU GPL.\n\n  You may convey a covered work under sections 3 and 4 of this License\nwithout being bound by section 3 of the GNU GPL.\n\n  2. Conveying Modified Versions.\n\n  If you modify a copy of the Library, and, in your modifications, a\nfacility refers to a function or data to be supplied by an Application\nthat uses the facility (other than as an argument passed when the\nfacility is invoked), then you may convey a copy of the modified\nversion:\n\n   a) under this License, provided that you make a good faith effort to\n   ensure that, in the event an Application does not supply the\n   function or data, the facility still operates, and performs\n   whatever part of its purpose remains meaningful, or\n\n   b) under the GNU GPL, with none of the additional permissions of\n   this License applicable to that copy.\n\n  3. Object Code Incorporating Material from Library Header Files.\n\n  The object code form of an Application may incorporate material from\na header file that is part of the Library.  You may convey such object\ncode under terms of your choice, provided that, if the incorporated\nmaterial is not limited to numerical parameters, data structure\nlayouts and accessors, or small macros, inline functions and templates\n(ten or fewer lines in length), you do both of the following:\n\n   a) Give prominent notice with each copy of the object code that the\n   Library is used in it and that the Library and its use are\n   covered by this License.\n\n   b) Accompany the object code with a copy of the GNU GPL and this license\n   document.\n\n  4. Combined Works.\n\n  You may convey a Combined Work under terms of your choice that,\ntaken together, effectively do not restrict modification of the\nportions of the Library contained in the Combined Work and reverse\nengineering for debugging such modifications, if you also do each of\nthe following:\n\n   a) Give prominent notice with each copy of the Combined Work that\n   the Library is used in it and that the Library and its use are\n   covered by this License.\n\n   b) Accompany the Combined Work with a copy of the GNU GPL and this license\n   document.\n\n   c) For a Combined Work that displays copyright notices during\n   execution, include the copyright notice for the Library among\n   these notices, as well as a reference directing the user to the\n   copies of the GNU GPL and this license document.\n\n   d) Do one of the following:\n\n       0) Convey the Minimal Corresponding Source under the terms of this\n       License, and the Corresponding Application Code in a form\n       suitable for, and under terms that permit, the user to\n       recombine or relink the Application with a modified version of\n       the Linked Version to produce a modified Combined Work, in the\n       manner specified by section 6 of the GNU GPL for conveying\n       Corresponding Source.\n\n       1) Use a suitable shared library mechanism for linking with the\n       Library.  A suitable mechanism is one that (a) uses at run time\n       a copy of the Library already present on the user's computer\n       system, and (b) will operate properly with a modified version\n       of the Library that is interface-compatible with the Linked\n       Version.\n\n   e) Provide Installation Information, but only if you would otherwise\n   be required to provide such information under section 6 of the\n   GNU GPL, and only to the extent that such information is\n   necessary to install and execute a modified version of the\n   Combined Work produced by recombining or relinking the\n   Application with a modified version of the Linked Version. (If\n   you use option 4d0, the Installation Information must accompany\n   the Minimal Corresponding Source and Corresponding Application\n   Code. If you use option 4d1, you must provide the Installation\n   Information in the manner specified by section 6 of the GNU GPL\n   for conveying Corresponding Source.)\n\n  5. Combined Libraries.\n\n  You may place library facilities that are a work based on the\nLibrary side by side in a single library together with other library\nfacilities that are not Applications and are not covered by this\nLicense, and convey such a combined library under terms of your\nchoice, if you do both of the following:\n\n   a) Accompany the combined library with a copy of the same work based\n   on the Library, uncombined with any other library facilities,\n   conveyed under the terms of this License.\n\n   b) Give prominent notice with the combined library that part of it\n   is a work based on the Library, and explaining where to find the\n   accompanying uncombined form of the same work.\n\n  6. Revised Versions of the GNU Lesser General Public License.\n\n  The Free Software Foundation may publish revised and/or new versions\nof the GNU Lesser General Public License from time to time. Such new\nversions will be similar in spirit to the present version, but may\ndiffer in detail to address new problems or concerns.\n\n  Each version is given a distinguishing version number. If the\nLibrary as you received it specifies that a certain numbered version\nof the GNU Lesser General Public License \"or any later version\"\napplies to it, you have the option of following the terms and\nconditions either of that published version or of any later version\npublished by the Free Software Foundation. If the Library as you\nreceived it does not specify a version number of the GNU Lesser\nGeneral Public License, you may choose any version of the GNU Lesser\nGeneral Public License ever published by the Free Software Foundation.\n\n  If the Library as you received it specifies that a proxy can decide\nwhether future versions of the GNU Lesser General Public License shall\napply, that proxy's public statement of acceptance of any version is\npermanent authorization for you to choose that version for the\nLibrary.\n\n"
        },
        {
          "name": "project",
          "type": "tree",
          "content": null
        },
        {
          "name": "readme.md",
          "type": "blob",
          "size": 4.2568359375,
          "content": "Droid Plugin\r\n======\r\n\r\n[中文文档](readme_cn.md \"中文文档\")\r\n\r\n[Fllow me at github](https://github.com/cmzy)\r\n\r\nDroidPlugin is a new **Plugin Framework** developed and maintained by Andy Zhang( [Fllow me at github](https://github.com/cmzy) ).\r\nIt enables the host app run any third-party apk without installation, modification and repackage, which benefit a lot for collaborative development on Android.\r\n\r\n-------\r\n\r\n\r\n\r\n## Problems to be solved:\r\n    \r\n 1. Unable to send `Notification` with custom Resources，eg：\r\n \r\n     a.  Notification with custom RemoteLayout, which means `Notification`'s `contentView`，`tickerView`，\r\n     `bigContentView` and `headsUpContentView` must be null.\r\n\r\n     b.  Notification with icon customized by R.drawable.XXX. The framework will transform it to Bitmap instead.\r\n\r\n 2. Unable to define specified `Intent Filter` for the plugged app's `Service`、`Activity`、`BroadcastReceiver`\r\n and `ContentProvider`. So the plugged app is invisible for the outside system and app.\r\n\r\n 3. Lack of `Hook` to the `Native` layer, thus apk (e.g. a majority of game apps) with `native` code cannot be loaded as plugin.\r\n    \r\n## Features：\r\n  1. Compatible to Android 2.3 and later versions\r\n  2. Given its .apk file, the plugged app could be run either independently or as plugin of the host, **NO** source code needed.\r\n  3. Unnecessary to register the plugged app's `Service`、`Activity`、`BroadcastReceiver`、`ContentProvider` in the host.\r\n  4. The plugged app are recognized as *Installed* by the host and other plugged apps\r\n  5. Very low level of code invasion, in deed just one line code to integrate DroidPlugin into the host app.\r\n  6. Complete code level separation between host and plugged apps, only system level message passing method provide by Android allowed.\r\n  7. All system API supported\r\n  8. Resources management are also completely separated between host and plugged apps.\r\n  9. Process management for plugged apps, idle processed of the plugged app will be timely recycled to guarantee minimum memory usage.\r\n  10. Static broadcast of plugged app will be treated as dynamic, thus the static broadcasting will never be trigger if\r\n  the plugged app are not activated.\r\n    \r\n## Usage：\r\n\r\n#### Integrate with the host apps\r\n\r\nIt is very simple integrate Droid Plugin to your proejct：\r\n\r\n1. Import Droid Plugin project to your project as a lib.\r\n\r\n2. Include following attributes in host's `AndroidManifest.xml`：\r\n\t\r\n\t\t<application android:name=\"com.morgoo.droidplugin.PluginApplication\" \r\n\t\t\tandroid:label=\"@string/app_name\"\r\n\t\t\tandroid:icon=\"@drawable/ic_launcher\" >\r\n\r\n           \r\n3. Or, if you use customized `Application`，add following code in the methods `onCreate` and `attachBaseContext`:\r\n    \r\n\t\t@Override\r\n\t\tpublic void onCreate() {\r\n\t\t\tsuper.onCreate();\r\n\t\t\tPluginHelper.getInstance().applicationOnCreate(getBaseContext()); //must be after super.onCreate()\r\n\t\t}\r\n        \r\n\t\t@Override\r\n\t\tprotected void attachBaseContext(Context base) {\r\n\t\t\tPluginHelper.getInstance().applicationAttachBaseContext(base);\r\n            super.attachBaseContext(base);\r\n\t\t}\r\n\r\n4. Modify the `authorityName` value in `Libraries\\DroidPlugin\\build.gradle` (suggested use your package name)\r\n\r\n#### Install、Uninstall or Upgrade the plugged app：\r\n\r\n1. **Install/Upgrade**, use this method：\r\n \r\n\t\tint PluginManager.getInstance().installPackage(String filepath, int flags);\r\n   \r\n\tFor installation, `filepath` set to path of the .apk file, and `flags` set to 0.\r\n\r\n\tFor upgrade, `filepath` set to path of the .apk file, and  `flags` set to `PackageManagerCompat.INSTALL_REPLACE_EXISTING`.\r\n        \r\n    \r\n2. **Uninstall**, use this method：\r\n\r\n\t\tint PluginManager.getInstance().deletePackage(String packageName,int flags);\r\n\r\n\t`packageName` is package name of the plugged app，`flags = 0`。\r\n\r\n3. **Activate**\r\n\r\n    Just use android's API, same for communication between components.\r\n\t\r\n## FAQ\r\n\t\r\n [FAQ](https://github.com/DroidPluginTeam/DroidPlugin/wiki/FAQ \"FAQ\")\r\n\t\r\n## Remark：\r\n\r\nPlease feel free to [report bugs](https://github.com/Qihoo360/DroidPlugin/issues) or ask for help via email.\r\nQQ Group:318901026\r\n\r\n##Who is using Droid Plugin?\r\n\t\r\n [360 App Store](http://sj.360.cn \"360 App Store\")\r\n\r\n    \r\n### Thanks：\r\n    \r\n    Translated by Ming Song（gnosoir@hotmail.com）    \r\n"
        },
        {
          "name": "readme_cn.md",
          "type": "blob",
          "size": 4.8173828125,
          "content": "Droid Plugin\n======\n\nDroidPlugin 是Andy Zhang在Android系统上实现了一种新的 插件机制 :它可以在无需安装、修改的情况下运行APK文件,此机制对改进大型APP的架构，实现多团队协作开发具有一定的好处。\n-------\n\n[在Github上关注我](https://github.com/cmzy)\n\n为了让跟多的人参与到此项目，我们把项目迁移到一个新的组织DroidPlugin。\n项目新地址:[DroidPlugin](https://github.com/DroidPluginTeam/DroidPlugin \"DroidPlugin\")\n\n## 定义：\n\n   \n   **HOST程序**：插件的宿主。\n   \n   **插件**：免安装运行的APK\n\n## 限制和缺陷:\n    \n 1. 无法在插件中发送具有自定义资源的`Notification`，例如： \n     a.  带自定义RemoteLayout的Notification\n     b.  图标通过R.drawable.XXX指定的通知（插件系统会自动将其转化为Bitmap）\n 2. 无法在插件中注册一些具有特殊Intent Filter的`Service`、`Activity`、`BroadcastReceiver`、`ContentProvider`等组件以供Android系统、已经安装的其他APP调用。\n 3. 缺乏对Native层的Hook，对某些带native代码的apk支持不好，可能无法运行。比如一部分游戏无法当作插件运行。      \n    \n## 特点：\n  1. 支持Androd 2.3以上系统\n  2. 插件APK完全不需做任何修改，可以独立安装运行、也可以做插件运行。要以插件模式运行某个APK，你**无需**重新编译、无需知道其源码。\n  3. 插件的四大组件完全不需要在Host程序中注册，支持Service、Activity、BroadcastReceiver、ContentProvider四大组件\n  4. 插件之间、Host程序与插件之间会互相认为对方已经\"安装\"在系统上了。\n  5. API低侵入性：极少的API。HOST程序只是需要一行代码即可集成Droid Plugin\n  6. 超强隔离：插件之间、插件与Host之间完全的代码级别的隔离：不能互相调用对方的代码。通讯只能使用Android系统级别的通讯方法。\n  7. 支持所有系统API\n  8. 资源完全隔离：插件之间、与Host之间实现了资源完全隔离，不会出现资源窜用的情况。\n  9. 实现了进程管理，插件的空进程会被及时回收，占用内存低。\n  10. 插件的静态广播会被当作动态处理，如果插件没有运行（即没有插件进程运行），其静态广播也永远不会被触发。\n    \n## 使用方法：\n\n#### 集成\n\n在host中集成Droid Plugin项目非常简单：\n\n1. 我们只需要将Droid Plugin当作一个lib工程应用到主项目中，然后：\n\n2. 在`AndroidManifest.xml`中使用插件的`com.morgoo.droidplugin.PluginApplication`：\n\n\n\t\t<application android:name=\"com.morgoo.droidplugin.PluginApplication\" \n\t\t\t\t\t android:label=\"@string/app_name\"\n\t\t\t\t\t android:icon=\"@drawable/ic_launcher\" \n\n   \n           \n3. 如果你使用自定义的`Application`，那么你需要在自定义的Application class `onCreate`和`attachBaseContext`方法中添加如下代码：\n    \n\t    @Override\n\t    public void onCreate() {\n\t        super.onCreate();\n\t        //这里必须在super.onCreate方法之后，顺序不能变\n\t        PluginHelper.getInstance().applicationOnCreate(getBaseContext());\n\t    }\n\t      \n\t    @Override\n\t    protected void attachBaseContext(Context base) {\n\t        PluginHelper.getInstance().applicationAttachBaseContext(base);\n            super.attachBaseContext(base);\n\t    }\n\n4.  修改 `Libraries\\DroidPlugin\\build.gradle` 的 defaultConfig 配置中 `authorityName` 的值（建议改为自己的包名+标识，防止跟其它本插件使用者冲突）\n\n5.  集成完成。\n\n#### 安装、卸载插件：\n\n1. **安装、更新插件**,使用如下方法：\n\n\t\tint PluginManager.getInstance().installPackage(String filepath, int flags)\n   \n\t说明：安装插件到插件系统中，`filepath`为插件apk路径，`flags`可以设置为0，如果要更新插件，则设置为`PackageManagerCompat.INSTALL_REPLACE_EXISTING`返回值及其含义请参见`PackageManagerCompat`类中的相关字段。\n        \n    \n2. **卸载插件**，使用如下方法：\n    \n\n\t    int PluginManager.getInstance().deletePackage(String packageName,int flags);\n\n          \n\t说明：从插件系统中卸载某个插件，`packageName`传插件包名即可，`flags`传0。\n\n3. **启动插件**：启动插件的`Activity`、`Service`等都和你启动一个以及安装在系统中的app一样，使用系统提供的相关API即可。组件间通讯也是如此。\n    \n\n## 实现原理：\n    \n  请参见源码或者感兴趣的可以瞅瞅DOC目录下开源分析文章\n\n \n## FAQ\n\t\n [FAQ](https://github.com/DroidPluginTeam/DroidPlugin/wiki/FAQ \"FAQ\")\n\t\n\n## 谁在使用：\n\t\n [360手机助手](http://sj.360.cn \"360手机助手\")\n\n 如果想要您的项目展示在这里，请发送邮件到zhangyong232#gmail.com\n\n## 支持：\n\t任何问题可以在项目中提交bug报告，也可以发送邮件以寻求帮助。\n\tQQ群：318901026\n"
        }
      ]
    }
  ]
}