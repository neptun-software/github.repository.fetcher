{
  "metadata": {
    "timestamp": 1736708803696,
    "page": 313,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "thinkaurelius/titan",
      "stars": 5240,
      "defaultBranch": "titan10",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.1435546875,
          "content": "*.log\ntarget/\n.idea/\n*.iml\n*.DS_Store\n/bin/\n/_bsp/\n/conf/\n/data/\n/db/\n/ext/\n/lib/\n/log/\n/output/\n/scripts/\n# When executing tests in alphabetical order, Maven generates temporary\n# files with names like this:\n#\n#  .surefire-0320969CE4BEF3CC28F07EE3E21C2DCF89CB569C\n#\n# These files appear alongside pom.xml files.  The files are just lists\n# of test names and don't contain any important information.\n/titan-*/.surefire-*\n# Eclipse junk; leading slash makes patterns non-recursive\n# Note that * also can't match slashes\n/.settings/\n/.project\n/.classpath\n/titan-*/.classpath\n/titan-*/.project\n/titan-*/.settings/\n/titan-*/titan-*/.classpath\n/titan-*/titan-*/.project\n/titan-*/titan-*/.settings/\n# End of Eclipse junk\n# HBase testing stuff\ntitan-hbase/logs\ntitan-hbase/src/test/titan-hbase-test-data/*\ntitan-hbase/src/test/titan-zookeeper-test/*\n# Backup files created by `mvn versions:update-child-modules`\n# http://mojo.codehaus.org/versions-maven-plugin/update-child-modules-mojo.html\ntitan-*/pom.xml.versionsBackup\n# JUnitBenchmarks output\n/titan-*/jub.*.xml\n# .deb/.rpm packaging folders\n/debian/\n/redhat/\n/pkgcommon/\n# Emacs file backups\n*~\n# Nano file backups\n*.save\n"
        },
        {
          "name": "BUILDING.md",
          "type": "blob",
          "size": 0.427734375,
          "content": "Building Titan\n--------------\n\nRequired:\n\n* Java 7 (0.5 and earlier) or Java 8 (0.9 and later)\n* Maven\n\nTo build without executing tests:\n\n```\nmvn clean install -DskipTests=true\n```\n\nTo build with default tests:\n\n```\nmvn clean install\n```\n\nTo build with default plus TinkerPop tests:\n\n```\nmvn clean install -Dtest.skip.tp=false\n```\n\nTo build with only the TinkerPop tests:\n\n```\nmvn clean install -Dtest.skip.tp=false -DskipTests=true\n```\n"
        },
        {
          "name": "CHANGELOG.asc",
          "type": "blob",
          "size": 27.2724609375,
          "content": "[[changelog]]\n[appendix]\nRelease Notes\n-------------\n\nVersion 1.0.0 (September 24, 2015)\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n[source, m2]\n<dependency>\n   <groupId>com.thinkaurelius.titan</groupId>\n   <artifactId>titan-core</artifactId>\n   <version>1.0.0</version>\n</dependency>\n\n*Tested Compatibility:*\n\n* Cassandra 2.1.9\n* HBase 0.94.25, 0.96.2-hadoop2, 0.98.8-hadoop2, 1.0.2\n* BerkeleyJE 5.0.73\n* Elasticsearch 1.5.1\n* Lucene 4.10.4\n* Solr 5.2.1\n* TinkerPop 3.0.1-incubating\n* Java 1.8\n\n*Features added since version 0.5:*\n\n* TinkerPop 3 compatibility\n** Includes support for Spark and Giraph GraphComputers\n** Titan test suite includes TP3 compliance tests\n** A number of Titan-specific TraversalStrategies to optimize traversal execution for graph-global and vertex-centric indexes\n* Query execution engine optimizations\n* Compatibility with newer versions of backend and index stores\n** Cassandra 2.1\n** HBase 1.0\n** Elasticsearch 1.5\n* Includes a number of bugfixes and optimizations\n\nFor more information on features and bugfixes in 1.0.0, see these Github milestones (Titan's 1.0.0 release includes both Github's 1.0 and 0.9 milestones):\n\n* https://github.com/thinkaurelius/titan/issues?q=milestone%3ATitan0.9\n* https://github.com/thinkaurelius/titan/issues?q=milestone%3ATitan1.0\n\nVersion 0.9.0-M2 (June 9, 2015)\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n[source, m2]\n<dependency>\n   <groupId>com.thinkaurelius.titan</groupId>\n   <artifactId>titan-core</artifactId>\n   <version>0.9.0-M2</version>\n</dependency>\n\n*Tested Compatibility:*\n\n* Cassandra 2.0.8\n* HBase 0.94.25, 0.96.2-hadoop2, 0.98.8-hadoop2\n* BerkeleyJE 5.0.73\n* Elasticsearch 1.5.1\n* Lucene 4.10.4\n* Solr 5.2.1\n* Java 1.8\n\n*Features:*\n\n* The main feature of the 0.9.0 release is the implementation of the Tinkerpop 3 APIs in Titan. This entails some radical changes to the query language and query execution engine. Furthermore, large parts of the hadoop processing engine are now covered by Tinkerpop and Titan has been refactored accordingly. Compared with 0.9.0-M1, this release upgrades from Tinkerpop 3.0.0.M6 to 3.0.0.M9. This release also upgrades the ES, Lucene, and Solr dependency versions.\n\nNote, that this is a milestone release which is considered experimental. Please use this only for exploration, testing, and feedback and DO NOT use in production.\n\nVersion 0.9.0-M1 (December 4, 2014)\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n[source, m2]\n<dependency>\n   <groupId>com.thinkaurelius.titan</groupId>\n   <artifactId>titan-core</artifactId>\n   <version>0.9.0-M1</version>\n</dependency>\n\n*Tested Compatibility:*\n\n* Cassandra 2.0.8\n* HBase 0.94.25, 0.96.2-hadoop2, 0.98.8-hadoop2\n* BerkeleyJE 5.0.73\n* Elasticsearch 1.2.1\n* Lucene 4.8.1\n* Solr 4.8.1\n* Java 1.8\n\n*Features:*\n\n* The main feature of the 0.9.0 release is the implementation of the Tinkerpop 3 APIs in Titan. This entails some radical changes to the query language and query execution engine. Furthermore, large parts of the hadoop processing engine are now covered by Tinkerpop and Titan has been refactored accordingly.\n\nNote, that this is a milestone release which is considered experimental. Please use this only for exploration, testing, and feedback and DO NOT use in production.\n\nVersion 0.5.3 (January 12, 2015)\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n*Features:*\n\n* Added regex support for Lucene\n* Added optional customization of Elasticsearch index settings (e.g. shard count or refresh interval)\n* Removed some internal uses of ThreadLocal and made remaining uses optional\n* Gave the exception thrown when a held lock expires a more descriptive name (ExpiredLockException) and message\n\n*Bugfixes:*\n\n* Allowed index hostnames to be overwritten in a local configuration file\n* hasNot with undefined key\n* Using $timestamp in query constraints\n* Filtering out null-values in vertex-centric index queries\n* Queries now use deep Array equality when appropriate\n* Schema reads on Cassandra now use QUORUM regardless of read-consistency-level (schema writes were already done at QUROUM)\n* Removed obsolete precondition check causing spurious failures on some Contain.IN queries\n\nVersion 0.5.2 (November 24, 2014)\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n[source, m2]\n<dependency>\n   <groupId>com.thinkaurelius.titan</groupId>\n   <artifactId>titan-core</artifactId>\n   <version>0.5.2</version>\n</dependency>\n\n*Tested Compatibility:*\n\n* Cassandra 2.0.8\n* HBase 0.94.25, 0.96.2-hadoop2, 0.98.8-hadoop2\n* BerkeleyJE 5.0.73\n* Elasticsearch 1.2.1\n* Lucene 4.8.1\n* Solr 4.8.1\n* Java 1.7 (partially compatible with Java 1.6)\n\n*Features:*\n\n* Added query optimizer support for Contain.IN conditions with multiple values\n* Added Astyanax options controlling the host supplier and local datacenter\n* Added titan.hadoop.output.location option similar to the old Faunus 0.4 output.location option\n* Added titan.hadoop.mr.classpath-configurer to support replacing Titan's builtin Hadoop DistributedCache and MapReduce job-jar behavior\n* Added log statements that dump the complete job sequence compiled by Titan-Hadoop prior to job execution and each again just prior to execution\n* Changed return type of HadoopPipeline.submit to an int signaling whether the job chain completed successfully (previously void)\n* Replaced schema-related IllegalArgumentExceptions with more specific SchemaViolationExceptions\n* Restored gremlin.sh's optional groovy-bootstrap-script-path argument\n\n*Bugfixes:*\n\n* Fixed Titan-Hadoop NullPointerException caused by reading Titan graph schema\n* Fixed Titan-Hadoop failing to set OutputFormat when executing a single job with one or more mapper(s) and no reducers on Hadoop 2\n* Changed Elasticsearch backend's version check to log a warning instead of throwing an exception when downgrading the client to an ES runtime version older than that used to compile Titan\n* Made StandardTitanGraph's JVM shutdown hook never attempt to remove itself to avoid potential IllegalStateException\n* Made the Cassandra daemon started by titan.sh interpret the paths to its data and logfiles relative to the directory containing titan.sh, not the working directory when the script was invoked\n* Added broader catch block around some ReflectiveConfigOptionLoader logic to prevent dependencies with class linkage errors from causing exceptions at startup\n* Eliminated an ExceptionInInitializerError that could be triggered when using TitanFactory's shorthand argument syntax, e.g. `TitanFactory.open('berkeleyje:/tmp/scratch')`, right after JVM startup\n* Reduced log level on some harmless messages set to an unintentionally high threshold in previous releases\n\nVersion 0.5.1 (October 10, 2014)\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n[source, m2]\n<dependency>\n   <groupId>com.thinkaurelius.titan</groupId>\n   <artifactId>titan-core</artifactId>\n   <version>0.5.1</version>\n</dependency>\n\n*Tested Compatibility:*\n\n* Cassandra 2.0.8\n* HBase 0.94.21, 0.96.1.1-hadoop2, 0.98.3-hadoop2\n* BerkeleyJE 5.0.73\n* Elasticsearch 1.2.1\n* Lucene 4.8.1\n* Solr 4.8.1\n* Java 1.7 (partially compatible with Java 1.6)\n\n*Features:*\n\n* Added an experimental Solr indexing adapter\n* Reimplemented incremental loading in Titan-Hadoop\n* Substantially expanded ES configuration options, including support for custom transports\n* Optimized ReflectiveConfigOptionLoader for quicker graph startup and added options to configure or disable it\n* Titan now warns when settings in its config file are overridden by the storage-hosted global configuration\n* Titan-Hadoop on Hadoop 2 now supports HBase's DIGEST-MD5 auth token mechanism for running MR jobs against Kerberized HBase\n\n*Bugfixes:*\n\n* Fixed a stack overflow involving stale graph elements\n* Fixed a regression that caused custom Cassandra read/write consistency level settings to be ignored (defaulting to QUORUM)\n* Fixed SSL in the cassandrathrift backend\n* Attempts to create a partitioned vertex label with cluster.partition=false are now detected during earlier schema definition instead of later during vertex creation\n* Made the Gremlin console explicitly call System.exit just prior to the main thread's termination; this makes the shell more aggressive about terminating on quit/exit even if there are background non-daemon threads which haven't been cleanly stopped\n* Fixed outdated config keys in GraphOfTheGodsFactory.create\n* Miscellaneous documentation bugfixes\n\nVersion 0.5.0 (August 15, 2014)\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n[source, m2]\n<dependency>\n   <groupId>com.thinkaurelius.titan</groupId>\n   <artifactId>titan-core</artifactId>\n   <version>0.5.0</version>\n</dependency>\n\n*Tested Compatibility:*\n\n* Cassandra 2.0.8\n* HBase 0.94.21, 0.96.1.1-hadoop2, 0.98.3-hadoop2\n* BerkeleyJE 5.0.73\n* Elasticsearch 1.2.1\n* Lucene 4.8.1\n* Java 1.7 (partially compatible with Java 1.6)\n\n*Features:*\n\n* Separating schema definitions from index building thus supporting index building after definition, global re-indexing, and multiple indexes for one schema element\n* Support for a transaction write-ahead log and transaction recovery process to detect and fix inconsistencies due to system failure\n* Global graph configuration system to coordinate graph-wide configuration options\n* Better consistency checking and completeness checking of configuration options\n* Support for transaction logging and a log processing framework to implement triggers and downstream system updates\n* Support for vertex labels\n* Better support for global graph partitioning through edge cut minimization\n* Support for vertex cut partitioning to enable graph partitioning on graphs with very skewed degree distributions\n* Support for multi-properties with SET cardinality\n* Support for indexing of multi-properties\n* Support for time-to-live (TTL) on edges and vertices\n* Dedicated serialization engine that can detect byte order requirements and chooses the most efficient serializer and only uses Kryo for backup where needed.\n* Support for Blueprints 2.5.0\n* Introduction of Decimal and Precision data types\n* Compressed string serialization by default\n* More efficient memory footprint of Titan transactions\n* More robust error handling and transation processing\n* Changed Titan's data layout to support adjacency queries and faster edge queries\n* Consolidated time handling across the entire Titan codebase\n* Using faster hash functions and centralized hash function library\n* Using upsert methods for ES mutations to improve performance\n* Support for additional configuration options in Cassandra connector\n* Support for configuring the isolation level in BerkeleyDB\n* Removed FullDouble and FullFloat: Double and Float are now serialized as full precision floating points. Introduced Decimal and Precision with a fixed number of decimals and order preserving binary representation\n* Migrated Faunus to a new package in Titan named Titan/Hadoop\n  * Isolated HadoopElement serialization into HadoopSerializer\n  * All HadoopVertex and HadoopEdge construction leverages Hadoop Configuration for deserialization rules\n  * Removed pathEnabled boolean from element serialization (now part of Configuration as trackPaths)\n  * Added state tracking for loaded, new, and deleted elements/properties (in Configuration via trackState)\n  * HadoopCompiler updates HadoopGraph configurations with global pipeline requirements\n  * Removed HadoopVertex.reuse() in support of short-lived HadoopVertex objects\n  * Updated ScriptInputFormat to use HadoopVertex.setId(long) to \"reuse\" vertices\n  * PropertyMapMap now includes Edge.getLabel() in the returned property map (via _label)\n  * Added TitanGraphOutputMapReduce@ to support Titan-specific features (e.g. multi-properties on vertices)\n  * TitanGraphOutputMapReduce respects state tracking and get/create/delete in outputting TitanGraph\n  * Added JUnit test support for executing local (non-pseudo-cluster) MapReduce jobs\n  * Provided MapReduce-based integration testing between Titan and Titan/Hadoop\n  * Provided MapReduce-based integration testing around HadoopPipeline\n  * Added error handling for invalid RDF parameters\n  * Added support for incremental edge loading with BlueprintsGraphOutputMapReduce\n\n\n\n*Bugfixes:*\n\n* Fixed potential inconsistency issue in the locking protocol due to usage of non-key consistent storage transactions.\n* Fixed name collision in index backends\n* Fixed error in ES mutate logic\n* Support for Blueprints wrappers on Titan transactions\n* Fixed shutdown hook\n* Improved robustness of the id allocation process\n* Fixed data balance issues with Hbase\n* Changed serialization order for Date.class - the byte serialization now matches Comparable\n* Fixed a SideEffectMap bug around edge processing (only out edges were being processed)\n* See all GitHub issues associated with Milestone 0.5.0\n\n\n*Acknowledgements:*\n\n* http://fortytwo.net/[Joshua Shinavier] significantly contributed to the TTL implementation\n\n\nVersion 0.4.4 (April 22, 2014)\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n[source, m2]\n<dependency>\n   <groupId>com.thinkaurelius.titan</groupId>\n   <artifactId>titan-core</artifactId>\n   <version>0.4.4</version>\n</dependency>\n\n*Tested Compatibility:*\n\n* Cassandra 1.2.2\n* HBase 0.94.12\n* BerkeleyJE 5.0.73\n* Elasticsearch 0.90.5\n* Lucene 4.4.0\n* Persistit 3.3.0\n* Java 1.7+ (partially compatible with Java 1.6)\n\n*Bugfixes:*\n\nAdded 0.4.2 to compatible-version string (and 0.4.3)\n\nVersion 0.4.3 (April 21, 2014)\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n[source, m2]\n<dependency>\n   <groupId>com.thinkaurelius.titan</groupId>\n   <artifactId>titan-core</artifactId>\n   <version>0.4.3</version>\n</dependency>\n\n*Tested Compatibility:*\n\n* Cassandra 1.2.2\n* HBase 0.94.12\n* BerkeleyJE 5.0.73\n* Elasticsearch 0.90.5\n* Lucene 4.4.0\n* Persistit 3.3.0\n* Java 1.7+ (partially compatible with Java 1.6)\n\n*Features:*\n\n* Can configure the serializer for strings to get better string compression. ONLY ENABLE THIS IF STRINGS ARE NOT USED AS SORT KEYS since the sort order is no longer guaranteed.\n* Added Blueprints RDF dependency\n\n*Bugfixes:*\n\n* Use all hosts for establishing thrift connection to Cassandra\n* A number of bug fixes and improvements for the Cassandra adapter\n* A number of bug fixes and improvements for the HBase adapter\n* Fixed background pool thread size\n* Improved ID Allocation\n\n\nVersion 0.4.2 (December 30, 2013)\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n[source, m2]\n<dependency>\n   <groupId>com.thinkaurelius.titan</groupId>\n   <artifactId>titan-core</artifactId>\n   <version>0.4.2</version>\n</dependency>\n\n*Tested Compatibility:*\n\n* Cassandra 1.2.2\n* HBase 0.94.12\n* BerkeleyJE 5.0.73\n* Elasticsearch 0.90.5\n* Lucene 4.4.0\n* Persistit 3.3.0\n* Java 1.7+ (partially compatible with Java 1.6)\n\n*Features:*\n\n* Finer-grained Thrift connection pooling that gracefully handles failure to close result iterators\n* Optionally silently ignore unrecognized fields on index queries instead of throwing an exception\n* Configurable Astyanax RetryBackoffStrategy\n* Allow comparison of heterogeneous numeric types\n* Added Codahale-Metrics coverage for query, locker, and get-vertex-by-id activity\n\n*Bugfixes:*\n\n* Deleting edges with multiple properties\n* Deleting edges labeled with a reverse-ordered sort key\n* Avoid NullPointerException during graph shutdown when running without a Backend threadpool\n* Shell portability improvement and shutdown race condition fix in titan.sh\n\nVersion 0.4.1 (November 24, 2013)\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n[source, m2]\n<dependency>\n   <groupId>com.thinkaurelius.titan</groupId>\n   <artifactId>titan-core</artifactId>\n   <version>0.4.1</version>\n</dependency>\n\n*Tested Compatibility:*\n\n* Cassandra 1.2.2\n* HBase 0.94.12\n* BerkeleyJE 5.0.73\n* Elasticsearch 0.90.5\n* Lucene 4.4.0\n* Persistit 3.3.0\n* Java 1.7+ (partially compatible with Java 1.6)\n\n*Features:*\n\n* Property pre-fetching to speed up multiple property lookups per vertex. Configurable through `fast-property` option.\n* Shortened HBase column-family names to reduce the HBase storage footprint. This feature is disabled by default for backwards-compatibility. Enable it via `storage.short-cf-names`\n* Metrics per Transaction: Gathering measurements on the transaction level and group them by transaction template name configurable through `graph.buildTransaction().setMetricsPrefix(String)`\n* Metrics Ganglia and Graphite support\n* Improvements to the internal memory structures and algorithms of a Titan transaction which lead to much improved traversal times (a lot of credit goes to Pavel for these optimizations!!)\n* Added database level cache for lower latency query answering against warm data. Enable via `cache.db-cache`. Learn more about [[Database Cache]].\n* Better caching implementation for relations (RelationCache) to provide faster de-serialization performance\n* Addition of a new query optimizer that can significantly speed up a subset of traversals\n* Support for reverse ordering in vertex centric queries by defining: makeLabel(..).sortKey(..).sortOrder(Order.DESC).make()\n* Support for index configuration parameters passed into KeyMaker.indexed(String, Class, Parameter...) to change the default indexing behavior of an indexing backend.\n* Support for TEXT and STRING mapping of strings in both Lucene and ElasticSearch configurable as a parameter. Learn more about [[Full Text and String Search]]\n* Refactored Text.REGEX/PREFIX to Text.CONTAINS_REGEX/CONTAINS_PREFIX to accurately reflect their semantics. Added Text.REGEX/PREFIX for full string matching. See [[Indexing Backend Overview]]\n* Added support for scaling the id allocation to hundreds of parallel Titan instances through additional configuration options. See [[Bulk Loading]].\n\n*Bugfixes:*\n\n* Fixed multiQuery() for specific has() conditions. Added support for multiQuery(Collection).\n* Fixed limit adjustment issue for unconstraint IN/OUT queries\n* Fixed packaging issues\n* Fixed cache misses due to wrong limit interpretation\n\nVersion 0.4.0 (October 16, 2013)\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n[source, m2]\n<dependency>\n   <groupId>com.thinkaurelius.titan</groupId>\n   <artifactId>titan-core</artifactId>\n   <version>0.4.0</version>\n</dependency>\n\n*Tested Compatibility:*\n\n* Cassandra 1.2.2\n* HBase 0.94.7\n* BerkeleyJE 5.0.73\n* Elasticsearch 0.90.5\n* Lucene 4.4.0\n* Persistit 3.3.0\n* Hazelcast 3.0.2\n* Java 1.7+ (partially compatible with Java 1.6)\n\n*Features:*\n\n* Initial Fulgora (alpha) release: Added CacheStore interface and adapter as well as a specific implementation based on the Hazelcast distributed data grid\n* Configurable LRU transaction cache for all data loaded into a transaction which allows rolling transactions without memory exceptions\n* MultiQuery which allows combining multiple queries into one request to speed up deep traversals by orders of magnitude against remote backends\n* Completely refactored query optimization and execution framework which makes query answering faster\n* GraphQuery optimizer combines multiple indexing backends to determine the result set most efficiently\n* Support for ordering in GraphQuery\n* Persistit storage adapter for local graph storage\n* Metrics integration for monitoring\n* Support for regular expressions in GraphQuery\n* Refactoring and improvement of the locking protocol\n* Renaming of type definition methods to reduce the confusion surrounding this topic (see UPGRADE for more detail)\n* Re-implemented scanning operations in storage backends to make getVertices() and getEdges() more efficient and functionally correct\n* Added performance test suite and automatic benchmark execution framework\n* Refactored attribute handling and made it explicit\n* Transactions are configurable by the user\n* Titan interprets relative paths in configuration files relative to the directory containing said configuration file (instead of the directory from which e.g. Gremlin was invoked)\n* Attribute Handling has been refactored and extended to allow custom converters and data type checkers\n\n*Bugfixes:*\n\n* Cassandra compression\n* Resolution of elements across transaction boundaries\n* Tokenization of strings for full text search\n* Explicit mapping of elasticsearch elements\n* Changed index format to ensure uniqueness\n* Correct limit behavior for queries\n* Fixed incorrect query caching behavior\n* Correct string serialization\n* Correct handling of hybrid GraphQuery\n* Better handling of data degradation issues\n\n\nCheck the issue tracker for a full list of fixed issues.\n\n*Special Thanks to:*\n\n* Blake Eggleston (https://github.com/bdeggleston[bdeggleston])\n* Erick Tryzelaar (https://github.com/erickt[erickt])\n* Zach Kinstner (https://github.com/zachkinstner[zachkinstner])\n* https://github.com/jkschneider[jkschneider]\n* https://github.com/gwhitehawk[gwhitehawk]\n* https://github.com/mamccr[mamccr]\n* https://github.com/akeffalas[akeffalas]\n\nVersion 0.3.2 (July 29, 2013)\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n[source, m2]\n<dependency>\n   <groupId>com.thinkaurelius.titan</groupId>\n   <artifactId>titan-core</artifactId>\n   <version>0.3.2</version>\n</dependency>\n\n*Tested Compatibility:*\n\n* Cassandra 1.2.2\n* HBase 0.94.1\n* BerkeleyJE 5.0.73\n* Elasticsearch 0.90.0\n* Lucene 4.1.0\n* Java 1.6+\n\n*Features:*\n\n* Support for multiple standard index conditions in queries\n\n*Bugfixes:*\n\n* Fixed potential transaction leak when using thread-bound transactions\n* Let vertex.removeProperty(...) kill multivalued properties as the javadoc says\n* Avoided two spurious cases of \"timestamp mismatch\" exception\n* Removed unchecked cast in AbstractElement.equals(...)\n* Adjusted default Astyanax exponential backoff settings to avoid integer overflow against a dead peer\n* Fixed Astyanax config regression that caused node discovery and connection pool type to be ignored\n* Fixed double-checked locking on StandardVertex's added relations\n\nCheck the issue tracker for a full list of fixed issues.\n\nVersion 0.3.1 (May 14, 2013)\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n[source, m2]\n<dependency>\n   <groupId>com.thinkaurelius.titan</groupId>\n   <artifactId>titan-core</artifactId>\n   <version>0.3.1</version>\n</dependency>\n\n*Tested Compatibility:*\n\n* Cassandra 1.2.2\n* HBase 0.94.1\n* BerkeleyJE 5.0.73\n* Elasticsearch 0.90.0\n* Lucene 4.1.0\n* Java 1.6+\n\n*Features:*\n\n* Improved in-transaction index handling for equality matches\n* Support for Lucene 4 throughout\n* Storage backend compression enabled by default where applicable\n* Removed RexsterTitanClient since all the functionality has been rolled into RexsterClient\n* Automatic type-casting of most primitive types and Geoshape where possible\n* Refactored to using immutable data structures for storage backend communication\n* Re-implemented InMemory storage backend for better performance\n\n*Bugfixes:*\n\n* Launching multiple Titan servers in one cluster with RF>1\n* Updated and improved the Astyanax adapter for Cassandra\n* Improved robustness of ID allocation\n* Vertex iteration in embedded Cassandra with BoP\n* Updated Titan server scripts and configuration files\n* Fixed issues around automatic transaction migration of vertices and edges\n* Fixed BerkeleyJE concurrency clean-up issue\n* Cleaned up and trimmed storage backend interfaces\n* Fixed ghost vertex issue when iterating over vertices\n* Fixed datatype conversion issues\n\nCheck the issue tracker for a full list of fixed issues.\n\nVersion 0.3.0 (March 29, 2013)\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n[source, m2]\n<dependency>\n   <groupId>com.thinkaurelius.titan</groupId>\n   <artifactId>titan-core</artifactId>\n   <version>0.3.0</version>\n</dependency>\n\n*Tested Compatibility:*\n\n* Cassandra 1.2.2\n* HBase 0.94\n* BerkeleyJE 5.0.73\n\n*Features:*\n\n* Geo, numeric range, and full-text indexing supporting multiple index backends\n* Edge Indexing\n* Refactoring of Titan-core for enhanced performance due to selective de-serialization\n* New query optimizer for vertex-centric and graph queries\n* Vertex centric query caching for selective queries\n* InMemoryGraph implementation\n* IdGraph support\n* Relaxed transactional scope requirement for vertices\n* Edge no longer extends Vertex\n* Updated to Kryo 2\n\n*Bugfixes:*\n\n* Cassandra Thrift Max-Message-Size issue\n* JMX settings for Titan Server\n* Out-unique edges\n* Modified state in global graph operations\n* see issue tracker for a full list\n\nVersion 0.2.1 (March 22, 2013)\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n[source, m2]\n<dependency>\n   <groupId>com.thinkaurelius.titan</groupId>\n   <artifactId>titan-core</artifactId>\n   <version>0.2.1</version>\n</dependency>\n\n*Tested Compatibility:*\n\n* Cassandra 1.2.0\n* HBase 0.94\n* BerkeleyJE 5.0.58\n\n*Features:*\n\n* Refactored POM into multi-module project\n* Support for global vertex (g.V) and edge (g.E) iteration for cassandra and hbase backends\n* Compatible with Cassandra 1.2.0 for all three storage adapters: embedded, thrift, astyanax\n* Improved HBase adapter:\n** Automatic Master launch for testing\n** Refactored batch mutation and reading\n** Optimized HBase operations\n* Updated to Blueprints 2.3.0\n* Better integration with Rexster Rexpro\n* Automatic directory creation for local storage backends\n* Internal Titan version handling and compatibility checks\n* Added additional performance tests\n\n*Bugfixes:*\n\n* Resolved issues around Java 1.7\n* Shutdown error in astyanax adapter\n* Made thrift frame and message size configurable for cassandra adapters\n* see issue tracker for a full list\n\n*Special Thanks to:*\n\n* Pavel Yaskevich (https://github.com/xedin[xedin])\n\nVersion 0.2.0 (December 24, 2012)\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n[source, m2]\n<dependency>\n   <groupId>com.thinkaurelius.titan</groupId>\n   <artifactId>titan</artifactId>\n   <version>0.2.0</version>\n</dependency>\n\n*Tested Compatibility:*\n\n* Cassandra 1.1.3 & 1.1.4\n* HBase 0.94.1\n* BerkeleyDB 5.0.58\n* TinkerPop (Blueprints, Gremlin, Rexster) 2.2.0\n\n* This version is incompatible with the previous version of Titan. Please follow the [[Upgrade Instructions]] to switch to the new version.\n\n*Features:*\n\n* Embedded Cassandra: Titan can be embedded with Cassandra, that means, Titan starts a Cassandra node in the same JVM and uses efficient in process communication to store and retrieve data.\n* [[Titan Server]]: Titan comes with a light-weight Gremlin query server.\n* Streamlined configuration settings. Please review the new configuration options if you are upgrading from an older version of Titan.\n* Many small performance improvements throughout the code. Please review the issue tracker and the commit log for more details.\n\n*Bugfixes:*\n\n* Fixed edge sorting bug which caused edges to be returned in a random order even when a vertex centric index was defined.\n* Fixed id allocation bug that causes Titan to read the entire row during id allocation which can lead to id allocation failures.\n* Completely refactored diskstorage package for better code quality and performance.\n* Fixed edge caching bug for composite primary keys on edges.\n* Fixed a number of smaller bugs. Please review the issue tracker and the commit log for more details.\n\n*Special Thanks to:*\n\n* Zack Maril (https://github.com/zmaril[zmaril])\n* Nicolas LaCasse (https://github.com/nlacasse[nlacasse])\n* Vadas Gintautas (https://github.com/vadasg[vadasg])\n\nVersion 0.1.0 (September 7, 2012)\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n[source, m2]\n<dependency>\n   <groupId>com.thinkaurelius.titan</groupId>\n   <artifactId>titan</artifactId>\n   <version>0.1.0</version>\n</dependency>\n\n*Tested Compatibility:*\n\n* Cassandra 1.1.3 & 1.1.4\n* HBase 0.94.1\n* BerkeleyDB 5.0.58\n\n*Features:*\n\n* The focus of the initial Titan release was on building a stable and robust graph database as well as incorporating community feature suggestions and feedback from early adopters of Titan.\n\n*Bugfixes:*\n\n* Fixed concurrency and synchronization issues\n\n*Special Thanks to:*\n\n* Danny Thomas (https://github.com/BinaryRage[BinaryRage])\n* https://github.com/jramsdale[jramsdale]\n* Cristofer (https://github.com/crisweber[crisweber])\n* https://github.com/tedoc2000[tedoc2000]\n* Dan Forest-Barbier (https://github.com/DPanth3r[DPanth3r])\n* https://github.com/jncorpron[jncorpron]\n* Marc Abramowitz (https://github.com/msabramo[msabramo])\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 11.08203125,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright 2012-2013 Aurelius LLC\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "NOTICE.txt",
          "type": "blob",
          "size": 5.654296875,
          "content": "==============================================================\n Titan: Distributed Graph Database\n Copyright 2012 and onwards Aurelius\n==============================================================\n\nThis product includes software developed by Aurelius (http://thinkaurelius.com/) and the following individuals:\n\n * Matthias Broecheler\n * Dan LaRocque\n * Marko A. Rodriguez\n * Stephen Mallette\n * Pavel Yaskevich\n\nIt also includes software from other open source projects including, but not limited to (check pom.xml for complete listing):\n\n * TinkerPop [http://tinkerpop.incubator.apache.org/]\n * Apache Commons [http://commons.apache.org/]\n * Google Guava [http://code.google.com/p/guava-libraries/]\n * HPPC [http://labs.carrotsearch.com/hppc.html]\n * Junit Benchmark [http://labs.carrotsearch.com/junit-benchmarks.html]\n * Kryo [http://code.google.com/p/kryo/]\n * SLF4J [http://www.slf4j.org/]\n * Metrics [http://metrics.codahale.com/]\n * Apache log4j [http://logging.apache.org/log4j/]\n * Apache HBase [http://hbase.apache.org/]\n * Apache Hadoop [http://hadoop.apache.org/]\n * Apache Cassandra [http://cassandra.apache.org/]\n * Apache Lucene [http://lucene.apache.org/]\n * Apache MRUnit [http://mrunit.apache.org/]\n * Codehaus Groovy [http://groovy.codehaus.org/]\n * OpenRDF [http://www.openrdf.org/]\n * Elastic Search [http://www.elasticsearch.org/]\n * Astyanax [https://github.com/Netflix/astyanax]\n * JUnit [http://www.junit.org/]\n * Mockito [http://code.google.com/p/mockito/]\n * Oracle's BerkeleyDB [http://www.oracle.com/technetwork/products/berkeleydb/] (see license below)\n\n=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\nThe following is the license that applies to this copy of the Berkeley\nDB Java Edition software.  For a license to use the Berkeley DB Java\nEdition software under conditions other than those described here, or\nto purchase support for this software, please contact Oracle at\nberkeleydb-info_us@oracle.com.\n\n=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\n/*\n * Copyright (c) 2002, 2012 Oracle and/or its affiliates.  All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright\n *    notice, this list of conditions and the following disclaimer in the\n *    documentation and/or other materials provided with the distribution.\n * 3. Redistributions in any form must be accompanied by information on\n *    how to obtain complete source code for the DB software and any\n *    accompanying software that uses the DB software.  The source code\n *    must either be included in the distribution or be available for no\n *    more than the cost of distribution plus a nominal fee, and must be\n *    freely redistributable under reasonable conditions.  For an\n *    executable file, complete source code means the source code for all\n *    modules it contains.  It does not include source code for modules or\n *    files that typically accompany the major components of the operating\n *    system on which the executable file runs.\n *\n * THIS SOFTWARE IS PROVIDED BY ORACLE ``AS IS'' AND ANY EXPRESS OR\n * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, OR\n * NON-INFRINGEMENT, ARE DISCLAIMED.  IN NO EVENT SHALL ORACLE BE LIABLE\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\n * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN\n * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\n/***\n * ASM: a very small and fast Java bytecode manipulation framework\n * Copyright (c) 2000-2005 INRIA, France Telecom\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright\n *    notice, this list of conditions and the following disclaimer in the\n *    documentation and/or other materials provided with the distribution.\n * 3. Neither the name of the copyright holders nor the names of its\n *    contributors may be used to endorse or promote products derived from\n *    this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF\n * THE POSSIBILITY OF SUCH DAMAGE.\n */\n"
        },
        {
          "name": "README.textile",
          "type": "blob",
          "size": 0.5703125,
          "content": "!http://thinkaurelius.github.io/titan/images/titan-logo.png!\n\nTitan is a highly scalable \"graph database\":http://en.wikipedia.org/wiki/Graph_database optimized for storing and querying large graphs with billions of vertices and edges distributed across a multi-machine cluster. Titan is a transactional database that can support thousands of concurrent users, complex traversals, and analytic graph queries.\n\nh2. Learn More\n\nThe \"project homepage\":http://titandb.io contains more information on Titan and provides links to documentation, getting-started guides and release downloads.\n"
        },
        {
          "name": "RELEASING.md",
          "type": "blob",
          "size": 3.46484375,
          "content": "Releasing Titan\n===============\n\nPrerequisites\n-------------\n\nThe release process has only been tested on Linux.  The following\ntools must be installed.\n\n* [expect](http://expect.sourceforge.net/)\n* [gpg](http://www.gnupg.org/) with a running agent\n\n~/.m2/settings.xml will need the following entries.\n\n```xml\n<settings>\n  <servers>\n    <server>\n      <id>sonatype-nexus-snapshots</id>\n      <username>...</username>\n      <password>...</password>\n    </server>\n    <server>\n      <id>sonatype-nexus-staging</id>\n      <username>...</username>\n      <password>...</password>\n    </server>\n    <server>\n      <id>aurelius.s3</id>\n      <username>AWS Key ID</username>\n      <password>AWS Secret Key</password>\n    </server>\n  </servers>\n</settings>\n```\n\nRelease Steps\n-------------\n\n### Preparing Documentation\n\nUpdate version-sensitive files in the root and documentation sources\nin the docs/ subdirectory off the root.\n\nDocumentation pages:\n\n* changelog.txt\n* versions.txt\n* upgrade.txt\n* acknowledgements.txt\n\nFiles in the main repo:\n\n* CHANGELOG.asc\n* NOTICE.txt\n* UPGRADE.asc\n* titan-site/src/site-resources/index.html\n  (this template generates a new http://thinkaurelius.github.io/titan/)\n\nSome of these updates could potentially be automated, but tweaking\ndocumentation before a release will always require at least human in\nthe loop.\n\n### Preparing the Local Repository\n\nCommit or stash any uncommitted changes.\n\nRecommended but not required:\n\n* Delete untracked files and directories in the clone by running\n  <code>git clean -fd</code>\n\n### Deploying Artifacts & Archives\n\n```bash\n# This script does several things.\n#\n# * Prompts for a ${titan.compatible.versions} update\n# * Locally commits the release using the release plugin\n# * Deploys Maven artifacts to Sonatype OSS (staging, not released yet)\n# * Uploads zipfiles to S3\n# * Locally commits gh-pages updates (index.html and javadocs)\n# * Uploads AsciiDoc-generated documentation to S3\n#\n# Although it uploads to Sonatype OSS Staging and S3, it does\n# not push to github nor does it release the Sonatype repo.\n# This step is still essentially reversible: just destroy the\n# local commit history, drop the Sonatype OSS Staging repo, and\n# delete the files uploaded to S3.\ntitan-dist/src/release/release.sh\n```\n\n### Checking Artifacts & Archives\n\nThis is a good time to inspect the archives just uploaded to\nhttp://s3.thinkaurelius.com/downloads/titan/.  Directory listing is\nnormally disabled on that directory, so you may need to login to the\nS3 console to list the contents and check that nothing's out of place.\n\nIf S3 looks good, then inspect and close the staging repository that\nthe deploy phase automatically created on https://oss.sonatype.org/.\n\n### Pushing the Release\n\n*This is the point of no return.* After releasing artifacts to Maven\nCentral and pushing history to the public Github repo, the release\ncan't be canceled.\n\nRelease the Sonatype OSS repository that you inspected and closed\nearlier.  It will appear on Maven Central in an hour or two.\n\nFinally, push your local changes to Github:\n\n```bash \n# cd to the titan repository root if not already there\ngit push origin $BRANCH_NAME\ngit push origin refs/tags/$RELEASE_VERSION\ngit push origin gh-pages\n```\n\nUpdate these pages on the Github wiki:\n\n* Home\n* Downloads\n\n### Deploy a New Snapshot\n\nTo kickoff the next round of development, deploy a copy of the new\nSNAPSHOT version's artifacts to the Sonatype OSS snapshots repository.\n\n```bash\n# From the repository root\ngit checkout $BRANCH_NAME\nmvn clean deploy\n```\n"
        },
        {
          "name": "TESTING.md",
          "type": "blob",
          "size": 3.6796875,
          "content": "Testing Titan\n=============\n\n### Audience of this Document\n\nThis page is written for developers familiar with Java, Titan, and Maven who want information on how to run Titan's test suite.  Users interested in installing and running Titan releases should consult the [wiki](https://github.com/thinkaurelius/titan/wiki).\n\n### Overview\n\nTitan runs all tests using JUnit.  To compile, package, and run the default test suite for Titan, use the standard `mvn clean install` command.\n\nTitan has a specialty tests, disabled by default, intended to generate basic performance metrics or stress its cache structures under memory pressure.  The next section describes how Titan's tests are internally categorized and the Maven options that enabled/disable test categories.\n\n### JUnit Test Categories\n\nAll of Titan's tests are written for JUnit.  Titan's JUnit tests are annotated with the following [JUnit Categories](https://github.com/junit-team/junit/wiki/Categories):\n\n\n| Category Name | Maven Property | Default | Comment |\n| ------------- | ------------------- |:------------:| ------- |\n| MemoryTests | test.skip.mem | true (disabled) | Tests intended to exert memory pressure |\n| PerformanceTests | test.skip.perf | true (disabled) | Tests written as simple speed tests using JUnitBenchmarks|\n| OrderedKeyStoreTests | test.skip.ordered | false (enabled) | Tests written for a storage backend that stores data in key order |\n| UnorderedKeyStoreTests | test.skip.unordered | false (enabled) | Tests written for a storage backend that doesn't store data in key order |\n| (No&nbsp;category) | test.skip.default | false (enabled) | Tests without any Category annotations |\n\n**Category Name** above is a Java interface defined in the package [com.thinkaurelius.titan.testcategory](titan-test/src/main/com/thinkaurelius/titan/testcategory).  These interfaces appear as arguments to the JUnit `@Category(...)` annotation, e.g. `@Category({MemoryTests.class})`.\n\n**Maven Property** above is a boolean-valued pom.xml property that skips the associated test category when true and executes the associated test category when false.  The default values defined in pom.xml can be overridden on the command-line in the ordinary Maven way, e.g. `mvn -Dtest.skip.mem=false test`.\n\n*Implementation Note.*  The Maven property naming pattern \"test.skip.x=boolean\" is needlessly verbose, a cardinal sin for command line options.  A more concise alternative would be \"test.x\" with the boolean sense negated.  However, this complicates the pom.xml configuration for the Surefire plugin since it precludes direct use of the Surefire plugin's `<skip>` configuration tag, as in `<skip>${test.skip.perf}</skip>`.  There doesn't seem to be a straightforward way to negate a boolean or otherwise make this easy, at least without resorting to profiles or a custom plugin, though I might be missing something.  Also, the mold is arguably already set by Surefire's \"maven.test.skip\" property, though that has slightly different interpretation semantics than the properties above.    \n\n### Running a Single Test via Maven\n\nThe standard maven-surefire-plugin option applies for most tests:\n\n```bash\nmvn test -Dtest=full.or.partial.classname#methodname\n```\n\nHowever, MemoryTests and PerformanceTests are disabled by default regardless of whatever `-Dtest=...` option might be specified.  When running a single MemoryTest or PerformanceTest, specify `-Dtest.mem=true` or `-Dtest.perf=true` as appropriate for the test in question.\n\nHere's a concrete example.\n\n```bash\n# Executes no tests because the MemoryTests category is disabled by default\nmvn test -Dtest=BerkeleyJEGraphPerformanceMemoryTest\n# Executes the specified test\nmvn test -Dtest=BerkeleyJEGraphPerformanceMemoryTest -Dtest.skip.mem=false\n```\n"
        },
        {
          "name": "UPGRADE.asc",
          "type": "blob",
          "size": 18.037109375,
          "content": "[[upgrade]]\n[appendix]\nUpgrade Instructions\n--------------------\n\nPlease follow these instructions when upgrading from an older Titan release.\n\nVersion 1.0.0 (September 24, 2015)\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThis is the first non-milestone release that uses TinkerPop 3.  Titan 0.5.x and earlier used TinkerPop 2.  Compared with TinkerPop 2, TinkerPop 3 brings substantial changes to Gremlin and to public TP interfaces that Titan implements.  Applications written for Titan 0.5.x or TinkerPop 2 will generally require source-level changes to compile or run against Titan 1.0.0 or TinkerPop 3.\nSince TinkerPop 3 includes GraphComputer for global graph analytics, analytic query processing is now handled by Tinkerpop and Titan only provides the needed input and output formats for the supported big data platforms.\n\nProperty pre-fetching is disabled by default in Titan 1.0.0 and future releases. That is, the `fast-property` configuration settings defaults to true. If you are relying on this setting to speed up multi-property access you need to enable `fast-property` explicitly.\n\nVersion 0.9.0-M2 (June 8, 2015)\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nTitan 0.9.0-M2 uses the same storage format as 0.5.x, but since it's a milestone release with a lower standard of testing and stability than general availabi\n\nThe query language and API have changed considerably. The Titan manual for 0.9.0 is still a work in progress. The http://tinkerpop.incubator.apache.org/docs/[TinkerPop 3 documentation] is a useful resource for understanding the new API.\n\nVersion 0.9.0-M1 (December 4, 2014)\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nTitan 0.9.0-M1 uses the same storage format as 0.5.x, but since it's a milestone release with a lower standard of testing and stability than general availability releases, it is artificially marked incompatible with all previous versions. \n\nThe query language and API have changed considerably. The Titan manual for 0.9.0 is still a work in progress. The http://www.tinkerpop.com/docs/3.0.0.M6/[TinkerPop 3 documentation] is a useful resource for understanding the new API.\n\nVersion 0.5.3 (January 12, 2015)\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nFrom 0.5.2\n^^^^^^^^^^\n\nTitan 0.5.3 is backwards compatible with 0.5.2, with the exception of one change in the API: StandardTimestamp has been renamed to Timestamp and moved to the com.thinkaurelius.titan.core.attribute package.  The storage format is fully backwards compatible.\n\nFrom 0.5.1 and 0.5.0\n^^^^^^^^^^^^^^^^^^^^\n\n0.5.3 is backwards compatible with 0.5.0 and 0.5.1.  However, there were some minor API and script path changes in 0.5.2 that may affect upgrades from those versions.  See the upgrade notes for 0.5.2 for more information.\n\n\nVersion 0.5.2 (November 24, 2014)\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nFrom 0.5.1 and 0.5.0\n^^^^^^^^^^^^^^^^^^^^\n\n0.5.2 is backwards compatible with 0.5.0 and 0.5.1.  However, 0.5.1 introduced minor API level changes that will affect an upgrade from 0.5.0 to 0.5.2.  See the section on 0.5.1 for details.  Aside from the changes noted in 0.5.1's section, 0.5.2 also changed the return type of HadoopPipeline.submit from void to int.\n\n0.5.2 fixed a bug in the `titan.sh` helper script affecting Cassandra's data path.  In 0.5.0 and 0.5.1, running `titan.sh start` would fork a Cassandra daemon that stored data, commitlogs, and saved caches in `<titan.sh start's working directory>/db/cassandra`.  This was a bug.  Cassandra's data directory should be <titan archive root>/db/cassandra, regardless of the `titan.sh` script's working directory.  This bug only affected the forked Cassandra daemon, not the forked Elasticsearch daemon.  This bug is fixed in 0.5.2, so that Cassandra data, commitlogs, and saved caches are always written to `<titan archive root>/db/cassandra` regardless of the working directory of the `titan.sh` script.  Depending on the working directory used on 0.5.0 and 0.5.1 installs to execute `titan.sh start`, the `db/cassandra` directory may need to be copied to the archive root when upgrading to 0.5.2.\n\n0.5.1 (but not 0.5.0) included a copy of both ASM 3.1 and ASM 4.1.  These two versions of ASM contain partially overlapping package and classnames with incompatible changes.  This conflict between ASM versions could cause class linkage errors when running 0.5.1.  0.5.2 includes only ASM 4.1.  Multiple shaded copies of ASM 3.x are retained by dependencies that need an older version.  The only module that uses the single unshaded ASM 4.1 dependency is titan-solr.\n\nVersion 0.5.1 (October 10, 2014)\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nFrom 0.5.0\n^^^^^^^^^^\n\n0.5.1 is backwards compatible with 0.5.0. However, there are some minor API level changes to be aware of.\n\nThe schema access methods `getPropertyKey()`, `getEdgeLabel()`, and `getVertexLabel()` do no longer create the key or label if it does not yet exists and become purely retrieval methods that return NULL in this case. Change the method name to `getOrCreate/PropertyKey/EdgeLabel/VertexLabel()` to invoke the old semantics.\n\n\nVersion 0.5.0\n~~~~~~~~~~~~~\n\nFrom 0.4.x and previous\n^^^^^^^^^^^^^^^^^^^^^^^\n\nAPI Upgrade\n+++++++++++\n\nTitan 0.5.0 has introduced a number of new features and seen significant changes to the API. Refer to the documentation for a detailed description of Titan 0.5.0.\n\nMost importantly, Titan 0.5.0 introduces the management system which should be used for schema creation, index building, and other administrative tasks that affect the entire graph. The management system is accessed through `g.getManagementSystem()` which returns a management transaction that behaves like a normal transaction but provides additional features. \n\nIn a management transaction, edge labels and property keys are created with the methods `makeEdgeLabel(String)` and `makePropertyKey(String)` respectively. Instead of multiple methods for specifying the multiplicity or cardinality, the builders returned by the respective methods now feature a `multiplicity` method and a `cardinality` method, each of which expects an enum argument. The names of the methods in Titan 0.4.x are virtually identical to the enum constants used in Titan 0.5.0.\n\nNote, that schema type definition and index building have been separated in Titan 0.5.0. In older versions, one would call `sortKey` to build a vertex-centric index for an edge label and `indexed` to build a global graph index for property keys. These methods have disappeared from the builder and indexes are build separately using the management system. Refer to the relevant sections of the documentation to learn more about building indexes.\n\n[NOTE]\nIt is still possible to define types in an expicit `TitanTransaction`, however, it is strongly encouraged to use this method only for those use cases where schema type creation is part of normal user transactions. In all other cases Titan's management system should be used.\n\nTitan 0.5.0 introduces vertex labels as first class schema types. Many applications build on Titan have developed their own vertex labeling / typing system through vertex properties or some other means. It is highly recommended to transition to the native vertex labels supported in Titan 0.5.0.\n\nIn previous versions of Titan, the entire graph database configuration had to be provided in a configuration file for each started Titan instance. Starting in 0.5.0, Titan has a central configuration system which stores all configuration properties that must be coordinated across instances. These are initialized from the configuration file used to start the first Titan instance in a new cluster. After that, additional Titan instances only need a minimal configuration to connect to the cluster. Note, that changing global configuration options can no longer be accomplished through changes to the local configuration files. Such changes must now be made through Titan's management system.\n\nSome configuration options have been renamed and new options have been added.  See the <<titan-config-ref>> for an up-to-date listing of config options.\n\nFullDouble and FullFloat do no longer exist. Use Double and Float instead which are now serialized as 4 and 8 byte floating point numbers. In places where Double or Float\nwas used in sort keys (i.e. as the data type of the property in a sort key), use Decimal and Precision instead, respectively, because they have a fixd decimal range.\n\nData Upgrade\n++++++++++++\n\nThe data storage format of Titan 0.5.0 is incompatible with previous releases. The 0.5.0 release does not yet include utilities to automatically convert data stored with previous releases. This is planned for the 0.5.1 release. \nIf a data upgrade is desired before this release, it is encouraged to attempt an export from the old version using the graphson format and import it into a new Titan 0.5.0 graph using Faunus/Titan-Hadoop.\n\n\n\nVersion 0.4.2 (December 30, 2013), Version 0.4.3 (April 21, 2013), and Version 0.4.4 (April 22, 2013)\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nFrom 0.4.1\n^^^^^^^^^^\n\nTitan 0.4.2 is compatible with 0.4.1 and no special upgrade is necessary.\n\nFrom 0.4.0\n^^^^^^^^^^\n\nTitan 0.4.2 can read and write databases created by 0.4.0, but 0.4.0 can't necessarily read new types created by 0.4.2.  When carrying out a rolling upgrade from 0.4.0 to 0.4.2, the 0.4.2 instances must not create new types.\n\nVersion 0.4.1 (November 24, 2013)\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nFrom 0.4.0\n^^^^^^^^^^\n\nData Upgrade\n++++++++++++\n\nTitan 0.4.1 is fully backwards compatible to Titan 0.4.0 on the data layer. No need to reload or upgrade the data. However, once\nnew types are added to the database through Titan 0.4.1, older versions of Titan cannot read those newly added types.\nHence, ensure that all instances of Titan that are accessing the same storage backend are updated before adding new types. Note,\nthat you can have mixed Titan 0.4.0 and 0.4.1 instances reading from the cluster as long as the latter don't add new types.\n\nAPI Text Search Changes\n+++++++++++++++++++++++\n\nTitan 0.4.1 provides some new features that have extended the API, however, those do not break the existing API. There is one change to the API that requires updating. We changed the Text.PREFIX/REGEX to Text.CONTAINS_PREFIX/REGEX to make is obvious what the semantics of those predicates is.\n\nIf you are using either of those predicate, rename:\n\n* Text.PREFIX -> Text.CONTAINS_PREFIX\n* Text.REGEX -> Text.CONTAINS_REGEX\n\nVersion compatibility check\n+++++++++++++++++++++++++++\n\nIn Titan 0.4.1 we are storing all Titan flags in the storage backend (i.e. no more local properties file in the data directory).\nThis means, that Titan 0.4.1 will rewrite this flag and ignore its current value. This disables the version compatibility check.\nHence, make sure that you are running Titan 0.4.1 against a 0.4.0 or newer database. Running it against older versions of Titan will not cause an immediate exception but undetermined behavior down the road.\n\nBase Bugfix Version Increment\n+++++++++++++++++++++++++++++\n\nTitan's tested version of HBase has been updated from 0.94.7 in Titan 0.4.0 to 0.94.12 in Titan 0.4.1.  http://hbase.apache.org/book.html#hbase.binary.compatibility[These HBase versions are binary compatible].  According to HBase's versioning policy, code and data using .7 should interoperate seamlessly with .12.  Furthermore, HBase supports rolling upgrades between these versions.  HBase's changelog lists all of the intervening releases as https://issues.apache.org/jira/browse/HBASE?report=com.atlassian.jira.plugin.system.project:changelog-panel[bugfix releases].\n\nVersion 0.4.0 (October 16, 2013)\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nData Upgrade\n^^^^^^^^^^^^\n\nTitan 0.4.0 is incompatible with previous releases. No upgrade process available from previous versions of Titan yet.\nPlease check the mailing list for updates on the upgrade process.\n\nAPI TypeMaker Changes\n^^^^^^^^^^^^^^^^^^^^^\n\nWhen upgrading code from previous versions of Titan, please note, that the TypeMaker API has changed significantly.\nUse 'makeKey' and 'makeLabel' to define keys and labels respectively instead of 'makeType'. Those methods expect the name\nof the type as the argument. Furthermore, primaryKey() has been renamed to sortKey() and uniqueness has been renamed:\n\n* For Titan keys:\n** `unique()` replaces `unique(Direction.IN)`\n** `single()` replaces `unique(Direction.OUT)`\n** use `list()` to allow multiple properties for the key\n* For Titan labels:\n** `oneToMany()` replaces `unique(Direction.IN)`\n** `manyToOne()` replaces `unique(Direction.OUT)`\n** `oneToOne()` replaces `unique(Direction.IN).unique(Direction.OUT)`\n\nRexster Server\n^^^^^^^^^^^^^^\n\nRexster Server configuration and dependencies have been moved into the new module titan-rexster and are no longer part of titan-core\n\nCustom Attribute Serializer\n^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nThe interface has been extended by method to a) verify that the provided value is valid and b) automatically convert the value if possible.\nThese methods are required which means that any implementation of AttributeSerializer must be updated.\n\nType Groups\n^^^^^^^^^^^\n\nType Groups have been removed. Use sortKey instead to group under one label or key.\n\nVersion 0.3.2 (July 29, 2013)\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nFrom 0.3.1\n^^^^^^^^^^\n\nTitan 0.3.2 is compatible with 0.3.1 and no special upgrade is necessary.\n\nFrom 0.3.0\n^^^^^^^^^^\n\nTitan 0.3.2 is compatible with 0.3.0 and no special upgrade is necessary unless Elasticsearch is used.  If you are using Elasticsearch, please see the notes on upgrading to 0.3.1 from 0.3.0 below.\n\nFrom prior versions\n^^^^^^^^^^^^^^^^^^^\n\nTitan 0.3.2 is incompatible with earlier versions of Titan.  Read below for more information.\n\nVersion 0.3.1 (May 14, 2013)\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nFrom 0.3.0\n^^^^^^^^^^\n\nTitan 0.3.1 is compatible with 0.3.0 and no special upgrade is necessary unless Elasticsearch is used as a storage backend. Titan 0.3.1 uses Elasticsearch 0.90.0 whereas Titan 0.3.0 uses Elasticsearch 0.20.6. \n\nIf you are using Elasticsearch, please follow the http://www.elasticsearch.org/download/[upgrade instructions for Elasticsearch] which are summarized as follows:\n* Elasticsearch 0.90.0 is the first stable release based on Lucene 4. We recommend testing the upgrade before doing it in production.\n* Upgrading from 0.20.x requires a full cluster restart.\n* In order to be able to downgrade, stop indexing new data, issue a flush request, do the upgrade and only enable indexing of new data once you are certain that you no longer need to downgrade.  Once new data has been indexed, downgrading is no longer possible. To be extra safe, back up your data before upgrading.\n\nNote, that these instructions apply to the Elasticsearch cluster only and not the Titan cluster or the Titan storage cluster.\n\nFrom prior versions\n^^^^^^^^^^^^^^^^^^^\n\nTitan 0.3.1 is incompatible with earlier versions of Titan. Read below for more information.\n\nVersion 0.3.0 (March 29, 2013)\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nTitan 0.3.0 is incompatible with prior versions of Titan. The upgrade process is in development and not yet available.\n\nWhen upgrading to Titan 0.3.0, please note the following interface changes:\n\n* In `TypeMaker`, `functional()` has been replaced by `unique(Direction.OUT)`. Likewise, `functional(boolean)` has been replaced by `unique(Direction.OUT, UniquenessConsistency)`, where the argument `true` corresponds to `UniquenessConsistency.LOCK` and `false` corresponds to `UniquenessConsistency.NO_LOCK`.\n* In `TypeMaker`, `unique()` for property keys has been replaced by `unique(Direction.IN)`.\n* In `TypeMaker`, `indexed()` takes additional arguments because Titan now supports vertex _and_ edge indexing. Use `indexed(Class<? extends Element>)` to create a standard index for the key. Use `indexed(String, Class<? extends Element>)` to create an external index for the key.\n* In `TypeMaker`, `simple()` is no longer available. Simply remove it.\n* In `TitanFactory`, `openInMemoryGraph()` is no longer available. Instead, use `open(Configuration)` where the configuration sets `storage.backend=inmemory`.\n* In `AttributeSerializer`, `writeObjectData()` now uses `DataOutput` to write elements instead of `ByteBuffer`. A simple replace in any particular implementation of `AttributeSerializer` should do the trick.\n\nVersion 0.2.1 (March 22, 2013)\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nFrom Version 0.2.0\n^^^^^^^^^^^^^^^^^^\n\nNo special upgrade necessary. Since 0.2.1 has upgraded to Blueprints 2.3.0, there are some incompatible interface changes. In particular, `Graph.startTransaction()` has been renamed to `Graph.newTransaction()`. Please refer to the http://tinkerpop.incubator.apache.org/docs/3.0.0.M8-incubating/#transactions[Blueprints documentation] for more information.\n\nFrom prior versions\n^^^^^^^^^^^^^^^^^^^\n\nUpgrade to 0.2.0 first as described below.\n\nVersion 0.2.0 (December 27, 2012)\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nFrom Version 0.1.0\n^^^^^^^^^^^^^^^^^^\n\n. Shut down all running instances of Titan. If the storage backend is Cassandra or HBase, do not shut down the respective storage backend but leave it running. So, only terminate the Titan processes.\n. Create a backup of the storage backend. For BerkeleyDB, simply archive the contents of the storage directory. For http://www.datastax.com/docs/1.0/operations/backup_restore[Cassandra] and http://hbase.apache.org/book/ops.backup.html[HBase], follow the directions for the respective backup functionalities. Store the backup in a secure place.\n. Download and unzip Titan 0.2.0 on the (or one of the) machines that has been running Titan previously.\n. Execute the upgrade010to020.sh/bat script in the bin directory of Titan 0.2.0 with the file name of the Titan configuration file (i.e. the argument passed into `TitanFactory.open()`) as the only argument. Follow the instructions. If asked to confirm the id block size, please ensure that the displayed value matches your configuration. If you did not configure this value, simply enter yes. Ensure that the script completes successfully.\n. Install Titan 0.2.0 on all machines. Start Titan 0.2.0. Only use the 0.2.0 version of Titan from this point on.\n\nVersion 0.1.0 (September 7, 2012)\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nFrom Version 0.1-SNAPSHOT\n^^^^^^^^^^^^^^^^^^^^^^^^^\n\nShut down all running instances of Titan prior to upgrading ALL instances to the current release to avoid data corruption.\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "jre6.xslt",
          "type": "blob",
          "size": 1.4619140625,
          "content": "<xsl:stylesheet version=\"2.0\"\n    xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"\n    xmlns=\"http://maven.apache.org/POM/4.0.0\"\n    xpath-default-namespace=\"http://maven.apache.org/POM/4.0.0\">\n\n    <xsl:output omit-xml-declaration=\"yes\" />\n\n    <xsl:template match=\"@* | node()\">\n        <xsl:copy>\n            <xsl:apply-templates select=\"@* | node()\" />\n        </xsl:copy>\n    </xsl:template>\n\n    <!-- Rewrite artifactIds -->\n    <xsl:template match=\"artifactId[starts-with(text(), 'titan' ) and not(contains(text(), '-jre6')) and not(text() = 'titan-site')]\">\n        <artifactId xmlns=\"http://maven.apache.org/POM/4.0.0\"><xsl:value-of select=\"./text()\" />-jre6</artifactId>\n    </xsl:template>\n\n    <!-- Rewrite compiler target -->\n    <xsl:template match=\"/project/properties/compiler.target\">\n        <compiler.target>1.6</compiler.target>\n    </xsl:template>\n\n    <!-- Rewrite assembly archive names (used in titan-dist) -->\n    <xsl:template match=\"/project/properties/distribution.assembly.name[not(contains(text(), '-jre6'))]\">\n        <distribution.assembly.name><xsl:value-of select=\"./text()\" />-jre6</distribution.assembly.name>\n    </xsl:template>\n\n    <!-- Rewrite failsafe dependency scan configuration (used in titan-dist) -->\n    <xsl:template match=\"dependenciesToScan/dependency[contains(text(), 'com.thinkaurelius.titan') and not(contains(text(), '-jre6'))]\">\n        <dependency><xsl:value-of select=\"./text()\" />-jre6</dependency>\n    </xsl:template>\n\n</xsl:stylesheet>\n"
        },
        {
          "name": "pom.xml",
          "type": "blob",
          "size": 77.537109375,
          "content": "<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n    <parent>\n        <groupId>org.sonatype.oss</groupId>\n        <artifactId>oss-parent</artifactId>\n        <version>7</version>\n    </parent>\n    <groupId>com.thinkaurelius.titan</groupId>\n    <artifactId>titan</artifactId>\n    <version>1.0.1-SNAPSHOT</version>\n    <packaging>pom</packaging>\n    <prerequisites>\n        <maven>2.2.1</maven>\n    </prerequisites>\n    <name>Titan: Distributed Graph Database</name>\n    <url>http://thinkaurelius.github.com/titan/</url>\n\n    <description>\n        Titan is a distributed graph database optimized for processing massive-scale graphs represented over a machine\n        cluster.\n        Titan separates the concerns of graph processing and manipulation from storing the graph on disk,\n        delegating that concern to an extensible set of persistence solutions.\n    </description>\n    <developers>\n        <developer>\n            <name>Matthias Broecheler</name>\n            <email>me@matthiasb.com</email>\n            <url>http://matthiasb.com</url>\n        </developer>\n        <developer>\n            <name>Daniel LaRocque</name>\n            <email>dalaro@hopcount.org</email>\n        </developer>\n        <developer>\n            <name>Pavel Yaskevich</name>\n            <email>povel.y@gmail.com</email>\n            <url>http://github.com/xedin</url>\n        </developer>\n    </developers>\n    <contributors>\n        <contributor>\n            <name>Marko A. Rodriguez</name>\n            <email>marko@markorodriguez.com</email>\n            <url>http://markorodriguez.com</url>\n        </contributor>\n    </contributors>\n    <inceptionYear>2012</inceptionYear>\n    <licenses>\n        <license>\n            <name>The Apache Software License, Version 2.0</name>\n            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>\n        </license>\n    </licenses>\n    <scm>\n        <connection>scm:git:git@github.com:thinkaurelius/titan.git</connection>\n        <developerConnection>scm:git:git@github.com:thinkaurelius/titan.git</developerConnection>\n        <url>git@github.com:thinkaurelius/titan.git</url>\n        <tag>HEAD</tag>\n    </scm>\n    <properties>\n        <titan.compatible.versions />\n        <tinkerpop.version>3.0.2-incubating</tinkerpop.version>\n        <junit.version>4.12</junit.version>\n        <mrunit.version>1.1.0</mrunit.version>\n        <cassandra.version>2.1.9</cassandra.version>\n        <jamm.version>0.3.0</jamm.version>\n        <metrics2.version>2.1.2</metrics2.version>\n        <metrics3.version>3.0.1</metrics3.version>\n        <sesame.version>2.7.10</sesame.version>\n        <slf4j.version>1.7.5</slf4j.version>\n        <httpcomponents.version>4.4.1</httpcomponents.version>\n        <hadoop1.version>1.2.1</hadoop1.version>\n        <hadoop2.version>2.7.1</hadoop2.version>\n        <hbase094.version>0.94.25</hbase094.version>\n        <hbase096.core.version>0.96.2</hbase096.core.version>\n        <hbase096.version>${hbase096.core.version}-hadoop2</hbase096.version>\n        <hbase098.core.version>0.98.2</hbase098.core.version>\n        <hbase098.version>${hbase098.core.version}-hadoop2</hbase098.version>\n        <hbase100.core.version>1.0.2</hbase100.core.version>\n        <hbase100.version>${hbase100.core.version}</hbase100.version>\n        <jackson1.version>1.9.2</jackson1.version>\n        <jackson2.version>2.3.0</jackson2.version>\n        <!-- ES depends on Lucene.  This ES dependency can affect the\n             version used by the titan-lucene module.  When updating\n             the ES version, also consider the version of Lucene, and\n             vice-versa. -->\n        <lucene.version>4.10.4</lucene.version>\n        <elasticsearch.version>1.5.1</elasticsearch.version>\n        <commons.beanutils.version>1.7.0</commons.beanutils.version>\n        <joda.version>1.6.2</joda.version>\n        <concurrentlinkedhashmap.version>1.3</concurrentlinkedhashmap.version>\n        <antlr2.version>2.7.7</antlr2.version>\n        <antlr.version>3.2</antlr.version>\n        <asm3.version>3.1</asm3.version>\n        <asm4.version>4.0</asm4.version>\n        <zookeeper.version>3.4.6</zookeeper.version>\n        <jersey.version>1.18.2</jersey.version>\n        <jna.version>4.0.0</jna.version>\n        <kuali.s3.wagon.version>1.1.20</kuali.s3.wagon.version>\n        <jasper.version>5.5.23</jasper.version>\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\n        <titan.testdir>${project.build.directory}/titan-test</titan.testdir>\n        <gpg.skip>false</gpg.skip>\n        <perf.jvm.opts />\n        <default.test.jvm.opts>-Xms256m -Xmx768m -XX:+HeapDumpOnOutOfMemoryError -ea ${test.extra.jvm.opts}</default.test.jvm.opts>\n        <mem.jvm.opts>-Xms256m -Xmx256m -ea -XX:+HeapDumpOnOutOfMemoryError ${test.extra.jvm.opts}</mem.jvm.opts>\n        <test.extra.jvm.opts />\n        <test.skip.default>false</test.skip.default>\n        <test.skip.tp>true</test.skip.tp>\n        <top.level.basedir>${basedir}</top.level.basedir>\n        <compiler.source>1.8</compiler.source>\n        <compiler.target>1.8</compiler.target>\n        <compiler.args />\n        <test.excluded.groups>com.thinkaurelius.titan.testcategory.MemoryTests,com.thinkaurelius.titan.testcategory.PerformanceTests,com.thinkaurelius.titan.testcategory.BrittleTests</test.excluded.groups>\n    </properties>\n    <modules>\n        <module>titan-core</module>\n        <module>titan-test</module>\n        <module>titan-berkeleyje</module>\n        <module>titan-cassandra</module>\n        <module>titan-hadoop-parent</module>\n        <module>titan-hbase-parent</module>\n        <module>titan-es</module>\n        <module>titan-lucene</module>\n        <!-- TODO gremlin-server integration -->\n        <!-- <module>titan-rexster</module> -->\n        <module>titan-all</module>\n        <module>titan-dist</module>\n        <module>titan-doc</module>\n        <module>titan-solr</module>\n    </modules>\n    <repositories>\n        <repository>\n            <id>apache-snapshots</id>\n            <name>repository.apache.org snapshots</name>\n            <url>https://repository.apache.org/content/repositories/snapshots</url>\n            <releases>\n                <enabled>false</enabled>\n            </releases>\n            <snapshots>\n                <enabled>true</enabled>\n            </snapshots>\n        </repository>\n    </repositories>\n    <build>\n        <directory>${basedir}/target</directory>\n        <plugins>\n            <plugin>\n                <artifactId>maven-enforcer-plugin</artifactId>\n                <version>1.3.1</version>\n                <executions>\n                    <execution>\n                        <id>enforce-dependency-convergence</id>\n                        <goals>\n                            <goal>enforce</goal>\n                        </goals>\n                        <configuration>\n                            <rules>\n                                <DependencyConvergence />\n                            </rules>\n                        </configuration>\n                    </execution>\n                </executions>\n            </plugin>\n            <plugin>\n                <artifactId>maven-release-plugin</artifactId>\n                <configuration>\n                    <!--\n                      Only release:perform uses this configuration\n                      setting; release:prepare doesn't care and always\n                      runs \"clean verify\"\n                    -->\n                    <goals>javadoc:aggregate deploy</goals>\n\n                    <!--\n                      Tell the release plugin to never \"git push\".\n                      When releasing, you have to manually issue \"git\n                      push\" between release:prepare and\n                      release:perform.  You'll have to push both the\n                      branch you're releasing and the tag\n                      release:prepare locally created.\n                    -->\n                    <pushChanges>false</pushChanges>\n\n                    <!--\n                      @{...} is a special variable interpolation\n                      syntax that uses the target release version\n                      instead of the pom's actual version, which is\n                      usually a -SNAPSHOT version when this setting\n                      gets evaluated.\n                    -->\n                    <tagNameFormat>@{project.version}</tagNameFormat>\n\n                    <!--\n                      The release:perform goal activates these\n                      profiles when it invokes maven with the <goals>\n                      listed above.  Release engineering specific to\n                      release:perform and disabled during non-release\n                      operation should be encapsulated with the\n                      profile id listed below.\n                    -->\n                    <releaseProfiles>aurelius-release</releaseProfiles>\n\n                    <!-- Keep all submodules at same version as parent -->\n                    <autoVersionSubmodules>true</autoVersionSubmodules>\n\n                    <!-- applies to both release:prepare and :perform -->\n                    <arguments>-DskipTests=true</arguments>\n                </configuration>\n            </plugin>\n\n        </plugins>\n        <pluginManagement>\n            <plugins>\n                <plugin>\n                    <artifactId>maven-compiler-plugin</artifactId>\n                    <version>3.1</version>\n                    <configuration>\n                        <source>${compiler.source}</source>\n                        <target>${compiler.target}</target>\n                        <compilerArgument>${compiler.args}</compilerArgument>\n                        <compilerArguments>\n                            <Xmaxerrs>500</Xmaxerrs>\n                        </compilerArguments>\n                    </configuration>\n                </plugin>\n                <plugin>\n                    <artifactId>maven-surefire-plugin</artifactId>\n                    <version>2.15</version>\n                    <configuration>\n                        <argLine>${default.test.jvm.opts}</argLine>\n                        <runOrder>alphabetical</runOrder>\n                        <failIfNoTests>false</failIfNoTests>\n                        <!-- six hours -->\n                        <forkedProcessTimeoutInSeconds>21600</forkedProcessTimeoutInSeconds>\n                        <reuseForks>false</reuseForks>\n                        <excludes>\n                            <exclude>**/*PerformanceTest.java</exclude>\n                            <exclude>**/*ConcurrentTest.java</exclude>\n                            <exclude>**/*Groovy*Test.java</exclude>\n                            <exclude>**/*ComputerTest.java</exclude>\n                            <exclude>**/*ProcessTest.java</exclude>\n                            <exclude>**/*ProcessPerformanceTest.java</exclude>\n                            <exclude>**/*StructureTest.java</exclude>\n                        </excludes>\n                        <excludedGroups>${test.excluded.groups}</excludedGroups>\n                        <skip>${test.skip.default}</skip>\n                    </configuration>\n                    <executions>\n                        <execution>\n                            <id>tinkerpop-test</id>\n                            <goals>\n                                <goal>test</goal>\n                            </goals>\n                            <phase>test</phase>\n                            <configuration combine.self=\"override\">\n                                <reuseForks>false</reuseForks>\n                                <forkCount>1</forkCount>\n                                <parallel>none</parallel>\n                                <threadCount>1</threadCount>\n                                <perCoreThreadCount>false</perCoreThreadCount>\n                                <includes>\n                                    <include>**/*Groovy*Test.java</include>\n                                    <include>**/*ComputerTest.java</include>\n                                    <include>**/*ProcessTest.java</include>\n                                    <include>**/*ProcessPerformanceTest.java</include>\n                                    <include>**/*StructureTest.java</include>\n                                </includes>\n                                <runOrder>alphabetical</runOrder>\n                                <!-- <excludes>\n                                    <exclude>**/*</exclude>\n                                </excludes> -->\n                                <skipTests>${test.skip.tp}</skipTests>\n                            </configuration>\n                       </execution>\n                    </executions>\n                </plugin>\n                <plugin>\n                    <artifactId>maven-failsafe-plugin</artifactId>\n                    <version>2.15</version>\n                </plugin>\n                <plugin>\n                    <artifactId>maven-site-plugin</artifactId>\n                    <version>3.3</version>\n                    <executions>\n                        <execution>\n                            <id>default-site</id>\n                            <phase>none</phase>\n                        </execution>\n                        <execution>\n                            <id>default-deploy</id>\n                            <phase>none</phase>\n                        </execution>\n                    </executions>\n                </plugin>\n                <plugin>\n                    <artifactId>maven-scm-plugin</artifactId>\n                    <version>1.9</version>\n                </plugin>\n                <plugin>\n                    <artifactId>maven-deploy-plugin</artifactId>\n                    <version>2.7</version>\n                </plugin>\n                <plugin>\n                    <artifactId>maven-jar-plugin</artifactId>\n                    <version>2.4</version>\n                </plugin>\n                <plugin>\n                    <artifactId>maven-resources-plugin</artifactId>\n                    <version>2.6</version>\n                </plugin>\n                <plugin>\n                    <artifactId>maven-release-plugin</artifactId>\n                    <version>2.5</version>\n                    <dependencies>\n                        <dependency>\n                            <groupId>org.apache.maven.scm</groupId>\n                            <artifactId>maven-scm-provider-gitexe</artifactId>\n                            <version>1.9</version>\n                        </dependency>\n                    </dependencies>\n                </plugin>\n                <plugin>\n                    <artifactId>maven-javadoc-plugin</artifactId>\n                    <version>2.9.1</version>\n                </plugin>\n                <plugin>\n                    <artifactId>maven-assembly-plugin</artifactId>\n                    <version>2.4</version>\n                </plugin>\n                <plugin>\n                    <artifactId>maven-install-plugin</artifactId>\n                    <version>2.4</version>\n                </plugin>\n                <plugin>\n                    <artifactId>maven-source-plugin</artifactId>\n                    <version>2.2.1</version>\n                </plugin>\n                <plugin>\n                    <artifactId>maven-clean-plugin</artifactId>\n                    <version>2.5</version>\n                </plugin>\n                <plugin>\n                    <artifactId>maven-dependency-plugin</artifactId>\n                    <version>2.8</version>\n                </plugin>\n                <plugin>\n                    <artifactId>maven-gpg-plugin</artifactId>\n                    <version>1.4</version>\n                </plugin>\n                <plugin>\n                    <groupId>org.codehaus.mojo</groupId>\n                    <artifactId>properties-maven-plugin</artifactId>\n                    <version>1.0-alpha-2</version>\n                </plugin>\n                <plugin>\n                    <groupId>org.codehaus.mojo</groupId>\n                    <artifactId>wagon-maven-plugin</artifactId>\n                    <version>1.0-beta-4</version>\n                </plugin>\n                <plugin>\n                    <groupId>org.codehaus.mojo</groupId>\n                    <artifactId>build-helper-maven-plugin</artifactId>\n                    <version>1.8</version>\n                </plugin>\n                <plugin>\n                    <groupId>org.codehaus.mojo</groupId>\n                    <artifactId>exec-maven-plugin</artifactId>\n                    <version>1.2.1</version>\n                </plugin>\n                <plugin>\n                    <groupId>org.codehaus.mojo</groupId>\n                    <artifactId>xml-maven-plugin</artifactId>\n                    <version>1.0</version>\n                </plugin>\n                <plugin>\n                    <groupId>org.codehaus.mojo</groupId>\n                    <artifactId>cobertura-maven-plugin</artifactId>\n                    <version>2.5.2</version>\n                    <configuration>\n                        <aggregate>true</aggregate>\n                    </configuration>\n                </plugin>\n                <plugin>\n                    <groupId>com.github.github</groupId>\n                    <artifactId>site-maven-plugin</artifactId>\n                    <version>0.8</version>\n                    <configuration>\n                        <!--\n                          To push changes to gh-pages during\n                          release:perform using this plugin, your\n                          ~/.m2/settings.xml file must contain a\n                          <server> stanza that matches the\n                          <server>github</server> tag below.  Here's\n                          an example settings.xml:\n\n                          <settings>\n                            ...\n                            <servers>\n                              ...\n                              <server>\n                                <id>github</id> << must match <username>dalaro</username>\n                                <password>allmypasswordsareliterallypassword</password>\n                              </server>\n                            </servers>\n                          </settings>\n                        -->\n                        <server>github</server>\n                        <repositoryName>titan</repositoryName>\n                        <repositoryOwner>thinkaurelius</repositoryOwner>\n                    </configuration>\n                </plugin>\n                <plugin>\n                    <artifactId>maven-antrun-plugin</artifactId>\n                    <version>1.7</version>\n                </plugin>\n                <plugin>\n                    <groupId>org.asciidoctor</groupId>\n                    <artifactId>asciidoctor-maven-plugin</artifactId>\n                    <version>0.1.4</version>\n                </plugin>\n                <plugin>\n                    <groupId>org.jacoco</groupId>\n                    <artifactId>jacoco-maven-plugin</artifactId>\n                    <version>0.6.3.201306030806</version>\n                </plugin>\n            </plugins>\n        </pluginManagement>\n    </build>\n    <dependencyManagement>\n        <dependencies>\n            <!-- Jackson 2.x -->\n            <dependency>\n                <groupId>com.fasterxml.jackson.core</groupId>\n                <artifactId>jackson-core</artifactId>\n                <version>${jackson2.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>com.fasterxml.jackson.core</groupId>\n                <artifactId>jackson-databind</artifactId>\n                <version>${jackson2.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>com.fasterxml.jackson.datatype</groupId>\n                <artifactId>jackson-datatype-json-org</artifactId>\n                <version>${jackson2.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>com.fasterxml.jackson.core</groupId>\n                <artifactId>jackson-annotations</artifactId>\n                <version>${jackson2.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>joda-time</groupId>\n                <artifactId>joda-time</artifactId>\n                <version>${joda.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>com.googlecode.concurrentlinkedhashmap</groupId>\n                <artifactId>concurrentlinkedhashmap-lru</artifactId>\n                <version>${concurrentlinkedhashmap.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.antlr</groupId>\n                <artifactId>antlr-runtime</artifactId>\n                <version>${antlr.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.antlr</groupId>\n                <artifactId>antlr</artifactId>\n                <version>${antlr.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.antlr</groupId>\n                <artifactId>antlr-master</artifactId>\n                <version>${antlr.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>antlr</groupId>\n                <artifactId>antlr</artifactId>\n                <version>${antlr2.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>com.google.code.findbugs</groupId>\n                <artifactId>jsr305</artifactId>\n                <version>3.0.0</version>\n            </dependency>\n\n            <!-- Jackson 1.x -->\n            <dependency>\n                <groupId>org.codehaus.jackson</groupId>\n                <artifactId>jackson-mapper-asl</artifactId>\n                <version>${jackson1.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.codehaus.jackson</groupId>\n                <artifactId>jackson-core-asl</artifactId>\n                <version>${jackson1.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.codehaus.jackson</groupId>\n                <artifactId>jackson-xc</artifactId>\n                <version>${jackson1.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.codehaus.jackson</groupId>\n                <artifactId>jackson-jaxrs</artifactId>\n                <version>${jackson1.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.apache.commons</groupId>\n                <artifactId>commons-lang3</artifactId>\n                <version>3.3.1</version>\n            </dependency>\n            <dependency>\n                <groupId>commons-configuration</groupId>\n                <artifactId>commons-configuration</artifactId>\n                <version>1.10</version>\n            </dependency>\n            <dependency>\n                <groupId>commons-collections</groupId>\n                <artifactId>commons-collections</artifactId>\n                <version>3.2.1</version>\n            </dependency>\n            <dependency>\n                <groupId>commons-net</groupId>\n                <artifactId>commons-net</artifactId>\n                <version>1.4.1</version>\n            </dependency>\n            <dependency>\n                <groupId>commons-beanutils</groupId>\n                <artifactId>commons-beanutils</artifactId>\n                <version>${commons.beanutils.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>commons-beanutils</groupId>\n                <artifactId>commons-beanutils-core</artifactId>\n                <version>${commons.beanutils.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>commons-logging</groupId>\n                <artifactId>commons-logging</artifactId>\n                <version>1.1.1</version>\n            </dependency>\n            <dependency>\n                <groupId>org.apache.commons</groupId>\n                <artifactId>commons-math</artifactId>\n                <version>2.2</version>\n            </dependency>\n            <dependency>\n                <groupId>org.apache.commons</groupId>\n                <artifactId>commons-math3</artifactId>\n                <version>3.2</version>\n            </dependency>\n            <dependency>\n                <groupId>org.yaml</groupId>\n                <artifactId>snakeyaml</artifactId>\n                <version>1.11</version>\n            </dependency>\n            <dependency>\n                <groupId>org.reflections</groupId>\n                <artifactId>reflections</artifactId>\n                <version>0.9.9-RC1</version>\n            </dependency>\n            <dependency>\n                <groupId>xml-apis</groupId>\n                <artifactId>xml-apis</artifactId>\n                <version>1.3.04</version>\n            </dependency>\n            <dependency>\n                <groupId>org.apache.zookeeper</groupId>\n                <artifactId>zookeeper</artifactId>\n                <version>${zookeeper.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.apache.avro</groupId>\n                <artifactId>avro</artifactId>\n                <version>1.7.4</version>\n            </dependency>\n            <dependency>\n                <artifactId>jboss-logging</artifactId>\n                <groupId>org.jboss.logging</groupId>\n                <version>3.1.2.GA</version>\n            </dependency>\n            <dependency>\n                <groupId>org.slf4j</groupId>\n                <artifactId>slf4j-api</artifactId>\n                <version>${slf4j.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.slf4j</groupId>\n                <artifactId>slf4j-log4j12</artifactId>\n                <version>${slf4j.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>log4j</groupId>\n                <artifactId>log4j</artifactId>\n                <version>1.2.16</version>\n            </dependency>\n            <dependency>\n                <groupId>org.codehaus.jettison</groupId>\n                <artifactId>jettison</artifactId>\n                <version>1.3.3</version>\n            </dependency>\n            <dependency>\n                <groupId>tomcat</groupId>\n                <artifactId>jasper-runtime</artifactId>\n                <version>${jasper.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>tomcat</groupId>\n                <artifactId>jasper-compiler</artifactId>\n                <version>${jasper.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.mortbay.jetty</groupId>\n                <artifactId>jetty</artifactId>\n                <version>6.1.26</version>\n            </dependency>\n            <!-- Sesame -->\n            <dependency>\n                <groupId>org.openrdf.sesame</groupId>\n                <artifactId>sesame-model</artifactId>\n                <version>${sesame.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.openrdf.sesame</groupId>\n                <artifactId>sesame-rio-api</artifactId>\n                <version>${sesame.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.openrdf.sesame</groupId>\n                <artifactId>sesame-rio-n3</artifactId>\n                <version>${sesame.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.openrdf.sesame</groupId>\n                <artifactId>sesame-rio-ntriples</artifactId>\n                <version>${sesame.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.openrdf.sesame</groupId>\n                <artifactId>sesame-rio-rdfxml</artifactId>\n                <version>${sesame.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.openrdf.sesame</groupId>\n                <artifactId>sesame-rio-trig</artifactId>\n                <version>${sesame.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.openrdf.sesame</groupId>\n                <artifactId>sesame-rio-trix</artifactId>\n                <version>${sesame.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.openrdf.sesame</groupId>\n                <artifactId>sesame-rio-turtle</artifactId>\n                <version>${sesame.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.ning</groupId>\n                <artifactId>compress-lzf</artifactId>\n                <version>1.0.0</version>\n            </dependency>\n\n            <dependency>\n                <groupId>net.java.dev.jets3t</groupId>\n                <artifactId>jets3t</artifactId>\n                <version>0.7.1</version>\n            </dependency>\n\n            <dependency>\n                <groupId>io.netty</groupId>\n                <artifactId>netty-all</artifactId>\n                <version>4.0.28.Final</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.thoughtworks.paranamer</groupId>\n                <artifactId>paranamer</artifactId>\n                <version>2.6</version>\n            </dependency>\n\n\n            <!-- asm 3.x -->\n            <dependency>\n                <groupId>asm</groupId>\n                <artifactId>asm</artifactId>\n                <version>${asm3.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>asm</groupId>\n                <artifactId>asm-all</artifactId>\n                <version>${asm3.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>asm</groupId>\n                <artifactId>asm-analysis</artifactId>\n                <version>${asm3.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>asm</groupId>\n                <artifactId>asm-commons</artifactId>\n                <version>${asm3.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>asm</groupId>\n                <artifactId>asm-debug-all</artifactId>\n                <version>${asm3.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>asm</groupId>\n                <artifactId>asm-parent</artifactId>\n                <version>${asm3.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>asm</groupId>\n                <artifactId>asm-tree</artifactId>\n                <version>${asm3.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>asm</groupId>\n                <artifactId>asm-util</artifactId>\n                <version>${asm3.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>asm</groupId>\n                <artifactId>asm-xml</artifactId>\n                <version>${asm3.version}</version>\n            </dependency>\n\n            <!-- The Objenesis version is closely coupled to Kryo and to TP3 versions -->\n            <dependency>\n                <groupId>org.objenesis</groupId>\n                <artifactId>objenesis</artifactId>\n                <version>2.1</version>\n            </dependency>\n            <dependency>\n                <groupId>junit</groupId>\n                <artifactId>junit</artifactId>\n                <version>4.12</version>\n            </dependency>\n            <dependency>\n                <groupId>org.mockito</groupId>\n                <artifactId>mockito-all</artifactId>\n                <version>1.8.5</version>\n            </dependency>\n            <dependency>\n                <groupId>com.h2database</groupId>\n                <artifactId>h2</artifactId>\n                <version>1.3.172</version>\n            </dependency>\n            <dependency>\n                <groupId>org.hamcrest</groupId>\n                <artifactId>hamcrest-core</artifactId>\n                <version>1.3</version>\n            </dependency>\n            <dependency>\n                <groupId>jline</groupId>\n                <artifactId>jline</artifactId>\n                <version>2.11</version>\n            </dependency>\n            <!-- Force newer Snappy-java because 1.4.0.1 is broken on Mac OS X with JDK 7 -->\n            <dependency>\n                <groupId>org.xerial.snappy</groupId>\n                <artifactId>snappy-java</artifactId>\n                <version>1.0.5-M3</version>\n            </dependency>\n            <dependency>\n                <!-- Run the full test suite when changing the Guava version.\n                     The Guava team is deadly serious about their 18 month period from deprecation\n                     to feature deletion, and as a result, at least one of Titan's dependencies is\n                     likely to break whenever the Guava version changes.\n\n                     Example where blithely upgrading Guava introduced a linkage error in the past:\n                     https://issues.apache.org/jira/browse/HBASE-10174\n                -->\n                <groupId>com.google.guava</groupId>\n                <artifactId>guava</artifactId>\n                <version>18.0</version>\n            </dependency>\n            <dependency>\n                <groupId>commons-lang</groupId>\n                <artifactId>commons-lang</artifactId>\n                <version>2.5</version>\n            </dependency>\n            <dependency>\n                <groupId>commons-codec</groupId>\n                <artifactId>commons-codec</artifactId>\n                <version>1.7</version>\n            </dependency>\n            <dependency>\n                <groupId>commons-cli</groupId>\n                <artifactId>commons-cli</artifactId>\n                <version>1.2</version>\n            </dependency>\n            <dependency>\n                <groupId>org.jboss.netty</groupId>\n                <artifactId>netty</artifactId>\n                <version>3.2.7.Final</version>\n            </dependency>\n            <dependency>\n                <groupId>io.netty</groupId>\n                <artifactId>netty</artifactId>\n                <version>3.6.6.Final</version>\n            </dependency>\n\n            <!-- Spatial4j -->\n            <dependency>\n                <groupId>com.spatial4j</groupId>\n                <artifactId>spatial4j</artifactId>\n                <version>0.4.1</version>\n            </dependency>\n\n            <!-- Package prefix is org.apache.commons.httpclient -->\n            <dependency>\n                <groupId>commons-httpclient</groupId>\n                <artifactId>commons-httpclient</artifactId>\n                <version>3.1</version>\n            </dependency>\n\n            <!-- Package prefix is org.apache.http -->\n            <dependency>\n                <groupId>org.apache.httpcomponents</groupId>\n                <artifactId>httpclient</artifactId>\n                <version>${httpcomponents.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.apache.httpcomponents</groupId>\n                <artifactId>httpcore</artifactId>\n                <version>${httpcomponents.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.googlecode.json-simple</groupId>\n                <artifactId>json-simple</artifactId>\n                <version>1.1</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.sun.jersey</groupId>\n                <artifactId>jersey-json</artifactId>\n                <version>${jersey.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>com.sun.jersey</groupId>\n                <artifactId>jersey-server</artifactId>\n                <version>${jersey.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>com.sun.jersey</groupId>\n                <artifactId>jersey-core</artifactId>\n                <version>${jersey.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>com.sun.jersey</groupId>\n                <artifactId>jersey-grizzly2</artifactId>\n                <version>${jersey.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>javax.xml.bind</groupId>\n                <artifactId>jaxb-api</artifactId>\n                <version>2.2.2</version>\n            </dependency>\n            <dependency>\n                <groupId>commons-io</groupId>\n                <artifactId>commons-io</artifactId>\n                <version>2.3</version>\n            </dependency>\n            <dependency>\n                <groupId>org.jacoco</groupId>\n                <artifactId>org.jacoco.ant</artifactId>\n                <version>0.6.2.201302030002</version>\n            </dependency>\n            <dependency>\n                <groupId>com.yammer.metrics</groupId>\n                <artifactId>metrics-core</artifactId>\n                <version>${metrics2.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>com.codahale.metrics</groupId>\n                <artifactId>metrics-core</artifactId>\n                <version>${metrics3.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>com.codahale.metrics</groupId>\n                <artifactId>metrics-ganglia</artifactId>\n                <version>${metrics3.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>com.codahale.metrics</groupId>\n                <artifactId>metrics-graphite</artifactId>\n                <version>${metrics3.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>com.github.stephenc.high-scale-lib</groupId>\n                <artifactId>high-scale-lib</artifactId>\n                <version>1.1.2</version>\n            </dependency>\n            <dependency>\n                <groupId>com.clearspring.analytics</groupId>\n                <artifactId>stream</artifactId>\n                <version>2.7.0</version>\n            </dependency>\n            <dependency>\n                <groupId>it.unimi.dsi</groupId>\n                <artifactId>fastutil</artifactId>\n                <version>6.5.7</version>\n            </dependency>\n            <dependency>\n                <groupId>org.apache.thrift</groupId>\n                <artifactId>libthrift</artifactId>\n                <version>0.9.0</version>\n            </dependency>\n            <dependency>\n                <groupId>org.apache.cassandra</groupId>\n                <artifactId>cassandra-all</artifactId>\n                <version>${cassandra.version}</version>\n                <!-- Using avro-ipc 1.5.3 caused the following when opening the graphdb:\n                     java.lang.NoSuchMethodError: org.apache.avro.io.DecoderFactory.configureDirectDecoder(Z)Lorg/apache/avro/io/DecoderFactory\n    \n                     Stock avro 1.4.0 or 1.4.1 might work, but I'd like to see\n                     what customizations were made in the cassandra copy of avro\n                     before trying to drop it for the stock artifact...\n                <exclusions>\n                    <exclusion>\n                        <groupId>org.apache.cassandra.deps</groupId>\n                        <artifactId>avro</artifactId>\n                    </exclusion>\n                </exclusions>\n                -->\n            </dependency>\n            <dependency>\n                <groupId>org.apache.cassandra</groupId>\n                <artifactId>cassandra-thrift</artifactId>\n                <version>${cassandra.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.javassist</groupId>\n                <artifactId>javassist</artifactId>\n                <version>3.18.0-GA</version>\n            </dependency>\n            <dependency>\n                <groupId>com.carrotsearch</groupId>\n                <artifactId>junit-benchmarks</artifactId>\n                <version>0.7.0</version>\n            </dependency>\n            <dependency>\n                <groupId>com.carrotsearch</groupId>\n                <artifactId>hppc</artifactId>\n                <version>0.7.1</version>\n            </dependency>\n            <dependency>\n                <groupId>com.carrotsearch.randomizedtesting</groupId>\n                <artifactId>randomizedtesting-runner</artifactId>\n                <version>2.0.8</version>\n            </dependency>\n            <dependency>\n                <groupId>com.google.protobuf</groupId>\n                <artifactId>protobuf-java</artifactId>\n                <version>2.5.0</version>\n            </dependency>\n            <dependency>\n                <groupId>org.apache.velocity</groupId>\n                <artifactId>velocity</artifactId>\n                <version>1.7</version>\n            </dependency>\n            <dependency>\n                <groupId>org.apache.ant</groupId>\n                <artifactId>ant</artifactId>\n                <version>1.8.3</version>\n            </dependency>\n            <dependency>\n                <groupId>javax.servlet</groupId>\n                <artifactId>servlet-api</artifactId>\n                <version>2.5</version>\n            </dependency>\n\n            <dependency>\n                <groupId>jdk.tools</groupId>\n                <artifactId>jdk.tools</artifactId>\n                <version>1.8</version>\n            </dependency>\n        </dependencies>\n    </dependencyManagement>\n\n    <dependencies>\n        <!-- Logging -->\n        <dependency>\n            <groupId>org.slf4j</groupId>\n            <artifactId>slf4j-api</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.slf4j</groupId>\n            <artifactId>slf4j-log4j12</artifactId>\n            <scope>runtime</scope>\n            <optional>true</optional>\n        </dependency>\n        <dependency>\n            <groupId>log4j</groupId>\n            <artifactId>log4j</artifactId>\n            <scope>runtime</scope>\n            <optional>true</optional>\n        </dependency>\n    </dependencies>\n\n    <profiles>\n        <profile>\n            <id>sonatype-oss-release</id>\n            <build>\n                <plugins>\n                    <plugin>\n                        <groupId>org.apache.maven.plugins</groupId>\n                        <artifactId>maven-source-plugin</artifactId>\n                        <version>2.1.2</version>\n                        <executions>\n                            <execution>\n                                <id>attach-sources</id>\n                                <phase>none</phase>\n                            </execution>\n                        </executions>\n                    </plugin>\n                    <plugin>\n                        <groupId>org.apache.maven.plugins</groupId>\n                        <artifactId>maven-javadoc-plugin</artifactId>\n                        <version>2.7</version>\n                        <executions>\n                            <execution>\n                                <id>attach-javadocs</id>\n                                <phase>none</phase>\n                            </execution>\n                        </executions>\n                    </plugin>\n                    <plugin>\n                        <artifactId>maven-gpg-plugin</artifactId>\n                        <version>1.1</version>\n                        <executions>\n                            <execution>\n                                <id>sign-artifacts</id>\n                                <phase>none</phase>\n                            </execution>\n                        </executions>\n                    </plugin>\n                </plugins>\n            </build>\n        </profile>\n\n        <profile>\n            <id>aurelius-release</id>\n            <!--\n              Sign artifacts artifacts only during release:perform\n              when this profile is automatically activated or whenever\n              else it is manually activated.\n    \n              Stolen from: http://blog.sonatype.com/people/2010/01/how-to-generate-pgp-signatures-with-maven/\n            -->\n            <build>\n                <plugins>\n                    <plugin>\n                        <groupId>org.apache.maven.plugins</groupId>\n                        <artifactId>maven-source-plugin</artifactId>\n                        <executions>\n                            <execution>\n                                <id>attach-sources</id>\n                                <phase>package</phase>\n                                <goals>\n                                    <goal>jar-no-fork</goal>\n                                </goals>\n                            </execution>\n                        </executions>\n                    </plugin>\n                    <plugin>\n                        <artifactId>maven-javadoc-plugin</artifactId>\n                        <executions>\n                            <execution>\n                                <id>attach-javadocs</id>\n                                <phase>package</phase>\n                                <goals>\n                                    <goal>jar</goal>\n                                </goals>\n                                <configuration>\n                                    <!-- Quiet mode still shows warnings and errors -->\n                                    <quiet>true</quiet>\n                                </configuration>\n                            </execution>\n                        </executions>\n                    </plugin>\n                    <plugin>\n                        <artifactId>maven-gpg-plugin</artifactId>\n                        <executions>\n                            <execution>\n                                <id>sign-artifacts</id>\n                                <phase>package</phase>\n                                <goals>\n                                    <goal>sign</goal>\n                                </goals>\n                                <configuration>\n                                    <useAgent>true</useAgent>\n                                    <skip>${gpg.skip}</skip>\n                                    <excludes>\n                                        <exclude>*.asc</exclude>\n                                    </excludes>\n                                </configuration>\n                            </execution>\n                        </executions>\n                    </plugin>\n                </plugins>\n            </build>\n        </profile>\n\n        <profile>\n            <id>sonar-upload</id>\n            <properties>\n                <sonar.jacoco.reportPath>../target/jacoco-combined.exec</sonar.jacoco.reportPath>\n                <sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>\n            </properties>\n        </profile>\n\n        <profile>\n            <id>hadoop1</id>\n\n            <activation>\n                <property>\n                    <name>hadoop.profile</name>\n                    <value>1.0</value>\n                </property>\n            </activation>\n\n            <dependencyManagement>\n                <dependencies>\n                    <dependency>\n                        <groupId>org.apache.hadoop</groupId>\n                        <artifactId>hadoop-core</artifactId>\n                        <version>${hadoop1.version}</version>\n                    </dependency>\n                    <dependency>\n                        <groupId>org.apache.hadoop</groupId>\n                        <artifactId>hadoop-client</artifactId>\n                        <version>${hadoop1.version}</version>\n                    </dependency>\n                </dependencies>\n            </dependencyManagement>\n        </profile>\n\n        <profile>\n            <id>hadoop2</id>\n\n            <activation>\n                <property>\n                    <name>!hadoop.profile</name>\n                </property>\n            </activation>\n\n            <dependencyManagement>\n                <dependencies>\n                    <dependency>\n                        <groupId>org.apache.curator</groupId>\n                        <artifactId>curator-recipes</artifactId>\n                        <version>${hadoop2.version}</version>\n                    </dependency>\n                    <dependency>\n                        <groupId>org.apache.hadoop</groupId>\n                        <artifactId>hadoop-annotations</artifactId>\n                        <version>${hadoop2.version}</version>\n                    </dependency>\n                    <dependency>\n                        <groupId>org.apache.hadoop</groupId>\n                        <artifactId>hadoop-auth</artifactId>\n                        <version>${hadoop2.version}</version>\n                    </dependency>\n                    <dependency>\n                        <groupId>org.apache.hadoop</groupId>\n                        <artifactId>hadoop-client</artifactId>\n                        <version>${hadoop2.version}</version>\n                        <exclusions>\n                            <exclusion>\n                                <groupId>javax.servlet</groupId>\n                                <artifactId>servlet-api</artifactId>\n                            </exclusion>\n                        </exclusions>\n                    </dependency>\n                    <dependency>\n                        <groupId>org.apache.hadoop</groupId>\n                        <artifactId>hadoop-common</artifactId>\n                        <version>${hadoop2.version}</version>\n                    </dependency>\n                    <dependency>\n                        <groupId>org.apache.hadoop</groupId>\n                        <artifactId>hadoop-hdfs</artifactId>\n                        <version>${hadoop2.version}</version>\n                    </dependency>\n                    <dependency>\n                        <groupId>org.apache.hadoop</groupId>\n                        <artifactId>hadoop-hdfs</artifactId>\n                        <version>${hadoop2.version}</version>\n                        <classifier>tests</classifier>\n                        <type>test-jar</type>\n                    </dependency>\n                    <dependency>\n                        <groupId>org.apache.hadoop</groupId>\n                        <artifactId>hadoop-mapreduce-client-common</artifactId>\n                        <version>${hadoop2.version}</version>\n                    </dependency>\n                    <dependency>\n                        <groupId>org.apache.hadoop</groupId>\n                        <artifactId>hadoop-mapreduce-client-core</artifactId>\n                        <version>${hadoop2.version}</version>\n                    </dependency>\n                    <dependency>\n                        <groupId>org.apache.hadoop</groupId>\n                        <artifactId>hadoop-mapreduce-client-jobclient</artifactId>\n                        <version>${hadoop2.version}</version>\n                    </dependency>\n                    <dependency>\n                        <groupId>org.apache.hadoop</groupId>\n                        <artifactId>hadoop-mapreduce-client-jobclient</artifactId>\n                        <version>${hadoop2.version}</version>\n                        <classifier>tests</classifier>\n                        <type>test-jar</type>\n                    </dependency>\n                    <dependency>\n                        <groupId>org.apache.hadoop</groupId>\n                        <artifactId>hadoop-mapreduce-client-shuffle</artifactId>\n                        <version>${hadoop2.version}</version>\n                    </dependency>\n                    <dependency>\n                        <groupId>org.apache.hadoop</groupId>\n                        <artifactId>hadoop-yarn-api</artifactId>\n                        <version>${hadoop2.version}</version>\n                    </dependency>\n                    <dependency>\n                        <groupId>org.apache.hadoop</groupId>\n                        <artifactId>hadoop-yarn-common</artifactId>\n                        <version>${hadoop2.version}</version>\n                    </dependency>\n                    <dependency>\n                        <groupId>org.apache.hadoop</groupId>\n                        <artifactId>hadoop-yarn-server-common</artifactId>\n                        <version>${hadoop2.version}</version>\n                    </dependency>\n                </dependencies>\n            </dependencyManagement>\n        </profile>\n\t\n        <profile>\n            <id>coverage</id>\n            <build>\n                <plugins>\n                    <plugin>\n                        <artifactId>maven-surefire-plugin</artifactId>\n                        <executions>\n                            <execution>\n                                <id>default-test</id>\n                                <configuration>\n                                    <argLine>${default.test.jvm.opts} ${jacoco.opts}</argLine>\n                                </configuration>\n                            </execution>\n                        </executions>\n                    </plugin>\n                    <plugin>\n                        <artifactId>maven-resources-plugin</artifactId>\n                        <executions>\n                            <execution>\n                                <id>copy-sources-for-jacoco</id>\n                                <phase>process-resources</phase>\n                                <goals>\n                                    <goal>copy-resources</goal>\n                                </goals>\n                                <configuration>\n                                    <outputDirectory>${project.build.directory}/jacoco-sources</outputDirectory>\n                                    <resources>\n                                        <resource>\n                                            <directory>${project.basedir}/src/main/java/</directory>\n                                            <filtering>false</filtering>\n                                        </resource>\n                                    </resources>\n                                </configuration>\n                            </execution>\n                            <execution>\n                                <id>copy-classes-for-jacoco</id>\n                                <phase>process-classes</phase>\n                                <goals>\n                                    <goal>copy-resources</goal>\n                                </goals>\n                                <configuration>\n                                    <outputDirectory>${project.build.directory}/jacoco-classes</outputDirectory>\n                                    <resources>\n                                        <resource>\n                                            <directory>${project.build.directory}/classes/</directory>\n                                            <filtering>false</filtering>\n                                        </resource>\n                                    </resources>\n                                </configuration>\n                            </execution>\n                        </executions>\n                    </plugin>\n                    <plugin>\n                        <artifactId>maven-dependency-plugin</artifactId>\n                        <executions>\n                            <!-- Unpack all dependency class and source files for use by JaCoCo -->\n                            <execution>\n                                <id>unpack-dependency-sources</id>\n                                <phase>generate-resources</phase>\n                                <goals>\n                                    <goal>unpack-dependencies</goal>\n                                </goals>\n                                <configuration>\n                                    <classifier>sources</classifier>\n                                    <outputDirectory>${project.build.directory}/jacoco-sources</outputDirectory>\n                                    <includeGroupIds>${project.groupId}</includeGroupIds>\n                                    <excludeArtifactIds>titan-test</excludeArtifactIds>\n                                </configuration>\n                            </execution>\n                            <execution>\n                                <id>unpack-dependency-classes</id>\n                                <phase>generate-resources</phase>\n                                <goals>\n                                    <goal>unpack-dependencies</goal>\n                                </goals>\n                                <configuration>\n                                    <classifier />\n                                    <!-- empty classifier requests the artifact containing classes -->\n                                    <outputDirectory>${project.build.directory}/jacoco-classes</outputDirectory>\n                                    <includeGroupIds>${project.groupId}</includeGroupIds>\n                                    <excludeArtifactIds>titan-test</excludeArtifactIds>\n                                </configuration>\n                            </execution>\n                        </executions>\n                    </plugin>\n                    <plugin>\n                        <groupId>org.jacoco</groupId>\n                        <artifactId>jacoco-maven-plugin</artifactId>\n                        <executions>\n                            <execution>\n                                <id>prepare-jacoco-agent</id>\n                                <phase>test-compile</phase>\n                                <goals>\n                                    <goal>prepare-agent</goal>\n                                </goals>\n                                <configuration>\n                                    <destFile>../target/jacoco-combined.exec</destFile>\n                                    <append>true</append>\n                                    <propertyName>jacoco.opts</propertyName>\n                                </configuration>\n                            </execution>\n                        </executions>\n                    </plugin>\n                    <plugin>\n                        <!-- The Maven JaCoCo plugin doesn't allow\n                             configuration of sourcefiles and destfiles\n                             directories.  The Ant JaCoCo task does.  That's\n                             why we use antrun here for JaCoCo instead of\n                             JaCoCo's Maven plugin. -->\n                        <artifactId>maven-antrun-plugin</artifactId>\n                        <executions>\n                            <execution>\n                                <id>default-cli</id>\n                                <phase>post-integration-test</phase>\n                                <goals>\n                                    <goal>run</goal>\n                                </goals>\n                                <configuration>\n                                    <target>\n                                        <taskdef name=\"report\" classname=\"org.jacoco.ant.ReportTask\" classpathref=\"maven.plugin.classpath\" />\n                                        <report>\n                                            <executiondata>\n                                                <file file=\"../target/jacoco-combined.exec\" />\n                                            </executiondata>\n                                            <structure name=\"Integration test coverage\">\n                                                <classfiles>\n                                                    <fileset dir=\"${project.build.directory}/jacoco-classes\" />\n                                                    u\n                                                </classfiles>\n                                                <sourcefiles encoding=\"UTF-8\">\n                                                    <fileset dir=\"${project.build.directory}/jacoco-sources\" />\n                                                </sourcefiles>\n                                            </structure>\n                                            <html destdir=\"${project.build.directory}/jacoco-report\" />\n                                        </report>\n                                    </target>\n                                </configuration>\n                            </execution>\n                        </executions>\n                        <dependencies>\n                            <dependency>\n                                <groupId>org.jacoco</groupId>\n                                <artifactId>org.jacoco.ant</artifactId>\n                                <version>0.6.2.201302030002</version>\n                            </dependency>\n                        </dependencies>\n                    </plugin>\n                </plugins>\n            </build>\n        </profile>\n\n        <profile>\n            <id>memory-test</id>\n            <activation>\n                <property>\n                    <name>test.skip.mem</name>\n                    <value>false</value>\n                </property>\n            </activation>\n            <build>\n                <plugins>\n                    <plugin>\n                        <artifactId>maven-surefire-plugin</artifactId>\n                        <executions>\n                            <execution>\n                                <id>memory-test</id>\n                                <goals>\n                                    <goal>test</goal>\n                                </goals>\n                                <phase>test</phase>\n                                <configuration combine.self=\"override\">\n                                    <argLine>${mem.jvm.opts}</argLine>\n                                    <reuseForks>false</reuseForks>\n                                    <forkCount>1</forkCount>\n                                    <parallel>none</parallel>\n                                    <threadCount>1</threadCount>\n                                    <perCoreThreadCount>false</perCoreThreadCount>\n                                    <runOrder>alphabetical</runOrder>\n                                    <groups>com.thinkaurelius.titan.testcategory.MemoryTests</groups>\n                                    <excludedGroups />\n                                </configuration>\n                            </execution>\n                        </executions>\n                    </plugin>\n                </plugins>\n            </build>\n        </profile>\n\n        <profile>\n            <id>performance-test</id>\n            <activation>\n                <property>\n                    <name>test.skip.perf</name>\n                    <value>false</value>\n                </property>\n            </activation>\n            <build>\n                <plugins>\n                    <plugin>\n                        <artifactId>maven-surefire-plugin</artifactId>\n                        <executions>\n                            <execution>\n                                <id>performance-test</id>\n                                <goals>\n                                    <goal>test</goal>\n                                </goals>\n                                <phase>test</phase>\n                                <configuration combine.self=\"override\">\n                                    <argLine>${default.test.jvm.opts} ${perf.jvm.opts}</argLine>\n                                    <reuseForks>false</reuseForks>\n                                    <forkCount>1</forkCount>\n                                    <parallel>none</parallel>\n                                    <threadCount>1</threadCount>\n                                    <perCoreThreadCount>false</perCoreThreadCount>\n                                    <runOrder>alphabetical</runOrder>\n                                    <groups>com.thinkaurelius.titan.testcategory.PerformanceTests</groups>\n                                    <excludedGroups />\n                                </configuration>\n                            </execution>\n                        </executions>\n                    </plugin>\n                </plugins>\n            </build>\n        </profile>\n\n        <profile>\n            <id>target-jre6</id>\n            <activation>\n                <activeByDefault>false</activeByDefault>\n            </activation>\n            <build>\n                <plugins>\n                    <plugin>\n                        <groupId>org.codehaus.mojo</groupId>\n                        <artifactId>xml-maven-plugin</artifactId>\n                        <configuration>\n                            <forceCreation>true</forceCreation>\n                            <transformationSets>\n                                <transformationSet>\n                                    <dir>${basedir}</dir>\n                                    <includes>\n                                        <include>pom.xml</include>\n                                    </includes>\n                                    <stylesheet>${top.level.basedir}/jre6.xslt</stylesheet>\n                                </transformationSet>\n                            </transformationSets>\n                        </configuration>\n                        <dependencies>\n                            <dependency>\n                                <groupId>net.sourceforge.saxon</groupId>\n                                <artifactId>saxon</artifactId>\n                                <version>9.1.0.8</version>\n                            </dependency>\n                        </dependencies>\n                    </plugin>\n                    <plugin>\n                        <artifactId>maven-resources-plugin</artifactId>\n                        <configuration>\n                            <outputDirectory>${basedir}</outputDirectory>\n                            <resources>\n                                <resource>\n                                    <directory>${basedir}/target/generated-resources/xml/xslt/</directory>\n                                    <includes>\n                                        <include>pom.xml</include>\n                                    </includes>\n                                </resource>\n                            </resources>\n                        </configuration>\n                    </plugin>\n                </plugins>\n            </build>\n        </profile>\n\n        <profile>\n            <id>asciidoc</id>\n            <activation>\n                <activeByDefault>false</activeByDefault>\n                <property>\n                    <name>asciidoc</name>\n                </property>\n            </activation>\n\n            <properties>\n                <asciidoc.input.dir>${project.basedir}/docs</asciidoc.input.dir>\n                <xsl.input.dir>${asciidoc.input.dir}/xsl</xsl.input.dir>\n                <xsl.output.dir>${project.basedir}/target/docs/xsl</xsl.output.dir>\n                <docbook.output.dir>${project.basedir}/target/docs/docbook</docbook.output.dir>\n                <htmlsingle.output.dir>${project.basedir}/target/docs/htmlsingle</htmlsingle.output.dir>\n                <htmlchunk.output.dir>${project.basedir}/target/docs/htmlchunk</htmlchunk.output.dir>\n            </properties>\n\n            <build>\n                <plugins>\n                    <plugin>\n                        <groupId>org.asciidoctor</groupId>\n                        <artifactId>asciidoctor-maven-plugin</artifactId>\n                        <executions>\n                            <execution>\n                                <id>asciidoc-to-docbook</id>\n                                <phase>generate-resources</phase>\n                                <goals>\n                                    <goal>process-asciidoc</goal>\n                                </goals>\n                                <inherited>false</inherited>\n                                <configuration>\n                                    <sourceDirectory>${asciidoc.input.dir}</sourceDirectory>\n                                    <sourceDocumentName>index.txt</sourceDocumentName>\n                                    <outputDirectory>${docbook.output.dir}</outputDirectory>\n                                    <backend>docbook5</backend>\n                                    <doctype>book</doctype>\n                                    <attributes>\n                                        <imagesdir>images</imagesdir>\n                                        <encoding>UTF-8</encoding>\n                                        <toc>true</toc>\n                                    </attributes>\n                                </configuration>\n                            </execution>\n                        </executions>\n                    </plugin>\n                    <plugin>\n                        <groupId>org.codehaus.mojo</groupId>\n                        <artifactId>xml-maven-plugin</artifactId>\n                        <executions>\n                            <execution>\n                                <id>docbook-to-htmlsingle</id>\n                                <phase>process-resources</phase>\n                                <goals>\n                                    <goal>transform</goal>\n                                </goals>\n                                <inherited>false</inherited>\n                                <configuration>\n                                    <forceCreation>true</forceCreation>\n                                    <transformationSets>\n                                        <transformationSet>\n                                            <dir>${docbook.output.dir}</dir>\n                                            <outputDir>${htmlsingle.output.dir}</outputDir>\n                                            <includes>\n                                                <include>index.xml</include>\n                                            </includes>\n                                            <stylesheet>${xsl.output.dir}/titansingle.xsl</stylesheet>\n                                            <fileMappers>\n                                                <fileMapper implementation=\"org.codehaus.plexus.components.io.filemappers.FileExtensionMapper\">\n                                                    <targetExtension>.html</targetExtension>\n                                                </fileMapper>\n                                            </fileMappers>\n                                        </transformationSet>\n                                    </transformationSets>\n                                </configuration>\n                            </execution>\n                            <execution>\n                                <id>docbook-to-htmlchunk</id>\n                                <phase>process-resources</phase>\n                                <goals>\n                                    <goal>transform</goal>\n                                </goals>\n                                <inherited>false</inherited>\n                                <configuration>\n                                    <forceCreation>true</forceCreation>\n                                    <transformationSets>\n                                        <transformationSet>\n                                            <dir>${docbook.output.dir}</dir>\n                                            <includes>\n                                                <include>index.xml</include>\n                                            </includes>\n                                            <stylesheet>${xsl.output.dir}/titanchunk.xsl</stylesheet>\n                                            <fileMappers>\n                                                <fileMapper implementation=\"org.codehaus.plexus.components.io.filemappers.FileExtensionMapper\">\n                                                    <targetExtension>.html</targetExtension>\n                                                </fileMapper>\n                                            </fileMappers>\n                                        </transformationSet>\n                                    </transformationSets>\n                                </configuration>\n                            </execution>\n                        </executions>\n                        <dependencies>\n                            <dependency>\n                                <groupId>net.sf.xslthl</groupId>\n                                <artifactId>xslthl</artifactId>\n                                <version>2.1.0</version>\n                            </dependency>\n                            <dependency>\n                                <groupId>saxon</groupId>\n                                <artifactId>saxon</artifactId>\n                                <version>6.5.3</version>\n                            </dependency>\n                        </dependencies>\n                    </plugin>\n                    <plugin>\n                        <artifactId>maven-resources-plugin</artifactId>\n                        <executions>\n                            <execution>\n                                <id>filter-xsl-stylesheets</id>\n                                <phase>generate-sources</phase>\n                                <goals>\n                                    <goal>copy-resources</goal>\n                                </goals>\n                                <inherited>false</inherited>\n                                <configuration>\n                                    <outputDirectory>${xsl.output.dir}</outputDirectory>\n                                    <delimiters>\n                                        <delimiter>$MAVEN{*}</delimiter>\n                                    </delimiters>\n                                    <resources>\n                                        <resource>\n                                            <directory>${xsl.input.dir}</directory>\n                                            <filtering>true</filtering>\n                                        </resource>\n                                    </resources>\n                                </configuration>\n                            </execution>\n                            <execution>\n                                <id>copy-static-assets-to-htmlsingle</id>\n                                <phase>process-resources</phase>\n                                <goals>\n                                    <goal>copy-resources</goal>\n                                </goals>\n                                <inherited>false</inherited>\n                                <configuration>\n                                    <outputDirectory>${htmlsingle.output.dir}</outputDirectory>\n                                    <resources>\n                                        <resource>\n                                            <directory>${asciidoc.input.dir}/static</directory>\n                                            <filtering>false</filtering>\n                                        </resource>\n                                    </resources>\n                                </configuration>\n                            </execution>\n                            <execution>\n                                <id>copy-static-assets-to-htmlchunk</id>\n                                <phase>process-resources</phase>\n                                <goals>\n                                    <goal>copy-resources</goal>\n                                </goals>\n                                <inherited>false</inherited>\n                                <configuration>\n                                    <outputDirectory>${htmlchunk.output.dir}</outputDirectory>\n                                    <resources>\n                                        <resource>\n                                            <directory>${asciidoc.input.dir}/static</directory>\n                                            <filtering>false</filtering>\n                                        </resource>\n                                    </resources>\n                                </configuration>\n                            </execution>\n                        </executions>\n                    </plugin>\n                </plugins>\n            </build>\n        </profile>\n\n        <profile>\n            <id>disable-javadoclint</id>\n\n            <activation>\n                <jdk>1.8</jdk>\n            </activation>\n\n            <build>\n                <pluginManagement>\n                    <plugins>\n                        <plugin>\n                            <artifactId>maven-javadoc-plugin</artifactId>\n                            <configuration>\n                                <additionalparam>-Xdoclint:none</additionalparam>\n                            </configuration>\n                        </plugin>\n                    </plugins>\n                </pluginManagement>\n            </build>\n        </profile>\n\n\n        <!--\n        <profile>\n            <id>docbkx</id>\n            <activation>\n                <activeByDefault>false</activeByDefault>\n            </activation>\n            <build>\n                <plugins>\n                    <plugin>\n                        <groupId>com.agilejava.docbkx</groupId>\n                        <artifactId>docbkx-maven-plugin</artifactId>\n                        <version>2.0.15</version>\n                        <dependencies>\n                            <dependency>\n                                <groupId>net.sf.xslthl</groupId>\n                                <artifactId>xslthl</artifactId>\n                                <version>2.1.0</version>\n                                <scope>runtime</scope>\n                            </dependency>\n                            <dependency>\n                                <groupId>net.sf.offo</groupId>\n                                <artifactId>fop-hyph</artifactId>\n                                <version>1.2</version>\n                                <scope>runtime</scope>\n                            </dependency>\n                        </dependencies>\n                        <configuration>\n                            <highlightSource>1</highlightSource>\n                            <htmlCustomization>htcust.xsl</htmlCustomization>\n                            <hyphenate>false</hyphenate>\n                            <sourceDirectory>${project.basedir}/target/generated-docs/</sourceDirectory>\n                            <includes>index.xml</includes>\n                            <hyphenateVerbatim>false</hyphenateVerbatim>\n                        </configuration>\n                    </plugin>\n                </plugins>\n            </build>\n        </profile>\n        -->\n    </profiles>\n</project>\n"
        },
        {
          "name": "titan-all",
          "type": "tree",
          "content": null
        },
        {
          "name": "titan-berkeleyje",
          "type": "tree",
          "content": null
        },
        {
          "name": "titan-cassandra",
          "type": "tree",
          "content": null
        },
        {
          "name": "titan-core",
          "type": "tree",
          "content": null
        },
        {
          "name": "titan-dist",
          "type": "tree",
          "content": null
        },
        {
          "name": "titan-doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "titan-es",
          "type": "tree",
          "content": null
        },
        {
          "name": "titan-hadoop-parent",
          "type": "tree",
          "content": null
        },
        {
          "name": "titan-hbase-parent",
          "type": "tree",
          "content": null
        },
        {
          "name": "titan-lucene",
          "type": "tree",
          "content": null
        },
        {
          "name": "titan-rexster",
          "type": "tree",
          "content": null
        },
        {
          "name": "titan-solr",
          "type": "tree",
          "content": null
        },
        {
          "name": "titan-test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}