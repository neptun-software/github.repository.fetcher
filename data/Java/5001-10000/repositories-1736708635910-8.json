{
  "metadata": {
    "timestamp": 1736708635910,
    "page": 8,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "hackware1993/MagicIndicator",
      "stars": 9754,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 3.76953125,
          "content": "\n# Created by https://www.gitignore.io/api/java,macos,android,androidstudio\n# Edit at https://www.gitignore.io/?templates=java,macos,android,androidstudio\n\n### Android ###\n# Built application files\n*.apk\n*.ap_\n*.aab\n\n# Files for the ART/Dalvik VM\n*.dex\n\n# Java class files\n*.class\n\n# Generated files\nbin/\ngen/\nout/\n\n# Gradle files\n.gradle/\nbuild/\n\n# Local configuration file (sdk path, etc)\nlocal.properties\n\n# Proguard folder generated by Eclipse\nproguard/\n\n# Log Files\n*.log\n\n# Android Studio Navigation editor temp files\n.navigation/\n\n# Android Studio captures folder\ncaptures/\n\n# IntelliJ\n*.iml\n.idea/*\n.idea/workspace.xml\n.idea/tasks.xml\n.idea/gradle.xml\n.idea/assetWizardSettings.xml\n.idea/dictionaries\n.idea/libraries\n.idea/caches\n# Android Studio 3 in .gitignore file.\n.idea/caches/build_file_checksums.ser\n.idea/modules.xml\n\n# Keystore files\n# Uncomment the following lines if you do not want to check your keystore files in.\n#*.jks\n#*.keystore\n\n# External native build folder generated in Android Studio 2.2 and later\n.externalNativeBuild\n\n# Google Services (e.g. APIs or Firebase)\n# google-services.json\n\n# Freeline\nfreeline.py\nfreeline/\nfreeline_project_description.json\n\n# fastlane\nfastlane/report.xml\nfastlane/Preview.html\nfastlane/screenshots\nfastlane/test_output\nfastlane/readme.md\n\n# Version control\nvcs.xml\n\n# lint\nlint/intermediates/\nlint/generated/\nlint/outputs/\nlint/tmp/\n# lint/reports/\n\n### Android Patch ###\ngen-external-apklibs\noutput.json\n\n### AndroidStudio ###\n# Covers files to be ignored for android development using Android Studio.\n\n# Built application files\n\n# Files for the ART/Dalvik VM\n\n# Java class files\n\n# Generated files\n\n# Gradle files\n.gradle\n\n# Signing files\n.signing/\n\n# Local configuration file (sdk path, etc)\n\n# Proguard folder generated by Eclipse\n\n# Log Files\n\n# Android Studio\n/*/build/\n/*/local.properties\n/*/out\n/*/*/build\n/*/*/production\n*.ipr\n*~\n*.swp\n\n# Android Patch\n\n# External native build folder generated in Android Studio 2.2 and later\n\n# NDK\nobj/\n\n# IntelliJ IDEA\n*.iws\n/out/\n\n# User-specific configurations\n.idea/caches/\n.idea/libraries/\n.idea/shelf/\n.idea/.name\n.idea/compiler.xml\n.idea/copyright/profiles_settings.xml\n.idea/encodings.xml\n.idea/misc.xml\n.idea/scopes/scope_settings.xml\n.idea/vcs.xml\n.idea/jsLibraryMappings.xml\n.idea/datasources.xml\n.idea/dataSources.ids\n.idea/sqlDataSources.xml\n.idea/dynamic.xml\n.idea/uiDesigner.xml\n\n# OS-specific files\n.DS_Store\n.DS_Store?\n._*\n.Spotlight-V100\n.Trashes\nehthumbs.db\nThumbs.db\n\n# Legacy Eclipse project files\n.classpath\n.project\n.cproject\n.settings/\n\n# Mobile Tools for Java (J2ME)\n.mtj.tmp/\n\n# Package Files #\n*.war\n*.ear\n\n# virtual machine crash logs (Reference: http://www.java.com/en/download/help/error_hotspot.xml)\nhs_err_pid*\n\n## Plugin-specific files:\n\n# mpeltonen/sbt-idea plugin\n.idea_modules/\n\n# JIRA plugin\natlassian-ide-plugin.xml\n\n# Mongo Explorer plugin\n.idea/mongoSettings.xml\n\n# Crashlytics plugin (for Android Studio and IntelliJ)\ncom_crashlytics_export_strings.xml\ncrashlytics.properties\ncrashlytics-build.properties\nfabric.properties\n\n### AndroidStudio Patch ###\n\n!/gradle/wrapper/gradle-wrapper.jar\n\n### Java ###\n# Compiled class file\n\n# Log file\n\n# BlueJ files\n*.ctxt\n\n# Mobile Tools for Java (J2ME)\n\n# Package Files #\n*.jar\n*.nar\n*.zip\n*.tar.gz\n*.rar\n\n# virtual machine crash logs, see http://www.java.com/en/download/help/error_hotspot.xml\n\n### macOS ###\n# General\n.AppleDouble\n.LSOverride\n\n# Icon must end with two \\r\nIcon\n\n# Thumbnails\n\n# Files that might appear in the root of a volume\n.DocumentRevisions-V100\n.fseventsd\n.TemporaryItems\n.VolumeIcon.icns\n.com.apple.timemachine.donotpresent\n\n# Directories potentially created on remote AFP share\n.AppleDB\n.AppleDesktop\nNetwork Trash Folder\nTemporary Items\n.apdisk\n\n# End of https://www.gitignore.io/api/java,macos,android,androidstudio\n.idea\napp.iml\nmagicindicator.iml\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 7.66015625,
          "content": "# MagicIndicator\n\nA powerful, customizable and extensible ViewPager indicator framework. As the best alternative of ViewPagerIndicator, TabLayout and PagerSlidingTabStrip.\n\n[Flutter_ConstraintLayout](https://github.com/hackware1993/Flutter_ConstraintLayout) Another very good open source project of mine.\n\n**I have developed the world's fastest general purpose sorting algorithm, which is on average 3 times faster than Quicksort and up to 20 times faster**, [ChenSort](https://github.com/hackware1993/ChenSort)\n\n[![](https://jitpack.io/v/hackware1993/MagicIndicator.svg)](https://jitpack.io/#hackware1993/MagicIndicator)\n[![Android Arsenal](https://img.shields.io/badge/Android%20Arsenal-MagicIndicator-green.svg?style=true)](https://android-arsenal.com/details/1/4252)\n[![Codewake](https://www.codewake.com/badges/ask_question.svg)](https://www.codewake.com/p/magicindicator)\n\n![magicindicaotor.gif](https://github.com/hackware1993/MagicIndicator/blob/main/magicindicator.gif)\n\n# Usage\n\nSimple steps, you can integrate **MagicIndicator**:\n\n1. checkout out **MagicIndicator**, which contains source code and demo\n2. import module **magicindicator** and add dependency:\n\n  ```groovy\n  implementation project(':magicindicator')\n  ```\n  \n  **or**\n  \n  ```groovy\n  repositories {\n      ...\n      maven {\n          url \"https://jitpack.io\"\n      }\n  }\n  \n  dependencies {\n      ...\n      implementation 'com.github.hackware1993:MagicIndicator:1.6.0' // for support lib\n      implementation 'com.github.hackware1993:MagicIndicator:1.7.0' // for androidx\n  }\n  ```\n  \n3. add **MagicIndicator** to your layout xml:\n\n  ```xml\n  <?xml version=\"1.0\" encoding=\"utf-8\"?>\n  <LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n      xmlns:tools=\"http://schemas.android.com/tools\"\n      android:layout_width=\"match_parent\"\n      android:layout_height=\"match_parent\"\n      android:orientation=\"vertical\"\n      tools:context=\"net.lucode.hackware.magicindicatordemo.MainActivity\">\n  \n      <net.lucode.hackware.magicindicator.MagicIndicator\n          android:id=\"@+id/magic_indicator\"\n          android:layout_width=\"match_parent\"\n          android:layout_height=\"40dp\" />\n  \n      <android.support.v4.view.ViewPager\n          android:id=\"@+id/view_pager\"\n          android:layout_width=\"match_parent\"\n          android:layout_height=\"0dp\"\n          android:layout_weight=\"1\" />\n  \n  </LinearLayout>\n  ```\n\n4. find **MagicIndicator** through code, initialize it:\n\n  ```java\n  MagicIndicator magicIndicator = (MagicIndicator) findViewById(R.id.magic_indicator);\n  CommonNavigator commonNavigator = new CommonNavigator(this);\n  commonNavigator.setAdapter(new CommonNavigatorAdapter() {\n  \n      @Override\n      public int getCount() {\n          return mTitleDataList == null ? 0 : mTitleDataList.size();\n      }\n  \n      @Override\n      public IPagerTitleView getTitleView(Context context, final int index) {\n          ColorTransitionPagerTitleView colorTransitionPagerTitleView = new ColorTransitionPagerTitleView(context);\n          colorTransitionPagerTitleView.setNormalColor(Color.GRAY);\n          colorTransitionPagerTitleView.setSelectedColor(Color.BLACK);\n          colorTransitionPagerTitleView.setText(mTitleDataList.get(index));\n          colorTransitionPagerTitleView.setOnClickListener(new View.OnClickListener() {\n              @Override\n              public void onClick(View view) {\n                  mViewPager.setCurrentItem(index);\n              }\n          });\n          return colorTransitionPagerTitleView;\n      }\n  \n      @Override\n      public IPagerIndicator getIndicator(Context context) {\n          LinePagerIndicator indicator = new LinePagerIndicator(context);\n          indicator.setMode(LinePagerIndicator.MODE_WRAP_CONTENT);\n          return indicator;\n      }\n  });\n  magicIndicator.setNavigator(commonNavigator);\n  ```\n  \n5. work with ViewPager:\n\n  ```java\n  ViewPagerHelper.bind(magicIndicator, mViewPager);\n  ```\n\n  **or**\n  \n  work with Fragment Container(switch Fragment by hide()„ÄÅshow()):\n  ```java\n  mFramentContainerHelper = new FragmentContainerHelper(magicIndicator);\n  \n  // ...\n  \n  mFragmentContainerHelper.handlePageSelected(pageIndex);   // invoke when switch Fragment\n  ```\n  \n# Extend\n\n**MagicIndicator** can be easily extended:\n\n1. implement **IPagerTitleView** to customize tab:\n\n  ```java\n  public class MyPagerTitleView extends View implements IPagerTitleView {\n  \n      public MyPagerTitleView(Context context) {\n          super(context);\n      }\n  \n      @Override\n      public void onLeave(int index, int totalCount, float leavePercent, boolean leftToRight) {\n      }\n  \n      @Override\n      public void onEnter(int index, int totalCount, float enterPercent, boolean leftToRight) {\n      }\n  \n      @Override\n      public void onSelected(int index, int totalCount) {\n      }\n  \n      @Override\n      public void onDeselected(int index, int totalCount) {\n      }\n  }\n  ```\n\n2. implement **IPagerIndicator** to customize indicator:\n\n  ```java\n  public class MyPagerIndicator extends View implements IPagerIndicator {\n  \n      public MyPagerIndicator(Context context) {\n          super(context);\n      }\n  \n      @Override\n      public void onPageSelected(int position) {\n      }\n  \n      @Override\n      public void onPageScrolled(int position, float positionOffset, int positionOffsetPixels) {\n      }\n  \n      @Override\n      public void onPageScrollStateChanged(int state) {\n      }\n  \n      @Override\n      public void onPositionDataProvide(List<PositionData> dataList) {\n      }\n  }\n  ```\n\n3. use **CommonPagerTitleView** to load custom layout xml.\n\nNow, enjoy yourself!\n\nSee extensions in [*app/src/main/java/net/lucode/hackware/magicindicatordemo/ext*](https://github.com/hackware1993/MagicIndicator/tree/master/app/src/main/java/net/lucode/hackware/magicindicatordemo/ext)Ôºåmore extensions adding...\n\n# Who developed?\n\nhackware1993@gmail.com\n\ncfb1993@163.com\n\nQ&A <a target=\"_blank\" href=\"http://shang.qq.com/wpa/qunwpa?idkey=7ac5bef0321c7afa7e9fc4e94175fa36f413e3330c82e828b1743274af8a64d7\"><img border=\"0\" src=\"http://pub.idqqimg.com/wpa/images/group.png\" alt=\"MagicIndicator‰∫§ÊµÅÁæ§\" title=\"MagicIndicator‰∫§ÊµÅÁæ§\"></a>\n\nAn intermittent perfectionist.\n\nVisit [My Blog](http://hackware.lucode.net) for more articles about MagicIndicator.\n\nËÆ¢ÈòÖÊàëÁöÑÂæÆ‰ø°ÂÖ¨‰ºóÂè∑‰ª•ÂèäÊó∂Ëé∑Âèñ MagicIndicator ÁöÑÊúÄÊñ∞Âä®ÊÄÅ„ÄÇÂêéÁª≠‰πü‰ºöÂàÜ‰∫´‰∏Ä‰∫õÈ´òË¥®ÈáèÁöÑ„ÄÅÁã¨ÁâπÁöÑ„ÄÅÊúâÊÄùÊÉ≥ÁöÑ Flutter Âíå Android ÊäÄÊúØÊñáÁ´†„ÄÇ\n\n![official_account.webp](https://github.com/hackware1993/weiV/blob/master/official_account.webp?raw=true)\n\n# License\n\n  ```\n  MIT License\n  \n  Copyright (c) 2016 hackware1993\n  \n  Permission is hereby granted, free of charge, to any person obtaining a copy\n  of this software and associated documentation files (the \"Software\"), to deal\n  in the Software without restriction, including without limitation the rights\n  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  copies of the Software, and to permit persons to whom the Software is\n  furnished to do so, subject to the following conditions:\n  \n  The above copyright notice and this permission notice shall be included in all\n  copies or substantial portions of the Software.\n  \n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n  SOFTWARE.\n  ```\n\n# More\n\nHave seen here, give a star?ÔºàÈÉΩÁúãÂà∞ËøôÂÑø‰∫ÜÔºå‰Ωï‰∏çÁªô‰∏™...ÔºåÂìéÔºåÂà´Ëµ∞ÂïäÔºåstarËøòÊ≤°...Ôºâ\n"
        },
        {
          "name": "app",
          "type": "tree",
          "content": null
        },
        {
          "name": "build.gradle",
          "type": "blob",
          "size": 0.9365234375,
          "content": "// Top-level build file where you can add configuration options common to all sub-projects/modules.\r\n\r\nbuildscript {\r\n  repositories {\r\n    google()\r\n    maven {\r\n      url 'http://maven.aliyun.com/nexus/content/groups/public'\r\n    }\r\n    maven {\r\n      url 'http://maven.aliyun.com/nexus/content/repositories/jcenter'\r\n    }\r\n    jcenter()\r\n    mavenCentral()\r\n  }\r\n  dependencies {\r\n    classpath 'com.android.tools.build:gradle:3.6.4'\r\n\r\n    // NOTE: Do not place your application dependencies here; they belong\r\n    // in the individual module build.gradle files\r\n  }\r\n}\r\n\r\nallprojects {\r\n  repositories {\r\n    google()\r\n    maven {\r\n      url 'http://maven.aliyun.com/nexus/content/groups/public'\r\n    }\r\n    maven {\r\n      url 'http://maven.aliyun.com/nexus/content/repositories/jcenter'\r\n    }\r\n    jcenter()\r\n    mavenCentral()\r\n    maven {\r\n      url 'https://jitpack.io'\r\n    }\r\n  }\r\n}\r\n\r\ntask clean(type: Delete) {\r\n  delete rootProject.buildDir\r\n}"
        },
        {
          "name": "demo.apk",
          "type": "blob",
          "size": 1094.40234375,
          "content": null
        },
        {
          "name": "gradle.properties",
          "type": "blob",
          "size": 0.876953125,
          "content": "# Project-wide Gradle settings.\r\n\r\n# IDE (e.g. Android Studio) users:\r\n# Gradle settings configured through the IDE *will override*\r\n# any settings specified in this file.\r\n\r\n# For more details on how to configure your build environment visit\r\n# http://www.gradle.org/docs/current/userguide/build_environment.html\r\n\r\n# Specifies the JVM arguments used for the daemon process.\r\n# The setting is particularly useful for tweaking memory settings.\r\n# Default value: -Xmx10248m -XX:MaxPermSize=256m\r\n# org.gradle.jvmargs=-Xmx2048m -XX:MaxPermSize=512m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8\r\n\r\n# When configured, Gradle will run in incubating parallel mode.\r\n# This option should only be used with decoupled projects. More details, visit\r\n# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects\r\n# org.gradle.parallel=true\r\nandroid.useAndroidX=true"
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 4.8544921875,
          "content": "#!/usr/bin/env bash\n\n##############################################################################\n##\n##  Gradle start up script for UN*X\n##\n##############################################################################\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS=\"\"\n\nAPP_NAME=\"Gradle\"\nAPP_BASE_NAME=`basename \"$0\"`\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=\"maximum\"\n\nwarn ( ) {\n    echo \"$*\"\n}\n\ndie ( ) {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n}\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\ncase \"`uname`\" in\n  CYGWIN* )\n    cygwin=true\n    ;;\n  Darwin* )\n    darwin=true\n    ;;\n  MINGW* )\n    msys=true\n    ;;\nesac\n\n# Attempt to set APP_HOME\n# Resolve links: $0 may be a link\nPRG=\"$0\"\n# Need this for relative symlinks.\nwhile [ -h \"$PRG\" ] ; do\n    ls=`ls -ld \"$PRG\"`\n    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n    if expr \"$link\" : '/.*' > /dev/null; then\n        PRG=\"$link\"\n    else\n        PRG=`dirname \"$PRG\"`\"/$link\"\n    fi\ndone\nSAVED=\"`pwd`\"\ncd \"`dirname \\\"$PRG\\\"`/\" >/dev/null\nAPP_HOME=\"`pwd -P`\"\ncd \"$SAVED\" >/dev/null\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n    else\n        JAVACMD=\"$JAVA_HOME/bin/java\"\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=\"java\"\n    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\nfi\n\n# Increase the maximum file descriptors if we can.\nif [ \"$cygwin\" = \"false\" -a \"$darwin\" = \"false\" ] ; then\n    MAX_FD_LIMIT=`ulimit -H -n`\n    if [ $? -eq 0 ] ; then\n        if [ \"$MAX_FD\" = \"maximum\" -o \"$MAX_FD\" = \"max\" ] ; then\n            MAX_FD=\"$MAX_FD_LIMIT\"\n        fi\n        ulimit -n $MAX_FD\n        if [ $? -ne 0 ] ; then\n            warn \"Could not set maximum file descriptor limit: $MAX_FD\"\n        fi\n    else\n        warn \"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\"\n    fi\nfi\n\n# For Darwin, add options to specify how the application appears in the dock\nif $darwin; then\n    GRADLE_OPTS=\"$GRADLE_OPTS \\\"-Xdock:name=$APP_NAME\\\" \\\"-Xdock:icon=$APP_HOME/media/gradle.icns\\\"\"\nfi\n\n# For Cygwin, switch paths to Windows format before running java\nif $cygwin ; then\n    APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`\n    CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`\n    JAVACMD=`cygpath --unix \"$JAVACMD\"`\n\n    # We build the pattern for arguments to be converted via cygpath\n    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`\n    SEP=\"\"\n    for dir in $ROOTDIRSRAW ; do\n        ROOTDIRS=\"$ROOTDIRS$SEP$dir\"\n        SEP=\"|\"\n    done\n    OURCYGPATTERN=\"(^($ROOTDIRS))\"\n    # Add a user-defined pattern to the cygpath arguments\n    if [ \"$GRADLE_CYGPATTERN\" != \"\" ] ; then\n        OURCYGPATTERN=\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\"\n    fi\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    i=0\n    for arg in \"$@\" ; do\n        CHECK=`echo \"$arg\"|egrep -c \"$OURCYGPATTERN\" -`\n        CHECK2=`echo \"$arg\"|egrep -c \"^-\"`                                 ### Determine if an option\n\n        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition\n            eval `echo args$i`=`cygpath --path --ignore --mixed \"$arg\"`\n        else\n            eval `echo args$i`=\"\\\"$arg\\\"\"\n        fi\n        i=$((i+1))\n    done\n    case $i in\n        (0) set -- ;;\n        (1) set -- \"$args0\" ;;\n        (2) set -- \"$args0\" \"$args1\" ;;\n        (3) set -- \"$args0\" \"$args1\" \"$args2\" ;;\n        (4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;\n        (5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;\n        (6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;\n        (7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;\n        (8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;\n        (9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;\n    esac\nfi\n\n# Split up the JVM_OPTS And GRADLE_OPTS values into an array, following the shell quoting and substitution rules\nfunction splitJvmOpts() {\n    JVM_OPTS=(\"$@\")\n}\neval splitJvmOpts $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS\nJVM_OPTS[${#JVM_OPTS[*]}]=\"-Dorg.gradle.appname=$APP_BASE_NAME\"\n\nexec \"$JAVACMD\" \"${JVM_OPTS[@]}\" -classpath \"$CLASSPATH\" org.gradle.wrapper.GradleWrapperMain \"$@\"\n"
        },
        {
          "name": "gradlew.bat",
          "type": "blob",
          "size": 2.34765625,
          "content": "@if \"%DEBUG%\" == \"\" @echo off\r\n@rem ##########################################################################\r\n@rem\r\n@rem  Gradle startup script for Windows\r\n@rem\r\n@rem ##########################################################################\r\n\r\n@rem Set local scope for the variables with windows NT shell\r\nif \"%OS%\"==\"Windows_NT\" setlocal\r\n\r\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\r\nset DEFAULT_JVM_OPTS=\r\n\r\nset DIRNAME=%~dp0\r\nif \"%DIRNAME%\" == \"\" set DIRNAME=.\r\nset APP_BASE_NAME=%~n0\r\nset APP_HOME=%DIRNAME%\r\n\r\n@rem Find java.exe\r\nif defined JAVA_HOME goto findJavaFromJavaHome\r\n\r\nset JAVA_EXE=java.exe\r\n%JAVA_EXE% -version >NUL 2>&1\r\nif \"%ERRORLEVEL%\" == \"0\" goto init\r\n\r\necho.\r\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\r\necho.\r\necho Please set the JAVA_HOME variable in your environment to match the\r\necho location of your Java installation.\r\n\r\ngoto fail\r\n\r\n:findJavaFromJavaHome\r\nset JAVA_HOME=%JAVA_HOME:\"=%\r\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\r\n\r\nif exist \"%JAVA_EXE%\" goto init\r\n\r\necho.\r\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\r\necho.\r\necho Please set the JAVA_HOME variable in your environment to match the\r\necho location of your Java installation.\r\n\r\ngoto fail\r\n\r\n:init\r\n@rem Get command-line arguments, handling Windowz variants\r\n\r\nif not \"%OS%\" == \"Windows_NT\" goto win9xME_args\r\nif \"%@eval[2+2]\" == \"4\" goto 4NT_args\r\n\r\n:win9xME_args\r\n@rem Slurp the command line arguments.\r\nset CMD_LINE_ARGS=\r\nset _SKIP=2\r\n\r\n:win9xME_args_slurp\r\nif \"x%~1\" == \"x\" goto execute\r\n\r\nset CMD_LINE_ARGS=%*\r\ngoto execute\r\n\r\n:4NT_args\r\n@rem Get arguments from the 4NT Shell from JP Software\r\nset CMD_LINE_ARGS=%$\r\n\r\n:execute\r\n@rem Setup the command line\r\n\r\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\r\n\r\n@rem Execute Gradle\r\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%\r\n\r\n:end\r\n@rem End local scope for the variables with windows NT shell\r\nif \"%ERRORLEVEL%\"==\"0\" goto mainEnd\r\n\r\n:fail\r\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\r\nrem the _cmd.exe /c_ return code!\r\nif  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1\r\nexit /b 1\r\n\r\n:mainEnd\r\nif \"%OS%\"==\"Windows_NT\" endlocal\r\n\r\n:omega\r\n"
        },
        {
          "name": "local.properties",
          "type": "blob",
          "size": 0.3818359375,
          "content": "## This file must *NOT* be checked into Version Control Systems,\n# as it contains information specific to your local configuration.\n#\n# Location of the SDK. This is only used by Gradle.\n# For customization when using a Version Control System, please read the\n# header note.\n#Sun Jun 14 12:46:25 CST 2020\nndk.dir=/Users/SherlockHolmes/Library/Android/sdk/ndk-bundle\nsdk.dir=D\\:\\\\Android\\\\Sdk\n"
        },
        {
          "name": "magicindicator.gif",
          "type": "blob",
          "size": 4383.27734375,
          "content": null
        },
        {
          "name": "magicindicator",
          "type": "tree",
          "content": null
        },
        {
          "name": "magicindicatordemo.iml",
          "type": "blob",
          "size": 0.9267578125,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<module external.linked.project.id=\"magicindicatordemo\" external.linked.project.path=\"$MODULE_DIR$\" external.root.project.path=\"$MODULE_DIR$\" external.system.id=\"GRADLE\" external.system.module.group=\"\" external.system.module.version=\"unspecified\" type=\"JAVA_MODULE\" version=\"4\">\n  <component name=\"FacetManager\">\n    <facet type=\"java-gradle\" name=\"Java-Gradle\">\n      <configuration>\n        <option name=\"BUILD_FOLDER_PATH\" value=\"$MODULE_DIR$/build\" />\n        <option name=\"BUILDABLE\" value=\"false\" />\n      </configuration>\n    </facet>\n  </component>\n  <component name=\"NewModuleRootManager\" LANGUAGE_LEVEL=\"JDK_1_7\" inherit-compiler-output=\"true\">\n    <exclude-output />\n    <content url=\"file://$MODULE_DIR$\">\n      <excludeFolder url=\"file://$MODULE_DIR$/.gradle\" />\n    </content>\n    <orderEntry type=\"inheritedJdk\" />\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\n  </component>\n</module>"
        },
        {
          "name": "settings.gradle",
          "type": "blob",
          "size": 0.0341796875,
          "content": "include ':app', ':magicindicator'\r\n"
        }
      ]
    }
  ]
}