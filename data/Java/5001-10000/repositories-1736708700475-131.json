{
  "metadata": {
    "timestamp": 1736708700475,
    "page": 131,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "naman14/Timber",
      "stars": 7013,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.16796875,
          "content": ".gradle\n/local.properties\n.idea\n.DS_Store\n/build\n/captures\n/*.iml\n\n/app/app-release.apk\napp/app.iml\napp/manifest-merger-release-report.txt\n\nsecret.xml\ngoogle-services.json\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.2431640625,
          "content": "language: android\njdk: oraclejdk8\n\nbranches:\n  only:\n    - master\n\nscript: \"./gradlew clean assembleDebug\"\n\nandroid:\n  components:\n      - platform-tools\n      - tools\n      - build-tools-28.0.3\n      - android-28\n      - extra-android-m2repository\n"
        },
        {
          "name": "Changelog.md",
          "type": "blob",
          "size": 1.3525390625,
          "content": "#Changelog\n\nv0.21b-\n\n* Add Homescreen widget\n* View playlists in list, grid and default\n* Delete playlists, clear auto playlists and hide auto playlists\n* Remove songs from playlists, reorder playlists\n* Delete songs from device\n\nv0.14b-\n\n* Added Theme engine\n* Performance improvements\n* Many bugs fixed\n\nv0.13b-\n\n* Create playlists and add songs to playlists\n* Go to artist, album, add to queue, play next in song popup menu\n* Pause music playback when headphones removed\n* Fixed equalizer not working\n* Fixed track numbers being wrong\n* Bluetooth controls\n* Show song duration in Timber3 now playing style\n* Added Chinese,French,German and Italian translation\n* Bug fixes and improvements\n\nv0.122b-\n* Fix crash in search activity\n* Fix one time crash in marshmallow after allowing permission\n* Added albums view options(list,grid)\n\nv0.12b-\n* Fix crash in artist detail and search\n* Add intent for equalizer\n* Ability to sort songs, albums and artists according to year,duration,track,number of songs, a-z, z-a etc\n\n\nv0.11b-\n* Fix crash on asynctask onpostexecute\n* Fix crash on onTouchEvent in NavigationView\n* Updated more material launcher and notification icon\n* Reduced Apk size, enabled Proguard\n* Added option to choose default start page\n* Added option to remember the last page opened\n* Fixed blurred albumart not changing if albumart not available\n\nv0.1b\n* Initial Release\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.537109375,
          "content": "# Timber\n[![Build Status](https://travis-ci.org/naman14/Timber.svg?branch=master)](https://travis-ci.org/naman14/Timber)\n\nMaterial Design Music Player\n\nThis project is no longer in active development. Please refer to [TimberX](https://github.com/naman14/TimberX) instead\n\n<a href='https://play.google.com/store/apps/details?id=naman14.timber&pcampaignid=MKT-Other-global-all-co-prtnr-py-PartBadge-Mar2515-1'><img alt='Get it on Google Play' src='https://play.google.com/intl/en_us/badges/images/generic/en_badge_web_generic.png' height=90px/></a>\n\n<a href='https://f-droid.org/repository/browse/?fdid=naman14.timber'><img alt='Get it on F-Droid' src='https://guardianproject.info/wp-content/uploads/2014/07/logo-fdroid.png' height=60px/></a>\n\n## Screenshots\n\n<img src=\"https://raw.githubusercontent.com/naman14/Timber/master/graphics/screen2.png\" width=\"360\" height=\"640\">\n<img src=\"https://raw.githubusercontent.com/naman14/Timber/master/graphics/screen3.png\" width=\"360\" height=\"640\">\n<img src=\"https://raw.githubusercontent.com/naman14/Timber/master/graphics/screen7.png\" width=\"360\" height=\"640\">\n<img src=\"https://raw.githubusercontent.com/naman14/Timber/master/graphics/screen8.png\" width=\"360\" height=\"640\">\n<img src=\"https://raw.githubusercontent.com/naman14/Timber/master/graphics/screen9.jpg\" width=\"330\" height=\"640\">\n<img src=\"https://raw.githubusercontent.com/naman14/Timber/master/graphics/screen10.jpg\" width=\"330\" height=\"640\">\n<img src=\"https://raw.githubusercontent.com/naman14/Timber/master/graphics/screen1.png\" width=\"360\" height=\"640\">\n<img src=\"https://raw.githubusercontent.com/naman14/Timber/master/graphics/screen5.png\" width=\"360\" height=\"640\">\n<img src=\"https://raw.githubusercontent.com/naman14/Timber/master/graphics/screen12.jpg\" width=\"360\" height=\"640\">\n<img src=\"https://raw.githubusercontent.com/naman14/Timber/master/graphics/screen4.png\" width=\"360\" height=\"640\">\n<img src=\"https://raw.githubusercontent.com/naman14/Timber/master/graphics/screen6.png\" width=\"360\" height=\"640\">\n\n## Features\n- Material design\n- Browse Songs, Albums, Artists\n- Create and edit playlists\n- 6 different now playing styles\n- Homescreen widgets\n- Browse device folders\n- Dark theme and UI customisability\n- Gestures for track switching\n- LastFM scrobble\n- Android Wear and Android Auto support\n- Playing queue in notification (Xposed)\n- Lyrics support\n- Chromecast support\n\n## Changelog\n\nChangelog is available [here](https://github.com/naman14/Timber/blob/master/Changelog.md)\n\n## Credits\n\n* CyanogenMod's [Eleven Music Player](https://github.com/CyanogenMod/android_packages_apps_Eleven)\n* [TimelyTextView](https://github.com/adnan-SM/TimelyTextView)\n* [MultiViewPager](https://github.com/Pixplicity/MultiViewPager)\n* [PlayPauseButton](https://github.com/recruit-lifestyle/PlayPauseButton)\n* [CircularSeekBar](https://github.com/devadvance/circularseekbar)\n* [Nammu](https://github.com/tajchert/Nammu)\n\n# Donate\nPaypal donation email-\nnamandwivedi14@gmail.com\n\n\n## License\n\n>(c) 2015 Naman Dwivedi \n\n>This is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. \n\n>This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. \n\n>You should have received a copy of the GNU General Public License along with this app. If not, see <https://www.gnu.org/licenses/>.\n"
        },
        {
          "name": "app",
          "type": "tree",
          "content": null
        },
        {
          "name": "build.gradle",
          "type": "blob",
          "size": 0.8505859375,
          "content": "// Top-level build file where you can add configuration options common to all sub-projects/modules.\n\nbuildscript {\n    repositories {\n        jcenter()\n        google()\n    }\n    dependencies {\n        classpath 'com.android.tools.build:gradle:3.3.1'\n        classpath 'com.google.gms:google-services:4.2.0'\n        classpath 'com.google.firebase:firebase-crashlytics-gradle:2.3.0'\n        // NOTE: Do not place your application dependencies here; they belong\n        // in the individual module build.gradle files\n    }\n}\n\nallprojects {\n    repositories {\n        jcenter()\n        google()\n        maven { url \"https://jitpack.io\" }\n    }\n}\n\next {\n    // Sdk and tools\n    minSdkVersion = 16\n    targetSdkVersion = 28\n    compileSdkVersion = 28\n\n    // App dependencies\n    supportLibraryVersion = '27.0.2'\n    retrofitVersion = '2.3.0'\n    okHttp3Version = '3.9.0'\n}\n\n"
        },
        {
          "name": "gradle.properties",
          "type": "blob",
          "size": 0.88671875,
          "content": "# Project-wide Gradle settings.\n\n# IDE (e.g. Android Studio) users:\n# Gradle settings configured through the IDE *will override*\n# any settings specified in this file.\n\n# For more details on how to configure your build environment visit\n# http://www.gradle.org/docs/current/userguide/build_environment.html\n\n# Specifies the JVM arguments used for the daemon process.\n# The setting is particularly useful for tweaking memory settings.\n# Default value: -Xmx10248m -XX:MaxPermSize=256m\n# org.gradle.jvmargs=-Xmx2048m -XX:MaxPermSize=512m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8\n\n# When configured, Gradle will run in incubating parallel mode.\n# This option should only be used with decoupled projects. More details, visit\n# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects\n# org.gradle.parallel=true\nandroid.enableJetifier=true\nandroid.useAndroidX=true"
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 4.9609375,
          "content": "#!/usr/bin/env bash\n\n##############################################################################\n##\n##  Gradle start up script for UN*X\n##\n##############################################################################\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS=\"\"\n\nAPP_NAME=\"Gradle\"\nAPP_BASE_NAME=`basename \"$0\"`\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=\"maximum\"\n\nwarn ( ) {\n    echo \"$*\"\n}\n\ndie ( ) {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n}\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\ncase \"`uname`\" in\n  CYGWIN* )\n    cygwin=true\n    ;;\n  Darwin* )\n    darwin=true\n    ;;\n  MINGW* )\n    msys=true\n    ;;\nesac\n\n# For Cygwin, ensure paths are in UNIX format before anything is touched.\nif $cygwin ; then\n    [ -n \"$JAVA_HOME\" ] && JAVA_HOME=`cygpath --unix \"$JAVA_HOME\"`\nfi\n\n# Attempt to set APP_HOME\n# Resolve links: $0 may be a link\nPRG=\"$0\"\n# Need this for relative symlinks.\nwhile [ -h \"$PRG\" ] ; do\n    ls=`ls -ld \"$PRG\"`\n    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n    if expr \"$link\" : '/.*' > /dev/null; then\n        PRG=\"$link\"\n    else\n        PRG=`dirname \"$PRG\"`\"/$link\"\n    fi\ndone\nSAVED=\"`pwd`\"\ncd \"`dirname \\\"$PRG\\\"`/\" >&-\nAPP_HOME=\"`pwd -P`\"\ncd \"$SAVED\" >&-\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n    else\n        JAVACMD=\"$JAVA_HOME/bin/java\"\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=\"java\"\n    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\nfi\n\n# Increase the maximum file descriptors if we can.\nif [ \"$cygwin\" = \"false\" -a \"$darwin\" = \"false\" ] ; then\n    MAX_FD_LIMIT=`ulimit -H -n`\n    if [ $? -eq 0 ] ; then\n        if [ \"$MAX_FD\" = \"maximum\" -o \"$MAX_FD\" = \"max\" ] ; then\n            MAX_FD=\"$MAX_FD_LIMIT\"\n        fi\n        ulimit -n $MAX_FD\n        if [ $? -ne 0 ] ; then\n            warn \"Could not set maximum file descriptor limit: $MAX_FD\"\n        fi\n    else\n        warn \"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\"\n    fi\nfi\n\n# For Darwin, add options to specify how the application appears in the dock\nif $darwin; then\n    GRADLE_OPTS=\"$GRADLE_OPTS \\\"-Xdock:name=$APP_NAME\\\" \\\"-Xdock:icon=$APP_HOME/media/gradle.icns\\\"\"\nfi\n\n# For Cygwin, switch paths to Windows format before running java\nif $cygwin ; then\n    APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`\n    CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`\n\n    # We build the pattern for arguments to be converted via cygpath\n    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`\n    SEP=\"\"\n    for dir in $ROOTDIRSRAW ; do\n        ROOTDIRS=\"$ROOTDIRS$SEP$dir\"\n        SEP=\"|\"\n    done\n    OURCYGPATTERN=\"(^($ROOTDIRS))\"\n    # Add a user-defined pattern to the cygpath arguments\n    if [ \"$GRADLE_CYGPATTERN\" != \"\" ] ; then\n        OURCYGPATTERN=\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\"\n    fi\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    i=0\n    for arg in \"$@\" ; do\n        CHECK=`echo \"$arg\"|egrep -c \"$OURCYGPATTERN\" -`\n        CHECK2=`echo \"$arg\"|egrep -c \"^-\"`                                 ### Determine if an option\n\n        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition\n            eval `echo args$i`=`cygpath --path --ignore --mixed \"$arg\"`\n        else\n            eval `echo args$i`=\"\\\"$arg\\\"\"\n        fi\n        i=$((i+1))\n    done\n    case $i in\n        (0) set -- ;;\n        (1) set -- \"$args0\" ;;\n        (2) set -- \"$args0\" \"$args1\" ;;\n        (3) set -- \"$args0\" \"$args1\" \"$args2\" ;;\n        (4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;\n        (5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;\n        (6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;\n        (7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;\n        (8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;\n        (9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;\n    esac\nfi\n\n# Split up the JVM_OPTS And GRADLE_OPTS values into an array, following the shell quoting and substitution rules\nfunction splitJvmOpts() {\n    JVM_OPTS=(\"$@\")\n}\neval splitJvmOpts $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS\nJVM_OPTS[${#JVM_OPTS[*]}]=\"-Dorg.gradle.appname=$APP_BASE_NAME\"\n\nexec \"$JAVACMD\" \"${JVM_OPTS[@]}\" -classpath \"$CLASSPATH\" org.gradle.wrapper.GradleWrapperMain \"$@\"\n"
        },
        {
          "name": "gradlew.bat",
          "type": "blob",
          "size": 2.34765625,
          "content": "@if \"%DEBUG%\" == \"\" @echo off\r\n@rem ##########################################################################\r\n@rem\r\n@rem  Gradle startup script for Windows\r\n@rem\r\n@rem ##########################################################################\r\n\r\n@rem Set local scope for the variables with windows NT shell\r\nif \"%OS%\"==\"Windows_NT\" setlocal\r\n\r\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\r\nset DEFAULT_JVM_OPTS=\r\n\r\nset DIRNAME=%~dp0\r\nif \"%DIRNAME%\" == \"\" set DIRNAME=.\r\nset APP_BASE_NAME=%~n0\r\nset APP_HOME=%DIRNAME%\r\n\r\n@rem Find java.exe\r\nif defined JAVA_HOME goto findJavaFromJavaHome\r\n\r\nset JAVA_EXE=java.exe\r\n%JAVA_EXE% -version >NUL 2>&1\r\nif \"%ERRORLEVEL%\" == \"0\" goto init\r\n\r\necho.\r\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\r\necho.\r\necho Please set the JAVA_HOME variable in your environment to match the\r\necho location of your Java installation.\r\n\r\ngoto fail\r\n\r\n:findJavaFromJavaHome\r\nset JAVA_HOME=%JAVA_HOME:\"=%\r\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\r\n\r\nif exist \"%JAVA_EXE%\" goto init\r\n\r\necho.\r\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\r\necho.\r\necho Please set the JAVA_HOME variable in your environment to match the\r\necho location of your Java installation.\r\n\r\ngoto fail\r\n\r\n:init\r\n@rem Get command-line arguments, handling Windowz variants\r\n\r\nif not \"%OS%\" == \"Windows_NT\" goto win9xME_args\r\nif \"%@eval[2+2]\" == \"4\" goto 4NT_args\r\n\r\n:win9xME_args\r\n@rem Slurp the command line arguments.\r\nset CMD_LINE_ARGS=\r\nset _SKIP=2\r\n\r\n:win9xME_args_slurp\r\nif \"x%~1\" == \"x\" goto execute\r\n\r\nset CMD_LINE_ARGS=%*\r\ngoto execute\r\n\r\n:4NT_args\r\n@rem Get arguments from the 4NT Shell from JP Software\r\nset CMD_LINE_ARGS=%$\r\n\r\n:execute\r\n@rem Setup the command line\r\n\r\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\r\n\r\n@rem Execute Gradle\r\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%\r\n\r\n:end\r\n@rem End local scope for the variables with windows NT shell\r\nif \"%ERRORLEVEL%\"==\"0\" goto mainEnd\r\n\r\n:fail\r\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\r\nrem the _cmd.exe /c_ return code!\r\nif  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1\r\nexit /b 1\r\n\r\n:mainEnd\r\nif \"%OS%\"==\"Windows_NT\" endlocal\r\n\r\n:omega\r\n"
        },
        {
          "name": "graphics",
          "type": "tree",
          "content": null
        },
        {
          "name": "mock.gradle",
          "type": "blob",
          "size": 0.6318359375,
          "content": "// This script must be applied in app/build.gradle for the paths here to work correctly\n\ndef copyMockFilesNeeded() {\n    def srcGoogleServicesFile = file(\"../mock/mock-google-services.json\")\n    def srcCastSecretFile = file(\"../mock/mock-secret.xml\")\n\n    def destGoogleServicesFile = file(\"google-services.json\")\n    def destCastSecretFile = file(\"src/main/res/values/secret.xml\")\n\n    if (!destGoogleServicesFile.exists()) {\n        destGoogleServicesFile.write(srcGoogleServicesFile.text)\n    }\n    if (!destCastSecretFile.exists()) {\n        destCastSecretFile.write(srcCastSecretFile.text)\n    }\n}\n\nafterEvaluate {\n    copyMockFilesNeeded()\n}"
        },
        {
          "name": "mock",
          "type": "tree",
          "content": null
        },
        {
          "name": "settings.gradle",
          "type": "blob",
          "size": 0.0146484375,
          "content": "include ':app'\n"
        }
      ]
    }
  ]
}