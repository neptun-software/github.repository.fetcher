{
  "metadata": {
    "timestamp": 1736708669643,
    "page": 68,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjcw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "DImuthuUpe/AndroidPdfViewer",
      "stars": 8211,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.267578125,
          "content": "target/\nbuild/\nlint.xml\nbin/\ngen/\n.settings\n.project\n.classpath\nout\ngen-external-apklibs/\nclasses/\n\n# Local configuration file (sdk path, etc)\nlocal.properties\n\n# Android Studio\n.idea/\n*/out\n!*/build/apk/\n*/production/\n*.iws\n*.ipr\n*.iml\n*~\n*.swp\n\n# gradle\n.gradle\n\n.DS_Store"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 8.3896484375,
          "content": "## 3.2.0-beta.1 (2019-08-18)\n* Merge PR #714 with optimized page load\n* Merge PR #776 with fix for max & min zoom level\n* Merge PR #722 with fix for showing right position when view size changed\n* Merge PR #703 with fix for too many threads\n* Merge PR #702 with fix for memory leak\n* Merge PR #689 with possibility to disable long click\n* Merge PR #628 with fix for hiding scroll handle\n* Merge PR #627 with `fitEachPage` option\n* Merge PR #638 and #406 with fixed NPE\n* Merge PR #780 with README fix\n* Update compile SDK and support library to 28\n* Update Gradle and Gradle Plugin\n\n## 3.1.0-beta.1 (2018-06-29)\n* Merge pull request #557 for snapping pages (scrolling page by page)\n* merge pull request #618 for night mode\n* Merge pull request #566 for `OnLongTapListener`\n* Update PdfiumAndroid to 1.9.0, which uses `c++_shared` instead of `gnustl_static`\n* Update Gradle Plugin\n* Update compile SDK and support library to 26\n* Change minimum SDK to 14\n\n## 3.0.0-beta.5 (2018-01-06)\n* Fix issue with `Configurator#pages()` from #486\n* Fix `IllegalStateException` from #464\n* Fix not detecting links reported in #447\n\n## 3.0.0-beta.4 (2017-12-15)\n* Fix not loaded pages when using animated `PDFView#jumpTo()`\n* Fix NPE in `canScrollVertically()` and `canScrollHorizontally()`\n\n## 3.0.0-beta.3 (2017-11-18)\n* Fix bug preventing `OnErrorListener` from being called\n\n## 3.0.0-beta.2 (2017-11-15)\n* Fix rendering with maximum zoom\n* Improve fit policies\n* Update PdfiumAndroid to 1.8.1\n\n## 3.0.0-beta.1 (2017-11-12)\n* Add support for documents with different page sizes\n* Add support for links\n* Add support for defining page fit policy (fit width, height or both)\n* Update sample.pdf to contain different page sizes\n\n## 2.8.1 (2017-11-11)\n* Fix bug with rendering `PDFView` in Android Studio Layout Editor\n\n## 2.8.0 (2017-10-31)\n* Add handling of invalid pages, inspired by pull request #433. Exception on page opening crashed application until now,\ncurrently `OnPageErrorListener` set with `.onPageError()` is called. Invalid page color can be set using `.invalidPageColor()`\n* Implement `canScrollVertically()` and `canScrollHorizontally()` methods to work e.g. with `SwipeRefreshLayout`\n* Fix bug when `Configurator#load()` method was called before view has been measured, which resulted in empty canvas\n\n## 2.7.0 (2017-08-30)\n* Merge pull request by [owurman](https://github.com/owurman) with added OnTapListener\n* Merge bugfix by [lzwandnju](https://github.com/lzwandnju) to prevent `ArithmeticException: divide by zero`\n\n## 2.7.0-beta.1 (2017-07-05)\n* Updates PdfiumAndroid to 1.7.0 which reduces memory usage about twice and improves performance by using RGB 565 format (when not using `pdfView.useBestQuality(true)`)\n\n## 2.7.0-beta (2017-06-16)\n* Update PdfiumAndroid to 1.6.1, which fixed font rendering (issue #253)\n* Add `.spacing(int)` method to add spacing (in dp) between document pages\n* Fix drawing with `.onDraw(onDrawListener)`\n* Add `.onDrawAll(onDrawListener)` method to draw on all pages\n* Add small rendering improvements\n* Fix rendering when duplicated pages are passed to `.pages(..)`\n\n## 2.6.1 (2017-06-08)\n* Fix disappearing scroll handle\n\n## 2.6.0 (2017-06-04)\n* Fix fling on single-page documents\n* Greatly improve overall fling experience\n\n## 2.5.1 (2017-04-08)\n* Temporarily downgrade PdfiumAndroid until #253 will be fixed\n\n## 2.5.0 (2017-03-23)\n* Update PdfiumAndroid to 1.6.0, which is based on newest Pdfium from Android 7.1.1. It should fix many rendering and fonts problems\n* Add method `pdfView.fitToWidth()`, which called in `OnRenderListener.onInitiallyRendered()` will fit document to width of the screen (inspired by [1stmetro](https://github.com/1stmetro))\n* Add change from pull request by [isanwenyu](https://github.com/isanwenyu) to get rid of rare IllegalArgumentException while rendering\n* Add `OnRenderListener`, that will be called once, right before document is drawn on the screen\n* Add `Configurator.enableAntialiasing()` to improve rendering on low-res screen a little bit (as suggested by [majkimester](majkimester))\n* Modify engine to not block UI when big documents are loaded\n* Change `Constants` interface and inner interfaces to static public classes, to allow modifying core config values\n\n## 2.4.0 (2016-12-30)\n* Merge pull request by [hansinator85](https://github.com/hansinator85) which allows to enable/disable rendering during scale\n* Make rendering during scale disabled by default (looks better)\n* Merge pull request by [cesquivias](https://github.com/cesquivias) which replaces RenderingAsyncTask with Handler to simply code and work with testing frameworks\n\n## 2.3.0 (2016-11-19)\n* Add mechanism for providing documents from different sources - more info in README\n* Update PdfiumAndroid to 1.5.0\n* Thanks to document sources and PdfiumAndroid update, in-memory documents are supported\n* Fix not working OnClickListener on PDFView\n* **com.github.barteksc.exception.FileNotFoundException** is deprecated and all usages was removed.\nAll exceptions are delivered to old Configurator#onError() listener.\n\n## 2.2.0 (2016-11-15)\n* Merge pull request by [skarempudi](https://github.com/skarempudi) which fixes SDK 23 permission problems in sample app\n* Merge pull request by skarempudi for showing info on phones without file manager\n* Add feature from 1.x - canvas is set to drawable from View#getBackground()\n\n## 2.1.0 (2016-09-16)\n* fixed loading document from subfolder in assets directory\n* fixed scroll handle NPE after document loading error (improvement of 2.0.3 fix)\n* fixed incorrect scroll handle position with additional views in RelativeLayout\n* improved cache usage and fixed bug with rendering when zooming\n* if you are using custom scroll handle: scroll handle implementation changed a little bit, check DefaultScrollHandle source for details\n\n## 2.0.3 (2016-08-30)\n* Fix scroll handle NPE after document loading error\n\n## 2.0.2 (2016-08-27)\n* Fix exceptions caused by improperly finishing rendering task\n\n## 2.0.1 (2016-08-16)\n* Fix NPE when onDetachFromWindow is called\n\n## 2.0.0 (2016-08-14)\n* few API changes\n* improved rendering speed and accuracy\n* added continuous scroll - now it behaves like Adobe Reader and others\n* added `fling` scroll gesture for velocity based scrolling\n* added scroll handle as a replacement for scrollbar\n\n### Changes in 2.0 API\n* `Configurator#defaultPage(int)` and `PDFView#jumpTo(int)` now require page index (i.e. starting from 0)\n* `OnPageChangeListener#onPageChanged(int, int)` is called with page index (i.e. starting from 0)\n* removed scrollbar\n* added scroll handle as a replacement for scrollbar, use with `Configurator#scrollHandle()`\n* added `OnPageScrollListener` listener due to continuous scroll, register with `Configurator#onPageScroll()`\n* default scroll direction is vertical, so `Configurator#swipeVertical()` was changed to `Configurator#swipeHorizontal()`\n* removed minimap and mask configuration\n\n## 1.4.0 (2016-07-25)\n* Fix NPE and IndexOutOfBound bugs when rendering parts\n* Merge pull request by [paulo-sato-daitan](https://github.com/paulo-sato-daitan) for disabling page change animation\n* Merge pull request by [Miha-x64](https://github.com/Miha-x64) for drawing background if set on `PDFView`\n\n## 1.3.0 (2016-07-13)\n* update PdfiumAndroid to 1.4.0 with support for rendering annotations\n* merge pull request by [usef](https://github.com/usef) for rendering annotations\n\n## 1.2.0 (2016-07-11)\n* update PdfiumAndroid to 1.3.1 with support for bookmarks, Table Of Contents and documents with password:\n  * added method `PDFView#getDocumentMeta()`, which returns document metadata\n  * added method `PDFView#getTableOfContents()`, which returns whole tree of bookmarks in PDF document\n  * added method `Configurator#password(String)`\n* added horizontal mode to **ScrollBar** - use `ScrollBar#setHorizontal(true)` or `app:sb_horizontal=\"true\"` in XML\n* block interaction with `PDFView` when document is not loaded - prevent some exceptions\n* fix `PDFView` exceptions in layout preview (edit mode)\n\n## 1.1.2 (2016-06-27)\n* update PdfiumAndroid to 1.1.0, which fixes displaying multiple `PDFView`s at the same time and few errors with loading PDF documents.\n\n## 1.1.1 (2016-06-17)\n* fixes bug with strange behavior when indices passed to `.pages()` don't start with `0`.\n\n## 1.1.0 (2016-06-16)\n* added method `pdfView.fromUri(Uri)` for opening files from content providers\n* updated PdfiumAndroid to 1.0.3, which should fix bug with exception\n* updated sample with demonstration of `fromUri()` method\n* some minor fixes\n\n## 1.0.0 (2016-06-06)\n* Initial release\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0908203125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright {yyyy} {name of copyright owner}\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 10.5205078125,
          "content": "\n# Change of ownership and looking for contributors!\n\nThe ownership of the project was recently changed and we are actively looking for contributors to bring the project back to track. Please [visit](https://github.com/DImuthuUpe/AndroidPdfViewer/issues/1186)\n\n# Android PdfViewer\n\n__AndroidPdfViewer 1.x is available on [AndroidPdfViewerV1](https://github.com/barteksc/AndroidPdfViewerV1)\nrepo, where can be developed independently. Version 1.x uses different engine for drawing document on canvas,\nso if you don't like 2.x version, try 1.x.__\n\nLibrary for displaying PDF documents on Android, with `animations`, `gestures`, `zoom` and `double tap` support.\nIt is based on [PdfiumAndroid](https://github.com/barteksc/PdfiumAndroid) for decoding PDF files. Works on API 11 (Android 3.0) and higher.\nLicensed under Apache License 2.0.\n\n## What's new in 3.2.0-beta.1?\n* Merge PR #714 with optimized page load\n* Merge PR #776 with fix for max & min zoom level\n* Merge PR #722 with fix for showing right position when view size changed\n* Merge PR #703 with fix for too many threads\n* Merge PR #702 with fix for memory leak\n* Merge PR #689 with possibility to disable long click\n* Merge PR #628 with fix for hiding scroll handle\n* Merge PR #627 with `fitEachPage` option\n* Merge PR #638 and #406 with fixed NPE\n* Merge PR #780 with README fix\n* Update compile SDK and support library to 28\n* Update Gradle and Gradle Plugin\n\n## Changes in 3.0 API\n* Replaced `Contants.PRELOAD_COUNT` with `PRELOAD_OFFSET`\n* Removed `PDFView#fitToWidth()` (variant without arguments)\n* Removed `Configurator#invalidPageColor(int)` method as invalid pages are not rendered\n* Removed page size parameters from `OnRenderListener#onInitiallyRendered(int)` method, as document may have different page sizes\n* Removed `PDFView#setSwipeVertical()` method\n\n## Installation\n\nAdd to _build.gradle_:\n\n`implementation 'com.github.barteksc:android-pdf-viewer:3.2.0-beta.1'`\n\nor if you want to use more stable version:\n \n`implementation 'com.github.barteksc:android-pdf-viewer:2.8.2'`\n\nLibrary is available in jcenter repository, probably it'll be in Maven Central soon.\n\n## ProGuard\nIf you are using ProGuard, add following rule to proguard config file:\n\n```proguard\n-keep class com.shockwave.**\n```\n\n## Include PDFView in your layout\n\n``` xml\n<com.github.barteksc.pdfviewer.PDFView\n        android:id=\"@+id/pdfView\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"/>\n```\n\n## Load a PDF file\n\nAll available options with default values:\n``` java\npdfView.fromUri(Uri)\nor\npdfView.fromFile(File)\nor\npdfView.fromBytes(byte[])\nor\npdfView.fromStream(InputStream) // stream is written to bytearray - native code cannot use Java Streams\nor\npdfView.fromSource(DocumentSource)\nor\npdfView.fromAsset(String)\n    .pages(0, 2, 1, 3, 3, 3) // all pages are displayed by default\n    .enableSwipe(true) // allows to block changing pages using swipe\n    .swipeHorizontal(false)\n    .enableDoubletap(true)\n    .defaultPage(0)\n    // allows to draw something on the current page, usually visible in the middle of the screen\n    .onDraw(onDrawListener)\n    // allows to draw something on all pages, separately for every page. Called only for visible pages\n    .onDrawAll(onDrawListener)\n    .onLoad(onLoadCompleteListener) // called after document is loaded and starts to be rendered\n    .onPageChange(onPageChangeListener)\n    .onPageScroll(onPageScrollListener)\n    .onError(onErrorListener)\n    .onPageError(onPageErrorListener)\n    .onRender(onRenderListener) // called after document is rendered for the first time\n    // called on single tap, return true if handled, false to toggle scroll handle visibility\n    .onTap(onTapListener)\n    .onLongPress(onLongPressListener)\n    .enableAnnotationRendering(false) // render annotations (such as comments, colors or forms)\n    .password(null)\n    .scrollHandle(null)\n    .enableAntialiasing(true) // improve rendering a little bit on low-res screens\n    // spacing between pages in dp. To define spacing color, set view background\n    .spacing(0)\n    .autoSpacing(false) // add dynamic spacing to fit each page on its own on the screen\n    .linkHandler(DefaultLinkHandler)\n    .pageFitPolicy(FitPolicy.WIDTH) // mode to fit pages in the view\n    .fitEachPage(false) // fit each page to the view, else smaller pages are scaled relative to largest page.\n    .pageSnap(false) // snap pages to screen boundaries\n    .pageFling(false) // make a fling change only a single page like ViewPager\n    .nightMode(false) // toggle night mode\n    .load();\n```\n\n* `pages` is optional, it allows you to filter and order the pages of the PDF as you need\n\n## Scroll handle\n\nScroll handle is replacement for **ScrollBar** from 1.x branch.\n\nFrom version 2.1.0 putting **PDFView** in **RelativeLayout** to use **ScrollHandle** is not required, you can use any layout.\n\nTo use scroll handle just register it using method `Configurator#scrollHandle()`.\nThis method accepts implementations of **ScrollHandle** interface.\n\nThere is default implementation shipped with AndroidPdfViewer, and you can use it with\n`.scrollHandle(new DefaultScrollHandle(this))`.\n**DefaultScrollHandle** is placed on the right (when scrolling vertically) or on the bottom (when scrolling horizontally).\nBy using constructor with second argument (`new DefaultScrollHandle(this, true)`), handle can be placed left or top.\n\nYou can also create custom scroll handles, just implement **ScrollHandle** interface.\nAll methods are documented as Javadoc comments on interface [source](https://github.com/barteksc/AndroidPdfViewer/tree/master/android-pdf-viewer/src/main/java/com/github/barteksc/pdfviewer/scroll/ScrollHandle.java).\n\n## Document sources\nVersion 2.3.0 introduced _document sources_, which are just providers for PDF documents.\nEvery provider implements **DocumentSource** interface.\nPredefined providers are available in **com.github.barteksc.pdfviewer.source** package and can be used as\nsamples for creating custom ones.\n\nPredefined providers can be used with shorthand methods:\n```\npdfView.fromUri(Uri)\npdfView.fromFile(File)\npdfView.fromBytes(byte[])\npdfView.fromStream(InputStream)\npdfView.fromAsset(String)\n```\nCustom providers may be used with `pdfView.fromSource(DocumentSource)` method.\n\n## Links\nVersion 3.0.0 introduced support for links in PDF documents. By default, **DefaultLinkHandler**\nis used and clicking on link that references page in same document causes jump to destination page\nand clicking on link that targets some URI causes opening it in default application.\n\nYou can also create custom link handlers, just implement **LinkHandler** interface and set it using\n`Configurator#linkHandler(LinkHandler)` method. Take a look at [DefaultLinkHandler](https://github.com/barteksc/AndroidPdfViewer/tree/master/android-pdf-viewer/src/main/java/com/github/barteksc/pdfviewer/link/DefaultLinkHandler.java)\nsource to implement custom behavior.\n\n## Pages fit policy\nSince version 3.0.0, library supports fitting pages into the screen in 3 modes:\n* WIDTH - width of widest page is equal to screen width\n* HEIGHT - height of highest page is equal to screen height\n* BOTH - based on widest and highest pages, every page is scaled to be fully visible on screen\n\nApart from selected policy, every page is scaled to have size relative to other pages.\n\nFit policy can be set using `Configurator#pageFitPolicy(FitPolicy)`. Default policy is **WIDTH**.\n\n## Additional options\n\n### Bitmap quality\nBy default, generated bitmaps are _compressed_ with `RGB_565` format to reduce memory consumption.\nRendering with `ARGB_8888` can be forced by using `pdfView.useBestQuality(true)` method.\n\n### Double tap zooming\nThere are three zoom levels: min (default 1), mid (default 1.75) and max (default 3). On first double tap,\nview is zoomed to mid level, on second to max level, and on third returns to min level.\nIf you are between mid and max levels, double tapping causes zooming to max and so on.\n\nZoom levels can be changed using following methods:\n\n``` java\nvoid setMinZoom(float zoom);\nvoid setMidZoom(float zoom);\nvoid setMaxZoom(float zoom);\n```\n\n## Possible questions\n### Why resulting apk is so big?\nAndroid PdfViewer depends on PdfiumAndroid, which is set of native libraries (almost 16 MB) for many architectures.\nApk must contain all this libraries to run on every device available on market.\nFortunately, Google Play allows us to upload multiple apks, e.g. one per every architecture.\nThere is good article on automatically splitting your application into multiple apks,\navailable [here](http://ph0b.com/android-studio-gradle-and-ndk-integration/).\nMost important section is _Improving multiple APKs creation and versionCode handling with APK Splits_, but whole article is worth reading.\nYou only need to do this in your application, no need for forking PdfiumAndroid or so.\n\n### Why I cannot open PDF from URL?\nDownloading files is long running process which must be aware of Activity lifecycle, must support some configuration, \ndata cleanup and caching, so creating such module will probably end up as new library.\n\n### How can I show last opened page after configuration change?\nYou have to store current page number and then set it with `pdfView.defaultPage(page)`, refer to sample app\n\n### How can I fit document to screen width (eg. on orientation change)?\nUse `FitPolicy.WIDTH` policy or add following snippet when you want to fit desired page in document with different page sizes:\n``` java\nConfigurator.onRender(new OnRenderListener() {\n    @Override\n    public void onInitiallyRendered(int pages, float pageWidth, float pageHeight) {\n        pdfView.fitToWidth(pageIndex);\n    }\n});\n```\n\n### How can I scroll through single pages like a ViewPager?\nYou can use a combination of the following settings to get scroll and fling behaviour similar to a ViewPager:\n``` java\n    .swipeHorizontal(true)\n    .pageSnap(true)\n    .autoSpacing(true)\n    .pageFling(true)\n```\n\n## One more thing\nIf you have any suggestions on making this lib better, write me, create issue or write some code and send pull request.\n\n## License\n\nCreated with the help of android-pdfview by [Joan Zapata](http://joanzapata.com/)\n```\nCopyright 2017 Bartosz Schiller\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```\n"
        },
        {
          "name": "android-pdf-viewer",
          "type": "tree",
          "content": null
        },
        {
          "name": "build.gradle",
          "type": "blob",
          "size": 0.373046875,
          "content": "\nbuildscript {\n    repositories {\n        google()\n        jcenter()\n    }\n    dependencies {\n        classpath 'com.android.tools.build:gradle:3.4.2'\n        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.4'\n        classpath 'com.github.dcendents:android-maven-gradle-plugin:2.1'\n    }\n}\n\nallprojects {\n    repositories {\n        google()\n        jcenter()\n    }\n}\n"
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 4.9609375,
          "content": "#!/usr/bin/env bash\n\n##############################################################################\n##\n##  Gradle start up script for UN*X\n##\n##############################################################################\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS=\"\"\n\nAPP_NAME=\"Gradle\"\nAPP_BASE_NAME=`basename \"$0\"`\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=\"maximum\"\n\nwarn ( ) {\n    echo \"$*\"\n}\n\ndie ( ) {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n}\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\ncase \"`uname`\" in\n  CYGWIN* )\n    cygwin=true\n    ;;\n  Darwin* )\n    darwin=true\n    ;;\n  MINGW* )\n    msys=true\n    ;;\nesac\n\n# For Cygwin, ensure paths are in UNIX format before anything is touched.\nif $cygwin ; then\n    [ -n \"$JAVA_HOME\" ] && JAVA_HOME=`cygpath --unix \"$JAVA_HOME\"`\nfi\n\n# Attempt to set APP_HOME\n# Resolve links: $0 may be a link\nPRG=\"$0\"\n# Need this for relative symlinks.\nwhile [ -h \"$PRG\" ] ; do\n    ls=`ls -ld \"$PRG\"`\n    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n    if expr \"$link\" : '/.*' > /dev/null; then\n        PRG=\"$link\"\n    else\n        PRG=`dirname \"$PRG\"`\"/$link\"\n    fi\ndone\nSAVED=\"`pwd`\"\ncd \"`dirname \\\"$PRG\\\"`/\" >&-\nAPP_HOME=\"`pwd -P`\"\ncd \"$SAVED\" >&-\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n    else\n        JAVACMD=\"$JAVA_HOME/bin/java\"\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=\"java\"\n    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\nfi\n\n# Increase the maximum file descriptors if we can.\nif [ \"$cygwin\" = \"false\" -a \"$darwin\" = \"false\" ] ; then\n    MAX_FD_LIMIT=`ulimit -H -n`\n    if [ $? -eq 0 ] ; then\n        if [ \"$MAX_FD\" = \"maximum\" -o \"$MAX_FD\" = \"max\" ] ; then\n            MAX_FD=\"$MAX_FD_LIMIT\"\n        fi\n        ulimit -n $MAX_FD\n        if [ $? -ne 0 ] ; then\n            warn \"Could not set maximum file descriptor limit: $MAX_FD\"\n        fi\n    else\n        warn \"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\"\n    fi\nfi\n\n# For Darwin, add options to specify how the application appears in the dock\nif $darwin; then\n    GRADLE_OPTS=\"$GRADLE_OPTS \\\"-Xdock:name=$APP_NAME\\\" \\\"-Xdock:icon=$APP_HOME/media/gradle.icns\\\"\"\nfi\n\n# For Cygwin, switch paths to Windows format before running java\nif $cygwin ; then\n    APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`\n    CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`\n\n    # We build the pattern for arguments to be converted via cygpath\n    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`\n    SEP=\"\"\n    for dir in $ROOTDIRSRAW ; do\n        ROOTDIRS=\"$ROOTDIRS$SEP$dir\"\n        SEP=\"|\"\n    done\n    OURCYGPATTERN=\"(^($ROOTDIRS))\"\n    # Add a user-defined pattern to the cygpath arguments\n    if [ \"$GRADLE_CYGPATTERN\" != \"\" ] ; then\n        OURCYGPATTERN=\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\"\n    fi\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    i=0\n    for arg in \"$@\" ; do\n        CHECK=`echo \"$arg\"|egrep -c \"$OURCYGPATTERN\" -`\n        CHECK2=`echo \"$arg\"|egrep -c \"^-\"`                                 ### Determine if an option\n\n        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition\n            eval `echo args$i`=`cygpath --path --ignore --mixed \"$arg\"`\n        else\n            eval `echo args$i`=\"\\\"$arg\\\"\"\n        fi\n        i=$((i+1))\n    done\n    case $i in\n        (0) set -- ;;\n        (1) set -- \"$args0\" ;;\n        (2) set -- \"$args0\" \"$args1\" ;;\n        (3) set -- \"$args0\" \"$args1\" \"$args2\" ;;\n        (4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;\n        (5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;\n        (6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;\n        (7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;\n        (8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;\n        (9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;\n    esac\nfi\n\n# Split up the JVM_OPTS And GRADLE_OPTS values into an array, following the shell quoting and substitution rules\nfunction splitJvmOpts() {\n    JVM_OPTS=(\"$@\")\n}\neval splitJvmOpts $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS\nJVM_OPTS[${#JVM_OPTS[*]}]=\"-Dorg.gradle.appname=$APP_BASE_NAME\"\n\nexec \"$JAVACMD\" \"${JVM_OPTS[@]}\" -classpath \"$CLASSPATH\" org.gradle.wrapper.GradleWrapperMain \"$@\"\n"
        },
        {
          "name": "gradlew.bat",
          "type": "blob",
          "size": 3.0166015625,
          "content": "@REM\n@REM Copyright 2014 Joan Zapata\n@REM\n@REM This file is part of Android-pdfview.\n@REM\n@REM Android-pdfview is free software: you can redistribute it and/or modify\n@REM it under the terms of the GNU General Public License as published by\n@REM the Free Software Foundation, either version 3 of the License, or\n@REM (at your option) any later version.\n@REM\n@REM Android-pdfview is distributed in the hope that it will be useful,\n@REM but WITHOUT ANY WARRANTY; without even the implied warranty of\n@REM MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n@REM GNU General Public License for more details.\n@REM\n@REM You should have received a copy of the GNU General Public License\n@REM along with Android-pdfview.  If not, see <http://www.gnu.org/licenses/>.\n@REM\n\n@if \"%DEBUG%\" == \"\" @echo off\n@rem ##########################################################################\n@rem\n@rem  Gradle startup script for Windows\n@rem\n@rem ##########################################################################\n\n@rem Set local scope for the variables with windows NT shell\nif \"%OS%\"==\"Windows_NT\" setlocal\n\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nset DEFAULT_JVM_OPTS=\n\nset DIRNAME=%~dp0\nif \"%DIRNAME%\" == \"\" set DIRNAME=.\nset APP_BASE_NAME=%~n0\nset APP_HOME=%DIRNAME%\n\n@rem Find java.exe\nif defined JAVA_HOME goto findJavaFromJavaHome\n\nset JAVA_EXE=java.exe\n%JAVA_EXE% -version >NUL 2>&1\nif \"%ERRORLEVEL%\" == \"0\" goto init\n\necho.\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\necho.\necho Please set the JAVA_HOME variable in your environment to match the\necho location of your Java installation.\n\ngoto fail\n\n:findJavaFromJavaHome\nset JAVA_HOME=%JAVA_HOME:\"=%\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\n\nif exist \"%JAVA_EXE%\" goto init\n\necho.\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\necho.\necho Please set the JAVA_HOME variable in your environment to match the\necho location of your Java installation.\n\ngoto fail\n\n:init\n@rem Get command-line arguments, handling Windowz variants\n\nif not \"%OS%\" == \"Windows_NT\" goto win9xME_args\nif \"%@eval[2+2]\" == \"4\" goto 4NT_args\n\n:win9xME_args\n@rem Slurp the command line arguments.\nset CMD_LINE_ARGS=\nset _SKIP=2\n\n:win9xME_args_slurp\nif \"x%~1\" == \"x\" goto execute\n\nset CMD_LINE_ARGS=%*\ngoto execute\n\n:4NT_args\n@rem Get arguments from the 4NT Shell from JP Software\nset CMD_LINE_ARGS=%$\n\n:execute\n@rem Setup the command line\n\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\n\n@rem Execute Gradle\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%\n\n:end\n@rem End local scope for the variables with windows NT shell\nif \"%ERRORLEVEL%\"==\"0\" goto mainEnd\n\n:fail\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\nrem the _cmd.exe /c_ return code!\nif  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1\nexit /b 1\n\n:mainEnd\nif \"%OS%\"==\"Windows_NT\" endlocal\n\n:omega\n"
        },
        {
          "name": "sample",
          "type": "tree",
          "content": null
        },
        {
          "name": "settings.gradle",
          "type": "blob",
          "size": 0.0458984375,
          "content": "include ':android-pdf-viewer'\ninclude ':sample'"
        }
      ]
    }
  ]
}