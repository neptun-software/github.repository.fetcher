{
  "metadata": {
    "timestamp": 1736708788391,
    "page": 287,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "dm77/barcodescanner",
      "stars": 5457,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.40625,
          "content": "# built application files\n*.apk\n*.ap_\n\n# files for the dex VM\n*.dex\n\n# Java class files\n*.class\n\n# generated files\nbin/\ngen/\nbuild/\n\n# Local configuration file (sdk path, etc)\nlocal.properties\ngradle.properties\n\n# Eclipse project files\n.classpath\n.project\n\n# Proguard folder generated by Eclipse\nproguard/\n\n# Intellij project files\n*.iml\n*.ipr\n*.iws\n.idea/\n\n#Gradle folders\n.gradle\n\n# Stupid MAC OSX files\n.DS_Store\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 1.9912109375,
          "content": "# Change Log\n\n## [1.9.13] - February  16, 2019\n* Update plugin, build tools and library versions\n* Min SDK version is now 14\n* Upload artifacts to jcenter/bintray instead of Maven central/Sonatype\n\n## [1.9.8] - August 18, 2017\n* One more attempt to fix Nexus 5x portrait scanning problems\n\n## [1.9.7] - August 2, 2017\n* Fix everything that was broken since 1.9.5 (Relevant issues: #336, #315, #339, #338)\n\n## [1.9.6] - August 1, 2017\n* Revert changes from 1.9.5 as it causes more harm than good (See #336)\n\n## [1.9.5] - July 28, 2017\n* Fix incorrectly rotated data on Nexus 5x devices. Thanks to @rramprasad for the pull request #315\n\n## [1.9.4] - July 15, 2017\n* Add ability to customize aspect ratio tolerance that is used in figuring out the optimal camera preview size. This is just a temporary fix for #249,#287,#293\n\n## [1.9.3] - May 27, 2017\n* Add ability to customize view finder with custom attributes. See #285 for more info. Thanks to @albinpoignot for the pull request\n\n## [1.9.2] - May 13, 2017\n* Add support for AZTEC codes in ZXing: #299, #288.\n\n## [1.9.1] - April 8, 2017\n* Add ability to scan inverted/negative codes with ZXing. Thanks to @manijshrestha for this pull request #265\n\n## [1.9] - July 25, 2016\n* Scale camera preview when the view size isn't full screen. Thanks to @xolan for this pull request PR #219\n* Fix inverted camera in devices with differently oriented back and forward facing cameras. Thanks to @thadcodes for PR #191\n* Add ability switch view finder view to square. Thanks to @squeeish for PR #163\n\n## [1.8.4] - Dec 30, 2015\n* Improve performance by opening camera and handling preview frames in a separate HandlerThread (#1, #99)\n* Do not automatically stopCamera after a result is found #115\n* Update samples to use Material Theme and make sure all samples use the FullScreen theme\n* Update gradle wrapper to v2.10, gradle plugin to v1.5.0, buildToolsVersion to v23.0.2 and targetSdkVersion 23\n\n## [1.8.3] - October 3, 2015\n* Rebuild ZBar libraries with position independent code (#123,#119,#94).\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 0.5458984375,
          "content": "Copyright (c) 2014 Dushyanth Maguluru\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 9.154296875,
          "content": "Project Archived\n================\n**July 1 2020**\n\nThis project is no longer maintained. When I first started this project in late 2013 there were very few libraries to help with barcode scanning on Android. But the situation today is much different. We have lots of great libraries based on ZXing and there is also barcode scanning API in Google's MLKit (https://github.com/googlesamples/mlkit). So given the options I have decided to stop working on this project.\n\nIntroduction\n============\n\nAndroid library projects that provides easy to use and extensible Barcode Scanner views based on ZXing and ZBar.\n\nScreenshots\n===========\n<img src=\"https://raw.github.com/dm77/barcodescanner/master/screenshots/main_activity.png\" width=\"266\">\n<img src=\"https://raw.github.com/dm77/barcodescanner/master/screenshots/scanner.png\" width=\"266\">\n<img src=\"https://raw.github.com/dm77/barcodescanner/master/screenshots/scan_results.png\" width=\"266\">\n\n\nMinor BREAKING CHANGE in 1.8.4\n==============================\nVersion 1.8.4 introduces a couple of new changes:\n\n* Open Camera and handle preview frames in a separate HandlerThread (#1, #99): Though this has worked fine in my testing on 3 devices, I would advise you to test on your own devices before blindly releasing apps with this version. If you run into any issues please file a bug report.\n* Do not automatically stopCamera after a result is found #115: This means that upon a successful scan only the cameraPreview is stopped but the camera is not released. So previously if your code was calling mScannerView.startCamera() in the handleResult() method, please replace that with a call to mScannerView.resumeCameraPreview(this);\n\nZXing\n=====\n\nInstallation\n------------\n\nAdd the following dependency to your build.gradle file.\n\n```\nrepositories {\n   jcenter()\n}\nimplementation 'me.dm7.barcodescanner:zxing:1.9.13'\n```\n\nSimple Usage\n------------\n\n1.) Add camera permission to your AndroidManifest.xml file:\n\n```xml\n<uses-permission android:name=\"android.permission.CAMERA\" />\n```\n\n2.) A very basic activity would look like this:\n\n```java\npublic class SimpleScannerActivity extends Activity implements ZXingScannerView.ResultHandler {\n    private ZXingScannerView mScannerView;\n\n    @Override\n    public void onCreate(Bundle state) {\n        super.onCreate(state);\n        mScannerView = new ZXingScannerView(this);   // Programmatically initialize the scanner view\n        setContentView(mScannerView);                // Set the scanner view as the content view\n    }\n\n    @Override\n    public void onResume() {\n        super.onResume();\n        mScannerView.setResultHandler(this); // Register ourselves as a handler for scan results.\n        mScannerView.startCamera();          // Start camera on resume\n    }\n\n    @Override\n    public void onPause() {\n        super.onPause();\n        mScannerView.stopCamera();           // Stop camera on pause\n    }\n\n    @Override\n    public void handleResult(Result rawResult) {\n        // Do something with the result here\n        Log.v(TAG, rawResult.getText()); // Prints scan results\n        Log.v(TAG, rawResult.getBarcodeFormat().toString()); // Prints the scan format (qrcode, pdf417 etc.)\n\n        // If you would like to resume scanning, call this method below:\n        mScannerView.resumeCameraPreview(this);\n    }\n}\n\n```\n\nPlease take a look at the [zxing-sample](https://github.com/dm77/barcodescanner/tree/master/zxing-sample) project for a full working example.\n\nAdvanced Usage\n--------------\n\nTake a look at the [FullScannerActivity.java](https://github.com/dm77/barcodescanner/blob/master/zxing-sample/src/main/java/me/dm7/barcodescanner/zxing/sample/FullScannerActivity.java) or [FullScannerFragment.java](https://github.com/dm77/barcodescanner/blob/master/zxing-sample/src/main/java/me/dm7/barcodescanner/zxing/sample/FullScannerFragment.java) classes to get an idea on advanced usage.\n\nInteresting methods on the ZXingScannerView include:\n\n```java\n// Toggle flash:\nvoid setFlash(boolean);\n\n// Toogle autofocus:\nvoid setAutoFocus(boolean);\n\n// Specify interested barcode formats:\nvoid setFormats(List<BarcodeFormat> formats);\n\n// Specify the cameraId to start with:\nvoid startCamera(int cameraId);\n```\n\nSpecify front-facing or rear-facing cameras by using the `void startCamera(int cameraId);` method.\n\n\nFor HUAWEI mobile phone like P9, P10, when scanning using the default settings, it won't work due to the\n\"preview size\",  please adjust the parameter as below:\n\n```java\nmScannerView = (ZXingScannerView) findViewById(R.id.zx_view);\n\n// this paramter will make your HUAWEI phone works great!\nmScannerView.setAspectTolerance(0.5f);\n```\n\nSupported Formats:\n\n```java\nBarcodeFormat.UPC_A\nBarcodeFormat.UPC_E\nBarcodeFormat.EAN_13\nBarcodeFormat.EAN_8\nBarcodeFormat.RSS_14\nBarcodeFormat.CODE_39\nBarcodeFormat.CODE_93\nBarcodeFormat.CODE_128\nBarcodeFormat.ITF\nBarcodeFormat.CODABAR\nBarcodeFormat.QR_CODE\nBarcodeFormat.DATA_MATRIX\nBarcodeFormat.PDF_417\n```\n\nZBar\n====\n\nInstallation\n------------\n\nAdd the following dependency to your build.gradle file.\n\n```\nrepositories {\n   jcenter()\n}\nimplementation 'me.dm7.barcodescanner:zbar:1.9.13'\n```\n\nSimple Usage\n------------\n\n1.) Add camera permission to your AndroidManifest.xml file:\n\n```xml\n<uses-permission android:name=\"android.permission.CAMERA\" />\n```\n\n2.) A very basic activity would look like this:\n\n```java\npublic class SimpleScannerActivity extends Activity implements ZBarScannerView.ResultHandler {\n    private ZBarScannerView mScannerView;\n\n    @Override\n    public void onCreate(Bundle state) {\n        super.onCreate(state);\n        mScannerView = new ZBarScannerView(this);    // Programmatically initialize the scanner view\n        setContentView(mScannerView);                // Set the scanner view as the content view\n    }\n\n    @Override\n    public void onResume() {\n        super.onResume();\n        mScannerView.setResultHandler(this); // Register ourselves as a handler for scan results.\n        mScannerView.startCamera();          // Start camera on resume\n    }\n\n    @Override\n    public void onPause() {\n        super.onPause();\n        mScannerView.stopCamera();           // Stop camera on pause\n    }\n\n    @Override\n    public void handleResult(Result rawResult) {\n        // Do something with the result here\n        Log.v(TAG, rawResult.getContents()); // Prints scan results\n        Log.v(TAG, rawResult.getBarcodeFormat().getName()); // Prints the scan format (qrcode, pdf417 etc.)\n\n        // If you would like to resume scanning, call this method below:\n        mScannerView.resumeCameraPreview(this);\n    }\n}\n\n```\n\nPlease take a look at the [zbar-sample](https://github.com/dm77/barcodescanner/tree/master/zbar-sample)  project for a full working example.\n\nAdvanced Usage\n--------------\n\n\nTake a look at the [FullScannerActivity.java](https://github.com/dm77/barcodescanner/blob/master/zbar-sample/src/main/java/me/dm7/barcodescanner/zbar/sample/FullScannerActivity.java) or [FullScannerFragment.java](https://github.com/dm77/barcodescanner/blob/master/zbar-sample/src/main/java/me/dm7/barcodescanner/zbar/sample/FullScannerFragment.java) classes to get an idea on advanced usage.\n\nInteresting methods on the ZBarScannerView include:\n\n```java\n// Toggle flash:\nvoid setFlash(boolean);\n\n// Toogle autofocus:\nvoid setAutoFocus(boolean);\n\n// Specify interested barcode formats:\nvoid setFormats(List<BarcodeFormat> formats);\n```\n\nSpecify front-facing or rear-facing cameras by using the `void startCamera(int cameraId);` method.\n\nSupported Formats:\n\n```\nBarcodeFormat.PARTIAL\nBarcodeFormat.EAN8\nBarcodeFormat.UPCE\nBarcodeFormat.ISBN10\nBarcodeFormat.UPCA\nBarcodeFormat.EAN13\nBarcodeFormat.ISBN13\nBarcodeFormat.I25\nBarcodeFormat.DATABAR\nBarcodeFormat.DATABAR_EXP\nBarcodeFormat.CODABAR\nBarcodeFormat.CODE39\nBarcodeFormat.PDF417\nBarcodeFormat.QR_CODE\nBarcodeFormat.CODE93\nBarcodeFormat.CODE128\n```\n\nRebuilding ZBar Libraries\n=========================\n\n```\nmkdir some_work_dir\ncd work_dir\nwget http://ftp.gnu.org/pub/gnu/libiconv/libiconv-1.14.tar.gz\ntar zxvf libiconv-1.14.tar.gz\n```\n\nPatch the localcharset.c file:\nvim libiconv-1.14/libcharset/lib/localcharset.c\n\nOn line 48, add the following line of code:\n\n```\n#undef HAVE_LANGINFO_CODESET\n```\n\nSave the file and continue with steps below:\n```\ncd libiconv-1.14\n./configure\ncd ..\nhg clone http://hg.code.sf.net/p/zbar/code zbar-code\ncd zbar-code/android\nandroid update project -p . -t 'android-19'\n```\n\nOpen jni/Android.mk file and add fPIC flag to LOCAL_C_FLAGS.\nOpen jni/Application.mk file and specify APP_ABI targets as needed.\n\n```\nant -Dndk.dir=$NDK_HOME  -Diconv.src=some_work_dir/libiconv-1.14 zbar-clean zbar-all\n```\n\nUpon completion you can grab the .so and .jar files from the libs folder.\n\nCredits\n=======\n\nAlmost all of the code for these library projects is based on:\n\n1. CameraPreview app from Android SDK APIDemos\n2. The ZXing project: https://github.com/zxing/zxing\n3. The ZBar Android SDK: https://github.com/ZBar/ZBar/tree/master/android (Previously: http://sourceforge.net/projects/zbar/files/AndroidSDK/)\n\nContributors\n============\n\nhttps://github.com/dm77/barcodescanner/graphs/contributors\n\nLicense\n=======\nLicense for code written in this project is: Apache License, Version 2.0\n\nLicense for zxing and zbar projects is here:\n* https://github.com/zxing/zxing/blob/master/LICENSE\n* https://github.com/ZBar/ZBar/tree/master/android\n"
        },
        {
          "name": "build.gradle",
          "type": "blob",
          "size": 5.1416015625,
          "content": "apply from: 'dependencies.gradle'\n\nbuildscript {\n    repositories {\n        jcenter()\n        google()\n    }\n\n    dependencies {\n        classpath 'com.android.tools.build:gradle:3.3.1'\n        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3'\n        classpath 'com.github.dcendents:android-maven-gradle-plugin:2.1'\n    }\n}\n\nallprojects {\n    group = 'me.dm7.barcodescanner'\n    version = '1.9.13'\n\n    repositories {\n        google()\n        jcenter()\n    }\n\n    ext {\n        isLibrary = false\n    }\n}\n\nsubprojects {\n    afterEvaluate { Project project ->\n        ext.pluginContainer = project.getPlugins()\n        if(ext.pluginContainer.hasPlugin(\"com.android.application\") || ext.pluginContainer.hasPlugin(\"com.android.library\")) {\n            android {\n                compileSdkVersion versions.compile_sdk\n                buildToolsVersion versions.build_tools\n\n                android {\n                    lintOptions {\n                        abortOnError false\n                    }\n                }\n\n                defaultConfig {\n                    minSdkVersion versions.min_sdk\n                    targetSdkVersion versions.target_sdk\n                    versionCode 1913\n                    versionName \"1.9.13\"\n                }\n            }\n        }\n\n        Properties properties = new Properties()\n        properties.load(project.rootProject.file('local.properties').newDataInputStream())\n        def bintrayUser = properties.getProperty('bintray.user')\n        def bintrayApikey = properties.getProperty('bintray.apikey')\n\n        if(project.isLibrary && bintrayUser?.trim() && bintrayApikey?.trim()) {\n            configure(project) {\n                apply plugin: 'com.github.dcendents.android-maven'\n                group = project.group                               // Maven Group ID for the artifact\n\n                install {\n                    repositories.mavenInstaller {\n                        pom.project {\n                            name project.pomName\n                            version project.version\n                            groupId project.group\n                            packaging project.pomPackaging\n                            artifactId project.pomArtifactId\n                            description project.pomDescription\n                            url 'https://github.com/dm77/barcodescanner'\n\n                            scm {\n                                url 'scm:git@github.com:dm77/barcodescanner.git'\n                                connection 'scm:git@github.com:dm77/barcodescanner.git'\n                                developerConnection 'scm:git@github.com:dm77/barcodescanner.git'\n                            }\n\n                            licenses {\n                                license {\n                                    name 'The Apache Software License, Version 2.0'\n                                    url 'http://www.apache.org/licenses/LICENSE-2.0.txt'\n                                    distribution 'repo'\n                                }\n                            }\n\n                            developers {\n                                developer {\n                                    id 'dm77'\n                                    name 'Dushyanth Maguluru'\n                                    email 'dushyanth.maguluru@gmail.com'\n                                }\n                            }\n                        }\n                    }\n                }\n\n                apply plugin: 'com.jfrog.bintray'\n\n                version = '1.9.13'\n\n                if (project.hasProperty(\"android\")) { // Android libraries\n                    task sourcesJar(type: Jar) {\n                        classifier = 'sources'\n                        from android.sourceSets.main.java.srcDirs\n                    }\n                } else { // Java libraries\n                    task sourcesJar(type: Jar, dependsOn: classes) {\n                        classifier = 'sources'\n                        from sourceSets.main.allSource\n                    }\n                }\n\n\n                artifacts {\n                    archives sourcesJar\n                }\n\n                bintray {\n                    user = properties.getProperty(\"bintray.user\")\n                    key = properties.getProperty(\"bintray.apikey\")\n\n                    configurations = ['archives']\n                    pkg {\n                        repo = 'maven'\n                        name = 'me.dm7.barcodescanner:' + project.pomArtifactId\n                        desc = 'Barcode Scanner Libraries for Android'\n                        websiteUrl = 'https://github.com/dm77/barcodescanner'\n                        vcsUrl = 'https://github.com/dm77/barcodescanner.git'\n                        licenses = [\"Apache-2.0\"]\n                        publish = true\n                        publicDownloadNumbers = true\n                        version {\n                            desc = 'Barcode Scanner Libraries for Android'\n                            gpg {\n                                sign = false\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n\ntask wrapper(type: Wrapper) {\n    gradleVersion = '4.10.1'\n}\n"
        },
        {
          "name": "core",
          "type": "tree",
          "content": null
        },
        {
          "name": "dependencies.gradle",
          "type": "blob",
          "size": 0.8203125,
          "content": "ext.versions = [\n        compile_sdk   : 28,\n        min_sdk       : 14,\n        target_sdk    : 28,\n        build_tools   : \"28.0.3\",\n        support_lib   : \"28.0.0\",\n        zxing         : \"3.3.3\",\n        barcodescanner: \"1.9.13\"\n]\n\next.libraries = [\n        support_v4          : \"com.android.support:support-v4:$versions.support_lib\",\n        appcompat_v7        : \"com.android.support:appcompat-v7:$versions.support_lib\",\n        design_support      : \"com.android.support:design:$versions.support_lib\",\n        zxing_core          : \"com.google.zxing:core:$versions.zxing\",\n        barcodescanner_core : \"me.dm7.barcodescanner:core:$versions.barcodescanner\",\n        barcodescanner_zbar : \"me.dm7.barcodescanner:zbar:$versions.barcodescanner\",\n        barcodescanner_zxing: \"me.dm7.barcodescanner:zxing:$versions.barcodescanner\"\n]\n"
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 5.1748046875,
          "content": "#!/usr/bin/env sh\n\n##############################################################################\n##\n##  Gradle start up script for UN*X\n##\n##############################################################################\n\n# Attempt to set APP_HOME\n# Resolve links: $0 may be a link\nPRG=\"$0\"\n# Need this for relative symlinks.\nwhile [ -h \"$PRG\" ] ; do\n    ls=`ls -ld \"$PRG\"`\n    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n    if expr \"$link\" : '/.*' > /dev/null; then\n        PRG=\"$link\"\n    else\n        PRG=`dirname \"$PRG\"`\"/$link\"\n    fi\ndone\nSAVED=\"`pwd`\"\ncd \"`dirname \\\"$PRG\\\"`/\" >/dev/null\nAPP_HOME=\"`pwd -P`\"\ncd \"$SAVED\" >/dev/null\n\nAPP_NAME=\"Gradle\"\nAPP_BASE_NAME=`basename \"$0\"`\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS=\"\"\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=\"maximum\"\n\nwarn ( ) {\n    echo \"$*\"\n}\n\ndie ( ) {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n}\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\nnonstop=false\ncase \"`uname`\" in\n  CYGWIN* )\n    cygwin=true\n    ;;\n  Darwin* )\n    darwin=true\n    ;;\n  MINGW* )\n    msys=true\n    ;;\n  NONSTOP* )\n    nonstop=true\n    ;;\nesac\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n    else\n        JAVACMD=\"$JAVA_HOME/bin/java\"\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=\"java\"\n    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\nfi\n\n# Increase the maximum file descriptors if we can.\nif [ \"$cygwin\" = \"false\" -a \"$darwin\" = \"false\" -a \"$nonstop\" = \"false\" ] ; then\n    MAX_FD_LIMIT=`ulimit -H -n`\n    if [ $? -eq 0 ] ; then\n        if [ \"$MAX_FD\" = \"maximum\" -o \"$MAX_FD\" = \"max\" ] ; then\n            MAX_FD=\"$MAX_FD_LIMIT\"\n        fi\n        ulimit -n $MAX_FD\n        if [ $? -ne 0 ] ; then\n            warn \"Could not set maximum file descriptor limit: $MAX_FD\"\n        fi\n    else\n        warn \"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\"\n    fi\nfi\n\n# For Darwin, add options to specify how the application appears in the dock\nif $darwin; then\n    GRADLE_OPTS=\"$GRADLE_OPTS \\\"-Xdock:name=$APP_NAME\\\" \\\"-Xdock:icon=$APP_HOME/media/gradle.icns\\\"\"\nfi\n\n# For Cygwin, switch paths to Windows format before running java\nif $cygwin ; then\n    APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`\n    CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`\n    JAVACMD=`cygpath --unix \"$JAVACMD\"`\n\n    # We build the pattern for arguments to be converted via cygpath\n    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`\n    SEP=\"\"\n    for dir in $ROOTDIRSRAW ; do\n        ROOTDIRS=\"$ROOTDIRS$SEP$dir\"\n        SEP=\"|\"\n    done\n    OURCYGPATTERN=\"(^($ROOTDIRS))\"\n    # Add a user-defined pattern to the cygpath arguments\n    if [ \"$GRADLE_CYGPATTERN\" != \"\" ] ; then\n        OURCYGPATTERN=\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\"\n    fi\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    i=0\n    for arg in \"$@\" ; do\n        CHECK=`echo \"$arg\"|egrep -c \"$OURCYGPATTERN\" -`\n        CHECK2=`echo \"$arg\"|egrep -c \"^-\"`                                 ### Determine if an option\n\n        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition\n            eval `echo args$i`=`cygpath --path --ignore --mixed \"$arg\"`\n        else\n            eval `echo args$i`=\"\\\"$arg\\\"\"\n        fi\n        i=$((i+1))\n    done\n    case $i in\n        (0) set -- ;;\n        (1) set -- \"$args0\" ;;\n        (2) set -- \"$args0\" \"$args1\" ;;\n        (3) set -- \"$args0\" \"$args1\" \"$args2\" ;;\n        (4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;\n        (5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;\n        (6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;\n        (7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;\n        (8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;\n        (9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;\n    esac\nfi\n\n# Escape application args\nsave ( ) {\n    for i do printf %s\\\\n \"$i\" | sed \"s/'/'\\\\\\\\''/g;1s/^/'/;\\$s/\\$/' \\\\\\\\/\" ; done\n    echo \" \"\n}\nAPP_ARGS=$(save \"$@\")\n\n# Collect all arguments for the java command, following the shell quoting and substitution rules\neval set -- $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS \"\\\"-Dorg.gradle.appname=$APP_BASE_NAME\\\"\" -classpath \"\\\"$CLASSPATH\\\"\" org.gradle.wrapper.GradleWrapperMain \"$APP_ARGS\"\n\n# by default we should be in the correct project dir, but when run from Finder on Mac, the cwd is wrong\nif [ \"$(uname)\" = \"Darwin\" ] && [ \"$HOME\" = \"$PWD\" ]; then\n  cd \"$(dirname \"$0\")\"\nfi\n\nexec \"$JAVACMD\" \"$@\"\n"
        },
        {
          "name": "gradlew.bat",
          "type": "blob",
          "size": 2.20703125,
          "content": "@if \"%DEBUG%\" == \"\" @echo off\r\n@rem ##########################################################################\r\n@rem\r\n@rem  Gradle startup script for Windows\r\n@rem\r\n@rem ##########################################################################\r\n\r\n@rem Set local scope for the variables with windows NT shell\r\nif \"%OS%\"==\"Windows_NT\" setlocal\r\n\r\nset DIRNAME=%~dp0\r\nif \"%DIRNAME%\" == \"\" set DIRNAME=.\r\nset APP_BASE_NAME=%~n0\r\nset APP_HOME=%DIRNAME%\r\n\r\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\r\nset DEFAULT_JVM_OPTS=\r\n\r\n@rem Find java.exe\r\nif defined JAVA_HOME goto findJavaFromJavaHome\r\n\r\nset JAVA_EXE=java.exe\r\n%JAVA_EXE% -version >NUL 2>&1\r\nif \"%ERRORLEVEL%\" == \"0\" goto init\r\n\r\necho.\r\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\r\necho.\r\necho Please set the JAVA_HOME variable in your environment to match the\r\necho location of your Java installation.\r\n\r\ngoto fail\r\n\r\n:findJavaFromJavaHome\r\nset JAVA_HOME=%JAVA_HOME:\"=%\r\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\r\n\r\nif exist \"%JAVA_EXE%\" goto init\r\n\r\necho.\r\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\r\necho.\r\necho Please set the JAVA_HOME variable in your environment to match the\r\necho location of your Java installation.\r\n\r\ngoto fail\r\n\r\n:init\r\n@rem Get command-line arguments, handling Windows variants\r\n\r\nif not \"%OS%\" == \"Windows_NT\" goto win9xME_args\r\n\r\n:win9xME_args\r\n@rem Slurp the command line arguments.\r\nset CMD_LINE_ARGS=\r\nset _SKIP=2\r\n\r\n:win9xME_args_slurp\r\nif \"x%~1\" == \"x\" goto execute\r\n\r\nset CMD_LINE_ARGS=%*\r\n\r\n:execute\r\n@rem Setup the command line\r\n\r\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\r\n\r\n@rem Execute Gradle\r\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%\r\n\r\n:end\r\n@rem End local scope for the variables with windows NT shell\r\nif \"%ERRORLEVEL%\"==\"0\" goto mainEnd\r\n\r\n:fail\r\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\r\nrem the _cmd.exe /c_ return code!\r\nif  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1\r\nexit /b 1\r\n\r\n:mainEnd\r\nif \"%OS%\"==\"Windows_NT\" endlocal\r\n\r\n:omega\r\n"
        },
        {
          "name": "screenshots",
          "type": "tree",
          "content": null
        },
        {
          "name": "settings.gradle",
          "type": "blob",
          "size": 0.0615234375,
          "content": "include \"core\", \"zxing\", \"zxing-sample\", \"zbar\", \"zbar-sample\"\n"
        },
        {
          "name": "zbar-sample",
          "type": "tree",
          "content": null
        },
        {
          "name": "zbar",
          "type": "tree",
          "content": null
        },
        {
          "name": "zxing-sample",
          "type": "tree",
          "content": null
        },
        {
          "name": "zxing",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}