{
  "metadata": {
    "timestamp": 1736708725880,
    "page": 172,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "junit-team/junit5",
      "stars": 6473,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.12890625,
          "content": "[*.{kt,kts}]\nij_kotlin_allow_trailing_comma = false\nij_kotlin_allow_trailing_comma_on_call_site = false\n\n[*.kts]\nindent_style = tab\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.111328125,
          "content": "* text eol=lf\n*.bat text eol=crlf\n*.png binary\n*.key binary\n*.jar binary\n*.ttf binary\nrelease-notes-* merge=union\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.3271484375,
          "content": "# Gradle\n.gradle\n.kotlin\nbuild\n\n# Ignore Gradle GUI config\ngradle-app.setting\n\n# Eclipse\n.classpath\n.settings/\n.project\n/bin/\n/*/bin\n/gradle/plugins/*/bin\n\n# IntelliJ\n*.iml\n*.ipr\n*.iws\n*.uml\n**/.idea/*\n!/.idea/icon.png\n!/.idea/vcs.xml\n/out/\n/*/out/\n\n# Misc\n*.log\n*.graphml\ncoverage.db*\n.metadata\n/.sdkmanrc\n/.tool-versions\n\nchecksums*\n"
        },
        {
          "name": ".idea",
          "type": "tree",
          "content": null
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.267578125,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, sex characteristics, gender identity and expression,\nlevel of experience, education, socio-economic status, nationality, personal\nappearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\n advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at team@junit.org. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see\nhttps://www.contributor-covenant.org/faq\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 7.51953125,
          "content": "# Contributing\n\n## JUnit Contributor License Agreement\n\n- You will only Submit Contributions where You have authored 100% of the content.\n- You will only Submit Contributions to which You have the necessary rights. This means\n  that if You are employed You have received the necessary permissions from Your employer\n  to make the Contributions.\n- Whatever content You Contribute will be provided under the Project License(s).\n\n### Project Licenses\n\n- All modules use [Eclipse Public License v2.0](LICENSE.md).\n\n## Commit Messages\n\nAs a general rule, the style and formatting of commit messages should follow the guidelines in\n[How to Write a Git Commit Message](https://chris.beams.io/posts/git-commit/).\n\nIn addition, any commit that is related to an existing issue must reference the issue.\nFor example, if a commit in a pull request addresses issue \\#999, it must contain the\nfollowing at the bottom of the commit message.\n\n```\nIssue: #999\n```\n\n## Pull Requests\n\nOur [Definition of Done](https://github.com/junit-team/junit5/wiki/Definition-of-Done)\n(DoD) offers some guidelines on what we expect from a pull request.\nFeel free to open a pull request that does not fulfill all criteria, e.g. to discuss\na certain change before polishing it, but please be aware that we will only merge it\nonce the DoD is met.\n\nPlease add the following lines to your pull request description:\n\n```markdown\n---\n\nI hereby agree to the terms of the JUnit Contributor License Agreement.\n```\n\n## Coding Conventions\n\n### Naming Conventions\n\nWhenever an acronym is included as part of a type name or method name, keep the first\nletter of the acronym uppercase and use lowercase for the rest of the acronym. Otherwise,\nit becomes _impossible_ to perform camel-cased searches in IDEs, and it becomes\npotentially very difficult for mere humans to read or reason about the element without\nreading documentation (if documentation even exists).\n\nConsider for example a use case needing to support an HTTP URL. Calling the method\n`getHTTPURL()` is absolutely horrible in terms of usability; whereas, `getHttpUrl()` is\ngreat in terms of usability. The same applies for types `HTTPURLProvider` vs\n`HttpUrlProvider`, etc.\n\nWhenever an acronym is included as part of a field name or parameter name:\n\n- If the acronym comes at the start of the field or parameter name, use lowercase for the\n  entire acronym -- for example, `String url;`.\n- Otherwise, keep the first letter of the acronym uppercase and use lowercase for the\n  rest of the acronym -- for example, `String defaultUrl;`.\n\n### Formatting\n\n#### Code\n\nCode formatting is enforced using the [Spotless](https://github.com/diffplug/spotless)\nGradle plugin. You can use `gradle spotlessApply` to format new code and add missing\nlicense headers to source files. Formatter and import order settings for Eclipse are\navailable in the repository under\n[junit-eclipse-formatter-settings.xml](gradle/config/eclipse/junit-eclipse-formatter-settings.xml)\nand [junit-eclipse.importorder](gradle/config/eclipse/junit-eclipse.importorder),\nrespectively. For IntelliJ IDEA there's a\n[plugin](https://plugins.jetbrains.com/plugin/6546) you can use in conjunction with the\nEclipse settings.\n\nIt is forbidden to use _wildcard imports_ (e.g., `import static org.junit.jupiter.api.Assertions.*;`)\nin Java code.\n\n#### Documentation\n\nText in `*.adoc` and `*.md` files should be wrapped at 90 characters whenever technically\npossible.\n\nIn multi-line bullet point entries, subsequent lines should be indented.\n\n### Spelling\n\nUse American English spelling rules when writing documentation as well as for\ncode -- class names, method names, variable names, etc.\n\n### Javadoc\n\n- Javadoc comments should be wrapped after 80 characters whenever possible.\n- This first paragraph must be a single, concise sentence that ends with a period (`.`).\n- Place `<p>` on the same line as the first line of a new paragraph and precede `<p>` with a blank line.\n- Insert a blank line before at-clauses/tags.\n- Favor `{@code foo}` over `<code>foo</code>`.\n- Favor literals (e.g., `{@literal @}`) over HTML entities.\n- New classes and methods should declare a `@since ...` tag.\n- Use `@since 5.10` instead of `@since 5.10.0`.\n- Do not use `@author` tags. Instead, contributors are listed on the [GitHub](https://github.com/junit-team/junit5/graphs/contributors) page.\n- Do not use verbs in third-person form in the first sentence of the Javadoc for a method -- for example, use \"Discover tests...\" instead of \"Discovers tests...\".\n\n#### Examples\n\nSee [`ExtensionContext`](junit-jupiter-api/src/main/java/org/junit/jupiter/api/extension/ExtensionContext.java) and\n[`ParameterContext`](junit-jupiter-api/src/main/java/org/junit/jupiter/api/extension/ParameterContext.java) for example Javadoc.\n\n\n### Tests\n\n#### Naming\n\n- All test classes must end with a `Tests` suffix.\n- Example test classes that should not be picked up by the build must end with a `TestCase` suffix.\n\n#### Assertions\n\n- Use `org.junit.jupiter.api.Assertions` for simple assertions.\n- Use AssertJ when richer assertions are needed.\n- Do not use `org.junit.Assert` or `junit.framework.Assert`.\n\n#### Mocking and Stubbing\n\n- Use either [Mockito](https://github.com/mockito/mockito) or hand-written test doubles.\n\n### Logging\n\n- In general, logging should be used sparingly.\n- All logging must be performed via the internal `Logger` façade provided via the JUnit [LoggerFactory](https://github.com/junit-team/junit5/blob/main/junit-platform-commons/src/main/java/org/junit/platform/commons/logging/LoggerFactory.java).\n- Levels defined in JUnit's [Logger](https://github.com/junit-team/junit5/blob/main/junit-platform-commons/src/main/java/org/junit/platform/commons/logging/Logger.java) façade, which delegates to Java Util Logging (JUL) for the actual logging.\n  - _error_ (JUL: `SEVERE`, Log4J: `ERROR`): extra information (in addition to an Exception) about errors that will halt execution\n  - _warn_ (JUL: `WARNING`, Log4J: `WARN`): potential usage or configuration errors that should not halt execution\n  - _info_ (JUL: `INFO`, Log4J: `INFO`): information the users might want to know but not by default\n  - _config_ (JUL: `CONFIG`, Log4J: `CONFIG`): information related to configuration of the system (Example: `ServiceLoaderTestEngineRegistry` logs IDs of discovered engines)\n  - _debug_ (JUL: `FINE`, Log4J: `DEBUG`)\n  - _trace_ (JUL: `FINER`, Log4J: `TRACE`)\n\n### Deprecation\n\nThe JUnit 5 project uses the `@API` annotation from [API Guardian](https://github.com/apiguardian-team/apiguardian).\nPublicly available interfaces, classes, and methods have a defined lifecycle\nwhich is described in detail in the [User Guide](https://junit.org/junit5/docs/current/user-guide/#api-evolution).\n\nThat following describes the deprecation process followed for API items.\n\nTo deprecate an item:\n- Update the `@API.status` to `DEPRECATED`.\n- Update `@API.since`. Please note `since` describes the version when the\n  status was changed and not the introduction of the element.\n- Add the `@Deprecated` Java annotation on the item.\n- Add the `@deprecated` JavaDoc tag to describe the deprecation, and refer to\n  an eventual replacement.\n- If the item is used in existing code, add `@SuppressWarnings(\"deprecation\")`\n  to make the build pass.\n\n## Building the Project\n\nPlease refer to [the readme](README.md#building-from-source) for the most common\nbuild commands.\n\n### Build Parameters\n\nThe build can be influenced by a number of parameters. For example, measuring\nJaCoCo code coverage of Test tasks can be enabled, or Predictive Test Selection\ndisabled. To see the full list, please run the following task:\n\n`./gradlew :plugins:build-parameters:parameters`\n"
        },
        {
          "name": "KEYS",
          "type": "blob",
          "size": 3.7431640625,
          "content": "This file contains the PGP key that is used to sign releases.\n\nImporting: `pgp < KEYS` or `gpg --import KEYS`\n\nAdding a key:\n`pgp -kxa <your name> >> KEYS`,\nor `(pgpk -ll <your name> && pgpk -xa <your name>) >> KEYS`,\nor `(gpg --list-sigs <your name> && gpg --armor --export <your name>) >> KEYS`\n\n================================\n\npub   rsa4096 2018-04-08 [SC]\n      FF6E2C001948C5F2F38B0CC385911F425EC61B51\nuid           [ unknown] Open Source Development <mail@marcphilipp.de>\nsig 3        85911F425EC61B51 2018-04-08  Open Source Development <mail@marcphilipp.de>\nsub   rsa4096 2018-04-08 [E]\nsig          85911F425EC61B51 2018-04-08  Open Source Development <mail@marcphilipp.de>\n\n-----BEGIN PGP PUBLIC KEY BLOCK-----\n\n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\nmdzS2PJko7mm\n=l0XA\n-----END PGP PUBLIC KEY BLOCK-----\n"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 13.9013671875,
          "content": "Eclipse Public License - v 2.0\n==============================\n\nTHE ACCOMPANYING PROGRAM IS PROVIDED UNDER THE TERMS OF THIS ECLIPSE PUBLIC LICENSE (“AGREEMENT”). ANY USE, REPRODUCTION OR DISTRIBUTION OF THE PROGRAM CONSTITUTES RECIPIENT'S ACCEPTANCE OF THIS AGREEMENT.\n\n### 1. Definitions\n\n“Contribution” means:\n* **a)** in the case of the initial Contributor, the initial content Distributed under this Agreement, and\n* **b)** in the case of each subsequent Contributor:\n\t* **i)** changes to the Program, and\n\t* **ii)** additions to the Program;\nwhere such changes and/or additions to the Program originate from and are Distributed by that particular Contributor. A Contribution “originates” from a Contributor if it was added to the Program by such Contributor itself or anyone acting on such Contributor's behalf. Contributions do not include changes or additions to the Program that are not Modified Works.\n\n“Contributor” means any person or entity that Distributes the Program.\n\n“Licensed Patents” mean patent claims licensable by a Contributor which are necessarily infringed by the use or sale of its Contribution alone or when combined with the Program.\n\n“Program” means the Contributions Distributed in accordance with this Agreement.\n\n“Recipient” means anyone who receives the Program under this Agreement or any Secondary License (as applicable), including Contributors.\n\n“Derivative Works” shall mean any work, whether in Source Code or other form, that is based on (or derived from) the Program and for which the editorial revisions, annotations, elaborations, or other modifications represent, as a whole, an original work of authorship.\n\n“Modified Works” shall mean any work in Source Code or other form that results from an addition to, deletion from, or modification of the contents of the Program, including, for purposes of clarity any new file in Source Code form that contains any contents of the Program. Modified Works shall not include works that contain only declarations, interfaces, types, classes, structures, or files of the Program solely in each case in order to link to, bind by name, or subclass the Program or Modified Works thereof.\n\n“Distribute” means the acts of **a)** distributing or **b)** making available in any manner that enables the transfer of a copy.\n\n“Source Code” means the form of a Program preferred for making modifications, including but not limited to software source code, documentation source, and configuration files.\n\n“Secondary License” means either the GNU General Public License, Version 2.0, or any later versions of that license, including any exceptions or additional permissions as identified by the initial Contributor.\n\n### 2. Grant of Rights\n\n**a)** Subject to the terms of this Agreement, each Contributor hereby grants Recipient a non-exclusive, worldwide, royalty-free copyright license to reproduce, prepare Derivative Works of, publicly display, publicly perform, Distribute and sublicense the Contribution of such Contributor, if any, and such Derivative Works.\n\n**b)** Subject to the terms of this Agreement, each Contributor hereby grants Recipient a non-exclusive, worldwide, royalty-free patent license under Licensed Patents to make, use, sell, offer to sell, import and otherwise transfer the Contribution of such Contributor, if any, in Source Code or other form. This patent license shall apply to the combination of the Contribution and the Program if, at the time the Contribution is added by the Contributor, such addition of the Contribution causes such combination to be covered by the Licensed Patents. The patent license shall not apply to any other combinations which include the Contribution. No hardware per se is licensed hereunder.\n\n**c)** Recipient understands that although each Contributor grants the licenses to its Contributions set forth herein, no assurances are provided by any Contributor that the Program does not infringe the patent or other intellectual property rights of any other entity. Each Contributor disclaims any liability to Recipient for claims brought by any other entity based on infringement of intellectual property rights or otherwise. As a condition to exercising the rights and licenses granted hereunder, each Recipient hereby assumes sole responsibility to secure any other intellectual property rights needed, if any. For example, if a third party patent license is required to allow Recipient to Distribute the Program, it is Recipient's responsibility to acquire that license before distributing the Program.\n\n**d)** Each Contributor represents that to its knowledge it has sufficient copyright rights in its Contribution, if any, to grant the copyright license set forth in this Agreement.\n\n**e)** Notwithstanding the terms of any Secondary License, no Contributor makes additional grants to any Recipient (other than those set forth in this Agreement) as a result of such Recipient's receipt of the Program under the terms of a Secondary License (if permitted under the terms of Section 3).\n\n### 3. Requirements\n\n**3.1** If a Contributor Distributes the Program in any form, then:\n\n* **a)** the Program must also be made available as Source Code, in accordance with section 3.2, and the Contributor must accompany the Program with a statement that the Source Code for the Program is available under this Agreement, and informs Recipients how to obtain it in a reasonable manner on or through a medium customarily used for software exchange; and\n\n* **b)** the Contributor may Distribute the Program under a license different than this Agreement, provided that such license:\n\t* **i)** effectively disclaims on behalf of all other Contributors all warranties and conditions, express and implied, including warranties or conditions of title and non-infringement, and implied warranties or conditions of merchantability and fitness for a particular purpose;\n\t* **ii)** effectively excludes on behalf of all other Contributors all liability for damages, including direct, indirect, special, incidental and consequential damages, such as lost profits;\n\t* **iii)** does not attempt to limit or alter the recipients' rights in the Source Code under section 3.2; and\n\t* **iv)** requires any subsequent distribution of the Program by any party to be under a license that satisfies the requirements of this section 3.\n\n**3.2** When the Program is Distributed as Source Code:\n\n* **a)** it must be made available under this Agreement, or if the Program **(i)** is combined with other material in a separate file or files made available under a Secondary License, and **(ii)** the initial Contributor attached to the Source Code the notice described in Exhibit A of this Agreement, then the Program may be made available under the terms of such Secondary Licenses, and\n* **b)** a copy of this Agreement must be included with each copy of the Program.\n\n**3.3** Contributors may not remove or alter any copyright, patent, trademark, attribution notices, disclaimers of warranty, or limitations of liability (“notices”) contained within the Program from any copy of the Program which they Distribute, provided that Contributors may add their own appropriate notices.\n\n### 4. Commercial Distribution\n\nCommercial distributors of software may accept certain responsibilities with respect to end users, business partners and the like. While this license is intended to facilitate the commercial use of the Program, the Contributor who includes the Program in a commercial product offering should do so in a manner which does not create potential liability for other Contributors. Therefore, if a Contributor includes the Program in a commercial product offering, such Contributor (“Commercial Contributor”) hereby agrees to defend and indemnify every other Contributor (“Indemnified Contributor”) against any losses, damages and costs (collectively “Losses”) arising from claims, lawsuits and other legal actions brought by a third party against the Indemnified Contributor to the extent caused by the acts or omissions of such Commercial Contributor in connection with its distribution of the Program in a commercial product offering. The obligations in this section do not apply to any claims or Losses relating to any actual or alleged intellectual property infringement. In order to qualify, an Indemnified Contributor must: **a)** promptly notify the Commercial Contributor in writing of such claim, and **b)** allow the Commercial Contributor to control, and cooperate with the Commercial Contributor in, the defense and any related settlement negotiations. The Indemnified Contributor may participate in any such claim at its own expense.\n\nFor example, a Contributor might include the Program in a commercial product offering, Product X. That Contributor is then a Commercial Contributor. If that Commercial Contributor then makes performance claims, or offers warranties related to Product X, those performance claims and warranties are such Commercial Contributor's responsibility alone. Under this section, the Commercial Contributor would have to defend claims against the other Contributors related to those performance claims and warranties, and if a court requires any other Contributor to pay any damages as a result, the Commercial Contributor must pay those damages.\n\n### 5. No Warranty\n\nEXCEPT AS EXPRESSLY SET FORTH IN THIS AGREEMENT, AND TO THE EXTENT PERMITTED BY APPLICABLE LAW, THE PROGRAM IS PROVIDED ON AN “AS IS” BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, EITHER EXPRESS OR IMPLIED INCLUDING, WITHOUT LIMITATION, ANY WARRANTIES OR CONDITIONS OF TITLE, NON-INFRINGEMENT, MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. Each Recipient is solely responsible for determining the appropriateness of using and distributing the Program and assumes all risks associated with its exercise of rights under this Agreement, including but not limited to the risks and costs of program errors, compliance with applicable laws, damage to or loss of data, programs or equipment, and unavailability or interruption of operations.\n\n### 6. Disclaimer of Liability\n\nEXCEPT AS EXPRESSLY SET FORTH IN THIS AGREEMENT, AND TO THE EXTENT PERMITTED BY APPLICABLE LAW, NEITHER RECIPIENT NOR ANY CONTRIBUTORS SHALL HAVE ANY LIABILITY FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING WITHOUT LIMITATION LOST PROFITS), HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OR DISTRIBUTION OF THE PROGRAM OR THE EXERCISE OF ANY RIGHTS GRANTED HEREUNDER, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.\n\n### 7. General\n\nIf any provision of this Agreement is invalid or unenforceable under applicable law, it shall not affect the validity or enforceability of the remainder of the terms of this Agreement, and without further action by the parties hereto, such provision shall be reformed to the minimum extent necessary to make such provision valid and enforceable.\n\nIf Recipient institutes patent litigation against any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the Program itself (excluding combinations of the Program with other software or hardware) infringes such Recipient's patent(s), then such Recipient's rights granted under Section 2(b) shall terminate as of the date such litigation is filed.\n\nAll Recipient's rights under this Agreement shall terminate if it fails to comply with any of the material terms or conditions of this Agreement and does not cure such failure in a reasonable period of time after becoming aware of such noncompliance. If all Recipient's rights under this Agreement terminate, Recipient agrees to cease use and distribution of the Program as soon as reasonably practicable. However, Recipient's obligations under this Agreement and any licenses granted by Recipient relating to the Program shall continue and survive.\n\nEveryone is permitted to copy and distribute copies of this Agreement, but in order to avoid inconsistency the Agreement is copyrighted and may only be modified in the following manner. The Agreement Steward reserves the right to publish new versions (including revisions) of this Agreement from time to time. No one other than the Agreement Steward has the right to modify this Agreement. The Eclipse Foundation is the initial Agreement Steward. The Eclipse Foundation may assign the responsibility to serve as the Agreement Steward to a suitable separate entity. Each new version of the Agreement will be given a distinguishing version number. The Program (including Contributions) may always be Distributed subject to the version of the Agreement under which it was received. In addition, after a new version of the Agreement is published, Contributor may elect to Distribute the Program (including its Contributions) under the new version.\n\nExcept as expressly stated in Sections 2(a) and 2(b) above, Recipient receives no rights or licenses to the intellectual property of any Contributor under this Agreement, whether expressly, by implication, estoppel or otherwise. All rights in the Program not expressly granted under this Agreement are reserved. Nothing in this Agreement is intended to be enforceable by any entity that is not a Contributor or Recipient. No third-party beneficiary rights are created under this Agreement.\n\n#### Exhibit A - Form of Secondary Licenses Notice\n\n> “This Source Code may also be made available under the following Secondary Licenses when the conditions for such availability set forth in the Eclipse Public License, v. 2.0 are satisfied: {name license(s), version(s), and exceptions or additional permissions here}.”\n\nSimply including a copy of this Agreement, including this Exhibit A is not sufficient to license the Source Code under Secondary Licenses.\n\nIf it is not possible or desirable to put the notice in a particular file, then You may include the notice in a location (such as a LICENSE file in a relevant directory) where a recipient would be likely to look for such a notice.\n\nYou may add additional accurate notices of copyright ownership.\n"
        },
        {
          "name": "NOTICE.md",
          "type": "blob",
          "size": 0.30859375,
          "content": "Open Source Licenses\n====================\n\nThis product may include a number of subcomponents with separate\ncopyright notices and license terms. Your use of the source code for\nthese subcomponents is subject to the terms and conditions of the\nsubcomponent's license, as noted in the LICENSE-<subcomponent>.md\nfiles.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.5830078125,
          "content": "# <img src=\"https://junit.org/junit5/assets/img/junit5-logo.png\" align=\"right\" width=\"100\">JUnit 5\n\nThis repository is the home of _JUnit 5_.\n\n## Sponsors\n\n[![Support JUnit](https://img.shields.io/badge/%F0%9F%92%9A-Support%20JUnit-brightgreen.svg)](https://junit.org/sponsoring)\n\n* **Gold Sponsors:** [JetBrains](https://jb.gg/junit-logo)\n* **Silver Sponsors:** [Micromata](https://www.micromata.de), [Quo Card](https://quo-digital.jp)\n* **Bronze Sponsors:** [Premium Minds](https://www.premium-minds.com), [Testmo](https://www.testmo.com), [codefortynine](https://codefortynine.com), [Info Support](https://www.infosupport.com), [Stiltsoft](https://stiltsoft.com), [Code Intelligence](https://www.code-intelligence.com), [Route4Me](https://route4me.com/), [Testiny](https://www.testiny.io/)\n\n## Latest Releases\n\n- General Availability (GA): [JUnit 5.11.4](https://github.com/junit-team/junit5/releases/tag/r5.11.4) (December 16, 2024)\n- Preview (Milestone/Release Candidate): N/A\n\n## Documentation\n\n- [User Guide]\n- [Javadoc]\n- [Release Notes]\n- [Samples]\n\n## Contributing\n\nContributions to JUnit 5 are both welcomed and appreciated. For specific guidelines\nregarding contributions, please see [CONTRIBUTING.md] in the root directory of the\nproject. Those willing to use milestone or SNAPSHOT releases are encouraged\nto file feature requests and bug reports using the project's\n[issue tracker](https://github.com/junit-team/junit5/issues). Issues marked with an\n<a href=\"https://github.com/junit-team/junit5/issues?q=is%3Aissue+is%3Aopen+label%3Aup-for-grabs\">`up-for-grabs`</a>\nlabel are specifically targeted for community contributions.\n\n## Getting Help\n\nAsk JUnit 5 related questions on [StackOverflow] or chat with the community on [Gitter].\n\n## Continuous Integration Builds\n\n[![CI Status](https://github.com/junit-team/junit5/workflows/CI/badge.svg)](https://github.com/junit-team/junit5/actions) [![Cross-Version Status](https://github.com/junit-team/junit5/workflows/Cross-Version/badge.svg)](https://github.com/junit-team/junit5/actions)\n\nOfficial CI build server for JUnit 5. Used to perform quick checks on submitted pull\nrequests and for build matrices including the latest released OpenJDK and early access\nbuilds of the next OpenJDK.\n\n## Code Coverage\n\nCode coverage using [JaCoCo] for the latest build is available on [Codecov].\n\nA code coverage report can also be generated locally via the [Gradle Wrapper] by\nexecuting `./gradlew clean jacocoRootReport`. The results will be available\nin `build/reports/jacoco/jacocoRootReport/html/index.html`.\n\n## Develocity\n\n[![Revved up by Develocity](https://img.shields.io/badge/Revved%20up%20by-Develocity-06A0CE?logo=Gradle&labelColor=02303A)](https://ge.junit.org/scans)\n\nJUnit 5 utilizes [Develocity](https://gradle.com/) for [Build Scans](https://scans.gradle.com/),\n[Build Cache](https://docs.gradle.org/current/userguide/build_cache.html), and\n[Predictive Test Selection](https://docs.gradle.com/enterprise/predictive-test-selection/).\n\nThe latest Build Scans are available on [ge.junit.org](https://ge.junit.org/). Currently,\nonly core team members can publish Build Scans on that server.\nYou can, however, publish a Build Scan to [scans.gradle.com](https://scans.gradle.com/) by\nusing the `--scan` parameter explicitly.\n\nThe remote Build Cache is enabled by default for everyone so that local builds can reuse\ntask outputs from previous CI builds.\n\n## Building from Source\n\nYou need [JDK 21] to build JUnit 5. [Gradle toolchains] are used to detect and\npotentially download additional JDKs for compilation and test execution.\n\nAll modules can be _built_ and _tested_ with the [Gradle Wrapper] using the following command.\n\n`./gradlew build`\n\n## Installing in Local Maven Repository\n\nAll modules can be _installed_ with the [Gradle Wrapper] in a local Maven repository for\nconsumption in other projects via the following command.\n\n`./gradlew publishToMavenLocal`\n\n## Dependency Metadata\n\n[![JUnit Jupiter version](https://img.shields.io/maven-central/v/org.junit.jupiter/junit-jupiter/5..svg?color=25a162&label=Jupiter)](https://central.sonatype.com/search?namespace=org.junit.jupiter)\n[![JUnit Vintage version](https://img.shields.io/maven-central/v/org.junit.vintage/junit-vintage-engine/5..svg?color=25a162&label=Vintage)](https://central.sonatype.com/search?namespace=org.junit.vintage)\n[![JUnit Platform version](https://img.shields.io/maven-central/v/org.junit.platform/junit-platform-commons/1..svg?color=25a162&label=Platform)](https://central.sonatype.com/search?namespace=org.junit.platform)\n\nConsult the [Dependency Metadata] section of the [User Guide] for a list of all artifacts\nof the JUnit Platform, JUnit Jupiter, and JUnit Vintage.\n\nSee also <https://repo1.maven.org/maven2/org/junit/> for releases and\n<https://oss.sonatype.org/content/repositories/snapshots/org/junit/> for snapshots.\n\n\n[Codecov]: https://codecov.io/gh/junit-team/junit5\n[CONTRIBUTING.md]: https://github.com/junit-team/junit5/blob/HEAD/CONTRIBUTING.md\n[Dependency Metadata]: https://junit.org/junit5/docs/current/user-guide/#dependency-metadata\n[Gitter]: https://gitter.im/junit-team/junit5\n[Gradle toolchains]: https://docs.gradle.org/current/userguide/toolchains.html\n[Gradle Wrapper]: https://docs.gradle.org/current/userguide/gradle_wrapper.html#sec:using_wrapper\n[JaCoCo]: https://www.eclemma.org/jacoco/\n[Javadoc]: https://junit.org/junit5/docs/current/api/\n[JDK 21]: https://javaalmanac.io/jdk/21/\n[Release Notes]: https://junit.org/junit5/docs/current/release-notes/\n[Samples]: https://github.com/junit-team/junit5-samples\n[StackOverflow]: https://stackoverflow.com/questions/tagged/junit5\n[User Guide]: https://junit.org/junit5/docs/current/user-guide/\n"
        },
        {
          "name": "RELEASING.md",
          "type": "blob",
          "size": 2.4873046875,
          "content": "# Releasing\n\n## Pre-release steps\n\n- [ ] Switch or create the release branch for this feature release (e.g. `releases/5.12.x`)\n- [ ] Change `version`, `platformVersion`, and `vintageVersion` in `gradle.properties` to the versions about to be released\n- [ ] Change release date in Release Notes\n- [ ] Change release date in `README.MD`\n- [ ] Commit with message \"Release ${VERSION}\"\n- [ ] Execute `./gradlew --no-build-cache --no-configuration-cache clean build publish closeSonatypeStagingRepository`\n- [ ] Tag current commit: `git tag -s -m ${VERSION} r${VERSION}`\n- [ ] Push release branch and tag to GitHub: `git push --set-upstream --follow-tags origin HEAD`\n- [ ] Trigger a [release build](https://github.com/junit-team/junit5/actions/workflows/release.yml): `gh workflow run --ref $(git rev-parse --abbrev-ref HEAD) -f releaseVersion=${VERSION} -f stagingRepoId=orgjunit-1234 release.yml`\n  - Select the release branch\n  - Enter the version to be released\n  - Enter the staging repository ID from the output of above Gradle build\n\n## Post-release steps\n\n- [ ] Change `version`, `platformVersion`, and `vintageVersion` properties in `gradle.properties` on release branch to new development versions and commit with message \"Back to snapshots for further development\" or similar and push to GitHub\n- [ ] Post about the new release:\n    - [ ] [Mastodon](https://fosstodon.org/@junit)\n    - [ ] [Bluesky](https://bsky.app/profile/junit.org)\n    - [ ] [Twitter/X](https://x.com/junitteam)\n\n### Preview releases (milestones and release candidates)\n\n- [ ] Fast-forward merge the release branch to `main` and push to GitHub\n- [ ] Create release notes for the next preview or feature release from the template\n\n### Feature releases (5.x.0)\n\n- [ ] Fast-forward merge the release branch to `main` and push to GitHub\n- [ ] Update the [security policy](https://github.com/junit-team/junit5/blob/main/SECURITY.md) and commit with message \"Update security policy to reflect 5.x release\" or similar\n- [ ] Create release notes for the next feature release from the template\n- [ ] Update [JBang catalog](https://github.com/junit-team/jbang-catalog/blob/main/jbang-catalog.json)\n\n### Patch releases (5.x.y)\n\n- [ ] Cherry-pick the tagged commit from the release branch to `main` and resolve the conflict in `gradle.properties` by choosing the version of the `main` branch\n- [ ] Include the release notes of the patch release on `main` if not already present\n- [ ] Update [JBang catalog](https://github.com/junit-team/jbang-catalog/blob/main/jbang-catalog.json)\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.7353515625,
          "content": "# Security Policy\n\n[![OpenSSF Best Practices](https://www.bestpractices.dev/projects/9607/badge)](https://www.bestpractices.dev/projects/9607) [![OpenSSF Scorecard](https://api.scorecard.dev/projects/github.com/junit-team/junit5/badge)](https://scorecard.dev/viewer/?uri=github.com/junit-team/junit5)\n\n## Supported Versions\n\n| Version | Supported          |\n|---------| ------------------ |\n| 5.11.x  | :white_check_mark: |\n| < 5.11  | :x:                |\n\n## Reporting a Vulnerability\n\nTo report a security vulnerability, please send an email to security@junit.org. You can use the [published OpenPGP key](https://keys.openpgp.org/search?q=security%40junit.org) with fingerprint `0152DA30EABC7ABADCB09D10D9A6B1329D191D25` to encrypt the message body.\n"
        },
        {
          "name": "build.gradle.kts",
          "type": "blob",
          "size": 1.8017578125,
          "content": "plugins {\n\talias(libs.plugins.nexusPublish)\n\tid(\"junitbuild.base-conventions\")\n\tid(\"junitbuild.build-metadata\")\n\tid(\"junitbuild.checkstyle-nohttp\")\n\tid(\"junitbuild.dependency-update-check\")\n\tid(\"junitbuild.jacoco-aggregation-conventions\")\n\tid(\"junitbuild.temp-maven-repo\")\n}\n\ndescription = \"JUnit 5\"\n\nval license by extra(License(\n\tname = \"Eclipse Public License v2.0\",\n\turl = uri(\"https://www.eclipse.org/legal/epl-v20.html\"),\n\theaderFile = layout.projectDirectory.file(\"gradle/config/spotless/eclipse-public-license-2.0.java\")\n))\n\nval platformProjects by extra(listOf(\n\t\tprojects.junitPlatformCommons,\n\t\tprojects.junitPlatformConsole,\n\t\tprojects.junitPlatformConsoleStandalone,\n\t\tprojects.junitPlatformEngine,\n\t\tprojects.junitPlatformJfr,\n\t\tprojects.junitPlatformLauncher,\n\t\tprojects.junitPlatformReporting,\n\t\tprojects.junitPlatformRunner,\n\t\tprojects.junitPlatformSuite,\n\t\tprojects.junitPlatformSuiteApi,\n\t\tprojects.junitPlatformSuiteCommons,\n\t\tprojects.junitPlatformSuiteEngine,\n\t\tprojects.junitPlatformTestkit\n).map { dependencyProject(it) })\n\nval jupiterProjects by extra(listOf(\n\t\tprojects.junitJupiter,\n\t\tprojects.junitJupiterApi,\n\t\tprojects.junitJupiterEngine,\n\t\tprojects.junitJupiterMigrationsupport,\n\t\tprojects.junitJupiterParams\n).map { dependencyProject(it) })\n\nval vintageProjects by extra(listOf(\n\tdependencyProject(projects.junitVintageEngine)\n))\n\nval mavenizedProjects by extra(platformProjects + jupiterProjects + vintageProjects)\nval modularProjects by extra(mavenizedProjects - setOf(dependencyProject(projects.junitPlatformConsoleStandalone)))\n\ndependencies {\n\tmodularProjects.forEach {\n\t\tjacocoAggregation(it)\n\t}\n\tjacocoAggregation(projects.documentation)\n\tjacocoAggregation(projects.jupiterTests)\n\tjacocoAggregation(projects.platformTests)\n}\n\nnexusPublishing {\n\tpackageGroup = \"org.junit\"\n\trepositories {\n\t\tsonatype()\n\t}\n}\n"
        },
        {
          "name": "documentation",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradle.properties",
          "type": "blob",
          "size": 1.265625,
          "content": "group           = org.junit\nversion         = 5.12.0-SNAPSHOT\n\njupiterGroup    = org.junit.jupiter\n\nplatformGroup   = org.junit.platform\nplatformVersion = 1.12.0-SNAPSHOT\n\nvintageGroup    = org.junit.vintage\nvintageVersion  = 5.12.0-SNAPSHOT\n\n# We need more metaspace due to apparent memory leak in Asciidoctor/JRuby\n# The exports are needed due to https://github.com/diffplug/spotless/issues/834\norg.gradle.jvmargs=-Xmx1g -XX:MaxMetaspaceSize=512m -XX:+HeapDumpOnOutOfMemoryError \\\n  --add-exports jdk.compiler/com.sun.tools.javac.api=ALL-UNNAMED \\\n  --add-exports jdk.compiler/com.sun.tools.javac.file=ALL-UNNAMED \\\n  --add-exports jdk.compiler/com.sun.tools.javac.parser=ALL-UNNAMED \\\n  --add-exports jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED \\\n  --add-exports jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED\norg.gradle.caching=true\norg.gradle.parallel=true\norg.gradle.configuration-cache.parallel=true\norg.gradle.java.installations.fromEnv=JDK8,JDK18,JDK19,JDK20,JDK21,JDK22,JDK23,JDK24\norg.gradle.kotlin.dsl.allWarningsAsErrors=true\n\n# Test Distribution\ndevelocity.internal.testdistribution.writeTraceFile=true\n\n# Omit automatic compile dependency on kotlin-stdlib\n# https://kotlinlang.org/docs/gradle.html#dependency-on-the-standard-library\nkotlin.stdlib.default.dependency=false\n"
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 8.5576171875,
          "content": "#!/bin/sh\n\n#\n# Copyright © 2015-2021 the original authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      https://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n# SPDX-License-Identifier: Apache-2.0\n#\n\n##############################################################################\n#\n#   Gradle start up script for POSIX generated by Gradle.\n#\n#   Important for running:\n#\n#   (1) You need a POSIX-compliant shell to run this script. If your /bin/sh is\n#       noncompliant, but you have some other compliant shell such as ksh or\n#       bash, then to run this script, type that shell name before the whole\n#       command line, like:\n#\n#           ksh Gradle\n#\n#       Busybox and similar reduced shells will NOT work, because this script\n#       requires all of these POSIX shell features:\n#         * functions;\n#         * expansions «$var», «${var}», «${var:-default}», «${var+SET}»,\n#           «${var#prefix}», «${var%suffix}», and «$( cmd )»;\n#         * compound commands having a testable exit status, especially «case»;\n#         * various built-in commands including «command», «set», and «ulimit».\n#\n#   Important for patching:\n#\n#   (2) This script targets any POSIX shell, so it avoids extensions provided\n#       by Bash, Ksh, etc; in particular arrays are avoided.\n#\n#       The \"traditional\" practice of packing multiple parameters into a\n#       space-separated string is a well documented source of bugs and security\n#       problems, so this is (mostly) avoided, by progressively accumulating\n#       options in \"$@\", and eventually passing that to Java.\n#\n#       Where the inherited environment variables (DEFAULT_JVM_OPTS, JAVA_OPTS,\n#       and GRADLE_OPTS) rely on word-splitting, this is performed explicitly;\n#       see the in-line comments for details.\n#\n#       There are tweaks for specific operating systems such as AIX, CygWin,\n#       Darwin, MinGW, and NonStop.\n#\n#   (3) This script is generated from the Groovy template\n#       https://github.com/gradle/gradle/blob/HEAD/platforms/jvm/plugins-application/src/main/resources/org/gradle/api/internal/plugins/unixStartScript.txt\n#       within the Gradle project.\n#\n#       You can find Gradle at https://github.com/gradle/gradle/.\n#\n##############################################################################\n\n# Attempt to set APP_HOME\n\n# Resolve links: $0 may be a link\napp_path=$0\n\n# Need this for daisy-chained symlinks.\nwhile\n    APP_HOME=${app_path%\"${app_path##*/}\"}  # leaves a trailing /; empty if no leading path\n    [ -h \"$app_path\" ]\ndo\n    ls=$( ls -ld \"$app_path\" )\n    link=${ls#*' -> '}\n    case $link in             #(\n      /*)   app_path=$link ;; #(\n      *)    app_path=$APP_HOME$link ;;\n    esac\ndone\n\n# This is normally unused\n# shellcheck disable=SC2034\nAPP_BASE_NAME=${0##*/}\n# Discard cd standard output in case $CDPATH is set (https://github.com/gradle/gradle/issues/25036)\nAPP_HOME=$( cd -P \"${APP_HOME:-./}\" > /dev/null && printf '%s\\n' \"$PWD\" ) || exit\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=maximum\n\nwarn () {\n    echo \"$*\"\n} >&2\n\ndie () {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n} >&2\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\nnonstop=false\ncase \"$( uname )\" in                #(\n  CYGWIN* )         cygwin=true  ;; #(\n  Darwin* )         darwin=true  ;; #(\n  MSYS* | MINGW* )  msys=true    ;; #(\n  NONSTOP* )        nonstop=true ;;\nesac\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=$JAVA_HOME/jre/sh/java\n    else\n        JAVACMD=$JAVA_HOME/bin/java\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=java\n    if ! command -v java >/dev/null 2>&1\n    then\n        die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nfi\n\n# Increase the maximum file descriptors if we can.\nif ! \"$cygwin\" && ! \"$darwin\" && ! \"$nonstop\" ; then\n    case $MAX_FD in #(\n      max*)\n        # In POSIX sh, ulimit -H is undefined. That's why the result is checked to see if it worked.\n        # shellcheck disable=SC2039,SC3045\n        MAX_FD=$( ulimit -H -n ) ||\n            warn \"Could not query maximum file descriptor limit\"\n    esac\n    case $MAX_FD in  #(\n      '' | soft) :;; #(\n      *)\n        # In POSIX sh, ulimit -n is undefined. That's why the result is checked to see if it worked.\n        # shellcheck disable=SC2039,SC3045\n        ulimit -n \"$MAX_FD\" ||\n            warn \"Could not set maximum file descriptor limit to $MAX_FD\"\n    esac\nfi\n\n# Collect all arguments for the java command, stacking in reverse order:\n#   * args from the command line\n#   * the main class name\n#   * -classpath\n#   * -D...appname settings\n#   * --module-path (only if needed)\n#   * DEFAULT_JVM_OPTS, JAVA_OPTS, and GRADLE_OPTS environment variables.\n\n# For Cygwin or MSYS, switch paths to Windows format before running java\nif \"$cygwin\" || \"$msys\" ; then\n    APP_HOME=$( cygpath --path --mixed \"$APP_HOME\" )\n    CLASSPATH=$( cygpath --path --mixed \"$CLASSPATH\" )\n\n    JAVACMD=$( cygpath --unix \"$JAVACMD\" )\n\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    for arg do\n        if\n            case $arg in                                #(\n              -*)   false ;;                            # don't mess with options #(\n              /?*)  t=${arg#/} t=/${t%%/*}              # looks like a POSIX filepath\n                    [ -e \"$t\" ] ;;                      #(\n              *)    false ;;\n            esac\n        then\n            arg=$( cygpath --path --ignore --mixed \"$arg\" )\n        fi\n        # Roll the args list around exactly as many times as the number of\n        # args, so each arg winds up back in the position where it started, but\n        # possibly modified.\n        #\n        # NB: a `for` loop captures its iteration list before it begins, so\n        # changing the positional parameters here affects neither the number of\n        # iterations, nor the values presented in `arg`.\n        shift                   # remove old arg\n        set -- \"$@\" \"$arg\"      # push replacement arg\n    done\nfi\n\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS='\"-Xmx64m\" \"-Xms64m\"'\n\n# Collect all arguments for the java command:\n#   * DEFAULT_JVM_OPTS, JAVA_OPTS, JAVA_OPTS, and optsEnvironmentVar are not allowed to contain shell fragments,\n#     and any embedded shellness will be escaped.\n#   * For example: A user cannot expect ${Hostname} to be expanded, as it is an environment variable and will be\n#     treated as '${Hostname}' itself on the command line.\n\nset -- \\\n        \"-Dorg.gradle.appname=$APP_BASE_NAME\" \\\n        -classpath \"$CLASSPATH\" \\\n        org.gradle.wrapper.GradleWrapperMain \\\n        \"$@\"\n\n# Stop when \"xargs\" is not available.\nif ! command -v xargs >/dev/null 2>&1\nthen\n    die \"xargs is not available\"\nfi\n\n# Use \"xargs\" to parse quoted args.\n#\n# With -n1 it outputs one arg per line, with the quotes and backslashes removed.\n#\n# In Bash we could simply go:\n#\n#   readarray ARGS < <( xargs -n1 <<<\"$var\" ) &&\n#   set -- \"${ARGS[@]}\" \"$@\"\n#\n# but POSIX shell has neither arrays nor command substitution, so instead we\n# post-process each arg (as a line of input to sed) to backslash-escape any\n# character that might be a shell metacharacter, then use eval to reverse\n# that process (while maintaining the separation between arguments), and wrap\n# the whole thing up as a single \"set\" statement.\n#\n# This will of course break if any of these variables contains a newline or\n# an unmatched quote.\n#\n\neval \"set -- $(\n        printf '%s\\n' \"$DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS\" |\n        xargs -n1 |\n        sed ' s~[^-[:alnum:]+,./:=@_]~\\\\&~g; ' |\n        tr '\\n' ' '\n    )\" '\"$@\"'\n\nexec \"$JAVACMD\" \"$@\"\n"
        },
        {
          "name": "gradlew.bat",
          "type": "blob",
          "size": 2.8046875,
          "content": "@rem\n@rem Copyright 2015 the original author or authors.\n@rem\n@rem Licensed under the Apache License, Version 2.0 (the \"License\");\n@rem you may not use this file except in compliance with the License.\n@rem You may obtain a copy of the License at\n@rem\n@rem      https://www.apache.org/licenses/LICENSE-2.0\n@rem\n@rem Unless required by applicable law or agreed to in writing, software\n@rem distributed under the License is distributed on an \"AS IS\" BASIS,\n@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@rem See the License for the specific language governing permissions and\n@rem limitations under the License.\n@rem\n@rem SPDX-License-Identifier: Apache-2.0\n@rem\n\n@if \"%DEBUG%\"==\"\" @echo off\n@rem ##########################################################################\n@rem\n@rem  Gradle startup script for Windows\n@rem\n@rem ##########################################################################\n\n@rem Set local scope for the variables with windows NT shell\nif \"%OS%\"==\"Windows_NT\" setlocal\n\nset DIRNAME=%~dp0\nif \"%DIRNAME%\"==\"\" set DIRNAME=.\n@rem This is normally unused\nset APP_BASE_NAME=%~n0\nset APP_HOME=%DIRNAME%\n\n@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.\nfor %%i in (\"%APP_HOME%\") do set APP_HOME=%%~fi\n\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nset DEFAULT_JVM_OPTS=\"-Xmx64m\" \"-Xms64m\"\n\n@rem Find java.exe\nif defined JAVA_HOME goto findJavaFromJavaHome\n\nset JAVA_EXE=java.exe\n%JAVA_EXE% -version >NUL 2>&1\nif %ERRORLEVEL% equ 0 goto execute\n\necho. 1>&2\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH. 1>&2\necho. 1>&2\necho Please set the JAVA_HOME variable in your environment to match the 1>&2\necho location of your Java installation. 1>&2\n\ngoto fail\n\n:findJavaFromJavaHome\nset JAVA_HOME=%JAVA_HOME:\"=%\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\n\nif exist \"%JAVA_EXE%\" goto execute\n\necho. 1>&2\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME% 1>&2\necho. 1>&2\necho Please set the JAVA_HOME variable in your environment to match the 1>&2\necho location of your Java installation. 1>&2\n\ngoto fail\n\n:execute\n@rem Setup the command line\n\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\n\n\n@rem Execute Gradle\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*\n\n:end\n@rem End local scope for the variables with windows NT shell\nif %ERRORLEVEL% equ 0 goto mainEnd\n\n:fail\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\nrem the _cmd.exe /c_ return code!\nset EXIT_CODE=%ERRORLEVEL%\nif %EXIT_CODE% equ 0 set EXIT_CODE=1\nif not \"\"==\"%GRADLE_EXIT_CONSOLE%\" exit %EXIT_CODE%\nexit /b %EXIT_CODE%\n\n:mainEnd\nif \"%OS%\"==\"Windows_NT\" endlocal\n\n:omega\n"
        },
        {
          "name": "junit-bom",
          "type": "tree",
          "content": null
        },
        {
          "name": "junit-jupiter-api",
          "type": "tree",
          "content": null
        },
        {
          "name": "junit-jupiter-engine",
          "type": "tree",
          "content": null
        },
        {
          "name": "junit-jupiter-migrationsupport",
          "type": "tree",
          "content": null
        },
        {
          "name": "junit-jupiter-params",
          "type": "tree",
          "content": null
        },
        {
          "name": "junit-jupiter",
          "type": "tree",
          "content": null
        },
        {
          "name": "junit-platform-commons",
          "type": "tree",
          "content": null
        },
        {
          "name": "junit-platform-console-standalone",
          "type": "tree",
          "content": null
        },
        {
          "name": "junit-platform-console",
          "type": "tree",
          "content": null
        },
        {
          "name": "junit-platform-engine",
          "type": "tree",
          "content": null
        },
        {
          "name": "junit-platform-jfr",
          "type": "tree",
          "content": null
        },
        {
          "name": "junit-platform-launcher",
          "type": "tree",
          "content": null
        },
        {
          "name": "junit-platform-reporting",
          "type": "tree",
          "content": null
        },
        {
          "name": "junit-platform-runner",
          "type": "tree",
          "content": null
        },
        {
          "name": "junit-platform-suite-api",
          "type": "tree",
          "content": null
        },
        {
          "name": "junit-platform-suite-commons",
          "type": "tree",
          "content": null
        },
        {
          "name": "junit-platform-suite-engine",
          "type": "tree",
          "content": null
        },
        {
          "name": "junit-platform-suite",
          "type": "tree",
          "content": null
        },
        {
          "name": "junit-platform-testkit",
          "type": "tree",
          "content": null
        },
        {
          "name": "junit-vintage-engine",
          "type": "tree",
          "content": null
        },
        {
          "name": "jupiter-tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "platform-tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "platform-tooling-support-tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "settings.gradle.kts",
          "type": "blob",
          "size": 2.6005859375,
          "content": "import buildparameters.BuildParametersExtension\n\npluginManagement {\n\tincludeBuild(\"gradle/plugins\")\n\trepositories {\n\t\tgradlePluginPortal()\n\t}\n}\n\nplugins {\n\tid(\"junitbuild.build-parameters\")\n\tid(\"junitbuild.settings-conventions\")\n}\n\ndependencyResolutionManagement {\n\trepositories {\n\t\tmavenCentral()\n\t}\n}\n\nval buildParameters = the<BuildParametersExtension>()\nval develocityServer = \"https://ge.junit.org\"\nval useDevelocityInstance = !gradle.startParameter.isBuildScan\n\ndevelocity {\n\tif (useDevelocityInstance) {\n\t\t// Publish to scans.gradle.com when `--scan` is used explicitly\n\t\tserver = develocityServer\n\t}\n\tbuildScan {\n\t\tuploadInBackground = !buildParameters.ci\n\n\t\tpublishing {\n\t\t\tonlyIf { it.isAuthenticated }\n\t\t}\n\n\t\tobfuscation {\n\t\t\tif (buildParameters.ci) {\n\t\t\t\tusername { \"github\" }\n\t\t\t} else {\n\t\t\t\thostname { null }\n\t\t\t\tipAddresses { emptyList() }\n\t\t\t}\n\t\t}\n\n\t\tif (buildParameters.junit.develocity.testDistribution.enabled) {\n\t\t\ttag(\"test-distribution\")\n\t\t}\n\t}\n}\n\nbuildCache {\n\tlocal {\n\t\tisEnabled = !buildParameters.ci\n\t}\n\tval buildCacheServer = buildParameters.junit.develocity.buildCache.server\n\tif (useDevelocityInstance) {\n\t\tremote(develocity.buildCache) {\n\t\t\tserver = buildCacheServer.orNull\n\t\t\tval authenticated = System.getenv(\"DEVELOCITY_ACCESS_KEY\") != null\n\t\t\tisPush = buildParameters.ci && authenticated\n\t\t}\n\t} else {\n\t\tremote<HttpBuildCache> {\n\t\t\turl = uri(buildCacheServer.getOrElse(develocityServer)).resolve(\"/cache/\")\n\t\t}\n\t}\n}\n\nincludeBuild(\"gradle/base\")\n\nrootProject.name = \"junit5\"\n\ninclude(\"documentation\")\ninclude(\"junit-jupiter\")\ninclude(\"junit-jupiter-api\")\ninclude(\"junit-jupiter-engine\")\ninclude(\"junit-jupiter-migrationsupport\")\ninclude(\"junit-jupiter-params\")\ninclude(\"junit-platform-commons\")\ninclude(\"junit-platform-console\")\ninclude(\"junit-platform-console-standalone\")\ninclude(\"junit-platform-engine\")\ninclude(\"junit-platform-jfr\")\ninclude(\"junit-platform-launcher\")\ninclude(\"junit-platform-reporting\")\ninclude(\"junit-platform-runner\")\ninclude(\"junit-platform-suite\")\ninclude(\"junit-platform-suite-api\")\ninclude(\"junit-platform-suite-commons\")\ninclude(\"junit-platform-suite-engine\")\ninclude(\"junit-platform-testkit\")\ninclude(\"junit-vintage-engine\")\ninclude(\"jupiter-tests\")\ninclude(\"platform-tests\")\ninclude(\"platform-tooling-support-tests\")\ninclude(\"junit-bom\")\n\n// check that every subproject has a custom build file\n// based on the project name\nrootProject.children.forEach { project ->\n\tproject.buildFileName = \"${project.name}.gradle.kts\"\n\trequire(project.buildFile.isFile) {\n\t\t\"${project.buildFile} must exist\"\n\t}\n}\n\nenableFeaturePreview(\"STABLE_CONFIGURATION_CACHE\")\nenableFeaturePreview(\"TYPESAFE_PROJECT_ACCESSORS\")\n"
        }
      ]
    }
  ]
}