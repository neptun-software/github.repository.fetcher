{
  "metadata": {
    "timestamp": 1736708766914,
    "page": 248,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "JakeWharton/u2020",
      "stars": 5676,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0595703125,
          "content": ".gradle\nreports\nlocal.properties\n.idea\n*.iml\nbuild\n.DS_Store\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 1.1494140625,
          "content": "language: android\n\njdk:\n  - oraclejdk8\n\nbefore_install:\n  # Install SDK license so Android Gradle plugin can install deps.\n  - mkdir \"$ANDROID_HOME/licenses\" || true\n  - echo \"d56f5187479451eabf01fb78af6dfcb131a6481e\" > \"$ANDROID_HOME/licenses/android-sdk-license\"\n  # Install the rest of tools (e.g., avdmanager).\n  - sdkmanager tools\n  # Install the system image.\n  - sdkmanager \"system-images;android-19;default;armeabi-v7a\"\n  # Create and start emulator for the script. Meant to race the install task.\n  - echo no | avdmanager create avd --force -n test -k \"system-images;android-19;default;armeabi-v7a\"\n  - $ANDROID_HOME/emulator/emulator -avd test -no-audio -no-window &\n\ninstall: ./gradlew clean assemble --stacktrace\n\nbefore_script:\n  - android-wait-for-emulator\n  - adb shell settings put global window_animation_scale 0 &\n  - adb shell settings put global transition_animation_scale 0 &\n  - adb shell settings put global animator_duration_scale 0 &\n  - adb shell input keyevent 82 &\n\nscript: ./gradlew check connectedCheck --stacktrace\n\nenv:\n  global:\n    - ADB_INSTALL_TIMEOUT=8\n\nnotifications:\n  email: false\n\nsudo: false\n\ncache:\n  directories:\n    - $HOME/.gradle\n"
        },
        {
          "name": "ATTRIBUTION.md",
          "type": "blob",
          "size": 0.3896484375,
          "content": "error.png\nCC BY 3.0\nhttp://thenounproject.com/term/dead/78575/\n\nloading.png\nCC BY 3.0\nhttp://thenounproject.com/term/smile/71417/\n\nerror.png\nCC BY 3.0\nModified from http://thenounproject.com/term/smile/71417/\n\ntelescope_tutorial_thumbs_up.png\nCC BY 3.0\nhttps://thenounproject.com/term/thumbs-up/40917/\n\ntelescope_tutorial_two_finger.png\nCC BY 3.0\nhttps://thenounproject.com/term/tap-and-hold/13944/\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 11.091796875,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.5625,
          "content": "U+2020\n======\n\nA sample Android app which showcases advanced usage of Dagger among other open source libraries.\n\n[Watch the corresponding talk][video] or [view the slides][slides].\n\nThe `ObjectGraph` is created in the `U2020App`'s `onCreate` method. The `Modules` class provides a\nsingle method, `list`, which returns the list of module instances to use.\n\nIn order to add functionality in the 'debug' version of the app, this class is only present in the\n`release/` and `debug/` build type folders. The 'release' version only includes the `U2020Module` while\nthe 'debug' version includes both `U2020Module` and `DebugU2020Module`, the latter of which is only\npresent in the `debug/` build type folder and is an override module.\n\nThrough the use of Dagger overrides, the 'debug' version of the app adds a slew of debugging\nfeatures to the app which are presented in the Debug Drawer™. The drawer is opened by a bezel\nswipe from the right of the screen. From here you can change and view all of the developer options\nof the application.\n\nThe drawer is provided by the simple interface `ViewContainer`. This is an indirection that the\nsingle activity uses to fetch its container into which it can place its content. The default\nimplementation returns the Android-provided content view. The 'debug' version overrides this with\n`DebugViewContainer` which is responsible for creating the drawer, adding it to the activity, and\nreturning its content view group. It also injects all of the developer objects and binds them to\ncontrols in the drawer.\n\nThe most notable feature the 'debug' version exposes is the concept of endpoints. Using the spinner\nat the top of the drawer, you can change the endpoint to which the app communicates. We also expose\na false endpoint named \"Mock Mode\" which simulates an in-memory server inside the app. This \"Mock\nMode\" eases manual testing and also provides a static set of data to write instrumentation tests\nagainst.\n\n\"Mock Mode\" can be queried when modules are configuring their dependencies which is what allows\nsimulating the remote server in-memory.\n```java\n@Singleton class MockFoo() {\n  @Inject MockFoo() {}\n  // ...\n}\n```\n```java\n@Provides @Singleton Foo provideFoo(@IsMockMode boolean isMockMode, MockFoo mockFoo) {\n  return isMockMode ? return mockFoo : new RealFoo();\n}\n```\nSee `DebugDataModule` and `DebugApiModule` to see this in action in the real app.\n\nThe mock implementations of these types are some of those injected into the `DebugViewContainer` for\nbinding in the drawer. This allows us to do things like control their fake network behavior and\nalter their behavior.\n\nIn order to keep the shared state which represents the server-side data we use a `ServerDatabase`\nsingleton. At present this is only done with a combination of in-memory collections and images in\nthe `debug/assets/`. In a more complex app you could even use a full database. This class is\ninjected into each mock service which uses its methods to query and mutate state\n(e.g., `MockGalleryService`).\n\n![Debug drawer](u2020.gif)\n\n\n\nLibraries\n---------\n\n * Dagger - http://square.github.io/dagger\n * ButterKnife - http://jakewharton.github.io/butterknife\n * Retrofit - http://square.github.io/retrofit\n * Moshi - https://github.com/square/moshi\n * Picasso - http://square.github.io/picasso\n * OkHttp - http://square.github.io/okhttp\n * RxJava - https://github.com/ReactiveX/RxJava\n * Timber - http://github.com/JakeWharton/timber\n * Madge - http://github.com/JakeWharton/madge\n * ProcessPhoenix - https://github.com/JakeWharton/ProcessPhoenix\n * Scalpel - http://github.com/JakeWharton/scalpel\n * LeakCanary - http://github.com/square/leakcanary\n * Telescope - https://github.com/mattprecious/telescope\n\n\n\nTo Do\n-----\n\n * Something with animations to showcase animation control.\n * Network errors probably crash the app.\n * Add another part of the app other than 'trending' so we can demo child graphs.\n\n\n\nLicense\n-------\n\n    Copyright 2014 Jake Wharton\n\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n\n [video]: https://www.youtube.com/watch?v=0XHx9jtxIxU\n [slides]: https://speakerdeck.com/jakewharton/android-apps-with-dagger-devoxx-2013\n"
        },
        {
          "name": "app",
          "type": "tree",
          "content": null
        },
        {
          "name": "art",
          "type": "tree",
          "content": null
        },
        {
          "name": "build.gradle",
          "type": "blob",
          "size": 5.115234375,
          "content": "buildscript {\n  ext.isCi = Boolean.parseBoolean(System.getProperty('CI', 'false'))\n\n  ext.versions = [\n      'compileSdk': 26,\n      'buildTools': '26.0.1',\n      'minSdk': 19,\n      'targetSdk': 25,\n\n      'supportLibrary': '26.0.2',\n      'dagger': '1.2.5',\n      'okhttp': '3.8.1',\n      'retrofit': '2.3.0',\n      'butterKnife': '8.8.1',\n      'leakCanary': '1.5.1',\n      'espresso': '2.2.2',\n      'astl': '0.5',\n      'errorProne': '2.1.1',\n  ]\n\n  ext.deps = [\n      'support': [\n          'annotations': \"com.android.support:support-annotations:${versions.supportLibrary}\",\n          'v4': \"com.android.support:support-v4:${versions.supportLibrary}\",\n          'appCompat': \"com.android.support:appcompat-v7:${versions.supportLibrary}\",\n          'design': \"com.android.support:design:${versions.supportLibrary}\",\n          'recyclerView': \"com.android.support:recyclerview-v7:${versions.supportLibrary}\",\n      ],\n      'dagger': [\n          'runtime': \"com.squareup.dagger:dagger:${versions.dagger}\",\n          'compiler': \"com.squareup.dagger:dagger-compiler:${versions.dagger}\",\n      ],\n      'okhttp': [\n          'core': \"com.squareup.okhttp3:okhttp:${versions.okhttp}\",\n          'logger': \"com.squareup.okhttp3:logging-interceptor:${versions.okhttp}\",\n      ],\n      'okio': 'com.squareup.okio:okio:1.13.0',\n      'picasso': 'com.squareup.picasso:picasso:2.5.2',\n      'picassoOkHttpDownloader': 'com.jakewharton.picasso:picasso2-okhttp3-downloader:1.1.0',\n      'retrofit': [\n          'core': \"com.squareup.retrofit2:retrofit:${versions.retrofit}\",\n          'mock': \"com.squareup.retrofit2:retrofit-mock:${versions.retrofit}\",\n          'moshi': \"com.squareup.retrofit2:converter-moshi:${versions.retrofit}\",\n          'rxjava': \"com.squareup.retrofit2:adapter-rxjava:${versions.retrofit}\",\n      ],\n      'moshi': 'com.squareup.moshi:moshi:1.5.0',\n      'butterKnife': [\n          'runtime': \"com.jakewharton:butterknife:${versions.butterKnife}\",\n          'compiler': \"com.jakewharton:butterknife-compiler:${versions.butterKnife}\",\n      ],\n      'timber': 'com.jakewharton.timber:timber:4.5.1',\n      'byteUnits': 'com.jakewharton.byteunits:byteunits:0.9.1',\n      'rxbinding': 'com.jakewharton.rxbinding:rxbinding:1.0.1',\n      'madge': 'com.jakewharton.madge:madge:1.1.4',\n      'scalpel': 'com.jakewharton.scalpel:scalpel:1.1.2',\n      'processPhoenix': 'com.jakewharton:process-phoenix:2.0.0',\n      'leakCanary': [\n          'real': \"com.squareup.leakcanary:leakcanary-android:${versions.leakCanary}\",\n          'noOp': \"com.squareup.leakcanary:leakcanary-android-no-op:${versions.leakCanary}\",\n      ],\n      'rx': [\n          'core': 'io.reactivex:rxjava:1.3.0',\n          'android': 'io.reactivex:rxandroid:1.2.1',\n          'preferences': 'com.f2prateek.rx.preferences:rx-preferences:1.0.2',\n      ],\n      'threeTenAbp': 'com.jakewharton.threetenabp:threetenabp:1.0.5',\n      'telescope': 'com.mattprecious.telescope:telescope:2.1.0',\n      'junit': 'junit:junit:4.12',\n      'espresso': [\n          'core': \"com.android.support.test.espresso:espresso-core:${versions.espresso}\",\n          'contrib': \"com.android.support.test.espresso:espresso-contrib:${versions.espresso}\",\n      ],\n      'astl': [\n          'runner': \"com.android.support.test:runner:${versions.astl}\",\n          'rules': \"com.android.support.test:rules:${versions.astl}\",\n      ],\n      'spoon': 'com.squareup.spoon:spoon-client:1.7.1',\n      'truth': 'com.google.truth:truth:0.34',\n      'errorProneAnnotations': \"com.google.errorprone:error_prone_annotations:${versions.errorProne}\",\n  ]\n\n  repositories {\n    google()\n    mavenCentral()\n    jcenter()\n    maven {\n      url 'https://plugins.gradle.org/m2'\n    }\n  }\n\n  dependencies {\n    classpath 'com.android.tools.build:gradle:3.0.0-beta6'\n    classpath 'com.stanfy.spoon:spoon-gradle-plugin:1.2.2'\n    classpath 'net.ltgt.gradle:gradle-errorprone-plugin:0.0.11'\n  }\n}\n\nsubprojects {\n  repositories {\n    google()\n    mavenCentral()\n    jcenter()\n  }\n\n  configurations.all {\n    resolutionStrategy {\n      eachDependency { details ->\n        // Force all of the primary support libraries to use the same version.\n        if (details.requested.group == 'com.android.support'\n            && details.requested.name != 'multidex'\n            && details.requested.name != 'multidex-instrumentation') {\n          details.useVersion versions.supportLibrary\n        }\n        // Force all the error-prone dependencies to use the same version.\n        if (details.requested.group == 'com.google.errorprone'\n            && details.requested.name.startsWith('error_prone_')) {\n          details.useVersion versions.errorProne\n        }\n      }\n    }\n  }\n\n  if (isCi) {\n    project.apply(plugin: 'net.ltgt.errorprone')\n\n    project.tasks.withType(JavaCompile) {\n      options.compilerArgs += [\n          '-Xep:UnnecessaryDefaultInEnumSwitch:ERROR',\n          '-Xep:TypeParameterUnusedInFormals:ERROR',\n          '-Xep:MissingOverride:ERROR',\n          '-Xep:ClassCanBeStatic:ERROR',\n          '-Xep:OperatorPrecedence:ERROR',\n          '-Xep:ReferenceEquality:ERROR',\n          '-Xep:FloatingPointLiteralPrecision:ERROR',\n          '-Xep:SimpleDateFormatConstant:ERROR',\n      ]\n    }\n  }\n}\n"
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 5.171875,
          "content": "#!/usr/bin/env sh\n\n##############################################################################\n##\n##  Gradle start up script for UN*X\n##\n##############################################################################\n\n# Attempt to set APP_HOME\n# Resolve links: $0 may be a link\nPRG=\"$0\"\n# Need this for relative symlinks.\nwhile [ -h \"$PRG\" ] ; do\n    ls=`ls -ld \"$PRG\"`\n    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n    if expr \"$link\" : '/.*' > /dev/null; then\n        PRG=\"$link\"\n    else\n        PRG=`dirname \"$PRG\"`\"/$link\"\n    fi\ndone\nSAVED=\"`pwd`\"\ncd \"`dirname \\\"$PRG\\\"`/\" >/dev/null\nAPP_HOME=\"`pwd -P`\"\ncd \"$SAVED\" >/dev/null\n\nAPP_NAME=\"Gradle\"\nAPP_BASE_NAME=`basename \"$0\"`\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS=\"\"\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=\"maximum\"\n\nwarn () {\n    echo \"$*\"\n}\n\ndie () {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n}\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\nnonstop=false\ncase \"`uname`\" in\n  CYGWIN* )\n    cygwin=true\n    ;;\n  Darwin* )\n    darwin=true\n    ;;\n  MINGW* )\n    msys=true\n    ;;\n  NONSTOP* )\n    nonstop=true\n    ;;\nesac\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n    else\n        JAVACMD=\"$JAVA_HOME/bin/java\"\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=\"java\"\n    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\nfi\n\n# Increase the maximum file descriptors if we can.\nif [ \"$cygwin\" = \"false\" -a \"$darwin\" = \"false\" -a \"$nonstop\" = \"false\" ] ; then\n    MAX_FD_LIMIT=`ulimit -H -n`\n    if [ $? -eq 0 ] ; then\n        if [ \"$MAX_FD\" = \"maximum\" -o \"$MAX_FD\" = \"max\" ] ; then\n            MAX_FD=\"$MAX_FD_LIMIT\"\n        fi\n        ulimit -n $MAX_FD\n        if [ $? -ne 0 ] ; then\n            warn \"Could not set maximum file descriptor limit: $MAX_FD\"\n        fi\n    else\n        warn \"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\"\n    fi\nfi\n\n# For Darwin, add options to specify how the application appears in the dock\nif $darwin; then\n    GRADLE_OPTS=\"$GRADLE_OPTS \\\"-Xdock:name=$APP_NAME\\\" \\\"-Xdock:icon=$APP_HOME/media/gradle.icns\\\"\"\nfi\n\n# For Cygwin, switch paths to Windows format before running java\nif $cygwin ; then\n    APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`\n    CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`\n    JAVACMD=`cygpath --unix \"$JAVACMD\"`\n\n    # We build the pattern for arguments to be converted via cygpath\n    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`\n    SEP=\"\"\n    for dir in $ROOTDIRSRAW ; do\n        ROOTDIRS=\"$ROOTDIRS$SEP$dir\"\n        SEP=\"|\"\n    done\n    OURCYGPATTERN=\"(^($ROOTDIRS))\"\n    # Add a user-defined pattern to the cygpath arguments\n    if [ \"$GRADLE_CYGPATTERN\" != \"\" ] ; then\n        OURCYGPATTERN=\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\"\n    fi\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    i=0\n    for arg in \"$@\" ; do\n        CHECK=`echo \"$arg\"|egrep -c \"$OURCYGPATTERN\" -`\n        CHECK2=`echo \"$arg\"|egrep -c \"^-\"`                                 ### Determine if an option\n\n        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition\n            eval `echo args$i`=`cygpath --path --ignore --mixed \"$arg\"`\n        else\n            eval `echo args$i`=\"\\\"$arg\\\"\"\n        fi\n        i=$((i+1))\n    done\n    case $i in\n        (0) set -- ;;\n        (1) set -- \"$args0\" ;;\n        (2) set -- \"$args0\" \"$args1\" ;;\n        (3) set -- \"$args0\" \"$args1\" \"$args2\" ;;\n        (4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;\n        (5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;\n        (6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;\n        (7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;\n        (8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;\n        (9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;\n    esac\nfi\n\n# Escape application args\nsave () {\n    for i do printf %s\\\\n \"$i\" | sed \"s/'/'\\\\\\\\''/g;1s/^/'/;\\$s/\\$/' \\\\\\\\/\" ; done\n    echo \" \"\n}\nAPP_ARGS=$(save \"$@\")\n\n# Collect all arguments for the java command, following the shell quoting and substitution rules\neval set -- $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS \"\\\"-Dorg.gradle.appname=$APP_BASE_NAME\\\"\" -classpath \"\\\"$CLASSPATH\\\"\" org.gradle.wrapper.GradleWrapperMain \"$APP_ARGS\"\n\n# by default we should be in the correct project dir, but when run from Finder on Mac, the cwd is wrong\nif [ \"$(uname)\" = \"Darwin\" ] && [ \"$HOME\" = \"$PWD\" ]; then\n  cd \"$(dirname \"$0\")\"\nfi\n\nexec \"$JAVACMD\" \"$@\"\n"
        },
        {
          "name": "gradlew.bat",
          "type": "blob",
          "size": 2.20703125,
          "content": "@if \"%DEBUG%\" == \"\" @echo off\r\n@rem ##########################################################################\r\n@rem\r\n@rem  Gradle startup script for Windows\r\n@rem\r\n@rem ##########################################################################\r\n\r\n@rem Set local scope for the variables with windows NT shell\r\nif \"%OS%\"==\"Windows_NT\" setlocal\r\n\r\nset DIRNAME=%~dp0\r\nif \"%DIRNAME%\" == \"\" set DIRNAME=.\r\nset APP_BASE_NAME=%~n0\r\nset APP_HOME=%DIRNAME%\r\n\r\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\r\nset DEFAULT_JVM_OPTS=\r\n\r\n@rem Find java.exe\r\nif defined JAVA_HOME goto findJavaFromJavaHome\r\n\r\nset JAVA_EXE=java.exe\r\n%JAVA_EXE% -version >NUL 2>&1\r\nif \"%ERRORLEVEL%\" == \"0\" goto init\r\n\r\necho.\r\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\r\necho.\r\necho Please set the JAVA_HOME variable in your environment to match the\r\necho location of your Java installation.\r\n\r\ngoto fail\r\n\r\n:findJavaFromJavaHome\r\nset JAVA_HOME=%JAVA_HOME:\"=%\r\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\r\n\r\nif exist \"%JAVA_EXE%\" goto init\r\n\r\necho.\r\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\r\necho.\r\necho Please set the JAVA_HOME variable in your environment to match the\r\necho location of your Java installation.\r\n\r\ngoto fail\r\n\r\n:init\r\n@rem Get command-line arguments, handling Windows variants\r\n\r\nif not \"%OS%\" == \"Windows_NT\" goto win9xME_args\r\n\r\n:win9xME_args\r\n@rem Slurp the command line arguments.\r\nset CMD_LINE_ARGS=\r\nset _SKIP=2\r\n\r\n:win9xME_args_slurp\r\nif \"x%~1\" == \"x\" goto execute\r\n\r\nset CMD_LINE_ARGS=%*\r\n\r\n:execute\r\n@rem Setup the command line\r\n\r\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\r\n\r\n@rem Execute Gradle\r\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%\r\n\r\n:end\r\n@rem End local scope for the variables with windows NT shell\r\nif \"%ERRORLEVEL%\"==\"0\" goto mainEnd\r\n\r\n:fail\r\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\r\nrem the _cmd.exe /c_ return code!\r\nif  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1\r\nexit /b 1\r\n\r\n:mainEnd\r\nif \"%OS%\"==\"Windows_NT\" endlocal\r\n\r\n:omega\r\n"
        },
        {
          "name": "intent-factory",
          "type": "tree",
          "content": null
        },
        {
          "name": "lint.xml",
          "type": "blob",
          "size": 1.11328125,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!-- http://tools.android.com/tips/lint-checks -->\n<lint>\n  <issue id=\"UnusedResources\" severity=\"error\"/>\n  <issue id=\"ParcelClassLoader\" severity=\"error\"/>\n  <issue id=\"HardcodedText\" severity=\"error\"/>\n  <issue id=\"HardwareIds\" severity=\"error\"/>\n  <issue id=\"DefaultLocale\" severity=\"error\"/>\n  <issue id=\"CheckResult\" severity=\"error\"/>\n  <issue id=\"ObsoleteSdkInt\" severity=\"error\"/>\n  <issue id=\"VisibleForTests\" severity=\"error\"/>\n  <issue id=\"IconDipSize\" severity=\"error\"/>\n  <issue id=\"IconDuplicatesConfig\" severity=\"error\"/>\n  <issue id=\"ObsoleteLayoutParam\" severity=\"error\"/>\n  <issue id=\"InefficientWeight\" severity=\"error\"/>\n  <issue id=\"RtlHardcoded\" severity=\"error\"/>\n  <issue id=\"InvalidPackage\" severity=\"error\">\n    <ignore regexp=\"okio-.*jar\"/>\n    <ignore regexp=\"retrofit-.*.jar\"/>\n  </issue>\n  <issue id=\"TypographyEllipsis\" severity=\"error\"/>\n  <issue id=\"SimpleDateFormat\" severity=\"error\"/>\n  <issue id=\"ThrowableNotAtBeginning\" severity=\"error\"/>\n  <issue id=\"BinaryOperationInTimber\" severity=\"error\"/>\n  <issue id=\"WifiManagerPotentialLeak\" severity=\"error\"/>\n</lint>\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "service",
          "type": "tree",
          "content": null
        },
        {
          "name": "settings.gradle",
          "type": "blob",
          "size": 0.123046875,
          "content": "rootProject.name = 'u2020'\n\ninclude ':app'\ninclude ':intent-factory'\ninclude ':service:github'\ninclude ':service:github-mock'\n"
        },
        {
          "name": "u2020.gif",
          "type": "blob",
          "size": 6226.7998046875,
          "content": ""
        },
        {
          "name": "u2020.keystore",
          "type": "blob",
          "size": 2.1923828125,
          "content": null
        }
      ]
    }
  ]
}