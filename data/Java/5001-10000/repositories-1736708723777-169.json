{
  "metadata": {
    "timestamp": 1736708723777,
    "page": 169,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Meituan-Dianping/Leaf",
      "stars": 6512,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.09375,
          "content": "*.class\n\n# Package Files #\n*.jar\n*.war\n*.ear\n*.versionsBackup\n\n\n*.iml\n.idea/\ntarget/\nlogs/\nlog/\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0703125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [2018] Leaf\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.033203125,
          "content": "# Leaf\n\n> There are no two identical leaves in the world.\n>\n> ​               — Leibnitz\n\n[中文文档](./README_CN.md) | [English Document](./README.md)\n\n## Introduction\n\nLeaf refers to some common ID generation schemes in the industry, including redis, UUID, snowflake, etc.\nEach of the above approaches has its own problems, so we decided to implement a set of distributed ID generation services to meet the requirements.\nAt present, Leaf covers Meituan review company's internal finance, catering, takeaway, hotel travel, cat's eye movie and many other business lines. On the basis of 4C8G VM, through the company RPC method, QPS pressure test results are nearly 5w/s, TP999 1ms.\n\nYou can use it to encapsulate a distributed unique id distribution center in a service-oriented SOA architecture as the id distribution provider for all applications\n\n## Quick Start\n\n### Leaf Server\n\nLeaf provides an HTTP service based on spring boot to get the id\n\n#### run Leaf Server\n\n##### build\n\n```shell\ngit clone git@github.com:Meituan-Dianping/Leaf.git\ncd leaf\nmvn clean install -DskipTests\ncd leaf-server\n```\n\n##### run\n###### maven\n\n```shell\nmvn spring-boot:run\n```\n\nor \n###### shell command\n\n```shell\nsh deploy/run.sh\n```\n\n##### test\n\n```shell\n#segment\ncurl http://localhost:8080/api/segment/get/leaf-segment-test\n#snowflake\ncurl http://localhost:8080/api/snowflake/get/test\n```\n\n#### Configuration\n\nLeaf provides two ways to generate ids (segment mode and snowflake mode), which you can turn on at the same time or specify one way to turn on (both are off by default).\n\nLeaf Server configuration is in the leaf-server/src/main/resources/leaf.properties\n\n| configuration             | meaning                          | default |\n| ------------------------- | ----------------------------- | ------ |\n| leaf.name                 | leaf service name                  |        |\n| leaf.segment.enable       | whether segment mode is enabled             | false  |\n| leaf.jdbc.url             | mysql url                 |        |\n| leaf.jdbc.username        | mysql username                 |        |\n| leaf.jdbc.password        | mysql password                   |        |\n| leaf.snowflake.enable     | whether snowflake mode is enabled         | false  |\n| leaf.snowflake.zk.address | zk address under snowflake mode      |        |\n| leaf.snowflake.port       | service registration port under snowflake mode |        |\n\n### Segment mode \n\nIn order to use segment mode, you need to create DB table first, and configure leaf.jdbc.url, leaf.jdbc.username, leaf.jdbc.password\n\nIf you do not want use it, just configure leaf.segment.enable=false to disable it.\n\n```sql\nCREATE DATABASE leaf\nCREATE TABLE `leaf_alloc` (\n  `biz_tag` varchar(128)  NOT NULL DEFAULT '', -- your biz unique name\n  `max_id` bigint(20) NOT NULL DEFAULT '1',\n  `step` int(11) NOT NULL,\n  `description` varchar(256)  DEFAULT NULL,\n  `update_time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  PRIMARY KEY (`biz_tag`)\n) ENGINE=InnoDB;\n\ninsert into leaf_alloc(biz_tag, max_id, step, description) values('leaf-segment-test', 1, 2000, 'Test leaf Segment Mode Get Id')\n```\n### Snowflake mode \n\nThe algorithm is taken from twitter's open-source snowflake algorithm.\n\nIf you do not want to use it, just configure leaf.snowflake.enable=false to disable it.\n\nConfigure the zookeeper address\n\n```\nleaf.snowflake.zk.address=${address}\nleaf.snowflake.enable=true\nleaf.snowflake.port=${port}\n```\n\nconfigure leaf.snowflake.zk.address in the leaf.properties, and configure the leaf service listen port leaf.snowflake.port.\n\n### monitor page\n\nsegment mode: http://localhost:8080/cache\n\n### Leaf Core \n\nOf course, in order to pursue higher performance, you need to deploy the Leaf service through RPC Server, which only needs to introduce the leaf-core package and encapsulate the API that generates the ID into the specified RPC framework.\n\n#### Attention\nNote that leaf's current IP acquisition logic in the case of snowflake mode takes the first network card IP directly (especially for services that change IP) to avoid wasting the workId\n"
        },
        {
          "name": "README_CN.md",
          "type": "blob",
          "size": 4.14453125,
          "content": "# Leaf\n\n> There are no two identical leaves in the world.\n>\n> 世界上没有两片完全相同的树叶。\n>\n> ​\t\t\t\t\t\t\t\t— 莱布尼茨\n\n[中文文档](./README_CN.md) | [English Document](./README.md)\n\n## Introduction\n\nLeaf 最早期需求是各个业务线的订单ID生成需求。在美团早期，有的业务直接通过DB自增的方式生成ID，有的业务通过redis缓存来生成ID，也有的业务直接用UUID这种方式来生成ID。以上的方式各自有各自的问题，因此我们决定实现一套分布式ID生成服务来满足需求。具体Leaf 设计文档见：[ leaf 美团分布式ID生成服务 ](https://tech.meituan.com/MT_Leaf.html )\n\n目前Leaf覆盖了美团点评公司内部金融、餐饮、外卖、酒店旅游、猫眼电影等众多业务线。在4C8G VM基础上，通过公司RPC方式调用，QPS压测结果近5w/s，TP999 1ms。\n\n## Quick Start\n\n### 使用starter注解启动leaf\nhttps://github.com/Meituan-Dianping/Leaf/blob/feature/spring-boot-starter/README_CN.md\n\n### Leaf Server\n\n我们提供了一个基于spring boot的HTTP服务来获取ID\n\n\n#### 配置介绍\n\nLeaf 提供两种生成的ID的方式（号段模式和snowflake模式），你可以同时开启两种方式，也可以指定开启某种方式（默认两种方式为关闭状态）。\n\nLeaf Server的配置都在leaf-server/src/main/resources/leaf.properties中\n\n| 配置项                    | 含义                          | 默认值 |\n| ------------------------- | ----------------------------- | ------ |\n| leaf.name                 | leaf 服务名                   |        |\n| leaf.segment.enable       | 是否开启号段模式              | false  |\n| leaf.jdbc.url             | mysql 库地址                  |        |\n| leaf.jdbc.username        | mysql 用户名                  |        |\n| leaf.jdbc.password        | mysql 密码                    |        |\n| leaf.snowflake.enable     | 是否开启snowflake模式         | false  |\n| leaf.snowflake.zk.address | snowflake模式下的zk地址       |        |\n| leaf.snowflake.port       | snowflake模式下的服务注册端口 |        |\n\n#### 号段模式\n\n如果使用号段模式，需要建立DB表，并配置leaf.jdbc.url, leaf.jdbc.username, leaf.jdbc.password\n\n如果不想使用该模式配置leaf.segment.enable=false即可。\n\n##### 创建数据表\n\n```sql\nCREATE DATABASE leaf\nCREATE TABLE `leaf_alloc` (\n  `biz_tag` varchar(128)  NOT NULL DEFAULT '',\n  `max_id` bigint(20) NOT NULL DEFAULT '1',\n  `step` int(11) NOT NULL,\n  `description` varchar(256)  DEFAULT NULL,\n  `update_time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  PRIMARY KEY (`biz_tag`)\n) ENGINE=InnoDB;\n\ninsert into leaf_alloc(biz_tag, max_id, step, description) values('leaf-segment-test', 1, 2000, 'Test leaf Segment Mode Get Id')\n```\n\n##### 配置相关数据项\n\n在leaf.properties中配置leaf.jdbc.url, leaf.jdbc.username, leaf.jdbc.password参数\n\n#### Snowflake模式\n\n算法取自twitter开源的snowflake算法。\n\n如果不想使用该模式配置leaf.snowflake.enable=false即可。\n\n##### 配置zookeeper地址\n\n在leaf.properties中配置leaf.snowflake.zk.address，配置leaf 服务监听的端口leaf.snowflake.port。\n#### 运行Leaf Server\n\n##### 打包服务\n\n```shell\ngit clone git@github.com:Meituan-Dianping/Leaf.git\n//按照上面的号段模式在工程里面配置好\ncd leaf\nmvn clean install -DskipTests\ncd leaf-server\n```\n\n##### 运行服务\n\n*注意:首先得先配置好数据库表或者zk地址*\n###### mvn方式\n\n```shell\nmvn spring-boot:run\n```\n\n###### 脚本方式\n\n```shell\nsh deploy/run.sh\n```\n##### 测试\n\n```shell\n#segment\ncurl http://localhost:8080/api/segment/get/leaf-segment-test\n#snowflake\ncurl http://localhost:8080/api/snowflake/get/test\n```\n\n##### 监控页面\n\n号段模式：http://localhost:8080/cache\n\n### Leaf Core\n\n当然，为了追求更高的性能，需要通过RPC Server来部署Leaf 服务，那仅需要引入leaf-core的包，把生成ID的API封装到指定的RPC框架中即可。\n\n### 注意事项\n注意现在leaf使用snowflake模式的情况下 其获取ip的逻辑直接取首个网卡ip【特别对于会更换ip的服务要注意】避免浪费workId\n"
        },
        {
          "name": "leaf-core",
          "type": "tree",
          "content": null
        },
        {
          "name": "leaf-server",
          "type": "tree",
          "content": null
        },
        {
          "name": "pom.xml",
          "type": "blob",
          "size": 7.94140625,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n    <groupId>com.sankuai.inf.leaf</groupId>\n    <artifactId>leaf-parent</artifactId>\n    <packaging>pom</packaging>\n    <version>1.0.1</version>\n    <name>Leaf</name>\n    <modules>\n        <module>leaf-core</module>\n        <module>leaf-server</module>\n    </modules>\n    <description>Distributed ID Generate Service</description>\n    <developers>\n        <developer>\n            <id>zhangzhitong</id>\n            <name>zhangzhitong</name>\n            <email>zhitongzhang@outlook.com</email>\n        </developer>\n        <developer>\n            <id>zhanghan</id>\n            <name>zhanghan</name>\n            <email>han122655904@163.com</email>\n        </developer>\n        <developer>\n            <id>xiezhaodong</id>\n            <name>xiezhaodong</name>\n            <email>pursuer_xie@foxmail.com</email>\n        </developer>\n    </developers>\n    <organization>\n        <name>Meituan-Dianping Group</name>\n        <url>https://github.com/Meituan-Dianping</url>\n    </organization>\n    <properties>\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\n        <spring.version>4.3.18.RELEASE</spring.version>\n        <junit.version>4.12</junit.version>\n        <maven.compiler.version>3.5.1</maven.compiler.version>\n        <mybatis.version>3.3.0</mybatis.version>\n        <perf4j.version>0.9.16</perf4j.version>\n        <curator.version>2.6.0</curator.version>\n        <slf4j.version>1.7.2</slf4j.version>\n        <druid.version>1.0.18</druid.version>\n        <jackson-databind.version>2.9.6</jackson-databind.version>\n        <mysql-connector-java.version>5.1.38</mysql-connector-java.version>\n        <commons-io.version>2.4</commons-io.version>\n        <log4j.version>2.7</log4j.version>\n        <mybatis-spring.version>1.2.5</mybatis-spring.version>\n    </properties>\n    <dependencyManagement>\n        <dependencies>\n            <dependency>\n                <groupId>com.sankuai.inf.leaf</groupId>\n                <artifactId>leaf-core</artifactId>\n                <version>1.0.1</version>\n            </dependency>\n            <dependency>\n                <groupId>com.alibaba</groupId>\n                <artifactId>druid</artifactId>\n                <version>${druid.version}</version>\n            </dependency>\n            <!--zk-->\n            <dependency>\n                <groupId>org.apache.curator</groupId>\n                <artifactId>curator-recipes</artifactId>\n                <version>${curator.version}</version>\n                <exclusions>\n                    <exclusion>\n                        <artifactId>log4j</artifactId>\n                        <groupId>log4j</groupId>\n                    </exclusion>\n                </exclusions>\n            </dependency>\n            <dependency>\n                <groupId>commons-io</groupId>\n                <artifactId>commons-io</artifactId>\n                <version>${commons-io.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.mybatis</groupId>\n                <artifactId>mybatis</artifactId>\n                <version>${mybatis.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>org.perf4j</groupId>\n                <artifactId>perf4j</artifactId>\n                <version>${perf4j.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.slf4j</groupId>\n                <artifactId>slf4j-api</artifactId>\n                <version>${slf4j.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>org.springframework</groupId>\n                <artifactId>spring-core</artifactId>\n                <version>${spring.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.springframework</groupId>\n                <artifactId>spring-beans</artifactId>\n                <version>${spring.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.springframework</groupId>\n                <artifactId>spring-jdbc</artifactId>\n                <version>${spring.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.springframework</groupId>\n                <artifactId>spring-context</artifactId>\n                <version>${spring.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.springframework</groupId>\n                <artifactId>spring-test</artifactId>\n                <version>${spring.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>org.apache.logging.log4j</groupId>\n                <artifactId>log4j-slf4j-impl</artifactId>\n                <version>${log4j.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.apache.logging.log4j</groupId>\n                <artifactId>log4j-api</artifactId>\n                <version>${log4j.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.apache.logging.log4j</groupId>\n                <artifactId>log4j-core</artifactId>\n                <version>${log4j.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>mysql</groupId>\n                <artifactId>mysql-connector-java</artifactId>\n                <version>${mysql-connector-java.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.mybatis</groupId>\n                <artifactId>mybatis-spring</artifactId>\n                <version>${mybatis-spring.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>junit</groupId>\n                <artifactId>junit</artifactId>\n                <version>${junit.version}</version>\n            </dependency>\n        </dependencies>\n    </dependencyManagement>\n    <build>\n        <finalName>leaf</finalName>\n        <plugins>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-compiler-plugin</artifactId>\n                <version>${maven.compiler.version}</version>\n                <configuration>\n                    <source>1.7</source>\n                    <target>1.7</target>\n                </configuration>\n            </plugin>\n            <plugin>\n                <groupId>org.jacoco</groupId>\n                <artifactId>jacoco-maven-plugin</artifactId>\n                <version>0.7.5.201505241946</version>\n                <executions>\n                    <execution>\n                        <id>pre-unit-test</id>\n                        <goals>\n                            <goal>prepare-agent</goal>\n                        </goals>\n                        <configuration>\n                            <destFile>\n                                ${project.build.directory}/${project.artifactId}-jacoco.exec\n                            </destFile>\n                        </configuration>\n                    </execution>\n                    <execution>\n                        <id>post-unit-test</id>\n                        <phase>test</phase>\n                        <goals>\n                            <goal>report</goal>\n                        </goals>\n                        <configuration>\n                            <dataFile>\n                                ${project.build.directory}/${project.artifactId}-jacoco.exec\n                            </dataFile>\n                            <outputDirectory>${project.build.directory}/jacoco</outputDirectory>\n                        </configuration>\n                    </execution>\n                </executions>\n            </plugin>\n        </plugins>\n    </build>\n\n</project>\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}