{
  "metadata": {
    "timestamp": 1736708720923,
    "page": 164,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "macrozheng/springcloud-learning",
      "stars": 6561,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1181640625,
          "content": "# Maven #\ntarget/\n\n# IDEA #\n.idea/\n.idea/**/*.xml\n*.iml\n\n# Eclipse #\n.settings/\n.classpath\n.project\n\n# SpringBoot #\n*.log"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 7.169921875,
          "content": "# springcloud-learning\n\n## 简介\n\n2024最新微服务实战教程，Spring Cloud组件、微服务项目实战、Kubernetes容器化部署全方位解析。本教程基于mall-swarm微服务电商项目。\n\n`mall-swarm`项目（11k+star）是一套微服务商城系统，采用了 Spring Cloud 2023 & Alibaba、Spring Boot 3.2、Sa-Token、MyBatis、Elasticsearch、Docker、Kubernetes等核心技术，同时提供了基于Vue的管理后台方便快速搭建系统。`mall-swarm`在电商业务的基础集成了注册中心、配置中心、监控中心、网关等系统功能。文档齐全，附带全套Spring Cloud教程。\n\n## 教程网站\n\n- mall-swarm项目地址：[https://github.com/macrozheng/mall-swarm](https://github.com/macrozheng/mall-swarm)\n- 教程文档网站：[https://cloud.macrozheng.com](https://cloud.macrozheng.com)\n\n## 目录\n\n### 序章\n\n> 对mall-swarm项目的架构、业务、学习要求及学习思路进行介绍。\n\n- [mall-swarm项目架构及功能概览](https://cloud.macrozheng.com/foreword/mall_swarm_foreword_01.html)\n- [mall-swarm项目核心功能演示](https://cloud.macrozheng.com/foreword/mall_swarm_foreword_02.html)\n- [mall-swarm项目学习所需知识点](https://cloud.macrozheng.com/foreword/mall_swarm_foreword_03.html)\n- [mall-swarm微服务学习教程内容介绍](https://cloud.macrozheng.com/foreword/mall_swarm_foreword_04.html)\n\n### 快速开始\n\n> 讲解mall-swarm项目前后端在Windows下的开发环境搭建以及在Linux下的部署。\n\n- [mall-swarm项目后端开发环境搭建](https://cloud.macrozheng.com/start/mall_swarm_deploy_windows.html)\n- [mall-swarm前端开发环境搭建](https://cloud.macrozheng.com/start/mall_swarm_deploy_windows_web.html)\n- [使用虚拟机安装Linux](https://cloud.macrozheng.com/start/mall_swarm_deploy_windows.html)\n- [Docker环境安装及常用命令](https://cloud.macrozheng.com/start/mall_swarm_deploy_windows.html)\n- [mall-swarm在Linux环境下的部署（基于Docker容器）](https://cloud.macrozheng.com/start/mall_swarm_deploy_windows.html)\n- [前端项目对接Linux部署的mall-swarm后端](https://cloud.macrozheng.com/start/mall_swarm_deploy_windows.html)\n\n### 组件篇\n\n> 对Spring Cloud全套核心组件进行讲解，涵盖Spring Cloud Alibaba、Spring Authorization Server和SkyWalking，基于Spring Cloud 2023。\n\n- [Spring Cloud 微服务组件篇介绍](https://cloud.macrozheng.com/cloud/spring_cloud_summary.html)\n- [Spring Cloud Alibaba：Nacos作为注册中心和配置中心使用](https://cloud.macrozheng.com/cloud/spring_cloud_summary.html)\n- [Spring Cloud Eureka：服务注册与发现](https://cloud.macrozheng.com/cloud/spring_cloud_summary.html)\n- [Spring Cloud Consul：服务治理与配置中心](https://cloud.macrozheng.com/cloud/spring_cloud_summary.html)\n- [Spring Cloud Zookeeper：服务治理与配置中心](https://cloud.macrozheng.com/cloud/spring_cloud_summary.html)\n- [Spring Cloud Config：外部集中化配置管理](https://cloud.macrozheng.com/cloud/spring_cloud_summary.html)\n- [Spring Cloud Bus：消息总线](https://cloud.macrozheng.com/cloud/spring_cloud_summary.html)\n- [Spring Cloud Stream：构建消息驱动的微服务应用](https://cloud.macrozheng.com/cloud/spring_cloud_summary.html)\n- [Spring Cloud LoadBalancer：负载均衡的服务调用](https://cloud.macrozheng.com/cloud/spring_cloud_summary.html)\n- [Spring Cloud OpenFeign：声明式服务调用](https://cloud.macrozheng.com/cloud/spring_cloud_summary.html)\n- [Spring Cloud Alibaba：Sentinel实现熔断与限流](https://cloud.macrozheng.com/cloud/spring_cloud_summary.html)\n- [Spring Cloud Circuit Breaker：服务容错保护](https://cloud.macrozheng.com/cloud/spring_cloud_summary.html)\n- [Spring Cloud Gateway：API网关服务](https://cloud.macrozheng.com/cloud/spring_cloud_summary.html)\n- [Spring Cloud Alibaba：使用Seata解决分布式事务问题](https://cloud.macrozheng.com/cloud/spring_cloud_summary.html)\n- [Spring Authorization Server：实现OAuth2认证服务](https://cloud.macrozheng.com/cloud/spring_cloud_summary.html)\n- [Spring Authorization Server：实现自定义JWT中内容及异常响应](https://cloud.macrozheng.com/cloud/spring_cloud_summary.html)\n- [Spring Authorization Server：实现OAuth2客户端](https://cloud.macrozheng.com/cloud/spring_cloud_summary.html)\n- [Spring Authorization Server：实现OAuth2资源服务](https://cloud.macrozheng.com/cloud/spring_cloud_summary.html)\n- [Spring Authorization Server：基于Gateway和Oauth2的微服务权限解决方案](https://cloud.macrozheng.com/cloud/spring_cloud_summary.html)\n- [SkyWalking：微服务请求链路跟踪](https://cloud.macrozheng.com/cloud/spring_cloud_summary.html)\n\n### 架构篇\n\n> 基于Spring Boot单应用脚手架mall-tiny，循序渐进地搭建一个mall-swarm项目在使用的微服务项目脚手架。\n\n- [mall-swarm架构篇介绍](https://cloud.macrozheng.com/architect/mall_swarm_arch_intro.html)\n- [mall-tiny项目介绍](https://cloud.macrozheng.com/architect/mall_swarm_arch_intro.html)\n- [SpringDoc使用教程](https://cloud.macrozheng.com/architect/mall_swarm_arch_intro.html)\n- [mall-tiny整合SpringDoc实现在线API文档](https://cloud.macrozheng.com/architect/mall_swarm_arch_intro.html)\n- [mall-tiny项目拆分为多模块](https://cloud.macrozheng.com/architect/mall_swarm_arch_intro.html)\n- [mall-swarm-tiny项目集成注册中心和网关](https://cloud.macrozheng.com/architect/mall_swarm_arch_intro.html)\n- [微服务文档聚合方案：基于Nacos+Gateway+Knife4j](https://cloud.macrozheng.com/architect/mall_swarm_arch_intro.html)\n- [mall-swarm-tiny项目整合Knife4j实现网关聚合文档](https://cloud.macrozheng.com/architect/mall_swarm_arch_intro.html)\n- [Sa-Token使用教程](https://cloud.macrozheng.com/architect/mall_swarm_arch_intro.html)\n- [微服务权限解决方案：基于Nacos+Gateway+Sa-Token](https://cloud.macrozheng.com/architect/mall_swarm_arch_intro.html)\n- [mall-swarm-tiny整合Sa-Token实现认证授权功能](https://cloud.macrozheng.com/architect/mall_swarm_arch_intro.html)\n- [Spring Boot Admin：微服务应用监控](https://cloud.macrozheng.com/architect/mall_swarm_arch_intro.html)\n- [mall-swarm-tiny整合Admin实现微服务监控](https://cloud.macrozheng.com/architect/mall_swarm_arch_intro.html)\n- [mall-swarm项目后端代码结构介绍](https://cloud.macrozheng.com/architect/mall_swarm_arch_intro.html)\n- [mall-swarm项目后端核心代码讲解](https://cloud.macrozheng.com/architect/mall_swarm_arch_intro.html)\n- [mall-swarm项目中如何开发接口和菜单](https://cloud.macrozheng.com/architect/mall_swarm_arch_intro.html)\n\n### K8S篇\n\n> 全面讲解Kubernetes的使用，基于企业级容器管理平台KubeSphere，实现mall-swarm项目在Kubernetes环境下的部署。\n\n- [K8S篇介绍](https://cloud.macrozheng.com/k8s/k8s_summary.html)\n- [K8S入门教程](https://cloud.macrozheng.com/k8s/k8s_summary.html)\n- [K8S进阶使用](https://cloud.macrozheng.com/k8s/k8s_summary.html)\n- [SpringBoot应用在K8S环境下的部署](https://cloud.macrozheng.com/k8s/k8s_summary.html)\n- [企业级容器管理平台KubeSphere的使用](https://cloud.macrozheng.com/k8s/k8s_summary.html)\n- [mall-swarm在K8S环境下的部署](https://cloud.macrozheng.com/k8s/k8s_summary.html)\n"
        },
        {
          "name": "admin-client",
          "type": "tree",
          "content": null
        },
        {
          "name": "admin-security-server",
          "type": "tree",
          "content": null
        },
        {
          "name": "admin-server",
          "type": "tree",
          "content": null
        },
        {
          "name": "authorization-server",
          "type": "tree",
          "content": null
        },
        {
          "name": "circuit-breaker-service",
          "type": "tree",
          "content": null
        },
        {
          "name": "config-client",
          "type": "tree",
          "content": null
        },
        {
          "name": "config-server",
          "type": "tree",
          "content": null
        },
        {
          "name": "consul-config-client",
          "type": "tree",
          "content": null
        },
        {
          "name": "consul-remote-service",
          "type": "tree",
          "content": null
        },
        {
          "name": "consul-user-service",
          "type": "tree",
          "content": null
        },
        {
          "name": "document",
          "type": "tree",
          "content": null
        },
        {
          "name": "eureka-remote-service",
          "type": "tree",
          "content": null
        },
        {
          "name": "eureka-server",
          "type": "tree",
          "content": null
        },
        {
          "name": "eureka-user-service",
          "type": "tree",
          "content": null
        },
        {
          "name": "feign-service",
          "type": "tree",
          "content": null
        },
        {
          "name": "gateway-service",
          "type": "tree",
          "content": null
        },
        {
          "name": "mall-tiny-k8s",
          "type": "tree",
          "content": null
        },
        {
          "name": "mall-tiny-sa-token",
          "type": "tree",
          "content": null
        },
        {
          "name": "mall-tiny-springdoc",
          "type": "tree",
          "content": null
        },
        {
          "name": "micro-knife4j",
          "type": "tree",
          "content": null
        },
        {
          "name": "micro-sa-token",
          "type": "tree",
          "content": null
        },
        {
          "name": "micro-sas",
          "type": "tree",
          "content": null
        },
        {
          "name": "micro-seata",
          "type": "tree",
          "content": null
        },
        {
          "name": "nacos-config-client",
          "type": "tree",
          "content": null
        },
        {
          "name": "nacos-loadbalancer-service",
          "type": "tree",
          "content": null
        },
        {
          "name": "nacos-remote-service",
          "type": "tree",
          "content": null
        },
        {
          "name": "nacos-user-service",
          "type": "tree",
          "content": null
        },
        {
          "name": "oauth2-client",
          "type": "tree",
          "content": null
        },
        {
          "name": "pom.xml",
          "type": "blob",
          "size": 5.7626953125,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n\n    <groupId>com.macro.cloud</groupId>\n    <artifactId>springcloud-learning-teach</artifactId>\n    <version>1.0-SNAPSHOT</version>\n    <packaging>pom</packaging>\n\n    <modules>\n        <module>nacos-user-service</module>\n        <module>nacos-remote-service</module>\n        <module>nacos-config-client</module>\n        <module>eureka-server</module>\n        <module>eureka-user-service</module>\n        <module>eureka-remote-service</module>\n        <module>consul-user-service</module>\n        <module>consul-remote-service</module>\n        <module>consul-config-client</module>\n        <module>zookeeper-user-service</module>\n        <module>zookeeper-remote-service</module>\n        <module>zookeeper-config-client</module>\n        <module>config-server</module>\n        <module>config-client</module>\n        <module>stream-service</module>\n        <module>nacos-loadbalancer-service</module>\n        <module>feign-service</module>\n        <module>sentinel-service</module>\n        <module>circuit-breaker-service</module>\n        <module>gateway-service</module>\n        <module>micro-seata</module>\n        <module>authorization-server</module>\n        <module>oauth2-client</module>\n        <module>resource-server</module>\n        <module>micro-sas</module>\n        <module>sky-user-service</module>\n        <module>sky-feign-service</module>\n        <module>mall-tiny-springdoc</module>\n        <module>micro-knife4j</module>\n        <module>mall-tiny-sa-token</module>\n        <module>micro-sa-token</module>\n        <module>admin-client</module>\n        <module>admin-server</module>\n        <module>admin-security-server</module>\n    </modules>\n\n    <properties>\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\n        <java.version>17</java.version>\n        <maven.compiler.source>17</maven.compiler.source>\n        <maven.compiler.target>17</maven.compiler.target>\n        <skipTests>true</skipTests>\n        <docker.host>http://192.168.3.102:2375</docker.host>\n        <docker.registry.host>192.168.3.102</docker.registry.host>\n        <spring-boot.version>3.2.2</spring-boot.version>\n        <spring-boot-admin.version>3.2.2</spring-boot-admin.version>\n        <spring-cloud.version>2023.0.1</spring-cloud.version>\n        <spring-cloud-alibaba.version>2023.0.1.0</spring-cloud-alibaba.version>\n        <nimbus-jose-jwt.version>9.23</nimbus-jose-jwt.version>\n        <hutool-version>5.8.16</hutool-version>\n        <knife4j.version>4.5.0</knife4j.version>\n        <sa-token.version>1.37.0</sa-token.version>\n        <springdoc-openapi.version>2.3.0</springdoc-openapi.version>\n        <druid.version>1.2.21</druid.version>\n        <pagehelper-spring-boot-starter.version>2.1.0</pagehelper-spring-boot-starter.version>\n        <mybatis-spring-boot-starter.version>3.0.3</mybatis-spring-boot-starter.version>\n        <mybatis-generator.version>1.4.2</mybatis-generator.version>\n        <mysql-connector.version>8.0.28</mysql-connector.version>\n        <docker.maven.plugin.version>0.43.3</docker.maven.plugin.version>\n    </properties>\n\n    <dependencyManagement>\n        <dependencies>\n            <dependency>\n                <groupId>com.alibaba.cloud</groupId>\n                <artifactId>spring-cloud-alibaba-dependencies</artifactId>\n                <version>${spring-cloud-alibaba.version}</version>\n                <type>pom</type>\n                <scope>import</scope>\n            </dependency>\n            <dependency>\n                <groupId>org.springframework.cloud</groupId>\n                <artifactId>spring-cloud-dependencies</artifactId>\n                <version>${spring-cloud.version}</version>\n                <type>pom</type>\n                <scope>import</scope>\n            </dependency>\n            <dependency>\n                <groupId>org.springframework.boot</groupId>\n                <artifactId>spring-boot-dependencies</artifactId>\n                <version>${spring-boot.version}</version>\n                <type>pom</type>\n                <scope>import</scope>\n            </dependency>\n        </dependencies>\n    </dependencyManagement>\n\n    <build>\n        <plugins>\n            <!--解决SpringBoot 3.2 Parameter Name Retention 问题-->\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-compiler-plugin</artifactId>\n                <configuration>\n                    <compilerArgs>\n                        <arg>-parameters</arg>\n                    </compilerArgs>\n                </configuration>\n            </plugin>\n        </plugins>\n    </build>\n\n    <!--使用aliyun的镜像源提升依赖下载速度-->\n    <repositories>\n        <repository>\n            <id>aliyunmaven</id>\n            <name>aliyun</name>\n            <url>https://maven.aliyun.com/repository/public</url>\n        </repository>\n        <repository>\n            <id>central2</id>\n            <name>central2</name>\n            <url>https://repo1.maven.org/maven2/</url>\n        </repository>\n    </repositories>\n\n    <!--使用aliyun的镜像源提升插件下载速度-->\n    <pluginRepositories>\n        <pluginRepository>\n            <id>aliyunmaven</id>\n            <name>aliyun</name>\n            <url>https://maven.aliyun.com/repository/public</url>\n        </pluginRepository>\n        <pluginRepository>\n            <id>central2</id>\n            <name>central2</name>\n            <url>https://repo1.maven.org/maven2/</url>\n        </pluginRepository>\n    </pluginRepositories>\n\n</project>"
        },
        {
          "name": "resource-server",
          "type": "tree",
          "content": null
        },
        {
          "name": "sentinel-service",
          "type": "tree",
          "content": null
        },
        {
          "name": "sky-feign-service",
          "type": "tree",
          "content": null
        },
        {
          "name": "sky-user-service",
          "type": "tree",
          "content": null
        },
        {
          "name": "stream-service",
          "type": "tree",
          "content": null
        },
        {
          "name": "zookeeper-config-client",
          "type": "tree",
          "content": null
        },
        {
          "name": "zookeeper-remote-service",
          "type": "tree",
          "content": null
        },
        {
          "name": "zookeeper-user-service",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}