{
  "metadata": {
    "timestamp": 1736708792969,
    "page": 296,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Evernote/android-job",
      "stars": 5372,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.2978515625,
          "content": "#Android generated\nbin\ngen\ntarget\nout\nbuild\n\n#Eclipse\n.project\n.classpath\n.settings\n\n#IntelliJ IDEA\n.idea\n*.iml\nclasses\n*.ipr\n*.iws\ngen-external-apklibs\n\n#Maven\nrelease.properties\npom.xml.*\n\n#Ant\nbuild.xml\nant.properties\nlocal.properties\n\n#Gradle\n.gradle\n\n#Command line\nproguard-project.txt\n.DS_Store\n.tmp"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 10.625,
          "content": "## 1.4.3 (2022-04-27)\n* Make `PendingIntent`s immutable, what is required for Target SDK 31, see #600\n\n## 1.4.2 (2019-10-09)\n* Bump libraries to the latest version, this fixes a binary incompatibility with `WorkManager`, see #591\n\n## 1.4.1 (2019-09-30)\n* Remove appcompat as dependency, which was accidentally added in 1.4.0.\n\n## 1.4.0 (2019-09-29)\n* Migrate to AndroidX, see #583\n\n## 1.3.0 (2019-09-29)\n* (No changes compared to 1.3.0-rc1)\n* Implement an API that uses the `WorkManager` for scheduling work items\n* Initialize the job storage on a background thread, see #471\n* Restrict usage of internal classes for internal usage only, see #465\n* Use a `JobIntentService` implementation that doesn't crash, see #255\n* Offset the end time when rescheduling an inexact job, see #547\n\n## 1.3.0-rc1 (2019-03-22)\n* Offset the end time when rescheduling an inexact job, see #547\n* Upgraded WorkManager to 1.0.0, see #561\n\n## 1.3.0-alpha09 (2018-11-18)\n* Upgraded WorkManager to 1.0.0-alpha11\n\n## 1.3.0-alpha08 (2018-10-20)\n* Upgraded WorkManager with API incompatible changes, see #539\n\n## 1.3.0-alpha07 (2018-09-23)\n* Handle crash when rescheduling jobs, see #510\n* Upgraded WorkManager\n\n## 1.3.0-alpha06 (2018-07-24)\n* Find the right tag for the job with `WorkManager`, see #509\n* Integrate `WorkManager` version `1.0.0-alpha05`\n\n## 1.3.0-alpha05 (2018-07-23)\n* Use synchronous method to query the workmanager statuses, see #464\n\n## 1.3.0-alpha04 (2018-07-20)\n* Fix rare NPE when `WorkManager` is null for some reason, see #477\n* Fix rare NPE when `JobStorage` is null, see #492\n* Fix class loading error for the GCM API, see #487\n* Use a `JobIntentService` implementation that doesn't crash, see #255\n\n## 1.3.0-alpha03 (2018-06-11)\n* Remove wrong restriction for `PersistableBundleCompat`\n\n## 1.3.0-alpha02 (2018-06-10)\n* Initialize the job storage on a background thread, see #471\n* Restrict usage of internal classes for internal usage only, see #465\n* Add a workaround for the internal crash in `JobIntentService`, see #255\n* Fix RuntimeException with WorkManager, see #464\n\n## 1.3.0-alpha01 (2018-05-28)\n* Implement an API that uses the `WorkManager` for scheduling work items\n\n## 1.2.6 (2018-05-27)\n* Make the license in Java files clearer, see #422\n* Use own internal monitor for synchronizing access to variables in order to avoid deadlocks when using the library, see #414\n* Cleanup jobs in the database if no job creator returns an instance during execution, see #413\n* Make sure that the `JobManager` is created when canceling jobs, see #442\n* Don't crash on Android 4.X with the recent Google Play Services, see #415\n* Explain the relation to `WorkManager`, see [here](https://github.com/evernote/android-job#WorkManager)\n\n## 1.2.5 (2018-03-19)\n* Handle platform bug where querying the network state throws an NPE internally, see #380\n* Fix database access on main thread, see #385\n* Fix misleading log message for some internal improvements, see #391\n* Fix race condition when scheduling a job with `setUpdateCurrent(true)` where multiple jobs could have been scheduled, see #396\n* Fix bug where a daily job runs twice a day, see #406\n* Fix a bug where periodic jobs in the flex support mode weren't properly canceled while the job was running, see #407\n\n## 1.2.4 (2018-02-08)\n* Add `scheduleAsync()` to the `DailyJob` class for scheduling daily jobs asynchronously to avoid IO operations on the main thread, see #371\n\n## 1.2.3 (2018-02-07)\n* Add an `onCancel()` method to get notified when the job is canceled, see #359\n* Expose the `meetsRequirements()` method to have the option to check all requirements manually, see #349\n* Don't close the database automatically after each interaction, but give an option in the `JobConfig` class to revert this behavior, see #344\n* Add `scheduleAsync()` for scheduling jobs asynchronously to avoid IO operations on the main thread\n\n## 1.2.2 (2018-01-13)\n* Use only the `support-compat` instead of the full `support-v4` library, see #326\n* Use a `ReadWriteLock` for synchronizing the database reads and writes, see #344\n* Update the last run time for daily jobs, see #332\n* Shift the max execution delay if the requirements are enforced, see #325\n\n## 1.2.1 (2017-11-23)\n* Add option to override the default background executor, see #292\n* Don't keep a strong reference to finished jobs to allow freeing memory, see #299\n* Allow running a daily job immediately once, this is helpful for testing purposes, see #317\n* Allow enforcing requirements for daily jobs, see #313\n* Remove the Cat dependency for logging, see 295\n* Add `@NonNull` annotation to `param` parameter, see #321 (thanks for the contribution @Jawnnypoo)\n\n## 1.2.0 (2017-10-05)\n\n* Extract `JobManager.Config` class into `JobConfig` class to make it possible to change settings before the `JobManager` is created\n* Add an option to disable any specific API and not just the GCM API (only useful for testing purposes)\n* Remove deprecated methods\n* Add the `startNow()` method to run a job immediately respecting all constraints in Android O\n* Remove the persisted parameter, which didn't work reliable, all jobs are persisted anyway\n* Remove `startWakefulService` from the `Job` class, `WakefulBroadcastReceiver` is now deprecated with `JobIntentService` as the better option\n* Add feature to make jobs transient and to add a `Bundle`, see `setTransientExtras(bundle)`\n* Add new `METERED` network type\n* Add new requirements battery not low and storage not low\n* Add helper job class `DailyJob` to make it easier to run jobs once a day, see #223\n* Add option in `JobConfig` to add a logger\n* Add option in `JobConfig` for a job ID offset to avoid clashes with other jobs in the `JobScheduler`\n* Switch to elapsed real time with the `AlarmManager` to have a consistent behavior with the `JobScheduler`, see #237\n\n## 1.1.12 (2017-10-05)\n\n* Handle NPE inside of `JobScheduler`\n* Handle 'Package manager has died' crash\n* Save the highest job ID in a pref file so that it isn't lost when no job is in the database anymore (makes debugging easier)\n* Fix rare NPE when rescheduling jobs after service has been restarted, see #234\n* Fix rescheduled periodic job although it has been canceled pre Android N, see #241\n\n## 1.1.11 (2017-06-05)\n\n* Fix a race condition when canceling jobs, see #178\n* Disable the JobScheduler API if the service is disabled, see #190\n* Fix `SQLiteConstraintException` when rescheduling jobs, because job is already present in the database, see #176\n* Improve job result documentation, see #192\n* Prevent app ending in a crash loop, see #194\n* Fallback to an older API if the `JobScheduler` is null on the device\n* Don't persist jobs with the `JobScheduler`, if this device is weird and doesn't have the boot permission\n* List `support-v4` as dependency, because it's required, see #200\n* Make `Job.Params` public for better test support, see #201\n* Allow to suppress the `JobManagerCreateException`, see `JobApi.setForceAllowApi14(boolean)`\n* Make SimpleDateFormat thread-local to avoid possible crash, see #208\n\n## 1.1.10 (2017-04-29)\n\n* Fix a race condition when canceling jobs, see #178\n* Make it possible to reuse builder objects, this may fix SQL exceptions, see #176\n* Add `JobRequest.getLastRun()` returning the time when the job did run the last time, if it was rescheduled or it's a periodic job, see #141\n* Fix crash on Android 4.0.3 where `SQLiteDatabase` doesn't implement `Closable`, see #182\n* Updating wording for network type ANY to make it clearer that no specific network state is required, see #185\n* Use a copy of the platform DefaultDatabaseErrorHandler. Some manufacturers replace this causing stack overflows, see #184\n\n## 1.1.9 (2017-04-10)\n\n* Improve logging by providing an option to add a custom logger\n* Fix crash when rescheduling jobs, see #164\n* Fix wrong returned network type, see #166\n* Expose failure count in the `JobRequest` class, see #168\n* Don't silently eat `JobScheduler`'s limit exception\n* Make `schedule()` method idempotent\n* Add a fallback if removing a job from the database fails for some reason, see #145\n\n## 1.1.8 (2017-03-23)\n\n* Catch wake lock crashes in all cases, fixes #153\n* Use a better execution in parallel with the `AlarmManager`. This may prevent a process death.\n* Use better thread names\n* List for quick boot completed broad casts, see #157\n\n## 1.1.7 (2017-02-27)\n\n* Use a service to reschedule jobs and prevent a too early process death, fixes #142\n\n## 1.1.6 (2017-02-13)\n\n* Reschedule jobs after an app update occurred or the Google Play Services were updated, see #135\n\n## 1.1.5 (2017-01-25)\n\n* Use only back-off criteria when rescheduling jobs, see #134\n\n## 1.1.4 (2017-01-05)\n\n* Expose schedule time of a job\n\n## 1.1.3 (2016-11-09)\n\n* Add an alternative to register a `JobCreator`, if you don't have access to the `Application` class\n\n## 1.1.2 (2016-10-19)\n\n* Remove packaged `R.txt` file\n\n## 1.0.15 (2016-10-19)\n\n* Remove packaged `R.txt` file\n\n## 1.1.1 (2016-10-19)\n\n* Add test option to override minimum interval and flex for testing purposes\n* Fix issue that periodic jobs were accidentally canceled\n\n## 1.0.14 (2016-10-19)\n\n* Fix issue that periodic jobs were accidentally canceled\n\n## 1.1.0 (2016-09-23)\n\n* Bump SDK version to 24\n* Add option to specify flex parameter for periodic jobs\n * Add support for flex parameter with GCM proxy\n * Add API 24 proxy with support for flex parameter\n * Add a flex support mode for all other APIs\n* Add API 19 proxy supporting an execution window\n* Add NOT_ROAMING network type\n* Adjust minimum interval for periodic jobs\n* Add GCM service declaration in library manifest\n\n## 1.0.13 (2016-09-12)\n\n* Fix crash while acquiring wake lock\n* Check boot permission only when persisted flag is set to true\n\n## 1.0.12 (2016-08-29)\n\n* Fix IllegalArgumentException with GCM API, see #72\n\n## 1.0.11 (2016-08-09)\n\n* Fix overflow for too large execution windows\n* Fix immediately starting jobs with JobScheduler if the execution window is too large\n\n## 1.0.10 (2016-07-25)\n\n* Create the JobManager in all API services\n\n## 1.0.9 (2016-07-18)\n\n* Bug fixes\n\n## 1.0.8 (2016-07-05)\n\n* Make PlatformAlarmReceiver intent explicit, fixes #56\n* Delete a job after it has finished, otherwise reschedule if app is crashing while job is running, fixes #55\n* Extend Params class with more parameters from the job request, fixes #52\n* Cache only 20 finished jobs to free up memory, fixes #57\n\n## 1.0.7 (2016-06-03)\n\n* Weird bug fixes\n\n## 1.0.6 (2016-05-20)\n\n* Clean up orphaned jobs after the database was deleted\n\n## 1.0.5 (2016-05-03)\n\n* Fix \"WakeLock under-locked\" crash\n\n## 1.0.4 (2016-03-13)\n\n* Add option to update any preexisting jobs \n\n## 1.0.3 (2016-02-29)\n\n* Bug fixes\n\n## 1.0.2 (2016-01-05)\n\n* Add option to attach multiple job creators \n\n## 1.0.1 (2015-12-18)\n\n* Catch certain exceptions and runtime crashes\n\n## 1.0.0 (2015-08-20)\n\n* Initial release\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0908203125,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License."
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 9.103515625,
          "content": "# DEPRECATED\n\nThis library is not maintained anymore and there will be no further releases except for very critical bug fixes. Use [WorkManager](https://github.com/evernote/android-job#workmanager) instead of this library.\n\n# ~~Android-Job~~\n\nA utility library for Android to run jobs delayed in the background. Depending on the Android version either the `JobScheduler`, `GcmNetworkManager` or `AlarmManager` is getting used. You can find out in [this blog post](https://blog.evernote.com/tech/2015/10/26/unified-job-library-android/) or in [these slides](https://speakerdeck.com/vrallev/doo-z-z-z-z-z-e?slide=50) why you should prefer this library than each separate API. All features from Android Oreo are backward compatible back to Ice Cream Sandwich.\n\n## Target SDK 31\n\nWhen targeting API 31 and you still use this library (you really should not and migrate to WorkManager instead), then don't forget to add the [exact alarm permission](https://developer.android.com/about/versions/12/behavior-changes-12#exact-alarm-permission) when using exact jobs.\n\n## Download\n\nDownload [the latest version](http://search.maven.org/#search|gav|1|g:\"com.evernote\"%20AND%20a:\"android-job\") or grab via Gradle:\n\n```groovy\ndependencies {\n    implementation 'com.evernote:android-job:1.4.3'\n}\n```\n\nStarting with version `1.3.0` the library will use the `WorkManager` internally, please read the [documentation](https://github.com/evernote/android-job#workmanager) and opt-in.\n\nIf you didn't turn off the manifest merger from the Gradle build tools, then no further step is required to setup the library. Otherwise you manually need to add the permissions and services like in this [AndroidManifest](library/src/main/AndroidManifest.xml).\n\nYou can read the [JavaDoc here](https://evernote.github.io/android-job/javadoc/).\n\n## Usage\n\nThe class `JobManager` serves as entry point. Your jobs need to extend the class `Job`. Create a `JobRequest` with the corresponding builder class and schedule this request with the `JobManager`.\n\nBefore you can use the `JobManager` you must initialize the singleton. You need to provide a `Context` and add a `JobCreator` implementation after that. The `JobCreator` maps a job tag to a specific job class. It's recommended to initialize the `JobManager` in the `onCreate()` method of your `Application` object, but there is [an alternative](https://github.com/evernote/android-job/wiki/FAQ#i-cannot-override-the-application-class-how-can-i-add-my-jobcreator), if you don't have access to the `Application` class.\n\n```java\npublic class App extends Application {\n\n    @Override\n    public void onCreate() {\n        super.onCreate();\n        JobManager.create(this).addJobCreator(new DemoJobCreator());\n    }\n}\n```\n\n```java\npublic class DemoJobCreator implements JobCreator {\n\n    @Override\n    @Nullable\n    public Job create(@NonNull String tag) {\n        switch (tag) {\n            case DemoSyncJob.TAG:\n                return new DemoSyncJob();\n            default:\n                return null;\n        }\n    }\n}\n```\n\nAfter that you can start scheduling jobs.\n\n```java\npublic class DemoSyncJob extends Job {\n\n    public static final String TAG = \"job_demo_tag\";\n\n    @Override\n    @NonNull\n    protected Result onRunJob(Params params) {\n        // run your job here\n        return Result.SUCCESS;\n    }\n\n    public static void scheduleJob() {\n        new JobRequest.Builder(DemoSyncJob.TAG)\n                .setExecutionWindow(30_000L, 40_000L)\n                .build()\n                .schedule();\n    }\n}\n```\n\n## Advanced\n\nThe `JobRequest.Builder` class has many extra options, e.g. you can specify a required network connection, make the job periodic, pass some extras with a bundle, restore the job after a reboot or run the job at an exact time.\n\nEach job has a unique ID. This ID helps to identify the job later to update requirements or to cancel the job.\n\n```java\nprivate void scheduleAdvancedJob() {\n    PersistableBundleCompat extras = new PersistableBundleCompat();\n    extras.putString(\"key\", \"Hello world\");\n\n    int jobId = new JobRequest.Builder(DemoSyncJob.TAG)\n            .setExecutionWindow(30_000L, 40_000L)\n            .setBackoffCriteria(5_000L, JobRequest.BackoffPolicy.EXPONENTIAL)\n            .setRequiresCharging(true)\n            .setRequiresDeviceIdle(false)\n            .setRequiredNetworkType(JobRequest.NetworkType.CONNECTED)\n            .setExtras(extras)\n            .setRequirementsEnforced(true)\n            .setUpdateCurrent(true)\n            .build()\n            .schedule();\n}\n\nprivate void schedulePeriodicJob() {\n    int jobId = new JobRequest.Builder(DemoSyncJob.TAG)\n            .setPeriodic(TimeUnit.MINUTES.toMillis(15), TimeUnit.MINUTES.toMillis(5))\n            .build()\n            .schedule();\n}\n\nprivate void scheduleExactJob() {\n    int jobId = new JobRequest.Builder(DemoSyncJob.TAG)\n            .setExact(20_000L)\n            .build()\n            .schedule();\n}\n\nprivate void runJobImmediately() {\n    int jobId = new JobRequest.Builder(DemoSyncJob.TAG)\n            .startNow()\n            .build()\n            .schedule();\n}\n\nprivate void cancelJob(int jobId) {\n    JobManager.instance().cancel(jobId);\n}\n```\n\nIf a non periodic `Job` fails, then you can reschedule it with the defined back-off criteria.\n\n```java\npublic class RescheduleDemoJob extends Job {\n\n    @Override\n    @NonNull\n    protected Result onRunJob(Params params) {\n        // something strange happened, try again later\n        return Result.RESCHEDULE;\n    }\n\n    @Override\n    protected void onReschedule(int newJobId) {\n        // the rescheduled job has a new ID\n    }\n}\n```\n\n#### Proguard\n\nThe library doesn't use reflection, but it relies on three `Service`s and two `BroadcastReceiver`s. In order to avoid any issues, you shouldn't obfuscate those four classes. The library bundles its own Proguard config and you don't need to do anything, but just in case you can add [these rules](library/proguard.cfg) in your configuration.\n\n## More questions?\n\nSee the [FAQ](https://github.com/evernote/android-job/wiki/FAQ) in the [Wiki](https://github.com/evernote/android-job/wiki).\n\n## WorkManager\n\n[WorkManager](https://developer.android.com/topic/libraries/architecture/workmanager) is a new architecture component from Google and tries to solve a very similar problem this library tries to solve: implementing background jobs only once for all Android versions. The API is very similar to this library, but provides more features like chaining work items and it runs its own executor.\n\nIf you start a new project, you should be using `WorkManager` instead of this library. You should also start migrating your code from this library to `WorkManager`. At some point in the future this library will be deprecated.\n\nStarting with version `1.3.0` this library will use the `WorkManager` internally for scheduling jobs. That should ease the transition to the new architecture component. You only need to add the `WorkManager` to your classpath, e.g.\n```groovy\ndependencies {\n    implementation \"android.arch.work:work-runtime:$work_version\"\n}\n```\n\nPlease take a look at the [Wiki](https://github.com/evernote/android-job/wiki/Migrating-to-WorkManager) for a complete transition guide.\n\nThe API and feature set of `android-job` and `WorkManager` are really similar. However, some features are unique and only supported by one or the other\n\n| Feature | android-job | WorkManager |\n| --- | --- | --- |\n| Exact jobs | Yes | No |\n| Transient jobs | Yes | No |\n| Daily jobs | Yes | No |\n| Custom Logger | Yes | No |\n| Observe job status | No | Yes |\n| Chained jobs | No | Yes |\n| Work sequences | No | Yes |\n\n## Google Play Services\n\nThis library does **not** automatically bundle the Google Play Services, because the dependency is really heavy and not all apps want to include them. That's why you need to add the dependency manually, if you want that the library uses the `GcmNetworkManager` on Android 4, then include the following dependency.\n```groovy\ndependencies {\n    compile \"com.google.android.gms:play-services-gcm:latest_version\"\n}\n```\nBecause of recent changes in the support library, you must turn on the service manually in your `AndroidManifest.xml`\n```xml\n<service\n    android:name=\"com.evernote.android.job.gcm.PlatformGcmService\"\n    android:enabled=\"true\"\n    tools:replace=\"android:enabled\"/>\n```\nIf you don't turn on the service, the library will always use the `AlarmManager` on Android 4.x.\n\nCrashes after removing the GCM dependency is a known limitation of the Google Play Services. Please take a look at [this workaround](https://github.com/evernote/android-job/wiki/FAQ#how-can-i-remove-the-gcm-dependency-from-my-app) to avoid those crashes.\n\n## License\n```\nCopyright (c) 2007-2017 by Evernote Corporation, All rights reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```\n"
        },
        {
          "name": "build-config",
          "type": "tree",
          "content": null
        },
        {
          "name": "build.gradle",
          "type": "blob",
          "size": 1.5244140625,
          "content": "buildscript {\n    repositories {\n        google()\n        mavenCentral()\n        gradlePluginPortal()\n    }\n    dependencies {\n        classpath 'com.android.tools.build:gradle:7.1.3'\n        classpath 'com.vanniktech:gradle-maven-publish-plugin:0.18.0'\n    }\n}\n\nallprojects {\n    repositories {\n        google()\n        mavenCentral()\n    }\n\n    tasks.withType(JavaCompile) {\n        options.compilerArgs << \"-Xlint:unchecked\"\n        options.compilerArgs << \"-Xlint:deprecation\"\n    }\n}\n\next {\n    compileSdkVersion = 31\n    targetSdkVersion = compileSdkVersion\n    minSdkVersion = 14\n\n    playServicesVersion = '17.0.0'\n    workVersion = '2.7.0'\n    stethoVersion = '1.5.0'\n    junitVersion = '4.13.2'\n    assertjVersion = '3.6.2'\n    mockitoVersion = '3.12.4'\n    robolectricVersion = '4.7.3'\n}\n\nallprojects {\n  configurations.all {\n    resolutionStrategy.eachDependency { details ->\n      if (details.requested.group == 'androidx.arch.core'\n          && details.requested.name.contains('core-common')) {\n        details.useVersion '2.0.1'\n      }\n      if (details.requested.group == 'androidx.collection'\n          && details.requested.name.contains('collection')) {\n        details.useVersion '1.0.0'\n      }\n      if (details.requested.group == 'androidx.lifecycle'\n          && details.requested.name.contains('lifecycle-runtime')) {\n        details.useVersion '2.0.0'\n      }\n    }\n  }\n}\n\ntask updateWrapper(type: Wrapper) {\n    gradleVersion = '7.4.2'\n    distributionUrl = \"https://services.gradle.org/distributions/gradle-$gradleVersion-all.zip\"\n}\n"
        },
        {
          "name": "demo",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradle.properties",
          "type": "blob",
          "size": 0.669921875,
          "content": "android.useAndroidX=true\nandroid.enableJetifier=true\n\nGROUP=com.evernote\nVERSION_NAME=1.4.3\nVERSION_CODE=1\n\nPOM_DESCRIPTION=Android library to handle jobs in the background.\nPOM_INCEPTION_YEAR=2015\n\nPOM_URL=https://github.com/evernote/android-job\nPOM_SCM_URL=https://github.com/evernote/android-job\nPOM_SCM_CONNECTION=scm:git:git://github.com/evernote/android-job.git\nPOM_SCM_DEV_CONNECTION=scm:git:git@github.com:evernote/android-job.git\n\nPOM_LICENCE_NAME=The Apache Software License, Version 2.0\nPOM_LICENCE_URL=https://www.apache.org/licenses/LICENSE-2.0.txt\nPOM_LICENCE_DIST=repo\n\nPOM_DEVELOPER_ID=evernote\nPOM_DEVELOPER_NAME=Evernote\nPOM_DEVELOPER_URL=https://github.com/evernote/\n"
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 7.880859375,
          "content": "#!/bin/sh\n\n#\n# Copyright © 2015-2021 the original authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      https://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\n##############################################################################\n#\n#   Gradle start up script for POSIX generated by Gradle.\n#\n#   Important for running:\n#\n#   (1) You need a POSIX-compliant shell to run this script. If your /bin/sh is\n#       noncompliant, but you have some other compliant shell such as ksh or\n#       bash, then to run this script, type that shell name before the whole\n#       command line, like:\n#\n#           ksh Gradle\n#\n#       Busybox and similar reduced shells will NOT work, because this script\n#       requires all of these POSIX shell features:\n#         * functions;\n#         * expansions «$var», «${var}», «${var:-default}», «${var+SET}»,\n#           «${var#prefix}», «${var%suffix}», and «$( cmd )»;\n#         * compound commands having a testable exit status, especially «case»;\n#         * various built-in commands including «command», «set», and «ulimit».\n#\n#   Important for patching:\n#\n#   (2) This script targets any POSIX shell, so it avoids extensions provided\n#       by Bash, Ksh, etc; in particular arrays are avoided.\n#\n#       The \"traditional\" practice of packing multiple parameters into a\n#       space-separated string is a well documented source of bugs and security\n#       problems, so this is (mostly) avoided, by progressively accumulating\n#       options in \"$@\", and eventually passing that to Java.\n#\n#       Where the inherited environment variables (DEFAULT_JVM_OPTS, JAVA_OPTS,\n#       and GRADLE_OPTS) rely on word-splitting, this is performed explicitly;\n#       see the in-line comments for details.\n#\n#       There are tweaks for specific operating systems such as AIX, CygWin,\n#       Darwin, MinGW, and NonStop.\n#\n#   (3) This script is generated from the Groovy template\n#       https://github.com/gradle/gradle/blob/master/subprojects/plugins/src/main/resources/org/gradle/api/internal/plugins/unixStartScript.txt\n#       within the Gradle project.\n#\n#       You can find Gradle at https://github.com/gradle/gradle/.\n#\n##############################################################################\n\n# Attempt to set APP_HOME\n\n# Resolve links: $0 may be a link\napp_path=$0\n\n# Need this for daisy-chained symlinks.\nwhile\n    APP_HOME=${app_path%\"${app_path##*/}\"}  # leaves a trailing /; empty if no leading path\n    [ -h \"$app_path\" ]\ndo\n    ls=$( ls -ld \"$app_path\" )\n    link=${ls#*' -> '}\n    case $link in             #(\n      /*)   app_path=$link ;; #(\n      *)    app_path=$APP_HOME$link ;;\n    esac\ndone\n\nAPP_HOME=$( cd \"${APP_HOME:-./}\" && pwd -P ) || exit\n\nAPP_NAME=\"Gradle\"\nAPP_BASE_NAME=${0##*/}\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS='\"-Xmx64m\" \"-Xms64m\"'\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=maximum\n\nwarn () {\n    echo \"$*\"\n} >&2\n\ndie () {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n} >&2\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\nnonstop=false\ncase \"$( uname )\" in                #(\n  CYGWIN* )         cygwin=true  ;; #(\n  Darwin* )         darwin=true  ;; #(\n  MSYS* | MINGW* )  msys=true    ;; #(\n  NONSTOP* )        nonstop=true ;;\nesac\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=$JAVA_HOME/jre/sh/java\n    else\n        JAVACMD=$JAVA_HOME/bin/java\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=java\n    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\nfi\n\n# Increase the maximum file descriptors if we can.\nif ! \"$cygwin\" && ! \"$darwin\" && ! \"$nonstop\" ; then\n    case $MAX_FD in #(\n      max*)\n        MAX_FD=$( ulimit -H -n ) ||\n            warn \"Could not query maximum file descriptor limit\"\n    esac\n    case $MAX_FD in  #(\n      '' | soft) :;; #(\n      *)\n        ulimit -n \"$MAX_FD\" ||\n            warn \"Could not set maximum file descriptor limit to $MAX_FD\"\n    esac\nfi\n\n# Collect all arguments for the java command, stacking in reverse order:\n#   * args from the command line\n#   * the main class name\n#   * -classpath\n#   * -D...appname settings\n#   * --module-path (only if needed)\n#   * DEFAULT_JVM_OPTS, JAVA_OPTS, and GRADLE_OPTS environment variables.\n\n# For Cygwin or MSYS, switch paths to Windows format before running java\nif \"$cygwin\" || \"$msys\" ; then\n    APP_HOME=$( cygpath --path --mixed \"$APP_HOME\" )\n    CLASSPATH=$( cygpath --path --mixed \"$CLASSPATH\" )\n\n    JAVACMD=$( cygpath --unix \"$JAVACMD\" )\n\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    for arg do\n        if\n            case $arg in                                #(\n              -*)   false ;;                            # don't mess with options #(\n              /?*)  t=${arg#/} t=/${t%%/*}              # looks like a POSIX filepath\n                    [ -e \"$t\" ] ;;                      #(\n              *)    false ;;\n            esac\n        then\n            arg=$( cygpath --path --ignore --mixed \"$arg\" )\n        fi\n        # Roll the args list around exactly as many times as the number of\n        # args, so each arg winds up back in the position where it started, but\n        # possibly modified.\n        #\n        # NB: a `for` loop captures its iteration list before it begins, so\n        # changing the positional parameters here affects neither the number of\n        # iterations, nor the values presented in `arg`.\n        shift                   # remove old arg\n        set -- \"$@\" \"$arg\"      # push replacement arg\n    done\nfi\n\n# Collect all arguments for the java command;\n#   * $DEFAULT_JVM_OPTS, $JAVA_OPTS, and $GRADLE_OPTS can contain fragments of\n#     shell script including quotes and variable substitutions, so put them in\n#     double quotes to make sure that they get re-expanded; and\n#   * put everything else in single quotes, so that it's not re-expanded.\n\nset -- \\\n        \"-Dorg.gradle.appname=$APP_BASE_NAME\" \\\n        -classpath \"$CLASSPATH\" \\\n        org.gradle.wrapper.GradleWrapperMain \\\n        \"$@\"\n\n# Use \"xargs\" to parse quoted args.\n#\n# With -n1 it outputs one arg per line, with the quotes and backslashes removed.\n#\n# In Bash we could simply go:\n#\n#   readarray ARGS < <( xargs -n1 <<<\"$var\" ) &&\n#   set -- \"${ARGS[@]}\" \"$@\"\n#\n# but POSIX shell has neither arrays nor command substitution, so instead we\n# post-process each arg (as a line of input to sed) to backslash-escape any\n# character that might be a shell metacharacter, then use eval to reverse\n# that process (while maintaining the separation between arguments), and wrap\n# the whole thing up as a single \"set\" statement.\n#\n# This will of course break if any of these variables contains a newline or\n# an unmatched quote.\n#\n\neval \"set -- $(\n        printf '%s\\n' \"$DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS\" |\n        xargs -n1 |\n        sed ' s~[^-[:alnum:]+,./:=@_]~\\\\&~g; ' |\n        tr '\\n' ' '\n    )\" '\"$@\"'\n\nexec \"$JAVACMD\" \"$@\"\n"
        },
        {
          "name": "gradlew.bat",
          "type": "blob",
          "size": 2.611328125,
          "content": "@rem\n@rem Copyright 2015 the original author or authors.\n@rem\n@rem Licensed under the Apache License, Version 2.0 (the \"License\");\n@rem you may not use this file except in compliance with the License.\n@rem You may obtain a copy of the License at\n@rem\n@rem      https://www.apache.org/licenses/LICENSE-2.0\n@rem\n@rem Unless required by applicable law or agreed to in writing, software\n@rem distributed under the License is distributed on an \"AS IS\" BASIS,\n@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@rem See the License for the specific language governing permissions and\n@rem limitations under the License.\n@rem\n\n@if \"%DEBUG%\" == \"\" @echo off\n@rem ##########################################################################\n@rem\n@rem  Gradle startup script for Windows\n@rem\n@rem ##########################################################################\n\n@rem Set local scope for the variables with windows NT shell\nif \"%OS%\"==\"Windows_NT\" setlocal\n\nset DIRNAME=%~dp0\nif \"%DIRNAME%\" == \"\" set DIRNAME=.\nset APP_BASE_NAME=%~n0\nset APP_HOME=%DIRNAME%\n\n@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.\nfor %%i in (\"%APP_HOME%\") do set APP_HOME=%%~fi\n\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nset DEFAULT_JVM_OPTS=\"-Xmx64m\" \"-Xms64m\"\n\n@rem Find java.exe\nif defined JAVA_HOME goto findJavaFromJavaHome\n\nset JAVA_EXE=java.exe\n%JAVA_EXE% -version >NUL 2>&1\nif \"%ERRORLEVEL%\" == \"0\" goto execute\n\necho.\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\necho.\necho Please set the JAVA_HOME variable in your environment to match the\necho location of your Java installation.\n\ngoto fail\n\n:findJavaFromJavaHome\nset JAVA_HOME=%JAVA_HOME:\"=%\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\n\nif exist \"%JAVA_EXE%\" goto execute\n\necho.\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\necho.\necho Please set the JAVA_HOME variable in your environment to match the\necho location of your Java installation.\n\ngoto fail\n\n:execute\n@rem Setup the command line\n\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\n\n\n@rem Execute Gradle\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*\n\n:end\n@rem End local scope for the variables with windows NT shell\nif \"%ERRORLEVEL%\"==\"0\" goto mainEnd\n\n:fail\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\nrem the _cmd.exe /c_ return code!\nif  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1\nexit /b 1\n\n:mainEnd\nif \"%OS%\"==\"Windows_NT\" endlocal\n\n:omega\n"
        },
        {
          "name": "library",
          "type": "tree",
          "content": null
        },
        {
          "name": "settings.gradle",
          "type": "blob",
          "size": 0.02734375,
          "content": "include ':demo', ':library'\n"
        }
      ]
    }
  ]
}