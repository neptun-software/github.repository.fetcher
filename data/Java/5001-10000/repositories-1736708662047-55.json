{
  "metadata": {
    "timestamp": 1736708662047,
    "page": 55,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjYw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "junit-team/junit4",
      "stars": 8523,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.96484375,
          "content": "* text eol=lf\n*.gif binary\n*.GIF binary\n*.jar binary\n*.png binary\n*.jpg binary\n*.svg text eol=lf\n\n# These files do not have unix line endings. Do not normalize them for now.\n# Will fix these right before we cut JUnit 4.13.\n/src/main/java/org/junit/experimental/categories/CategoryFilterFactory.java -text\n/src/main/java/org/junit/experimental/categories/ExcludeCategories.java -text\n/src/main/java/org/junit/experimental/categories/IncludeCategories.java -text\n/src/main/java/org/junit/internal/Classes.java -text\n/src/main/java/org/junit/runner/FilterFactories.java -text\n/src/main/java/org/junit/runner/FilterFactory.java -text\n/src/main/java/org/junit/runner/FilterFactoryParams.java -text\n/src/main/java/org/junit/runner/JUnitCommandLineParseResult.java -text\n/src/test/java/org/junit/experimental/categories/CategoryFilterFactoryTest.java -text\n/src/test/java/org/junit/runner/FilterFactoriesTest.java -text\n/src/test/java/org/junit/runner/JUnitCommandLineParseResultTest.java -text\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.10546875,
          "content": "MaxCore.ser\nbin\njunit4.*\ntarget\nMaxCore.max\n# IntelliJ\n.idea\n*.ipr\n*.iml\n*.iws\nout\njava.hprof.txt\n.DS_Store\n"
        },
        {
          "name": ".mvn",
          "type": "tree",
          "content": null
        },
        {
          "name": ".settings",
          "type": "tree",
          "content": null
        },
        {
          "name": "BUILDING",
          "type": "blob",
          "size": 0.4365234375,
          "content": "BUILDING FROM GITHUB:\n=====================\n\ngit clone https://github.com/junit-team/junit4.git\ncd junit4\nmvn install\n\nBUILDING FROM JARS OR ZIPS:\n===========================\n\nThe contents of the zip and jar files are largely maintained for historical\nreasons.  We do not at this time have an official way to build from the src\njar or zip.  If this is an important missing feature, please let us know\nat http://github.com/junit-team/junit4/issues\n"
        },
        {
          "name": "CODING_STYLE.txt",
          "type": "blob",
          "size": 0.46875,
          "content": "JUnit project uses the Google Java Style (https://github.com/google/styleguide) for all new\ncode (under org.junit.*). Deviating from this, indentation is 4 spaces instead of 2.\n\nBe sure to set text file encoding to UTF-8 and line delimiters to UNIX style.\n\nSince not all code has been formatted yet, please format only code lines you changed to avoid extraneous changes.\n\nLegacy code (under junit.*) used the legacy guide specified in LEGACY_CODING_STYLE.txt in the\nproject root.\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 2.744140625,
          "content": "## Project License:  Eclipse Public License v1.0\n\n- You will only Submit Contributions where You have authored 100% of the content.\n- You will only Submit Contributions to which You have the necessary rights. This means that if You are employed You have received the necessary permissions from Your employer to make the Contributions.\n- Whatever content You Contribute will be provided under the Project License(s).\n\n## Building\n\n### Command line\n\nYou need to have Maven and a JDK (at least version 1.5) installed.\n\nRun `./mvnw verify` to build the code and run the tests\n\n### Eclipse\n\nMaven can generate project files for Eclipse. See [these instructions](https://mkyong.com/maven/how-to-convert-maven-java-project-to-support-eclipse-ide/) for details.\n\n## Coding Conventions\n\n### Formatting\n\nSee [CODING_STYLE.txt](CODING_STYLE.txt) for how we format our code.\n\n## How to submit a pull request\n\nWe love pull requests. Here is a quick guide:\n\n1. You need to have Maven and a JDK (at least version 1.5) installed.\n2. [Fork the repo](https://help.github.com/articles/fork-a-repo).\n3. [Create a new branch](https://help.github.com/articles/creating-and-deleting-branches-within-your-repository/) from `main`.\n4. Ensure that you have a clean state by running `./mvnw verify`.\n5. Add your change together with a test (tests are not needed for refactorings and documentation changes).\n6. Format your code: Import the JUnit project in Eclipse and use its formatter or apply the rules in the `CODING_STYLE` file manually. Only format the code you've changed; reformatting unrelated code makes it harder for us to review your changes.\n7. Run `./mvnw verify` again and ensure all tests are passing.\n8. Push to your fork and [submit a pull request](https://help.github.com/articles/creating-a-pull-request/).\n\nNow you are waiting on us. We review your pull request and at least leave some comments.\n\n\nNote that if you are thinking of providing a fix for one of the bugs or feature requests, it's usually\na good idea to add a comment to the bug to make sure that there's agreement on how we should proceed.\n\n## Limitations\n\nThe JUnit team is not accepting changes to the code under the following paths:\n\n* `src/main/java/junit`\n* `test/java/junit/tests/framework`\n* `test/java/junit/tests/extensions`\n\nThe reasoning is that the JUnit team feels that our users should focus on using either the JUnit4 or JUnit5 APIs.\n\nThe team is also reluctant to accept changes that only update code from one code style to another.\nGenerally the code in JUnit was approved by at least one person, so two people agreed that the style was reasonable.\n\nTo find other places where you can have an impact, please see the [Issues tagged \"up-for-grabs\"](https://github.com/junit-team/junit4/issues?q=is%3Aissue+is%3Aopen+label%3Aup-for-grabs).\n"
        },
        {
          "name": "KEYS",
          "type": "blob",
          "size": 3.7431640625,
          "content": "This file contains the PGP key that is used to sign releases.\n\nImporting: `pgp < KEYS` or `gpg --import KEYS`\n\nAdding a key:\n`pgp -kxa <your name> >> KEYS`,\nor `(pgpk -ll <your name> && pgpk -xa <your name>) >> KEYS`,\nor `(gpg --list-sigs <your name> && gpg --armor --export <your name>) >> KEYS`\n\n================================\n\npub   rsa4096 2018-04-08 [SC]\n      FF6E2C001948C5F2F38B0CC385911F425EC61B51\nuid           [ unknown] Open Source Development <mail@marcphilipp.de>\nsig 3        85911F425EC61B51 2018-04-08  Open Source Development <mail@marcphilipp.de>\nsub   rsa4096 2018-04-08 [E]\nsig          85911F425EC61B51 2018-04-08  Open Source Development <mail@marcphilipp.de>\n\n-----BEGIN PGP PUBLIC KEY BLOCK-----\n\nmQINBFrKW9IBEACkqUvM7hU1WqOOeb1gZ7pUsRliHuoUvYIrd+hdp+qhPmJ0NG0W\nYhZK5UtJBmqvtHKRkbwYxUuya9zlBmCfQFf0GpFKJ65JSrPSkZADI3aZ4aUkxIUw\nnIRoUHucmr10Xftpebr/zaJk5oR8RdaL5FapapmcZmAaHR9CDWB8XtI318u314jq\nM5rKatnAZMERoPugOvvuAOz4bfZKwdfCmZKfYUM/TMSrSinXrGExSW6z4RhtqmpC\nE5M/7OoVfvDynVJKqNazqgigpmMNhOyzAhQsiKh1K0akyxTZbjeZKsdYfhCXvq0q\nk9+KM/cTllQ54MPnFWiObLkHeK0Waw8bI/vAJ4h4x/XM9iGYpkXv7F2/FVsHQdPe\nYJcwD/CkD8KHyiPaRKMeApiUtZsdAHU0L4X/lNmcooea/7ipskruUgwcm+RdLhRZ\nP949t1e7nqDZfpEHy90NiFxmlRAPSNqBLwefxY/hwBgog2jabDALJVcLCMosFWPj\nMQhFlGSIODiVcW8folGIjzkyNZbNMWkwnl2QnWp/h2TAwYQJOMqcv2MG9o5pyzpx\n97Iz1ngq1FlM/gJnGnNUydP2tAjT2L2U3MP1uX/EdRChdgPqdolqYhdFfwCr0Fpf\nW527bUZpReHCEiQ29ABSnQ711mO+d9+qM6edRyHUoBWz89IHt8sCunuvNwARAQAB\ntC1PcGVuIFNvdXJjZSBEZXZlbG9wbWVudCA8bWFpbEBtYXJjcGhpbGlwcC5kZT6J\nAk4EEwEIADgWIQT/biwAGUjF8vOLDMOFkR9CXsYbUQUCWspb0gIbAwULCQgHAgYV\nCAkKCwIEFgIDAQIeAQIXgAAKCRCFkR9CXsYbUQyRD/9xm3BqdpWcRCE5UyB6nbwV\n8TgzMmbOhpFhhcjzobly/pKAbcofKsjhreENJkfBVUo+zAFx21ToC5tbH20wRtIE\nvQVCP6sAIzhYWU1ohafqVFP4+PztNBuYTnS6vGvSwzp0IXLIIoxSxo0IOED9uUS9\nDTxh1n9NnDLDe2pfjrXBblQtLSW3W5ISDoUvcoyO7Hk1OByW6MNsSoLvXIUNeVhB\nju9TfYxFACJSWBhUxJfgip9Y2GrNBJaYGLZrTAoW1Lh1H1DfLV3wHDClQ1+H+oyx\nIOZULEGYY3MgZTd6Ner2yNAUCB7gVa50NiCZXCS74m+XzMrTEsdWjSMUaOe+dL0I\n9MCrgi4ycUHWIfTKx9gGlIOo3hSDMN+8Nj33XPjLT8kcfoFeUX8jTOvC1HFfTuQJ\nx2t/dKHizdrS3F6A/JQa7v8GNTrZFnEXkwgRTf3ccLoo3gPwzNJeCm2xNjvne1VH\nfvxzwNmq8M05oicEigvEed2VMStMhvT7dSiMAf66rEJHjjaHAoNqbLDEATYrWUP2\nI52txHSSxSJohxVP6Ec6dERnqqYi0mVyzBPo7mmFFBisq74w8RvZXyzvXE3BTiDL\nwe1E/Z/AXbtJye9DickQ/G6RFtVLbUHQfzyRS/65JPtlH8rqJr58YWlylGImVLwE\nOsKNQrwLZ0UkfaWV7wqr3rkCDQRaylvSARAAnQG636wliEOLkXN662OZS6Qz2+cF\nltCWboq9oX9FnA1PHnTY2cAtwS214RfWZxkjg6Stau+d1Wb8TsF/SUN3eKRSyrkA\nxlX0v552vj3xmmfNsslQX47e6aEWZ0du0M8jw7/f7Qxp0InkBfpQwjSg4ECoH4cA\n6dOFJIdxBv8dgS4K90HNuIHa+QYfVSVMjGwOjD9St6Pwkbg1sLedITRo59Bbv0J1\n4nE9LdWbCiwNrkDr24jTewdgrDaCpN6msUwcH1E0nYxuKAetHEi2OpgBhaY3RQ6Q\nPQB6NywvmD0xRllMqu4hSp70pHFtm8LvJdWOsJ5we3KijHuZzEbBVTTl+2DhNMI0\nKMoh+P/OmyNOfWD8DL4NO3pVv+mPDZn82/eZ3XY1/oSQrpyJaCBjRKasVTtfiA/F\ngYqTml6qZMjy6iywg84rLezELgcxHHvjhAKd4CfxyuCCgnGT0iRLFZKw44ZmOUqP\nDkyvGRddIyHag1K7UaM/2UMn6iPMy7XWcaFiH5Huhz43SiOdsWGuwNk4dDxHdxmz\nSjps0H5dkfCciOFhEc54AFcGEXCWHXuxVqIq/hwqTmVl1RY+PTcQUIOfx36WW1ix\nJQf8TpVxUbooK8vr1jOFF6khorDXoZDJNhI2VKomWp8Y38EPGyiUPZNcnmSiezx+\nMoQwAbeqjFMKG7UAEQEAAYkCNgQYAQgAIBYhBP9uLAAZSMXy84sMw4WRH0JexhtR\nBQJaylvSAhsMAAoJEIWRH0JexhtR0LEP/RvYGlaokoosAYI5vNORAiYEc1Ow2McP\nI1ZafHhcVxZhlwF48dAC2bYcasDX/PbEdcD6pwo8ZU8eI8Ht0VpRQxeV/sP01m2Y\nEpAuyZ6jI7IQQCGcwQdN4qzQJxMAASl9JlplH2NniXV1/994FOtesT59ePMyexm5\n7lzhYXP1PGcdt8dH37r6z3XQu0lHRG/KBn7YhyA3zwJcno324KdBRJiynlc7uqQq\n+ZptU9fR1+Nx0uoWZoFMsrQUmY34aAOPJu7jGMTG+VseMH6vDdNhhZs9JOlD/e/V\naF7NyadjOUD4j/ud7c0z2EwqjDKMFTHGbIdawT/7jartT+9yGUO+EmScBMiMuJUT\ndCP4YDh3ExRdqefEBff3uE/rAP73ndNYdIVq9U0gY0uSNCD9JPfj4aCN52y9a2pS\n7Dg7KB/Z8SH1R9IWP+t0HvVtAILdsLExNFTedJGHRh7uaC7pwRz01iivmtAKYICz\nruqlJie/IdEFFK/sus6fZek29odTrQxx42HGHO5GCNyEdK9jKVAeuZ10vcaNbuBp\niP7sf8/BsiEU4wHE8gjFeUPRiSjnERgXQwfJosLgf/K/SShQn2dCkYZRNF+SWJ6Z\n2tQxcW5rpUjtclV/bRVkUX21EYfwA6SMB811mI7AVy8WPXCe8La72ukmaxEGbpJ8\nmdzS2PJko7mm\n=l0XA\n-----END PGP PUBLIC KEY BLOCK-----\n"
        },
        {
          "name": "LEGACY_CODING_STYLE.txt",
          "type": "blob",
          "size": 2.6552734375,
          "content": "==================================\nCoding style\n==================================\n\n----------------------------------\nTabs and Indents\n----------------------------------\n* Tab size : 4\n* Indent : 4\n* Continuation indent : 8\n* Label indent : 0\n\n> Don't use tab characters.\n\n----------------------------------\nSpaces\n----------------------------------\nBefore Parentheses\n* if parentheses\n* for parentheses\n* while parentheses\n* switch parentheses\n* try parentheses\n* catch parentheses\n* synchronized parentheses\n\nAround Operators\n* Assignment operators (=, +=, …)\n* Logical operators (&&, ||)\n* Equality operators (==, !=)\n* Relational operators (<, >, <=, >=)\n* Bitwise operators (&, |, ^)\n* Additive operators (+, -)\n* Multiplicative operators (*, /, %)\n* Shift operators (<<, >>, >>>)\n\nBefore Left Brace\n* Class left brace\n* Method left brace\n* if left brace\n* else left brace\n* for left brace\n* while left brace\n* do left brace\n* switch left brace\n* try left brace\n* catch left brace\n* finally left brace\n* synchronized left brace\n\nBefore Keywords\n* else keyword\n* while keyword\n* catch keyword\n* finally keyword\n\nIn Ternary Operator (?:)\n* Before ?\n* After ?\n* Before :\n* After :\n\nWithin Type Arguments\n* After comma\n\nOther\n* After comma\n* After semicolon\n* After type cast\n\n----------------------------------\nWrapping and Braces\n----------------------------------\nBraces placement\n* In class declaration : End of line\n* In method declaration : End of line\n* Other : End of line\n\nUse Of Braces\n* if() statement : When multiline\n* for() statement : When multiline\n* while() statement : When multiline\n* do .. while() statement : When multiline\n\nAnnotations\n* Class annotations : Wrap always\n* Method annotations : Wrap always\n* Field annotations : Wrap always\n* Parameter annotations : Do not wrap\n* Local variable annotations : Do not wrap\n\n----------------------------------\nBlank Lines\n----------------------------------\nMinimum Blank Lines\n* Before package statement : 0\n* After package statement : 1\n* Before imports : 1\n* After imports : 1\n* Around class : 1\n* After class header : 0\n* After anonymous class header : 0\n* Around field in interface : 0\n* Around field : 0\n* Around method in interface : 1\n* Around method : 1\n* Before method body : 0 \n\n----------------------------------\nJavaDoc\n----------------------------------\nAlignment\n* Align thrown exception descriptions\n\nBlank Lines\n* After description\n\nOther\n* Enable leading asterisks\n* Use @throws rather than @exception\n* Keep empty lines\n\n----------------------------------\nImports\n----------------------------------\nimport static (all other imports)\n<blank line>\nimport java.*\nimport javax.*\nimport com.*\n<blank line> \nimport (all other imports)\n"
        },
        {
          "name": "LICENSE-junit.txt",
          "type": "blob",
          "size": 11.109375,
          "content": "JUnit\n\nEclipse Public License - v 1.0\n\nTHE ACCOMPANYING PROGRAM IS PROVIDED UNDER THE TERMS OF THIS ECLIPSE PUBLIC\nLICENSE (\"AGREEMENT\"). ANY USE, REPRODUCTION OR DISTRIBUTION OF THE PROGRAM\nCONSTITUTES RECIPIENT'S ACCEPTANCE OF THIS AGREEMENT.\n\n1. DEFINITIONS\n\n\"Contribution\" means:\n\n      a) in the case of the initial Contributor, the initial code and\n         documentation distributed under this Agreement, and\n      b) in the case of each subsequent Contributor:\n\n      i) changes to the Program, and\n\n      ii) additions to the Program;\n\n      where such changes and/or additions to the Program originate from and are\ndistributed by that particular Contributor. A Contribution 'originates' from a\nContributor if it was added to the Program by such Contributor itself or anyone\nacting on such Contributor's behalf. Contributions do not include additions to\nthe Program which: (i) are separate modules of software distributed in\nconjunction with the Program under their own license agreement, and (ii) are\nnot derivative works of the Program. \n\n\"Contributor\" means any person or entity that distributes the Program.\n\n\"Licensed Patents \" mean patent claims licensable by a Contributor which are\nnecessarily infringed by the use or sale of its Contribution alone or when\ncombined with the Program.\n\n\"Program\" means the Contributions distributed in accordance with this Agreement.\n\n\"Recipient\" means anyone who receives the Program under this Agreement,\nincluding all Contributors.\n\n2. GRANT OF RIGHTS\n\n      a) Subject to the terms of this Agreement, each Contributor hereby grants\nRecipient a non-exclusive, worldwide, royalty-free copyright license to\nreproduce, prepare derivative works of, publicly display, publicly perform,\ndistribute and sublicense the Contribution of such Contributor, if any, and\nsuch derivative works, in source code and object code form.\n\n      b) Subject to the terms of this Agreement, each Contributor hereby grants\nRecipient a non-exclusive, worldwide, royalty-free patent license under\nLicensed Patents to make, use, sell, offer to sell, import and otherwise\ntransfer the Contribution of such Contributor, if any, in source code and\nobject code form. This patent license shall apply to the combination of the\nContribution and the Program if, at the time the Contribution is added by the\nContributor, such addition of the Contribution causes such combination to be\ncovered by the Licensed Patents. The patent license shall not apply to any\nother combinations which include the Contribution. No hardware per se is\nlicensed hereunder. \n\n      c) Recipient understands that although each Contributor grants the\nlicenses to its Contributions set forth herein, no assurances are provided by\nany Contributor that the Program does not infringe the patent or other\nintellectual property rights of any other entity. Each Contributor disclaims\nany liability to Recipient for claims brought by any other entity based on\ninfringement of intellectual property rights or otherwise. As a condition to\nexercising the rights and licenses granted hereunder, each Recipient hereby\nassumes sole responsibility to secure any other intellectual property rights\nneeded, if any. For example, if a third party patent license is required to\nallow Recipient to distribute the Program, it is Recipient's responsibility to\nacquire that license before distributing the Program.\n\n      d) Each Contributor represents that to its knowledge it has sufficient\ncopyright rights in its Contribution, if any, to grant the copyright license\nset forth in this Agreement. \n\n3. REQUIREMENTS\n\nA Contributor may choose to distribute the Program in object code form under\nits own license agreement, provided that:\n\n      a) it complies with the terms and conditions of this Agreement; and\n\n      b) its license agreement:\n\n      i) effectively disclaims on behalf of all Contributors all warranties and\nconditions, express and implied, including warranties or conditions of title\nand non-infringement, and implied warranties or conditions of merchantability\nand fitness for a particular purpose; \n\n      ii) effectively excludes on behalf of all Contributors all liability for\ndamages, including direct, indirect, special, incidental and consequential\ndamages, such as lost profits; \n\n      iii) states that any provisions which differ from this Agreement are\noffered by that Contributor alone and not by any other party; and\n\n      iv) states that source code for the Program is available from such\nContributor, and informs licensees how to obtain it in a reasonable manner on\nor through a medium customarily used for software exchange. \n\nWhen the Program is made available in source code form:\n\n      a) it must be made available under this Agreement; and \n\n      b) a copy of this Agreement must be included with each copy of the\nProgram. \n\nContributors may not remove or alter any copyright notices contained within the\nProgram.\n\nEach Contributor must identify itself as the originator of its Contribution, if\nany, in a manner that reasonably allows subsequent Recipients to identify the\noriginator of the Contribution.\n\n4. COMMERCIAL DISTRIBUTION\n\nCommercial distributors of software may accept certain responsibilities with\nrespect to end users, business partners and the like. While this license is\nintended to facilitate the commercial use of the Program, the Contributor who\nincludes the Program in a commercial product offering should do so in a manner\nwhich does not create potential liability for other Contributors. Therefore, if\na Contributor includes the Program in a commercial product offering, such\nContributor (\"Commercial Contributor\") hereby agrees to defend and indemnify\nevery other Contributor (\"Indemnified Contributor\") against any losses, damages\nand costs (collectively \"Losses\") arising from claims, lawsuits and other legal\nactions brought by a third party against the Indemnified Contributor to the\nextent caused by the acts or omissions of such Commercial Contributor in\nconnection with its distribution of the Program in a commercial product\noffering. The obligations in this section do not apply to any claims or Losses\nrelating to any actual or alleged intellectual property infringement. In order\nto qualify, an Indemnified Contributor must: a) promptly notify the Commercial\nContributor in writing of such claim, and b) allow the Commercial Contributor\nto control, and cooperate with the Commercial Contributor in, the defense and\nany related settlement negotiations. The Indemnified Contributor may\nparticipate in any such claim at its own expense.\n\nFor example, a Contributor might include the Program in a commercial product\noffering, Product X. That Contributor is then a Commercial Contributor. If that\nCommercial Contributor then makes performance claims, or offers warranties\nrelated to Product X, those performance claims and warranties are such\nCommercial Contributor's responsibility alone. Under this section, the\nCommercial Contributor would have to defend claims against the other\nContributors related to those performance claims and warranties, and if a court\nrequires any other Contributor to pay any damages as a result, the Commercial\nContributor must pay those damages.\n\n5. NO WARRANTY\n\nEXCEPT AS EXPRESSLY SET FORTH IN THIS AGREEMENT, THE PROGRAM IS PROVIDED ON AN\n\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, EITHER EXPRESS OR\nIMPLIED INCLUDING, WITHOUT LIMITATION, ANY WARRANTIES OR CONDITIONS OF TITLE,\nNON-INFRINGEMENT, MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. Each\nRecipient is solely responsible for determining the appropriateness of using\nand distributing the Program and assumes all risks associated with its exercise\nof rights under this Agreement, including but not limited to the risks and\ncosts of program errors, compliance with applicable laws, damage to or loss of\ndata, programs or equipment, and unavailability or interruption of operations.\n\n6. DISCLAIMER OF LIABILITY\n\nEXCEPT AS EXPRESSLY SET FORTH IN THIS AGREEMENT, NEITHER RECIPIENT NOR ANY\nCONTRIBUTORS SHALL HAVE ANY LIABILITY FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING WITHOUT LIMITATION LOST\nPROFITS), HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,\nSTRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY\nWAY OUT OF THE USE OR DISTRIBUTION OF THE PROGRAM OR THE EXERCISE OF ANY RIGHTS\nGRANTED HEREUNDER, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.\n\n7. GENERAL\n\nIf any provision of this Agreement is invalid or unenforceable under applicable\nlaw, it shall not affect the validity or enforceability of the remainder of the\nterms of this Agreement, and without further action by the parties hereto, such\nprovision shall be reformed to the minimum extent necessary to make such\nprovision valid and enforceable.\n\nIf Recipient institutes patent litigation against any\nentity (including a cross-claim or counterclaim in a lawsuit) alleging that the\nProgram itself (excluding combinations of the Program with other software or\nhardware) infringes such Recipient's patent(s), then such Recipient's rights\ngranted under Section 2(b) shall terminate as of the date such litigation is\nfiled.\n\nAll Recipient's rights under this Agreement shall terminate if it fails to\ncomply with any of the material terms or conditions of this Agreement and does\nnot cure such failure in a reasonable period of time after becoming aware of\nsuch noncompliance. If all Recipient's rights under this Agreement terminate,\nRecipient agrees to cease use and distribution of the Program as soon as\nreasonably practicable. However, Recipient's obligations under this Agreement\nand any licenses granted by Recipient relating to the Program shall continue\nand survive.\n\nEveryone is permitted to copy and distribute copies of this Agreement, but in\norder to avoid inconsistency the Agreement is copyrighted and may only be\nmodified in the following manner. The Agreement Steward reserves the right to\npublish new versions (including revisions) of this Agreement from time to time.\nNo one other than the Agreement Steward has the right to modify this Agreement.\nThe Eclipse Foundation is the initial Agreement Steward. The Eclipse Foundation may assign the responsibility to\nserve as the Agreement Steward to a suitable separate entity. Each new version\nof the Agreement will be given a distinguishing version number. The Program\n(including Contributions) may always be distributed subject to the version of\nthe Agreement under which it was received. In addition, after a new version of\nthe Agreement is published, Contributor may elect to distribute the Program\n(including its Contributions) under the new version. Except as expressly stated\nin Sections 2(a) and 2(b) above, Recipient receives no rights or licenses to\nthe intellectual property of any Contributor under this Agreement, whether\nexpressly, by implication, estoppel or otherwise. All rights in the Program not\nexpressly granted under this Agreement are reserved.\n\nThis Agreement is governed by the laws of the State of New York and the\nintellectual property laws of the United States of America. No party to this\nAgreement will bring a legal action under this Agreement more than one year\nafter the cause of action arose. Each party waives its rights to a jury trial\nin any resulting litigation. \n\n"
        },
        {
          "name": "NOTICE.txt",
          "type": "blob",
          "size": 0.3271484375,
          "content": "   ===================================================================================\n   ==  Notices and attributions required by libraries that the project depends on   ==\n   ===================================================================================\n\n The JUnit depends on Java Hamcrest (http://hamcrest.org/JavaHamcrest/).\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 0.51171875,
          "content": "# JUnit 4\nJUnit is a simple framework to write repeatable tests. It is an instance of the xUnit architecture for unit testing frameworks.\n\nFor more information, please visit:\n* [Wiki](https://github.com/junit-team/junit4/wiki)\n* [Download and Install guide](https://github.com/junit-team/junit4/wiki/Download-and-Install)\n* [Getting Started](https://github.com/junit-team/junit4/wiki/Getting-started)\n\n[![CI Status](https://github.com/junit-team/junit4/workflows/CI/badge.svg)](https://github.com/junit-team/junit4/actions)\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.2783203125,
          "content": "# Security Policy\n\n## Supported Versions\n\n| Version | Supported          |\n| ------- | ------------------ |\n| 4.13.x  | :white_check_mark: |\n| < 4.13  | :x:                |\n\n## Reporting a Vulnerability\n\nTo report a security vulnerability, please send an email to security@junit.org.\n"
        },
        {
          "name": "acknowledgements.txt",
          "type": "blob",
          "size": 5.482421875,
          "content": "2006 March 9\n\tMatthias Schmidt: improved org.junit package javadoc\n\t\n2006 August 3\n\tgiovanni: better test for TestCase without a name.\n\tMatthias Pfau: better error message when test case constructor fails\n\t\n2006 November 21\n\tdakcalouro: Found defect with comparing ints and longs (1555161)\n\tBen Maurer: Found defect with timeouts taking twice as long as specified (1536198)\n\t\n2007 February 08\n\tKazimierz Pogoda: Found defect with null array elements (1438163)\n\t\n2007 July 09\n\twangqq: Found defect with @After not running after a timeout (1745048)\n\n2007 July 18\n    Andrew Dick: Found defect with assertEquals comparing non-Integer Numbers (1715326)\n\tMichael Schechter: Found defect with Filters and suite() methods (1739095)\n\n2008 February 5\n\tWalter Gildersleeve: Found assertEquals(null, \"null\") defect (1857283)\n\t\n2008 July 1\n\tJohannes Link: Submitted test for running subclasses of Suite\n\t\n2008 July 23\n\tDaniel Brolund: Submitted patch for build.xml, fixing 1.5 compatibility (2021396)\n\t\n2008 Aug 1\n\tNat Pryce: Found defect in treatment of validation errors from custom \n\t           subclasses of the legacy JUnit4ClassRunner.\n\t           \n2008 Aug 18\n\tNir Soffer: Suggested adding to the cookbook information about running\n\t\t\t\trunning JUnit from the command line.\n\t\t\t\t           \n2008 Aug 19\n\tJack Woehr: Discovered build.xml was missing from junit-4.x.zip\n\t\n2009 Jan 5\n\tAmanda Robinson: Fixed overly permissive @DataPoint processing.\n\t\n2009 Feb 9\n\tMark Shapiro: Discovered bug in test counting after an ignored method (2106324)\n\t\n2009 Apr 20\n\tChris Felaco: Discovered regression in handling suite() methods with JUnit 3 runner (1812200)\n\tToby Byron: Suggested updating linking in javadoc (2090230)\n\tRaphael Parree: Improved docs on Parameterized (2186792)\n\tRobin de Silva Jayasinghe: Fixed Javadoc code sample for AfterClass (2126279)\n\t\n2009 May 04\n\tJames Abbley: Submitted a patch that fixed the 2-second limit on Parallel execution.\n\n2009 Nov 16\n    Kristian Rosenvold: Submitted a patch (github#16) that improves thread-safety of\n                        result counting\n2010 Feb 08\n    Paul Holser: Submitted additional test for TestName rule.\n    \n2010 May 03\n    jonas22@github: Found bug (github#98) with assumptions and expected exceptions.\n\n2011 Jan 03\n    jens.schauder@freenet.de: Found bug (github#74) with Categories and \n                              Parameterized.\n\n2011 Jan 18\n    Markus Keller: Reported bug (github#163): \n           Bad comparison failure message when using assertEquals(String, String)\n    \n    Kevin Cooney (kcooney@github):\n           Patches for runLeaf, public multiple failure exception,\n           assertion messages and null.\n\n2011 Mar 04\n    Jerome Lacoste (lacostej@github) for initial patch for GH-191.\n\n2011 Apr 15\n     reinholdfuereder@github For initial test for GH-39\n\n2011 Apr 15\n     ububenheimer@github for bug report https://github.com/junit-team/junit4/issues/208\n\n2011 Apr 29\n     reinholdfuereder@github: bug report, test, and fix for GH-38:\n                              ParentRunner filtering\n2011 Apr 29\n     Markus Keller (mkeller@github): Report for GH-187:\n            Unintentional dependency on Java 6\n\n2011 May 31\n     Kevin Cooney (kcooney@github): Patches for filtering test suites:\n         copy List returned by getChildren() before mutating it;\n         optimize ParentRunner.filter for nested suites;\n         optimize Filter.intersect for common cases\n\n2011 Jun 06\n     Vampire@github: Report for GH-235: 4.7 release notes incorrect.\n\n2011 Jun 24\n     Samuel Le Berrigaud (sleberrigaud@github): Report for GH-248:\n            protected BlockJUnit4ClassRunner#rules method removed from 4.8.2\n\n2011 Jun 24\n    Daniel Rothmaler (drothmaler@github):\n        #299: random temp file/folder creation \n        #300: ErrorCollector.checkThat overload\n        \n2011 Jun 25\n     Juan Cortez (jcortez@github): Fixed issue #219 where floats were being \n\t printed and represented as doubles in error messages.\n\n2011 Jul 06\n     Stefan Birkner: Fixed wrong documentation of ClassRule (github#254).\n\n2011 Jul 08\n     Paul Holser (pholser@alumni.rice.edu): Beginnings of fix for GH-64:\n            Theories doesn't honor parameterized types\n\n2011 Jul 09\n     Nigel Charman: Reported Rules bugs github#257 and gihub#258.\n\n2011 Jul 09\n     Stefan Birkner: Fixed rules bugs (github#257, gihub#258, github#260).\n\n2011 Jul 09\n     Stefan Birkner: Fixed rules bugs (github#257, gihub#258, github#260).\n\n2011 Jul 16\n\tRob Dawson: Submitted a patch that makes Results serlializable.\n\n2011 Jul 20\n     Asaf Ary, Stefan Birkner: Fixed FailOnTimeout class (github#265).\n\n2011 Jul 22\n     Andreas Köhler, Stefan Birkner: Fixed wrong documentation of Parameterized (github#89).\n\n2011 Jul 28\n     electrickery, Stefan Birkner: Fixed typo in JavaDoc (github#134).\n\n2011 Aug 07\n\tEsko Luontola: Fixed TemporaryFolder creating files in the current working directory (github#278).\n\n2011 Aug 09\n     Stefan Birkner: Fixed JavaDoc links.\n\n2011 Aug 10\n     rodolfoliviero@github and JoseRibeiro@github: feature to create recursive temporary folders.\n\n2011 Aug 12\n\tEsko Luontola: Fixed syntax error in Parameterized's usage example (github#285).\n\n2011 Sep 09\n     Robert Munteanu, Stefan Birkner:\n            TestWatcher and TestWatchman don't call failed when assumption is violated (github#296).\n     digulla@github, Stefan Birkner: Removed useless code (github#289).\n\n== NOTE: as of September 2011, we have stopped recording contributions here.\n   For a full list of everyone who has contributed great bug reports and code, please see\n   http://github.com/junit-team/junit4\n"
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "epl-v10.html",
          "type": "blob",
          "size": 12.3408203125,
          "content": "<?xml version=\"1.0\" encoding=\"ISO-8859-1\" ?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n\n<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\" />\n<title>Eclipse Public License - Version 1.0</title>\n<style type=\"text/css\">\n  body {\n    size: 8.5in 11.0in;\n    margin: 0.25in 0.5in 0.25in 0.5in;\n    tab-interval: 0.5in;\n    }\n  p {  \t\n    margin-left: auto;\n    margin-top:  0.5em;\n    margin-bottom: 0.5em;\n    }\n  p.list {\n  \tmargin-left: 0.5in;\n    margin-top:  0.05em;\n    margin-bottom: 0.05em;\n    }\n  </style>\n\n</head>\n\n<body lang=\"EN-US\">\n\n<h2>Eclipse Public License - v 1.0</h2>\n\n<p>THE ACCOMPANYING PROGRAM IS PROVIDED UNDER THE TERMS OF THIS ECLIPSE\nPUBLIC LICENSE (&quot;AGREEMENT&quot;). ANY USE, REPRODUCTION OR\nDISTRIBUTION OF THE PROGRAM CONSTITUTES RECIPIENT'S ACCEPTANCE OF THIS\nAGREEMENT.</p>\n\n<p><b>1. DEFINITIONS</b></p>\n\n<p>&quot;Contribution&quot; means:</p>\n\n<p class=\"list\">a) in the case of the initial Contributor, the initial\ncode and documentation distributed under this Agreement, and</p>\n<p class=\"list\">b) in the case of each subsequent Contributor:</p>\n<p class=\"list\">i) changes to the Program, and</p>\n<p class=\"list\">ii) additions to the Program;</p>\n<p class=\"list\">where such changes and/or additions to the Program\noriginate from and are distributed by that particular Contributor. A\nContribution 'originates' from a Contributor if it was added to the\nProgram by such Contributor itself or anyone acting on such\nContributor's behalf. Contributions do not include additions to the\nProgram which: (i) are separate modules of software distributed in\nconjunction with the Program under their own license agreement, and (ii)\nare not derivative works of the Program.</p>\n\n<p>&quot;Contributor&quot; means any person or entity that distributes\nthe Program.</p>\n\n<p>&quot;Licensed Patents&quot; mean patent claims licensable by a\nContributor which are necessarily infringed by the use or sale of its\nContribution alone or when combined with the Program.</p>\n\n<p>&quot;Program&quot; means the Contributions distributed in accordance\nwith this Agreement.</p>\n\n<p>&quot;Recipient&quot; means anyone who receives the Program under\nthis Agreement, including all Contributors.</p>\n\n<p><b>2. GRANT OF RIGHTS</b></p>\n\n<p class=\"list\">a) Subject to the terms of this Agreement, each\nContributor hereby grants Recipient a non-exclusive, worldwide,\nroyalty-free copyright license to reproduce, prepare derivative works\nof, publicly display, publicly perform, distribute and sublicense the\nContribution of such Contributor, if any, and such derivative works, in\nsource code and object code form.</p>\n\n<p class=\"list\">b) Subject to the terms of this Agreement, each\nContributor hereby grants Recipient a non-exclusive, worldwide,\nroyalty-free patent license under Licensed Patents to make, use, sell,\noffer to sell, import and otherwise transfer the Contribution of such\nContributor, if any, in source code and object code form. This patent\nlicense shall apply to the combination of the Contribution and the\nProgram if, at the time the Contribution is added by the Contributor,\nsuch addition of the Contribution causes such combination to be covered\nby the Licensed Patents. The patent license shall not apply to any other\ncombinations which include the Contribution. No hardware per se is\nlicensed hereunder.</p>\n\n<p class=\"list\">c) Recipient understands that although each Contributor\ngrants the licenses to its Contributions set forth herein, no assurances\nare provided by any Contributor that the Program does not infringe the\npatent or other intellectual property rights of any other entity. Each\nContributor disclaims any liability to Recipient for claims brought by\nany other entity based on infringement of intellectual property rights\nor otherwise. As a condition to exercising the rights and licenses\ngranted hereunder, each Recipient hereby assumes sole responsibility to\nsecure any other intellectual property rights needed, if any. For\nexample, if a third party patent license is required to allow Recipient\nto distribute the Program, it is Recipient's responsibility to acquire\nthat license before distributing the Program.</p>\n\n<p class=\"list\">d) Each Contributor represents that to its knowledge it\nhas sufficient copyright rights in its Contribution, if any, to grant\nthe copyright license set forth in this Agreement.</p>\n\n<p><b>3. REQUIREMENTS</b></p>\n\n<p>A Contributor may choose to distribute the Program in object code\nform under its own license agreement, provided that:</p>\n\n<p class=\"list\">a) it complies with the terms and conditions of this\nAgreement; and</p>\n\n<p class=\"list\">b) its license agreement:</p>\n\n<p class=\"list\">i) effectively disclaims on behalf of all Contributors\nall warranties and conditions, express and implied, including warranties\nor conditions of title and non-infringement, and implied warranties or\nconditions of merchantability and fitness for a particular purpose;</p>\n\n<p class=\"list\">ii) effectively excludes on behalf of all Contributors\nall liability for damages, including direct, indirect, special,\nincidental and consequential damages, such as lost profits;</p>\n\n<p class=\"list\">iii) states that any provisions which differ from this\nAgreement are offered by that Contributor alone and not by any other\nparty; and</p>\n\n<p class=\"list\">iv) states that source code for the Program is available\nfrom such Contributor, and informs licensees how to obtain it in a\nreasonable manner on or through a medium customarily used for software\nexchange.</p>\n\n<p>When the Program is made available in source code form:</p>\n\n<p class=\"list\">a) it must be made available under this Agreement; and</p>\n\n<p class=\"list\">b) a copy of this Agreement must be included with each\ncopy of the Program.</p>\n\n<p>Contributors may not remove or alter any copyright notices contained\nwithin the Program.</p>\n\n<p>Each Contributor must identify itself as the originator of its\nContribution, if any, in a manner that reasonably allows subsequent\nRecipients to identify the originator of the Contribution.</p>\n\n<p><b>4. COMMERCIAL DISTRIBUTION</b></p>\n\n<p>Commercial distributors of software may accept certain\nresponsibilities with respect to end users, business partners and the\nlike. While this license is intended to facilitate the commercial use of\nthe Program, the Contributor who includes the Program in a commercial\nproduct offering should do so in a manner which does not create\npotential liability for other Contributors. Therefore, if a Contributor\nincludes the Program in a commercial product offering, such Contributor\n(&quot;Commercial Contributor&quot;) hereby agrees to defend and\nindemnify every other Contributor (&quot;Indemnified Contributor&quot;)\nagainst any losses, damages and costs (collectively &quot;Losses&quot;)\narising from claims, lawsuits and other legal actions brought by a third\nparty against the Indemnified Contributor to the extent caused by the\nacts or omissions of such Commercial Contributor in connection with its\ndistribution of the Program in a commercial product offering. The\nobligations in this section do not apply to any claims or Losses\nrelating to any actual or alleged intellectual property infringement. In\norder to qualify, an Indemnified Contributor must: a) promptly notify\nthe Commercial Contributor in writing of such claim, and b) allow the\nCommercial Contributor to control, and cooperate with the Commercial\nContributor in, the defense and any related settlement negotiations. The\nIndemnified Contributor may participate in any such claim at its own\nexpense.</p>\n\n<p>For example, a Contributor might include the Program in a commercial\nproduct offering, Product X. That Contributor is then a Commercial\nContributor. If that Commercial Contributor then makes performance\nclaims, or offers warranties related to Product X, those performance\nclaims and warranties are such Commercial Contributor's responsibility\nalone. Under this section, the Commercial Contributor would have to\ndefend claims against the other Contributors related to those\nperformance claims and warranties, and if a court requires any other\nContributor to pay any damages as a result, the Commercial Contributor\nmust pay those damages.</p>\n\n<p><b>5. NO WARRANTY</b></p>\n\n<p>EXCEPT AS EXPRESSLY SET FORTH IN THIS AGREEMENT, THE PROGRAM IS\nPROVIDED ON AN &quot;AS IS&quot; BASIS, WITHOUT WARRANTIES OR CONDITIONS\nOF ANY KIND, EITHER EXPRESS OR IMPLIED INCLUDING, WITHOUT LIMITATION,\nANY WARRANTIES OR CONDITIONS OF TITLE, NON-INFRINGEMENT, MERCHANTABILITY\nOR FITNESS FOR A PARTICULAR PURPOSE. Each Recipient is solely\nresponsible for determining the appropriateness of using and\ndistributing the Program and assumes all risks associated with its\nexercise of rights under this Agreement , including but not limited to\nthe risks and costs of program errors, compliance with applicable laws,\ndamage to or loss of data, programs or equipment, and unavailability or\ninterruption of operations.</p>\n\n<p><b>6. DISCLAIMER OF LIABILITY</b></p>\n\n<p>EXCEPT AS EXPRESSLY SET FORTH IN THIS AGREEMENT, NEITHER RECIPIENT\nNOR ANY CONTRIBUTORS SHALL HAVE ANY LIABILITY FOR ANY DIRECT, INDIRECT,\nINCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING\nWITHOUT LIMITATION LOST PROFITS), HOWEVER CAUSED AND ON ANY THEORY OF\nLIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\nNEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OR\nDISTRIBUTION OF THE PROGRAM OR THE EXERCISE OF ANY RIGHTS GRANTED\nHEREUNDER, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.</p>\n\n<p><b>7. GENERAL</b></p>\n\n<p>If any provision of this Agreement is invalid or unenforceable under\napplicable law, it shall not affect the validity or enforceability of\nthe remainder of the terms of this Agreement, and without further action\nby the parties hereto, such provision shall be reformed to the minimum\nextent necessary to make such provision valid and enforceable.</p>\n\n<p>If Recipient institutes patent litigation against any entity\n(including a cross-claim or counterclaim in a lawsuit) alleging that the\nProgram itself (excluding combinations of the Program with other\nsoftware or hardware) infringes such Recipient's patent(s), then such\nRecipient's rights granted under Section 2(b) shall terminate as of the\ndate such litigation is filed.</p>\n\n<p>All Recipient's rights under this Agreement shall terminate if it\nfails to comply with any of the material terms or conditions of this\nAgreement and does not cure such failure in a reasonable period of time\nafter becoming aware of such noncompliance. If all Recipient's rights\nunder this Agreement terminate, Recipient agrees to cease use and\ndistribution of the Program as soon as reasonably practicable. However,\nRecipient's obligations under this Agreement and any licenses granted by\nRecipient relating to the Program shall continue and survive.</p>\n\n<p>Everyone is permitted to copy and distribute copies of this\nAgreement, but in order to avoid inconsistency the Agreement is\ncopyrighted and may only be modified in the following manner. The\nAgreement Steward reserves the right to publish new versions (including\nrevisions) of this Agreement from time to time. No one other than the\nAgreement Steward has the right to modify this Agreement. The Eclipse\nFoundation is the initial Agreement Steward. The Eclipse Foundation may\nassign the responsibility to serve as the Agreement Steward to a\nsuitable separate entity. Each new version of the Agreement will be\ngiven a distinguishing version number. The Program (including\nContributions) may always be distributed subject to the version of the\nAgreement under which it was received. In addition, after a new version\nof the Agreement is published, Contributor may elect to distribute the\nProgram (including its Contributions) under the new version. Except as\nexpressly stated in Sections 2(a) and 2(b) above, Recipient receives no\nrights or licenses to the intellectual property of any Contributor under\nthis Agreement, whether expressly, by implication, estoppel or\notherwise. All rights in the Program not expressly granted under this\nAgreement are reserved.</p>\n\n<p>This Agreement is governed by the laws of the State of New York and\nthe intellectual property laws of the United States of America. No party\nto this Agreement will bring a legal action under this Agreement more\nthan one year after the cause of action arose. Each party waives its\nrights to a jury trial in any resulting litigation.</p>\n\n</body>\n\n</html>"
        },
        {
          "name": "mvnw",
          "type": "blob",
          "size": 10.052734375,
          "content": "#!/bin/sh\n# ----------------------------------------------------------------------------\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n# ----------------------------------------------------------------------------\n\n# ----------------------------------------------------------------------------\n# Apache Maven Wrapper startup batch script, version 3.3.1\n#\n# Optional ENV vars\n# -----------------\n#   JAVA_HOME - location of a JDK home dir, required when download maven via java source\n#   MVNW_REPOURL - repo url base for downloading maven distribution\n#   MVNW_USERNAME/MVNW_PASSWORD - user and password for downloading maven\n#   MVNW_VERBOSE - true: enable verbose log; debug: trace the mvnw script; others: silence the output\n# ----------------------------------------------------------------------------\n\nset -euf\n[ \"${MVNW_VERBOSE-}\" != debug ] || set -x\n\n# OS specific support.\nnative_path() { printf %s\\\\n \"$1\"; }\ncase \"$(uname)\" in\nCYGWIN* | MINGW*)\n  [ -z \"${JAVA_HOME-}\" ] || JAVA_HOME=\"$(cygpath --unix \"$JAVA_HOME\")\"\n  native_path() { cygpath --path --windows \"$1\"; }\n  ;;\nesac\n\n# set JAVACMD and JAVACCMD\nset_java_home() {\n  # For Cygwin and MinGW, ensure paths are in Unix format before anything is touched\n  if [ -n \"${JAVA_HOME-}\" ]; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ]; then\n      # IBM's JDK on AIX uses strange locations for the executables\n      JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n      JAVACCMD=\"$JAVA_HOME/jre/sh/javac\"\n    else\n      JAVACMD=\"$JAVA_HOME/bin/java\"\n      JAVACCMD=\"$JAVA_HOME/bin/javac\"\n\n      if [ ! -x \"$JAVACMD\" ] || [ ! -x \"$JAVACCMD\" ]; then\n        echo \"The JAVA_HOME environment variable is not defined correctly, so mvnw cannot run.\" >&2\n        echo \"JAVA_HOME is set to \\\"$JAVA_HOME\\\", but \\\"\\$JAVA_HOME/bin/java\\\" or \\\"\\$JAVA_HOME/bin/javac\\\" does not exist.\" >&2\n        return 1\n      fi\n    fi\n  else\n    JAVACMD=\"$(\n      'set' +e\n      'unset' -f command 2>/dev/null\n      'command' -v java\n    )\" || :\n    JAVACCMD=\"$(\n      'set' +e\n      'unset' -f command 2>/dev/null\n      'command' -v javac\n    )\" || :\n\n    if [ ! -x \"${JAVACMD-}\" ] || [ ! -x \"${JAVACCMD-}\" ]; then\n      echo \"The java/javac command does not exist in PATH nor is JAVA_HOME set, so mvnw cannot run.\" >&2\n      return 1\n    fi\n  fi\n}\n\n# hash string like Java String::hashCode\nhash_string() {\n  str=\"${1:-}\" h=0\n  while [ -n \"$str\" ]; do\n    char=\"${str%\"${str#?}\"}\"\n    h=$(((h * 31 + $(LC_CTYPE=C printf %d \"'$char\")) % 4294967296))\n    str=\"${str#?}\"\n  done\n  printf %x\\\\n $h\n}\n\nverbose() { :; }\n[ \"${MVNW_VERBOSE-}\" != true ] || verbose() { printf %s\\\\n \"${1-}\"; }\n\ndie() {\n  printf %s\\\\n \"$1\" >&2\n  exit 1\n}\n\n# parse distributionUrl and optional distributionSha256Sum, requires .mvn/wrapper/maven-wrapper.properties\nwhile IFS=\"=\" read -r key value; do\n  case \"${key-}\" in\n  distributionUrl) distributionUrl=\"${value-}\" ;;\n  distributionSha256Sum) distributionSha256Sum=\"${value-}\" ;;\n  esac\ndone <\"${0%/*}/.mvn/wrapper/maven-wrapper.properties\"\n[ -n \"${distributionUrl-}\" ] || die \"cannot read distributionUrl property in ${0%/*}/.mvn/wrapper/maven-wrapper.properties\"\n\ncase \"${distributionUrl##*/}\" in\nmaven-mvnd-*bin.*)\n  MVN_CMD=mvnd.sh _MVNW_REPO_PATTERN=/maven/mvnd/\n  case \"${PROCESSOR_ARCHITECTURE-}${PROCESSOR_ARCHITEW6432-}:$(uname -a)\" in\n  *AMD64:CYGWIN* | *AMD64:MINGW*) distributionPlatform=windows-amd64 ;;\n  :Darwin*x86_64) distributionPlatform=darwin-amd64 ;;\n  :Darwin*arm64) distributionPlatform=darwin-aarch64 ;;\n  :Linux*x86_64*) distributionPlatform=linux-amd64 ;;\n  *)\n    echo \"Cannot detect native platform for mvnd on $(uname)-$(uname -m), use pure java version\" >&2\n    distributionPlatform=linux-amd64\n    ;;\n  esac\n  distributionUrl=\"${distributionUrl%-bin.*}-$distributionPlatform.zip\"\n  ;;\nmaven-mvnd-*) MVN_CMD=mvnd.sh _MVNW_REPO_PATTERN=/maven/mvnd/ ;;\n*) MVN_CMD=\"mvn${0##*/mvnw}\" _MVNW_REPO_PATTERN=/org/apache/maven/ ;;\nesac\n\n# apply MVNW_REPOURL and calculate MAVEN_HOME\n# maven home pattern: ~/.m2/wrapper/dists/{apache-maven-<version>,maven-mvnd-<version>-<platform>}/<hash>\n[ -z \"${MVNW_REPOURL-}\" ] || distributionUrl=\"$MVNW_REPOURL$_MVNW_REPO_PATTERN${distributionUrl#*\"$_MVNW_REPO_PATTERN\"}\"\ndistributionUrlName=\"${distributionUrl##*/}\"\ndistributionUrlNameMain=\"${distributionUrlName%.*}\"\ndistributionUrlNameMain=\"${distributionUrlNameMain%-bin}\"\nMAVEN_HOME=\"$HOME/.m2/wrapper/dists/${distributionUrlNameMain-}/$(hash_string \"$distributionUrl\")\"\n\nexec_maven() {\n  unset MVNW_VERBOSE MVNW_USERNAME MVNW_PASSWORD MVNW_REPOURL || :\n  exec \"$MAVEN_HOME/bin/$MVN_CMD\" \"$@\" || die \"cannot exec $MAVEN_HOME/bin/$MVN_CMD\"\n}\n\nif [ -d \"$MAVEN_HOME\" ]; then\n  verbose \"found existing MAVEN_HOME at $MAVEN_HOME\"\n  exec_maven \"$@\"\nfi\n\ncase \"${distributionUrl-}\" in\n*?-bin.zip | *?maven-mvnd-?*-?*.zip) ;;\n*) die \"distributionUrl is not valid, must match *-bin.zip or maven-mvnd-*.zip, but found '${distributionUrl-}'\" ;;\nesac\n\n# prepare tmp dir\nif TMP_DOWNLOAD_DIR=\"$(mktemp -d)\" && [ -d \"$TMP_DOWNLOAD_DIR\" ]; then\n  clean() { rm -rf -- \"$TMP_DOWNLOAD_DIR\"; }\n  trap clean HUP INT TERM EXIT\nelse\n  die \"cannot create temp dir\"\nfi\n\nmkdir -p -- \"${MAVEN_HOME%/*}\"\n\n# Download and Install Apache Maven\nverbose \"Couldn't find MAVEN_HOME, downloading and installing it ...\"\nverbose \"Downloading from: $distributionUrl\"\nverbose \"Downloading to: $TMP_DOWNLOAD_DIR/$distributionUrlName\"\n\n# select .zip or .tar.gz\nif ! command -v unzip >/dev/null; then\n  distributionUrl=\"${distributionUrl%.zip}.tar.gz\"\n  distributionUrlName=\"${distributionUrl##*/}\"\nfi\n\n# verbose opt\n__MVNW_QUIET_WGET=--quiet __MVNW_QUIET_CURL=--silent __MVNW_QUIET_UNZIP=-q __MVNW_QUIET_TAR=''\n[ \"${MVNW_VERBOSE-}\" != true ] || __MVNW_QUIET_WGET='' __MVNW_QUIET_CURL='' __MVNW_QUIET_UNZIP='' __MVNW_QUIET_TAR=v\n\n# normalize http auth\ncase \"${MVNW_PASSWORD:+has-password}\" in\n'') MVNW_USERNAME='' MVNW_PASSWORD='' ;;\nhas-password) [ -n \"${MVNW_USERNAME-}\" ] || MVNW_USERNAME='' MVNW_PASSWORD='' ;;\nesac\n\nif [ -z \"${MVNW_USERNAME-}\" ] && command -v wget >/dev/null; then\n  verbose \"Found wget ... using wget\"\n  wget ${__MVNW_QUIET_WGET:+\"$__MVNW_QUIET_WGET\"} \"$distributionUrl\" -O \"$TMP_DOWNLOAD_DIR/$distributionUrlName\" || die \"wget: Failed to fetch $distributionUrl\"\nelif [ -z \"${MVNW_USERNAME-}\" ] && command -v curl >/dev/null; then\n  verbose \"Found curl ... using curl\"\n  curl ${__MVNW_QUIET_CURL:+\"$__MVNW_QUIET_CURL\"} -f -L -o \"$TMP_DOWNLOAD_DIR/$distributionUrlName\" \"$distributionUrl\" || die \"curl: Failed to fetch $distributionUrl\"\nelif set_java_home; then\n  verbose \"Falling back to use Java to download\"\n  javaSource=\"$TMP_DOWNLOAD_DIR/Downloader.java\"\n  targetZip=\"$TMP_DOWNLOAD_DIR/$distributionUrlName\"\n  cat >\"$javaSource\" <<-END\n\tpublic class Downloader extends java.net.Authenticator\n\t{\n\t  protected java.net.PasswordAuthentication getPasswordAuthentication()\n\t  {\n\t    return new java.net.PasswordAuthentication( System.getenv( \"MVNW_USERNAME\" ), System.getenv( \"MVNW_PASSWORD\" ).toCharArray() );\n\t  }\n\t  public static void main( String[] args ) throws Exception\n\t  {\n\t    setDefault( new Downloader() );\n\t    java.nio.file.Files.copy( java.net.URI.create( args[0] ).toURL().openStream(), java.nio.file.Paths.get( args[1] ).toAbsolutePath().normalize() );\n\t  }\n\t}\n\tEND\n  # For Cygwin/MinGW, switch paths to Windows format before running javac and java\n  verbose \" - Compiling Downloader.java ...\"\n  \"$(native_path \"$JAVACCMD\")\" \"$(native_path \"$javaSource\")\" || die \"Failed to compile Downloader.java\"\n  verbose \" - Running Downloader.java ...\"\n  \"$(native_path \"$JAVACMD\")\" -cp \"$(native_path \"$TMP_DOWNLOAD_DIR\")\" Downloader \"$distributionUrl\" \"$(native_path \"$targetZip\")\"\nfi\n\n# If specified, validate the SHA-256 sum of the Maven distribution zip file\nif [ -n \"${distributionSha256Sum-}\" ]; then\n  distributionSha256Result=false\n  if [ \"$MVN_CMD\" = mvnd.sh ]; then\n    echo \"Checksum validation is not supported for maven-mvnd.\" >&2\n    echo \"Please disable validation by removing 'distributionSha256Sum' from your maven-wrapper.properties.\" >&2\n    exit 1\n  elif command -v sha256sum >/dev/null; then\n    if echo \"$distributionSha256Sum  $TMP_DOWNLOAD_DIR/$distributionUrlName\" | sha256sum -c >/dev/null 2>&1; then\n      distributionSha256Result=true\n    fi\n  elif command -v shasum >/dev/null; then\n    if echo \"$distributionSha256Sum  $TMP_DOWNLOAD_DIR/$distributionUrlName\" | shasum -a 256 -c >/dev/null 2>&1; then\n      distributionSha256Result=true\n    fi\n  else\n    echo \"Checksum validation was requested but neither 'sha256sum' or 'shasum' are available.\" >&2\n    echo \"Please install either command, or disable validation by removing 'distributionSha256Sum' from your maven-wrapper.properties.\" >&2\n    exit 1\n  fi\n  if [ $distributionSha256Result = false ]; then\n    echo \"Error: Failed to validate Maven distribution SHA-256, your Maven distribution might be compromised.\" >&2\n    echo \"If you updated your Maven version, you need to update the specified distributionSha256Sum property.\" >&2\n    exit 1\n  fi\nfi\n\n# unzip and move\nif command -v unzip >/dev/null; then\n  unzip ${__MVNW_QUIET_UNZIP:+\"$__MVNW_QUIET_UNZIP\"} \"$TMP_DOWNLOAD_DIR/$distributionUrlName\" -d \"$TMP_DOWNLOAD_DIR\" || die \"failed to unzip\"\nelse\n  tar xzf${__MVNW_QUIET_TAR:+\"$__MVNW_QUIET_TAR\"} \"$TMP_DOWNLOAD_DIR/$distributionUrlName\" -C \"$TMP_DOWNLOAD_DIR\" || die \"failed to untar\"\nfi\nprintf %s\\\\n \"$distributionUrl\" >\"$TMP_DOWNLOAD_DIR/$distributionUrlNameMain/mvnw.url\"\nmv -- \"$TMP_DOWNLOAD_DIR/$distributionUrlNameMain\" \"$MAVEN_HOME\" || [ -d \"$MAVEN_HOME\" ] || die \"fail to move MAVEN_HOME\"\n\nclean || :\nexec_maven \"$@\"\n"
        },
        {
          "name": "mvnw.cmd",
          "type": "blob",
          "size": 6.6376953125,
          "content": "<# : batch portion\n@REM ----------------------------------------------------------------------------\n@REM Licensed to the Apache Software Foundation (ASF) under one\n@REM or more contributor license agreements.  See the NOTICE file\n@REM distributed with this work for additional information\n@REM regarding copyright ownership.  The ASF licenses this file\n@REM to you under the Apache License, Version 2.0 (the\n@REM \"License\"); you may not use this file except in compliance\n@REM with the License.  You may obtain a copy of the License at\n@REM\n@REM    http://www.apache.org/licenses/LICENSE-2.0\n@REM\n@REM Unless required by applicable law or agreed to in writing,\n@REM software distributed under the License is distributed on an\n@REM \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n@REM KIND, either express or implied.  See the License for the\n@REM specific language governing permissions and limitations\n@REM under the License.\n@REM ----------------------------------------------------------------------------\n\n@REM ----------------------------------------------------------------------------\n@REM Apache Maven Wrapper startup batch script, version 3.3.1\n@REM\n@REM Optional ENV vars\n@REM   MVNW_REPOURL - repo url base for downloading maven distribution\n@REM   MVNW_USERNAME/MVNW_PASSWORD - user and password for downloading maven\n@REM   MVNW_VERBOSE - true: enable verbose log; others: silence the output\n@REM ----------------------------------------------------------------------------\n\n@IF \"%__MVNW_ARG0_NAME__%\"==\"\" (SET __MVNW_ARG0_NAME__=%~nx0)\n@SET __MVNW_CMD__=\n@SET __MVNW_ERROR__=\n@SET __MVNW_PSMODULEP_SAVE=%PSModulePath%\n@SET PSModulePath=\n@FOR /F \"usebackq tokens=1* delims==\" %%A IN (`powershell -noprofile \"& {$scriptDir='%~dp0'; $script='%__MVNW_ARG0_NAME__%'; icm -ScriptBlock ([Scriptblock]::Create((Get-Content -Raw '%~f0'))) -NoNewScope}\"`) DO @(\n  IF \"%%A\"==\"MVN_CMD\" (set __MVNW_CMD__=%%B) ELSE IF \"%%B\"==\"\" (echo %%A) ELSE (echo %%A=%%B)\n)\n@SET PSModulePath=%__MVNW_PSMODULEP_SAVE%\n@SET __MVNW_PSMODULEP_SAVE=\n@SET __MVNW_ARG0_NAME__=\n@SET MVNW_USERNAME=\n@SET MVNW_PASSWORD=\n@IF NOT \"%__MVNW_CMD__%\"==\"\" (%__MVNW_CMD__% %*)\n@echo Cannot start maven from wrapper >&2 && exit /b 1\n@GOTO :EOF\n: end batch / begin powershell #>\n\n$ErrorActionPreference = \"Stop\"\nif ($env:MVNW_VERBOSE -eq \"true\") {\n  $VerbosePreference = \"Continue\"\n}\n\n# calculate distributionUrl, requires .mvn/wrapper/maven-wrapper.properties\n$distributionUrl = (Get-Content -Raw \"$scriptDir/.mvn/wrapper/maven-wrapper.properties\" | ConvertFrom-StringData).distributionUrl\nif (!$distributionUrl) {\n  Write-Error \"cannot read distributionUrl property in $scriptDir/.mvn/wrapper/maven-wrapper.properties\"\n}\n\nswitch -wildcard -casesensitive ( $($distributionUrl -replace '^.*/','') ) {\n  \"maven-mvnd-*\" {\n    $USE_MVND = $true\n    $distributionUrl = $distributionUrl -replace '-bin\\.[^.]*$',\"-windows-amd64.zip\"\n    $MVN_CMD = \"mvnd.cmd\"\n    break\n  }\n  default {\n    $USE_MVND = $false\n    $MVN_CMD = $script -replace '^mvnw','mvn'\n    break\n  }\n}\n\n# apply MVNW_REPOURL and calculate MAVEN_HOME\n# maven home pattern: ~/.m2/wrapper/dists/{apache-maven-<version>,maven-mvnd-<version>-<platform>}/<hash>\nif ($env:MVNW_REPOURL) {\n  $MVNW_REPO_PATTERN = if ($USE_MVND) { \"/org/apache/maven/\" } else { \"/maven/mvnd/\" }\n  $distributionUrl = \"$env:MVNW_REPOURL$MVNW_REPO_PATTERN$($distributionUrl -replace '^.*'+$MVNW_REPO_PATTERN,'')\"\n}\n$distributionUrlName = $distributionUrl -replace '^.*/',''\n$distributionUrlNameMain = $distributionUrlName -replace '\\.[^.]*$','' -replace '-bin$',''\n$MAVEN_HOME_PARENT = \"$HOME/.m2/wrapper/dists/$distributionUrlNameMain\"\n$MAVEN_HOME_NAME = ([System.Security.Cryptography.MD5]::Create().ComputeHash([byte[]][char[]]$distributionUrl) | ForEach-Object {$_.ToString(\"x2\")}) -join ''\n$MAVEN_HOME = \"$MAVEN_HOME_PARENT/$MAVEN_HOME_NAME\"\n\nif (Test-Path -Path \"$MAVEN_HOME\" -PathType Container) {\n  Write-Verbose \"found existing MAVEN_HOME at $MAVEN_HOME\"\n  Write-Output \"MVN_CMD=$MAVEN_HOME/bin/$MVN_CMD\"\n  exit $?\n}\n\nif (! $distributionUrlNameMain -or ($distributionUrlName -eq $distributionUrlNameMain)) {\n  Write-Error \"distributionUrl is not valid, must end with *-bin.zip, but found $distributionUrl\"\n}\n\n# prepare tmp dir\n$TMP_DOWNLOAD_DIR_HOLDER = New-TemporaryFile\n$TMP_DOWNLOAD_DIR = New-Item -Itemtype Directory -Path \"$TMP_DOWNLOAD_DIR_HOLDER.dir\"\n$TMP_DOWNLOAD_DIR_HOLDER.Delete() | Out-Null\ntrap {\n  if ($TMP_DOWNLOAD_DIR.Exists) {\n    try { Remove-Item $TMP_DOWNLOAD_DIR -Recurse -Force | Out-Null }\n    catch { Write-Warning \"Cannot remove $TMP_DOWNLOAD_DIR\" }\n  }\n}\n\nNew-Item -Itemtype Directory -Path \"$MAVEN_HOME_PARENT\" -Force | Out-Null\n\n# Download and Install Apache Maven\nWrite-Verbose \"Couldn't find MAVEN_HOME, downloading and installing it ...\"\nWrite-Verbose \"Downloading from: $distributionUrl\"\nWrite-Verbose \"Downloading to: $TMP_DOWNLOAD_DIR/$distributionUrlName\"\n\n$webclient = New-Object System.Net.WebClient\nif ($env:MVNW_USERNAME -and $env:MVNW_PASSWORD) {\n  $webclient.Credentials = New-Object System.Net.NetworkCredential($env:MVNW_USERNAME, $env:MVNW_PASSWORD)\n}\n[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12\n$webclient.DownloadFile($distributionUrl, \"$TMP_DOWNLOAD_DIR/$distributionUrlName\") | Out-Null\n\n# If specified, validate the SHA-256 sum of the Maven distribution zip file\n$distributionSha256Sum = (Get-Content -Raw \"$scriptDir/.mvn/wrapper/maven-wrapper.properties\" | ConvertFrom-StringData).distributionSha256Sum\nif ($distributionSha256Sum) {\n  if ($USE_MVND) {\n    Write-Error \"Checksum validation is not supported for maven-mvnd. `nPlease disable validation by removing 'distributionSha256Sum' from your maven-wrapper.properties.\"\n  }\n  Import-Module $PSHOME\\Modules\\Microsoft.PowerShell.Utility -Function Get-FileHash\n  if ((Get-FileHash \"$TMP_DOWNLOAD_DIR/$distributionUrlName\" -Algorithm SHA256).Hash.ToLower() -ne $distributionSha256Sum) {\n    Write-Error \"Error: Failed to validate Maven distribution SHA-256, your Maven distribution might be compromised. If you updated your Maven version, you need to update the specified distributionSha256Sum property.\"\n  }\n}\n\n# unzip and move\nExpand-Archive \"$TMP_DOWNLOAD_DIR/$distributionUrlName\" -DestinationPath \"$TMP_DOWNLOAD_DIR\" | Out-Null\nRename-Item -Path \"$TMP_DOWNLOAD_DIR/$distributionUrlNameMain\" -NewName $MAVEN_HOME_NAME | Out-Null\ntry {\n  Move-Item -Path \"$TMP_DOWNLOAD_DIR/$MAVEN_HOME_NAME\" -Destination $MAVEN_HOME_PARENT | Out-Null\n} catch {\n  if (! (Test-Path -Path \"$MAVEN_HOME\" -PathType Container)) {\n    Write-Error \"fail to move MAVEN_HOME\"\n  }\n} finally {\n  try { Remove-Item $TMP_DOWNLOAD_DIR -Recurse -Force | Out-Null }\n  catch { Write-Warning \"Cannot remove $TMP_DOWNLOAD_DIR\" }\n}\n\nWrite-Output \"MVN_CMD=$MAVEN_HOME/bin/$MVN_CMD\"\n"
        },
        {
          "name": "pom.xml",
          "type": "blob",
          "size": 27.939453125,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n\n    <groupId>junit</groupId>\n    <artifactId>junit</artifactId>\n    <version>4.13.3-SNAPSHOT</version>\n\n    <name>JUnit</name>\n    <description>JUnit is a unit testing framework for Java, created by Erich Gamma and Kent Beck.</description>\n    <url>http://junit.org</url>\n    <inceptionYear>2002</inceptionYear>\n    <organization>\n        <name>JUnit</name>\n        <url>http://www.junit.org</url>\n    </organization>\n    <licenses>\n        <license>\n            <name>Eclipse Public License 1.0</name>\n            <url>http://www.eclipse.org/legal/epl-v10.html</url>\n            <distribution>repo</distribution>\n        </license>\n    </licenses>\n\n    <developers>\n        <developer>\n            <id>dsaff</id>\n            <name>David Saff</name>\n            <email>david@saff.net</email>\n        </developer>\n        <developer>\n            <id>kcooney</id>\n            <name>Kevin Cooney</name>\n            <email>kcooney@gmail.com</email>\n        </developer>\n        <developer>\n            <id>stefanbirkner</id>\n            <name>Stefan Birkner</name>\n            <email>mail@stefan-birkner.de</email>\n        </developer>\n        <developer>\n            <id>marcphilipp</id>\n            <name>Marc Philipp</name>\n            <email>mail@marcphilipp.de</email>\n        </developer>\n    </developers>\n    <contributors>\n        <contributor>\n            <name>JUnit contributors</name>\n            <organization>JUnit</organization>\n            <email>team@junit.org</email>\n            <url>https://github.com/junit-team/junit4/graphs/contributors</url>\n            <roles>\n                <role>developers</role>\n            </roles>\n        </contributor>\n    </contributors>\n\n    <prerequisites>\n        <maven>3.0.4</maven>\n    </prerequisites>\n\n    <scm>\n        <connection>scm:git:git://github.com/junit-team/junit4.git</connection>\n        <developerConnection>scm:git:git@github.com:junit-team/junit4.git</developerConnection>\n        <url>https://github.com/junit-team/junit4</url>\n      <tag>HEAD</tag>\n  </scm>\n    <issueManagement>\n        <system>github</system>\n        <url>https://github.com/junit-team/junit4/issues</url>\n    </issueManagement>\n    <ciManagement>\n        <system>github</system>\n        <url>https://github.com/junit-team/junit4/actions</url>\n    </ciManagement>\n    <distributionManagement>\n        <downloadUrl>https://github.com/junit-team/junit4/wiki/Download-and-Install</downloadUrl>\n        <snapshotRepository>\n            <id>junit-snapshot-repo</id>\n            <name>Nexus Snapshot Repository</name>\n            <url>https://oss.sonatype.org/content/repositories/snapshots/</url>\n        </snapshotRepository>\n        <repository>\n            <id>junit-releases-repo</id>\n            <name>Nexus Release Repository</name>\n            <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>\n        </repository>\n        <site>\n            <id>junit.github.io</id>\n            <url>gitsite:git@github.com/junit-team/junit4.git</url>\n        </site>\n    </distributionManagement>\n\n    <properties>\n        <jdkVersion>1.5</jdkVersion>\n        <surefireVersion>2.19.1</surefireVersion>\n        <hamcrestVersion>1.3</hamcrestVersion>\n        <enforcerPluginVersion>1.4</enforcerPluginVersion>\n        <jarPluginVersion>2.6</jarPluginVersion>\n        <javadocPluginVersion>2.10.3</javadocPluginVersion>\n        <project.build.sourceEncoding>ISO-8859-1</project.build.sourceEncoding>\n        <arguments />\n        <gpg.keyname>67893CC4</gpg.keyname>\n    </properties>\n\n    <dependencies>\n        <dependency>\n            <groupId>org.hamcrest</groupId>\n            <artifactId>hamcrest-core</artifactId>\n            <version>${hamcrestVersion}</version>\n        </dependency>\n\n        <dependency>\n            <groupId>org.hamcrest</groupId>\n            <artifactId>hamcrest-library</artifactId>\n            <version>${hamcrestVersion}</version>\n            <scope>test</scope>\n        </dependency>\n    </dependencies>\n\n    <build>\n        <resources>\n            <resource>\n                <directory>${project.basedir}/src/main/resources</directory>\n            </resource>\n            <resource>\n                <directory>${project.basedir}</directory>\n                <includes>\n                    <include>LICENSE-junit.txt</include>\n                </includes>\n            </resource>\n        </resources>\n        <plugins>\n            <!--\n            Both \"org.apache\" and \"org.codehaus\" are default providers of MOJO plugins\n            which are especially dedicated to Maven projects.\n            The MOJO stands for \"Maven plain Old Java Object\".\n            Each mojo is an executable goal in Maven, and a plugin is a distribution of\n            one or more related mojos.\n            For more information see http://maven.apache.org/plugin-developers/index.html\n\n            The following plugins are ordered according the Maven build lifecycle.\n            http://maven.apache.org/guides/introduction/introduction-to-the-lifecycle.html\n            -->\n            <plugin>\n                <!--\n                Checks that the version of user's maven installation is 3.0.4,\n                the JDK is 1.5+, no non-standard repositories are specified in\n                the project, requires only release versions of dependencies of other artifacts.\n                -->\n                <artifactId>maven-enforcer-plugin</artifactId>\n                <version>${enforcerPluginVersion}</version>\n                <executions>\n                    <execution>\n                        <id>enforce-versions</id>\n                        <phase>initialize</phase>\n                        <goals>\n                            <goal>enforce</goal>\n                        </goals>\n                        <configuration>\n                            <fail>true</fail>\n                            <rules>\n                                <requireMavenVersion>\n                                    <!-- Some plugin features require a recent Maven runtime to work properly -->\n                                    <message>Current version of Maven ${maven.version} required to build the project\n                                        should be ${project.prerequisites.maven}, or higher!\n                                    </message>\n                                    <version>[${project.prerequisites.maven},)</version>\n                                </requireMavenVersion>\n                                <requireJavaVersion>\n                                    <message>Current JDK version ${java.version} should be ${jdkVersion}, or higher!\n                                    </message>\n                                    <version>${jdkVersion}</version>\n                                </requireJavaVersion>\n                                <requireNoRepositories>\n                                    <message>Best Practice is to never define repositories in pom.xml (use a repository\n                                        manager instead).\n                                    </message>\n                                </requireNoRepositories>\n                                <requireReleaseDeps>\n                                    <message>No Snapshots Dependencies Allowed!</message>\n                                </requireReleaseDeps>\n                            </rules>\n                        </configuration>\n                    </execution>\n                </executions>\n            </plugin>\n            <plugin>\n                <!--\n                Updates Version#id().\n                -->\n                <groupId>com.google.code.maven-replacer-plugin</groupId>\n                <artifactId>replacer</artifactId>\n                <version>1.5.3</version>\n                <executions>\n                    <execution>\n                        <phase>process-sources</phase>\n                        <goals>\n                            <goal>replace</goal>\n                        </goals>\n                    </execution>\n                </executions>\n                <configuration>\n                    <ignoreMissingFile>false</ignoreMissingFile>\n                    <file>${project.build.sourceDirectory}/junit/runner/Version.java.template</file>\n                    <outputFile>${project.build.sourceDirectory}/junit/runner/Version.java</outputFile>\n                    <regex>false</regex>\n                    <token>@version@</token>\n                    <value>${project.version}</value>\n                </configuration>\n            </plugin>\n            <plugin><!-- Using jdk 1.5.0_22, package-info.java files are compiled correctly. -->\n                <!--\n                java compiler plugin forked in extra process\n                -->\n                <artifactId>maven-compiler-plugin</artifactId>\n                <version>3.3</version>\n                <configuration>\n                    <encoding>${project.build.sourceEncoding}</encoding>\n                    <source>${jdkVersion}</source>\n                    <target>${jdkVersion}</target>\n                    <testSource>${jdkVersion}</testSource>\n                    <testTarget>${jdkVersion}</testTarget>\n                    <compilerVersion>1.5</compilerVersion>\n                    <showDeprecation>true</showDeprecation>\n                    <showWarnings>true</showWarnings>\n                    <debug>true</debug>\n                    <fork>true</fork>\n                    <compilerArgs>\n                        <arg>-Xlint:unchecked</arg>\n                    </compilerArgs>\n                    <maxmem>128m</maxmem>\n                </configuration>\n            </plugin>\n            <plugin>\n                <groupId>org.codehaus.mojo</groupId>\n                <artifactId>animal-sniffer-maven-plugin</artifactId>\n                <version>1.14</version>\n                <executions>\n                    <execution>\n                        <id>signature-check</id>\n                        <phase>test</phase>\n                        <goals>\n                            <goal>check</goal>\n                        </goals>\n                        <configuration>\n                            <signature>\n                                <groupId>org.codehaus.mojo.signature</groupId>\n                                <artifactId>java15</artifactId>\n                                <version>1.0</version>\n                            </signature>\n                        </configuration>\n                    </execution>\n                </executions>\n            </plugin>\n            <plugin>\n                <!--\n                A plugin which uses the JUnit framework in order to start\n                our junit suite \"AllTests\" after the sources are compiled.\n                -->\n                <artifactId>maven-surefire-plugin</artifactId>\n                <version>${surefireVersion}</version>\n                <configuration>\n                    <includes>\n                        <include>org/junit/tests/AllTests.java</include>\n                    </includes>\n                    <useSystemClassLoader>true</useSystemClassLoader>\n                    <enableAssertions>false</enableAssertions>\n                </configuration>\n                <dependencies>\n                    <dependency>\n                        <groupId>org.apache.maven.surefire</groupId>\n                        <artifactId>surefire-junit47</artifactId>\n                        <version>${surefireVersion}</version>\n                    </dependency>\n                </dependencies>\n            </plugin>\n            <plugin>\n                <!--\n                This plugin can package the main artifact's sources (src/main/java)\n                in to jar archive. See target/junit-*-sources.jar.\n                -->\n                <artifactId>maven-source-plugin</artifactId>\n                <version>2.4</version>\n            </plugin>\n            <plugin>\n                <!--\n                This plugin can generate Javadoc by a forked\n                process and then package the Javadoc\n                in jar archive target/junit-*-javadoc.jar.\n                -->\n                <artifactId>maven-javadoc-plugin</artifactId>\n                <version>${javadocPluginVersion}</version>\n                <configuration>\n                    <stylesheetfile>${basedir}/src/main/javadoc/stylesheet.css</stylesheetfile>\n                    <show>protected</show>\n                    <author>false</author>\n                    <version>false</version>\n                    <detectLinks>false</detectLinks>\n                    <linksource>true</linksource>\n                    <keywords>true</keywords>\n                    <use>true</use>\n                    <windowtitle>JUnit API</windowtitle>\n                    <encoding>UTF-8</encoding>\n                    <locale>en</locale>\n                    <javadocVersion>${jdkVersion}</javadocVersion>\n                    <javaApiLinks>\n                        <property>\n                            <name>api_${jdkVersion}</name>\n                            <value>http://docs.oracle.com/javase/${jdkVersion}.0/docs/api/</value>\n                        </property>\n                    </javaApiLinks>\n                    <excludePackageNames>*.internal.*</excludePackageNames>\n                    <verbose>true</verbose>\n                    <minmemory>32m</minmemory>\n                    <maxmemory>128m</maxmemory>\n                    <failOnError>true</failOnError>\n                    <includeDependencySources>true</includeDependencySources>\n                    <dependencySourceIncludes>\n                        <dependencySourceInclude>org.hamcrest:hamcrest-core:*</dependencySourceInclude>\n                    </dependencySourceIncludes>\n                </configuration>\n            </plugin>\n            <plugin>\n                <artifactId>maven-release-plugin</artifactId>\n                <version>2.5.2</version>\n                <configuration>\n                    <mavenExecutorId>forked-path</mavenExecutorId>\n                    <useReleaseProfile>false</useReleaseProfile>\n                    <arguments>-Pgenerate-docs,junit-release ${arguments}</arguments>\n                    <tagNameFormat>r@{project.version}</tagNameFormat>\n                </configuration>\n            </plugin>\n            <plugin>\n                <artifactId>maven-site-plugin</artifactId>\n                <version>3.4</version>\n                <dependencies>\n                    <dependency>\n                        <groupId>com.github.stephenc.wagon</groupId>\n                        <artifactId>wagon-gitsite</artifactId>\n                        <version>0.4.1</version>\n                    </dependency>\n                    <dependency>\n                        <groupId>org.apache.maven.doxia</groupId>\n                        <artifactId>doxia-module-markdown</artifactId>\n                        <version>1.5</version>\n                    </dependency>\n                </dependencies>\n            </plugin>\n            <plugin>\n                <artifactId>maven-jar-plugin</artifactId>\n                <version>${jarPluginVersion}</version>\n                <configuration>\n                    <archive>\n                        <addMavenDescriptor>false</addMavenDescriptor>\n                        <manifest>\n                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>\n                        </manifest>\n                        <manifestEntries>\n                            <Automatic-Module-Name>junit</Automatic-Module-Name>\n                        </manifestEntries>                        \n                    </archive>\n                </configuration>\n            </plugin>\n            <plugin>\n                <artifactId>maven-clean-plugin</artifactId>\n                <version>2.6.1</version>\n            </plugin>\n            <plugin>\n                <artifactId>maven-deploy-plugin</artifactId>\n                <version>2.8.2</version>\n            </plugin>\n            <plugin>\n                <artifactId>maven-install-plugin</artifactId>\n                <version>2.5.2</version>\n            </plugin>\n            <plugin>\n                <artifactId>maven-resources-plugin</artifactId>\n                <version>2.7</version>\n            </plugin>\n        </plugins>\n    </build>\n\n    <reporting>\n        <plugins>\n            <plugin>\n                <artifactId>maven-project-info-reports-plugin</artifactId>\n                <version>2.8</version>\n                <configuration>\n                    <dependencyLocationsEnabled>false</dependencyLocationsEnabled>\n                    <!-- waiting for MPIR-267 -->\n                </configuration>\n                <reportSets>\n                    <reportSet>\n                        <reports>\n                            <report>index</report>\n                            <report>dependency-info</report>\n                            <report>modules</report>\n                            <report>license</report>\n                            <report>project-team</report>\n                            <report>scm</report>\n                            <report>issue-tracking</report>\n                            <report>mailing-list</report>\n                            <report>dependency-management</report>\n                            <report>dependencies</report>\n                            <report>dependency-convergence</report>\n                            <report>cim</report>\n                            <report>distribution-management</report>\n                        </reports>\n                    </reportSet>\n                </reportSets>\n            </plugin>\n            <plugin>\n                <artifactId>maven-javadoc-plugin</artifactId>\n                <version>${javadocPluginVersion}</version>\n                <configuration>\n                    <destDir>javadoc/latest</destDir>\n                    <stylesheetfile>${basedir}/src/main/javadoc/stylesheet.css</stylesheetfile>\n                    <show>protected</show>\n                    <author>false</author>\n                    <version>false</version>\n                    <detectLinks>false</detectLinks>\n                    <linksource>true</linksource>\n                    <keywords>true</keywords>\n                    <use>true</use>\n                    <windowtitle>JUnit API</windowtitle>\n                    <encoding>UTF-8</encoding>\n                    <locale>en</locale>\n                    <javadocVersion>${jdkVersion}</javadocVersion>\n                    <javaApiLinks>\n                        <property>\n                            <name>api_${jdkVersion}</name>\n                            <value>http://docs.oracle.com/javase/${jdkVersion}.0/docs/api/</value>\n                        </property>\n                    </javaApiLinks>\n                    <excludePackageNames>junit.*,*.internal.*</excludePackageNames>\n                    <verbose>true</verbose>\n                    <minmemory>32m</minmemory>\n                    <maxmemory>128m</maxmemory>\n                    <failOnError>true</failOnError>\n                    <includeDependencySources>true</includeDependencySources>\n                    <dependencySourceIncludes>\n                        <dependencySourceInclude>org.hamcrest:hamcrest-core:*</dependencySourceInclude>\n                    </dependencySourceIncludes>\n                </configuration>\n                <reportSets>\n                    <reportSet>\n                        <reports>\n                            <report>javadoc</report>\n                        </reports>\n                    </reportSet>\n                </reportSets>\n            </plugin>\n        </plugins>\n    </reporting>\n\n    <profiles>\n        <profile>\n            <id>junit-release</id>\n            <!--\n            Signs all artifacts before deploying to Maven Central.\n            -->\n            <build>\n                <plugins>\n                    <plugin>\n                        <!--\n                        The goal is to sign all artifacts so that the user may verify them before downloading.\n                        The automatic build system may reuire your key ID, and passphrase specified using system properties:\n                        -Dgpg.passphrase=\"<passphrase>\" -Dgpg.keyname=\"<your key ID>\"\n                        In order to create the key pair, use the command \"gpg &ndash;&ndash;gen-key\".\n                        (&ndash;&ndash; stands for double dash)\n                        -->\n                        <artifactId>maven-gpg-plugin</artifactId>\n                        <version>1.6</version>\n                        <executions>\n                            <execution>\n                                <id>gpg-sign</id>\n                                <phase>verify</phase>\n                                <goals>\n                                    <goal>sign</goal>\n                                </goals>\n                            </execution>\n                        </executions>\n                    </plugin>\n                </plugins>\n            </build>\n        </profile>\n        <profile>\n            <id>generate-docs</id>\n            <!--\n            Generate the documentation artifacts. \n            Note: this profile is also required to be active for release\n            builds due to the packaging requirements of the Central repo\n            -->\n            <build>\n                <plugins>\n                    <plugin>\n                        <artifactId>maven-source-plugin</artifactId>\n                        <executions>\n                            <execution>\n                                <id>attach-sources</id>\n                                <phase>prepare-package</phase>\n                                <goals>\n                                    <goal>jar-no-fork</goal>\n                                </goals>\n                            </execution>\n                        </executions>\n                    </plugin>\n                    <plugin>\n                        <artifactId>maven-javadoc-plugin</artifactId>\n                        <executions>\n                            <execution>\n                                <id>attach-javadoc</id>\n                                <phase>package</phase>\n                                <goals>\n                                    <goal>jar</goal>\n                                </goals>\n                            </execution>\n                        </executions>\n                    </plugin>\n                </plugins>\n            </build>\n        </profile>\n        <profile>\n            <id>restrict-doclint</id>\n            <!-- doclint is only supported by JDK 8 -->\n            <activation>\n                <jdk>[1.8,)</jdk>\n            </activation>\n            <build>\n                <plugins>\n                    <plugin>\n                        <artifactId>maven-compiler-plugin</artifactId>\n                        <configuration>\n                            <compilerArgs>\n                                <arg>-Xlint:unchecked</arg>\n                                <arg>-Xdoclint:accessibility,reference,syntax</arg>\n                            </compilerArgs>\n                        </configuration>\n                    </plugin>\n                    <plugin>\n                        <artifactId>maven-javadoc-plugin</artifactId>\n                        <configuration>\n                            <additionalparam>-Xdoclint:accessibility -Xdoclint:reference</additionalparam>\n                        </configuration>\n                    </plugin>\n                </plugins>\n            </build>\n            <reporting>\n                <plugins>\n                    <plugin>\n                        <artifactId>maven-javadoc-plugin</artifactId>\n                        <configuration>\n                            <additionalparam>-Xdoclint:accessibility -Xdoclint:reference</additionalparam>\n                        </configuration>\n                    </plugin>\n                </plugins>\n            </reporting>\n        </profile>\n        <profile>\n            <id>java9</id>\n            <activation>\n                <jdk>[1.9,12)</jdk>\n            </activation>\n            <properties>\n                <!-- JDK 9 minimal source and target versions are 1.6 -->\n                <jdkVersion>1.6</jdkVersion>\n            </properties>\n            <build>\n                <plugins>\n                    <plugin>\n                        <artifactId>maven-javadoc-plugin</artifactId>\n                        <configuration>\n                            <source>1.6</source>\n                        </configuration>\n                    </plugin>\n                </plugins>\n            </build>\n            <reporting>\n                <plugins>\n                    <plugin>\n                        <artifactId>maven-javadoc-plugin</artifactId>\n                        <configuration>\n                            <source>1.6</source>\n                        </configuration>\n                    </plugin>\n                </plugins>\n            </reporting>\n        </profile>\n        <profile>\n            <id>java12</id>\n            <activation>\n                <jdk>[12,20)</jdk>\n            </activation>\n            <properties>\n                <!-- JDK 12 minimal source and target versions are 1.7 -->\n                <jdkVersion>1.7</jdkVersion>\n                <enforcerPluginVersion>3.0.0-M3</enforcerPluginVersion>\n                <jarPluginVersion>3.2.0</jarPluginVersion>\n                <javadocPluginVersion>3.2.0</javadocPluginVersion>\n            </properties>\n            <build>\n                <plugins>\n                    <plugin>\n                        <artifactId>maven-javadoc-plugin</artifactId>\n                        <configuration>\n                            <source>1.7</source>\n                            <failOnError>false</failOnError>\n                        </configuration>\n                    </plugin>\n                    <plugin>\n                        <artifactId>maven-compiler-plugin</artifactId>\n                        <configuration>\n                            <compilerArgs>\n                                <arg>-Xdoclint:none</arg>\n                            </compilerArgs>\n                        </configuration>\n                    </plugin>\n                </plugins>\n            </build>\n            <reporting>\n                <plugins>\n                    <plugin>\n                        <artifactId>maven-javadoc-plugin</artifactId>\n                        <configuration>\n                            <source>1.7</source>\n                            <failOnError>false</failOnError>\n                        </configuration>\n                    </plugin>\n                </plugins>\n            </reporting>\n        </profile>\n        <profile>\n            <id>java20</id>\n            <activation>\n                <jdk>[20,)</jdk>\n            </activation>\n            <properties>\n                <!-- JDK 20 minimal source and target versions are 1.8 -->\n                <jdkVersion>1.8</jdkVersion>\n            </properties>\n            <build>\n                <plugins>\n                    <plugin>\n                        <artifactId>maven-javadoc-plugin</artifactId>\n                        <configuration>\n                            <source>1.8</source>\n                            <failOnError>false</failOnError>\n                        </configuration>\n                    </plugin>\n                    <plugin>\n                        <artifactId>maven-compiler-plugin</artifactId>\n                        <configuration>\n                            <compilerArgs>\n                                <arg>-Xdoclint:none</arg>\n                            </compilerArgs>\n                        </configuration>\n                    </plugin>\n                </plugins>\n            </build>\n            <reporting>\n                <plugins>\n                    <plugin>\n                        <artifactId>maven-javadoc-plugin</artifactId>\n                        <configuration>\n                            <source>1.8</source>\n                            <failOnError>false</failOnError>\n                        </configuration>\n                    </plugin>\n                </plugins>\n            </reporting>\n        </profile>\n    </profiles>\n</project>\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "to-do.txt",
          "type": "blob",
          "size": 0.9384765625,
          "content": "* update documentation\n\t* new cook's tour\n\t* update Test Infected\n* Should there be a \"prefix\" annotation for Suites?\n  * This would allow two Suites with different BeforeClass/AfterClass behaviors,\n    but the same component tests, to co-exist\n\n* update the build process\n    * update site for plug-in version?\n* Ant\n\t* Basic task\n* support testing run once initialization code e.g. class Foo {{...}}\n* Automatically add failing tests to the Known Defects section of the README.html\n\n* Create assume(that()) and assert(that()) \n  (what is a better name for the second one?)\n  \n* Simplify implementation of equality, and organize AssertionTest\n\n* Theories class validation should be much better\n\n* Find a way to make Parameterized a single-class extension\n\n* If a suite() returns a JUnit4TestAdapter, allow Filters and Sorters to operate on \n  the adapted Runner.\n  \n* Every time I add a Filter feature, I have to add an equivalent Sorter feature.  Suspicious.\n"
        }
      ]
    }
  ]
}