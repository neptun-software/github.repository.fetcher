{
  "metadata": {
    "timestamp": 1736708657682,
    "page": 47,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjUw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Blankj/awesome-java-leetcode",
      "stars": 8705,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.025390625,
          "content": ".DS_Store\n*.iml\n.idea\nout\n"
        },
        {
          "name": "Companies.md",
          "type": "blob",
          "size": 2.9541015625,
          "content": "# LeetCode companies\n\n### Google\n```\n4,10,17,20,22,23,31,42,44,50,54,56,57,66,128,133,139,140,146,155,158\n159,162,163,166,173,200,208,212,214,218,224,228,230,231,239,240,246\n247,249,251,253,257,259,261,266,269,270,271,272,274,276,279,280,281\n282,284,286,288,289,293,294,295,297,298,302,305,308,309,310,312,313\n314,315,316,317,318,320,321,323,324,326,327,329,330,331,332,336,340\n341,345,346,348,351,353,354,356,357,358,359,360,361,362,363,368,369\n370,373,374,375,377,378,379,380,382,388,389,391,393,394,397,399,400\n401,402,406,407,408,409,411,415,417,418,421,422,425,444,447,448,451\n459,460,463,465,469,471,474,475,480,481-487,490,493,494,498,501,503\n505,506,514,520,521,522,524,526,527,530,531,533,534,535,541,542,543\n544,545,551,552,560,562,568,569,572\n```\n\n### Facebook\n```\n1,10,13,15,17,20,23,25,26,28,33,38,43,44,49,50,56,57,67,68,69,71,75,76\n78,79,80,85,88,90,91,98,102,117,121,125,127,128,133,139,146,157,158,161\n168,173,200,206,208,209,210,211,215,218,221,234,235,236,238,252,253,257\n261,265,269,273,274,275,277,278,282,283,285,286,297,301,311,314,325,334\n341,377,380,398,404,410,461,477,494,523,525,534,535,543,554\n```\n\n### Linkedin\n```\n1,21,23,33,34,46,47,50,53,56,57,65,68,76,101-104,127,149,150,152\n156,170,173,18,198,205,236,238,243,244,245,254,256,277,297,311,339\n364,366,367,464,515\n```\n\n### Microsoft\n```\n1,2,4,5,8,13,15,20,21,23-26,28,33,46,47,48,53-56,71,73,75,79,88,91\n94,98,101,102,103,106,112,114,116,117,121,124,125,138,141,146,151,153\n160,162,165,168,171,173,174,186,189,191,200,204,206,208,212,213,215\n218,232,235,236,237,238,258,268,270,273,285,297,300,333,348,365,387\n419,445,452,513,567\n```\n\n### Amazon\n```\n1,2,3,5,8,15,1,20,21,,23,42,48,49,73,78,89,98,102,119,121,126,127,138\n139,141,146,155,160,167,186,199,200,204,206,215,234,235,236,238,239,240\n242,297,355,380,387,396,414,438,449,451,459,460,508,516,517,529,532,534\n535,536,537,538,545,579\n```\n\n### Uber\n```\n1,8,10,13,17,22,23,24,33,36,37,39,49,54,76,78,91,104,121,125,133,138\n139,140,146,155,161,171,186,202,206,208,230,242,249,254,262,266,290\n291,297,337,373,380,432,450,516,534,535\n```\n\n### Yelp\n```\n1,3,14,49,56,126,127,151,206,207,218,242,347,380,381,564\n```\n\n### Apple\n```\n1,4,7,21,28,36,42,48,69,70,102,104,118,149,151,165,190,191,206,207,215\n221,236,237,238,240,257,284,383\n```\n\n### Bloomberg\n```\n1,2,3,5,7,8,11,13,15,16,20,24,26,33,42,49,50,53,56,62,63,69,79,88,98,100,101,102\n103,105,110,113,117,121,122,131,138,139,141,146,151,155,158,160,172,189,206,208\n215,225,230,232,266,268,2774,283,287,297,386,387,445,556\n```\n\n### Yahoo\n```\n1,4,13,104,139,141,146,206,217,284,297,479,491\n```\n\n### Airbnb\n```\n1,2,10,20,23,68,108,136,160,190,198,202,212,217,219,220,221,227,251\n269,336,385,415\n```\n\n### Snapchat\n```\n36,37,39,40,44,76,96,127,140,146,151,155,161,206,253,269,270,289,312,314,\n377,402,403,439,527\n```\n\n### Two Sigma\n```\n44,289,342,349,547\n```\n\n### Indeed\n```\n453,563\n```\n\n### Mathworks\n```\n500,566\n```\n\n### Alibaba\n```\n548,555\n```\n\n### Baidu\n```\n124,395,397,410,413,446,488,576\n```\n\n### Zappos\n```\n557\n```\n\n### eBay\n```\n416,572\n```\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 17.10546875,
          "content": "# awesome-java-leetcode\n\n我如今是一名 Android Developer，大学的我曾是一名 ACMer，我一直认为数据结构和算法是作为一名程序员必须掌握和善于利用的，为了不让数据结构和算法淡出我的记忆，所以我打算重拾 LeetCode 之 Algorithm，语言选择的是 Java，题库会一点点完善起来，按简单，中等，困难分类，相应难度下按题号排序，源代码在 [src][src] 目录中，相关解题都在 [note][note] 目录中，想要学习数据结构和算法或打算刷 LeetCode 的小伙伴们欢迎 star 哦。\n\n如今有机会面试 Facebook，附上 LeetCode 上 Facebook 的面试题目序号，希望可以帮助到以后想入 Facebook 的小伙伴:-)\n\n```\n1,10,13,15,17,20,23,25,26,28,33,38,43,44,49,50,56,57,67,68,69,71,75,76\n78,79,80,85,88,90,91,98,102,117,121,125,127,128,133,139,146,157,158,161\n168,173,200,206,208,209,210,211,215,218,221,234,235,236,238,252,253,257\n261,265,269,273,274,275,277,278,282,283,285,286,297,301,311,314,325,334\n341,377,380,398,404,410,461,477,494,523,525,534,535,543,554\n```\n\n如果想知道更多公司 LeetCode 面试题，可以参看 [Companies.md][companies]。\n\n附上镇楼诗：\n\n> 明有科举八股，今有 LeetCode。  \n> 八股定格式而取文采心意，LeetCode 定题目且重答案背诵。  \n> 美其名曰：\"practice makes perfect.\"  \n> 为何今不如古？  \n> 非也非也，  \n> 科举为国取士，LeetCode 为 Google 筛码工，各取所需也。  \n\n## Easy\n\n| #    | Title                                                             | Tag                                               |\n| :--- | :---------------------------------------------------------------- | :------------------------------------------------ |\n| 1    | [Two Sum][0001]                                                   | Array, Hash Table                                 |\n| 7    | [Reverse Integer][0007]                                           | Math                                              |\n| 9    | [Palindrome Number][0009]                                         | Math                                              |\n| 13   | [Roman to Integer][0013]                                          | Math, String                                      |\n| 14   | [Longest Common Prefix][0014]                                     | String                                            |\n| 16.11| [跳水板(Diving Board LCCI)][16_11]                                 | 递归、记忆化                                       |\n| 20   | [Valid Parentheses][0020]                                         | Stack, String                                     |\n| 21   | [Merge Two Sorted Lists][0021]                                    | Linked List                                       |\n| 26   | [Remove Duplicates from Sorted Array][0026]                       | Array, Two Pointers                               |\n| 27   | [Remove Element][0027]                                            | Array, Two Pointers                               |\n| 28   | [Implement strStr()][0028]                                        | Two Pointers, String                              |\n| 35   | [Search Insert Position][0035]                                    | String                                            |\n| 38   | [Count and Say][0038]                                             | String                                            |\n| 53   | [Maximum Subarray][0053]                                          | Array, Divide and Conquer, Dynamic Programming    |\n| 58   | [Length of Last Word][0058]                                       | String                                            |\n| 66   | [Plus One][0066]                                                  | Array, Math                                       |\n| 67   | [Add Binary][0067]                                                | Math, String                                      |\n| 69   | [Sqrt(x)][0069]                                                   | Binary Search, Math                               |\n| 70   | [Climbing Stairs][0070]                                           | Dynamic Programming                               |\n| 83   | [Remove Duplicates from Sorted List][0083]                        | Linked List                                       |\n| 88   | [Merge Sorted Array][0088]                                        | Array, Two Pointers                               |\n| 100  | [Same Tree][0100]                                                 | Tree, Depth-first Search                          |\n| 101  | [Symmetric Tree][0101]                                            | Tree, Depth-first Search, Breadth-first Search    |\n| 104  | [Maximum Depth of Binary Tree][0104]                              | Tree, Depth-first Search                          |\n| 107  | [Binary Tree Level Order Traversal II][107]                       | Tree, Breadth-first Search                        |\n| 108  | [Convert Sorted Array to Binary Search Tree][0108]                | Tree, Depth-first Search                          |\n| 110  | [Balanced Binary Tree][0110]                                      | Tree, Depth-first Search                          |\n| 111  | [Minimum Depth of Binary Tree][0111]                              | Tree, Depth-first Search, Breadth-first Search    |\n| 112  | [Path Sum][0112]                                                  | Tree, Depth-first Search                          |\n| 118  | [Pascal's Triangle][0118]                                         | Array                                             |\n| 119  | [Pascal's Triangle II][0119]                                      | Array                                             |\n| 121  | [Best Time to Buy and Sell Stock][0121]                           | Array, Dynamic Programmin                         |\n| 122  | [Best Time to Buy and Sell Stock II][0122]                        | Array, Greedy                                     |\n| 543  | [Diameter of Binary Tree][0543]                                   | Tree                                              |\n\n## Medium\n\n| #    | Title                                                             | Tag                                               |\n| :--- | :---------------------------------------------------------------- | :------------------------------------------------ |\n| 2    | [Add Two Numbers][0002]                                           | Linked List, Math                                 |\n| 3    | [Longest Substring Without Repeating Characters][0003]            | Hash Table, Two Pointers, String                  |\n| 5    | [Longest Palindromic Substring][0005]                             | String, Dynamic Programming                       |\n| 6    | [ZigZag Conversion][0006]                                         | String                                            |\n| 8    | [String to Integer (atoi)][0008]                                  | Math, String                                      |\n| 11   | [Container With Most Water][0011]                                 | Array, Two Pointers                               |\n| 12   | [Integer to Roman][0012]                                          | Math, String                                      |\n| 15   | [3Sum][0015]                                                      | Array, Two Pointers                               |\n| 15   | [3Sum Closest][0016]                                              | Array, Two Pointers                               |\n| 17   | [Letter Combinations of a Phone Number][0017]                     | String, Backtracking                              |\n| 18   | [4Sum][0018]                                                      | Array, Hash Table, Two Pointers                   |\n| 19   | [Remove Nth Node From End of List][0019]                          | Linked List, Two Pointers                         |\n| 22   | [Generate Parentheses][0022]                                      | String, Backtracking                              |\n| 24   | [Swap Nodes in Pairs][0024]                                       | Linked List                                       |\n| 29   | [Divide Two Integers][0029]                                       | Math, Binary Search                               |\n| 33   | [Search in Rotated Sorted Array][0033]                            | Arrays, Binary Search                             |\n| 43   | [Multiply Strings][0043]                                          | Math, String                                      |\n| 49   | [Group Anagrams][0049]                                            | Hash Table, String                                |\n| 50   | [Pow(x, n)][0050]                                                 | Math, Binary Search                               |\n| 56   | [Merge Intervals][0056]                                           | Array, Sort                                       |\n| 63   | [不同路径 II(Unique Paths II)][0063]                               | 数组、动态规划                                      |\n| 209  | [长度最小的子数组(Minimum Size Subarray Sum)][0209]                 | 数组、双指针、二分查找                               |\n| 215  | [数组中的第K个最大元素(Kth Largest Element in an Array)][0215]       | 堆、分治算法                                       |\n| 554  | [Brick Wall][0554]                                                | Hash Table                                        |\n| 1014 | [最佳观光组合(Best Sightseeing Pair)][1014]                         | 数组                                              |\n\n## Hard\n\n| #    | Title                                                             | Tag                                               |\n| :--- | :---------------------------------------------------------------- | :------------------------------------------------ |\n| 4    | [Median of Two Sorted Arrays][0004]                               | Array, Binary Search, Divide and Conquer          |\n| 10   | [Regular Expression Matching][0010]                               | String, Dynamic Programming, Backtracking         |\n| 23   | [Merge k Sorted Lists][0023]                                      | Linked List, Divide and Conquer, Heap             |\n| 25   | [Reverse Nodes in k-Group][0025]                                  | Linked List                                       |\n| 30   | [Substring with Concatenation of All Words][0030]                 | Hash Table, Two Pointers, String                  |\n| 44   | [Wildcard Matching][0044]                                         | String, Dynamic Programming, Backtracking, Greedy |\n| 57   | [Insert Interval][0057]                                           | Array, Sort                                       |\n| 68   | [Text Justification][0068]                                        | String                                            |\n| 1028 | [从先序遍历还原二叉树(Recover a Tree From Preorder Traversal)][1028] | 树、深度优先搜索                                    |\n\n## 打个小广告\n\n欢迎加入我的小专栏「**[基你太美](https://xiaozhuanlan.com/Blankj)**」一起学习。\n\n\n[src]: https://github.com/Blankj/awesome-java-leetcode/tree/master/src\n[note]: https://github.com/Blankj/awesome-java-leetcode/tree/master/note\n[companies]: https://github.com/Blankj/awesome-java-leetcode/blob/master/Companies.md\n\n[0001]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0001/README.md\n[0007]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0007/README.md\n[0009]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0009/README.md\n[0013]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0013/README.md\n[0014]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0014/README.md\n[16_11]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/16_11/README.md\n[0020]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0020/README.md\n[0021]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0021/README.md\n[0026]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0026/README.md\n[0027]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0027/README.md\n[0028]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0028/README.md\n[0035]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0035/README.md\n[0038]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0038/README.md\n[0053]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0053/README.md\n[0058]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0058/README.md\n[0066]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0066/README.md\n[0067]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0067/README.md\n[0069]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0069/README.md\n[0070]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0070/README.md\n[0083]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0083/README.md\n[0088]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0088/README.md\n[0100]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0100/README.md\n[0101]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0101/README.md\n[0104]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0104/README.md\n[0107]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0107/README.md\n[0108]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0108/README.md\n[0110]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0110/README.md\n[0111]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0111/README.md\n[0112]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0112/README.md\n[0118]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0118/README.md\n[0119]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0119/README.md\n[0121]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0121/README.md\n[0122]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0122/README.md\n[0543]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0543/README.md\n\n[0002]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0002/README.md\n[0003]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0003/README.md\n[0005]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0005/README.md\n[0006]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0006/README.md\n[0008]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0008/README.md\n[0011]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0011/README.md\n[0012]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0012/README.md\n[0015]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0015/README.md\n[0016]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0016/README.md\n[0017]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0017/README.md\n[0018]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0018/README.md\n[0019]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0019/README.md\n[0022]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0022/README.md\n[0024]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0024/README.md\n[0029]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0029/README.md\n[0033]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0033/README.md\n[0043]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0043/README.md\n[0049]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0049/README.md\n[0050]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0050/README.md\n[0056]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0056/README.md\n[0063]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0063/README.md\n[0209]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0209/README.md\n[0215]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0215/README.md\n[0554]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0554/README.md\n[1014]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/1014/README.md\n\n[0004]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0004/README.md\n[0010]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0010/README.md\n[0023]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0023/README.md\n[0025]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0025/README.md\n[0030]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0030/README.md\n[0044]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0044/README.md\n[0057]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0057/README.md\n[0068]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/0068/README.md\n[1028]: https://github.com/Blankj/awesome-java-leetcode/blob/master/note/1028/README.md\n"
        },
        {
          "name": "note",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}