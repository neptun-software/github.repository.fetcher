{
  "metadata": {
    "timestamp": 1736708640139,
    "page": 13,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "LawnchairLauncher/lawnchair",
      "stars": 9720,
      "defaultBranch": "15-dev",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.806640625,
          "content": "root = true\n\n[*]\ncharset = utf-8\nindent_size = 4\nindent_style = space\ninsert_final_newline = true\ntrim_trailing_whitespace = true\n\n[*.java]\n# Don't trim spaces in AOSP code.\ntrim_trailing_whitespace = false\n\n[*.{kt,kts}]\nij_kotlin_imports_layout = *\nij_kotlin_allow_trailing_comma = true\nij_kotlin_allow_trailing_comma_on_call_site = true\nij_kotlin_name_count_to_use_star_import = 999\nij_kotlin_name_count_to_use_star_import_for_members = 999\nij_kotlin_packages_to_use_import_on_demand = unset\nktlint_code_style = intellij_idea\nktlint_function_naming_ignore_when_annotated_with = Composable\nktlint_standard_discouraged-comment-location = disabled\nktlint_standard_function-expression-body = disabled\nktlint_compose_lambda-param-event-trailing = disabled\n\n[*.md]\ntrim_trailing_whitespace = false\n\n[*.{yml,yaml}]\nindent_size = 2\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.0517578125,
          "content": "* text=auto eol=lf\n\n*.bat text eol=crlf\n*.jar binary\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.2666015625,
          "content": "db_files\n*.iml\n.project\n.classpath\n.project.properties\n**/gen\ntests/stress/gen\nWallpaperPicker/gen\nWallpaperPicker/.project.properties\nbin\n.idea\n.gradle\n.kotlin\nlocal.properties\nbuild\n.DS_Store\nkeystore.properties\n*.jks\n__pycache__\n.vscode\n.fleet\nlawnWithQuickstep/release\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.1640625,
          "content": "[submodule \"platform_frameworks_libs_systemui\"]\n\tpath = platform_frameworks_libs_systemui\n\turl = https://github.com/LawnchairLauncher/platform_frameworks_libs_systemui\n"
        },
        {
          "name": ".idea",
          "type": "tree",
          "content": null
        },
        {
          "name": "Android.bp",
          "type": "blob",
          "size": 10.3408203125,
          "content": "// Copyright (C) 2018 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\npackage {\n    // See: http://go/android-license-faq\n    default_applicable_licenses: [\"Android-Apache-2.0\"],\n}\n\nmin_launcher3_sdk_version = \"30\"\n\n// Common source files used to build launcher (java and kotlin)\n// All sources are split so they can be reused in many other libraries/apps in other folders\n\n// Main Launcher source, excluding the build config\nfilegroup {\n    name: \"launcher-src\",\n    srcs: [\n        \"src/**/*.java\",\n        \"src/**/*.kt\",\n    ],\n}\n\n// Source code for quickstep build, on top of launcher-src\nfilegroup {\n    name: \"launcher-quickstep-src\",\n    srcs: [\n        \"quickstep/src/**/*.java\",\n        \"quickstep/src/**/*.kt\",\n    ],\n}\n\n// Alternate source when quickstep is not included\nfilegroup {\n    name: \"launcher-src_no_quickstep\",\n    srcs: [\n        \"src_no_quickstep/**/*.java\",\n        \"src_no_quickstep/**/*.kt\",\n    ],\n}\n\n// Default build config for Launcher3\nfilegroup {\n    name: \"launcher-build-config\",\n    srcs: [\n        \"src_build_config/**/*.java\",\n    ],\n}\n\n// Proguard files for Launcher3\nfilegroup {\n    name: \"launcher-proguard-rules\",\n    srcs: [\"proguard.flags\"],\n}\n\nandroid_library {\n    name: \"launcher-aosp-tapl\",\n    libs: [\n        \"framework-statsd\",\n    ],\n    static_libs: [\n        \"androidx.annotation_annotation\",\n        \"androidx.test.runner\",\n        \"androidx.test.rules\",\n        \"androidx.test.uiautomator_uiautomator\",\n        \"androidx.preference_preference\",\n        \"SystemUISharedLib\",\n        \"//frameworks/libs/systemui:animationlib\",\n        \"launcher-testing-shared\",\n    ],\n    srcs: [\n        \"tests/tapl/**/*.java\",\n        \"tests/tapl/**/*.kt\",\n    ],\n    resource_dirs: [],\n    manifest: \"tests/tapl/AndroidManifest.xml\",\n    platform_apis: true,\n}\n\njava_library_static {\n    name: \"launcher_log_protos_lite\",\n    srcs: [\n        \"protos/*.proto\",\n        \"protos_overrides/*.proto\",\n    ],\n    sdk_version: \"current\",\n    proto: {\n        type: \"lite\",\n        local_include_dirs: [\n            \"protos\",\n            \"protos_overrides\",\n        ],\n    },\n    static_libs: [\"libprotobuf-java-lite\"],\n}\n\njava_library_static {\n    name: \"launcher_quickstep_log_protos_lite\",\n    srcs: [\n        \"quickstep/protos_overrides/*.proto\",\n    ],\n    sdk_version: \"current\",\n    proto: {\n        type: \"lite\",\n        local_include_dirs: [\n            \"quickstep/protos_overrides\",\n        ],\n    },\n    static_libs: [\n        \"libprotobuf-java-lite\",\n        \"launcher_log_protos_lite\",\n    ],\n}\n\njava_library {\n    name: \"LauncherPluginLib\",\n\n    static_libs: [\"PluginCoreLib\"],\n\n    srcs: [\"src_plugins/**/*.java\"],\n\n    sdk_version: \"current\",\n    min_sdk_version: min_launcher3_sdk_version,\n}\n\n// Library with all the dependencies for building Launcher3\nandroid_library {\n    name: \"Launcher3ResLib\",\n    srcs: [],\n    resource_dirs: [\"res\"],\n    static_libs: [\n        \"LauncherPluginLib\",\n        \"launcher_quickstep_log_protos_lite\",\n        \"android.os.flags-aconfig-java\",\n        \"androidx-constraintlayout_constraintlayout\",\n        \"androidx.recyclerview_recyclerview\",\n        \"androidx.dynamicanimation_dynamicanimation\",\n        \"androidx.fragment_fragment\",\n        \"androidx.preference_preference\",\n        \"androidx.slice_slice-view\",\n        \"androidx.cardview_cardview\",\n        \"androidx.window_window\",\n        \"com.google.android.material_material\",\n        \"//frameworks/libs/systemui:iconloader_base\",\n        \"//frameworks/libs/systemui:view_capture\",\n        \"//frameworks/libs/systemui:animationlib\",\n        \"SystemUI-statsd\",\n        \"launcher-testing-shared\",\n        \"androidx.lifecycle_lifecycle-common-java8\",\n        \"androidx.lifecycle_lifecycle-extensions\",\n        \"androidx.lifecycle_lifecycle-runtime-ktx\",\n        \"kotlinx_coroutines_android\",\n        \"kotlinx_coroutines\",\n        \"com_android_launcher3_flags_lib\",\n        \"com_android_wm_shell_flags_lib\",\n        \"android.appwidget.flags-aconfig-java\",\n        \"com.android.window.flags.window-aconfig-java\",\n    ],\n    manifest: \"AndroidManifest-common.xml\",\n    sdk_version: \"current\",\n    min_sdk_version: min_launcher3_sdk_version,\n    lint: {\n        baseline_filename: \"lint-baseline.xml\",\n    },\n}\n\n//\n// Build rule for Launcher3 app.\n//\nandroid_app {\n    name: \"Launcher3\",\n\n    static_libs: [\n        \"Launcher3ResLib\",\n    ],\n    srcs: [\n        \":launcher-src\",\n        \":launcher-src_no_quickstep\",\n        \":launcher-build-config\",\n    ],\n\n    optimize: {\n        proguard_flags_files: [\"proguard.pro\"],\n        // Proguard is disable for testing. Derivarive prjects to keep proguard enabled\n        enabled: false,\n    },\n\n    sdk_version: \"current\",\n    min_sdk_version: min_launcher3_sdk_version,\n    target_sdk_version: \"current\",\n    privileged: true,\n    system_ext_specific: true,\n\n    overrides: [\n        \"Home\",\n        \"Launcher2\",\n    ],\n    required: [\"privapp_whitelist_com.android.launcher3\"],\n\n    jacoco: {\n        include_filter: [\"com.android.launcher3.**\"],\n    },\n    additional_manifests: [\n        \"AndroidManifest-common.xml\",\n    ],\n    lint: {\n        baseline_filename: \"lint-baseline.xml\",\n    },\n}\n\n// Library with all the dependencies for building quickstep\nandroid_library {\n    name: \"QuickstepResLib\",\n    srcs: [],\n    resource_dirs: [\n        \"quickstep/res\",\n    ],\n    libs: [\n        \"framework-statsd\",\n    ],\n    static_libs: [\n        \"Launcher3ResLib\",\n        \"lottie\",\n        \"SystemUISharedLib\",\n        \"SettingsLibSettingsTheme\",\n    ],\n    manifest: \"quickstep/AndroidManifest.xml\",\n    min_sdk_version: \"current\",\n}\n\n// Library with all the source code and dependencies for building Launcher Go\nandroid_library {\n    name: \"Launcher3GoLib\",\n    srcs: [\n        \":launcher-src\",\n        \":launcher-quickstep-src\",\n        \"go/quickstep/src/**/*.java\",\n        \"go/quickstep/src/**/*.kt\",\n    ],\n    resource_dirs: [\n        \"go/quickstep/res\",\n    ],\n    // Note the ordering here is important when it comes to resource\n    // overriding. We want the most specific resource overrides defined\n    // in QuickstepResLib to take precendece, so it should be the final\n    // dependency. See b/205278434 for how this can go wrong.\n    static_libs: [\n        \"QuickstepResLib\",\n        \"androidx.room_room-runtime\",\n    ],\n    plugins: [\"androidx.room_room-compiler-plugin\"],\n    manifest: \"quickstep/AndroidManifest.xml\",\n    additional_manifests: [\n        \"go/AndroidManifest.xml\",\n        \"AndroidManifest-common.xml\",\n    ],\n    min_sdk_version: \"current\",\n    // TODO(b/319712088): re-enable use_resource_processor\n    use_resource_processor: false,\n}\n\n// Library with all the source code and dependencies for building Quickstep\nandroid_library {\n    name: \"Launcher3QuickStepLib\",\n    srcs: [\n        \":launcher-src\",\n        \":launcher-quickstep-src\",\n        \":launcher-build-config\",\n    ],\n    resource_dirs: [],\n    libs: [\n        \"framework-statsd\",\n    ],\n    // Note the ordering here is important when it comes to resource\n    // overriding. We want the most specific resource overrides defined\n    // in QuickstepResLib to take precendece, so it should be the final\n    // dependency. See b/208647810 for how this can go wrong.\n    static_libs: [\n        \"SystemUI-statsd\",\n        \"QuickstepResLib\",\n    ],\n    manifest: \"quickstep/AndroidManifest.xml\",\n    platform_apis: true,\n    min_sdk_version: \"current\",\n    // TODO(b/319712088): re-enable use_resource_processor\n    use_resource_processor: false,\n}\n\n// Build rule for Quickstep app.\nandroid_app {\n    name: \"Launcher3QuickStep\",\n\n    static_libs: [\"Launcher3QuickStepLib\"],\n    optimize: {\n        enabled: false,\n    },\n\n    platform_apis: true,\n    min_sdk_version: \"current\",\n    target_sdk_version: \"current\",\n\n    privileged: true,\n    system_ext_specific: true,\n    overrides: [\n        \"Home\",\n        \"Launcher2\",\n        \"Launcher3\",\n    ],\n    required: [\"privapp_whitelist_com.android.launcher3\"],\n\n    resource_dirs: [\"quickstep/res\"],\n\n    additional_manifests: [\n        \"quickstep/AndroidManifest-launcher.xml\",\n        \"AndroidManifest-common.xml\",\n    ],\n\n    manifest: \"quickstep/AndroidManifest.xml\",\n    jacoco: {\n        include_filter: [\"com.android.launcher3.*\"],\n    },\n\n}\n\n\n// Build rule for Launcher3 Go app with quickstep for Android Go devices.\n// Note that the following two rules are exactly same, and should\n// eventually be merged into a single target\nandroid_app {\n    name: \"Launcher3Go\",\n\n    static_libs: [\"Launcher3GoLib\"],\n    resource_dirs: [],\n\n    platform_apis: true,\n    min_sdk_version: \"current\",\n    target_sdk_version: \"current\",\n\n    optimize: {\n        proguard_flags_files: [\"proguard.flags\"],\n        enabled: true,\n    },\n\n    privileged: true,\n    system_ext_specific: true,\n    overrides: [\n        \"Home\",\n        \"Launcher2\",\n        \"Launcher3\",\n        \"Launcher3QuickStep\",\n    ],\n    required: [\"privapp_whitelist_com.android.launcher3\"],\n\n    additional_manifests: [\n        \"go/AndroidManifest.xml\",\n        \"go/AndroidManifest-launcher.xml\",\n        \"AndroidManifest-common.xml\",\n    ],\n\n    manifest: \"quickstep/AndroidManifest.xml\",\n    jacoco: {\n        include_filter: [\"com.android.launcher3.*\"],\n    },\n}\nandroid_app {\n    name: \"Launcher3QuickStepGo\",\n\n    static_libs: [\"Launcher3GoLib\"],\n    resource_dirs: [],\n\n    platform_apis: true,\n    min_sdk_version: \"current\",\n    target_sdk_version: \"current\",\n\n    optimize: {\n        proguard_flags_files: [\"proguard.flags\"],\n        enabled: true,\n    },\n\n    privileged: true,\n    system_ext_specific: true,\n    overrides: [\n        \"Home\",\n        \"Launcher2\",\n        \"Launcher3\",\n        \"Launcher3QuickStep\",\n    ],\n    required: [\"privapp_whitelist_com.android.launcher3\"],\n\n    additional_manifests: [\n        \"go/AndroidManifest.xml\",\n        \"go/AndroidManifest-launcher.xml\",\n        \"AndroidManifest-common.xml\",\n    ],\n\n    manifest: \"quickstep/AndroidManifest.xml\",\n    jacoco: {\n        include_filter: [\"com.android.launcher3.*\"],\n    },\n}\n"
        },
        {
          "name": "AndroidManifest-common.xml",
          "type": "blob",
          "size": 8.71875,
          "content": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<!--\n/*\n**\n** Copyright 2016, The Android Open Source Project\n**\n** Licensed under the Apache License, Version 2.0 (the \"License\");\n** you may not use this file except in compliance with the License.\n** You may obtain a copy of the License at\n**\n**     http://www.apache.org/licenses/LICENSE-2.0\n**\n** Unless required by applicable law or agreed to in writing, software\n** distributed under the License is distributed on an \"AS IS\" BASIS,\n** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n** See the License for the specific language governing permissions and\n** limitations under the License.\n**\n** Modifications copyright 2021, Lawnchair\n*/\n-->\n<manifest\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:tools=\"http://schemas.android.com/tools\">\n\n    <!--\n    The manifest defines the common entries that should be present in any derivative of Launcher3.\n    The components should generally not require any changes.\n\n    Rest of the components are defined in AndroidManifest.xml which is merged with this manifest\n    at compile time. Note that the components defined in AndroidManifest.xml are also required,\n    with some minor changed based on the derivative app.\n    -->\n\n    <uses-permission android:name=\"android.permission.CALL_PHONE\" />\n    <uses-permission android:name=\"android.permission.SET_WALLPAPER\" />\n    <uses-permission android:name=\"android.permission.SET_WALLPAPER_HINTS\" />\n    <uses-permission android:name=\"android.permission.BIND_APPWIDGET\" />\n    <uses-permission android:name=\"android.permission.READ_EXTERNAL_STORAGE\" />\n    <uses-permission android:name=\"android.permission.RECEIVE_BOOT_COMPLETED\" />\n    <uses-permission android:name=\"android.permission.REQUEST_DELETE_PACKAGES\" />\n    <uses-permission android:name=\"android.permission.READ_DEVICE_CONFIG\" />\n    <uses-permission android:name=\"android.permission.QUERY_ALL_PACKAGES\" />\n    <uses-permission android:name=\"android.permission.EXPAND_STATUS_BAR\" />\n    <uses-permission android:name=\"android.permission.ACCESS_RESTRICTED_SETTINGS\" />\n    \n    <!-- for rotating surface by arbitrary degree -->\n    <uses-permission android:name=\"android.permission.VIBRATE\"/>\n    <uses-permission android:name=\"android.permission.ROTATE_SURFACE_FLINGER\" />\n    <uses-permission android:name=\"android.permission.WAKEUP_SURFACE_FLINGER\" />\n    <uses-permission android:name=\"android.permission.POST_NOTIFICATIONS\" />\n\n    <!--\n    Permissions required for read/write access to the workspace data. These permission name\n    should not conflict with that defined in other apps, as such an app should embed its package\n    name in the permissions. eq com.mypackage.permission.READ_SETTINGS\n    -->\n    <permission\n        android:name=\"${applicationId}.permission.READ_SETTINGS\"\n        android:protectionLevel=\"signatureOrSystem\"\n        android:label=\"@string/permlab_read_settings\"\n        android:description=\"@string/permdesc_read_settings\"/>\n    <permission\n        android:name=\"${applicationId}.permission.WRITE_SETTINGS\"\n        android:protectionLevel=\"signatureOrSystem\"\n        android:label=\"@string/permlab_write_settings\"\n        android:description=\"@string/permdesc_write_settings\"/>\n\n    <uses-permission android:name=\"${applicationId}.permission.READ_SETTINGS\" />\n    <uses-permission android:name=\"${applicationId}.permission.WRITE_SETTINGS\" />\n\n    <application\n        android:backupAgent=\"com.android.launcher3.LauncherBackupAgent\"\n        android:name=\"app.lawnchair.LawnchairApp\"\n        android:fullBackupOnly=\"true\"\n        android:backupInForeground=\"true\"\n        android:fullBackupContent=\"@xml/backupscheme\"\n        android:hardwareAccelerated=\"true\"\n        android:icon=\"@drawable/ic_launcher_home\"\n        android:label=\"@string/derived_app_name\"\n        android:largeHeap=\"@bool/config_largeHeap\"\n        android:restoreAnyVersion=\"true\"\n        android:supportsRtl=\"true\"\n        tools:replace=\"android:label\">\n\n        <!-- Intent received when a session is committed -->\n        <receiver\n            android:name=\"com.android.launcher3.SessionCommitReceiver\"\n            android:exported=\"true\">\n            <intent-filter>\n                <action android:name=\"android.content.pm.action.SESSION_COMMITTED\" />\n            </intent-filter>\n        </receiver>\n\n        <!-- Intent received used to initialize a restored widget -->\n        <receiver android:name=\"com.android.launcher3.AppWidgetsRestoredReceiver\"\n            android:exported=\"true\">\n            <intent-filter>\n                <action android:name=\"android.appwidget.action.APPWIDGET_HOST_RESTORED\"/>\n            </intent-filter>\n        </receiver>\n\n        <service\n            android:name=\"com.android.launcher3.notification.NotificationListener\"\n            android:label=\"@string/notification_dots_service_title\"\n            android:exported=\"true\"\n            android:permission=\"android.permission.BIND_NOTIFICATION_LISTENER_SERVICE\">\n            <intent-filter>\n                <action android:name=\"android.service.notification.NotificationListenerService\" />\n            </intent-filter>\n        </service>\n\n        <meta-data android:name=\"android.nfc.disable_beam_default\"\n                       android:value=\"true\" />\n\n        <activity android:name=\"com.android.launcher3.dragndrop.AddItemActivity\"\n            android:theme=\"@style/AddItemActivityTheme\"\n            android:excludeFromRecents=\"true\"\n            android:autoRemoveFromRecents=\"true\"\n            android:exported=\"true\">\n            <intent-filter>\n                <action android:name=\"android.content.pm.action.CONFIRM_PIN_SHORTCUT\" />\n                <action android:name=\"android.content.pm.action.CONFIRM_PIN_APPWIDGET\" />\n            </intent-filter>\n        </activity>\n\n        <!--\n        The settings provider contains Home's data, like the workspace favorites. The permissions\n        should be changed to what is defined above. The authorities should also be changed to\n        represent the package name.\n        -->\n        <provider\n            android:name=\"com.android.launcher3.LauncherProvider\"\n            android:authorities=\"${applicationId}.settings\"\n            android:exported=\"true\"\n            android:writePermission=\"${applicationId}.permission.WRITE_SETTINGS\"\n            android:readPermission=\"${applicationId}.permission.READ_SETTINGS\" />\n\n        <!--\n        The content provider for exposing various launcher grid options.\n        TODO: Add proper permissions\n        -->\n        <provider\n            android:name=\"com.android.launcher3.graphics.GridCustomizationsProvider\"\n            android:authorities=\"${applicationId}.grid_control\"\n            android:exported=\"true\" />\n\n        <!--\n        The settings activity. To extend point settings_fragment_name to appropriate fragment class\n        -->\n        <activity\n            android:name=\"com.android.launcher3.settings.SettingsActivity\"\n            android:label=\"@string/settings_button_text\"\n            android:theme=\"@style/HomeSettings.Theme\"\n            android:exported=\"true\"\n            android:autoRemoveFromRecents=\"true\">\n            <intent-filter android:priority=\"-1\">\n                <action android:name=\"android.intent.action.APPLICATION_PREFERENCES\" />\n                <category android:name=\"android.intent.category.DEFAULT\" />\n            </intent-filter>\n        </activity>\n\n        <provider\n            android:name=\"com.android.launcher3.testing.TestInformationProvider\"\n            android:authorities=\"${applicationId}.TestInfo\"\n            android:readPermission=\"android.permission.WRITE_SECURE_SETTINGS\"\n            android:writePermission=\"android.permission.WRITE_SECURE_SETTINGS\"\n            android:exported=\"true\"\n            android:enabled=\"false\" />\n\n        <!--\n        Launcher activity for secondary display\n        -->\n        <activity\n            android:name=\"com.android.launcher3.secondarydisplay.SecondaryDisplayLauncher\"\n            android:theme=\"@style/AppTheme\"\n            android:launchMode=\"singleTop\"\n            android:exported=\"true\"\n            android:enabled=\"true\">\n            <intent-filter>\n                <action android:name=\"android.intent.action.MAIN\" />\n                <category android:name=\"android.intent.category.SECONDARY_HOME\" />\n                <category android:name=\"android.intent.category.DEFAULT\" />\n            </intent-filter>\n        </activity>\n\n        <!-- Disable eager initialization of Jetpack libraries. See bug 197780098. -->\n        <provider\n            android:name=\"androidx.startup.InitializationProvider\"\n            android:authorities=\"${applicationId}.androidx-startup\"\n            tools:node=\"remove\" />\n\n        <property\n            android:name=\"android.window.PROPERTY_ACTIVITY_EMBEDDING_SPLITS_ENABLED\"\n            android:value=\"true\" />\n    </application>\n</manifest>\n"
        },
        {
          "name": "AndroidManifest.xml",
          "type": "blob",
          "size": 3.2666015625,
          "content": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<!--\n/*\n**\n** Copyright 2008, The Android Open Source Project\n**\n** Licensed under the Apache License, Version 2.0 (the \"License\");\n** you may not use this file except in compliance with the License.\n** You may obtain a copy of the License at\n**\n**     http://www.apache.org/licenses/LICENSE-2.0\n**\n** Unless required by applicable law or agreed to in writing, software\n** distributed under the License is distributed on an \"AS IS\" BASIS,\n** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n** See the License for the specific language governing permissions and\n** limitations under the License.\n**\n** Modifications copyright 2021, Lawnchair\n*/\n-->\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:tools=\"http://schemas.android.com/tools\">\n    <uses-sdk android:targetSdkVersion=\"30\" android:minSdkVersion=\"26\"\n        tools:overrideLibrary=\"com.kieronquinn.app.smartspacer.sdk.client\"/>\n    <!--\n    Manifest entries specific to Launcher3. This is merged with AndroidManifest-common.xml.\n    Refer comments around specific entries on how to extend individual components.\n    -->\n\n    <application\n        android:name=\"app.lawnchair.LawnchairApp\"\n        android:backupAgent=\"com.android.launcher3.LauncherBackupAgent\"\n        android:fullBackupOnly=\"true\"\n        android:fullBackupContent=\"@xml/backupscheme\"\n        android:hardwareAccelerated=\"true\"\n        android:debuggable=\"true\"\n        android:icon=\"@drawable/ic_launcher_home\"\n        android:label=\"@string/derived_app_name\"\n        android:theme=\"@style/AppTheme\"\n        android:largeHeap=\"@bool/config_largeHeap\"\n        android:restoreAnyVersion=\"true\"\n        android:supportsRtl=\"true\" >\n\n        <!--\n        Main launcher activity. When extending only change the name, and keep all the\n        attributes and intent filters the same\n        -->\n        <activity\n            android:name=\"app.lawnchair.LawnchairLauncher\"\n            android:launchMode=\"singleTask\"\n            android:clearTaskOnLaunch=\"true\"\n            android:stateNotNeeded=\"true\"\n            android:windowSoftInputMode=\"adjustPan\"\n            android:screenOrientation=\"unspecified\"\n            android:configChanges=\"keyboard|keyboardHidden|mcc|mnc|navigation|orientation|screenSize|screenLayout|smallestScreenSize\"\n            android:resizeableActivity=\"true\"\n            android:resumeWhilePausing=\"true\"\n            android:taskAffinity=\"\"\n            android:exported=\"true\"\n            android:enabled=\"true\">\n            <intent-filter>\n                <action android:name=\"android.intent.action.MAIN\" />\n                <category android:name=\"android.intent.category.LAUNCHER\" />\n                <action android:name=\"android.intent.action.SHOW_WORK_APPS\" />\n                <category android:name=\"android.intent.category.HOME\" />\n                <category android:name=\"android.intent.category.DEFAULT\" />\n                <category android:name=\"android.intent.category.MONKEY\"/>\n                <category android:name=\"android.intent.category.LAUNCHER_APP\" />\n            </intent-filter>\n            <meta-data\n                android:name=\"com.android.launcher3.grid.control\"\n                android:value=\"${packageName}.grid_control\" />\n        </activity>\n\n    </application>\n</manifest>\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 5.2177734375,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nWe as members, contributors, and leaders pledge to make participation in our\ncommunity a harassment-free experience for everyone, regardless of age, body\nsize, visible or invisible disability, ethnicity, sex characteristics, gender\nidentity and expression, level of experience, education, socio-economic status,\nnationality, personal appearance, race, religion, or sexual identity\nand orientation.\n\nWe pledge to act and interact in ways that contribute to an open, welcoming,\ndiverse, inclusive, and healthy community.\n\n## Our Standards\n\nExamples of behavior that contributes to a positive environment for our\ncommunity include:\n\n* Demonstrating empathy and kindness toward other people.\n* Being respectful of differing opinions, viewpoints, and experiences.\n* Giving and gracefully accepting constructive feedback.\n* Accepting responsibility and apologizing to those affected by our mistakes,\n  and learning from the experience.\n* Focusing on what is best not just for us as individuals, but for the\n  overall community.\n\nExamples of unacceptable behavior include:\n\n* The use of sexualized language or imagery, and sexual attention or\n  advances of any kind.\n* Trolling, insulting or derogatory comments, and personal or political attacks\n* Public or private harassment.\n* Publishing others' private information, such as a physical or email\n  address, without their explicit permission.\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting.\n\n## Enforcement Responsibilities\n\nCommunity leaders are responsible for clarifying and enforcing our standards of\nacceptable behavior and will take appropriate and fair corrective action in\nresponse to any behavior that they deem inappropriate, threatening, offensive,\nor harmful.\n\nCommunity leaders have the right and responsibility to remove, edit, or reject\ncomments, commits, code, wiki edits, issues, and other contributions that are\nnot aligned to this Code of Conduct, and will communicate reasons for moderation\ndecisions when appropriate.\n\n## Scope\n\nThis Code of Conduct applies within all community spaces, and also applies when\nan individual is officially representing the community in public spaces.\nExamples of representing our community include using an official e-mail address,\nposting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported to the community leaders responsible for enforcement at\n[@lawnchairapp](https://x.com/lawnchairapp), [Telegram](https://t.co/qYev4OkvpT), or [Discord](https://discord.com/invite/3x8qNWxgGZ).\nAll complaints will be reviewed and investigated promptly and fairly.\n\nAll community leaders are obligated to respect the privacy and security of the\nreporter of any incident.\n\n## Enforcement Guidelines\n\nCommunity leaders will follow these Community Impact Guidelines in determining\nthe consequences for any action they deem in violation of this Code of Conduct:\n\n### 1. Correction\n\n**Community Impact**: Use of inappropriate language or other behavior deemed\nunprofessional or unwelcome in the community.\n\n**Consequence**: A private, written warning from community leaders, providing\nclarity around the nature of the violation and an explanation of why the\nbehavior was inappropriate. A public apology may be requested.\n\n### 2. Warning\n\n**Community Impact**: A violation through a single incident or series\nof actions.\n\n**Consequence**: A warning with consequences for continued behavior. No\ninteraction with the people involved, including unsolicited interaction with\nthose enforcing the Code of Conduct, for a specified period of time. This\nincludes avoiding interactions in community spaces as well as external channels\nlike social media. Violating these terms may lead to a temporary or\npermanent ban.\n\n### 3. Temporary Ban\n\n**Community Impact**: A serious violation of community standards, including\nsustained inappropriate behavior.\n\n**Consequence**: A temporary ban from any sort of interaction or public\ncommunication with the community for a specified period of time. No public or\nprivate interaction with the people involved, including unsolicited interaction\nwith those enforcing the Code of Conduct, is allowed during this period.\nViolating these terms may lead to a permanent ban.\n\n### 4. Permanent Ban\n\n**Community Impact**: Demonstrating a pattern of violation of community\nstandards, including sustained inappropriate behavior, harassment of an\nindividual, or aggression toward or disparagement of classes of individuals.\n\n**Consequence**: A permanent ban from any sort of public interaction within\nthe community.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage],\nversion 2.0, available at\nhttps://www.contributor-covenant.org/version/2/0/code_of_conduct.html.\n\nCommunity Impact Guidelines were inspired by [Mozilla's code of conduct\nenforcement ladder](https://github.com/mozilla/diversity).\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see the FAQ at\nhttps://www.contributor-covenant.org/faq. Translations are available at\nhttps://www.contributor-covenant.org/translations.\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 8.556640625,
          "content": "# Lawnchair Contributing Guidelines\n\n<picture>\n    <!-- Avoid image being clickable with slight workaround --->\n    <source media=\"(prefers-color-scheme: dark)\" srcset=\"docs/assets/lawnchair-round.webp\" width=\"100\">\n    <img alt=\"\" src=\"docs/assets/lawnchair-round.webp\" width=\"100\">\n</picture>\n\nWelcome to the **Lawnchair** Project, we appreciate your interest in contributing. \nFeel free to reach out to us on [Telegram](https://t.me/lccommunity) or [Discord](https://discord.com/invite/3x8qNWxgGZ) for any further questions.\n\n### 💫 Bug reports & feature requests\n\n> [!TIP]\n> Using Lawnchair [Nightly](https://github.com/LawnchairLauncher/lawnchair/releases/tag/nightly) is recommended for bug reports and feature requests \n> as it contains the latest changes from Lawnchair.\n\nFor [bug reports](https://github.com/LawnchairLauncher/lawnchair/issues/new?assignees=&labels=bug&projects=&template=bug_report.yaml&title=%5BBUG%5D+), describe the bug in detail to the best of your ability\nwith steps on how to reproduce it. If applicable, attach log files.\n\nFor [feature requests](https://github.com/LawnchairLauncher/lawnchair/issues/new?assignees=&labels=feature%2Cenhancement&projects=&template=feature_request.yaml&title=%5BFEATURE%5D+), describe the feature you'd like to see added to Lawnchair.\nIf applicable, attach log files.\n\nMake sure to be civil during the discussion of your contribution as outlined by the [Code of Conduct](CODE_OF_CONDUCT.md).\n\n### 🌐 Translation\n\nFor translation, visit [Lawnchair on Crowdin](https://lawnchair.crowdin.com) and follow these tips:\n\n-   When using quotation marks, insert the symbols specific to the target language, as listed in this [summary table](https://en.wikipedia.org/wiki/Quotation_mark#Summary_table);\n-   Some English terminology may have not have commonly-used equivalents in other languages. In such cases, use short descriptive phrases—for example, the equivalent of _bottom row_ for _dock_;\n-   Some languages (e.g. French) have variations of words depending on if it's masculine or feminine (gender-specific); we recommend opting for gender-neutral words instead.\n\n### 🧑‍💻 Code\n\n> [!TIP]\n> For Lawnchair 9 to 14, see the branches with the `9-` to `14-` prefixes respectively.\n\nFor code, it's highly recommended that you use [Android Studio](https://developer.android.com/studio),\nknow [Java](https://www.java.com) or preferably [Kotlin](https://kotlinlang.org/), and [Git](https://git-scm.com/).\n\n> [!IMPORTANT]\n> You can use Git to clone the repository; ensure that you include the project’s submodules using the `recursive` flag:\n>\n> ```\n> git clone --recursive https://github.com/LawnchairLauncher/lawnchair.git\n> ```\n\nTo build **Lawnchair**, select the `lawnWithQuickstepGithubDebug` build type.\nShould you face errors relating to the `iconloaderlib` and `searchuilib` projects,\nrun `git submodule update --init --recursive`.\n\nHere are some contribution tips to help you get started:\n\n-   Always make sure that you're up-to-date with **Lawnchair** by setting your base branch to `15-dev`.\n-   Make sure your code is logical and well-formatted. If using Kotlin, see [“Coding conventions” in the Kotlin documentation](https://kotlinlang.org/docs/coding-conventions.html);\n-   [The `lawnchair` package](https://github.com/LawnchairLauncher/lawnchair/tree/15-dev/lawnchair) houses Lawnchair’s own code, whereas [the `src` package](https://github.com/LawnchairLauncher/lawnchair/tree/15-dev/src) includes a clone of the Launcher3 codebase with modifications. Generally, place new files in the former, keeping changes to the latter to a minimum.\n\n#### Additional documentation\n\n-   [The Lawnchair Wiki](https://github.com/LawnchairLauncher/lawnchair/wiki)\n-   [Lawnchair Visual Guidelines](/docs/assets/README.md)\n-   [Lawnchair Quickstep Compat Library](compatLib/README.md)\n-   [Lawnchair Preferences Components](lawnchair/src/app/lawnchair/ui/preferences/components/README.md)\n-   [SystemUI Module](systemUI/README.md)\n    -   [ViewCapture](systemUI/viewcapture/README.md)\n    -   [Common](systemUI/common/README.md)\n-   [Prebuilt Library](prebuilts/libs/README.md)\n\n#### Versioning scheme\n\nAs of [#4361](https://github.com/LawnchairLauncher/lawnchair/pull/4361),\nLawnchair’s version code is composed of four parts, separated by underscores:\n\n<p align=\"center\">\n    <picture>\n        <source media=\"(prefers-color-scheme: dark)\" srcset=\"docs/assets/version-dark.svg\" width=\"98%\">\n        <img alt=\"\" src=\"docs/assets/version-light.svg\" width=\"98%\">\n        <!-- Direct the accessibility reader to read the point below --->\n    </picture>\n</p>\n\n1. Android major version\n2. Android minor version\n3. Lawnchair development status\n4. Lawnchair development version\n\n##### Android major & minor versions\n\nThese represent the Android version in which Lawnchair is based on.\nThey make up the first two parts of the version code:\n\n-   Major version: Indicates the main Android version.\n-   Minor version: Reflects any point release or update within the major version.\n\nExample: Android 11 will be `11_00_XX_XX` while Android 12.1 will be `12_01_XX_XX`.\n\n##### Development status & version\n\nThe third and fourth parts of the version code refer to Lawnchair's development stage\nand the specific version within that stage:\n\n-   Development status: Shows the current development stage of the Lawnchair build (e.g., Alpha, Beta).\n-   Development version: Specifies the incremental version within the same development stage.\n\nThe table below shows release phase used by Lawnchair:\n\n| Status            | Stage |\n| ----------------- | ----- |\n| Development       | 00    |\n| Alpha             | 01    |\n| Beta              | 02    |\n| Release Candidate | 03    |\n| Release           | 04    |\n\nExample: Alpha 5 will be `XX_XX_01_05` and Beta 3 will be `XX_XX_02_03`.\n\n#### String naming\n\nStrings `names` in `strings.xml` should follow this format:\n\n| Type                                             | Format            | Example usage              | Actual string        | Other information                                                                                                   |\n| ------------------------------------------------ | ----------------- | -------------------------- | -------------------- | ------------------------------------------------------------------------------------------------------------------- |\n| Generic word                                     | $1                | `disagree_or_agree`        | Disagree or agree    | Should only be used if it doesn't fit the below categories                                                          |\n| Action                                           | $1_action         | `apply_action`             | Apply                | Any generic action verb can fit here                                                                                |\n| Preference or popup label<br/>Preference headers | $1_label          | `folders_label`            | Folders              |                                                                                                                     |\n| Preference or popup description                  | $1_description    | `folders_description`      | Row and column count |                                                                                                                     |\n| Preference choice                                | $1_choice         | `off_choice`               | Off                  |                                                                                                                     |\n| Feature string                                   | (feature_name)_$1 | `colorpicker_hsb`          | HSB                  | Feature strings are strings that are confined to a specific feature. Examples include the gesture and color picker. |\n| Launcher string                                  | $1_launcher       | `device_contacts_launcher` | Contacts from device | Strings that are specific to the Launcher area                                                                      |\n\n#### Updating locally stored font listing\n\nLawnchair uses a locally stored JSON file (`google_fonts.json`) to list available fonts from Google Fonts. This file should be updated periodically or before release to include the latest fonts.\n\nTo update Lawnchair's font listing, follow these steps:\n1. Acquire a [Google Fonts Developer API key](https://developers.google.com/fonts/docs/developer_api#APIKey).\n2. Download the JSON file from `https://www.googleapis.com/webfonts/v1/webfonts?key=API_KEY`, replacing `API_KEY` with the API key from step 1.\n3. Replace the content of [`google_fonts.json`](lawnchair/assets/google_fonts.json) with the API response.\n"
        },
        {
          "name": "CleanSpec.mk",
          "type": "blob",
          "size": 3.73046875,
          "content": "# Copyright (C) 2007 The Android Open Source Project\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\n# If you don't need to do a full clean build but would like to touch\n# a file or delete some intermediate files, add a clean step to the end\n# of the list.  These steps will only be run once, if they haven't been\n# run before.\n#\n# E.g.:\n#     $(call add-clean-step, touch -c external/sqlite/sqlite3.h)\n#     $(call add-clean-step, rm -rf $(PRODUCT_OUT)/obj/STATIC_LIBRARIES/libz_intermediates)\n#\n# Always use \"touch -c\" and \"rm -f\" or \"rm -rf\" to gracefully deal with\n# files that are missing or have been moved.\n#\n# Use $(PRODUCT_OUT) to get to the \"out/target/product/blah/\" directory.\n# Use $(OUT_DIR) to refer to the \"out\" directory.\n#\n# If you need to re-do something that's already mentioned, just copy\n# the command and add it to the bottom of the list.  E.g., if a change\n# that you made last week required touching a file and a change you\n# made today requires touching the same file, just copy the old\n# touch step and add it to the end of the list.\n#\n# ************************************************\n# NEWER CLEAN STEPS MUST BE AT THE END OF THE LIST\n# ************************************************\n\n# For example:\n#$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/APPS/AndroidTests_intermediates)\n#$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/core_intermediates)\n#$(call add-clean-step, find $(OUT_DIR) -type f -name \"IGTalkSession*\" -print0 | xargs -0 rm -f)\n#$(call add-clean-step, rm -rf $(PRODUCT_OUT)/data/*)\n\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/APPS/Launcher2_intermediates)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/APPS/Launcher2_intermediates)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/APPS/Launcher2_intermediates)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/APPS/Launcher2_intermediates)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/APPS/Launcher2_intermediates)\n$(call add-clean-step, rm -rf $(PRODUCT_OUT)/system/app/Launcher2.apk)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/APPS/Launcher2_intermediates)\n$(call add-clean-step, rm -rf $(PRODUCT_OUT)/system/app/Launcher2.apk)\n$(call add-clean-step, rm -rf $(PRODUCT_OUT)/system/priv-app/Launcher3QuickStep)\n\n$(call add-clean-step, rm -rf $(PRODUCT_OUT)/product/priv-app/Launcher3)\n$(call add-clean-step, rm -rf $(PRODUCT_OUT)/product/priv-app/Launcher3Go)\n$(call add-clean-step, rm -rf $(PRODUCT_OUT)/product/priv-app/Launcher3QuickStep)\n$(call add-clean-step, rm -rf $(PRODUCT_OUT)/product/priv-app/Launcher3QuickStepGo)\n$(call add-clean-step, rm -rf $(PRODUCT_OUT)/product/priv-app/Launcher3GoIconRecents)\n$(call add-clean-step, rm -rf $(PRODUCT_OUT)/system/product/priv-app/Launcher3)\n$(call add-clean-step, rm -rf $(PRODUCT_OUT)/system/product/priv-app/Launcher3Go)\n$(call add-clean-step, rm -rf $(PRODUCT_OUT)/system/product/priv-app/Launcher3QuickStep)\n$(call add-clean-step, rm -rf $(PRODUCT_OUT)/system/product/priv-app/Launcher3QuickStepGo)\n$(call add-clean-step, rm -rf $(PRODUCT_OUT)/system/product/priv-app/Launcher3GoIconRecents)\n# ************************************************\n# NEWER CLEAN STEPS MUST BE AT THE END OF THE LIST\n# ************************************************\n"
        },
        {
          "name": "GITHUB_CHANGELOG.md",
          "type": "blob",
          "size": 2.2490234375,
          "content": "Lawnchair 14 Beta 3 is here! This release works with QuickSwitch from Android 10 to Android 14 QPR3.\n\nThis release contains numerous improvements:\n* UI improvements\n  * UI text refresh: all text is now Sentence case to match Material You guidelines (#4209)\n  * Proper tablet support: the launcher and settings UI now adjust accordingly to the larger width\n  * Color scheme improvements: Lawnchair now matches the Android 14 and Pixel Launcher colors\n  * Added support for predictive back when navigating in Settings\n  * Added support for Android 14's per-app language feature\n  * Added new fonts in font picker\n* Search improvements \n  * Improved permission handling for contacts and files search settings\n  * Improved performance of search results\n  * Added the ability to switch search algorithms\n  * Added new web search providers: Google & DuckDuckGo\n  * Added new dock search bar providers: Yandex\n  * Added additional dock search bar customizations \n  * Added an option to use dock search provider actions for app drawer\n* Recents screen improvements:\n  * Added the ability to reorganize the quick actions in Overview\n  * Added the ability to change transparency of the recents background\n* Bug fixes\n  * Fixed crashes on One UI, ColorOS, and other Android OEMs\n  * Fixed crash when accessing settings with a wallpaper preview on Android 15\n  * Fixed Smartspacer left padding not working\n  * Fixed Lawnfeed not working\n* Other repository improvments:\n  * Improved docs and README of Lawnchair (#4370)\n  * Added nightly releases (#4264); do note that these are built differently from normal builds, and can be buggy and less optimized.\n\nAlongside that, this release contains the usual performance improvements, miscellaneous bug fixes, and new bugs & translations.\n\nThanks to our new contributors: @osm0sis, @t895, @berkekbgz, @JovannMC, @Susexe, @HarmfulBreeze, @sandstranger, @hotmule, and @nivlafx\n\nWant to support Lawnchair's development? Visit [our Open Collective page](https://opencollective.com/lawnchair), or set your search engine to Startpage. Alongside that, if you're a developer and want to work on Lawnchair, we're investigating how we want to do payouts for development work and bugfixes. If you have any ideas or want to contribute, please get in contact at our discussion forums!\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 10.4765625,
          "content": "\n   Copyright (c) 2005-2008, The Android Open Source Project\n   Copyright (c) 2024, Lawnchair\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n"
        },
        {
          "name": "OWNERS",
          "type": "blob",
          "size": 1.32421875,
          "content": "# Use this reviewer by default.\n# gnl-eng@google.com (Googlers only)\n\n# People who can approve changes for submission\n#\n\nadamcohen@google.com\nhyunyoungs@google.com\ntwickham@google.com\nvadimt@google.com\nwinsonc@google.com\njonmiranda@google.com\nawickham@google.com\nagvard@google.com\n\n# Launcher workspace eng team\ncaptaincole@google.com\nsunnygoyal@google.com\ncharlander@google.com\nfbaron@google.com\nfengjial@google.com\nfransebas@google.com\npinyaoting@google.com\nandonian@google.com\nsihua@google.com\n\n# Multitasking eng team\ntracyzhou@google.com\npeanutbutter@google.com\njeremysim@google.com\natsjenk@google.com\nbrianji@google.com\n\n# Overview eng team\nalexchau@google.com\nsamcackett@google.com\nsilvajordan@google.com\nuwaisashraf@google.com\n\n# Physical Keyboard & Trackpad eng team\npatmanning@google.com\nhelencheuk@google.com\n\n# Widget Picker team\nshamalip@google.com\nzakcohen@google.com\n\nper-file FeatureFlags.java, globs = set noparent\nper-file FeatureFlags.java = sunnygoyal@google.com, winsonc@google.com, adamcohen@google.com, hyunyoungs@google.com, captaincole@google.com\n\nper-file DeviceConfigWrapper.java, globs = set noparent\nper-file DeviceConfigWrapper.java = sunnygoyal@google.com, winsonc@google.com, adamcohen@google.com, hyunyoungs@google.com\n\n# Predictive Back\nper-file LauncherBackAnimationController.java = shanh@google.com, gallmann@google.com"
        },
        {
          "name": "PREUPLOAD.cfg",
          "type": "blob",
          "size": 0.4296875,
          "content": "[Builtin Hooks]\nktfmt = true\n\n[Builtin Hooks Options]\nktfmt = --kotlinlang-style\n\n[Tool Paths]\nktfmt = ${REPO_ROOT}/external/ktfmt/ktfmt.sh\n\n[Hook Scripts]\ncheckstyle_hook = ${REPO_ROOT}/prebuilts/checkstyle/checkstyle.py --config_xml tools/checkstyle.xml --sha ${PREUPLOAD_COMMIT}\n\nflag_hook = ${REPO_ROOT}/frameworks/base/packages/SystemUI/flag_check.py --msg=${PREUPLOAD_COMMIT_MESSAGE} --files=${PREUPLOAD_FILES} --project=${REPO_PATH}\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.98828125,
          "content": "# Lawnchair 15\n\n[![Build debug APK](https://github.com/LawnchairLauncher/lawnchair/actions/workflows/ci.yml/badge.svg)](https://github.com/LawnchairLauncher/lawnchair/actions/workflows/ci.yml)\n[![Build release APK](https://github.com/LawnchairLauncher/lawnchair/actions/workflows/release_update.yml/badge.svg)](https://github.com/LawnchairLauncher/lawnchair/actions/workflows/release_update.yml)\n[![Crowdin](https://badges.crowdin.net/e/188ba69d884418987f0b7f1dd55e3a4e/localized.svg)](https://lawnchair.crowdin.com/lawnchair)\n[![OpenCollective](https://img.shields.io/opencollective/all/lawnchair?label=financial%20contributors&logo=open-collective)](https://opencollective.com/lawnchair)\n[![Telegram](https://img.shields.io/endpoint?url=https%3A%2F%2Ftg.sumanjay.workers.dev%2Flccommunity)](https://t.me/lccommunity)\n[![Discord](https://img.shields.io/discord/803299970169700402?label=server&logo=discord)](https://discord.gg/3x8qNWxgGZ)\n\n<picture>\n    <!-- Avoid image being clickable with slight workaround -->\n    <!-- ❤️ Credit to Raine for the original mockup on the Lawnchair Discord -->\n    <!-- ❤️ Credit to Lawrence Kayku for the current mockup on Unsplash \n            https://unsplash.com/photos/photography-of-green-leaves-ZVKr8wADhpc \n    -->\n    <source media=\"(prefers-color-scheme: dark)\" srcset=\"docs/assets/device-frame.png\" width=\"250px\">\n    <img alt=\"Google Pixel running Lawnchair Launcher with green wallpaper\" src=\"docs/assets/device-frame.png\" width=\"250px\">\n</picture>\n\nLawnchair is a free, open-source home app for Android. Taking Launcher3—Android’s default home app—as a starting point, it ports Pixel Launcher features and introduces rich customization options.\n\nThis branch houses the codebase of Lawnchair 15, which is currently in development and is based on Launcher3 from Android 15. For Lawnchair 9 to 14, see the branches with the `9-` to `14-` prefixes, respectively.\n\n## Features\n\n-   **Material You Theming:** Adapts to your wallpaper and system theme.\n-   **At a Glance Widget:** Displays information *at a glance* with support for [Smartspacer](https://github.com/KieronQuinn/Smartspacer) extensions.\n-   **QuickSwitch Support:** Integrates with Android Recents on Android 10 and newer. (requires root)\n-   **Global Search:** Allows quick access to apps, contacts, and web results from the home screen.\n-   **Customization Options:** Provides options to tweak icons, fonts, and colors to your liking.\n-   And more!\n\n## Download\n\n<p align=\"left\">\n  <a href=\"https://play.google.com/store/apps/details?id=app.lawnchair.play\">\n    <picture>\n      <!-- Avoid image being clickable with slight workaround -->\n      <source media=\"(prefers-color-scheme: dark)\" srcset=\"docs/assets/badge-google-play.png\" height=\"60\">\n      <img alt=\"Get it on Google Play\" src=\"docs/assets/badge-google-play.png\" height=\"60\">\n    </picture>\n  </a>\n  <a href=\"https://apt.izzysoft.de/fdroid/index/apk/app.lawnchair\">\n    <picture>\n      <source media=\"(prefers-color-scheme: dark)\" srcset=\"docs/assets/badge-izzyondroid.png\" height=\"60\">\n      <img alt=\"Get it on IzzyOnDroid\" src=\"docs/assets/badge-izzyondroid.png\" height=\"60\">\n    </picture>\n  </a>\n  <a href=\"https://apps.obtainium.imranr.dev/redirect?r=obtainium://add/https://github.com/LawnchairLauncher/lawnchair/\">\n    <picture>\n      <source media=\"(prefers-color-scheme: dark)\" srcset=\"docs/assets/badge-obtainium.png\" height=\"60\">\n      <img alt=\"Get it on Obtainium\" src=\"docs/assets/badge-obtainium.png\" height=\"60\">\n    </picture>\n  </a>\n    <a href=\"https://github.com/LawnchairLauncher/lawnchair/releases/latest\">\n    <picture>\n      <source media=\"(prefers-color-scheme: dark)\" srcset=\"docs/assets/badge-github.png\" height=\"60\">\n      <img alt=\"Get it on GitHub\" src=\"docs/assets/badge-github.png\" height=\"60\">\n    </picture>\n  </a>\n</p>\n\nLawnchair on Play Store will install as a different app from other sources. Some features may be restricted to comply with Google Play's publishing rules.\n\n### Development builds\n\nInterested in keeping yourself up-to-date with every Lawnchair development? Try our development build!\n\nThese builds offer the latest features and bug fixes at a cost of being slower and introducing new bugs. Ensure that you make backups before installing.\n\n**Download:** [Obtainium][Obtainium link] • [GitHub][GitHub link] • [nightly.link][Nightly link]\n\n### Verification\n\nVerify the integrity of your Lawnchair download using these SHA-256 hashes:\n\n| Source      | SHA-256 Hash                                                                                      |\n| ----------- | ------------------------------------------------------------------------------------------------- |\n| Anywhere    | `74:7C:36:45:B3:57:25:8B:2E:23:E8:51:E5:3C:96:74:7F:E0:AD:D0:07:E5:BA:2C:D9:7E:8C:85:57:2E:4D:C5` |\n| Google Play | `47:AC:92:63:1C:60:35:13:CC:8D:26:DD:9C:FF:E0:71:9A:8B:36:55:44:DC:CE:C2:09:58:24:EC:25:61:20:A7` |\n\n## Contributing\n\nPlease visit the [Lawnchair Contributing Guidelines](CONTRIBUTING.md) for information and tips on contributing to Lawnchair.\n\n## Quick links\n\n-   [News](https://t.me/lawnchairci)\n-   [Lawnchair on X (formerly Twitter)](https://x.com/lawnchairapp)\n-   [Website](https://lawnchair.app)\n-   [_XDA_ thread](https://xdaforums.com/t/lawnchair-customizable-pixel-launcher.3627137/)\n\nYou can view all our links in the [Lawnchair Wiki](https://github.com/LawnchairLauncher/lawnchair/wiki).\n\n<!-- Download link -->\n[Nightly link]: https://nightly.link/LawnchairLauncher/lawnchair/workflows/ci/15-dev\n[Obtainium link]: https://apps.obtainium.imranr.dev/redirect?r=obtainium://app/%7B%22id%22%3A%22app.lawnchair.debug%22%2C%22url%22%3A%22https%3A%2F%2Fgithub.com%2Flawnchairlauncher%2Flawnchair%22%2C%22author%22%3A%22Lawnchair%20Launcher%22%2C%22name%22%3A%22Lawnchair%20(Debug)%22%2C%22preferredApkIndex%22%3A0%2C%22additionalSettings%22%3A%22%7B%5C%22includePrereleases%5C%22%3Atrue%2C%5C%22fallbackToOlderReleases%5C%22%3Afalse%2C%5C%22filterReleaseTitlesByRegEx%5C%22%3A%5C%22Lawnchair%20Nightly%5C%22%2C%5C%22filterReleaseNotesByRegEx%5C%22%3A%5C%22%5C%22%2C%5C%22verifyLatestTag%5C%22%3Afalse%2C%5C%22dontSortReleasesList%5C%22%3Afalse%2C%5C%22useLatestAssetDateAsReleaseDate%5C%22%3Afalse%2C%5C%22trackOnly%5C%22%3Afalse%2C%5C%22versionExtractionRegEx%5C%22%3A%5C%22%5C%22%2C%5C%22matchGroupToUse%5C%22%3A%5C%22%5C%22%2C%5C%22versionDetection%5C%22%3Afalse%2C%5C%22releaseDateAsVersion%5C%22%3Atrue%2C%5C%22useVersionCodeAsOSVersion%5C%22%3Afalse%2C%5C%22apkFilterRegEx%5C%22%3A%5C%22%5C%22%2C%5C%22invertAPKFilter%5C%22%3Afalse%2C%5C%22autoApkFilterByArch%5C%22%3Atrue%2C%5C%22appName%5C%22%3A%5C%22%5C%22%2C%5C%22shizukuPretendToBeGooglePlay%5C%22%3Afalse%2C%5C%22exemptFromBackgroundUpdates%5C%22%3Afalse%2C%5C%22skipUpdateNotifications%5C%22%3Afalse%2C%5C%22about%5C%22%3A%5C%22Lawnchair%20is%20a%20free%2C%20open-source%20home%20app%20for%20Android.%20(NOTE%3A%20This%20is%20the%20debug%20version%20of%20Lawnchair%2C%20for%20the%20beta%2Fstable%20versions%20see%20%5C%5C%5C%22Lawnchair%5C%5C%5C%22)%5C%22%7D%22%7D\n[GitHub link]: https://github.com/LawnchairLauncher/lawnchair/releases/tag/nightly\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 1.365234375,
          "content": "# Security Policy\n\n## Supported Versions\n\n> [!WARNING]\n> [Lawnchair Legacy](https://play.google.com/store/apps/details?id=ch.deletescape.lawnchair.plah) is **unsupported**. Use the newer versions instead.\n> See [this FAQ page](https://lawnchair.app/faq#do-you-still-support-the-play-store-version) for additional information.\n\nThe latest version of Lawnchair is the only supported version.\n\n| Version        | Supported          |\n| -------------- | ------------------ |\n| Nightly build  | :white_check_mark: |\n| 15             | :white_check_mark: |\n| 14             | :x:                |\n| 13             | :x:                |\n| 12.1           | :x:                |\n| 12             | :x:                |\n| 11             | :x:                |\n| Older (Legacy) | :x:                |\n\n## Reporting Security issues\n\nWe appreciate your efforts to responsibly disclose your findings and will make every effort to\nacknowledge your contributions.\n\nTo report an issue, please file a [security advisory](https://github.com/LawnchairLauncher/lawnchair/security/advisories/new)\nor contact a developer (can be found in the about page of the app) in [Telegram](https://t.me/lccommunity) or [Discord](https://discord.com/invite/3x8qNWxgGZ) and\nstate your security vulnerability starting with the words \"**SECURITY**\"\n\nWe'll endeavor to respond quickly, and will keep you updated throughout the process.\n"
        },
        {
          "name": "TELEGRAM_CHANGELOG.txt",
          "type": "blob",
          "size": 2.6064453125,
          "content": "Lawnchair 14 Beta 3 is here! This release works with QuickSwitch from Android 10 to Android 14 QPR3.\n\nThis release contains numerous improvements:\n* UI improvements\n  * UI text refresh: all text is now Sentence case to match Material You guidelines\n  * Proper tablet support: the launcher and settings UI now adjust accordingly to the larger width\n  * Color scheme improvements: Lawnchair now matches the Android 14 and Pixel Launcher colors\n  * Added support for predictive back when navigating in Settings\n  * Added support for Android 14's per-app language feature\n  * Added new fonts in font picker\n* Search improvements \n  * Improved permission handling for contacts and files search settings\n  * Improved performance of search results\n  * Added the ability to switch search algorithms\n  * Added new web search providers: Google & DuckDuckGo\n  * Added new dock search bar providers: Yandex\n  * Added additional dock search bar customizations \n  * Added an option to use dock search provider actions for app drawer\n* Recents screen improvements:\n  * Added the ability to reorganize the quick actions in Overview\n  * Added the ability to change transparency of the recents background\n* Bug fixes\n  * Fixed crashes on One UI, ColorOS, and other Android OEMs\n  * Fixed crash when accessing settings with a wallpaper preview on Android 15\n  * Fixed Smartspacer left padding not working\n  * Fixed Lawnfeed not working\n* Other repository improvments:\n  * Improved docs and README of Lawnchair\n  * Added nightly releases; do note that these are built differently from normal builds, and can be buggy and less optimized.\n\nAlongside that, this release contains the usual performance improvements, miscellaneous bug fixes, and new bugs & translations.\n\nThanks to our new contributors: <a href=\"https://github.com/osm0sis\">@osm0sis</a>, <a href=\"https://github.com/t895\">@t895</a>, <a href=\"https://github.com/berkekbgz\">@berkekbgz</a>, <a href=\"https://github.com/JovannMC\">@JovannMC</a>, <a href=\"https://github.com/Susexe\">@Susexe</a>, <a href=\"https://github.com/HarmfulBreeze\">@HarmfulBreeze</a>, <a href=\"https://github.com/sandstranger\">@sandstranger</a>, <a href=\"https://github.com/hotmule\">@hotmule</a>, and <a href=\"https://github.com/nivlafx\">@nivlafx</a>\n\nWant to support Lawnchair's development? Visit <a href=\"https://opencollective.com/lawnchair\">our Open Collective page</a>, or set your search engine to Startpage. Alongside that, if you're a developer and want to work on Lawnchair, we're investigating how we want to do payouts for development work and bugfixes. If you have any ideas or want to contribute, please get in contact at our discussion forums!\n"
        },
        {
          "name": "aconfig",
          "type": "tree",
          "content": null
        },
        {
          "name": "androidx-lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "baseline-profile",
          "type": "tree",
          "content": null
        },
        {
          "name": "build.gradle",
          "type": "blob",
          "size": 17.26171875,
          "content": "import app.cash.licensee.LicenseeTask\nimport com.android.build.gradle.api.AndroidBasePlugin\nimport org.jetbrains.kotlin.gradle.tasks.KotlinCompile\n\nplugins {\n    id 'com.android.application' version \"8.8.0\"\n    id 'com.android.library' version \"8.8.0\" apply false\n    id 'com.android.test' version '8.8.0' apply false\n    id 'androidx.baselineprofile' version '1.3.3'\n    id 'org.jetbrains.kotlin.android' version \"2.1.0\"\n    id 'org.jetbrains.kotlin.plugin.compose' version \"2.1.0\"\n    id 'org.jetbrains.kotlin.plugin.parcelize' version \"2.1.0\"\n    id 'org.jetbrains.kotlin.plugin.serialization' version \"2.1.0\"\n    id \"com.google.devtools.ksp\" version \"2.1.0-1.0.29\"\n    id 'com.google.protobuf' version \"0.9.4\"\n    id 'app.cash.licensee' version \"1.12.0\"\n    id 'dev.rikka.tools.refine' version \"4.4.0\"\n    id 'org.gradle.android.cache-fix' version '3.0.1'\n    id 'com.diffplug.spotless' version '7.0.1'\n}\n\n\nallprojects {\n    plugins.withType(AndroidBasePlugin).configureEach {\n        apply plugin: 'org.gradle.android.cache-fix'\n\n        android {\n            compileSdk 35\n            defaultConfig {\n                minSdk 26\n                targetSdk 35\n                vectorDrawables.useSupportLibrary = true\n            }\n            lint {\n                abortOnError true\n                checkReleaseBuilds false\n            }\n        }\n        dependencies {\n            implementation 'androidx.core:core-ktx:1.15.0'\n        }\n    }\n\n    plugins.withId('com.google.protobuf') {\n        def protocVersion = '4.29.3'\n        protobuf {\n            // Configure the protoc executable\n            protoc {\n                artifact = \"com.google.protobuf:protoc:${protocVersion}\"\n            }\n            generateProtoTasks {\n                all().configureEach { task ->\n                    task.builtins {\n                        remove java\n                        java {\n                            option \"lite\"\n                        }\n                    }\n                }\n            }\n        }\n        dependencies {\n            implementation \"com.google.protobuf:protobuf-javalite:$protocVersion\"\n        }\n    }\n\n    plugins.withType(JavaBasePlugin).configureEach {\n        java {\n            toolchain.languageVersion = JavaLanguageVersion.of(17)\n        }\n    }\n\n    tasks.withType(KotlinCompile).configureEach {\n        compilerOptions.freeCompilerArgs.add(\n            \"-Xjvm-default=all\",\n        )\n    }\n\n    ext {\n        FRAMEWORK_PREBUILTS_DIR = \"$rootDir/prebuilts/libs\"\n        daggerVersion = '2.55'\n\n        addFrameworkJar = { String name ->\n            def frameworkJar = new File(FRAMEWORK_PREBUILTS_DIR, name)\n            if (!frameworkJar.exists()) {\n                throw new IllegalArgumentException(\"Framework jar path ${frameworkJar.path} doesn't exist\")\n            }\n            gradle.projectsEvaluated {\n                tasks.withType(JavaCompile).configureEach {\n                    classpath = files(frameworkJar, classpath)\n                }\n                tasks.withType(KotlinCompile).configureEach {\n                    libraries.from(files(frameworkJar))\n                }\n            }\n            dependencies {\n                compileOnly files(frameworkJar)\n            }\n        }\n\n        compileOnlyCommonJars = {\n            dependencies {\n                compileOnly fileTree(dir: FRAMEWORK_PREBUILTS_DIR, include: 'SystemUI-core.jar')\n                compileOnly fileTree(dir: FRAMEWORK_PREBUILTS_DIR, include: 'SystemUI-statsd.jar')\n                compileOnly fileTree(dir: FRAMEWORK_PREBUILTS_DIR, include: 'WindowManager-Shell-15.jar')\n\n                compileOnly projects.compatLib\n                compileOnly projects.compatLib.compatLibVQ\n                compileOnly projects.compatLib.compatLibVR\n                compileOnly projects.compatLib.compatLibVS\n                compileOnly projects.compatLib.compatLibVT\n                compileOnly projects.compatLib.compatLibVU\n                compileOnly projects.compatLib.compatLibVV\n            }\n        }\n    }\n}\n\nfinal def buildCommit = providers.exec {\n    commandLine('git', 'rev-parse', '--short=7', 'HEAD')\n}.standardOutput.asText.get().trim()\n\nfinal def ciBuild = System.getenv(\"CI\") == \"true\"\nfinal def ciRef = System.getenv(\"GITHUB_REF\") ?: \"\"\nfinal def ciRunNumber = System.getenv(\"GITHUB_RUN_NUMBER\") ?: \"\"\nfinal def isReleaseBuild = ciBuild && ciRef.contains(\"beta\")\nfinal def devReleaseName = ciBuild ? \"Dev.(#${ciRunNumber})\" : \"Dev.(${buildCommit})\"\nfinal def version = \"15\"\nfinal def releaseName = \"Beta 1\"\nfinal def versionDisplayName = \"${version}.${isReleaseBuild ? releaseName : devReleaseName}\"\nfinal def majorVersion = versionDisplayName.split(\"\\\\.\")[0]\n\nfinal def quickstepMinSdk = \"29\"\nfinal def quickstepMaxSdk = \"35\"\n\nandroid {\n    namespace \"com.android.launcher3\"\n    defaultConfig {\n        // Lawnchair Launcher 15.0 Beta 1\n        // See CONTRIBUTING.md#versioning-scheme\n        versionCode 15_00_02_01\n        versionName \"${versionDisplayName}\"\n        buildConfigField \"String\", \"VERSION_DISPLAY_NAME\", \"\\\"${versionDisplayName}\\\"\"\n        buildConfigField \"String\", \"MAJOR_VERSION\", \"\\\"${majorVersion}\\\"\"\n        buildConfigField \"String\", \"COMMIT_HASH\", \"\\\"${buildCommit}\\\"\"\n        buildConfigField \"boolean\", \"ENABLE_AUTO_INSTALLS_LAYOUT\", \"false\"\n\n        manifestPlaceholders.quickstepMinSdk = quickstepMinSdk\n        manifestPlaceholders.quickstepMaxSdk = quickstepMaxSdk\n        buildConfigField \"int\", \"QUICKSTEP_MIN_SDK\", quickstepMinSdk\n        buildConfigField \"int\", \"QUICKSTEP_MAX_SDK\", quickstepMaxSdk\n    }\n\n    applicationVariants.configureEach { variant ->\n        variant.outputs.configureEach {\n            def channel = variant.productFlavors.last().name\n            outputFileName = \"Lawnchair.${variant.versionName}.$channel.${variant.buildType.name}.apk\"\n        }\n    }\n\n    androidResources {\n        generateLocaleConfig true\n    }\n\n    buildFeatures {\n        aidl true\n        buildConfig true\n        resValues true\n    }\n\n    packagingOptions.resources.excludes += [\n        \"**/*.proto\",\n        \"**/*.bin\",\n        \"**/*.java\",\n        \"**/*.properties\",\n        \"**/*.version\",\n        \"**/*.*_module\",\n        \"com/**\",\n        \"google/**\",\n        \"kotlin/**\",\n        \"kotlinx/**\",\n        \"okhttp3/**\",\n        \"META-INF/services/**\",\n        \"META-INF/com/**\",\n        \"META-INF/licenses/**\",\n        \"META-INF/AL2.0\",\n        \"META-INF/LGPL2.1\",\n    ]\n\n    // Load all proguard configs from AOSP\n    def proguardFilesFromAosp = allprojects\n        .collect { it.file(\"proguard.flags\") }\n        .findAll { it.exists() }\n        .toArray()\n\n    def releaseSigning\n    try {\n        def keystoreProperties = new Properties()\n        keystoreProperties.load(rootProject.file(\"keystore.properties\").newInputStream())\n        releaseSigning = signingConfigs.create(\"release\") {\n            keyAlias keystoreProperties['keyAlias']\n            keyPassword keystoreProperties['keyPassword']\n            storeFile rootProject.file(keystoreProperties['storeFile'])\n            storePassword keystoreProperties['storePassword']\n        }\n    } catch (Exception ignored) {\n        releaseSigning = signingConfigs.debug\n    }\n\n    buildTypes {\n        all {\n            signingConfig releaseSigning\n\n            applicationVariants.configureEach { variant ->\n                variant.outputs.configureEach {\n                    def channel = variant.productFlavors.last().name\n                    // Override signingConfig to debug if the \"nightly\" flavor is selected\n                    if (channel.any { it == \"nightly\" }) {\n                        signingConfig = signingConfigs.debug\n                    }\n                }\n            }\n            pseudoLocalesEnabled true\n        }\n\n        debug {\n            applicationIdSuffix \".debug\"\n            resValue(\"string\", \"derived_app_name\", \"Lawnchair (Debug)\")\n        }\n\n        release {\n            resValue(\"string\", \"derived_app_name\", \"Lawnchair\")\n            minifyEnabled true\n            shrinkResources true\n            proguardFiles proguardFilesFromAosp + \"proguard.pro\"\n        }\n    }\n\n    compileOptions {\n        coreLibraryDesugaringEnabled true\n    }\n\n    dependenciesInfo {\n        includeInApk = false\n        includeInBundle = false\n    }\n\n    // See: https://developer.android.com/studio/build/build-variants#flavor-dimensions\n    flavorDimensions += [\"app\", \"recents\", \"channel\"]\n\n    productFlavors {\n        lawn {\n            dimension \"app\"\n        }\n\n        withQuickstep {\n            dimension \"recents\"\n            minSdk 26\n        }\n\n        github {\n            applicationId 'app.lawnchair'\n            dimension \"channel\"\n        }\n\n        nightly {\n            applicationId 'app.lawnchair.nightly'\n            dimension \"channel\"\n        }\n\n        play {\n            applicationId \"app.lawnchair.play\"\n            dimension \"channel\"\n            isDefault true\n        }\n\n        configureEach {\n            resValue(\"string\", \"launcher_component\", \"${applicationId}/app.lawnchair.LawnchairLauncher\")\n        }\n    }\n\n    sourceSets {\n        main {\n            res.srcDirs = ['res']\n            java.srcDirs = ['src', 'src_plugins']\n            manifest.srcFile 'AndroidManifest-common.xml'\n            proto {\n                srcDirs = ['protos/', 'quickstep/protos_overrides/']\n            }\n        }\n\n        lawn {\n            java.srcDirs = ['src_flags', 'src_shortcuts_overrides', 'lawnchair/src', 'tests/shared']\n            aidl.srcDirs = ['lawnchair/aidl']\n            res.srcDirs = ['lawnchair/res', 'platform_frameworks_libs_systemui/animationlib/res']\n            manifest.srcFile \"lawnchair/AndroidManifest.xml\"\n            assets {\n                srcDirs 'lawnchair/assets'\n            }\n            proto {\n                srcDirs = ['lawnchair/protos/']\n            }\n        }\n\n        lawnWithQuickstepGithub {\n            manifest.srcFile \"quickstep/AndroidManifest-launcher.xml\"\n        }\n\n        lawnWithQuickstepNightly {\n            manifest.srcFile \"quickstep/AndroidManifest-launcher.xml\"\n        }\n\n        lawnWithQuickstepPlay {\n            manifest.srcFile \"quickstep/AndroidManifest-launcher.xml\"\n        }\n\n        withQuickstep {\n            res.srcDirs = ['quickstep/res', 'quickstep/recents_ui_overrides/res']\n            java.srcDirs = ['quickstep/src', 'quickstep/recents_ui_overrides/src']\n            manifest.srcFile \"quickstep/AndroidManifest.xml\"\n        }\n    }\n}\n\nandroidComponents {\n    onVariants(selector().all()) { variant ->\n        def capName = variant.name.capitalize()\n        def licenseeTask = tasks.named(\"licenseeAndroid$capName\", LicenseeTask)\n        def copyArtifactsTask = tasks.register(\"copy${capName}Artifacts\", Copy) {\n            dependsOn(licenseeTask)\n            from(licenseeTask.map { it.jsonOutput })\n            // Copy artifacts.json to a new directory.\n            into(layout.buildDirectory.dir(\"generated/dependencyAssets/${variant.name}\"))\n        }\n        variant.sources.assets?.addGeneratedSourceDirectory(licenseeTask) {\n            // Avoid using LicenseeTask::outputDir as it contains extra files that we don't need.\n            objects.directoryProperty().fileProvider(copyArtifactsTask.map { it.destinationDir })\n        }\n    }\n}\n\ncomposeCompiler {\n    stabilityConfigurationFile = layout.projectDirectory.file(\"compose_compiler_config.conf\")\n    reportsDestination = layout.buildDirectory.dir(\"compose_build_reports\")\n}\n\naddFrameworkJar('framework-15.jar')\n\ndependencies {\n    implementation projects.iconloaderlib\n    implementation projects.searchuilib\n    implementation projects.animationlib\n\n    // Recents lib dependency\n    withQuickstepCompileOnly projects.hiddenApi\n    withQuickstepImplementation projects.shared\n    withQuickstepImplementation projects.anim\n    withQuickstepImplementation projects.unfold\n    withQuickstepImplementation projects.viewcapture\n    withQuickstepImplementation projects.log\n    withQuickstepCompileOnly projects.plugin\n    withQuickstepImplementation projects.plugincore\n    withQuickstepCompileOnly projects.common\n\n    // QuickSwitch Compat\n    withQuickstepImplementation projects.compatLib\n    withQuickstepImplementation projects.compatLib.compatLibVQ\n    withQuickstepImplementation projects.compatLib.compatLibVR\n    withQuickstepImplementation projects.compatLib.compatLibVS\n    withQuickstepImplementation projects.compatLib.compatLibVT\n    withQuickstepImplementation projects.compatLib.compatLibVU\n    withQuickstepImplementation projects.compatLib.compatLibVV\n    withQuickstepImplementation projects.wmshell\n    withQuickstepImplementation projects.flags\n    implementation 'androidx.dynamicanimation:dynamicanimation:1.0.0'\n\n    implementation fileTree(dir: FRAMEWORK_PREBUILTS_DIR, include: 'SystemUI-statsd-15.jar')\n    implementation fileTree(dir: FRAMEWORK_PREBUILTS_DIR, include: 'WindowManager-Shell-15.jar')\n    withQuickstepCompileOnly fileTree(dir: FRAMEWORK_PREBUILTS_DIR, include: 'framework-15.jar')\n\n    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.1.4'\n\n    implementation 'androidx.profileinstaller:profileinstaller:1.4.1'\n    baselineProfile projects.baselineProfile\n\n    implementation \"androidx.recyclerview:recyclerview:1.3.2\"\n    implementation \"androidx.preference:preference-ktx:1.2.1\"\n\n    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.10.1'\n    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.8.0'\n    implementation 'com.github.ChickenHook:RestrictionBypass:2.2'\n    implementation 'dev.rikka.tools.refine:runtime:4.4.0'\n\n    implementation platform(\"androidx.compose:compose-bom:2024.12.01\")\n    implementation \"androidx.compose.ui:ui\"\n    implementation \"androidx.compose.ui:ui-util\"\n    debugImplementation \"androidx.compose.ui:ui-tooling\"\n    implementation \"androidx.compose.ui:ui-tooling-preview\"\n    implementation \"androidx.compose.ui:ui-text-google-fonts\"\n    implementation \"androidx.compose.foundation:foundation\"\n    implementation \"androidx.compose.material:material-icons-extended\"\n    implementation \"androidx.compose.material:material\"\n    implementation \"androidx.compose.runtime:runtime-livedata\"\n    implementation 'androidx.compose.material3:material3'\n    implementation 'androidx.compose.material3:material3-window-size-class'\n    implementation \"androidx.activity:activity-compose:1.9.3\"\n    implementation \"androidx.lifecycle:lifecycle-viewmodel-compose:2.8.7\"\n    implementation \"androidx.navigation:navigation-compose:2.8.0\"\n    implementation \"androidx.constraintlayout:constraintlayout:2.2.0\"\n    implementation \"androidx.palette:palette-ktx:1.0.0\"\n    implementation \"androidx.slice:slice-core:1.1.0-alpha02\"\n    def accompanistVersion = '0.37.0'\n    implementation \"com.google.accompanist:accompanist-adaptive:$accompanistVersion\"\n    implementation \"com.google.accompanist:accompanist-drawablepainter:$accompanistVersion\"\n    implementation \"com.google.accompanist:accompanist-permissions:$accompanistVersion\"\n    implementation \"com.google.android.material:material:1.12.0\"\n    implementation \"io.github.fornewid:material-motion-compose-core:1.2.1\"\n    implementation 'dev.kdrag0n:colorkt:1.0.5'\n    implementation 'io.coil-kt:coil-compose:2.7.0'\n    implementation 'me.xdrop:fuzzywuzzy:1.4.0'\n    def optoVersion = \"1.0.18\"\n    implementation \"com.patrykmichalik.opto:domain:$optoVersion\"\n    implementation \"com.patrykmichalik.opto:core:$optoVersion\"\n    implementation \"com.patrykmichalik.opto:compose:$optoVersion\"\n    implementation \"androidx.datastore:datastore-preferences:1.1.1\"\n    def retrofitVersion = \"2.11.0\"\n    implementation \"com.squareup.retrofit2:retrofit:$retrofitVersion\"\n    implementation \"com.squareup.retrofit2:converter-kotlinx-serialization:$retrofitVersion\"\n\n    def roomVersion = '2.6.1'\n    implementation \"androidx.room:room-runtime:$roomVersion\"\n    implementation \"androidx.room:room-ktx:$roomVersion\"\n    ksp \"androidx.room:room-compiler:$roomVersion\"\n\n    implementation \"com.github.topjohnwu.libsu:service:6.0.0\"\n\n    // Persian Date\n    implementation 'com.github.samanzamani:PersianDate:1.7.1'\n\n    implementation 'com.airbnb.android:lottie:6.6.2'\n\n    // Compose drag and drop library\n    implementation 'sh.calvin.reorderable:reorderable:2.4.2'\n\n    // Smartspacer\n    implementation('com.kieronquinn.smartspacer:sdk-client:1.1') {\n        exclude group: \"com.github.skydoves\", module: \"balloon\"\n    }\n\n    implementation 'io.github.hokofly:hoko-blur:1.5.3'\n}\n\nksp {\n    arg(\"room.schemaLocation\", \"$projectDir/schemas\")\n    arg(\"room.generateKotlin\", \"true\")\n    arg(\"room.incremental\", \"true\")\n}\n\n\nspotless {\n    java {\n        target(\"compatLib/**/src/**/*.java\")\n        googleJavaFormat().aosp()\n        removeUnusedImports()\n    }\n    kotlin {\n        target(\"lawnchair/src/**/*.kt\")\n        ktlint().customRuleSets([\n            \"io.nlopez.compose.rules:ktlint:0.4.22\",\n        ]).editorConfigOverride([\n            \"ktlint_compose_compositionlocal-allowlist\": \"disabled\",\n            \"ktlint_compose_lambda-param-event-trailing\": \"disabled\",\n            \"ktlint_compose_content-slot-reused\": \"disabled\",\n        ])\n    }\n}\n\nlicensee {\n    allow(\"Apache-2.0\")\n    allow(\"BSD-3-Clause\")\n    allow(\"GPL-2.0-or-later\")\n    allowDependency(\"com.github.topjohnwu.libsu\", \"core\", \"6.0.0\")\n    allowDependency(\"com.github.topjohnwu.libsu\", \"service\", \"6.0.0\")\n    allowUrl(\"https://github.com/patrykmichalik/opto/blob/master/LICENSE\")\n    allowUrl(\"https://github.com/RikkaApps/HiddenApiRefinePlugin/blob/main/LICENSE\")\n    allowUrl(\"https://opensource.org/licenses/mit-license.php\")\n}\n"
        },
        {
          "name": "ci.py",
          "type": "blob",
          "size": 4.072265625,
          "content": "import git\nimport html\nimport os\nimport requests\nimport re\n\ngithub_event_before = os.getenv(\"GITHUB_EVENT_BEFORE\")\ngithub_sha = os.getenv(\"GITHUB_SHA\")\ngithub_repository = os.getenv(\"GITHUB_REPOSITORY\")\ngithub_ref = os.getenv(\"GITHUB_REF\")\n\ntelegram_bot_token = os.getenv(\"TELEGRAM_BOT_TOKEN\")\ntelegram_ci_channel_id = os.getenv(\"TELEGRAM_CI_CHANNEL_ID\")\ntelegram_news_channel_id = os.getenv(\"TELEGRAM_NEWS_CHANNEL_ID\")\n\nartifact_directory = os.getenv(\"ARTIFACT_DIRECTORY\")\naction = os.getenv(\"ACTION\")\n\ndef send_message_to_telegram_chat(chat_id, message, silent):\n    requests.post(\n        url = f\"https://api.telegram.org/bot{telegram_bot_token}/sendMessage\",\n        data = {\n           \"chat_id\": chat_id,\n           \"parse_mode\": \"HTML\",\n           \"text\": message,\n           \"disable_web_page_preview\": \"true\",\n           \"disable_notification\": str(silent)\n        }\n    )\n\ndef send_document_to_telegram_chat(chat_id, document):\n    requests.post(\n        url = f\"https://api.telegram.org/bot{telegram_bot_token}/sendDocument\",\n        data = { \"chat_id\": chat_id },\n        files = { \"document\": document }\n    )\n\ndef send_artifact_to_telegram_chat(chat_id):\n    subdirectories = os.listdir(artifact_directory)\n    if \"beta\" in github_ref:\n        beta_path = f\"{artifact_directory}/{os.listdir(artifact_directory)[0]}\"\n        if os.path.exists(beta_path) and os.path.isfile(beta_path):\n            with open(beta_path, \"rb\") as artifact:\n                send_document_to_telegram_chat(chat_id=chat_id, document=artifact)\n        else:\n            print(f\"Error: Beta artifact not found at {beta_path}\")\n        return\n\n    for each_directory in subdirectories:\n        full_path = f\"{artifact_directory}/{each_directory}/debug\"\n        if not os.path.exists(full_path) or not os.path.isdir(full_path):\n            print(f\"Warning: Directory does not exist or is not valid: {full_path}\")\n            continue\n\n        try:\n            files = os.listdir(full_path)\n            if not files:\n                print(f\"Warning: No files found in {full_path}\")\n                continue\n\n            file_path = f\"{full_path}/{files[0]}\"\n            if os.path.isfile(file_path):\n                with open(file_path, \"rb\") as artifact:\n                    send_document_to_telegram_chat(chat_id=chat_id, document=artifact)\n            else:\n                print(f\"Warning: Not a file: {file_path}\")\n        except Exception as e:\n            print(f\"Error processing directory {full_path}: {e}\")\n\ndef send_internal_notifications():\n    repository = git.Repo(\".\")\n    commit_range = f\"{github_event_before}...{github_sha}\"\n    try:\n        commits = list(repository.iter_commits(commit_range))\n    except git.exc.GitCommandError as error:\n        print(f\"Error fetching commits: {error}\")\n        return\n    \n    if len(commits) == 0: return\n\n    overview_link = f\"https://github.com/{github_repository}/compare/{commit_range}\"\n    overview_link_tag = f\"\"\"<a href=\"{overview_link}\">{len(commits)} new commit{\"s\" if len(commits) > 1 else \"\"}</a>\"\"\"\n    message = f\"\"\"<b>🔨 {overview_link_tag} to <code>lawnchair:{github_ref}</code>:</b>\\n\"\"\"\n\n    for commit in reversed(commits):\n        commit_message = commit.message.split(\"\\n\")[0]\n        commit_link = f\"https://github.com/{github_repository}/commit/{commit.hexsha}\"\n        commit_link_tag = f\"\"\"<a href=\"{commit_link}\">{repository.git.rev_parse(commit.hexsha, short=7)}</a>\"\"\"\n        encoded_message = html.escape(commit_message)\n        message += f\"\\n• {commit_link_tag}: {encoded_message}\"\n\n    send_message_to_telegram_chat(chat_id=telegram_ci_channel_id, message=message, silent=False)\n    send_artifact_to_telegram_chat(chat_id=telegram_ci_channel_id)\n\ndef send_update_announcement():\n    send_artifact_to_telegram_chat(chat_id=telegram_news_channel_id)\n    \n    with open(\"TELEGRAM_CHANGELOG.txt\") as telegram_changelog:\n        send_message_to_telegram_chat(chat_id=telegram_news_channel_id, message=telegram_changelog.read(), silent=False)\n\nmatch action:\n    case \"internal_notifications\":\n        send_internal_notifications()\n    case \"update_announcement\":\n        send_update_announcement()\n"
        },
        {
          "name": "compatLib",
          "type": "tree",
          "content": null
        },
        {
          "name": "compose_compiler_config.conf",
          "type": "blob",
          "size": 0.1171875,
          "content": "androidx.collection.*\n\njava.nio.file.Path\n\nkotlin.collections.*\nkotlin.time.Duration\n\nkotlinx.coroutines.CoroutineScope\n"
        },
        {
          "name": "crowdin.yml",
          "type": "blob",
          "size": 0.1962890625,
          "content": "project_id_env: CROWDIN_PROJECT_ID\napi_token_env: CROWDIN_PERSONAL_TOKEN\nfiles:\n  - source: /lawnchair/res/values/strings.xml\n    translation: /lawnchair/res/values-%android_code%/%original_file_name%\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "fill_screens.py",
          "type": "blob",
          "size": 2.513671875,
          "content": "#!/usr/bin/env python2.5\n\nimport cgi\nimport os\nimport shutil\nimport sys\nimport sqlite3\n\nSCREENS = 5\nCOLUMNS = 4\nROWS = 4\nCELL_SIZE = 110\n\nDIR = \"db_files\"\nAUTO_FILE = \"launcher.db\"\n\nAPPLICATION_COMPONENTS = [\n  \"com.android.calculator2/com.android.calculator2.Calculator\",\n  \"com.android.providers.downloads.ui/com.android.providers.downloads.ui.DownloadList\",\n  \"com.android.settings/com.android.settings.Settings\",\n  \"com.android.mms/com.android.mms.ui.ConversationList\",\n  \"com.android.contacts/com.android.contacts.activities.PeopleActivity\",\n  \"com.android.dialer/com.android.dialer.DialtactsActivity\"\n]\n\ndef usage():\n  print \"usage: fill_screens.py -- fills up the launcher db\"\n\n\ndef make_dir():\n  shutil.rmtree(DIR, True)\n  os.makedirs(DIR)\n\ndef pull_file(fn):\n  print \"pull_file: \" + fn\n  rv = os.system(\"adb pull\"\n    + \" /data/data/com.android.launcher/databases/launcher.db\"\n    + \" \" + fn);\n  if rv != 0:\n    print \"adb pull failed\"\n    sys.exit(1)\n\ndef push_file(fn):\n  print \"push_file: \" + fn\n  rv = os.system(\"adb push\"\n    + \" \" + fn\n    + \" /data/data/com.android.launcher/databases/launcher.db\")\n  if rv != 0:\n    print \"adb push failed\"\n    sys.exit(1)\n\ndef process_file(fn):\n  print \"process_file: \" + fn\n  conn = sqlite3.connect(fn)\n  c = conn.cursor()\n  c.execute(\"DELETE FROM favorites\")\n\n  intentFormat = \"#Intent;action=android.intent.action.MAIN;category=android.intent.category.LAUNCHER;launchFlags=0x10200000;component=%s;end\"\n\n  id = 0;\n  for s in range(SCREENS):\n    for x in range(ROWS):\n      for y in range(COLUMNS):\n        id += 1\n        insert = \"INSERT into favorites (_id, title, intent, container, screen, cellX, cellY, spanX, spanY, itemType, appWidgetId, iconType) VALUES (%d, '%s', '%s', %d, %d, %d, %d, %d, %d, %d, %d, %d)\"\n        insert = insert % (id, \"title\", \"\", -100, s, x, y, 1, 1, 2, -1, 0)\n        c.execute(insert)\n        folder_id = id\n\n        for z in range(15):\n          id += 1\n          intent = intentFormat % (APPLICATION_COMPONENTS[id % len(APPLICATION_COMPONENTS)])\n          insert = \"INSERT into favorites (_id, title, intent, container, screen, cellX, cellY, spanX, spanY, itemType, appWidgetId, iconType) VALUES (%d, '%s', '%s', %d, %d, %d, %d, %d, %d, %d, %d, %d)\"\n          insert = insert % (id, \"title\", intent, folder_id, 0, 0, 0, 1, 1, 0, -1, 0)\n          c.execute(insert)\n\n  conn.commit()\n  c.close()\n\ndef main(argv):\n  if len(argv) == 1:\n    make_dir()\n    pull_file(AUTO_FILE)\n    process_file(AUTO_FILE)\n    push_file(AUTO_FILE)\n  else:\n    usage()\n\nif __name__==\"__main__\":\n  main(sys.argv)\n"
        },
        {
          "name": "flags",
          "type": "tree",
          "content": null
        },
        {
          "name": "go",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradle.properties",
          "type": "blob",
          "size": 0.4375,
          "content": "# Disable buildFeatures flags by default\nandroid.defaults.buildfeatures.resvalues=false\nandroid.defaults.buildfeatures.shaders=false\nandroid.useAndroidX=true\nandroid.enableHiddenApiCheck=false\nandroid.hideApiWarning=false\n\nkotlin.code.style=official\n\norg.gradle.caching=true\norg.gradle.jvmargs=-Xmx4g -Dfile.encoding=UTF-8 -XX:+UseParallelGC\norg.gradle.parallel=true\norg.gradle.configuration-cache=true\norg.gradle.configuration-cache.parallel=true\n"
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 8.5576171875,
          "content": "#!/bin/sh\n\n#\n# Copyright © 2015-2021 the original authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      https://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n# SPDX-License-Identifier: Apache-2.0\n#\n\n##############################################################################\n#\n#   Gradle start up script for POSIX generated by Gradle.\n#\n#   Important for running:\n#\n#   (1) You need a POSIX-compliant shell to run this script. If your /bin/sh is\n#       noncompliant, but you have some other compliant shell such as ksh or\n#       bash, then to run this script, type that shell name before the whole\n#       command line, like:\n#\n#           ksh Gradle\n#\n#       Busybox and similar reduced shells will NOT work, because this script\n#       requires all of these POSIX shell features:\n#         * functions;\n#         * expansions «$var», «${var}», «${var:-default}», «${var+SET}»,\n#           «${var#prefix}», «${var%suffix}», and «$( cmd )»;\n#         * compound commands having a testable exit status, especially «case»;\n#         * various built-in commands including «command», «set», and «ulimit».\n#\n#   Important for patching:\n#\n#   (2) This script targets any POSIX shell, so it avoids extensions provided\n#       by Bash, Ksh, etc; in particular arrays are avoided.\n#\n#       The \"traditional\" practice of packing multiple parameters into a\n#       space-separated string is a well documented source of bugs and security\n#       problems, so this is (mostly) avoided, by progressively accumulating\n#       options in \"$@\", and eventually passing that to Java.\n#\n#       Where the inherited environment variables (DEFAULT_JVM_OPTS, JAVA_OPTS,\n#       and GRADLE_OPTS) rely on word-splitting, this is performed explicitly;\n#       see the in-line comments for details.\n#\n#       There are tweaks for specific operating systems such as AIX, CygWin,\n#       Darwin, MinGW, and NonStop.\n#\n#   (3) This script is generated from the Groovy template\n#       https://github.com/gradle/gradle/blob/HEAD/platforms/jvm/plugins-application/src/main/resources/org/gradle/api/internal/plugins/unixStartScript.txt\n#       within the Gradle project.\n#\n#       You can find Gradle at https://github.com/gradle/gradle/.\n#\n##############################################################################\n\n# Attempt to set APP_HOME\n\n# Resolve links: $0 may be a link\napp_path=$0\n\n# Need this for daisy-chained symlinks.\nwhile\n    APP_HOME=${app_path%\"${app_path##*/}\"}  # leaves a trailing /; empty if no leading path\n    [ -h \"$app_path\" ]\ndo\n    ls=$( ls -ld \"$app_path\" )\n    link=${ls#*' -> '}\n    case $link in             #(\n      /*)   app_path=$link ;; #(\n      *)    app_path=$APP_HOME$link ;;\n    esac\ndone\n\n# This is normally unused\n# shellcheck disable=SC2034\nAPP_BASE_NAME=${0##*/}\n# Discard cd standard output in case $CDPATH is set (https://github.com/gradle/gradle/issues/25036)\nAPP_HOME=$( cd -P \"${APP_HOME:-./}\" > /dev/null && printf '%s\\n' \"$PWD\" ) || exit\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=maximum\n\nwarn () {\n    echo \"$*\"\n} >&2\n\ndie () {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n} >&2\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\nnonstop=false\ncase \"$( uname )\" in                #(\n  CYGWIN* )         cygwin=true  ;; #(\n  Darwin* )         darwin=true  ;; #(\n  MSYS* | MINGW* )  msys=true    ;; #(\n  NONSTOP* )        nonstop=true ;;\nesac\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=$JAVA_HOME/jre/sh/java\n    else\n        JAVACMD=$JAVA_HOME/bin/java\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=java\n    if ! command -v java >/dev/null 2>&1\n    then\n        die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nfi\n\n# Increase the maximum file descriptors if we can.\nif ! \"$cygwin\" && ! \"$darwin\" && ! \"$nonstop\" ; then\n    case $MAX_FD in #(\n      max*)\n        # In POSIX sh, ulimit -H is undefined. That's why the result is checked to see if it worked.\n        # shellcheck disable=SC2039,SC3045\n        MAX_FD=$( ulimit -H -n ) ||\n            warn \"Could not query maximum file descriptor limit\"\n    esac\n    case $MAX_FD in  #(\n      '' | soft) :;; #(\n      *)\n        # In POSIX sh, ulimit -n is undefined. That's why the result is checked to see if it worked.\n        # shellcheck disable=SC2039,SC3045\n        ulimit -n \"$MAX_FD\" ||\n            warn \"Could not set maximum file descriptor limit to $MAX_FD\"\n    esac\nfi\n\n# Collect all arguments for the java command, stacking in reverse order:\n#   * args from the command line\n#   * the main class name\n#   * -classpath\n#   * -D...appname settings\n#   * --module-path (only if needed)\n#   * DEFAULT_JVM_OPTS, JAVA_OPTS, and GRADLE_OPTS environment variables.\n\n# For Cygwin or MSYS, switch paths to Windows format before running java\nif \"$cygwin\" || \"$msys\" ; then\n    APP_HOME=$( cygpath --path --mixed \"$APP_HOME\" )\n    CLASSPATH=$( cygpath --path --mixed \"$CLASSPATH\" )\n\n    JAVACMD=$( cygpath --unix \"$JAVACMD\" )\n\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    for arg do\n        if\n            case $arg in                                #(\n              -*)   false ;;                            # don't mess with options #(\n              /?*)  t=${arg#/} t=/${t%%/*}              # looks like a POSIX filepath\n                    [ -e \"$t\" ] ;;                      #(\n              *)    false ;;\n            esac\n        then\n            arg=$( cygpath --path --ignore --mixed \"$arg\" )\n        fi\n        # Roll the args list around exactly as many times as the number of\n        # args, so each arg winds up back in the position where it started, but\n        # possibly modified.\n        #\n        # NB: a `for` loop captures its iteration list before it begins, so\n        # changing the positional parameters here affects neither the number of\n        # iterations, nor the values presented in `arg`.\n        shift                   # remove old arg\n        set -- \"$@\" \"$arg\"      # push replacement arg\n    done\nfi\n\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS='\"-Xmx64m\" \"-Xms64m\"'\n\n# Collect all arguments for the java command:\n#   * DEFAULT_JVM_OPTS, JAVA_OPTS, JAVA_OPTS, and optsEnvironmentVar are not allowed to contain shell fragments,\n#     and any embedded shellness will be escaped.\n#   * For example: A user cannot expect ${Hostname} to be expanded, as it is an environment variable and will be\n#     treated as '${Hostname}' itself on the command line.\n\nset -- \\\n        \"-Dorg.gradle.appname=$APP_BASE_NAME\" \\\n        -classpath \"$CLASSPATH\" \\\n        org.gradle.wrapper.GradleWrapperMain \\\n        \"$@\"\n\n# Stop when \"xargs\" is not available.\nif ! command -v xargs >/dev/null 2>&1\nthen\n    die \"xargs is not available\"\nfi\n\n# Use \"xargs\" to parse quoted args.\n#\n# With -n1 it outputs one arg per line, with the quotes and backslashes removed.\n#\n# In Bash we could simply go:\n#\n#   readarray ARGS < <( xargs -n1 <<<\"$var\" ) &&\n#   set -- \"${ARGS[@]}\" \"$@\"\n#\n# but POSIX shell has neither arrays nor command substitution, so instead we\n# post-process each arg (as a line of input to sed) to backslash-escape any\n# character that might be a shell metacharacter, then use eval to reverse\n# that process (while maintaining the separation between arguments), and wrap\n# the whole thing up as a single \"set\" statement.\n#\n# This will of course break if any of these variables contains a newline or\n# an unmatched quote.\n#\n\neval \"set -- $(\n        printf '%s\\n' \"$DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS\" |\n        xargs -n1 |\n        sed ' s~[^-[:alnum:]+,./:=@_]~\\\\&~g; ' |\n        tr '\\n' ' '\n    )\" '\"$@\"'\n\nexec \"$JAVACMD\" \"$@\"\n"
        },
        {
          "name": "gradlew.bat",
          "type": "blob",
          "size": 2.8046875,
          "content": "@rem\n@rem Copyright 2015 the original author or authors.\n@rem\n@rem Licensed under the Apache License, Version 2.0 (the \"License\");\n@rem you may not use this file except in compliance with the License.\n@rem You may obtain a copy of the License at\n@rem\n@rem      https://www.apache.org/licenses/LICENSE-2.0\n@rem\n@rem Unless required by applicable law or agreed to in writing, software\n@rem distributed under the License is distributed on an \"AS IS\" BASIS,\n@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@rem See the License for the specific language governing permissions and\n@rem limitations under the License.\n@rem\n@rem SPDX-License-Identifier: Apache-2.0\n@rem\n\n@if \"%DEBUG%\"==\"\" @echo off\n@rem ##########################################################################\n@rem\n@rem  Gradle startup script for Windows\n@rem\n@rem ##########################################################################\n\n@rem Set local scope for the variables with windows NT shell\nif \"%OS%\"==\"Windows_NT\" setlocal\n\nset DIRNAME=%~dp0\nif \"%DIRNAME%\"==\"\" set DIRNAME=.\n@rem This is normally unused\nset APP_BASE_NAME=%~n0\nset APP_HOME=%DIRNAME%\n\n@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.\nfor %%i in (\"%APP_HOME%\") do set APP_HOME=%%~fi\n\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nset DEFAULT_JVM_OPTS=\"-Xmx64m\" \"-Xms64m\"\n\n@rem Find java.exe\nif defined JAVA_HOME goto findJavaFromJavaHome\n\nset JAVA_EXE=java.exe\n%JAVA_EXE% -version >NUL 2>&1\nif %ERRORLEVEL% equ 0 goto execute\n\necho. 1>&2\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH. 1>&2\necho. 1>&2\necho Please set the JAVA_HOME variable in your environment to match the 1>&2\necho location of your Java installation. 1>&2\n\ngoto fail\n\n:findJavaFromJavaHome\nset JAVA_HOME=%JAVA_HOME:\"=%\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\n\nif exist \"%JAVA_EXE%\" goto execute\n\necho. 1>&2\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME% 1>&2\necho. 1>&2\necho Please set the JAVA_HOME variable in your environment to match the 1>&2\necho location of your Java installation. 1>&2\n\ngoto fail\n\n:execute\n@rem Setup the command line\n\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\n\n\n@rem Execute Gradle\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*\n\n:end\n@rem End local scope for the variables with windows NT shell\nif %ERRORLEVEL% equ 0 goto mainEnd\n\n:fail\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\nrem the _cmd.exe /c_ return code!\nset EXIT_CODE=%ERRORLEVEL%\nif %EXIT_CODE% equ 0 set EXIT_CODE=1\nif not \"\"==\"%GRADLE_EXIT_CONSOLE%\" exit %EXIT_CODE%\nexit /b %EXIT_CODE%\n\n:mainEnd\nif \"%OS%\"==\"Windows_NT\" endlocal\n\n:omega\n"
        },
        {
          "name": "hidden-api",
          "type": "tree",
          "content": null
        },
        {
          "name": "ic_launcher_home-playstore.png",
          "type": "blob",
          "size": 155.43359375,
          "content": null
        },
        {
          "name": "lawnchair",
          "type": "tree",
          "content": null
        },
        {
          "name": "lint-baseline.xml",
          "type": "blob",
          "size": 1.5986328125,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<issues format=\"6\" by=\"lint 8.4.0-alpha01\" type=\"baseline\" client=\"\" dependencies=\"true\" name=\"\" variant=\"all\" version=\"8.4.0-alpha01\">\n\n    <issue\n        id=\"NewApi\"\n        message=\"`@android:dimen/system_app_widget_background_radius` requires API level 31 (current min is 26)\"\n        errorLine1='    &lt;corners android:radius=\"@android:dimen/system_app_widget_background_radius\" /&gt;'\n        errorLine2=\"             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"packages/apps/Launcher3/res/drawable/widget_resize_frame.xml\"\n            line=\"20\"\n            column=\"14\"/>\n    </issue>\n\n    <issue\n        id=\"NewApi\"\n        message=\"Call requires API level 31 (current min is 26): `android.appwidget.AppWidgetHostView#resetColorResources`\"\n        errorLine1=\"            resetColorResources();\"\n        errorLine2=\"            ~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"packages/apps/Launcher3/src/com/android/launcher3/widget/LauncherAppWidgetHostView.java\"\n            line=\"117\"\n            column=\"13\"/>\n    </issue>\n\n    <issue\n        id=\"NewApi\"\n        message=\"Call requires API level 31 (current min is 30): `android.appwidget.AppWidgetHostView#setColorResources`\"\n        errorLine1=\"            view.setColorResources(mWallpaperColorResources);\"\n        errorLine2=\"                 ~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"packages/apps/Launcher3/src/com/android/launcher3/graphics/LauncherPreviewRenderer.java\"\n            line=\"433\"\n            column=\"18\"/>\n    </issue>\n\n</issues>"
        },
        {
          "name": "platform_frameworks_libs_systemui",
          "type": "commit",
          "content": null
        },
        {
          "name": "prebuilts",
          "type": "tree",
          "content": null
        },
        {
          "name": "proguard.flags",
          "type": "blob",
          "size": 1.8583984375,
          "content": "-keep,allowshrinking,allowoptimization class com.android.launcher3.** {\n  *;\n}\n\n# The support library contains references to newer platform versions.\n# Don't warn about those in case this app is linking against an older\n# platform version.  We know about them, and they are safe.\n-dontwarn android.support.**\n\n# Proguard will strip methods required for talkback to properly scroll to\n# next row when focus is on the last item of last row when using a RecyclerView\n# Keep optimized and shrunk proguard to prevent issues like this when using\n# support jar.\n-keep class androidx.recyclerview.widget.RecyclerView { *; }\n\n# Fragments\n-keep class ** extends androidx.fragment.app.Fragment {\n    public <init>(...);\n}\n-keep class ** extends android.app.Fragment {\n    public <init>(...);\n}\n\n## Prevent obfuscating various overridable objects\n-keep class ** implements com.android.launcher3.util.ResourceBasedOverride {\n    public <init>(...);\n}\n\n-keep interface com.android.launcher3.userevent.nano.LauncherLogProto.** {\n  *;\n}\n-keep interface com.android.launcher3.model.nano.LauncherDumpProto.** {\n  *;\n}\n\n# Discovery bounce animation\n-keep class com.android.launcher3.allapps.DiscoveryBounce$VerticalProgressWrapper {\n  public void setProgress(float);\n  public float getProgress();\n}\n\n# BUG(70852369): Surpress additional warnings after changing from Proguard to R8\n-dontwarn android.app.**\n-dontwarn android.graphics.**\n-dontwarn android.os.**\n-dontwarn android.view.**\n-dontwarn android.window.**\n\n# Ignore warnings for hidden utility classes referenced from the shared lib\n-dontwarn com.android.internal.util.**\n\n################ Do not optimize recents lib #############\n-keep class com.android.systemui.shared.** {\n  *;\n}\n\n# This is generated automatically by the Android Gradle plugin.\n-dontwarn androidx.dynamicanimation.animation.FrameCallbackScheduler\n\n-keep class com.android.quickstep.** {\n  *;\n}"
        },
        {
          "name": "proguard.pro",
          "type": "blob",
          "size": 2.1240234375,
          "content": "# The rules from AOSP are located in proguard.flags file, we can just maintain Lawnchair related rules here.\n\n# Optimization options.\n-allowaccessmodification\n-dontoptimize\n-dontpreverify\n-dontusemixedcaseclassnames\n-dontskipnonpubliclibraryclasses\n-verbose\n-keepattributes InnerClasses, *Annotation*, Signature, SourceFile, LineNumberTable\n\n\n# This is generated automatically by the Android Gradle plugin.\n-dontwarn android.appwidget.AppWidgetHost$AppWidgetHostListener\n-dontwarn android.util.StatsEvent$Builder\n-dontwarn android.util.StatsEvent\n-dontwarn androidx.window.extensions.**\n-dontwarn androidx.window.sidecar.**\n-dontwarn com.android.org.conscrypt.TrustManagerImpl\n-dontwarn com.android.wm.shell.**\n-dontwarn com.skydoves.balloon.**\n-dontwarn dalvik.system.CloseGuard\n-dontwarn lineageos.providers.LineageSettings$System\n-dontwarn androidx.compose.runtime.PrimitiveSnapshotStateKt\n-dontwarn androidx.renderscript.Allocation\n-dontwarn androidx.renderscript.BaseObj\n-dontwarn androidx.renderscript.Element\n-dontwarn androidx.renderscript.FieldPacker\n-dontwarn androidx.renderscript.RSRuntimeException\n-dontwarn androidx.renderscript.RenderScript\n-dontwarn androidx.renderscript.Script$LaunchOptions\n-dontwarn androidx.renderscript.ScriptC\n-dontwarn androidx.renderscript.ScriptIntrinsicBlur\n-dontwarn androidx.renderscript.Type\n\n\n# Common rules.\n-keep class com.android.** { *; }\n-keep class android.window.** { *; }\n-keepclasseswithmembernames class * {\n    native <methods>;\n}\n-keepclassmembers enum * {\n    public static **[] values();\n    public static ** valueOf(java.lang.String);\n}\n-keepclassmembers class * implements android.os.Parcelable {\n  public static final ** CREATOR;\n}\n\n# Lawnchair specific rules.\n-keep class app.lawnchair.LawnchairProto$* { *; }\n-keep class app.lawnchair.LawnchairApp { *; }\n-keep class app.lawnchair.LawnchairLauncher { *; }\n-keep class app.lawnchair.compatlib.** { *; }\n-keep class android.view.** { *; }\n\n-keep class com.google.protobuf.Timestamp { *; }\n\n# TODO: Remove this after the change in https://github.com/ChickenHook/RestrictionBypass/pull/9 has been released.\n-keep class org.chickenhook.restrictionbypass.** { *; }\n"
        },
        {
          "name": "protos",
          "type": "tree",
          "content": null
        },
        {
          "name": "protos_overrides",
          "type": "tree",
          "content": null
        },
        {
          "name": "quickstep",
          "type": "tree",
          "content": null
        },
        {
          "name": "res",
          "type": "tree",
          "content": null
        },
        {
          "name": "schemas",
          "type": "tree",
          "content": null
        },
        {
          "name": "settings.gradle",
          "type": "blob",
          "size": 2.5556640625,
          "content": "pluginManagement {\n    repositories {\n        google {\n            content {\n                includeGroupByRegex(\"com\\\\.android.*\")\n                includeGroupByRegex(\"com\\\\.google.*\")\n                includeGroupByRegex(\"androidx.*\")\n            }\n        }\n        gradlePluginPortal()\n    }\n}\n\n// https://docs.gradle.com/enterprise/gradle-plugin/\nplugins {\n    id \"com.gradle.develocity\" version \"3.19\"\n}\n\ndef isCI = providers.environmentVariable('CI').present\n\ndevelocity {\n    buildScan {\n        termsOfUseUrl = \"https://gradle.com/terms-of-service\"\n        termsOfUseAgree = \"yes\"\n        publishing {\n            onlyIf { isCI }\n        }\n    }\n}\n\ndependencyResolutionManagement {\n    repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)\n    repositories {\n        google {\n            content {\n                includeGroupByRegex(\"com\\\\.android.*\")\n                includeGroupByRegex(\"com\\\\.google.*\")\n                includeGroupByRegex(\"androidx.*\")\n            }\n        }\n        mavenCentral()\n        maven { url 'https://jitpack.io' }\n    }\n}\n\nenableFeaturePreview(\"STABLE_CONFIGURATION_CACHE\")\nenableFeaturePreview(\"TYPESAFE_PROJECT_ACCESSORS\")\n\ninclude ':iconloaderlib'\nproject(':iconloaderlib').projectDir = new File(rootDir, 'platform_frameworks_libs_systemui/iconloaderlib')\n\ninclude ':searchuilib'\nproject(':searchuilib').projectDir = new File(rootDir, 'platform_frameworks_libs_systemui/searchuilib')\n\ninclude ':animationlib'\nproject(':animationlib').projectDir = new File(rootDir, 'platform_frameworks_libs_systemui/animationlib')\n\ninclude ':hidden-api'\n\ninclude ':shared'\nproject(':shared').projectDir = new File(rootDir, 'systemUI/shared')\n\ninclude ':plugin'\nproject(':plugin').projectDir = new File(rootDir, 'systemUI/plugin')\n\ninclude ':plugincore'\nproject(':plugincore').projectDir = new File(rootDir, 'systemUI/plugin_core')\n\ninclude ':common'\nproject(':common').projectDir = new File(rootDir, 'systemUI/common')\n\ninclude ':log'\nproject(':log').projectDir = new File(rootDir, 'systemUI/log')\n\ninclude ':anim'\nproject(':anim').projectDir = new File(rootDir, 'systemUI/anim')\n\ninclude ':unfold'\nproject(':unfold').projectDir = new File(rootDir, 'systemUI/unfold')\n\ninclude ':viewcapture'\nproject(':viewcapture').projectDir = new File(rootDir, 'systemUI/viewcapture')\n\n\ninclude ':compatLib'\ninclude ':compatLib:compatLibVQ'\ninclude ':compatLib:compatLibVR'\ninclude ':compatLib:compatLibVS'\ninclude ':compatLib:compatLibVT'\ninclude ':compatLib:compatLibVU'\ninclude ':compatLib:compatLibVV'\n\ninclude ':baseline-profile'\n\ninclude ':androidx-lib'\ninclude ':flags'\ninclude ':wmshell'\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "src_build_config",
          "type": "tree",
          "content": null
        },
        {
          "name": "src_no_quickstep",
          "type": "tree",
          "content": null
        },
        {
          "name": "src_plugins",
          "type": "tree",
          "content": null
        },
        {
          "name": "systemUI",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "wmshell",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}