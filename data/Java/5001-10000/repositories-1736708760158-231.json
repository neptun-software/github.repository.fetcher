{
  "metadata": {
    "timestamp": 1736708760158,
    "page": 231,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Nightonke/BoomMenu",
      "stars": 5804,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0859375,
          "content": "*.iml\n.gradle\n/local.properties\n.DS_Store\n/build\n/captures\n/.idea/\n/projectFilesBackup/\n"
        },
        {
          "name": "Apk",
          "type": "tree",
          "content": null
        },
        {
          "name": "Pictures",
          "type": "tree",
          "content": null
        },
        {
          "name": "README-EN.md",
          "type": "blob",
          "size": 25.30859375,
          "content": "# BoomMenu \n[![WoWoViewPager](https://github.com/Nightonke/WoWoViewPager/blob/master/app/src/main/res/mipmap-hdpi/ic_launcher.png?raw=true)](https://github.com/Nightonke/WoWoViewPager)\n[![BoomMenu](https://github.com/Nightonke/BoomMenu/blob/master/app/src/main/res/mipmap-hdpi/ic_launcher.png?raw=true)](https://github.com/Nightonke/BoomMenu)\n[![CoCoin](https://github.com/Nightonke/CoCoin/blob/master/app/src/main/res/mipmap-hdpi/ic_launcher.png?raw=true)](https://github.com/Nightonke/CoCoin)\n[![BlurLockView](https://github.com/Nightonke/BlurLockView/blob/master/app/src/main/res/mipmap-hdpi/ic_launcher.png?raw=true)](https://github.com/Nightonke/BlurLockView)\n[![LeeCo](https://github.com/Nightonke/LeeCo/blob/master/app/src/main/res/mipmap-hdpi/ic_launcher.png?raw=true)](https://github.com/Nightonke/LeeCo)\n[![GithubWidget](https://github.com/Nightonke/GithubWidget/blob/master/app/src/main/res/mipmap-hdpi/ic_launcher.png?raw=true)](https://github.com/Nightonke/GithubWidget)\n[![JellyToggleButton](https://github.com/Nightonke/JellyToggleButton/blob/master/app/src/main/res/mipmap-hdpi/ic_launcher.png?raw=true)](https://github.com/Nightonke/JellyToggleButton)\n[![FaceOffToggleButton](https://github.com/Nightonke/FaceOffToggleButton/blob/master/app/src/main/res/mipmap-hdpi/ic_launcher.png?raw=true)](https://github.com/Nightonke/FaceOffToggleButton)\n\n###This README is only for version 1.0.9 or below. Strongly suggest to use [new version](https://github.com/Nightonke/BoomMenu/wiki)\n\nTired of these menu buttons?\n\n![Old Menu Buttons](https://github.com/Nightonke/BoomMenu/raw/master/Pictures/old_action_bar_menu.png)\n\nWhy not try these:\n\n![Circle](https://github.com/Nightonke/BoomMenu/blob/master/Pictures/show_circle.gif?raw=true)\n![Ham](https://github.com/Nightonke/BoomMenu/blob/master/Pictures/show_ham.gif?raw=true)\n\n![List](https://github.com/Nightonke/BoomMenu/blob/master/Pictures/show_list.gif?raw=true)\n![Share](https://github.com/Nightonke/BoomMenu/blob/master/Pictures/show_share.gif?raw=true)\n\nYes, this library is about a menu which can ... BOOM!  \nLooking for iOS version? Check [here](https://github.com/Nightonke/VHBoomMenuButton)\n\n# Guide\n\n[中文文档](https://github.com/Nightonke/BoomMenu/blob/master/README-ZH.md)  \n[Gradle & Maven](https://github.com/Nightonke/BoomMenu#gradle-and-maven)  \n[Note](https://github.com/Nightonke/BoomMenu#note)  \n[Demo](https://github.com/Nightonke/BoomMenu#demo)  \n\n###Usage\n\n1. [Easy to Use in 3 Steps](https://github.com/Nightonke/BoomMenu#easy-to-use-in-3-steps)\n2. [Use in Action Bar](https://github.com/Nightonke/BoomMenu#use-in-action-bar)\n3. [Use in Floating Action Button](https://github.com/Nightonke/BoomMenu#use-in-floating-action-button)\n4. [Use in List](https://github.com/Nightonke/BoomMenu#use-in-list)\n5. [Use in Share Style](https://github.com/Nightonke/BoomMenu#use-in-share-style)\n6. [Use with Builder](https://github.com/Nightonke/BoomMenu#use-with-builder)\n4. [Hamburger Button and Circle Button](https://github.com/Nightonke/BoomMenu#hamburger-button-and-circle-button)\n5. [Number of Sub Buttons](https://github.com/Nightonke/BoomMenu#number-of-sub-buttons)\n6. [Boom Types](https://github.com/Nightonke/BoomMenu#boom-types)\n7. [Place Types](https://github.com/Nightonke/BoomMenu#place-types)\n8. [Ease Types](https://github.com/Nightonke/BoomMenu#ease-types)\n9. [Boom Animation Duration](https://github.com/Nightonke/BoomMenu#boom-animation-duration)\n10. [Animation Start Delay](https://github.com/Nightonke/BoomMenu#animation-start-delay)\n11. [Rotation Degree](https://github.com/Nightonke/BoomMenu#rotation-degree)\n12. [Auto Dismiss](https://github.com/Nightonke/BoomMenu#auto-dismiss)\n13. [Cancelable](https://github.com/Nightonke/BoomMenu#cancelable)\n14. [Show Order and Hide Order](https://github.com/Nightonke/BoomMenu#show-order-and-hide-order)\n15. [Sub Buttons Click Listener](https://github.com/Nightonke/BoomMenu#sub-buttons-click-listener)\n16. [Animation Listener](https://github.com/Nightonke/BoomMenu#animation-listener)\n17. [Click Effects](https://github.com/Nightonke/BoomMenu#click-effects)\n18. [Sub Button Texts Color](https://github.com/Nightonke/BoomMenu#sub-button-texts-color)\n19. [Dim Types](https://github.com/Nightonke/BoomMenu#dim-types)\n20. [Shadow of Sub Buttons and Boom Button](https://github.com/Nightonke/BoomMenu#shadow-of-sub-buttons-and-boom-button)\n21. [Get States and Dismiss](https://github.com/Nightonke/BoomMenu#get-states-and-dismiss)\n22. [Get Sub Views of Sub Button](https://github.com/Nightonke/BoomMenu#get-sub-views-of-sub-button)\n\n[Versions](https://github.com/Nightonke/BoomMenu#versions)  \n[Todo](https://github.com/Nightonke/BoomMenu#todo)  \n[License](https://github.com/Nightonke/BoomMenu#license)  \n\n# Gradle and Maven\nJust add the \"compile 'com.nightonke:BoomMenu:1.0.9'\" in your build.gradle of your module.  \n```\ndependencies {\n    ...\n    compile 'com.nightonke:boommenu:1.0.9'\n    ...\n}\n```\nOr maven:\n```maven\n<dependency>\n  <groupId>com.nightonke</groupId>\n  <artifactId>boommenu</artifactId>\n  <version>1.0.9</version>\n  <type>pom</type>\n</dependency>\n```\n\n# Note\n1. I use the ShadowLayout from [dmytrodanylyk-ShadowLayout](https://github.com/dmytrodanylyk/shadow-layout) to create the shadow effect of the buttons.\n2. Boom menu button can be used in list since version 1.0.4.\n\n# Demo\nYou can check most of the options that you can set when using boom menu button in this demo. When you read the code of the demo, don't be afraid of the length of the code in MainActivity.class. Most of codes are for the logic of the RadioGroups.  \n![Boom V1.0.9](https://github.com/Nightonke/BoomMenu/blob/master/Apk/BoomMenu%20V1.0.9.png)  \nOr by link:  \n[Boom V1.0.9 in Github](https://github.com/Nightonke/BoomMenu/blob/master/Apk/BoomMenu%20V1.0.9.apk?raw=true)  \n[Boom V1.0.9 in Fir](http://fir.im/tv85)  \n\n# Usage\n\n### Easy to Use in 3 Steps\nCheck the code in [EaseUseActivity](https://github.com/Nightonke/BoomMenu/blob/master/app/src/main/java/com/nightonke/boommenusample/EasyUseActivity.java) and you will found out all to do are 3 steps:\n\n**1**.Add BoomMenuButton in xml file:\n```xml\n<com.nightonke.boommenu.BoomMenuButton\n    android:id=\"@+id/boom\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:layout_alignParentBottom=\"true\"\n    android:layout_alignParentRight=\"true\"\n    android:layout_alignParentEnd=\"true\"\n    android:layout_margin=\"20dp\"\n    app:boom_inActionBar=\"false\"\n    app:boom_button_color=\"@color/colorPrimary\"\n    app:boom_button_pressed_color=\"@color/colorPrimary\"\n    />\n```\n\n**2.**Get the view in xml in onCreate() method:\n```java\nboomMenuButton = (BoomMenuButton)findViewById(R.id.boom);\n```\n\n**3.**Initialize the boom menu button in the onWindowFocusChanged() method in activity:\n```java\n@Override\npublic void onWindowFocusChanged(boolean hasFocus) {\n    super.onWindowFocusChanged(hasFocus);\n    \n    boomMenuButton.init(\n            subButtonDrawables, // The drawables of images of sub buttons. Can not be null.\n            subButtonTexts,     // The texts of sub buttons, ok to be null.\n            subButtonColors,    // The colors of sub buttons, including pressed-state and normal-state.\n            ButtonType.HAM,     // The button type.\n            BoomType.PARABOLA,  // The boom type.\n            PlaceType.HAM_3_1,  // The place type.\n            null,               // Ease type to move the sub buttons when showing.\n            null,               // Ease type to scale the sub buttons when showing.\n            null,               // Ease type to rotate the sub buttons when showing.\n            null,               // Ease type to move the sub buttons when dismissing.\n            null,               // Ease type to scale the sub buttons when dismissing.\n            null,               // Ease type to rotate the sub buttons when dismissing.\n            null                // Rotation degree.\n    ); \n}\n```\n\n### Use in Action Bar\n\nTo add boom menu button in action bar just:\n\n**1**.Create your own action bar layout, custom_actionbar.xml:\n```xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    android:background=\"@color/transparent\">\n\n    <com.nightonke.boommenu.BoomMenuButton\n        android:id=\"@+id/boom\"\n        android:layout_width=\"56dp\"\n        android:layout_height=\"match_parent\"\n        android:layout_alignParentStart=\"true\"\n        android:layout_alignParentLeft=\"true\"\n        android:layout_centerVertical=\"true\"\n        android:background=\"?android:actionBarItemBackground\"\n        app:boom_inActionBar=\"true\"\n        />\n\n    <TextView\n        android:id=\"@+id/title_text\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_centerVertical=\"true\"\n        android:textAllCaps=\"true\"\n        android:textAppearance=\"?android:attr/textAppearanceLarge\"\n        android:textColor=\"#fff\"\n        android:layout_toRightOf=\"@+id/boom\"\n        android:layout_toEndOf=\"@+id/boom\"\n        />\n\n</RelativeLayout>\n```\n**2**.Custom the default action bar in onCreate() method:\n```java\n@Override\nprotected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.activity_main);\n\n    ActionBar mActionBar = getSupportActionBar();\n    mActionBar.setDisplayShowHomeEnabled(false);\n    mActionBar.setDisplayShowTitleEnabled(false);\n    LayoutInflater mInflater = LayoutInflater.from(this);\n\n    mCustomView = mInflater.inflate(R.layout.custom_actionbar, null);\n    TextView mTitleTextView = (TextView) mCustomView.findViewById(R.id.title_text);\n    mTitleTextView.setText(R.string.app_name);\n\n    boomMenuButtonInActionBar = (BoomMenuButton) mCustomView.findViewById(R.id.boom);\n    boomMenuButtonInActionBar.setOnSubButtonClickListener(this);\n    boomMenuButtonInActionBar.setAnimatorListener(this);\n\n    mActionBar.setCustomView(mCustomView);\n    mActionBar.setDisplayShowCustomEnabled(true);\n\n    ((Toolbar) mCustomView.getParent()).setContentInsetsAbsolute(0,0);\n}\n```\n**3**.Initialize the boom menu button in the onWindowFocusChanged() method in activity. Just like what we do in the step3 in [Easy to Use in 3 Steps](https://github.com/Nightonke/BoomMenu#easy-to-use-in-3-steps)\n\n###Use in Floating Action Button\n\nSimilar with above. But just add some params in xml:\n```xml\n<com.nightonke.boommenu.BoomMenuButton\n    android:id=\"@+id/boom\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    app:boom_inActionBar=\"false\"\n    app:boom_button_color=\"@color/colorPrimary\"\n    app:boom_button_pressed_color=\"@color/colorPrimary\"\n    />\n```\n\n| Param    | Type    | What It Does   |\n| ------------- |-------------| -----|\n| app:boom_inActionBar | boolean | true for boom menu button in action bar |\n| app:boom_inList | boolean | true for boom menu button in list |\n| app:boom_button_color | color | the color of the boom menu button, only work in floating action button |\n| app:boom_button_pressed_color | color | the color when pressing the boom menu button, only work when the ClickEffect is normal |\n\n### Use in List\n\nTo add boom menu button in list just:\n\n**1**.Create your list-item layout, notice that the app:boom_inList value should be true:\n```xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    android:orientation=\"horizontal\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\">\n\n    <TextView\n        android:id=\"@+id/text_view\"\n        android:layout_width=\"0dp\"\n        android:layout_height=\"56dp\"\n        android:layout_weight=\"1\"\n        android:layout_marginStart=\"15dp\"\n        android:layout_marginLeft=\"15dp\"\n        android:gravity=\"center_vertical\"\n        />\n\n    <com.nightonke.boommenu.BoomMenuButton\n        android:id=\"@+id/boom_circle\"\n        android:layout_width=\"56dp\"\n        android:layout_height=\"match_parent\"\n        app:boom_inList=\"true\"\n        />\n\n    <com.nightonke.boommenu.BoomMenuButton\n        android:id=\"@+id/boom_ham\"\n        android:layout_width=\"56dp\"\n        android:layout_height=\"match_parent\"\n        app:boom_inList=\"true\"\n        />\n\n</LinearLayout>\n```\n**2**.Init the boom menu button with delays in adapter:\n```java\n@Override\npublic View getView(int position, View convertView, final ViewGroup parent) {\n\n    ...\n\n    viewHolder.circleBoomMenuButton.postDelayed(new Runnable() {\n        @Override\n        public void run() {\n            viewHolder.circleBoomMenuButton.init(\n                    circleSubButtonDrawables, // The drawables of images of sub buttons. Can not be null.\n                    circleSubButtonTexts,     // The texts of sub buttons, ok to be null.\n                    subButtonColors,          // The colors of sub buttons, including pressed-state and normal-state.\n                    ButtonType.CIRCLE,        // The button type.\n                    BoomType.PARABOLA,        // The boom type.\n                    PlaceType.CIRCLE_3_1,     // The place type.\n                    null,                     // Ease type to move the sub buttons when showing.\n                    null,                     // Ease type to scale the sub buttons when showing.\n                    null,                     // Ease type to rotate the sub buttons when showing.\n                    null,                     // Ease type to move the sub buttons when dismissing.\n                    null,                     // Ease type to scale the sub buttons when dismissing.\n                    null,                     // Ease type to rotate the sub buttons when dismissing.\n                    null                      // Rotation degree.\n            );\n            viewHolder.hamBoomMenuButton.setSubButtonShadowOffset(\n                    Util.getInstance().dp2px(2), Util.getInstance().dp2px(2));\n            viewHolder.circleBoomMenuButton.setSubButtonShadowOffset(\n                    Util.getInstance().dp2px(2), Util.getInstance().dp2px(2));\n        }\n    }, 1);\n\n    ...\n    \n}\n```\nFor more information, please check [ListViewActivity.class](https://github.com/Nightonke/BoomMenu/blob/master/app/src/main/java/com/nightonke/boommenusample/ListViewActivity.java)\n\n### Use in Share Style\n\nShare style is the new place type of BMB in version 1.0.6. You can see the effect in the gifs. To use this, just change the place type as ```PlaceType.SHARE_X_X```. Just try it in the demo.\n\nYou can set the width of lines in share icon with ```setShareLineWidth(float width)``` and change the lines colors with ```setShareLine1Color(int color)``` and ```setShareLine2Color(int color)```.\n\nFor more information, please check [ShareActivity.class](https://github.com/Nightonke/BoomMenu/blob/master/app/src/main/java/com/nightonke/boommenusample/ShareActivity.java)\n\n### Use with Builder\n\nThanks @demolot to remind me of using Builder. Now you can use Builder to initialize the BMB more convenient.\n```\n@Override\npublic void onWindowFocusChanged(boolean hasFocus) {\n    super.onWindowFocusChanged(hasFocus);\n\n    // this is an example to show how to use the builder\n    new BoomMenuButton.Builder()\n            // set all sub buttons with subButtons method\n            //.subButtons(subButtonDrawables, subButtonColors, subButtonTexts)\n            // or add each sub button with addSubButton method\n            .addSubButton(this, R.drawable.boom, subButtonColors[0], \"BoomMenuButton\")\n            .addSubButton(this, R.drawable.java, subButtonColors[1], \"View source code\")\n            .addSubButton(this, R.drawable.github, subButtonColors[2], \"Follow me\")\n            .frames(80)\n            .duration(800)\n            .delay(100)\n            .showOrder(OrderType.RANDOM)\n            .hideOrder(OrderType.RANDOM)\n            .button(ButtonType.HAM)\n            .boom(BoomType.PARABOLA_2)\n            .place(PlaceType.HAM_3_1)\n            .showMoveEase(EaseType.EaseOutBack)\n            .hideMoveEase(EaseType.EaseOutCirc)\n            .showScaleEase(EaseType.EaseOutBack)\n            .hideScaleType(EaseType.EaseOutCirc)\n            .rotateDegree(720)\n            .showRotateEase(EaseType.EaseOutBack)\n            .hideRotateType(EaseType.Linear)\n            .autoDismiss(true)\n            .cancelable(true)\n            .dim(DimType.DIM_6)\n            .clickEffect(ClickEffectType.RIPPLE)\n            .boomButtonShadow(Util.getInstance().dp2px(2), Util.getInstance().dp2px(2))\n            .subButtonsShadow(Util.getInstance().dp2px(2), Util.getInstance().dp2px(2))\n            .subButtonTextColor(Color.BLACK)\n            .onBoomButtonBlick(null)\n            .animator(null)\n            .onSubButtonClick(null)\n            // this only work when the place type is SHARE_X_X\n            .shareStyle(0, 0, 0)\n            .init(boomMenuButton);\n}\n```\n\nFor more information, please check [BuilderActivity.class](https://github.com/Nightonke/BoomMenu/blob/master/app/src/main/java/com/nightonke/boommenusample/BuilderActivity.java)\n\n### Hamburger Button and Circle Button\nThere are 2 types of sub buttons in BMB(boom menu button). Hamburger and circle. You can use ```ButtonType.HAM``` and ```ButtonType.CIRCLE``` to initialize the BMB. \n\n### Number of Sub Buttons\nFor hamberger type, there are [1, 4] sub buttons. For circle type, there are [1, 9] sub buttons.\n\n### Boom Types\nThere are 5 boom types provided in this version. They are ```BoomType.LINE```, ```BoomType.PARABOLA_2``` , ```BoomType.HORIZONTAL_THROW```, ```BoomType.PARABOLA_2``` and ```BoomType.HORIZONTAL_THROW_2```. Just try them for fun in the demo. You can choose your favorite BoomType when initializing the BMB, or set it:\n```java\nsetBoomType(newBoomType);\n```\n\n### Place Types\nThere are 32 types for placing the sub buttons in BMB or in the screen. You can use ```PlaceType.CIRCLE_X_X``` and ```PlaceType.HAM_X_X``` (the former X is the number of sub buttons and the latter X is type number) to initialize BMB.  \n![PlayType 1~8](https://github.com/Nightonke/BoomMenu/blob/master/Pictures/place_type_1.png)  \n![PlayType 9~16](https://github.com/Nightonke/BoomMenu/blob/master/Pictures/place_type_2.png)  \n![PlayType 17~24](https://github.com/Nightonke/BoomMenu/blob/master/Pictures/place_type_3.png)  \n![PlayType 25~32](https://github.com/Nightonke/BoomMenu/blob/master/Pictures/place_type_4.png)  \nFor more information for Place type, please check [PlaceType.class](https://github.com/Nightonke/BoomMenu/blob/master/boommenu/src/main/java/com/nightonke/boommenu/Types/PlaceType.java)\n\n### Ease Types\nYou can set 30 ease types for 6 part of animations when the BMB is showing or hiding. You can set the moving, scaling and rotating or showing and hiding animation when initializing the BMB, or set them to null to use the default ease types. And also, you can set 6 types by the setters:\n```java\nsetShowMoveEaseType(showMoveEaseType);\n\nsetShowScaleEaseType(showScaleEaseType);\n\nsetShowRotateEaseType(showRotateEaseType);\n\nsetHideMoveEaseType(hideMoveEaseType);\n\nsetHideScaleEaseType(hideScaleEaseType);\n\nsetHideRotateEaseType(hideRotateEaseType);\n```\nFor more ease types, you can check [Ease Type Package](https://github.com/Nightonke/BoomMenu/tree/master/boommenu/src/main/java/com/nightonke/boommenu/Eases). Or check the [library](https://github.com/Nightonke/WoWoViewPager#ease) that I made(This part is the same).\n\n### Boom Animation Duration\nSet the duration of the boom animation by ```setDuration(duration)``` (in ms). The default duration is 800ms.\n\n### Animation Start Delay\nUse ```setDelay(delay)``` to set the delay between each 2 sub buttons(in ms). For instance, if the delay is 0, then all the sub buttons will boom out at the same time. The default delay is 100ms.\n\n### Rotation Degree\nYou can set the degree to rotate the sub button. But only for circle types, I forbade applying rotation animation to hamburger types button because the shadow or a rolling rectangle is hard to display. The default rotation degree is 720. Set the degree when initializing BMB or use ```setRotateDegree(rotateDegree);```\n\n### Auto Dismiss\nWhen you click a sub button, the BMB will automatically hide all the sub buttons. If you want to stop this, just use ```setAutoDismiss(autoDismiss)``` to set autoDismiss to false.\n\n### Cancelable\nWhen click other place except the sub buttons, the BMB will hide all the sub buttons. You can use ```setCancelable(cancelable)``` to set the value to false. But remember to set one button to perform the cancelable job, otherwise the BMB will be uncancelable.\n\n### Show Order and Hide Order\nSet the order of showing or hiding sub buttons with ```OrderType.DEFAULT```, ```OrderType.REVERSE``` and ```OrderType.RANDOM```. Use ```setShowOrderType(showOrderType)``` and ```setHideOrderType(hideOrderType)``` to set these values.\n\n### Sub Buttons Click Listener\n```java\nboomMenuButton.setOnSubButtonClickListener(new BoomMenuButton.OnSubButtonClickListener() {\n    @Override\n    public void onClick(int buttonIndex) {\n        // return the index of the sub button clicked\n    }\n});\n```\n\n### Animation Listener\n```java\nboomInfo.setAnimatorListener(new BoomMenuButton.AnimatorListener() {\n    @Override\n    public void toShow() {\n        // the moment when the BMB is clicked and the showing animation is about to start\n    }\n\n    @Override\n    public void showing(float fraction) {\n        // the showing animation is playing, the fraction is the process of animation\n    }\n\n    @Override\n    public void showed() {\n        // the showing animation is just played \n    }\n\n    @Override\n    public void toHide() {\n        // the BMB is about to play the hiding animation\n    }\n\n    @Override\n    public void hiding(float fraction) {\n        // the hiding animation is playing\n    }\n\n    @Override\n    public void hided() {\n        // the hiding animation is just played\n    }\n});\n```\n\n### Click Effects\nUse ```setClickEffectType(clickEffectType)``` set click effect of all the buttons of BMB(including itself). Use ```ClickEffectType.RIPPLE``` to set the ripple effect(only work at or after Android 5.0) or ```ClickEffectType.NORMAL``` to set the normal effect of buttons.\n\n### Sub Button Texts Color\nUse ```setTextViewColor(int color)``` to set the color of all the textviews of sub buttons. Or use ```setTextViewColor(int[] colors)``` to set different color of textviews of sub buttons.\n\n### Dim Types\nYou can use DimType to control the dim degree when showing the sub buttons. You may notice that in the demo, when you click the floating action button, the background would not be dim. But, when you click the BMB in the action bar, the background would be dim. There are 10 values of dim degree:\n```java\npublic enum DimType {\n    DIM_0(Color.parseColor(\"#00000000\")),\n    DIM_1(Color.parseColor(\"#11000000\")),\n    DIM_2(Color.parseColor(\"#22000000\")),\n    DIM_3(Color.parseColor(\"#33000000\")),\n    DIM_4(Color.parseColor(\"#44000000\")),\n    DIM_5(Color.parseColor(\"#55000000\")),\n    DIM_6(Color.parseColor(\"#66000000\")),\n    DIM_7(Color.parseColor(\"#77000000\")),\n    DIM_8(Color.parseColor(\"#88000000\")),\n    DIM_9(Color.parseColor(\"#99000000\"));\n    \n    public int value;\n\n    DimType(int value) {\n        this.value = value;\n    }\n}\n```\nUse ```setDimType(DimType dimType)``` to set the dim degree of BMB. For instance, you can use ```boomMenuButton.setDimType(DimType.DIM_0);``` to keep the background light when showing sub buttons.\n\n### Shadow of Sub Buttons and Boom Button\nYou can set the offset of the shadow of sub buttons and the BMB. Use ```setSubButtonShadowOffset(float xOffset, float yOffset)``` (in pixel)to set the offset of sub buttons and ```setBoomButtonShadowOffset(float xOffset, float yOffset)``` to the BMB's.\n\n### Get States and Dismiss\nYou can get the current state of BMB with:\n```java\nboolean isClosed();\n\nboolean isClosing();\n\nboolean isOpen();\n\nboolean isOpening();\n```\n\nAnd use ```boolean dismiss()``` to force the BMB to play hiding animation. Returns true if the BMB is going to hide, returns false if the BMB cannot hide right now(because it is showing, hiding or hided).\n\n### Get Sub Views of Sub Button\nIf you wanna modify the sub views in the sub button. There are several methods to do that:\n```java\nImageView[] getImageViews();\n\nTextView[] getTextViews();\n```\n\n# Versions\n### 1.0.1  \nFirst version.\n### 1.0.2  \nFix a bug that now BMB should be able to used in version below lollipop.\n### 1.0.3\nFix the bug that's in Android 4.0, the image of the circle button is black.\n### 1.0.4\nNow the BMB can be used in list.\n### 1.0.5\nShare style.\n### 1.0.6\nSetters for share style.\n### 1.0.7\nThanks @hisham2007 to remind me of the RTL bug. Now BMB is able to support RTL mode.  \nThanks @demolot to remind me use the Builder to init the BMB. For more information, please check [Use with BMB](https://github.com/Nightonke/BoomMenu#use-with-builder).\n### 1.0.8\nTry to fix the memory optimization issue, but I'm not sure whether it works.\n### 1.0.9\nTry to fix the null-pointer exception.\n\n# Todo\n1. Particle effects are coming soon.\n2. ~~Make BMB ready for using in listview~~.  \n3. Blur background.\n\n# License\n\n    Copyright 2016 Nightonke\n\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n"
        },
        {
          "name": "README-ZH.md",
          "type": "blob",
          "size": 25.7861328125,
          "content": "# BoomMenu \n[![WoWoViewPager](https://github.com/Nightonke/WoWoViewPager/blob/master/app/src/main/res/mipmap-hdpi/ic_launcher.png?raw=true)](https://github.com/Nightonke/WoWoViewPager)\n[![BoomMenu](https://github.com/Nightonke/BoomMenu/blob/master/app/src/main/res/mipmap-hdpi/ic_launcher.png?raw=true)](https://github.com/Nightonke/BoomMenu)\n[![CoCoin](https://github.com/Nightonke/CoCoin/blob/master/app/src/main/res/mipmap-hdpi/ic_launcher.png?raw=true)](https://github.com/Nightonke/CoCoin)\n[![BlurLockView](https://github.com/Nightonke/BlurLockView/blob/master/app/src/main/res/mipmap-hdpi/ic_launcher.png?raw=true)](https://github.com/Nightonke/BlurLockView)\n[![LeeCo](https://github.com/Nightonke/LeeCo/blob/master/app/src/main/res/mipmap-hdpi/ic_launcher.png?raw=true)](https://github.com/Nightonke/LeeCo)\n[![GithubWidget](https://github.com/Nightonke/GithubWidget/blob/master/app/src/main/res/mipmap-hdpi/ic_launcher.png?raw=true)](https://github.com/Nightonke/GithubWidget)\n[![JellyToggleButton](https://github.com/Nightonke/JellyToggleButton/blob/master/app/src/main/res/mipmap-hdpi/ic_launcher.png?raw=true)](https://github.com/Nightonke/JellyToggleButton)\n[![FaceOffToggleButton](https://github.com/Nightonke/FaceOffToggleButton/blob/master/app/src/main/res/mipmap-hdpi/ic_launcher.png?raw=true)](https://github.com/Nightonke/FaceOffToggleButton)\n\n###此README只适用于V1.0.9或以下，推荐使用新版本，[新版本的使用方法](https://github.com/Nightonke/BoomMenu/wiki)\n\n是否觉得这种菜单按钮有点无聊？\n\n![Old Menu Buttons](https://github.com/Nightonke/BoomMenu/raw/master/Pictures/old_action_bar_menu.png)\n\n要不，试试这个：\n\n![Circle](https://github.com/Nightonke/BoomMenu/blob/master/Pictures/show_circle.gif?raw=true)\n![Ham](https://github.com/Nightonke/BoomMenu/blob/master/Pictures/show_ham.gif?raw=true)\n\n![List](https://github.com/Nightonke/BoomMenu/blob/master/Pictures/show_list.gif?raw=true)\n![Share](https://github.com/Nightonke/BoomMenu/blob/master/Pictures/show_share.gif?raw=true)\n\nBoomMenu可以让你的菜单按钮 ... 瞬间爆炸！  \n想看看iOS版本吗？戳[我](https://github.com/Nightonke/VHBoomMenuButton)\n\n# 目录\n\n[English Version](https://github.com/Nightonke/BoomMenu)  \n[Gradle & Maven](https://github.com/Nightonke/BoomMenu/blob/master/README-ZH.md#gradle-and-maven)  \n[Note](https://github.com/Nightonke/BoomMenu/blob/master/README-ZH.md#note)  \n[Demo](https://github.com/Nightonke/BoomMenu/blob/master/README-ZH.md#demo)  \n\n###用法\n\n1. [Easy to Use in 3 Steps](https://github.com/Nightonke/BoomMenu/blob/master/README-ZH.md#easy-to-use-in-3-steps)\n2. [Use in Action Bar](https://github.com/Nightonke/BoomMenu/blob/master/README-ZH.md#use-in-action-bar)\n3. [Use in Floating Action Button](https://github.com/Nightonke/BoomMenu/blob/master/README-ZH.md#use-in-floating-action-button)\n4. [Use in List](https://github.com/Nightonke/BoomMenu/blob/master/README-ZH.md#use-in-list)\n5. [Use in Share Style](https://github.com/Nightonke/BoomMenu/blob/master/README-ZH.md#use-in-share-style)\n6. [Use with Builder](https://github.com/Nightonke/BoomMenu/blob/master/README-ZH.md#use-with-builder)\n4. [Hamburger Button and Circle Button](https://github.com/Nightonke/BoomMenu/blob/master/README-ZH.md#hamburger-button-and-circle-button)\n5. [Number of Sub Buttons](https://github.com/Nightonke/BoomMenu/blob/master/README-ZH.md#number-of-sub-buttons)\n6. [Boom Types](https://github.com/Nightonke/BoomMenu/blob/master/README-ZH.md#boom-types)\n7. [Place Types](https://github.com/Nightonke/BoomMenu/blob/master/README-ZH.md#place-types)\n8. [Ease Types](https://github.com/Nightonke/BoomMenu/blob/master/README-ZH.md#ease-types)\n9. [Boom Animation Duration](https://github.com/Nightonke/BoomMenu/blob/master/README-ZH.md#boom-animation-duration)\n10. [Animation Start Delay](https://github.com/Nightonke/BoomMenu/blob/master/README-ZH.md#animation-start-delay)\n11. [Rotation Degree](https://github.com/Nightonke/BoomMenu/blob/master/README-ZH.md#rotation-degree)\n12. [Auto Dismiss](https://github.com/Nightonke/BoomMenu/blob/master/README-ZH.md#auto-dismiss)\n13. [Cancelable](https://github.com/Nightonke/BoomMenu/blob/master/README-ZH.md#cancelable)\n14. [Show Order and Hide Order](https://github.com/Nightonke/BoomMenu/blob/master/README-ZH.md#show-order-and-hide-order)\n15. [Sub Buttons Click Listener](https://github.com/Nightonke/BoomMenu/blob/master/README-ZH.md#sub-buttons-click-listener)\n16. [Animation Listener](https://github.com/Nightonke/BoomMenu/blob/master/README-ZH.md#animation-listener)\n17. [Click Effects](https://github.com/Nightonke/BoomMenu/blob/master/README-ZH.md#click-effects)\n18. [Sub Button Texts Color](https://github.com/Nightonke/BoomMenu/blob/master/README-ZH.md#sub-button-texts-color)\n19. [Dim Types](https://github.com/Nightonke/BoomMenu/blob/master/README-ZH.md#dim-types)\n20. [Shadow of Sub Buttons and Boom Button](https://github.com/Nightonke/BoomMenu/blob/master/README-ZH.md#shadow-of-sub-buttons-and-boom-button)\n21. [Get States and Dismiss](https://github.com/Nightonke/BoomMenu/blob/master/README-ZH.md#get-states-and-dismiss)\n22. [Get Sub Views of Sub Button](https://github.com/Nightonke/BoomMenu/blob/master/README-ZH.md#get-sub-views-of-sub-button)\n\n[Versions](https://github.com/Nightonke/BoomMenu/blob/master/README-ZH.md#versions)  \n[Todo](https://github.com/Nightonke/BoomMenu/blob/master/README-ZH.md#todo)  \n[License](https://github.com/Nightonke/BoomMenu/blob/master/README-ZH.md#license)  \n\n# Gradle and Maven\n添加 \"compile 'com.nightonke:boommenu:1.0.9'\" 到app模块中的build.gradle即可：  \n```\ndependencies {\n    ...\n    compile 'com.nightonke:boommenu:1.0.9'\n    ...\n}\n```\n或者通过 maven:\n```maven\n<dependency>\n  <groupId>com.nightonke</groupId>\n  <artifactId>boommenu</artifactId>\n  <version>1.0.9</version>\n  <type>pom</type>\n</dependency>\n```\n\n# Note\n1. 使用了 [dmytrodanylyk-ShadowLayout](https://github.com/dmytrodanylyk/shadow-layout) 来为按钮产生阴影效果。\n2. BoomMenuButton在1.0.4版本开始已经可以在列表中使用。\n\n# Demo\n你可以在这个demo中选择绝大部分的BoomMenuButton的选项来查看其不同的效果。当你查看demo的MainActivity的时候，不用担心里面过长的代码，很多代码都是为了处理RadioGroup的逻辑。   \n\n![Boom V1.0.9](https://github.com/Nightonke/BoomMenu/blob/master/Apk/BoomMenu%20V1.0.9.png)  \n\n通过链接下载：  \n\n[Boom V1.0.9 in Github](https://github.com/Nightonke/BoomMenu/blob/master/Apk/BoomMenu%20V1.0.9.apk?raw=true)  \n[Boom V1.0.9 in Fir](http://fir.im/tv85)  \n\n# Usage\n\n### Easy to Use in 3 Steps\n查看demo中的一个 [简单示例](https://github.com/Nightonke/BoomMenu/blob/master/README-ZH.md/blob/master/app/src/main/java/com/nightonke/boommenusample/EasyUseActivity.java) ，你就会发现，其实只需要三步即可使用：\n\n**1**.添加BoomMenuButton到xml中：\n```xml\n<com.nightonke.boommenu.BoomMenuButton\n    android:id=\"@+id/boom\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:layout_alignParentBottom=\"true\"\n    android:layout_alignParentRight=\"true\"\n    android:layout_alignParentEnd=\"true\"\n    android:layout_margin=\"20dp\"\n    app:boom_inActionBar=\"false\"\n    app:boom_button_color=\"@color/colorPrimary\"\n    app:boom_button_pressed_color=\"@color/colorPrimary\"\n    />\n```\n\n**2.**在onCreate()方法中findView：  \n```java\nboomMenuButton = (BoomMenuButton)findViewById(R.id.boom);\n```\n\n**3.**在onWindowFocusChanged()方法中初始化BoomMenuButton：\n```java\n@Override\npublic void onWindowFocusChanged(boolean hasFocus) {\n    super.onWindowFocusChanged(hasFocus);\n    \n    boomMenuButton.init(\n            subButtonDrawables, // 子按钮的图标Drawable数组，不可以为null\n            subButtonTexts,     // 子按钮的文本String数组，可以为null\n            subButtonColors,    // 子按钮的背景颜色color二维数组，包括按下和正常状态的颜色，不可为null\n            ButtonType.HAM,     // 子按钮的类型\n            BoomType.PARABOLA,  // 爆炸类型\n            PlaceType.HAM_3_1,  // 排列类型\n            null,               // 展开时子按钮移动的缓动函数类型\n            null,               // 展开时子按钮放大的缓动函数类型\n            null,               // 展开时子按钮旋转的缓动函数类型\n            null,               // 隐藏时子按钮移动的缓动函数类型\n            null,               // 隐藏时子按钮缩小的缓动函数类型\n            null,               // 隐藏时子按钮旋转的缓动函数类型\n            null                // 旋转角度\n    ); \n}\n```\n\n### Use in Action Bar\n\n如何在ActionBar中使用BoomMenuButton：\n\n**1**.自定义一个ActionBar的layout，比如custom_actionbar.xml：\n```xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    android:background=\"@color/transparent\">\n\n    <com.nightonke.boommenu.BoomMenuButton\n        android:id=\"@+id/boom\"\n        android:layout_width=\"56dp\"\n        android:layout_height=\"match_parent\"\n        android:layout_alignParentStart=\"true\"\n        android:layout_alignParentLeft=\"true\"\n        android:layout_centerVertical=\"true\"\n        android:background=\"?android:actionBarItemBackground\"\n        app:boom_inActionBar=\"true\"\n        />\n\n    <TextView\n        android:id=\"@+id/title_text\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_centerVertical=\"true\"\n        android:textAllCaps=\"true\"\n        android:textAppearance=\"?android:attr/textAppearanceLarge\"\n        android:textColor=\"#fff\"\n        android:layout_toRightOf=\"@+id/boom\"\n        android:layout_toEndOf=\"@+id/boom\"\n        />\n\n</RelativeLayout>\n```\n**2**.在onCreate()方法中应用你的自定义ActionBar：\n```java\n@Override\nprotected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.activity_main);\n\n    ActionBar mActionBar = getSupportActionBar();\n    mActionBar.setDisplayShowHomeEnabled(false);\n    mActionBar.setDisplayShowTitleEnabled(false);\n    LayoutInflater mInflater = LayoutInflater.from(this);\n\n    mCustomView = mInflater.inflate(R.layout.custom_actionbar, null);\n    TextView mTitleTextView = (TextView) mCustomView.findViewById(R.id.title_text);\n    mTitleTextView.setText(R.string.app_name);\n\n    boomMenuButtonInActionBar = (BoomMenuButton) mCustomView.findViewById(R.id.boom);\n    boomMenuButtonInActionBar.setOnSubButtonClickListener(this);\n    boomMenuButtonInActionBar.setAnimatorListener(this);\n\n    mActionBar.setCustomView(mCustomView);\n    mActionBar.setDisplayShowCustomEnabled(true);\n\n    ((Toolbar) mCustomView.getParent()).setContentInsetsAbsolute(0,0);\n}\n```\n**3**.在onWindowFocusChanged()方法中初始化BoomMenuButton。就像在[简单使用](https://github.com/Nightonke/BoomMenu/blob/master/README-ZH.md#easy-to-use-in-3-steps)中介绍的一样。\n\n###Use in Floating Action Button\n\n如何在FloatingActionButton中使用？与上述类似，稍微修改一下xml文件：\n```xml\n<com.nightonke.boommenu.BoomMenuButton\n    android:id=\"@+id/boom\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    app:boom_inActionBar=\"false\"\n    app:boom_button_color=\"@color/colorPrimary\"\n    app:boom_button_pressed_color=\"@color/colorPrimary\"\n    />\n```\n\n| 参数    | 类型    | 干啥的   |\n| ------------- |-------------| -----|\n| app:boom_inActionBar | boolean |真，表示应用在ActionBar中 |\n| app:boom_inList | boolean | true for boom menu button in list |\n| app:boom_button_color | color | BoomMenuButton的背景色，仅仅在FloatingActionButton中有效 |\n| app:boom_button_pressed_color | color | BoomMenuButton的按下背景颜色，仅仅在点击效果为Normal时有效 |\n\n\n### Use in List\n\n如何在列表中使用BoomMenuButton：\n\n**1**.自定义列表子项布局：\n```xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    android:orientation=\"horizontal\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\">\n\n    <TextView\n        android:id=\"@+id/text_view\"\n        android:layout_width=\"0dp\"\n        android:layout_height=\"56dp\"\n        android:layout_weight=\"1\"\n        android:layout_marginStart=\"15dp\"\n        android:layout_marginLeft=\"15dp\"\n        android:gravity=\"center_vertical\"\n        />\n\n    <com.nightonke.boommenu.BoomMenuButton\n        android:id=\"@+id/boom_circle\"\n        android:layout_width=\"56dp\"\n        android:layout_height=\"match_parent\"\n        app:boom_inList=\"true\"\n        />\n\n    <com.nightonke.boommenu.BoomMenuButton\n        android:id=\"@+id/boom_ham\"\n        android:layout_width=\"56dp\"\n        android:layout_height=\"match_parent\"\n        app:boom_inList=\"true\"\n        />\n\n</LinearLayout>\n```\n**2**.在adapter中用延迟初始化按钮：\n```java\n@Override\npublic View getView(int position, View convertView, final ViewGroup parent) {\n\n    ...\n\n    viewHolder.circleBoomMenuButton.postDelayed(new Runnable() {\n        @Override\n        public void run() {\n            viewHolder.circleBoomMenuButton.init(\n                    circleSubButtonDrawables, // The drawables of images of sub buttons. Can not be null.\n                    circleSubButtonTexts,     // The texts of sub buttons, ok to be null.\n                    subButtonColors,          // The colors of sub buttons, including pressed-state and normal-state.\n                    ButtonType.CIRCLE,        // The button type.\n                    BoomType.PARABOLA,        // The boom type.\n                    PlaceType.CIRCLE_3_1,     // The place type.\n                    null,                     // Ease type to move the sub buttons when showing.\n                    null,                     // Ease type to scale the sub buttons when showing.\n                    null,                     // Ease type to rotate the sub buttons when showing.\n                    null,                     // Ease type to move the sub buttons when dismissing.\n                    null,                     // Ease type to scale the sub buttons when dismissing.\n                    null,                     // Ease type to rotate the sub buttons when dismissing.\n                    null                      // Rotation degree.\n            );\n            viewHolder.hamBoomMenuButton.setSubButtonShadowOffset(\n                    Util.getInstance().dp2px(2), Util.getInstance().dp2px(2));\n            viewHolder.circleBoomMenuButton.setSubButtonShadowOffset(\n                    Util.getInstance().dp2px(2), Util.getInstance().dp2px(2));\n        }\n    }, 1);\n\n    ...\n    \n}\n```\n更多信息请查看[代码](https://github.com/Nightonke/BoomMenu/blob/master/app/src/main/java/com/nightonke/boommenusample/ListViewActivity.java)\n\n### Use in Share Style\n\n分享风格的按钮在版本1.0.6已经可以使用，效果就像开篇的gif。只需要把place type改成```PlaceType.SHARE_X_X```即可，demo中有分享风格按钮的所有示例。可以用 ```setShareLineWidth(float width)``` 来设置分享按钮中线段的宽度，或者用 ```setShareLine1Color(int color)``` 和 ```setShareLine2Color(int color)``` 来改变线段的颜色。\n\n更多信息请查看[代码](https://github.com/Nightonke/BoomMenu/blob/master/app/src/main/java/com/nightonke/boommenusample/ShareActivity.java)\n\n### Use with Builder\n\n感谢 @demolot 提醒我使用Builder来初始化BMB。现在BMB已经支持Builder初始化。\n```\n@Override\npublic void onWindowFocusChanged(boolean hasFocus) {\n    super.onWindowFocusChanged(hasFocus);\n\n    // this is an example to show how to use the builder\n    new BoomMenuButton.Builder()\n            // set all sub buttons with subButtons method\n            //.subButtons(subButtonDrawables, subButtonColors, subButtonTexts)\n            // or add each sub button with addSubButton method\n            .addSubButton(this, R.drawable.boom, subButtonColors[0], \"BoomMenuButton\")\n            .addSubButton(this, R.drawable.java, subButtonColors[1], \"View source code\")\n            .addSubButton(this, R.drawable.github, subButtonColors[2], \"Follow me\")\n            .frames(80)\n            .duration(800)\n            .delay(100)\n            .showOrder(OrderType.RANDOM)\n            .hideOrder(OrderType.RANDOM)\n            .button(ButtonType.HAM)\n            .boom(BoomType.PARABOLA_2)\n            .place(PlaceType.HAM_3_1)\n            .showMoveEase(EaseType.EaseOutBack)\n            .hideMoveEase(EaseType.EaseOutCirc)\n            .showScaleEase(EaseType.EaseOutBack)\n            .hideScaleType(EaseType.EaseOutCirc)\n            .rotateDegree(720)\n            .showRotateEase(EaseType.EaseOutBack)\n            .hideRotateType(EaseType.Linear)\n            .autoDismiss(true)\n            .cancelable(true)\n            .dim(DimType.DIM_6)\n            .clickEffect(ClickEffectType.RIPPLE)\n            .boomButtonShadow(Util.getInstance().dp2px(2), Util.getInstance().dp2px(2))\n            .subButtonsShadow(Util.getInstance().dp2px(2), Util.getInstance().dp2px(2))\n            .subButtonTextColor(Color.BLACK)\n            .onBoomButtonBlick(null)\n            .animator(null)\n            .onSubButtonClick(null)\n            // this only work when the place type is SHARE_X_X\n            .shareStyle(0, 0, 0)\n            .init(boomMenuButton);\n}\n```\n\n更多信息请查看[代码](https://github.com/Nightonke/BoomMenu/blob/master/app/src/main/java/com/nightonke/boommenusample/BuilderActivity.java)\n\n### Hamburger Button and Circle Button\n在BMB(BoomMenuButton)中有两种子按钮类型，Hamburger和circle。你可以使用 ```ButtonType.HAM``` 和 ```ButtonType.CIRCLE``` 来初始化BMB。 \n\n### Number of Sub Buttons\n对于HAM类型，可以有1到4个自按钮。对于CIRCLE类型，可以有1到9个子按钮。\n\n### Boom Types\n当前版本中提供了5种展开的类型，它们是 ```BoomType.LINE```， ```BoomType.PARABOLA_2``` ， ```BoomType.HORIZONTAL_THROW```， ```BoomType.PARABOLA_2``` 和 ```BoomType.HORIZONTAL_THROW_2```。 Demo中提供了这5中方式的效果，你可以在初始化的时候设置展开类型，或者通过setter：\n```java\nsetBoomType(newBoomType);\n```\n\n### Place Types\n当前版本有32种对子按钮的排列方式。你可以使用 ```PlaceType.CIRCLE_X_X``` 和```PlaceType.HAM_X_X``` （前一个X代表子按钮数量，后一个代表排列方式）来初始化BMB。  \n![PlayType 1~8](https://github.com/Nightonke/BoomMenu/blob/master/Pictures/place_type_1.png)  \n![PlayType 9~16](https://github.com/Nightonke/BoomMenu/blob/master/Pictures/place_type_2.png)  \n![PlayType 17~24](https://github.com/Nightonke/BoomMenu/blob/master/Pictures/place_type_3.png)  \n![PlayType 25~32](https://github.com/Nightonke/BoomMenu/blob/master/Pictures/place_type_4.png)  \n更多信息请查看 [PlaceType.class](https://github.com/Nightonke/BoomMenu/blob/master/boommenu/src/main/java/com/nightonke/boommenu/Types/PlaceType.java)\n\n### Ease Types\n对6种展开或隐藏的子动画有30种缓动函数可以使用。你可以设置移动、缩放、旋转动画的缓动效果当初始化BMB的时候，如果设置为null则表明使用默认值。当然，也可以通过setter来设置：\n```java\nsetShowMoveEaseType(showMoveEaseType);\n\nsetShowScaleEaseType(showScaleEaseType);\n\nsetShowRotateEaseType(showRotateEaseType);\n\nsetHideMoveEaseType(hideMoveEaseType);\n\nsetHideScaleEaseType(hideScaleEaseType);\n\nsetHideRotateEaseType(hideRotateEaseType);\n```\n更多信息，请查看 [Ease Type Package](https://github.com/Nightonke/BoomMenu/tree/master/boommenu/src/main/java/com/nightonke/boommenu/Eases)。 或者查看之前我写的 [开源库](https://github.com/Nightonke/WoWoViewPager#ease) （缓动效果是一样的）。\n\n### Boom Animation Duration\n通过 ```setDuration(duration)``` （ms为单位）来设置展开或隐藏的延时。 默认值为 800ms。\n\n### Animation Start Delay\n通过 ```setDelay(delay)``` 来设置每两个子按钮之间动画的延时（ms为单位）。 比如，如果延时设为0，那么所有子按钮都会同时展开或隐藏，默认值为100ms。\n\n### Rotation Degree\n你可以设置子按钮展开或隐藏时的旋转角度。但是注意，只对圆形的子按钮有效，因为对于长方形的子按钮来说，旋转时其阴影效果很难绘制。默认值为720度。你可以在初始化的时候设置或者通过setter  ```setRotateDegree(rotateDegree)``` 来设置。\n\n### Auto Dismiss\n当点击一个子按钮的时候，默认BMB是会隐藏所有子按钮的。如果你不想这样，你可以用 ```setAutoDismiss(autoDismiss)``` 把自动隐藏值设为false。\n\n### Cancelable\n当子按钮全部展开后，点击除了子按钮的区域，BMB会执行隐藏所有子按钮的动画。如果你不想这样，可以用过 ```setCancelable(cancelable)``` 来吧cancelable值设为false。 但是要记得把某个子按钮的点击事件中用BMB的dismiss()函数来隐藏子按钮，否则BMB会无法隐藏。\n\n### Show Order and Hide Order\n设置展开或隐藏时的子按钮顺序，可以通过 ```OrderType.DEFAULT```， ```OrderType.REVERSE``` 和```OrderType.RANDOM```。 用setter ```setShowOrderType(showOrderType)``` 和 ```setHideOrderType(hideOrderType)``` 来设置相应的值。\n\n### Sub Buttons Click Listener\n```java\nboomMenuButton.setOnSubButtonClickListener(new BoomMenuButton.OnSubButtonClickListener() {\n    @Override\n    public void onClick(int buttonIndex) {\n        // 返回被点击的子按钮下标\n    }\n});\n```\n\n### Animation Listener\n```java\nboomInfo.setAnimatorListener(new BoomMenuButton.AnimatorListener() {\n    @Override\n    public void toShow() {\n        // 当BMB即将开始执行展开动画\n    }\n\n    @Override\n    public void showing(float fraction) {\n        // 展开动画正在进行，fraction表示进度\n    }\n\n    @Override\n    public void showed() {\n        // 展开动画刚刚结束 \n    }\n\n    @Override\n    public void toHide() {\n        // BMB即将开始执行隐藏动画\n    }\n\n    @Override\n    public void hiding(float fraction) {\n        // 隐藏动画正在进行，fraction表示进度\n    }\n\n    @Override\n    public void hided() {\n        // 隐藏动画刚刚结束\n    }\n});\n```\n\n### Click Effects\n使用 ```setClickEffectType(clickEffectType)``` 来为所有按钮（包括BMB自身）设置点击效果。 用 ```ClickEffectType.RIPPLE``` 来设置波纹效果（只在Android 5.0或其后有效） 或 ```ClickEffectType.NORMAL``` 来设置普通点击效果。 \n\n### Sub Button Texts Color\n用 ```setTextViewColor(int color)``` 来为所有的子按钮设置文本颜色。或者通过 ```setTextViewColor(int[] colors)``` 来为子按钮分别设置文本颜色。\n\n### Dim Types\n使用DimType来设置背景的暗淡效果。注意到在demo中，当点击FloatingActionButton时，背景并不会暗淡，但是点击ActionBar中的BMB时，背景会变暗淡。有10个值可以来设置暗淡效果：\n```java\npublic enum DimType {\n    DIM_0(Color.parseColor(\"#00000000\")),\n    DIM_1(Color.parseColor(\"#11000000\")),\n    DIM_2(Color.parseColor(\"#22000000\")),\n    DIM_3(Color.parseColor(\"#33000000\")),\n    DIM_4(Color.parseColor(\"#44000000\")),\n    DIM_5(Color.parseColor(\"#55000000\")),\n    DIM_6(Color.parseColor(\"#66000000\")),\n    DIM_7(Color.parseColor(\"#77000000\")),\n    DIM_8(Color.parseColor(\"#88000000\")),\n    DIM_9(Color.parseColor(\"#99000000\"));\n    \n    public int value;\n\n    DimType(int value) {\n        this.value = value;\n    }\n}\n```\n用 ```setDimType(DimType dimType)``` 来设置BMB的暗淡效果。比如，你可以使用 ```boomMenuButton.setDimType(DimType.DIM_0);``` 来保持背景的明亮。\n\n### Shadow of Sub Buttons and Boom Button\n你可以设置子按钮和BMB的阴影偏移效果。用 ```setSubButtonShadowOffset(float xOffset, float yOffset)``` （pixel为单位）来设置子按钮的阴影偏移效果，用 ```setBoomButtonShadowOffset(float xOffset, float yOffset)``` 来设置BMB的阴影偏移效果。\n\n### Get States and Dismiss\n通过以下函数来获得BMB当前的状态：\n```java\nboolean isClosed();\n\nboolean isClosing();\n\nboolean isOpen();\n\nboolean isOpening();\n```\n\n用 ```boolean dismiss()``` 来强制执行BMB的隐藏效果。返回真如果BMB可以执行隐藏动画，返回假如果当前BMB不可执行隐藏动画（因为BMB正在执行展开、隐藏动画或正处于未展开的状态）。\n\n### Get Sub Views of Sub Button\n如果想对子按钮的子控件稍加修改，可以调用：\n```java\nImageView[] getImageViews();\n\nTextView[] getTextViews();\n```\n\n# Versions\n### 1.0.1  \n第一个版本。\n### 1.0.2  \n修复在lollipop版本之下运行崩溃的错误。\n### 1.0.3\n修复在Android4.0版本中出现的圆形子按钮图片背景色为黑色的bug。\n### 1.0.4\nBMB已经可以在列表中使用。\n### 1.0.5\n分享风格按钮。\n### 1.0.6\n分享风格按钮相关设置。\n### 1.0.7\n感谢 @hisham2007 发现的RTL模式下的bug。现在BMB已经可以正常支持RTL模式。  \n感谢 @demolot 提醒我用Builder来初始化BMB。更多信息，请查看[Use with BMB](https://github.com/Nightonke/BoomMenu/blob/master/README-ZH.md#use-with-builder)。\n### 1.0.8\n试图解决一下内存优化的issue，不知是否然并卵。\n### 1.0.9\n试图解决空指针的issue，不知是否然并卵。\n\n# Todo\n1. 粒子效果。\n2. ~~让BMB可以在listview中使用~~。  \n\n# License\n\n    Copyright 2016 Nightonke\n\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 7.783203125,
          "content": "# BoomMenu \n[![Developer](https://img.shields.io/badge/Developer-Nightonke-red.svg)](https://github.com/Nightonke)\n[![Demo](https://img.shields.io/badge/Demo-Download-orange.svg)](https://github.com/Nightonke/BoomMenu/blob/master/Apk/BoomMenu%20V2.1.1.apk?raw=true)\n[![Download](https://api.bintray.com/packages/nightonke/maven/boommenu/images/download.svg)](https://bintray.com/nightonke/maven/boommenu)\n[![Lisense](https://img.shields.io/badge/License-Apache%202-lightgrey.svg)](https://www.apache.org/licenses/LICENSE-2.0)\n\n## 2.0.0 Comes Finally\n\nApproximately 8 months ago, I got an inspiration to creating something that can boom and show menu, which I named it Boom-Menu-Button, BMB. But at that time, I just a fresh-man in Android, knowing little about designing. The codes I wrote serveral months ago are ugly and performed low-efficient.\n\nBetween months, I always think about BMB and try to write a better design pattern for implements of BMB. My first try is [BMB-iOS](https://github.com/Nightonke/VHBoomMenuButton), which contains more family characteristics, for instance, buttons-alignment, text-inside/outside-button.\n\nAnd now the BMB-Android 2.0.0 comes.  \n<img src=\"https://github.com/Nightonke/BoomMenu/blob/master/Pictures/text-inside-button.gif\" width=\"250\"/>\n<img src=\"https://github.com/Nightonke/BoomMenu/blob/master/Pictures/ham-button.gif\" width=\"250\"/>\n<img src=\"https://github.com/Nightonke/BoomMenu/blob/master/Pictures/text-outside-button.gif\" width=\"250\">\n<img src=\"https://github.com/Nightonke/BoomMenu/blob/master/Pictures/actionbar-example.gif\" width=\"250\">\n<img src=\"https://github.com/Nightonke/BoomMenu/blob/master/Pictures/list-example.gif\" width=\"250\">\n<img src=\"https://github.com/Nightonke/BoomMenu/blob/master/Pictures/share-example.gif\" width=\"250\">\n\n## Gradle & Maven\n```\ncompile 'com.nightonke:boommenu:2.1.1'\n```\n```\n<dependency>\n  <groupId>com.nightonke</groupId>\n  <artifactId>boommenu</artifactId>\n  <version>2.1.1</version>\n  <type>pom</type>\n</dependency>\n```\n\n## Demo\n<img src=\"https://github.com/Nightonke/BoomMenu/blob/master/Apk/BoomMenu.png\" width=\"200\">  \nOr by link:  \n\n[Boom V2.1.1 in Github](https://github.com/Nightonke/BoomMenu/blob/master/Apk/BoomMenu%20V2.1.1.apk?raw=true)  \n\n[Boom V2.1.1 in Fir](http://fir.im/boommenubutton)  \n\n## Wiki\nCheck the [wiki](https://github.com/Nightonke/BoomMenu/wiki) to use BMB.\n\n### Documentation Chapters\n\n1. [Basic Usage](https://github.com/Nightonke/BoomMenu/wiki/Basic-Usage)  \nHow to use BMB in just several lines of code?  \n2. [Simple Circle Button](https://github.com/Nightonke/BoomMenu/wiki/Simple-Circle-Button)  \nAdd simple circle buttons with just an image for each to BMB.  \n    <img src=\"https://github.com/Nightonke/BoomMenu/raw/master/Pictures/BoomButton/SimpleCircleButton.png\" width=\"400\">\n3. [Text Inside Circle Button](https://github.com/Nightonke/BoomMenu/wiki/Text-Inside-Circle-Button)  \nAdd text inside circle buttons with a text and image inside for each to BMB.  \n    <img src=\"https://github.com/Nightonke/BoomMenu/raw/master/Pictures/BoomButton/TextInsideCircleButton.png\" width=\"400\">\n4. [Text Outside Circle Button](https://github.com/Nightonke/BoomMenu/wiki/Text-Outside-Circle-Button)    \nAdd text outside circle buttons with a text and image outside for each to BMB.  \n    <img src=\"https://github.com/Nightonke/BoomMenu/raw/master/Pictures/BoomButton/TextOutsideCircleButton.png\" width=\"400\">\n5. [Ham Button](https://github.com/Nightonke/BoomMenu/wiki/Ham-Button)  \nAdd ham buttons with with a title, subtitle and image inside for each to BMB.  \n    <img src=\"https://github.com/Nightonke/BoomMenu/raw/master/Pictures/BoomButton/HamButton.png\" width=\"400\">\n6. [Share Style](https://github.com/Nightonke/BoomMenu/wiki/Share-Style)  \nMake a share-style BMB.\n1. [Custom Position](https://github.com/Nightonke/BoomMenu/wiki/Custom-Position)  \n    Customize the number and positions of pieces and boom-buttons.  \n    <img src=\"https://github.com/Nightonke/BoomMenuButton-Images/raw/master/Android/CustomPosition.gif\" width=300>\n7. [Button Place Alignments](https://github.com/Nightonke/BoomMenu/wiki/Button-Place-Alignments)  \nPlace all the buttons to anywhere on screen.  \n    <img src=\"https://github.com/Nightonke/BoomMenu/blob/master/Pictures/button-place-alignment-enum/button-place-alignment-1.png\" width=\"200\">\n    <img src=\"https://github.com/Nightonke/BoomMenu/blob/master/Pictures/button-place-alignment-enum/button-place-alignment-2.png\" width=\"200\">\n    <img src=\"https://github.com/Nightonke/BoomMenu/blob/master/Pictures/button-place-alignment-enum/button-place-alignment-3.png\" width=\"200\">\n8. [Different Ways to Boom](https://github.com/Nightonke/BoomMenu/wiki/Different-Ways-to-Boom)  \nDifferent animations when the buttons boom or re-boom.  \n    <img src=\"https://github.com/Nightonke/BoomMenu/raw/master/Pictures/boom-enum/boom-enum-parabola-2.png\" width=\"400\">\n    <img src=\"https://github.com/Nightonke/BoomMenu/raw/master/Pictures/boom-enum/boom-enum-parabola-3.png\" width=\"400\">\n9. [Ease Animations for Buttons](https://github.com/Nightonke/BoomMenu/wiki/Ease-Animations-for-Buttons)  \nUse different and cute ease-animations for buttons.\n1. [Different Order for Buttons](https://github.com/Nightonke/BoomMenu/wiki/Different-Order-for-Buttons)  \nDifferent order enum for boom-buttons.\n10. [Other Animations Attributes for Buttons](https://github.com/Nightonke/BoomMenu/wiki/Other-Animations-Attributes-for-Buttons)  \nDelay, duration, rotate-degrees, frames...\n11. [Click Event and Listener](https://github.com/Nightonke/BoomMenu/wiki/Click-Event-and-Listener)  \nListener for clicking each button or animation-states.\n12. [Control BMB](https://github.com/Nightonke/BoomMenu/wiki/Control-BMB)  \nBoom or re-boom BMB programmatically.\n13. [Use BMB in Action Bar](https://github.com/Nightonke/BoomMenu/wiki/Use-BMB-in-Action-Bar)  \nHow to put BMB in action bar?\n1. [Use BMB in Tool Bar](https://github.com/Nightonke/BoomMenu/wiki/Use-BMB-in-Tool-Bar)  \nHow to put BMB in tool bar?\n14. [Use BMB in List](https://github.com/Nightonke/BoomMenu/wiki/Use-BMB-in-List)  \nMatters need attention when you need a BMB in list-view or recycler-view.\n15. [Use BMB in Fragment](https://github.com/Nightonke/BoomMenu/wiki/Use-BMB-in-Fragment)  \nExample for use BMB in fragment.\n16. [Attributes for BMB or Pieces on BMB](https://github.com/Nightonke/BoomMenu/wiki/Attributes-for-BMB-or-Pieces-on-BMB)  \nHow to change the size or margins of dots on BMB?\n17. [Cache Optimization & Boom Area](https://github.com/Nightonke/BoomMenu/wiki/Cache-Optimization-&-Boom-Area)  \nWhat if I want BMB to boom in just its parent-view?\n1. [Change Boom Buttons Dynamically](https://github.com/Nightonke/BoomMenu/wiki/Change-Boom-Buttons-Dynamically)  \nChange Boom Buttons Dynamically.\n1. [Fade Views](https://github.com/Nightonke/BoomMenu/wiki/Fade-Views)  \n    Add faded views on BMB.  \n    <img src=\"https://github.com/Nightonke/BoomMenuButton-Images/raw/master/Android/FadeViews.gif\" width=300>\n1. [Version History](https://github.com/Nightonke/BoomMenu/wiki/Version-History)  \nWhat's more for every version?  \n18. [Structure for BMB](https://github.com/Nightonke/BoomMenu/wiki/Structure-for-BMB)  \nStructure for BMB when I designed it, for sharing and communicating.\n\n## Issues & Feedbacks\nTry to tell me the bugs or enhancements about BMB, or contact me with Nightonke@outlook.com / 2584541288@qq.com. Before doing that, having a careful read on [readme](https://github.com/Nightonke/BoomMenu), [wiki](https://github.com/Nightonke/BoomMenu/wiki) and issues is really helpful. \n\n## ReadMe for Version 1.0.9 or Below\nIf you still wanna use version 1.0.9 or below, you can find the README below:\n\n[English README](https://github.com/Nightonke/BoomMenu/blob/master/README-EN.md) \n[中文文档](https://github.com/Nightonke/BoomMenu/blob/master/README-ZH.md)\n\nBut I strongly suggest you to use the newest version.\n\n## [What I'm Doing](http://huangweiping.me/)\n"
        },
        {
          "name": "app",
          "type": "tree",
          "content": null
        },
        {
          "name": "boommenu",
          "type": "tree",
          "content": null
        },
        {
          "name": "build.gradle",
          "type": "blob",
          "size": 0.697265625,
          "content": "// Top-level build file where you can add configuration options common to all sub-projects/modules.\n\nbuildscript {\n    repositories {\n        jcenter()\n    }\n    dependencies {\n        classpath 'com.android.tools.build:gradle:2.3.3'\n\n        // NOTE: Do not place your application dependencies here; they belong\n        // in the individual module build.gradle files\n\n        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.4'\n        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.4.1'\n    }\n}\n\nallprojects {\n    repositories {\n        jcenter()\n        maven {\n            url \"https://maven.google.com\"\n        }\n    }\n}\n\ntask clean(type: Delete) {\n    delete rootProject.buildDir\n}\n"
        },
        {
          "name": "gradle.properties",
          "type": "blob",
          "size": 0.8359375,
          "content": "# Project-wide Gradle settings.\n\n# IDE (e.g. Android Studio) users:\n# Gradle settings configured through the IDE *will override*\n# any settings specified in this file.\n\n# For more details on how to configure your build environment visit\n# http://www.gradle.org/docs/current/userguide/build_environment.html\n\n# Specifies the JVM arguments used for the daemon process.\n# The setting is particularly useful for tweaking memory settings.\n# Default value: -Xmx10248m -XX:MaxPermSize=256m\n# org.gradle.jvmargs=-Xmx2048m -XX:MaxPermSize=512m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8\n\n# When configured, Gradle will run in incubating parallel mode.\n# This option should only be used with decoupled projects. More details, visit\n# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects\n# org.gradle.parallel=true\n"
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 4.8544921875,
          "content": "#!/usr/bin/env bash\n\n##############################################################################\n##\n##  Gradle start up script for UN*X\n##\n##############################################################################\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS=\"\"\n\nAPP_NAME=\"Gradle\"\nAPP_BASE_NAME=`basename \"$0\"`\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=\"maximum\"\n\nwarn ( ) {\n    echo \"$*\"\n}\n\ndie ( ) {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n}\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\ncase \"`uname`\" in\n  CYGWIN* )\n    cygwin=true\n    ;;\n  Darwin* )\n    darwin=true\n    ;;\n  MINGW* )\n    msys=true\n    ;;\nesac\n\n# Attempt to set APP_HOME\n# Resolve links: $0 may be a link\nPRG=\"$0\"\n# Need this for relative symlinks.\nwhile [ -h \"$PRG\" ] ; do\n    ls=`ls -ld \"$PRG\"`\n    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n    if expr \"$link\" : '/.*' > /dev/null; then\n        PRG=\"$link\"\n    else\n        PRG=`dirname \"$PRG\"`\"/$link\"\n    fi\ndone\nSAVED=\"`pwd`\"\ncd \"`dirname \\\"$PRG\\\"`/\" >/dev/null\nAPP_HOME=\"`pwd -P`\"\ncd \"$SAVED\" >/dev/null\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n    else\n        JAVACMD=\"$JAVA_HOME/bin/java\"\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=\"java\"\n    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\nfi\n\n# Increase the maximum file descriptors if we can.\nif [ \"$cygwin\" = \"false\" -a \"$darwin\" = \"false\" ] ; then\n    MAX_FD_LIMIT=`ulimit -H -n`\n    if [ $? -eq 0 ] ; then\n        if [ \"$MAX_FD\" = \"maximum\" -o \"$MAX_FD\" = \"max\" ] ; then\n            MAX_FD=\"$MAX_FD_LIMIT\"\n        fi\n        ulimit -n $MAX_FD\n        if [ $? -ne 0 ] ; then\n            warn \"Could not set maximum file descriptor limit: $MAX_FD\"\n        fi\n    else\n        warn \"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\"\n    fi\nfi\n\n# For Darwin, add options to specify how the application appears in the dock\nif $darwin; then\n    GRADLE_OPTS=\"$GRADLE_OPTS \\\"-Xdock:name=$APP_NAME\\\" \\\"-Xdock:icon=$APP_HOME/media/gradle.icns\\\"\"\nfi\n\n# For Cygwin, switch paths to Windows format before running java\nif $cygwin ; then\n    APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`\n    CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`\n    JAVACMD=`cygpath --unix \"$JAVACMD\"`\n\n    # We build the pattern for arguments to be converted via cygpath\n    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`\n    SEP=\"\"\n    for dir in $ROOTDIRSRAW ; do\n        ROOTDIRS=\"$ROOTDIRS$SEP$dir\"\n        SEP=\"|\"\n    done\n    OURCYGPATTERN=\"(^($ROOTDIRS))\"\n    # Add a user-defined pattern to the cygpath arguments\n    if [ \"$GRADLE_CYGPATTERN\" != \"\" ] ; then\n        OURCYGPATTERN=\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\"\n    fi\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    i=0\n    for arg in \"$@\" ; do\n        CHECK=`echo \"$arg\"|egrep -c \"$OURCYGPATTERN\" -`\n        CHECK2=`echo \"$arg\"|egrep -c \"^-\"`                                 ### Determine if an option\n\n        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition\n            eval `echo args$i`=`cygpath --path --ignore --mixed \"$arg\"`\n        else\n            eval `echo args$i`=\"\\\"$arg\\\"\"\n        fi\n        i=$((i+1))\n    done\n    case $i in\n        (0) set -- ;;\n        (1) set -- \"$args0\" ;;\n        (2) set -- \"$args0\" \"$args1\" ;;\n        (3) set -- \"$args0\" \"$args1\" \"$args2\" ;;\n        (4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;\n        (5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;\n        (6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;\n        (7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;\n        (8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;\n        (9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;\n    esac\nfi\n\n# Split up the JVM_OPTS And GRADLE_OPTS values into an array, following the shell quoting and substitution rules\nfunction splitJvmOpts() {\n    JVM_OPTS=(\"$@\")\n}\neval splitJvmOpts $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS\nJVM_OPTS[${#JVM_OPTS[*]}]=\"-Dorg.gradle.appname=$APP_BASE_NAME\"\n\nexec \"$JAVACMD\" \"${JVM_OPTS[@]}\" -classpath \"$CLASSPATH\" org.gradle.wrapper.GradleWrapperMain \"$@\"\n"
        },
        {
          "name": "gradlew.bat",
          "type": "blob",
          "size": 2.259765625,
          "content": "@if \"%DEBUG%\" == \"\" @echo off\n@rem ##########################################################################\n@rem\n@rem  Gradle startup script for Windows\n@rem\n@rem ##########################################################################\n\n@rem Set local scope for the variables with windows NT shell\nif \"%OS%\"==\"Windows_NT\" setlocal\n\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nset DEFAULT_JVM_OPTS=\n\nset DIRNAME=%~dp0\nif \"%DIRNAME%\" == \"\" set DIRNAME=.\nset APP_BASE_NAME=%~n0\nset APP_HOME=%DIRNAME%\n\n@rem Find java.exe\nif defined JAVA_HOME goto findJavaFromJavaHome\n\nset JAVA_EXE=java.exe\n%JAVA_EXE% -version >NUL 2>&1\nif \"%ERRORLEVEL%\" == \"0\" goto init\n\necho.\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\necho.\necho Please set the JAVA_HOME variable in your environment to match the\necho location of your Java installation.\n\ngoto fail\n\n:findJavaFromJavaHome\nset JAVA_HOME=%JAVA_HOME:\"=%\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\n\nif exist \"%JAVA_EXE%\" goto init\n\necho.\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\necho.\necho Please set the JAVA_HOME variable in your environment to match the\necho location of your Java installation.\n\ngoto fail\n\n:init\n@rem Get command-line arguments, handling Windowz variants\n\nif not \"%OS%\" == \"Windows_NT\" goto win9xME_args\nif \"%@eval[2+2]\" == \"4\" goto 4NT_args\n\n:win9xME_args\n@rem Slurp the command line arguments.\nset CMD_LINE_ARGS=\nset _SKIP=2\n\n:win9xME_args_slurp\nif \"x%~1\" == \"x\" goto execute\n\nset CMD_LINE_ARGS=%*\ngoto execute\n\n:4NT_args\n@rem Get arguments from the 4NT Shell from JP Software\nset CMD_LINE_ARGS=%$\n\n:execute\n@rem Setup the command line\n\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\n\n@rem Execute Gradle\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%\n\n:end\n@rem End local scope for the variables with windows NT shell\nif \"%ERRORLEVEL%\"==\"0\" goto mainEnd\n\n:fail\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\nrem the _cmd.exe /c_ return code!\nif  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1\nexit /b 1\n\n:mainEnd\nif \"%OS%\"==\"Windows_NT\" endlocal\n\n:omega\n"
        },
        {
          "name": "settings.gradle",
          "type": "blob",
          "size": 0.02734375,
          "content": "include ':app', ':boommenu'\n"
        }
      ]
    }
  ]
}