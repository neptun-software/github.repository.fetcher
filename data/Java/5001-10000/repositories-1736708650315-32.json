{
  "metadata": {
    "timestamp": 1736708650315,
    "page": 32,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "android/testing-samples",
      "stars": 9221,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".bazelrc",
          "type": "blob",
          "size": 2.9013671875,
          "content": "# Configurations for testing with Bazel\n# Select a configuration by running `bazel test //my:target --config={headless, gui, local_device}`\n\n# Headless instrumentation tests\ntest:headless --test_arg=--enable_display=false\n\n# Graphical instrumentation tests. Ensure that $DISPLAY is set.\ntest:gui --test_env=DISPLAY\ntest:gui --test_arg=--enable_display=true\n\n# Testing with a local emulator or device. Ensure that `adb devices` lists the device.\n# Run tests serially.\ntest:local_device --test_strategy=exclusive\n# Use the local device broker type, as opposed to WRAPPED_EMULATOR.\ntest:local_device --test_arg=--device_broker_type=LOCAL_ADB_SERVER\n# Uncomment and set $device_id if there is more than one connected device.\n# test:local_device --test_arg=--device_serial_number=$device_id\n\ntest --flaky_test_attempts=3\n\n# The unified launcher runs in Python 2 host configuration\n# https://github.com/bazelbuild/bazel/issues/7899\nbuild --host_force_python=PY2\n\n# ------------------------\n# General RBE configuration\n# ------------------------\nbuild:remote --jobs=100\n\n# Java toolchain setup\nbuild:remote --java_toolchain=@bazel_tools//tools/jdk:toolchain_hostjdk8\nbuild:remote --host_java_toolchain=@bazel_tools//tools/jdk:toolchain_hostjdk8\nbuild:remote --host_javabase=@rbe_default//java:jdk\nbuild:remote --javabase=@rbe_default//java:jdk\n\n# C++ toolchain setup\nbuild:remote --extra_toolchains=@rbe_default//config:cc-toolchain\nbuild:remote --crosstool_top=@rbe_default//cc:toolchain\n\n# Remote instance setup\nbuild:remote --remote_instance_name=projects/bazel-untrusted/instances/default_instance\nbuild:remote --project_id=bazel-untrusted\n\n# Set various strategies so that all actions execute remotely. Mixing remote\n# and local execution will lead to errors unless the toolchain and remote\n# machine exactly match the host machine.\nbuild:remote --spawn_strategy=remote\nbuild:remote --define=EXECUTOR=remote\n\n# Enable the remote cache so action results can be shared across machines,\n# developers, and workspaces.\nbuild:remote --remote_cache=remotebuildexecution.googleapis.com\n\n# Enable remote execution so actions are performed on the remote systems.\nbuild:remote --remote_executor=remotebuildexecution.googleapis.com\n\n# Enable authentication. This will pick up application default credentials by\n# default.\nbuild:remote --google_default_credentials\n\n# -------------------------------------------\n# Custom RBE configuration for Android builds\n# -------------------------------------------\n\nbuild:remote_android --config=remote  # Reuse general configuration\n\n# Platform configuration\nbuild:remote_android --extra_execution_platforms=:android_platform\nbuild:remote_android --host_platform=:android_platform\nbuild:remote_android --platforms=:android_platform\n\nbuild:remote_android --strategy=DexBuilder=remote\nbuild:remote_android --noexperimental_check_desugar_deps # Workaround for singlejar incompatibility with RBE\nbuild:remote_android --incompatible_strict_action_env\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1142578125,
          "content": ".idea\n*.iml\nlocal.properties\nbuild\n.gradle\n# Eclipse project files\n.project\n.settings/\t\n.classpath\nbazel-*\n.DS_Store\n"
        },
        {
          "name": "BUILD.bazel",
          "type": "blob",
          "size": 1.9423828125,
          "content": "load(\"@rules_jvm_external//:defs.bzl\", \"artifact\")\nload(\"//:common_defs.bzl\", \"androidxLibVersion\", \"coreVersion\", \"espressoVersion\", \"extJUnitVersion\", \"extTruthVersion\", \"rulesVersion\", \"runnerVersion\")\n\nlicenses([\"notice\"])  # Apache 2.0\n\nandroid_library(\n    name = \"test_deps\",\n    visibility = [\"//visibility:public\"],\n    exports = [\n        artifact(\"androidx.annotation:annotation\"),\n        artifact(\"androidx.test.espresso:espresso-core\"),\n        artifact(\"androidx.test:rules\"),\n        artifact(\"androidx.test:runner\"),\n        artifact(\"androidx.test:monitor\"),\n        artifact(\"androidx.test.ext:junit\"),\n        artifact(\"androidx.test:core\"),\n        artifact(\"com.google.guava:guava\"),\n        artifact(\"com.google.inject:guice\"),\n        artifact(\"javax.inject:javax.inject\"),\n        artifact(\"junit:junit\"),\n        artifact(\"org.hamcrest:java-hamcrest\"),\n    ],\n)\n\n# Platform configuration for emulators on RBE for Bazel CI\nplatform(\n    name = \"android_platform\",\n    constraint_values = [\n        \"@bazel_tools//platforms:x86_64\",\n        \"@bazel_tools//platforms:linux\",\n        \"@bazel_toolchains//constraints:xenial\",\n        \"@bazel_tools//tools/cpp:clang\",\n    ],\n    # TODO(@jin): s/di-cloud-exp/rbe-containers/ when the official android-test container with libxcursor1 and libxcomposite1 is ready.\n    # URI for official container: docker://gcr.io/rbe-containers/ubuntu16_04-android_test@sha256:<sha256>\n    remote_execution_properties = \"\"\"\n        properties: {\n            name: \"container-image\"\n            value: \"docker://gcr.io/di-cloud-exp/rbe-ubuntu16-04-android@sha256:eb3828f71faf595f44b20b97d205e73e8a21982f1d7a170c3ec8f9d33ce3179a\"\n        }\n        properties: {\n            name: \"dockerNetwork\"\n            value: \"standard\"\n        }\n        properties: {\n            name: \"dockerPrivileged\"\n            value: \"true\"\n        }\n        properties: {\n            name: \"gceMachineType\"\n            value: \"n1-standard-2\"\n        }\n\"\"\",\n)\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 2.3603515625,
          "content": "# How to become a contributor and submit your own code\n\nTo contribute with a small fix, simply create a pull request. If you want to add a new sample or plan to request a big change, [contact us](https://groups.google.com/forum/#!forum/android-testing-support-library) first.\n\n## Contributing new samples\n\nIf you want to contribute full samples, we'd love to review and accept them. In case you need ideas, these are some samples on the roadmap:\n\n* Advanced Idling Resource \n* RecyclerView actions\n* Sharding \n* RunListener \n* Rules\n \nYou can also contribute to this list if you have a sample request.\n\n## Code style and structure\n\nPlease check out the [Code Style for Contributors](https://source.android.com/source/code-style.html) section in AOSP. Also, check out the rest of the samples and maintain as much consistency with them as possible.\n\n## Contributor License Agreements\n\nWe'd love to accept your sample apps and patches! Before we can take them, we\nhave to jump a couple of legal hurdles.\n\nPlease fill out either the individual or corporate Contributor License Agreement (CLA).\n\n  * If you are an individual writing original source code and you're sure you\n    own the intellectual property, then you'll need to sign an [individual CLA]\n    (https://cla.developers.google.com).\n  * If you work for a company that wants to allow you to contribute your work,\n    then you'll need to sign a [corporate CLA]\n    (https://cla.developers.google.com).\n  * Please make sure you sign both, Android and Google CLA\n\nFollow either of the two links above to access the appropriate CLA and\ninstructions for how to sign and return it. Once we receive it, we'll be able to\naccept your pull requests.\n\n## Contributing A Patch\n\n1. Submit an issue describing your proposed change to the repo in question.\n1. The repo owner will respond to your issue promptly.\n1. If your proposed change is accepted, and you haven't already done so, sign a\n   Contributor License Agreement (see details above).\n1. Fork the desired repo, develop and test your code changes.\n1. Ensure that your code adheres to the existing style in the sample to which\n   you are contributing. Refer to the\n   [Android Code Style Guide]\n   (https://source.android.com/source/code-style.html) for the\n   recommended coding standards for this organization.\n1. Ensure that your code has an appropriate set of unit tests which all pass.\n1. Submit a pull request.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0947265625,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright 2014 The Android Open Source Project\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 8.7314453125,
          "content": "Android testing samples\n===================================\n\nA collection of samples demonstrating different frameworks and techniques for automated testing.\n\n### Espresso Samples\n\n**[BasicSample](https://github.com/googlesamples/android-testing/blob/main/ui/espresso/BasicSample)** - Basic Espresso sample\n\n**[CustomMatcherSample](https://github.com/googlesamples/android-testing/blob/main/ui/espresso/CustomMatcherSample)** - Shows how to extend Espresso to match the *hint* property of an EditText\n\n**[DataAdapterSample](https://github.com/googlesamples/android-testing/blob/main/ui/espresso/DataAdapterSample)** - Showcases the `onData()` entry point for Espresso, for lists and AdapterViews\n\n**[FragmentScenarioSample](https://github.com/googlesamples/android-testing/blob/main/ui/espresso/FragmentScenarioSample)** - Basic usage of `FragmentScenario` with Espresso.\n\n**[IdlingResourceSample](https://github.com/googlesamples/android-testing/blob/main/ui/espresso/IdlingResourceSample)** - Synchronization with background jobs\n\n**[IntentsBasicSample](https://github.com/googlesamples/android-testing/blob/main/ui/espresso/IntentsBasicSample)** - Basic usage of `intended()` and `intending()`\n\n**[IntentsAdvancedSample](https://github.com/googlesamples/android-testing/blob/main/ui/espresso/IntentsAdvancedSample)** - Simulates a user fetching a bitmap using the camera\n\n**[MultiWindowSample](https://github.com/googlesamples/android-testing/blob/main/ui/espresso/MultiWindowSample)** - Shows how to point Espresso to different windows\n\n**[RecyclerViewSample](https://github.com/googlesamples/android-testing/blob/main/ui/espresso/RecyclerViewSample)** - RecyclerView actions for Espresso\n\n**[ScreenshotSample](https://github.com/googlesamples/android-testing/blob/main/ui/espresso/ScreenshotSample)** - Screenshot capturing and saving using Espresso and androidx.test.core APIs\n\n**[WebBasicSample](https://github.com/googlesamples/android-testing/blob/main/ui/espresso/WebBasicSample)** - Use Espresso-web to interact with WebViews\n\n**[BasicSampleBundled](https://github.com/googlesamples/android-testing/blob/main/ui/espresso/BasicSampleBundled)** - Basic sample for Eclipse and other IDEs\n\n**[MultiProcessSample](https://github.com/googlesamples/android-testing/blob/main/ui/espresso/MultiProcessSample)** - Showcases how to use multiprocess Espresso.\n### UiAutomator Sample\n\n**[BasicSample](https://github.com/googlesamples/android-testing/tree/main/ui/uiautomator/BasicSample)** - Basic UI Automator sample\n\n### AndroidJUnitRunner Sample\n\n**[AndroidJunitRunnerSample](https://github.com/googlesamples/android-testing/tree/main/runner/AndroidJunitRunnerSample)** - Showcases test annotations, parameterized tests and testsuite creation\n\n### JUnit4 Rules Sample\n\n**All previous samples use ActivityTestRule or IntentsTestRule but there's one specific to ServiceTestRule:\n\n**[BasicSample](https://github.com/googlesamples/android-testing/blob/main/ui/espresso/BasicSample)** - Simple usage of `ActivityTestRule`\n\n**[IntentsBasicSample](https://github.com/googlesamples/android-testing/blob/main/ui/espresso/IntentsBasicSample)** - Simple usage of `IntentsTestRule`\n\n**[ServiceTestRuleSample](https://github.com/googlesamples/android-testing/tree/main/integration/ServiceTestRuleSample)** - Simple usage of `ServiceTestRule`\n\nPrerequisites\n--------------\n\n- Android SDK v28\n- Android Build Tools v28.03\n\nGetting Started\n---------------\n\nThese samples use the Gradle build system. To build a project, enter the project directory and use the `./gradlew assemble` command or use \"Import Project\" in Android Studio.\n\n- Use `./gradlew connectedAndroidTest` to run the tests on a connected emulator or device.\n- Use `./gradlew test` to run the unit test on your local host.\n\nThere is a top-level `build.gradle` file if you want to build and test all samples from the root directory. This is mostly helpful to build on a CI (Continuous Integration) server.\n\nAndroidX Test Library\n---------------\nMany of these samples use the AndroidX Test Library. Visit the [Testing site on developer.android.com](https://developer.android.com/training/testing) for more information.\n\nExperimental Bazel Support\n--------------------------\n\n[![Build status](https://badge.buildkite.com/18dda320b265e9a8f20cb6141b1e80ca58fb62bdb443e527be.svg)](https://buildkite.com/bazel/android-testing)\n\nSome of these samples can be tested with [Bazel](https://bazel.build) on Linux. These samples contain a `BUILD.bazel` file, which is similar to a `build.gradle` file. The external dependencies are defined in the top level `WORKSPACE` file.\n\nThis is __experimental__ feature. To run the tests, please install the latest version of Bazel (0.12.0 or later) by following the [instructions on the Bazel website](https://docs.bazel.build/versions/master/install-ubuntu.html).\n\n### Bazel commands\n\n```\n# Clone the repository if you haven't.\n$ git clone https://github.com/google/android-testing\n$ cd android-testing\n\n# Edit the path to your local SDK at the top of the WORKSPACE file\n$ $EDITOR WORKSPACE\n\n# Test everything in a headless mode (no graphical display)\n$ bazel test //... --config=headless\n\n# Test a single test, e.g. ui/espresso/BasicSample/BUILD.bazel\n$ bazel test //ui/uiautomator/BasicSample:BasicSampleInstrumentationTest_21_x86 --config=headless\n\n# Query for all android_instrumentation_test targets\n$ bazel query 'kind(android_instrumentation_test, //...)'\n//ui/uiautomator/BasicSample:BasicSampleInstrumentationTest_23_x86\n//ui/uiautomator/BasicSample:BasicSampleInstrumentationTest_22_x86\n//ui/uiautomator/BasicSample:BasicSampleInstrumentationTest_21_x86\n//ui/uiautomator/BasicSample:BasicSampleInstrumentationTest_19_x86\n//ui/espresso/RecyclerViewSample:RecyclerViewSampleInstrumentationTest_23_x86\n//ui/espresso/RecyclerViewSample:RecyclerViewSampleInstrumentationTest_22_x86\n//ui/espresso/RecyclerViewSample:RecyclerViewSampleInstrumentationTest_21_x86\n//ui/espresso/RecyclerViewSample:RecyclerViewSampleInstrumentationTest_19_x86\n//ui/espresso/MultiWindowSample:MultiWindowSampleInstrumentationTest_23_x86\n//ui/espresso/MultiWindowSample:MultiWindowSampleInstrumentationTest_22_x86\n...\n\n# Test everything with GUI enabled\n$ bazel test //... --config=gui\n\n# Test with a local device or emulator. Ensure that `adb devices` lists the device.\n$ bazel test //... --config=local_device\n\n# If multiple devices are connected, add --device_serial_number=$identifier where $identifier is the name of the device in `adb devices`\n$ bazel test //... --config=local_device --test_arg=--device_serial_number=$identifier\n```\n\nFor more information, check out the documentation for [Android Instrumentation Tests in Bazel](https://docs.bazel.build/versions/master/android-instrumentation-test.html). You may also want to check out [Building an Android App with Bazel](https://docs.bazel.build/versions/master/tutorial/android-app.html), and the list of [Android Rules](https://docs.bazel.build/versions/master/be/android.html) in the Bazel Build Encyclopedia.\n\nKnown issues:\n\n* Building of APKs is supported on Linux, Mac and Windows, but testing is only supported on Linux.\n* `android_instrumentation_test.target_device` attribute still needs to be specified even if `--config=local_device` is used.\n* If using a local device or emulator, the APKs are not uninstalled automatically after the test. Use this command to\nremove the packages:\n    * `adb shell pm list packages com.example.android.testing | cut -d ':' -f 2 | tr -d '\\r' | xargs -L1 -t adb uninstall`\n    \nPlease file Bazel related issues against the [Bazel](https://github.com/bazelbuild/bazel) repository instead of this repository.\n\nSupport\n-------\n\n- Google+ Community: https://plus.google.com/communities/105153134372062985968\n- Stack Overflow: http://stackoverflow.com/questions/tagged/android-testing\n\nIf you've found an error in this sample, please file an issue:\nhttps://github.com/googlesamples/android-testing\n\nPatches are encouraged, and may be submitted by forking this project and\nsubmitting a pull request through GitHub. Please see CONTRIBUTING.md for more details.\n\nLicense\n-------\n\nCopyright 2015 The Android Open Source Project, Inc.\n\nLicensed to the Apache Software Foundation (ASF) under one or more contributor\nlicense agreements.  See the NOTICE file distributed with this work for\nadditional information regarding copyright ownership.  The ASF licenses this\nfile to you under the Apache License, Version 2.0 (the \"License\"); you may not\nuse this file except in compliance with the License.  You may obtain a copy of\nthe License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\nWARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the\nLicense for the specific language governing permissions and limitations under\nthe License.\n"
        },
        {
          "name": "WORKSPACE",
          "type": "blob",
          "size": 4.0478515625,
          "content": "load(\"@bazel_tools//tools/build_defs/repo:http.bzl\", \"http_archive\")\nload(\"@bazel_tools//tools/build_defs/repo:jvm.bzl\", \"jvm_maven_import_external\")\n\n# Set the path to your local SDK installation, or use the ANDROID_HOME environment variable.\nandroid_sdk_repository(name = \"androidsdk\")\n\n# Required for running emulator tests on RBE on Bazel CI\nandroid_ndk_repository(name = \"androidndk\")\n\n# Android Test Support\n#\n# This repository contains the supporting tools to run Android instrumentation tests,\n# like the emulator definitions (android_device) and the device broker/test runner.\nATS_TAG = \"1edfdab3134a7f01b37afabd3eebfd2c5bb05151\"\n\nATS_SHA256 = \"dcd1ff76aef1a26329d77863972780c8fe1fc8ff625747342239f0489c2837ec\"\n\nhttp_archive(\n    name = \"android_test_support\",\n    sha256 = ATS_SHA256,\n    strip_prefix = \"android-test-%s\" % ATS_TAG,\n    urls = [\"https://github.com/android/android-test/archive/%s.tar.gz\" % ATS_TAG],\n)\n\nload(\"@android_test_support//:repo.bzl\", \"android_test_repositories\")\n\nandroid_test_repositories()\n\nload(\"@bazel_tools//tools/build_defs/repo:http.bzl\", \"http_archive\")\n\nRULES_JVM_EXTERNAL_TAG = \"3.1\"\n\nRULES_JVM_EXTERNAL_SHA = \"e246373de2353f3d34d35814947aa8b7d0dd1a58c2f7a6c41cfeaff3007c2d14\"\n\nhttp_archive(\n    name = \"rules_jvm_external\",\n    sha256 = RULES_JVM_EXTERNAL_SHA,\n    strip_prefix = \"rules_jvm_external-%s\" % RULES_JVM_EXTERNAL_TAG,\n    url = \"https://github.com/bazelbuild/rules_jvm_external/archive/%s.zip\" % RULES_JVM_EXTERNAL_TAG,\n)\n\nload(\"@rules_jvm_external//:defs.bzl\", \"maven_install\")\nload(\"@rules_jvm_external//:specs.bzl\", \"maven\")\nload(\n    \"//:common_defs.bzl\",\n    \"androidxLibVersion\",\n    \"coreVersion\",\n    \"espressoVersion\",\n    \"extJUnitVersion\",\n    \"extTruthVersion\",\n    \"rulesVersion\",\n    \"runnerVersion\",\n    \"uiAutomatorVersion\",\n)\n\nmaven_install(\n    name = \"maven\",\n    artifacts = [\n        \"androidx.annotation:annotation:\" + androidxLibVersion,\n        \"androidx.core:core:\" + androidxLibVersion,\n        \"androidx.recyclerview:recyclerview:\" + androidxLibVersion,\n        \"androidx.test:core:\" + coreVersion,\n        \"androidx.test.espresso:espresso-accessibility:\" + espressoVersion,\n        \"androidx.test.espresso:espresso-contrib:\" + espressoVersion,\n        \"androidx.test.espresso:espresso-core:\" + espressoVersion,\n        \"androidx.test.espresso:espresso-idling-resource:\" + espressoVersion,\n        \"androidx.test.espresso:espresso-intents:\" + espressoVersion,\n        \"androidx.test.ext:junit:\" + extJUnitVersion,\n        \"androidx.test.ext:truth:\" + extTruthVersion,\n        \"androidx.test:monitor:\" + runnerVersion,\n        \"androidx.test:rules:\" + rulesVersion,\n        \"androidx.test:runner:\" + runnerVersion,\n        \"androidx.test.uiautomator:uiautomator:\" + uiAutomatorVersion,\n        \"androidx.viewpager:viewpager:1.0.0\",\n        maven.artifact(\n            \"com.google.inject\",\n            \"guice\",\n            \"4.0\",\n            neverlink = True,\n        ),\n        \"junit:junit:4.12\",\n        \"javax.inject:javax.inject:1\",\n        \"org.hamcrest:java-hamcrest:2.0.0.0\",\n        maven.artifact(\n            \"org.robolectric\",\n            \"robolectric\",\n            \"4.3-beta-1\",\n            neverlink = True,\n            exclusions = [\"com.google.guava:guava\"],\n        ),\n        \"com.google.guava:guava:26.0-android\",\n        \"com.google.truth:truth:0.42\",\n        \"com.google.android.apps.common.testing.accessibility.framework:accessibility-test-framework:2.0\",\n    ],\n    jetify = True,\n    repositories = [\n        \"https://maven.google.com\",\n        \"https://repo1.maven.org/maven2\",\n    ],\n    version_conflict_policy = \"pinned\",\n)\n\nhttp_archive(\n    name = \"bazel_toolchains\",\n    sha256 = \"4d348abfaddbcee0c077fc51bb1177065c3663191588ab3d958f027cbfe1818b\",\n    strip_prefix = \"bazel-toolchains-2.1.0\",\n    urls = [\n        \"https://github.com/bazelbuild/bazel-toolchains/releases/download/2.1.0/bazel-toolchains-2.1.0.tar.gz\",\n        \"https://mirror.bazel.build/github.com/bazelbuild/bazel-toolchains/archive/2.1.0.tar.gz\",\n    ],\n)\n\nload(\"@bazel_toolchains//rules:rbe_repo.bzl\", \"rbe_autoconfig\")\n\nrbe_autoconfig(name = \"rbe_default\")\n"
        },
        {
          "name": "bazelci",
          "type": "tree",
          "content": null
        },
        {
          "name": "common_defs.bzl",
          "type": "blob",
          "size": 0.4365234375,
          "content": "# Common constants for bazel builds\n\n# keep naming convention consistent with gradle variables, so version numbers can be auto-incremented\n# via a script\n\nandroidxLibVersion = \"1.0.0\"\ncoreVersion = \"1.2.0-beta01\"\nextJUnitVersion = \"1.1.1-beta01\"\nextTruthVersion = \"1.2.0-beta01\"\nrunnerVersion = \"1.2.0-beta01\"\nrulesVersion = \"1.2.0-beta01\"\nespressoVersion = \"3.2.0-beta01\"\nuiAutomatorVersion = \"2.2.0\"\nminSdkVersion = \"14\"\ntargetSdkVersion = \"28\"\n"
        },
        {
          "name": "integration",
          "type": "tree",
          "content": null
        },
        {
          "name": "projects.conf",
          "type": "blob",
          "size": 0.576171875,
          "content": "integration/ServiceTestRuleSample\nrunner/AndroidJunitRunnerSample\nrunner/AndroidTestOrchestratorSample\nui/espresso/AccessibilitySample\nui/espresso/BasicSample\nui/espresso/CustomMatcherSample\nui/espresso/DataAdapterSample\nui/espresso/EspressoDeviceSample\nui/espresso/FragmentScenarioSample\nui/espresso/IdlingResourceSample\nui/espresso/IntentsAdvancedSample\nui/espresso/IntentsBasicSample\nui/espresso/MultiWindowSample\nui/espresso/MultiProcessSample\nui/espresso/RecyclerViewSample\nui/espresso/ScreenshotSample\nui/espresso/WebBasicSample\nui/uiautomator/BasicSample\nunit/BasicNativeAndroidTest\n"
        },
        {
          "name": "renovate.json",
          "type": "blob",
          "size": 0.1298828125,
          "content": "{\n  \"$schema\": \"https://docs.renovatebot.com/renovate-schema.json\",\n  \"extends\": [\n    \"local>android/.github:renovate-config\"\n  ]\n}\n"
        },
        {
          "name": "runner",
          "type": "tree",
          "content": null
        },
        {
          "name": "test_all.sh",
          "type": "blob",
          "size": 0.5654296875,
          "content": "#!/bin/bash\n\nset -e  # Exit immediately if a command exits with a non-zero status.\n\nfor p in $(cat projects.conf); do\n   echo\n   echo\n   echo Running unit and Android tests in $p\n   echo \"=====================================================================\"\n\n   pushd $p > /dev/null  # Silent pushd\n   ./gradlew $@ testDebug nexusOneApi30DebugAndroidTest --info --no-watch-fs | sed \"s@^@$p @\"  # Prefix every line with directory\n   code=${PIPESTATUS[0]}\n   if [ \"$code\" -ne \"0\" ]; then\n       exit $code\n   fi\n   popd > /dev/null  # Silent popd\ndone\n\necho\necho \"ALL TESTS PASS\"\n"
        },
        {
          "name": "ui",
          "type": "tree",
          "content": null
        },
        {
          "name": "unit",
          "type": "tree",
          "content": null
        },
        {
          "name": "update_versions.sh",
          "type": "blob",
          "size": 4.353515625,
          "content": "#!/bin/bash\n\n# Simple script to update the androidx.test versions used in this project.\n\nset -ex  # Exit immediately if a command exits with a non-zero status.\n\n#repourl=\"\" # Leave empty to be ignored\n#repourl=\"file:\\/\\/\\/tmp\\/test_repo\\/m2repository\"\n#repourl=\"https:\\/\\/oss.sonatype.org\\/content\\/repositories\\/orgrobolectric-1216\"\n#repourl=\"http:\\/\\/localhost:1480\"\n# Versions:                             # axt_versions.bzl equivalents\nagpVersion=\"8.5.0\"\nkotlinVersion=\"1.9.22\"                  # KOTLIN_VERSION\ncompileSdk=\"34\"\nminSdkVersion=\"21\"\ntargetSdkVersion=\"34\"\nandroidxAnnotationVersion=\"1.5.0\"       # ANDROIDX_ANNOTATION_VERSION\nandroidxCompatVersion=\"1.5.1\"           # ANDROIDX_COMPAT_VERSION\nandroidxCoreVersion=\"1.9.0\"             # ANDROIDX_CORE_VERSION\nandroidxFragmentVersion=\"1.5.3\"         # ANDROIDX_FRAGMENT_VERSION\nandroidxRecyclerVersion=\"1.2.1\"         # ANDROIDX_RECYCLERVIEW_VERSION\nguavaVersion=\"31.1-android\"           # GUAVA_VERSION\ntruthVersion=\"1.1.3\"                    # TRUTH_VERSION\nrunnerVersion=\"1.6.1\"           # RUNNER_VERSION\nmonitorVersion=\"1.7.1\"          # MONITOR_VERSION\nrulesVersion=\"1.6.1\"            # RULES_VERSION\nservicesVersion=\"1.5.0\"         # SERVICES_VERSION\norchestratorVersion=\"1.5.0\"     # ORCHESTRATOR_VERSION\ncoreVersion=\"1.6.1\"             # CORE_VERSION\nextJUnitVersion=\"1.2.1\"         # ANDROIDX_JUNIT_VERSION\nextTruthVersion=\"1.6.0\"         # ANDROIDX_TRUTH_VERSION\nespressoVersion=\"3.6.1\"         # ESPRESSO_VERSION\nespressoDeviceVersion=\"1.0.1\"  # ESPRESSO_DEVICE_VERSION\nrobolectricVersion=\"4.13\"\nuiAutomatorVersion=\"2.3.0\"              # UIAUTOMATOR_VERSION\n\nfor p in $(cat projects.conf); do\n   echo\n   echo\n   echo Updating version in $p\n   echo \"=====================================================================\"\n   pushd $p > /dev/null  # Silent pushd\n\n   # Replace versions\n   sed -i \"s/agpVersion = \\([\\\"']\\).*\\1/agpVersion = \\\"$agpVersion\\\"/\" build.gradle\n   sed -i \"s/kotlinVersion = \\([\\\"']\\).*\\1/kotlinVersion = \\\"$kotlinVersion\\\"/\" build.gradle\n   sed -i \"s/coreVersion = \\([\\\"']\\).*\\1/coreVersion = \\\"$coreVersion\\\"/\" build.gradle\n   sed -i \"s/extJUnitVersion = \\([\\\"']\\).*\\1/extJUnitVersion = \\\"$extJUnitVersion\\\"/\" build.gradle\n   sed -i \"s/extTruthVersion = \\([\\\"']\\).*\\1/extTruthVersion = \\\"$extTruthVersion\\\"/\" build.gradle\n   sed -i \"s/monitorVersion = \\([\\\"']\\).*\\1/monitorVersion = \\\"$monitorVersion\\\"/\" build.gradle\n   sed -i \"s/runnerVersion = \\([\\\"']\\).*\\1/runnerVersion = \\\"$runnerVersion\\\"/\" build.gradle\n   sed -i \"s/rulesVersion = \\([\\\"']\\).*\\1/rulesVersion = \\\"$rulesVersion\\\"/\" build.gradle\n   sed -i \"s/servicesVersion = \\([\\\"']\\).*\\1/servicesVersion = \\\"$servicesVersion\\\"/\" build.gradle\n   sed -i \"s/orchestratorVersion = \\([\\\"']\\).*\\1/orchestratorVersion = \\\"$orchestratorVersion\\\"/\" build.gradle\n   sed -i \"s/espressoVersion = \\([\\\"']\\).*\\1/espressoVersion = \\\"$espressoVersion\\\"/\" build.gradle\n   sed -i \"s/androidxAnnotationVersion = \\([\\\"']\\).*\\1/androidxAnnotationVersion = \\\"$androidxAnnotationVersion\\\"/\" build.gradle\n   sed -i \"s/androidxCompatVersion = \\([\\\"']\\).*\\1/androidxCompatVersion = \\\"$androidxCompatVersion\\\"/\" build.gradle\n   sed -i \"s/androidxCoreVersion = \\([\\\"']\\).*\\1/androidxCoreVersion = \\\"$androidxCoreVersion\\\"/\" build.gradle\n   sed -i \"s/androidxFragmentVersion = \\([\\\"']\\).*\\1/androidxFragmentVersion = \\\"$androidxFragmentVersion\\\"/\" build.gradle\n   sed -i \"s/androidxRecyclerVersion = \\([\\\"']\\).*\\1/androidxRecyclerVersion = \\\"$androidxRecyclerVersion\\\"/\" build.gradle\n   sed -i \"s/guavaVersion = \\([\\\"']\\).*\\1/guavaVersion = \\\"$guavaVersion\\\"/\" build.gradle\n   sed -i \"s/truthVersion = \\([\\\"']\\).*\\1/truthVersion = \\\"$truthVersion\\\"/\" build.gradle\n   sed -i \"s/compileSdk .*/compileSdk $compileSdk/\" app/build.gradle\n   sed -i \"s/minSdkVersion .*/minSdkVersion $minSdkVersion/\" app/build.gradle\n   sed -i \"s/targetSdkVersion .*/targetSdkVersion $targetSdkVersion/\" app/build.gradle\n   sed -i \"s/uiAutomatorVersion = \\([\\\"']\\).*\\1/uiAutomatorVersion = \\\"$uiAutomatorVersion\\\"/\" build.gradle\n   sed -i \"s/robolectricVersion = \\([\\\"']\\).*\\1/robolectricVersion = \\\"$robolectricVersion\\\"/\" build.gradle\n   if [ ! -z \"$repourl\" ]\n   then\n      for G in build.gradle settings.gradle; do\n          sed -i \"s/.*google()/        google()\\n        maven {\\n            url \\\"$repourl\\\"\\n          allowInsecureProtocol=true\\n        }/\" $G\n      done\n   fi\n   popd > /dev/null  # Silent popd\n  done\necho\necho \"All Converted\"\n\n"
        }
      ]
    }
  ]
}