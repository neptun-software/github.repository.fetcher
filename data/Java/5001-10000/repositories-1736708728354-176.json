{
  "metadata": {
    "timestamp": 1736708728354,
    "page": 176,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "wiremock/wiremock",
      "stars": 6431,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.6171875,
          "content": "# Compiled source #\n###################\n*.com\n*.class\n*.dll\n*.exe\n*.o\n*.so\n*.pyc\n\n# Logs and databases #\n######################\n*.log\n*.sql\n*.sqlite\n\n# OS generated files #\n######################\n.DS_Store?\nehthumbs.db\nIcon?\nThumbs.db\n\n# Maven/Eclipse #\n#################\nbuild\n.project\n.classpath\n.settings\n.gradle\n**/target\nclasses\n.gradletasknamecache\n\n# IDEA #\n#################\nout\nwiremock.iml\nwiremock.ipr\nwiremock.iws\n**/*.iml\n.idea\n\n# NPM #\n##################\n**/node_modules\n\n# Misc #\n########\ncopy-admin.sh\n.DS_Store\n**/.DS_Store\n\n**/log.txt\n\n.vagrant\ntmp*\n\nbin\n\nscripts/client-cert.*\n!scripts/client-cert.conf\n\nnotes.txt"
        },
        {
          "name": ".idea",
          "type": "tree",
          "content": null
        },
        {
          "name": ".nvmrc",
          "type": "blob",
          "size": 0.0029296875,
          "content": "22\n"
        },
        {
          "name": ".run",
          "type": "tree",
          "content": null
        },
        {
          "name": ".sdkmanrc",
          "type": "blob",
          "size": 0.1103515625,
          "content": "# Enable auto-env through the sdkman_auto_env config\n# Add key=value pairs of SDKs to use below\njava=11.0.18-tem\n"
        },
        {
          "name": ".snyk",
          "type": "blob",
          "size": 0.712890625,
          "content": "# Snyk (https://snyk.io) policy file, patches or ignores known vulnerabilities.\nversion: v1.25.0\nignore: {}\npatch: {}\nexclude:\n  global:\n    - ./sample-war/**/*:\n        reason: test only sub-project\n        expires: 2044-05-23T00:00:00.000Z\n        created: 2024-05-23T13:24:10.953Z\n    - ./perf-test/**/*:\n        reason: test only sub-project\n        expires: 2044-05-23T00:00:00.000Z\n        created: 2024-05-23T13:24:46.178Z\n    - ./test-logging/**/*:\n        reason: test only sub-project\n        expires: 2044-05-23T00:00:00.000Z\n        created: 2024-05-23T13:25:17.519Z\n    - ./test-extension/**/*:\n        reason: test only sub-project\n        expires: 2044-05-23T00:00:00.000Z\n        created: 2024-05-23T13:25:37.801Z\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 7.0732421875,
          "content": "# Contributing to WireMock\n\n[![Docs](https://img.shields.io/static/v1?label=Documentation&message=public&color=green)](https://wiremock.org/docs/)\n[![a](https://img.shields.io/badge/slack-%23wiremock%5Fjava-brightgreen?style=flat&logo=slack)](https://slack.wiremock.org/)\n[![a](https://img.shields.io/badge/Public-Roadmap-brightgreen?style=flat)](https://github.com/orgs/wiremock/projects/4)\n[![Participate](https://img.shields.io/static/v1?label=Contributing&message=guide&color=blue)](https://github.com/wiremock/wiremock/blob/master/CONTRIBUTING.md)\n\nWireMock exists and continues to thrive due to the efforts of over 150 contributors,\nand we continue to welcome contributions to its evolution.\nRegardless of your expertise and time you could dedicate,\nthere're opportunities to participate and help the project!\n\n## Ways to contribute\n\nThis guide is for contributing to WireMock, also known as _WireMock Java_ or _WireMock Core_.\nThere are many other repositories waiting for contributors,\ncheck out the [Contributor Guide](https://github.com/wiremock/wiremock/blob/master/CONTRIBUTING.md)\nfor the references and details.\n\n## Getting started\n\nIf you want to contribute to WireMock Java codebase, do the following:\n\n* Join the [community Slack channel](http://slack.wiremock.org/),\n  especially the `#help-contributing` and `#wiremock-java` channels.\n  The latter is used to coordinate development of this repository.\n* Read the guidelines below\n* Start contributing by creating issues, submitting patches via pull requests, and helping others!\n\n## Building WireMock locally\n\nTo run all of WireMock's tests:\n\n```bash\n./gradlew check\n```\n\nTo build both JARs (thin and standalone), the JARs will be placed under ``build/libs``.:\n\n```bash\n./gradlew jar shadowJar\n```\n\nTo publish both JARs to your local Maven repository:\n\n```bash\n./gradlew publishToMavenLocal\n```\n\nIf you use IntelliJ, you can also use the corresponding run configurations, **Run Tests**, **Build WireMock** and **Publish to Maven local** respectively.\n\n## Contributing Code\n\nPlease be mindful of the\nfollowing guidelines:\n\n* All changes should include suitable tests, whether to demonstrate the bug or exercise and document the new feature.\n* Please make one change per pull request.\n* If the new feature is significantly large/complex/breaks existing behaviour, please first post a summary of your idea\non the GitHub Issue to generate a discussion. This will avoid significant amounts of coding time spent on changes that ultimately get rejected.\n* Try to avoid reformats of files that change the indentation, tabs to spaces etc., as this makes reviewing diffs much\nmore difficult.\n* Abide by [the Architecture Rules](https://github.com/wiremock/wiremock/tree/master/src/test/java/com/github/tomakehurst/wiremock/archunit) enforced by ArchUnit.\n\n### Before opening a PR\n\nWhen proposing new features or enhancements, we strongly recommend opening an issue first so that the problem being solved\nand the implementation design can be discussed. This helps to avoid time being invested in code that is never eventually\nmerged, and also promotes better designs by involving the community more widely.\n\nFor straightforward bug fixes where the issue is clear and can be illustrated via a failing unit or acceptance test, please\njust open a PR.\n\n### Code style\n\nWireMock uses the [Google Java style guide](https://google.github.io/styleguide/javaguide.html) and this is enforced in\nthe build via the Gradle [Spotless plugin](https://github.com/diffplug/spotless).\n\nWhen running pre-commit checks, if there are any formatting failures the Spotless plugin can fix them for you:\n\n```bash\n./gradlew spotlessApply\n```\n\nIf you use IntelliJ, you can also use the run configuration called **Run Spotless**,\nor there's also an [IntelliJ plugin](https://plugins.jetbrains.com/plugin/8527-google-java-format) for the same purpose.\n\n## Testing\n\nWireMock has a fairly comprehensive test suite which ensures it remains robust and correct as the codebase evolves.\n\nIn particular, there are acceptance tests for almost all features, where a full WireMock server is started up and tested\nvia its public APIs.\n\nNew features should by default come with acceptance tests covering the major positive and negative cases. Unit tests\nshould also be used judiciously where non-trivial logic would benefit from finer-grained checking.\n\nWhen making performance enhancements a representative benchmark test should be developed using an appropriate tool, and\nthe results before and after applying the change attached to the associated PR.\n\n## Writing documentation\n\nIt is expected that all new features and enhancements are documented properly,\nin most cases before the patches are merged.\n\nMost of WireMock's documentation is published on `wiremock.org`,\nwhich is a static website built using Jekyll.\nThe website sources are located here: [wiremock/wiremock.org](https://github.com/wiremock/wiremock.org).\nAll the documentation is located under the `_docs` directory as Markdown files,\nand it can be edited with all modern text editors and IDEs.\nSee the repository's contributor guide for more information.\n\n## Merge process\n\nMerges to this repository can be performed by the WireMock maintainer ([Tom Akehurst](https://github.com/tomakehurst))\nand by _co-maintainers_ assigned by him.\nThis is a [community role](https://github.com/wiremock/community/blob/main/governance/README.md)\ndesigned for WireMock itself and other key repositories,\nspecifically to improve velocity of reviews and changes.\n\n- The maintainers are responsible to verify the pull request readiness\n  in accordance with contributing guidelines (e.g. code quality, test automation, documentation, etc.).\n  The pull request can only be approved if these requirements are met\n- In the beginning, a review by one co-maintainer is required for the merge,\n  unless there are negative reviews and unaddressed comments by other contributors\n- After the approval, it is generally recommended to give at least 24 hours for reviews before merging\n\n### What can be merged by co-maintainers\n\nFor WireMock 3.x and beyond, co-maintainers can merge the following pull requests:\n\n- Minor features and improvements that do not impact the WireMock architecture\n- Refactorings, including the major ones, e.g. Guava replacement\n- Test Automation\n- Non-production repository changes: documentation (including Javadoc), GitHub Actions, bots and automation\n- Dependency updates for shaded dependencies, patch/minor versions for projects following the Semantic Versioning notation\n\nFor the WireMock 2.x branch, a decision of BDFL is is needed for any patch. \n\n### What CANNOT be merged by co-maintainers without BDFLâ€™s approval\n\nThe following changes need a review by Tom Akehurst before being merged.\n\n- Any compatibility breaking changes, including binary API and REST API,\n  unless pre-approved by the BDFL in the associated GitHub issue\n- New request matchers (patterns)\n- Substantial changes to WireMock Architecture and API.\n  Examples: New REST API end-points, major features like GraphQL fetching\n- Inclusion of new libraries, even if shaded\n- Major version Dependency updates, e.g. Jetty 11 => 12\n- Changes in the deliverable artefacts, e.g. new modules\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 11.091796875,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "NOTICE.txt",
          "type": "blob",
          "size": 0.09765625,
          "content": "This product includes software developed at\nThe Apache Software Foundation (http://www.apache.org/)."
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.35546875,
          "content": "# WireMock - flexible and open source API mocking\n\n<p align=\"center\">\n    <a href=\"https://wiremock.org\" target=\"_blank\">\n        <img width=\"512px\" src=\"https://wiremock.org/images/logos/wiremock/logo_wide.svg\" alt=\"WireMock Logo\"/>\n    </a>\n</p>\n\n[![Build Status](https://github.com/tomakehurst/wiremock/actions/workflows/build-and-test.yml/badge.svg)](https://github.com/tomakehurst/wiremock/actions/workflows/build-and-test.yml)\n[![Docs](https://img.shields.io/static/v1?label=Documentation&message=public&color=green)](https://wiremock.org/docs/)\n[![a](https://img.shields.io/badge/slack-Join%20us-brightgreen?style=flat&logo=slack)](https://slack.wiremock.org/)\n[![Participate](https://img.shields.io/static/v1?label=Contributing&message=guide&color=orange)](./CONTRIBUTING.md)\n[![Maven Central](https://img.shields.io/maven-central/v/org.wiremock/wiremock.svg)](https://search.maven.org/artifact/org.wiremock/wiremock)\n\nWireMock is a popular open-source tool for API mock testing with over 5 million downloads per month.\nIt can help you to create stable test and development environments,\nisolate yourself from flakey 3rd parties and simulate APIs that donâ€™t exist yet.\n\nStarted in 2011 as a Java library by [Tom Akehurst](https://github.com/tomakehurst),\nnow WireMock spans across multiple programming languages and technology stacks.\nIt can run as a library or client wrapper in many languages, or as a standalone server.\nThere is a big community behind the project and its ecosystem.\n\nWireMock supports several approaches for creating mock APIs -\nin code, via its REST API, as JSON files and by recording HTTP traffic proxied to another destination.\nWireMock has a rich matching system, allowing any part of an incoming request to be matched against complex and precise criteria.\nResponses of any complexity can be dynamically generated via the Handlebars based templating system.\nFinally, WireMock is easy to integrate into any workflow due to its numerous extension points and comprehensive APIs.\n\n## Key Features\n\nWireMock can run in unit tests, as a standalone process or a container.\nKey features include:\n\n- HTTP response stubbing, matchable on URL, header and body content patterns\n- Configuration via a fluent Java API, JSON files and JSON over HTTP\n- Record/playback of stubs\n- Request verification\n- Fault and response delays injection\n- Per-request conditional proxying\n- Browser proxying for request inspection and replacement\n- Stateful behaviour simulation\n- Extensibility\n\nFull documentation can be found at [wiremock.org/docs](https://wiremock.org/docs).\n\n## Questions and Issues\n\nIf you have a question about WireMock, or are experiencing a problem you're not sure is a bug please post a message to the\n[WireMock Community Slack](https://slack.wiremock.org) in the `#help` channel.\n\nOn the other hand if you're pretty certain you've found a bug please open an issue.\n\n## Log4j Notice\n\nWireMock only uses log4j in its test dependencies. Neither the thin nor standalone JAR depends on or embeds log4j, so\nyou can continue to use WireMock 2.32.0 and above without any risk of exposure to the recently discovered vulnerability.\n\n## Contributing\n\nWireMock exists and continues to thrive due to the efforts of contributors.\nRegardless of your expertise and time you could dedicate,\nthere're opportunities to participate and help the project!\n\nSee the [Contributing Guide](./CONTRIBUTING.md) for more information.\n"
        },
        {
          "name": "RELEASING.md",
          "type": "blob",
          "size": 1.896484375,
          "content": "# Checklist for releasing WireMock\n\n- [ ] Bump version number\n- [ ] Run the release\n- [ ] Publish the release note\n- [ ] Update the version on wiremock.org\n- [ ] Release the Docker image\n- [ ] Announce on the WireMock Community Slack\n- [ ] Announce on social\n\n## Pre-release - bump version number\nMake sure the version number has been updated. Do this either via\n\n```\n./gradlew bump-minor-version\n```\n\nor\n\n```\n./gradlew bump-patch-version\n```\n\nCommit and push the changes made by this command.\n\n## Release\nManually trigger the [Release](https://github.com/wiremock/wiremock/actions/workflows/release.yml) workflow from the master branch.\n\n## Publish the release note\nRelease drafter should have created a draft release note called \"next\". Check it for sanity and edit it to add any additional information and then set the tag\nto the version you've just released and publish it.\n\n## Update the version on wiremock.org\nhttps://github.com/wiremock/wiremock.org\n\nPublish the changes by merging to the `live-publish` branch and manually triggering the \"Deploy Jekyll site to Pages\" workflow.\n\n## Release the Docker image\n\n1. Wait for the JAR version you just published to be synced to Maven Central. You can check [here](https://repo1.maven.org/maven2/org/wiremock/wiremock/)\n2. Run the [Release workflow](https://github.com/wiremock/wiremock-docker/actions/workflows/release.yml), with the following parameters:\n    - Branch: `main`\n    - Image version (single-digit suffix like 2.35.0-1): Usually `1` \n    - Bundled WireMock version: The JAR version just published. You can check [here](https://repo1.maven.org/maven2/org/wiremock/wiremock/)\n3. Update the README manually on Docker Hub (until we get around to automating it).\n\n## Post an announcement on the WireMock Community Slack\nAnnounce in the #announcments channel then link to the message from #general.\n\n## Shout about it on as many social media platforms as possible\nYou know the drill."
        },
        {
          "name": "Vagrantfile",
          "type": "blob",
          "size": 1.4619140625,
          "content": "def windows?\n    (/cygwin|mswin|mingw|bccwin|wince|emx/ =~ RUBY_PLATFORM) != nil\nend\n\nVagrant.configure(\"2\") do |config|\n  config.vm.box = \"tcthien/java-dev-server\"\n  config.vm.box_version = \"0.0.7\"\n  config.vm.box_check_update = false\n\n  # config.vm.synced_folder \"#{Dir.home}/.m2/repository\", \"/share/mavenRepo\"\n  # config.vm.synced_folder \"\", \"/share/source\"\n\n  # MySQL Port\n  # config.vm.network \"forwarded_port\", guest: 3306, host: 3306\n  # Cassandra Port\n  # config.vm.network \"forwarded_port\", guest: 9042, host: 9042\n  # config.vm.network \"forwarded_port\", guest: 7000, host: 7000\n  # config.vm.network \"forwarded_port\", guest: 7001, host: 7001\n  # config.vm.network \"forwarded_port\", guest: 9160, host: 9160\n\n  config.vm.provider \"virtualbox\" do |vb|\n     vb.memory = \"2048\"\n     vb.name = \"codelab-server\"\n  end\n\n  # update node+npm\n  config.vm.provision \"shell\", privileged: false, inline: <<-SHELL\n    curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.6/install.sh | bash\n    export NVM_DIR=\"\\$HOME/.nvm\"\n    [ -s \"\\$NVM_DIR/nvm.sh\" ] && \\. \"\\$NVM_DIR/nvm.sh\"\n    [ -s \"\\$NVM_DIR/bash_completion\" ] && \\. \"\\$NVM_DIR/bash_completion\"\n    nvm install --lts\n  SHELL\n\n  # node/npm has symlink errors on windows hosts, this config disables them\n  if windows?\n    config.vm.provision \"shell\", privileged: false, inline: <<-SHELL\n      export NVM_DIR=\"\\$HOME/.nvm\"\n      [ -s \"\\$NVM_DIR/nvm.sh\" ] && \\. \"\\$NVM_DIR/nvm.sh\"\n      npm config set bin-links false\n    SHELL\n  end\nend"
        },
        {
          "name": "build.gradle",
          "type": "blob",
          "size": 16.298828125,
          "content": "import org.gradle.api.publish.maven.tasks.AbstractPublishToMaven\nimport org.gradle.plugins.signing.Sign\n\nbuildscript {\n  repositories {\n    maven {\n      url \"https://oss.sonatype.org\"\n    }\n    mavenCentral()\n  }\n}\n\nplugins {\n  id 'java-library'\n  id 'java-test-fixtures'\n  id 'scala'\n  id 'signing'\n  id 'maven-publish'\n  id 'io.github.gradle-nexus.publish-plugin' version '2.0.0'\n  id 'idea'\n  id 'eclipse'\n  id 'project-report'\n  id 'com.diffplug.spotless' version '6.25.0'\n  id 'com.github.johnrengelman.shadow' version '8.1.1'\n  id \"org.sonarqube\" version \"6.0.1.5171\"\n  id 'jacoco'\n  id \"me.champeau.jmh\" version \"0.7.2\"\n  id 'com.dorongold.task-tree' version '4.0.0'\n}\n\ngroup = 'org.wiremock'\n\nproject.ext {\n  versions = [\n    handlebars     : '4.3.1',\n    jetty          : '11.0.24',\n    guava          : '33.4.0-jre',\n    jackson        : '2.18.2',\n    xmlUnit        : '2.10.0',\n    jsonUnit       : '2.40.1',\n    junitJupiter   : '5.11.4'\n  ]\n}\n\nconfigurations {\n  standaloneOnly\n}\n\ndependencies {\n  api platform(\"org.eclipse.jetty:jetty-bom:$versions.jetty\")\n  api \"org.eclipse.jetty:jetty-server\"\n  api \"org.eclipse.jetty:jetty-servlet\"\n  api \"org.eclipse.jetty:jetty-servlets\"\n  api \"org.eclipse.jetty:jetty-webapp\"\n  api \"org.eclipse.jetty:jetty-proxy\"\n  api \"org.eclipse.jetty.http2:http2-server\"\n  api \"org.eclipse.jetty:jetty-alpn-server\"\n  api \"org.eclipse.jetty:jetty-alpn-java-server\"\n  api \"org.eclipse.jetty:jetty-alpn-java-client\"\n  api \"org.eclipse.jetty:jetty-alpn-client\"\n\n  api \"com.google.guava:guava:$versions.guava\", {\n    exclude group: 'com.google.code.findbugs', module: 'jsr305'\n  }\n  api platform(\"com.fasterxml.jackson:jackson-bom:$versions.jackson\")\n  api \"com.fasterxml.jackson.core:jackson-core\",\n      \"com.fasterxml.jackson.core:jackson-annotations\",\n      \"com.fasterxml.jackson.core:jackson-databind\",\n      \"com.fasterxml.jackson.datatype:jackson-datatype-jsr310\"\n  api \"org.apache.httpcomponents.client5:httpclient5:5.4.1\"\n  api \"org.xmlunit:xmlunit-core:$versions.xmlUnit\"\n  api \"org.xmlunit:xmlunit-legacy:$versions.xmlUnit\", {\n    exclude group: 'junit', module: 'junit'\n  }\n  api \"org.xmlunit:xmlunit-placeholders:$versions.xmlUnit\"\n  api \"net.javacrumbs.json-unit:json-unit-core:$versions.jsonUnit\"\n  api \"com.jayway.jsonpath:json-path:2.9.0\", {\n    exclude group: 'org.ow2.asm', module: 'asm'\n  }\n\n  implementation \"org.slf4j:slf4j-api:1.7.36\"\n  standaloneOnly \"org.slf4j:slf4j-nop:1.7.36\"\n\n  api \"net.sf.jopt-simple:jopt-simple:5.0.4\"\n\n  compileOnly(\"junit:junit:4.13.2\") {\n    exclude group: \"org.hamcrest\", module: \"hamcrest-core\"\n  }\n  compileOnly(platform(\"org.junit:junit-bom:$versions.junitJupiter\"))\n  compileOnly(\"org.junit.jupiter:junit-jupiter\")\n\n  api \"com.github.jknack:handlebars:$versions.handlebars\", {\n    exclude group: 'org.mozilla', module: 'rhino'\n  }\n  api(\"com.github.jknack:handlebars-helpers:$versions.handlebars\") {\n    exclude group: 'org.mozilla', module: 'rhino'\n    exclude group: 'org.apache.commons', module: 'commons-lang3'\n  }\n\n  api 'commons-fileupload:commons-fileupload:1.5'\n\n  api 'com.networknt:json-schema-validator:1.5.4'\n\n  testFixturesApi(\"org.junit.jupiter:junit-jupiter:$versions.junitJupiter\")\n  testFixturesApi(\"org.junit.platform:junit-platform-testkit\")\n  testFixturesApi(\"org.junit.platform:junit-platform-launcher\")\n  testFixturesApi(\"org.junit.jupiter:junit-jupiter-params\")\n  testFixturesApi('org.junit-pioneer:junit-pioneer:2.3.0')\n  testFixturesApi \"org.hamcrest:hamcrest-core:3.0\"\n  testFixturesApi \"org.hamcrest:hamcrest-library:3.0\"\n  testFixturesApi 'org.mockito:mockito-core:5.14.2'\n  testFixturesApi 'org.mockito:mockito-junit-jupiter:5.14.2'\n  testFixturesApi \"net.javacrumbs.json-unit:json-unit:$versions.jsonUnit\"\n  testFixturesApi \"org.skyscreamer:jsonassert:1.5.1\"\n  testFixturesApi 'com.toomuchcoding.jsonassert:jsonassert:0.8.0'\n  testFixturesApi 'org.awaitility:awaitility:4.2.2'\n  testFixturesApi \"commons-io:commons-io:2.18.0\"\n\n  testImplementation \"junit:junit:4.13.2\"\n  testRuntimeOnly(\"org.junit.vintage:junit-vintage-engine\")\n  testImplementation 'org.scala-lang:scala-library:2.13.15'\n  testImplementation 'com.tngtech.archunit:archunit-junit5:0.23.1'\n\n  testImplementation \"org.eclipse.jetty:jetty-client\"\n  testImplementation \"org.eclipse.jetty.http2:http2-http-client-transport\"\n  testRuntimeOnly files('src/test/resources/classpath file source/classpathfiles.zip', 'src/test/resources/classpath-filesource.jar')\n\n  testImplementation files('test-extension/test-extension.jar')\n\n  testImplementation 'org.openjdk.jmh:jmh-core:1.37'\n  testImplementation 'org.openjdk.jmh:jmh-generator-annprocess:1.37'\n\n  constraints {\n    implementation \"net.minidev:json-smart:2.5.1\", {\n      because 'Pinning this above the transitive version from json-path to get CVE fix'\n    }\n  }\n}\n\nallprojects {\n  apply plugin: 'com.diffplug.spotless'\n  spotless {\n    java {\n      target 'src/**/*.java'\n      googleJavaFormat('1.17.0')\n      licenseHeaderFile \"${rootDir}/gradle/spotless.java.license.txt\"\n      ratchetFrom 'origin/master'\n      trimTrailingWhitespace()\n      endWithNewline()\n      targetExclude '**/Tmp*.java'\n    }\n    groovyGradle {\n      target '**/*.gradle'\n      greclipse()\n      indentWithSpaces(2)\n      trimTrailingWhitespace()\n      endWithNewline()\n    }\n    json {\n      target 'src/**/*.json'\n      targetExclude '**/tmp*.json', 'src/test/resources/sample.json', 'src/main/resources/swagger/*.json', 'src/test/resources/filesource/subdir/deepfile.json', 'src/test/resources/schema-validation/*.json', 'src/test/resources/test-file-root/mappings/testjsonmapping.json', 'src/main/resources/assets/swagger-ui/swagger-ui-dist/package.json'\n      simple().indentWithSpaces(2)\n    }\n  }\n\n  tasks.withType(AbstractArchiveTask).configureEach {\n    preserveFileTimestamps = false\n    reproducibleFileOrder = true\n  }\n\n  ext {\n    runningOnCI = System.getenv('CI') == 'true'\n\n    repoUser =     this.hasProperty('sonatypeUser')     ? sonatypeUser : 'default'\n    repoPassword = this.hasProperty('sonatypePassword') ? sonatypePassword : 'default'\n\n    pomInfo = {\n      name 'WireMock'\n      url 'http://wiremock.org'\n      scm {\n        connection 'https://github.com/wiremock/wiremock.git'\n        developerConnection 'https://github.com/wiremock/wiremock.git'\n        url 'https://github.com/wiremock/wiremock'\n      }\n      licenses {\n        license {\n          name 'The Apache Software License, Version 2.0'\n          url 'http://www.apache.org/license/LICENSE-2.0.txt'\n          distribution 'repo'\n        }\n      }\n      developers {\n        developer {\n          id 'tomakehurst'\n          name 'Tom Akehurst'\n        }\n      }\n    }\n  }\n\n  repositories {\n    mavenCentral()\n  }\n\n  version = '3.10.0'\n\n  compileJava {\n    options.encoding = 'UTF-8'\n\n    // silences warnings about compiling against `sun` packages\n    options.compilerArgs += '-XDenableSunApiLintControl'\n    options.compilerArgs += '--add-exports=java.base/sun.security.x509=ALL-UNNAMED'\n  }\n\n  compileTestJava {\n    options.encoding = 'UTF-8'\n    options.compilerArgs += '-XDenableSunApiLintControl'\n    options.compilerArgs += '--add-exports=java.base/sun.security.x509=ALL-UNNAMED'\n  }\n\n  compileTestFixturesJava {\n    options.encoding = 'UTF-8'\n  }\n\n  test {\n    // Set the timezone for testing somewhere other than my machine to increase the chances of catching timezone bugs\n    systemProperty 'user.timezone', 'Australia/Sydney'\n\n    useJUnitPlatform()\n    exclude 'ignored/**'\n\n    maxParallelForks = runningOnCI ? 1 : 3\n\n    testLogging {\n      events \"FAILED\", \"SKIPPED\"\n      exceptionFormat \"full\"\n    }\n  }\n\n  jacocoTestReport {\n    reports {\n      xml.required = true\n    }\n  }\n  test.finalizedBy jacocoTestReport\n\n  sonarqube {\n    properties {\n      property \"sonar.projectKey\", \"wiremock_wiremock\"\n      property \"sonar.organization\", \"wiremock\"\n      property \"sonar.host.url\", \"https://sonarcloud.io\"\n    }\n  }\n\n  shadowJar.dependsOn jar\n}\n\ntest.classpath += sourceSets.main.compileClasspath + sourceSets.main.runtimeClasspath\n\njava {\n  sourceCompatibility = 11\n  targetCompatibility = 11\n  withSourcesJar()\n  withJavadocJar()\n}\n\ntask testJar(type: Jar, dependsOn: testClasses) {\n  archiveClassifier.set('tests')\n  from sourceSets.test.output\n}\n\nfinal DOCS_DIR = project(':').rootDir.getAbsolutePath() + '/docs-v2'\n\njar {\n  archiveBaseName.set('wiremock')\n  manifest {\n    attributes(\"Main-Class\": \"wiremock.Run\")\n    attributes(\"Add-Exports\": \"java.base/sun.security.x509\")\n    attributes(\"Implementation-Version\": project.version)\n    attributes(\"Implementation-Title\": \"WireMock\")\n  }\n}\n\nshadowJar {\n  archiveBaseName.set('wiremock-standalone')\n  archiveClassifier.set('')\n  configurations = [\n    project.configurations.runtimeClasspath,\n    project.configurations.standaloneOnly\n  ]\n\n  relocate \"org.mortbay\", 'wiremock.org.mortbay'\n  relocate \"org.eclipse\", 'wiremock.org.eclipse'\n  relocate \"org.codehaus\", 'wiremock.org.codehaus'\n  relocate \"com.google\", 'wiremock.com.google'\n  relocate \"com.google.thirdparty\", 'wiremock.com.google.thirdparty'\n  relocate \"com.fasterxml.jackson\", 'wiremock.com.fasterxml.jackson'\n  relocate \"org.apache\", 'wiremock.org.apache'\n  relocate \"org.xmlunit\", 'wiremock.org.xmlunit'\n  relocate \"org.hamcrest\", 'wiremock.org.hamcrest'\n  relocate \"org.skyscreamer\", 'wiremock.org.skyscreamer'\n  relocate \"org.json\", 'wiremock.org.json'\n  relocate \"net.minidev\", 'wiremock.net.minidev'\n  relocate \"com.jayway\", 'wiremock.com.jayway'\n  relocate \"org.objectweb\", 'wiremock.org.objectweb'\n  relocate \"org.custommonkey\", \"wiremock.org.custommonkey\"\n  relocate \"net.javacrumbs\", \"wiremock.net.javacrumbs\"\n  relocate \"net.sf\", \"wiremock.net.sf\"\n  relocate \"com.github.jknack\", \"wiremock.com.github.jknack\"\n  relocate \"org.antlr\", \"wiremock.org.antlr\"\n  relocate \"jakarta.servlet\", \"wiremock.jakarta.servlet\"\n  relocate \"org.checkerframework\", \"wiremock.org.checkerframework\"\n  relocate \"org.hamcrest\", \"wiremock.org.hamcrest\"\n  relocate \"org.slf4j\", \"wiremock.org.slf4j\"\n  relocate \"joptsimple\", \"wiremock.joptsimple\"\n  exclude 'joptsimple/HelpFormatterMessages.properties'\n  relocate \"org.yaml\", \"wiremock.org.yaml\"\n  relocate \"com.ethlo\", \"wiremock.com.ethlo\"\n  relocate \"com.networknt\", \"wiremock.com.networknt\"\n\n  dependencies {\n    exclude(dependency('junit:junit'))\n  }\n\n  mergeServiceFiles()\n\n  exclude 'META-INF/maven/**'\n  exclude 'META-INF/versions/17/**'\n  exclude 'META-INF/versions/21/**'\n  exclude 'META-INF/versions/22/**'\n  exclude 'module-info.class'\n  exclude 'handlebars-*.js'\n}\n\njavadoc {\n  exclude \"**/CertificateAuthority.java\"\n  options.addStringOption('Xdoclint:none', '-quiet')\n}\n\nsigning {\n  required {\n    !version.toString().contains(\"SNAPSHOT\") && (gradle.taskGraph.hasTask(\"uploadArchives\") || gradle.taskGraph.hasTask(\"publish\"))\n  }\n  def signingKey = providers.environmentVariable(\"OSSRH_GPG_SECRET_KEY\").orElse(\"\").get()\n  def signingPassphrase = providers.environmentVariable(\"OSSRH_GPG_SECRET_KEY_PASSWORD\").orElse(\"\").get()\n  if (!signingKey.isEmpty() && !signingPassphrase.isEmpty()) {\n    useInMemoryPgpKeys(signingKey, signingPassphrase)\n  }\n  sign publishing.publications\n}\n\npublishing {\n  repositories {\n    maven {\n      name = \"GitHubPackages\"\n      url = \"https://maven.pkg.github.com/wiremock/wiremock\"\n      credentials {\n        username = System.getenv(\"GITHUB_ACTOR\")\n        password = System.getenv(\"GITHUB_TOKEN\")\n      }\n    }\n  }\n\n  components.java.withVariantsFromConfiguration(configurations.testFixturesApiElements) { skip() }\n  components.java.withVariantsFromConfiguration(configurations.testFixturesRuntimeElements) { skip() }\n\n  getComponents().withType(AdhocComponentWithVariants).each { c ->\n    c.withVariantsFromConfiguration(project.configurations.shadowRuntimeElements) {\n      skip()\n    }\n  }\n\n  if (JavaVersion.current().isJava11()) {\n    publications {\n      mavenJava(MavenPublication) { publication ->\n        artifactId = \"${jar.getArchiveBaseName().get()}\"\n        from components.java\n        artifact testJar\n\n        pom.withXml {\n          asNode().appendNode('description', 'A web service test double for all occasions')\n          asNode().children().last() + pomInfo\n        }\n      }\n\n      standaloneJar(MavenPublication) { publication ->\n        artifactId = \"${jar.getArchiveBaseName().get()}-standalone\"\n        project.shadow.component(publication)\n\n        artifact sourcesJar\n        artifact javadocJar\n        artifact testJar\n\n        pom.packaging 'jar'\n        pom.withXml {\n          asNode().appendNode('description', 'A web service test double for all occasions - standalone edition')\n          asNode().children().last() + pomInfo\n        }\n      }\n    }\n  }\n\n  nexusPublishing {\n    // See https://github.com/wiremock/community/blob/main/infra/maven-central.md\n    repositories {\n      sonatype {\n        def envUsername = providers.environmentVariable(\"OSSRH_USERNAME\").orElse(\"\").get()\n        def envPassword = providers.environmentVariable(\"OSSRH_TOKEN\").orElse(\"\").get()\n        if (!envUsername.isEmpty() && !envPassword.isEmpty()) {\n          username.set(envUsername)\n          password.set(envPassword)\n        }\n      }\n    }\n  }\n}\n\ntask checkReleasePreconditions {\n  doLast {\n    def REQUIRED_GIT_BRANCH = 'master'\n    def currentGitBranch = 'git rev-parse --abbrev-ref HEAD'.execute().text.trim()\n    assert currentGitBranch == REQUIRED_GIT_BRANCH, \"Must be on the $REQUIRED_GIT_BRANCH branch in order to release to Sonatype\"\n  }\n}\n\ntask addGitTag {\n  doLast {\n    println \"git tag ${version}\".execute().text\n    println \"git push origin --tags\".execute().text\n  }\n}\n\npublish.dependsOn checkReleasePreconditions\npublish.dependsOn 'signStandaloneJarPublication'\npublish.dependsOn 'signMavenJavaPublication'\ntasks.withType(AbstractPublishToMaven).configureEach {\n  def signingTasks = tasks.withType(Sign)\n  mustRunAfter(signingTasks)\n}\n\nassemble.dependsOn jar, shadowJar\n\ntask release {\n  dependsOn clean, assemble, publish, addGitTag\n}\n\ntask localRelease {\n  dependsOn clean, assemble, publishToMavenLocal\n}\n\nvoid updateFiles(String currentVersion, String nextVersion) {\n\n  def filesWithVersion = [\n    'build.gradle'                                      : { \"version = '${it}\" },\n    'ui/package.json'                                   : { \"\\\"version\\\": \\\"${it}\\\"\" },\n    'src/main/resources/version.properties'             : { \"version=${it}\" },\n    'src/main/resources/swagger/wiremock-admin-api.json': { \"\\\"version\\\": \\\"${it}\\\"\" },\n    'src/main/resources/swagger/wiremock-admin-api.yaml': {\n      \"version: ${it}\"\n    }\n  ]\n\n  filesWithVersion.each { fileName, lineWithVersionTemplates ->\n    def file = file(fileName)\n    def lineWithVersionTemplateList = [lineWithVersionTemplates].flatten()\n\n    lineWithVersionTemplateList.each { lineWithVersionTemplate ->\n      def oldLine = lineWithVersionTemplate.call(currentVersion)\n      def newLine = lineWithVersionTemplate.call(nextVersion)\n      println \"Replacing '${oldLine}' with '${newLine}' in ${fileName}\"\n      file.text = file.text.replace(oldLine, newLine)\n    }\n  }\n}\n\ntask 'bump-patch-version' {\n  doLast {\n\n    def currentVersion = project.version\n    def nextVersion = \"${majorVersion}.${minorVersion}.${patchVersion + 1}\"\n\n    updateFiles(currentVersion, nextVersion)\n  }\n}\n\ntask 'bump-minor-version' {\n  doLast {\n\n    def currentVersion = project.version\n    def nextVersion = \"${majorVersion}.${minorVersion + 1}.0\"\n\n    updateFiles(currentVersion, nextVersion)\n  }\n}\n\ntask 'set-snapshot-version' {\n  doLast {\n\n    def currentVersion = project.version\n    def nextVersion = \"${majorVersion}.${minorVersion + 1}.0-SNAPSHOT\"\n\n    updateFiles(currentVersion, nextVersion)\n  }\n}\n\ntasks.withType(JavaCompile) {\n  options.compilerArgs.addAll([\n    \"--add-exports\",\n    \"java.base/sun.security.x509=ALL-UNNAMED\"\n  ])\n}\n\neclipse.classpath.file {\n  whenMerged {\n    entries.find{ it.path ==~ '.*JRE_CONTAINER.*' }.each {\n      it.entryAttributes['module'] = true\n      it.entryAttributes['add-exports'] = 'java.base/sun.security.x509=ALL-UNNAMED'\n    }\n  }\n}\n\nint getMajorVersion() {\n  Integer.valueOf(project.version.substring(0, project.version.indexOf('.')))\n}\n\nint getMinorVersion() {\n  Integer.valueOf(project.version.substring(project.version.indexOf('.') + 1, project.version.lastIndexOf('.')))\n}\n\nint getPatchVersion() {\n  Integer.valueOf(project.version.substring(project.version.lastIndexOf('.') + 1))\n}\n\nint getBetaVersion() {\n  Integer.valueOf(project.version.substring(project.version.lastIndexOf('-') + 1))\n}\n\nwrapper {\n  gradleVersion = '8.6'\n  distributionType = Wrapper.DistributionType.BIN\n}\n\njmh {\n  includes = ['.*benchmarks.*']\n  threads = 50\n}\n"
        },
        {
          "name": "gradle.properties",
          "type": "blob",
          "size": 0.1884765625,
          "content": "org.gradle.jvmargs=-Xmx3g\norg.gradle.parallel=true\norg.gradle.workers.max=4\nsystemProp.org.gradle.internal.http.connectionTimeout=120000\nsystemProp.org.gradle.internal.http.socketTimeout=120000"
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 8.2958984375,
          "content": "#!/bin/sh\n\n#\n# Copyright Â© 2015-2021 the original authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      https://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\n##############################################################################\n#\n#   Gradle start up script for POSIX generated by Gradle.\n#\n#   Important for running:\n#\n#   (1) You need a POSIX-compliant shell to run this script. If your /bin/sh is\n#       noncompliant, but you have some other compliant shell such as ksh or\n#       bash, then to run this script, type that shell name before the whole\n#       command line, like:\n#\n#           ksh Gradle\n#\n#       Busybox and similar reduced shells will NOT work, because this script\n#       requires all of these POSIX shell features:\n#         * functions;\n#         * expansions Â«$varÂ», Â«${var}Â», Â«${var:-default}Â», Â«${var+SET}Â»,\n#           Â«${var#prefix}Â», Â«${var%suffix}Â», and Â«$( cmd )Â»;\n#         * compound commands having a testable exit status, especially Â«caseÂ»;\n#         * various built-in commands including Â«commandÂ», Â«setÂ», and Â«ulimitÂ».\n#\n#   Important for patching:\n#\n#   (2) This script targets any POSIX shell, so it avoids extensions provided\n#       by Bash, Ksh, etc; in particular arrays are avoided.\n#\n#       The \"traditional\" practice of packing multiple parameters into a\n#       space-separated string is a well documented source of bugs and security\n#       problems, so this is (mostly) avoided, by progressively accumulating\n#       options in \"$@\", and eventually passing that to Java.\n#\n#       Where the inherited environment variables (DEFAULT_JVM_OPTS, JAVA_OPTS,\n#       and GRADLE_OPTS) rely on word-splitting, this is performed explicitly;\n#       see the in-line comments for details.\n#\n#       There are tweaks for specific operating systems such as AIX, CygWin,\n#       Darwin, MinGW, and NonStop.\n#\n#   (3) This script is generated from the Groovy template\n#       https://github.com/gradle/gradle/blob/HEAD/subprojects/plugins/src/main/resources/org/gradle/api/internal/plugins/unixStartScript.txt\n#       within the Gradle project.\n#\n#       You can find Gradle at https://github.com/gradle/gradle/.\n#\n##############################################################################\n\n# Attempt to set APP_HOME\n\n# Resolve links: $0 may be a link\napp_path=$0\n\n# Need this for daisy-chained symlinks.\nwhile\n    APP_HOME=${app_path%\"${app_path##*/}\"}  # leaves a trailing /; empty if no leading path\n    [ -h \"$app_path\" ]\ndo\n    ls=$( ls -ld \"$app_path\" )\n    link=${ls#*' -> '}\n    case $link in             #(\n      /*)   app_path=$link ;; #(\n      *)    app_path=$APP_HOME$link ;;\n    esac\ndone\n\n# This is normally unused\n# shellcheck disable=SC2034\nAPP_BASE_NAME=${0##*/}\nAPP_HOME=$( cd \"${APP_HOME:-./}\" && pwd -P ) || exit\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS='\"-Xmx64m\" \"-Xms64m\"'\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=maximum\n\nwarn () {\n    echo \"$*\"\n} >&2\n\ndie () {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n} >&2\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\nnonstop=false\ncase \"$( uname )\" in                #(\n  CYGWIN* )         cygwin=true  ;; #(\n  Darwin* )         darwin=true  ;; #(\n  MSYS* | MINGW* )  msys=true    ;; #(\n  NONSTOP* )        nonstop=true ;;\nesac\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=$JAVA_HOME/jre/sh/java\n    else\n        JAVACMD=$JAVA_HOME/bin/java\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=java\n    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\nfi\n\n# Increase the maximum file descriptors if we can.\nif ! \"$cygwin\" && ! \"$darwin\" && ! \"$nonstop\" ; then\n    case $MAX_FD in #(\n      max*)\n        # In POSIX sh, ulimit -H is undefined. That's why the result is checked to see if it worked.\n        # shellcheck disable=SC3045\n        MAX_FD=$( ulimit -H -n ) ||\n            warn \"Could not query maximum file descriptor limit\"\n    esac\n    case $MAX_FD in  #(\n      '' | soft) :;; #(\n      *)\n        # In POSIX sh, ulimit -n is undefined. That's why the result is checked to see if it worked.\n        # shellcheck disable=SC3045\n        ulimit -n \"$MAX_FD\" ||\n            warn \"Could not set maximum file descriptor limit to $MAX_FD\"\n    esac\nfi\n\n# Collect all arguments for the java command, stacking in reverse order:\n#   * args from the command line\n#   * the main class name\n#   * -classpath\n#   * -D...appname settings\n#   * --module-path (only if needed)\n#   * DEFAULT_JVM_OPTS, JAVA_OPTS, and GRADLE_OPTS environment variables.\n\n# For Cygwin or MSYS, switch paths to Windows format before running java\nif \"$cygwin\" || \"$msys\" ; then\n    APP_HOME=$( cygpath --path --mixed \"$APP_HOME\" )\n    CLASSPATH=$( cygpath --path --mixed \"$CLASSPATH\" )\n\n    JAVACMD=$( cygpath --unix \"$JAVACMD\" )\n\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    for arg do\n        if\n            case $arg in                                #(\n              -*)   false ;;                            # don't mess with options #(\n              /?*)  t=${arg#/} t=/${t%%/*}              # looks like a POSIX filepath\n                    [ -e \"$t\" ] ;;                      #(\n              *)    false ;;\n            esac\n        then\n            arg=$( cygpath --path --ignore --mixed \"$arg\" )\n        fi\n        # Roll the args list around exactly as many times as the number of\n        # args, so each arg winds up back in the position where it started, but\n        # possibly modified.\n        #\n        # NB: a `for` loop captures its iteration list before it begins, so\n        # changing the positional parameters here affects neither the number of\n        # iterations, nor the values presented in `arg`.\n        shift                   # remove old arg\n        set -- \"$@\" \"$arg\"      # push replacement arg\n    done\nfi\n\n# Collect all arguments for the java command;\n#   * $DEFAULT_JVM_OPTS, $JAVA_OPTS, and $GRADLE_OPTS can contain fragments of\n#     shell script including quotes and variable substitutions, so put them in\n#     double quotes to make sure that they get re-expanded; and\n#   * put everything else in single quotes, so that it's not re-expanded.\n\nset -- \\\n        \"-Dorg.gradle.appname=$APP_BASE_NAME\" \\\n        -classpath \"$CLASSPATH\" \\\n        org.gradle.wrapper.GradleWrapperMain \\\n        \"$@\"\n\n# Stop when \"xargs\" is not available.\nif ! command -v xargs >/dev/null 2>&1\nthen\n    die \"xargs is not available\"\nfi\n\n# Use \"xargs\" to parse quoted args.\n#\n# With -n1 it outputs one arg per line, with the quotes and backslashes removed.\n#\n# In Bash we could simply go:\n#\n#   readarray ARGS < <( xargs -n1 <<<\"$var\" ) &&\n#   set -- \"${ARGS[@]}\" \"$@\"\n#\n# but POSIX shell has neither arrays nor command substitution, so instead we\n# post-process each arg (as a line of input to sed) to backslash-escape any\n# character that might be a shell metacharacter, then use eval to reverse\n# that process (while maintaining the separation between arguments), and wrap\n# the whole thing up as a single \"set\" statement.\n#\n# This will of course break if any of these variables contains a newline or\n# an unmatched quote.\n#\n\neval \"set -- $(\n        printf '%s\\n' \"$DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS\" |\n        xargs -n1 |\n        sed ' s~[^-[:alnum:]+,./:=@_]~\\\\&~g; ' |\n        tr '\\n' ' '\n    )\" '\"$@\"'\n\nexec \"$JAVACMD\" \"$@\"\n"
        },
        {
          "name": "gradlew.bat",
          "type": "blob",
          "size": 2.80078125,
          "content": "@rem\r\n@rem Copyright 2015 the original author or authors.\r\n@rem\r\n@rem Licensed under the Apache License, Version 2.0 (the \"License\");\r\n@rem you may not use this file except in compliance with the License.\r\n@rem You may obtain a copy of the License at\r\n@rem\r\n@rem      https://www.apache.org/licenses/LICENSE-2.0\r\n@rem\r\n@rem Unless required by applicable law or agreed to in writing, software\r\n@rem distributed under the License is distributed on an \"AS IS\" BASIS,\r\n@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n@rem See the License for the specific language governing permissions and\r\n@rem limitations under the License.\r\n@rem\r\n\r\n@if \"%DEBUG%\"==\"\" @echo off\r\n@rem ##########################################################################\r\n@rem\r\n@rem  Gradle startup script for Windows\r\n@rem\r\n@rem ##########################################################################\r\n\r\n@rem Set local scope for the variables with windows NT shell\r\nif \"%OS%\"==\"Windows_NT\" setlocal\r\n\r\nset DIRNAME=%~dp0\r\nif \"%DIRNAME%\"==\"\" set DIRNAME=.\r\n@rem This is normally unused\r\nset APP_BASE_NAME=%~n0\r\nset APP_HOME=%DIRNAME%\r\n\r\n@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.\r\nfor %%i in (\"%APP_HOME%\") do set APP_HOME=%%~fi\r\n\r\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\r\nset DEFAULT_JVM_OPTS=\"-Xmx64m\" \"-Xms64m\"\r\n\r\n@rem Find java.exe\r\nif defined JAVA_HOME goto findJavaFromJavaHome\r\n\r\nset JAVA_EXE=java.exe\r\n%JAVA_EXE% -version >NUL 2>&1\r\nif %ERRORLEVEL% equ 0 goto execute\r\n\r\necho.\r\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\r\necho.\r\necho Please set the JAVA_HOME variable in your environment to match the\r\necho location of your Java installation.\r\n\r\ngoto fail\r\n\r\n:findJavaFromJavaHome\r\nset JAVA_HOME=%JAVA_HOME:\"=%\r\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\r\n\r\nif exist \"%JAVA_EXE%\" goto execute\r\n\r\necho.\r\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\r\necho.\r\necho Please set the JAVA_HOME variable in your environment to match the\r\necho location of your Java installation.\r\n\r\ngoto fail\r\n\r\n:execute\r\n@rem Setup the command line\r\n\r\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\r\n\r\n\r\n@rem Execute Gradle\r\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*\r\n\r\n:end\r\n@rem End local scope for the variables with windows NT shell\r\nif %ERRORLEVEL% equ 0 goto mainEnd\r\n\r\n:fail\r\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\r\nrem the _cmd.exe /c_ return code!\r\nset EXIT_CODE=%ERRORLEVEL%\r\nif %EXIT_CODE% equ 0 set EXIT_CODE=1\r\nif not \"\"==\"%GRADLE_EXIT_CONSOLE%\" exit %EXIT_CODE%\r\nexit /b %EXIT_CODE%\r\n\r\n:mainEnd\r\nif \"%OS%\"==\"Windows_NT\" endlocal\r\n\r\n:omega\r\n"
        },
        {
          "name": "jdepend.xsl",
          "type": "blob",
          "size": 14.162109375,
          "content": "<!-- Copyright (C) 2004 The Apache Software Foundation. All rights reserved. -->\n<xsl:stylesheet\txmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" version=\"1.0\">\n\n    <!--\n       Copyright 2002-2004   Apache Software Foundation\n\n       Licensed under the Apache License, Version 2.0 (the \"License\");\n       you may not use this file except in compliance with the License.\n       You may obtain a copy of the License at\n\n           http://www.apache.org/licenses/LICENSE-2.0\n\n       Unless required by applicable law or agreed to in writing, software\n       distributed under the License is distributed on an \"AS IS\" BASIS,\n       WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n       See the License for the specific language governing permissions and\n       limitations under the License.\n\n     -->\n\n    <xsl:output method=\"html\" indent=\"yes\"/>\n\n    <xsl:template match=\"JDepend\">\n        <html>\n            <head>\n                <title>JDepend Analysis</title>\n\n                <style type=\"text/css\">\n                    body {\n                    font:normal 68% verdana,arial,helvetica;\n                    color:#000000;\n                    }\n                    table tr td, tr th {\n                    font-size: 68%;\n                    }\n                    table.details tr th{\n                    font-weight: bold;\n                    text-align:left;\n                    background:#a6caf0;\n                    }\n                    table.details tr td{\n                    background:#eeeee0;\n                    }\n\n                    p {\n                    line-height:1.5em;\n                    margin-top:0.5em; margin-bottom:1.0em;\n                    margin-left:2em;\n                    margin-right:2em;\n                    }\n                    h1 {\n                    margin: 0px 0px 5px; font: 165% verdana,arial,helvetica\n                    }\n                    h2 {\n                    margin-top: 1em; margin-bottom: 0.5em; font: bold 125% verdana,arial,helvetica\n                    }\n                    h3 {\n                    margin-bottom: 0.5em; font: bold 115% verdana,arial,helvetica\n                    }\n                    h4 {\n                    margin-bottom: 0.5em; font: bold 100% verdana,arial,helvetica\n                    }\n                    h5 {\n                    margin-bottom: 0.5em; font: bold 100% verdana,arial,helvetica\n                    }\n                    h6 {\n                    margin-bottom: 0.5em; font: bold 100% verdana,arial,helvetica\n                    }\n                    .Error {\n                    font-weight:bold; color:red;\n                    }\n                    .Failure {\n                    font-weight:bold; color:purple;\n                    }\n                    .Properties {\n                    text-align:right;\n                    }\n                </style>\n\n\n            </head>\n            <body>\n                <!--h1>JDepend Report</h1>\n                <ul>\n                <xsl:for-each select=\"./Packages/Package\">\n                            <xsl:sort select=\"@name\"/>\n                    <li><xsl:value-of select=\"@name\"/></li>\n                </xsl:for-each>\n                </ul-->\n\n                <h1><a name=\"top\">JDepend Analysis</a></h1>\n                <p align=\"right\">Designed for use with <a href=\"http://www.clarkware.com/software/JDepend.html\">JDepend</a> and <a href=\"http://jakarta.apache.org\">Ant</a>.</p>\n                <hr size=\"2\" />\n\n                <table width=\"100%\"><tr><td>\n                    <a name=\"NVsummary\"><h2>Summary</h2></a>\n                </td><td align=\"right\">\n                    [<a href=\"#NVsummary\">summary</a>]\n                    [<a href=\"#NVpackages\">packages</a>]\n                    [<a href=\"#NVcycles\">cycles</a>]\n                    [<a href=\"#NVexplanations\">explanations</a>]\n                </td></tr></table>\n\n                <table width=\"100%\" class=\"details\">\n                    <tr>\n                        <th>Package</th>\n                        <th>Total Classes</th>\n                        <th><a href=\"#EXnumber\">Abstract Classes</a></th>\n                        <th><a href=\"#EXnumber\">Concrete Classes</a></th>\n                        <th><a href=\"#EXafferent\">Afferent Couplings</a></th>\n                        <th><a href=\"#EXefferent\">Efferent Couplings</a></th>\n                        <th><a href=\"#EXabstractness\">Abstractness</a></th>\n                        <th><a href=\"#EXinstability\">Instability</a></th>\n                        <th><a href=\"#EXdistance\">Distance</a></th>\n\n                    </tr>\n                    <xsl:for-each select=\"./Packages/Package\">\n                        <xsl:if test=\"count(error) = 0\">\n                            <tr>\n                                <td align=\"left\">\n                                    <a>\n                                        <xsl:attribute name=\"href\">#PK<xsl:value-of select=\"@name\"/>\n                                        </xsl:attribute>\n                                        <xsl:value-of select=\"@name\"/>\n                                    </a>\n                                </td>\n                                <td align=\"right\"><xsl:value-of select=\"Stats/TotalClasses\"/></td>\n                                <td align=\"right\"><xsl:value-of select=\"Stats/AbstractClasses\"/></td>\n                                <td align=\"right\"><xsl:value-of select=\"Stats/ConcreteClasses\"/></td>\n                                <td align=\"right\"><xsl:value-of select=\"Stats/Ca\"/></td>\n                                <td align=\"right\"><xsl:value-of select=\"Stats/Ce\"/></td>\n                                <td align=\"right\"><xsl:value-of select=\"Stats/A\"/></td>\n                                <td align=\"right\"><xsl:value-of select=\"Stats/I\"/></td>\n                                <td align=\"right\"><xsl:value-of select=\"Stats/D\"/></td>\n\n\n                            </tr>\n                        </xsl:if>\n                    </xsl:for-each>\n                    <xsl:for-each select=\"./Packages/Package\">\n                        <xsl:if test=\"count(error) &gt; 0\">\n                            <tr>\n                                <td align=\"left\">\n                                    <xsl:value-of select=\"@name\"/>\n                                </td>\n                                <td align=\"left\" colspan=\"8\"><xsl:value-of select=\"error\"/></td>\n                            </tr>\n                        </xsl:if>\n                    </xsl:for-each>\n                </table>\n\n                <table width=\"100%\"><tr><td>\n                    <a name=\"NVpackages\"><h2>Packages</h2></a>\n                </td><td align=\"right\">\n                    [<a href=\"#NVsummary\">summary</a>]\n                    [<a href=\"#NVpackages\">packages</a>]\n                    [<a href=\"#NVcycles\">cycles</a>]\n                    [<a href=\"#NVexplanations\">explanations</a>]\n                </td></tr></table>\n\n                <xsl:for-each select=\"./Packages/Package\">\n                    <xsl:if test=\"count(error) = 0\">\n                        <h3><a><xsl:attribute name=\"name\">PK<xsl:value-of select=\"@name\"/></xsl:attribute>\n                            <xsl:value-of select=\"@name\"/></a></h3>\n\n                        <table width=\"100%\"><tr>\n                            <td><a href=\"#EXafferent\">Afferent Couplings</a>: <xsl:value-of select=\"Stats/Ca\"/></td>\n                            <td><a href=\"#EXefferent\">Efferent Couplings</a>: <xsl:value-of select=\"Stats/Ce\"/></td>\n                            <td><a href=\"#EXabstractness\">Abstractness</a>: <xsl:value-of select=\"Stats/A\"/></td>\n                            <td><a href=\"#EXinstability\">Instability</a>: <xsl:value-of select=\"Stats/I\"/></td>\n                            <td><a href=\"#EXdistance\">Distance</a>: <xsl:value-of select=\"Stats/D\"/></td>\n                        </tr></table>\n\n                        <table width=\"100%\" class=\"details\">\n                            <tr>\n                                <th>Abstract Classes</th>\n                                <th>Concrete Classes</th>\n                                <th>Used by Packages</th>\n                                <th>Uses Packages</th>\n                            </tr>\n                            <tr>\n                                <td valign=\"top\" width=\"25%\">\n                                    <xsl:if test=\"count(AbstractClasses/Class)=0\">\n                                        <i>None</i>\n                                    </xsl:if>\n                                    <xsl:for-each select=\"AbstractClasses/Class\">\n                                        <xsl:value-of select=\"node()\"/><br/>\n                                    </xsl:for-each>\n                                </td>\n                                <td valign=\"top\" width=\"25%\">\n                                    <xsl:if test=\"count(ConcreteClasses/Class)=0\">\n                                        <i>None</i>\n                                    </xsl:if>\n                                    <xsl:for-each select=\"ConcreteClasses/Class\">\n                                        <xsl:value-of select=\"node()\"/><br/>\n                                    </xsl:for-each>\n                                </td>\n                                <td valign=\"top\" width=\"25%\">\n                                    <xsl:if test=\"count(UsedBy/Package)=0\">\n                                        <i>None</i>\n                                    </xsl:if>\n                                    <xsl:for-each select=\"UsedBy/Package\">\n                                        <a>\n                                            <xsl:attribute name=\"href\">#PK<xsl:value-of select=\"node()\"/></xsl:attribute>\n                                            <xsl:value-of select=\"node()\"/>\n                                        </a><br/>\n                                    </xsl:for-each>\n                                </td>\n                                <td valign=\"top\" width=\"25%\">\n                                    <xsl:if test=\"count(DependsUpon/Package)=0\">\n                                        <i>None</i>\n                                    </xsl:if>\n                                    <xsl:for-each select=\"DependsUpon/Package\">\n                                        <a>\n                                            <xsl:attribute name=\"href\">#PK<xsl:value-of select=\"node()\"/></xsl:attribute>\n                                            <xsl:value-of select=\"node()\"/>\n                                        </a><br/>\n                                    </xsl:for-each>\n                                </td>\n                            </tr>\n                        </table>\n                    </xsl:if>\n                </xsl:for-each>\n\n                <table width=\"100%\"><tr><td>\n                    <a name=\"NVcycles\"><h2>Cycles</h2></a>\n                </td><td align=\"right\">\n                    [<a href=\"#NVsummary\">summary</a>]\n                    [<a href=\"#NVpackages\">packages</a>]\n                    [<a href=\"#NVcycles\">cycles</a>]\n                    [<a href=\"#NVexplanations\">explanations</a>]\n                </td></tr></table>\n\n                <xsl:if test=\"count(Cycles/Package) = 0\">\n                    <p>There are no cyclic dependancies.</p>\n                </xsl:if>\n                <xsl:for-each select=\"Cycles/Package\">\n                    <h3><xsl:value-of select=\"@Name\"/></h3><p>\n                    <xsl:for-each select=\"Package\">\n                        <xsl:value-of select=\".\"/><br/>\n                    </xsl:for-each></p>\n                </xsl:for-each>\n\n                <table width=\"100%\"><tr><td>\n                    <a name=\"NVexplanations\"><h2>Explanations</h2></a>\n                </td><td align=\"right\">\n                    [<a href=\"#NVsummary\">summary</a>]\n                    [<a href=\"#NVpackages\">packages</a>]\n                    [<a href=\"#NVcycles\">cycles</a>]\n                    [<a href=\"#NVexplanations\">explanations</a>]\n                </td></tr></table>\n\n                <p>The following explanations are for quick reference and are lifted directly from the original <a href=\"http://www.clarkware.com/software/JDepend.html\">JDepend documentation</a>.</p>\n\n                <h3><a name=\"EXnumber\">Number of Classes</a></h3>\n                <p>The number of concrete and abstract classes (and interfaces) in the package is an indicator of the extensibility of the package.</p>\n                <h3><a name=\"EXafferent\">Afferent Couplings</a></h3>\n                <p>The number of other packages that depend upon classes within the package is an indicator of the package's responsibility. </p>\n                <h3><a name=\"EXefferent\">Efferent Couplings</a></h3>\n                <p>The number of other packages that the classes in the package depend upon is an indicator of the package's independence. </p>\n                <h3><a name=\"EXabstractness\">Abstractness</a></h3>\n                <p>The ratio of the number of abstract classes (and interfaces) in the analyzed package to the total number of classes in the analyzed package. </p>\n                <p>The range for this metric is 0 to 1, with A=0 indicating a completely concrete package and A=1 indicating a completely abstract package. </p>\n                <h3><a name=\"EXinstability\">Instability</a></h3>\n                <p>The ratio of efferent coupling (Ce) to total coupling (Ce / (Ce + Ca)). This metric is an indicator of the package's resilience to change. </p>\n                <p>The range for this metric is 0 to 1, with I=0 indicating a completely stable package and I=1 indicating a completely instable package. </p>\n                <h3><a name=\"EXdistance\">Distance</a></h3>\n                <p>The perpendicular distance of a package from the idealized line A + I = 1. This metric is an indicator of the package's balance between abstractness and stability. </p>\n                <p>A package squarely on the main sequence is optimally balanced with respect to its abstractness and stability. Ideal packages are either completely abstract and stable (x=0, y=1) or completely concrete and instable (x=1, y=0). </p>\n                <p>The range for this metric is 0 to 1, with D=0 indicating a package that is coincident with the main sequence and D=1 indicating a package that is as far from the main sequence as possible. </p>\n\n            </body>\n        </html>\n    </xsl:template>\n\n</xsl:stylesheet>"
        },
        {
          "name": "perf-test",
          "type": "tree",
          "content": null
        },
        {
          "name": "sample-war",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "settings.gradle",
          "type": "blob",
          "size": 0.11328125,
          "content": "rootProject.name = 'wiremock'\nif (JavaVersion.current() >= JavaVersion.VERSION_17) {\n  include 'wiremock-jetty12'\n}\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test-extension",
          "type": "tree",
          "content": null
        },
        {
          "name": "testlogging",
          "type": "tree",
          "content": null
        },
        {
          "name": "ui",
          "type": "tree",
          "content": null
        },
        {
          "name": "wiremock-jetty12",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}