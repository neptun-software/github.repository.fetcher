{
  "metadata": {
    "timestamp": 1736708658949,
    "page": 50,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjUw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "java-native-access/jna",
      "stars": 8594,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".classpath",
          "type": "blob",
          "size": 0.4658203125,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<classpath>\r\n\t<classpathentry kind=\"src\" path=\"src\"/>\r\n\t<classpathentry kind=\"src\" output=\"build.eclipse/test-classes\" path=\"test\"/>\r\n\t<classpathentry kind=\"con\" path=\"org.eclipse.jdt.launching.JRE_CONTAINER\"/>\r\n\t<classpathentry kind=\"con\" path=\"org.eclipse.jdt.junit.JUNIT_CONTAINER/3\"/>\r\n\t<classpathentry kind=\"lib\" path=\"lib/test/reflections-0.9.11.jar\"/>\r\n\t<classpathentry kind=\"output\" path=\"build.eclipse/classes\"/>\r\n</classpath>\r\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.2265625,
          "content": "*             text=auto\nMakefile*     text eol=lf\n*.am          text eol=lf\n*.m4          text eol=lf\n*.sh          text eol=lf\n*.sub         text eol=lf\n*.guess       text eol=lf\n*.host        text eol=lf\nlibtool*      text eol=lf\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.5595703125,
          "content": "target/\n.project\n.classpath\n.clover\nbuild/\nbuild-d64\nbuild.eclipse\nbuild.number\nbuild.clover\n.metadata\n.DS_Store\nbin\ncontrib/ntservice/dist\ncontrib/platform/dist\ndoc\n*~\n**/*~\ndist/*.asc\ndist/*-sources.jar\ndist/*-javadoc.jar\ndist/src-mvn.zip\ndist/out-of-date.jar\nperf*.txt\nnative/libffi/doc/libffi.info\njunit-*\npom-jna.xml.asc\npom-jna-platform.xml.asc\n# IntelliJ IDEA\n.idea\n*.iml\n/contrib/platform/${build.generated.sources.dir}/\n/contrib/platform/${build}/\n/contrib/platform/nbproject/private/\n/nbproject/private/\n/native/.ccls-cache/\n/contrib/ntservice/nbproject/private/\n"
        },
        {
          "name": ".project",
          "type": "blob",
          "size": 0.373046875,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<projectDescription>\r\n\t<name>jnalib</name>\r\n\t<comment></comment>\r\n\t<projects>\r\n\t</projects>\r\n\t<buildSpec>\r\n\t\t<buildCommand>\r\n\t\t\t<name>org.eclipse.jdt.core.javabuilder</name>\r\n\t\t\t<arguments>\r\n\t\t\t</arguments>\r\n\t\t</buildCommand>\r\n\t</buildSpec>\r\n\t<natures>\r\n\t\t<nature>org.eclipse.jdt.core.javanature</nature>\r\n\t</natures>\r\n</projectDescription>\r\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 1.205078125,
          "content": "os: linux\r\ndist: jammy\r\n\r\nlanguage: java\r\n\r\nbefore_install:\r\n  - sudo apt-get -m install openjdk-11-jdk libltdl-dev curl;\r\n  - export JAVA_HOME=/usr/lib/jvm/java-11-openjdk-arm64;\r\n  - export PATH=$JAVA_HOME/bin:$PATH;\r\n  - mkdir $HOME/local\r\n  - export PATH=$HOME/local/bin:$PATH\r\n  - curl -o autoconf-2.71.tar.gz https://ftp.gnu.org/gnu/autoconf/autoconf-2.71.tar.gz\r\n  - tar xzvf autoconf-2.71.tar.gz\r\n  - cd autoconf-2.71; ./configure --prefix $HOME/local; make; make install; cd ..\r\n\r\ninstall:\r\n  - export APACHE_ANT_BASE=$(curl http://apache.mirror.iphh.net/ant/binaries/ | grep \"apache-ant-1.9..*-bin.tar.gz\" | tail -1 | sed  's/.*href=\"\\([^\"]*\\)-bin.tar.gz\".*/\\1/g')\r\n  - 'echo \"Apache Ant ARCHIVE: $APACHE_ANT_BASE\"'\r\n  - 'wget http://apache.mirror.iphh.net/ant/binaries/$APACHE_ANT_BASE-bin.tar.gz && tar xzf $APACHE_ANT_BASE-bin.tar.gz && sudo mv $APACHE_ANT_BASE /usr/local/$APACHE_ANT_BASE && sudo rm -f /usr/local/ant && sudo ln -s /usr/local/$APACHE_ANT_BASE /usr/local/ant && sudo ln -s /usr/local/$APACHE_ANT_BASE/bin/ant /usr/local/bin/ant || true'\r\n  - 'sudo apt-get -y install texinfo || true'\r\n\r\nscript:\r\n  - ant test\r\n  - ant test-platform\r\n\r\njobs:\r\n  include:\r\n    - name: \"Linux JDK11 ARM\"\r\n      arch: arm64\r\n"
        },
        {
          "name": "AL2.0",
          "type": "blob",
          "size": 9.935546875,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n"
        },
        {
          "name": "CHANGES.md",
          "type": "blob",
          "size": 130.2353515625,
          "content": "NOTE: as of JNA 4.0, JNA is now dual-licensed under LGPL and AL 2.0 (see LICENSE).\n\nNOTE: JNI native support is typically incompatible between minor versions, and almost always incompatible between major versions.\n\nNext Release (5.17.0)\n=====================\n\nFeatures\n--------\n\nBug Fixes\n---------\n\n\nRelease 5.16.0\n==============\n\nFeatures\n--------\n* [#1626](https://github.com/java-native-access/jna/pull/1626): Add caching of field list and field validation in `Structure` along with more efficient reentrant read-write locking instead of synchronized() blocks - [@BrettWooldridge](https://github.com/brettwooldridge)\n\nBug Fixes\n---------\n* [#1618](https://github.com/java-native-access/jna/issues/1618): Fix calls to jnidispatch on Android with 16KB page size - [@Thomyrock](https://github.com/Thomyrock)\n\nRelease 5.15.0\n==============\n\nFeatures\n--------\n* [#1578](https://github.com/java-native-access/jna/pull/1578): Add support for FreeBSD aarch64 - [@alexdupre](https://github.com/alexdupre).\n* [#1593](https://github.com/java-native-access/jna/pull/1593): Add support for DragonFly BSD x86-64 - [@liweitianux](https://github.com/liweitianux).\n* [#1595](https://github.com/java-native-access/jna/pull/1595): Add `IsProcessorFeaturePresent` to `c.s.j.p.win32.Kernel32` - [@dbwiddis](https://github.com/dbwiddis).\n* [#1602](https://github.com/java-native-access/jna/pull/1602): Add `XMoveWindow`, `XResizeWindow`, `XMoveResizeWindow`, `XRaiseWindow`, `XLowerWindow` X11 calls to `c.s.j.p.unix.X11` - [@vinceh121](https://github.com/vinceh121).\n* [#1613](https://github.com/java-native-access/jna/issues/1613): Added static helper method `Native#getNativeLibrary' for getting the underlying NativeLibrary instance from a Library interface instance or from a \"registered\" class - [@matthiasblaesing](https://github.com/matthiasblaesing).\n* [#1624](https://github.com/java-native-access/jna/pull/1624): Enable linker build-id for android builds - [@mstyura](https://github.com/mstyura).\n\nBug Fixes\n---------\n* [#1579](https://github.com/java-native-access/jna/issues/1579): Fix analysis of ELF binary on arm systems running with a java ELF binary without section table headers (java8 on armv7 NAS) - [@matthiasblaesing](https://github.com/matthiasblaesing).\n* [#1586](https://github.com/java-native-access/jna/issues/1586): Fix free_callback JNI weak reference leak - [@xiezhaokun](https://github.com/xiezhaokun).\n* [6486c90d913a413f247eef84742ce3c474738933](https://github.com/java-native-access/jna/commit/6486c90d913a413f247eef84742ce3c474738933): Check CallbackReference#cbstruct for null when checking existing Reference - [@matthiasblaesing](https://github.com/matthiasblaesing).\n* [#1622](https://github.com/java-native-access/jna/issues/1622): Add \"linux-riscv64\" entry to OSGI Bundle-NativeCode header in MANIFEST.MF  - [@matthiasblaesing](https://github.com/matthiasblaesing).\n\nRelease 5.14.0\n==============\n\nFeatures\n--------\n* [#1556](https://github.com/java-native-access/jna/pull/1556): Add `SetJob`, `SetPrinter` to `c.s.j.p.w.Winspool` - [@tresf](https://github.com/tresf).\n* [#1534](https://github.com/java-native-access/jna/pull/1534): Add `GetMethod`, `Put`, `SpawnInstance` to `c.s.j.p.win32.COM.WbemCli#IWbemClassObject` and `ExecMethod` to `c.s.j.p.win32.COM.WbemCli#IWbemServices` - [@faddom](https://github.com/faddom).\n* [#1544](https://github.com/java-native-access/jna/pull/1544): Add `GetPriorityClass`, `SetPriorityClass`, `GetThreadPriority`, `SetThreadPriority` and associated constants to `c.s.j.p.win32.Kernel32` - [@dEajL3kA](https://github.com/dEajL3kA).\n* [#1548](https://github.com/java-native-access/jna/pull/1548): Make interface `c.s.j.p.mac.XAttr public` - [@matthiasblaesing](https://github.com/matthiasblaesing).\n* [#1551](https://github.com/java-native-access/jna/pull/1551): Add `c.s.j.p.bsd.ExtAttr` and `c.s.j.p.bsd.ExtAttrUtil` to wrap BSD [<sys/extattr.h>](https://man.freebsd.org/cgi/man.cgi?query=extattr&sektion=2) system calls. [@rednoah](https://github.com/rednoah).\n* [#1517](https://github.com/java-native-access/jna/pull/1517): Add missing `O_*` (e.g. `O_APPEND`, `O_SYNC`, `O_DIRECT`, ...) to `c.s.j.p.linux.Fcntl` - [@matthiasblaesing](https://github.com/matthiasblaesing).\n* [#1521](https://github.com/java-native-access/jna/issues/1521): Shutdown CleanerThread once the last cleanable is removed - [@matthiasblaesing](https://github.com/matthiasblaesing).\n* [#1557](https://github.com/java-native-access/jna/issues/1557): Build linux-riscv64 on Ubuntu focal to improve compatibility with older glibc versions - [@matthiasblaesing](https://github.com/matthiasblaesing).\n\nBug Fixes\n---------\n* [#1501](https://github.com/java-native-access/jna/pull/1501): `Library.OPTION_STRING_ENCODING` is ignore for string arguments function calls - [@matthiasblaesing](https://github.com/matthiasblaesing).\n* [#1504](https://github.com/java-native-access/jna/pull/1504): Increase maximum supported fixed args on varargs calls from 3 to 255 - [@andrew-nowak](https://github.com/andrew-nowak).\n* [#1545](https://github.com/java-native-access/jna/pull/1545): Fix Java 6 incompatibility in `c.s.j.p.win32.Kerne32Util` and `c.s.j.p.win32.DBT` - [@matthiasblaesing](https://github.com/matthiasblaesing).\n\nImportant Changes\n-----------------\n* The interfaces between Java and native code have changed, so `libjnidispatch`\n  must be rebuilt to be compatible with this release.\n* Release drops support for JDKs 6 + 7, so you'll need at least JDK 8 to\n  update to use this version.\n\nRelease 5.13.0\n==============\n\nFeatures\n--------\n* [#1454](https://github.com/java-native-access/jna/pull/1454): Add `c.s.j.p.win32.Psapi.QueryWorkingSetEx` and associated Types - [@crain-32](https://github.com/Crain-32).\n* [#1459](https://github.com/java-native-access/jna/pull/1459): Add `VirtualLock` and `VirtualUnlock` in `c.s.j.p.win32.Kernel32` - [@matthiasblaesing](https://github.com/matthiasblaesing).\n* [#1471](https://github.com/java-native-access/jna/pull/1471): Add `c.s.j.p.win32.Advapi32Util#isCurrentProcessElevated` and associated Types - [@dbwiddis](https://github.com/dbwiddis).\n* [#1474](https://github.com/java-native-access/jna/pull/1474): Add `c.s.j.p.win32.WbemCli#IWbemClassObject.IWbemQualifierSet`, `IWbemServices.GetObject`, `IWbemContext.SetValue` and associated methods - [@rchateauneu](https://github.com/rchateauneu).\n* [#1482](https://github.com/java-native-access/jna/pull/1482): Add multilingual support of `Kernel32Util.formatMessage` - [@overpathz](https://github.com/overpathz).\n* [#1490](https://github.com/java-native-access/jna/pull/1490): Adds support for a custom `SymbolProvider` in `NativeLibrary` & `Library` - [@soywiz](https://github.com/soywiz).\n* [#1491](https://github.com/java-native-access/jna/pull/1491): Update libffi to v3.4.4  - [@matthiasblaesing](https://github.com/matthiasblaesing).\n* [#1487](https://github.com/java-native-access/jna/issues/1487): Add 'uses' information to OSGI metadata in MANIFEST.MF to improve stability of package resolution - [@sratz](https://github.com/sratz).\n\nBug Fixes\n---------\n* [#1452](https://github.com/java-native-access/jna/issues/1452): Fix memory allocation/handling for error message generation in native library code (`dispatch.c`) - [@matthiasblaesing](https://github.com/matthiasblaesing).\n* [#1460](https://github.com/java-native-access/jna/issues/1460): Fix win32 variant date conversion in DST offest window and with millisecond values - [@eranl](https://github.com/eranl).\n* [#1472](https://github.com/java-native-access/jna/issues/1472): Fix incorrect bitmask in `c.s.j.Pointer#createConstant(int)` - [@dbwiddis](https://github.com/dbwiddis).\n* [#1481](https://github.com/java-native-access/jna/issues/1481): Fix NPE in NativeLibrary when unpacking from classpath is disabled - [@trespasserw](https://github.com/trespasserw).\n* [#1489](https://github.com/java-native-access/jna/pull/1489): Fixes typo in `OpenGL32Util#wglGetProcAddress`, instead of parameter `procName` the hardcoded value `wglEnumGpusNV` was used - [@soywiz](https://github.com/soywiz).\n\nRelease 5.12.1\n==============\n\nBug Fixes\n---------\n* [#1447](https://github.com/java-native-access/jna/issues/1447): Null-check cleanable in `c.s.j.Memory#close` - [@dbwiddis](https://github.com/dbwiddis).\n\nRelease 5.12.0\n==============\n\nFeatures\n--------\n* [#1433](https://github.com/java-native-access/jna/pull/1433): Add `CFEqual`, `CFDictionaryRef.ByReference`, `CFStringRef.ByReference` to `c.s.j.p.mac.CoreFoundation` - [@shalupov](https://github.com/shalupov)\n* [#978](https://github.com/java-native-access/jna/issues/978): Remove use of finalizers in JNA and improve concurrency for `Memory`, `CallbackReference` and `NativeLibrary` - [@matthiasblaesing](https://github.com/matthiasblaesing).\n* [#1440](https://github.com/java-native-access/jna/pull/1440): Support for LoongArch64 - [@Panxuefeng-loongson](https://github.com/Panxuefeng-loongson).\n* [#1444](https://github.com/java-native-access/jna/pull/1444): Update embedded libffi to 1f14b3fa92d4442a60233e9596ddec428a985e3c and rebuild native libraries - [@matthiasblaesing](https://github.com/matthiasblaesing).\n\nBug Fixes\n---------\n* [#1438](https://github.com/java-native-access/jna/pull/1438): Handle arrays in structures with differing size - [@matthiasblaesing](https://github.com/matthiasblaesing).\n* [#1442](https://github.com/java-native-access/jna/issues/1442): Handle race condition in `c.s.j.p.win32.PdhUtil#PdhEnumObjectItems` - [@dbwiddis](https://github.com/dbwiddis).\n\nImportant Changes\n-----------------\n* `Memory#dispose`, `CallbackReference#dispose` and `NativeLibrary#dispose`\n   were called by the `Object#finalize` override. These calls were replaced by\n   the use of a cleaner. It is not guaranteed anymore, that `dispose` is called\n   on subclasses on finalization.\n\nRelease 5.11.0\n==============\n\nFeatures\n--------\n* [#1398](https://github.com/java-native-access/jna/pull/1398): Increase `c.s.j.p.win32.Sspi#MAX_TOKEN_SIZE` on Windows 8/Server 2012 and later - [@dbwiddis](https://github.com/dbwiddis).\n* [#1403](https://github.com/java-native-access/jna/pull/1403): Rebuild AIX binaries with libffi 3.4.2 (other architectures were part of 5.10) - [@matthiasblaesing](https://github.com/matthiasblaesing).\n* [#1404](https://github.com/java-native-access/jna/issues/1404): Added Solaris Kstat2 library - [@dbwiddis](https://github.com/dbwiddis).\n* [#1416](https://github.com/java-native-access/jna/pull/1416): Add `CFDictionaryGetCount` to `c.s.j.p.mac.CoreFoundation` - [@shalupov](https://github.com/shalupov)\n* [#1418](https://github.com/java-native-access/jna/pull/1418): Add `CertOpenStore` to `c.s.j.p.win32.Crypt32` - [@shalupov](https://github.com/shalupov)\n\nBug Fixes\n---------\n* [#1411](https://github.com/java-native-access/jna/pull/1411): Do not throw `Win32Exception` on success for empty section in `Kernel32Util#getPrivateProfileSection` - [@mkarg](https://github.com/mkarg).\n* [#1414](https://github.com/java-native-access/jna/pull/1414): Fix definition of `c.s.j.p.unix.X11.XK_Shift_R` - [@matthiasblaesing](https://github.com/matthiasblaesing).\n* [#1323](https://github.com/java-native-access/jna/issues/1323). Fix crashes in direct callbacks on mac OS aarch64 - [@matthiasblaesing](https://github.com/matthiasblaesing).\n* [#1422](https://github.com/java-native-access/jna/pull/1422): Load jawt library relative to `sun.boot.library.path` system on unix OSes - [@matthiasblaesing](https://github.com/matthiasblaesing).\n* [#1427](https://github.com/java-native-access/jna/pull/1427): Rebuild all binaries with fix from #1422 and #1323 - [@matthiasblaesing](https://github.com/matthiasblaesing).\n\nRelease 5.10.0\n==============\n\nFeatures\n--------\n* [#1377](https://github.com/java-native-access/jna/pull/1377): Add `RegLoadAppKey` to `c.s.j.p.win32.Advapi32` and `registryLoadAppKey` to `c.s.j.p.win32.Advapi32Util` - [@mfilippov](https://github.com/mfilippov).\n* [#1093](https://github.com/java-native-access/jna/issues/1093): Add `OpenFileMapping` to `c.s.j.p.win32.Kernel32` - [@lmitusinski](https://github.com/lmitusinski).\n* [#1388](https://github.com/java-native-access/jna/issues/1388): Map the arch `zarch_64` as reported by SAPJVM8 to `s390x` - [@MBaesken](https://github.com/MBaesken).\n* [#1381](https://github.com/java-native-access/jna/issues/1381): Update embedded libffi to 3.4.2 - [@matthiasblaesing](https://github.com/matthiasblaesing).\n* [#1393](https://github.com/java-native-access/jna/issues/1393): Update native encoding detection for JEP400 / JDK 18 (`file.encoding` now defaults to `UTF-8`) - [@matthiasblaesing](https://github.com/matthiasblaesing).\n\nBug Fixes\n---------\n* [#1378](https://github.com/java-native-access/jna/pull/1378): Handle failure in `ffi_closure_alloc` - [@davecturner](https://github.com/davecturner).\n\n\nRelease 5.9.0\n=============\n\nFeatures\n--------\n* [#1336](https://github.com/java-native-access/jna/pull/1336): Add `HKEY_CURRENT_USER_LOCAL_SETTINGS` to `c.s.j.p.win32.WinReg` - [@Dani-Hub](https://github.com/Dani-Hub).\n* [#1337](https://github.com/java-native-access/jna/pull/1337): Add `REG_NOTIFY_THREAD_AGNOSTIC` to `c.s.j.p.win32.WinNet` and update `REG_LEGAL_CHANGE_FILTER` - [@Dani-Hub](https://github.com/Dani-Hub).\n* [#1338](https://github.com/java-native-access/jna/pull/1338): Add `RegNotifyChangeKeyValue` to `c.s.j.p.win32.Advapi32` - [@Dani-Hub](https://github.com/Dani-Hub).\n* [#1340](https://github.com/java-native-access/jna/issues/1340): Add `CM_Get_DevNode_Registry_Property` to `c.s.j.p.win32.Cfgmgr32` and corresponding util in `c.s.j.p.win32.Cfgmgr32Util` - [@dbwiddis](https://github.com/dbwiddis).\n* [#1352](https://github.com/java-native-access/jna/pull/1352): Add `BringWindowToTop` to `c.s.j.p.win32.User32` - [@kahgoh](https://github.com/kahgoh).\n* [#1354](https://github.com/java-native-access/jna/pull/1352): Add `GetParent` to `c.s.j.p.win32.User32` - [@kahgoh](https://github.com/kahgoh).\n* [#1360](https://github.com/java-native-access/jna/issues/1360): Add `CommandLineToArgvW` to `c.s.j.p.win32.Shell32` and corresponding util in `c.s.j.p.win32.Shell32Util` - [@dbwiddis](https://github.com/dbwiddis).\n* [#1363](https://github.com/java-native-access/jna/issues/1363): Update `NUMA_NODE_RELATIONSHIP` in `c.s.j.p.win32.WinNT` to new version of the structure and improve support for future values of `c.s.j.p.win32.WinNT.LOGICAL_PROCESSOR_RELATIONSHIP` - [@dbwiddis](https://github.com/dbwiddis).\n\nBug Fixes\n---------\n* [#1343](https://github.com/java-native-access/jna/issues/1343): `c.s.j.p.mac.CoreFoundation.CFStringRef#stringValue` buffer needs space for a null byte - [@dbwiddis](https://github.com/dbwiddis).\n* [#1351](https://github.com/java-native-access/jna/issues/1351): Define `c.s.j.p.unix.size_t.ByReference` and fix macOS sysctl `size_t *` parameters - [@dbwiddis](https://github.com/dbwiddis).\n* [#1362](https://github.com/java-native-access/jna/issues/1362): Clear security sensitive data after usage in `c.s.j.p.win32.Crypt32Util#cryptProtectData` and `#cryptUnprotectData` - [@dmytro-sheyko](https://github.com/dmytro-sheyko).\n* [#1361](https://github.com/java-native-access/jna/issues/1361): Make `c.s.j.p.win32.Crypt32Util#cryptProtectData` and `#cryptUnprotectData` properly handle 0-length array as input - [@dmytro-sheyko](https://github.com/dmytro-sheyko).\n\nRelease 5.8.0\n=============\n\nFeatures\n--------\n* [#1313](https://github.com/java-native-access/jna/issues/1313): Normalize `RESOURCE_PREFIX` for darwin to `darwin-$arch` and split jnidispatch library per architecture - [@matthiasblaesing](https://github.com/matthiasblaesing).\n* [#1318](https://github.com/java-native-access/jna/pull/1318): Add support for linux-riscv64 - [@thentschel](https://github.com/thentschel).\n* [#1327](https://github.com/java-native-access/jna/pull/1327): Add partial support for future values of `c.s.j.p.win32.WinNT.LOGICAL_PROCESSOR_RELATIONSHIP` enum present in Windows Insider builds - [@dbwiddis](https://github.com/dbwiddis).\n\nBug Fixes\n---------\n* [#1317](https://github.com/java-native-access/jna/pull/1317): Change the maven coordinates of the JPMS artifacts from classifier `jpms` to custom artifact ids `jna-jpms` and `jna-platform-jpms` - [@matthiasblaesing](https://github.com/matthiasblaesing).\n* [#1322](https://github.com/java-native-access/jna/pull/1322): Handle 0-length domain names in `c.s.j.p.win32.Advapi32Util#getAccountBySid` - [@dbwiddis](https://github.com/dbwiddis).\n* [#1326](https://github.com/java-native-access/jna/pull/1326): Ensure pointers indirected from Memory and pointing into Memory retain originating object - [@matthiasblaesing](https://github.com/matthiasblaesing).\n\nImportant Changes\n-----------------\n* The maven coordinates of the experimental JPMS (java module system) artifacts\n  were moved from using the classifier `jpms` to custom artifact ids `jna-jpms`\n  and `jna-platform-jpms`, without an classifier. The reason for this is, that\n  the platform artifacts depend on the jna artifacts and need to pull in the\n  right variant. This is not possible if the classifier is used.\n\n* `RESOURCE_PREFIX` for darwin (mac OS) was changed from `darwin` to\n  `darwin-$arch` as the fat binaries on mac OS causes various problems:\n  It was reported, that binaries were rejected from the appstore because x86\n  binaries were found in the application (jnidispatch for mac OS x86) and that\n  builds needed to be special cased so that the native library can be\n  assembled. The latter is also true for JNA.<br />\n  While the prefix is changed, the old prefix is still searched as a fallback\n  location, so if only a fat binary is present, it can still be loaded.\n\nRelease 5.7.0\n=============\n\nFeatures\n--------\n* [#1301](https://github.com/java-native-access/jna/pull/1301/): Improve bindings of the printer notification functions (`FindFirstPrinterChangeNotification`, `FindNextPrinterChangeNotification`) in `c.s.j.p.w.Winspool` - [@ianjoneill](https://github.com/ianjoneill).\n* [#1238](https://github.com/java-native-access/jna/pull/1238): Add macOS `aarch64` architecture to universal `darwin` target. Cherry pick [libffi/libffi#577](https://github.com/libffi/libffi/pull/577). - [@fkistner](https://github.com/fkistner), [@Vzor-](https://github.com/Vzor-), [@tresf](https://github.com/tresf).\n* [#1264](https://github.com/java-native-access/jna/pull/1264): Update libffi to v3.3; Add Windows `aarch64` target. - [@tresf](https://github.com/tresf).\n* [#1293](https://github.com/java-native-access/jna/issues/1293): Bind part of Windows Application Recovery and Restart API: `RegisterApplicationRestart`, `UnregisterApplicationRestart` and `GetApplicationRestartSettings` in `c.s.j.p.w.Kernel32` - [@matthiasblaesing](https://github.com/matthiasblaesing).\n* [#1217](https://github.com/java-native-access/jna/pull/1217): Add mappings for AIX `Perfstat` library to `c.s.j.p.unix.aix` - [@dbwiddis](https://github.com/dbwiddis).\n* [#1231](https://github.com/java-native-access/jna/pull/1231): The test suite can now be executed on Windows using either ANSI or UNICODE win32 API by passing `-Dw32.ascii=true/false` to ant. Previously, UNICODE was always used. - [@T-Svensson](https://github.com/T-Svensson/)\n* [#1237](https://github.com/java-native-access/jna/pull/1237): *Experimental:* Add artifacts that make jna and jna-platform named modules (provide `module-info.class`). The new artifacts are named `jna-jpms.jar` and `jna-platform-jpms.jar` - [@matthiasblaesing](https://github.com/matthiasblaesing).\n* [#1242](https://github.com/java-native-access/jna/pull/1242): Add CallWindowProc to User32 - [@heldplayer](https://github.com/heldplayer).\n* [#1239](https://github.com/java-native-access/jna/pull/1239): Improve performance of allocation of `c.s.j.Memory` objects - [@joerg1985](https://github.com/joerg1985).\n* [#1246](https://github.com/java-native-access/jna/pull/1246): Improve performance of `c.s.j.Structure#read` and `c.s.j.Structure#write` - [@joerg1985](https://github.com/joerg1985).\n* [#1260](https://github.com/java-native-access/jna/pull/1260): Add mapping for X11 generic events - [@lafoletc](https://github.com/lafoletc).\n* [#1263](https://github.com/java-native-access/jna/pull/1263): Add LowLevelMouseProc - [@nordiakt](https://github.com/nordiakt).\n* [#1265](https://github.com/java-native-access/jna/pull/1265): Add mapping for XQueryExtension - [@lafoletc](https://github.com/lafoletc).\n* [#1299](https://github.com/java-native-access/jna/pull/1299): Add `c.s.j.p.win32.IPHlpApi#GetExtendedTcpTable`, `c.s.j.p.win32.IPHlpApi#GetExtendedUdpTable`, and supporting structures.  - [@dbwiddis](https://github.com/dbwiddis).\n\nBug Fixes\n---------\n* [#1286](https://github.com/java-native-access/jna/pull/1286): Fix bindings of `c.s.j.p.win32.DBT` - [@matthiasblaesing](https://github.com/matthiasblaesing).\n* [#326](https://github.com/java-native-access/jna/issues/326): Fix loading library that re-uses pointers for different callbacks - [@fpapai](https://github.com/fpapai).\n* [#1244](https://github.com/java-native-access/jna/issues/1244): Fix building on GCC 10 - [@matthiasblaesing](https://github.com/matthiasblaesing).\n* [#1252](https://github.com/java-native-access/jna/issues/1252): - Fix bindings of `CTL_ENTRY#getRgAttribute`, `CTL_INFO#getRgCTLEntry`, `CTL_INFO#getRgExtension`, `CERT_EXTENSIONS#getRgExtension`, `CERT_INFO#getRgExtension`, `CRL_INFO#getRgCRLEntry`, `CRL_INFO#getRgExtension`, `CRL_ENTRY#getRgExtension`. Add bindings for `CertEnumCertificatesInStore`, `CertEnumCTLsInStore`, `CertEnumCRLsInStore` and `CryptQueryObject` in `c.s.j.p.win32.Crypt32`.<br> *WARNING:* The signatures for `CTL_INFO#getRgCTLEntry` and `CTL_INFO#getRgExtension` were changed - as the original signatures were obviously wrong and read the wrong attributes, it is not considered an API break - [@matthiasblaesing](https://github.com/matthiasblaesing).\n* [#1275](https://github.com/java-native-access/jna/issues/1275): Fix `CFStringRef#stringValue` for empty Strings - [@dyorgio](https://github.com/dyorgio).\n* [#1279](https://github.com/java-native-access/jna/issues/1279): Remove `DLLCallback` import from `CallbackReference` - [@dyorgio](https://github.com/dyorgio).\n* [#1278](https://github.com/java-native-access/jna/pull/1278): Improve compatibility of `c.s.j.p.WindowUtils#getProcessFilePath` and fix unittests for windows 32bit intel  - [@matthiasblaesing](https://github.com/matthiasblaesing).\n* [#1284](https://github.com/java-native-access/jna/pull/1284): Fix illegal access exceptions, when retrieving options for private library interfaces with an instance field - [@fkistner](https://github.com/fkistner).\n* [#1300](https://github.com/java-native-access/jna/pull/1300): Deprecate `c.s.j.p.win32.WTypes.BSTR` String constructor and `setValue` method, as `BSTR` allocation should be managed by COM, Automation, and Interop functions - [@dbwiddis](https://github.com/dbwiddis).\n\n\nBreaking Changes\n----------------\n* Prebuild native library for darwin x86 (32bit java on mac OS) was removed\n\nRelease 5.6.0\n=============\n\nFeatures\n--------\n* [#1160](https://github.com/java-native-access/jna/issues/1160): Make FileUtils#moveToTrash a varargs method - [@matthiasblaesing](https://github.com/matthiasblaesing).\n* [#1167](https://github.com/java-native-access/jna/pull/1167): Add `c.s.j.p.win32.Kernel32#GetProcessAffinityMask` - [@dbwiddis](https://github.com/dbwiddis).\n* [#1168](https://github.com/java-native-access/jna/pull/1168): Add `c.s.j.p.win32.Kernel32#SetProcessAffinityMask` - [@dbwiddis](https://github.com/dbwiddis).\n* [#1169](https://github.com/java-native-access/jna/issues/1169): Wait for process in getLinuxLdPaths - [@rdesgroppes](https://github.com/rdesgroppes).\n* [#1178](https://github.com/java-native-access/jna/pull/1178): Add `c.s.j.p.win32.IPHlpAPI#GetTcpStatistics`, `c.s.j.p.win32.IPHlpAPI#GetUdpStatistics`, `c.s.j.p.win32.IPHlpAPI#GetTcpStatisticsEx` and `c.s.j.p.win32.IPHlpAPI#GetUdpStatisticsEx` - [@dbwiddis](https://github.com/dbwiddis).\n* [#1182](https://github.com/java-native-access/jna/pull/1182): Add `toString` to classes extending `c.s.j.ptr.ByReference` - [@dbwiddis](https://github.com/dbwiddis).\n* [#1191](https://github.com/java-native-access/jna/pull/1191): Add `c.s.j.p.win32.Advapi32Util#getTokenPrimaryGroup` - [@dbwiddis](https://github.com/dbwiddis).\n* [#1194](https://github.com/java-native-access/jna/pull/1194): Add `GetConsoleScreenBufferInfo`, `ReadConsoleInput` and `WriteConsole` with associated structures to `c.s.j.p.win32.Wincon` - [@rednoah](https://github.com/rednoah).\n* [#1198](https://github.com/java-native-access/jna/pull/1198): Add `NetSessionEnum` to `c.s.j.p.win32.Netapi32` and `WTSEnumerateSessions`, `WTSQuerySessionInformation`, and `WTSFreeMemory` to `c.s.j.p.win32.Wtsapi32` - [@dbwiddis](https://github.com/dbwiddis).\n* [#1200](https://github.com/java-native-access/jna/pull/1200): Add mappings for `libudev` to `c.s.j.p.linux.Udev` - [@dbwiddis](https://github.com/dbwiddis).\n* [#1202](https://github.com/java-native-access/jna/pull/1202): Add mappings supporting shared memory including `c.s.j.p.unix.LibCAPI` types `size_t` and `ssize_t`, `c.s.j.p.linux.LibC` methods `munmap()`, `msync()`, and `close()`, `c.s.j.p.unix.LibCUtil` mapping `mmap()` and `ftruncate()`, and `c.s.j.p.linux.LibRT` methods `shm_open()` and `shm_unlink()` - [@dbwiddis](https://github.com/dbwiddis).\n* [#1209](https://github.com/java-native-access/jna/pull/1209): Add mappings for `Thread32First` and `Thread32Next` to `c.s.j.p.win32.Kernel32` - [@dbwiddis](https://github.com/dbwiddis).\n* [#1214](https://github.com/java-native-access/jna/pull/1214): Add mapping for EnumProcesses to `c.s.j.p.win32.Psapi` and `c.s.j.p.win32.PsapiUtil` - [@T-Svensson](https://github.com/T-Svensson/).\n\nBug Fixes\n---------\n* [#1183](https://github.com/java-native-access/jna/pull/1183): `c.s.j.p.win32.WinDef.CHARByReference#getValue` should only read one byte - [@dbwiddis](https://github.com/dbwiddis).\n* [#1184](https://github.com/java-native-access/jna/pull/1184): `c.s.j.p.win32.WinDef.ULONGLONG` should always be 8 bytes - [@dbwiddis](https://github.com/dbwiddis).\n* [#1196](https://github.com/java-native-access/jna/pull/1196): `c.s.j.p.win32.WinNT.LARGE_INTEGER` needs to populate both union fields - [@dbwiddis](https://github.com/dbwiddis).\n* [#1216](https://github.com/java-native-access/jna/pull/1216): Failure loading frameworks on macOS 11 - [@dkocher](https://github.com/dkocher).\n\nRelease 5.5.0\n=============\n\nFeatures\n--------\n* [#1131](https://github.com/java-native-access/jna/pull/1131): Add CoreFoundation, IOKit, and DiskArbitration mappings in `c.s.j.p.mac`. [@dbwiddis](https://github.com/dbwiddis).\n* [#1143](https://github.com/java-native-access/jna/pull/1143): `c.s.j.p.mac.SystemB` now extends `c.s.j.p.unix.LibCAPI`. [@dbwiddis](https://github.com/dbwiddis).\n* [#1147](https://github.com/java-native-access/jna/pull/1147): Add additional OSGi headers for the JNA bundle to support 32bit ARM (hardfloat) [@mattixtech](https://github.com/mattixtech).\n* [#1148](https://github.com/java-native-access/jna/pull/1148)/[#1096](https://github.com/java-native-access/jna/issues/1096): Include Win32 COM utils (`c.s.j.p.win32.com.util` and `c.s.j.p.win32.com.annotation`) in OSGI bundle [@dbwiddis](https://github.com/dbwiddis).\n\nBug Fixes\n---------\n* [#1115](https://github.com/java-native-access/jna/issues/1115): Fix signature for `c.s.j.p.win32.Kernel32#CreateRemoteThread` and bind `VirtualAllocEx`, `VirtualFreeEx`, `GetExitCodeThread` in `c.s.j.p.win32.Kernel32` - [@apangin](https://github.com/apangin), [@matthiasblaesing](https://github.com/matthiasblaesing).\n* [#1127](https://github.com/java-native-access/jna/issues/1127): Windows needs a wide string in `c.s.j.p.win32.COM.IShellFolder#ParseDisplayName` - [@dbwiddis](https://github.com/dbwiddis).\n* [#1128](https://github.com/java-native-access/jna/issues/1128): KEY_ALL_ACCESS value is incorrect in `c.s.j.p.win32.WinNT.java` - [@trevormaggs](https://github.com/trevormaggs).\n* [#1133](https://github.com/java-native-access/jna/issues/1133): Ensure JARs created from the build system don't contain invalid `Info-ZIP Unicode Path` extra info - [@matthiasblaesing](https://github.com/matthiasblaesing).\n* [#1134](https://github.com/java-native-access/jna/issues/1134): Read correct member of `WinBase.SYSTEM_INFO.processorArchitecture` union - [@dbwiddis](https://github.com/dbwiddis).\n* [#1118](https://github.com/java-native-access/jna/issues/1118): Fix passing unions containing integer and floating point members as parameters by value - [@matthiasblaesing](https://github.com/matthiasblaesing).\n\nRelease 5.4.0\n=============\n\nFeatures\n--------\n* [#1105](https://github.com/java-native-access/jna/issues/1105): Deprecate `c.s.j.p.win32.Advapi32Util.EventLogRecord#getEventId` in favor of `#getInstanceId` - [@dbwiddis](https://github.com/dbwiddis).\n* [#1097](https://github.com/java-native-access/jna/issues/1097): Allow `.ocx` as extension of native libraries on windows - [@dmigowski](https://github.com/dmigowski).\n* [#1108](https://github.com/java-native-access/jna/pull/1108): Improve performance of `c.s.j.Structure#newInstance` by iteration available constructors instead of exception handling [@bjorndarri](https://github.com/bjorndarri).\n\nBug Fixes\n---------\n* [#1095](https://github.com/java-native-access/jna/pull/1095) Align behaviour of com.sun.jna.platform.macXAttrUtil#setXattr and #getXAttr with CLI tool - [@jrobhoward](https://github.com/jrobhoward), [@matthiasblaesing](https://github.com/matthiasblaesing).\n* [#1091](https://github.com/java-native-access/jna/issues/1091): Check target number to be greater than zero, before calling `Structure#toArray` in `c.s.j.p.win32.Netapi32Util` - [@trevormagg](https://github.com/trevormaggs), [@matthiasblaesing](https://github.com/matthiasblaesing).\n* [#1103](https://github.com/java-native-access/jna/issues/1103): On big endian architecture IntegerType based values are incorrectly decoded when using direct binding - [@matthiasblaesing](https://github.com/matthiasblaesing).\n\nRelease 5.3.1\n=============\n\nBug Fixes\n---------\n* [#1089](https://github.com/java-native-access/jna/issues/1089): `c.s.j.internal.ReflectionUtils` accesses `java.lang.invoke.MethodType` without reflection, causing `java.lang.NoClassDefFoundError` on android API level < 26 - [@matthiasblaesing](https://github.com/matthiasblaesing).\n* [#1087](https://github.com/java-native-access/jna/pull/1087): Fix wrong calls to Structure#toArray with zero sized arrays - [@matthiasblaesing](https://github.com/matthiasblaesing).\n\nRelease 5.3.0\n=============\n\nFeatures\n--------\n* [#1058](https://github.com/java-native-access/jna/pull/1058): Add selectable timeout to stopService() and improve timeout handling - [@keithharp](https://github.com/keithharp).\n* [#1050](https://github.com/java-native-access/jna/pull/1050): Add `c.s.j.p.win32.VersionHelpers` and supporting functions - [@dbwiddis](https://github.com/dbwiddis).\n* [#1061](https://github.com/java-native-access/jna/pull/1061): replace toArray(new T[size]) with toArray(new T[0]) for better performance - [@hc-codersatlas](https://github.com/hc-codersatlas).\n* [#1064](https://github.com/java-native-access/jna/pull/1064): Add `c.s.j.p.win32.Kernel32.GetLogicalProcessorInformationEx` function, convenience Util method and supporting structures - [@dbwiddis](https://github.com/dbwiddis).\n* [#1065](https://github.com/java-native-access/jna/pull/1065): Add `c.s.j.p.win32.PowrProf#CallNTPowerInformation` and supporting structures - [@dbwiddis](https://github.com/dbwiddis).\n* [#1063](https://github.com/java-native-access/jna/pull/1063): Enhance `c.s.j.p.win32.User32` and associated classes to support keyboard related functionality. - [@kevemueller](https://github.com/kevemueller).\n* [#1068](https://github.com/java-native-access/jna/pull/1068): `c.s.j.p.win32.Advapi32Util.getAccountBySid(String systemName, PSID sid)` ignored parameter instead of passing it to the native function - [@nirud](https://github.com/nirud).\n* [#813](https://github.com/java-native-access/jna/issues/813): Support for default methods on interfaces (experimental) - [@matthiasblaesing](https://github.com/matthiasblaesing).\n* [#1073](https://github.com/java-native-access/jna/issues/1073): Support COM setters with multiple parameters using `c.s.j.p.win32.COM.util.ProxyObject` - [@matthiasblaesing](https://github.com/matthiasblaesing).\n* [#1083](https://github.com/java-native-access/jna/issues/1083): Prevent access to unsupported values in `c.s.j.p.win32.COM.WbemcliUtil#enumerateProperties` and bind `c.s.j.p.win32.COM.Wbemcli.IWbemClassObject.GetNames` - [@matthiasblaesing](https://github.com/matthiasblaesing).\n\nBug Fixes\n---------\n* [#1052](https://github.com/java-native-access/jna/pull/1052), [#1053](https://github.com/java-native-access/jna/issues/1053): WinXP compatibility for `c.s.j.p.win32.PdhUtil` - [@dbwiddis](https://github.com/dbwiddis).\n* [#1055](https://github.com/java-native-access/jna/pull/1055): Include `c.s.j.p.linux` in OSGi bundle. - [@dbwiddis](https://github.com/dbwiddis).\n* [#1066](https://github.com/java-native-access/jna/issues/1066): On AIX OpenJDK differs from IBM J9 in the mapping of library names. While J9 maps jnidispatch to `libjnidispatch.a`, OpenJDK maps to `libjnidispatch.so`, which causes the native library extractor to fail. AIX is now hard-coded to `libjnidispatch.a` - [@matthiasblaesing](https://github.com/matthiasblaesing).\n* [#1079](https://github.com/java-native-access/jna/issues/1079): Fix maximum structure alignment for Android i386 - [@BugsBeGone](https://github.com/BugsBeGone).\n\nRelease 5.2.0\n=============\n\nFeatures\n--------\n* [#1038](https://github.com/java-native-access/jna/pull/1038): Improve exception when native library loading fails by preserving the original exceptions and messages - [@matthiasblaesing](https://github.com/matthiasblaesing).\n* [#1039](https://github.com/java-native-access/jna/pull/1039): Remove use of `System.out` and `System.err` in favor of regular logging - [@matthiasblaesing](https://github.com/matthiasblaesing).\n* [#1048](https://github.com/java-native-access/jna/pull/1048): Bind `c.s.j.p.win32.Kernel32#OpenEvent` - [@matthiasblaesing](https://github.com/matthiasblaesing).\n\nBug Fixes\n---------\n* [#1036](https://github.com/java-native-access/jna/issues/1036): `Advapi32Util.registryValueExists` called on non existing key raises exception instead of returning `false` - [@matthiasblaesing](https://github.com/matthiasblaesing).\n* [#384](https://github.com/java-native-access/jna/issues/384): Android only supports loading libraries through the JVM `System#loadLibrary` mechanism, defaulting `jna.nosys` to `true` disabled that code path - [@matthiasblaesing](https://github.com/matthiasblaesing).\n* [#1041](https://github.com/java-native-access/jna/pull/1041): Avoid IllegalArgumentException when reading xattrs with zero length - [@jrobhoward](https://github.com/jrobhoward).\n* [#1042](https://github.com/java-native-access/jna/issues/1042): `c.s.j.p.WindowUtils.W32WindowUtils.getProcessFilePath(HWND)` does not close process handle - [@matthiasblaesing](https://github.com/matthiasblaesing).\n* [#1044](https://github.com/java-native-access/jna/issues/1044): Fix field order for `c.s.j.p.unix.X11.XResizeRequestEvent` - [@matthiasblaesing](https://github.com/matthiasblaesing).\n\nRelease 5.1.0\n=============\n\nFeatures\n--------\n* [#1029](https://github.com/java-native-access/jna/issues/1029): Add `statvfs` to `c.s.j.platform.linux.LibC` - [@dbwiddis](https://github.com/dbwiddis).\n* [#1032](https://github.com/java-native-access/jna/pull/1032): Deprecate `c.s.j.platform.win32.COM.util.annotation.ComEventCallback` in favour of `c.s.j.platform.win32.COM.util.annotation.ComMethod` - [@matthiasblaesing](https://github.com/matthiasblaesing).\n* [#1021](https://github.com/java-native-access/jna/pull/1021): Added `com.sun.jna.platform.linux.XAttr` and `com.sun.jna.platform.linux.XAttrUtil` JNA wrapper for `<sys/xattr.h>` for Linux - [@wilx](https://github.com/wilx).\n* [#381](https://github.com/java-native-access/jna/issues/381): Bind `c.s.j.p.win32.Secur32#CompleteAuthToken` - [@matthiasblaesing](https://github.com/matthiasblaesing).\n\nBug Fixes\n---------\n* [#1025](https://github.com/java-native-access/jna/issues/1025): Restore java 6 compatibility and introduce animal-sniffer to prevent regressions - [@matthiasblaesing](https://github.com/matthiasblaesing).\n* [#1027](https://github.com/java-native-access/jna/issues/1027): Fix Linux LibC.Sysinfo FieldOrder - [@dbwiddis](https://github.com/dbwiddis).\n* [#1033](https://github.com/java-native-access/jna/pull/1033): Replace deprecated Class#newInstance calls - [@matthiasblaesing](https://github.com/matthiasblaesing).\n\nRelease 5.0.0\n=============\n\nFeatures\n--------\n* [#975](https://github.com/java-native-access/jna/pull/982): Add package versions to OSGi metadata. - [@io7m](https://github.com/io7m).\n* [#915](https://github.com/java-native-access/jna/pull/915): Adding interfaces to call to Cryptui and Crypt32 windows libraries and adding related structures to Wincrypt. - [@rosh89](https://github.com/rosh89).\n* [#903](https://github.com/java-native-access/jna/pull/903): Carry `HRESULT` in `c.s.j.p.win32.COM.COMException`, introduce `c.s.j.p.win32.COM.COMInvokeException` as subclass of `COMException` for exception as the result of a `IDispatch#Invoke`. The `EXECPINFO` is unwrapped into fields in the `COMInvokeException` and correctly freed. - [@matthiasblaesing](https://github.com/matthiasblaesing).\n* [#822](https://github.com/java-native-access/jna/issues/822): `Native#loadLibrary` requires that the interface class passed in is an instance of Library. The runtime check can be enhanced by using a constraint generic. This breaks binary compatibility (see notes below) - [@d-noll](https://github.com/d-noll).<br /><br />In a followup, the original `loadLibrary` methods were deprecated and `Native#load` methods were introduced, that hold the new generic definitions. So this change is now binary compatible.\n* [#889](https://github.com/java-native-access/jna/issues/889): The `Structure#newInstance` receive the target type as a parameter. This adds a limited generic type, so that the return type ist the target type and not a generic structure, removing the necessity to do an explizit cast - [@matthiasblaesing](https://github.com/matthiasblaesing).\n* [#913](https://github.com/java-native-access/jna/issues/913): Add `@ComInterface` annotation to `com.sun.jna.platform.win32.COM.util.IConnectionPoint` to make it possible to retrieve it via `IUnknown#queryInterface` - [@matthiasblaesing](https://github.com/matthiasblaesing).\n* [#797](https://github.com/java-native-access/jna/issues/797): Binding `Advapi32#EnumDependendServices`, `Advapi32#EnumServicesStatusEx` and `Advapi32#QueryServiceStatus`. `W32Service#stopService` was modified to be more resilent when stopping service - [@matthiasblaesing](https://github.com/matthiasblaesing).\n* Bind `com.sun.jna.platform.win32.Kernel32.ExpandEnvironmentStrings` and add helper method for it as `Kernel32Util#expandEnvironmentStrings` - [@matthiasblaesing](https://github.com/matthiasblaesing).\n* [#935](https://github.com/java-native-access/jna/pull/935): Add RegConnectRegistry to Advapi32 mappings. - [@cxcorp](https://github.com/cxcorp).\n* [#947](https://github.com/java-native-access/jna/pull/947):  Allow retrieval of `ACEs` from `com.sun.jna.platform.win32.WinNT.ACL` even if the contained `ACE` is not currently supported - [@jrobhoward](https://github.com/jrobhoward).\n* [#954](https://github.com/java-native-access/jna/pull/954): Add `c.s.j.Structure.FieldOrder` annotation to define the field order of a structures without implementing `Structure#getFieldOrder()` - [@idosu](https://github.com/idosu).\n* [#959](https://github.com/java-native-access/jna/pull/959): Added `GetProcessTimes` and `GetProcessIoCounters` to `com.sun.jna.platform.win32.Kernel32` - [@dbwiddis](https://github.com/dbwiddis).\n* [#952](https://github.com/java-native-access/jna/issues/952): Added `CreateMutex`, `OpenMutex` and `ReleaseMutex` to `com.sun.jna.platform.win32.Kernel32` - [@matthiasblaesing](https://github.com/matthiasblaesing).\n* [#973](https://github.com/java-native-access/jna/issues/973): Added `PdhLookupPerfNameByIndex`, `PdhLookupPerfIndexByName`, and `PdhEnumObjectItems` to `c.s.j.platform.win32.Pdh` and a `c.s.j.platform.win32.PdhUtil` class to access them - [@dbwiddis](https://github.com/dbwiddis).\n* [#980](https://github.com/java-native-access/jna/issues/980): Added `PERF_OBJECT_TYPE`, `PERF_COUNTER_BLOCK`, and `PERF_COUNTER_DEFINITION` to `c.s.j.platform.win32.WinPerf` and added `Pointer` constructors to ``PERF_INSTANCE_DEFINITION` and `PERF_DATA_BLOCK` - [@dbwiddis](https://github.com/dbwiddis).\n* [#981](https://github.com/java-native-access/jna/issues/981): Added `WTS_PROCESS_INFO_EX`, `WTSEnumerateProcessesEx`, and `WTSFreeMemoryEx` to `c.s.j.platform.win32.Wtsapi32` - [@dbwiddis](https://github.com/dbwiddis).\n* [#983](https://github.com/java-native-access/jna/issues/983): Added `GetIfEntry`, `GetIfEntry2`, and `GetNetworkParams` and supporting structures `MIB_IFROW`, `MIB_IF_ROW2`, and `FIXED_INFO` to `c.s.j.platform.win32.IPHlpAPI.java` - [@dbwiddis](https://github.com/dbwiddis).\n* [#984](https://github.com/java-native-access/jna/issues/984): Added `CM_Locate_DevNode`, `CM_Get_Parent`, `CM_Get_Child`, `CM_Get_Sibling`, `CM_Get_Device_ID`, and `CM_Get_Device_ID_Size` to `c.s.j.platform.win32.Cfgmgr32.java` and a `c.s.j.platform.win32.Cfgmgr32Util` class for `CM_Get_Device_ID` - [@dbwiddis](https://github.com/dbwiddis).\n* [#988](https://github.com/java-native-access/jna/issues/988): Added `PdhLookupPerfIndexByEnglishName` to `c.s.j.platform.win32.PdhUtil` - [@dbwiddis](https://github.com/dbwiddis).\n* [#992](https://github.com/java-native-access/jna/pull/992): Improve stability of windows tests and add appveyor configuration for windows CI builds - [@matthiasblaesing](https://github.com/matthiasblaesing).\n* [#995](https://github.com/java-native-access/jna/pull/995): Added structures and methods to `c.s.j.platform.mac.SystemB` for Process, Network interface, Swapfile, Time, and Filesystem info - [@dbwiddis](https://github.com/dbwiddis).\n* [#997](https://github.com/java-native-access/jna/issues/997): Added `Sysinfo` structure and function to `c.s.j.platform.linux.LibC` - [@dbwiddis](https://github.com/dbwiddis).\n* [#1001](https://github.com/java-native-access/jna/pull/1001): Added overloads to `c.s.j.platform.win32.Advapi32Util` methods which allow the caller to specify `samDesiredExtra` to request additional registry key security and access rights - [@camw](https://github.com/camw).\n* [#1007](https://github.com/java-native-access/jna/pull/1007): Added OSGi export of Solaris package - [@swimmesberger](https://github.com/swimmesberger).\n* [#1003](https://github.com/java-native-access/jna/pull/1003): Allow `NativeMapped` to be used with enums - [@koraktor](https://github.com/koraktor).\n* [#994](https://github.com/java-native-access/jna/issues/994): Added `CoInitializeSecurity` and `CoSetProxyBlanket` to `c.s.j.platform.win32.Ole32`, added new `c.s.j.platform.win32.Wbemcli` classes needed to query WMI, and added a `WbemcliUtil` class implementing WMI queries. - [@dbwiddis](https://github.com/dbwiddis).\n* [#1013](https://github.com/java-native-access/jna/pull/1013): Add automatic module name entries to manifest of jna and jna-platform - [@matthiasblaesing](https://github.com/matthiasblaesing).\n* [#985](https://github.com/java-native-access/jna/issues/985): Improve handling of dynamicaly extracted native library. On Mac OS X systems `~/Library/Application Support/JNA/temp` and on other Unix like systems `$XDG_CACHE_DIR/JNA/temp` (Default value is: `~/.cache/JNA/temp`) is used - [@matthiasblaesing](https://github.com/matthiasblaesing).\n* Bind `com.sun.jna.platform.win32.Kernel32#ExitProcess` - [@Groostav](https://github.com/Groostav).\n\nBug Fixes\n---------\n* [#652](https://github.com/java-native-access/jna/issues/652): Dead Lock in class initialization - [@matthiasblaesing](https://github.com/matthiasblaesing).\n* [#843](https://github.com/java-native-access/jna/pull/843): Correctly bind `com.sun.jna.platform.win32.SecBufferDesc` and add convenience binding as `com.sun.jna.platform.win32.SspiUtil.ManagedSecBufferDesc`. Bind SSPI functions `InitializeSecurityContext`, `AcceptSecurityContext`, `QueryCredentialsAttributes`, `QuerySecurityPackageInfo`, `EncryptMessage`, `DecryptMessage`, `MakeSignature`, `VerifySignature` in `com.sun.jna.platform.win32.Secur32` - [@matthiasblaesing](https://github.com/matthiasblaesing).\n* [#863](https://github.com/java-native-access/jna/pull/863): Fix ARM softfloat/hardfloat detection by modifying armSoftFloat condition in ELFAnalyser. Before this fix a softfloat binary could be misdetected as hardfloat. - [@kunkun26](https://github.com/kunkun26).\n* [#867](https://github.com/java-native-access/jna/issues/867): Fix memory leak in `COMLateBindingObject#getStringProperty` - [@matthiasblaesing](https://github.com/matthiasblaesing).\n* [#871](https://github.com/java-native-access/jna/issues/871): Fix mapping of libc function `gethostname`, `sethostname`, `getdomainname` and `setdomainname` and bind `com.sun.jna.platform.win32.Winsock2.gethostname(byte[], int)` - [@matthiasblaesing](https://github.com/matthiasblaesing).\n* [#876](https://github.com/java-native-access/jna/pull/876): Restore java 6 compatibility - [@matthiasblaesing](https://github.com/matthiasblaesing).\n* [#882](https://github.com/java-native-access/jna/pull/882): Correctly close file in `ELFAnalyser#runDetection`, fix suggested by [@Sylvyrfysh](https://github.com/Sylvyrfysh) in [#880](https://github.com/java-native-access/jna/pull/880) - [@matthiasblaesing](https://github.com/matthiasblaesing).\n* [#887](https://github.com/java-native-access/jna/issues/887): MacFileUtils.moveToTrash() doesn't work in a sandboxed app fix suggested by [@sobakasu](https://github.com/sobakasu) - [@matthiasblaesing](https://github.com/matthiasblaesing).\n* [#894](https://github.com/java-native-access/jna/issues/894): NullPointerException can be caused by calling `com.sun.jna.platform.win32.COM.util.ProxyObject#dispose` multiple times - [@matthiasblaesing](https://github.com/matthiasblaesing).\n* [#925](https://github.com/java-native-access/jna/issues/925): Optimize `Structure#validate` and prevent `ArrayIndexOutOfBoundsException` in `SAFEARRAY#read` for zero dimensions - [@matthiasblaesing](https://github.com/matthiasblaesing).\n* [#340](https://github.com/java-native-access/jna/issues/340): Guard registry handling against out-of-bounds reads by ensuring all read strings are NULL terminated - [@matthiasblaesing](https://github.com/matthiasblaesing).\n* [#902](https://github.com/java-native-access/jna/issues/902): Allow building JNA on JDK 10. `javah` \n  was removed from the JDK and `javac` is now used to create the necessary headers. \n  JNA now has JDK 8 as the minimum build version, at runtime Java 6 is the minimum version.<br />\n  Native code for platforms with a JDK version lower than 8 can still be build by (demonstrated for Solaris x86): \n  <ol>\n      <li>Run `ant -Dbuild.os.name=SunOS -Dbuild.os.arch=x86 native-build-package`</li>\n      <li>Transfer the `build/build-package-sunos-x86-5.2.1.zip` file to the target system. The file holds the native sources, the necessary headers and and a shell script for the build.</li>\n      <li>Expand the zip on the target system.</li>\n      <li>Setup `JAVA_HOME` to point to the JDK sources.</li>\n      <li>Change into the expanded directory and run `bash build.sh`.</li>\n      <li>The resulting `sunos-x86.jar` is copied back to the original build system to `lib/native/sunos-x86.jar`</li>\n  </ol> - [@matthiasblaesing](https://github.com/matthiasblaesing).\n* [#958](https://github.com/java-native-access/jna/issues/958): Update for PR 863: Old toolchains produce binaries without hard-/softfloat markers. Rasbian is missing the markers and the oracle JDK is also affected. For hardfloat detection now also the Arm EABI section is also considered - [@matthiasblaesing](https://github.com/matthiasblaesing).\n* [#974](https://github.com/java-native-access/jna/issues/974): If the callback code failed to attach to the JVM, this lead to a segfault. The success of attaching to the JVM was checked to late and an invalid `JNIEnv` pointer was used to access the JVM - [@matthiasblaesing](https://github.com/matthiasblaesing).\n* [#1010](https://github.com/java-native-access/jna/issues/1010): Fix binding of `lpAccessName` parameter of `com.sun.jna.platform.win32.Mpr#WNetUseConnection` - [@matthiasblaesing](https://github.com/matthiasblaesing).\n* [#384](https://github.com/java-native-access/jna/issues/384): Switch default value for `jna.nosys` to `true`. By default then the embedded native library is used - [@matthiasblaesing](https://github.com/matthiasblaesing).\n\nBreaking Changes\n----------------\n\n* `com.sun.jna.Pointer#SIZE` is removed. Its use is replaced by `com.sun.jna.Native#POINTER_SIZE` \n  to prevent a class loading deadlock, when JNA is initialized from multiple threads\n* `com.sun.jna.Pointer#getString(long offset, boolean wide)` is removed. It was replaced by\n  `com.sun.jna.Pointer#getString(long offset)` or\n  `com.sun.jna.Pointer#getWideString(long offset)`\n* `com.sun.jna.Pointer#getStringArray(long offset, boolean wide)` is removed. It was replaced by\n  `com.sun.jna.Pointer#getStringArray(long offset)` or\n  `com.sun.jna.Pointer#getWideStringArray(long offset)`\n* `com.sun.jna.Pointer#setString(long offset, String value, boolean wide)` is removed. It was replaced by\n  `com.sun.jna.Pointer#setString(long offset, String value)` or\n  `com.sun.jna.Pointer#setWideString(long offset, String value)`\n* `com.sun.jna.Structure#setFieldOrder` is removed. It was replaced by \n  `com.sun.jna.Structure#getFieldOrder` and threw an `java.lang.Error` on call.\n* `com.sun.jna.Native#parseVersion` was removed without replacement\n* `com.sun.jna.Native#setPreserveLastError` and `com.sun.jna.Native#getPreserveLastError`\n  were removed without replacement. They were turned into NOOPs in the past.\n* `com.sun.jna.Native#getDirectByteBuffer` was replaced by `com.sun.jna.Pointer#getByteBuffer`\n* the parameters of the methods `gethostname`, `sethostname`, `getdomainname` \n   and `setdomainname` in the interface `com.sun.jna.platform.unix.LibCAPI`\n  were changed from `(char[] name, int len)` to `(byte[] name, int len)`\n* `com.sun.jna.Platform#isAix` was replaced by `com.sun.jna.Platform#isAIX`\n* `com.sun.jna.platform.win32.Sspi.SecBufferDesc` was incompatibly changed to \n  match the correct native semantics. SecBufferDesc describing more than one\n  buffer were broken. For most usecases \n  `com.sun.jna.platform.win32.SspiUtil.ManagedSecBufferDesc` is the best \n  alternative.\n* `com.sun.jna.platform.win32.WinBase.FILETIME#toLong()` was replaced by\n  `com.sun.jna.platform.win32.WinBase.FILETIME#toTime()`\n* `com.sun.jna.platform.win32.Variant#COM_DAYS_ADJUSTMENT` was removed\n* `com.sun.jna.platform.win32.Variant#MICRO_SECONDS_PER_DAY` was removed\n* `com.sun.jna.platform.win32.Variant.VARIANT#toJavaDate` was removed\n* `com.sun.jna.platform.win32.Variant.VARIANT#fromJavaDate` was removed\n* `com.sun.jna.platform.win32.User32#MonitorFromPoint(Point pt, int dwFlags)`\n  was replaced by\n  `com.sun.jna.platform.win32.User32#MonitorFromPoint(Point.ByValue pt, int dwFlags)`\n* `com.sun.jna.platform.win32.OleAuto.LoadTypeLib(WString, PointerByReference)`\n  was replaced by\n  `com.sun.jna.platform.win32.OleAuto.LoadTypeLib(String, PointerByReference)`\n* `com.sun.jna.platform.win32.Kernel32Util.formatMessageFromHR(HRESULT)`\n  was replaced by\n  `com.sun.jna.platform.win32.Kernel32Util.formatMessage(HRESULT)`\n* `com.sun.jna.platform.win32.COM.COMException` was structurally modified. The\n  `pExcepInfo` and `puArgErr` members were removed and `hresult` member was added.\n  The now missing information in `COMException` was moved to `COMInvokeException`.\n* The third parameter of `com.sun.jna.platform.win32.COM.IShellFolder#GetDisplayNameOf`\n  was changed from `PointerByReference` to `STRRET` and matching this,\n  the first parameter of `com.sun.jna.platform.win32.Shlwapi.StrRetToStr` was\n  changed identically.\n* `ACE_HEADER` replaces `ACEStructure` as the base class for `ACEs`.\n  `com.sun.jna.platform.win32.WinNT.ACL` was modified to support ACLS, that contain\n  `ACEs` other than `ACCESS_ALLOWED_ACE_TYPE` and `ACCESS_DENIED_ACE_TYPE` by\n   widening the return type of `getACEStructures` to `ACE_HEADER[]` and renaming\n   the method to `getACEs`. In\n   consequence `com.sun.jna.platform.win32.Advapi32Util#getFileSecurity` was\n   changed similarly. The SID accessors `getSidString` and `getSID` were moved\n   from `ACEStructure` to `ACCESS_ACEStructure`.\n* `com.sun.jna.platform.win32.Ole32#CoCreateGuid(GUID.ByReference pguid)` was replaced by\n  `com.sun.jna.platform.win32.Ole32#CoCreateGuid(GUID pguid)` and \n  `com.sun.jna.platform.win32.Ole32#CLSIDFromString(WString lpsz, CLSID.ByReference pclsid)` was replaced by\n  `com.sun.jna.platform.win32.Ole32#CLSIDFromString(String lpsz, CLSID.ByReference pclsid)`\n\nRelease 4.5.0\n=============\n\nFeatures\n--------\n* [#774](https://github.com/java-native-access/jna/pull/774): Addition win32 api : SendMessage, GetActiveWindow, COPYDATASTRUCT and a few constants + a demo application - [@cnico](https://github.com/cnico).\n* [#783](https://github.com/java-native-access/jna/pull/783): Add Ole32 functions: `OleBuildVersion`, `OleInitialize`, `OleUninitialize`, `OleFlushClipboard`, `OleRun`, add VARIANT conversion functions to OleAuto, add default locale, LCID and LANG to WinNT - [@matthiasblaesing](https://github.com/matthiasblaesing).\n* [#784](https://github.com/java-native-access/jna/issues/784): Added Solaris Kstat library - [@dbwiddis](https://github.com/dbwiddis).\n* [#805](https://github.com/java-native-access/jna/issues/805): Provide a way to pass JNIEnv pointer to native method and support OPTION_ALLOW_OBJECTs for direct mapping - [@ncruces](https://github.com/ncruces).\n* [#816](https://github.com/java-native-access/jna/pull/816): Support `boolean[]` in direct mapping - [@ncruces](https://github.com/ncruces).\n* [#827](https://github.com/java-native-access/jna/pull/827): Add support for linux-mips64el - [@all7](https://github.com/all7).\n* [#845](https://github.com/java-native-access/jna/issues/845): Add support for linux-s390x - [@matthiasblaesing](https://github.com/matthiasblaesing).\n* [#771](https://github.com/java-native-access/jna/issues/771): Rebuild native libraries for linux-x86 and linux-x86-64 with an against an older GLIBC (minimum version of glibc for these architectures is now 2.7) - [@matthiasblaesing](https://github.com/matthiasblaesing).\n* [#821](https://github.com/java-native-access/jna/issues/821): Move windows service related functions and structures in ntservice sample project to `com.sun.jna.platform.win32.Advapi32`: `StartServiceCtrlDispatcher`, `RegisterServiceCtrlHandler`, `RegisterServiceCtrlHandlerEx`, `SetServiceStatus`, `CreateService`, `DeleteService` and `com.sun.jna.platform.win32.Winsvc`: `Handler`, `HandlerEx`, `SERVICE_MAIN_FUNCTION`, `SERVICE_TABLE_ENTRY`, `SERVICE_DESCRIPTION`, `SERVICE_STATUS_HANDLE` - [@matthiasblaesing](https://github.com/matthiasblaesing).\n\nBug Fixes\n---------\n* [#776](https://github.com/java-native-access/jna/issues/776): Do not include ClassPath attribute in MANIFEST.MF of jna-platform. - [@matthiasblaesing](https://github.com/matthiasblaesing).\n* [#785](https://github.com/java-native-access/jna/issues/785): OaIdlUtil#toPrimitiveArray fails if dimension bounds are not 0-based - [@matthiasblaesing](https://github.com/matthiasblaesing).\n* [#795](https://github.com/java-native-access/jna/issues/795): com.sun.jna.platform.win32.WinDef.WORDByReference holds a WORD which is defined to 16 bit on windows, so it needs to be accessed as short (getShort()). Fix suggested by  - [@kdeines](https://github.com/kdeines).\n* [#804](https://github.com/java-native-access/jna/pull/804) Main-Class in jna-platform.jar collides with java 9 module system - [@matthiasblaesing](https://github.com/matthiasblaesing).\n* [#838](https://github.com/java-native-access/jna/pull/838): Fix binding of `com.sun.jna.platform.win32.User32#MonitorFromPoint` - [@matthiasblaesing](https://github.com/matthiasblaesing).\n* [#834](https://github.com/java-native-access/jna/issues/834): Declare structure members of LPPRINTER_DEFAULTS as public - [@matthiasblaesing](https://github.com/matthiasblaesing).\n\nRelease 4.4.0\n=============\n\nFeatures\n--------\n* [#757](https://github.com/java-native-access/jna/issues/757): Build android archive (AAR) - [@matthiasblaesing](https://github.com/matthiasblaesing).\n* [#767](https://github.com/java-native-access/jna/pull/767): Add Win32 API mapping for Shlwapi PathIsUNC - [@ivanwick](https://github.com/ivanwick).\n* [#753](https://github.com/java-native-access/jna/issues/753): Support arm hardfloat and softfloat by introducing armel as platform (ARM EABI Little-endian) - [@matthiasblaesing](https://github.com/matthiasblaesing).\n* [#772](https://github.com/java-native-access/jna/pull/772): Improved speed of GDIUtil.getScreenshot() by ~30% - [@sommd](https://github.com/sommd).\n\nBug Fixes\n---------\n* [#754](https://github.com/java-native-access/jna/issues/754): Move MSVC build to standard stdbool.h and require Visual C++ 2015 (sizeof(bool) = 1 is now also true on MSVC build) - [@matthiasblaesing](https://github.com/matthiasblaesing).\n* [#399](https://github.com/java-native-access/jna/issues/399): Check native version before attempting to call into native code - [@matthiasblaesing](https://github.com/matthiasblaesing).\n* [#763](https://github.com/java-native-access/jna/issues/763): Fix vararg calls without fixed parts - [@matthiasblaesing](https://github.com/matthiasblaesing).\n* [#770](https://github.com/java-native-access/jna/pull/770): Fix for free data handle in DdemlUtil. - [@stolarczykt](https://github.com/stolarczykt).\n\nRelease 4.3.0\n=============\n\nFeatures\n--------\n* [#526](https://github.com/java-native-access/jna/pull/526): Added initialization and conversion between Windows SYSTEMTIME and Java Calendar - [@lgoldstein](https://github.com/lgoldstein).\n* [#532](https://github.com/java-native-access/jna/pull/529): Added `com.sun.jna.platform.win32.Mpr`, `com.sun.jna.platform.win32.LmShare`, and `com.sun.jna.platform.win32.Winnetwk` - [@amarcionek](https://github.com/amarcionek).\n* [#532](https://github.com/java-native-access/jna/pull/529): Added `ACCESS_*` definitions to `com.sun.jna.platform.win32.LmAccess` - [@amarcionek](https://github.com/amarcionek).\n* [#532](https://github.com/java-native-access/jna/pull/529): Added `NetShareAdd` and `NetShareDel` to `com.sun.jna.platform.win32.Netapi32` - [@amarcionek](https://github.com/amarcionek).\n* [#535](https://github.com/java-native-access/jna/pull/535): Added `CreateProcessWithLogonW` to `com.sun.jna.platform.win32.Advapi32` - [@mlfreeman2](https://github.com/mlfreeman2).\n* [#535](https://github.com/java-native-access/jna/pull/535): Added `CertAddEncodedCertificateToSystemStore` to `com.sun.jna.platform.win32.Crypt32` - [@mlfreeman2](https://github.com/mlfreeman2).\n* [#535](https://github.com/java-native-access/jna/pull/535): Added `BitBlt` to `com.sun.jna.platform.win32.GDI32`, Added `com.sun.jna.platform.win32.GDI32Util` and added `getScreenshot()` to it - [@mlfreeman2](https://github.com/mlfreeman2).\n* [#535](https://github.com/java-native-access/jna/pull/535): Added `SHEmptyRecycleBin`, `ShellExecuteEx` to `com.sun.jna.platform.win32.Shell32` - [@mlfreeman2](https://github.com/mlfreeman2).\n* [#535](https://github.com/java-native-access/jna/pull/535): Added `GetDesktopWindow` to `com.sun.jna.platform.win32.User32` - [@mlfreeman2](https://github.com/mlfreeman2).\n* [#540](https://github.com/java-native-access/jna/pull/539): Added Missing Windows kernel32 method: QueryFullProcessImageName - [@yossieilaty](https://github.com/yossieilaty).\n* [#543](https://github.com/java-native-access/jna/pull/543): Added `ProcessIdToSessionId`, `LoadLibraryEx`, `FreeLibrary` and `Find/Load/Lock/SizeofResource` to `com.sun.jna.platform.win32.Kernel32` - [@mlfreeman2](https://github.com/mlfreeman2).\n* [#545](https://github.com/java-native-access/jna/pull/545): Added `EnumResourceTypes` and `EnumResourceNames` to `com.sun.jna.platform.win32.Kernel32` - [@mlfreeman2](https://github.com/mlfreeman2).\n* [#547](https://github.com/java-native-access/jna/pull/547): Added `GetSystemTimes` to `com.sun.jna.platform.win32.Kernel32` - [@dbwiddis](https://github.com/dbwiddis).\n* [#548](https://github.com/java-native-access/jna/pull/548): Return 64-bit unsigned integer from `com.sun.jna.platform.win32.WinBase.FILETIME` - [@dbwiddis](https://github.com/dbwiddis).\n* [#524](https://github.com/java-native-access/jna/pull/524): Added IShellFolder interface plus necessary utility functions to Windows platform, and a sample for enumerating objects in My Computer - [@lwahonen](https://github.com/lwahonen).\n* [#471](https://github.com/java-native-access/jna/issues/471): Determine size of native `bool` - [@twall](https://github.com/twall).\n* [#484](https://github.com/java-native-access/jna/pull/484): Added `XFetchName` to `X11` interface - [@pinaf](https://github.com/pinaf).\n* [#554](https://github.com/java-native-access/jna/pull/554): Initial code for a few Unix 'libc' API(s) [@lgoldstein](https://github.com/lgoldstein)\n* [#552](https://github.com/java-native-access/jna/pull/552): Added `Module32FirstW` and `Module32NextW` to `com.sun.jna.platform.win32.Kernel32` (and helper to `com.sun.jna.platform.win32.Kernel32Util`) and `MODULEENTRY32W` structure to `com.sun.jna.platform.win32.Tlhelp32` - [@mlfreeman2](https://github.com/mlfreeman2).\n* [#564](https://github.com/java-native-access/jna/pull/564): Use generic definition of Native#loadLibrary [@lgoldstein](https://github.com/lgoldstein)\n* [#562](https://github.com/java-native-access/jna/pull/562): Added `com.sun.jna.platform.win32.VersionUtil` with `getFileVersionInfo` utility method to get file major, minor, revision, and build version parts - [@mlfreeman2](https://github.com/mlfreeman2).\n* [#563](https://github.com/java-native-access/jna/pull/563): Added `com.sun.jna.platform.win32.Wininet` with the following 4 methods: `FindFirstUrlCacheEntry`, `DeleteUrlCacheEntry`, `FindCloseUrlCache`, `FindNextUrlCacheEntry`, and the `INTERNET_CACHE_ENTRY_INFO` structure, and a helper in `com.sun.jna.platform.win32.WininetUtil` for parsing WinInet's cache - [@mlfreeman2](https://github.com/mlfreeman2).\n* [#567](https://github.com/java-native-access/jna/pull/567): Added `PrintWindow`, `IsWindowEnabled`, `IsWindow`, `FindWindowEx`, `GetAncestor`, `GetCursorPos`, `SetCursorPos`, `SetWinEventHook`, `UnhookWinEvent`, `CopyIcon`, and `GetClassLong` to `com.sun.jna.platform.win32.User32` and supporting constants to `com.sun.jna.platform.win32.WinUser` - [@mlfreeman2](https://github.com/mlfreeman2).\n* [#573](https://github.com/java-native-access/jna/pull/573): Added `EnumProcessModules`, `GetModuleInformation`, and `GetProcessImageFileName` to `com.sun.jna.platform.win32.Psapi` and added `ExtractIconEx` to `com.sun.jna.platform.win32.Shell32` - [@mlfreeman2](https://github.com/mlfreeman2).\n* [#574](https://github.com/java-native-access/jna/pull/574): Using static final un-modifiable List of field names for structure(s) - [@lgoldstein](https://github.com/lgoldstein).\n* [#577](https://github.com/java-native-access/jna/pull/577): Apply generic definitions wherever applicable - [@lgoldstein](https://github.com/lgoldstein).\n* [#569](https://github.com/java-native-access/jna/pull/569): Added `com.sun.jna.platform.win32.Winspool.PRINTER_INFO_2` support. Added GetPrinter and ClosePrinter functions in `com.sun.jna.platform.win32.Winspool` - [@IvanRF](https://github.com/IvanRF).\n* [#583](https://github.com/java-native-access/jna/pull/583): Added printer attributes and status - [@IvanRF](https://github.com/IvanRF).\n* [#589](https://github.com/java-native-access/jna/pull/589): Use `com.sun.jna.MethodResultContext` in direct mapping (as done in interface mapping) - [@marco2357](https://github.com/marco2357).\n* [#595](https://github.com/java-native-access/jna/pull/595): Allow calling COM methods/getters requiring hybrid calling (METHOD+PROPERTYGET) - [@matthiasblaesing](https://github.com/matthiasblaesing).\n* [#582](https://github.com/java-native-access/jna/pull/582): Mavenize the build process - Phase 1: building the native code via Maven - [@lgoldstein](https://github.com/lgoldstein).\n* [#606](https://github.com/java-native-access/jna/pull/606): Added Kernel32Util method to facilitate checking that calls to LocalFree/GlobalFree are successful - [@lgoldstein](https://github.com/lgoldstein).\n* [#612](https://github.com/java-native-access/jna/pull/612): `Kernel32Util.freeLocalMemory()`/`Kernel32Util.freeGlobalMemory()` always throw `com.sun.jna.platform.win32.Win32Exception` if failed - [@lgoldstein](https://github.com/lgoldstein).\n* [#608](https://github.com/java-native-access/jna/pull/608): Mavenize the build process - change parent and native pom artifactId/name to differentiate in IDE and build tools. - [@bhamail](https://github.com/bhamail)\n* [#613](https://github.com/java-native-access/jna/pull/613): Make `com.sun.jna.platform.win32.Win32Exception` extend `com.sun.jna.LastErrorException` - [@lgoldstein](https://github.com/lgoldstein).\n* [#614](https://github.com/java-native-access/jna/pull/614): Added standard `com.sun.jna.platform.win32.Kernel32Util.closeHandle()` method that throws a `com.sun.jna.platform.win32.Win32Exception` if failed to close the handle - [@lgoldstein](https://github.com/lgoldstein).\n* [#618](https://github.com/java-native-access/jna/pull/618): Implement SAFEARRAY access and bugfix VARIANT - [@matthiasblaesing](https://github.com/matthiasblaesing).\n* [#616](https://github.com/java-native-access/jna/pull/616): Allow access to base interfaces (most important IDispatch) via ProxyObject and improve binding by allowing to use dispId for the call - [@matthiasblaesing](https://github.com/matthiasblaesing).\n* [#621](https://github.com/java-native-access/jna/pull/621): Added TYPEFLAGS-constants for `wTypeFlags` in `com.sun.jna.platform.win32.OaIdl.TYPEATTR` - [@SevenOf9Sleeper](https://github.com/SevenOf9Sleeper).\n* [#625](https://github.com/java-native-access/jna/pull/625): Make conversion to/from java to/from VARIANT in `com.sun.jna.platform.win32.COM.util.Convert` more flexible and dependable - [@matthiasblaesing](https://github.com/matthiasblaesing).\n* [#639](https://github.com/java-native-access/jna/pull/639): Add getloadavg() to OS X and Unix - [@dbwiddis](https://github.com/dbwiddis).\n* [#640](https://github.com/java-native-access/jna/pull/640): Add `com.sun.jna.platform.win32.Psapi.GetPerformanceInfo()`, `com.sun.jna.platform.win32.Kernel32.GetTickCount64()`, and `com.sun.jna.platform.win32.Kernel32.SetErrorMode()` - [@dbwiddis](https://github.com/dbwiddis).\n* [#642](https://github.com/java-native-access/jna/pull/642): COM calls with variable number of arguments (varargs) are now supported - [@SevenOf9Sleeper](https://github.com/SevenOf9Sleeper).\n* [#644](https://github.com/java-native-access/jna/pull/644): New ant target 'install' for installing JNA artifacts in local m2-repository - [@SevenOf9Sleeper](https://github.com/SevenOf9Sleeper).\n* [#649](https://github.com/java-native-access/jna/pull/649): Bugfix msoffice sample and add two samples taken from MSDN and translated from VisualBasic to Java  - [@matthiasblaesing](https://github.com/matthiasblaesing).\n* [#654](https://github.com/java-native-access/jna/pull/654): Support named arguments for `com.sun.jna.platform.win32.COM.util.CallbackProxy` based callbacks - [@matthiasblaesing](https://github.com/matthiasblaesing).\n* [#659](https://github.com/java-native-access/jna/issues/659): Enable LCID (locale) override for `com.sun.jna.platform.win32.COM.util.ProxyObject`-based COM calls - [@matthiasblaesing](https://github.com/matthiasblaesing).\n* [#665](https://github.com/java-native-access/jna/pull/665): Added `XSetWMProtocols` and `XGetWMProtocols` to `com.sun.jna.platform.unix.X11` - [@zainab-ali](https://github.com/zainab-ali).\n* [#667](https://github.com/java-native-access/jna/pull/667): Added SetFileSecurity, GetSecurityInfo and SetSecurityInfo to `com.sun.jna.platform.win32.Advapi32` - [@amarcionek](https://github.com/amarcionek).\n* [#667](https://github.com/java-native-access/jna/pull/667): Added NtSetSecurityObject and NtQuerySecurityObject to `com.sun.jna.platform.win32.NtDll` - [@amarcionek](https://github.com/amarcionek).\n* [#680](https://github.com/java-native-access/jna/pull/680): Added `SetCurrentProcessExplicitAppUserModelID` and `GetCurrentProcessExplicitAppUserModelID` to `com.sun.jna.platform.win32.Shell32` for setting the [System.AppUserModel.ID](https://msdn.microsoft.com/en-us/library/windows/desktop/dd391569.aspx) of the host process - [@rednoah](https://github.com/rednoah).\n* [#693](https://github.com/java-native-access/jna/pull/693): Bind DDEML (Dynamic Data Exchange Management Library), add a thread implementation that runs a windows message loop - [@matthiasblaesing](https://github.com/matthiasblaesing).\n* [#702](https://github.com/java-native-access/jna/pull/702): Added `GetClientRect` to `com/sun/jna/platform/win32/User32` - [@Jonatino](https://github.com/Jonatino).\n* [#689](https://github.com/java-native-access/jna/pull/689): Add `GetProcAddress(HMODULE, int)` to `com.sun.jna.platform.win32.Kernel32` - [@matthiasblaesing](https://github.com/matthiasblaesing).\n* [#723](https://github.com/java-native-access/jna/pull/723): Added `com.sun.jna.platform.win32.Wevtapi` and `com.sun.jna.platform.win32.Winevt` - [@sakamotodesu](https://github.com/sakamotodesu).\n* [#720](https://github.com/java-native-access/jna/issues/720): Added `SetThreadExecutionState` to `com.sun.jna.platform.win32.Kernel32` - [@matthiasblaesing](https://github.com/matthiasblaesing).\n* [#738](https://github.com/java-native-access/jna/pull/738): Added `GetSecurityDescriptorOwner`, `SetSecurityDescriptorOwner`, `GetSecurityDescriptorGroup`, `SetSecurityDescriptorGroup`, `GetSecurityDescriptorControl`, `SetSecurityDescriptorControl`, `GetSecurityDescriptorDacl`, `SetSecurityDescriptorDacl`, `MakeSelfRelativeSD`, `MakeAbsoluteSD`, `EqualSid`, `InitializeSecurityDescriptor`, `InitializeAcl`, `AddAce`, `AddAccessAllowedAce`, `AddAccessAllowedAceEx`, and `GetAce` to `com.sun.jna.platform.win32.Advapi32 - [@amarcionek](https://github.com/amarcionek).\n* [#738](https://github.com/java-native-access/jna/pull/738): Added `RtlNtStatusToDosError` to `com.sun.jna.platform.win32.NtDll - [@amarcionek](https://github.com/amarcionek).\n* [#732](https://github.com/java-native-access/jna/pull/732): Added `com.sun.jna.platform.win32.WinioctlUtil` for help in determining FSCTL_* codes - [@amarcionek](https://github.com/amarcionek).\n* [#732](https://github.com/java-native-access/jna/pull/732): Added `com.sun.jna.platform.win32.Ntifs` with Reparse Point structures and defines - [@amarcionek](https://github.com/amarcionek).\n* [#732](https://github.com/java-native-access/jna/pull/732): Added initialization of FILETIME from LARGE_INTEGER - [@amarcionek](https://github.com/amarcionek).\n* [#732](https://github.com/java-native-access/jna/pull/732): Added `GetFileInformationByHandleEx` and `SetFileInformationByHandle` to `com.sun.jna.platform.win32.Kernel32` - [@amarcionek](https://github.com/amarcionek).\n* [#740](https://github.com/java-native-access/jna/pull/740): Modified `com.sun.jna.platform.win32.WinioctlUtil` for simplicity dealing with FSCTL_* codes - [@amarcionek](https://github.com/amarcionek).\n* [#745](https://github.com/java-native-access/jna/pull/745): Added Secur32#QueryContextAttributes - [@barney2k7](https://github.com/barney2k7).\n\nBug Fixes\n---------\n* [#549](https://github.com/java-native-access/jna/pull/549): Fixed bug in types derived from XID - [@twall](https://github.com/twall).\n* [#536](https://github.com/java-native-access/jna/pull/536): Fixed bug in determining the Library and options associated with types defined outside of a Library - [@twall](https://github.com/twall).\n* [#531](https://github.com/java-native-access/jna/pull/531): Ensure direct-mapped callbacks use the right calling convention - [@twall](https://github.com/twall).\n* [#566](https://github.com/java-native-access/jna/pull/566): Fix return type of Native#loadLibrary to match unconstrained generic [@lgoldstein](https://github.com/lgoldstein).\n* [#584](https://github.com/java-native-access/jna/pull/584): Promote float varargs to double - [@marco2357](https://github.com/marco2357).\n* [#588](https://github.com/java-native-access/jna/pull/588): Fix varargs calls on arm - [@twall](https://github.com/twall).\n* [#593](https://github.com/java-native-access/jna/pull/593): Improve binding of TypeLib bindings - [@matthiasblaesing](https://github.com/matthiasblaesing).\n* [#578](https://github.com/java-native-access/jna/pull/578): Fix COM CallbackHandlers, allow usage of VARIANTs directly in c.s.j.p.w.COM.util.ProxyObject and fix native memory leak in c.s.j.p.w.COM.util.ProxyObject - [@matthiasblaesing](https://github.com/matthiasblaesing)\n* [#601](https://github.com/java-native-access/jna/pull/601): Remove COMThread and COM initialization from objects and require callers to initialize COM themselves. Asserts are added to guard correct usage. - [@matthiasblaesing](https://github.com/matthiasblaesing).\n* [#602](https://github.com/java-native-access/jna/pull/602): Make sure SID related memory is properly released once no longer required [@lgoldstein](https://github.com/lgoldstein).\n* [#610](https://github.com/java-native-access/jna/pull/610): Fixed issue #604: Kernel32#GetLastError() always returns ERROR_SUCCESS [@lgoldstein](https://github.com/lgoldstein).\n* [#633](https://github.com/java-native-access/jna/pull/633): Restore default usage of platform native encoding for Java strings passed to native functions (was hard-coded to UTF-8 in 4.0 and later) [@amake](https://github.com/amake)\n* [#634](https://github.com/java-native-access/jna/pull/634): Improve BSTR handling and add `SysStringByteLen` and `SysStringLen` to `com.sun.jna.platform.win32.OleAuto` - [@matthiasblaesing](https://github.com/matthiasblaesing).\n* [#646](https://github.com/java-native-access/jna/issues/646): `platform.win32.COM.COMBindingBaseObject` swallows reason if instantiation fails - [@matthiasblaesing](https://github.com/matthiasblaesing).\n* [#674](https://github.com/java-native-access/jna/pull/674): Update references to Apache License as requested by issue #673 [@bhamail](https://github.com/bhamail)\n* [#636](https://github.com/java-native-access/jna/issues/636): Staticly link visual c++ runtime when building with MSVC - [@matthiasblaesing](https://github.com/matthiasblaesing).\n* [#624](https://github.com/java-native-access/jna/issues/624): WinDef.DWORD getLow() & getHigh() using incorrect bit mask - [@matthiasblaesing](https://github.com/matthiasblaesing).\n* [#668](https://github.com/java-native-access/jna/issues/668): Correct typemapper used for structures defined in `com.sun.jna.platform.win32.DsGetDC`, `com.sun.jna.platform.win32.LMAccess`, `com.sun.jna.platform.win32.LMShare`, `com.sun.jna.platform.win32.Sspi`, `com.sun.jna.platform.win32.WinBase`, `com.sun.jna.platform.win32.WinCrypt`, `com.sun.jna.platform.win32.WinUser` and `com.sun.jna.platform.win32.Winnetwk` - [@matthiasblaesing](https://github.com/matthiasblaesing).\n* [#696](https://github.com/java-native-access/jna/issues/696): COMLateBindingObject.getAutomationProperty method that takes iDispatch parameter doesn't use it - [@matthiasblaesing](https://github.com/matthiasblaesing).\n* [#664](https://github.com/java-native-access/jna/issues/664): Prevent premature GC of Pointer and Function objects by passing whole object into JNI call in addition to the raw pointer value - [@matthiasblaesing](https://github.com/matthiasblaesing).\n* [#669](https://github.com/java-native-access/jna/pull/669): Ensure XSI-compliant strerror_r is used, to prevent corrupted error messages on linux - [@DavidKeller](https://github.com/DavidKeller).\n* [#697](https://github.com/java-native-access/jna/issues/697): Ensure disposed memory is removed from Memory#allocatedMemory map - [@matthiasblaesing](https://github.com/matthiasblaesing).\n* [#731](https://github.com/java-native-access/jna/issues/731): Require mingw-w64 instead of mingw as the alternative to the MSVC build - [@matthiasblaesing](https://github.com/matthiasblaesing).\n* [#747](https://github.com/java-native-access/jna/issues/747): - Call `Native.toString()` in `#getFileName()` and `#getAlternateFileName()` in `c.s.j.p.win32.WinBase` instead of custom NUL terminator logic - [@jhult](https://github.com/jhult).\n\nRelease 4.2.1\n=============\n\nFeatures\n--------\n* [#504](https://github.com/java-native-access/jna/pull/504): Add support for linux-sparcv9 - [@alexvsimon](https://github.com/alexvsimon).\n* [#510](https://github.com/java-native-access/jna/pull/510): Added `GetCommState`, `GetCommTimeouts` `SetCommState` and `SetCommTimeouts` to `com.sun.jna.platform.win32.Kernel32`. Added `DCB` structure to `com.sun.jna.platform.win32.WinBase` - [@MBollig](https://github.com/MBollig).\n* [#512](https://github.com/java-native-access/jna/pull/512): Make loading debug flags mutable [@lwahonen](https://github.com/lwahonen).\n* [#514](https://github.com/java-native-access/jna/pull/514): Added `host_processor_info` to `com.sun.jna.platform.mac.SystemB`  - [@dbwiddis](https://github.com/dbwiddis).\n* [#519](https://github.com/java-native-access/jna/pull/519): Added JNA functional overview - [@twall](https://github.com/twall).\n* [#528](https://github.com/java-native-access/jna/pull/528): Added idea-jar ant task that creates a convenience jar that contains all native dispatch libraries - [@lwahonen](https://github.com/lwahonen).\n\nBug Fixes\n---------\n* [#515](https://github.com/java-native-access/jna/issues/515): Update linux-arm natives omitted in 4.2 [@twall](https://github.com/twall).\n\nRelease 4.2\n===========\n\nFeatures\n--------\n* [#452](https://github.com/java-native-access/jna/pull/452): Added Mac OS X System.B library at `com.sun.jna.platform.mac.SystemB`  including support for `sysctl`, `sysctlbyname`, `sysctlnametomib`, `mach_host_self`, `host_page_size`, `host_statistics` and `host_statistics64` - [@dbwiddis](https://github.com/dbwiddis).\n* [#446](https://github.com/java-native-access/jna/pull/446): Added `com.sun.jna.platform.win32.Advapi32.GetNamedSecurityInfo`, `SetNamedSecurityInfo`, `GetSecurityDescriptorLength`, `IsValidSecurityDescriptor`, `IsValidAcl` - [@amarcionek](https://github.com/amarcionek).\n* [#387](https://github.com/java-native-access/jna/pull/397): Use of interfaces and annotations to provide easier implementation of COM interfaces (with `InvocationHandler`) - [@dhakehurst](https://github.com/dhakehurst).\n* [#387](https://github.com/java-native-access/jna/pull/397): Support for COM event callbacks - [@dhakehurst](https://github.com/dhakehurst).\n* [#387](https://github.com/java-native-access/jna/pull/397): Support for COM interface discovery by iteration over `RunningObjectTable` - [@dhakehurst](https://github.com/dhakehurst).\n* Updated AIX natives and build - [@twall](https://github.com/twall).\n* [#290](https://github.com/java-native-access/jna/pull/290): Improved the stacktrace for the exceptions thrown by `com.sun.jna.Structure` - [@ebourg](https://github.com/ebourg).\n* [#332](https://github.com/java-native-access/jna/pull/332): Added Win32 Monitor Configuration API in `com.sun.jna.platform.win32.Dxva2` - [@msteiger](https://github.com/msteiger).\n* Added Winspool monitor sample and updated Kernel32, WinBase, Winspool - [@wolftobias](https://github.com/wolftobias).\n* [#333](https://github.com/java-native-access/jna/pull/333): Added `CoTaskMemAlloc`, `CoTaskMemRealloc` and `CoTaskMemFree` to `com.sun.jna.platform.win32.Ole32` - [@msteiger](https://github.com/msteiger).\n* [#334](https://github.com/java-native-access/jna/pull/334): Added `com.sun.jna.platform.win32.Shell32.SHGetKnownFolderPath` and `KnownFolders` GUID constants - [@msteiger](https://github.com/msteiger).\n* [#338](https://github.com/java-native-access/jna/pull/338): Added `com.sun.jna.platform.mac.XAttr` and `com.sun.jna.platform.mac.XAttrUtil` JNA wrapper for `<sys/xattr.h>` for Mac OS X - [@rednoah](https://github.com/rednoah).\n* [#339](https://github.com/java-native-access/jna/pull/339): Added `GetWindowPlacement`, `SetWindowPlacement`, `AdjustWindowRect`, `AdjustWindowRectEx`, `ExitWindowsEx`, and `LockWorkstation` to `com.sun.jna.platform.win32.User32` - [@Timeroot](https://github.com/Timeroot).\n* [#286](https://github.com/java-native-access/jna/pull/286): Added `CreateRemoteThread`, `WritePocessMemory` and `ReadProcessMemory` to `com.sun.jna.platform.win32.Kernel32` - [@sstokic-tgm](https://github.com/sstokic-tgm).\n* [#350](https://github.com/java-native-access/jna/pull/350): Added `jnacontrib.x11.api.X.Window.getSubwindows` - [@rm5248](https://github.com/rm5248).\n* Improved `contrib/msoffice` sample - [@wolftobias](https://github.com/wolftobias).\n* [#352](https://github.com/java-native-access/jna/pull/352): Performance improvements due to reduced locking in `com.sun.jna.Library$Handler` and fewer vararg checks in `com.sun.jna.Function` - [@Boereck](https://github.com/Boereck).\n* [#353](https://github.com/java-native-access/jna/pull/353): Performance improvements by improved collaboration between `com.sun.jna.Library$Handler` and `com.sun.jna.Function` - [@Boereck](https://github.com/Boereck).\n* [#357](https://github.com/java-native-access/jna/pull/357): Added `com.sun.jna.platform.win32.Kernel32.SetSystemTime` - [@lgoldstein](https://github.com/lgoldstein), [@thomasjoulin](https://github.com/thomasjoulin).\n* [#365](https://github.com/java-native-access/jna/pull/365): Added `com.sun.jna.platform.win32.Kernel32.GetComputerNameEx` support - [@lgoldstein](https://github.com/lgoldstein).\n* [#368](https://github.com/java-native-access/jna/pull/368): Added `com.sun.jna.platform.win32.Kernel32.VirtualQueryEx`, `com.sun.jna.platform.win32.WinNT.MEMORY_BASIC_INFORMATION` and `MEM_COMMIT`, `MEM_FREE`, `MEM_RESERVE`, `MEM_IMAGE`, `MEM_MAPPED`, `MEM_PRIVATE` constants - [@apsk](https://github.com/apsk).\n* Allow interoperation with JNI revision changes - [@twall](https://github.com/twall).\n* [#376](https://github.com/java-native-access/jna/pull/373): Added `com.sun.jna.VarArgsChecker` for faster vararg checks. Used in `com.sun.jna.Function` - [@Boereck](https://github.com/Boereck).\n* [#391](https://github.com/java-native-access/jna/pull/391): Added `com.sun.jna.platform.win32.Advapi3.EncryptFile`, `DecryptFile`, `FileEncryptionStatus`, `EncryptionDisable`, `OpenEncryptedFileRaw`, `ReadEncryptedFileRaw`, `WriteEncryptedFileRaw`, and `CloseEncryptedFileRaw` with related `Advapi32Util` helpers - [@khalidq](https://github.com/khalidq).\n* [#400](https://github.com/java-native-access/jna/pull/400): Added `com.sun.jna.platform.WindowUtils.getAllWindows`, `getWindowIcon`, `getIconSize`, `getWindowTitle`, `getPRocessFilePath` and `getWindowLocationAndSize` - [@PAX523](https://github.com/PAX523).\n* [#400](https://github.com/java-native-access/jna/pull/400): Added `com.sun.jna.platform.win32.Kernel32Util.getLastErrorMessage` - [@PAX523](https://github.com/PAX523).\n* [#400](https://github.com/java-native-access/jna/pull/400): Added `com.sun.jna.platform.win32.GDI32.GetObject` - [@PAX523](https://github.com/PAX523).\n* [#400](https://github.com/java-native-access/jna/pull/400): Added `com.sun.jna.platform.win32.Psapi.GetModuleFileNameEx`- [@PAX523](https://github.com/PAX523).\n* [#400](https://github.com/java-native-access/jna/pull/400): Added `com.sun.jna.platform.win32.User32.GetIconInfo`, `SendMessageTimeout` and `GetClassLongPtr` - [@PAX523](https://github.com/PAX523).\n* [#400](https://github.com/java-native-access/jna/pull/400): Added `com.sun.jna.platform.win32.WinGDI.ICONINFO` and `BITMAP` - [@PAX523](https://github.com/PAX523).\n* [#400](https://github.com/java-native-access/jna/pull/400): Added process-specific access rights constants in `com.sun.jna.platform.win32.WinNT` - [@PAX523](https://github.com/PAX523).\n* [#400](https://github.com/java-native-access/jna/pull/400): Added specific constants for request of icon settings in `com.sun.jna.platform.win32.WinUser` - [@PAX523](https://github.com/PAX523).\n* [#400](https://github.com/java-native-access/jna/pull/400): Added constants for `GetClassLong`, `SendMessageTimeout` and `GetIconInfo` in `com.sun.jna.platform.win32.WinUser` - [@PAX523](https://github.com/PAX523).\n* [#419](https://github.com/java-native-access/jna/pull/419): Added `SetupDiOpenDevRegKey` , `SetupDiEnumDeviceInfo` and related constants to `com.sun.jna.platform.win32.SetupApi` - [@ChristianSchwarz](https://github.com/ChristianSchwarz).\n* [#421](https://github.com/java-native-access/jna/pull/421): Added `XGrabKeyboard` and `XUngrabKeyboard` to `X11` interface - [@pinaf](https://github.com/pinaf).\n* [#422](https://github.com/java-native-access/jna/pull/422): Update libffi to v3.2.1 - [@tdaitx](https://github.com/tdaitx).\n* [#425](https://github.com/java-native-access/jna/pull/425): Add support for PPCLE - [@tdaitx](https://github.com/tdaix).\n* [#428](https://github.com/java-native-access/jna/pull/428): Added Wincon.h related functions and definitions to `com.sun.jna.platform.win32.Kernel32` - [@lgoldstein](https://github.com/lgoldstein).\n* [#430](https://github.com/java-native-access/jna/issues/430): Add android `aarch64`, `x86-64`, `mips`, and `mips64` targets - [@twall](https://github.com/twall).\n* [#431](https://github.com/java-native-access/jna/pull/431): Added named pipe API support to `com.sun.jna.platform.win32.Kernel32` - [@lgoldstein](https://github.com/lgoldstein).\n* [#432](https://github.com/java-native-access/jna/pull/432): Added `com.sun.jna.platform.win32.Kernel32.SetLocalTime` - [@lgoldstein](https://github.com/lgoldstein).\n* [#434](https://github.com/java-native-access/jna/pull/434): Added `com.sun.jna.platform.win32.Kernel32.GetEnvironmentStrings`  - [@lgoldstein](https://github.com/lgoldstein).\n* Loosen OSGI OS name matching to accommodate Windows 8 family - Niels Bertram.\n* [#436](https://github.com/java-native-access/jna/pull/469): Added basic Pdh API implementation to 'com.sun.jna.platform.win32' - [@lgoldstein](https://github.com/lgoldstein).\n* [#451](https://github.com/java-native-access/jna/pull/451): Add VARIANT support for CHAR and BYTE  - [@mitkola](https://github.com/mitkola).\n* [#478](https://github.com/java-native-access/jna/issues/451): Ask ldconfig for more places to search for libraries  - [@gohal](https://github.com/gohal).\n* [#481](https://github.com/java-native-access/jna/pull/481): Added volume management functions to `com.sun.jna.platform.win32` - [@lgoldstein](https://github.com/lgoldstein).\n* [#483](https://github.com/java-native-access/jna/pull/483): Found and fixed duplicate method definitions for the same API in `com.sun.jna.platform.win32` - [@lgoldstein](https://github.com/lgoldstein).\n* [#485](https://github.com/java-native-access/jna/pull/485): Implemented `Comparable` interface for many of the base types in `com.sun.jna.platform.win32.WinDef` - [@lgoldstein](https://github.com/lgoldstein).\n* [#488](https://github.com/java-native-access/jna/pull/488): Added `GetRawInputDeviceList` to `com.sun.jna.platform.win32.User32` and `User32Util` - [@lgoldstein](https://github.com/lgoldstein).\n* [#490](https://github.com/java-native-access/jna/issues/490): Allow arbitrary calling convention specification, including FFI_MS_CDECL which alters handling of struct return values, and multiple Linux/PowerPC conventions - [@twall](https://github.com/twall).\n\nBug Fixes\n---------\n* [#450](https://github.com/java-native-access/jna/pull/450): Libraries extracted to temp directory are now cleaned up in case of library loading errors, as well - [@aschnab](https://github.com/aschnab).\n* [#319](https://github.com/java-native-access/jna/pull/319): Fix direct-mapping type-mapped pointer result types - [@marco2357](https://github.com/marco2357).\n* [#350](https://github.com/java-native-access/jna/pull/350): Fix `jnacontrib.x11.api.X.Window.getXXXProperty`, returns `null` if the window property is not found - [@rm5248](https://github.com/rm5248).\n* Fixed `com.sun.jna.platform.win32.Variant` and `TlbImp` - [@wolftobias](https://github.com/wolftobias).\n* Fixed `com.sun.jna.Pointer.getWideStringArray` not respecting the length parameter - [@csoren](https://github.com/csoren).\n* Fix missing code in X11 demos - [@twall](https://github.com/twall).\n* Fix compiler warnings OSX - [@twall](https://github.com/twall).\n* Remove unsupported JAWT from OSX build - [@twall](https://github.com/twall).\n* Disable WebStart tests - [@twall](https://github.com/twall).\n* Dispose all native resources when JNA's native library is unloaded - Paul Grütter,  [@twall](https://github.com/twall).\n* Weakly hold registered direct-mapped classes - [@twall](https://github.com/twall).\n* [#382](https://github.com/java-native-access/jna/pull/382): Fixed memory allocation in `com.sun.jna.platform.win32.WTypes.LPWSTR` and `LPSTR` constructors - [@junak-michal](https://github.com/junak-michal).\n* Fix publish doc links - [@bhamail](https://github.com/bhamail).\n* [#388](https://github.com/java-native-access/jna/issues/388): Ensure native library always opened with provided flags - [@zolyfarkas](https://github.com/zolyfarkas).\n* [#403](https://github.com/java-native-access/jna/pull/403): Fix `com.sun.jna.platform.win32.COM.COMUtils.SUCCEEDED` and `FAILED` - [@lwahonen](https://github.com/lwahonen).\n* [#404](https://github.com/java-native-access/jna/pull/404): Fix `VARIANT` constructors for `int`, `short`, and `long` - [@lwahonen](https://github.com/lwahonen).\n* [#420](https://github.com/java-native-access/jna/pull/420): Fix structure leaving always one element in ThreadLocal set - [@sjappig](https://github.com/sjappig).\n* [#467](https://github.com/java-native-access/jna/issues/467): Fix TypeMapper usage with direct-mapped libraries converting primitives to Java objects (specifically enums) - [@twall](https://github.com/twall).\n* [#475](https://github.com/java-native-access/jna/issues/475): Avoid modifying native memory in `Structure.equals()/hashCode()`- [@twall](https://github.com/twall).\n* [#496](https://github.com/java-native-access/jna/issues/496): Properly handle direct mapping with type mappers which return String/WString - [@twall](https://github.com/twall).\n\nRelease 4.1\n===========\n\nFeatures\n--------\n* Added `com.sun.jna.platform.win32.Advapi32Util.registryCloseKey` - [@falldog](https://github.com/falldog).\n* Enabled platform tests to be run w/o building native bits - [@twall](https://github.com/twall).\n* Added COM/Typelib java code generator `com.sun.jna.platform.win32.COM.tlb.TlbImp` - [@wolftobias](https://github.com/wolftobias).\n* [#226](https://github.com/java-native-access/jna/issues/226): Added OSGI information to jna-platform.jar - [@brettwooldridge](https://github.com/brettwooldridge).\n* [#267](https://github.com/java-native-access/jna/pull/267): Added support for Windows RAS32 API, `com.sun.jna.platform.win32.Rasapi32` and `Rasapi32Util` - [@kc7bfi](https://github.com/kc7bfi).\n* [#101](https://github.com/java-native-access/jna/issues/101): Modify `com.sun.jna.platform.win32.Advapi32Util.registryGet*` API to support `KEY_WOW64` option - [@falldog](https://github.com/falldog).\n* [#271](https://github.com/java-native-access/jna/pull/271): Added `com.sun.jna.platform.win32.Gdi32.ChoosePixelFormat` and `SetPixelFormat` - [@kc7bfi](https://github.com/kc7bfi).\n* [#271](https://github.com/java-native-access/jna/pull/271): Added `com.sun.jna.platform.win32.OpenGL32`, `OpenGL32Util` and `WinOpenGL` - [@kc7bfi](https://github.com/kc7bfi).\n* [#250](https://github.com/java-native-access/jna/pull/250): Added `com.sun.jna.platform.win32.Kernel32.GetPrivateProfileSection`, `GetPrivateProfileSectionNames` and `WritePrivateProfileSection` and corresponding `Kernel32Util` helpers - [@quipsy-karg](https://github.com/quipsy-karg).\n* [#287](https://github.com/java-native-access/jna/pull/287): Added `DBTF_MEDIA` and `DBTF_NET` to `com.sun.jna.platform.win32.DBT` - [@daifei4321](https://github.com/daifei4321).\n* [#295](https://github.com/java-native-access/jna/pull/295): Added `com.sun.jna.platform.win32.Kernel32.ResetEvent` - [@manithree](https://github.com/manithree).\n* [#301](https://github.com/java-native-access/jna/pull/301): Added `accessCheck` to `com.sun.jna.platform.win32.Advapi32Util`, `MapGenericMask` and `AccessCheck` to `com.sun.jna.platform.win32.Advapi32`, `PRIVILEGE_SET` and `GENERIC_MAPPING` to `com.sun.jna.platform.win32.WinNT` - [@BusyByte](https://github.com/BusyByte).\n\nBug Fixes\n---------\n* Fixed inconsistent behavior on `Structure.ByValue` fields within a `Structure` - [@twall](https://github.com/twall).\n* [#279](https://github.com/java-native-access/jna/issues/279): Accommodate FreeBSD libc loading - [@sevan](https://github.com/sevan).\n* [#287](https://github.com/java-native-access/jna/pull/287): Fixed contrib `win32.Win32WindowDemo`, now showing the added/removed drive letter, and whether the event is about media in drive or physical drive - [@daifei4321](https://github.com/daifei4321).\n* [#300](https://github.com/java-native-access/jna/issues/300): Fix stdcall argument alignment - [@twall](https://github.com/twall).\n\nRelease 4.0\n===========\n\nFeatures\n--------\n* Added ASL licensing to facilitate distribution - [@twall](https://github.com/twall).\n* [#109](https://github.com/java-native-access/jna/issues/109): Set default Java compatibility level to 1.6 - [@twall](https://github.com/twall).\n* [#209](https://github.com/java-native-access/jna/issues/209): Improved default performance saving last error results - [@twall](https://github.com/twall).\n* Use predictable names for CPU architecture prefix (namely x86, x86-64); names correspond to OSGI processor values - [@twall](https://github.com/twall).\n* Avoid superfluous Structure memory allocation from native - [@twall](https://github.com/twall).\n* Added `Library.OPTION_CLASSLOADER`, which enables loading native libraries from any class loader (including JNA's native library). This enables parallel dependencies on JNA (e.g. within a tomcat deployment without having to include JNA in the app server environment) - [@twall](https://github.com/twall).\n* Use per-library String encoding settings (see `Native.getDefaultStringEncoding()` and `Structure.getStringEncoding()`) - [@twall](https://github.com/twall).\n* Added memory dump for debugging (see `com.sun.jna.Memory`) - [@twall](https://github.com/twall).\n* Improved caching of Structure alignment, type mapping, and encoding information - [@twall](https://github.com/twall).\n* [#225](https://github.com/java-native-access/jna/pull/225): Added `platform.win32.Kernel32.GetLogicalProcessorInformation` and `platform.win32.Kernel32Util.getLogicalProcessorInformation` - [@trejkaz](https://github.com/trejkaz).\n* [#236](https://github.com/java-native-access/jna/issues/236): Auto-strip profiler native method prefix specified by `jna.profiler.prefix`, which defaults to $$YJP$$ - [@twall](https://github.com/twall).\n* Added `jna.debug_load` property to diagnose library loading issues - [@twall](https://github.com/twall).\n* Throw explicit `IllegalArgumentException` when `Structure.ByReference` is used where it shouldn't be (can result in multiply freed memory or other unexpected behavior) - [@twall](https://github.com/twall).\n* [#243](https://github.com/java-native-access/jna/issues/243): Automatically accommodate long library paths on Windows which would otherwise fail - [@twall](https://github.com/twall).\n* [#241](https://github.com/java-native-access/jna/issues/241) - Added  `com.sun.jna.platform.win32.Shell32.SHAppBarMessage` - [@bsorrentino](https://github.com/bsorrentino).\n* Make `Structure.read/writeField()` protected to facilitate per-field overrides - [@twall](https://github.com/twall).\n* Speed up callback lookup where large numbers of native function pointers are in use - [@twall](https://github.com/twall).\n\nBug Fixes\n---------\n* [#213](https://github.com/java-native-access/jna/pull/213): Fixed `Structure.toString()` not to dump memory when `jna.dump_memory` is false - [@tomohiron](https://github.com/tomohiron).\n* Use dedicated TLS to indicate callback detach state, to avoid any potential conflicts with last error storage - [@twall](https://github.com/twall).\n* [#173](https://github.com/java-native-access/jna/issues/173): Fixed OSX 10.8/Xcode 4+ builds, web start path with Oracle 1.7 JDK - [@mkjellman](https://github.com/mkjellman).\n* [#215](https://github.com/java-native-access/jna/issues/215): Forced use of XSI `strerror_r` on linux - [LionelCons](https://github.com/LionelCons).\n* [#214](https://github.com/java-native-access/jna/issues/214): Don't map library names when an absolute path is provided - [@twall](https://github.com/twall).\n* [#218](https://github.com/java-native-access/jna/issues/218): Explicitly handled broken Android `SecurityManager` implementation - [@twall](https://github.com/twall).\n* [#223](https://github.com/java-native-access/jna/issues/223): Fixed layout/size derivation for unions - [@twall](https://github.com/twall).\n* [#229](https://github.com/java-native-access/jna/issues/229): Added `CreateProcessW` (Unicode version) - [@twall](https://github.com/twall).\n* Avoid solaris/x86 JVM bug w/library open flags - [@twall](https://github.com/twall).\n* Fixed NPE returning wide string from a direct-mapped function - [@twall](https://github.com/twall).\n* [#237](https://github.com/java-native-access/jna/issues/237): Fix LastErrorException/getLastError on AIX - [@skissane](https://github.com/skissane).\n* [#228](https://github.com/java-native-access/jna/issues/228): Fix win32/win64 crashes due to LastErrorException buffer overruns (`snprintf` on windows is broken) - [@davidhoyt](https://github.com/davidhoyt).\n\nRelease 3.5.2\n=============\n\nFeatures\n--------\n* Basic [COM support](https://github.com/java-native-access/jna/blob/master/www/PlatformLibrary.md) for w32 - [@wolftobias](https://github.com/wolftobias).\n* Avoid superfluous Structure memory allocation by using Structure(Pointer) ctors if available - [@twall](https://github.com/twall).\n* [PR#120](https://github.com/java-native-access/jna/pull/120): Provide methods for extracting native libraries from the class path for use by JNA - [@Zlika](https://github.com/Zlika).\n* [PR#163](https://github.com/java-native-access/jna/pull/163): The Java `GUID` structure can be used directly as alternative to `Ole32Util.getGUIDFromString()` - [@wolftobias](https://github.com/wolftobias).\n* [PR#163](https://github.com/java-native-access/jna/pull/163): Ported Win32 `dbt.h` - [@wolftobias](https://github.com/wolftobias).\n* [PR#163](https://github.com/java-native-access/jna/pull/163): Added Win32 `WTSRegisterSessionNotification()` and `WTSUnRegisterSessionNotification()` from `Wtsapi32.dll` - [@wolftobias](https://github.com/wolftobias).\n* [PR#163](https://github.com/java-native-access/jna/pull/163): Added Win32 `native_window_msg` that creates windows, registers for USB device and logon/logoff notifications - [@wolftobias](https://github.com/wolftobias).\n* [PR#178](https://github.com/java-native-access/jna/pull/178): Added Win32 `USER_INFO_10` structure from `LMAccess.h` - [@davidmc24](https://github.com/davidmc24).\n* [PR#192](https://github.com/java-native-access/jna/pull/192): Added Win32 `SHGetSpecialFolderPath()` and initialization file (.ini) API functions from `kernel32.dll` - [@headcrashing](https://github.com/headcrashing).\n* [PR#194](https://github.com/java-native-access/jna/pull/194): Added Unit Test for `CLSIDFromProgID()` - [@headcrashing](https://github.com/headcrashing).\n* [PR#196](https://github.com/java-native-access/jna/pull/196): Added Win32 `RegisterWindowMessage()` and new wrapper `User32Util` for convenient use of `RegisterWindowMessage`, `CreateWindow` and `CreateWindowEx` - [@headcrashing](https://github.com/headcrashing).\n* [PR#187](https://github.com/java-native-access/jna/pull/187): Allow `StructureFieldOrderTest` unit test in platform project to run on Linux. - [@bhamail](https://github.com/bhamail).\n\nBug Fixes\n---------\n* [PR#180](https://github.com/java-native-access/jna/pull/180): Fix: added missing fields in `XEvents.getFieldOrder()` - [@xwizard](https://github.com/xwizard).\n* [PR#183](https://github.com/java-native-access/jna/pull/183): Fix `LMAccess.GROUP_INFO_3.getFieldOrder()` to return correct fields names - [@bhamail](https://github.com/bhamail).\n* [PR#187](https://github.com/java-native-access/jna/pull/187): Fix `getFieldOrder()` to return correct field names for some X11 structures - [@bhamail](https://github.com/bhamail).\n* Remove deprecated methods on Memory (getSize,isValid) and Structure (getSize) - [@twall](https://github.com/twall).\n* Remove problematic AWT check via `Class.forName(\"java.awt.Component\")` (see [here](https://bugs.eclipse.org/bugs/show_bug.cgi?id=388170)) - [@twall](https://github.com/twall).\n* [PR#210](https://github.com/java-native-access/jna/pull/210) Add OSGI processor specs for Mac OS X - [@bertfrees](https://github.com/bertfrees).\n* [PR#174](https://github.com/java-native-access/jna/pull/174): Recompile linux-amd64 natives to remove glibc-2.11 dependencies, now requires only 2.2.5 or better - [@twall](https://github.com/twall).\n* [PR#183](https://github.com/java-native-access/jna/pull/183): Added `StructureFieldOrderInspector` unit test utility to scan for `Structure` field issues; see: `com.sun.jna.platform.StructureFieldOrderTest.testMethodGetFieldOrder` - [@bhamail](https://github.com/bhamail).\n* [PR#187](https://github.com/java-native-access/jna/pull/187): Allow `StructureFieldOrderTest` unit test in platform project to run on Linux - [@bhamail](https://github.com/bhamail).\n* [#206](https://github.com/java-native-access/jna/issues/206): Fix `moveToTrash()` on OSX to work with symlinks - [@twall](https://github.com/twall).\n* Fix NPE if `Thread.getContextClassLoader()` returns `null`  - [@twall](https://github.com/twall).\n\nRelease 3.5.1\n=============\n\nBug Fixes\n---------\n* Fix bug where string fields sometimes failed to be writtern - [@twall](https://github.com/twall) (roman kisluhin).\n* [PR#145](https://github.com/java-native-access/jna/pull/145): Fix `Netapi32Util.getDomainTrusts()` returns \"empty\" domain object - [@aikidojohn](https://github.com/aikidojohn).\n* [PR#145](https://github.com/java-native-access/jna/pull/145): Fix `Netapi32.getDC()` - added missing fields in `DOMAIN_CONTROLLER_INFO` - [@aikidojohn](https://github.com/aikidojohn).\n* [PR#151](https://github.com/java-native-access/jna/pull/151): 'platform.jar' in the dist directory was not updated for release 3.5.0. (The 'platform.jar' published to maven central was correct.)\n\nRelease 3.5.0\n=============\n\nFeatures\n--------\n* [#62](https://github.com/java-native-access/jna/issues/62) If a callback is required to reside in a DLL, use [`DLLCallback`](https://java-native-access.github.io/jna/3.5.1/javadoc/com/sun/jna/win32/DLLCallback.html) to tag your Callback object - [@twall](https://github.com/twall).\n* `Structure.getFieldOrder()` supersedes `Structure.setFieldOrder()` and is now required - [@twall](https://github.com/twall).\n* Search `~/Library/Frameworks` and `/Library/Frameworks` on OSX - [@shaneholloway](https://github.com/shaneholloway).\n* Automatic cleanup of native threads (based on suggestions from neil smith) - [@twall](https://github.com/twall).\n* Add `android-arm` target - [@ochafik](https://github.com/ochafik), [@twall](https://github.com/twall).\n* Add `jna.tmpdir` to override temporary JNA storage location - [@twall](https://github.com/twall).\n* Add `EXTRA_MAKE_OPTS` ant property to override make variables - [@twall](https://github.com/twall).\n* Add `Library.OPTION_OPEN_FLAGS` to customize dlopen behavior - [@twall](https://github.com/twall).\n* [#113](https://github.com/java-native-access/jna/issues/113), [#114](https://github.com/java-native-access/jna/issues/114): Add support for GNU/kFreeBSD and debian multi-arch distros - [@twall](https://github.com/twall).\n\nBug Fixes\n---------\n* Fix `Advapi32Util.registryGetValues()` tried to allocate memory for a zero-length `REG_BINARY` value - [@phailwhale22](https://github.com/phailwhale22).\n* Fix crash in direct mode callbacks with certain type conversions - [@twall](https://github.com/twall).\n* More thoroughly propagate unexpected exceptions generated in jnidispatch - [@twall](https://github.com/twall).\n* Cleanup maven poms and publishing to central repo - [@bhamail](https://github.com/bhamail).\n* [#129](https://github.com/java-native-access/jna/issues/129): Allow `Memory` field in structure - [@twall](https://github.com/twall).\n* Preserve `PointerType` fields on `Structure.read()` if unchanged - [@twall](https://github.com/twall).\n* [#128](https://github.com/java-native-access/jna/issues/128): Fix masking extracting DWORD upper and lower WORD values - [@twall](https://github.com/twall).\n* [#135](https://github.com/java-native-access/jna/issues/135): Fix for `Advapi32Util.registryGetValues()` when reading zero length values - [@danwi](https://github.com/danwi).\n\nRelease 3.4.2\n=============\n\nFeatures\n--------\n* Add `platform.win32.Kernel32.GetEnvironmentVariable` and `platform.win32.Kernel32Util.getEnvironmentVariable` - [@dblock](https://github.com/dblock).\n* Moved `Kernel32.dll` function definitions from `WinNT.java` into `Kernel32.java` - [@dblock](https://github.com/dblock).\n* Provide `toPointer()` methods on all `_PTR` types (platform win32) - [@twall](https://github.com/twall).\n* Provide `ant -Dskip-native` to skip platform native build - [@twall](https://github.com/twall).\n* Provide `ant -Dheadless=true` to run unit tests headless - [@twall](https://github.com/twall).\n* Added Windows dev environment instructions - [@twall](https://github.com/twall).\n\nBug Fixes\n---------\n* Ensure platform win32 classes use unsigned where appropriate (`ULONG_PTR`, `UINT_PTR`, `ULONGLONG`, `WORD`, `DWORDLONG`) - [@twall](https://github.com/twall).\n* [#71](https://github.com/java-native-access/jna/issues/71), [#73](https://github.com/java-native-access/jna/issues/73): Fix OSGI entries in manifest - [@twall](https://github.com/twall).\n* [#78](https://github.com/java-native-access/jna/issues/78): Fix NPE in `platform.win32.Netapi32Util.getDomainTrusts` - [@dblock](https://github.com/dblock).\n* Fix: auto-sync memory for `struct**` arguments (array of struct pointers) - [@twall](https://github.com/twall).\n* Fix: `platform.win32.Secur32.AcquireCredentialsHandle`, `InitializeSecurityContext` and `AcceptSecurityContext` on Win32 64-bit - [@dblock](https://github.com/dblock).\n* Fix: avoid overwriting native `char *` or `wchar_t *` fields within structures when unmodified (similar to current operation with pointers) - [@twall](https://github.com/twall).\n* Fix: `platform.win32.DsGetDC.DS_DOMAIN_TRUSTS` and `DsEnumerateDomainTrusts` on Win32 64-bit - [@trejkaz](https://github.com/trejkaz).\n* Fix: Crash freeing the wrong pointer in `Netapi32Util.getDomainTrusts` - [@trejkaz](https://github.com/trejkaz).\n* [#100](https://github.com/java-native-access/jna/issues/100): Fix `platform.win32.W32FileMonitor` - [@dblock](https://github.com/dblock).\n* Return INT_PTR from `platform.win32.Shell32.ShellExecute`, since returning\n`HINSTANCE` is useless.\n* Fix runtime error in some instances where Structure.setFieldOrder is used (never return self when sharing AutoAllocated memory).\n* [#107](https://github.com/java-native-access/jna/issues/107): `Structure.clear()` always calls `ensureAllocated()` to avoid NPE.\n* Ensure internal memory pointer is *always* allocated when calling `Structure.useMemory()`, even if layout is not yet determined.\n\nRelease 3.4.1\n=============\n\nFeatures\n--------\n* Add 'unsigned' modifier to IntegerType.\n* Add to `platform.win32.User32`: `GetLastInputInfo`.\n* Add `platform.win32.WinNT.GetFileType` and `platform.win32.Kernel32Util.getFileType`.\n* Add to `platform.win32.Kernel32Util`: `getFileType`.\n\nBug Fixes\n---------\n* Re-build linux-amd and linux-i386 against older versions of glibc (2.2.5 and\n2.1.3 respectively).\n* Properly initialize first printer info struct in winspool library.\n* Properly support getting and setting zero-array-length `REG_MULTI_SZ` values on Win32.\n* Fixed SID in Win32 `USER_INFO_23` and `GROUP_INFO_3`.\n* Fixed passing domain name into Win32 `Netapi32Util.getUserInfo`.\n\nRelease 3.4.0\n=============\n\nFeatures\n--------\n* Provide `jna.nosys=true` to avoid loading any system-provided JNA (useful for local build/development).\n* Allow override of default jnidispatch library name with `jna.boot.library.name` system property.\n* Throw an Error if a system install of JNA is incompatible or if JNA's JNI library does not match.\n* Disable automatic jnidispatch unpacking with `jna.nounpack=true`.\n* Automatically look up system error messages for LastErrorException.\n* Improved callback thread-mapping support; re-use, rename, and group callback\nthreads.\n* Cache structure layout results, improving performance of structure creation.\n* linux/arm 32-bit support (hardware provided by Alex Lam).\n* linux/ppc 32-bit support (hardware provided by Fritiof Hedman).\n* Preliminary linux/ia64, linux/ppc64 support (thanks to Laurent Guerby and the GCC compile farm).\n* Windows CE/Mobile support (w32ce-arm) (resources provided by andrea antonello and Hydrologis SRL).\n* linux multi-arch support (kohsuke).\n* Added REG_QWORD registry type support\n* Add to `platform.unix.x11`: `XGrabKey`, `XUngrabKey`, `XSetErrorHandler`.\n* Add to `platform.mac.Carbon`: `GetEventDispatcherTarget`, `InstallEventHandler`, `RegisterEventHotKey`, `GetEventParameter`, `RemoveEventHandler`, `UnregisterEventHotKey`.\n* Add to `platform.win32.Kernel32`: `CopyFile`, `MoveFile`, `MoveFileEx`, `CreateProcess`, `SetEnvironmentVariables`, `GetFileTime`, `SetFileTime`, `SetFileAttributes`, `DeviceIoControl`, `GetDiskFreeSpaceEx`, `CreateToolhelp32Snapshot`, `Process32First`, `Process32Next`.\n* Add to `platform.win32.Msi`: `MsiGetComponentPath`, `MsiLocateComponent`, `MsiGetProductCode`, `MsiEnumComponents`.\n* Add to `platform.win32.User32`: `RegisterHotKey`, `UnregisterHotKey`\n* Add to `platform.win32.SetupApi`: `SetupDiGetClassDevs`, `SetupDiDestroyDeviceInfoList`, `SetupDiEnumDeviceInterfaces`, `SetupDiGetDeviceInterfaceDetail`, `SetupDiGetDeviceRegistryProperty`.\n* Add `platform.win32.Shell32.ShellExecute`.\n* Add to `platform.win32.User32`: `SetParent`, `IsWindowVisible`, `MoveWindow`, `SetWindowPos`, `AttachInputThread`, `SetForegroundWindow`, `GetForegroundWindow`, `SetFocus`, `SendInput`, `WaitForInputIdle`, `InvalidateRect`, `RedrawWindow`, `GetWindow`, `UpdateWindow`, `ShowWindow`, `CloseWindow`.\n* Add to `platform.win32.Version`: `GetFileVersionInfoSize`, `GetFileVersionInfo`, `VerQueryValue`.\n* Add to `platform.win32.Advapi32`: `GetFileSecurity`, `RegQueryValueEx(...Long...)`.\n* Add to `platform.win32.Netapi32`: `NetUserGetInfo`.\n\nBug Fixes\n--------\n* Revise cleanup of in-use temporary files on win32 (issue 6).\n* Fix structure alignment issues on linux/ppc.\n* Fix structure alignment issues on linux/arm.\n* Account for NIO Buffer position (JIRA issue 185).\n* Avoid crash with very long Strings (> 150k in length).\n* Fix bug tracking Memory with an associated direct ByteBuffer.\n* Fix bug handling structs by value when type mappers are in effect (JIRA issue 188).\n\nRelease 3.3.0\n=============\n\nFeatures\n--------\n\n* Facilitate `Memory` subclasses (jbellis).\n* Allow multiple fields of the same type in Unions (Francis Barber).\n* Add `platform.win32.Advapi32.AdjustTokenPrivileges`, `platform.win32.Advapi32.LookupPrivilegeName`, `platform.win32.Advapi32.LookupPrivilegeValue`, `platform.win32.Advapi32.ImpersonateSelf`.\n* Add `platform.win32.Advapi32.DuplicateTokenEx`, `platform.win32.Advapi32.CreateProcessAsUser`, `platform.win32.Kernel32.GetExitCodeProcess`, `platform.win32.Kernel32.TerminateProcess`, `platform.win32.Kernel32.ReadFile`, `platform.win32.Kernel32.CreatePipe`, `platform.win32.Kernel32.SetHandleInformation` and related constants / structures in `platform.win32.WinBase` and `platform.win32.WinNT`. Please note that the `SECURITY_ATTRIBUTES` structure has been moved from `platform.win32.WinNT` to `platform.win32.WinBase`.\n* Add `platform.win32.Kernel32.DeleteFile` and `platform.win32.Kernel32Util.deleteFile`.\n* Add `platform.win32.Kernel32.GetFileAttributes` and `platform.win32.Kernel32Util.getFileAttributes`.\n* Add `platform.win32.Kernel32.GetTickCount`.\n* Add Win32 Service functions to `platform.win32.Advapi32`.\n* Add `platform.win32.W32ServiceManager` and `W32Service`.\n* Add Win32 Event Logging functions to `platform.win32.Advapi32` and `platform.win32.Advapi32Util.EventLogIterator`.\n* `platform.win32.Advapi32Util.registryCreateKey` returns `true` if key was created, `false` if it already exists.\n* Add `REG_BINARY`, `REG_EXPAND_SZ` and `REG_MULTI_SZ` support to `platform.win32.Advapi32Util` registry functions.\n* Reduce JNI crossings in a number of native methods, moving object creation out into pure Java code.\n\nBug Fixes\n---------\n\n* Move all native functions into `com.sun.jna.Native`, to ensure that all dependent classes must be disposed before the `Native` class is unloaded.  Note that this change is incompatible with all previous JNA native libraries.\n* Fix `platform.win32.Kernel32.GetNativeSystemInfo` and `GetSystemInfo` AV on Win64.\n* Fix several potential minor bugs as reported by TvT.\n* Fix bug in Structure.StructureSet.toString (Blair Zajac), exposed by Tomcat ThreadLocal cleanup.\n* Fix several bugs when using Structure(Pointer) ctor and array fields (Samuel Audet).\n\nRelease 3.2.7\n=============\n\nFeatures\n--------\n\n* Add native peer value accessors for Pointer\n* The `jna.library.path` property is now re-evaluated whenever a native library is loaded.  Previously this value was cached when the JNA classes loaded.\n* `Native.loadLibrary` can now load `.drv` files.\n* Refactor `com.sun.jna.platform.win32.WINBASE` into `WinDef`, `WinNT` and `BaseTSD`, matching Windows SDK headers.\n* Refactor constants from `com.sun.jna.platform.win32.GDI32` into `WinGDI`, matching Windows SDK headers.\n* Refactor constants from `com.sun.jna.platform.win32.User32` into `WinUser`, matching Windows SDK headers.\n* Refactor `platform.win32.WinNT.LARGE_INTEGER` into a union.\n* Add `platform.win32.ObjBase`, `com.sun.jna.platform.win32.Ole32.CoInitializeEx`, `CoUninitialize`, and `CoCreateInstance`.\n* Add `platform.win32.Oleaut32.SysAllocString` and `SysFreeString`.\n* Add `platform.win32.Secur32.ImpersonateSecurityContext` and `RevertSecurityContext`.\n* Add `platform.win32.WinNT.WELL_KNOWN_SID_TYPE`, `SECURITY_MAX_SID_SIZE` and other related SID-related constants.\n* Add `platform.win32.Advapi32.CreateWellKnownSid` and `IsWellKnownSid` and `com.sun.jna.platform.win32.Advapi32Util.isWellKnownSid`.\n* Add `platform.win32.Kernel32.GetVersion`, `GetVersionEx`, `GetSystemInfo`, `GetNativeSystemInfo`, `GlobalMemoryStatusEx`, `GetLogicalDriveStrings` and `IsWow64Process`.\n* Add `platform.win32.Kernel32Util.getLogicalDriveStrings`.\n* Add `platform.win32.User32.GetSystemMetrics`.\n* Add `platform.win32.BaseTSD.DWORD_PTR`.\n* Add `platform.win32.WinBase.SYSTEM_INFO` and `MEMORYSTATUSEX`.\n* Add `platform.win32.WinNT.OSVERSIONINFOEX`, `VER` constants.\n* Add `platform.win32.WinDef.ULONGLONG` and `DWORDLONG`.\n* Add `platform.win32.Shell32.SHGetDesktopFolder` (prep work for Com4JNA).\n* Add `platform.win32.Winspool.GetPrinterInfo`.\n* Add `platform.win32.WinspoolUtil.getPrinterInfo1`.\n* Add `platform.win32.GDI32.GetDeviceCaps`.\n* Add `platform.win32.GDI32.GetDIBits`.\n\nBug Fixes\n---------\n\n* Fix `ClassCastException` in `Structure.equals` (issue 152).\n* Fix bug initializing a structure object from existing memory when the structure has initialized fields (issue 133).\n* Fix NPE reading an array of string from a pointer when an element of the array is `NULL` (issue 151).\n* Avoid calling `UnregisterNatives` in native code (issue 154).\n* Compare unpacked library path against canonical (long) filename (issue 156).\n* Fix `read()` of uninitialized memory in `platform.win32.Advapi32Util.getTokenGroups` and `getTokenAccount`.\n* Fix `com.sun.jna.platform.win32.Secur32.QuerySecurityContextToken` to take a `CtxtHandle` instead of `PSecHandle`.\n* Fix definition of BITMAPINFO (platform/win32).\n\nRelease 3.2.5\n=============\n\nFeatures\n--------\n\n* Split code in examples.jar into a contrib platform.jar package and individual packages for demos.\n* Fix Eclipse build and added Eclipse projects for all contrib samples, import projects from jnalib and contrib.\n* Ensure Structure fields correctly ordered when inherited.\n* Use explicit Structure field whenever provided, regardless of whether the VM requires it.\n* Add Win32 mappings for two dozen functions from Kernel32.dll, Advapi32.dll, Netapi32.dll, Secur32.dll, NtDll.dll, Ole32.dll, Shell32.dll and Crypt32.dll to com.sun.jna.platform.win32.\n* Port parts of WinError.h, WinNT.h, LMAccess.h, LMCons.h, LMErr.h, LMJoin.h, NTStatus.h, ShlObj.h, WinDef.h, ShellApi.h, Wdm.h, WinReg.h, WinCrypt.h, Sspi.h, Guid.h, NtSecApi.h and DsGetDc.h.\n* Add Win32 simplified utility interfaces Kernel32Util, Advapi32Util, Netapi32Util, Crypt32Util, NtDllUtil, Shell32Util, Ole32Util and Secur32Util to com.sun.jna.platform.win32.\n* Support unicode paths in W32FileUtils.\n* Fix exception during dispose in W32FileMonitor.\n\nBug Fixes\n---------\n\n* Provide String.replace for 1.4 compatibility.\n* Avoid allocating memory when Structure is provided a pointer in the ctor.\n* Ensure proper value returned in Pointer.getValue() for non-null, unchanged NIO Buffer values.\n* Use 1.4-compatible URI generation (issue 149).\n\nRelease 3.2.4\n=============\n\nFeatures\n--------\n\n* Make Pointer ctor public.\n* Provide access to Function objects for arbitrary Pointer values.\n* Add linux/ia64 binaries (bpiwowar).  See issue 134 patch.\n\nBug Fixes\n---------\n\n* Use a more robust method to decode a file-based URL (issue 135).\n\nRelease 3.2.3\n=============\n\nFeatures\n--------\n\n* Include version information in code in case package information lost.\n\nBug Fixes\n---------\n\n* Fix WindowUtils exception on mouse over TrayIcon.\n* Fix bug toggling windows transparent/opaque (win32/OSX).\n* Avoid overwriting unchanged Pointer values in arrays (function calls with Pointer[] and Structure.read).\n* Ensure Structure fields marked `final` are never written.\n* Fix bug preventing proper population Structure.ByReference fields on Structure read.\n* Ensure double buffering is disabled in components added to a transparent window.\n* Fix UnsatisfiedLinkError attempting to load system libraries under Web Start.\n* Fix loading Web Start-provided libraries on OSX (libraries must have a .jnilib suffix under Web Start).\n* Properly include sources in Maven zip file (Issue 129).\n\nRelease 3.2.2\n=============\n\nFeatures\n--------\n\n* Provide length-specified Pointer.getStringArray()\n\nBug Fixes\n---------\n\n* Fix crash with direct mapping if NULL struct* used (Issue 125).\n* Fix case where null-valued Structure fields would get non-null values on write.\n* Synch callback Structure/Structure[] arguments on callback return.\n* Fix NPE when mapping an interface to the current process.\n* Automatically load proper C library version from current process on Linux (avoids crashing bug on Ubuntu with libc-i686 packages active).\n* Avoid scanning structure contents in Structure.toString if contents aren't actually used.\n\nRelease 3.2.1\n==========\n\nFeatures\n--------\n\n* Add HRESULT, LONG mapping to W32API (marc strapetz).\n\n\nBug Fixes\n---------\n\n* Fix definition of HWND_BROADCAST in W32API.\n* Fix memory alignment checking (Issue 121).\n* Fix Structure equals/hashCode implementation, based on current Java fields rather than strictly native memory contents.  Avoid using equals/hashCode when avoiding recursive reads/writes.\n\nRelease 3.2.0\n=============\n\nFeatures\n--------\n\n* Handle String, Structure, Callback, Buffer, and primitive arrays in direct mappings.  Handle NativeMapped and TypeMapper, with optimized paths for IntegerType and PointerType.\n* Optionally throw errno/GetLastError as an exception.  This is preferred to (and more efficient than) calling Native.getLastError().\n* Unload/delete native library unpacked from jna.jar if Native class is garbage collected.  Only install shutdown hook if using the system class loader.\n* Auto-write contiguous Structure arrays when first element is written.\n* Support NativeMapped[] as function arguments for interface-mapped libraries (Issue 90).\n* Enable function lookup within current process on Windows.\n\nBug Fixes\n---------\n\n* Restrict recursive structure reads/writes by thread instead of globally. This avoids potentially missed reads/writes with concurrent access (Issue 120).\n* Ensure Memory is not GC'd and freed if direct NIO buffers mapped to it are extant.\n* Allow types derived from java.nio.Buffer as Structure fields.\n\nRelease 3.1.0\n=============\n\nFeatures\n--------\n\n* Add raw JNI mapping of static Java methods.  Performance is about 10X that of traditional JNA interface mapping, although with less type conversion functionality.\n* Add library option to allow passing/return of Java Objects.\n* Allow handling of uncaught callback exceptions (Issue 63).\n* Object oriented interface to X server (see contrib/x11)\n* Make Memory class more accessible.\n* Provide Structure ctor with Pointer argument (issue 102).\n* Allow implicit library access to current process on linux (issue 98).\n* Open all shared libraries with RTLD_GLOBAL, if applicable.  This was the default behavior on OSX and changes the default behavior on linux.\n* Allow NIO Buffer as Structure field (with limitations) (Issue 57)\n* Add `size_t` size.\n\nBug Fixes\n---------\n\n* Run tests with libjsig.so, if available, which fixes some crashes when running tests on 64-bit platforms.\n* Fix Issue 104.\n* Fix Issue 94 (Java 1.6 update 10 regression).\n* Fix Issue 51 (Java 1.6 update 10 regression).\n* Fix Issue 95.\n* Fix Issue 101.\n* Fix Issue 111, memory leak with String-returning Callback.\n* Fix missing storage of union type information (affects usage of struct/union by value as argument and return type).\n* Remove non-functional Structure ctors requiring explicit size.\n\nRelease 3.0.9\n=============\n\nBug Fixes\n---------\n\n*  Fix issue 93 by only manually searching jna.library.path, then falling back to passing the mapped library name to dlopen/LoadLibrary.  This fixes an issue in JRUBY where the incorrect libc.so.6 was being loaded.\n\nRelease 3.0.8\n==========\n\nFeatures\n--------\n\n* Auto-map Pointer[]/String[]/WString[] return values.\n* Provide utility functions to convert String to primitive array.\n* Add jna.library.boot.path property to define the directory that the native stub library is loaded from\n\nRelease 3.0.7\n==========\n\nFeatures\n--------\n\n* Improve Win32 loading of libraries with dependencies.\n\nBug Fixes\n---------\n\n* Fix bug reading structures with PointerType fields, introduced with Pointer field preservation fix.\n\nRelease 3.0.6\n=============\n\nFeatures\n--------\n\n* Allow arbitrary callback method names if only one method is defined in the class which implements Callback (colinwalters).\n* Allow specification of callback type mappers by using a TYPE_MAPPER field (colinwalters).\n* Allow uninitialized (null-valued) boxed primitives in Structures (colinwalters).\n* Add convenience methods to set active Union field and value simultaneously (xylo).\n* Augment Union read/writeField to set the active field.\n* Allow Structure auto-synch across native calls to be disabled.\n* Win64 support.\n\nBug Fixes\n---------\n\n* Avoid overwriting unchanged Structure fields of type Pointer.\n* Avoid more content dragging on OSX or warn if it's too late.\n* Fix UnsatisfiedLinkError using transparent window on Win2K.\n* Fix memory leak with callbacks called from native threads with no Java context (johnwallace).\n* Defer structure size calculation if type mapper not yet set, allowing type mapper to be set in derived constructors (colinwalters).\n* Ensure structure memory is allocated in Structure.read/writeField.\n\nRelease 3.0.5\n=============\n\nFeatures\n--------\n\n* Allow explicit declaration of field order for VMs which have an unpredictable field order.\n* Check for w32 libraries with a \"lib\" prefix in addition to normal lookup.\n* Allow String[]/WString[] as callback argument/return value (assume NULL-terminated array).\n* Add Solaris8 compatibility to sunos-sparc build (Corey Puffalt).\n* Look up libraries using web start library path, if appropriate (Corey Puffalt).\n* Use constants to return integer boolean values.\n\nBug Fixes\n---------\n\n* Properly track cursor on alpha-masked windows.\n* Avoid searching /lib or /usr/lib on 64-bit Linux.\n* Avoid using incorrect version of a library when both 32- and 64-bit versions are found.\n* Avoid transparent window events always dragging window bug on OSX.\n* Fix division by zero error calculating structure size on OSX/ppc.\n* Avoid overwriting initialized NativeMapped Structure fields when calculating structure size.\n* Fix NPE reading back into StringArray.\n\nRelease 3.0.4\n=============\n\nFeatures\n--------\n\n* Automatically write contents of Structure.ByReference fields on Structure.write().\n* Use the actual parameter type in Function invocations if no parameter type information is available (whether method is missing or untyped varargs).\n* Augmented X11 library mappings (xylo).\n* Support read/write of NativeMapped arrays within Structure (notably NativeLong).\n\nBug Fixes\n---------\n\n* Fix library load error when /usr/lib32 and /usr/lib both exist (linux) (Marek Slama).\n* Avoid incorrect matches against libraries named with the same prefix (e.g. libc-client.so vs libc.so) (xylo).\n* Properly handle arrays of NativeMapped (e.g. NativeLong) as a Structure field (stefan endrullis).\n* Ensure structure size calculated prior to setting union active type.\n* XID is 64-bits on 64-bit X clients (xylo).\n* Ensure proper arch name is used on Debian (amd64 instead of x86_64).\n\nRelease 3.0.3\n=============\n\nFeatures\n--------\n\n* Enable build/run using IBM's J9 VM (leonardo).\n* Make StdCallFunctionMapper attempt a leading underscore if the simpler mapping doesn't work.\n* Allow Structure.read to overwrite final fields (may not work on some 1.4 VMs).\n\nBug Fixes\n---------\n\n* Fix NPE when passing an array of Structure.ByReference.\n* Compare entire linux library version when finding a match.\n* Don't pass struct by value unless the method signature declares it.\n* Restrict custom first element structure alignment to OSX/ppc.\n* Improve performance and reduce memory footprint for window masks. Optimize polygon-based masks on w32.  Use XFillRectangles on X11.\n* Fix linkage settings on sunos-amd64 to avoid relocation errors.\n* Fix callback allocation code on w32, solaris, freebsd, darwin (libffi was misconfigured).\n* Fix bug when NativeMapped fields are used in a Structure.ByValue instance.\n* Fix NPE calling Structure.read() before memory is initialized.\n* Fix NPE calling Structure.read/write with uninitialized NativeMapped fields.\n\nRelease 3.0.2\n=============\n\nFeatures\n--------\n\n* Attempt to force unload of jnidispatch library prior to deleting it (w32).\n* Added amd64 targets for OSX, FreeBSD, and Solaris.\n\nBug Fixes\n---------\n\n* Reduce space allocated for invocation arguments.\n* Fix NPE when NativeMapped type is used in a Structure.\n* Fix some X11 type mappings for 64-bit.\n* Fix OSX Leopard/JRE1.5+ window transparency.\n* Fix window alpha compositing on X11.\n* Fix loading of libraries with unicode names on OSX.\n\nRelease 3.0.1\n=============\n\nFeatures\n--------\n\n* Improve transparent window drawing performance on w32\n* Use closure allocation from libffi\n\nBug Fixes\n---------\n\n* Ensure nested structure arrays initialized with Structure.toArray use the appropriate native memory.\n* Ensure structure size is calculated prior to converting to array\n* Avoid creating new windows when setting a window mask\n* Fix bug in Pointer.setChar.\n\nRelease 3.0\n===========\n\nFeatures\n--------\n\n* More supported platforms, via GCC's libffi (wmeissner)\n* Support struct by value as parameter and return value (duncan)\n* Support struct by reference within structures\n* Provide access to native peer for java.awt.Component\n* Provide access to native peer on OS X.\n* Support MINGW32 builds (fullung)\n* Allow per-field Structure read/write by field name\n* Avoid writing Structure fields marked 'volatile'\n* Read and wrap function pointers in Structure fields when read with a Java proxy to allow easy Java-side invocation (Ken Larson)\n* Support array-backed Buffers as arguments (wmeissner)\n* Auto-conversion of custom types (wmeissner)\n* Allow pointer type-safety\n* Optional VM crash protection, via Native.setProtected(boolean)\n* Auto-convert WString[]\n* Provide library synchronization wrapper similar to Collections.synchronizedX\n* Support lookup of OSX framework libraries by name\n* Explicit access to shared library global data\n* Invocation interception to facilitate translation of C preprocessor macros and inline functions\n* Provide utility to determine Web Start native library cache location; auto-include this path if jnidispatch is included as a &lt;nativelib&gt; (robertengels)\n* Provide access to aligned memory\n* Versioning information embedded in jna.jar and native library\n\nBug Fixes\n---------\n\n* Avoid attempts to free native library if it failed to load (wmeissner)\n* Explicitly check method signatures for varargs instead of heuristically guessing (wmeissner)\n* Disallow declaring Pointer-derived fields in Structures (Function, Memory)\n* Ensure Object.toString/hashCode/equals methods are intercepted on proxyied interfaces\n* Update X11 library for 64-bit use (wmeissner)\n* Properly map arrays of char*/wchar_t* under w32\n* Allow Pointer[] as a Structure field and Function argument\n* Fix some misleading Structure error messages\n* Properly preserve/return GetLastError/errno after native calls\n* Allocate executable memory on w32 to avoid errors with hardware-enforced data execution protection (DEP)\n* Fix VM crash on w32 stdcall callbacks\n* Use long offsets and sizes rather than ints (64-bit safe)\n* Properly clean up references and release closure memory on JNI_Unload\n* Use simpler AWT/JAWT library loading workaround\n* Avoid changing array references within a Structure on read\n\nRelease 2.5\n===========\n\nFeatures\n--------\n\n* Unions\n* Optimized shaped windows (chris deckers & olivier chafik); instantiation time improved by about 2-3 orders of magnitude for large, mostly contiguous shapes\n* Provide type mapping in callback arguments/results\n* Provide access to ByteBuffer direct address as a Pointer\n* Provide customization of native string encoding with jna.encoding system property\n\nBug Fixes\n---------\n\n* Properly handle VMs with reversed Structure member storage\n* Avoid making window undecorated when clearing window mask on X11\n* Fix structure alignment bug on OSX/PPC when first element is > 4 bytes in size\n* Clearing OSX window mask by setting to MASK_NONE now works properly\n* Avoid index exceptions if native buffers are not NUL-terminated on string conversions\n* Write initialized Structure[] argument memory prior to function calls\n* Fix IllegalArgumentException reading WString into a Structure\n* Clear memory when allocating a structure block (fixes VM crash)\n* Remove versioned JAWT dependency on OSX, allowing use on 10.3/JRE1.4.\n\nRelease 2.4\n===========\n\nFeatures\n--------\n\n* Explicitly support unaligned structures\n* Auto-reallocate structure arrays\n* Automatic handling of w32 UNICODE/ASCII variants\n* Automatic mapping of decorated w32 stdcall function names\n* Customizable, automatic type conversion of arguments and results (wmeissner)\n* Support char*[] arguments as Java String[]\n* Structure supports Callback members (wmeissner)\n* getByteBuffer from Pointer/Memory (wmeissner)\n* Allow GC of native libraries\n* Facilitate use from non-Java contexts (JRuby et al.) (wmeissner)\n* Improve library path searching (wmeissner)\n* Handle Structure[] arguments\n* Handle native long arguments and return values\n* Handle direct and array-based ByteBuffer arguments (wmeissner)\n* Change default w32 build to use GCC (it's free, yo)\n\nBug Fixes\n---------\n\n* Structure.toArray failed to initialize members\n* Disallow explicit free of Structure/Memory\n* Ensure native libraries are only loaded once until released\n* Properly handle NULL when the return value is a Structure\n* Proper conversion to wchar_t on linux\n* Copy full length of Java strings to C strings instead of stopping when a NUL character is encountered\n"
        },
        {
          "name": "LGPL2.1",
          "type": "blob",
          "size": 23.8173828125,
          "content": "\t\t  GNU LESSER GENERAL PUBLIC LICENSE\n\t\t       Version 2.1, February 1999\n\n Copyright (C) 1991, 1999 Free Software Foundation, Inc.\n     59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n[This is the first released version of the Lesser GPL.  It also counts\n as the successor of the GNU Library Public License, version 2, hence\n the version number 2.1.]\n\n\t\t\t    Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicenses are intended to guarantee your freedom to share and change\nfree software--to make sure the software is free for all its users.\n\n  This license, the Lesser General Public License, applies to some\nspecially designated software packages--typically libraries--of the\nFree Software Foundation and other authors who decide to use it.  You\ncan use it too, but we suggest you first think carefully about whether\nthis license or the ordinary General Public License is the better\nstrategy to use in any particular case, based on the explanations below.\n\n  When we speak of free software, we are referring to freedom of use,\nnot price.  Our General Public Licenses are designed to make sure that\nyou have the freedom to distribute copies of free software (and charge\nfor this service if you wish); that you receive source code or can get\nit if you want it; that you can change the software and use pieces of\nit in new free programs; and that you are informed that you can do\nthese things.\n\n  To protect your rights, we need to make restrictions that forbid\ndistributors to deny you these rights or to ask you to surrender these\nrights.  These restrictions translate to certain responsibilities for\nyou if you distribute copies of the library or if you modify it.\n\n  For example, if you distribute copies of the library, whether gratis\nor for a fee, you must give the recipients all the rights that we gave\nyou.  You must make sure that they, too, receive or can get the source\ncode.  If you link other code with the library, you must provide\ncomplete object files to the recipients, so that they can relink them\nwith the library after making changes to the library and recompiling\nit.  And you must show them these terms so they know their rights.\n\n  We protect your rights with a two-step method: (1) we copyright the\nlibrary, and (2) we offer you this license, which gives you legal\npermission to copy, distribute and/or modify the library.\n\n  To protect each distributor, we want to make it very clear that\nthere is no warranty for the free library.  Also, if the library is\nmodified by someone else and passed on, the recipients should know\nthat what they have is not the original version, so that the original\nauthor's reputation will not be affected by problems that might be\nintroduced by others.\n\f\n  Finally, software patents pose a constant threat to the existence of\nany free program.  We wish to make sure that a company cannot\neffectively restrict the users of a free program by obtaining a\nrestrictive license from a patent holder.  Therefore, we insist that\nany patent license obtained for a version of the library must be\nconsistent with the full freedom of use specified in this license.\n\n  Most GNU software, including some libraries, is covered by the\nordinary GNU General Public License.  This license, the GNU Lesser\nGeneral Public License, applies to certain designated libraries, and\nis quite different from the ordinary General Public License.  We use\nthis license for certain libraries in order to permit linking those\nlibraries into non-free programs.\n\n  When a program is linked with a library, whether statically or using\na shared library, the combination of the two is legally speaking a\ncombined work, a derivative of the original library.  The ordinary\nGeneral Public License therefore permits such linking only if the\nentire combination fits its criteria of freedom.  The Lesser General\nPublic License permits more lax criteria for linking other code with\nthe library.\n\n  We call this license the \"Lesser\" General Public License because it\ndoes Less to protect the user's freedom than the ordinary General\nPublic License.  It also provides other free software developers Less\nof an advantage over competing non-free programs.  These disadvantages\nare the reason we use the ordinary General Public License for many\nlibraries.  However, the Lesser license provides advantages in certain\nspecial circumstances.\n\n  For example, on rare occasions, there may be a special need to\nencourage the widest possible use of a certain library, so that it becomes\na de-facto standard.  To achieve this, non-free programs must be\nallowed to use the library.  A more frequent case is that a free\nlibrary does the same job as widely used non-free libraries.  In this\ncase, there is little to gain by limiting the free library to free\nsoftware only, so we use the Lesser General Public License.\n\n  In other cases, permission to use a particular library in non-free\nprograms enables a greater number of people to use a large body of\nfree software.  For example, permission to use the GNU C Library in\nnon-free programs enables many more people to use the whole GNU\noperating system, as well as its variant, the GNU/Linux operating\nsystem.\n\n  Although the Lesser General Public License is Less protective of the\nusers' freedom, it does ensure that the user of a program that is\nlinked with the Library has the freedom and the wherewithal to run\nthat program using a modified version of the Library.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.  Pay close attention to the difference between a\n\"work based on the library\" and a \"work that uses the library\".  The\nformer contains code derived from the library, whereas the latter must\nbe combined with the library in order to run.\n\f\n\t\t  GNU LESSER GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License Agreement applies to any software library or other\nprogram which contains a notice placed by the copyright holder or\nother authorized party saying it may be distributed under the terms of\nthis Lesser General Public License (also called \"this License\").\nEach licensee is addressed as \"you\".\n\n  A \"library\" means a collection of software functions and/or data\nprepared so as to be conveniently linked with application programs\n(which use some of those functions and data) to form executables.\n\n  The \"Library\", below, refers to any such software library or work\nwhich has been distributed under these terms.  A \"work based on the\nLibrary\" means either the Library or any derivative work under\ncopyright law: that is to say, a work containing the Library or a\nportion of it, either verbatim or with modifications and/or translated\nstraightforwardly into another language.  (Hereinafter, translation is\nincluded without limitation in the term \"modification\".)\n\n  \"Source code\" for a work means the preferred form of the work for\nmaking modifications to it.  For a library, complete source code means\nall the source code for all modules it contains, plus any associated\ninterface definition files, plus the scripts used to control compilation\nand installation of the library.\n\n  Activities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning a program using the Library is not restricted, and output from\nsuch a program is covered only if its contents constitute a work based\non the Library (independent of the use of the Library in a tool for\nwriting it).  Whether that is true depends on what the Library does\nand what the program that uses the Library does.\n  \n  1. You may copy and distribute verbatim copies of the Library's\ncomplete source code as you receive it, in any medium, provided that\nyou conspicuously and appropriately publish on each copy an\nappropriate copyright notice and disclaimer of warranty; keep intact\nall the notices that refer to this License and to the absence of any\nwarranty; and distribute a copy of this License along with the\nLibrary.\n\n  You may charge a fee for the physical act of transferring a copy,\nand you may at your option offer warranty protection in exchange for a\nfee.\n\f\n  2. You may modify your copy or copies of the Library or any portion\nof it, thus forming a work based on the Library, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) The modified work must itself be a software library.\n\n    b) You must cause the files modified to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    c) You must cause the whole of the work to be licensed at no\n    charge to all third parties under the terms of this License.\n\n    d) If a facility in the modified Library refers to a function or a\n    table of data to be supplied by an application program that uses\n    the facility, other than as an argument passed when the facility\n    is invoked, then you must make a good faith effort to ensure that,\n    in the event an application does not supply such function or\n    table, the facility still operates, and performs whatever part of\n    its purpose remains meaningful.\n\n    (For example, a function in a library to compute square roots has\n    a purpose that is entirely well-defined independent of the\n    application.  Therefore, Subsection 2d requires that any\n    application-supplied function or table used by this function must\n    be optional: if the application does not supply it, the square\n    root function must still compute square roots.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Library,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Library, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote\nit.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Library.\n\nIn addition, mere aggregation of another work not based on the Library\nwith the Library (or with a work based on the Library) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may opt to apply the terms of the ordinary GNU General Public\nLicense instead of this License to a given copy of the Library.  To do\nthis, you must alter all the notices that refer to this License, so\nthat they refer to the ordinary GNU General Public License, version 2,\ninstead of to this License.  (If a newer version than version 2 of the\nordinary GNU General Public License has appeared, then you can specify\nthat version instead if you wish.)  Do not make any other change in\nthese notices.\n\f\n  Once this change is made in a given copy, it is irreversible for\nthat copy, so the ordinary GNU General Public License applies to all\nsubsequent copies and derivative works made from that copy.\n\n  This option is useful when you wish to copy part of the code of\nthe Library into a program that is not a library.\n\n  4. You may copy and distribute the Library (or a portion or\nderivative of it, under Section 2) in object code or executable form\nunder the terms of Sections 1 and 2 above provided that you accompany\nit with the complete corresponding machine-readable source code, which\nmust be distributed under the terms of Sections 1 and 2 above on a\nmedium customarily used for software interchange.\n\n  If distribution of object code is made by offering access to copy\nfrom a designated place, then offering equivalent access to copy the\nsource code from the same place satisfies the requirement to\ndistribute the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  5. A program that contains no derivative of any portion of the\nLibrary, but is designed to work with the Library by being compiled or\nlinked with it, is called a \"work that uses the Library\".  Such a\nwork, in isolation, is not a derivative work of the Library, and\ntherefore falls outside the scope of this License.\n\n  However, linking a \"work that uses the Library\" with the Library\ncreates an executable that is a derivative of the Library (because it\ncontains portions of the Library), rather than a \"work that uses the\nlibrary\".  The executable is therefore covered by this License.\nSection 6 states terms for distribution of such executables.\n\n  When a \"work that uses the Library\" uses material from a header file\nthat is part of the Library, the object code for the work may be a\nderivative work of the Library even though the source code is not.\nWhether this is true is especially significant if the work can be\nlinked without the Library, or if the work is itself a library.  The\nthreshold for this to be true is not precisely defined by law.\n\n  If such an object file uses only numerical parameters, data\nstructure layouts and accessors, and small macros and small inline\nfunctions (ten lines or less in length), then the use of the object\nfile is unrestricted, regardless of whether it is legally a derivative\nwork.  (Executables containing this object code plus portions of the\nLibrary will still fall under Section 6.)\n\n  Otherwise, if the work is a derivative of the Library, you may\ndistribute the object code for the work under the terms of Section 6.\nAny executables containing that work also fall under Section 6,\nwhether or not they are linked directly with the Library itself.\n\f\n  6. As an exception to the Sections above, you may also combine or\nlink a \"work that uses the Library\" with the Library to produce a\nwork containing portions of the Library, and distribute that work\nunder terms of your choice, provided that the terms permit\nmodification of the work for the customer's own use and reverse\nengineering for debugging such modifications.\n\n  You must give prominent notice with each copy of the work that the\nLibrary is used in it and that the Library and its use are covered by\nthis License.  You must supply a copy of this License.  If the work\nduring execution displays copyright notices, you must include the\ncopyright notice for the Library among them, as well as a reference\ndirecting the user to the copy of this License.  Also, you must do one\nof these things:\n\n    a) Accompany the work with the complete corresponding\n    machine-readable source code for the Library including whatever\n    changes were used in the work (which must be distributed under\n    Sections 1 and 2 above); and, if the work is an executable linked\n    with the Library, with the complete machine-readable \"work that\n    uses the Library\", as object code and/or source code, so that the\n    user can modify the Library and then relink to produce a modified\n    executable containing the modified Library.  (It is understood\n    that the user who changes the contents of definitions files in the\n    Library will not necessarily be able to recompile the application\n    to use the modified definitions.)\n\n    b) Use a suitable shared library mechanism for linking with the\n    Library.  A suitable mechanism is one that (1) uses at run time a\n    copy of the library already present on the user's computer system,\n    rather than copying library functions into the executable, and (2)\n    will operate properly with a modified version of the library, if\n    the user installs one, as long as the modified version is\n    interface-compatible with the version that the work was made with.\n\n    c) Accompany the work with a written offer, valid for at\n    least three years, to give the same user the materials\n    specified in Subsection 6a, above, for a charge no more\n    than the cost of performing this distribution.\n\n    d) If distribution of the work is made by offering access to copy\n    from a designated place, offer equivalent access to copy the above\n    specified materials from the same place.\n\n    e) Verify that the user has already received a copy of these\n    materials or that you have already sent this user a copy.\n\n  For an executable, the required form of the \"work that uses the\nLibrary\" must include any data and utility programs needed for\nreproducing the executable from it.  However, as a special exception,\nthe materials to be distributed need not include anything that is\nnormally distributed (in either source or binary form) with the major\ncomponents (compiler, kernel, and so on) of the operating system on\nwhich the executable runs, unless that component itself accompanies\nthe executable.\n\n  It may happen that this requirement contradicts the license\nrestrictions of other proprietary libraries that do not normally\naccompany the operating system.  Such a contradiction means you cannot\nuse both them and the Library together in an executable that you\ndistribute.\n\f\n  7. You may place library facilities that are a work based on the\nLibrary side-by-side in a single library together with other library\nfacilities not covered by this License, and distribute such a combined\nlibrary, provided that the separate distribution of the work based on\nthe Library and of the other library facilities is otherwise\npermitted, and provided that you do these two things:\n\n    a) Accompany the combined library with a copy of the same work\n    based on the Library, uncombined with any other library\n    facilities.  This must be distributed under the terms of the\n    Sections above.\n\n    b) Give prominent notice with the combined library of the fact\n    that part of it is a work based on the Library, and explaining\n    where to find the accompanying uncombined form of the same work.\n\n  8. You may not copy, modify, sublicense, link with, or distribute\nthe Library except as expressly provided under this License.  Any\nattempt otherwise to copy, modify, sublicense, link with, or\ndistribute the Library is void, and will automatically terminate your\nrights under this License.  However, parties who have received copies,\nor rights, from you under this License will not have their licenses\nterminated so long as such parties remain in full compliance.\n\n  9. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Library or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Library (or any work based on the\nLibrary), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Library or works based on it.\n\n  10. Each time you redistribute the Library (or any work based on the\nLibrary), the recipient automatically receives a license from the\noriginal licensor to copy, distribute, link with or modify the Library\nsubject to these terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties with\nthis License.\n\f\n  11. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Library at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Library by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Library.\n\nIf any portion of this section is held invalid or unenforceable under any\nparticular circumstance, the balance of the section is intended to apply,\nand the section as a whole is intended to apply in other circumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  12. If the distribution and/or use of the Library is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Library under this License may add\nan explicit geographical distribution limitation excluding those countries,\nso that distribution is permitted only in or among countries not thus\nexcluded.  In such case, this License incorporates the limitation as if\nwritten in the body of this License.\n\n  13. The Free Software Foundation may publish revised and/or new\nversions of the Lesser General Public License from time to time.\nSuch new versions will be similar in spirit to the present version,\nbut may differ in detail to address new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Library\nspecifies a version number of this License which applies to it and\n\"any later version\", you have the option of following the terms and\nconditions either of that version or of any later version published by\nthe Free Software Foundation.  If the Library does not specify a\nlicense version number, you may choose any version ever published by\nthe Free Software Foundation.\n\f\n  14. If you wish to incorporate parts of the Library into other free\nprograms whose distribution conditions are incompatible with these,\nwrite to the author to ask for permission.  For software which is\ncopyrighted by the Free Software Foundation, write to the Free\nSoftware Foundation; we sometimes make exceptions for this.  Our\ndecision will be guided by the two goals of preserving the free status\nof all derivatives of our free software and of promoting the sharing\nand reuse of software generally.\n\n\t\t\t    NO WARRANTY\n\n  15. BECAUSE THE LIBRARY IS LICENSED FREE OF CHARGE, THERE IS NO\nWARRANTY FOR THE LIBRARY, TO THE EXTENT PERMITTED BY APPLICABLE LAW.\nEXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR\nOTHER PARTIES PROVIDE THE LIBRARY \"AS IS\" WITHOUT WARRANTY OF ANY\nKIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE\nLIBRARY IS WITH YOU.  SHOULD THE LIBRARY PROVE DEFECTIVE, YOU ASSUME\nTHE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN\nWRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY\nAND/OR REDISTRIBUTE THE LIBRARY AS PERMITTED ABOVE, BE LIABLE TO YOU\nFOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR\nCONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE\nLIBRARY (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING\nRENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A\nFAILURE OF THE LIBRARY TO OPERATE WITH ANY OTHER SOFTWARE), EVEN IF\nSUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH\nDAMAGES.\n\n\t\t     END OF TERMS AND CONDITIONS\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 0.76953125,
          "content": "SPDX-License-Identifier: Apache-2.0 OR LGPL-2.1\n\nJava Native Access (JNA) is licensed under the LGPL, version 2.1\nor later, or (from version 4.0 onward) the Apache License,\nversion 2.0.\n\nYou can freely decide which license you want to apply to the project.\n\nYou may obtain a copy of the LGPL License at:\n\nhttp://www.gnu.org/licenses/licenses.html\n\nA copy is also included in the downloadable source code package\ncontaining JNA, in file \"LGPL2.1\", under the same directory\nas this file.\n\nYou may obtain a copy of the Apache License at:\n\nhttp://www.apache.org/licenses/\n\nA copy is also included in the downloadable source code package\ncontaining JNA, in file \"AL2.0\", under the same directory\nas this file.\n\nCommercial support may be available, please e-mail\ntwall[at]users[dot]sf[dot]net.\n"
        },
        {
          "name": "OTHERS",
          "type": "blob",
          "size": 1.2119140625,
          "content": "* RELATED and/or SIMILAR PROJECTS: \r\n* Feel free to add notes and/or descriptions here (this should probably go\r\n* on a wiki somewhere).\r\n----\r\n* nlink.dev.java.net: \r\n   pros: simple definitions (same as jna)\r\n   cons: w32 only\r\n* sf.net/projects/jnative: \r\n   cons: boilerplate, manual code generation by calling setup methods\r\n   pros: callbacks, byref args?\r\n* JNIWrapper: kinda like jnative (commercial), includes platform \"packs\"\r\n* coroutine for Java, like jnative (commercial)\r\n* jnieasy: c++ mappings (http://www.innowhere.com:8080/webapp/jsp/products/jnieasy/index.jsp?_page=products.jnieasy)\r\n* j2native (www.smardec.com)\r\n* j-interop.sf.net\r\n* jawinproject.sf.net (COM DLL access)\r\n* jacob-project.sf.net (COM DLL access)\r\n* nativecall.sf.net (minimal)\r\n* cxxwrap.sf.net\r\n* J/Direct (defunct)\r\n* NoodleGlue\r\n* SWIG\r\n* ctypes4j.sf.net\r\n* ctypes-java (out of date)\r\n* jnbridge\r\n* xFunction (http://excelsior-usa.com/xfunction.html, commercial, osx)\r\n* JACE c++ mappings\r\n* JAW Java API wrapper http://www.aplu.ch/home/apluhome.jsp?site=5\r\n\r\n# OTHER REFERENCES\r\n# JNI options: http://staff.develop.com/halloway/JavaWin32.html\r\n# List of JNI alternatives: http://weblog.janek.org/Archive/2005/07/28/AlternativestoJavaNativeI.html\r\n\r\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 13.302734375,
          "content": "![Java Native Access - JNA](https://github.com/java-native-access/jna/raw/master/www/images/jnalogo.jpg \"Java Native Access - JNA\")\n\n[![Github Actions Build Status](https://github.com/java-native-access/jna/workflows/Java%20CI/badge.svg)](https://github.com/java-native-access/jna/actions?query=workflow%3A%22Java+CI%22)\n[![Travis Build Status](https://api.travis-ci.com/java-native-access/jna.svg?branch=master)](https://travis-ci.com/github/java-native-access/jna)\n[![Appveyor Build Status](https://ci.appveyor.com/api/projects/status/j6vmpjrw5iktb8iu/branch/master?svg=true)](https://ci.appveyor.com/project/dblock/jna-gsxuq/branch/master)\n\nJava Native Access (JNA)\n========================\n\nThe definitive JNA reference (including an overview and usage details) is in the [JavaDoc](http://java-native-access.github.io/jna/5.16.0/javadoc/).  Please read the [overview](http://java-native-access.github.io/jna/5.16.0/javadoc/overview-summary.html#overview_description).  Questions, comments, or exploratory conversations should begin on the [mailing list](http://groups.google.com/group/jna-users), although you may find it easier to find answers to already-solved problems on [StackOverflow](http://stackoverflow.com/questions/tagged/jna).\n\nJNA provides Java programs easy access to native shared libraries without writing anything but Java code - no JNI or native code is required. This functionality is comparable to Windows' Platform/Invoke and Python's ctypes.\n\nJNA allows you to call directly into native functions using natural Java method invocation. The Java call looks just like the call does in native code. Most calls require no special handling or configuration; no boilerplate or generated code is required.\n\nJNA uses a small JNI library stub to dynamically invoke native code. The developer uses a Java interface to describe functions and structures in the target native library. This makes it quite easy to take advantage of native platform features without incurring the high overhead of configuring and building JNI code for multiple platforms.  Read this [more in-depth description](https://github.com/java-native-access/jna/blob/master/www/FunctionalDescription.md).\n\nWhile significant attention has been paid to performance, correctness and ease of use take priority.\n\nIn addition, JNA includes a platform library with many native functions already mapped as well as a set of utility interfaces that simplify native access.\n\nProjects Using JNA\n==================\nJNA is a mature library with dozens of contributors and hundreds of commercial and non-commercial projects that use it.  If you're using JNA, feel free to [tell us about it](http://groups.google.com/group/jna-users).  Include some details about your company, project name, purpose and size and tell us how you use the library.\n\n- [Apache Cassandra](http://cassandra.apache.org): Large-scale NoSQL data store.\n- [Rococoa](https://github.com/iterate-ch/rococoa): Java bindings to the Mac OS X Cocoa framework, by Duncan McGregor.\n- [jna-posix](https://github.com/jenkinsci/jna-posix): Common POSIX Functions for Java.\n- [JNAerator](https://github.com/nativelibs4java/JNAerator): Pronounced \"generator\", auto-generates JNA mappings from C headers, by Olivier Chafik.\n- [Freedom for Media in Java](https://github.com/jitsi/fmj) by Ken Larson/Dieter Krachtus.\n- [GStreamer-Java](https://github.com/gstreamer-java/): Java bindings and utilities for [GStreamer 1.x](https://gstreamer.freedesktop.org/).\n- [VLCJ](https://github.com/caprica/vlcj): Java bindings for libVLC.\n- [SVNKit](http://svnkit.com): Pure Java Subversion client library.\n- [OmegaT Computer-Aided Translation](https://omegat.org/).\n- [IntelliJ IDEA](https://www.jetbrains.com/idea) by JetBrains.\n- [Jetbrains Toolbox](https://www.jetbrains.com/toolbox-app/) by JetBrains.\n- [Apache NetBeans IDE](https://netbeans.apache.org/) by Apache Software Foundation.\n- [FileBot Media Renamer](http://www.filebot.net) by Reinhard Pointner.\n- [USB for Java](https://launchpad.net/libusb4j) by Mario Boikov.\n- [Waffle](https://github.com/dblock/waffle): Enables SSO on Windows in Java applications, by Daniel Doubrovkine.\n- [leveldb-jna](https://github.com/protonail/leveldb-jna): Cross-platform JNA based adapter for [LevelDB](https://github.com/google/leveldb).\n- [bolt-jna](https://github.com/protonail/bolt-jna): Cross-platform JNA based adapter for [Bolt](https://github.com/boltdb/bolt). It is to show how to use JNA for binding to Go library.\n- [JVM OpenVR Bindings](https://github.com/kotlin-graphics/openvr).\n- [Apache Ignite](https://ignite.apache.org/): Direct IO plugin\n- [Domino JNA](https://github.com/klehmann/domino-jna): Cross-platform access to HCL Notes/Domino C API methods from Java\n- [OSHI](https://github.com/oshi/oshi): Cross-platform Operating System and Hardware Information library for Java\n- [jAlbum](https://jalbum.net): Desktop based web gallery software for any web site.\n- [jacknji11](https://github.com/joelhockey/jacknji11): Provides a Java PKCS#11 interface.\n- [JNAJack](https://github.com/jaudiolibs/jnajack): Java bindings for [JACK Audio Connection Kit](https://jackaudio.org/).\n- [Elasticsearch](https://www.elastic.co/elasticsearch/): Large-scale distributed search and analytics engine.\n- [Aki](https://github.com/letmeNo1/Aki): Automated Testing on desktop\n\n*Interesting Investigations/Experiments*\n\n- [Drive Lego Mindstorm NXT](http://epirsch.blogspot.com/2008/02/jna-love-nxt.html) by Emmanuel Pirsch.\n- [Detect User Inactivity](http://ochafik.free.fr/blog/?p=98) by Olivier Chafik.\n\nThere are also a number of examples and projects within the `contrib` directory of the JNA project itself.\n\nSupported Platforms\n===================\nJNA will build on most linux-like platforms with a reasonable set of GNU tools and a JDK.  See the native [Makefile](https://raw.githubusercontent.com/java-native-access/jna/master/native/Makefile) for native configurations that have been built and tested.  If your platform is supported by [libffi](http://en.wikipedia.org/wiki/Libffi), then chances are you can build JNA for it.\n\nPre-built platform support may be found [here](https://github.com/java-native-access/jna/tree/master/lib/native).\n\nDownload\n========\n\nVersion 5.16.0\n\nJNA\n---\n\n[![Maven Central](https://img.shields.io/maven-central/v/net.java.dev.jna/jna.svg?label=Maven%20Central)](https://search.maven.org/artifact/net.java.dev.jna/jna/5.16.0/jar)&nbsp;[jna-5.16.0.jar](https://repo1.maven.org/maven2/net/java/dev/jna/jna/5.16.0/jna-5.16.0.jar)&nbsp;[jna-jpms-5.16.0.jar](https://repo1.maven.org/maven2/net/java/dev/jna/jna-jpms/5.16.0/jna-jpms-5.16.0.jar)\n\nThis is the core artifact of JNA and contains only the binding library and the\ncore helper classes.\n\nJNA Platform\n------------\n\n[![Maven Central](https://img.shields.io/maven-central/v/net.java.dev.jna/jna-platform.svg?label=Maven%20Central)](https://search.maven.org/artifact/net.java.dev.jna/jna-platform/5.16.0/jar)&nbsp;[jna-platform-5.16.0.jar](https://repo1.maven.org/maven2/net/java/dev/jna/jna-platform/5.16.0/jna-platform-5.16.0.jar)&nbsp;[jna-platform-jpms-5.16.0.jar](https://repo1.maven.org/maven2/net/java/dev/jna/jna-platform-jpms/5.16.0/jna-platform-jpms-5.16.0.jar)\n\nThis artifact holds cross-platform mappings and mappings for a number of commonly used platform\nfunctions, including a large number of Win32 mappings as well as a set of utility classes\nthat simplify native access. The code is tested and the utility interfaces ensure that\nnative memory management is taken care of correctly.\n\nSee [PlatformLibrary.md](https://github.com/java-native-access/jna/blob/master/www/PlatformLibrary.md) for details.\n\nFeatures\n========\n\n* Automatic mapping from Java to native functions, with simple mappings for all primitive data types\n* Runs on most platforms which support Java\n* Automatic conversion between C and Java strings, with customizable encoding/decoding\n* Structure and Union arguments/return values, by reference and by value\n* Function Pointers, (callbacks from native code to Java) as arguments and/or members of a struct\n* Auto-generated Java proxies for native function pointers\n* By-reference (pointer-to-type) arguments\n* Java array and NIO Buffer arguments (primitive types and pointers) as pointer-to-buffer\n* Nested structures and arrays\n* Wide (wchar_t-based) strings\n* Native long support (32- or 64-bit as appropriate)\n* [Demo applications/examples](https://github.com/java-native-access/jna/tree/master/contrib)\n* Supported on 1.4 or later JVMs, including JavaME (earlier VMs may work with stubbed NIO support)\n* Customizable marshalling/unmarshalling (argument and return value conversions)\n* Customizable mapping from Java method to native function name, and customizable invocation to simulate C preprocessor function macros\n* Support for automatic Windows ASCII/UNICODE function mappings\n* Varargs support\n* Type-safety for native pointers\n* VM crash protection (optional)\n* Optimized direct mapping for high-performance applications.\n* COM support for early and late binding.\n* COM/Typelib java code generator.\n\nCommunity and Support\n=====================\n\nAll questions should be posted to the [jna-users Google group](http://groups.google.com/group/jna-users). Issues can be submitted [here on Github](https://github.com/java-native-access/jna/issues).\n\nWhen posting to the mailing list, please include the following:\n\n* What OS/CPU/architecture you're using (e.g. Windows 7 64-bit)\n* Reference to your native interface definitions (i.e. C headers), if available\n* The JNA mapping you're trying to use\n* VM crash logs, if any\n* Example native usage, and your attempted Java usage\n\nIt's nearly impossible to indicate proper Java usage when there's no native\nreference to work from.\n\nFor commercial support, please contact twalljava [at] java [dot] net.\n\nUsing the Library\n=================\n\n* [Getting Started](https://github.com/java-native-access/jna/blob/master/www/GettingStarted.md)\n* [Functional Description](https://github.com/java-native-access/jna/blob/master/www/FunctionalDescription.md).\n* [Mapping between Java and Native](https://github.com/java-native-access/jna/blob/master/www/Mappings.md)\n* [Using Pointers and Arrays](https://github.com/java-native-access/jna/blob/master/www/PointersAndArrays.md)\n* [Using Structures and Unions](https://github.com/java-native-access/jna/blob/master/www/StructuresAndUnions.md)\n* [Using By-Reference Arguments](https://github.com/java-native-access/jna/blob/master/www/ByRefArguments.md)\n* [Customization of Type Mapping](https://github.com/java-native-access/jna/blob/master/www/CustomMappings.md)\n* [Callbacks/Function Pointers/Closures](https://github.com/java-native-access/jna/blob/master/www/CallbacksAndClosures.md)\n* [Dynamically Typed Languages (JRuby/Jython)](https://github.com/java-native-access/jna/blob/master/www/DynamicallyTypedLanguages.md)\n* [Platform Library](https://github.com/java-native-access/jna/blob/master/www/PlatformLibrary.md)\n* [Direct Method Mapping](https://github.com/java-native-access/jna/blob/master/www/DirectMapping.md) (Optimization)\n* [Frequently Asked Questions (FAQ)](https://github.com/java-native-access/jna/blob/master/www/FrequentlyAskedQuestions.md)\n* [Avoiding Crashes](http://java-native-access.github.io/jna/5.16.0/javadoc/overview-summary.html#crash-protection)\n\nPrimary Documentation (JavaDoc)\n===============================\n\nThe definitive JNA reference is in the [JavaDoc](http://java-native-access.github.io/jna/5.16.0/javadoc/).\n\nDevelopers\n==========\n\n* [Contributing to JNA](https://github.com/java-native-access/jna/blob/master/www/Contributing.md)\n* [Setting up a Windows Development Environment](https://github.com/java-native-access/jna/blob/master/www/WindowsDevelopmentEnvironment.md)\n* [Setting up an Android Development Environment](https://github.com/java-native-access/jna/blob/master/www/AndroidDevelopmentEnvironment.md)\n* [Setting up a RaspberryPi Development Environment](https://github.com/java-native-access/jna/blob/master/www/RaspberryPiDevelopmentEnvironment.md)\n* [Setting up a Mac Development Environment](https://github.com/java-native-access/jna/blob/master/www/MacDevelopmentEnvironment.md)\n* [Releasing JNA](https://github.com/java-native-access/jna/blob/master/www/ReleasingJNA.md)\n* [Publishing to Maven Central](https://github.com/java-native-access/jna/blob/master/www/PublishingToMavenCentral.md)\n\nContributing\n============\n\nYou're encouraged to contribute to JNA. Fork the code from [https://github.com/java-native-access/jna](https://github.com/java-native-access/jna) and submit pull requests.\n\nFor more information on setting up a development environment see [Contributing to JNA](https://github.com/java-native-access/jna/blob/master/www/Contributing.md).\n\nIf you are interested in paid support, feel free to say so on the [jna-users mailing list](http://groups.google.com/group/jna-users). Most simple questions will be answered on the list, but more complicated work, new features or target platforms can be negotiated with any of the JNA developers (this is how several of JNA's features came into being). You may even encounter other users with the same need and be able to cost share the new development.\n\nLicense\n=======\n\nThis library is licensed under the LGPL, version 2.1 or later, or (from version 4.0 onward) the Apache License, version 2.0. Commercial support may be available, please e-mail twall[at]users[dot]sf[dot]net. See [LICENSE](LICENSE) for more information.\n\n*NOTE: Oracle is not sponsoring this project, even though the package name (com.sun.jna) might imply otherwise.*\n\n\n"
        },
        {
          "name": "TODO",
          "type": "blob",
          "size": 14.1376953125,
          "content": "# DESIGN GOALS/REQUIREMENTS\n  o no permanent references to java objects in native code (hard to get rid of)\n    this means no java object arguments to callbacks; use some sort of integer\n    key instead (hashcode?) callbacks can hold local data anyway...\n  o make simplest Java usage map to most common C usage\n    - additional constructs provided for less-common cases\n      (WString,Structure.ByValue/ByReference)\n  o structure is treated as a pointer, except within a struct\n  o primitive types are passed directly\n  o arrays are treated as pointers, except within a struct\n    - in structure (inline; otherwise pointer-to-X should be used)\n    - as function argument (auto-convert to pointer via Memory)\n  o pointer to type in struct should use PointerType or Structure.ByReference\n  o \"free\" should be invisible wherever possible\n\n# FUTURE DEMOS:\n* test keyboard keys' state (needs OSX impl)\n* get system process information, basic process control\n* additional file utilities (meta info, free space, etc)\n* enforce window minimum/maximum size (workaround java bug)\n\n# TODO\n\n* annotations/generics:\n  o GetPrimitiveArrayCritical: use this if flagged (by annotation? method name?)\n  o per-arg/return type marshalling\n  o avoid casts in loadLibrary\n  o wrap global variables w/type (set/get)\n  o support annotations of parameters and return values w/o breaking\n    1.4 compatibility (retroweaver?), e.g.\n    -- retroweaver (requires retroweaver runtime classes to provide annotation\n    features) not yet worth doing\n\n    void my_function(@MarshalAs(off_t)long arg);\n\n    trading off cruft in the interface def to avoid cruft in the usage:\n\n    my_function(0) versus my_function(new off_t(0))\n  \n    this only really applies to NativeLong/IntegerType types that want to use a\n    primitive value instead of creating an object instance.\n  o flag string(/wstring)-returning methods which need to free their result\n   to avoid leaking memory whan auto-creating strings from the result\n   (since normally we don't take explicit ownership of any returned pointers)\n   this is a special case for returned strings only, since other returned\n   pointers are available to the user for later \"freeing\"\n   Use a map on library creation, an iface for the library, or annotation\n   NOTE: how many methods actually do this? strdup...\n   Maybe make function return \"Memory\", which can then be converted to a\n   Structure or some other type.  Then memory will free itself when no longer\n   referenced. (not really common)\n\n\n* eliminate type conversion contexts; these are almost entirely unused and\n  more complicated than just wrapping a native mapping in a utility function\n* direct non-primitive array arguments (String[], Pointer[], NativeMapped[])\n\n* auto-generate direct mappings/bindings on a per-method basis (perform a\n  method register on first call to an interface-mapped function) with\n  sufficient pre-processing to convert to primitives.\n\n* dispose memory/callbacks in Native finalizer to ensure they run first\n  (use referencequeue to run them when they become unreachable)\n\n* make direct calls call back *once* to Java where conversion is required,\n  and process all arguments from there (instead of potentially swapping back\n  and forth multiple times).  This also makes it easer to perform conversions\n  (no native changes required).  \n\n* ppc64 direct/raw failures (multiple)\n* direct calls on ppc to varargs (callbacks) with FP args fail; avoid them for\n  now \n* Callback.PostCallWrite.write() cf PostCallRead\n\n* universal GCC build w/cross-compile (needs cross compilers...)\n* return Pointer.SIZE/LONG_SIZE/WCHAR_SIZE in bits (for consistency with 1.5)\n  Long.SIZE, Integer.SIZE, et al.\n* interface \"lvalue\", which can provide a pointer to itself (reference() or\n  addressOf())?\n* bitfields for structs (how?)\n\n\f\n# DONE\n* combine direct and interface mapping calling code where possible\n* DOCS: how to properly use W32API_DEFAULT_OPTIONS (A/W, String/WString)\n* make native dll extraction from jar public, to use with user dlls packaged\n  in a jar\n* use consistent cpu references (x86->i386, x86_64->amd64)\n* osgi for osx\n* NO: make Pointer free-able (system allocates memory, client frees it); actually,\n  this should probably be automatic so the user doesn't have to think about it.\n  Maybe a custom type representing \"function-allocated-pointer\" or\n  \"pointer-requiring-free\" (which is just Memory).  For now, leave it up to\n  the user to manage the pointer, since they have to define the free method\n  anyway.  use could always put a finalizer on a PointerType-derived type.\n  - user can do this explicitly if needed\n* NO: use libffi java raw? (deprecated)\n* NO: MethodArgument/ReturnMapper: per method mapping of arguments/return type.\n  Can use annotations as shorthand to initialize a map, but basically set up a\n  per-NativeLibrary (or per-Function?) map of methods to mappers.\n\n  Requires separate compilation of annotation handling.\n* NO: packaging: 'types', 'convert/marshal' subpackages?\n  note: marshal/unmarshal vs to/fromnative: to/fromnative is more\n  explicit, since marshal/unmarshal doesn't indicate src/dst.\n  o moving conversion contexts to subpackage cleans up top level\n  substantially, but we probably don't want to move things like Structure and\n  Pointer into a types subpackage (which would leave just a few top-level\n  classes).  Javadoc is cluttered by example classes anyway.\n* cache structure information per-class\n* fix setFieldOrder to *always* apply if used\n* Make a separate jar file for all OS-specific headers\n  Maybe make interfaces per-header file (winbase, winnt, stdlib, etc),\n  aggregated per-library (interface CLibrary extends stdlib, stdio, etc)\n  (how useful would it really be, or is this just sorting legos?)\n  o same for windowutils, fileutils, etc. (not useful)\n* check Structure \"final\" fields; should never write back to native memory\n* OSX ObjC access (see rococoa)\n* do Structure.write for any callback args\n* pointer.setValue(), to handle NativeMapped types and move read/writeValue\n  methods out of Structure, to be used by Function w/NativeMapped[] parameter\n\n* if method has \"GetLastErrorException/ErrnoException\" in its signature, use\n  result codes + GetLastError/errno/errstr to auto-generate \n  runtime exceptions? (cf P/Invoke; also useful for X11 return types)\n  provide annotation/custom invocation handler/hook to examine return value and\n  throw an exception if the return value indicates an error\n\n  o are error return values consistent (if so, a single handler works)?\n    if null -> call GetLastError\n    if nonzero ?\n  o otherwise, need an ExceptionOnZero, ExceptionOnNonZero runtime, from which\n  derive GetLastError/ErrnoExceptionOnZero/NZ\n* verify get/set methods vs read/write for performance (Pointer)?\n  (see RawTest for performance comparisons)\n* Allow Buffer in Structures (and callbacks) (auto-wrap in direct byte buffer)?\n  o this gets tricky when reading structs from native memory; we don't know if\n  the value is already mapped to a buffer (cf CallbackReference)\n* standard types for various platforms: posix/types.h, w32 (DWORD, HANDLE)\n\n* embed version in DLL ('depends'-done)/so (symlink?)\n* use libffi closure allocation/deallocation\n\n* ensure Library options are passed to NativeFunctionHandler\n  (needs getLibraryOptions(Class cls))\n\n* handle array of Structure.ByReference as parameter/return value (cf Pointer[])\n* test performance of setByte/getByte and pass pointer field directly if it\n  makes sense to do so (done, halves access time to use pointer field directly,\n  slight variations on 1.4/1.5/1.6).\n* test callback arg/return value for callback type \n* structure by value in callback\n\n* call native to fix up FFIType on creation (avoid multithreading problems)\n  properly handle union by value (or punt; must pass union field instead)\n\n* hash javah-generated headers; when changed, invalidate platform-specific\n\n* add main class which spits out version information\n  \n* docs: split pages: FAQ\n  FAQ: J2ME, new platform builds, stdcall\n\n* struct by reference within structure\n* struct by value\n  (how to do struct value return (vs struct pointer) (uncommon)?)\n  (how to do struct value argument (vs struct pointer) (uncommon)?) \n* use appropriate size_t and off_t sizes (use long offsets everywhere in\n  Pointer) \n* Callback/function pointer as return value (e.g. signal())\n* type safety between returned and passed in pointers (w32 API); advantage of\n  deriving from Pointer is that type mapping can be made automatic, without an\n  explicit type mapping defined.\n* catch native crash/exception/faults and re-throw as java exception\n  this is mostly for debugging a new mapping to avoid crashing the VM\n  could do setjmp/longjmp on *nix and catch C++ exception on w32\n* NativeMapped: provide interface to automatically convert custom Java\n  type to/from native types. \n* update X11 libs for 64-bit\n* use libffi from gcc to handle calls and callbacks?\n  or move callback asm templates into dispatch_<arch>.c\n* more tests for argument types (2 args, all permutations of basic data types)\n   ensures native stack handling is done properly (handled by libffi)\n* universal OSX build w/cross-compile (hard to do with libffi)\n* use jna.encoding property to affect string encoding instead of just using\n  the system default encoding.\n* change/augment getWindowHandle0 to provide any heavyweight component window\n* unions (copy-on-call is problematic: which member is active?) must require\n  explicit write, either per member or whole object before export\n* rename Argument/Result Converter to be fromNative/toNative\n* split unit tests\n* auto-convert struct pointers in callback args to Java Structure\n  (may need a proxy wrapper around callback to avoid excessive JNI)\n  use proxy for callbacks to enable auto-conversion of arguments and/or return\n  value (in java-land instead of C-land). \n* review/use refactor nativelibrary/function\n* auto-generate stdcall decorated symbols (try if undecorated lookup fails)\n* per-library jna.library.path: many libraries have a \"standard\" location (or\n  several); let the library author indicate what these are (X11, for example)\n* return array of struct (annotation to indicate which argument has the\n  length of the returned value might be nice) (this can now be done with a\n  type mapper)\n* callbacks need a dispose if they are to live beyond the lifetime of the\nfunction to which they are passed; maybe a simpler callback interface for\ntransient callbacks, and require callback+dispose for most callbacks?\n  TransientCallback: callback\n  NonTransientCallback: callback+dispose\n  (callback is disposed when no longer referenced; user must ensure callback\n  is not GC'd until it is removed as a native callback)\n* auto-convert strings in w32 functions ending in 'W'?  would this introduce\n  any ambiguity?\n* Dispose/unload library on GC (use ref queue)\n* fix dnd on linux (no hole?) (mostly fixed, still some artifacts)\n* transparent/shaped drag image\n* windows handles need to be Pointer (void*), not 'int'\n* other demos: move to trash, file change notification\n* tests for other primitive array types\n* build test dll/dispatch lib w/cygwin/gcc instead of msvc (?) under w32\n* nested struct alignment (4/8 byte?  depends on first element?)\n* nested structs in structs: easier to define using struct; use pointer\n   if you need a pointer\n   struct auto-converts to pointer as argument, should be inline in struct\n   (struct should require explicit pointer, argument should require explicit\n   non-pointer) (maybe use object version of basic type as \"pointer\" version)\n* provide JNA-only search path for libraries\n* callbacks\n* move javah-generated files to own space\n* darwin/PPC asm layer\n* enable w32 build with either GCC or MSVC (GCC-built dll doesn't work yet)\n* support pointer to basic type argument (int *) w/type safety - what's the\n   best API from a user perspective? new Pointer(int)? new Pointer<int>?\n   Base class \"pointer to\" gets converted to Pointer in invocation handler;\n   provide a getValue() to retrieve the result; otherwise the memory is opaque\n\n  o IntPtr, WCharPtr, CharPtr, ShortPtr, LongPtr, DoublePtr, FloatPtr, \n    Handle (PtrPtr), getValue(), getPointer()\n  o add getCharArray() et al. to Pointer?\n\n* inline arrays of primitive types\n* remove debug flags (they're not useful)\n* Use WString to identify return type and arg\n* use interface to identify native, instead of annotation\n* isolate stdcall to w32 (should be private to platform)\n* generic gcc build/osx(ppc/x86)/linux\n* remove generics/enable build under 1.4\n* tests for structs\n* test float/double\n* offset placeholders for structs (explicit alignment)\n* vanilla ant build file\n* build native stuff from build.xml\n* implement basic junit tests\n* auto-align struct fields\n* handle long/byte/short\n* make annotations for native method names optional\n// hard clip for now, alpha transparency later\n// also allow ImageIcon to be used as clip (getImage())\nvoid setWindowMask(Window w, Shape clip);\n// needs:\nint findNativeWindow(Window w);\n\f\n#MAYBE NOT\n* should structure offsets be 64-bit? technically yes, but in practice I don't\n  think a structure that big actually works.\n* (maybe) move all native functions into Native (limit header files, easier\n  management) \n* Does it make sense to define Int16/UInt16, Int32/UInt32, etc?  Probably not\n  the signed versions, but maybe the unsigned ones, to facilitate generating\n  unsigned values (maybe just provide utilities to pack an unsigned int into a\n  signed int).  What about size_t, off_t, et al.?  Would either need a\n  bunch of native lookup functions (more accurate) or java-side conditionals\n  (less robust but easier to change).\n  o bounds checking is handled by IntegerType (pass in a long, get an\n    exception if the value is out of bounds).\n  o when used as struct fields, could allow detection of field order by order\n    of initialization (requires all-or-nothing usage, though)\n* StringBuffer/StringBuilder as mutable char*/wchar_t* argument\n  NOTE: byte[]/char[] is probably better; it's trivial to convert to String\n  and native code can't change the size anyway\n* provide library load/unload hooks (Runnables in options?). Examples:\n  o GetLastError (no longer needed)\n  o WSAInit?\n* determine X11 display name from current java program (if any); null is ok\n  since it uses getenv(DISPLAY), which is what java would do\n  note: DISPLAY may be available in GraphicsDevice->getIDstring\n\n\n"
        },
        {
          "name": "ant-tools-src",
          "type": "tree",
          "content": null
        },
        {
          "name": "appveyor.yml",
          "type": "blob",
          "size": 2.529296875,
          "content": "version: 1.0.{build}\n\n# speed up cloning\nshallow_clone: true\nclone_depth: 10\n\nenvironment:\n  matrix:\n    - TARGET_ARCH: x86_64\n      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015\n      CYGWIN_PACKAGES: git,make,automake,libtool,mingw64-x86_64-gcc-g++,mingw64-x86_64-gcc-core,perl\n      CHOCO_PACKAGES: ant cygwin\n      CYGWIN_SETUP: cygwinsetup.exe # from choco\n      JAVA_HOME: C:\\Program Files\\Java\\jdk1.8.0\n\n    - TARGET_ARCH: x86\n      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015\n      CYGWIN_PACKAGES: git,make,automake,libtool,mingw64-i686-gcc-g++,mingw64-i686-gcc-core,perl\n      CHOCO_PACKAGES: ant cygwin\n      CYGWIN_SETUP: cygwinsetup.exe # from choco\n      JAVA_HOME: C:\\Program Files (x86)\\Java\\jdk1.8.0 # 32-bit\n\n    - TARGET_ARCH: aarch64\n      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019 # provides cygwin, mingw\n      CYGWIN_PACKAGES: make,automake,libtool\n      CHOCO_PACKAGES: ant\n      CYGWIN_SETUP: setup-x86_64.exe # from appveyor\n      JAVA_HOME: C:\\Program Files\\Java\\jdk1.8.0\n\ninstall:\n    # Must prepend cygwin PATH to avoid \"cygheap base mismatch\" from Git\\usr\\bin\\sed\n  - cmd: set PATH=C:\\cygwin64;C:\\cygwin64\\bin;%JAVA_HOME%\\bin;%PATH%;\n  - cmd: choco install -y -f -i %CHOCO_PACKAGES%\n  - cmd: '%CYGWIN_SETUP% --root C:\\cygwin64 --local-package-dir C:\\cygwin64\\packages --quiet-mode --no-desktop --no-startmenu --upgrade-also --packages %CYGWIN_PACKAGES%'\n\n# Setup msvc environment\nfor:\n  - # VS 2015: x64\n    matrix:\n      only:\n        - TARGET_ARCH: x86_64\n    before_build:\n        - cmd: set PATH=C:\\Program Files (x86)\\MSBuild\\14.0\\Bin;%PATH%\n        - cmd: '\"C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\vcvarsall.bat\" x64'\n    before_test:\n        - cmd: net start spooler\n    test_script:\n        - cmd: ant test\n        - cmd: ant test-platform\n\n  - # VS 2015: x86\n    matrix:\n      only:\n        - TARGET_ARCH: x86\n    before_build:\n        - cmd: set PATH=C:\\Program Files (x86)\\MSBuild\\14.0\\Bin;%PATH%\n        - cmd: '\"C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\vcvarsall.bat\" x86'\n    before_test:\n        - cmd: net start spooler\n    test_script:\n        - cmd: ant test\n        - cmd: ant test-platform\n\n  - # VS 2019: aarch64\n    matrix:\n      only:\n        - TARGET_ARCH: aarch64\n    before_build:\n        - cmd: set PATH=C:\\Program Files (x86)\\MSBuild\\14.0\\Bin;%PATH%\n        - cmd: '\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community\\VC\\Auxiliary\\Build\\vcvarsall.bat\" x64_arm64'\n    test_script:\n        - cmd: echo Skipping tests\n\nbuild_script:\n  - cmd: ant -Dos.prefix=win32-%TARGET_ARCH% dist\n"
        },
        {
          "name": "build-ant-tools.xml",
          "type": "blob",
          "size": 0.8251953125,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project name=\"JNA\" default=\"default\" basedir=\".\">\n    <import file=\"common.xml\" />\n    <description>Builds and tests JNA</description>\n    <property name=\"build\" value=\"build\" />\n    <target name=\"default\">\n        <mkdir dir=\"${build}/ant-tools\" />\n        <javac classpath=\"lib/ant.jar:lib/asm-8.0.1.jar\"\n               destdir=\"${build}/ant-tools\"\n               includeantruntime=\"false\"\n               encoding=\"UTF-8\"\n               release=\"${javac.release}\"\n        >\n            <src path=\"src\" />\n            <src path=\"ant-tools-src\" />\n            <include name=\"**/ELFAnalyser.java\" />\n            <include name=\"**/BuildArmSoftFloatDetector.java\" />\n            <include name=\"**/ant/*.java\" />\n            <include name=\"**/ModuleGenerator.java\" />\n        </javac>\n    </target>\n</project>"
        },
        {
          "name": "build.xml",
          "type": "blob",
          "size": 70.314453125,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project name=\"JNA\" default=\"default\" basedir=\".\" \n         xmlns:artifact=\"antlib:org.apache.maven.artifact.ant\"\n         xmlns:if=\"ant:if\"\n         xmlns:unless=\"ant:unless\">\n  <description>Builds and tests JNA</description>\n\n  <!-- Default build compiles all platform-independent stuff as well\n       as the JNI bits for the current platform, using the arch model\n       of the current Java VM to determine whether 32- or 64-bit\n       binaries are built (ANT_OPTS=-d32/-d64 to switch on platforms that\n       support it).\n\n       Cross-compile by specifying -Dos.prefix={name-arch} to ant\n       (cross-compile currently only configured/tested on android targets)\n\n       Use ANT_OPTS=-D-native=true to build native parts, or directly\n         invoke the native or test targets\n       Use ANT_OPTS=-Dheadless to run tests headless\n       Use ANT_OPTS=-Drelease to stage a final, non-snapshot version\n    -->\n\n  <!--\n  Conventions (since ant can't easily specify arbitrary file dependencies):\n  The uptodate property for a given target TARGET is \"-TARGET\"; the actual\n  target to generate the uptodate property is named \":TARGET\".\n\n  Properties (except for uptodate properties) separate words by dots, targets\n  by dashes.\n  -->\n\n  <!-- global properties -->\n  <!-- (all build-related props should go in -dynamic-properties) -->\n  <import file=\"common.xml\" />\n  <property name=\"jar\" value=\"${name}.jar\"/>\n  <property name=\"aar\" value=\"${name}.aar\"/>\n  <property name=\"minjar\" value=\"${name}-min.jar\"/>\n  <property name=\"testjar\" value=\"${name}-test.jar\"/>\n  <property name=\"testjar2\" value=\"${name}-test2.jar\"/>\n  <property name=\"testjar3\" value=\"${name}-test3.jar\"/>\n  <property name=\"jar-jpms\" value=\"${name}-jpms.jar\"/>\n  <property name=\"debug\" value=\"true\"/>\n  <property name=\"debug.native\" value=\"false\"/>\n  <property name=\"cflags_extra.native\" value=\"\"/>\n  <property name=\"dynlink.native\" value=\"false\"/>\n  <property name=\"native\" location=\"native\"/>\n  <property name=\"src\" location=\"src\"/>\n  <property name=\"platform.src\" location=\"contrib/platform/src\"/>\n  <property name=\"contrib\" location=\"contrib\"/>\n  <property name=\"dist\" location=\"dist\"/>\n  <property name=\"lib.native\" location=\"lib/native\"/>\n  <property name=\"test.src\" location=\"test\"/>\n  <property name=\"doc\" location=\"doc\"/>\n  <property name=\"javadoc\" location=\"${doc}/javadoc\"/>\n  <property name=\"stylesheet\" location=\"${javadoc}/doc/css/javadoc.css\"/>\n\n  <condition property=\"tests.exclude-patterns\" value=\"**/VarArgsTest.java,**/AnnotatedLibraryTest.java,**/WebStartTest.java,**/PointerBufferTest.java,**/HeadlessLoadLibraryTest.java,**/StructureBufferFieldTest.java,**/PerformanceTest.java,**/*BufferArgumentsMarshalTest.java\" else=\"**/wince/*.java,**/WebStartTest.java\">\n    <equals arg1=\"${os.prefix}\" arg2=\"w32ce-arm\"/>\n  </condition>\n  <property name=\"dist-jar\" value=\"${dist}/${jar}\"/>\n  <property name=\"dist-aar\" value=\"${dist}/${aar}\"/>\n  <property name=\"dist-jar-jpms\" value=\"${dist}/${jar-jpms}\"/>\n\n  <!-- Maven -->\n  <!-- define Maven coordinates -->\n  <property name=\"groupId\" value=\"net.java.dev.jna\" />\n  <property name=\"artifactId\" value=\"jna\" />\n\n  <property name=\"maven-javadoc-jar\" value=\"${dist}/${artifactId}-${jna.version}-javadoc.jar\" />\n  <property name=\"maven-sources-jar\" value=\"${dist}/${artifactId}-${jna.version}-sources.jar\" />\n\n  <property name=\"platform-jar\" value=\"${dist}/jna-platform.jar\"/>\n  <property name=\"platform-javadoc-jar\" value=\"${dist}/platform-${jna.version}-javadoc.jar\" />\n  <property name=\"platform-sources-jar\" value=\"${dist}/platform-${jna.version}-sources.jar\" />\n  <property name=\"platform-jpms-jar\" value=\"${dist}/jna-platform-jpms.jar\" />\n\n  <!-- defined maven snapshots and staging repository id and url -->\n  <property name=\"maven-snapshots-repository-id\" value=\"oss.sonatype.org\" />\n  <property name=\"maven-snapshots-repository-url\" value=\"https://oss.sonatype.org/content/repositories/snapshots/\" />\n  <property name=\"maven-staging-repository-id\" value=\"oss.sonatype.org\" />\n  <property name=\"maven-staging-repository-url\" value=\"https://oss.sonatype.org/service/local/staging/deploy/maven2/\" />\n\n  <!-- Miscellaneous -->\n  <property name=\"build\" value=\"build\"/>\n  <property name=\"build.compiler.emacs\" value=\"true\"/>\n\n  <property name=\"pom-base\" value=\"pom-jna.xml\" />\n  <property name=\"pom-platform-base\" value=\"pom-jna-platform.xml\" />\n  <property name=\"pom-jpms-base\" value=\"pom-jna-jpms.xml\" />\n  <property name=\"pom-platform-jpms-base\" value=\"pom-jna-platform-jpms.xml\" />\n\n  <property name=\"pom\" value=\"${build}/pom-jna.xml\" />\n  <property name=\"pom-platform\" value=\"${build}/pom-jna-platform.xml\" />\n  <property name=\"pom-jpms\" value=\"${build}/pom-jna-jpms.xml\" />\n  <property name=\"pom-platform-jpms\" value=\"${build}/pom-jna-platform-jpms.xml\" />\n\n  <target name=\"default\" depends=\"test\" description=\"Build and Test.\"/>\n\n  <target name=\"init\" depends=\"-setup\"/>\n  <target name=\"compile-test-single\" depends=\"compile-tests\"/>\n  <target name=\"compile-single\" depends=\"compile\"/>\n\n  <!-- Prepare additional ant task -->\n\n  <target name=\"-prepare-anttools\">\n      <subant antfile=\"build-ant-tools.xml\" buildpath=\"${basedir}\"></subant>\n      <taskdef name=\"BuildArmSoftFloatDetector\" classname=\"com.sun.jna.BuildArmSoftFloatDetector\" classpath=\"${build}/ant-tools:$lib/asm-8.0.1.jar\" />\n      <taskdef name=\"CalcAndroidVersion\" classname=\"com.sun.jna.ant.CalcAndroidVersion\" classpath=\"${build}/ant-tools:lib/asm-8.0.1.jar\" />\n      <taskdef name=\"ModuleGenerator\" classname=\"com.sun.jna.ant.ModuleGenerator\" classpath=\"${build}/ant-tools:lib/asm-8.0.1.jar\" />\n  </target>\n\n  <target name=\"-dynamic-properties\" depends=\"-prepare-anttools\">\n\n    <condition property=\"-native\" value=\"true\">\n      <not><isset property=\"build-native\"/></not>\n    </condition>\n    <condition property=\"jni.valid\" value=\"true\">\n      <isset property=\"-native\"/>\n    </condition>\n\n    <copy file=\"${pom-base}\" tofile=\"${pom}\" />\n    <copy file=\"${pom-platform-base}\" tofile=\"${pom-platform}\" />\n    <copy file=\"${pom-jpms-base}\" tofile=\"${pom-jpms}\" />\n    <copy file=\"${pom-platform-jpms-base}\" tofile=\"${pom-platform-jpms}\" />\n\n    <replaceregexp match=\"(&lt;version&gt;).*(&lt;/version&gt;)\"\n                   replace=\"\\1${jna.version}\\2\"\n                   flags=\"g\"\n                   file=\"${pom}\"/>\n\n    <replaceregexp match=\"(&lt;version&gt;).*(&lt;/version&gt;)\"\n                   replace=\"\\1${jna.version}\\2\"\n                   flags=\"g\"\n                   file=\"${pom-platform}\"/>\n\n    <replaceregexp match=\"(&lt;version&gt;).*(&lt;/version&gt;)\"\n                   replace=\"\\1${jna.version}\\2\"\n                   flags=\"g\"\n                   file=\"${pom-jpms}\"/>\n\n    <replaceregexp match=\"(&lt;version&gt;).*(&lt;/version&gt;)\"\n                 replace=\"\\1${jna.version}\\2\"\n                 flags=\"g\"\n                 file=\"${pom-platform-jpms}\"/>\n\n    <condition property=\"jar.omitted\" value=\"**/*jnidispatch*\" else=\"jnilib-included\">\n      <isset property=\"omit-jnilib\"/>\n    </condition>\n\n    <property name=\"classes\" location=\"${build}/classes\"/>\n    <property name=\"eclipse.classes\" location=\"build.eclipse/classes\"/>\n    <property name=\"test.classes\" location=\"${build}/test-classes\"/>\n    <property name=\"reports\" value=\"${build}/reports\"/>\n\n    <CalcAndroidVersion\n        major=\"${jna.major}\"\n        minor=\"${jna.minor}\"\n        revision=\"${jna.revision}\"\n        releaseProperty=\"release\"\n        targetProperty=\"android.versionCode\"\n    />\n    <BuildArmSoftFloatDetector targetProperty=\"build.isArmSoftFloat\"/>\n\n    <fail unless=\"os.prefix\" message=\"OS/arch not supported (${os.name}/${jre.arch}), edit build.xml and native/Makefile to add it.\"/>\n    <!-- Keep all natives separate -->\n    <condition property=\"jdk.home\" value=\"${java.home}\">\n      <available file=\"${java.home}/include\"/>\n    </condition>\n    <condition property=\"jdk.home\" value=\"${java.home}/..\">\n      <available file=\"${java.home}/../include\"/>\n    </condition>\n    <condition property=\"jdk.home\" value=\"/System/Library/Frameworks/JavaVM.framework/Home\">\n      <available file=\"/System/Library/Frameworks/JavaVM.framework/Headers\"/>\n    </condition>\n    <fail unless=\"jdk.home\" message=\"Can't find JNI headers (java.home=${java.home})\"/>\n    <property name=\"libarch\" value=\"${os.arch}\"/>\n    <condition property=\"libjsig\"\n               value=\"${java.home}/lib/${libarch}/libjsig.so\" else=\"\">\n      <available file=\"${java.home}/lib/${libarch}/libjsig.so\"/>\n    </condition>\n    <condition property=\"ld.preload.name\" value=\"LD_PRELOAD\" else=\"IGNORE\">\n      <not><equals arg1=\"${libjsig}\" arg2=\"\"/></not>\n    </condition>\n    <property name=\"native.jar\" value=\"${os.prefix}.jar\"/>\n    <property name=\"build.native\" location=\"${build}/${native.subdir}\"/>\n    <property name=\"build.headers\" location=\"${build}/headers\"/>\n    <property name=\"build.aar\" location=\"${build}/aar\"/>\n    <property name=\"md5.file\" location=\"${build.headers}/jni.checksum\"/>\n    <property name=\"jni.info\" location=\"${build.headers}/jni.properties\"/>\n\n    <mkdir dir=\"${build}\"/>\n    <mkdir dir=\"${build.native}\"/>\n    <mkdir dir=\"${build.headers}\"/>\n    <mkdir dir=\"${classes}\"/>\n    <mkdir dir=\"${test.classes}\"/>\n    <mkdir dir=\"${reports}\"/>\n    <mkdir dir=\"${doc}\"/>\n    <mkdir dir=\"${build.aar}\"/>\n\n    <echo>Java version ${java.version}, compatibility: ${javac.release}, ant: ${ant.java.version}</echo>\n    <echo>JNA version ${jna.version}, native ${jni.version}, android ${android.versionCode}</echo>\n    <echo>${java.vm.name} (${java.vm.vendor}, ${java.vm.version})</echo>\n    <echo>java.home=${java.home}</echo>\n    <echo>java.library.path=${java.library.path}</echo>\n    <echo>os.prefix=${os.prefix}</echo>\n    <echo>os.name=${build.os.name}</echo>\n    <echo>os.arch=${build.os.arch} (${build.os.endianess})</echo>\n    <echo>build=${build}</echo>\n    <echo>build.native=${build.native}</echo>\n    <echo>build.headers=${build.headers}</echo>\n    <echo>build.aar=${build.aar}</echo>\n\n  </target>\n\n  <target name=\"-setup\" depends=\"-dynamic-properties\">\n    <path id=\"compile-test.path\">\n      <path id=\"test.libs\">\n        <fileset dir=\"lib\">\n          <include name=\"junit.jar\"/>\n          <include name=\"hamcrest-core-1.3.jar\"/>\n        </fileset>\n        <fileset dir=\"lib/test\"/>\n        <pathelement path=\"${classes}\"/>\n      </path>\n    </path>\n    <path id=\"compile.path\"/>\n    <path id=\"src.path\">\n      <pathelement location=\"${src}\"/>\n    </path>\n    <path id=\"test.runpath\">\n      <pathelement path=\"${build}/${jar}\"/>\n      <pathelement path=\"${test.classes}\"/>\n      <pathelement path=\"${build}/${testjar}\"/>\n      <pathelement path=\"lib/clover.jar\"/>\n      <path refid=\"test.libs\"/>\n    </path>\n  </target>\n\n  <target name=\"compile\" depends=\"-setup\"\n          description=\"Compile all Java source\">\n\n    <delete dir=\"${build}/jna-src\" />\n    <mkdir dir=\"${build}/jna-src/com/sun/jna\" />\n\n    <copy file=\"src/com/sun/jna/Version.java\" todir=\"${build}/jna-src/com/sun/jna\" />\n\n    <replaceregexp match='VERSION = \".*\";'\n                   replace='VERSION = \"${jna.version}\";'\n                   file=\"${build}/jna-src/com/sun/jna/Version.java\"/>\n    <replaceregexp match='VERSION_NATIVE = \".*\";'\n                   replace='VERSION_NATIVE = \"${jni.version}\";'\n                   file=\"${build}/jna-src/com/sun/jna/Version.java\"/>\n\n    <javac release=\"${javac.release}\"\n           destdir=\"${classes}\"\n           includeantruntime=\"false\"\n           deprecation=\"on\"\n           debug=\"${debug}\"\n           encoding=\"UTF-8\"\n           nativeheaderdir=\"${build.headers}\">\n      <src location=\"${build}/jna-src/com/sun/jna\" />\n    </javac>\n    <javac release=\"${javac.release}\"\n           destdir=\"${classes}\"\n           includeantruntime=\"false\"\n           deprecation=\"on\" \n           debug=\"${debug}\"\n           encoding=\"UTF-8\"\n           nativeheaderdir=\"${build.headers}\">\n      <src refid=\"src.path\"/>\n      <exclude name=\"com/sun/jna/Version.java\" />\n    </javac>\n  </target>\n\n  <target name=\":jar\">\n    <uptodate property=\"-jar\" targetfile=\"${build}/${jar}\">\n      <srcfiles dir=\"${classes}\">\n        <patternset id=\"jar-compiled\">\n          <include name=\"com/sun/jna/*\"/>\n          <include name=\"com/sun/jna/**/*\"/>\n        </patternset>\n      </srcfiles>\n    </uptodate>\n  </target>\n  <target name=\"jar\" depends=\"-setup,native,:jar\" unless=\"-jar\"\n          description=\"Build primary jar\">\n    <!-- Bundle native components with primary jar to facilitate\n         easy distribution to common platforms.\n      -->\n  <macrodef name=\"build-manifest\">\n      <attribute name=\"target\" />\n      <attribute name=\"module-info\" default=\"false\" />\n      <sequential>\n          <manifest file=\"@{target}\" mode=\"replace\">\n              <attribute name=\"Main-Class\" value=\"com.sun.jna.Native\"/>\n              <attribute name=\"Manifest-Version\" value=\"1.0\"/>\n              <attribute name=\"Implementation-Title\" value=\"${impl.title}\"/>\n              <attribute name=\"Implementation-Vendor\" value=\"${vendor}\"/>\n              <attribute name=\"Implementation-Version\" value=\"${impl.version}\"/>\n              <attribute name=\"Specification-Title\" value=\"${spec.title}\"/>\n              <attribute name=\"Specification-Vendor\" value=\"${spec.vendor}\"/>\n              <attribute name=\"Specification-Version\" value=\"${spec.version}\"/>\n              <!--\n                OSGi Bundle attributes\n                See http://www.osgi.org/Specifications/Reference\n              -->\n              <attribute name=\"Bundle-Category\" value=\"jni\"/>\n              <attribute name=\"Bundle-ManifestVersion\" value=\"2\"/>\n              <attribute name=\"Bundle-Name\" value=\"jna\"/>\n              <attribute name=\"Bundle-Description\" value=\"JNA Library\"/>\n              <attribute name=\"Bundle-SymbolicName\" value=\"com.sun.jna\"/>\n              <attribute name=\"Bundle-Version\" value=\"${jna.major}.${jna.minor}.${jna.revision}\"/>\n              <attribute name=\"Bundle-RequiredExecutionEnvironment\" value=\"JavaSE-1.6\"/>\n              <attribute name=\"Bundle-Vendor\" value=\"${vendor}\"/>\n              <attribute name=\"Bundle-ActivationPolicy\" value=\"lazy\"/>\n              <!--\n              The full \"Export-Package\" statement can be generated by invoking\n              create-export-package-metadata-pom.sh in the main folder. This is\n              necessary if the exported packages change. Then the list in the\n              shell script needs to be updated as well.\n              -->\n              <attribute name=\"Export-Package\" value=\"\ncom.sun.jna;version=&quot;${osgi.version}&quot;,\ncom.sun.jna.ptr;version=&quot;${osgi.version}&quot;;uses:=&quot;com.sun.jna&quot;,\ncom.sun.jna.win32;version=&quot;${osgi.version}&quot;;uses:=&quot;com.sun.jna&quot;\n\"/>\n              <!-- Note that no terminal \"*\" is included in this list,\n                 which will force failure on unsupported platforms.\n              -->\n              <attribute name=\"Bundle-NativeCode\"\n                         value=\"\ncom/sun/jna/win32-x86/jnidispatch.dll;\nprocessor=x86;osname=win32,\ncom/sun/jna/win32-x86-64/jnidispatch.dll;\nprocessor=x86-64;osname=win32,\ncom/sun/jna/win32-aarch64/jnidispatch.dll;\nprocessor=aarch64;osname=win32,\ncom/sun/jna/win32-x86/jnidispatch.dll;\nprocessor=x86;osname=win,\ncom/sun/jna/win32-x86-64/jnidispatch.dll;\nprocessor=x86-64;osname=win,\ncom/sun/jna/win32-aarch64/jnidispatch.dll;\nprocessor=aarch64;osname=win,\ncom/sun/jna/w32ce-arm/jnidispatch.dll;\nprocessor=arm;osname=wince,\n\ncom/sun/jna/sunos-x86/libjnidispatch.so;\nprocessor=x86;osname=sunos,\ncom/sun/jna/sunos-x86-64/libjnidispatch.so;\nprocessor=x86-64;osname=sunos,\ncom/sun/jna/sunos-sparc/libjnidispatch.so;\nprocessor=sparc;osname=sunos,\ncom/sun/jna/sunos-sparcv9/libjnidispatch.so;\nprocessor=sparcv9;osname=sunos,\n\ncom/sun/jna/aix-ppc/libjnidispatch.a;\nprocessor=ppc;osname=aix,\ncom/sun/jna/aix-ppc64/libjnidispatch.a;\nprocessor=ppc64;osname=aix,\n\ncom/sun/jna/linux-ppc/libjnidispatch.so;\nprocessor=ppc;osname=linux,\ncom/sun/jna/linux-ppc64/libjnidispatch.so;\nprocessor=ppc64;osname=linux,\ncom/sun/jna/linux-ppc64le/libjnidispatch.so;\nprocessor=ppc64le;osname=linux,\ncom/sun/jna/linux-x86/libjnidispatch.so;\nprocessor=x86;osname=linux,\ncom/sun/jna/linux-x86-64/libjnidispatch.so;\nprocessor=x86-64;osname=linux,\ncom/sun/jna/linux-arm/libjnidispatch.so;\nprocessor=arm;osname=linux,\ncom/sun/jna/linux-arm/libjnidispatch.so;\nprocessor=arm_le;osname=linux,\ncom/sun/jna/linux-armel/libjnidispatch.so;\nprocessor=armel;osname=linux,\ncom/sun/jna/linux-aarch64/libjnidispatch.so;\nprocessor=aarch64;osname=linux,\ncom/sun/jna/linux-ia64/libjnidispatch.so;\nprocessor=ia64;osname=linux,\ncom/sun/jna/linux-sparcv9/libjnidispatch.so;\nprocessor=sparcv9;osname=linux,\ncom/sun/jna/linux-mips64el/libjnidispatch.so;\nprocessor=mips64el;osname=linux,\ncom/sun/jna/linux-s390x/libjnidispatch.so;\nprocessor=S390x;osname=linux,\ncom/sun/jna/linux-loongarch64/libjnidispatch.so;\nprocessor=loongarch64;osname=linux,\ncom/sun/jna/linux-riscv64/libjnidispatch.so;\nprocessor=riscv64;osname=linux,\n\ncom/sun/jna/dragonflybsd-x86-64/libjnidispatch.so;\nprocessor=x86-64;osname=dragonflybsd,\n\ncom/sun/jna/freebsd-x86/libjnidispatch.so;\nprocessor=x86;osname=freebsd,\ncom/sun/jna/freebsd-x86-64/libjnidispatch.so;\nprocessor=x86-64;osname=freebsd,\ncom/sun/jna/freebsd-aarch64/libjnidispatch.so;\nprocessor=aarch64;osname=freebsd,\ncom/sun/jna/freebsd-ppc64le/libjnidispatch.so;\nprocessor=ppc64le;osname=freebsd,\ncom/sun/jna/freebsd-ppc64/libjnidispatch.so;\nprocessor=ppc64;osname=freebsd,\n\ncom/sun/jna/openbsd-x86/libjnidispatch.so;\nprocessor=x86;osname=openbsd,\ncom/sun/jna/openbsd-x86-64/libjnidispatch.so;\nprocessor=x86-64;osname=openbsd,\n\ncom/sun/jna/darwin-ppc/libjnidispatch.jnilib;\nosname=macosx;processor=ppc,\ncom/sun/jna/darwin-ppc64/libjnidispatch.jnilib;\nosname=macosx;processor=ppc64,\ncom/sun/jna/darwin-x86/libjnidispatch.jnilib;\nosname=macosx;processor=x86,\ncom/sun/jna/darwin-x86-64/libjnidispatch.jnilib;\nosname=macosx;processor=x86-64,\ncom/sun/jna/darwin-aarch64/libjnidispatch.jnilib;\nosname=macosx;processor=aarch64\n\"/>\n          </manifest>\n          <manifest file=\"@{target}\" mode=\"update\" if:true=\"@{module-info}\">\n              <attribute name=\"Multi-Release\" value=\"true\"/>\n          </manifest>\n          <manifest file=\"@{target}\" mode=\"update\" unless:true=\"@{module-info}\">\n              <attribute name=\"Automatic-Module-Name\" value=\"com.sun.jna\"/>\n          </manifest>\n      </sequential>\n  </macrodef>\n    <delete dir=\"${build}/manifest\"/>\n    <mkdir dir=\"${build}/manifest\"/>\n    <build-manifest target=\"${build}/manifest/module.mf\" module-info=\"true\"/>\n    <build-manifest target=\"${build}/manifest/automatic.mf\" module-info=\"false\"/>\n    <ModuleGenerator\n        targetFile=\"${build}/manifest/module-info.class\"\n        name=\"com.sun.jna\"\n        version=\"${jna.major}.${jna.minor}.${jna.revision}\"\n        open=\"false\"\n    >\n        <exports package=\"com.sun.jna\" />\n        <exports package=\"com.sun.jna.ptr\" />\n        <exports package=\"com.sun.jna.win32\" />\n        <exports package=\"com.sun.jna.internal\" to=\"com.sun.jna.platform\"/>\n        <requires module=\"java.logging\" />\n        <requires module=\"java.desktop\" />\n    </ModuleGenerator>\n    <jar jarfile=\"${build}/${jar}\" duplicate=\"preserve\" createUnicodeExtraFields=\"never\" encoding=\"UTF-8\" manifest=\"${build}/manifest/automatic.mf\">\n      <fileset dir=\"${classes}\" excludes=\"${jar.omitted}\">\n        <patternset refid=\"jar-compiled\"/>\n      </fileset>\n      <zipfileset src=\"${lib.native}/win32-x86.jar\"\n                  includes=\"*jnidispatch*\"\n                  prefix=\"com/sun/jna/win32-x86\"/>\n      <zipfileset src=\"${lib.native}/aix-ppc.jar\"\n                  includes=\"*jnidispatch*\"\n                  prefix=\"com/sun/jna/aix-ppc\"/>\n      <zipfileset src=\"${lib.native}/aix-ppc64.jar\"\n                  includes=\"*jnidispatch*\"\n                  prefix=\"com/sun/jna/aix-ppc64\"/>\n      <zipfileset src=\"${lib.native}/darwin-ppc.jar\"\n                  includes=\"*jnidispatch*\"\n                  prefix=\"com/sun/jna/darwin-ppc\"/>\n      <zipfileset src=\"${lib.native}/darwin-ppc64.jar\"\n                  includes=\"*jnidispatch*\"\n                  prefix=\"com/sun/jna/darwin-ppc64\"/>\n      <zipfileset src=\"${lib.native}/darwin-x86.jar\"\n                  includes=\"*jnidispatch*\"\n                  prefix=\"com/sun/jna/darwin-x86\"/>\n      <zipfileset src=\"${lib.native}/darwin-x86-64.jar\"\n                  includes=\"*jnidispatch*\"\n                  prefix=\"com/sun/jna/darwin-x86-64\"/>\n      <zipfileset src=\"${lib.native}/darwin-aarch64.jar\"\n                  includes=\"*jnidispatch*\"\n                  prefix=\"com/sun/jna/darwin-aarch64\"/>\n      <zipfileset src=\"${lib.native}/linux-x86.jar\"\n                  includes=\"*jnidispatch*\"\n                  prefix=\"com/sun/jna/linux-x86\"/>\n      <zipfileset src=\"${lib.native}/linux-x86-64.jar\"\n                  includes=\"*jnidispatch*\"\n                  prefix=\"com/sun/jna/linux-x86-64\"/>\n      <zipfileset src=\"${lib.native}/linux-arm.jar\"\n                  includes=\"*jnidispatch*\"\n                  prefix=\"com/sun/jna/linux-arm\"/>\n      <zipfileset src=\"${lib.native}/linux-armel.jar\"\n                  includes=\"*jnidispatch*\"\n                  prefix=\"com/sun/jna/linux-armel\"/>\n      <zipfileset src=\"${lib.native}/linux-aarch64.jar\"\n                  includes=\"*jnidispatch*\"\n                  prefix=\"com/sun/jna/linux-aarch64\"/>\n      <zipfileset src=\"${lib.native}/linux-ia64.jar\"\n                  includes=\"*jnidispatch*\"\n                  prefix=\"com/sun/jna/linux-ia64\"/>\n      <zipfileset src=\"${lib.native}/linux-ppc.jar\"\n                  includes=\"*jnidispatch*\"\n                  prefix=\"com/sun/jna/linux-ppc\"/>\n      <zipfileset src=\"${lib.native}/linux-ppc64.jar\"\n                  includes=\"*jnidispatch*\"\n                  prefix=\"com/sun/jna/linux-ppc64\"/>\n      <zipfileset src=\"${lib.native}/linux-ppc64le.jar\"\n                  includes=\"*jnidispatch*\"\n                  prefix=\"com/sun/jna/linux-ppc64le\"/>\n      <zipfileset src=\"${lib.native}/linux-sparcv9.jar\"\n                  includes=\"*jnidispatch*\"\n                  prefix=\"com/sun/jna/linux-sparcv9\"/>\n      <zipfileset src=\"${lib.native}/linux-mips64el.jar\"\n                  includes=\"*jnidispatch*\"\n                  prefix=\"com/sun/jna/linux-mips64el\"/>\n      <zipfileset src=\"${lib.native}/linux-loongarch64.jar\"\n                  includes=\"*jnidispatch*\"\n                  prefix=\"com/sun/jna/linux-loongarch64\"/>\n      <zipfileset src=\"${lib.native}/linux-s390x.jar\"\n                  includes=\"*jnidispatch*\"\n                  prefix=\"com/sun/jna/linux-s390x\"/>\n      <zipfileset src=\"${lib.native}/linux-riscv64.jar\"\n                  includes=\"*jnidispatch*\"\n                  prefix=\"com/sun/jna/linux-riscv64\"/>\n      <zipfileset src=\"${lib.native}/sunos-x86.jar\"\n                  includes=\"*jnidispatch*\"\n                  prefix=\"com/sun/jna/sunos-x86\"/>\n      <zipfileset src=\"${lib.native}/sunos-x86-64.jar\"\n                  includes=\"*jnidispatch*\"\n                  prefix=\"com/sun/jna/sunos-x86-64\"/>\n      <zipfileset src=\"${lib.native}/sunos-sparc.jar\"\n                  includes=\"*jnidispatch*\"\n                  prefix=\"com/sun/jna/sunos-sparc\"/>\n      <zipfileset src=\"${lib.native}/sunos-sparcv9.jar\"\n                  includes=\"*jnidispatch*\"\n                  prefix=\"com/sun/jna/sunos-sparcv9\"/>\n      <zipfileset src=\"${lib.native}/dragonflybsd-x86-64.jar\"\n                  includes=\"*jnidispatch*\"\n                  prefix=\"com/sun/jna/dragonflybsd-x86-64\"/>\n      <zipfileset src=\"${lib.native}/freebsd-x86.jar\"\n                  includes=\"*jnidispatch*\"\n                  prefix=\"com/sun/jna/freebsd-x86\"/>\n      <zipfileset src=\"${lib.native}/freebsd-x86-64.jar\"\n                  includes=\"*jnidispatch*\"\n                  prefix=\"com/sun/jna/freebsd-x86-64\"/>\n      <zipfileset src=\"${lib.native}/freebsd-aarch64.jar\"\n                  includes=\"*jnidispatch*\"\n                  prefix=\"com/sun/jna/freebsd-aarch64\"/>\n      <zipfileset src=\"${lib.native}/freebsd-ppc64le.jar\"\n                  includes=\"*jnidispatch*\"\n                  prefix=\"com/sun/jna/freebsd-ppc64le\"/>\n      <zipfileset src=\"${lib.native}/freebsd-ppc64.jar\"\n                  includes=\"*jnidispatch*\"\n                  prefix=\"com/sun/jna/freebsd-ppc64\"/>\n      <zipfileset src=\"${lib.native}/openbsd-x86.jar\"\n                  includes=\"*jnidispatch*\"\n                  prefix=\"com/sun/jna/openbsd-x86\"/>\n      <zipfileset src=\"${lib.native}/openbsd-x86-64.jar\"\n                  includes=\"*jnidispatch*\"\n                  prefix=\"com/sun/jna/openbsd-x86-64\"/>\n      <zipfileset src=\"${lib.native}/win32-x86-64.jar\"\n                  includes=\"*jnidispatch*\"\n                  prefix=\"com/sun/jna/win32-x86-64\"/>\n      <zipfileset src=\"${lib.native}/win32-aarch64.jar\"\n                  includes=\"*jnidispatch*\"\n                  prefix=\"com/sun/jna/win32-aarch64\"/>\n      <zipfileset src=\"${lib.native}/w32ce-arm.jar\"\n                  includes=\"*jnidispatch*\"\n                  prefix=\"com/sun/jna/w32ce-arm\"/>\n      <zipfileset dir=\".\"\n                  includes=\"LICENSE,LGPL2.1,AL2.0\"\n                  prefix=\"META-INF\"/>\n    </jar>\n    <zip zipfile=\"${build}/${minjar}\">\n      <zipfileset src=\"${build}/${jar}\" excludes=\"**/*jnidispatch*\"/>\n    </zip>\n    <jar jarfile=\"${build}/jna-jpms.jar\" duplicate=\"preserve\" createUnicodeExtraFields=\"never\" encoding=\"UTF-8\" manifest=\"${build}/manifest/module.mf\">\n      <zipfileset src=\"${build}/${jar}\" excludes=\"META-INF/MANIFEST.mf\"/>\n      <zipfileset dir=\"${build}/manifest/\" includes=\"module-info.class\" prefix=\"META-INF/versions/9\"/>\n    </jar>\n  </target>\n\n  <target name=\"aar\" depends=\"jar\" description=\"Build Android Archive\">\n    <!-- Dummy entries in R.txt and the string resources are needed or a grails\n         build using this library will fail (tested with Android Studio 2.2.3 -->\n    <mkdir dir=\"${build.aar}/res/values\" />\n    <echo file=\"${build.aar}/res/values/values.xml\"><![CDATA[<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<resources>\n    <string name=\"jna_library_appname\">JNA bindings</string>\n</resources>\n    ]]></echo>\n    <echo file=\"${build.aar}/R.txt\">int string jna_library_appname 0x7f050021\n</echo>\n    <echo file=\"${build.aar}/AndroidManifest.xml\"><![CDATA[<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    package=\"com.sun.jna\"\n    android:versionCode=\"]]>${android.versionCode}<![CDATA[\"\n    android:versionName=\"]]>${jna.version}<![CDATA[\" >\n\n    <uses-sdk android:targetSdkVersion=\"25\" />\n</manifest> \n    ]]></echo>\n    <zip zipfile=\"${build}/${aar}\">\n        <mappedresources>\n          <fileset file=\"${build}/${minjar}\"/>\n          <globmapper from=\"*\" to=\"classes.jar\"/>\n        </mappedresources>\n        <zipfileset src=\"${lib.native}/android-aarch64.jar\"\n                  includes=\"*jnidispatch*\"\n                  prefix=\"jni/arm64-v8a\"/>\n        <zipfileset src=\"${lib.native}/android-arm.jar\"\n                  includes=\"*jnidispatch*\"\n                  prefix=\"jni/armeabi\"/>\n        <zipfileset src=\"${lib.native}/android-armv7.jar\"\n                  includes=\"*jnidispatch*\"\n                  prefix=\"jni/armeabi-v7a\"/>\n        <zipfileset src=\"${lib.native}/android-mips.jar\"\n                  includes=\"*jnidispatch*\"\n                  prefix=\"jni/mips\"/>\n        <zipfileset src=\"${lib.native}/android-mips64.jar\"\n                  includes=\"*jnidispatch*\"\n                  prefix=\"jni/mips64\"/>\n        <zipfileset src=\"${lib.native}/android-x86-64.jar\"\n                  includes=\"*jnidispatch*\"\n                  prefix=\"jni/x86_64\"/>\n        <zipfileset src=\"${lib.native}/android-x86.jar\"\n                  includes=\"*jnidispatch*\"\n                  prefix=\"jni/x86\"/>\n        <fileset dir=\"${build.aar}\"/>\n    </zip>\n  </target>\n\n  <target name=\"platform-jar\" depends=\"jar\">\n    <subant target=\"jar\" failonerror=\"true\">\n      <fileset dir=\"${contrib}\" includes=\"platform/build.xml\" />\n    </subant>\n    <!-- Sources package as required by maven -->\n    <zip zipfile=\"${platform-sources-jar}\">\n      <zipfileset dir=\"${contrib}/platform/src\" />\n    </zip>\n  </target>\n\n  <target name=\"contrib-jars\" depends=\"platform-jar\" description=\"Build contrib jars\">\n    <subant target=\"jar\" failonerror=\"true\">\n      <property name=\"file.reference.jna.build\" location=\"${build}\"/>\n      <property name=\"file.reference.jna.jar\" location=\"${build}/${jar}\"/>\n      <property name=\"libs.junit.classpath\" refid=\"test.libs\"/>\n      <property name=\"javac.source\" value=\"${javac.release}\" />\n      <property name=\"javac.target\" value=\"${javac.release}\" />\n      <property name=\"javac.release\" value=\"${javac.release}\" />\n      <fileset dir=\"${contrib}\" includes=\"*/build.xml\" excludes=\"platform/build.xml\"/>\n    </subant>\n  </target>\n\n  <target name=\"idea-jar\" depends=\"jar\" description=\"Build Intellij Idea convenience jar\">\n    <jar destfile=\"${dist}/idea-dispatch.jar\" createUnicodeExtraFields=\"never\" encoding=\"UTF-8\">\n      <zipfileset src=\"${dist-jar}\" excludes=\"**/*.class\"/>\n    </jar>\n  </target>\n\n  <target name=\"javah\" depends=\"compile\" unless=\"-native\">\n    <condition property=\"grep\" value=\"/usr/sfw/bin/ggrep\">\n      <os name=\"SunOS\"/>\n    </condition>\n    <condition property=\"grep\" value=\"ggrep\">\n      <os name=\"OpenBSD\"/>\n    </condition>\n    <property name=\"grep\" value=\"grep\"/>\n    <condition property=\"grep.required\" value=\"false\" else=\"true\">\n      <os name=\"AIX\"/>\n    </condition>\n    <!-- args are based on GNU grep, other versions may differ -->\n    <apply dir=\"${build.headers}\" executable=\"${grep}\" parallel=\"true\"\n           failonerror=\"${grep.required}\" relative=\"true\" output=\"${md5.file}\"\n           error=\"${md5.file}.error\">\n      <arg value=\"-A\"/>\n      <arg value=\"1\"/>\n      <arg value=\"JNIEXPORT\"/>\n      <fileset dir=\"${build.headers}\" includes=\"*.h\"/>\n    </apply>\n    <apply dir=\"${build.headers}\" executable=\"${grep}\" parallel=\"true\"\n           failonerror=\"${grep.required}\" relative=\"true\" output=\"${md5.file}\"\n           error=\"${md5.file}.error\" append=\"true\">\n      <arg value=\"#define\"/>\n      <fileset dir=\"${build.headers}\" includes=\"*.h\"/>\n    </apply>\n    <!-- Clean up gcj javah output to match that of Sun's javah -->\n    <fixcrlf file=\"${md5.file}\" eol=\"unix\"/>\n    <replaceregexp match=\"^((.*\\.h):JNIEXPORT[^(]+)( +\\(.*)\"\n                   replace=\"\\1&#xa;\\2- \\3&#xa;--\"\n\t\t   byline=\"true\"\n                   file=\"${md5.file}\"/>\n    <replaceregexp match=\"(JNIEnv *\\*) *env\"\n                   replace=\"\\1\"\n\t\t   byline=\"true\"\n                   file=\"${md5.file}\"/>\n    <replaceregexp match=\"&#xa;--&#xa;.*\\.h-$\"\n                   replace=\"\"\n\t\t   flags=\"m\"\n                   file=\"${md5.file}\"/>\n    <checksum property=\"md5\" file=\"${md5.file}\" />\n    <propertyfile file=\"${jni.info}\">\n        <entry key=\"checksum\" value=\"${md5}\" />\n        <entry key=\"version\" value=\"${jni.version}\" />\n    </propertyfile>\n    <condition property=\"jni.valid\" value=\"true\">\n      <or>\n        <os name=\"AIX\"/>\n        <equals arg1=\"${jni.md5}\" arg2=\"${md5}\" trim=\"true\"/>\n        <equals arg1=\"${jni.md5}\" arg2=\"\"/>\n      </or>\n    </condition>\n  </target>\n\n  <!-- Invalidate native libraries when native API changes -->\n  <target name=\"-native-api-check\" depends=\"javah\" unless=\"jni.valid\">\n    <echo>Invalidating native code, new checksum is ${md5}</echo>\n    <copy file=\"${lib.native}/out-of-date.jar\" tofile=\"${lib.native}/darwin-ppc.jar\" overwrite=\"true\"/>\n    <copy file=\"${lib.native}/out-of-date.jar\" tofile=\"${lib.native}/darwin-ppc64.jar\" overwrite=\"true\"/>\n    <copy file=\"${lib.native}/out-of-date.jar\" tofile=\"${lib.native}/darwin-x86.jar\" overwrite=\"true\"/>\n    <copy file=\"${lib.native}/out-of-date.jar\" tofile=\"${lib.native}/darwin-x86-64.jar\" overwrite=\"true\"/>\n    <copy file=\"${lib.native}/out-of-date.jar\" tofile=\"${lib.native}/darwin-aarch64.jar\" overwrite=\"true\"/>\n    <copy file=\"${lib.native}/out-of-date.jar\" tofile=\"${lib.native}/win32-x86.jar\" overwrite=\"true\"/>\n    <copy file=\"${lib.native}/out-of-date.jar\" tofile=\"${lib.native}/win32-x86-64.jar\" overwrite=\"true\"/>\n    <copy file=\"${lib.native}/out-of-date.jar\" tofile=\"${lib.native}/win32-aarch64.jar\" overwrite=\"true\"/>\n    <copy file=\"${lib.native}/out-of-date.jar\" tofile=\"${lib.native}/w32ce-arm.jar\" overwrite=\"true\"/>\n    <copy file=\"${lib.native}/out-of-date.jar\" tofile=\"${lib.native}/linux-x86.jar\" overwrite=\"true\"/>\n    <copy file=\"${lib.native}/out-of-date.jar\" tofile=\"${lib.native}/linux-x86-64.jar\" overwrite=\"true\"/>\n    <copy file=\"${lib.native}/out-of-date.jar\" tofile=\"${lib.native}/linux-arm.jar\" overwrite=\"true\"/>\n    <copy file=\"${lib.native}/out-of-date.jar\" tofile=\"${lib.native}/linux-armel.jar\" overwrite=\"true\"/>\n    <copy file=\"${lib.native}/out-of-date.jar\" tofile=\"${lib.native}/linux-aarch64.jar\" overwrite=\"true\"/>\n    <copy file=\"${lib.native}/out-of-date.jar\" tofile=\"${lib.native}/linux-ia64.jar\" overwrite=\"true\"/>\n    <copy file=\"${lib.native}/out-of-date.jar\" tofile=\"${lib.native}/linux-ppc.jar\" overwrite=\"true\"/>\n    <copy file=\"${lib.native}/out-of-date.jar\" tofile=\"${lib.native}/linux-ppc64.jar\" overwrite=\"true\"/>\n    <copy file=\"${lib.native}/out-of-date.jar\" tofile=\"${lib.native}/linux-ppc64le.jar\" overwrite=\"true\"/>\n    <copy file=\"${lib.native}/out-of-date.jar\" tofile=\"${lib.native}/linux-sparcv9.jar\" overwrite=\"true\"/>\n    <copy file=\"${lib.native}/out-of-date.jar\" tofile=\"${lib.native}/linux-mips64el.jar\" overwrite=\"true\"/>\n    <copy file=\"${lib.native}/out-of-date.jar\" tofile=\"${lib.native}/linux-loongarch64.jar\" overwrite=\"true\"/>\n    <copy file=\"${lib.native}/out-of-date.jar\" tofile=\"${lib.native}/linux-s390x.jar\" overwrite=\"true\"/>\n    <copy file=\"${lib.native}/out-of-date.jar\" tofile=\"${lib.native}/linux-riscv64.jar\" overwrite=\"true\"/>\n    <copy file=\"${lib.native}/out-of-date.jar\" tofile=\"${lib.native}/dragonflybsd-x86-64.jar\" overwrite=\"true\"/>\n    <copy file=\"${lib.native}/out-of-date.jar\" tofile=\"${lib.native}/freebsd-x86.jar\" overwrite=\"true\"/>\n    <copy file=\"${lib.native}/out-of-date.jar\" tofile=\"${lib.native}/freebsd-x86-64.jar\" overwrite=\"true\"/>\n    <copy file=\"${lib.native}/out-of-date.jar\" tofile=\"${lib.native}/freebsd-aarch64.jar\" overwrite=\"true\"/>\n    <copy file=\"${lib.native}/out-of-date.jar\" tofile=\"${lib.native}/freebsd-ppc64le.jar\" overwrite=\"true\"/>\n    <copy file=\"${lib.native}/out-of-date.jar\" tofile=\"${lib.native}/freebsd-ppc64.jar\" overwrite=\"true\"/>\n    <copy file=\"${lib.native}/out-of-date.jar\" tofile=\"${lib.native}/openbsd-x86.jar\" overwrite=\"true\"/>\n    <copy file=\"${lib.native}/out-of-date.jar\" tofile=\"${lib.native}/openbsd-x86-64.jar\" overwrite=\"true\"/>\n    <copy file=\"${lib.native}/out-of-date.jar\" tofile=\"${lib.native}/sunos-x86.jar\" overwrite=\"true\"/>\n    <copy file=\"${lib.native}/out-of-date.jar\" tofile=\"${lib.native}/sunos-x86-64.jar\" overwrite=\"true\"/>\n    <copy file=\"${lib.native}/out-of-date.jar\" tofile=\"${lib.native}/sunos-sparc.jar\" overwrite=\"true\"/>\n    <copy file=\"${lib.native}/out-of-date.jar\" tofile=\"${lib.native}/sunos-sparcv9.jar\" overwrite=\"true\"/>\n    <copy file=\"${lib.native}/out-of-date.jar\" tofile=\"${lib.native}/android-arm.jar\" overwrite=\"true\"/>\n    <copy file=\"${lib.native}/out-of-date.jar\" tofile=\"${lib.native}/android-armv7.jar\" overwrite=\"true\"/>\n    <copy file=\"${lib.native}/out-of-date.jar\" tofile=\"${lib.native}/android-aarch64.jar\" overwrite=\"true\"/>\n    <copy file=\"${lib.native}/out-of-date.jar\" tofile=\"${lib.native}/android-x86.jar\" overwrite=\"true\"/>\n    <copy file=\"${lib.native}/out-of-date.jar\" tofile=\"${lib.native}/android-x86-64.jar\" overwrite=\"true\"/>\n    <copy file=\"${lib.native}/out-of-date.jar\" tofile=\"${lib.native}/android-mips.jar\" overwrite=\"true\"/>\n    <copy file=\"${lib.native}/out-of-date.jar\" tofile=\"${lib.native}/android-mips64.jar\" overwrite=\"true\"/>\n    <delete failOnError=\"false\" includeEmptyDirs=\"true\">\n      <fileset dir=\"${build.native}\" includes=\"*.o,*jnidispatch*\"/>\n    </delete>\n    <fail>API for native code has changed, or javah output is inconsistent.  Re-run this build after checking ${md5.file} or updating jni.version and jni.md5 in build.xml</fail>\n  </target>\n\n  <target name=\":rsrc\">\n    <condition property=\"-rsrc\">\n      <and>\n        <not><equals arg1=\"${build.os.family}\" arg2=\"windows\"/></not>\n        <not><equals arg1=\"${os.prefix}\" arg2=\"w32ce-arm\"/></not>\n      </and>\n    </condition>\n  </target>\n  <target name=\"rsrc\" depends=\"-setup,:rsrc\" unless=\"-rsrc\"\n          description=\"Generate w32 DLL version resource information\">\n    <property name=\"rsrc\" location=\"${build.native}/jnidispatch.rc\"/>\n    <copy todir=\"${build.native}\" file=\"${native}/jnidispatch.rc\"/>\n    <replaceregexp match=\"FILEVERSION.*\"\n                   replace=\"FILEVERSION ${jni.major},${jni.minor},${jni.revision},${jni.build}\"\n                   preserveLastModified=\"true\"\n                   file=\"${rsrc}\" byline=\"true\"/>\n    <replaceregexp match=\"PRODUCTVERSION.*\"\n                   replace=\"PRODUCTVERSION ${jna.major},${jna.minor},${jna.revision},${jna.build}\"\n                   preserveLastModified=\"true\"\n                   file=\"${rsrc}\" byline=\"true\"/>\n    <replaceregexp match=\"FileVersion.*\"\n                   replace=\"FileVersion&quot;,&quot;${jni.version}&quot;\"\n                   preserveLastModified=\"true\"\n                   file=\"${rsrc}\" byline=\"true\"/>\n    <replaceregexp match=\"Full Version.*\"\n                   replace=\"Full Version&quot;,&quot;${jni.version} b${jni.build}&quot;\"\n                   preserveLastModified=\"true\"\n                   file=\"${rsrc}\" byline=\"true\"/>\n    <replaceregexp match=\"ProductVersion.*\"\n                   replace=\"ProductVersion&quot;,&quot;${spec.version}&quot;\"\n                   preserveLastModified=\"true\"\n                   file=\"${rsrc}\" byline=\"true\"/>\n    <replaceregexp match=\"(Copyright.*-)2...\"\n                   replace=\"\\1${year}\"\n                   preserveLastModified=\"true\"\n                   file=\"${rsrc}\" byline=\"true\"/>\n  </target>\n\n  <target name=\"-prepare-native\" depends=\"-setup,rsrc\">\n    <property name=\"comment\" value=\"# auto-generated by ant\"/>\n    <condition property=\"make.OS\" value=\"OS=w32ce\">\n      <equals arg1=\"${os.prefix}\" arg2=\"w32ce-arm\"/>\n    </condition>\n    <condition property=\"make.OS\" value=\"OS=android\">\n      <matches pattern=\"^android-\" string=\"${os.prefix}\"/>\n    </condition>\n    <property name=\"make.OS\" value=\"IGNORE=\"/>\n    <!-- Ensure Makefile ARCH property properly set for darwin -->\n    <condition property=\"ARCH\" value=\"aarch64\">\n        <equals arg1=\"${os.prefix}\" arg2=\"darwin-aarch64\"/>\n    </condition>\n    <condition property=\"ARCH\" value=\"i386\">\n        <equals arg1=\"${os.prefix}\" arg2=\"darwin-x86\"/>\n    </condition>\n    <condition property=\"ARCH\" value=\"x86-64\">\n        <equals arg1=\"${os.prefix}\" arg2=\"darwin-x86-64\"/>\n    </condition>\n    <condition property=\"ARCH\" value=\"ppc\">\n        <equals arg1=\"${os.prefix}\" arg2=\"darwin-ppc\"/>\n    </condition>\n    <condition property=\"ARCH\" value=\"ppc64\">\n        <equals arg1=\"${os.prefix}\" arg2=\"darwin-ppc64\"/>\n    </condition>\n    <condition property=\"ARCH\" value=\"arm\">\n      <equals arg1=\"${os.prefix}\" arg2=\"w32ce-arm\"/>\n    </condition>\n    <condition property=\"ARCH\" value=\"arm\">\n      <equals arg1=\"${os.prefix}\" arg2=\"android-arm\"/>\n    </condition>\n    <condition property=\"ARCH\" value=\"armv7\">\n      <equals arg1=\"${os.prefix}\" arg2=\"android-armv7\"/>\n    </condition>\n    <condition property=\"ARCH\" value=\"aarch64\">\n      <matches string=\"${os.prefix}\" pattern=\"-aarch64$\"/>\n    </condition>\n    <condition property=\"ARCH\" value=\"x86\">\n      <equals arg1=\"${os.prefix}\" arg2=\"android-x86\"/>\n    </condition>\n    <condition property=\"ARCH\" value=\"x86-64\">\n      <equals arg1=\"${os.prefix}\" arg2=\"android-x86-64\"/>\n    </condition>\n    <condition property=\"ARCH\" value=\"mips\">\n      <equals arg1=\"${os.prefix}\" arg2=\"android-mips\"/>\n    </condition>\n    <condition property=\"ARCH\" value=\"mips64\">\n      <equals arg1=\"${os.prefix}\" arg2=\"android-mips64\"/>\n    </condition>\n    <condition property=\"ARCH\" value=\"ppc\">\n      <equals arg1=\"${os.prefix}\" arg2=\"aix-ppc\"/>\n    </condition>\n    <condition property=\"ARCH\" value=\"ppc64\">\n      <equals arg1=\"${os.prefix}\" arg2=\"aix-ppc64\"/>\n    </condition>\n    <condition property=\"ARCH\" value=\"riscv64\">\n      <matches string=\"${os.prefix}\" pattern=\"-riscv64$\"/>\n    </condition>\n    <!-- ensure ARCH is set properly for 64-bit capable platforms -->\n    <!-- use ANT_OPTS=-d64/-d32 to build 64-bit/32-bit if not the platform default -->\n    <property name=\"ARCH\" value=\"${build.os.arch}\"/>\n    <condition property=\"make.USE_MSVC\" value=\"USE_MSVC=${USE_MSVC}\" else=\"IGNORE=\">\n      <isset property=\"USE_MSVC\"/>\n    </condition>\n    <condition property=\"make.CC\" value=\"CC=${CC}\" else=\"IGNORE=\">\n      <isset property=\"CC\"/>\n    </condition>\n    <condition property=\"make.ARCH\" value=\"ARCH=${ARCH}\" else=\"IGNORE=\">\n      <isset property=\"ARCH\"/>\n    </condition>\n    <condition property=\"make.SDKROOT\" value=\"SDKROOT=${SDKROOT}\">\n      <isset property=\"SDKROOT\"/>\n    </condition>\n    <!-- If not manually provided, detect the SDKROOT in various locations:\n         - Modern build environments (\"MacOSX.sdk\", no version):\n           /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk\n\n         - macOS 10.8 and older:\n           /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX(version).sdk\n\n         - Prior versions:\n           /Developer/SDKs/MacOSX(version).sdk\n    -->\n    <condition property=\"make.SDKROOT\" value=\"SDKROOT=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk\">\n      <and>\n        <matches string=\"${os.prefix}\" pattern=\"^darwin-\"/>\n        <available file=\"/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk\"/>\n      </and>\n    </condition>\n    <condition property=\"sdk-parent\" value=\"/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs\">\n      <and>\n        <matches string=\"${os.prefix}\" pattern=\"^darwin-\"/>\n        <available file=\"/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs\"/>\n      </and>\n    </condition>\n    <condition property=\"sdk-parent\" value=\"/Developer/SDKs\">\n      <and>\n        <matches string=\"${os.prefix}\" pattern=\"^darwin-\"/>\n        <available file=\"/Developer/SDKs\"/>\n      </and>\n    </condition>\n    <!-- Multiple SDKs is common; find the most recent (sort -V requires 10.12+) -->\n    <exec executable=\"sh\" dir=\"${sdk-parent}\" outputproperty=\"sdk-latest\" if:set=\"darwin.build\" unless:set=\"make.SDKROOT\">\n      <arg value=\"-c\"/>\n      <arg line=\"&quot;ls -d MacOSX10.*.sdk | sort -t &quot;.&quot; -k2 -n | tail -1&quot;\"/>\n    </exec>\n    <condition property=\"make.SDKROOT\" value=\"SDKROOT=${sdk-parent}/${sdk-latest}\" else=\"IGNORE=\">\n      <isset property=\"sdk-latest\"/>\n    </condition>\n\n    <!-- Windows' drive letters and spaces in absolute paths wreak havoc on\n         make -->\n    <condition property=\"make.BUILD\" value=\"BUILD=../${build}/${native.subdir}\" else=\"BUILD=${build.native}\">\n      <equals arg1=\"${build.os.family}\" arg2=\"windows\"/>\n    </condition>\n    <condition property=\"make.PATH\" value=\"PATH=/opt/csw/bin:/usr/sfw/bin:/usr/bin:/usr/ccs/bin\" else=\"IGNORE=\">\n      <equals arg1=\"${build.os.name}\" arg2=\"SunOS\"/>\n    </condition>\n    <condition property=\"make\" value=\"/usr/sfw/bin/gmake\">\n      <and>\n        <equals arg1=\"${build.os.name}\" arg2=\"SunOS\"/>\n        <available file=\"/usr/sfw/bin/gmake\"/>\n      </and>\n    </condition>\n    <condition property=\"make\" value=\"gmake\">\n      <or>\n        <equals arg1=\"${build.os.name}\" arg2=\"DragonFlyBSD\"/>\n        <equals arg1=\"${build.os.name}\" arg2=\"FreeBSD\"/>\n        <equals arg1=\"${build.os.name}\" arg2=\"OpenBSD\"/>\n        <equals arg1=\"${build.os.name}\" arg2=\"NetBSD\"/>\n        <equals arg1=\"${build.os.name}\" arg2=\"SunOS\"/>\n        <equals arg1=\"${build.os.name}\" arg2=\"AIX\"/>\n      </or>\n    </condition>\n    <!-- Allow explicit override of make variables -->\n    <condition property=\"make.OPTS\" value=\"${EXTRA_MAKE_OPTS}\" else=\"IGNORE=\">\n      <isset property=\"EXTRA_MAKE_OPTS\"/>\n    </condition>\n    <!-- Native resource path within jna.jar -->\n    <property name=\"native.path\" value=\"com/sun/jna/${resource.prefix}\"/>\n\n    <!-- Default make program -->\n    <property name=\"make\" value=\"make\"/>\n  </target>\n\n  <target name=\"native-build-package\" depends=\"javah,-native-api-check,-prepare-native\">\n    <echo file=\"${build}/build.sh\">#!/bin/sh\ncwd=$(pwd)\nif [ -z \"$JAVA_HOME\" ]; then\n    echo \"Please make sure JAVA_HOME is set\"\n    exit 1\nfi\ncd native\n${make}\\\n JAVA_HOME=$JAVA_HOME\\\n JAVAH=$cwd/headers\\\n DEBUG=${debug.native}\\\n CFLAGS_EXTRA=${cflags_extra.native}\\\n DYNAMIC_LIBFFI=${dynlink.native}\\\n ${make.CC}\\\n ${make.USE_MSVC}\\\n BUILD=../build\\\n ${make.SDKROOT}\\\n ${make.ARCH}\\\n ${make.PATH}\\\n ${make.OS}\\\n ${make.OPTS}\\\n JNA_JNI_VERSION=${jni.version}\\\n CHECKSUM=${jni.md5}\ncd ..\ncd build\nzip ../${os.prefix}.jar libjnidispatch.so jnidispatch.dll libjnidispatch.a\ncd ..\n    </echo>\n    <jar jarfile=\"${build}/${os.prefix}.jar\" createUnicodeExtraFields=\"never\" encoding=\"UTF-8\">\n      <manifest>\n        <attribute name=\"Implementation-Version\" value=\"${jni.version} b${jni.build}\"/>\n        <attribute name=\"Specification-Version\" value=\"${jni.version}\"/>\n      </manifest>\n    </jar>\n    <zip destfile=\"${build}/build-package-${os.prefix}-${jni.version}.zip\">\n        <zipfileset dir=\"native\" \n                    prefix=\"build-package-${os.prefix}-${jni.version}/native\"\n            >\n            <!-- Exclude generated files from the ZIP -->\n            <exclude name=\"libffi/autom4te.cache/**\" />\n            <exclude name=\"libffi/Makefile.in\" />\n            <exclude name=\"libffi/aclocal.m4\" />\n            <exclude name=\"libffi/compile\" />\n            <exclude name=\"libffi/config.guess\" />\n            <exclude name=\"libffi/config.sub\" />\n            <exclude name=\"libffi/configure\" />\n            <exclude name=\"libffi/depcomp\" />\n            <exclude name=\"libffi/fficonfig.h.in\" />\n            <exclude name=\"libffi/install-sh\" />\n            <exclude name=\"libffi/ltmain.sh\" />\n            <exclude name=\"libffi/mdate-sh\" />\n            <exclude name=\"libffi/missing\" />\n        </zipfileset>\n        <zipfileset dir=\"${build}\" includes=\"${os.prefix}.jar\" prefix=\"build-package-${os.prefix}-${jni.version}\"/>\n        <zipfileset dir=\"${build}\" includes=\"build.sh\" prefix=\"build-package-${os.prefix}-${jni.version}\"/>\n        <zipfileset dir=\"build/headers\" prefix=\"build-package-${os.prefix}-${jni.version}/headers\" />\n    </zip>\n  </target>\n\n  <target name=\"native\" depends=\"-enable-native,javah,-native-api-check,-prepare-native\" unless=\"-native\"\n          description=\"Build native libraries.  Use 'ant -DCC=xxx' to build using a compiler other than gcc\">\n    <exec executable=\"${make}\" dir=\"${native}\" failonerror=\"true\">\n      <arg value=\"JAVA_HOME=${jdk.home}\"/>\n      <arg value=\"JAVAH=${build.headers}\"/>\n      <arg value=\"DEBUG=${debug.native}\"/>\n      <arg value=\"CFLAGS_EXTRA=${cflags_extra.native}\"/>\n      <arg value=\"DYNAMIC_LIBFFI=${dynlink.native}\"/>\n      <arg value=\"${make.CC}\"/>\n      <arg value=\"${make.USE_MSVC}\"/>\n      <arg value=\"${make.BUILD}\"/>\n      <arg value=\"${make.SDKROOT}\"/>\n      <arg value=\"${make.ARCH}\"/>\n      <arg value=\"${make.PATH}\"/>\n      <arg value=\"${make.OS}\"/>\n      <arg line=\"${make.OPTS}\"/>\n      <arg value=\"JNA_JNI_VERSION=${jni.version}\"/>\n      <arg value=\"CHECKSUM=${jni.md5}\"/>\n    </exec>\n    <mkdir dir=\"${classes}/${native.path}\"/>\n    <copy todir=\"${classes}/${native.path}\">\n      <fileset dir=\"${build.native}\"\n               includes=\"jnidispatch.dll,libjnidispatch.*\"/>\n    </copy>\n    <mkdir dir=\"${eclipse.classes}/${native.path}\"/>\n    <copy todir=\"${eclipse.classes}/${native.path}\"\n          failonerror=\"false\">\n      <fileset dir=\"${build.native}\"\n               includes=\"jnidispatch.dll,libjnidispatch.*\"/>\n    </copy>\n    <!-- For web start, native libraries may be provided in the root of -->\n    <!-- an included jar file -->\n    <jar jarfile=\"${build}/${native.jar}\" createUnicodeExtraFields=\"never\" encoding=\"UTF-8\">\n      <fileset dir=\"${build.native}\" includes=\"jnidispatch.dll,libjnidispatch.*\"/>\n      <manifest>\n        <attribute name=\"Implementation-Version\" value=\"${jni.version} b${jni.build}\"/>\n        <attribute name=\"Specification-Version\" value=\"${jni.version}\"/>\n      </manifest>\n    </jar>\n    <copy todir=\"${lib.native}\">\n      <fileset dir=\"${build}\" includes=\"${native.jar}\"/>\n    </copy>\n  </target>\n\n  <target name=\"compile-some-tests\" depends=\"compile,jar\"\n          description=\"Compile test code which does not have additional native\n                       dependencies\">\n    <javac classpathref=\"compile-test.path\"\n           release=\"${javac.release}\"\n           includeantruntime=\"false\"\n           includes=\"**/StructureFieldOrderInspector.java\"\n           destdir=\"${test.classes}\"\n           deprecation=\"on\" \n           debug=\"${debug}\"\n           encoding=\"UTF-8\"\n    >\n      <src path=\"${test.src}\"/>\n    </javac>\n  </target>\n\n  <target name=\"compile-tests\" depends=\"compile,native,jar\"\n  \tdescription=\"Compile all test code\">\n    <javac classpathref=\"compile-test.path\"\n           release=\"${javac.release}\"\n           destdir=\"${test.classes}\"\n           includeantruntime=\"false\"\n           excludes=\"${tests.exclude-patterns}\"\n           deprecation=\"on\" \n           debug=\"${debug}\"\n           encoding=\"UTF-8\"\n    >\n      <src path=\"${test.src}\"/>\n      <exclude name=\"${tests.exclude}\"/>\n    </javac>\n    <!-- Embed testlib-jar at root and at default resource path -->\n    <mkdir dir=\"${test.classes}/${resource.prefix}\"/>\n    <copy todir=\"${test.classes}\">\n      <fileset dir=\"${build.native}\">\n        <include name=\"*testlib-jar*\"/>\n      </fileset>\n    </copy>\n    <copy todir=\"${test.classes}/${resource.prefix}\">\n      <fileset dir=\"${build.native}\">\n        <include name=\"*testlib-jar*\"/>\n      </fileset>\n    </copy>\n    <copy todir=\"${test.classes}\">\n        <fileset dir=\"${test.src}\">\n            <include name=\"**/data/**\" />\n        </fileset>\n    </copy>\n    <!-- Create a jar for easy movement of tests, and jar load test -->\n    <jar jarfile=\"${build}/${testjar}\" createUnicodeExtraFields=\"never\" encoding=\"UTF-8\">\n      <fileset dir=\"${test.classes}\">\n        <patternset refid=\"jar-compiled\"/>\n        <include name=\"**/*testlib-jar*\"/>\n        <include name=\"**/data/**\" />\n      </fileset>\n      <manifest>\n        <attribute name=\"permissions\" value=\"all-permissions\"/>\n      </manifest>\n    </jar>\n\n    <!--\n        Create test case for darwin - darwin supports two paths: darwin-$arch\n        and darwin.\n\n        - The jna-test2.jar is the artifact, that contains the native library\n          in darwin-$arch\n        - The jna-test3.jar is the artifact, that contains the native library\n          in darwin\n    -->\n\n    <delete>\n        <fileset dir=\"${test.classes}\">\n            <include name=\"*testlib-jar*\"/>\n        </fileset>\n    </delete>\n\n    <jar jarfile=\"${build}/${testjar2}\" createUnicodeExtraFields=\"never\" encoding=\"UTF-8\">\n      <fileset dir=\"${test.classes}\">\n        <include name=\"**/*testlib-jar*\"/>\n      </fileset>\n    </jar>\n\n    <condition property=\"resource.secondary-prefix\" value=\"darwin\">\n        <matches pattern=\"^darwin.*\" string=\"${resource.prefix}\"/>\n    </condition>\n    <property name=\"resource.secondary-prefix\" value=\"${resource.prefix}\" />\n\n    <move file=\"${test.classes}/${resource.prefix}\" tofile=\"${test.classes}/${resource.secondary-prefix}\" />\n\n    <jar jarfile=\"${build}/${testjar3}\" createUnicodeExtraFields=\"never\" encoding=\"UTF-8\">\n      <fileset dir=\"${test.classes}\">\n        <include name=\"**/*testlib-jar*\"/>\n      </fileset>\n    </jar>\n\n    <!-- Ensure jar-based library is unavailable on FS-based class path -->\n    <delete>\n      <fileset dir=\"${build}\">\n        <include name=\"**/*testlib-jar*\"/>\n      </fileset>\n    </delete>\n    <mkdir dir=\"${build}/jws\"/>\n    <copy todir=\"${build}/jws\" file=\"${build}/${jar}\"/>\n    <copy todir=\"${build}/jws\" file=\"${build}/${testjar}\"/>\n    <copy todir=\"${build}/jws\" file=\"lib/junit.jar\"/>\n    <copy todir=\"${build}/jws\" file=\"lib/clover.jar\"/>\n    <jar jarfile=\"${build}/jws/jnidispatch.jar\" createUnicodeExtraFields=\"never\" encoding=\"UTF-8\">\n      <fileset dir=\"${build.native}\" includes=\"*jnidispatch.*\"/>\n    </jar>\n    <!-- To allow JNLP tests to run, import the JNA testing certificate as a CA -->\n    <!-- keytool -exportcert -file jna.csr -keystore jna.keystore -alias jna -->\n    <!-- javaws -viewer (security tab, import CSR as CA-->\n    <!--\n    <signjar alias=\"jna\" keystore=\"jna.keystore\" storepass=\"jnadev\" lazy=\"true\">\n      <fileset dir=\"${build}/jws\" includes=\"${jar},${testjar},junit.jar,jnidispatch.jar,clover.jar\"/>\n    </signjar>\n    -->\n  </target>\n\n  <target name=\"android-test-setup\" depends=\"compile-tests\"\n          description=\"Configure tests for running on an Android emulator\">\n    <!-- 'shared' should be the path to a folder mounted as the mobile\n         device/simulator storage card. -->\n    <property name=\"shared\" value=\"shared\"/>\n  </target>\n\n  <target name=\"wince-test-setup\" depends=\"compile-tests\"\n          description=\"Configure tests for running on the WM emulator\">\n    <!-- 'shared' should be the path to a folder mounted as the mobile\n         device/simulator storage card. -->\n    <property name=\"shared\" value=\"shared\"/>\n    <!-- w32ce arm testing -->\n    <jar jarfile=\"${shared}/test.jar\" createUnicodeExtraFields=\"never\" encoding=\"UTF-8\">\n      <zipfileset src=\"${build}/${jar}\"/>\n      <zipfileset src=\"${build}/${testjar}\"/>\n    </jar>\n    <copy todir=\"${shared}\" file=\"${build}/${jar}\"/>\n    <copy todir=\"${shared}\" file=\"${build.native}/jnidispatch.dll\"/>\n    <copy todir=\"${shared}\" file=\"${build.native}/testlib.dll\"/>\n    <copy todir=\"${shared}\" file=\"${build.native}/testlib2.dll\"/>\n    <copy todir=\"${shared}\" file=\"${build.native}/test-path.dll\"/>\n    <copy todir=\"${shared}\" file=\"${build.native}/testlib-truncated\"/>\n    <copy todir=\"${shared}\" file=\"w32ce-test.lnk\"/>\n    <chmod file=\"${shared}/*.dll\" perm=\"+x\"/>\n  </target>\n\n  <target name=\"-enable-native\" unless=\"-native\">\n    <property name=\"build-native\" value=\"true\"/>\n  </target>\n\n  <!-- When running tests from an IDE, be sure to set jna.library.path -->\n  <!-- to where the test library (testlib) is found.                   -->\n  <target name=\"test\" depends=\"-enable-native,jar,compile-tests\" unless=\"cross-compile\"\n          description=\"Run all unit tests\">\n\n    <property name=\"test.fork\" value=\"yes\"/>\n    <property name=\"test.forkmode\" value=\"perTest\"/>\n\n    <condition property=\"test.jdwp\" value=\"-Xrunjdwp:transport=dt_socket,address=${test.debugport},server=y,suspend=y\">\n        <isset property=\"test.debugport\" />\n    </condition>\n\n    <property name=\"reports.junit\" location=\"${reports}/junit/${os.prefix}\"/>\n    <property name=\"results.junit\" location=\"${build}/junit-results/${os.prefix}\"/>\n    <mkdir dir=\"${results.junit}\"/>\n    <echo>Saving test results in ${results.junit}</echo>\n    <property name=\"tests.stdcall\" value=\"**/win32/*StdCallTest.java\"/>\n    <condition property=\"tests.platform\" value=\"**/win32/**/*Test.java\">\n      <os family=\"windows\"/>\n    </condition>\n    <condition property=\"tests.exclude\" value=\"${tests.stdcall}\">\n      <and><os family=\"windows\"/><not><os arch=\"x86\"/></not></and>\n    </condition>\n    <condition property=\"tests.platform\" value=\"**/mac/**/*Test.java\">\n      <os family=\"mac\"/>\n    </condition>\n    <condition property=\"tests.platform\" value=\"**/unix/**/*Test.java\">\n      <and>\n        <os family=\"unix\"/>\n        <not><os family=\"mac\"/></not>\n      </and>\n    </condition>\n    <property name=\"tests.platform\" value=\"\"/>\n    <property name=\"tests.include\" value=\"com/sun/jna/*Test.java com/sun/jna/different_package/*Test.java\"/>\n    <property name=\"tests.exclude\" value=\"\"/>\n    <property name=\"tests.exclude-patterns\" value=\"\"/>\n    <condition property=\"java.awt.headless\" value=\"true\">\n      <isset property=\"headless\"/>\n    </condition>\n    <propertyset id=\"headless\">\n      <propertyref prefix=\"java.awt.headless\"/>\n    </propertyset>\n    <junit fork=\"${test.fork}\" forkmode=\"${test.forkmode}\" failureproperty=\"testfailure\" tempdir=\"${build}\">\n      <jvmarg if:set=\"test.jdwp\" value=\"${test.jdwp}\" />\n      <!-- optionally run headless -->\n      <syspropertyset refid=\"headless\"/>\n      <!-- avoid VM conflicts with JNA protected mode -->\n      <env key=\"${ld.preload.name}\" file=\"${libjsig}\"/>\n      <env key=\"LC_MESSAGES\" value=\"C\" />\n      <sysproperty key=\"jna.library.path\" file=\"${build.native}\"/>\n      <!-- Ignore any system install of JNA -->\n      <sysproperty key=\"jna.nosys\" value=\"true\"/>\n      <sysproperty key=\"jna.builddir\" file=\"${build}\"/>\n      <sysproperty key=\"jna.nativedir\" file=\"${build.native}\"/>\n      <classpath><path refid=\"test.runpath\"/></classpath>\n      <formatter type=\"brief\" usefile=\"false\"/>\n      <formatter type=\"xml\"/>\n      <batchtest todir=\"${results.junit}\">\n        <fileset dir=\"${test.src}\" excludes=\"${tests.exclude-patterns}\">\n          <patternset includes=\"${tests.include}\"/>\n          <include name=\"${tests.platform}\"/>\n          <exclude name=\"${tests.exclude}\"/>\n        </fileset>\n      </batchtest>\n    </junit>\n    <junitreport todir=\"${results.junit}\">\n      <fileset dir=\"${results.junit}\">\n        <include name=\"TEST-*.xml\"/>\n      </fileset>\n      <report todir=\"${reports.junit}\"/>\n    </junitreport>\n    <echo>View test report in file://${reports.junit}/index.html</echo>\n    <fail if=\"testfailure\" unless=\"clover\">One or more tests failed</fail>\n  </target>\n\n  <target name=\"test-platform\" depends=\"compile-some-tests,platform-jar\"\n          description=\"Run platform-specific tests\">\n    <subant target=\"test\" failonerror=\"true\">\n      <property name=\"javac.release\" value=\"${javac.release}\"/>\n      <fileset dir=\"${contrib}\" includes=\"platform/build.xml\"/>\n    </subant>\n  </target>\n\n  <target name=\"with.clover\" description=\"Enable code coverage for tests\">\n    <taskdef resource=\"cloverlib.xml\" classpath=\"lib/clover.jar\"/>\n    <property name=\"clover\" value=\"true\"/>\n    <property name=\"build\" value=\"build.clover\"/>\n    <clover-setup/>\n  </target>\n\n  <target name=\"clover\" depends=\"with.clover,test\"\n          description=\"Generate test code coverage reports\">\n    <property name=\"reports.clover\" value=\"${reports}/clover\"/>\n    <mkdir dir=\"${reports.clover}\"/>\n    <clover-report>\n      <current outfile=\"${reports.clover}\" title=\"clover\">\n        <fileset dir=\".\" includes=\"**/*.java\" />\n        <testresults dir=\"${results.junit}\" includes=\"TEST-*.xml\"/>\n        <format type=\"html\"/>\n      </current>\n    </clover-report>\n    <echo>Reports generated in ${reports.clover}</echo>\n  </target>\n\n  <target name=\"javadoc\" depends=\"-setup\">\n    <path id=\"javadoc.src.path\">\n      <path refid=\"src.path\"/>\n      <pathelement location=\"${platform.src}\"/>\n    </path>\n    <path id=\"javadoc.compile.path\">\n      <path refid=\"compile.path\"/>\n      <pathelement location=\"${classes}\"/>\n    </path>\n    <property name=\"header\" value=\"JNA API - ${jna.version}\"/>\n    <property name=\"footer\" value=\"${copyright}\"/>\n\n    <mkdir dir=\"${javadoc}\"/>\n    <condition property=\"javadoc.opts\" value=\"-Xdoclint:none\" else=\"\">\n      <not><matches pattern=\"^1.[0-7]$\" string=\"${ant.java.version}\"/></not>\n    </condition>\n    <javadoc package=\"true\"\n             windowtitle=\"JNA API\"\n             encoding=\"UTF-8\"\n             sourcepathref=\"javadoc.src.path\"\n             classpathref=\"javadoc.compile.path\"\n             maxmemory=\"256m\"\n             packagenames=\"com.sun.jna,com.sun.jna.ptr,com.sun.jna.types,com.sun.jna.platform,com.sun.jna.platform.win32\"\n             overview=\"${src}/com/sun/jna/overview.html\"\n             additionalparam=\"${javadoc.opts}\"\n             destdir=\"${javadoc}\">\n      <!-- stylesheetfile=\"${stylesheet}\" -->\n      <doctitle>JNA API Documentation</doctitle>\n      <header>${header}</header>\n      <bottom>${footer}</bottom>\n\n      <packageset dir=\"${src}\" defaultexcludes=\"yes\">\n        <patternset>\n          <include name=\"com/sun/jna/**/*\"/>\n        </patternset>\n      </packageset>\n      <packageset dir=\"${platform.src}\" defaultexcludes=\"yes\">\n        <patternset>\n          <include name=\"com/sun/jna/platform/**/*\"/>\n        </patternset>\n      </packageset>\n\n      <group title=\"Java Native Access\" packages=\"com.sun.jna,com.sun.jna.ptr,com.sun.jna.types,com.sun.jna.win32\"/>\n      <group title=\"Platform Utilities\" packages=\"com.sun.jna.platform,com.sun.jna.platform.dnd\"/>\n      <group title=\"Platform Specific\" packages=\"com.sun.jna.platform.*\"/>\n\n      <arg value=\"-notimestamp\"/>\n    </javadoc>\n    <!--\n    Create an empty resources/fonts/dejavu.css - the file is reference by default\n    javadoc output, yet not provided by it. People seem to be irritated by the\n    generated 404, so provide an empty file.\n    -->\n    <mkdir dir=\"${javadoc}/resources/fonts/\" />\n    <echo file=\"${javadoc}/resources/fonts/dejavu.css\">/* Intentionally left empty */</echo>\n    <jar jarfile=\"${platform-javadoc-jar}\" createUnicodeExtraFields=\"never\" encoding=\"UTF-8\">\n      <fileset dir=\"${javadoc}\" />\n    </jar>\n  </target>\n\n  <target name=\"dist\" depends=\"jar,aar,javadoc,contrib-jars,compile-tests,native\"\n          description=\"Build distribution files\">\n    <copy todir=\"${dist}\" force=\"true\" overwrite=\"true\">\n      <fileset dir=\"${build}\" includes=\"${jar},${minjar},${aar},${jar-jpms}\"/>\n      <fileset dir=\"${contrib}/platform/dist\" includes=\"jna-platform.jar,jna-platform-jpms.jar\"/>\n      <fileset dir=\"${lib.native}\">\n        <include name=\"*.jar\"/>\n        <exclude name=\"out-of-date.jar\"/>\n      </fileset>\n    </copy>\n    <copy todir=\"${dist}/jnacontrib\" flatten=\"true\">\n      <fileset dir=\"${contrib}\">\n\t<include name=\"**/build/demo-*.jar\" />\n      </fileset>\n    </copy>\n    <jar jarfile=\"${maven-javadoc-jar}\" createUnicodeExtraFields=\"never\" encoding=\"UTF-8\">\n        <fileset dir=\"${javadoc}\" />\n    </jar>\n\n    <zip zipfile=\"${dist}/doc.zip\">\n      <zipfileset dir=\"${javadoc}\" prefix=\"javadoc\"/>\n    </zip>\n    <!-- Javadoc -->\n    <!-- JNA sources only, for use in Linux build from source/shared libffi -->\n    <zip zipfile=\"${dist}/src.zip\">\n      <zipfileset dir=\".\" includes=\"build.xml,${pom},LICENSE,LGPL2.1,AL2.0\"/>\n      <zipfileset dir=\"${src}\" includes=\"**/*.java\" prefix=\"src\"/>\n      <zipfileset dir=\"${test.src}\" includes=\"**/*.java\" prefix=\"test\"/>\n      <zipfileset dir=\"${native}\" excludes=\"libffi,libffi/**/*,build,build/**/*\" prefix=\"native\"/>\n      <zipfileset dir=\"${contrib}/platform\" includes=\"**/*.java\" prefix=\"contrib/platform\"/>\n    </zip>\n    <!-- Full sources required to build and test everything -->\n    <zip zipfile=\"${dist}/src-full.zip\">\n      <zipfileset src=\"${dist}/src.zip\"/>\n      <zipfileset dir=\"lib\" includes=\"junit.jar,clover.jar\" prefix=\"lib\"/>\n      <zipfileset dir=\".\" includes=\".classpath,.project\"/>\n      <zipfileset dir=\"${native}\" includes=\"libffi,libffi/**/*\" prefix=\"native\"/>\n    </zip>\n    <!-- Sources package as required by maven -->\n    <zip zipfile=\"${maven-sources-jar}\">\n      <zipfileset dir=\"${src}\" />\n    </zip>\n  </target>\n\n  <target name=\"clean\" depends=\"-dynamic-properties\">\n    <delete failOnError=\"false\" includeEmptyDirs=\"true\">\n      <fileset dir=\"${build}\"/>\n    </delete>\n    <delete quiet=\"true\" includeEmptyDirs=\"true\">\n      <fileset dir=\".clover\"/>\n      <fileset dir=\"build.clover\" />\n      <fileset dir=\"${javadoc}\"/>\n      <fileset dir=\".\" includes=\"*~,**/*~,build.number,native/libffi/configure\"/>\n    </delete>\n    <subant target=\"clean\" failonerror=\"true\">\n      <fileset dir=\"${contrib}\" includes=\"*/build.xml\"/>\n    </subant>\n  </target>\n\n  <target name=\"install\" depends=\"dist\" description=\"Install jna and jna-platform artifacts into local maven repository\">\n    <exec executable=\"mvn\" searchpath=\"true\" failonerror=\"true\" failifexecutionfails=\"true\" logError=\"true\">\n      <arg value=\"org.apache.maven.plugins:maven-install-plugin:2.5:install-file\"/>\n      <arg value=\"-DpomFile=${pom}\"/>\n      <arg value=\"-Dfile=${dist-jar}\"/>\n      <arg value=\"-Dsources=${maven-sources-jar}\"/>\n      <arg value=\"-Djavadoc=${maven-javadoc-jar}\"/>\n    </exec>\n\n    <exec executable=\"mvn\" searchpath=\"true\" failonerror=\"true\" failifexecutionfails=\"true\" logError=\"true\">\n      <arg value=\"org.apache.maven.plugins:maven-install-plugin:2.5:install-file\"/>\n      <arg value=\"-DpomFile=${pom}\"/>\n      <arg value=\"-Dfile=${dist-aar}\"/>\n      <arg value=\"-Dpackaging=aar\"/>\n    </exec>\n\n    <exec executable=\"mvn\" searchpath=\"true\" failonerror=\"true\" failifexecutionfails=\"true\" logError=\"true\">\n      <arg value=\"org.apache.maven.plugins:maven-install-plugin:2.5:install-file\"/>\n      <arg value=\"-DpomFile=${pom-jpms}\"/>\n      <arg value=\"-Dfile=${dist-jar-jpms}\"/>\n      <arg value=\"-Dsources=${maven-sources-jar}\"/>\n      <arg value=\"-Djavadoc=${maven-javadoc-jar}\"/>\n    </exec>\n\n    <exec executable=\"mvn\" searchpath=\"true\" failonerror=\"true\" failifexecutionfails=\"true\" logError=\"true\">\n      <arg value=\"org.apache.maven.plugins:maven-install-plugin:2.5:install-file\"/>\n      <arg value=\"-DpomFile=${pom-platform}\"/>\n      <arg value=\"-Dfile=${platform-jar}\"/>\n      <arg value=\"-Dsources=${platform-sources-jar}\"/>\n      <arg value=\"-Djavadoc=${platform-javadoc-jar}\"/>\n    </exec>\n\n    <exec executable=\"mvn\" searchpath=\"true\" failonerror=\"true\" failifexecutionfails=\"true\" logError=\"true\">\n      <arg value=\"org.apache.maven.plugins:maven-install-plugin:2.5:install-file\"/>\n      <arg value=\"-DpomFile=${pom-platform-jpms}\"/>\n      <arg value=\"-Dfile=${platform-jpms-jar}\"/>\n      <arg value=\"-Dsources=${platform-sources-jar}\"/>\n      <arg value=\"-Djavadoc=${platform-javadoc-jar}\"/>\n    </exec>\n  </target>\n\n  <!-- NOTE: The 'deploy' target works only if the version (jna.version in build.xml) ends in '-SNAPSHOT'. -->\n  <target name=\"deploy\" depends=\"dist\" description=\"deploy snapshot version to Maven snapshot repository\">\n    <exec executable=\"mvn\" searchpath=\"true\" failonerror=\"true\" failifexecutionfails=\"true\" logError=\"true\">\n      <arg value=\"org.apache.maven.plugins:maven-deploy-plugin:2.7:deploy-file\"/>\n      <arg value=\"-Durl=${maven-snapshots-repository-url}\"/>\n      <arg value=\"-DrepositoryId=${maven-snapshots-repository-id}\"/>\n      <arg value=\"-DpomFile=${pom}\"/>\n      <arg value=\"-Dfile=${dist-jar}\"/>\n      <arg value=\"-Dfiles=${maven-sources-jar},${maven-javadoc-jar},${dist-aar}\"/>\n      <arg value=\"-Dtypes=jar,jar,aar\"/>\n      <arg value=\"-Dclassifiers=sources,javadoc,\"/>\n    </exec>\n\n    <exec executable=\"mvn\" searchpath=\"true\" failonerror=\"true\" failifexecutionfails=\"true\" logError=\"true\">\n      <arg value=\"org.apache.maven.plugins:maven-deploy-plugin:2.7:deploy-file\"/>\n      <arg value=\"-Durl=${maven-snapshots-repository-url}\"/>\n      <arg value=\"-DrepositoryId=${maven-snapshots-repository-id}\"/>\n      <arg value=\"-DpomFile=${pom-platform}\"/>\n      <arg value=\"-Dfile=${platform-jar}\"/>\n      <arg value=\"-Dfiles=${platform-sources-jar},${platform-javadoc-jar}\"/>\n      <arg value=\"-Dtypes=jar,jar\"/>\n      <arg value=\"-Dclassifiers=sources,javadoc\"/>\n    </exec>\n\n    <exec executable=\"mvn\" searchpath=\"true\" failonerror=\"true\" failifexecutionfails=\"true\" logError=\"true\">\n      <arg value=\"org.apache.maven.plugins:maven-deploy-plugin:2.7:deploy-file\"/>\n      <arg value=\"-Durl=${maven-snapshots-repository-url}\"/>\n      <arg value=\"-DrepositoryId=${maven-snapshots-repository-id}\"/>\n      <arg value=\"-DpomFile=${pom-jpms}\"/>\n      <arg value=\"-Dfile=${dist-jar-jpms}\"/>\n      <arg value=\"-Dfiles=${maven-sources-jar},${maven-javadoc-jar}\"/>\n      <arg value=\"-Dtypes=jar,jar\"/>\n      <arg value=\"-Dclassifiers=sources,javadoc\"/>\n    </exec>\n\n    <exec executable=\"mvn\" searchpath=\"true\" failonerror=\"true\" failifexecutionfails=\"true\" logError=\"true\">\n      <arg value=\"org.apache.maven.plugins:maven-deploy-plugin:2.7:deploy-file\"/>\n      <arg value=\"-Durl=${maven-snapshots-repository-url}\"/>\n      <arg value=\"-DrepositoryId=${maven-snapshots-repository-id}\"/>\n      <arg value=\"-DpomFile=${pom-platform-jpms}\"/>\n      <arg value=\"-Dfile=${platform-jpms-jar}\"/>\n      <arg value=\"-Dfiles=${platform-sources-jar},${platform-javadoc-jar}\"/>\n      <arg value=\"-Dtypes=jar,jar\"/>\n      <arg value=\"-Dclassifiers=sources,javadoc\"/>\n    </exec>\n  </target>\n\n\n  <property name=\"version-maven-gpg-plugin\" value=\"1.4\"/>\n\n  <target name=\"stage\" depends=\"dist\" description=\"deploy release version to Maven staging repository\">\n    <!-- sign and deploy the jna,  artifact -->\n    <exec executable=\"mvn\" searchpath=\"true\" failonerror=\"true\" failifexecutionfails=\"true\" logError=\"true\">\n      <arg value=\"org.apache.maven.plugins:maven-gpg-plugin:${version-maven-gpg-plugin}:sign-and-deploy-file\"/>\n      <arg value=\"-Durl=${maven-staging-repository-url}\"/>\n      <arg value=\"-DrepositoryId=${maven-staging-repository-id}\"/>\n      <arg value=\"-DpomFile=${pom}\"/>\n      <arg value=\"-Dfile=${dist-jar}\"/>\n      <arg value=\"-Dfiles=${maven-sources-jar},${maven-javadoc-jar},${dist-aar}\"/>\n      <arg value=\"-Dclassifiers=sources,javadoc,\"/>\n      <arg value=\"-Dtypes=jar,jar,aar\"/>\n      <arg value=\"-Dgpg.useagent=true\"/>\n    </exec>\n\n    <!-- sign and deploy the platform artifact -->\n    <exec executable=\"mvn\" searchpath=\"true\" failonerror=\"true\" failifexecutionfails=\"true\" logError=\"true\">\n      <arg value=\"org.apache.maven.plugins:maven-gpg-plugin:${version-maven-gpg-plugin}:sign-and-deploy-file\"/>\n      <arg value=\"-Durl=${maven-staging-repository-url}\"/>\n      <arg value=\"-DrepositoryId=${maven-staging-repository-id}\"/>\n      <arg value=\"-DpomFile=${pom-platform}\"/>\n      <arg value=\"-Dfile=${platform-jar}\"/>\n      <arg value=\"-Dfiles=${platform-sources-jar},${platform-javadoc-jar}\"/>\n      <arg value=\"-Dclassifiers=sources,javadoc\"/>\n      <arg value=\"-Dtypes=jar,jar\"/>\n      <arg value=\"-Dgpg.useagent=true\"/>\n    </exec>\n\n    <!-- sign and deploy the jna,  artifact -->\n    <exec executable=\"mvn\" searchpath=\"true\" failonerror=\"true\" failifexecutionfails=\"true\" logError=\"true\">\n      <arg value=\"org.apache.maven.plugins:maven-gpg-plugin:${version-maven-gpg-plugin}:sign-and-deploy-file\"/>\n      <arg value=\"-Durl=${maven-staging-repository-url}\"/>\n      <arg value=\"-DrepositoryId=${maven-staging-repository-id}\"/>\n      <arg value=\"-DpomFile=${pom-jpms}\"/>\n      <arg value=\"-Dfile=${dist-jar-jpms}\"/>\n      <arg value=\"-Dfiles=${maven-sources-jar},${maven-javadoc-jar}\"/>\n      <arg value=\"-Dtypes=jar,jar\"/>\n      <arg value=\"-Dclassifiers=sources,javadoc\"/>\n      <arg value=\"-Dgpg.useagent=true\"/>\n    </exec>\n\n    <!-- sign and deploy the platform artifact -->\n    <exec executable=\"mvn\" searchpath=\"true\" failonerror=\"true\" failifexecutionfails=\"true\" logError=\"true\">\n      <arg value=\"org.apache.maven.plugins:maven-gpg-plugin:${version-maven-gpg-plugin}:sign-and-deploy-file\"/>\n      <arg value=\"-Durl=${maven-staging-repository-url}\"/>\n      <arg value=\"-DrepositoryId=${maven-staging-repository-id}\"/>\n      <arg value=\"-DpomFile=${pom-platform-jpms}\"/>\n      <arg value=\"-Dfile=${platform-jpms-jar}\"/>\n      <arg value=\"-Dfiles=${platform-sources-jar},${platform-javadoc-jar}\"/>\n      <arg value=\"-Dtypes=jar,jar\"/>\n      <arg value=\"-Dclassifiers=sources,javadoc\"/>\n      <arg value=\"-Dgpg.useagent=true\"/>\n    </exec>\n  </target>\n\n  <target name=\"checkstyle\">\n      <taskdef resource=\"com/puppycrawl/tools/checkstyle/ant/checkstyle-ant-task.properties\"\n               classpath=\"lib/checkstyle-8.17-all.jar\"/>\n      <checkstyle config=\"checkstyle.xml\">\n          <fileset dir=\".\" includes=\"**/*.java\"/>\n      </checkstyle>\n  </target>\n</project>\n"
        },
        {
          "name": "checkstyle.xml",
          "type": "blob",
          "size": 0.97265625,
          "content": "<?xml version=\"1.0\"?>\n<!DOCTYPE module PUBLIC\n          \"-//Checkstyle//DTD Checkstyle Configuration 1.3//EN\"\n          \"https://checkstyle.org/dtds/configuration_1_3.dtd\">\n\n<module name=\"Checker\">\n    <module name=\"SuppressionFilter\">\n        <property name=\"file\" value=\"checkstyle_suppressions.xml\"/>\n    </module>\n    <module name=\"FileTabCharacter\"/>\n    <module name=\"RegexpSingleline\">\n        <property name=\"format\" value=\"\\s+$\"/>\n        <property name=\"message\" value=\"Line has trailing spaces.\"/>\n    </module>\n    <module name=\"RegexpMultiline\">\n        <property name=\"format\" value=\"\\r\"/>\n        <property name=\"message\" value=\"Contains carriage return \\r\"/>\n    </module>\n    <module name=\"TreeWalker\">\n        <module name=\"Indentation\"/>\n    </module>\n    <module name=\"RegexpHeader\">\n        <property name=\"id\" value=\"header-check\" />\n        <property name=\"headerFile\" value=\"checkstyle_header.txt\"/>\n        <property name=\"multiLines\" value=\"2\"/>\n    </module>\n</module>\n"
        },
        {
          "name": "checkstyle_header.txt",
          "type": "blob",
          "size": 0.7744140625,
          "content": "^/\\*( Copyright.*$|$)\n^ \\*( Copyright.*$|$)\n^ \\* The contents of this file is dual-licensed under 2$\n^ \\* alternative Open Source/Free licenses: LGPL 2\\.1 or later and$\n^ \\* Apache License 2\\.0\\.( \\(starting with JNA version 4\\.0\\.0\\)\\.$|$)\n^ \\*$\n^ \\* You can freely decide which license you want to apply to$\n^ \\* the project\\.$\n^ \\*$\n^ \\* You may obtain a copy of the LGPL License at:$\n^ \\*$\n^ \\* http://www\\.gnu\\.org/licenses/licenses\\.html$\n^ \\*$\n^ \\* A copy is also included in the downloadable source code package$\n^ \\* containing JNA, in file \"LGPL2\\.1\"\\.$\n^ \\*$\n^ \\* You may obtain a copy of the Apache License at:$\n^ \\*$\n^ \\* http://www\\.apache\\.org/licenses/$\n^ \\*$\n^ \\* A copy is also included in the downloadable source code package$\n^ \\* containing JNA, in file \"AL2\\.0\"\\.$\n^ \\*/$"
        },
        {
          "name": "checkstyle_suppressions.xml",
          "type": "blob",
          "size": 0.3037109375,
          "content": "<?xml version=\"1.0\"?>\n\n<!DOCTYPE suppressions PUBLIC\n  \"-//Checkstyle//DTD SuppressionFilter Configuration 1.2//EN\"\n  \"https://checkstyle.org/dtds/suppressions_1_2.dtd\">\n\n<suppressions>\n    <suppress files=\"contrib/x11/src/jnacontrib/x11/api/X11KeySymDef.java\"\n              id=\"header-check\" />\n</suppressions>"
        },
        {
          "name": "common.xml",
          "type": "blob",
          "size": 5.2529296875,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project name=\"JNA-Common\" default=\"default\" basedir=\".\">\n    <property name=\"name\" value=\"jna\"/>\n    <property name=\"year\" value=\"2024\"/>\n    <property name=\"copyright\" value=\"Copyright &amp;copy; 2007-${year} Timothy Wall. All Rights Reserved.\"/>\n    <property name=\"vendor\" value=\"JNA Development Team\"/>\n    <buildnumber/>\n\n    <!-- JNA library release version - android versionCode is derived from mjar/minor/revision -->\n    <property name=\"jna.major\" value=\"5\"/>\n    <property name=\"jna.minor\" value=\"17\"/>\n    <property name=\"jna.revision\" value=\"0\"/>\n    <property name=\"jna.build\" value=\"0\"/> <!--${build.number}-->\n    <condition property=\"version.suffix\" value=\"\" else=\"-SNAPSHOT\">\n        <or>\n            <isset property=\"release\"/>\n            <isset property=\"maven-release\"/>\n        </or>\n    </condition>\n    <property name=\"jna.version\" value=\"${jna.major}.${jna.minor}.${jna.revision}${version.suffix}\"/>\n    <property name=\"osgi.version\" value=\"${jna.major}.${jna.minor}.${jna.revision}\"/>\n    <!-- jnidispatch library release version -->\n    <property name=\"jni.major\" value=\"7\"/>\n    <property name=\"jni.minor\" value=\"0\"/>\n    <property name=\"jni.revision\" value=\"3\"/>\n    <property name=\"jni.build\" value=\"0\"/> <!--${build.number}-->\n    <property name=\"jni.version\" value=\"${jni.major}.${jni.minor}.${jni.revision}\"/>\n    <property name=\"jni.md5\" value=\"5fb98531302accd485c534c452dd952a\"/>\n    <property name=\"spec.title\" value=\"Java Native Access (JNA)\"/>\n    <property name=\"spec.vendor\" value=\"${vendor}\"/>\n    <property name=\"spec.version\" value=\"${jna.major}\"/>\n    <property name=\"impl.title\" value=\"com.sun.jna\"/>\n    <property name=\"impl.vendor\" value=\"${spec.vendor}\"/>\n    <property name=\"impl.version\" value=\"${jna.version} (b${jna.build})\"/>\n    <property name=\"javac.release\" value=\"8\" />\n\n    <property name=\"build.os.name\" value=\"${os.name}\"/>\n    <condition property=\"build.os.family\" value=\"windows\">\n        <contains string=\"${build.os.name}\" substring=\"windows\" casesensitive=\"false\"/>\n    </condition>\n    <condition property=\"build.os.family\" value=\"mac\">\n        <or>\n            <contains string=\"${build.os.name}\" substring=\"darwin\" casesensitive=\"false\"/>\n            <contains string=\"${build.os.name}\" substring=\"mac\" casesensitive=\"false\" />\n        </or>\n    </condition>\n    <property name=\"build.os.family\" value=\"other\"/>\n    <property name=\"build.os.arch\" value=\"${os.arch}\" />\n    <property name=\"build.os.endianess\" value=\"${sun.cpu.endian}\" />\n\n    <!-- Add other supported platforms here -->\n    <condition property=\"jre.arch\" value=\"x86\">\n      <matches pattern=\"(i[3456]86|pentium)\" string=\"${build.os.arch}\"/>\n    </condition>\n    <condition property=\"jre.arch\" value=\"x86-64\">\n      <matches pattern=\"(x86_64|amd64|em64t)\" string=\"${build.os.arch}\"/>\n    </condition>\n    <condition property=\"jre.arch\" value=\"ppc\">\n      <matches pattern=\"(powerpc|power)\" string=\"${build.os.arch}\"/>\n    </condition>\n    <condition property=\"jre.arch\" value=\"ppc64le\">\n      <or>\n\t<matches pattern=\"(powerpc64le|power64le|ppc64le)\" string=\"${build.os.arch}\"/>\n\t<and>\n\t  <matches pattern=\"(powerpc64|power64|ppc64)\" string=\"${build.os.arch}\"/>\n\t  <matches pattern=\"little\" string=\"${build.os.endianess}\"/>\n\t</and>\n      </or>\n    </condition>\n    <condition property=\"jre.arch\" value=\"ppc64\">\n      <matches pattern=\"(powerpc64|power64)\" string=\"${build.os.arch}\"/>\n    </condition>\n    <condition property=\"jre.arch\" value=\"armel\">\n      <and>\n        <matches pattern=\"arm\" string=\"${build.os.arch}\"/>\n        <matches pattern=\"true\" string=\"${build.isArmSoftFloat}\"/>\n      </and>\n    </condition>\n\n    <property name=\"jre.arch\" value=\"${build.os.arch}\"/>\n\n    <condition property=\"cross-compile\" value=\"true\">\n      <isset property=\"os.prefix\"/>\n    </condition>\n\n    <condition property=\"os.prefix\" value=\"linux-${jre.arch}\">\n      <equals arg1=\"${build.os.name}\" arg2=\"Linux\"/>\n    </condition>\n    <condition property=\"os.prefix\" value=\"aix-${jre.arch}\">\n      <equals arg1=\"${build.os.name}\" arg2=\"AIX\"/>\n    </condition>\n    <condition property=\"os.prefix\" value=\"win32-${jre.arch}\">\n      <equals arg1=\"${build.os.family}\" arg2=\"windows\"/>\n    </condition>\n    <condition property=\"os.prefix\" value=\"darwin-${jre.arch}\">\n      <equals arg1=\"${build.os.family}\" arg2=\"mac\"/>\n    </condition>\n    <condition property=\"os.prefix\" value=\"sunos-${jre.arch}\">\n      <equals arg1=\"${build.os.name}\" arg2=\"SunOS\"/>\n    </condition>\n    <condition property=\"os.prefix\" value=\"dragonflybsd-${jre.arch}\">\n      <equals arg1=\"${build.os.name}\" arg2=\"DragonFlyBSD\"/>\n    </condition>\n    <condition property=\"os.prefix\" value=\"freebsd-${jre.arch}\">\n      <equals arg1=\"${build.os.name}\" arg2=\"FreeBSD\"/>\n    </condition>\n    <condition property=\"os.prefix\" value=\"openbsd-${jre.arch}\">\n\t<equals arg1=\"${build.os.name}\" arg2=\"OpenBSD\"/>\n    </condition>\n    <condition property=\"os.prefix\" value=\"netbsd-${jre.arch}\">\n      <equals arg1=\"${build.os.name}\" arg2=\"NetBSD\"/>\n    </condition>\n    <condition property=\"os.prefix\" value=\"kfreebsd-${jre.arch}\">\n      <equals arg1=\"${build.os.name}\" arg2=\"GNU/kFreeBSD\"/>\n    </condition>\n    <property name=\"resource.prefix\" value=\"${os.prefix}\" description=\"fallback\"/>\n\n    <property name=\"native.subdir\" value=\"native-${os.prefix}\"/>\n</project>\n"
        },
        {
          "name": "contrib",
          "type": "tree",
          "content": null
        },
        {
          "name": "create-export-package-metadata-pom.xml",
          "type": "blob",
          "size": 1.3251953125,
          "content": "<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0\n  http://maven.apache.org/maven-v4_0_0.xsd\">\n  <modelVersion>4.0.0</modelVersion>\n\n  <groupId>net.java.dev.jna</groupId>\n  <artifactId>create-export-package-metadata</artifactId>\n  <version>1.0.0</version>\n  <packaging>bundle</packaging>\n\n  <properties>\n    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n  </properties>\n\n  <build>\n    <sourceDirectory>${sourceDirectory}</sourceDirectory>\n    <outputDirectory>${outputDirectory}</outputDirectory>\n    <plugins>\n      <plugin>\n        <groupId>org.apache.felix</groupId>\n        <artifactId>maven-bundle-plugin</artifactId>\n        <version>5.1.8</version>\n        <extensions>true</extensions>\n        <configuration>\n          <instructions>\n            <Export-Package>${exportedPackages}</Export-Package>\n            <Import-Package>${importedPackages}</Import-Package>\n          </instructions>\n        </configuration>\n        <executions>\n          <execution>\n            <id>bundle-manifest</id>\n            <phase>process-classes</phase>\n            <goals>\n              <goal>manifest</goal>\n            </goals>\n          </execution>\n        </executions>\n      </plugin>\n    </plugins>\n  </build>\n\n</project>\n"
        },
        {
          "name": "create-export-package-metadata.sh",
          "type": "blob",
          "size": 1.4580078125,
          "content": "#!/usr/bin/env sh\nset -e\n\nextract_export_package_value_for_buildxml() {\n  sed -z -E 's:\\r?\\n ::g' \"$1\" \\\n    | grep '^Export-Package' \\\n    | sed 's/^Export-Package: //' \\\n    | sed 's/\",/\",\\n/g' \\\n    | sed 's/1\\.0\\.0/${osgi.version}/g' \\\n    | sed 's/\"/\\&quot;/g'\n}\n\nrm -rf tmp\n\nmkdir tmp\n\ncp -r src tmp\n\nmvn \\\n-f create-export-package-metadata-pom.xml \\\n-DsourceDirectory=tmp/src \\\n-DoutputDirectory=tmp/target \\\n-DexportedPackages=com.sun.jna,com.sun.jna.ptr,com.sun.jna.win32 \\\nclean package\n\ncp -r contrib/platform/src tmp\n\nmvn \\\n-f create-export-package-metadata-pom.xml \\\n-DsourceDirectory=tmp/src \\\n-DoutputDirectory=tmp/target-platform \\\n-DexportedPackages=\\\ncom.sun.jna.platform,\\\ncom.sun.jna.platform.dnd,\\\ncom.sun.jna.platform.linux,\\\ncom.sun.jna.platform.mac,\\\ncom.sun.jna.platform.unix,\\\ncom.sun.jna.platform.unix.aix,\\\ncom.sun.jna.platform.unix.solaris,\\\ncom.sun.jna.platform.win32,\\\ncom.sun.jna.platform.win32.COM,\\\ncom.sun.jna.platform.win32.COM.tlb,\\\ncom.sun.jna.platform.win32.COM.tlb.imp,\\\ncom.sun.jna.platform.win32.COM.util,\\\ncom.sun.jna.platform.win32.COM.util.annotation,\\\ncom.sun.jna.platform.wince \\\n-DimportedPackages=com.sun.jna,com.sun.jna.ptr,com.sun.jna.win32 \\\nclean package\n\necho 'build.xml: Export-Package:'\necho\nextract_export_package_value_for_buildxml tmp/target/META-INF/MANIFEST.MF\necho\necho\n\necho 'contrib/platform/build.xml: Export-Package:'\necho\nextract_export_package_value_for_buildxml tmp/target-platform/META-INF/MANIFEST.MF\necho\necho\n\nrm -r tmp\n"
        },
        {
          "name": "dist",
          "type": "tree",
          "content": null
        },
        {
          "name": "jna.keystore",
          "type": "blob",
          "size": 1.3486328125,
          "content": null
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "logo.png",
          "type": "blob",
          "size": 2005.865234375,
          "content": null
        },
        {
          "name": "native",
          "type": "tree",
          "content": null
        },
        {
          "name": "nbproject",
          "type": "tree",
          "content": null
        },
        {
          "name": "pom-jna-jpms.xml",
          "type": "blob",
          "size": 1.9892578125,
          "content": "<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0\n  http://maven.apache.org/maven-v4_0_0.xsd\">\n  <modelVersion>4.0.0</modelVersion>\n\n  <groupId>net.java.dev.jna</groupId>\n  <artifactId>jna-jpms</artifactId>\n  <version>TEMPLATE</version>\n  <packaging>jar</packaging>\n\n  <name>Java Native Access</name>\n  <description>Java Native Access</description>\n  <url>https://github.com/java-native-access/jna</url>\n\n  <licenses>\n    <license>\n      <name>LGPL-2.1-or-later</name>\n      <url>https://www.gnu.org/licenses/old-licenses/lgpl-2.1</url>\n      <distribution>repo</distribution>\n      <comments>\n        Java Native Access (JNA) is licensed under the LGPL, version 2.1 or\n        later, or the Apache License, version 2.0. You can freely decide which\n        license you want to apply to the project.\n      </comments>\n    </license>\n    <license>\n      <name>Apache-2.0</name>\n      <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>\n      <distribution>repo</distribution>\n      <comments>\n        Java Native Access (JNA) is licensed under the LGPL, version 2.1 or\n        later, or the Apache License, version 2.0. You can freely decide which\n        license you want to apply to the project.\n      </comments>\n    </license>\n  </licenses>\n\n  <scm>\n    <connection>scm:git:https://github.com/java-native-access/jna</connection>\n    <developerConnection>scm:git:ssh://git@github.com/java-native-access/jna.git</developerConnection>\n    <url>https://github.com/java-native-access/jna</url>\n  </scm>\n\n  <developers>\n    <developer>\n      <id>twall</id>\n      <name>Timothy Wall</name>\n      <roles>\n        <role>Owner</role>\n      </roles>\n    </developer>\n    <developer>\n      <email>mblaesing@doppel-helix.eu</email>\n      <name>Matthias Bläsing</name>\n      <url>https://github.com/matthiasblaesing/</url>\n      <roles>\n        <role>Developer</role>\n      </roles>\n    </developer>\n  </developers>\n\n</project>\n"
        },
        {
          "name": "pom-jna-platform-jpms.xml",
          "type": "blob",
          "size": 2.2119140625,
          "content": "<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0\n  http://maven.apache.org/maven-v4_0_0.xsd\">\n  <modelVersion>4.0.0</modelVersion>\n\n  <groupId>net.java.dev.jna</groupId>\n  <artifactId>jna-platform-jpms</artifactId>\n  <version>TEMPLATE</version>\n  <packaging>jar</packaging>\n\n  <name>Java Native Access Platform</name>\n  <description>Java Native Access Platform</description>\n  <url>https://github.com/java-native-access/jna</url>\n\n  <licenses>\n    <license>\n      <name>LGPL-2.1-or-later</name>\n      <url>https://www.gnu.org/licenses/old-licenses/lgpl-2.1</url>\n      <distribution>repo</distribution>\n      <comments>\n        Java Native Access (JNA) is licensed under the LGPL, version 2.1 or\n        later, or the Apache License, version 2.0. You can freely decide which\n        license you want to apply to the project.\n      </comments>\n    </license>\n    <license>\n      <name>Apache-2.0</name>\n      <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>\n      <distribution>repo</distribution>\n      <comments>\n        Java Native Access (JNA) is licensed under the LGPL, version 2.1 or\n        later, or the Apache License, version 2.0. You can freely decide which\n        license you want to apply to the project.\n      </comments>\n    </license>\n  </licenses>\n\n  <scm>\n    <connection>scm:git:https://github.com/java-native-access/jna</connection>\n    <developerConnection>scm:git:ssh://git@github.com/java-native-access/jna.git</developerConnection>\n    <url>https://github.com/java-native-access/jna</url>\n  </scm>\n\n  <developers>\n    <developer>\n      <id>twall</id>\n      <name>Timothy Wall</name>\n      <roles>\n        <role>Owner</role>\n      </roles>\n    </developer>\n    <developer>\n      <email>mblaesing@doppel-helix.eu</email>\n      <name>Matthias Bläsing</name>\n      <url>https://github.com/matthiasblaesing/</url>\n      <roles>\n        <role>Developer</role>\n      </roles>\n    </developer>\n  </developers>\n\n  <dependencies>\n    <dependency>\n      <groupId>net.java.dev.jna</groupId>\n      <artifactId>jna-jpms</artifactId>\n      <version>TEMPLATE</version>\n    </dependency>\n  </dependencies>\n\n</project>\n"
        },
        {
          "name": "pom-jna-platform.xml",
          "type": "blob",
          "size": 2.2021484375,
          "content": "<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0\n  http://maven.apache.org/maven-v4_0_0.xsd\">\n  <modelVersion>4.0.0</modelVersion>\n\n  <groupId>net.java.dev.jna</groupId>\n  <artifactId>jna-platform</artifactId>\n  <version>TEMPLATE</version>\n  <packaging>jar</packaging>\n\n  <name>Java Native Access Platform</name>\n  <description>Java Native Access Platform</description>\n  <url>https://github.com/java-native-access/jna</url>\n\n  <licenses>\n    <license>\n      <name>LGPL-2.1-or-later</name>\n      <url>https://www.gnu.org/licenses/old-licenses/lgpl-2.1</url>\n      <distribution>repo</distribution>\n      <comments>\n        Java Native Access (JNA) is licensed under the LGPL, version 2.1 or\n        later, or the Apache License, version 2.0. You can freely decide which\n        license you want to apply to the project.\n      </comments>\n    </license>\n    <license>\n      <name>Apache-2.0</name>\n      <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>\n      <distribution>repo</distribution>\n      <comments>\n        Java Native Access (JNA) is licensed under the LGPL, version 2.1 or\n        later, or the Apache License, version 2.0. You can freely decide which\n        license you want to apply to the project.\n      </comments>\n    </license>\n  </licenses>\n\n  <scm>\n    <connection>scm:git:https://github.com/java-native-access/jna</connection>\n    <developerConnection>scm:git:ssh://git@github.com/java-native-access/jna.git</developerConnection>\n    <url>https://github.com/java-native-access/jna</url>\n  </scm>\n\n  <developers>\n    <developer>\n      <id>twall</id>\n      <name>Timothy Wall</name>\n      <roles>\n        <role>Owner</role>\n      </roles>\n    </developer>\n    <developer>\n      <email>mblaesing@doppel-helix.eu</email>\n      <name>Matthias Bläsing</name>\n      <url>https://github.com/matthiasblaesing/</url>\n      <roles>\n        <role>Developer</role>\n      </roles>\n    </developer>\n  </developers>\n\n  <dependencies>\n    <dependency>\n      <groupId>net.java.dev.jna</groupId>\n      <artifactId>jna</artifactId>\n      <version>TEMPLATE</version>\n    </dependency>\n  </dependencies>\n\n</project>\n"
        },
        {
          "name": "pom-jna.xml",
          "type": "blob",
          "size": 1.984375,
          "content": "<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0\n  http://maven.apache.org/maven-v4_0_0.xsd\">\n  <modelVersion>4.0.0</modelVersion>\n\n  <groupId>net.java.dev.jna</groupId>\n  <artifactId>jna</artifactId>\n  <version>TEMPLATE</version>\n  <packaging>jar</packaging>\n\n  <name>Java Native Access</name>\n  <description>Java Native Access</description>\n  <url>https://github.com/java-native-access/jna</url>\n\n  <licenses>\n    <license>\n      <name>LGPL-2.1-or-later</name>\n      <url>https://www.gnu.org/licenses/old-licenses/lgpl-2.1</url>\n      <distribution>repo</distribution>\n      <comments>\n        Java Native Access (JNA) is licensed under the LGPL, version 2.1 or\n        later, or the Apache License, version 2.0. You can freely decide which\n        license you want to apply to the project.\n      </comments>\n    </license>\n    <license>\n      <name>Apache-2.0</name>\n      <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>\n      <distribution>repo</distribution>\n      <comments>\n        Java Native Access (JNA) is licensed under the LGPL, version 2.1 or\n        later, or the Apache License, version 2.0. You can freely decide which\n        license you want to apply to the project.\n      </comments>\n    </license>\n  </licenses>\n\n  <scm>\n    <connection>scm:git:https://github.com/java-native-access/jna</connection>\n    <developerConnection>scm:git:ssh://git@github.com/java-native-access/jna.git</developerConnection>\n    <url>https://github.com/java-native-access/jna</url>\n  </scm>\n\n  <developers>\n    <developer>\n      <id>twall</id>\n      <name>Timothy Wall</name>\n      <roles>\n        <role>Owner</role>\n      </roles>\n    </developer>\n    <developer>\n      <email>mblaesing@doppel-helix.eu</email>\n      <name>Matthias Bläsing</name>\n      <url>https://github.com/matthiasblaesing/</url>\n      <roles>\n        <role>Developer</role>\n      </roles>\n    </developer>\n  </developers>\n\n</project>\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "w32ce-test.lnk",
          "type": "blob",
          "size": 0.19921875,
          "content": "255#\"\\storage card\\phoneme\\personal\\bin\\cvm.exe\" -Djna.boot.library.path=\"\\storage card\" -Djna.library.path=\"\\storage card\" -cp \"\\storage card\\test.jar;\\storage card\\junit.jar\" com.sun.jna.NativeTest all\n"
        },
        {
          "name": "www",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}