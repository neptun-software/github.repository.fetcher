{
  "metadata": {
    "timestamp": 1736708734150,
    "page": 189,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "joelittlejohn/jsonschema2pojo",
      "stars": 6261,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.2490234375,
          "content": "# Git derived files #\n*.orig\n\n# Eclipse files #\n.classpath\n.settings\n.project\n.metadata\n\n# Maven derived files #\ntarget/\napidocs\n\n# Gradle derived files #\nbuild/\n.gradle\n\n# IntelliJ files #\n.idea\n*.iml\n\n# Scratch files\n.#*\n.*.swp\n\n# Mac files #\n.DS_Store\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 43.5712890625,
          "content": "# Changelog\n\n## 1.2.2\n* Don't log ClassAlreadyExistsException for Enum ([#1597](https://github.com/joelittlejohn/jsonschema2pojo/pull/1597))\n* Prevent generating duplicate constructors when all properties are required; and both includeAllPropertiesConstructor and includeRequiredPropertiesConstructor are true ([#1553](https://github.com/joelittlejohn/jsonschema2pojo/pull/1553))\n* Add support for property names containing question mark(s) ([#1522](https://github.com/joelittlejohn/jsonschema2pojo/pull/1522))\n* Avoid NPE when setting additionalProperties path ([#1515](https://github.com/joelittlejohn/jsonschema2pojo/pull/1515))\n\n## 1.2.1\n* Fix detection of targetVersion for Android gradle builds ([#1487](https://github.com/joelittlejohn/jsonschema2pojo/pull/1487))\n\n## 1.2.0\n* Avoid output to System.err when finding unique Enum name ([#1485](https://github.com/joelittlejohn/jsonschema2pojo/pull/1485))\n* Add useful debug logging when reading schemas and creating classes ([#1483](https://github.com/joelittlejohn/jsonschema2pojo/pull/1483))\n* Use targetVersion to decide which Generated annotation to add ([#1482](https://github.com/joelittlejohn/jsonschema2pojo/pull/1482))\n* Add Javadoc to constructors parameters for properties that have title/description/$comment ([#1481](https://github.com/joelittlejohn/jsonschema2pojo/pull/1481))\n* **Choose default targetVersion using Gradle/Maven configuration ([#1478](https://github.com/joelittlejohn/jsonschema2pojo/pull/1478))**\n* Use Mojo Annotations instead of Javadoc tags in the Maven Plugin ([#1476](https://github.com/joelittlejohn/jsonschema2pojo/pull/1476))\n* **Add Email bean validation annotation for \"format\":\"email\" ([#1475](https://github.com/joelittlejohn/jsonschema2pojo/pull/1475))**\n* Allow empty string and underscore as property name ([#1468](https://github.com/joelittlejohn/jsonschema2pojo/pull/1468))\n* **Use Object as the type in case schema property contains mixed types ([#1456](https://github.com/joelittlejohn/jsonschema2pojo/pull/1456))**\n* \"Path not present\" error when processing multiple JSON files having objects with the same name ([#1427](https://github.com/joelittlejohn/jsonschema2pojo/issues/1427))\n\n## 1.1.3\n* Add command line option to print version ([#1458](https://github.com/joelittlejohn/jsonschema2pojo/pull/1458))\n* Accept multiple values provided with single \"-s\"/\"--source\" argument ([#1457](https://github.com/joelittlejohn/jsonschema2pojo/pull/1457))\n* Avoid deprecation warning with Gradle plugin re Gradle 8.0 and IncrementalTaskInputs ([#1454](https://github.com/joelittlejohn/jsonschema2pojo/issues/1454))\n* java.lang.OutOfMemoryError: Java heap space ([#1423](https://github.com/joelittlejohn/jsonschema2pojo/issues/1423))\n* Properties with special character in the name (#, /, etc) cause IllegalArgumentException 'Path not present' when using 1.1.2 ([#1402](https://github.com/joelittlejohn/jsonschema2pojo/issues/1402))\n* Add `builder` method to create a new instance of the builder ([#1396](https://github.com/joelittlejohn/jsonschema2pojo/issues/1396))\n* Added support for JSON-B ([#1385](https://github.com/joelittlejohn/jsonschema2pojo/pull/1385))\n* Get Stackoverflow error if array items schema contains trees/cycle dependencies for children ([#1376](https://github.com/joelittlejohn/jsonschema2pojo/issues/1376))\n* Publish Gradle plugin to plugins.gradle.org ([#282](https://github.com/joelittlejohn/jsonschema2pojo/issues/282))\n\n## 1.1.2\n* Use LinkedHashMap for additional properties, so the original ordering in the JSON is preserved ([#1397](https://github.com/joelittlejohn/jsonschema2pojo/pull/1397))\n* Collection fields are unnecessarily initialized to \"null\" ([#1346](https://github.com/joelittlejohn/jsonschema2pojo/issues/1346))\n* Enum not getting generated correctly with CamelCase values ([#1310](https://github.com/joelittlejohn/jsonschema2pojo/issues/1310))\n* Support using JSR-303 annotations from 'jakarta.validation' package ([#1280](https://github.com/joelittlejohn/jsonschema2pojo/pull/1280))\n* Item type for array property 'listFta' is incorrectly named ListFtum ([#1275](https://github.com/joelittlejohn/jsonschema2pojo/issues/1275))\n* Android Parcelable unused import ([#1150](https://github.com/joelittlejohn/jsonschema2pojo/issues/1150))\n* jsonschema2pojo website returns HTTP 500 for using TreeNode example in the wiki ([#781](https://github.com/joelittlejohn/jsonschema2pojo/issues/781))\n* Recursive schema $ref generates an extra class ([#368](https://github.com/joelittlejohn/jsonschema2pojo/issues/368))\n\n## 1.1.1\n* nested sibling references causes error `Path not present: definitions` only on  https://www.jsonschema2pojo.org/, local is fine ([#1237](https://github.com/joelittlejohn/jsonschema2pojo/issues/1237))\n* Provide a JDK9+ compatible annotations library for Android projects ([#1218](https://github.com/joelittlejohn/jsonschema2pojo/issues/1218))\n* $comment field for property can be turned into JavaDoc ([#1197](https://github.com/joelittlejohn/jsonschema2pojo/issues/1197))\n* UnnecessaryModifier PMD warning in generated code (private constructor for enums) ([#1102](https://github.com/joelittlejohn/jsonschema2pojo/issues/1102))\n* When providing example json with a value great than Integer/MAX\\_VALUE, it should generate a long field in Java ([#971](https://github.com/joelittlejohn/jsonschema2pojo/issues/971))\n* IllegalArgumentException while resolving reference to reference with # ([#793](https://github.com/joelittlejohn/jsonschema2pojo/issues/793))\n\n## 1.1.0\n* Add @Generated annotation to classes and includeGeneratedAnnotation config option ([#1202](https://github.com/joelittlejohn/jsonschema2pojo/pull/1202))\n* **Remove Jackson 1.x support ([#1200](https://github.com/joelittlejohn/jsonschema2pojo/issues/1200))**\n* **Remove jsonschema2pojo-scalagen ([#1199](https://github.com/joelittlejohn/jsonschema2pojo/issues/1199))**\n* Enum generation ignores existingJavaType  ([#1182](https://github.com/joelittlejohn/jsonschema2pojo/issues/1182))\n* **Require Gradle 5.6+ when using the Gradle plugin (and update examples) ([#1131](https://github.com/joelittlejohn/jsonschema2pojo/pull/1131))**\n* formatTypeMapping fails with primitive types ([#1126](https://github.com/joelittlejohn/jsonschema2pojo/issues/1126))\n* Add private modifier to constructor-related configuration options so that they can be configured in the POM ([#1118](https://github.com/joelittlejohn/jsonschema2pojo/pull/1118))\n* Using enum + javaType (without package name) generates enum in default package as a class, then fails to compile ([#1103](https://github.com/joelittlejohn/jsonschema2pojo/issues/1103))\n* Fix raw type warnings when extending a builder ([#1101](https://github.com/joelittlejohn/jsonschema2pojo/pull/1101))\n* Recursive schemas with relative paths can generate the same class twice with \"\\_\\_1\" in the name ([#1077](https://github.com/joelittlejohn/jsonschema2pojo/pull/1077))\n* Gradle shows deprecation warnings regarding Gradle 7.0 ([#1070](https://github.com/joelittlejohn/jsonschema2pojo/issues/1070))\n* Add javax.annotation.processing.Generated for Java 9 ([#835](https://github.com/joelittlejohn/jsonschema2pojo/issues/835))\n\n## 1.0.2\n* Restrict JSR-303 annotations to supported field types ([#1063](https://github.com/joelittlejohn/jsonschema2pojo/pull/1063))\n* **Add package when javaType is not a fully qualified name ([#1054](https://github.com/joelittlejohn/jsonschema2pojo/pull/1054))**\n* Feature/format type mapping for array types ([#1044](https://github.com/joelittlejohn/jsonschema2pojo/pull/1044))\n* Implement javaEnums extension  ([#1041](https://github.com/joelittlejohn/jsonschema2pojo/pull/1041))\n* Covariant return types on build() method (avoid having to cast after calling the build() method on a subclass) ([#1014](https://github.com/joelittlejohn/jsonschema2pojo/pull/1014))\n* Add support for @Digits JSR-303 annotation ([#977](https://github.com/joelittlejohn/jsonschema2pojo/issues/977))\n* Add support for title and description on Enums ([#975](https://github.com/joelittlejohn/jsonschema2pojo/issues/975))\n* Add support for including JsonTypeInfo Annotation ([#967](https://github.com/joelittlejohn/jsonschema2pojo/pull/967))\n\n## 1.0.1\n* Check schema required array before is required flag ([#964](https://github.com/joelittlejohn/jsonschema2pojo/pull/964))\n* Features/builders as inner classes ([#953](https://github.com/joelittlejohn/jsonschema2pojo/pull/953))\n\n## 1.0.0\n* Don't register output directory as a set of files, since this breaks Gradle 5.0+ ([#940](https://github.com/joelittlejohn/jsonschema2pojo/pull/940))\n* **Builder method should be named consistently with getter/setter ([#905](https://github.com/joelittlejohn/jsonschema2pojo/issues/905))**\n* Objects inside array with name ending with \"List\" are generated as \"SomeNameList\" ([#780](https://github.com/joelittlejohn/jsonschema2pojo/issues/780))\n\n## 1.0.0-beta1\n* Add 'formatTypeMapping' config option to allow overriding types used for formats ([#923](https://github.com/joelittlejohn/jsonschema2pojo/pull/923))\n* **Modify Rule#apply signature to include parent node (allows context-aware rules) ([#917](https://github.com/joelittlejohn/jsonschema2pojo/pull/917))**\n* Add 'javaOptional' extension rule to allow individual fields to use Java Optional on getter ([#913](https://github.com/joelittlejohn/jsonschema2pojo/pull/913))\n* Allow schema title to be used as class name (new useTitleAsClassname config option) ([#908](https://github.com/joelittlejohn/jsonschema2pojo/issues/908))\n* Incorrect @Nullable JSR305 annotations generated when using 'required' array ([#906](https://github.com/joelittlejohn/jsonschema2pojo/issues/906))\n* Ensure Optional on getters and JSR 305 annotations can be activated via Maven POM ([#895](https://github.com/joelittlejohn/jsonschema2pojo/pull/895))\n* **Remove 'includeAccessors' option and rely only on 'includeGetters'/'includeSetters', to avoid complex interaction of these options ([#881](https://github.com/joelittlejohn/jsonschema2pojo/issues/881))**\n\n## 1.0.0-alpha4\n* maven-plugin broken due to typo in Jsonschema2PojoMojo Line 728: @parameter property contains dangling '}' ([#880](https://github.com/joelittlejohn/jsonschema2pojo/issues/880))\n\n## 1.0.0-alpha3\n* **maven plugin output directory should default to \"generated-sources/jsonschema2pojo\" ([#878](https://github.com/joelittlejohn/jsonschema2pojo/issues/878))**\n* **Always pass enclosing class or enum to annotator methods (changes method signatures) ([#876](https://github.com/joelittlejohn/jsonschema2pojo/issues/876))**\n* Remove plugin runtime dependency on Moshi ([#874](https://github.com/joelittlejohn/jsonschema2pojo/issues/874))\n* Remove plugin runtime dependency on Android ([#873](https://github.com/joelittlejohn/jsonschema2pojo/issues/873))\n* **Drop support for Maven 2.x ([#872](https://github.com/joelittlejohn/jsonschema2pojo/issues/872))**\n* **Move to Java 8 ([#860](https://github.com/joelittlejohn/jsonschema2pojo/issues/860))**\n* Generate Camel Case from underscore style names, see #848 ([#850](https://github.com/joelittlejohn/jsonschema2pojo/pull/850))\n* **Separate javaType into 'existingJavaType' and 'javaType' ([#828](https://github.com/joelittlejohn/jsonschema2pojo/issues/828))**\n\n## 1.0.0-alpha2\n* Changed maven central repo listing id in poms to default of 'central' ([#833](https://github.com/joelittlejohn/jsonschema2pojo/pull/833))\n* Fix incorrect logic between -da, -ds and -dg in CLI ([#790](https://github.com/joelittlejohn/jsonschema2pojo/issues/790))\n* **The generated POJO does not always adhere to JavaBean naming conventions ([#756](https://github.com/joelittlejohn/jsonschema2pojo/issues/756))**\n* **Improve unique class naming strategy by appending an incrementing number instead of adding more and more underscores ([#476](https://github.com/joelittlejohn/jsonschema2pojo/pull/476))**\n\n## 1.0.0-alpha1\n* Improve error message to include the bad type when javaType cannot be parsed ([#823](https://github.com/joelittlejohn/jsonschema2pojo/pull/823))\n* Replace commons-lang equals, hashCode, and toString with generated code ([#812](https://github.com/joelittlejohn/jsonschema2pojo/pull/812))\n* Add partial support for wildcards (? and ? extends...) in \"javaType\" declarations ([#810](https://github.com/joelittlejohn/jsonschema2pojo/pull/810))\n* Normalize/canonicalize relative source paths (and remove extra underscore classes that appear when using a relative source path) ([#792](https://github.com/joelittlejohn/jsonschema2pojo/pull/792))\n* Fix sourceType docs to include YAML/YAMLSCHEMA in Maven, Gradle and Ant ([#787](https://github.com/joelittlejohn/jsonschema2pojo/issues/787))\n* Add useOptionalForGetters option for Java 8 java.util.Optional on getters ([#344](https://github.com/joelittlejohn/jsonschema2pojo/pull/344))\n* **Wrong class name when using $ref in json schema ([#164](https://github.com/joelittlejohn/jsonschema2pojo/issues/164))**\n\n## 0.5.1\n* Add Scala and YAML to the website ([#785](https://github.com/joelittlejohn/jsonschema2pojo/issues/785))\n\n## 0.5.0\n* Fix inflector for 'taxes' -> 'tax' ([#783](https://github.com/joelittlejohn/jsonschema2pojo/issues/783))\n* Support YAML syntax for JSON Schema ([#778](https://github.com/joelittlejohn/jsonschema2pojo/issues/778))\n* Getters and Setters can now be activated independently ([#759](https://github.com/joelittlejohn/jsonschema2pojo/pull/759))\n* Generate toString() without reflection ([#753](https://github.com/joelittlejohn/jsonschema2pojo/pull/753))\n* Intelligent Gradle plugin up-to-date check ([#748](https://github.com/joelittlejohn/jsonschema2pojo/pull/748))\n* Scala case classes support ([#598](https://github.com/joelittlejohn/jsonschema2pojo/issues/598))\n* Make the fields used in hashcode and equals generation configurable ([#530](https://github.com/joelittlejohn/jsonschema2pojo/pull/530))\n\n## 0.4.37\n* Two default constructors incorrectly added when types are parcelable and includeConstructors is active ([#742](https://github.com/joelittlejohn/jsonschema2pojo/issues/742))\n\n## 0.4.36\n* Add customTimePattern and formatTimes config options ([#740](https://github.com/joelittlejohn/jsonschema2pojo/pull/740))\n* Schema with required[\"\"] results in String index out of range: 0  ([#725](https://github.com/joelittlejohn/jsonschema2pojo/issues/725))\n* [Android] Writing to /Reading from Parcelable ignores superclass  ([#602](https://github.com/joelittlejohn/jsonschema2pojo/issues/602))\n\n## 0.4.35\n* Add support for excluding fields from generated toString methods ([#720](https://github.com/joelittlejohn/jsonschema2pojo/pull/720))\n\n## 0.4.34\n* Add 'sourceSortOrder' to decide how source files are iterated ([#719](https://github.com/joelittlejohn/jsonschema2pojo/pull/719))\n\n## 0.4.33\n* Support customDatePattern and customDateTimePattern as global config options ([#716](https://github.com/joelittlejohn/jsonschema2pojo/issues/716))\n* Support customPattern as an alias for customDatePattern and customDateTimePattern ([#715](https://github.com/joelittlejohn/jsonschema2pojo/issues/715))\n* formatDateTimes default pattern should include timezone ([#714](https://github.com/joelittlejohn/jsonschema2pojo/issues/714))\n* Fix compilation errors for non-string enums ([#713](https://github.com/joelittlejohn/jsonschema2pojo/pull/713))\n* Add 'formatDates' config option to add JsonFormat annotation on format \"date\" fields ([#699](https://github.com/joelittlejohn/jsonschema2pojo/issues/699))\n\n## 0.4.32\n* org.jsonschema2pojo.ContentResolverTest require internet connection ([#704](https://github.com/joelittlejohn/jsonschema2pojo/issues/704))\n* Add option to specify custom fragment path delimiters ([#697](https://github.com/joelittlejohn/jsonschema2pojo/pull/697))\n* javaType doesn't work while setting  classNamePrefix = \"SomePrefix\" ([#650](https://github.com/joelittlejohn/jsonschema2pojo/issues/650))\n\n## 0.4.31\n* List property called \"status\" has items with type \"Statu\" ([#695](https://github.com/joelittlejohn/jsonschema2pojo/issues/695))\n\n## 0.4.30\n* Cannot use custom date,time types from external dependencies in maven/ant plugins ([#673](https://github.com/joelittlejohn/jsonschema2pojo/issues/673))\n* Jackson inclusion option ([#671](https://github.com/joelittlejohn/jsonschema2pojo/pull/671))\n* Support URI format properties with a default value using URI.create ([#664](https://github.com/joelittlejohn/jsonschema2pojo/issues/664))\n* Support configurable serialization inclusion for Jackson ([#629](https://github.com/joelittlejohn/jsonschema2pojo/issues/629))\n\n## 0.4.29\n* Fix include additional properties set incorrectly by CLI ([#660](https://github.com/joelittlejohn/jsonschema2pojo/pull/660))\n* Remove useless and empty Javadoc ([#659](https://github.com/joelittlejohn/jsonschema2pojo/issues/659))\n* @JsonPropertyDescription annotation does not properly extract description from schema ([#655](https://github.com/joelittlejohn/jsonschema2pojo/issues/655))\n* Support @JsonFormat annotation for date-time fields ([#643](https://github.com/joelittlejohn/jsonschema2pojo/pull/643))\n\n## 0.4.28\n* Adding support for JSR-305 annotations ([#645](https://github.com/joelittlejohn/jsonschema2pojo/pull/645))\n* additionalProperties getter method is missing @Valid annotation. ([#503](https://github.com/joelittlejohn/jsonschema2pojo/issues/503))\n* Zip of binary distribution of CLI ([#500](https://github.com/joelittlejohn/jsonschema2pojo/issues/500))\n\n## 0.4.27\n* Add [\"-\", \" \", \"_\"] as default propertyWordDelimiters for Gradle plugin ([#625](https://github.com/joelittlejohn/jsonschema2pojo/pull/625))\n* Allow setting custom annotator and custom rule factory fields directly in Gradle ([#617](https://github.com/joelittlejohn/jsonschema2pojo/pull/617))\n* Deep-merge array items in example JSONs before generating schemas ([#423](https://github.com/joelittlejohn/jsonschema2pojo/issues/423))\n* Gradle plugin has no default propertyWordDelimiters ([#162](https://github.com/joelittlejohn/jsonschema2pojo/issues/162))\n\n## 0.4.26\n* Remove javax.annotation.Generated as it doesn't ship with Android ([#577](https://github.com/joelittlejohn/jsonschema2pojo/issues/577))\n\n## 0.4.25\n* Add option to use BigInteger for JSON integer type ([#614](https://github.com/joelittlejohn/jsonschema2pojo/pull/614))\n* Supporting other primitives as backing types for enums ([#612](https://github.com/joelittlejohn/jsonschema2pojo/pull/612))\n* Generate hashCode and equals even without declared fields ([#611](https://github.com/joelittlejohn/jsonschema2pojo/pull/611))\n* Use unique enum constant names ([#609](https://github.com/joelittlejohn/jsonschema2pojo/pull/609))\n\n## 0.4.24\n* Support \"required\" keyword draft04 array-style when generating constuctors ([#599](https://github.com/joelittlejohn/jsonschema2pojo/pull/599))\n* Add feature to allow comments in schema files ([#589](https://github.com/joelittlejohn/jsonschema2pojo/issues/589))\n* javaType with generics does not apply correct imports when \"type\": \"object\" is omitted ([#582](https://github.com/joelittlejohn/jsonschema2pojo/issues/582))\n* Add @JsonPropertyDescription when \"description\" property present ([#571](https://github.com/joelittlejohn/jsonschema2pojo/pull/571))\n* Constructors are incompatible with extends keyword ([#555](https://github.com/joelittlejohn/jsonschema2pojo/issues/555))\n\n## 0.4.23\n* Force lower camel case fields when using JSON ([#563](https://github.com/joelittlejohn/jsonschema2pojo/issues/563))\n* Fix broken embedded refs ([#560](https://github.com/joelittlejohn/jsonschema2pojo/pull/560))\n* Added file extensions config parameter ([#548](https://github.com/joelittlejohn/jsonschema2pojo/pull/548))\n* Overridden builders are not added to empty child class ([#538](https://github.com/joelittlejohn/jsonschema2pojo/issues/538))\n* Wrong default value for BigDecimal ([#535](https://github.com/joelittlejohn/jsonschema2pojo/issues/535))\n* Add Moshi 1.x annotation style ([#529](https://github.com/joelittlejohn/jsonschema2pojo/pull/529))\n* Add serializable as an optional/configurable option ([#404](https://github.com/joelittlejohn/jsonschema2pojo/issues/404))\n\n## 0.4.22\n* Adding date-time types to Maven plugin mojo configuration ([#531](https://github.com/joelittlejohn/jsonschema2pojo/pull/531))\n* Fix javaName breaking required properties ([#528](https://github.com/joelittlejohn/jsonschema2pojo/pull/528))\n* Add support for using BigDecimal to represent numbers ([#517](https://github.com/joelittlejohn/jsonschema2pojo/pull/517))\n* Jsonschema2pojoRule report problems to STDERR ([#513](https://github.com/joelittlejohn/jsonschema2pojo/pull/513))\n\n## 0.4.21\n* Fix NullPointerException in Gradle plugin for Java (non-Android) projects ([#510](https://github.com/joelittlejohn/jsonschema2pojo/pull/510))\n\n## 0.4.20\n* Regression: when a extending a schema with a redefinition of the same field, with methods should be generated only once ([#507](https://github.com/joelittlejohn/jsonschema2pojo/issues/507))\n* Unnecessary @SuppressWarnings java warnings after upgrade ([#498](https://github.com/joelittlejohn/jsonschema2pojo/issues/498))\n* Improved Android support via Gradle plugin (NOTE: Changes behaviour regarding output directory) ([#495](https://github.com/joelittlejohn/jsonschema2pojo/pull/495))\n\n## 0.4.19\n* Add javaName schema property ([#499](https://github.com/joelittlejohn/jsonschema2pojo/pull/499))\n* Declare an enum without that \"static\" ([#496](https://github.com/joelittlejohn/jsonschema2pojo/issues/496))\n* includeDynamicAccessors should default to false (don't include dynamic accessors by default) ([#482](https://github.com/joelittlejohn/jsonschema2pojo/pull/482))\n* Inflector - incorrect for word \"specimen\" ([#479](https://github.com/joelittlejohn/jsonschema2pojo/issues/479))\n* Allow JSON to be passed as a String to SchemaMapper ([#475](https://github.com/joelittlejohn/jsonschema2pojo/pull/475))\n* Prefix / Suffix support when javaType is not specified ([#465](https://github.com/joelittlejohn/jsonschema2pojo/pull/465))\n\n## 0.4.18\n* Added support for custom date-time, date, time classes. ([#469](https://github.com/joelittlejohn/jsonschema2pojo/pull/469))\n* Databases element of type array generated class name Databasis instead of Database ([#461](https://github.com/joelittlejohn/jsonschema2pojo/issues/461))\n\n## 0.4.17\n* Covariant builders - copy builder methods from superclass, with narrow return type ([#455](https://github.com/joelittlejohn/jsonschema2pojo/issues/455))\n* Specify target JVM version ([#454](https://github.com/joelittlejohn/jsonschema2pojo/pull/454))\n* Nested refs not resolved correctly when schema supplied as string ([#446](https://github.com/joelittlejohn/jsonschema2pojo/issues/446))\n* Make Inflector more amenable to thread safety. ([#435](https://github.com/joelittlejohn/jsonschema2pojo/pull/435))\n* Add Dynamic Accessors ([#386](https://github.com/joelittlejohn/jsonschema2pojo/pull/386))\n\n## 0.4.16\n* Use minimum and maximum value of an integer property to determine java type long ([#434](https://github.com/joelittlejohn/jsonschema2pojo/pull/434))\n* Fix path to jar in windows script for the case it is run not from home dir ([#432](https://github.com/joelittlejohn/jsonschema2pojo/pull/432))\n* Make the quick lookup map 'final' ([#428](https://github.com/joelittlejohn/jsonschema2pojo/pull/428))\n* \"extends\" schema resolution assumes current schema is at root of file ([#425](https://github.com/joelittlejohn/jsonschema2pojo/issues/425))\n* Recursive $ref failed ([#250](https://github.com/joelittlejohn/jsonschema2pojo/issues/250))\n\n## 0.4.15\n* $ref doesn't work when ref'ed message also has extends ([#408](https://github.com/joelittlejohn/jsonschema2pojo/issues/408))\n* Support direct class inheritance with 'extendsJavaType', without using 'extends' ([#402](https://github.com/joelittlejohn/jsonschema2pojo/issues/402))\n* additionalProperties java.util.Map is not generated by default when embedding this library and extending DefaultGenerationConfig ([#398](https://github.com/joelittlejohn/jsonschema2pojo/issues/398))\n* If a schema sits inside a directory with a hyphen in its name, plugin will generate an invalid Java package name ([#383](https://github.com/joelittlejohn/jsonschema2pojo/issues/383))\n* Allow get/set methods to be disabled, use public fields instead ([#355](https://github.com/joelittlejohn/jsonschema2pojo/issues/355))\n\n## 0.4.14\n* Fix 'Unable to load class org.jsonschema2pojo.NoopAnnotator' from Gradle plugin ([#395](https://github.com/joelittlejohn/jsonschema2pojo/pull/395))\n* Library projects should use android.libraryVariants instead of android.applicationVariants  ([#391](https://github.com/joelittlejohn/jsonschema2pojo/pull/391))\n* Allow nullable type (instead of Object) when JSON type is an array with [\"string\", \"null\"] ([#390](https://github.com/joelittlejohn/jsonschema2pojo/issues/390))\n* Allow custom names to be supplied when creating an enum ([#385](https://github.com/joelittlejohn/jsonschema2pojo/issues/385))\n* Allow disabling additionalProperties generation with a global config option ([#376](https://github.com/joelittlejohn/jsonschema2pojo/issues/376))\n* 'javaInterfaces' which contain generics produce syntactically incorrect imports  ([#317](https://github.com/joelittlejohn/jsonschema2pojo/issues/317))\n\n## 0.4.13\n* RequiredArrayRule not working for properties with _ or -. ([#377](https://github.com/joelittlejohn/jsonschema2pojo/issues/377))\n* Maven plugin shows sourcePaths error for includes/excludes when sourcePaths is not defined ([#374](https://github.com/joelittlejohn/jsonschema2pojo/issues/374))\n\n## 0.4.12\n* Didn't work in Android Studio with with current master branch '040e3ae'  ([#370](https://github.com/joelittlejohn/jsonschema2pojo/issues/370))\n* Use the correct ClassLoader in createFromParcel for lists ([#356](https://github.com/joelittlejohn/jsonschema2pojo/pull/356))\n* Find jar when jsonschema2pojo sh script is not running in script folder ([#351](https://github.com/joelittlejohn/jsonschema2pojo/pull/351))\n* Fix parameter description of --class-prefix and --class-suffix. ([#350](https://github.com/joelittlejohn/jsonschema2pojo/pull/350))\n* Multiple enum array properties with same name cause JClassAlreadyExistsException ([#349](https://github.com/joelittlejohn/jsonschema2pojo/pull/349))\n* Allow empty package names ([#348](https://github.com/joelittlejohn/jsonschema2pojo/pull/348))\n* Corrected Exclude pattern behavior with Maven to avoid excluding all files ([#340](https://github.com/joelittlejohn/jsonschema2pojo/pull/340))\n\n## 0.4.11\n* Add super() to the equals/hashcode impl ([#333](https://github.com/joelittlejohn/jsonschema2pojo/pull/333))\n* Use Gson @SerializedName annotation on ALL fields, even when JSON name matches Java name ([#327](https://github.com/joelittlejohn/jsonschema2pojo/issues/327))\n* Adding support for required array from http://tools.ietf.org/html/draft-... ([#325](https://github.com/joelittlejohn/jsonschema2pojo/pull/325))\n* default tag doesn't work for empty string ([#320](https://github.com/joelittlejohn/jsonschema2pojo/issues/320))\n* **EXPERIMENTAL** Support Parcelable types for Android ([#127](https://github.com/joelittlejohn/jsonschema2pojo/issues/127))\n\n## 0.4.10\n* Initial class name is truncated after first . char, instead of last . char ([#313](https://github.com/joelittlejohn/jsonschema2pojo/issues/313))\n* Add support for android library plugin ([#305](https://github.com/joelittlejohn/jsonschema2pojo/issues/305))\n* Support \"javaType\" for things that are not \"type\": \"object\" ([#223](https://github.com/joelittlejohn/jsonschema2pojo/issues/223))\n\n## 0.4.9\n* Array types are ignored inside generics in javaType ([#299](https://github.com/joelittlejohn/jsonschema2pojo/issues/299))\n* Add config options to generate Joda LocalDate and LocalTime ([#298](https://github.com/joelittlejohn/jsonschema2pojo/issues/298))\n* Allow URLs as source locations ([#293](https://github.com/joelittlejohn/jsonschema2pojo/issues/293))\n\n## 0.4.8\n* Android support in gradle plugin ([#292](https://github.com/joelittlejohn/jsonschema2pojo/pull/292))\n* Add support for Jackson's JsonView ([#291](https://github.com/joelittlejohn/jsonschema2pojo/pull/291))\n* Added support for javaType on integer and number properties. ([#287](https://github.com/joelittlejohn/jsonschema2pojo/pull/287))\n* Option to create constructors (with all fields, or with required fields) ([#231](https://github.com/joelittlejohn/jsonschema2pojo/issues/231))\n* Support nested generic type arguments in javaType ([#196](https://github.com/joelittlejohn/jsonschema2pojo/issues/196))\n\n## 0.4.7\n* Adding UUID support to FormatRule ([#270](https://github.com/joelittlejohn/jsonschema2pojo/pull/270))\n* Add GSON annotation '@SerializedName' to Enums ([#267](https://github.com/joelittlejohn/jsonschema2pojo/issues/267))\n* Add ability to set prefixes/suffixes for generated classes ([#258](https://github.com/joelittlejohn/jsonschema2pojo/pull/258))\n\n## 0.4.6\n* ClassNotFoundException when attempting to use a custom annotator from a project dependency ([#256](https://github.com/joelittlejohn/jsonschema2pojo/issues/256))\n* Inflector incorrectly singularizes Address to Addres  ([#244](https://github.com/joelittlejohn/jsonschema2pojo/issues/244))\n* propertyWordDelimiters config is ignored ([#243](https://github.com/joelittlejohn/jsonschema2pojo/issues/243))\n* Improve the way Equals and Hashcode are generated ([#241](https://github.com/joelittlejohn/jsonschema2pojo/pull/241))\n* Support for @JsonTypeInfo in generated classes using deserializationClassProperty ([#235](https://github.com/joelittlejohn/jsonschema2pojo/pull/235))\n\n## 0.4.5\n* Allow sets to have an empty default value ([#232](https://github.com/joelittlejohn/jsonschema2pojo/pull/232))\n* Use LinkedHashSet when deserializing Set to preserve order ([#227](https://github.com/joelittlejohn/jsonschema2pojo/pull/227))\n* Allow SchemaMapper to generate from String and not only URL ([#221](https://github.com/joelittlejohn/jsonschema2pojo/pull/221))\n* Generate @Param and @Returns javadoc ([#219](https://github.com/joelittlejohn/jsonschema2pojo/pull/219))\n* Creating a list of objects with class name as “S” ([#213](https://github.com/joelittlejohn/jsonschema2pojo/issues/213))\n* Add 'customRuleFactory' config option for pluggable RuleFactory ([#211](https://github.com/joelittlejohn/jsonschema2pojo/pull/211))\n\n## 0.4.4\n* Added ')' to jdk unbounded range for Maven 2.X ([#205](https://github.com/joelittlejohn/jsonschema2pojo/pull/205))\n* Allow Sets and Lists to be initialized to null (instead of an empty collection) ([#203](https://github.com/joelittlejohn/jsonschema2pojo/pull/203))\n\n## 0.4.3\n* Add includes & excludes Maven config options for source file filtering ([#200](https://github.com/joelittlejohn/jsonschema2pojo/pull/200))\n* Reorganise module dependencies, pull CLI out from under other plugins ([#198](https://github.com/joelittlejohn/jsonschema2pojo/pull/198))\n* \"properties\" property implies \"type\": \"object\" ([#192](https://github.com/joelittlejohn/jsonschema2pojo/issues/192))\n* Preserve casing of field names ([#187](https://github.com/joelittlejohn/jsonschema2pojo/issues/187))\n* sourceType = 'json' is ignored by Gradle plugin ([#184](https://github.com/joelittlejohn/jsonschema2pojo/issues/184))\n* Handling local references on jsonschema2pojo.org ([#183](https://github.com/joelittlejohn/jsonschema2pojo/issues/183))\n\n## 0.4.2\n* Builder Method for Additional Properties ([#175](https://github.com/joelittlejohn/jsonschema2pojo/pull/175))\n* javaInterfaces extension property is ignored for Enum types ([#172](https://github.com/joelittlejohn/jsonschema2pojo/issues/172))\n* Binary property support ([#171](https://github.com/joelittlejohn/jsonschema2pojo/pull/171))\n* Support annotating additionalProperties field. ([#170](https://github.com/joelittlejohn/jsonschema2pojo/pull/170))\n* customAnnotator shows 'dynamic properties deprecated' warning when using Gradle plugin ([#163](https://github.com/joelittlejohn/jsonschema2pojo/issues/163))\n\n## 0.4.1\n* Switch from HashSet to LinkedHashSet for uniqueItems arrays to preserve order ([#159](https://github.com/joelittlejohn/jsonschema2pojo/issues/159))\n* Add @Valid on all collections, not just those with items type \"object\" ([#158](https://github.com/joelittlejohn/jsonschema2pojo/issues/158))\n* Allow collections to be null by default ([#156](https://github.com/joelittlejohn/jsonschema2pojo/issues/156))\n* Add support for generic type arguments to javaType ([#151](https://github.com/joelittlejohn/jsonschema2pojo/issues/151))\n* sourceType config option is ignored by the gradle plugin ([#144](https://github.com/joelittlejohn/jsonschema2pojo/issues/144))\n* Array properties that include the word \"men\" in the name result in incorrectly named item class ([#142](https://github.com/joelittlejohn/jsonschema2pojo/issues/142))\n* Type \"Number\" is generating Floats instead of Double ([#141](https://github.com/joelittlejohn/jsonschema2pojo/issues/141))\n* Add config option to choose commons-lang3 for hashCode/toString implementation ([#140](https://github.com/joelittlejohn/jsonschema2pojo/issues/140))\n* Return JType from SchemaMapper.generate(...) ([#137](https://github.com/joelittlejohn/jsonschema2pojo/issues/137))\n\n## 0.4.0\n* **Rename setAdditionalProperties to avoid confusing naive introspectors ([#136](https://github.com/joelittlejohn/jsonschema2pojo/issues/136))**\n* ExtendedCharacters tests fail on command line, but pass in Eclipse (Windows) ([#131](https://github.com/joelittlejohn/jsonschema2pojo/issues/131))\n* Long integers become java.lang.Double when using JSON source type ([#130](https://github.com/joelittlejohn/jsonschema2pojo/issues/130))\n* Integration tests in GsonIT suite fail on Windows ([#129](https://github.com/joelittlejohn/jsonschema2pojo/issues/129))\n* JSON schema with enum member with a name starting with a capital letter, causes a generation of a code that doesn't compile ([#126](https://github.com/joelittlejohn/jsonschema2pojo/issues/126))\n* Contribute Gradle plugin ([#123](https://github.com/joelittlejohn/jsonschema2pojo/pull/123))\n* Corrected default annotationStyle to be jackson2 ([#122](https://github.com/joelittlejohn/jsonschema2pojo/pull/122))\n* Enable maven plugin to recurse subdirectories for schema to code generation ([#117](https://github.com/joelittlejohn/jsonschema2pojo/issues/117))\n* **Migrate groupId to org.jsonschema2pojo ([#116](https://github.com/joelittlejohn/jsonschema2pojo/issues/116))**\n* **Migrate package structure to org.jsonschema2pojo ([#115](https://github.com/joelittlejohn/jsonschema2pojo/issues/115))**\n* Allow system default charset to be overriden ([#113](https://github.com/joelittlejohn/jsonschema2pojo/issues/113))\n* Configuration option to use Joda types ([#110](https://github.com/joelittlejohn/jsonschema2pojo/issues/110))\n* **Default propertyWordDelimiters to commonly used characters ([#109](https://github.com/joelittlejohn/jsonschema2pojo/issues/109))**\n\n## 0.3.7\n* Standalone enums have wrong package name ([#103](https://github.com/joelittlejohn/jsonschema2pojo/issues/103))\n* Type names are printed to stdout during code generation ([#101](https://github.com/joelittlejohn/jsonschema2pojo/issues/101))\n* @Valid is not being added to an arrays of objects that are defined using a $ref ([#97](https://github.com/joelittlejohn/jsonschema2pojo/issues/97))\n* ContentResolver.resolve throws a.lang.IllegalArgumentException: Unrecognised URI when path to schema contains space ([#94](https://github.com/joelittlejohn/jsonschema2pojo/issues/94))\n* Add 'removeOldOutput' option to clear all previously generated sources ([#92](https://github.com/joelittlejohn/jsonschema2pojo/issues/92))\n* Add support for generating Gson compatible types ([#70](https://github.com/joelittlejohn/jsonschema2pojo/issues/70))\n* Add extension to force generated classes to implement additional interface(s)  ([#60](https://github.com/joelittlejohn/jsonschema2pojo/issues/60))\n\n## 0.3.6\n* Better inflection when making array names singular ([#96](https://github.com/joelittlejohn/jsonschema2pojo/issues/96))\n* Optimized deserialization for enum values ([#95](https://github.com/joelittlejohn/jsonschema2pojo/issues/95))\n* Elements with similar names are overwritten ([#93](https://github.com/joelittlejohn/jsonschema2pojo/issues/93))\n* Support for classpath in Ant target ([#89](https://github.com/joelittlejohn/jsonschema2pojo/issues/89))\n* Support for custom Annotator classes ([#86](https://github.com/joelittlejohn/jsonschema2pojo/issues/86))\n\n## 0.3.5\n* Add support for http:// URLs when using $ref ([#87](https://github.com/joelittlejohn/jsonschema2pojo/issues/87))\n* Add support for resource: URLs when using $ref ([#85](https://github.com/joelittlejohn/jsonschema2pojo/issues/85))\n* JSON property called \"class\" creates a method called \"getClass\" which Java is not happy about ([#84](https://github.com/joelittlejohn/jsonschema2pojo/issues/84))\n\n## 0.3.4\n* Support @Valid annotation for transitive validation ([#82](https://github.com/joelittlejohn/jsonschema2pojo/issues/82))\n* Add minLength/maxLength to JSR-303 support ([#78](https://github.com/joelittlejohn/jsonschema2pojo/issues/78))\n* Array properties use item type instead of collection type when using a ref to an array schema more than once ([#76](https://github.com/joelittlejohn/jsonschema2pojo/issues/76))\n* Array item type is not named well when array property name ends in 'ies' ([#75](https://github.com/joelittlejohn/jsonschema2pojo/issues/75))\n* Run a hosted/web version of jsonschema2pojo ([#66](https://github.com/joelittlejohn/jsonschema2pojo/issues/66))\n\n## 0.3.3\n* Configuration propertyWordDelimiters are used for properties but ignored when naming new Java types ([#73](https://github.com/joelittlejohn/jsonschema2pojo/issues/73))\n* Reserved Java words are not transformed during object generation when propertyWordDelimiters=_ is used ([#72](https://github.com/joelittlejohn/jsonschema2pojo/issues/72))\n* Threadsafe Maven generate mojo ([#71](https://github.com/joelittlejohn/jsonschema2pojo/issues/71))\n* Support generating types 'by example', using example JSON document instead of a JSON Schema ([#42](https://github.com/joelittlejohn/jsonschema2pojo/issues/42))\n\n## 0.3.2\n* Switch from commons-jci snapshot to jsr-199 compiler for integration tests ([#68](https://github.com/joelittlejohn/jsonschema2pojo/issues/68))\n* Support both Jackson 1.x and Jackson 2.x ([#64](https://github.com/joelittlejohn/jsonschema2pojo/issues/64))\n* Property name that is a java keyword generates java code with compile error ([#63](https://github.com/joelittlejohn/jsonschema2pojo/issues/63))\n* Some tests fail on Windows due to line.separator differences ([#56](https://github.com/joelittlejohn/jsonschema2pojo/issues/56))\n* Support for JSR-303 validation annotations ([#18](https://github.com/joelittlejohn/jsonschema2pojo/issues/18))\n\n## 0.3.1\n* Add support for multiple source files/directories ([#62](https://github.com/joelittlejohn/jsonschema2pojo/issues/62))\n* Default null value causes NumberFormatException ([#61](https://github.com/joelittlejohn/jsonschema2pojo/issues/61))\n* Compile error when schema contains list with empty default value ([#59](https://github.com/joelittlejohn/jsonschema2pojo/issues/59))\n* Exception thrown for empty string enum value. ([#58](https://github.com/joelittlejohn/jsonschema2pojo/issues/58))\n* Add flag not to generate hashCode() and equals() to Maven plugin ([#53](https://github.com/joelittlejohn/jsonschema2pojo/issues/53))\n* Add flag to Maven plugin that allows Jackson annotations to be omitted ([#52](https://github.com/joelittlejohn/jsonschema2pojo/issues/52))\n* No source file in exception from parse error ([#50](https://github.com/joelittlejohn/jsonschema2pojo/issues/50))\n\n## 0.3.0\n* Switch from Easymock to Mockito ([#49](https://github.com/joelittlejohn/jsonschema2pojo/issues/49))\n* IllegalArgumentException when using hyphen as a delimiter in the CLI ([#47](https://github.com/joelittlejohn/jsonschema2pojo/issues/47))\n* Remove Serializable from POJOs since they aren't (necessarily) ([#45](https://github.com/joelittlejohn/jsonschema2pojo/issues/45))\n* Migrate to Jackson 2.0 ([#44](https://github.com/joelittlejohn/jsonschema2pojo/issues/44))\n* Support for union types ([#17](https://github.com/joelittlejohn/jsonschema2pojo/issues/17))\n\n## 0.2.3\n* Null pointer when invoking the maven plugin if propertyWordDelimiters not set ([#46](https://github.com/joelittlejohn/jsonschema2pojo/issues/46))\n\n## 0.2.2\n* Add support for primitive types via the javaType property ([#41](https://github.com/joelittlejohn/jsonschema2pojo/issues/41))\n* generation yields unreproducible results for \"additionalProperties\" ([#40](https://github.com/joelittlejohn/jsonschema2pojo/issues/40))\n* Option for generating CamelCase names ([#39](https://github.com/joelittlejohn/jsonschema2pojo/issues/39))\n\n## 0.2.1\n* Add 'skip' property to allow maven plugin to be easily switched off ([#37](https://github.com/joelittlejohn/jsonschema2pojo/issues/37))\n* Keep wiki example in line with code automatically ([#35](https://github.com/joelittlejohn/jsonschema2pojo/issues/35))\n* Add Eclipse m2e support ([#34](https://github.com/joelittlejohn/jsonschema2pojo/issues/34))\n* Ant task(s) for jsonschema2pojo ([#23](https://github.com/joelittlejohn/jsonschema2pojo/issues/23))\n\n## 0.2.0\n* Migrate to git ([#33](https://github.com/joelittlejohn/jsonschema2pojo/issues/33))\n* **Remove deprecated 'optional' rule ([#32](https://github.com/joelittlejohn/jsonschema2pojo/issues/32))**\n* **Properties should be nullable, use wrapper types not primitives ([#31](https://github.com/joelittlejohn/jsonschema2pojo/issues/31))**\n\n## 0.1.10\n* omitting targetPackage causes NullPointerException in maven plugin ([#30](https://github.com/joelittlejohn/jsonschema2pojo/issues/30))\n* Improve serialization ordering ([#27](https://github.com/joelittlejohn/jsonschema2pojo/issues/27))\n\n## 0.1.9\n* Omit null valued properties when deserializing POJOs ([#29](https://github.com/joelittlejohn/jsonschema2pojo/issues/29))\n* Publish maven plugin documentation ([#26](https://github.com/joelittlejohn/jsonschema2pojo/issues/26))\n* Make the addition of output dir as a source root optional ([#25](https://github.com/joelittlejohn/jsonschema2pojo/issues/25))\n* Plugin does not respect types present on the project classpath ([#24](https://github.com/joelittlejohn/jsonschema2pojo/issues/24))\n\n## 0.1.8\n* Add support for more format values ([#21](https://github.com/joelittlejohn/jsonschema2pojo/issues/21))\n* Pom files cause plugin version warnings in Maven 3 ([#20](https://github.com/joelittlejohn/jsonschema2pojo/issues/20))\n* Support for 'extends' schema rule ([#14](https://github.com/joelittlejohn/jsonschema2pojo/issues/14))\n\n## 0.1.7\n* Copyright notices are currently out-of-date ([#19](https://github.com/joelittlejohn/jsonschema2pojo/issues/19))\n* Support for 'default' schema rule ([#15](https://github.com/joelittlejohn/jsonschema2pojo/issues/15))\n* Add acceptance test framework for better end-to-end testing ([#10](https://github.com/joelittlejohn/jsonschema2pojo/issues/10))\n* Create empty collection when mapping JSON array to Java List/Set ([#3](https://github.com/joelittlejohn/jsonschema2pojo/issues/3))\n\n## 0.1.6\n* Properties with special characters in name are not marshalled/unmarshalled correctly ([#13](https://github.com/joelittlejohn/jsonschema2pojo/issues/13))\n* Format rule only applies to strings, spec says it is valid for any type ([#12](https://github.com/joelittlejohn/jsonschema2pojo/issues/12))\n* Type rule does not default to \"any\" or accept unrecognised types as per spec ([#11](https://github.com/joelittlejohn/jsonschema2pojo/issues/11))\n* Support for $ref ([#7](https://github.com/joelittlejohn/jsonschema2pojo/issues/7))\n\n## 0.1.5\n* Jackson Enum annotations aren't applied correctly ([#9](https://github.com/joelittlejohn/jsonschema2pojo/issues/9))\n* Publish versioned javadocs & remove head javadocs from repo ([#6](https://github.com/joelittlejohn/jsonschema2pojo/issues/6))\n\n## 0.1.4\n* Schema with non-complex type as root element produces extra/invalid pojos ([#8](https://github.com/joelittlejohn/jsonschema2pojo/issues/8))\n\n## 0.1.3\n* Support additionalProperties from json schema ([#5](https://github.com/joelittlejohn/jsonschema2pojo/issues/5))\n\n## 0.1.2\n* Create builder-style pojos ([#2](https://github.com/joelittlejohn/jsonschema2pojo/issues/2))\n\n## 0.1.1\n* Automate all release tasks ([#48](https://github.com/joelittlejohn/jsonschema2pojo/issues/48))\n\n## 0.1.0\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.4990234375,
          "content": "## 1. Use a feature branch\n\nFeature branches make pull requests easier as GitHub will keep your pull request up-to-date when the feature branch changes. If you need to rebase to fix some things after creating your pull request, or if you end up having multiple pull requests open at the same time, **having a pull request associated with a branch instead of `master` will make your job easier**.\n\n## 2. Run the test suite\n\n*jsonschema2pojo* includes both unit and integration tests. The unit test coverage is not high, instead we rely on an exhaustive set of integration tests that cover all the code generation features using example schema documents.\n\nTo compile, unit test, package, and run the integration test suite (the typical full build), use:\n\n`mvn clean verify`\n\n## 3. Add integration tests\n\nWhen contributing, you may often find unit tests (and TDD) helpful and you're free to add unit tests. **If you're adding/amending code generation features then integration tests (*end-to-end* tests that use an example schema to generate and compile Java code) are essential**. We can't merge pull requests unless they have integration tests, since without tests your feature could be lost in a future release.\n\n## 4. Rebase and keep a clean log\n\nRebase against master often, if your pull request is stale it can't be merged. Rebase your commits into logical chunks, without errors (multiple commits are okay, but **squash minor commits that fix errors in earlier commits**). Force-push to your feature branch after you have rebased.\n"
        },
        {
          "name": "CONTRIBUTORS.md",
          "type": "blob",
          "size": 1.9404296875,
          "content": "# Contributors\n* Joe Littlejohn\n* Matthew Gilliard\n* Patrick Marchwiak\n* Paul Grime\n* Donovan McGillen\n* Francis Galiegue\n* Kevin Gorham\n* Mat Allen\n* Andrew Todd\n* Ben Manes\n* Anton Khitrenovich\n* Ángel Serrano\n* Chad Maron\n* Christian Trimble\n* Michael Wengle\n* Sergey Krasilnikov\n* Gaurav Jain\n* Joost den Boer\n* James Ashe\n* Kevin OBrien\n* David Padbury\n* Jan Willem Harmelink\n* Eimar Fandino\n* Daniel Chaffee\n* Andrew Mains\n* Jon Landis\n* Justin Vasiljevich\n* Brent Sowers\n* Yoann Mikami\n* Jakub Wierzbowski\n* David McFarland\n* Brent Ryan\n* Marudhachalam, Karthikeyan\n* Huang Wei\n* Sim Sun\n* Srikalyan Swayampakula\n* Nate Stoddard\n* Josh Deffibaugh\n* Jaeho Suk\n* Alexey Hanin\n* Mark Ingram\n* Andreas Kohn\n* D Redreev\n* Ben Jefferies\n* blizznets\n* R Patrick\n* Denis Miorandi\n* P Wilder\n* Rakshith Rao (rakrao)\n* Lomig Megard\n* Rami Baksansky\n* Dimitrij Drus\n* Arno Puder\n* SpaceBison\n* Mike Woudenberg\n* Tobias Preuss\n* Max Myslyvtsev\n* Thach Hoang\n* Sam Duke\n* Alex Macrae\n* Łukasz Grabski\n* Jens Teglhus Møller\n* Jonathan Landis\n* Jonathan Ogilvie\n* Sheridan C Rawlins\n* Shrey Garg\n* Stefan M\n* Brendan Haesler\n* Yotam Tanay\n* Shravan Purohit\n* Brian Bohl\n* Vladimir Alekseenko\n* Andrés P\n* David Tanner\n* Roman Solodovnichenko\n* David Riseley\n* Paul Vincent\n* Michał Kołodziejski\n* Jonathan Leitschuh\n* Sean Byron\n* Eric Cochran\n* Christoph Sladkovsky\n* John Keeping\n* lstav\n* Wojciech Matuszewski\n* Dolan Halbrook\n* Holger Schmeisky\n* Stepan Kolesnik\n* David Ehrmann\n* Peter Major\n* Chris Laprun\n* Dennis Rippinger\n* Klevis Ramo\n* Martin Bramwell\n* Jan Oopkaup\n* Michał Szymborski\n* Duane Zamrok\n* Gleb Averchuk\n* John Tipper\n* Daniel Cruver\n* kullanici0606\n* Francisco Taboada\n* Simon Levermann\n* Rajpaul Bagga\n* Tim Schruben\n* MCSafety\n* AlexTrotsenko\n* Gerrit Grunwald\n* Roberto Moreschini\n* Hannes Achleitner\n* Markus Jevring\n* unkish\n* Martin Gjaldbaek\n* John Dimeo\n* TheTrueDentist\n* Josejulio Martínez\n* Nils Andresen\n* Michael Edgar\n* Julien Herr\n* Daniel Hammer\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0908203125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "NOTICE",
          "type": "blob",
          "size": 0.5419921875,
          "content": "Copyright © 2010-2020 Nokia\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.8701171875,
          "content": "# jsonschema2pojo [![Build Status](https://github.com/joelittlejohn/jsonschema2pojo/actions/workflows/ci.yml/badge.svg?query=branch%3Amaster)](https://github.com/joelittlejohn/jsonschema2pojo/actions/workflows/ci.yml?query=branch%3Amaster) [![Maven Central](https://maven-badges.herokuapp.com/maven-central/org.jsonschema2pojo/jsonschema2pojo/badge.svg)](http://search.maven.org/#search%7Cga%7C1%7Cg%3A%22org.jsonschema2pojo%22)\n\n_jsonschema2pojo_ generates Java types from JSON Schema (or example JSON) and can annotate those types for data-binding with Jackson 2.x or Gson.\n\n### [Try jsonschema2pojo online](http://jsonschema2pojo.org/)<br>or `brew install jsonschema2pojo`\n\nYou can use jsonschema2pojo as a Maven plugin, an Ant task, a command line utility, a Gradle plugin or embedded within your own Java app. The [Getting Started](https://github.com/joelittlejohn/jsonschema2pojo/wiki/Getting-Started) guide will show you how.\n\nA very simple Maven example:\n```xml\n<plugin>\n    <groupId>org.jsonschema2pojo</groupId>\n    <artifactId>jsonschema2pojo-maven-plugin</artifactId>\n    <version>1.2.2</version>\n    <configuration>\n        <sourceDirectory>${basedir}/src/main/resources/schema</sourceDirectory>\n        <targetPackage>com.example.types</targetPackage>\n    </configuration>\n    <executions>\n        <execution>\n            <goals>\n                <goal>generate</goal>\n            </goals>\n        </execution>\n    </executions>\n</plugin>\n```\n\nA very simple Gradle example:\n\n```groovy\nplugins {\n  id \"java\"\n  id \"org.jsonschema2pojo\" version \"1.2.2\"\n}\n\nrepositories {\n  mavenCentral()\n}\n\njsonSchema2Pojo {\n  targetPackage = 'com.example'\n}\n```\n\nUseful pages:\n  * **[Getting started](https://github.com/joelittlejohn/jsonschema2pojo/wiki/Getting-Started)**\n  * **[How to contribute](https://github.com/joelittlejohn/jsonschema2pojo/blob/master/CONTRIBUTING.md)**\n  * [Reference](https://github.com/joelittlejohn/jsonschema2pojo/wiki/Reference)\n  * [Latest Javadocs](https://joelittlejohn.github.io/jsonschema2pojo/javadocs/1.2.2/)\n  * [Documentation for the Maven plugin](https://joelittlejohn.github.io/jsonschema2pojo/site/1.2.2/generate-mojo.html)\n  * [Documentation for the Gradle plugin](https://github.com/joelittlejohn/jsonschema2pojo/tree/master/jsonschema2pojo-gradle-plugin#usage)\n  * [Documentation for the Ant task](https://joelittlejohn.github.io/jsonschema2pojo/site/1.2.2/Jsonschema2PojoTask.html)\n\nProject resources:\n  * [Downloads](https://github.com/joelittlejohn/jsonschema2pojo/releases)\n  * [Mailing list](https://groups.google.com/forum/#!forum/jsonschema2pojo-users)\n\nSpecial thanks:\n* unkish\n* Thach Hoang\n* Dan Cruver\n* Ben Manes\n* Sam Duke\n* Duane Zamrok\n* Christian Trimble\n* YourKit, who support this project through a free license for the [YourKit Java Profiler](https://www.yourkit.com/java/profiler).\n\nLicensed under the [Apache License, Version 2.0](http://www.apache.org/licenses/LICENSE-2.0).\n"
        },
        {
          "name": "jsonschema2pojo-ant",
          "type": "tree",
          "content": null
        },
        {
          "name": "jsonschema2pojo-cli",
          "type": "tree",
          "content": null
        },
        {
          "name": "jsonschema2pojo-core",
          "type": "tree",
          "content": null
        },
        {
          "name": "jsonschema2pojo-eclipse-formatter.xml",
          "type": "blob",
          "size": 30.1337890625,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<profiles version=\"12\">\n<profile kind=\"CodeFormatterProfile\" name=\"jsonschema2pojo\" version=\"12\">\n<setting id=\"org.eclipse.jdt.core.formatter.comment.insert_new_line_before_root_tags\" value=\"insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.disabling_tag\" value=\"@formatter:off\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_annotation\" value=\"insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_type_parameters\" value=\"do not insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_type_declaration\" value=\"insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_type_arguments\" value=\"insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.brace_position_for_anonymous_type_declaration\" value=\"end_of_line\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_colon_in_case\" value=\"do not insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_opening_brace_in_array_initializer\" value=\"insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.comment.new_lines_at_block_boundaries\" value=\"true\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_new_line_in_empty_annotation_declaration\" value=\"insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_new_line_before_closing_brace_in_array_initializer\" value=\"do not insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_annotation\" value=\"do not insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.blank_lines_before_field\" value=\"0\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_while\" value=\"do not insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.use_on_off_tags\" value=\"false\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_annotation_type_member_declaration\" value=\"do not insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_new_line_before_else_in_if_statement\" value=\"do not insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_prefix_operator\" value=\"do not insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.keep_else_statement_on_same_line\" value=\"false\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_ellipsis\" value=\"insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.comment.insert_new_line_for_parameter\" value=\"insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_annotation_type_declaration\" value=\"insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.indent_breaks_compare_to_cases\" value=\"true\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_at_in_annotation\" value=\"do not insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_multiple_fields\" value=\"16\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_expressions_in_array_initializer\" value=\"0\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_conditional_expression\" value=\"0\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_for\" value=\"insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_binary_operator\" value=\"insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_question_in_wildcard\" value=\"do not insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.brace_position_for_array_initializer\" value=\"end_of_line\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_enum_constant\" value=\"do not insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_new_line_before_finally_in_try_statement\" value=\"do not insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_local_variable\" value=\"insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_new_line_before_catch_in_try_statement\" value=\"do not insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_while\" value=\"insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.blank_lines_after_package\" value=\"1\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_type_parameters\" value=\"insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.continuation_indentation\" value=\"2\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_postfix_operator\" value=\"do not insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_arguments_in_method_invocation\" value=\"0\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_arguments\" value=\"do not insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_superinterfaces\" value=\"do not insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.blank_lines_before_new_chunk\" value=\"1\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_binary_operator\" value=\"insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.blank_lines_before_package\" value=\"0\"/>\n<setting id=\"org.eclipse.jdt.core.compiler.source\" value=\"1.7\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_enum_constant_arguments\" value=\"insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_constructor_declaration\" value=\"do not insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.comment.format_line_comments\" value=\"false\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_arguments\" value=\"insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_enum_declarations\" value=\"insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.join_wrapped_lines\" value=\"false\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_block\" value=\"insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_arguments_in_explicit_constructor_call\" value=\"0\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_invocation_arguments\" value=\"do not insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.blank_lines_before_member_type\" value=\"1\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.align_type_members_on_columns\" value=\"false\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_enum_constant\" value=\"do not insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_for\" value=\"do not insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_method_declaration\" value=\"insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_selector_in_method_invocation\" value=\"0\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_switch\" value=\"do not insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_unary_operator\" value=\"do not insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_colon_in_case\" value=\"insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.comment.indent_parameter_description\" value=\"true\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_method_declaration\" value=\"do not insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_switch\" value=\"do not insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_enum_declaration\" value=\"insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_parameters\" value=\"do not insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.comment.clear_blank_lines_in_block_comment\" value=\"false\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_new_line_in_empty_type_declaration\" value=\"insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.lineSplit\" value=\"120\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_if\" value=\"insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_between_brackets_in_array_type_reference\" value=\"do not insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_parenthesized_expression\" value=\"do not insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_explicitconstructorcall_arguments\" value=\"do not insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_constructor_declaration\" value=\"insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.blank_lines_before_first_class_body_declaration\" value=\"0\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_method\" value=\"insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.indentation.size\" value=\"4\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_method_declaration\" value=\"do not insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.enabling_tag\" value=\"@formatter:on\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_enum_constant\" value=\"do not insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_superclass_in_type_declaration\" value=\"0\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_assignment\" value=\"0\"/>\n<setting id=\"org.eclipse.jdt.core.compiler.problem.assertIdentifier\" value=\"error\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.tabulation.char\" value=\"space\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_constructor_declaration_parameters\" value=\"insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_semicolon_in_try_resources\" value=\"insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_prefix_operator\" value=\"do not insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.indent_statements_compare_to_body\" value=\"true\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.blank_lines_before_method\" value=\"1\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.wrap_outer_expressions_when_nested\" value=\"true\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.format_guardian_clause_on_one_line\" value=\"false\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_colon_in_for\" value=\"insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_cast\" value=\"do not insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_parameters_in_constructor_declaration\" value=\"0\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_colon_in_labeled_statement\" value=\"insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.brace_position_for_annotation_type_declaration\" value=\"end_of_line\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_new_line_in_empty_method_body\" value=\"insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_method_declaration\" value=\"0\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_method_invocation\" value=\"do not insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_try\" value=\"do not insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_opening_bracket_in_array_allocation_expression\" value=\"do not insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_enum_constant\" value=\"insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_annotation\" value=\"do not insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_at_in_annotation_type_declaration\" value=\"do not insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_declaration_throws\" value=\"do not insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_if\" value=\"do not insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.brace_position_for_switch\" value=\"end_of_line\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_declaration_throws\" value=\"insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_parenthesized_expression_in_return\" value=\"insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_annotation\" value=\"do not insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_question_in_conditional\" value=\"insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_question_in_wildcard\" value=\"do not insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_try\" value=\"do not insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_closing_bracket_in_array_allocation_expression\" value=\"do not insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.comment.preserve_white_space_between_code_and_line_comments\" value=\"false\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_parenthesized_expression_in_throw\" value=\"insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_type_arguments\" value=\"do not insert\"/>\n<setting id=\"org.eclipse.jdt.core.compiler.problem.enumIdentifier\" value=\"error\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.indent_switchstatements_compare_to_switch\" value=\"true\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_ellipsis\" value=\"do not insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.brace_position_for_block\" value=\"end_of_line\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_for_inits\" value=\"do not insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.brace_position_for_method_declaration\" value=\"end_of_line\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.compact_else_if\" value=\"true\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.wrap_before_or_operator_multicatch\" value=\"true\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_array_initializer\" value=\"do not insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_for_increments\" value=\"insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.format_line_comment_starting_on_first_column\" value=\"true\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_closing_bracket_in_array_reference\" value=\"do not insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_field\" value=\"insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.brace_position_for_enum_constant\" value=\"end_of_line\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.comment.indent_root_tags\" value=\"true\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_enum_declarations\" value=\"do not insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_union_type_in_multicatch\" value=\"0\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_explicitconstructorcall_arguments\" value=\"insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_switch\" value=\"insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_declaration_parameters\" value=\"do not insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_superinterfaces\" value=\"insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_allocation_expression\" value=\"do not insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.tabulation.size\" value=\"4\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_type_reference\" value=\"do not insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_new_line_after_opening_brace_in_array_initializer\" value=\"do not insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_closing_brace_in_block\" value=\"insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_reference\" value=\"do not insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_new_line_in_empty_enum_constant\" value=\"insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_arguments\" value=\"do not insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_constructor_declaration\" value=\"do not insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_constructor_declaration_throws\" value=\"do not insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_if\" value=\"do not insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.comment.clear_blank_lines_in_javadoc_comment\" value=\"false\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_throws_clause_in_constructor_declaration\" value=\"0\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_assignment_operator\" value=\"insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_assignment_operator\" value=\"insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.indent_empty_lines\" value=\"false\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_synchronized\" value=\"do not insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_closing_paren_in_cast\" value=\"insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_declaration_parameters\" value=\"insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.brace_position_for_block_in_case\" value=\"end_of_line\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.number_of_empty_lines_to_preserve\" value=\"1\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_method_declaration\" value=\"do not insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_catch\" value=\"do not insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_constructor_declaration\" value=\"do not insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_method_invocation\" value=\"do not insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_opening_bracket_in_array_reference\" value=\"do not insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_arguments_in_qualified_allocation_expression\" value=\"0\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_and_in_type_parameter\" value=\"insert\"/>\n<setting id=\"org.eclipse.jdt.core.compiler.compliance\" value=\"1.7\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.continuation_indentation_for_array_initializer\" value=\"2\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_between_empty_brackets_in_array_allocation_expression\" value=\"do not insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_at_in_annotation_type_declaration\" value=\"insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_arguments_in_allocation_expression\" value=\"0\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_cast\" value=\"do not insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_unary_operator\" value=\"do not insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_parameterized_type_reference\" value=\"do not insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_anonymous_type_declaration\" value=\"insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.keep_empty_array_initializer_on_one_line\" value=\"false\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_new_line_in_empty_enum_declaration\" value=\"insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.keep_imple_if_on_one_line\" value=\"false\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_constructor_declaration_parameters\" value=\"do not insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_parameters\" value=\"insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_new_line_at_end_of_file_if_missing\" value=\"do not insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_colon_in_for\" value=\"insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_colon_in_labeled_statement\" value=\"do not insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_parameterized_type_reference\" value=\"do not insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_type_declaration\" value=\"0\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_binary_expression\" value=\"0\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.brace_position_for_enum_declaration\" value=\"end_of_line\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_type\" value=\"insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_while\" value=\"do not insert\"/>\n<setting id=\"org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode\" value=\"enabled\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_try\" value=\"insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.put_empty_statement_on_new_line\" value=\"true\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_new_line_after_label\" value=\"do not insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_parameter\" value=\"do not insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_parameters\" value=\"do not insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_method_invocation\" value=\"do not insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_new_line_before_while_in_do_statement\" value=\"do not insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_arguments_in_enum_constant\" value=\"0\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.comment.format_javadoc_comments\" value=\"true\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.comment.line_length\" value=\"80\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_package\" value=\"insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.blank_lines_between_import_groups\" value=\"1\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_enum_constant_arguments\" value=\"do not insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_semicolon\" value=\"do not insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.brace_position_for_constructor_declaration\" value=\"end_of_line\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.number_of_blank_lines_at_beginning_of_method_body\" value=\"0\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_colon_in_conditional\" value=\"insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_type_header\" value=\"true\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_annotation_type_member_declaration\" value=\"do not insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.wrap_before_binary_operator\" value=\"true\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_enum_declaration_header\" value=\"true\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.blank_lines_between_type_declarations\" value=\"1\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_synchronized\" value=\"do not insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.indent_statements_compare_to_block\" value=\"true\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_enum_declaration\" value=\"0\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.join_lines_in_comments\" value=\"true\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_question_in_conditional\" value=\"insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_multiple_field_declarations\" value=\"do not insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_compact_if\" value=\"0\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_for_inits\" value=\"insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.indent_switchstatements_compare_to_cases\" value=\"true\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_array_initializer\" value=\"insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_colon_in_default\" value=\"do not insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_and_in_type_parameter\" value=\"insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_constructor_declaration\" value=\"do not insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.blank_lines_before_imports\" value=\"1\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_colon_in_assert\" value=\"insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.comment.format_html\" value=\"true\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_throws_clause_in_method_declaration\" value=\"0\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_parameters\" value=\"do not insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_allocation_expression\" value=\"do not insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_new_line_in_empty_anonymous_type_declaration\" value=\"insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_colon_in_conditional\" value=\"insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_parameterized_type_reference\" value=\"do not insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_for\" value=\"do not insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_postfix_operator\" value=\"do not insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.comment.format_source_code\" value=\"true\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_synchronized\" value=\"insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_allocation_expression\" value=\"insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_constructor_declaration_throws\" value=\"insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_parameters_in_method_declaration\" value=\"0\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_closing_brace_in_array_initializer\" value=\"insert\"/>\n<setting id=\"org.eclipse.jdt.core.compiler.codegen.targetPlatform\" value=\"1.7\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_resources_in_try\" value=\"0\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.use_tabs_only_for_leading_indentations\" value=\"true\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_arguments_in_annotation\" value=\"0\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.comment.format_header\" value=\"false\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.comment.format_block_comments\" value=\"true\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_enum_constant\" value=\"do not insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.alignment_for_enum_constants\" value=\"0\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_new_line_in_empty_block\" value=\"insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_annotation_declaration_header\" value=\"true\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_parenthesized_expression\" value=\"do not insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_parenthesized_expression\" value=\"do not insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_catch\" value=\"do not insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_multiple_local_declarations\" value=\"do not insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_switch\" value=\"insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_for_increments\" value=\"do not insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_method_invocation\" value=\"do not insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_colon_in_assert\" value=\"insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.brace_position_for_type_declaration\" value=\"end_of_line\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_array_initializer\" value=\"insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_between_empty_braces_in_array_initializer\" value=\"do not insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_method_declaration\" value=\"do not insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_semicolon_in_for\" value=\"do not insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_catch\" value=\"insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_parameterized_type_reference\" value=\"do not insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_multiple_field_declarations\" value=\"insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_annotation\" value=\"do not insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_parameterized_type_reference\" value=\"insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_invocation_arguments\" value=\"insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.comment.new_lines_at_javadoc_boundaries\" value=\"true\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.blank_lines_after_imports\" value=\"1\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_multiple_local_declarations\" value=\"insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_enum_constant_header\" value=\"true\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_after_semicolon_in_for\" value=\"insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.never_indent_line_comments_on_first_column\" value=\"false\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_semicolon_in_try_resources\" value=\"do not insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_arguments\" value=\"do not insert\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.never_indent_block_comments_on_first_column\" value=\"false\"/>\n<setting id=\"org.eclipse.jdt.core.formatter.keep_then_statement_on_same_line\" value=\"false\"/>\n</profile>\n</profiles>\n"
        },
        {
          "name": "jsonschema2pojo-eclipse-preferences.epf",
          "type": "blob",
          "size": 32.0224609375,
          "content": "#Sat Jun 22 09:14:00 BST 2013\n/instance/org.eclipse.jdt.ui/org.eclipse.jdt.ui.staticondemandthreshold=1\n/instance/org.eclipse.jdt.ui/org.eclipse.jdt.ui.ignorelowercasenames=true\n/instance/org.eclipse.jdt.ui/formatter_profile=_jsonschema2pojo\n\\!/=\n/instance/org.eclipse.jdt.ui/formatter_settings_version=12\nfile_export_version=3.0\n/instance/org.eclipse.jdt.ui/org.eclipse.jdt.ui.text.custom_code_templates=<?xml version\\=\"1.0\" encoding\\=\"UTF-8\" standalone\\=\"no\"?><templates><template autoinsert\\=\"false\" context\\=\"typecomment_context\" deleted\\=\"false\" description\\=\"Comment for created types\" enabled\\=\"true\" id\\=\"org.eclipse.jdt.ui.text.codetemplates.typecomment\" name\\=\"typecomment\">/**\\n * ${tags}\\n */</template></templates>\n/instance/org.eclipse.jdt.ui/org.eclipse.jdt.ui.formatterprofiles=<?xml version\\=\"1.0\" encoding\\=\"UTF-8\" standalone\\=\"no\"?>\\n<profiles version\\=\"12\">\\n<profile kind\\=\"CodeFormatterProfile\" name\\=\"jsonschema2pojo\" version\\=\"12\">\\n<setting id\\=\"org.eclipse.jdt.core.formatter.comment.insert_new_line_before_root_tags\" value\\=\"insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.disabling_tag\" value\\=\"@formatter\\:off\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_annotation\" value\\=\"insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_type_parameters\" value\\=\"do not insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_type_declaration\" value\\=\"insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_type_arguments\" value\\=\"insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.brace_position_for_anonymous_type_declaration\" value\\=\"end_of_line\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_before_colon_in_case\" value\\=\"do not insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_after_opening_brace_in_array_initializer\" value\\=\"insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.comment.new_lines_at_block_boundaries\" value\\=\"true\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_new_line_in_empty_annotation_declaration\" value\\=\"insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_new_line_before_closing_brace_in_array_initializer\" value\\=\"do not insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_annotation\" value\\=\"do not insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.blank_lines_before_field\" value\\=\"0\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_while\" value\\=\"do not insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.use_on_off_tags\" value\\=\"false\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_annotation_type_member_declaration\" value\\=\"do not insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_new_line_before_else_in_if_statement\" value\\=\"do not insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_after_prefix_operator\" value\\=\"do not insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.keep_else_statement_on_same_line\" value\\=\"false\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_after_ellipsis\" value\\=\"insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.comment.insert_new_line_for_parameter\" value\\=\"insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_annotation_type_declaration\" value\\=\"insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.indent_breaks_compare_to_cases\" value\\=\"true\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_after_at_in_annotation\" value\\=\"do not insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.alignment_for_multiple_fields\" value\\=\"16\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.alignment_for_expressions_in_array_initializer\" value\\=\"0\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.alignment_for_conditional_expression\" value\\=\"0\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_for\" value\\=\"insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_after_binary_operator\" value\\=\"insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_before_question_in_wildcard\" value\\=\"do not insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.brace_position_for_array_initializer\" value\\=\"end_of_line\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_enum_constant\" value\\=\"do not insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_new_line_before_finally_in_try_statement\" value\\=\"do not insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_local_variable\" value\\=\"insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_new_line_before_catch_in_try_statement\" value\\=\"do not insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_while\" value\\=\"insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.blank_lines_after_package\" value\\=\"1\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_type_parameters\" value\\=\"insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.continuation_indentation\" value\\=\"2\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_after_postfix_operator\" value\\=\"do not insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.alignment_for_arguments_in_method_invocation\" value\\=\"0\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_arguments\" value\\=\"do not insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_superinterfaces\" value\\=\"do not insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.blank_lines_before_new_chunk\" value\\=\"1\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_before_binary_operator\" value\\=\"insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.blank_lines_before_package\" value\\=\"0\"/>\\n<setting id\\=\"org.eclipse.jdt.core.compiler.source\" value\\=\"1.7\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_enum_constant_arguments\" value\\=\"insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_constructor_declaration\" value\\=\"do not insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.comment.format_line_comments\" value\\=\"false\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_arguments\" value\\=\"insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_enum_declarations\" value\\=\"insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.join_wrapped_lines\" value\\=\"false\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_block\" value\\=\"insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.alignment_for_arguments_in_explicit_constructor_call\" value\\=\"0\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_invocation_arguments\" value\\=\"do not insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.blank_lines_before_member_type\" value\\=\"1\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.align_type_members_on_columns\" value\\=\"false\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_enum_constant\" value\\=\"do not insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_for\" value\\=\"do not insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_method_declaration\" value\\=\"insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.alignment_for_selector_in_method_invocation\" value\\=\"0\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_switch\" value\\=\"do not insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_after_unary_operator\" value\\=\"do not insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_after_colon_in_case\" value\\=\"insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.comment.indent_parameter_description\" value\\=\"true\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_method_declaration\" value\\=\"do not insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_switch\" value\\=\"do not insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_enum_declaration\" value\\=\"insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_parameters\" value\\=\"do not insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.comment.clear_blank_lines_in_block_comment\" value\\=\"false\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_new_line_in_empty_type_declaration\" value\\=\"insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.lineSplit\" value\\=\"120\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_if\" value\\=\"insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_between_brackets_in_array_type_reference\" value\\=\"do not insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_parenthesized_expression\" value\\=\"do not insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_explicitconstructorcall_arguments\" value\\=\"do not insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_constructor_declaration\" value\\=\"insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.blank_lines_before_first_class_body_declaration\" value\\=\"0\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_method\" value\\=\"insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.indentation.size\" value\\=\"4\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_method_declaration\" value\\=\"do not insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.enabling_tag\" value\\=\"@formatter\\:on\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_enum_constant\" value\\=\"do not insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.alignment_for_superclass_in_type_declaration\" value\\=\"0\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.alignment_for_assignment\" value\\=\"0\"/>\\n<setting id\\=\"org.eclipse.jdt.core.compiler.problem.assertIdentifier\" value\\=\"error\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.tabulation.char\" value\\=\"space\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_constructor_declaration_parameters\" value\\=\"insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_after_semicolon_in_try_resources\" value\\=\"insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_before_prefix_operator\" value\\=\"do not insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.indent_statements_compare_to_body\" value\\=\"true\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.blank_lines_before_method\" value\\=\"1\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.wrap_outer_expressions_when_nested\" value\\=\"true\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.format_guardian_clause_on_one_line\" value\\=\"false\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_before_colon_in_for\" value\\=\"insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_cast\" value\\=\"do not insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.alignment_for_parameters_in_constructor_declaration\" value\\=\"0\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_after_colon_in_labeled_statement\" value\\=\"insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.brace_position_for_annotation_type_declaration\" value\\=\"end_of_line\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_new_line_in_empty_method_body\" value\\=\"insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.alignment_for_method_declaration\" value\\=\"0\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_method_invocation\" value\\=\"do not insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_try\" value\\=\"do not insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_after_opening_bracket_in_array_allocation_expression\" value\\=\"do not insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_enum_constant\" value\\=\"insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_annotation\" value\\=\"do not insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_after_at_in_annotation_type_declaration\" value\\=\"do not insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_declaration_throws\" value\\=\"do not insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_if\" value\\=\"do not insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.brace_position_for_switch\" value\\=\"end_of_line\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_declaration_throws\" value\\=\"insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_before_parenthesized_expression_in_return\" value\\=\"insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_annotation\" value\\=\"do not insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_after_question_in_conditional\" value\\=\"insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_after_question_in_wildcard\" value\\=\"do not insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_try\" value\\=\"do not insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_before_closing_bracket_in_array_allocation_expression\" value\\=\"do not insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.comment.preserve_white_space_between_code_and_line_comments\" value\\=\"false\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_before_parenthesized_expression_in_throw\" value\\=\"insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_type_arguments\" value\\=\"do not insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.compiler.problem.enumIdentifier\" value\\=\"error\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.indent_switchstatements_compare_to_switch\" value\\=\"true\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_before_ellipsis\" value\\=\"do not insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.brace_position_for_block\" value\\=\"end_of_line\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_for_inits\" value\\=\"do not insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.brace_position_for_method_declaration\" value\\=\"end_of_line\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.compact_else_if\" value\\=\"true\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.wrap_before_or_operator_multicatch\" value\\=\"true\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_array_initializer\" value\\=\"do not insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_for_increments\" value\\=\"insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.format_line_comment_starting_on_first_column\" value\\=\"true\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_before_closing_bracket_in_array_reference\" value\\=\"do not insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_field\" value\\=\"insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.comment.indent_root_tags\" value\\=\"true\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.brace_position_for_enum_constant\" value\\=\"end_of_line\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_enum_declarations\" value\\=\"do not insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.alignment_for_union_type_in_multicatch\" value\\=\"0\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_explicitconstructorcall_arguments\" value\\=\"insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_switch\" value\\=\"insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_declaration_parameters\" value\\=\"do not insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_superinterfaces\" value\\=\"insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_allocation_expression\" value\\=\"do not insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.tabulation.size\" value\\=\"4\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_type_reference\" value\\=\"do not insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_new_line_after_opening_brace_in_array_initializer\" value\\=\"do not insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_after_closing_brace_in_block\" value\\=\"insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_reference\" value\\=\"do not insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_new_line_in_empty_enum_constant\" value\\=\"insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_arguments\" value\\=\"do not insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_constructor_declaration\" value\\=\"do not insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_constructor_declaration_throws\" value\\=\"do not insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_if\" value\\=\"do not insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.comment.clear_blank_lines_in_javadoc_comment\" value\\=\"false\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.alignment_for_throws_clause_in_constructor_declaration\" value\\=\"0\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_after_assignment_operator\" value\\=\"insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_before_assignment_operator\" value\\=\"insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.indent_empty_lines\" value\\=\"false\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_synchronized\" value\\=\"do not insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_after_closing_paren_in_cast\" value\\=\"insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_declaration_parameters\" value\\=\"insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.brace_position_for_block_in_case\" value\\=\"end_of_line\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.number_of_empty_lines_to_preserve\" value\\=\"1\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_method_declaration\" value\\=\"do not insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_catch\" value\\=\"do not insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_constructor_declaration\" value\\=\"do not insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_method_invocation\" value\\=\"do not insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_after_opening_bracket_in_array_reference\" value\\=\"do not insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.alignment_for_arguments_in_qualified_allocation_expression\" value\\=\"0\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_after_and_in_type_parameter\" value\\=\"insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.compiler.compliance\" value\\=\"1.7\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.continuation_indentation_for_array_initializer\" value\\=\"2\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_between_empty_brackets_in_array_allocation_expression\" value\\=\"do not insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_before_at_in_annotation_type_declaration\" value\\=\"insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.alignment_for_arguments_in_allocation_expression\" value\\=\"0\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_cast\" value\\=\"do not insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_before_unary_operator\" value\\=\"do not insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_parameterized_type_reference\" value\\=\"do not insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_anonymous_type_declaration\" value\\=\"insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.keep_empty_array_initializer_on_one_line\" value\\=\"false\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_new_line_in_empty_enum_declaration\" value\\=\"insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.keep_imple_if_on_one_line\" value\\=\"false\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_constructor_declaration_parameters\" value\\=\"do not insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_parameters\" value\\=\"insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_new_line_at_end_of_file_if_missing\" value\\=\"do not insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_after_colon_in_for\" value\\=\"insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_before_colon_in_labeled_statement\" value\\=\"do not insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_parameterized_type_reference\" value\\=\"do not insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_type_declaration\" value\\=\"0\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.alignment_for_binary_expression\" value\\=\"0\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.brace_position_for_enum_declaration\" value\\=\"end_of_line\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_type\" value\\=\"insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_while\" value\\=\"do not insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode\" value\\=\"enabled\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_try\" value\\=\"insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.put_empty_statement_on_new_line\" value\\=\"true\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_new_line_after_label\" value\\=\"do not insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_parameter\" value\\=\"do not insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_parameters\" value\\=\"do not insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_method_invocation\" value\\=\"do not insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_new_line_before_while_in_do_statement\" value\\=\"do not insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.alignment_for_arguments_in_enum_constant\" value\\=\"0\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.comment.format_javadoc_comments\" value\\=\"true\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.comment.line_length\" value\\=\"80\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_package\" value\\=\"insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.blank_lines_between_import_groups\" value\\=\"1\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_enum_constant_arguments\" value\\=\"do not insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_before_semicolon\" value\\=\"do not insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.brace_position_for_constructor_declaration\" value\\=\"end_of_line\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.number_of_blank_lines_at_beginning_of_method_body\" value\\=\"0\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_before_colon_in_conditional\" value\\=\"insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_type_header\" value\\=\"true\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_annotation_type_member_declaration\" value\\=\"do not insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.wrap_before_binary_operator\" value\\=\"true\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_enum_declaration_header\" value\\=\"true\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.blank_lines_between_type_declarations\" value\\=\"1\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_synchronized\" value\\=\"do not insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.indent_statements_compare_to_block\" value\\=\"true\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_enum_declaration\" value\\=\"0\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.join_lines_in_comments\" value\\=\"true\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_before_question_in_conditional\" value\\=\"insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_multiple_field_declarations\" value\\=\"do not insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.alignment_for_compact_if\" value\\=\"0\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_for_inits\" value\\=\"insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.indent_switchstatements_compare_to_cases\" value\\=\"true\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_array_initializer\" value\\=\"insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_before_colon_in_default\" value\\=\"do not insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_before_and_in_type_parameter\" value\\=\"insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_constructor_declaration\" value\\=\"do not insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.blank_lines_before_imports\" value\\=\"1\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_after_colon_in_assert\" value\\=\"insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.comment.format_html\" value\\=\"true\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.alignment_for_throws_clause_in_method_declaration\" value\\=\"0\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_parameters\" value\\=\"do not insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_allocation_expression\" value\\=\"do not insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_new_line_in_empty_anonymous_type_declaration\" value\\=\"insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_after_colon_in_conditional\" value\\=\"insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_parameterized_type_reference\" value\\=\"do not insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_for\" value\\=\"do not insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_before_postfix_operator\" value\\=\"do not insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.comment.format_source_code\" value\\=\"true\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_synchronized\" value\\=\"insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_allocation_expression\" value\\=\"insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_constructor_declaration_throws\" value\\=\"insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.alignment_for_parameters_in_method_declaration\" value\\=\"0\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_before_closing_brace_in_array_initializer\" value\\=\"insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.compiler.codegen.targetPlatform\" value\\=\"1.7\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.alignment_for_resources_in_try\" value\\=\"0\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.use_tabs_only_for_leading_indentations\" value\\=\"true\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.alignment_for_arguments_in_annotation\" value\\=\"0\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.comment.format_header\" value\\=\"false\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.comment.format_block_comments\" value\\=\"true\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_enum_constant\" value\\=\"do not insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.alignment_for_enum_constants\" value\\=\"0\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_new_line_in_empty_block\" value\\=\"insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_annotation_declaration_header\" value\\=\"true\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_parenthesized_expression\" value\\=\"do not insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_parenthesized_expression\" value\\=\"do not insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_catch\" value\\=\"do not insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_multiple_local_declarations\" value\\=\"do not insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_switch\" value\\=\"insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_for_increments\" value\\=\"do not insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_method_invocation\" value\\=\"do not insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_before_colon_in_assert\" value\\=\"insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.brace_position_for_type_declaration\" value\\=\"end_of_line\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_array_initializer\" value\\=\"insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_between_empty_braces_in_array_initializer\" value\\=\"do not insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_method_declaration\" value\\=\"do not insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_before_semicolon_in_for\" value\\=\"do not insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_catch\" value\\=\"insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_parameterized_type_reference\" value\\=\"do not insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_multiple_field_declarations\" value\\=\"insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_annotation\" value\\=\"do not insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_parameterized_type_reference\" value\\=\"insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_invocation_arguments\" value\\=\"insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.comment.new_lines_at_javadoc_boundaries\" value\\=\"true\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.blank_lines_after_imports\" value\\=\"1\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_multiple_local_declarations\" value\\=\"insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_enum_constant_header\" value\\=\"true\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_after_semicolon_in_for\" value\\=\"insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.never_indent_line_comments_on_first_column\" value\\=\"false\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_before_semicolon_in_try_resources\" value\\=\"do not insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_arguments\" value\\=\"do not insert\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.never_indent_block_comments_on_first_column\" value\\=\"false\"/>\\n<setting id\\=\"org.eclipse.jdt.core.formatter.keep_then_statement_on_same_line\" value\\=\"false\"/>\\n</profile>\\n</profiles>\\n\n/instance/org.eclipse.jdt.ui/org.eclipse.jdt.ui.ondemandthreshold=99\n/instance/org.eclipse.jdt.ui/org.eclipse.jdt.ui.importorder=java;javax;org;com;\n@org.eclipse.jdt.ui=3.9.0.v20130313-1302\n/instance/org.eclipse.jdt.ui/org.eclipse.jdt.ui.formatterprofiles.version=12\n"
        },
        {
          "name": "jsonschema2pojo-gradle-plugin",
          "type": "tree",
          "content": null
        },
        {
          "name": "jsonschema2pojo-integration-tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "jsonschema2pojo-intellij-formatter.xml",
          "type": "blob",
          "size": 1.361328125,
          "content": "<code_scheme name=\"Default\" version=\"173\">\n  <option name=\"ENABLE_SECOND_REFORMAT\" value=\"true\" />\n  <GroovyCodeStyleSettings>\n    <option name=\"CLASS_COUNT_TO_USE_IMPORT_ON_DEMAND\" value=\"99\" />\n    <option name=\"NAMES_COUNT_TO_USE_IMPORT_ON_DEMAND\" value=\"1\" />\n    <option name=\"IMPORT_LAYOUT_TABLE\">\n      <value>\n        <package name=\"\" withSubpackages=\"true\" static=\"true\" />\n        <emptyLine />\n        <package name=\"org.jsonschema2pojo\" withSubpackages=\"true\" static=\"false\" />\n        <emptyLine />\n        <package name=\"\" withSubpackages=\"true\" static=\"false\" />\n        <emptyLine />\n      </value>\n    </option>\n  </GroovyCodeStyleSettings>\n  <JavaCodeStyleSettings>\n    <option name=\"CLASS_COUNT_TO_USE_IMPORT_ON_DEMAND\" value=\"99\" />\n    <option name=\"NAMES_COUNT_TO_USE_IMPORT_ON_DEMAND\" value=\"1\" />\n    <option name=\"IMPORT_LAYOUT_TABLE\">\n      <value>\n        <package name=\"\" withSubpackages=\"true\" static=\"true\" />\n        <emptyLine />\n        <package name=\"java\" withSubpackages=\"true\" static=\"false\" />\n        <emptyLine />\n        <package name=\"org\" withSubpackages=\"true\" static=\"false\" />\n        <emptyLine />\n        <package name=\"com\" withSubpackages=\"true\" static=\"false\" />\n        <emptyLine />\n        <package name=\"\" withSubpackages=\"true\" static=\"false\" />\n        <emptyLine />\n      </value>\n    </option>\n  </JavaCodeStyleSettings>\n</code_scheme>"
        },
        {
          "name": "jsonschema2pojo-jdk-annotation",
          "type": "tree",
          "content": null
        },
        {
          "name": "jsonschema2pojo-maven-plugin",
          "type": "tree",
          "content": null
        },
        {
          "name": "jsonschema2pojo-upload-release",
          "type": "blob",
          "size": 6.412109375,
          "content": "#!/bin/bash\n#\n# Prepares and uploads files for the project downloads area and pushes new docs into the wiki repo.\n#\n# To create a new release:\n#\n# 1. Maven release command:\n#     export GPG_TTY=$(tty)\n#     mvn clean release:clean release:prepare release:perform -DautoVersionSubmodules\n#\n# 2. Close and Release snapshots repo at oss.sonatype.org\n#\n# 3. Wait at least 2hrs for synchronization to central\n#\n# 4. Run this script to publish new release to github\n#\nset -e\n\nif [[ ! (\"$#\" == 3 ) ]]; then\n    echo 'Usage: jsonschema2pojo-upload-release <old version> <new version> <github token>'\n    exit 1\nfi\n\nif [[ \"`which curl`\" == \"\" ]]; then\n    echo \"Missing required command 'curl'\"\n    exit 1\nfi\n\nif [[ \"`which jq`\" == \"\" ]]; then\n    echo \"Missing required command 'jq'\"\n    exit 1\nfi\n\nOLD_VERSION=$1\nVERSION=$2\nWORKING_DIR=/tmp/jsonschema2pojo-$VERSION\nGITHUB_TOKEN=$3\n\n# recreate release dir\nrm -rf $WORKING_DIR\nmkdir -p $WORKING_DIR\npushd $WORKING_DIR\n\n    # download artifacts\n    wget -U NoSuchBrowser/1.0 https://repo1.maven.org/maven2/org/jsonschema2pojo/jsonschema2pojo/$VERSION/jsonschema2pojo-$VERSION-javadoc.jar\n    wget -U NoSuchBrowser/1.0 https://repo1.maven.org/maven2/org/jsonschema2pojo/jsonschema2pojo-cli/$VERSION/jsonschema2pojo-cli-$VERSION.jar\n    wget -U NoSuchBrowser/1.0 https://repo1.maven.org/maven2/org/jsonschema2pojo/jsonschema2pojo-cli/$VERSION/jsonschema2pojo-cli-$VERSION.bat\n    wget -U NoSuchBrowser/1.0 https://repo1.maven.org/maven2/org/jsonschema2pojo/jsonschema2pojo-cli/$VERSION/jsonschema2pojo-cli-$VERSION.sh\n\n    # download dependencies for cli\n    wget -U NoSuchBrowser/1.0 https://repo1.maven.org/maven2/org/jsonschema2pojo/jsonschema2pojo-cli/$VERSION/jsonschema2pojo-cli-$VERSION.pom -O pom.xml\n    mvn dependency:copy-dependencies -DincludeScope=runtime\n    mv target/dependency ./lib\n    mv jsonschema2pojo-cli-$VERSION.jar lib\n    rm -r target pom.xml\n\n    # do some shuffling for cleaner script names\n    mkdir bin\n    mv jsonschema2pojo-cli-$VERSION.bat bin/jsonschema2pojo.bat\n    mv jsonschema2pojo-cli-$VERSION.sh bin/jsonschema2pojo\n    chmod +x bin/jsonschema2pojo\n\n    # create the release archives\n    pushd ..\n        tar czf jsonschema2pojo-$VERSION.tar.gz jsonschema2pojo-$VERSION\n        zip -r jsonschema2pojo-$VERSION.zip jsonschema2pojo-$VERSION\n    popd\n\n    # clone gh-pages to update & add docs\n    git clone git@github.com:joelittlejohn/jsonschema2pojo.git -b gh-pages gh-pages\n    pushd gh-pages\n\n        # extract javadocs to gh-pages\n        mkdir -p javadocs/$VERSION\n        unzip $WORKING_DIR/jsonschema2pojo-$VERSION-javadoc.jar -d javadocs/$VERSION/\n\n        # commit javadocs and push\n        git add .\n        git commit -m \"[release] adding $VERSION javadocs\"\n        git push origin gh-pages\n\n    popd\n\n    wget -U NoSuchBrowser/1.0 https://repo1.maven.org/maven2/org/jsonschema2pojo/jsonschema2pojo-maven-plugin/$VERSION/jsonschema2pojo-maven-plugin-$VERSION-site.jar\n    wget https://raw.github.com/joelittlejohn/jsonschema2pojo/jsonschema2pojo-$VERSION/jsonschema2pojo-ant/src/site/Jsonschema2PojoTask.html\n    pushd gh-pages\n\n        # extract plugin docs\n        mkdir -p site/$VERSION\n        unzip $WORKING_DIR/jsonschema2pojo-maven-plugin-$VERSION-site.jar -d site/$VERSION/\n        mv $WORKING_DIR/Jsonschema2PojoTask.html site/$VERSION/\n\n        # commit plugin docs and push\n        git add .\n        git commit -m \"[release] adding $VERSION plugin docs\"\n        git push origin gh-pages\n    popd\n\n    # clone wiki to update version references\n    if [[ ! -z $OLD_VERSION ]]; then\n    git clone git@github.com:joelittlejohn/jsonschema2pojo.wiki.git wiki\n    pushd wiki\n\n            # replace any references to old version with new version\n            sed -i \"s/$OLD_VERSION/$VERSION/g\" *.md\n\n            # commit wiki updates and push to main repo\n            git add .\n            git commit -m \"[release] updating wiki links and examples to $VERSION\"\n            git push origin master\n\n            # update example\n            wget https://raw.github.com/joelittlejohn/jsonschema2pojo/jsonschema2pojo-$VERSION/jsonschema2pojo-core/src/test/java/org/jsonschema2pojo/example/Example.java\n            sed '/BEGIN EXAMPLE/q' Getting-Started.md > Getting-Started.md.new\n            echo '```java' >> Getting-Started.md.new\n            sed '1,/BEGIN EXAMPLE/d;/END EXAMPLE/,$d;s/  //g' Example.java >> Getting-Started.md.new\n            echo '```' >> Getting-Started.md.new\n            sed -n '/END EXAMPLE/,$p' Getting-Started.md >> Getting-Started.md.new\n            mv Getting-Started.md.new Getting-Started.md\n            rm Example.java\n\n            # commit wiki updates and push\n            git add .\n            git commit -m \"[release] updating example code to $VERSION\" || true\n            git push origin master || true\n\n    popd\n    fi\n\n    # clone main repo to update version references in the README.md\n    if [[ ! -z $OLD_VERSION ]]; then\n    git clone git@github.com:joelittlejohn/jsonschema2pojo.git main\n    pushd main\n            sed -i \"s|$OLD_VERSION|$VERSION|\" README.md jsonschema2pojo-gradle-plugin/README.md\n\n            git add .\n            git commit -m \"[release] updating README.md for $VERSION\"\n            git push origin master\n\n\t    # publish gradle plugin to plugins.gradle.org\n\t    pushd jsonschema2pojo-gradle-plugin\n\t            git checkout jsonschema2pojo-$VERSION\n\t            ./gradlew -Pversion=$VERSION publishPlugins\n\t    popd\n    popd\n    fi\n\n    # upload to github\n    RELEASE=$(curl -H \"Authorization: token $GITHUB_TOKEN\" -sX POST \\\n                  -d \"{\\\"tag_name\\\":\\\"jsonschema2pojo-$VERSION\\\", \\\"name\\\":\\\"$VERSION\\\"}\" \\\n                  \"https://api.github.com/repos/joelittlejohn/jsonschema2pojo/releases\")\n\n    UPLOAD_URL=$(echo $RELEASE | jq -r .upload_url | sed \"s/{?.*}/?name=jsonschema2pojo-$VERSION.tar.gz/\")\n    curl -H \"Authorization: token $GITHUB_TOKEN\" -X POST \\\n        -H\"Content-Type: application/x-tar\" --data-binary @../jsonschema2pojo-$VERSION.tar.gz \"$UPLOAD_URL\" -o /dev/null\n\n    UPLOAD_URL=$(echo $RELEASE | jq -r .upload_url | sed \"s/{?.*}/?name=jsonschema2pojo-$VERSION.zip/\")\n    curl -H \"Authorization: token $GITHUB_TOKEN\" -X POST \\\n         -H\"Content-Type: application/zip\" --data-binary @../jsonschema2pojo-$VERSION.zip \"$UPLOAD_URL\" -o /dev/null\n\n    RELEASE_PAGE=$(echo $RELEASE | jq -r .html_url)\npopd\n\nrm -rf $WORKING_DIR\n\necho Release complete. Next steps:\necho    - Update release notes for $RELEASE_PAGE\necho    - Update CHANGELOG.md\necho    - Check README.md links are working\n"
        },
        {
          "name": "license-plugin-definition.xml",
          "type": "blob",
          "size": 0.5341796875,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<additionalHeaders>\n    <java_style>\n        <firstLine>/**</firstLine>\n        <beforeEachLine> * </beforeEachLine>\n        <endLine> */EOL</endLine>\n        <afterEachLine> </afterEachLine>\n        <firstLineDetectionPattern>(\\s|\\t)*/\\*.*$</firstLineDetectionPattern>\n        <lastLineDetectionPattern>.*\\*/(\\s|\\t)*$</lastLineDetectionPattern>\n        <allowBlankLines>false</allowBlankLines>\n        <isMultiline>true</isMultiline>\n        <padLines>false</padLines>\n    </java_style>\n</additionalHeaders>"
        },
        {
          "name": "pom.xml",
          "type": "blob",
          "size": 20.1171875,
          "content": "<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n\n    <modelVersion>4.0.0</modelVersion>\n\n    <parent>\n        <groupId>org.sonatype.oss</groupId>\n        <artifactId>oss-parent</artifactId>\n        <version>9</version>\n    </parent>\n\n    <groupId>org.jsonschema2pojo</groupId>\n    <artifactId>jsonschema2pojo</artifactId>\n    <version>1.2.3-SNAPSHOT</version>\n\n    <packaging>pom</packaging>\n    <name>jsonschema2pojo</name>\n    <description>Generate DTO style Java classes from JSON Schema documents</description>\n    <url>https://github.com/joelittlejohn/jsonschema2pojo</url>\n\n    <modules>\n        <module>jsonschema2pojo-ant</module>\n        <module>jsonschema2pojo-cli</module>\n        <module>jsonschema2pojo-core</module>\n        <module>jsonschema2pojo-gradle-plugin</module>\n        <module>jsonschema2pojo-integration-tests</module>\n        <module>jsonschema2pojo-maven-plugin</module>\n    </modules>\n\n    <developers>\n        <developer>\n            <name>Joe Littlejohn</name>\n            <email>joe.littlejohn@gmail.com</email>\n        </developer>\n    </developers>\n\n    <scm>\n        <url>https://github.com/joelittlejohn/jsonschema2pojo</url>\n        <connection>scm:git:git@github.com:joelittlejohn/jsonschema2pojo.git</connection>\n        <developerConnection>scm:git:git@github.com:joelittlejohn/jsonschema2pojo.git</developerConnection>\n        <tag>HEAD</tag>\n    </scm>\n\n    <licenses>\n        <license>\n            <name>Apache License, Version 2.0</name>\n            <url>http://www.apache.org/licenses/LICENSE-2.0</url>\n        </license>\n    </licenses>\n\n    <properties>\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\n        <gradle.version>5.6</gradle.version>\n        <gson.version>2.11.0</gson.version>\n        <moshi.version>1.12.0</moshi.version>\n        <jackson2x.version>2.17.2</jackson2x.version>\n        <jackson2x.databind.version>2.17.2</jackson2x.databind.version>\n        <maven.plugin.plugin.version>3.8.1</maven.plugin.plugin.version>\n    </properties>\n\n    <reporting>\n        <excludeDefaults>true</excludeDefaults>\n    </reporting>\n\n    <build>\n        <pluginManagement>\n            <plugins>\n                <plugin>\n                    <artifactId>maven-clean-plugin</artifactId>\n                    <version>3.4.0</version>\n                </plugin>\n                <plugin>\n                    <artifactId>maven-compiler-plugin</artifactId>\n                    <version>3.11.0</version>\n                </plugin>\n                <plugin>\n                    <artifactId>maven-dependency-plugin</artifactId>\n                    <version>3.5.0</version>\n                </plugin>\n                <plugin>\n                    <artifactId>maven-deploy-plugin</artifactId>\n                    <version>3.1.2</version>\n                </plugin>\n                <plugin>\n                    <artifactId>maven-enforcer-plugin</artifactId>\n                    <version>3.2.1</version>\n                </plugin>\n                <plugin>\n                    <artifactId>maven-failsafe-plugin</artifactId>\n                    <version>3.1.2</version>\n                </plugin>\n                <plugin>\n                    <artifactId>maven-gpg-plugin</artifactId>\n                    <version>1.6</version>\n                </plugin>\n                <plugin>\n                    <artifactId>maven-install-plugin</artifactId>\n                    <version>3.1.2</version>\n                </plugin>\n                <plugin>\n                    <artifactId>maven-jar-plugin</artifactId>\n                    <version>3.3.0</version>\n                </plugin>\n                <plugin>\n                    <artifactId>maven-javadoc-plugin</artifactId>\n                    <version>2.10.4</version>\n                </plugin>\n                <plugin>\n                    <artifactId>maven-plugin-plugin</artifactId>\n                    <version>${maven.plugin.plugin.version}</version>\n                </plugin>\n                <plugin>\n                    <artifactId>maven-plugin-report-plugin</artifactId>\n                    <version>${maven.plugin.plugin.version}</version>\n                </plugin>\n                <plugin>\n                    <artifactId>maven-project-info-reports-plugin</artifactId>\n                    <version>3.4.2</version>\n                </plugin>\n                <plugin>\n                    <artifactId>maven-release-plugin</artifactId>\n                    <version>2.5.3</version>\n                </plugin>\n                <plugin>\n                    <artifactId>maven-resources-plugin</artifactId>\n                    <version>3.3.0</version>\n                    <configuration>\n                        <propertiesEncoding>${project.build.sourceEncoding}</propertiesEncoding>\n                    </configuration>\n                </plugin>\n                <plugin>\n                    <artifactId>maven-site-plugin</artifactId>\n                    <version>3.12.1</version>\n                </plugin>\n                <plugin>\n                    <artifactId>maven-source-plugin</artifactId>\n                    <version>3.2.1</version>\n                </plugin>\n                <plugin>\n                    <artifactId>maven-surefire-plugin</artifactId>\n                    <version>2.22.2</version>\n                </plugin>\n                <plugin>\n                    <groupId>com.bluetrainsoftware.maven</groupId>\n                    <artifactId>groovydoc-maven-plugin</artifactId>\n                    <version>2.1</version>\n                </plugin>\n                <plugin>\n                    <groupId>org.codehaus.mojo</groupId>\n                    <artifactId>build-helper-maven-plugin</artifactId>\n                    <version>3.3.0</version>\n                </plugin>\n                <plugin>\n                    <groupId>org.codehaus.mojo</groupId>\n                    <artifactId>codenarc-maven-plugin</artifactId>\n                    <version>0.22-1</version>\n                </plugin>\n            </plugins>\n        </pluginManagement>\n        <plugins>\n            <plugin>\n                <artifactId>maven-enforcer-plugin</artifactId>\n                <executions>\n                    <execution>\n                        <id>enforce-maven</id>\n                        <goals>\n                            <goal>enforce</goal>\n                        </goals>\n                        <configuration>\n                            <rules>\n                                <requireMavenVersion>\n                                    <version>3.3</version>\n                                </requireMavenVersion>\n                            </rules>\n                        </configuration>\n                    </execution>\n                </executions>\n            </plugin>\n            <plugin>\n                <groupId>com.mycila</groupId>\n                <artifactId>license-maven-plugin</artifactId>\n                <version>3.0</version>\n                <configuration>\n                    <aggregate>true</aggregate>\n                    <encoding>UTF-8</encoding>\n                    <excludes>\n                        <exclude>**/jsonschema2pojo-jdk-annotation/**</exclude>\n                        <exclude>**/src/main/java/org/jsonschema2pojo/util/Inflector.java</exclude>\n                    </excludes>\n                    <failIfMissing>true</failIfMissing>\n                    <header>NOTICE</header>\n                    <headerDefinitions>\n                        <headerDefinition>license-plugin-definition.xml</headerDefinition>\n                    </headerDefinitions>\n                    <includes>\n                        <include>**/src/main/java/**</include>\n                        <include>**/src/test/java/**</include>\n                    </includes>\n                    <mapping>\n                        <java>JAVA_STYLE</java>\n                    </mapping>\n                    <skipExistingHeaders>false</skipExistingHeaders>\n                    <strictCheck>true</strictCheck>\n                </configuration>\n                <executions>\n                    <execution>\n                        <phase>process-sources</phase>\n                        <goals>\n                            <goal>format</goal>\n                        </goals>\n                    </execution>\n                </executions>\n            </plugin>\n            <plugin>\n                <artifactId>maven-compiler-plugin</artifactId>\n                <configuration>\n                    <encoding>UTF-8</encoding>\n                    <source>1.8</source>\n                    <target>1.8</target>\n                    <compilerArgs>\n                        <arg>-Xlint</arg>\n                    </compilerArgs>\n                </configuration>\n            </plugin>\n            <plugin>\n                <artifactId>maven-release-plugin</artifactId>\n                <configuration>\n                    <!-- http://jira.codehaus.org/browse/MGPG-9 -->\n                    <mavenExecutorId>forked-path</mavenExecutorId>\n                </configuration>\n            </plugin>\n            <plugin>\n                <artifactId>maven-javadoc-plugin</artifactId>\n                <configuration>\n                    <additionalparam>-Xdoclint:none</additionalparam>\n                </configuration>\n                <executions>\n                    <execution>\n                        <id>attach-javadocs</id>\n                        <goals>\n                            <goal>aggregate-jar</goal>\n                        </goals>\n                    </execution>\n                </executions>\n            </plugin>\n        </plugins>\n    </build>\n\n    <profiles>\n        <profile>\n            <id>release-sign-artifacts</id>\n            <activation>\n                <property>\n                    <name>performRelease</name>\n                    <value>true</value>\n                </property>\n            </activation>\n            <build>\n                <plugins>\n                    <plugin>\n                        <artifactId>maven-gpg-plugin</artifactId>\n                        <executions>\n                            <execution>\n                                <id>sign-artifacts</id>\n                                <phase>verify</phase>\n                                <goals>\n                                    <goal>sign</goal>\n                                </goals>\n                            </execution>\n                        </executions>\n                    </plugin>\n                </plugins>\n            </build>\n        </profile>\n        <profile>\n            <id>release</id>\n            <build>\n                <plugins>\n                    <plugin>\n                        <artifactId>maven-source-plugin</artifactId>\n                        <executions>\n                            <execution>\n                                <id>attach-sources</id>\n                                <goals>\n                                    <goal>jar</goal>\n                                </goals>\n                            </execution>\n                        </executions>\n                    </plugin>\n                </plugins>\n            </build>\n        </profile>\n    </profiles>\n\n    <dependencies>\n        <dependency>\n            <!-- Allows Findbugs annotations in submodules to suppress inaccurate warnings.-->\n            <groupId>com.google.code.findbugs</groupId>\n            <artifactId>annotations</artifactId>\n            <version>1.3.9</version>\n            <scope>compile</scope>\n        </dependency>\n    </dependencies>\n\n    <dependencyManagement>\n        <dependencies>\n            <dependency>\n                <groupId>com.beust</groupId>\n                <artifactId>jcommander</artifactId>\n                <version>1.82</version>\n            </dependency>\n            <dependency>\n                <groupId>com.fasterxml.jackson.core</groupId>\n                <artifactId>jackson-databind</artifactId>\n                <version>${jackson2x.databind.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>com.fasterxml.jackson.dataformat</groupId>\n                <artifactId>jackson-dataformat-yaml</artifactId>\n                <version>${jackson2x.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>com.github.stefanbirkner</groupId>\n                <artifactId>system-rules</artifactId>\n                <version>1.19.0</version>\n                <scope>test</scope>\n            </dependency>\n            <dependency>\n                <groupId>com.google.android</groupId>\n                <artifactId>android</artifactId>\n                <version>4.1.1.4</version>\n            </dependency>\n            <dependency>\n                <groupId>com.google.code.gson</groupId>\n                <artifactId>gson</artifactId>\n                <version>${gson.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>com.google.code.findbugs</groupId>\n                <artifactId>jsr305</artifactId>\n                <version>3.0.2</version>\n            </dependency>\n            <dependency>\n                <groupId>com.squareup.moshi</groupId>\n                <artifactId>moshi</artifactId>\n                <version>${moshi.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>com.google.code.javaparser</groupId>\n                <artifactId>javaparser</artifactId>\n                <version>1.0.11</version>\n            </dependency>\n            <dependency>\n                <groupId>com.sun.codemodel</groupId>\n                <artifactId>codemodel</artifactId>\n                <version>2.6</version>\n            </dependency>\n            <dependency>\n                <groupId>commons-codec</groupId>\n                <artifactId>commons-codec</artifactId>\n                <version>1.17.1</version>\n                <scope>test</scope>\n            </dependency>\n            <dependency>\n                <groupId>commons-io</groupId>\n                <artifactId>commons-io</artifactId>\n                <version>2.17.0</version>\n            </dependency>\n            <dependency>\n                <groupId>commons-lang</groupId>\n                <artifactId>commons-lang</artifactId>\n                <version>2.6</version>\n            </dependency>\n            <dependency>\n                <groupId>org.apache.commons</groupId>\n                <artifactId>commons-text</artifactId>\n                <version>1.12.0</version>\n            </dependency>\n            <dependency>\n                <groupId>org.apache.commons</groupId>\n                <artifactId>commons-lang3</artifactId>\n                <version>3.17.0</version>\n            </dependency>\n            <dependency>\n                <groupId>javax.annotation</groupId>\n                <artifactId>javax.annotation-api</artifactId>\n                <version>1.3.2</version>\n            </dependency>\n            <dependency>\n                <groupId>javax.validation</groupId>\n                <artifactId>validation-api</artifactId>\n                <version>2.0.1.Final</version>\n            </dependency>\n            <dependency>\n                <groupId>jakarta.validation</groupId>\n                <artifactId>jakarta.validation-api</artifactId>\n                <version>3.0.2</version>\n            </dependency>\n            <dependency>\n                <groupId>joda-time</groupId>\n                <artifactId>joda-time</artifactId>\n                <version>2.13.0</version>\n            </dependency>\n            <dependency>\n                <groupId>junit</groupId>\n                <artifactId>junit</artifactId>\n                <version>4.13.2</version>\n                <scope>test</scope>\n            </dependency>\n            <dependency>\n                <groupId>org.slf4j</groupId>\n                <artifactId>slf4j-simple</artifactId>\n                <version>1.7.36</version>\n                <scope>test</scope>\n            </dependency>\n            <dependency>\n                <groupId>com.github.tomakehurst</groupId>\n                <artifactId>wiremock</artifactId>\n                <version>2.27.2</version>\n                <scope>test</scope>\n                <exclusions>\n                    <exclusion>\n                        <artifactId>slf4j-api</artifactId>\n                        <groupId>org.slf4j</groupId>\n                    </exclusion>\n                    <exclusion>\n                        <artifactId>jackson-core</artifactId>\n                        <groupId>com.fasterxml.jackson.core</groupId>\n                    </exclusion>\n                    <exclusion>\n                        <artifactId>jackson-annotations</artifactId>\n                        <groupId>com.fasterxml.jackson.core</groupId>\n                    </exclusion>\n                </exclusions>\n            </dependency>\n            <dependency>\n                <groupId>org.apache.ant</groupId>\n                <artifactId>ant</artifactId>\n                <version>1.10.15</version>\n            </dependency>\n            <dependency>\n                <groupId>org.apache.bval</groupId>\n                <artifactId>bval-jsr</artifactId>\n                <version>2.0.6</version>\n                <scope>test</scope>\n            </dependency>\n            <dependency>\n                <groupId>org.apache.maven</groupId>\n                <artifactId>maven-plugin-api</artifactId>\n                <version>2.2.1</version>\n                <scope>provided</scope>\n            </dependency>\n            <dependency>\n                <groupId>org.apache.maven.plugin-tools</groupId>\n                <artifactId>maven-plugin-annotations</artifactId>\n                <version>${maven.plugin.plugin.version}</version>\n                <scope>provided</scope>\n            </dependency>\n            <dependency>\n                <groupId>org.apache.maven</groupId>\n                <artifactId>maven-project</artifactId>\n                <version>2.2.1</version>\n                <scope>provided</scope>\n            </dependency>\n            <dependency>\n                <groupId>org.apache.maven.shared</groupId>\n                <artifactId>maven-shared-utils</artifactId>\n                <version>3.3.4</version>\n            </dependency>\n            <dependency>\n                <groupId>org.eclipse.jdt.core.compiler</groupId>\n                <artifactId>ecj</artifactId>\n                <version>4.6.1</version>\n                <scope>test</scope>\n            </dependency>\n            <dependency>\n                <groupId>org.hamcrest</groupId>\n                <artifactId>hamcrest-all</artifactId>\n                <version>1.3</version>\n                <scope>test</scope>\n            </dependency>\n            <dependency>\n                <groupId>org.hibernate.validator</groupId>\n                <artifactId>hibernate-validator</artifactId>\n                <version>7.0.5.Final</version>\n                <scope>test</scope>\n            </dependency>\n            <dependency>\n                <groupId>org.glassfish</groupId>\n                <artifactId>jakarta.el</artifactId>\n                <version>4.0.2</version>\n                <scope>test</scope>\n            </dependency>\n            <dependency>\n                <groupId>org.mockito</groupId>\n                <artifactId>mockito-core</artifactId>\n                <version>3.12.4</version>\n                <scope>test</scope>\n            </dependency>\n            <dependency>\n                <groupId>com.thoughtworks.qdox</groupId>\n                <artifactId>qdox</artifactId>\n                <version>2.0.3</version>\n                <scope>test</scope>\n            </dependency>\n            <dependency>\n               <groupId>org.robolectric</groupId>\n               <artifactId>robolectric</artifactId>\n               <version>3.8</version>\n               <scope>test</scope>\n            </dependency>\n            <dependency>\n                <groupId>org.skyscreamer</groupId>\n                <artifactId>jsonassert</artifactId>\n                <version>1.5.3</version>\n                <scope>test</scope>\n            </dependency>\n        </dependencies>\n    </dependencyManagement>\n\n    <repositories>\n        <repository>\n            <id>central</id>\n            <url>https://repo1.maven.org/maven2</url>\n        </repository>\n    </repositories>\n\n</project>\n"
        }
      ]
    }
  ]
}