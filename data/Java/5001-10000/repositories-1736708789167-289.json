{
  "metadata": {
    "timestamp": 1736708789167,
    "page": 289,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "scribejava/scribejava",
      "stars": 5440,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1630859375,
          "content": "# Eclipse specific settings\n.classpath\n.project\n.settings\n\n# IntelliJ Idea settings\n.idea\n*.iml\n\n# Netbeans settings\nnb-configuration.xml\nnbproject\n\n# Binaries\ntarget\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 1.05078125,
          "content": "The MIT License\n\nCopyright (c) 2010 Pablo Fernandez\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 21.2568359375,
          "content": "# Welcome to the home of ScribeJava, the simple OAuth client Java lib!\n\n[![Donate](https://www.paypalobjects.com/en_US/RU/i/btn/btn_donateCC_LG.gif)](https://github.com/scribejava/scribejava/blob/master/donate.md) [![Maven Central](https://maven-badges.herokuapp.com/maven-central/com.github.scribejava/scribejava/badge.svg)](https://maven-badges.herokuapp.com/maven-central/com.github.scribejava/scribejava)\n\n\n# Why use ScribeJava?\n\n### Dead Simple\n\nWho said OAuth/OAuth2 was difficult? Configuring ScribeJava is __so easy your grandma can do it__! check it out:\n\n```java\nOAuthService service = new ServiceBuilder(YOUR_CLIENT_ID)\n                                  .apiSecret(YOUR_CLIENT_SECRET)\n                                  .build(LinkedInApi20.instance());\n```\n\nThat **single line** (added newlines for readability) is the only thing you need to configure ScribeJava with LinkedIn's OAuth API for example.\n\nWorking executable examples are [here](https://github.com/scribejava/scribejava/tree/master/scribejava-apis/src/test/java/com/github/scribejava/apis/examples)\nCommon usage: [example](https://github.com/scribejava/scribejava/blob/master/scribejava-apis/src/test/java/com/github/scribejava/apis/examples/Google20Example.java)\n\n### Threadsafe\n\nHit ScribeJava as hard and with many threads as you like.\n\n### Java 7 compatible\n\nThat's it. You can use it in old environments and in android apps.\nnote: To compile from sources you will need Java 9 or newer\n\n### Async and other HTTP clients\n\nScribeJava support out-of-box several HTTP clients:\n * ning async http client 1.9.x (maven module scribejava-httpclient-ning) [example](https://github.com/scribejava/scribejava/blob/master/scribejava-apis/src/test/java/com/github/scribejava/apis/examples/FacebookAsyncNingExample.java)\n * Async Http Client asynchttpclient 2.x (maven module scribejava-httpclient-ahc) [example](https://github.com/scribejava/scribejava/blob/master/scribejava-apis/src/test/java/com/github/scribejava/apis/examples/Google20AsyncAHCExample.java)\n * OkHttp (maven module scribejava-httpclient-okhttp) [example](https://github.com/scribejava/scribejava/blob/master/scribejava-apis/src/test/java/com/github/scribejava/apis/examples/GitHubAsyncOkHttpExample.java)\n * Apache HttpComponents HttpClient (maven module scribejava-httpclient-apache) [example](https://github.com/scribejava/scribejava/blob/master/scribejava-apis/src/test/java/com/github/scribejava/apis/examples/FacebookAsyncApacheExample.java)\n * Armeria HTTP client (required >= java 8) [example](https://github.com/scribejava/scribejava/blob/master/scribejava-apis/src/test/java/com/github/scribejava/apis/examples/Google20ArmeriaExample.java)\n * any externally created HTTP client [example](https://github.com/scribejava/scribejava/blob/master/scribejava-apis/src/test/java/com/github/scribejava/apis/examples/VkontakteExternalHttpExample.java)\n\n just add corresponding maven modules to your pom\n\n### Supports many flows and additional features\n\n  * [RFC 6749](https://tools.ietf.org/html/rfc6749) The OAuth 2.0 Authorization Framework, [Authorization Code Authorization Grant](https://tools.ietf.org/html/rfc6749#section-4.1), [example](https://github.com/scribejava/scribejava/blob/master/scribejava-apis/src/test/java/com/github/scribejava/apis/examples/Google20Example.java)\n  * [RFC 6749](https://tools.ietf.org/html/rfc6749) The OAuth 2.0 Authorization Framework, [Resource Owner Password Credentials Authorization Grant](https://tools.ietf.org/html/rfc6749#section-4.3)\n  * [RFC 6749](https://tools.ietf.org/html/rfc6749) The OAuth 2.0 Authorization Framework, [Client Credentials Authorization Grant](https://tools.ietf.org/html/rfc6749#section-4.4), [example](https://github.com/scribejava/scribejava/blob/master/scribejava-apis/src/test/java/com/github/scribejava/apis/examples/VkontakteClientCredentialsGrantExample.java)\n  * [RFC 6749](https://tools.ietf.org/html/rfc6749) The OAuth 2.0 Authorization Framework, [Refreshing an Access Token](https://tools.ietf.org/html/rfc6749#section-6), [example](https://github.com/scribejava/scribejava/blob/master/scribejava-apis/src/test/java/com/github/scribejava/apis/examples/Google20Example.java#L77)\n  * [RFC 6750](https://tools.ietf.org/html/rfc6750) The OAuth 2.0 Authorization Framework: Bearer Token Usage\n  * [RFC 7636](https://tools.ietf.org/html/rfc7636) Proof Key for Code Exchange by OAuth Public Clients (PKCE), [example](https://github.com/scribejava/scribejava/blob/master/scribejava-apis/src/test/java/com/github/scribejava/apis/examples/Google20WithPKCEExample.java)\n  * [RFC 7009](https://tools.ietf.org/html/rfc7009) OAuth 2.0 Token Revocation, [example](https://github.com/scribejava/scribejava/blob/master/scribejava-apis/src/test/java/com/github/scribejava/apis/examples/Google20RevokeExample.java)\n  * [RFC 8628](https://tools.ietf.org/html/rfc8628) OAuth 2.0 Device Authorization Grant [example](https://github.com/scribejava/scribejava/blob/master/scribejava-apis/src/test/java/com/github/scribejava/apis/examples/Google20DeviceAuthorizationGrantExample.java)\n  * [RFC 5849](https://tools.ietf.org/html/rfc5849) The OAuth 1.0 Protocol, [example](https://github.com/scribejava/scribejava/blob/master/scribejava-apis/src/test/java/com/github/scribejava/apis/examples/TwitterExample.java)\n\n### Supports all (50+) major 1.0a and 2.0 OAuth APIs out-of-the-box\n\n* Asana (https://asana.com/) [example](https://github.com/scribejava/scribejava/blob/master/scribejava-apis/src/test/java/com/github/scribejava/apis/examples/AsanaExample.java)\n* Automatic (https://www.automatic.com/) [example](https://github.com/scribejava/scribejava/blob/master/scribejava-apis/src/test/java/com/github/scribejava/apis/examples/AutomaticExample.java)\n* AWeber (http://www.aweber.com/) [example](https://github.com/scribejava/scribejava/blob/master/scribejava-apis/src/test/java/com/github/scribejava/apis/examples/AWeberExample.java)\n* Box (https://www.box.com/) [example](https://github.com/scribejava/scribejava/blob/master/scribejava-apis/src/test/java/com/github/scribejava/apis/examples/Box20Example.java)\n* Dataporten (https://docs.dataporten.no/) [example](https://github.com/scribejava/scribejava/blob/master/scribejava-apis/src/test/java/com/github/scribejava/apis/examples/DataportenExample.java)\n* Digg (http://digg.com/) [example](https://github.com/scribejava/scribejava/blob/master/scribejava-apis/src/test/java/com/github/scribejava/apis/examples/DiggExample.java)\n* Discord (https://discordapp.com/) [example](https://github.com/scribejava/scribejava/blob/master/scribejava-apis/src/test/java/com/github/scribejava/apis/examples/DiscordExample.java)\n* Доктор на работе (https://www.doktornarabote.ru/)\n* Dropbox (https://www.dropbox.com/) [example](https://github.com/scribejava/scribejava/blob/master/scribejava-apis/src/test/java/com/github/scribejava/apis/examples/DropboxExample.java)\n* Etsy (https://www.etsy.com/) [example](https://github.com/scribejava/scribejava/blob/master/scribejava-apis/src/test/java/com/github/scribejava/apis/examples/EtsyExample.java)\n* Facebook (https://www.facebook.com/) [example](https://github.com/scribejava/scribejava/blob/master/scribejava-apis/src/test/java/com/github/scribejava/apis/examples/FacebookExample.java), [example with Async Apache HTTP client](https://github.com/scribejava/scribejava/blob/master/scribejava-apis/src/test/java/com/github/scribejava/apis/examples/FacebookAsyncApacheExample.java), [example with Async Ning HTTP client](https://github.com/scribejava/scribejava/blob/master/scribejava-apis/src/test/java/com/github/scribejava/apis/examples/FacebookAsyncNingExample.java)\n* Fitbit (https://www.fitbit.com/) [example](https://github.com/scribejava/scribejava/blob/master/scribejava-apis/src/test/java/com/github/scribejava/apis/examples/FitbitApi20Example.java)\n* Flickr (https://www.flickr.com/) [example](https://github.com/scribejava/scribejava/blob/master/scribejava-apis/src/test/java/com/github/scribejava/apis/examples/FlickrExample.java)\n* Foursquare (https://foursquare.com/) [example](https://github.com/scribejava/scribejava/blob/master/scribejava-apis/src/test/java/com/github/scribejava/apis/examples/Foursquare2Example.java), [example](https://github.com/scribejava/scribejava/blob/master/scribejava-apis/src/test/java/com/github/scribejava/apis/examples/FoursquareExample.java)\n* Frappe (https://github.com/frappe/frappe) [example](https://github.com/scribejava/scribejava/blob/master/scribejava-apis/src/test/java/com/github/scribejava/apis/examples/FrappeExample.java)\n* Freelancer (https://www.freelancer.com/) [example](https://github.com/scribejava/scribejava/blob/master/scribejava-apis/src/test/java/com/github/scribejava/apis/examples/FreelancerExample.java)\n* Genius (http://genius.com/) [example](https://github.com/scribejava/scribejava/blob/master/scribejava-apis/src/test/java/com/github/scribejava/apis/examples/GeniusExample.java)\n* GitHub (https://github.com/) [example](https://github.com/scribejava/scribejava/blob/master/scribejava-apis/src/test/java/com/github/scribejava/apis/examples/GitHubExample.java), [example with OkHttp HTTP client](https://github.com/scribejava/scribejava/blob/master/scribejava-apis/src/test/java/com/github/scribejava/apis/examples/GitHubAsyncOkHttpExample.java)\n* Google (https://www.google.com/) [example](https://github.com/scribejava/scribejava/blob/master/scribejava-apis/src/test/java/com/github/scribejava/apis/examples/Google20Example.java), [example with Async Http Client](https://github.com/scribejava/scribejava/blob/master/scribejava-apis/src/test/java/com/github/scribejava/apis/examples/Google20AsyncAHCExample.java), [example Revoke](https://github.com/scribejava/scribejava/blob/master/scribejava-apis/src/test/java/com/github/scribejava/apis/examples/Google20RevokeExample.java), [example with PKCEE](https://github.com/scribejava/scribejava/blob/master/scribejava-apis/src/test/java/com/github/scribejava/apis/examples/Google20WithPKCEExample.java)\n* HeadHunter ХэдХантер (https://hh.ru/) [example](https://github.com/scribejava/scribejava/blob/master/scribejava-apis/src/test/java/com/github/scribejava/apis/examples/HHExample.java)\n* HiOrg-Server (https://www.hiorg-server.de/) [example](https://github.com/scribejava/scribejava/blob/master/scribejava-apis/src/test/java/com/github/scribejava/apis/examples/HiOrgServerExample.java)\n* Imgur (http://imgur.com/) [example](https://github.com/scribejava/scribejava/blob/master/scribejava-apis/src/test/java/com/github/scribejava/apis/examples/ImgurExample.java)\n* Instagram (https://www.instagram.com/) [example](https://github.com/scribejava/scribejava/blob/master/scribejava-apis/src/test/java/com/github/scribejava/apis/examples/InstagramExample.java)\n* Kaixin 开心网 (http://www.kaixin001.com/) [example](https://github.com/scribejava/scribejava/blob/master/scribejava-apis/src/test/java/com/github/scribejava/apis/examples/Kaixin20Example.java)\n* Kakao (https://kakao.com/) [example](https://github.com/scribejava/scribejava/blob/master/scribejava-apis/src/test/java/com/github/scribejava/apis/examples/KakaoExample.java)\n* Keycloak (https://www.keycloak.org/) [example](https://github.com/scribejava/scribejava/blob/master/scribejava-apis/src/test/java/com/github/scribejava/apis/examples/KeycloakExample.java)\n* LinkedIn (https://www.linkedin.com/) [example](https://github.com/scribejava/scribejava/blob/master/scribejava-apis/src/test/java/com/github/scribejava/apis/examples/LinkedIn20Example.java), [example](https://github.com/scribejava/scribejava/blob/master/scribejava-apis/src/test/java/com/github/scribejava/apis/examples/LinkedInExample.java), [example with custom scopes](https://github.com/scribejava/scribejava/blob/master/scribejava-apis/src/test/java/com/github/scribejava/apis/examples/LinkedInExampleWithScopes.java)\n* Mail.Ru (https://mail.ru/) [example](https://github.com/scribejava/scribejava/blob/master/scribejava-apis/src/test/java/com/github/scribejava/apis/examples/MailruExample.java), [example with Async Ning HTTP Client](https://github.com/scribejava/scribejava/blob/master/scribejava-apis/src/test/java/com/github/scribejava/apis/examples/MailruAsyncExample.java)\n* MediaWiki (https://www.mediawiki.org/) [example](https://github.com/scribejava/scribejava/blob/master/scribejava-apis/src/test/java/com/github/scribejava/apis/examples/MediaWikiExample.java)\n* Meetup (https://www.meetup.com/) [example](https://github.com/scribejava/scribejava/blob/master/scribejava-apis/src/test/java/com/github/scribejava/apis/examples/Meetup20Example.java), [example](https://github.com/scribejava/scribejava/blob/master/scribejava-apis/src/test/java/com/github/scribejava/apis/examples/MeetupExample.java)\n* Microsoft Azure Active Directory (Azure AD) (http://azure.microsoft.com/) [example](https://github.com/scribejava/scribejava/blob/master/scribejava-apis/src/test/java/com/github/scribejava/apis/examples/MicrosoftAzureActiveDirectoryExample.java)\n* Microsoft Azure Active Directory (Azure AD) 2.0 (http://azure.microsoft.com/) [example](https://github.com/scribejava/scribejava/blob/master/scribejava-apis/src/test/java/com/github/scribejava/apis/examples/MicrosoftAzureActiveDirectory20Example.java)\n* Microsoft Live (https://login.live.com/) [example](https://github.com/scribejava/scribejava/blob/master/scribejava-apis/src/test/java/com/github/scribejava/apis/examples/LiveExample.java)\n* Misfit (http://misfit.com/) [example](https://github.com/scribejava/scribejava/blob/master/scribejava-apis/src/test/java/com/github/scribejava/apis/examples/MisfitExample.java)\n* NAVER (http://www.naver.com/) [example](https://github.com/scribejava/scribejava/blob/master/scribejava-apis/src/test/java/com/github/scribejava/apis/examples/NaverExample.java)\n* Odnoklassniki Одноклассники (http://ok.ru/) [example](https://github.com/scribejava/scribejava/blob/master/scribejava-apis/src/test/java/com/github/scribejava/apis/examples/OdnoklassnikiExample.java)\n* Polar (https://www.polar.com/) [example](https://github.com/scribejava/scribejava/blob/master/scribejava-apis/src/test/java/com/github/scribejava/apis/examples/PolarAPIExample.java)\n* Pinterest (https://www.pinterest.com/) [example](https://github.com/scribejava/scribejava/blob/master/scribejava-apis/src/test/java/com/github/scribejava/apis/examples/PinterestExample.java)\n* 500px (https://500px.com/) [example](https://github.com/scribejava/scribejava/blob/master/scribejava-apis/src/test/java/com/github/scribejava/apis/examples/Px500Example.java)\n* Renren (http://renren.com/) [example](https://github.com/scribejava/scribejava/blob/master/scribejava-apis/src/test/java/com/github/scribejava/apis/examples/RenrenExample.java)\n* Salesforce (https://www.salesforce.com/) [example](https://github.com/scribejava/scribejava/blob/master/scribejava-apis/src/test/java/com/github/scribejava/apis/examples/SalesforceExample.java), [example with Async Ning HTTP Client](https://github.com/scribejava/scribejava/blob/master/scribejava-apis/src/test/java/com/github/scribejava/apis/examples/SalesforceNingAsyncExample.java)\n* Sina (http://www.sina.com.cn/ http://weibo.com/login.php) [example](https://github.com/scribejava/scribejava/blob/master/scribejava-apis/src/test/java/com/github/scribejava/apis/examples/SinaWeibo2Example.java), [example](https://github.com/scribejava/scribejava/blob/master/scribejava-apis/src/test/java/com/github/scribejava/apis/examples/SinaWeiboExample.java)\n* Skyrock (http://skyrock.com/) [example](https://github.com/scribejava/scribejava/blob/master/scribejava-apis/src/test/java/com/github/scribejava/apis/examples/SkyrockExample.java)\n* Slack (https://slack.com/) [example](https://github.com/scribejava/scribejava/blob/master/scribejava-apis/src/test/java/com/github/scribejava/apis/examples/SlackExample.java)\n* StackExchange (http://stackexchange.com/) [example](https://github.com/scribejava/scribejava/blob/master/scribejava-apis/src/test/java/com/github/scribejava/apis/examples/StackExchangeExample.java)\n* The Things Network (v1-staging and v2-preview) (https://www.thethingsnetwork.org/) [example v1](https://github.com/scribejava/scribejava/blob/master/scribejava-apis/src/test/java/com/github/scribejava/apis/examples/TheThingsNetworkV1StagingExample.java), [example v2 preview](https://github.com/scribejava/scribejava/blob/master/scribejava-apis/src/test/java/com/github/scribejava/apis/examples/TheThingsNetworkV2PreviewExample.java)\n* Trello (https://trello.com/) [example](https://github.com/scribejava/scribejava/blob/master/scribejava-apis/src/test/java/com/github/scribejava/apis/examples/TrelloExample.java)\n* Tumblr (https://www.tumblr.com/) [example](https://github.com/scribejava/scribejava/blob/master/scribejava-apis/src/test/java/com/github/scribejava/apis/examples/TumblrExample.java)\n* TUT.BY (http://www.tut.by/) [example](https://github.com/scribejava/scribejava/blob/master/scribejava-apis/src/test/java/com/github/scribejava/apis/examples/TutByExample.java)\n* Twitter (https://twitter.com/) [example](https://github.com/scribejava/scribejava/blob/master/scribejava-apis/src/test/java/com/github/scribejava/apis/examples/TwitterExample.java)\n* uCoz (https://www.ucoz.com/) [example](https://github.com/scribejava/scribejava/blob/master/scribejava-apis/src/test/java/com/github/scribejava/apis/examples/UcozExample.java)\n* Viadeo (http://viadeo.com/) [example](https://github.com/scribejava/scribejava/blob/master/scribejava-apis/src/test/java/com/github/scribejava/apis/examples/ViadeoExample.java)\n* VK ВКонтакте (http://vk.com/) [example](https://github.com/scribejava/scribejava/blob/master/scribejava-apis/src/test/java/com/github/scribejava/apis/examples/VkontakteExample.java), [example Client Credentials Grant](https://github.com/scribejava/scribejava/blob/master/scribejava-apis/src/test/java/com/github/scribejava/apis/examples/VkontakteClientCredentialsGrantExample.java), [example with External HTTP Client](https://github.com/scribejava/scribejava/blob/master/scribejava-apis/src/test/java/com/github/scribejava/apis/examples/VkontakteExternalHttpExample.java)\n* Wunderlist (https://www.wunderlist.com/) [example](https://github.com/scribejava/scribejava/blob/master/scribejava-apis/src/test/java/com/github/scribejava/apis/examples/WunderlistExample.java)\n* Xero (https://www.xero.com/) [example](https://github.com/scribejava/scribejava/blob/master/scribejava-apis/src/test/java/com/github/scribejava/apis/examples/XeroExample.java)\n* XING (https://www.xing.com/) [example](https://github.com/scribejava/scribejava/blob/master/scribejava-apis/src/test/java/com/github/scribejava/apis/examples/XingExample.java)\n* Yahoo (https://www.yahoo.com/) [example](https://github.com/scribejava/scribejava/blob/master/scribejava-apis/src/test/java/com/github/scribejava/apis/examples/Yahoo20Example.java), [example](https://github.com/scribejava/scribejava/blob/master/scribejava-apis/src/test/java/com/github/scribejava/apis/examples/YahooExample.java)\n* check the [examples folder](https://github.com/scribejava/scribejava/tree/master/scribejava-apis/src/test/java/com/github/scribejava/apis/examples)\n\n### Small and modular\n\nScribeJava's code is small (about 1k LOC) and simple to understand. No smart-ass or \"clever\" hacks here.\nYou can use only 'core' or 'with apis' maven modules\n\n### Android-Ready\n\nWorks out of the box with android(TM) applications.\n\n### Stable & bulletproof\n\nGood test coverage to keep you safe from harm.\n\nWhen something bad actually happens, ScribeJava's meaningful error messages will tell you exactly what went wrong, when and where.\n\n### Pull it from Maven Central!\n\nYou can pull ScribeJava from the central maven repository, just add these to your __pom.xml__ file:\n\n```xml\n<dependency>\n    <groupId>com.github.scribejava</groupId>\n    <artifactId>scribejava-apis</artifactId>\n    <version>8.3.3</version>\n</dependency>\n```\n\nAnd in case you need just core classes (that's it, without any external API (FB, VK, GitHub, Google etc) specific code), you could pull just 'core' artifact.\n```xml\n<dependency>\n    <groupId>com.github.scribejava</groupId>\n    <artifactId>scribejava-core</artifactId>\n    <version>8.3.3</version>\n</dependency>\n```\n\n## How can I help ScribeJava\n\nFirst of all, Pull Requests are welcome, the second option is [donations](https://github.com/scribejava/scribejava/blob/master/donate.md).\n\n## When will ScribeJava support XXX (new RFC, custom functionality, new API etc.)\n\nWhen you will send the pull request. That's the way for a majority of changes here.\nOr you can ask someone to make the paid job for you.\nIn some cases, when I'm interested in changes (technically or financially), I can implement the request myself.\n\n## Paid consulting\nIf you or your business depends on the Scribejava and you need any specific improvement or new feature not currently implemented in the Scribejava, consider contacting me about a paid job.\n\n## Getting started in less than 2 minutes\n\nCheck the [Getting Started](https://github.com/scribejava/scribejava/wiki/getting-started) page and start rocking! Please Read the [FAQ](https://github.com/scribejava/scribejava/wiki/faq) before creating an issue :)\n\nSome useful info and answers you can find on the [wiki](https://github.com/scribejava/scribejava/wiki)\n\nAlso, remember to read the [fantastic tutorial](http://akoskm.github.io/2015/07/31/twitter-sign-in-for-web-apps.html) that [@akoskm](https://twitter.com/akoskm) wrote to easily integrate a server side app with an API (twitter in this case).\n\n## Questions?\n\nFeel free to drop us an email or create issue right here on github.com\n\n## Forks\n\nIf you have a useful fork that should be listed there please contact us\n"
        },
        {
          "name": "changelog",
          "type": "blob",
          "size": 16.703125,
          "content": "[8.3.3]\n * update dependencies, including security updates in libraries\n\n[8.3.2]\n * minor fixes and enhances\n * update dependencies\n * while using async HTTP client, you could miss some Throwables, now they will be thrown\n\n[8.3.1]\n * fix java.lang.NoClassDefFoundError for non-java8 runtimes (e.g. Android 7.1.1)\n   (thanks to https://github.com/ChristopherGittner)\n\n[8.3.0]\n * add Instagram (https://www.instagram.com/) API (thanks to https://github.com/faent)\n * add getErrorMessage method to FacebookAccessTokenErrorResponse. Should be used instead of general getMessage method\n   from the parent Exception\n\n[8.2.0]\n * add ScopeBuilder to easily specify multiple scopes while requesting OAuth2.0 Access Tokens\n * make Base64 en/de-coding not dependent from java8 implementation (use three optional implementation\n    (internal java 8+, Apache Commons Codec, JAXB) detected in runtime) (thanks to https://github.com/CodingFabian)\n * implement possibility to add extra parameters to Access Token Request\n    (AccessTokenRequestParams#*ExtraParameters methods), https://github.com/scribejava/scribejava/issues/980\n    (thanks to https://github.com/pmorch)\n\n[8.1.0]\n * add raw Response (with HTTP response code and body) as member to the OAuth2AccessTokenErrorResponse\n * add possibility to set \"\" (empty string) as apiSecret\n * add Slack API (https://slack.com/) (thanks to https://github.com/petrkopotev)\n\n[8.0.0]\n * add Kakao API (https://kakao.com/) (thanks to https://github.com/v0o0v)\n * support chunks in JDKHttpClient's Multipart (thanks to https://github.com/eos1d3)\n * add support for OAuth 2.0 Device Authorization Grant (RFC 8628) (thanks to https://github.com/rebarbora-mckvak)\n * update Google API URLs\n\n[7.1.1]\n * add Proxy support (via config's option) to internal JDKHttpClient (thanks to https://github.com/bjournaud)\n * fix typo (change \"Verfier\" to \"Verifier\") (thanks to https://github.com/afkbrb)\n * fix Multipart support in JDKHttpClient (thanks to https://github.com/eos1d3)\n\n[7.0.0]\n * Add Polar API (https://www.polar.com/) (thanks to https://github.com/vidi42)\n * make Response accept resources to autoclose and autoclose it (thanks to https://github.com/drei01)\n * fix url encoding in POST payload (it's needed for 'application/x-www-form-urlencoded' Content-Type)\n     + unit tests (thanks to https://github.com/max904-github)\n * Add Armeria HTTP client (thanks to https://github.com/max904-github)\n\n[6.9.0]\n * Add Xero API (https://www.xero.com/) (thanks to https://github.com/SidneyAllen)\n\n[6.8.1]\n * make Response implements Closeable (thanks to https://github.com/omaric)\n * fix Type resolution for builder pattern in ServiceBuilderOAuth10a (thanks to https://github.com/mgyucht)\n * fix no Content-length errors (thanks to https://github.com/mikita-herasiutsin and https://github.com/iankurverma)\n\n[6.8.0]\n * Add debug output to OAuth2Service (thanks to https://github.com/rbarbey)\n * Add Dropbox API (https://www.dropbox.com/) (thanks to https://github.com/petrkopotev)\n\n[6.7.0]\n * Add OAuth2 support for Meetup.com (thanks to https://github.com/stevedes77)\n * upgrade okhttp to 4.0.1 and security fix for jackson-databind 2.9.9.1\n\n[6.6.3]\n * fix NPE for OpenId providers\n\n[6.6.2]\n * add PMD checks on compile\n * add all OAuth error codes from supported RFCs (incl. \"invalid_token\") (thanks to https://github.com/echorebel)\n * Update LinkedIn Example to API v2 (thanks to https://github.com/peternees)\n * switch to jackson dependency to parse json responses (thanks to https://github.com/galimru)\n\n[6.5.1]\n * cleanup deprecates methods\n\n[6.5.0]\n * separate OAuth1.0a and OAuth2.0 ServiceBuilders,\n   introduce AuthorizationUrlBuilder (along with deprecation of AuthorizationUrlWithPKCE)\n   add possibility to provide different scopes for each Access Token request\n * upgrade Facebook API from v2.11 to v3.2\n * upgrade VkontakteApi from 5.73 to 5.92\n\n[6.4.1]\n * support TLS 1.3 in JDK 11 for Salesforce\n * fix NPE in Apache HTTP client in case of empty body in HTTP response (e.g. with 204 response code)\n    (thanks to https://github.com/SainagNeelamPatnaik)\n * separate OAuth1.0a and OAuth2.0 classes\n\n[6.3.0]\n * fix Muplipart request model and implement it for a jdk HTTP client (thanks to https://github.com/NTPape)\n * remove any Google+ mention (switch to clean Google OAuth2) (thanks to https://github.com/fvasco)\n * fix Microsoft Azure AD v1.0 and v2.0 (thanks to https://github.com/kenpusney and https://github.com/oscararias)\n * add new API Asana (https://asana.com/) (thanks to https://github.com/joestazak)\n * state param should be used only for authorization url generation, for v2 only, for Authorization Code Grant only,\n   and it should be set per request, not per created OAuthService\n\n[6.2.0]\n * add new API Microsoft Azure Active Directory (Azure AD) 2.0\n    (thanks to https://github.com/rzukow and https://github.com/dgrudenic)\n\n[6.1.0]\n * add new API Keycloak (https://www.keycloak.org/) (thanks to https://github.com/JureZelic)\n * add new API Discord (https://discordapp.com/) (thanks to https://github.com/Jokuni)\n\n[6.0.0]\n * make redirect_uri optional while Access Token requesting on OAuth 2.0 (thanks to https://github.com/computerlove)\n * switch to java 9+ (from java 7 only) for compilation. Runtime is still java 7+.\n    Complement README with links and RFC descriptions.\n * switch OAuth2 Bearer Token Usage from enum OAuth2SignatureType to interface BearerSignature to be extensible\n * add new API Wunderlist (https://www.wunderlist.com/) (thanks to https://github.com/M-F-K)\n\n[5.6.0]\n * remove support for obsolete NetEase (http://www.163.com/) and sohu 搜狐 (http://www.sohu.com/)\n    (thanks to https://github.com/zawn)\n * add Multipart functionality to JDK Http Client (thanks to https://github.com/eos1d3)\n * switch OAuth2 ClientAuthenticationType from enum to interface ClientAuthentication to be extensible according to\n   https://tools.ietf.org/html/rfc6749#section-2.3.2 (thanks to https://github.com/zawn)\n * add RuntimeException processing in async http clients (delivered to onError callbacks)\n    (thanks to https://github.com/jochen314)\n * check 200 status code from response in OAuth2AccessTokenExtractor (thanks to https://github.com/jochen314)\n * fix case sensitive Http Headers comparison and sending Content-Type header along with content-type\n    (thanks to https://github.com/marnix)\n * add HiOrg-Server (https://www.hiorg-server.de/) API (thanks to https://github.com/MartinBoehmer)\n\n[5.5.0]\n * fix error parsing for Fitbit (thanks to https://github.com/danmana)\n * optimize debug log performance impact on prod in OAuth1 and fix\n   NoClassDefFoundError on Android device with SDK 18 and lower (thanks to https://github.com/arcao)\n * add new API - MediaWiki (https://www.mediawiki.org/) (thanks to https://github.com/lucaswerkmeister)\n\n[5.4.0]\n * fix missing support for scope for refresh_token grant_type (thanks to https://github.com/tlxtellef)\n * add email field to VKOAuth2AccessToken (thanks to https://github.com/grouzen)\n * add new API - Automatic (https://www.automatic.com/) (thanks to https://github.com/ramsrib)\n * add new API - Fitbit (https://www.fitbit.com/)\n    (thanks to https://github.com/JustinLawler and https://github.com/alexthered)\n * deprecate OAuthConfig\n * OAuth1.0: send \"oob\" instead of null callback while requesting RequestToken (thanks to https://github.com/Rafaelsk)\n\n[5.3.0]\n * fix Salesforce API (thanks to https://github.com/jhorowitz-firedrum)\n * remove 'final' from methods in OAuth[10a|20]Service to allow mocking it\n * fix Pinterest API (thanks to https://github.com/sschwieb)\n * add Yahoo2 API (thanks to https://github.com/javatestcase)\n * fix Tumblr urls, convert to https (thanks to https://github.com/highthunder)\n * fix: allow spaces in scope param in OAuth2Accesstoken response\n * add required param version to VK ВКонтакте (http://vk.com/) urls\n\n[5.2.0-java7again]\n * allow 'null' as callback. It's an optional parameter. Remove \"oob\" as default\n    (thanks to https://github.com/massongit)\n * java7 compatible again!\n\n[5.1.0]\n * drop optional dependency on Apache commons-codec\n * add API - Dataporten (https://docs.dataporten.no/) (thanks to https://github.com/xibriz)\n * add API - Microsoft Azure Active Directory (Azure AD) (thanks to https://github.com/kaushalmall)\n * fix LinkedInApi20 (thanks to https://github.com/jhorowitz-firedrum)\n\n[5.0.0]\n * drop Java 7 backward compatibility support, become Java 8 only (was reverted in v5.2.0-java7again)\n * add JSON token extractor for OAuth 1.0a (thanks to https://github.com/evstropovv)\n * add new API - uCoz (https://www.ucoz.com/) (thanks to https://github.com/evstropovv)\n * add PKCE (RFC 7636) support (Proof Key for Code Exchange by OAuth Public Clients)\n    (thanks for suggesting to https://github.com/dieseldjango)\n * switch to use HTTP Basic Authorization by default in requests with need of\n   (2.3.  Client Authentication) https://tools.ietf.org/html/rfc6749#section-2.3 Can be overrided in API class\n * add support for client_credentials grant type (thanks to https://github.com/vivin)\n * add support for RFC 7009 OAuth 2.0 Token Revocation (thanks to https://github.com/vivin)\n * add OAuth2Service signRequest method accepting just String, not OAuth2 Access Token Object.\n   Remove signRequest from abstract OAuthService. 2.0 and 1.0a will be a bit more different now.\n * drop toString method from *Tokens to prevent leak of sensible data (token ans secrets)\n    (thanks to https://github.com/rcaa)\n * add Apache HttpComponents HttpClient support in separate module (thanks to https://github.com/sschwieb)\n * add support for appsecret_proof in Facebook\n * update Facebook v2.8 -> v2.11\n    (version can be configured while constructing OAuthService - use FacebookApi.customVersion(\"2.11\"))\n\n[4.2.0]\n * DELETE in JdkClient permits, but not requires payload (thanks to https://github.com/miguelD73)\n * add new API - Frappe (https://github.com/frappe/frappe) (thanks to https://github.com/revant)\n * add new API - Etsy (https://www.etsy.com/) (thanks to https://github.com/efekocabas)\n\n[4.1.2]\n * LinkedIn use Header to sign OAuth2 requests\n * upgrade ServiceBuilder to check apiKey preconditions compile-time (not run-time)\n * update Live API (thanks to https://github.com/typhoon17)\n\n[4.1.1]\n * omit the client_secret parameter if it is an empty string while refreshing token\n    (thanks to https://github.com/KungfuPancake)\n * allow perms to be specified in Flickr Api (read, write, or delete) (thanks to https://github.com/rogerhu)\n * OdnoklassnikiService should consider params in a body while signing the request\n    (thanks to https://github.com/MrNeuronix)\n * do not open OutputStream for output while sending empty body in HTTP requests in the default JDK Http client\n\n[4.1.0]\n * make client_secret optional in OAuth2 while requesting AccessToken\n    (if set to null, it's not required by OAuth2 specs)\n * move OAuth1 SignatureType from ServiceBuilder to API\n * add body for PATCH HTTP method\n * make addOAuthParams appendSignature methods protected in OAuth10aService (to override them in case of need)\n    (thanks to https://github.com/vivin)\n\n[4.0.0]\n * Remove OAuthRequestAsync, just OAuthRequest. Request should know about sync vs async.\n    Move default Http engine to JDKHttpClient.\n * introduce SignatureType for OAuth2.0 to implement Bearer signing for the requests\n * switch Google, GitHub, Facebook OAuth2.0 oauth requests signing to more secured recommended variant\n    (GET-param -> header Bearer)\n * introduce custom nonstandard Facebook AccessTokenErrorResponse\n\n[3.4.1]\n * Drop deprecated methods\n * Move doktornarabote.ru urls to https (thanks to https://github.com/ezibrov)\n\n[3.4.0]\n * uncouple OAuthRequest and Service. OAuthRequest shouldn't know anything about OAuthservice.\n   You don't need OAuthService to create OAuthRequest anymore. Async request should be sent via OAuthService method.\n * add support for byte[] and File (async only) payload in OAuth Requests (thanks to https://github.com/keijohyttinen)\n * add support for  HTTP verbs (thanks to https://github.com/keijohyttinen)\n * add OkHttp http client support (thanks to https://github.com/arcao)\n * add default HTTP client configs\n    (to use like 'new ServiceBuilder().httpClientConfig(OkHttpHttpClientConfig.defaultConfig())')\n * you can use your own impl of AsyncHttpClient\n\n[3.3.0]\n * update Facebook v2.6 -> v2.8\n * add The Things Network API (v1-staging and v2-preview) (thanks to https://github.com/jpmeijers)\n * add Box (thanks to https://github.com/MclaughlinSteve)\n * fix: OAuth20Service::refreshAccessToken should use RefreshTokenEndpoint, not AccessTokenEndpoint\n    (thanks to https://github.com/vivin)\n * move signRequest method to OAuthService (common for OAuth1 and OAuth2) (thanks to https://github.com/apomelov)\n * drop deprecated setConnectionKeepAlive method\n\n[3.2.0]\n * Add Naver API (thanks to chooco)\n * handle OAuth2 error response for Issuing an Access Token (thanks to juherr)\n\n[3.1.0]\n * fix OdnoklassnikiServiceImpl signature, params for hash must be sorted in lexicographic order,\n    see http://new.apiok.ru/dev/methods/\n * add posibility to use externally created http client\n * make ScribeJava compilable under jdk7 (checkstyle downgraded for jdk 1.7)\n * add travis CI (check [oracle|open]jdk7 oraclejdk8)\n\n[3.0.0]\n * create abstract HTTP Client layer to support different HTTP clients as plugins\n    (AHC and Ning support becames maven submodules)\n * remove changing global JVM property http.keepAlive, deprecate controlling this property inside of ScribeJava\n    (thanks to wldaunfr and rockihack)\n\n[2.8.1]\n * add Salesforce sandbox API support\n\n[2.8.0]\n * add Salesforce API\n * update Linked In API\n\n[2.7.3]\n * FIX: ScribeJava shouldn't require all async http client provider to be on the classpath if using only one of them\n\n[2.7.2]\n * FIX: ScribeJava shouldn't require any async http client provider to be on the classpath (neither ning neither AHC)\n\n[2.7.1]\n * do not hide checked IOException in unchecked IllegalArgumentException\n\n[2.7.0]\n * make http async client implementation be more pluggable\n * add async-http-client 2.0 support (thanks to Sai Chandrasekharan https://github.com/saichand)\n * add Misfit (http://misfit.com/) API\n * implement async version getting Request Token for OAuth 1.0a\n\n[2.6.0]\n * simplify async/sync usages\n * add optional \"User-Agent\" config option to use while making http calls\n * refactor usage of grant_type [authorization_code|refresh_token|password|etc]\n * add Genius.com API authentication (OAuth2)\n * fix GitHub API\n * standardize authorization url generation for OAuth2\n * update Facebook to v2.6\n * cleanup: drop old APIs without Examples and with outdated domains\n\n[2.5.3]\n * fix - do not send two Content-Type header in async requests\n * improve OK example\n\n[2.5.2]\n * add Google Async Exmaple (with bugfix for it to work)\n * add OSGI manifest metadata\n * apiSecret is not mandatory parameter in config\n    (to use on client sides and other flows without need of the API secret)\n * implement OAuth2 Authorization Response parsing in the OAuth20Service\n    (to extract code and state from url, useful for Android)\n * update ok.ru API urls, add 'state' support, add refresh token to the example\n\n[2.4.0]\n * APIs 2.0 can define different endpoints for access token and for refresh token (the same urls by default)\n * mark Facebook doesn't support refresh token by throwing UnsupportedOperationException\n * make JSON Access Token Extractor be the default for OAuth 2.0 (according to RFC 6749)\n * drop Google OAuth 1.0 support (OAuth 1.0 was officially deprecated by Google)\n * add response_type parameter to the ServiceBuilder/OAuthConfig to use not only \"code\" for authorization code\n * remove Verifier object, we just need Strings, 'code' for OAuth2 and 'oauthVerifier' for OAuth1\n * default HTTP verb for OAuth 2.0 Access Token EndPoint is POST (http://tools.ietf.org/html/rfc6749#section-3.2)\n * send missed headers in async version (as in sync)\n * support 'password' grant_type for OAuth 2.0\n\n[2.3.0]\n * Stack Exchange authentication via OAuth 2.0 (stackoverflow.com, askubuntu.com, etc.).\n * Support response in gzip.\n * differentiate OAuth1 Access token, OAuth 1 Request Token and OAuth 2 Access token, make them conforms RFCs\n * OAuth 1 APIs can choose whether to pass empty oauth_token param in requests\n * Support refresh tokens for OAuth2 (very thanks to P. Daniel Tyreus https://github.com/pdtyreus)\n\n[2.2.2]\n * make all APIs to be extentable (have protected constructors, useful for testing)\n\n[2.2.1]\n * Update Facebook API v2.2 -> v2.5\n * Update hh.ru urls\n\n[2.2.0]\n * Let GoogleApi20 supports OOB\n * Updated Imgur API to OAuth2\n * force not to instantiate stateless APIs. Use provided singletons\n * reduce OAuthService abstraction for OAuth1 and OAuth2. Separate OAuth(1|2)Services\n\n[2.1.0]\n * add Pinterest API\n\n[2.0.1]\n * small code enhancements\n\n[2.0]\n * merge back SubScribe fork to the ScribeJava\n\nfor previous changes see\nv1-changelog - changelog for 1.x version\nv2pre-changelog - changelog for SubScribe fork\n"
        },
        {
          "name": "checkstyle.xml",
          "type": "blob",
          "size": 5.3837890625,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE module PUBLIC\n    \"-//Puppy Crawl//DTD Check Configuration 1.3//EN\"\n    \"http://www.puppycrawl.com/dtds/configuration_1_3.dtd\">\n\n<module name=\"Checker\">\n    <property name=\"charset\" value=\"UTF-8\"/>\n    <module name=\"TreeWalker\">\n        <module name=\"AnnotationLocation\">\n            <property name=\"allowSamelineSingleParameterlessAnnotation\" value=\"false\"/>\n        </module>\n        <module name=\"AnnotationUseStyle\"/>\n        <module name=\"MissingDeprecated\"/>\n        <module name=\"MissingOverride\"/>\n        <module name=\"AvoidNestedBlocks\">\n            <property name=\"allowInSwitchCase\" value=\"true\"/>\n        </module>\n        <module name=\"LeftCurly\">\n            <property name=\"ignoreEnums\" value=\"false\"/>\n        </module>\n        <module name=\"NeedBraces\"/>\n        <module name=\"RightCurly\"/>\n        <module name=\"HideUtilityClassConstructor\"/>\n        <module name=\"OneTopLevelClass\"/>\n        <module name=\"VisibilityModifier\"/>\n        <module name=\"CovariantEquals\"/>\n        <module name=\"DeclarationOrder\"/>\n        <module name=\"DefaultComesLast\"/>\n        <module name=\"EmptyStatement\"/>\n        <module name=\"EqualsAvoidNull\"/>\n        <module name=\"EqualsHashCode\"/>\n        <module name=\"ExplicitInitialization\"/>\n        <module name=\"FinalLocalVariable\"/>\n        <module name=\"IllegalInstantiation\">\n            <property name=\"classes\" value=\"java.lang.Boolean\"/>\n        </module>\n        <module name=\"IllegalTokenText\">\n            <property name=\"tokens\" value=\"NUM_INT,NUM_LONG\"/>\n            <property name=\"format\" value=\"^0[^lx]\"/>\n            <property name=\"ignoreCase\" value=\"true\"/>\n        </module>\n        <module name=\"IllegalType\">\n            <property name=\"illegalClassNames\" value=\"java.util.HashSet, java.util.HashMap, java.util.TreeSet, java.util.TreeMap\"/>\n        </module>\n        <module name=\"InnerAssignment\"/>\n        <module name=\"MissingSwitchDefault\"/>\n        <module name=\"MultipleVariableDeclarations\"/>\n        <module name=\"NoFinalizer\"/>\n        <module name=\"OneStatementPerLine\"/>\n        <module name=\"OverloadMethodsDeclarationOrder\"/>\n        <module name=\"PackageDeclaration\"/>\n        <module name=\"SimplifyBooleanExpression\"/>\n        <module name=\"SimplifyBooleanReturn\"/>\n        <module name=\"StringLiteralEquality\"/>\n        <module name=\"UnnecessaryParentheses\"/>\n        <module name=\"AvoidStarImport\"/>\n        <module name=\"IllegalImport\">\n            <property name=\"illegalPkgs\" value=\"sun, junit.framework\"/>\n        </module>\n        <module name=\"RedundantImport\"/>\n        <module name=\"UnusedImports\"/>\n        <module name=\"ArrayTypeStyle\"/>\n        <module name=\"CommentsIndentation\"/>\n        <!-- Comparing this with null (i.e. this == null and this != null): -->\n        <module name=\"DescendantToken\">\n            <property name=\"tokens\" value=\"EQUAL,NOT_EQUAL\"/>\n            <property name=\"limitedTokens\" value=\"LITERAL_THIS,LITERAL_NULL\"/>\n            <property name=\"maximumNumber\" value=\"1\"/>\n            <property name=\"maximumDepth\" value=\"1\"/>\n            <property name=\"sumTokenCounts\" value=\"true\"/>\n        </module>\n        <!--The initialiser in for performs no setup (where a while statement could be used instead): -->\n        <module name=\"DescendantToken\">\n            <property name=\"tokens\" value=\"FOR_INIT\"/>\n            <property name=\"limitedTokens\" value=\"EXPR\"/>\n            <property name=\"minimumNumber\" value=\"1\"/>\n        </module>\n        <module name=\"OuterTypeFilename\"/>\n        <module name=\"UpperEll\"/>\n        <module name=\"ModifierOrder\"/>\n        <module name=\"RedundantModifier\"/>\n        <module name=\"ClassTypeParameterName\"/>\n        <module name=\"ConstantName\"/>\n        <module name=\"InterfaceTypeParameterName\"/>\n        <module name=\"LocalFinalVariableName\"/>\n        <module name=\"LocalVariableName\"/>\n        <module name=\"MemberName\"/>\n        <module name=\"MethodName\"/>\n        <module name=\"MethodTypeParameterName\"/>\n        <module name=\"PackageName\">\n            <property name=\"format\" value=\"^[a-z]+(\\.[a-z][a-z0-9]*)*$\"/>\n        </module>\n        <module name=\"ParameterName\"/>\n        <module name=\"StaticVariableName\"/>\n        <module name=\"TypeName\"/>\n        <module name=\"OuterTypeNumber\"/>\n        <module name=\"GenericWhitespace\"/>\n        <module name=\"MethodParamPad\"/>\n        <!--<module name=\"ParenPad\"/> disabled due to the bug in the NetBeans (nb-javac)\n        \"try with resources formatting adding extra space\" https://github.com/apache/netbeans/issues/3720\n        Let's make our life easier, just skip this check temporarily -->\n        <module name=\"TypecastParenPad\"/>\n        <module name=\"WhitespaceAfter\"/>\n        <module name=\"WhitespaceAround\">\n            <property name=\"tokens\" value=\"ASSIGN\"/>\n        </module>\n    </module>\n    <module name=\"LineLength\">\n        <property name=\"max\" value=\"120\"/>\n        <property name=\"ignorePattern\" value=\"^ *\\* *[^ ]+$\"/>\n    </module>\n    <module name=\"NewlineAtEndOfFile\">\n        <property name=\"lineSeparator\" value=\"lf\"/>\n    </module>\n    <module name=\"UniqueProperties\"/>\n    <!-- the check to find trailing whitespace at the end of a line: -->\n    <module name=\"RegexpSingleline\">\n        <!-- \\s matches whitespace character, $ matches end of line. -->\n        <property name=\"format\" value=\"\\s+$\"/>\n    </module>\n    <module name=\"FileTabCharacter\">\n        <property name=\"eachLine\" value=\"true\"/>\n    </module>\n</module>\n"
        },
        {
          "name": "donate.md",
          "type": "blob",
          "size": 0.45703125,
          "content": "You can now help ScribeJava not only by Pull Requests.\n\nYou can use [https://www.paypal.com/paypalme/algr453](https://www.paypal.com/paypalme/algr453) directly.\n\nThanks in advance!\n\nps.If you can't for any reason use above method, let me know, we will find the way out.\n\nHall of fame \"Donors\" (in alphabetical order, if you don't want to be here, just put a note along with the donation):<br/>\n1.Douglas Ross from USA<br/>\n2.Ian Strachan<br/>\n3.Your name can be here.\n"
        },
        {
          "name": "pmd.xml",
          "type": "blob",
          "size": 7.916015625,
          "content": "<?xml version=\"1.0\"?>\n<ruleset name=\"ScribeJava PMD ruleset\"\n         xmlns=\"http://pmd.sourceforge.net/ruleset/2.0.0\"\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://pmd.sourceforge.net/ruleset/2.0.0 http://pmd.sourceforge.net/ruleset_2_0_0.xsd\">\n\n    <description>\n        This ruleset defines the PMD rules for project \"ScribeJava\".\n    </description>\n\n    <rule ref=\"category/java/bestpractices.xml/AvoidPrintStackTrace\" />\n    <rule ref=\"category/java/bestpractices.xml/MissingOverride\" />\n    <rule ref=\"category/java/bestpractices.xml/OneDeclarationPerLine\">\n        <properties>\n            <property name=\"strictMode\">true</property>\n        </properties>\n    </rule>\n    <rule ref=\"category/java/bestpractices.xml/SwitchStmtsShouldHaveDefault\" />\n    <rule ref=\"category/java/bestpractices.xml/SystemPrintln\" />\n    <rule ref=\"category/java/bestpractices.xml/UnusedLocalVariable\" />\n    <rule ref=\"category/java/bestpractices.xml/UseAssertNullInsteadOfAssertTrue\" />\n    <rule ref=\"category/java/bestpractices.xml/UseAssertSameInsteadOfAssertTrue\" />\n    <rule ref=\"category/java/bestpractices.xml/UseAssertTrueInsteadOfAssertEquals\" />\n    <rule ref=\"category/java/bestpractices.xml/UseCollectionIsEmpty\" />\n    <rule ref=\"category/java/bestpractices.xml/UseTryWithResources\" />\n\n    <rule ref=\"category/java/codestyle.xml/AvoidDollarSigns\" />\n    <rule ref=\"category/java/codestyle.xml/AvoidProtectedFieldInFinalClass\" />\n    <rule ref=\"category/java/codestyle.xml/AvoidProtectedMethodInFinalClassNotExtending\" />\n    <rule ref=\"category/java/codestyle.xml/BooleanGetMethodName\">\n        <properties>\n            <property name=\"checkParameterizedMethods\">true</property>\n        </properties>\n    </rule>\n    <rule ref=\"category/java/codestyle.xml/ControlStatementBraces\" />\n    <rule ref=\"category/java/codestyle.xml/ExtendsObject\" />\n    <rule ref=\"category/java/codestyle.xml/FieldNamingConventions\" />\n    <rule ref=\"category/java/codestyle.xml/ForLoopShouldBeWhileLoop\" />\n    <rule ref=\"category/java/codestyle.xml/FormalParameterNamingConventions\" />\n    <rule ref=\"category/java/codestyle.xml/IdenticalCatchBranches\" />\n    <rule ref=\"category/java/codestyle.xml/LocalVariableNamingConventions\" />\n    <rule ref=\"category/java/codestyle.xml/MethodNamingConventions\" />\n    <rule ref=\"category/java/codestyle.xml/NoPackage\" />\n    <rule ref=\"category/java/codestyle.xml/PackageCase\" />\n    <rule ref=\"category/java/codestyle.xml/UnnecessaryAnnotationValueElement\" />\n    <rule ref=\"category/java/codestyle.xml/UnnecessaryConstructor\" />\n    <rule ref=\"category/java/codestyle.xml/UnnecessaryFullyQualifiedName\" />\n    <rule ref=\"category/java/codestyle.xml/UnnecessaryImport\" />\n    <rule ref=\"category/java/codestyle.xml/UnnecessaryModifier\" />\n    <rule ref=\"category/java/codestyle.xml/UnnecessaryReturn\" />\n    <rule ref=\"category/java/codestyle.xml/UselessParentheses\" />\n    <rule ref=\"category/java/codestyle.xml/UselessQualifiedThis\" />\n    <rule ref=\"category/java/design.xml/AbstractClassWithoutAnyMethod\" />\n    <rule ref=\"category/java/design.xml/AvoidThrowingNewInstanceOfSameException\" />\n    <rule ref=\"category/java/design.xml/CollapsibleIfStatements\" />\n    <rule ref=\"category/java/design.xml/DoNotExtendJavaLangError\" />\n    <rule ref=\"category/java/design.xml/LogicInversion\" />\n    <rule ref=\"category/java/design.xml/SimplifiedTernary\" />\n    <rule ref=\"category/java/design.xml/SimplifyBooleanAssertion\" />\n    <rule ref=\"category/java/design.xml/SimplifyBooleanExpressions\" />\n    <rule ref=\"category/java/design.xml/SimplifyBooleanReturns\" />\n    <rule ref=\"category/java/design.xml/SimplifyConditional\" />\n    <rule ref=\"category/java/design.xml/UseUtilityClass\" />\n    <rule ref=\"category/java/errorprone.xml/AvoidAssertAsIdentifier\" />\n    <rule ref=\"category/java/errorprone.xml/AvoidBranchingStatementAsLastInLoop\" />\n    <rule ref=\"category/java/errorprone.xml/AvoidCallingFinalize\" />\n    <rule ref=\"category/java/errorprone.xml/AvoidEnumAsIdentifier\" />\n    <rule ref=\"category/java/errorprone.xml/AvoidLosingExceptionInformation\" />\n    <rule ref=\"category/java/errorprone.xml/AvoidMultipleUnaryOperators\" />\n    <rule ref=\"category/java/errorprone.xml/BrokenNullCheck\" />\n    <rule ref=\"category/java/errorprone.xml/ClassCastExceptionWithToArray\" />\n    <rule ref=\"category/java/errorprone.xml/CloneMethodMustBePublic\" />\n    <rule ref=\"category/java/errorprone.xml/CloneMethodMustImplementCloneable\" />\n    <rule ref=\"category/java/errorprone.xml/CloneMethodReturnTypeMustMatchClassName\" />\n    <rule ref=\"category/java/errorprone.xml/ConstructorCallsOverridableMethod\" />\n    <rule ref=\"category/java/errorprone.xml/DoNotExtendJavaLangThrowable\" />\n    <rule ref=\"category/java/errorprone.xml/DontImportSun\" />\n    <rule ref=\"category/java/errorprone.xml/EmptyFinalizer\" />\n    <rule ref=\"category/java/errorprone.xml/EmptyFinallyBlock\" />\n    <rule ref=\"category/java/errorprone.xml/EmptyIfStmt\" />\n    <rule ref=\"category/java/errorprone.xml/EmptyInitializer\" />\n    <rule ref=\"category/java/errorprone.xml/EmptyStatementBlock\" />\n    <rule ref=\"category/java/errorprone.xml/EmptyStatementNotInLoop\" />\n    <rule ref=\"category/java/errorprone.xml/EmptySwitchStatements\" />\n    <rule ref=\"category/java/errorprone.xml/EmptyTryBlock\" />\n    <rule ref=\"category/java/errorprone.xml/EmptyWhileStmt\" />\n    <rule ref=\"category/java/errorprone.xml/EqualsNull\" />\n    <rule ref=\"category/java/errorprone.xml/FinalizeDoesNotCallSuperFinalize\" />\n    <rule ref=\"category/java/errorprone.xml/FinalizeOnlyCallsSuperFinalize\" />\n    <rule ref=\"category/java/errorprone.xml/FinalizeShouldBeProtected\" />\n    <rule ref=\"category/java/errorprone.xml/IdempotentOperations\" />\n    <rule ref=\"category/java/errorprone.xml/InstantiationToGetClass\" />\n    <rule ref=\"category/java/errorprone.xml/InvalidLogMessageFormat\" />\n    <rule ref=\"category/java/errorprone.xml/MissingStaticMethodInNonInstantiatableClass\" />\n    <rule ref=\"category/java/errorprone.xml/StringBufferInstantiationWithChar\" />\n    <rule ref=\"category/java/errorprone.xml/UnconditionalIfStatement\" />\n    <rule ref=\"category/java/errorprone.xml/UnnecessaryBooleanAssertion\" />\n    <rule ref=\"category/java/errorprone.xml/UnnecessaryConversionTemporary\" />\n    <rule ref=\"category/java/errorprone.xml/UselessOperationOnImmutable\" />\n    <rule ref=\"category/java/multithreading.xml/DoubleCheckedLocking\" />\n    <rule ref=\"category/java/multithreading.xml/NonThreadSafeSingleton\" />\n    <rule ref=\"category/java/multithreading.xml/UnsynchronizedStaticFormatter\" />\n    <rule ref=\"category/java/performance.xml/AddEmptyString\" />\n    <rule ref=\"category/java/performance.xml/AppendCharacterWithChar\" />\n    <rule ref=\"category/java/performance.xml/AvoidArrayLoops\" />\n    <rule ref=\"category/java/performance.xml/BigIntegerInstantiation\" />\n    <rule ref=\"category/java/performance.xml/BooleanInstantiation\" />\n    <rule ref=\"category/java/performance.xml/ByteInstantiation\" />\n    <rule ref=\"category/java/performance.xml/ConsecutiveAppendsShouldReuse\" />\n    <rule ref=\"category/java/performance.xml/ConsecutiveLiteralAppends\" />\n    <rule ref=\"category/java/performance.xml/InefficientEmptyStringCheck\" />\n    <rule ref=\"category/java/performance.xml/IntegerInstantiation\" />\n    <rule ref=\"category/java/performance.xml/LongInstantiation\" />\n    <rule ref=\"category/java/performance.xml/OptimizableToArrayCall\" />\n    <rule ref=\"category/java/performance.xml/RedundantFieldInitializer\" />\n    <rule ref=\"category/java/performance.xml/ShortInstantiation\" />\n    <rule ref=\"category/java/performance.xml/StringInstantiation\" />\n    <rule ref=\"category/java/performance.xml/StringToString\" />\n    <rule ref=\"category/java/performance.xml/UnnecessaryWrapperObjectCreation\" />\n    <rule ref=\"category/java/performance.xml/UseIndexOfChar\" />\n    <rule ref=\"category/java/performance.xml/UseStringBufferLength\" />\n    <rule ref=\"category/java/security.xml/HardCodedCryptoKey\" />\n    <rule ref=\"category/java/security.xml/InsecureCryptoIv\" />\n</ruleset>\n"
        },
        {
          "name": "pom.xml",
          "type": "blob",
          "size": 11.76171875,
          "content": "<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n    <groupId>com.github.scribejava</groupId>\n    <artifactId>scribejava</artifactId>\n    <packaging>pom</packaging>\n    <version>8.3.4-SNAPSHOT</version>\n    <name>ScribeJava OAuth Library</name>\n    <description>The best OAuth library out there</description>\n    <url>https://github.com/scribejava/scribejava</url>\n\n    <parent>\n        <groupId>org.sonatype.oss</groupId>\n        <artifactId>oss-parent</artifactId>\n        <version>9</version>\n    </parent>\n\n    <modules>\n        <module>scribejava-core</module>\n        <module>scribejava-java8</module>\n        <module>scribejava-apis</module>\n        <module>scribejava-httpclient-ahc</module>\n        <module>scribejava-httpclient-ning</module>\n        <module>scribejava-httpclient-okhttp</module>\n        <module>scribejava-httpclient-apache</module>\n        <module>scribejava-httpclient-armeria</module>\n    </modules>\n\n    <licenses>\n        <license>\n            <name>MIT</name>\n            <url>https://github.com/scribejava/scribejava/blob/master/LICENSE.txt</url>\n        </license>\n    </licenses>\n\n    <scm>\n        <connection>scm:git:https://github.com/scribejava/scribejava</connection>\n        <developerConnection>scm:git:https://github.com/scribejava/scribejava</developerConnection>\n        <url>https://github.com/scribejava/scribejava</url>\n        <tag>HEAD</tag>\n    </scm>\n\n    <developers>\n        <developer>\n            <id>kullfar</id>\n            <name>Stanislav Gromov</name>\n            <email>kullfar@gmail.com</email>\n            <roles>\n                <role>all</role>\n            </roles>\n            <timezone>+3</timezone>\n        </developer>\n    </developers>\n\n    <dependencies>\n        <dependency>\n            <groupId>com.fasterxml.jackson.core</groupId>\n            <artifactId>jackson-databind</artifactId>\n            <version>2.14.0</version>\n        </dependency>\n        <dependency>\n            <groupId>junit</groupId>\n            <artifactId>junit</artifactId>\n            <version>4.13.2</version>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>com.squareup.okhttp3</groupId>\n            <artifactId>mockwebserver</artifactId>\n            <version>4.10.0</version>\n            <scope>test</scope>\n        </dependency>\n    </dependencies>\n    <build>\n        <pluginManagement>\n            <plugins>\n                <plugin>\n                    <groupId>org.apache.felix</groupId>\n                    <artifactId>maven-bundle-plugin</artifactId>\n                    <version>5.1.8</version>\n                    <executions>\n                        <execution>\n                            <id>bundle-manifest</id>\n                            <phase>process-classes</phase>\n                            <goals>\n                                <goal>manifest</goal>\n                            </goals>\n                        </execution>\n                    </executions>\n                </plugin>\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-jar-plugin</artifactId>\n                    <version>3.3.0</version>\n                    <configuration>\n                        <archive>\n                            <manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>\n                        </archive>\n                    </configuration>\n                </plugin>\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-checkstyle-plugin</artifactId>\n                    <version>3.2.0</version>\n                    <dependencies>\n                        <dependency>\n                            <groupId>com.puppycrawl.tools</groupId>\n                            <artifactId>checkstyle</artifactId>\n                            <version>10.4</version>\n                        </dependency>\n                    </dependencies>\n                </plugin>\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-release-plugin</artifactId>\n                    <version>2.5.3</version>\n                    <configuration>\n                        <autoVersionSubmodules>true</autoVersionSubmodules>\n                    </configuration>\n                </plugin>\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-surefire-plugin</artifactId>\n                    <version>2.22.2</version>\n                </plugin>\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-clean-plugin</artifactId>\n                    <version>3.2.0</version>\n                </plugin>\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-install-plugin</artifactId>\n                    <version>3.0.1</version>\n                </plugin>\n            </plugins>\n        </pluginManagement>\n        <plugins>\n            <plugin>\n                <artifactId>maven-compiler-plugin</artifactId>\n                <version>3.10.1</version>\n                <configuration>\n                    <encoding>UTF-8</encoding>\n                    <release>${java.release}</release>\n                    <showDeprecation>true</showDeprecation>\n                    <compilerArgs>\n                        <arg>-Xlint:-options</arg>\n                    </compilerArgs>\n                </configuration>\n            </plugin>\n            <plugin>\n                <artifactId>maven-deploy-plugin</artifactId>\n                <version>3.0.0</version>\n                <executions>\n                    <execution>\n                        <id>default-deploy</id>\n                        <phase>deploy</phase>\n                        <goals>\n                            <goal>deploy</goal>\n                        </goals>\n                    </execution>\n                </executions>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-resources-plugin</artifactId>\n                <version>3.3.0</version>\n                <configuration>\n                    <encoding>UTF-8</encoding>\n                </configuration>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-source-plugin</artifactId>\n                <version>3.2.1</version>\n                <executions>\n                    <execution>\n                        <id>attach-sources</id>\n                        <goals>\n                            <goal>jar</goal>\n                        </goals>\n                    </execution>\n                </executions>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-javadoc-plugin</artifactId>\n                <version>3.4.1</version>\n                <configuration>\n                    <javadocExecutable>${java.home}/bin/javadoc</javadocExecutable>\n                    <encoding>UTF-8</encoding>\n                    <additionalOptions>-html5</additionalOptions>\n                    <doclint>all,-missing</doclint>\n                </configuration>\n                <executions>\n                    <execution>\n                        <id>attach-javadoc</id>\n                        <goals>\n                            <goal>jar</goal>\n                        </goals>\n                    </execution>\n                </executions>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-checkstyle-plugin</artifactId>\n                <executions>\n                    <execution>\n                        <id>validate</id>\n                        <phase>validate</phase>\n                        <configuration>\n                            <sourceDirectories>\n                                <sourceDirectory>${basedir}/src</sourceDirectory>\n                            </sourceDirectories>\n                            <configLocation>checkstyle.xml</configLocation>\n                            <encoding>UTF-8</encoding>\n                            <includeTestSourceDirectory>true</includeTestSourceDirectory>\n                        </configuration>\n                        <goals>\n                            <goal>check</goal>\n                        </goals>\n                    </execution>\n                </executions>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-pmd-plugin</artifactId>\n                <version>3.19.0</version>\n                <dependencies>\n                    <dependency>\n                        <groupId>net.sourceforge.pmd</groupId>\n                        <artifactId>pmd-core</artifactId>\n                        <version>${pmdVersion}</version>\n                    </dependency>\n                    <dependency>\n                        <groupId>net.sourceforge.pmd</groupId>\n                        <artifactId>pmd-java</artifactId>\n                        <version>${pmdVersion}</version>\n                    </dependency>\n                    <dependency>\n                        <groupId>net.sourceforge.pmd</groupId>\n                        <artifactId>pmd-javascript</artifactId>\n                        <version>${pmdVersion}</version>\n                    </dependency>\n                    <dependency>\n                        <groupId>net.sourceforge.pmd</groupId>\n                        <artifactId>pmd-jsp</artifactId>\n                        <version>${pmdVersion}</version>\n                    </dependency>\n                </dependencies>\n                <configuration>\n                    <targetJdk>1.${java.release}</targetJdk>\n                    <linkXRef>false</linkXRef>\n                    <rulesets>\n                        <ruleset>../pmd.xml</ruleset>\n                    </rulesets>\n                    <verbose>true</verbose>\n                    <analysisCache>true</analysisCache>\n                    <includeTests>true</includeTests>\n                </configuration>\n                <executions>\n                    <execution>\n                        <goals>\n                            <goal>check</goal>\n                        </goals>\n                    </execution>\n                </executions>\n            </plugin>\n        </plugins>\n    </build>\n\n    <properties>\n        <java.release>7</java.release>\n        <pmdVersion>6.51.0</pmdVersion>\n    </properties>\n\n    <profiles>\n        <profile>\n            <id>release-sign-artifacts</id>\n            <activation>\n                <property>\n                    <name>performRelease</name>\n                    <value>true</value>\n                </property>\n            </activation>\n            <build>\n                <plugins>\n                    <plugin>\n                        <groupId>org.apache.maven.plugins</groupId>\n                        <artifactId>maven-gpg-plugin</artifactId>\n                        <version>3.0.1</version>\n                        <executions>\n                            <execution>\n                                <id>sign-artifacts</id>\n                                <phase>verify</phase>\n                                <goals>\n                                    <goal>sign</goal>\n                                </goals>\n                            </execution>\n                        </executions>\n                    </plugin>\n                </plugins>\n            </build>\n        </profile>\n    </profiles>\n</project>\n"
        },
        {
          "name": "scribejava-apis",
          "type": "tree",
          "content": null
        },
        {
          "name": "scribejava-core",
          "type": "tree",
          "content": null
        },
        {
          "name": "scribejava-httpclient-ahc",
          "type": "tree",
          "content": null
        },
        {
          "name": "scribejava-httpclient-apache",
          "type": "tree",
          "content": null
        },
        {
          "name": "scribejava-httpclient-armeria",
          "type": "tree",
          "content": null
        },
        {
          "name": "scribejava-httpclient-ning",
          "type": "tree",
          "content": null
        },
        {
          "name": "scribejava-httpclient-okhttp",
          "type": "tree",
          "content": null
        },
        {
          "name": "scribejava-java8",
          "type": "tree",
          "content": null
        },
        {
          "name": "v1-changelog",
          "type": "blob",
          "size": 3.681640625,
          "content": "[1.0.6]\n\n * FEATURE: Available in maven central repositories.\n\n[1.0.7]\n\n * FEATURE: Added support for Yammer and Evernote ( thanks oparrsih )\n * FIX: Fixed bug that preventing setting the scope param on Google Api  \n\n[1.0.8]\n\n * FEATURE: Added setConnectTimeout and setReadTimeout for the Request Object\n * FIX: Fixed Evernote Api (uses GET for request and access tokens)\n * REFACTOR: URLEncoding stuff. LinkedIn specific decoder is no longer needed\n * FEATURE: Added Google example\n\n[1.0.9]\n\n * FEATURE: Token made Serializable\n * FIX: Google Api encoding issues (thanks @roger and @klakegg)\n\n[1.1.0]\n\n  * FEATURE: OAuth 2.0 Support and Facebook support out of the box (thanks Diego Silveira)\n  * REFACTOR: Api creation and OAuthService refactors\n  * REFACTOR: Connections are created lazily (just before sending the request)\n\n[1.1.1]\n\n  * FIX: Removed isEmpty() from OAuth2.0 code in order to support older JVMs\n  * FEATURE: Overloaded provider() method to support instances as well as classes (thanks dustismo)\n  * FIX: White-space parameter bug (thanks Krogoth)\n  * FEATURE: OAuth 2.0 now implements server-flow (thanks Diego Silveira)\n\n[1.1.2]\n\n  * FIX: Fixed ugly bug that made 1.1.1 practically unusable (thanks Stubbs)\n\n[1.1.3]\n\n  * FEATURE: Added rawResponse to Token, for extracting additional parameters (thanks Dirk McCormick)\n  * FEATURE: Added Dropbox Api\n  * FIX: Token responses now work despite of the token/secret order\n  * FEATURE: Added Foursquare OAuth 2.0 Api (thanks Tom Tasche)\n  * FEATURE: Added support for OAuth1.0a signatures via querystring parameters\n  * FEATURE: Added ConstantContact Api (thanks Matthew Laudato)\n\n[1.2]\n  * REFACTOR: Moved scope inside OAuthConfig (breaks backwards compatibility)\n  * FEATURE: Added scopes to Facebook 2.0 Api\n  * FEATURE: Added Plaintext signature for Yammer\n  * FEATURE: Added Twitter SSL endpoints (use TwitterApi.SSL.class)\n\n[1.2.1]\n  * FEATURE: Added custom charset support to Request (thanks Eric Genet)\n  * FEATURE: Added support for Vkontakte (thanks dotbg)\n  * FEATURE: Added Sohu Weibo, Netease Weibo & Sina Weibo Apis (thanks Arthur Wang)\n  * FEATURE: Added support for persistent Http Connections (thanks Craig Minton)\n\n[1.2.2]\n  * FIX: Added support for JDK 1.5. Issue #146 (thanks Sripathi Krishnan)\n  * FIX: Invalid character constant error message. Issue #137 (thanks Scott Scoble)\n  * FEATURE: Added a Api class to handle windows live authentication. Issue #135 (thanks Tomas Lin)\n  * FEATURE: Added refresh token feature for Yahoo! API. Issue #134 (thanks Aaron Foltz)\n  * FEATURE: Added support for Plurk API. Issue #130 (thanks Chia-Wei Li)\n  * FIX: Request.setConnectTimeout() and setReadTimeout() throw NPE. Issue #123 (thanks thepizzle)\n\n[1.2.3]\n  * FEATURE: Added default Content-Type header\n  * FEATURE: Sapo Api\n  * FEATURE: Plurk Mobile Api\n  * FEATURE: Kaixin and QWeibo Apis\n  * FEATURE: SimpleGeo Api\n\n[1.3.0]\n  * FEATURE: Multiple parameters with the same name supported.\n  * FEAUTRE: 'debug' mode that logs useful information about the signature making\n\n[1.3.1]\n  * FEATURE: Meetup.com Api\n  * FEATURE: NetProspex Api\n  * FEATURE: Kaixin2, SinaWeibo2 and Renren Apis\n  * FEATURE: ImgUr Api\n  * FEATURE: Freelancer Api (thanks Juan Palacios!)\n  * FIX: Allow digits in url schemes\n  * FEATURE: Specific exception for connection problems (OAuthConnectionException)\n  * FIX: Dropbox Api and Evernote Api updated to their latests versions\n  * FEATURE: Digg and Skyrock Apis\n\n[1.3.2]\n  * FIX: Don't include oauth_token in 2legged calls.\n  * FEATURE: RSA-SHA1 Signatures.\n  * FEATURE: equals & hashcode on Token object.\n  * FEATURE: ConstantContact Api\n\n[1.3.3]\n  * FEATURE: accessToken and requestToken timeouts default to 2 seconds and can be specified.\n  * FEATURE: New Apis.\n"
        },
        {
          "name": "v2pre-changelog",
          "type": "blob",
          "size": 1.7578125,
          "content": "[SNAPSHOT]\n * prepare to merge back to the ScribeJava\n * backport 'news' from scribejava\n\n[3.4]\n * add doktornarabote.ru API support\n\n[3.3]\n * upgrade ning async http client 1.9.20 -> 1.9.26\n * add possibility to use ProxyServer per-request (async only)\n * rename maven modules, add \"subscribe-\" prefix\n * backport anything new from scribe-java\n\n[3.2]\n * add possibility to set non-default httpProvider Class Name for ning async http client\n\n[3.1]\n * update FaceBook API version from 2.0 to 2.2\n * update ning dependency for async functionality\n * allow 'realm' parameter in OAuthParameters\n\n[3.0]\n * make compilable with OpenJDK8 \n * add async functionality\n * add GitHub API\n * split on two maven modules (+repackaging)\n\n[2.3]\n\n * add state parameter in LinkedInAPI 2.0\n * update FB Graph API to version 2.0\n * add tut.by OAuth API\n * add default parameter grant_type for Google, LinkedIn and Mail.ru\n * update host for requests in VkontakteExample\n * add Yinxiang Biji endpoint in EvernoteApi\n * switch Flickr and Twitter to https\n * update domain for LiveAPI\n * add support for the Authorization parameter 'realm'\n * add TumblrExample\n * update TwitterExample to v1.1\n * merge Request class in OAuthRequest. No need in separate Request class.\n     No planned usages of 'clean' http requests.\n * add required OAuthService parameter in constructor for OAuthRequest,\n     so it can use OAuthConfig always (Default timeouts for all OAuthRequests\n     per OAuthService instance are now possible 'from-the-box').\n * remove messy RequestTuner. Use OAuthConfig instead of it.\n\n[2.1]\n\n * add OpenID id_token parsing from response to GoogleAPI 2.0\n * add optional OAuth 'state' request parameter\n * Add hh api support\n * fix Mailru API\n\n[2.0]\n\n * New release. First release. Formalizations of new project.\n"
        }
      ]
    }
  ]
}