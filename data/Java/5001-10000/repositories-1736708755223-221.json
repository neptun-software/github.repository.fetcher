{
  "metadata": {
    "timestamp": 1736708755223,
    "page": 221,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "vespa-engine/vespa",
      "stars": 5914,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".buildkite",
          "type": "tree",
          "content": null
        },
        {
          "name": ".copr",
          "type": "tree",
          "content": null
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.5908203125,
          "content": "*.gcda\n*.gcno\n**/.project\n**/.settings\n**/.classpath\n*~\npom.xml.build\n*.o\n*.So\n*.dSYM/\n*.dylib\nlib*.a\nlib*.so\n/jdisc_gds_service\n/build\n\\#*\n*.iml\n*.idea\n*.ideaclion\nout/\ntarget/\ntest-report.json\n.mbuild.Makefile\nCMakeFiles\nCMakeCache.txt\nCTestTestfile.cmake\ncmake_install.cmake\nMakefile\nTesting\n/.cmake/\n/.mvn/\n/.ninja_deps\n/.ninja_log\n/build.ninja\n/rules.ninja\n*_benchmark_app\n*_test_app\n/cmake-build-debug/\n/mvnw\n/mvnw.cmd\n/mvnwDebug\n/mvnwDebug.cmd\n.preprocessed/\n.DS_Store\ninstall_manifest.txt\n/vespaConfig.cmake\n/vespaConfigVersion.cmake\n*.cbp\n!/.copr/Makefile\n!/.buildkite/Makefile\n.vscode\n.metadata\n"
        },
        {
          "name": ".java-version",
          "type": "blob",
          "size": 0.0029296875,
          "content": "17\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 7.263671875,
          "content": "# Copyright Vespa.ai. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.\n# @author Vegard Sjonfjell\n# @author Eirik Nygaard\n# @author Arnstein Ressem\ncmake_minimum_required(VERSION 3.18 FATAL_ERROR)\n\ninclude(functions.cmake)\nlist(APPEND CMAKE_MODULE_PATH\n     \"$ENV{HOME}/share/cmake/Modules\"\n     \"/opt/vespa-deps/share/cmake/Modules\"\n     \"${CMAKE_CURRENT_SOURCE_DIR}/cmake\"\n)\ninclude(default_build_settings.cmake)\nvespa_detect_build_platform()\nmessage(\"-- Vespa build platform is ${VESPA_OS_DISTRO} ${VESPA_OS_DISTRO_VERSION}\")\nvespa_use_default_cxx_compiler()\nvespa_use_default_java_home()\n\nproject(vespa CXX C)\nvespa_use_default_vespa_unprivileged()\nvespa_use_default_cmake_install_prefix()\ninclude(GNUInstallDirs)\nvespa_use_default_vespa_user()\nvespa_use_default_vespa_group()\nvespa_use_default_vespa_deps_prefix()\nvespa_use_default_cmake_prefix_path()\n\nSET(CMAKE_FIND_PACKAGE_SORT_ORDER NATURAL)\nSET(CMAKE_FIND_PACKAGE_SORT_DIRECTION DEC)\n\nfind_package(Threads REQUIRED)\n\nfind_package(LLVM REQUIRED CONFIG)\nmessage(STATUS \"Found LLVM ${LLVM_PACKAGE_VERSION}\")\nmessage(STATUS \"Using LLVMConfig.cmake in: ${LLVM_DIR}\")\nmessage(STATUS \"LLVM_INCLUDE_DIRS is ${LLVM_INCLUDE_DIRS}\")\nmessage(STATUS \"LLVM_LIBRARY_DIRS is ${LLVM_LIBRARY_DIRS}\")\nmessage(STATUS \"LLVM_INCLUDE_DIR is ${LLVM_INCLUDE_DIR}\")\nmessage(STATUS \"LLVM_MAIN_INCLUDE_DIR is ${LLVM_MAIN_INCLUDE_DIR}\")\nmessage(STATUS \"LLVM_LIBRARY_DIR is ${LLVM_LIBRARY_DIR}\")\n\nvespa_use_default_build_settings()\n\n# allows import of project in CLion on OSX\nif (${CMAKE_SYSTEM_NAME} MATCHES \"Darwin\")\n    set(CMAKE_THREAD_LIBS_INIT \"-lpthread\")\nendif()\n\n# TODO: Move this to where it's actually needed\nfind_package(JNI REQUIRED)\n\nfind_package(GTest REQUIRED)\n\nfind_package(Protobuf REQUIRED CONFIG)\n\ninclude(build_settings.cmake)\n\n# Enable CTest unit testing\nenable_testing()\n\n# Export vespa cmake config, to be used by other cmake project depending on vespa\nset(VESPA_CMAKECONFIG_INSTALL_DIR ${CMAKE_INSTALL_DATAROOTDIR}/cmake/vespa)\nstring(REGEX REPLACE \"-DV_TAG_COMPONENT=\\\\\\\\\\\"(.*)\\\\\\\\\\\"\" \"\\\\1\" VESPA_VERSION ${V_TAG_COMPONENT})\nmessage(\"-- VESPA_VERSION is ${VESPA_VERSION}\")\n\ninclude(CMakePackageConfigHelpers)\nfunction(vespa_configure_exported_config)\n  set(INCLUDE_INSTALL_DIR ${CMAKE_INSTALL_INCLUDEDIR})\n  set(INSTALL_PREFIX_DIR ${CMAKE_INSTALL_PREFIX})\n  set(CMAKECONFIG_DIR ${VESPA_CMAKECONFIG_INSTALL_DIR})\n  configure_package_config_file(cmake/vespaConfig.cmake.in\n    ${CMAKE_CURRENT_BINARY_DIR}/vespaConfig.cmake\n    INSTALL_DESTINATION ${VESPA_CMAKECONFIG_INSTALL_DIR}\n    PATH_VARS INCLUDE_INSTALL_DIR INSTALL_PREFIX_DIR CMAKECONFIG_DIR)\nendfunction()\nfunction(vespa_configure_exported_configversion)\n  write_basic_package_version_file(${CMAKE_CURRENT_BINARY_DIR}/vespaConfigVersion.cmake\n    VERSION ${VESPA_VERSION}\n    COMPATIBILITY AnyNewerVersion)\nendfunction()\nvespa_configure_exported_config()\nvespa_configure_exported_configversion()\ninstall(FILES\n  functions.cmake\n  build_settings.cmake\n  default_build_settings.cmake\n  ${CMAKE_CURRENT_BINARY_DIR}/vespaConfig.cmake\n  ${CMAKE_CURRENT_BINARY_DIR}/vespaConfigVersion.cmake\n  cmake/vespaTargets.cmake\n  DESTINATION ${VESPA_CMAKECONFIG_INSTALL_DIR})\n# End of exporting vespa cmake config\n\nvespa_install_data(valgrind-suppressions.txt etc/vespa)\nvespa_install_data(tsan-suppressions.txt etc/vespa)\nvespa_install_data(ubsan-suppressions.txt etc/vespa)\n\n# Include vespa config definitions in every target\ninclude_directories(BEFORE ${CMAKE_BINARY_DIR}/configdefinitions/src)\n\nadd_subdirectory(application-model)\nadd_subdirectory(client)\nadd_subdirectory(cloud-tenant-cd)\nadd_subdirectory(clustercontroller-apps)\nadd_subdirectory(clustercontroller-core)\nadd_subdirectory(clustercontroller-reindexer)\nadd_subdirectory(clustercontroller-utils)\nadd_subdirectory(config)\nadd_subdirectory(config-bundle)\nadd_subdirectory(configd)\nadd_subdirectory(configdefinitions)\nadd_subdirectory(config-model)\nadd_subdirectory(config-model-api)\nadd_subdirectory(config-model-fat)\nadd_subdirectory(config-provisioning)\nadd_subdirectory(config-proxy)\nadd_subdirectory(configserver)\nadd_subdirectory(configserver-flags)\nadd_subdirectory(configutil)\nadd_subdirectory(container-apache-http-client-bundle)\nadd_subdirectory(container-core)\nadd_subdirectory(container-disc)\nadd_subdirectory(container-messagebus)\nadd_subdirectory(container-onnxruntime)\nadd_subdirectory(container-llama)\nadd_subdirectory(container-search)\nadd_subdirectory(container-search-and-docproc)\nadd_subdirectory(container-spifly)\nadd_subdirectory(defaults)\nadd_subdirectory(docproc)\nadd_subdirectory(docprocs)\nadd_subdirectory(document)\nadd_subdirectory(documentapi)\nadd_subdirectory(eval)\nadd_subdirectory(fbench)\nadd_subdirectory(fileacquirer)\nadd_subdirectory(filedistribution)\nadd_subdirectory(flags)\nadd_subdirectory(fnet)\nadd_subdirectory(fsa)\nadd_subdirectory(hosted-zone-api)\nadd_subdirectory(http-client)\nadd_subdirectory(jdisc-cloud-aws)\nadd_subdirectory(jdisc_core)\nadd_subdirectory(jdisc-security-filters)\nadd_subdirectory(jrt_test)\nadd_subdirectory(linguistics)\nadd_subdirectory(linguistics-components)\nadd_subdirectory(lucene-linguistics)\nadd_subdirectory(logd)\nadd_subdirectory(logforwarder)\nadd_subdirectory(logserver)\nadd_subdirectory(lowercasing_test)\nadd_subdirectory(messagebus)\nadd_subdirectory(messagebus_test)\nadd_subdirectory(metrics)\nadd_subdirectory(metrics-proxy)\nadd_subdirectory(model-evaluation)\nadd_subdirectory(model-integration)\nadd_subdirectory(node-repository)\nadd_subdirectory(opennlp-linguistics)\nadd_subdirectory(orchestrator)\nadd_subdirectory(persistence)\nadd_subdirectory(predicate-search)\nadd_subdirectory(searchcore)\nadd_subdirectory(searchlib)\nadd_subdirectory(searchsummary)\nadd_subdirectory(security-utils)\nadd_subdirectory(service-monitor)\nadd_subdirectory(slobrok)\nadd_subdirectory(standalone-container)\nadd_subdirectory(storage)\nadd_subdirectory(storageserver)\nadd_subdirectory(streamingvisitors)\nadd_subdirectory(tenant-cd-api)\nadd_subdirectory(vbench)\nadd_subdirectory(vdslib)\nadd_subdirectory(vespa-3party-bundles)\nadd_subdirectory(vespa-3party-jars)\nadd_subdirectory(vespa-athenz)\nadd_subdirectory(vespabase)\nadd_subdirectory(vespaclient)\nadd_subdirectory(vespaclient-container-plugin)\nadd_subdirectory(vespaclient-core)\nadd_subdirectory(vespaclient-java)\nadd_subdirectory(vespa-feed-client)\nadd_subdirectory(vespa-feed-client-cli)\nadd_subdirectory(vespajlib)\nadd_subdirectory(vespalib)\nadd_subdirectory(vespalog)\nadd_subdirectory(vespamalloc)\nadd_subdirectory(vespa-osgi-testrunner)\nadd_subdirectory(vespa-testrunner-components)\nadd_subdirectory(zkfacade)\nadd_subdirectory(zookeeper-command-line-client)\nadd_subdirectory(zookeeper-server)\n\n# Add any extra projects\nadd_extra_projects()\n\n# Create module targets with name ${MODULE}+module depending on every target defined within that module\n__create_module_targets(TARGETS \"module\")\n\n# Create module targets with name ${MODULE}+test depending on every test target defined within that module\n__create_module_targets(TEST_TARGETS \"test\")\n\n# Create module targets with name ${MODULE}+source depending on every source target defined within that module\n__create_module_targets(SOURCE_TARGETS \"source\")\n\n# Create module targets with name ${MODULE}+object depending on every object target defined within that module\n__create_module_targets(OBJECT_TARGETS \"object\")\n\n# Create module source dependencies\n__create_module_source_dependencies()\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 3.720703125,
          "content": "<!-- Copyright Vespa.ai. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root. -->\n\n# Contributing to Vespa\n\nContributions to [Vespa](https://github.com/vespa-engine/vespa),\n[Vespa system tests](https://github.com/vespa-engine/system-test),\n[Vespa samples](https://github.com/vespa-engine/sample-apps)\nand the [Vespa documentation](https://github.com/vespa-engine/documentation) are welcome.\nThis document tells you what you need to know to contribute.\n\n## Open development\n\nAll work on Vespa happens directly on GitHub,\nusing the [GitHub flow model](https://docs.github.com/en/get-started/using-github/github-flow).\nWe release the master branch four times a week, and you should expect it to always work.\nThe continuous build of Vespa is at [https://factory.vespa.ai](https://factory.vespa.ai).\nYou can follow the fate of each commit there.\n\nAll pull requests must be approved by a\n[Vespa Committer](https://github.com/orgs/vespa-engine/people).\nYou can find a suitable reviewer in the OWNERS file upward in the source tree from\nwhere you are making the change (OWNERS have a special responsibility for\nensuring the long-term integrity of a portion of the code).\n\nThe way to become a committer (and OWNER) is to make some quality contributions\nto an area of the code. See [GOVERNANCE](GOVERNANCE.md) for more details.\n\n### Creating a Pull Request\n\nPlease follow\n[best practices](https://github.com/trein/dev-best-practices/wiki/Git-Commit-Best-Practices)\nfor creating git commits.\n\nWhen your code is ready to be submitted,\n[submit a pull request](https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/creating-a-pull-request)\nto request a code review.\n\nWe only seek to accept code that you are authorized to contribute to the project.\nWe have added a pull request template to our projects so that your contributions are made\nwith the following confirmation:\n\n> I confirm that this contribution is made under the terms of the license found in the root directory of this repository's source tree and that I have the authority necessary to make this contribution on behalf of its copyright owner.\n\n## Versioning\n\nVespa uses semantic versioning - see\n[vespa versions](https://vespa.ai/releases#versions).\nNotice in particular that any Java API in a package having a @PublicAPI\nannotation in the package-info, and no @Beta annotation on the class,\ncannot be changed in an incompatible way between major versions:\nExisting types and method signatures must be preserved\n(but can be marked deprecated).\n\nWe verify ABI compatibility during the regular Java build you'll run with Maven (mvn install).\nThis build step will also fail if you _add_ to public APIs, which is fine if there's a good reason\nto do it. In that case, update the ABI spec as instructed in the error message.\n\n## Issues\n\nWe track issues in [GitHub issues](https://github.com/vespa-engine/vespa/issues).\nIt is fine to submit issues also for feature requests and ideas, whether or not you intend to work on them.\n\nThere is also a [ToDo list](TODO.md) for larger things nobody is working on yet.\n\n## Community\n\nIf you have questions, want to share your experience or help others,\njoin our [Slack channel](http://slack.vespa.ai).\nSee also [Stack Overflow questions tagged Vespa](https://stackoverflow.com/questions/tagged/vespa),\nand feel free to add your own.\n\n### Getting started\n\nSee [README](README.md) for how to build and test Vespa.\n[Code-map.md](Code-map.md) provides an overview of the modules of Vespa.\nMore details are in the READMEs of each module.\n\n## License and copyright\n\nIf you add new files you are welcome to use your own copyright.\nIn any case, the code (or documentation) you submit will be licensed\nunder the Apache 2.0 license.\n"
        },
        {
          "name": "Code-map.md",
          "type": "blob",
          "size": 7.791015625,
          "content": "<!-- Copyright Vespa.ai. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root. -->\n\n# A map of the Vespa code base\n\nDo you want to get familiar with the Vespa code base but don't know where to start?\n\nVespa consists of about 1.7 million lines of code, about equal parts Java and C++.\nSince it is mostly written by a team of developers selected for their ability\nto do this kind of thing unusually well, who have been given time to dedicate\nthemselves to it for a long time, it is mostly easy to work with. However, one\nthing we haven't done is to create a module structure friendly to newcomers - the code\nsimply organized in a flat structure of about 150 modules.\n\nThis document aims to provide a map of the\n[functional elements](https://docs.vespa.ai/en/overview.html)\nof Vespa to the most important modules in the flat module structure in the\n[code base on GitHub](https://github.com/vespa-engine/vespa).\n\n![Code map](Code-map.png)\n\nIt covers the modules you are most likely to encounter as a developer.\nThe rest are either small and needed for technical reasons or doing one thing\nwhich should be self-explanatory, or implementing the cloud service run by the\nVespa team which we don't expect anybody else to run and therefore be interested\nin changing.\n\n## The stateless container\n\nWhen a request is made to Vespa it first enters some stateless container cluster,\ncalled jDisc. This consists of:\n\n- a **jDisc core** layer which provides a model of a running application, general protocol-independent request-response handling, with various protocol implementations,\n- a **jDisc container** layer providing component management, configuration and similar.\n- a **search middleware** layer containing query/result APIs, query execution logic etc.\n- APIs and modules for writing and processing document operations.\n\nThe stateless container is implemented in Java.\n\njDisc core modules:\n\n- [jdisc_core](https://github.com/vespa-engine/vespa/tree/master/jdisc_core) - the core jDisc functionality\n\njDisc container modules, layered on jDisc core:\n\n- [container-disc](https://github.com/vespa-engine/vespa/tree/master/container-disc) - integration between the jDisc container and jDisc core layers.\n- [container-core](https://github.com/vespa-engine/vespa/tree/master/container-core) - core jDisc container functionality: Metrics, OSGi integration for component bundles, dependency injection, HTTP connector, etc.\n- [component](https://github.com/vespa-engine/vespa/tree/master/component) - the component model. Components (in Java) will implement or subclass a type for this module.\n\nSearch container layered on jDisc container:\n\n- [container-search](https://github.com/vespa-engine/vespa/tree/master/container-search) - Query-Result processing framework (Searchers) layered over the generic processing framework, query profiles, and the global query execution logic: Dispatch (scatter-gather), grouping, etc.\n\nDocument operation modules:\n\n- [document](https://github.com/vespa-engine/vespa/tree/master/document) - the document model - documents, fields and document types, and operations on documents. Implemented in both Java and C++.\n- [messagebus](https://github.com/vespa-engine/vespa/tree/master/messagebus) - generic async, multi-hop message passing implemented in both Java and C++.\n- [container-messagebus](https://github.com/vespa-engine/vespa/tree/master/container-messagebus) - MessageBus connector for jDisc.\n- [documentapi](https://github.com/vespa-engine/vespa/tree/master/documentapi) - API for issuing document operations to Vespa over message bus.\n- [docproc](https://github.com/vespa-engine/vespa/tree/master/docproc) - chainable document (operation) processors: Document operations issued over message bus to Vespa will usually be routed through a container running a document processor chain.\n- [indexinglanguage](https://github.com/vespa-engine/vespa/tree/master/indexinglanguage) - implementation of the \"indexing\" language which is used to express the statements prefixed by \"indexing:\" in the search definition.\n- [docprocs](https://github.com/vespa-engine/vespa/tree/master/docprocs) - document processor components bundled with Vespa. Notably the Indexingprocessor - a document processor invoking the indexing language statements configured for the document type in question on document operations.\n- [vespaclient-container-plugin](https://github.com/vespa-engine/vespa/tree/master/vespaclient-container-plugin) - implements the document/v1 API and internal API used by the Java HTTP client on top of the jDisc container, forwarding to the Document API.\n- [vespa-feed-client](https://github.com/vespa-engine/vespa/tree/master/vespa-feed-client) - client for fast writing to the internal API implemented by vespaclient-container-plugin.\n\n## Content nodes\n\nContent nodes store all data in Vespa, maintain reverse and forward indexes, and perform the distributed parts of query execution - matching, ranking and grouping/aggregation.\nThis is written in C++.\n\n- [searchcore](https://github.com/vespa-engine/vespa/tree/master/searchcore) - core functionality for maintaining indexes, matching, data storage, grouping, as well as the content node server itself (called proton).\n- [searchlib](https://github.com/vespa-engine/vespa/tree/master/searchlib) - libraries invoked by search core: Ranking (feature execution framework (fef), rank feature implementations, ranking expressions), index and btree implementations, attributes (forward indexes), etc. In addition, this contains the Java libraries for ranking.\n- [storage](https://github.com/vespa-engine/vespa/tree/master/storage/src/vespa/storage) - system for elastic and auto-recovering data storage over clusters of nodes.\n- [eval](https://github.com/vespa-engine/vespa/tree/master/eval) - library for efficient evaluation of ranking expressions. Tensor API and implementation.\n- [storageapi](https://github.com/vespa-engine/vespa/tree/master/storage/src/vespa/storageapi) - message bus messages and implementation for the document API.\n- [clustercontroller-core](https://github.com/vespa-engine/vespa/tree/master/clustercontroller-core) - cluster controller for storage, implemented in Java. This provides singular node-level decision-making for storage, based on ZooKeeper.\n\n## Configuration and administration\n\nThe third major subsystem in Vespa is responsible for managing configuration, clusters, application deployment and similar.\nIt is implemented in Java.\n\n- [configserver](https://github.com/vespa-engine/vespa/tree/master/configserver) - the server to which applications are deployed, and nodes send requests for the configuration derived from these deployments.\n- [config-model](https://github.com/vespa-engine/vespa/tree/master/config-model) - a model of the running system specified by a deployed application, which returns config instances on request given a config type name and config id (associated with a role).\n- [config](https://github.com/vespa-engine/vespa/tree/master/config) - client-side library on both Java and C++ for subscribing to configs (by type name and id) and reading config payloads.\n- [configgen](https://github.com/vespa-engine/vespa/tree/master/configgen) - generation of config classes in C++ and Java for reading (and building) a config given its type.\n- [config-proxy](https://github.com/vespa-engine/vespa/tree/master/config-proxy) - client node-side proxy between config subscriptions (issued by config) and the config server.\n- [configdefinitions](https://github.com/vespa-engine/vespa/tree/master/configdefinitions) - config type definitions which are referenced by multiple modules.\n\n## General utility libraries\n\nLibraries used throughout the code.\n\n- [vespalib](https://github.com/vespa-engine/vespa/tree/master/vespalib) - general utility library for C++\n- [vespajlib](https://github.com/vespa-engine/vespa/tree/master/vespajlib) - general utility library for Java. Includes the Java implementation of the tensor library.\n"
        },
        {
          "name": "Code-map.png",
          "type": "blob",
          "size": 335.7666015625,
          "content": null
        },
        {
          "name": "ERRATA.md",
          "type": "blob",
          "size": 6.9384765625,
          "content": "<!-- Copyright Vespa.ai. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root. -->\n\n## Errata\n\n### 2023-02-09: Rare edge case may cause memory corruption on content nodes when searching an HNSW index together with an index field and using multiple threads per query\n\nAffected version range: **8.78.54** (first release with documented support for the\nfeature triggering the bug) up to **8.116.25** (first release with a complete fix).\n\n#### Brief\n\nIn early November 2022, Vespa-8.78.54 officially added support for multi-threaded\nevaluation of filters in combination with the `nearestNeighbor` query operator.\nThis feature caused a subtle behavior change that could trigger a long-present,\nlatent bug in boundary condition handling in low-level bit vector code. This bug\nallowed for memory corruptions to take place during query evaluation when a\nparticular set of conditions was satisfied. This was fixed in Vespa-8.116.25 on\n2023-01-25. It is highly advised to update to a version that is at least as recent\nas this.\n\nUsing multiple threads per query is not enabled by default.\n\nDue to the many conditions required to trigger this bug, the Vespa team has only\nconfirmed observations of this particular bug on one single application.\n\n#### Details\n\nVespa supports efficient multi-threaded query evaluation where the internal\ndocument space is partitioned across multiple threads and data structures\nare dynamically chosen based on the underlying matching document data.\nWhen evaluating an `OR` clause where the field was an index and the term was\npresent in more than 3% of the documents, Vespa uses a posting list represented\nas a bit vector. When this bit vector had no overlap with the partition a\nparticular query thread was responsible for, erroneous boundary-tagging code\nwould potentially set some bits in an 8-byte area that did not belong to the\nbit vector.\n\nThis could happen if the following conditions were met:\n\n 1. You need to have one or more index fields.\n 2. You need to query at least one indexed term that is present in more than 3%\n    of the documents.\n 3. You need to have an HNSW index that is searched with the `nearestNeighbor`\n    operator in the same query as searching the index field.\n 4. You need to have configured multiple threads per query.\n 5. The ratio of new documents—not counting updates—in the memory index to the total\n    number of documents, must be larger than 1 / number of threads per search.\n\nDepending on what these 8 bytes were originally used for, memory corruption could\nmanifest itself in many ways. Most commonly, the observed effect would be random;\notherwise unexplainable crashes in indirectly affected code, caused by segmentation\nfaults due to corrupted pointers or assertion failures caused by broken invariants.\n\nIf memory was corrupted prior to being written to disk, it's possible that corrupted\ndata has become persistent in the cluster. If you suspect this to be the case, the\nmost robust solution is to re-feed your document set after upgrading to a Vespa\nversion containing the fix.\n\nIf corrupted data was written to the transaction log, the content\nnodes containing a replica of the corrupted document may enter a crash loop since they\ncan never successfully replay the log upon startup. Wiping the index on the affected\nnodes and re-feeding after upgrading Vespa is the suggested remediation.\n\n\n### 2021-01-06: Data loss during data migration\nThis bug was introduced more than 10 years ago and remained unobserved until very recently. Fixed in Vespa-7.306.16.\n\nThe following needs to happen to trigger the bug:\n\n* The replica placement for a given data bucket is non-ideal on at least 2 nodes.\n  This can happen during mass node retirement or if several nodes come back up after being down.\n  In this scenario, the system must move all data away from a subset of replicas. This triggers\n  a special internal optimization that tries to handle such moves separately to\n  minimize unnecessary data transfer. These are known internally as \"source-only\" replicas.\n* The stored document sets on the source-only bucket replicas are (possibly partially) disjoint.\n* The total size of document data contained in a source-only bucket replica exceeds the configured\n  data merge transfer chunk size (default 4 MiB)\n\nTracking of successfully merged documents is done by exchanging bitmasks between the nodes, where bit positions\ncorrespond to document presence on the nth node involved in the merge operation.\nThe bug caused bitmasks for sub-operations optimized to focus on source-only nodes to not be correctly transformed\nonto the bitmask tracking documents across all nodes.\nEven when not all documents could be transferred from the source-only node due to exceeding chunk transfer limits,\nthe system would believe it had transferred _all_ remaining such documents due to the erroneous bitmask transform.\n\nThis is a silent data loss bug and would be observed by the global document count in the system decreasing\nduring a period of data merging.\n\n### 2020-11-30: Document inconsistency\nThis bug was introduced in Vespa-7.277.38, and fixed in Vespa-7.292.82.\nThe following needs to happen to trigger the bug:\n\n* visibility-delay is non-zero. Note that the default is zero, so for this to trigger,\n  [visibility-delay](https://docs.vespa.ai/en/reference/services-content.html#visibility-delay)\n  must have been set.\n* A new config change is deployed that contains changes to proton.\n  This config snapshot is stored in the transaction log on the content node.\n* vespa-proton-bin is restarted, and as part of the prepare for restart step,\n  at least one attribute vector is not flushed to the current serial number.\n* Due to the bug, replay of the transaction log will fail to replay feed operations to attributes after replaying the config change.\n  The effect is that all attributes that were not flushed as part of preparing for restart\n  will not get any of the updates since the last time they were flushed.\n* If a document was previously removed, lid space compaction will move another document to that local document ID.\n  Due to later missing updates as part of restarting, we might see values from the removed document for some of the attributes.\n* When the problem attributes are later flushed this inconsistency will be permanent.\n\nSolution:\n* Upgrade Vespa to minimum Vespa-7.292.82.\n* Complete re-feed of the corpus.\n\n\n\n### 2020-11-30: Regression introduced in Vespa 7.141 may cause data loss or inconsistencies when using 'create: true' updates\nThere exists a regression introduced in Vespa 7.141 where updates marked as `create: true` (i.e. create if missing)\nmay cause data loss or undetected inconsistencies in certain edge cases.\nThis regression was introduced as part of an optimization effort to greatly reduce the common-case overhead of updates\nwhen replicas are out of sync.\n\nFixed in Vespa 7.157.9 and beyond.\nIf running a version affected (7.141 up to and including 7.147) you are strongly advised to upgrade.\n\nSee [#11686](https://github.com/vespa-engine/vespa/issues/11686) for details.\n"
        },
        {
          "name": "GOVERNANCE.md",
          "type": "blob",
          "size": 2.5234375,
          "content": "<!-- Copyright Vespa.ai. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root. -->\n\n# Vespa Governance\n\nAnyone is welcome to contribute to Vespa, by [creating pull requests](CONTRIBUTING.md)\nor taking part in discussions about features, e.g. in [GitHub issues](https://github.com/vespa-engine/vespa/issues).\n\nThis document defines who has authority to do what on the Vespa open-source project.\n\nWhile a formal assignment of authority is necessary as a fallback mechanism, it is\nnot the way decisions regarding Vespa are usually made, or expected to be made.\nThe community sees disagreement as good as a diversity of perspectives having influence\nleads to better decisions. We seek to resolve disagreement by reaching \nconsensus based on the merit of technical arguments, with no regard to status or\nformal role. This almost always works.\n\n# Vespa roles\n\nThere are two formal roles in Vespa:\n\n* __Vespa Committers__ have the right to merge pull requests into the Vespa repo.\n* __The Vespa Board__ has final authority over all decisions made on the project.\n\n# Vespa committers\n\nA __Vespa committer__ is able to merge pull requests into the Vespa repositories under\n[https://github.com/vespa-engine](https://github.com/vespa-engine), including into\nthe master branch which is released to production.\n\nTo become a Vespa Committer, start making PRs that are approved. When a sufficient\ntrust is built through working on Vespa this way, any current Vespa Committer can nominate\nyou to the Vespa board for the committer role.\n\nEvery pull request must be approved by a Vespa Committer which is different from the\nauthor of the request, either by clicking \"approve\", by making a comment indicating agreement,\nor simply merging it. As a rule, approval should happen before merging, but this is not strictly \nrequired as the approver can revert.\n\nThe Vespa committers are listed here:\n[https://github.com/orgs/vespa-engine/people](https://github.com/orgs/vespa-engine/people)\n\n# The Vespa board\n\nThe __Vespa board__ has final authority over all decisions regarding the Vespa project,\nincluding \n\n* whether to merge (or keep) a PR in the event of any dispute, \n* who should be committers and who should be members of the board, and\n* whether to make any changes to the governance policy (this document).\n\nThe board consists of 4 people and makes decisions by majority vote.\nOn a tie, the leader of the board has a double vote.\n\nThe board members are:\n* Jon Bratseth (bratseth) - leader\n* Kristian Aune (kkraune)\n* Kim Johansen (johans1)\n* Frode Lundgren (frodelu)\n"
        },
        {
          "name": "Gemfile",
          "type": "blob",
          "size": 0.83984375,
          "content": "# Copyright Vespa.ai. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.\nruby '>=3.1'\n\nsource \"https://rubygems.org\"\n\n# Hello! This is where you manage which Jekyll version is used to run.\n# When you want to use a different version, change it below, save the\n# file and run `bundle install`. Run Jekyll with `bundle exec`, like so:\n#\n#     bundle exec jekyll serve\n#\ngem \"jekyll\", \"~> 4.3.0\"\n\n# This is the default theme for new Jekyll sites. You may change this to anything you like.\ngem \"minima\", \"~> 2.0\"\n\n# kramdown v2 ships without the gfm parser by default. If you're using\n# kramdown v1, comment out this line.\ngem \"kramdown-parser-gfm\"\n\n# Work-around for webrick no longer included in Ruby 3.0 (https://github.com/jekyll/jekyll/issues/8523)\ngem \"webrick\"\n\n# Get the html-proofer to work\ngem 'rake'\ngem 'html-proofer'\n\n"
        },
        {
          "name": "Gemfile.lock",
          "type": "blob",
          "size": 2.95703125,
          "content": "GEM\n  remote: https://rubygems.org/\n  specs:\n    Ascii85 (1.1.0)\n    addressable (2.8.6)\n      public_suffix (>= 2.0.2, < 6.0)\n    afm (0.2.2)\n    async (2.6.5)\n      console (~> 1.10)\n      fiber-annotation\n      io-event (~> 1.1)\n      timers (~> 4.1)\n    colorator (1.1.0)\n    concurrent-ruby (1.2.2)\n    console (1.23.7)\n      fiber-annotation\n      fiber-local\n      json\n    em-websocket (0.5.3)\n      eventmachine (>= 0.12.9)\n      http_parser.rb (~> 0)\n    ethon (0.16.0)\n      ffi (>= 1.15.0)\n    eventmachine (1.2.7)\n    ffi (1.15.5)\n    fiber-annotation (0.2.0)\n    fiber-local (1.0.0)\n    forwardable-extended (2.6.0)\n    google-protobuf (3.24.4-x86_64-linux)\n    hashery (2.1.2)\n    html-proofer (5.0.9)\n      addressable (~> 2.3)\n      async (~> 2.1)\n      nokogiri (~> 1.13)\n      pdf-reader (~> 2.11)\n      rainbow (~> 3.0)\n      typhoeus (~> 1.3)\n      yell (~> 2.0)\n      zeitwerk (~> 2.5)\n    http_parser.rb (0.8.0)\n    i18n (1.14.1)\n      concurrent-ruby (~> 1.0)\n    io-event (1.3.3)\n    jekyll (4.3.3)\n      addressable (~> 2.4)\n      colorator (~> 1.0)\n      em-websocket (~> 0.5)\n      i18n (~> 1.0)\n      jekyll-sass-converter (>= 2.0, < 4.0)\n      jekyll-watch (~> 2.0)\n      kramdown (~> 2.3, >= 2.3.1)\n      kramdown-parser-gfm (~> 1.0)\n      liquid (~> 4.0)\n      mercenary (>= 0.3.6, < 0.5)\n      pathutil (~> 0.9)\n      rouge (>= 3.0, < 5.0)\n      safe_yaml (~> 1.0)\n      terminal-table (>= 1.8, < 4.0)\n      webrick (~> 1.7)\n    jekyll-feed (0.17.0)\n      jekyll (>= 3.7, < 5.0)\n    jekyll-sass-converter (3.0.0)\n      sass-embedded (~> 1.54)\n    jekyll-seo-tag (2.8.0)\n      jekyll (>= 3.8, < 5.0)\n    jekyll-watch (2.2.1)\n      listen (~> 3.0)\n    json (2.7.2)\n    kramdown (2.4.0)\n      rexml\n    kramdown-parser-gfm (1.1.0)\n      kramdown (~> 2.0)\n    liquid (4.0.4)\n    listen (3.8.0)\n      rb-fsevent (~> 0.10, >= 0.10.3)\n      rb-inotify (~> 0.9, >= 0.9.10)\n    mercenary (0.4.0)\n    minima (2.5.1)\n      jekyll (>= 3.5, < 5.0)\n      jekyll-feed (~> 0.9)\n      jekyll-seo-tag (~> 2.1)\n    nokogiri (1.16.5-x86_64-linux)\n      racc (~> 1.4)\n    pathutil (0.16.2)\n      forwardable-extended (~> 2.6)\n    pdf-reader (2.11.0)\n      Ascii85 (~> 1.0)\n      afm (~> 0.2.1)\n      hashery (~> 2.0)\n      ruby-rc4\n      ttfunk\n    public_suffix (5.0.5)\n    racc (1.7.3)\n    rainbow (3.1.1)\n    rake (13.2.1)\n    rb-fsevent (0.11.2)\n    rb-inotify (0.10.1)\n      ffi (~> 1.0)\n    rexml (3.3.6)\n      strscan\n    rouge (4.1.3)\n    ruby-rc4 (0.1.5)\n    safe_yaml (1.0.5)\n    sass-embedded (1.67.0-x86_64-linux-gnu)\n      google-protobuf (~> 3.23)\n    strscan (3.1.0)\n    terminal-table (3.0.2)\n      unicode-display_width (>= 1.1.1, < 3)\n    timers (4.3.5)\n    ttfunk (1.7.0)\n    typhoeus (1.4.1)\n      ethon (>= 0.9.0)\n    unicode-display_width (2.4.2)\n    webrick (1.8.1)\n    yell (2.2.2)\n    zeitwerk (2.6.13)\n\nPLATFORMS\n  x86_64-linux\n\nDEPENDENCIES\n  html-proofer\n  jekyll (~> 4.3.0)\n  kramdown-parser-gfm\n  minima (~> 2.0)\n  rake\n  webrick\n\nRUBY VERSION\n   ruby 3.1.4p223\n\nBUNDLED WITH\n   2.4.19\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.087890625,
          "content": "                              Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "NOTICES",
          "type": "blob",
          "size": 18.8037109375,
          "content": "Vespa, the open big data serving engine\nCopyright Vespa.ai. Code licensed under the Apache 2.0 license.\n\nOpen-Source Vespa uses several third-party Open-Source libraries\nwith permissive licenses. These are included here.\n\n----------------------------------------------------------------------\nBoost C++ Libraries (https://www.boost.org)\n\nBoost Software License - Version 1.0 - August 17th, 2003\n\nPermission is hereby granted, free of charge, to any person or organization\nobtaining a copy of the software and accompanying documentation covered by\nthis license (the \"Software\") to use, reproduce, display, distribute,\nexecute, and transmit the Software, and to prepare derivative works of the\nSoftware, and to permit third-parties to whom the Software is furnished to\ndo so, all subject to the following:\n\nThe copyright notices in the Software and this entire statement, including\nthe above license grant, this restriction and the following disclaimer,\nmust be included in all copies of the Software, in whole or in part, and\nall derivative works of the Software, unless such copies or derivative\nworks are solely in the form of machine-executable object code generated by\na source language processor.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT\nSHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE\nFOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,\nARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\nDEALINGS IN THE SOFTWARE.\n\n----------------------------------------------------------------------\nGoogle RE2 (https://github.com/google/re2)\n\nCopyright (c) 2009 The RE2 Authors. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n   * Redistributions of source code must retain the above copyright\nnotice, this list of conditions and the following disclaimer.\n   * Redistributions in binary form must reproduce the above\ncopyright notice, this list of conditions and the following disclaimer\nin the documentation and/or other materials provided with the\ndistribution.\n   * Neither the name of Google Inc. nor the names of its\ncontributors may be used to endorse or promote products derived from\nthis software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n----------------------------------------------------------------------\nOpenBLAS (https://github.com/xianyi/OpenBLAS)\n\nCopyright (c) 2011-2014, The OpenBLAS Project\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n   1. Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n\n   2. Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in\n      the documentation and/or other materials provided with the\n      distribution.\n   3. Neither the name of the OpenBLAS project nor the names of\n      its contributors may be used to endorse or promote products\n      derived from this software without specific prior written\n      permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\nARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\nLIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\nUSE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n----------------------------------------------------------------------\nOpenSSL (https://www.openssl.org)\n\nOpenSSL is licensed under the Apache License 2.0. See LICENSE under the\nVespa root for the full license text.\n\n----------------------------------------------------------------------\nLLVM (https://www.llvm.org)\n\nLLVM is licensed under the Apache License 2.0 with LLVM exceptions.\nSee LICENSE under the Vespa root for the full license text. Exceptions:\n\n---- LLVM Exceptions to the Apache 2.0 License ----\n\nAs an exception, if, as a result of your compiling your source code, portions\nof this Software are embedded into an Object form of such source code, you\nmay redistribute such embedded portions in such Object form without complying\nwith the conditions of Sections 4(a), 4(b) and 4(d) of the License.\n\nIn addition, if you combine or link compiled forms of this Software with\nsoftware that is licensed under the GPLv2 (\"Combined Software\") and if a\ncourt of competent jurisdiction determines that the patent provision (Section\n3), the indemnity provision (Section 9) or other Section of the License\nconflicts with the conditions of the GPLv2, you may retroactively and\nprospectively choose to deem waived or otherwise exclude such Section(s) of\nthe License, but only in their entirety and only with respect to the Combined\nSoftware.\n\n----------------------------------------------------------------------\nGoogletest (https://github.com/google/googletest)\n\nCopyright 2008, Google Inc.\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n    * Redistributions of source code must retain the above copyright\nnotice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above\ncopyright notice, this list of conditions and the following disclaimer\nin the documentation and/or other materials provided with the\ndistribution.\n    * Neither the name of Google Inc. nor the names of its\ncontributors may be used to endorse or promote products derived from\nthis software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n----------------------------------------------------------------------\nProtocol Buffers (https://github.com/protocolbuffers/protobuf/)\n\nCopyright 2008 Google Inc.  All rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n    * Redistributions of source code must retain the above copyright\nnotice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above\ncopyright notice, this list of conditions and the following disclaimer\nin the documentation and/or other materials provided with the\ndistribution.\n    * Neither the name of Google Inc. nor the names of its\ncontributors may be used to endorse or promote products derived from\nthis software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nCode generated by the Protocol Buffer compiler is owned by the owner\nof the input file used when generating it.  This code is not\nstandalone and requires a support library to be linked with it.  This\nsupport library is itself covered by the above license.\n\n----------------------------------------------------------------------\nxxHash (https://github.com/Cyan4973/xxHash)\n\nxxHash Library\nCopyright (c) 2012-present, Yann Collet\nAll rights reserved.\n\nBSD 2-Clause License (https://www.opensource.org/licenses/bsd-license.php)\n\nRedistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice, this\n  list of conditions and the following disclaimer in the documentation and/or\n  other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\nANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n----------------------------------------------------------------------\nLZ4 (https://github.com/lz4/lz4)\n\nLZ4 Library\nCopyright (c) 2011-2020, Yann Collet\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice, this\n  list of conditions and the following disclaimer in the documentation and/or\n  other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\nANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n----------------------------------------------------------------------\nZstandard (https://github.com/facebook/zstd)\n\nBSD License\n\nFor Zstandard software\n\nCopyright (c) 2016-present, Facebook, Inc. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\n * Redistributions of source code must retain the above copyright notice, this\n   list of conditions and the following disclaimer.\n\n * Redistributions in binary form must reproduce the above copyright notice,\n   this list of conditions and the following disclaimer in the documentation\n   and/or other materials provided with the distribution.\n\n * Neither the name Facebook nor the names of its contributors may be used to\n   endorse or promote products derived from this software without specific\n   prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\nANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n----------------------------------------------------------------------\nzlib (https://www.zlib.net/)\n\n  Copyright (C) 1995-2017 Jean-loup Gailly and Mark Adler\n\n  This software is provided 'as-is', without any express or implied\n  warranty.  In no event will the authors be held liable for any damages\n  arising from the use of this software.\n\n  Permission is granted to anyone to use this software for any purpose,\n  including commercial applications, and to alter it and redistribute it\n  freely, subject to the following restrictions:\n\n  1. The origin of this software must not be misrepresented; you must not\n     claim that you wrote the original software. If you use this software\n     in a product, an acknowledgment in the product documentation would be\n     appreciated but is not required.\n  2. Altered source versions must be plainly marked as such, and must not be\n     misrepresented as being the original software.\n  3. This notice may not be removed or altered from any source distribution.\n\n----------------------------------------------------------------------\nICU (https://github.com/unicode-org/icu)\n\nICU License - ICU 1.8.1 and later\n\nCOPYRIGHT AND PERMISSION NOTICE\n\nCopyright (c) 1995-2013 International Business Machines Corporation and\nothers\n\nAll rights reserved.\n\nPermission is hereby granted, free of charge, to any person obtaining a\ncopy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, and/or sell copies of the Software, and to permit persons\nto whom the Software is furnished to do so, provided that the above\ncopyright notice(s) and this permission notice appear in all copies of\nthe Software and that both the above copyright notice(s) and this\npermission notice appear in supporting documentation.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\nOR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT\nOF THIRD PARTY RIGHTS. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR\nHOLDERS INCLUDED IN THIS NOTICE BE LIABLE FOR ANY CLAIM, OR ANY SPECIAL\nINDIRECT OR CONSEQUENTIAL DAMAGES, OR ANY DAMAGES WHATSOEVER RESULTING\nFROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT,\nNEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION\nWITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n\nExcept as contained in this notice, the name of a copyright holder\nshall not be used in advertising or otherwise to promote the sale, use\nor other dealings in this Software without prior written authorization\nof the copyright holder.\n\n----------------------------------------------------------------------\nONNX Runtime (https://github.com/microsoft/onnxruntime)\n\nMIT License\n\nCopyright (c) Microsoft Corporation\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n----------------------------------------------------------------------\nZero-Allocation-Hashing (https://github.com/OpenHFT/Zero-Allocation-Hashing)\n\nCopyright 2015 Higher Frequency Trading http://www.higherfrequencytrading.com\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n----------------------------------------------------------------------\nGoogle Abseil - C++ Common Libraries (https://github.com/abseil/abseil-cpp)\n\nGoogle Abseil is licensed under the Apache License 2.0. See LICENSE under the\nVespa root for the full license text.\n\n"
        },
        {
          "name": "OWNERS",
          "type": "blob",
          "size": 0.0087890625,
          "content": "bratseth\n"
        },
        {
          "name": "README-cmake.md",
          "type": "blob",
          "size": 8.154296875,
          "content": "<!-- Copyright Vespa.ai. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root. -->\nCMake Guide\n===========\n\nThis is a guide describing how to use the Vespa-specific CMake functions and macros.\nThe Vespa CMake setup wraps or combines a number of CMake functions to simplify defining library and executable targets, and to automatically create targets that depend on a subset of targets.\n\n# `vespa_add_library`\nThe `vespa_add_library` function is used to define a library.\nAt the least, it takes a target name and the library's source files.\n\n    vespa_add_library(<target-name> [STATIC|OBJECT|INTERFACE|TEST]\n        [SOURCES <source-file> [source-file ...]]\n        [OUTPUT_NAME <name-of-library>]\n        [DEPENDS <other-target|external-library> [other-target|external-library ...]]\n        [AFTER <other-target> [other-target ...]]\n    )\n\n## Parameters\n\n### STATIC\nParameter denoting that this is a static library.\nIf this parameter is omitted, the library is shared.\n\n### OBJECT\nParameter denoting that this is an object library.\nThis parameter is optional.\n\n### INTERFACE\nParameter denoting that this is an interface library, that is, a library producing no object files, for example, a collection of headers.\nThis parameter is optional.\n\n### TEST\nParameter denoting that this is a \"test library\".\nTest libraries are not added to the `all` target if the CMake cached variable `EXCLUDE_TESTS_FROM_ALL` is true.\n\n### SOURCES [source-file ...]\nThe `SOURCES` parameter takes a list of source files for this library.\nThis parameter can be omitted if you're defining an interface or config-only library.\n\n### OUTPUT_NAME <name-of-library>\nSpecifies the base name of the produced library file (SONAME). E.g., in Linux, if the output name is `stroustrup`, the library file would be named `libstroustrup.so`\nThis parameter is optional.\nIf it is not set, the library takes its name from the target name.\n\n### DEPENDS [other-target-or-lib ...]\nThe `DEPENDS` parameter takes a list of targets or external libraries to link to, with the following exception:\n* If `target-name` is an object library and `other-target-or-lib` is another target, instead add a dependency on `other-target-or-lib` (like `AFTER`).\nThis parameter is optional.\n\n### AFTER [other-target ...]\nAdd a (weak) build dependency on every target in the given list, requiring only that the target is built before `target-name`.\nThis parameter is optional.\n\n\n# `vespa_add_executable`\nThe `vespa_add_executable` function is used to define an executable/application.\nAt the least, the function takes a target name and the executable's source files.\n\n    vespa_add_executable(<target-name> [TEST]\n        SOURCES <source-file> [source-file ...]\n        [OUTPUT_NAME <name-of-executable>]\n        [DEPENDS <other-target|external-library> [other-target|external-library ...]]\n        [AFTER <other-target> [other-target ...]]\n    )\n\n### TEST\nParameter denoting that this is a \"test executable\".\nTest executables are not added to the `all` target if the CMake cached variable `EXCLUDE_TESTS_FROM_ALL` is set to a true value.\n\n### SOURCES [source_file ...]\nThe `SOURCES` parameter takes a list of source files for this executable.\nThis parameter is required.\n\n### OUTPUT-NAME <name-of-executable>\nSpecifies the base name of the produced executable file (omitting the file extension).\nThis parameter is optional.\nIf this parameter is not set, the executable takes its name from the target name.\n\n### DEPENDS [other-target-or-lib ...]\nThe `DEPENDS` parameter takes a list of targets or external libraries to link to.\nThis parameter is optional.\n\n### AFTER [other-target ...]\nAdd a (weak) build dependency on every target in the given list, requiring only that the target is built before `target-name`.\nThis parameter is optional.\n\n\n# `vespa_generate_config`\n\n    vespa_generate_config(<for-target-name> <config-def-path>)\n    \n`vespa_generate_config` generates from config definition (`.def`) files.\n\n`<for-target-name>` is the name of the target you want the generated config object to be linked to.\nThis target needs to have been defined before you call `vespa_generate_config`.\n\n\n# `vespa_define_module`\n\nThe `vespa_define_module` defines a *module*.\nA module is a collection of targets under a directory root (e.g. `searchlib`)\nThe name of the module is the same as the directory name where the module is defined.\nThe module definition is used to specify common dependencies for every target defined (by use of `vespa_add_library/executable`) under the module.\n\n\n        vespa_define_module(\n            DEPENDS\n            vespalib\n            bjarnelib\n\n            EXTERNAL_DEPENDS\n            xml2\n\n            LIBS\n            src/vespa/lib1\n            src/vespa/lib2\n            \n            LIB_DEPENDS\n            docproc2000\n            \n            LIB_EXTERNAL_DEPENDS\n            andrei_allocators\n\n            APPS\n            src/apps/app1\n            src/apps/app2\n            \n            APP_DEPENDS\n            searchlib\n            \n            APP_EXTERNAL_DEPENDS\n            stroustrup_utils\n\n            TESTS\n            src/tests/app1_test\n            src/tests/app2_test\n            \n            TEST_DEPENDS\n            homemade_printf_from_uni\n            \n            TEST_EXTERNAL_DEPENDS\n            andrei_allocators\n            cppunit\n        )\n\nDirectories containing `CMakeLists.txt` with library/executable definitions are divided into three categories by the use of the following `vespa_define_module` parameters: `LIBS` (libraries), `APPS` (applications), and `TESTS`.\n\nYou can define common target dependencies for all targets defined with `vespa_add_library/executable` by listing them using the `LIB_DEPENDS`/`APP_DEPENDS`/`TEST_DEPENDS` parameters.\nUse `LIB_EXTERNAL_DEPENDS`/`APP_EXTERNAL_DEPENDS`/`TEST_EXTERNAL_DEPENDS` for external library dependencies (this is different from `DEPENDS` in `vespa_add_library/executable` which can be used to specify both internal target dependencies and external library dependencies).\nFinally, you can use `DEPENDS` and `EXTERNAL_DEPENDS` to specify, respectively, common target dependencies and common external library dependencies for all the categories.\n\nThe definitions within these directories need not strictly adhere to categories in which their parent directory are listed; the categories are simply a way to split common dependencies into three disjoint sets.\n\n\n# `vespa_add_test`\n\n    vespa_add_test(NAME <test-name> [NO_VALGRIND|RUN_SERIAL|BENCHMARK]\n        COMMAND <command> [command ...]\n        [WORKING_DIRECTORY <working-directory>]\n        [ENVIRONMENT <environment-stringlist>]\n    )\n    \n`vespa_add_test` defines a test using the CTest integration of CMake.\nHave in mind that tests are **not** targets, so they can't depend on other targets.\nIf your test depends on a target being built for it to run, you need to build that target first.\nRunning the test will not trigger building targets required by the test.\n\n`vespa_add_test` takes the following parameters.\n\n### NAME <test-name>\nName of test as shown by the output of CTest and used as an identifier for running tests based on a regex match on test names.\nThis parameter is required.\n\n### NO_VALGRIND\nDo not run this test under Valgrind even if the CMake variable `VALGRIND_UNIT_TESTS` is true. \nThis parameter is optional and defaults to false.\n\n### RUN_SERIAL\nDo not run this test in parallel with any other test.\nThis parameter is optional and defaults to false.\n\n### BENCHMARK\nOnly run this test if the CMake variable `RUN_BENCHMARKS` is true.\nThis parameter is optional and defaults to false.\n\n### COMMAND\nEither the name of a target that produces an executable (whereby the test will run the executable) or a command line that is to be executed when the test runs.\nThis parameter is required.\n\n### WORKING_DIRECTORY\nWorking directory when running the test.\nThis parameter is optional and defaults to `CMAKE_CURRENT_BINARY_DIR`.\n\n### ENVIRONMENT\nA quoted list in the form `\"NAME1=value1;NAME2=value2\"`\n\n\n# `vespa_install_script`\n\n    vespa_install_script(<filename> [<to-filename>] <destination-dir>)\n\nInstall (copy) a shell script `<filename>`, optionally as the destination filename `<to-filename>`, to the directory `<destination-dir>` under the install prefix, and set correct executable permissions.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.7431640625,
          "content": "<!-- Copyright Vespa.ai. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root. -->\n\n<picture>\n  <source media=\"(prefers-color-scheme: dark)\" srcset=\"https://assets.vespa.ai/logos/Vespa-logo-green-RGB.svg\">\n  <source media=\"(prefers-color-scheme: light)\" srcset=\"https://assets.vespa.ai/logos/Vespa-logo-dark-RGB.svg\">\n  <img alt=\"#Vespa\" width=\"200\" src=\"https://assets.vespa.ai/logos/Vespa-logo-dark-RGB.svg\" style=\"margin-bottom: 25px;\">\n</picture>\n<br/><br/>\n\n[![Build status](https://badge.buildkite.com/34f7cb35b91da4f929794c5fd7aa722fc15ca0224ad240270b.svg)](https://buildkite.com/vespaai/vespa-engine-vespa)\n![GitHub License](https://img.shields.io/github/license/vespa-engine/vespa)\n![Maven metadata URL](https://img.shields.io/maven-metadata/v?metadataUrl=https%3A%2F%2Frepo1.maven.org%2Fmaven2%2Fcom%2Fyahoo%2Fvespa%2Fparent%2Fmaven-metadata.xml)\n\n\n\nSearch, make inferences in and organize vectors, tensors, text and structured data, at serving time and any scale.\n\nThis repository contains all the code required to build and run all of Vespa yourself,\nand where you can see all development as it happens.\nAll the content in this repository is licensed under the Apache 2.0 license.\n\nA new release of Vespa is made from this repository's master branch every morning CET Monday through Thursday.\n\n- Home page: [https://vespa.ai](https://vespa.ai)\n- Documentation: [https://docs.vespa.ai](https://docs.vespa.ai)\n- Continuous build: [https://factory.vespa.ai](https://factory.vespa.ai)\n- Run applications in the cloud for free: [https://cloud.vespa.ai](https://cloud.vespa.ai)\n\n## Table of contents\n\n- [Background](#background)\n- [Install](#install)\n- [Usage](#usage)\n- [Contribute](#contribute)\n- [Building](#building)\n- [License](#license)\n\n## Background\n\nUse cases such as search, recommendation and personalization need to select a subset of data in a large corpus,\nevaluate machine-learned models over the selected data, organize and aggregate it and return it, typically in less\nthan 100 milliseconds, all while the data corpus is continuously changing.\n\nThis is hard to do, especially with large data sets that need to be distributed over multiple nodes and evaluated in\nparallel. Vespa is a platform that performs these operations for you with high availability and performance.\nIt has been in development for many years and is used on several large internet services and apps which serve\nhundreds of thousands of queries from Vespa per second.\n\n## Install\n\nDeploy your Vespa applications to the cloud service: [https://cloud.vespa.ai](https://cloud.vespa.ai),\nor run your own Vespa instance: [https://docs.vespa.ai/en/getting-started.html](https://docs.vespa.ai/en/getting-started.html)\n\n## Usage\n\n- The application created in the getting started guides linked above is fully functional and production-ready, but you may want to [add more nodes](https://docs.vespa.ai/en/multinode-systems.html) for redundancy.\n- See [developing applications](https://docs.vespa.ai/en/developer-guide.html) on adding your own Java components to your Vespa application.\n- [Vespa APIs](https://docs.vespa.ai/en/api.html) is useful to understand how to interface with Vespa\n- Explore the [sample applications](https://github.com/vespa-engine/sample-apps/tree/master)\n- Follow the [Vespa Blog](https://blog.vespa.ai/) for feature updates / use cases\n\nFull documentation is at [https://docs.vespa.ai](https://docs.vespa.ai).\n\n## Contribute\n\nWe welcome contributions! See [CONTRIBUTING.md](CONTRIBUTING.md) to learn how to contribute.\n\nIf you want to contribute to the documentation, see\n[https://github.com/vespa-engine/documentation](https://github.com/vespa-engine/documentation)\n\n## Building\n\nYou do not need to build Vespa to use it, but if you want to contribute you need to be able to build the code.\nThis section explains how to build and test Vespa. To understand where to make changes, see [Code-map.md](Code-map.md).\nSome suggested improvements with pointers to code are in [TODO.md](TODO.md).\n\n### Development environment\n\nC++ and Java building is supported on AlmaLinux 8.\nThe Java source can also be built on any platform having Java 17 and Maven 3.8+ installed.\nUse the following guide to set up a complete development environment using Docker\nfor building Vespa, running unit tests and running system tests:\n[Vespa development on AlmaLinux 8](https://github.com/vespa-engine/docker-image-dev#vespa-development-on-almalinux-8).\n\n#### Java environment for Mac\n1. Install [JDK17](https://openjdk.org/projects/jdk/17/), \n   [Maven Version Manager](https://bitbucket.org/mjensen/mvnvm/src/master/) and [jEnv](https://www.jenv.be)\n   through [Homebrew](https://brew.sh/).\n```sh\nbrew install jenv mvnvm openjdk@17\n```\n\n2. For the system Java wrappers to find this JDK, symlink it with\n```sh\nsudo ln -sfn /opt/homebrew/opt/openjdk@17/libexec/openjdk.jdk /Library/Java/JavaVirtualMachines/openjdk-17.jdk\n```\n\n3. Follow \"Configure your shell\" in https://www.jenv.be. Configuration is shell specific. For `zsh` use the below commands:\n```sh\necho 'export PATH=\"$HOME/.jenv/bin:$PATH\"' >> ~/.zshrc\necho 'eval \"$(jenv init -)\"' >> ~/.zshrc\neval \"$(jenv init -)\"\njenv enable-plugin export\nexec $SHELL -l\n```\n\n4. Add JDK17 to jEnv\n```sh\njenv add $(/usr/libexec/java_home -v 17)\n```\n\n5. Verify configuration with Maven by executing below command in the root of the source code.\n   Output should refer to the JDK and Maven version specified in the [.java-version](.java-version) and [mvnvm.properties](mvnvm.properties).\n```sh\nmvn -v\n```\n\n### Build Java modules\n\n    export MAVEN_OPTS=\"-Xms128m -Xmx1024m\"\n    ./bootstrap.sh java\n    mvn install --threads 1C\n\nUse this if you only need to build the Java modules, otherwise follow the complete development guide above.\n\n## License\n\nCode licensed under the Apache 2.0 license. See [LICENSE](LICENSE) for terms.\n"
        },
        {
          "name": "TODO.md",
          "type": "blob",
          "size": 8.759765625,
          "content": "<!-- Copyright Vespa.ai. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root. -->\n\n# List of possible future enhancements and features\n\nThis lists some possible improvements to Vespa that have been considered or requested, can be developed relatively\nindependently of other work, and are not yet under development. For more information on the code structure in Vespa, see\n[Code-map.md](Code-map.md).\n\n## Support query profiles for document processors\n\n**Effort:** Low<br/>\n**Difficulty:** Low<br/>\n**Skills:** Java\n\nQuery profiles make it simple to support multiple buckets, behavior profiles for different use cases, etc. by providing\nbundles of parameters accessible to Searchers processing queries. Writes go through a similar chain of processors -\nDocument Processors, but have no equivalent support for parametrization. This is to allow configuration of document\nprocessor profiles by reusing the query profile support also for document processors.\n\n**Code pointers:**\n\n- [Query profiles](https://github.com/vespa-engine/vespa/blob/master/container-search/src/main/java/com/yahoo/search/query/profile/QueryProfile.java)\n- [Document processors](https://github.com/vespa-engine/vespa/blob/master/docproc/src/main/java/com/yahoo/docproc/DocumentProcessor.java)\n\n## Java implementation of the content layer for testing\n\n**Effort:** Medium<br/>\n**Difficulty:** Low<br/>\n**Skills:** Java\n\nThere is currently support for creating Application instances programmatically in Java to unit-test application package\nfunctionality (see com.yahoo.application.Application). However, only Java component functionality can be tested in this\nway as the content layer is not available, being implemented in C++. A Java implementation, of some or all of the\nfunctionality would enable developers to do more testing locally within their IDE. This is medium effort because\nperformance is not a concern and some components, such as ranking expressions and features are already available as\nlibraries (see the searchlib module).\n\n**Code pointers:**\n\n- Content cluster mock in Java (currently empty): [ContentCluster](https://github.com/vespa-engine/vespa/blob/master/application/src/main/java/com/yahoo/application/content/ContentCluster.java)\n- The model of a search definition must consume config from: [Search](https://github.com/vespa-engine/vespa/blob/master/config-model/src/main/java/com/yahoo/schema/Schema.java)\n\n## Indexed search in maps\n\n**Effort:** Medium<br/>\n**Difficulty:** Medium<br/>\n**Skills:** C++, multithreading, performance, indexing, data structures\n\nVespa supports maps and making them searchable in memory by declaring as an attribute.\nHowever, maps cannot be indexed as text-search disk indexes.\n\n**Code pointers:**\n\n- [Current text indexes](https://github.com/vespa-engine/vespa/tree/master/searchlib/src/vespa/searchlib/index)\n\n## Global writes\n\n**Effort:** High<br/>\n**Difficulty:** High<br/>\n**Skills:** C++, Java, distributed systems, performance, multithreading, network, distributed consistency\n\nVespa instances distribute data automatically within clusters, but these clusters are meant to consist of co-located\nmachines - the distribution algorithm is not suitable for global distribution across data centers because it cannot\nseamlessly tolerate data center-wide outages and does not attempt to minimize bandwidth usage between data centers.\nThe application usually achieves global presence instead by setting up multiple independent instances in different\ndata centers and write to all in parallel. This is robust and works well on average, but puts an additional burden on\napplications to achieve cross-datacenter data consistency on datacenter failures, and does not enable automatic\ndata recovery across data centers, such that data redundancy is effectively required within each data center.\nThis is fine in most cases, but not in the case where storage space drives cost and intermittent loss of data coverage\n(completeness as seen from queries) is tolerable.\n\nA solution should sustain current write rates (tens of thousands of writes per node per second), sustain write and read\nrates on loss of connectivity to one (any) data center, re-establish global data consistency when a lost data center is\nrecovered and support some degree of the tradeoff between consistency and operation latency (although the exact modes to be\nsupported is part of the design and analysis needed).\n\n**Code pointers:**\n\n- [Document API](https://github.com/vespa-engine/vespa/tree/master/documentapi/src/main/java/com/yahoo/documentapi)\n\n## Global dynamic tensors\n\n**Effort:** High<br/>\n**Difficulty:** High<br/>\n**Skills:** Java, C++, distributed systems, performance, networking, distributed consistency\n\nTensors in ranking models may either be passed with the query, be part of the document or be configured as part of the\napplication package (global tensors). This is fine for many kinds of models but does not support the case of really\nlarge tensors (which barely fit in memory) and/or dynamically changing tensors (online learning of global models).\nThese use cases require support for global tensors (tensors available locally on all content nodes during execution\nbut not sent with the query or residing in documents) which are not configured as part of the application package but\nwhich are written independently and dynamically update-able at a high write rate. To support this at a large scale, with a\nhigh write rate, we need a small cluster of nodes storing the source of truth of the global tensor which has\nperfect consistency. This in turn must push updates to all content nodes in a best-effort fashion given a fixed bandwidth\nbudget, such that query execution and document write traffic is prioritized over ensuring perfect consistency of global\nmodel updates.\n\n**Code pointers:**\n\n- Tensor modify operation (for document tensors): [Java](https://github.com/vespa-engine/vespa/blob/master/document/src/main/java/com/yahoo/document/update/TensorModifyUpdate.java), [C++](https://github.com/vespa-engine/vespa/blob/master/document/src/vespa/document/update/tensor_modify_update.h)\n\n## Feed clients in different languages\n\n**Effort:** Low<br/>\n**Difficulty:** Low<br/>\n**Skills:** Knowledge of a decent HTTP/2 library in some language\n\n/document/v1 is a RESTified HTTP API that exposes the Vespa Document API to the\noutside of the application's Java containers. The design of this API is simple,\nwith each operation modeled as a single HTTP request, and its result as\na single HTTP response. While it was previously not possible to achieve comparable\nthroughput using this API to what the undocumented, custom-protocol /feedapi offered,\nthis changed with HTTP/2 support in Vespa. The clean design of /document/v1 makes it\neasy to interface with any language and runtime that supports HTTP/2.\nAn implementation currently only exists for Java and requires a JDK8+ runtime,\nand implementations in other languages are very welcome. The below pseudocode could\nbe a starting point for an asynchronous implementation with futures and promises.\n\nLet `http` be an asynchronous HTTP/2 client, which returns a `future` for each request.\nA `future` will complete some time in the future, at which point dependent computations\nwill trigger, depending on the result of the operation. A `future` is obtained from a\n`promise`, and completed when the `promise` is completed. An efficient feed client is then:\n\n```\ninflight = map<document_id, promise>()\n\nfunc dispatch(operation: request, result: promise, attempt: int): void\n    http.send(operation).when_complete(response => handle(operation, response, result, attempt))\n\nfunc handle(operation: request, response: response, result: promise, attempt: int): void\n    if retry(response, attempt):\n        dispatch(operation, result, attempt + 1)\n    else:\n        result.complete(response)\n\nfunc enqueue(operation): future\n    result_promise = promise()\n    result = result_promise.get_future()\n    previous = inflight.put(document.id, result)  # store `result` under `id` and obtain previous mapping\n    if previous == NIL:\n        while inflight.size >= max_inflight(): wait()\n        dispatch(operation, result, 1)\n    else:\n        previous.when_complete(ignored => dispatch(operation, result, 1))\n    result.when_complete(ignored => inflight.remove_value(result)) # remove mapping unless it has been replaced\n    return result\n```\n\nApply synchronization as necessary. The `inflight` map is used to serialize multiple operations\nto the same document id: the mapped entry for each id is the tail of a linked queue where new\ndependents may be added, while the queue is emptied from the head one entry at a time, whenever\na dependency (`previous`) completes computation. `enqueue` blocks until there is room in the client.\n\n**Code pointers:**\n\n- [Java feed client](https://github.com/vespa-engine/vespa/blob/master/vespa-feed-client-api/src/main/java/ai/vespa/feed/client/FeedClient.java)\n"
        },
        {
          "name": "VERSION",
          "type": "blob",
          "size": 0.005859375,
          "content": "8.0.0\n"
        },
        {
          "name": "_config.yml",
          "type": "blob",
          "size": 0.0634765625,
          "content": "# Exclude from build for linkcheck job\nexclude: [\"airlift-zstd\"]\n"
        },
        {
          "name": "abi-check-plugin",
          "type": "tree",
          "content": null
        },
        {
          "name": "annotations",
          "type": "tree",
          "content": null
        },
        {
          "name": "application-model",
          "type": "tree",
          "content": null
        },
        {
          "name": "application",
          "type": "tree",
          "content": null
        },
        {
          "name": "bootstrap.sh",
          "type": "blob",
          "size": 2.77734375,
          "content": "#!/bin/bash -e\n# Copyright Vespa.ai. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.\n\nusage() {\n    echo \"Usage: $0 [full | java | default]\" >&2\n}\n\nif [ $# -eq 0 ]; then\n    # Build minimal set of java modules required to run cmake\n    MODE=default\nelif [ \"$1\" = \"full\" ]; then\n    # Build all java modules required by C++ testing\n    MODE=full\nelif [ \"$1\" = \"java\" ]; then\n    # Build only plugins\n    MODE=java\nelif [ \"$1\" = \"default\" ]; then\n    MODE=default\nelif [ \"$1\" = \"-h\" ] || [ \"$1\" = \"--help\" ]; then\n    usage\n    exit 0\nelse\n    echo \"Unknown argument: $1\" >&2\n    usage\n    exit 1\nfi\n\nget_env_var_with_optional_default() {\n   local var_name=$1\n   local default_val=$2\n   eval \"existing_value=\\${$var_name}\"\n    if [[ -n $existing_value ]]; then\n        echo \"$existing_value\"\n    elif [[ -n $default_val ]]; then\n        echo \"$default_val\"\n    fi\n}\n\nreadonly MAVEN_CMD=$(get_env_var_with_optional_default VESPA_MAVEN_COMMAND \"$(pwd)/mvnw\")\nreadonly MAVEN_EXTRA_OPTS=$(get_env_var_with_optional_default VESPA_MAVEN_EXTRA_OPTS)\nreadonly MAVEN_TARGET=$(get_env_var_with_optional_default VESPA_MAVEN_TARGET \"install\")\necho \"Using maven command: ${MAVEN_CMD}\"\necho \"Using maven extra opts: ${MAVEN_EXTRA_OPTS}\"\necho \"Using maven target: ${MAVEN_TARGET}\"\n\nmvn_install() {\n    ${MAVEN_CMD} --batch-mode --no-snapshot-updates -Dmaven.wagon.http.retryHandler.count=5 clean ${MAVEN_TARGET} ${MAVEN_EXTRA_OPTS} \"$@\"\n}\n\n# Generate vtag map\ntop=$(dirname $0)\n$top/dist/getversionmap.sh $top > $top/dist/vtag.map\n\n# NOTES ON BUILDING JAVA MODULES\n#\n# mvn is unable to resolve references to a plugin, if the same mvn\n# program builds the plugin in the same reactor build.\n#\n# Therefore, we need to manually build all plugins first.\n#\n# The 'java' mode only builds the plugins.\n# The 'default' mode also builds some modules needed by C++ code.\n# The 'full' mode also builds modules needed by C++ tests.\n\n# Set up maven wrapper.\necho \"Setting up maven wrapper in $(pwd)\"\nmvn -B wrapper:wrapper -Dmaven=3.8.8 -N ${MAVEN_EXTRA_OPTS}\n${MAVEN_CMD} -v\n\n# must install parent poms first:\necho \"Downloading all dependencies. This may take a few minutes with an empty Maven cache.\"\n(\n  cd dependency-versions\n  mvn_install\n)\n(\n  cd container-dependency-versions\n  mvn_install\n)\n(\n  cd parent\n  mvn_install\n)\nmvn_install -N\n\n# and build plugins first:\necho \"Building Vespa Maven plugins.\"\nmvn_install -f maven-plugins/pom.xml\n\n# now everything else should just work with normal maven dependency resolution:\n\ncase \"$MODE\" in\n    java)\n        ;;\n    full)\n\techo \"Building full set of dependencies.\"\n        mvn_install -am -T1C -Dmaven.test.skip=true -Dmaven.javadoc.skip=true -Dmaven.source.skip=true -pl jrt,linguistics,messagebus\n        ;;\n    default)\n\techo \"Building default set of dependencies.\"\n        ;;\nesac\n"
        },
        {
          "name": "build_settings.cmake",
          "type": "blob",
          "size": 12.1435546875,
          "content": "# Copyright Vespa.ai. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.\n# @author Vegard Sjonfjell\n\nif (EXISTS ${CMAKE_CURRENT_LIST_DIR}/vtag.cmake)\n  include(${CMAKE_CURRENT_LIST_DIR}/vtag.cmake)\nendif()\n\nif (VESPA_USE_SANITIZER)\n    if (VESPA_USE_SANITIZER STREQUAL \"address\" OR VESPA_USE_SANITIZER STREQUAL \"thread\" OR\n        VESPA_USE_SANITIZER STREQUAL \"undefined\" OR VESPA_USE_SANITIZER STREQUAL \"address,undefined\")\n        message(\"-- Instrumenting code using ${VESPA_USE_SANITIZER} sanitizer\")\n    else()\n        message(FATAL_ERROR \"Unsupported sanitizer option '${VESPA_USE_SANITIZER}'. Supported: 'address', 'thread', 'undefined' or 'address,undefined'\")\n    endif()\nendif()\n\n# Build options\n# Whether to build unit tests as part of the 'all' target\nset(EXCLUDE_TESTS_FROM_ALL FALSE CACHE BOOL \"If TRUE, do not build tests as part of the 'all' target\")\n\n# Whether to run unit tests via valgrind\nset(VALGRIND_UNIT_TESTS FALSE CACHE BOOL \"If TRUE, run unit tests via valgrind\")\n\n# Whether to use ccache when building\nset(VESPA_USE_CCACHE TRUE CACHE BOOL \"If TRUE, use ccache (if available) when building\")\n\n# Whether to run tests marked as benchmark as part of the test runs\nset(RUN_BENCHMARKS FALSE CACHE BOOL \"If TRUE, benchmarks are run together with the other tests\")\n\n# Whether to run tests marked as benchmark as part of the test runs\nset(AUTORUN_UNIT_TESTS FALSE CACHE BOOL \"If TRUE, tests will be run immediately after linking the test executable\")\n\n# Warnings\nset(C_WARN_OPTS \"-Wuninitialized -Werror -Wall -W -Wchar-subscripts -Wcomment -Wformat -Wparentheses -Wreturn-type -Wswitch -Wtrigraphs -Wunused -Wshadow -Wpointer-arith -Wcast-qual -Wcast-align -Wwrite-strings\")\nif (VESPA_USE_SANITIZER OR VESPA_DISABLE_INLINE_WARNINGS)\n    # Instrumenting code changes binary size, which triggers inlining warnings that\n    # don't happen during normal, non-instrumented compilation.\nelse()\n    set(C_WARN_OPTS \"-Winline ${C_WARN_OPTS}\")\nendif()\nif (VESPA_USE_SANITIZER)\n  if (VESPA_USE_SANITIZER MATCHES \"address\" AND CMAKE_CXX_COMPILER_ID STREQUAL \"GNU\" AND CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 12.0)\n    # Turn off maybe uninitialized and restrict warnings when compiling with\n    # address sanitizer on gcc 12 or newer.\n    set(C_WARN_OPTS \"${C_WARN_OPTS} -Wno-maybe-uninitialized -Wno-restrict\")\n  endif()\n  if (VESPA_USE_SANITIZER STREQUAL \"thread\" AND CMAKE_CXX_COMPILER_ID STREQUAL \"GNU\" AND CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 12.0)\n    # Turn off warning about std::atomic_thread_fence not being supported by\n    # address sanitizer.\n    set(C_WARN_OPTS \"${C_WARN_OPTS} -Wno-tsan\")\n  endif()\nendif()\nif(CMAKE_CXX_COMPILER_ID STREQUAL \"GNU\" AND CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 12.0 AND NOT CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 13.0)\n  if(VESPA_OS_DISTRO_COMBINED STREQUAL \"debian 12\" OR VESPA_OS_DISTRO_COMBINED STREQUAL \"ubuntu 22.04\")\n    # Turn off restrict warnings when compiling with gcc 12 on Debian 12 or\n    # Ubuntu 22.04\n    set(C_WARN_OPTS \"${C_WARN_OPTS} -Wno-restrict\")\n  endif()\nendif()\nif(CMAKE_CXX_COMPILER_ID STREQUAL \"GNU\" AND CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 14.0)\n    # Turn off maybe uninitialized warning and don't promote inline warning\n    # to error when compiling with gcc 14 or newer.\n    set(C_WARN_OPTS \"${C_WARN_OPTS} -Wno-maybe-uninitialized -Wno-error=inline\")\nendif()\n\n# Warnings that are specific to C++ compilation\n# Note: this is not a union of C_WARN_OPTS, since CMAKE_CXX_FLAGS already includes CMAKE_C_FLAGS, which in turn includes C_WARN_OPTS transitively\nset(VESPA_ATOMIC_LIB \"atomic\")\nif (\"${CMAKE_CXX_COMPILER_ID}\" STREQUAL \"Clang\" OR \"${CMAKE_CXX_COMPILER_ID}\" STREQUAL \"AppleClang\")\n  set(CXX_SPECIFIC_WARN_OPTS \"-Wnon-virtual-dtor -Wformat-security -Wno-overloaded-virtual\")\n  if(CMAKE_CXX_COMPILER_ID STREQUAL \"Clang\" AND CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 18.0)\n    set(CXX_SPECIFIC_WARN_OPTS \"${CXX_SPECIFIC_WARN_OPTS} -Wno-error=vla-cxx-extension\")\n  endif()\n  set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -fno-delete-null-pointer-checks -fsized-deallocation\")\n  if(CMAKE_HOST_SYSTEM_NAME STREQUAL \"Darwin\")\n    set(VESPA_ATOMIC_LIB \"\")\n    set(VESPA_GCC_LIB \"\")\n  else()\n    if (CMAKE_CXX_COMPILER_VERSION VERSION_LESS 8.0)\n      set(VESPA_GCC_LIB \"gcc\")\n    else()\n      set(VESPA_GCC_LIB \"\")\n    endif()\n  endif()\nelse()\n  set(CXX_SPECIFIC_WARN_OPTS \"-Wnoexcept -Wsuggest-override -Wnon-virtual-dtor -Wformat-security -Wmismatched-tags\")\n  set(VESPA_GCC_LIB \"gcc\")\nendif()\n\n# Detect uring shared library.\nif(EXISTS \"/usr/${CMAKE_INSTALL_LIBDIR}/liburing.so\")\n  set(VESPA_URING_LIB \"uring\")\n  message(\"-- liburing found\")\nelse()\n  set(VESPA_URING_LIB \"\")\n  message(\"-- liburing not found\")\nendif()\n\n# Disable dangling reference and overloaded virtual warnings when using gcc 13\n# Disable stringop-oveflow, stringop-overread and array-bounds warning when using gcc 13.\n# The latter heuristics are sufficiently broken to be useless in practice.\nif(CMAKE_CXX_COMPILER_ID STREQUAL \"GNU\")\n  if (CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL \"13\")\n    set(CXX_SPECIFIC_WARN_OPTS \"${CXX_SPECIFIC_WARN_OPTS} -Wno-dangling-reference -Wno-overloaded-virtual -Wno-stringop-overflow -Wno-stringop-overread -Wno-array-bounds\")\n  endif()\nendif()\n\nif(CMAKE_CXX_COMPILER_ID STREQUAL \"GNU\" AND VESPA_USE_LTO)\n  # Enable lto\n  set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -flto=auto -ffat-lto-objects\")\nendif()\n\n# C and C++ compiler flags\nset(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -g -O3 -fno-omit-frame-pointer ${C_WARN_OPTS} -fPIC ${VESPA_CXX_ABI_FLAGS} -DXXH_INLINE_ALL -DBOOST_DISABLE_ASSERTS ${VESPA_CPU_ARCH_FLAGS} ${EXTRA_C_FLAGS}\")\n# AddressSanitizer/ThreadSanitizer work for both GCC and Clang\nif (VESPA_USE_SANITIZER)\n    set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -fsanitize=${VESPA_USE_SANITIZER}\")\n    if (VESPA_USE_SANITIZER MATCHES \"undefined\")\n        # Many false positives when checking vptr due to limited visibility\n        set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -fno-sanitize=vptr\")\n    endif()\nendif()\nset(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} ${CMAKE_C_FLAGS} ${CXX_SPECIFIC_WARN_OPTS} -fdiagnostics-color=auto ${EXTRA_CXX_FLAGS}\")\nif (\"${CMAKE_CXX_COMPILER_ID}\" STREQUAL \"AppleClang\")\n  set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} \")\nelse()\n  set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -fvisibility-inlines-hidden \")\nendif()\nif (CMAKE_CXX_COMPILER_ID STREQUAL \"GNU\" AND CMAKE_CXX_COMPILER_VERSION VERSION_LESS 11.0)\n  set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -fcoroutines\")\nendif()\nif(CMAKE_CXX_COMPILER_ID STREQUAL \"Clang\" AND CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 17.0)\n  # Turn off dynamic_cast optimization that came with clang 17.0.1\n  set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -fno-assume-unique-vtables\")\nendif()\nif(CMAKE_CXX_COMPILER_ID STREQUAL \"AppleClang\" AND CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 16.0)\n  # Turn off dynamic_cast optimization that came with Command Line Tools 16\n  set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -fno-assume-unique-vtables\")\nendif()\nif(CMAKE_HOST_SYSTEM_NAME STREQUAL \"Darwin\")\n  set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -DGOOGLE_PROTOBUF_NO_RDTSC\")\n  if(CMAKE_CXX_COMPILER_ID STREQUAL \"Clang\" AND CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 15.0)\n    set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -DBOOST_NO_CXX98_FUNCTION_BASE\")\n  endif()\nendif()\n\n# Hardening\nif(CMAKE_CXX_COMPILER_ID STREQUAL \"GNU\" AND VESPA_USE_HARDENING)\n  set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -Wp,-D_FORTIFY_SOURCE=2 -Wp,-D_GLIBCXX_ASSERTIONS -fstack-protector-strong -fasynchronous-unwind-tables -fstack-clash-protection -fcf-protection\")\nendif()\n\n# Linker flags\nif (APPLE)\n    if(\"${CMAKE_CXX_COMPILER_ID}\" STREQUAL \"Clang\")\n        # We use the libc++ header files bundled with homebrew llvm, use the\n        # bundled libraries too.\n        set(HOMEBREW_CLANGXX_EXTRA_LINKER_FLAGS \"-L${VESPA_HOMEBREW_PREFIX}/opt/llvm/lib/c++ -L${VESPA_HOMEBREW_PREFIX}/opt/llvm/lib/unwind -lunwind\")\n        set(CMAKE_SHARED_LINKER_FLAGS \"${CMAKE_SHARED_LINKER_FLAGS} ${HOMEBREW_CLANGXX_EXTRA_LINKER_FLAGS}\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} ${HOMEBREW_CLANGXX_EXTRA_LINKER_FLAGS}\")\n    endif()\nendif()\nif(CMAKE_HOST_SYSTEM_NAME STREQUAL \"Darwin\")\n  if (\"${CMAKE_CXX_COMPILER_ID}\" STREQUAL \"Clang\" OR \"${CMAKE_CXX_COMPILER_ID}\" STREQUAL \"AppleClang\")\n    set(CMAKE_SHARED_LINKER_FLAGS \"${CMAKE_SHARED_LINKER_FLAGS} -ldl\")\n  else()\n    set(CMAKE_SHARED_LINKER_FLAGS \"${CMAKE_SHARED_LINKER_FLAGS} -latomic -ldl\")\n  endif()\nelse()\n  if(VESPA_ATOMIC_LIB STREQUAL \"\")\n    set(CMAKE_SHARED_LINKER_FLAGS \"${CMAKE_SHARED_LINKER_FLAGS} -Wl,--build-id -ldl -Wl,-E\")\n  else()\n    set(CMAKE_SHARED_LINKER_FLAGS \"${CMAKE_SHARED_LINKER_FLAGS} -Wl,--build-id -latomic -ldl -Wl,-E\")\n  endif()\nendif()\nSET(CMAKE_EXE_LINKER_FLAGS  \"${CMAKE_EXE_LINKER_FLAGS} -rdynamic\" )\n\nmessage(\"-- CMAKE_SHARED_LINKER_FLAGS is ${CMAKE_SHARED_LINKER_FLAGS}\")\n\n# Use C++ 23\nset(CMAKE_CXX_STANDARD 23)\n\n# Always build shared libs if not explicitly specified\nset(BUILD_SHARED_LIBS ON)\n\nset(CMAKE_THREAD_PREFER_PTHREAD TRUE)\n\n# Default RPATH settings for CMake 3.4:\n# For non-installed targets, reference external libraries using an RPATH into the build tree.\n# For installed targets, reference external libraries using INSTALL_RPATH (i.e. /opt/vespa/lib64 on ylinux)\nset(CMAKE_CMAKE_SKIP_BUILD_RPATH FALSE)\nset(CMAKE_BUILD_WITH_INSTALL_RPATH FALSE)\nset(CMAKE_INSTALL_RPATH_USE_LINK_PATH FALSE)\n\n# OS X Stuff\nif(CMAKE_HOST_SYSTEM_NAME STREQUAL \"Darwin\")\n    set(MACOSX_RPATH ON)\n\n    if(__COMPILER_GNU)\n        SET(CMAKE_INCLUDE_SYSTEM_FLAG_C \"-isystem \")\n        SET(CMAKE_INCLUDE_SYSTEM_FLAG_CXX \"-isystem \")\n    endif()\nendif()\n\n# Find ccache and use it if it is found unless disabled\nif (VESPA_USE_CCACHE)\n    find_program(CCACHE_EXECUTABLE ccache)\n    if(CCACHE_EXECUTABLE)\n        message(\"-- Using ccache ${CCACHE_EXECUTABLE}\")\n        set_property(GLOBAL PROPERTY RULE_LAUNCH_COMPILE ${CCACHE_EXECUTABLE})\n        set_property(GLOBAL PROPERTY RULE_LAUNCH_LINK ${CCACHE_EXECUTABLE})\n    endif()\nendif()\n\n# Check for valgrind and set flags\nfind_program(VALGRIND_EXECUTABLE valgrind)\nif(VALGRIND_EXECUTABLE)\n    set(VALGRIND_SUPPRESSIONS_FILE \"${PROJECT_SOURCE_DIR}/valgrind-suppressions.txt\")\n    set(VALGRIND_OPTIONS \"--leak-check=yes --fair-sched=yes --error-exitcode=1 --run-libc-freeres=no --track-origins=yes --suppressions=${VALGRIND_SUPPRESSIONS_FILE}\")\n    set(VALGRIND_COMMAND \"${VALGRIND_EXECUTABLE} ${VALGRIND_OPTIONS}\")\nendif()\n# Automatically set sanitizer suppressions file and arguments for unit tests\nif(VESPA_USE_SANITIZER)\n    if(VESPA_USE_SANITIZER STREQUAL \"thread\")\n        set(VESPA_SANITIZER_SUPPRESSIONS_FILE \"${PROJECT_SOURCE_DIR}/tsan-suppressions.txt\")\n        # Maximize the amount of history we can track, including mutex order inversion histories\n        set(VESPA_SANITIZER_ENV \"TSAN_OPTIONS=suppressions=${VESPA_SANITIZER_SUPPRESSIONS_FILE} history_size=7 detect_deadlocks=1 second_deadlock_stack=1\")\n    endif()\nendif()\n# Dump stack when finding issues in unit tests using undefined sanitizer\nif(VESPA_USE_SANITIZER)\n    if(VESPA_USE_SANITIZER MATCHES \"undefined\")\n        set(VESPA_SANITIZER_ENV \"UBSAN_OPTIONS=print_stacktrace=1\")\n    endif()\nendif()\n\nif(VESPA_LLVM_VERSION)\nelse()\nset (VESPA_LLVM_VERSION \"6.0\")\nendif()\n\nif(CMAKE_HOST_SYSTEM_NAME STREQUAL \"Darwin\")\n  set(VESPA_LLVM_LIB \"LLVM\")\n  set(VESPA_GLIBC_RT_LIB \"\")\nelse()\n  set(VESPA_LLVM_LIB \"LLVM-${VESPA_LLVM_VERSION}\")\n  set(VESPA_GLIBC_RT_LIB \"rt\")\nendif()\n\nif(VESPA_USER)\nelse()\n  set(VESPA_USER \"vespa\")\nendif()\n\nif(NOT DEFINED VESPA_GROUP)\n  set(VESPA_GROUP \"vespa\")\nendif()\n\nif(VESPA_UNPRIVILEGED)\nelse()\n  set(VESPA_UNPRIVILEGED \"no\")\nendif()\n\nif(EXTRA_INCLUDE_DIRECTORY)\n    include_directories(SYSTEM ${EXTRA_INCLUDE_DIRECTORY})\nendif()\nif(EXTRA_LINK_DIRECTORY)\n    link_directories(${EXTRA_LINK_DIRECTORY})\nendif()\n\nif(CMAKE_HOST_SYSTEM_NAME STREQUAL \"Darwin\")\nelse()\nif(NOT VESPA_USE_SANITIZER OR NOT \"${CMAKE_CXX_COMPILER_ID}\" STREQUAL \"Clang\")\n  # Don't allow unresolved symbols in shared libraries\n  set(VESPA_DISALLOW_UNRESOLVED_SYMBOLS_IN_SHARED_LIBRARIES \"-Wl,--no-undefined\")\nendif()\n# Don't allow unresolved symbols in executables\nset(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -Wl,--no-undefined\")\n\n# Enable GTest unit tests in shared libraries\nset(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -Wl,--no-as-needed\")\nendif()\n"
        },
        {
          "name": "bundle-plugin-test",
          "type": "tree",
          "content": null
        },
        {
          "name": "bundle-plugin",
          "type": "tree",
          "content": null
        },
        {
          "name": "client",
          "type": "tree",
          "content": null
        },
        {
          "name": "cloud-tenant-base-dependencies-enforcer",
          "type": "tree",
          "content": null
        },
        {
          "name": "cloud-tenant-base",
          "type": "tree",
          "content": null
        },
        {
          "name": "cloud-tenant-cd",
          "type": "tree",
          "content": null
        },
        {
          "name": "clustercontroller-apps",
          "type": "tree",
          "content": null
        },
        {
          "name": "clustercontroller-core",
          "type": "tree",
          "content": null
        },
        {
          "name": "clustercontroller-reindexer",
          "type": "tree",
          "content": null
        },
        {
          "name": "clustercontroller-utils",
          "type": "tree",
          "content": null
        },
        {
          "name": "cmake",
          "type": "tree",
          "content": null
        },
        {
          "name": "component",
          "type": "tree",
          "content": null
        },
        {
          "name": "config-application-package",
          "type": "tree",
          "content": null
        },
        {
          "name": "config-bundle",
          "type": "tree",
          "content": null
        },
        {
          "name": "config-class-plugin",
          "type": "tree",
          "content": null
        },
        {
          "name": "config-lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "config-model-api",
          "type": "tree",
          "content": null
        },
        {
          "name": "config-model-fat",
          "type": "tree",
          "content": null
        },
        {
          "name": "config-model",
          "type": "tree",
          "content": null
        },
        {
          "name": "config-provisioning",
          "type": "tree",
          "content": null
        },
        {
          "name": "config-proxy",
          "type": "tree",
          "content": null
        },
        {
          "name": "config",
          "type": "tree",
          "content": null
        },
        {
          "name": "configd",
          "type": "tree",
          "content": null
        },
        {
          "name": "configdefinitions",
          "type": "tree",
          "content": null
        },
        {
          "name": "configgen",
          "type": "tree",
          "content": null
        },
        {
          "name": "configserver-flags",
          "type": "tree",
          "content": null
        },
        {
          "name": "configserver",
          "type": "tree",
          "content": null
        },
        {
          "name": "configutil",
          "type": "tree",
          "content": null
        },
        {
          "name": "container-apache-http-client-bundle",
          "type": "tree",
          "content": null
        },
        {
          "name": "container-core",
          "type": "tree",
          "content": null
        },
        {
          "name": "container-dependencies-enforcer",
          "type": "tree",
          "content": null
        },
        {
          "name": "container-dependency-versions",
          "type": "tree",
          "content": null
        },
        {
          "name": "container-dev",
          "type": "tree",
          "content": null
        },
        {
          "name": "container-disc",
          "type": "tree",
          "content": null
        },
        {
          "name": "container-documentapi",
          "type": "tree",
          "content": null
        },
        {
          "name": "container-llama",
          "type": "tree",
          "content": null
        },
        {
          "name": "container-messagebus",
          "type": "tree",
          "content": null
        },
        {
          "name": "container-onnxruntime",
          "type": "tree",
          "content": null
        },
        {
          "name": "container-search-and-docproc",
          "type": "tree",
          "content": null
        },
        {
          "name": "container-search",
          "type": "tree",
          "content": null
        },
        {
          "name": "container-spifly",
          "type": "tree",
          "content": null
        },
        {
          "name": "container-test",
          "type": "tree",
          "content": null
        },
        {
          "name": "container",
          "type": "tree",
          "content": null
        },
        {
          "name": "default_build_settings.cmake",
          "type": "blob",
          "size": 12.587890625,
          "content": "# Copyright Vespa.ai. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.\n\ninclude(VespaExtendedDefaultBuildSettings OPTIONAL)\n\nfunction(setup_vespa_default_build_settings_darwin)\n  message(\"-- Setting up default build settings for darwin\")\n  set(DEFAULT_EXTRA_LINK_DIRECTORY \"${VESPA_DEPS_PREFIX}/lib\" \"${VESPA_HOMEBREW_PREFIX}/opt/bison/lib\" \"${VESPA_HOMEBREW_PREFIX}/opt/flex/lib\" \"${VESPA_HOMEBREW_PREFIX}/opt/icu4c/lib\" \"${VESPA_HOMEBREW_PREFIX}/opt/openssl@3/lib\" \"${VESPA_HOMEBREW_PREFIX}/opt/openblas/lib\")\n  list(APPEND DEFAULT_EXTRA_LINK_DIRECTORY \"${VESPA_HOMEBREW_PREFIX}/lib\")\n  set(DEFAULT_EXTRA_LINK_DIRECTORY \"${DEFAULT_EXTRA_LINK_DIRECTORY}\" PARENT_SCOPE)\n  set(DEFAULT_EXTRA_INCLUDE_DIRECTORY \"${VESPA_DEPS_PREFIX}/include\" \"${VESPA_HOMEBREW_PREFIX}/opt/flex/include\" \"${VESPA_HOMEBREW_PREFIX}/opt/icu4c/include\" \"${VESPA_HOMEBREW_PREFIX}/opt/openssl@3/include\" \"${VESPA_HOMEBREW_PREFIX}/opt/openblas/include\")\n  list(APPEND DEFAULT_EXTRA_INCLUDE_DIRECTORY \"${VESPA_HOMEBREW_PREFIX}/include\")\n  set(DEFAULT_EXTRA_INCLUDE_DIRECTORY \"${DEFAULT_EXTRA_INCLUDE_DIRECTORY}\" PARENT_SCOPE)\nendfunction()\n\nfunction(vespa_use_default_vespa_unprivileged)\n  if(NOT DEFINED VESPA_UNPRIVILEGED)\n    message(\"-- Setting VESPA_UNPRIVILEGED to yes\")\n    set(VESPA_UNPRIVILEGED \"yes\" PARENT_SCOPE)\n  endif()\nendfunction()\n\nfunction(vespa_use_default_cmake_install_prefix)\n  if(CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT)\n    if(VESPA_UNPRIVILEGED STREQUAL \"no\")\n      set(DEFAULT_CMAKE_INSTALL_PREFIX \"/opt/vespa\")\n      if(COMMAND vespa_use_specific_install_prefix)\n        vespa_use_specific_install_prefix()\n      endif()\n    else()\n      set(DEFAULT_CMAKE_INSTALL_PREFIX \"$ENV{HOME}/vespa\")\n    endif()\n    message(\"-- Setting CMAKE_INSTALL_PREFIX to ${DEFAULT_CMAKE_INSTALL_PREFIX}\")\n    set(CMAKE_INSTALL_PREFIX \"${DEFAULT_CMAKE_INSTALL_PREFIX}\" CACHE PATH \"Install prefix for vespa project\" FORCE)\n  endif()\nendfunction()\n\nfunction(vespa_use_default_vespa_user)\n  if(NOT DEFINED VESPA_USER)\n    if(VESPA_UNPRIVILEGED STREQUAL \"no\")\n      set(DEFAULT_VESPA_USER \"vespa\")\n      if(COMMAND vespa_use_specific_vespa_user)\n        vespa_use_specific_vespa_user()\n      endif()\n    else()\n      set(DEFAULT_VESPA_USER \"$ENV{USER}\")\n    endif()\n    message(\"-- Setting VESPA_USER to ${DEFAULT_VESPA_USER}\")\n    set(VESPA_USER \"${DEFAULT_VESPA_USER}\" PARENT_SCOPE)\n  endif()\nendfunction()\n\nfunction(vespa_use_default_vespa_group)\n  if(NOT DEFINED VESPA_GROUP)\n    if(VESPA_UNPRIVILEGED STREQUAL \"no\")\n      set(DEFAULT_VESPA_GROUP \"vespa\")\n      if(COMMAND vespa_use_specific_vespa_group)\n        vespa_use_specific_vespa_group()\n      endif()\n    else()\n      execute_process(COMMAND id -gn ${VESPA_USER} OUTPUT_VARIABLE DEFAULT_VESPA_GROUP)\n      string(STRIP ${DEFAULT_VESPA_GROUP} DEFAULT_VESPA_GROUP)\n    endif()\n    message(\"-- Setting VESPA_GROUP to ${DEFAULT_VESPA_GROUP}\")\n    set(VESPA_GROUP \"${DEFAULT_VESPA_GROUP}\" PARENT_SCOPE)\n  endif()\nendfunction()\n\nfunction(vespa_use_default_vespa_deps_prefix)\n  set(VESPA_DEPS_PREFIX \"/opt/vespa-deps\")\n  if(APPLE)\n    if(\"${CMAKE_CXX_COMPILER_ID}\" STREQUAL \"Clang\")\n      set(VESPA_DEPS_PREFIX \"/opt/vespa-deps-clang\")\n    elseif(\"${CMAKE_CXX_COMPILER_ID}\" STREQUAL \"AppleClang\")\n      set(VESPA_DEPS_PREFIX \"/opt/vespa-deps-appleclang\")\n    endif()\n  endif()\n  if(COMMAND vespa_use_specific_vespa_deps)\n    vespa_use_specific_vespa_deps()\n  endif()\n  message(\"-- Setting VESPA_DEPS_PREFIX to ${VESPA_DEPS_PREFIX}\")\n  set(VESPA_DEPS_PREFIX ${VESPA_DEPS_PREFIX} PARENT_SCOPE)\nendfunction()\n\nfunction(vespa_use_default_cmake_prefix_path)\n  set(DEFAULT_CMAKE_PREFIX_PATH ${VESPA_DEPS_PREFIX})\n  if (APPLE)\n    list(APPEND DEFAULT_CMAKE_PREFIX_PATH \"${VESPA_HOMEBREW_PREFIX}/opt/bison\" \"${VESPA_HOMEBREW_PREFIX}/opt/flex\" \"${VESPA_HOMEBREW_PREFIX}/opt/openssl@3\" \"${VESPA_HOMEBREW_PREFIX}/opt/openblas\" \"${VESPA_HOMEBREW_PREFIX}/opt/icu4c\")\n  endif()\n  message(\"-- DEFAULT_CMAKE_PREFIX_PATH is ${DEFAULT_CMAKE_PREFIX_PATH}\")\n  if(NOT DEFINED CMAKE_PREFIX_PATH)\n    message(\"-- Setting CMAKE_PREFIX_PATH to ${DEFAULT_CMAKE_PREFIX_PATH}\")\n    set(CMAKE_PREFIX_PATH ${DEFAULT_CMAKE_PREFIX_PATH} PARENT_SCOPE)\n  endif()\nendfunction()\n\nfunction(vespa_use_default_build_settings)\n  unset(DEFAULT_EXTRA_LINK_DIRECTORY)\n  unset(DEFAULT_EXTRA_INCLUDE_DIRECTORY)\n  unset(DEFAULT_VESPA_CPU_ARCH_FLAGS)\n  unset(DEFAULT_CMAKE_SHARED_LINKER_FLAGS)\n  if(COMMAND vespa_use_specific_compiler_rpath)\n    vespa_use_specific_compiler_rpath()\n  endif()\n  if(APPLE)\n    setup_vespa_default_build_settings_darwin()\n  else()\n    message(\"-- Setting up default build settings for for ${VESPA_OS_DISTRO_COMBINED}\")\n  endif()\n  set(DEFAULT_VESPA_LLVM_VERSION ${LLVM_VERSION_MAJOR})\n  if(NOT DEFINED DEFAULT_EXTRA_LINK_DIRECTORY)\n    set(DEFAULT_EXTRA_LINK_DIRECTORY \"${VESPA_DEPS_PREFIX}/${CMAKE_INSTALL_LIBDIR}\")\n    list(APPEND DEFAULT_EXTRA_LINK_DIRECTORY ${LLVM_LIBRARY_DIRS})\n    list(REMOVE_ITEM DEFAULT_EXTRA_LINK_DIRECTORY \"/usr/${CMAKE_INSTALL_LIBDIR}\")\n    list(REMOVE_DUPLICATES DEFAULT_EXTRA_LINK_DIRECTORY)\n  endif()\n  if(NOT DEFINED DEFAULT_EXTRA_INCLUDE_DIRECTORY)\n    set(DEFAULT_EXTRA_INCLUDE_DIRECTORY \"${VESPA_DEPS_PREFIX}/include\")\n    list(APPEND DEFAULT_EXTRA_INCLUDE_DIRECTORY ${LLVM_INCLUDE_DIRS})\n    if(EXISTS \"/usr/include/openblas\")\n      list(APPEND DEFAULT_EXTRA_INCLUDE_DIRECTORY \"/usr/include/openblas\")\n    endif()\n    list(REMOVE_ITEM DEFAULT_EXTRA_INCLUDE_DIRECTORY \"/usr/include\")\n    list(REMOVE_DUPLICATES DEFAULT_EXTRA_INCLUDE_DIRECTORY)\n  endif()\n  if(DEFINED DEFAULT_CMAKE_SHARED_LINKER_FLAGS)\n    message(\"-- DEFAULT_CMAKE_SHARED_LINKER_FLAGS is ${DEFAULT_CMAKE_SHARED_LINKER_FLAGS}\")\n    set(CMAKE_SHARED_LINKER_FLAGS \"${CMAKE_SHARED_LINKER_FLAGS} ${DEFAULT_CMAKE_SHARED_LINKER_FLAGS}\" PARENT_SCOPE)\n  endif()\n  if(NOT DEFINED DEFAULT_VESPA_CPU_ARCH_FLAGS)\n    message(\"-- CMAKE_SYSTEM_PROCESSOR = ${CMAKE_SYSTEM_PROCESSOR}\")\n    if(CMAKE_SYSTEM_PROCESSOR STREQUAL \"x86_64\")\n      if(APPLE AND ((\"${CMAKE_CXX_COMPILER_ID}\" STREQUAL \"Clang\") OR (\"${CMAKE_CXX_COMPILER_ID}\" STREQUAL \"AppleClang\")))\n      elseif(CMAKE_CXX_COMPILER_ID STREQUAL \"Clang\")\n        set(DEFAULT_VESPA_CPU_ARCH_FLAGS \"-march=haswell -mtune=skylake-avx512\")\n      elseif(CMAKE_CXX_COMPILER_ID STREQUAL \"GNU\")\n        if(CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 12.0 AND NOT CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 12.3)\n          # Temporary workaround for https://gcc.gnu.org/bugzilla/show_bug.cgi?id=108599\n          set(DEFAULT_VESPA_CPU_ARCH_FLAGS \"-march=haswell -mtune=skylake\")\n        else()\n          # Default to haswell cpu or newer\n          set(DEFAULT_VESPA_CPU_ARCH_FLAGS \"-march=haswell -mtune=skylake-avx512\")\n\tendif()\n      endif()\n    elseif(CMAKE_SYSTEM_PROCESSOR STREQUAL \"aarch64\")\n      set(DEFAULT_VESPA_CPU_ARCH_FLAGS \"-march=armv8.2-a+fp16+dotprod+crypto -mtune=neoverse-n1\")\n    endif()\n  endif()\n  if(DEFINED DEFAULT_EXTRA_LINK_DIRECTORY)\n    message(\"-- DEFAULT_EXTRA_LINK_DIRECTORY is ${DEFAULT_EXTRA_LINK_DIRECTORY}\")\n  endif()\n  if(DEFINED DEFAULT_EXTRA_INCLUDE_DIRECTORY)\n    message(\"-- DEFAULT_EXTRA_INCLUDE_DIRECTORY is ${DEFAULT_EXTRA_INCLUDE_DIRECTORY}\")\n  endif()\n  message(\"-- DEFAULT_VESPA_LLVM_VERSION is ${DEFAULT_VESPA_LLVM_VERSION}\")\n  message(\"-- DEFAULT_VESPA_CPU_ARCH_FLAGS is ${DEFAULT_VESPA_CPU_ARCH_FLAGS}\")\n  if(NOT DEFINED EXTRA_INCLUDE_DIRECTORY AND DEFINED DEFAULT_EXTRA_INCLUDE_DIRECTORY)\n    message(\"-- Setting EXTRA_INCLUDE_DIRECTORY to ${DEFAULT_EXTRA_INCLUDE_DIRECTORY}\")\n    set(EXTRA_INCLUDE_DIRECTORY \"${DEFAULT_EXTRA_INCLUDE_DIRECTORY}\" PARENT_SCOPE)\n  endif()\n  if(NOT DEFINED EXTRA_LINK_DIRECTORY AND DEFINED DEFAULT_EXTRA_LINK_DIRECTORY)\n    message(\"-- Setting EXTRA_LINK_DIRECTORY to ${DEFAULT_EXTRA_LINK_DIRECTORY}\")\n    set(EXTRA_LINK_DIRECTORY \"${DEFAULT_EXTRA_LINK_DIRECTORY}\" PARENT_SCOPE)\n    set(EXTRA_LINK_DIRECTORY \"${DEFAULT_EXTRA_LINK_DIRECTORY}\")\n  endif()\n  if(NOT DEFINED CMAKE_INSTALL_RPATH)\n    if(NOT \"${VESPA_COMPILER_RPATH}\" STREQUAL \"${CMAKE_INSTALL_PREFIX}/lib64\")\n      list(APPEND CMAKE_INSTALL_RPATH \"${CMAKE_INSTALL_PREFIX}/lib64\")\n    endif()\n    if(DEFINED EXTRA_LINK_DIRECTORY)\n      list(APPEND CMAKE_INSTALL_RPATH \"${EXTRA_LINK_DIRECTORY}\")\n    endif()\n    if(DEFINED VESPA_COMPILER_RPATH)\n      list(APPEND CMAKE_INSTALL_RPATH \"${VESPA_COMPILER_RPATH}\")\n    endif()\n    message(\"-- Setting CMAKE_INSTALL_RPATH to ${CMAKE_INSTALL_RPATH}\")\n    set(CMAKE_INSTALL_RPATH \"${CMAKE_INSTALL_RPATH}\" PARENT_SCOPE)\n  endif()\n  if(NOT DEFINED CMAKE_BUILD_RPATH AND DEFINED VESPA_COMPILER_RPATH)\n    if(DEFINED EXTRA_LINK_DIRECTORY)\n      list(APPEND CMAKE_BUILD_RPATH \"${EXTRA_LINK_DIRECTORY}\")\n    endif()\n    list(APPEND CMAKE_BUILD_RPATH \"${VESPA_COMPILER_RPATH}\")\n    if(DEFINED CMAKE_BUILD_RPATH)\n      message(\"-- Setting CMAKE_BUILD_RPATH to ${CMAKE_BUILD_RPATH}\")\n      set(CMAKE_BUILD_RPATH \"${CMAKE_BUILD_RPATH}\" PARENT_SCOPE)\n    endif()\n  endif()\n  if(NOT DEFINED VESPA_LLVM_VERSION)\n    message(\"-- Setting VESPA_LLVM_VERSION to ${DEFAULT_VESPA_LLVM_VERSION}\")\n    set(VESPA_LLVM_VERSION \"${DEFAULT_VESPA_LLVM_VERSION}\" PARENT_SCOPE)\n  endif()\n  if(NOT DEFINED VESPA_CPU_ARCH_FLAGS AND DEFINED DEFAULT_VESPA_CPU_ARCH_FLAGS)\n    message(\"-- Setting VESPA_CPU_ARCH_FLAGS to ${DEFAULT_VESPA_CPU_ARCH_FLAGS}\")\n    set(VESPA_CPU_ARCH_FLAGS \"${DEFAULT_VESPA_CPU_ARCH_FLAGS}\" PARENT_SCOPE)\n  endif()\nendfunction()\n\nfunction(vespa_use_default_cxx_compiler)\n  if (DEFINED CMAKE_C_COMPILER AND DEFINED CMAKE_CXX_COMPILER)\n    return()\n  endif()\n  unset(DEFAULT_CMAKE_C_COMPILER)\n  unset(DEFAULT_CMAKE_CXX_COMPILER)\n  if(NOT DEFINED VESPA_COMPILER_VARIANT OR VESPA_COMPILER_VARIANT STREQUAL \"gcc\")\n    if(APPLE)\n      set(DEFAULT_CMAKE_C_COMPILER \"${VESPA_HOMEBREW_PREFIX}/bin/gcc-13\")\n      set(DEFAULT_CMAKE_CXX_COMPILER \"${VESPA_HOMEBREW_PREFIX}/bin/g++-13\")\n    elseif(VESPA_OS_DISTRO_COMBINED STREQUAL \"ubuntu 22.04\" AND\n\tEXISTS \"/usr/bin/gcc-12\" AND EXISTS \"/usr/bin/g++-12\")\n      set(DEFAULT_CMAKE_C_COMPILER \"/usr/bin/gcc-12\")\n      set(DEFAULT_CMAKE_CXX_COMPILER \"/usr/bin/g++-12\")\n    endif()\n  elseif(VESPA_COMPILER_VARIANT STREQUAL \"clang\")\n    if(APPLE)\n      set(DEFAULT_CMAKE_C_COMPILER, \"${VESPA_HOMEBREW_PREFIX}/opt/llvm/bin/clang\")\n      set(DEFAULT_CMAKE_CXX_COMPILER \"${VESPA_HOMEBREW_PREFIX}/opt/llvm/bin/clang++\")\n    elseif(EXISTS \"/usr/bin/clang\" AND EXISTS \"/usr/bin/clang++\")\n      set(DEFAULT_CMAKE_C_COMPILER \"/usr/bin/clang\")\n      set(DEFAULT_CMAKE_CXX_COMPILER \"/usr/bin/clang++\")\n    else()\n      message(FATAL_ERROR \"-- clang compiler variant not supported for ${VESPA_OS_DISTRO_COMBINED}\")\n    endif()\n  elseif(VESPA_COMPILER_VARIANT STREQUAL \"appleclang\")\n    if(APPLE)\n      set(DEFAULT_CMAKE_C_COMPILER \"/usr/bin/clang\")\n      set(DEFAULT_CMAKE_CXX_COMPILER \"/usr/bin/clang++\")\n    else()\n      message(FATAL_ERROR \"-- appleclang compiler variant not supported for ${VESPA_OS_DISTRO_COMBINED}\")\n    endif()\n  else()\n    message(FATAL_ERROR \"-- unknown compiler variant ${VESPA_COMPILER_VARIANT}\")\n  endif()\n  if(COMMAND vespa_use_specific_cxx_compiler)\n    vespa_use_specific_cxx_compiler()\n  endif()\n  if(DEFINED DEFAULT_CMAKE_C_COMPILER)\n    message(\"-- DEFAULT_CMAKE_C_COMPILER is ${DEFAULT_CMAKE_C_COMPILER}\")\n  endif()\n  if(DEFINED DEFAULT_CMAKE_CXX_COMPILER)\n    message(\"-- DEFAULT_CMAKE_CXX_COMPILER is ${DEFAULT_CMAKE_CXX_COMPILER}\")\n  endif()\n  if(DEFINED DEFAULT_EXTRA_LINK_DIRECTORY)\n    message(\"-- DEFAULT_EXTRA_LINK_DIRECTORY is ${DEFAULT_EXTRA_LINK_DIRECTORY}\")\n  endif()\n  if(NOT DEFINED CMAKE_C_COMPILER AND DEFINED DEFAULT_CMAKE_C_COMPILER)\n    message(\"-- Setting CMAKE_C_COMPILER to ${DEFAULT_CMAKE_C_COMPILER}\")\n    set(CMAKE_C_COMPILER \"${DEFAULT_CMAKE_C_COMPILER}\" PARENT_SCOPE)\n  endif()\n  if(NOT DEFINED CMAKE_CXX_COMPILER AND DEFINED DEFAULT_CMAKE_CXX_COMPILER)\n    message(\"-- Setting CMAKE_CXX_COMPILER to ${DEFAULT_CMAKE_CXX_COMPILER}\")\n    set(CMAKE_CXX_COMPILER \"${DEFAULT_CMAKE_CXX_COMPILER}\" PARENT_SCOPE)\n  endif()\nendfunction()\n\nfunction(vespa_use_default_java_home)\n  if (DEFINED JAVA_HOME)\n    return()\n  endif()\n  set(DEFAULT_JAVA_HOME \"/usr/lib/jvm/java-17-openjdk\")\n  if(APPLE)\n    execute_process(COMMAND \"/usr/libexec/java_home\" OUTPUT_VARIABLE DEFAULT_JAVA_HOME)\n    string(STRIP \"${DEFAULT_JAVA_HOME}\" DEFAULT_JAVA_HOME)\n  elseif(VESPA_OS_DISTRO STREQUAL \"ubuntu\" OR VESPA_OS_DISTRO STREQUAL \"debian\")\n    set(DEFAULT_JAVA_HOME \"/usr/lib/jvm/java-17-openjdk-amd64\")\n  elseif(VESPA_OS_DISTRO STREQUAL \"amzn\")\n    set(DEFAULT_JAVA_HOME \"/usr/lib/jvm/java-17-amazon-corretto\")\n  endif()\n  if(COMMAND vespa_use_specific_java_home)\n    vespa_use_specific_java_home()\n  endif()\n  message(\"-- DEFAULT_JAVA_HOME is ${DEFAULT_JAVA_HOME}\")\n  if(NOT DEFINED JAVA_HOME AND DEFINED DEFAULT_JAVA_HOME)\n    message(\"-- Setting JAVA_HOME to ${DEFAULT_JAVA_HOME}\")\n    set(JAVA_HOME \"${DEFAULT_JAVA_HOME}\" PARENT_SCOPE)\n  endif()\nendfunction()\n"
        },
        {
          "name": "defaults",
          "type": "tree",
          "content": null
        },
        {
          "name": "dependency-versions",
          "type": "tree",
          "content": null
        },
        {
          "name": "dist.sh",
          "type": "blob",
          "size": 0.6455078125,
          "content": "#!/bin/sh\n# Copyright Vespa.ai. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.\n\nif [ -z \"$1\" ]; then\n  echo \"Usage: $0 VERSION\" 2>&1\n  exit 1\nfi\n\nVERSION=\"$1\"\n\nmkdir -p ~/rpmbuild/{SOURCES,SPECS}\ngit archive --format=tar.gz --prefix=vespa-$VERSION/ -o ~/rpmbuild/SOURCES/vespa-$VERSION.tar.gz HEAD\n\nDIST_FILE=\"dist/vespa.spec\"\n# When checking out relase tags, the vespa.spec is in the source root folder. This is a workaround to be able to build rpms from a release tag.\nif [ ! -e \"$DIST_FILE\" ]; then\n  DIST_FILE=\"vespa.spec\"\nfi\n\nsed -e \"s,_VESPA_VERSION_,$VERSION,\"  < \"$DIST_FILE\" > ~/rpmbuild/SPECS/vespa-$VERSION.spec\n"
        },
        {
          "name": "dist",
          "type": "tree",
          "content": null
        },
        {
          "name": "docproc",
          "type": "tree",
          "content": null
        },
        {
          "name": "docprocs",
          "type": "tree",
          "content": null
        },
        {
          "name": "document",
          "type": "tree",
          "content": null
        },
        {
          "name": "documentapi-dependencies",
          "type": "tree",
          "content": null
        },
        {
          "name": "documentapi",
          "type": "tree",
          "content": null
        },
        {
          "name": "documentgen-test",
          "type": "tree",
          "content": null
        },
        {
          "name": "empty.cpp",
          "type": "blob",
          "size": 0,
          "content": ""
        },
        {
          "name": "eval",
          "type": "tree",
          "content": null
        },
        {
          "name": "fat-model-dependencies",
          "type": "tree",
          "content": null
        },
        {
          "name": "fbench",
          "type": "tree",
          "content": null
        },
        {
          "name": "fileacquirer",
          "type": "tree",
          "content": null
        },
        {
          "name": "filedistribution",
          "type": "tree",
          "content": null
        },
        {
          "name": "flags",
          "type": "tree",
          "content": null
        },
        {
          "name": "fnet",
          "type": "tree",
          "content": null
        },
        {
          "name": "fsa",
          "type": "tree",
          "content": null
        },
        {
          "name": "functions.cmake",
          "type": "blob",
          "size": 29.0595703125,
          "content": "# Copyright Vespa.ai. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.\n# @author Vegard Sjonfjell\n# @author Arnstein Ressem\n\nfunction(vespa_add_module_dependency OTHER_TARGET_OR_LIB)\n    if (TARGET ${OTHER_TARGET_OR_LIB})\n        get_target_property(OTHER_TARGET_TYPE ${OTHER_TARGET_OR_LIB} TYPE)\n        if(OTHER_TARGET_TYPE STREQUAL OBJECT_LIBRARY)\n            include_directories($<TARGET_PROPERTY:${OTHER_TARGET_OR_LIB},INTERFACE_INCLUDE_DIRECTORIES>)\n            return()\n        endif()\n    endif()\n\n    link_libraries(${OTHER_TARGET_OR_LIB})\nendfunction()\n\nfunction(vespa_add_target_dependency TARGET OTHER_TARGET)\n    get_target_property(TARGET_TYPE ${TARGET} TYPE)\n\n    set_property(GLOBAL APPEND PROPERTY TARGET_${OTHER_TARGET}_MODULE_DEPENDENTS ${MODULE_NAME})\n    # (Weak) dependency between object library and other target\n    if(TARGET_TYPE STREQUAL OBJECT_LIBRARY)\n        target_include_directories(${TARGET} PRIVATE $<TARGET_PROPERTY:${OTHER_TARGET},INTERFACE_INCLUDE_DIRECTORIES>)\n        return()\n    endif()\n\n    if(TARGET_TYPE STREQUAL INTERFACE_LIBRARY)\n        set(VISIBILITY INTERFACE)\n    else()\n        set(VISIBILITY PUBLIC)\n    endif()\n\n    target_link_libraries(${TARGET} ${VISIBILITY} ${OTHER_TARGET})\nendfunction()\n\nfunction(vespa_add_target_external_dependency TARGET LIB)\n    get_target_property(TARGET_TYPE ${TARGET} TYPE)\n\n    # TODO: Use generator expressions in target_link_libraries\n    if(TARGET_TYPE STREQUAL OBJECT_LIBRARY)\n        return()\n    elseif(TARGET_TYPE STREQUAL INTERFACE_LIBRARY)\n        set(VISIBILITY INTERFACE)\n    else()\n        set(VISIBILITY PUBLIC)\n    endif()\n\n    target_link_libraries(${TARGET} ${VISIBILITY} ${LIB})\nendfunction()\n\nfunction(vespa_add_package_dependency PACKAGE_NAME)\n    find_package(${PACKAGE_NAME} REQUIRED)\n    string(TOUPPER ${PACKAGE_NAME} PACKAGE_NAME)\n    string(REPLACE \"-\" \"_\" PACKAGE_NAME ${PACKAGE_NAME})\n    set(PACKAGE_INCLUDE_DIR ${${PACKAGE_NAME}_INCLUDE_DIR})\n    set(PACKAGE_LIBRARIES ${${PACKAGE_NAME}_LIBRARIES})\n    link_libraries(${PACKAGE_LIBRARIES})\n    include_directories(${PACKAGE_INCLUDE_DIR})\nendfunction()\n\n# TODO: Merge this function into add_target_system_dependency\nfunction(vespa_add_target_package_dependency TARGET PACKAGE_NAME)\n    find_package(${PACKAGE_NAME} REQUIRED)\n    string(TOUPPER ${PACKAGE_NAME} PACKAGE_NAME)\n    string(REPLACE \"-\" \"_\" PACKAGE_NAME ${PACKAGE_NAME})\n    set(PACKAGE_INCLUDE_DIR ${${PACKAGE_NAME}_INCLUDE_DIR})\n    set(PACKAGE_LIBRARIES ${${PACKAGE_NAME}_LIBRARIES})\n    target_link_libraries(${TARGET} PUBLIC ${PACKAGE_LIBRARIES})\n    target_include_directories(${TARGET} PUBLIC ${PACKAGE_INCLUDE_DIR})\nendfunction()\n\nfunction(vespa_add_target_system_dependency TARGET PACKAGE_NAME)\n    get_target_property(TARGET_TYPE ${TARGET} TYPE)\n\n    if(TARGET_TYPE STREQUAL INTERFACE_LIBRARY)\n        set(VISIBILITY INTERFACE)\n    else()\n        set(VISIBILITY PUBLIC)\n    endif()\n\n    if(TARGET_TYPE STREQUAL OBJECT_LIBRARY)\n        return()\n    endif()\n\n    if(TARGET_TYPE STREQUAL INTERFACE_LIBRARY)\n        return()\n    endif()\n\n    # Hacks <3\n    if(${PACKAGE_NAME} STREQUAL llvm)\n        set(PACKAGE_NAME LLVM)\n    endif()\n\n    # If third (optional) parameter is STATIC, link with static library.\n    # Library name specified by last optional parameter\n    if (ARGV2 STREQUAL \"STATIC\")\n        target_link_libraries(${TARGET} PUBLIC ${PACKAGE_DIR}/lib64/lib${ARGV3}.a)\n        # If third (optional) parameter is something else, link with shared library with that name\n    elseif (ARGV2)\n        target_link_libraries(${TARGET} PUBLIC ${ARGV2})\n    else()\n        target_link_libraries(${TARGET} PUBLIC ${PACKAGE_NAME})\n    endif()\nendfunction()\n\nfunction(vespa_add_source_target TARGET)\n    cmake_parse_arguments(\n        ARG\n        \"\"\n        \"\"\n        \"DEPENDS\"\n        ${ARGN}\n    )\n    add_custom_target(${TARGET} DEPENDS ${ARG_DEPENDS})\n    __add_source_target_to_module(${TARGET})\nendfunction()\n\nfunction(vespa_generate_config TARGET RELATIVE_CONFIG_DEF_PATH)\n    # Generate config-<name>.cpp and config-<name>.h from <name>.def\n    # Destination directory is always where generate_config is called (or, in the case of out-of-source builds, in the build-tree parallel)\n    # This may not be the same directory as where the .def file is located.\n\n    # Third parameter lets the user change <name> for the generated files\n    if (ARGC GREATER 2)\n        set(CONFIG_NAME ${ARGV2})\n    else()\n        get_filename_component(CONFIG_NAME ${RELATIVE_CONFIG_DEF_PATH} NAME_WE)\n    endif()\n\n    # Make config path an absolute_path\n    set(CONFIG_DEF_PATH ${CMAKE_CURRENT_LIST_DIR}/${RELATIVE_CONFIG_DEF_PATH})\n\n    # Config destination is the current source directory (or parallel in build tree)\n    # configgen.jar takes the destination dirname as a property parameter\n    set(CONFIG_DEST_DIR ${CMAKE_CURRENT_BINARY_DIR})\n\n    # Get destination dirname\n    get_filename_component(CONFIG_DEST_DIRNAME ${CMAKE_CURRENT_BINARY_DIR} NAME)\n\n    set(CONFIG_H_PATH ${CONFIG_DEST_DIR}/config-${CONFIG_NAME}.h)\n    set(CONFIG_CPP_PATH ${CONFIG_DEST_DIR}/config-${CONFIG_NAME}.cpp)\n\n    add_custom_command(\n        OUTPUT ${CONFIG_H_PATH} ${CONFIG_CPP_PATH}\n        COMMAND java -Dconfig.spec=${CONFIG_DEF_PATH} -Dconfig.dest=${CONFIG_DEST_DIR} -Dconfig.lang=cpp -Dconfig.dumpTree=false -Xms64m -Xmx64m -jar ${PROJECT_SOURCE_DIR}/configgen/target/configgen.jar\n        WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}\n        COMMENT \"Generating cpp config for ${CONFIG_NAME} in ${CMAKE_CURRENT_SOURCE_DIR}\"\n        MAIN_DEPENDENCY ${CONFIG_DEF_PATH}\n        )\n\n    if (TARGET ${TARGET}_object)\n        # Generated config is in implicit object library\n        set(TARGET \"${TARGET}_object\")\n    endif()\n    # Add generated to sources for target\n    target_sources(${TARGET} PRIVATE ${CONFIG_H_PATH} ${CONFIG_CPP_PATH})\n\n    # Needed to be able to do a #include <config-<name>.h> for this target\n    # This is used within some unit tests\n    target_include_directories(${TARGET} PRIVATE ${CONFIG_DEST_DIR})\n    vespa_add_source_target(\"configgen_${TARGET}_${CONFIG_NAME}\" DEPENDS ${CONFIG_H_PATH} ${CONFIG_CPP_PATH})\nendfunction()\n\nmacro(__split_sources_list)\n    unset(SOURCE_FILES)\n    unset(NON_TARGET_SOURCE_FILES)\n    unset(TARGET_SOURCE_FILES)\n    if(ARG_SOURCES)\n        set(SOURCE_FILES ${ARG_SOURCES})\n        set(TARGET_SOURCE_FILES ${ARG_SOURCES})\n        set(NON_TARGET_SOURCE_FILES ${ARG_SOURCES})\n        list(FILTER TARGET_SOURCE_FILES INCLUDE REGEX \"TARGET_OBJECTS:\")\n        list(FILTER NON_TARGET_SOURCE_FILES EXCLUDE REGEX \"TARGET_OBJECTS:\")\n    endif()\nendmacro()\n\nfunction(vespa_add_library TARGET)\n    cmake_parse_arguments(ARG\n        \"STATIC;OBJECT;INTERFACE;TEST;ALLOW_UNRESOLVED_SYMBOLS\"\n        \"INSTALL;OUTPUT_NAME\"\n        \"DEPENDS;EXTERNAL_DEPENDS;AFTER;SOURCES\"\n        ${ARGN})\n\n    __check_target_parameters()\n    __split_sources_list()\n    if(NOT ARG_SOURCES)\n        # In the case where no source files are given, we include an empty source file to suppress a warning from CMake\n        # This way, config-only libraries will not generate lots of build warnings\n        set(SOURCE_FILES \"${CMAKE_SOURCE_DIR}/empty.cpp\")\n        set(NON_TARGET_SOURCE_FILES ${SOURCE_FILES})\n    endif()\n\n    if(ARG_OBJECT)\n        set(LIBRARY_TYPE OBJECT)\n        __add_object_target_to_module(${TARGET})\n    elseif(ARG_STATIC)\n        set(LINKAGE STATIC)\n    elseif(ARG_INTERFACE)\n        set(LIBRARY_TYPE INTERFACE)\n        set(SOURCE_FILES)\n    endif()\n\n    if (ARG_OBJECT OR ARG_INTERFACE OR TARGET ${TARGET}_object OR NOT NON_TARGET_SOURCE_FILES)\n        unset(VESPA_ADD_IMPLICIT_OBJECT_LIBRARY)\n        add_library(${TARGET} ${LINKAGE} ${LIBRARY_TYPE} ${SOURCE_FILES})\n    else()\n        set(VESPA_ADD_IMPLICIT_OBJECT_LIBRARY True)\n        add_library(${TARGET} ${LINKAGE} ${LIBRARY_TYPE} $<TARGET_OBJECTS:${TARGET}_object> ${TARGET_SOURCE_FILES})\n    endif()\n    __add_dependencies_to_target()\n\n    __handle_test_targets()\n\n    if(ARG_INSTALL)\n        install(TARGETS ${TARGET} DESTINATION ${ARG_INSTALL})\n        __install_header_files()\n    endif()\n\n    if(ARG_OUTPUT_NAME)\n        set_target_properties(${TARGET} PROPERTIES OUTPUT_NAME ${ARG_OUTPUT_NAME})\n    endif()\n\n    if(NOT ARG_OBJECT AND NOT ARG_STATIC AND NOT ARG_INTERFACE AND NOT ARG_ALLOW_UNRESOLVED_SYMBOLS AND DEFINED VESPA_DISALLOW_UNRESOLVED_SYMBOLS_IN_SHARED_LIBRARIES)\n        target_link_options(${TARGET} PRIVATE ${VESPA_DISALLOW_UNRESOLVED_SYMBOLS_IN_SHARED_LIBRARIES})\n    endif()\n\n    __add_target_to_module(${TARGET})\n    __export_include_directories(${TARGET})\n    if(VESPA_ADD_IMPLICIT_OBJECT_LIBRARY)\n      unset(VESPA_ADD_IMPLICIT_OBJECT_LIBRARY)\n      vespa_add_library(${TARGET}_object OBJECT SOURCES ${NON_TARGET_SOURCE_FILES} DEPENDS ${ARG_DEPENDS})\n      add_dependencies(${TARGET} ${TARGET}_object)\n    endif()\nendfunction()\n\nfunction(__install_header_files)\n    # Currently all header files are installed as they are not explicitly listed for each library. The\n    # proper way would be for each module to list its header files to install.\n\n    # Only install header for targets in */src/vespa/*.\n    string(REPLACE \"/\" \";\" PATH_COMPONENTS ${CMAKE_CURRENT_SOURCE_DIR})\n    list(REVERSE PATH_COMPONENTS)\n    list(GET PATH_COMPONENTS 1 SECOND_ELEMENT)\n    list(GET PATH_COMPONENTS 2 THIRD_ELEMENT)\n    if (${SECOND_ELEMENT} STREQUAL \"vespa\" AND ${THIRD_ELEMENT} STREQUAL \"src\")\n        # Preserve the name */src/vespa/<name> as not every module has <name>=module name (e.g. vespalog)\n        get_filename_component(RELATIVE_TO ${CMAKE_CURRENT_SOURCE_DIR} DIRECTORY)\n        file(GLOB_RECURSE HEADERS RELATIVE ${RELATIVE_TO} \"*.h\" \"*.hpp\")\n        foreach(HEADER ${HEADERS})\n            get_filename_component(RELDIR ${HEADER} DIRECTORY)\n            install(FILES ${RELATIVE_TO}/${HEADER} DESTINATION include/vespa/${RELDIR})\n        endforeach()\n   endif()   \nendfunction()\n\nfunction(vespa_add_executable TARGET)\n    cmake_parse_arguments(ARG\n        \"TEST\"\n        \"INSTALL;OUTPUT_NAME\"\n        \"DEPENDS;EXTERNAL_DEPENDS;AFTER;SOURCES\"\n        ${ARGN})\n\n    __check_target_parameters()\n    __split_sources_list()\n    if(TARGET ${TARGET}_object OR NOT NON_TARGET_SOURCE_FILES OR ARG_TEST)\n        unset(VESPA_ADD_IMPLICIT_OBJECT_LIBRARY)\n        add_executable(${TARGET} ${ARG_SOURCES})\n    else()\n        set(VESPA_ADD_IMPLICIT_OBJECT_LIBRARY True)\n        add_executable(${TARGET} $<TARGET_OBJECTS:${TARGET}_object> ${TARGET_SOURCE_FILES})\n    endif()\n    __add_dependencies_to_target()\n\n    __handle_test_targets()\n\n    if(ARG_INSTALL)\n        install(TARGETS ${TARGET} DESTINATION ${ARG_INSTALL})\n    endif()\n\n    if(ARG_OUTPUT_NAME)\n        set_target_properties(${TARGET} PROPERTIES OUTPUT_NAME ${ARG_OUTPUT_NAME})\n    endif()\n\n    __add_target_to_module(${TARGET})\n    __export_include_directories(${TARGET})\n    if(VESPA_ADD_IMPLICIT_OBJECT_LIBRARY)\n        unset(VESPA_ADD_IMPLICIT_OBJECT_LIBRARY)\n        vespa_add_library(${TARGET}_object OBJECT SOURCES ${NON_TARGET_SOURCE_FILES} DEPENDS ${ARG_DEPENDS})\n        add_dependencies(${TARGET} ${TARGET}_object)\n    endif()\nendfunction()\n\nmacro(vespa_define_module)\n    cmake_parse_arguments(ARG\n        \"\"\n        \"\"\n        \"DEPENDS;EXTERNAL_DEPENDS;LIBS;LIB_DEPENDS;LIB_EXTERNAL_DEPENDS;APPS;APP_DEPENDS;APP_EXTERNAL_DEPENDS;TESTS;TEST_DEPENDS;TEST_EXTERNAL_DEPENDS\"\n        ${ARGN})\n\n    __initialize_module()\n\n    # Base target dependencies for whole module\n    foreach(DEPENDEE IN LISTS ARG_DEPENDS)\n        set(BASE_DEPENDS ${BASE_DEPENDS} ${DEPENDEE})\n    endforeach()\n\n    # External library dependencies for whole module\n    foreach(DEPENDEE IN LISTS ARG_EXTERNAL_DEPENDS)\n        set(BASE_EXTERNAL_DEPENDS ${BASE_EXTERNAL_DEPENDS} ${DEPENDEE})\n    endforeach()\n\n    # Dependencies for libraries\n    set(MODULE_DEPENDS ${BASE_DEPENDS})\n    foreach(DEPENDEE IN LISTS ARG_LIB_DEPENDS)\n        set(MODULE_DEPENDS ${MODULE_DEPENDS} ${DEPENDEE})\n    endforeach()\n\n    # External library dependencies for libraries\n    set(MODULE_EXTERNAL_DEPENDS ${BASE_EXTERNAL_DEPENDS})\n    foreach(DEPENDEE IN LISTS ARG_LIB_EXTERNAL_DEPENDS)\n        set(MODULE_EXTERNAL_DEPENDS ${MODULE_EXTERNAL_DEPENDS} ${DEPENDEE})\n    endforeach()\n\n    # Add libraries\n    foreach(DIR IN LISTS ARG_LIBS)\n        add_subdirectory(${DIR})\n    endforeach()\n\n    # Dependencies for apps\n    set(MODULE_DEPENDS ${BASE_DEPENDS})\n    foreach(DEPENDEE IN LISTS ARG_APP_DEPENDS)\n        set(MODULE_DEPENDS ${MODULE_DEPENDS} ${DEPENDEE})\n    endforeach()\n\n    # External library dependencies for apps\n    set(MODULE_EXTERNAL_DEPENDS ${BASE_EXTERNAL_DEPENDS})\n    foreach(DEPENDEE IN LISTS ARG_APP_EXTERNAL_DEPENDS)\n        set(MODULE_EXTERNAL_DEPENDS ${MODULE_EXTERNAL_DEPENDS} ${DEPENDEE})\n    endforeach()\n\n    # Add apps\n    foreach(DIR IN LISTS ARG_APPS)\n        add_subdirectory(${DIR})\n    endforeach()\n\n    # Dependencies for tests\n    set(MODULE_DEPENDS ${BASE_DEPENDS})\n    foreach(DEPENDEE IN LISTS ARG_TEST_DEPENDS)\n        set(MODULE_DEPENDS ${MODULE_DEPENDS} ${DEPENDEE})\n    endforeach()\n\n    # External library dependencies for tests\n    set(MODULE_EXTERNAL_DEPENDS ${BASE_EXTERNAL_DEPENDS})\n    foreach(DEPENDEE IN LISTS ARG_TEST_EXTERNAL_DEPENDS)\n        set(MODULE_EXTERNAL_DEPENDS ${MODULE_EXTERNAL_DEPENDS} ${DEPENDEE})\n    endforeach()\n\n    # Add tests\n    foreach(DIR IN LISTS ARG_TESTS)\n        add_subdirectory(${DIR})\n    endforeach()\nendmacro()\n\nfunction(__is_script_extension COMMAND RESULT_VAR)\n    set(SCRIPT_EXTENSIONS \".sh\" \".bash\" \".py\" \".pl\" \".rb\")\n\n    get_filename_component(COMMAND_EXT ${COMMAND} EXT)\n    if(COMMAND_EXT)\n        list(FIND SCRIPT_EXTENSIONS ${COMMAND_EXT} RESULT)\n        if(NOT RESULT EQUAL -1)\n            set(${RESULT_VAR} TRUE PARENT_SCOPE)\n            return()\n        endif()\n    endif()\n\n    set(${RESULT_VAR} FALSE PARENT_SCOPE)\nendfunction()\n\nfunction(__is_command_a_script COMMAND RESULT_VAR)\n    list(GET COMMAND 0 FIRST)\n    __is_script_extension(${FIRST} IS_SCRIPT_EXT)\n\n    if (IS_SCRIPT_EXT)\n        set(THE_SCRIPT ${FIRST})\n    endif()\n    list(LENGTH COMMAND COMMAND_LENGTH)\n    if(COMMAND_LENGTH GREATER 1 AND NOT IS_SCRIPT_EXT)\n        list(GET COMMAND 1 SECOND)\n        __is_script_extension(${SECOND} IS_SCRIPT_EXT)\n        if (IS_SCRIPT_EXT)\n            set(THE_SCRIPT ${SECOND})\n        endif()\n    endif()\n\n    set(${RESULT_VAR} ${IS_SCRIPT_EXT} PARENT_SCOPE)\n\n    if(THE_SCRIPT AND ARGV2)\n        set(${ARGV2} ${THE_SCRIPT} PARENT_SCOPE)\n    endif()\nendfunction()\n\nfunction(vespa_add_test)\n    cmake_parse_arguments(ARG \"NO_VALGRIND;RUN_SERIAL;BENCHMARK\" \"NAME;WORKING_DIRECTORY;COST\" \"COMMAND;DEPENDS;ENVIRONMENT\" ${ARGN})\n\n    if(NOT RUN_BENCHMARKS AND ARG_BENCHMARK)\n        return()\n    endif()\n\n    __is_command_a_script(\"${ARG_COMMAND}\" IS_SCRIPT THE_SCRIPT)\n    if(IS_SCRIPT)\n        list(APPEND TEST_DEPENDENCIES ${THE_SCRIPT})\n    else()\n        list(GET ARG_COMMAND 0 COMMAND_FIRST)\n        if(TARGET ${COMMAND_FIRST})\n            list(APPEND TEST_DEPENDENCIES ${COMMAND_FIRST})\n        endif()\n    endif()\n    if(ARG_DEPENDS)\n        list(APPEND TEST_DEPENDENCIES ${ARG_DEPENDS})\n    endif()\n\n    list(LENGTH TEST_DEPENDENCIES TEST_DEPENDENCIES_LENGTH)\n    if(${TEST_DEPENDENCIES_LENGTH} EQUAL 0)\n        message(FATAL_ERROR \"Test does not have any dependencies. It's not allowed if the command is neither a target nor a script.\")\n    endif()\n\n    if(VALGRIND_UNIT_TESTS AND NOT ARG_NO_VALGRIND)\n        if(NOT VALGRIND_EXECUTABLE)\n            message(FATAL_ERROR \"Requested valgrind tests, but could not find valgrind executable.\")\n        endif()\n        if(VESPA_USE_SANITIZER)\n            message(FATAL_ERROR \"Cannot run sanitizer-instrumented unit tests under Valgrind\")\n        endif()\n\n        if(IS_SCRIPT)\n            # For shell scripts, export a VALGRIND environment variable\n            list(APPEND ARG_ENVIRONMENT \"VALGRIND=${VALGRIND_COMMAND}\")\n        else()\n            # For targets or other executables, prepend valgrind to the command.\n            # Extract first part of command and expand the executable path if it refers to a executable target\n            set(COMMAND_REST ${ARG_COMMAND})\n            list(GET COMMAND_REST 0 COMMAND_FIRST)\n            list(REMOVE_AT COMMAND_REST 0)\n\n            if (TARGET ${COMMAND_FIRST})\n                set(COMMAND_FIRST $<TARGET_FILE:${COMMAND_FIRST}>)\n            endif()\n            set(ARG_COMMAND \"${VALGRIND_COMMAND} ${COMMAND_FIRST} ${COMMAND_REST}\")\n        endif()\n    endif()\n    if(VESPA_USE_SANITIZER AND VESPA_SANITIZER_ENV)\n        list(APPEND ARG_ENVIRONMENT \"${VESPA_SANITIZER_ENV}\")\n    endif()\n\n    separate_arguments(ARG_COMMAND)\n    add_test(NAME ${ARG_NAME} COMMAND ${ARG_COMMAND} WORKING_DIRECTORY ${ARG_WORKING_DIRECTORY})\n\n    list(APPEND ARG_ENVIRONMENT \"SOURCE_DIRECTORY=${CMAKE_CURRENT_SOURCE_DIR}\")\n    set_tests_properties(${ARG_NAME} PROPERTIES ENVIRONMENT \"${ARG_ENVIRONMENT}\")\n\n    if (ARG_COST)\n        set_tests_properties(${ARG_NAME} PROPERTIES COST ${ARG_COST})\n    endif()\n    \n    if(ARG_RUN_SERIAL)\n        set_tests_properties(${ARG_NAME} PROPERTIES RUN_SERIAL TRUE)\n    endif()\n\n    if (AUTORUN_UNIT_TESTS)\n        set(CONTROL_FILE \"${ARG_NAME}.run\")\n        add_custom_target(\"${CONTROL_FILE}_target\" ALL DEPENDS ${CONTROL_FILE})\n        add_custom_command(OUTPUT ${CONTROL_FILE}\n                COMMAND ${CMAKE_CTEST_COMMAND} --output-on-failure -R ${ARG_NAME} || (rm -f ${CONTROL_FILE} && false)\n                COMMAND touch ${CONTROL_FILE}\n                DEPENDS ${TEST_DEPENDENCIES}\n                COMMENT \"Executing ${ARG_COMMAND}\")\n    endif()\nendfunction()\n\nfunction(vespa_install_script)\n    if(ARGC GREATER 2)\n        install(FILES ${ARGV0} RENAME ${ARGV1} PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE DESTINATION ${ARGV2})\n    else()\n        install(FILES ${ARGV0} PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE DESTINATION ${ARGV1})\n    endif()\nendfunction()\n\nfunction(vespa_install_data)\n    if(ARGC GREATER 2)\n        install(FILES ${ARGV0} RENAME ${ARGV1} PERMISSIONS OWNER_READ OWNER_WRITE GROUP_READ WORLD_READ DESTINATION ${ARGV2})\n    else()\n        install(FILES ${ARGV0} PERMISSIONS OWNER_READ OWNER_WRITE GROUP_READ WORLD_READ DESTINATION ${ARGV1})\n    endif()\nendfunction()\n\nfunction(vespa_workaround_gcc_bug_67055 SOURCE_FILE)\n    if(CMAKE_COMPILER_IS_GNUCC)\n        execute_process(COMMAND ${CMAKE_CPP_COMPILER} -dumpversion OUTPUT_VARIABLE GCC_VERSION)\n        if (GCC_VERSION VERSION_LESS \"5.3.0\")\n            set_source_files_properties(${SOURCE_FILE} PROPERTIES COMPILE_FLAGS -fno-ipa-icf)\n        endif()\n    endif()\nendfunction()\n\nmacro(__initialize_module)\n    # Set a couple of useful variables for this module\n    set(MODULE_ROOT ${CMAKE_CURRENT_BINARY_DIR})\n    get_filename_component(MODULE_NAME ${MODULE_ROOT} NAME)\n\n    get_property(VESPA_MODULES GLOBAL PROPERTY VESPA_MODULES)\n    set(VESPA_MODULES ${VESPA_MODULES} ${MODULE_NAME})\n    set_property(GLOBAL PROPERTY VESPA_MODULES ${VESPA_MODULES})\n\n    # Add \"src\" to the module's include directories so it's possible to use nonrelative includes\n    # This include path is later exported to other targets that depend on targets within this module\n    include_directories(${CMAKE_CURRENT_SOURCE_DIR}/src)\n\n    # For generated files that are placed in the build tree (e.g. config-<name>.h)\n    include_directories(${CMAKE_CURRENT_BINARY_DIR}/src)\nendmacro()\n\nmacro(__check_target_parameters)\n    if(ARG_UNPARSED_ARGUMENTS)\n        if(NOT ARG_SOURCES)\n            set(AUX_MESSAGE \"\\nMaybe you forgot to add the SOURCES parameter?\")\n        endif()\n        message(FATAL_ERROR \"Unrecognized parameters: ${ARG_UNPARSED_ARGUMENTS}.${AUX_MESSAGE}\")\n    endif()\nendmacro()\n\nmacro(__add_dependencies_to_target)\n    # Link with other targets or libraries\n    foreach(DEPENDEE IN LISTS ARG_DEPENDS)\n        vespa_add_target_dependency(${TARGET} ${DEPENDEE})\n    endforeach()\n\n    # Link with other targets defined as module dependencies\n    foreach(DEPENDEE IN LISTS MODULE_DEPENDS)\n        vespa_add_target_dependency(${TARGET} ${DEPENDEE})\n    endforeach()\n\n    # Link with other external libraries defined as external dependencies\n    foreach(DEPENDEE IN LISTS ARG_EXTERNAL_DEPENDS)\n        vespa_add_target_external_dependency(${TARGET} ${DEPENDEE})\n    endforeach()\n\n    # Link with other external libraries defined as module external dependencies\n    foreach(DEPENDEE IN LISTS MODULE_EXTERNAL_DEPENDS)\n        vespa_add_target_external_dependency(${TARGET} ${DEPENDEE})\n    endforeach()\n\n    # Build after these targets\n    foreach(OTHER_TARGET IN LISTS ARG_AFTER)\n        add_dependencies(${TARGET} ${OTHER_TARGET})\n        target_include_directories(${TARGET} PRIVATE $<TARGET_PROPERTY:${OTHER_TARGET},INTERFACE_INCLUDE_DIRECTORIES>)\n    endforeach()\nendmacro()\n\nfunction(__add_target_to_module TARGET)\n    set_property(GLOBAL APPEND PROPERTY MODULE_${MODULE_NAME}_TARGETS ${TARGET})\nendfunction()\n\nfunction(__add_test_target_to_module TARGET)\n    set_property(GLOBAL APPEND PROPERTY MODULE_${MODULE_NAME}_TEST_TARGETS ${TARGET})\nendfunction()\n\nfunction(__add_source_target_to_module TARGET)\n    set_property(GLOBAL APPEND PROPERTY MODULE_${MODULE_NAME}_SOURCE_TARGETS ${TARGET})\nendfunction()\n\nfunction(__add_object_target_to_module TARGET)\n    set_property(GLOBAL APPEND PROPERTY MODULE_${MODULE_NAME}_OBJECT_TARGETS ${TARGET})\nendfunction()\n\nmacro(__handle_test_targets)\n    # If this is a test executable, add it to the test target for this module\n    # If building of unit tests is not specified, exclude this target from the all target\n    if(ARG_TEST)\n        __add_test_target_to_module(${TARGET})\n\n        if(EXCLUDE_TESTS_FROM_ALL)\n            set_target_properties(${TARGET} PROPERTIES EXCLUDE_FROM_ALL TRUE)\n        endif()\n    endif()\nendmacro()\n\nfunction(__create_module_targets PROPERTY_POSTFIX TARGET_POSTFIX)\n    get_property(VESPA_MODULES GLOBAL PROPERTY VESPA_MODULES)\n    set(OUTPUT_ALL_TARGET \"all_${TARGET_POSTFIX}s\")\n    add_custom_target(${OUTPUT_ALL_TARGET})\n\n    foreach(MODULE IN LISTS VESPA_MODULES)\n        get_property(TARGETS GLOBAL PROPERTY MODULE_${MODULE}_${PROPERTY_POSTFIX})\n        set(OUTPUT_TARGET \"${MODULE}+${TARGET_POSTFIX}\")\n        add_custom_target(${OUTPUT_TARGET})\n\n        foreach(TARGET IN LISTS TARGETS)\n            add_dependencies(${OUTPUT_TARGET} ${TARGET})\n        endforeach()\n\n        add_dependencies(${OUTPUT_ALL_TARGET} ${OUTPUT_TARGET})\n    endforeach()\nendfunction()\n\nfunction(__create_module_source_dependencies)\n    get_property(VESPA_MODULES GLOBAL PROPERTY VESPA_MODULES)\n    foreach(MODULE IN LISTS VESPA_MODULES)\n        get_property(TARGETS GLOBAL PROPERTY MODULE_${MODULE}_TARGETS)\n        get_property(TEST_TARGETS GLOBAL PROPERTY MODULE_${MODULE}_TEST_TARGETS)\n        list(APPEND TARGETS ${TEST_TARGETS})\n        if(TARGETS)\n            list(REMOVE_DUPLICATES TARGETS)\n            set(SOURCE_TARGET \"${MODULE}+source\")\n\n            unset(MODULE_DEPENDENTS)\n            foreach(TARGET IN LISTS TARGETS)\n                get_property(TARGET_MODULE_DEPENDENTS GLOBAL PROPERTY TARGET_${TARGET}_MODULE_DEPENDENTS)\n                list(APPEND MODULE_DEPENDENTS ${TARGET_MODULE_DEPENDENTS})\n                add_dependencies(${TARGET} ${SOURCE_TARGET})\n            endforeach()\n            if (MODULE_DEPENDENTS)\n                list(REMOVE_DUPLICATES MODULE_DEPENDENTS)\n                foreach(MODULE_DEPENDENT IN LISTS MODULE_DEPENDENTS)\n                    add_dependencies(${MODULE_DEPENDENT}+source ${SOURCE_TARGET})\n                endforeach()\n            endif()\n        endif()\n    endforeach()\nendfunction()\n\nfunction(__export_include_directories TARGET)\n    get_directory_property(LOCAL_INCLUDE_DIRS INCLUDE_DIRECTORIES)\n    get_target_property(TARGET_TYPE ${TARGET} TYPE)\n    if(TARGET_TYPE STREQUAL INTERFACE_LIBRARY)\n        target_include_directories(${TARGET} INTERFACE ${LOCAL_INCLUDE_DIRS})\n    else()\n        target_include_directories(${TARGET} PUBLIC ${LOCAL_INCLUDE_DIRS})\n    endif()\nendfunction()\n\nfunction(install_config_definition)\n    if(ARGC GREATER 1)\n        install(FILES ${ARGV0} RENAME ${ARGV1} DESTINATION  share/vespa/configdefinitions)\n    else()\n        install(FILES ${ARGV0} DESTINATION  share/vespa/configdefinitions)\n    endif()\nendfunction()\n\nfunction(install_config_definitions)\n    if(ARGC EQUAL 0)\n        set(DEFINITIONS_DIR src/main/resources/configdefinitions)\n    else()\n        set(DEFINITIONS_DIR ${ARGV0})\n    endif()\n    install(DIRECTORY ${DEFINITIONS_DIR}/ DESTINATION share/vespa/configdefinitions FILES_MATCHING PATTERN \"*.def\")\nendfunction()\n\nfunction(install_jar FILENAME)\n    install(FILES \"target/${FILENAME}\" DESTINATION lib/jars/)\nendfunction()\n\nfunction(install_jar_dependencies NAME)\n    install(DIRECTORY \"target/dependency/\" DESTINATION lib/jars FILES_MATCHING PATTERN \"*.jar\")\nendfunction()\n\nfunction(checked_execute_process_at_install)\n    list(JOIN ARGV \" \" my_process_to_execute)\n    install(CODE \"execute_process(RESULT_VARIABLE my_cmd_exit_status COMMAND ${my_process_to_execute})\n                  if (NOT my_cmd_exit_status EQUAL \\\"0\\\")\n                      message(FATAL_ERROR \\\"failed: ${my_process_to_execute}\\\")\n                  endif()\")\nendfunction(checked_execute_process_at_install)\n\nfunction(install_absolute_symlink TARGET LINK)\n    get_filename_component(target_directory ${LINK} DIRECTORY)\n    install(DIRECTORY DESTINATION ${target_directory} MESSAGE_NEVER)\n    checked_execute_process_at_install(ln -snf ${TARGET} \\$ENV{DESTDIR}${CMAKE_INSTALL_PREFIX}/${LINK})\n    install(CODE \"message(\\\"-- Installing: ${LINK} -> ${TARGET})\\\")\")\nendfunction(install_absolute_symlink)\n\nfunction(install_symlink TARGET LINK)\n    install_absolute_symlink(${CMAKE_INSTALL_PREFIX}/${TARGET} ${LINK})\nendfunction(install_symlink)\n\nfunction(install_configserver_component NAME)\n    cmake_parse_arguments(\n        PARAM\n        \"\"\n        \"CLASSIFIER\"\n        \"\"\n        ${ARGN}\n    )\n    if(NOT PARAM_CLASSIFIER)\n       SET(PARAM_CLASSIFIER \"jar-with-dependencies\")\n    endif()\n    install_jar(\"${NAME}-${PARAM_CLASSIFIER}.jar\")\n    install_app_component_symlink(configserver-app \"${NAME}\" CLASSIFIER \"${PARAM_CLASSIFIER}\")\nendfunction()\n\nfunction(install_app_component_symlink APPNAME NAME)\n    cmake_parse_arguments(\n        PARAM\n        \"\"\n        \"CLASSIFIER\"\n        \"\"\n        ${ARGN}\n    )\n    if(NOT PARAM_CLASSIFIER)\n       SET(PARAM_CLASSIFIER \"jar-with-dependencies\")\n    endif()\n    install(DIRECTORY DESTINATION conf/${APPNAME}/components)\n    install_symlink(lib/jars/${NAME}-${PARAM_CLASSIFIER}.jar conf/${APPNAME}/components/${NAME}.jar)\nendfunction()\n\nfunction(add_extra_projects)\n    if(EXTRA_PROJECTS)\n        foreach(PROJECT ${EXTRA_PROJECTS})\n            get_filename_component(RELDIR ${PROJECT} NAME)\n            add_subdirectory(${PROJECT} ${RELDIR})\n        endforeach()\n    endif()\nendfunction()\n\nfunction(vespa_detect_build_platform)\n  if(EXISTS /etc/os-release)\n    file(STRINGS /etc/os-release OS_DISTRO REGEX \"^ID=\")\n    string(REGEX REPLACE \"ID=\\\"?([^\\\"]+)\\\"?\" \"\\\\1\" OS_DISTRO ${OS_DISTRO})\n    file(STRINGS /etc/os-release OS_DISTRO_VERSION REGEX \"^VERSION_ID=\")\n    if(OS_DISTRO_VERSION)\n      string(REGEX REPLACE \"VERSION_ID=\\\"?([^\\\"]+)\\\"?\" \"\\\\1\" OS_DISTRO_VERSION ${OS_DISTRO_VERSION})\n    else()\n      if (OS_DISTRO STREQUAL \"debian\")\n        set(OS_DISTRO_VERSION \"sid\")\n      else()\n        message(FATAL_ERROR \"-- Could not determine ${OS_DISTRO} version\")\n      endif()\n    endif()\n    file(STRINGS /etc/os-release OS_DISTRO_NAME REGEX \"^NAME=\")\n    if (OS_DISTRO_NAME)\n      string(REGEX REPLACE \"NAME=\\\"?([^\\\"]+)\\\"?\" \"\\\\1\" OS_DISTRO_NAME ${OS_DISTRO_NAME})\n    endif()\n  elseif(EXISTS /etc/redhat-release)\n    set(OS_DISTRO \"rhel\")\n    file(STRINGS \"/etc/redhat-release\" OS_DISTRO_VERSION)\n    string(REGEX REPLACE \".* release ([0-9.]+) .*\" \"\\\\1\" OS_DISTRO_VERSION ${OS_DISTRO_VERSION})\n  elseif(APPLE)\n    set(OS_DISTRO \"darwin\")\n    set(OS_DISTRO_VERSION ${CMAKE_SYSTEM_VERSION})\n    if(EXISTS \"/opt/homebrew/bin/brew\")\n      set(VESPA_HOMEBREW_PREFIX \"/opt/homebrew\")\n    elseif(EXISTS \"/usr/local/bin/brew\")\n      set(VESPA_HOMEBREW_PREFIX \"/usr/local\")\n    else()\n      message(FATAL_ERROR \"-- Cannot determine homebrew prefix\")\n    endif()\n    set(VESPA_HOMEBREW_PREFIX ${VESPA_HOMEBREW_PREFIX} PARENT_SCOPE)\n  endif()\n  if(OS_DISTRO)\n    set(VESPA_OS_DISTRO ${OS_DISTRO} PARENT_SCOPE)\n    set(VESPA_OS_DISTRO_VERSION ${OS_DISTRO_VERSION} PARENT_SCOPE)\n    string(CONCAT OS_DISTRO_COMBINED ${OS_DISTRO} \" \" ${OS_DISTRO_VERSION})\n    set(VESPA_OS_DISTRO_COMBINED ${OS_DISTRO_COMBINED} PARENT_SCOPE)\n    if (OS_DISTRO_NAME)\n      set(VESPA_OS_DISTRO_NAME ${OS_DISTRO_NAME} PARENT_SCOPE)\n    endif()\n  else()\n    message(FATAL_ERROR \"-- Could not determine vespa build platform\")\n  endif()\nendfunction()\n\nfunction(vespa_suppress_warnings_for_protobuf_sources)\n    cmake_parse_arguments(\n        ARG\n        \"\"\n        \"\"\n        \"SOURCES\"\n        ${ARGN}\n    )\n  # protoc-generated files emit compiler warnings that we normally treat as errors.\n  # Instead of rolling our own compiler plugin we'll pragmatically disable the noise.\n  if (NOT \"${CMAKE_CXX_COMPILER_ID}\" STREQUAL \"Clang\" AND NOT \"${CMAKE_CXX_COMPILER_ID}\" STREQUAL \"AppleClang\")\n    if(Protobuf_VERSION VERSION_LESS \"3.7.0\")\n      set(VESPA_DISABLE_UNUSED_WARNING \"-Wno-unused-parameter\")\n    else()\n      unset(VESPA_DISABLE_UNUSED_WARNING)\n    endif()\n    set_source_files_properties(${ARG_SOURCES} PROPERTIES COMPILE_FLAGS \"-Wno-array-bounds -Wno-suggest-override -Wno-inline ${VESPA_DISABLE_UNUSED_WARNING}\")\n  endif()\nendfunction()\n"
        },
        {
          "name": "hosted-api",
          "type": "tree",
          "content": null
        },
        {
          "name": "hosted-tenant-base",
          "type": "tree",
          "content": null
        },
        {
          "name": "hosted-zone-api",
          "type": "tree",
          "content": null
        },
        {
          "name": "http-client",
          "type": "tree",
          "content": null
        },
        {
          "name": "http-utils",
          "type": "tree",
          "content": null
        },
        {
          "name": "indexinglanguage",
          "type": "tree",
          "content": null
        },
        {
          "name": "integration",
          "type": "tree",
          "content": null
        },
        {
          "name": "jaxrs_utils",
          "type": "tree",
          "content": null
        },
        {
          "name": "jdisc-cloud-aws",
          "type": "tree",
          "content": null
        },
        {
          "name": "jdisc-security-filters",
          "type": "tree",
          "content": null
        },
        {
          "name": "jdisc_core",
          "type": "tree",
          "content": null
        },
        {
          "name": "jdisc_core_test",
          "type": "tree",
          "content": null
        },
        {
          "name": "jrt",
          "type": "tree",
          "content": null
        },
        {
          "name": "jrt_test",
          "type": "tree",
          "content": null
        },
        {
          "name": "linguistics-components",
          "type": "tree",
          "content": null
        },
        {
          "name": "linguistics",
          "type": "tree",
          "content": null
        },
        {
          "name": "logd",
          "type": "tree",
          "content": null
        },
        {
          "name": "logforwarder",
          "type": "tree",
          "content": null
        },
        {
          "name": "logserver",
          "type": "tree",
          "content": null
        },
        {
          "name": "lowercasing_test",
          "type": "tree",
          "content": null
        },
        {
          "name": "lucene-linguistics",
          "type": "tree",
          "content": null
        },
        {
          "name": "maven-plugins",
          "type": "tree",
          "content": null
        },
        {
          "name": "messagebus",
          "type": "tree",
          "content": null
        },
        {
          "name": "messagebus_test",
          "type": "tree",
          "content": null
        },
        {
          "name": "metrics-proxy",
          "type": "tree",
          "content": null
        },
        {
          "name": "metrics",
          "type": "tree",
          "content": null
        },
        {
          "name": "model-evaluation",
          "type": "tree",
          "content": null
        },
        {
          "name": "model-integration",
          "type": "tree",
          "content": null
        },
        {
          "name": "mvnvm.properties",
          "type": "blob",
          "size": 0.017578125,
          "content": "mvn_version=3.9.9\n"
        },
        {
          "name": "node-repository",
          "type": "tree",
          "content": null
        },
        {
          "name": "opennlp-linguistics",
          "type": "tree",
          "content": null
        },
        {
          "name": "orchestrator-restapi",
          "type": "tree",
          "content": null
        },
        {
          "name": "orchestrator",
          "type": "tree",
          "content": null
        },
        {
          "name": "parent",
          "type": "tree",
          "content": null
        },
        {
          "name": "persistence",
          "type": "tree",
          "content": null
        },
        {
          "name": "pom.xml",
          "type": "blob",
          "size": 6.1201171875,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!-- Copyright Vespa.ai. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root. -->\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n    <groupId>com.yahoo.vespa</groupId>\n    <artifactId>vespa</artifactId>\n    <packaging>pom</packaging>\n    <version>8-SNAPSHOT</version>\n    <description>Aggregator pom for vespa.</description>\n    <url>https://github.com/vespa-engine</url>\n\n    <licenses>\n        <license>\n            <name>The Apache License, Version 2.0</name>\n            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>\n        </license>\n    </licenses>\n\n    <developers>\n        <developer>\n            <name>Vespa</name>\n            <url>https://github.com/vespa-engine</url>\n        </developer>\n    </developers>\n\n    <modules>\n        <module>application</module>\n        <module>application-model</module>\n        <module>bundle-plugin-test</module>\n        <module>client</module>\n        <module>cloud-tenant-base</module>\n        <module>cloud-tenant-base-dependencies-enforcer</module>\n        <module>cloud-tenant-cd</module>\n        <module>clustercontroller-apps</module>\n        <module>clustercontroller-core</module>\n        <module>clustercontroller-reindexer</module>\n        <module>clustercontroller-utils</module>\n        <module>component</module>\n        <module>config-application-package</module>\n        <module>configdefinitions</module>\n        <module>config-bundle</module>\n        <module>config-lib</module>\n        <module>config-model-api</module>\n        <module>config-model-fat</module>\n        <module>config-model</module>\n        <module>config</module>\n        <module>config-provisioning</module>\n        <module>config-proxy</module>\n        <module>configserver</module>\n        <module>configserver-flags</module>\n        <module>container</module>\n        <module>container-apache-http-client-bundle</module>\n        <module>container-core</module>\n        <module>container-dependencies-enforcer</module>\n        <module>container-dependency-versions</module>\n        <module>container-dev</module>\n        <module>container-disc</module>\n        <module>container-documentapi</module>\n        <module>container-llama</module>\n        <module>container-messagebus</module>\n        <module>container-onnxruntime</module>\n        <module>container-search-and-docproc</module>\n        <module>container-search</module>\n        <module>container-spifly</module>\n        <module>container-test</module>\n        <module>defaults</module>\n        <module>dependency-versions</module>\n        <module>docproc</module>\n        <module>docprocs</module>\n        <module>document</module>\n        <module>documentapi</module>\n        <module>documentapi-dependencies</module>\n        <module>documentgen-test</module>\n        <module>fat-model-dependencies</module>\n        <module>fileacquirer</module>\n        <module>filedistribution</module>\n        <module>flags</module>\n        <module>fsa</module>\n        <module>hosted-api</module>\n        <module>hosted-tenant-base</module>\n        <module>hosted-zone-api</module>\n        <module>http-client</module>\n        <module>http-utils</module>\n        <module>indexinglanguage</module>\n        <!--<module>integration/intellij</module>-->\n        <module>jaxrs_utils</module>\n        <module>jdisc-cloud-aws</module>\n        <module>jdisc-security-filters</module>\n        <module>jdisc_core</module>\n        <module>jdisc_core_test</module>\n        <module>jrt</module>\n        <module>linguistics</module>\n        <module>linguistics-components</module>\n        <module>logd</module>\n        <module>logserver</module>\n        <module>lucene-linguistics</module>\n        <module>messagebus</module>\n        <module>metrics</module>\n        <module>metrics-proxy</module>\n        <module>model-evaluation</module>\n        <module>model-integration</module>\n        <module>node-repository</module>\n        <module>opennlp-linguistics</module>\n        <module>orchestrator-restapi</module>\n        <module>orchestrator</module>\n        <module>parent</module>\n        <module>predicate-search</module>\n        <module>predicate-search-core</module>\n        <module>provided-dependencies</module>\n        <module>routing-generator</module>\n        <module>searchcore</module>\n        <module>searchlib</module>\n        <module>searchsummary</module>\n        <module>security-utils</module>\n        <module>service-monitor</module>\n        <module>socket_test</module>\n        <module>standalone-container</module>\n        <module>storage</module>\n        <module>streamingvisitors</module>\n        <module>tenant-cd-api</module>\n        <module>tenant-cd-commons</module>\n        <module>testutil</module>\n        <module>vdslib</module>\n        <module>vespaclient-core</module>\n        <module>vespaclient-container-plugin</module>\n        <module>vespaclient-java</module>\n        <module>vespa-athenz</module>\n        <module>vespa-dependencies-enforcer</module>\n        <module>vespa-documentgen-plugin</module>\n        <module>vespa-feed-client</module>\n        <module>vespa-feed-client-api</module>\n        <module>vespa-feed-client-cli</module>\n        <module>vespa-maven-plugin</module>\n        <module>vespa-osgi-testrunner</module>\n        <module>vespa-testrunner-components</module>\n        <module>vespa-3party-bundles</module>\n        <module>vespa-3party-jars</module>\n        <module>vespajlib</module>\n        <module>vespalog</module>\n        <module>zkfacade</module>\n        <module>zookeeper-client-common</module>\n        <module>zookeeper-command-line-client</module>\n        <module>zookeeper-common</module>\n        <module>zookeeper-server</module>\n        <module>integration/schema-language-server/language-server</module>\n        <module>integration/schema-language-server/lemminx-vespa</module>\n    </modules>\n\n    <properties>\n        <maven.deploy.skip>true</maven.deploy.skip>\n        <maven.javadoc.skip>true</maven.javadoc.skip>\n    </properties>\n\n</project>\n"
        },
        {
          "name": "predicate-search-core",
          "type": "tree",
          "content": null
        },
        {
          "name": "predicate-search",
          "type": "tree",
          "content": null
        },
        {
          "name": "protocols",
          "type": "tree",
          "content": null
        },
        {
          "name": "provided-dependencies",
          "type": "tree",
          "content": null
        },
        {
          "name": "quickbuild.sh",
          "type": "blob",
          "size": 0.09765625,
          "content": "mvn clean install --threads 1C -Dmaven.javadoc.skip=true -Dmaven.source.skip=true -DskipTests \"$@\"\n\n"
        },
        {
          "name": "renovate.json",
          "type": "blob",
          "size": 1.1796875,
          "content": "{\n  \"$schema\": \"https://docs.renovatebot.com/renovate-schema.json\",\n  \"extends\": [\n    \"config:base\"\n  ],\n  \"dependencyDashboardApproval\": true,\n  \"transitiveRemediation\": true,\n  \"prHourlyLimit\": 20,\n  \"prConcurrentLimit\": 20,\n  \"ignorePaths\": [],\n  \"ignoreDeps\": [],\n  \"schedule\": [\"before 6am on thursday\"],\n  \"minimumReleaseAge\": \"14 days\",\n  \"packageRules\": [\n    {\n      \"description\": \"Disable version updates for Vespa artifacts\",\n      \"matchPackagePatterns\": [\"^com\\\\.yahoo\\\\.vespa\"],\n      \"matchManagers\": [\"maven\"],\n      \"enabled\": false\n    },\n    {\n      \"description\": \"Disable automatic PRs for artifacts, e.g. fixed version required like ZK dependencies or released to frequently. PRs can still be created manually from dependency dashboard.\",\n      \"matchPackageNames\": [\n        \"javax.servlet:javax.servlet-api\",\n        \"io.dropwizard.metrics:metrics-core\",\n        \"org.apache.zookeeper:zookeeper\"\n      ],\n      \"dependencyDashboardApproval\": true\n    },\n    {\n      \"description\": \"Disable automatic PRs for new major versions. PRs can still be created manually from dependency dashboard.\",\n      \"matchUpdateTypes\": [\"major\"],\n      \"dependencyDashboardApproval\": true\n    }\n  ]\n}\n"
        },
        {
          "name": "routing-generator",
          "type": "tree",
          "content": null
        },
        {
          "name": "searchcore",
          "type": "tree",
          "content": null
        },
        {
          "name": "searchlib",
          "type": "tree",
          "content": null
        },
        {
          "name": "searchsummary",
          "type": "tree",
          "content": null
        },
        {
          "name": "security-utils",
          "type": "tree",
          "content": null
        },
        {
          "name": "service-monitor",
          "type": "tree",
          "content": null
        },
        {
          "name": "slobrok",
          "type": "tree",
          "content": null
        },
        {
          "name": "socket_test",
          "type": "tree",
          "content": null
        },
        {
          "name": "standalone-container",
          "type": "tree",
          "content": null
        },
        {
          "name": "storage",
          "type": "tree",
          "content": null
        },
        {
          "name": "storageserver",
          "type": "tree",
          "content": null
        },
        {
          "name": "streamingvisitors",
          "type": "tree",
          "content": null
        },
        {
          "name": "tenant-cd-api",
          "type": "tree",
          "content": null
        },
        {
          "name": "tenant-cd-commons",
          "type": "tree",
          "content": null
        },
        {
          "name": "testutil",
          "type": "tree",
          "content": null
        },
        {
          "name": "tsan-suppressions.txt",
          "type": "blob",
          "size": 2.599609375,
          "content": "# There is an explicit (and documented) mutex order inversion in the MergeThrottler component\n# that cannot cause a deadlock in practice due to separately maintained invariants for when the\n# mutexes can be locked. Of course, TSan is not able to infer this by itself, so silence this\n# particular warning.\n\ndeadlock:storage::MergeThrottler::onFlush\n\n# We hold the attribute context lock when getting a shared lock on\n# enumerated attributes to prevent references to enumerated values\n# from being changed due to compaction while performing grouping on\n# the attribute. Thus we have an apparent lock order cycle between the\n# attribute context lock and the shared lock on each attribute.\n#\n# We use an interlock to ensure that only one thread at a time tries\n# to get an exclusive lock on an enumerated attribute (before\n# compacting the enum store). Without that interlock, we could get a\n# deadlock with\n#\n# Thread A having shared lock on attribute E and trying to get a shared lock\n#          on attribute F, blocked by thread D.\n# Thread B having shared lock on attribute F and trying to get a shared lock\n#          on attribute E, blocked by thread C.\n# Thread C trying to get an exclusive lock on attribute E, blocked by thread A\n# Thread D trying to get an exclusive lock on attribute F, blocked by thread B\n\ndeadlock:search::AttributeContext::getAttribute\ndeadlock:search::AttributeContext::getAttributeStableEnum\ndeadlock:proton::ImportedAttributesContext::getAttribute\ndeadlock:proton::ImportedAttributesContext::getAttributeStableEnum\n\n# This is an external code that we do not control. Complains that mutex\n# creation and locking are not strictly ordered.\n\nrace:llvm::sys::MutexImpl\nrace:llvm::sys::SmartMutex<false>::lock\nrace:llvm::sys::SmartMutex<true>::lock\nrace:llvm::sys::DynamicLibrary::getPermanentLibrary\nrace:(anonymous namespace)::GDBJITRegistrationListener::notifyObjectLoaded\n\n# This is external code that we do not control. Complains that mutex\n# creation and locking are not strictly ordered.\n\nrace:re2::Prog::GetDFA\nrace:re2::DFA::DFA\n\n# Non-TSAN instrumented OpenSSL may trigger warnings when many threads are attempting\n# to create TLS connections at once in a newly started process. This appears to be related\n# to implicit init-once semantics of internal OpenSSL data structures, though the TSAN report\n# stack frames are truncated and don't show the full picture.\n# When a TSAN-instrumented OpenSSL build is used, the error does not manifest itself.\n# This implies that it's likely caused by a lack of instrumentation of atomic operations\n# (acquire-load in double-checked locking etc).\nrace:ASN1_STRING_cmp\nrace:ASN1_STRING_set\n"
        },
        {
          "name": "ubsan-suppressions.txt",
          "type": "blob",
          "size": 0.224609375,
          "content": "# Copyright Vespa.ai. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.\n#\n# Suppressions for undefined sanitizer.\n\n# xxhash considers unaligned load for aarch64 to be OK.\nalignment:XXH_vld1q_u64\n"
        },
        {
          "name": "valgrind-suppressions.txt",
          "type": "blob",
          "size": 28.0517578125,
          "content": "{\n   NPTL keeps a cache of thread stacks, and metadata for thread local storage is not freed for threads in that cache\n   Memcheck:Leak\n   fun:calloc\n   fun:_dl_allocate_tls\n   fun:pthread_create@@GLIBC_2.17\n}\n{\n   NPTL keeps a cache of thread stacks, and metadata for thread local storage is not freed for threads in that cache\n   Memcheck:Leak\n   fun:calloc\n   fun:UnknownInlinedFun\n   fun:allocate_dtv\n   fun:_dl_allocate_tls\n   fun:pthread_create@@GLIBC_2.17\n}\n{\n   NPTL keeps a cache of thread stacks, and metadata for thread local storage is not freed for threads in that cache\n   Memcheck:Leak\n   fun:calloc\n   fun:UnknownInlinedFun\n   fun:allocate_dtv\n   fun:_dl_allocate_tls\n   fun:allocate_stack\n   fun:pthread_create@@GLIBC_2.17\n}\n{\n   NPTL keeps a cache of thread stacks, and metadata for thread local storage is not freed for threads in that cache\n   Memcheck:Leak\n   fun:calloc\n   fun:UnknownInlinedFun\n   fun:allocate_dtv\n   fun:_dl_allocate_tls\n   fun:pthread_create@@GLIBC_2.2.5\n}\n{\n   NPTL keeps a cache of thread stacks, and metadata for thread local storage is not freed for threads in that cache\n   Memcheck:Leak\n   fun:calloc\n   fun:UnknownInlinedFun\n   fun:allocate_dtv\n   fun:_dl_allocate_tls\n   fun:allocate_stack\n   fun:pthread_create@@GLIBC_2.2.5\n}\n{\n   NPTL keeps a cache of thread stacks, and metadata for thread local storage is not freed for threads in that cache\n   Memcheck:Leak\n   fun:calloc\n   fun:allocate_dtv\n   fun:_dl_allocate_tls\n   fun:allocate_stack\n   fun:pthread_create@@GLIBC_2.2.5\n}\n{\n   NPTL keeps a cache of thread stacks, and metadata for thread local storage is not freed for threads in that cache\n   Memcheck:Leak\n   fun:calloc\n   fun:_dl_allocate_tls\n   fun:pthread_create@@GLIBC_2.2.5\n}\n{\n   NPTL keeps a cache of thread stacks, and metadata for thread local storage is not freed for threads in that cache\n   Memcheck:Leak\n   fun:calloc\n   fun:allocate_dtv\n   fun:_dl_allocate_tls\n   fun:pthread_create@@GLIBC_2.2.5\n}\n{\n   This is a bug in glibc. We can not suffer for that.\n   Memcheck:Free\n   fun:free\n   fun:free_mem\n   fun:__libc_freeres\n   fun:_vgnU_freeres\n   fun:exit\n   fun:(below main)\n}\n{\n   RHEL6 strlen is eager and will read 16 bytes blocks.\n   Memcheck:Cond\n   fun:__strlen_sse42\n}\n\n{\n   Strange problem sometimes happens in backtrace function in glibc:\n   Memcheck:Addr4\n   fun:_Unwind_Backtrace\n   fun:backtrace\n}\n{\n   Strange problem sometimes happens in backtrace function in glibc:\n   Memcheck:Addr8\n   fun:_Unwind_Backtrace\n   fun:backtrace\n}\n\n{\n   dlopen_suppression_1\n   Memcheck:Leak\n   fun:malloc\n   fun:decompose_rpath\n   fun:_dl_map_object\n   fun:dl_open_worker\n   fun:_dl_catch_error\n   fun:_dl_open\n   fun:dlopen_doit\n   fun:_dl_catch_error\n   fun:_dlerror_run\n   fun:dlopen@@GLIBC_2.2.5\n   fun:_ZN26FastOS_UNIX_DynamicLibrary4OpenEPKc\n}\n{\n   dlopen_suppression_2\n   Memcheck:Leak\n   fun:malloc\n   fun:decompose_rpath\n   fun:_dl_map_object\n   fun:openaux\n   fun:_dl_catch_error\n   fun:_dl_map_object_deps\n   fun:dl_open_worker\n   fun:_dl_catch_error\n   fun:_dl_open\n   fun:dlopen_doit\n   fun:_dl_catch_error\n   fun:_dlerror_run\n   fun:dlopen@@GLIBC_2.2.5\n   fun:_ZN26FastOS_UNIX_DynamicLibrary4OpenEPKc\n}\n{\n   dlopen_suppression_3\n   Memcheck:Leak\n   fun:malloc\n   fun:open_path\n   fun:_dl_map_object\n   fun:dl_open_worker\n   fun:_dl_catch_error\n   fun:_dl_open\n   fun:dlopen_doit\n   fun:_dl_catch_error\n   fun:_dlerror_run\n   fun:dlopen@@GLIBC_2.2.5\n   fun:_ZN26FastOS_UNIX_DynamicLibrary4OpenEPKc\n}\n{\n   dlopen_suppression_4\n   Memcheck:Leak\n   fun:malloc\n   fun:_dl_new_object\n   fun:_dl_map_object_from_fd\n   fun:_dl_map_object\n   fun:dl_open_worker\n   fun:_dl_catch_error\n   fun:_dl_open\n   fun:dlopen_doit\n   fun:_dl_catch_error\n   fun:_dlerror_run\n   fun:dlopen@@GLIBC_2.2.5\n   fun:_ZN26FastOS_UNIX_DynamicLibrary4OpenEPKc\n}\n{\n   dlopen_suppression_5\n   Memcheck:Leak\n   fun:calloc\n   fun:_dlerror_run\n   fun:dlopen@@GLIBC_2.2.5\n   fun:_ZN26FastOS_UNIX_DynamicLibrary4OpenEPKc\n}\n{\n   dlopen_suppression_6\n   Memcheck:Leak\n   fun:malloc\n   fun:expand_dynamic_string_token\n   fun:_dl_map_object\n   fun:openaux\n   fun:_dl_catch_error\n   fun:_dl_map_object_deps\n   fun:dl_open_worker\n   fun:_dl_catch_error\n   fun:_dl_open\n   fun:dlopen_doit\n   fun:_dl_catch_error\n   fun:_dlerror_run\n   fun:dlopen@@GLIBC_2.2.5\n   fun:_ZN26FastOS_UNIX_DynamicLibrary4OpenEPKc\n}\n{\n   dlopen_suppression_7\n   Memcheck:Leak\n   fun:malloc\n   fun:open_path\n   fun:_dl_map_object\n   fun:openaux\n   fun:_dl_catch_error\n   fun:_dl_map_object_deps\n   fun:dl_open_worker\n   fun:_dl_catch_error\n   fun:_dl_open\n   fun:dlopen_doit\n   fun:_dl_catch_error\n   fun:_dlerror_run\n   fun:dlopen@@GLIBC_2.2.5\n   fun:_ZN26FastOS_UNIX_DynamicLibrary4OpenEPKc\n}\n{\n   dlopen_suppression_8\n   Memcheck:Leak\n   fun:malloc\n   fun:local_strdup\n   fun:_dl_map_object\n   fun:openaux\n   fun:_dl_catch_error\n   fun:_dl_map_object_deps\n   fun:dl_open_worker\n   fun:_dl_catch_error\n   fun:_dl_open\n   fun:dlopen_doit\n   fun:_dl_catch_error\n   fun:_dlerror_run\n   fun:dlopen@@GLIBC_2.2.5\n   fun:_ZN26FastOS_UNIX_DynamicLibrary4OpenEPKc\n}\n{\n   dlopen_suppression_9\n   Memcheck:Leak\n   fun:malloc\n   fun:_dl_lookup_symbol_x\n   fun:_dl_relocate_object\n   fun:dl_open_worker\n   fun:_dl_catch_error\n   fun:_dl_open\n   fun:dlopen_doit\n   fun:_dl_catch_error\n   fun:_dlerror_run\n   fun:dlopen@@GLIBC_2.2.5\n   fun:_ZN26FastOS_UNIX_DynamicLibrary4OpenEPKc\n}\n{\n   dlopen_suppression_10\n   Memcheck:Leak\n   fun:malloc\n   fun:_dl_new_object\n   fun:_dl_map_object_from_fd\n   fun:_dl_map_object\n   fun:openaux\n   fun:_dl_catch_error\n   fun:_dl_map_object_deps\n   fun:dl_open_worker\n   fun:_dl_catch_error\n   fun:_dl_open\n   fun:dlopen_doit\n   fun:_dl_catch_error\n   fun:_dlerror_run\n   fun:dlopen@@GLIBC_2.2.5\n   fun:_ZN26FastOS_UNIX_DynamicLibrary4OpenEPKc\n}\n{\n   dlopen_suppression_11\n   Memcheck:Leak\n   fun:calloc\n   fun:_dl_new_object\n   fun:_dl_map_object_from_fd\n   fun:_dl_map_object\n   fun:dl_open_worker\n   fun:_dl_catch_error\n   fun:_dl_open\n   fun:dlopen_doit\n   fun:_dl_catch_error\n   fun:_dlerror_run\n   fun:dlopen@@GLIBC_2.2.5\n   fun:_ZN26FastOS_UNIX_DynamicLibrary4OpenEPKc\n}\n{\n   dlopen_suppression_12\n   Memcheck:Leak\n   fun:calloc\n   fun:_dl_check_map_versions\n   fun:dl_open_worker\n   fun:_dl_catch_error\n   fun:_dl_open\n   fun:dlopen_doit\n   fun:_dl_catch_error\n   fun:_dlerror_run\n   fun:dlopen@@GLIBC_2.2.5\n   fun:_ZN26FastOS_UNIX_DynamicLibrary4OpenEPKc\n}\n{\n   dlopen_suppression_13\n   Memcheck:Leak\n   fun:calloc\n   fun:do_lookup_x\n   fun:_dl_lookup_symbol_x\n   fun:_dl_relocate_object\n   fun:dl_open_worker\n   fun:_dl_catch_error\n   fun:_dl_open\n   fun:dlopen_doit\n   fun:_dl_catch_error\n   fun:_dlerror_run\n   fun:dlopen@@GLIBC_2.2.5\n   fun:_ZN26FastOS_UNIX_DynamicLibrary4OpenEPKc\n}\n{\n   dlopen_suppression_14\n   Memcheck:Leak\n   fun:calloc\n   fun:_dl_new_object\n   fun:_dl_map_object_from_fd\n   fun:_dl_map_object\n   fun:openaux\n   fun:_dl_catch_error\n   fun:_dl_map_object_deps\n   fun:dl_open_worker\n   fun:_dl_catch_error\n   fun:_dl_open\n   fun:dlopen_doit\n   fun:_dl_catch_error\n   fun:_dlerror_run\n   fun:dlopen@@GLIBC_2.2.5\n   fun:_ZN26FastOS_UNIX_DynamicLibrary4OpenEPKc\n}\n{\n   This supresses a bug in valgrind-3.10.1. It is fixed in version 3.11.0. (http://permalink.gmane.org/gmane.comp.kde.devel.bugs/1594999)\n   Memcheck:Leak\n   match-leak-kinds: possible\n   fun:_Znwm\n   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE\n   fun:_ZNSs12_S_constructIPKcEEPcT_S3_RKSaIcESt20forward_iterator_tag\n   fun:_ZNSsC1EPKcRKSaIcE\n   obj:/usr/lib64/llvm/libLLVM-3.4.so\n   ...\n}\n{\n   This supresses a bug in valgrind-3.10.1. It is fixed in version 3.11.0. (http://permalink.gmane.org/gmane.comp.kde.devel.bugs/1594999)\n   Memcheck:Leak\n   match-leak-kinds: possible\n   fun:_Znwm\n   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE\n   ...\n   fun:__static_initialization_and_destruction_0\n   ...\n}\n{\n   Needed to avoid leak errors on static wchar strings when using the fastos process proxy\n   Memcheck:Leak\n   match-leak-kinds: possible\n   fun:_Znwm\n   fun:_ZNSbIwSt11char_traitsIwESaIwEE4_Rep9_S_createEmmRKS1_\n   ...\n   fun:__static_initialization_and_destruction_0\n   ...\n}\n{\n   Apparent memory leak on Fedora 28.\n   Memcheck:Leak\n   match-leak-kinds: possible\n   fun:malloc\n   fun:tsearch\n   fun:__add_to_environ\n   fun:setenv\n}\n{\n   Apparent memory leak on Fedora 28.\n   Memcheck:Leak\n   match-leak-kinds: possible\n   fun:malloc\n   fun:__add_to_environ\n   fun:setenv\n}\n{\n   RE2 sparse structures deliberately do not care about uninitialized memory (https://github.com/google/re2/issues/121)\n   Memcheck:Cond\n   ...\n   fun:_ZN3re28Compiler7CompileEPNS_6RegexpEbl\n}\n{\n   RE2 sparse structures deliberately do not care about uninitialized memory (https://github.com/google/re2/issues/121)\n   Memcheck:Value8\n   ...\n   fun:_ZN3re28Compiler7CompileEPNS_6RegexpEbl\n}\n{\n   RE2 sparse structures deliberately do not care about uninitialized memory (https://github.com/google/re2/issues/121)\n   Memcheck:Cond\n   ...\n   fun:_ZN3re23RE2C1ERKNS_11StringPieceERKNS0_7OptionsE\n}\n{\n   RE2 sparse structures deliberately do not care about uninitialized memory (https://github.com/google/re2/issues/121)\n   Memcheck:Value8\n   ...\n   fun:_ZN3re23RE2C1ERKNS_11StringPieceERKNS0_7OptionsE\n}\n{\n   RE2 sparse structures deliberately do not care about uninitialized memory (https://github.com/google/re2/issues/121)\n   Memcheck:Value8\n   ...\n   fun:_ZNK3re23RE25MatchERKNS_11StringPieceEmmNS0_6AnchorEPS1_i\n}\n{\n   RE2 sparse structures deliberately do not care about uninitialized memory (https://github.com/google/re2/issues/121)\n   Memcheck:Cond\n   ...\n   fun:_ZNK3re23RE25MatchERKNS_11StringPieceEmmNS0_6AnchorEPS1_i\n}\n{\n   RE2 sparse structures deliberately do not care about uninitialized memory (https://github.com/google/re2/issues/121)\n   Memcheck:Cond\n   ...\n   fun:_ZNK3re23RE218PossibleMatchRangeEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_i\n}\n{\n   RE2 sparse structures deliberately do not care about uninitialized memory (https://github.com/google/re2/issues/121)\n   Memcheck:Value8\n   ...\n   fun:_ZNK3re23RE218PossibleMatchRangeEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_i\n}\n{\n   Protobuf 5.26.1 suppression 1\n   Memcheck:Leak\n   match-leak-kinds: possible\n   fun:_Znwm\n   fun:allocate\n   fun:allocate\n   fun:allocate\n   fun:Allocate<8, std::allocator<char> >\n   fun:_ZN4absl12lts_2024011618container_internal19HashSetResizeHelper15InitializeSlotsISaIcELm8ELb1ELm8EEEbRNS1_12CommonFieldsEPvT_.isra.0\n   fun:_ZN4absl12lts_2024011618container_internal12raw_hash_setINS1_17FlatHashSetPolicyIPKN6google8protobuf8internal15DescriptorTableEEENS5_12_GLOBAL__N_123GeneratedMessageFactory20DescriptorByNameHashENSC_18DescriptorByNameEqESaIS9_EE6resizeEm\n   fun:rehash_and_grow_if_necessary\n   fun:_ZN4absl12lts_2024011618container_internal12raw_hash_setINS1_17FlatHashSetPolicyIPKN6google8protobuf8internal15DescriptorTableEEENS5_12_GLOBAL__N_123GeneratedMessageFactory20DescriptorByNameHashENSC_18DescriptorByNameEqESaIS9_EE14prepare_insertEm\n   fun:find_or_prepare_insert<const google::protobuf::internal::DescriptorTable*>\n   fun:operator()<const google::protobuf::internal::DescriptorTable*, const google::protobuf::internal::DescriptorTable* const&>\n   fun:DecomposeValue<absl::lts_20240116::container_internal::raw_hash_set<absl::lts_20240116::container_internal::FlatHashSetPolicy<const google::protobuf::internal::DescriptorTable*>, google::protobuf::(anonymous namespace)::GeneratedMessageFactory::DescriptorByNameHash, google::protobuf::(anonymous namespace)::GeneratedMessageFactory::DescriptorByNameEq, std::allocator<const google::protobuf::internal::DescriptorTable*> >::EmplaceDecomposable, const google::protobuf::internal::DescriptorTable* const&>\n   fun:apply<absl::lts_20240116::container_internal::raw_hash_set<absl::lts_20240116::container_internal::FlatHashSetPolicy<const google::protobuf::internal::DescriptorTable*>, google::protobuf::(anonymous namespace)::GeneratedMessageFactory::DescriptorByNameHash, google::protobuf::(anonymous namespace)::GeneratedMessageFactory::DescriptorByNameEq, std::allocator<const google::protobuf::internal::DescriptorTable*> >::EmplaceDecomposable, const google::protobuf::internal::DescriptorTable* const&>\n   fun:apply<absl::lts_20240116::container_internal::raw_hash_set<absl::lts_20240116::container_internal::FlatHashSetPolicy<const google::protobuf::internal::DescriptorTable*>, google::protobuf::(anonymous namespace)::GeneratedMessageFactory::DescriptorByNameHash, google::protobuf::(anonymous namespace)::GeneratedMessageFactory::DescriptorByNameEq, std::allocator<const google::protobuf::internal::DescriptorTable*> >::EmplaceDecomposable, const google::protobuf::internal::DescriptorTable* const&>\n   fun:emplace<const google::protobuf::internal::DescriptorTable* const&>\n   fun:insert<const google::protobuf::internal::DescriptorTable*>\n   fun:RegisterFile\n   fun:_ZN6google8protobuf14MessageFactory29InternalRegisterGeneratedFileEPKNS0_8internal15DescriptorTableE\n   fun:call_init.part.0\n   fun:call_init\n   fun:_dl_init\n   obj:/usr/lib64/ld-2.28.so\n}\n{\n   Protobuf 5.26.1 suppression 2\n   Memcheck:Leak\n   match-leak-kinds: possible\n   fun:_Znwm\n   fun:allocate\n   fun:allocate\n   fun:allocate\n   fun:_S_allocate\n   fun:_M_create\n   fun:_M_construct<char*>\n   fun:basic_string\n   fun:pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, 0, const google::protobuf::Descriptor::WellKnownType&, 0>\n   fun:pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const google::protobuf::Descriptor::WellKnownType&>\n   fun:construct_at<std::pair<std::__cxx11::basic_string<char>, google::protobuf::Descriptor::WellKnownType>, const std::piecewise_construct_t&, std::tuple<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>, std::tuple<const google::protobuf::Descriptor::WellKnownType&> >\n   fun:construct<std::pair<std::__cxx11::basic_string<char>, google::protobuf::Descriptor::WellKnownType>, const std::piecewise_construct_t&, std::tuple<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>, std::tuple<const google::protobuf::Descriptor::WellKnownType&> >\n   fun:construct<std::allocator<std::pair<const std::__cxx11::basic_string<char>, google::protobuf::Descriptor::WellKnownType> >, const std::piecewise_construct_t&, std::tuple<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>, std::tuple<const google::protobuf::Descriptor::WellKnownType&> >\n   fun:construct<std::allocator<std::pair<const std::__cxx11::basic_string<char>, google::protobuf::Descriptor::WellKnownType> >, const std::piecewise_construct_t&, std::tuple<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>, std::tuple<const google::protobuf::Descriptor::WellKnownType&> >\n   fun:construct<std::allocator<std::pair<const std::__cxx11::basic_string<char>, google::protobuf::Descriptor::WellKnownType> >, const std::piecewise_construct_t&, std::tuple<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>, std::tuple<const google::protobuf::Descriptor::WellKnownType&> >\n   fun:construct<const std::piecewise_construct_t&, std::tuple<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>, std::tuple<const google::protobuf::Descriptor::WellKnownType&> >\n   fun:emplace_at<const std::piecewise_construct_t&, std::tuple<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>, std::tuple<const google::protobuf::Descriptor::WellKnownType&> >\n   fun:operator()<std::__cxx11::basic_string<char>, const std::piecewise_construct_t&, std::tuple<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>, std::tuple<const google::protobuf::Descriptor::WellKnownType&> >\n   fun:DecomposePairImpl<absl::lts_20240116::container_internal::raw_hash_set<absl::lts_20240116::container_internal::FlatHashMapPolicy<std::__cxx11::basic_string<char>, google::protobuf::Descriptor::WellKnownType>, absl::lts_20240116::container_internal::StringHash, absl::lts_20240116::container_internal::StringEq, std::allocator<std::pair<const std::__cxx11::basic_string<char>, google::protobuf::Descriptor::WellKnownType> > >::EmplaceDecomposable, const std::__cxx11::basic_string<char>&, std::tuple<const google::protobuf::Descriptor::WellKnownType&> >\n   fun:DecomposePair<absl::lts_20240116::container_internal::raw_hash_set<absl::lts_20240116::container_internal::FlatHashMapPolicy<std::__cxx11::basic_string<char>, google::protobuf::Descriptor::WellKnownType>, absl::lts_20240116::container_internal::StringHash, absl::lts_20240116::container_internal::StringEq, std::allocator<std::pair<const std::__cxx11::basic_string<char>, google::protobuf::Descriptor::WellKnownType> > >::EmplaceDecomposable, const std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, google::protobuf::Descriptor::WellKnownType>&>\n   fun:apply<absl::lts_20240116::container_internal::raw_hash_set<absl::lts_20240116::container_internal::FlatHashMapPolicy<std::__cxx11::basic_string<char>, google::protobuf::Descriptor::WellKnownType>, absl::lts_20240116::container_internal::StringHash, absl::lts_20240116::container_internal::StringEq, std::allocator<std::pair<const std::__cxx11::basic_string<char>, google::protobuf::Descriptor::WellKnownType> > >::EmplaceDecomposable, const std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, google::protobuf::Descriptor::WellKnownType>&>\n   fun:apply<absl::lts_20240116::container_internal::raw_hash_set<absl::lts_20240116::container_internal::FlatHashMapPolicy<std::__cxx11::basic_string<char>, google::protobuf::Descriptor::WellKnownType>, absl::lts_20240116::container_internal::StringHash, absl::lts_20240116::container_internal::StringEq, std::allocator<std::pair<const std::__cxx11::basic_string<char>, google::protobuf::Descriptor::WellKnownType> > >::EmplaceDecomposable, const std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, google::protobuf::Descriptor::WellKnownType>&>\n   fun:emplace<const std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, google::protobuf::Descriptor::WellKnownType>&>\n   fun:insert<const std::pair<std::__cxx11::basic_string<char>, google::protobuf::Descriptor::WellKnownType>*>\n   fun:insert\n   fun:_ZN6google8protobuf14DescriptorPool6TablesC1Ev\n   fun:_ZN6google8protobuf14DescriptorPoolC1EPNS0_18DescriptorDatabaseEPNS1_14ErrorCollectorE\n   fun:NewGeneratedPool\n   fun:_ZN6google8protobuf14DescriptorPool23internal_generated_poolEv\n   fun:_ZN6google8protobuf14DescriptorPool24InternalAddGeneratedFileEPKvi\n   fun:AddDescriptorsImpl\n   fun:AddDescriptors\n   fun:_ZN6google8protobuf8internal14AddDescriptorsEPKNS1_15DescriptorTableE\n   fun:call_init.part.0\n   fun:call_init\n   fun:_dl_init\n   obj:/usr/lib64/ld-2.28.so\n}\n{\n   Protobuf 5.26.1 suppression 3\n   Memcheck:Leak\n   match-leak-kinds: possible\n   fun:_Znwm\n   fun:allocate\n   fun:allocate\n   fun:allocate\n   fun:Allocate<8, std::allocator<char> >\n   fun:_ZN4absl12lts_2024011618container_internal19HashSetResizeHelper15InitializeSlotsISaIcELm40ELb0ELm8EEEbRNS1_12CommonFieldsEPvT_.isra.0\n   fun:_ZN4absl12lts_2024011618container_internal12raw_hash_setINS1_17FlatHashMapPolicyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN6google8protobuf10Descriptor13WellKnownTypeEEENS1_10StringHashENS1_8StringEqESaISt4pairIKS9_SD_EEE6resizeEm\n   fun:rehash_and_grow_if_necessary\n   fun:_ZN4absl12lts_2024011618container_internal12raw_hash_setINS1_17FlatHashMapPolicyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN6google8protobuf10Descriptor13WellKnownTypeEEENS1_10StringHashENS1_8StringEqESaISt4pairIKS9_SD_EEE14prepare_insertEm\n   fun:find_or_prepare_insert<std::__cxx11::basic_string<char> >\n   fun:operator()<std::__cxx11::basic_string<char>, const std::piecewise_construct_t&, std::tuple<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>, std::tuple<const google::protobuf::Descriptor::WellKnownType&> >\n   fun:DecomposePairImpl<absl::lts_20240116::container_internal::raw_hash_set<absl::lts_20240116::container_internal::FlatHashMapPolicy<std::__cxx11::basic_string<char>, google::protobuf::Descriptor::WellKnownType>, absl::lts_20240116::container_internal::StringHash, absl::lts_20240116::container_internal::StringEq, std::allocator<std::pair<const std::__cxx11::basic_string<char>, google::protobuf::Descriptor::WellKnownType> > >::EmplaceDecomposable, const std::__cxx11::basic_string<char>&, std::tuple<const google::protobuf::Descriptor::WellKnownType&> >\n   fun:DecomposePair<absl::lts_20240116::container_internal::raw_hash_set<absl::lts_20240116::container_internal::FlatHashMapPolicy<std::__cxx11::basic_string<char>, google::protobuf::Descriptor::WellKnownType>, absl::lts_20240116::container_internal::StringHash, absl::lts_20240116::container_internal::StringEq, std::allocator<std::pair<const std::__cxx11::basic_string<char>, google::protobuf::Descriptor::WellKnownType> > >::EmplaceDecomposable, const std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, google::protobuf::Descriptor::WellKnownType>&>\n   fun:apply<absl::lts_20240116::container_internal::raw_hash_set<absl::lts_20240116::container_internal::FlatHashMapPolicy<std::__cxx11::basic_string<char>, google::protobuf::Descriptor::WellKnownType>, absl::lts_20240116::container_internal::StringHash, absl::lts_20240116::container_internal::StringEq, std::allocator<std::pair<const std::__cxx11::basic_string<char>, google::protobuf::Descriptor::WellKnownType> > >::EmplaceDecomposable, const std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, google::protobuf::Descriptor::WellKnownType>&>\n   fun:apply<absl::lts_20240116::container_internal::raw_hash_set<absl::lts_20240116::container_internal::FlatHashMapPolicy<std::__cxx11::basic_string<char>, google::protobuf::Descriptor::WellKnownType>, absl::lts_20240116::container_internal::StringHash, absl::lts_20240116::container_internal::StringEq, std::allocator<std::pair<const std::__cxx11::basic_string<char>, google::protobuf::Descriptor::WellKnownType> > >::EmplaceDecomposable, const std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, google::protobuf::Descriptor::WellKnownType>&>\n   fun:emplace<const std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, google::protobuf::Descriptor::WellKnownType>&>\n   fun:insert<const std::pair<std::__cxx11::basic_string<char>, google::protobuf::Descriptor::WellKnownType>*>\n   fun:insert\n   fun:_ZN6google8protobuf14DescriptorPool6TablesC1Ev\n   fun:_ZN6google8protobuf14DescriptorPoolC1EPNS0_18DescriptorDatabaseEPNS1_14ErrorCollectorE\n   fun:NewGeneratedPool\n   fun:_ZN6google8protobuf14DescriptorPool23internal_generated_poolEv\n   fun:_ZN6google8protobuf14DescriptorPool24InternalAddGeneratedFileEPKvi\n   fun:AddDescriptorsImpl\n   fun:AddDescriptors\n   fun:_ZN6google8protobuf8internal14AddDescriptorsEPKNS1_15DescriptorTableE\n   fun:call_init.part.0\n   fun:call_init\n   fun:_dl_init\n   obj:/usr/lib64/ld-2.28.so\n}\n{\n   Protobuf 5.26.1 suppression 4\n   Memcheck:Leak\n   match-leak-kinds: possible\n   fun:_Znwm\n   fun:_ZN6google8protobuf14DescriptorPool6TablesC1Ev\n   fun:_ZN6google8protobuf14DescriptorPoolC1EPNS0_18DescriptorDatabaseEPNS1_14ErrorCollectorE\n   fun:_ZN6google8protobuf14DescriptorPool23internal_generated_poolEv\n   fun:_ZN6google8protobuf14DescriptorPool24InternalAddGeneratedFileEPKvi\n   fun:_ZN6google8protobuf8internal14AddDescriptorsEPKNS1_15DescriptorTableE\n   ...\n   fun:call_init\n   fun:_dl_init\n}\n{\n   Protobuf 5.26.1 suppression 5\n   Memcheck:Leak\n   match-leak-kinds: possible\n   fun:_Znwm\n   fun:_ZN4absl12lts_2024011618container_internal19HashSetResizeHelper15InitializeSlotsISaIcELm40ELb0ELm8EEEbRNS1_12CommonFieldsEPvT_.isra.0\n   fun:_ZN4absl12lts_2024011618container_internal12raw_hash_setINS1_17FlatHashMapPolicyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN6google8protobuf10Descriptor13WellKnownTypeEEENS1_10StringHashENS1_8StringEqESaISt4pairIKS9_SD_EEE6resizeEm\n   fun:_ZN4absl12lts_2024011618container_internal12raw_hash_setINS1_17FlatHashMapPolicyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN6google8protobuf10Descriptor13WellKnownTypeEEENS1_10StringHashENS1_8StringEqESaISt4pairIKS9_SD_EEE14prepare_insertEm\n   fun:_ZN6google8protobuf14DescriptorPool6TablesC1Ev\n   fun:_ZN6google8protobuf14DescriptorPoolC1EPNS0_18DescriptorDatabaseEPNS1_14ErrorCollectorE\n   fun:_ZN6google8protobuf14DescriptorPool23internal_generated_poolEv\n   fun:_ZN6google8protobuf14DescriptorPool24InternalAddGeneratedFileEPKvi\n   fun:_ZN6google8protobuf8internal14AddDescriptorsEPKNS1_15DescriptorTableE\n   ...\n   fun:call_init\n   fun:_dl_init\n}\n{\n   Protobuf 5.26.1 suppression 6\n   Memcheck:Leak\n   match-leak-kinds: possible\n   fun:_Znwm\n   fun:_ZN4absl12lts_2024011618container_internal19HashSetResizeHelper15InitializeSlotsISaIcELm8ELb1ELm8EEEbRNS1_12CommonFieldsEPvT_.isra.0\n   fun:_ZN4absl12lts_2024011618container_internal12raw_hash_setINS1_17FlatHashSetPolicyIPKN6google8protobuf8internal15DescriptorTableEEENS5_12_GLOBAL__N_123GeneratedMessageFactory20DescriptorByNameHashENSC_18DescriptorByNameEqESaIS9_EE6resizeEm\n   fun:_ZN4absl12lts_2024011618container_internal12raw_hash_setINS1_17FlatHashSetPolicyIPKN6google8protobuf8internal15DescriptorTableEEENS5_12_GLOBAL__N_123GeneratedMessageFactory20DescriptorByNameHashENSC_18DescriptorByNameEqESaIS9_EE14prepare_insertEm\n   fun:_ZN6google8protobuf14MessageFactory29InternalRegisterGeneratedFileEPKNS0_8internal15DescriptorTableE\n   ...\n   fun:call_init\n   fun:_dl_init\n}\n{\n   NPTL keeps a cache of thread stacks, and metadata for thread local storage is not freed for threads in that cache\n   Memcheck:Leak\n   match-leak-kinds: possible\n   fun:calloc\n   fun:UnknownInlinedFun\n   fun:allocate_dtv\n   fun:_dl_allocate_tls\n   fun:allocate_stack\n   fun:pthread_create@@GLIBC_2.34\n}\n{\n   Fedora 40 dlopen suppression\n   Memcheck:Leak\n   match-leak-kinds: possible\n   fun:malloc\n   fun:UnknownInlinedFun\n   fun:_dlfo_mappings_segment_allocate\n   fun:_dl_find_object_update_1\n   fun:_dl_find_object_update\n   fun:dl_open_worker_begin\n   fun:_dl_catch_exception\n   fun:dl_open_worker\n   fun:_dl_catch_exception\n   fun:_dl_open\n   fun:do_dlopen\n   fun:_dl_catch_exception\n   fun:_dl_catch_error\n   fun:dlerror_run\n   fun:__libc_dlopen_mode\n}\n{\n   Fedora 40 onnxruntime 1.18.0 initialization suppression\n   Memcheck:Leak\n   match-leak-kinds: definite\n   fun:calloc\n   fun:cpuinfo_x86_linux_init\n   ...\n   fun:pthread_once@@GLIBC_2.34\n   ...\n}\n{\n   Apparent memory leak on Fedora 40.\n   Memcheck:Leak\n   match-leak-kinds: possible\n   fun:malloc\n   fun:__tsearch\n   fun:tsearch\n   fun:__add_to_environ\n   fun:setenv\n   ...\n}\n{\n   Protobuf 5.26.1 suppression 7\n   Memcheck:Leak\n   match-leak-kinds: reachable\n   fun:_Znwm\n   ...\n   fun:_ZN6google8protobuf14DescriptorPool24InternalAddGeneratedFileEPKvi\n   fun:_ZN6google8protobuf8internal14AddDescriptorsEPKNS1_15DescriptorTableE\n   ...\n}\n{\n   Protobuf 5.26.1 suppression 8\n   Memcheck:Leak\n   match-leak-kinds: reachable\n   fun:_Znwm\n   ...\n   fun:_ZN6google8protobuf8internal13OnShutdownRunEPFvPKvES3_\n   fun:_ZN6google8protobuf8internal24InitProtobufDefaultsSlowEv\n   ...\n}\n{\n   Protobuf 5.26.1 suppression 9\n   Memcheck:Leak\n   match-leak-kinds: reachable\n   fun:_Znwm\n   fun:_ZN6google8protobuf12_GLOBAL__N_123GeneratedMessageFactory9singletonEv\n   fun:_ZN6google8protobuf14MessageFactory29InternalRegisterGeneratedFileEPKNS0_8internal15DescriptorTableE\n   ...\n   fun:call_init\n   ...\n}\n{\n   Protobuf 5.26.1 suppression 10\n   Memcheck:Leak\n   match-leak-kinds: reachable\n   fun:_Znwm\n   fun:_ZN4absl12lts_2024011618container_internal19HashSetResizeHelper15InitializeSlotsISaIcELm8ELb1ELm8EEEbRNS1_12CommonFieldsEPvT_.isra.0\n   fun:_ZN4absl12lts_2024011618container_internal12raw_hash_setINS1_17FlatHashSetPolicyIPKN6google8protobuf8internal15DescriptorTableEEENS5_12_GLOBAL__N_123GeneratedMessageFactory20DescriptorByNameHashENSC_18DescriptorByNameEqESaIS9_EE6resizeEm\n   fun:_ZN4absl12lts_2024011618container_internal12raw_hash_setINS1_17FlatHashSetPolicyIPKN6google8protobuf8internal15DescriptorTableEEENS5_12_GLOBAL__N_123GeneratedMessageFactory20DescriptorByNameHashENSC_18DescriptorByNameEqESaIS9_EE14prepare_insertEm\n   fun:_ZN6google8protobuf14MessageFactory29InternalRegisterGeneratedFileEPKNS0_8internal15DescriptorTableE\n   ...\n   fun:call_init\n   ...\n}\n"
        },
        {
          "name": "vbench",
          "type": "tree",
          "content": null
        },
        {
          "name": "vdslib",
          "type": "tree",
          "content": null
        },
        {
          "name": "vespa-3party-bundles",
          "type": "tree",
          "content": null
        },
        {
          "name": "vespa-3party-jars",
          "type": "tree",
          "content": null
        },
        {
          "name": "vespa-application-maven-plugin",
          "type": "tree",
          "content": null
        },
        {
          "name": "vespa-athenz",
          "type": "tree",
          "content": null
        },
        {
          "name": "vespa-dependencies-enforcer",
          "type": "tree",
          "content": null
        },
        {
          "name": "vespa-documentgen-plugin",
          "type": "tree",
          "content": null
        },
        {
          "name": "vespa-enforcer-extensions",
          "type": "tree",
          "content": null
        },
        {
          "name": "vespa-feed-client-api",
          "type": "tree",
          "content": null
        },
        {
          "name": "vespa-feed-client-cli",
          "type": "tree",
          "content": null
        },
        {
          "name": "vespa-feed-client",
          "type": "tree",
          "content": null
        },
        {
          "name": "vespa-maven-plugin",
          "type": "tree",
          "content": null
        },
        {
          "name": "vespa-osgi-testrunner",
          "type": "tree",
          "content": null
        },
        {
          "name": "vespa-testrunner-components",
          "type": "tree",
          "content": null
        },
        {
          "name": "vespabase",
          "type": "tree",
          "content": null
        },
        {
          "name": "vespaclient-container-plugin",
          "type": "tree",
          "content": null
        },
        {
          "name": "vespaclient-core",
          "type": "tree",
          "content": null
        },
        {
          "name": "vespaclient-java",
          "type": "tree",
          "content": null
        },
        {
          "name": "vespaclient",
          "type": "tree",
          "content": null
        },
        {
          "name": "vespajlib",
          "type": "tree",
          "content": null
        },
        {
          "name": "vespalib",
          "type": "tree",
          "content": null
        },
        {
          "name": "vespalog",
          "type": "tree",
          "content": null
        },
        {
          "name": "vespamalloc",
          "type": "tree",
          "content": null
        },
        {
          "name": "vtag.cmake",
          "type": "blob",
          "size": 1.056640625,
          "content": "# Copyright Vespa.ai. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.\nif(NOT EXISTS \"${CMAKE_CURRENT_LIST_DIR}/dist/vtag.map\")\n    message(FATAL_ERROR \"dist/vtag.map does not exist, please run bootstrap.sh before configuring cmake\" )\nendif()\n\nfunction(get_vtag_define KEY)\n    file(STRINGS ${CMAKE_CURRENT_LIST_DIR}/dist/vtag.map VALUE REGEX \"${KEY}\")\n    list(GET VALUE 0 LINE)\n    separate_arguments(DATA UNIX_COMMAND \"${LINE}\")\n    list(GET DATA 1 VALUE)\n    set(DEFINE \"-D${KEY}=\\\\\\\"${VALUE}\\\\\\\"\")\n    set(${KEY} \"${DEFINE}\" PARENT_SCOPE)\nendfunction()\n\nget_vtag_define(V_TAG)\nget_vtag_define(V_TAG_DATE)\nget_vtag_define(V_TAG_PKG)\nget_vtag_define(V_TAG_ARCH)\nget_vtag_define(V_TAG_SYSTEM)\nget_vtag_define(V_TAG_SYSTEM_REV)\nget_vtag_define(V_TAG_BUILDER)\nget_vtag_define(V_TAG_COMPONENT)\nget_vtag_define(V_TAG_COMMIT_SHA)\nget_vtag_define(V_TAG_COMMIT_DATE)\n\nset(VTAG_DEFINES \"${V_TAG} ${V_TAG_DATE} ${V_TAG_PKG} ${V_TAG_ARCH} ${V_TAG_SYSTEM} ${V_TAG_SYSTEM_REV} ${V_TAG_BUILDER} ${V_TAG_COMPONENT} ${V_TAG_COMMIT_SHA} ${V_TAG_COMMIT_DATE}\")\n"
        },
        {
          "name": "zkfacade",
          "type": "tree",
          "content": null
        },
        {
          "name": "zookeeper-client-common",
          "type": "tree",
          "content": null
        },
        {
          "name": "zookeeper-command-line-client",
          "type": "tree",
          "content": null
        },
        {
          "name": "zookeeper-common",
          "type": "tree",
          "content": null
        },
        {
          "name": "zookeeper-server",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}