{
  "metadata": {
    "timestamp": 1736708680383,
    "page": 88,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjkw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "alibaba/transmittable-thread-local",
      "stars": 7776,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.4580078125,
          "content": "root = true\n\n[*]\ncharset = utf-8\nend_of_line = lf\ninsert_final_newline = true\n\ntab_width = 2\nindent_size = 2\nij_continuation_indent_size = 4\nindent_style = space\ntrim_trailing_whitespace = true\n\nij_any_blank_lines_after_imports = 2\nij_markdown_wrap_text_if_long = false\n\n\n[*.{java,kt}]\nindent_size = 4\nij_continuation_indent_size = 8\n\n\n[*.{md,mkd,markdown}]\nindent_size = 4\nij_continuation_indent_size = 8\ntrim_trailing_whitespace = false\n\n\n[*.xml]\nindent_style = tab\n\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 2.578125,
          "content": "# Created by .gitignore support plugin (hsz.mobi)\n\n### JetBrains template\n# Covers JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm\n\n*.iml\n\n## Directory-based project format:\n.idea/\n# if you remove the above rule, at least ignore the following:\n\n# User-specific stuff:\n# .idea/workspace.xml\n# .idea/tasks.xml\n# .idea/dictionaries\n\n# Sensitive or high-churn files:\n# .idea/dataSources.ids\n# .idea/dataSources.xml\n# .idea/sqlDataSources.xml\n# .idea/dynamic.xml\n# .idea/uiDesigner.xml\n\n# Gradle:\n# .idea/gradle.xml\n# .idea/libraries\n\n# Mongo Explorer plugin:\n# .idea/mongoSettings.xml\n\n## File-based project format:\n*.ipr\n*.iws\n\n## Plugin-specific files:\n\n# IntelliJ\nout/\n\n# mpeltonen/sbt-idea plugin\n.idea_modules/\n\n# JIRA plugin\natlassian-ide-plugin.xml\n\n# Crashlytics plugin (for Android Studio and IntelliJ)\ncom_crashlytics_export_strings.xml\ncrashlytics.properties\ncrashlytics-build.properties\n\n\n### OSX template\n.DS_Store\n.AppleDouble\n.LSOverride\n\n# Icon must end with two \\r\nIcon\u0000\u0000\n\n# Thumbnails\n._*\n\n# Files that might appear on external disk\n.Spotlight-V100\n.Trashes\n\n# Directories potentially created on remote AFP share\n.AppleDB\n.AppleDesktop\nNetwork Trash Folder\nTemporary Items\n.apdisk\n\n\n### Java template\n*.class\n\n# Mobile Tools for Java (J2ME)\n.mtj.tmp/\n\n# Package Files #\n*.jar\n*.war\n*.ear\n\n# virtual machine crash logs, see https://www.java.com/en/download/help/error_hotspot.html\nhs_err_pid*\n\n\n### Windows template\n# Windows image file caches\nThumbs.db\nehthumbs.db\n\n# Folder config file\nDesktop.ini\n\n# Recycle Bin used on file shares\n$RECYCLE.BIN/\n\n# Windows Installer files\n*.cab\n*.msi\n*.msm\n*.msp\n\n# Windows shortcuts\n*.lnk\n\n\n### Maven template\n\n# Avoid ignoring maven wrapper jar file (.jar files are usually ignored)\n!.mvn/wrapper/maven-wrapper.jar\n\ntarget/\npom.xml.tag\npom.xml.releaseBackup\npom.xml.versionsBackup\npom.xml.next\nrelease.properties\ndependency-reduced-pom.xml\nbuildNumber.properties\n.mvn/timing.properties\n\n\n### Gradle template\n\n# Ignore Gradle GUI config\ngradle-app.setting\n\n# Avoid ignoring Gradle wrapper jar file (.jar files are usually ignored)\n!gradle-wrapper.jar\n\n\n### SBT template\n# Simple Build Tool\n# https://www.scala-sbt.org/release/docs/Directories.html#Configuring+version+control\n\nlib_managed/\nsrc_managed/\nproject/boot/\n.history\n\n\n### Eclipse template\n*.pydevproject\n.metadata\n.gradle\nbin/\ntmp/\n*.tmp\n*.bak\n*.swp\n*~.nib\nlocal.properties\n.settings/\n.loadpath\n\n# External tool builders\n.externalToolBuilders/\n\n# Locally stored \"Eclipse launch configurations\"\n*.launch\n\n# CDT-specific\n.cproject\n\n# PDT-specific\n.buildpath\n\n# sbteclipse plugin\n.target\n\n# TeXlipse plugin\n.texlipse\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.1083984375,
          "content": "[submodule \"scripts/bash-buddy\"]\n\tpath = scripts/bash-buddy\n\turl = https://github.com/foldright/bash-buddy.git\n"
        },
        {
          "name": ".mvn",
          "type": "tree",
          "content": null
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 15.2744140625,
          "content": "# Welcome! Thank you for contributing to TransmittableThreadLocal(TTL)!\n\n> ⚠️ This contribution guide is still in progress.\n\nWe follow the standard GitHub [fork & pull](https://help.github.com/articles/using-pull-requests/#fork--pull) approach to pull requests. Just fork the official repo, develop in a branch, and submit a PR!\n\nYou're always welcome to submit your PR straight away and start the discussion (without reading the rest of this wonderful doc, or the README.md). The goal of these notes is to make your experience contributing to TransmittableThreadLocal(TTL) as smooth and pleasant as possible. We're happy to guide you through the process once you've submitted your PR.\n\n# The TransmittableThreadLocal(TTL) Community\n\nMainly use the github issue: https://github.com/alibaba/transmittable-thread-local/issues\n\nIn case of questions about the contribution process or for discussion of specific issues please visit the [alibaba/transmittable-thread-local gitter chat](https://gitter.im/alibaba/transmittable-thread-local?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge).\n\n# Navigating around the project & codebase\n\n## Branches summary\n\nDepending on what you want to work on, you should target a specific branch as explained below:\n\n* `master` – active development branch\n* `incubation/xxx` branches contain big feature.\n* `dev/xxx` branches contain small feature or bug fix.\n\n## Tags\n\nTTL uses tags to categorise issues into groups. \n\nMost notably many tags start with a `t:` prefix (as in `topic:`), which categorises issues in terms of which extension module they relate to. Examples are:\n\n- [t:vertx](https://github.com/alibaba/transmittable-thread-local/labels/t%3Avertx)\n- [t:netty](https://github.com/alibaba/transmittable-thread-local/labels/t%3Anetty)\n\nWithout `t:xxx` tags is related to `TTL` lib.\n\nsee [all tags here](https://github.com/alibaba/transmittable-thread-local/labels)\n\nIn general *all issues are open for anyone working on them*, however if you're new to the project and looking for an issue\nthat will be accepted and likely is a nice one to get started you should check out the following tags:\n\n- [good first issue](https://github.com/alibaba/transmittable-thread-local/labels/%F0%9F%94%B0%20good%20first%20issue) - which identifies simple entry level tickets, such as improvements of documentation or tests. If you're not sure how to solve a ticket but would like to work on it feel free to ask in the issue about clarification or tips.\n- [help wanted](https://github.com/alibaba/transmittable-thread-local/labels/help%20wanted) - which identifies issues that the core team will likely not have time to work on, or the issue is a nice entry level ticket. If you're not sure how to solve a ticket but would like to work on it feel free to ask in the issue about clarification or tips.\n- [nice-to-have (low-priority)](https://github.com/alibaba/transmittable-thread-local/labels/nice-to-have%20%28low-prio%29) - are tasks which make sense, however are not very high priority (in face of other very high priority issues). If you see something interesting in this list, a contribution would be really wonderful!\n\nAnother group of tickets are those which start from a number. They're used to signal in what phase of development an issue is:\n\n- [0 - new](https://github.com/alibaba/transmittable-thread-local/labels/0%20-%20new) - is assigned when a ticket is unclear on its purpose or if it is valid or not. Sometimes the additional tag `discuss` is used to mark such tickets, if they propose large scale changes and need more discussion before moving into triaged (or being closed as invalid).\n- [1 - triaged](https://github.com/alibaba/transmittable-thread-local/labels/1%20-%20triaged) - roughly speaking means \"this ticket makes sense\". Triaged tickets are safe to pick up for contributing in terms of likeliness of a patch for it being accepted. It is not recommended to start working on a ticket that is not triaged.\n- [2 - pick next](https://github.com/alibaba/transmittable-thread-local/labels/2%20-%20pick%20next) - used to mark issues which are next up in the queue to be worked on. Sometimes it's also used to mark which PRs are expected to be reviewed/merged for the next release. The tag is non-binding, and mostly used as an organisational helper.\n- [3 - in progress](https://github.com/alibaba/transmittable-thread-local/labels/3%20-%20in%20progress) - means someone is working on this ticket. If you see a ticket that has the tag, however seems inactive, it could have been an omission with removing the tag, feel free to ping the ticket then if it's still being worked on.\n\nAnother group of tags indicate type of a ticket is:\n\n- [bug](https://github.com/alibaba/transmittable-thread-local/labels/%F0%9F%90%9E%20bug) tickets indicate potential production issues. Bugs take priority in being fixed above features. The core team dedicates a number of days to working on bugs each sprint. Bugs which have **reproducers** are also great for community contributions as they're well-isolated. Sometimes we're not as lucky to have reproducers though, then a bugfix should also include a test reproducing the original error along with the fix.\n- [feature](https://github.com/alibaba/transmittable-thread-local/labels/%E2%9C%A8%20feature).\n- [enhancement](https://github.com/alibaba/transmittable-thread-local/labels/%F0%9F%92%AA%20enhancement).\n\n# TransmittableThreadLocal(TTL) contributing guidelines\n\nThese guidelines are meant to be a living document that should be changed and adapted as needed.\nWe encourage changes that make it easier to achieve our goals in an efficient way.\n\n## General workflow\n\nThe steps below describe how to get a patch into a main development branch (e.g. `master`). \nThe steps are exactly the same for everyone involved in the project (be it core team, or first time contributor).\n\n1. To avoid duplicated effort, it might be good to check the [issue tracker](https://github.com/alibaba/transmittable-thread-local/issues) and [existing pull requests](https://github.com/alibaba/transmittable-thread-local/pulls) for existing work.\n   - If there is no ticket yet, feel free to [create one](https://github.com/alibaba/transmittable-thread-local/issues/new) to discuss the problem and the approach you want to take to solve it.\n1. [Fork the project](https://github.com/alibaba/transmittable-thread-local/fork) on GitHub. You'll need to create a feature-branch for your work on your fork, as this way you'll be able to submit a pull request against the mainline.\n1. Create a branch on your fork and work on the feature. For example: `git checkout -b support-fast-thread-local`\n   - Please make sure to follow the general quality guidelines (specified below) when developing your patch.\n   - Please write additional tests covering your feature and adjust existing ones if needed before submitting your pull request. The `validatePullRequest` task ([explained below](#the-validatepullrequest-task)) may come in handy to verify your changes are correct.\n   - Use the `verifyCodeStyle` maven task to make sure your code is properly formatted and includes the proper copyright headers.\n1. Once your feature is complete, prepare the commit following our [Creating Commits And Writing Commit Messages](#creating-commits-and-writing-commit-messages). For example, a good commit message would be: `Adding compression support for Manifests #42` (note the reference to the ticket it aimed to resolve).\n1. If it's a new feature, or a change of behavior, document it on the [User Guide](https://github.com/alibaba/transmittable-thread-local/blob/master/README.md). If the feature was touching Scala or Java DSL, make sure to document both the Scala and Java APIs.\n1. Now it's finally time to [submit the pull request](https://help.github.com/articles/using-pull-requests)!\n    - Please make sure to include a reference to the issue you're solving *in the comment* for the Pull Request, as this will cause the PR to be linked properly with the Issue. Examples of good phrases for this are: \"Resolves #1234\" or \"Refs #1234\".\n1. If you have not already done so, you will be asked by our CLA bot to [sign the Alibaba CLA](https://cla-assistant.io/alibaba/transmittable-thread-local) online. CLA stands for Contributor License Agreement and is a way of protecting intellectual property disputes from harming the project.\n1. Now both committers and interested people will review your code. This process is to ensure the code we merge is of the best possible quality, and that no silly mistakes slip through. You're expected to follow-up these comments by adding new commits to the same branch. The commit messages of those commits can be more loose, for example: `Removed debugging using printline`, as they all will be squashed into one commit before merging into the main branch.\n    - The community and team are really nice people, so don't be afraid to ask follow up questions if you didn't understand some comment, or would like clarification on how to continue with a given feature. We're here to help, so feel free to ask and discuss any kind of questions you might have during review!\n1. After the review you should fix the issues as needed (pushing a new commit for new review etc.), iterating until the reviewers give their thumbs up–which is signalled usually by a comment saying `LGTM`, which means \"Looks Good To Me\".\n1. Once everything is said and done, your pull request gets merged :tada: Your feature will be available with the next “earliest” release milestone. And of course you will be given credit for the fix in the release stats during the release's announcement. You've made it!\n\nThe TL;DR; of the above very precise workflow version is:\n\n1. Fork TTL\n2. Hack and test on your feature (on a branch)\n3. Document it\n4. Submit a PR\n5. Sign the CLA if necessary\n6. Keep polishing it until received enough LGTM\n7. Profit!\n\n## Getting started with maven\n\nTTL is using the [maven](https://maven.apache.org/) build system.\n\nTo compile all the core modules use the `compile` command:\n\n```bash\n./mvnw compile\n```\n\nYou can run tests with the `test` command:\n\n```bash\n./mvnw test\n```\n\nIf you want to deploy the artifacts to your local maven repository (for example,\nto use from an maven project) use the `install` command:\n\n```bash\n./mvnw install\n```\n\n## The Pull Request validation task\n\n**TODO**\n\n## Binary compatibility\n\n**TODO**\n\n## Pull request requirements\n\nFor a pull request to be considered at all it has to meet these requirements:\n\n1. Regardless if the code introduces new features or fixes bugs or regressions, it must have comprehensive tests.\n1. The code must be well documented in the TTL project's standard documentation format (see the ‘Documentation’ section below).\n1. The commit messages must properly describe the changes, see further below.\n1. A pull request must indicate (link to) the issue it is aimed to resolve in the description (or comments) of the PR, in order to establish a link between PR and Issue. This can be achieved by writing \"Fixes #1234\" or similar in PR description.\n1. All projects must include TTL copyright notices.  Each project can choose between one of two approaches:\n\n    1. All source files in the project must have a TTL copyright notice in the file header.\n    1. The Notices file for the project includes the TTL copyright notice and no other files contain copyright notices.  See http://www.apache.org/legal/src-headers.html for instructions for managing this approach for copyrights.\n\n    TTL projects uses the first choice, having copyright notices in every file header. When absent, these are added automatically during `mvn compile`.\n\n### Additional guidelines\n\nSome additional guidelines regarding source code are:\n\n- Keep the code [DRY](http://programmer.97things.oreilly.com/wiki/index.php/Don%27t_Repeat_Yourself).\n- Apply the [Boy Scout Rule](http://programmer.97things.oreilly.com/wiki/index.php/The_Boy_Scout_Rule) whenever you have the chance to.\n- Never delete or change existing copyright notices, just add additional info.\n- Do not use ``@author`` tags since it does not encourage [Collective Code Ownership](http://www.extremeprogramming.org/rules/collective.html). TODO\n  - Contributors , each project should make sure that the contributors gets the credit they deserve—in a text file or page on the project website and in the release notes etc.\n\n## Documentation\n\nAll documentation is preferred to be in Java API doc standard documentation format, which among other things allows all code in the documentation to be externalized into compiled files and imported into the documentation.\n\nTo build the documentation locally:\n\n```\nmvn -Pgen-api-doc javadoc:javadoc\n```\n\n## Creating commits and writing commit messages\n\nFollow these guidelines when creating public commits and writing commit messages.\n\n1. If your work spans multiple local commits (for example; if you do safe point commits while working in a feature branch or work in a branch for a long time doing merges/rebases etc.) then please do not commit it all but rewrite the history by squashing the commits into a single big commit which you write a good commit message for (like discussed in the following sections). For more info read this article: [Git Workflow](http://sandofsky.com/blog/git-workflow.html). Every commit should be able to be used in isolation, cherry picked etc.\n\n2. The first line should be a descriptive sentence what the commit is doing, including the ticket number. It should be possible to fully understand what the commit does—but not necessarily how it does it—by just reading this single line. We follow the “imperative present tense” style for commit messages ([more info here](http://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html)).\n\n   It is **not ok** to only list the ticket number, type \"minor fix\" or similar.\n   If the commit is a small fix, then you are done. If not, go to 3.\n\n3. Following the single line description should be a blank line followed by an enumerated list with the details of the commit.\n\n4. You can request review by a specific team member for your commit (depending on the degree of automation we reach, the list may change over time):\n    * ``Review by @gituser`` - if you want to notify someone on the team. The others can, and are encouraged to participate.\n\nExample:\n\n    enable Travis CI #1\n\n    * Details 1\n    * Details 2\n    * Details 3\n\n## Pull request validation workflow details\n\n**TODO**\n\n## Source style\n\nSometimes it is convenient to place 'internal' classes in their own package.\nIn such situations we prefer 'internal' over 'impl' as a package name.\n\n### Java style\n\nTTL projects uses xxx maven plugin to format Java sources.\n\n**TODO**\n\nPR validation includes checking that the Java sources are formatted and will fail if they are not.\n\n# Supporting infrastructure\n\n## Reporting security issues\n\nIf you have found an issue in an TransmittableThreadLocal(TTL) project that might have security\nimplications, you can report it to <https://security.alibaba.com>. We will make\nsure those will get handled with priority. Thank you for your responsible\ndisclosure!\n\n## Continuous integration\n\nTransmittableThreadLocal(TTL) uses GitHub actions for Continuous Integration: https://github.com/alibaba/transmittable-thread-local/actions\n\n## Related links\n\n- [alibaba/transmittable-thread-local Contributor License Agreement](https://cla-assistant.io/alibaba/transmittable-thread-local)\n- [the akka contribution guide](https://github.com/akka/akka/blob/master/CONTRIBUTING.md) (this contribution guide is adapted from it)\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0947265625,
          "content": "\n\n                                 Apache License\n                           Version 2.0, January 2004\n                        https://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       https://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README-EN.md",
          "type": "blob",
          "size": 44.0126953125,
          "content": "# <div align=\"center\"><a href=\"#dummy\"><img src=\"https://user-images.githubusercontent.com/1063891/233595946-4493119e-4e0c-4081-a382-0a20731c578e.png\" alt=\"📌 TransmittableThreadLocal(TTL)\"></a></div>\n\n> [!IMPORTANT]\n> 🚧 This branch is `TransmittableThreadLocal(TTL) v3`, which is in development and has not been released yet.  \n> See [issue 432](https://github.com/alibaba/transmittable-thread-local/issues/432) for the `v3` notes, work item list and its progress.\n>\n> 👉 The stable version `v2.x` currently in use is on [**branch `2.x`**](https://github.com/alibaba/transmittable-thread-local/tree/2.x).\n\n<p align=\"center\">\n<a href=\"https://github.com/alibaba/transmittable-thread-local/actions/workflows/ci.yaml\"><img src=\"https://img.shields.io/github/actions/workflow/status/alibaba/transmittable-thread-local/ci.yaml?branch=master&logo=github&logoColor=white&label=fast ci\" alt=\"Fast CI\"></a>\n<a href=\"https://github.com/alibaba/transmittable-thread-local/actions/workflows/strong_ci.yaml\"><img src=\"https://img.shields.io/github/actions/workflow/status/alibaba/transmittable-thread-local/strong_ci.yaml?branch=master&logo=github&logoColor=white&label=strong ci\" alt=\"Strong CI\"></a>\n<a href=\"https://app.codecov.io/gh/alibaba/transmittable-thread-local/tree/master\"><img src=\"https://badgen.net/codecov/c/github/alibaba/transmittable-thread-local/master?icon=codecov\" alt=\"Coverage Status\"></a>\n<a href=\"https://openjdk.java.net/\"><img src=\"https://img.shields.io/badge/Java-6+-339933?logo=openjdk&logoColor=white\" alt=\"JDK support\"></a>\n<a href=\"https://www.apache.org/licenses/LICENSE-2.0.html\"><img src=\"https://img.shields.io/github/license/alibaba/transmittable-thread-local?color=4D7A97&logo=apache\" alt=\"License\"></a>\n<a href=\"https://alibaba.github.io/transmittable-thread-local/apidocs/\"><img src=\"https://img.shields.io/github/release/alibaba/transmittable-thread-local?label=javadoc&color=339933&logo=microsoft-academic&logoColor=white\" alt=\"Javadocs\"></a>\n<a href=\"https://repo1.maven.org/maven2/com/alibaba/transmittable-thread-local/maven-metadata.xml\"><img src=\"https://img.shields.io/maven-central/v/com.alibaba/transmittable-thread-local?logo=apache-maven&logoColor=white\" alt=\"Maven Central\"></a>\n<a href=\"https://github.com/alibaba/transmittable-thread-local/releases\"><img src=\"https://img.shields.io/github/release/alibaba/transmittable-thread-local\" alt=\"GitHub release\"></a>\n<a href=\"https://github.com/alibaba/transmittable-thread-local/stargazers\"><img src=\"https://img.shields.io/github/stars/alibaba/transmittable-thread-local?style=flat\" alt=\"GitHub Stars\"></a>\n<a href=\"https://github.com/alibaba/transmittable-thread-local/fork\"><img src=\"https://img.shields.io/github/forks/alibaba/transmittable-thread-local?style=flat\" alt=\"GitHub Forks\"></a>\n<a href=\"https://github.com/alibaba/transmittable-thread-local/network/dependents\"><img src=\"https://badgen.net/github/dependents-repo/alibaba/transmittable-thread-local?label=user%20repos\" alt=\"user repos\"></a>\n<a href=\"https://github.com/alibaba/transmittable-thread-local/issues\"><img src=\"https://img.shields.io/github/issues/alibaba/transmittable-thread-local\" alt=\"GitHub issues\"></a>\n<a href=\"https://github.com/alibaba/transmittable-thread-local/graphs/contributors\"><img src=\"https://img.shields.io/github/contributors/alibaba/transmittable-thread-local\" alt=\"GitHub Contributors\"></a>\n<a href=\"https://github.com/alibaba/transmittable-thread-local\"><img src=\"https://img.shields.io/github/repo-size/alibaba/transmittable-thread-local\" alt=\"GitHub repo size\"></a>\n<a href=\"https://gitpod.io/#https://github.com/alibaba/transmittable-thread-local\"><img src=\"https://img.shields.io/badge/Gitpod-ready to code-339933?label=gitpod&logo=gitpod&logoColor=white\" alt=\"gitpod: Ready to Code\"></a>\n</p>\n\n📖 English Documentation | [📖 中文文档](README.md)\n\n----------------------------------------\n\n<!-- START doctoc generated TOC please keep comment here to allow auto update -->\n<!-- DON'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE -->\n\n- [🔧 Functions](#-functions)\n- [🎨 Requirements](#-requirements)\n- [👥 User Guide](#-user-guide)\n    - [1. Simple usage](#1-simple-usage)\n    - [2. Transmit value even using thread pool](#2-transmit-value-even-using-thread-pool)\n        - [2.1 Decorate `Runnable` and `Callable`](#21-decorate-runnable-and-callable)\n        - [2.2 Decorate thread pool](#22-decorate-thread-pool)\n        - [2.3 Use Java Agent to decorate thread pool implementation class](#23-use-java-agent-to-decorate-thread-pool-implementation-class)\n- [🔌 Java API Docs](#-java-api-docs)\n- [🍪 Maven Dependency](#-maven-dependency)\n- [🔨 How to compile and build](#-how-to-compile-and-build)\n- [🗿 More Documentation](#-more-documentation)\n- [📚 Related Resources](#-related-resources)\n    - [JDK Core Classes](#jdk-core-classes)\n- [💗 Who Used](#-who-used)\n- [👷 Contributors](#-contributors)\n\n<!-- END doctoc generated TOC please keep comment here to allow auto update -->\n\n----------------------------------------\n\n# 🔧 Functions\n\n👉 `TransmittableThreadLocal`(`TTL`): The missing Java™ std lib(simple & 0-dependency) for framework/middleware,\nprovide an enhanced `InheritableThreadLocal` that transmits values between threads even using thread pooling components. Support `Java 6~21`.\n\nClass [`InheritableThreadLocal`](https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/InheritableThreadLocal.html) in `JDK`\ncan transmit value to child thread from parent thread.\n\nBut when use thread pool, thread is cached up and used repeatedly. Transmitting value from parent thread to child thread has no meaning.\nApplication need transmit value from the time task is created to the time task is executed.\n\nIf you have problem or question, please [submit Issue](https://github.com/alibaba/transmittable-thread-local/issues) or play [fork](https://github.com/alibaba/transmittable-thread-local/fork) and pull request dance.\n\n> [!NOTE]\n> From `TTL v2.13+` upgrade to `Java 8`. 🚀  \n> If you need `Java 6` support, use version `2.12.x` <a href=\"https://repo1.maven.org/maven2/com/alibaba/transmittable-thread-local/maven-metadata.xml\"><img src=\"https://img.shields.io/maven-central/v/com.alibaba/transmittable-thread-local?versionPrefix=2.12.&color=lightgrey&logo=apache-maven&logoColor=white\" alt=\"Maven Central\"></a>\n\n# 🎨 Requirements\n\nThe Requirements listed below is also why I sort out `TransmittableThreadLocal` in my work.\n\n- Application container or high layer framework transmit information to low layer sdk.\n- Transmit context to logging without application code aware.\n\n# 👥 User Guide\n\n## 1. Simple usage\n\n```java\nTransmittableThreadLocal<String> context = new TransmittableThreadLocal<>();\n\n// =====================================================\n\n// set in parent thread\ncontext.set(\"value-set-in-parent\");\n\n// =====================================================\n\n// read in child thread, value is \"value-set-in-parent\"\nString value = context.get();\n```\n\n\\# See the executable demo [`SimpleDemo.kt`](ttl-core/src/test/java/com/alibaba/demo/ttl3/SimpleDemo.kt) with full source code.\n\nThis is the function of class `InheritableThreadLocal`, should use class `InheritableThreadLocal` instead.\n\nBut when use thread pool, thread is cached up and used repeatedly. Transmitting value from parent thread to child thread has no meaning.\nApplication need transmit value from the time task is created to the point task is executed.\n\nThe solution is below usage.\n\n## 2. Transmit value even using thread pool\n\n### 2.1 Decorate `Runnable` and `Callable`\n\nDecorate input `Runnable` and `Callable` by [`TtlRunnable`](ttl-core/src/main/java/com/alibaba/ttl3/TtlRunnable.java)\nand [`TtlCallable`](ttl-core/src/main/java/com/alibaba/ttl3/TtlCallable.java).\n\nSample code:\n\n```java\nTransmittableThreadLocal<String> context = new TransmittableThreadLocal<>();\n\n// =====================================================\n\n// set in parent thread\ncontext.set(\"value-set-in-parent\");\n\nRunnable task = new RunnableTask();\n// extra work, create decorated ttlRunnable object\nRunnable ttlRunnable = TtlRunnable.get(task);\nexecutorService.submit(ttlRunnable);\n\n// =====================================================\n\n// read in task, value is \"value-set-in-parent\"\nString value = context.get();\n```\n\n**_NOTE_**：  \nEven when the same `Runnable` task is submitted to the thread pool multiple times, the decoration operations(ie： `TtlRunnable.get(task)`) is required for each submission to capture the value of the `TransmittableThreadLocal` context at submission time; That is, if the same task is submitted next time without reperforming decoration and still using the last `TtlRunnable`, the submitted task will run in the context of the last captured context. The sample code is as follows:\n\n\n```java\n// first submission\nRunnable task = new RunnableTask();\nexecutorService.submit(TtlRunnable.get(task));\n\n// ... some biz logic,\n// and modified TransmittableThreadLocal context ...\ncontext.set(\"value-modified-in-parent\");\n\n// next submission\n// reperform decoration to transmit the modified TransmittableThreadLocal context\nexecutorService.submit(TtlRunnable.get(task));\n```\n\nAbove code show how to dealing with `Runnable`, `Callable` is similar:\n\n```java\nTransmittableThreadLocal<String> context = new TransmittableThreadLocal<>();\n\n// =====================================================\n\n// set in parent thread\ncontext.set(\"value-set-in-parent\");\n\nCallable call = new CallableTask();\n// extra work, create decorated ttlCallable object\nCallable ttlCallable = TtlCallable.get(call);\nexecutorService.submit(ttlCallable);\n\n// =====================================================\n\n// read in call, value is \"value-set-in-parent\"\nString value = context.get();\n```\n\n\\# See the executable demo [`TtlWrapperDemo.kt`](ttl-core/src/test/java/com/alibaba/demo/ttl3/TtlWrapperDemo.kt) with full source code.\n\n### 2.2 Decorate thread pool\n\nEliminating the work of `Runnable` and `Callable` Decoration every time it is submitted to thread pool. This work can be completed in the thread pool.\n\nUse util class\n[`TtlExecutors`](ttl-core/src/main/java/com/alibaba/ttl3/executor/TtlExecutors.java)\nto decorate thread pool.\n\nUtil class `TtlExecutors` has below methods:\n\n- `getTtlExecutor`: decorate interface `Executor`\n- `getTtlExecutorService`: decorate interface `ExecutorService`\n- `getTtlScheduledExecutorService`: decorate interface `ScheduledExecutorService`\n\nSample code:\n\n```java\nExecutorService executorService = ...\n// extra work, create decorated executorService object\nexecutorService = TtlExecutors.getTtlExecutorService(executorService);\n\nTransmittableThreadLocal<String> context = new TransmittableThreadLocal<>();\n\n// =====================================================\n\n// set in parent thread\ncontext.set(\"value-set-in-parent\");\n\nRunnable task = new RunnableTask();\nCallable call = new CallableTask();\nexecutorService.submit(task);\nexecutorService.submit(call);\n\n// =====================================================\n\n// read in Task or Callable, value is \"value-set-in-parent\"\nString value = context.get();\n```\n\n\\# See the executable demo [`TtlExecutorWrapperDemo.kt`](ttl-core/src/test/java/com/alibaba/demo/ttl3/TtlExecutorWrapperDemo.kt) with full source code.\n\n### 2.3 Use Java Agent to decorate thread pool implementation class\n\nIn this usage, transmittance is transparent\\(no decoration operation\\).\n\nSample code:\n\n```java\n// ## 1. upper layer logic of framework ##\nTransmittableThreadLocal<String> context = new TransmittableThreadLocal<>();\ncontext.set(\"value-set-in-parent\");\n\n// ## 2. biz logic ##\nExecutorService executorService = Executors.newFixedThreadPool(3);\n\nRunnable task = new RunnableTask();\nCallable call = new CallableTask();\nexecutorService.submit(task);\nexecutorService.submit(call);\n\n// ## 3. underlayer logic of framework ##\n// read in Task or Callable, value is \"value-set-in-parent\"\nString value = context.get();\n```\n\n\\# See the executable demo [`AgentDemo.kt`](ttl2-compatible/src/test/java/com/alibaba/demo/ttl/agent/AgentDemo.kt) with full source code, run demo by the script [`scripts/run-agent-demo.sh`](scripts/run-agent-demo.sh).\n\nAt present, `TTL` agent has decorated below `JDK` execution components(aka. thread pool) implementation:\n\n- `java.util.concurrent.ThreadPoolExecutor` and `java.util.concurrent.ScheduledThreadPoolExecutor`\n    - decoration implementation code is in [`JdkExecutorTtlTransformlet.java`](ttl-agent/src/main/java/com/alibaba/ttl3/agent/transformlet/internal/JdkExecutorTtlTransformlet.java).\n- `java.util.concurrent.ForkJoinTask`（corresponding execution component is `java.util.concurrent.ForkJoinPool`）\n    - decoration implementation code is in [`ForkJoinTtlTransformlet.java`](ttl-agent/src/main/java/com/alibaba/ttl3/agent/transformlet/internal/ForkJoinTtlTransformlet.java), supports since version **_`2.5.1`_**.\n    - **_NOTE_**: [**_`CompletableFuture`_**](https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/concurrent/CompletableFuture.html) and (parallel) [**_`Stream`_**](https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/stream/package-summary.html) introduced in Java 8 is executed through `ForkJoinPool` underneath, so after supporting `ForkJoinPool`, `TTL` also supports `CompletableFuture` and `Stream` transparently. 🎉\n- `java.util.TimerTask`（corresponding execution component is `java.util.Timer`）\n    - decoration implementation code is in [`TimerTaskTtlTransformlet.java`](ttl-agent/src/main/java/com/alibaba/ttl3/agent/transformlet/internal/TimerTaskTtlTransformlet.java), supports since version **_`2.7.0`_**.\n    - **_NOTE_**: Since version `2.11.2` decoration for `TimerTask` default is enable (because correctness is first concern, not the best practice like \"It is not recommended to use `TimerTask`\" :); before version `2.11.1` default is disable.\n    - enabled/disable by agent argument `ttl.agent.enable.timer.task`:\n        - `-javaagent:path/to/transmittable-thread-local-2.x.y.jar=ttl.agent.enable.timer.task:true`\n        - `-javaagent:path/to/transmittable-thread-local-2.x.y.jar=ttl.agent.enable.timer.task:false`\n    - more info about `TTL` agent arguments, see [the javadoc of `TtlAgent.java`](ttl-agent/src/main/java/com/alibaba/ttl3/agent/TtlAgent.java).\n\nAdd start options on Java command:\n\n- `-javaagent:path/to/transmittable-thread-local-2.x.y.jar`\n\nJava command example:\n\n```bash\njava -javaagent:transmittable-thread-local-2.x.y.jar \\\n    -cp classes \\\n    com.alibaba.demo.ttl.agent.AgentDemo\n\n# if changed the TTL jar file name or the TTL version is before 2.6.0,\n# should set argument -Xbootclasspath explicitly.\njava -javaagent:path/to/ttl-foo-name-changed.jar \\\n    -Xbootclasspath/a:path/to/ttl-foo-name-changed.jar \\\n    -cp classes \\\n    com.alibaba.demo.ttl.agent.AgentDemo\n\njava -javaagent:path/to/transmittable-thread-local-2.5.1.jar \\\n    -Xbootclasspath/a:path/to/transmittable-thread-local-2.5.1.jar \\\n    -cp classes \\\n    com.alibaba.demo.ttl.agent.AgentDemo\n```\n\nRun the script [`scripts/run-agent-demo.sh`](scripts/run-agent-demo.sh)\nto start demo of \"Use Java Agent to decorate thread pool implementation class\".\n\n\n\n**NOTE**：\n\n- Because TTL agent modified the `JDK` std lib classes, make code refer from std lib class to the TTL classes, so the TTL Agent jar must be added to `boot classpath`.\n- Since `v2.6.0`, TTL agent jar will auto add self to `boot classpath`. But you **should _NOT_** modify the downloaded TTL jar file name in the maven repo(eg: `transmittable-thread-local-2.x.y.jar`).\n    - if you modified the downloaded TTL jar file name(eg: `ttl-foo-name-changed.jar`),\n      you must add TTL agent jar to `boot classpath` manually by java option `-Xbootclasspath/a:path/to/ttl-foo-name-changed.jar`.\n\nThe implementation of auto adding self agent jar to `boot classpath` use the `Boot-Class-Path` property of manifest file(`META-INF/MANIFEST.MF`) in the TTL Java Agent Jar:\n\n> [!NOTE]\n> `Boot-Class-Path`\n>\n> A list of paths to be searched by the bootstrap class loader. Paths represent directories or libraries (commonly referred to as JAR or zip libraries on many platforms).\n> These paths are searched by the bootstrap class loader after the platform specific mechanisms of locating a class have failed. Paths are searched in the order listed.\n\nMore info:\n\n- [`Java Agent Specification` - `JavaDoc`文档](https://docs.oracle.com/en/java/javase/21/docs/api/java.instrument/java/lang/instrument/package-summary.html#package.description)\n- [JAR File Specification - JAR Manifest](https://docs.oracle.com/en/java/javase/21/docs/specs/jar/jar.html#jar-manifest)\n- [Working with Manifest Files - The Java™ Tutorials](https://docs.oracle.com/javase/tutorial/deployment/jar/manifestindex.html)\n\n# 🔌 Java API Docs\n\nThe current version Java API documentation: <https://alibaba.github.io/transmittable-thread-local/apidocs/>\n\n# 🍪 Maven Dependency\n\n```xml\n<dependency>\n    <groupId>com.alibaba</groupId>\n    <artifactId>transmittable-thread-local</artifactId>\n    <version>2.14.4</version>\n</dependency>\n```\n\nCheck available version at [maven.org](https://repo1.maven.org/maven2/com/alibaba/transmittable-thread-local/maven-metadata.xml).\n\n# 🔨 How to compile and build\n\nCompilation/build environment require **_`JDK 8+`_**; Compilation can be performed in the normal way of `Maven`.\n\n\\# The project already contains `Maven` that satisfied the required version, directly run **_`mvnw` in the project root directory_**; there is no need to manually install `Maven` by yourself.\n\n```bash\n# Run test case\n./mvnw test\n# Compile and package\n./mvnw package\n# Run test case, compile and package, install TTL library to local Maven\n./mvnw install\n\n##################################################\n# If you use maven installed by yourself, the version requirement: maven 3.3.9+\n\nmvn install\n```\n\n# 🗿 More Documentation\n\n- [🎓 Developer Guide](docs/developer-guide-en.md)\n\n# 📚 Related Resources\n\n## JDK Core Classes\n\n- [WeakHashMap](https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/WeakHashMap.html)\n- [InheritableThreadLocal](https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/InheritableThreadLocal.html)\n\n# 💗 Who Used\n\nSome open-source projects used `TTL`:\n\n- **Middleware**\n    - [`sofastack/sofa-rpc` ![](https://img.shields.io/github/stars/sofastack/sofa-rpc.svg?style=social&label=Star)](https://github.com/sofastack/sofa-rpc) [![star](https://gitee.com/sofastack/sofa-rpc/badge/star.svg?theme=gray)](https://gitee.com/sofastack/sofa-rpc)  \n      SOFARPC is a high-performance, high-extensibility, production-level Java RPC framework\n    - [`trpc-group/trpc-java` ![](https://img.shields.io/github/stars/trpc-group/trpc-java.svg?style=social&label=Star)](https://github.com/trpc-group/trpc-java)  \n      A pluggable, high-performance RPC framework written in java\n    - [`tencentmusic/supersonic` ![](https://img.shields.io/github/stars/tencentmusic/supersonic.svg?style=social&label=Star)](https://github.com/tencentmusic/supersonic)  \n      SuperSonic is an out-of-the-box yet highly extensible framework for building ChatBI\n    - [`dromara/hmily` ![](https://img.shields.io/github/stars/dromara/hmily.svg?style=social&label=Star)](https://github.com/dromara/hmily) [![star](https://gitee.com/dromara/hmily/badge/star.svg?theme=gray)](https://gitee.com/dromara/hmily)  \n      Distributed transaction solutions\n    - [`dromara/gobrs-async` ![](https://img.shields.io/github/stars/dromara/gobrs-async.svg?style=social&label=Star)](https://github.com/dromara/gobrs-async) [![star](https://gitee.com/dromara/gobrs-async/badge/star.svg?theme=gray)](https://gitee.com/dromara/gobrs-async)  \n      一款功能强大、配置灵活、带有全链路异常回调、内存优化、异常状态管理于一身的高性能异步编排框架。为企业提供在复杂应用场景下动态任务编排的能力。 针对于复杂场景下，异步线程复杂性、任务依赖性、异常状态难控制性\n    - [`dromara/dynamic-tp` ![](https://img.shields.io/github/stars/dromara/dynamic-tp.svg?style=social&label=Star)](https://github.com/dromara/dynamic-tp) [![star](https://gitee.com/dromara/dynamic-tp/badge/star.svg?theme=gray)](https://gitee.com/dromara/dynamic-tp)  \n      Lightweight dynamic threadpool, with monitoring and alarming functions, base on popular config centers (already support Nacos、Apollo、Zookeeper, can be customized through SPI)\n    - [`opengoofy/hippo4j` ![](https://img.shields.io/github/stars/opengoofy/hippo4j.svg?style=social&label=Star)](https://github.com/opengoofy/hippo4j) [![star](https://gitee.com/magestack/hippo4j/badge/star.svg?theme=gray)](https://gitee.com/magestack/hippo4j)  \n      动态线程池框架，附带监控报警功能，支持 JDK、Tomcat、Jetty、Undertow 线程池；Apache RocketMQ、Dubbo、RabbitMQ、Hystrix 消费等线程池。内置两种使用模式：轻量级依赖配置中心以及无中间件依赖版本\n    - [`siaorg/sia-gateway` ![](https://img.shields.io/github/stars/siaorg/sia-gateway.svg?style=social&label=Star)](https://github.com/siaorg/sia-gateway)  \n      microservice route gateway(zuul-plus)\n    - [`huaweicloud/Sermant` ![](https://img.shields.io/github/stars/huaweicloud/Sermant.svg?style=social&label=Star)](https://github.com/huaweicloud/Sermant)  \n      Sermant, a proxyless service mesh solution based on Javaagent\n    - [`ZTO-Express/zms` ![](https://img.shields.io/github/stars/ZTO-Express/zms.svg?style=social&label=Star)](https://github.com/ZTO-Express/zms) [![star](https://gitee.com/zto_express/zms/badge/star.svg?theme=gray)](https://gitee.com/zto_express/zms)  \n      ZTO Message Service\n    - [`lxchinesszz/tomato` ![](https://img.shields.io/github/stars/lxchinesszz/tomato.svg?style=social&label=Star)](https://github.com/lxchinesszz/tomato)  \n      一款专门为SpringBoot项目设计的幂等组件\n    - [`ytyht226/taskflow` ![](https://img.shields.io/github/stars/ytyht226/taskflow.svg?style=social&label=Star)](https://github.com/ytyht226/taskflow)  \n      一款轻量、简单易用、可灵活扩展的通用任务编排框架，基于有向无环图(DAG)的方式实现，框架提供了组件复用、同步/异步编排、条件判断、分支选择等能力，可以根据不同的业务场景对任意的业务流程进行编排\n    - [`foldright/cffu` ![](https://img.shields.io/github/stars/foldright/cffu.svg?style=social&label=star)](https://github.com/foldright/cffu)  \n      🦝 Java CompletableFuture Fu, aka. CF-Fu, pronounced \"Shifu\"; include best practice/traps guide and a tiny sidekick library to improve user experience and reduce misuse.\n    - [`tuya/connector` ![](https://img.shields.io/github/stars/tuya/connector.svg?style=social&label=Star)](https://github.com/tuya/connector)  \n      The connector framework maps cloud APIs to local APIs based on simple configurations and flexible extension mechanisms\n- **Middleware/Data Processing**\n    - [`apache/shardingsphere` ![](https://img.shields.io/github/stars/apache/shardingsphere.svg?style=social&label=Star)](https://github.com/apache/shardingsphere) [![star](https://gitee.com/Sharding-Sphere/sharding-sphere/badge/star.svg?theme=gray)](https://gitee.com/Sharding-Sphere/sharding-sphere)  \n      Ecosystem to transform any database into a distributed database system, and enhance it with sharding, elastic scaling, encryption features & more\n    - [`apache/kylin` ![](https://img.shields.io/github/stars/apache/kylin.svg?style=social&label=Star)](https://github.com/apache/kylin)  \n      A unified and powerful OLAP platform for Hadoop and Cloud.\n    - [`mybatis-flex/mybatis-flex` ![](https://img.shields.io/github/stars/mybatis-flex/mybatis-flex.svg?style=social&label=Star)](https://github.com/mybatis-flex/mybatis-flex) [![star](https://gitee.com/mybatis-flex/mybatis-flex/badge/star.svg?theme=gray)](https://gitee.com/mybatis-flex/mybatis-flex)  \n      mybatis-flex is an elegant Mybatis Enhancement Framework\n    - [`basicai/xtreme1` ![](https://img.shields.io/github/stars/basicai/xtreme1.svg?style=social&label=Star)](https://github.com/basicai/xtreme1)  \n      The Next GEN Platform for Multisensory Training Data. #3D annotation, lidar-camera annotation and image annotation tools are supported\n    - [`oceanbase/odc` ![](https://img.shields.io/github/stars/oceanbase/odc.svg?style=social&label=Star)](https://github.com/oceanbase/odc)  \n      An open-source, enterprise-grade database tool for collaborative development\n    - [`sagframe/sagacity-sqltoy` ![](https://img.shields.io/github/stars/sagframe/sagacity-sqltoy.svg?style=social&label=Star)](https://github.com/sagframe/sagacity-sqltoy)  \n      Java真正智慧的ORM框架\n    - [`dromara/stream-query` ![](https://img.shields.io/github/stars/dromara/stream-query.svg?style=social&label=Star)](https://github.com/dromara/stream-query) [![star](https://gitee.com/dromara/stream-query/badge/star.svg?theme=gray)](https://gitee.com/dromara/stream-query)  \n      允许完全摆脱Mapper的mybatis-plus体验；可以使用类似“工具类”这样的静态函数进行数据库操作\n    - [`luo-zhan/Transformer` ![](https://img.shields.io/github/stars/luo-zhan/Transformer.svg?style=social&label=Star)](https://github.com/luo-zhan/Transformer)  \n      Transformer可能是最简单，但最强大的字段转换插件，一个注解搞定任意转换，让开发变得更加丝滑\n    - [`SimonAlong/Neo` ![](https://img.shields.io/github/stars/SimonAlong/Neo.svg?style=social&label=Star)](https://github.com/SimonAlong/Neo)  \n      Orm框架：基于ActiveRecord思想开发的至简化且功能很全的Orm框架\n    - [`ppdaicorp/das` ![](https://img.shields.io/github/stars/ppdaicorp/das.svg?style=social&label=Star)](https://github.com/ppdaicorp/das)  \n      数据库访问框架(data access service)，包括数据库控制台das console，数据库客户端das client和数据库服务端das server三部分\n    - [`didi/ALITA` ![](https://img.shields.io/github/stars/didi/ALITA.svg?style=social&label=Star)](https://github.com/didi/ALITA)  \n      a layer-based data analysis tool\n    - [`didi/daedalus` ![](https://img.shields.io/github/stars/didi/daedalus.svg?style=social&label=Star)](https://github.com/didi/daedalus)  \n      实现快速创建数据构造流程，数据构造流程的可视化、线上化、持久化、标准化\n- **Middleware/Flow engine**\n    - [`dromara/liteflow` ![](https://img.shields.io/github/stars/dromara/liteflow.svg?style=social&label=Star)](https://github.com/dromara/liteflow) [![star](https://gitee.com/dromara/liteFlow/badge/star.svg?theme=gray)](https://gitee.com/dromara/liteFlow)  \n      a lightweight and practical micro-process framework\n    - [`alibaba/bulbasaur` ![](https://img.shields.io/github/stars/alibaba/bulbasaur.svg?style=social&label=Star)](https://github.com/alibaba/bulbasaur)  \n      A pluggable, scalable process engine\n- **Middleware/Log**\n    - [`dromara/TLog` ![](https://img.shields.io/github/stars/dromara/TLog.svg?style=social&label=Star)](https://github.com/dromara/TLog) [![star](https://gitee.com/dromara/TLog/badge/star.svg?theme=gray)](https://gitee.com/dromara/TLog)  \n      Lightweight distributed log label tracking framework\n    - [`fayechenlong/plumelog` ![](https://img.shields.io/github/stars/fayechenlong/plumelog.svg?style=social&label=Star)](https://github.com/fayechenlong/plumelog) [![star](https://gitee.com/plumeorg/plumelog/badge/star.svg?theme=gray)](https://gitee.com/plumeorg/plumelog)  \n      一个java分布式日志组件，支持百亿级别\n    - [`minbox-projects/minbox-logging` ![](https://img.shields.io/github/stars/minbox-projects/minbox-logging.svg?style=social&label=Star)](https://github.com/minbox-projects/minbox-logging) [![star](https://gitee.com/minbox-projects/minbox-logging/badge/star.svg?theme=gray)](https://gitee.com/minbox-projects/minbox-logging)  \n      分布式零侵入式、链路式请求日志分析框架。提供Admin端点进行采集日志、分析日志、日志告警通知、服务性能分析等。通过Admin Ui可查看实时链路日志信息、在线业务服务列表\n        - [`minbox-projects/api-boot` ![](https://img.shields.io/github/stars/minbox-projects/api-boot.svg?style=social&label=Star)](https://github.com/minbox-projects/api-boot) [![star](https://gitee.com/minbox-projects/api-boot/badge/star.svg?theme=gray)](https://gitee.com/minbox-projects/api-boot)  \n          为接口服务而生的，基于“ SpringBoot”完成扩展和自动配置，内部封装了一系列的开箱即用Starters\n    - [`ofpay/logback-mdc-ttl` ![](https://img.shields.io/github/stars/ofpay/logback-mdc-ttl.svg?style=social&label=Star)](https://github.com/ofpay/logback-mdc-ttl)  \n      logback扩展，集成transmittable-thread-local支持跨线程池的mdc跟踪\n    - [`oldratlee/log4j2-ttl-thread-context-map` ![](https://img.shields.io/github/stars/oldratlee/log4j2-ttl-thread-context-map.svg?style=social&label=Star)](https://github.com/oldratlee/log4j2-ttl-thread-context-map)  \n      Log4j2 TTL ThreadContextMap, Log4j2 extension integrated TransmittableThreadLocal to MDC\n- **Middleware/Bytecode**\n    - [`ymm-tech/easy-byte-coder` ![](https://img.shields.io/github/stars/ymm-tech/easy-byte-coder.svg?style=social&label=Star)](https://github.com/ymm-tech/easy-byte-coder)  \n      Easy-byte-coder is a non-invasive bytecode injection framework based on JVM\n- **Business service or platform application**\n    - [`OpenBankProject/OBP-API` ![](https://img.shields.io/github/stars/OpenBankProject/OBP-API.svg?style=social&label=Star)](https://github.com/OpenBankProject/OBP-API)  \n      An open source RESTful API platform for banks that supports Open Banking, XS2A and PSD2 through access to accounts, transactions, counterparties, payments, entitlements and metadata - plus a host of internal banking and management APIs\n    - [`gz-yami/mall4j` ![](https://img.shields.io/github/stars/gz-yami/mall4j.svg?style=social&label=Star)](https://github.com/gz-yami/mall4j) [![star](https://gitee.com/gz-yami/mall4j/badge/star.svg?theme=gray)](https://gitee.com/gz-yami/mall4j)  \n      电商商城 java电商商城系统 uniapp商城 多用户商城\n    - [`Joolun/JooLun-wx` ![](https://img.shields.io/github/stars/Joolun/JooLun-wx.svg?style=social&label=Star)](https://github.com/Joolun/JooLun-wx) [![star](https://gitee.com/joolun/JooLun-wx/badge/star.svg?theme=gray)](https://gitee.com/joolun/JooLun-wx)  \n      JooLun微信商城\n    - [`HummerRisk/HummerRisk` ![](https://img.shields.io/github/stars/HummerRisk/HummerRisk.svg?style=social&label=Star)](https://github.com/HummerRisk/HummerRisk)  \n      云原生安全平台，包括混合云安全治理和容器云安全检测\n    - [`XiaoMi/mone` ![](https://img.shields.io/github/stars/XiaoMi/mone.svg?style=social&label=Star)](https://github.com/XiaoMi/mone)  \n      `Mone`以微服务为核心的一站式企业协同研发平台。支持公共云、专有云和混合云多种部署形态；提供从“项目创建->开发->部署->治理->应用观测”端到端的研发全流程服务；通过云原生新技术和研发新模式，打造“双敏”，敏捷研发和敏捷组织，保障小米-中国区高复杂业务、大规模团队的敏捷研发协同，实现多倍效能提升。\n    - [`yangzongzhuan/RuoYi-Cloud` ![](https://img.shields.io/github/stars/yangzongzhuan/RuoYi-Cloud.svg?style=social&label=Star)](https://github.com/yangzongzhuan/RuoYi-Cloud) [![star](https://gitee.com/y_project/RuoYi-Cloud/badge/star.svg?theme=gray)](https://gitee.com/y_project/RuoYi-Cloud)  \n      基于Spring Boot、Spring Cloud & Alibaba的分布式微服务架构权限管理系统\n    - [`somowhere/albedo` ![](https://img.shields.io/github/stars/somowhere/albedo.svg?style=social&label=Star)](https://github.com/somowhere/albedo) [![star](https://gitee.com/somowhere/albedo/badge/star.svg?theme=gray)](https://gitee.com/somowhere/albedo)  \n      基于 Spring Boot 、Spring Security、Mybatis 的RBAC权限管理系统\n    - [`qwdigital/LinkWechat` ![](https://img.shields.io/github/stars/qwdigital/LinkWechat.svg?style=social&label=Star)](https://github.com/qwdigital/LinkWechat) [![star](https://gitee.com/LinkWeChat/link-wechat/badge/star.svg?theme=gray)](https://gitee.com/LinkWeChat/link-wechat)  \n      基于企业微信的开源 SCRM 系统，采用主流的 Java 微服务架构，是企业私域流量管理与营销的综合解决方案，助力企业提高客户运营效率，强化营销能力，拓展盈利空间\n    - [`fushengqian/fuint` ![](https://img.shields.io/github/stars/fushengqian/fuint.svg?style=social&label=Star)](https://github.com/fushengqian/fuint) [![star](https://gitee.com/fuint/fuint-uniapp/badge/star.svg?theme=gray)](https://gitee.com/fuint/fuint-uniapp)  \n      fuint会员营销系统是一套开源的实体店铺会员管理和营销系统\n    - [`hiparker/opsli-boot` ![](https://img.shields.io/github/stars/hiparker/opsli-boot.svg?style=social&label=Star)](https://github.com/hiparker/opsli-boot) [![star](https://gitee.com/hiparker/opsli-boot/badge/star.svg?theme=gray)](https://gitee.com/hiparker/opsli-boot)  \n      一款的低代码快速平台，零代码开发，致力于做更简洁的后台管理系统\n    - [`topiam/eiam` ![](https://img.shields.io/github/stars/topiam/eiam.svg?style=social&label=Star)](https://github.com/topiam/eiam) [![star](https://gitee.com/topiam/eiam/badge/star.svg?theme=gray)](https://gitee.com/topiam/eiam)  \n      EIAM（Employee Identity and Access Management Program）企业级开源IAM平台，实现用户全生命周期的管理、统一认证和单点登录、为数字身份安全赋能\n    - [`Newspiral/newspiral-business` ![](https://img.shields.io/github/stars/Newspiral/newspiral-business.svg?style=social&label=Star)](https://github.com/Newspiral/newspiral-business)  \n      联盟区块链底层平台\n- **Tool product**\n    - [`ssssssss-team/spider-flow` ![](https://img.shields.io/github/stars/ssssssss-team/spider-flow.svg?style=social&label=Star)](https://github.com/ssssssss-team/spider-flow) [![star](https://gitee.com/ssssssss-team/spider-flow/badge/star.svg?theme=gray)](https://gitee.com/ssssssss-team/spider-flow)  \n      新一代爬虫平台，以图形化方式定义爬虫流程，不写代码即可完成爬虫\n    - [`nekolr/slime` ![](https://img.shields.io/github/stars/nekolr/slime.svg?style=social&label=Star)](https://github.com/nekolr/slime)  \n      🍰 一个可视化的爬虫平台\n    - [`Jackson0714/PassJava-Platform` ![](https://img.shields.io/github/stars/Jackson0714/PassJava-Platform.svg?style=social&label=Star)](https://github.com/Jackson0714/PassJava-Platform)  \n      一款面试刷题的 Spring Cloud 开源系统。零碎时间利用小程序查看常见面试题，夯实Java基础。 该项目可以教会你如何搭建SpringBoot项目，Spring Cloud项目。 采用流行的技术，如 SpringBoot、MyBatis、Redis、 MySql、 MongoDB、 RabbitMQ、Elasticsearch，采用Docker容器化部署\n    - [`martin-chips/DimpleBlog` ![](https://img.shields.io/github/stars/martin-chips/DimpleBlog.svg?style=social&label=Star)](https://github.com/martin-chips/DimpleBlog)  \n      基于`SpringBoot2`搭建的个人博客系统\n    - [`zjcscut/octopus` ![](https://img.shields.io/github/stars/zjcscut/octopus.svg?style=social&label=Star)](https://github.com/zjcscut/octopus)  \n      长链接压缩为短链接的服务\n    - [`xggz/mqr` ![](https://img.shields.io/github/stars/xggz/mqr.svg?style=social&label=Star)](https://github.com/xggz/mqr) [![star](https://gitee.com/mlyai/mqr/badge/star.svg?theme=gray)](https://gitee.com/mlyai/mqr)  \n      茉莉QQ机器人（简称MQR），采用mirai的Android协议实现的QQ机器人服务，通过web控制机器人的启停和配置\n- **Test solution or tool**\n    - [`alibaba/jvm-sandbox-repeater` ![](https://img.shields.io/github/stars/alibaba/jvm-sandbox-repeater.svg?style=social&label=Star)](https://github.com/alibaba/jvm-sandbox-repeater)  \n      A Java server-side recording and playback solution based on JVM-Sandbox, 录制/回放通用解决方案\n    - [`vivo/MoonBox` ![](https://img.shields.io/github/stars/vivo/MoonBox.svg?style=social&label=Star)](https://github.com/vivo/MoonBox)  \n      Moonbox（月光宝盒）是JVM-Sandbox生态下的，基于jvm-sandbox-repeater重新开发的，一款流量回放平台产品。相较于jvm-sandbox-repeater，Moonbox功能更加丰富、数据可靠性更高，同时便于快速线上部署和使用\n    - [`alibaba/testable-mock` ![](https://img.shields.io/github/stars/alibaba/testable-mock.svg?style=social&label=Star)](https://github.com/alibaba/testable-mock)  \n      换种思路写Mock，让单元测试更简单\n    - [`shulieTech/Takin` ![](https://img.shields.io/github/stars/shulieTech/Takin.svg?style=social&label=Star)](https://github.com/shulieTech/Takin)  \n      measure online environmental performance test for full-links, Especially for microservices\n        - [`shulieTech/LinkAgent` ![](https://img.shields.io/github/stars/shulieTech/LinkAgent.svg?style=social&label=Star)](https://github.com/shulieTech/LinkAgent)  \n          a Java-based open-source agent designed to collect data and control Functions for Java applications through JVM bytecode, without modifying applications codes\n    - [`alibaba/virtual-environment` ![](https://img.shields.io/github/stars/alibaba/virtual-environment.svg?style=social&label=Star)](https://github.com/alibaba/virtual-environment)  \n      Route isolation with service sharing, 阿里测试环境服务隔离和联调机制的`Kubernetes`版实现\n- **`Spring Cloud`/`Spring Boot` microservices framework solution or scaffold**\n    - [`YunaiV/ruoyi-vue-pro` ![](https://img.shields.io/github/stars/YunaiV/ruoyi-vue-pro.svg?style=social&label=Star)](https://github.com/YunaiV/ruoyi-vue-pro)  [![star](https://gitee.com/zhijiantianya/ruoyi-vue-pro/badge/star.svg?theme=gray)](https://gitee.com/zhijiantianya/ruoyi-vue-pro)  \n      一套全部开源的企业级的快速开发平台。基于 Spring Boot + MyBatis Plus + Vue & Element 实现的后台管理系统 + 微信小程序，支持 RBAC 动态权限、数据权限、SaaS 多租户、Activiti + Flowable 工作流、三方登录、支付、短信、商城等功能\n    - [`YunaiV/yudao-cloud` ![](https://img.shields.io/github/stars/YunaiV/yudao-cloud.svg?style=social&label=Star)](https://github.com/YunaiV/yudao-cloud)  [![star](https://gitee.com/zhijiantianya/yudao-cloud/badge/star.svg?theme=gray)](https://gitee.com/zhijiantianya/yudao-cloud)  \n      RuoYi-Vue 全新 Cloud 版本，优化重构所有功能。基于 Spring Cloud Alibaba + MyBatis Plus + Vue & Element 实现的后台管理系统 + 用户小程序，支持 RBAC 动态权限、多租户、数据权限、工作流、三方登录、支付、短信、商城等功能\n    - [`zlt2000/microservices-platform` ![](https://img.shields.io/github/stars/zlt2000/microservices-platform.svg?style=social&label=Star)](https://github.com/zlt2000/microservices-platform) [![star](https://gitee.com/zlt2000/microservices-platform/badge/star.svg?theme=gray)](https://gitee.com/zlt2000/microservices-platform)  \n      基于SpringBoot2.x、SpringCloud和SpringCloudAlibaba并采用前后端分离的企业级微服务多租户系统架构\n    - [`dromara/lamp-cloud` ![](https://img.shields.io/github/stars/dromara/lamp-cloud.svg?style=social&label=Star)](https://github.com/zuihou/lamp-cloud) [![star](https://gitee.com/dromara/lamp-cloud/badge/star.svg?theme=gray)](https://gitee.com/dromara/lamp-cloud)  \n      基于Jdk11 + SpringCloud + SpringBoot 的微服务快速开发平台，其中的可配置的SaaS功能尤其闪耀， 具备RBAC功能、网关统一鉴权、Xss防跨站攻击、自动代码生成、多种存储系统、分布式事务、分布式定时任务等多个模块，支持多业务系统并行开发， 支持多服务并行开发，可以作为后端服务的开发脚手架\n        - [`zuihou/lamp-util` ![](https://img.shields.io/github/stars/zuihou/lamp-util.svg?style=social&label=Star)](https://github.com/zuihou/lamp-util) [![star](https://gitee.com/zuihou111/lamp-util/badge/star.svg?theme=gray)](https://gitee.com/zuihou111/lamp-util)  \n          打造一套兼顾 SpringBoot 和 SpringCloud 项目的公共工具类\n    - [`matevip/matecloud` ![](https://img.shields.io/github/stars/matevip/matecloud.svg?style=social&label=Star)](https://github.com/matevip/matecloud) [![star](https://gitee.com/matevip/matecloud/badge/star.svg?theme=gray)](https://gitee.com/matevip/matecloud)  \n      一款基于Spring Cloud Alibaba的微服务架构\n    - [`gavenwangcn/vole` ![](https://img.shields.io/github/stars/gavenwangcn/vole.svg?style=social&label=Star)](https://github.com/gavenwangcn/vole)  \n      SpringCloud Micro service business framework\n    - [`liuweijw/fw-cloud-framework` ![](https://img.shields.io/github/stars/liuweijw/fw-cloud-framework.svg?style=social&label=Star)](https://github.com/liuweijw/fw-cloud-framework) [![star](https://gitee.com/liuweijw/fw-cloud-framework/badge/star.svg?theme=gray)](https://gitee.com/liuweijw/fw-cloud-framework)  \n      基于springcloud全家桶开发分布式框架（支持oauth2认证授权、SSO登录、统一下单、微信公众号服务、Shardingdbc分库分表、常见服务监控、链路监控、异步日志、redis缓存等功能），实现基于Vue全家桶等前后端分离项目工程\n    - [`liuht777/Taroco` ![](https://img.shields.io/github/stars/liuht777/Taroco.svg?style=social&label=Star)](https://github.com/liuht777/Taroco)  \n      整合Nacos、Spring Cloud Alibaba，提供了一系列starter组件， 同时提供服务治理、服务监控、OAuth2权限认证，支持服务降级/熔断、服务权重\n    - [`mingyang66/spring-parent` ![](https://img.shields.io/github/stars/mingyang66/spring-parent.svg?style=social&label=Star)](https://github.com/mingyang66/spring-parent)  \n      数据库多数据源、Redis多数据源、日志组件、全链路日志追踪、埋点扩展点、Netty、微服务、开发基础框架支持、异常统一处理、返回值、跨域、API路由、监控等\n    - [`budwk/budwk` ![](https://img.shields.io/github/stars/budwk/budwk.svg?style=social&label=Star)](https://github.com/budwk/budwk) [![star](https://gitee.com/budwk/budwk/badge/star.svg?theme=gray)](https://gitee.com/budwk/budwk)  \n      `BudWk` 原名 [`NutzWk` ![](https://img.shields.io/github/stars/Wizzercn/NutzWk.svg?style=social&label=Star)](https://github.com/Wizzercn/NutzWk) [![star](https://gitee.com/wizzer/NutzWk/badge/star.svg?theme=gray)](https://gitee.com/wizzer/NutzWk)，基于国产框架 nutz 及 nutzboot 开发的开源Web基础项目，集权限体系、系统参数、数据字典、站内消息、定时任务、CMS、微信等最常用功能，不庞杂、不面面俱到，使其具有上手容易、开发便捷、扩展灵活等特性，特别适合各类大中小型定制化项目需求\n    - [`yinjihuan/spring-cloud` ![](https://img.shields.io/github/stars/yinjihuan/spring-cloud.svg?style=social&label=Star)](https://github.com/yinjihuan/spring-cloud)  \n      《Spring Cloud微服务-全栈技术与案例解析》和《Spring Cloud微服务 入门 实战与进阶》配套源码\n    - [`louyanfeng25/ddd-demo` ![](https://img.shields.io/github/stars/louyanfeng25/ddd-demo.svg?style=social&label=Star)](https://github.com/louyanfeng25/ddd-demo)  \n      《深入浅出DDD》讲解的演示项目，为了能够更好的理解Demo中的分层与逻辑处理，我强烈建议你配合小册来深入了解DDD\n    - [`nageoffer/12306` ![](https://img.shields.io/github/stars/nageoffer/12306.svg?style=social&label=Star)](https://github.com/nageoffer/12306)  \n      12306 铁路购票服务是与大家生活和出行相关的关键系统，包括会员、购票、订单、支付和网关等服务。\n\nmore open-source projects used `TTL`, see [![user repos](https://badgen.net/github/dependents-repo/alibaba/transmittable-thread-local?label=user%20repos)](https://github.com/alibaba/transmittable-thread-local/network/dependents)\n\n# 👷 Contributors\n\n- Jerry Lee \\<oldratlee at gmail dot com> [@oldratlee](https://github.com/oldratlee)\n- Yang Fang \\<snoop.fy at gmail dot com> [@driventokill](https://github.com/driventokill)\n- Zava Xu \\<zava.kid at gmail dot com> [@zavakid](https://github.com/zavakid)\n- wuwen \\<wuwen.55 at aliyun dot com> [@wuwen5](https://github.com/wuwen5)\n- rybalkinsd \\<yan.brikl at gmail dot com> [@rybalkinsd](https://github.com/rybalkinsd)\n- David Dai \\<351450944 at qq dot com> [@LNAmp](https://github.com/LNAmp)\n- Your name here :-)\n\n[![GitHub Contributors](https://contrib.rocks/image?repo=alibaba/transmittable-thread-local)](https://github.com/alibaba/transmittable-thread-local/graphs/contributors)\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 56.7216796875,
          "content": "# <div align=\"center\"><a href=\"#dummy\"><img src=\"https://user-images.githubusercontent.com/1063891/233595946-4493119e-4e0c-4081-a382-0a20731c578e.png\" alt=\"📌 TransmittableThreadLocal(TTL)\"></a></div>\n\n> [!IMPORTANT]\n> 🚧 这个分支是`TransmittableThreadLocal(TTL) v3`，在开发中还没有发布。  \n> `v3`的版本说明、工作项列表及其进展，参见 [issue 432](https://github.com/alibaba/transmittable-thread-local/issues/432)。\n>\n> 👉 目前使用中的稳定发布版本`v2.x`在 [**分支`2.x`**](https://github.com/alibaba/transmittable-thread-local/tree/2.x)上。\n\n<p align=\"center\">\n<a href=\"https://github.com/alibaba/transmittable-thread-local/actions/workflows/ci.yaml\"><img src=\"https://img.shields.io/github/actions/workflow/status/alibaba/transmittable-thread-local/ci.yaml?branch=master&logo=github&logoColor=white&label=fast ci\" alt=\"Fast CI\"></a>\n<a href=\"https://github.com/alibaba/transmittable-thread-local/actions/workflows/strong_ci.yaml\"><img src=\"https://img.shields.io/github/actions/workflow/status/alibaba/transmittable-thread-local/strong_ci.yaml?branch=master&logo=github&logoColor=white&label=strong ci\" alt=\"Strong CI\"></a>\n<a href=\"https://app.codecov.io/gh/alibaba/transmittable-thread-local/tree/master\"><img src=\"https://img.shields.io/codecov/c/github/alibaba/transmittable-thread-local/master?logo=codecov&logoColor=white\" alt=\"Coverage Status\"></a>\n<a href=\"https://openjdk.java.net/\"><img src=\"https://img.shields.io/badge/Java-6+-339933?logo=openjdk&logoColor=white\" alt=\"JDK support\"></a>\n<a href=\"https://www.apache.org/licenses/LICENSE-2.0.html\"><img src=\"https://img.shields.io/github/license/alibaba/transmittable-thread-local?color=4D7A97&logo=apache\" alt=\"License\"></a>\n<a href=\"https://alibaba.github.io/transmittable-thread-local/apidocs/\"><img src=\"https://img.shields.io/github/release/alibaba/transmittable-thread-local?label=javadoc&color=339933&logo=read-the-docs&logoColor=white\" alt=\"Javadocs\"></a>\n<a href=\"https://repo1.maven.org/maven2/com/alibaba/transmittable-thread-local/maven-metadata.xml\"><img src=\"https://img.shields.io/maven-central/v/com.alibaba/transmittable-thread-local?logo=apache-maven&logoColor=white\" alt=\"Maven Central\"></a>\n<a href=\"https://github.com/alibaba/transmittable-thread-local/releases\"><img src=\"https://img.shields.io/github/release/alibaba/transmittable-thread-local\" alt=\"GitHub release\"></a>\n<a href=\"https://github.com/alibaba/transmittable-thread-local/stargazers\"><img src=\"https://img.shields.io/github/stars/alibaba/transmittable-thread-local?style=flat\" alt=\"GitHub Stars\"></a>\n<a href=\"https://github.com/alibaba/transmittable-thread-local/fork\"><img src=\"https://img.shields.io/github/forks/alibaba/transmittable-thread-local?style=flat\" alt=\"GitHub Forks\"></a>\n<a href=\"https://github.com/alibaba/transmittable-thread-local/network/dependents\"><img src=\"https://badgen.net/github/dependents-repo/alibaba/transmittable-thread-local?label=user%20repos\" alt=\"user repos\"></a>\n<a href=\"https://github.com/alibaba/transmittable-thread-local/issues\"><img src=\"https://img.shields.io/github/issues/alibaba/transmittable-thread-local\" alt=\"GitHub issues\"></a>\n<a href=\"https://github.com/alibaba/transmittable-thread-local/graphs/contributors\"><img src=\"https://img.shields.io/github/contributors/alibaba/transmittable-thread-local\" alt=\"GitHub Contributors\"></a>\n<a href=\"https://github.com/alibaba/transmittable-thread-local\"><img src=\"https://img.shields.io/github/repo-size/alibaba/transmittable-thread-local\" alt=\"GitHub repo size\"></a>\n<a href=\"https://gitpod.io/#https://github.com/alibaba/transmittable-thread-local\"><img src=\"https://img.shields.io/badge/Gitpod-ready to code-339933?label=gitpod&logo=gitpod&logoColor=white\" alt=\"gitpod: Ready to Code\"></a>\n</p>\n\n[📖 English Documentation](README-EN.md) | 📖 中文文档\n\n----------------------------------------\n\n<!-- START doctoc generated TOC please keep comment here to allow auto update -->\n<!-- DON'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE -->\n\n- [🔧 功能](#-%E5%8A%9F%E8%83%BD)\n- [🎨 需求场景](#-%E9%9C%80%E6%B1%82%E5%9C%BA%E6%99%AF)\n- [👥 User Guide](#-user-guide)\n    - [1. 简单使用](#1-%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8)\n    - [2. 保证线程池中传递值](#2-%E4%BF%9D%E8%AF%81%E7%BA%BF%E7%A8%8B%E6%B1%A0%E4%B8%AD%E4%BC%A0%E9%80%92%E5%80%BC)\n        - [2.1 修饰`Runnable`和`Callable`](#21-%E4%BF%AE%E9%A5%B0runnable%E5%92%8Ccallable)\n            - [整个过程的完整时序图](#%E6%95%B4%E4%B8%AA%E8%BF%87%E7%A8%8B%E7%9A%84%E5%AE%8C%E6%95%B4%E6%97%B6%E5%BA%8F%E5%9B%BE)\n        - [2.2 修饰线程池](#22-%E4%BF%AE%E9%A5%B0%E7%BA%BF%E7%A8%8B%E6%B1%A0)\n        - [2.3 使用`Java Agent`来修饰`JDK`线程池实现类](#23-%E4%BD%BF%E7%94%A8java-agent%E6%9D%A5%E4%BF%AE%E9%A5%B0jdk%E7%BA%BF%E7%A8%8B%E6%B1%A0%E5%AE%9E%E7%8E%B0%E7%B1%BB)\n            - [`Java Agent`的启动参数配置](#java-agent%E7%9A%84%E5%90%AF%E5%8A%A8%E5%8F%82%E6%95%B0%E9%85%8D%E7%BD%AE)\n- [🔌 Java API Docs](#-java-api-docs)\n- [🍪 Maven依赖](#-maven%E4%BE%9D%E8%B5%96)\n- [🔨 关于编译构建](#-%E5%85%B3%E4%BA%8E%E7%BC%96%E8%AF%91%E6%9E%84%E5%BB%BA)\n- [❓ FAQ](#-faq)\n- [✨ 使用`TTL`的好处与必要性](#-%E4%BD%BF%E7%94%A8ttl%E7%9A%84%E5%A5%BD%E5%A4%84%E4%B8%8E%E5%BF%85%E8%A6%81%E6%80%A7)\n- [🗿 更多文档](#-%E6%9B%B4%E5%A4%9A%E6%96%87%E6%A1%A3)\n- [📚 相关资料](#-%E7%9B%B8%E5%85%B3%E8%B5%84%E6%96%99)\n    - [JDK Core Classes](#jdk-core-classes)\n- [💗 Who Used](#-who-used)\n- [👷 Contributors](#-contributors)\n\n<!-- END doctoc generated TOC please keep comment here to allow auto update -->\n\n----------------------------------------\n\n# 🔧 功能\n\n👉 `TransmittableThreadLocal`(`TTL`)：在使用线程池等会池化复用线程的执行组件情况下，提供`ThreadLocal`值的传递功能，解决异步执行时上下文传递的问题。一个`Java`标准库本应为框架/中间件设施开发提供的标配能力，本库功能聚焦 & 0依赖，支持`Java 6~21`。\n\n`JDK`的[`InheritableThreadLocal`](https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/InheritableThreadLocal.html)类可以完成父线程到子线程的值传递。但对于使用线程池等会池化复用线程的执行组件的情况，线程由线程池创建好，并且线程是池化起来反复使用的；这时父子线程关系的`ThreadLocal`值传递已经没有意义，应用需要的实际上是把 **任务提交给线程池时**的`ThreadLocal`值传递到 **任务执行时**。\n\n本库提供的[`TransmittableThreadLocal`](ttl-core/src/main/java/com/alibaba/ttl3/TransmittableThreadLocal.java)类继承并加强`InheritableThreadLocal`类，解决上述的问题，使用详见 [User Guide](#-user-guide)。\n\n\n整个`TransmittableThreadLocal`库的核心功能（用户`API`、线程池`ExecutorService`/`ForkJoinPool`/`TimerTask`及其线程工厂的`Wrapper`；开发者`API`、框架/中间件的集成`API`），只有 **_~1000 `SLOC`代码行_**，非常精小。\n\n欢迎 👏\n\n- 建议和提问，[提交 Issue](https://github.com/alibaba/transmittable-thread-local/issues/new)\n- 贡献和改进，[Fork 后提通过 Pull Request 贡献代码](https://github.com/alibaba/transmittable-thread-local/fork)\n\n> [!NOTE]\n> 从`TTL v2.13+`开始，升级到`Java 8`。🚀  \n> 如果需要`Java 6`的支持，使用版本`2.12.x` <a href=\"https://repo1.maven.org/maven2/com/alibaba/transmittable-thread-local/maven-metadata.xml\"><img src=\"https://img.shields.io/maven-central/v/com.alibaba/transmittable-thread-local?versionPrefix=2.12.&color=lightgrey&logo=apache-maven&logoColor=white\" alt=\"Maven Central\"></a>\n\n# 🎨 需求场景\n\n`ThreadLocal`的需求场景即`TransmittableThreadLocal`的潜在需求场景，如果你的业务需要『在使用线程池等会池化复用线程的执行组件情况下传递`ThreadLocal`值』则是`TransmittableThreadLocal`目标场景。\n\n下面是几个典型场景例子。\n\n1. 分布式跟踪系统 或 全链路压测（即链路打标）\n2. 日志收集记录系统上下文\n3. `Session`级`Cache`\n4. 应用容器或上层框架跨应用代码给下层`SDK`传递信息\n\n各个场景的展开说明参见子文档 [需求场景](docs/requirement-scenario.md)。\n\n# 👥 User Guide\n\n使用类[`TransmittableThreadLocal`](ttl-core/src/main/java/com/alibaba/ttl3/TransmittableThreadLocal.java)来保存值，并跨线程池传递。\n\n`TransmittableThreadLocal`继承`InheritableThreadLocal`，使用方式也类似。相比`InheritableThreadLocal`，添加了`protected`的`transmitteeValue()`方法，用于定制 **任务提交给线程池时** 的`ThreadLocal`值传递到 **任务执行时** 的传递方式，缺省是简单的赋值传递。\n\n注意：如果传递的对象（引用类型）会被修改，且没有做深拷贝（如直接传递引用或是浅拷贝），那么\n\n- 因为跨线程传递而不再有线程封闭，传递对象在多个线程之间是有共享的。\n- 与`JDK`的[`InheritableThreadLocal.childValue()`](https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/InheritableThreadLocal.html#childValue(T))一样，需要使用者/业务逻辑注意保证传递对象的线程安全。\n\n<blockquote>\n<details>\n\n<summary>关于<code>transmitteeValue</code>方法 的 展开说明</summary>\n<br>\n\n<p>关于构词后缀<code>er</code>与<code>ee</code>的说明：\n\n<ul>\n<li><code>transmit</code>是动词传递，<code>transmitter</code>动作的执行者/主动方，而<code>transmittee</code>动作的接收者/被动方。</li>\n<li><code>er</code>与<code>ee</code>后缀的常见词是<code>employer</code>（雇主）/<code>employee</code>（雇员）、<code>caller</code>（调用者）/<code>callee</code>（被调用者）。</li>\n</ul>\n\n</details>\n</blockquote>\n\n具体使用方式见下面的说明。\n\n## 1. 简单使用\n\n父线程给子线程传递值。\n\n示例代码：\n\n```java\nTransmittableThreadLocal<String> context = new TransmittableThreadLocal<>();\n\n// =====================================================\n\n// 在父线程中设置\ncontext.set(\"value-set-in-parent\");\n\n// =====================================================\n\n// 在子线程中可以读取，值是\"value-set-in-parent\"\nString value = context.get();\n```\n\n\\# 完整可运行的Demo代码参见[`SimpleDemo.kt`](ttl-core/src/test/java/com/alibaba/demo/ttl3/SimpleDemo.kt)。\n\n这其实是`InheritableThreadLocal`的功能，应该使用`InheritableThreadLocal`来完成。\n\n但对于使用线程池等会池化复用线程的执行组件的情况，线程由线程池创建好，并且线程是池化起来反复使用的；这时父子线程关系的`ThreadLocal`值传递已经没有意义，应用需要的实际上是把 **任务提交给线程池时**的`ThreadLocal`值传递到 **任务执行时**。\n\n解决方法参见下面的这几种用法。\n\n## 2. 保证线程池中传递值\n\n### 2.1 修饰`Runnable`和`Callable`\n\n使用[`TtlRunnable`](ttl-core/src/main/java/com/alibaba/ttl3/TtlRunnable.java)和[`TtlCallable`](ttl-core/src/main/java/com/alibaba/ttl3/TtlCallable.java)来修饰传入线程池的`Runnable`和`Callable`。\n\n示例代码：\n\n```java\nTransmittableThreadLocal<String> context = new TransmittableThreadLocal<>();\n\n// =====================================================\n\n// 在父线程中设置\ncontext.set(\"value-set-in-parent\");\n\nRunnable task = new RunnableTask();\n// 额外的处理，生成修饰了的对象ttlRunnable\nRunnable ttlRunnable = TtlRunnable.get(task);\nexecutorService.submit(ttlRunnable);\n\n// =====================================================\n\n// Task中可以读取，值是\"value-set-in-parent\"\nString value = context.get();\n```\n\n**_注意_**：  \n即使是同一个`Runnable`任务多次提交到线程池时，每次提交时都需要通过修饰操作（即`TtlRunnable.get(task)`）以抓取这次提交时的`TransmittableThreadLocal`上下文的值；即如果同一个任务下一次提交时不执行修饰而仍然使用上一次的`TtlRunnable`，则提交的任务运行时会是之前修饰操作所抓取的上下文。示例代码如下：\n\n```java\n// 第一次提交\nRunnable task = new RunnableTask();\nexecutorService.submit(TtlRunnable.get(task));\n\n// ...业务逻辑代码，\n// 并且修改了 TransmittableThreadLocal上下文 ...\ncontext.set(\"value-modified-in-parent\");\n\n// 再次提交\n// 重新执行修饰，以传递修改了的 TransmittableThreadLocal上下文\nexecutorService.submit(TtlRunnable.get(task));\n```\n\n上面演示了`Runnable`，`Callable`的处理类似\n\n```java\nTransmittableThreadLocal<String> context = new TransmittableThreadLocal<>();\n\n// =====================================================\n\n// 在父线程中设置\ncontext.set(\"value-set-in-parent\");\n\nCallable call = new CallableTask();\n// 额外的处理，生成修饰了的对象ttlCallable\nCallable ttlCallable = TtlCallable.get(call);\nexecutorService.submit(ttlCallable);\n\n// =====================================================\n\n// Call中可以读取，值是\"value-set-in-parent\"\nString value = context.get();\n```\n\n\\# 完整可运行的Demo代码参见[`TtlWrapperDemo.kt`](ttl-core/src/test/java/com/alibaba/demo/ttl3/TtlWrapperDemo.kt)。\n\n#### 整个过程的完整时序图\n\n[![时序图](https://user-images.githubusercontent.com/1063891/233595980-ef7f1f8b-36cd-45b3-b55b-45f7b3d1c94f.png)](#dummy)\n\n### 2.2 修饰线程池\n\n省去每次`Runnable`和`Callable`传入线程池时的修饰，这个逻辑可以在线程池中完成。\n\n通过工具类[`TtlExecutors`](ttl-core/src/main/java/com/alibaba/ttl3/executor/TtlExecutors.java)完成，有下面的方法：\n\n- `getTtlExecutor`：修饰接口`Executor`\n- `getTtlExecutorService`：修饰接口`ExecutorService`\n- `getTtlScheduledExecutorService`：修饰接口`ScheduledExecutorService`\n\n示例代码：\n\n```java\nExecutorService executorService = ...\n// 额外的处理，生成修饰了的对象executorService\nexecutorService = TtlExecutors.getTtlExecutorService(executorService);\n\nTransmittableThreadLocal<String> context = new TransmittableThreadLocal<>();\n\n// =====================================================\n\n// 在父线程中设置\ncontext.set(\"value-set-in-parent\");\n\nRunnable task = new RunnableTask();\nCallable call = new CallableTask();\nexecutorService.submit(task);\nexecutorService.submit(call);\n\n// =====================================================\n\n// Task或是Call中可以读取，值是\"value-set-in-parent\"\nString value = context.get();\n```\n\n\\# 完整可运行的Demo代码参见[`TtlExecutorWrapperDemo.kt`](ttl-core/src/test/java/com/alibaba/demo/ttl3/TtlExecutorWrapperDemo.kt)。\n\n### 2.3 使用`Java Agent`来修饰`JDK`线程池实现类\n\n这种方式，实现线程池的传递是透明的，业务代码中没有修饰`Runnable`或是线程池的代码。即可以做到应用代码 **无侵入**。  \n\\# 关于 **无侵入** 的更多说明参见文档[`Java Agent`方式对应用代码无侵入](docs/developer-guide.md#java-agent%E6%96%B9%E5%BC%8F%E5%AF%B9%E5%BA%94%E7%94%A8%E4%BB%A3%E7%A0%81%E6%97%A0%E4%BE%B5%E5%85%A5)。\n\n示例代码：\n\n```java\n// ## 1. 框架上层逻辑，后续流程框架调用业务 ##\nTransmittableThreadLocal<String> context = new TransmittableThreadLocal<>();\ncontext.set(\"value-set-in-parent\");\n\n// ## 2. 应用逻辑，后续流程业务调用框架下层逻辑 ##\nExecutorService executorService = Executors.newFixedThreadPool(3);\n\nRunnable task = new RunnableTask();\nCallable call = new CallableTask();\nexecutorService.submit(task);\nexecutorService.submit(call);\n\n// ## 3. 框架下层逻辑 ##\n// Task或是Call中可以读取，值是\"value-set-in-parent\"\nString value = context.get();\n```\n\nDemo参见[`AgentDemo.kt`](ttl2-compatible/src/test/java/com/alibaba/demo/ttl/agent/AgentDemo.kt)。执行工程下的脚本[`scripts/run-agent-demo.sh`](scripts/run-agent-demo.sh)即可运行Demo。\n\n目前`TTL Agent`中，修饰了的`JDK`执行器组件（即如线程池）如下：\n\n1. `java.util.concurrent.ThreadPoolExecutor` 和 `java.util.concurrent.ScheduledThreadPoolExecutor`\n    - 修饰实现代码在[`JdkExecutorTtlTransformlet.java`](ttl-agent/src/main/java/com/alibaba/ttl3/agent/transformlet/internal/JdkExecutorTtlTransformlet.java)。\n1. `java.util.concurrent.ForkJoinTask`（对应的执行器组件是`java.util.concurrent.ForkJoinPool`）\n    - 修饰实现代码在[`ForkJoinTtlTransformlet.java`](ttl-agent/src/main/java/com/alibaba/ttl3/agent/transformlet/internal/ForkJoinTtlTransformlet.java)。从版本 **_`2.5.1`_** 开始支持。\n    - **_注意_**：`Java 8`引入的[**_`CompletableFuture`_**](https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/concurrent/CompletableFuture.html)与（并行执行的）[**_`Stream`_**](https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/stream/package-summary.html)底层是通过`ForkJoinPool`来执行，所以支持`ForkJoinPool`后，`TTL`也就透明支持了`CompletableFuture`与`Stream`。🎉\n1. `java.util.TimerTask`的子类（对应的执行器组件是`java.util.Timer`）\n    - 修饰实现代码在[`TimerTaskTtlTransformlet.java`](ttl-agent/src/main/java/com/alibaba/ttl3/agent/transformlet/internal/TimerTaskTtlTransformlet.java)。从版本 **_`2.7.0`_** 开始支持。\n    - **_注意_**：从`2.11.2`版本开始缺省开启`TimerTask`的修饰（因为保证正确性是第一位，而不是最佳实践『不推荐使用`TimerTask`』:）；`2.11.1`版本及其之前的版本没有缺省开启`TimerTask`的修饰。\n    - 使用`Agent`参数`ttl.agent.enable.timer.task`开启/关闭`TimerTask`的修饰：\n        - `-javaagent:path/to/transmittable-thread-local-2.x.y.jar=ttl.agent.enable.timer.task:true`\n        - `-javaagent:path/to/transmittable-thread-local-2.x.y.jar=ttl.agent.enable.timer.task:false`\n    - 更多关于`TTL Agent`参数的配置说明详见[`TtlAgent.java`的JavaDoc](ttl-agent/src/main/java/com/alibaba/ttl3/agent/TtlAgent.java)。\n\n<blockquote>\n<details>\n\n<summary>关于<code>java.util.TimerTask</code>/<code>java.util.Timer</code> 的 展开说明</summary>\n<br>\n\n<p><code>Timer</code>是<code>JDK 1.3</code>的老类，不推荐使用<code>Timer</code>类。\n\n<p>推荐用<a href=\"https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/concurrent/ScheduledExecutorService.html\" rel=\"nofollow\"><code>ScheduledExecutorService</code></a>。<br>\n<code>ScheduledThreadPoolExecutor</code>实现更强壮，并且功能更丰富。\n如支持配置线程池的大小（<code>Timer</code>只有一个线程）；<code>Timer</code>在<code>Runnable</code>中抛出异常会中止定时执行。更多说明参见 <a href=\"https://alibaba.github.io/Alibaba-Java-Coding-Guidelines/#concurrency\" rel=\"nofollow\">10. <strong>Mandatory</strong> Run multiple TimeTask by using ScheduledExecutorService rather than Timer because Timer will kill all running threads in case of failing to catch exceptions. - Alibaba Java Coding Guidelines</a>。</p>\n\n</details>\n</blockquote>\n\n#### `Java Agent`的启动参数配置\n\n在`Java`的启动参数加上：`-javaagent:path/to/transmittable-thread-local-2.x.y.jar`。\n\n**_注意_**：\n\n- 如果修改了下载的`TTL`的`Jar`的文件名（`transmittable-thread-local-2.x.y.jar`），则需要自己手动通过`-Xbootclasspath JVM`参数来显式配置。  \n    比如修改文件名成`ttl-foo-name-changed.jar`，则还需要加上`Java`的启动参数：`-Xbootclasspath/a:path/to/ttl-foo-name-changed.jar`。\n- 或使用`v2.6.0`之前的版本（如`v2.5.1`），则也需要自己手动通过`-Xbootclasspath JVM`参数来显式配置（就像`TTL`之前的版本的做法一样）。  \n    加上`Java`的启动参数：`-Xbootclasspath/a:path/to/transmittable-thread-local-2.5.1.jar`。\n\n`Java`命令行示例如下：\n\n```bash\njava -javaagent:path/to/transmittable-thread-local-2.x.y.jar \\\n    -cp classes \\\n    com.alibaba.demo.ttl.agent.AgentDemo\n\n# 如果修改了TTL jar文件名 或 TTL版本是 2.6.0 之前\n# 则还需要显式设置 -Xbootclasspath 参数\njava -javaagent:path/to/ttl-foo-name-changed.jar \\\n    -Xbootclasspath/a:path/to/ttl-foo-name-changed.jar \\\n    -cp classes \\\n    com.alibaba.demo.ttl.agent.AgentDemo\n\njava -javaagent:path/to/transmittable-thread-local-2.5.1.jar \\\n    -Xbootclasspath/a:path/to/transmittable-thread-local-2.5.1.jar \\\n    -cp classes \\\n    com.alibaba.demo.ttl.agent.AgentDemo\n```\n\n\n\n<blockquote>\n<details>\n\n<summary>关于<code>boot class path</code> 的 展开说明</summary>\n<br>\n\n<p>因为修饰了<code>JDK</code>标准库的类，标准库由<code>bootstrap class loader</code>加载；修饰后的<code>JDK</code>类引用了<code>TTL</code>的代码，所以<code>Java Agent</code>使用方式下<code>TTL Jar</code>文件需要配置到<code>boot class path</code>上。</p>\n\n<p><code>TTL</code>从<code>v2.6.0</code>开始，加载<code>TTL Agent</code>时会自动设置<code>TTL Jar</code>到<code>boot class path</code>上。<br>\n<strong><em>注意</em></strong>：不能修改从<code>Maven</code>库下载的<code>TTL Jar</code>文件名（形如<code>transmittable-thread-local-2.x.y.jar</code>）。\n如果修改了，则需要自己手动通过<code>-Xbootclasspath JVM</code>参数来显式配置（就像<code>TTL</code>之前的版本的做法一样）。</p>\n\n<p>自动设置<code>TTL Jar</code>到<code>boot class path</code>的实现是通过指定<code>TTL Java Agent Jar</code>文件里<code>manifest</code>文件（<code>META-INF/MANIFEST.MF</code>）的<code>Boot-Class-Path</code>属性：</p>\n\n<p><code>Boot-Class-Path</code></p>\n<p>A list of paths to be searched by the bootstrap class loader. Paths represent directories or libraries (commonly referred to as JAR or zip libraries on many platforms).\nThese paths are searched by the bootstrap class loader after the platform specific mechanisms of locating a class have failed. Paths are searched in the order listed.</p>\n\n<p>更多详见</p>\n\n<ul>\n<li><a href=\"https://docs.oracle.com/en/java/javase/21/docs/api/java.instrument/java/lang/instrument/package-summary.html#package.description\" rel=\"nofollow\"><code>Java Agent</code>规范 - <code>JavaDoc</code></a></li>\n<li><a href=\"https://docs.oracle.com/en/java/javase/21/docs/specs/jar/jar.html#jar-manifest\" rel=\"nofollow\">JAR File Specification - JAR Manifest</a></li>\n<li><a href=\"https://docs.oracle.com/javase/tutorial/deployment/jar/manifestindex.html\" rel=\"nofollow\">Working with Manifest Files - The Java™ Tutorials</a></li>\n</ul>\n\n</details>\n</blockquote>\n\n# 🔌 Java API Docs\n\n当前版本的Java API文档地址： <https://alibaba.github.io/transmittable-thread-local/apidocs/>\n\n# 🍪 Maven依赖\n\n示例：\n\n```xml\n<dependency>\n    <groupId>com.alibaba</groupId>\n    <artifactId>transmittable-thread-local</artifactId>\n    <version>2.14.4</version>\n</dependency>\n```\n\n可以在 [maven.org](https://repo1.maven.org/maven2/com/alibaba/transmittable-thread-local/maven-metadata.xml) 查看可用的版本。\n\n# 🔨 关于编译构建\n\n编译构建的环境要求： **_`JDK 8+`_**；用`Maven`常规的方式执行编译构建即可：  \n\\# 在工程中已经包含了符合版本要求的`Maven`，直接运行 **_工程根目录下的`mvnw`_**；并不需要先手动自己安装好`Maven`。\n\n```bash\n# 运行测试Case\n./mvnw test\n# 编译打包\n./mvnw package\n# 运行测试Case、编译打包、安装TTL库到Maven本地\n./mvnw install\n\n#####################################################\n# 如果使用你自己安装的 maven，版本要求：maven 3.3.9+\nmvn install\n```\n\n# ❓ FAQ\n\n**_Q1. `TTL Agent`与其它`Agent`（如`Skywalking`、`Promethues`）配合使用时不生效？_**\n\n配置`TTL Agent`在最前的位置，可以避免与其它其它`Agent`配合使用时，`TTL Agent`可能的不生效问题。配置示例：\n\n```bash\njava -javaagent:path/to/transmittable-thread-local-2.x.y.jar \\\n     -javaagent:path/to/skywalking-agent.jar \\\n     -jar your-app.jar\n```\n\n原因是：\n\n- 像`Skywalking`这样的`Agent`的入口逻辑（`premain`）包含了线程池的启动。\n- 如果配置在这样的`Agent`配置在前面，到了`TTL Agent`（的`premain`）时，`TTL`需要加强的线程池类已经加载（`load`）了。\n- `TTL Agent`的`TtlTransformer`是在类加载时触发类的增强；如果类已经加载了会跳过`TTL Agent`的增强逻辑。\n\n更多讨论参见 [Issue：`TTL agent`与其他`Agent`的兼容性问题 #226](https://github.com/alibaba/transmittable-thread-local/issues/226)。\n\n**_Q2. `MacOS`下，使用`Java Agent`，可能会报`JavaLaunchHelper`的出错信息_**\n\nJDK Bug: <https://bugs.java.com/bugdatabase/view_bug.do?bug_id=8021205>  \n可以换一个版本的`JDK`。我的开发机上`1.7.0_40`有这个问题，`1.6.0_51`、`1.7.0_45`可以运行。  \n\\# `1.7.0_45`还是有`JavaLaunchHelper`的出错信息，但不影响运行。\n\n# ✨ 使用`TTL`的好处与必要性\n\n> [!NOTE]\n> 不读这一节，并不会影响你使用`TTL`来解决你碰到的问题，可以放心跳过；读了 [User Guide](#-user-guide) 就可以快速用起来了～ 😄 这一节信息密度较高不易读。\n\n**_好处：透明且自动完成所有异步执行上下文的可定制、规范化的捕捉与传递。_**  \n这个好处也是`TransmittableThreadLocal`的目标。\n\n**_必要性：随着应用的分布式微服务化并使用各种中间件，越来越多的功能与组件会涉及不同的上下文，逻辑流程也越来越长；上下文问题实际上是个大的易错的架构问题，需要统一的对业务透明的解决方案。_**\n\n使用`ThreadLocal`作为业务上下文传递的经典技术手段在中间件、技术与业务框架中广泛大量使用。而对于生产应用，几乎一定会使用线程池等异步执行组件，以高效支撑线上大流量。但使用`ThreadLocal`及其`set/remove`的上下文传递模式，在使用线程池等异步执行组件时，存在多方面的问题：\n\n**_1. 从业务使用者角度来看_**\n\n1. **繁琐**\n   - 业务逻辑要知道：有哪些上下文；各个上下文是如何获取的。\n   - 并需要业务逻辑去一个一个地捕捉与传递。\n1. **依赖**\n    - 需要直接依赖不同`ThreadLocal`上下文各自的获取的逻辑或类。\n    - 像`RPC`的上下文（如`Dubbo`的`RpcContext`）、全链路跟踪的上下文（如`SkyWalking`的`ContextManager`）、不同业务模块中的业务流程上下文，等等。\n1. **静态（易漏）**\n    - 因为要 **_事先_** 知道有哪些上下文，如果系统出现了一个新的上下文，业务逻辑就要修改添加上新上下文传递的几行代码。也就是说因 **_系统的_** 上下文新增，**_业务的_** 逻辑就跟进要修改。\n    - 而对于业务来说，不关心系统的上下文，即往往就可能遗漏，会是线上故障了。\n    - 随着应用的分布式微服务化并使用各种中间件，越来越多的功能与组件会涉及不同的上下文，逻辑流程也越来越长；上下文问题实际上是个大的易错的架构问题，需要统一的对业务透明的解决方案。\n1. **定制性**\n    - 因为需要业务逻辑来完成捕捉与传递，业务要关注『上下文的传递方式』：直接传引用？还是拷贝传值？拷贝是深拷贝还是浅拷贝？在不同的上下文会需要不同的做法。\n    - 『上下文的传递方式』往往是 **_上下文的提供者_**（或说是业务逻辑的框架部分）才能决策处理好的；而 **_上下文的使用者_**（或说是业务逻辑的应用部分）往往不（期望）知道上下文的传递方式。这也可以理解成是 **_依赖_**，即业务逻辑 依赖/关注/实现了 系统/架构的『上下文的传递方式』。\n\n**_2. 从整体流程实现角度来看_**\n\n关注的是 **上下文传递流程的规范化**。上下文传递到了子线程要做好 **_清理_**（或更准确地说是要 **_恢复_** 成之前的上下文），需要业务逻辑去处理好。如果业务逻辑对**清理**的处理不正确，比如：\n\n- 如果清理操作漏了：\n   - 下一次执行可能是上次的，即『上下文的 **_污染_**/**_串号_**』，会导致业务逻辑错误。\n   - 『上下文的 **_泄漏_**』，会导致内存泄漏问题。\n- 如果清理操作做多了，会出现上下文 **_丢失_**。\n\n上面的问题，在业务开发中引发的`Bug`真是**屡见不鲜** ！本质原因是：**_`ThreadLocal`的`set/remove`的上下文传递模式_** 在使用线程池等异步执行组件的情况下不再是有效的。常见的典型例子：\n\n- 当线程池满了且线程池的`RejectedExecutionHandler`使用的是`CallerRunsPolicy`时，提交到线程池的任务会在提交线程中直接执行，`ThreadLocal.remove`操作**清理**提交线程的上下文导致上下文**丢失**。\n- 类似的，使用`ForkJoinPool`（包含并行执行`Stream`与`CompletableFuture`，底层使用`ForkJoinPool`）的场景，展开的`ForkJoinTask`会在任务提交线程中直接执行。同样导致上下文**丢失**。\n\n怎么设计一个『上下文传递流程』方案（即上下文的生命周期），以**保证**没有上面的问题？\n\n期望：上下文生命周期的操作从业务逻辑中分离出来。业务逻辑不涉及生命周期，就不会有业务代码如疏忽清理而引发的问题了。整个上下文的传递流程或说生命周期可以规范化成：捕捉、回放和恢复这3个操作，即[**_`CRR(capture/replay/restore)`模式_**](docs/developer-guide.md#-%E6%A1%86%E6%9E%B6%E4%B8%AD%E9%97%B4%E4%BB%B6%E9%9B%86%E6%88%90ttl%E4%BC%A0%E9%80%92)。更多讨论参见 [Issue：能在详细讲解一下`replay`、`restore`的设计理念吗？#201](https://github.com/alibaba/transmittable-thread-local/issues/201)。\n\n总结上面的说明：在生产应用（几乎一定会使用线程池等异步执行组件）中，使用`ThreadLocal`及其`set/remove`的上下文传递模式**几乎一定是有问题的**，**_只是在等一个出`Bug`的机会_**。\n\n更多`TTL`好处与必要性的展开讨论参见 [Issue：这个库带来怎样的好处和优势？ #128](https://github.com/alibaba/transmittable-thread-local/issues/128)，欢迎继续讨论 ♥️\n\n# 🗿 更多文档\n\n- [🎨 需求场景说明](docs/requirement-scenario.md)\n- [❤️ 小伙伴同学们写的`TTL`使用场景 与 设计实现解析的文章（写得都很好！） - Issue #123](https://github.com/alibaba/transmittable-thread-local/issues/123)\n- [🎓 Developer Guide](docs/developer-guide.md)\n- [☔ 性能测试](docs/performance-test.md)\n\n# 📚 相关资料\n\n## JDK Core Classes\n\n- [WeakHashMap](https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/WeakHashMap.html)\n- [InheritableThreadLocal](https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/InheritableThreadLocal.html)\n\n# 💗 Who Used\n\n使用了`TTL`的一部分开源项目：\n\n- **中间件**\n    - [`sofastack/sofa-rpc` ![](https://img.shields.io/github/stars/sofastack/sofa-rpc.svg?style=social&label=Star)](https://github.com/sofastack/sofa-rpc) [![star](https://gitee.com/sofastack/sofa-rpc/badge/star.svg?theme=gray)](https://gitee.com/sofastack/sofa-rpc)  \n      SOFARPC is a high-performance, high-extensibility, production-level Java RPC framework\n    - [`trpc-group/trpc-java` ![](https://img.shields.io/github/stars/trpc-group/trpc-java.svg?style=social&label=Star)](https://github.com/trpc-group/trpc-java)  \n      A pluggable, high-performance RPC framework written in java\n    - [`tencentmusic/supersonic` ![](https://img.shields.io/github/stars/tencentmusic/supersonic.svg?style=social&label=Star)](https://github.com/tencentmusic/supersonic)  \n      SuperSonic is an out-of-the-box yet highly extensible framework for building ChatBI\n    - [`dromara/hmily` ![](https://img.shields.io/github/stars/dromara/hmily.svg?style=social&label=Star)](https://github.com/dromara/hmily) [![star](https://gitee.com/dromara/hmily/badge/star.svg?theme=gray)](https://gitee.com/dromara/hmily)  \n      Distributed transaction solutions\n    - [`dromara/gobrs-async` ![](https://img.shields.io/github/stars/dromara/gobrs-async.svg?style=social&label=Star)](https://github.com/dromara/gobrs-async) [![star](https://gitee.com/dromara/gobrs-async/badge/star.svg?theme=gray)](https://gitee.com/dromara/gobrs-async)  \n      一款功能强大、配置灵活、带有全链路异常回调、内存优化、异常状态管理于一身的高性能异步编排框架。为企业提供在复杂应用场景下动态任务编排的能力。 针对于复杂场景下，异步线程复杂性、任务依赖性、异常状态难控制性\n    - [`dromara/dynamic-tp` ![](https://img.shields.io/github/stars/dromara/dynamic-tp.svg?style=social&label=Star)](https://github.com/dromara/dynamic-tp) [![star](https://gitee.com/dromara/dynamic-tp/badge/star.svg?theme=gray)](https://gitee.com/dromara/dynamic-tp)  \n      轻量级动态线程池，内置监控告警功能，支持线程池上下文传递，基于主流配置中心（已支持Nacos、Apollo，Zookeeper，可通过SPI自定义实现）\n    - [`opengoofy/hippo4j` ![](https://img.shields.io/github/stars/opengoofy/hippo4j.svg?style=social&label=Star)](https://github.com/opengoofy/hippo4j) [![star](https://gitee.com/opengoofy/hippo4j/badge/star.svg?theme=gray)](https://gitee.com/magestack/hippo4j)  \n      动态线程池框架，附带监控报警功能，支持 JDK、Tomcat、Jetty、Undertow 线程池；Apache RocketMQ、Dubbo、RabbitMQ、Hystrix 消费等线程池。内置两种使用模式：轻量级依赖配置中心以及无中间件依赖版本\n    - [`siaorg/sia-gateway` ![](https://img.shields.io/github/stars/siaorg/sia-gateway.svg?style=social&label=Star)](https://github.com/siaorg/sia-gateway)  \n      微服务路由网关（zuul-plus）\n    - [`huaweicloud/Sermant` ![](https://img.shields.io/github/stars/huaweicloud/Sermant.svg?style=social&label=Star)](https://github.com/huaweicloud/Sermant)  \n      Sermant, a proxyless service mesh solution based on Javaagent\n    - [`ZTO-Express/zms` ![](https://img.shields.io/github/stars/ZTO-Express/zms.svg?style=social&label=Star)](https://github.com/ZTO-Express/zms) [![star](https://gitee.com/zto_express/zms/badge/star.svg?theme=gray)](https://gitee.com/zto_express/zms)  \n      ZTO Message Service\n    - [`lxchinesszz/tomato` ![](https://img.shields.io/github/stars/lxchinesszz/tomato.svg?style=social&label=Star)](https://github.com/lxchinesszz/tomato)  \n      一款专门为SpringBoot项目设计的幂等组件\n    - [`ytyht226/taskflow` ![](https://img.shields.io/github/stars/ytyht226/taskflow.svg?style=social&label=Star)](https://github.com/ytyht226/taskflow)  \n      一款轻量、简单易用、可灵活扩展的通用任务编排框架，基于有向无环图(DAG)的方式实现，框架提供了组件复用、同步/异步编排、条件判断、分支选择等能力，可以根据不同的业务场景对任意的业务流程进行编排\n    - [`foldright/cffu` ![](https://img.shields.io/github/stars/foldright/cffu.svg?style=social&label=star)](https://github.com/foldright/cffu)  \n      🦝 Java CompletableFuture Fu, aka. CF-Fu, pronounced \"Shifu\"; include best practice/traps guide and a tiny sidekick library to improve user experience and reduce misuse.\n    - [`tuya/connector` ![](https://img.shields.io/github/stars/tuya/connector.svg?style=social&label=Star)](https://github.com/tuya/connector)  \n      The connector framework maps cloud APIs to local APIs based on simple configurations and flexible extension mechanisms\n- **中间件/数据处理**\n    - [`apache/shardingsphere` ![](https://img.shields.io/github/stars/apache/shardingsphere.svg?style=social&label=Star)](https://github.com/apache/shardingsphere) [![star](https://gitee.com/Sharding-Sphere/sharding-sphere/badge/star.svg?theme=gray)](https://gitee.com/Sharding-Sphere/sharding-sphere)  \n      Ecosystem to transform any database into a distributed database system, and enhance it with sharding, elastic scaling, encryption features & more\n    - [`apache/kylin` ![](https://img.shields.io/github/stars/apache/kylin.svg?style=social&label=Star)](https://github.com/apache/kylin)  \n      A unified and powerful OLAP platform for Hadoop and Cloud.\n    - [`mybatis-flex/mybatis-flex` ![](https://img.shields.io/github/stars/mybatis-flex/mybatis-flex.svg?style=social&label=Star)](https://github.com/mybatis-flex/mybatis-flex) [![star](https://gitee.com/mybatis-flex/mybatis-flex/badge/star.svg?theme=gray)](https://gitee.com/mybatis-flex/mybatis-flex)  \n      mybatis-flex is an elegant Mybatis Enhancement Framework\n    - [`basicai/xtreme1` ![](https://img.shields.io/github/stars/basicai/xtreme1.svg?style=social&label=Star)](https://github.com/basicai/xtreme1)  \n      The Next GEN Platform for Multisensory Training Data. #3D annotation, lidar-camera annotation and image annotation tools are supported\n    - [`oceanbase/odc` ![](https://img.shields.io/github/stars/oceanbase/odc.svg?style=social&label=Star)](https://github.com/oceanbase/odc)  \n      An open-source, enterprise-grade database tool for collaborative development\n    - [`sagframe/sagacity-sqltoy` ![](https://img.shields.io/github/stars/sagframe/sagacity-sqltoy.svg?style=social&label=Star)](https://github.com/sagframe/sagacity-sqltoy)  \n      Java真正智慧的ORM框架\n    - [`dromara/stream-query` ![](https://img.shields.io/github/stars/dromara/stream-query.svg?style=social&label=Star)](https://github.com/dromara/stream-query) [![star](https://gitee.com/dromara/stream-query/badge/star.svg?theme=gray)](https://gitee.com/dromara/stream-query)  \n      允许完全摆脱Mapper的mybatis-plus体验；可以使用类似“工具类”这样的静态函数进行数据库操作\n    - [`luo-zhan/Transformer` ![](https://img.shields.io/github/stars/luo-zhan/Transformer.svg?style=social&label=Star)](https://github.com/luo-zhan/Transformer)  \n      Transformer可能是最简单，但最强大的字段转换插件，一个注解搞定任意转换，让开发变得更加丝滑\n    - [`SimonAlong/Neo` ![](https://img.shields.io/github/stars/SimonAlong/Neo.svg?style=social&label=Star)](https://github.com/SimonAlong/Neo)  \n      Orm框架：基于ActiveRecord思想开发的至简化且功能很全的Orm框架\n    - [`ppdaicorp/das` ![](https://img.shields.io/github/stars/ppdaicorp/das.svg?style=social&label=Star)](https://github.com/ppdaicorp/das)  \n      数据库访问框架(data access service)，包括数据库控制台das console，数据库客户端das client和数据库服务端das server三部分\n    - [`didi/ALITA` ![](https://img.shields.io/github/stars/didi/ALITA.svg?style=social&label=Star)](https://github.com/didi/ALITA)  \n      a layer-based data analysis tool\n    - [`didi/daedalus` ![](https://img.shields.io/github/stars/didi/daedalus.svg?style=social&label=Star)](https://github.com/didi/daedalus)  \n      实现快速创建数据构造流程，数据构造流程的可视化、线上化、持久化、标准化\n- **中间件/流程引擎**\n    - [`dromara/liteflow` ![](https://img.shields.io/github/stars/dromara/liteflow.svg?style=social&label=Star)](https://github.com/dromara/liteflow) [![star](https://gitee.com/dromara/liteFlow/badge/star.svg?theme=gray)](https://gitee.com/dromara/liteFlow)  \n      a lightweight and practical micro-process framework\n    - [`alibaba/bulbasaur` ![](https://img.shields.io/github/stars/alibaba/bulbasaur.svg?style=social&label=Star)](https://github.com/alibaba/bulbasaur)  \n      A pluggable, scalable process engine\n- **中间件/日志**\n    - [`dromara/TLog` ![](https://img.shields.io/github/stars/dromara/TLog.svg?style=social&label=Star)](https://github.com/dromara/TLog) [![star](https://gitee.com/dromara/TLog/badge/star.svg?theme=gray)](https://gitee.com/dromara/TLog)  \n      Lightweight distributed log label tracking framework\n    - [`fayechenlong/plumelog` ![](https://img.shields.io/github/stars/fayechenlong/plumelog.svg?style=social&label=Star)](https://github.com/fayechenlong/plumelog) [![star](https://gitee.com/plumeorg/plumelog/badge/star.svg?theme=gray)](https://gitee.com/plumeorg/plumelog)  \n      一个java分布式日志组件，支持百亿级别\n    - [`minbox-projects/minbox-logging` ![](https://img.shields.io/github/stars/minbox-projects/minbox-logging.svg?style=social&label=Star)](https://github.com/minbox-projects/minbox-logging) [![star](https://gitee.com/minbox-projects/minbox-logging/badge/star.svg?theme=gray)](https://gitee.com/minbox-projects/minbox-logging)  \n      分布式零侵入式、链路式请求日志分析框架。提供Admin端点进行采集日志、分析日志、日志告警通知、服务性能分析等。通过Admin Ui可查看实时链路日志信息、在线业务服务列表\n        - [`minbox-projects/api-boot` ![](https://img.shields.io/github/stars/minbox-projects/api-boot.svg?style=social&label=Star)](https://github.com/minbox-projects/api-boot) [![star](https://gitee.com/minbox-projects/api-boot/badge/star.svg?theme=gray)](https://gitee.com/minbox-projects/api-boot)  \n          为接口服务而生的，基于“ SpringBoot”完成扩展和自动配置，内部封装了一系列的开箱即用Starters\n    - [`ofpay/logback-mdc-ttl` ![](https://img.shields.io/github/stars/ofpay/logback-mdc-ttl.svg?style=social&label=Star)](https://github.com/ofpay/logback-mdc-ttl)  \n      logback扩展，集成transmittable-thread-local支持跨线程池的mdc跟踪\n    - [`oldratlee/log4j2-ttl-thread-context-map` ![](https://img.shields.io/github/stars/oldratlee/log4j2-ttl-thread-context-map.svg?style=social&label=Star)](https://github.com/oldratlee/log4j2-ttl-thread-context-map)  \n      Log4j2 TTL ThreadContextMap, Log4j2 extension integrated TransmittableThreadLocal to MDC\n    - [`qqxx6661/log-record` ![](https://img.shields.io/github/stars/qqxx6661/log-record.svg?style=social&label=Star)](https://github.com/qqxx6661/log-record)\n      业务日志记录框架，使用注解优雅记录日志，支持SpEL表达式，自定义上下文，自定义函数，实体类DIFF等特性。\n- **中间件/字节码**\n    - [`ymm-tech/easy-byte-coder` ![](https://img.shields.io/github/stars/ymm-tech/easy-byte-coder.svg?style=social&label=Star)](https://github.com/ymm-tech/easy-byte-coder)  \n      Easy-byte-coder is a non-invasive bytecode injection framework based on JVM\n- **业务服务或平台应用**\n    - [`OpenBankProject/OBP-API` ![](https://img.shields.io/github/stars/OpenBankProject/OBP-API.svg?style=social&label=Star)](https://github.com/OpenBankProject/OBP-API)  \n      An open source RESTful API platform for banks that supports Open Banking, XS2A and PSD2 through access to accounts, transactions, counterparties, payments, entitlements and metadata - plus a host of internal banking and management APIs\n    - [`gz-yami/mall4j` ![](https://img.shields.io/github/stars/gz-yami/mall4j.svg?style=social&label=Star)](https://github.com/gz-yami/mall4j) [![star](https://gitee.com/gz-yami/mall4j/badge/star.svg?theme=gray)](https://gitee.com/gz-yami/mall4j)  \n      电商商城 java电商商城系统 uniapp商城 多用户商城\n    - [`Joolun/JooLun-wx` ![](https://img.shields.io/github/stars/Joolun/JooLun-wx.svg?style=social&label=Star)](https://github.com/Joolun/JooLun-wx) [![star](https://gitee.com/joolun/JooLun-wx/badge/star.svg?theme=gray)](https://gitee.com/joolun/JooLun-wx)  \n      JooLun微信商城\n    - [`HummerRisk/HummerRisk` ![](https://img.shields.io/github/stars/HummerRisk/HummerRisk.svg?style=social&label=Star)](https://github.com/HummerRisk/HummerRisk)  \n      云原生安全平台，包括混合云安全治理和容器云安全检测\n    - [`XiaoMi/mone` ![](https://img.shields.io/github/stars/XiaoMi/mone.svg?style=social&label=Star)](https://github.com/XiaoMi/mone)  \n      `Mone`以微服务为核心的一站式企业协同研发平台。支持公共云、专有云和混合云多种部署形态；提供从“项目创建->开发->部署->治理->应用观测”端到端的研发全流程服务；通过云原生新技术和研发新模式，打造“双敏”，敏捷研发和敏捷组织，保障小米-中国区高复杂业务、大规模团队的敏捷研发协同，实现多倍效能提升。\n    - [`yangzongzhuan/RuoYi-Cloud` ![](https://img.shields.io/github/stars/yangzongzhuan/RuoYi-Cloud.svg?style=social&label=Star)](https://github.com/yangzongzhuan/RuoYi-Cloud) [![star](https://gitee.com/y_project/RuoYi-Cloud/badge/star.svg?theme=gray)](https://gitee.com/y_project/RuoYi-Cloud)  \n      基于Spring Boot、Spring Cloud & Alibaba的分布式微服务架构权限管理系统\n    - [`somowhere/albedo` ![](https://img.shields.io/github/stars/somowhere/albedo.svg?style=social&label=Star)](https://github.com/somowhere/albedo) [![star](https://gitee.com/somowhere/albedo/badge/star.svg?theme=gray)](https://gitee.com/somowhere/albedo)  \n      基于 Spring Boot 、Spring Security、Mybatis 的RBAC权限管理系统\n    - [`qwdigital/LinkWechat` ![](https://img.shields.io/github/stars/qwdigital/LinkWechat.svg?style=social&label=Star)](https://github.com/qwdigital/LinkWechat) [![star](https://gitee.com/LinkWeChat/link-wechat/badge/star.svg?theme=gray)](https://gitee.com/LinkWeChat/link-wechat)  \n      基于企业微信的开源 SCRM 系统，采用主流的 Java 微服务架构，是企业私域流量管理与营销的综合解决方案，助力企业提高客户运营效率，强化营销能力，拓展盈利空间\n    - [`fushengqian/fuint` ![](https://img.shields.io/github/stars/fushengqian/fuint.svg?style=social&label=Star)](https://github.com/fushengqian/fuint) [![star](https://gitee.com/fuint/fuint-uniapp/badge/star.svg?theme=gray)](https://gitee.com/fuint/fuint-uniapp)  \n      fuint会员营销系统是一套开源的实体店铺会员管理和营销系统\n    - [`hiparker/opsli-boot` ![](https://img.shields.io/github/stars/hiparker/opsli-boot.svg?style=social&label=Star)](https://github.com/hiparker/opsli-boot) [![star](https://gitee.com/hiparker/opsli-boot/badge/star.svg?theme=gray)](https://gitee.com/hiparker/opsli-boot)  \n      一款的低代码快速平台，零代码开发，致力于做更简洁的后台管理系统\n    - [`topiam/eiam` ![](https://img.shields.io/github/stars/topiam/eiam.svg?style=social&label=Star)](https://github.com/topiam/eiam) [![star](https://gitee.com/topiam/eiam/badge/star.svg?theme=gray)](https://gitee.com/topiam/eiam)  \n      EIAM（Employee Identity and Access Management Program）企业级开源IAM平台，实现用户全生命周期的管理、统一认证和单点登录、为数字身份安全赋能\n    - [`Newspiral/newspiral-business` ![](https://img.shields.io/github/stars/Newspiral/newspiral-business.svg?style=social&label=Star)](https://github.com/Newspiral/newspiral-business)  \n      联盟区块链底层平台\n- **工具产品**\n    - [`ssssssss-team/spider-flow` ![](https://img.shields.io/github/stars/ssssssss-team/spider-flow.svg?style=social&label=Star)](https://github.com/ssssssss-team/spider-flow) [![star](https://gitee.com/ssssssss-team/spider-flow/badge/star.svg?theme=gray)](https://gitee.com/ssssssss-team/spider-flow)  \n      新一代爬虫平台，以图形化方式定义爬虫流程，不写代码即可完成爬虫\n    - [`nekolr/slime` ![](https://img.shields.io/github/stars/nekolr/slime.svg?style=social&label=Star)](https://github.com/nekolr/slime)  \n      🍰 一个可视化的爬虫平台\n    - [`Jackson0714/PassJava-Platform` ![](https://img.shields.io/github/stars/Jackson0714/PassJava-Platform.svg?style=social&label=Star)](https://github.com/Jackson0714/PassJava-Platform)  \n      一款面试刷题的 Spring Cloud 开源系统。零碎时间利用小程序查看常见面试题，夯实Java基础。 该项目可以教会你如何搭建SpringBoot项目，Spring Cloud项目。 采用流行的技术，如 SpringBoot、MyBatis、Redis、 MySql、 MongoDB、 RabbitMQ、Elasticsearch，采用Docker容器化部署\n    - [`martin-chips/DimpleBlog` ![](https://img.shields.io/github/stars/martin-chips/DimpleBlog.svg?style=social&label=Star)](https://github.com/martin-chips/DimpleBlog)  \n      基于`SpringBoot2`搭建的个人博客系统\n    - [`zjcscut/octopus` ![](https://img.shields.io/github/stars/zjcscut/octopus.svg?style=social&label=Star)](https://github.com/zjcscut/octopus)  \n      长链接压缩为短链接的服务\n    - [`xggz/mqr` ![](https://img.shields.io/github/stars/xggz/mqr.svg?style=social&label=Star)](https://github.com/xggz/mqr) [![star](https://gitee.com/mlyai/mqr/badge/star.svg?theme=gray)](https://gitee.com/mlyai/mqr)  \n      茉莉QQ机器人（简称MQR），采用mirai的Android协议实现的QQ机器人服务，通过web控制机器人的启停和配置\n- **测试解决方案或工具**\n    - [`alibaba/jvm-sandbox-repeater` ![](https://img.shields.io/github/stars/alibaba/jvm-sandbox-repeater.svg?style=social&label=Star)](https://github.com/alibaba/jvm-sandbox-repeater)  \n      A Java server-side recording and playback solution based on JVM-Sandbox, 录制/回放通用解决方案\n    - [`vivo/MoonBox` ![](https://img.shields.io/github/stars/vivo/MoonBox.svg?style=social&label=Star)](https://github.com/vivo/MoonBox)  \n      Moonbox（月光宝盒）是JVM-Sandbox生态下的，基于jvm-sandbox-repeater重新开发的，一款流量回放平台产品。相较于jvm-sandbox-repeater，Moonbox功能更加丰富、数据可靠性更高，同时便于快速线上部署和使用\n    - [`alibaba/testable-mock` ![](https://img.shields.io/github/stars/alibaba/testable-mock.svg?style=social&label=Star)](https://github.com/alibaba/testable-mock)  \n      换种思路写Mock，让单元测试更简单\n    - [`shulieTech/Takin` ![](https://img.shields.io/github/stars/shulieTech/Takin.svg?style=social&label=Star)](https://github.com/shulieTech/Takin)  \n      全链路压测平台，measure online environmental performance test for full-links, Especially for microservices\n        - [`shulieTech/LinkAgent` ![](https://img.shields.io/github/stars/shulieTech/LinkAgent.svg?style=social&label=Star)](https://github.com/shulieTech/LinkAgent)  \n          a Java-based open-source agent designed to collect data and control Functions for Java applications through JVM bytecode, without modifying applications codes\n    - [`alibaba/virtual-environment` ![](https://img.shields.io/github/stars/alibaba/virtual-environment.svg?style=social&label=Star)](https://github.com/alibaba/virtual-environment)  \n      Route isolation with service sharing, 阿里测试环境服务隔离和联调机制的`Kubernetes`版实现\n- **`Spring Cloud`/`Spring Boot`的框架方案/脚手架**\n    - [`YunaiV/ruoyi-vue-pro` ![](https://img.shields.io/github/stars/YunaiV/ruoyi-vue-pro.svg?style=social&label=Star)](https://github.com/YunaiV/ruoyi-vue-pro)  [![star](https://gitee.com/zhijiantianya/ruoyi-vue-pro/badge/star.svg?theme=gray)](https://gitee.com/zhijiantianya/ruoyi-vue-pro)  \n      一套全部开源的企业级的快速开发平台。基于 Spring Boot + MyBatis Plus + Vue & Element 实现的后台管理系统 + 微信小程序，支持 RBAC 动态权限、数据权限、SaaS 多租户、Activiti + Flowable 工作流、三方登录、支付、短信、商城等功能\n    - [`YunaiV/yudao-cloud` ![](https://img.shields.io/github/stars/YunaiV/yudao-cloud.svg?style=social&label=Star)](https://github.com/YunaiV/yudao-cloud)  [![star](https://gitee.com/zhijiantianya/yudao-cloud/badge/star.svg?theme=gray)](https://gitee.com/zhijiantianya/yudao-cloud)  \n      RuoYi-Vue 全新 Cloud 版本，优化重构所有功能。基于 Spring Cloud Alibaba + MyBatis Plus + Vue & Element 实现的后台管理系统 + 用户小程序，支持 RBAC 动态权限、多租户、数据权限、工作流、三方登录、支付、短信、商城等功能\n    - [`zlt2000/microservices-platform` ![](https://img.shields.io/github/stars/zlt2000/microservices-platform.svg?style=social&label=Star)](https://github.com/zlt2000/microservices-platform) [![star](https://gitee.com/zlt2000/microservices-platform/badge/star.svg?theme=gray)](https://gitee.com/zlt2000/microservices-platform)  \n      基于SpringBoot2.x、SpringCloud和SpringCloudAlibaba并采用前后端分离的企业级微服务多租户系统架构\n    - [`dromara/lamp-cloud` ![](https://img.shields.io/github/stars/dromara/lamp-cloud.svg?style=social&label=Star)](https://github.com/zuihou/lamp-cloud) [![star](https://gitee.com/dromara/lamp-cloud/badge/star.svg?theme=gray)](https://gitee.com/dromara/lamp-cloud)  \n      基于Jdk11 + SpringCloud + SpringBoot 的微服务快速开发平台，其中的可配置的SaaS功能尤其闪耀， 具备RBAC功能、网关统一鉴权、Xss防跨站攻击、自动代码生成、多种存储系统、分布式事务、分布式定时任务等多个模块，支持多业务系统并行开发， 支持多服务并行开发，可以作为后端服务的开发脚手架\n        - [`zuihou/lamp-util` ![](https://img.shields.io/github/stars/zuihou/lamp-util.svg?style=social&label=Star)](https://github.com/zuihou/lamp-util) [![star](https://gitee.com/zuihou111/lamp-util/badge/star.svg?theme=gray)](https://gitee.com/zuihou111/lamp-util)  \n          打造一套兼顾 SpringBoot 和 SpringCloud 项目的公共工具类\n    - [`matevip/matecloud` ![](https://img.shields.io/github/stars/matevip/matecloud.svg?style=social&label=Star)](https://github.com/matevip/matecloud) [![star](https://gitee.com/matevip/matecloud/badge/star.svg?theme=gray)](https://gitee.com/matevip/matecloud)  \n      一款基于Spring Cloud Alibaba的微服务架构\n    - [`gavenwangcn/vole` ![](https://img.shields.io/github/stars/gavenwangcn/vole.svg?style=social&label=Star)](https://github.com/gavenwangcn/vole)  \n      SpringCloud 微服务业务脚手架\n    - [`liuweijw/fw-cloud-framework` ![](https://img.shields.io/github/stars/liuweijw/fw-cloud-framework.svg?style=social&label=Star)](https://github.com/liuweijw/fw-cloud-framework) [![star](https://gitee.com/liuweijw/fw-cloud-framework/badge/star.svg?theme=gray)](https://gitee.com/liuweijw/fw-cloud-framework)  \n      基于springcloud全家桶开发分布式框架（支持oauth2认证授权、SSO登录、统一下单、微信公众号服务、Shardingdbc分库分表、常见服务监控、链路监控、异步日志、redis缓存等功能），实现基于Vue全家桶等前后端分离项目工程\n    - [`liuht777/Taroco` ![](https://img.shields.io/github/stars/liuht777/Taroco.svg?style=social&label=Star)](https://github.com/liuht777/Taroco)  \n      整合Nacos、Spring Cloud Alibaba，提供了一系列starter组件， 同时提供服务治理、服务监控、OAuth2权限认证，支持服务降级/熔断、服务权重\n    - [`mingyang66/spring-parent` ![](https://img.shields.io/github/stars/mingyang66/spring-parent.svg?style=social&label=Star)](https://github.com/mingyang66/spring-parent)  \n      数据库多数据源、Redis多数据源、日志组件、全链路日志追踪、埋点扩展点、Netty、微服务、开发基础框架支持、异常统一处理、返回值、跨域、API路由、监控等\n    - [`budwk/budwk` ![](https://img.shields.io/github/stars/budwk/budwk.svg?style=social&label=Star)](https://github.com/budwk/budwk) [![star](https://gitee.com/budwk/budwk/badge/star.svg?theme=gray)](https://gitee.com/budwk/budwk)  \n      `BudWk` 原名 [`NutzWk` ![](https://img.shields.io/github/stars/Wizzercn/NutzWk.svg?style=social&label=Star)](https://github.com/Wizzercn/NutzWk) [![star](https://gitee.com/wizzer/NutzWk/badge/star.svg?theme=gray)](https://gitee.com/wizzer/NutzWk)，基于国产框架 nutz 及 nutzboot 开发的开源Web基础项目，集权限体系、系统参数、数据字典、站内消息、定时任务、CMS、微信等最常用功能，不庞杂、不面面俱到，使其具有上手容易、开发便捷、扩展灵活等特性，特别适合各类大中小型定制化项目需求\n    - [`yinjihuan/spring-cloud` ![](https://img.shields.io/github/stars/yinjihuan/spring-cloud.svg?style=social&label=Star)](https://github.com/yinjihuan/spring-cloud)  \n      《Spring Cloud微服务-全栈技术与案例解析》和《Spring Cloud微服务 入门 实战与进阶》配套源码\n    - [`louyanfeng25/ddd-demo` ![](https://img.shields.io/github/stars/louyanfeng25/ddd-demo.svg?style=social&label=Star)](https://github.com/louyanfeng25/ddd-demo)  \n      《深入浅出DDD》讲解的演示项目，为了能够更好的理解Demo中的分层与逻辑处理，我强烈建议你配合小册来深入了解DDD\n    - [`nageoffer/12306` ![](https://img.shields.io/github/stars/nageoffer/12306.svg?style=social&label=Star)](https://github.com/nageoffer/12306)  \n      12306 铁路购票服务是与大家生活和出行相关的关键系统，包括会员、购票、订单、支付和网关等服务。\n\n更多使用`TTL`的开源项目 参见 [![user repos](https://badgen.net/github/dependents-repo/alibaba/transmittable-thread-local?label=user%20repos)](https://github.com/alibaba/transmittable-thread-local/network/dependents)\n\n# 👷 Contributors\n\n- Jerry Lee \\<oldratlee at gmail dot com> [@oldratlee](https://github.com/oldratlee)\n- Yang Fang \\<snoop.fy at gmail dot com> [@driventokill](https://github.com/driventokill)\n- Zava Xu \\<zava.kid at gmail dot com> [@zavakid](https://github.com/zavakid)\n- wuwen \\<wuwen.55 at aliyun dot com> [@wuwen5](https://github.com/wuwen5)\n- rybalkinsd \\<yan.brikl at gmail dot com> [@rybalkinsd](https://github.com/rybalkinsd)\n- David Dai \\<351450944 at qq dot com> [@LNAmp](https://github.com/LNAmp)\n- Your name here :-)\n\n[![GitHub Contributors](https://contrib.rocks/image?repo=alibaba/transmittable-thread-local)](https://github.com/alibaba/transmittable-thread-local/graphs/contributors)\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 5.6064453125,
          "content": "# 漏洞奖励计划\n\n## 报告\n\n如果您认为自己在本程序中发现了任何安全（技术）漏洞，欢迎您通过 https://security.alibaba.com 向我们提交漏洞报告。\n如果您报告任何安全漏洞，请注意您可能包含以下信息（合格报告）：\n\n* `git`程序`URL`地址，运行的环境\n* 包含必要屏幕截图的详细说明\n* 重现漏洞的步骤以及修复漏洞的建议。\n* 其他有用信息\n\n## 处理\n\nASRC（Alibaba Security Response Center 阿里安全响应中心）将尽快审核并回复您的提交内容，并在我们努力修复您提交的漏洞时随时通知您。如有必要，我们可能会与您联系以获取更多信息。\n\n## 条款和条件\n\n1. 仅接受技术漏洞并对其进行评级\n2. 出于安全原因，上报者同意与ASRC合作完成他/她提交的漏洞，不向任何第三方透露任何漏洞信息\n3. 如果不止一个人报告相同的安全漏洞，奖励将给予完成合格报告的第一个人\n4. 为了保护程序的用户，请在修复之前不要直接提交`git`的`issue`，也不要在社区讨论任何漏洞信息\n5. 所有奖励和声誉积分将提供给仅向ASRC提交其安全漏洞的上报者\n6. 安全漏洞奖励的解释权利归ASRC所有\n\n## 收集范围\n\n我们的主要收集漏洞类别是：\n\n* 服务器端请求伪造（`SSRF`）\n* `SQL`注入\n* 拒绝服务攻击\n* 远程执行代码（`RCE`）\n* XML外部实体攻击（`XXE`）\n* 访问控制问题（不安全的直接对象参考问题等）\n* 敏感目录遍历问题\n* 本地文件读取（`LFD`）\n* 敏感信息泄露（密钥、`Cookie`、`Session`等）\n\n## 奖励\n\n* 可直接导致严重问题的每个漏洞奖励7000元人民币\n* 存在限制及需要一定特殊环境下才能利用的问题将给予700-5600元人民币不等的奖励，比如需要用户主动点击才会触发的问题或需要admin权限\n* 只有在指定环境下才可以运行的利用将有可能被收纳但不给予奖励，或直接被忽略，比如只在`fastjson`+`linux`特定版本才会出现的问题\n\n## 不在收集范围的报告\n\n* 影响过时浏览器或平台用户的漏洞\n* `Self-XSS`\n* 会话固定\n* 内容欺骗\n* 缺少`cookie`标记\n* 混合内容警告\n* `SSL`/`TLS`问题\n* `Clickjacking`\n* 基于`Flash`的漏洞\n* 反射文件下载攻击（`RFD`）\n* 物理或社会工程攻击\n* 未验证自动化工具或扫描仪的结果\n* 登录/注销/未认证/低影响`CSRF`\n* 需要`MITM`或物理访问用户设备的攻击\n* 与网络协议或行业标准相关的问题\n* 不能用于直接攻击的错误信息泄露\n* 缺少与安全相关的`HTTP`标头等\n\n\n# Vulnerability Reward Program\n\n## Reporting\n\nIf you believe you have found any security (technical) vulnerability in the Program, you are welcomed to submit a vulnerability report to us at https://security.alibaba.com\nIn case of reporting any security vulnerability, please be noted that you may including following information (Qualified Reporting):\n\n* The git program URL and running version\n* A detailed description with necessary screenshots\n* Steps to reappearance the vulnerability and your advice to fix it\n* Other useful information\n\n## Processing\n\nASRC (Alibaba Security Response Center) will review and respond as quickly as possible to your submission, and keep you informed as we work to fix the vulnerability you submitted. We may contact you for further information if necessary.\n\n## Terms and Conditions\n\n1. ONLY technical vulnerabilities will be accepted and rated.\n2. With regarding to security reasons, reporters agree to cooperate with ASRC exclusively on the vulnerability he/she submitted and not disclose any information of vulnerability to any third-parties.\n3. In the case that more than one person report the same security vulnerability, the reward will be given to the first person who accomplish a Qualified Reporting.\n4. To protect users of the program, please do not directly submit issue on github or discuss anything with the community\n5. All Rewards and Reputation Credits are given to the reporters who submit his/her security vulnerabilities ONLY to ASRC.\n6. All rights for the security vulnerability rewards are reserved by ASRC.\n\n## Scope of Collecting\n\nThe main categories of vulnerabilities that we are sincerely looking for are:\n\n* Server-Side Request Forgery (`SSRF`)\n* SQL Injection\n* Denial of Service Attack\n* Remote Code Execution (`RCE`)\n* XML External Entity Attacks (`XXE`)\n* Access Control Issues (Insecure Direct Object Reference issues, etc.)\n* Directory Traversal Issues\n* Local File Disclosure (`LFD`)\n* Sensitive Information Leakage (Key, Cookie, Session etc.)\n\n## Reward\n\n* $1,000 for one valid report\n* $100-$800 for Vuls which is limited. For example, Vuls that need user interactions or administrator authority\n* Vuls which only work on the special version will be accepted but no reward, or directly rejected. For example, Vul runs only on a special linux version\n\n## Ineligible Reports\n\n* Vulnerabilities affecting users of outdated browsers or platforms\n* \"Self\" `XSS`\n* Session fixation\n* Content Spoofing\n* Missing cookie flags\n* Mixed content warnings\n* `SSL`/`TLS` best practices\n* Clickjacking/UI redressing\n* Flash-based vulnerabilities\n* Reflected file download attacks (`RFD`)\n* Physical or social engineering attacks\n* Unverified Results of automated tools or scanners\n* Login/logout/unauthenticated/low-impact `CSRF`\n* Attacks requiring MITM or physical access to a user's device\n* Issues related to networking protocols or industry standards\n* Error information disclosure that cannot be used to make a direct attack\n* Missing security-related `HTTP` headers which do not lead directly to a vulnerability\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "mvnw",
          "type": "blob",
          "size": 10.4150390625,
          "content": "#!/bin/sh\n# ----------------------------------------------------------------------------\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n# ----------------------------------------------------------------------------\n\n# ----------------------------------------------------------------------------\n# Apache Maven Wrapper startup batch script, version 3.3.2\n#\n# Optional ENV vars\n# -----------------\n#   JAVA_HOME - location of a JDK home dir, required when download maven via java source\n#   MVNW_REPOURL - repo url base for downloading maven distribution\n#   MVNW_USERNAME/MVNW_PASSWORD - user and password for downloading maven\n#   MVNW_VERBOSE - true: enable verbose log; debug: trace the mvnw script; others: silence the output\n# ----------------------------------------------------------------------------\n\nset -euf\n[ \"${MVNW_VERBOSE-}\" != debug ] || set -x\n\n# OS specific support.\nnative_path() { printf %s\\\\n \"$1\"; }\ncase \"$(uname)\" in\nCYGWIN* | MINGW*)\n  [ -z \"${JAVA_HOME-}\" ] || JAVA_HOME=\"$(cygpath --unix \"$JAVA_HOME\")\"\n  native_path() { cygpath --path --windows \"$1\"; }\n  ;;\nesac\n\n# set JAVACMD and JAVACCMD\nset_java_home() {\n  # For Cygwin and MinGW, ensure paths are in Unix format before anything is touched\n  if [ -n \"${JAVA_HOME-}\" ]; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ]; then\n      # IBM's JDK on AIX uses strange locations for the executables\n      JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n      JAVACCMD=\"$JAVA_HOME/jre/sh/javac\"\n    else\n      JAVACMD=\"$JAVA_HOME/bin/java\"\n      JAVACCMD=\"$JAVA_HOME/bin/javac\"\n\n      if [ ! -x \"$JAVACMD\" ] || [ ! -x \"$JAVACCMD\" ]; then\n        echo \"The JAVA_HOME environment variable is not defined correctly, so mvnw cannot run.\" >&2\n        echo \"JAVA_HOME is set to \\\"$JAVA_HOME\\\", but \\\"\\$JAVA_HOME/bin/java\\\" or \\\"\\$JAVA_HOME/bin/javac\\\" does not exist.\" >&2\n        return 1\n      fi\n    fi\n  else\n    JAVACMD=\"$(\n      'set' +e\n      'unset' -f command 2>/dev/null\n      'command' -v java\n    )\" || :\n    JAVACCMD=\"$(\n      'set' +e\n      'unset' -f command 2>/dev/null\n      'command' -v javac\n    )\" || :\n\n    if [ ! -x \"${JAVACMD-}\" ] || [ ! -x \"${JAVACCMD-}\" ]; then\n      echo \"The java/javac command does not exist in PATH nor is JAVA_HOME set, so mvnw cannot run.\" >&2\n      return 1\n    fi\n  fi\n}\n\n# hash string like Java String::hashCode\nhash_string() {\n  str=\"${1:-}\" h=0\n  while [ -n \"$str\" ]; do\n    char=\"${str%\"${str#?}\"}\"\n    h=$(((h * 31 + $(LC_CTYPE=C printf %d \"'$char\")) % 4294967296))\n    str=\"${str#?}\"\n  done\n  printf %x\\\\n $h\n}\n\nverbose() { :; }\n[ \"${MVNW_VERBOSE-}\" != true ] || verbose() { printf %s\\\\n \"${1-}\"; }\n\ndie() {\n  printf %s\\\\n \"$1\" >&2\n  exit 1\n}\n\ntrim() {\n  # MWRAPPER-139:\n  #   Trims trailing and leading whitespace, carriage returns, tabs, and linefeeds.\n  #   Needed for removing poorly interpreted newline sequences when running in more\n  #   exotic environments such as mingw bash on Windows.\n  printf \"%s\" \"${1}\" | tr -d '[:space:]'\n}\n\n# parse distributionUrl and optional distributionSha256Sum, requires .mvn/wrapper/maven-wrapper.properties\nwhile IFS=\"=\" read -r key value; do\n  case \"${key-}\" in\n  distributionUrl) distributionUrl=$(trim \"${value-}\") ;;\n  distributionSha256Sum) distributionSha256Sum=$(trim \"${value-}\") ;;\n  esac\ndone <\"${0%/*}/.mvn/wrapper/maven-wrapper.properties\"\n[ -n \"${distributionUrl-}\" ] || die \"cannot read distributionUrl property in ${0%/*}/.mvn/wrapper/maven-wrapper.properties\"\n\ncase \"${distributionUrl##*/}\" in\nmaven-mvnd-*bin.*)\n  MVN_CMD=mvnd.sh _MVNW_REPO_PATTERN=/maven/mvnd/\n  case \"${PROCESSOR_ARCHITECTURE-}${PROCESSOR_ARCHITEW6432-}:$(uname -a)\" in\n  *AMD64:CYGWIN* | *AMD64:MINGW*) distributionPlatform=windows-amd64 ;;\n  :Darwin*x86_64) distributionPlatform=darwin-amd64 ;;\n  :Darwin*arm64) distributionPlatform=darwin-aarch64 ;;\n  :Linux*x86_64*) distributionPlatform=linux-amd64 ;;\n  *)\n    echo \"Cannot detect native platform for mvnd on $(uname)-$(uname -m), use pure java version\" >&2\n    distributionPlatform=linux-amd64\n    ;;\n  esac\n  distributionUrl=\"${distributionUrl%-bin.*}-$distributionPlatform.zip\"\n  ;;\nmaven-mvnd-*) MVN_CMD=mvnd.sh _MVNW_REPO_PATTERN=/maven/mvnd/ ;;\n*) MVN_CMD=\"mvn${0##*/mvnw}\" _MVNW_REPO_PATTERN=/org/apache/maven/ ;;\nesac\n\n# apply MVNW_REPOURL and calculate MAVEN_HOME\n# maven home pattern: ~/.m2/wrapper/dists/{apache-maven-<version>,maven-mvnd-<version>-<platform>}/<hash>\n[ -z \"${MVNW_REPOURL-}\" ] || distributionUrl=\"$MVNW_REPOURL$_MVNW_REPO_PATTERN${distributionUrl#*\"$_MVNW_REPO_PATTERN\"}\"\ndistributionUrlName=\"${distributionUrl##*/}\"\ndistributionUrlNameMain=\"${distributionUrlName%.*}\"\ndistributionUrlNameMain=\"${distributionUrlNameMain%-bin}\"\nMAVEN_USER_HOME=\"${MAVEN_USER_HOME:-${HOME}/.m2}\"\nMAVEN_HOME=\"${MAVEN_USER_HOME}/wrapper/dists/${distributionUrlNameMain-}/$(hash_string \"$distributionUrl\")\"\n\nexec_maven() {\n  unset MVNW_VERBOSE MVNW_USERNAME MVNW_PASSWORD MVNW_REPOURL || :\n  exec \"$MAVEN_HOME/bin/$MVN_CMD\" \"$@\" || die \"cannot exec $MAVEN_HOME/bin/$MVN_CMD\"\n}\n\nif [ -d \"$MAVEN_HOME\" ]; then\n  verbose \"found existing MAVEN_HOME at $MAVEN_HOME\"\n  exec_maven \"$@\"\nfi\n\ncase \"${distributionUrl-}\" in\n*?-bin.zip | *?maven-mvnd-?*-?*.zip) ;;\n*) die \"distributionUrl is not valid, must match *-bin.zip or maven-mvnd-*.zip, but found '${distributionUrl-}'\" ;;\nesac\n\n# prepare tmp dir\nif TMP_DOWNLOAD_DIR=\"$(mktemp -d)\" && [ -d \"$TMP_DOWNLOAD_DIR\" ]; then\n  clean() { rm -rf -- \"$TMP_DOWNLOAD_DIR\"; }\n  trap clean HUP INT TERM EXIT\nelse\n  die \"cannot create temp dir\"\nfi\n\nmkdir -p -- \"${MAVEN_HOME%/*}\"\n\n# Download and Install Apache Maven\nverbose \"Couldn't find MAVEN_HOME, downloading and installing it ...\"\nverbose \"Downloading from: $distributionUrl\"\nverbose \"Downloading to: $TMP_DOWNLOAD_DIR/$distributionUrlName\"\n\n# select .zip or .tar.gz\nif ! command -v unzip >/dev/null; then\n  distributionUrl=\"${distributionUrl%.zip}.tar.gz\"\n  distributionUrlName=\"${distributionUrl##*/}\"\nfi\n\n# verbose opt\n__MVNW_QUIET_WGET=--quiet __MVNW_QUIET_CURL=--silent __MVNW_QUIET_UNZIP=-q __MVNW_QUIET_TAR=''\n[ \"${MVNW_VERBOSE-}\" != true ] || __MVNW_QUIET_WGET='' __MVNW_QUIET_CURL='' __MVNW_QUIET_UNZIP='' __MVNW_QUIET_TAR=v\n\n# normalize http auth\ncase \"${MVNW_PASSWORD:+has-password}\" in\n'') MVNW_USERNAME='' MVNW_PASSWORD='' ;;\nhas-password) [ -n \"${MVNW_USERNAME-}\" ] || MVNW_USERNAME='' MVNW_PASSWORD='' ;;\nesac\n\nif [ -z \"${MVNW_USERNAME-}\" ] && command -v wget >/dev/null; then\n  verbose \"Found wget ... using wget\"\n  wget ${__MVNW_QUIET_WGET:+\"$__MVNW_QUIET_WGET\"} \"$distributionUrl\" -O \"$TMP_DOWNLOAD_DIR/$distributionUrlName\" || die \"wget: Failed to fetch $distributionUrl\"\nelif [ -z \"${MVNW_USERNAME-}\" ] && command -v curl >/dev/null; then\n  verbose \"Found curl ... using curl\"\n  curl ${__MVNW_QUIET_CURL:+\"$__MVNW_QUIET_CURL\"} -f -L -o \"$TMP_DOWNLOAD_DIR/$distributionUrlName\" \"$distributionUrl\" || die \"curl: Failed to fetch $distributionUrl\"\nelif set_java_home; then\n  verbose \"Falling back to use Java to download\"\n  javaSource=\"$TMP_DOWNLOAD_DIR/Downloader.java\"\n  targetZip=\"$TMP_DOWNLOAD_DIR/$distributionUrlName\"\n  cat >\"$javaSource\" <<-END\n\tpublic class Downloader extends java.net.Authenticator\n\t{\n\t  protected java.net.PasswordAuthentication getPasswordAuthentication()\n\t  {\n\t    return new java.net.PasswordAuthentication( System.getenv( \"MVNW_USERNAME\" ), System.getenv( \"MVNW_PASSWORD\" ).toCharArray() );\n\t  }\n\t  public static void main( String[] args ) throws Exception\n\t  {\n\t    setDefault( new Downloader() );\n\t    java.nio.file.Files.copy( java.net.URI.create( args[0] ).toURL().openStream(), java.nio.file.Paths.get( args[1] ).toAbsolutePath().normalize() );\n\t  }\n\t}\n\tEND\n  # For Cygwin/MinGW, switch paths to Windows format before running javac and java\n  verbose \" - Compiling Downloader.java ...\"\n  \"$(native_path \"$JAVACCMD\")\" \"$(native_path \"$javaSource\")\" || die \"Failed to compile Downloader.java\"\n  verbose \" - Running Downloader.java ...\"\n  \"$(native_path \"$JAVACMD\")\" -cp \"$(native_path \"$TMP_DOWNLOAD_DIR\")\" Downloader \"$distributionUrl\" \"$(native_path \"$targetZip\")\"\nfi\n\n# If specified, validate the SHA-256 sum of the Maven distribution zip file\nif [ -n \"${distributionSha256Sum-}\" ]; then\n  distributionSha256Result=false\n  if [ \"$MVN_CMD\" = mvnd.sh ]; then\n    echo \"Checksum validation is not supported for maven-mvnd.\" >&2\n    echo \"Please disable validation by removing 'distributionSha256Sum' from your maven-wrapper.properties.\" >&2\n    exit 1\n  elif command -v sha256sum >/dev/null; then\n    if echo \"$distributionSha256Sum  $TMP_DOWNLOAD_DIR/$distributionUrlName\" | sha256sum -c >/dev/null 2>&1; then\n      distributionSha256Result=true\n    fi\n  elif command -v shasum >/dev/null; then\n    if echo \"$distributionSha256Sum  $TMP_DOWNLOAD_DIR/$distributionUrlName\" | shasum -a 256 -c >/dev/null 2>&1; then\n      distributionSha256Result=true\n    fi\n  else\n    echo \"Checksum validation was requested but neither 'sha256sum' or 'shasum' are available.\" >&2\n    echo \"Please install either command, or disable validation by removing 'distributionSha256Sum' from your maven-wrapper.properties.\" >&2\n    exit 1\n  fi\n  if [ $distributionSha256Result = false ]; then\n    echo \"Error: Failed to validate Maven distribution SHA-256, your Maven distribution might be compromised.\" >&2\n    echo \"If you updated your Maven version, you need to update the specified distributionSha256Sum property.\" >&2\n    exit 1\n  fi\nfi\n\n# unzip and move\nif command -v unzip >/dev/null; then\n  unzip ${__MVNW_QUIET_UNZIP:+\"$__MVNW_QUIET_UNZIP\"} \"$TMP_DOWNLOAD_DIR/$distributionUrlName\" -d \"$TMP_DOWNLOAD_DIR\" || die \"failed to unzip\"\nelse\n  tar xzf${__MVNW_QUIET_TAR:+\"$__MVNW_QUIET_TAR\"} \"$TMP_DOWNLOAD_DIR/$distributionUrlName\" -C \"$TMP_DOWNLOAD_DIR\" || die \"failed to untar\"\nfi\nprintf %s\\\\n \"$distributionUrl\" >\"$TMP_DOWNLOAD_DIR/$distributionUrlNameMain/mvnw.url\"\nmv -- \"$TMP_DOWNLOAD_DIR/$distributionUrlNameMain\" \"$MAVEN_HOME\" || [ -d \"$MAVEN_HOME\" ] || die \"fail to move MAVEN_HOME\"\n\nclean || :\nexec_maven \"$@\"\n"
        },
        {
          "name": "mvnw.cmd",
          "type": "blob",
          "size": 6.75,
          "content": "<# : batch portion\n@REM ----------------------------------------------------------------------------\n@REM Licensed to the Apache Software Foundation (ASF) under one\n@REM or more contributor license agreements.  See the NOTICE file\n@REM distributed with this work for additional information\n@REM regarding copyright ownership.  The ASF licenses this file\n@REM to you under the Apache License, Version 2.0 (the\n@REM \"License\"); you may not use this file except in compliance\n@REM with the License.  You may obtain a copy of the License at\n@REM\n@REM    http://www.apache.org/licenses/LICENSE-2.0\n@REM\n@REM Unless required by applicable law or agreed to in writing,\n@REM software distributed under the License is distributed on an\n@REM \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n@REM KIND, either express or implied.  See the License for the\n@REM specific language governing permissions and limitations\n@REM under the License.\n@REM ----------------------------------------------------------------------------\n\n@REM ----------------------------------------------------------------------------\n@REM Apache Maven Wrapper startup batch script, version 3.3.2\n@REM\n@REM Optional ENV vars\n@REM   MVNW_REPOURL - repo url base for downloading maven distribution\n@REM   MVNW_USERNAME/MVNW_PASSWORD - user and password for downloading maven\n@REM   MVNW_VERBOSE - true: enable verbose log; others: silence the output\n@REM ----------------------------------------------------------------------------\n\n@IF \"%__MVNW_ARG0_NAME__%\"==\"\" (SET __MVNW_ARG0_NAME__=%~nx0)\n@SET __MVNW_CMD__=\n@SET __MVNW_ERROR__=\n@SET __MVNW_PSMODULEP_SAVE=%PSModulePath%\n@SET PSModulePath=\n@FOR /F \"usebackq tokens=1* delims==\" %%A IN (`powershell -noprofile \"& {$scriptDir='%~dp0'; $script='%__MVNW_ARG0_NAME__%'; icm -ScriptBlock ([Scriptblock]::Create((Get-Content -Raw '%~f0'))) -NoNewScope}\"`) DO @(\n  IF \"%%A\"==\"MVN_CMD\" (set __MVNW_CMD__=%%B) ELSE IF \"%%B\"==\"\" (echo %%A) ELSE (echo %%A=%%B)\n)\n@SET PSModulePath=%__MVNW_PSMODULEP_SAVE%\n@SET __MVNW_PSMODULEP_SAVE=\n@SET __MVNW_ARG0_NAME__=\n@SET MVNW_USERNAME=\n@SET MVNW_PASSWORD=\n@IF NOT \"%__MVNW_CMD__%\"==\"\" (%__MVNW_CMD__% %*)\n@echo Cannot start maven from wrapper >&2 && exit /b 1\n@GOTO :EOF\n: end batch / begin powershell #>\n\n$ErrorActionPreference = \"Stop\"\nif ($env:MVNW_VERBOSE -eq \"true\") {\n  $VerbosePreference = \"Continue\"\n}\n\n# calculate distributionUrl, requires .mvn/wrapper/maven-wrapper.properties\n$distributionUrl = (Get-Content -Raw \"$scriptDir/.mvn/wrapper/maven-wrapper.properties\" | ConvertFrom-StringData).distributionUrl\nif (!$distributionUrl) {\n  Write-Error \"cannot read distributionUrl property in $scriptDir/.mvn/wrapper/maven-wrapper.properties\"\n}\n\nswitch -wildcard -casesensitive ( $($distributionUrl -replace '^.*/','') ) {\n  \"maven-mvnd-*\" {\n    $USE_MVND = $true\n    $distributionUrl = $distributionUrl -replace '-bin\\.[^.]*$',\"-windows-amd64.zip\"\n    $MVN_CMD = \"mvnd.cmd\"\n    break\n  }\n  default {\n    $USE_MVND = $false\n    $MVN_CMD = $script -replace '^mvnw','mvn'\n    break\n  }\n}\n\n# apply MVNW_REPOURL and calculate MAVEN_HOME\n# maven home pattern: ~/.m2/wrapper/dists/{apache-maven-<version>,maven-mvnd-<version>-<platform>}/<hash>\nif ($env:MVNW_REPOURL) {\n  $MVNW_REPO_PATTERN = if ($USE_MVND) { \"/org/apache/maven/\" } else { \"/maven/mvnd/\" }\n  $distributionUrl = \"$env:MVNW_REPOURL$MVNW_REPO_PATTERN$($distributionUrl -replace '^.*'+$MVNW_REPO_PATTERN,'')\"\n}\n$distributionUrlName = $distributionUrl -replace '^.*/',''\n$distributionUrlNameMain = $distributionUrlName -replace '\\.[^.]*$','' -replace '-bin$',''\n$MAVEN_HOME_PARENT = \"$HOME/.m2/wrapper/dists/$distributionUrlNameMain\"\nif ($env:MAVEN_USER_HOME) {\n  $MAVEN_HOME_PARENT = \"$env:MAVEN_USER_HOME/wrapper/dists/$distributionUrlNameMain\"\n}\n$MAVEN_HOME_NAME = ([System.Security.Cryptography.MD5]::Create().ComputeHash([byte[]][char[]]$distributionUrl) | ForEach-Object {$_.ToString(\"x2\")}) -join ''\n$MAVEN_HOME = \"$MAVEN_HOME_PARENT/$MAVEN_HOME_NAME\"\n\nif (Test-Path -Path \"$MAVEN_HOME\" -PathType Container) {\n  Write-Verbose \"found existing MAVEN_HOME at $MAVEN_HOME\"\n  Write-Output \"MVN_CMD=$MAVEN_HOME/bin/$MVN_CMD\"\n  exit $?\n}\n\nif (! $distributionUrlNameMain -or ($distributionUrlName -eq $distributionUrlNameMain)) {\n  Write-Error \"distributionUrl is not valid, must end with *-bin.zip, but found $distributionUrl\"\n}\n\n# prepare tmp dir\n$TMP_DOWNLOAD_DIR_HOLDER = New-TemporaryFile\n$TMP_DOWNLOAD_DIR = New-Item -Itemtype Directory -Path \"$TMP_DOWNLOAD_DIR_HOLDER.dir\"\n$TMP_DOWNLOAD_DIR_HOLDER.Delete() | Out-Null\ntrap {\n  if ($TMP_DOWNLOAD_DIR.Exists) {\n    try { Remove-Item $TMP_DOWNLOAD_DIR -Recurse -Force | Out-Null }\n    catch { Write-Warning \"Cannot remove $TMP_DOWNLOAD_DIR\" }\n  }\n}\n\nNew-Item -Itemtype Directory -Path \"$MAVEN_HOME_PARENT\" -Force | Out-Null\n\n# Download and Install Apache Maven\nWrite-Verbose \"Couldn't find MAVEN_HOME, downloading and installing it ...\"\nWrite-Verbose \"Downloading from: $distributionUrl\"\nWrite-Verbose \"Downloading to: $TMP_DOWNLOAD_DIR/$distributionUrlName\"\n\n$webclient = New-Object System.Net.WebClient\nif ($env:MVNW_USERNAME -and $env:MVNW_PASSWORD) {\n  $webclient.Credentials = New-Object System.Net.NetworkCredential($env:MVNW_USERNAME, $env:MVNW_PASSWORD)\n}\n[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12\n$webclient.DownloadFile($distributionUrl, \"$TMP_DOWNLOAD_DIR/$distributionUrlName\") | Out-Null\n\n# If specified, validate the SHA-256 sum of the Maven distribution zip file\n$distributionSha256Sum = (Get-Content -Raw \"$scriptDir/.mvn/wrapper/maven-wrapper.properties\" | ConvertFrom-StringData).distributionSha256Sum\nif ($distributionSha256Sum) {\n  if ($USE_MVND) {\n    Write-Error \"Checksum validation is not supported for maven-mvnd. `nPlease disable validation by removing 'distributionSha256Sum' from your maven-wrapper.properties.\"\n  }\n  Import-Module $PSHOME\\Modules\\Microsoft.PowerShell.Utility -Function Get-FileHash\n  if ((Get-FileHash \"$TMP_DOWNLOAD_DIR/$distributionUrlName\" -Algorithm SHA256).Hash.ToLower() -ne $distributionSha256Sum) {\n    Write-Error \"Error: Failed to validate Maven distribution SHA-256, your Maven distribution might be compromised. If you updated your Maven version, you need to update the specified distributionSha256Sum property.\"\n  }\n}\n\n# unzip and move\nExpand-Archive \"$TMP_DOWNLOAD_DIR/$distributionUrlName\" -DestinationPath \"$TMP_DOWNLOAD_DIR\" | Out-Null\nRename-Item -Path \"$TMP_DOWNLOAD_DIR/$distributionUrlNameMain\" -NewName $MAVEN_HOME_NAME | Out-Null\ntry {\n  Move-Item -Path \"$TMP_DOWNLOAD_DIR/$MAVEN_HOME_NAME\" -Destination $MAVEN_HOME_PARENT | Out-Null\n} catch {\n  if (! (Test-Path -Path \"$MAVEN_HOME\" -PathType Container)) {\n    Write-Error \"fail to move MAVEN_HOME\"\n  }\n} finally {\n  try { Remove-Item $TMP_DOWNLOAD_DIR -Recurse -Force | Out-Null }\n  catch { Write-Warning \"Cannot remove $TMP_DOWNLOAD_DIR\" }\n}\n\nWrite-Output \"MVN_CMD=$MAVEN_HOME/bin/$MVN_CMD\"\n"
        },
        {
          "name": "pom.xml",
          "type": "blob",
          "size": 28.0615234375,
          "content": "<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\t\t\t\t xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n\t<modelVersion>4.0.0</modelVersion>\n\n\t<groupId>com.alibaba.ttl3</groupId>\n\t<artifactId>ttl3-parent</artifactId>\n\t<version>3.x-SNAPSHOT</version>\n\t<packaging>pom</packaging>\n\t<name>${project.artifactId}</name>\n\t<description>\n\t\t📌 The missing Java™ std lib(simple &amp; 0-dependency) for framework/middleware, provide an enhanced\n\t\tInheritableThreadLocal that transmits values between threads even using thread pooling components.\n\t</description>\n\t<url>https://github.com/alibaba/transmittable-thread-local</url>\n\t<inceptionYear>2013</inceptionYear>\n\n\t<licenses>\n\t\t<license>\n\t\t\t<name>Apache 2</name>\n\t\t\t<url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>\n\t\t\t<distribution>repo</distribution>\n\t\t\t<comments>A business-friendly OSS license</comments>\n\t\t</license>\n\t</licenses>\n\t<scm>\n\t\t<connection>scm:git:git@github.com:alibaba/transmittable-thread-local.git</connection>\n\t\t<developerConnection>scm:git:git@github.com:alibaba/transmittable-thread-local.git</developerConnection>\n\t\t<url>https://github.com/alibaba/transmittable-thread-local</url>\n\t</scm>\n\t<issueManagement>\n\t\t<system>GitHub Issues</system>\n\t\t<url>https://github.com/alibaba/transmittable-thread-local/issues</url>\n\t</issueManagement>\n\t<ciManagement>\n\t\t<system>GitHub Actions</system>\n\t\t<url>https://github.com/alibaba/transmittable-thread-local/actions</url>\n\t</ciManagement>\n\t<organization>\n\t\t<name>Alibaba</name>\n\t\t<url>https://www.alibaba.com</url>\n\t</organization>\n\t<developers>\n\t\t<developer>\n\t\t\t<name>Jerry Lee</name>\n\t\t\t<id>oldratlee</id>\n\t\t\t<email>oldratlee(AT)gmail(DOT)com</email>\n\t\t\t<roles>\n\t\t\t\t<role>Developer</role>\n\t\t\t</roles>\n\t\t\t<timezone>+8</timezone>\n\t\t\t<url>https://github.com/oldratlee</url>\n\t\t\t<organization>Alibaba</organization>\n\t\t\t<organizationUrl>https://www.alibaba.com</organizationUrl>\n\t\t</developer>\n\t</developers>\n\n\t<modules>\n\t\t<module>ttl-core</module>\n\t\t<module>ttl-agent</module>\n\n\t\t<module>ttl-kotlin</module>\n\t\t<module>ttl2-compatible</module>\n\n\t\t<module>ttl-bom</module>\n\n\t\t<module>ttl-integrations/vertx4-ttl-integration</module>\n\t\t<module>ttl-integrations/vertx3-ttl-integration</module>\n\n\t\t<module>ttl-integrations/sample-ttl-agent-extension-transformlet</module>\n\t</modules>\n\n\t<properties>\n\t\t<maven.compiler.source>1.8</maven.compiler.source>\n\t\t<maven.compiler.target>${maven.compiler.source}</maven.compiler.target>\n\t\t<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n\t\t<!-- overridden by submodule that need skip deploy -->\n\t\t<maven.deploy.skip>false</maven.deploy.skip>\n\t\t<javadoc.ttl.base.link>\n\t\t\thttps://alibaba.github.io/transmittable-thread-local/apidocs/${project.version}\n\t\t</javadoc.ttl.base.link>\n\n\t\t<spotbugs.annotations.version>4.8.6</spotbugs.annotations.version>\n\t\t<jsr305.version>3.0.2</jsr305.version>\n\t\t<jetbrains.annotations.version>24.1.0</jetbrains.annotations.version>\n\n\t\t<kotlin.version>1.9.25</kotlin.version>\n\t\t<kotlin.compiler.jvmTarget>${maven.compiler.source}</kotlin.compiler.jvmTarget>\n\t\t<kotlin.coroutine.version>1.9.0</kotlin.coroutine.version>\n\t\t<!-- https://kotlin.github.io/dokka/1.7.10/user_guide/maven/usage/ -->\n\t\t<dokka.version>1.9.20</dokka.version>\n\t\t<dokka.link.jdk.version>8</dokka.link.jdk.version>\n\n\t\t<slf4j.version>2.0.7</slf4j.version>\n\n\t\t<!-- testing dependencies versions -->\n\t\t<junit5.version>5.11.0</junit5.version>\n\t\t<kotest.version>5.9.1</kotest.version>\n\n\t\t<!--\n\t\t\tslf4j simple logger configuration for test\n\n\t\t\tthe system properties are supported to configure the behavior of slf4j simple logger\n\t\t\thttps://www.slf4j.org/api/org/slf4j/simple/SimpleLogger.html\n\t\t-->\n\t\t<ttl.test.logger.level>warn</ttl.test.logger.level> <!-- overridden by maven -D options -->\n\t\t<argLine.slf4j.simple.logger.default.d.options>\n\t\t\t-Dorg.slf4j.simpleLogger.logFile=System.err\n\t\t\t-Dorg.slf4j.simpleLogger.defaultLogLevel=${ttl.test.logger.level}\n\t\t</argLine.slf4j.simple.logger.default.d.options>\n\t\t<argLine.slf4j.simple.logger.extra.d.options/> <!-- overridden by maven -D options -->\n\t\t<argLine.slf4j.simple.logger.d.options>\n\t\t\t${argLine.slf4j.simple.logger.default.d.options} ${argLine.slf4j.simple.logger.extra.d.options}\n\t\t</argLine.slf4j.simple.logger.d.options>\n\n\t\t<argLine>${argLine.slf4j.simple.logger.d.options}</argLine> <!-- overridden by profile -->\n\t</properties>\n\n\t<dependencies>\n\t\t<!-- QA libs -->\n\t\t<dependency>\n\t\t\t<groupId>com.github.spotbugs</groupId>\n\t\t\t<artifactId>spotbugs-annotations</artifactId>\n\t\t\t<optional>true</optional>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>com.google.code.findbugs</groupId>\n\t\t\t<artifactId>jsr305</artifactId>\n\t\t\t<optional>true</optional>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>org.jetbrains</groupId>\n\t\t\t<artifactId>annotations</artifactId>\n\t\t\t<optional>true</optional>\n\t\t</dependency>\n\n\t\t<!-- logging libs -->\n\t\t<dependency>\n\t\t\t<groupId>org.slf4j</groupId>\n\t\t\t<artifactId>slf4j-simple</artifactId>\n\t\t\t<scope>test</scope>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>io.github.microutils</groupId>\n\t\t\t<artifactId>kotlin-logging-jvm</artifactId>\n\t\t\t<scope>test</scope>\n\t\t</dependency>\n\n\t\t<!-- testing libs -->\n\t\t<dependency>\n\t\t\t<groupId>io.kotest</groupId>\n\t\t\t<artifactId>kotest-runner-junit4-jvm</artifactId>\n\t\t\t<scope>test</scope>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>io.kotest</groupId>\n\t\t\t<artifactId>kotest-runner-junit5-jvm</artifactId>\n\t\t\t<scope>test</scope>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>io.kotest</groupId>\n\t\t\t<artifactId>kotest-assertions-core-jvm</artifactId>\n\t\t\t<scope>test</scope>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>io.kotest</groupId>\n\t\t\t<artifactId>kotest-property-jvm</artifactId>\n\t\t\t<scope>test</scope>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>io.mockk</groupId>\n\t\t\t<artifactId>mockk-jvm</artifactId>\n\t\t\t<scope>test</scope>\n\t\t</dependency>\n\t\t<!--\n\t\t\tExecuting JUnit 4 and JUnit 5 tests in a same build\n\t\t\t\thttps://stackoverflow.com/a/47158584/922688\n\t\t-->\n\t\t<dependency>\n\t\t\t<!-- JUnit Jupiter Engine to depend on the JUnit5 engine and JUnit 5 API -->\n\t\t\t<groupId>org.junit.jupiter</groupId>\n\t\t\t<artifactId>junit-jupiter-engine</artifactId>\n\t\t\t<scope>test</scope>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<!-- JUnit Jupiter Engine to depend on the JUnit4 engine and JUnit 4 API  -->\n\t\t\t<groupId>org.junit.vintage</groupId>\n\t\t\t<artifactId>junit-vintage-engine</artifactId>\n\t\t\t<scope>test</scope>\n\t\t</dependency>\n\t</dependencies>\n\n\t<dependencyManagement>\n\t\t<dependencies>\n\t\t\t<!-- bom -->\n\t\t\t<dependency>\n\t\t\t\t<!-- https://github.com/raphw/byte-buddy/issues/1264 -->\n\t\t\t\t<groupId>net.bytebuddy</groupId>\n\t\t\t\t<artifactId>byte-buddy-parent</artifactId>\n\t\t\t\t<version>1.15.2</version>\n\t\t\t\t<type>pom</type>\n\t\t\t\t<scope>import</scope>\n\t\t\t</dependency>\n\t\t\t<dependency>\n\t\t\t\t<groupId>org.jetbrains.kotlin</groupId>\n\t\t\t\t<artifactId>kotlin-bom</artifactId>\n\t\t\t\t<version>${kotlin.version}</version>\n\t\t\t\t<type>pom</type>\n\t\t\t\t<scope>import</scope>\n\t\t\t</dependency>\n\t\t\t<dependency>\n\t\t\t\t<groupId>org.jetbrains.kotlinx</groupId>\n\t\t\t\t<artifactId>kotlinx-coroutines-bom</artifactId>\n\t\t\t\t<version>${kotlin.coroutine.version}</version>\n\t\t\t\t<type>pom</type>\n\t\t\t\t<scope>import</scope>\n\t\t\t</dependency>\n\t\t\t<dependency>\n\t\t\t\t<groupId>org.junit</groupId>\n\t\t\t\t<artifactId>junit-bom</artifactId>\n\t\t\t\t<version>${junit5.version}</version>\n\t\t\t\t<type>pom</type>\n\t\t\t\t<scope>import</scope>\n\t\t\t</dependency>\n\n\t\t\t<!--\n\t\t\t\tQA libs\n\t\t\t\tmake qa libs optional, 0-dependency and smaller deployment\n\t\t\t-->\n\t\t\t<dependency>\n\t\t\t\t<!--\n\t\t\t\t\tJSR305 is already Dormant status, so SpotBugs does not release jsr305 jar file.\n\t\t\t\t\tPlease continue using findbugs’ one.\n\t\t\t\t\tdepend on spotbugs-annotations instead.\n\t\t\t\t\thttps://spotbugs.readthedocs.io/en/stable/migration.html\n\t\t\t\t-->\n\t\t\t\t<groupId>com.github.spotbugs</groupId>\n\t\t\t\t<artifactId>spotbugs-annotations</artifactId>\n\t\t\t\t<version>${spotbugs.annotations.version}</version>\n\t\t\t\t<optional>true</optional>\n\t\t\t</dependency>\n\t\t\t<dependency>\n\t\t\t\t<groupId>com.google.code.findbugs</groupId>\n\t\t\t\t<artifactId>jsr305</artifactId>\n\t\t\t\t<version>${jsr305.version}</version>\n\t\t\t\t<optional>true</optional>\n\t\t\t</dependency>\n\t\t\t<dependency>\n\t\t\t\t<!-- https://www.jetbrains.com/help/idea/annotating-source-code.html -->\n\t\t\t\t<groupId>org.jetbrains</groupId>\n\t\t\t\t<artifactId>annotations</artifactId>\n\t\t\t\t<version>${jetbrains.annotations.version}</version>\n\t\t\t\t<optional>true</optional>\n\t\t\t</dependency>\n\n\t\t\t<dependency>\n\t\t\t\t<groupId>org.javassist</groupId>\n\t\t\t\t<artifactId>javassist</artifactId>\n\t\t\t\t<version>3.30.2-GA</version>\n\t\t\t\t<optional>true</optional>\n\t\t\t</dependency>\n\t\t\t<dependency>\n\t\t\t\t<groupId>org.apache.commons</groupId>\n\t\t\t\t<artifactId>commons-lang3</artifactId>\n\t\t\t\t<version>3.12.0</version>\n\t\t\t</dependency>\n\n\t\t\t<dependency>\n\t\t\t\t<groupId>io.reactivex.rxjava2</groupId>\n\t\t\t\t<artifactId>rxjava</artifactId>\n\t\t\t\t<version>2.2.21</version>\n\t\t\t</dependency>\n\t\t\t<dependency>\n\t\t\t\t<groupId>io.reactivex.rxjava2</groupId>\n\t\t\t\t<artifactId>rxkotlin</artifactId>\n\t\t\t\t<version>2.4.0</version>\n\t\t\t</dependency>\n\n\t\t\t<!-- logging libs -->\n\t\t\t<dependency>\n\t\t\t\t<groupId>org.slf4j</groupId>\n\t\t\t\t<artifactId>slf4j-api</artifactId>\n\t\t\t\t<version>${slf4j.version}</version>\n\t\t\t</dependency>\n\t\t\t<dependency>\n\t\t\t\t<groupId>org.slf4j</groupId>\n\t\t\t\t<artifactId>slf4j-simple</artifactId>\n\t\t\t\t<version>${slf4j.version}</version>\n\t\t\t\t<scope>test</scope>\n\t\t\t</dependency>\n\t\t\t<dependency>\n\t\t\t\t<groupId>io.github.microutils</groupId>\n\t\t\t\t<artifactId>kotlin-logging-jvm</artifactId>\n\t\t\t\t<version>3.0.0</version>\n\t\t\t</dependency>\n\n\t\t\t<!--\n\t\t\t\ttesting libs\n\t\t\t-->\n\t\t\t<!-- https://github.com/kotlintest/kotlintest -->\n\t\t\t<dependency>\n\t\t\t\t<groupId>io.kotest</groupId>\n\t\t\t\t<artifactId>kotest-runner-junit4-jvm</artifactId>\n\t\t\t\t<version>${kotest.version}</version>\n\t\t\t\t<scope>test</scope>\n\t\t\t</dependency>\n\t\t\t<dependency>\n\t\t\t\t<groupId>io.kotest</groupId>\n\t\t\t\t<artifactId>kotest-runner-junit5-jvm</artifactId>\n\t\t\t\t<version>${kotest.version}</version>\n\t\t\t\t<scope>test</scope>\n\t\t\t</dependency>\n\t\t\t<dependency>\n\t\t\t\t<groupId>io.kotest</groupId>\n\t\t\t\t<artifactId>kotest-assertions-core-jvm</artifactId>\n\t\t\t\t<version>${kotest.version}</version>\n\t\t\t\t<scope>test</scope>\n\t\t\t</dependency>\n\t\t\t<dependency>\n\t\t\t\t<groupId>io.kotest</groupId>\n\t\t\t\t<artifactId>kotest-property-jvm</artifactId>\n\t\t\t\t<version>${kotest.version}</version>\n\t\t\t\t<scope>test</scope>\n\t\t\t</dependency>\n\t\t\t<dependency>\n\t\t\t\t<groupId>io.mockk</groupId>\n\t\t\t\t<artifactId>mockk-jvm</artifactId>\n\t\t\t\t<version>1.13.7</version>\n\t\t\t\t<scope>test</scope>\n\t\t\t</dependency>\n\t\t</dependencies>\n\t</dependencyManagement>\n\n\t<distributionManagement>\n\t\t<snapshotRepository>\n\t\t\t<id>ossrh</id>\n\t\t\t<url>https://oss.sonatype.org/content/repositories/snapshots</url>\n\t\t</snapshotRepository>\n\t</distributionManagement>\n\n\t<build>\n\t\t<plugins>\n\t\t\t<plugin>\n\t\t\t\t<!--\n\t\t\t\t\tCompiling Kotlin and Java sources - Using Maven - Kotlin Programming Language\n\t\t\t\t\thttps://kotlinlang.org/docs/reference/using-maven.html#compiling-kotlin-and-java-sources\n\n\t\t\t\t\tMaking sure that the kotlin plugin is above the maven-compiler-plugin in your pom.xml file!\n\t\t\t\t-->\n\t\t\t\t<groupId>org.jetbrains.kotlin</groupId>\n\t\t\t\t<artifactId>kotlin-maven-plugin</artifactId>\n\t\t\t\t<executions>\n\t\t\t\t\t<execution>\n\t\t\t\t\t\t<id>compile</id>\n\t\t\t\t\t\t<goals>\n\t\t\t\t\t\t\t<goal>compile</goal>\n\t\t\t\t\t\t</goals>\n\t\t\t\t\t\t<configuration>\n\t\t\t\t\t\t\t<sourceDirs>\n\t\t\t\t\t\t\t\t<sourceDir>${project.basedir}/src/main/java</sourceDir>\n\t\t\t\t\t\t\t</sourceDirs>\n\t\t\t\t\t\t</configuration>\n\t\t\t\t\t</execution>\n\t\t\t\t\t<execution>\n\t\t\t\t\t\t<id>test-compile</id>\n\t\t\t\t\t\t<goals>\n\t\t\t\t\t\t\t<goal>test-compile</goal>\n\t\t\t\t\t\t</goals>\n\t\t\t\t\t\t<configuration>\n\t\t\t\t\t\t\t<sourceDirs>\n\t\t\t\t\t\t\t\t<sourceDir>${project.basedir}/src/test/java</sourceDir>\n\t\t\t\t\t\t\t</sourceDirs>\n\t\t\t\t\t\t</configuration>\n\t\t\t\t\t</execution>\n\t\t\t\t</executions>\n\t\t\t</plugin>\n\t\t\t<plugin>\n\t\t\t\t<artifactId>maven-compiler-plugin</artifactId>\n\t\t\t\t<executions>\n\t\t\t\t\t<!-- Replacing default-compile as it is treated specially by maven -->\n\t\t\t\t\t<execution>\n\t\t\t\t\t\t<id>default-compile</id>\n\t\t\t\t\t\t<phase>none</phase>\n\t\t\t\t\t</execution>\n\t\t\t\t\t<!-- Replacing default-testCompile as it is treated specially by maven -->\n\t\t\t\t\t<execution>\n\t\t\t\t\t\t<id>default-testCompile</id>\n\t\t\t\t\t\t<phase>none</phase>\n\t\t\t\t\t</execution>\n\t\t\t\t\t<execution>\n\t\t\t\t\t\t<id>java-compile</id>\n\t\t\t\t\t\t<phase>compile</phase>\n\t\t\t\t\t\t<goals>\n\t\t\t\t\t\t\t<goal>compile</goal>\n\t\t\t\t\t\t</goals>\n\t\t\t\t\t</execution>\n\t\t\t\t\t<execution>\n\t\t\t\t\t\t<id>java-test-compile</id>\n\t\t\t\t\t\t<phase>test-compile</phase>\n\t\t\t\t\t\t<goals>\n\t\t\t\t\t\t\t<goal>testCompile</goal>\n\t\t\t\t\t\t</goals>\n\t\t\t\t\t</execution>\n\t\t\t\t</executions>\n\t\t\t</plugin>\n\t\t\t<plugin>\n\t\t\t\t<artifactId>maven-enforcer-plugin</artifactId>\n\t\t\t\t<executions>\n\t\t\t\t\t<execution>\n\t\t\t\t\t\t<id>enforces</id>\n\t\t\t\t\t\t<goals>\n\t\t\t\t\t\t\t<goal>enforce</goal>\n\t\t\t\t\t\t</goals>\n\t\t\t\t\t\t<configuration>\n\t\t\t\t\t\t\t<rules>\n\t\t\t\t\t\t\t\t<!-- official docs: https://maven.apache.org/enforcer/enforcer-rules/requireMavenVersion.html -->\n\t\t\t\t\t\t\t\t<requireMavenVersion>\n\t\t\t\t\t\t\t\t\t<version>3.3.9</version>\n\t\t\t\t\t\t\t\t</requireMavenVersion>\n\t\t\t\t\t\t\t</rules>\n\t\t\t\t\t\t</configuration>\n\t\t\t\t\t</execution>\n\t\t\t\t</executions>\n\t\t\t</plugin>\n\t\t</plugins>\n\t\t<pluginManagement>\n\t\t\t<plugins>\n\t\t\t\t<plugin>\n\t\t\t\t\t<artifactId>maven-clean-plugin</artifactId>\n\t\t\t\t\t<version>3.4.0</version>\n\t\t\t\t</plugin>\n\t\t\t\t<plugin>\n\t\t\t\t\t<artifactId>maven-resources-plugin</artifactId>\n\t\t\t\t\t<version>3.3.1</version>\n\t\t\t\t</plugin>\n\t\t\t\t<plugin>\n\t\t\t\t\t<groupId>org.jetbrains.kotlin</groupId>\n\t\t\t\t\t<artifactId>kotlin-maven-plugin</artifactId>\n\t\t\t\t\t<version>${kotlin.version}</version>\n\t\t\t\t</plugin>\n\t\t\t\t<plugin>\n\t\t\t\t\t<artifactId>maven-compiler-plugin</artifactId>\n\t\t\t\t\t<version>3.13.0</version>\n\t\t\t\t</plugin>\n\t\t\t\t<plugin>\n\t\t\t\t\t<artifactId>maven-surefire-plugin</artifactId>\n\t\t\t\t\t<version>3.5.0</version>\n\t\t\t\t</plugin>\n\t\t\t\t<plugin>\n\t\t\t\t\t<artifactId>maven-jar-plugin</artifactId>\n\t\t\t\t\t<version>3.4.2</version>\n\t\t\t\t</plugin>\n\t\t\t\t<plugin>\n\t\t\t\t\t<artifactId>maven-shade-plugin</artifactId>\n\t\t\t\t\t<version>3.6.0</version>\n\t\t\t\t\t<configuration>\n\t\t\t\t\t\t<shadeSourcesContent>true</shadeSourcesContent>\n\t\t\t\t\t\t<dependencyReducedPomLocation>\n\t\t\t\t\t\t\t${project.build.directory}/dependency-reduced-pom.xml\n\t\t\t\t\t\t</dependencyReducedPomLocation>\n\t\t\t\t\t</configuration>\n\t\t\t\t</plugin>\n\t\t\t\t<plugin>\n\t\t\t\t\t<artifactId>maven-source-plugin</artifactId>\n\t\t\t\t\t<version>3.3.1</version>\n\t\t\t\t</plugin>\n\t\t\t\t<plugin>\n\t\t\t\t\t<artifactId>maven-javadoc-plugin</artifactId>\n\t\t\t\t\t<version>3.8.0</version>\n\t\t\t\t</plugin>\n\t\t\t\t<plugin>\n\t\t\t\t\t<groupId>org.jetbrains.dokka</groupId>\n\t\t\t\t\t<artifactId>dokka-maven-plugin</artifactId>\n\t\t\t\t\t<version>${dokka.version}</version>\n\t\t\t\t\t<executions>\n\t\t\t\t\t\t<execution>\n\t\t\t\t\t\t\t<phase>prepare-package</phase>\n\t\t\t\t\t\t\t<goals>\n\t\t\t\t\t\t\t\t<goal>javadocJar</goal>\n\t\t\t\t\t\t\t\t<goal>dokka</goal>\n\t\t\t\t\t\t\t</goals>\n\t\t\t\t\t\t</execution>\n\t\t\t\t\t</executions>\n\t\t\t\t\t<configuration>\n\t\t\t\t\t\t<jdkVersion>${dokka.link.jdk.version}</jdkVersion>\n\t\t\t\t\t</configuration>\n\t\t\t\t</plugin>\n\t\t\t\t<plugin>\n\t\t\t\t\t<artifactId>maven-gpg-plugin</artifactId>\n\t\t\t\t\t<version>3.2.7</version>\n\t\t\t\t</plugin>\n\t\t\t\t<plugin>\n\t\t\t\t\t<artifactId>maven-site-plugin</artifactId>\n\t\t\t\t\t<version>3.20.0</version>\n\t\t\t\t</plugin>\n\t\t\t\t<plugin>\n\t\t\t\t\t<artifactId>maven-install-plugin</artifactId>\n\t\t\t\t\t<version>3.1.3</version>\n\t\t\t\t</plugin>\n\t\t\t\t<plugin>\n\t\t\t\t\t<artifactId>maven-deploy-plugin</artifactId>\n\t\t\t\t\t<version>3.1.3</version>\n\t\t\t\t</plugin>\n\t\t\t\t<plugin>\n\t\t\t\t\t<artifactId>maven-enforcer-plugin</artifactId>\n\t\t\t\t\t<version>3.5.0</version>\n\t\t\t\t</plugin>\n\t\t\t\t<plugin>\n\t\t\t\t\t<groupId>io.github.git-commit-id</groupId>\n\t\t\t\t\t<artifactId>git-commit-id-maven-plugin</artifactId>\n\t\t\t\t\t<version>9.0.1</version>\n\t\t\t\t</plugin>\n\t\t\t\t<plugin>\n\t\t\t\t\t<groupId>com.github.spotbugs</groupId>\n\t\t\t\t\t<artifactId>spotbugs-maven-plugin</artifactId>\n\t\t\t\t\t<version>4.8.3.1</version>\n\t\t\t\t</plugin>\n\t\t\t\t<plugin>\n\t\t\t\t\t<groupId>org.jacoco</groupId>\n\t\t\t\t\t<artifactId>jacoco-maven-plugin</artifactId>\n\t\t\t\t\t<version>0.8.12</version>\n\t\t\t\t</plugin>\n\t\t\t\t<plugin>\n\t\t\t\t\t<!--\n\t\t\t\t\t\thttps://www.mojohaus.org/exec-maven-plugin/\n\t\t\t\t\t\thttps://www.mojohaus.org/exec-maven-plugin/exec-mojo.html\n\t\t\t\t\t-->\n\t\t\t\t\t<groupId>org.codehaus.mojo</groupId>\n\t\t\t\t\t<artifactId>exec-maven-plugin</artifactId>\n\t\t\t\t\t<version>3.4.1</version>\n\t\t\t\t\t<configuration>\n\t\t\t\t\t\t<executable>${java.home}/bin/java</executable>\n\t\t\t\t\t\t<classpathScope>test</classpathScope>\n\t\t\t\t\t\t<arguments>\n\t\t\t\t\t\t\t<argument>-Xmx1g</argument>\n\t\t\t\t\t\t\t<argument>-Xms256m</argument>\n\t\t\t\t\t\t\t<argument>-ea</argument>\n\t\t\t\t\t\t\t<argument>-server</argument>\n\t\t\t\t\t\t\t<argument>-Duser.language=en</argument>\n\t\t\t\t\t\t\t<argument>-Duser.country=US</argument>\n\n\t\t\t\t\t\t\t<argument>-classpath</argument>\n\t\t\t\t\t\t\t<classpath/>\n\n\t\t\t\t\t\t\t<argument>${exec.mainClass}</argument>\n\t\t\t\t\t\t</arguments>\n\t\t\t\t\t</configuration>\n\t\t\t\t</plugin>\n\t\t\t\t<plugin>\n\t\t\t\t\t<groupId>org.sonatype.plugins</groupId>\n\t\t\t\t\t<artifactId>nexus-staging-maven-plugin</artifactId>\n\t\t\t\t\t<version>1.7.0</version>\n\t\t\t\t</plugin>\n\t\t\t</plugins>\n\t\t</pluginManagement>\n\t</build>\n\n\t<profiles>\n\t\t<profile>\n\t\t\t<id>gen-src</id>\n\t\t\t<activation>\n\t\t\t\t<property>\n\t\t\t\t\t<name>performRelease</name>\n\t\t\t\t\t<value>true</value>\n\t\t\t\t</property>\n\t\t\t</activation>\n\t\t\t<build>\n\t\t\t\t<plugins>\n\t\t\t\t\t<plugin>\n\t\t\t\t\t\t<artifactId>maven-source-plugin</artifactId>\n\t\t\t\t\t</plugin>\n\t\t\t\t</plugins>\n\t\t\t</build>\n\t\t</profile>\n\t\t<profile>\n\t\t\t<id>gen-api-doc</id>\n\t\t\t<activation>\n\t\t\t\t<property>\n\t\t\t\t\t<name>performRelease</name>\n\t\t\t\t\t<value>true</value>\n\t\t\t\t</property>\n\t\t\t</activation>\n\t\t\t<properties>\n\t\t\t\t<javadoc.default.exclude.packages>\n\t\t\t\t\t*.internal:*.internal.*:*.internal.*.*:*.internal.*.*.*:*.internal.*.*.*.*\n\t\t\t\t</javadoc.default.exclude.packages>\n\t\t\t\t<!--\n\t\t\t\t\tApache Maven Javadoc Plugin – Configuring links and offlineLinks Parameters\n\t\t\t\t\thttps://maven.apache.org/plugins/maven-javadoc-plugin/examples/links-configuration.html\n\n\t\t\t\t\tmore infos about link setting:\n\t\t\t\t\tLinks to JSR 305 in Javadoc are broken https://github.com/google/guava/issues/2479\n\t\t\t\t\tFix links to javadoc.io for Maven Javadoc Plugin #2628 https://github.com/google/guava/pull/2628\n\t\t\t\t\tCan't link to JDK10 in Javadoc comments https://stackoverflow.com/questions/49457896\n\n\t\t\t\t\tAbout package-list vs.element-list\n\t\t\t\t\t- Can't link to JDK10 in Javadoc comments\n\t\t\t\t\t\thttps://stackoverflow.com/a/49498219/922688\n\t\t\t\t\t- Missing javadoc/package-list for release 5.1\n\t\t\t\t\t\thttps://github.com/gradle/gradle/issues/8183\n\t\t\t\t\t\thttps://github.com/gradle/gradle/commit/5e88351dd456a5252d21f3a7ad25bff1b62a2fd2\n\n\n\t\t\t\t\tUsing the linkoffline Option\n\t\t\t\t\thttps://docs.oracle.com/en/java/javase/21/javadoc/javadoc-command.html#GUID-51213F2C-6E01-4A03-A82A-17428A258A0F\n\t\t\t\t-->\n\t\t\t\t<javadoc.package.list.dir>${maven.multiModuleProjectDirectory}/src/package-list</javadoc.package.list.dir>\n\t\t\t\t<!-- dummy/repeated value, overridden by submodule -->\n\t\t\t\t<javadoc.extra.offlineLinks>-quiet</javadoc.extra.offlineLinks>\n\t\t\t</properties>\n\t\t\t<build>\n\t\t\t\t<plugins>\n\t\t\t\t\t<plugin>\n\t\t\t\t\t\t<!--\n\t\t\t\t\t\t\thttps://maven.apache.org/plugins/maven-javadoc-plugin/javadoc-mojo.html\n\t\t\t\t\t\t\thttps://docs.oracle.com/en/java/javase/21/javadoc/javadoc-command.html\n\t\t\t\t\t\t-->\n\t\t\t\t\t\t<artifactId>maven-javadoc-plugin</artifactId>\n\t\t\t\t\t\t<configuration>\n\t\t\t\t\t\t\t<source>8</source>\n\t\t\t\t\t\t\t<show>protected</show>\n\t\t\t\t\t\t\t<charset>UTF-8</charset>\n\t\t\t\t\t\t\t<encoding>UTF-8</encoding>\n\t\t\t\t\t\t\t<docencoding>UTF-8</docencoding>\n\t\t\t\t\t\t\t<quiet>true</quiet>\n\t\t\t\t\t\t\t<!--\n\t\t\t\t\t\t\t\tHow to disable Javadoc warnings in Maven Javadoc Plugin? - Stack Overflow\n\t\t\t\t\t\t\t\thttps://stackoverflow.com/questions/39616344\n\t\t\t\t\t\t\t-->\n\t\t\t\t\t\t\t<doclint>all,-missing</doclint>\n\t\t\t\t\t\t\t<overview>${project.basedir}/src/main/javadoc/overview.html</overview>\n\t\t\t\t\t\t\t<!-- https://maven.apache.org/plugins/maven-javadoc-plugin/examples/exclude-package-names.html -->\n\t\t\t\t\t\t\t<excludePackageNames>${javadoc.default.exclude.packages}</excludePackageNames>\n\t\t\t\t\t\t\t<!-- https://maven.apache.org/plugins/maven-javadoc-plugin/javadoc-mojo.html#detectOfflineLinks -->\n\t\t\t\t\t\t\t<detectOfflineLinks>false</detectOfflineLinks>\n\t\t\t\t\t\t\t<additionalOptions>\n\t\t\t\t\t\t\t\t<!--\n\t\t\t\t\t\t\t\t\tMaven javadoc Search redirects to \"/undefined/..\" url - Stack Overflow\n\t\t\t\t\t\t\t\t\thttps://stackoverflow.com/questions/52326318\n\t\t\t\t\t\t\t\t-->\n\t\t\t\t\t\t\t\t<additionalOption>-html5</additionalOption>\n\n\t\t\t\t\t\t\t\t<additionalOption>-linkoffline</additionalOption>\n\t\t\t\t\t\t\t\t<additionalOption>\n\t\t\t\t\t\t\t\t\thttps://www.javadoc.io/doc/com.github.spotbugs/spotbugs-annotations/${spotbugs.annotations.version}/\n\t\t\t\t\t\t\t\t</additionalOption>\n\t\t\t\t\t\t\t\t<additionalOption>${javadoc.package.list.dir}/spotbugs-annotations/</additionalOption>\n\t\t\t\t\t\t\t\t<additionalOption>-linkoffline</additionalOption>\n\t\t\t\t\t\t\t\t<additionalOption>\n\t\t\t\t\t\t\t\t\thttps://www.javadoc.io/doc/org.jetbrains/annotations/${jetbrains.annotations.version}/\n\t\t\t\t\t\t\t\t</additionalOption>\n\t\t\t\t\t\t\t\t<additionalOption>${javadoc.package.list.dir}/jetbrains-annotations/</additionalOption>\n\t\t\t\t\t\t\t\t<additionalOption>-linkoffline</additionalOption>\n\t\t\t\t\t\t\t\t<additionalOption>\n\t\t\t\t\t\t\t\t\thttps://www.javadoc.io/doc/com.google.code.findbugs/jsr305/${jsr305.version}/\n\t\t\t\t\t\t\t\t</additionalOption>\n\t\t\t\t\t\t\t\t<additionalOption>${javadoc.package.list.dir}/jsr305/</additionalOption>\n\t\t\t\t\t\t\t\t<additionalOption>-linkoffline</additionalOption>\n\t\t\t\t\t\t\t\t<additionalOption>https://docs.oracle.com/en/java/javase/21/docs/api/java.base/</additionalOption>\n\t\t\t\t\t\t\t\t<additionalOption>${javadoc.package.list.dir}/java/</additionalOption>\n\n\t\t\t\t\t\t\t\t<additionalOption>${javadoc.extra.offlineLinks}</additionalOption>\n\t\t\t\t\t\t\t</additionalOptions>\n\t\t\t\t\t\t\t<additionalJOptions>\n\t\t\t\t\t\t\t\t<additionalJOption>-J-Duser.language=en</additionalJOption>\n\t\t\t\t\t\t\t\t<additionalJOption>-J-Duser.country=US</additionalJOption>\n\t\t\t\t\t\t\t</additionalJOptions>\n\t\t\t\t\t\t</configuration>\n\t\t\t\t\t</plugin>\n\t\t\t\t</plugins>\n\t\t\t</build>\n\t\t</profile>\n\t\t<profile>\n\t\t\t<id>gen-sign</id>\n\t\t\t<activation>\n\t\t\t\t<property>\n\t\t\t\t\t<name>performRelease</name>\n\t\t\t\t\t<value>true</value>\n\t\t\t\t</property>\n\t\t\t</activation>\n\t\t\t<build>\n\t\t\t\t<plugins>\n\t\t\t\t\t<plugin>\n\t\t\t\t\t\t<artifactId>maven-gpg-plugin</artifactId>\n\t\t\t\t\t\t<executions>\n\t\t\t\t\t\t\t<execution>\n\t\t\t\t\t\t\t\t<id>sign-artifacts</id>\n\t\t\t\t\t\t\t\t<phase>verify</phase>\n\t\t\t\t\t\t\t\t<goals>\n\t\t\t\t\t\t\t\t\t<goal>sign</goal>\n\t\t\t\t\t\t\t\t</goals>\n\t\t\t\t\t\t\t</execution>\n\t\t\t\t\t\t</executions>\n\t\t\t\t\t</plugin>\n\t\t\t\t</plugins>\n\t\t\t</build>\n\t\t</profile>\n\t\t<profile>\n\t\t\t<id>lint</id>\n\t\t\t<activation>\n\t\t\t\t<property>\n\t\t\t\t\t<name>performRelease</name>\n\t\t\t\t\t<value>true</value>\n\t\t\t\t</property>\n\t\t\t</activation>\n\t\t\t<build>\n\t\t\t\t<plugins>\n\t\t\t\t\t<plugin>\n\t\t\t\t\t\t<!--\n\t\t\t\t\t\t\thttps://spotbugs.github.io/\n\t\t\t\t\t\t\thttps://spotbugs.readthedocs.io/en/latest/introduction.html\n\t\t\t\t\t\t\thttps://spotbugs.readthedocs.io/en/latest/maven.html\n\n\t\t\t\t\t\t\thttps://spotbugs.github.io/spotbugs-maven-plugin/check-mojo.html\n\t\t\t\t\t\t\t\tBinds by default to the lifecycle phase: verify.\n\n\t\t\t\t\t\t\tSpotbugs support @SuppressWarnings\n\t\t\t\t\t\t\thttps://github.com/spotbugs/spotbugs/issues/737#issuecomment-416118033\n\t\t\t\t\t\t-->\n\t\t\t\t\t\t<groupId>com.github.spotbugs</groupId>\n\t\t\t\t\t\t<artifactId>spotbugs-maven-plugin</artifactId>\n\t\t\t\t\t\t<executions>\n\t\t\t\t\t\t\t<execution>\n\t\t\t\t\t\t\t\t<phase>verify</phase>\n\t\t\t\t\t\t\t\t<goals>\n\t\t\t\t\t\t\t\t\t<goal>check</goal>\n\t\t\t\t\t\t\t\t</goals>\n\t\t\t\t\t\t\t</execution>\n\t\t\t\t\t\t</executions>\n\t\t\t\t\t</plugin>\n\t\t\t\t</plugins>\n\t\t\t</build>\n\t\t</profile>\n\t\t<profile>\n\t\t\t<id>gen-git-properties</id>\n\t\t\t<activation>\n\t\t\t\t<property>\n\t\t\t\t\t<name>performRelease</name>\n\t\t\t\t\t<value>true</value>\n\t\t\t\t</property>\n\t\t\t</activation>\n\t\t\t<build>\n\t\t\t\t<plugins>\n\t\t\t\t\t<!--\n\t\t\t\t\t\tMaven plugin which includes build-time git repository information into an POJO / *.properties).\n\t\t\t\t\t\tMake your apps tell you which version exactly they were built from! Priceless in large distributed deployments.\n\t\t\t\t\t\t\thttps://github.com/git-commit-id/git-commit-id-maven-plugin\n\t\t\t\t\t-->\n\t\t\t\t\t<plugin>\n\t\t\t\t\t\t<groupId>io.github.git-commit-id</groupId>\n\t\t\t\t\t\t<artifactId>git-commit-id-maven-plugin</artifactId>\n\t\t\t\t\t\t<executions>\n\t\t\t\t\t\t\t<execution>\n\t\t\t\t\t\t\t\t<id>get-the-git-infos</id>\n\t\t\t\t\t\t\t\t<goals>\n\t\t\t\t\t\t\t\t\t<goal>revision</goal>\n\t\t\t\t\t\t\t\t</goals>\n\t\t\t\t\t\t\t</execution>\n\t\t\t\t\t\t\t<execution>\n\t\t\t\t\t\t\t\t<id>validate-the-git-infos</id>\n\t\t\t\t\t\t\t\t<goals>\n\t\t\t\t\t\t\t\t\t<goal>validateRevision</goal>\n\t\t\t\t\t\t\t\t</goals>\n\t\t\t\t\t\t\t</execution>\n\t\t\t\t\t\t</executions>\n\t\t\t\t\t\t<configuration>\n\t\t\t\t\t\t\t<validationProperties>\n\t\t\t\t\t\t\t\t<!-- verify that the current repository is not dirty -->\n\t\t\t\t\t\t\t\t<validationProperty>\n\t\t\t\t\t\t\t\t\t<name>validating git dirty</name>\n\t\t\t\t\t\t\t\t\t<value>${git.dirty}</value>\n\t\t\t\t\t\t\t\t\t<shouldMatchTo>false</shouldMatchTo>\n\t\t\t\t\t\t\t\t</validationProperty>\n\t\t\t\t\t\t\t</validationProperties>\n\t\t\t\t\t\t\t<generateGitPropertiesFile>true</generateGitPropertiesFile>\n\t\t\t\t\t\t\t<generateGitPropertiesFilename>\n\t\t\t\t\t\t\t\t${project.build.outputDirectory}/META-INF/scm/${project.groupId}/${project.artifactId}/git.properties\n\t\t\t\t\t\t\t</generateGitPropertiesFilename>\n\t\t\t\t\t\t</configuration>\n\t\t\t\t\t</plugin>\n\t\t\t\t</plugins>\n\t\t\t</build>\n\t\t</profile>\n\t\t<profile>\n\t\t\t<id>gen-code-cov</id>\n\t\t\t<activation>\n\t\t\t\t<property>\n\t\t\t\t\t<!-- https://docs.github.com/en/actions/learn-github-actions/variables#default-environment-variables -->\n\t\t\t\t\t<name>env.CI</name>\n\t\t\t\t\t<value>true</value>\n\t\t\t\t</property>\n\t\t\t</activation>\n\t\t\t<build>\n\t\t\t\t<plugins>\n\t\t\t\t\t<plugin>\n\t\t\t\t\t\t<!-- for codecov.io -->\n\t\t\t\t\t\t<!-- config example: https://github.com/codecov/example-java -->\n\t\t\t\t\t\t<!-- plugin docs: https://eclemma.org/jacoco/trunk/doc/ -->\n\t\t\t\t\t\t<groupId>org.jacoco</groupId>\n\t\t\t\t\t\t<artifactId>jacoco-maven-plugin</artifactId>\n\t\t\t\t\t\t<executions>\n\t\t\t\t\t\t\t<execution>\n\t\t\t\t\t\t\t\t<goals>\n\t\t\t\t\t\t\t\t\t<goal>prepare-agent</goal>\n\t\t\t\t\t\t\t\t</goals>\n\t\t\t\t\t\t\t</execution>\n\t\t\t\t\t\t\t<execution>\n\t\t\t\t\t\t\t\t<id>report</id>\n\t\t\t\t\t\t\t\t<phase>test</phase>\n\t\t\t\t\t\t\t\t<goals>\n\t\t\t\t\t\t\t\t\t<goal>report</goal>\n\t\t\t\t\t\t\t\t</goals>\n\t\t\t\t\t\t\t</execution>\n\t\t\t\t\t\t</executions>\n\t\t\t\t\t</plugin>\n\t\t\t\t</plugins>\n\t\t\t</build>\n\t\t</profile>\n\t\t<profile>\n\t\t\t<id>enforce-when-release</id>\n\t\t\t<activation>\n\t\t\t\t<property>\n\t\t\t\t\t<name>performRelease</name>\n\t\t\t\t\t<value>true</value>\n\t\t\t\t</property>\n\t\t\t</activation>\n\t\t\t<build>\n\t\t\t\t<plugins>\n\t\t\t\t\t<plugin>\n\t\t\t\t\t\t<artifactId>maven-enforcer-plugin</artifactId>\n\t\t\t\t\t\t<executions>\n\t\t\t\t\t\t\t<execution>\n\t\t\t\t\t\t\t\t<id>enforces</id>\n\t\t\t\t\t\t\t\t<goals>\n\t\t\t\t\t\t\t\t\t<goal>enforce</goal>\n\t\t\t\t\t\t\t\t</goals>\n\t\t\t\t\t\t\t\t<configuration>\n\t\t\t\t\t\t\t\t\t<rules>\n\t\t\t\t\t\t\t\t\t\t<!--\n\t\t\t\t\t\t\t\t\t\t\tadd maven-enforcer-plugin to make sure the right jdk is used\n\t\t\t\t\t\t\t\t\t\t\thttps://stackoverflow.com/a/18420462/922688\n\t\t\t\t\t\t\t\t\t\t-->\n\t\t\t\t\t\t\t\t\t\t<requireJavaVersion>\n\t\t\t\t\t\t\t\t\t\t\t<version>17</version>\n\t\t\t\t\t\t\t\t\t\t</requireJavaVersion>\n\t\t\t\t\t\t\t\t\t\t<!-- https://maven.apache.org/enforcer/enforcer-rules/requireProperty.html -->\n\t\t\t\t\t\t\t\t\t\t<requireProperty>\n\t\t\t\t\t\t\t\t\t\t\t<property>project.version</property>\n\t\t\t\t\t\t\t\t\t\t\t<regex>^\\d\\.\\d+\\.\\d+(-(Alpha|Beta|RC)\\d+)?$|^\\d(\\.\\d+)?\\.(\\d+|x)-SNAPSHOT$</regex>\n\t\t\t\t\t\t\t\t\t\t\t<regexMessage>\"Project version(${project.version}) format is invalid!\"</regexMessage>\n\t\t\t\t\t\t\t\t\t\t</requireProperty>\n\t\t\t\t\t\t\t\t\t\t<enforceBytecodeVersion>\n\t\t\t\t\t\t\t\t\t\t\t<maxJdkVersion>${maven.compiler.source}</maxJdkVersion>\n\t\t\t\t\t\t\t\t\t\t</enforceBytecodeVersion>\n\t\t\t\t\t\t\t\t\t</rules>\n\t\t\t\t\t\t\t\t</configuration>\n\t\t\t\t\t\t\t</execution>\n\t\t\t\t\t\t</executions>\n\t\t\t\t\t\t<dependencies>\n\t\t\t\t\t\t\t<dependency>\n\t\t\t\t\t\t\t\t<groupId>org.codehaus.mojo</groupId>\n\t\t\t\t\t\t\t\t<artifactId>extra-enforcer-rules</artifactId>\n\t\t\t\t\t\t\t\t<version>1.8.0</version>\n\t\t\t\t\t\t\t</dependency>\n\t\t\t\t\t\t</dependencies>\n\t\t\t\t\t</plugin>\n\t\t\t\t</plugins>\n\t\t\t</build>\n\t\t</profile>\n\t\t<profile>\n\t\t\t<id>deploy-settings</id>\n\t\t\t<activation>\n\t\t\t\t<property>\n\t\t\t\t\t<name>performRelease</name>\n\t\t\t\t\t<value>true</value>\n\t\t\t\t</property>\n\t\t\t</activation>\n\t\t\t<build>\n\t\t\t\t<plugins>\n\t\t\t\t\t<plugin>\n\t\t\t\t\t\t<groupId>org.sonatype.plugins</groupId>\n\t\t\t\t\t\t<artifactId>nexus-staging-maven-plugin</artifactId>\n\t\t\t\t\t\t<extensions>true</extensions>\n\t\t\t\t\t\t<!--\n\t\t\t\t\t\t\tIn multi-module builds using the deploy-at-end feature,\n\t\t\t\t\t\t\tthe deployment of all components is performed in the last module based on the reactor order.\n\t\t\t\t\t\t\tIf this property is set to true in the last module,\n\t\t\t\t\t\t\tall staging deployment for all modules will be skipped.\n\t\t\t\t\t\t\tso, we'll config nexus deploy after every moudle's deploy phase\n\n\t\t\t\t\t\t\tsee: https://github.com/sonatype/nexus-maven-plugins/tree/master/staging/maven-plugin#configuring-the-plugin\n\t\t\t\t\t\t-->\n\t\t\t\t\t\t<configuration>\n\t\t\t\t\t\t\t<serverId>ossrh</serverId>\n\t\t\t\t\t\t\t<nexusUrl>https://oss.sonatype.org/</nexusUrl>\n\t\t\t\t\t\t\t<autoReleaseAfterClose>true</autoReleaseAfterClose>\n\t\t\t\t\t\t\t<!--\n\t\t\t\t\t\t\t\tIf you are deploying to Maven Central, it is the Nexus Staging Plugin that is\n\t\t\t\t\t\t\t\tdoing the deployment instead of the Deploy plugin,\n\t\t\t\t\t\t\t\tso the configuration of the deploy plugin has no effect.\n\t\t\t\t\t\t\t\tTo make the Nexus deploy plugin skip, set skipNexusStagingDeployMojo\n\t\t\t\t\t\t\t\tin its configuration to true.\n\n\t\t\t\t\t\t\t\tsee: https://stackoverflow.com/questions/59552549/preventing-maven-modules-from-being-deployed\n\t\t\t\t\t\t\t-->\n\t\t\t\t\t\t\t<skipNexusStagingDeployMojo>${maven.deploy.skip}</skipNexusStagingDeployMojo>\n\t\t\t\t\t\t</configuration>\n\t\t\t\t\t</plugin>\n\t\t\t\t</plugins>\n\t\t\t</build>\n\t\t</profile>\n\t</profiles>\n</project>\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "ttl-agent",
          "type": "tree",
          "content": null
        },
        {
          "name": "ttl-bom",
          "type": "tree",
          "content": null
        },
        {
          "name": "ttl-core",
          "type": "tree",
          "content": null
        },
        {
          "name": "ttl-integrations",
          "type": "tree",
          "content": null
        },
        {
          "name": "ttl-kotlin",
          "type": "tree",
          "content": null
        },
        {
          "name": "ttl2-compatible",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}