{
  "metadata": {
    "timestamp": 1736708654614,
    "page": 40,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "apache/cassandra",
      "stars": 8961,
      "defaultBranch": "trunk",
      "files": [
        {
          "name": ".asf.yaml",
          "type": "blob",
          "size": 1.1943359375,
          "content": "# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n\nnotifications:\n  commits:      commits@cassandra.apache.org\n  issues:       commits@cassandra.apache.org\n  pullrequests: pr@cassandra.apache.org\n  jira_options: link worklog\n\ngithub:\n  description: \"Apache CassandraÂ®\"\n  homepage: https://cassandra.apache.org/\n  enabled_merge_buttons:\n    squash: false\n    merge: false\n    rebase: true\n  features:\n    wiki: false\n    issues: false\n    projects: false\n  autolink_jira:\n    - CASSANDRA\n"
        },
        {
          "name": ".build",
          "type": "tree",
          "content": null
        },
        {
          "name": ".circleci",
          "type": "tree",
          "content": null
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.4541015625,
          "content": ".gitignore\n\n# C*\nbuild\nbuild/\nsrc/gen-java/\nsrc/resources/org/apache/cassandra/config/\nlogs/\ndata/\n!test/data\nconf/hotspot_compiler\ndoc/cql3/CQL.html\ndoc/build/\nlib/\npylib/src/\n**/cqlshlib.xml\npylib/cqlshlib/serverversion.py\n!lib/cassandra-driver-internal-only-*.zip\n!lib/puresasl-*.zip\n!lib/harry-0.0.2-internal-20221121.14211-2.jar\n\n# C* debs\nbuild-stamp\nbuild.properties\ndebian/cassandra*debhelper*\ndebian/cassandra*.substvars\ndebian/cassandra/\ndebian/cassandra-tools/\ndebian/files\n\n# gitignore doesn't help with modified files - you may wish to:\n#   git update-index --assume-unchanged test/data/serialization/2.0/db.RowMutation.bin\n# to undo:\n#   git update-index --no-assume-unchanged test/data/serialization/2.0/db.RowMutation.bin\n\n# IntelliJ\n.idea/\n*.eml\n**/*.iml\n*.ipr\n*.iws\n\n# Eclipse\n.classpath\n.project\n.metadata\n.settings/\nlocal.properties\n\n# Cscope\ncscope.*\n\n# NetBeans\nnbbuild/\nnbdist/\nide/nbproject/private\nnb-configuration.xml\nnbactions.xml\n\n# Maven, etc.\nout/\ntarget/\n\n# General\n**/__pycache__\n*.pyc\n*~\n*.bak\n*.sw[o,p]\n*.tmp\n.DS_Store\nThumbs.db\n.ccm/\n\n**/.ant-targets-build.xml\n.ant_targets\n\n# Generated files from the documentation\ndoc/modules/cassandra/pages/managing/configuration/cass_yaml_file.adoc\ndoc/modules/cassandra/pages/managing/tools/nodetool/\ndoc/modules/cassandra/examples/TEXT/NODETOOL/\n\n# Python virtual environment\nvenv/\n\n# build-scripts will put cassandra-builds into the directory\ncassandra-builds/\ncassandra-dtest/\n\nconf/triggers/trigger-example.jar\n"
        },
        {
          "name": ".jenkins",
          "type": "tree",
          "content": null
        },
        {
          "name": "CASSANDRA-14092.txt",
          "type": "blob",
          "size": 6.1767578125,
          "content": "CASSANDRA-14092: MAXIMUM TTL EXPIRATION DATE\n---------------------------------------------\n\nThe maximum expiration timestamp that can be represented by the storage engine has been raised to\n2106-02-07T06:28:13+00:00 from the previous 2038-01-19T03:14:06+00:00, which means that INSERTS using \nTTL that would expire after this date are not currently supported. Notice that on previous versions <5.0 \nor when 5.0 is ran in compatibility mode (<=\"oa\" sstable formats) the limit stays at at 2038-01-19T03:14:06+00:00.\n\nThere is a new yaml property storage_compatibility_mode that determines the\nCassandra major version we want to stay compatible with. Its default is CASSANDRA_4, which means that\nthe node sstables, commitlog, hints and messaging version will stay compatible with Cassandra 4.x,\n2038 will still be the limit, and it will be possible to rollback to the previous version. To upgrade:\n - Do a rolling upgrade to 5.0 where 2038 will still be the limit. At this point, the node won't write\n anything incompatible with Cassandra 4.x, and you would still be able to rollback to that version.\n - Do a rolling restart setting storage_compatibility_mode=UPGRADING. Once all nodes\n are in storage version 5, 2106 will become the new limit.\n - Do a rolling restart setting storage_compatibility_mode=NONE. Now mixed\n 2038 and 2106 nodes are no longer possible.\nNotice the yaml property needs to be set all the time for all executables and tools. It\nwill be removed in future versions when 2038 nodes are no longer possible.\n\n# Expiration Date Overflow Policy\n\nWe plan to lift this limitation in newer versions, but while the fix is not available,\noperators can decide which policy to apply when dealing with inserts with TTL exceeding\nthe maximum supported expiration date:\n  -     REJECT: this is the default policy and will reject any requests with expiration\n                date timestamp after 2106-02-07T06:28:13+00:00 or 2038-01-19T03:14:06+00:00.\n  -        CAP: any insert with TTL expiring after 2106-02-07T06:28:13+00:00 will expire on\n                2106-02-07T06:28:13+00:00 or 2038-01-19T03:14:06+00:00 and the client will receive a warning.\n  - CAP_NOWARN: same as previous, except that the client warning will not be emitted.\n\nThese policies may be specified via the -Dcassandra.expiration_date_overflow_policy=POLICY\nstartup option in the jvm.options configuration file.\n\n# Potential data loss on earlier versions\n\nPrior to 3.0.16 (3.0.X) and 3.11.2 (3.11.x), there was no protection against\nINSERTS with TTL expiring after the maximum supported date, causing the expiration\ntime field to overflow and the records to expire immediately. Expired records due\nto overflow will not be queryable and will be permanently removed after a compaction.\n\n2.1.X, 2.2.X and earlier series are not subject to this bug when assertions are enabled\nsince an AssertionError is thrown during INSERT when the expiration time field overflows\non these versions. When assertions are disabled then it is possible to INSERT entries\nwith overflowed local expiration time and even the earlier versions are subject to data\nloss due to this bug.\n\nOn versions < 5.0 the overflow limit was at 2038-01-19T03:14:06+00:00 so this issue \nonly affected INSERTs with very large TTLs, close to the maximum allowed value\nof 630720000 seconds (20 years), starting from 2018-01-19T03:14:06+00:00. As time progresses,\nthe maximum supported TTL will be gradually reduced as the maximum expiration date approaches.\nFor instance, a user on an affected version on 2028-01-19T03:14:06 with a TTL of 10 years\nwill be affected by this bug, so we urge users of very large TTLs to upgrade to a version\nwhere this issue is addressed as soon as possible.\n\nOn versions >= 5.0 this limit has been raised to 2106-02-07T06:28:13+00:00.\n\n# Data Recovery\n\nSSTables from Cassandra versions prior to 2.1.20/2.2.12/3.0.16/3.11.2 containing entries\nwith overflowed expiration time that were backed up or did not go through compaction can\nbe recovered by reinserting overflowed entries with a valid expiration time and a higher\ntimestamp, since tombstones may have been generated with the original timestamp.\n\nTo find out if an SSTable has an entry with overflowed expiration, inspect it with the\n'sstablemetadata' tool and look for a negative \"Minimum local deletion time\" field. SSTables\nin this condition should be backed up immediately, as they are subject to data loss during\ncompaction.\n\nA \"--reinsert-overflowed-ttl\" option was added to scrub to rewrite SSTables containing\nrows with overflowed expiration time with the maximum expiration date of\n2038-01-19T03:14:06+00:00 and the original timestamp + 1 (ms). Two methods are offered\nfor recovery of SSTables via scrub:\n\n- Offline scrub:\n   - Clone the data directory tree to another location, keeping only the folders and the\n     contents of the system tables.\n   - Clone the configuration directory to another location, setting the data_file_directories\n     property to the cloned data directory in the cloned cassandra.yaml.\n   - Copy the affected SSTables to the cloned data location of the affected table.\n   - Set the environment variable CASSANDRA_CONF=<cloned configuration directory>.\n   - Execute \"sstablescrub --reinsert-overflowed-ttl <keyspace> <table>\".\n         WARNING: not specifying --reinsert-overflowed-ttl is equivalent to a single-sstable\n         compaction, so the data with overflowed will be removed - make sure to back up\n         your SSTables before running scrub.\n   - Once the scrub is completed, copy the resulting SSTables to the original data directory.\n   - Execute \"nodetool refresh\" in a live node to load the recovered SSTables.\n\n- Online scrub:\n   - Disable compaction on the node with \"nodetool disableautocompaction\" - this step is crucial\n     as otherwise, the data may be removed permanently during compaction.\n   - Copy the SSTables containing entries with overflowed expiration time to the data directory.\n   - run \"nodetool refresh\" to load the SSTables.\n   - run \"nodetool scrub --reinsert-overflowed-ttl <keyspace> <table>\".\n   - Re-enable compactions after verifying that scrub recovered the missing entries.\n\nSee https://issues.apache.org/jira/browse/CASSANDRA-14092 and https://issues.apache.org/jira/browse/CASSANDRA-14227 for more details about this issue.\n"
        },
        {
          "name": "CHANGES.txt",
          "type": "blob",
          "size": 504.8916015625,
          "content": "5.1\n * Support audit logging for JMX operations (CASSANDRA-20128)\n * Enable sorting of nodetool status output (CASSANDRA-20104)\n * Support downgrading after CMS is initialized (CASSANDRA-20145)\n * Deprecate IEndpointSnitch (CASSANDRA-19488)\n * Check presence of a snapshot in a case-insensitive manner on macOS platform to prevent hardlinking failures (CASSANDRA-20146)\n * Enable JMX server configuration to be in cassandra.yaml (CASSANDRA-11695)\n * Parallelized UCS compactions (CASSANDRA-18802)\n * Avoid prepared statement invalidation race when committing schema changes (CASSANDRA-20116)\n * Restore optimization in MultiCBuilder around building one clustering (CASSANDRA-20129)\n * Consolidate all snapshot management to SnapshotManager and introduce SnapshotManagerMBean (CASSANDRA-18111)\n * Fix RequestFailureReason constants codes (CASSANDRA-20126)\n * Introduce SSTableSimpleScanner for compaction (CASSANDRA-20092)\n * Include column drop timestamp in alter table transformation (CASSANDRA-18961)\n * Make JMX SSL configurable in cassandra.yaml (CASSANDRA-18508)\n * Fix cqlsh CAPTURE command to save query results without trace details when TRACING is ON (CASSANDRA-19105)\n * Optionally prevent tombstone purging during repair (CASSANDRA-20071)\n * Add post-filtering support for the IN operator in SAI queries (CASSANDRA-20025)\n * Donât finish ongoing decommission and move operations during startup (CASSANDRA-20040)\n * Nodetool reconfigure cms has correct return code when streaming fails (CASSANDRA-19972)\n * Reintroduce RestrictionSet#iterator() optimization around multi-column restrictions (CASSANDRA-20034)\n * Explicitly localize strings to Locale.US for internal implementation (CASSANDRA-19953)\n * Add -H option for human-friendly output in nodetool compactionhistory (CASSANDRA-20015)\n * Fix type check for referenced duration type for nested types (CASSANDRA-19890)\n * In simulation tests, correctly set the tokens of replacement nodes (CASSANDRA-19997)\n * During TCM upgrade, retain all properties of existing system tables (CASSANDRA-19992)\n * Properly cancel in-flight futures and reject requests in EpochAwareDebounce during shutdown (CASSANDRA-19848)\n * Provide clearer exception message on failing commitlog_disk_access_mode combinations (CASSANDRA-19812)\n * Add total space used for a keyspace to nodetool tablestats (CASSANDRA-19671)\n * Ensure Relation#toRestriction() handles ReversedType properly (CASSANDRA-19950)\n * Add JSON and YAML output option to nodetool gcstats (CASSANDRA-19771)\n * Introduce metadata serialization version V4 (CASSANDRA-19970)\n * Allow CMS reconfiguration to work around DOWN nodes (CASSANDRA-19943)\n * Make TableParams.Serializer set allowAutoSnapshots and incrementalBackups (CASSANDRA-19954)\n * Make sstabledump possible to show tombstones only (CASSANDRA-19939)\n * Ensure that RFP queries potentially stale replicas even with only key columns in the row filter (CASSANDRA-19938)\n * Allow nodes to change IP address while upgrading to TCM (CASSANDRA-19921)\n * Retain existing keyspace params on system tables after upgrade (CASSANDRA-19916)\n * Deprecate use of gossip state for paxos electorate verification (CASSANDRA-19904)\n * Update dtest-api to 0.0.17 to fix jvm17 crash in jvm-dtests (CASSANDRA-19239)\n * Add resource leak test and Update Netty to 4.1.113.Final to fix leak (CASSANDRA-19783)\n * Fix incorrect nodetool suggestion when gossip mode is running (CASSANDRA-19905)\n * SAI support for BETWEEN operator (CASSANDRA-19688)\n * Fix BETWEEN filtering for reversed clustering columns (CASSANDRA-19878)\n * Retry if node leaves CMS while committing a transformation (CASSANDRA-19872)\n * Add support for NOT operators in WHERE clauses. Fixed Three Valued Logic (CASSANDRA-18584)\n * Allow getendpoints for system tables and make sure getNaturalReplicas work for MetaStrategy (CASSANDRA-19846)\n * On upgrade, handle pre-existing tables with unexpected table ids (CASSANDRA-19845)\n * Reconfigure CMS before assassinate (CASSANDRA-19768)\n * Warn about unqualified prepared statement only if it is select or modification statement (CASSANDRA-18322)\n * Update legacy peers tables during node replacement (CASSANDRA-19782)\n * Refactor ColumnCondition (CASSANDRA-19620)\n * Allow configuring log format for Audit Logs (CASSANDRA-19792)\n * Support for noboolean rpm (centos7 compatible) packages removed (CASSANDRA-19787)\n * Allow threads waiting for the metadata log follower to be interrupted (CASSANDRA-19761)\n * Support dictionary lookup for CassandraPasswordValidator (CASSANDRA-19762)\n * Disallow denylisting keys in system_cluster_metadata (CASSANDRA-19713)\n * Fix gossip status after replacement (CASSANDRA-19712)\n * Ignore repair requests for system_cluster_metadata (CASSANDRA-19711)\n * Avoid ClassCastException when verifying tables with reversed partitioner (CASSANDRA-19710)\n * Always repair the full range when repairing system_cluster_metadata (CASSANDRA-19709)\n * Use table-specific partitioners during Paxos repair (CASSANDRA-19714)\n * Expose current compaction throughput in nodetool (CASSANDRA-13890)\n * CEP-24 Password validation / generation (CASSANDRA-17457)\n * Reconfigure CMS after replacement, bootstrap and move operations (CASSANDRA-19705)\n * Support querying LocalStrategy tables with any partitioner (CASSANDRA-19692)\n * Relax slow_query_log_timeout for MultiNodeSAITest (CASSANDRA-19693)\n * Audit Log entries are missing identity for mTLS connections (CASSANDRA-19669)\n * Add support for the BETWEEN operator in WHERE clauses (CASSANDRA-19604)\n * Replace Stream iteration with for-loop for SimpleRestriction::bindAndGetClusteringElements (CASSANDRA-19679)\n * Consolidate logging on trace level (CASSANDRA-19632)\n * Expand DDL statements on coordinator before submission to the CMS (CASSANDRA-19592)\n * Fix number of arguments of String.format() in various classes (CASSANDRA-19645)\n * Remove unused fields from config (CASSANDRA-19599)\n * Refactor Relation and Restriction hierarchies (CASSANDRA-19341)\n * Raise priority of TCM internode messages during critical operations (CASSANDRA-19517)\n * Add nodetool command to unregister LEFT nodes (CASSANDRA-19581)\n * Add cluster metadata id to gossip syn messages (CASSANDRA-19613)\n * Reduce heap usage occupied by the metrics (CASSANDRA-19567)\n * Improve handling of transient replicas during range movements (CASSANDRA-19344)\n * Enable debounced internode log requests to be cancelled at shutdown (CASSANDRA-19514)\n * Correctly set last modified epoch when combining multistep operations into a single step (CASSANDRA-19538)\n * Add new TriggersPolicy configuration to allow operators to disable triggers (CASSANDRA-19532)\n * Use Transformation.Kind.id in local and distributed log tables (CASSANDRA-19516)\n * Remove period field from ClusterMetadata and metadata log tables (CASSANDRA-19482)\n * Enrich system_views.pending_hints vtable with hints sizes (CASSANDRA-19486)\n * Expose all dropwizard metrics in virtual tables (CASSANDRA-14572)\n * Ensured that PropertyFileSnitchTest do not overwrite cassandra-toploogy.properties (CASSANDRA-19502)\n * Add option for MutualTlsAuthenticator to restrict the certificate validity period (CASSANDRA-18951)\n * Fix StorageService::constructRangeToEndpointMap for non-distributed keyspaces (CASSANDRA-19255)\n * Group nodetool cms commands into single command group (CASSANDRA-19393)\n * Register the measurements of the bootstrap process as Dropwizard metrics (CASSANDRA-19447)\n * Add LIST SUPERUSERS CQL statement (CASSANDRA-19417)\n * Modernize CQLSH datetime conversions (CASSANDRA-18879)\n * Harry model and in-JVM tests for partition-restricted 2i queries (CASSANDRA-18275)\n * Refactor cqlshmain global constants (CASSANDRA-19201)\n * Remove native_transport_port_ssl (CASSANDRA-19397)\n * Make nodetool reconfigurecms sync by default and add --cancel to be able to cancel ongoing reconfigurations (CASSANDRA-19216)\n * Expose auth mode in system_views.clients, nodetool clientstats, metrics (CASSANDRA-19366)\n * Remove sealed_periods and last_sealed_period tables (CASSANDRA-19189)\n * Improve setup and initialisation of LocalLog/LogSpec (CASSANDRA-19271)\n * Refactor structure of caching metrics and expose auth cache metrics via JMX (CASSANDRA-17062)\n * Allow CQL client certificate authentication to work without sending an AUTHENTICATE request (CASSANDRA-18857)\n * Extend nodetool tpstats and system_views.thread_pools with detailed pool parameters (CASSANDRA-19289)\n * Remove dependency on Sigar in favor of OSHI (CASSANDRA-16565)\n * Simplify the bind marker and Term logic (CASSANDRA-18813)\n * Limit cassandra startup to supported JDKs, allow higher JDKs by setting CASSANDRA_JDK_UNSUPPORTED (CASSANDRA-18688)\n * Standardize nodetool tablestats formatting of data units (CASSANDRA-19104)\n * Make nodetool tablestats use number of significant digits for time and average values consistently (CASSANDRA-19015)\n * Upgrade jackson to 2.15.3 and snakeyaml to 2.1 (CASSANDRA-18875)\n * Transactional Cluster Metadata [CEP-21] (CASSANDRA-18330)\n * Add ELAPSED command to cqlsh (CASSANDRA-18861)\n * Add the ability to disable bulk loading of SSTables (CASSANDRA-18781)\n * Clean up obsolete functions and simplify cql_version handling in cqlsh (CASSANDRA-18787)\nMerged from 5.0:\n * Remove v30 and v3X from 5.x in-JVM upgrade tests (CASSANDRA-20103)\n * Avoid memory allocation in offheap_object's NativeCell.valueSize() and NativeClustering.dataSize() (CASSANDRA-20162)\n * Add flag to avoid invalidating key cache on sstable deletions (CASSANDRA-20068)\n * Interpret inet, bigint, varint, and decimal as non-reversed types for query construction and post-filtering (CASSANDRA-20100)\n * Streamline the serialized format for index status gossip messages (CASSANDRA-20058)\n * Batch clusterings into single SAI partition post-filtering reads (CASSANDRA-19497)\n * Ban the usage of \"var\" instead of full types in the production code (CASSANDRA-20038)\n * Suppress CVE-2024-45772, upgrade to lucene-core-9.12.0.jar (CASSANDRA-20024)\n * Use SinglePartitionReadCommand for index queries that use strict filtering (CASSANDRA-19968)\n * Always write local expiration time as an int to LivenessInfo digest (CASSANDRA-19989)\n * Enables IAuthenticator's to return own AuthenticateMessage (CASSANDRA-19984)\n * Use ParameterizedClass for all auth-related implementations (CASSANDRA-19946)\n * Correct out-of-date metrics and configuration documentation for SAI (CASSANDRA-19898)\n * Make configuration entries in memtable section order-independent (CASSANDRA-19906)\n * Add guardrail for enabling usage of VectorType (CASSANDRA-19903)\n * Set executable flag for shell scripts in .build directory for source artifact (CASSANDRA-19896)\n * Throw ConfigurationException when commitlog_disk_access_mode is direct but direct IO is not supported by filesystem (CASSANDRA-19812)\n * Memtable allocation type unslabbed_heap_buffers_logged will cause an assertion error for TrieMemtables and SegmentedTrieMemtables (CASSANDRA-19835)\n * Minor improvements in Cassandra shutdown and startup logs (CASSANDRA-19818)\n * Fix direct IO support always being evaluated to false upon the first start of a node (CASSANDRA-19779)\n * Deprecate and ignore use_deterministic_table_id (CASSANDRA-19809)\n * Prioritize built indexes in IndexStatusManager (CASSANDRA-19400)\n * Add java.base/java.lang.reflect among opens for jvm11-client.options (CASSANDRA-19780)\nMerged from 4.1:\n * Fix race condition in DecayingEstimatedHistogramReservoir during rescale (CASSANDRA-19365)\nMerged from 4.0:\n * IndexOutOfBoundsException when accessing partition where the column was deleted (CASSANDRA-20108)\n * Enhance CQLSSTableWriter to notify clients on sstable production (CASSANDRA-19800)\n * Change the resolution of AbstractCommitLogService#lastSyncedAt to nanos to be aligned with later comparisons (CASSANDRA-20074)\n * Support UDTs and vectors as clustering keys in descending order (CASSANDRA-20050)\n * Fix CQL in snapshot's schema which did not contained UDTs used as reverse clustering columns (CASSANDRA-20036)\n * Add configurable batchlog endpoint strategies: random_remote, prefer_local, dynamic_remote, and dynamic (CASSANDRA-18120)\n * Fix bash-completion for debian distro (CASSANDRA-19999)\n * Ensure thread-safety for CommitLogArchiver in CommitLog (CASSANDRA-19960)\n * Fix text containing \"/*\" being interpreted as multiline comment in cqlsh (CASSANDRA-17667)\n * Fix indexing of a frozen collection that is the clustering key and reversed (CASSANDRA-19889)\n * Emit error when altering a table with non-frozen UDTs with nested non-frozen collections the same way as done upon table creation (CASSANDRA-19925)\n * Safer handling of out-of-range tokens (CASSANDRA-13704)\n * Fix memory leak in BTree.FastBuilder (CASSANDRA-19785)\n * Fix millisecond and microsecond precision for commit log replay (CASSANDRA-19448)\n * Improve accuracy of memtable heap usage tracking (CASSANDRA-17298)\n * Fix rendering UNSET collection types in query tracing (CASSANDRA-19880)\n * Fix latency reported by ideal consistency level monitoring (CASSANDRA-19651)\n * Do not spam log with SSLExceptions (CASSANDRA-18839)\n\n5.0.0\n5.0-rc2\n * Fix direct IO support always being evaluated to false upon the first start of a node (CASSANDRA-19779)\n * Memtable allocation type unslabbed_heap_buffers_logged will cause an assertion error for TrieMemtables and SegmentedTrieMemtables (CASSANDRA-19835)\nMerged from 4.0:\n * Use default commitlog settings in test YAMLs (CASSANDRA-19830)\n\n\n5.0-rc1\n * Move bcpkix-jdk18on to build dependencies, update to 1.78 and explicitly enumerate transitive dependencies (CASSANDRA-19739)\n * Avoid streams in the common case for UpdateTransaction creation (CASSANDRA-19675)\n * Only wait until native_transport_timeout for dispatcher to finish (CASSANDRA-19697)\n * Disable chronicle analytics (CASSANDRA-19656)\n * Replace Stream iteration with for-loop for StorageProxy::updateCoordinatorWriteLatencyTableMetric (CASSANDRA-19676)\n * Enforce metric naming contract if scope is used in a metric name (CASSANDRA-19619)\n * Avoid reading of the same IndexInfo from disk many times for a large partition (CASSANDRA-19557)\n * Resolve the oldest hints just from descriptors and current writer if available (CASSANDRA-19600)\n * Optionally fail writes when SAI refuses to index a term value exceeding configured term max size (CASSANDRA-19493)\n * Vector search can restrict on clustering keys when filtering isn't required (CASSANDRA-19544)\n * Fix FBUtilities' parsing of gcp cos_containerd kernel versions (CASSANDRA-18594)\n * Clean up KeyRangeIterator classes (CASSANDRA-19428)\n * Warn clients about possible consistency violations for filtering queries against multiple mutable columns (CASSANDRA-19489)\n * Align buffer with commitlog segment size (CASSANDRA-19471)\n * Ensure SAI indexes empty byte buffers for types that allow them as a valid input (CASSANDRA-19461)\n * Deprecate Python 3.7 and earlier, but allow cqlsh to run with Python 3.6-3.11 (CASSANDRA-19467)\n * Set uuid_sstable_identifiers_enabled to true in cassandra-latest.yaml (CASSANDRA-19460)\n * Revert switching to approxTime in Dispatcher (CASSANDRA-19454)\n * Add an optimized default configuration to tests and make it available for new users (CASSANDRA-18753)\n * Fix remote JMX under Java17 (CASSANDRA-19453)\n * Avoid consistency violations for SAI intersections over unrepaired data at consistency levels requiring reconciliation (CASSANDRA-19018)\n * Fix NullPointerException in ANN+WHERE when adding rows in another partition (CASSANDRA-19404)\n * Record latencies for SAI post-filtering reads against local storage (CASSANDRA-18940)\n * Fix VectorMemoryIndex#update logic to compare vectors. Fix Index view (CASSANDRA-19168)\n * Deprecate native_transport_port_ssl (CASSANDRA-19392)\n * Update packaging shell includes (CASSANDRA-19283)\n * Fix data corruption in VectorCodec when using heap buffers (CASSANDRA-19167)\n * Avoid over-skipping of key iterators from static column indexes during mixed intersections (CASSANDRA-19278)\n * Make concurrent_index_builders configurable at runtime (CASSANDRA-19266)\n * Fix storage_compatibility_mode for streaming (CASSANDRA-19126)\n * Add support of vector type to cqlsh COPY command (CASSANDRA-19118)\n * Make CQLSSTableWriter to support building of SAI indexes (CASSANDRA-18714)\n * Append additional JVM options when using JDK17+ (CASSANDRA-19001)\n * Upgrade Python driver to 3.29.0 (CASSANDRA-19245)\n * Creating a SASI index after creating an SAI index does not break secondary index queries (CASSANDRA-18939)\n * Optionally fail when a non-partition-restricted query is issued against an index (CASSANDRA-18796)\n * Add a startup check to fail startup when using invalid configuration with certain Kernel and FS type (CASSANDRA-19196)\n * UCS min_sstable_size should not be lower than target_sstable_size lower bound (CASSANDRA-19112)\n * Fix the correspondingMessagingVersion of SSTable format and improve TTL overflow tests coverage (CASSANDRA-19197)\n * Fix resource cleanup after SAI query timeouts (CASSANDRA-19177)\n * Suppress CVE-2023-6481 (CASSANDRA-19184)\nMerged from 4.1:\n * Add native transport deadline, an ultimate deadline for all tasks related to a specific request (CASSANDRA-19534)\n * Do not create a role if ALTER ROLE IF EXISTS operates on non-existing role (CASSANDRA-19749)\n * Use OpOrder in repairIterator to ensure we don't lose memtables mid-paxos repair (Cassandra-19668)\n * Refresh stale paxos commit (CASSANDRA-19617)\n * Reduce info logging from automatic paxos repair (CASSANDRA-19445)\n * Support legacy plain_text_auth section in credentials file removed unintentionally (CASSANDRA-19498)\nMerged from 4.0:\n * Fix millisecond and microsecond precision for commit log replay (CASSANDRA-19448)\n * Improve accuracy of memtable heap usage tracking (CASSANDRA-17298)\n * Fix rendering UNSET collection types in query tracing (CASSANDRA-19880)\n * Fix latency reported by ideal consistency level monitoring (CASSANDRA-19651)\n * Use default commitlog settings in test YAMLs (CASSANDRA-19830)\n * Do not spam log with SSLExceptions (CASSANDRA-18839)\n * Fix schema.cql created by a snapshot after dropping more than one column (CASSANDRA-19747)\n * UnsupportedOperationException when reducing scope for LCS compactions (CASSANDRA-19704)\n * Make LWT conditions behavior on frozen and non-frozen columns consistent for null column values (CASSANDRA-19637)\n * Add timeout specifically for bootstrapping nodes (CASSANDRA-15439)\n * Bring Redhat packge dirs/ownership/perms in line with Debian package (CASSANDRA-19565)\nMerged from 3.0:\n * Upgrade OWASP to 10.0.0 (CASSANDRA-19738)\n\n\n4.1.5\n * Make queries visible to the \"system_views.queries\" virtual table at the coordinator level (CASSANDRA-19577)\n * Fix hints delivery for a node going down repeatedly (CASSANDRA-19495)\n * Do not go to disk for reading hints file sizes (CASSANDRA-19477)\n * Fix system_views.settings to handle array types (CASSANDRA-19475)\n * Fix StackOverflowError on ALTER after many previous schema changes (CASSANDRA-19166)\n * Memoize Cassandra verion (CASSANDRA-18902)\nMerged from 4.0:\n * Fix millisecond and microsecond precision for commit log replay (CASSANDRA-19448)\n * Improve accuracy of memtable heap usage tracking (CASSANDRA-17298)\n * Fix rendering UNSET collection types in query tracing (CASSANDRA-19880)\n * Fix latency reported by ideal consistency level monitoring (CASSANDRA-19651)\n * Use default commitlog settings in test YAMLs (CASSANDRA-19830)\n * Do not spam log with SSLExceptions (CASSANDRA-18839)\n * Fix schema.cql created by a snapshot after dropping more than one column (CASSANDRA-19747)\n * UnsupportedOperationException when reducing scope for LCS compactions (CASSANDRA-19704)\n * Make LWT conditions behavior on frozen and non-frozen columns consistent for null column values (CASSANDRA-19637)\n * Bring Redhat package dirs/ownership/perms in line with Debian package (CASSANDRA-19565)\n * Make nodetool import congruent with the documentation by not relying on the folder structure of the imported SSTable files (CASSANDRA-19401)\n * IR may leak SSTables with pending repair when coming from streaming (CASSANDRA-19182)\n * Streaming exception race creates corrupt transaction log files that prevent restart (CASSANDRA-18736)\n * Fix CQL tojson timestamp output on negative timestamp values before Gregorian calendar reform in 1582 (CASSANDRA-19566)\n * Fix few types issues and implement types compatibility tests (CASSANDRA-19479)\n * Change logging to TRACE when failing to get peer certificate (CASSANDRA-19508)\n * Push LocalSessions info logs to debug (CASSANDRA-18335)\n * Filter remote DC replicas out when constructing the initial replica plan for the local read repair (CASSANDRA-19120)\n * Remove redundant code in StorageProxy#sendToHintedReplicas (CASSANDRA-19412)\n * Remove bashisms for mx4j tool in cassandra-env.sh (CASSANDRA-19416)\n * Add new concurrent_merkle_tree_requests config property to prevent OOM during multi-range and/or multi-table repairs (CASSANDRA-19336)\nMerged from 3.11:\n * Move ClientWarn.State#warnings to a thread-safe list (CASSANDRA-19427)\nMerged from 3.0:\n * Upgrade OWASP to 10.0.0 (CASSANDRA-19738)\n * Fix SCM URL link (CASSANDRA-19422)\n * Backport CASSANDRA-16418 to 3.x (CASSANDRA-18824)\n\n\n5.0-beta1\n * Fix SAI intersection queries (CASSANDRA-19011)\n * Clone EndpointState before sending GossipShutdown message (CASSANDRA-19115)\n * SAI indexes are marked queryable during truncation (CASSANDRA-19032)\n * Enable Direct-IO feature for CommitLog files using Java native API's. (CASSANDRA-18464)\n * SAI fixes for composite partitions, and static and non-static rows intersections (CASSANDRA-19034)\n * Improve SAI IndexContext handling of indexed and non-indexed columns in queries (CASSANDRA-18166)\n * Fixed bug where UnifiedCompactionTask constructor was calling the wrong base constructor of CompactionTask (CASSANDRA-18757)\n * Fix SAI unindexed contexts not considering CONTAINS KEY (CASSANDRA-19040)\n * Ensure that empty SAI column indexes do not fail on validation after full-SSTable streaming (CASSANDRA-19017)\n * SAI in-memory index should check max term size (CASSANDRA-18926)\n * Set default disk_access_mode to mmap_index_only (CASSANDRA-19021)\n * Exclude net.java.dev.jna:jna dependency from dependencies of org.caffinitas.ohc:ohc-core (CASSANDRA-18992)\n * Add UCS sstable_growth and min_sstable_size options (CASSANDRA-18945)\n * Make cqlsh's min required Python version 3.7+ instead of 3.6+ (CASSANDRA-18960)\n * Fix incorrect seeking through the sstable iterator by IndexState (CASSANDRA-18932)\n * Upgrade Python driver to 3.28.0 (CASSANDRA-18960)\n * Add retries to IR messages (CASSANDRA-18962)\n * Add metrics and logging to repair retries (CASSANDRA-18952)\n * Remove deprecated code in Cassandra 1.x and 2.x (CASSANDRA-18959)\n * ClientRequestSize metrics should not treat CONTAINS restrictions as being equality-based (CASSANDRA-18896)\n * Add support for vector search in SAI (CASSANDRA-18715)\n * Remove crc_check_chance from CompressionParams (CASSANDRA-18872)\n * Fix schema loading of UDTs inside vectors inside UDTs (CASSANDRA-18964)\n * Add cqlsh autocompletion for the vector data type (CASSANDRA-18946)\n * Fix nodetool tablehistograms output to avoid printing repeated information and ensure at most two arguments (CASSANDRA-18955)\n * Change the checksum algorithm SAI-related files use from CRC32 to CRC32C (CASSANDRA-18836)\n * Correctly remove Index.Group from IndexRegistry (CASSANDRA-18905)\n * Fix vector type to support DDM's mask_default function (CASSANDRA-18889)\n * Remove unnecessary reporter-config3 dependency (CASSANDRA-18907)\n * Remove support for empty values on the vector data type (CASSANDRA-18876)\n * Upgrade Dropwizard Metrics to 4.2.19 (CASSANDRA-14667)\n * Upgrade caffeine cache and fix CIDR permissions cache invalidation (CASSANDRA-18805)\n * Remove deprecated properties in CompressionParams (CASSANDRA-18742)\n * Add support for repair coordinator to retry messages that timeout (CASSANDRA-18816)\n * Upgrade slf4j-api to 1.7.36 (CASSANDRA-18882)\n * Make the output of ON/OFF commands in cqlsh consistent (CASSANDRA-18547)\n * Do not create sstable files before registering in txn (CASSANDRA-18737)\n * Remove wrong assertion in SSTableLoader (CASSANDRA-18840)\n * Do not log stacktrace on mismatched cache and schema version and checksum error in AutoSavingCache (CASSANDRA-18862)\n * Remove wrong assertion in SSTableLoader (CASSANDRA-18840)\n * Fix accessing java.nio.Bits.TOTAL_CAPACITY in Java17 (CASSANDRA-18848)\n * Remove metrics-reporter-config dependency (CASSANDRA-18743)\n * Fix SAI's SegmentMetadata min and max primary keys (CASSANDRA-18734)\n * Remove commons-codec dependency (CASSANDRA-18772)\nMerged from 4.1:\n * Internode legacy SSL storage port certificate is not hot reloaded on update (CASSANDRA-18681)\n * Nodetool paxos-only repair is no longer incremental (CASSANDRA-18466)\nMerged from 4.0:\n * Support max SSTable size in sorted CQLSSTableWriter (CASSANDRA-18941)\n * Fix nodetool repair_admin summarize-pending command to not throw exception (CASSANDRA-19014)\n * Fix cassandra-stress in simplenative mode with prepared statements (CASSANDRA-18744)\n * Fix filtering system ks sstables for relocation on startup (CASSANDRA-18963)\n * Remove completed coordinator sessions (CASSANDRA-18903)\n * Gossip NPE due to shutdown event corrupting empty statuses (CASSANDRA-18913)\n * Update hdrhistogram to 2.1.12 (CASSANDRA-18893)\n * Improve performance of compactions when table does not have an index (CASSANDRA-18773)\n * JMH improvements - faster build and async profiler (CASSANDRA-18871)\n * Enable 3rd party JDK installations for Debian package (CASSANDRA-18844)\nMerged from 3.11:\n * Revert CASSANDRA-18543 (CASSANDRA-18854)\nMerged from 3.0:\n * Suppress CVE-2023-6378 (CASSANDRA-19142)\n * Do not set RPC_READY to false on transports shutdown in order to not fail counter updates for deployments with coordinator and storage nodes with transports turned off (CASSANDRA-18935)\n * Suppress CVE-2023-44487 (CASSANDRA-18943)\n * Implement the logic in bin/stop-server (CASSANDRA-18838)\n * Fix nodetool enable/disablebinary to correctly set rpc readiness in gossip (CASSANDRA-18935)\n * Implement the logic in bin/stop-server (CASSANDRA-18838)\n * Upgrade snappy-java to 1.1.10.4 (CASSANDRA-18878)\n * Add cqlshrc.sample and credentials.sample into Debian package (CASSANDRA-18818)\n\n\n5.0-alpha1\n * Fix rpm installations to work with jdk17 (CASSANDRA-18817)\n * Fix Depends and Build-Depends for Java for Debian packages (CASSANDRA-18809)\n * Update command line flags --add-exports and --add-opens for JDK17 (CASSANDRA-18439)\n * Update commons-lang3 to 3.13.0 (CASSANDRA-18789)\n * Forbid SAI indexes with analysis options on primary key columns (CASSANDRA-18782)\n * Expose bootstrap failure state via JMX and nodetool info (CASSANDRA-18749)\n * Reduce size of per-SSTable index components for SAI (CASSANDRA-18673)\n * Remove unnecessary Netty dependencies after upgrade to version 4.1.96 (CASSANDRA-18729)\n * Prevent InaccessibleObjectException when the Leak Detector is traversing objects (CASSANDRA-18708)\n * Remove legacy command line options from cassandra-stress (CASSANDRA-18529)\n * Remove commitlog_sync_batch_window_in_ms (CASSANDRA-17161)\n * Upgrade JMH from 1.21 to 1.36 (CASSANDRA-18696)\n * Add guardrail for vector dimensions (CASSANDRA-18730)\nMerged from 4.1:\n * Fixed the inconsistency between distributedKeyspaces and distributedAndLocalKeyspaces (CASSANDRA-18747)\n * Waiting indefinitely on ReceivedMessage response in StreamSession#receive() can cause deadlock (CASSANDRA-18733)\n * Allow empty keystore_password in encryption_options (CASSANDRA-18778)\nMerged from 4.0:\n * Retrieve keyspaces metadata and schema version concistently in DescribeStatement (CASSANDRA-18921)\n * JMH improvements - faster build and async profiler (CASSANDRA-18871)\nMerged from 3.11:\n * Fix NPE when using udfContext in UDF after a restart of a node (CASSANDRA-18739)\nMerged from 3.0:\n * Add cqlshrc.sample and credentials.sample into Debian package (CASSANDRA-18818)\n * Refactor validation logic in StorageService.rebuild (CASSANDRA-18803)\n * Make alternation of a user type validate the same way as creation of a user type does (CASSANDRA-18585)\n * Fix missing speculative retries in tablestats (CASSANDRA-18767)\n * Fix Requires for Java for RPM package (CASSANDRA-18751)\n * Fix CQLSH online help topic link (CASSANDRA-17534)\n * Remove unused suppressions (CASSANDRA-18724)\n\n\n5.0\n * Upgraded Netty to 4.1.96, added BouncyCastle dependency (CASSANDRA-17992)\n * Fix for (unsupported) big endian unaligned architecture, eg s390x (CASSANDRA-17723)\n * CIDR filtering authorizer (CASSANDRA-18592)\n * Remove 3.x from the versions checked for prepared statement behaviour (CASSANDRA-18695)\n * Add vector similarity functions (CASSANDRA-18640)\n * Lift MessagingService.minimum_version to 40 (CASSANDRA-18314)\n * Introduce pluggable crypto providers and default to AmazonCorrettoCryptoProvider (CASSANDRA-18624)\n * Improved DeletionTime serialization (CASSANDRA-18648)\n * CEP-7: Storage Attached Indexes (CASSANDRA-16052)\n * Add equals/hashCode override for ServerEncryptionOptions (CASSANDRA-18428)\n * Upgrade ECJ to version 3.33.0 (CASSANDRA-18190)\n * Fix ClassCastException  from jdk GaloisCounterMode when using JDK17 provider (CASSANDRA-18180)\n * Drop JDK8, add JDK17 (CASSANDRA-18255)\n * Remove WaitingOnFreeMemtableSpace and DroppedMutations metrics (CASSANDRA-18298)\n * Upgrade Jamm version to 0.4.0  (CASSANDRA-17884, CASSANDRA-16304, CASSANDRA-18329)\n * Remove legacy 3.0/3.11 buffer pool metrics (CASSANDRA-18313)\n * Add AzureSnitch (CASSANDRA-18646)\n * Implementation of the Unified Compaction Strategy as described in CEP-26 (CASSANDRA-18397)\n * Upgrade commons cli to 1.5.0 (CASSANDRA-18659)\n * Disable the deprecated keyspace/table thresholds and convert them to guardrails (CASSANDRA-18617)\n * Deprecate CloudstackSnitch and remove duplicate code in snitches (CASSANDRA-18438)\n * Add support for vectors in UDFs (CASSANDRA-18613)\n * Improve vector value validation errors (CASSANDRA-18652)\n * Upgrade Guava to 32.0.1 (CASSANDRA-18645)\n * Add duration and count of partition keys to sstablemetadata (CASSANDRA-18639)\n * Remove deprecated compaction_tombstone_warning_threshold and compaction_large_partition_warning_threshold from yaml (CASSANDRA-18626)\n * Enhance nodetool compactionstats with additional metrics (CASSANDRA-18305)\n * Added support for type VECTOR<type, dimension> (CASSANDRA-18504)\n * Expose bootstrap and decommission state to nodetool info (CASSANDRA-18555)\n * Fix SSTabledump errors when dumping data from index (CASSANDRA-17698)\n * Avoid unnecessary deserialization of terminal arguments when executing CQL functions (CASSANDRA-18566)\n * Remove dependency on pytz library for setting CQLSH timezones on Python version >= 3.9 (CASSANDRA-17433)\n * Extend maximum expiration date (CASSANDRA-14227)\n * Add guardrail for partition tombstones and deprecate compaction_tombstone_warning_threshold (CASSANDRA-17194)\n * Print header and statistics for cassandra-stress output with arbitrary frequency (CASSANDRA-12972)\n * CEP-25: Trie-indexed SSTable format (CASSANDRA-18398)\n * Make cassandra-stress able to read all credentials from a file (CASSANDRA-18544)\n * Add guardrail for partition size and deprecate compaction_large_partition_warning_threshold (CASSANDRA-18500)\n * Add HISTORY command for CQLSH (CASSANDRA-15046)\n * Fix sstable formats configuration (CASSANDRA-18441)\n * Add guardrail to bound timestamps (CASSANDRA-18352)\n * Add keyspace_name column to system_views.clients (CASSANDRA-18525)\n * Moved system properties and envs to CassandraRelevantProperties and CassandraRelevantEnv respectively (CASSANDRA-17797)\n * Add sstablepartitions offline tool to find large partitions in sstables (CASSANDRA-8720)\n * Replace usages of json-simple dependency by Jackson (CASSANDRA-16855)\n * When decommissioning should set Severity to limit traffic (CASSANDRA-18430)\n * For Java11 and Java17 remove -XX:-UseBiasedLocking as it is the default already (CASSANDRA-17869)\n * Upgrade commons-io to 2.11.0 (CASSANDRA-17364)\n * Node Draining Should Abort All Current SSTables Imports (CASSANDRA-18373)\n * Use snake case for the names of CQL native functions (CASSANDRA-18037)\n * Use jdk-dependent checkstyle version to check the source code (CASSANDRA-18262)\n * Provide summary of failed SessionInfo's in StreamResultFuture (CASSANDRA-17199)\n * CEP-20: Dynamic Data Masking (CASSANDRA-17940)\n * Add system_views.snapshots virtual table (CASSANDRA-18102)\n * Update OpenHFT dependencies (chronicle-queue, chronicle-core, chronicle-bytes, chronicle-wire, chronicle-threads) (CASSANDRA-18049)\n * Remove org.apache.cassandra.hadoop code (CASSANDRA-18323)\n * Remove deprecated CQL functions dateOf and unixTimestampOf (CASSANDRA-18328)\n * Remove DateTieredCompactionStrategy (CASSANDRA-18043)\n * Add system_views.max_sstable_size and system_views.max_sstable_duration tables (CASSANDRA-18333)\n * Extend implicit allow-filtering for virtual tables to clustering columns (CASSANDRA-18331)\n * Upgrade maven-shade-plugin to 3.4.1 to fix shaded dtest JAR build (CASSANDRA-18136)\n * Upgrade to Opcodes.ASM9 (CASSANDRA-17971)\n * Add MaxSSTableSize and MaxSSTableDuration metrics and propagate them together with local read/write ratio to tablestats (CASSANDRA-18283)\n * Add more logging around CompactionManager operations (CASSANDRA-18268)\n * Reduce memory allocations of calls to ByteBufer.duplicate() made in org.apache.cassandra.transport.CBUtil#writeValue (CASSANDRA-18212)\n * CEP-17: SSTable API (CASSANDRA-17056)\n * Gossip stateMapOrdering does not have correct ordering when both EndpointState are in the bootstrapping set (CASSANDRA-18292)\n * Snapshot only sstables containing mismatching ranges on preview repair mismatch (CASSANDRA-17561)\n * More accurate skipping of sstables in read path (CASSANDRA-18134)\n * Prepare for JDK17 experimental support (CASSANDRA-18179, CASSANDRA-18258)\n * Remove Scripted UDFs internals; hooks to be added later in CASSANDRA-17281 (CASSANDRA-18252)\n * Update JNA to 5.13.0 (CASSANDRA-18050)\n * Make virtual tables decide if they implicitly enable ALLOW FILTERING (CASSANDRA-18238)\n * Add row, tombstone, and sstable count to nodetool profileload (CASSANDRA-18022)\n * Coordinator level metrics for read response and mutation row and column counts (CASSANDRA-18155)\n * Add CQL functions for dynamic data masking (CASSANDRA-17941)\n * Print friendly error when nodetool attempts to connect to uninitialized server (CASSANDRA-11537)\n * Use G1GC by default, and update default G1GC settings (CASSANDRA-18027)\n * SimpleSeedProvider can resolve multiple IP addresses per DNS record (CASSANDRA-14361)\n * Remove mocking in InternalNodeProbe spying on StorageServiceMBean (CASSANDRA-18152)\n * Add compaction_properties column to system.compaction_history table and nodetool compactionhistory command (CASSANDRA-18061)\n * Remove ProtocolVersion entirely from the CollectionSerializer ecosystem (CASSANDRA-18114)\n * Fix serialization error in new getsstables --show-levels option (CASSANDRA-18140)\n * Use checked casts when reading vints as ints (CASSANDRA-18099)\n * Add Mutation Serialization Caching (CASSANDRA-17998)\n * Only reload compaction strategies if disk boundaries change (CASSANDRA-17874)\n * CEP-10: Simulator Java11 Support (CASSANDRA-17178)\n * Set the major compaction type correctly for compactionstats (CASSANDRA-18055)\n * Print exception message without stacktrace when nodetool commands fail on probe.getOwnershipWithPort() (CASSANDRA-18079)\n * Add option to print level in nodetool getsstables output (CASSANDRA-18023)\n * Implement a guardrail for not having zero default_time_to_live on tables with TWCS (CASSANDRA-18042)\n * Add CQL scalar functions for collection aggregation (CASSANDRA-18060)\n * Make cassandra.replayList property for CommitLogReplayer possible to react on keyspaces only (CASSANDRA-18044)\n * Add Mathematical functions (CASSANDRA-17221)\n * Make incremental backup configurable per table (CASSANDRA-15402)\n * Change shebangs of Python scripts to resolve Python 3 from env command (CASSANDRA-17832)\n * Add reasons to guardrail messages and consider guardrails in the error message for needed ALLOW FILTERING (CASSANDRA-17967)\n * Add support for CQL functions on collections, tuples and UDTs (CASSANDRA-17811)\n * Add flag to exclude nodes from local DC when running nodetool rebuild (CASSANDRA-17870)\n * Adding endpoint verification option to client_encryption_options (CASSANDRA-18034)\n * Replace 'wcwidth.py' with pypi module (CASSANDRA-17287)\n * Add nodetool forcecompact to remove tombstoned or ttl'd data ignoring GC grace for given table and partition keys (CASSANDRA-17711)\n * Offer IF (NOT) EXISTS in cqlsh completion for CREATE TYPE, DROP TYPE, CREATE ROLE and DROP ROLE (CASSANDRA-16640)\n * Nodetool bootstrap resume will now return an error if the operation fails (CASSANDRA-16491)\n * Disable resumable bootstrap by default (CASSANDRA-17679)\n * Include Git SHA in --verbose flag for nodetool version (CASSANDRA-17753)\n * Update Byteman to 4.0.20 and Jacoco to 0.8.8 (CASSANDRA-16413)\n * Add memtable option among possible tab completions for a table (CASSANDRA-17982)\n * Adds a trie-based memtable implementation (CASSANDRA-17240)\n * Further improves precision of memtable heap tracking (CASSANDRA-17240)\n * Fix formatting of metrics documentation (CASSANDRA-17961)\n * Keep sstable level when streaming for decommission and move (CASSANDRA-17969)\n * Add Unavailables metric for CASWrite in the docs (CASSANDRA-16357)\n * Make Cassandra logs able to be viewed in the virtual table system_views.system_logs (CASSANDRA-17946)\n * IllegalArgumentException in Gossiper#order due to concurrent mutations to elements being applied (CASSANDRA-17908)\n * Include estimated active compaction remaining write size when starting a new compaction (CASSANDRA-17931)\n * Mixed mode support for internode authentication during TLS upgrades (CASSANDRA-17923)\n * Revert Mockito downgrade from CASSANDRA-17750 (CASSANDRA-17496)\n * Add --older-than and --older-than-timestamp options for nodetool clearsnapshots (CASSANDRA-16860)\n * Fix \"open RT bound as its last item\" exception (CASSANDRA-17810)\n * Fix leak of non-standard Java types in JMX MBeans `org.apache.cassandra.db:type=StorageService`\n   and `org.apache.cassandra.db:type=RepairService` as clients using JMX cannot handle them. More details in NEWS.txt (CASSANDRA-17668)\n * Deprecate Throwables.propagate usage (CASSANDRA-14218)\n * Allow disabling hotness persistence for high sstable counts (CASSANDRA-17868)\n * Prevent NullPointerException when changing neverPurgeTombstones from true to false (CASSANDRA-17897)\n * Add metrics around storage usage and compression (CASSANDRA-17898)\n * Remove usage of deprecated javax certificate classes (CASSANDRA-17867)\n * Make sure preview repairs don't optimise streams unless configured to (CASSANDRA-17865)\n * Optionally avoid hint transfer during decommission (CASSANDRA-17808)\n * Make disabling auto snapshot on selected tables possible (CASSANDRA-10383)\n * Introduce compaction priorities to prevent upgrade compaction inability to finish (CASSANDRA-17851)\n * Prevent a user from manually removing ephemeral snapshots (CASSANDRA-17757)\n * Remove dependency on Maven Ant Tasks (CASSANDRA-17750)\n * Update ASM(9.1 to 9.3), Mockito(1.10.10 to 1.12.13) and ByteBuddy(3.2.4 to 4.7.0) (CASSANDRA-17835)\n * Add the ability for operators to loosen the definition of \"empty\" for edge cases (CASSANDRA-17842)\n * Fix potential out of range exception on column index downsampling (CASSANDRA-17839)\n * Introduce target directory to vtable output for sstable_tasks and for compactionstats (CASSANDRA-13010)\n * Read/Write/Truncate throw RequestFailure in a race condition with callback timeouts, should return Timeout instead (CASSANDRA-17828)\n * Add ability to log load profiles at fixed intervals (CASSANDRA-17821)\n * Protect against Gossip backing up due to a quarantined endpoint without version information (CASSANDRA-17830)\n * NPE in org.apache.cassandra.cql3.Attributes.getTimeToLive (CASSANDRA-17822)\n * Add guardrail for column size (CASSANDRA-17151)\n * When doing a host replacement, we need to check that the node is a live node before failing with \"Cannot replace a live node...\" (CASSANDRA-17805)\n * Add support to generate a One-Shot heap dump on unhandled exceptions (CASSANDRA-17795)\n * Rate-limit new client connection auth setup to avoid overwhelming bcrypt (CASSANDRA-17812)\n * DataOutputBuffer#scratchBuffer can use off-heap or on-heap memory as a means to control memory allocations (CASSANDRA-16471)\n * Add ability to read the TTLs and write times of the elements of a collection and/or UDT (CASSANDRA-8877)\n * Removed Python < 2.7 support from formatting.py (CASSANDRA-17694)\n * Cleanup pylint issues with pylexotron.py (CASSANDRA-17779)\n * NPE bug in streaming checking if SSTable is being repaired (CASSANDRA-17801)\n * Users of NativeLibrary should handle lack of JNA appropriately when running in client mode (CASSANDRA-17794)\n * Warn on unknown directories found in system keyspace directory rather than kill node during startup checks (CASSANDRA-17777)\n * Log duplicate rows sharing a partition key found in verify and scrub (CASSANDRA-17789)\n * Add separate thread pool for Secondary Index building so it doesn't block compactions (CASSANDRA-17781)\n * Added JMX call to getSSTableCountPerTWCSBucket for TWCS (CASSANDRA-17774)\n * When doing a host replacement, -Dcassandra.broadcast_interval_ms is used to know when to check the ring but checks that the ring wasn't changed in -Dcassandra.ring_delay_ms, changes to ring delay should not depend on when we publish load stats (CASSANDRA-17776)\n * When bootstrap fails, CassandraRoleManager may attempt to do read queries that fail with \"Cannot read from a bootstrapping node\", and increments unavailables counters (CASSANDRA-17754)\n * Add guardrail to disallow DROP KEYSPACE commands (CASSANDRA-17767)\n * Remove ephemeral snapshot marker file and introduce a flag to SnapshotManifest (CASSANDRA-16911)\n * Add a virtual table that exposes currently running queries (CASSANDRA-15241)\n * Allow sstableloader to specify table without relying on path (CASSANDRA-16584)\n * Fix TestGossipingPropertyFileSnitch.test_prefer_local_reconnect_on_listen_address (CASSANDRA-17700)\n * Add ByteComparable API (CASSANDRA-6936)\n * Add guardrail for maximum replication factor (CASSANDRA-17500)\n * Increment CQLSH to version 6.2.0 for release 4.2 (CASSANDRA-17646)\n * Adding support to perform certificate based internode authentication (CASSANDRA-17661)\n * Option to disable CDC writes of repaired data (CASSANDRA-17666)\n * When a node is bootstrapping it gets the whole gossip state but applies in random order causing some cases where StorageService will fail causing an instance to not show up in TokenMetadata (CASSANDRA-17676)\n * Add CQLSH command SHOW REPLICAS (CASSANDRA-17577)\n * Add guardrail to allow disabling of SimpleStrategy (CASSANDRA-17647)\n * Change default directory permission to 750 in packaging (CASSANDRA-17470)\n * Adding support for TLS client authentication for internode communication (CASSANDRA-17513)\n * Add new CQL function maxWritetime (CASSANDRA-17425)\n * Add guardrail for ALTER TABLE ADD / DROP / REMOVE column operations (CASSANDRA-17495)\n * Rename DisableFlag class to EnableFlag on guardrails (CASSANDRA-17544)\nMerged from 4.1:\n * Skip ColumnFamilyStore#topPartitions initialization when client or tool mode (CASSANDRA-18697)\nMerged from 4.0:\n * Partial compaction can resurrect deleted data (CASSANDRA-18507)\nMerged from 3.11:\n * Fix delayed SSTable release with unsafe_aggressive_sstable_expiration (CASSANDRA-18756)\n * Fix NPE when using udfContext in UDF after a restart of a node (CASSANDRA-18739)\nMerged from 3.0:\n * CQLSH emits a warning when the server version doesn't match (CASSANDRA-18745)\n * Fix missing speculative retries in tablestats (CASSANDRA-18767)\n * Fix Requires for Java for RPM package (CASSANDRA-18751)\n * Fix CQLSH online help topic link (CASSANDRA-17534)\n * Remove unused suppressions (CASSANDRA-18724)\n\n\n4.1.4\n * Fix StackOverflowError on ALTER after many previous schema changes (CASSANDRA-19166)\nMerged from 4.0:\n * Fix NTS log message when an unrecognized strategy option is passed (CASSANDRA-18679)\n * Fix BulkLoader ignoring cipher suites options (CASSANDRA-18582)\n * Migrate Python optparse to argparse (CASSANDRA-17914)\nMerged from 3.11:\nMerged from 3.0:\n\n\n4.1.3\nMerged from 4.0:\n * Revert CASSANDRA-16718 (CASSANDRA-18560)\n * Upgrade snappy to 1.1.10.1 (CASSANDRA-18608)\n * Fix assertion error when describing mv as table (CASSANDRA-18596)\n * Track the amount of read data per row (CASSANDRA-18513)\n * Fix Down nodes counter in nodetool describecluster (CASSANDRA-18512)\n * Remove unnecessary shuffling of GossipDigests in Gossiper#makeRandomGossipDigest (CASSANDRA-18546)\nMerged from 3.11:\n * Moved jflex from runtime to build dependencies (CASSANDRA-18664)\n * Fix CAST function for float to decimal (CASSANDRA-18647)\n * Suppress CVE-2022-45688 (CASSANDRA-18643)\n * Remove unrepaired SSTables from garbage collection when only_purge_repaired_tombstones is true (CASSANDRA-14204)\n * Wait for live endpoints in gossip waiting to settle (CASSANDRA-18543)\n * Fix error message handling when trying to use CLUSTERING ORDER with non-clustering column (CASSANDRA-17818\n * Add keyspace and table name to exception message during ColumnSubselection deserialization (CASSANDRA-18346)\nMerged from 3.0:\n * Suppress CVE-2023-34462 (CASSANDRA-18649)\n * Add support for AWS Ec2 IMDSv2 (CASSANDRA-16555)\n * Suppress CVE-2023-35116 (CASSANDRA-18630)\n * Pass taskId from CompactionTask to system.compaction_history (CASSANDRA-12183)\n * Backport CASSANDRA-10508: Remove hard-coded SSL cipher suites (CASSANDRA-18575)\n * Suppress CVE-2023-2976 (CASSANDRA-18562)\n * Remove dh_python use in Debian packaging (CASSANDRA-18558)\n\n\n4.1.2\n * NPE when deserializing malformed collections from client (CASSANDRA-18505)\n * Allow keystore and trustrore passwords to be nullable (CASSANDRA-18124)\n * Return snapshots with dots in their name in nodetool listsnapshots (CASSANDRA-18371)\n * Fix NPE when loading snapshots and data directory is one directory from root (CASSANDRA-18359)\n * Do not submit hints when hinted_handoff_enabled=false (CASSANDRA-18304)\n * Fix COPY ... TO STDOUT behavior in cqlsh (CASSANDRA-18353)\n * Remove six and Py2SaferScanner merge cruft (CASSANDRA-18354)\nMerged from 4.0:\n * Improve nodetool enable{audit,fullquery}log (CASSANDRA-18550)\n * Report network cache info in nodetool (CASSANDRa-18400)\n * Partial compaction can resurrect deleted data (CASSANDRA-18507)\n * Allow internal address to change with reconnecting snitches (CASSANDRA-16718)\n * Fix quoting in toCqlString methods of UDTs and aggregates (CASSANDRA-17918)\n * Improve 'Not enough space for compaction' logging messages (CASSANDRA-18260)\n * Incremental repairs fail on mixed IPv4/v6 addresses serializing SyncRequest (CASSANDRA-18474)\n * Deadlock updating sstable metadata if disk boundaries need reloading (CASSANDRA-18443)\n * Fix nested selection of reversed collections (CASSANDRA-17913)\n * Update zstd-jni library to version 1.5.5 (CASSANDRA-18429)\nMerged from 3.11:\n * Remove unnecessary String.format invocation in QueryProcessor when getting a prepared statement from cache (CASSANDRA-17202)\n * Fix the capital P usage in the CQL parser (CASSANDRA-17919)\nMerged from 3.0:\n * Pass down all contact points to driver for cassandra-stress (CASSANDRA-18025)\n * Validate the existence of a datacenter in nodetool rebuild (CASSANDRA-14319)\n * Suppress CVE-2023-2251 (CASSANDRA-18497)\n * Do not remove SSTables when cause of FSReadError is OutOfMemoryError while using best_effort disk failure policy (CASSANDRA-18336)\n * Do not remove truncated_at entry in system.local while dropping an index (CASSANDRA-18105)\n\n\n4.0.9\n * Update zstd-jni library to version 1.5.5 (CASSANDRA-18429)\n * Backport CASSANDRA-17205 to 4.0 branch - Remove self-reference in SSTableTidier (CASSANDRA-18332)\n * Avoid loading the preferred IP for BulkLoader streaming (CASSANDRA-18370)\n * Fix BufferPool incorrect memoryInUse when putUnusedPortion is used (CASSANDRA-18311)\n * Improve memtable allocator accounting when updating AtomicBTreePartition (CASSANDRA-18125)\n * Update zstd-jni to version 1.5.4-1 (CASSANDRA-18259)\n * Split and order IDEA workspace template VM_PARAMETERS (CASSANDRA-18242)\nMerged from 3.11:\n * Fix sstable_count metric missing from tablestats json/yaml output (CASSANDRA-18448)\n * Suppress CVE-2022-45688 (CASSANDRA-18389)\n * Fix Splitter sometimes creating more splits than requested (CASSANDRA-18013)\nMerged from 3.0:\n * Do not remove SSTables when cause of FSReadError is OutOfMemoryError while using best_effort disk failure policy (CASSANDRA-18336)\n * Do not remove truncated_at entry in system.local while dropping an index (CASSANDRA-18105)\n * Save host id to system.local and flush immediately after startup (CASSANDRA-18153)\n\n\n4.1.1\n * Deprecate org.apache.cassandra.hadoop code (CASSANDRA-16984)\n * Fix too early schema version change in sysem local table (CASSANDRA-18291)\n * Fix copying of JAR of a trigger to temporary file (CASSANDRA-18264)\n * Fix possible NoSuchFileException when removing a snapshot (CASSANDRA-18211)\n * PaxosPrepare may add instances to the Electorate that are not in gossip (CASSANDRA-18194)\n * Fix PAXOS2_COMMIT_AND_PREPARE_RSP serialisation AssertionError (CASSANDRA-18164)\n * Streaming progress virtual table lock contention can trigger TCP_USER_TIMEOUT and fail streaming (CASSANDRA-18110)\n * Fix perpetual load of denylist on read in cases where denylist can never be loaded (CASSANDRA-18116)\nMerged from 4.0:\n * Fix BufferPool incorrect memoryInUse when putUnusedPortion is used (CASSANDRA-18311)\n * Improve memtable allocator accounting when updating AtomicBTreePartition (CASSANDRA-18125)\n * Update zstd-jni to version 1.5.4-1 (CASSANDRA-18259)\n * Split and order IDEA workspace template VM_PARAMETERS (CASSANDRA-18242)\n * Log warning message on aggregation queries without key or on multiple keys (CASSANDRA-18219)\n * Fix the output of FQL dump tool to properly separate entries (CASSANDRA-18215)\n * Add cache type information for maximum memory usage warning message (CASSANDRA-18184)\n * Fix NPE in fqltool dump on null value (CASSANDRA-18113)\n * Improve unit tests performance (CASSANDRA-17427)\n * Connect to listen address when own broadcast address is requested (CASSANDRA-18200)\n * Add safeguard so cleanup fails when node has pending ranges (CASSANDRA-16418)\n * Fix legacy clustering serialization for paging with compact storage (CASSANDRA-17507)\n * Add support for python 3.11 (CASSANDRA-18088)\n * Fix formatting of duration in cqlsh (CASSANDRA-18141)\n * Fix sstable loading of keyspaces named snapshots or backups (CASSANDRA-14013)\n * Avoid ConcurrentModificationException in STCS/DTCS/TWCS.getSSTables (CASSANDRA-17977)\n * Restore internode custom tracing on 4.0's new messaging system (CASSANDRA-17981)\nMerged from 3.11:\nMerged from 3.0:\n * Fix the ordering of sstables when running sstableupgrade tool (CASSANDRA-18143)\n * Fix default file system error handler for disk_failure_policy die (CASSANDRA-18294)\n * Introduce check for names of test classes (CASSANDRA-17964)\n * Suppress CVE-2022-41915 (CASSANDRA-18147)\n * Suppress CVE-2021-1471, CVE-2021-3064, CVE-2021-4235 (CASSANDRA-18149)\n * Switch to snakeyaml's SafeConstructor (CASSANDRA-18150)\n * Expand build.dir property in rat targets (CASSANDRA-18183)\n * Suppress CVE-2022-41881 (CASSANDRA-18148)\n * Default role is created with zero timestamp (CASSANDRA-12525)\n * Suppress CVE-2021-37533 (CASSANDRA-18146)\n * Add to the IntelliJ Git Window issue navigation links to Cassandra's Jira (CASSANDRA-18126)\n * Avoid anticompaction mixing data from two different time windows with TWCS (CASSANDRA-17970)\n * Do not spam the logs with MigrationCoordinator not being able to pull schemas (CASSANDRA-18096)\n\n\n4.1.0\n * Fix ContentionStrategy backoff and Clock.waitUntil (CASSANDRA-18086)\nMerged from 4.0:\nMerged from 3.11:\nMerged from 3.0:\n * Fix incorrect resource name in LIST PERMISSION output (CASSANDRA-17848)\n * Suppress CVE-2022-41854 and similar (CASSANDRA-18083)\n\n\n4.1-rc1\n * Avoid schema mismatch problems on memtable API misconfiguration (CASSANDRA-18040)\n * Start Paxos auto repair in CassandraDaemon (CASSANDRA-18029)\n * Restore streaming_keep_alive_period on the netty control streaming channel (CASSANDRA-17768)\n * Move Schema.FORCE_LOAD_KEYSPACES and Schema.FORCE_LOAD_KEYSPACES_PROP to CassandraRelevantProps (CASSANDRA-17783)\n * Add --resolve-ip option to nodetool gossipinfo (CASSANDRA-17934)\n * Allow pre-V5 global limit on bytes in flight to revert to zero asynchronously in RateLimitingTest (CASSANDRA-17927)\nMerged from 4.0:\n * Backport CASSANDRA-17205 to 4.0 branch - Remove self-reference in SSTableTidier (CASSANDRA-18332)\n * Avoid loading the preferred IP for BulkLoader streaming (CASSANDRA-18370)\n * Harden parsing of boolean values in CQL in PropertyDefinitions (CASSANDRA-17878)\n * Fix error message about type hints (CASSANDRA-17915)\n * Fix possible race condition on repair snapshots (CASSANDRA-17955)\n * Fix ASM bytecode version inconsistency (CASSANDRA-17873)\n * Remove empty cq4 files in log directory to not fail the startup of BinLog (CASSANDRA-17933)\n * Fix multiple BufferPool bugs (CASSANDRA-16681)\n * Fix StorageService.getNativeaddress handling of IPv6 addresses (CASSANDRA-17945)\nMerged from 3.11:\n * Fix Splitter sometimes creating more splits than requested (CASSANDRA-18013)\n * Suppress CVE-2022-42003 and CVE-2022-42004 (CASSANDRA-17966)\n * Make LongBufferPoolTest insensitive to timing (CASSANDRA-16681)\nMerged from 3.0:\n * Fix running Ant rat targets without git (CASSANDRA-17974)\n * Harden JMX by resolving beanshooter issues (CASSANDRA-17921)\n * Suppress CVE-2019-2684 (CASSANDRA-17965)\n * Fix auto-completing \"WITH\" when creating a materialized view (CASSANDRA-17879)\n\n\n4.1-beta1\n * We should not emit deprecation warning on startup for `key_cache_save_period`, `row_cache_save_period`, `counter_cache_save_period` (CASSANDRA-17904)\n * upsert with adder support is not consistent with numbers and strings in LWT (CASSANDRA-17857)\n * Fix race and return after failing connections (CASSANDRA-17618)\n * Speculative execution threshold unit mismatch (CASSANDRA-17877)\n * Fix BulkLoader to load entireSSTableThrottle and entireSSTableInterDcThrottle (CASSANDRA-17677)\n * Fix a race condition where a keyspace can be oopened while it is being removed (CASSANDRA-17658)\n * DatabaseDescriptor will set the default failure detector during client initialization (CASSANDRA-17782)\n * Avoid initializing schema via SystemKeyspace.getPreferredIP() with the BulkLoader tool (CASSANDRA-17740)\n * Improve JMX methods signatures, fix JMX and config backward compatibility (CASSANDRA-17725)\n * Fix sstable_preemptive_open_interval disabled value. sstable_preemptive_open_interval = null backward compatible with\n   sstable_preemptive_open_interval_in_mb = -1 (CASSANDRA-17737)\n * Remove usages of Path#toFile() in the snapshot apparatus (CASSANDRA-17769)\n * Fix Settings Virtual Table to update paxos_variant after startup and rename enable_uuid_sstable_identifiers to\n   uuid_sstable_identifiers_enabled as per our config naming conventions (CASSANDRA-17738)\n * index_summary_resize_interval_in_minutes = -1 is equivalent to index_summary_resize_interval being set to null or\n   disabled. JMX MBean IndexSummaryManager, setResizeIntervalInMinutes method still takes resizeIntervalInMinutes = -1 for disabled (CASSANDRA-17735)\n * min_tracked_partition_size_bytes parameter from 4.1 alpha1 was renamed to min_tracked_partition_size (CASSANDRA-17733)\n * Remove commons-lang dependency during build runtime (CASSANDRA-17724)\n * Relax synchronization on StreamSession#onError() to avoid deadlock (CASSANDRA-17706)\n * Fix AbstractCell#toString throws MarshalException for cell in collection (CASSANDRA-17695)\n * Add new vtable output option to compactionstats (CASSANDRA-17683)\n * Fix commitLogUpperBound initialization in AbstractMemtableWithCommitlog (CASSANDRA-17587)\n * Fix widening to long in getBatchSizeFailThreshold (CASSANDRA-17650)\n * Fix widening from mebibytes to bytes in IntMebibytesBound (CASSANDRA-17716)\n * Revert breaking change in nodetool clientstats and expose cient options through nodetool clientstats --client-options. (CASSANDRA-17715)\n * Fix missed nowInSec values in QueryProcessor (CASSANDRA-17458)\n * Revert removal of withBufferSizeInMB(int size) in CQLSSTableWriter.Builder class and deprecate it in favor of withBufferSizeInMiB(int size) (CASSANDRA-17675)\n * Remove expired snapshots of dropped tables after restart (CASSANDRA-17619)\nMerged from 4.0:\n * Mitigate direct buffer memory OOM on replacements (CASSANDRA-17895)\n * Fix repair failure on assertion if two peers have overlapping mismatching ranges (CASSANDRA-17900)\n * Better handle null state in Gossip schema migration to avoid NPE (CASSANDRA-17864)\n * HintedHandoffAddRemoveNodesTest now accounts for the fact that StorageMetrics.totalHints is not updated synchronously w/ writes (CASSANDRA-16679)\n * Avoid getting hanging repairs due to repair message timeouts (CASSANDRA-17613)\n * Prevent infinite loop in repair coordinator on FailSession (CASSANDRA-17834)\n * Fix race condition on updating cdc size and advancing to next segment (CASSANDRA-17792)\n * Add 'noboolean' rpm build for older distros like CentOS7 (CASSANDRA-17765)\n * Fix default value for compaction_throughput_mb_per_sec in Config class to match  the one in cassandra.yaml (CASSANDRA-17790)\n * Fix Setting Virtual Table - update after startup config properties gc_log_threshold_in_ms, gc_warn_threshold_in_ms,\n   conf.index_summary_capacity_in_mb, prepared_statements_cache_size_mb, key_cache_size_in_mb, counter_cache_size_in_mb\n   (CASSANDRA-17737)\n * Fix Settings Virtual Table - index_summary_resize_interval and index_summary_capacity were not updated after startup (CASSANDRA-17735)\n * Clean up ScheduledExecutors, CommitLog, and MessagingService shutdown for in-JVM dtests (CASSANDRA-17731)\n * Remove extra write to system table for prepared statements (CASSANDRA-17764)\n * SSL storage port in sstableloader is deprecated (CASSANDRA-17602)\n * Fix counter write timeouts at ONE (CASSANDRA-17411)\n * Fix NPE in getLocalPrimaryRangeForEndpoint (CASSANDRA-17680)\n * Allow Java 11 to satisfy RPM/Debian packaging (CASSANDRA-17669)\n * Ensure FileStreamTask cannot compromise shared channel proxy for system table when interrupted (CASSANDRA-17663)\n * silence benign SslClosedEngineException (CASSANDRA-17565)\nMerged from 3.11:\n * Fix potential IndexOutOfBoundsException in PagingState in mixed mode clusters (CASSANDRA-17840)\n * Document usage of closed token intervals in manual compaction (CASSANDRA-17575)\n * Creating of a keyspace on insufficient number of replicas should filter out gosspping-only members (CASSANDRA-17759)\n * Suppress CVE-2022-25857 and other snakeyaml CVEs (CASSANDRA-17907)\nMerged from 3.0:\n * Improve libjemalloc resolution in bin/cassandra (CASSANDRA-15767)\n * Fix restarting of services on gossipping-only member (CASSANDRA-17752)\n * Fix scrubber falling into infinite loop when the last partition is broken (CASSANDRA-17862)\n * Fix resetting schema (CASSANDRA-17819)\n\n\n4.1-alpha1\n * Handle config parameters upper bound on startup; Fix auto_snapshot_ttl and paxos_purge_grace_period min unit validations (CASSANDRA-17571)\n * Fix leak of non-standard Java types in our Exceptions as clients using JMX are unable to handle them.\n   Remove useless validation that leads to unnecessary additional read of cassandra.yaml on startup (CASSANDRA-17638)\n * Fix repair_request_timeout_in_ms and remove paxos_auto_repair_threshold_mb (CASSANDRA-17557)\n * Incremental repair leaks SomeRepairFailedException after switch away from flatMap (CASSANDRA-17620)\n * StorageService read threshold get methods throw NullPointerException due to not handling null configs (CASSANDRA-17593)\n * Rename truncate_drop guardrail to drop_truncate_table (CASSANDRA-17592)\n * nodetool enablefullquerylog can NPE when directory has no files (CASSANDRA-17595)\n * Add auto_snapshot_ttl configuration (CASSANDRA-16790)\n * List snapshots of dropped tables (CASSANDRA-16843)\n * Add information whether sstables are dropped to SchemaChangeListener (CASSANDRA-17582)\n * Add a pluggable memtable API (CEP-11 / CASSANDRA-17034)\n * Save sstable id as string in activity table (CASSANDRA-17585)\n * Implement startup check to prevent Cassandra to potentially spread zombie data (CASSANDRA-17180)\n * Allow failing startup on duplicate config keys (CASSANDRA-17379)\n * Migrate threshold for minimum keyspace replication factor to guardrails (CASSANDRA-17212)\n * Add guardrail to disallow TRUNCATE and DROP TABLE commands (CASSANDRA-17558)\n * Add plugin support for CQLSH (CASSANDRA-16456)\n * Add guardrail to disallow querying with ALLOW FILTERING (CASSANDRA-17370)\n * Enhance SnakeYAML properties to be reusable outside of YAML parsing, support camel case conversion to snake case, and add support to ignore properties (CASSANDRA-17166)\n * nodetool compact should support using a key string to find the range to avoid operators having to manually do this (CASSANDRA-17537)\n * Add guardrail for data disk usage (CASSANDRA-17150)\n * Tool to list data paths of existing tables (CASSANDRA-17568)\n * Migrate track_warnings to more standard naming conventions and use latest configuration types rather than long (CASSANDRA-17560)\n * Add support for CONTAINS and CONTAINS KEY in conditional UPDATE and DELETE statement (CASSANDRA-10537)\n * Migrate advanced config parameters to the new Config types (CASSANDRA-17431)\n * Make null to be meaning disabled and leave 0 as a valid value for permissions_update_interval, roles_update_interval, credentials_update_interval (CASSANDRA-17431)\n * Fix typo in Config annotation (CASSANDRA-17431)\n * Made Converters type safe and fixed a few cases where converters used the wrong type (CASSANDRA-17431)\n * Fix null bug in DataStorageSpec and DurationSpec and require units to be added when providing 0 value (CASSANDRA-17431)\n * Shutdown ScheduledExecutors as part of node drainage (CASSANDRA-17493)\n * Provide JMX endpoint to allow transient logging of blocking read repairs (CASSANDRA-17471)\n * Add guardrail for GROUP BY queries (CASSANDRA-17509)\n * make pylib PEP and pylint compliant (CASSANDRA-17546)\n * Add support for vnodes in jvm-dtest (CASSANDRA-17332)\n * Remove guardrails global enable flag (CASSANDRA-17499)\n * Clients using JMX are unable to handle non-standard java types but we leak this into our interfaces (CASSANDRA-17527)\n * Remove stress server functionality (CASSANDRA-17535)\n * Reduce histogram snapshot long[] allocation overhead during speculative read and write threshold updates (CASSANDRA-17523)\n * Add guardrail for creation of secondary indexes (CASSANDRA-17498)\n * Add guardrail to disallow creation of uncompressed tables (CASSANDRA-17504)\n * Add guardrail to disallow creation of new COMPACT STORAGE tables (CASSANDRA-17522)\n * repair vtables should expose a completed field due to lack of filtering options in CQL (CASSANDRA-17520)\n * remove outdated code from cqlsh (CASSANDRA-17490)\n * remove support for deprecated version specific TLS in Python 3.6 (CASSANDRA-17365)\n * Add support for IF EXISTS and IF NOT EXISTS in ALTER statements (CASSANDRA-16916)\n * resolve several pylint issues in cqlsh.py and pylib (CASSANDRA-17480)\n * Streaming sessions longer than 3 minutes fail with timeout (CASSANDRA-17510)\n * Add ability to track state in repair (CASSANDRA-15399)\n * Remove unused 'parse' module (CASSANDRA-17484)\n * change six functions in cqlshlib to native Python 3 (CASSANDRA-17417)\n * reduce hot-path object allocations required to record local/remote requests against the client request metrics (CASSANDRA-17424)\n * Disallow removing DC from system_auth while nodes are active in the DC (CASSANDRA-17478)\n * Add guardrail for the number of fields per UDT (CASSANDRA-17385)\n * Allow users to change cqlsh history location using env variable (CASSANDRA-17448)\n * Add required -f option to use nodetool verify and standalone sstableverify (CASSANDRA-17017)\n * Add support for UUID based sstable generation identifiers (CASSANDRA-17048)\n * Log largest memtable flush at info instead of debug (CASSANDRA-17472)\n * Add native transport rate limiter options to example cassandra.yaml, and expose metric for dispatch rate (CASSANDRA-17423)\n * Add diagnostic events for guardrails (CASSANDRA-17197)\n * Pre hashed passwords in CQL (CASSANDRA-17334)\n * Increase cqlsh version (CASSANDRA-17432)\n * Update SUPPORTED_UPGRADE_PATHS to include 3.0 and 3.x to 4.1 paths and remove obsolete tests (CASSANDRA-17362)\n * Support DELETE in CQLSSTableWriter (CASSANDRA-14797)\n * Failed inbound internode authentication failures generate ugly warning with stack trace (CASSANDRA-17068)\n * Expose gossip information in system_views.gossip_info virtual table (CASSANDRA-17002)\n * Add guardrails for collection items and size (CASSANDRA-17153)\n * Improve guardrails messages (CASSANDRA-17430)\n * Remove all usages of junit.framework and ban them via Checkstyle (CASSANDRA-17316)\n * Add guardrails for read/write consistency levels (CASSANDRA-17188)\n * Add guardrail for SELECT IN terms and their cartesian product (CASSANDRA-17187)\n * remove unused imports in cqlsh.py and cqlshlib (CASSANDRA-17413)\n * deprecate property windows_timer_interval (CASSANDRA-17404)\n * Expose streaming as a vtable (CASSANDRA-17390)\n * Expose all client options via system_views.clients and nodetool clientstats (CASSANDRA-16378)\n * Make startup checks configurable (CASSANDRA-17220)\n * Add guardrail for number of partition keys on IN queries (CASSANDRA-17186)\n * update Python test framework from nose to pytest (CASSANDRA-17293)\n * Fix improper CDC commit log segments deletion in non-blocking mode (CASSANDRA-17233)\n * Add support for string concatenations through the + operator (CASSANDRA-17190)\n * Limit the maximum hints size per host (CASSANDRA-17142)\n * Add a virtual table for exposing batch metrics (CASSANDRA-17225)\n * Flatten guardrails config (CASSANDRA-17353)\n * Instance failed to start up due to NPE in StartupClusterConnectivityChecker (CASSANDRA-17347)\n * add the shorter version of version flag (-v) in cqlsh (CASSANDRA-17236)\n * Make vtables accessible via internode messaging (CASSANDRA-17295)\n * Add support for PEM based key material for SSL (CASSANDRA-17031)\n * Standardize storage configuration parameters' names. Support unit suffixes. (CASSANDRA-15234)\n * Remove support for Windows (CASSANDRA-16956)\n * Runtime-configurable YAML option to prohibit USE statements (CASSANDRA-17318)\n * When streaming sees a ClosedChannelException this triggers the disk failure policy (CASSANDRA-17116)\n * Add a virtual table for exposing prepared statements metrics (CASSANDRA-17224)\n * Remove python 2.x support from cqlsh (CASSANDRA-17242)\n * Prewarm role and credential caches to avoid timeouts at startup (CASSANDRA-16958)\n * Make capacity/validity/updateinterval/activeupdate for Auth Caches configurable via nodetool (CASSANDRA-17063)\n * Added startup check for read_ahead_kb setting (CASSANDRA-16436)\n * Avoid unecessary array allocations and initializations when performing query checks (CASSANDRA-17209)\n * Add guardrail for list operations that require read before write (CASSANDRA-17154)\n * Migrate thresholds for number of keyspaces and tables to guardrails (CASSANDRA-17195)\n * Remove self-reference in SSTableTidier (CASSANDRA-17205)\n * Add guardrail for query page size (CASSANDRA-17189)\n * Allow column_index_size_in_kb to be configurable through nodetool (CASSANDRA-17121)\n * Emit a metric for number of local read and write calls\n * Add non-blocking mode for CDC writes (CASSANDRA-17001)\n * Add guardrails framework (CASSANDRA-17147)\n * Harden resource management on SSTable components to prevent future leaks (CASSANDRA-17174)\n * Make nodes more resilient to local unrelated files during startup (CASSANDRA-17082)\n * repair prepare message would produce a wrong error message if network timeout happened rather than reply wait timeout (CASSANDRA-16992)\n * Log queries that fail on timeout or unavailable errors up to once per minute by default (CASSANDRA-17159)\n * Refactor normal/preview/IR repair to standardize repair cleanup and error handling of failed RepairJobs (CASSANDRA-17069)\n * Log missing peers in StartupClusterConnectivityChecker (CASSANDRA-17130)\n * Introduce separate rate limiting settings for entire SSTable streaming (CASSANDRA-17065)\n * Implement Virtual Tables for Auth Caches (CASSANDRA-16914)\n * Actively update auth cache in the background (CASSANDRA-16957)\n * Add unix time conversion functions (CASSANDRA-17029)\n * JVMStabilityInspector.forceHeapSpaceOomMaybe should handle all non-heap OOMs rather than only supporting direct only (CASSANDRA-17128)\n * Forbid other Future implementations with checkstyle (CASSANDRA-17055)\n * commit log was switched from non-daemon to daemon threads, which causes the JVM to exit in some case as no non-daemon threads are active (CASSANDRA-17085)\n * Add a Denylist to block reads and writes on specific partition keys (CASSANDRA-12106)\n * v4+ protocol did not clean up client warnings, which caused leaking the state (CASSANDRA-17054)\n * Remove duplicate toCQLString in ReadCommand (CASSANDRA-17023)\n * Ensure hint window is persistent across restarts of a node (CASSANDRA-14309)\n * Allow to GRANT or REVOKE multiple permissions in a single statement (CASSANDRA-17030)\n * Allow to grant permission for all tables in a keyspace (CASSANDRA-17027)\n * Log time spent writing keys during compaction (CASSANDRA-17037)\n * Make nodetool compactionstats and sstable_tasks consistent (CASSANDRA-16976)\n * Add metrics and logging around index summary redistribution (CASSANDRA-17036)\n * Add configuration options for minimum allowable replication factor and default replication factor (CASSANDRA-14557)\n * Expose information about stored hints via a nodetool command and a virtual table (CASSANDRA-14795)\n * Add broadcast_rpc_address to system.local (CASSANDRA-11181)\n * Add support for type casting in WHERE clause components and in the values of INSERT/UPDATE statements (CASSANDRA-14337)\n * add credentials file support to CQLSH (CASSANDRA-16983)\n * Skip remaining bytes in the Envelope buffer when a ProtocolException is thrown to avoid double decoding (CASSANDRA-17026)\n * Allow reverse iteration of resources during permissions checking (CASSANDRA-17016)\n * Add feature to verify correct ownership of attached locations on disk at startup (CASSANDRA-16879)\n * Make SSLContext creation pluggable/extensible (CASSANDRA-16666)\n * Add soft/hard limits to local reads to protect against reading too much data in a single query (CASSANDRA-16896)\n * Avoid token cache invalidation for removing a non-member node (CASSANDRA-15290)\n * Allow configuration of consistency levels on auth operations (CASSANDRA-12988)\n * Add number of sstables in a compaction to compactionstats output (CASSANDRA-16844)\n * Upgrade Caffeine to 2.9.2 (CASSANDRA-15153)\n * Allow DELETE and TRUNCATE to work on Virtual Tables if the implementation allows it (CASSANDRA-16806)\n * Include SASI components to snapshots (CASSANDRA-15134)\n * Fix missed wait latencies in the output of `nodetool tpstats -F` (CASSANDRA-16938)\n * Reduce native transport max frame size to 16MB (CASSANDRA-16886)\n * Add support for filtering using IN restrictions (CASSANDRA-14344)\n * Provide a nodetool command to invalidate auth caches (CASSANDRA-16404)\n * Catch read repair timeout exceptions and add metric (CASSANDRA-16880)\n * Exclude Jackson 1.x transitive dependency of hadoop* provided dependencies (CASSANDRA-16854)\n * Add client warnings and abort to tombstone and coordinator reads which go past a low/high watermark (CASSANDRA-16850)\n * Add TTL support to nodetool snapshots (CASSANDRA-16789)\n * Allow CommitLogSegmentReader to optionally skip sync marker CRC checks (CASSANDRA-16842)\n * allow blocking IPs from updating metrics about traffic (CASSANDRA-16859)\n * Request-Based Native Transport Rate-Limiting (CASSANDRA-16663)\n * Implement nodetool getauditlog command (CASSANDRA-16725)\n * Clean up repair code (CASSANDRA-13720)\n * Background schedule to clean up orphaned hints files (CASSANDRA-16815)\n * Modify SecondaryIndexManager#indexPartition() to retrieve only columns for which indexes are actually being built (CASSANDRA-16776)\n * Batch the token metadata update to improve the speed (CASSANDRA-15291)\n * Reduce the log level on \"expected\" repair exceptions (CASSANDRA-16775)\n * Make JMXTimer expose attributes using consistent time unit (CASSANDRA-16760)\n * Remove check on gossip status from DynamicEndpointSnitch::updateScores (CASSANDRA-11671)\n * Fix AbstractReadQuery::toCQLString not returning valid CQL (CASSANDRA-16510)\n * Log when compacting many tombstones (CASSANDRA-16780)\n * Display bytes per level in tablestats for LCS tables (CASSANDRA-16799)\n * Add isolated flush timer to CommitLogMetrics and ensure writes correspond to single WaitingOnCommit data points (CASSANDRA-16701)\n * GossiperTest.testHasVersion3Nodes didn't take into account trunk version changes, fixed to rely on latest version (CASSANDRA-16651)\n * Update JNA library to 5.9.0 and snappy-java to version 1.1.8.4 (CASSANDRA-17040)\nMerged from 4.0:\n * Utilise BTree improvements to reduce garbage and improve throughput (CASSANDRA-15511)\nMerged from 3.11:\nMerged from 3.0:\n * Fix writetime and ttl functions forbidden for collections instead of multicell columns (CASSANDRA-17628)\n * Fix issue where frozen maps may not be serialized in the correct order (CASSANDRA-17623)\n * Suppress CVE-2022-24823 (CASSANDRA-17633)\n * fsync TOC and digest files (CASSANDRA-10709)\n\n\n4.0.4\n * Optimise BTree build,update and transform operations (CASSANDRA-15510)\n * Clean up schema migration coordinator and tests (CASSANDRA-17533)\n * Shut repair task executor down without interruption to avoid compromising shared channel proxies (CASSANDRA-17466)\n * Generate valid KEYSPACE / MATERIALIZED VIEW for CQL for views (CASSANDRA-17266)\n * Fix timestamp tz parsing (CASSANDRA-17467)\n * Suppress CVE-2021-44521 from driver (CASSANDRA-17459)\n * Upgrade jackson to 2.13.2 (CASSANDRA-17460)\n * Make sstableloader honour native port option (CASSANDRA-17210)\n * Reject snapshot names with special character (CASSANDRA-15297)\n * Fix ObjectSizes implementation and usages (CASSANDRA-17402)\n * Fix race condition bug during local session repair (CASSANDRA-17335)\n * Fix ignored streaming encryption settings in sstableloader (CASSANDRA-17367)\n * Streaming tasks handle empty SSTables correctly (CASSANDRA-16349)\n * Prevent SSTableLoader from doing unnecessary work (CASSANDRA-16349)\nMerged from 3.11:\n * Upgrade jackson-databind to 2.13.2.2 (CASSANDRA-17556)\n * Upgrade slf4j to 1.7.25 (CASSANDRA-17474)\n * Upgrade jackson to 2.13.2 (CASSANDRA-17492)\n * emit warning on keyspace creation when replication factor is bigger than the number of nodes (CASSANDRA-16747)\n * Fix snapshot true size calculation (CASSANDRA-17267)\n * Validate existence of DCs when repairing (CASSANDRA-17407)\n * dropping of a materialized view creates a snapshot with dropped- prefix (CASSANDRA-17415)\nMerged from 3.0:\n * fsync TOC and digest files (CASSANDRA-10709)\n * Fix URISyntaxException in nodetool with updated Java (CASSANDRA-17581)\n * Schema mutations may not be completed on drain (CASSANDRA-17524)\n * Fix data corruption in AbstractCompositeType due to static boolean byte buffers (CASSANDRA-14752)\n * Add procps dependency to RPM/Debian packages (CASSANDRA-17516)\n * Suppress CVE-2021-44521 (CASSANDRA-17492)\n * ConnectionLimitHandler may leaks connection count if remote connection drops (CASSANDRA-17252)\n * Require ant >= 1.10 (CASSANDRA-17428)\n * Disallow CONTAINS for UPDATE and DELETE (CASSANDRA-15266)\n * Suppress inapplicable CVEs (CASSANDRA-17368)\n * Fix flaky test - test_cqlsh_completion.TestCqlshCompletion (CASSANDRA-17338)\n * Fixed TestCqlshOutput failing tests (CASSANDRA-17386)\n * Lazy transaction log replica creation allows incorrect replica content divergence during anticompaction (CASSANDRA-17273)\n * LeveledCompactionStrategy disk space check improvements (CASSANDRA-17272)\n\n\n4.0.3\n * Deprecate otc_coalescing_strategy, otc_coalescing_window_us, otc_coalescing_enough_coalesced_messages,\n   otc_backlog_expiration_interval_ms (CASSANDRA-17377)\n * Improve start up processing of Incremental Repair information read from system.repairs (CASSANDRA-17342)\n * Extend operator control over the UDF threading model for CVE-2021-44521 (CASSANDRA-17352)\n * Full Java 11 support (CASSANDRA-16894)\n * Remove unused 'geomet' package from cqlsh path (CASSANDRA-17271)\n * Removed unused 'cql' dependency (CASSANDRA-17247)\n * Don't block gossip when clearing repair snapshots (CASSANDRA-17168)\n * Deduplicate warnings for deprecated parameters (changed names) (CASSANDRA-17160)\n * Update ant-junit to version 1.10.12 (CASSANDRA-17218)\n * Add droppable tombstone metrics to nodetool tablestats (CASSANDRA-16308)\n * Fix disk failure triggered when enabling FQL on an unclean directory (CASSANDRA-17136)\n * Fixed broken classpath when multiple jars in build directory (CASSANDRA-17129)\n * DebuggableThreadPoolExecutor does not propagate client warnings (CASSANDRA-17072)\n * internode_send_buff_size_in_bytes and internode_recv_buff_size_in_bytes have new names. Backward compatibility with the old names added (CASSANDRA-17141)\n * Remove unused configuration parameters from cassandra.yaml (CASSANDRA-17132)\n * Queries performed with NODE_LOCAL consistency level do not update request metrics (CASSANDRA-17052)\n * Fix multiple full sources can be select unexpectedly for bootstrap streaming (CASSANDRA-16945)\n * Fix cassandra.yaml formatting of parameters (CASSANDRA-17131)\n * Add backward compatibility for CQLSSTableWriter Date fields (CASSANDRA-17117)\n * Push initial client connection messages to trace (CASSANDRA-17038)\n * Correct the internode message timestamp if sending node has wrapped (CASSANDRA-16997)\n * Avoid race causing us to return null in RangesAtEndpoint (CASSANDRA-16965)\n * Avoid rewriting all sstables during cleanup when transient replication is enabled (CASSANDRA-16966)\n * Prevent CQLSH from failure on Python 3.10 (CASSANDRA-16987)\n * Avoid trying to acquire 0 permits from the rate limiter when taking snapshot (CASSANDRA-16872)\n * Remove all the state pollution between tests in SSTableReaderTest (CASSANDRA-16888)\n * Delay auth setup until after gossip has settled to avoid unavailables on startup (CASSANDRA-16783)\n * org.apache.cassandra.db.rows.ArrayCell#unsharedHeapSizeExcludingData includes data twice (CASSANDRA-16900)\n * Fix clustering order logic in CREATE MATERIALIZED VIEW (CASSANDRA-16898)\n * Exclude Jackson 1.x transitive dependency of hadoop* provided dependencies (CASSANDRA-16854)\n * Tolerate missing DNS entry when completing a host replacement (CASSANDRA-16873)\n * Harden PrunableArrayQueue against Pruner implementations that might throw exceptions (CASSANDRA-16866)\n * Move RepairedDataInfo to the execution controller rather than the ReadCommand to avoid unintended sharing (CASSANDRA-16721)\n * Bump zstd-jni version to 1.5.0-4 (CASSANDRA-16884)\n * Remove assumption that all urgent messages are small (CASSANDRA-16877)\n * ArrayClustering.unsharedHeapSize does not include the data so undercounts the heap size (CASSANDRA-16845)\n * Improve help, doc and error messages about sstabledump -k and -x arguments (CASSANDRA-16818)\n * Add repaired/unrepaired bytes back to nodetool (CASSANDRA-15282)\n * Upgrade lz4-java to 1.8.0 to add RH6 support back (CASSANDRA-16753)\n * Improve DiagnosticEventService.publish(event) logging message of events (CASSANDRA-16749)\n * Cleanup dependency scopes (CASSANDRA-16704)\n * Make JmxHistogram#getRecentValues() and JmxTimer#getRecentValues() thread-safe (CASSANDRA-16707)\nMerged from 3.11:\n * Upgrade jackson-databind to 2.13.2.2 (CASSANDRA-17556)\n * Upgrade slf4j to 1.7.25 (CASSANDRA-17474)\n * Upgrade jackson to 2.13.2 (CASSANDRA-17492)\n * emit warning on keyspace creation when replication factor is bigger than the number of nodes (CASSANDRA-16747)\n * Fix snapshot true size calculation (CASSANDRA-17267)\n * dropping of a materialized view creates a snapshot with dropped- prefix (CASSANDRA-17415)\n * Validate existence of DCs when repairing (CASSANDRA-17407)\n * Add key validation to ssstablescrub (CASSANDRA-16969)\n * Update Jackson from 2.9.10 to 2.12.5 (CASSANDRA-16851)\n * Make assassinate more resilient to missing tokens (CASSANDRA-16847)\n * Validate SASI tokenizer options before adding index to schema (CASSANDRA-15135)\n * Fixup scrub output when no data post-scrub and clear up old use of row, which really means partition (CASSANDRA-16835)\n * Reduce thread contention in CommitLogSegment and HintsBuffer (CASSANDRA-16072)\n * Make cqlsh use the same set of reserved keywords than the server uses (CASSANDRA-15663)\n * Optimize bytes skipping when reading SSTable files (CASSANDRA-14415)\n * Enable tombstone compactions when unchecked_tombstone_compaction is set in TWCS (CASSANDRA-14496)\n * Read only the required SSTables for single partition queries (CASSANDRA-16737)\nMerged from 3.0:\n * Schema mutations may not be completed on drain (CASSANDRA-17524)\n * Fix data corruption in AbstractCompositeType due to static boolean byte buffers (CASSANDRA-14752)\n * Add procps dependency to RPM/Debian packages (CASSANDRA-17516)\n * Suppress CVE-2021-44521 (CASSANDRA-17492)\n * ConnectionLimitHandler may leaks connection count if remote connection drops (CASSANDRA-17252)\n * Require ant >= 1.10 (CASSANDRA-17428)\n * Disallow CONTAINS for UPDATE and DELETE (CASSANDRA-15266)\n * Suppress inapplicable CVEs (CASSANDRA-17368)\n * Fix flaky test - test_cqlsh_completion.TestCqlshCompletion (CASSANDRA-17338)\n * Fixed TestCqlshOutput failing tests (CASSANDRA-17386)\n * Lazy transaction log replica creation allows incorrect replica content divergence during anticompaction (CASSANDRA-17273)\n * LeveledCompactionStrategy disk space check improvements (CASSANDRA-17272)\n * Fix conversion from megabits to bytes in streaming rate limiter (CASSANDRA-17243)\n * Upgrade logback to 1.2.9 (CASSANDRA-17204)\n * Avoid race in AbstractReplicationStrategy endpoint caching (CASSANDRA-16673)\n * Fix abort when window resizing during cqlsh COPY (CASSANDRA-15230)\n * Fix slow keycache load which blocks startup for tables with many sstables (CASSANDRA-14898)\n * Fix rare NPE caused by batchlog replay / node decomission races (CASSANDRA-17049)\n * Allow users to view permissions of the roles they created (CASSANDRA-16902)\n * Fix failure handling in inter-node communication (CASSANDRA-16334)\n * Log more information when a node runs out of commitlog space (CASSANDRA-11323)\n * Don't take snapshots when truncating system tables (CASSANDRA-16839)\n * Make -Dtest.methods consistently optional in all Ant test targets (CASSANDRA-17014)\n * Immediately apply stream throughput, considering negative values as unthrottled (CASSANDRA-16959)\n * Do not release new SSTables in offline transactions (CASSANDRA-16975)\n * ArrayIndexOutOfBoundsException in FunctionResource#fromName (CASSANDRA-16977, CASSANDRA-16995)\n * CVE-2015-0886 Security vulnerability in jbcrypt is addressed (CASSANDRA-9384)\n * Avoid useless SSTable reads during single partition queries (CASSANDRA-16944)\n * Debian init respects CASSANDRA_HEAPDUMP_DIR (CASSANDRA-13843)\n * Catch UnsatisfiedLinkError in WindowsTimer (CASSANDRA-16085)\n * Avoid removing batch when it's not created during view replication (CASSANDRA-16175)\n * Make the addition of regular column to COMPACT tables throw an InvalidRequestException (CASSANDRA-14564)\n * Make the addition of regular column to COMPACT tables throw an InvalidRequestException (CASSANDRA-14564)\n * Fix secondary indexes on primary key columns skipping some writes (CASSANDRA-16868)\n * Use JMX to validate nodetool --jobs parameter (CASSANDRA-16104)\n * Handle properly UnsatisfiedLinkError in NativeLibrary#getProcessID() (CASSANDRA-16578)\n * Remove mutation data from error log message (CASSANDRA-16817)\n * Binary releases no longer bundle the apidocs (javadoc) (CASSANDRA-16557)\n * Migrate dependency handling from maven-ant-tasks to resolver-ant-tasks, removing lib/ directory from version control (CASSANDRA-16557)\n * Don't allow seeds to replace without using unsafe (CASSANDRA-14463)\n * Calculate time remaining correctly for all compaction types in compactionstats (CASSANDRA-14701)\n * Receipt of gossip shutdown notification updates TokenMetadata (CASSANDRA-16796)\n * Count bloom filter misses correctly (CASSANDRA-12922)\n * Reject token() in MV WHERE clause (CASSANDRA-13464)\n * Ensure java executable is on the path (CASSANDRA-14325)\n * Clean transaction log leftovers at the beginning of sstablelevelreset and sstableofflinerelevel (CASSANDRA-12519)\n\n\n4.0.0\n * Avoid signaling DigestResolver until the minimum number of responses are guaranteed to be visible (CASSANDRA-16807)\n * Fix pre-4.0 FWD_FRM parameter serializer (CASSANDRA-16808)\n * Fix fwd to/from headers in DC write forwarding (CASSANDRA-16797)\n * Fix CassandraVersion::compareTo (CASSANDRA-16794)\n * BinLog does not close chronicle queue leaving this to GC to cleanup (CASSANDRA-16774)\n\n\n4.0-rc2\n * Improved password obfuscation (CASSANDRA-16801)\n * Avoid memoizing the wrong min cluster version during upgrades (CASSANDRA-16759)\n * Obfuscate passwords in statements in QueryEvents (CASSANDRA-16669)\n * Fix queries on empty partitions with static data (CASSANDRA-16686)\n * Keep python driver in artifacts (CASSANDRA-16700)\n * Improve AuditLogging documentation and logback.xml(CASSANDRA-16682)\n * Spin up SEPWorker threads whenever we grow the number of work permits(CASSANDRA-16668)\n * Add a warning to cqlsh 6.0.0 that DESCRIBE does not work with a Cassandra 3.x servers (CASSANDRA-16652)\n * cqlsh: fix DESC TYPE with non-ascii character in the identifier (CASSANDRA-16400)\n * Remove drivers dependency and bring cql_keywords_reserved on server side (CASSANDRA-16659)\n * Fix in-browser \"help\", Python 3 (CASSANDRA-16658)\n * Fix DROP COMPACT STORAGE for counters (CASSANDRA-16653)\n * Add back validation for AlterTableStatements (CASSANDRA-16643)\n * Fix cqlsh encoding error with unicode in multi-line statement (CASSANDRA-16539)\n * Fix race in fat client removal (CASSANDRA-16238)\n * Test org.apache.cassandra.net.AsyncPromiseTest FAILED (CASSANDRA-16596)\nMerged from 3.11:\n * Fix LeveledCompactionStrategy compacts last level throw an ArrayIndexOutOfBoundsException (CASSANDRA-15669)\n * Maps $CASSANDRA_LOG_DIR to cassandra.logdir java property when executing nodetool (CASSANDRA-16199)\n * Nodetool garbagecollect should retain SSTableLevel for LCS (CASSANDRA-16634)\n * Ignore stale acks received in the shadow round (CASSANDRA-16588)\nMerged from 3.0:\n * Handle correctly the exceptions thrown by custom QueryHandler constructors (CASSANDRA-16703)\n * Adding columns via ALTER TABLE can generate corrupt sstables (CASSANDRA-16735)\n * Add flag to disable ALTER...DROP COMPACT STORAGE statements (CASSANDRA-16733)\n * CQL shell should prefer newer TLS version by default (CASSANDRA-16695)\n * Ensure that existing empty rows are properly returned (CASSANDRA-16671)\n * Failure to execute queries should emit a KPI other than read timeout/unavailable so it can be alerted/tracked (CASSANDRA-16581)\n * Don't wait on schema versions from replacement target when replacing a node (CASSANDRA-16692)\n * StandaloneVerifier does not fail when unable to verify SSTables, it only fails if Corruption is thrown (CASSANDRA-16683)\n * Fix bloom filter false ratio calculation by including true negatives (CASSANDRA-15834)\n * Prevent loss of commit log data when moving sstables between nodes (CASSANDRA-16619)\n * Fix materialized view builders inserting truncated data (CASSANDRA-16567)\n\n\n4.0-rc1\n * Allow for setting buffer max capacity to increase it dynamically as needed (CASSANDRA-16524)\n * Harden internode message resource limit accounting against serialization failures (CASSANDRA-16616)\n * Add back the source release of python driver in tree to avoid fetching from GitHub APIs (CASSANDRA-16599)\n * Fix false unavailable for queries due to cluster topology changes (CASSANDRA-16545)\n * Fixed a race condition issue in nodetool repair where we poll for the error before seeing the error notification, leading to a less meaningful message (CASSANDRA-16585)\n * Fix mixed cluster GROUP BY queries (CASSANDRA-16582)\n * Upgrade jflex to 1.8.2 (CASSANDRA-16576)\n * Binary releases no longer bundle the apidocs (javadoc) (CASSANDRA-15561)\n * Fix Streaming Repair metrics (CASSANDRA-16190)\n * Scheduled (delayed) schema pull tasks should not run after MIGRATION stage shutdown during decommission (CASSANDRA-16495)\n * When behind a firewall trunk is not buildable, need to allow overriding URLs (CASSANDRA-16563)\n * Make sure sstables with moved starts are removed correctly in LeveledGenerations (CASSANDRA-16552)\n * Fix race between secondary index building and active compactions tracking (CASSANDRA-16554)\n * Migrate dependency handling from maven-ant-tasks to resolver-ant-tasks, removing lib/ directory from version control (CASSANDRA-16391)\n * Fix 4.0 node sending a repair prepare message to a 3.x node breaking the connection (CASSANDRA-16542)\n * Removed synchronized modifier from StreamSession#onChannelClose to prevent deadlocking on flush (CASSANDRA-15892)\n * Throw IOE in AbstractType.writeValue if value has wrong fixed length (CASSANDRA-16500)\n * Execute background refreshing of auth caches on a dedicated executor (CASSANDRA-15177)\n * Update bundled java and python drivers to 3.11.0 and 3.25.0 respectively (CASSANDRA-13951)\n * Add io.netty.tryReflectionSetAccessible=true to j11 server options in order to enable netty to use Unsafe direct byte buffer construction (CASSANDRA-16493)\n * Make cassandra-stress -node support host:port notation (CASSANDRA-16529)\n * Better handle legacy gossip application states during (and after) upgrades (CASSANDRA-16525)\n * Mark StreamingMetrics.ActiveOutboundStreams as deprecated (CASSANDRA-11174)\n * Increase the cqlsh version number (CASSANDRA-16509)\n * Fix the CQL generated for the views.where_clause column when some identifiers require quoting (CASSANDRA-16479)\n * Send FAILED_SESSION_MSG on shutdown and on in-progress repairs during startup (CASSANDRA-16425)\n * Reinstate removed ApplicationState padding (CASSANDRA-16484)\n * Expose data dirs to ColumnFamilyStoreMBean (CASSANDRA-16335)\n * Add possibility to copy SSTables in SSTableImporter instead of moving them (CASSANDRA-16407)\n * Fix DESCRIBE statement for CUSTOM indices with options (CASSANDRA-16482)\n * Fix cassandra-stress JMX connection (CASSANDRA-16473)\n * Avoid processing redundant application states on endpoint changes (CASSANDRA-16381)\n * Prevent parent repair sessions leak (CASSANDRA-16446)\n * Fix timestamp issue in SinglePartitionSliceCommandTest testPartitionDâ¦eletionRowDeletionTie (CASSANDRA-16443)\n * Promote protocol V5 out of beta (CASSANDRA-14973)\n * Fix incorrect encoding for strings can be UTF8 (CASSANDRA-16429)\n * Fix node unable to join when RF > N in multi-DC with added warning (CASSANDRA-16296)\n * Add an option to nodetool tablestats to check sstable location correctness (CASSANDRA-16344)\n * Unable to ALTER KEYSPACE while decommissioned/assassinated nodes are in gossip (CASSANDRA-16422)\n * Metrics backward compatibility restored after CASSANDRA-15066 (CASSANDRA-16083)\n * Reduce new reserved keywords introduced since 3.0 (CASSANDRA-16439)\n * Improve system tables handling in case of disk failures (CASSANDRA-14793)\n * Add access and datacenters to unreserved keywords (CASSANDRA-16398)\n * Fix nodetool ring, status output when DNS resolution or port printing are in use (CASSANDRA-16283)\n * Upgrade Jacoco to 0.8.6 (for Java 11 support) (CASSANDRA-16365)\n * Move excessive repair debug loggings to trace level (CASSANDRA-16406)\n * Restore validation of each message's protocol version (CASSANDRA-16374)\n * Upgrade netty and chronicle-queue dependencies to get Auditing and native library loading working on arm64 architectures (CASSANDRA-16384,CASSANDRA-16392)\n * Release StreamingTombstoneHistogramBuilder spool when switching writers (CASSANDRA-14834)\n * Correct memtable on-heap size calculations to match actual use (CASSANDRA-16318)\n * Fix client notifications in CQL protocol v5 (CASSANDRA-16353)\n * Too defensive check when picking sstables for preview repair (CASSANDRA-16284)\n * Ensure pre-negotiation native protocol responses have correct stream id (CASSANDRA-16376)\n * Fix check for -Xlog in cassandra-env.sh (CASSANDRA-16279)\n * SSLFactory should initialize SSLContext before setting protocols (CASSANDRA-16362)\n * Restore sasi dependencies jflex, snowball-stemmer, and concurrent-trees, in the cassandra-all pom (CASSANDRA-16303)\n * Fix DecimalDeserializer#toString OOM (CASSANDRA-14925)\nMerged from 3.11:\n * Add autocomplete and error messages for provide_overlapping_tombstones (CASSANDRA-16350)\n * Upgrade jackson-databind to 2.9.10.8 (CASSANDRA-16462)\n * Fix digest computation for queries with fetched but non queried columns (CASSANDRA-15962)\n * Reduce amount of allocations during batch statement execution (CASSANDRA-16201)\n * Update jflex-1.6.0.jar to match upstream (CASSANDRA-16393)\nMerged from 3.0:\n * Don't wait for schema migrations from removed nodes (CASSANDRA-16577)\n * Ignore trailing zeros in hint files (CASSANDRA-16523)\n * Refuse DROP COMPACT STORAGE if some 2.x sstables are in use (CASSANDRA-15897)\n * Fix ColumnFilter::toString not returning a valid CQL fragment (CASSANDRA-16483)\n * Fix ColumnFilter behaviour to prevent digest mitmatches during upgrades (CASSANDRA-16415)\n * Update debian packaging for python3 (CASSANDRA-16396)\n * Avoid pushing schema mutations when setting up distributed system keyspaces locally (CASSANDRA-16387)\n * Prevent unbounded number of pending flushing tasks (CASSANDRA-16261)\n * Improve empty hint file handling during startup (CASSANDRA-16162)\n * Fix skipping on pre-3.0 created compact storage sstables due to missing primary key liveness (CASSANDRA-16226)\n * Allow empty string in collections with COPY FROM in cqlsh (CASSANDRA-16372)\nMerged from 2.2:\n * Remove ant targets list-jvm-dtests and ant list-jvm-upgrade-dtests (CASSANDRA-16519)\n * Fix centos packaging for arm64, >=4.0 rpm's now require python3 (CASSANDRA-16477)\n * Make TokenMetadata's ring version increments atomic (CASSANDRA-16286)\n\n\n4.0-beta4\n * DROP COMPACT STORAGE should invalidate prepared statements still using CompactTableMetadata (CASSANDRA-16361)\n * Update default num_tokens to 16 and allocate_tokens_for_local_replication_factor to 3 (CASSANDRA-13701)\n * Remove use of String.intern() (CASSANDRA-15810)\n * Fix the missing bb position in ByteBufferAccessor.getUnsignedShort (CASSANDRA-16249)\n * Make sure OOM errors are rethrown on truncation failure (CASSANDRA-16254)\n * Send back client warnings when creating too many tables/keyspaces (CASSANDRA-16309)\n * Add dedicated tcp user timeout for streaming connection (CASSANDRA-16143)\n * Add generatetokens script for offline token allocation strategy generation (CASSANDRA-16205)\n * Remove Windows scripts (CASSANDRA-16171)\n * Improve checksumming and compression in protocol V5 (CASSANDRA-15299)\n * Optimised repair streaming improvements (CASSANDRA-16274)\n * Update jctools dependency to 3.1.0 (CASSANDRA-16255)\n * 'SSLEngine closed already' exception on failed outbound connection (CASSANDRA-16277)\n * Drain and/or shutdown might throw because of slow messaging service shutdown (CASSANDRA-16276)\n * Upgrade JNA to 5.6.0, dropping support for <=glibc-2.6 systems (CASSANDRA-16212)\n * Add saved Host IDs to TokenMetadata at startup (CASSANDRA-16246)\n * Ensure that CacheMetrics.requests is picked up by the metric reporter (CASSANDRA-16228)\n * Add a ratelimiter to snapshot creation and deletion (CASSANDRA-13019)\n * Produce consistent tombstone for reads to avoid digest mistmatch (CASSANDRA-15369)\n * Fix SSTableloader issue when restoring a table named backups (CASSANDRA-16235)\n * Invalid serialized size for responses caused by increasing message time by 1ms which caused extra bytes in size calculation (CASSANDRA-16103)\n * Throw BufferOverflowException from DataOutputBuffer for better visibility (CASSANDRA-16214)\n * TLS connections to the storage port on a node without server encryption configured causes java.io.IOException accessing missing keystore (CASSANDRA-16144)\n * Internode messaging catches OOMs and does not rethrow (CASSANDRA-15214)\n * When a table attempts to clean up metrics, it was cleaning up all global table metrics (CASSANDRA-16095)\n * Bring back the accepted encryption protocols list as configurable option (CASSANDRA-13325)\n * DigestResolver.getData throws AssertionError since dataResponse is null (CASSANDRA-16097)\n * Cannot replace_address /X because it doesn't exist in gossip (CASSANDRA-16213)\n * cqlsh row_id resets on page boundaries (CASSANDRA-16160)\nMerged from 3.11:\n * SASI's `max_compaction_flush_memory_in_mb` settings over 100GB revert to default of 1GB (CASSANDRA-16071)\nMerged from 3.0:\n * Extend the exclusion of replica filtering protection to other indices instead of just SASI (CASSANDRA-16311)\n * Synchronize transaction logs for JBOD (CASSANDRA-16225)\n * Fix the counting of cells per partition (CASSANDRA-16259)\n * Fix serial read/non-applying CAS linearizability (CASSANDRA-12126)\n * Avoid potential NPE in JVMStabilityInspector (CASSANDRA-16294)\n * Improved check of num_tokens against the length of initial_token (CASSANDRA-14477)\n * Fix a race condition on ColumnFamilyStore and TableMetrics (CASSANDRA-16228)\n * Remove the SEPExecutor blocking behavior (CASSANDRA-16186)\n * Wait for schema agreement when bootstrapping (CASSANDRA-15158)\n * Prevent invoking enable/disable gossip when not in NORMAL (CASSANDRA-16146)\n * Raise Dynamic Snitch Default Badness Threshold to 1.0 (CASSANDRA-16285)\nMerged from 2.2:\n * Fix the histogram merge of the table metrics (CASSANDRA-16259)\n\n\n4.0-beta3\n * Segregate Network and Chunk Cache BufferPools and Recirculate Partially Freed Chunks (CASSANDRA-15229)\n * Fail truncation requests when they fail on a replica (CASSANDRA-16208)\n * Move compact storage validation earlier in startup process (CASSANDRA-16063)\n * Fix ByteBufferAccessor cast exceptions are thrown when trying to query a virtual table (CASSANDRA-16155)\n * Consolidate node liveness check for forced repair (CASSANDRA-16113)\n * Use unsigned short in ValueAccessor.sliceWithShortLength (CASSANDRA-16147)\n * Abort repairs when getting a truncation request (CASSANDRA-15854)\n * Remove bad assert when getting active compactions for an sstable (CASSANDRA-15457)\n * Avoid failing compactions with very large partitions (CASSANDRA-15164)\n * Prevent NPE in StreamMessage in type lookup (CASSANDRA-16131)\n * Avoid invalid state transition exception during incremental repair (CASSANDRA-16067)\n * Allow zero padding in timestamp serialization (CASSANDRA-16105)\n * Add byte array backed cells (CASSANDRA-15393)\n * Correctly handle pending ranges with adjacent range movements (CASSANDRA-14801)\n * Avoid adding locahost when streaming trivial ranges (CASSANDRA-16099)\n * Add nodetool getfullquerylog (CASSANDRA-15988)\n * Fix yaml format and alignment in tpstats (CASSANDRA-11402)\n * Avoid trying to keep track of RTs for endpoints we won't write to during read repair (CASSANDRA-16084)\n * When compaction gets interrupted, the exception should include the compactionId (CASSANDRA-15954)\n * Make Table/Keyspace Metric Names Consistent With Each Other (CASSANDRA-15909)\n * Mutating sstable component may race with entire-sstable-streaming(ZCS) causing checksum validation failure (CASSANDRA-15861)\n * NPE thrown while updating speculative execution time if keyspace is removed during task execution (CASSANDRA-15949)\n * Show the progress of data streaming and index build (CASSANDRA-15406)\n * Add flag to disable chunk cache and disable by default (CASSANDRA-16036)\n * Upgrade to snakeyaml >= 1.26 version for CVE-2017-18640 fix (CASSANDRA-16150)\nMerged from 3.11:\n * Fix ColumnFilter to avoid querying cells of unselected complex columns (CASSANDRA-15977)\n * Fix memory leak in CompressedChunkReader (CASSANDRA-15880)\n * Don't attempt value skipping with mixed version cluster (CASSANDRA-15833)\n * Use IF NOT EXISTS for index and UDT create statements in snapshot schema files (CASSANDRA-13935)\n * Make sure LCS handles duplicate sstable added/removed notifications correctly (CASSANDRA-14103)\nMerged from 3.0:\n * Avoid marking shutting down nodes as up after receiving gossip shutdown message (CASSANDRA-16094)\n * Handle unexpected columns due to schema races (CASSANDRA-15899)\n * Add flag to ignore unreplicated keyspaces during repair (CASSANDRA-15160)\nMerged from 2.2:\n * Package tools/bin scripts as executable (CASSANDRA-16151)\n * Fixed a NullPointerException when calling nodetool enablethrift (CASSANDRA-16127)\n * Automatically drop compact storage on tables for which it is safe (CASSANDRA-16048)\n * Fixed NullPointerException for COMPACT STORAGE tables with null clustering (CASSANDRA-16241)\n\n\n4.0-beta2\n * Add addition incremental repair visibility to nodetool repair_admin (CASSANDRA-14939)\n * Always access system properties and environment variables via the new CassandraRelevantProperties and CassandraRelevantEnv classes (CASSANDRA-15876)\n * Remove deprecated HintedHandOffManager (CASSANDRA-15939)\n * Prevent repair from overrunning compaction (CASSANDRA-15817)\n * fix cqlsh COPY functions in Python 3.8 on Mac (CASSANDRA-16053)\n * Strip comment blocks from cqlsh input before processing statements (CASSANDRA-15802)\n * Fix unicode chars error input (CASSANDRA-15990)\n * Improved testability for CacheMetrics and ChunkCacheMetrics (CASSANDRA-15788)\n * Handle errors in StreamSession#prepare (CASSANDRA-15852)\n * FQL replay should have options to ignore DDL statements (CASSANDRA-16039)\n * Remove COMPACT STORAGE internals (CASSANDRA-13994)\n * Make TimestampSerializer accept fractional seconds of varying precision (CASSANDRA-15976)\n * Improve cassandra-stress logging when using a profile file that doesn't exist (CASSANDRA-14425)\n * Improve logging for socket connection/disconnection (CASSANDRA-15980)\n * Throw FSWriteError upon write failures in order to apply DiskFailurePolicy (CASSANDRA-15928)\n * Forbid altering UDTs used in partition keys (CASSANDRA-15933)\n * Fix version parsing logic when upgrading from 3.0 (CASSANDRA-15973)\n * Optimize NoSpamLogger use in hot paths (CASSANDRA-15766)\n * Verify sstable components on startup (CASSANDRA-15945)\n * Resolve JMX output inconsistencies from CASSANDRA-7544 storage-port-configurable-per-node (CASSANDRA-15937)\nMerged from 3.11:\n * Correctly interpret SASI's `max_compaction_flush_memory_in_mb` setting in megabytes not bytes (CASSANDRA-16071)\n * Fix short read protection for GROUP BY queries (CASSANDRA-15459)\n * stop_paranoid disk failure policy is ignored on CorruptSSTableException after node is up (CASSANDRA-15191)\n * Frozen RawTuple is not annotated with frozen in the toString method (CASSANDRA-15857)\nMerged from 3.0:\n * Fix gossip shutdown order (CASSANDRA-15816)\n * Remove broken 'defrag-on-read' optimization (CASSANDRA-15432)\n * Check for endpoint collision with hibernating nodes (CASSANDRA-14599)\n * Operational improvements and hardening for replica filtering protection (CASSANDRA-15907)\n * Fix empty/null json string representation (CASSANDRA-15896)\n * Handle difference in timestamp precision between java8 and java11 in LogFIle.java (CASSANDRA-16050)\nMerged from 2.2:\n * Fix CQL parsing of collections when the column type is reversed (CASSANDRA-15814)\nMerged from 2.1:\n * Only allow strings to be passed to JMX authentication (CASSANDRA-16077)\n\n\n4.0-beta1\n * Remove BackPressureStrategy (CASSANDRA-15375)\n * Improve messaging on indexing frozen collections (CASSANDRA-15908)\n * USING_G1 is incorrectly set in cassandra-env.sh if G1 is explicitly disabled with -UseG1GC (CASSANDRA-15931)\n * Update compaction_throughput_mb_per_sec throttle default to 64 (CASSANDRA-14902)\n * Add option to disable compaction at startup (CASSANDRA-15927)\n * FBUtilities.getJustLocalAddress falls back to lo ip on misconfigured nodes (CASSANDRA-15901)\n * Close channel and reduce buffer allocation during entire sstable streaming with SSL (CASSANDRA-15900)\n * Prune expired messages less frequently in internode messaging (CASSANDRA-15700)\n * Fix Ec2Snitch handling of legacy mode for dc names matching both formats, eg \"us-west-2\" (CASSANDRA-15878)\n * Add support for server side DESCRIBE statements (CASSANDRA-14825)\n * Fail startup if -Xmn is set when the G1 garbage collector is used (CASSANDRA-15839)\n * generateSplits method replaced the generateRandomTokens for ReplicationAwareTokenAllocator. (CASSANDRA-15877)\n * Several mbeans are not unregistered when dropping a keyspace and table (CASSANDRA-14888)\n * Update defaults for server and client TLS settings (CASSANDRA-15262)\n * Differentiate follower/initator in StreamMessageHeader (CASSANDRA-15665)\n * Add a startup check to detect if LZ4 uses java rather than native implementation (CASSANDRA-15884)\n * Fix missing topology events when running multiple nodes on the same network interface (CASSANDRA-15677)\n * Create config.yml.MIDRES (CASSANDRA-15712)\n * Fix handling of fully purged static rows in repaired data tracking (CASSANDRA-15848)\n * Prevent validation request submission from blocking ANTI_ENTROPY stage (CASSANDRA-15812)\n * Add fqltool and auditlogviewer to rpm and deb packages (CASSANDRA-14712)\n * Include DROPPED_COLUMNS in schema digest computation (CASSANDRA-15843)\n * Fix Cassandra restart from rpm install (CASSANDRA-15830)\n * Improve handling of 2i initialization failures (CASSANDRA-13606)\n * Add completion_ratio column to sstable_tasks virtual table (CASANDRA-15759)\n * Add support for adding custom Verbs (CASSANDRA-15725)\n * Speed up entire-file-streaming file containment check and allow entire-file-streaming for all compaction strategies (CASSANDRA-15657,CASSANDRA-15783)\n * Provide ability to configure IAuditLogger (CASSANDRA-15748)\n * Fix nodetool enablefullquerylog blocking param parsing (CASSANDRA-15819)\n * Add isTransient to SSTableMetadataView (CASSANDRA-15806)\n * Fix tools/bin/fqltool for all shells (CASSANDRA-15820)\n * Fix clearing of legacy size_estimates (CASSANDRA-15776)\n * Update port when reconnecting to pre-4.0 SSL storage (CASSANDRA-15727)\n * Only calculate dynamicBadnessThreshold once per loop in DynamicEndpointSnitch (CASSANDRA-15798)\n * Cleanup redundant nodetool commands added in 4.0 (CASSANDRA-15256)\n * Update to Python driver 3.23 for cqlsh (CASSANDRA-15793)\n * Add tunable initial size and growth factor to RangeTombstoneList (CASSANDRA-15763)\n * Improve debug logging in SSTableReader for index summary (CASSANDRA-15755)\n * bin/sstableverify should support user provided token ranges (CASSANDRA-15753)\n * Improve logging when mutation passed to commit log is too large (CASSANDRA-14781)\n * replace LZ4FastDecompressor with LZ4SafeDecompressor (CASSANDRA-15560)\n * Fix buffer pool NPE with concurrent release due to in-progress tiny pool eviction (CASSANDRA-15726)\n * Avoid race condition when completing stream sessions (CASSANDRA-15666)\n * Flush with fast compressors by default (CASSANDRA-15379)\n * Fix CqlInputFormat regression from the switch to system.size_estimates (CASSANDRA-15637)\n * Allow sending Entire SSTables over SSL (CASSANDRA-15740)\n * Fix CQLSH UTF-8 encoding issue for Python 2/3 compatibility (CASSANDRA-15739)\n * Fix batch statement preparation when multiple tables and parameters are used (CASSANDRA-15730)\n * Fix regression with traceOutgoingMessage printing message size (CASSANDRA-15687)\n * Ensure repaired data tracking reads a consistent amount of data across replicas (CASSANDRA-15601)\n * Fix CQLSH to avoid arguments being evaluated (CASSANDRA-15660)\n * Correct Visibility and Improve Safety of Methods in LatencyMetrics (CASSANDRA-15597)\n * Allow cqlsh to run with Python2.7/Python3.6+ (CASSANDRA-15659,CASSANDRA-15573)\n * Improve logging around incremental repair (CASSANDRA-15599)\n * Do not check cdc_raw_directory filesystem space if CDC disabled (CASSANDRA-15688)\n * Replace array iterators with get by index (CASSANDRA-15394)\n * Minimize BTree iterator allocations (CASSANDRA-15389)\nMerged from 3.11:\n * Fix cqlsh output when fetching all rows in batch mode (CASSANDRA-15905)\n * Upgrade Jackson to 2.9.10 (CASSANDRA-15867)\n * Fix CQL formatting of read command restrictions for slow query log (CASSANDRA-15503)\nMerged from 3.0:\n * Avoid hinted handoff per-host throttle being arounded to 0 in large cluster (CASSANDRA-15859)\n * Avoid emitting empty range tombstones from RangeTombstoneList (CASSANDRA-15924)\n * Avoid thread starvation, and improve compare-and-swap performance, in the slab allocators (CASSANDRA-15922)\n * Add token to tombstone warning and error messages (CASSANDRA-15890)\n * Fixed range read concurrency factor computation and capped as 10 times tpc cores (CASSANDRA-15752)\n * Catch exception on bootstrap resume and init native transport (CASSANDRA-15863)\n * Fix replica-side filtering returning stale data with CL > ONE (CASSANDRA-8272, CASSANDRA-8273)\n * Rely on snapshotted session infos on StreamResultFuture.maybeComplete to avoid race conditions (CASSANDRA-15667)\n * EmptyType doesn't override writeValue so could attempt to write bytes when expected not to (CASSANDRA-15790)\n * Fix index queries on partition key columns when some partitions contains only static data (CASSANDRA-13666)\n * Avoid creating duplicate rows during major upgrades (CASSANDRA-15789)\n * liveDiskSpaceUsed and totalDiskSpaceUsed get corrupted if IndexSummaryRedistribution gets interrupted (CASSANDRA-15674)\n * Fix Debian init start/stop (CASSANDRA-15770)\n * Fix infinite loop on index query paging in tables with clustering (CASSANDRA-14242)\n * Fix chunk index overflow due to large sstable with small chunk length (CASSANDRA-15595)\n * Allow selecting static column only when querying static index (CASSANDRA-14242)\n * cqlsh return non-zero status when STDIN CQL fails (CASSANDRA-15623)\n * Don't skip sstables in slice queries based only on local min/max/deletion timestamp (CASSANDRA-15690)\nMerged from 2.2:\n * Fix nomenclature of allow and deny lists (CASSANDRA-15862)\n * Remove generated files from source artifact (CASSANDRA-15849)\n * Remove duplicated tools binaries from tarballs (CASSANDRA-15768)\n * Duplicate results with DISTINCT queries in mixed mode (CASSANDRA-15501)\nMerged from 2.1:\n * Fix writing of snapshot manifest when the table has table-backed secondary indexes (CASSANDRA-10968)\n\n\n4.0-alpha4\n * Add client request size server metrics (CASSANDRA-15704)\n * Add additional logging around FileUtils and compaction leftover cleanup (CASSANDRA-15705)\n * Mark system_views/system_virtual_schema as non-alterable keyspaces in cqlsh (CASSANDRA-15711)\n * Fail incremental repair if an old version sstable is involved (CASSANDRA-15612)\n * Fix overflows on StreamingTombstoneHistogramBuilder produced by large deletion times (CASSANDRA-14773)\n * Mark system_views/system_virtual_schema as system keyspaces in cqlsh (CASSANDRA-15706)\n * Avoid unnecessary collection/iterator allocations during btree construction (CASSANDRA-15390)\n * Repair history tables should have TTL and TWCS (CASSANDRA-12701)\n * Fix cqlsh erroring out on Python 3.7 due to webbrowser module being absent (CASSANDRA-15572)\n * Fix IMH#acquireCapacity() to return correct Outcome when endpoint reserve runs out (CASSANDRA-15607)\n * Fix nodetool describering output (CASSANDRA-15682)\n * Only track ideal CL failure when request CL met (CASSANDRA-15696)\n * Fix flaky CoordinatorMessagingTest and docstring in OutboundSink and ConsistentSession (CASSANDRA-15672)\n * Fix force compaction of wrapping ranges (CASSANDRA-15664)\n * Expose repair streaming metrics (CASSANDRA-15656)\n * Set now in seconds in the future for validation repairs (CASSANDRA-15655)\n * Emit metric on preview repair failure (CASSANDRA-15654)\n * Use more appropriate logging levels (CASSANDRA-15661)\n * Fixed empty check in TrieMemIndex due to potential state inconsistency in ConcurrentSkipListMap (CASSANDRA-15526)\n * Added UnleveledSSTables global and table level metric (CASSANDRA-15620)\n * Added Virtual Table exposing Cassandra relevant system properties (CASSANDRA-15616, CASSANDRA-15643)\n * Improve the algorithmic token allocation in case racks = RF (CASSANDRA-15600)\n * Fix ConnectionTest.testAcquireReleaseOutbound (CASSANDRA-15308)\n * Include finalized pending sstables in preview repair (CASSANDRA-15553)\n * Reverted to the original behavior of CLUSTERING ORDER on CREATE TABLE (CASSANDRA-15271)\n * Correct inaccurate logging message (CASSANDRA-15549)\n * Unset GREP_OPTIONS (CASSANDRA-14487)\n * Update to Python driver 3.21 for cqlsh (CASSANDRA-14872)\n * Fix missing Keyspaces in cqlsh describe output (CASSANDRA-15576)\n * Fix multi DC nodetool status output (CASSANDRA-15305)\n * updateCoordinatorWriteLatencyTableMetric can produce misleading metrics (CASSANDRA-15569)\n * Make cqlsh and cqlshlib Python 2 & 3 compatible (CASSANDRA-10190)\n * Improve the description of nodetool listsnapshots command (CASSANDRA-14587)\n * allow embedded cassandra launched from a one-jar or uno-jar (CASSANDRA-15494)\n * Update hppc library to version 0.8.1 (CASSANDRA-12995)\n * Limit the dependencies used by UDFs/UDAs (CASSANDRA-14737)\n * Make native_transport_max_concurrent_requests_in_bytes updatable (CASSANDRA-15519)\n * Cleanup and improvements to IndexInfo/ColumnIndex (CASSANDRA-15469)\n * Potential Overflow in DatabaseDescriptor Functions That Convert Between KB/MB & Bytes (CASSANDRA-15470)\nMerged from 3.11:\n * Allow sstableloader to use SSL on the native port (CASSANDRA-14904)\nMerged from 3.0:\n * cqlsh return non-zero status when STDIN CQL fails (CASSANDRA-15623)\n * Don't skip sstables in slice queries based only on local min/max/deletion timestamp (CASSANDRA-15690)\n * Memtable memory allocations may deadlock (CASSANDRA-15367)\n * Run evictFromMembership in GossipStage (CASSANDRA-15592)\nMerged from 2.2:\n * Duplicate results with DISTINCT queries in mixed mode (CASSANDRA-15501)\n * Disable JMX rebinding (CASSANDRA-15653)\nMerged from 2.1:\n * Fix parse error in cqlsh COPY FROM and formatting for map of blobs (CASSANDRA-15679)\n * Fix Commit log replays when static column clustering keys are collections (CASSANDRA-14365)\n * Fix Red Hat init script on newer systemd versions (CASSANDRA-15273)\n * Allow EXTRA_CLASSPATH to work on tar/source installations (CASSANDRA-15567)\n\n\n4.0-alpha3\n * Restore monotonic read consistency guarantees for blocking read repair (CASSANDRA-14740)\n * Separate exceptions for CAS write timeout exceptions caused by contention and unkown result (CASSANDRA-15350)\n * Fix in-jvm dtest java 11 compatibility (CASSANDRA-15463)\n * Remove joda time dependency (CASSANDRA-15257)\n * Exclude purgeable tombstones from repaired data tracking (CASSANDRA-15462)\n * Exclude legacy counter shards from repaired data tracking (CASSANDRA-15461)\n * Make it easier to add trace headers to messages (CASSANDRA-15499)\n * Fix and optimise partial compressed sstable streaming (CASSANDRA-13938)\n * Improve error when JVM 11 can't access required modules (CASSANDRA-15468)\n * Better handling of file deletion failures by DiskFailurePolicy (CASSANDRA-15143)\n * Prevent read repair mutations from increasing read timeout (CASSANDRA-15442)\n * Document 4.0 system keyspace changes, bump generations (CASSANDRA-15454)\n * Make it possible to disable STCS-in-L0 during runtime (CASSANDRA-15445)\n * Removed obsolete OldNetworkTopologyStrategy (CASSANDRA-13990)\n * Align record header of FQL and audit binary log (CASSANDRA-15076)\n * Shuffle forwarding replica for messages to non-local DC (CASSANDRA-15318)\n * Optimise native protocol ASCII string encoding (CASSANDRA-15410)\n * Make sure all exceptions are propagated in DebuggableThreadPoolExecutor (CASSANDRA-15332)\n * Make it possible to resize concurrent read / write thread pools at runtime (CASSANDRA-15277)\n * Close channels on error (CASSANDRA-15407)\n * Integrate SJK into nodetool (CASSANDRA-12197)\n * Ensure that empty clusterings with kind==CLUSTERING are Clustering.EMPTY (CASSANDRA-15498)\n * The flag 'cross_node_timeout' has been set as true by default. This change\n   is done under the assumption that users have setup NTP on their clusters or\n   otherwise synchronize their clocks, and that clocks are mostly in sync, since\n   this is a requirement for general correctness of last write wins. (CASSANDRA-15216)\nMerged from 3.11:\n * Fix bad UDT sstable metadata serialization headers written by C* 3.0 on upgrade and in sstablescrub (CASSANDRA-15035)\n * Fix nodetool compactionstats showing extra pending task for TWCS - patch implemented (CASSANDRA-15409)\n * Fix SELECT JSON formatting for the \"duration\" type (CASSANDRA-15075)\n * Update nodetool help stop output (CASSANDRA-15401)\nMerged from 3.0:\n * Fix race condition when setting bootstrap flags (CASSANDRA-14878)\n * Run in-jvm upgrade dtests in circleci (CASSANDRA-15506)\n * Include updates to static column in mutation size calculations (CASSANDRA-15293)\n * Fix point-in-time recoevery ignoring timestamp of updates to static columns (CASSANDRA-15292)\n * GC logs are also put under $CASSANDRA_LOG_DIR (CASSANDRA-14306)\n * Fix sstabledump's position key value when partitions have multiple rows (CASSANDRA-14721)\n * Avoid over-scanning data directories in LogFile.verify() (CASSANDRA-15364)\n * Bump generations and document changes to system_distributed and system_traces in 3.0, 3.11\n   (CASSANDRA-15441)\n * Fix system_traces creation timestamp; optimise system keyspace upgrades (CASSANDRA-15398)\n * Make sure index summary redistribution does not start when compactions are paused (CASSANDRA-15265)\n * Fix NativeLibrary.tryOpenDirectory callers for Windows (CASSANDRA-15426)\nMerged from 2.2:\n * Fix SELECT JSON output for empty blobs (CASSANDRA-15435)\n * In-JVM DTest: Set correct internode message version for upgrade test (CASSANDRA-15371)\n * In-JVM DTest: Support NodeTool in dtest (CASSANDRA-15429)\n * Added data modeling documentation (CASSANDRA-15443)\n\n\n4.0-alpha2\n * Fix SASI non-literal string comparisons (range operators) (CASSANDRA-15169)\n * Upgrade Guava to 27, and to java-driver 3.6.0 (from 3.4.0-SNAPSHOT) (CASSANDRA-14655)\n * Extract an AbstractCompactionController to allow for custom implementations (CASSANDRA-15286)\n * Move chronicle-core version from snapshot to stable, and include carrotsearch in generated pom.xml (CASSANDRA-15321)\n * Untangle RepairMessage sub-hierarchy of messages, use new messaging (more) correctly (CASSANDRA-15163)\n * Add `allocate_tokens_for_local_replication_factor` option for token allocation (CASSANDRA-15260)\n * Add Alibaba Cloud Platform snitch (CASSANDRA-15092)\nMerged from 3.0:\n * Fix various data directory prefix matching issues (CASSANDRA-13974)\n * Minimize clustering values in metadata collector (CASSANDRA-15400)\n * Make sure index summary redistribution does not start when compactions are paused (CASSANDRA-15265)\n * Add ability to cap max negotiable protocol version (CASSANDRA-15193)\n * Gossip tokens on startup if available (CASSANDRA-15335)\n * Fix resource leak in CompressedSequentialWriter (CASSANDRA-15340)\n * Fix bad merge that reverted CASSANDRA-14993 (CASSANDRA-15289)\n * Add support for network topology and query tracing for inJVM dtest (CASSANDRA-15319)\n\n\n4.0-alpha1\n * Inaccurate exception message with nodetool snapshot (CASSANDRA-15287)\n * Fix InternodeOutboundMetrics overloaded bytes/count mixup (CASSANDRA-15186)\n * Enhance & reenable RepairTest with compression=off and compression=on (CASSANDRA-15272)\n * Improve readability of Table metrics Virtual tables units (CASSANDRA-15194)\n * Fix error with non-existent table for nodetool tablehistograms (CASSANDRA-14410)\n * Avoid result truncation in decimal operations (CASSANDRA-15232)\n * Catch non-IOException in FileUtils.close to make sure that all resources are closed (CASSANDRA-15225)\n * Align load column in nodetool status output (CASSANDRA-14787)\n * CassandraNetworkAuthorizer uses cached roles info (CASSANDRA-15089)\n * Introduce optional timeouts for idle client sessions (CASSANDRA-11097)\n * Fix AlterTableStatement dropped type validation order (CASSANDRA-15203)\n * Update Netty dependencies to latest, clean up SocketFactory (CASSANDRA-15195)\n * Native Transport - Apply noSpamLogger to ConnectionLimitHandler (CASSANDRA-15167)\n * Reduce heap pressure during compactions (CASSANDRA-14654)\n * Support building Cassandra with JDK 11 (CASSANDRA-15108)\n * Use quilt to patch cassandra.in.sh in Debian packaging (CASSANDRA-14710)\n * Take sstable references before calculating approximate key count (CASSANDRA-14647)\n * Restore snapshotting of system keyspaces on version change (CASSANDRA-14412)\n * Fix AbstractBTreePartition locking in java 11 (CASSANDRA-14607)\n * SimpleClient should pass connection properties as options (CASSANDRA-15056)\n * Set repaired data tracking flag on range reads if enabled (CASSANDRA-15019)\n * Calculate pending ranges for BOOTSTRAP_REPLACE correctly (CASSANDRA-14802)\n * Make TableCQLHelper reuse the single quote pattern (CASSANDRA-15033)\n * Add Zstd compressor (CASSANDRA-14482)\n * Fix IR prepare anti-compaction race (CASSANDRA-15027)\n * Fix SimpleStrategy option validation (CASSANDRA-15007)\n * Don't try to cancel 2i compactions when starting anticompaction (CASSANDRA-15024)\n * Avoid NPE in RepairRunnable.recordFailure (CASSANDRA-15025)\n * SSL Cert Hot Reloading should check for sanity of the new keystore/truststore before loading it (CASSANDRA-14991)\n * Avoid leaking threads when failing anticompactions and rate limit anticompactions (CASSANDRA-15002)\n * Validate token() arguments early instead of throwing NPE at execution (CASSANDRA-14989)\n * Add a new tool to dump audit logs (CASSANDRA-14885)\n * Fix generating javadoc with Java11 (CASSANDRA-14988)\n * Only cancel conflicting compactions when starting anticompactions and sub range compactions (CASSANDRA-14935)\n * Use a stub IndexRegistry for non-daemon use cases (CASSANDRA-14938)\n * Don't enable client transports when bootstrap is pending (CASSANDRA-14525)\n * Make antiCompactGroup throw exception on error and anticompaction non cancellable\n   again (CASSANDRA-14936)\n * Catch empty/invalid bounds in SelectStatement (CASSANDRA-14849)\n * Auto-expand replication_factor for NetworkTopologyStrategy (CASSANDRA-14303)\n * Transient Replication: support EACH_QUORUM (CASSANDRA-14727)\n * BufferPool: allocating thread for new chunks should acquire directly (CASSANDRA-14832)\n * Send correct messaging version in internode messaging handshake's third message (CASSANDRA-14896)\n * Make Read and Write Latency columns consistent for proxyhistograms and tablehistograms (CASSANDRA-11939)\n * Make protocol checksum type option case insensitive (CASSANDRA-14716)\n * Forbid re-adding static columns as regular and vice versa (CASSANDRA-14913)\n * Audit log allows system keyspaces to be audited via configuration options (CASSANDRA-14498)\n * Lower default chunk_length_in_kb from 64kb to 16kb (CASSANDRA-13241)\n * Startup checker should wait for count rather than percentage (CASSANDRA-14297)\n * Fix incorrect sorting of replicas in SimpleStrategy.calculateNaturalReplicas (CASSANDRA-14862)\n * Partitioned outbound internode TCP connections can occur when nodes restart (CASSANDRA-14358)\n * Don't write to system_distributed.repair_history, system_traces.sessions, system_traces.events in mixed version 3.X/4.0 clusters (CASSANDRA-14841)\n * Avoid running query to self through messaging service (CASSANDRA-14807)\n * Allow using custom script for chronicle queue BinLog archival (CASSANDRA-14373)\n * Transient->Full range movements mishandle consistency level upgrade (CASSANDRA-14759)\n * ReplicaCollection follow-up (CASSANDRA-14726)\n * Transient node receives full data requests (CASSANDRA-14762)\n * Enable snapshot artifacts publish (CASSANDRA-12704)\n * Introduce RangesAtEndpoint.unwrap to simplify StreamSession.addTransferRanges (CASSANDRA-14770)\n * LOCAL_QUORUM may speculate to non-local nodes, resulting in Timeout instead of Unavailable (CASSANDRA-14735)\n * Avoid creating empty compaction tasks after truncate (CASSANDRA-14780)\n * Fail incremental repair prepare phase if it encounters sstables from un-finalized sessions (CASSANDRA-14763)\n * Add a check for receiving digest response from transient node (CASSANDRA-14750)\n * Fail query on transient replica if coordinator only expects full data (CASSANDRA-14704)\n * Remove mentions of transient replication from repair path (CASSANDRA-14698)\n * Fix handleRepairStatusChangedNotification to remove first then add (CASSANDRA-14720)\n * Allow transient node to serve as a repair coordinator (CASSANDRA-14693)\n * DecayingEstimatedHistogramReservoir.EstimatedHistogramReservoirSnapshot returns wrong value for size() and incorrectly calculates count (CASSANDRA-14696)\n * AbstractReplicaCollection equals and hash code should throw due to conflict between order sensitive/insensitive uses (CASSANDRA-14700)\n * Detect inconsistencies in repaired data on the read path (CASSANDRA-14145)\n * Add checksumming to the native protocol (CASSANDRA-13304)\n * Make AuthCache more easily extendable (CASSANDRA-14662)\n * Extend RolesCache to include detailed role info (CASSANDRA-14497)\n * Add fqltool compare (CASSANDRA-14619)\n * Add fqltool replay (CASSANDRA-14618)\n * Log keyspace in full query log (CASSANDRA-14656)\n * Transient Replication and Cheap Quorums (CASSANDRA-14404)\n * Log server-generated timestamp and nowInSeconds used by queries in FQL (CASSANDRA-14675)\n * Add diagnostic events for read repairs (CASSANDRA-14668)\n * Use consistent nowInSeconds and timestamps values within a request (CASSANDRA-14671)\n * Add sampler for query time and expose with nodetool (CASSANDRA-14436)\n * Clean up Message.Request implementations (CASSANDRA-14677)\n * Disable old native protocol versions on demand (CASANDRA-14659)\n * Allow specifying now-in-seconds in native protocol (CASSANDRA-14664)\n * Improve BTree build performance by avoiding data copy (CASSANDRA-9989)\n * Make monotonic read / read repair configurable (CASSANDRA-14635)\n * Refactor CompactionStrategyManager (CASSANDRA-14621)\n * Flush netty client messages immediately by default (CASSANDRA-13651)\n * Improve read repair blocking behavior (CASSANDRA-10726)\n * Add a virtual table to expose settings (CASSANDRA-14573)\n * Fix up chunk cache handling of metrics (CASSANDRA-14628)\n * Extend IAuthenticator to accept peer SSL certificates (CASSANDRA-14652)\n * Incomplete handling of exceptions when decoding incoming messages (CASSANDRA-14574)\n * Add diagnostic events for user audit logging (CASSANDRA-13668)\n * Allow retrieving diagnostic events via JMX (CASSANDRA-14435)\n * Add base classes for diagnostic events (CASSANDRA-13457)\n * Clear view system metadata when dropping keyspace (CASSANDRA-14646)\n * Allocate ReentrantLock on-demand in java11 AtomicBTreePartitionerBase (CASSANDRA-14637)\n * Make all existing virtual tables use LocalPartitioner (CASSANDRA-14640)\n * Revert 4.0 GC alg back to CMS (CASANDRA-14636)\n * Remove hardcoded java11 jvm args in idea workspace files (CASSANDRA-14627)\n * Update netty to 4.1.128 (CASSANDRA-14633)\n * Add a virtual table to expose thread pools (CASSANDRA-14523)\n * Add a virtual table to expose caches (CASSANDRA-14538, CASSANDRA-14626)\n * Fix toDate function for timestamp arguments (CASSANDRA-14502)\n * Stream entire SSTables when possible (CASSANDRA-14556)\n * Cell reconciliation should not depend on nowInSec (CASSANDRA-14592)\n * Add experimental support for Java 11 (CASSANDRA-9608)\n * Make PeriodicCommitLogService.blockWhenSyncLagsNanos configurable (CASSANDRA-14580)\n * Improve logging in MessageInHandler's constructor (CASSANDRA-14576)\n * Set broadcast address in internode messaging handshake (CASSANDRA-14579)\n * Wait for schema agreement prior to building MVs (CASSANDRA-14571)\n * Make all DDL statements idempotent and not dependent on global state (CASSANDRA-13426)\n * Bump the hints messaging version to match the current one (CASSANDRA-14536)\n * OffsetAwareConfigurationLoader doesn't set ssl storage port causing bind errors in CircleCI (CASSANDRA-14546)\n * Report why native_transport_port fails to bind (CASSANDRA-14544)\n * Optimize internode messaging protocol (CASSANDRA-14485)\n * Internode messaging handshake sends wrong messaging version number (CASSANDRA-14540)\n * Add a virtual table to expose active client connections (CASSANDRA-14458)\n * Clean up and refactor client metrics (CASSANDRA-14524)\n * Nodetool import row cache invalidation races with adding sstables to tracker (CASSANDRA-14529)\n * Fix assertions in LWTs after TableMetadata was made immutable (CASSANDRA-14356)\n * Abort compactions quicker (CASSANDRA-14397)\n * Support light-weight transactions in cassandra-stress (CASSANDRA-13529)\n * Make AsyncOneResponse use the correct timeout (CASSANDRA-14509)\n * Add option to sanity check tombstones on reads/compactions (CASSANDRA-14467)\n * Add a virtual table to expose all running sstable tasks (CASSANDRA-14457)\n * Let nodetool import take a list of directories (CASSANDRA-14442)\n * Avoid unneeded memory allocations / cpu for disabled log levels (CASSANDRA-14488)\n * Implement virtual keyspace interface (CASSANDRA-7622)\n * nodetool import cleanup and improvements (CASSANDRA-14417)\n * Bump jackson version to >= 2.9.5 (CASSANDRA-14427)\n * Allow nodetool toppartitions without specifying table (CASSANDRA-14360)\n * Audit logging for database activity (CASSANDRA-12151)\n * Clean up build artifacts in docs container (CASSANDRA-14432)\n * Minor network authz improvements (Cassandra-14413)\n * Automatic sstable upgrades (CASSANDRA-14197)\n * Replace deprecated junit.framework.Assert usages with org.junit.Assert (CASSANDRA-14431)\n * Cassandra-stress throws NPE if insert section isn't specified in user profile (CASSSANDRA-14426)\n * List clients by protocol versions `nodetool clientstats --by-protocol` (CASSANDRA-14335)\n * Improve LatencyMetrics performance by reducing write path processing (CASSANDRA-14281)\n * Add network authz (CASSANDRA-13985)\n * Use the correct IP/Port for Streaming when localAddress is left unbound (CASSANDRA-14389)\n * nodetool listsnapshots is missing local system keyspace snapshots (CASSANDRA-14381)\n * Remove StreamCoordinator.streamExecutor thread pool (CASSANDRA-14402)\n * Rename nodetool --with-port to --print-port to disambiguate from --port (CASSANDRA-14392)\n * Client TOPOLOGY_CHANGE messages have wrong port. (CASSANDRA-14398)\n * Add ability to load new SSTables from a separate directory (CASSANDRA-6719)\n * Eliminate background repair and probablistic read_repair_chance table options\n   (CASSANDRA-13910)\n * Bind to correct local address in 4.0 streaming (CASSANDRA-14362)\n * Use standard Amazon naming for datacenter and rack in Ec2Snitch (CASSANDRA-7839)\n * Abstract write path for pluggable storage (CASSANDRA-14118)\n * nodetool describecluster should be more informative (CASSANDRA-13853)\n * Compaction performance improvements (CASSANDRA-14261)\n * Refactor Pair usage to avoid boxing ints/longs (CASSANDRA-14260)\n * Add options to nodetool tablestats to sort and limit output (CASSANDRA-13889)\n * Rename internals to reflect CQL vocabulary (CASSANDRA-14354)\n * Add support for hybrid MIN(), MAX() speculative retry policies\n   (CASSANDRA-14293, CASSANDRA-14338, CASSANDRA-14352)\n * Fix some regressions caused by 14058 (CASSANDRA-14353)\n * Abstract repair for pluggable storage (CASSANDRA-14116)\n * Add meaningful toString() impls (CASSANDRA-13653)\n * Add sstableloader option to accept target keyspace name (CASSANDRA-13884)\n * Move processing of EchoMessage response to gossip stage (CASSANDRA-13713)\n * Add coordinator write metric per CF (CASSANDRA-14232)\n * Correct and clarify SSLFactory.getSslContext method and call sites (CASSANDRA-14314)\n * Handle static and partition deletion properly on ThrottledUnfilteredIterator (CASSANDRA-14315)\n * NodeTool clientstats should show SSL Cipher (CASSANDRA-14322)\n * Add ability to specify driver name and version (CASSANDRA-14275)\n * Abstract streaming for pluggable storage (CASSANDRA-14115)\n * Forced incremental repairs should promote sstables if they can (CASSANDRA-14294)\n * Use Murmur3 for validation compactions (CASSANDRA-14002)\n * Comma at the end of the seed list is interpretated as localhost (CASSANDRA-14285)\n * Refactor read executor and response resolver, abstract read repair (CASSANDRA-14058)\n * Add optional startup delay to wait until peers are ready (CASSANDRA-13993)\n * Add a few options to nodetool verify (CASSANDRA-14201)\n * CVE-2017-5929 Security vulnerability and redefine default log rotation policy (CASSANDRA-14183)\n * Use JVM default SSL validation algorithm instead of custom default (CASSANDRA-13259)\n * Better document in code InetAddressAndPort usage post 7544, incorporate port into UUIDGen node (CASSANDRA-14226)\n * Fix sstablemetadata date string for minLocalDeletionTime (CASSANDRA-14132)\n * Make it possible to change neverPurgeTombstones during runtime (CASSANDRA-14214)\n * Remove GossipDigestSynVerbHandler#doSort() (CASSANDRA-14174)\n * Add nodetool clientlist (CASSANDRA-13665)\n * Revert ProtocolVersion changes from CASSANDRA-7544 (CASSANDRA-14211)\n * Non-disruptive seed node list reload (CASSANDRA-14190)\n * Nodetool tablehistograms to print statics for all the tables (CASSANDRA-14185)\n * Migrate dtests to use pytest and python3 (CASSANDRA-14134)\n * Allow storage port to be configurable per node (CASSANDRA-7544)\n * Make sub-range selection for non-frozen collections return null instead of empty (CASSANDRA-14182)\n * BloomFilter serialization format should not change byte ordering (CASSANDRA-9067)\n * Remove unused on-heap BloomFilter implementation (CASSANDRA-14152)\n * Delete temp test files on exit (CASSANDRA-14153)\n * Make PartitionUpdate and Mutation immutable (CASSANDRA-13867)\n * Fix CommitLogReplayer exception for CDC data (CASSANDRA-14066)\n * Fix cassandra-stress startup failure (CASSANDRA-14106)\n * Remove initialDirectories from CFS (CASSANDRA-13928)\n * Fix trivial log format error (CASSANDRA-14015)\n * Allow sstabledump to do a json object per partition (CASSANDRA-13848)\n * Add option to optimise merkle tree comparison across replicas (CASSANDRA-3200)\n * Remove unused and deprecated methods from AbstractCompactionStrategy (CASSANDRA-14081)\n * Fix Distribution.average in cassandra-stress (CASSANDRA-14090)\n * Support a means of logging all queries as they were invoked (CASSANDRA-13983)\n * Presize collections (CASSANDRA-13760)\n * Add GroupCommitLogService (CASSANDRA-13530)\n * Parallelize initial materialized view build (CASSANDRA-12245)\n * Make LWTs send resultset metadata on every request (CASSANDRA-13992)\n * Fix flaky indexWithFailedInitializationIsNotQueryableAfterPartialRebuild (CASSANDRA-13963)\n * Introduce leaf-only iterator (CASSANDRA-9988)\n * Upgrade Guava to 23.3 and Airline to 0.8 (CASSANDRA-13997)\n * Allow only one concurrent call to StatusLogger (CASSANDRA-12182)\n * Refactoring to specialised functional interfaces (CASSANDRA-13982)\n * Speculative retry should allow more friendly params (CASSANDRA-13876)\n * Throw exception if we send/receive repair messages to incompatible nodes (CASSANDRA-13944)\n * Replace usages of MessageDigest with Guava's Hasher (CASSANDRA-13291)\n * Add nodetool cmd to print hinted handoff window (CASSANDRA-13728)\n * Fix some alerts raised by static analysis (CASSANDRA-13799)\n * Checksum sstable metadata (CASSANDRA-13321, CASSANDRA-13593)\n * Add result set metadata to prepared statement MD5 hash calculation (CASSANDRA-10786)\n * Refactor GcCompactionTest to avoid boxing (CASSANDRA-13941)\n * Expose recent histograms in JmxHistograms (CASSANDRA-13642)\n * Fix buffer length comparison when decompressing in netty-based streaming (CASSANDRA-13899)\n * Properly close StreamCompressionInputStream to release any ByteBuf (CASSANDRA-13906)\n * Add SERIAL and LOCAL_SERIAL support for cassandra-stress (CASSANDRA-13925)\n * LCS needlessly checks for L0 STCS candidates multiple times (CASSANDRA-12961)\n * Correctly close netty channels when a stream session ends (CASSANDRA-13905)\n * Update lz4 to 1.4.0 (CASSANDRA-13741)\n * Optimize Paxos prepare and propose stage for local requests (CASSANDRA-13862)\n * Throttle base partitions during MV repair streaming to prevent OOM (CASSANDRA-13299)\n * Use compaction threshold for STCS in L0 (CASSANDRA-13861)\n * Fix problem with min_compress_ratio: 1 and disallow ratio < 1 (CASSANDRA-13703)\n * Add extra information to SASI timeout exception (CASSANDRA-13677)\n * Add incremental repair support for --hosts, --force, and subrange repair (CASSANDRA-13818)\n * Rework CompactionStrategyManager.getScanners synchronization (CASSANDRA-13786)\n * Add additional unit tests for batch behavior, TTLs, Timestamps (CASSANDRA-13846)\n * Add keyspace and table name in schema validation exception (CASSANDRA-13845)\n * Emit metrics whenever we hit tombstone failures and warn thresholds (CASSANDRA-13771)\n * Make netty EventLoopGroups daemon threads (CASSANDRA-13837)\n * Race condition when closing stream sessions (CASSANDRA-13852)\n * NettyFactoryTest is failing in trunk on macOS (CASSANDRA-13831)\n * Allow changing log levels via nodetool for related classes (CASSANDRA-12696)\n * Add stress profile yaml with LWT (CASSANDRA-7960)\n * Reduce memory copies and object creations when acting on ByteBufs (CASSANDRA-13789)\n * Simplify mx4j configuration (Cassandra-13578)\n * Fix trigger example on 4.0 (CASSANDRA-13796)\n * Force minumum timeout value (CASSANDRA-9375)\n * Use netty for streaming (CASSANDRA-12229)\n * Use netty for internode messaging (CASSANDRA-8457)\n * Add bytes repaired/unrepaired to nodetool tablestats (CASSANDRA-13774)\n * Don't delete incremental repair sessions if they still have sstables (CASSANDRA-13758)\n * Fix pending repair manager index out of bounds check (CASSANDRA-13769)\n * Don't use RangeFetchMapCalculator when RF=1 (CASSANDRA-13576)\n * Don't optimise trivial ranges in RangeFetchMapCalculator (CASSANDRA-13664)\n * Use an ExecutorService for repair commands instead of new Thread(..).start() (CASSANDRA-13594)\n * Fix race / ref leak in anticompaction (CASSANDRA-13688)\n * Expose tasks queue length via JMX (CASSANDRA-12758)\n * Fix race / ref leak in PendingRepairManager (CASSANDRA-13751)\n * Enable ppc64le runtime as unsupported architecture (CASSANDRA-13615)\n * Improve sstablemetadata output (CASSANDRA-11483)\n * Support for migrating legacy users to roles has been dropped (CASSANDRA-13371)\n * Introduce error metrics for repair (CASSANDRA-13387)\n * Refactoring to primitive functional interfaces in AuthCache (CASSANDRA-13732)\n * Update metrics to 3.1.5 (CASSANDRA-13648)\n * batch_size_warn_threshold_in_kb can now be set at runtime (CASSANDRA-13699)\n * Avoid always rebuilding secondary indexes at startup (CASSANDRA-13725)\n * Upgrade JMH from 1.13 to 1.19 (CASSANDRA-13727)\n * Upgrade SLF4J from 1.7.7 to 1.7.25 (CASSANDRA-12996)\n * Default for start_native_transport now true if not set in config (CASSANDRA-13656)\n * Don't add localhost to the graph when calculating where to stream from (CASSANDRA-13583)\n * Make CDC availability more deterministic via hard-linking (CASSANDRA-12148)\n * Allow skipping equality-restricted clustering columns in ORDER BY clause (CASSANDRA-10271)\n * Use common nowInSec for validation compactions (CASSANDRA-13671)\n * Improve handling of IR prepare failures (CASSANDRA-13672)\n * Send IR coordinator messages synchronously (CASSANDRA-13673)\n * Flush system.repair table before IR finalize promise (CASSANDRA-13660)\n * Fix column filter creation for wildcard queries (CASSANDRA-13650)\n * Add 'nodetool getbatchlogreplaythrottle' and 'nodetool setbatchlogreplaythrottle' (CASSANDRA-13614)\n * fix race condition in PendingRepairManager (CASSANDRA-13659)\n * Allow noop incremental repair state transitions (CASSANDRA-13658)\n * Run repair with down replicas (CASSANDRA-10446)\n * Added started & completed repair metrics (CASSANDRA-13598)\n * Added started & completed repair metrics (CASSANDRA-13598)\n * Improve secondary index (re)build failure and concurrency handling (CASSANDRA-10130)\n * Improve calculation of available disk space for compaction (CASSANDRA-13068)\n * Change the accessibility of RowCacheSerializer for third party row cache plugins (CASSANDRA-13579)\n * Allow sub-range repairs for a preview of repaired data (CASSANDRA-13570)\n * NPE in IR cleanup when columnfamily has no sstables (CASSANDRA-13585)\n * Fix Randomness of stress values (CASSANDRA-12744)\n * Allow selecting Map values and Set elements (CASSANDRA-7396)\n * Fast and garbage-free Streaming Histogram (CASSANDRA-13444)\n * Update repairTime for keyspaces on completion (CASSANDRA-13539)\n * Add configurable upper bound for validation executor threads (CASSANDRA-13521)\n * Bring back maxHintTTL propery (CASSANDRA-12982)\n * Add testing guidelines (CASSANDRA-13497)\n * Add more repair metrics (CASSANDRA-13531)\n * RangeStreamer should be smarter when picking endpoints for streaming (CASSANDRA-4650)\n * Avoid rewrapping an exception thrown for cache load functions (CASSANDRA-13367)\n * Log time elapsed for each incremental repair phase (CASSANDRA-13498)\n * Add multiple table operation support to cassandra-stress (CASSANDRA-8780)\n * Fix incorrect cqlsh results when selecting same columns multiple times (CASSANDRA-13262)\n * Fix WriteResponseHandlerTest is sensitive to test execution order (CASSANDRA-13421)\n * Improve incremental repair logging (CASSANDRA-13468)\n * Start compaction when incremental repair finishes (CASSANDRA-13454)\n * Add repair streaming preview (CASSANDRA-13257)\n * Cleanup isIncremental/repairedAt usage (CASSANDRA-13430)\n * Change protocol to allow sending key space independent of query string (CASSANDRA-10145)\n * Make gc_log and gc_warn settable at runtime (CASSANDRA-12661)\n * Take number of files in L0 in account when estimating remaining compaction tasks (CASSANDRA-13354)\n * Skip building views during base table streams on range movements (CASSANDRA-13065)\n * Improve error messages for +/- operations on maps and tuples (CASSANDRA-13197)\n * Remove deprecated repair JMX APIs (CASSANDRA-11530)\n * Fix version check to enable streaming keep-alive (CASSANDRA-12929)\n * Make it possible to monitor an ideal consistency level separate from actual consistency level (CASSANDRA-13289)\n * Outbound TCP connections ignore internode authenticator (CASSANDRA-13324)\n * Cleanup ParentRepairSession after repairs (CASSANDRA-13359)\n * Upgrade snappy-java to 1.1.2.6 (CASSANDRA-13336)\n * Incremental repair not streaming correct sstables (CASSANDRA-13328)\n * Upgrade the jna version to 4.3.0 (CASSANDRA-13300)\n * Add the currentTimestamp, currentDate, currentTime and currentTimeUUID functions (CASSANDRA-13132)\n * Remove config option index_interval (CASSANDRA-10671)\n * Reduce lock contention for collection types and serializers (CASSANDRA-13271)\n * Make it possible to override MessagingService.Verb ids (CASSANDRA-13283)\n * Avoid synchronized on prepareForRepair in ActiveRepairService (CASSANDRA-9292)\n * Adds the ability to use uncompressed chunks in compressed files (CASSANDRA-10520)\n * Don't flush sstables when streaming for incremental repair (CASSANDRA-13226)\n * Remove unused method (CASSANDRA-13227)\n * Fix minor bugs related to #9143 (CASSANDRA-13217)\n * Output warning if user increases RF (CASSANDRA-13079)\n * Remove pre-3.0 streaming compatibility code for 4.0 (CASSANDRA-13081)\n * Add support for + and - operations on dates (CASSANDRA-11936)\n * Fix consistency of incrementally repaired data (CASSANDRA-9143)\n * Increase commitlog version (CASSANDRA-13161)\n * Make TableMetadata immutable, optimize Schema (CASSANDRA-9425)\n * Refactor ColumnCondition (CASSANDRA-12981)\n * Parallelize streaming of different keyspaces (CASSANDRA-4663)\n * Improved compactions metrics (CASSANDRA-13015)\n * Speed-up start-up sequence by avoiding un-needed flushes (CASSANDRA-13031)\n * Use Caffeine (W-TinyLFU) for on-heap caches (CASSANDRA-10855)\n * Thrift removal (CASSANDRA-11115)\n * Remove pre-3.0 compatibility code for 4.0 (CASSANDRA-12716)\n * Add column definition kind to dropped columns in schema (CASSANDRA-12705)\n * Add (automate) Nodetool Documentation (CASSANDRA-12672)\n * Update bundled cqlsh python driver to 3.7.0 (CASSANDRA-12736)\n * Reject invalid replication settings when creating or altering a keyspace (CASSANDRA-12681)\n * Clean up the SSTableReader#getScanner API wrt removal of RateLimiter (CASSANDRA-12422)\n * Use new token allocation for non bootstrap case as well (CASSANDRA-13080)\n * Avoid byte-array copy when key cache is disabled (CASSANDRA-13084)\n * Require forceful decommission if number of nodes is less than replication factor (CASSANDRA-12510)\n * Allow IN restrictions on column families with collections (CASSANDRA-12654)\n * Log message size in trace message in OutboundTcpConnection (CASSANDRA-13028)\n * Add timeUnit Days for cassandra-stress (CASSANDRA-13029)\n * Add mutation size and batch metrics (CASSANDRA-12649)\n * Add method to get size of endpoints to TokenMetadata (CASSANDRA-12999)\n * Expose time spent waiting in thread pool queue (CASSANDRA-8398)\n * Conditionally update index built status to avoid unnecessary flushes (CASSANDRA-12969)\n * cqlsh auto completion: refactor definition of compaction strategy options (CASSANDRA-12946)\n * Add support for arithmetic operators (CASSANDRA-11935)\n * Add histogram for delay to deliver hints (CASSANDRA-13234)\n * Fix cqlsh automatic protocol downgrade regression (CASSANDRA-13307)\n * Changing `max_hint_window_in_ms` at runtime (CASSANDRA-11720)\n * Trivial format error in StorageProxy (CASSANDRA-13551)\n * Nodetool repair can hang forever if we lose the notification for the repair completing/failing (CASSANDRA-13480)\n * Anticompaction can cause noisy log messages (CASSANDRA-13684)\n * Switch to client init for sstabledump (CASSANDRA-13683)\n * CQLSH: Don't pause when capturing data (CASSANDRA-13743)\n * nodetool clearsnapshot requires --all to clear all snapshots (CASSANDRA-13391)\n * Correctly count range tombstones in traces and tombstone thresholds (CASSANDRA-8527)\n * cqlshrc.sample uses incorrect option for time formatting (CASSANDRA-14243)\n * Multi-version in-JVM dtests (CASSANDRA-14937)\n * Allow instance class loaders to be garbage collected for inJVM dtest (CASSANDRA-15170)\n\n\n3.11.6\n * Fix bad UDT sstable metadata serialization headers written by C* 3.0 on upgrade and in sstablescrub (CASSANDRA-15035)\n * Fix nodetool compactionstats showing extra pending task for TWCS - patch implemented (CASSANDRA-15409)\n * Fix SELECT JSON formatting for the \"duration\" type (CASSANDRA-15075)\n * Fix LegacyLayout to have same behavior as 2.x when handling unknown column names (CASSANDRA-15081)\n * Update nodetool help stop output (CASSANDRA-15401)\nMerged from 3.0:\n * Run in-jvm upgrade dtests in circleci (CASSANDRA-15506)\n * Include updates to static column in mutation size calculations (CASSANDRA-15293)\n * Fix point-in-time recoevery ignoring timestamp of updates to static columns (CASSANDRA-15292)\n * GC logs are also put under $CASSANDRA_LOG_DIR (CASSANDRA-14306)\n * Fix sstabledump's position key value when partitions have multiple rows (CASSANDRA-14721)\n * Avoid over-scanning data directories in LogFile.verify() (CASSANDRA-15364)\n * Bump generations and document changes to system_distributed and system_traces in 3.0, 3.11\n   (CASSANDRA-15441)\n * Fix system_traces creation timestamp; optimise system keyspace upgrades (CASSANDRA-15398)\n * Fix various data directory prefix matching issues (CASSANDRA-13974)\n * Minimize clustering values in metadata collector (CASSANDRA-15400)\n * Avoid over-trimming of results in mixed mode clusters (CASSANDRA-15405)\n * validate value sizes in LegacyLayout (CASSANDRA-15373)\n * Ensure that tracing doesn't break connections in 3.x/4.0 mixed mode by default (CASSANDRA-15385)\n * Make sure index summary redistribution does not start when compactions are paused (CASSANDRA-15265)\n * Ensure legacy rows have primary key livenessinfo when they contain illegal cells (CASSANDRA-15365)\n * Fix race condition when setting bootstrap flags (CASSANDRA-14878)\nMerged from 2.2:\n * Fix SELECT JSON output for empty blobs (CASSANDRA-15435)\n * In-JVM DTest: Set correct internode message version for upgrade test (CASSANDRA-15371)\n * In-JVM DTest: Support NodeTool in dtest (CASSANDRA-15429)\n * Fix NativeLibrary.tryOpenDirectory callers for Windows (CASSANDRA-15426)\n\n\n3.11.5\n * Fix cassandra-env.sh to use $CASSANDRA_CONF to find cassandra-jaas.config (CASSANDRA-14305)\n * Fixed nodetool cfstats printing index name twice (CASSANDRA-14903)\n * Add flag to disable SASI indexes, and warnings on creation (CASSANDRA-14866)\nMerged from 3.0:\n * Fix LegacyLayout RangeTombstoneList IndexOutOfBoundsException when upgrading and RangeTombstone bounds are asymmetric (CASSANDRA-15172)\n * Fix NPE when using allocate_tokens_for_keyspace on new DC/rack (CASSANDRA-14952)\n * Filter sstables earlier when running cleanup (CASSANDRA-15100)\n * Use mean row count instead of mean column count for index selectivity calculation (CASSANDRA-15259)\n * Avoid updating unchanged gossip states (CASSANDRA-15097)\n * Prevent recreation of previously dropped columns with a different kind (CASSANDRA-14948)\n * Prevent client requests from blocking on executor task queue (CASSANDRA-15013)\n * Toughen up column drop/recreate type validations (CASSANDRA-15204)\n * LegacyLayout should handle paging states that cross a collection column (CASSANDRA-15201)\n * Prevent RuntimeException when username or password is empty/null (CASSANDRA-15198)\n * Multiget thrift query returns null records after digest mismatch (CASSANDRA-14812)\n * Handle paging states serialized with a different version than the session's (CASSANDRA-15176)\n * Throw IOE instead of asserting on unsupporter peer versions (CASSANDRA-15066)\n * Update token metadata when handling MOVING/REMOVING_TOKEN events (CASSANDRA-15120)\n * Add ability to customize cassandra log directory using $CASSANDRA_LOG_DIR (CASSANDRA-15090)\n * Fix assorted gossip races and add related runtime checks (CASSANDRA-15059)\n * cassandra-stress works with frozen collections: list and set (CASSANDRA-14907)\n * Fix handling FS errors on writing and reading flat files - LogTransaction and hints (CASSANDRA-15053)\n * Avoid double closing the iterator to avoid overcounting the number of requests (CASSANDRA-15058)\n * Improve `nodetool status -r` speed (CASSANDRA-14847)\n * Improve merkle tree size and time on heap (CASSANDRA-14096)\n * Add missing commands to nodetool_completion (CASSANDRA-14916)\n * Anti-compaction temporarily corrupts sstable state for readers (CASSANDRA-15004)\nMerged from 2.2:\n * Handle exceptions during authentication/authorization (CASSANDRA-15041)\n * Support cross version messaging in in-jvm upgrade dtests (CASSANDRA-15078)\n * Fix index summary redistribution cancellation (CASSANDRA-15045)\n * Refactor Circle CI configuration (CASSANDRA-14806)\n * Fixing invalid CQL in security documentation (CASSANDRA-15020)\n\n\n3.11.4\n * Make stop-server.bat wait for Cassandra to terminate (CASSANDRA-14829)\n * Correct sstable sorting for garbagecollect and levelled compaction (CASSANDRA-14870)\nMerged from 3.0:\n * Improve merkle tree size and time on heap (CASSANDRA-14096)\n * Severe concurrency issues in STCS,DTCS,TWCS,TMD.Topology,TypeParser\n * Add a script to make running the cqlsh tests in cassandra repo easier (CASSANDRA-14951)\n * If SizeEstimatesRecorder misses a 'onDropTable' notification, the size_estimates table will never be cleared for that table. (CASSANDRA-14905)\n * Streaming needs to synchronise access to LifecycleTransaction (CASSANDRA-14554)\n * Fix cassandra-stress write hang with default options (CASSANDRA-14616)\n * Netty epoll IOExceptions caused by unclean client disconnects being logged at INFO (CASSANDRA-14909)\n * Unfiltered.isEmpty conflicts with Row extends AbstractCollection.isEmpty (CASSANDRA-14588)\n * RangeTombstoneList doesn't properly clean up mergeable or superseded rts in some cases (CASSANDRA-14894)\n * Fix handling of collection tombstones for dropped columns from legacy sstables (CASSANDRA-14912)\n * Throw exception if Columns serialized subset encode more columns than possible (CASSANDRA-14591)\n * Drop/add column name with different Kind can result in corruption (CASSANDRA-14843)\n * Fix missing rows when reading 2.1 SSTables with static columns in 3.0 (CASSANDRA-14873)\n * Move TWCS message 'No compaction necessary for bucket size' to Trace level (CASSANDRA-14884)\n * Sstable min/max metadata can cause data loss (CASSANDRA-14861)\n * Dropped columns can cause reverse sstable iteration to return prematurely (CASSANDRA-14838)\n * Legacy sstables with  multi block range tombstones create invalid bound sequences (CASSANDRA-14823)\n * Expand range tombstone validation checks to multiple interim request stages (CASSANDRA-14824)\n * Reverse order reads can return incomplete results (CASSANDRA-14803)\n * Avoid calling iter.next() in a loop when notifying indexers about range tombstones (CASSANDRA-14794)\n * Fix purging semi-expired RT boundaries in reversed iterators (CASSANDRA-14672)\n * DESC order reads can fail to return the last Unfiltered in the partition (CASSANDRA-14766)\n * Fix corrupted collection deletions for dropped columns in 3.0 <-> 2.{1,2} messages (CASSANDRA-14568)\n * Fix corrupted static collection deletions in 3.0 <-> 2.{1,2} messages (CASSANDRA-14568)\n * Handle failures in parallelAllSSTableOperation (cleanup/upgradesstables/etc) (CASSANDRA-14657)\n * Improve TokenMetaData cache populating performance avoid long locking (CASSANDRA-14660)\n * Backport: Flush netty client messages immediately (not by default) (CASSANDRA-13651)\n * Fix static column order for SELECT * wildcard queries (CASSANDRA-14638)\n * sstableloader should use discovered broadcast address to connect intra-cluster (CASSANDRA-14522)\n * Fix reading columns with non-UTF names from schema (CASSANDRA-14468)\nMerged from 2.2:\n * CircleCI docker image should bake in more dependencies (CASSANDRA-14985)\n * MigrationManager attempts to pull schema from different major version nodes (CASSANDRA-14928)\n * Returns null instead of NaN or Infinity in JSON strings (CASSANDRA-14377)\nMerged from 2.1:\n * Paged Range Slice queries with DISTINCT can drop rows from results (CASSANDRA-14956)\n * Update release checksum algorithms to SHA-256, SHA-512 (CASSANDRA-14970)\n\n\n3.11.3\n * Validate supported column type with SASI analyzer (CASSANDRA-13669)\n * Remove BTree.Builder Recycler to reduce memory usage (CASSANDRA-13929)\n * Reduce nodetool GC thread count (CASSANDRA-14475)\n * Fix New SASI view creation during Index Redistribution (CASSANDRA-14055)\n * Remove string formatting lines from BufferPool hot path (CASSANDRA-14416)\n * Detect OpenJDK jvm type and architecture (CASSANDRA-12793)\n * Don't use guava collections in the non-system keyspace jmx attributes (CASSANDRA-12271)\n * Allow existing nodes to use all peers in shadow round (CASSANDRA-13851)\n * Fix cqlsh to read connection.ssl cqlshrc option again (CASSANDRA-14299)\n * Downgrade log level to trace for CommitLogSegmentManager (CASSANDRA-14370)\n * CQL fromJson(null) throws NullPointerException (CASSANDRA-13891)\n * Serialize empty buffer as empty string for json output format (CASSANDRA-14245)\n * Allow logging implementation to be interchanged for embedded testing (CASSANDRA-13396)\n * SASI tokenizer for simple delimiter based entries (CASSANDRA-14247)\n * Fix Loss of digits when doing CAST from varint/bigint to decimal (CASSANDRA-14170)\n * RateBasedBackPressure unnecessarily invokes a lock on the Guava RateLimiter (CASSANDRA-14163)\n * Fix wildcard GROUP BY queries (CASSANDRA-14209)\nMerged from 3.0:\n * Fix corrupted static collection deletions in 3.0 -> 2.{1,2} messages (CASSANDRA-14568)\n * Fix potential IndexOutOfBoundsException with counters (CASSANDRA-14167)\n * Always close RT markers returned by ReadCommand#executeLocally() (CASSANDRA-14515)\n * Reverse order queries with range tombstones can cause data loss (CASSANDRA-14513)\n * Fix regression of lagging commitlog flush log message (CASSANDRA-14451)\n * Add Missing dependencies in pom-all (CASSANDRA-14422)\n * Cleanup StartupClusterConnectivityChecker and PING Verb (CASSANDRA-14447)\n * Cassandra not starting when using enhanced startup scripts in windows (CASSANDRA-14418)\n * Fix progress stats and units in compactionstats (CASSANDRA-12244)\n * Better handle missing partition columns in system_schema.columns (CASSANDRA-14379)\n * Delay hints store excise by write timeout to avoid race with decommission (CASSANDRA-13740)\n * Add missed CQL keywords to documentation (CASSANDRA-14359)\n * Fix unbounded validation compactions on repair / revert CASSANDRA-13797 (CASSANDRA-14332)\n * Avoid deadlock when running nodetool refresh before node is fully up (CASSANDRA-14310)\n * Handle all exceptions when opening sstables (CASSANDRA-14202)\n * Handle incompletely written hint descriptors during startup (CASSANDRA-14080)\n * Handle repeat open bound from SRP in read repair (CASSANDRA-14330)\n * Use zero as default score in DynamicEndpointSnitch (CASSANDRA-14252)\n * Respect max hint window when hinting for LWT (CASSANDRA-14215)\n * Adding missing WriteType enum values to v3, v4, and v5 spec (CASSANDRA-13697)\n * Don't regenerate bloomfilter and summaries on startup (CASSANDRA-11163)\n * Fix NPE when performing comparison against a null frozen in LWT (CASSANDRA-14087)\n * Log when SSTables are deleted (CASSANDRA-14302)\n * Fix batch commitlog sync regression (CASSANDRA-14292)\n * Write to pending endpoint when view replica is also base replica (CASSANDRA-14251)\n * Chain commit log marker potential performance regression in batch commit mode (CASSANDRA-14194)\n * Fully utilise specified compaction threads (CASSANDRA-14210)\n * Pre-create deletion log records to finish compactions quicker (CASSANDRA-12763)\nMerged from 2.2:\n * Fix compaction failure caused by reading un-flushed data (CASSANDRA-12743)\n * Use Bounds instead of Range for sstables in anticompaction (CASSANDRA-14411)\n * Fix JSON queries with IN restrictions and ORDER BY clause (CASSANDRA-14286)\n * CQL fromJson(null) throws NullPointerException (CASSANDRA-13891)\nMerged from 2.1:\n * Check checksum before decompressing data (CASSANDRA-14284)\n\n\n3.11.2\n * Fix ReadCommandTest (CASSANDRA-14234)\n * Remove trailing period from latency reports at keyspace level (CASSANDRA-14233)\n * Backport CASSANDRA-13080: Use new token allocation for non bootstrap case as well (CASSANDRA-14212)\n * Remove dependencies on JVM internal classes from JMXServerUtils (CASSANDRA-14173)\n * Add DEFAULT, UNSET, MBEAN and MBEANS to `ReservedKeywords` (CASSANDRA-14205)\n * Print correct snitch info from nodetool describecluster (CASSANDRA-13528)\n * Enable CDC unittest (CASSANDRA-14141)\n * Acquire read lock before accessing CompactionStrategyManager fields (CASSANDRA-14139)\n * Avoid invalidating disk boundaries unnecessarily (CASSANDRA-14083)\n * Avoid exposing compaction strategy index externally (CASSANDRA-14082)\n * Fix imbalanced disks when replacing node with same address with JBOD (CASSANDRA-14084)\n * Reload compaction strategies when disk boundaries are invalidated (CASSANDRA-13948)\n * Remove OpenJDK log warning (CASSANDRA-13916)\n * Prevent compaction strategies from looping indefinitely (CASSANDRA-14079)\n * Cache disk boundaries (CASSANDRA-13215)\n * Add asm jar to build.xml for maven builds (CASSANDRA-11193)\n * Round buffer size to powers of 2 for the chunk cache (CASSANDRA-13897)\n * Update jackson JSON jars (CASSANDRA-13949)\n * Avoid locks when checking LCS fanout and if we should defrag (CASSANDRA-13930)\nMerged from 3.0:\n * Fix unit test failures in ViewComplexTest (CASSANDRA-14219)\n * Add MinGW uname check to start scripts (CASSANDRA-12840)\n * Use the correct digest file and reload sstable metadata in nodetool verify (CASSANDRA-14217)\n * Handle failure when mutating repaired status in Verifier (CASSANDRA-13933)\n * Set encoding for javadoc generation (CASSANDRA-14154)\n * Fix index target computation for dense composite tables with dropped compact storage (CASSANDRA-14104)\n * Improve commit log chain marker updating (CASSANDRA-14108)\n * Extra range tombstone bound creates double rows (CASSANDRA-14008)\n * Fix SStable ordering by max timestamp in SinglePartitionReadCommand (CASSANDRA-14010)\n * Accept role names containing forward-slash (CASSANDRA-14088)\n * Optimize CRC check chance probability calculations (CASSANDRA-14094)\n * Fix cleanup on keyspace with no replicas (CASSANDRA-13526)\n * Fix updating base table rows with TTL not removing materialized view entries (CASSANDRA-14071)\n * Reduce garbage created by DynamicSnitch (CASSANDRA-14091)\n * More frequent commitlog chained markers (CASSANDRA-13987)\n * Fix serialized size of DataLimits (CASSANDRA-14057)\n * Add flag to allow dropping oversized read repair mutations (CASSANDRA-13975)\n * Fix SSTableLoader logger message (CASSANDRA-14003)\n * Fix repair race that caused gossip to block (CASSANDRA-13849)\n * Tracing interferes with digest requests when using RandomPartitioner (CASSANDRA-13964)\n * Add flag to disable materialized views, and warnings on creation (CASSANDRA-13959)\n * Don't let user drop or generally break tables in system_distributed (CASSANDRA-13813)\n * Provide a JMX call to sync schema with local storage (CASSANDRA-13954)\n * Mishandling of cells for removed/dropped columns when reading legacy files (CASSANDRA-13939)\n * Deserialise sstable metadata in nodetool verify (CASSANDRA-13922)\nMerged from 2.2:\n * Fix the inspectJvmOptions startup check (CASSANDRA-14112)\n * Fix race that prevents submitting compaction for a table when executor is full (CASSANDRA-13801)\n * Rely on the JVM to handle OutOfMemoryErrors (CASSANDRA-13006)\n * Grab refs during scrub/index redistribution/cleanup (CASSANDRA-13873)\nMerged from 2.1:\n * Protect against overflow of local expiration time (CASSANDRA-14092)\n * RPM package spec: fix permissions for installed jars and config files (CASSANDRA-14181)\n * More PEP8 compliance for cqlsh\n\n\n3.11.1\n * Fix the computation of cdc_total_space_in_mb for exabyte filesystems (CASSANDRA-13808)\n * AbstractTokenTreeBuilder#serializedSize returns wrong value when there is a single leaf and overflow collisions (CASSANDRA-13869)\n * Add a compaction option to TWCS to ignore sstables overlapping checks (CASSANDRA-13418)\n * BTree.Builder memory leak (CASSANDRA-13754)\n * Revert CASSANDRA-10368 of supporting non-pk column filtering due to correctness (CASSANDRA-13798)\n * Add a skip read validation flag to cassandra-stress (CASSANDRA-13772)\n * Fix cassandra-stress hang issues when an error during cluster connection happens (CASSANDRA-12938)\n * Better bootstrap failure message when blocked by (potential) range movement (CASSANDRA-13744)\n * \"ignore\" option is ignored in sstableloader (CASSANDRA-13721)\n * Deadlock in AbstractCommitLogSegmentManager (CASSANDRA-13652)\n * Duplicate the buffer before passing it to analyser in SASI operation (CASSANDRA-13512)\n * Properly evict pstmts from prepared statements cache (CASSANDRA-13641)\nMerged from 3.0:\n * Improve TRUNCATE performance (CASSANDRA-13909)\n * Implement short read protection on partition boundaries (CASSANDRA-13595)\n * Fix ISE thrown by UPI.Serializer.hasNext() for some SELECT queries (CASSANDRA-13911)\n * Filter header only commit logs before recovery (CASSANDRA-13918)\n * AssertionError prepending to a list (CASSANDRA-13149)\n * Fix support for SuperColumn tables (CASSANDRA-12373)\n * Handle limit correctly on tables with strict liveness (CASSANDRA-13883)\n * Fix missing original update in TriggerExecutor (CASSANDRA-13894)\n * Remove non-rpc-ready nodes from counter leader candidates (CASSANDRA-13043)\n * Improve short read protection performance (CASSANDRA-13794)\n * Fix sstable reader to support range-tombstone-marker for multi-slices (CASSANDRA-13787)\n * Fix short read protection for tables with no clustering columns (CASSANDRA-13880)\n * Make isBuilt volatile in PartitionUpdate (CASSANDRA-13619)\n * Prevent integer overflow of timestamps in CellTest and RowsTest (CASSANDRA-13866)\n * Fix counter application order in short read protection (CASSANDRA-12872)\n * Don't block RepairJob execution on validation futures (CASSANDRA-13797)\n * Wait for all management tasks to complete before shutting down CLSM (CASSANDRA-13123)\n * INSERT statement fails when Tuple type is used as clustering column with default DESC order (CASSANDRA-13717)\n * Fix pending view mutations handling and cleanup batchlog when there are local and remote paired mutations (CASSANDRA-13069)\n * Improve config validation and documentation on overflow and NPE (CASSANDRA-13622)\n * Range deletes in a CAS batch are ignored (CASSANDRA-13655)\n * Avoid assertion error when IndexSummary > 2G (CASSANDRA-12014)\n * Change repair midpoint logging for tiny ranges (CASSANDRA-13603)\n * Better handle corrupt final commitlog segment (CASSANDRA-11995)\n * StreamingHistogram is not thread safe (CASSANDRA-13756)\n * Fix MV timestamp issues (CASSANDRA-11500)\n * Better tolerate improperly formatted bcrypt hashes (CASSANDRA-13626)\n * Fix race condition in read command serialization (CASSANDRA-13363)\n * Fix AssertionError in short read protection (CASSANDRA-13747)\n * Don't skip corrupted sstables on startup (CASSANDRA-13620)\n * Fix the merging of cells with different user type versions (CASSANDRA-13776)\n * Copy session properties on cqlsh.py do_login (CASSANDRA-13640)\n * Potential AssertionError during ReadRepair of range tombstone and partition deletions (CASSANDRA-13719)\n * Don't let stress write warmup data if n=0 (CASSANDRA-13773)\n * Gossip thread slows down when using batch commit log (CASSANDRA-12966)\n * Randomize batchlog endpoint selection with only 1 or 2 racks (CASSANDRA-12884)\n * Fix digest calculation for counter cells (CASSANDRA-13750)\n * Fix ColumnDefinition.cellValueType() for non-frozen collection and change SSTabledump to use type.toJSONString() (CASSANDRA-13573)\n * Skip materialized view addition if the base table doesn't exist (CASSANDRA-13737)\n * Drop table should remove corresponding entries in dropped_columns table (CASSANDRA-13730)\n * Log warn message until legacy auth tables have been migrated (CASSANDRA-13371)\n * Fix incorrect [2.1 <- 3.0] serialization of counter cells created in 2.0 (CASSANDRA-13691)\n * Fix invalid writetime for null cells (CASSANDRA-13711)\n * Fix ALTER TABLE statement to atomically propagate changes to the table and its MVs (CASSANDRA-12952)\n * Fixed ambiguous output of nodetool tablestats command (CASSANDRA-13722)\n * Fix Digest mismatch Exception if hints file has UnknownColumnFamily (CASSANDRA-13696)\n * Purge tombstones created by expired cells (CASSANDRA-13643)\n * Make concat work with iterators that have different subsets of columns (CASSANDRA-13482)\n * Set test.runners based on cores and memory size (CASSANDRA-13078)\n * Allow different NUMACTL_ARGS to be passed in (CASSANDRA-13557)\n * Allow native function calls in CQLSSTableWriter (CASSANDRA-12606)\n * Fix secondary index queries on COMPACT tables (CASSANDRA-13627)\n * Nodetool listsnapshots output is missing a newline, if there are no snapshots (CASSANDRA-13568)\n * sstabledump reports incorrect usage for argument order (CASSANDRA-13532)\nMerged from 2.2:\n * Safely handle empty buffers when outputting to JSON (CASSANDRA-13868)\n * Copy session properties on cqlsh.py do_login (CASSANDRA-13847)\n * Fix load over calculated issue in IndexSummaryRedistribution (CASSANDRA-13738)\n * Fix compaction and flush exception not captured (CASSANDRA-13833)\n * Uncaught exceptions in Netty pipeline (CASSANDRA-13649)\n * Prevent integer overflow on exabyte filesystems (CASSANDRA-13067)\n * Fix queries with LIMIT and filtering on clustering columns (CASSANDRA-11223)\n * Fix potential NPE when resume bootstrap fails (CASSANDRA-13272)\n * Fix toJSONString for the UDT, tuple and collection types (CASSANDRA-13592)\n * Fix nested Tuples/UDTs validation (CASSANDRA-13646)\nMerged from 2.1:\n * Clone HeartBeatState when building gossip messages. Make its generation/version volatile (CASSANDRA-13700)\n\n\n3.11.0\n * Allow native function calls in CQLSSTableWriter (CASSANDRA-12606)\n * Replace string comparison with regex/number checks in MessagingService test (CASSANDRA-13216)\n * Fix formatting of duration columns in CQLSH (CASSANDRA-13549)\n * Fix the problem with duplicated rows when using paging with SASI (CASSANDRA-13302)\n * Allow CONTAINS statements filtering on the partition key and itâs parts (CASSANDRA-13275)\n * Fall back to even ranges calculation in clusters with vnodes when tokens are distributed unevenly (CASSANDRA-13229)\n * Fix duration type validation to prevent overflow (CASSANDRA-13218)\n * Forbid unsupported creation of SASI indexes over partition key columns (CASSANDRA-13228)\n * Reject multiple values for a key in CQL grammar. (CASSANDRA-13369)\n * UDA fails without input rows (CASSANDRA-13399)\n * Fix compaction-stress by using daemonInitialization (CASSANDRA-13188)\n * V5 protocol flags decoding broken (CASSANDRA-13443)\n * Use write lock not read lock for removing sstables from compaction strategies. (CASSANDRA-13422)\n * Use corePoolSize equal to maxPoolSize in JMXEnabledThreadPoolExecutors (CASSANDRA-13329)\n * Avoid rebuilding SASI indexes containing no values (CASSANDRA-12962)\n * Add charset to Analyser input stream (CASSANDRA-13151)\n * Fix testLimitSSTables flake caused by concurrent flush (CASSANDRA-12820)\n * cdc column addition strikes again (CASSANDRA-13382)\n * Fix static column indexes (CASSANDRA-13277)\n * DataOutputBuffer.asNewBuffer broken (CASSANDRA-13298)\n * unittest CipherFactoryTest failed on MacOS (CASSANDRA-13370)\n * Forbid SELECT restrictions and CREATE INDEX over non-frozen UDT columns (CASSANDRA-13247)\n * Default logging we ship will incorrectly print \"?:?\" for \"%F:%L\" pattern (CASSANDRA-13317)\n * Possible AssertionError in UnfilteredRowIteratorWithLowerBound (CASSANDRA-13366)\n * Support unaligned memory access for AArch64 (CASSANDRA-13326)\n * Improve SASI range iterator efficiency on intersection with an empty range (CASSANDRA-12915).\n * Fix equality comparisons of columns using the duration type (CASSANDRA-13174)\n * Move to FastThreadLocalThread and FastThreadLocal (CASSANDRA-13034)\n * nodetool stopdaemon errors out (CASSANDRA-13030)\n * Tables in system_distributed should not use gcgs of 0 (CASSANDRA-12954)\n * Fix primary index calculation for SASI (CASSANDRA-12910)\n * More fixes to the TokenAllocator (CASSANDRA-12990)\n * NoReplicationTokenAllocator should work with zero replication factor (CASSANDRA-12983)\n * Address message coalescing regression (CASSANDRA-12676)\n * Delete illegal character from StandardTokenizerImpl.jflex (CASSANDRA-13417)\n * Fix cqlsh automatic protocol downgrade regression (CASSANDRA-13307)\n * Tracing payload not passed from QueryMessage to tracing session (CASSANDRA-12835)\nMerged from 3.0:\n * Filter header only commit logs before recovery (CASSANDRA-13918)\n * Ensure int overflow doesn't occur when calculating large partition warning size (CASSANDRA-13172)\n * Ensure consistent view of partition columns between coordinator and replica in ColumnFilter (CASSANDRA-13004)\n * Failed unregistering mbean during drop keyspace (CASSANDRA-13346)\n * nodetool scrub/cleanup/upgradesstables exit code is wrong (CASSANDRA-13542)\n * Fix the reported number of sstable data files accessed per read (CASSANDRA-13120)\n * Fix schema digest mismatch during rolling upgrades from versions before 3.0.12 (CASSANDRA-13559)\n * Upgrade JNA version to 4.4.0 (CASSANDRA-13072)\n * Interned ColumnIdentifiers should use minimal ByteBuffers (CASSANDRA-13533)\n * Fix repair process violating start/end token limits for small ranges (CASSANDRA-13052)\n * Add storage port options to sstableloader (CASSANDRA-13518)\n * Properly handle quoted index names in cqlsh DESCRIBE output (CASSANDRA-12847)\n * Fix NPE in StorageService.excise() (CASSANDRA-13163)\n * Expire OutboundTcpConnection messages by a single Thread (CASSANDRA-13265)\n * Fail repair if insufficient responses received (CASSANDRA-13397)\n * Fix SSTableLoader fail when the loaded table contains dropped columns (CASSANDRA-13276)\n * Avoid name clashes in CassandraIndexTest (CASSANDRA-13427)\n * Handling partially written hint files (CASSANDRA-12728)\n * Interrupt replaying hints on decommission (CASSANDRA-13308)\n * Handling partially written hint files (CASSANDRA-12728)\n * Fix NPE issue in StorageService (CASSANDRA-13060)\n * Make reading of range tombstones more reliable (CASSANDRA-12811)\n * Fix startup problems due to schema tables not completely flushed (CASSANDRA-12213)\n * Fix view builder bug that can filter out data on restart (CASSANDRA-13405)\n * Fix 2i page size calculation when there are no regular columns (CASSANDRA-13400)\n * Fix the conversion of 2.X expired rows without regular column data (CASSANDRA-13395)\n * Fix hint delivery when using ext+internal IPs with prefer_local enabled (CASSANDRA-13020)\n * Legacy deserializer can create empty range tombstones (CASSANDRA-13341)\n * Legacy caching options can prevent 3.0 upgrade (CASSANDRA-13384)\n * Use the Kernel32 library to retrieve the PID on Windows and fix startup checks (CASSANDRA-13333)\n * Fix code to not exchange schema across major versions (CASSANDRA-13274)\n * Dropping column results in \"corrupt\" SSTable (CASSANDRA-13337)\n * Bugs handling range tombstones in the sstable iterators (CASSANDRA-13340)\n * Fix CONTAINS filtering for null collections (CASSANDRA-13246)\n * Applying: Use a unique metric reservoir per test run when using Cassandra-wide metrics residing in MBeans (CASSANDRA-13216)\n * Propagate row deletions in 2i tables on upgrade (CASSANDRA-13320)\n * Slice.isEmpty() returns false for some empty slices (CASSANDRA-13305)\n * Add formatted row output to assertEmpty in CQL Tester (CASSANDRA-13238)\n * Prevent data loss on upgrade 2.1 - 3.0 by adding component separator to LogRecord absolute path (CASSANDRA-13294)\n * Improve testing on macOS by eliminating sigar logging (CASSANDRA-13233)\n * Cqlsh copy-from should error out when csv contains invalid data for collections (CASSANDRA-13071)\n * Fix \"multiple versions of ant detected...\" when running ant test (CASSANDRA-13232)\n * Coalescing strategy sleeps too much (CASSANDRA-13090)\n * Faster StreamingHistogram (CASSANDRA-13038)\n * Legacy deserializer can create unexpected boundary range tombstones (CASSANDRA-13237)\n * Remove unnecessary assertion from AntiCompactionTest (CASSANDRA-13070)\n * Fix cqlsh COPY for dates before 1900 (CASSANDRA-13185)\n * Use keyspace replication settings on system.size_estimates table (CASSANDRA-9639)\n * Add vm.max_map_count StartupCheck (CASSANDRA-13008)\n * Obfuscate password in stress-graphs (CASSANDRA-12233)\n * Hint related logging should include the IP address of the destination in addition to\n   host ID (CASSANDRA-13205)\n * Reloading logback.xml does not work (CASSANDRA-13173)\n * Lightweight transactions temporarily fail after upgrade from 2.1 to 3.0 (CASSANDRA-13109)\n * Duplicate rows after upgrading from 2.1.16 to 3.0.10/3.9 (CASSANDRA-13125)\n * Fix UPDATE queries with empty IN restrictions (CASSANDRA-13152)\n * Fix handling of partition with partition-level deletion plus\n   live rows in sstabledump (CASSANDRA-13177)\n * Provide user workaround when system_schema.columns does not contain entries\n   for a table that's in system_schema.tables (CASSANDRA-13180)\n * Nodetool upgradesstables/scrub/compact ignores system tables (CASSANDRA-13410)\n * Fix schema version calculation for rolling upgrades (CASSANDRA-13441)\nMerged from 2.2:\n * Nodes started with join_ring=False should be able to serve requests when authentication is enabled (CASSANDRA-11381)\n * cqlsh COPY FROM: increment error count only for failures, not for attempts (CASSANDRA-13209)\n * Avoid starting gossiper in RemoveTest (CASSANDRA-13407)\n * Fix weightedSize() for row-cache reported by JMX and NodeTool (CASSANDRA-13393)\n * Fix JVM metric names (CASSANDRA-13103)\n * Honor truststore-password parameter in cassandra-stress (CASSANDRA-12773)\n * Discard in-flight shadow round responses (CASSANDRA-12653)\n * Don't anti-compact repaired data to avoid inconsistencies (CASSANDRA-13153)\n * Wrong logger name in AnticompactionTask (CASSANDRA-13343)\n * Commitlog replay may fail if last mutation is within 4 bytes of end of segment (CASSANDRA-13282)\n * Fix queries updating multiple time the same list (CASSANDRA-13130)\n * Fix GRANT/REVOKE when keyspace isn't specified (CASSANDRA-13053)\n * Fix flaky LongLeveledCompactionStrategyTest (CASSANDRA-12202)\n * Fix failing COPY TO STDOUT (CASSANDRA-12497)\n * Fix ColumnCounter::countAll behaviour for reverse queries (CASSANDRA-13222)\n * Exceptions encountered calling getSeeds() breaks OTC thread (CASSANDRA-13018)\n * Fix negative mean latency metric (CASSANDRA-12876)\n * Use only one file pointer when creating commitlog segments (CASSANDRA-12539)\nMerged from 2.1:\n * Fix 2ndary index queries on partition keys for tables with static columns (CASSANDRA-13147)\n * Fix ParseError unhashable type list in cqlsh copy from (CASSANDRA-13364)\n * Remove unused repositories (CASSANDRA-13278)\n * Log stacktrace of uncaught exceptions (CASSANDRA-13108)\n * Use portable stderr for java error in startup (CASSANDRA-13211)\n * Fix Thread Leak in OutboundTcpConnection (CASSANDRA-13204)\n * Upgrade netty version to fix memory leak with client encryption (CASSANDRA-13114)\n * Coalescing strategy can enter infinite loop (CASSANDRA-13159)\n\n\n3.10\n * Fix secondary index queries regression (CASSANDRA-13013)\n * Add duration type to the protocol V5 (CASSANDRA-12850)\n * Fix duration type validation (CASSANDRA-13143)\n * Fix flaky GcCompactionTest (CASSANDRA-12664)\n * Fix TestHintedHandoff.hintedhandoff_decom_test (CASSANDRA-13058)\n * Fixed query monitoring for range queries (CASSANDRA-13050)\n * Remove outboundBindAny configuration property (CASSANDRA-12673)\n * Use correct bounds for all-data range when filtering (CASSANDRA-12666)\n * Remove timing window in test case (CASSANDRA-12875)\n * Resolve unit testing without JCE security libraries installed (CASSANDRA-12945)\n * Fix inconsistencies in cassandra-stress load balancing policy (CASSANDRA-12919)\n * Fix validation of non-frozen UDT cells (CASSANDRA-12916)\n * Don't shut down socket input/output on StreamSession (CASSANDRA-12903)\n * Fix Murmur3PartitionerTest (CASSANDRA-12858)\n * Move cqlsh syntax rules into separate module and allow easier customization (CASSANDRA-12897)\n * Fix CommitLogSegmentManagerTest (CASSANDRA-12283)\n * Fix cassandra-stress truncate option (CASSANDRA-12695)\n * Fix crossNode value when receiving messages (CASSANDRA-12791)\n * Don't load MX4J beans twice (CASSANDRA-12869)\n * Extend native protocol request flags, add versions to SUPPORTED, and introduce ProtocolVersion enum (CASSANDRA-12838)\n * Set JOINING mode when running pre-join tasks (CASSANDRA-12836)\n * remove net.mintern.primitive library due to license issue (CASSANDRA-12845)\n * Properly format IPv6 addresses when logging JMX service URL (CASSANDRA-12454)\n * Optimize the vnode allocation for single replica per DC (CASSANDRA-12777)\n * Use non-token restrictions for bounds when token restrictions are overridden (CASSANDRA-12419)\n * Fix CQLSH auto completion for PER PARTITION LIMIT (CASSANDRA-12803)\n * Use different build directories for Eclipse and Ant (CASSANDRA-12466)\n * Avoid potential AttributeError in cqlsh due to no table metadata (CASSANDRA-12815)\n * Fix RandomReplicationAwareTokenAllocatorTest.testExistingCluster (CASSANDRA-12812)\n * Upgrade commons-codec to 1.9 (CASSANDRA-12790)\n * Add duration data type (CASSANDRA-11873)\n * Make the fanout size for LeveledCompactionStrategy to be configurable (CASSANDRA-11550)\n * Fix timeout in ReplicationAwareTokenAllocatorTest (CASSANDRA-12784)\n * Improve sum aggregate functions (CASSANDRA-12417)\n * Make cassandra.yaml docs for batch_size_*_threshold_in_kb reflect changes in CASSANDRA-10876 (CASSANDRA-12761)\n * cqlsh fails to format collections when using aliases (CASSANDRA-11534)\n * Check for hash conflicts in prepared statements (CASSANDRA-12733)\n * Exit query parsing upon first error (CASSANDRA-12598)\n * Fix cassandra-stress to use single seed in UUID generation (CASSANDRA-12729)\n * CQLSSTableWriter does not allow Update statement (CASSANDRA-12450)\n * Config class uses boxed types but DD exposes primitive types (CASSANDRA-12199)\n * Add pre- and post-shutdown hooks to Storage Service (CASSANDRA-12461)\n * Add hint delivery metrics (CASSANDRA-12693)\n * Remove IndexInfo cache from FileIndexInfoRetriever (CASSANDRA-12731)\n * ColumnIndex does not reuse buffer (CASSANDRA-12502)\n * cdc column addition still breaks schema migration tasks (CASSANDRA-12697)\n * Upgrade metrics-reporter dependencies (CASSANDRA-12089)\n * Tune compaction thread count via nodetool (CASSANDRA-12248)\n * Add +=/-= shortcut syntax for update queries (CASSANDRA-12232)\n * Include repair session IDs in repair start message (CASSANDRA-12532)\n * Add a blocking task to Index, run before joining the ring (CASSANDRA-12039)\n * Fix NPE when using CQLSSTableWriter (CASSANDRA-12667)\n * Support optional backpressure strategies at the coordinator (CASSANDRA-9318)\n * Make randompartitioner work with new vnode allocation (CASSANDRA-12647)\n * Fix cassandra-stress graphing (CASSANDRA-12237)\n * Allow filtering on partition key columns for queries without secondary indexes (CASSANDRA-11031)\n * Fix Cassandra Stress reporting thread model and precision (CASSANDRA-12585)\n * Add JMH benchmarks.jar (CASSANDRA-12586)\n * Cleanup uses of AlterTableStatementColumn (CASSANDRA-12567)\n * Add keep-alive to streaming (CASSANDRA-11841)\n * Tracing payload is passed through newSession(..) (CASSANDRA-11706)\n * avoid deleting non existing sstable files and improve related log messages (CASSANDRA-12261)\n * json/yaml output format for nodetool compactionhistory (CASSANDRA-12486)\n * Retry all internode messages once after a connection is\n   closed and reopened (CASSANDRA-12192)\n * Add support to rebuild from targeted replica (CASSANDRA-9875)\n * Add sequence distribution type to cassandra stress (CASSANDRA-12490)\n * \"SELECT * FROM foo LIMIT ;\" does not error out (CASSANDRA-12154)\n * Define executeLocally() at the ReadQuery Level (CASSANDRA-12474)\n * Extend read/write failure messages with a map of replica addresses\n   to error codes in the v5 native protocol (CASSANDRA-12311)\n * Fix rebuild of SASI indexes with existing index files (CASSANDRA-12374)\n * Let DatabaseDescriptor not implicitly startup services (CASSANDRA-9054, 12550)\n * Fix clustering indexes in presence of static columns in SASI (CASSANDRA-12378)\n * Fix queries on columns with reversed type on SASI indexes (CASSANDRA-12223)\n * Added slow query log (CASSANDRA-12403)\n * Count full coordinated request against timeout (CASSANDRA-12256)\n * Allow TTL with null value on insert and update (CASSANDRA-12216)\n * Make decommission operation resumable (CASSANDRA-12008)\n * Add support to one-way targeted repair (CASSANDRA-9876)\n * Remove clientutil jar (CASSANDRA-11635)\n * Fix compaction throughput throttle (CASSANDRA-12366, CASSANDRA-12717)\n * Delay releasing Memtable memory on flush until PostFlush has finished running (CASSANDRA-12358)\n * Cassandra stress should dump all setting on startup (CASSANDRA-11914)\n * Make it possible to compact a given token range (CASSANDRA-10643)\n * Allow updating DynamicEndpointSnitch properties via JMX (CASSANDRA-12179)\n * Collect metrics on queries by consistency level (CASSANDRA-7384)\n * Add support for GROUP BY to SELECT statement (CASSANDRA-10707)\n * Deprecate memtable_cleanup_threshold and update default for memtable_flush_writers (CASSANDRA-12228)\n * Upgrade to OHC 0.4.4 (CASSANDRA-12133)\n * Add version command to cassandra-stress (CASSANDRA-12258)\n * Create compaction-stress tool (CASSANDRA-11844)\n * Garbage-collecting compaction operation and schema option (CASSANDRA-7019)\n * Add beta protocol flag for v5 native protocol (CASSANDRA-12142)\n * Support filtering on non-PRIMARY KEY columns in the CREATE\n   MATERIALIZED VIEW statement's WHERE clause (CASSANDRA-10368)\n * Unify STDOUT and SYSTEMLOG logback format (CASSANDRA-12004)\n * COPY FROM should raise error for non-existing input files (CASSANDRA-12174)\n * Faster write path (CASSANDRA-12269)\n * Option to leave omitted columns in INSERT JSON unset (CASSANDRA-11424)\n * Support json/yaml output in nodetool tpstats (CASSANDRA-12035)\n * Expose metrics for successful/failed authentication attempts (CASSANDRA-10635)\n * Prepend snapshot name with \"truncated\" or \"dropped\" when a snapshot\n   is taken before truncating or dropping a table (CASSANDRA-12178)\n * Optimize RestrictionSet (CASSANDRA-12153)\n * cqlsh does not automatically downgrade CQL version (CASSANDRA-12150)\n * Omit (de)serialization of state variable in UDAs (CASSANDRA-9613)\n * Create a system table to expose prepared statements (CASSANDRA-8831)\n * Reuse DataOutputBuffer from ColumnIndex (CASSANDRA-11970)\n * Remove DatabaseDescriptor dependency from SegmentedFile (CASSANDRA-11580)\n * Add supplied username to authentication error messages (CASSANDRA-12076)\n * Remove pre-startup check for open JMX port (CASSANDRA-12074)\n * Remove compaction Severity from DynamicEndpointSnitch (CASSANDRA-11738)\n * Restore resumable hints delivery (CASSANDRA-11960)\n * Properly record CAS contention (CASSANDRA-12626)\nMerged from 3.0:\n * Dump threads when unit tests time out (CASSANDRA-13117)\n * Better error when modifying function permissions without explicit keyspace (CASSANDRA-12925)\n * Indexer is not correctly invoked when building indexes over sstables (CASSANDRA-13075)\n * Stress daemon help is incorrect (CASSANDRA-12563)\n * Read repair is not blocking repair to finish in foreground repair (CASSANDRA-13115)\n * Replace empty strings with null values if they cannot be converted (CASSANDRA-12794)\n * Remove support for non-JavaScript UDFs (CASSANDRA-12883)\n * Fix deserialization of 2.x DeletedCells (CASSANDRA-12620)\n * Add parent repair session id to anticompaction log message (CASSANDRA-12186)\n * Improve contention handling on failure to acquire MV lock for streaming and hints (CASSANDRA-12905)\n * Fix DELETE and UPDATE queries with empty IN restrictions (CASSANDRA-12829)\n * Mark MVs as built after successful bootstrap (CASSANDRA-12984)\n * Estimated TS drop-time histogram updated with Cell.NO_DELETION_TIME (CASSANDRA-13040)\n * Nodetool compactionstats fails with NullPointerException (CASSANDRA-13021)\n * Thread local pools never cleaned up (CASSANDRA-13033)\n * Set RPC_READY to false when draining or if a node is marked as shutdown (CASSANDRA-12781)\n * CQL often queries static columns unnecessarily (CASSANDRA-12768)\n * Make sure sstables only get committed when it's safe to discard commit log records (CASSANDRA-12956)\n * Reject default_time_to_live option when creating or altering MVs (CASSANDRA-12868)\n * Nodetool should use a more sane max heap size (CASSANDRA-12739)\n * LocalToken ensures token values are cloned on heap (CASSANDRA-12651)\n * AnticompactionRequestSerializer serializedSize is incorrect (CASSANDRA-12934)\n * Prevent reloading of logback.xml from UDF sandbox (CASSANDRA-12535)\n * Reenable HeapPool (CASSANDRA-12900)\n * Disallow offheap_buffers memtable allocation (CASSANDRA-11039)\n * Fix CommitLogSegmentManagerTest (CASSANDRA-12283)\n * Pass root cause to CorruptBlockException when uncompression failed (CASSANDRA-12889)\n * Batch with multiple conditional updates for the same partition causes AssertionError (CASSANDRA-12867)\n * Make AbstractReplicationStrategy extendable from outside its package (CASSANDRA-12788)\n * Don't tell users to turn off consistent rangemovements during rebuild. (CASSANDRA-12296)\n * Fix CommitLogTest.testDeleteIfNotDirty (CASSANDRA-12854)\n * Avoid deadlock due to MV lock contention (CASSANDRA-12689)\n * Fix for KeyCacheCqlTest flakiness (CASSANDRA-12801)\n * Include SSTable filename in compacting large row message (CASSANDRA-12384)\n * Fix potential socket leak (CASSANDRA-12329, CASSANDRA-12330)\n * Fix ViewTest.testCompaction (CASSANDRA-12789)\n * Improve avg aggregate functions (CASSANDRA-12417)\n * Preserve quoted reserved keyword column names in MV creation (CASSANDRA-11803)\n * nodetool stopdaemon errors out (CASSANDRA-12646)\n * Split materialized view mutations on build to prevent OOM (CASSANDRA-12268)\n * mx4j does not work in 3.0.8 (CASSANDRA-12274)\n * Abort cqlsh copy-from in case of no answer after prolonged period of time (CASSANDRA-12740)\n * Avoid sstable corrupt exception due to dropped static column (CASSANDRA-12582)\n * Make stress use client mode to avoid checking commit log size on startup (CASSANDRA-12478)\n * Fix exceptions with new vnode allocation (CASSANDRA-12715)\n * Unify drain and shutdown processes (CASSANDRA-12509)\n * Fix NPE in ComponentOfSlice.isEQ() (CASSANDRA-12706)\n * Fix failure in LogTransactionTest (CASSANDRA-12632)\n * Fix potentially incomplete non-frozen UDT values when querying with the\n   full primary key specified (CASSANDRA-12605)\n * Make sure repaired tombstones are dropped when only_purge_repaired_tombstones is enabled (CASSANDRA-12703)\n * Skip writing MV mutations to commitlog on mutation.applyUnsafe() (CASSANDRA-11670)\n * Establish consistent distinction between non-existing partition and NULL value for LWTs on static columns (CASSANDRA-12060)\n * Extend ColumnIdentifier.internedInstances key to include the type that generated the byte buffer (CASSANDRA-12516)\n * Handle composite prefixes with final EOC=0 as in 2.x and refactor LegacyLayout.decodeBound (CASSANDRA-12423)\n * select_distinct_with_deletions_test failing on non-vnode environments (CASSANDRA-11126)\n * Stack Overflow returned to queries while upgrading (CASSANDRA-12527)\n * Fix legacy regex for temporary files from 2.2 (CASSANDRA-12565)\n * Add option to state current gc_grace_seconds to tools/bin/sstablemetadata (CASSANDRA-12208)\n * Fix file system race condition that may cause LogAwareFileLister to fail to classify files (CASSANDRA-11889)\n * Fix file handle leaks due to simultaneous compaction/repair and\n   listing snapshots, calculating snapshot sizes, or making schema\n   changes (CASSANDRA-11594)\n * Fix nodetool repair exits with 0 for some errors (CASSANDRA-12508)\n * Do not shut down BatchlogManager twice during drain (CASSANDRA-12504)\n * Disk failure policy should not be invoked on out of space (CASSANDRA-12385)\n * Calculate last compacted key on startup (CASSANDRA-6216)\n * Add schema to snapshot manifest, add USING TIMESTAMP clause to ALTER TABLE statements (CASSANDRA-7190)\n * If CF has no clustering columns, any row cache is full partition cache (CASSANDRA-12499)\n * Correct log message for statistics of offheap memtable flush (CASSANDRA-12776)\n * Explicitly set locale for string validation (CASSANDRA-12541,CASSANDRA-12542,CASSANDRA-12543,CASSANDRA-12545)\nMerged from 2.2:\n * Fix speculative retry bugs (CASSANDRA-13009)\n * Fix handling of nulls and unsets in IN conditions (CASSANDRA-12981)\n * Fix race causing infinite loop if Thrift server is stopped before it starts listening (CASSANDRA-12856)\n * CompactionTasks now correctly drops sstables out of compaction when not enough disk space is available (CASSANDRA-12979)\n * Fix DynamicEndpointSnitch noop in multi-datacenter situations (CASSANDRA-13074)\n * cqlsh copy-from: encode column names to avoid primary key parsing errors (CASSANDRA-12909)\n * Temporarily fix bug that creates commit log when running offline tools (CASSANDRA-8616)\n * Reduce granuality of OpOrder.Group during index build (CASSANDRA-12796)\n * Test bind parameters and unset parameters in InsertUpdateIfConditionTest (CASSANDRA-12980)\n * Use saved tokens when setting local tokens on StorageService.joinRing (CASSANDRA-12935)\n * cqlsh: fix DESC TYPES errors (CASSANDRA-12914)\n * Fix leak on skipped SSTables in sstableupgrade (CASSANDRA-12899)\n * Avoid blocking gossip during pending range calculation (CASSANDRA-12281)\n * Fix purgeability of tombstones with max timestamp (CASSANDRA-12792)\n * Fail repair if participant dies during sync or anticompaction (CASSANDRA-12901)\n * cqlsh COPY: unprotected pk values before converting them if not using prepared statements (CASSANDRA-12863)\n * Fix Util.spinAssertEquals (CASSANDRA-12283)\n * Fix potential NPE for compactionstats (CASSANDRA-12462)\n * Prepare legacy authenticate statement if credentials table initialised after node startup (CASSANDRA-12813)\n * Change cassandra.wait_for_tracing_events_timeout_secs default to 0 (CASSANDRA-12754)\n * Clean up permissions when a UDA is dropped (CASSANDRA-12720)\n * Limit colUpdateTimeDelta histogram updates to reasonable deltas (CASSANDRA-11117)\n * Fix leak errors and execution rejected exceptions when draining (CASSANDRA-12457)\n * Fix merkle tree depth calculation (CASSANDRA-12580)\n * Make Collections deserialization more robust (CASSANDRA-12618)\n * Fix exceptions when enabling gossip on nodes that haven't joined the ring (CASSANDRA-12253)\n * Fix authentication problem when invoking cqlsh copy from a SOURCE command (CASSANDRA-12642)\n * Decrement pending range calculator jobs counter in finally block\n * cqlshlib tests: increase default execute timeout (CASSANDRA-12481)\n * Forward writes to replacement node when replace_address != broadcast_address (CASSANDRA-8523)\n * Fail repair on non-existing table (CASSANDRA-12279)\n * Enable repair -pr and -local together (fix regression of CASSANDRA-7450) (CASSANDRA-12522)\n * Better handle invalid system roles table (CASSANDRA-12700)\n * Split consistent range movement flag correction (CASSANDRA-12786)\nMerged from 2.1:\n * cqlsh copy-from: sort user type fields in csv (CASSANDRA-12959)\n * Don't skip sstables based on maxLocalDeletionTime (CASSANDRA-12765)\n\n\n3.8, 3.9\n * Fix value skipping with counter columns (CASSANDRA-11726)\n * Fix nodetool tablestats miss SSTable count (CASSANDRA-12205)\n * Fixed flacky SSTablesIteratedTest (CASSANDRA-12282)\n * Fixed flacky SSTableRewriterTest: check file counts before calling validateCFS (CASSANDRA-12348)\n * cqlsh: Fix handling of $$-escaped strings (CASSANDRA-12189)\n * Fix SSL JMX requiring truststore containing server cert (CASSANDRA-12109)\n * RTE from new CDC column breaks in flight queries (CASSANDRA-12236)\n * Fix hdr logging for single operation workloads (CASSANDRA-12145)\n * Fix SASI PREFIX search in CONTAINS mode with partial terms (CASSANDRA-12073)\n * Increase size of flushExecutor thread pool (CASSANDRA-12071)\n * Partial revert of CASSANDRA-11971, cannot recycle buffer in SP.sendMessagesToNonlocalDC (CASSANDRA-11950)\n * Upgrade netty to 4.0.39 (CASSANDRA-12032, CASSANDRA-12034)\n * Improve details in compaction log message (CASSANDRA-12080)\n * Allow unset values in CQLSSTableWriter (CASSANDRA-11911)\n * Chunk cache to request compressor-compatible buffers if pool space is exhausted (CASSANDRA-11993)\n * Remove DatabaseDescriptor dependencies from SequentialWriter (CASSANDRA-11579)\n * Move skip_stop_words filter before stemming (CASSANDRA-12078)\n * Support seek() in EncryptedFileSegmentInputStream (CASSANDRA-11957)\n * SSTable tools mishandling LocalPartitioner (CASSANDRA-12002)\n * When SEPWorker assigned work, set thread name to match pool (CASSANDRA-11966)\n * Add cross-DC latency metrics (CASSANDRA-11569)\n * Allow terms in selection clause (CASSANDRA-10783)\n * Add bind variables to trace (CASSANDRA-11719)\n * Switch counter shards' clock to timestamps (CASSANDRA-9811)\n * Introduce HdrHistogram and response/service/wait separation to stress tool (CASSANDRA-11853)\n * entry-weighers in QueryProcessor should respect partitionKeyBindIndexes field (CASSANDRA-11718)\n * Support older ant versions (CASSANDRA-11807)\n * Estimate compressed on disk size when deciding if sstable size limit reached (CASSANDRA-11623)\n * cassandra-stress profiles should support case sensitive schemas (CASSANDRA-11546)\n * Remove DatabaseDescriptor dependency from FileUtils (CASSANDRA-11578)\n * Faster streaming (CASSANDRA-9766)\n * Add prepared query parameter to trace for \"Execute CQL3 prepared query\" session (CASSANDRA-11425)\n * Add repaired percentage metric (CASSANDRA-11503)\n * Add Change-Data-Capture (CASSANDRA-8844)\nMerged from 3.0:\n * Fix paging for 2.x to 3.x upgrades (CASSANDRA-11195)\n * Fix clean interval not sent to commit log for empty memtable flush (CASSANDRA-12436)\n * Fix potential resource leak in RMIServerSocketFactoryImpl (CASSANDRA-12331)\n * Make sure compaction stats are updated when compaction is interrupted (CASSANDRA-12100)\n * Change commitlog and sstables to track dirty and clean intervals (CASSANDRA-11828)\n * NullPointerException during compaction on table with static columns (CASSANDRA-12336)\n * Fixed ConcurrentModificationException when reading metrics in GraphiteReporter (CASSANDRA-11823)\n * Fix upgrade of super columns on thrift (CASSANDRA-12335)\n * Fixed flacky BlacklistingCompactionsTest, switched to fixed size types and increased corruption size (CASSANDRA-12359)\n * Rerun ReplicationAwareTokenAllocatorTest on failure to avoid flakiness (CASSANDRA-12277)\n * Exception when computing read-repair for range tombstones (CASSANDRA-12263)\n * Lost counter writes in compact table and static columns (CASSANDRA-12219)\n * AssertionError with MVs on updating a row that isn't indexed due to a null value (CASSANDRA-12247)\n * Disable RR and speculative retry with EACH_QUORUM reads (CASSANDRA-11980)\n * Add option to override compaction space check (CASSANDRA-12180)\n * Faster startup by only scanning each directory for temporary files once (CASSANDRA-12114)\n * Respond with v1/v2 protocol header when responding to driver that attempts\n   to connect with too low of a protocol version (CASSANDRA-11464)\n * NullPointerExpception when reading/compacting table (CASSANDRA-11988)\n * Fix problem with undeleteable rows on upgrade to new sstable format (CASSANDRA-12144)\n * Fix potential bad messaging service message for paged range reads\n   within mixed-version 3.x clusters (CASSANDRA-12249)\n * Fix paging logic for deleted partitions with static columns (CASSANDRA-12107)\n * Wait until the message is being send to decide which serializer must be used (CASSANDRA-11393)\n * Fix migration of static thrift column names with non-text comparators (CASSANDRA-12147)\n * Fix upgrading sparse tables that are incorrectly marked as dense (CASSANDRA-11315)\n * Fix reverse queries ignoring range tombstones (CASSANDRA-11733)\n * Avoid potential race when rebuilding CFMetaData (CASSANDRA-12098)\n * Avoid missing sstables when getting the canonical sstables (CASSANDRA-11996)\n * Always select the live sstables when getting sstables in bounds (CASSANDRA-11944)\n * Fix column ordering of results with static columns for Thrift requests in\n   a mixed 2.x/3.x cluster, also fix potential non-resolved duplication of\n   those static columns in query results (CASSANDRA-12123)\n * Avoid digest mismatch with empty but static rows (CASSANDRA-12090)\n * Fix EOF exception when altering column type (CASSANDRA-11820)\n * Fix potential race in schema during new table creation (CASSANDRA-12083)\n * cqlsh: fix error handling in rare COPY FROM failure scenario (CASSANDRA-12070)\n * Disable autocompaction during drain (CASSANDRA-11878)\n * Add a metrics timer to MemtablePool and use it to track time spent blocked on memory in MemtableAllocator (CASSANDRA-11327)\n * Fix upgrading schema with super columns with non-text subcomparators (CASSANDRA-12023)\n * Add TimeWindowCompactionStrategy (CASSANDRA-9666)\n * Fix JsonTransformer output of partition with deletion info (CASSANDRA-12418)\n * Fix NPE in SSTableLoader when specifying partial directory path (CASSANDRA-12609)\nMerged from 2.2:\n * Add local address entry in PropertyFileSnitch (CASSANDRA-11332)\n * cqlsh copy: fix missing counter values (CASSANDRA-12476)\n * Move migration tasks to non-periodic queue, assure flush executor shutdown after non-periodic executor (CASSANDRA-12251)\n * cqlsh copy: fixed possible race in initializing feeding thread (CASSANDRA-11701)\n * Only set broadcast_rpc_address on Ec2MultiRegionSnitch if it's not set (CASSANDRA-11357)\n * Update StorageProxy range metrics for timeouts, failures and unavailables (CASSANDRA-9507)\n * Add Sigar to classes included in clientutil.jar (CASSANDRA-11635)\n * Add decay to histograms and timers used for metrics (CASSANDRA-11752)\n * Fix hanging stream session (CASSANDRA-10992)\n * Fix INSERT JSON, fromJson() support of smallint, tinyint types (CASSANDRA-12371)\n * Restore JVM metric export for metric reporters (CASSANDRA-12312)\n * Release sstables of failed stream sessions only when outgoing transfers are finished (CASSANDRA-11345)\n * Wait for tracing events before returning response and query at same consistency level client side (CASSANDRA-11465)\n * cqlsh copyutil should get host metadata by connected address (CASSANDRA-11979)\n * Fixed cqlshlib.test.remove_test_db (CASSANDRA-12214)\n * Synchronize ThriftServer::stop() (CASSANDRA-12105)\n * Use dedicated thread for JMX notifications (CASSANDRA-12146)\n * Improve streaming synchronization and fault tolerance (CASSANDRA-11414)\n * MemoryUtil.getShort() should return an unsigned short also for architectures not supporting unaligned memory accesses (CASSANDRA-11973)\nMerged from 2.1:\n * Fix queries with empty ByteBuffer values in clustering column restrictions (CASSANDRA-12127)\n * Disable passing control to post-flush after flush failure to prevent data loss (CASSANDRA-11828)\n * Allow STCS-in-L0 compactions to reduce scope with LCS (CASSANDRA-12040)\n * cannot use cql since upgrading python to 2.7.11+ (CASSANDRA-11850)\n * Fix filtering on clustering columns when 2i is used (CASSANDRA-11907)\n\n\n3.0.8\n * Fix potential race in schema during new table creation (CASSANDRA-12083)\n * cqlsh: fix error handling in rare COPY FROM failure scenario (CASSANDRA-12070)\n * Disable autocompaction during drain (CASSANDRA-11878)\n * Add a metrics timer to MemtablePool and use it to track time spent blocked on memory in MemtableAllocator (CASSANDRA-11327)\n * Fix upgrading schema with super columns with non-text subcomparators (CASSANDRA-12023)\n * Add TimeWindowCompactionStrategy (CASSANDRA-9666)\nMerged from 2.2:\n * Allow nodetool info to run with readonly JMX access (CASSANDRA-11755)\n * Validate bloom_filter_fp_chance against lowest supported\n   value when the table is created (CASSANDRA-11920)\n * Don't send erroneous NEW_NODE notifications on restart (CASSANDRA-11038)\n * StorageService shutdown hook should use a volatile variable (CASSANDRA-11984)\nMerged from 2.1:\n * Add system property to set the max number of native transport requests in queue (CASSANDRA-11363)\n * Fix queries with empty ByteBuffer values in clustering column restrictions (CASSANDRA-12127)\n * Disable passing control to post-flush after flush failure to prevent data loss (CASSANDRA-11828)\n * Allow STCS-in-L0 compactions to reduce scope with LCS (CASSANDRA-12040)\n * cannot use cql since upgrading python to 2.7.11+ (CASSANDRA-11850)\n * Fix filtering on clustering columns when 2i is used (CASSANDRA-11907)\n * Avoid stalling paxos when the paxos state expires (CASSANDRA-12043)\n * Remove finished incoming streaming connections from MessagingService (CASSANDRA-11854)\n * Don't try to get sstables for non-repairing column families (CASSANDRA-12077)\n * Avoid marking too many sstables as repaired (CASSANDRA-11696)\n * Prevent select statements with clustering key > 64k (CASSANDRA-11882)\n * Fix clock skew corrupting other nodes with paxos (CASSANDRA-11991)\n * Remove distinction between non-existing static columns and existing but null in LWTs (CASSANDRA-9842)\n * Cache local ranges when calculating repair neighbors (CASSANDRA-11934)\n * Allow LWT operation on static column with only partition keys (CASSANDRA-10532)\n * Create interval tree over canonical sstables to avoid missing sstables during streaming (CASSANDRA-11886)\n * cqlsh COPY FROM: shutdown parent cluster after forking, to avoid corrupting SSL connections (CASSANDRA-11749)\n\n\n3.7\n * Support multiple folders for user defined compaction tasks (CASSANDRA-11765)\n * Fix race in CompactionStrategyManager's pause/resume (CASSANDRA-11922)\nMerged from 3.0:\n * Fix legacy serialization of Thrift-generated non-compound range tombstones\n   when communicating with 2.x nodes (CASSANDRA-11930)\n * Fix Directories instantiations where CFS.initialDirectories should be used (CASSANDRA-11849)\n * Avoid referencing DatabaseDescriptor in AbstractType (CASSANDRA-11912)\n * Don't use static dataDirectories field in Directories instances (CASSANDRA-11647)\n * Fix sstables not being protected from removal during index build (CASSANDRA-11905)\n * cqlsh: Suppress stack trace from Read/WriteFailures (CASSANDRA-11032)\n * Remove unneeded code to repair index summaries that have\n   been improperly down-sampled (CASSANDRA-11127)\n * Avoid WriteTimeoutExceptions during commit log replay due to materialized\n   view lock contention (CASSANDRA-11891)\n * Prevent OOM failures on SSTable corruption, improve tests for corruption detection (CASSANDRA-9530)\n * Use CFS.initialDirectories when clearing snapshots (CASSANDRA-11705)\n * Allow compaction strategies to disable early open (CASSANDRA-11754)\n * Refactor Materialized View code (CASSANDRA-11475)\n * Update Java Driver (CASSANDRA-11615)\nMerged from 2.2:\n * Persist local metadata earlier in startup sequence (CASSANDRA-11742)\n * cqlsh: fix tab completion for case-sensitive identifiers (CASSANDRA-11664)\n * Avoid showing estimated key as -1 in tablestats (CASSANDRA-11587)\n * Fix possible race condition in CommitLog.recover (CASSANDRA-11743)\n * Enable client encryption in sstableloader with cli options (CASSANDRA-11708)\n * Possible memory leak in NIODataInputStream (CASSANDRA-11867)\n * Add seconds to cqlsh tracing session duration (CASSANDRA-11753)\n * Fix commit log replay after out-of-order flush completion (CASSANDRA-9669)\n * Prohibit Reversed Counter type as part of the PK (CASSANDRA-9395)\n * cqlsh: correctly handle non-ascii chars in error messages (CASSANDRA-11626)\nMerged from 2.1:\n * Run CommitLog tests with different compression settings (CASSANDRA-9039)\n * cqlsh: apply current keyspace to source command (CASSANDRA-11152)\n * Clear out parent repair session if repair coordinator dies (CASSANDRA-11824)\n * Set default streaming_socket_timeout_in_ms to 24 hours (CASSANDRA-11840)\n * Do not consider local node a valid source during replace (CASSANDRA-11848)\n * Add message dropped tasks to nodetool netstats (CASSANDRA-11855)\n * Avoid holding SSTableReaders for duration of incremental repair (CASSANDRA-11739)\n\n\n3.6\n * Correctly migrate schema for frozen UDTs during 2.x -> 3.x upgrades\n   (does not affect any released versions) (CASSANDRA-11613)\n * Allow server startup if JMX is configured directly (CASSANDRA-11725)\n * Prevent direct memory OOM on buffer pool allocations (CASSANDRA-11710)\n * Enhanced Compaction Logging (CASSANDRA-10805)\n * Make prepared statement cache size configurable (CASSANDRA-11555)\n * Integrated JMX authentication and authorization (CASSANDRA-10091)\n * Add units to stress ouput (CASSANDRA-11352)\n * Fix PER PARTITION LIMIT for single and multi partitions queries (CASSANDRA-11603)\n * Add uncompressed chunk cache for RandomAccessReader (CASSANDRA-5863)\n * Clarify ClusteringPrefix hierarchy (CASSANDRA-11213)\n * Always perform collision check before joining ring (CASSANDRA-10134)\n * SSTableWriter output discrepancy (CASSANDRA-11646)\n * Fix potential timeout in NativeTransportService.testConcurrentDestroys (CASSANDRA-10756)\n * Support large partitions on the 3.0 sstable format (CASSANDRA-11206,11763)\n * Add support to rebuild from specific range (CASSANDRA-10406)\n * Optimize the overlapping lookup by calculating all the\n   bounds in advance (CASSANDRA-11571)\n * Support json/yaml output in nodetool tablestats (CASSANDRA-5977)\n * (stress) Add datacenter option to -node options (CASSANDRA-11591)\n * Fix handling of empty slices (CASSANDRA-11513)\n * Make number of cores used by cqlsh COPY visible to testing code (CASSANDRA-11437)\n * Allow filtering on clustering columns for queries without secondary indexes (CASSANDRA-11310)\n * Refactor Restriction hierarchy (CASSANDRA-11354)\n * Eliminate allocations in R/W path (CASSANDRA-11421)\n * Update Netty to 4.0.36 (CASSANDRA-11567)\n * Fix PER PARTITION LIMIT for queries requiring post-query ordering (CASSANDRA-11556)\n * Allow instantiation of UDTs and tuples in UDFs (CASSANDRA-10818)\n * Support UDT in CQLSSTableWriter (CASSANDRA-10624)\n * Support for non-frozen user-defined types, updating\n   individual fields of user-defined types (CASSANDRA-7423)\n * Make LZ4 compression level configurable (CASSANDRA-11051)\n * Allow per-partition LIMIT clause in CQL (CASSANDRA-7017)\n * Make custom filtering more extensible with UserExpression (CASSANDRA-11295)\n * Improve field-checking and error reporting in cassandra.yaml (CASSANDRA-10649)\n * Print CAS stats in nodetool proxyhistograms (CASSANDRA-11507)\n * More user friendly error when providing an invalid token to nodetool (CASSANDRA-9348)\n * Add static column support to SASI index (CASSANDRA-11183)\n * Support EQ/PREFIX queries in SASI CONTAINS mode without tokenization (CASSANDRA-11434)\n * Support LIKE operator in prepared statements (CASSANDRA-11456)\n * Add a command to see if a Materialized View has finished building (CASSANDRA-9967)\n * Log endpoint and port associated with streaming operation (CASSANDRA-8777)\n * Print sensible units for all log messages (CASSANDRA-9692)\n * Upgrade Netty to version 4.0.34 (CASSANDRA-11096)\n * Break the CQL grammar into separate Parser and Lexer (CASSANDRA-11372)\n * Compress only inter-dc traffic by default (CASSANDRA-8888)\n * Add metrics to track write amplification (CASSANDRA-11420)\n * cassandra-stress: cannot handle \"value-less\" tables (CASSANDRA-7739)\n * Add/drop multiple columns in one ALTER TABLE statement (CASSANDRA-10411)\n * Add require_endpoint_verification opt for internode encryption (CASSANDRA-9220)\n * Add auto import java.util for UDF code block (CASSANDRA-11392)\n * Add --hex-format option to nodetool getsstables (CASSANDRA-11337)\n * sstablemetadata should print sstable min/max token (CASSANDRA-7159)\n * Do not wrap CassandraException in TriggerExecutor (CASSANDRA-9421)\n * COPY TO should have higher double precision (CASSANDRA-11255)\n * Stress should exit with non-zero status after failure (CASSANDRA-10340)\n * Add client to cqlsh SHOW_SESSION (CASSANDRA-8958)\n * Fix nodetool tablestats keyspace level metrics (CASSANDRA-11226)\n * Store repair options in parent_repair_history (CASSANDRA-11244)\n * Print current leveling in sstableofflinerelevel (CASSANDRA-9588)\n * Change repair message for keyspaces with RF 1 (CASSANDRA-11203)\n * Remove hard-coded SSL cipher suites and protocols (CASSANDRA-10508)\n * Improve concurrency in CompactionStrategyManager (CASSANDRA-10099)\n * (cqlsh) interpret CQL type for formatting blobs (CASSANDRA-11274)\n * Refuse to start and print txn log information in case of disk\n   corruption (CASSANDRA-10112)\n * Resolve some eclipse-warnings (CASSANDRA-11086)\n * (cqlsh) Show static columns in a different color (CASSANDRA-11059)\n * Allow to remove TTLs on table with default_time_to_live (CASSANDRA-11207)\nMerged from 3.0:\n * Disallow creating view with a static column (CASSANDRA-11602)\n * Reduce the amount of object allocations caused by the getFunctions methods (CASSANDRA-11593)\n * Potential error replaying commitlog with smallint/tinyint/date/time types (CASSANDRA-11618)\n * Fix queries with filtering on counter columns (CASSANDRA-11629)\n * Improve tombstone printing in sstabledump (CASSANDRA-11655)\n * Fix paging for range queries where all clustering columns are specified (CASSANDRA-11669)\n * Don't require HEAP_NEW_SIZE to be set when using G1 (CASSANDRA-11600)\n * Fix sstabledump not showing cells after tombstone marker (CASSANDRA-11654)\n * Ignore all LocalStrategy keyspaces for streaming and other related\n   operations (CASSANDRA-11627)\n * Ensure columnfilter covers indexed columns for thrift 2i queries (CASSANDRA-11523)\n * Only open one sstable scanner per sstable (CASSANDRA-11412)\n * Option to specify ProtocolVersion in cassandra-stress (CASSANDRA-11410)\n * ArithmeticException in avgFunctionForDecimal (CASSANDRA-11485)\n * LogAwareFileLister should only use OLD sstable files in current folder to determine disk consistency (CASSANDRA-11470)\n * Notify indexers of expired rows during compaction (CASSANDRA-11329)\n * Properly respond with ProtocolError when a v1/v2 native protocol\n   header is received (CASSANDRA-11464)\n * Validate that num_tokens and initial_token are consistent with one another (CASSANDRA-10120)\nMerged from 2.2:\n * Exit JVM if JMX server fails to startup (CASSANDRA-11540)\n * Produce a heap dump when exiting on OOM (CASSANDRA-9861)\n * Restore ability to filter on clustering columns when using a 2i (CASSANDRA-11510)\n * JSON datetime formatting needs timezone (CASSANDRA-11137)\n * Fix is_dense recalculation for Thrift-updated tables (CASSANDRA-11502)\n * Remove unnescessary file existence check during anticompaction (CASSANDRA-11660)\n * Add missing files to debian packages (CASSANDRA-11642)\n * Avoid calling Iterables::concat in loops during ModificationStatement::getFunctions (CASSANDRA-11621)\n * cqlsh: COPY FROM should use regular inserts for single statement batches and\n   report errors correctly if workers processes crash on initialization (CASSANDRA-11474)\n * Always close cluster with connection in CqlRecordWriter (CASSANDRA-11553)\n * Allow only DISTINCT queries with partition keys restrictions (CASSANDRA-11339)\n * CqlConfigHelper no longer requires both a keystore and truststore to work (CASSANDRA-11532)\n * Make deprecated repair methods backward-compatible with previous notification service (CASSANDRA-11430)\n * IncomingStreamingConnection version check message wrong (CASSANDRA-11462)\nMerged from 2.1:\n * Support mlockall on IBM POWER arch (CASSANDRA-11576)\n * Add option to disable use of severity in DynamicEndpointSnitch (CASSANDRA-11737)\n * cqlsh COPY FROM fails for null values with non-prepared statements (CASSANDRA-11631)\n * Make cython optional in pylib/setup.py (CASSANDRA-11630)\n * Change order of directory searching for cassandra.in.sh to favor local one (CASSANDRA-11628)\n * cqlsh COPY FROM fails with []{} chars in UDT/tuple fields/values (CASSANDRA-11633)\n * clqsh: COPY FROM throws TypeError with Cython extensions enabled (CASSANDRA-11574)\n * cqlsh: COPY FROM ignores NULL values in conversion (CASSANDRA-11549)\n * Validate levels when building LeveledScanner to avoid overlaps with orphaned sstables (CASSANDRA-9935)\n\n\n3.5\n * StaticTokenTreeBuilder should respect posibility of duplicate tokens (CASSANDRA-11525)\n * Correctly fix potential assertion error during compaction (CASSANDRA-11353)\n * Avoid index segment stitching in RAM which lead to OOM on big SSTable files (CASSANDRA-11383)\n * Fix clustering and row filters for LIKE queries on clustering columns (CASSANDRA-11397)\nMerged from 3.0:\n * Fix rare NPE on schema upgrade from 2.x to 3.x (CASSANDRA-10943)\n * Improve backoff policy for cqlsh COPY FROM (CASSANDRA-11320)\n * Improve IF NOT EXISTS check in CREATE INDEX (CASSANDRA-11131)\n * Upgrade ohc to 0.4.3\n * Enable SO_REUSEADDR for JMX RMI server sockets (CASSANDRA-11093)\n * Allocate merkletrees with the correct size (CASSANDRA-11390)\n * Support streaming pre-3.0 sstables (CASSANDRA-10990)\n * Add backpressure to compressed or encrypted commit log (CASSANDRA-10971)\n * SSTableExport supports secondary index tables (CASSANDRA-11330)\n * Fix sstabledump to include missing info in debug output (CASSANDRA-11321)\n * Establish and implement canonical bulk reading workload(s) (CASSANDRA-10331)\n * Fix paging for IN queries on tables without clustering columns (CASSANDRA-11208)\n * Remove recursive call from CompositesSearcher (CASSANDRA-11304)\n * Fix filtering on non-primary key columns for queries without index (CASSANDRA-6377)\n * Fix sstableloader fail when using materialized view (CASSANDRA-11275)\nMerged from 2.2:\n * DatabaseDescriptor should log stacktrace in case of Eception during seed provider creation (CASSANDRA-11312)\n * Use canonical path for directory in SSTable descriptor (CASSANDRA-10587)\n * Add cassandra-stress keystore option (CASSANDRA-9325)\n * Dont mark sstables as repairing with sub range repairs (CASSANDRA-11451)\n * Notify when sstables change after cancelling compaction (CASSANDRA-11373)\n * cqlsh: COPY FROM should check that explicit column names are valid (CASSANDRA-11333)\n * Add -Dcassandra.start_gossip startup option (CASSANDRA-10809)\n * Fix UTF8Validator.validate() for modified UTF-8 (CASSANDRA-10748)\n * Clarify that now() function is calculated on the coordinator node in CQL documentation (CASSANDRA-10900)\n * Fix bloom filter sizing with LCS (CASSANDRA-11344)\n * (cqlsh) Fix error when result is 0 rows with EXPAND ON (CASSANDRA-11092)\n * Add missing newline at end of bin/cqlsh (CASSANDRA-11325)\n * Unresolved hostname leads to replace being ignored (CASSANDRA-11210)\n * Only log yaml config once, at startup (CASSANDRA-11217)\n * Reference leak with parallel repairs on the same table (CASSANDRA-11215)\nMerged from 2.1:\n * Add a -j parameter to scrub/cleanup/upgradesstables to state how\n   many threads to use (CASSANDRA-11179)\n * COPY FROM on large datasets: fix progress report and debug performance (CASSANDRA-11053)\n * InvalidateKeys should have a weak ref to key cache (CASSANDRA-11176)\n\n\n3.4\n * (cqlsh) add cqlshrc option to always connect using ssl (CASSANDRA-10458)\n * Cleanup a few resource warnings (CASSANDRA-11085)\n * Allow custom tracing implementations (CASSANDRA-10392)\n * Extract LoaderOptions to be able to be used from outside (CASSANDRA-10637)\n * fix OnDiskIndexTest to properly treat empty ranges (CASSANDRA-11205)\n * fix TrackerTest to handle new notifications (CASSANDRA-11178)\n * add SASI validation for partitioner and complex columns (CASSANDRA-11169)\n * Add caching of encrypted credentials in PasswordAuthenticator (CASSANDRA-7715)\n * fix SASI memtable switching on flush (CASSANDRA-11159)\n * Remove duplicate offline compaction tracking (CASSANDRA-11148)\n * fix EQ semantics of analyzed SASI indexes (CASSANDRA-11130)\n * Support long name output for nodetool commands (CASSANDRA-7950)\n * Encrypted hints (CASSANDRA-11040)\n * SASI index options validation (CASSANDRA-11136)\n * Optimize disk seek using min/max column name meta data when the LIMIT clause is used\n   (CASSANDRA-8180)\n * Add LIKE support to CQL3 (CASSANDRA-11067)\n * Generic Java UDF types (CASSANDRA-10819)\n * cqlsh: Include sub-second precision in timestamps by default (CASSANDRA-10428)\n * Set javac encoding to utf-8 (CASSANDRA-11077)\n * Integrate SASI index into Cassandra (CASSANDRA-10661)\n * Add --skip-flush option to nodetool snapshot\n * Skip values for non-queried columns (CASSANDRA-10657)\n * Add support for secondary indexes on static columns (CASSANDRA-8103)\n * CommitLogUpgradeTestMaker creates broken commit logs (CASSANDRA-11051)\n * Add metric for number of dropped mutations (CASSANDRA-10866)\n * Simplify row cache invalidation code (CASSANDRA-10396)\n * Support user-defined compaction through nodetool (CASSANDRA-10660)\n * Stripe view locks by key and table ID to reduce contention (CASSANDRA-10981)\n * Add nodetool gettimeout and settimeout commands (CASSANDRA-10953)\n * Add 3.0 metadata to sstablemetadata output (CASSANDRA-10838)\nMerged from 3.0:\n * MV should only query complex columns included in the view (CASSANDRA-11069)\n * Failed aggregate creation breaks server permanently (CASSANDRA-11064)\n * Add sstabledump tool (CASSANDRA-7464)\n * Introduce backpressure for hints (CASSANDRA-10972)\n * Fix ClusteringPrefix not being able to read tombstone range boundaries (CASSANDRA-11158)\n * Prevent logging in sandboxed state (CASSANDRA-11033)\n * Disallow drop/alter operations of UDTs used by UDAs (CASSANDRA-10721)\n * Add query time validation method on Index (CASSANDRA-11043)\n * Avoid potential AssertionError in mixed version cluster (CASSANDRA-11128)\n * Properly handle hinted handoff after topology changes (CASSANDRA-5902)\n * AssertionError when listing sstable files on inconsistent disk state (CASSANDRA-11156)\n * Fix wrong rack counting and invalid conditions check for TokenAllocation\n   (CASSANDRA-11139)\n * Avoid creating empty hint files (CASSANDRA-11090)\n * Fix leak detection strong reference loop using weak reference (CASSANDRA-11120)\n * Configurie BatchlogManager to stop delayed tasks on shutdown (CASSANDRA-11062)\n * Hadoop integration is incompatible with Cassandra Driver 3.0.0 (CASSANDRA-11001)\n * Add dropped_columns to the list of schema table so it gets handled\n   properly (CASSANDRA-11050)\n * Fix NPE when using forceRepairRangeAsync without DC (CASSANDRA-11239)\nMerged from 2.2:\n * Preserve order for preferred SSL cipher suites (CASSANDRA-11164)\n * Range.compareTo() violates the contract of Comparable (CASSANDRA-11216)\n * Avoid NPE when serializing ErrorMessage with null message (CASSANDRA-11167)\n * Replacing an aggregate with a new version doesn't reset INITCOND (CASSANDRA-10840)\n * (cqlsh) cqlsh cannot be called through symlink (CASSANDRA-11037)\n * fix ohc and java-driver pom dependencies in build.xml (CASSANDRA-10793)\n * Protect from keyspace dropped during repair (CASSANDRA-11065)\n * Handle adding fields to a UDT in SELECT JSON and toJson() (CASSANDRA-11146)\n * Better error message for cleanup (CASSANDRA-10991)\n * cqlsh pg-style-strings broken if line ends with ';' (CASSANDRA-11123)\n * Always persist upsampled index summaries (CASSANDRA-10512)\n * (cqlsh) Fix inconsistent auto-complete (CASSANDRA-10733)\n * Make SELECT JSON and toJson() threadsafe (CASSANDRA-11048)\n * Fix SELECT on tuple relations for mixed ASC/DESC clustering order (CASSANDRA-7281)\n * Use cloned TokenMetadata in size estimates to avoid race against membership check\n   (CASSANDRA-10736)\n * (cqlsh) Support utf-8/cp65001 encoding on Windows (CASSANDRA-11030)\n * Fix paging on DISTINCT queries repeats result when first row in partition changes\n   (CASSANDRA-10010)\n * (cqlsh) Support timezone conversion using pytz (CASSANDRA-10397)\n * cqlsh: change default encoding to UTF-8 (CASSANDRA-11124)\nMerged from 2.1:\n * Checking if an unlogged batch is local is inefficient (CASSANDRA-11529)\n * Fix out-of-space error treatment in memtable flushing (CASSANDRA-11448).\n * Don't do defragmentation if reading from repaired sstables (CASSANDRA-10342)\n * Fix streaming_socket_timeout_in_ms not enforced (CASSANDRA-11286)\n * Avoid dropping message too quickly due to missing unit conversion (CASSANDRA-11302)\n * Don't remove FailureDetector history on removeEndpoint (CASSANDRA-10371)\n * Only notify if repair status changed (CASSANDRA-11172)\n * Use logback setting for 'cassandra -v' command (CASSANDRA-10767)\n * Fix sstableloader to unthrottle streaming by default (CASSANDRA-9714)\n * Fix incorrect warning in 'nodetool status' (CASSANDRA-10176)\n * Properly release sstable ref when doing offline scrub (CASSANDRA-10697)\n * Improve nodetool status performance for large cluster (CASSANDRA-7238)\n * Gossiper#isEnabled is not thread safe (CASSANDRA-11116)\n * Avoid major compaction mixing repaired and unrepaired sstables in DTCS (CASSANDRA-11113)\n * Make it clear what DTCS timestamp_resolution is used for (CASSANDRA-11041)\n * (cqlsh) Display milliseconds when datetime overflows (CASSANDRA-10625)\n\n\n3.3\n * Avoid infinite loop if owned range is smaller than number of\n   data dirs (CASSANDRA-11034)\n * Avoid bootstrap hanging when existing nodes have no data to stream (CASSANDRA-11010)\nMerged from 3.0:\n * Remove double initialization of newly added tables (CASSANDRA-11027)\n * Filter keys searcher results by target range (CASSANDRA-11104)\n * Fix deserialization of legacy read commands (CASSANDRA-11087)\n * Fix incorrect computation of deletion time in sstable metadata (CASSANDRA-11102)\n * Avoid memory leak when collecting sstable metadata (CASSANDRA-11026)\n * Mutations do not block for completion under view lock contention (CASSANDRA-10779)\n * Invalidate legacy schema tables when unloading them (CASSANDRA-11071)\n * (cqlsh) handle INSERT and UPDATE statements with LWT conditions correctly\n   (CASSANDRA-11003)\n * Fix DISTINCT queries in mixed version clusters (CASSANDRA-10762)\n * Migrate build status for indexes along with legacy schema (CASSANDRA-11046)\n * Ensure SSTables for legacy KEYS indexes can be read (CASSANDRA-11045)\n * Added support for IBM zSystems architecture (CASSANDRA-11054)\n * Update CQL documentation (CASSANDRA-10899)\n * Check the column name, not cell name, for dropped columns when reading\n   legacy sstables (CASSANDRA-11018)\n * Don't attempt to index clustering values of static rows (CASSANDRA-11021)\n * Remove checksum files after replaying hints (CASSANDRA-10947)\n * Support passing base table metadata to custom 2i validation (CASSANDRA-10924)\n * Ensure stale index entries are purged during reads (CASSANDRA-11013)\n * (cqlsh) Also apply --connect-timeout to control connection\n   timeout (CASSANDRA-10959)\n * Fix AssertionError when removing from list using UPDATE (CASSANDRA-10954)\n * Fix UnsupportedOperationException when reading old sstable with range\n   tombstone (CASSANDRA-10743)\n * MV should use the maximum timestamp of the primary key (CASSANDRA-10910)\n * Fix potential assertion error during compaction (CASSANDRA-10944)\nMerged from 2.2:\n * maxPurgeableTimestamp needs to check memtables too (CASSANDRA-9949)\n * Apply change to compaction throughput in real time (CASSANDRA-10025)\n * (cqlsh) encode input correctly when saving history\n * Fix potential NPE on ORDER BY queries with IN (CASSANDRA-10955)\n * Start L0 STCS-compactions even if there is a L0 -> L1 compaction\n   going (CASSANDRA-10979)\n * Make UUID LSB unique per process (CASSANDRA-7925)\n * Avoid NPE when performing sstable tasks (scrub etc.) (CASSANDRA-10980)\n * Make sure client gets tombstone overwhelmed warning (CASSANDRA-9465)\n * Fix error streaming section more than 2GB (CASSANDRA-10961)\n * Histogram buckets exposed in jmx are sorted incorrectly (CASSANDRA-10975)\n * Enable GC logging by default (CASSANDRA-10140)\n * Optimize pending range computation (CASSANDRA-9258)\n * Skip commit log and saved cache directories in SSTable version startup check (CASSANDRA-10902)\n * drop/alter user should be case sensitive (CASSANDRA-10817)\nMerged from 2.1:\n * test_bulk_round_trip_blogposts is failing occasionally (CASSANDRA-10938)\n * Fix isJoined return true only after becoming cluster member (CASANDRA-11007)\n * Fix bad gossip generation seen in long-running clusters (CASSANDRA-10969)\n * Avoid NPE when incremental repair fails (CASSANDRA-10909)\n * Unmark sstables compacting once they are done in cleanup/scrub/upgradesstables (CASSANDRA-10829)\n * Allow simultaneous bootstrapping with strict consistency when no vnodes are used (CASSANDRA-11005)\n * Log a message when major compaction does not result in a single file (CASSANDRA-10847)\n * (cqlsh) fix cqlsh_copy_tests when vnodes are disabled (CASSANDRA-10997)\n * (cqlsh) Add request timeout option to cqlsh (CASSANDRA-10686)\n * Avoid AssertionError while submitting hint with LWT (CASSANDRA-10477)\n * If CompactionMetadata is not in stats file, use index summary instead (CASSANDRA-10676)\n * Retry sending gossip syn multiple times during shadow round (CASSANDRA-8072)\n * Fix pending range calculation during moves (CASSANDRA-10887)\n * Sane default (200Mbps) for inter-DC streaming througput (CASSANDRA-8708)\n\n\n3.2\n * Make sure tokens don't exist in several data directories (CASSANDRA-6696)\n * Add requireAuthorization method to IAuthorizer (CASSANDRA-10852)\n * Move static JVM options to conf/jvm.options file (CASSANDRA-10494)\n * Fix CassandraVersion to accept x.y version string (CASSANDRA-10931)\n * Add forceUserDefinedCleanup to allow more flexible cleanup (CASSANDRA-10708)\n * (cqlsh) allow setting TTL with COPY (CASSANDRA-9494)\n * Fix counting of received sstables in streaming (CASSANDRA-10949)\n * Implement hints compression (CASSANDRA-9428)\n * Fix potential assertion error when reading static columns (CASSANDRA-10903)\n * Fix EstimatedHistogram creation in nodetool tablehistograms (CASSANDRA-10859)\n * Establish bootstrap stream sessions sequentially (CASSANDRA-6992)\n * Sort compactionhistory output by timestamp (CASSANDRA-10464)\n * More efficient BTree removal (CASSANDRA-9991)\n * Make tablehistograms accept the same syntax as tablestats (CASSANDRA-10149)\n * Group pending compactions based on table (CASSANDRA-10718)\n * Add compressor name in sstablemetadata output (CASSANDRA-9879)\n * Fix type casting for counter columns (CASSANDRA-10824)\n * Prevent running Cassandra as root (CASSANDRA-8142)\n * bound maximum in-flight commit log replay mutation bytes to 64 megabytes (CASSANDRA-8639)\n * Normalize all scripts (CASSANDRA-10679)\n * Make compression ratio much more accurate (CASSANDRA-10225)\n * Optimize building of Clustering object when only one is created (CASSANDRA-10409)\n * Make index building pluggable (CASSANDRA-10681)\n * Add sstable flush observer (CASSANDRA-10678)\n * Improve NTS endpoints calculation (CASSANDRA-10200)\n * Improve performance of the folderSize function (CASSANDRA-10677)\n * Add support for type casting in selection clause (CASSANDRA-10310)\n * Added graphing option to cassandra-stress (CASSANDRA-7918)\n * Abort in-progress queries that time out (CASSANDRA-7392)\n * Add transparent data encryption core classes (CASSANDRA-9945)\nMerged from 3.0:\n * Better handling of SSL connection errors inter-node (CASSANDRA-10816)\n * Avoid NoSuchElementException when executing empty batch (CASSANDRA-10711)\n * Avoid building PartitionUpdate in toString (CASSANDRA-10897)\n * Reduce heap spent when receiving many SSTables (CASSANDRA-10797)\n * Add back support for 3rd party auth providers to bulk loader (CASSANDRA-10873)\n * Eliminate the dependency on jgrapht for UDT resolution (CASSANDRA-10653)\n * (Hadoop) Close Clusters and Sessions in Hadoop Input/Output classes (CASSANDRA-10837)\n * Fix sstableloader not working with upper case keyspace name (CASSANDRA-10806)\nMerged from 2.2:\n * jemalloc detection fails due to quoting issues in regexv (CASSANDRA-10946)\n * (cqlsh) show correct column names for empty result sets (CASSANDRA-9813)\n * Add new types to Stress (CASSANDRA-9556)\n * Add property to allow listening on broadcast interface (CASSANDRA-9748)\nMerged from 2.1:\n * Match cassandra-loader options in COPY FROM (CASSANDRA-9303)\n * Fix binding to any address in CqlBulkRecordWriter (CASSANDRA-9309)\n * cqlsh fails to decode utf-8 characters for text typed columns (CASSANDRA-10875)\n * Log error when stream session fails (CASSANDRA-9294)\n * Fix bugs in commit log archiving startup behavior (CASSANDRA-10593)\n * (cqlsh) further optimise COPY FROM (CASSANDRA-9302)\n * Allow CREATE TABLE WITH ID (CASSANDRA-9179)\n * Make Stress compiles within eclipse (CASSANDRA-10807)\n * Cassandra Daemon should print JVM arguments (CASSANDRA-10764)\n * Allow cancellation of index summary redistribution (CASSANDRA-8805)\n\n\n3.1.1\nMerged from 3.0:\n  * Fix upgrade data loss due to range tombstone deleting more data than then should\n    (CASSANDRA-10822)\n\n\n3.1\nMerged from 3.0:\n * Avoid MV race during node decommission (CASSANDRA-10674)\n * Disable reloading of GossipingPropertyFileSnitch (CASSANDRA-9474)\n * Handle single-column deletions correction in materialized views\n   when the column is part of the view primary key (CASSANDRA-10796)\n * Fix issue with datadir migration on upgrade (CASSANDRA-10788)\n * Fix bug with range tombstones on reverse queries and test coverage for\n   AbstractBTreePartition (CASSANDRA-10059)\n * Remove 64k limit on collection elements (CASSANDRA-10374)\n * Remove unclear Indexer.indexes() method (CASSANDRA-10690)\n * Fix NPE on stream read error (CASSANDRA-10771)\n * Normalize cqlsh DESC output (CASSANDRA-10431)\n * Rejects partition range deletions when columns are specified (CASSANDRA-10739)\n * Fix error when saving cached key for old format sstable (CASSANDRA-10778)\n * Invalidate prepared statements on DROP INDEX (CASSANDRA-10758)\n * Fix SELECT statement with IN restrictions on partition key,\n   ORDER BY and LIMIT (CASSANDRA-10729)\n * Improve stress performance over 1k threads (CASSANDRA-7217)\n * Wait for migration responses to complete before bootstrapping (CASSANDRA-10731)\n * Unable to create a function with argument of type Inet (CASSANDRA-10741)\n * Fix backward incompatibiliy in CqlInputFormat (CASSANDRA-10717)\n * Correctly preserve deletion info on updated rows when notifying indexers\n   of single-row deletions (CASSANDRA-10694)\n * Notify indexers of partition delete during cleanup (CASSANDRA-10685)\n * Keep the file open in trySkipCache (CASSANDRA-10669)\n * Updated trigger example (CASSANDRA-10257)\nMerged from 2.2:\n * Verify tables in pseudo-system keyspaces at startup (CASSANDRA-10761)\n * Fix IllegalArgumentException in DataOutputBuffer.reallocate for large buffers (CASSANDRA-10592)\n * Show CQL help in cqlsh in web browser (CASSANDRA-7225)\n * Serialize on disk the proper SSTable compression ratio (CASSANDRA-10775)\n * Reject index queries while the index is building (CASSANDRA-8505)\n * CQL.textile syntax incorrectly includes optional keyspace for aggregate SFUNC and FINALFUNC (CASSANDRA-10747)\n * Fix JSON update with prepared statements (CASSANDRA-10631)\n * Don't do anticompaction after subrange repair (CASSANDRA-10422)\n * Fix SimpleDateType type compatibility (CASSANDRA-10027)\n * (Hadoop) fix splits calculation (CASSANDRA-10640)\n * (Hadoop) ensure that Cluster instances are always closed (CASSANDRA-10058)\nMerged from 2.1:\n * Fix Stress profile parsing on Windows (CASSANDRA-10808)\n * Fix incremental repair hang when replica is down (CASSANDRA-10288)\n * Optimize the way we check if a token is repaired in anticompaction (CASSANDRA-10768)\n * Add proper error handling to stream receiver (CASSANDRA-10774)\n * Warn or fail when changing cluster topology live (CASSANDRA-10243)\n * Status command in debian/ubuntu init script doesn't work (CASSANDRA-10213)\n * Some DROP ... IF EXISTS incorrectly result in exceptions on non-existing KS (CASSANDRA-10658)\n * DeletionTime.compareTo wrong in rare cases (CASSANDRA-10749)\n * Force encoding when computing statement ids (CASSANDRA-10755)\n * Properly reject counters as map keys (CASSANDRA-10760)\n * Fix the sstable-needs-cleanup check (CASSANDRA-10740)\n * (cqlsh) Print column names before COPY operation (CASSANDRA-8935)\n * Fix CompressedInputStream for proper cleanup (CASSANDRA-10012)\n * (cqlsh) Support counters in COPY commands (CASSANDRA-9043)\n * Try next replica if not possible to connect to primary replica on\n   ColumnFamilyRecordReader (CASSANDRA-2388)\n * Limit window size in DTCS (CASSANDRA-10280)\n * sstableloader does not use MAX_HEAP_SIZE env parameter (CASSANDRA-10188)\n * (cqlsh) Improve COPY TO performance and error handling (CASSANDRA-9304)\n * Create compression chunk for sending file only (CASSANDRA-10680)\n * Forbid compact clustering column type changes in ALTER TABLE (CASSANDRA-8879)\n * Reject incremental repair with subrange repair (CASSANDRA-10422)\n * Add a nodetool command to refresh size_estimates (CASSANDRA-9579)\n * Invalidate cache after stream receive task is completed (CASSANDRA-10341)\n * Reject counter writes in CQLSSTableWriter (CASSANDRA-10258)\n * Remove superfluous COUNTER_MUTATION stage mapping (CASSANDRA-10605)\n\n\n3.0\n * Fix AssertionError while flushing memtable due to materialized views\n   incorrectly inserting empty rows (CASSANDRA-10614)\n * Store UDA initcond as CQL literal in the schema table, instead of a blob (CASSANDRA-10650)\n * Don't use -1 for the position of partition key in schema (CASSANDRA-10491)\n * Fix distinct queries in mixed version cluster (CASSANDRA-10573)\n * Skip sstable on clustering in names query (CASSANDRA-10571)\n * Remove value skipping as it breaks read-repair (CASSANDRA-10655)\n * Fix bootstrapping with MVs (CASSANDRA-10621)\n * Make sure EACH_QUORUM reads are using NTS (CASSANDRA-10584)\n * Fix MV replica filtering for non-NetworkTopologyStrategy (CASSANDRA-10634)\n * (Hadoop) fix CIF describeSplits() not handling 0 size estimates (CASSANDRA-10600)\n * Fix reading of legacy sstables (CASSANDRA-10590)\n * Use CQL type names in schema metadata tables (CASSANDRA-10365)\n * Guard batchlog replay against integer division by zero (CASSANDRA-9223)\n * Fix bug when adding a column to thrift with the same name than a primary key (CASSANDRA-10608)\n * Add client address argument to IAuthenticator::newSaslNegotiator (CASSANDRA-8068)\n * Fix implementation of LegacyLayout.LegacyBoundComparator (CASSANDRA-10602)\n * Don't use 'names query' read path for counters (CASSANDRA-10572)\n * Fix backward compatibility for counters (CASSANDRA-10470)\n * Remove memory_allocator paramter from cassandra.yaml (CASSANDRA-10581,10628)\n * Execute the metadata reload task of all registered indexes on CFS::reload (CASSANDRA-10604)\n * Fix thrift cas operations with defined columns (CASSANDRA-10576)\n * Fix PartitionUpdate.operationCount()for updates with static column operations (CASSANDRA-10606)\n * Fix thrift get() queries with defined columns (CASSANDRA-10586)\n * Fix marking of indexes as built and removed (CASSANDRA-10601)\n * Skip initialization of non-registered 2i instances, remove Index::getIndexName (CASSANDRA-10595)\n * Fix batches on multiple tables (CASSANDRA-10554)\n * Ensure compaction options are validated when updating KeyspaceMetadata (CASSANDRA-10569)\n * Flatten Iterator Transformation Hierarchy (CASSANDRA-9975)\n * Remove token generator (CASSANDRA-5261)\n * RolesCache should not be created for any authenticator that does not requireAuthentication (CASSANDRA-10562)\n * Fix LogTransaction checking only a single directory for files (CASSANDRA-10421)\n * Fix handling of range tombstones when reading old format sstables (CASSANDRA-10360)\n * Aggregate with Initial Condition fails with C* 3.0 (CASSANDRA-10367)\nMerged from 2.2:\n * (cqlsh) show partial trace if incomplete after max_trace_wait (CASSANDRA-7645)\n * Use most up-to-date version of schema for system tables (CASSANDRA-10652)\n * Deprecate memory_allocator in cassandra.yaml (CASSANDRA-10581,10628)\n * Expose phi values from failure detector via JMX and tweak debug\n   and trace logging (CASSANDRA-9526)\n * Fix IllegalArgumentException in DataOutputBuffer.reallocate for large buffers (CASSANDRA-10592)\nMerged from 2.1:\n * Shutdown compaction in drain to prevent leak (CASSANDRA-10079)\n * (cqlsh) fix COPY using wrong variable name for time_format (CASSANDRA-10633)\n * Do not run SizeEstimatesRecorder if a node is not a member of the ring (CASSANDRA-9912)\n * Improve handling of dead nodes in gossip (CASSANDRA-10298)\n * Fix logback-tools.xml incorrectly configured for outputing to System.err\n   (CASSANDRA-9937)\n * Fix streaming to catch exception so retry not fail (CASSANDRA-10557)\n * Add validation method to PerRowSecondaryIndex (CASSANDRA-10092)\n * Support encrypted and plain traffic on the same port (CASSANDRA-10559)\n * Do STCS in DTCS windows (CASSANDRA-10276)\n * Avoid repetition of JVM_OPTS in debian package (CASSANDRA-10251)\n * Fix potential NPE from handling result of SIM.highestSelectivityIndex (CASSANDRA-10550)\n * Fix paging issues with partitions containing only static columns data (CASSANDRA-10381)\n * Fix conditions on static columns (CASSANDRA-10264)\n * AssertionError: attempted to delete non-existing file CommitLog (CASSANDRA-10377)\n * Fix sorting for queries with an IN condition on partition key columns (CASSANDRA-10363)\n\n\n3.0-rc2\n * Fix SELECT DISTINCT queries between 2.2.2 nodes and 3.0 nodes (CASSANDRA-10473)\n * Remove circular references in SegmentedFile (CASSANDRA-10543)\n * Ensure validation of indexed values only occurs once per-partition (CASSANDRA-10536)\n * Fix handling of static columns for range tombstones in thrift (CASSANDRA-10174)\n * Support empty ColumnFilter for backward compatility on empty IN (CASSANDRA-10471)\n * Remove Pig support (CASSANDRA-10542)\n * Fix LogFile throws Exception when assertion is disabled (CASSANDRA-10522)\n * Revert CASSANDRA-7486, make CMS default GC, move GC config to\n   conf/jvm.options (CASSANDRA-10403)\n * Fix TeeingAppender causing some logs to be truncated/empty (CASSANDRA-10447)\n * Allow EACH_QUORUM for reads (CASSANDRA-9602)\n * Fix potential ClassCastException while upgrading (CASSANDRA-10468)\n * Fix NPE in MVs on update (CASSANDRA-10503)\n * Only include modified cell data in indexing deltas (CASSANDRA-10438)\n * Do not load keyspace when creating sstable writer (CASSANDRA-10443)\n * If node is not yet gossiping write all MV updates to batchlog only (CASSANDRA-10413)\n * Re-populate token metadata after commit log recovery (CASSANDRA-10293)\n * Provide additional metrics for materialized views (CASSANDRA-10323)\n * Flush system schema tables after local schema changes (CASSANDRA-10429)\nMerged from 2.2:\n * Reduce contention getting instances of CompositeType (CASSANDRA-10433)\n * Fix the regression when using LIMIT with aggregates (CASSANDRA-10487)\n * Avoid NoClassDefFoundError during DataDescriptor initialization on windows (CASSANDRA-10412)\n * Preserve case of quoted Role & User names (CASSANDRA-10394)\n * cqlsh pg-style-strings broken (CASSANDRA-10484)\n * cqlsh prompt includes name of keyspace after failed `use` statement (CASSANDRA-10369)\nMerged from 2.1:\n * (cqlsh) Distinguish negative and positive infinity in output (CASSANDRA-10523)\n * (cqlsh) allow custom time_format for COPY TO (CASSANDRA-8970)\n * Don't allow startup if the node's rack has changed (CASSANDRA-10242)\n * (cqlsh) show partial trace if incomplete after max_trace_wait (CASSANDRA-7645)\n * Allow LOCAL_JMX to be easily overridden (CASSANDRA-10275)\n * Mark nodes as dead even if they've already left (CASSANDRA-10205)\n\n\n3.0.0-rc1\n * Fix mixed version read request compatibility for compact static tables\n   (CASSANDRA-10373)\n * Fix paging of DISTINCT with static and IN (CASSANDRA-10354)\n * Allow MATERIALIZED VIEW's SELECT statement to restrict primary key\n   columns (CASSANDRA-9664)\n * Move crc_check_chance out of compression options (CASSANDRA-9839)\n * Fix descending iteration past end of BTreeSearchIterator (CASSANDRA-10301)\n * Transfer hints to a different node on decommission (CASSANDRA-10198)\n * Check partition keys for CAS operations during stmt validation (CASSANDRA-10338)\n * Add custom query expressions to SELECT (CASSANDRA-10217)\n * Fix minor bugs in MV handling (CASSANDRA-10362)\n * Allow custom indexes with 0,1 or multiple target columns (CASSANDRA-10124)\n * Improve MV schema representation (CASSANDRA-9921)\n * Add flag to enable/disable coordinator batchlog for MV writes (CASSANDRA-10230)\n * Update cqlsh COPY for new internal driver serialization interface (CASSANDRA-10318)\n * Give index implementations more control over rebuild operations (CASSANDRA-10312)\n * Update index file format (CASSANDRA-10314)\n * Add \"shadowable\" row tombstones to deal with mv timestamp issues (CASSANDRA-10261)\n * CFS.loadNewSSTables() broken for pre-3.0 sstables\n * Cache selected index in read command to reduce lookups (CASSANDRA-10215)\n * Small optimizations of sstable index serialization (CASSANDRA-10232)\n * Support for both encrypted and unencrypted native transport connections (CASSANDRA-9590)\nMerged from 2.2:\n * Configurable page size in cqlsh (CASSANDRA-9855)\n * Defer default role manager setup until all nodes are on 2.2+ (CASSANDRA-9761)\n * Handle missing RoleManager in config after upgrade to 2.2 (CASSANDRA-10209)\nMerged from 2.1:\n * Bulk Loader API could not tolerate even node failure (CASSANDRA-10347)\n * Avoid misleading pushed notifications when multiple nodes\n   share an rpc_address (CASSANDRA-10052)\n * Fix dropping undroppable when message queue is full (CASSANDRA-10113)\n * Fix potential ClassCastException during paging (CASSANDRA-10352)\n * Prevent ALTER TYPE from creating circular references (CASSANDRA-10339)\n * Fix cache handling of 2i and base tables (CASSANDRA-10155, 10359)\n * Fix NPE in nodetool compactionhistory (CASSANDRA-9758)\n * (Pig) support BulkOutputFormat as a URL parameter (CASSANDRA-7410)\n * BATCH statement is broken in cqlsh (CASSANDRA-10272)\n * (cqlsh) Make cqlsh PEP8 Compliant (CASSANDRA-10066)\n * (cqlsh) Fix error when starting cqlsh with --debug (CASSANDRA-10282)\n * Scrub, Cleanup and Upgrade do not unmark compacting until all operations\n   have completed, regardless of the occurence of exceptions (CASSANDRA-10274)\n\n\n3.0.0-beta2\n * Fix columns returned by AbstractBtreePartitions (CASSANDRA-10220)\n * Fix backward compatibility issue due to AbstractBounds serialization bug (CASSANDRA-9857)\n * Fix startup error when upgrading nodes (CASSANDRA-10136)\n * Base table PRIMARY KEY can be assumed to be NOT NULL in MV creation (CASSANDRA-10147)\n * Improve batchlog write patch (CASSANDRA-9673)\n * Re-apply MaterializedView updates on commitlog replay (CASSANDRA-10164)\n * Require AbstractType.isByteOrderComparable declaration in constructor (CASSANDRA-9901)\n * Avoid digest mismatch on upgrade to 3.0 (CASSANDRA-9554)\n * Fix Materialized View builder when adding multiple MVs (CASSANDRA-10156)\n * Choose better poolingOptions for protocol v4 in cassandra-stress (CASSANDRA-10182)\n * Fix LWW bug affecting Materialized Views (CASSANDRA-10197)\n * Ensures frozen sets and maps are always sorted (CASSANDRA-10162)\n * Don't deadlock when flushing CFS backed custom indexes (CASSANDRA-10181)\n * Fix double flushing of secondary index tables (CASSANDRA-10180)\n * Fix incorrect handling of range tombstones in thrift (CASSANDRA-10046)\n * Only use batchlog when paired materialized view replica is remote (CASSANDRA-10061)\n * Reuse TemporalRow when updating multiple MaterializedViews (CASSANDRA-10060)\n * Validate gc_grace_seconds for batchlog writes and MVs (CASSANDRA-9917)\n * Fix sstablerepairedset (CASSANDRA-10132)\nMerged from 2.2:\n * Cancel transaction for sstables we wont redistribute index summary\n   for (CASSANDRA-10270)\n * Retry snapshot deletion after compaction and gc on Windows (CASSANDRA-10222)\n * Fix failure to start with space in directory path on Windows (CASSANDRA-10239)\n * Fix repair hang when snapshot failed (CASSANDRA-10057)\n * Fall back to 1/4 commitlog volume for commitlog_total_space on small disks\n   (CASSANDRA-10199)\nMerged from 2.1:\n * Added configurable warning threshold for GC duration (CASSANDRA-8907)\n * Fix handling of streaming EOF (CASSANDRA-10206)\n * Only check KeyCache when it is enabled\n * Change streaming_socket_timeout_in_ms default to 1 hour (CASSANDRA-8611)\n * (cqlsh) update list of CQL keywords (CASSANDRA-9232)\n * Add nodetool gettraceprobability command (CASSANDRA-10234)\nMerged from 2.0:\n * Fix rare race where older gossip states can be shadowed (CASSANDRA-10366)\n * Fix consolidating racks violating the RF contract (CASSANDRA-10238)\n * Disallow decommission when node is in drained state (CASSANDRA-8741)\n\n\n2.2.1\n * Fix race during construction of commit log (CASSANDRA-10049)\n * Fix LeveledCompactionStrategyTest (CASSANDRA-9757)\n * Fix broken UnbufferedDataOutputStreamPlus.writeUTF (CASSANDRA-10203)\n * (cqlsh) default load-from-file encoding to utf-8 (CASSANDRA-9898)\n * Avoid returning Permission.NONE when failing to query users table (CASSANDRA-10168)\n * (cqlsh) add CLEAR command (CASSANDRA-10086)\n * Support string literals as Role names for compatibility (CASSANDRA-10135)\nMerged from 2.1:\n * Only check KeyCache when it is enabled\n * Change streaming_socket_timeout_in_ms default to 1 hour (CASSANDRA-8611)\n * (cqlsh) update list of CQL keywords (CASSANDRA-9232)\n\n\n3.0.0-beta1\n * Redesign secondary index API (CASSANDRA-9459, 7771, 9041)\n * Fix throwing ReadFailure instead of ReadTimeout on range queries (CASSANDRA-10125)\n * Rewrite hinted handoff (CASSANDRA-6230)\n * Fix query on static compact tables (CASSANDRA-10093)\n * Fix race during construction of commit log (CASSANDRA-10049)\n * Add option to only purge repaired tombstones (CASSANDRA-6434)\n * Change authorization handling for MVs (CASSANDRA-9927)\n * Add custom JMX enabled executor for UDF sandbox (CASSANDRA-10026)\n * Fix row deletion bug for Materialized Views (CASSANDRA-10014)\n * Support mixed-version clusters with Cassandra 2.1 and 2.2 (CASSANDRA-9704)\n * Fix multiple slices on RowSearchers (CASSANDRA-10002)\n * Fix bug in merging of collections (CASSANDRA-10001)\n * Optimize batchlog replay to avoid full scans (CASSANDRA-7237)\n * Repair improvements when using vnodes (CASSANDRA-5220)\n * Disable scripted UDFs by default (CASSANDRA-9889)\n * Bytecode inspection for Java-UDFs (CASSANDRA-9890)\n * Use byte to serialize MT hash length (CASSANDRA-9792)\n * Replace usage of Adler32 with CRC32 (CASSANDRA-8684)\n * Fix migration to new format from 2.1 SSTable (CASSANDRA-10006)\n * SequentialWriter should extend BufferedDataOutputStreamPlus (CASSANDRA-9500)\n * Use the same repairedAt timestamp within incremental repair session (CASSANDRA-9111)\nMerged from 2.2:\n * Allow count(*) and count(1) to be use as normal aggregation (CASSANDRA-10114)\n * An NPE is thrown if the column name is unknown for an IN relation (CASSANDRA-10043)\n * Apply commit_failure_policy to more errors on startup (CASSANDRA-9749)\n * Fix histogram overflow exception (CASSANDRA-9973)\n * Route gossip messages over dedicated socket (CASSANDRA-9237)\n * Add checksum to saved cache files (CASSANDRA-9265)\n * Log warning when using an aggregate without partition key (CASSANDRA-9737)\nMerged from 2.1:\n * (cqlsh) Allow encoding to be set through command line (CASSANDRA-10004)\n * Add new JMX methods to change local compaction strategy (CASSANDRA-9965)\n * Write hints for paxos commits (CASSANDRA-7342)\n * (cqlsh) Fix timestamps before 1970 on Windows, always\n   use UTC for timestamp display (CASSANDRA-10000)\n * (cqlsh) Avoid overwriting new config file with old config\n   when both exist (CASSANDRA-9777)\n * Release snapshot selfRef when doing snapshot repair (CASSANDRA-9998)\n * Cannot replace token does not exist - DN node removed as Fat Client (CASSANDRA-9871)\nMerged from 2.0:\n * Don't cast expected bf size to an int (CASSANDRA-9959)\n * Make getFullyExpiredSSTables less expensive (CASSANDRA-9882)\n\n\n3.0.0-alpha1\n * Implement proper sandboxing for UDFs (CASSANDRA-9402)\n * Simplify (and unify) cleanup of compaction leftovers (CASSANDRA-7066)\n * Allow extra schema definitions in cassandra-stress yaml (CASSANDRA-9850)\n * Metrics should use up to date nomenclature (CASSANDRA-9448)\n * Change CREATE/ALTER TABLE syntax for compression (CASSANDRA-8384)\n * Cleanup crc and adler code for java 8 (CASSANDRA-9650)\n * Storage engine refactor (CASSANDRA-8099, 9743, 9746, 9759, 9781, 9808, 9825,\n   9848, 9705, 9859, 9867, 9874, 9828, 9801)\n * Update Guava to 18.0 (CASSANDRA-9653)\n * Bloom filter false positive ratio is not honoured (CASSANDRA-8413)\n * New option for cassandra-stress to leave a ratio of columns null (CASSANDRA-9522)\n * Change hinted_handoff_enabled yaml setting, JMX (CASSANDRA-9035)\n * Add algorithmic token allocation (CASSANDRA-7032)\n * Add nodetool command to replay batchlog (CASSANDRA-9547)\n * Make file buffer cache independent of paths being read (CASSANDRA-8897)\n * Remove deprecated legacy Hadoop code (CASSANDRA-9353)\n * Decommissioned nodes will not rejoin the cluster (CASSANDRA-8801)\n * Change gossip stabilization to use endpoit size (CASSANDRA-9401)\n * Change default garbage collector to G1 (CASSANDRA-7486)\n * Populate TokenMetadata early during startup (CASSANDRA-9317)\n * Undeprecate cache recentHitRate (CASSANDRA-6591)\n * Add support for selectively varint encoding fields (CASSANDRA-9499, 9865)\n * Materialized Views (CASSANDRA-6477)\nMerged from 2.2:\n * Avoid grouping sstables for anticompaction with DTCS (CASSANDRA-9900)\n * UDF / UDA execution time in trace (CASSANDRA-9723)\n * Fix broken internode SSL (CASSANDRA-9884)\nMerged from 2.1:\n * Add new JMX methods to change local compaction strategy (CASSANDRA-9965)\n * Fix handling of enable/disable autocompaction (CASSANDRA-9899)\n * Add consistency level to tracing ouput (CASSANDRA-9827)\n * Remove repair snapshot leftover on startup (CASSANDRA-7357)\n * Use random nodes for batch log when only 2 racks (CASSANDRA-8735)\n * Ensure atomicity inside thrift and stream session (CASSANDRA-7757)\n * Fix nodetool info error when the node is not joined (CASSANDRA-9031)\nMerged from 2.0:\n * Log when messages are dropped due to cross_node_timeout (CASSANDRA-9793)\n * Don't track hotness when opening from snapshot for validation (CASSANDRA-9382)\n\n\n2.2.0\n * Allow the selection of columns together with aggregates (CASSANDRA-9767)\n * Fix cqlsh copy methods and other windows specific issues (CASSANDRA-9795)\n * Don't wrap byte arrays in SequentialWriter (CASSANDRA-9797)\n * sum() and avg() functions missing for smallint and tinyint types (CASSANDRA-9671)\n * Revert CASSANDRA-9542 (allow native functions in UDA) (CASSANDRA-9771)\nMerged from 2.1:\n * Fix MarshalException when upgrading superColumn family (CASSANDRA-9582)\n * Fix broken logging for \"empty\" flushes in Memtable (CASSANDRA-9837)\n * Handle corrupt files on startup (CASSANDRA-9686)\n * Fix clientutil jar and tests (CASSANDRA-9760)\n * (cqlsh) Allow the SSL protocol version to be specified through the\n    config file or environment variables (CASSANDRA-9544)\nMerged from 2.0:\n * Add tool to find why expired sstables are not getting dropped (CASSANDRA-10015)\n * Remove erroneous pending HH tasks from tpstats/jmx (CASSANDRA-9129)\n * Don't cast expected bf size to an int (CASSANDRA-9959)\n * checkForEndpointCollision fails for legitimate collisions (CASSANDRA-9765)\n * Complete CASSANDRA-8448 fix (CASSANDRA-9519)\n * Don't include auth credentials in debug log (CASSANDRA-9682)\n * Can't transition from write survey to normal mode (CASSANDRA-9740)\n * Scrub (recover) sstables even when -Index.db is missing (CASSANDRA-9591)\n * Fix growing pending background compaction (CASSANDRA-9662)\n\n\n2.2.0-rc2\n * Re-enable memory-mapped I/O on Windows (CASSANDRA-9658)\n * Warn when an extra-large partition is compacted (CASSANDRA-9643)\n * (cqlsh) Allow setting the initial connection timeout (CASSANDRA-9601)\n * BulkLoader has --transport-factory option but does not use it (CASSANDRA-9675)\n * Allow JMX over SSL directly from nodetool (CASSANDRA-9090)\n * Update cqlsh for UDFs (CASSANDRA-7556)\n * Change Windows kernel default timer resolution (CASSANDRA-9634)\n * Deprected sstable2json and json2sstable (CASSANDRA-9618)\n * Allow native functions in user-defined aggregates (CASSANDRA-9542)\n * Don't repair system_distributed by default (CASSANDRA-9621)\n * Fix mixing min, max, and count aggregates for blob type (CASSANRA-9622)\n * Rename class for DATE type in Java driver (CASSANDRA-9563)\n * Duplicate compilation of UDFs on coordinator (CASSANDRA-9475)\n * Fix connection leak in CqlRecordWriter (CASSANDRA-9576)\n * Mlockall before opening system sstables & remove boot_without_jna option (CASSANDRA-9573)\n * Add functions to convert timeuuid to date or time, deprecate dateOf and unixTimestampOf (CASSANDRA-9229)\n * Make sure we cancel non-compacting sstables from LifecycleTransaction (CASSANDRA-9566)\n * Fix deprecated repair JMX API (CASSANDRA-9570)\n * Add logback metrics (CASSANDRA-9378)\n * Update and refactor ant test/test-compression to run the tests in parallel (CASSANDRA-9583)\n * Fix upgrading to new directory for secondary index (CASSANDRA-9687)\nMerged from 2.1:\n * (cqlsh) Fix bad check for CQL compatibility when DESCRIBE'ing\n   COMPACT STORAGE tables with no clustering columns\n * Eliminate strong self-reference chains in sstable ref tidiers (CASSANDRA-9656)\n * Ensure StreamSession uses canonical sstable reader instances (CASSANDRA-9700)\n * Ensure memtable book keeping is not corrupted in the event we shrink usage (CASSANDRA-9681)\n * Update internal python driver for cqlsh (CASSANDRA-9064)\n * Fix IndexOutOfBoundsException when inserting tuple with too many\n   elements using the string literal notation (CASSANDRA-9559)\n * Enable describe on indices (CASSANDRA-7814)\n * Fix incorrect result for IN queries where column not found (CASSANDRA-9540)\n * ColumnFamilyStore.selectAndReference may block during compaction (CASSANDRA-9637)\n * Fix bug in cardinality check when compacting (CASSANDRA-9580)\n * Fix memory leak in Ref due to ConcurrentLinkedQueue.remove() behaviour (CASSANDRA-9549)\n * Make rebuild only run one at a time (CASSANDRA-9119)\nMerged from 2.0:\n * Avoid NPE in AuthSuccess#decode (CASSANDRA-9727)\n * Add listen_address to system.local (CASSANDRA-9603)\n * Bug fixes to resultset metadata construction (CASSANDRA-9636)\n * Fix setting 'durable_writes' in ALTER KEYSPACE (CASSANDRA-9560)\n * Avoids ballot clash in Paxos (CASSANDRA-9649)\n * Improve trace messages for RR (CASSANDRA-9479)\n * Fix suboptimal secondary index selection when restricted\n   clustering column is also indexed (CASSANDRA-9631)\n * (cqlsh) Add min_threshold to DTCS option autocomplete (CASSANDRA-9385)\n * Fix error message when attempting to create an index on a column\n   in a COMPACT STORAGE table with clustering columns (CASSANDRA-9527)\n * 'WITH WITH' in alter keyspace statements causes NPE (CASSANDRA-9565)\n * Expose some internals of SelectStatement for inspection (CASSANDRA-9532)\n * ArrivalWindow should use primitives (CASSANDRA-9496)\n * Periodically submit background compaction tasks (CASSANDRA-9592)\n * Set HAS_MORE_PAGES flag to false when PagingState is null (CASSANDRA-9571)\n\n\n2.2.0-rc1\n * Compressed commit log should measure compressed space used (CASSANDRA-9095)\n * Fix comparison bug in CassandraRoleManager#collectRoles (CASSANDRA-9551)\n * Add tinyint,smallint,time,date support for UDFs (CASSANDRA-9400)\n * Deprecates SSTableSimpleWriter and SSTableSimpleUnsortedWriter (CASSANDRA-9546)\n * Empty INITCOND treated as null in aggregate (CASSANDRA-9457)\n * Remove use of Cell in Thrift MapReduce classes (CASSANDRA-8609)\n * Integrate pre-release Java Driver 2.2-rc1, custom build (CASSANDRA-9493)\n * Clean up gossiper logic for old versions (CASSANDRA-9370)\n * Fix custom payload coding/decoding to match the spec (CASSANDRA-9515)\n * ant test-all results incomplete when parsed (CASSANDRA-9463)\n * Disallow frozen<> types in function arguments and return types for\n   clarity (CASSANDRA-9411)\n * Static Analysis to warn on unsafe use of Autocloseable instances (CASSANDRA-9431)\n * Update commitlog archiving examples now that commitlog segments are\n   not recycled (CASSANDRA-9350)\n * Extend Transactional API to sstable lifecycle management (CASSANDRA-8568)\n * (cqlsh) Add support for native protocol 4 (CASSANDRA-9399)\n * Ensure that UDF and UDAs are keyspace-isolated (CASSANDRA-9409)\n * Revert CASSANDRA-7807 (tracing completion client notifications) (CASSANDRA-9429)\n * Add ability to stop compaction by ID (CASSANDRA-7207)\n * Let CassandraVersion handle SNAPSHOT version (CASSANDRA-9438)\nMerged from 2.1:\n * (cqlsh) Fix using COPY through SOURCE or -f (CASSANDRA-9083)\n * Fix occasional lack of `system` keyspace in schema tables (CASSANDRA-8487)\n * Use ProtocolError code instead of ServerError code for native protocol\n   error responses to unsupported protocol versions (CASSANDRA-9451)\n * Default commitlog_sync_batch_window_in_ms changed to 2ms (CASSANDRA-9504)\n * Fix empty partition assertion in unsorted sstable writing tools (CASSANDRA-9071)\n * Ensure truncate without snapshot cannot produce corrupt responses (CASSANDRA-9388)\n * Consistent error message when a table mixes counter and non-counter\n   columns (CASSANDRA-9492)\n * Avoid getting unreadable keys during anticompaction (CASSANDRA-9508)\n * (cqlsh) Better float precision by default (CASSANDRA-9224)\n * Improve estimated row count (CASSANDRA-9107)\n * Optimize range tombstone memory footprint (CASSANDRA-8603)\n * Use configured gcgs in anticompaction (CASSANDRA-9397)\nMerged from 2.0:\n * Don't accumulate more range than necessary in RangeTombstone.Tracker (CASSANDRA-9486)\n * Add broadcast and rpc addresses to system.local (CASSANDRA-9436)\n * Always mark sstable suspect when corrupted (CASSANDRA-9478)\n * Add database users and permissions to CQL3 documentation (CASSANDRA-7558)\n * Allow JVM_OPTS to be passed to standalone tools (CASSANDRA-5969)\n * Fix bad condition in RangeTombstoneList (CASSANDRA-9485)\n * Fix potential StackOverflow when setting CrcCheckChance over JMX (CASSANDRA-9488)\n * Fix null static columns in pages after the first, paged reversed\n   queries (CASSANDRA-8502)\n * Fix counting cache serialization in request metrics (CASSANDRA-9466)\n * Add option not to validate atoms during scrub (CASSANDRA-9406)\n\n\n2.2.0-beta1\n * Introduce Transactional API for internal state changes (CASSANDRA-8984)\n * Add a flag in cassandra.yaml to enable UDFs (CASSANDRA-9404)\n * Better support of null for UDF (CASSANDRA-8374)\n * Use ecj instead of javassist for UDFs (CASSANDRA-8241)\n * faster async logback configuration for tests (CASSANDRA-9376)\n * Add `smallint` and `tinyint` data types (CASSANDRA-8951)\n * Avoid thrift schema creation when native driver is used in stress tool (CASSANDRA-9374)\n * Make Functions.declared thread-safe\n * Add client warnings to native protocol v4 (CASSANDRA-8930)\n * Allow roles cache to be invalidated (CASSANDRA-8967)\n * Upgrade Snappy (CASSANDRA-9063)\n * Don't start Thrift rpc by default (CASSANDRA-9319)\n * Only stream from unrepaired sstables with incremental repair (CASSANDRA-8267)\n * Aggregate UDFs allow SFUNC return type to differ from STYPE if FFUNC specified (CASSANDRA-9321)\n * Remove Thrift dependencies in bundled tools (CASSANDRA-8358)\n * Disable memory mapping of hsperfdata file for JVM statistics (CASSANDRA-9242)\n * Add pre-startup checks to detect potential incompatibilities (CASSANDRA-8049)\n * Distinguish between null and unset in protocol v4 (CASSANDRA-7304)\n * Add user/role permissions for user-defined functions (CASSANDRA-7557)\n * Allow cassandra config to be updated to restart daemon without unloading classes (CASSANDRA-9046)\n * Don't initialize compaction writer before checking if iter is empty (CASSANDRA-9117)\n * Don't execute any functions at prepare-time (CASSANDRA-9037)\n * Share file handles between all instances of a SegmentedFile (CASSANDRA-8893)\n * Make it possible to major compact LCS (CASSANDRA-7272)\n * Make FunctionExecutionException extend RequestExecutionException\n   (CASSANDRA-9055)\n * Add support for SELECT JSON, INSERT JSON syntax and new toJson(), fromJson()\n   functions (CASSANDRA-7970)\n * Optimise max purgeable timestamp calculation in compaction (CASSANDRA-8920)\n * Constrain internode message buffer sizes, and improve IO class hierarchy (CASSANDRA-8670)\n * New tool added to validate all sstables in a node (CASSANDRA-5791)\n * Push notification when tracing completes for an operation (CASSANDRA-7807)\n * Delay \"node up\" and \"node added\" notifications until native protocol server is started (CASSANDRA-8236)\n * Compressed Commit Log (CASSANDRA-6809)\n * Optimise IntervalTree (CASSANDRA-8988)\n * Add a key-value payload for third party usage (CASSANDRA-8553, 9212)\n * Bump metrics-reporter-config dependency for metrics 3.0 (CASSANDRA-8149)\n * Partition intra-cluster message streams by size, not type (CASSANDRA-8789)\n * Add WriteFailureException to native protocol, notify coordinator of\n   write failures (CASSANDRA-8592)\n * Convert SequentialWriter to nio (CASSANDRA-8709)\n * Add role based access control (CASSANDRA-7653, 8650, 7216, 8760, 8849, 8761, 8850)\n * Record client ip address in tracing sessions (CASSANDRA-8162)\n * Indicate partition key columns in response metadata for prepared\n   statements (CASSANDRA-7660)\n * Merge UUIDType and TimeUUIDType parse logic (CASSANDRA-8759)\n * Avoid memory allocation when searching index summary (CASSANDRA-8793)\n * Optimise (Time)?UUIDType Comparisons (CASSANDRA-8730)\n * Make CRC32Ex into a separate maven dependency (CASSANDRA-8836)\n * Use preloaded jemalloc w/ Unsafe (CASSANDRA-8714, 9197)\n * Avoid accessing partitioner through StorageProxy (CASSANDRA-8244, 8268)\n * Upgrade Metrics library and remove depricated metrics (CASSANDRA-5657)\n * Serializing Row cache alternative, fully off heap (CASSANDRA-7438)\n * Duplicate rows returned when in clause has repeated values (CASSANDRA-6706)\n * Make CassandraException unchecked, extend RuntimeException (CASSANDRA-8560)\n * Support direct buffer decompression for reads (CASSANDRA-8464)\n * DirectByteBuffer compatible LZ4 methods (CASSANDRA-7039)\n * Group sstables for anticompaction correctly (CASSANDRA-8578)\n * Add ReadFailureException to native protocol, respond\n   immediately when replicas encounter errors while handling\n   a read request (CASSANDRA-7886)\n * Switch CommitLogSegment from RandomAccessFile to nio (CASSANDRA-8308)\n * Allow mixing token and partition key restrictions (CASSANDRA-7016)\n * Support index key/value entries on map collections (CASSANDRA-8473)\n * Modernize schema tables (CASSANDRA-8261)\n * Support for user-defined aggregation functions (CASSANDRA-8053)\n * Fix NPE in SelectStatement with empty IN values (CASSANDRA-8419)\n * Refactor SelectStatement, return IN results in natural order instead\n   of IN value list order and ignore duplicate values in partition key IN restrictions (CASSANDRA-7981)\n * Support UDTs, tuples, and collections in user-defined\n   functions (CASSANDRA-7563)\n * Fix aggregate fn results on empty selection, result column name,\n   and cqlsh parsing (CASSANDRA-8229)\n * Mark sstables as repaired after full repair (CASSANDRA-7586)\n * Extend Descriptor to include a format value and refactor reader/writer\n   APIs (CASSANDRA-7443)\n * Integrate JMH for microbenchmarks (CASSANDRA-8151)\n * Keep sstable levels when bootstrapping (CASSANDRA-7460)\n * Add Sigar library and perform basic OS settings check on startup (CASSANDRA-7838)\n * Support for aggregation functions (CASSANDRA-4914)\n * Remove cassandra-cli (CASSANDRA-7920)\n * Accept dollar quoted strings in CQL (CASSANDRA-7769)\n * Make assassinate a first class command (CASSANDRA-7935)\n * Support IN clause on any partition key column (CASSANDRA-7855)\n * Support IN clause on any clustering column (CASSANDRA-4762)\n * Improve compaction logging (CASSANDRA-7818)\n * Remove YamlFileNetworkTopologySnitch (CASSANDRA-7917)\n * Do anticompaction in groups (CASSANDRA-6851)\n * Support user-defined functions (CASSANDRA-7395, 7526, 7562, 7740, 7781, 7929,\n   7924, 7812, 8063, 7813, 7708)\n * Permit configurable timestamps with cassandra-stress (CASSANDRA-7416)\n * Move sstable RandomAccessReader to nio2, which allows using the\n   FILE_SHARE_DELETE flag on Windows (CASSANDRA-4050)\n * Remove CQL2 (CASSANDRA-5918)\n * Optimize fetching multiple cells by name (CASSANDRA-6933)\n * Allow compilation in java 8 (CASSANDRA-7028)\n * Make incremental repair default (CASSANDRA-7250)\n * Enable code coverage thru JaCoCo (CASSANDRA-7226)\n * Switch external naming of 'column families' to 'tables' (CASSANDRA-4369)\n * Shorten SSTable path (CASSANDRA-6962)\n * Use unsafe mutations for most unit tests (CASSANDRA-6969)\n * Fix race condition during calculation of pending ranges (CASSANDRA-7390)\n * Fail on very large batch sizes (CASSANDRA-8011)\n * Improve concurrency of repair (CASSANDRA-6455, 8208, 9145)\n * Select optimal CRC32 implementation at runtime (CASSANDRA-8614)\n * Evaluate MurmurHash of Token once per query (CASSANDRA-7096)\n * Generalize progress reporting (CASSANDRA-8901)\n * Resumable bootstrap streaming (CASSANDRA-8838, CASSANDRA-8942)\n * Allow scrub for secondary index (CASSANDRA-5174)\n * Save repair data to system table (CASSANDRA-5839)\n * fix nodetool names that reference column families (CASSANDRA-8872)\n Merged from 2.1:\n * Warn on misuse of unlogged batches (CASSANDRA-9282)\n * Failure detector detects and ignores local pauses (CASSANDRA-9183)\n * Add utility class to support for rate limiting a given log statement (CASSANDRA-9029)\n * Add missing consistency levels to cassandra-stess (CASSANDRA-9361)\n * Fix commitlog getCompletedTasks to not increment (CASSANDRA-9339)\n * Fix for harmless exceptions logged as ERROR (CASSANDRA-8564)\n * Delete processed sstables in sstablesplit/sstableupgrade (CASSANDRA-8606)\n * Improve sstable exclusion from partition tombstones (CASSANDRA-9298)\n * Validate the indexed column rather than the cell's contents for 2i (CASSANDRA-9057)\n * Add support for top-k custom 2i queries (CASSANDRA-8717)\n * Fix error when dropping table during compaction (CASSANDRA-9251)\n * cassandra-stress supports validation operations over user profiles (CASSANDRA-8773)\n * Add support for rate limiting log messages (CASSANDRA-9029)\n * Log the partition key with tombstone warnings (CASSANDRA-8561)\n * Reduce runWithCompactionsDisabled poll interval to 1ms (CASSANDRA-9271)\n * Fix PITR commitlog replay (CASSANDRA-9195)\n * GCInspector logs very different times (CASSANDRA-9124)\n * Fix deleting from an empty list (CASSANDRA-9198)\n * Update tuple and collection types that use a user-defined type when that UDT\n   is modified (CASSANDRA-9148, CASSANDRA-9192)\n * Use higher timeout for prepair and snapshot in repair (CASSANDRA-9261)\n * Fix anticompaction blocking ANTI_ENTROPY stage (CASSANDRA-9151)\n * Repair waits for anticompaction to finish (CASSANDRA-9097)\n * Fix streaming not holding ref when stream error (CASSANDRA-9295)\n * Fix canonical view returning early opened SSTables (CASSANDRA-9396)\nMerged from 2.0:\n * (cqlsh) Add LOGIN command to switch users (CASSANDRA-7212)\n * Clone SliceQueryFilter in AbstractReadCommand implementations (CASSANDRA-8940)\n * Push correct protocol notification for DROP INDEX (CASSANDRA-9310)\n * token-generator - generated tokens too long (CASSANDRA-9300)\n * Fix counting of tombstones for TombstoneOverwhelmingException (CASSANDRA-9299)\n * Fix ReconnectableSnitch reconnecting to peers during upgrade (CASSANDRA-6702)\n * Include keyspace and table name in error log for collections over the size\n   limit (CASSANDRA-9286)\n * Avoid potential overlap in LCS with single-partition sstables (CASSANDRA-9322)\n * Log warning message when a table is queried before the schema has fully\n   propagated (CASSANDRA-9136)\n * Overload SecondaryIndex#indexes to accept the column definition (CASSANDRA-9314)\n * (cqlsh) Add SERIAL and LOCAL_SERIAL consistency levels (CASSANDRA-8051)\n * Fix index selection during rebuild with certain table layouts (CASSANDRA-9281)\n * Fix partition-level-delete-only workload accounting (CASSANDRA-9194)\n * Allow scrub to handle corrupted compressed chunks (CASSANDRA-9140)\n * Fix assertion error when resetlocalschema is run during repair (CASSANDRA-9249)\n * Disable single sstable tombstone compactions for DTCS by default (CASSANDRA-9234)\n * IncomingTcpConnection thread is not named (CASSANDRA-9262)\n * Close incoming connections when MessagingService is stopped (CASSANDRA-9238)\n * Fix streaming hang when retrying (CASSANDRA-9132)\n\n\n2.1.5\n * Re-add deprecated cold_reads_to_omit param for backwards compat (CASSANDRA-9203)\n * Make anticompaction visible in compactionstats (CASSANDRA-9098)\n * Improve nodetool getendpoints documentation about the partition\n   key parameter (CASSANDRA-6458)\n * Don't check other keyspaces for schema changes when an user-defined\n   type is altered (CASSANDRA-9187)\n * Add generate-idea-files target to build.xml (CASSANDRA-9123)\n * Allow takeColumnFamilySnapshot to take a list of tables (CASSANDRA-8348)\n * Limit major sstable operations to their canonical representation (CASSANDRA-8669)\n * cqlsh: Add tests for INSERT and UPDATE tab completion (CASSANDRA-9125)\n * cqlsh: quote column names when needed in COPY FROM inserts (CASSANDRA-9080)\n * Do not load read meter for offline operations (CASSANDRA-9082)\n * cqlsh: Make CompositeType data readable (CASSANDRA-8919)\n * cqlsh: Fix display of triggers (CASSANDRA-9081)\n * Fix NullPointerException when deleting or setting an element by index on\n   a null list collection (CASSANDRA-9077)\n * Buffer bloom filter serialization (CASSANDRA-9066)\n * Fix anti-compaction target bloom filter size (CASSANDRA-9060)\n * Make FROZEN and TUPLE unreserved keywords in CQL (CASSANDRA-9047)\n * Prevent AssertionError from SizeEstimatesRecorder (CASSANDRA-9034)\n * Avoid overwriting index summaries for sstables with an older format that\n   does not support downsampling; rebuild summaries on startup when this\n   is detected (CASSANDRA-8993)\n * Fix potential data loss in CompressedSequentialWriter (CASSANDRA-8949)\n * Make PasswordAuthenticator number of hashing rounds configurable (CASSANDRA-8085)\n * Fix AssertionError when binding nested collections in DELETE (CASSANDRA-8900)\n * Check for overlap with non-early sstables in LCS (CASSANDRA-8739)\n * Only calculate max purgable timestamp if we have to (CASSANDRA-8914)\n * (cqlsh) Greatly improve performance of COPY FROM (CASSANDRA-8225)\n * IndexSummary effectiveIndexInterval is now a guideline, not a rule (CASSANDRA-8993)\n * Use correct bounds for page cache eviction of compressed files (CASSANDRA-8746)\n * SSTableScanner enforces its bounds (CASSANDRA-8946)\n * Cleanup cell equality (CASSANDRA-8947)\n * Introduce intra-cluster message coalescing (CASSANDRA-8692)\n * DatabaseDescriptor throws NPE when rpc_interface is used (CASSANDRA-8839)\n * Don't check if an sstable is live for offline compactions (CASSANDRA-8841)\n * Don't set clientMode in SSTableLoader (CASSANDRA-8238)\n * Fix SSTableRewriter with disabled early open (CASSANDRA-8535)\n * Fix cassandra-stress so it respects the CL passed in user mode (CASSANDRA-8948)\n * Fix rare NPE in ColumnDefinition#hasIndexOption() (CASSANDRA-8786)\n * cassandra-stress reports per-operation statistics, plus misc (CASSANDRA-8769)\n * Add SimpleDate (cql date) and Time (cql time) types (CASSANDRA-7523)\n * Use long for key count in cfstats (CASSANDRA-8913)\n * Make SSTableRewriter.abort() more robust to failure (CASSANDRA-8832)\n * Remove cold_reads_to_omit from STCS (CASSANDRA-8860)\n * Make EstimatedHistogram#percentile() use ceil instead of floor (CASSANDRA-8883)\n * Fix top partitions reporting wrong cardinality (CASSANDRA-8834)\n * Fix rare NPE in KeyCacheSerializer (CASSANDRA-8067)\n * Pick sstables for validation as late as possible inc repairs (CASSANDRA-8366)\n * Fix commitlog getPendingTasks to not increment (CASSANDRA-8862)\n * Fix parallelism adjustment in range and secondary index queries\n   when the first fetch does not satisfy the limit (CASSANDRA-8856)\n * Check if the filtered sstables is non-empty in STCS (CASSANDRA-8843)\n * Upgrade java-driver used for cassandra-stress (CASSANDRA-8842)\n * Fix CommitLog.forceRecycleAllSegments() memory access error (CASSANDRA-8812)\n * Improve assertions in Memory (CASSANDRA-8792)\n * Fix SSTableRewriter cleanup (CASSANDRA-8802)\n * Introduce SafeMemory for CompressionMetadata.Writer (CASSANDRA-8758)\n * 'nodetool info' prints exception against older node (CASSANDRA-8796)\n * Ensure SSTableReader.last corresponds exactly with the file end (CASSANDRA-8750)\n * Make SSTableWriter.openEarly more robust and obvious (CASSANDRA-8747)\n * Enforce SSTableReader.first/last (CASSANDRA-8744)\n * Cleanup SegmentedFile API (CASSANDRA-8749)\n * Avoid overlap with early compaction replacement (CASSANDRA-8683)\n * Safer Resource Management++ (CASSANDRA-8707)\n * Write partition size estimates into a system table (CASSANDRA-7688)\n * cqlsh: Fix keys() and full() collection indexes in DESCRIBE output\n   (CASSANDRA-8154)\n * Show progress of streaming in nodetool netstats (CASSANDRA-8886)\n * IndexSummaryBuilder utilises offheap memory, and shares data between\n   each IndexSummary opened from it (CASSANDRA-8757)\n * markCompacting only succeeds if the exact SSTableReader instances being\n   marked are in the live set (CASSANDRA-8689)\n * cassandra-stress support for varint (CASSANDRA-8882)\n * Fix Adler32 digest for compressed sstables (CASSANDRA-8778)\n * Add nodetool statushandoff/statusbackup (CASSANDRA-8912)\n * Use stdout for progress and stats in sstableloader (CASSANDRA-8982)\n * Correctly identify 2i datadir from older versions (CASSANDRA-9116)\nMerged from 2.0:\n * Ignore gossip SYNs after shutdown (CASSANDRA-9238)\n * Avoid overflow when calculating max sstable size in LCS (CASSANDRA-9235)\n * Make sstable blacklisting work with compression (CASSANDRA-9138)\n * Do not attempt to rebuild indexes if no index accepts any column (CASSANDRA-9196)\n * Don't initiate snitch reconnection for dead states (CASSANDRA-7292)\n * Fix ArrayIndexOutOfBoundsException in CQLSSTableWriter (CASSANDRA-8978)\n * Add shutdown gossip state to prevent timeouts during rolling restarts (CASSANDRA-8336)\n * Fix running with java.net.preferIPv6Addresses=true (CASSANDRA-9137)\n * Fix failed bootstrap/replace attempts being persisted in system.peers (CASSANDRA-9180)\n * Flush system.IndexInfo after marking index built (CASSANDRA-9128)\n * Fix updates to min/max_compaction_threshold through cassandra-cli\n   (CASSANDRA-8102)\n * Don't include tmp files when doing offline relevel (CASSANDRA-9088)\n * Use the proper CAS WriteType when finishing a previous round during Paxos\n   preparation (CASSANDRA-8672)\n * Avoid race in cancelling compactions (CASSANDRA-9070)\n * More aggressive check for expired sstables in DTCS (CASSANDRA-8359)\n * Fix ignored index_interval change in ALTER TABLE statements (CASSANDRA-7976)\n * Do more aggressive compaction in old time windows in DTCS (CASSANDRA-8360)\n * java.lang.AssertionError when reading saved cache (CASSANDRA-8740)\n * \"disk full\" when running cleanup (CASSANDRA-9036)\n * Lower logging level from ERROR to DEBUG when a scheduled schema pull\n   cannot be completed due to a node being down (CASSANDRA-9032)\n * Fix MOVED_NODE client event (CASSANDRA-8516)\n * Allow overriding MAX_OUTSTANDING_REPLAY_COUNT (CASSANDRA-7533)\n * Fix malformed JMX ObjectName containing IPv6 addresses (CASSANDRA-9027)\n * (cqlsh) Allow increasing CSV field size limit through\n   cqlshrc config option (CASSANDRA-8934)\n * Stop logging range tombstones when exceeding the threshold\n   (CASSANDRA-8559)\n * Fix NullPointerException when nodetool getendpoints is run\n   against invalid keyspaces or tables (CASSANDRA-8950)\n * Allow specifying the tmp dir (CASSANDRA-7712)\n * Improve compaction estimated tasks estimation (CASSANDRA-8904)\n * Fix duplicate up/down messages sent to native clients (CASSANDRA-7816)\n * Expose commit log archive status via JMX (CASSANDRA-8734)\n * Provide better exceptions for invalid replication strategy parameters\n   (CASSANDRA-8909)\n * Fix regression in mixed single and multi-column relation support for\n   SELECT statements (CASSANDRA-8613)\n * Add ability to limit number of native connections (CASSANDRA-8086)\n * Fix CQLSSTableWriter throwing exception and spawning threads\n   (CASSANDRA-8808)\n * Fix MT mismatch between empty and GC-able data (CASSANDRA-8979)\n * Fix incorrect validation when snapshotting single table (CASSANDRA-8056)\n * Add offline tool to relevel sstables (CASSANDRA-8301)\n * Preserve stream ID for more protocol errors (CASSANDRA-8848)\n * Fix combining token() function with multi-column relations on\n   clustering columns (CASSANDRA-8797)\n * Make CFS.markReferenced() resistant to bad refcounting (CASSANDRA-8829)\n * Fix StreamTransferTask abort/complete bad refcounting (CASSANDRA-8815)\n * Fix AssertionError when querying a DESC clustering ordered\n   table with ASC ordering and paging (CASSANDRA-8767)\n * AssertionError: \"Memory was freed\" when running cleanup (CASSANDRA-8716)\n * Make it possible to set max_sstable_age to fractional days (CASSANDRA-8406)\n * Fix some multi-column relations with indexes on some clustering\n   columns (CASSANDRA-8275)\n * Fix memory leak in SSTableSimple*Writer and SSTableReader.validate()\n   (CASSANDRA-8748)\n * Throw OOM if allocating memory fails to return a valid pointer (CASSANDRA-8726)\n * Fix SSTableSimpleUnsortedWriter ConcurrentModificationException (CASSANDRA-8619)\n * 'nodetool info' prints exception against older node (CASSANDRA-8796)\n * Ensure SSTableSimpleUnsortedWriter.close() terminates if\n   disk writer has crashed (CASSANDRA-8807)\n\n\n2.1.4\n * Bind JMX to localhost unless explicitly configured otherwise (CASSANDRA-9085)\n\n\n2.1.3\n * Fix HSHA/offheap_objects corruption (CASSANDRA-8719)\n * Upgrade libthrift to 0.9.2 (CASSANDRA-8685)\n * Don't use the shared ref in sstableloader (CASSANDRA-8704)\n * Purge internal prepared statements if related tables or\n   keyspaces are dropped (CASSANDRA-8693)\n * (cqlsh) Handle unicode BOM at start of files (CASSANDRA-8638)\n * Stop compactions before exiting offline tools (CASSANDRA-8623)\n * Update tools/stress/README.txt to match current behaviour (CASSANDRA-7933)\n * Fix schema from Thrift conversion with empty metadata (CASSANDRA-8695)\n * Safer Resource Management (CASSANDRA-7705)\n * Make sure we compact highly overlapping cold sstables with\n   STCS (CASSANDRA-8635)\n * rpc_interface and listen_interface generate NPE on startup when specified\n   interface doesn't exist (CASSANDRA-8677)\n * Fix ArrayIndexOutOfBoundsException in nodetool cfhistograms (CASSANDRA-8514)\n * Switch from yammer metrics for nodetool cf/proxy histograms (CASSANDRA-8662)\n * Make sure we don't add tmplink files to the compaction\n   strategy (CASSANDRA-8580)\n * (cqlsh) Handle maps with blob keys (CASSANDRA-8372)\n * (cqlsh) Handle DynamicCompositeType schemas correctly (CASSANDRA-8563)\n * Duplicate rows returned when in clause has repeated values (CASSANDRA-6706)\n * Add tooling to detect hot partitions (CASSANDRA-7974)\n * Fix cassandra-stress user-mode truncation of partition generation (CASSANDRA-8608)\n * Only stream from unrepaired sstables during inc repair (CASSANDRA-8267)\n * Don't allow starting multiple inc repairs on the same sstables (CASSANDRA-8316)\n * Invalidate prepared BATCH statements when related tables\n   or keyspaces are dropped (CASSANDRA-8652)\n * Fix missing results in secondary index queries on collections\n   with ALLOW FILTERING (CASSANDRA-8421)\n * Expose EstimatedHistogram metrics for range slices (CASSANDRA-8627)\n * (cqlsh) Escape clqshrc passwords properly (CASSANDRA-8618)\n * Fix NPE when passing wrong argument in ALTER TABLE statement (CASSANDRA-8355)\n * Pig: Refactor and deprecate CqlStorage (CASSANDRA-8599)\n * Don't reuse the same cleanup strategy for all sstables (CASSANDRA-8537)\n * Fix case-sensitivity of index name on CREATE and DROP INDEX\n   statements (CASSANDRA-8365)\n * Better detection/logging for corruption in compressed sstables (CASSANDRA-8192)\n * Use the correct repairedAt value when closing writer (CASSANDRA-8570)\n * (cqlsh) Handle a schema mismatch being detected on startup (CASSANDRA-8512)\n * Properly calculate expected write size during compaction (CASSANDRA-8532)\n * Invalidate affected prepared statements when a table's columns\n   are altered (CASSANDRA-7910)\n * Stress - user defined writes should populate sequentally (CASSANDRA-8524)\n * Fix regression in SSTableRewriter causing some rows to become unreadable\n   during compaction (CASSANDRA-8429)\n * Run major compactions for repaired/unrepaired in parallel (CASSANDRA-8510)\n * (cqlsh) Fix compression options in DESCRIBE TABLE output when compression\n   is disabled (CASSANDRA-8288)\n * (cqlsh) Fix DESCRIBE output after keyspaces are altered (CASSANDRA-7623)\n * Make sure we set lastCompactedKey correctly (CASSANDRA-8463)\n * (cqlsh) Fix output of CONSISTENCY command (CASSANDRA-8507)\n * (cqlsh) Fixed the handling of LIST statements (CASSANDRA-8370)\n * Make sstablescrub check leveled manifest again (CASSANDRA-8432)\n * Check first/last keys in sstable when giving out positions (CASSANDRA-8458)\n * Disable mmap on Windows (CASSANDRA-6993)\n * Add missing ConsistencyLevels to cassandra-stress (CASSANDRA-8253)\n * Add auth support to cassandra-stress (CASSANDRA-7985)\n * Fix ArrayIndexOutOfBoundsException when generating error message\n   for some CQL syntax errors (CASSANDRA-8455)\n * Scale memtable slab allocation logarithmically (CASSANDRA-7882)\n * cassandra-stress simultaneous inserts over same seed (CASSANDRA-7964)\n * Reduce cassandra-stress sampling memory requirements (CASSANDRA-7926)\n * Ensure memtable flush cannot expire commit log entries from its future (CASSANDRA-8383)\n * Make read \"defrag\" async to reclaim memtables (CASSANDRA-8459)\n * Remove tmplink files for offline compactions (CASSANDRA-8321)\n * Reduce maxHintsInProgress (CASSANDRA-8415)\n * BTree updates may call provided update function twice (CASSANDRA-8018)\n * Release sstable references after anticompaction (CASSANDRA-8386)\n * Handle abort() in SSTableRewriter properly (CASSANDRA-8320)\n * Centralize shared executors (CASSANDRA-8055)\n * Fix filtering for CONTAINS (KEY) relations on frozen collection\n   clustering columns when the query is restricted to a single\n   partition (CASSANDRA-8203)\n * Do more aggressive entire-sstable TTL expiry checks (CASSANDRA-8243)\n * Add more log info if readMeter is null (CASSANDRA-8238)\n * add check of the system wall clock time at startup (CASSANDRA-8305)\n * Support for frozen collections (CASSANDRA-7859)\n * Fix overflow on histogram computation (CASSANDRA-8028)\n * Have paxos reuse the timestamp generation of normal queries (CASSANDRA-7801)\n * Fix incremental repair not remove parent session on remote (CASSANDRA-8291)\n * Improve JBOD disk utilization (CASSANDRA-7386)\n * Log failed host when preparing incremental repair (CASSANDRA-8228)\n * Force config client mode in CQLSSTableWriter (CASSANDRA-8281)\n * Fix sstableupgrade throws exception (CASSANDRA-8688)\n * Fix hang when repairing empty keyspace (CASSANDRA-8694)\nMerged from 2.0:\n * Fix IllegalArgumentException in dynamic snitch (CASSANDRA-8448)\n * Add support for UPDATE ... IF EXISTS (CASSANDRA-8610)\n * Fix reversal of list prepends (CASSANDRA-8733)\n * Prevent non-zero default_time_to_live on tables with counters\n   (CASSANDRA-8678)\n * Fix SSTableSimpleUnsortedWriter ConcurrentModificationException\n   (CASSANDRA-8619)\n * Round up time deltas lower than 1ms in BulkLoader (CASSANDRA-8645)\n * Add batch remove iterator to ABSC (CASSANDRA-8414, 8666)\n * Round up time deltas lower than 1ms in BulkLoader (CASSANDRA-8645)\n * Fix isClientMode check in Keyspace (CASSANDRA-8687)\n * Use more efficient slice size for querying internal secondary\n   index tables (CASSANDRA-8550)\n * Fix potentially returning deleted rows with range tombstone (CASSANDRA-8558)\n * Check for available disk space before starting a compaction (CASSANDRA-8562)\n * Fix DISTINCT queries with LIMITs or paging when some partitions\n   contain only tombstones (CASSANDRA-8490)\n * Introduce background cache refreshing to permissions cache\n   (CASSANDRA-8194)\n * Fix race condition in StreamTransferTask that could lead to\n   infinite loops and premature sstable deletion (CASSANDRA-7704)\n * Add an extra version check to MigrationTask (CASSANDRA-8462)\n * Ensure SSTableWriter cleans up properly after failure (CASSANDRA-8499)\n * Increase bf true positive count on key cache hit (CASSANDRA-8525)\n * Move MeteredFlusher to its own thread (CASSANDRA-8485)\n * Fix non-distinct results in DISTNCT queries on static columns when\n   paging is enabled (CASSANDRA-8087)\n * Move all hints related tasks to hints internal executor (CASSANDRA-8285)\n * Fix paging for multi-partition IN queries (CASSANDRA-8408)\n * Fix MOVED_NODE topology event never being emitted when a node\n   moves its token (CASSANDRA-8373)\n * Fix validation of indexes in COMPACT tables (CASSANDRA-8156)\n * Avoid StackOverflowError when a large list of IN values\n   is used for a clustering column (CASSANDRA-8410)\n * Fix NPE when writetime() or ttl() calls are wrapped by\n   another function call (CASSANDRA-8451)\n * Fix NPE after dropping a keyspace (CASSANDRA-8332)\n * Fix error message on read repair timeouts (CASSANDRA-7947)\n * Default DTCS base_time_seconds changed to 60 (CASSANDRA-8417)\n * Refuse Paxos operation with more than one pending endpoint (CASSANDRA-8346, 8640)\n * Throw correct exception when trying to bind a keyspace or table\n   name (CASSANDRA-6952)\n * Make HHOM.compact synchronized (CASSANDRA-8416)\n * cancel latency-sampling task when CF is dropped (CASSANDRA-8401)\n * don't block SocketThread for MessagingService (CASSANDRA-8188)\n * Increase quarantine delay on replacement (CASSANDRA-8260)\n * Expose off-heap memory usage stats (CASSANDRA-7897)\n * Ignore Paxos commits for truncated tables (CASSANDRA-7538)\n * Validate size of indexed column values (CASSANDRA-8280)\n * Make LCS split compaction results over all data directories (CASSANDRA-8329)\n * Fix some failing queries that use multi-column relations\n   on COMPACT STORAGE tables (CASSANDRA-8264)\n * Fix InvalidRequestException with ORDER BY (CASSANDRA-8286)\n * Disable SSLv3 for POODLE (CASSANDRA-8265)\n * Fix millisecond timestamps in Tracing (CASSANDRA-8297)\n * Include keyspace name in error message when there are insufficient\n   live nodes to stream from (CASSANDRA-8221)\n * Avoid overlap in L1 when L0 contains many nonoverlapping\n   sstables (CASSANDRA-8211)\n * Improve PropertyFileSnitch logging (CASSANDRA-8183)\n * Add DC-aware sequential repair (CASSANDRA-8193)\n * Use live sstables in snapshot repair if possible (CASSANDRA-8312)\n * Fix hints serialized size calculation (CASSANDRA-8587)\n\n\n2.1.2\n * (cqlsh) parse_for_table_meta errors out on queries with undefined\n   grammars (CASSANDRA-8262)\n * (cqlsh) Fix SELECT ... TOKEN() function broken in C* 2.1.1 (CASSANDRA-8258)\n * Fix Cassandra crash when running on JDK8 update 40 (CASSANDRA-8209)\n * Optimize partitioner tokens (CASSANDRA-8230)\n * Improve compaction of repaired/unrepaired sstables (CASSANDRA-8004)\n * Make cache serializers pluggable (CASSANDRA-8096)\n * Fix issues with CONTAINS (KEY) queries on secondary indexes\n   (CASSANDRA-8147)\n * Fix read-rate tracking of sstables for some queries (CASSANDRA-8239)\n * Fix default timestamp in QueryOptions (CASSANDRA-8246)\n * Set socket timeout when reading remote version (CASSANDRA-8188)\n * Refactor how we track live size (CASSANDRA-7852)\n * Make sure unfinished compaction files are removed (CASSANDRA-8124)\n * Fix shutdown when run as Windows service (CASSANDRA-8136)\n * Fix DESCRIBE TABLE with custom indexes (CASSANDRA-8031)\n * Fix race in RecoveryManagerTest (CASSANDRA-8176)\n * Avoid IllegalArgumentException while sorting sstables in\n   IndexSummaryManager (CASSANDRA-8182)\n * Shutdown JVM on file descriptor exhaustion (CASSANDRA-7579)\n * Add 'die' policy for commit log and disk failure (CASSANDRA-7927)\n * Fix installing as service on Windows (CASSANDRA-8115)\n * Fix CREATE TABLE for CQL2 (CASSANDRA-8144)\n * Avoid boxing in ColumnStats min/max trackers (CASSANDRA-8109)\nMerged from 2.0:\n * Correctly handle non-text column names in cql3 (CASSANDRA-8178)\n * Fix deletion for indexes on primary key columns (CASSANDRA-8206)\n * Add 'nodetool statusgossip' (CASSANDRA-8125)\n * Improve client notification that nodes are ready for requests (CASSANDRA-7510)\n * Handle negative timestamp in writetime method (CASSANDRA-8139)\n * Pig: Remove errant LIMIT clause in CqlNativeStorage (CASSANDRA-8166)\n * Throw ConfigurationException when hsha is used with the default\n   rpc_max_threads setting of 'unlimited' (CASSANDRA-8116)\n * Allow concurrent writing of the same table in the same JVM using\n   CQLSSTableWriter (CASSANDRA-7463)\n * Fix totalDiskSpaceUsed calculation (CASSANDRA-8205)\n\n\n2.1.1\n * Fix spin loop in AtomicSortedColumns (CASSANDRA-7546)\n * Dont notify when replacing tmplink files (CASSANDRA-8157)\n * Fix validation with multiple CONTAINS clause (CASSANDRA-8131)\n * Fix validation of collections in TriggerExecutor (CASSANDRA-8146)\n * Fix IllegalArgumentException when a list of IN values containing tuples\n   is passed as a single arg to a prepared statement with the v1 or v2\n   protocol (CASSANDRA-8062)\n * Fix ClassCastException in DISTINCT query on static columns with\n   query paging (CASSANDRA-8108)\n * Fix NPE on null nested UDT inside a set (CASSANDRA-8105)\n * Fix exception when querying secondary index on set items or map keys\n   when some clustering columns are specified (CASSANDRA-8073)\n * Send proper error response when there is an error during native\n   protocol message decode (CASSANDRA-8118)\n * Gossip should ignore generation numbers too far in the future (CASSANDRA-8113)\n * Fix NPE when creating a table with frozen sets, lists (CASSANDRA-8104)\n * Fix high memory use due to tracking reads on incrementally opened sstable\n   readers (CASSANDRA-8066)\n * Fix EXECUTE request with skipMetadata=false returning no metadata\n   (CASSANDRA-8054)\n * Allow concurrent use of CQLBulkOutputFormat (CASSANDRA-7776)\n * Shutdown JVM on OOM (CASSANDRA-7507)\n * Upgrade netty version and enable epoll event loop (CASSANDRA-7761)\n * Don't duplicate sstables smaller than split size when using\n   the sstablesplitter tool (CASSANDRA-7616)\n * Avoid re-parsing already prepared statements (CASSANDRA-7923)\n * Fix some Thrift slice deletions and updates of COMPACT STORAGE\n   tables with some clustering columns omitted (CASSANDRA-7990)\n * Fix filtering for CONTAINS on sets (CASSANDRA-8033)\n * Properly track added size (CASSANDRA-7239)\n * Allow compilation in java 8 (CASSANDRA-7208)\n * Fix Assertion error on RangeTombstoneList diff (CASSANDRA-8013)\n * Release references to overlapping sstables during compaction (CASSANDRA-7819)\n * Send notification when opening compaction results early (CASSANDRA-8034)\n * Make native server start block until properly bound (CASSANDRA-7885)\n * (cqlsh) Fix IPv6 support (CASSANDRA-7988)\n * Ignore fat clients when checking for endpoint collision (CASSANDRA-7939)\n * Make sstablerepairedset take a list of files (CASSANDRA-7995)\n * (cqlsh) Tab completeion for indexes on map keys (CASSANDRA-7972)\n * (cqlsh) Fix UDT field selection in select clause (CASSANDRA-7891)\n * Fix resource leak in event of corrupt sstable\n * (cqlsh) Add command line option for cqlshrc file path (CASSANDRA-7131)\n * Provide visibility into prepared statements churn (CASSANDRA-7921, CASSANDRA-7930)\n * Invalidate prepared statements when their keyspace or table is\n   dropped (CASSANDRA-7566)\n * cassandra-stress: fix support for NetworkTopologyStrategy (CASSANDRA-7945)\n * Fix saving caches when a table is dropped (CASSANDRA-7784)\n * Add better error checking of new stress profile (CASSANDRA-7716)\n * Use ThreadLocalRandom and remove FBUtilities.threadLocalRandom (CASSANDRA-7934)\n * Prevent operator mistakes due to simultaneous bootstrap (CASSANDRA-7069)\n * cassandra-stress supports whitelist mode for node config (CASSANDRA-7658)\n * GCInspector more closely tracks GC; cassandra-stress and nodetool report it (CASSANDRA-7916)\n * nodetool won't output bogus ownership info without a keyspace (CASSANDRA-7173)\n * Add human readable option to nodetool commands (CASSANDRA-5433)\n * Don't try to set repairedAt on old sstables (CASSANDRA-7913)\n * Add metrics for tracking PreparedStatement use (CASSANDRA-7719)\n * (cqlsh) tab-completion for triggers (CASSANDRA-7824)\n * (cqlsh) Support for query paging (CASSANDRA-7514)\n * (cqlsh) Show progress of COPY operations (CASSANDRA-7789)\n * Add syntax to remove multiple elements from a map (CASSANDRA-6599)\n * Support non-equals conditions in lightweight transactions (CASSANDRA-6839)\n * Add IF [NOT] EXISTS to create/drop triggers (CASSANDRA-7606)\n * (cqlsh) Display the current logged-in user (CASSANDRA-7785)\n * (cqlsh) Don't ignore CTRL-C during COPY FROM execution (CASSANDRA-7815)\n * (cqlsh) Order UDTs according to cross-type dependencies in DESCRIBE\n   output (CASSANDRA-7659)\n * (cqlsh) Fix handling of CAS statement results (CASSANDRA-7671)\n * (cqlsh) COPY TO/FROM improvements (CASSANDRA-7405)\n * Support list index operations with conditions (CASSANDRA-7499)\n * Add max live/tombstoned cells to nodetool cfstats output (CASSANDRA-7731)\n * Validate IPv6 wildcard addresses properly (CASSANDRA-7680)\n * (cqlsh) Error when tracing query (CASSANDRA-7613)\n * Avoid IOOBE when building SyntaxError message snippet (CASSANDRA-7569)\n * SSTableExport uses correct validator to create string representation of partition\n   keys (CASSANDRA-7498)\n * Avoid NPEs when receiving type changes for an unknown keyspace (CASSANDRA-7689)\n * Add support for custom 2i validation (CASSANDRA-7575)\n * Pig support for hadoop CqlInputFormat (CASSANDRA-6454)\n * Add duration mode to cassandra-stress (CASSANDRA-7468)\n * Add listen_interface and rpc_interface options (CASSANDRA-7417)\n * Improve schema merge performance (CASSANDRA-7444)\n * Adjust MT depth based on # of partition validating (CASSANDRA-5263)\n * Optimise NativeCell comparisons (CASSANDRA-6755)\n * Configurable client timeout for cqlsh (CASSANDRA-7516)\n * Include snippet of CQL query near syntax error in messages (CASSANDRA-7111)\n * Make repair -pr work with -local (CASSANDRA-7450)\n * Fix error in sstableloader with -cph > 1 (CASSANDRA-8007)\n * Fix snapshot repair error on indexed tables (CASSANDRA-8020)\n * Do not exit nodetool repair when receiving JMX NOTIF_LOST (CASSANDRA-7909)\n * Stream to private IP when available (CASSANDRA-8084)\nMerged from 2.0:\n * Reject conditions on DELETE unless full PK is given (CASSANDRA-6430)\n * Properly reject the token function DELETE (CASSANDRA-7747)\n * Force batchlog replay before decommissioning a node (CASSANDRA-7446)\n * Fix hint replay with many accumulated expired hints (CASSANDRA-6998)\n * Fix duplicate results in DISTINCT queries on static columns with query\n   paging (CASSANDRA-8108)\n * Add DateTieredCompactionStrategy (CASSANDRA-6602)\n * Properly validate ascii and utf8 string literals in CQL queries (CASSANDRA-8101)\n * (cqlsh) Fix autocompletion for alter keyspace (CASSANDRA-8021)\n * Create backup directories for commitlog archiving during startup (CASSANDRA-8111)\n * Reduce totalBlockFor() for LOCAL_* consistency levels (CASSANDRA-8058)\n * Fix merging schemas with re-dropped keyspaces (CASSANDRA-7256)\n * Fix counters in supercolumns during live upgrades from 1.2 (CASSANDRA-7188)\n * Notify DT subscribers when a column family is truncated (CASSANDRA-8088)\n * Add sanity check of $JAVA on startup (CASSANDRA-7676)\n * Schedule fat client schema pull on join (CASSANDRA-7993)\n * Don't reset nodes' versions when closing IncomingTcpConnections\n   (CASSANDRA-7734)\n * Record the real messaging version in all cases in OutboundTcpConnection\n   (CASSANDRA-8057)\n * SSL does not work in cassandra-cli (CASSANDRA-7899)\n * Fix potential exception when using ReversedType in DynamicCompositeType\n   (CASSANDRA-7898)\n * Better validation of collection values (CASSANDRA-7833)\n * Track min/max timestamps correctly (CASSANDRA-7969)\n * Fix possible overflow while sorting CL segments for replay (CASSANDRA-7992)\n * Increase nodetool Xmx (CASSANDRA-7956)\n * Archive any commitlog segments present at startup (CASSANDRA-6904)\n * CrcCheckChance should adjust based on live CFMetadata not\n   sstable metadata (CASSANDRA-7978)\n * token() should only accept columns in the partitioning\n   key order (CASSANDRA-6075)\n * Add method to invalidate permission cache via JMX (CASSANDRA-7977)\n * Allow propagating multiple gossip states atomically (CASSANDRA-6125)\n * Log exceptions related to unclean native protocol client disconnects\n   at DEBUG or INFO (CASSANDRA-7849)\n * Allow permissions cache to be set via JMX (CASSANDRA-7698)\n * Include schema_triggers CF in readable system resources (CASSANDRA-7967)\n * Fix RowIndexEntry to report correct serializedSize (CASSANDRA-7948)\n * Make CQLSSTableWriter sync within partitions (CASSANDRA-7360)\n * Potentially use non-local replicas in CqlConfigHelper (CASSANDRA-7906)\n * Explicitly disallow mixing multi-column and single-column\n   relations on clustering columns (CASSANDRA-7711)\n * Better error message when condition is set on PK column (CASSANDRA-7804)\n * Don't send schema change responses and events for no-op DDL\n   statements (CASSANDRA-7600)\n * (Hadoop) fix cluster initialisation for a split fetching (CASSANDRA-7774)\n * Throw InvalidRequestException when queries contain relations on entire\n   collection columns (CASSANDRA-7506)\n * (cqlsh) enable CTRL-R history search with libedit (CASSANDRA-7577)\n * (Hadoop) allow ACFRW to limit nodes to local DC (CASSANDRA-7252)\n * (cqlsh) cqlsh should automatically disable tracing when selecting\n   from system_traces (CASSANDRA-7641)\n * (Hadoop) Add CqlOutputFormat (CASSANDRA-6927)\n * Don't depend on cassandra config for nodetool ring (CASSANDRA-7508)\n * (cqlsh) Fix failing cqlsh formatting tests (CASSANDRA-7703)\n * Fix IncompatibleClassChangeError from hadoop2 (CASSANDRA-7229)\n * Add 'nodetool sethintedhandoffthrottlekb' (CASSANDRA-7635)\n * (cqlsh) Add tab-completion for CREATE/DROP USER IF [NOT] EXISTS (CASSANDRA-7611)\n * Catch errors when the JVM pulls the rug out from GCInspector (CASSANDRA-5345)\n * cqlsh fails when version number parts are not int (CASSANDRA-7524)\n * Fix NPE when table dropped during streaming (CASSANDRA-7946)\n * Fix wrong progress when streaming uncompressed (CASSANDRA-7878)\n * Fix possible infinite loop in creating repair range (CASSANDRA-7983)\n * Fix unit in nodetool for streaming throughput (CASSANDRA-7375)\nMerged from 1.2:\n * Don't index tombstones (CASSANDRA-7828)\n * Improve PasswordAuthenticator default super user setup (CASSANDRA-7788)\n\n\n2.1.0\n * (cqlsh) Removed \"ALTER TYPE <name> RENAME TO <name>\" from tab-completion\n   (CASSANDRA-7895)\n * Fixed IllegalStateException in anticompaction (CASSANDRA-7892)\n * cqlsh: DESCRIBE support for frozen UDTs, tuples (CASSANDRA-7863)\n * Avoid exposing internal classes over JMX (CASSANDRA-7879)\n * Add null check for keys when freezing collection (CASSANDRA-7869)\n * Improve stress workload realism (CASSANDRA-7519)\nMerged from 2.0:\n * Configure system.paxos with LeveledCompactionStrategy (CASSANDRA-7753)\n * Fix ALTER clustering column type from DateType to TimestampType when\n   using DESC clustering order (CASSANRDA-7797)\n * Throw EOFException if we run out of chunks in compressed datafile\n   (CASSANDRA-7664)\n * Fix PRSI handling of CQL3 row markers for row cleanup (CASSANDRA-7787)\n * Fix dropping collection when it's the last regular column (CASSANDRA-7744)\n * Make StreamReceiveTask thread safe and gc friendly (CASSANDRA-7795)\n * Validate empty cell names from counter updates (CASSANDRA-7798)\nMerged from 1.2:\n * Don't allow compacted sstables to be marked as compacting (CASSANDRA-7145)\n * Track expired tombstones (CASSANDRA-7810)\n\n\n2.1.0-rc7\n * Add frozen keyword and require UDT to be frozen (CASSANDRA-7857)\n * Track added sstable size correctly (CASSANDRA-7239)\n * (cqlsh) Fix case insensitivity (CASSANDRA-7834)\n * Fix failure to stream ranges when moving (CASSANDRA-7836)\n * Correctly remove tmplink files (CASSANDRA-7803)\n * (cqlsh) Fix column name formatting for functions, CAS operations,\n   and UDT field selections (CASSANDRA-7806)\n * (cqlsh) Fix COPY FROM handling of null/empty primary key\n   values (CASSANDRA-7792)\n * Fix ordering of static cells (CASSANDRA-7763)\nMerged from 2.0:\n * Forbid re-adding dropped counter columns (CASSANDRA-7831)\n * Fix CFMetaData#isThriftCompatible() for PK-only tables (CASSANDRA-7832)\n * Always reject inequality on the partition key without token()\n   (CASSANDRA-7722)\n * Always send Paxos commit to all replicas (CASSANDRA-7479)\n * Make disruptor_thrift_server invocation pool configurable (CASSANDRA-7594)\n * Make repair no-op when RF=1 (CASSANDRA-7864)\n\n\n2.1.0-rc6\n * Fix OOM issue from netty caching over time (CASSANDRA-7743)\n * json2sstable couldn't import JSON for CQL table (CASSANDRA-7477)\n * Invalidate all caches on table drop (CASSANDRA-7561)\n * Skip strict endpoint selection for ranges if RF == nodes (CASSANRA-7765)\n * Fix Thrift range filtering without 2ary index lookups (CASSANDRA-7741)\n * Add tracing entries about concurrent range requests (CASSANDRA-7599)\n * (cqlsh) Fix DESCRIBE for NTS keyspaces (CASSANDRA-7729)\n * Remove netty buffer ref-counting (CASSANDRA-7735)\n * Pass mutated cf to index updater for use by PRSI (CASSANDRA-7742)\n * Include stress yaml example in release and deb (CASSANDRA-7717)\n * workaround for netty issue causing corrupted data off the wire (CASSANDRA-7695)\n * cqlsh DESC CLUSTER fails retrieving ring information (CASSANDRA-7687)\n * Fix binding null values inside UDT (CASSANDRA-7685)\n * Fix UDT field selection with empty fields (CASSANDRA-7670)\n * Bogus deserialization of static cells from sstable (CASSANDRA-7684)\n * Fix NPE on compaction leftover cleanup for dropped table (CASSANDRA-7770)\nMerged from 2.0:\n * Fix race condition in StreamTransferTask that could lead to\n   infinite loops and premature sstable deletion (CASSANDRA-7704)\n * (cqlsh) Wait up to 10 sec for a tracing session (CASSANDRA-7222)\n * Fix NPE in FileCacheService.sizeInBytes (CASSANDRA-7756)\n * Remove duplicates from StorageService.getJoiningNodes (CASSANDRA-7478)\n * Clone token map outside of hot gossip loops (CASSANDRA-7758)\n * Fix MS expiring map timeout for Paxos messages (CASSANDRA-7752)\n * Do not flush on truncate if durable_writes is false (CASSANDRA-7750)\n * Give CRR a default input_cql Statement (CASSANDRA-7226)\n * Better error message when adding a collection with the same name\n   than a previously dropped one (CASSANDRA-6276)\n * Fix validation when adding static columns (CASSANDRA-7730)\n * (Thrift) fix range deletion of supercolumns (CASSANDRA-7733)\n * Fix potential AssertionError in RangeTombstoneList (CASSANDRA-7700)\n * Validate arguments of blobAs* functions (CASSANDRA-7707)\n * Fix potential AssertionError with 2ndary indexes (CASSANDRA-6612)\n * Avoid logging CompactionInterrupted at ERROR (CASSANDRA-7694)\n * Minor leak in sstable2jon (CASSANDRA-7709)\n * Add cassandra.auto_bootstrap system property (CASSANDRA-7650)\n * Update java driver (for hadoop) (CASSANDRA-7618)\n * Remove CqlPagingRecordReader/CqlPagingInputFormat (CASSANDRA-7570)\n * Support connecting to ipv6 jmx with nodetool (CASSANDRA-7669)\n\n\n2.1.0-rc5\n * Reject counters inside user types (CASSANDRA-7672)\n * Switch to notification-based GCInspector (CASSANDRA-7638)\n * (cqlsh) Handle nulls in UDTs and tuples correctly (CASSANDRA-7656)\n * Don't use strict consistency when replacing (CASSANDRA-7568)\n * Fix min/max cell name collection on 2.0 SSTables with range\n   tombstones (CASSANDRA-7593)\n * Tolerate min/max cell names of different lengths (CASSANDRA-7651)\n * Filter cached results correctly (CASSANDRA-7636)\n * Fix tracing on the new SEPExecutor (CASSANDRA-7644)\n * Remove shuffle and taketoken (CASSANDRA-7601)\n * Clean up Windows batch scripts (CASSANDRA-7619)\n * Fix native protocol drop user type notification (CASSANDRA-7571)\n * Give read access to system.schema_usertypes to all authenticated users\n   (CASSANDRA-7578)\n * (cqlsh) Fix cqlsh display when zero rows are returned (CASSANDRA-7580)\n * Get java version correctly when JAVA_TOOL_OPTIONS is set (CASSANDRA-7572)\n * Fix NPE when dropping index from non-existent keyspace, AssertionError when\n   dropping non-existent index with IF EXISTS (CASSANDRA-7590)\n * Fix sstablelevelresetter hang (CASSANDRA-7614)\n * (cqlsh) Fix deserialization of blobs (CASSANDRA-7603)\n * Use \"keyspace updated\" schema change message for UDT changes in v1 and\n   v2 protocols (CASSANDRA-7617)\n * Fix tracing of range slices and secondary index lookups that are local\n   to the coordinator (CASSANDRA-7599)\n * Set -Dcassandra.storagedir for all tool shell scripts (CASSANDRA-7587)\n * Don't swap max/min col names when mutating sstable metadata (CASSANDRA-7596)\n * (cqlsh) Correctly handle paged result sets (CASSANDRA-7625)\n * (cqlsh) Improve waiting for a trace to complete (CASSANDRA-7626)\n * Fix tracing of concurrent range slices and 2ary index queries (CASSANDRA-7626)\n * Fix scrub against collection type (CASSANDRA-7665)\nMerged from 2.0:\n * Set gc_grace_seconds to seven days for system schema tables (CASSANDRA-7668)\n * SimpleSeedProvider no longer caches seeds forever (CASSANDRA-7663)\n * Always flush on truncate (CASSANDRA-7511)\n * Fix ReversedType(DateType) mapping to native protocol (CASSANDRA-7576)\n * Always merge ranges owned by a single node (CASSANDRA-6930)\n * Track max/min timestamps for range tombstones (CASSANDRA-7647)\n * Fix NPE when listing saved caches dir (CASSANDRA-7632)\n\n\n2.1.0-rc4\n * Fix word count hadoop example (CASSANDRA-7200)\n * Updated memtable_cleanup_threshold and memtable_flush_writers defaults\n   (CASSANDRA-7551)\n * (Windows) fix startup when WMI memory query fails (CASSANDRA-7505)\n * Anti-compaction proceeds if any part of the repair failed (CASSANDRA-7521)\n * Add missing table name to DROP INDEX responses and notifications (CASSANDRA-7539)\n * Bump CQL version to 3.2.0 and update CQL documentation (CASSANDRA-7527)\n * Fix configuration error message when running nodetool ring (CASSANDRA-7508)\n * Support conditional updates, tuple type, and the v3 protocol in cqlsh (CASSANDRA-7509)\n * Handle queries on multiple secondary index types (CASSANDRA-7525)\n * Fix cqlsh authentication with v3 native protocol (CASSANDRA-7564)\n * Fix NPE when unknown prepared statement ID is used (CASSANDRA-7454)\nMerged from 2.0:\n * (Windows) force range-based repair to non-sequential mode (CASSANDRA-7541)\n * Fix range merging when DES scores are zero (CASSANDRA-7535)\n * Warn when SSL certificates have expired (CASSANDRA-7528)\n * Fix error when doing reversed queries with static columns (CASSANDRA-7490)\nMerged from 1.2:\n * Set correct stream ID on responses when non-Exception Throwables\n   are thrown while handling native protocol messages (CASSANDRA-7470)\n\n\n2.1.0-rc3\n * Consider expiry when reconciling otherwise equal cells (CASSANDRA-7403)\n * Introduce CQL support for stress tool (CASSANDRA-6146)\n * Fix ClassCastException processing expired messages (CASSANDRA-7496)\n * Fix prepared marker for collections inside UDT (CASSANDRA-7472)\n * Remove left-over populate_io_cache_on_flush and replicate_on_write\n   uses (CASSANDRA-7493)\n * (Windows) handle spaces in path names (CASSANDRA-7451)\n * Ensure writes have completed after dropping a table, before recycling\n   commit log segments (CASSANDRA-7437)\n * Remove left-over rows_per_partition_to_cache (CASSANDRA-7493)\n * Fix error when CONTAINS is used with a bind marker (CASSANDRA-7502)\n * Properly reject unknown UDT field (CASSANDRA-7484)\nMerged from 2.0:\n * Fix CC#collectTimeOrderedData() tombstone optimisations (CASSANDRA-7394)\n * Support DISTINCT for static columns and fix behaviour when DISTINC is\n   not use (CASSANDRA-7305).\n * Workaround JVM NPE on JMX bind failure (CASSANDRA-7254)\n * Fix race in FileCacheService RemovalListener (CASSANDRA-7278)\n * Fix inconsistent use of consistencyForCommit that allowed LOCAL_QUORUM\n   operations to incorrect become full QUORUM (CASSANDRA-7345)\n * Properly handle unrecognized opcodes and flags (CASSANDRA-7440)\n * (Hadoop) close CqlRecordWriter clients when finished (CASSANDRA-7459)\n * Commit disk failure policy (CASSANDRA-7429)\n * Make sure high level sstables get compacted (CASSANDRA-7414)\n * Fix AssertionError when using empty clustering columns and static columns\n   (CASSANDRA-7455)\n * Add option to disable STCS in L0 (CASSANDRA-6621)\n * Upgrade to snappy-java 1.0.5.2 (CASSANDRA-7476)\n\n\n2.1.0-rc2\n * Fix heap size calculation for CompoundSparseCellName and\n   CompoundSparseCellName.WithCollection (CASSANDRA-7421)\n * Allow counter mutations in UNLOGGED batches (CASSANDRA-7351)\n * Modify reconcile logic to always pick a tombstone over a counter cell\n   (CASSANDRA-7346)\n * Avoid incremental compaction on Windows (CASSANDRA-7365)\n * Fix exception when querying a composite-keyed table with a collection index\n   (CASSANDRA-7372)\n * Use node's host id in place of counter ids (CASSANDRA-7366)\n * Fix error when doing reversed queries with static columns (CASSANDRA-7490)\n * Backport CASSANDRA-6747 (CASSANDRA-7560)\n * Track max/min timestamps for range tombstones (CASSANDRA-7647)\n * Fix NPE when listing saved caches dir (CASSANDRA-7632)\n * Fix sstableloader unable to connect encrypted node (CASSANDRA-7585)\nMerged from 1.2:\n * Clone token map outside of hot gossip loops (CASSANDRA-7758)\n * Add stop method to EmbeddedCassandraService (CASSANDRA-7595)\n * Support connecting to ipv6 jmx with nodetool (CASSANDRA-7669)\n * Set gc_grace_seconds to seven days for system schema tables (CASSANDRA-7668)\n * SimpleSeedProvider no longer caches seeds forever (CASSANDRA-7663)\n * Set correct stream ID on responses when non-Exception Throwables\n   are thrown while handling native protocol messages (CASSANDRA-7470)\n * Fix row size miscalculation in LazilyCompactedRow (CASSANDRA-7543)\n * Fix race in background compaction check (CASSANDRA-7745)\n * Don't clear out range tombstones during compaction (CASSANDRA-7808)\n\n\n2.1.0-rc1\n * Revert flush directory (CASSANDRA-6357)\n * More efficient executor service for fast operations (CASSANDRA-4718)\n * Move less common tools into a new cassandra-tools package (CASSANDRA-7160)\n * Support more concurrent requests in native protocol (CASSANDRA-7231)\n * Add tab-completion to debian nodetool packaging (CASSANDRA-6421)\n * Change concurrent_compactors defaults (CASSANDRA-7139)\n * Add PowerShell Windows launch scripts (CASSANDRA-7001)\n * Make commitlog archive+restore more robust (CASSANDRA-6974)\n * Fix marking commitlogsegments clean (CASSANDRA-6959)\n * Add snapshot \"manifest\" describing files included (CASSANDRA-6326)\n * Parallel streaming for sstableloader (CASSANDRA-3668)\n * Fix bugs in supercolumns handling (CASSANDRA-7138)\n * Fix ClassClassException on composite dense tables (CASSANDRA-7112)\n * Cleanup and optimize collation and slice iterators (CASSANDRA-7107)\n * Upgrade NBHM lib (CASSANDRA-7128)\n * Optimize netty server (CASSANDRA-6861)\n * Fix repair hang when given CF does not exist (CASSANDRA-7189)\n * Allow c* to be shutdown in an embedded mode (CASSANDRA-5635)\n * Add server side batching to native transport (CASSANDRA-5663)\n * Make batchlog replay asynchronous (CASSANDRA-6134)\n * remove unused classes (CASSANDRA-7197)\n * Limit user types to the keyspace they are defined in (CASSANDRA-6643)\n * Add validate method to CollectionType (CASSANDRA-7208)\n * New serialization format for UDT values (CASSANDRA-7209, CASSANDRA-7261)\n * Fix nodetool netstats (CASSANDRA-7270)\n * Fix potential ClassCastException in HintedHandoffManager (CASSANDRA-7284)\n * Use prepared statements internally (CASSANDRA-6975)\n * Fix broken paging state with prepared statement (CASSANDRA-7120)\n * Fix IllegalArgumentException in CqlStorage (CASSANDRA-7287)\n * Allow nulls/non-existant fields in UDT (CASSANDRA-7206)\n * Add Thrift MultiSliceRequest (CASSANDRA-6757, CASSANDRA-7027)\n * Handle overlapping MultiSlices (CASSANDRA-7279)\n * Fix DataOutputTest on Windows (CASSANDRA-7265)\n * Embedded sets in user defined data-types are not updating (CASSANDRA-7267)\n * Add tuple type to CQL/native protocol (CASSANDRA-7248)\n * Fix CqlPagingRecordReader on tables with few rows (CASSANDRA-7322)\nMerged from 2.0:\n * Copy compaction options to make sure they are reloaded (CASSANDRA-7290)\n * Add option to do more aggressive tombstone compactions (CASSANDRA-6563)\n * Don't try to compact already-compacting files in HHOM (CASSANDRA-7288)\n * Always reallocate buffers in HSHA (CASSANDRA-6285)\n * (Hadoop) support authentication in CqlRecordReader (CASSANDRA-7221)\n * (Hadoop) Close java driver Cluster in CQLRR.close (CASSANDRA-7228)\n * Warn when 'USING TIMESTAMP' is used on a CAS BATCH (CASSANDRA-7067)\n * return all cpu values from BackgroundActivityMonitor.readAndCompute (CASSANDRA-7183)\n * Correctly delete scheduled range xfers (CASSANDRA-7143)\n * return all cpu values from BackgroundActivityMonitor.readAndCompute (CASSANDRA-7183)\n * reduce garbage creation in calculatePendingRanges (CASSANDRA-7191)\n * fix c* launch issues on Russian os's due to output of linux 'free' cmd (CASSANDRA-6162)\n * Fix disabling autocompaction (CASSANDRA-7187)\n * Fix potential NumberFormatException when deserializing IntegerType (CASSANDRA-7088)\n * cqlsh can't tab-complete disabling compaction (CASSANDRA-7185)\n * cqlsh: Accept and execute CQL statement(s) from command-line parameter (CASSANDRA-7172)\n * Fix IllegalStateException in CqlPagingRecordReader (CASSANDRA-7198)\n * Fix the InvertedIndex trigger example (CASSANDRA-7211)\n * Add --resolve-ip option to 'nodetool ring' (CASSANDRA-7210)\n * reduce garbage on codec flag deserialization (CASSANDRA-7244)\n * Fix duplicated error messages on directory creation error at startup (CASSANDRA-5818)\n * Proper null handle for IF with map element access (CASSANDRA-7155)\n * Improve compaction visibility (CASSANDRA-7242)\n * Correctly delete scheduled range xfers (CASSANDRA-7143)\n * Make batchlog replica selection rack-aware (CASSANDRA-6551)\n * Fix CFMetaData#getColumnDefinitionFromColumnName() (CASSANDRA-7074)\n * Fix writetime/ttl functions for static columns (CASSANDRA-7081)\n * Suggest CTRL-C or semicolon after three blank lines in cqlsh (CASSANDRA-7142)\n * Fix 2ndary index queries with DESC clustering order (CASSANDRA-6950)\n * Invalid key cache entries on DROP (CASSANDRA-6525)\n * Fix flapping RecoveryManagerTest (CASSANDRA-7084)\n * Add missing iso8601 patterns for date strings (CASSANDRA-6973)\n * Support selecting multiple rows in a partition using IN (CASSANDRA-6875)\n * Add authentication support to shuffle (CASSANDRA-6484)\n * Swap local and global default read repair chances (CASSANDRA-7320)\n * Add conditional CREATE/DROP USER support (CASSANDRA-7264)\n * Cqlsh counts non-empty lines for \"Blank lines\" warning (CASSANDRA-7325)\nMerged from 1.2:\n * Add Cloudstack snitch (CASSANDRA-7147)\n * Update system.peers correctly when relocating tokens (CASSANDRA-7126)\n * Add Google Compute Engine snitch (CASSANDRA-7132)\n * remove duplicate query for local tokens (CASSANDRA-7182)\n * exit CQLSH with error status code if script fails (CASSANDRA-6344)\n * Fix bug with some IN queries missig results (CASSANDRA-7105)\n * Fix availability validation for LOCAL_ONE CL (CASSANDRA-7319)\n * Hint streaming can cause decommission to fail (CASSANDRA-7219)\n\n\n2.1.0-beta2\n * Increase default CL space to 8GB (CASSANDRA-7031)\n * Add range tombstones to read repair digests (CASSANDRA-6863)\n * Fix BTree.clear for large updates (CASSANDRA-6943)\n * Fail write instead of logging a warning when unable to append to CL\n   (CASSANDRA-6764)\n * Eliminate possibility of CL segment appearing twice in active list\n   (CASSANDRA-6557)\n * Apply DONTNEED fadvise to commitlog segments (CASSANDRA-6759)\n * Switch CRC component to Adler and include it for compressed sstables\n   (CASSANDRA-4165)\n * Allow cassandra-stress to set compaction strategy options (CASSANDRA-6451)\n * Add broadcast_rpc_address option to cassandra.yaml (CASSANDRA-5899)\n * Auto reload GossipingPropertyFileSnitch config (CASSANDRA-5897)\n * Fix overflow of memtable_total_space_in_mb (CASSANDRA-6573)\n * Fix ABTC NPE and apply update function correctly (CASSANDRA-6692)\n * Allow nodetool to use a file or prompt for password (CASSANDRA-6660)\n * Fix AIOOBE when concurrently accessing ABSC (CASSANDRA-6742)\n * Fix assertion error in ALTER TYPE RENAME (CASSANDRA-6705)\n * Scrub should not always clear out repaired status (CASSANDRA-5351)\n * Improve handling of range tombstone for wide partitions (CASSANDRA-6446)\n * Fix ClassCastException for compact table with composites (CASSANDRA-6738)\n * Fix potentially repairing with wrong nodes (CASSANDRA-6808)\n * Change caching option syntax (CASSANDRA-6745)\n * Fix stress to do proper counter reads (CASSANDRA-6835)\n * Fix help message for stress counter_write (CASSANDRA-6824)\n * Fix stress smart Thrift client to pick servers correctly (CASSANDRA-6848)\n * Add logging levels (minimal, normal or verbose) to stress tool (CASSANDRA-6849)\n * Fix race condition in Batch CLE (CASSANDRA-6860)\n * Improve cleanup/scrub/upgradesstables failure handling (CASSANDRA-6774)\n * ByteBuffer write() methods for serializing sstables (CASSANDRA-6781)\n * Proper compare function for CollectionType (CASSANDRA-6783)\n * Update native server to Netty 4 (CASSANDRA-6236)\n * Fix off-by-one error in stress (CASSANDRA-6883)\n * Make OpOrder AutoCloseable (CASSANDRA-6901)\n * Remove sync repair JMX interface (CASSANDRA-6900)\n * Add multiple memory allocation options for memtables (CASSANDRA-6689, 6694)\n * Remove adjusted op rate from stress output (CASSANDRA-6921)\n * Add optimized CF.hasColumns() implementations (CASSANDRA-6941)\n * Serialize batchlog mutations with the version of the target node\n   (CASSANDRA-6931)\n * Optimize CounterColumn#reconcile() (CASSANDRA-6953)\n * Properly remove 1.2 sstable support in 2.1 (CASSANDRA-6869)\n * Lock counter cells, not partitions (CASSANDRA-6880)\n * Track presence of legacy counter shards in sstables (CASSANDRA-6888)\n * Ensure safe resource cleanup when replacing sstables (CASSANDRA-6912)\n * Add failure handler to async callback (CASSANDRA-6747)\n * Fix AE when closing SSTable without releasing reference (CASSANDRA-7000)\n * Clean up IndexInfo on keyspace/table drops (CASSANDRA-6924)\n * Only snapshot relative SSTables when sequential repair (CASSANDRA-7024)\n * Require nodetool rebuild_index to specify index names (CASSANDRA-7038)\n * fix cassandra stress errors on reads with native protocol (CASSANDRA-7033)\n * Use OpOrder to guard sstable references for reads (CASSANDRA-6919)\n * Preemptive opening of compaction result (CASSANDRA-6916)\n * Multi-threaded scrub/cleanup/upgradesstables (CASSANDRA-5547)\n * Optimize cellname comparison (CASSANDRA-6934)\n * Native protocol v3 (CASSANDRA-6855)\n * Optimize Cell liveness checks and clean up Cell (CASSANDRA-7119)\n * Support consistent range movements (CASSANDRA-2434)\n * Display min timestamp in sstablemetadata viewer (CASSANDRA-6767)\nMerged from 2.0:\n * Avoid race-prone second \"scrub\" of system keyspace (CASSANDRA-6797)\n * Pool CqlRecordWriter clients by inetaddress rather than Range\n   (CASSANDRA-6665)\n * Fix compaction_history timestamps (CASSANDRA-6784)\n * Compare scores of full replica ordering in DES (CASSANDRA-6683)\n * fix CME in SessionInfo updateProgress affecting netstats (CASSANDRA-6577)\n * Allow repairing between specific replicas (CASSANDRA-6440)\n * Allow per-dc enabling of hints (CASSANDRA-6157)\n * Add compatibility for Hadoop 0.2.x (CASSANDRA-5201)\n * Fix EstimatedHistogram races (CASSANDRA-6682)\n * Failure detector correctly converts initial value to nanos (CASSANDRA-6658)\n * Add nodetool taketoken to relocate vnodes (CASSANDRA-4445)\n * Expose bulk loading progress over JMX (CASSANDRA-4757)\n * Correctly handle null with IF conditions and TTL (CASSANDRA-6623)\n * Account for range/row tombstones in tombstone drop\n   time histogram (CASSANDRA-6522)\n * Stop CommitLogSegment.close() from calling sync() (CASSANDRA-6652)\n * Make commitlog failure handling configurable (CASSANDRA-6364)\n * Avoid overlaps in LCS (CASSANDRA-6688)\n * Improve support for paginating over composites (CASSANDRA-4851)\n * Fix count(*) queries in a mixed cluster (CASSANDRA-6707)\n * Improve repair tasks(snapshot, differencing) concurrency (CASSANDRA-6566)\n * Fix replaying pre-2.0 commit logs (CASSANDRA-6714)\n * Add static columns to CQL3 (CASSANDRA-6561)\n * Optimize single partition batch statements (CASSANDRA-6737)\n * Disallow post-query re-ordering when paging (CASSANDRA-6722)\n * Fix potential paging bug with deleted columns (CASSANDRA-6748)\n * Fix NPE on BulkLoader caused by losing StreamEvent (CASSANDRA-6636)\n * Fix truncating compression metadata (CASSANDRA-6791)\n * Add CMSClassUnloadingEnabled JVM option (CASSANDRA-6541)\n * Catch memtable flush exceptions during shutdown (CASSANDRA-6735)\n * Fix upgradesstables NPE for non-CF-based indexes (CASSANDRA-6645)\n * Fix UPDATE updating PRIMARY KEY columns implicitly (CASSANDRA-6782)\n * Fix IllegalArgumentException when updating from 1.2 with SuperColumns\n   (CASSANDRA-6733)\n * FBUtilities.singleton() should use the CF comparator (CASSANDRA-6778)\n * Fix CQLSStableWriter.addRow(Map<String, Object>) (CASSANDRA-6526)\n * Fix HSHA server introducing corrupt data (CASSANDRA-6285)\n * Fix CAS conditions for COMPACT STORAGE tables (CASSANDRA-6813)\n * Starting threads in OutboundTcpConnectionPool constructor causes race conditions (CASSANDRA-7177)\n * Allow overriding cassandra-rackdc.properties file (CASSANDRA-7072)\n * Set JMX RMI port to 7199 (CASSANDRA-7087)\n * Use LOCAL_QUORUM for data reads at LOCAL_SERIAL (CASSANDRA-6939)\n * Log a warning for large batches (CASSANDRA-6487)\n * Put nodes in hibernate when join_ring is false (CASSANDRA-6961)\n * Avoid early loading of non-system keyspaces before compaction-leftovers\n   cleanup at startup (CASSANDRA-6913)\n * Restrict Windows to parallel repairs (CASSANDRA-6907)\n * (Hadoop) Allow manually specifying start/end tokens in CFIF (CASSANDRA-6436)\n * Fix NPE in MeteredFlusher (CASSANDRA-6820)\n * Fix race processing range scan responses (CASSANDRA-6820)\n * Allow deleting snapshots from dropped keyspaces (CASSANDRA-6821)\n * Add uuid() function (CASSANDRA-6473)\n * Omit tombstones from schema digests (CASSANDRA-6862)\n * Include correct consistencyLevel in LWT timeout (CASSANDRA-6884)\n * Lower chances for losing new SSTables during nodetool refresh and\n   ColumnFamilyStore.loadNewSSTables (CASSANDRA-6514)\n * Add support for DELETE ... IF EXISTS to CQL3 (CASSANDRA-5708)\n * Update hadoop_cql3_word_count example (CASSANDRA-6793)\n * Fix handling of RejectedExecution in sync Thrift server (CASSANDRA-6788)\n * Log more information when exceeding tombstone_warn_threshold (CASSANDRA-6865)\n * Fix truncate to not abort due to unreachable fat clients (CASSANDRA-6864)\n * Fix schema concurrency exceptions (CASSANDRA-6841)\n * Fix leaking validator FH in StreamWriter (CASSANDRA-6832)\n * Fix saving triggers to schema (CASSANDRA-6789)\n * Fix trigger mutations when base mutation list is immutable (CASSANDRA-6790)\n * Fix accounting in FileCacheService to allow re-using RAR (CASSANDRA-6838)\n * Fix static counter columns (CASSANDRA-6827)\n * Restore expiring->deleted (cell) compaction optimization (CASSANDRA-6844)\n * Fix CompactionManager.needsCleanup (CASSANDRA-6845)\n * Correctly compare BooleanType values other than 0 and 1 (CASSANDRA-6779)\n * Read message id as string from earlier versions (CASSANDRA-6840)\n * Properly use the Paxos consistency for (non-protocol) batch (CASSANDRA-6837)\n * Add paranoid disk failure option (CASSANDRA-6646)\n * Improve PerRowSecondaryIndex performance (CASSANDRA-6876)\n * Extend triggers to support CAS updates (CASSANDRA-6882)\n * Static columns with IF NOT EXISTS don't always work as expected (CASSANDRA-6873)\n * Fix paging with SELECT DISTINCT (CASSANDRA-6857)\n * Fix UnsupportedOperationException on CAS timeout (CASSANDRA-6923)\n * Improve MeteredFlusher handling of MF-unaffected column families\n   (CASSANDRA-6867)\n * Add CqlRecordReader using native pagination (CASSANDRA-6311)\n * Add QueryHandler interface (CASSANDRA-6659)\n * Track liveRatio per-memtable, not per-CF (CASSANDRA-6945)\n * Make sure upgradesstables keeps sstable level (CASSANDRA-6958)\n * Fix LIMIT with static columns (CASSANDRA-6956)\n * Fix clash with CQL column name in thrift validation (CASSANDRA-6892)\n * Fix error with super columns in mixed 1.2-2.0 clusters (CASSANDRA-6966)\n * Fix bad skip of sstables on slice query with composite start/finish (CASSANDRA-6825)\n * Fix unintended update with conditional statement (CASSANDRA-6893)\n * Fix map element access in IF (CASSANDRA-6914)\n * Avoid costly range calculations for range queries on system keyspaces\n   (CASSANDRA-6906)\n * Fix SSTable not released if stream session fails (CASSANDRA-6818)\n * Avoid build failure due to ANTLR timeout (CASSANDRA-6991)\n * Queries on compact tables can return more rows that requested (CASSANDRA-7052)\n * USING TIMESTAMP for batches does not work (CASSANDRA-7053)\n * Fix performance regression from CASSANDRA-5614 (CASSANDRA-6949)\n * Ensure that batchlog and hint timeouts do not produce hints (CASSANDRA-7058)\n * Merge groupable mutations in TriggerExecutor#execute() (CASSANDRA-7047)\n * Plug holes in resource release when wiring up StreamSession (CASSANDRA-7073)\n * Re-add parameter columns to tracing session (CASSANDRA-6942)\n * Preserves CQL metadata when updating table from thrift (CASSANDRA-6831)\nMerged from 1.2:\n * Fix nodetool display with vnodes (CASSANDRA-7082)\n * Add UNLOGGED, COUNTER options to BATCH documentation (CASSANDRA-6816)\n * add extra SSL cipher suites (CASSANDRA-6613)\n * fix nodetool getsstables for blob PK (CASSANDRA-6803)\n * Fix BatchlogManager#deleteBatch() use of millisecond timestamps\n   (CASSANDRA-6822)\n * Continue assassinating even if the endpoint vanishes (CASSANDRA-6787)\n * Schedule schema pulls on change (CASSANDRA-6971)\n * Non-droppable verbs shouldn't be dropped from OTC (CASSANDRA-6980)\n * Shutdown batchlog executor in SS#drain() (CASSANDRA-7025)\n * Fix batchlog to account for CF truncation records (CASSANDRA-6999)\n * Fix CQLSH parsing of functions and BLOB literals (CASSANDRA-7018)\n * Properly load trustore in the native protocol (CASSANDRA-6847)\n * Always clean up references in SerializingCache (CASSANDRA-6994)\n * Don't shut MessagingService down when replacing a node (CASSANDRA-6476)\n * fix npe when doing -Dcassandra.fd_initial_value_ms (CASSANDRA-6751)\n\n\n2.1.0-beta1\n * Add flush directory distinct from compaction directories (CASSANDRA-6357)\n * Require JNA by default (CASSANDRA-6575)\n * add listsnapshots command to nodetool (CASSANDRA-5742)\n * Introduce AtomicBTreeColumns (CASSANDRA-6271, 6692)\n * Multithreaded commitlog (CASSANDRA-3578)\n * allocate fixed index summary memory pool and resample cold index summaries\n   to use less memory (CASSANDRA-5519)\n * Removed multithreaded compaction (CASSANDRA-6142)\n * Parallelize fetching rows for low-cardinality indexes (CASSANDRA-1337)\n * change logging from log4j to logback (CASSANDRA-5883)\n * switch to LZ4 compression for internode communication (CASSANDRA-5887)\n * Stop using Thrift-generated Index* classes internally (CASSANDRA-5971)\n * Remove 1.2 network compatibility code (CASSANDRA-5960)\n * Remove leveled json manifest migration code (CASSANDRA-5996)\n * Remove CFDefinition (CASSANDRA-6253)\n * Use AtomicIntegerFieldUpdater in RefCountedMemory (CASSANDRA-6278)\n * User-defined types for CQL3 (CASSANDRA-5590)\n * Use of o.a.c.metrics in nodetool (CASSANDRA-5871, 6406)\n * Batch read from OTC's queue and cleanup (CASSANDRA-1632)\n * Secondary index support for collections (CASSANDRA-4511, 6383)\n * SSTable metadata(Stats.db) format change (CASSANDRA-6356)\n * Push composites support in the storage engine\n   (CASSANDRA-5417, CASSANDRA-6520)\n * Add snapshot space used to cfstats (CASSANDRA-6231)\n * Add cardinality estimator for key count estimation (CASSANDRA-5906)\n * CF id is changed to be non-deterministic. Data dir/key cache are created\n   uniquely for CF id (CASSANDRA-5202)\n * New counters implementation (CASSANDRA-6504)\n * Replace UnsortedColumns, EmptyColumns, TreeMapBackedSortedColumns with new\n   ArrayBackedSortedColumns (CASSANDRA-6630, CASSANDRA-6662, CASSANDRA-6690)\n * Add option to use row cache with a given amount of rows (CASSANDRA-5357)\n * Avoid repairing already repaired data (CASSANDRA-5351)\n * Reject counter updates with USING TTL/TIMESTAMP (CASSANDRA-6649)\n * Replace index_interval with min/max_index_interval (CASSANDRA-6379)\n * Lift limitation that order by columns must be selected for IN queries (CASSANDRA-4911)\n\n\n2.0.5\n * Reduce garbage generated by bloom filter lookups (CASSANDRA-6609)\n * Add ks.cf names to tombstone logging (CASSANDRA-6597)\n * Use LOCAL_QUORUM for LWT operations at LOCAL_SERIAL (CASSANDRA-6495)\n * Wait for gossip to settle before accepting client connections (CASSANDRA-4288)\n * Delete unfinished compaction incrementally (CASSANDRA-6086)\n * Allow specifying custom secondary index options in CQL3 (CASSANDRA-6480)\n * Improve replica pinning for cache efficiency in DES (CASSANDRA-6485)\n * Fix LOCAL_SERIAL from thrift (CASSANDRA-6584)\n * Don't special case received counts in CAS timeout exceptions (CASSANDRA-6595)\n * Add support for 2.1 global counter shards (CASSANDRA-6505)\n * Fix NPE when streaming connection is not yet established (CASSANDRA-6210)\n * Avoid rare duplicate read repair triggering (CASSANDRA-6606)\n * Fix paging discardFirst (CASSANDRA-6555)\n * Fix ArrayIndexOutOfBoundsException in 2ndary index query (CASSANDRA-6470)\n * Release sstables upon rebuilding 2i (CASSANDRA-6635)\n * Add AbstractCompactionStrategy.startup() method (CASSANDRA-6637)\n * SSTableScanner may skip rows during cleanup (CASSANDRA-6638)\n * sstables from stalled repair sessions can resurrect deleted data (CASSANDRA-6503)\n * Switch stress to use ITransportFactory (CASSANDRA-6641)\n * Fix IllegalArgumentException during prepare (CASSANDRA-6592)\n * Fix possible loss of 2ndary index entries during compaction (CASSANDRA-6517)\n * Fix direct Memory on architectures that do not support unaligned long access\n   (CASSANDRA-6628)\n * Let scrub optionally skip broken counter partitions (CASSANDRA-5930)\nMerged from 1.2:\n * fsync compression metadata (CASSANDRA-6531)\n * Validate CF existence on execution for prepared statement (CASSANDRA-6535)\n * Add ability to throttle batchlog replay (CASSANDRA-6550)\n * Fix executing LOCAL_QUORUM with SimpleStrategy (CASSANDRA-6545)\n * Avoid StackOverflow when using large IN queries (CASSANDRA-6567)\n * Nodetool upgradesstables includes secondary indexes (CASSANDRA-6598)\n * Paginate batchlog replay (CASSANDRA-6569)\n * skip blocking on streaming during drain (CASSANDRA-6603)\n * Improve error message when schema doesn't match loaded sstable (CASSANDRA-6262)\n * Add properties to adjust FD initial value and max interval (CASSANDRA-4375)\n * Fix preparing with batch and delete from collection (CASSANDRA-6607)\n * Fix ABSC reverse iterator's remove() method (CASSANDRA-6629)\n * Handle host ID conflicts properly (CASSANDRA-6615)\n * Move handling of migration event source to solve bootstrap race. (CASSANDRA-6648)\n * Make sure compaction throughput value doesn't overflow with int math (CASSANDRA-6647)\n\n\n2.0.4\n * Allow removing snapshots of no-longer-existing CFs (CASSANDRA-6418)\n * add StorageService.stopDaemon() (CASSANDRA-4268)\n * add IRE for invalid CF supplied to get_count (CASSANDRA-5701)\n * add client encryption support to sstableloader (CASSANDRA-6378)\n * Fix accept() loop for SSL sockets post-shutdown (CASSANDRA-6468)\n * Fix size-tiered compaction in LCS L0 (CASSANDRA-6496)\n * Fix assertion failure in filterColdSSTables (CASSANDRA-6483)\n * Fix row tombstones in larger-than-memory compactions (CASSANDRA-6008)\n * Fix cleanup ClassCastException (CASSANDRA-6462)\n * Reduce gossip memory use by interning VersionedValue strings (CASSANDRA-6410)\n * Allow specifying datacenters to participate in a repair (CASSANDRA-6218)\n * Fix divide-by-zero in PCI (CASSANDRA-6403)\n * Fix setting last compacted key in the wrong level for LCS (CASSANDRA-6284)\n * Add millisecond precision formats to the timestamp parser (CASSANDRA-6395)\n * Expose a total memtable size metric for a CF (CASSANDRA-6391)\n * cqlsh: handle symlinks properly (CASSANDRA-6425)\n * Fix potential infinite loop when paging query with IN (CASSANDRA-6464)\n * Fix assertion error in AbstractQueryPager.discardFirst (CASSANDRA-6447)\n * Fix streaming older SSTable yields unnecessary tombstones (CASSANDRA-6527)\nMerged from 1.2:\n * Improved error message on bad properties in DDL queries (CASSANDRA-6453)\n * Randomize batchlog candidates selection (CASSANDRA-6481)\n * Fix thundering herd on endpoint cache invalidation (CASSANDRA-6345, 6485)\n * Improve batchlog write performance with vnodes (CASSANDRA-6488)\n * cqlsh: quote single quotes in strings inside collections (CASSANDRA-6172)\n * Improve gossip performance for typical messages (CASSANDRA-6409)\n * Throw IRE if a prepared statement has more markers than supported\n   (CASSANDRA-5598)\n * Expose Thread metrics for the native protocol server (CASSANDRA-6234)\n * Change snapshot response message verb to INTERNAL to avoid dropping it\n   (CASSANDRA-6415)\n * Warn when collection read has > 65K elements (CASSANDRA-5428)\n * Fix cache persistence when both row and key cache are enabled\n   (CASSANDRA-6413)\n * (Hadoop) add describe_local_ring (CASSANDRA-6268)\n * Fix handling of concurrent directory creation failure (CASSANDRA-6459)\n * Allow executing CREATE statements multiple times (CASSANDRA-6471)\n * Don't send confusing info with timeouts (CASSANDRA-6491)\n * Don't resubmit counter mutation runnables internally (CASSANDRA-6427)\n * Don't drop local mutations without a hint (CASSANDRA-6510)\n * Don't allow null max_hint_window_in_ms (CASSANDRA-6419)\n * Validate SliceRange start and finish lengths (CASSANDRA-6521)\n\n\n2.0.3\n * Fix FD leak on slice read path (CASSANDRA-6275)\n * Cancel read meter task when closing SSTR (CASSANDRA-6358)\n * free off-heap IndexSummary during bulk (CASSANDRA-6359)\n * Recover from IOException in accept() thread (CASSANDRA-6349)\n * Improve Gossip tolerance of abnormally slow tasks (CASSANDRA-6338)\n * Fix trying to hint timed out counter writes (CASSANDRA-6322)\n * Allow restoring specific columnfamilies from archived CL (CASSANDRA-4809)\n * Avoid flushing compaction_history after each operation (CASSANDRA-6287)\n * Fix repair assertion error when tombstones expire (CASSANDRA-6277)\n * Skip loading corrupt key cache (CASSANDRA-6260)\n * Fixes for compacting larger-than-memory rows (CASSANDRA-6274)\n * Compact hottest sstables first and optionally omit coldest from\n   compaction entirely (CASSANDRA-6109)\n * Fix modifying column_metadata from thrift (CASSANDRA-6182)\n * cqlsh: fix LIST USERS output (CASSANDRA-6242)\n * Add IRequestSink interface (CASSANDRA-6248)\n * Update memtable size while flushing (CASSANDRA-6249)\n * Provide hooks around CQL2/CQL3 statement execution (CASSANDRA-6252)\n * Require Permission.SELECT for CAS updates (CASSANDRA-6247)\n * New CQL-aware SSTableWriter (CASSANDRA-5894)\n * Reject CAS operation when the protocol v1 is used (CASSANDRA-6270)\n * Correctly throw error when frame too large (CASSANDRA-5981)\n * Fix serialization bug in PagedRange with 2ndary indexes (CASSANDRA-6299)\n * Fix CQL3 table validation in Thrift (CASSANDRA-6140)\n * Fix bug missing results with IN clauses (CASSANDRA-6327)\n * Fix paging with reversed slices (CASSANDRA-6343)\n * Set minTimestamp correctly to be able to drop expired sstables (CASSANDRA-6337)\n * Support NaN and Infinity as float literals (CASSANDRA-6003)\n * Remove RF from nodetool ring output (CASSANDRA-6289)\n * Fix attempting to flush empty rows (CASSANDRA-6374)\n * Fix potential out of bounds exception when paging (CASSANDRA-6333)\nMerged from 1.2:\n * Optimize FD phi calculation (CASSANDRA-6386)\n * Improve initial FD phi estimate when starting up (CASSANDRA-6385)\n * Don't list CQL3 table in CLI describe even if named explicitely\n   (CASSANDRA-5750)\n * Invalidate row cache when dropping CF (CASSANDRA-6351)\n * add non-jamm path for cached statements (CASSANDRA-6293)\n * add windows bat files for shell commands (CASSANDRA-6145)\n * Require logging in for Thrift CQL2/3 statement preparation (CASSANDRA-6254)\n * restrict max_num_tokens to 1536 (CASSANDRA-6267)\n * Nodetool gets default JMX port from cassandra-env.sh (CASSANDRA-6273)\n * make calculatePendingRanges asynchronous (CASSANDRA-6244)\n * Remove blocking flushes in gossip thread (CASSANDRA-6297)\n * Fix potential socket leak in connectionpool creation (CASSANDRA-6308)\n * Allow LOCAL_ONE/LOCAL_QUORUM to work with SimpleStrategy (CASSANDRA-6238)\n * cqlsh: handle 'null' as session duration (CASSANDRA-6317)\n * Fix json2sstable handling of range tombstones (CASSANDRA-6316)\n * Fix missing one row in reverse query (CASSANDRA-6330)\n * Fix reading expired row value from row cache (CASSANDRA-6325)\n * Fix AssertionError when doing set element deletion (CASSANDRA-6341)\n * Make CL code for the native protocol match the one in C* 2.0\n   (CASSANDRA-6347)\n * Disallow altering CQL3 table from thrift (CASSANDRA-6370)\n * Fix size computation of prepared statement (CASSANDRA-6369)\n\n\n2.0.2\n * Update FailureDetector to use nanontime (CASSANDRA-4925)\n * Fix FileCacheService regressions (CASSANDRA-6149)\n * Never return WriteTimeout for CL.ANY (CASSANDRA-6132)\n * Fix race conditions in bulk loader (CASSANDRA-6129)\n * Add configurable metrics reporting (CASSANDRA-4430)\n * drop queries exceeding a configurable number of tombstones (CASSANDRA-6117)\n * Track and persist sstable read activity (CASSANDRA-5515)\n * Fixes for speculative retry (CASSANDRA-5932, CASSANDRA-6194)\n * Improve memory usage of metadata min/max column names (CASSANDRA-6077)\n * Fix thrift validation refusing row markers on CQL3 tables (CASSANDRA-6081)\n * Fix insertion of collections with CAS (CASSANDRA-6069)\n * Correctly send metadata on SELECT COUNT (CASSANDRA-6080)\n * Track clients' remote addresses in ClientState (CASSANDRA-6070)\n * Create snapshot dir if it does not exist when migrating\n   leveled manifest (CASSANDRA-6093)\n * make sequential nodetool repair the default (CASSANDRA-5950)\n * Add more hooks for compaction strategy implementations (CASSANDRA-6111)\n * Fix potential NPE on composite 2ndary indexes (CASSANDRA-6098)\n * Delete can potentially be skipped in batch (CASSANDRA-6115)\n * Allow alter keyspace on system_traces (CASSANDRA-6016)\n * Disallow empty column names in cql (CASSANDRA-6136)\n * Use Java7 file-handling APIs and fix file moving on Windows (CASSANDRA-5383)\n * Save compaction history to system keyspace (CASSANDRA-5078)\n * Fix NPE if StorageService.getOperationMode() is executed before full startup (CASSANDRA-6166)\n * CQL3: support pre-epoch longs for TimestampType (CASSANDRA-6212)\n * Add reloadtriggers command to nodetool (CASSANDRA-4949)\n * cqlsh: ignore empty 'value alias' in DESCRIBE (CASSANDRA-6139)\n * Fix sstable loader (CASSANDRA-6205)\n * Reject bootstrapping if the node already exists in gossip (CASSANDRA-5571)\n * Fix NPE while loading paxos state (CASSANDRA-6211)\n * cqlsh: add SHOW SESSION <tracing-session> command (CASSANDRA-6228)\nMerged from 1.2:\n * (Hadoop) Require CFRR batchSize to be at least 2 (CASSANDRA-6114)\n * Add a warning for small LCS sstable size (CASSANDRA-6191)\n * Add ability to list specific KS/CF combinations in nodetool cfstats (CASSANDRA-4191)\n * Mark CF clean if a mutation raced the drop and got it marked dirty (CASSANDRA-5946)\n * Add a LOCAL_ONE consistency level (CASSANDRA-6202)\n * Limit CQL prepared statement cache by size instead of count (CASSANDRA-6107)\n * Tracing should log write failure rather than raw exceptions (CASSANDRA-6133)\n * lock access to TM.endpointToHostIdMap (CASSANDRA-6103)\n * Allow estimated memtable size to exceed slab allocator size (CASSANDRA-6078)\n * Start MeteredFlusher earlier to prevent OOM during CL replay (CASSANDRA-6087)\n * Avoid sending Truncate command to fat clients (CASSANDRA-6088)\n * Allow where clause conditions to be in parenthesis (CASSANDRA-6037)\n * Do not open non-ssl storage port if encryption option is all (CASSANDRA-3916)\n * Move batchlog replay to its own executor (CASSANDRA-6079)\n * Add tombstone debug threshold and histogram (CASSANDRA-6042, 6057)\n * Enable tcp keepalive on incoming connections (CASSANDRA-4053)\n * Fix fat client schema pull NPE (CASSANDRA-6089)\n * Fix memtable flushing for indexed tables (CASSANDRA-6112)\n * Fix skipping columns with multiple slices (CASSANDRA-6119)\n * Expose connected thrift + native client counts (CASSANDRA-5084)\n * Optimize auth setup (CASSANDRA-6122)\n * Trace index selection (CASSANDRA-6001)\n * Update sstablesPerReadHistogram to use biased sampling (CASSANDRA-6164)\n * Log UnknownColumnfamilyException when closing socket (CASSANDRA-5725)\n * Properly error out on CREATE INDEX for counters table (CASSANDRA-6160)\n * Handle JMX notification failure for repair (CASSANDRA-6097)\n * (Hadoop) Fetch no more than 128 splits in parallel (CASSANDRA-6169)\n * stress: add username/password authentication support (CASSANDRA-6068)\n * Fix indexed queries with row cache enabled on parent table (CASSANDRA-5732)\n * Fix compaction race during columnfamily drop (CASSANDRA-5957)\n * Fix validation of empty column names for compact tables (CASSANDRA-6152)\n * Skip replaying mutations that pass CRC but fail to deserialize (CASSANDRA-6183)\n * Rework token replacement to use replace_address (CASSANDRA-5916)\n * Fix altering column types (CASSANDRA-6185)\n * cqlsh: fix CREATE/ALTER WITH completion (CASSANDRA-6196)\n * add windows bat files for shell commands (CASSANDRA-6145)\n * Fix potential stack overflow during range tombstones insertion (CASSANDRA-6181)\n * (Hadoop) Make LOCAL_ONE the default consistency level (CASSANDRA-6214)\n\n\n2.0.1\n * Fix bug that could allow reading deleted data temporarily (CASSANDRA-6025)\n * Improve memory use defaults (CASSANDRA-6059)\n * Make ThriftServer more easlly extensible (CASSANDRA-6058)\n * Remove Hadoop dependency from ITransportFactory (CASSANDRA-6062)\n * add file_cache_size_in_mb setting (CASSANDRA-5661)\n * Improve error message when yaml contains invalid properties (CASSANDRA-5958)\n * Improve leveled compaction's ability to find non-overlapping L0 compactions\n   to work on concurrently (CASSANDRA-5921)\n * Notify indexer of columns shadowed by range tombstones (CASSANDRA-5614)\n * Log Merkle tree stats (CASSANDRA-2698)\n * Switch from crc32 to adler32 for compressed sstable checksums (CASSANDRA-5862)\n * Improve offheap memcpy performance (CASSANDRA-5884)\n * Use a range aware scanner for cleanup (CASSANDRA-2524)\n * Cleanup doesn't need to inspect sstables that contain only local data\n   (CASSANDRA-5722)\n * Add ability for CQL3 to list partition keys (CASSANDRA-4536)\n * Improve native protocol serialization (CASSANDRA-5664)\n * Upgrade Thrift to 0.9.1 (CASSANDRA-5923)\n * Require superuser status for adding triggers (CASSANDRA-5963)\n * Make standalone scrubber handle old and new style leveled manifest\n   (CASSANDRA-6005)\n * Fix paxos bugs (CASSANDRA-6012, 6013, 6023)\n * Fix paged ranges with multiple replicas (CASSANDRA-6004)\n * Fix potential AssertionError during tracing (CASSANDRA-6041)\n * Fix NPE in sstablesplit (CASSANDRA-6027)\n * Migrate pre-2.0 key/value/column aliases to system.schema_columns\n   (CASSANDRA-6009)\n * Paging filter empty rows too agressively (CASSANDRA-6040)\n * Support variadic parameters for IN clauses (CASSANDRA-4210)\n * cqlsh: return the result of CAS writes (CASSANDRA-5796)\n * Fix validation of IN clauses with 2ndary indexes (CASSANDRA-6050)\n * Support named bind variables in CQL (CASSANDRA-6033)\nMerged from 1.2:\n * Allow cache-keys-to-save to be set at runtime (CASSANDRA-5980)\n * Avoid second-guessing out-of-space state (CASSANDRA-5605)\n * Tuning knobs for dealing with large blobs and many CFs (CASSANDRA-5982)\n * (Hadoop) Fix CQLRW for thrift tables (CASSANDRA-6002)\n * Fix possible divide-by-zero in HHOM (CASSANDRA-5990)\n * Allow local batchlog writes for CL.ANY (CASSANDRA-5967)\n * Upgrade metrics-core to version 2.2.0 (CASSANDRA-5947)\n * Fix CqlRecordWriter with composite keys (CASSANDRA-5949)\n * Add snitch, schema version, cluster, partitioner to JMX (CASSANDRA-5881)\n * Allow disabling SlabAllocator (CASSANDRA-5935)\n * Make user-defined compaction JMX blocking (CASSANDRA-4952)\n * Fix streaming does not transfer wrapped range (CASSANDRA-5948)\n * Fix loading index summary containing empty key (CASSANDRA-5965)\n * Correctly handle limits in CompositesSearcher (CASSANDRA-5975)\n * Pig: handle CQL collections (CASSANDRA-5867)\n * Pass the updated cf to the PRSI index() method (CASSANDRA-5999)\n * Allow empty CQL3 batches (as no-op) (CASSANDRA-5994)\n * Support null in CQL3 functions (CASSANDRA-5910)\n * Replace the deprecated MapMaker with CacheLoader (CASSANDRA-6007)\n * Add SSTableDeletingNotification to DataTracker (CASSANDRA-6010)\n * Fix snapshots in use get deleted during snapshot repair (CASSANDRA-6011)\n * Move hints and exception count to o.a.c.metrics (CASSANDRA-6017)\n * Fix memory leak in snapshot repair (CASSANDRA-6047)\n * Fix sstable2sjon for CQL3 tables (CASSANDRA-5852)\n\n\n2.0.0\n * Fix thrift validation when inserting into CQL3 tables (CASSANDRA-5138)\n * Fix periodic memtable flushing behavior with clean memtables (CASSANDRA-5931)\n * Fix dateOf() function for pre-2.0 timestamp columns (CASSANDRA-5928)\n * Fix SSTable unintentionally loads BF when opened for batch (CASSANDRA-5938)\n * Add stream session progress to JMX (CASSANDRA-4757)\n * Fix NPE during CAS operation (CASSANDRA-5925)\nMerged from 1.2:\n * Fix getBloomFilterDiskSpaceUsed for AlwaysPresentFilter (CASSANDRA-5900)\n * Don't announce schema version until we've loaded the changes locally\n   (CASSANDRA-5904)\n * Fix to support off heap bloom filters size greater than 2 GB (CASSANDRA-5903)\n * Properly handle parsing huge map and set literals (CASSANDRA-5893)\n\n\n2.0.0-rc2\n * enable vnodes by default (CASSANDRA-5869)\n * fix CAS contention timeout (CASSANDRA-5830)\n * fix HsHa to respect max frame size (CASSANDRA-4573)\n * Fix (some) 2i on composite components omissions (CASSANDRA-5851)\n * cqlsh: add DESCRIBE FULL SCHEMA variant (CASSANDRA-5880)\nMerged from 1.2:\n * Correctly validate sparse composite cells in scrub (CASSANDRA-5855)\n * Add KeyCacheHitRate metric to CF metrics (CASSANDRA-5868)\n * cqlsh: add support for multiline comments (CASSANDRA-5798)\n * Handle CQL3 SELECT duplicate IN restrictions on clustering columns\n   (CASSANDRA-5856)\n\n\n2.0.0-rc1\n * improve DecimalSerializer performance (CASSANDRA-5837)\n * fix potential spurious wakeup in AsyncOneResponse (CASSANDRA-5690)\n * fix schema-related trigger issues (CASSANDRA-5774)\n * Better validation when accessing CQL3 table from thrift (CASSANDRA-5138)\n * Fix assertion error during repair (CASSANDRA-5801)\n * Fix range tombstone bug (CASSANDRA-5805)\n * DC-local CAS (CASSANDRA-5797)\n * Add a native_protocol_version column to the system.local table (CASSANRDA-5819)\n * Use index_interval from cassandra.yaml when upgraded (CASSANDRA-5822)\n * Fix buffer underflow on socket close (CASSANDRA-5792)\nMerged from 1.2:\n * Fix reading DeletionTime from 1.1-format sstables (CASSANDRA-5814)\n * cqlsh: add collections support to COPY (CASSANDRA-5698)\n * retry important messages for any IOException (CASSANDRA-5804)\n * Allow empty IN relations in SELECT/UPDATE/DELETE statements (CASSANDRA-5626)\n * cqlsh: fix crashing on Windows due to libedit detection (CASSANDRA-5812)\n * fix bulk-loading compressed sstables (CASSANDRA-5820)\n * (Hadoop) fix quoting in CqlPagingRecordReader and CqlRecordWriter\n   (CASSANDRA-5824)\n * update default LCS sstable size to 160MB (CASSANDRA-5727)\n * Allow compacting 2Is via nodetool (CASSANDRA-5670)\n * Hex-encode non-String keys in OPP (CASSANDRA-5793)\n * nodetool history logging (CASSANDRA-5823)\n * (Hadoop) fix support for Thrift tables in CqlPagingRecordReader\n   (CASSANDRA-5752)\n * add \"all time blocked\" to StatusLogger output (CASSANDRA-5825)\n * Future-proof inter-major-version schema migrations (CASSANDRA-5845)\n * (Hadoop) add CqlPagingRecordReader support for ReversedType in Thrift table\n   (CASSANDRA-5718)\n * Add -no-snapshot option to scrub (CASSANDRA-5891)\n * Fix to support off heap bloom filters size greater than 2 GB (CASSANDRA-5903)\n * Properly handle parsing huge map and set literals (CASSANDRA-5893)\n * Fix LCS L0 compaction may overlap in L1 (CASSANDRA-5907)\n * New sstablesplit tool to split large sstables offline (CASSANDRA-4766)\n * Fix potential deadlock in native protocol server (CASSANDRA-5926)\n * Disallow incompatible type change in CQL3 (CASSANDRA-5882)\nMerged from 1.1:\n * Correctly validate sparse composite cells in scrub (CASSANDRA-5855)\n\n\n2.0.0-beta2\n * Replace countPendingHints with Hints Created metric (CASSANDRA-5746)\n * Allow nodetool with no args, and with help to run without a server (CASSANDRA-5734)\n * Cleanup AbstractType/TypeSerializer classes (CASSANDRA-5744)\n * Remove unimplemented cli option schema-mwt (CASSANDRA-5754)\n * Support range tombstones in thrift (CASSANDRA-5435)\n * Normalize table-manipulating CQL3 statements' class names (CASSANDRA-5759)\n * cqlsh: add missing table options to DESCRIBE output (CASSANDRA-5749)\n * Fix assertion error during repair (CASSANDRA-5757)\n * Fix bulkloader (CASSANDRA-5542)\n * Add LZ4 compression to the native protocol (CASSANDRA-5765)\n * Fix bugs in the native protocol v2 (CASSANDRA-5770)\n * CAS on 'primary key only' table (CASSANDRA-5715)\n * Support streaming SSTables of old versions (CASSANDRA-5772)\n * Always respect protocol version in native protocol (CASSANDRA-5778)\n * Fix ConcurrentModificationException during streaming (CASSANDRA-5782)\n * Update deletion timestamp in Commit#updatesWithPaxosTime (CASSANDRA-5787)\n * Thrift cas() method crashes if input columns are not sorted (CASSANDRA-5786)\n * Order columns names correctly when querying for CAS (CASSANDRA-5788)\n * Fix streaming retry (CASSANDRA-5775)\nMerged from 1.2:\n * if no seeds can be a reached a node won't start in a ring by itself (CASSANDRA-5768)\n * add cassandra.unsafesystem property (CASSANDRA-5704)\n * (Hadoop) quote identifiers in CqlPagingRecordReader (CASSANDRA-5763)\n * Add replace_node functionality for vnodes (CASSANDRA-5337)\n * Add timeout events to query traces (CASSANDRA-5520)\n * Fix serialization of the LEFT gossip value (CASSANDRA-5696)\n * Pig: support for cql3 tables (CASSANDRA-5234)\n * Fix skipping range tombstones with reverse queries (CASSANDRA-5712)\n * Expire entries out of ThriftSessionManager (CASSANDRA-5719)\n * Don't keep ancestor information in memory (CASSANDRA-5342)\n * Expose native protocol server status in nodetool info (CASSANDRA-5735)\n * Fix pathetic performance of range tombstones (CASSANDRA-5677)\n * Fix querying with an empty (impossible) range (CASSANDRA-5573)\n * cqlsh: handle CUSTOM 2i in DESCRIBE output (CASSANDRA-5760)\n * Fix minor bug in Range.intersects(Bound) (CASSANDRA-5771)\n * cqlsh: handle disabled compression in DESCRIBE output (CASSANDRA-5766)\n * Ensure all UP events are notified on the native protocol (CASSANDRA-5769)\n * Fix formatting of sstable2json with multiple -k arguments (CASSANDRA-5781)\n * Don't rely on row marker for queries in general to hide lost markers\n   after TTL expires (CASSANDRA-5762)\n * Sort nodetool help output (CASSANDRA-5776)\n * Fix column expiring during 2 phases compaction (CASSANDRA-5799)\n * now() is being rejected in INSERTs when inside collections (CASSANDRA-5795)\n\n\n2.0.0-beta1\n * Add support for indexing clustered columns (CASSANDRA-5125)\n * Removed on-heap row cache (CASSANDRA-5348)\n * use nanotime consistently for node-local timeouts (CASSANDRA-5581)\n * Avoid unnecessary second pass on name-based queries (CASSANDRA-5577)\n * Experimental triggers (CASSANDRA-1311)\n * JEMalloc support for off-heap allocation (CASSANDRA-3997)\n * Single-pass compaction (CASSANDRA-4180)\n * Removed token range bisection (CASSANDRA-5518)\n * Removed compatibility with pre-1.2.5 sstables and network messages\n   (CASSANDRA-5511)\n * removed PBSPredictor (CASSANDRA-5455)\n * CAS support (CASSANDRA-5062, 5441, 5442, 5443, 5619, 5667)\n * Leveled compaction performs size-tiered compactions in L0\n   (CASSANDRA-5371, 5439)\n * Add yaml network topology snitch for mixed ec2/other envs (CASSANDRA-5339)\n * Log when a node is down longer than the hint window (CASSANDRA-4554)\n * Optimize tombstone creation for ExpiringColumns (CASSANDRA-4917)\n * Improve LeveledScanner work estimation (CASSANDRA-5250, 5407)\n * Replace compaction lock with runWithCompactionsDisabled (CASSANDRA-3430)\n * Change Message IDs to ints (CASSANDRA-5307)\n * Move sstable level information into the Stats component, removing the\n   need for a separate Manifest file (CASSANDRA-4872)\n * avoid serializing to byte[] on commitlog append (CASSANDRA-5199)\n * make index_interval configurable per columnfamily (CASSANDRA-3961, CASSANDRA-5650)\n * add default_time_to_live (CASSANDRA-3974)\n * add memtable_flush_period_in_ms (CASSANDRA-4237)\n * replace supercolumns internally by composites (CASSANDRA-3237, 5123)\n * upgrade thrift to 0.9.0 (CASSANDRA-3719)\n * drop unnecessary keyspace parameter from user-defined compaction API\n   (CASSANDRA-5139)\n * more robust solution to incomplete compactions + counters (CASSANDRA-5151)\n * Change order of directory searching for c*.in.sh (CASSANDRA-3983)\n * Add tool to reset SSTable compaction level for LCS (CASSANDRA-5271)\n * Allow custom configuration loader (CASSANDRA-5045)\n * Remove memory emergency pressure valve logic (CASSANDRA-3534)\n * Reduce request latency with eager retry (CASSANDRA-4705)\n * cqlsh: Remove ASSUME command (CASSANDRA-5331)\n * Rebuild BF when loading sstables if bloom_filter_fp_chance\n   has changed since compaction (CASSANDRA-5015)\n * remove row-level bloom filters (CASSANDRA-4885)\n * Change Kernel Page Cache skipping into row preheating (disabled by default)\n   (CASSANDRA-4937)\n * Improve repair by deciding on a gcBefore before sending\n   out TreeRequests (CASSANDRA-4932)\n * Add an official way to disable compactions (CASSANDRA-5074)\n * Reenable ALTER TABLE DROP with new semantics (CASSANDRA-3919)\n * Add binary protocol versioning (CASSANDRA-5436)\n * Swap THshaServer for TThreadedSelectorServer (CASSANDRA-5530)\n * Add alias support to SELECT statement (CASSANDRA-5075)\n * Don't create empty RowMutations in CommitLogReplayer (CASSANDRA-5541)\n * Use range tombstones when dropping cfs/columns from schema (CASSANDRA-5579)\n * cqlsh: drop CQL2/CQL3-beta support (CASSANDRA-5585)\n * Track max/min column names in sstables to be able to optimize slice\n   queries (CASSANDRA-5514, CASSANDRA-5595, CASSANDRA-5600)\n * Binary protocol: allow batching already prepared statements (CASSANDRA-4693)\n * Allow preparing timestamp, ttl and limit in CQL3 queries (CASSANDRA-4450)\n * Support native link w/o JNA in Java7 (CASSANDRA-3734)\n * Use SASL authentication in binary protocol v2 (CASSANDRA-5545)\n * Replace Thrift HsHa with LMAX Disruptor based implementation (CASSANDRA-5582)\n * cqlsh: Add row count to SELECT output (CASSANDRA-5636)\n * Include a timestamp with all read commands to determine column expiration\n   (CASSANDRA-5149)\n * Streaming 2.0 (CASSANDRA-5286, 5699)\n * Conditional create/drop ks/table/index statements in CQL3 (CASSANDRA-2737)\n * more pre-table creation property validation (CASSANDRA-5693)\n * Redesign repair messages (CASSANDRA-5426)\n * Fix ALTER RENAME post-5125 (CASSANDRA-5702)\n * Disallow renaming a 2ndary indexed column (CASSANDRA-5705)\n * Rename Table to Keyspace (CASSANDRA-5613)\n * Ensure changing column_index_size_in_kb on different nodes don't corrupt the\n   sstable (CASSANDRA-5454)\n * Move resultset type information into prepare, not execute (CASSANDRA-5649)\n * Auto paging in binary protocol (CASSANDRA-4415, 5714)\n * Don't tie client side use of AbstractType to JDBC (CASSANDRA-4495)\n * Adds new TimestampType to replace DateType (CASSANDRA-5723, CASSANDRA-5729)\nMerged from 1.2:\n * make starting native protocol server idempotent (CASSANDRA-5728)\n * Fix loading key cache when a saved entry is no longer valid (CASSANDRA-5706)\n * Fix serialization of the LEFT gossip value (CASSANDRA-5696)\n * cqlsh: Don't show 'null' in place of empty values (CASSANDRA-5675)\n * Race condition in detecting version on a mixed 1.1/1.2 cluster\n   (CASSANDRA-5692)\n * Fix skipping range tombstones with reverse queries (CASSANDRA-5712)\n * Expire entries out of ThriftSessionManager (CASSANRDA-5719)\n * Don't keep ancestor information in memory (CASSANDRA-5342)\n * cqlsh: fix handling of semicolons inside BATCH queries (CASSANDRA-5697)\n\n\n1.2.6\n * Fix tracing when operation completes before all responses arrive\n   (CASSANDRA-5668)\n * Fix cross-DC mutation forwarding (CASSANDRA-5632)\n * Reduce SSTableLoader memory usage (CASSANDRA-5555)\n * Scale hinted_handoff_throttle_in_kb to cluster size (CASSANDRA-5272)\n * (Hadoop) Add CQL3 input/output formats (CASSANDRA-4421, 5622)\n * (Hadoop) Fix InputKeyRange in CFIF (CASSANDRA-5536)\n * Fix dealing with ridiculously large max sstable sizes in LCS (CASSANDRA-5589)\n * Ignore pre-truncate hints (CASSANDRA-4655)\n * Move System.exit on OOM into a separate thread (CASSANDRA-5273)\n * Write row markers when serializing schema (CASSANDRA-5572)\n * Check only SSTables for the requested range when streaming (CASSANDRA-5569)\n * Improve batchlog replay behavior and hint ttl handling (CASSANDRA-5314)\n * Exclude localTimestamp from validation for tombstones (CASSANDRA-5398)\n * cqlsh: add custom prompt support (CASSANDRA-5539)\n * Reuse prepared statements in hot auth queries (CASSANDRA-5594)\n * cqlsh: add vertical output option (see EXPAND) (CASSANDRA-5597)\n * Add a rate limit option to stress (CASSANDRA-5004)\n * have BulkLoader ignore snapshots directories (CASSANDRA-5587)\n * fix SnitchProperties logging context (CASSANDRA-5602)\n * Expose whether jna is enabled and memory is locked via JMX (CASSANDRA-5508)\n * cqlsh: fix COPY FROM with ReversedType (CASSANDRA-5610)\n * Allow creating CUSTOM indexes on collections (CASSANDRA-5615)\n * Evaluate now() function at execution time (CASSANDRA-5616)\n * Expose detailed read repair metrics (CASSANDRA-5618)\n * Correct blob literal + ReversedType parsing (CASSANDRA-5629)\n * Allow GPFS to prefer the internal IP like EC2MRS (CASSANDRA-5630)\n * fix help text for -tspw cassandra-cli (CASSANDRA-5643)\n * don't throw away initial causes exceptions for internode encryption issues\n   (CASSANDRA-5644)\n * Fix message spelling errors for cql select statements (CASSANDRA-5647)\n * Suppress custom exceptions thru jmx (CASSANDRA-5652)\n * Update CREATE CUSTOM INDEX syntax (CASSANDRA-5639)\n * Fix PermissionDetails.equals() method (CASSANDRA-5655)\n * Never allow partition key ranges in CQL3 without token() (CASSANDRA-5666)\n * Gossiper incorrectly drops AppState for an upgrading node (CASSANDRA-5660)\n * Connection thrashing during multi-region ec2 during upgrade, due to\n   messaging version (CASSANDRA-5669)\n * Avoid over reconnecting in EC2MRS (CASSANDRA-5678)\n * Fix ReadResponseSerializer.serializedSize() for digest reads (CASSANDRA-5476)\n * allow sstable2json on 2i CFs (CASSANDRA-5694)\nMerged from 1.1:\n * Remove buggy thrift max message length option (CASSANDRA-5529)\n * Fix NPE in Pig's widerow mode (CASSANDRA-5488)\n * Add split size parameter to Pig and disable split combination (CASSANDRA-5544)\n\n\n1.2.5\n * make BytesToken.toString only return hex bytes (CASSANDRA-5566)\n * Ensure that submitBackground enqueues at least one task (CASSANDRA-5554)\n * fix 2i updates with identical values and timestamps (CASSANDRA-5540)\n * fix compaction throttling bursty-ness (CASSANDRA-4316)\n * reduce memory consumption of IndexSummary (CASSANDRA-5506)\n * remove per-row column name bloom filters (CASSANDRA-5492)\n * Include fatal errors in trace events (CASSANDRA-5447)\n * Ensure that PerRowSecondaryIndex is notified of row-level deletes\n   (CASSANDRA-5445)\n * Allow empty blob literals in CQL3 (CASSANDRA-5452)\n * Fix streaming RangeTombstones at column index boundary (CASSANDRA-5418)\n * Fix preparing statements when current keyspace is not set (CASSANDRA-5468)\n * Fix SemanticVersion.isSupportedBy minor/patch handling (CASSANDRA-5496)\n * Don't provide oldCfId for post-1.1 system cfs (CASSANDRA-5490)\n * Fix primary range ignores replication strategy (CASSANDRA-5424)\n * Fix shutdown of binary protocol server (CASSANDRA-5507)\n * Fix repair -snapshot not working (CASSANDRA-5512)\n * Set isRunning flag later in binary protocol server (CASSANDRA-5467)\n * Fix use of CQL3 functions with descending clustering order (CASSANDRA-5472)\n * Disallow renaming columns one at a time for thrift table in CQL3\n   (CASSANDRA-5531)\n * cqlsh: add CLUSTERING ORDER BY support to DESCRIBE (CASSANDRA-5528)\n * Add custom secondary index support to CQL3 (CASSANDRA-5484)\n * Fix repair hanging silently on unexpected error (CASSANDRA-5229)\n * Fix Ec2Snitch regression introduced by CASSANDRA-5171 (CASSANDRA-5432)\n * Add nodetool enablebackup/disablebackup (CASSANDRA-5556)\n * cqlsh: fix DESCRIBE after case insensitive USE (CASSANDRA-5567)\nMerged from 1.1\n * Add retry mechanism to OTC for non-droppable_verbs (CASSANDRA-5393)\n * Use allocator information to improve memtable memory usage estimate\n   (CASSANDRA-5497)\n * Fix trying to load deleted row into row cache on startup (CASSANDRA-4463)\n * fsync leveled manifest to avoid corruption (CASSANDRA-5535)\n * Fix Bound intersection computation (CASSANDRA-5551)\n * sstablescrub now respects max memory size in cassandra.in.sh (CASSANDRA-5562)\n\n\n1.2.4\n * Ensure that PerRowSecondaryIndex updates see the most recent values\n   (CASSANDRA-5397)\n * avoid duplicate index entries ind PrecompactedRow and\n   ParallelCompactionIterable (CASSANDRA-5395)\n * remove the index entry on oldColumn when new column is a tombstone\n   (CASSANDRA-5395)\n * Change default stream throughput from 400 to 200 mbps (CASSANDRA-5036)\n * Gossiper logs DOWN for symmetry with UP (CASSANDRA-5187)\n * Fix mixing prepared statements between keyspaces (CASSANDRA-5352)\n * Fix consistency level during bootstrap - strike 3 (CASSANDRA-5354)\n * Fix transposed arguments in AlreadyExistsException (CASSANDRA-5362)\n * Improve asynchronous hint delivery (CASSANDRA-5179)\n * Fix Guava dependency version (12.0 -> 13.0.1) for Maven (CASSANDRA-5364)\n * Validate that provided CQL3 collection value are < 64K (CASSANDRA-5355)\n * Make upgradeSSTable skip current version sstables by default (CASSANDRA-5366)\n * Optimize min/max timestamp collection (CASSANDRA-5373)\n * Invalid streamId in cql binary protocol when using invalid CL\n   (CASSANDRA-5164)\n * Fix validation for IN where clauses with collections (CASSANDRA-5376)\n * Copy resultSet on count query to avoid ConcurrentModificationException\n   (CASSANDRA-5382)\n * Correctly typecheck in CQL3 even with ReversedType (CASSANDRA-5386)\n * Fix streaming compressed files when using encryption (CASSANDRA-5391)\n * cassandra-all 1.2.0 pom missing netty dependency (CASSANDRA-5392)\n * Fix writetime/ttl functions on null values (CASSANDRA-5341)\n * Fix NPE during cql3 select with token() (CASSANDRA-5404)\n * IndexHelper.skipBloomFilters won't skip non-SHA filters (CASSANDRA-5385)\n * cqlsh: Print maps ordered by key, sort sets (CASSANDRA-5413)\n * Add null syntax support in CQL3 for inserts (CASSANDRA-3783)\n * Allow unauthenticated set_keyspace() calls (CASSANDRA-5423)\n * Fix potential incremental backups race (CASSANDRA-5410)\n * Fix prepared BATCH statements with batch-level timestamps (CASSANDRA-5415)\n * Allow overriding superuser setup delay (CASSANDRA-5430)\n * cassandra-shuffle with JMX usernames and passwords (CASSANDRA-5431)\nMerged from 1.1:\n * cli: Quote ks and cf names in schema output when needed (CASSANDRA-5052)\n * Fix bad default for min/max timestamp in SSTableMetadata (CASSANDRA-5372)\n * Fix cf name extraction from manifest in Directories.migrateFile()\n   (CASSANDRA-5242)\n * Support pluggable internode authentication (CASSANDRA-5401)\n\n\n1.2.3\n * add check for sstable overlap within a level on startup (CASSANDRA-5327)\n * replace ipv6 colons in jmx object names (CASSANDRA-5298, 5328)\n * Avoid allocating SSTableBoundedScanner during repair when the range does\n   not intersect the sstable (CASSANDRA-5249)\n * Don't lowercase property map keys (this breaks NTS) (CASSANDRA-5292)\n * Fix composite comparator with super columns (CASSANDRA-5287)\n * Fix insufficient validation of UPDATE queries against counter cfs\n   (CASSANDRA-5300)\n * Fix PropertyFileSnitch default DC/Rack behavior (CASSANDRA-5285)\n * Handle null values when executing prepared statement (CASSANDRA-5081)\n * Add netty to pom dependencies (CASSANDRA-5181)\n * Include type arguments in Thrift CQLPreparedResult (CASSANDRA-5311)\n * Fix compaction not removing columns when bf_fp_ratio is 1 (CASSANDRA-5182)\n * cli: Warn about missing CQL3 tables in schema descriptions (CASSANDRA-5309)\n * Re-enable unknown option in replication/compaction strategies option for\n   backward compatibility (CASSANDRA-4795)\n * Add binary protocol support to stress (CASSANDRA-4993)\n * cqlsh: Fix COPY FROM value quoting and null handling (CASSANDRA-5305)\n * Fix repair -pr for vnodes (CASSANDRA-5329)\n * Relax CL for auth queries for non-default users (CASSANDRA-5310)\n * Fix AssertionError during repair (CASSANDRA-5245)\n * Don't announce migrations to pre-1.2 nodes (CASSANDRA-5334)\nMerged from 1.1:\n * Update offline scrub for 1.0 -> 1.1 directory structure (CASSANDRA-5195)\n * add tmp flag to Descriptor hashcode (CASSANDRA-4021)\n * fix logging of \"Found table data in data directories\" when only system tables\n   are present (CASSANDRA-5289)\n * cli: Add JMX authentication support (CASSANDRA-5080)\n * nodetool: ability to repair specific range (CASSANDRA-5280)\n * Fix possible assertion triggered in SliceFromReadCommand (CASSANDRA-5284)\n * cqlsh: Add inet type support on Windows (ipv4-only) (CASSANDRA-4801)\n * Fix race when initializing ColumnFamilyStore (CASSANDRA-5350)\n * Add UseTLAB JVM flag (CASSANDRA-5361)\n\n\n1.2.2\n * fix potential for multiple concurrent compactions of the same sstables\n   (CASSANDRA-5256)\n * avoid no-op caching of byte[] on commitlog append (CASSANDRA-5199)\n * fix symlinks under data dir not working (CASSANDRA-5185)\n * fix bug in compact storage metadata handling (CASSANDRA-5189)\n * Validate login for USE queries (CASSANDRA-5207)\n * cli: remove default username and password (CASSANDRA-5208)\n * configure populate_io_cache_on_flush per-CF (CASSANDRA-4694)\n * allow configuration of internode socket buffer (CASSANDRA-3378)\n * Make sstable directory picking blacklist-aware again (CASSANDRA-5193)\n * Correctly expire gossip states for edge cases (CASSANDRA-5216)\n * Improve handling of directory creation failures (CASSANDRA-5196)\n * Expose secondary indicies to the rest of nodetool (CASSANDRA-4464)\n * Binary protocol: avoid sending notification for 0.0.0.0 (CASSANDRA-5227)\n * add UseCondCardMark XX jvm settings on jdk 1.7 (CASSANDRA-4366)\n * CQL3 refactor to allow conversion function (CASSANDRA-5226)\n * Fix drop of sstables in some circumstance (CASSANDRA-5232)\n * Implement caching of authorization results (CASSANDRA-4295)\n * Add support for LZ4 compression (CASSANDRA-5038)\n * Fix missing columns in wide rows queries (CASSANDRA-5225)\n * Simplify auth setup and make system_auth ks alterable (CASSANDRA-5112)\n * Stop compactions from hanging during bootstrap (CASSANDRA-5244)\n * fix compressed streaming sending extra chunk (CASSANDRA-5105)\n * Add CQL3-based implementations of IAuthenticator and IAuthorizer\n   (CASSANDRA-4898)\n * Fix timestamp-based tomstone removal logic (CASSANDRA-5248)\n * cli: Add JMX authentication support (CASSANDRA-5080)\n * Fix forceFlush behavior (CASSANDRA-5241)\n * cqlsh: Add username autocompletion (CASSANDRA-5231)\n * Fix CQL3 composite partition key error (CASSANDRA-5240)\n * Allow IN clause on last clustering key (CASSANDRA-5230)\nMerged from 1.1:\n * fix start key/end token validation for wide row iteration (CASSANDRA-5168)\n * add ConfigHelper support for Thrift frame and max message sizes (CASSANDRA-5188)\n * fix nodetool repair not fail on node down (CASSANDRA-5203)\n * always collect tombstone hints (CASSANDRA-5068)\n * Fix error when sourcing file in cqlsh (CASSANDRA-5235)\n\n\n1.2.1\n * stream undelivered hints on decommission (CASSANDRA-5128)\n * GossipingPropertyFileSnitch loads saved dc/rack info if needed (CASSANDRA-5133)\n * drain should flush system CFs too (CASSANDRA-4446)\n * add inter_dc_tcp_nodelay setting (CASSANDRA-5148)\n * re-allow wrapping ranges for start_token/end_token range pairitspwng (CASSANDRA-5106)\n * fix validation compaction of empty rows (CASSANDRA-5136)\n * nodetool methods to enable/disable hint storage/delivery (CASSANDRA-4750)\n * disallow bloom filter false positive chance of 0 (CASSANDRA-5013)\n * add threadpool size adjustment methods to JMXEnabledThreadPoolExecutor and\n   CompactionManagerMBean (CASSANDRA-5044)\n * fix hinting for dropped local writes (CASSANDRA-4753)\n * off-heap cache doesn't need mutable column container (CASSANDRA-5057)\n * apply disk_failure_policy to bad disks on initial directory creation\n   (CASSANDRA-4847)\n * Optimize name-based queries to use ArrayBackedSortedColumns (CASSANDRA-5043)\n * Fall back to old manifest if most recent is unparseable (CASSANDRA-5041)\n * pool [Compressed]RandomAccessReader objects on the partitioned read path\n   (CASSANDRA-4942)\n * Add debug logging to list filenames processed by Directories.migrateFile\n   method (CASSANDRA-4939)\n * Expose black-listed directories via JMX (CASSANDRA-4848)\n * Log compaction merge counts (CASSANDRA-4894)\n * Minimize byte array allocation by AbstractData{Input,Output} (CASSANDRA-5090)\n * Add SSL support for the binary protocol (CASSANDRA-5031)\n * Allow non-schema system ks modification for shuffle to work (CASSANDRA-5097)\n * cqlsh: Add default limit to SELECT statements (CASSANDRA-4972)\n * cqlsh: fix DESCRIBE for 1.1 cfs in CQL3 (CASSANDRA-5101)\n * Correctly gossip with nodes >= 1.1.7 (CASSANDRA-5102)\n * Ensure CL guarantees on digest mismatch (CASSANDRA-5113)\n * Validate correctly selects on composite partition key (CASSANDRA-5122)\n * Fix exception when adding collection (CASSANDRA-5117)\n * Handle states for non-vnode clusters correctly (CASSANDRA-5127)\n * Refuse unrecognized replication and compaction strategy options (CASSANDRA-4795)\n * Pick the correct value validator in sstable2json for cql3 tables (CASSANDRA-5134)\n * Validate login for describe_keyspace, describe_keyspaces and set_keyspace\n   (CASSANDRA-5144)\n * Fix inserting empty maps (CASSANDRA-5141)\n * Don't remove tokens from System table for node we know (CASSANDRA-5121)\n * fix streaming progress report for compresed files (CASSANDRA-5130)\n * Coverage analysis for low-CL queries (CASSANDRA-4858)\n * Stop interpreting dates as valid timeUUID value (CASSANDRA-4936)\n * Adds E notation for floating point numbers (CASSANDRA-4927)\n * Detect (and warn) unintentional use of the cql2 thrift methods when cql3 was\n   intended (CASSANDRA-5172)\n * cli: Quote ks and cf names in schema output when needed (CASSANDRA-5052)\n * Fix cf name extraction from manifest in Directories.migrateFile() (CASSANDRA-5242)\n * Replace mistaken usage of commons-logging with slf4j (CASSANDRA-5464)\n * Ensure Jackson dependency matches lib (CASSANDRA-5126)\n * Expose droppable tombstone ratio stats over JMX (CASSANDRA-5159)\nMerged from 1.1:\n * Simplify CompressedRandomAccessReader to work around JDK FD bug (CASSANDRA-5088)\n * Improve handling a changing target throttle rate mid-compaction (CASSANDRA-5087)\n * Pig: correctly decode row keys in widerow mode (CASSANDRA-5098)\n * nodetool repair command now prints progress (CASSANDRA-4767)\n * fix user defined compaction to run against 1.1 data directory (CASSANDRA-5118)\n * Fix CQL3 BATCH authorization caching (CASSANDRA-5145)\n * fix get_count returns incorrect value with TTL (CASSANDRA-5099)\n * better handling for mid-compaction failure (CASSANDRA-5137)\n * convert default marshallers list to map for better readability (CASSANDRA-5109)\n * fix ConcurrentModificationException in getBootstrapSource (CASSANDRA-5170)\n * fix sstable maxtimestamp for row deletes and pre-1.1.1 sstables (CASSANDRA-5153)\n * Fix thread growth on node removal (CASSANDRA-5175)\n * Make Ec2Region's datacenter name configurable (CASSANDRA-5155)\n\n\n1.2.0\n * Disallow counters in collections (CASSANDRA-5082)\n * cqlsh: add unit tests (CASSANDRA-3920)\n * fix default bloom_filter_fp_chance for LeveledCompactionStrategy (CASSANDRA-5093)\nMerged from 1.1:\n * add validation for get_range_slices with start_key and end_token (CASSANDRA-5089)\n\n\n1.2.0-rc2\n * fix nodetool ownership display with vnodes (CASSANDRA-5065)\n * cqlsh: add DESCRIBE KEYSPACES command (CASSANDRA-5060)\n * Fix potential infinite loop when reloading CFS (CASSANDRA-5064)\n * Fix SimpleAuthorizer example (CASSANDRA-5072)\n * cqlsh: force CL.ONE for tracing and system.schema* queries (CASSANDRA-5070)\n * Includes cassandra-shuffle in the debian package (CASSANDRA-5058)\nMerged from 1.1:\n * fix multithreaded compaction deadlock (CASSANDRA-4492)\n * fix temporarily missing schema after upgrade from pre-1.1.5 (CASSANDRA-5061)\n * Fix ALTER TABLE overriding compression options with defaults\n   (CASSANDRA-4996, 5066)\n * fix specifying and altering crc_check_chance (CASSANDRA-5053)\n * fix Murmur3Partitioner ownership% calculation (CASSANDRA-5076)\n * Don't expire columns sooner than they should in 2ndary indexes (CASSANDRA-5079)\n\n\n1.2-rc1\n * rename rpc_timeout settings to request_timeout (CASSANDRA-5027)\n * add BF with 0.1 FP to LCS by default (CASSANDRA-5029)\n * Fix preparing insert queries (CASSANDRA-5016)\n * Fix preparing queries with counter increment (CASSANDRA-5022)\n * Fix preparing updates with collections (CASSANDRA-5017)\n * Don't generate UUID based on other node address (CASSANDRA-5002)\n * Fix message when trying to alter a clustering key type (CASSANDRA-5012)\n * Update IAuthenticator to match the new IAuthorizer (CASSANDRA-5003)\n * Fix inserting only a key in CQL3 (CASSANDRA-5040)\n * Fix CQL3 token() function when used with strings (CASSANDRA-5050)\nMerged from 1.1:\n * reduce log spam from invalid counter shards (CASSANDRA-5026)\n * Improve schema propagation performance (CASSANDRA-5025)\n * Fix for IndexHelper.IndexFor throws OOB Exception (CASSANDRA-5030)\n * cqlsh: make it possible to describe thrift CFs (CASSANDRA-4827)\n * cqlsh: fix timestamp formatting on some platforms (CASSANDRA-5046)\n\n\n1.2-beta3\n * make consistency level configurable in cqlsh (CASSANDRA-4829)\n * fix cqlsh rendering of blob fields (CASSANDRA-4970)\n * fix cqlsh DESCRIBE command (CASSANDRA-4913)\n * save truncation position in system table (CASSANDRA-4906)\n * Move CompressionMetadata off-heap (CASSANDRA-4937)\n * allow CLI to GET cql3 columnfamily data (CASSANDRA-4924)\n * Fix rare race condition in getExpireTimeForEndpoint (CASSANDRA-4402)\n * acquire references to overlapping sstables during compaction so bloom filter\n   doesn't get free'd prematurely (CASSANDRA-4934)\n * Don't share slice query filter in CQL3 SelectStatement (CASSANDRA-4928)\n * Separate tracing from Log4J (CASSANDRA-4861)\n * Exclude gcable tombstones from merkle-tree computation (CASSANDRA-4905)\n * Better printing of AbstractBounds for tracing (CASSANDRA-4931)\n * Optimize mostRecentTombstone check in CC.collectAllData (CASSANDRA-4883)\n * Change stream session ID to UUID to avoid collision from same node (CASSANDRA-4813)\n * Use Stats.db when bulk loading if present (CASSANDRA-4957)\n * Skip repair on system_trace and keyspaces with RF=1 (CASSANDRA-4956)\n * (cql3) Remove arbitrary SELECT limit (CASSANDRA-4918)\n * Correctly handle prepared operation on collections (CASSANDRA-4945)\n * Fix CQL3 LIMIT (CASSANDRA-4877)\n * Fix Stress for CQL3 (CASSANDRA-4979)\n * Remove cassandra specific exceptions from JMX interface (CASSANDRA-4893)\n * (CQL3) Force using ALLOW FILTERING on potentially inefficient queries (CASSANDRA-4915)\n * (cql3) Fix adding column when the table has collections (CASSANDRA-4982)\n * (cql3) Fix allowing collections with compact storage (CASSANDRA-4990)\n * (cql3) Refuse ttl/writetime function on collections (CASSANDRA-4992)\n * Replace IAuthority with new IAuthorizer (CASSANDRA-4874)\n * clqsh: fix KEY pseudocolumn escaping when describing Thrift tables\n   in CQL3 mode (CASSANDRA-4955)\n * add basic authentication support for Pig CassandraStorage (CASSANDRA-3042)\n * fix CQL2 ALTER TABLE compaction_strategy_class altering (CASSANDRA-4965)\nMerged from 1.1:\n * Fall back to old describe_splits if d_s_ex is not available (CASSANDRA-4803)\n * Improve error reporting when streaming ranges fail (CASSANDRA-5009)\n * Fix cqlsh timestamp formatting of timezone info (CASSANDRA-4746)\n * Fix assertion failure with leveled compaction (CASSANDRA-4799)\n * Check for null end_token in get_range_slice (CASSANDRA-4804)\n * Remove all remnants of removed nodes (CASSANDRA-4840)\n * Add aut-reloading of the log4j file in debian package (CASSANDRA-4855)\n * Fix estimated row cache entry size (CASSANDRA-4860)\n * reset getRangeSlice filter after finishing a row for get_paged_slice\n   (CASSANDRA-4919)\n * expunge row cache post-truncate (CASSANDRA-4940)\n * Allow static CF definition with compact storage (CASSANDRA-4910)\n * Fix endless loop/compaction of schema_* CFs due to broken timestamps (CASSANDRA-4880)\n * Fix 'wrong class type' assertion in CounterColumn (CASSANDRA-4976)\n\n\n1.2-beta2\n * fp rate of 1.0 disables BF entirely; LCS defaults to 1.0 (CASSANDRA-4876)\n * off-heap bloom filters for row keys (CASSANDRA_4865)\n * add extension point for sstable components (CASSANDRA-4049)\n * improve tracing output (CASSANDRA-4852, 4862)\n * make TRACE verb droppable (CASSANDRA-4672)\n * fix BulkLoader recognition of CQL3 columnfamilies (CASSANDRA-4755)\n * Sort commitlog segments for replay by id instead of mtime (CASSANDRA-4793)\n * Make hint delivery asynchronous (CASSANDRA-4761)\n * Pluggable Thrift transport factories for CLI and cqlsh (CASSANDRA-4609, 4610)\n * cassandra-cli: allow Double value type to be inserted to a column (CASSANDRA-4661)\n * Add ability to use custom TServerFactory implementations (CASSANDRA-4608)\n * optimize batchlog flushing to skip successful batches (CASSANDRA-4667)\n * include metadata for system keyspace itself in schema tables (CASSANDRA-4416)\n * add check to PropertyFileSnitch to verify presence of location for\n   local node (CASSANDRA-4728)\n * add PBSPredictor consistency modeler (CASSANDRA-4261)\n * remove vestiges of Thrift unframed mode (CASSANDRA-4729)\n * optimize single-row PK lookups (CASSANDRA-4710)\n * adjust blockFor calculation to account for pending ranges due to node\n   movement (CASSANDRA-833)\n * Change CQL version to 3.0.0 and stop accepting 3.0.0-beta1 (CASSANDRA-4649)\n * (CQL3) Make prepared statement global instead of per connection\n   (CASSANDRA-4449)\n * Fix scrubbing of CQL3 created tables (CASSANDRA-4685)\n * (CQL3) Fix validation when using counter and regular columns in the same\n   table (CASSANDRA-4706)\n * Fix bug starting Cassandra with simple authentication (CASSANDRA-4648)\n * Add support for batchlog in CQL3 (CASSANDRA-4545, 4738)\n * Add support for multiple column family outputs in CFOF (CASSANDRA-4208)\n * Support repairing only the local DC nodes (CASSANDRA-4747)\n * Use rpc_address for binary protocol and change default port (CASSANDRA-4751)\n * Fix use of collections in prepared statements (CASSANDRA-4739)\n * Store more information into peers table (CASSANDRA-4351, 4814)\n * Configurable bucket size for size tiered compaction (CASSANDRA-4704)\n * Run leveled compaction in parallel (CASSANDRA-4310)\n * Fix potential NPE during CFS reload (CASSANDRA-4786)\n * Composite indexes may miss results (CASSANDRA-4796)\n * Move consistency level to the protocol level (CASSANDRA-4734, 4824)\n * Fix Subcolumn slice ends not respected (CASSANDRA-4826)\n * Fix Assertion error in cql3 select (CASSANDRA-4783)\n * Fix list prepend logic (CQL3) (CASSANDRA-4835)\n * Add booleans as literals in CQL3 (CASSANDRA-4776)\n * Allow renaming PK columns in CQL3 (CASSANDRA-4822)\n * Fix binary protocol NEW_NODE event (CASSANDRA-4679)\n * Fix potential infinite loop in tombstone compaction (CASSANDRA-4781)\n * Remove system tables accounting from schema (CASSANDRA-4850)\n * (cql3) Force provided columns in clustering key order in\n   'CLUSTERING ORDER BY' (CASSANDRA-4881)\n * Fix composite index bug (CASSANDRA-4884)\n * Fix short read protection for CQL3 (CASSANDRA-4882)\n * Add tracing support to the binary protocol (CASSANDRA-4699)\n * (cql3) Don't allow prepared marker inside collections (CASSANDRA-4890)\n * Re-allow order by on non-selected columns (CASSANDRA-4645)\n * Bug when composite index is created in a table having collections (CASSANDRA-4909)\n * log index scan subject in CompositesSearcher (CASSANDRA-4904)\nMerged from 1.1:\n * add get[Row|Key]CacheEntries to CacheServiceMBean (CASSANDRA-4859)\n * fix get_paged_slice to wrap to next row correctly (CASSANDRA-4816)\n * fix indexing empty column values (CASSANDRA-4832)\n * allow JdbcDate to compose null Date objects (CASSANDRA-4830)\n * fix possible stackoverflow when compacting 1000s of sstables\n   (CASSANDRA-4765)\n * fix wrong leveled compaction progress calculation (CASSANDRA-4807)\n * add a close() method to CRAR to prevent leaking file descriptors (CASSANDRA-4820)\n * fix potential infinite loop in get_count (CASSANDRA-4833)\n * fix compositeType.{get/from}String methods (CASSANDRA-4842)\n * (CQL) fix CREATE COLUMNFAMILY permissions check (CASSANDRA-4864)\n * Fix DynamicCompositeType same type comparison (CASSANDRA-4711)\n * Fix duplicate SSTable reference when stream session failed (CASSANDRA-3306)\n * Allow static CF definition with compact storage (CASSANDRA-4910)\n * Fix endless loop/compaction of schema_* CFs due to broken timestamps (CASSANDRA-4880)\n * Fix 'wrong class type' assertion in CounterColumn (CASSANDRA-4976)\n\n\n1.2-beta1\n * add atomic_batch_mutate (CASSANDRA-4542, -4635)\n * increase default max_hint_window_in_ms to 3h (CASSANDRA-4632)\n * include message initiation time to replicas so they can more\n   accurately drop timed-out requests (CASSANDRA-2858)\n * fix clientutil.jar dependencies (CASSANDRA-4566)\n * optimize WriteResponse (CASSANDRA-4548)\n * new metrics (CASSANDRA-4009)\n * redesign KEYS indexes to avoid read-before-write (CASSANDRA-2897)\n * debug tracing (CASSANDRA-1123)\n * parallelize row cache loading (CASSANDRA-4282)\n * Make compaction, flush JBOD-aware (CASSANDRA-4292)\n * run local range scans on the read stage (CASSANDRA-3687)\n * clean up ioexceptions (CASSANDRA-2116)\n * add disk_failure_policy (CASSANDRA-2118)\n * Introduce new json format with row level deletion (CASSANDRA-4054)\n * remove redundant \"name\" column from schema_keyspaces (CASSANDRA-4433)\n * improve \"nodetool ring\" handling of multi-dc clusters (CASSANDRA-3047)\n * update NTS calculateNaturalEndpoints to be O(N log N) (CASSANDRA-3881)\n * split up rpc timeout by operation type (CASSANDRA-2819)\n * rewrite key cache save/load to use only sequential i/o (CASSANDRA-3762)\n * update MS protocol with a version handshake + broadcast address id\n   (CASSANDRA-4311)\n * multithreaded hint replay (CASSANDRA-4189)\n * add inter-node message compression (CASSANDRA-3127)\n * remove COPP (CASSANDRA-2479)\n * Track tombstone expiration and compact when tombstone content is\n   higher than a configurable threshold, default 20% (CASSANDRA-3442, 4234)\n * update MurmurHash to version 3 (CASSANDRA-2975)\n * (CLI) track elapsed time for `delete' operation (CASSANDRA-4060)\n * (CLI) jline version is bumped to 1.0 to properly  support\n   'delete' key function (CASSANDRA-4132)\n * Save IndexSummary into new SSTable 'Summary' component (CASSANDRA-2392, 4289)\n * Add support for range tombstones (CASSANDRA-3708)\n * Improve MessagingService efficiency (CASSANDRA-3617)\n * Avoid ID conflicts from concurrent schema changes (CASSANDRA-3794)\n * Set thrift HSHA server thread limit to unlimited by default (CASSANDRA-4277)\n * Avoids double serialization of CF id in RowMutation messages\n   (CASSANDRA-4293)\n * stream compressed sstables directly with java nio (CASSANDRA-4297)\n * Support multiple ranges in SliceQueryFilter (CASSANDRA-3885)\n * Add column metadata to system column families (CASSANDRA-4018)\n * (cql3) Always use composite types by default (CASSANDRA-4329)\n * (cql3) Add support for set, map and list (CASSANDRA-3647)\n * Validate date type correctly (CASSANDRA-4441)\n * (cql3) Allow definitions with only a PK (CASSANDRA-4361)\n * (cql3) Add support for row key composites (CASSANDRA-4179)\n * improve DynamicEndpointSnitch by using reservoir sampling (CASSANDRA-4038)\n * (cql3) Add support for 2ndary indexes (CASSANDRA-3680)\n * (cql3) fix defining more than one PK to be invalid (CASSANDRA-4477)\n * remove schema agreement checking from all external APIs (Thrift, CQL and CQL3) (CASSANDRA-4487)\n * add Murmur3Partitioner and make it default for new installations (CASSANDRA-3772, 4621)\n * (cql3) update pseudo-map syntax to use map syntax (CASSANDRA-4497)\n * Finer grained exceptions hierarchy and provides error code with exceptions (CASSANDRA-3979)\n * Adds events push to binary protocol (CASSANDRA-4480)\n * Rewrite nodetool help (CASSANDRA-2293)\n * Make CQL3 the default for CQL (CASSANDRA-4640)\n * update stress tool to be able to use CQL3 (CASSANDRA-4406)\n * Accept all thrift update on CQL3 cf but don't expose their metadata (CASSANDRA-4377)\n * Replace Throttle with Guava's RateLimiter for HintedHandOff (CASSANDRA-4541)\n * fix counter add/get using CQL2 and CQL3 in stress tool (CASSANDRA-4633)\n * Add sstable count per level to cfstats (CASSANDRA-4537)\n * (cql3) Add ALTER KEYSPACE statement (CASSANDRA-4611)\n * (cql3) Allow defining default consistency levels (CASSANDRA-4448)\n * (cql3) Fix queries using LIMIT missing results (CASSANDRA-4579)\n * fix cross-version gossip messaging (CASSANDRA-4576)\n * added inet data type (CASSANDRA-4627)\n\n\n1.1.6\n * Wait for writes on synchronous read digest mismatch (CASSANDRA-4792)\n * fix commitlog replay for nanotime-infected sstables (CASSANDRA-4782)\n * preflight check ttl for maximum of 20 years (CASSANDRA-4771)\n * (Pig) fix widerow input with single column rows (CASSANDRA-4789)\n * Fix HH to compact with correct gcBefore, which avoids wiping out\n   undelivered hints (CASSANDRA-4772)\n * LCS will merge up to 32 L0 sstables as intended (CASSANDRA-4778)\n * NTS will default unconfigured DC replicas to zero (CASSANDRA-4675)\n * use default consistency level in counter validation if none is\n   explicitly provide (CASSANDRA-4700)\n * Improve IAuthority interface by introducing fine-grained\n   access permissions and grant/revoke commands (CASSANDRA-4490, 4644)\n * fix assumption error in CLI when updating/describing keyspace\n   (CASSANDRA-4322)\n * Adds offline sstablescrub to debian packaging (CASSANDRA-4642)\n * Automatic fixing of overlapping leveled sstables (CASSANDRA-4644)\n * fix error when using ORDER BY with extended selections (CASSANDRA-4689)\n * (CQL3) Fix validation for IN queries for non-PK cols (CASSANDRA-4709)\n * fix re-created keyspace disappering after 1.1.5 upgrade\n   (CASSANDRA-4698, 4752)\n * (CLI) display elapsed time in 2 fraction digits (CASSANDRA-3460)\n * add authentication support to sstableloader (CASSANDRA-4712)\n * Fix CQL3 'is reversed' logic (CASSANDRA-4716, 4759)\n * (CQL3) Don't return ReversedType in result set metadata (CASSANDRA-4717)\n * Backport adding AlterKeyspace statement (CASSANDRA-4611)\n * (CQL3) Correcty accept upper-case data types (CASSANDRA-4770)\n * Add binary protocol events for schema changes (CASSANDRA-4684)\nMerged from 1.0:\n * Switch from NBHM to CHM in MessagingService's callback map, which\n   prevents OOM in long-running instances (CASSANDRA-4708)\n\n\n1.1.5\n * add SecondaryIndex.reload API (CASSANDRA-4581)\n * use millis + atomicint for commitlog segment creation instead of\n   nanotime, which has issues under some hypervisors (CASSANDRA-4601)\n * fix FD leak in slice queries (CASSANDRA-4571)\n * avoid recursion in leveled compaction (CASSANDRA-4587)\n * increase stack size under Java7 to 180K\n * Log(info) schema changes (CASSANDRA-4547)\n * Change nodetool setcachecapacity to manipulate global caches (CASSANDRA-4563)\n * (cql3) fix setting compaction strategy (CASSANDRA-4597)\n * fix broken system.schema_* timestamps on system startup (CASSANDRA-4561)\n * fix wrong skip of cache saving (CASSANDRA-4533)\n * Avoid NPE when lost+found is in data dir (CASSANDRA-4572)\n * Respect five-minute flush moratorium after initial CL replay (CASSANDRA-4474)\n * Adds ntp as recommended in debian packaging (CASSANDRA-4606)\n * Configurable transport in CF Record{Reader|Writer} (CASSANDRA-4558)\n * (cql3) fix potential NPE with both equal and unequal restriction (CASSANDRA-4532)\n * (cql3) improves ORDER BY validation (CASSANDRA-4624)\n * Fix potential deadlock during counter writes (CASSANDRA-4578)\n * Fix cql error with ORDER BY when using IN (CASSANDRA-4612)\nMerged from 1.0:\n * increase Xss to 160k to accomodate latest 1.6 JVMs (CASSANDRA-4602)\n * fix toString of hint destination tokens (CASSANDRA-4568)\n * Fix multiple values for CurrentLocal NodeID (CASSANDRA-4626)\n\n\n1.1.4\n * fix offline scrub to catch >= out of order rows (CASSANDRA-4411)\n * fix cassandra-env.sh on RHEL and other non-dash-based systems\n   (CASSANDRA-4494)\nMerged from 1.0:\n * (Hadoop) fix setting key length for old-style mapred api (CASSANDRA-4534)\n * (Hadoop) fix iterating through a resultset consisting entirely\n   of tombstoned rows (CASSANDRA-4466)\n\n\n1.1.3\n * (cqlsh) add COPY TO (CASSANDRA-4434)\n * munmap commitlog segments before rename (CASSANDRA-4337)\n * (JMX) rename getRangeKeySample to sampleKeyRange to avoid returning\n   multi-MB results as an attribute (CASSANDRA-4452)\n * flush based on data size, not throughput; overwritten columns no\n   longer artificially inflate liveRatio (CASSANDRA-4399)\n * update default commitlog segment size to 32MB and total commitlog\n   size to 32/1024 MB for 32/64 bit JVMs, respectively (CASSANDRA-4422)\n * avoid using global partitioner to estimate ranges in index sstables\n   (CASSANDRA-4403)\n * restore pre-CASSANDRA-3862 approach to removing expired tombstones\n   from row cache during compaction (CASSANDRA-4364)\n * (stress) support for CQL prepared statements (CASSANDRA-3633)\n * Correctly catch exception when Snappy cannot be loaded (CASSANDRA-4400)\n * (cql3) Support ORDER BY when IN condition is given in WHERE clause (CASSANDRA-4327)\n * (cql3) delete \"component_index\" column on DROP TABLE call (CASSANDRA-4420)\n * change nanoTime() to currentTimeInMillis() in schema related code (CASSANDRA-4432)\n * add a token generation tool (CASSANDRA-3709)\n * Fix LCS bug with sstable containing only 1 row (CASSANDRA-4411)\n * fix \"Can't Modify Index Name\" problem on CF update (CASSANDRA-4439)\n * Fix assertion error in getOverlappingSSTables during repair (CASSANDRA-4456)\n * fix nodetool's setcompactionthreshold command (CASSANDRA-4455)\n * Ensure compacted files are never used, to avoid counter overcount (CASSANDRA-4436)\nMerged from 1.0:\n * Push the validation of secondary index values to the SecondaryIndexManager (CASSANDRA-4240)\n * allow dropping columns shadowed by not-yet-expired supercolumn or row\n   tombstones in PrecompactedRow (CASSANDRA-4396)\n\n\n1.1.2\n * Fix cleanup not deleting index entries (CASSANDRA-4379)\n * Use correct partitioner when saving + loading caches (CASSANDRA-4331)\n * Check schema before trying to export sstable (CASSANDRA-2760)\n * Raise a meaningful exception instead of NPE when PFS encounters\n   an unconfigured node + no default (CASSANDRA-4349)\n * fix bug in sstable blacklisting with LCS (CASSANDRA-4343)\n * LCS no longer promotes tiny sstables out of L0 (CASSANDRA-4341)\n * skip tombstones during hint replay (CASSANDRA-4320)\n * fix NPE in compactionstats (CASSANDRA-4318)\n * enforce 1m min keycache for auto (CASSANDRA-4306)\n * Have DeletedColumn.isMFD always return true (CASSANDRA-4307)\n * (cql3) exeption message for ORDER BY constraints said primary filter can be\n    an IN clause, which is misleading (CASSANDRA-4319)\n * (cql3) Reject (not yet supported) creation of 2ndardy indexes on tables with\n   composite primary keys (CASSANDRA-4328)\n * Set JVM stack size to 160k for java 7 (CASSANDRA-4275)\n * cqlsh: add COPY command to load data from CSV flat files (CASSANDRA-4012)\n * CFMetaData.fromThrift to throw ConfigurationException upon error (CASSANDRA-4353)\n * Use CF comparator to sort indexed columns in SecondaryIndexManager\n   (CASSANDRA-4365)\n * add strategy_options to the KSMetaData.toString() output (CASSANDRA-4248)\n * (cql3) fix range queries containing unqueried results (CASSANDRA-4372)\n * (cql3) allow updating column_alias types (CASSANDRA-4041)\n * (cql3) Fix deletion bug (CASSANDRA-4193)\n * Fix computation of overlapping sstable for leveled compaction (CASSANDRA-4321)\n * Improve scrub and allow to run it offline (CASSANDRA-4321)\n * Fix assertionError in StorageService.bulkLoad (CASSANDRA-4368)\n * (cqlsh) add option to authenticate to a keyspace at startup (CASSANDRA-4108)\n * (cqlsh) fix ASSUME functionality (CASSANDRA-4352)\n * Fix ColumnFamilyRecordReader to not return progress > 100% (CASSANDRA-3942)\nMerged from 1.0:\n * Set gc_grace on index CF to 0 (CASSANDRA-4314)\n\n\n1.1.1\n * add populate_io_cache_on_flush option (CASSANDRA-2635)\n * allow larger cache capacities than 2GB (CASSANDRA-4150)\n * add getsstables command to nodetool (CASSANDRA-4199)\n * apply parent CF compaction settings to secondary index CFs (CASSANDRA-4280)\n * preserve commitlog size cap when recycling segments at startup\n   (CASSANDRA-4201)\n * (Hadoop) fix split generation regression (CASSANDRA-4259)\n * ignore min/max compactions settings in LCS, while preserving\n   behavior that min=max=0 disables autocompaction (CASSANDRA-4233)\n * log number of rows read from saved cache (CASSANDRA-4249)\n * calculate exact size required for cleanup operations (CASSANDRA-1404)\n * avoid blocking additional writes during flush when the commitlog\n   gets behind temporarily (CASSANDRA-1991)\n * enable caching on index CFs based on data CF cache setting (CASSANDRA-4197)\n * warn on invalid replication strategy creation options (CASSANDRA-4046)\n * remove [Freeable]Memory finalizers (CASSANDRA-4222)\n * include tombstone size in ColumnFamily.size, which can prevent OOM\n   during sudden mass delete operations by yielding a nonzero liveRatio\n   (CASSANDRA-3741)\n * Open 1 sstableScanner per level for leveled compaction (CASSANDRA-4142)\n * Optimize reads when row deletion timestamps allow us to restrict\n   the set of sstables we check (CASSANDRA-4116)\n * add support for commitlog archiving and point-in-time recovery\n   (CASSANDRA-3690)\n * avoid generating redundant compaction tasks during streaming\n   (CASSANDRA-4174)\n * add -cf option to nodetool snapshot, and takeColumnFamilySnapshot to\n   StorageService mbean (CASSANDRA-556)\n * optimize cleanup to drop entire sstables where possible (CASSANDRA-4079)\n * optimize truncate when autosnapshot is disabled (CASSANDRA-4153)\n * update caches to use byte[] keys to reduce memory overhead (CASSANDRA-3966)\n * add column limit to cli (CASSANDRA-3012, 4098)\n * clean up and optimize DataOutputBuffer, used by CQL compression and\n   CompositeType (CASSANDRA-4072)\n * optimize commitlog checksumming (CASSANDRA-3610)\n * identify and blacklist corrupted SSTables from future compactions\n   (CASSANDRA-2261)\n * Move CfDef and KsDef validation out of thrift (CASSANDRA-4037)\n * Expose API to repair a user provided range (CASSANDRA-3912)\n * Add way to force the cassandra-cli to refresh its schema (CASSANDRA-4052)\n * Avoid having replicate on write tasks stacking up at CL.ONE (CASSANDRA-2889)\n * (cql3) Backwards compatibility for composite comparators in non-cql3-aware\n   clients (CASSANDRA-4093)\n * (cql3) Fix order by for reversed queries (CASSANDRA-4160)\n * (cql3) Add ReversedType support (CASSANDRA-4004)\n * (cql3) Add timeuuid type (CASSANDRA-4194)\n * (cql3) Minor fixes (CASSANDRA-4185)\n * (cql3) Fix prepared statement in BATCH (CASSANDRA-4202)\n * (cql3) Reduce the list of reserved keywords (CASSANDRA-4186)\n * (cql3) Move max/min compaction thresholds to compaction strategy options\n   (CASSANDRA-4187)\n * Fix exception during move when localhost is the only source (CASSANDRA-4200)\n * (cql3) Allow paging through non-ordered partitioner results (CASSANDRA-3771)\n * (cql3) Fix drop index (CASSANDRA-4192)\n * (cql3) Don't return range ghosts anymore (CASSANDRA-3982)\n * fix re-creating Keyspaces/ColumnFamilies with the same name as dropped\n   ones (CASSANDRA-4219)\n * fix SecondaryIndex LeveledManifest save upon snapshot (CASSANDRA-4230)\n * fix missing arrayOffset in FBUtilities.hash (CASSANDRA-4250)\n * (cql3) Add name of parameters in CqlResultSet (CASSANDRA-4242)\n * (cql3) Correctly validate order by queries (CASSANDRA-4246)\n * rename stress to cassandra-stress for saner packaging (CASSANDRA-4256)\n * Fix exception on colum metadata with non-string comparator (CASSANDRA-4269)\n * Check for unknown/invalid compression options (CASSANDRA-4266)\n * (cql3) Adds simple access to column timestamp and ttl (CASSANDRA-4217)\n * (cql3) Fix range queries with secondary indexes (CASSANDRA-4257)\n * Better error messages from improper input in cli (CASSANDRA-3865)\n * Try to stop all compaction upon Keyspace or ColumnFamily drop (CASSANDRA-4221)\n * (cql3) Allow keyspace properties to contain hyphens (CASSANDRA-4278)\n * (cql3) Correctly validate keyspace access in create table (CASSANDRA-4296)\n * Avoid deadlock in migration stage (CASSANDRA-3882)\n * Take supercolumn names and deletion info into account in memtable throughput\n   (CASSANDRA-4264)\n * Add back backward compatibility for old style replication factor (CASSANDRA-4294)\n * Preserve compatibility with pre-1.1 index queries (CASSANDRA-4262)\nMerged from 1.0:\n * Fix super columns bug where cache is not updated (CASSANDRA-4190)\n * fix maxTimestamp to include row tombstones (CASSANDRA-4116)\n * (CLI) properly handle quotes in create/update keyspace commands (CASSANDRA-4129)\n * Avoids possible deadlock during bootstrap (CASSANDRA-4159)\n * fix stress tool that hangs forever on timeout or error (CASSANDRA-4128)\n * stress tool to return appropriate exit code on failure (CASSANDRA-4188)\n * fix compaction NPE when out of disk space and assertions disabled\n   (CASSANDRA-3985)\n * synchronize LCS getEstimatedTasks to avoid CME (CASSANDRA-4255)\n * ensure unique streaming session id's (CASSANDRA-4223)\n * kick off background compaction when min/max thresholds change\n   (CASSANDRA-4279)\n * improve ability of STCS.getBuckets to deal with 100s of 1000s of\n   sstables, such as when convertinb back from LCS (CASSANDRA-4287)\n * Oversize integer in CQL throws NumberFormatException (CASSANDRA-4291)\n * fix 1.0.x node join to mixed version cluster, other nodes >= 1.1 (CASSANDRA-4195)\n * Fix LCS splitting sstable base on uncompressed size (CASSANDRA-4419)\n * Push the validation of secondary index values to the SecondaryIndexManager (CASSANDRA-4240)\n * Don't purge columns during upgradesstables (CASSANDRA-4462)\n * Make cqlsh work with piping (CASSANDRA-4113)\n * Validate arguments for nodetool decommission (CASSANDRA-4061)\n * Report thrift status in nodetool info (CASSANDRA-4010)\n\n\n1.1.0-final\n * average a reduced liveRatio estimate with the previous one (CASSANDRA-4065)\n * Allow KS and CF names up to 48 characters (CASSANDRA-4157)\n * fix stress build (CASSANDRA-4140)\n * add time remaining estimate to nodetool compactionstats (CASSANDRA-4167)\n * (cql) fix NPE in cql3 ALTER TABLE (CASSANDRA-4163)\n * (cql) Add support for CL.TWO and CL.THREE in CQL (CASSANDRA-4156)\n * (cql) Fix type in CQL3 ALTER TABLE preventing update (CASSANDRA-4170)\n * (cql) Throw invalid exception from CQL3 on obsolete options (CASSANDRA-4171)\n * (cqlsh) fix recognizing uppercase SELECT keyword (CASSANDRA-4161)\n * Pig: wide row support (CASSANDRA-3909)\nMerged from 1.0:\n * avoid streaming empty files with bulk loader if sstablewriter errors out\n   (CASSANDRA-3946)\n\n\n1.1-rc1\n * Include stress tool in binary builds (CASSANDRA-4103)\n * (Hadoop) fix wide row iteration when last row read was deleted\n   (CASSANDRA-4154)\n * fix read_repair_chance to really default to 0.1 in the cli (CASSANDRA-4114)\n * Adds caching and bloomFilterFpChange to CQL options (CASSANDRA-4042)\n * Adds posibility to autoconfigure size of the KeyCache (CASSANDRA-4087)\n * fix KEYS index from skipping results (CASSANDRA-3996)\n * Remove sliced_buffer_size_in_kb dead option (CASSANDRA-4076)\n * make loadNewSStable preserve sstable version (CASSANDRA-4077)\n * Respect 1.0 cache settings as much as possible when upgrading\n   (CASSANDRA-4088)\n * relax path length requirement for sstable files when upgrading on\n   non-Windows platforms (CASSANDRA-4110)\n * fix terminination of the stress.java when errors were encountered\n   (CASSANDRA-4128)\n * Move CfDef and KsDef validation out of thrift (CASSANDRA-4037)\n * Fix get_paged_slice (CASSANDRA-4136)\n * CQL3: Support slice with exclusive start and stop (CASSANDRA-3785)\nMerged from 1.0:\n * support PropertyFileSnitch in bulk loader (CASSANDRA-4145)\n * add auto_snapshot option allowing disabling snapshot before drop/truncate\n   (CASSANDRA-3710)\n * allow short snitch names (CASSANDRA-4130)\n\n\n1.1-beta2\n * rename loaded sstables to avoid conflicts with local snapshots\n   (CASSANDRA-3967)\n * start hint replay as soon as FD notifies that the target is back up\n   (CASSANDRA-3958)\n * avoid unproductive deserializing of cached rows during compaction\n   (CASSANDRA-3921)\n * fix concurrency issues with CQL keyspace creation (CASSANDRA-3903)\n * Show Effective Owership via Nodetool ring <keyspace> (CASSANDRA-3412)\n * Update ORDER BY syntax for CQL3 (CASSANDRA-3925)\n * Fix BulkRecordWriter to not throw NPE if reducer gets no map data from Hadoop (CASSANDRA-3944)\n * Fix bug with counters in super columns (CASSANDRA-3821)\n * Remove deprecated merge_shard_chance (CASSANDRA-3940)\n * add a convenient way to reset a node's schema (CASSANDRA-2963)\n * fix for intermittent SchemaDisagreementException (CASSANDRA-3884)\n * CLI `list <CF>` to limit number of columns and their order (CASSANDRA-3012)\n * ignore deprecated KsDef/CfDef/ColumnDef fields in native schema (CASSANDRA-3963)\n * CLI to report when unsupported column_metadata pair was given (CASSANDRA-3959)\n * reincarnate removed and deprecated KsDef/CfDef attributes (CASSANDRA-3953)\n * Fix race between writes and read for cache (CASSANDRA-3862)\n * perform static initialization of StorageProxy on start-up (CASSANDRA-3797)\n * support trickling fsync() on writes (CASSANDRA-3950)\n * expose counters for unavailable/timeout exceptions given to thrift clients (CASSANDRA-3671)\n * avoid quadratic startup time in LeveledManifest (CASSANDRA-3952)\n * Add type information to new schema_ columnfamilies and remove thrift\n   serialization for schema (CASSANDRA-3792)\n * add missing column validator options to the CLI help (CASSANDRA-3926)\n * skip reading saved key cache if CF's caching strategy is NONE or ROWS_ONLY (CASSANDRA-3954)\n * Unify migration code (CASSANDRA-4017)\nMerged from 1.0:\n * cqlsh: guess correct version of Python for Arch Linux (CASSANDRA-4090)\n * (CLI) properly handle quotes in create/update keyspace commands (CASSANDRA-4129)\n * Avoids possible deadlock during bootstrap (CASSANDRA-4159)\n * fix stress tool that hangs forever on timeout or error (CASSANDRA-4128)\n * Fix super columns bug where cache is not updated (CASSANDRA-4190)\n * stress tool to return appropriate exit code on failure (CASSANDRA-4188)\n\n\n1.0.9\n * improve index sampling performance (CASSANDRA-4023)\n * always compact away deleted hints immediately after handoff (CASSANDRA-3955)\n * delete hints from dropped ColumnFamilies on handoff instead of\n   erroring out (CASSANDRA-3975)\n * add CompositeType ref to the CLI doc for create/update column family (CASSANDRA-3980)\n * Pig: support Counter ColumnFamilies (CASSANDRA-3973)\n * Pig: Composite column support (CASSANDRA-3684)\n * Avoid NPE during repair when a keyspace has no CFs (CASSANDRA-3988)\n * Fix division-by-zero error on get_slice (CASSANDRA-4000)\n * don't change manifest level for cleanup, scrub, and upgradesstables\n   operations under LeveledCompactionStrategy (CASSANDRA-3989, 4112)\n * fix race leading to super columns assertion failure (CASSANDRA-3957)\n * fix NPE on invalid CQL delete command (CASSANDRA-3755)\n * allow custom types in CLI's assume command (CASSANDRA-4081)\n * fix totalBytes count for parallel compactions (CASSANDRA-3758)\n * fix intermittent NPE in get_slice (CASSANDRA-4095)\n * remove unnecessary asserts in native code interfaces (CASSANDRA-4096)\n * Validate blank keys in CQL to avoid assertion errors (CASSANDRA-3612)\n * cqlsh: fix bad decoding of some column names (CASSANDRA-4003)\n * cqlsh: fix incorrect padding with unicode chars (CASSANDRA-4033)\n * Fix EC2 snitch incorrectly reporting region (CASSANDRA-4026)\n * Shut down thrift during decommission (CASSANDRA-4086)\n * Expose nodetool cfhistograms for 2ndary indexes (CASSANDRA-4063)\nMerged from 0.8:\n * Fix ConcurrentModificationException in gossiper (CASSANDRA-4019)\n\n\n1.1-beta1\n * (cqlsh)\n   + add SOURCE and CAPTURE commands, and --file option (CASSANDRA-3479)\n   + add ALTER COLUMNFAMILY WITH (CASSANDRA-3523)\n   + bundle Python dependencies with Cassandra (CASSANDRA-3507)\n   + added to Debian package (CASSANDRA-3458)\n   + display byte data instead of erroring out on decode failure\n     (CASSANDRA-3874)\n * add nodetool rebuild_index (CASSANDRA-3583)\n * add nodetool rangekeysample (CASSANDRA-2917)\n * Fix streaming too much data during move operations (CASSANDRA-3639)\n * Nodetool and CLI connect to localhost by default (CASSANDRA-3568)\n * Reduce memory used by primary index sample (CASSANDRA-3743)\n * (Hadoop) separate input/output configurations (CASSANDRA-3197, 3765)\n * avoid returning internal Cassandra classes over JMX (CASSANDRA-2805)\n * add row-level isolation via SnapTree (CASSANDRA-2893)\n * Optimize key count estimation when opening sstable on startup\n   (CASSANDRA-2988)\n * multi-dc replication optimization supporting CL > ONE (CASSANDRA-3577)\n * add command to stop compactions (CASSANDRA-1740, 3566, 3582)\n * multithreaded streaming (CASSANDRA-3494)\n * removed in-tree redhat spec (CASSANDRA-3567)\n * \"defragment\" rows for name-based queries under STCS, again (CASSANDRA-2503)\n * Recycle commitlog segments for improved performance\n   (CASSANDRA-3411, 3543, 3557, 3615)\n * update size-tiered compaction to prioritize small tiers (CASSANDRA-2407)\n * add message expiration logic to OutboundTcpConnection (CASSANDRA-3005)\n * off-heap cache to use sun.misc.Unsafe instead of JNA (CASSANDRA-3271)\n * EACH_QUORUM is only supported for writes (CASSANDRA-3272)\n * replace compactionlock use in schema migration by checking CFS.isValid\n   (CASSANDRA-3116)\n * recognize that \"SELECT first ... *\" isn't really \"SELECT *\" (CASSANDRA-3445)\n * Use faster bytes comparison (CASSANDRA-3434)\n * Bulk loader is no longer a fat client, (HADOOP) bulk load output format\n   (CASSANDRA-3045)\n * (Hadoop) add support for KeyRange.filter\n * remove assumption that keys and token are in bijection\n   (CASSANDRA-1034, 3574, 3604)\n * always remove endpoints from delevery queue in HH (CASSANDRA-3546)\n * fix race between cf flush and its 2ndary indexes flush (CASSANDRA-3547)\n * fix potential race in AES when a repair fails (CASSANDRA-3548)\n * Remove columns shadowed by a deleted container even when we cannot purge\n   (CASSANDRA-3538)\n * Improve memtable slice iteration performance (CASSANDRA-3545)\n * more efficient allocation of small bloom filters (CASSANDRA-3618)\n * Use separate writer thread in SSTableSimpleUnsortedWriter (CASSANDRA-3619)\n * fsync the directory after new sstable or commitlog segment are created (CASSANDRA-3250)\n * fix minor issues reported by FindBugs (CASSANDRA-3658)\n * global key/row caches (CASSANDRA-3143, 3849)\n * optimize memtable iteration during range scan (CASSANDRA-3638)\n * introduce 'crc_check_chance' in CompressionParameters to support\n   a checksum percentage checking chance similarly to read-repair (CASSANDRA-3611)\n * a way to deactivate global key/row cache on per-CF basis (CASSANDRA-3667)\n * fix LeveledCompactionStrategy broken because of generation pre-allocation\n   in LeveledManifest (CASSANDRA-3691)\n * finer-grained control over data directories (CASSANDRA-2749)\n * Fix ClassCastException during hinted handoff (CASSANDRA-3694)\n * Upgrade Thrift to 0.7 (CASSANDRA-3213)\n * Make stress.java insert operation to use microseconds (CASSANDRA-3725)\n * Allows (internally) doing a range query with a limit of columns instead of\n   rows (CASSANDRA-3742)\n * Allow rangeSlice queries to be start/end inclusive/exclusive (CASSANDRA-3749)\n * Fix BulkLoader to support new SSTable layout and add stream\n   throttling to prevent an NPE when there is no yaml config (CASSANDRA-3752)\n * Allow concurrent schema migrations (CASSANDRA-1391, 3832)\n * Add SnapshotCommand to trigger snapshot on remote node (CASSANDRA-3721)\n * Make CFMetaData conversions to/from thrift/native schema inverses\n   (CASSANDRA_3559)\n * Add initial code for CQL 3.0-beta (CASSANDRA-2474, 3781, 3753)\n * Add wide row support for ColumnFamilyInputFormat (CASSANDRA-3264)\n * Allow extending CompositeType comparator (CASSANDRA-3657)\n * Avoids over-paging during get_count (CASSANDRA-3798)\n * Add new command to rebuild a node without (repair) merkle tree calculations\n   (CASSANDRA-3483, 3922)\n * respect not only row cache capacity but caching mode when\n   trying to read data (CASSANDRA-3812)\n * fix system tests (CASSANDRA-3827)\n * CQL support for altering row key type in ALTER TABLE (CASSANDRA-3781)\n * turn compression on by default (CASSANDRA-3871)\n * make hexToBytes refuse invalid input (CASSANDRA-2851)\n * Make secondary indexes CF inherit compression and compaction from their\n   parent CF (CASSANDRA-3877)\n * Finish cleanup up tombstone purge code (CASSANDRA-3872)\n * Avoid NPE on aboarted stream-out sessions (CASSANDRA-3904)\n * BulkRecordWriter throws NPE for counter columns (CASSANDRA-3906)\n * Support compression using BulkWriter (CASSANDRA-3907)\n\n\n1.0.8\n * fix race between cleanup and flush on secondary index CFSes (CASSANDRA-3712)\n * avoid including non-queried nodes in rangeslice read repair\n   (CASSANDRA-3843)\n * Only snapshot CF being compacted for snapshot_before_compaction\n   (CASSANDRA-3803)\n * Log active compactions in StatusLogger (CASSANDRA-3703)\n * Compute more accurate compaction score per level (CASSANDRA-3790)\n * Return InvalidRequest when using a keyspace that doesn't exist\n   (CASSANDRA-3764)\n * disallow user modification of System keyspace (CASSANDRA-3738)\n * allow using sstable2json on secondary index data (CASSANDRA-3738)\n * (cqlsh) add DESCRIBE COLUMNFAMILIES (CASSANDRA-3586)\n * (cqlsh) format blobs correctly and use colors to improve output\n   readability (CASSANDRA-3726)\n * synchronize BiMap of bootstrapping tokens (CASSANDRA-3417)\n * show index options in CLI (CASSANDRA-3809)\n * add optional socket timeout for streaming (CASSANDRA-3838)\n * fix truncate not to leave behind non-CFS backed secondary indexes\n   (CASSANDRA-3844)\n * make CLI `show schema` to use output stream directly instead\n   of StringBuilder (CASSANDRA-3842)\n * remove the wait on hint future during write (CASSANDRA-3870)\n * (cqlsh) ignore missing CfDef opts (CASSANDRA-3933)\n * (cqlsh) look for cqlshlib relative to realpath (CASSANDRA-3767)\n * Fix short read protection (CASSANDRA-3934)\n * Make sure infered and actual schema match (CASSANDRA-3371)\n * Fix NPE during HH delivery (CASSANDRA-3677)\n * Don't put boostrapping node in 'hibernate' status (CASSANDRA-3737)\n * Fix double quotes in windows bat files (CASSANDRA-3744)\n * Fix bad validator lookup (CASSANDRA-3789)\n * Fix soft reset in EC2MultiRegionSnitch (CASSANDRA-3835)\n * Don't leave zombie connections with THSHA thrift server (CASSANDRA-3867)\n * (cqlsh) fix deserialization of data (CASSANDRA-3874)\n * Fix removetoken force causing an inconsistent state (CASSANDRA-3876)\n * Fix ahndling of some types with Pig (CASSANDRA-3886)\n * Don't allow to drop the system keyspace (CASSANDRA-3759)\n * Make Pig deletes disabled by default and configurable (CASSANDRA-3628)\nMerged from 0.8:\n * (Pig) fix CassandraStorage to use correct comparator in Super ColumnFamily\n   case (CASSANDRA-3251)\n * fix thread safety issues in commitlog replay, primarily affecting\n   systems with many (100s) of CF definitions (CASSANDRA-3751)\n * Fix relevant tombstone ignored with super columns (CASSANDRA-3875)\n\n\n1.0.7\n * fix regression in HH page size calculation (CASSANDRA-3624)\n * retry failed stream on IOException (CASSANDRA-3686)\n * allow configuring bloom_filter_fp_chance (CASSANDRA-3497)\n * attempt hint delivery every ten minutes, or when failure detector\n   notifies us that a node is back up, whichever comes first.  hint\n   handoff throttle delay default changed to 1ms, from 50 (CASSANDRA-3554)\n * add nodetool setstreamthroughput (CASSANDRA-3571)\n * fix assertion when dropping a columnfamily with no sstables (CASSANDRA-3614)\n * more efficient allocation of small bloom filters (CASSANDRA-3618)\n * CLibrary.createHardLinkWithExec() to check for errors (CASSANDRA-3101)\n * Avoid creating empty and non cleaned writer during compaction (CASSANDRA-3616)\n * stop thrift service in shutdown hook so we can quiesce MessagingService\n   (CASSANDRA-3335)\n * (CQL) compaction_strategy_options and compression_parameters for\n   CREATE COLUMNFAMILY statement (CASSANDRA-3374)\n * Reset min/max compaction threshold when creating size tiered compaction\n   strategy (CASSANDRA-3666)\n * Don't ignore IOException during compaction (CASSANDRA-3655)\n * Fix assertion error for CF with gc_grace=0 (CASSANDRA-3579)\n * Shutdown ParallelCompaction reducer executor after use (CASSANDRA-3711)\n * Avoid < 0 value for pending tasks in leveled compaction (CASSANDRA-3693)\n * (Hadoop) Support TimeUUID in Pig CassandraStorage (CASSANDRA-3327)\n * Check schema is ready before continuing boostrapping (CASSANDRA-3629)\n * Catch overflows during parsing of chunk_length_kb (CASSANDRA-3644)\n * Improve stream protocol mismatch errors (CASSANDRA-3652)\n * Avoid multiple thread doing HH to the same target (CASSANDRA-3681)\n * Add JMX property for rp_timeout_in_ms (CASSANDRA-2940)\n * Allow DynamicCompositeType to compare component of different types\n   (CASSANDRA-3625)\n * Flush non-cfs backed secondary indexes (CASSANDRA-3659)\n * Secondary Indexes should report memory consumption (CASSANDRA-3155)\n * fix for SelectStatement start/end key are not set correctly\n   when a key alias is involved (CASSANDRA-3700)\n * fix CLI `show schema` command insert of an extra comma in\n   column_metadata (CASSANDRA-3714)\nMerged from 0.8:\n * avoid logging (harmless) exception when GC takes < 1ms (CASSANDRA-3656)\n * prevent new nodes from thinking down nodes are up forever (CASSANDRA-3626)\n * use correct list of replicas for LOCAL_QUORUM reads when read repair\n   is disabled (CASSANDRA-3696)\n * block on flush before compacting hints (may prevent OOM) (CASSANDRA-3733)\n\n\n1.0.6\n * (CQL) fix cqlsh support for replicate_on_write (CASSANDRA-3596)\n * fix adding to leveled manifest after streaming (CASSANDRA-3536)\n * filter out unavailable cipher suites when using encryption (CASSANDRA-3178)\n * (HADOOP) add old-style api support for CFIF and CFRR (CASSANDRA-2799)\n * Support TimeUUIDType column names in Stress.java tool (CASSANDRA-3541)\n * (CQL) INSERT/UPDATE/DELETE/TRUNCATE commands should allow CF names to\n   be qualified by keyspace (CASSANDRA-3419)\n * always remove endpoints from delevery queue in HH (CASSANDRA-3546)\n * fix race between cf flush and its 2ndary indexes flush (CASSANDRA-3547)\n * fix potential race in AES when a repair fails (CASSANDRA-3548)\n * fix default value validation usage in CLI SET command (CASSANDRA-3553)\n * Optimize componentsFor method for compaction and startup time\n   (CASSANDRA-3532)\n * (CQL) Proper ColumnFamily metadata validation on CREATE COLUMNFAMILY\n   (CASSANDRA-3565)\n * fix compression \"chunk_length_kb\" option to set correct kb value for\n   thrift/avro (CASSANDRA-3558)\n * fix missing response during range slice repair (CASSANDRA-3551)\n * 'describe ring' moved from CLI to nodetool and available through JMX (CASSANDRA-3220)\n * add back partitioner to sstable metadata (CASSANDRA-3540)\n * fix NPE in get_count for counters (CASSANDRA-3601)\nMerged from 0.8:\n * remove invalid assertion that table was opened before dropping it\n   (CASSANDRA-3580)\n * range and index scans now only send requests to enough replicas to\n   satisfy requested CL + RR (CASSANDRA-3598)\n * use cannonical host for local node in nodetool info (CASSANDRA-3556)\n * remove nonlocal DC write optimization since it only worked with\n   CL.ONE or CL.LOCAL_QUORUM (CASSANDRA-3577, 3585)\n * detect misuses of CounterColumnType (CASSANDRA-3422)\n * turn off string interning in json2sstable, take 2 (CASSANDRA-2189)\n * validate compression parameters on add/update of the ColumnFamily\n   (CASSANDRA-3573)\n * Check for 0.0.0.0 is incorrect in CFIF (CASSANDRA-3584)\n * Increase vm.max_map_count in debian packaging (CASSANDRA-3563)\n * gossiper will never add itself to saved endpoints (CASSANDRA-3485)\n\n\n1.0.5\n * revert CASSANDRA-3407 (see CASSANDRA-3540)\n * fix assertion error while forwarding writes to local nodes (CASSANDRA-3539)\n\n\n1.0.4\n * fix self-hinting of timed out read repair updates and make hinted handoff\n   less prone to OOMing a coordinator (CASSANDRA-3440)\n * expose bloom filter sizes via JMX (CASSANDRA-3495)\n * enforce RP tokens 0..2**127 (CASSANDRA-3501)\n * canonicalize paths exposed through JMX (CASSANDRA-3504)\n * fix \"liveSize\" stat when sstables are removed (CASSANDRA-3496)\n * add bloom filter FP rates to nodetool cfstats (CASSANDRA-3347)\n * record partitioner in sstable metadata component (CASSANDRA-3407)\n * add new upgradesstables nodetool command (CASSANDRA-3406)\n * skip --debug requirement to see common exceptions in CLI (CASSANDRA-3508)\n * fix incorrect query results due to invalid max timestamp (CASSANDRA-3510)\n * make sstableloader recognize compressed sstables (CASSANDRA-3521)\n * avoids race in OutboundTcpConnection in multi-DC setups (CASSANDRA-3530)\n * use SETLOCAL in cassandra.bat (CASSANDRA-3506)\n * fix ConcurrentModificationException in Table.all() (CASSANDRA-3529)\nMerged from 0.8:\n * fix concurrence issue in the FailureDetector (CASSANDRA-3519)\n * fix array out of bounds error in counter shard removal (CASSANDRA-3514)\n * avoid dropping tombstones when they might still be needed to shadow\n   data in a different sstable (CASSANDRA-2786)\n\n\n1.0.3\n * revert name-based query defragmentation aka CASSANDRA-2503 (CASSANDRA-3491)\n * fix invalidate-related test failures (CASSANDRA-3437)\n * add next-gen cqlsh to bin/ (CASSANDRA-3188, 3131, 3493)\n * (CQL) fix handling of rows with no columns (CASSANDRA-3424, 3473)\n * fix querying supercolumns by name returning only a subset of\n   subcolumns or old subcolumn versions (CASSANDRA-3446)\n * automatically compute sha1 sum for uncompressed data files (CASSANDRA-3456)\n * fix reading metadata/statistics component for version < h (CASSANDRA-3474)\n * add sstable forward-compatibility (CASSANDRA-3478)\n * report compression ratio in CFSMBean (CASSANDRA-3393)\n * fix incorrect size exception during streaming of counters (CASSANDRA-3481)\n * (CQL) fix for counter decrement syntax (CASSANDRA-3418)\n * Fix race introduced by CASSANDRA-2503 (CASSANDRA-3482)\n * Fix incomplete deletion of delivered hints (CASSANDRA-3466)\n * Avoid rescheduling compactions when no compaction was executed\n   (CASSANDRA-3484)\n * fix handling of the chunk_length_kb compression options (CASSANDRA-3492)\nMerged from 0.8:\n * fix updating CF row_cache_provider (CASSANDRA-3414)\n * CFMetaData.convertToThrift method to set RowCacheProvider (CASSANDRA-3405)\n * acquire compactionlock during truncate (CASSANDRA-3399)\n * fix displaying cfdef entries for super columnfamilies (CASSANDRA-3415)\n * Make counter shard merging thread safe (CASSANDRA-3178)\n * Revert CASSANDRA-2855\n * Fix bug preventing the use of efficient cross-DC writes (CASSANDRA-3472)\n * `describe ring` command for CLI (CASSANDRA-3220)\n * (Hadoop) skip empty rows when entire row is requested, redux (CASSANDRA-2855)\n\n\n1.0.2\n * \"defragment\" rows for name-based queries under STCS (CASSANDRA-2503)\n * Add timing information to cassandra-cli GET/SET/LIST queries (CASSANDRA-3326)\n * Only create one CompressionMetadata object per sstable (CASSANDRA-3427)\n * cleanup usage of StorageService.setMode() (CASSANDRA-3388)\n * Avoid large array allocation for compressed chunk offsets (CASSANDRA-3432)\n * fix DecimalType bytebuffer marshalling (CASSANDRA-3421)\n * fix bug that caused first column in per row indexes to be ignored\n   (CASSANDRA-3441)\n * add JMX call to clean (failed) repair sessions (CASSANDRA-3316)\n * fix sstableloader reference acquisition bug (CASSANDRA-3438)\n * fix estimated row size regression (CASSANDRA-3451)\n * make sure we don't return more columns than asked (CASSANDRA-3303, 3395)\nMerged from 0.8:\n * acquire compactionlock during truncate (CASSANDRA-3399)\n * fix displaying cfdef entries for super columnfamilies (CASSANDRA-3415)\n\n\n1.0.1\n * acquire references during index build to prevent delete problems\n   on Windows (CASSANDRA-3314)\n * describe_ring should include datacenter/topology information (CASSANDRA-2882)\n * Thrift sockets are not properly buffered (CASSANDRA-3261)\n * performance improvement for bytebufferutil compare function (CASSANDRA-3286)\n * add system.versions ColumnFamily (CASSANDRA-3140)\n * reduce network copies (CASSANDRA-3333, 3373)\n * limit nodetool to 32MB of heap (CASSANDRA-3124)\n * (CQL) update parser to accept \"timestamp\" instead of \"date\" (CASSANDRA-3149)\n * Fix CLI `show schema` to include \"compression_options\" (CASSANDRA-3368)\n * Snapshot to include manifest under LeveledCompactionStrategy (CASSANDRA-3359)\n * (CQL) SELECT query should allow CF name to be qualified by keyspace (CASSANDRA-3130)\n * (CQL) Fix internal application error specifying 'using consistency ...'\n   in lower case (CASSANDRA-3366)\n * fix Deflate compression when compression actually makes the data bigger\n   (CASSANDRA-3370)\n * optimize UUIDGen to avoid lock contention on InetAddress.getLocalHost\n   (CASSANDRA-3387)\n * tolerate index being dropped mid-mutation (CASSANDRA-3334, 3313)\n * CompactionManager is now responsible for checking for new candidates\n   post-task execution, enabling more consistent leveled compaction\n   (CASSANDRA-3391)\n * Cache HSHA threads (CASSANDRA-3372)\n * use CF/KS names as snapshot prefix for drop + truncate operations\n   (CASSANDRA-2997)\n * Break bloom filters up to avoid heap fragmentation (CASSANDRA-2466)\n * fix cassandra hanging on jsvc stop (CASSANDRA-3302)\n * Avoid leveled compaction getting blocked on errors (CASSANDRA-3408)\n * Make reloading the compaction strategy safe (CASSANDRA-3409)\n * ignore 0.8 hints even if compaction begins before we try to purge\n   them (CASSANDRA-3385)\n * remove procrun (bin\\daemon) from Cassandra source tree and\n   artifacts (CASSANDRA-3331)\n * make cassandra compile under JDK7 (CASSANDRA-3275)\n * remove dependency of clientutil.jar to FBUtilities (CASSANDRA-3299)\n * avoid truncation errors by using long math on long values (CASSANDRA-3364)\n * avoid clock drift on some Windows machine (CASSANDRA-3375)\n * display cache provider in cli 'describe keyspace' command (CASSANDRA-3384)\n * fix incomplete topology information in describe_ring (CASSANDRA-3403)\n * expire dead gossip states based on time (CASSANDRA-2961)\n * improve CompactionTask extensibility (CASSANDRA-3330)\n * Allow one leveled compaction task to kick off another (CASSANDRA-3363)\n * allow encryption only between datacenters (CASSANDRA-2802)\nMerged from 0.8:\n * fix truncate allowing data to be replayed post-restart (CASSANDRA-3297)\n * make iwriter final in IndexWriter to avoid NPE (CASSANDRA-2863)\n * (CQL) update grammar to require key clause in DELETE statement\n   (CASSANDRA-3349)\n * (CQL) allow numeric keyspace names in USE statement (CASSANDRA-3350)\n * (Hadoop) skip empty rows when slicing the entire row (CASSANDRA-2855)\n * Fix handling of tombstone by SSTableExport/Import (CASSANDRA-3357)\n * fix ColumnIndexer to use long offsets (CASSANDRA-3358)\n * Improved CLI exceptions (CASSANDRA-3312)\n * Fix handling of tombstone by SSTableExport/Import (CASSANDRA-3357)\n * Only count compaction as active (for throttling) when they have\n   successfully acquired the compaction lock (CASSANDRA-3344)\n * Display CLI version string on startup (CASSANDRA-3196)\n * (Hadoop) make CFIF try rpc_address or fallback to listen_address\n   (CASSANDRA-3214)\n * (Hadoop) accept comma delimited lists of initial thrift connections\n   (CASSANDRA-3185)\n * ColumnFamily min_compaction_threshold should be >= 2 (CASSANDRA-3342)\n * (Pig) add 0.8+ types and key validation type in schema (CASSANDRA-3280)\n * Fix completely removing column metadata using CLI (CASSANDRA-3126)\n * CLI `describe cluster;` output should be on separate lines for separate versions\n   (CASSANDRA-3170)\n * fix changing durable_writes keyspace option during CF creation\n   (CASSANDRA-3292)\n * avoid locking on update when no indexes are involved (CASSANDRA-3386)\n * fix assertionError during repair with ordered partitioners (CASSANDRA-3369)\n * correctly serialize key_validation_class for avro (CASSANDRA-3391)\n * don't expire counter tombstone after streaming (CASSANDRA-3394)\n * prevent nodes that failed to join from hanging around forever\n   (CASSANDRA-3351)\n * remove incorrect optimization from slice read path (CASSANDRA-3390)\n * Fix race in AntiEntropyService (CASSANDRA-3400)\n\n\n1.0.0-final\n * close scrubbed sstable fd before deleting it (CASSANDRA-3318)\n * fix bug preventing obsolete commitlog segments from being removed\n   (CASSANDRA-3269)\n * tolerate whitespace in seed CDL (CASSANDRA-3263)\n * Change default heap thresholds to max(min(1/2 ram, 1G), min(1/4 ram, 8GB))\n   (CASSANDRA-3295)\n * Fix broken CompressedRandomAccessReaderTest (CASSANDRA-3298)\n * (CQL) fix type information returned for wildcard queries (CASSANDRA-3311)\n * add estimated tasks to LeveledCompactionStrategy (CASSANDRA-3322)\n * avoid including compaction cache-warming in keycache stats (CASSANDRA-3325)\n * run compaction and hinted handoff threads at MIN_PRIORITY (CASSANDRA-3308)\n * default hsha thrift server to cpu core count in rpc pool (CASSANDRA-3329)\n * add bin\\daemon to binary tarball for Windows service (CASSANDRA-3331)\n * Fix places where uncompressed size of sstables was use in place of the\n   compressed one (CASSANDRA-3338)\n * Fix hsha thrift server (CASSANDRA-3346)\n * Make sure repair only stream needed sstables (CASSANDRA-3345)\n\n\n1.0.0-rc2\n * Log a meaningful warning when a node receives a message for a repair session\n   that doesn't exist anymore (CASSANDRA-3256)\n * test for NUMA policy support as well as numactl presence (CASSANDRA-3245)\n * Fix FD leak when internode encryption is enabled (CASSANDRA-3257)\n * Remove incorrect assertion in mergeIterator (CASSANDRA-3260)\n * FBUtilities.hexToBytes(String) to throw NumberFormatException when string\n   contains non-hex characters (CASSANDRA-3231)\n * Keep SimpleSnitch proximity ordering unchanged from what the Strategy\n   generates, as intended (CASSANDRA-3262)\n * remove Scrub from compactionstats when finished (CASSANDRA-3255)\n * fix counter entry in jdbc TypesMap (CASSANDRA-3268)\n * fix full queue scenario for ParallelCompactionIterator (CASSANDRA-3270)\n * fix bootstrap process (CASSANDRA-3285)\n * don't try delivering hints if when there isn't any (CASSANDRA-3176)\n * CLI documentation change for ColumnFamily `compression_options` (CASSANDRA-3282)\n * ignore any CF ids sent by client for adding CF/KS (CASSANDRA-3288)\n * remove obsolete hints on first startup (CASSANDRA-3291)\n * use correct ISortedColumns for time-optimized reads (CASSANDRA-3289)\n * Evict gossip state immediately when a token is taken over by a new IP\n   (CASSANDRA-3259)\n\n\n1.0.0-rc1\n * Update CQL to generate microsecond timestamps by default (CASSANDRA-3227)\n * Fix counting CFMetadata towards Memtable liveRatio (CASSANDRA-3023)\n * Kill server on wrapped OOME such as from FileChannel.map (CASSANDRA-3201)\n * remove unnecessary copy when adding to row cache (CASSANDRA-3223)\n * Log message when a full repair operation completes (CASSANDRA-3207)\n * Fix streamOutSession keeping sstables references forever if the remote end\n   dies (CASSANDRA-3216)\n * Remove dynamic_snitch boolean from example configuration (defaulting to\n   true) and set default badness threshold to 0.1 (CASSANDRA-3229)\n * Base choice of random or \"balanced\" token on bootstrap on whether\n   schema definitions were found (CASSANDRA-3219)\n * Fixes for LeveledCompactionStrategy score computation, prioritization,\n   scheduling, and performance (CASSANDRA-3224, 3234)\n * parallelize sstable open at server startup (CASSANDRA-2988)\n * fix handling of exceptions writing to OutboundTcpConnection (CASSANDRA-3235)\n * Allow using quotes in \"USE <keyspace>;\" CLI command (CASSANDRA-3208)\n * Don't allow any cache loading exceptions to halt startup (CASSANDRA-3218)\n * Fix sstableloader --ignores option (CASSANDRA-3247)\n * File descriptor limit increased in packaging (CASSANDRA-3206)\n * Fix deadlock in commit log during flush (CASSANDRA-3253)\n\n\n1.0.0-beta1\n * removed binarymemtable (CASSANDRA-2692)\n * add commitlog_total_space_in_mb to prevent fragmented logs (CASSANDRA-2427)\n * removed commitlog_rotation_threshold_in_mb configuration (CASSANDRA-2771)\n * make AbstractBounds.normalize de-overlapp overlapping ranges (CASSANDRA-2641)\n * replace CollatingIterator, ReducingIterator with MergeIterator\n   (CASSANDRA-2062)\n * Fixed the ability to set compaction strategy in cli using create column\n   family command (CASSANDRA-2778)\n * clean up tmp files after failed compaction (CASSANDRA-2468)\n * restrict repair streaming to specific columnfamilies (CASSANDRA-2280)\n * don't bother persisting columns shadowed by a row tombstone (CASSANDRA-2589)\n * reset CF and SC deletion times after gc_grace (CASSANDRA-2317)\n * optimize away seek when compacting wide rows (CASSANDRA-2879)\n * single-pass streaming (CASSANDRA-2677, 2906, 2916, 3003)\n * use reference counting for deleting sstables instead of relying on GC\n   (CASSANDRA-2521, 3179)\n * store hints as serialized mutations instead of pointers to data row\n   (CASSANDRA-2045)\n * store hints in the coordinator node instead of in the closest replica\n   (CASSANDRA-2914)\n * add row_cache_keys_to_save CF option (CASSANDRA-1966)\n * check column family validity in nodetool repair (CASSANDRA-2933)\n * use lazy initialization instead of class initialization in NodeId\n   (CASSANDRA-2953)\n * add paging to get_count (CASSANDRA-2894)\n * fix \"short reads\" in [multi]get (CASSANDRA-2643, 3157, 3192)\n * add optional compression for sstables (CASSANDRA-47, 2994, 3001, 3128)\n * add scheduler JMX metrics (CASSANDRA-2962)\n * add block level checksum for compressed data (CASSANDRA-1717)\n * make column family backed column map pluggable and introduce unsynchronized\n   ArrayList backed one to speedup reads (CASSANDRA-2843, 3165, 3205)\n * refactoring of the secondary index api (CASSANDRA-2982)\n * make CL > ONE reads wait for digest reconciliation before returning\n   (CASSANDRA-2494)\n * fix missing logging for some exceptions (CASSANDRA-2061)\n * refactor and optimize ColumnFamilyStore.files(...) and Descriptor.fromFilename(String)\n   and few other places responsible for work with SSTable files (CASSANDRA-3040)\n * Stop reading from sstables once we know we have the most recent columns,\n   for query-by-name requests (CASSANDRA-2498)\n * Add query-by-column mode to stress.java (CASSANDRA-3064)\n * Add \"install\" command to cassandra.bat (CASSANDRA-292)\n * clean up KSMetadata, CFMetadata from unnecessary\n   Thrift<->Avro conversion methods (CASSANDRA-3032)\n * Add timeouts to client request schedulers (CASSANDRA-3079, 3096)\n * Cli to use hashes rather than array of hashes for strategy options (CASSANDRA-3081)\n * LeveledCompactionStrategy (CASSANDRA-1608, 3085, 3110, 3087, 3145, 3154, 3182)\n * Improvements of the CLI `describe` command (CASSANDRA-2630)\n * reduce window where dropped CF sstables may not be deleted (CASSANDRA-2942)\n * Expose gossip/FD info to JMX (CASSANDRA-2806)\n * Fix streaming over SSL when compressed SSTable involved (CASSANDRA-3051)\n * Add support for pluggable secondary index implementations (CASSANDRA-3078)\n * remove compaction_thread_priority setting (CASSANDRA-3104)\n * generate hints for replicas that timeout, not just replicas that are known\n   to be down before starting (CASSANDRA-2034)\n * Add throttling for internode streaming (CASSANDRA-3080)\n * make the repair of a range repair all replica (CASSANDRA-2610, 3194)\n * expose the ability to repair the first range (as returned by the\n   partitioner) of a node (CASSANDRA-2606)\n * Streams Compression (CASSANDRA-3015)\n * add ability to use multiple threads during a single compaction\n   (CASSANDRA-2901)\n * make AbstractBounds.normalize support overlapping ranges (CASSANDRA-2641)\n * fix of the CQL count() behavior (CASSANDRA-3068)\n * use TreeMap backed column families for the SSTable simple writers\n   (CASSANDRA-3148)\n * fix inconsistency of the CLI syntax when {} should be used instead of [{}]\n   (CASSANDRA-3119)\n * rename CQL type names to match expected SQL behavior (CASSANDRA-3149, 3031)\n * Arena-based allocation for memtables (CASSANDRA-2252, 3162, 3163, 3168)\n * Default RR chance to 0.1 (CASSANDRA-3169)\n * Add RowLevel support to secondary index API (CASSANDRA-3147)\n * Make SerializingCacheProvider the default if JNA is available (CASSANDRA-3183)\n * Fix backwards compatibilty for CQL memtable properties (CASSANDRA-3190)\n * Add five-minute delay before starting compactions on a restarted server\n   (CASSANDRA-3181)\n * Reduce copies done for intra-host messages (CASSANDRA-1788, 3144)\n * support of compaction strategy option for stress.java (CASSANDRA-3204)\n * make memtable throughput and column count thresholds no-ops (CASSANDRA-2449)\n * Return schema information along with the resultSet in CQL (CASSANDRA-2734)\n * Add new DecimalType (CASSANDRA-2883)\n * Fix assertion error in RowRepairResolver (CASSANDRA-3156)\n * Reduce unnecessary high buffer sizes (CASSANDRA-3171)\n * Pluggable compaction strategy (CASSANDRA-1610)\n * Add new broadcast_address config option (CASSANDRA-2491)\n\n\n0.8.7\n * Kill server on wrapped OOME such as from FileChannel.map (CASSANDRA-3201)\n * Allow using quotes in \"USE <keyspace>;\" CLI command (CASSANDRA-3208)\n * Log message when a full repair operation completes (CASSANDRA-3207)\n * Don't allow any cache loading exceptions to halt startup (CASSANDRA-3218)\n * Fix sstableloader --ignores option (CASSANDRA-3247)\n * File descriptor limit increased in packaging (CASSANDRA-3206)\n * Log a meaningfull warning when a node receive a message for a repair session\n   that doesn't exist anymore (CASSANDRA-3256)\n * Fix FD leak when internode encryption is enabled (CASSANDRA-3257)\n * FBUtilities.hexToBytes(String) to throw NumberFormatException when string\n   contains non-hex characters (CASSANDRA-3231)\n * Keep SimpleSnitch proximity ordering unchanged from what the Strategy\n   generates, as intended (CASSANDRA-3262)\n * remove Scrub from compactionstats when finished (CASSANDRA-3255)\n * Fix tool .bat files when CASSANDRA_HOME contains spaces (CASSANDRA-3258)\n * Force flush of status table when removing/updating token (CASSANDRA-3243)\n * Evict gossip state immediately when a token is taken over by a new IP (CASSANDRA-3259)\n * Fix bug where the failure detector can take too long to mark a host\n   down (CASSANDRA-3273)\n * (Hadoop) allow wrapping ranges in queries (CASSANDRA-3137)\n * (Hadoop) check all interfaces for a match with split location\n   before falling back to random replica (CASSANDRA-3211)\n * (Hadoop) Make Pig storage handle implements LoadMetadata (CASSANDRA-2777)\n * (Hadoop) Fix exception during PIG 'dump' (CASSANDRA-2810)\n * Fix stress COUNTER_GET option (CASSANDRA-3301)\n * Fix missing fields in CLI `show schema` output (CASSANDRA-3304)\n * Nodetool no longer leaks threads and closes JMX connections (CASSANDRA-3309)\n * fix truncate allowing data to be replayed post-restart (CASSANDRA-3297)\n * Move SimpleAuthority and SimpleAuthenticator to examples (CASSANDRA-2922)\n * Fix handling of tombstone by SSTableExport/Import (CASSANDRA-3357)\n * Fix transposition in cfHistograms (CASSANDRA-3222)\n * Allow using number as DC name when creating keyspace in CQL (CASSANDRA-3239)\n * Force flush of system table after updating/removing a token (CASSANDRA-3243)\n\n\n0.8.6\n * revert CASSANDRA-2388\n * change TokenRange.endpoints back to listen/broadcast address to match\n   pre-1777 behavior, and add TokenRange.rpc_endpoints instead (CASSANDRA-3187)\n * avoid trying to watch cassandra-topology.properties when loaded from jar\n   (CASSANDRA-3138)\n * prevent users from creating keyspaces with LocalStrategy replication\n   (CASSANDRA-3139)\n * fix CLI `show schema;` to output correct keyspace definition statement\n   (CASSANDRA-3129)\n * CustomTThreadPoolServer to log TTransportException at DEBUG level\n   (CASSANDRA-3142)\n * allow topology sort to work with non-unique rack names between\n   datacenters (CASSANDRA-3152)\n * Improve caching of same-version Messages on digest and repair paths\n   (CASSANDRA-3158)\n * Randomize choice of first replica for counter increment (CASSANDRA-2890)\n * Fix using read_repair_chance instead of merge_shard_change (CASSANDRA-3202)\n * Avoid streaming data to nodes that already have it, on move as well as\n   decommission (CASSANDRA-3041)\n * Fix divide by zero error in GCInspector (CASSANDRA-3164)\n * allow quoting of the ColumnFamily name in CLI `create column family`\n   statement (CASSANDRA-3195)\n * Fix rolling upgrade from 0.7 to 0.8 problem (CASSANDRA-3166)\n * Accomodate missing encryption_options in IncomingTcpConnection.stream\n   (CASSANDRA-3212)\n\n\n0.8.5\n * fix NPE when encryption_options is unspecified (CASSANDRA-3007)\n * include column name in validation failure exceptions (CASSANDRA-2849)\n * make sure truncate clears out the commitlog so replay won't re-\n   populate with truncated data (CASSANDRA-2950)\n * fix NPE when debug logging is enabled and dropped CF is present\n   in a commitlog segment (CASSANDRA-3021)\n * fix cassandra.bat when CASSANDRA_HOME contains spaces (CASSANDRA-2952)\n * fix to SSTableSimpleUnsortedWriter bufferSize calculation (CASSANDRA-3027)\n * make cleanup and normal compaction able to skip empty rows\n   (rows containing nothing but expired tombstones) (CASSANDRA-3039)\n * work around native memory leak in com.sun.management.GarbageCollectorMXBean\n   (CASSANDRA-2868)\n * validate that column names in column_metadata are not equal to key_alias\n   on create/update of the ColumnFamily and CQL 'ALTER' statement (CASSANDRA-3036)\n * return an InvalidRequestException if an indexed column is assigned\n   a value larger than 64KB (CASSANDRA-3057)\n * fix of numeric-only and string column names handling in CLI \"drop index\"\n   (CASSANDRA-3054)\n * prune index scan resultset back to original request for lazy\n   resultset expansion case (CASSANDRA-2964)\n * (Hadoop) fail jobs when Cassandra node has failed but TaskTracker\n   has not (CASSANDRA-2388)\n * fix dynamic snitch ignoring nodes when read_repair_chance is zero\n   (CASSANDRA-2662)\n * avoid retaining references to dropped CFS objects in\n   CompactionManager.estimatedCompactions (CASSANDRA-2708)\n * expose rpc timeouts per host in MessagingServiceMBean (CASSANDRA-2941)\n * avoid including cwd in classpath for deb and rpm packages (CASSANDRA-2881)\n * remove gossip state when a new IP takes over a token (CASSANDRA-3071)\n * allow sstable2json to work on index sstable files (CASSANDRA-3059)\n * always hint counters (CASSANDRA-3099)\n * fix log4j initialization in EmbeddedCassandraService (CASSANDRA-2857)\n * remove gossip state when a new IP takes over a token (CASSANDRA-3071)\n * work around native memory leak in com.sun.management.GarbageCollectorMXBean\n    (CASSANDRA-2868)\n * fix UnavailableException with writes at CL.EACH_QUORM (CASSANDRA-3084)\n * fix parsing of the Keyspace and ColumnFamily names in numeric\n   and string representations in CLI (CASSANDRA-3075)\n * fix corner cases in Range.differenceToFetch (CASSANDRA-3084)\n * fix ip address String representation in the ring cache (CASSANDRA-3044)\n * fix ring cache compatibility when mixing pre-0.8.4 nodes with post-\n   in the same cluster (CASSANDRA-3023)\n * make repair report failure when a node participating dies (instead of\n   hanging forever) (CASSANDRA-2433)\n * fix handling of the empty byte buffer by ReversedType (CASSANDRA-3111)\n * Add validation that Keyspace names are case-insensitively unique (CASSANDRA-3066)\n * catch invalid key_validation_class before instantiating UpdateColumnFamily (CASSANDRA-3102)\n * make Range and Bounds objects client-safe (CASSANDRA-3108)\n * optionally skip log4j configuration (CASSANDRA-3061)\n * bundle sstableloader with the debian package (CASSANDRA-3113)\n * don't try to build secondary indexes when there is none (CASSANDRA-3123)\n * improve SSTableSimpleUnsortedWriter speed for large rows (CASSANDRA-3122)\n * handle keyspace arguments correctly in nodetool snapshot (CASSANDRA-3038)\n * Fix SSTableImportTest on windows (CASSANDRA-3043)\n * expose compactionThroughputMbPerSec through JMX (CASSANDRA-3117)\n * log keyspace and CF of large rows being compacted\n\n\n0.8.4\n * change TokenRing.endpoints to be a list of rpc addresses instead of\n   listen/broadcast addresses (CASSANDRA-1777)\n * include files-to-be-streamed in StreamInSession.getSources (CASSANDRA-2972)\n * use JAVA env var in cassandra-env.sh (CASSANDRA-2785, 2992)\n * avoid doing read for no-op replicate-on-write at CL=1 (CASSANDRA-2892)\n * refuse counter write for CL.ANY (CASSANDRA-2990)\n * switch back to only logging recent dropped messages (CASSANDRA-3004)\n * always deserialize RowMutation for counters (CASSANDRA-3006)\n * ignore saved replication_factor strategy_option for NTS (CASSANDRA-3011)\n * make sure pre-truncate CL segments are discarded (CASSANDRA-2950)\n\n\n0.8.3\n * add ability to drop local reads/writes that are going to timeout\n   (CASSANDRA-2943)\n * revamp token removal process, keep gossip states for 3 days (CASSANDRA-2496)\n * don't accept extra args for 0-arg nodetool commands (CASSANDRA-2740)\n * log unavailableexception details at debug level (CASSANDRA-2856)\n * expose data_dir though jmx (CASSANDRA-2770)\n * don't include tmp files as sstable when create cfs (CASSANDRA-2929)\n * log Java classpath on startup (CASSANDRA-2895)\n * keep gossipped version in sync with actual on migration coordinator\n   (CASSANDRA-2946)\n * use lazy initialization instead of class initialization in NodeId\n   (CASSANDRA-2953)\n * check column family validity in nodetool repair (CASSANDRA-2933)\n * speedup bytes to hex conversions dramatically (CASSANDRA-2850)\n * Flush memtables on shutdown when durable writes are disabled\n   (CASSANDRA-2958)\n * improved POSIX compatibility of start scripts (CASsANDRA-2965)\n * add counter support to Hadoop InputFormat (CASSANDRA-2981)\n * fix bug where dirty commitlog segments were removed (and avoid keeping\n   segments with no post-flush activity permanently dirty) (CASSANDRA-2829)\n * fix throwing exception with batch mutation of counter super columns\n   (CASSANDRA-2949)\n * ignore system tables during repair (CASSANDRA-2979)\n * throw exception when NTS is given replication_factor as an option\n   (CASSANDRA-2960)\n * fix assertion error during compaction of counter CFs (CASSANDRA-2968)\n * avoid trying to create index names, when no index exists (CASSANDRA-2867)\n * don't sample the system table when choosing a bootstrap token\n   (CASSANDRA-2825)\n * gossiper notifies of local state changes (CASSANDRA-2948)\n * add asynchronous and half-sync/half-async (hsha) thrift servers\n   (CASSANDRA-1405)\n * fix potential use of free'd native memory in SerializingCache\n   (CASSANDRA-2951)\n * prune index scan resultset back to original request for lazy\n   resultset expansion case (CASSANDRA-2964)\n * (Hadoop) fail jobs when Cassandra node has failed but TaskTracker\n    has not (CASSANDRA-2388)\n\n\n0.8.2\n * CQL:\n   - include only one row per unique key for IN queries (CASSANDRA-2717)\n   - respect client timestamp on full row deletions (CASSANDRA-2912)\n * improve thread-safety in StreamOutSession (CASSANDRA-2792)\n * allow deleting a row and updating indexed columns in it in the\n   same mutation (CASSANDRA-2773)\n * Expose number of threads blocked on submitting memtable to flush\n   in JMX (CASSANDRA-2817)\n * add ability to return \"endpoints\" to nodetool (CASSANDRA-2776)\n * Add support for multiple (comma-delimited) coordinator addresses\n   to ColumnFamilyInputFormat (CASSANDRA-2807)\n * fix potential NPE while scheduling read repair for range slice\n   (CASSANDRA-2823)\n * Fix race in SystemTable.getCurrentLocalNodeId (CASSANDRA-2824)\n * Correctly set default for replicate_on_write (CASSANDRA-2835)\n * improve nodetool compactionstats formatting (CASSANDRA-2844)\n * fix index-building status display (CASSANDRA-2853)\n * fix CLI perpetuating obsolete KsDef.replication_factor (CASSANDRA-2846)\n * improve cli treatment of multiline comments (CASSANDRA-2852)\n * handle row tombstones correctly in EchoedRow (CASSANDRA-2786)\n * add MessagingService.get[Recently]DroppedMessages and\n   StorageService.getExceptionCount (CASSANDRA-2804)\n * fix possibility of spurious UnavailableException for LOCAL_QUORUM\n   reads with dynamic snitch + read repair disabled (CASSANDRA-2870)\n * add ant-optional as dependence for the debian package (CASSANDRA-2164)\n * add option to specify limit for get_slice in the CLI (CASSANDRA-2646)\n * decrease HH page size (CASSANDRA-2832)\n * reset cli keyspace after dropping the current one (CASSANDRA-2763)\n * add KeyRange option to Hadoop inputformat (CASSANDRA-1125)\n * fix protocol versioning (CASSANDRA-2818, 2860)\n * support spaces in path to log4j configuration (CASSANDRA-2383)\n * avoid including inferred types in CF update (CASSANDRA-2809)\n * fix JMX bulkload call (CASSANDRA-2908)\n * fix updating KS with durable_writes=false (CASSANDRA-2907)\n * add simplified facade to SSTableWriter for bulk loading use\n   (CASSANDRA-2911)\n * fix re-using index CF sstable names after drop/recreate (CASSANDRA-2872)\n * prepend CF to default index names (CASSANDRA-2903)\n * fix hint replay (CASSANDRA-2928)\n * Properly synchronize repair's merkle tree computation (CASSANDRA-2816)\n\n\n0.8.1\n * CQL:\n   - support for insert, delete in BATCH (CASSANDRA-2537)\n   - support for IN to SELECT, UPDATE (CASSANDRA-2553)\n   - timestamp support for INSERT, UPDATE, and BATCH (CASSANDRA-2555)\n   - TTL support (CASSANDRA-2476)\n   - counter support (CASSANDRA-2473)\n   - ALTER COLUMNFAMILY (CASSANDRA-1709)\n   - DROP INDEX (CASSANDRA-2617)\n   - add SCHEMA/TABLE as aliases for KS/CF (CASSANDRA-2743)\n   - server handles wait-for-schema-agreement (CASSANDRA-2756)\n   - key alias support (CASSANDRA-2480)\n * add support for comparator parameters and a generic ReverseType\n   (CASSANDRA-2355)\n * add CompositeType and DynamicCompositeType (CASSANDRA-2231)\n * optimize batches containing multiple updates to the same row\n   (CASSANDRA-2583)\n * adjust hinted handoff page size to avoid OOM with large columns\n   (CASSANDRA-2652)\n * mark BRAF buffer invalid post-flush so we don't re-flush partial\n   buffers again, especially on CL writes (CASSANDRA-2660)\n * add DROP INDEX support to CLI (CASSANDRA-2616)\n * don't perform HH to client-mode [storageproxy] nodes (CASSANDRA-2668)\n * Improve forceDeserialize/getCompactedRow encapsulation (CASSANDRA-2659)\n * Don't write CounterUpdateColumn to disk in tests (CASSANDRA-2650)\n * Add sstable bulk loading utility (CASSANDRA-1278)\n * avoid replaying hints to dropped columnfamilies (CASSANDRA-2685)\n * add placeholders for missing rows in range query pseudo-RR (CASSANDRA-2680)\n * remove no-op HHOM.renameHints (CASSANDRA-2693)\n * clone super columns to avoid modifying them during flush (CASSANDRA-2675)\n * allow writes to bypass the commitlog for certain keyspaces (CASSANDRA-2683)\n * avoid NPE when bypassing commitlog during memtable flush (CASSANDRA-2781)\n * Added support for making bootstrap retry if nodes flap (CASSANDRA-2644)\n * Added statusthrift to nodetool to report if thrift server is running (CASSANDRA-2722)\n * Fixed rows being cached if they do not exist (CASSANDRA-2723)\n * Support passing tableName and cfName to RowCacheProviders (CASSANDRA-2702)\n * close scrub file handles (CASSANDRA-2669)\n * throttle migration replay (CASSANDRA-2714)\n * optimize column serializer creation (CASSANDRA-2716)\n * Added support for making bootstrap retry if nodes flap (CASSANDRA-2644)\n * Added statusthrift to nodetool to report if thrift server is running\n   (CASSANDRA-2722)\n * Fixed rows being cached if they do not exist (CASSANDRA-2723)\n * fix truncate/compaction race (CASSANDRA-2673)\n * workaround large resultsets causing large allocation retention\n   by nio sockets (CASSANDRA-2654)\n * fix nodetool ring use with Ec2Snitch (CASSANDRA-2733)\n * fix removing columns and subcolumns that are supressed by a row or\n   supercolumn tombstone during replica resolution (CASSANDRA-2590)\n * support sstable2json against snapshot sstables (CASSANDRA-2386)\n * remove active-pull schema requests (CASSANDRA-2715)\n * avoid marking entire list of sstables as actively being compacted\n   in multithreaded compaction (CASSANDRA-2765)\n * seek back after deserializing a row to update cache with (CASSANDRA-2752)\n * avoid skipping rows in scrub for counter column family (CASSANDRA-2759)\n * fix ConcurrentModificationException in repair when dealing with 0.7 node\n   (CASSANDRA-2767)\n * use threadsafe collections for StreamInSession (CASSANDRA-2766)\n * avoid infinite loop when creating merkle tree (CASSANDRA-2758)\n * avoids unmarking compacting sstable prematurely in cleanup (CASSANDRA-2769)\n * fix NPE when the commit log is bypassed (CASSANDRA-2718)\n * don't throw an exception in SS.isRPCServerRunning (CASSANDRA-2721)\n * make stress.jar executable (CASSANDRA-2744)\n * add daemon mode to java stress (CASSANDRA-2267)\n * expose the DC and rack of a node through JMX and nodetool ring (CASSANDRA-2531)\n * fix cache mbean getSize (CASSANDRA-2781)\n * Add Date, Float, Double, and Boolean types (CASSANDRA-2530)\n * Add startup flag to renew counter node id (CASSANDRA-2788)\n * add jamm agent to cassandra.bat (CASSANDRA-2787)\n * fix repair hanging if a neighbor has nothing to send (CASSANDRA-2797)\n * purge tombstone even if row is in only one sstable (CASSANDRA-2801)\n * Fix wrong purge of deleted cf during compaction (CASSANDRA-2786)\n * fix race that could result in Hadoop writer failing to throw an\n   exception encountered after close() (CASSANDRA-2755)\n * fix scan wrongly throwing assertion error (CASSANDRA-2653)\n * Always use even distribution for merkle tree with RandomPartitionner\n   (CASSANDRA-2841)\n * fix describeOwnership for OPP (CASSANDRA-2800)\n * ensure that string tokens do not contain commas (CASSANDRA-2762)\n\n\n0.8.0-final\n * fix CQL grammar warning and cqlsh regression from CASSANDRA-2622\n * add ant generate-cql-html target (CASSANDRA-2526)\n * update CQL consistency levels (CASSANDRA-2566)\n * debian packaging fixes (CASSANDRA-2481, 2647)\n * fix UUIDType, IntegerType for direct buffers (CASSANDRA-2682, 2684)\n * switch to native Thrift for Hadoop map/reduce (CASSANDRA-2667)\n * fix StackOverflowError when building from eclipse (CASSANDRA-2687)\n * only provide replication_factor to strategy_options \"help\" for\n   SimpleStrategy, OldNetworkTopologyStrategy (CASSANDRA-2678, 2713)\n * fix exception adding validators to non-string columns (CASSANDRA-2696)\n * avoid instantiating DatabaseDescriptor in JDBC (CASSANDRA-2694)\n * fix potential stack overflow during compaction (CASSANDRA-2626)\n * clone super columns to avoid modifying them during flush (CASSANDRA-2675)\n * reset underlying iterator in EchoedRow constructor (CASSANDRA-2653)\n\n\n0.8.0-rc1\n * faster flushes and compaction from fixing excessively pessimistic\n   rebuffering in BRAF (CASSANDRA-2581)\n * fix returning null column values in the python cql driver (CASSANDRA-2593)\n * fix merkle tree splitting exiting early (CASSANDRA-2605)\n * snapshot_before_compaction directory name fix (CASSANDRA-2598)\n * Disable compaction throttling during bootstrap (CASSANDRA-2612)\n * fix CQL treatment of > and < operators in range slices (CASSANDRA-2592)\n * fix potential double-application of counter updates on commitlog replay\n   by moving replay position from header to sstable metadata (CASSANDRA-2419)\n * JDBC CQL driver exposes getColumn for access to timestamp\n * JDBC ResultSetMetadata properties added to AbstractType\n * r/m clustertool (CASSANDRA-2607)\n * add support for presenting row key as a column in CQL result sets\n   (CASSANDRA-2622)\n * Don't allow {LOCAL|EACH}_QUORUM unless strategy is NTS (CASSANDRA-2627)\n * validate keyspace strategy_options during CQL create (CASSANDRA-2624)\n * fix empty Result with secondary index when limit=1 (CASSANDRA-2628)\n * Fix regression where bootstrapping a node with no schema fails\n   (CASSANDRA-2625)\n * Allow removing LocationInfo sstables (CASSANDRA-2632)\n * avoid attempting to replay mutations from dropped keyspaces (CASSANDRA-2631)\n * avoid using cached position of a key when GT is requested (CASSANDRA-2633)\n * fix counting bloom filter true positives (CASSANDRA-2637)\n * initialize local ep state prior to gossip startup if needed (CASSANDRA-2638)\n * fix counter increment lost after restart (CASSANDRA-2642)\n * add quote-escaping via backslash to CLI (CASSANDRA-2623)\n * fix pig example script (CASSANDRA-2487)\n * fix dynamic snitch race in adding latencies (CASSANDRA-2618)\n * Start/stop cassandra after more important services such as mdadm in\n   debian packaging (CASSANDRA-2481)\n\n\n0.8.0-beta2\n * fix NPE compacting index CFs (CASSANDRA-2528)\n * Remove checking all column families on startup for compaction candidates\n   (CASSANDRA-2444)\n * validate CQL create keyspace options (CASSANDRA-2525)\n * fix nodetool setcompactionthroughput (CASSANDRA-2550)\n * move\tgossip heartbeat back to its own thread (CASSANDRA-2554)\n * validate cql TRUNCATE columnfamily before truncating (CASSANDRA-2570)\n * fix batch_mutate for mixed standard-counter mutations (CASSANDRA-2457)\n * disallow making schema changes to system keyspace (CASSANDRA-2563)\n * fix sending mutation messages multiple times (CASSANDRA-2557)\n * fix incorrect use of NBHM.size in ReadCallback that could cause\n   reads to time out even when responses were received (CASSANDRA-2552)\n * trigger read repair correctly for LOCAL_QUORUM reads (CASSANDRA-2556)\n * Allow configuring the number of compaction thread (CASSANDRA-2558)\n * forceUserDefinedCompaction will attempt to compact what it is given\n   even if the pessimistic estimate is that there is not enough disk space;\n   automatic compactions will only compact 2 or more sstables (CASSANDRA-2575)\n * refuse to apply migrations with older timestamps than the current\n   schema (CASSANDRA-2536)\n * remove unframed Thrift transport option\n * include indexes in snapshots (CASSANDRA-2596)\n * improve ignoring of obsolete mutations in index maintenance (CASSANDRA-2401)\n * recognize attempt to drop just the index while leaving the column\n   definition alone (CASSANDRA-2619)\n\n\n0.8.0-beta1\n * remove Avro RPC support (CASSANDRA-926)\n * support for columns that act as incr/decr counters\n   (CASSANDRA-1072, 1937, 1944, 1936, 2101, 2093, 2288, 2105, 2384, 2236, 2342,\n   2454)\n * CQL (CASSANDRA-1703, 1704, 1705, 1706, 1707, 1708, 1710, 1711, 1940,\n   2124, 2302, 2277, 2493)\n * avoid double RowMutation serialization on write path (CASSANDRA-1800)\n * make NetworkTopologyStrategy the default (CASSANDRA-1960)\n * configurable internode encryption (CASSANDRA-1567, 2152)\n * human readable column names in sstable2json output (CASSANDRA-1933)\n * change default JMX port to 7199 (CASSANDRA-2027)\n * backwards compatible internal messaging (CASSANDRA-1015)\n * atomic switch of memtables and sstables (CASSANDRA-2284)\n * add pluggable SeedProvider (CASSANDRA-1669)\n * Fix clustertool to not throw exception when calling get_endpoints (CASSANDRA-2437)\n * upgrade to thrift 0.6 (CASSANDRA-2412)\n * repair works on a token range instead of full ring (CASSANDRA-2324)\n * purge tombstones from row cache (CASSANDRA-2305)\n * push replication_factor into strategy_options (CASSANDRA-1263)\n * give snapshots the same name on each node (CASSANDRA-1791)\n * remove \"nodetool loadbalance\" (CASSANDRA-2448)\n * multithreaded compaction (CASSANDRA-2191)\n * compaction throttling (CASSANDRA-2156)\n * add key type information and alias (CASSANDRA-2311, 2396)\n * cli no longer divides read_repair_chance by 100 (CASSANDRA-2458)\n * made CompactionInfo.getTaskType return an enum (CASSANDRA-2482)\n * add a server-wide cap on measured memtable memory usage and aggressively\n   flush to keep under that threshold (CASSANDRA-2006)\n * add unified UUIDType (CASSANDRA-2233)\n * add off-heap row cache support (CASSANDRA-1969)\n\n\n0.7.5\n * improvements/fixes to PIG driver (CASSANDRA-1618, CASSANDRA-2387,\n   CASSANDRA-2465, CASSANDRA-2484)\n * validate index names (CASSANDRA-1761)\n * reduce contention on Table.flusherLock (CASSANDRA-1954)\n * try harder to detect failures during streaming, cleaning up temporary\n   files more reliably (CASSANDRA-2088)\n * shut down server for OOM on a Thrift thread (CASSANDRA-2269)\n * fix tombstone handling in repair and sstable2json (CASSANDRA-2279)\n * preserve version when streaming data from old sstables (CASSANDRA-2283)\n * don't start repair if a neighboring node is marked as dead (CASSANDRA-2290)\n * purge tombstones from row cache (CASSANDRA-2305)\n * Avoid seeking when sstable2json exports the entire file (CASSANDRA-2318)\n * clear Built flag in system table when dropping an index (CASSANDRA-2320)\n * don't allow arbitrary argument for stress.java (CASSANDRA-2323)\n * validate values for index predicates in get_indexed_slice (CASSANDRA-2328)\n * queue secondary indexes for flush before the parent (CASSANDRA-2330)\n * allow job configuration to set the CL used in Hadoop jobs (CASSANDRA-2331)\n * add memtable_flush_queue_size defaulting to 4 (CASSANDRA-2333)\n * Allow overriding of initial_token, storage_port and rpc_port from system\n   properties (CASSANDRA-2343)\n * fix comparator used for non-indexed secondary expressions in index scan\n   (CASSANDRA-2347)\n * ensure size calculation and write phase of large-row compaction use\n   the same threshold for TTL expiration (CASSANDRA-2349)\n * fix race when iterating CFs during add/drop (CASSANDRA-2350)\n * add ConsistencyLevel command to CLI (CASSANDRA-2354)\n * allow negative numbers in the cli (CASSANDRA-2358)\n * hard code serialVersionUID for tokens class (CASSANDRA-2361)\n * fix potential infinite loop in ByteBufferUtil.inputStream (CASSANDRA-2365)\n * fix encoding bugs in HintedHandoffManager, SystemTable when default\n   charset is not UTF8 (CASSANDRA-2367)\n * avoids having removed node reappearing in Gossip (CASSANDRA-2371)\n * fix incorrect truncation of long to int when reading columns via block\n   index (CASSANDRA-2376)\n * fix NPE during stream session (CASSANDRA-2377)\n * fix race condition that could leave orphaned data files when dropping CF or\n   KS (CASSANDRA-2381)\n * fsync statistics component on write (CASSANDRA-2382)\n * fix duplicate results from CFS.scan (CASSANDRA-2406)\n * add IntegerType to CLI help (CASSANDRA-2414)\n * avoid caching token-only decoratedkeys (CASSANDRA-2416)\n * convert mmap assertion to if/throw so scrub can catch it (CASSANDRA-2417)\n * don't overwrite gc log (CASSANDR-2418)\n * invalidate row cache for streamed row to avoid inconsitencies\n   (CASSANDRA-2420)\n * avoid copies in range/index scans (CASSANDRA-2425)\n * make sure we don't wipe data during cleanup if the node has not join\n   the ring (CASSANDRA-2428)\n * Try harder to close files after compaction (CASSANDRA-2431)\n * re-set bootstrapped flag after move finishes (CASSANDRA-2435)\n * display validation_class in CLI 'describe keyspace' (CASSANDRA-2442)\n * make cleanup compactions cleanup the row cache (CASSANDRA-2451)\n * add column fields validation to scrub (CASSANDRA-2460)\n * use 64KB flush buffer instead of in_memory_compaction_limit (CASSANDRA-2463)\n * fix backslash substitutions in CLI (CASSANDRA-2492)\n * disable cache saving for system CFS (CASSANDRA-2502)\n * fixes for verifying destination availability under hinted conditions\n   so UE can be thrown intead of timing out (CASSANDRA-2514)\n * fix update of validation class in column metadata (CASSANDRA-2512)\n * support LOCAL_QUORUM, EACH_QUORUM CLs outside of NTS (CASSANDRA-2516)\n * preserve version when streaming data from old sstables (CASSANDRA-2283)\n * fix backslash substitutions in CLI (CASSANDRA-2492)\n * count a row deletion as one operation towards memtable threshold\n   (CASSANDRA-2519)\n * support LOCAL_QUORUM, EACH_QUORUM CLs outside of NTS (CASSANDRA-2516)\n\n\n0.7.4\n * add nodetool join command (CASSANDRA-2160)\n * fix secondary indexes on pre-existing or streamed data (CASSANDRA-2244)\n * initialize endpoint in gossiper earlier (CASSANDRA-2228)\n * add ability to write to Cassandra from Pig (CASSANDRA-1828)\n * add rpc_[min|max]_threads (CASSANDRA-2176)\n * add CL.TWO, CL.THREE (CASSANDRA-2013)\n * avoid exporting an un-requested row in sstable2json, when exporting\n   a key that does not exist (CASSANDRA-2168)\n * add incremental_backups option (CASSANDRA-1872)\n * add configurable row limit to Pig loadfunc (CASSANDRA-2276)\n * validate column values in batches as well as single-Column inserts\n   (CASSANDRA-2259)\n * move sample schema from cassandra.yaml to schema-sample.txt,\n   a cli scripts (CASSANDRA-2007)\n * avoid writing empty rows when scrubbing tombstoned rows (CASSANDRA-2296)\n * fix assertion error in range and index scans for CL < ALL\n   (CASSANDRA-2282)\n * fix commitlog replay when flush position refers to data that didn't\n   get synced before server died (CASSANDRA-2285)\n * fix fd leak in sstable2json with non-mmap'd i/o (CASSANDRA-2304)\n * reduce memory use during streaming of multiple sstables (CASSANDRA-2301)\n * purge tombstoned rows from cache after GCGraceSeconds (CASSANDRA-2305)\n * allow zero replicas in a NTS datacenter (CASSANDRA-1924)\n * make range queries respect snitch for local replicas (CASSANDRA-2286)\n * fix HH delivery when column index is larger than 2GB (CASSANDRA-2297)\n * make 2ary indexes use parent CF flush thresholds during initial build\n   (CASSANDRA-2294)\n * update memtable_throughput to be a long (CASSANDRA-2158)\n\n\n0.7.3\n * Keep endpoint state until aVeryLongTime (CASSANDRA-2115)\n * lower-latency read repair (CASSANDRA-2069)\n * add hinted_handoff_throttle_delay_in_ms option (CASSANDRA-2161)\n * fixes for cache save/load (CASSANDRA-2172, -2174)\n * Handle whole-row deletions in CFOutputFormat (CASSANDRA-2014)\n * Make memtable_flush_writers flush in parallel (CASSANDRA-2178)\n * Add compaction_preheat_key_cache option (CASSANDRA-2175)\n * refactor stress.py to have only one copy of the format string\n   used for creating row keys (CASSANDRA-2108)\n * validate index names for \\w+ (CASSANDRA-2196)\n * Fix Cassandra cli to respect timeout if schema does not settle\n   (CASSANDRA-2187)\n * fix for compaction and cleanup writing old-format data into new-version\n   sstable (CASSANDRA-2211, -2216)\n * add nodetool scrub (CASSANDRA-2217, -2240)\n * fix sstable2json large-row pagination (CASSANDRA-2188)\n * fix EOFing on requests for the last bytes in a file (CASSANDRA-2213)\n * fix BufferedRandomAccessFile bugs (CASSANDRA-2218, -2241)\n * check for memtable flush_after_mins exceeded every 10s (CASSANDRA-2183)\n * fix cache saving on Windows (CASSANDRA-2207)\n * add validateSchemaAgreement call + synchronization to schema\n   modification operations (CASSANDRA-2222)\n * fix for reversed slice queries on large rows (CASSANDRA-2212)\n * fat clients were writing local data (CASSANDRA-2223)\n * set DEFAULT_MEMTABLE_LIFETIME_IN_MINS to 24h\n * improve detection and cleanup of partially-written sstables\n   (CASSANDRA-2206)\n * fix supercolumn de/serialization when subcolumn comparator is different\n   from supercolumn's (CASSANDRA-2104)\n * fix starting up on Windows when CASSANDRA_HOME contains whitespace\n   (CASSANDRA-2237)\n * add [get|set][row|key]cacheSavePeriod to JMX (CASSANDRA-2100)\n * fix Hadoop ColumnFamilyOutputFormat dropping of mutations\n   when batch fills up (CASSANDRA-2255)\n * move file deletions off of scheduledtasks executor (CASSANDRA-2253)\n\n\n0.7.2\n * copy DecoratedKey.key when inserting into caches to avoid retaining\n   a reference to the underlying buffer (CASSANDRA-2102)\n * format subcolumn names with subcomparator (CASSANDRA-2136)\n * fix column bloom filter deserialization (CASSANDRA-2165)\n\n\n0.7.1\n * refactor MessageDigest creation code. (CASSANDRA-2107)\n * buffer network stack to avoid inefficient small TCP messages while avoiding\n   the nagle/delayed ack problem (CASSANDRA-1896)\n * check log4j configuration for changes every 10s (CASSANDRA-1525, 1907)\n * more-efficient cross-DC replication (CASSANDRA-1530, -2051, -2138)\n * avoid polluting page cache with commitlog or sstable writes\n   and seq scan operations (CASSANDRA-1470)\n * add RMI authentication options to nodetool (CASSANDRA-1921)\n * make snitches configurable at runtime (CASSANDRA-1374)\n * retry hadoop split requests on connection failure (CASSANDRA-1927)\n * implement describeOwnership for BOP, COPP (CASSANDRA-1928)\n * make read repair behave as expected for ConsistencyLevel > ONE\n   (CASSANDRA-982, 2038)\n * distributed test harness (CASSANDRA-1859, 1964)\n * reduce flush lock contention (CASSANDRA-1930)\n * optimize supercolumn deserialization (CASSANDRA-1891)\n * fix CFMetaData.apply to only compare objects of the same class\n   (CASSANDRA-1962)\n * allow specifying specific SSTables to compact from JMX (CASSANDRA-1963)\n * fix race condition in MessagingService.targets (CASSANDRA-1959, 2094, 2081)\n * refuse to open sstables from a future version (CASSANDRA-1935)\n * zero-copy reads (CASSANDRA-1714)\n * fix copy bounds for word Text in wordcount demo (CASSANDRA-1993)\n * fixes for contrib/javautils (CASSANDRA-1979)\n * check more frequently for memtable expiration (CASSANDRA-2000)\n * fix writing SSTable column count statistics (CASSANDRA-1976)\n * fix streaming of multiple CFs during bootstrap (CASSANDRA-1992)\n * explicitly set JVM GC new generation size with -Xmn (CASSANDRA-1968)\n * add short options for CLI flags (CASSANDRA-1565)\n * make keyspace argument to \"describe keyspace\" in CLI optional\n   when authenticated to keyspace already (CASSANDRA-2029)\n * added option to specify -Dcassandra.join_ring=false on startup\n   to allow \"warm spare\" nodes or performing JMX maintenance before\n   joining the ring (CASSANDRA-526)\n * log migrations at INFO (CASSANDRA-2028)\n * add CLI verbose option in file mode (CASSANDRA-2030)\n * add single-line \"--\" comments to CLI (CASSANDRA-2032)\n * message serialization tests (CASSANDRA-1923)\n * switch from ivy to maven-ant-tasks (CASSANDRA-2017)\n * CLI attempts to block for new schema to propagate (CASSANDRA-2044)\n * fix potential overflow in nodetool cfstats (CASSANDRA-2057)\n * add JVM shutdownhook to sync commitlog (CASSANDRA-1919)\n * allow nodes to be up without being part of  normal traffic (CASSANDRA-1951)\n * fix CLI \"show keyspaces\" with null options on NTS (CASSANDRA-2049)\n * fix possible ByteBuffer race conditions (CASSANDRA-2066)\n * reduce garbage generated by MessagingService to prevent load spikes\n   (CASSANDRA-2058)\n * fix math in RandomPartitioner.describeOwnership (CASSANDRA-2071)\n * fix deletion of sstable non-data components (CASSANDRA-2059)\n * avoid blocking gossip while deleting handoff hints (CASSANDRA-2073)\n * ignore messages from newer versions, keep track of nodes in gossip\n   regardless of version (CASSANDRA-1970)\n * cache writing moved to CompactionManager to reduce i/o contention and\n   updated to use non-cache-polluting writes (CASSANDRA-2053)\n * page through large rows when exporting to JSON (CASSANDRA-2041)\n * add flush_largest_memtables_at and reduce_cache_sizes_at options\n   (CASSANDRA-2142)\n * add cli 'describe cluster' command (CASSANDRA-2127)\n * add cli support for setting username/password at 'connect' command\n   (CASSANDRA-2111)\n * add -D option to Stress.java to allow reading hosts from a file\n   (CASSANDRA-2149)\n * bound hints CF throughput between 32M and 256M (CASSANDRA-2148)\n * continue starting when invalid saved cache entries are encountered\n   (CASSANDRA-2076)\n * add max_hint_window_in_ms option (CASSANDRA-1459)\n\n\n0.7.0-final\n * fix offsets to ByteBuffer.get (CASSANDRA-1939)\n\n\n0.7.0-rc4\n * fix cli crash after backgrounding (CASSANDRA-1875)\n * count timeouts in storageproxy latencies, and include latency\n   histograms in StorageProxyMBean (CASSANDRA-1893)\n * fix CLI get recognition of supercolumns (CASSANDRA-1899)\n * enable keepalive on intra-cluster sockets (CASSANDRA-1766)\n * count timeouts towards dynamicsnitch latencies (CASSANDRA-1905)\n * Expose index-building status in JMX + cli schema description\n   (CASSANDRA-1871)\n * allow [LOCAL|EACH]_QUORUM to be used with non-NetworkTopology\n   replication Strategies\n * increased amount of index locks for faster commitlog replay\n * collect secondary index tombstones immediately (CASSANDRA-1914)\n * revert commitlog changes from #1780 (CASSANDRA-1917)\n * change RandomPartitioner min token to -1 to avoid collision w/\n   tokens on actual nodes (CASSANDRA-1901)\n * examine the right nibble when validating TimeUUID (CASSANDRA-1910)\n * include secondary indexes in cleanup (CASSANDRA-1916)\n * CFS.scrubDataDirectories should also cleanup invalid secondary indexes\n   (CASSANDRA-1904)\n * ability to disable/enable gossip on nodes to force them down\n   (CASSANDRA-1108)\n\n\n0.7.0-rc3\n * expose getNaturalEndpoints in StorageServiceMBean taking byte[]\n   key; RMI cannot serialize ByteBuffer (CASSANDRA-1833)\n * infer org.apache.cassandra.locator for replication strategy classes\n   when not otherwise specified\n * validation that generates less garbage (CASSANDRA-1814)\n * add TTL support to CLI (CASSANDRA-1838)\n * cli defaults to bytestype for subcomparator when creating\n   column families (CASSANDRA-1835)\n * unregister index MBeans when index is dropped (CASSANDRA-1843)\n * make ByteBufferUtil.clone thread-safe (CASSANDRA-1847)\n * change exception for read requests during bootstrap from\n   InvalidRequest to Unavailable (CASSANDRA-1862)\n * respect row-level tombstones post-flush in range scans\n   (CASSANDRA-1837)\n * ReadResponseResolver check digests against each other (CASSANDRA-1830)\n * return InvalidRequest when remove of subcolumn without supercolumn\n   is requested (CASSANDRA-1866)\n * flush before repair (CASSANDRA-1748)\n * SSTableExport validates key order (CASSANDRA-1884)\n * large row support for SSTableExport (CASSANDRA-1867)\n * Re-cache hot keys post-compaction without hitting disk (CASSANDRA-1878)\n * manage read repair in coordinator instead of data source, to\n   provide latency information to dynamic snitch (CASSANDRA-1873)\n\n\n0.7.0-rc2\n * fix live-column-count of slice ranges including tombstoned supercolumn\n   with live subcolumn (CASSANDRA-1591)\n * rename o.a.c.internal.AntientropyStage -> AntiEntropyStage,\n   o.a.c.request.Request_responseStage -> RequestResponseStage,\n   o.a.c.internal.Internal_responseStage -> InternalResponseStage\n * add AbstractType.fromString (CASSANDRA-1767)\n * require index_type to be present when specifying index_name\n   on ColumnDef (CASSANDRA-1759)\n * fix add/remove index bugs in CFMetadata (CASSANDRA-1768)\n * rebuild Strategy during system_update_keyspace (CASSANDRA-1762)\n * cli updates prompt to ... in continuation lines (CASSANDRA-1770)\n * support multiple Mutations per key in hadoop ColumnFamilyOutputFormat\n   (CASSANDRA-1774)\n * improvements to Debian init script (CASSANDRA-1772)\n * use local classloader to check for version.properties (CASSANDRA-1778)\n * Validate that column names in column_metadata are valid for the\n   defined comparator, and decode properly in cli (CASSANDRA-1773)\n * use cross-platform newlines in cli (CASSANDRA-1786)\n * add ExpiringColumn support to sstable import/export (CASSANDRA-1754)\n * add flush for each append to periodic commitlog mode; added\n   periodic_without_flush option to disable this (CASSANDRA-1780)\n * close file handle used for post-flush truncate (CASSANDRA-1790)\n * various code cleanup (CASSANDRA-1793, -1794, -1795)\n * fix range queries against wrapped range (CASSANDRA-1781)\n * fix consistencylevel calculations for NetworkTopologyStrategy\n   (CASSANDRA-1804)\n * cli support index type enum names (CASSANDRA-1810)\n * improved validation of column_metadata (CASSANDRA-1813)\n * reads at ConsistencyLevel > 1 throw UnavailableException\n   immediately if insufficient live nodes exist (CASSANDRA-1803)\n * copy bytebuffers for local writes to avoid retaining the entire\n   Thrift frame (CASSANDRA-1801)\n * fix NPE adding index to column w/o prior metadata (CASSANDRA-1764)\n * reduce fat client timeout (CASSANDRA-1730)\n * fix botched merge of CASSANDRA-1316\n\n\n0.7.0-rc1\n * fix compaction and flush races with schema updates (CASSANDRA-1715)\n * add clustertool, config-converter, sstablekeys, and schematool\n   Windows .bat files (CASSANDRA-1723)\n * reject range queries received during bootstrap (CASSANDRA-1739)\n * fix wrapping-range queries on non-minimum token (CASSANDRA-1700)\n * add nodetool cfhistogram (CASSANDRA-1698)\n * limit repaired ranges to what the nodes have in common (CASSANDRA-1674)\n * index scan treats missing columns as not matching secondary\n   expressions (CASSANDRA-1745)\n * Fix misuse of DataOutputBuffer.getData in AntiEntropyService\n   (CASSANDRA-1729)\n * detect and warn when obsolete version of JNA is present (CASSANDRA-1760)\n * reduce fat client timeout (CASSANDRA-1730)\n * cleanup smallest CFs first to increase free temp space for larger ones\n   (CASSANDRA-1811)\n * Update windows .bat files to work outside of main Cassandra\n   directory (CASSANDRA-1713)\n * fix read repair regression from 0.6.7 (CASSANDRA-1727)\n * more-efficient read repair (CASSANDRA-1719)\n * fix hinted handoff replay (CASSANDRA-1656)\n * log type of dropped messages (CASSANDRA-1677)\n * upgrade to SLF4J 1.6.1\n * fix ByteBuffer bug in ExpiringColumn.updateDigest (CASSANDRA-1679)\n * fix IntegerType.getString (CASSANDRA-1681)\n * make -Djava.net.preferIPv4Stack=true the default (CASSANDRA-628)\n * add INTERNAL_RESPONSE verb to differentiate from responses related\n   to client requests (CASSANDRA-1685)\n * log tpstats when dropping messages (CASSANDRA-1660)\n * include unreachable nodes in describeSchemaVersions (CASSANDRA-1678)\n * Avoid dropping messages off the client request path (CASSANDRA-1676)\n * fix jna errno reporting (CASSANDRA-1694)\n * add friendlier error for UnknownHostException on startup (CASSANDRA-1697)\n * include jna dependency in RPM package (CASSANDRA-1690)\n * add --skip-keys option to stress.py (CASSANDRA-1696)\n * improve cli handling of non-string keys and column names\n   (CASSANDRA-1701, -1693)\n * r/m extra subcomparator line in cli keyspaces output (CASSANDRA-1712)\n * add read repair chance to cli \"show keyspaces\"\n * upgrade to ConcurrentLinkedHashMap 1.1 (CASSANDRA-975)\n * fix index scan routing (CASSANDRA-1722)\n * fix tombstoning of supercolumns in range queries (CASSANDRA-1734)\n * clear endpoint cache after updating keyspace metadata (CASSANDRA-1741)\n * fix wrapping-range queries on non-minimum token (CASSANDRA-1700)\n * truncate includes secondary indexes (CASSANDRA-1747)\n * retain reference to PendingFile sstables (CASSANDRA-1749)\n * fix sstableimport regression (CASSANDRA-1753)\n * fix for bootstrap when no non-system tables are defined (CASSANDRA-1732)\n * handle replica unavailability in index scan (CASSANDRA-1755)\n * fix service initialization order deadlock (CASSANDRA-1756)\n * multi-line cli commands (CASSANDRA-1742)\n * fix race between snapshot and compaction (CASSANDRA-1736)\n * add listEndpointsPendingHints, deleteHintsForEndpoint JMX methods\n   (CASSANDRA-1551)\n\n\n0.7.0-beta3\n * add strategy options to describe_keyspace output (CASSANDRA-1560)\n * log warning when using randomly generated token (CASSANDRA-1552)\n * re-organize JMX into .db, .net, .internal, .request (CASSANDRA-1217)\n * allow nodes to change IPs between restarts (CASSANDRA-1518)\n * remember ring state between restarts by default (CASSANDRA-1518)\n * flush index built flag so we can read it before log replay (CASSANDRA-1541)\n * lock row cache updates to prevent race condition (CASSANDRA-1293)\n * remove assertion causing rare (and harmless) error messages in\n   commitlog (CASSANDRA-1330)\n * fix moving nodes with no keyspaces defined (CASSANDRA-1574)\n * fix unbootstrap when no data is present in a transfer range (CASSANDRA-1573)\n * take advantage of AVRO-495 to simplify our avro IDL (CASSANDRA-1436)\n * extend authorization hierarchy to column family (CASSANDRA-1554)\n * deletion support in secondary indexes (CASSANDRA-1571)\n * meaningful error message for invalid replication strategy class\n   (CASSANDRA-1566)\n * allow keyspace creation with RF > N (CASSANDRA-1428)\n * improve cli error handling (CASSANDRA-1580)\n * add cache save/load ability (CASSANDRA-1417, 1606, 1647)\n * add StorageService.getDrainProgress (CASSANDRA-1588)\n * Disallow bootstrap to an in-use token (CASSANDRA-1561)\n * Allow dynamic secondary index creation and destruction (CASSANDRA-1532)\n * log auto-guessed memtable thresholds (CASSANDRA-1595)\n * add ColumnDef support to cli (CASSANDRA-1583)\n * reduce index sample time by 75% (CASSANDRA-1572)\n * add cli support for column, strategy metadata (CASSANDRA-1578, 1612)\n * add cli support for schema modification (CASSANDRA-1584)\n * delete temp files on failed compactions (CASSANDRA-1596)\n * avoid blocking for dead nodes during removetoken (CASSANDRA-1605)\n * remove ConsistencyLevel.ZERO (CASSANDRA-1607)\n * expose in-progress compaction type in jmx (CASSANDRA-1586)\n * removed IClock & related classes from internals (CASSANDRA-1502)\n * fix removing tokens from SystemTable on decommission and removetoken\n   (CASSANDRA-1609)\n * include CF metadata in cli 'show keyspaces' (CASSANDRA-1613)\n * switch from Properties to HashMap in PropertyFileSnitch to\n   avoid synchronization bottleneck (CASSANDRA-1481)\n * PropertyFileSnitch configuration file renamed to\n   cassandra-topology.properties\n * add cli support for get_range_slices (CASSANDRA-1088, CASSANDRA-1619)\n * Make memtable flush thresholds per-CF instead of global\n   (CASSANDRA-1007, 1637)\n * add cli support for binary data without CfDef hints (CASSANDRA-1603)\n * fix building SSTable statistics post-stream (CASSANDRA-1620)\n * fix potential infinite loop in 2ary index queries (CASSANDRA-1623)\n * allow creating NTS keyspaces with no replicas configured (CASSANDRA-1626)\n * add jmx histogram of sstables accessed per read (CASSANDRA-1624)\n * remove system_rename_column_family and system_rename_keyspace from the\n   client API until races can be fixed (CASSANDRA-1630, CASSANDRA-1585)\n * add cli sanity tests (CASSANDRA-1582)\n * update GC settings in cassandra.bat (CASSANDRA-1636)\n * cli support for index queries (CASSANDRA-1635)\n * cli support for updating schema memtable settings (CASSANDRA-1634)\n * cli --file option (CASSANDRA-1616)\n * reduce automatically chosen memtable sizes by 50% (CASSANDRA-1641)\n * move endpoint cache from snitch to strategy (CASSANDRA-1643)\n * fix commitlog recovery deleting the newly-created segment as well as\n   the old ones (CASSANDRA-1644)\n * upgrade to Thrift 0.5 (CASSANDRA-1367)\n * renamed CL.DCQUORUM to LOCAL_QUORUM and DCQUORUMSYNC to EACH_QUORUM\n * cli truncate support (CASSANDRA-1653)\n * update GC settings in cassandra.bat (CASSANDRA-1636)\n * avoid logging when a node's ip/token is gossipped back to it (CASSANDRA-1666)\n\n\n0.7-beta2\n * always use UTF-8 for hint keys (CASSANDRA-1439)\n * remove cassandra.yaml dependency from Hadoop and Pig (CASSADRA-1322)\n * expose CfDef metadata in describe_keyspaces (CASSANDRA-1363)\n * restore use of mmap_index_only option (CASSANDRA-1241)\n * dropping a keyspace with no column families generated an error\n   (CASSANDRA-1378)\n * rename RackAwareStrategy to OldNetworkTopologyStrategy, RackUnawareStrategy\n   to SimpleStrategy, DatacenterShardStrategy to NetworkTopologyStrategy,\n   AbstractRackAwareSnitch to AbstractNetworkTopologySnitch (CASSANDRA-1392)\n * merge StorageProxy.mutate, mutateBlocking (CASSANDRA-1396)\n * faster UUIDType, LongType comparisons (CASSANDRA-1386, 1393)\n * fix setting read_repair_chance from CLI addColumnFamily (CASSANDRA-1399)\n * fix updates to indexed columns (CASSANDRA-1373)\n * fix race condition leaving to FileNotFoundException (CASSANDRA-1382)\n * fix sharded lock hash on index write path (CASSANDRA-1402)\n * add support for GT/E, LT/E in subordinate index clauses (CASSANDRA-1401)\n * cfId counter got out of sync when CFs were added (CASSANDRA-1403)\n * less chatty schema updates (CASSANDRA-1389)\n * rename column family mbeans. 'type' will now include either\n   'IndexColumnFamilies' or 'ColumnFamilies' depending on the CFS type.\n   (CASSANDRA-1385)\n * disallow invalid keyspace and column family names. This includes name that\n   matches a '^\\w+' regex. (CASSANDRA-1377)\n * use JNA, if present, to take snapshots (CASSANDRA-1371)\n * truncate hints if starting 0.7 for the first time (CASSANDRA-1414)\n * fix FD leak in single-row slicepredicate queries (CASSANDRA-1416)\n * allow index expressions against columns that are not part of the\n   SlicePredicate (CASSANDRA-1410)\n * config-converter properly handles snitches and framed support\n   (CASSANDRA-1420)\n * remove keyspace argument from multiget_count (CASSANDRA-1422)\n * allow specifying cassandra.yaml location as (local or remote) URL\n   (CASSANDRA-1126)\n * fix using DynamicEndpointSnitch with NetworkTopologyStrategy\n   (CASSANDRA-1429)\n * Add CfDef.default_validation_class (CASSANDRA-891)\n * fix EstimatedHistogram.max (CASSANDRA-1413)\n * quorum read optimization (CASSANDRA-1622)\n * handle zero-length (or missing) rows during HH paging (CASSANDRA-1432)\n * include secondary indexes during schema migrations (CASSANDRA-1406)\n * fix commitlog header race during schema change (CASSANDRA-1435)\n * fix ColumnFamilyStoreMBeanIterator to use new type name (CASSANDRA-1433)\n * correct filename generated by xml->yaml converter (CASSANDRA-1419)\n * add CMSInitiatingOccupancyFraction=75 and UseCMSInitiatingOccupancyOnly\n   to default JVM options\n * decrease jvm heap for cassandra-cli (CASSANDRA-1446)\n * ability to modify keyspaces and column family definitions on a live cluster\n   (CASSANDRA-1285)\n * support for Hadoop Streaming [non-jvm map/reduce via stdin/out]\n   (CASSANDRA-1368)\n * Move persistent sstable stats from the system table to an sstable component\n   (CASSANDRA-1430)\n * remove failed bootstrap attempt from pending ranges when gossip times\n   it out after 1h (CASSANDRA-1463)\n * eager-create tcp connections to other cluster members (CASSANDRA-1465)\n * enumerate stages and derive stage from message type instead of\n   transmitting separately (CASSANDRA-1465)\n * apply reversed flag during collation from different data sources\n   (CASSANDRA-1450)\n * make failure to remove commitlog segment non-fatal (CASSANDRA-1348)\n * correct ordering of drain operations so CL.recover is no longer\n   necessary (CASSANDRA-1408)\n * removed keyspace from describe_splits method (CASSANDRA-1425)\n * rename check_schema_agreement to describe_schema_versions\n   (CASSANDRA-1478)\n * fix QUORUM calculation for RF > 3 (CASSANDRA-1487)\n * remove tombstones during non-major compactions when bloom filter\n   verifies that row does not exist in other sstables (CASSANDRA-1074)\n * nodes that coordinated a loadbalance in the past could not be seen by\n   newly added nodes (CASSANDRA-1467)\n * exposed endpoint states (gossip details) via jmx (CASSANDRA-1467)\n * ensure that compacted sstables are not included when new readers are\n   instantiated (CASSANDRA-1477)\n * by default, calculate heap size and memtable thresholds at runtime (CASSANDRA-1469)\n * fix races dealing with adding/dropping keyspaces and column families in\n   rapid succession (CASSANDRA-1477)\n * clean up of Streaming system (CASSANDRA-1503, 1504, 1506)\n * add options to configure Thrift socket keepalive and buffer sizes (CASSANDRA-1426)\n * make contrib CassandraServiceDataCleaner recursive (CASSANDRA-1509)\n * min, max compaction threshold are configurable and persistent\n   per-ColumnFamily (CASSANDRA-1468)\n * fix replaying the last mutation in a commitlog unnecessarily\n   (CASSANDRA-1512)\n * invoke getDefaultUncaughtExceptionHandler from DTPE with the original\n   exception rather than the ExecutionException wrapper (CASSANDRA-1226)\n * remove Clock from the Thrift (and Avro) API (CASSANDRA-1501)\n * Close intra-node sockets when connection is broken (CASSANDRA-1528)\n * RPM packaging spec file (CASSANDRA-786)\n * weighted request scheduler (CASSANDRA-1485)\n * treat expired columns as deleted (CASSANDRA-1539)\n * make IndexInterval configurable (CASSANDRA-1488)\n * add describe_snitch to Thrift API (CASSANDRA-1490)\n * MD5 authenticator compares plain text submitted password with MD5'd\n   saved property, instead of vice versa (CASSANDRA-1447)\n * JMX MessagingService pending and completed counts (CASSANDRA-1533)\n * fix race condition processing repair responses (CASSANDRA-1511)\n * make repair blocking (CASSANDRA-1511)\n * create EndpointSnitchInfo and MBean to expose rack and DC (CASSANDRA-1491)\n * added option to contrib/word_count to output results back to Cassandra\n   (CASSANDRA-1342)\n * rewrite Hadoop ColumnFamilyRecordWriter to pool connections, retry to\n   multiple Cassandra nodes, and smooth impact on the Cassandra cluster\n   by using smaller batch sizes (CASSANDRA-1434)\n * fix setting gc_grace_seconds via CLI (CASSANDRA-1549)\n * support TTL'd index values (CASSANDRA-1536)\n * make removetoken work like decommission (CASSANDRA-1216)\n * make cli comparator-aware and improve quote rules (CASSANDRA-1523,-1524)\n * make nodetool compact and cleanup blocking (CASSANDRA-1449)\n * add memtable, cache information to GCInspector logs (CASSANDRA-1558)\n * enable/disable HintedHandoff via JMX (CASSANDRA-1550)\n * Ignore stray files in the commit log directory (CASSANDRA-1547)\n * Disallow bootstrap to an in-use token (CASSANDRA-1561)\n\n\n0.7-beta1\n * sstable versioning (CASSANDRA-389)\n * switched to slf4j logging (CASSANDRA-625)\n * add (optional) expiration time for column (CASSANDRA-699)\n * access levels for authentication/authorization (CASSANDRA-900)\n * add ReadRepairChance to CF definition (CASSANDRA-930)\n * fix heisenbug in system tests, especially common on OS X (CASSANDRA-944)\n * convert to byte[] keys internally and all public APIs (CASSANDRA-767)\n * ability to alter schema definitions on a live cluster (CASSANDRA-44)\n * renamed configuration file to cassandra.xml, and log4j.properties to\n   log4j-server.properties, which must now be loaded from\n   the classpath (which is how our scripts in bin/ have always done it)\n   (CASSANDRA-971)\n * change get_count to require a SlicePredicate. create multi_get_count\n   (CASSANDRA-744)\n * re-organized endpointsnitch implementations and added SimpleSnitch\n   (CASSANDRA-994)\n * Added preload_row_cache option (CASSANDRA-946)\n * add CRC to commitlog header (CASSANDRA-999)\n * removed deprecated batch_insert and get_range_slice methods (CASSANDRA-1065)\n * add truncate thrift method (CASSANDRA-531)\n * http mini-interface using mx4j (CASSANDRA-1068)\n * optimize away copy of sliced row on memtable read path (CASSANDRA-1046)\n * replace constant-size 2GB mmaped segments and special casing for index\n   entries spanning segment boundaries, with SegmentedFile that computes\n   segments that always contain entire entries/rows (CASSANDRA-1117)\n * avoid reading large rows into memory during compaction (CASSANDRA-16)\n * added hadoop OutputFormat (CASSANDRA-1101)\n * efficient Streaming (no more anticompaction) (CASSANDRA-579)\n * split commitlog header into separate file and add size checksum to\n   mutations (CASSANDRA-1179)\n * avoid allocating a new byte[] for each mutation on replay (CASSANDRA-1219)\n * revise HH schema to be per-endpoint (CASSANDRA-1142)\n * add joining/leaving status to nodetool ring (CASSANDRA-1115)\n * allow multiple repair sessions per node (CASSANDRA-1190)\n * optimize away MessagingService for local range queries (CASSANDRA-1261)\n * make framed transport the default so malformed requests can't OOM the\n   server (CASSANDRA-475)\n * significantly faster reads from row cache (CASSANDRA-1267)\n * take advantage of row cache during range queries (CASSANDRA-1302)\n * make GCGraceSeconds a per-ColumnFamily value (CASSANDRA-1276)\n * keep persistent row size and column count statistics (CASSANDRA-1155)\n * add IntegerType (CASSANDRA-1282)\n * page within a single row during hinted handoff (CASSANDRA-1327)\n * push DatacenterShardStrategy configuration into keyspace definition,\n   eliminating datacenter.properties. (CASSANDRA-1066)\n * optimize forward slices starting with '' and single-index-block name\n   queries by skipping the column index (CASSANDRA-1338)\n * streaming refactor (CASSANDRA-1189)\n * faster comparison for UUID types (CASSANDRA-1043)\n * secondary index support (CASSANDRA-749 and subtasks)\n * make compaction buckets deterministic (CASSANDRA-1265)\n\n\n0.6.6\n * Allow using DynamicEndpointSnitch with RackAwareStrategy (CASSANDRA-1429)\n * remove the remaining vestiges of the unfinished DatacenterShardStrategy\n   (replaced by NetworkTopologyStrategy in 0.7)\n\n\n0.6.5\n * fix key ordering in range query results with RandomPartitioner\n   and ConsistencyLevel > ONE (CASSANDRA-1145)\n * fix for range query starting with the wrong token range (CASSANDRA-1042)\n * page within a single row during hinted handoff (CASSANDRA-1327)\n * fix compilation on non-sun JDKs (CASSANDRA-1061)\n * remove String.trim() call on row keys in batch mutations (CASSANDRA-1235)\n * Log summary of dropped messages instead of spamming log (CASSANDRA-1284)\n * add dynamic endpoint snitch (CASSANDRA-981)\n * fix streaming for keyspaces with hyphens in their name (CASSANDRA-1377)\n * fix errors in hard-coded bloom filter optKPerBucket by computing it\n   algorithmically (CASSANDRA-1220\n * remove message deserialization stage, and uncap read/write stages\n   so slow reads/writes don't block gossip processing (CASSANDRA-1358)\n * add jmx port configuration to Debian package (CASSANDRA-1202)\n * use mlockall via JNA, if present, to prevent Linux from swapping\n   out parts of the JVM (CASSANDRA-1214)\n\n\n0.6.4\n * avoid queuing multiple hint deliveries for the same endpoint\n   (CASSANDRA-1229)\n * better performance for and stricter checking of UTF8 column names\n   (CASSANDRA-1232)\n * extend option to lower compaction priority to hinted handoff\n   as well (CASSANDRA-1260)\n * log errors in gossip instead of re-throwing (CASSANDRA-1289)\n * avoid aborting commitlog replay prematurely if a flushed-but-\n   not-removed commitlog segment is encountered (CASSANDRA-1297)\n * fix duplicate rows being read during mapreduce (CASSANDRA-1142)\n * failure detection wasn't closing command sockets (CASSANDRA-1221)\n * cassandra-cli.bat works on windows (CASSANDRA-1236)\n * pre-emptively drop requests that cannot be processed within RPCTimeout\n   (CASSANDRA-685)\n * add ack to Binary write verb and update CassandraBulkLoader\n   to wait for acks for each row (CASSANDRA-1093)\n * added describe_partitioner Thrift method (CASSANDRA-1047)\n * Hadoop jobs no longer require the Cassandra storage-conf.xml\n   (CASSANDRA-1280, CASSANDRA-1047)\n * log thread pool stats when GC is excessive (CASSANDRA-1275)\n * remove gossip message size limit (CASSANDRA-1138)\n * parallelize local and remote reads during multiget, and respect snitch\n   when determining whether to do local read for CL.ONE (CASSANDRA-1317)\n * fix read repair to use requested consistency level on digest mismatch,\n   rather than assuming QUORUM (CASSANDRA-1316)\n * process digest mismatch re-reads in parallel (CASSANDRA-1323)\n * switch hints CF comparator to BytesType (CASSANDRA-1274)\n\n\n0.6.3\n * retry to make streaming connections up to 8 times. (CASSANDRA-1019)\n * reject describe_ring() calls on invalid keyspaces (CASSANDRA-1111)\n * fix cache size calculation for size of 100% (CASSANDRA-1129)\n * fix cache capacity only being recalculated once (CASSANDRA-1129)\n * remove hourly scan of all hints on the off chance that the gossiper\n   missed a status change; instead, expose deliverHintsToEndpoint to JMX\n   so it can be done manually, if necessary (CASSANDRA-1141)\n * don't reject reads at CL.ALL (CASSANDRA-1152)\n * reject deletions to supercolumns in CFs containing only standard\n   columns (CASSANDRA-1139)\n * avoid preserving login information after client disconnects\n   (CASSANDRA-1057)\n * prefer sun jdk to openjdk in debian init script (CASSANDRA-1174)\n * detect partioner config changes between restarts and fail fast\n   (CASSANDRA-1146)\n * use generation time to resolve node token reassignment disagreements\n   (CASSANDRA-1118)\n * restructure the startup ordering of Gossiper and MessageService to avoid\n   timing anomalies (CASSANDRA-1160)\n * detect incomplete commit log hearders (CASSANDRA-1119)\n * force anti-entropy service to stream files on the stream stage to avoid\n   sending streams out of order (CASSANDRA-1169)\n * remove inactive stream managers after AES streams files (CASSANDRA-1169)\n * allow removing entire row through batch_mutate Deletion (CASSANDRA-1027)\n * add JMX metrics for row-level bloom filter false positives (CASSANDRA-1212)\n * added a redhat init script to contrib (CASSANDRA-1201)\n * use midpoint when bootstrapping a new machine into range with not\n   much data yet instead of random token (CASSANDRA-1112)\n * kill server on OOM in executor stage as well as Thrift (CASSANDRA-1226)\n * remove opportunistic repairs, when two machines with overlapping replica\n   responsibilities happen to finish major compactions of the same CF near\n   the same time.  repairs are now fully manual (CASSANDRA-1190)\n * add ability to lower compaction priority (default is no change from 0.6.2)\n   (CASSANDRA-1181)\n\n\n0.6.2\n * fix contrib/word_count build. (CASSANDRA-992)\n * split CommitLogExecutorService into BatchCommitLogExecutorService and\n   PeriodicCommitLogExecutorService (CASSANDRA-1014)\n * add latency histograms to CFSMBean (CASSANDRA-1024)\n * make resolving timestamp ties deterministic by using value bytes\n   as a tiebreaker (CASSANDRA-1039)\n * Add option to turn off Hinted Handoff (CASSANDRA-894)\n * fix windows startup (CASSANDRA-948)\n * make concurrent_reads, concurrent_writes configurable at runtime via JMX\n   (CASSANDRA-1060)\n * disable GCInspector on non-Sun JVMs (CASSANDRA-1061)\n * fix tombstone handling in sstable rows with no other data (CASSANDRA-1063)\n * fix size of row in spanned index entries (CASSANDRA-1056)\n * install json2sstable, sstable2json, and sstablekeys to Debian package\n * StreamingService.StreamDestinations wouldn't empty itself after streaming\n   finished (CASSANDRA-1076)\n * added Collections.shuffle(splits) before returning the splits in\n   ColumnFamilyInputFormat (CASSANDRA-1096)\n * do not recalculate cache capacity post-compaction if it's been manually\n   modified (CASSANDRA-1079)\n * better defaults for flush sorter + writer executor queue sizes\n   (CASSANDRA-1100)\n * windows scripts for SSTableImport/Export (CASSANDRA-1051)\n * windows script for nodetool (CASSANDRA-1113)\n * expose PhiConvictThreshold (CASSANDRA-1053)\n * make repair of RF==1 a no-op (CASSANDRA-1090)\n * improve default JVM GC options (CASSANDRA-1014)\n * fix SlicePredicate serialization inside Hadoop jobs (CASSANDRA-1049)\n * close Thrift sockets in Hadoop ColumnFamilyRecordReader (CASSANDRA-1081)\n\n\n0.6.1\n * fix NPE in sstable2json when no excluded keys are given (CASSANDRA-934)\n * keep the replica set constant throughout the read repair process\n   (CASSANDRA-937)\n * allow querying getAllRanges with empty token list (CASSANDRA-933)\n * fix command line arguments inversion in clustertool (CASSANDRA-942)\n * fix race condition that could trigger a false-positive assertion\n   during post-flush discard of old commitlog segments (CASSANDRA-936)\n * fix neighbor calculation for anti-entropy repair (CASSANDRA-924)\n * perform repair even for small entropy differences (CASSANDRA-924)\n * Use hostnames in CFInputFormat to allow Hadoop's naive string-based\n   locality comparisons to work (CASSANDRA-955)\n * cache read-only BufferedRandomAccessFile length to avoid\n   3 system calls per invocation (CASSANDRA-950)\n * nodes with IPv6 (and no IPv4) addresses could not join cluster\n   (CASSANDRA-969)\n * Retrieve the correct number of undeleted columns, if any, from\n   a supercolumn in a row that had been deleted previously (CASSANDRA-920)\n * fix index scans that cross the 2GB mmap boundaries for both mmap\n   and standard i/o modes (CASSANDRA-866)\n * expose drain via nodetool (CASSANDRA-978)\n\n\n0.6.0-RC1\n * JMX drain to flush memtables and run through commit log (CASSANDRA-880)\n * Bootstrapping can skip ranges under the right conditions (CASSANDRA-902)\n * fix merging row versions in range_slice for CL > ONE (CASSANDRA-884)\n * default write ConsistencyLeven chaned from ZERO to ONE\n * fix for index entries spanning mmap buffer boundaries (CASSANDRA-857)\n * use lexical comparison if time part of TimeUUIDs are the same\n   (CASSANDRA-907)\n * bound read, mutation, and response stages to fix possible OOM\n   during log replay (CASSANDRA-885)\n * Use microseconds-since-epoch (UTC) in cli, instead of milliseconds\n * Treat batch_mutate Deletion with null supercolumn as \"apply this predicate\n   to top level supercolumns\" (CASSANDRA-834)\n * Streaming destination nodes do not update their JMX status (CASSANDRA-916)\n * Fix internal RPC timeout calculation (CASSANDRA-911)\n * Added Pig loadfunc to contrib/pig (CASSANDRA-910)\n\n\n0.6.0-beta3\n * fix compaction bucketing bug (CASSANDRA-814)\n * update windows batch file (CASSANDRA-824)\n * deprecate KeysCachedFraction configuration directive in favor\n   of KeysCached; move to unified-per-CF key cache (CASSANDRA-801)\n * add invalidateRowCache to ColumnFamilyStoreMBean (CASSANDRA-761)\n * send Handoff hints to natural locations to reduce load on\n   remaining nodes in a failure scenario (CASSANDRA-822)\n * Add RowWarningThresholdInMB configuration option to warn before very\n   large rows get big enough to threaten node stability, and -x option to\n   be able to remove them with sstable2json if the warning is unheeded\n   until it's too late (CASSANDRA-843)\n * Add logging of GC activity (CASSANDRA-813)\n * fix ConcurrentModificationException in commitlog discard (CASSANDRA-853)\n * Fix hardcoded row count in Hadoop RecordReader (CASSANDRA-837)\n * Add a jmx status to the streaming service and change several DEBUG\n   messages to INFO (CASSANDRA-845)\n * fix classpath in cassandra-cli.bat for Windows (CASSANDRA-858)\n * allow re-specifying host, port to cassandra-cli if invalid ones\n   are first tried (CASSANDRA-867)\n * fix race condition handling rpc timeout in the coordinator\n   (CASSANDRA-864)\n * Remove CalloutLocation and StagingFileDirectory from storage-conf files\n   since those settings are no longer used (CASSANDRA-878)\n * Parse a long from RowWarningThresholdInMB instead of an int (CASSANDRA-882)\n * Remove obsolete ControlPort code from DatabaseDescriptor (CASSANDRA-886)\n * move skipBytes side effect out of assert (CASSANDRA-899)\n * add \"double getLoad\" to StorageServiceMBean (CASSANDRA-898)\n * track row stats per CF at compaction time (CASSANDRA-870)\n * disallow CommitLogDirectory matching a DataFileDirectory (CASSANDRA-888)\n * default key cache size is 200k entries, changed from 10% (CASSANDRA-863)\n * add -Dcassandra-foreground=yes to cassandra.bat\n * exit if cluster name is changed unexpectedly (CASSANDRA-769)\n\n\n0.6.0-beta1/beta2\n * add batch_mutate thrift command, deprecating batch_insert (CASSANDRA-336)\n * remove get_key_range Thrift API, deprecated in 0.5 (CASSANDRA-710)\n * add optional login() Thrift call for authentication (CASSANDRA-547)\n * support fat clients using gossiper and StorageProxy to perform\n   replication in-process [jvm-only] (CASSANDRA-535)\n * support mmapped I/O for reads, on by default on 64bit JVMs\n   (CASSANDRA-408, CASSANDRA-669)\n * improve insert concurrency, particularly during Hinted Handoff\n   (CASSANDRA-658)\n * faster network code (CASSANDRA-675)\n * stress.py moved to contrib (CASSANDRA-635)\n * row caching [must be explicitly enabled per-CF in config] (CASSANDRA-678)\n * present a useful measure of compaction progress in JMX (CASSANDRA-599)\n * add bin/sstablekeys (CASSNADRA-679)\n * add ConsistencyLevel.ANY (CASSANDRA-687)\n * make removetoken remove nodes from gossip entirely (CASSANDRA-644)\n * add ability to set cache sizes at runtime (CASSANDRA-708)\n * report latency and cache hit rate statistics with lifetime totals\n   instead of average over the last minute (CASSANDRA-702)\n * support get_range_slice for RandomPartitioner (CASSANDRA-745)\n * per-keyspace replication factory and replication strategy (CASSANDRA-620)\n * track latency in microseconds (CASSANDRA-733)\n * add describe_ Thrift methods, deprecating get_string_property and\n   get_string_list_property\n * jmx interface for tracking operation mode and streams in general.\n   (CASSANDRA-709)\n * keep memtables in sorted order to improve range query performance\n   (CASSANDRA-799)\n * use while loop instead of recursion when trimming sstables compaction list\n   to avoid blowing stack in pathological cases (CASSANDRA-804)\n * basic Hadoop map/reduce support (CASSANDRA-342)\n\n\n0.5.1\n * ensure all files for an sstable are streamed to the same directory.\n   (CASSANDRA-716)\n * more accurate load estimate for bootstrapping (CASSANDRA-762)\n * tolerate dead or unavailable bootstrap target on write (CASSANDRA-731)\n * allow larger numbers of keys (> 140M) in a sstable bloom filter\n   (CASSANDRA-790)\n * include jvm argument improvements from CASSANDRA-504 in debian package\n * change streaming chunk size to 32MB to accomodate Windows XP limitations\n   (was 64MB) (CASSANDRA-795)\n * fix get_range_slice returning results in the wrong order (CASSANDRA-781)\n\n\n0.5.0 final\n * avoid attempting to delete temporary bootstrap files twice (CASSANDRA-681)\n * fix bogus NaN in nodeprobe cfstats output (CASSANDRA-646)\n * provide a policy for dealing with single thread executors w/ a full queue\n   (CASSANDRA-694)\n * optimize inner read in MessagingService, vastly improving multiple-node\n   performance (CASSANDRA-675)\n * wait for table flush before streaming data back to a bootstrapping node.\n   (CASSANDRA-696)\n * keep track of bootstrapping sources by table so that bootstrapping doesn't\n   give the indication of finishing early (CASSANDRA-673)\n\n\n0.5.0 RC3\n * commit the correct version of the patch for CASSANDRA-663\n\n\n0.5.0 RC2 (unreleased)\n * fix bugs in converting get_range_slice results to Thrift\n   (CASSANDRA-647, CASSANDRA-649)\n * expose java.util.concurrent.TimeoutException in StorageProxy methods\n   (CASSANDRA-600)\n * TcpConnectionManager was holding on to disconnected connections,\n   giving the false indication they were being used. (CASSANDRA-651)\n * Remove duplicated write. (CASSANDRA-662)\n * Abort bootstrap if IP is already in the token ring (CASSANDRA-663)\n * increase default commitlog sync period, and wait for last sync to\n   finish before submitting another (CASSANDRA-668)\n\n\n0.5.0 RC1\n * Fix potential NPE in get_range_slice (CASSANDRA-623)\n * add CRC32 to commitlog entries (CASSANDRA-605)\n * fix data streaming on windows (CASSANDRA-630)\n * GC compacted sstables after cleanup and compaction (CASSANDRA-621)\n * Speed up anti-entropy validation (CASSANDRA-629)\n * Fix anti-entropy assertion error (CASSANDRA-639)\n * Fix pending range conflicts when bootstapping or moving\n   multiple nodes at once (CASSANDRA-603)\n * Handle obsolete gossip related to node movement in the case where\n   one or more nodes is down when the movement occurs (CASSANDRA-572)\n * Include dead nodes in gossip to avoid a variety of problems\n   and fix HH to removed nodes (CASSANDRA-634)\n * return an InvalidRequestException for mal-formed SlicePredicates\n   (CASSANDRA-643)\n * fix bug determining closest neighbor for use in multiple datacenters\n   (CASSANDRA-648)\n * Vast improvements in anticompaction speed (CASSANDRA-607)\n * Speed up log replay and writes by avoiding redundant serializations\n   (CASSANDRA-652)\n\n\n0.5.0 beta 2\n * Bootstrap improvements (several tickets)\n * add nodeprobe repair anti-entropy feature (CASSANDRA-193, CASSANDRA-520)\n * fix possibility of partition when many nodes restart at once\n   in clusters with multiple seeds (CASSANDRA-150)\n * fix NPE in get_range_slice when no data is found (CASSANDRA-578)\n * fix potential NPE in hinted handoff (CASSANDRA-585)\n * fix cleanup of local \"system\" keyspace (CASSANDRA-576)\n * improve computation of cluster load balance (CASSANDRA-554)\n * added super column read/write, column count, and column/row delete to\n   cassandra-cli (CASSANDRA-567, CASSANDRA-594)\n * fix returning live subcolumns of deleted supercolumns (CASSANDRA-583)\n * respect JAVA_HOME in bin/ scripts (several tickets)\n * add StorageService.initClient for fat clients on the JVM (CASSANDRA-535)\n   (see contrib/client_only for an example of use)\n * make consistency_level functional in get_range_slice (CASSANDRA-568)\n * optimize key deserialization for RandomPartitioner (CASSANDRA-581)\n * avoid GCing tombstones except on major compaction (CASSANDRA-604)\n * increase failure conviction threshold, resulting in less nodes\n   incorrectly (and temporarily) marked as down (CASSANDRA-610)\n * respect memtable thresholds during log replay (CASSANDRA-609)\n * support ConsistencyLevel.ALL on read (CASSANDRA-584)\n * add nodeprobe removetoken command (CASSANDRA-564)\n\n\n0.5.0 beta\n * Allow multiple simultaneous flushes, improving flush throughput\n   on multicore systems (CASSANDRA-401)\n * Split up locks to improve write and read throughput on multicore systems\n   (CASSANDRA-444, CASSANDRA-414)\n * More efficient use of memory during compaction (CASSANDRA-436)\n * autobootstrap option: when enabled, all non-seed nodes will attempt\n   to bootstrap when started, until bootstrap successfully\n   completes. -b option is removed.  (CASSANDRA-438)\n * Unless a token is manually specified in the configuration xml,\n   a bootstraping node will use a token that gives it half the\n   keys from the most-heavily-loaded node in the cluster,\n   instead of generating a random token.\n   (CASSANDRA-385, CASSANDRA-517)\n * Miscellaneous bootstrap fixes (several tickets)\n * Ability to change a node's token even after it has data on it\n   (CASSANDRA-541)\n * Ability to decommission a live node from the ring (CASSANDRA-435)\n * Semi-automatic loadbalancing via nodeprobe (CASSANDRA-192)\n * Add ability to set compaction thresholds at runtime via\n   JMX / nodeprobe.  (CASSANDRA-465)\n * Add \"comment\" field to ColumnFamily definition. (CASSANDRA-481)\n * Additional JMX metrics (CASSANDRA-482)\n * JSON based export and import tools (several tickets)\n * Hinted Handoff fixes (several tickets)\n * Add key cache to improve read performance (CASSANDRA-423)\n * Simplified construction of custom ReplicationStrategy classes\n   (CASSANDRA-497)\n * Graphical application (Swing) for ring integrity verification and\n   visualization was added to contrib (CASSANDRA-252)\n * Add DCQUORUM, DCQUORUMSYNC consistency levels and corresponding\n   ReplicationStrategy / EndpointSnitch classes.  Experimental.\n   (CASSANDRA-492)\n * Web client interface added to contrib (CASSANDRA-457)\n * More-efficient flush for Random, CollatedOPP partitioners\n   for normal writes (CASSANDRA-446) and bulk load (CASSANDRA-420)\n * Add MemtableFlushAfterMinutes, a global replacement for the old\n   per-CF FlushPeriodInMinutes setting (CASSANDRA-463)\n * optimizations to slice reading (CASSANDRA-350) and supercolumn\n   queries (CASSANDRA-510)\n * force binding to given listenaddress for nodes with multiple\n   interfaces (CASSANDRA-546)\n * stress.py benchmarking tool improvements (several tickets)\n * optimized replica placement code (CASSANDRA-525)\n * faster log replay on restart (CASSANDRA-539, CASSANDRA-540)\n * optimized local-node writes (CASSANDRA-558)\n * added get_range_slice, deprecating get_key_range (CASSANDRA-344)\n * expose TimedOutException to thrift (CASSANDRA-563)\n\n\n0.4.2\n * Add validation disallowing null keys (CASSANDRA-486)\n * Fix race conditions in TCPConnectionManager (CASSANDRA-487)\n * Fix using non-utf8-aware comparison as a sanity check.\n   (CASSANDRA-493)\n * Improve default garbage collector options (CASSANDRA-504)\n * Add \"nodeprobe flush\" (CASSANDRA-505)\n * remove NotFoundException from get_slice throws list (CASSANDRA-518)\n * fix get (not get_slice) of entire supercolumn (CASSANDRA-508)\n * fix null token during bootstrap (CASSANDRA-501)\n\n\n0.4.1\n * Fix FlushPeriod columnfamily configuration regression\n   (CASSANDRA-455)\n * Fix long column name support (CASSANDRA-460)\n * Fix for serializing a row that only contains tombstones\n   (CASSANDRA-458)\n * Fix for discarding unneeded commitlog segments (CASSANDRA-459)\n * Add SnapshotBeforeCompaction configuration option (CASSAND"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.982421875,
          "content": "<!--\n#\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n-->\n\n# Apache Cassandra and Pull Requests\n\nApache Cassandra doesn't use GitHub pull requests as part of the development process.\nIn fact, this repository is a GitHub mirror of [the official repo](https://gitbox.apache.org/repos/asf/cassandra.git).\n\n# How to Contribute\n\nUse [Cassandra JIRA](https://issues.apache.org/jira/browse/CASSANDRA/) to create an issue, then either attach a patch or post a link to a GitHub branch with your changes.\n\n# Useful Links\n\n- How you can contribute to Apache Cassandra [presentation](http://www.slideshare.net/yukim/cassandrasummit2013) by Yuki Morishita\n- Code style [wiki page](https://cwiki.apache.org/confluence/display/CASSANDRA2/CodeStyle)\n- Running Cassandra in IDEA [guide](https://cwiki.apache.org/confluence/display/CASSANDRA2/RunningCassandraInIDEA)\n- Running Cassandra in Eclipse [guide](https://cwiki.apache.org/confluence/display/CASSANDRA2/RunningCassandraInEclipse)\n- Cassandra Cluster Manager - [CCM](https://github.com/pcmanus/ccm) and a guide [blog post](http://www.datastax.com/dev/blog/ccm-a-development-tool-for-creating-local-cassandra-clusters)\n- Cassandra Distributed Tests aka [dtests](https://github.com/apache/cassandra-dtest)\n- Cassandra Testing Guidelines - see TESTING.md\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 13.3271484375,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n\n   APACHE CASSANDRA SUBCOMPONENTS:\n\n   Apache Cassandra includes a number of subcomponents with\n   separate copyright notices and license terms. Your use of the source\n   code for these subcomponents is subject to the terms and\n   conditions of the following licenses.\n\n   This product bundles a file (Dump.java) from Chronicle-Bytes,\n   copyright higherfrequencytrading.com, which is available under an\n   Apache License version 2.\n\n   This product bundles a file (AbstractGuavaIterator.java) from Guava,\n   copyright The Guava Authors, which is available under an\n   Apache License version 2.\n\n   This product bundles a file (LongTimSort.java) from Android libcore,\n   copyright The Android Open Source Project, which is available under an\n   Apache License version 2.\n\n   This product bundles several files (PatriciaTrie.java) from PATRICIA Trie\n   copyright Roger Kapsi and Sam Berlin, which is available under an\n   Apache License version 2.\n\n   This product bundles a file (VIntCoding.java) from Protocol Buffers\n   copyright Google Inc., which is available under a BSD license.\n\n   Thus product bundles material adapted from Cassandra, The Definitive Guide.\n   Published by O'Reilly Media, Inc. Copyright Jeff Carpenter and Eben Hewitt \n   and used with their permission.\n\n   This product bundles The Project Gutenberg EBook of Adventures of\n   Huckleberry Finn, Complete by Mark Twain (Samuel Clemens), which is in\n   the public domain.\n   \n   This product bundles code (internalOffer) that is written by Doug Lea and\n   Martin Buchholz available under a Creative Commons zero license.\n\n   This product bundles code (cassandra-driver-internal-only-*.zip) from the Datastax Java Driver\n   copyright DataStax, Inc., which is available under an Apache License version 2.\n\n   This product bundles code (cassandra-driver-internal-only-*.zip) from python-smhasher\n   copyright Austin Appleby and Patrick Hensley, which is available under a MIT license.\n\n   This product bundles code (cassandra-driver-internal-only-*.zip) from the OrderedDict\n   copyright Raymond Hettinger, which is available under a MIT license.\n\n   This product bundles code (cassandra-driver-internal-only-*.zip) from the MagnetoDB\n   copyright Mirantis Inc., which is available under an Apache License version 2.\n"
        },
        {
          "name": "NEWS.txt",
          "type": "blob",
          "size": 186.5751953125,
          "content": "PLEASE READ: MAXIMUM TTL EXPIRATION DATE NOTICE (CASSANDRA-14092 & CASSANDRA-14227)\n-----------------------------------------------------------------------------------\n(General upgrading instructions are available in the next section)\n\nThe maximum expiration timestamp that can be represented by the storage engine has been\nraised to 2106-02-07T06:28:13+00:00 (2038-01-19T03:14:06+00:00 if in compatibility mode \nwith Cassandra <5.0, sstable version <=oa), which means that inserts with TTL that expire after\nthis date are not currently supported. By default, INSERTS with TTL exceeding the\nmaximum supported date are rejected, but it's possible to choose a different \nexpiration overflow policy. See CASSANDRA-14092.txt for more details.\n \nThere is a new yaml property storage_compatibility_mode that determines the\nCassandra major version we want to stay compatible with. Its default is CASSANDRA_4, which means that\nthe node sstables, commitlog, hints and messaging version will stay compatible with Cassandra 4.x,\n2038 will still be the limit, and it will be possible to rollback to the previous version. To upgrade:\n - Do a rolling upgrade to 5.0 where 2038 will still be the limit. At this point, the node won't write\n anything incompatible with Cassandra 4.x, and you would still be able to rollback to that version.\n - Do a rolling restart setting storage_compatibility_mode=UPGRADING. Once all nodes\n are in storage version 5, 2106 will become the new limit.\n - Do a rolling restart setting storage_compatibility_mode=NONE. Now mixed\n 2038 and 2106 nodes are no longer possible.\nNotice the yaml property needs to be set all the time for all executables and tools. It\nwill be removed in future versions when 2038 nodes are no longer possible.\n\nPrior to 3.0.16 (3.0.X) and 3.11.2 (3.11.x) there was no protection against INSERTS\nwith TTL expiring after the maximum supported date, causing the expiration time\nfield to overflow and the records to expire immediately. Clusters in the 2.X and\nlower series are not subject to this when assertions are enabled. Backed up SSTables\ncan be potentially recovered and recovery instructions can be found on the\nCASSANDRA-14092.txt file.\n\nIf you use or plan to use very large TTLS (10 to 20 years), read CASSANDRA-14092.txt\nfor more information.\n\nPLEASE READ: CVE-2021-44521 SCRIPTED UDF SYSTEM ACCESS (CASSANDRA-17352)\n------------------------------------------------------------------------\n\nIf you have enabled scripted UDFs and run without UDF threads in cassandra.yaml:\n\n    enable_user_defined_functions_threads: false\n\nan attacker could access java.lang.System methods and execute arbitrary code on\nthe machine. Disabling UDF threads is still considered insecure and not recommended.\n\nTo continue running without UDF threads you will need to set:\n\n    allow_insecure_udfs: true\n\nand if you need access to java.lang.System for existing UDFs, set:\n\n    allow_extra_insecure_udfs: true\n\nGENERAL UPGRADING ADVICE FOR ANY VERSION\n========================================\n\nSnapshotting is fast (especially if you have JNA installed) and takes\neffectively zero disk space until you start compacting the live data\nfiles again.  Thus, best practice is to ALWAYS snapshot before any\nupgrade, just in case you need to roll back to the previous version.\n(Cassandra version X + 1 will always be able to read data files created\nby version X, but the inverse is not necessarily the case.)\n\nWhen upgrading major versions of Cassandra, you will be unable to\nrestore snapshots created with the previous major version using the\n'sstableloader' tool. You can upgrade the file format of your snapshots\nusing the provided 'sstableupgrade' tool.\n\n\n5.1\n===\n\nNew features\n------------\n    [The following is a placeholder, to be revised asap]\n    - CEP-21 Transactional Cluster Metadata introduces a distributed log for linearizing modifications to cluster\n    metadata. In the first instance, this encompasses cluster membership, token ownership and schema metadata. See\n    https://cwiki.apache.org/confluence/display/CASSANDRA/CEP-21%3A+Transactional+Cluster+Metadata for more detail on\n    the motivation and design, and see \"Upgrading\" below for specific instructions on migrating clusters to this system.\n    More updates and documentation to follow.\n    - New Guardrails added:\n      - Whether bulk loading of SSTables is allowed.\n    - nodetool tpstats can display core pool size, max pool size and max tasks queued if --verbose / -v flag is specified.\n      system_views.thread_pools adds core_pool_size, max_pool_size and max_tasks_queued columns.\n    - Authentication mode is exposed in system_views.clients table, nodetool clientstats and ClientMetrics \n      to help operators identify which authentication modes are being used. nodetool clientstats introduces --verbose flag \n      behind which this information is visible.\n    - CEP-24 - Password validation / generation. When built-in 'password_validator' guardrail is enabled, it will\n      generate a password of configured password strength policy upon role creation or alteration\n      when 'GENERATED PASSWORD' clause is used. Character sets supported are: English, Cyrillic, modern Cyrillic,\n      German, Polish and Czech.\n    - There is new MBean of name org.apache.cassandra.service.snapshot:type=SnapshotManager which exposes user-facing\n      snapshot operations. Snapshot-related methods on StorageServiceMBean are still present and functional\n      but marked as deprecated.\n    - The unified compaction strategy will now parallelize individual compactions by splitting operations into separate\n      tasks per output shard. This significantly shortens compaction durations but cannot take advantage of preemptive\n      SSTable opening and thus can be less efficient if the strategy is configured to create large sstables.\n      This functionality is controlled by the parallelize_output_shards compaction option (the default can also be set\n      using -Dunified_compaction.parallelize_output_shards=false/true).\n    - Compaction parallelism for the unified compaction strategy also applies to major compactions. Because the number\n      of shards for a major compaction is usually quite high, this can dramatically improve the duration of major\n      compactions. To avoid the possibility of starving background compactions from resources, the number of threads\n      used for major compactions is limited to half the available compaction threads by default, and can be controlled\n      by a new --jobs / -j option of nodetool compact.\n    - It is possible to configure JMX server in cassandra.yaml in jmx_server_options configuration section.\n      JMX SSL configuration can be configured via jmx_encryption_options in jmx_server_options. The old way of\n      configuring JMX is still present and default, but new way is preferable as it will e.g. not leak credentials for\n      JMX to JVM parameters. You have to opt-in to use the configuration via cassandra.yaml by uncommenting\n      the respective configuration sections and by commenting out `configure_jmx` function call in cassandra-env.sh.\n      Enabling both ways of configuring JMX will result in a node failing to start.\n\nUpgrading\n---------\n    [The following is a placeholder, to be revised asap]\n    - Upgrading to 5.1 is currently only supported from 4.0, 4.1 or 5.0. Clusters running earlier releases must first\n    upgrade to at least the latest 4.0 release. When a cluster is upgraded to 5.1 there is an additional step for\n    operators to perform. The upgrade is not considered complete until:\n      1. All UP nodes are running 5.1\n      2. The Cluster Metadata Service (CMS) has been enabled\n    The first step is just a regular upgrade, there are no changes to external APIs, SSTable formats to consider.\n    Step 2 requires an operator to run a new nodetool subcommand, intializecms, on one node in the cluster.\n      - > nodetool cms initialize\n    Doing so creates the CMS with the local node as its only member. The initialize command cannot be executed until\n    step 1 is complete and all nodes are running 5.1 as migrating metadata management over to the new TCM system\n    requires all nodes to be in agreement over the current state of the cluster. Essentially this means agreement on\n    schema and topology. Once the upgrade has started, but before the initialize command is run, metadata-changing\n    operations are not permitted and if attempted from an upgraded node will be rejected.\n    Prohibited operations include:\n      - schema changes\n      - node replacement\n      - bootstrap\n      - decommission\n      - move\n      - assasinate\n    For the time being there is no mechanism in place to prevent these operations being executed by a node still running\n    a previous version, though this is planned before release. Any automation which can trigger these operations should\n    be disabled for the cluster prior to starting the upgrade.\n    Should any of the prohibited operations be executed (i.e. on a node that is still running a pre-5.1 version) before\n    the CMS intialization, nodes which are DOWN or which have been upgraded will not process the metadata changes.\n    However, nodes still UP and running the old version will. This will eventually cause the migration to fail, as the\n    cluster will not be in agreement.\n      - > nodetool cms initialize\n        Got mismatching cluster metadatas from [/x.x.x.x:7000] aborting migration\n        See 'nodetool help' or 'nodetool help <command>'.\n    If the cms initialize command fails, it will indicate which nodesâ current metadata does not agree with the node\n    where the command was executed. To mitigate this situation, bring any mismatching nodes DOWN and rerun the\n    cms initialize command with the additional âignore flag.\n      - nodetool cms intialize -ignore x.x.x.x\n    Once the command has run successfully the ignored nodes can be restarted but any metadata changes that they\n    accepted/and or applied whilst the cluster was in mixed mode will be lost. We plan to improve this before beta, but\n    in the meantime operators should ensure no schema or membership/ownership changes are performed during the upgrade.\n    Although the restrictions on metadata-changing operations will be removed as soon as the initial CMS migration is\n    complete, at that point the CMS will only contain a single member, which is not suitable for real clusters. To\n    modify the membership of the CMS a second nodetool subcommand, cms reconfigure, should be run. This command allows\n    the number of required number of CMS members to be specified for each datacenter. Consensus for metadata operations\n    by the CMS is obtained via Paxos, operating at SERIAL/QUORUM consistency, so the minimum safe size for the CMS is 3\n    nodes. In multi-DC deployments, the CMS members may be distributed across DCs to ensure resilience in the case of a\n    DC outage. It is not recommended to make every node a member of the CMS. Redundancy is the primary concern here, not\n    locality or latency, so between 3 and 7 nodes per DC depending on the size of the cluster should be the goal.\n    Deploying to a fresh cluster is more straightforward. As the cluster comes up, at least one node will automatically\n    nominate itself as the first CMS node. A simple election mechanism ensures that only one node will be chosen if\n    multiple peers attempt to nominate themselves. As soon as the election is complete, metadata modifications are\n    supported. Typically, this takes only a few seconds and is likely to complete before all nodes are fully UP. Nodes\n    which come up during or after an election will learn of the elected first CMS node and direct metadata updates to\n    it. It is important to remember that at the completion of the election, the CMS still only comprises a single\n    member. Just as in the upgrade case, operators should add further members as soon as possible.\n    - native_transport_port_ssl property was removed. Please transition to using one port only. Encrypted communication\n    may be optional by setting `optional` flag in `client_encryption_options` to `true` and it should be set only\n    while in unencrypted or transitional operation. Please consult `client_encryption_options` in cassandra.yaml\n    for more information.\n\n\nDeprecation\n-----------\n    - `use_deterministic_table_id` is no longer supported and should be removed from cassandra.yaml. Table IDs may still be supplied explicitly on CREATE.\n    - IEndpointSnitch has been deprecated as ClusterMetadata is now the source of truth regarding topology information.\n      The responsibilities of the snitch have been broken out to a handful of new classes:\n      * o.a.c.locator.Locator provides datacenter and rack info for endpoints. This is not configurable as topology is\n        always sourced from ClusterMetadata.\n      * o.a.c.locator.InitialLocationProvider supplies the local datacenter and rack for a new node joining a cluster\n        for the first time. This will be used exactly once to register the Location of the node in ClusterMetadata and\n        is configurable using the `initial_location_provider` yaml setting.\n      * o.a.c.locator.NodeProximity handles sorting and ranking of replica lists. It is configurable via the\n        `node_proximity` yaml setting.\n      * o.a.c.locator.NodeAddressConfig exists mainly to support the functionality of ReconnectableSnitchHelper and\n        Ec2MultiRegionSnitch which dynamically configures the broadcast address based on cloud metadata. Optionally\n        configurable using the `address_config` yaml setting.\n      For migration and to allow us to deprecate snitches in a controlled way, use of endpoint_snitch in yaml remains\n      fully supported and all existing IEndpointSnitch implementations should continue to work seamlessly and no action\n      is required by operators at upgrade time. The in-tree snitches have been refactored to extract implementations of\n      the new interfaces so that their functionality can also be used via the new `initial_location_provider`,\n      `node_proximity` and `address_config` settings.\n\n5.0\n===\n\nNew features\n------------\n    - A new configuration file, `cassandra_latest.yaml`, is provided for users that would like to evaluate and\n      experiment with the latest recommended features and changes in Cassandra, which provide improved functionality and\n      performance. This file is intended to be used in a development environment and is only recommended for production\n      use after careful evaluation. The file is located in the conf directory and is not selected by default.\n      To use it, one may specify the file using the `-Dcassandra.config` option, e.g. by running\n      `cassandra -Dcassandra.config=file://$CASSANDRA_HOME/conf/cassandra_latest.yaml`.\n    - Added a new authorizer, CIDR authorizer, to restrict user access based on CIDR groups.\n    - Pluggable crypto providers were made possible via `crypto_provider` section in cassandra.yaml. The default provider is \n      Amazon Corretto Crypto Provider and it is installed automatically upon node's start. Only x86_64 and aarch64 architectures are supported now.\n      Please consult upgrade section to know more details when upgrading from older Cassandra versions.\n    - Added a new secondary index implementation, Storage-Attached Indexes (SAI). Overview documentation and a basic\n      tutorial can be found at src/java/org/apache/cassandra/index/sai/README.md.\n    - *Experimental* support for Java 17 has been added. JVM options that differ between or are\n      specific for Java 17 have been added into jvm17.options.\n      IMPORTANT: Running C* on Java 17 is *experimental* and do it at your own risk.\n    - Added a new \"unified\" compaction strategy that supports the use cases of the legacy compaction strategies, with\n      low space overhead, high parallelism and flexible configuration. Implemented by the UnifiedCompactionStrategy\n      class. Further details and documentation can be found in\n      src/java/org/apache/cassandra/db/compaction/UnifiedCompactionStrategy.md\n    - New `VectorType` (cql `vector<element_type, dimension>`) which adds new fixed-length element arrays. See CASSANDRA-18504\n    - Added new vector similarity functions `similarity_cosine`, `similarity_euclidean` and `similarity_dot_product`.\n    - Added ANN vector similarity search via ORDER BY ANN OF syntax on SAI indexes (using jvector library).\n    - Removed UDT type migration logic for 3.6+ clusters upgrading to 4.0.  If migration has been disabled, it must be\n      enabled before upgrading to 5.0 if the cluster used UDTs. See CASSANDRA-18504\n    - Entended max expiration time from 2038-01-19T03:14:06+00:00 to 2106-02-07T06:28:13+00:00\n    - Added new Mathematical CQL functions: abs, exp, log, log10 and round.\n    - Added a trie-based memtable implementation, which improves memory use, garbage collection efficiency and lookup\n      performance. The new memtable is implemented by the TrieMemtable class and can be selected using the memtable\n      API, see src/java/org/apache/cassandra/db/memtable/Memtable_API.md.\n    - Added a new trie-indexed SSTable format with better lookup efficiency and size. The new format removes the index\n      summary component and does not require key caching. Additionally, it is able to efficiently search in partitions\n      spanning thousands or millions of rows.\n      The format is applied by setting \"bti\" as the selected sstable format in cassandra.yaml's sstables option.\n    - Added a new configuration cdc_on_repair_enabled to toggle whether CDC mutations are replayed through the\n      write path on streaming, e.g. repair. When enabled, CDC data streamed to the destination node will be written into\n      commit log first. When disabled, the streamed CDC data is written into SSTables just the same as normal streaming.\n      If this is set to false, streaming will be considerably faster however it's possible that, in extreme situations\n      (losing > quorum # nodes in a replica set), you may have data in your SSTables that never makes it to the CDC log.\n      The default is true/enabled. The configuration can be altered via JMX.\n    - Added support for reading the write times and TTLs of the elements of collections and UDTs, regardless of being\n      frozen or not. The CQL functions writetime, maxwritetime and ttl can now be applied to entire collections/UDTs,\n      single collection/UDT elements and slices of collection/UDT elements.\n    - Added a new CQL function, maxwritetime. It shows the largest unix timestamp that the data was written, similar to\n      its sibling CQL function, writetime.\n    - New Guardrails added:\n      - Whether ALTER TABLE commands are allowed to mutate columns\n      - Whether SimpleStrategy is allowed on keyspace creation or alteration\n      - Maximum replication factor\n      - Whether DROP KEYSPACE commands are allowed.\n      - Column value size\n      - Partition size\n      - Partition tombstones\n      - Vector dimensions\n      - Whether it is possible to execute secondary index queries without restricting on partition key\n      - Warning and failure thresholds for maximum referenced SAI indexes on a replica when executing a SELECT query\n      - Warning and failure thresholds for the size of terms written to an SAI index\n    - It is possible to list ephemeral snapshots by nodetool listsnaphots command when flag \"-e\" is specified.\n    - Added a new flag to `nodetool profileload` and JMX endpoint to set up recurring profile load generation on specified\n      intervals (see CASSANDRA-17821)\n    - Added a new property, gossiper.loose_empty_enabled, to allow for a looser definition of \"empty\" when\n      considering the heartbeat state of another node in Gossip. This should only be used by knowledgeable\n      operators in the following scenarios:\n\n      Currently \"empty\" w/regards to heartbeat state in Gossip is very specific to a single edge case (i.e. in\n      isEmptyWithoutStatus() our usage of hbState() + applicationState), however there are other failure cases which\n      block host replacements and require intrusive workarounds and human intervention to recover from when you\n      have something in hbState() you don't expect. See CASSANDRA-17842 for further details.\n    - Added new CQL table property 'allow_auto_snapshot' which is by default true. When set to false and 'auto_snapshot: true'\n      in cassandra.yaml, there will be no snapshot taken when a table is truncated or dropped. When auto_snapshot in\n      casandra.yaml is set to false, the newly added table property does not have any effect.\n    - Changed default on resumable bootstrap to be disabled. Resumable bootstrap has edge cases with potential correctness\n      violations or data loss scenarios if nodes go down during bootstrap, tombstones are written, and operations race with\n      repair. As streaming is considerably faster in the 4.0+ era (as well as with zero copy streaming), the risks of\n      having these edge cases during a failed and resumed bootstrap are no longer deemed acceptable.\n      To re-enable this feature, use the -Dcassandra.reset_bootstrap_progress=false environment flag.\n    - Added --older-than and --older-than-timestamp options to nodetool clearsnapshot command. It is possible to\n      clear snapshots which are older than some period for example, \"--older-than 5h\" to remove\n      snapshots older than 5 hours and it is possible to clear all snapshots older than some timestamp, for example\n      --older-than-timestamp 2022-12-03T10:15:30Z.\n    - Cassandra logs can be viewed in the virtual table system_views.system_logs.\n      Please uncomment the respective appender in logback.xml file to make logs flow into this table. This feature is turned off by default.\n    - Added new CQL table property 'incremental_backups' which is by default true. When 'incremental_backups' property in cassandra.yaml\n      is set to true and table property is set to false, incremental backups for that specific table will not be done.\n      When 'incremental_backups' in casandra.yaml is set to false, the newly added table property does not have any effect.\n      Both properties have to be set to true (cassandra.yaml and table property) in order to make incremental backups.\n    - Added new CQL native scalar functions for collections. The new functions are mostly analogous to the existing\n      aggregation functions, but they operate on the elements of collection columns. The new functions are `map_keys`,\n      `map_values`, `collection_count`, `collection_min`, `collection_max`, `collection_sum` and `collection_avg`.\n    - Added compaction_properties column to system.compaction_history table and nodetool compactionhistory command\n    - SimpleSeedProvider can resolve multiple IP addresses per DNS record. SimpleSeedProvider reacts on\n      the paramater called `resolve_multiple_ip_addresses_per_dns_record` which value is meant to be boolean and by\n      default it is set to false. When set to true, SimpleSeedProvider will resolve all IP addresses per DNS record,\n      based on the configured name service on the system.\n    - Added new native CQL functions for data masking, allowing to replace or obscure sensitive data. The functions are:\n      - `mask_null` replaces the column value by null.\n      - `mask_default` replaces the data by a fixed default value of the same type.\n      - `mask_replace` replaces the data by a custom value.\n      - `mask_inner` replaces every character but the first and last ones by a fixed character.\n      - `mask_outer` replaces the first and last characters by a fixed character.\n      - `mask_hash` replaces the data by its hash, according to the specified algorithm.\n    - On virtual tables, it is not strictly necessary to specify `ALLOW FILTERING` for select statements which would\n      normally require it, except `system_views.system_logs`.\n    - More accurate skipping of sstables in read path due to better handling of min/max clustering and lower bound;\n      SSTable format has been bumped to 'oa' because there are new fields in stats metadata\\\n    - Added MaxSSTableSize and MaxSSTableDuration metrics to TableMetrics. The former returns the size of the biggest \n      SSTable of a table or 0 when there is not any SSTable. The latter returns the maximum duration, computed as \n      `maxTimestamp - minTimestamp`, effectively non-zero for SSTables produced by TimeWindowCompactionStrategy.\n    - Added local read/write ratio to tablestats.\n    - Added system_views.max_sstable_size and system_views.max_sstable_duration tables.\n    - Added virtual table system_views.snapshots to see all snapshots from CQL shell.\n    - Added support for attaching CQL dynamic data masking functions to table columns on the schema. These masking\n      functions can be attached to or dettached from columns with CREATE/ALTER TABLE statements. The functions obscure\n      the masked data during queries, but they don't change the stored data.\n    - Added new UNMASK permission. It allows to see the clear data of columns with an attached mask. Superusers have it\n      by default, whereas regular users don't have it by default.\n    - Added new SELECT_MASKED permission. It allows to run SELECT queries selecting the clear values of masked columns.\n      Superusers have it by default, whereas regular users don't have it by default.\n    - Added support for using UDFs as masking functions attached to table columns on the schema.\n    - Added `sstablepartitions` offline tool to find large partitions in sstables.\n    - `cassandra-stress` has a new option called '-jmx' which enables a user to pass username and password to JMX (CASSANDRA-18544)\n    - It is possible to read all credentials for `cassandra-stress` from a file via option `-credentials-file` (CASSANDRA-18544)\n    - nodetool info displays bootstrap state a node is in as well as if it was decommissioned or if it failed to decommission (CASSANDRA-18555)\n    - Added snitch for Microsoft Azure of name AzureSnitch (CASSANDRA-18646)\n    - legacy command line options from cassandra-stress were removed\n    - `-mode` option in cassandra-stress has `native` and `cql3` as defaults and they do not need to be specified\n    - Allow to write the commitlog using direct I/O. Direct I/O is a new feature that minimizes cache effects and\n      memory-mapping overhead by using user-space buffers. This helps in transferring data from/to disk at high speed.\n      Java enabled support for the direct I/O feature from version 10 onwards - see JDK-8164900 for reference. (CASSANDRA-18464)\n\nUpgrading\n---------\n    - Default disk_access_mode value changed from \"auto\" to \"mmap_index_only\". Override this setting with \"disk_access_mode: auto\" on\n      cassandra.yaml to keep the previous default. See CASSANDRA-19021 for details.\n    - The Python versions recommended for running cqlsh have been bumped from 3.6+ to 3.8-3.11. Python 3.6-3.7 are now \n      deprecated, as they have reached end-of-life, and support will be removed in a future major release.\n    - Java 8 has been removed. Lowest supported version is Java 11.\n    - Ephemeral marker files for snapshots done by repairs are not created anymore,\n      there is a dedicated flag in snapshot manifest instead. On upgrade of a node to this version, on node's start, in case there\n      are such ephemeral snapshots on disk, they will be deleted (same behaviour as before) and any new ephemeral snapshots\n      will stop to create ephemeral marker files as flag in a snapshot manifest was introduced instead.\n    - There were new table properties introduced called 'allow_auto_snapshot' and 'incremental_backups' (see section 'New features'). Hence, upgraded\n      node will be on a new schema version. Please do a rolling upgrade of nodes of a cluster to converge to one schema version.\n    - All previous versions of 4.x contained a mistake on the implementation of the old CQL native protocol v3. That\n     mistake produced issues when paging over tables with compact storage and a single clustering column during rolling\n     upgrades involving 3.x and 4.x nodes. The fix for that issue makes it can now appear during rolling upgrades from\n     4.1.0 or 4.0.0-4.0.7. If that is your case, please use protocol v4 or higher in your driver. See CASSANDRA-17507\n     for further details.\n   - Added API for alternative sstable implementations. For details, see src/java/org/apache/cassandra/io/sstable/SSTable_API.md\n   - DateTieredCompactionStrategy was removed. Please change the compaction strategy for the tables using this strategy\n     to TimeWindowCompactionStrategy before upgrading to this version.\n   - The deprecated functions `dateOf` and `unixTimestampOf` have been removed. They were deprecated and replaced by\n     `toTimestamp` and `toUnixTimestamp` in Cassandra 2.2.\n   - Hadoop integration is no longer available (CASSANDRA-18323). If you want to process Cassandra data by big data frameworks, \n     please upgrade your infrastructure to use Cassandra Spark connector.\n   - Keystore/truststore password configurations are nullable now and the code defaults of those passwords to 'cassandra' are\n     removed. Any deployments that depend upon the code default to this password value without explicitly specifying\n     it in cassandra.yaml will fail on upgrade. Please specify your keystore_password and truststore_password elements in cassandra.yaml with appropriate\n     values to prevent this failure.\n   - Please beware that if you use Ec2Snitch or Ec2MultiRegionSnitch, by default it will \n     communicate with AWS IMDS of version 2. This change is transparent, there does not need \n     to be done anything upon upgrade. Furthermore, IMDS of version 2 can be configured to be required in AWS EC2 console.\n     Consult cassandra-rackdc.properties for more details. (CASSANDRA-16555)\n    - JMX MBean `org.apache.cassandra.metrics:type=BufferPool` without scope has been removed.\n      Use instead `org.apache.cassandra.metrics:type=BufferPool,scope=chunk-cache`.  (CASSANDRA-17668)\n    - Upon upgrade, when cassandra.yaml does not contain `crypto_provider` configuration section, crypto providers from JRE installation will be used\n      and no installation of DefaultCryptoProvider installing Amazon Corretto Crypto Provider will be conducted. \n      You need to explicitly add this section to the old yaml if it does not contain it yet to enable Amazon Corretto Crypto Provider for such node. \n      New deployments have `crypto_provider` uncommented with DefaultCryptoProvider hence Corretto provider will be installed automatically for corresponding architecture.\n    - `commitlog_sync_batch_window_in_ms` configuration property in cassandra.yaml was removed. Please ensure your configuration is not using this property.\n    - The pluggable metrics reporter called metrics-reporter-config is removed. The way that metrics can be exported is\n      fully covered by the dropwizard metrics library itself, using e.g. CsvReporter. See CASSANDRA-18743 for more details.\n    - Deprecated CQL compression parameters for table, `sstable_compression` and `chunk_length_kb`, were removed. Please use `class` and `chunk_length_in_kb` instead.\n\n\nDeprecation\n-----------\n    - Deprecated code in Cassandra 1.x and 2.x was removed. See CASSANDRA-18959 for more details.\n    - In the JMX MBean `org.apache.cassandra.db:type=RepairService` (CASSANDRA-17668):\n        - deprecate the getter/setter methods `getRepairSessionSpaceInMebibytes` and `setRepairSessionSpaceInMebibytes`\n          in favor of `getRepairSessionSpaceInMiB` and `setRepairSessionSpaceInMiB` respectively\n    - In the JMX MBean `org.apache.cassandra.db:type=StorageService` (CASSANDRA-17668):\n        - deprecate the getter/setter methods `getRepairSessionMaxTreeDepth` and `setRepairSessionMaxTreeDepth`\n          in favor of `getRepairSessionMaximumTreeDepth` and `setRepairSessionMaximumTreeDepth`\n        - deprecate the setter method `setColumnIndexSize` in favor of `setColumnIndexSizeInKiB`\n        - deprecate the getter/setter methods `getColumnIndexCacheSize` and `setColumnIndexCacheSize` in favor of\n          `getColumnIndexCacheSizeInKiB` and `setColumnIndexCacheSizeInKiB` respectively\n        - deprecate the getter/setter methods `getBatchSizeWarnThreshold` and `setBatchSizeWarnThreshold` in favor of\n          `getBatchSizeWarnThresholdInKiB` and `setBatchSizeWarnThresholdInKiB` respectively\n    - All native CQL functions names that don't use the snake case names are deprecated in favour of equivalent names\n      using snake casing. Thus, `totimestamp` is deprecated in favour of `to_timestamp`, `intasblob` in favour\n      of `int_as_blob`, `castAsInt` in favour of `cast_as_int`, etc.\n    - The config property `compaction_large_partition_warning_threshold` has been deprecated in favour of the new\n      guardrail for partition size. That guardrail is based on the properties `partition_size_warn_threshold` and\n      `partition_size_fail_threshold`. The warn threshold has a very similar behaviour to the old config property.\n      The old property is still supported for backward compatibility, but now it is disabled by default.\n    - The config property `compaction_tombstone_warning_threshold` has been deprecated in favour of the new guardrail\n      for partition tombstones. That guardrail is based on the properties `partition_tombstones_warn_threshold` and\n      `partition_tombstones_fail_threshold`. The warn threshold has a very similar behaviour to the old config property.\n      The old property is still supported for backward compatibility, but now it is disabled by default.\n    - CloudstackSnitch is marked as deprecated and it is not actively maintained anymore. It is scheduled to be removed \n      in the next major version of Cassandra.\n    - Usage of dual native ports (native_transport_port and native_transport_port_ssl) is deprecated and will be removed\n      in a future release. A single native port can be used for both encrypted and unencrypted traffic; see CASSANDRA-10559.\n      Cluster hosts running with dual native ports were not correctly identified in the system.peers tables and server-sent EVENTs,\n      causing clients that encrypt traffic to fail to maintain correct connection pools. For more information, see CASSANDRA-19392.\n    - Deprecated `use_deterministic_table_id` in cassandra.yaml. Table IDs may still be supplied explicitly on CREATE.\n\n4.1\n===\n\nNew features\n------------\n    - Added API for alternative memtable implementations. For details, see\n      src/java/org/apache/cassandra/db/memtable/Memtable_API.md\n    - Added a new guardrails framework allowing to define soft/hard limits for different user actions, such as limiting\n      the number of tables, columns per table or the size of collections. These guardrails are only applied to regular\n      user queries, and superusers and internal queries are excluded. Reaching the soft limit raises a client warning,\n      whereas reaching the hard limit aborts the query. In both cases a log message and a diagnostic event are emitted.\n      Additionally, some guardrails are not linked to specific user queries due to techincal limitations, such as\n      detecting the size of large collections during compaction or periodically monitoring the disk usage. These\n      guardrails would only emit the proper logs and diagnostic events when triggered, without aborting any processes.\n      Guardrails config is defined through cassandra.yaml properties, and they can be dynamically updated through the\n      JMX MBean `org.apache.cassandra.db:type=Guardrails`. There are guardrails for:\n        - Number of user keyspaces.\n        - Number of user tables.\n        - Number of columns per table.\n        - Number of secondary indexes per table.\n        - Number of materialized tables per table.\n        - Number of fields per user-defined type.\n        - Number of items in a collection .\n        - Number of partition keys selected by an IN restriction.\n        - Number of partition keys selected by the cartesian product of multiple IN restrictions.\n        - Allowed table properties.\n        - Allowed read consistency levels.\n        - Allowed write consistency levels.\n        - Collections size.\n        - Query page size.\n        - Minimum replication factor.\n        - Data disk usage, defined either as a percentage or as an absolute size.\n        - Whether user-defined timestamps are allowed.\n        - Whether GROUP BY queries are allowed.\n        - Whether the creation of secondary indexes is allowed.\n        - Whether the creation of uncompressed tables is allowed.\n        - Whether querying with ALLOW FILTERING is allowed.\n        - Whether DROP or TRUNCATE TABLE commands are allowed.\n    - Add support for the use of pure monotonic functions on the last attribute of the GROUP BY clause.\n    - Add floor functions that can be use to group by time range.\n    - Support for native transport rate limiting via native_transport_rate_limiting_enabled and\n      native_transport_max_requests_per_second in cassandra.yaml.\n    - Support for pre hashing passwords on CQL DCL commands\n    - Expose all client options via system_views.clients and nodetool clientstats --client-options.\n    - Add new nodetool compactionstats --vtable option to match the sstable_tasks vtable.\n    - Support for String concatenation has been added through the + operator.\n    - New configuration max_hints_size_per_host to limit the size of local hints files per host in mebibytes. Setting to\n      non-positive value disables the limit, which is the default behavior. Setting to a positive value to ensure\n      the total size of the hints files per host does not exceed the limit.\n    - Added ability to configure auth caches through corresponding `nodetool` commands.\n    - CDC data flushing now can be configured to be non-blocking with the configuration cdc_block_writes. Setting to true,\n      any writes to the CDC-enabled tables will be blocked when reaching to the limit for CDC data on disk, which is the\n      existing and the default behavior. Setting to false, the writes to the CDC-enabled tables will be accepted and\n      the oldest CDC data on disk will be deleted to ensure the size constraint.\n    - Top partitions based on partition size or tombstone count are now tracked per table. These partitions are stored\n      in a new system.top_partitions table and exposed via JMX and nodetool tablestats. The partitions are tracked\n      during full or validation repairs but not incremental ones since those don't include all sstables and the partition\n      size/tombstone count would not be correct.\n    - New native functions to convert unix time values into C* native types: toDate(bigint), toTimestamp(bigint),\n      mintimeuuid(bigint) and maxtimeuuid(bigint)\n    - Support for multiple permission in a single GRANT/REVOKE/LIST statement has been added. It allows to\n      grant/revoke/list multiple permissions using a single statement by providing a list of comma-separated\n      permissions.\n    - A new ALL TABLES IN KEYSPACE resource has been added. It allows to grant permissions for all tables and user types\n      in a keyspace while preventing the user to use those permissions on the keyspace itself.\n    - Added support for type casting in the WHERE clause components and in the values of INSERT and UPDATE statements.\n    - A new implementation of Paxos (named v2) has been included that improves the safety and performance of LWT operations.\n      Importantly, v2 guarantees linearizability across safe range movements, so users are encouraged to enable v2.\n      v2 also halves the number of WAN messages required to be exchanged if used on conjunction with the new Paxos Repair\n      mechanism (see below) and with some minor modifications to applications using LWTs.\n      The new implementation may be enabled at any time by setting paxos_variant: v2, and disabled by setting to v1,\n      and this alone will reduce the number of WAN round-trips by between one and two for reads, and one for writes.\n    - A new Paxos Repair mechanism has been introduced as part of Repair, that permits further reducing the number of WAN\n      round-trips for write LWTs. This process may be manually executed for v1 and is run automatically alongside normal\n      repairs for v2. Once users are running regular repairs that include paxos repairs they are encouraged to set\n      paxos_state_purging: repaired. Once this has been set across the cluster, users are encouraged to set their\n      applications to supply a Commit consistency level of ANY with their LWT write operations, saving one additional WAN\n      round-trip. See upgrade notes below.\n    - Warn/fail thresholds added to read queries notifying clients when these thresholds trigger (by\n      emitting a client warning or failing the query).  This feature is disabled by default, scheduled\n      to be enabled in 4.2; it is controlled with the configuration read_thresholds_enabled,\n      setting to true will enable this feature.  Each check has its own warn/fail thresholds, currently\n      tombstones (tombstone_warn_threshold, and tombstone_failure_threshold), coordinator result set\n      materialized size (coordinator_read_size_warn_threshold and coordinator_read_size_fail_threshold),\n      local read materialized heap size\n      (local_read_size_warn_threshold and local_read_size_fail_threshold),\n      and RowIndexEntry estimated memory size (row_index_read_size_warn_threshold and\n      row_index_read_size_fail_threshold) are supported; more checks will be added over time.\n    - Prior to this version, the hint system was storing a window of hints as defined by\n      configuration property max_hint_window_in_ms, however this window is not persistent across restarts.\n      For example, if a node is restarted, it will be still eligible for a hint to be sent to it because it\n      was down less than max_hint_window_in_ms. Hence if that node continues restarting without hint delivery completing,\n      hints will be sent to that node indefinitely which would occupy more and more disk space.\n      This behaviour was changed in CASSANDRA-14309. From now on, by default, if a node is not down longer than\n      max_hint_window_in_ms, there is an additional check to see if there is a hint to be delivered which is older\n      than max_window_in_ms. If there is, a hint is not persisted. If there is not, it is.\n      This behaviour might be reverted as it was in previous version by property hint_window_persistent_enabled by\n      setting it to false. This property is by default set to true.\n    - Added a new feature to allow denylisting (i.e. blocking read, write, or range read configurable) access to partition\n      keys in configured keyspaces and tables. See doc/operating/denylisting_partitions.rst for details on using this new\n      feature. Also see CASSANDRA-12106.\n    - Information about pending hints is now available through `nodetool listpendinghints` and `pending_hints` virtual\n      table.\n    - Added ability to invalidate auth caches through corresponding `nodetool` commands and virtual tables.\n    - DCL statements in audit logs will now obscure only the password if they don't fail to parse.\n    - Starting from 4.1 sstables support UUID based generation identifiers. They are globally unique and thus they let\n      the node to create sstables without any prior knowledge about the existing sstables in the data directory.\n      The feature is disabled by default in cassandra.yaml because once enabled, there is no easy way to downgrade.\n      When the node is restarted with UUID based generation identifiers enabled, each newly created sstable will have\n      a UUID based generation identifier and such files are not readable by previous Cassandra versions. In the future\n      those new identifiers will become enabled by default.\n    - Resetting schema behavior has changed in 4.1 so that: 1) resetting schema is prohibited when there is no live node\n      where the schema could be fetched from, and 2) truncating local schema keyspace is postponed to the moment when\n      the node receives schema from some other node.\n\nUpgrading\n---------\n    - `cache_load_timeout_seconds` being negative for disabled is equivalent to `cache_load_timeout` = 0 for disabled.\n    - `sstable_preemptive_open_interval_in_mb` being negative for disabled is equivalent to `sstable_preemptive_open_interval`\n      being null again. In the JMX MBean `org.apache.cassandra.db:type=StorageService`, the setter method\n      `setSSTablePreemptiveOpenIntervalInMB`still takes `intervalInMB` negative numbers for disabled.\n    - `enable_uuid_sstable_identifiers` parameter from 4.1 alpha1 was renamed to `uuid_sstable_identifiers_enabled`.\n    - `index_summary_resize_interval_in_minutes = -1` is equivalent to index_summary_resize_interval being set to `null` or\n      disabled. In the JMX MBean `org.apache.cassandra.db:type=IndexSummaryManager`, the setter method `setResizeIntervalInMinutes` still takes\n      `resizeIntervalInMinutes = -1` for disabled.\n    - min_tracked_partition_size_bytes parameter from 4.1 alpha1 was renamed to min_tracked_partition_size.\n    - Parameters of type data storage, duration and data rate cannot be set to Long.MAX_VALUE (former parameters of long type)\n      and Integer.MAX_VALUE (former parameters of int type). Those numbers are used during conversion between units to prevent\n      an overflow from happening. (CASSANDRA-17571)\n    - We added new JMX methods `setStreamThroughputMbitPerSec`, `getStreamThroughputMbitPerSec`, `setInterDCStreamThroughputMbitPerSec`,\n      `getInterDCStreamThroughputMbitPerSec` to the JMX MBean `org.apache.cassandra.db:type=StorageService`. They replace the now\n      deprecated methods `setStreamThroughputMbPerSec`, `getStreamThroughputMbPerSec`, `setInterDCStreamThroughputMbPerSec`, and\n      `getInterDCStreamThroughputMbPerSec`, which will be removed in a future major release.\n    - The config property `repair_session_space_in_mb` was wrongly advertised in previous versions that it should be set in\n      megabytes when it is interpreted internally in mebibytes. To reduce the confusion we added two new JMX methods\n      `setRepairSessionSpaceInMebibytes(int sizeInMebibytes)` and `getRepairSessionSpaceInMebibytes`. They replace the now\n      deprecated methods `setRepairSessionSpaceInMegabytes(int sizeInMegabytes)` and `getRepairSessionSpaceInMegabytes`, which\n      will be removed in a future major release.\n    - There is a new cassandra.yaml version 2. Units suffixes should be provided for all rates(B/s|KiB/s|MiB/s),\n      memory (B|KiB|MiB|GiB) and duration(d|h|m|s|ms|us|Âµs|ns)\n      parameters. List of changed parameters and details to consider during configuration setup can be\n      found at https://cassandra.apache.org/doc/latest/cassandra/new/configuration.html. (CASSANDRA-15234)\n      Backward compatibility with the old cassandra.yaml file will be in place until at least the next major version.\n      By default we refuse starting Cassandra with a config containing both old and new config keys for the same parameter. Start\n      Cassandra with -Dcassandra.allow_new_old_config_keys=true to override. For historical reasons duplicate config keys\n      in cassandra.yaml are allowed by default, start Cassandra with -Dcassandra.allow_duplicate_config_keys=false to disallow this.\n    - Many cassandra.yaml parameters' names have been changed. Full list and details to consider during configuration setup\n      when installing/upgrading Cassandra can be found at https://cassandra.apache.org/doc/latest/cassandra/new/configuration.html (CASSANDRA-15234)\n    - Negative values cannot be used for parameters of type data rate, duration and data storage with both old and new cassandra.yaml version.\n      Only exception is if you use old cassandra.yaml, pre-CASSANDRA-15234 - then -1 or other negative values which were advertised as an option\n      to disable config parameters in the old cassandra.yaml are still used. Those are probably converted to null value with the new cassandra.yaml,\n      as written in the new cassandra.yaml version and docs.\n    - Before you upgrade, if you are using `cassandra.auth_bcrypt_gensalt_log2_rounds` property,\n      confirm it is set to value lower than 31 otherwise Cassandra will fail to start. See CASSANDRA-9384\n      for further details. You also need to regenerate passwords for users for who the password\n      was created while the above property was set to be more than 30 otherwise they will not be able to log in.\n    - JNA library was updated from 5.6.0 to 5.9.0. In version 5.7.0, Darwin support for M1 devices\n      was fixed but prebuild native library for Darwin x86 (32bit Java on Mac OS) was removed.\n    - The config properties for setting the streaming throughput `stream_throughput_outbound_megabits_per_sec` and\n      `inter_dc_stream_throughput_outbound_megabits_per_sec` were incorrectly interpreted as mebibits. This has\n      been fixed by CASSANDRA-17243, so the values for these properties will now indicate a throughput ~4.6% lower than\n      what was actually applied in previous versions. This also affects the setters and getters for these properties in\n      the JMX MBean `org.apache.cassandra.db:type=StorageService` and the nodetool commands `set/getstreamthroughput`\n      and `set/getinterdcstreamthroughput`.\n    - Steps for upgrading Paxos\n        - Set paxos_variant: v2 across the cluster. This may be set via JMX, but should also be written\n          persistently to any yaml.\n        - Ensure paxos repairs are running regularly, either as part of normal incremental repair workflows or on their\n          own separate schedule. These operations are cheap and better to run frequently (e.g. once per hour)\n        - Set paxos_state_purging: repaired across the cluster.  This may be set via JMX, but should also be written\n          persistently to any yaml. NOTE: once this has been set, you must not restore paxos_state_purging: legacy. If\n          this setting must be disabled you must instead set paxos_state_purging: gc_grace. This may be necessary if\n          paxos repairs must be disabled for some reason on an extended basis, but in this case your applications must\n          restore default commit consistency to ensure correctness.\n        - Applications may now safely be updated to use ANY commit consistency level (or LOCAL_QUORUM, as preferred).\n          Uncontended writes should now take 2 round-trips, and uncontended reads should typically take one round-trip.\n    - A required [f|force] flag has been added to both \"nodetool verify\" and the standalone \"sstableverify\" tools.\n      These tools have some subtleties and should not be used unless the operator is familiar with what they do\n      and do not do, as well as the edge cases associated with their use.\n      NOTE: ANY SCRIPTS THAT RELY ON sstableverify OR nodetool verify WILL STOP WORKING UNTIL MODIFIED.\n      Please see CASSANDRA-17017 for details: https://issues.apache.org/jira/browse/CASSANDRA-17017\n    - `MutationExceededMaxSizeException` thrown when a mutation exceeds `max_mutation_size` inherits\n      from `InvalidRequestException` instead of `RuntimeException`. See CASSANDRA-17456 for details.\n\nDeprecation\n-----------\n    - In the command line options for `org.apache.cassandra.tools.LoaderOptions`: deprecate the `-t`, `--throttle`,\n      `-idct`, and `--inter-dc-throttle` options for setting the throttle and inter-datacenter throttle options in\n      Mbps. Instead, users are instructed to use the `--throttle-mib`, and `--inter-dc-throttle-mib` for setting the\n      throttling options in MiB/s. Additionally, in the loader options builder\n      `org.apache.cassandra.tools.LoaderOptions$Builder`: deprecate the `throttle(int)`, `interDcThrottle(int)`,\n      `entireSSTableThrottle(int)`, and the `entireSSTableInterDcThrottle(int)` methods.\n    - In the JMX MBean `org.apache.cassandra.db:type=StorageService`: deprecate getter method `getStreamThroughputMbitPerSec`\n      in favor of getter method `getStreamThroughputMbitPerSecAsDouble`; deprecate getter method `getStreamThroughputMbPerSec`\n      in favor of getter methods `getStreamThroughputMebibytesPerSec` and `getStreamThroughputMebibytesPerSecAsDouble`;\n      deprecate getter method `getInterDCStreamThroughputMbitPerSec` in favor of getter method `getInterDCStreamThroughputMbitPerSecAsDouble`;\n      deprecate getter method `getInterDCStreamThroughputMbPerSec` in favor of getter methods `getInterDCStreamThroughputMebibytesPerSecAsDouble`;\n      deprecate getter method `getCompactionThroughputMbPerSec` in favor of getter methods `getCompactionThroughtputMibPerSecAsDouble`\n      and `getCompactionThroughtputBytesPerSec`; deprecate setter methods `setStreamThroughputMbPerSec` and `setStreamThroughputMbitPerSec`\n      in favor of `setStreamThroughputMebibytesPerSec`; deprecate setter methods `setInterDCStreamThroughputMbitPerSec` and\n      `setInterDCStreamThroughputMbPerSec` in favor of `setInterDCStreamThroughputMebibytesPerSec`. The deprecated JMX methods\n      may return a rounded value so if precision is important, you want to use the new getters. While those deprecated JMX getters\n      will return a rounded number, the nodetool commands `getstreamthroughput` and `getinterdcstreamthroughput`\n      will throw Runtime Exceptions advising to use the new -d flag in case an integer cannot be returned. See CASSANDRA-17725 for further details.\n    - Deprecate public method `setRate(final double throughputMbPerSec)` in `Compaction Manager` in favor of\n      `setRateInBytes(final double throughputBytesPerSec)`\n    - `withBufferSizeInMB(int size)` in `StressCQLSSTableWriter.Builder` class is deprecated in favor of `withBufferSizeInMiB(int size)`\n      No change of functionality in the new one, only name change for clarity in regards to units and to follow naming\n      standartization.\n    - `withBufferSizeInMB(int size)` in `CQLSSTableWriter.Builder` class is deprecated in favor of `withBufferSizeInMiB(int size)`\n      No change of functionality in the new one, only name change for clarity in regards to units and to follow naming\n      standartization.\n    - The properties `keyspace_count_warn_threshold` and `table_count_warn_threshold` in cassandra.yaml have been\n      deprecated in favour of the new `keyspaces_warn_threshold` and `tables_warn_threshold` properties and will be removed\n      in a subsequent major version. This also affects the setters and getters for those properties in the JMX MBean\n      `org.apache.cassandra.db:type=StorageService`, which are equally deprecated in favour of the analogous methods\n      in the JMX MBean `org.apache.cassandra.db:type=Guardrails`. See CASSANDRA-17195 for further details.\n    - The functionality behind the property `windows_timer_interval` was removed as part of CASSANDRA-16956. The\n      property is still present but it is deprecated and it is just a place-holder to prevent breaking upgrades. This\n      property is expected to be fully removed in the next major release of Cassandra.\n\n4.0\n===\n\nNew features\n------------\n    - Full support for Java 11, it is not experimental anymore.\n    - The data of the system keyspaces using a local strategy (at the exception of the system.batches,\n      system.paxos, system.compaction_history, system.prepared_statements and system.repair tables)\n      is now stored by default in the first data directory, instead of being distributed among all\n      the data directories. This approach will allow the server to tolerate the failure of the other disks.\n      To ensure that a disk failure will not bring a node down, it is possible to use the system_data_file_directory\n      yaml property to store the local system keyspaces data on a directory that provides redundancy.\n      On node startup the local system keyspaces data will be automatically migrated if needed to the\n      correct location.\n    - Nodes will now bootstrap all intra-cluster connections at startup by default and wait\n      10 seconds for the all but one node in the local data center to be connected and marked\n      UP in gossip. This prevents nodes from coordinating requests and failing because they\n      aren't able to connect to the cluster fast enough. block_for_peers_timeout_in_secs in\n      cassandra.yaml can be used to configure how long to wait (or whether to wait at all)\n      and block_for_peers_in_remote_dcs can be used to also block on all but one node in\n      each remote DC as well. See CASSANDRA-14297 and CASSANDRA-13993 for more information.\n    - *Experimental* support for Transient Replication and Cheap Quorums introduced by CASSANDRA-14404\n      The intended audience for this functionality is expert users of Cassandra who are prepared\n      to validate every aspect of the database for their application and deployment practices. Future\n      releases of Cassandra will make this feature suitable for a wider audience.\n    - *Experimental* support for Java 11 has been added. JVM options that differ between or are\n      specific for Java 8 and 11 have been moved from jvm.options into jvm8.options and jvm11.options.\n      IMPORTANT: Running C* on Java 11 is *experimental* and do it at your own risk.\n    - LCS now respects the max_threshold parameter when compacting - this was hard coded to 32\n      before, but now it is possible to do bigger compactions when compacting from L0 to L1.\n      This also applies to STCS-compactions in L0 - if there are more than 32 sstables in L0\n      we will compact at most max_threshold sstables in an L0 STCS compaction. See CASSANDRA-14388\n      for more information.\n    - There is now an option to automatically upgrade sstables after Cassandra upgrade, enable\n      either in `cassandra.yaml:automatic_sstable_upgrade` or via JMX during runtime. See\n      CASSANDRA-14197.\n    - `nodetool refresh` has been deprecated in favour of `nodetool import` - see CASSANDRA-6719\n      for details\n    - An experimental option to compare all merkle trees together has been added - for example, in\n      a 3 node cluster with 2 replicas identical and 1 out-of-date, with this option enabled, the\n      out-of-date replica will only stream a single copy from up-to-date replica. Enable it by adding\n      \"-os\" to nodetool repair. See CASSANDRA-3200.\n    - The currentTimestamp, currentDate, currentTime and currentTimeUUID functions have been added.\n      See CASSANDRA-13132\n    - Support for arithmetic operations between `timestamp`/`date` and `duration` has been added.\n      See CASSANDRA-11936\n    - Support for arithmetic operations on number has been added. See CASSANDRA-11935\n    - Preview expected streaming required for a repair (nodetool repair --preview), and validate the\n      consistency of repaired data between nodes (nodetool repair --validate). See CASSANDRA-13257\n    - Support for selecting Map values and Set elements has been added for SELECT queries. See CASSANDRA-7396\n    - Change-Data-Capture has been modified to make CommitLogSegments available\n      immediately upon creation via hard-linking the files. This means that incomplete\n      segments will be available in cdc_raw rather than fully flushed. See documentation\n      and CASSANDRA-12148 for more detail.\n    - The initial build of materialized views can be parallelized. The number of concurrent builder\n      threads is specified by the property `cassandra.yaml:concurrent_materialized_view_builders`.\n      This property can be modified at runtime through both JMX and the new `setconcurrentviewbuilders`\n      and `getconcurrentviewbuilders` nodetool commands. See CASSANDRA-12245 for more details.\n    - There is now a binary full query log based on Chronicle Queue that can be controlled using\n      nodetool enablefullquerylog, disablefullquerylog, and resetfullquerylog. The log\n      contains all queries invoked, approximate time they were invoked, any parameters necessary\n      to bind wildcard values, and all query options. A human readable version of the log can be\n      dumped or tailed using the new bin/fqltool utility. The full query log is designed to be safe\n      to use in production and limits utilization of heap memory and disk space with limits\n      you can specify when enabling the log.\n      See nodetool and fqltool help text for more information.\n    - SSTableDump now supports the -l option to output each partition as it's own json object\n      See CASSANDRA-13848 for more detail\n    - Metric for coordinator writes per table has been added. See CASSANDRA-14232\n    - Nodetool cfstats now has options to sort by various metrics as well as limit results.\n    - Operators can restrict login user activity to one or more datacenters. See `network_authorizer`\n      in cassandra.yaml, and the docs for create and alter role statements. CASSANDRA-13985\n    - Roles altered from login=true to login=false will prevent existing connections from executing any\n      statements after the cache has been refreshed. CASSANDRA-13985\n    - Support for audit logging of database activity. If enabled, logs every incoming\n      CQL command request, Authentication (successful as well as unsuccessful login) to a node.\n    - Faster streaming of entire SSTables using ZeroCopy APIs. If enabled, Cassandra will use stream\n      entire SSTables, significantly speeding up transfers. Any streaming related operations will see\n      corresponding improvement. See CASSANDRA-14556.\n    - NetworkTopologyStrategy now supports auto-expanding the replication_factor\n      option into all available datacenters at CREATE or ALTER time. For example,\n      specifying replication_factor: 3 translates to three replicas in every\n      datacenter. This auto-expansion will _only add_ datacenters for safety.\n      See CASSANDRA-14303 for more details.\n    - Added Python 3 support so cqlsh and cqlshlib is now compatible with Python 2.7 and Python 3.6.\n      Added --python option to cqlsh so users can specify the path to their chosen Python interpreter.\n      See CASSANDRA-10190 for details.\n    - Support for server side DESCRIBE statements has been added. See CASSANDRA-14825\n    - It is now possible to rate limit snapshot creation/clearing. See CASSANDRA-13019\n    - Authentication reads and writes have been changed from a mix of ONE, LOCAL_ONE, and QUORUM\n      to LOCAL_QUORUM on reads and EACH_QUORUM on writes. This is configurable via cassandra.yaml with\n      auth_read_consistency_level and auth_write_consistency_level respectively. See CASSANDRA-12988.\n\nUpgrading\n---------\n    - If you were on 4.0.1 - 4.0.5 and if you haven't set the compaction_thoroughput_mb_per_sec in your 4.0 cassandra.yaml\n      file but you relied on the internal default value,then compaction_throughput_mb_per_sec was equal to an old default\n      value of 16MiB/s in Cassandra 4.0. After CASSANDRA-17790 this is changed to 64MiB/s to match the default value in\n      cassandra.yaml. If you prefer the old one of 16MiB/s, you need to set it explicitly in your cassandra.yaml file.\n    - otc_coalescing_strategy, otc_coalescing_window_us, otc_coalescing_enough_coalesced_messages,\n      otc_backlog_expiration_interval_ms are deprecated and will be removed at earliest with next major release.\n      otc_coalescing_strategy is disabled since 3.11.\n    - As part of the Internode Messaging improvement work in CASSANDRA-15066, internode_send_buff_size_in_bytes and\n      internode_recv_buff_size_in_bytes were renamed to internode_socket_send_buffer_size_in_bytes and\n      internode_socket_receive_buffer_size_in_bytes. To support upgrades pre-4.0, we add backward compatibility and\n      currently both old and new names should work. Cassandra 4.0.0 and Cassandra 4.0.1 work ONLY with the new names\n      (They weren't updated in cassandra.yaml though).\n    - DESCRIBE|DESC was moved to server side in Cassandra 4.0. As a consequence DESCRIBE|DESC will not work in cqlsh 6.0.0\n      being connected to earlier major Cassandra versions where DESCRIBE does not exist server side.\n    - cqlsh shell startup script now prefers 'python3' before 'python' when identifying a runtime.\n    - As part of the Internode Messaging improvement work in CASSANDRA-15066, matching response verbs for every request\n      verb were introduced and verbs were renamed. DroppedMessageMetrics pre-4.0 are now available with _REQ suffix. As\n      part of CASSANDRA-16083, we added DroppedMessageMetrics backward compatibility layer which exposes the metrics with\n      their old names too. Only the value for verbs READ and RANGE_SLICE will differ from the same metrics in 3.11 as it\n      does not include anymore the responses dropped, only the requests. After being deprecated in 3.11 PAGED_RANGE was\n      fully removed in 4.0. ConditionNotMet metric has been moved under scope CASClientWriteRequestMetrtic but as part of\n      CASSANDRA-16083, backward compatibility layer was added so it can be still exposed under the old 3.11 scope.\n    - Native protocol v5 is promoted from beta in this release. The wire format has changed\n      significantly and users should take care to ensure client drivers are upgraded to a version\n      with support for the final v5 format, if currently connecting over v5-beta. (CASSANDRA-15299, CASSANDRA-14973)\n    - Cassandra removed support for the OldNetworkTopologyStrategy. Before upgrading you will need to change the\n      replication strategy for the keyspaces using this strategy to the NetworkTopologyStrategy. (CASSANDRA-13990)\n    - Sstables for tables using with a frozen UDT written by C* 3.0 appear as corrupted.\n\n      Background: The serialization-header in the -Statistics.db sstable component contains the type information\n      of the table columns. C* 3.0 write incorrect type information for frozen UDTs by omitting the\n      \"frozen\" information. Non-frozen UDTs were introduced by CASSANDRA-7423 in C* 3.6. Since then, the missing\n      \"frozen\" information leads to deserialization issues that result in CorruptSSTableExceptions, potentially other\n      exceptions as well.\n\n      As a mitigation, the sstable serialization-headers are rewritten to contain the missing \"frozen\" information for\n      UDTs once, when an upgrade from C* 3.0 is detected. This migration does not touch snapshots or backups.\n\n      The sstablescrub tool now performs a check of the sstable serialization-header against the schema. A mismatch of\n      the types in the serialization-header and the schema will cause sstablescrub to error out and stop by default.\n      See the new `-e` option. `-e off` disables the new validation code. `-e fix` or `-e fix-only`, e.g.\n      `sstablescrub -e fix keyspace table`, will validate the serialization-header, rewrite the non-frozen UDTs\n      in the serialzation-header to frozen UDTs, if that matches the schema, and continue with scrub.\n      See `sstablescrub -h`.\n      (CASSANDRA-15035)\n    - CASSANDRA-13241 lowered the default chunk_lengh_in_kb for compresesd tables from\n      64kb to 16kb. For highly compressible data this can have a noticeable impact\n      on space utilization. You may want to consider manually specifying this value.\n    - Additional columns have been added to system_distributed.repair_history,\n      system_traces.sessions and system_traces.events. As a result select queries\n      against these tables - including queries against tracing tables performed\n      automatically by the drivers and cqlsh - will fail and generate an error in the log\n      during upgrade when the cluster is mixed version. On 3.x side this will also lead\n      to broken internode connections and lost messages.\n      Cassandra versions 3.0.20 and 3.11.6 pre-add these columns (see CASSANDRA-15385),\n      so please make sure to upgrade to those versions or higher before upgrading to\n      4.0 for query tracing to not cause any issues during the upgrade to 4.0.\n    - Timestamp ties between values resolve differently: if either value has a TTL,\n      this value always wins. This is to provide consistent reconciliation before\n      and after the value expires into a tombstone.\n    - Support for legacy auth tables in the system_auth keyspace (users,\n      permissions, credentials) and the migration code has been removed. Migration\n      of these legacy auth tables must have been completed before the upgrade to\n      4.0 and the legacy tables must have been removed. See the 'Upgrading' section\n      for version 2.2 for migration instructions.\n    - Cassandra 4.0 removed support for the deprecated Thrift interface. Amongst\n      other things, this implies the removal of all yaml options related to thrift\n      ('start_rpc', rpc_port, ...).\n    - Cassandra 4.0 removed support for any pre-3.0 format. This means you\n      cannot upgrade from a 2.x version to 4.0 directly, you have to upgrade to\n      a 3.0.x/3.x version first (and run upgradesstable). In particular, this\n      mean Cassandra 4.0 cannot load or read pre-3.0 sstables in any way: you\n      will need to upgrade those sstable in 3.0.x/3.x first.\n    - Upgrades from 3.0.x or 3.x are supported since 3.0.13 or 3.11.0, previous\n      versions will causes issues during rolling upgrades (CASSANDRA-13274).\n    - Cassandra will no longer allow invalid keyspace replication options, such\n      as invalid datacenter names for NetworkTopologyStrategy. Operators MUST\n      add new nodes to a datacenter before they can set set ALTER or CREATE\n      keyspace replication policies using that datacenter. Existing keyspaces\n      will continue to operate, but CREATE and ALTER will validate that all\n      datacenters specified exist in the cluster.\n    - Cassandra 4.0 fixes a problem with incremental repair which caused repaired\n      data to be inconsistent between nodes. The fix changes the behavior of both\n      full and incremental repairs. For full repairs, data is no longer marked\n      repaired. For incremental repairs, anticompaction is run at the beginning\n      of the repair, instead of at the end. If incremental repair was being used\n      prior to upgrading, a full repair should be run after upgrading to resolve\n      any inconsistencies.\n    - Config option index_interval has been removed (it was deprecated since 2.0)\n    - Deprecated repair JMX APIs are removed.\n    - The version of snappy-java has been upgraded to 1.1.2.6\n    - the miniumum value for internode message timeouts is 10ms. Previously, any\n      positive value was allowed. See cassandra.yaml entries like\n      read_request_timeout_in_ms for more details.\n    - Cassandra 4.0 allows a single port to be used for both secure and insecure\n      connections between cassandra nodes (CASSANDRA-10404). See the yaml for\n      specific property changes, and see the security doc for full details.\n    - Due to the parallelization of the initial build of materialized views,\n      the per token range view building status is stored in the new table\n      `system.view_builds_in_progress`. The old table `system.views_builds_in_progress`\n      is no longer used and can be removed. See CASSANDRA-12245 for more details.\n    - Config option commitlog_sync_batch_window_in_ms has been deprecated as it's\n      documentation has been incorrect and the setting itself near useless.\n      Batch mode remains a valid commit log mode, however.\n    - There is a new commit log mode, group, which is similar to batch mode\n      but blocks for up to a configurable number of milliseconds between disk flushes.\n    - nodetool clearsnapshot now required the --all flag to remove all snapshots.\n      Previous behavior would delete all snapshots by default.\n    - Nodes are now identified by a combination of IP, and storage port.\n      Existing JMX APIs, nodetool, and system tables continue to work\n      and accept/return just an IP, but there is a new\n      version of each that works with the full unambiguous identifier.\n      You should prefer these over the deprecated ambiguous versions that only\n      work with an IP. This was done to support multiple instances per IP.\n      Additionally we are moving to only using a single port for encrypted and\n      unencrypted traffic and if you want multiple instances per IP you must\n      first switch encrypted traffic to the storage port and not a separate\n      encrypted port. If you want to use multiple instances per IP\n      with SSL you will need to use StartTLS on storage_port and set\n      outgoing_encrypted_port_source to gossip outbound connections\n      know what port to connect to for each instance. Before changing\n      storage port or native port at nodes you must first upgrade the entire cluster\n      and clients to 4.0 so they can handle the port not being consistent across\n      the cluster.\n    - Names of AWS regions/availability zones have been cleaned up to more correctly\n      match the Amazon names. There is now a new option in conf/cassandra-rackdc.properties\n      that lets users enable the correct names for new clusters, or use the legacy\n      names for existing clusters. See conf/cassandra-rackdc.properties for details.\n    - Background repair has been removed. dclocal_read_repair_chance and\n      read_repair_chance table options have been removed and are now rejected.\n      See CASSANDRA-13910 for details.\n    - Internode TCP connections that do not ack segments for 30s will now\n      be automatically detected and closed via the Linux TCP_USER_TIMEOUT\n      socket option. This should be exceedingly rare, but AWS networks (and\n      other stateful firewalls) apparently suffer from this issue. You can\n      tune the timeouts on TCP connection and segment ack via the\n      `cassandra.yaml:internode_tcp_connect_timeout_in_ms` and\n      `cassandra.yaml:internode_tcp_user_timeout_in_ms` options respectively.\n      See CASSANDRA-14358 for details.\n    - repair_session_space_in_mb setting has been added to cassandra.yaml to allow operators to reduce\n      merkle tree size if repair is creating too much heap pressure. The repair_session_max_tree_depth\n      setting added in 3.0.19 and 3.11.5 is deprecated in favor of this setting. See CASSANDRA-14096\n    - The flags 'enable_materialized_views' and 'enable_sasi_indexes' in cassandra.yaml\n      have been set as false by default. Operators should modify them to allow the\n      creation of new views and SASI indexes, the existing ones will continue working.\n      See CASSANDRA-14866 for details.\n    - CASSANDRA-15216 - The flag 'cross_node_timeout' has been set as true by default.\n      This change is done under the assumption that users have setup NTP on\n      their clusters or otherwise synchronize their clocks, and that clocks are\n      mostly in sync, since this is a requirement for general correctness of\n      last write wins.\n    - CASSANDRA-15257 removed the joda time dependency.  Any time formats\n      passed will now need to conform to java.time.format.DateTimeFormatter.\n      Most notably, days and months must be two digits, and years exceeding\n      four digits need to be prefixed with a plus or minus sign.\n    - cqlsh now returns a non-zero code in case of errors. This is a backward incompatible change so it may\n      break existing scripts that rely on the current behavior. See CASSANDRA-15623 for more details.\n    - Updated the default compaction_throughput_mb_per_sec to to 64. The original\n      default (16) was meant for spinning disk volumes.  See CASSANDRA-14902 for details.\n    - Custom compaction strategies must now handle getting sstables added/removed notifications for\n      sstables already added/removed - see CASSANDRA-14103 for details.\n    - Support for JNA with glibc 2.6 and earlier has been removed. Centos 5, Debian 4, and Ubuntu 7.10 operating systems\n      must be first upgraded. See CASSANDRA-16212 for more.\n    - In cassandra.yaml, when using vnodes num_tokens must be defined if initial_token is defined.\n      If it is not defined, or not equal to the numbers of tokens defined in initial_tokens,\n      the node will not start. See CASSANDRA-14477 for details.\n    - CASSANDRA-13701 To give a better out of the box experience, the default 'num_tokens'\n      value has been changed from 256 to 16 for reasons described in\n      https://cassandra.apache.org/doc/latest/getting-started/production.html#tokens\n      'allocate_tokens_for_local_replication_factor' is also uncommented and set to 3.\n      Please note when upgrading that if the 'num_tokens' value is different than what you have\n      configured, the upgraded node will refuse to start. Also note that if a new node joining\n      the cluster has a different value for 'num_tokens' than the rest of the datacenter,\n      the new node will be responsible for a different amount of data than the rest of the datacenter.\n\nDeprecation\n-----------\n    - JavaScript user-defined functions have been deprecated. They are planned for removal\n      in the next major release. (CASSANDRA-17280)\n    - The JMX MBean org.apache.cassandra.metrics:type=Streaming,name=ActiveOutboundStreams has been\n      deprecated and will be removed in a subsequent major version. This metric was not updated since several version\n      already.\n    - The JMX MBean org.apache.cassandra.db:type=BlacklistedDirectories has been\n      deprecated in favor of org.apache.cassandra.db:type=DisallowedDirectories\n      and will be removed in a subsequent major version.\n    - cqlsh support of 2.7 is deprecated and will warn when running with Python 2.7.\n\nALTER ... DROP COMPACT STORAGE\n------------------------------\n   - Following a discussion regarding concerns about the safety of the 'ALTER ... DROP COMPACT STORAGE' statement,\n     the C* development community does not recommend its use in production and considers it experimental\n     (see https://www.mail-archive.com/dev@cassandra.apache.org/msg16789.html).\n   - An 'enable_drop_compact_storage' flag has been added to cassandra.yaml to allow operators to prevent its use.\n\nMaterialized Views\n-------------------\n    - Following a discussion regarding concerns about the design and safety of Materialized Views, the C* development\n      community no longer recommends them for production use, and considers them experimental. Warnings messages will\n      now be logged when they are created. (See https://www.mail-archive.com/dev@cassandra.apache.org/msg11511.html)\n    - An 'enable_materialized_views' flag has been added to cassandra.yaml to allow operators to prevent creation of\n      views\n    - CREATE MATERIALIZED VIEW syntax has become stricter. Partition key columns are no longer implicitly considered\n      to be NOT NULL, and no base primary key columns get automatically included in view definition. You have to\n      specify them explicitly now.\n\nWindows Support Removed\n-----------------------\n    - Due to the lack of maintenance and testing, Windows support is removed from this version onward. The developers\n      who use Windows 10 still can run Apache Cassandra locally using WSL2 (Windows Subsystem for Linux version 2),\n      Docker for Windows, or virtualization platform like Hyper-V and VirtualBox.\n\n3.11.10\n======\n\nUpgrading\n---------\n    - This release fix a correctness issue with SERIAL reads, and LWT writes that do not apply.\n      Unfortunately, this fix has a performance impact on read performance at the SERIAL or\n      LOCAL_SERIAL consistency levels. For heavy users of such SERIAL reads, the performance\n      impact may be noticeable and may also result in an increased of timeouts. For that\n      reason, a opt-in system property has been added to disable the fix:\n        -Dcassandra.unsafe.disable-serial-reads-linearizability=true\n      Use this flag at your own risk as it revert SERIAL reads to the incorrect behavior of\n      previous versions. See CASSANDRA-12126 for details.\n    - SASI's `max_compaction_flush_memory_in_mb` setting was previously getting interpreted in bytes. From 3.11.8\n      it is correctly interpreted in megabytes, but prior to 3.11.10 previous configurations of this setting will\n      lead to nodes OOM during compaction. From 3.11.10 previous configurations will be detected as incorrect,\n      logged, and the setting reverted to the default value of 1GB. It is up to the user to correct the setting\n      after an upgrade, via dropping and recreating the index. See CASSANDRA-16071 for details.\n\n\n3.11.6\n======\n\nUpgrading\n---------\n    - Sstables for tables using with a frozen UDT written by C* 3.0 appear as corrupted.\n\n      Background: The serialization-header in the -Statistics.db sstable component contains the type information\n      of the table columns. C* 3.0 write incorrect type information for frozen UDTs by omitting the\n      \"frozen\" information. Non-frozen UDTs were introduced by CASSANDRA-7423 in C* 3.6. Since then, the missing\n      \"frozen\" information leads to deserialization issues that result in CorruptSSTableExceptions, potentially other\n      exceptions as well.\n\n      As a mitigation, the sstable serialization-headers are rewritten to contain the missing \"frozen\" information for\n      UDTs once, when an upgrade from C* 3.0 is detected. This migration does not touch snapshots or backups.\n\n      The sstablescrub tool now performs a check of the sstable serialization-header against the schema. A mismatch of\n      the types in the serialization-header and the schema will cause sstablescrub to error out and stop by default.\n      See the new `-e` option. `-e off` disables the new validation code. `-e fix` or `-e fix-only`, e.g.\n      `sstablescrub -e fix keyspace table`, will validate the serialization-header, rewrite the non-frozen UDTs\n      in the serialzation-header to frozen UDTs, if that matches the schema, and continue with scrub.\n      See `sstablescrub -h`.\n      (CASSANDRA-15035)\n\t- repair_session_max_tree_depth setting has been added to cassandra.yaml to allow operators to reduce\n\t  merkle tree size if repair is creating too much heap pressure. See CASSANDRA-14096 for details.\n\n3.11.5\n======\n\nExperimental features\n---------------------\n    - An 'enable_sasi_indexes' flag, true by default, has been added to cassandra.yaml to allow operators to prevent\n      the creation of new SASI indexes, which are considered experimental and are not recommended for production use.\n      (See https://www.mail-archive.com/dev@cassandra.apache.org/msg13582.html)\n    - The flags 'enable_sasi_indexes' and 'enable_materialized_views' have been grouped under an experimental features\n      section in cassandra.yaml.\n\n3.11.4\n======\n\nUpgrading\n---------\n    - The order of static columns in SELECT * has been fixed to match that of 2.0 and 2.1 - they are now sorted\n      alphabetically again, by their name, just like regular columns are. If you use prepared statements and\n      SELECT * queries, and have both simple and collection static columns in those tables, and are upgrading from an\n      earlier 3.0 version, then you might be affected by this change. Please see CASSANDRA-14638 for details.\n\n3.11.3\n=====\n\nUpgrading\n---------\n    - Materialized view users upgrading from 3.0.15 (3.0.X series) or 3.11.1 (3.11.X series) and  later that have performed range movements (join, decommission, move, etc),\n      should run repair on the base tables, and subsequently on the views to ensure data affected by CASSANDRA-14251 is correctly propagated to all replicas.\n    - Changes to bloom_filter_fp_chance will no longer take effect on existing sstables when the node is restarted. Only\n      compactions/upgradesstables regenerates bloom filters and Summaries sstable components. See CASSANDRA-11163\n\n3.11.2\n======\n\nUpgrading\n---------\n    - See MAXIMUM TTL EXPIRATION DATE NOTICE above.\n    - Cassandra is now relying on the JVM options to properly shutdown on OutOfMemoryError. By default it will\n      rely on the OnOutOfMemoryError option as the ExitOnOutOfMemoryError and CrashOnOutOfMemoryError options\n      are not supported by the older 1.7 and 1.8 JVMs. A warning will be logged at startup if none of those JVM\n      options are used. See CASSANDRA-13006 for more details\n    - Cassandra is not logging anymore by default an Heap histogram on OutOfMemoryError. To enable that behavior\n      set the 'cassandra.printHeapHistogramOnOutOfMemoryError' System property to 'true'. See CASSANDRA-13006\n      for more details.\n\n3.11.1\n======\n\nUpgrading\n---------\n    - Creating Materialized View with filtering on non-primary-key base column\n      (added in CASSANDRA-10368) is disabled, because the liveness of view row\n      is depending on multiple filtered base non-key columns and base non-key\n      column used in view primary-key. This semantic cannot be supported without\n      storage format change, see CASSANDRA-13826. For append-only use case, you\n      may still use this feature with a startup flag: \"-Dcassandra.mv.allow_filtering_nonkey_columns_unsafe=true\"\n\nCompact Storage (only when upgrading from 3.X or any version lower than 3.0.15)\n---------------\n    - Starting version 4.0, Thrift is no longer supported.\n      COMPACT STORAGE will no longer be supported after 'ALTER ... DROP COMPACT STORAGE'\n      is taken out of experimental mode. This will be done in a major future release, post 5.0 (CASSANDRA-19324).\n      'ALTER ... DROP COMPACT STORAGE' statement makes Compact Tables CQL-compatible,\n      exposing internal structure of Thrift/Compact Tables. You can find more details\n      on exposed internal structure under:\n      http://cassandra.apache.org/doc/latest/cql/appendices.html#appendix-c-dropping-compact-storage\n\n      For uninterrupted cluster upgrades, drivers now support 'NO_COMPACT' startup option.\n      Supplying this flag will have same effect as 'DROP COMPACT STORAGE', but only for the\n      current connection.\n\n      In order to upgrade, clients supporting a non-compact schema view can be rolled out\n      gradually. When all the clients are updated 'ALTER ... DROP COMPACT STORAGE' can be\n      executed. After dropping compact storage, âNO_COMPACT' option will have no effect\n      after that.\n\n\nMaterialized Views\n-------------------\n\nMaterialized Views (only when upgrading from any version lower than 3.0.15 (3.0 series) or 3.11.1 (3.X series))\n---------------------------------------------------------------------------------------\n    - Cassandra will no longer allow dropping columns on tables with Materialized Views.\n    - A change was made in the way the Materialized View timestamp is computed, which\n      may cause an old deletion to a base column which is view primary key (PK) column\n      to not be reflected in the view when repairing the base table post-upgrade. This\n      condition is only possible when a column deletion to an MV primary key (PK) column\n      not present in the base table PK (via UPDATE base SET view_pk_col = null or DELETE\n      view_pk_col FROM base) is missed before the upgrade and received by repair after the upgrade.\n      If such column deletions are done on a view PK column which is not a base PK, it's advisable\n      to run repair on the base table of all nodes prior to the upgrade. Alternatively it's possible\n      to fix potential inconsistencies by running repair on the views after upgrade or drop and\n      re-create the views. See CASSANDRA-11500 for more details.\n    - Removal of columns not selected in the Materialized View (via UPDATE base SET unselected_column\n      = null or DELETE unselected_column FROM base) may not be properly reflected in the view in some\n      situations so we advise against doing deletions on base columns not selected in views\n      until this is fixed on CASSANDRA-13826.\n\n3.11.0\n======\n\nUpgrading\n---------\n   - Creating Materialized View with filtering on non-primary-key base column\n     (added in CASSANDRA-10368) is disabled, because the liveness of view row\n     is depending on multiple filtered base non-key columns and base non-key\n     column used in view primary-key. This semantic cannot be supported without\n     storage format change, see CASSANDRA-13826. For append-only use case, you\n     may still use this feature with a startup flag: \"-Dcassandra.mv.allow_filtering_nonkey_columns_unsafe=true\"\n   - The NativeAccessMBean isAvailable method will only return true if the\n     native library has been successfully linked. Previously it was returning\n     true if JNA could be found but was not taking into account link failures.\n   - Primary ranges in the system.size_estimates table are now based on the keyspace\n     replication settings and adjacent ranges are no longer merged (CASSANDRA-9639).\n   - In 2.1, the default for otc_coalescing_strategy was 'DISABLED'.\n     In 2.2 and 3.0, it was changed to 'TIMEHORIZON', but that value was shown\n     to be a performance regression. The default for 3.11.0 and newer has\n     been reverted to 'DISABLED'. Users upgrading from Cassandra 2.2 or 3.0 should\n     be aware that the default has changed.\n   - The StorageHook interface has been modified to allow to retrieve read information from\n     SSTableReader (CASSANDRA-13120).\n\n3.10\n====\n\nNew features\n------------\n   - New `DurationType` (cql duration). See CASSANDRA-11873\n   - Runtime modification of concurrent_compactors is now available via nodetool\n   - Support for the assignment operators +=/-= has been added for update queries.\n   - An Index implementation may now provide a task which runs prior to joining\n     the ring. See CASSANDRA-12039\n   - Filtering on partition key columns is now also supported for queries without\n     secondary indexes.\n   - A slow query log has been added: slow queries will be logged at DEBUG level.\n     For more details refer to CASSANDRA-12403 and slow_query_log_timeout_in_ms\n     in cassandra.yaml.\n   - Support for GROUP BY queries has been added.\n   - A new compaction-stress tool has been added to test the throughput of compaction\n     for any cassandra-stress user schema.  see compaction-stress help for how to use.\n   - Compaction can now take into account overlapping tables that don't take part\n     in the compaction to look for deleted or overwritten data in the compacted tables.\n     Then such data is found, it can be safely discarded, which in turn should enable\n     the removal of tombstones over that data.\n\n     The behavior can be engaged in two ways:\n       - as a \"nodetool garbagecollect -g CELL/ROW\" operation, which applies\n         single-table compaction on all sstables to discard deleted data in one step.\n       - as a \"provide_overlapping_tombstones:CELL/ROW/NONE\" compaction strategy flag,\n         which uses overlapping tables as a source of deletions/overwrites during all\n         compactions.\n     The argument specifies the granularity at which deleted data is to be found:\n       - If ROW is specified, only whole deleted rows (or sets of rows) will be\n         discarded.\n       - If CELL is specified, any columns whose value is overwritten or deleted\n         will also be discarded.\n       - NONE (default) specifies the old behavior, overlapping tables are not used to\n         decide when to discard data.\n     Which option to use depends on your workload, both ROW and CELL increase the\n     disk load on compaction (especially with the size-tiered compaction strategy),\n     with CELL being more resource-intensive. Both should lead to better read\n     performance if deleting rows (resp. overwriting or deleting cells) is common.\n   - Prepared statements are now persisted in the table prepared_statements in\n     the system keyspace. Upon startup, this table is used to preload all\n     previously prepared statements - i.e. in many cases clients do not need to\n     re-prepare statements against restarted nodes.\n   - cqlsh can now connect to older Cassandra versions by downgrading the native\n     protocol version. Please note that this is currently not part of our release\n     testing and, as a consequence, it is not guaranteed to work in all cases.\n     See CASSANDRA-12150 for more details.\n   - Snapshots that are automatically taken before a table is dropped or truncated\n     will have a \"dropped\" or \"truncated\" prefix on their snapshot tag name.\n   - Metrics are exposed for successful and failed authentication attempts.\n     These can be located using the object names org.apache.cassandra.metrics:type=Client,name=AuthSuccess\n     and org.apache.cassandra.metrics:type=Client,name=AuthFailure respectively.\n   - Add support to \"unset\" JSON fields in prepared statements by specifying DEFAULT UNSET.\n     See CASSANDRA-11424 for details\n   - Allow TTL with null value on insert and update. It will be treated as equivalent to inserting a 0.\n   - Removed outboundBindAny configuration property. See CASSANDRA-12673 for details.\n\nUpgrading\n---------\n    - Support for alter types of already defined tables and of UDTs fields has been disabled.\n      If it is necessary to return a different type, please use casting instead. See\n      CASSANDRA-12443 for more details.\n    - Specifying the default_time_to_live option when creating or altering a\n      materialized view was erroneously accepted (and ignored). It is now\n      properly rejected.\n    - Only Java and JavaScript are now supported UDF languages.\n      The sandbox in 3.0 already prevented the use of script languages except Java\n      and JavaScript.\n    - Compaction now correctly drops sstables out of CompactionTask when there\n      isn't enough disk space to perform the full compaction.  This should reduce\n      pending compaction tasks on systems with little remaining disk space.\n    - Request timeouts in cassandra.yaml (read_request_timeout_in_ms, etc) now apply to the\n      \"full\" request time on the coordinator.  Previously, they only covered the time from\n      when the coordinator sent a message to a replica until the time that the replica\n      responded.  Additionally, the previous behavior was to reset the timeout when performing\n      a read repair, making a second read to fix a short read, and when subranges were read\n      as part of a range scan or secondary index query.  In 3.10 and higher, the timeout\n      is no longer reset for these \"subqueries\".  The entire request must complete within\n      the specified timeout.  As a consequence, your timeouts may need to be adjusted\n      to account for this.  See CASSANDRA-12256 for more details.\n    - Logs written to stdout are now consistent with logs written to files.\n      Time is now local (it was UTC on the console and local in files). Date, thread, file\n      and line info where added to stdout. (see CASSANDRA-12004)\n    - The 'clientutil' jar, which has been somewhat broken on the 3.x branch, is not longer provided.\n      The features provided by that jar are provided by any good java driver and we advise relying on drivers rather on\n      that jar, but if you need that jar for backward compatiblity until you do so, you should use the version provided\n      on previous Cassandra branch, like the 3.0 branch (by design, the functionality provided by that jar are stable\n      accross versions so using the 3.0 jar for a client connecting to 3.x should work without issues).\n    - (Tools development) DatabaseDescriptor no longer implicitly startups components/services like\n      commit log replay. This may break existing 3rd party tools and clients. In order to startup\n      a standalone tool or client application, use the DatabaseDescriptor.toolInitialization() or\n      DatabaseDescriptor.clientInitialization() methods. Tool initialization sets up partitioner,\n      snitch, encryption context. Client initialization just applies the configuration but does not\n      setup anything. Instead of using Config.setClientMode() or Config.isClientMode(), which are\n      deprecated now, use one of the appropiate new methods in DatabaseDescriptor.\n    - Application layer keep-alives were added to the streaming protocol to prevent idle incoming connections from\n      timing out and failing the stream session (CASSANDRA-11839). This effectively deprecates the streaming_socket_timeout_in_ms\n      property in favor of streaming_keep_alive_period_in_secs. See cassandra.yaml for more details about this property.\n    - Duration litterals support the ISO 8601 format. By consequence, identifiers matching that format\n      (e.g P2Y or P1MT6H) will not be supported anymore (CASSANDRA-11873).\n\n3.8\n===\n\nNew features\n------------\n   - Shared pool threads are now named according to the stage they are executing\n     tasks for. Thread names mentioned in traced queries change accordingly.\n   - A new option has been added to cassandra-stress \"-rate fixed={number}/s\"\n     that forces a scheduled rate of operations/sec over time. Using this, stress can\n     accurately account for coordinated ommission from the stress process.\n   - The cassandra-stress \"-rate limit=\" option has been renamed to \"-rate throttle=\"\n   - hdr histograms have been added to stress runs, it's output can be saved to disk using:\n     \"-log hdrfile=\" option. This histogram includes response/service/wait times when used with the\n     fixed or throttle rate options.  The histogram file can be plotted on\n     http://hdrhistogram.github.io/HdrHistogram/plotFiles.html\n   - TimeWindowCompactionStrategy has been added. This has proven to be a better approach\n     to time series compaction and new tables should use this instead of DTCS. See\n     CASSANDRA-9666 for details.\n   - Change-Data-Capture is now available. See cassandra.yaml and for cdc-specific flags and\n     a brief explanation of on-disk locations for archived data in CommitLog form. This can\n     be enabled via ALTER TABLE ... WITH cdc=true.\n     Upon flush, CommitLogSegments containing data for CDC-enabled tables are moved to\n     the data/cdc_raw directory until removed by the user and writes to CDC-enabled tables\n     will be rejected with a WriteTimeoutException once cdc_total_space_in_mb is reached\n     between unflushed CommitLogSegments and cdc_raw.\n     NOTE: CDC is disabled by default in the .yaml file. Do not enable CDC on a mixed-version\n     cluster as it will lead to exceptions which can interrupt traffic. Once all nodes\n     have been upgraded to 3.8 it is safe to enable this feature and restart the cluster.\n\nUpgrading\n---------\n   - The ReversedType behaviour has been corrected for clustering columns of\n     BYTES type containing empty value. Scrub should be run on the existing\n     SSTables containing a descending clustering column of BYTES type to correct\n     their ordering. See CASSANDRA-12127 for more details.\n   - Ec2MultiRegionSnitch will no longer automatically set broadcast_rpc_address\n     to the public instance IP if this property is defined on cassandra.yaml.\n   - The name \"json\" and \"distinct\" are not valid anymore a user-defined function\n     names (they are still valid as column name however). In the unlikely case where\n     you had defined functions with such names, you will need to recreate\n     those under a different name, change your code to use the new names and\n     drop the old versions, and this _before_ upgrade (see CASSANDRA-10783 for more\n     details).\n\nDeprecation\n-----------\n   - DateTieredCompactionStrategy has been deprecated - new tables should use\n     TimeWindowCompactionStrategy. Note that migrating an existing DTCS-table to TWCS might\n     cause increased compaction load for a while after the migration so make sure you run\n     tests before migrating. Read CASSANDRA-9666 for background on this.\n\n3.7\n===\n\nUpgrading\n---------\n   - A maximum size for SSTables values has been introduced, to prevent out of memory\n     exceptions when reading corrupt SSTables. This maximum size can be set via\n     max_value_size_in_mb in cassandra.yaml. The default is 256MB, which matches the default\n     value of native_transport_max_frame_size_in_mb. SSTables will be considered corrupt if\n     they contain values whose size exceeds this limit. See CASSANDRA-9530 for more details.\n\n\n3.6\n=====\n\nNew features\n------------\n   - JMX connections can now use the same auth mechanisms as CQL clients. New options\n     in cassandra-env.(sh|ps1) enable JMX authentication and authorization to be delegated\n     to the IAuthenticator and IAuthorizer configured in cassandra.yaml. The default settings\n     still only expose JMX locally, and use the JVM's own security mechanisms when remote\n     connections are permitted. For more details on how to enable the new options, see the\n     comments in cassandra-env.sh. A new class of IResource, JMXResource, is provided for\n     the purposes of GRANT/REVOKE via CQL. See CASSANDRA-10091 for more details.\n     Also, directly setting JMX remote port via the com.sun.management.jmxremote.port system\n     property at startup is deprecated. See CASSANDRA-11725 for more details.\n   - JSON timestamps are now in UTC and contain the timezone information, see CASSANDRA-11137 for more details.\n   - Collision checks are performed when joining the token ring, regardless of whether\n     the node should bootstrap. Additionally, replace_address can legitimately be used\n     without bootstrapping to help with recovery of nodes with partially failed disks.\n     See CASSANDRA-10134 for more details.\n   - Key cache will only hold indexed entries up to the size configured by\n     column_index_cache_size_in_kb in cassandra.yaml in memory. Larger indexed entries\n     will never go into memory. See CASSANDRA-11206 for more details.\n   - For tables having a default_time_to_live specifying a TTL of 0 will remove the TTL\n     from the inserted or updated values.\n   - Startup is now aborted if corrupted transaction log files are found. The details\n     of the affected log files are now logged, allowing the operator to decide how\n     to resolve the situation.\n   - Filtering expressions are made more pluggable and can be added programatically via\n     a QueryHandler implementation. See CASSANDRA-11295 for more details.\n\n\n\n3.4\n===\n\nNew features\n------------\n    - Internal authentication now supports caching of encrypted credentials.\n      Reference cassandra.yaml:credentials_validity_in_ms\n    - Remote configuration of auth caches via JMX can be disabled using the\n      the system property cassandra.disable_auth_caches_remote_configuration\n    - sstabledump tool is added to be 3.0 version of former sstable2json. The tool only\n      supports v3.0+ SSTables. See tool's help for more detail.\n\nUpgrading\n---------\n    - Nothing specific to 3.4 but please see previous versions upgrading section,\n      especially if you are upgrading from 2.2.\n\nDeprecation\n-----------\n    - The mbean interfaces org.apache.cassandra.auth.PermissionsCacheMBean and\n      org.apache.cassandra.auth.RolesCacheMBean are deprecated in favor of\n      org.apache.cassandra.auth.AuthCacheMBean. This generalized interface is\n      common across all caches in the auth subsystem. The specific mbean interfaces\n      for each individual cache will be removed in a subsequent major version.\n\n\n3.2\n===\n\nNew features\n------------\n   - We now make sure that a token does not exist in several data directories. This\n     means that we run one compaction strategy per data_file_directory and we use\n     one thread per directory to flush. Use nodetool relocatesstables to make sure your\n     tokens are in the correct place, or just wait and compaction will handle it. See\n     CASSANDRA-6696 for more details.\n   - bound maximum in-flight commit log replay mutation bytes to 64 megabytes\n     tunable via cassandra.commitlog_max_outstanding_replay_bytes\n   - Support for type casting has been added to the selection clause.\n   - Hinted handoff now supports compression. Reference cassandra.yaml:hints_compression.\n     Note: hints compression is currently disabled by default.\n\nUpgrading\n---------\n   - The compression ratio metrics computation has been modified to be more accurate.\n   - Running Cassandra as root is prevented by default.\n   - JVM options are moved from cassandra-env.(sh|ps1) to jvm.options file\n\nDeprecation\n-----------\n   - The Thrift API is deprecated and will be removed in Cassandra 4.0.\n\n\n3.1\n=====\n\nUpgrading\n---------\n   - The return value of SelectStatement::getLimit as been changed from DataLimits\n     to int.\n   - Custom index implementation should be aware that the method Indexer::indexes()\n     has been removed as its contract was misleading and all custom implementation\n     should have almost surely returned true inconditionally for that method.\n   - GC logging is now enabled by default (you can disable it in the jvm.options\n     file if you prefer).\n\n\n3.0\n===\n\nNew features\n------------\n   - EACH_QUORUM is now a supported consistency level for read requests.\n   - Support for IN restrictions on any partition key component or clustering key\n     as well as support for EQ and IN multicolumn restrictions has been added to\n     UPDATE and DELETE statement.\n   - Support for single-column and multi-colum slice restrictions (>, >=, <= and <)\n     has been added to DELETE statements\n   - nodetool rebuild_index accepts the index argument without\n     the redundant table name\n   - Materialized Views, which allow for server-side denormalization, is now\n     available. Materialized views provide an alternative to secondary indexes\n     for non-primary key queries, and perform much better for indexing high\n     cardinality columns.\n     See http://www.datastax.com/dev/blog/new-in-cassandra-3-0-materialized-views\n   - Hinted handoff has been completely rewritten. Hints are now stored in flat\n     files, with less overhead for storage and more efficient dispatch.\n     See CASSANDRA-6230 for full details.\n   - Option to not purge unrepaired tombstones. To avoid users having data resurrected\n     if repair has not been run within gc_grace_seconds, an option has been added to\n     only allow tombstones from repaired sstables to be purged. To enable, set the\n     compaction option 'only_purge_repaired_tombstones':true but keep in mind that if\n     you do not run repair for a long time, you will keep all tombstones around which\n     can cause other problems.\n   - Enabled warning on GC taking longer than 1000ms. See\n     cassandra.yaml:gc_warn_threshold_in_ms\n\nUpgrading\n---------\n   - Clients must use the native protocol version 3 when upgrading from 2.2.X as\n     the native protocol version 4 is not compatible between 2.2.X and 3.Y. See\n     https://www.mail-archive.com/user@cassandra.apache.org/msg45381.html for details.\n   - A new argument of type InetAdress has been added to IAuthenticator::newSaslNegotiator,\n     representing the IP address of the client attempting authentication. It will be a breaking\n     change for any custom implementations.\n   - token-generator tool has been removed.\n   - Upgrade to 3.0 is supported from Cassandra 2.1 versions greater or equal to 2.1.9,\n     or Cassandra 2.2 versions greater or equal to 2.2.2. Upgrade from Cassandra 2.0 and\n     older versions is not supported.\n   - The 'memtable_allocation_type: offheap_objects' option has been removed. It should\n     be re-introduced in a future release and you can follow CASSANDRA-9472 to know more.\n   - Configuration parameter memory_allocator in cassandra.yaml has been removed.\n   - The native protocol versions 1 and 2 are not supported anymore.\n   - Max mutation size is now configurable via max_mutation_size_in_kb setting in\n     cassandra.yaml; the default is half the size commitlog_segment_size_in_mb * 1024.\n   - 3.0 requires Java 8u40 or later.\n   - Garbage collection options were moved from cassandra-env to jvm.options file.\n   - New transaction log files have been introduced to replace the compactions_in_progress\n     system table, temporary file markers (tmp and tmplink) and sstable ancerstors.\n     Therefore, compaction metadata no longer contains ancestors. Transaction log files\n     list sstable descriptors involved in compactions and other operations such as flushing\n     and streaming. Use the sstableutil tool to list any sstable files currently involved\n     in operations not yet completed, which previously would have been marked as temporary.\n     A transaction log file contains one sstable per line, with the prefix \"add:\" or \"remove:\".\n     They also contain a special line \"commit\", only inserted at the end when the transaction\n     is committed. On startup we use these files to cleanup any partial transactions that were\n     in progress when the process exited. If the commit line is found, we keep new sstables\n     (those with the \"add\" prefix) and delete the old sstables (those with the \"remove\" prefix),\n     vice-versa if the commit line is missing. Should you lose or delete these log files,\n     both old and new sstable files will be kept as live files, which will result in duplicated\n     sstables. These files are protected by incremental checksums so you should not manually\n     edit them. When restoring a full backup or moving sstable files, you should clean-up\n     any left over transactions and their temporary files first. You can use this command:\n      ===> sstableutil -c ks table\n     See CASSANDRA-7066 for full details.\n   - New write stages have been added for batchlog and materialized view mutations\n     you can set their size in cassandra.yaml\n   - User defined functions are now executed in a sandbox.\n     To use UDFs and UDAs, you have to enable them in cassandra.yaml.\n   - New SSTable version 'la' with improved bloom-filter false-positive handling\n     compared to previous version 'ka' used in 2.2 and 2.1. Running sstableupgrade\n     is not necessary but recommended.\n   - Before upgrading to 3.0, make sure that your cluster is in complete agreement\n     (schema versions outputted by `nodetool describecluster` are all the same).\n   - Schema metadata is now stored in the new `system_schema` keyspace, and\n     legacy `system.schema_*` tables are now gone; see CASSANDRA-6717 for details.\n   - Pig's support has been removed.\n   - Hadoop BulkOutputFormat and BulkRecordWriter have been removed; use\n     CqlBulkOutputFormat and CqlBulkRecordWriter instead.\n   - Hadoop ColumnFamilyInputFormat and ColumnFamilyOutputFormat have been removed;\n     use CqlInputFormat and CqlOutputFormat instead.\n   - Hadoop ColumnFamilyRecordReader and ColumnFamilyRecordWriter have been removed;\n     use CqlRecordReader and CqlRecordWriter instead.\n   - hinted_handoff_enabled in cassandra.yaml no longer supports a list of data centers.\n     To specify a list of excluded data centers when hinted_handoff_enabled is set to true,\n     use hinted_handoff_disabled_datacenters, see CASSANDRA-9035 for details.\n   - The `sstable_compression` and `chunk_length_kb` compression options have been deprecated.\n     The new options are `class` and `chunk_length_in_kb`. Disabling compression should now\n     be done by setting the new option `enabled` to `false`.\n   - The compression option `crc_check_chance` became a top-level table option, but is currently\n     enforced only against tables with enabled compression.\n   - Only map syntax is now allowed for caching options. ALL/NONE/KEYS_ONLY/ROWS_ONLY syntax\n     has been deprecated since 2.1.0 and is being removed in 3.0.0.\n   - The 'index_interval' option for 'CREATE TABLE' statements, which has been deprecated\n     since 2.1 and replaced with the 'min_index_interval' and 'max_index_interval' options,\n     has now been removed.\n   - The 'replicate_on_write' and 'populate_io_cache_on_flush' options for 'CREATE TABLE' statements,\n     which have been deprecated since 2.1, have also been removed.\n   - Batchlog entries are now stored in a new table - system.batches.\n     The old one has been deprecated.\n   - JMX methods set/getCompactionStrategyClass have been removed, use\n     set/getCompactionParameters or set/getCompactionParametersJson instead.\n   - SizeTieredCompactionStrategy parameter cold_reads_to_omit has been removed.\n   - The secondary index API has been comprehensively reworked. This will be a breaking\n     change for any custom index implementations, which should now look to implement\n     the new org.apache.cassandra.index.Index interface. New syntax has been added to create\n     and query row-based indexes, which are not explicitly linked to a single column in the\n     base table.\n\n\n2.2.4\n=====\n\nDeprecation\n-----------\n    - Pig support has been deprecated, and will be removed in 3.0.\n      Please see CASSANDRA-10542 for more details.\n    - Configuration parameter memory_allocator in cassandra.yaml has been deprecated\n      and will be removed in 3.0.0. As mentioned below for 2.2.0, jemalloc is\n      automatically preloaded on Unix platforms.\n\nOperations\n----------\n    - Switching data center or racks is no longer an allowed operation on a node\n      which has data. Instead, the node will need to be decommissioned and\n      rebootstrapped. If moving from the SimpleSnitch, make sure that the data\n      center and rack containing all current nodes is named \"datacenter1\" and\n      \"rack1\". To override this behaviour use -Dcassandra.ignore_rack=true and/or\n      -Dcassandra.ignore_dc=true.\n    - Reloading the configuration file of GossipingPropertyFileSnitch has been disabled.\n\nUpgrading\n---------\n    - The default for the inter-DC stream throughput setting\n      (inter_dc_stream_throughput_outbound_megabits_per_sec in cassandra.yaml) is\n      the same than the one for intra-DC one (200Mbps) instead of being unlimited.\n      Having it unlimited was never intended and was a bug.\n\nNew features\n------------\n    - Time windows in DTCS are now limited to 1 day by default to be able to\n      handle bootstrap and repair in a better way. To get the old behaviour,\n      increase max_window_size_seconds.\n    - DTCS option max_sstable_age_days is now deprecated and defaults to 1000 days.\n    - Native protocol server now allows both SSL and non-SSL connections on\n      the same port.\n\n2.2.3\n=====\n\nUpgrading\n---------\n    - Nothing specific to this release, but please see 2.2 if you are upgrading\n      from a previous version.\n\n\n2.2.2\n=====\n\nChanged Defaults\n----------------\n   - commitlog_total_space_in_mb will use the smaller of 8192, and 1/4\n     of the total space of the commitlog volume. (Before: always used\n     8192)\n   - The following INFO logs were reduced to DEBUG level and will now show\n     on debug.log instead of system.log:\n      - Memtable flushing actions\n      - Commit log replayed files\n      - Compacted sstables\n      - SStable opening (SSTableReader)\n\nNew features\n------------\n   - Custom QueryHandlers can retrieve the column specifications for the bound\n     variables from QueryOptions by using the hasColumnSpecifications()\n     and getColumnSpecifications() methods.\n   - A new default assynchronous log appender debug.log was created in addition\n     to  the system.log appender in order to provide more detailed log debugging.\n     In order to disable debug logging, you must comment-out the ASYNCDEBUGLOG\n     appender on conf/logback.xml. See CASSANDRA-10241 for more information.\n\n\n2.2.1\n=====\n\nNew features\n------------\n   - COUNT(*) and COUNT(1) can be selected with other columns or functions\n\n\n2.2\n===\n\nUpgrading\n---------\n   - The authentication & authorization subsystems have been redesigned to\n     support role based access control (RBAC), resulting in a change to the\n     schema of the system_auth keyspace. See below for more detail.\n     For systems already using the internal auth implementations, the process\n     for converting existing data during a rolling upgrade is straightforward.\n     As each node is restarted, it will attempt to convert any data in the\n     legacy tables into the new schema. Until enough nodes to satisfy the\n     replication strategy for the system_auth keyspace are upgraded and so have\n     the new schema, this conversion will fail with the failure being reported\n     in the system log.\n     During the upgrade, Cassandra's internal auth classes will continue to use\n     the legacy tables, so clients experience no disruption. Issuing DCL\n     statements during an upgrade is not supported.\n     Once all nodes are upgraded, an operator with superuser privileges should\n     drop the legacy tables, system_auth.users, system_auth.credentials and\n     system_auth.permissions. Doing so will prompt Cassandra to switch over to\n     the new tables without requiring any further intervention.\n     While the legacy tables are present a restarted node will re-run the data\n     conversion and report the outcome so that operators can verify that it is\n     safe to drop them.\n\nNew features\n------------\n   - The LIMIT clause applies now only to the number of rows returned to the user,\n     not to the number of row queried. By consequence, queries using aggregates will not\n     be impacted by the LIMIT clause anymore.\n   - Very large batches will now be rejected (defaults to 50kb). This\n     can be customized by modifying batch_size_fail_threshold_in_kb.\n   - Selecting columns,scalar functions, UDT fields, writetime or ttl together\n     with aggregated is now possible. The value returned for the columns,\n     scalar functions, UDT fields, writetime and ttl will be the ones for\n     the first row matching the query.\n   - Windows is now a supported platform. Powershell execution for startup scripts\n     is highly recommended and can be enabled via an administrator command-prompt\n     with: 'powershell set-executionpolicy unrestricted'\n   - It is now possible to do major compactions when using leveled compaction.\n     Doing that will take all sstables and compact them out in levels. The\n     levels will be non overlapping so doing this will still not be something\n     you want to do very often since it might cause more compactions for a while.\n     It is also possible to split output when doing a major compaction with\n     STCS - files will be split in sizes 50%, 25%, 12.5% etc of the total size.\n     This might be a bit better than old major compactions which created one big\n     file on disk.\n   - A new tool has been added bin/sstableverify that checks for errors/bitrot\n     in all sstables.  Unlike scrub, this is a non-invasive tool.\n   - Authentication & Authorization APIs have been updated to introduce\n     roles. Roles and Permissions granted to them are inherited, supporting\n     role based access control. The role concept supercedes that of users\n     and CQL constructs such as CREATE USER are deprecated but retained for\n     compatibility. The requirement to explicitly create Roles in Cassandra\n     even when auth is handled by an external system has been removed, so\n     authentication & authorization can be delegated to such systems in their\n     entirety.\n   - In addition to the above, Roles are also first class resources and can be the\n     subject of permissions. Users (roles) can now be granted permissions on other\n     roles, including CREATE, ALTER, DROP & AUTHORIZE, which removesthe need for\n     superuser privileges in order to perform user/role management operations.\n   - Creators of database resources (Keyspaces, Tables, Roles) are now automatically\n     granted all permissions on them (if the IAuthorizer implementation supports\n     this).\n   - SSTable file name is changed. Now you don't have Keyspace/CF name\n     in file name. Also, secondary index has its own directory under parent's\n     directory.\n   - Support for user-defined functions and user-defined aggregates have\n     been added to CQL.\n     ************************************************************************\n     IMPORTANT NOTE: user-defined functions can be used to execute\n     arbitrary and possibly evil code in Cassandra 2.2, and are\n     therefore disabled by default.  To enable UDFs edit\n     cassandra.yaml and set enable_user_defined_functions to true.\n\n     CASSANDRA-9402 will add a security manager for UDFs in Cassandra\n     3.0.  This will inherently be backwards-incompatible with any 2.2\n     UDF that perform insecure operations such as opening a socket or\n     writing to the filesystem.\n     ************************************************************************\n   - Row-cache is now fully off-heap.\n   - jemalloc is now automatically preloaded and used on Linux and OS-X if\n     installed.\n   - Please ensure on Unix platforms that there is no libjnadispath.so\n     installed which is accessible by Cassandra. Old versions of\n     libjna packages (< 4.0.0) will cause problems - e.g. Debian Wheezy\n     contains libjna versin 3.2.x.\n   - The node now keeps up when streaming is failed during bootstrapping. You can\n     use new `nodetool bootstrap resume` command to continue streaming after resolving\n     an issue.\n   - Protocol version 4 specifies that bind variables do not require having a\n     value when executing a statement. Bind variables without a value are\n     called 'unset'. The 'unset' bind variable is serialized as the int\n     value '-2' without following bytes.\n     In an EXECUTE or BATCH request an unset bind value does not modify the value and\n     does not create a tombstone, an unset bind ttl is treated as 'unlimited',\n     an unset bind timestamp is treated as 'now', an unset bind counter operation\n     does not change the counter value.\n     Unset tuple field, UDT field and map key are not allowed.\n     In a QUERY request an unset limit is treated as 'unlimited'.\n     Unset WHERE clauses with unset partition column, clustering column\n     or index column are not allowed.\n   - New `ByteType` (cql tinyint). 1-byte signed integer\n   - New `ShortType` (cql smallint). 2-byte signed integer\n   - New `SimpleDateType` (cql date). 4-byte unsigned integer\n   - New `TimeType` (cql time). 8-byte long\n   - The toDate(timeuuid), toTimestamp(timeuuid) and toUnixTimestamp(timeuuid) functions have been added to allow\n     to convert from timeuuid into date type, timestamp type and bigint raw value.\n     The functions unixTimestampOf(timeuuid) and dateOf(timeuuid) have been deprecated.\n   - The toDate(timestamp) and toUnixTimestamp(timestamp) functions have been added to allow\n     to convert from timestamp into date type and bigint raw value.\n   - The toTimestamp(date) and toUnixTimestamp(date) functions have been added to allow\n     to convert from date into timestamp type and bigint raw value.\n   - SizeTieredCompactionStrategy parameter cold_reads_to_omit has been removed.\n   - The default JVM flag -XX:+PerfDisableSharedMem will cause the following tools JVM\n     to stop working: jps, jstack, jinfo, jmc, jcmd as well as 3rd party tools like Jolokia.\n     If you wish to use these tools you can comment this flag out in cassandra-env.{sh,ps1}\n\nUpgrading\n---------\n   - Thrift rpc is no longer being started by default.\n     Set `start_rpc` parameter to `true` to enable it.\n   - Pig's CqlStorage has been removed, use CqlNativeStorage instead\n   - Pig's CassandraStorage has been deprecated. CassandraStorage\n     should only be used against tables created via thrift.\n     Use CqlNativeStorage for all other tables.\n   - IAuthenticator been updated to remove responsibility for user/role\n     maintenance and is now solely responsible for validating credentials,\n     This is primarily done via SASL, though an optional method exists for\n     systems which need support for the Thrift login() method.\n   - IRoleManager interface has been added which takes over the maintenance\n     functions from IAuthenticator. IAuthorizer is mainly unchanged. Auth data\n     in systems using the stock internal implementations PasswordAuthenticator\n     & CassandraAuthorizer will be automatically converted during upgrade,\n     with minimal operator intervention required. Custom implementations will\n     require modification, though these can be used in conjunction with the\n     stock CassandraRoleManager so providing an IRoleManager implementation\n     should not usually be necessary.\n   - Fat client support has been removed since we have push notifications to clients\n   - cassandra-cli has been removed. Please use cqlsh instead.\n   - YamlFileNetworkTopologySnitch has been removed; switch to\n     GossipingPropertyFileSnitch instead.\n   - CQL2 has been removed entirely in this release (previously deprecated\n     in 2.0.0). Please switch to CQL3 if you haven't already done so.\n   - The results of CQL3 queries containing an IN restriction will be ordered\n     in the normal order and not anymore in the order in which the column values were\n     specified in the IN restriction.\n   - Some secondary index queries with restrictions on non-indexed clustering\n     columns were not requiring ALLOW FILTERING as they should. This has been\n     fixed, and those queries now require ALLOW FILTERING (see CASSANDRA-8418\n     for details).\n   - The SSTableSimpleWriter and SSTableSimpleUnsortedWriter classes have been\n     deprecated and will be removed in the next major Cassandra release. You\n     should use the CQLSSTableWriter class instead.\n   - The sstable2json and json2sstable tools have been deprecated and will be\n     removed in the next major Cassandra release. See CASSANDRA-9618\n     (https://issues.apache.org/jira/browse/CASSANDRA-9618) for details.\n   - nodetool enablehandoff will no longer support a list of data centers starting\n     with the next major release. Two new commands will be added, enablehintsfordc and disablehintsfordc,\n     to exclude data centers from using hinted handoff when the global status is enabled.\n     In cassandra.yaml, hinted_handoff_enabled will no longer support a list of data centers starting\n     with the next major release. A new setting will be added, hinted_handoff_disabled_datacenters,\n     to exclude data centers when the global status is enabled, see CASSANDRA-9035 for details.\n\n\n2.1.13\n======\n\nNew features\n------------\n    - New options for cqlsh COPY FROM and COPY TO, see CASSANDRA-9303 for details.\n\n2.1.10\n=====\n\nNew features\n------------\n   - The syntax TRUNCATE TABLE X is now accepted as an alias for TRUNCATE X\n\n\n2.1.9\n=====\n\nUpgrading\n---------\n    - cqlsh will now display timestamps with a UTC timezone. Previously,\n      timestamps were displayed with the local timezone.\n    - Commit log files are no longer recycled by default, due to negative\n      performance implications. This can be enabled again with the\n      commitlog_segment_recycling option in your cassandra.yaml\n    - JMX methods set/getCompactionStrategyClass have been deprecated, use\n      set/getCompactionParameters/set/getCompactionParametersJson instead\n\n2.1.8\n=====\n\nUpgrading\n---------\n    - Nothing specific to this release, but please see 2.1 if you are upgrading\n      from a previous version.\n\n\n2.1.7\n=====\n\n\n\n2.1.6\n=====\n\nUpgrading\n---------\n    - Nothing specific to this release, but please see 2.1 if you are upgrading\n      from a previous version.\n\n\n2.1.5\n=====\n\nUpgrading\n---------\n    - The option to omit cold sstables with size tiered compaction has been\n      removed - it is almost always better to use date tiered compaction for\n      workloads that have cold data.\n\n2.1.4\n=====\n\nUpgrading\n---------\nThe default JMX config now listens to localhost only. You must enable\nthe other JMX flags in cassandra-env.sh manually.\n\n\n2.1.3\n=====\n\nUpgrading\n---------\n    - Prepending a list to a list collection was erroneously resulting in\n      the prepended list being reversed upon insertion.  If you were depending\n      on this buggy behavior, note that it has been corrected.\n    - Incremental replacement of compacted SSTables has been disabled for this\n      release.\n\n\n2.1.2\n=====\n\nUpgrading\n---------\n    - Nothing specific to this release, but please see 2.1 if you are upgrading\n      from a previous version.\n\n\n2.1.1\n=====\n\nUpgrading\n---------\n    - Nothing specific to this release, but please see 2.1 if you are upgrading\n      from a previous version.\n\nNew features\n------------\n   - Netty support for epoll on linux is now enabled.  If for some\n     reason you want to disable it pass, the following system property\n     -Dcassandra.native.epoll.enabled=false\n\n\n2.1\n===\n\nNew features\n------------\n   - Default data and log locations have changed.  If not set in\n     cassandra.yaml, the data file directory, commitlog directory,\n     and saved caches directory will default to $CASSANDRA_HOME/data/data,\n     $CASSANDRA_HOME/data/commitlog, and $CASSANDRA_HOME/data/saved_caches,\n     respectively.  The log directory now defaults to $CASSANDRA_HOME/logs.\n     If not set, $CASSANDRA_HOME, defaults to the top-level directory of\n     the installation.\n     Note that this should only affect source checkouts and tarballs.\n     Deb and RPM packages will continue to use /var/lib/cassandra and\n     /var/log/cassandra in cassandra.yaml.\n   - SSTable data directory name is slightly changed. Each directory will\n     have hex string appended after CF name, e.g.\n         ks/cf-5be396077b811e3a3ab9dc4b9ac088d/\n     This hex string part represents unique ColumnFamily ID.\n     Note that existing directories are used as is, so only newly created\n     directories after upgrade have new directory name format.\n   - Saved key cache files also have ColumnFamily ID in their file name.\n   - It is now possible to do incremental repairs, sstables that have been\n     repaired are marked with a timestamp and not included in the next\n     repair session. Use nodetool repair -par -inc to use this feature.\n     A tool to manually mark/unmark sstables as repaired is available in\n     tools/bin/sstablerepairedset. This is particularly important when\n     using LCS, or any data not repaired in your first incremental repair\n     will be put back in L0.\n   - Bootstrapping now ensures that range movements are consistent,\n     meaning the data for the new node is taken from the node that is no\n     longer a responsible for that range of keys.\n     If you want the old behavior (due to a lost node perhaps)\n     you can set the following property (-Dcassandra.consistent.rangemovement=false)\n   - It is now possible to use quoted identifiers in triggers' names.\n     WARNING: if you previously used triggers with capital letters in their\n     names, then you must quote them from now on.\n   - Improved stress tool (http://goo.gl/OTNqiQ)\n   - New incremental repair option (http://goo.gl/MjohJp, http://goo.gl/f8jSme)\n   - Incremental replacement of compacted SSTables (http://goo.gl/JfDBGW)\n   - The row cache can now cache only the head of partitions (http://goo.gl/6TJPH6)\n   - Off-heap memtables (http://goo.gl/YT7znJ)\n   - CQL improvements and additions: User-defined types, tuple types, 2ndary\n     indexing of collections, ... (http://goo.gl/kQl7GW)\n\nUpgrading\n---------\n   - commitlog_sync_batch_window_in_ms behavior has changed from the\n     maximum time to wait between fsync to the minimum time.  We are\n     working on making this more user-friendly (see CASSANDRA-9533) but in the\n     meantime, this means 2.1 needs a much smaller batch window to keep\n     writer threads from starving.  The suggested default is now 2ms.\n   - Rolling upgrades from anything pre-2.0.7 is not supported. Furthermore\n     pre-2.0 sstables are not supported. This means that before upgrading\n     a node on 2.1, this node must be started on 2.0 and\n     'nodetool upgdradesstables' must be run (and this even in the case\n     of not-rolling upgrades).\n   - For size-tiered compaction users, Cassandra now defaults to ignoring\n     the coldest 5% of sstables.  This can be customized with the\n     cold_reads_to_omit compaction option; 0.0 omits nothing (the old\n     behavior) and 1.0 omits everything.\n   - Multithreaded compaction has been removed.\n   - Counters implementation has been changed, replaced by a safer one with\n     less caveats, but different performance characteristics. You might have\n     to change your data model to accomodate the new implementation.\n     (See https://issues.apache.org/jira/browse/CASSANDRA-6504 and the\n     blog post at http://goo.gl/qj8iQl for details).\n   - (per-table) index_interval parameter has been replaced with\n     min_index_interval and max_index_interval paratemeters. index_interval\n     has been deprecated.\n   - support for supercolumns has been removed from json2sstable\n\n\n2.0.11\n======\n\nUpgrading\n---------\n    - Nothing specific to this release, but refer to previous entries if you\n      are upgrading from a previous version.\n\nNew features\n------------\n    - DateTieredCompactionStrategy added, optimized for time series data and groups\n      data that is written closely in time (CASSANDRA-6602 for details). Consider\n      this experimental for now.\n\n\n2.0.10\n======\n\nNew features\n------------\n    - CqlPaginRecordReader and CqlPagingInputFormat have both been removed.\n      Use CqlInputFormat instead.\n    - If you are using Leveled Compaction, you can now disable doing size-tiered\n      compaction in L0 by starting Cassandra with -Dcassandra.disable_stcs_in_l0\n      (see CASSANDRA-6621 for details).\n    - Shuffle and taketoken have been removed.  For clusters that choose to\n      upgrade to vnodes, creating a new datacenter with vnodes and migrating is\n      recommended. See http://goo.gl/Sna2S1 for further information.\n\n\n2.0.9\n=====\n\nUpgrading\n---------\n    - Default values for read_repair_chance and local_read_repair_chance have been\n      swapped. Namely, default read_repair_chance is now set to 0.0, and default\n      local_read_repair_chance to 0.1.\n    - Queries selecting only CQL static columns were (mistakenly) not returning one\n      result per row in the partition. This has been fixed and a SELECT DISTINCT\n      can be used when only the static column of a partition needs to be fetch\n      without fetching the whole partition. But if you use static columns, please\n      make sure this won't affect you (see CASSANDRA-7305 for details).\n\n\n2.0.8\n=====\n\nNew features\n------------\n    - New snitches have been used for users of Google Compute Engine and of\n      Cloudstack.\n\nUpgrading\n---------\n    - Nothing specific to this release, but please see 2.0.7 if you are upgrading\n      from a previous version.\n\n\n2.0.7\n=====\n\nUpgrading\n---------\n    - Nothing specific to this release, but please see 2.0.6 if you are upgrading\n      from a previous version.\n\n\n2.0.6\n=====\n\nNew features\n------------\n    - CQL now support static columns, allows to batch multiple conditional updates\n      and has a new syntax for slicing over multiple clustering columns\n      (http://goo.gl/B6qz4j).\n    - Repair can be restricted to a set of nodes using the -hosts option in nodetool.\n    - A new 'nodetool taketoken' command relocate tokens with vnodes.\n    - Hinted handoff can be enabled only for some data-centers (see\n      hinted_handoff_enabled in cassandra.yaml)\n\nUpgrading\n---------\n    - Nothing specific to this release, but please see 2.0.5 if you are upgrading\n      from a previous version.\n\n\n2.0.5\n=====\n\nNew features\n------------\n    - Batchlog replay can be, and is throttled by default now.\n      See batchlog_replay_throttle_in_kb setting in cassandra.yaml.\n    - Scrub can now optionally skip corrupt counter partitions. Please note\n      that this will lead to the loss of all the counter updates in the skipped\n      partition. See the --skip-corrupted option.\n\nUpgrading\n---------\n    - If your cluster began on a version before 1.2, check that your secondary\n      index SSTables are on version 'ic' before upgrading.  If not, run\n      'nodetool upgradesstables' if on 1.2.14 or later, or run 'nodetool\n      upgradesstables ks cf' with the keyspace and secondary index named\n      explicitly otherwise.  If you don't do this and upgrade to 2.0.x and it\n      refuses to start because of 'hf' version files in the secondary index,\n      you will need to delete/move them out of the way and recreate the index\n      when 2.0.x starts.\n\n\n2.0.3\n=====\n\nNew features\n------------\n    - It's now possible to configure the maximum allowed size of the native\n      protocol frames (native_transport_max_frame_size_in_mb in the yaml file).\n\nUpgrading\n---------\n    - NaN and Infinity are new valid floating point constants in CQL3 and are now reserved\n      keywords. In the unlikely case you were using one of them as an identifier (for a\n      column, a keyspace or a table), you will now have to double-quote them (see\n      http://cassandra.apache.org/doc/cql3/CQL.html#identifiers for \"quoted identifiers\").\n    - The IEndpointStateChangeSubscriber has a new method, beforeChange, that\n      any custom implemenations using the class will need to implement.\n\n\n2.0.2\n=====\n\nNew features\n------------\n    - Speculative retry defaults to 99th percentile\n      (See blog post at http://www.datastax.com/dev/blog/rapid-read-protection-in-cassandra-2-0-2)\n    - Configurable metrics reporting\n      (see conf/metrics-reporter-config-sample.yaml)\n    - Compaction history and stats are now saved to system keyspace\n      (system.compaction_history table). You can access historiy via\n      new 'nodetool compactionhistory' command or CQL.\n\nUpgrading\n---------\n    - Nodetool defaults to Sequential mode for repair operations\n\n\n2.0.1\n=====\nUpgrading\n---------\n    - The default memtable allocation has changed from 1/3 of heap to 1/4\n      of heap.  Also, default (single-partition) read and write timeouts\n      have been reduced from 10s to 5s and 2s, respectively.\n\n\n2.0.0\n=====\n\nUpgrading\n---------\n    - Java 7 is now *required*!\n    - Upgrading is ONLY supported from Cassandra 1.2.9 or later. This\n      goes for sstable compatibility as well as network.  When\n      upgrading from an earlier release, upgrade to 1.2.9 first and\n      run upgradesstables before proceeding to 2.0.\n    - CAS and new features in CQL such as DROP COLUMN assume that cell\n      timestamps are microseconds-since-epoch.  Do not use these\n      features if you are using client-specified timestamps with some\n      other source.\n    - Replication and strategy options do not accept unknown options anymore.\n      This was already the case for CQL3 in 1.2 but this is now the case for\n      thrift too.\n    - auto_bootstrap of a single-token node with no initial_token will\n      now pick a random token instead of bisecting an existing token\n      range.  We recommend upgrading to vnodes; failing that, we\n      recommend specifying initial_token.\n    - reduce_cache_sizes_at, reduce_cache_capacity_to, and\n      flush_largest_memtables_at options have been removed from cassandra.yaml.\n    - CacheServiceMBean.reduceCacheSizes() has been removed.\n      Use CacheServiceMBean.set{Key,Row}CacheCapacityInMB() instead.\n    - authority option in cassandra.yaml has been deprecated since 1.2.0,\n      but it has been completely removed in 2.0. Please use 'authorizer' option.\n    - ASSUME command has been removed from cqlsh. Use CQL3 blobAsType() and\n      typeAsBlob() conversion functions instead.\n      See https://cassandra.apache.org/doc/cql3/CQL.html#blobFun for details.\n    - Inputting blobs as string constants is now fully deprecated in\n      favor of blob constants. Make sure to update your applications to use\n      the new syntax while you are still on 1.2 (which supports both string\n      and blob constants for blob input) before upgrading to 2.0.\n    - index_interval is now moved to ColumnFamily property. You can change value\n      with ALTER TABLE ... WITH statement and SSTables written after that will\n      have new value. When upgrading, Cassandra will pick up the value defined in\n      cassanda.yaml as the default for existing ColumnFamilies, until you explicitly\n      set the value for those.\n    - The deprecated native_transport_min_threads option has been removed in\n      Cassandra.yaml.\n\nOperations\n----------\n    - VNodes are enabled by default in cassandra.yaml.  initial_token\n      for non-vnode deployments has been removed from the example\n      yaml, but is still respected if specified.\n    - Major compactions, cleanup, scrub, and upgradesstables will interrupt\n      any in-progress compactions (but not repair validations) when invoked.\n    - Disabling autocompactions by setting min/max compaction threshold to 0\n      has been deprecated, instead, use the nodetool commands 'disableautocompaction'\n      and 'enableautocompaction' or set the compaction strategy option enabled = false\n    - ALTER TABLE DROP has been reenabled for CQL3 tables and has new semantics now.\n      See https://cassandra.apache.org/doc/cql3/CQL.html#alterTableStmt and\n      https://issues.apache.org/jira/browse/CASSANDRA-3919 for details.\n    - CAS uses gc_grace_seconds to determine how long to keep unused paxos\n      state around for, or a minimum of three hours.\n    - A new hints created metric is tracked per target, replacing countPendingHints\n    - After performance testing for CASSANDRA-5727, the default LCS filesize\n      has been changed from 5MB to 160MB.\n    - cqlsh DESCRIBE SCHEMA no longer outputs the schema of system_* keyspaces;\n      use DESCRIBE FULL SCHEMA if you need the schema of system_* keyspaces.\n    - CQL2 has been deprecated, and will be removed entirely in 2.2. See\n      CASSANDRA-5918 for details.\n    - Commit log archiver now assumes the client time stamp to be in microsecond\n      precision, during restore. Please refer to commitlog_archiving.properties.\n\n\nFeatures\n--------\n    - Lightweight transactions\n      (http://www.datastax.com/dev/blog/lightweight-transactions-in-cassandra-2-0)\n    - Alias support has been added to CQL3 SELECT statement. Refer to\n      CQL3 documentation (http://cassandra.apache.org/doc/cql3/CQL.html) for details.\n    - JEMalloc support (see memory_allocator in cassandra.yaml)\n    - Experimental triggers support.  See examples/ for how to use.  \"Experimental\"\n      means \"tied closely to internal data structures; we plan to decouple this in\n      the future, which will probably break triggers written against this initial\n      API.\"\n    - Numerous improvements to CQL3 and a new version of the native protocol. See\n      http://www.datastax.com/dev/blog/cql-in-cassandra-2-0 for details.\n\n1.2.11\n======\n\nFeatures\n--------\n    - Added a new consistency level, LOCAL_ONE, that forces all CL.ONE operations to\n      execute only in the local datacenter.\n    - New replace_address to supplant the (now removed) replace_token and\n      replace_node workflows to replace a dead node in place.  Works like the\n      old options, but takes the IP address of the node to be replaced.\n\n1.2.9\n=====\n\nFeatures\n--------\n    - A history of executed nodetool commands is now captured.\n      It can be found in ~/.cassandra/nodetool.history. Other tools output files\n      (cli and cqlsh history, .cqlshrc) are now centralized in ~/.cassandra, as well.\n    - A new sstablesplit utility allows to split large sstables offline.\n\n\n\n1.2.8\n=====\n\nUpgrading\n---------\n    - Nothing specific to this release, but please see 1.2.7 if you are upgrading\n      from a previous version.\n\n\n1.2.7\n=====\n\nUpgrading\n---------\n    - If you have decommissioned a node in the past 72 hours, it is imperative\n      that you not upgrade until such time has passed, or do a full cluster\n      restart (not rolling) before beginning the upgrade.  This only applies to\n      decommission, not removetoken.\n\n\n1.2.6\n=====\n\nUpgrading\n---------\n    - hinted_handoff_throttle_in_kb is now reduced by a factor\n      proportional to the number of nodes in the cluster (see\n      https://issues.apache.org/jira/browse/CASSANDRA-5272).\n    - CQL3 syntax for CREATE CUSTOM INDEX has been updated. See CQL3\n      documentation for details.\n\n\n1.2.5\n=====\n\nFeatures\n--------\n    - Custom secondary index support has been added to CQL3. Refer to\n      CQL3 documentation (http://cassandra.apache.org/doc/cql3/CQL.html)\n      for details and examples.\n\nUpgrading\n---------\n    - The native CQL transport is enabled by default on part 9042.\n\n\n1.2.4\n=====\n\nUpgrading\n---------\n    - 'nodetool upgradesstables' now only upgrades/rewrites sstables that are\n      not on the current version (which is usually what you want). Use the new\n      -a flag to recover the old behavior of rewriting all sstables.\n\nFeatures\n--------\n    - superuser setup delay (10 seconds) can now be overridden using\n      'cassandra.superuser_setup_delay_ms' property.\n\n\n1.2.3\n=====\n\nUpgrading\n---------\n    - CQL3 used to be case-insensitive for property map key in ALTER and CREATE\n      statements. In other words:\n        CREATE KEYSPACE test WITH replication = { 'CLASS' : 'SimpleStrategy',\n                                                  'REPLICATION_FACTOR' : '1' }\n      was allowed. However, this was not consistent with the fact that string\n      literal are case sensitive in every other places and more importantly this\n      break NetworkTopologyStrategy for which DC names are case sensitive. Those\n      property map key are now case sensitive. So the statement above should be\n      changed to:\n        CREATE KEYSPACE test WITH replication = { 'class' : 'SimpleStrategy',\n                                                  'replication_factor' : '1' }\n\n\n1.2.2\n=====\n\nUpgrading\n---------\n    - CQL3 type validation for constants has been fixed, which may require\n      fixing queries that were relying on the previous loose validation. Please\n      refer to the CQL3 documentation (http://cassandra.apache.org/doc/cql3/CQL.html)\n      and in particular the changelog section for more details. Please note in\n      particular that inputing blobs as strings constants is now deprecated (in\n      favor of blob constants) and its support will be removed in a future\n      version.\n\nFeatures\n--------\n    - Built-in CQL3-based implementations of IAuthenticator (PasswordAuthenticator)\n      and IAuthorizer (CassandraAuthorizer) have been added. PasswordAuthenticator\n      stores usernames and hashed passwords in system_auth.credentials table;\n      CassandraAuthorizer stores permissions in system_auth.permissions table.\n    - system_auth keyspace is now alterable via ALTER KEYSPACE queries.\n      The default is SimpleStrategy with replication_factor of 1, but it's\n      advised to raise RF to at least 3 or 5, since CL.QUORUM is used for all\n      auth-related queries. It's also possible to change the strategy to NTS.\n    - Permissions caching with time-based expiration policy has been added to reduce\n      performance impact of authorization. Permission validity can be configured\n      using 'permissions_validity_in_ms' setting in cassandra.yaml. The default\n      is 2000 (2 seconds).\n    - SimpleAuthenticator and SimpleAuthorizer examples have been removed. Please\n      look at CassandraAuthorizer/PasswordAuthenticator instead.\n\n\n1.2.1\n=====\n\nUpgrading\n---------\n    - In CQL3, date string are no longer accepted as timeuuid value since a\n      date string is not a correct representation of a timeuuid. Instead, new\n      methods (minTimeuuid, maxTimeuuid, now, dateOf, unixTimestampOf) have been\n      introduced to make working on timeuuid from date string easy. cqlsh also\n      does not display timeuuid as date string (since this is a lossy\n      representation), but the new dateOf method can be used instead. Please\n      refer to the reference documentation (http://cassandra.apache.org/doc/cql3/CQL.html)\n      for more detail.\n    - For client implementors: CQL3 client using the thrift interface should\n      use the new execute_cql3_query, prepare_cql3_query and execute_prepared_cql3_query\n      since 1.2.0. However, Cassandra 1.2.0 was not complaining if CQL3 was set\n      through set_cql_version but the now CQL2 only methods were used. This is\n      now the case.\n    - Queries that uses unrecognized or bad compaction or replication strategy\n      options are now refused (instead of simply logging a warning).\n\n\n1.2\n===\n\nUpgrading\n---------\n    - IAuthenticator interface has been updated to support dynamic\n      user creation, modification and removal. Users, even when stored\n      externally, now have to be explicitly created using\n      CREATE USER query first. AllowAllAuthenticator and SimpleAuthenticator\n      have been updated for the new interface, but you'll have to update\n      your old IAuthenticator implementations for 1.2. To ease this process,\n      a new abstract LegacyAuthenticator class has been added - subclass it\n      in your old IAuthenticator implementaion and everything should just work\n      (this only affects users who implemented custom authenticators).\n    - IAuthority interface has been deprecated in favor of IAuthorizer.\n      AllowAllAuthority and SimpleAuthority have been renamed to\n      AllowAllAuthorizer and SimpleAuthorizer, respectively. In order to\n      simplify the upgrade to the new interface, a new abstract\n      LegacyAuthorizer has been added - you should subclass it in your\n      old IAuthority implementation and everything should just work\n      (this only affects users who implemented custom authorities).\n      'authority' setting in cassandra.yaml has been renamed to 'authorizer',\n      'authority' is no longer recognized. This affects all upgrading users.\n    - 1.2 is NOT network-compatible with versions older than 1.0. That\n      means if you want to do a rolling, zero-downtime upgrade, you'll need\n      to upgrade first to 1.0.x or 1.1.x, and then to 1.2.  1.2 retains\n      the ability to read data files from Cassandra versions at least\n      back to 0.6, so a non-rolling upgrade remains possible with just\n      one step.\n    - The default partitioner for new clusters is Murmur3Partitioner,\n      which is about 10% faster for index-intensive workloads.  Partitioners\n      cannot be changed once data is in the cluster, however, so if you are\n      switching to the 1.2 cassandra.yaml, you should change this to\n      RandomPartitioner or whatever your old partitioner was.\n    - If you using counters and upgrading from a version prior to\n      1.1.6, you should drain existing Cassandra nodes prior to the\n      upgrade to prevent overcount during commitlog replay (see\n      CASSANDRA-4782).  For non-counter uses, drain is not required\n      but is a good practice to minimize restart time.\n    - Tables using LeveledCompactionStrategy will default to not\n      creating a row-level bloom filter.  The default in older versions\n      of Cassandra differs; you should manually set the false positive\n      rate to 1.0 (to disable) or 0.01 (to enable, if you make many\n      requests for rows that do not exist).\n    - The hints schema was changed from 1.1 to 1.2. Cassandra automatically\n      snapshots and then truncates the hints column family as part of\n      starting up 1.2 for the first time.  Additionally, upgraded nodes\n      will not store new hints destined for older (pre-1.2) nodes. It is\n      therefore recommended that you perform a cluster upgrade when all\n      nodes are up. Because hints will be lost, a cluster-wide repair (with\n      -pr) is recommended after upgrade of all nodes.\n    - The `nodetool removetoken` command (and corresponding JMX operation)\n      have been renamed to `nodetool removenode`.  This function is\n      incompatible with the earlier `nodetool removetoken`, and attempts to\n      remove nodes in this way with a mixed 1.1 (or lower) / 1.2 cluster,\n      is not supported.\n    - The somewhat ill-conceived CollatingOrderPreservingPartitioner\n      has been removed. Use Murmur3Partitioner (recommended) or\n      ByteOrderedPartitioner instead.\n    - Global option hinted_handoff_throttle_delay_in_ms has been removed.\n      hinted_handoff_throttle_in_kb has been added instead.\n    - The default bloom filter fp chance has been increased to 1%.\n      This will save about 30% of the memory used by the old default.\n      Existing columnfamilies will retain their old setting.\n    - The default partitioner (for new clusters; the partitioner cannot be\n      changed in existing clusters) was changed from RandomPartitioner to\n      Murmur3Partitioner which provides faster hashing as well as improved\n      performance with secondary indexes.\n    - The default version of CQL (and cqlsh) is now CQL3. CQL2 is still\n      available but you will have to use the thrift set_cql_version method\n      (that is already supported in 1.1) to use CQL2. For cqlsh, you will need\n      to use 'cqlsh -2'.\n    - CQL3 is now considered final in this release. Compared to the beta\n      version that is part of 1.1, this final version has a few additions\n      (collections), but also some (incompatible) changes in the syntax for the\n      options of the create/alter keyspace/table statements. Typically, the\n      syntax to create a keyspace is now:\n        CREATE KEYSPACE ks WITH replication = { 'class' : 'SimpleStrategy',\n                                                'replication_factor' : 2 };\n      Also, the consistency level cannot be set in the language anymore, but is\n      at the protocol level.\n      Please refer to the CQL3 documentation (http://cassandra.apache.org/doc/cql3/CQL.html)\n      for details.\n    - In CQL3, the DROP behavior from ALTER TABLE has currently been removed\n      (because it was not correctly implemented). We hope to add it back soon\n      (Cassandra 1.2.1 or 1.2.2)\n\nFeatures\n--------\n    - Cassandra can now handle concurrent CREATE TABLE schema changes\n      as well as other updates\n    - rpc_timeout has been split up to allow finer-grained control\n      on timeouts for different operation types\n    - num_tokens can now be specified in cassandra.yaml. This defines the\n      number of tokens assigned to the host on the ring (default: 1).\n      Also specifying initial_token will override any num_tokens setting.\n    - disk_failure_policy allows blacklisting failed disks in JBOD\n      configuration instead of erroring out indefinitely\n    - event tracing can be configured per-connection (\"trace_next_query\")\n      or globally/probabilistically (\"nodetool settraceprobability\")\n    - Atomic batches are now supported server side, where Cassandra will\n      guarantee that (at the price of pre-writing the batch to another node\n      first), all mutations in the batch will be applied, even if the\n      coordinator fails mid-batch.\n    - new IAuthorizer interface has replaced the old IAuthority. IAuthorizer\n      allows dynamic permission management via new CQL3 statements:\n      GRANT, REVOKE, LIST PERMISSIONS. A native implementation storing\n      the permissions in Cassandra is being worked on and we expect to\n      include it in 1.2.1 or 1.2.2.\n    - IAuthenticator interface has been updated to support dynamic user\n      creation, modification and removal via new CQL3 statements:\n      CREATE USER, ALTER USER, DROP USER, LIST USERS. A native implementation\n      that stores users in Cassandra itself is being worked on and is expected to\n      become part of 1.2.1 or 1.2.2.\n\n\n1.1.5\n=====\n\nUpgrading\n---------\n    - Nothing specific to this release, but please see 1.1 if you are upgrading\n      from a previous version.\n\n\n1.1.4\n=====\n\nUpgrading\n---------\n    - Nothing specific to this release, but please see 1.1 if you are upgrading\n      from a previous version.\n\n\n1.1.3\n=====\n\nUpgrading\n---------\n    - Running \"nodetool upgradesstables\" after upgrading is recommended\n      if you use Counter columnfamilies.\n\nFeatures\n--------\n    - the cqlsh COPY command can now export to CSV flat files\n    - added a new tools/bin/token-generator to facilitate generating evenly distributed tokens\n\n\n1.1.2\n=====\n\nUpgrading\n---------\n    - If you have column families using the LeveledCompactionStrategy, you should run scrub on those column families.\n\nFeatures\n--------\n    - cqlsh has a new COPY command to load data from CSV flat files\n\n\n1.1.1\n=====\n\nUpgrading\n---------\n    - Nothing specific to this release, but please see 1.1 if you are upgrading\n      from a previous version.\n\nFeatures\n--------\n    - Continuous commitlog archiving and point-in-time recovery.\n      See conf/commitlog_archiving.properties\n    - Incremental repair by token range, exposed over JMX\n\n\n1.1\n===\n\nUpgrading\n---------\n    - Compression is enabled by default on newly created ColumnFamilies\n      (and unchanged for ColumnFamilies created prior to upgrading).\n    - If you are running a multi datacenter setup, you should upgrade to\n      the latest 1.0.x (or 0.8.x) release before upgrading.  Versions\n      0.8.8 and 1.0.3-1.0.5 generate cross-dc forwarding that is incompatible\n      with 1.1.\n    - EACH_QUORUM ConsistencyLevel is only supported for writes and will now\n      throw an InvalidRequestException when used for reads.  (Previous\n      versions would silently perform a LOCAL_QUORUM read instead.)\n    - ANY ConsistencyLevel is only supported for writes and will now\n      throw an InvalidRequestException when used for reads.  (Previous\n      versions would silently perform a ONE read for range queries;\n      single-row and multiget reads already rejected ANY.)\n    - The largest mutation batch accepted by the commitlog is now 128MB.\n      (In practice, batches larger than ~10MB always caused poor\n      performance due to load volatility and GC promotion failures.)\n      Larger batches will continue to be accepted but will not be\n      durable.  Consider setting durable_writes=false if you really\n      want to use such large batches.\n    - Make sure that global settings: key_cache_{size_in_mb, save_period}\n      and row_cache_{size_in_mb, save_period} in conf/cassandra.yaml are\n      used instead of per-ColumnFamily options.\n    - JMX methods no longer return custom Cassandra objects.  Any such methods\n      will now return standard Maps, Lists, etc.\n    - Hadoop input and output details are now separated.  If you were\n      previously using methods such as getRpcPort you now need to use\n      getInputRpcPort or getOutputRpcPort depending on the circumstance.\n    - CQL changes:\n      + Prior to 1.1, you could use KEY as the primary key name in some\n        select statements, even if the PK was actually given a different\n        name.  In 1.1+ you must use the defined PK name.\n    - The sliced_buffer_size_in_kb option has been removed from the\n      cassandra.yaml config file (this option was a no-op since 1.0).\n\nFeatures\n--------\n    - Concurrent schema updates are now supported, with any conflicts\n      automatically resolved. Please note that simultaneously running\n      âCREATE COLUMN FAMILYâ operation on the different nodes wouldnât\n      be safe until version 1.2 due to the nature of ColumnFamily\n      identifier generation, for more details see CASSANDRA-3794.\n    - The CQL language has undergone a major revision, CQL3, the\n      highlights of which are covered at [1].  CQL3 is not\n      backwards-compatibile with CQL2, so we've introduced a\n      set_cql_version Thrift method to specify which version you want.\n      (The default remains CQL2 at least until Cassandra 1.2.)  cqlsh\n      adds a --cql3 flag to enable this.\n      [1] http://www.datastax.com/dev/blog/schema-in-cassandra-1-1\n    - Row-level isolation: multi-column updates to a single row have\n      always been *atomic* (either all will be applied, or none)\n      thanks to the CommitLog, but until 1.1 they were not *isolated*\n      -- a reader may see mixed old and new values while the update\n      happens.\n    - Finer-grained control over data directories, allowing a ColumnFamily to\n      be pinned to specfic volume, e.g. one backed by SSD.\n    - The bulk loader is not longer a fat client; it can be run from an\n      existing machine in a cluster.\n    - A new write survey mode has been added, similar to bootstrap (enabled via\n      -Dcassandra.write_survey=true), but the node will not automatically join\n      the cluster.  This is useful for cases such as testing different\n      compaction strategies with live traffic without affecting the cluster.\n    - Key and row caches are now global, similar to the global memtable\n      threshold. Manual tuning of cache sizes per-columnfamily is no longer\n      required.\n    - Off-heap caches no longer require JNA, and will work out of the box\n      on Windows as well as Unix platforms.\n    - Streaming is now multithreaded.\n    - Compactions may now be aborted via JMX or nodetool.\n    - The stress tool is not new in 1.1, but it is newly included in\n      binary builds as well as the source tree\n    - Hadoop: a new BulkOutputFormat is included which will directly write\n      SSTables locally and then stream them into the cluster.\n      YOU SHOULD USE BulkOutputFormat BY DEFAULT.  ColumnFamilyOutputFormat\n      is still around in case for some strange reason you want results\n      trickling out over Thrift, but BulkOutputFormat is significantly\n      more efficient.\n    - Hadoop: KeyRange.filter is now supported with ColumnFamilyInputFormat,\n      allowing index expressions to be evaluated server-side to reduce\n      the amount of data sent to Hadoop.\n    - Hadoop: ColumnFamilyRecordReader has a wide-row mode, enabled via\n      a boolean parameter to setInputColumnFamily, that pages through\n      data column-at-a-time instead of row-at-a-time.\n    - Pig: can use the wide-row Hadoop support, by setting PIG_WIDEROW_INPUT\n      to true.  This will produce each row's columns in a bag.\n\n\n\n1.0.8\n=====\n\nUpgrading\n---------\n    - Nothing specific to 1.0.8\n\nOther\n-----\n    - Allow configuring socket timeout for streaming\n\n\n1.0.7\n=====\n\nUpgrading\n---------\n    - Nothing specific to 1.0.7, please report to instruction for 1.0.6\n\nOther\n-----\n    - Adds new setstreamthroughput to nodetool to configure streaming\n      throttling\n    - Adds JMX property to get/set rpc_timeout_in_ms at runtime\n    - Allow configuring (per-CF) bloom_filter_fp_chance\n\n\n1.0.6\n=====\n\nUpgrading\n---------\n    - This release fixes an issue related to the chunk_length_kb option for\n      compressed sstables. If you use compression on some column families, it\n      is recommended after the upgrade to check the value for this option on\n      these column families (the default value is 64). In case the option would\n      not be set correctly, you should update the column family definition,\n      setting the right value and then run scrub on the column family.\n    - Please report to instruction for 1.0.5 if coming from an older version.\n\n\n1.0.5\n=====\n\nUpgrading\n---------\n    - 1.0.5 comes to fix two important regression of 1.0.4. So all information\n      concerning 1.0.4 are valid for this release, but please avoids upgrading\n      to 1.0.4.\n\n\n1.0.4\n=====\n\nUpgrading\n---------\n    - Nothing specific to 1.0.4 but please see the 1.0 upgrading section if\n      upgrading from a version prior to 1.0.0\n\nFeatures\n--------\n    - A new upgradesstables command has been added to nodetool. It is very\n      similar to scrub but without the ability to discard corrupted rows (and\n      as a consequence it does not snapshot automatically before). This new\n      command is to be prefered to scrub in all cases where sstables should be\n      rewritten to the current format for upgrade purposes.\n\nJMX\n---\n    - The path for the data, commit log and saved cache directories exposed\n      through JMX\n    - The in-memory bloom filter sizes are now exposed through JMX\n\n\n1.0.3\n=====\n\nUpgrading\n---------\n    - Nothing specific to 1.0.3 but please see the 1.0 upgrading section if\n      upgrading from a version prior to 1.0.0\n\nFeatures\n--------\n    - For non compressed sstables (compressed sstable already include more\n      fine grained checsums), a sha1 for the full sstable is now automatically\n      created (in a fix with suffix -Digest.sha1). It can be used to check the\n      sstable integrity with sha1sum.\n\n\n1.0.2\n=====\n\nUpgrading\n---------\n    - Nothing specific to 1.0.2 but please see the 1.0 upgrading section if\n      upgrading from a version prior to 1.0.0\n\nFeatures\n--------\n    - Cassandra CLI queries now have timing information\n\n\n1.0.1\n=====\n\nUpgrading\n---------\n    - If upgrading from a version prior to 1.0.0, please see the 1.0 Upgrading\n      section\n    - For running on Windows as a Service, procrun is no longer discributed\n      with Cassandra, see README.txt for more information on how to download\n      it if necessary.\n    - The name given to snapshots directories have been improved for human\n      readability. If you had scripts relying on it, you may need to update\n      them.\n\n\n1.0\n===\n\nUpgrading\n---------\n    - Upgrading from version 0.7.1+ or 0.8.2+ can be done with a rolling\n      restart, one node at a time.  (0.8.0 or 0.8.1 are NOT network-compatible\n      with 1.0: upgrade to the most recent 0.8 release first.)\n      You do not need to bring down the whole cluster at once.\n    - After upgrading, run nodetool scrub against each node before running\n      repair, moving nodes, or adding new ones.\n    - CQL inserts/updates now generate microsecond resolution timestamps\n      by default, instead of millisecond. THIS MEANS A ROLLING UPGRADE COULD\n      MIX milliseconds and microseconds, with clients talking to servers\n      generating milliseconds unable to overwrite the larger microsecond\n      timestamps. If you are using CQL and this is important for your\n      application, you can either perform a non-rolling upgrade to 1.0, or\n      update your application first to use explicit timestamps with the \"USING\n      timestamp=X\" syntax.\n    - The BinaryMemtable bulk-load interface has been removed (use the\n      sstableloader tool instead).\n    - The compaction_thread_priority setting has been removed from\n      cassandra.yaml (use compaction_throughput_mb_per_sec to throttle\n      compaction instead).\n    - CQL types bytea and date were renamed to blob and timestamp, respectively,\n      to conform with SQL norms.  CQL type int is now a 4-byte int, not 8\n      (which is still available as bigint).\n    - Cassandra 1.0 uses arena allocation to reduce old generation\n      fragmentation.  This means there is a minimum overhead of 1MB\n      per ColumnFamily plus 1MB per index.\n    - The SimpleAuthenticator and SimpleAuthority classes have been moved to\n      the example directory (and are thus not available from the binary\n      distribution). They never provided actual security and in their current\n      state are only meant as examples.\n\nFeatures\n--------\n    - SSTable compression is supported through the 'compression_options'\n      parameter when creating/updating a column family. For instance, you can\n      create a column family Cf using compression (through the Snappy library)\n      in the CLI with:\n        create column family Cf with compression_options={sstable_compression: SnappyCompressor}\n      SSTable compression is not activated by default but can be activated or\n      deactivated at any time.\n    - Compressed SSTable blocks are checksummed to protect against bitrot\n    - New LevelDB-inspired compaction algorithm can be enabled by setting the\n      Columnfamily compaction_strategy=LeveledCompactionStrategy option.\n      Leveled compaction means you only need to keep a few MB of space free for\n      compaction instead of (in the worst case) 50%.\n    - Ability to use multiple threads during a single compaction. See\n      multithreaded_compaction in cassandra.yaml for more details.\n    - Windows Service (\"cassandra.bat install\" to enable)\n    - A dead node may be replaced in a single step by starting a new node\n      with -Dcassandra.replace_token=<token>. More details can be found at\n      http://wiki.apache.org/cassandra/Operations#Replacing_a_Dead_Node\n    - It is now possible to repair only the first range returned by the\n      partitioner for a node with `nodetool repair -pr`. It makes it\n      easier/possible to repair a full cluster without any work duplication by\n      running this command on every node of the cluster.\n\nNew data types\n--------------\n    - decimal\n\nOther\n-----\n    - Hinted Handoff has two major improvements:\n        - Hint replay is much more efficient thanks to a change in the data model\n        - Hints are created for all replicas that do not ack a write.  (Formerly,\n          only replicas known to be down when the write started were hinted.)\n      This means that running with read repair completely off is much more\n      viable than before, and the default read_repair_chance is reduced from 1.0\n      (\"always repair\") to 0.1 (\"repair 10% of the time\").\n    - The old per-ColumnFamily memtable thresholds\n      (memtable_throughput_in_mb, memtable_operations_in_millions,\n      memtable_flush_after_mins) are ignored, in favor of the global\n      memtable_total_space_in_mb and commitlog_total_space_in_mb settings.\n      This does not affect client compatibility -- the old options are\n      still allowed, but have no effect. These options may be removed\n      entirely in a future release.\n    - Backlogged compactions will begin five minutes after startup.  The 0.8\n      behavior of never starting compaction until a flush happens is usually\n      not what is desired, but a short grace period is useful to allow caches\n      to warm up first.\n    - The deletion of compacted data files is not performed during Garbage\n      Collection anymore. This means compacted files will now be deleted\n      without delay.\n\n\n0.8.5\n=====\n\nFeatures\n--------\n    - SSTables copied to a data directory can be loaded by a live node through\n      nodetool refresh (may be handy to load snapshots).\n    - The configured compaction throughput is exposed through JMX.\n\nOther\n-----\n    - The sstableloader is now bundled with the debian package.\n    - Repair detects when a participating node is dead and fails instead of\n      hanging forever.\n\n\n0.8.4\n=====\n\nUpgrading\n---------\n    - Nothing specific to 0.8.4\n\nOther\n-----\n    - This release comes to fix a bug in counter that could lead to\n      (important) over-count.\n    - It also fixes a slight upgrade regression from 0.8.3. It is thus advised\n      to jump directly to 0.8.4 if upgrading from before 0.8.3.\n\n\n0.8.3\n=====\n\nUpgrading\n---------\n    - Token removal has been revamped.  Removing tokens in a mixed cluster with\n      0.8.3 will not work, so the entire cluster will need to be running 0.8.3\n      first, except for the dead node.\n\nFeatures\n--------\n    - It is now possible to use thrift asynchronous and\n      half-synchronous/half-asynchronous servers (see cassandra.yaml for more\n      details).\n    - It is now possible to access counter columns through Hadoop.\n\nOther\n-----\n    - This release fix a regression of 0.8 that can make commit log segment to\n      be deleted even though not all data it contains has been flushed.\n      Upgrades from 0.8.* is very much encouraged.\n\n\n0.8.2\n=====\n\nUpgrading\n---------\n    - 0.8.0 and 0.8.1 shipped with a bug that was setting the\n      replicate_on_write option for counter column families to false (this\n      option has no effect on non-counter column family). This is an unsafe\n      default and 0.8.2 correct this, the default for replicate_on_write is\n      now true. It is advised to update your counter column family definitions\n      if replicate_on_write was uncorrectly set to false (before or after\n      upgrade).\n\n\n0.8.1\n=====\n\nUpgrading\n---------\n    - 0.8.1 is backwards compatible with 0.8, upgrade can be achieved by a\n      simple rolling restart.\n    - If upgrading for earlier version (0.7), please refer to the 0.8 section\n      for instructions.\n\nFeatures\n--------\n    - Numerous additions/improvements to CQL (support for counters, TTL, batch\n      inserts/deletes, index dropping, ...).\n    - Add two new AbstractTypes (comparator) to support compound keys\n      (CompositeType and DynamicCompositeType), as well as a ReverseType to\n      reverse the order of any existing comparator.\n    - New option to bypass the commit log on some keyspaces (for advanced\n      users).\n\nTools\n-----\n    - Add new data bulk loading utility (sstableloader).\n\n\n0.8\n===\n\nUpgrading\n---------\n    - Upgrading from version 0.7.1 or later can be done with a rolling\n      restart, one node at a time.  You do not need to bring down the\n      whole cluster at once.\n    - After upgrading, run nodetool scrub against each node before running\n      repair, moving nodes, or adding new ones.\n    - Running nodetool drain before shutting down the 0.7 node is\n      recommended but not required. (Skipping this will result in\n      replay of entire commitlog, so it will take longer to restart but\n      is otherwise harmless.)\n    - 0.8 is fully API-compatible with 0.7.  You can continue\n      to use your 0.7 clients.\n    - Avro record classes used in map/reduce and Hadoop streaming code have\n      been removed. Map/reduce can be switched to Thrift by changing\n      org.apache.cassandra.avro in import statements to\n      org.apache.cassandra.thrift (no class names change). Streaming support\n      has been removed for the time being.\n    - The loadbalance command has been removed from nodetool.  For similar\n      behavior, decommission then rebootstrap with empty initial_token.\n    - Thrift unframed mode has been removed.\n    - The addition of key_validation_class means the cli will assume keys\n      are bytes, instead of strings, in the absence of other information.\n      See http://wiki.apache.org/cassandra/FAQ#cli_keys for more details.\n\n\nFeatures\n--------\n    - added CQL client API and JDBC/DBAPI2-compliant drivers for Java and\n      Python, respectively (see: drivers/ subdirectory and doc/cql)\n    - added distributed Counters feature;\n      see http://wiki.apache.org/cassandra/Counters\n    - optional intranode encryption; see comments around 'encryption_options'\n      in cassandra.yaml\n    - compaction multithreading and rate-limiting; see\n      'concurrent_compactors' and 'compaction_throughput_mb_per_sec' in\n      cassandra.yaml\n    - cassandra will limit total memtable memory usage to 1/3 of the heap\n      by default.  This can be ajusted or disabled with the\n      memtable_total_space_in_mb option.  The old per-ColumnFamily\n      throughput, operations, and age settings are still respected but\n      will be removed in a future major release once we are satisfied that\n      memtable_total_space_in_mb works adequately.\n\nTools\n-----\n    - stress and py_stress moved from contrib/ to tools/\n    - clustertool was removed (see\n      https://issues.apache.org/jira/browse/CASSANDRA-2607 for examples\n      of how to script nodetool across the cluster instead)\n\nOther\n-----\n    - In the past, sstable2json would write column names and values as\n      hex strings, and now creates human readable values based on the\n      comparator/validator.  As a result, JSON dumps created with\n      older versions of sstable2json are no longer compatible with\n      json2sstable, and imports must be made with a configuration that\n      is identical to the export.\n    - manually-forced compactions (\"nodetool compact\") will do nothing\n      if only a single SSTable remains for a ColumnFamily. To force it\n      to compact that anyway (which will free up space if there are\n      a lot of expired tombstones), use the new forceUserDefinedCompaction\n      JMX method on CompactionManager.\n    - most of contrib/ (which was not part of the binary releases)\n      has been moved either to examples/ or tools/. We plan to move the\n      rest for 0.8.1.\n\nJMX\n---\n    - By default, JMX now listens on port 7199.\n\n\n0.7.6\n=====\n\nUpgrading\n---------\n    - Nothing specific to 0.7.6, but see 0.7.3 Upgrading if upgrading\n      from earlier than 0.7.1.\n\n\n0.7.5\n=====\n\nUpgrading\n---------\n    - Nothing specific to 0.7.5, but see 0.7.3 Upgrading if upgrading\n      from earlier than 0.7.1.\n\nChanges\n-------\n    - system_update_column_family no longer snapshots before applying\n      the schema change. (_update_keyspace never did.  _drop_keyspace\n      and _drop_column_family continue to snapshot.)\n    - added memtable_flush_queue_size option to cassandra.yaml to\n      avoid blocking writes when multiple column families (or a colum\n      family with indexes) are flushed at the same time.\n    - allow overriding initial_token, storage_port and rpc_port using\n      system properties\n\n\n0.7.4\n=====\n\nUpgrading\n---------\n    - Nothing specific to 0.7.4, but see 0.7.3 Upgrading if upgrading\n      from earlier than 0.7.1.\n\nFeatures\n--------\n    - Output to Pig is now supported as well as input\n\n\n0.7.3\n=====\n\nUpgrading\n---------\n    - 0.7.1 and 0.7.2 shipped with a bug that caused incorrect row-level\n      bloom filters to be generated when compacting sstables generated\n      with earlier versions.  This would manifest in IOExceptions during\n      column name-based queries.  0.7.3 provides \"nodetool scrub\" to\n      rebuild sstables with correct bloom filters, with no data lost.\n      (If your cluster was never on 0.7.0 or earlier, you don't have to\n      worry about this.)  Note that nodetool scrub will snapshot your\n      data files before rebuilding, just in case.\n\n\n0.7.1\n=====\n\nUpgrading\n---------\n    - 0.7.1 is completely backwards compatible with 0.7.0.  Just restart\n      each node with the new version, one at a time.  (The cluster does\n      not all need to be upgraded simultaneously.)\n\nFeatures\n--------\n    - added flush_largest_memtables_at and reduce_cache_sizes_at options\n      to cassandra.yaml as an escape valve for memory pressure\n    - added option to specify -Dcassandra.join_ring=false on startup\n      to allow \"warm spare\" nodes or performing JMX maintenance before\n      joining the ring\n\nPerformance\n-----------\n    - Disk writes and sequential scans avoid polluting page cache\n      (requires JNA to be enabled)\n    - Cassandra performs writes efficiently across datacenters by\n      sending a single copy of the mutation and having the recipient\n      forward that to other replicas in its datacenter.\n    - Improved network buffering\n    - Reduced lock contention on memtable flush\n    - Optimized supercolumn deserialization\n    - Zero-copy reads from mmapped sstable files\n    - Explicitly set higher JVM new generation size\n    - Reduced i/o contention during saving of caches\n\n\n0.7.0\n=====\n\nFeatures\n--------\n    - Secondary indexes (indexes on column values) are now supported\n    - Row size limit increased from 2GB to 2 billion columns.  rows\n      are no longer read into memory during compaction.\n    - Keyspace and ColumnFamily definitions may be added and modified live\n    - Streaming data for repair or node movement no longer requires\n      anticompaction step first\n    - NetworkTopologyStrategy (formerly DatacenterShardStrategy) is ready for\n      use, enabling ConsistencyLevel.DCQUORUM and DCQUORUMSYNC.  See comments\n      in `cassandra.yaml.`\n    - Optional per-Column time-to-live field allows expiring data without\n      have to issue explicit remove commands\n    - `truncate` thrift method allows clearing an entire ColumnFamily at once\n    - Hadoop OutputFormat and Streaming [non-jvm map/reduce via stdin/out]\n      support\n    - Up to 8x faster reads from row cache\n    - A new ByteOrderedPartitioner supports bytes keys with arbitrary content,\n      and orders keys by their byte value.  This should be used in new\n      deployments instead of OrderPreservingPartitioner.\n    - Optional round-robin scheduling between keyspaces for multitenant\n      clusters\n    - Dynamic endpoint snitch mitigates the impact of impaired nodes\n    - New `IntegerType`, faster than LongType and allows integers of\n      both less and more bits than Long's 64\n    - A revamped authentication system that decouples authorization and\n      allows finer-grained control of resources.\n\nUpgrading\n---------\n    The Thrift API has changed in incompatible ways; see below, and refer\n    to http://wiki.apache.org/cassandra/ClientOptions for a list of\n    higher-level clients that have been updated to support the 0.7 API.\n\n    The Cassandra inter-node protocol is incompatible with 0.6.x\n    releases (and with 0.7 beta1), meaning you will have to bring your\n    cluster down prior to upgrading: you cannot mix 0.6 and 0.7 nodes.\n\n    The hints schema was changed from 0.6 to 0.7. Cassandra automatically\n    snapshots and then truncates the hints column family as part of\n    starting up 0.7 for the first time.\n\n    Keyspace and ColumnFamily definitions are stored in the system\n    keyspace, rather than the configuration file.\n\n    The process to upgrade is:\n    1) run \"nodetool drain\" on _each_ 0.6 node.  When drain finishes (log\n       message \"Node is drained\" appears), stop the process.\n    2) Convert your storage-conf.xml to the new cassandra.yaml using\n       \"bin/config-converter\".\n    3) Rename any of your keyspace or column family names that do not adhere\n       to the '^\\w+' regex convention.\n    4) Start up your cluster with the 0.7 version.\n    5) Initialize your Keyspace and ColumnFamily definitions using\n       \"bin/schematool <host> <jmxport> import\".  _You only need to do\n       this to one node_.\n\nThrift API\n----------\n    - The Cassandra server now defaults to framed mode, rather than\n      unframed.  Unframed is obsolete and will be removed in the next\n      major release.\n    - The Cassandra Thrift interface file has been updated for Thrift 0.5.\n      If you are compiling your own client code from the interface, you\n      will need to upgrade the Thrift compiler to match.\n    - Row keys are now bytes: keys stored by versions prior to 0.7.0 will be\n      returned as UTF-8 encoded bytes. OrderPreservingPartitioner and\n      CollatingOrderPreservingPartitioner continue to expect that keys contain\n      UTF-8 encoded strings, but RandomPartitioner now works on any key data.\n    - keyspace parameters have been replaced with the per-connection\n      set_keyspace method.\n    - The return type for login() is now AccessLevel.\n    - The get_string_property() method has been removed.\n    - The get_string_list_property() method has been removed.\n\nConfiguraton\n------------\n    - Configuration file renamed to cassandra.yaml and log4j.properties to\n      log4j-server.properties\n    - PropertyFileSnitch configuration file renamed to\n      cassandra-topology.properties\n    - The ThriftAddress and ThriftPort directives have been renamed to\n      RPCAddress and RPCPort respectively.\n    - EndPointSnitch was renamed to RackInferringSnitch.  A new SimpleSnitch\n      has been added.\n    - RackUnawareStrategy and RackAwareStrategy have been renamed to\n      SimpleStrategy and OldNetworkTopologyStrategy, respectively.\n    - RowWarningThresholdInMB replaced with in_memory_compaction_limit_in_mb\n    - GCGraceSeconds is now per-ColumnFamily instead of global\n\t- Keyspace and column family names that do not confirm to a '^\\w+' regex\n      are considered illegal.\n    - Keyspace and column family definitions will need to be loaded via\n      \"bin/schematool <host> <jmxport> import\".  _You only need to do this to\n      one node_.\n    - In addition to an authenticator, an authority must be configured as\n      well. Users of SimpleAuthenticator should use SimpleAuthority for this\n      value (the default is AllowAllAuthority, which corresponds with\n      AllowAllAuthenticator).\n    - The format of access.properties has changed, see the sample configuration\n      conf/access.properties for documentation on the new format.\n\n\nJMX\n---\n    - StreamingService moved from o.a.c.streaming to o.a.c.service\n    - GMFD renamed to GOSSIP_STAGE\n    - {Min,Mean,Max}RowCompactedSize renamed to {Min,Mean,Max}RowSize\n      since it no longer has to wait til compaction to be computed\n\nOther\n-----\n    - If extending AbstractType, make sure you follow the singleton pattern\n      followed by Cassandra core AbstractType classes: provide a public\n      static final variable called 'instance'.\n\n\n0.6.6\n=====\n\nUpgrading\n---------\n    - As part of the cache-saving feature, a third directory\n      (along with data and commitlog) has been added to the config\n      file.  You will need to set and create this directory\n      when restarting your node into 0.6.6.\n\n\n0.6.1\n=====\n\nUpgrading\n---------\n    - We try to keep minor versions 100% compatible (data format,\n      commitlog format, network format) within the major series, but\n      we introduced a network-level incompatibility in 0.6.1.\n      Thus, if you are upgrading from 0.6.0 to any higher version\n      (0.6.1, 0.6.2, etc.) then you will need to restart your entire\n      cluster with the new version, instead of being able to do a\n      rolling restart.\n\n\n0.6.0\n=====\n\nFeatures\n--------\n    - row caching: configure with the RowsCached attribute in\n      ColumnFamily definition\n    - Hadoop map/reduce support: see contrib/word_count for an example\n    - experimental authentication support, described under\n      Authenticator in storage.conf\n\nConfiguraton\n------------\n    - MemtableSizeInMB has been replaced by MemtableThroughputInMB which\n      triggers a memtable flush when the specified amount of data has\n      been written, including overwrites.\n    - MemtableObjectCountInMillions has been replaced by the\n      MemtableOperationsInMillions directive which causes a memtable flush\n      to occur after the specified number of operations.\n    - Like MemtableSizeInMB, BinaryMemtableSizeInMB has been replaced by\n      BinaryMemtableThroughputInMB.\n    - Replication factor is now per-keyspace, rather than global.\n    - KeysCachedFraction is deprecated in favor of KeysCached\n    - RowWarningThresholdInMB added, to warn before very large rows\n      get big enough to threaten node stability\n\nThrift API\n----------\n    - removed deprecated get_key_range method\n    - added batch_mutate meethod\n    - deprecated multiget and batch_insert methods in favor of\n      multiget_slice and batch_mutate, respectively\n    - added ConsistencyLevel.ANY, for when you want write\n      availability even when it may not be readable immediately.\n      Unlike CL.ZERO, though, it will throw an exception if\n      it cannot be written *somewhere*.\n\nJMX metrics\n-----------\n    - read and write statistics are reported as lifetime totals,\n      instead of averages over the last minute.  average-since-last\n      requested are also available for convenience.\n    - cache hit rate statistics are now available from JMX under\n      org.apache.cassandra.db.Caches\n    - compaction JMX metrics are moved to\n      org.apache.cassandra.db.CompactionManager.  PendingTasks is now\n      a much better estimate of compactions remaining, and the\n      progress of the current compaction has been added.\n    - commitlog JMX metrics are moved to org.apache.cassandra.db.Commitlog\n    - progress of data streaming during bootstrap, loadbalance, or other\n      data migration, is available under\n      org.apache.cassandra.streaming.StreamingService.\n      See http://wiki.apache.org/cassandra/Streaming for details.\n\nInstallation/Upgrade\n--------------------\n    - 0.6 network traffic is not compatible with earlier versions.  You\n      will need to shut down all your nodes at once, upgrade, then restart.\n\n\n\n0.5.0\n=====\n\n0. The commitlog format has changed (but sstable format has not).\n   When upgrading from 0.4, empty the commitlog either by running\n   bin/nodeprobe flush on each machine and waiting for the flush to finish,\n   or simply remove the commitlog directory if you only have test data.\n   (If more writes come in after the flush command, starting 0.5 will error\n   out; if that happens, just go back to 0.4 and flush again.)\n   The format changed twice: from 0.4 to beta1, and from beta2 to RC1.\n\n.5 The gossip protocol has changed, meaning 0.5 nodes cannot coexist\n   in a cluster of 0.4 nodes or vice versa; you must upgrade your\n   whole cluster at the same time.\n\n1. Bootstrap, move, load balancing, and active repair have been added.\n   See http://wiki.apache.org/cassandra/Operations.  When upgrading\n   from 0.4, leave autobootstrap set to false for the first restart\n   of your old nodes.\n\n2. Performance improvements across the board, especially on the write\n   path (over 100% improvement in stress.py throughput).\n\n3. Configuration:\n     - Added \"comment\" field to ColumnFamily definition.\n     - Added MemtableFlushAfterMinutes, a global replacement for the\n       old per-CF FlushPeriodInMinutes setting\n     - Key cache settings\n\n4. Thrift:\n     - Added get_range_slice, deprecating get_key_range\n\n\n\n0.4.2\n=====\n\n1. Improve default garbage collector options significantly --\n   throughput will be 30% higher or more.\n\n\n\n0.4.1\n=====\n\n1. SnapshotBeforeCompaction configuration option allows snapshotting\n   before each compaction, which allows rolling back to any version\n   of the data.\n\n\n\n0.4.0\n=====\n\n1. On-disk data format has changed to allow billions of keys/rows per\n   node instead of only millions.  The new format is incompatible with 0.3;\n   see 0.3 notes below for how to import data from a 0.3 install.\n\n2. Cassandra now supports multiple keyspaces.  Typically you will have\n   one keyspace per application, allowing applications to be able to\n   create and modify ColumnFamilies at will without worrying about\n   collisions with others in the same cluster.\n\n3. Many Thrift API changes and documentation.  See\n   http://wiki.apache.org/cassandra/API\n\n4. Removed the web interface in favor of JMX and bin/nodeprobe, which\n   has significantly enhanced functionality.\n\n5. Renamed configuration \"<Table>\" to \"<Keyspace>\".\n\n6. Added commitlog fsync; see \"<CommitLogSync>\" in configuration.\n\n\n\n0.3.0\n=====\n\n1. With enough and large enough keys in a ColumnFamily, Cassandra will\n   run out of memory trying to perform compactions (data file merges).\n   The size of what is stored in memory is (S + 16) * (N + M) where S\n   is the size of the key (usually 2 bytes per character), N is the\n   number of keys and M, is the map overhead (which can be guestimated\n   at around 32 bytes per key).\n   So, if you have 10-character keys and 1GB of headroom in your heap\n   space for compaction, you can expect to store about 17M keys\n   before running into problems.\n   See https://issues.apache.org/jira/browse/CASSANDRA-208\n\n2. Because fixing #1 requires a data file format change, 0.4 will not\n   be binary-compatible with 0.3 data files.  A client-side upgrade\n   can be done relatively easily with the following algorithm:\n     for key in old_client.get_key_range(everything):\n         columns = old_client.get_slice or get_slice_super(key, all columns)\n     new_client.batch_insert or batch_insert_super(key, columns)\n   The inner loop can be trivially parallelized for speed.\n\n3. Commitlog does not fsync before reporting a write successful.\n   Using blocking writes mitigates this to some degree, since all\n   nodes that were part of the write quorum would have to fail\n   before sync for data to be lost.\n   See https://issues.apache.org/jira/browse/CASSANDRA-182\n\nAdditionally, row size (that is, all the data associated with a single\nkey in a given ColumnFamily) is limited by available memory, because\ncompaction deserializes each row before merging.\n\nSee https://issues.apache.org/jira/browse/CASSANDRA-16\n"
        },
        {
          "name": "NOTICE.txt",
          "type": "blob",
          "size": 0.3369140625,
          "content": "Apache Cassandra\nCopyright 2009- The Apache Software Foundation\n\nThis product includes software developed by The Apache Software\nFoundation (http://www.apache.org/).\n\nAndroid Code\nCopyright 2005-2008 The Android Open Source Project\nThis product includes software developed as part of\nThe Android Open Source Project (http://source.android.com).\n"
        },
        {
          "name": "README.asc",
          "type": "blob",
          "size": 3.7158203125,
          "content": "Apache Cassandra\n-----------------\n\nApache Cassandra is a highly-scalable partitioned row store. Rows are organized into tables with a required primary key.\n\nhttps://cwiki.apache.org/confluence/display/CASSANDRA2/Partitioners[Partitioning] means that Cassandra can distribute your data across multiple machines in an application-transparent matter. Cassandra will automatically repartition as machines are added and removed from the cluster.\n\nhttps://cwiki.apache.org/confluence/display/CASSANDRA2/DataModel[Row store] means that like relational databases, Cassandra organizes data by rows and columns. The Cassandra Query Language (CQL) is a close relative of SQL.\n\nFor more information, see http://cassandra.apache.org/[the Apache Cassandra web site].\n\nIssues should be reported on https://issues.apache.org/jira/projects/CASSANDRA/issues/[The Cassandra Jira].\n\nRequirements\n------------\n- Java: see supported versions in build.xml (search for property \"java.supported\").\n- Python: for `cqlsh`, see `bin/cqlsh` (search for function \"is_supported_version\").\n\n\nGetting started\n---------------\n\nThis short guide will walk you through getting a basic one node cluster up\nand running, and demonstrate some simple reads and writes. For a more-complete guide, please see the Apache Cassandra website's https://cassandra.apache.org/doc/latest/cassandra/getting_started/index.html[Getting Started Guide].\n\nFirst, we'll unpack our archive:\n\n  $ tar -zxvf apache-cassandra-$VERSION.tar.gz\n  $ cd apache-cassandra-$VERSION\n\nAfter that we start the server. Running the startup script with the -f argument will cause\nCassandra to remain in the foreground and log to standard out; it can be stopped with ctrl-C.\n\n  $ bin/cassandra -f\n\nNow let's try to read and write some data using the Cassandra Query Language:\n\n  $ bin/cqlsh\n\nThe command line client is interactive so if everything worked you should\nbe sitting in front of a prompt:\n\n----\nConnected to Test Cluster at localhost:9160.\n[cqlsh 6.3.0 | Cassandra 5.0-SNAPSHOT | CQL spec 3.4.8 | Native protocol v5]\nUse HELP for help.\ncqlsh>\n----\n\nAs the banner says, you can use 'help;' or '?' to see what CQL has to\noffer, and 'quit;' or 'exit;' when you've had enough fun. But lets try\nsomething slightly more interesting:\n\n----\ncqlsh> CREATE KEYSPACE schema1\n       WITH replication = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 };\ncqlsh> USE schema1;\ncqlsh:Schema1> CREATE TABLE users (\n                 user_id varchar PRIMARY KEY,\n                 first varchar,\n                 last varchar,\n                 age int\n               );\ncqlsh:Schema1> INSERT INTO users (user_id, first, last, age)\n               VALUES ('jsmith', 'John', 'Smith', 42);\ncqlsh:Schema1> SELECT * FROM users;\n user_id | age | first | last\n---------+-----+-------+-------\n  jsmith |  42 |  john | smith\ncqlsh:Schema1>\n----\n\nIf your session looks similar to what's above, congrats, your single node\ncluster is operational!\n\nFor more on what commands are supported by CQL, see\nhttp://cassandra.apache.org/doc/latest/cql/[the CQL reference]. A\nreasonable way to think of it is as, \"SQL minus joins and subqueries, plus collections.\"\n\nWondering where to go from here?\n\n  * Join us in #cassandra on the https://s.apache.org/slack-invite[ASF Slack] and ask questions.\n  * Subscribe to the Users mailing list by sending a mail to\n    user-subscribe@cassandra.apache.org.\n  * Subscribe to the Developer mailing list by sending a mail to\n    dev-subscribe@cassandra.apache.org.\n  * Visit the http://cassandra.apache.org/community/[community section] of the Cassandra website for more information on getting involved.\n  * Visit the http://cassandra.apache.org/doc/latest/development/index.html[development section] of the Cassandra website for more information on how to contribute.\n"
        },
        {
          "name": "TESTING.md",
          "type": "blob",
          "size": 17.5888671875,
          "content": "<!--\n#\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n-->\n\nThe goal of this document is to establish guidelines on writing tests that drive incremental improvement of the test coverage and testability of \nCassandra, without overly burdening day to day work. While not every point here will be immediately practical to implement or relevant for every \ncontribution, it errs on the side of not making rules out of potential exceptions. It provides guidelines on test scope, style, and goals, as\nwell as guidelines for dealing with global state and refactoring untested code.\n\n## What to Test\n\nThere are 3 main types of tests in Cassandra, unit tests, integration tests, and dtests. Below, each type of test is described, and a high level description of \nwhat should and shouldn't be tested in each is given.\n\n### Unit Tests\nJUnit tests of smaller components that are fairly narrow in scope (ie: data structures, verb handlers, helper classes)\n\n#### What should be tested\n * All state transitions should be tested\n * Illegal state transitions should be tested (that they throw exceptions)\n * all conditional branches should be tested. \n * Code that deals with ranges of values should have tests around expected ranges, unexpected ranges, different functional ranges and their boundaries.\n * Exception handling should be tested.\n\n#### What shouldn't be tested\n* implementation details (test that the system under test works a certain way, not that it's implemented a certain way)\n\n### Integration Tests\nJUnit tests of larger components with a lot of moving parts, usually involved in some internode communication (ie: Gossip, MessagingService).\nThe smaller components that make up the system under test in an integration test should be individually unit tested.\n\n#### What should be tested\n* messages are sent when expected\n* received messages have the intended side effects\n* internal interfaces work as expected\n* external interfaces are interacted with as expected\n* multiple instances of components interact as expected (with a mocked messaging service, and other dependencies, where appropriate)\n* dry start - test that a system starts up properly the first time a node start\n* restart - test that a system starts up properly on node restart (from both clean and unclean shutdown)\n* shutdown - test that a system can shutdown properly\n* upgrade - test that a system is able to restart with data from a previous version\n\n#### What shouldn't be tested\n* The rest of the application. It should be possible to test large systems without starting the entire database through the use of mocks.\n\n**Note:** it's generally not a good idea to mock out the storage layer if the component under test needs to interact with it. If you're testing\nhow multiple instances interact with each other, AND they need to use the storage layer, parameterizing the keyspace/table they store data is\nthe way to do it.\n\n### dtests\npython/ccm tests that start local clusters and interact with them via the python client.\n\ndtests are effectively black box tests, and should be used for checking that clusters and client side interfaces work as expected. They are not \na replacement for proper functional java tests. They take much longer to run, and are much less flexible in what they can test.\n\nSystems under test in dtest should have more granular integration tests as well.\n\n#### What should be tested\n* end to end cluster functionality\n* client contracts\n* trivial (to create) failure cases\n\n#### What shouldn't be tested\n* internal implementation details\n\n## Expanded Guidelines\n\nThis section has more in depth descriptions and reasoning about some of the points raised in the previous section.\n\n### Test structure\n\nTests cases should have a clear progression of setup, precondition check, performing some action under test, then a postcondition check.\n\n**Example**\n\n```java\n@Test\npublic void increment() throws Exception\n{\n\t// setup code\n\tint x = 1;\n\n\t// check preconditions\n\tassertEquals(1, x);\n\n\t// perform the state changing action under test\n\tx++;\n\n\t// check post conditions\n\tassertEquals(2, x);\n}\n```\n\n#### Reason\n\nTest cases should be optimized for readability\n\n#### Exceptions\n\nCases where simple cases can be tested in one line. Such as validation logic checks:\nproperty-based state testing (ie: ScalaCheck/QuickCheck)\n\n*Example:*\n```java\n@Test\npublic void validation()\n{\n\tassertValidationFailure(b -> b.withState(null));\n\tassertValidationFailure(b -> b.withSessionID(null));\n\tassertValidationFailure(b -> b.withCoordinator(null));\n\tassertValidationFailure(b -> b.withTableIds(null));\n\tassertValidationFailure(b -> b.withTableIds(new HashSet<>()));\n\tassertValidationFailure(b -> b.withRepairedAt(0));\n\tassertValidationFailure(b -> b.withRepairedAt(-1));\n\tassertValidationFailure(b -> b.withRanges(null));\n\tassertValidationFailure(b -> b.withRanges(new HashSet<>()));\n\tassertValidationFailure(b -> b.withParticipants(null));\n\tassertValidationFailure(b -> b.withParticipants(new HashSet<>()));\n\tassertValidationFailure(b -> b.withStartedAt(0));\n\tassertValidationFailure(b -> b.withLastUpdate(0));\n}\n```\n\n### Test distributed components in junit\n\nComponents that rely on nodes communicating with each other should be testable in java. \n\n#### Reason\n\nOne of the more difficult aspects of distributed systems is ensuring that they continue to behave correctly during various failure modes.  This includes weird \nedge cases involving specific ordering of events between nodes that rarely occur in the wild. Testing these sorts of scenarios is much easier in junit because \nmock 'clusters' can be placed in specific states, and deterministically stepped through a sequence of events, ensuring that they behave as expected, and are in \nthe expected state after each step.\n\n#### Exceptions\n\nThis rule mainly applies to new or significantly overhauled systems. Older systems *should* be refactored to be thoroughly tested, but it's not necessarily a \nprerequisite for working on them.\n\n### Test all branches and inputs.\n\nAll branches and inputs of a method should be exercised. For branches that require multiple criteria to be met, (ie `x > 10 && y < 100`), there\nshould be tests demonstrating that the branch is taken when all critera are met (ie `x=11,y=99`), and that it is not taken when only one is met \n(ie: `x=11, y=200 or x=5,y=99`). If a method deals with ranges of values, (ie `x >= 10`), the boundaries of the ranges should be tested (ie: `x=9, x=10`)\n\nIn the following example\n\n**Example**\n```java\nclass SomeClass\n{\n\tpublic static int someFunction(bool aFlag, int aValue)\n\t{\n\t\tif (aFlag && aValue > 10)\n\t\t{\n\t\t\treturn 20;\n\t\t}\n\t\telse if (aValue > 5)\n\t\t{\n\t\t\treturn 10;\n\t\telse\n\t\t{\n\t\t\treturn 0;\n\t\t}\n\t}\n}\n\nclass SomeTest\n{\n\tpublic void someFunction() throws Exception\n\t{\n\t\tassertEquals(10, somefunction(true, 11));\n\t\tassertEquals(5, somefunction(false, 11));\n\t\tassertEquals(5, somefunction(true, 8));\n\t\tassertEquals(5, somefunction(false, 8));\n\t\tassertEquals(0, somefunction(false, 4));\n\t}\n}\n```\n\n### Test any state transitions\n\nAs an extension of testing all branches and inputs. For stateful systems, there should be tests demonstrating that states change under the intended \ncircumstances, and that state changes have the intended side effects.\n \n### Test unsupported arguments and states throw exceptions\n\nIf a system is not intended to perform an action in a given state (ie: a node performing reads during bootstrap), or a method is not intended\nto encounter some type of argument (ie: a method that is only designed to work with numeric values > 0), then there should be tests demonstrating\nthat an appropriate exception is raised (IllegalStateException or IllegalArgumentException, respectively) in that case.\n\nThe guava preconditions module makes this straightforward.\n\n#### Reason\n\nInadvertent misuse of methods and systems cause bugs that are often silent and subtle. Raising exceptions on unintended usage helps\nprotect against future bugs and reduces developer surprise.\n\n## Dealing with global state\n\nUnfortunately, the project has extensive amounts of global state which makes actually writing robust tests difficult, but not impossible.\n\nHaving dependencies on global state is not an excuse to not test something, or to throw a dtest or assertion at it and call it a day.\n\nStructuring code in a way that interacts with global state that can still be deterministically tested just takes a few tweaks\n\n**Example, bad**\n```java\nclass SomeVerbHandler implements IVerbHandler<SomeMessage>\n{\n\tpublic void doVerb(MessageIn<SomeMessage> msg)\n\t{\n\t\tif (FailureDetector.instance.isAlive(msg.payload.otherNode))\n\t\t{\n\t\t\tnew StreamPlan(msg.payload.otherNode).requestRanges(someRanges).execute();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tCompactionManager.instance.submitBackground(msg.payload.cfs);\n\t\t}\n\t}\n}\n```\n\nIn this made up example, we're checking global state, and then taking some action against other global state. None of the global state\nwe're working with is easy to manipulate for tests, so comprehensive tests for this aren't very likely to be written. Even worse, whether\nthe FailureDetector, streaming, or compaction work properly are out of scope for our purposes. We're concerned with whether SomeVerbHandler\nworks as expected.\n\nIdeally though, classes won't have dependencies on global state at all, and have everything they need to work passed in as constructor arguments.\nThis also enables comprehensive testing, and stops the spread of global state. \n\nThis prevents the spread of global state, and also begins to identify and define the internal interfaces that will replace global state.\n\n**Example, better**\n```java\nclass SomeVerbHandler implements IVerbHandler<SomeMessage>\n{\n\tprivate final IFailureDetector failureDetector;\n\tprivate final ICompactionManager compactionManager;\n\tprivate final IStreamManager streamManager;\n\n\tpublic SomeVerbHandler(IFailureDetector failureDetector, ICompactionManager compactionManager, IStreamManager streamManager)\n\t{\n\t\tthis.failureDetector = failureDetector;\n\t\tthis.compactionManager = compactionManager;\n\t\tthis.streamManager = streamManager;\n\t}\n\n\tpublic void doVerb(MessageIn<SomeMessage> msg)\n\t{\n\t\tif (failureDetector.isAlive(msg.payload.otherNode))\n\t\t{\n\t\t\tstreamExecutor.submitPlan(new StreamPlan(msg.payload.otherNode).requestRanges(someRanges));\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcompactionManager.submitBackground(msg.payload.cfs);\n\t\t}\n\t}\n}\n```\n\n**Example test**\n```java\nclass SomeVerbTest\n{\n\tclass InstrumentedFailureDetector implements IFailureDetector\n\t{\n\t\tboolean alive = false;\n\t\t@Override\n\t\tpublic boolean isAlive(InetAddress address)\n\t\t{\n\t\t\treturn alive;\n\t\t}\n\t}\n\n\tclass InstrumentedCompactionManager implements ICompactionManager\n\t{\n\t\tboolean submitted = false;\n\t\t@Override\n\t\tpublic void submitBackground(ColumnFamilyStore cfs)\n\t\t{\n\t\t\tsubmitted = true;\n\t\t}\n\t}\n\n\tclass InstrumentedStreamManager implements IStreamManager\n\t{\n\t\tboolean submitted = false;\n\t\t@Override\n\t\tpublic void submitPlan(StreamPlan plan)\n\t\t{\n\t\t\tsubmitted = true;\n\t\t}\n\t}\n\n\t@Test\n\tpublic void liveNode() throws Exception\n\t{\n\t\tInstrumentedFailureDetector failureDetector = new InstrumentedFailureDetector();\n\t\tfailureDetector.alive = true;\n\t\tInstrumentedCompactionManager compactionManager = new InstrumentedCompactionManager();\n\t\tInstrumentedStreamManager streamManager = new InstrumentedStreamManager();\n\t\tSomeVerbHandler handler = new SomeVerbHandler(failureDetector, compactionManager, streamManager);\n\n\t\tMessageIn<SomeMessage> msg = new MessageIn<>(...);\n\n\t\tassertFalse(streamManager.submitted);\n\t\tassertFalse(compactionManager.submitted);\n\n\t\thandler.doVerb(msg);\n\n\t\tassertTrue(streamManager.submitted);\n\t\tassertFalse(compactionManager.submitted);\n\t}\n\n\t@Test\n\tpublic void deadNode() throws Exception\n\t{\n\t\tInstrumentedFailureDetector failureDetector = new InstrumentedFailureDetector();\n\t\tfailureDetector.alive = false;\n\t\tInstrumentedCompactionManager compactionManager = new InstrumentedCompactionManager();\n\t\tInstrumentedStreamManager streamManager = new InstrumentedStreamManager();\n\t\tSomeVerbHandler handler = new SomeVerbHandler(failureDetector, compactionManager, streamManager);\n\n\t\tMessageIn<SomeMessage> msg = new MessageIn<>(...);\n\n\t\tassertFalse(streamManager.submitted);\n\t\tassertFalse(compactionManager.submitted);\n\n\t\thandler.doVerb(msg);\n\n\t\tassertFalse(streamManager.submitted);\n\t\tassertTrue(compactionManager.submitted);\n\t}\n}\n```\n\nBy abstracting away accesses to global state we can exhaustively test the paths this verb handler can take, and directly confirm that it's taking the correct \nactions. Obviously, this is a simple example, but for classes or functions with more complex logic, this makes comprehensive testing much easier.\n\nNote that the interfaces used here probably shouldn't be the same ones we use for MBeans.\n\nHowever, in some cases, passing interfaces into the constructor may not be practical. Classes that are instantiated on startup need to be handled with care, since accessing\na singleton may change the initialization order of the database. It may also be a larger change than is warranted for something like a bug fix. In any case, if passing\ndependencies into the constructor is not practical, wrapping accesses to global state in protected methods that are overridden for tests will achieve the same thing.\n\n\n**Example, alternative**\n```java\nclass SomeVerbHandler implements IVerbHandler<SomeMessage>\n{ \n\t@VisibleForTesting\n\tprotected boolean isAlive(InetAddress addr) { return FailureDetector.instance.isAlive(msg.payload.otherNode); }\n\n\t@VisibleForTesting\n\tprotected void streamSomething(InetAddress to) { new StreamPlan(to).requestRanges(someRanges).execute(); }\n\n\t@VisibleForTesting\n\tprotected void compactSomething(ColumnFamilyStore cfs ) { CompactionManager.instance.submitBackground(); }\n\n\tpublic void doVerb(MessageIn<SomeMessage> msg)\n\t{\n\t\tif (isAlive(msg.payload.otherNode))\n\t\t{\n\t\t\tstreamSomething(msg.payload.otherNode);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcompactSomething();\n\t\t}\n\t}\n}\n```\n\n**Example test**\n```java\nclass SomeVerbTest\n{\n\tstatic class InstrumentedSomeVerbHandler extends SomeVerbHandler\n\t{\n\t\tpublic boolean alive = false;\n\t\tpublic boolean streamCalled = false;\n\t\tpublic boolean compactCalled = false;\n\n\t\t@Override\n\t\tprotected boolean isAlive(InetAddress addr) { return alive; }\n\t\t\n\t\t@Override\n\t\tprotected void streamSomething(InetAddress to) { streamCalled = true; }\n\n\t\t@Override\n\t\tprotected void compactSomething(ColumnFamilyStore cfs ) { compactCalled = true; }\n\t}\n\n\t@Test\n\tpublic void liveNode() throws Exception\n\t{\n\t\tInstrumentedSomeVerbHandler handler = new InstrumentedSomeVerbHandler();\n\t\thandler.alive = true;\n\t\tMessageIn<SomeMessage> msg = new MessageIn<>(...);\n\n\t\tassertFalse(handler.streamCalled);\n\t\tassertFalse(handler.compactCalled);\n\n\t\thandler.doVerb(msg);\n\n\t\tassertTrue(handler.streamCalled);\n\t\tassertFalse(handler.compactCalled);\n\t}\n\n\t@Test\n\tpublic void deadNode() throws Exception\n\t{\n\t\tInstrumentedSomeVerbHandler handler = new InstrumentedSomeVerbHandler();\n\t\thandler.alive = false;\n\t\tMessageIn<SomeMessage> msg = new MessageIn<>(...);\n\n\t\tassertFalse(handler.streamCalled);\n\t\tassertFalse(handler.compactCalled);\n\n\t\thandler.doVerb(msg);\n\n\t\tassertFalse(handler.streamCalled);\n\t\tassertTrue(handler.compactCalled);\n\t}\n}\n```\n\n## Refactoring Existing Code\n\nIf you're working on a section of the project that historically hasn't been well tested, it will likely be more difficult for you to write tests around\nwhatever you're doing, since the code may not have been written with testing in mind. You do need to add tests around the subject of you're \njira, and this will probably involve some refactoring, but you're also not expected to completely refactor a huge class to submit a bugfix. \n\nBasically, you need to be able to verify the behavior you intend to modify before and after your patch. The amount of testing debt you pay back should be \nroughly proportional to the scope of your change. If you're doing a small bugfix, you can get away with refactoring just enough to make the subject of your \nfix testable, even if you start to get into 'testing implementation details' territory'. The goal is incremental improvement, not making things perfect on \nthe first iteration. If you're doing something more ambitious though, you may have to do some extra work to sufficiently test your changes.\n\n## Refactoring Untested Code\n\nThere are several components that have very little, if any, direct test coverage. We really should try to improve the test coverage of these components.\nFor people interested in getting involved with the project, adding tests for these is a great way to get familiar with the codebase.\n\nFirst, get feedback on the subject and scope of your proposed refactor, especially larger ones. The smaller and more narrowly focused your proposed \nrefactor is, the easier it will be for you to get it reviewed and committed.\n\nStart with smaller pieces, refactor and test them, and work outwards, iteratively. Preferably in several jiras. Ideally, each patch should add some value\nto the project on it's own in terms of test coverage. Patches that are heavy on refactoring, and light on tests are not likely to get committed. People come and go\nfrom projects, and having a many small improvements is better for the project than several unfinished or ongoing refactors that don't add much test coverage.\n"
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "build-shaded-dtest-jar.sh",
          "type": "blob",
          "size": 2.0654296875,
          "content": "#!/bin/bash\n#\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\nset -xe\n\nARTIFACT_NAME=cassandra-dtest\nREPO_DIR=~/.m2/repository\nCASSANDRA_VERSION=$(cat build.xml | grep 'property name=\"base.version\"' | awk -F \"\\\"\" '{print $4}')\nDTEST_VERSION=$(cat relocate-dependencies.pom | grep \"dtest-local.version>\" | awk -F \"\\>|\\<\" '{print $3}')\nSHADED_DTEST_VERSION=$(cat relocate-dependencies.pom | grep -m 1 \"<version>\" | awk -F \"\\>|\\<\" '{print $3}')\n\necho $CASSANDRA_VERSION\necho $DTEST_VERSION\n\nant clean\nant dtest-jar\n\n# Install the version that will be shaded\nmvn install:install-file               \\\n   -Dfile=./build/dtest-${CASSANDRA_VERSION}.jar \\\n   -DgroupId=org.apache.cassandra      \\\n   -DartifactId=${ARTIFACT_NAME}-local \\\n   -Dversion=${DTEST_VERSION}          \\\n   -Dpackaging=jar                     \\\n   -DgeneratePom=true                  \\\n   -DlocalRepositoryPath=${REPO_DIR}\n\n# Create shaded artifact\nmvn -f relocate-dependencies.pom package -DskipTests -nsu\n\n# Deploy shaded artifact\nmvn install:install-file                 \\\n   -Dfile=./target/${ARTIFACT_NAME}-shaded-${SHADED_DTEST_VERSION}.jar \\\n   -DgroupId=org.apache.cassandra        \\\n   -DartifactId=${ARTIFACT_NAME}-shaded  \\\n   -Dversion=${DTEST_VERSION}            \\\n   -Dpackaging=jar                       \\\n   -DgeneratePom=true                    \\\n   -DlocalRepositoryPath=${REPO_DIR}\n\nset +xe\n"
        },
        {
          "name": "build.properties.default",
          "type": "blob",
          "size": 1.140625,
          "content": "#\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n#\n# Maven2 Repository Locations (you can override these in \"build.properties\" to point to a local proxy, e.g. Nexus)\n#\nartifact.remoteRepository.central:          https://repo1.maven.org/maven2\nartifact.remoteRepository.apache:           https://repo.maven.apache.org/maven2\nartifact.remoteRepository.apacheSnapshot:   https://repository.apache.org/content/repositories/snapshots\n"
        },
        {
          "name": "build.xml",
          "type": "blob",
          "size": 101.1435546875,
          "content": "<!--\n  Licensed to the Apache Software Foundation (ASF) under one or more\n  contributor license agreements.  See the NOTICE file distributed with\n  this work for additional information regarding copyright ownership.\n  The ASF licenses this file to You under the Apache License, Version 2.0\n  (the \"License\"); you may not use this file except in compliance with\n  the License.  You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n-->\n<project basedir=\".\" default=\"check\" name=\"apache-cassandra\"\n         xmlns:if=\"ant:if\"\n         xmlns:unless=\"ant:unless\">\n\n    <fail message=\"You need to use Ant of version at least 1.10 to continue.\">\n      <condition>\n        <not>\n          <antversion atleast=\"1.10\"/>\n        </not>\n      </condition>\n    </fail>\n\n    <property environment=\"env\"/>\n    <property file=\"build.properties\" />\n    <property file=\"build.properties.default\" />\n    <property file=\"${user.home}/.ant/build.properties\"/>\n    <property name=\"debuglevel\" value=\"source,lines,vars\"/>\n\n    <!-- default version and SCM information -->\n    <property name=\"base.version\" value=\"5.1\"/>\n    <property name=\"scm.connection\" value=\"scm:https://gitbox.apache.org/repos/asf/cassandra.git\"/>\n    <property name=\"scm.developerConnection\" value=\"scm:https://gitbox.apache.org/repos/asf/cassandra.git\"/>\n    <property name=\"scm.url\" value=\"https://gitbox.apache.org/repos/asf?p=cassandra.git\"/>\n\n    <!-- JDKs supported.\n        All releases are built with the default JDK.\n        Builds with non-default JDKs are considered experimental and for development and testing purposes.\n        When building, javac's source and target flags are set to the jdk used, so lower JDKs are not supported at runtime.\n        The use of both CASSANDRA_USE_JDK11 and use-jdk11 is deprecated.\n    -->\n    <property name=\"java.default\" value=\"11\" />\n    <property name=\"java.supported\" value=\"11,17\" />\n\n    <!-- directory details -->\n    <property name=\"basedir\" value=\".\"/>\n    <property name=\"build.helpers.dir\" value=\"${basedir}/.build\"/>\n    <property name=\"build.src\" value=\"${basedir}/src\"/>\n    <property name=\"build.src.java\" value=\"${basedir}/src/java\"/>\n    <property name=\"build.src.antlr\" value=\"${basedir}/src/antlr\"/>\n    <property name=\"build.src.resources\" value=\"${basedir}/src/resources\"/>\n    <property name=\"build.src.gen-java\" value=\"${basedir}/src/gen-java\"/>\n    <property name=\"build.lib\" value=\"${basedir}/lib\"/>\n    <property name=\"build.dir\" value=\"${basedir}/build\"/>\n    <property name=\"build.dir.lib\" value=\"${build.dir}/lib\"/>\n    <property name=\"build.test.dir\" value=\"${build.dir}/test\"/>\n    <property name=\"build.test.output.dir\" value=\"${build.test.dir}/output\"/>\n    <property name=\"build.test.report.dir\" value=\"${build.test.dir}/reports\" />\n    <property name=\"build.classes\" value=\"${build.dir}/classes\"/>\n    <property name=\"build.classes.main\" value=\"${build.classes}/main\" />\n    <property name=\"javadoc.dir\" value=\"${build.dir}/javadoc\"/>\n    <property name=\"interface.dir\" value=\"${basedir}/interface\"/>\n    <property name=\"test.dir\" value=\"${basedir}/test\"/>\n    <property name=\"test.resources\" value=\"${test.dir}/resources\"/>\n    <property name=\"test.lib\" value=\"${build.dir}/test/lib\"/>\n    <property name=\"test.classes\" value=\"${build.dir}/test/classes\"/>\n    <property name=\"test.conf\" value=\"${test.dir}/conf\"/>\n    <property name=\"test.data\" value=\"${test.dir}/data\"/>\n    <property name=\"test.name\" value=\"*Test\"/>\n    <property name=\"test.classlistfile\" value=\"testlist.txt\"/>\n    <property name=\"test.classlistprefix\" value=\"unit\"/>\n    <property name=\"benchmark.name\" value=\"\"/>\n    <property name=\"jmh.args\" value=\"\"/>\n    <property name=\"test.methods\" value=\"\"/>\n    <property name=\"test.anttasks.src\" value=\"${test.dir}/anttasks\"/>\n    <property name=\"test.unit.src\" value=\"${test.dir}/unit\"/>\n    <property name=\"test.long.src\" value=\"${test.dir}/long\"/>\n    <property name=\"test.burn.src\" value=\"${test.dir}/burn\"/>\n    <property name=\"test.memory.src\" value=\"${test.dir}/memory\"/>\n    <property name=\"test.microbench.src\" value=\"${test.dir}/microbench\"/>\n    <property name=\"test.distributed.src\" value=\"${test.dir}/distributed\"/>\n    <property name=\"test.compression.algo\" value=\"LZ4\"/>\n    <property name=\"test.simulator.src\" value=\"${test.dir}/simulator/main\"/>\n    <property name=\"test.simulator-asm.src\" value=\"${test.dir}/simulator/asm\"/>\n    <property name=\"test.simulator-bootstrap.src\" value=\"${test.dir}/simulator/bootstrap\"/>\n    <property name=\"test.simulator-test.src\" value=\"${test.dir}/simulator/test\"/>\n    <property name=\"test.harry.src\" value=\"${test.dir}/harry/main\"/>\n    <property name=\"test.driver.connection_timeout_ms\" value=\"10000\"/>\n    <property name=\"test.driver.read_timeout_ms\" value=\"24000\"/>\n    <property name=\"test.jvm.args\" value=\"\" />\n    <property name=\"testtag.extra\" value=\"\" />\n    <property name=\"dist.dir\" value=\"${build.dir}/dist\"/>\n\n    <!-- Use build/tmp for temp files if not otherwise specified. Because Ant properties are immutable, this has no effect if\n         the user specifies the tmp.dir property -->\n    <property name=\"tmp.dir\" value=\"${build.dir}/tmp\"/>\n\n    <property name=\"doc.dir\" value=\"${basedir}/doc\"/>\n\n    <condition property=\"version\" value=\"${base.version}\">\n      <isset property=\"release\"/>\n    </condition>\n    <property name=\"version\" value=\"${base.version}-SNAPSHOT\"/>\n    <property name=\"version.properties.dir\"\n              value=\"${build.src.resources}/org/apache/cassandra/config/\" />\n    <property name=\"final.name\" value=\"${ant.project.name}-${version}\"/>\n\n    <property name=\"local.repository\" value=\"${user.home}/.m2/repository\" />\n\n    <!-- details of how and which Maven repository we publish to -->\n    <property name=\"maven.version\" value=\"3.0.3\" />\n    <condition property=\"maven-repository-url\" value=\"https://repository.apache.org/service/local/staging/deploy/maven2\">\n      <isset property=\"release\"/>\n    </condition>\n    <condition property=\"maven-repository-id\" value=\"apache.releases.https\">\n      <isset property=\"release\"/>\n    </condition>\n    <property name=\"maven-repository-url\" value=\"https://repository.apache.org/content/repositories/snapshots\"/>\n    <property name=\"maven-repository-id\" value=\"apache.snapshots.https\"/>\n\n    <property name=\"test.timeout\" value=\"480000\" />\n    <property name=\"test.memory.timeout\" value=\"480000\" />\n    <property name=\"test.long.timeout\" value=\"600000\" />\n    <property name=\"test.burn.timeout\" value=\"60000000\" />\n    <property name=\"test.distributed.timeout\" value=\"900000\" />\n    <property name=\"test.simulation.timeout\" value=\"1800000\" />\n\n    <!-- default for cql tests. Can be overridden by -Dcassandra.test.use_prepared=false -->\n    <property name=\"cassandra.test.use_prepared\" value=\"true\" />\n\n    <!-- The number of active processors seen by JVM -->\n    <property name=\"cassandra.test.processorCount\" value=\"2\"/>\n\n    <!-- skip flushing schema tables during tests -->\n    <property name=\"cassandra.test.flush_local_schema_changes\" value=\"false\" />\n\n    <!-- fast shutdown of messaging service -->\n    <property name=\"cassandra.test.messagingService.nonGracefulShutdown\" value=\"true\"/>\n\n    <!-- https://www.eclemma.org/jacoco/ -->\n    <property name=\"jacoco.version\" value=\"0.8.8\"/>\n    <property name=\"jacoco.export.dir\" value=\"${build.dir}/jacoco/\" />\n    <property name=\"jacoco.partials.dir\" value=\"${jacoco.export.dir}/partials\" />\n    <property name=\"jacoco.partialexecfile\" value=\"${jacoco.partials.dir}/partial.exec\" />\n    <property name=\"jacoco.finalexecfile\" value=\"${jacoco.export.dir}/jacoco.exec\" />\n\n    <condition property=\"isMac\" value=\"true\">\n        <os family=\"mac\"/>\n    </condition>\n    <condition property=\"isLinux\" value=\"true\">\n        <and>\n            <os family=\"unix\"/>\n            <not>\n                <os family=\"mac\"/>\n            </not>\n        </and>\n    </condition>\n\n    <property name=\"jflex.version\" value=\"1.8.2\"/>\n    <property name=\"jamm.version\" value=\"0.4.0\"/>\n    <property name=\"ecj.version\" value=\"3.33.0\"/>\n    <!-- When updating ASM, please, do consider whether you might need to update also FBUtilities#ASM_BYTECODE_VERSION\n      and the simulator InterceptClasses#BYTECODE_VERSION, in particular if we are looking to provide Cassandra support\n      for newer JDKs (CASSANDRA-17873). -->\n    <property name=\"asm.version\" value=\"9.4\"/>\n    <property name=\"allocation-instrumenter.version\" value=\"3.1.0\"/>\n\n    <condition property=\"is.source.artifact\">\n      <available file=\"${build.src.java}\" type=\"dir\" />\n    </condition>\n\n    <condition property=\"cassandra.use_nix_recursive_delete\" value=\"false\" else=\"true\">\n        <os family=\"windows\" />\n    </condition>\n\n    <condition property=\"withoutMethods\">\n        <and>\n            <equals arg1=\"${test.methods}\" arg2=\"\"/>\n            <not>\n                <contains string=\"${test.name}\" substring=\"*\"/>\n            </not>\n        </and>\n    </condition>\n    <condition property=\"withMethods\">\n        <and>\n            <not>\n                <equals arg1=\"${test.methods}\" arg2=\"\"/>\n            </not>\n            <not>\n                <contains string=\"${test.name}\" substring=\"*\"/>\n            </not>\n        </and>\n    </condition>\n\n    <!-- Check if all tests are being run or just one (check testclasslist target). If it's all tests don't spam the\n         console with test output.\n         If it's an individual test print the output from the test under the assumption someone is debugging the test\n         and wants to know what is going on without having to context switch to the log file that is generated.\n         Debug level output still needs to be retrieved from the log file.  -->\n    <macrodef name=\"set-keepbrief-property\">\n        <attribute name=\"test-name\" />\n        <sequential>\n            <condition property=\"cassandra.keepBriefBrief\" value=\"false\" else=\"true\">\n                <not>\n                    <equals arg1=\"@{test-name}\" arg2=\"*Test\"/>\n                </not>\n            </condition>\n        </sequential>\n    </macrodef>\n    <set-keepbrief-property test-name=\"${test.name}\" />\n\n    <fail message=\"Unsupported JDK version used: ${ant.java.version}\">\n        <condition><not><contains string=\"${java.supported}\" substring=\"${ant.java.version}\"/></not></condition>\n    </fail>\n    <condition property=\"is.java.default\"><equals arg1=\"${ant.java.version}\" arg2=\"${java.default}\"/></condition>\n    <echo unless:true=\"${is.java.default}\" message=\"Non default JDK version used: ${ant.java.version}\"/>\n\n    <condition property=\"arch_x86\">\n      <equals arg1=\"${os.arch}\" arg2=\"x86\" />\n    </condition>\n    <!-- On non-X86 JDK 8 (such as M1 Mac) the smallest allowed Xss is 384k; so need a larger value\n    when on these platforms. -->\n    <condition property=\"jvm_xss\" value=\"-Xss256k\" else=\"-Xss384k\">\n      <isset property=\"arch_x86\" />\n    </condition>\n\n    <resources id=\"_jvm11_arg_items\">\n        <string>-Djdk.attach.allowAttachSelf=true</string>\n        <string>-XX:+UseConcMarkSweepGC</string>\n        <string>-XX:+CMSParallelRemarkEnabled</string>\n        <string>-XX:SurvivorRatio=8</string>\n        <string>-XX:MaxTenuringThreshold=1</string>\n        <string>-XX:CMSInitiatingOccupancyFraction=75</string>\n        <string>-XX:+UseCMSInitiatingOccupancyOnly</string>\n        <string>-XX:CMSWaitDuration=10000</string>\n        <string>-XX:+CMSParallelInitialMarkEnabled</string>\n        <string>-XX:+CMSEdenChunksRecordAlways</string>\n\n\n        <string>--add-exports java.base/jdk.internal.misc=ALL-UNNAMED</string>\n        <string>--add-exports java.base/jdk.internal.ref=ALL-UNNAMED</string>\n        <string>--add-exports java.base/sun.nio.ch=ALL-UNNAMED</string>\n        <string>--add-exports java.management.rmi/com.sun.jmx.remote.internal.rmi=ALL-UNNAMED</string>\n        <string>--add-exports java.rmi/sun.rmi.registry=ALL-UNNAMED</string>\n        <string>--add-exports java.rmi/sun.rmi.server=ALL-UNNAMED</string>\n        <string>--add-exports java.rmi/sun.rmi.transport.tcp=ALL-UNNAMED</string>\n        <string>--add-exports java.sql/java.sql=ALL-UNNAMED</string>\n\n        <string>--add-opens java.base/java.lang.module=ALL-UNNAMED</string>\n        <string>--add-opens java.base/java.net=ALL-UNNAMED</string>\n        <string>--add-opens java.base/jdk.internal.loader=ALL-UNNAMED</string>\n        <string>--add-opens java.base/jdk.internal.ref=ALL-UNNAMED</string>\n        <string>--add-opens java.base/jdk.internal.reflect=ALL-UNNAMED</string>\n        <string>--add-opens java.base/jdk.internal.math=ALL-UNNAMED</string>\n        <string>--add-opens java.base/jdk.internal.module=ALL-UNNAMED</string>\n        <string>--add-opens java.base/jdk.internal.util.jar=ALL-UNNAMED</string>\n        <string>--add-opens jdk.management/com.sun.management.internal=ALL-UNNAMED</string>\n    </resources>\n    <pathconvert property=\"_jvm11_args_concat\" refid=\"_jvm11_arg_items\" pathsep=\" \"/>\n    <condition property=\"java-jvmargs\" value=\"${_jvm11_args_concat}\">\n        <equals arg1=\"${ant.java.version}\" arg2=\"11\"/>\n    </condition>\n\n    <resources id=\"_jvm17_arg_items\">\n        <string>-Djdk.attach.allowAttachSelf=true</string>\n        <string>-XX:+UseG1GC</string>\n        <string>-XX:+ParallelRefProcEnabled</string>\n        <string>-XX:MaxTenuringThreshold=1</string>\n        <string>-XX:G1HeapRegionSize=16m</string>\n\n        <string>--add-exports java.base/jdk.internal.misc=ALL-UNNAMED</string>\n        <string>--add-exports java.management.rmi/com.sun.jmx.remote.internal.rmi=ALL-UNNAMED</string>\n        <string>--add-exports java.rmi/sun.rmi.registry=ALL-UNNAMED</string>\n        <string>--add-exports java.rmi/sun.rmi.server=ALL-UNNAMED</string>\n        <string>--add-exports java.rmi/sun.rmi.transport.tcp=ALL-UNNAMED</string>\n        <string>--add-exports java.sql/java.sql=ALL-UNNAMED</string>\n        <string>--add-exports java.base/java.lang.ref=ALL-UNNAMED</string>\n        <string>--add-exports jdk.unsupported/sun.misc=ALL-UNNAMED</string>\n        <string>--add-exports jdk.compiler/com.sun.tools.javac.file=ALL-UNNAMED</string>\n        <string>--add-exports jdk.attach/sun.tools.attach=ALL-UNNAMED</string>\n\n        <string>--add-opens java.base/java.lang.module=ALL-UNNAMED</string>\n        <string>--add-opens java.base/jdk.internal.loader=ALL-UNNAMED</string>\n        <string>--add-opens java.base/jdk.internal.ref=ALL-UNNAMED</string>\n        <string>--add-opens java.base/jdk.internal.reflect=ALL-UNNAMED</string>\n        <string>--add-opens java.base/jdk.internal.math=ALL-UNNAMED</string>\n        <string>--add-opens java.base/jdk.internal.module=ALL-UNNAMED</string>\n        <string>--add-opens java.base/jdk.internal.util.jar=ALL-UNNAMED</string>\n        <string>--add-opens jdk.management/com.sun.management.internal=ALL-UNNAMED</string>\n        <string>--add-opens java.base/sun.nio.ch=ALL-UNNAMED</string>\n        <string>--add-opens java.base/java.io=ALL-UNNAMED</string>\n        <string>--add-opens java.base/java.lang.reflect=ALL-UNNAMED</string>\n        <string>--add-opens jdk.compiler/com.sun.tools.javac=ALL-UNNAMED</string>\n        <string>--add-opens java.base/java.lang=ALL-UNNAMED</string>\n        <string>--add-opens java.base/java.util=ALL-UNNAMED</string>\n        <string>--add-opens java.base/java.nio=ALL-UNNAMED</string>\n\n        <string>--add-opens java.rmi/sun.rmi.transport.tcp=ALL-UNNAMED</string>\n    </resources>\n    <pathconvert property=\"_jvm17_args_concat\" refid=\"_jvm17_arg_items\" pathsep=\" \"/>\n    <condition property=\"java-jvmargs\" value=\"${_jvm17_args_concat}\">\n        <equals arg1=\"${ant.java.version}\" arg2=\"17\"/>\n    </condition>\n\n    <!--\n      JVM arguments for tests.\n\n      There is a race condition bug in java 11 (see CASSANDRA-15981) which causes a crash of the\n      JVM; this race is between CMS and class unloading.  In java 8 we can cap the metaspace to\n      make tests stable on low resource environments, but in java 11 we need to make it unlimited\n      (don't define MaxMetaspaceSize) and disable class unloading in CMS outside of a\n      stop-the-world pause.\n\n      In java 11 we also need to set a system property to enable netty to use Unsafe direct byte\n      buffer construction (see CASSANDRA-16493)\n    -->\n    <resources id=\"_jvm11_test_arg_items\">\n        <string>-XX:-CMSClassUnloadingEnabled</string>\n        <string>-Dio.netty.tryReflectionSetAccessible=true</string>\n    </resources>\n    <pathconvert property=\"_jvm11_test_arg_items_concat\" refid=\"_jvm11_test_arg_items\" pathsep=\" \"/>\n    <resources id=\"_jvm17_test_arg_items\">\n        <string>-Dio.netty.tryReflectionSetAccessible=true</string>\n    </resources>\n    <pathconvert property=\"_jvm17_test_arg_items_concat\" refid=\"_jvm17_test_arg_items\" pathsep=\" \"/>\n    <condition property=\"_std-test-jvmargs\" value=\"${_jvm11_test_arg_items_concat}\">\n            <equals arg1=\"${ant.java.version}\" arg2=\"11\"/>\n    </condition>\n    <condition property=\"_std-test-jvmargs\" value=\"${_jvm17_test_arg_items_concat}\">\n        <equals arg1=\"${ant.java.version}\" arg2=\"17\"/>\n    </condition>\n\n    <!-- needed to compile org.apache.cassandra.utils.JMXServerUtils -->\n    <!-- needed to compile org.apache.cassandra.distributed.impl.Instance-->\n    <!-- needed to compile org.apache.cassandra.utils.memory.BufferPool -->\n    <property name=\"jdk11plus-javac-exports\" value=\"--add-exports java.rmi/sun.rmi.registry=ALL-UNNAMED --add-exports java.rmi/sun.rmi.transport.tcp=ALL-UNNAMED --add-exports java.base/jdk.internal.ref=ALL-UNNAMED --add-exports java.base/sun.nio.ch=ALL-UNNAMED --add-exports java.management/com.sun.jmx.remote.security=ALL-UNNAMED\" />\n\n    <!--\n         Add all the dependencies.\n    -->\n    <path id=\"cassandra.classpath\">\n        <pathelement location=\"${build.classes.main}\" />\n        <fileset dir=\"${build.dir.lib}\">\n            <include name=\"**/*.jar\" />\n        </fileset>\n    </path>\n    <path id=\"cassandra.classpath.test\">\n        <file file=\"${build.dir}/${final.name}.jar\"/> <!-- we need the jar for tests and benchmarks (multi-version jar) -->\n        <fileset dir=\"${build.dir.lib}\">\n            <include name=\"**/*.jar\" />\n        </fileset>\n        <fileset dir=\"${test.lib}/jars\">\n            <include name=\"**/*.jar\" />\n            <exclude name=\"**/ant-*.jar\"/>\n        </fileset>\n    </path>\n\n  <macrodef name=\"create-javadoc\">\n    <attribute name=\"destdir\"/>\n    <element name=\"filesets\"/>\n    <sequential>\n      <javadoc destdir=\"@{destdir}\" author=\"true\" version=\"true\" use=\"true\"\n        windowtitle=\"${ant.project.name} API\" classpathref=\"cassandra.classpath\"\n        bottom=\"Copyright &amp;copy; 2009- The Apache Software Foundation\"\n        useexternalfile=\"yes\" encoding=\"UTF-8\" failonerror=\"false\"\n        maxmemory=\"256m\" additionalparam=\"${jdk11plus-javac-exports}\">\n        <filesets/>\n      </javadoc>\n      <fail message=\"javadoc failed\">\n        <condition>\n            <not>\n                <available file=\"@{destdir}/index-all.html\" />\n            </not>\n        </condition>\n      </fail>\n    </sequential>\n  </macrodef>\n\n    <!--\n        Setup the output directories.\n    -->\n    <target name=\"init\" >\n        <fail unless=\"is.source.artifact\"\n            message=\"Not a source artifact, stopping here.\" />\n        <mkdir dir=\"${build.classes.main}\"/>\n        <mkdir dir=\"${test.lib}\"/>\n        <mkdir dir=\"${test.classes}\"/>\n        <mkdir dir=\"${stress.test.classes}\"/>\n        <mkdir dir=\"${fqltool.test.classes}\"/>\n        <mkdir dir=\"${build.src.gen-java}\"/>\n        <mkdir dir=\"${build.dir.lib}\"/>\n        <mkdir dir=\"${jacoco.export.dir}\"/>\n        <mkdir dir=\"${jacoco.partials.dir}\"/>\n\n        <!-- Set up jdk specific properties -->\n        <javac includes=\"**/JdkProperties.java,**/SetSystemProperty.java\" srcdir=\"test/anttasks\" destdir=\"${test.classes}\" includeantruntime=\"true\" source=\"${java.default}\" target=\"${java.default}\">\n          <compilerarg value=\"-Xlint:-options\"/>\n        </javac>\n        <taskdef name=\"JdkProperties\" classname=\"org.apache.cassandra.anttasks.JdkProperties\" classpath=\"${test.classes}\"/>\n        <taskdef name=\"SetSystemProperty\" classname=\"org.apache.cassandra.anttasks.SetSystemProperty\" classpath=\"${test.classes}\"/>\n\n        <JdkProperties/>\n\n        <!-- https://issues.apache.org/jira/browse/CASSANDRA-16391?focusedCommentId=17310803&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#comment-17310803 -->\n        <SetSystemProperty name=\"jmc5.path\" value=\"/tmp\"/>\n        <SetSystemProperty name=\"jmc6.path\" value=\"/tmp\"/>\n        <SetSystemProperty name=\"visualvm.path\" value=\"/tmp\"/>\n    </target>\n\n    <target name=\"clean\" description=\"Remove all locally created artifacts\">\n        <delete dir=\"${build.test.dir}\" />\n        <delete dir=\"${build.dir}/tmp\" />\n        <delete dir=\"${build.classes}\" />\n        <delete dir=\"${build.src.gen-java}\" />\n        <delete dir=\"${version.properties.dir}\" />\n        <delete dir=\"${jacoco.export.dir}\" />\n        <delete dir=\"${jacoco.partials.dir}\"/>\n    </target>\n    <target depends=\"clean\" name=\"cleanall\"/>\n\n    <target name=\"realclean\" depends=\"clean\" description=\"Remove the entire build directory and all downloaded artifacts\">\n        <delete>\n          <fileset dir=\"${build.lib}\" excludes=\"cassandra-driver-internal-only-*,puresasl-internal-only-*,harry-*\"/>\n        </delete>\n        <delete dir=\"${build.dir}\" />\n        <delete dir=\"${doc.dir}/build\" />\n        <delete dir=\"${doc.dir}/source/tools/nodetool\" />\n    </target>\n\n    <!--\n       This generates the CQL grammar files from Cql.g\n    -->\n    <target name=\"check-gen-cql3-grammar\">\n        <uptodate property=\"cql3current\"\n                targetfile=\"${build.src.gen-java}/org/apache/cassandra/cql3/Cql.tokens\">\n            <srcfiles dir=\"${build.src.antlr}\">\n                <include name=\"*.g\"/>\n            </srcfiles>\n        </uptodate>\n    </target>\n\n    <target name=\"gen-cql3-grammar\" depends=\"check-gen-cql3-grammar\" unless=\"cql3current\">\n      <echo>Building Grammar ${build.src.antlr}/Cql.g  ...</echo>\n      <java classname=\"org.antlr.Tool\"\n            classpathref=\"cql3-grammar.classpath\"\n            failonerror=\"true\">\n         <arg value=\"-Xconversiontimeout\" />\n         <arg value=\"10000\" />\n         <arg value=\"${build.src.antlr}/Cql.g\" />\n         <arg value=\"-fo\" />\n         <arg value=\"${build.src.gen-java}/org/apache/cassandra/cql3/\" />\n         <arg value=\"-Xmaxinlinedfastates\"/>\n         <arg value=\"10\"/> <!-- default is 60 -->\n      </java>\n    </target>\n\n    <target name=\"generate-cql-html\" depends=\"resolver-init\" description=\"Generate HTML from textile source\">\n        <taskdef classpathref=\"wikitext.classpath\" resource=\"wikitexttasks.properties\" />\n        <wikitext-to-html markupLanguage=\"Textile\">\n            <fileset dir=\"${basedir}\">\n                <include name=\"doc/cql3/*.textile\"/>\n            </fileset>\n        </wikitext-to-html>\n    </target>\n\n    <target name=\"gen-asciidoc\" description=\"Generate dynamic asciidoc pages\" depends=\"jar\" unless=\"ant.gen-doc.skip\">\n        <exec executable=\"make\" osfamily=\"unix\" dir=\"${doc.dir}\">\n            <arg value=\"gen-asciidoc\"/>\n        </exec>\n    </target>\n\n    <target name=\"gen-doc\" description=\"Generate documentation\" depends=\"gen-asciidoc,generate-cql-html\" unless=\"ant.gen-doc.skip\">\n        <exec executable=\"make\" osfamily=\"unix\" dir=\"${doc.dir}\">\n            <arg value=\"html\"/>\n        </exec>\n    </target>\n\n    <!--\n        Generates Java sources for tokenization support from jflex\n        grammar files\n    -->\n    <target name=\"generate-jflex-java\" description=\"Generate Java from jflex grammar\">\n        <taskdef classname=\"jflex.anttask.JFlexTask\" classpathref=\"jflex.classpath\" name=\"jflex\" />\n        <jflex file=\"${build.src.java}/org/apache/cassandra/index/sasi/analyzer/StandardTokenizerImpl.jflex\" destdir=\"${build.src.gen-java}/\" />\n    </target>\n\n    <!-- create properties file with C version -->\n    <target name=\"_createVersionPropFile\" depends=\"_get-git-sha,set-cqlsh-version\">\n      <taskdef name=\"propertyfile\" classname=\"org.apache.tools.ant.taskdefs.optional.PropertyFile\"/>\n      <mkdir dir=\"${version.properties.dir}\"/>\n      <propertyfile file=\"${version.properties.dir}/version.properties\">\n        <entry key=\"CassandraVersion\" value=\"${version}\"/>\n        <entry key=\"GitSHA\" value=\"${git.sha}\"/>\n      </propertyfile>\n    </target>\n\n    <target name=\"test-run\" depends=\"jar\"\n            description=\"Run in test mode.  Not for production use!\">\n      <java classname=\"org.apache.cassandra.service.CassandraDaemon\" fork=\"true\">\n        <classpath>\n          <path refid=\"cassandra.classpath.test\"/>\n          <pathelement location=\"${test.conf}\"/>\n        </classpath>\n        <jvmarg value=\"-Dstorage-config=${test.conf}\"/>\n        <jvmarg value=\"-Dcassandra.reads.thresholds.coordinator.defensive_checks_enabled=true\" /> <!-- enable defensive checks -->\n        <jvmarg value=\"-javaagent:${build.dir.lib}/jars/jamm-${jamm.version}.jar\" />\n        <jvmarg value=\"-ea\"/>\n        <jvmarg line=\"${java-jvmargs}\"/>\n      </java>\n    </target>\n\n    <!--\n        The build target builds all the .class files\n    -->\n    <target name=\"build\" depends=\"resolver-retrieve-build,build-project\" description=\"Compile Cassandra classes\"/>\n    <target name=\"codecoverage\" depends=\"jacoco-run,jacoco-report\" description=\"Create code coverage report\"/>\n\n    <target name=\"_build_java\">\n        <!-- Note: we cannot use javac's 'release' option, as that does not allow accessing sun.misc.Unsafe nor\n        Nashorn's ClassFilter class as any javac modules option is invalid for release 8. -->\n        <echo message=\"Compiling for Java ${ant.java.version}...\"/>\n        <javac\n               debug=\"true\" debuglevel=\"${debuglevel}\" encoding=\"utf-8\"\n               destdir=\"${build.classes.main}\" includeantruntime=\"false\" source=\"${ant.java.version}\" target=\"${ant.java.version}\">\n            <src path=\"${build.src.java}\"/>\n            <src path=\"${build.src.gen-java}\"/>\n            <compilerarg value=\"-XDignore.symbol.file\"/>\n            <compilerarg line=\"${jdk11plus-javac-exports}\"/>\n            <classpath>\n                <path refid=\"cassandra.classpath\"/>\n            </classpath>\n        </javac>\n    </target>\n\n    <target depends=\"init,gen-cql3-grammar,generate-cql-html,generate-jflex-java\"\n            name=\"build-project\">\n        <echo message=\"${ant.project.name}: ${ant.file}\"/>\n        <!-- Order matters! -->\n        <antcall target=\"_build_java\"/>\n        <antcall target=\"_createVersionPropFile\"/>\n        <copy todir=\"${build.classes.main}\">\n            <fileset dir=\"${build.src.resources}\" />\n        </copy>\n        <copy todir=\"${basedir}/conf\" file=\"${build.classes.main}/META-INF/hotspot_compiler\"/>\n    </target>\n\n    <target name=\"check\" depends=\"_main-jar,build-test\" description=\"Verifies the source code and dependencies. This task is intended to run on pre-commit and locally. It should verify mostly modified files compared to the upstream base branch.\" unless=\"check.skip\">\n        <antcall target=\"rat-check\" inheritrefs=\"true\"/>\n        <antcall target=\"checkstyle\" inheritrefs=\"true\"/>\n        <antcall target=\"checkstyle-test\" inheritrefs=\"true\"/>\n    </target>\n\n    <!-- Stress build file -->\n    <property name=\"stress.build.src\" value=\"${basedir}/tools/stress/src\" />\n    <property name=\"stress.build.resources\" value=\"${basedir}/tools/stress/resources\" />\n    <property name=\"stress.test.src\" value=\"${basedir}/tools/stress/test/unit\" />\n    <property name=\"stress.build.classes\" value=\"${build.classes}/stress\" />\n    <property name=\"stress.test.classes\" value=\"${build.dir}/test/stress-classes\" />\n\t<property name=\"stress.manifest\" value=\"${stress.build.classes}/MANIFEST.MF\" />\n\n    <target name=\"stress-build-test\" depends=\"stress-build\" description=\"Compile stress tests\">\n        <javac debug=\"true\" debuglevel=\"${debuglevel}\" destdir=\"${stress.test.classes}\"\n               source=\"${ant.java.version}\" target=\"${ant.java.version}\"\n               includeantruntime=\"false\" encoding=\"utf-8\">\n            <classpath>\n                <path refid=\"cassandra.classpath.test\"/>\n                <pathelement location=\"${stress.build.classes}\" />\n            </classpath>\n            <src path=\"${stress.test.src}\"/>\n        </javac>\n    </target>\n\n    <target name=\"stress-build\" depends=\"build\" description=\"build stress tool\">\n        <antcall target=\"_stress_build\"/>\n    </target>\n\n    <target name=\"_stress_build\">\n    \t<mkdir dir=\"${stress.build.classes}\" />\n        <javac compiler=\"modern\" debug=\"true\" debuglevel=\"${debuglevel}\"\n               source=\"${ant.java.version}\" target=\"${ant.java.version}\"\n               encoding=\"utf-8\" destdir=\"${stress.build.classes}\" includeantruntime=\"true\">\n            <src path=\"${stress.build.src}\"/>\n            <classpath>\n                <path refid=\"cassandra.classpath\" />\n            </classpath>\n        </javac>\n        <copy todir=\"${stress.build.classes}\">\n            <fileset dir=\"${stress.build.resources}\" />\n        </copy>\n    </target>\n\n    <target name=\"stress-test\" depends=\"maybe-build-test\" description=\"Runs stress tests\">\n        <testmacro inputdir=\"${stress.test.src}\"\n                       timeout=\"${test.timeout}\">\n        </testmacro>\n    </target>\n\n    <!-- Use this with an FQDN for test class, and an optional csv list of methods like this:\n      ant stress-test-some -Dtest.name=org.apache.cassandra.stress.generate.DistributionGaussianTest\n      ant stress-test-some -Dtest.name=org.apache.cassandra.stress.generate.DistributionGaussianTest -Dtest.methods=simpleGaussian\n    -->\n    <target name=\"stress-test-some\" depends=\"maybe-build-test\" description=\"Runs stress tests\">\n        <testmacro inputdir=\"${stress.test.src}\" timeout=\"${test.timeout}\">\n          <test unless:blank=\"${test.methods}\" name=\"${test.name}\" methods=\"${test.methods}\" todir=\"${build.test.output.dir}/\" outfile=\"TEST-${test.name}-${test.methods}\"/>\n          <test if:blank=\"${test.methods}\" name=\"${test.name}\" todir=\"${build.test.output.dir}/\" outfile=\"TEST-${test.name}\"/>\n        </testmacro>\n    </target>\n\n    <!--\n        fqltool build file\n        -->\n    <property name=\"fqltool.build.src\" value=\"${basedir}/tools/fqltool/src\" />\n    <property name=\"fqltool.test.src\" value=\"${basedir}/tools/fqltool/test/unit\" />\n    <property name=\"fqltool.build.classes\" value=\"${build.classes}/fqltool\" />\n    <property name=\"fqltool.test.classes\" value=\"${build.dir}/test/fqltool-classes\" />\n    <property name=\"fqltool.manifest\" value=\"${fqltool.build.classes}/MANIFEST.MF\" />\n\n    <target name=\"fqltool-build-test\" depends=\"fqltool-build\" description=\"Compile fqltool tests\">\n        <javac debug=\"true\" debuglevel=\"${debuglevel}\" destdir=\"${fqltool.test.classes}\"\n               source=\"${ant.java.version}\" target=\"${ant.java.version}\"\n               includeantruntime=\"false\" encoding=\"utf-8\">\n            <classpath>\n                <path refid=\"cassandra.classpath.test\"/>\n                <pathelement location=\"${fqltool.build.classes}\" />\n            </classpath>\n            <src path=\"${fqltool.test.src}\"/>\n        </javac>\n    </target>\n\n    <target name=\"fqltool-build\" depends=\"build\" description=\"build fqltool\">\n        <antcall target=\"_fqltool_build\"/>\n    </target>\n\n    <target name=\"_fqltool_build\">\n    \t<mkdir dir=\"${fqltool.build.classes}\" />\n        <javac compiler=\"modern\" debug=\"true\" debuglevel=\"${debuglevel}\"\n               source=\"${ant.java.version}\" target=\"${ant.java.version}\"\n               encoding=\"utf-8\" destdir=\"${fqltool.build.classes}\" includeantruntime=\"true\">\n            <src path=\"${fqltool.build.src}\" />\n            <classpath>\n                <path refid=\"cassandra.classpath\" />\n            </classpath>\n        </javac>\n    </target>\n\n    <target name=\"fqltool-test\" depends=\"fqltool-build-test, maybe-build-test\" description=\"Runs fqltool tests\">\n        <testmacro inputdir=\"${fqltool.test.src}\"\n                       timeout=\"${test.timeout}\">\n        </testmacro>\n    </target>\n\n    <!--\n        simulator asm build file\n        -->\n    <property name=\"simulator-asm.build.src\" value=\"${test.simulator-asm.src}\" />\n    <property name=\"simulator-asm.build.classes\" value=\"${build.classes}/simulator-asm\" />\n    <property name=\"simulator-asm.manifest\" value=\"${simulator-asm.build.classes}/MANIFEST.MF\" />\n\n    <property name=\"simulator-bootstrap.build.src\" value=\"${test.simulator-bootstrap.src}\" />\n    <property name=\"simulator-bootstrap.build.classes\" value=\"${build.classes}/simulator-bootstrap\" />\n    <property name=\"simulator-bootstrap.manifest\" value=\"${simulator-bootstrap.build.classes}/MANIFEST.MF\" />\n\n    <target name=\"simulator-asm-build\" depends=\"build\" description=\"build simulator-asm\">\n        <antcall target=\"_simulator-asm_build\"/>\n    </target>\n\n    <target name=\"simulator-bootstrap-build\" depends=\"build\" description=\"build simulator-bootstrap\">\n        <antcall target=\"_simulator-bootstrap_build\"/>\n    </target>\n\n    <target name=\"_simulator-asm_build\">\n    \t<mkdir dir=\"${simulator-asm.build.classes}\" />\n        <javac compiler=\"modern\" debug=\"true\" debuglevel=\"${debuglevel}\"\n               source=\"${ant.java.version}\" target=\"${ant.java.version}\"\n               encoding=\"utf-8\" destdir=\"${simulator-asm.build.classes}\" includeantruntime=\"true\">\n            <src path=\"${simulator-asm.build.src}\" />\n            <classpath>\n                <fileset dir=\"${test.lib}\">\n                     <include name=\"**/asm-*${asm.version}.jar\" />\n                </fileset>\n                <fileset dir=\"${build.lib}\">\n                     <include name=\"**/asm-*${asm.version}.jar\" />\n                </fileset>\n            </classpath>\n        </javac>\n    </target>\n\n    <target name=\"_simulator-bootstrap_build\">\n    \t<mkdir dir=\"${simulator-bootstrap.build.classes}\" />\n        <javac compiler=\"modern\" debug=\"true\" debuglevel=\"${debuglevel}\"\n               source=\"${ant.java.version}\" target=\"${ant.java.version}\"\n               encoding=\"utf-8\" destdir=\"${simulator-bootstrap.build.classes}\" includeantruntime=\"true\">\n            <src path=\"${simulator-bootstrap.build.src}\" />\n            <classpath>\n                <fileset dir=\"${test.lib}\">\n                     <include name=\"**/asm-*${asm.version}.jar\" />\n                </fileset>\n                <fileset dir=\"${build.lib}\">\n                     <include name=\"**/asm-*${asm.version}.jar\" />\n                </fileset>\n            </classpath>\n            <compilerarg value=\"-XDignore.symbol.file\"/>\n        </javac>\n    </target>\n\n    <target name=\"write-poms\" unless=\"without.maven\">\n        <filterset id=\"pom-template\">\n            <filter token=\"version\" value=\"${version}\"/>\n            <filter token=\"final.name\" value=\"${final.name}\"/>\n            <filter token=\"jamm.version\" value=\"${jamm.version}\"/>\n            <filter token=\"allocation-instrumenter.version\" value=\"${allocation-instrumenter.version}\"/>\n            <filter token=\"ecj.version\" value=\"${ecj.version}\"/>\n            <filter token=\"asm.version\" value=\"${asm.version}\"/>\n            <filter token=\"jacoco.version\" value=\"${jacoco.version}\"/>\n            <filter token=\"jflex.version\" value=\"${jflex.version}\"/>\n        </filterset>\n\n        <copy file=\".build/cassandra-deps-template.xml\" tofile=\"${build.dir}/${final.name}.pom\">\n            <filterset refid=\"pom-template\"/>\n        </copy>\n        <copy file=\".build/parent-pom-template.xml\" tofile=\"${build.dir}/${final.name}-parent.pom\">\n            <filterset refid=\"pom-template\"/>\n        </copy>\n        <copy file=\".build/cassandra-build-deps-template.xml\" tofile=\"${build.dir}/tmp-${final.name}-deps.pom\">\n            <filterset refid=\"pom-template\"/>\n        </copy>\n    </target>\n\n    <!--\n        The jar target makes cassandra.jar output.\n    -->\n    <target name=\"_main-jar\"\n            depends=\"build\"\n            description=\"Assemble Cassandra JAR files\">\n      <mkdir dir=\"${build.classes.main}/META-INF\" />\n      <copy file=\"LICENSE.txt\"\n            tofile=\"${build.classes.main}/META-INF/LICENSE.txt\"/>\n      <copy file=\"NOTICE.txt\"\n            tofile=\"${build.classes.main}/META-INF/NOTICE.txt\"/>\n\n      <!-- Main Jar -->\n      <jar jarfile=\"${build.dir}/${final.name}.jar\">\n        <fileset dir=\"${build.classes.main}\">\n        </fileset>\n        <manifest>\n        <!-- <section name=\"org/apache/cassandra/infrastructure\"> -->\n          <attribute name=\"Multi-Release\" value=\"true\"/>\n          <attribute name=\"Implementation-Title\" value=\"Cassandra\"/>\n          <attribute name=\"Implementation-Version\" value=\"${version}\"/>\n          <attribute name=\"Implementation-Vendor\" value=\"Apache\"/>\n          <attribute name=\"Implementation-Git-SHA\" value=\"${git.sha}\"/>\n        <!-- </section> -->\n        </manifest>\n      </jar>\n    </target>\n\n    <target name=\"stress-jar\"\n            depends=\"stress-build\"\n            description=\"Assemble Cassandra JAR files\">\n        <!-- Stress jar -->\n        <manifest file=\"${stress.manifest}\">\n            <attribute name=\"Built-By\" value=\"Pavel Yaskevich\"/>\n            <attribute name=\"Main-Class\" value=\"org.apache.cassandra.stress.Stress\"/>\n        </manifest>\n        <mkdir dir=\"${stress.build.classes}/META-INF\" />\n        <mkdir dir=\"${build.dir}/tools/lib/\" />\n        <jar destfile=\"${build.dir}/tools/lib/stress.jar\" manifest=\"${stress.manifest}\">\n            <fileset dir=\"${stress.build.classes}\"/>\n        </jar>\n    </target>\n\n    <target name=\"fqltool-jar\"\n            depends=\"fqltool-build\"\n            description=\"Assemble Cassandra JAR files\">\n\n        <!-- fqltool jar -->\n        <manifest file=\"${fqltool.manifest}\">\n            <attribute name=\"Built-By\" value=\"Marcus Eriksson\"/>\n            <attribute name=\"Main-Class\" value=\"org.apache.cassandra.fqltool.FullQueryLogTool\"/>\n        </manifest>\n        <mkdir dir=\"${fqltool.build.classes}/META-INF\" />\n        <mkdir dir=\"${build.dir}/tools/lib/\" />\n        <jar destfile=\"${build.dir}/tools/lib/fqltool.jar\" manifest=\"${fqltool.manifest}\">\n            <fileset dir=\"${fqltool.build.classes}\"/>\n        </jar>\n    </target>\n\n    <target name=\"simulator-jars\"\n            depends=\"simulator-asm-build,simulator-bootstrap-build\"\n            description=\"Assemble Cassandra JAR files\">\n\n        <!-- simulator asm jar -->\n        <manifest file=\"${simulator-asm.manifest}\">\n            <attribute name=\"Built-By\" value=\"Benedict Elliott Smith\"/>\n            <attribute name=\"Premain-Class\" value=\"org.apache.cassandra.simulator.asm.InterceptAgent\"/>\n            <attribute name=\"Agent-Class\" value=\"org.apache.cassandra.simulator.asm.InterceptAgent\"/>\n            <attribute name=\"Can-Redefine-Classes\" value=\"true\"/>\n            <attribute name=\"Can-Retransform-Classes\" value=\"true\"/>\n        </manifest>\n        <mkdir dir=\"${simulator-asm.build.classes}/META-INF\" />\n        <mkdir dir=\"${test.lib}/jars/\" />\n        <jar destfile=\"${test.lib}/jars/simulator-asm.jar\" manifest=\"${simulator-asm.manifest}\">\n            <fileset dir=\"${simulator-asm.build.classes}\"/>\n            <fileset dir=\"${test.lib}/jars\">\n                <include name=\"**/asm-*${asm.version}.jar\" />\n            </fileset>\n        </jar>\n\n        <!-- simulator bootstrap jar -->\n        <manifest file=\"${simulator-bootstrap.manifest}\">\n            <attribute name=\"Built-By\" value=\"Benedict Elliott Smith\"/>\n        </manifest>\n        <mkdir dir=\"${simulator-bootstrap.build.classes}/META-INF\" />\n        <mkdir dir=\"${test.lib}/jars/\" />\n        <jar destfile=\"${test.lib}/jars/simulator-bootstrap.jar\" manifest=\"${simulator-bootstrap.manifest}\">\n            <fileset dir=\"${simulator-bootstrap.build.classes}\"/>\n            <fileset dir=\"${test.lib}/jars\">\n                <include name=\"**/asm-*${asm.version}.jar\" />\n            </fileset>\n        </jar>\n    </target>\n\n    <target name=\"jar\"\n            depends=\"_main-jar,build-test,stress-jar,fqltool-jar,simulator-jars,write-poms\"\n            description=\"Assemble Cassandra JAR files\">\n    </target>\n\n    <!--\n        The javadoc-jar target makes cassandra-javadoc.jar output required for publishing to Maven central repository.\n    -->\n    <target name=\"javadoc-jar\" depends=\"javadoc\" unless=\"no-javadoc\" description=\"Assemble Cassandra JavaDoc JAR file\">\n      <jar jarfile=\"${build.dir}/${final.name}-javadoc.jar\" basedir=\"${javadoc.dir}\"/>\n      <!-- javadoc task always rebuilds so might as well remove the generated docs to prevent\n           being pulled into the distribution by accident -->\n      <delete quiet=\"true\" dir=\"${javadoc.dir}\"/>\n    </target>\n\n    <!--\n        The sources-jar target makes cassandra-sources.jar output required for publishing to Maven central repository.\n    -->\n    <target name=\"sources-jar\" depends=\"init\" description=\"Assemble Cassandra Sources JAR file\">\n      <jar jarfile=\"${build.dir}/${final.name}-sources.jar\">\n        <fileset dir=\"${build.src.java}\" defaultexcludes=\"yes\">\n          <include name=\"org/apache/**/*.java\"/>\n        </fileset>\n        <fileset dir=\"${build.src.gen-java}\" defaultexcludes=\"yes\">\n          <include name=\"org/apache/**/*.java\"/>\n        </fileset>\n      </jar>\n    </target>\n\n    <target name=\"_artifacts-init\" depends=\"jar\">\n      <mkdir dir=\"${dist.dir}\"/>\n      <!-- fix the control linefeed so that builds on windows works on linux -->\n      <fixcrlf srcdir=\"bin\" includes=\"**/*\" eol=\"lf\" eof=\"remove\" />\n      <fixcrlf srcdir=\"conf\" includes=\"**/*\" eol=\"lf\" eof=\"remove\" />\n      <fixcrlf srcdir=\"tools/bin\" includes=\"**/*\" eol=\"lf\" eof=\"remove\" />\n      <copy todir=\"${dist.dir}/lib\">\n        <fileset dir=\"${build.lib}\"/>\n        <fileset dir=\"${build.dir}\">\n          <include name=\"${final.name}.jar\" />\n        </fileset>\n      </copy>\n      <copy todir=\"${dist.dir}/doc\" failonerror=\"false\">\n        <fileset dir=\"doc\">\n          <include name=\"cql3/CQL.html\" />\n          <include name=\"cql3/CQL.css\" />\n          <include name=\"SASI.md\" />\n        </fileset>\n      </copy>\n      <copy todir=\"${dist.dir}/doc/html\" failonerror=\"false\">\n        <fileset dir=\"doc\" />\n        <globmapper from=\"build/html/*\" to=\"*\"/>\n      </copy>\n      <copy todir=\"${dist.dir}/bin\">\n        <fileset dir=\"bin\"/>\n      </copy>\n      <copy todir=\"${dist.dir}/conf\">\n        <fileset dir=\"conf\"/>\n      </copy>\n      <copy todir=\"${dist.dir}/pylib\">\n        <fileset dir=\"pylib\">\n          <include name=\"**\" />\n          <exclude name=\"**/*.pyc\" />\n        </fileset>\n      </copy>\n      <copy todir=\"${dist.dir}/\">\n        <fileset dir=\"${basedir}\">\n          <include name=\"*.txt\" />\n        </fileset>\n      </copy>\n      <copy todir=\"${dist.dir}/tools/bin\">\n        <fileset dir=\"${basedir}/tools/bin\"/>\n      </copy>\n      <copy todir=\"${dist.dir}/tools/\">\n        <fileset dir=\"${basedir}/tools/\">\n            <include name=\"*.yaml\"/>\n\t</fileset>\n      </copy>\n      <copy todir=\"${dist.dir}/tools/lib\">\n        <fileset dir=\"${build.dir}/tools/lib/\">\n            <include name=\"*.jar\" />\n        </fileset>\n      </copy>\n    </target>\n\n    <!-- creates release tarballs -->\n    <target name=\"artifacts\" depends=\"_artifacts-init,check,gen-doc,sources-jar\"\n            description=\"Create Cassandra tarball and maven artifacts\">\n      <tar compression=\"gzip\" longfile=\"gnu\"\n        destfile=\"${build.dir}/${final.name}-bin.tar.gz\">\n\n        <!-- Everything but bin/ (default mode) -->\n        <tarfileset dir=\"${dist.dir}\" prefix=\"${final.name}\">\n          <include name=\"**\"/>\n          <exclude name=\"bin/*\" />\n          <exclude name=\"tools/bin/*\"/>\n        </tarfileset>\n        <!-- Shell includes in bin/ (default mode) -->\n        <tarfileset dir=\"${dist.dir}\" prefix=\"${final.name}\">\n          <include name=\"bin/*.in.sh\" />\n          <include name=\"tools/bin/*.in.sh\" />\n        </tarfileset>\n        <!-- Executable scripts in bin/ -->\n        <tarfileset dir=\"${dist.dir}\" prefix=\"${final.name}\" mode=\"755\">\n          <include name=\"bin/*\"/>\n          <include name=\"tools/bin/*\"/>\n          <exclude name=\"bin/*.in.sh\" />\n          <exclude name=\"tools/bin/*.in.sh\" />\n        </tarfileset>\n      </tar>\n\n      <tar compression=\"gzip\" longfile=\"gnu\"\n           destfile=\"${build.dir}/${final.name}-src.tar.gz\">\n\n        <tarfileset dir=\"${basedir}\"\n                    prefix=\"${final.name}-src\">\n          <include name=\"**\"/>\n          <exclude name=\"build/**\" />\n          <exclude name=\"lib/**\" />\n          <exclude name=\"src/gen-java/**\" />\n          <exclude name=\".git/**\" />\n          <exclude name=\"venv/**\" />\n          <exclude name=\"src/resources/org/apache/cassandra/config/version.properties\" />\n          <exclude name=\"conf/hotspot_compiler\" />\n          <exclude name=\"doc/cql3/CQL.html\" />\n          <exclude name=\"doc/build/**\" />\n          <exclude name=\"bin/*\" /> <!-- handled separately below -->\n          <exclude name=\"tools/bin/*\" /> <!-- handled separately below -->\n          <!-- exclude python generated files -->\n          <exclude name=\"**/__pycache__/**\" />\n          <!-- exclude Eclipse files -->\n          <exclude name=\".project\" />\n          <exclude name=\".classpath\" />\n          <exclude name=\".settings/**\" />\n          <exclude name=\".externalToolBuilders/**\" />\n          <!-- exclude NetBeans files -->\n          <exclude name=\"ide/nbproject/private/**\" />\n        </tarfileset>\n\n        <!-- python driver -->\n        <tarfileset dir=\"${basedir}\" prefix=\"${final.name}-src\">\n          <include name=\"lib/cassandra-driver-internal-only-**\" />\n        </tarfileset>\n\n        <!-- Shell includes in bin/ and tools/bin/ -->\n        <tarfileset dir=\"${basedir}\" prefix=\"${final.name}-src\">\n          <include name=\"bin/*.in.sh\" />\n          <include name=\"tools/bin/*.in.sh\" />\n        </tarfileset>\n        <!-- Everything else (assumed to be scripts), is executable -->\n        <tarfileset dir=\"${basedir}\" prefix=\"${final.name}-src\" mode=\"755\">\n          <include name=\"bin/*\"/>\n          <exclude name=\"bin/*.in.sh\" />\n          <include name=\"tools/bin/*\"/>\n          <exclude name=\"tools/bin/*.in.sh\" />\n          <include name=\".build/**/*.sh\"/>\n        </tarfileset>\n      </tar>\n\n      <checksum forceOverwrite=\"yes\" todir=\"${build.dir}\" fileext=\".sha256\" algorithm=\"SHA-256\">\n        <fileset dir=\"${build.dir}\">\n          <include name=\"${final.name}-bin.tar.gz\" />\n          <include name=\"${final.name}-src.tar.gz\" />\n        </fileset>\n      </checksum>\n      <checksum forceOverwrite=\"yes\" todir=\"${build.dir}\" fileext=\".sha512\" algorithm=\"SHA-512\">\n        <fileset dir=\"${build.dir}\">\n          <include name=\"${final.name}-bin.tar.gz\" />\n          <include name=\"${final.name}-src.tar.gz\" />\n        </fileset>\n      </checksum>\n    </target>\n\n  <!-- Wrapper of build-test without dependencies, so both that target and its dependencies are skipped if the property\n    no-build-test is true. This is meant to be used to run tests without actually building them, provided that they have\n    been built before. All test targets depend on this, so one can run them using the no-build-test property.\n    For example:\n\n    ant test -Dno-build-test=true\n    ant test -Dtest.name=StorageServiceServerTest -Dno-build-test=true\n    ant testsome -Dtest.name=org.apache.cassandra.service.StorageServiceServerTest -Dno-build-test=true\n\n    The property is false by default, so if it's not specified the tests would be built with all their dependencies.\n    See CASSANDRA-16625 and CASSANDRA-18000 for further details.\n     -->\n  <target name=\"maybe-build-test\" unless=\"no-build-test\">\n    <antcall target=\"build-test\" inheritRefs=\"true\"/>\n  </target>\n\n  <target name=\"build-test\" depends=\"_main-jar,stress-build-test,fqltool-build,resolver-dist-lib,simulator-jars\"\n          description=\"Compile test classes\">\n    <antcall target=\"_build-test\"/>\n    <antcall target=\"_check-test-names\"/>\n  </target>\n\n  <target name=\"_build-test\">\n    <javac\n     compiler=\"modern\"\n     debug=\"true\"\n     debuglevel=\"${debuglevel}\"\n     destdir=\"${test.classes}\"\n     includeantruntime=\"true\"\n     source=\"${ant.java.version}\"\n     target=\"${ant.java.version}\"\n     encoding=\"utf-8\">\n     <classpath>\n        <path refid=\"cassandra.classpath.test\"/>\n        <pathelement location=\"${fqltool.build.classes}\"/>\n     </classpath>\n     <compilerarg value=\"-XDignore.symbol.file\"/>\n     <!-- needed to compile org.apache.cassandra.utils.memory.BufferPoolTest -->\n     <compilerarg line=\"${jdk11plus-javac-exports}\"/>\n     <src path=\"${test.anttasks.src}\"/>\n     <src path=\"${test.unit.src}\"/>\n     <src path=\"${test.long.src}\"/>\n     <src path=\"${test.burn.src}\"/>\n     <src path=\"${test.memory.src}\"/>\n     <src path=\"${test.microbench.src}\"/>\n     <src path=\"${test.distributed.src}\"/>\n     <src path=\"${test.simulator.src}\"/>\n     <src path=\"${test.simulator-asm.src}\"/>\n     <src path=\"${test.simulator-bootstrap.src}\"/>\n     <src path=\"${test.simulator-test.src}\"/>\n     <src path=\"${test.harry.src}\"/>\n     <compilerarg line=\"${jdk11plus-javac-exports}\"/>\n    </javac>\n\n    <!-- Non-java resources needed by the test suite -->\n    <copy todir=\"${test.classes}\">\n      <fileset dir=\"${test.resources}\"/>\n    </copy>\n  </target>\n\n    <macrodef name=\"check-test-names\">\n        <attribute name=\"annotationName\"/>\n        <attribute name=\"regex\"/>\n        <attribute name=\"scanClassPath\" default=\"${test.classes}:${fqltool.test.classes}:${stress.test.classes}\"/>\n        <attribute name=\"packageName\" default=\"org.apache.cassandra\"/>\n        <attribute name=\"expand\" default=\"true\"/>\n        <attribute name=\"normalize\" default=\"true\"/>\n        <attribute name=\"verbose\" default=\"false\"/>\n\n        <sequential>\n            <java taskname=\"check-test-names\" fork=\"true\" failonerror=\"yes\" classname=\"org.apache.cassandra.anttasks.TestNameCheckTask\">\n                <classpath>\n                    <path refid=\"cassandra.classpath.test\"/>\n                    <pathelement location=\"${fqltool.build.classes}\"/>\n                    <pathelement location=\"${stress.build.classes}\"/>\n                    <pathelement location=\"${test.classes}\"/>\n                    <pathelement location=\"${fqltool.test.classes}\"/>\n                    <pathelement location=\"${stress.test.classes}\"/>\n                </classpath>\n                <jvmarg line=\"${java-jvmargs}\"/>\n                <jvmarg value=\"-DscanClassPath=@{scanClassPath}\"/>\n                <jvmarg value=\"-DpackageName=@{packageName}\"/>\n                <jvmarg value=\"-DannotationName=@{annotationName}\"/>\n                <jvmarg value=\"-Dexpand=@{expand}\"/>\n                <jvmarg value=\"-Dnormalize=@{normalize}\"/>\n                <jvmarg value=\"-Dverbose=@{verbose}\"/>\n                <jvmarg value=\"-Dregex=@{regex}\"/>\n            </java>\n        </sequential>\n    </macrodef>\n\n  <target name=\"_check-test-names\">\n      <check-test-names annotationName=\"org.junit.Test\" regex=\".*Test$\"/>\n      <check-test-names annotationName=\"org.openjdk.jmh.annotations.Benchmark\" regex=\".*(Bench|_jmhType.*)$\"/>\n  </target>\n\n  <!-- Run tests separately and report errors after and generate a junit report -->\n  <macrodef name=\"testhelper\">\n    <attribute name=\"testdelegate\"/>\n    <sequential>\n        <taskdef name=\"testhelper_\" classname=\"org.apache.cassandra.anttasks.TestHelper\" classpath=\"${test.classes}\"/>\n        <testhelper_ property=\"@{testdelegate}\"/>\n      <fail message=\"Some test(s) failed.\">\n        <condition>\n            <and>\n            <isset property=\"testfailed\"/>\n            <not>\n              <isset property=\"ant.test.failure.ignore\"/>\n            </not>\n          </and>\n        </condition>\n      </fail>\n    </sequential>\n  </macrodef>\n\n  <!-- Run a list of junit tasks but don't track errors or generate a report after\n       If a test fails the testfailed property will be set. All the tests are run using the testdelegate\n       macro that is specified as an attribute and they will be run sequentially in this ant process -->\n\n  <!-- Defines how to run a set of tests. If you change the defaults for attributes\n       you should also update them in testmacro.,\n       The two are split because the helper doesn't generate\n       a junit report or fail on errors -->\n  <macrodef name=\"testmacrohelper\">\n    <attribute name=\"inputdir\" />\n    <attribute name=\"timeout\" default=\"${test.timeout}\" />\n    <attribute name=\"forkmode\" default=\"perTest\"/>\n    <element name=\"optjvmargs\" implicit=\"true\" optional=\"true\" />\n    <attribute name=\"filter\" default=\"**/${test.name}.java\"/>\n    <attribute name=\"exclude\" default=\"\" />\n    <attribute name=\"filelist\" default=\"\" />\n    <attribute name=\"testtag\" default=\"\"/>\n    <attribute name=\"usejacoco\" default=\"no\"/>\n    <attribute name=\"showoutput\" default=\"false\"/>\n\n    <sequential>\n      <fail message=\"testing with build.test.dir (${build.test.dir}) not pointing to 'build/test/' will fail, test configurations are hardcoded.\">\n        <condition><not><equals arg1=\"${build.test.dir}\" arg2=\"${basedir}/build/test\"/></not></condition>\n      </fail>\n      <condition property=\"additionalagent\"\n                 value=\"-javaagent:${build.dir.lib}/jars/jacocoagent.jar=destfile=${jacoco.partialexecfile}\"\n                 else=\"\">\n        <istrue value=\"${usejacoco}\"/>\n      </condition>\n      <taskdef name=\"junit-timeout\" classname=\"org.apache.cassandra.JStackJUnitTask\">\n        <classpath>\n          <pathelement location=\"${test.classes}\"/>\n        </classpath>\n      </taskdef>\n      <mkdir dir=\"${build.test.dir}/cassandra\"/>\n      <mkdir dir=\"${build.test.output.dir}\"/>\n      <mkdir dir=\"${build.test.output.dir}/@{testtag}\"/>\n      <mkdir dir=\"${tmp.dir}\"/>\n      <junit-timeout fork=\"on\" forkmode=\"@{forkmode}\" failureproperty=\"testfailed\" maxmemory=\"1024m\" timeout=\"@{timeout}\" showoutput=\"@{showoutput}\">\n        <formatter classname=\"org.apache.cassandra.CassandraXMLJUnitResultFormatter\" extension=\".xml\" usefile=\"true\"/>\n        <formatter classname=\"org.apache.cassandra.CassandraBriefJUnitResultFormatter\" usefile=\"false\"/>\n        <jvmarg value=\"-Dstorage-config=${test.conf}\"/>\n        <jvmarg value=\"-Djava.awt.headless=true\"/>\n        <!-- Cassandra 3.0+ needs <jvmarg line=\"... ${additionalagent}\" /> here! (not value=) -->\n        <jvmarg line=\"-javaagent:${build.dir.lib}/jars/jamm-${jamm.version}.jar ${additionalagent}\" />\n        <jvmarg value=\"-ea\"/>\n        <jvmarg value=\"-Djava.io.tmpdir=${tmp.dir}\"/>\n        <jvmarg value=\"-Dcassandra.debugrefcount=true\"/>\n        <jvmarg value=\"${jvm_xss}\"/>\n        <!-- When we do classloader manipulation SoftReferences can cause memory leaks\n             that can OOM our test runs. The next two settings informs our GC\n             algorithm to limit the metaspace size and clean up SoftReferences\n             more aggressively rather than waiting. See CASSANDRA-14922 for more details.\n        -->\n        <jvmarg value=\"-XX:SoftRefLRUPolicyMSPerMB=0\" />\n        <jvmarg value=\"-XX:ActiveProcessorCount=${cassandra.test.processorCount}\" />\n        <jvmarg value=\"-XX:HeapDumpPath=${build.test.dir}\" />\n        <jvmarg value=\"-Dcassandra.test.driver.connection_timeout_ms=${test.driver.connection_timeout_ms}\"/>\n        <jvmarg value=\"-Dcassandra.test.driver.read_timeout_ms=${test.driver.read_timeout_ms}\"/>\n        <jvmarg value=\"-Dcassandra.memtable_row_overhead_computation_step=100\"/>\n        <jvmarg value=\"-Dcassandra.test.use_prepared=${cassandra.test.use_prepared}\"/>\n        <jvmarg value=\"-Dcassandra.test.sstableformatdevelopment=true\"/>\n        <!-- The first time SecureRandom initializes can be slow if it blocks on /dev/random -->\n        <jvmarg value=\"-Djava.security.egd=file:/dev/urandom\" />\n        <jvmarg value=\"-Dcassandra.testtag=@{testtag}_jdk${ant.java.version}${testtag.extra}\"/>\n        <jvmarg value=\"-Dcassandra.keepBriefBrief=${cassandra.keepBriefBrief}\" />\n        <jvmarg value=\"-Dcassandra.strict.runtime.checks=true\" />\n        <jvmarg value=\"-Dcassandra.reads.thresholds.coordinator.defensive_checks_enabled=true\" /> <!-- enable defensive checks -->\n        <jvmarg value=\"-Dcassandra.test.flush_local_schema_changes=${cassandra.test.flush_local_schema_changes}\"/>\n        <jvmarg value=\"-Dcassandra.test.messagingService.nonGracefulShutdown=${cassandra.test.messagingService.nonGracefulShutdown}\"/>\n        <jvmarg value=\"-Dcassandra.use_nix_recursive_delete=${cassandra.use_nix_recursive_delete}\"/>\n        <jvmarg value=\"-Dio.netty.allocator.useCacheForAllThreads=true\"/>\n        <jvmarg value=\"-Dio.netty.allocator.maxOrder=11\"/>\n        <jvmarg line=\"${java-jvmargs}\"/>\n        <!-- disable shrinks in quicktheories CASSANDRA-15554 -->\n        <jvmarg value=\"-DQT_SHRINKS=0\"/>\n        <jvmarg line=\"${_std-test-jvmargs} \" />\n        <jvmarg line=\"${test.jvm.args}\" />\n        <optjvmargs/>\n        <!-- Uncomment to debug unittest, attach debugger to port 1416 -->\n        <!--\n        <jvmarg line=\"-agentlib:jdwp=transport=dt_socket,address=localhost:1416,server=y,suspend=y\" />\n        -->\n        <classpath>\n          <pathelement path=\"${java.class.path}\"/>\n          <pathelement location=\"${stress.build.classes}\"/>\n          <pathelement location=\"${fqltool.build.classes}\"/>\n          <pathelement location=\"${test.classes}\"/>\n          <path refid=\"cassandra.classpath.test\" />\n          <pathelement location=\"${stress.test.classes}\"/>\n          <pathelement location=\"${fqltool.test.classes}\"/>\n          <pathelement location=\"${test.conf}\"/>\n          <pathelement path=\"${java.class.path}\"/>\n          <path refid=\"cassandra.classpath\" />\n          <fileset dir=\"${test.lib}\">\n            <include name=\"**/*.jar\" />\n              <exclude name=\"**/ant-*.jar\"/>\n          </fileset>\n        </classpath>\n        <batchtest todir=\"${build.test.output.dir}/@{testtag}\">\n            <fileset dir=\"@{inputdir}\" includes=\"@{filter}\" excludes=\"@{exclude}\"/>\n            <filelist dir=\"@{inputdir}\" files=\"@{filelist}\"/>\n        </batchtest>\n      </junit-timeout>\n\n      <delete quiet=\"true\" failonerror=\"false\" dir=\"${build.test.dir}/cassandra/commitlog\"/>\n      <delete quiet=\"true\" failonerror=\"false\" dir=\"${build.test.dir}/cassandra/cdc_raw\"/>\n      <delete quiet=\"true\" failonerror=\"false\" dir=\"${build.test.dir}/cassandra/data\"/>\n      <delete quiet=\"true\" failonerror=\"false\" dir=\"${build.test.dir}/cassandra/ssl_upload_tables\"/>\n      <delete quiet=\"true\" failonerror=\"false\" dir=\"${build.test.dir}/cassandra/system_data\"/>\n      <delete quiet=\"true\" failonerror=\"false\" dir=\"${build.test.dir}/cassandra/saved_caches\"/>\n      <delete quiet=\"true\" failonerror=\"false\" dir=\"${build.test.dir}/cassandra/hints\"/>\n    </sequential>\n  </macrodef>\n\n  <target name=\"testold\" depends=\"maybe-build-test\" description=\"Execute unit tests\">\n    <testmacro inputdir=\"${test.unit.src}\" timeout=\"${test.timeout}\">\n      <jvmarg value=\"-Dlegacy-sstable-root=${test.data}/legacy-sstables\"/>\n      <jvmarg value=\"-Dinvalid-legacy-sstable-root=${test.data}/invalid-legacy-sstables\"/>\n      <jvmarg value=\"-Dcassandra.ring_delay_ms=1000\"/>\n      <jvmarg value=\"-Dcassandra.tolerate_sstable_size=true\"/>\n      <jvmarg value=\"-Dcassandra.skip_sync=true\" />\n    </testmacro>\n    <fileset dir=\"${test.unit.src}\" />\n  </target>\n\n  <!-- Will not generate a junit report or fail on error  -->\n  <macrodef name=\"testlist\">\n    <attribute name=\"test.file.list\"/>\n    <sequential>\n      <condition property=\"maxMemory\" value=\"8G\" else=\"4G\">\n          <equals arg1=\"${test.classlistprefix}\" arg2=\"distributed\"/>\n      </condition>\n      <testmacrohelper inputdir=\"${test.dir}/${test.classlistprefix}\" filelist=\"@{test.file.list}\" exclude=\"**/*.java\" timeout=\"${test.timeout}\">\n        <jvmarg value=\"-Dlegacy-sstable-root=${test.data}/legacy-sstables\"/>\n        <jvmarg value=\"-Dinvalid-legacy-sstable-root=${test.data}/invalid-legacy-sstables\"/>\n        <jvmarg value=\"-Dcassandra.ring_delay_ms=1000\"/>\n        <jvmarg value=\"-Dcassandra.tolerate_sstable_size=true\"/>\n        <jvmarg value=\"-Dcassandra.skip_sync=true\" />\n        <jvmarg value=\"-Xmx${maxMemory}\"/>\n      </testmacrohelper>\n    </sequential>\n  </macrodef>\n\n  <!-- Will not generate a junit report  -->\n  <macrodef name=\"testlist-compression\">\n    <attribute name=\"test.file.list\" />\n    <sequential>\n      <property name=\"compressed_yaml\" value=\"${build.test.dir}/cassandra.compressed.yaml\"/>\n      <concat destfile=\"${compressed_yaml}\">\n          <fileset file=\"${test.conf}/cassandra.yaml\"/>\n          <fileset file=\"${test.conf}/commitlog_compression_${test.compression.algo}.yaml\"/>\n      </concat>\n      <testmacrohelper inputdir=\"${test.unit.src}\" filelist=\"@{test.file.list}\"\n                       exclude=\"**/*.java\" timeout=\"${test.timeout}\" testtag=\"compression\">\n        <jvmarg value=\"-Dlegacy-sstable-root=${test.data}/legacy-sstables\"/>\n        <jvmarg value=\"-Dinvalid-legacy-sstable-root=${test.data}/invalid-legacy-sstables\"/>\n        <jvmarg value=\"-Dcassandra.test.compression=true\"/>\n        <jvmarg value=\"-Dcassandra.test.compression.algo=${test.compression.algo}\"/>\n        <jvmarg value=\"-Dcassandra.ring_delay_ms=1000\"/>\n        <jvmarg value=\"-Dcassandra.tolerate_sstable_size=true\"/>\n        <jvmarg value=\"-Dcassandra.config=file:///${compressed_yaml}\"/>\n        <jvmarg value=\"-Dcassandra.skip_sync=true\" />\n      </testmacrohelper>\n    </sequential>\n  </macrodef>\n\n  <macrodef name=\"testlist-cdc\">\n    <attribute name=\"test.file.list\" />\n    <sequential>\n      <property name=\"cdc_yaml\" value=\"${build.test.dir}/cassandra.cdc.yaml\"/>\n      <concat destfile=\"${cdc_yaml}\">\n        <fileset file=\"${test.conf}/cassandra.yaml\"/>\n        <fileset file=\"${test.conf}/cdc.yaml\"/>\n      </concat>\n      <testmacrohelper inputdir=\"${test.unit.src}\" filelist=\"@{test.file.list}\"\n                       exclude=\"**/*.java\" timeout=\"${test.timeout}\" testtag=\"cdc\">\n        <jvmarg value=\"-Dlegacy-sstable-root=${test.data}/legacy-sstables\"/>\n        <jvmarg value=\"-Dinvalid-legacy-sstable-root=${test.data}/invalid-legacy-sstables\"/>\n        <jvmarg value=\"-Dcassandra.ring_delay_ms=1000\"/>\n        <jvmarg value=\"-Dcassandra.tolerate_sstable_size=true\"/>\n        <jvmarg value=\"-Dcassandra.config=file:///${cdc_yaml}\"/>\n        <jvmarg value=\"-Dcassandra.skip_sync=true\" />\n      </testmacrohelper>\n    </sequential>\n  </macrodef>\n\n    <macrodef name=\"testlist-latest\">\n        <attribute name=\"test.file.list\" />\n        <sequential>\n            <property name=\"latest_yaml\" value=\"${build.test.dir}/cassandra.latest.yaml\"/>\n            <concat destfile=\"${latest_yaml}\">\n                <fileset file=\"${test.conf}/cassandra.yaml\"/>\n                <fileset file=\"${test.conf}/latest_diff.yaml\"/>\n                <fileset file=\"${test.conf}/storage_compatibility_mode_none.yaml\"/>\n            </concat>\n            <testmacrohelper inputdir=\"${test.unit.src}\" filelist=\"@{test.file.list}\"\n                             exclude=\"**/*.java\" timeout=\"${test.timeout}\" testtag=\"latest\">\n                <jvmarg value=\"-Dlegacy-sstable-root=${test.data}/legacy-sstables\"/>\n                <jvmarg value=\"-Dinvalid-legacy-sstable-root=${test.data}/invalid-legacy-sstables\"/>\n                <jvmarg value=\"-Dcassandra.ring_delay_ms=1000\"/>\n                <jvmarg value=\"-Dcassandra.tolerate_sstable_size=true\"/>\n                <jvmarg value=\"-Dcassandra.config=file:///${latest_yaml}\"/>\n                <jvmarg value=\"-Dcassandra.test.storage_compatibility_mode=NONE\"/>\n                <jvmarg value=\"-Dcassandra.skip_sync=true\" />\n            </testmacrohelper>\n        </sequential>\n    </macrodef>\n\n    <macrodef name=\"testlist-oa\">\n    <attribute name=\"test.file.list\"/>\n    <sequential>\n      <property name=\"scm_none_yaml\" value=\"${build.test.dir}/cassandra.scm_none.yaml\"/>\n        <concat destfile=\"${scm_none_yaml}\">\n          <fileset file=\"${test.conf}/cassandra.yaml\"/>\n          <fileset file=\"${test.conf}/storage_compatibility_mode_none.yaml\"/>\n        </concat>\n      <testmacrohelper inputdir=\"${test.dir}/${test.classlistprefix}\" filelist=\"@{test.file.list}\" \n                       exclude=\"**/*.java\" timeout=\"${test.timeout}\" testtag=\"oa\">\n        <jvmarg value=\"-Dlegacy-sstable-root=${test.data}/legacy-sstables\"/>\n        <jvmarg value=\"-Dinvalid-legacy-sstable-root=${test.data}/invalid-legacy-sstables\"/>\n        <jvmarg value=\"-Dcassandra.ring_delay_ms=1000\"/>\n        <jvmarg value=\"-Dcassandra.tolerate_sstable_size=true\"/>\n        <jvmarg value=\"-Dcassandra.config=file:///${scm_none_yaml}\"/>\n        <jvmarg value=\"-Dcassandra.test.storage_compatibility_mode=NONE\"/>\n        <jvmarg value=\"-Dcassandra.skip_sync=true\" />\n      </testmacrohelper>\n    </sequential>\n  </macrodef>\n\n    <macrodef name=\"testlist-system-keyspace-directory\">\n    <attribute name=\"test.file.list\" />\n    <sequential>\n      <property name=\"system_keyspaces_directory_yaml\" value=\"${build.test.dir}/cassandra.system.yaml\"/>\n      <concat destfile=\"${system_keyspaces_directory_yaml}\">\n        <fileset file=\"${test.conf}/cassandra.yaml\"/>\n        <fileset file=\"${test.conf}/system_keyspaces_directory.yaml\"/>\n      </concat>\n      <testmacrohelper inputdir=\"${test.unit.src}\" filelist=\"@{test.file.list}\"\n                       exclude=\"**/*.java\" timeout=\"${test.timeout}\" testtag=\"system_keyspace_directory\">\n        <jvmarg value=\"-Dlegacy-sstable-root=${test.data}/legacy-sstables\"/>\n        <jvmarg value=\"-Dinvalid-legacy-sstable-root=${test.data}/invalid-legacy-sstables\"/>\n        <jvmarg value=\"-Dcassandra.ring_delay_ms=1000\"/>\n        <jvmarg value=\"-Dcassandra.tolerate_sstable_size=true\"/>\n        <jvmarg value=\"-Dcassandra.config=file:///${system_keyspaces_directory_yaml}\"/>\n        <jvmarg value=\"-Dcassandra.skip_sync=true\" />\n      </testmacrohelper>\n    </sequential>\n  </macrodef>\n\n  <!--\n    Run named ant task with jacoco, such as \"ant jacoco-run -Dtaskname=test\"\n    the target run must enable the jacoco agent if usejacoco is 'yes' -->\n  <target name=\"jacoco-run\" description=\"run named task with jacoco instrumentation\">\n    <condition property=\"runtask\" value=\"${taskname}\" else=\"test\">\n      <isset property=\"taskname\"/>\n    </condition>\n    <antcall target=\"${runtask}\">\n      <param name=\"usejacoco\" value=\"yes\"/>\n    </antcall>\n  </target>\n\n  <!-- Use this with an FQDN for test class, and an optional csv list of methods like this:\n    ant testsome -Dtest.name=org.apache.cassandra.service.StorageServiceServerTest\n    ant testsome -Dtest.name=org.apache.cassandra.service.StorageServiceServerTest -Dtest.methods=testRegularMode,testGetAllRangesEmpty\n  -->\n  <target name=\"testsome\" depends=\"maybe-build-test\" description=\"Execute specific unit tests\" >\n    <testmacro inputdir=\"${test.unit.src}\" timeout=\"${test.timeout}\">\n      <test if=\"withMethods\" name=\"${test.name}\" methods=\"${test.methods}\" todir=\"${build.test.output.dir}/\" outfile=\"TEST-${test.name}-${test.methods}\"/>\n      <test if=\"withoutMethods\" name=\"${test.name}\" todir=\"${build.test.output.dir}/\" outfile=\"TEST-${test.name}\"/>\n      <jvmarg value=\"-Dlegacy-sstable-root=${test.data}/legacy-sstables\"/>\n      <jvmarg value=\"-Dinvalid-legacy-sstable-root=${test.data}/invalid-legacy-sstables\"/>\n      <jvmarg value=\"-Dcassandra.ring_delay_ms=1000\"/>\n      <jvmarg value=\"-Dcassandra.tolerate_sstable_size=true\"/>\n      <jvmarg value=\"-Dcassandra.skip_sync=true\" />\n    </testmacro>\n  </target>\n\n  <!-- Use this with an FQDN for test class, and an optional csv list of methods like this:\n    ant long-testsome -Dtest.name=org.apache.cassandra.cql3.ManyRowsTest\n    ant long-testsome -Dtest.name=org.apache.cassandra.cql3.ManyRowsTest -Dtest.methods=testLargeCount\n  -->\n  <target name=\"long-testsome\" depends=\"maybe-build-test\" description=\"Execute specific long unit tests\" >\n    <testmacro inputdir=\"${test.long.src}\" timeout=\"${test.long.timeout}\">\n      <test if=\"withMethods\" name=\"${test.name}\" methods=\"${test.methods}\" todir=\"${build.test.output.dir}/\" outfile=\"TEST-${test.name}-${test.methods}\"/>\n      <test if=\"withoutMethods\" name=\"${test.name}\" todir=\"${build.test.output.dir}/\" outfile=\"TEST-${test.name}\"/>\n      <jvmarg value=\"-Dcassandra.ring_delay_ms=1000\"/>\n      <jvmarg value=\"-Dcassandra.tolerate_sstable_size=true\"/>\n    </testmacro>\n  </target>\n\n  <!-- Use this with an FQDN for test class, and an optional csv list of methods like this:\n    ant burn-testsome -Dtest.name=org.apache.cassandra.utils.memory.LongBufferPoolTest\n    ant burn-testsome -Dtest.name=org.apache.cassandra.utils.memory.LongBufferPoolTest -Dtest.methods=testPoolAllocateWithRecyclePartially\n  -->\n  <target name=\"burn-testsome\" depends=\"maybe-build-test\" description=\"Execute specific burn unit tests\" >\n    <testmacro inputdir=\"${test.burn.src}\" timeout=\"${test.burn.timeout}\">\n      <test if=\"withMethods\" name=\"${test.name}\" methods=\"${test.methods}\" todir=\"${build.test.output.dir}/\" outfile=\"TEST-${test.name}-${test.methods}\"/>\n      <test if=\"withoutMethods\" name=\"${test.name}\" todir=\"${build.test.output.dir}/\" outfile=\"TEST-${test.name}\"/>\n      <jvmarg value=\"-Dlogback.configurationFile=test/conf/logback-burntest.xml\"/>\n    </testmacro>\n  </target>\n\n  <target name=\"test-compression\" depends=\"maybe-build-test,stress-build\" description=\"Execute unit tests with sstable compression enabled\">\n    <path id=\"all-test-classes-path\">\n      <fileset dir=\"${test.unit.src}\" includes=\"**/${test.name}.java\" />\n      <fileset dir=\"${test.distributed.src}\" includes=\"**/${test.name}.java\" />\n    </path>\n    <property name=\"all-test-classes\" refid=\"all-test-classes-path\"/>\n    <testhelper testdelegate=\"testlist-compression\" />\n  </target>\n\n  <target name=\"test-cdc\" depends=\"maybe-build-test\" description=\"Execute unit tests with change-data-capture enabled\">\n    <path id=\"all-test-classes-path\">\n      <fileset dir=\"${test.unit.src}\" includes=\"**/${test.name}.java\" />\n    </path>\n    <property name=\"all-test-classes\" refid=\"all-test-classes-path\"/>\n    <testhelper testdelegate=\"testlist-cdc\" />\n  </target>\n\n  <target name=\"test-latest\" depends=\"maybe-build-test\" description=\"Execute unit tests with configuration matching cassandra_latest.yaml\">\n    <path id=\"all-test-classes-path\">\n      <fileset dir=\"${test.unit.src}\" includes=\"**/${test.name}.java\" />\n    </path>\n    <property name=\"all-test-classes\" refid=\"all-test-classes-path\"/>\n    <testhelper testdelegate=\"testlist-latest\" />\n  </target>\n\n  <target name=\"test-oa\" depends=\"maybe-build-test\" description=\"Test Runner for the oa sstable format\">\n    <path id=\"all-test-classes-path\">\n      <fileset dir=\"${test.unit.src}\" includes=\"**/${test.name}.java\" excludes=\"**/distributed/test/UpgradeTest*.java\" />\n    </path>\n    <property name=\"all-test-classes\" refid=\"all-test-classes-path\"/>\n    <testhelper testdelegate=\"testlist-oa\"/>\n  </target>\n\n  <target name=\"test-system-keyspace-directory\" depends=\"maybe-build-test\" description=\"Execute unit tests with a system keyspaces directory configured\">\n    <path id=\"all-test-classes-path\">\n      <fileset dir=\"${test.unit.src}\" includes=\"**/${test.name}.java\" />\n    </path>\n    <property name=\"all-test-classes\" refid=\"all-test-classes-path\"/>\n    <testhelper testdelegate=\"testlist-system-keyspace-directory\" />\n  </target>\n\n  <target name=\"msg-ser-gen-test\" depends=\"maybe-build-test\" description=\"Generates message serializations\">\n    <testmacro inputdir=\"${test.unit.src}\"\n        timeout=\"${test.timeout}\" filter=\"**/SerializationsTest.java\">\n      <jvmarg value=\"-Dcassandra.test-serialization-writes=True\"/>\n    </testmacro>\n  </target>\n\n  <target name=\"msg-ser-test\" depends=\"maybe-build-test\" description=\"Tests message serializations\">\n      <testmacro inputdir=\"${test.unit.src}\" timeout=\"${test.timeout}\"\n               filter=\"**/SerializationsTest.java\"/>\n  </target>\n\n  <target name=\"msg-ser-test-7\" depends=\"maybe-build-test\" description=\"Generates message serializations\">\n    <testmacro inputdir=\"${test.unit.src}\"\n        timeout=\"${test.timeout}\" filter=\"**/SerializationsTest.java\">\n      <jvmarg value=\"-Dcassandra.version=0.7\"/>\n    </testmacro>\n  </target>\n\n  <target name=\"msg-ser-test-10\" depends=\"maybe-build-test\" description=\"Tests message serializations on 1.0 messages\">\n    <testmacro inputdir=\"${test.unit.src}\"\n        timeout=\"${test.timeout}\" filter=\"**/SerializationsTest.java\">\n      <jvmarg value=\"-Dcassandra.version=1.0\"/>\n    </testmacro>\n  </target>\n\n  <target name=\"test-burn\" depends=\"maybe-build-test\" description=\"Execute functional tests\">\n    <testmacro inputdir=\"${test.burn.src}\"\n               timeout=\"${test.burn.timeout}\">\n    </testmacro>\n  </target>\n\n  <target name=\"long-test\" depends=\"maybe-build-test\" description=\"Execute functional tests\">\n    <testmacro inputdir=\"${test.long.src}\"\n               timeout=\"${test.long.timeout}\">\n      <jvmarg value=\"-Dcassandra.ring_delay_ms=1000\"/>\n      <jvmarg value=\"-Dcassandra.tolerate_sstable_size=true\"/>\n    </testmacro>\n  </target>\n\n  <target name=\"test-memory\" depends=\"maybe-build-test\" description=\"Execute functional tests\">\n      <testmacro inputdir=\"${test.memory.src}\"\n                 timeout=\"${test.memory.timeout}\">\n          <jvmarg value=\"-javaagent:${build.dir}/test/lib/jars/java-allocation-instrumenter-${allocation-instrumenter.version}.jar\"/>\n      </testmacro>\n  </target>\n\n  <target name=\"cql-test\" depends=\"maybe-build-test\" description=\"Execute CQL tests\">\n    <sequential>\n      <echo message=\"running CQL tests\"/>\n      <mkdir dir=\"${build.test.dir}/cassandra\"/>\n      <mkdir dir=\"${build.test.output.dir}\"/>\n      <junit fork=\"on\" forkmode=\"once\" failureproperty=\"testfailed\" maxmemory=\"1024m\" timeout=\"${test.timeout}\">\n        <formatter type=\"brief\" usefile=\"false\"/>\n        <jvmarg value=\"-Dstorage-config=${test.conf}\"/>\n        <jvmarg value=\"-Djava.awt.headless=true\"/>\n        <jvmarg value=\"-javaagent:${build.dir.lib}/jars/jamm-${jamm.version}.jar\" />\n        <jvmarg value=\"-ea\"/>\n        <jvmarg value=\"${jvm_xss}\"/>\n        <jvmarg value=\"-Dcassandra.memtable_row_overhead_computation_step=100\"/>\n        <jvmarg value=\"-Dcassandra.test.use_prepared=${cassandra.test.use_prepared}\"/>\n        <jvmarg value=\"-Dcassandra.skip_sync=true\" />\n        <classpath>\n          <path refid=\"cassandra.classpath.test\" />\n          <pathelement location=\"${test.classes}\"/>\n          <pathelement location=\"${test.conf}\"/>\n          <fileset dir=\"${test.lib}\">\n            <include name=\"**/*.jar\" />\n          </fileset>\n        </classpath>\n        <batchtest todir=\"${build.test.output.dir}\">\n            <fileset dir=\"${test.unit.src}\" includes=\"**/cql3/*Test.java\">\n                <contains text=\"CQLTester\" casesensitive=\"yes\"/>\n            </fileset>\n        </batchtest>\n      </junit>\n      <fail message=\"Some CQL test(s) failed.\">\n        <condition>\n            <and>\n            <isset property=\"testfailed\"/>\n            <not>\n              <isset property=\"ant.test.failure.ignore\"/>\n            </not>\n          </and>\n        </condition>\n      </fail>\n    </sequential>\n  </target>\n\n  <!-- Use this with an simple class name for test class, and an optional csv list of methods like this:\n    ant cql-test-some -Dtest.name=ListsTest\n    ant cql-test-some -Dtest.name=ListsTest -Dtest.methods=testPrecisionTime_getNext_simple\n  -->\n  <target name=\"cql-test-some\" depends=\"maybe-build-test\" description=\"Execute specific CQL tests\" >\n    <sequential>\n      <echo message=\"running ${test.methods} tests from ${test.name}\"/>\n      <mkdir dir=\"${build.test.dir}/cassandra\"/>\n      <mkdir dir=\"${build.test.output.dir}\"/>\n      <junit fork=\"on\" forkmode=\"once\" failureproperty=\"testfailed\" maxmemory=\"1024m\" timeout=\"${test.timeout}\">\n        <formatter type=\"brief\" usefile=\"false\"/>\n        <jvmarg value=\"-Dstorage-config=${test.conf}\"/>\n        <jvmarg value=\"-Djava.awt.headless=true\"/>\n        <jvmarg value=\"-javaagent:${build.dir.lib}/jars/jamm-${jamm.version}.jar\" />\n        <jvmarg value=\"-ea\"/>\n        <jvmarg value=\"${jvm_xss}\"/>\n        <jvmarg value=\"-Dcassandra.test.use_prepared=${cassandra.test.use_prepared}\"/>\n        <jvmarg value=\"-Dcassandra.memtable_row_overhead_computation_step=100\"/>\n        <jvmarg value=\"-Dcassandra.skip_sync=true\" />\n        <classpath>\n          <path refid=\"cassandra.classpath.test\" />\n          <pathelement location=\"${test.classes}\"/>\n          <pathelement location=\"${test.conf}\"/>\n          <fileset dir=\"${test.lib}\">\n            <include name=\"**/*.jar\" />\n          </fileset>\n        </classpath>\n        <test unless:blank=\"${test.methods}\" name=\"org.apache.cassandra.cql3.${test.name}\" methods=\"${test.methods}\" todir=\"${build.test.output.dir}\"/>\n        <test if:blank=\"${test.methods}\" name=\"org.apache.cassandra.cql3.${test.name}\" todir=\"${build.test.output.dir}\"/>\n      </junit>\n    </sequential>\n  </target>\n\n  <!-- Use JaCoCo ant extension without needing externally saved lib -->\n  <target name=\"jacoco-init\" depends=\"resolver-init\">\n    <typedef uri=\"antlib:org.jacoco.ant\" classpathref=\"jacocoant.classpath\"/>\n  </target>\n\n  <target name=\"jacoco-merge\" depends=\"jacoco-init\">\n    <jacoco:merge destfile=\"${jacoco.finalexecfile}\" xmlns:jacoco=\"antlib:org.jacoco.ant\">\n        <fileset dir=\"${jacoco.export.dir}\" includes=\"*.exec,**/*.exec\"/>\n    </jacoco:merge>\n  </target>\n\n  <target name=\"jacoco-report\" depends=\"jacoco-merge\">\n    <jacoco:report xmlns:jacoco=\"antlib:org.jacoco.ant\">\n      <executiondata>\n        <file file=\"${jacoco.finalexecfile}\" />\n      </executiondata>\n      <structure name=\"JaCoCo Cassandara Coverage Report\">\n        <classfiles>\n          <fileset dir=\"${build.classes.main}\">\n            <include name=\"**/*.class\"/>\n          </fileset>\n        </classfiles>\n        <sourcefiles encoding=\"UTF-8\">\n          <dirset dir=\"${build.src}\">\n            <include name=\"java\"/>\n            <include name=\"gen-java\"/>\n          </dirset>\n        </sourcefiles>\n      </structure>\n      <!-- to produce reports in different formats. -->\n      <html destdir=\"${jacoco.export.dir}\" />\n      <csv destfile=\"${jacoco.export.dir}/report.csv\" />\n      <xml destfile=\"${jacoco.export.dir}/report.xml\" />\n    </jacoco:report>\n  </target>\n\n  <target name=\"jacoco-cleanup\" description=\"Destroy JaCoCo exec data and reports\">\n    <delete file=\"${jacoco.partialexecfile}\"/>\n    <delete dir=\"${jacoco.export.dir}\"/>\n  </target>\n\n  <target name=\"javadoc\" depends=\"build\" description=\"Create javadoc\" unless=\"no-javadoc\">\n    <create-javadoc destdir=\"${javadoc.dir}\">\n      <filesets>\n        <fileset dir=\"${build.src.java}\" defaultexcludes=\"yes\">\n          <include name=\"org/apache/**/*.java\"/>\n        </fileset>\n      </filesets>\n    </create-javadoc>\n   </target>\n\n  <!-- Run tests and reports errors and generates a junit report after -->\n  <macrodef name=\"testmacro\">\n    <attribute name=\"inputdir\" />\n    <attribute name=\"timeout\" default=\"${test.timeout}\" />\n    <attribute name=\"forkmode\" default=\"perTest\"/>\n    <attribute name=\"showoutput\" default=\"true\"/>\n    <element name=\"optjvmargs\" implicit=\"true\" optional=\"true\" />\n    <attribute name=\"filter\" default=\"**/${test.name}.java\"/>\n    <attribute name=\"exclude\" default=\"\" />\n    <attribute name=\"filelist\" default=\"\" />\n    <attribute name=\"testtag\" default=\"\"/>\n\n    <sequential>\n      <testmacrohelper inputdir=\"@{inputdir}\" timeout=\"@{timeout}\"\n                       forkmode=\"@{forkmode}\" filter=\"@{filter}\"\n                       exclude=\"@{exclude}\" filelist=\"@{filelist}\"\n                       testtag=\"@{testtag}\" showoutput=\"false\" >\n          <optjvmargs/>\n      </testmacrohelper>\n      <fail message=\"Some test(s) failed.\">\n        <condition>\n            <and>\n            <isset property=\"testfailed\"/>\n            <not>\n              <isset property=\"ant.test.failure.ignore\"/>\n            </not>\n          </and>\n        </condition>\n      </fail>\n    </sequential>\n  </macrodef>\n\n  <target name=\"test\" depends=\"maybe-build-test\" description=\"Test Runner\">\n    <path id=\"all-test-classes-path\">\n      <fileset dir=\"${test.unit.src}\" includes=\"**/${test.name}.java\" excludes=\"**/distributed/test/UpgradeTest*.java\" />\n    </path>\n    <property name=\"all-test-classes\" refid=\"all-test-classes-path\"/>\n    <testhelper testdelegate=\"testlist\"/>\n  </target>\n\n  <!-- run a list of tests as provided in -Dtest.classlistfile (or default of 'testnames.txt')\n  The class list file should be one test class per line, with the path starting after test/unit\n  e.g. org/apache/cassandra/hints/HintMessageTest.java -->\n  <target name=\"testclasslist\" depends=\"maybe-build-test\" description=\"Run tests given in file -Dtest.classlistfile (one-class-per-line, e.g. org/apache/cassandra/db/SomeTest.java)\">\n    <path id=\"all-test-classes-path\">\n      <fileset dir=\"${test.dir}/${test.classlistprefix}\" includesfile=\"${test.classlistfile}\"/>\n    </path>\n    <property name=\"all-test-classes\" refid=\"all-test-classes-path\"/>\n    <testhelper testdelegate=\"testlist\"/>\n  </target>\n  <target name=\"testclasslist-oa\" depends=\"maybe-build-test\" description=\"Run tests given in file -Dtest.classlistfile (one-class-per-line, e.g. org/apache/cassandra/db/SomeTest.java)\">\n    <path id=\"all-test-classes-path\">\n      <fileset dir=\"${test.dir}/${test.classlistprefix}\" includesfile=\"${test.classlistfile}\"/>\n    </path>\n    <property name=\"all-test-classes\" refid=\"all-test-classes-path\"/>\n    <testhelper testdelegate=\"testlist-oa\"/>\n  </target>\n  <target name=\"testclasslist-compression\" depends=\"maybe-build-test\" description=\"Run tests given in file -Dtest.classlistfile (one-class-per-line, e.g. org/apache/cassandra/db/SomeTest.java)\">\n      <path id=\"all-test-classes-path\">\n          <fileset dir=\"${test.dir}/${test.classlistprefix}\" includesfile=\"${test.classlistfile}\"/>\n      </path>\n      <property name=\"all-test-classes\" refid=\"all-test-classes-path\"/>\n      <testhelper testdelegate=\"testlist-compression\"/>\n  </target>\n  <target name=\"testclasslist-latest\" depends=\"maybe-build-test\" description=\"Run tests given in file -Dtest.classlistfile (one-class-per-line, e.g. org/apache/cassandra/db/SomeTest.java)\">\n    <path id=\"all-test-classes-path\">\n        <fileset dir=\"${test.dir}/${test.classlistprefix}\" includesfile=\"${test.classlistfile}\"/>\n    </path>\n    <property name=\"all-test-classes\" refid=\"all-test-classes-path\"/>\n    <testhelper testdelegate=\"testlist-latest\"/>\n  </target>\n  <target name=\"testclasslist-cdc\" depends=\"maybe-build-test\" description=\"Run tests given in file -Dtest.classlistfile (one-class-per-line, e.g. org/apache/cassandra/db/SomeTest.java)\">\n      <path id=\"all-test-classes-path\">\n          <fileset dir=\"${test.dir}/${test.classlistprefix}\" includesfile=\"${test.classlistfile}\"/>\n      </path>\n      <property name=\"all-test-classes\" refid=\"all-test-classes-path\"/>\n      <testhelper testdelegate=\"testlist-cdc\"/>\n  </target>\n  <target name=\"testclasslist-system-keyspace-directory\" depends=\"maybe-build-test\" description=\"Run tests given in file -Dtest.classlistfile (one-class-per-line, e.g. org/apache/cassandra/db/SomeTest.java)\">\n      <path id=\"all-test-classes-path\">\n          <fileset dir=\"${test.dir}/${test.classlistprefix}\" includesfile=\"${test.classlistfile}\"/>\n      </path>\n      <property name=\"all-test-classes\" refid=\"all-test-classes-path\"/>\n      <testhelper testdelegate=\"testlist-system-keyspace-directory\"/>\n  </target>\n\n  <!-- Build a self-contained jar for e.g. remote execution; not currently used for running burn tests with this build script -->\n  <target name=\"burn-test-jar\" depends=\"build-test, build\" description=\"Create dtest-compatible jar, including all dependencies\">\n      <jar jarfile=\"${build.dir}/burntest.jar\">\n          <zipgroupfileset dir=\"${build.lib}\" includes=\"*.jar\" excludes=\"META-INF/*.SF\"/>\n          <fileset dir=\"${build.classes.main}\"/>\n          <fileset dir=\"${test.classes}\"/>\n          <fileset dir=\"${test.conf}\" excludes=\"logback*.xml\"/>\n          <fileset dir=\"${basedir}/conf\" includes=\"logback*.xml\"/>\n          <zipgroupfileset dir=\"${build.dir.lib}/jars\">\n              <include name=\"junit*.jar\"/>\n          </zipgroupfileset>\n      </jar>\n  </target>\n\n  <target name=\"dtest-jar\" depends=\"build-test, build\" description=\"Create dtest-compatible jar, including all dependencies\">\n    <delete dir=\"${build.dir}/dtest/**\" quiet=\"true\"/>\n\n    <copy todir=\"${build.dir}/dtest\" quiet=\"true\" overwrite=\"false\">\n      <fileset dir=\"${build.classes.main}\"/>\n      <fileset dir=\"${test.classes}\"/>\n      <fileset dir=\"${test.conf}\"/>\n    </copy>\n    <unzip dest=\"${build.dir}/dtest\" overwrite=\"false\">\n      <fileset dir=\"${test.lib}/jars\" includes=\"jimfs-1.1.jar,dtest-api-*.jar,asm-*.jar,javassist-*.jar,reflections-*.jar,semver4j-*.jar\"/>\n      <patternset excludes=\"META-INF/license/**\"/>\n    </unzip>\n    <unzip dest=\"${build.dir}/dtest\" overwrite=\"false\">\n      <fileset dir=\"${build.dir.lib}/jars\" includes=\"*.jar\"/>\n      <patternset excludes=\"META-INF/license/**\"/>\n    </unzip>\n\n    <jar jarfile=\"${build.dir}/dtest-${base.version}.jar\" duplicate=\"preserve\">\n      <fileset dir=\"${build.dir}/dtest\">\n        <exclude name=\"META-INF/*.SF\"/>\n        <exclude name=\"META-INF/*.DSA\"/>\n        <exclude name=\"META-INF/*.RSA\"/>\n        <exclude name=\"META-INF/license/**\"/>\n      </fileset>\n    </jar>\n\n    <delete dir=\"${build.dir}/dtest\" quiet=\"true\"/>\n  </target>\n\n  <target name=\"test-jvm-dtest\" depends=\"maybe-build-test\" description=\"Execute in-jvm dtests\">\n    <testmacro inputdir=\"${test.distributed.src}\" timeout=\"${test.distributed.timeout}\" forkmode=\"once\" showoutput=\"true\" filter=\"**/test/${test.name}.java\">\n      <jvmarg value=\"-Dlogback.configurationFile=test/conf/logback-dtest.xml\"/>\n      <jvmarg value=\"-Dcassandra.ring_delay_ms=10000\"/>\n      <jvmarg value=\"-Dcassandra.tolerate_sstable_size=true\"/>\n      <jvmarg value=\"-Dcassandra.skip_sync=true\" />\n      <jvmarg value=\"-Xmx8G\"/>\n    </testmacro>\n  </target>\n\n  <target name=\"test-jvm-dtest-latest\" depends=\"maybe-build-test\" description=\"Execute in-jvm dtests with latest configuration\">\n    <testmacro inputdir=\"${test.distributed.src}\" timeout=\"${test.distributed.timeout}\" forkmode=\"once\" showoutput=\"true\" filter=\"**/test/${test.name}.java\">\n      <jvmarg value=\"-Djvm_dtests.latest=true\"/>\n      <jvmarg value=\"-Dlogback.configurationFile=test/conf/logback-dtest.xml\"/>\n      <jvmarg value=\"-Dcassandra.ring_delay_ms=10000\"/>\n      <jvmarg value=\"-Dcassandra.tolerate_sstable_size=true\"/>\n      <jvmarg value=\"-Dcassandra.skip_sync=true\" />\n    </testmacro>\n  </target>\n\n    <property name=\"simulator.asm.print\" value=\"none\"/> <!-- Supports: NONE, CLASS_SUMMARY, CLASS_DETAIL, METHOD_SUMMARY, METHOD_DETAIL, ASM; see org.apache.cassandra.simulator.asm.MethodLogger.Level -->\n  <target name=\"test-simulator-dtest\" depends=\"maybe-build-test\" description=\"Execute simulator dtests\">\n    <testmacro inputdir=\"${test.simulator-test.src}\" timeout=\"${test.simulation.timeout}\" forkmode=\"perTest\" showoutput=\"true\" filter=\"**/test/${test.name}.java\">\n      <jvmarg value=\"-Dlogback.configurationFile=test/conf/logback-simulator.xml\"/>\n      <jvmarg value=\"-Dcassandra.ring_delay_ms=10000\"/>\n      <jvmarg value=\"-Dcassandra.tolerate_sstable_size=true\"/>\n      <jvmarg value=\"-Dcassandra.skip_sync=true\" />\n      <jvmarg value=\"-Dcassandra.debugrefcount=false\"/>\n      <jvmarg value=\"-Dcassandra.test.simulator.determinismcheck=strict\"/>\n      <jvmarg value=\"-Dcassandra.test.simulator.print_asm=${simulator.asm.print}\" />\n      <!-- Support Simulator Tests -->\n      <jvmarg line=\"-javaagent:${test.lib}/jars/simulator-asm.jar\"/>\n      <jvmarg line=\"-Xbootclasspath/a:${test.lib}/jars/simulator-bootstrap.jar\"/>\n      <jvmarg line=\"-XX:ActiveProcessorCount=4\"/>\n      <jvmarg line=\"-XX:-TieredCompilation\"/>\n      <jvmarg line=\"-XX:-BackgroundCompilation\"/>\n      <jvmarg line=\"-XX:CICompilerCount=1\"/>\n      <jvmarg line=\"-XX:Tier4CompileThreshold=1000\"/>\n      <jvmarg line=\"-XX:ReservedCodeCacheSize=256M\"/>\n      <jvmarg line=\"-Xmx8G\"/>\n      <!-- Harry tests kept failing due to direct memory failures and looks like its undersized... so upping to allow more stable runs -->\n      <jvmarg line=\"-XX:MaxDirectMemorySize=8G\"/>\n    </testmacro>\n  </target>\n\n  <!-- To run them you'll need to:\n         - `ant dtest-jar` on each version involved, including your current feature branch\n         - copy the build/dtest-*.jar for each version into your feature branch build folder\n         - You can use 'test-jvm-dtest-some' if you only need to run one -->\n  <target name=\"test-jvm-upgrade-dtest\" depends=\"maybe-build-test\" description=\"Execute in-jvm dtests\">\n    <testmacro inputdir=\"${test.distributed.src}\" timeout=\"${test.distributed.timeout}\" forkmode=\"once\" showoutput=\"true\" filter=\"**/upgrade/*Test.java\">\n      <jvmarg value=\"-Dlogback.configurationFile=test/conf/logback-dtest.xml\"/>\n      <jvmarg value=\"-Dcassandra.ring_delay_ms=10000\"/>\n      <jvmarg value=\"-Dcassandra.tolerate_sstable_size=true\"/>\n      <jvmarg value=\"-Dcassandra.skip_sync=true\" />\n      <jvmarg value=\"-Xmx8G\"/>\n    </testmacro>\n  </target>\n\n  <!-- Use this with an FQDN for test class or upgrade test, and an optional csv list of methods like this:\n      ant test-jvm-dtest-some -Dtest.name=org.apache.cassandra.distributed.test.ResourceLeakTest\n      ant test-jvm-dtest-some -Dtest.name=org.apache.cassandra.distributed.test.ResourceLeakTest -Dtest.methods=looperTest\n    -->\n  <target name=\"test-jvm-dtest-some\" depends=\"maybe-build-test\" description=\"Execute some in-jvm dtests\">\n    <testmacro inputdir=\"${test.distributed.src}\" timeout=\"${test.distributed.timeout}\" forkmode=\"once\" showoutput=\"true\">\n      <test unless:blank=\"${test.methods}\" name=\"${test.name}\" methods=\"${test.methods}\" todir=\"${build.test.output.dir}/\" outfile=\"TEST-${test.name}-${test.methods}\"/>\n      <test if:blank=\"${test.methods}\" name=\"${test.name}\" todir=\"${build.test.output.dir}/\" outfile=\"TEST-${test.name}\"/>\n      <jvmarg value=\"-Dlogback.configurationFile=test/conf/logback-dtest.xml\"/>\n      <jvmarg value=\"-Dcassandra.ring_delay_ms=10000\"/>\n      <jvmarg value=\"-Dcassandra.tolerate_sstable_size=true\"/>\n      <jvmarg value=\"-Dcassandra.skip_sync=true\" />\n      <jvmarg value=\"-Xmx8G\"/>\n    </testmacro>\n  </target>\n\n  <target name=\"test-jvm-dtest-latest-some\" depends=\"maybe-build-test\" description=\"Execute some in-jvm dtests with latest configuration\">\n    <testmacro inputdir=\"${test.distributed.src}\" timeout=\"${test.distributed.timeout}\" forkmode=\"once\" showoutput=\"true\">\n      <test unless:blank=\"${test.methods}\" name=\"${test.name}\" methods=\"${test.methods}\" todir=\"${build.test.output.dir}/\" outfile=\"TEST-${test.name}-${test.methods}\"/>\n      <test if:blank=\"${test.methods}\" name=\"${test.name}\" todir=\"${build.test.output.dir}/\" outfile=\"TEST-${test.name}\"/>\n      <jvmarg value=\"-Djvm_dtests.latest=true\"/>\n      <jvmarg value=\"-Dlogback.configurationFile=test/conf/logback-dtest.xml\"/>\n      <jvmarg value=\"-Dcassandra.ring_delay_ms=10000\"/>\n      <jvmarg value=\"-Dcassandra.tolerate_sstable_size=true\"/>\n      <jvmarg value=\"-Dcassandra.skip_sync=true\" />\n    </testmacro>\n  </target>\n\n  <target name=\"generate-test-report\" description=\"Merge all unit xml files into one, generate html pages, and print summary test numbers\">\n      <echo message=\"Generating Test Summary for test files found under ${build.test.output.dir}\" />\n      <mkdir dir=\"${build.test.report.dir}/unitTestReport\"/>\n      <junitreport todir=\"${build.test.report.dir}/unitTestReport\">\n          <fileset dir=\"${build.test.output.dir}\">\n              <include name=\"**/TEST-*.xml\"/>\n              <include name=\"**/cqlshlib*.xml\"/>\n              <include name=\"**/nosetests*.xml\"/>\n          </fileset>\n          <report todir=\"${build.test.report.dir}/unitTestReport/html\" unless:true=\"${print-summary.skip}\" />\n      </junitreport>\n      <!-- concat the report through a filter chain to extract a single line summary -->\n      <concat unless:true=\"${print-summary.skip}\">\n          <fileset file=\"${build.test.report.dir}/unitTestReport/html/overview-summary.html\" />\n          <filterchain>\n              <linecontainsregexp>\n                  <regexp pattern='title=\"Display all tests\"' />\n              </linecontainsregexp>\n              <tokenfilter>\n                  <!-- escaped values of < and > are \"&gt;\" and \"&lt;\" -->\n                  <replaceregex pattern='.*all tests.*&gt;(\\d+)&lt;.*all failures.*&gt;(\\d+)&lt;.*all errors.*&gt;(\\d+)&lt;.*all skipped test.*&gt;(\\d+)&lt;.*$' replace=\"[Test Summary] Run: \\1, Failed: \\2, Errors: \\3, Skipped: \\4\" />\n              </tokenfilter>\n          </filterchain>\n      </concat>\n  </target>\n\n  <target name=\"microbench\" depends=\"jar\">\n    <antcall target=\"-microbench\" inheritrefs=\"true\"/>\n  </target>\n\n  <target name=\"microbench-with-profiler\" depends=\"jar\">\n    <antcall target=\"-microbench-with-profiler\" inheritrefs=\"true\"/>\n  </target>\n\n  <!-- run arbitrary mains in tests, for example to run the long running memory tests with lots of memory pressure\n      ant run-main -Dmainclass=org.apache.cassandra.utils.memory.LongBufferPoolTest -Dvmargs=\"-Xmx30m -XX:-UseGCOverheadLimit\"\n  -->\n  <target name=\"run-main\" depends=\"maybe-build-test\">\n      <property name=\"mainclass\" value=\"\" />\n      <property name=\"vmargs\" value=\"\" />\n      <property name=\"args\" value=\"\" />\n      <java classname=\"${mainclass}\"\n            fork=\"true\"\n            failonerror=\"true\">\n          <jvmarg value=\"-server\" />\n          <jvmarg value=\"-ea\" />\n          <jvmarg line=\"${vmargs}\" />\n          <arg line=\"${args}\" />\n          <classpath>\n              <path refid=\"cassandra.classpath\" />\n              <pathelement location=\"${test.classes}\"/>\n              <pathelement location=\"${test.conf}\"/>\n              <fileset dir=\"${test.lib}\">\n                  asm-<include name=\"**/*.jar\" />\n              </fileset>\n          </classpath>\n      </java>\n  </target>\n\n  <target name=\"_maybe_update_idea_to_java11plus\" depends=\"init\">\n    <replace file=\"${eclipse.project.name}.iml\" token=\"JDK_11\" value=\"JDK_${ant.java.version}\"/>\n    <replace file=\".idea/misc.xml\" token=\"JDK_11\" value=\"JDK_${ant.java.version}\"/>\n    <replace file=\".idea/misc.xml\" token=\"11\" value=\"${ant.java.version}\"/>\n    <replaceregexp file=\".idea/workspace.xml\"\n                   match=\"name=&quot;VM_PARAMETERS&quot; value=&quot;(.*)\"\n                   replace=\"name=&quot;VM_PARAMETERS&quot; value=&quot;\\1 ${java-jvmargs} ${_std-test-jvmargs}\"\n                   byline=\"true\"/>\n\n      <echo file=\".idea/compiler.xml\"><![CDATA[<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"JavacSettings\">\n    <option name=\"ADDITIONAL_OPTIONS_STRING\" value=\"--add-exports java.rmi/sun.rmi.registry=ALL-UNNAMED\n                                                    --add-exports java.rmi/sun.rmi.transport=ALL-UNNAMED\n                                                    --add-exports java.rmi/sun.rmi.transport.tcp=ALL-UNNAMED\n                                                    --add-exports java.base/jdk.internal.ref=ALL-UNNAMED\n                                                    --add-exports java.base/sun.nio.ch=ALL-UNNAMED\" />\n  </component>\n</project>]]></echo>\n  </target>\n\n  <!-- Generate IDEA project description files -->\n  <target name=\"generate-idea-files\" depends=\"init,resolver-dist-lib,gen-cql3-grammar,generate-jflex-java,_createVersionPropFile\" description=\"Generate IDEA files\">\n    <delete dir=\".idea\"/>\n    <delete file=\"${eclipse.project.name}.iml\"/>\n    <mkdir dir=\".idea\"/>\n    <mkdir dir=\".idea/libraries\"/>\n    <copy todir=\".idea\" overwrite=\"true\">\n        <fileset dir=\"ide/idea\"/>\n    </copy>\n    <replace file=\".idea/workspace.xml\" token=\"trunk\" value=\"${eclipse.project.name}\"/>\n    <replace file=\".idea/workspace.xml\" token=\"-Dcassandra.use_nix_recursive_delete=true\" value=\"-Dcassandra.use_nix_recursive_delete=${cassandra.use_nix_recursive_delete}\"/>\n    <copy tofile=\"${eclipse.project.name}.iml\" file=\"ide/idea-iml-file.xml\"/>\n    <echo file=\".idea/.name\">Apache Cassandra ${eclipse.project.name}</echo>\n    <echo file=\".idea/modules.xml\"><![CDATA[<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"ProjectModuleManager\">\n    <modules>\n      <module fileurl=\"file://$PROJECT_DIR$/]]>${eclipse.project.name}<![CDATA[.iml\" filepath=\"$PROJECT_DIR$/]]>${eclipse.project.name}<![CDATA[.iml\" />\n    </modules>\n  </component>\n</project>]]></echo>\n      <antcall target=\"_maybe_update_idea_to_java11plus\"/>\n      <echo>\n      IDE configuration in .idea/ updated for use with JDK${ant.java.version}.\n\n      In IntelliJ verify that the SDK is ${ant.java.version}, and its path is valid.\n      This can be verified in 'Project Structure/Project Setting/Project' and 'Project Structure/Platform Setting/SDKs'.\n      </echo>\n  </target>\n\n  <!-- Generate Eclipse project description files -->\n  <target name=\"generate-eclipse-files\" depends=\"build-test\" description=\"Generate eclipse files\">\n    <echo file=\".project\"><![CDATA[<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<projectDescription>\n  <name>${eclipse.project.name}</name>\n  <comment></comment>\n  <projects>\n  </projects>\n  <buildSpec>\n    <buildCommand>\n      <name>org.eclipse.jdt.core.javabuilder</name>\n    </buildCommand>\n  </buildSpec>\n  <natures>\n    <nature>org.eclipse.jdt.core.javanature</nature>\n  </natures>\n</projectDescription>]]>\n    </echo>\n    <path id=\"eclipse-project-libs-path\">\n        <fileset dir=\"lib\">\n            <include name=\"**/*.jar\" />\n        </fileset>\n        <fileset dir=\"${build.dir.lib}/jars\">\n            <include name=\"**/*.jar\" />\n        </fileset>\n        <fileset dir=\"${test.lib}/jars\">\n            <include name=\"**/*.jar\" />\n        </fileset>\n    </path>\n    <pathconvert property=\"eclipse-libs-list\" refid=\"eclipse-project-libs-path\" pathsep=\"${line.separator}\">\n        <mapper>\n            <regexpmapper from=\"^(.*)$$\" to='&lt;classpathentry kind=\"lib\" path=\"\\1\\\" \\/&gt;'/>\n        </mapper>\n    </pathconvert>\n    <property name=\"eclipse-project-libs\" refid=\"eclipse-project-libs-path\"/>\n    <echo file=\".classpath\"><![CDATA[<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<classpath>\n  <classpathentry kind=\"src\" path=\"src/java\"/>\n  <classpathentry kind=\"src\" path=\"src/resources\"/>\n  <classpathentry kind=\"src\" path=\"src/gen-java\"/>\n  <classpathentry kind=\"src\" path=\"conf\" including=\"hotspot_compiler\"/>\n  <classpathentry kind=\"src\" output=\"${test.classes}\" path=\"test/unit\"/>\n  <classpathentry kind=\"src\" output=\"${test.classes}\" path=\"test/long\"/>\n  <classpathentry kind=\"src\" output=\"${test.classes}\" path=\"test/microbench\"/>\n  <classpathentry kind=\"src\" output=\"${test.classes}\" path=\"test/memory\"/>\n  <classpathentry kind=\"src\" output=\"${test.classes}\" path=\"test/burn\"/>\n  <classpathentry kind=\"src\" output=\"${test.classes}\" path=\"test/anttasks\"/>\n  <classpathentry kind=\"src\" output=\"${test.classes}\" path=\"test/distributed\"/>\n  <classpathentry kind=\"src\" output=\"${test.classes}\" path=\"test/simulator/asm\"/>\n  <classpathentry kind=\"src\" output=\"${test.classes}\" path=\"test/simulator/main\"/>\n  <classpathentry kind=\"src\" output=\"${test.classes}\" path=\"test/resources\" />\n  <classpathentry kind=\"src\" path=\"tools/stress/src\"/>\n  <classpathentry kind=\"src\" path=\"tools/fqltool/src\"/>\n  <classpathentry kind=\"src\" output=\"build/test/stress-classes\" path=\"tools/stress/test/unit\" />\n  <classpathentry kind=\"src\" output=\"build/test/fqltool-classes\" path=\"tools/fqltool/test/unit\" />\n  <classpathentry kind=\"con\" path=\"org.eclipse.jdt.launching.JRE_CONTAINER\"/>\n  <classpathentry kind=\"output\" path=\"build/classes/eclipse\"/>\n  <classpathentry kind=\"lib\" path=\"test/conf\"/>\n  <classpathentry kind=\"lib\" path=\"${java.home}/../lib/tools.jar\"/>\n  ${eclipse-libs-list}\n</classpath>\n]]>\n\t</echo>\n    <taskdef name=\"echoeclipseprojectslibs\" classname=\"org.apache.cassandra.anttasks.EchoEclipseProjectLibs\" classpath=\"${test.classes}\">\n        <classpath>\n            <path refid=\"cassandra.classpath\"/>\n            <path refid=\"cassandra.classpath.test\"/>\n        </classpath>\n    </taskdef>\n    <mkdir dir=\".settings\" />\n  </target>\n\n  <pathconvert property=\"eclipse.project.name\">\n    <path path=\"${basedir}\" />\n    <regexpmapper from=\"^.*/([^/]+)$$\" to=\"\\1\" handledirsep=\"yes\" />\n  </pathconvert>\n\n  <!-- Clean Eclipse project description files -->\n  <target name=\"clean-eclipse-files\">\n    <delete file=\".project\" />\n    <delete file=\".classpath\" />\n    <delete dir=\".settings\" />\n  \t<delete dir=\".externalToolBuilders\" />\n  \t<delete dir=\"build/eclipse-classes\" />\n  </target>\n\n  <!-- Empty fake task until we remove it from Jenkins. eclipse-warnings removed in favor of using CheckerFramework\n      For more information - CASSANDRA-18190 and CASSANDDRA-18239-->\n  <target name=\"eclipse-warnings\" depends=\"build\" description=\"Run eclipse compiler code analysis\" if=\"java.version.8\">  </target>\n\n  <!-- Installs artifacts to local Maven repository -->\n  <target name=\"mvn-install\"\n          depends=\"jar,sources-jar,javadoc-jar\"\n          description=\"Installs the artifacts in the Maven Local Repository\">\n\n    <!-- the parent -->\n    <install pomFile=\"${build.dir}/${final.name}-parent.pom\"\n             file=\"${build.dir}/${final.name}-parent.pom\"\n             packaging=\"pom\"/>\n\n    <!-- the cassandra-all jar -->\n    <install pomFile=\"${build.dir}/${final.name}.pom\"\n             file=\"${build.dir}/${final.name}.jar\"/>\n    <install pomFile=\"${build.dir}/${final.name}.pom\"\n             file=\"${build.dir}/${final.name}-sources.jar\"\n             classifier=\"sources\"/>\n    <install pomFile=\"${build.dir}/${final.name}.pom\"\n             file=\"${build.dir}/${final.name}-javadoc.jar\"\n             classifier=\"javadoc\"/>\n  </target>\n\n  <!-- Publish artifacts to remote Maven repository -->\n  <target name=\"publish\"\n          depends=\"mvn-install,artifacts\"\n          description=\"Publishes the artifacts to the Maven repository\">\n\n    <!-- the parent -->\n    <deploy pomFile=\"${build.dir}/${final.name}-parent.pom\"\n            file=\"${build.dir}/${final.name}-parent.pom\"\n            packaging=\"pom\"/>\n\n    <!-- the cassandra-all jar -->\n    <deploy pomFile=\"${build.dir}/${final.name}.pom\"\n            file=\"${build.dir}/${final.name}.jar\"/>\n    <deploy pomFile=\"${build.dir}/${final.name}.pom\"\n            file=\"${build.dir}/${final.name}-sources.jar\"\n            classifier=\"sources\"/>\n    <deploy pomFile=\"${build.dir}/${final.name}.pom\"\n            file=\"${build.dir}/${final.name}-javadoc.jar\"\n            classifier=\"javadoc\"/>\n\n    <!-- the distribution -->\n    <sign-dist file=\"${build.dir}/${final.name}-bin.tar.gz\" />\n    <sign-dist file=\"${build.dir}/${final.name}-src.tar.gz\" />\n\n  </target>\n\n  <import file=\"${build.helpers.dir}/build-resolver.xml\"/>\n  <import file=\"${build.helpers.dir}/build-rat.xml\"/>\n  <import file=\"${build.helpers.dir}/build-owasp.xml\"/>\n  <import file=\"${build.helpers.dir}/build-git.xml\"/>\n  <import file=\"${build.helpers.dir}/build-checkstyle.xml\"/>\n  <import file=\"${build.helpers.dir}/build-cqlsh.xml\"/>\n  <import file=\"${build.helpers.dir}/build-bench.xml\"/>\n  <import file=\"${build.helpers.dir}/build-sonar.xml\"/>\n</project>\n"
        },
        {
          "name": "ci",
          "type": "tree",
          "content": null
        },
        {
          "name": "conf",
          "type": "tree",
          "content": null
        },
        {
          "name": "debian",
          "type": "tree",
          "content": null
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "ide",
          "type": "tree",
          "content": null
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "pylib",
          "type": "tree",
          "content": null
        },
        {
          "name": "redhat",
          "type": "tree",
          "content": null
        },
        {
          "name": "relocate-dependencies.pom",
          "type": "blob",
          "size": 5.640625,
          "content": "<!--\n#\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n-->\n\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n\n    <groupId>org.apache.cassandra</groupId>\n    <artifactId>cassandra-dtest-shaded</artifactId>\n    <version>4.0.1-SNAPSHOT</version>\n    <packaging>jar</packaging>\n\n    <name>Cassandra in-jvm dtests shaded jar</name>\n\n    <properties>\n        <project.type>library</project.type>\n        <java.version>1.8</java.version>\n        <test.source.directory>src/test/unit/java</test.source.directory>\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\n\n        <junit.version>4.12</junit.version>\n        <maven.compiler.source>${java.version}</maven.compiler.source>\n        <maven.compiler.target>${java.version}</maven.compiler.target>\n        <dtest-local.version>4.0.0-SNAPSHOT</dtest-local.version>\n    </properties>\n\n    <dependencies>\n\n        <dependency>\n            <groupId>org.apache.cassandra</groupId>\n            <artifactId>cassandra-dtest-local</artifactId>\n            <version>${dtest-local.version}</version>\n        </dependency>\n\n        <dependency>\n            <groupId>junit</groupId>\n            <artifactId>junit</artifactId>\n            <version>${junit.version}</version>\n            <scope>test</scope>\n        </dependency>\n\n    </dependencies>\n\n    <build>\n        <testSourceDirectory>${test.source.directory}</testSourceDirectory>\n\n        <plugins>\n            <!-- generate a shaded JAR -->\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-shade-plugin</artifactId>\n                <version>3.4.1</version>\n\n                <configuration>\n                    <createSourcesJar>false</createSourcesJar>\n\n                    <artifactSet>\n                        <includes>\n                            <include>org.apache.cassandra:cassandra-dtest-local</include>\n                        </includes>\n                    </artifactSet>\n\n                    <relocations>\n                        <relocation>\n                            <pattern>io.netty</pattern>\n                            <shadedPattern>relocated.shaded.io.netty</shadedPattern>\n                        </relocation>\n\n                        <relocation>\n                            <pattern>com.google</pattern>\n                            <shadedPattern>relocated.shaded.com.google</shadedPattern>\n                        </relocation>\n\n                        <relocation>\n                            <pattern>com.datastax</pattern>\n                            <shadedPattern>relocated.shaded.com.datastax</shadedPattern>\n                        </relocation>\n                    </relocations>\n\n                    <filters>\n                        <filter>\n                            <artifact>*:*</artifact>\n                            <excludes>\n                                <exclude>**/Log4j2Plugins.dat</exclude>\n                            </excludes>\n                        </filter>\n\n                        <filter>\n                            <artifact>io.netty:netty-*</artifact>\n                            <excludes>\n                                <exclude>META-INF/maven/</exclude>\n                                <exclude>META-INF/io.netty.versions.properties</exclude>\n                            </excludes>\n                        </filter>\n\n                        <filter>\n                            <artifact>com.google.guava:guava</artifact>\n                            <excludes>\n                                <exclude>META-INF/maven/</exclude>\n                            </excludes>\n                        </filter>\n\n                        <filter>\n                            <artifact>com.google.guava:failureaccess</artifact>\n                            <excludes>\n                                <exclude>META-INF/maven/</exclude>\n                            </excludes>\n                        </filter>\n\n                        <filter>\n                            <artifact>com.datastax.cassandra:cassandra-driver-core</artifact>\n                            <excludes>\n                                <exclude>META-INF/maven/</exclude>\n                            </excludes>\n                        </filter>\n\n                    </filters>\n                </configuration>\n\n                <executions>\n                    <execution>\n                        <phase>package</phase>\n                        <goals>\n                            <goal>shade</goal>\n                        </goals>\n                        <configuration>\n\n                        </configuration>\n                    </execution>\n                </executions>\n\n            </plugin>\n        </plugins>\n    </build>\n</project>\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}