{
  "metadata": {
    "timestamp": 1736708696192,
    "page": 123,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "geeeeeeeeek/WeChatLuckyMoney",
      "stars": 7200,
      "defaultBranch": "stable",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.142578125,
          "content": "*.imi\n.gradle\n/local.properties\n/.idea/workspace.xml\n/.idea/libraries\n.DS_Store\n/build\n/captures\n/.idea/dictionaries\n/monkeytong.jks\n/app/release\n"
        },
        {
          "name": ".idea",
          "type": "tree",
          "content": null
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 1.736328125,
          "content": "language: android\nsudo: false\njdk: oraclejdk8\nenv:\n  matrix:\n  - ANDROID_TARGET=android-26  ANDROID_ABI=armeabi-v7a armeabi\nandroid:\n  components:\n  - platform-tools\n  - tools\n  - build-tools-26.0.2\n  - android-N\n  - extra\nlicenses:\n- android-sdk-license-.+\n- .+\nbefore_install:\n- openssl aes-256-cbc -K $encrypted_6b42a8524af0_key -iv $encrypted_6b42a8524af0_iv\n -in monkeytong.jks.enc -out monkeytong.jks -d\nbefore_script:\n- mkdir \"$ANDROID_HOME/licenses\" || true\n- echo -e \"\\n8933bad161af4178b1185d1a37fbf41ea5269c55\" > \"$ANDROID_HOME/licenses/android-sdk-license\"\n- echo -e \"\\n84831b9409646a918e30573bab4c9c91346d8abd\" > \"$ANDROID_HOME/licenses/android-sdk-preview-license\"\n- gem install fir-cli\nscript:\n- ./gradlew assembleRelease\ndeploy:\n  provider: releases\n  api_key:\n    secure: Ookr5Qba+FjvrnlHfA2Gp+9QSua/UhkAq+OtYtLagdC7i1Drd7CANi4zfhCf95xSPDNE8MNJQu2qTR4EkHqno6dBFYbV/+35Ph+3Xnv1GehJmdyVDQSfNwlxzKbCw6rfyoeiMrSORADznRlEx7EfK3b7w2esWS/OAvepbqmUzWlPEA8Xyl1CBiMZacqZJTwyhCCO5dNpXE/+pP4yPrUx32Ts0tYQ5HmsijndbWh/YX2SGeekdAWTXBMr/zUpTEcpk8JYukfuTG3qaNZnUk0OEYHv8/icdaTO+wUuj44m9y/0uoir7iToAjEQP+tEnfUAQYke5Di2N2Pa9dpuc2kvmHi2l4wpPDhwrSSAPkI73r1eM8AAl7U2d2G/qG7UGAmXoI4NnDozkCGrHDH4VLH/uSpoJPdsVSOPRZX7lWPIM6xBoz+3AW0mtZbRsduvwvqR24B/xEs9jy02RJin3VQw1qlVYATUvThrNqMUz45AgVvjx00llX6i5As7xkWwLjZSEpr6FWEjOtPg1ZHWBxD/dCHWpcL7nnGAWi2INTUT6NgN9ZpuU0tgHMMMx/7bfUM1EVEpJKjKLyaX8XmsRmztPUYOhRN/m2uEoiiOu54QoD9oszszIlEqT5jneu8LQ1Ie9ICaGF1Mj2CgbWB0hTvKSTPTP1hXF0FHtwmaTDwKKVE=\n  file: app/build/outputs/apk/app-release.apk\n  skip_cleanup: true\n  on:\n    repo: geeeeeeeeek/WeChatLuckyMoney\n    branch: stable\n    tags: true\nnotifications:\n  webhooks:\n    urls:\n    - https://webhooks.gitter.im/e/d83cc8365de0abdd097e\n    on_success: always\n    on_failure: always\n    on_start: always"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 4.9609375,
          "content": "# 更新日志\n\n**[v4.0 (2017.01.27)](https://github.com/geeeeeeeeek/WeChatLuckyMoney/releases/tag/v4.0)**\n\n- 新年快乐！\n- 新增 多语言支持，目前支持中文和英文两种语言\n- 新增 适配部分Android 7.0机型（进行中，华为等部分机型仍不可用）\n- 优化 UI\n- 优化 性能改进\n- 修复 Uber与滴滴合并后优惠链接失效的问题\n- 修复 Bugly高优先级的问题\n- 移除 自动回复功能\n\n**[v3.0 (2016.08.02)](https://github.com/geeeeeeeeek/WeChatLuckyMoney/releases/tag/v3.0.1)**\n\n- 优化 重新设计UI，风格更加简洁明快。提升“社区”和“设置”的视觉优先级，开启插件更顺手。\n- 新增 Uber免费乘车优惠。\n- 新增 适配微信6.3.22。\n- 新增 Android N (牛轧糖) 适配（预计v3.1完成）\n- 修复 Bugly高优先级的问题。\n\n**[v2.3 (2016.02.07)](https://github.com/geeeeeeeeek/WeChatLuckyMoney/releases/tag/v2.3)**\n\n- 优化 不打开拜年红包\n- 紧急修复了Bugly上几个高优先级的问题，减少Crash出现\n\n**[v2.2 (2016.02.04)](https://github.com/geeeeeeeeek/WeChatLuckyMoney/releases/tag/v2.2)**\n\n- 新增 延时拆开红包的可选项\n- 新增 跳转至浏览器打开的入口\n- 新增 接入腾讯Bugly\n- 新增 自动回复的可选项(实验中)\n- 优化 手动拆开的红包不返回\n- 优化 适配三星等坑爹机型 (感谢 [@firesunCN](https://github.com/firesunCN) 对这项修改的贡献)\n- 修复 拆开红包后的多次返回问题\n\n\n**[v2.1 (2016.01.30)](https://github.com/geeeeeeeeek/WeChatLuckyMoney/releases/tag/v2.1.1)**\n- 新增 屏蔽指定红包文字的可选项\n- 新增 息屏抢红包的可选项\n- 新增 不拆开自己发的红包的可选项\n- 新增 内置红包攻略\n- 新增 所有链接默认用内置WebView打开\n- 优化 仅在WiFi环境下回到应用时检测更新\n- 优化 抢红包的逻辑流程，减少了一些误判情形\n- 优化 适配了Lollipop以上版本的透明Status Bar\n- 修复 插件开启后按钮仍然显示“开启插件”\n- 修复 监听SharedPreferences变化无效的问题 (感谢 @act262 对这项修改的贡献)\n- 修复 在其他界面会做额外的操作的问题 (感谢 @sxyy 对这项修改的贡献)\n- 修复 响应Notification进入聊天后，可能误判不抢的问题 (感谢 @tttony3 对这项修改的贡献)\n\n**[v2.0.1 (2016.01.23)](https://github.com/geeeeeeeeek/WeChatLuckyMoney/releases/tag/v2.0.1)**\n\n- 修复了用户第一次使用，偏好设置未加载导致的插件失效。 Fix issue #50, #51.\n\n\n\n**[v2.0 (2016.01.23)](https://github.com/geeeeeeeeek/WeChatLuckyMoney/releases/tag/v2.0)** \n\n- 更自由的监视选项. Give user the freedom to choose what to watch, chat/list/notifications available at choices.\n\n- 更优化的重复红包判定. Optimize algorithm for duplicate hongbao detection.\n\n- 自动更新机制. Add auto update module.\n\n- 更新UI设计、应用图标. Update UI and app icon.\n\n- 增加辅助服务的说明. Add description for accessibility service.\n\n- 增加了反馈issue的快捷方式. Add quick link to Github issues.\n\n- 替换包名. Substitute the original package name.\n\n详细的release notes请见https://github.com/geeeeeeeeek/WeChatLuckyMoney/issues/48。\n\n\n**[v1.4 (2016.01.16)](https://github.com/geeeeeeeeek/WeChatLuckyMoney/releases/tag/v1.4)** \n\n- 修复了微信新版(6.3.9.48_refecd3e)红包UI调整导致的功能失效。Fix failure caused by new WeChat Hongbao UI. Related issue #41.\n\n\n**[v1.3 (2015.12.29)](https://github.com/geeeeeeeeek/WeChatLuckyMoney/releases/tag/v1.3)** \n\n- 修复了红包频繁点击的bug。Fix repeatedly opening envelopes. Related issue #27 .\n\n- 并入了从通知栏进入抢红包的代码(#28)，充分测试后加入下一个版本。Add watch for WeChat notification, from which enter the chat activity. This feature will not be available in this version, until well tested.\n\n**[v1.2 (2015.12.17)](https://github.com/geeeeeeeeek/WeChatLuckyMoney/releases/tag/v1.2)** \n\n该版本的红包识别代码存在Bug，会出现频繁点击，建议跳过该版本。\n\n- 增加了微信语言 英语 的支持，修复了由此导致的一系列问题. Add support for the English language. Fix related issues.\n\n- 修改了红包重复判断的逻辑，戳“名称与缓存不一致的红包”和“名称一致且间隔大于5秒”的红包。Change the logic of detecting duplicate red envelopes. Only those name unmatched with cached or those name matched but with a duration > 5 secs will be touched.\n\n\n**[v1.1 (2015.10.28)](https://github.com/geeeeeeeeek/WeChatLuckyMoney/releases/tag/v1.1)**\n\n- 服务运行时防止息屏。Keep screen on when service is running.\n\n**[v1.0 (2015.10.07)](https://github.com/geeeeeeeeek/WeChatLuckyMoney/releases/tag/v1.0)**\n\n- 从dev分支并入了新版UI和红包节点的hash算法。\n\n- 增加了红包重复判断，不再不停点击最新的红包，极大优化了性能和体验。\n\n\n**[Preview (2015.08.17)](https://github.com/geeeeeeeeek/WeChatLuckyMoney/releases/tag/v1-beta1)**\n\n- 对源码进行了少量修改。"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 1.1123046875,
          "content": "**The MIT License (MIT)**\n\nCopyright (c) 2016 Zhongyi Tong ([geeeeeeeeek@Github](https://github.com/geeeeeeeeek))\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.9970703125,
          "content": "# 微信红包\n\n[![Gitter](https://badges.gitter.im/geeeeeeeeek/WeChatLuckyMoney.svg)](https://gitter.im/geeeeeeeeek/WeChatLuckyMoney?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=body_badge) [![Build Status](https://travis-ci.org/geeeeeeeeek/WeChatLuckyMoney.svg?branch=stable)](https://travis-ci.org/geeeeeeeeek/WeChatLuckyMoney)  [![Docs](https://img.shields.io/badge/Docs-English-blue.svg)](https://github.com/geeeeeeeeek/WeChatLuckyMoney/blob/stable/README_EN.md)\n\n一个帮助你在微信抢红包时战无不胜的Android应用。自动检测并且拆开红包，速度超乎你的想象。\n\n支持中英文。前往[**Release**](https://github.com/geeeeeeeeek/WeChatLuckyMoney/releases/)下载最新版本。已下载用户可直接在设置里面更新。\n\n### 特性\n\n- **监视选项任意组合，满足多样化的使用需求**[[?]](https://github.com/geeeeeeeeek/WeChatLuckyMoney/issues/48)\n\n  提供了`系统通知`/`聊天列表`/`聊天页面`三档选项，无论是想要谨慎不被察觉，还是想要高效志在必得，这个插件如你所愿。\n\n- **不仅快人一步，红包识别更加智能**\n\n  多种特征标识，聊天时不再重复点击红包。智能过滤红包关键字[[?]](https://github.com/geeeeeeeeek/WeChatLuckyMoney/issues/97)，避免落入“专属红包”、“抢到翻倍”的陷阱。还可以设置延时抢红包和自动回复感谢语[[?]](https://github.com/geeeeeeeeek/WeChatLuckyMoney/issues/118)。\n\n- **紧跟微信更新**\n\n  第一时间适配最新版本微信，应用内即可一键更新。\n\n- **轻量、安全、值得信赖**\n\n  安装包仅1M，无需ROOT，下载即用。代码公开透明，活跃的社区讨论，数万用户下载，值得你的信赖。\n\n### 使用方法\n\n1. 打开『微信红包』应用，开启插件。\n2. 做你想做的事。\n3. 坐等红包进账。\n\n### 实现原理\n\n请见[技术文档](https://github.com/geeeeeeeeek/WeChatLuckyMoney/blob/dev/README.md)，注意文档描述的是dev分支(已弃用)的具体实现，而不是stable分支。若有疑问，请在[ISSUES](https://github.com/geeeeeeeeek/WeChatLuckyMoney/issues)中提出。\n\n### 更新日志\n\n完整的更新日志请见[CHANGELOG](https://github.com/geeeeeeeeek/WeChatLuckyMoney/blob/stable/CHANGELOG.md)。\n\n### **版权及免责声明**\n\n本项目源自小米去年秋季发布会时演示的MIUI 7抢红包测试[代码](https://github.com/XiaoMi/LuckyMoneyTool)。\n\n插件可能会在一定程度上改变微信的交互方式。使用本项目中包含的代码及其生成物时，使用者自行承担随之而来的各种风险，包括但不限于“禁用红包功能”、“微信封号”。\n\n本项目使用[MIT许可证](https://github.com/geeeeeeeeek/WeChatLuckyMoney/blob/stable/LICENSE.md)。\n\n### 应用截图\n![wechatimg159](https://cloud.githubusercontent.com/assets/7262715/22361931/999cc8e0-e499-11e6-91ae-ce6973f722f0.png)\n![wechatimg160](https://cloud.githubusercontent.com/assets/7262715/22361932/99b0181e-e499-11e6-8547-d366f9c4cfd9.jpeg)"
        },
        {
          "name": "README_EN.md",
          "type": "blob",
          "size": 2.7529296875,
          "content": "# WeChat Lucky Money\n\n[![Gitter](https://badges.gitter.im/geeeeeeeeek/WeChatLuckyMoney.svg)](https://gitter.im/geeeeeeeeek/WeChatLuckyMoney?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=body_badge)  [![Build Status](https://travis-ci.org/geeeeeeeeek/WeChatLuckyMoney.svg?branch=stable)](https://travis-ci.org/geeeeeeeeek/WeChatLuckyMoney) [![Docs](https://img.shields.io/badge/文档-中文-blue.svg)](https://github.com/geeeeeeeeek/WeChatLuckyMoney/blob/stable/README.md)\n\nThis Android app helps you snatch red envelopes in WeChat. It detects red envelopes automatically, and clicks to open them faster than your imagination.\n\nAvailable in English and Chinese. Please goto the [**Release**](https://github.com/geeeeeeeeek/WeChatLuckyMoney/releases/) page to download the latest version. \n\n### Spotlights\n\n- **What to watch is at your choice**[[?]](https://github.com/geeeeeeeeek/WeChatLuckyMoney/issues/48)\n\n  Three levels of watch options: `notification`/`chat list`/`chat page`. Whatever a coutious man or an ambitious one you wanna be, the choice is at yours.\n\n- **More intelligent algorithm**\n\n  Multiple features used to identify a red envelope. No more repeated clickings. Anti-anti-plugin strategies are protecting the app from disability.\n\n- **Auto update checking**\n\n  Work with the latest version of WeChat. Update available inside your app.\n\n- **Light, safe, and trustful**\n\n  Tha package is as light as 1Mb. With code open sourced, active community discussions, tens of thousands of downloads, it's worth your trust.\n\n### How to use\n\n1. Open the app, turn on the service.\n2. Do whatever you wanna do.\n3. Wait for the lucky money comes in your pocket.\n\n### Implementation\n\nSee the [document](https://github.com/geeeeeeeeek/WeChatLuckyMoney/blob/dev/README.md), which is targeted at the dev branch (deprecated) and is IN CHINESE. If it bothers you, leave your message in the [ISSUES](https://github.com/geeeeeeeeek/WeChatLuckyMoney/issues).\n\n### Update history\n\nFor full history, see [CHANGELOG](https://github.com/geeeeeeeeek/WeChatLuckyMoney/blob/stable/CHANGELOG.md).\n\n### License\n\nThe project was heavily inspired by the [app](https://github.com/XiaoMi/LuckyMoneyTool) demonstrated on XiaoMi's news conference for its phone product last autumn. \n\nThis app might alter the natural way of interactions with WeChat. When you are using the code and its accessories, you are fully responsible for any possible consequences.\n\nThe project is licensed to the [MIT](https://github.com/geeeeeeeeek/WeChatLuckyMoney/blob/stable/LICENSE.md).\n\n### Snapshots\n\n![wechatimg157](https://cloud.githubusercontent.com/assets/7262715/22361930/999aecdc-e499-11e6-91f6-c8c44b9ccc55.png)\n![wechatimg158](https://cloud.githubusercontent.com/assets/7262715/22361929/99998126-e499-11e6-93bc-e97ea263db47.jpeg)"
        },
        {
          "name": "WeChatLuckyMoney.iml",
          "type": "blob",
          "size": 0.8720703125,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<module external.linked.project.id=\"WeChatLuckyMoney\" external.linked.project.path=\"$MODULE_DIR$\" external.root.project.path=\"$MODULE_DIR$\" external.system.id=\"GRADLE\" type=\"JAVA_MODULE\" version=\"4\">\n  <component name=\"FacetManager\">\n    <facet type=\"java-gradle\" name=\"Java-Gradle\">\n      <configuration>\n        <option name=\"BUILD_FOLDER_PATH\" value=\"$MODULE_DIR$/build\" />\n        <option name=\"BUILDABLE\" value=\"false\" />\n      </configuration>\n    </facet>\n  </component>\n  <component name=\"NewModuleRootManager\" LANGUAGE_LEVEL=\"JDK_1_7\" inherit-compiler-output=\"true\">\n    <exclude-output />\n    <content url=\"file://$MODULE_DIR$\">\n      <excludeFolder url=\"file://$MODULE_DIR$/.gradle\" />\n    </content>\n    <orderEntry type=\"jdk\" jdkName=\"1.8\" jdkType=\"JavaSDK\" />\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\n  </component>\n</module>"
        },
        {
          "name": "app",
          "type": "tree",
          "content": null
        },
        {
          "name": "build.gradle",
          "type": "blob",
          "size": 0.53515625,
          "content": "// Top-level build file where you can add configuration options common to all sub-projects/modules.\n\nbuildscript {\n    repositories {\n        jcenter()\n        maven {\n            url 'https://maven.google.com/'\n            name 'Google'\n        }\n    }\n    dependencies {\n        classpath 'com.android.tools.build:gradle:2.3.3'\n\n        // NOTE: Do not place your application dependencies here; they belong\n        // in the individual module build.gradle files\n    }\n}\n\nallprojects {\n    repositories {\n        jcenter()\n        google()\n    }\n}"
        },
        {
          "name": "gradle.properties",
          "type": "blob",
          "size": 0.830078125,
          "content": "## Project-wide Gradle settings.\n#\n# For more details on how to configure your build environment visit\n# http://www.gradle.org/docs/current/userguide/build_environment.html\n#\n# Specifies the JVM arguments used for the daemon process.\n# The setting is particularly useful for tweaking memory settings.\n# Default value: -Xmx1024m -XX:MaxPermSize=256m\n# org.gradle.jvmargs=-Xmx2048m -XX:MaxPermSize=512m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8\n#\n# When configured, Gradle will run in incubating parallel mode.\n# This option should only be used with decoupled projects. More details, visit\n# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects\n# org.gradle.parallel=true\n#Sat Jan 27 19:37:03 CST 2018\nsystemProp.http.proxyHost=127.0.0.1\nsystemProp.http.proxyPort=1087\nandroid.useDeprecatedNdk=true\n"
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 4.9609375,
          "content": "#!/usr/bin/env bash\n\n##############################################################################\n##\n##  Gradle start up script for UN*X\n##\n##############################################################################\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS=\"\"\n\nAPP_NAME=\"Gradle\"\nAPP_BASE_NAME=`basename \"$0\"`\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=\"maximum\"\n\nwarn ( ) {\n    echo \"$*\"\n}\n\ndie ( ) {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n}\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\ncase \"`uname`\" in\n  CYGWIN* )\n    cygwin=true\n    ;;\n  Darwin* )\n    darwin=true\n    ;;\n  MINGW* )\n    msys=true\n    ;;\nesac\n\n# For Cygwin, ensure paths are in UNIX format before anything is touched.\nif $cygwin ; then\n    [ -n \"$JAVA_HOME\" ] && JAVA_HOME=`cygpath --unix \"$JAVA_HOME\"`\nfi\n\n# Attempt to set APP_HOME\n# Resolve links: $0 may be a link\nPRG=\"$0\"\n# Need this for relative symlinks.\nwhile [ -h \"$PRG\" ] ; do\n    ls=`ls -ld \"$PRG\"`\n    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n    if expr \"$link\" : '/.*' > /dev/null; then\n        PRG=\"$link\"\n    else\n        PRG=`dirname \"$PRG\"`\"/$link\"\n    fi\ndone\nSAVED=\"`pwd`\"\ncd \"`dirname \\\"$PRG\\\"`/\" >&-\nAPP_HOME=\"`pwd -P`\"\ncd \"$SAVED\" >&-\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n    else\n        JAVACMD=\"$JAVA_HOME/bin/java\"\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=\"java\"\n    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\nfi\n\n# Increase the maximum file descriptors if we can.\nif [ \"$cygwin\" = \"false\" -a \"$darwin\" = \"false\" ] ; then\n    MAX_FD_LIMIT=`ulimit -H -n`\n    if [ $? -eq 0 ] ; then\n        if [ \"$MAX_FD\" = \"maximum\" -o \"$MAX_FD\" = \"max\" ] ; then\n            MAX_FD=\"$MAX_FD_LIMIT\"\n        fi\n        ulimit -n $MAX_FD\n        if [ $? -ne 0 ] ; then\n            warn \"Could not set maximum file descriptor limit: $MAX_FD\"\n        fi\n    else\n        warn \"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\"\n    fi\nfi\n\n# For Darwin, add options to specify how the application appears in the dock\nif $darwin; then\n    GRADLE_OPTS=\"$GRADLE_OPTS \\\"-Xdock:name=$APP_NAME\\\" \\\"-Xdock:icon=$APP_HOME/media/gradle.icns\\\"\"\nfi\n\n# For Cygwin, switch paths to Windows format before running java\nif $cygwin ; then\n    APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`\n    CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`\n\n    # We build the pattern for arguments to be converted via cygpath\n    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`\n    SEP=\"\"\n    for dir in $ROOTDIRSRAW ; do\n        ROOTDIRS=\"$ROOTDIRS$SEP$dir\"\n        SEP=\"|\"\n    done\n    OURCYGPATTERN=\"(^($ROOTDIRS))\"\n    # Add a user-defined pattern to the cygpath arguments\n    if [ \"$GRADLE_CYGPATTERN\" != \"\" ] ; then\n        OURCYGPATTERN=\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\"\n    fi\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    i=0\n    for arg in \"$@\" ; do\n        CHECK=`echo \"$arg\"|egrep -c \"$OURCYGPATTERN\" -`\n        CHECK2=`echo \"$arg\"|egrep -c \"^-\"`                                 ### Determine if an option\n\n        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition\n            eval `echo args$i`=`cygpath --path --ignore --mixed \"$arg\"`\n        else\n            eval `echo args$i`=\"\\\"$arg\\\"\"\n        fi\n        i=$((i+1))\n    done\n    case $i in\n        (0) set -- ;;\n        (1) set -- \"$args0\" ;;\n        (2) set -- \"$args0\" \"$args1\" ;;\n        (3) set -- \"$args0\" \"$args1\" \"$args2\" ;;\n        (4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;\n        (5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;\n        (6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;\n        (7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;\n        (8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;\n        (9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;\n    esac\nfi\n\n# Split up the JVM_OPTS And GRADLE_OPTS values into an array, following the shell quoting and substitution rules\nfunction splitJvmOpts() {\n    JVM_OPTS=(\"$@\")\n}\neval splitJvmOpts $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS\nJVM_OPTS[${#JVM_OPTS[*]}]=\"-Dorg.gradle.appname=$APP_BASE_NAME\"\n\nexec \"$JAVACMD\" \"${JVM_OPTS[@]}\" -classpath \"$CLASSPATH\" org.gradle.wrapper.GradleWrapperMain \"$@\"\n"
        },
        {
          "name": "gradlew.bat",
          "type": "blob",
          "size": 2.34765625,
          "content": "@if \"%DEBUG%\" == \"\" @echo off\r\n@rem ##########################################################################\r\n@rem\r\n@rem  Gradle startup script for Windows\r\n@rem\r\n@rem ##########################################################################\r\n\r\n@rem Set local scope for the variables with windows NT shell\r\nif \"%OS%\"==\"Windows_NT\" setlocal\r\n\r\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\r\nset DEFAULT_JVM_OPTS=\r\n\r\nset DIRNAME=%~dp0\r\nif \"%DIRNAME%\" == \"\" set DIRNAME=.\r\nset APP_BASE_NAME=%~n0\r\nset APP_HOME=%DIRNAME%\r\n\r\n@rem Find java.exe\r\nif defined JAVA_HOME goto findJavaFromJavaHome\r\n\r\nset JAVA_EXE=java.exe\r\n%JAVA_EXE% -version >NUL 2>&1\r\nif \"%ERRORLEVEL%\" == \"0\" goto init\r\n\r\necho.\r\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\r\necho.\r\necho Please set the JAVA_HOME variable in your environment to match the\r\necho location of your Java installation.\r\n\r\ngoto fail\r\n\r\n:findJavaFromJavaHome\r\nset JAVA_HOME=%JAVA_HOME:\"=%\r\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\r\n\r\nif exist \"%JAVA_EXE%\" goto init\r\n\r\necho.\r\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\r\necho.\r\necho Please set the JAVA_HOME variable in your environment to match the\r\necho location of your Java installation.\r\n\r\ngoto fail\r\n\r\n:init\r\n@rem Get command-line arguments, handling Windowz variants\r\n\r\nif not \"%OS%\" == \"Windows_NT\" goto win9xME_args\r\nif \"%@eval[2+2]\" == \"4\" goto 4NT_args\r\n\r\n:win9xME_args\r\n@rem Slurp the command line arguments.\r\nset CMD_LINE_ARGS=\r\nset _SKIP=2\r\n\r\n:win9xME_args_slurp\r\nif \"x%~1\" == \"x\" goto execute\r\n\r\nset CMD_LINE_ARGS=%*\r\ngoto execute\r\n\r\n:4NT_args\r\n@rem Get arguments from the 4NT Shell from JP Software\r\nset CMD_LINE_ARGS=%$\r\n\r\n:execute\r\n@rem Setup the command line\r\n\r\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\r\n\r\n@rem Execute Gradle\r\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%\r\n\r\n:end\r\n@rem End local scope for the variables with windows NT shell\r\nif \"%ERRORLEVEL%\"==\"0\" goto mainEnd\r\n\r\n:fail\r\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\r\nrem the _cmd.exe /c_ return code!\r\nif  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1\r\nexit /b 1\r\n\r\n:mainEnd\r\nif \"%OS%\"==\"Windows_NT\" endlocal\r\n\r\n:omega\r\n"
        },
        {
          "name": "monkeytong.jks.enc",
          "type": "blob",
          "size": 2.15625,
          "content": null
        },
        {
          "name": "settings.gradle",
          "type": "blob",
          "size": 0.0146484375,
          "content": "include ':app'\n"
        }
      ]
    }
  ]
}