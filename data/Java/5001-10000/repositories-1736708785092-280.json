{
  "metadata": {
    "timestamp": 1736708785092,
    "page": 280,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "JSQLParser/JSqlParser",
      "stars": 5485,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".codacy.yml",
          "type": "blob",
          "size": 0.0322265625,
          "content": "---\nexclude_paths:\n  - \"site/**\"\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.5205078125,
          "content": "# Generated by maven\n/target\n/build\n/out\n\n# Sphinx Theme related stuff, which shall be downloaded separately\n/src/site/sphinx/_themes\n\n# Exclude the Auto-generated Changelog\n/src/site/sphinx/changelog.rst\n/src/site/sphinx/javadoc_stable.rst\n/src/site/sphinx/syntax_stable.rst\n/src/site/sphinx/javadoc_snapshot.rst\n/src/site/sphinx/syntax_snapshot.rst\n\n# Generated by javacc-maven-plugin\n/bin\n/src/net\n\n# Eclipse configuration files\n/.project\n/.settings\n/.classpath\n\n#IntelliJ\n/.idea\n*.iml\n\n*.jj~\n*.java~\n*.yml~\n/nbproject/\n\n/.gradle\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.2060546875,
          "content": "language: java\njdk:\n  - openjdk8\n  - openjdk11\n  \nafter_success:\n  - mvn clean cobertura:cobertura coveralls:report\n\ncache:\n  directories:\n    - $HOME/.m2\n    - $HOME/.gradle/caches/\n    - $HOME/.gradle/wrapper/"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 335.2744140625,
          "content": "# JSqlParser changelog\n\nChangelog of JSqlParser.\n\n## jsqlparser-5.0 (2024-06-30)\n\n### Breaking changes\n\n-  Visitors return Objects and accept parameters ([5bd28](https://github.com/JSQLParser/JSqlParser/commit/5bd28c8b309df6c) Andreas Reichel)  \n-  Visitors return Objects ([131a9](https://github.com/JSQLParser/JSqlParser/commit/131a988ccea2d91) Andreas Reichel)  \n-  Visitors return Objects ([c2328](https://github.com/JSQLParser/JSqlParser/commit/c2328120e7a79ff) Andreas Reichel)  \n-  Visitors return Objects ([ec497](https://github.com/JSQLParser/JSqlParser/commit/ec49762708e920a) Andreas Reichel)  \n-  Visitors return Objects ([681ca](https://github.com/JSQLParser/JSqlParser/commit/681cac933d83516) Andreas Reichel)  \n\n### Features\n\n-  provide compatibility methods ([3f995](https://github.com/JSQLParser/JSqlParser/commit/3f99548b99bbfe3) Andreas Reichel)  \n-  apply the new parametrized Visitor patterns to all entities and provide default implementations ([e1692](https://github.com/JSQLParser/JSqlParser/commit/e1692990c543ed1) Andreas Reichel)  \n-  syntax sugar ([2fce4](https://github.com/JSQLParser/JSqlParser/commit/2fce4c009b77d85) Andreas Reichel)  \n-  Visitors return Objects and accept parameters ([5bd28](https://github.com/JSQLParser/JSqlParser/commit/5bd28c8b309df6c) Andreas Reichel)  \n-  Visitors return Objects ([131a9](https://github.com/JSQLParser/JSqlParser/commit/131a988ccea2d91) Andreas Reichel)  \n-  Visitors return Objects ([c2328](https://github.com/JSQLParser/JSqlParser/commit/c2328120e7a79ff) Andreas Reichel)  \n-  Visitors return Objects ([ec497](https://github.com/JSQLParser/JSqlParser/commit/ec49762708e920a) Andreas Reichel)  \n-  Visitors return Objects ([681ca](https://github.com/JSQLParser/JSqlParser/commit/681cac933d83516) Andreas Reichel)  \n-  Allow OUTER keyword as function parameter name (#2021) ([fc90c](https://github.com/JSQLParser/JSqlParser/commit/fc90c0b5e566533) Chris Crabtree)  \n-  BigQuery `SELECT AS STRUCT ...` and `SELECT AS VALUE ...` ([5c360](https://github.com/JSQLParser/JSqlParser/commit/5c360a2fc95c261) Andreas Reichel)  \n-  add syntax sugar ([2ace7](https://github.com/JSQLParser/JSqlParser/commit/2ace74d1047e87d) Andreas Reichel)  \n-  `AllColumns`, DuckDB uses `EXCLUDE` instead of `EXCEPT` ([1ad42](https://github.com/JSQLParser/JSqlParser/commit/1ad4234280f7a70) Andreas Reichel)  \n-  syntax sugar ([ae1ef](https://github.com/JSQLParser/JSqlParser/commit/ae1eff9f7434c08) Andreas Reichel)  \n-  syntax sugar ([81846](https://github.com/JSQLParser/JSqlParser/commit/818464c93ae665a) Andreas Reichel)  \n-  syntax sugar ([2cb3e](https://github.com/JSQLParser/JSqlParser/commit/2cb3e589b60e192) Andreas Reichel)  \n-  syntax sugar ([b2eed](https://github.com/JSQLParser/JSqlParser/commit/b2eed1e910c97de) Andreas Reichel)  \n-  Databricks IGNORE/RESPECT NULLS ([e9c9a](https://github.com/JSQLParser/JSqlParser/commit/e9c9a173a660bbe) Andreas Reichel)  \n-  Databricks IGNORE/RESPECT NULLS ([544b1](https://github.com/JSQLParser/JSqlParser/commit/544b1683789f20b) Andreas Reichel)  \n-  Capture expression name part delimiters (#2001) ([0368b](https://github.com/JSQLParser/JSqlParser/commit/0368b9ebad76742) Chris Crabtree)  \n-  syntax sugar ([ca5c5](https://github.com/JSQLParser/JSqlParser/commit/ca5c553efde37eb) Andreas Reichel)  \n-  translate HEX to Unicode String and ByteArray String ([df519](https://github.com/JSQLParser/JSqlParser/commit/df519333ff34740) Andreas Reichel)  \n-  `StructType` syntax sugar ([6e9bf](https://github.com/JSQLParser/JSqlParser/commit/6e9bf42b0b2d783) Andreas Reichel)  \n-  `Values` implement `FromItem` ([e426c](https://github.com/JSQLParser/JSqlParser/commit/e426c5a67c505b5) Andreas Reichel)  \n-  add `ParenthesedSelect` delegate ([66d05](https://github.com/JSQLParser/JSqlParser/commit/66d05a2bb7c41f3) Andreas Reichel)  \n-  add `ParenthesedSelect` delegate ([f1699](https://github.com/JSQLParser/JSqlParser/commit/f16999393589702) Andreas Reichel)  \n-  Simplify traversing the AST bottom to top ([bddc4](https://github.com/JSQLParser/JSqlParser/commit/bddc41cddf5b5bf) Andreas Reichel)  \n-  AST Node access for `FromItem` ([c1edf](https://github.com/JSQLParser/JSqlParser/commit/c1edf0f8f21bd52) Andreas Reichel)  \n-  RedShift specific Window function IGNORE | RESPECT NULLS ([321c8](https://github.com/JSQLParser/JSqlParser/commit/321c88098a75791) Andreas Reichel)  \n-  RedShift allows `TOP` before `DISTINCT`, see https://docs.aws.amazon.com/redshift/latest/dg/r_SELECT_list.html ([13e61](https://github.com/JSQLParser/JSqlParser/commit/13e61a726a87c2f) Andreas Reichel)  \n-  Redshift `APPROXIMATE` Aggregate functions ([e4ece](https://github.com/JSQLParser/JSqlParser/commit/e4ece0c3ecd7ce3) Andreas Reichel)  \n-  add `CCJSqlParserUtil.sanitizeSingleSql(String sqlStr)` to help MyBatikPlus users to clean their statements ([1606e](https://github.com/JSQLParser/JSqlParser/commit/1606e5f0492a485) Andreas Reichel)  \n-  return any `UnsupportedStatement` content ([063d2](https://github.com/JSQLParser/JSqlParser/commit/063d2442d82f920) Andreas Reichel)  \n-  re-enable `UnsupportedStatement` ([82b45](https://github.com/JSQLParser/JSqlParser/commit/82b459bfcd23851) Andreas Reichel)  \n-  better statement error recovery ([b3d3a](https://github.com/JSQLParser/JSqlParser/commit/b3d3a8e492f74a8) Andreas Reichel)  \n-  Syntax Sugar for the parser features ([1d943](https://github.com/JSQLParser/JSqlParser/commit/1d9438e7ef1a86f) Andreas Reichel)  \n-  allow `EXTRACT` to be parsed as regular function also ([b85dc](https://github.com/JSQLParser/JSqlParser/commit/b85dc2fd0004652) Andreas Reichel)  \n-  syntax sugar ([a3858](https://github.com/JSQLParser/JSqlParser/commit/a38581acd538d95) Andreas Reichel)  \n-  syntax sugar ([df7c7](https://github.com/JSQLParser/JSqlParser/commit/df7c792184c61a6) Andreas Reichel)  \n-  Syntax sugar ([67bfa](https://github.com/JSQLParser/JSqlParser/commit/67bfae673421d7c) Andreas Reichel)  \n-  syntax sugar ([b0317](https://github.com/JSQLParser/JSqlParser/commit/b03170e180175b1) Andreas Reichel)  \n-  syntax sugar ([57a29](https://github.com/JSQLParser/JSqlParser/commit/57a296b2c8c5bb0) Andreas Reichel)  \n-  remove Aliases of `ParenthesedSelect`, `LateralSubSelect` and `ParenthesedFromItem` from the Table Names ([46682](https://github.com/JSQLParser/JSqlParser/commit/466826b9b115cb7) Andreas Reichel)  \n-  better access to the `DataType` checks ([edeaf](https://github.com/JSQLParser/JSqlParser/commit/edeafc311c2ab7e) Andreas Reichel)  \n-  Add Data Type information to task for making it easy to understand the expected return type ([31c55](https://github.com/JSQLParser/JSqlParser/commit/31c5533f49776c6) Andreas Reichel)  \n-  Implicit Casts `SELECT DOUBLE PRECISION '1'` ([411a3](https://github.com/JSQLParser/JSqlParser/commit/411a3da9facf206) Andreas Reichel)  \n-  Function Column Aliases without an Alias Name `func(x) (a, b, c)` ([b4ef7](https://github.com/JSQLParser/JSqlParser/commit/b4ef763614bf3a4) Andreas Reichel)  \n-  Support BigQuery specific Aggregate clauses ([0179c](https://github.com/JSQLParser/JSqlParser/commit/0179cc0cac9ceeb) Andreas Reichel)  \n-  syntax sugar for Binary Expressions like Conact, Addition, Multiplication ([ffdde](https://github.com/JSQLParser/JSqlParser/commit/ffddeef7199a056) Andreas Reichel)  \n-  Hex to Long conversion ([620db](https://github.com/JSQLParser/JSqlParser/commit/620db709e48c22e) Andreas Reichel)  \n-  syntax sugar for Expressions ([a5693](https://github.com/JSQLParser/JSqlParser/commit/a56934da1d3a7ae) Andreas Reichel)  \n-  Salesforce SOQL `INCLUDES` and `EXCLUDES` operators (#1985) ([f3f0e](https://github.com/JSQLParser/JSqlParser/commit/f3f0e051358a493) lucarota)  \n-  Google BigQuery `CAST` with `FORMAT` clause ([0d813](https://github.com/JSQLParser/JSqlParser/commit/0d813f03faa2b3b) Andreas Reichel)  \n-  DuckDB Lambda Functions ([23679](https://github.com/JSQLParser/JSqlParser/commit/236793aaeabc30f) Andreas Reichel)  \n-  DuckDB `STRUCT` with curly brackets and explicit Column Type Cast ([1cd57](https://github.com/JSQLParser/JSqlParser/commit/1cd576b32c774e8) Andreas Reichel)  \n-  `RECURSIVE` does not need to be a reserved ([5cb4c](https://github.com/JSQLParser/JSqlParser/commit/5cb4c55067f4fe2) Andreas Reichel)  \n-  DuckDB `STRUCT` with curly brackets ([339d6](https://github.com/JSQLParser/JSqlParser/commit/339d6baece2c199) Andreas Reichel)  \n-  BigQuery `STRUCT` data types and literal ([4c187](https://github.com/JSQLParser/JSqlParser/commit/4c187d51055a3d8) Andreas Reichel)  \n-  TablesNamesFinder can return also references to WITH items ([9d645](https://github.com/JSQLParser/JSqlParser/commit/9d64511239a4514) Andreas Reichel)  \n-  allow double-quoted `DateTimeLiteral` like `DATETIME \"2005-01-03 12:34:56\"` ([f6790](https://github.com/JSQLParser/JSqlParser/commit/f6790913b754850) Andreas Reichel)  \n-  support `DATETIME` literal used for Google BigQuery ([a386d](https://github.com/JSQLParser/JSqlParser/commit/a386d297c418921) Andreas Reichel)  \n-  link `TOP` to AST node ([79c42](https://github.com/JSQLParser/JSqlParser/commit/79c42ed31eb6986) Andreas Reichel)  \n\n### Bug Fixes\n\n-  `AllTableColumns`, DuckDB specific `EXCLUDE` ([c9ecf](https://github.com/JSQLParser/JSqlParser/commit/c9ecfc6ddbdd139) Andreas Reichel)  \n-  `AllColumns` Replacement shall be about Columns only ([f4b40](https://github.com/JSQLParser/JSqlParser/commit/f4b40e43a4f8d3d) Andreas Reichel)  \n-  `FromItem` with Alias without `AS` keyword ([5f580](https://github.com/JSQLParser/JSqlParser/commit/5f580af190c6fbb) Andreas Reichel)  \n-  set `stringValue` in `DoubleValue.setValue` (#2009) ([e07f8](https://github.com/JSQLParser/JSqlParser/commit/e07f8d019ddf38d) Damian)  \n-  try working around `UnsupportedStatement` issue ([fbe97](https://github.com/JSQLParser/JSqlParser/commit/fbe97a8deb84ae9) Andreas Reichel)  \n-  allow `BASE64` keyword ([7daf7](https://github.com/JSQLParser/JSqlParser/commit/7daf7af36d825f7) Andreas Reichel)  \n-  `StructType` expressions must use Visitor instead of `toString()` ([b95d8](https://github.com/JSQLParser/JSqlParser/commit/b95d8e3e4ee01b0) Andreas Reichel)  \n-  `AnyComparisionItem` with extra brackets ([4e1a1](https://github.com/JSQLParser/JSqlParser/commit/4e1a1535f4ef706) Andreas Reichel)  \n-  `FOR UPDATE` clause should come after the select body ([cf7fe](https://github.com/JSQLParser/JSqlParser/commit/cf7fe157de372f3) Andreas Reichel)  \n-  initialise the `SelectDeparser` with an `ExpressionDeparser` (but not with an empty Adaptor only) ([f417c](https://github.com/JSQLParser/JSqlParser/commit/f417c8f248c7bb1) Andreas Reichel)  \n-  `ALTER ...` shall `captureRest()` only to the next statement terminator ([15d14](https://github.com/JSQLParser/JSqlParser/commit/15d14ab0b9dcadf) Andreas Reichel)  \n-  correct the wrong Assertion ([8461e](https://github.com/JSQLParser/JSqlParser/commit/8461e8ad1a3f5e3) Andreas Reichel)  \n-  don't insert space after certain punctuation ([159c2](https://github.com/JSQLParser/JSqlParser/commit/159c28ee8f68cab) Andreas Reichel)  \n-  treat Array Brackets `[..]` as syntax characters and surround by space when normalizing for comparison ([c9d1e](https://github.com/JSQLParser/JSqlParser/commit/c9d1eaefca91c6e) Andreas Reichel)  \n-  `REGEXP` does not need to be reserved ([f6524](https://github.com/JSQLParser/JSqlParser/commit/f65240f381f9855) Andreas Reichel)  \n-  `REGEXP` does not need to be reserved ([a9e67](https://github.com/JSQLParser/JSqlParser/commit/a9e67667b9c1590) Andreas Reichel)  \n-  Array Arguments without `ARRAY` keyword ([0f9a8](https://github.com/JSQLParser/JSqlParser/commit/0f9a8ec02786f5d) Andreas Reichel)  \n-  Function with Array Arguments ([f782e](https://github.com/JSQLParser/JSqlParser/commit/f782eda7afa17d3) Andreas Reichel)  \n-  parsing `SelectItem` shall support `Xor` ([c8839](https://github.com/JSQLParser/JSqlParser/commit/c883920a1175ffc) Andreas Reichel)  \n\n### Other changes\n\n**switched to version 5.0-SNAPSHOT**\n\n\n[275e0](https://github.com/JSQLParser/JSqlParser/commit/275e0c0627bb8a2) Tobias Warneke *2024-06-30 20:26:08*\n\n**corrected license header**\n\n\n[5fb9f](https://github.com/JSQLParser/JSqlParser/commit/5fb9f568684ace1) Tobias Warneke *2024-06-30 20:21:47*\n\n**corrected license header**\n\n\n[456d5](https://github.com/JSQLParser/JSqlParser/commit/456d53b09c48f77) Tobias Warneke *2024-06-30 20:02:41*\n\n**support custom DeParser (#2013)**\n\n\n[74793](https://github.com/JSQLParser/JSqlParser/commit/7479342dd95125a) Redkale *2024-05-29 06:02:40*\n\n**Add missing java.sql require (#1999)**\n\n* Add missing java.sql \n* Update maven checkstyle \n* Fix gradle checkstyle \n* Bump surefire plugin \n* Skip modules in tests \n\n[df48c](https://github.com/JSQLParser/JSqlParser/commit/df48c4ba5b2b44f) Ethan McCue *2024-04-30 05:13:54*\n\n**Add module info (#1998)**\n\n* Add module info \n* Trailing newline \n\n[761b4](https://github.com/JSQLParser/JSqlParser/commit/761b45b2f6c4b81) Ethan McCue *2024-04-30 04:36:41*\n\n****\n\n\n[89ac0](https://github.com/JSQLParser/JSqlParser/commit/89ac0fc3c0af712) Tobias Warneke *2024-03-09 22:12:33*\n\n\n## jsqlparser-4.9 (2024-03-09)\n\n### Features\n\n-  add DB2 special register `CURRENT TIMEZONE` ([c412d](https://github.com/JSQLParser/JSqlParser/commit/c412d6a52f9b2ea) Andreas Reichel)  \n-  add additional CREATE VIEW modifiers (#1964) ([67e22](https://github.com/JSQLParser/JSqlParser/commit/67e220425f24148) David Goss)  \n-  with no log (#1953) ([d9c44](https://github.com/JSQLParser/JSqlParser/commit/d9c44499d096b1f) mjh)  \n-  support keyword \"only\" for postgresql (#1952) ([f1676](https://github.com/JSQLParser/JSqlParser/commit/f1676dd992911d9) 猫屎咖啡)  \n-  support any number/order of merge operations (#1938) ([f1c52](https://github.com/JSQLParser/JSqlParser/commit/f1c525a1eaf3087) David Goss)  \n\n### Bug Fixes\n\n-  chained function calls of `SimpleFunction` ([98055](https://github.com/JSQLParser/JSqlParser/commit/9805581accf89d2) Andreas Reichel)  \n-  issue #1948 `Between` with expression ([b9453](https://github.com/JSQLParser/JSqlParser/commit/b9453f228adf9ad) Andreas Reichel)  \n-  return NULL when parsing empty Strings ([94fb8](https://github.com/JSQLParser/JSqlParser/commit/94fb87237f36cce) Andreas Reichel)  \n-  allow Parameters like `$1`,`$2` ([17f5f](https://github.com/JSQLParser/JSqlParser/commit/17f5f2ad680dfdb) Andreas Reichel)  \n-  allow `DATA` as `ColumnType()` keyword ([72a51](https://github.com/JSQLParser/JSqlParser/commit/72a51e58413a291) Andreas Reichel)  \n-  make analytic expression visitor null-safe (#1944) ([768c6](https://github.com/JSQLParser/JSqlParser/commit/768c63f4660509b) David Goss)  \n-  Fixes parsing failing for ALTER MODIFY queries not containing datatype (#1961) ([029fd](https://github.com/JSQLParser/JSqlParser/commit/029fd42e84e65ee) Tanish Grover)  \n-  tables not find in parentheses join sql. (#1956) ([182f4](https://github.com/JSQLParser/JSqlParser/commit/182f484dc43945b) hancher)  \n-  issue1875 (#1957) ([98aa9](https://github.com/JSQLParser/JSqlParser/commit/98aa90cb988580a) mjh)  \n-  ExpressionVisitor.visit(AllTableColumns) method isn't being called. (#1942) ([bc166](https://github.com/JSQLParser/JSqlParser/commit/bc16618eaa8fd93) Brian S. O&#x27;Neill)  \n\n### Other changes\n\n****\n\n\n[2319d](https://github.com/JSQLParser/JSqlParser/commit/2319da81bb27f4e) Tobias Warneke *2024-03-09 20:49:14*\n\n**Handle select in ExpressionVisitorAdapter (#1972)**\n\n\n[424a8](https://github.com/JSQLParser/JSqlParser/commit/424a852ac8071d7) Kaartic Sivaraam *2024-02-23 23:32:07*\n\n**Update README.md**\n\n* Fixes  #1968 \n\n[8dcfb](https://github.com/JSQLParser/JSqlParser/commit/8dcfb4a3bf5682d) manticore-projects *2024-02-17 12:03:43*\n\n**Guard Values against null/empty values (#1965)**\n\n* Guard Values against null/empty values \n* The classes modified by this commit are &#x60;DoubleValue&#x60;, &#x60;LongValue&#x60;, and \n* &#x60;TimeValue&#x60;. Both &#x60;null&#x60; and empty strings provided to their \n* constructors fail, but they provide very different error messages \n* (NullPointerException and StringIndexOutOfBoundsException), which is \n* neither sensible nor helpful in debugging. \n* This commit adds a guard to throw &#x60;IllegalArgumentException&#x60; for both \n* cases in order to improve coherency and usefulness of the error \n* messages. \n* fix checkstyle issues \n\n[b0032](https://github.com/JSQLParser/JSqlParser/commit/b00322efa0c77d2) Heewon Lee *2024-02-14 07:34:40*\n\n**support oracle alter table truncate partition  (#1954)**\n\n* feat: oracle alter table truncate partition \n* feat: oracle alter table truncate partition \n* feat: code format \n* feat: code format \n* --------- \n* Co-authored-by: mjh &lt;majh118@chinaunicom.cn&gt; \n\n[cc7aa](https://github.com/JSQLParser/JSqlParser/commit/cc7aa01913a7201) mjh *2024-02-04 07:19:19*\n\n**Build with Automatic-Module-Name for compatibility with the Java module system. (#1941)**\n\n\n[92e02](https://github.com/JSQLParser/JSqlParser/commit/92e02c6da69d917) Brian S. O&#x27;Neill *2024-01-06 14:04:45*\n\n**Create maven_deploy.yml**\n\n\n[b4070](https://github.com/JSQLParser/JSqlParser/commit/b40705785751b49) Tobias *2023-12-28 22:31:54*\n\n**corrected hopefully maven snapshot deployment**\n\n\n[a70f0](https://github.com/JSQLParser/JSqlParser/commit/a70f0d1f3f3d91e) Tobias Warneke *2023-12-28 22:20:08*\n\n**corrected hopefully maven snapshot deployment**\n\n\n[f0d3a](https://github.com/JSQLParser/JSqlParser/commit/f0d3ab6b42193ae) Tobias Warneke *2023-12-28 22:17:43*\n\n**finally done**\n\n\n[6c1ca](https://github.com/JSQLParser/JSqlParser/commit/6c1caff118f84bd) Tobias Warneke *2023-12-28 00:29:26*\n\n\n## jsqlparser-4.8 (2023-12-28)\n\n### Features\n\n-  support mysql with rollup (#1923) ([77f6f](https://github.com/JSQLParser/JSqlParser/commit/77f6fb8c92b3378) jxnu-liguobin)  \n-  Support `FOR SHARE` (#1922) ([815f8](https://github.com/JSQLParser/JSqlParser/commit/815f8753d552d89) jxnu-liguobin)  \n-  [MySQL] Support `TABLE STATEMENT` (#1921) ([313a4](https://github.com/JSQLParser/JSqlParser/commit/313a4b42444b2d2) jxnu-liguobin)  \n-  Support `RENAME INDEX` for MySQL, `RENAME CONSTRAINT` for PostgreSQL (#1920) ([989a8](https://github.com/JSQLParser/JSqlParser/commit/989a84bb215283b) jxnu-liguobin)  \n-  Add support comment in `create view` for MySQL and MariaDb (#1913) ([4d47e](https://github.com/JSQLParser/JSqlParser/commit/4d47e0ab7bc2872) jxnu-liguobin)  \n-  Add support for `REFRESH MATERIALIZED VIEW` (#1911) ([425c7](https://github.com/JSQLParser/JSqlParser/commit/425c72eb7d7f931) jxnu-liguobin)  \n-  `SimpleFunction` for faster parsing of simple, but deep nested functions ([085d7](https://github.com/JSQLParser/JSqlParser/commit/085d7504235e58c) Andreas Reichel)  \n-  add support for snowflake merge statements (#1887) ([36b80](https://github.com/JSQLParser/JSqlParser/commit/36b806dede06260) David Goss)  \n-  `ColDataType` supports `PUBLIC` schema and all non-restricted keywords for type ([1088d](https://github.com/JSQLParser/JSqlParser/commit/1088db7aea0b2f9) Andreas Reichel)  \n-  T-SQL Join Hints ([5f09e](https://github.com/JSQLParser/JSqlParser/commit/5f09ec4914fbdd1) Andreas Reichel)  \n-  old TSQL Joins `*=` and `=*` ([0b50d](https://github.com/JSQLParser/JSqlParser/commit/0b50da4cca555b6) Andreas Reichel)  \n-  MS SQL Server `Merge` `Output` clause ([7bd42](https://github.com/JSQLParser/JSqlParser/commit/7bd42edaa0d9aed) Andreas Reichel)  \n-  MS SQL Server `UPDATE ...` Index Hint ([f919e](https://github.com/JSQLParser/JSqlParser/commit/f919e00c30ff5df) Andreas Reichel)  \n-  Postgres `Contains` and `ContainedBy` Operators ([28a4c](https://github.com/JSQLParser/JSqlParser/commit/28a4c080b718aba) Andreas Reichel)  \n-  Postgres `Contains` and `ContainedBy` Operators ([09d6d](https://github.com/JSQLParser/JSqlParser/commit/09d6dfe7bc7acb8) Andreas Reichel)  \n-  Clickhouse `GLOBAL IN ...` ([ced0d](https://github.com/JSQLParser/JSqlParser/commit/ced0d0090c5c9a9) Andreas Reichel)  \n-  `CREATE INDEX IF NOT EXISTS...` ([da13d](https://github.com/JSQLParser/JSqlParser/commit/da13d7dc1dd1608) Andreas Reichel)  \n-  support clickhouse global keyword in IN Expression ([a9ed7](https://github.com/JSQLParser/JSqlParser/commit/a9ed79825110df7) hezw)  \n\n### Bug Fixes\n\n-  refactor `JsonExpression`, avoiding expensive semantic lookahead and improving performance ([56515](https://github.com/JSQLParser/JSqlParser/commit/56515aba6ca893f) Andreas Reichel)  \n-  `GO` shall terminate statement only, when appearing alone on an empty line ([14637](https://github.com/JSQLParser/JSqlParser/commit/14637ce64763b42) Andreas Reichel)  \n-  De-Parse Oracle Hints in UPDATE, INSERT, DELETE and MERGE ([aaca0](https://github.com/JSQLParser/JSqlParser/commit/aaca05855f9a11b) Andreas Reichel)  \n-  `UpdateSet` shall not have brackets with single element only ([15b9a](https://github.com/JSQLParser/JSqlParser/commit/15b9aef7ca05416) Andreas Reichel)  \n-  make `GLOBAL` a restricted keyword, not usable as an Alias ([dd6cf](https://github.com/JSQLParser/JSqlParser/commit/dd6cf23150f4804) Andreas Reichel)  \n-  Postgres `NextVal()` function ([e3afa](https://github.com/JSQLParser/JSqlParser/commit/e3afa5fbdebc715) Andreas Reichel)  \n-  optional `Expression` in `FETCH` clause ([daee3](https://github.com/JSQLParser/JSqlParser/commit/daee30f7ae88bea) Andreas Reichel)  \n-  allow `RAW` as `CreateParameter` ([ecd40](https://github.com/JSQLParser/JSqlParser/commit/ecd40386585a519) Andreas Reichel)  \n\n### Other changes\n\n**problem with old sonatype repo?**\n\n\n[66dd0](https://github.com/JSQLParser/JSqlParser/commit/66dd0cffad8255d) Tobias Warneke *2023-12-28 00:10:08*\n\n**problem with old sonatype repo?**\n\n\n[19bde](https://github.com/JSQLParser/JSqlParser/commit/19bdef65c0e04c3) Tobias Warneke *2023-12-27 22:50:54*\n\n**problem with old sonatype repo?**\n\n\n[d6b4c](https://github.com/JSQLParser/JSqlParser/commit/d6b4cc374db4197) Tobias Warneke *2023-12-27 22:43:59*\n\n**problem with old sonatype repo?**\n\n\n[5ff53](https://github.com/JSQLParser/JSqlParser/commit/5ff53e835e675ea) Tobias Warneke *2023-12-27 00:54:26*\n\n****\n\n\n[6a327](https://github.com/JSQLParser/JSqlParser/commit/6a327b186528d1a) Tobias Warneke *2023-12-26 23:15:57*\n\n**npe in memory leak verifier**\n\n\n[63955](https://github.com/JSQLParser/JSqlParser/commit/639555315180cbf) Tobias Warneke *2023-12-26 23:01:20*\n\n**allow reinitializing of javacc semanticize**\n\n\n[44274](https://github.com/JSQLParser/JSqlParser/commit/44274b252c21cd1) Tobias Warneke *2023-12-26 22:53:28*\n\n**Allowed to build JSqlParser on slower computers by increasing a fixed timeout. This should take machine power into account.**\n\n\n[806d3](https://github.com/JSQLParser/JSqlParser/commit/806d3a39e8f093e) Tobias Warneke *2023-12-26 20:31:48*\n\n**upgraded some plugins**\n\n\n[cff03](https://github.com/JSQLParser/JSqlParser/commit/cff03ca200c674c) Tobias Warneke *2023-12-26 12:59:38*\n\n**upgraded some plugins**\n\n\n[256a1](https://github.com/JSQLParser/JSqlParser/commit/256a1eff904834b) Tobias Warneke *2023-12-25 23:53:18*\n\n**upgraded some plugins**\n\n\n[b2bd0](https://github.com/JSQLParser/JSqlParser/commit/b2bd025b424e472) Tobias Warneke *2023-12-25 23:51:46*\n\n**corrected license header of some files**\n\n\n[23ba3](https://github.com/JSQLParser/JSqlParser/commit/23ba326db05e863) Tobias Warneke *2023-12-25 23:39:37*\n\n**Update sphinx.yml**\n\n\n[2974f](https://github.com/JSQLParser/JSqlParser/commit/2974f4d20e2d785) manticore-projects *2023-12-16 07:13:01*\n\n**Update sphinx.yml**\n\n\n[a35fb](https://github.com/JSQLParser/JSqlParser/commit/a35fbe77b33a07b) manticore-projects *2023-12-16 04:42:01*\n\n**Update build.gradle**\n\n\n[546b3](https://github.com/JSQLParser/JSqlParser/commit/546b3ee00e4c3f8) manticore-projects *2023-12-15 09:14:49*\n\n**Update build.gradle**\n\n\n[48b3a](https://github.com/JSQLParser/JSqlParser/commit/48b3acbeef56b2d) manticore-projects *2023-12-15 09:11:51*\n\n**Closed #1814, mysql and mariadb can use `index type` before `ON` (#1918)**\n\n\n[b0aff](https://github.com/JSQLParser/JSqlParser/commit/b0aff31314a8df4) jxnu-liguobin *2023-12-15 04:56:55*\n\n**Fix conflict (#1915)**\n\n\n[2ae1d](https://github.com/JSQLParser/JSqlParser/commit/2ae1d53e56e45b2) jxnu-liguobin *2023-12-14 07:22:57*\n\n**Fix typo in migration.rst (#1888)**\n\n* Found a typo in the 4.7 migration document. Trivial PR. Please merge. \n\n[902e4](https://github.com/JSQLParser/JSqlParser/commit/902e4c46f783985) Ed Sabol *2023-11-10 03:05:39*\n\n**Unit tests support multi-os and higher versions of jdk (#1886)**\n\n* fix: tokenBlockPattern support \\r\\n or \\r \n* test: remove nashorn ignore annotation to support jdk11+ \n\n[97e92](https://github.com/JSQLParser/JSqlParser/commit/97e9229d15df7d6) human-user *2023-11-08 03:07:04*\n\n**Support for Nested With Clauses Added**\n\n\n[59104](https://github.com/JSQLParser/JSqlParser/commit/59104fd96f29a2e) MathewJoseph31 *2023-09-12 12:01:59*\n\n**Support for Array Contains (&>) and ContainedBy (<&) operator added**\n\n\n[727c7](https://github.com/JSQLParser/JSqlParser/commit/727c732fd217843) MathewJoseph31 *2023-09-12 12:01:20*\n\n**Support for postgres overlap operator && added, natural left/right/full outer joins added**\n\n\n[6955c](https://github.com/JSQLParser/JSqlParser/commit/6955c4391e65a33) MathewJoseph31 *2023-09-12 12:01:15*\n\n**add support for index hints in Update statement for MySQL**\n\n\n[9a67d](https://github.com/JSQLParser/JSqlParser/commit/9a67d1277a0bf80) joeqiao *2022-11-08 01:27:25*\n\n**added support for T-SQL left and right joins (*= and =*)**\n\n\n[786c8](https://github.com/JSQLParser/JSqlParser/commit/786c8fc65858ff6) Nico *2019-01-29 11:11:07*\n\n\n## jsqlparser-4.7 (2023-09-02)\n\n### Breaking changes\n\n-  add support for INTERPRET function parsing (#1816) ([180ec](https://github.com/JSQLParser/JSqlParser/commit/180ec68cc9fa7eb) Matteo Sist)  \n-  Remove `ItemsList`, `MultiExpressionList`, `Replace` ([14170](https://github.com/JSQLParser/JSqlParser/commit/141708eabc4f2ea) Andreas Reichel)  \n-  Consolidate the `ExpressionList`, removing many redundant List alike Classes and Productions ([288b1](https://github.com/JSQLParser/JSqlParser/commit/288b177fe9c8a4c) Andreas Reichel)  \n-  remove `SelectExpressionItem` in favor of `SelectItem` ([b9057](https://github.com/JSQLParser/JSqlParser/commit/b9057d2b75cd1d7) Andreas Reichel)  \n-  ClickHouse `Select...` ``FINAL` modifier ([4b7f2](https://github.com/JSQLParser/JSqlParser/commit/4b7f21c54c24d04) Andreas Reichel)  \n\n### Features\n\n-  H2 BYTEA Values `X'01' '02'` ([54828](https://github.com/JSQLParser/JSqlParser/commit/54828a456a7f192) Andreas Reichel)  \n-  BigQuery Except(..) Replace(..) syntax ([4b4ae](https://github.com/JSQLParser/JSqlParser/commit/4b4ae04f44ff18b) Andreas Reichel)  \n-  implement a few missing expressions ([04128](https://github.com/JSQLParser/JSqlParser/commit/0412897f9ea809f) Andreas Reichel)  \n-  SQL:2016 TABLESAMPLE clause ([4d8a5](https://github.com/JSQLParser/JSqlParser/commit/4d8a512191a4a1b) Andreas Reichel)  \n-  add a method checking balanced brackets ([52df3](https://github.com/JSQLParser/JSqlParser/commit/52df32dd8ec2c10) Andreas Reichel)  \n-  add support for INTERPRET function parsing (#1816) ([180ec](https://github.com/JSQLParser/JSqlParser/commit/180ec68cc9fa7eb) Matteo Sist)  \n-  MySQL `NOT RLIKE`, `NOT REGEXP` expressions ([f1325](https://github.com/JSQLParser/JSqlParser/commit/f132547f56a1edd) Andreas Reichel)  \n-  Postgres `NOTNULL` support ([386dc](https://github.com/JSQLParser/JSqlParser/commit/386dc7a0df98f1c) manticore-projects)  \n-  `QUALIFY` clause ([75e4d](https://github.com/JSQLParser/JSqlParser/commit/75e4d30747a7e6e) Andreas Reichel)  \n-  T-SQL `FOR ...` clause ([8027d](https://github.com/JSQLParser/JSqlParser/commit/8027dbf2cbf9163) Andreas Reichel)  \n-  Quoted Identifiers can contain double-quotes (PostgreSQL) ([73c55](https://github.com/JSQLParser/JSqlParser/commit/73c55fda1ac6a42) Andreas Reichel)  \n-  functions blocks, parenthesed JSON Expressions ([5263b](https://github.com/JSQLParser/JSqlParser/commit/5263b91f3e555b7) Andreas Reichel)  \n-  functions blocks, parenthesed JSON Expressions ([e19dc](https://github.com/JSQLParser/JSqlParser/commit/e19dc0e081f741d) Andreas Reichel)  \n-  parse CREATE TRIGGER as UnsupportedStatement ([64b03](https://github.com/JSQLParser/JSqlParser/commit/64b0331f772278b) Andreas Reichel)  \n-  chaining JSON Expressions ([6ef5e](https://github.com/JSQLParser/JSqlParser/commit/6ef5e0b6ee06211) Andreas Reichel)  \n-  Write API documentation to the WebSite via XMLDoclet ([c5366](https://github.com/JSQLParser/JSqlParser/commit/c53667f8eff30e3) Andreas Reichel)  \n-  `MEMBER OF` condition as shown at https://dev.mysql.com/doc/refman/8.0/en/json-search-functions.html#operator_member-of ([6e7a7](https://github.com/JSQLParser/JSqlParser/commit/6e7a78dfc563749) Andreas Reichel)  \n-  access Elements of Array Columns ([09a70](https://github.com/JSQLParser/JSqlParser/commit/09a70a499121792) Andreas Reichel)  \n-  JdbcNamedParameter allows \"&\" (instead of \":\") ([c07a4](https://github.com/JSQLParser/JSqlParser/commit/c07a43b3c128a5d) Andreas Reichel)  \n-  Consolidate the `ExpressionList`, removing many redundant List alike Classes and Productions ([288b1](https://github.com/JSQLParser/JSqlParser/commit/288b177fe9c8a4c) Andreas Reichel)  \n-  ClickHouse `LIMIT ... BY ...` clause ([4d5e2](https://github.com/JSQLParser/JSqlParser/commit/4d5e26d3febe686) Andreas Reichel)  \n-  implement SQL:2016 Convert() and Trim() ([3a27a](https://github.com/JSQLParser/JSqlParser/commit/3a27a9dd4add700) Andreas Reichel)  \n-  Switch off contradicting `JOIN` qualifiers, when setting a qualifier ([b6ea8](https://github.com/JSQLParser/JSqlParser/commit/b6ea8b162450545) Andreas Reichel)  \n-  Test if a JOIN is an INNER JOIN according to the SQL:2016 ([6281b](https://github.com/JSQLParser/JSqlParser/commit/6281b07a543b088) Andreas Reichel)  \n-  ClickHouse `Select...` ``FINAL` modifier ([4b7f2](https://github.com/JSQLParser/JSqlParser/commit/4b7f21c54c24d04) Andreas Reichel)  \n-  Multi-Part Names for Variables and Parameters ([9da7a](https://github.com/JSQLParser/JSqlParser/commit/9da7a06ebe9b036) Andreas Reichel)  \n-  Oracle `HAVING` before `GROUP BY` ([4efb9](https://github.com/JSQLParser/JSqlParser/commit/4efb99f1510ad16) Andreas Reichel)  \n-  Lateral View ([8a1bd](https://github.com/JSQLParser/JSqlParser/commit/8a1bdeccbadb04f) Andreas Reichel)  \n-  FETCH uses EXPRESSION ([0979b](https://github.com/JSQLParser/JSqlParser/commit/0979b2e5ea76b8c) Andreas Reichel)  \n-  Support more Statement Separators ([b0814](https://github.com/JSQLParser/JSqlParser/commit/b08148414bd8f30) Andreas Reichel)  \n-  CREATE VIEW ... REFRESH AUTO... ([1c8d8](https://github.com/JSQLParser/JSqlParser/commit/1c8d8daf48ebac1) Andreas Reichel)  \n-  Oracle Alternative Quoting ([c57c4](https://github.com/JSQLParser/JSqlParser/commit/c57c427032c91d0) Andreas Reichel)  \n-  make important Classes Serializable ([b94b2](https://github.com/JSQLParser/JSqlParser/commit/b94b2cc6a8f8c7d) Andreas Reichel)  \n\n### Bug Fixes\n\n-  ExpressionList of Expressions in `Values` ([994e6](https://github.com/JSQLParser/JSqlParser/commit/994e6c63d065a48) Andreas Reichel)  \n-  check for NULL before iterating ([beb68](https://github.com/JSQLParser/JSqlParser/commit/beb68d55239da97) Andreas Reichel)  \n-  Backslash escaped single quote `'\\''` ([a2975](https://github.com/JSQLParser/JSqlParser/commit/a29754341adeffc) Andreas Reichel)  \n-  `INSERT` must use simple Column Names only ([420d7](https://github.com/JSQLParser/JSqlParser/commit/420d7d834760f14) Andreas Reichel)  \n-  SPHINX modules and themes ([6f277](https://github.com/JSQLParser/JSqlParser/commit/6f277654b9344ec) Andreas Reichel)  \n-  expose IntervalExpression attributes and use DeParser ([b6fab](https://github.com/JSQLParser/JSqlParser/commit/b6fab2a484e0b47) Andreas Reichel)  \n-  throw the specific exception ([cb960](https://github.com/JSQLParser/JSqlParser/commit/cb960a35647a19a) Andreas Reichel)  \n-  Complex Parsing Approach ([4f048](https://github.com/JSQLParser/JSqlParser/commit/4f0488ccb4611f0) Andreas Reichel)  \n-  issue #1789 ([32ec5](https://github.com/JSQLParser/JSqlParser/commit/32ec56114c1fbc4) Andreas Reichel)  \n-  issue #1789 ([d20c8](https://github.com/JSQLParser/JSqlParser/commit/d20c8e94de64e2a) Andreas Reichel)  \n-  issue #1791 ([88d1b](https://github.com/JSQLParser/JSqlParser/commit/88d1b62f0038a9a) Andreas Reichel)  \n-  Java Version 8 ([7cecd](https://github.com/JSQLParser/JSqlParser/commit/7cecd293cf4e0ea) Andreas Reichel)  \n-  find the correct position when field belongs to an internal class ([21389](https://github.com/JSQLParser/JSqlParser/commit/21389b712995674) Andreas Reichel)  \n-  Remove tests for `()`, since `ParenthesedExpressionList` will catch those too ([905ef](https://github.com/JSQLParser/JSqlParser/commit/905ef6512d592d6) Andreas Reichel)  \n-  assign Enum case insensitive ([fc577](https://github.com/JSQLParser/JSqlParser/commit/fc577caa4146878) Andreas Reichel)  \n\n### Other changes\n\n****\n\n\n[d45f2](https://github.com/JSQLParser/JSqlParser/commit/d45f29ef42a6859) Tobias Warneke *2023-09-01 22:07:49*\n\n**Fixing a problem with an OP_CONCAT in WhenExpression (#1837)**\n\n* fix: Concatenation in inner ELSE statement (Second level of Case Expression) \n* fix: broken tests \n* fix: Delete lookahead(3) \n\n[f05cb](https://github.com/JSQLParser/JSqlParser/commit/f05cb7ff4aa46c5) amigalev *2023-08-20 04:43:30*\n\n**Update Gradle JavaCC parser to latest version (3.0.0) (#1843)**\n\n\n[c59a0](https://github.com/JSQLParser/JSqlParser/commit/c59a088dfaee75a) Zbynek Konecny *2023-08-05 22:14:21*\n\n**Update sql-parser-error.md**\n\n\n[41d70](https://github.com/JSQLParser/JSqlParser/commit/41d705bb1036b34) manticore-projects *2023-07-26 00:37:51*\n\n**Update sql-parser-error.md**\n\n\n[812c6](https://github.com/JSQLParser/JSqlParser/commit/812c6cae3a8438b) manticore-projects *2023-07-26 00:37:14*\n\n**Update sql-parser-error.md**\n\n\n[b34d3](https://github.com/JSQLParser/JSqlParser/commit/b34d3c88a881c0f) manticore-projects *2023-07-25 00:09:05*\n\n**Update sphinx.yml**\n\n* fix the FURO theme \n\n[51cc4](https://github.com/JSQLParser/JSqlParser/commit/51cc444ff98ad1d) manticore-projects *2023-06-01 02:49:23*\n\n**Create gradle.yml**\n\n\n[be7fc](https://github.com/JSQLParser/JSqlParser/commit/be7fc53cff240be) manticore-projects *2023-05-18 10:16:14*\n\n**Update sphinx.yml**\n\n\n[11323](https://github.com/JSQLParser/JSqlParser/commit/11323388ab4abfd) manticore-projects *2023-05-14 13:10:16*\n\n****\n\n\n[0aa8a](https://github.com/JSQLParser/JSqlParser/commit/0aa8a629b9cecc2) Tobias Warneke *2023-04-27 21:18:29*\n\n**Fix #1758: Use long for Feature.timeOut (#1759)**\n\n* Co-authored-by: Tobias &lt;t.warneke@gmx.net&gt; \n\n[3314e](https://github.com/JSQLParser/JSqlParser/commit/3314edf0ea17772) Tomasz Zarna *2023-04-27 20:30:31*\n\n**Ignoring unnecessarily generated jacoco report (#1762)**\n\n* Ignoring unnecessarily generated jacoco report \n* Ignoring unnecessarily generated by pmd plugin \n* --------- \n* Co-authored-by: other &lt;other@ECE-A55006.austin.utexas.edu&gt; \n* Co-authored-by: Tobias &lt;t.warneke@gmx.net&gt; \n\n[1bbb1](https://github.com/JSQLParser/JSqlParser/commit/1bbb1443d84684c) optimizing-ci-builds *2023-04-27 19:50:42*\n\n**Ignoring unnecessarily generated by pmd plugin (#1763)**\n\n* Co-authored-by: other &lt;other@ECE-A55006.austin.utexas.edu&gt; \n\n[52648](https://github.com/JSQLParser/JSqlParser/commit/52648277e69fa07) optimizing-ci-builds *2023-04-27 19:49:15*\n\n**Refactor Parenthesed SelectBody and FromItem (#1754)**\n\n* Fixes #1684: Support CREATE MATERIALIZED VIEW with AUTO REFRESH \n* Support parsing create view statements in Redshift with AUTO REFRESH \n* option. \n* Reduce cyclomatic complexity in CreateView.toString \n* Extract adding the force option into a dedicated method resulting in the \n* cyclomatic complexity reduction of the CreateView.toString method. \n* Enhanced Keywords \n* Add Keywords and document, which keywords are allowed for what purpose \n* Fix incorrect tests \n* Define Reserved Keywords explicitly \n* Derive All Keywords from Grammar directly \n* Generate production for Object Names (semi-) automatically \n* Add parametrized Keyword Tests \n* Fix test resources \n* Adjust Gradle to JUnit 5 \n* Parallel Test execution \n* Gradle Caching \n* Explicitly request for latest JavaCC 7.0.10 \n* Do not mark SpeedTest for concurrent execution \n* Remove unused imports \n* Adjust Gradle to JUnit 5 \n* Parallel Test execution \n* Gradle Caching \n* Explicitly request for latest JavaCC 7.0.10 \n* Do not mark SpeedTest for concurrent execution \n* Remove unused imports \n* Sphinx Documentation \n* Update the MANTICORE Sphinx Theme, but ignore it in GIT \n* Add the content to the Sphinx sites \n* Add a Gradle function to derive Stable and Snapshot version from GIT Tags \n* Add a Gradle GIT change task \n* Add a Gradle sphinx task \n* Add a special Test case for illustrating the use of JSQLParser \n* doc: request for &#x60;Conventional Commit&#x60; messages \n* feat: make important Classes Serializable \n* Implement Serializable for persisting via ObjectOutputStream \n* chore: Make Serializable \n* doc: Better integration of the RR diagrams \n* - apply neutral Sphinx theme \n* - insert the RR diagrams into the sphinx sources \n* - better documentation on Gradle dependencies \n* - link GitHub repository \n* Merge \n* feat: Oracle Alternative Quoting \n* - add support for Oracle Alternative Quoting e.g. &#x60;q&#x27;(...)&#x27;&#x60; \n* - fixes #1718 \n* - add a Logo and FavIcon to the Website \n* - document recent changes on Quoting/Escaping \n* - add an example on building SQL from Java \n* - rework the README.md, promote the Website \n* - add Spotless Formatter, using Google Java Style (with Tab&#x3D;4 Spaces) \n* style: Appease PMD/Codacy \n* doc: fix the issue template \n* - fix the issue template \n* - fix the -SNAPSHOT version number \n* Update issue templates \n* Update issue templates \n* feat: Support more Statement Separators \n* - &#x60;GO&#x60; \n* - Slash &#x60;/&#x60; \n* - Two empty lines \n* feat: FETCH uses EXPRESSION \n* - &#x60;FETCH&#x60; uses &#x60;EXPRESSION&#x60; instead of SimpleJDBCParameter only \n* - Visit/Accept &#x60;FETCH&#x60; &#x60;EXPRESSION&#x60; instead of &#x60;append&#x60; to String \n* - Visit/Accept &#x60;OFFSET&#x60; &#x60;EXPRESSION&#x60; instead of &#x60;append&#x60; to String \n* - Gradle: remove obsolete/incompatible &#x60;jvmArgs&#x60; from Test() \n* style: apply Spotless \n* test: commit missing test \n* fix: JSon Operator can use Simple Function \n* Supports &#x60;Function() -&gt;&gt; Literal&#x60; (although &#x60;Function()&#x60; would not allow Nested Expression Parameters) \n* fixes #1571 \n* style: Reformat changed files and headers \n* style: Remove unused variable \n* feat: Add support for Hangul &quot;\\uAC00&quot;-&quot;\\uD7A3&quot; \n* fixes #1747 \n* style: expose &#x60;SetStatement&#x60; key-value list \n* fixes #1746 \n* style: Appease PMD/Codacy \n* feat: &#x60;ConflictTarget&#x60; allows multiple &#x60;IndexColumnNames&#x60; \n* fixes #1749 \n* fixes #1633 \n* fixes #955 \n* doc: fix reference in the Java Doc \n* build: better Upload Groovy Task \n* feat: ParenthesedSelectBody and ParenthesedFromItem \n* - First properly working version \n* - Work in progress, 13 tests failing \n* feat: ParenthesedSelectBody and ParenthesedFromItem \n* - delete unneeded ParenthesedJoin \n* - rename ParenthesisFromItem into ParenthesedFromItem \n* feat: ParenthesedSelectBody and ParenthesedFromItem \n* - fix &#x60;NULLS FIRST&#x60; and &#x60;NULLS LAST&#x60; \n* feat: ParenthesedSelectBody and ParenthesedFromItem \n* - fix Oracle Hints \n* feat: ParenthesedSelectBody and ParenthesedFromItem \n* - parse &#x60;SetOperation&#x60; only after a (first plain) SelectBody has found, this fixes the performance issue \n* - one more special Oracle Test succeeds \n* - 5 remaining test failures \n* feat: ParenthesedSelectBody and ParenthesedFromItem \n* - extract &#x60;OrderByElements&#x60; into &#x60;SelectBody&#x60; \n* - one more special Oracle Test succeeds \n* - all tests succeed \n* style: Appease PMD/Codacy \n* style: Appease PMD/Codacy \n* feat: Refactor SelectBody implementations \n* - &#x60;SelectBody&#x60; implements &#x60;FromItem&#x60; \n* - get rid of &#x60;SubSelect&#x60; and &#x60;SpecialSubSelect&#x60; \n* - &#x60;Merge&#x60; can use &#x60;FromItem&#x60; instead of &#x60;SubSelect&#x60; or &#x60;Table&#x60; \n* - &#x60;LateralSubSelect&#x60; extends &#x60;ParenthesedSelectBody&#x60; directly \n* - Simplify the &#x60;Select&#x60; statement, although it is still redundant since     &#x60;SelectBody&#x60; also could implement &#x60;Statement&#x60; directly \n* - &#x60;WithItem&#x60; can use &#x60;SelectBody&#x60; directly, which allows for nested &#x60;WithItems&#x60; \n* BREAKING-CHANGE: Lots of redundant methods and intermediate removed \n* feat: Refactor SelectBody implementations \n* - &#x60;SelectBody&#x60; implements &#x60;Statement&#x60; and so makes &#x60;Select&#x60; redundant \n* - get rid of &#x60;ValuesList&#x60; \n* - refactor &#x60;ValuesStatement&#x60; into &#x60;Values&#x60; which just implements &#x60;SelectBody&#x60; (and becomes a &#x60;Statement&#x60; and a &#x60;FromItem&#x60;), move to &#x60;select&#x60; package \n* BREAKING-CHANGE: Lots of redundant methods and intermediate removed \n* style: Code cleanup \n* - remove 3 unused/obsolete productions \n* - appease PMD/Codacy \n* feat: Merge &#x60;SelectBody&#x60; into &#x60;Select&#x60; Statement \n* - former &#x60;SelectBody&#x60; implements &#x60;Statement&#x60; and so becomes &#x60;Select&#x60; \n* - this reduces the AST by 1 hierarchy level \n* style: Remove unused import \n* test: @Disabled invalid Test \n* style: Appease PMD/Codacy \n* test: Add a SubSelect Parsing Test \n* --------- \n* Co-authored-by: zaza &lt;tzarna@gmail.com&gt; \n\n[a312d](https://github.com/JSQLParser/JSqlParser/commit/a312dcdc2d618f1) manticore-projects *2023-04-27 19:38:24*\n\n****\n\n\n[c1c92](https://github.com/JSQLParser/JSqlParser/commit/c1c92ade94ebe60) Tobias Warneke *2023-04-01 19:54:09*\n\n**Assorted Fixes #7 (#1745)**\n\n* Fixes #1684: Support CREATE MATERIALIZED VIEW with AUTO REFRESH \n* Support parsing create view statements in Redshift with AUTO REFRESH \n* option. \n* Reduce cyclomatic complexity in CreateView.toString \n* Extract adding the force option into a dedicated method resulting in the \n* cyclomatic complexity reduction of the CreateView.toString method. \n* Enhanced Keywords \n* Add Keywords and document, which keywords are allowed for what purpose \n* Fix incorrect tests \n* Define Reserved Keywords explicitly \n* Derive All Keywords from Grammar directly \n* Generate production for Object Names (semi-) automatically \n* Add parametrized Keyword Tests \n* Fix test resources \n* Adjust Gradle to JUnit 5 \n* Parallel Test execution \n* Gradle Caching \n* Explicitly request for latest JavaCC 7.0.10 \n* Do not mark SpeedTest for concurrent execution \n* Remove unused imports \n* Adjust Gradle to JUnit 5 \n* Parallel Test execution \n* Gradle Caching \n* Explicitly request for latest JavaCC 7.0.10 \n* Do not mark SpeedTest for concurrent execution \n* Remove unused imports \n* Sphinx Documentation \n* Update the MANTICORE Sphinx Theme, but ignore it in GIT \n* Add the content to the Sphinx sites \n* Add a Gradle function to derive Stable and Snapshot version from GIT Tags \n* Add a Gradle GIT change task \n* Add a Gradle sphinx task \n* Add a special Test case for illustrating the use of JSQLParser \n* doc: request for &#x60;Conventional Commit&#x60; messages \n* feat: make important Classes Serializable \n* Implement Serializable for persisting via ObjectOutputStream \n* chore: Make Serializable \n* doc: Better integration of the RR diagrams \n* - apply neutral Sphinx theme \n* - insert the RR diagrams into the sphinx sources \n* - better documentation on Gradle dependencies \n* - link GitHub repository \n* Merge \n* feat: Oracle Alternative Quoting \n* - add support for Oracle Alternative Quoting e.g. &#x60;q&#x27;(...)&#x27;&#x60; \n* - fixes #1718 \n* - add a Logo and FavIcon to the Website \n* - document recent changes on Quoting/Escaping \n* - add an example on building SQL from Java \n* - rework the README.md, promote the Website \n* - add Spotless Formatter, using Google Java Style (with Tab&#x3D;4 Spaces) \n* style: Appease PMD/Codacy \n* doc: fix the issue template \n* - fix the issue template \n* - fix the -SNAPSHOT version number \n* Update issue templates \n* Update issue templates \n* feat: Support more Statement Separators \n* - &#x60;GO&#x60; \n* - Slash &#x60;/&#x60; \n* - Two empty lines \n* feat: FETCH uses EXPRESSION \n* - &#x60;FETCH&#x60; uses &#x60;EXPRESSION&#x60; instead of SimpleJDBCParameter only \n* - Visit/Accept &#x60;FETCH&#x60; &#x60;EXPRESSION&#x60; instead of &#x60;append&#x60; to String \n* - Visit/Accept &#x60;OFFSET&#x60; &#x60;EXPRESSION&#x60; instead of &#x60;append&#x60; to String \n* - Gradle: remove obsolete/incompatible &#x60;jvmArgs&#x60; from Test() \n* style: apply Spotless \n* test: commit missing test \n* fix: JSon Operator can use Simple Function \n* Supports &#x60;Function() -&gt;&gt; Literal&#x60; (although &#x60;Function()&#x60; would not allow Nested Expression Parameters) \n* fixes #1571 \n* style: Reformat changed files and headers \n* style: Remove unused variable \n* feat: Add support for Hangul &quot;\\uAC00&quot;-&quot;\\uD7A3&quot; \n* fixes #1747 \n* style: expose &#x60;SetStatement&#x60; key-value list \n* fixes #1746 \n* style: Appease PMD/Codacy \n* feat: &#x60;ConflictTarget&#x60; allows multiple &#x60;IndexColumnNames&#x60; \n* fixes #1749 \n* fixes #1633 \n* fixes #955 \n* doc: fix reference in the Java Doc \n* build: better Upload Groovy Task \n* --------- \n* Co-authored-by: zaza &lt;tzarna@gmail.com&gt; \n\n[31ef1](https://github.com/JSQLParser/JSqlParser/commit/31ef1aaf23e2917) manticore-projects *2023-03-21 22:04:58*\n\n**disable xml report (#1748)**\n\n* Co-authored-by: other &lt;other@ECE-A55006.austin.utexas.edu&gt; \n\n[476d9](https://github.com/JSQLParser/JSqlParser/commit/476d96965492131) optimizing-ci-builds *2023-03-21 21:58:25*\n\n**Assorted Fixes #6 (#1740)**\n\n* Fixes #1684: Support CREATE MATERIALIZED VIEW with AUTO REFRESH \n* Support parsing create view statements in Redshift with AUTO REFRESH \n* option. \n* Reduce cyclomatic complexity in CreateView.toString \n* Extract adding the force option into a dedicated method resulting in the \n* cyclomatic complexity reduction of the CreateView.toString method. \n* Enhanced Keywords \n* Add Keywords and document, which keywords are allowed for what purpose \n* Fix incorrect tests \n* Define Reserved Keywords explicitly \n* Derive All Keywords from Grammar directly \n* Generate production for Object Names (semi-) automatically \n* Add parametrized Keyword Tests \n* Fix test resources \n* Adjust Gradle to JUnit 5 \n* Parallel Test execution \n* Gradle Caching \n* Explicitly request for latest JavaCC 7.0.10 \n* Do not mark SpeedTest for concurrent execution \n* Remove unused imports \n* Adjust Gradle to JUnit 5 \n* Parallel Test execution \n* Gradle Caching \n* Explicitly request for latest JavaCC 7.0.10 \n* Do not mark SpeedTest for concurrent execution \n* Remove unused imports \n* Sphinx Documentation \n* Update the MANTICORE Sphinx Theme, but ignore it in GIT \n* Add the content to the Sphinx sites \n* Add a Gradle function to derive Stable and Snapshot version from GIT Tags \n* Add a Gradle GIT change task \n* Add a Gradle sphinx task \n* Add a special Test case for illustrating the use of JSQLParser \n* doc: request for &#x60;Conventional Commit&#x60; messages \n* feat: make important Classes Serializable \n* Implement Serializable for persisting via ObjectOutputStream \n* chore: Make Serializable \n* doc: Better integration of the RR diagrams \n* - apply neutral Sphinx theme \n* - insert the RR diagrams into the sphinx sources \n* - better documentation on Gradle dependencies \n* - link GitHub repository \n* Merge \n* feat: Oracle Alternative Quoting \n* - add support for Oracle Alternative Quoting e.g. &#x60;q&#x27;(...)&#x27;&#x60; \n* - fixes #1718 \n* - add a Logo and FavIcon to the Website \n* - document recent changes on Quoting/Escaping \n* - add an example on building SQL from Java \n* - rework the README.md, promote the Website \n* - add Spotless Formatter, using Google Java Style (with Tab&#x3D;4 Spaces) \n* style: Appease PMD/Codacy \n* doc: fix the issue template \n* - fix the issue template \n* - fix the -SNAPSHOT version number \n* Update issue templates \n* Update issue templates \n* feat: Support more Statement Separators \n* - &#x60;GO&#x60; \n* - Slash &#x60;/&#x60; \n* - Two empty lines \n* feat: FETCH uses EXPRESSION \n* - &#x60;FETCH&#x60; uses &#x60;EXPRESSION&#x60; instead of SimpleJDBCParameter only \n* - Visit/Accept &#x60;FETCH&#x60; &#x60;EXPRESSION&#x60; instead of &#x60;append&#x60; to String \n* - Visit/Accept &#x60;OFFSET&#x60; &#x60;EXPRESSION&#x60; instead of &#x60;append&#x60; to String \n* - Gradle: remove obsolete/incompatible &#x60;jvmArgs&#x60; from Test() \n* style: apply Spotless \n* test: commit missing test \n* feat: Unicode CJK Unified Ideographs (Unicode block) \n* fixes #1741 \n* feat: Unicode CJK Unified Ideographs (Unicode block) \n* fixes #1741 \n* feat: Functions with nested Attributes \n* Supports &#x60;SELECT schemaName.f1(arguments).f2(arguments).f3.f4&#x60; and similar constructs \n* fixes #1742 \n* fixes #1050 \n* --------- \n* Co-authored-by: zaza &lt;tzarna@gmail.com&gt; \n\n[adeed](https://github.com/JSQLParser/JSqlParser/commit/adeed5359c65b8f) manticore-projects *2023-03-09 21:22:40*\n\n**version 4.7-SNAPSHOT**\n\n\n[74570](https://github.com/JSQLParser/JSqlParser/commit/745701bfb90a233) Tobias Warneke *2023-02-23 21:41:03*\n\n**Update issue templates**\n\n\n[4aeaf](https://github.com/JSQLParser/JSqlParser/commit/4aeafbc68f0525c) manticore-projects *2023-02-01 01:37:53*\n\n**Update issue templates**\n\n\n[46314](https://github.com/JSQLParser/JSqlParser/commit/46314c41eb06957) manticore-projects *2023-02-01 01:24:35*\n\n**Sphinx Documentation**\n\n* Update the MANTICORE Sphinx Theme, but ignore it in GIT \n* Add the content to the Sphinx sites \n* Add a Gradle function to derive Stable and Snapshot version from GIT Tags \n* Add a Gradle GIT change task \n* Add a Gradle sphinx task \n* Add a special Test case for illustrating the use of JSQLParser \n\n[2ef66](https://github.com/JSQLParser/JSqlParser/commit/2ef6637afffa943) Andreas Reichel *2023-01-21 04:06:00*\n\n**Define Reserved Keywords explicitly**\n\n* Derive All Keywords from Grammar directly \n* Generate production for Object Names (semi-) automatically \n* Add parametrized Keyword Tests \n\n[f49e8](https://github.com/JSQLParser/JSqlParser/commit/f49e828fc9c5f2f) Andreas Reichel *2023-01-21 04:05:51*\n\n**Adjust Gradle to JUnit 5**\n\n* Parallel Test execution \n* Gradle Caching \n* Explicitly request for latest JavaCC 7.0.10 \n\n[e960a](https://github.com/JSQLParser/JSqlParser/commit/e960a35e591ce07) Andreas Reichel *2023-01-21 04:05:51*\n\n**Enhanced Keywords**\n\n* Add Keywords and document, which keywords are allowed for what purpose \n\n[b5321](https://github.com/JSQLParser/JSqlParser/commit/b5321d6e8bac588) Andreas Reichel *2023-01-21 04:05:51*\n\n**Remove unused imports**\n\n\n[a016b](https://github.com/JSQLParser/JSqlParser/commit/a016be0c7f8a46f) Andreas Reichel *2023-01-21 04:05:51*\n\n**Fix test resources**\n\n\n[86f33](https://github.com/JSQLParser/JSqlParser/commit/86f337dbafd10ab) Andreas Reichel *2023-01-21 04:05:51*\n\n**Do not mark SpeedTest for concurrent execution**\n\n\n[67f79](https://github.com/JSQLParser/JSqlParser/commit/67f7951a048a05d) Andreas Reichel *2023-01-21 04:05:51*\n\n**Fix incorrect tests**\n\n\n[5fae2](https://github.com/JSQLParser/JSqlParser/commit/5fae2f5984c3b39) Andreas Reichel *2023-01-21 04:05:51*\n\n**Remove unused imports**\n\n\n[3ba54](https://github.com/JSQLParser/JSqlParser/commit/3ba5410bf052091) Andreas Reichel *2023-01-21 04:05:51*\n\n**Adjust Gradle to JUnit 5**\n\n* Parallel Test execution \n* Gradle Caching \n* Explicitly request for latest JavaCC 7.0.10 \n\n[2d51a](https://github.com/JSQLParser/JSqlParser/commit/2d51a82d3e9e51c) Andreas Reichel *2023-01-21 04:05:51*\n\n**Do not mark SpeedTest for concurrent execution**\n\n\n[232af](https://github.com/JSQLParser/JSqlParser/commit/232aff6873f24f9) Andreas Reichel *2023-01-21 04:05:51*\n\n**Reduce cyclomatic complexity in CreateView.toString**\n\n* Extract adding the force option into a dedicated method resulting in the \n* cyclomatic complexity reduction of the CreateView.toString method. \n\n[ea447](https://github.com/JSQLParser/JSqlParser/commit/ea4477bb775ebdb) zaza *2023-01-08 20:43:40*\n\n**Fixes #1684: Support CREATE MATERIALIZED VIEW with AUTO REFRESH**\n\n* Support parsing create view statements in Redshift with AUTO REFRESH \n* option. \n\n[74715](https://github.com/JSQLParser/JSqlParser/commit/747152a9fc1bfd1) zaza *2022-12-11 20:03:52*\n\n\n## jsqlparser-4.6 (2023-02-23)\n\n### Bug Fixes\n\n-  add missing public Getter (#1632) ([d2212](https://github.com/JSQLParser/JSqlParser/commit/d2212776ac5eb83) manticore-projects)  \n\n### Other changes\n\n**actualized release plugin**\n\n\n[9911a](https://github.com/JSQLParser/JSqlParser/commit/9911ad7a990356f) Tobias Warneke *2023-02-23 21:17:52*\n\n**actualized release plugin**\n\n\n[0b2c3](https://github.com/JSQLParser/JSqlParser/commit/0b2c33b29928ec4) Tobias Warneke *2023-02-23 21:16:43*\n\n****\n\n\n[b07f7](https://github.com/JSQLParser/JSqlParser/commit/b07f791b27c3ee4) Tobias Warneke *2023-02-23 19:50:39*\n\n**Update build.gradle**\n\n\n[35233](https://github.com/JSQLParser/JSqlParser/commit/35233882aaffb0e) Tobias *2023-02-17 20:20:25*\n\n**Update README.md**\n\n\n[0b092](https://github.com/JSQLParser/JSqlParser/commit/0b09229a3d92547) Tobias *2023-02-17 16:27:41*\n\n**Oracle Alternative Quoting (#1722)**\n\n* Fixes #1684: Support CREATE MATERIALIZED VIEW with AUTO REFRESH \n* Support parsing create view statements in Redshift with AUTO REFRESH \n* option. \n* Reduce cyclomatic complexity in CreateView.toString \n* Extract adding the force option into a dedicated method resulting in the \n* cyclomatic complexity reduction of the CreateView.toString method. \n* Enhanced Keywords \n* Add Keywords and document, which keywords are allowed for what purpose \n* Fix incorrect tests \n* Define Reserved Keywords explicitly \n* Derive All Keywords from Grammar directly \n* Generate production for Object Names (semi-) automatically \n* Add parametrized Keyword Tests \n* Fix test resources \n* Adjust Gradle to JUnit 5 \n* Parallel Test execution \n* Gradle Caching \n* Explicitly request for latest JavaCC 7.0.10 \n* Do not mark SpeedTest for concurrent execution \n* Remove unused imports \n* Adjust Gradle to JUnit 5 \n* Parallel Test execution \n* Gradle Caching \n* Explicitly request for latest JavaCC 7.0.10 \n* Do not mark SpeedTest for concurrent execution \n* Remove unused imports \n* Sphinx Documentation \n* Update the MANTICORE Sphinx Theme, but ignore it in GIT \n* Add the content to the Sphinx sites \n* Add a Gradle function to derive Stable and Snapshot version from GIT Tags \n* Add a Gradle GIT change task \n* Add a Gradle sphinx task \n* Add a special Test case for illustrating the use of JSQLParser \n* doc: request for &#x60;Conventional Commit&#x60; messages \n* feat: make important Classes Serializable \n* Implement Serializable for persisting via ObjectOutputStream \n* chore: Make Serializable \n* doc: Better integration of the RR diagrams \n* - apply neutral Sphinx theme \n* - insert the RR diagrams into the sphinx sources \n* - better documentation on Gradle dependencies \n* - link GitHub repository \n* Merge \n* feat: Oracle Alternative Quoting \n* - add support for Oracle Alternative Quoting e.g. &#x60;q&#x27;(...)&#x27;&#x60; \n* - fixes #1718 \n* - add a Logo and FavIcon to the Website \n* - document recent changes on Quoting/Escaping \n* - add an example on building SQL from Java \n* - rework the README.md, promote the Website \n* - add Spotless Formatter, using Google Java Style (with Tab&#x3D;4 Spaces) \n* style: Appease PMD/Codacy \n* doc: fix the issue template \n* - fix the issue template \n* - fix the -SNAPSHOT version number \n* Update issue templates \n* Update issue templates \n* feat: Support more Statement Separators \n* - &#x60;GO&#x60; \n* - Slash &#x60;/&#x60; \n* - Two empty lines \n* --------- \n* Co-authored-by: zaza &lt;tzarna@gmail.com&gt; \n\n[e71e5](https://github.com/JSQLParser/JSqlParser/commit/e71e57dfe4b377c) manticore-projects *2023-02-07 20:18:52*\n\n**Issue1673 case within brackets (#1675)**\n\n* fix: add missing public Getter \n* Add public Getter for &#x60;updateSets&#x60; \n* Fixes #1630 \n* fix: Case within brackets \n* fixes #1673 \n\n[2ced7](https://github.com/JSQLParser/JSqlParser/commit/2ced7ded930f8b0) manticore-projects *2023-01-31 20:56:01*\n\n**Added support for SHOW INDEX from table (#1704)**\n\n* Added support for SHOW INDEX from table \n* Added * import \n* fix for javadoc \n* added &lt;doclint&gt;none&lt;/doclint&gt; \n\n[a2618](https://github.com/JSQLParser/JSqlParser/commit/a2618321135d517) Jayant Kumar Yadav *2023-01-31 20:54:05*\n\n****\n\n\n[d33f6](https://github.com/JSQLParser/JSqlParser/commit/d33f6f5a658751d) Tobias Warneke *2023-01-22 15:43:07*\n\n**Sphinx Website (#1624)**\n\n* Enhanced Keywords \n* Add Keywords and document, which keywords are allowed for what purpose \n* Fix incorrect tests \n* Define Reserved Keywords explicitly \n* Derive All Keywords from Grammar directly \n* Generate production for Object Names (semi-) automatically \n* Add parametrized Keyword Tests \n* Fix test resources \n* Adjust Gradle to JUnit 5 \n* Parallel Test execution \n* Gradle Caching \n* Explicitly request for latest JavaCC 7.0.10 \n* Do not mark SpeedTest for concurrent execution \n* Remove unused imports \n* Adjust Gradle to JUnit 5 \n* Parallel Test execution \n* Gradle Caching \n* Explicitly request for latest JavaCC 7.0.10 \n* Do not mark SpeedTest for concurrent execution \n* Remove unused imports \n* Keyword test adopt JUnit5 \n* Update keywords \n* CheckStyle sanitation of method names \n* Merge Master \n* Add Jupiter Parameters dependency again \n* Automate the &#x60;updateKeywords&#x60; Step \n* Update PMD and rules \n* Rewrite test expected to fail \n* Appease Codacy \n* Remove broken rule warning about perfectly fine switch-case statements \n* Force Changes \n* Fix Merge Issues \n* Read Tokens directly from the Grammar File without invoking JTREE \n* - read Tokens per REGEX Matcher \n* - move Reserved Keywords from Grammar into ParserKeywordsUtils \n* - adjust the Tests \n* Appease PMD/Codacy \n* Extract the Keywords from the Grammar by using JTRee (instead of Regex) \n* Add some tests to ensure, that all Keywords or found \n* Appease Codacy/PMD \n* Separate UpdateKeywords Task again \n* Including it into compileJavacc won&#x27;t work since it depends on compiling the ParserKeywordUtils.java \n* Single file compilation did not work \n* Clean-up the imports \n* Add JavaCC dependency to Maven for building ParserKeywordsUtils \n* Add JavaCC dependency to Maven for building ParserKeywordsUtils \n* Merge Upstream \n* Merge Master \n* Fixes broken PR #1524 and Commit fb6e950ce0e62ebcd7a44ba9eea679da2b04b2ed \n* Add AST Visualization \n* Show the Statement&#x27;s Java Objects in a tree hierarchy \n* Sphinx Documentation \n* Update the MANTICORE Sphinx Theme, but ignore it in GIT \n* Add the content to the Sphinx sites \n* Add a Gradle function to derive Stable and Snapshot version from GIT Tags \n* Add a Gradle GIT change task \n* Add a Gradle sphinx task \n* Add a special Test case for illustrating the use of JSQLParser \n* test: Document an additional Special Oracle test success \n* doc: ignore the autogenerated changelog.rst in GIT \n* build: temporarily reduce the Code Coverage requirements \n* Temporarily reduce the Coverage checks regarding Minimum Coverage and Maximum Missed Lines in order to get the Keywords PR accepted. We should do a major Code cleanup afterwards. \n* build: Clean-up the Gradle Build \n* Prefix the Sphinx Prolog Variables with JSQLPARSER in order to allow for build the Main Website for various projects \n* Remove some redundant version requests for PMD, CheckStyle and friends \n* Remove JUnit-4 dependency and add HarmCrest \n* Complete the PUBLISHING task \n* doc: Explain the &#x60;&#x60;updateKeywords&#x60;&#x60; Gradle Task \n* build: Un-escape the Unicode on the changelog file \n* build: Un-escape the Unicode on the changelog file \n* doc: Cleanup \n* Unescape unicode characters from Git Changelog \n* Remove obsolete code from Sphinx&#x27; conf.py \n* doc: Properly un-escape the Git Commit message \n* doc: request for &#x60;Conventional Commit&#x60; messages \n* doc: correctly refer to &#x60;RelObjectNameWithoutValue()&#x60; \n* build: upload the built files via Excec/SFTP \n* doc: Add an example on Token White-listing \n* doc: write the correct Git Repository \n* doc: pronounce the OVERLAPS example more \n* feat: make important Classes Serializable \n* Implement Serializable for persisting via ObjectOutputStream \n* doc: Add the &quot;How to Use&quot; java code \n* chore: Make Serializable \n* fix: Non-serializable field in serializable class \n* build: various fixes to the Maven build file \n* add the Keywords Documentation file to the task \n* exclude the Sphinx files from the license header plugin \n* fix the JavaDoc plugin options \n* build: add the Keywords Documentation file to the task \n* doc: add a page about actually Reserved Keywords \n* build: avoid PMD/Codacy for Sphinx Documentation \n* update Changelog \n* build: Add Sphinx GitHub Action \n* Add a GitHub Action, which will \n* - Install Sphinx and Extensions \n* - Install Gradle Wrapper \n* - Run Gradle Wrapper Task &#x60;sphinx&#x60; \n* - Deploy the generated static HTML site to GH Pages \n* fix: fix a merge error, brackets \n* fix: remove JavaCC dependency \n* Parse Tokens via Regex \n* Move JavaCC Token Parser into the KeywordsTest \n* Make JavaCC a Test Dependency only \n* doc: Fix Maven Artifact Version \n* style: Avoid throwing raw exception types. \n* style: Avoid throwing raw exception types. \n* doc: Better integration of the RR diagrams \n* - apply neutral Sphinx theme \n* - insert the RR diagrams into the sphinx sources \n* - better documentation on Gradle dependencies \n* - link GitHub repository \n* build: gradle, execute all Checks after Test \n* Co-authored-by: Tobias &lt;t.warneke@gmx.net&gt; \n\n[be8e7](https://github.com/JSQLParser/JSqlParser/commit/be8e7a8a1d77184) manticore-projects *2023-01-20 21:45:35*\n\n**Assorted Fixes #5 (#1715)**\n\n* refactor: Merge REPLACE into UPSERT \n* fixes #1706 \n* feat: &#x60;DROP TEMPORARY TABLE ...&#x60; \n* fixes #1712 \n* build: PMD compliance \n* ci: Merge master \n* feat: Configurable backslash &#x60;\\&#x60; escaping \n* - Enables &#x60;\\&#x60; as escape character in String Literals (beside SQL:2016 compliant &#x60;&#x27;&#x60;) \n* - Default is OFF (since its not SQL:2016 compliant) \n* - Activate per Parser Feature \n* - Fixes #1638 \n* - Fixes #1209 \n* - Fixes #1173 \n* - Fixes #1172 \n* - Fixes #832 \n* - Fixes #827 \n* - Fixes #578 \n* BREAKING-CHANGE: Backslash Escaping needs to be activated explicitly or else Backslash won&#x27;t work as Escape Character. \n* style: Checkstyle \n* style: remove dead code \n* style: PMD compliance \n* style: Checkstyle, unused import \n* feat: allow &#x60;S_CHAR_LITERAL&#x60; to break lines \n* - fixes #875 \n\n[a00d7](https://github.com/JSQLParser/JSqlParser/commit/a00d77a100bfab7) manticore-projects *2023-01-20 21:32:20*\n\n**Support DROP MATERIALIZED VIEW statements (#1711)**\n\n\n[1af68](https://github.com/JSQLParser/JSqlParser/commit/1af682d436055ad) Tomasz Zarna *2023-01-12 21:37:42*\n\n**corrected readme**\n\n\n[4dfd2](https://github.com/JSQLParser/JSqlParser/commit/4dfd2e43fcdd3ab) Tobias Warneke *2023-01-04 21:07:17*\n\n**Update README.md**\n\n* lgtm removed \n\n[954b8](https://github.com/JSQLParser/JSqlParser/commit/954b8dd2e760a01) Tobias *2022-12-27 10:34:18*\n\n**Fix #1686: add support for creating views with \"IF NOT EXISTS\" clause (#1690)**\n\n\n[0f34f](https://github.com/JSQLParser/JSqlParser/commit/0f34f5bc647365d) Tomasz Zarna *2022-12-22 21:52:35*\n\n**Assorted Fixes #4 (#1676)**\n\n* support clickhouse global keyword in join \n* fix: add missing public Getter \n* Add public Getter for &#x60;updateSets&#x60; \n* Fixes #1630 \n* feat: Clickhouse GLOBAL JOIN \n* All credits to @julianzlzhang \n* fixes #1615 \n* fixes #1535 \n* feat: IF/ELSE statements supports Block \n* Make &#x60;If... Else...&#x60; statements work with Blocks \n* Make &#x60;Statement()&#x60; production work with &#x60;Block()&#x60; \n* Rewrite the &#x60;Block()&#x60; related Unit Tests \n* fixes #1682 \n* fix: Revert unintended changes to the Special Oracle Tests \n* fix: &#x60;SET&#x60; statement supports &#x60;UserVariable&#x60; \n* Make &#x60;SetStatement&#x60; parse Objects instead of Names only \n* Add Grammar to accept &#x60;UserVariable&#x60; (e.g. &quot;set @Flag &#x3D; 1&quot;) \n* Add Test Case for &#x60;UserVariable&#x60; \n* fixes #1682 \n* feat: Google Spanner Support \n* Replaces PR #1415, all credit goes to @s13o \n* Re-arranged some recently added Tokens in alphabetical order \n* Update Keywords \n* fix: fix JSonExpression, accept Expressions \n* Make JSonExpression accept Expressions \n* Add Testcase \n* Expose Idents() and Operators() \n* Fixes #1696 \n* test: add Test for Issue #1237 \n* Co-authored-by: Zhang Zhongliang &lt;zhangzhongliang@xiaomi.com&gt; \n\n[8d9db](https://github.com/JSQLParser/JSqlParser/commit/8d9db7052c3aeb5) manticore-projects *2022-12-22 21:17:55*\n\n**Fixed download war script in the renderRR task (#1659)**\n\n* Co-authored-by: Hai Chang &lt;haichang@microsoft.com&gt; \n\n[08a92](https://github.com/JSQLParser/JSqlParser/commit/08a92fcd7b4f7f2) haha1903 *2022-12-10 09:23:53*\n\n**Assorted fixes (#1666)**\n\n* fix: add missing public Getter \n* Add public Getter for &#x60;updateSets&#x60; \n* Fixes #1630 \n* feat: LISTAGG() with OVER() clause \n* fixes issue #1652 \n* fixes 3 more Special Oracle Tests \n* fix: White-list CURRENT_DATE and CURRENT_TIMESTAMP tokens \n* allows CURRENT_DATE(3) and CURRENT_TIMESTAMP(3) as regular functions \n* fixes #1507 \n* fixes #1607 \n* feat: Deparser for Expression Lists \n* Visit each Expression of a List instead ExpressionList.toString() \n* fixes #1608 \n* fix: Lookahead needed \n\n[bff26](https://github.com/JSQLParser/JSqlParser/commit/bff268a7c699947) manticore-projects *2022-11-20 10:06:01*\n\n**Fix parsing statements with multidimensional array PR2 (#1665)**\n\n* Fix parsing statements with multidimensional array \n* fix: Whitelist LOCKED keyword \n* Co-authored-by: Andrei Lisouski &lt;alisousk@akamai.com&gt; \n\n[e1865](https://github.com/JSQLParser/JSqlParser/commit/e186588f044753f) manticore-projects *2022-11-20 09:59:26*\n\n**removed disabled from Keyword tests and imports**\n\n\n[af6c2](https://github.com/JSQLParser/JSqlParser/commit/af6c2702c8a505c) Tobias Warneke *2022-11-02 23:02:38*\n\n**removed disabled from Keyword tests**\n\n\n[89a9a](https://github.com/JSQLParser/JSqlParser/commit/89a9a575fac1ba8) Tobias Warneke *2022-11-02 22:58:19*\n\n****\n\n\n[8a018](https://github.com/JSQLParser/JSqlParser/commit/8a0183311b01d2d) Tobias Warneke *2022-10-28 22:30:25*\n\n****\n\n\n[67de4](https://github.com/JSQLParser/JSqlParser/commit/67de469e585060f) Tobias Warneke *2022-10-25 23:26:28*\n\n**Enhanced Keywords (#1382)**\n\n* Enhanced Keywords \n* Add Keywords and document, which keywords are allowed for what purpose \n* Fix incorrect tests \n* Define Reserved Keywords explicitly \n* Derive All Keywords from Grammar directly \n* Generate production for Object Names (semi-) automatically \n* Add parametrized Keyword Tests \n* Fix test resources \n* Adjust Gradle to JUnit 5 \n* Parallel Test execution \n* Gradle Caching \n* Explicitly request for latest JavaCC 7.0.10 \n* Do not mark SpeedTest for concurrent execution \n* Remove unused imports \n* Adjust Gradle to JUnit 5 \n* Parallel Test execution \n* Gradle Caching \n* Explicitly request for latest JavaCC 7.0.10 \n* Do not mark SpeedTest for concurrent execution \n* Remove unused imports \n* Keyword test adopt JUnit5 \n* Update keywords \n* CheckStyle sanitation of method names \n* Merge Master \n* Add Jupiter Parameters dependency again \n* Automate the &#x60;updateKeywords&#x60; Step \n* Update PMD and rules \n* Rewrite test expected to fail \n* Appease Codacy \n* Remove broken rule warning about perfectly fine switch-case statements \n* Force Changes \n* Fix Merge Issues \n* Read Tokens directly from the Grammar File without invoking JTREE \n* - read Tokens per REGEX Matcher \n* - move Reserved Keywords from Grammar into ParserKeywordsUtils \n* - adjust the Tests \n* Appease PMD/Codacy \n* Extract the Keywords from the Grammar by using JTRee (instead of Regex) \n* Add some tests to ensure, that all Keywords or found \n* Appease Codacy/PMD \n* Separate UpdateKeywords Task again \n* Including it into compileJavacc won&#x27;t work since it depends on compiling the ParserKeywordUtils.java \n* Single file compilation did not work \n* Clean-up the imports \n* Add JavaCC dependency to Maven for building ParserKeywordsUtils \n* Add JavaCC dependency to Maven for building ParserKeywordsUtils \n* Merge Upstream \n* Merge Master \n* Fixes broken PR #1524 and Commit fb6e950ce0e62ebcd7a44ba9eea679da2b04b2ed \n* Add AST Visualization \n* Show the Statement&#x27;s Java Objects in a tree hierarchy \n* build: temporarily reduce the Code Coverage requirements \n* Temporarily reduce the Coverage checks regarding Minimum Coverage and Maximum Missed Lines in order to get the Keywords PR accepted. We should do a major Code cleanup afterwards. \n* build:  JSQLParser is a build  dependency \n* chore:  Update keywords \n* feat: add line count to output \n\n[4863e](https://github.com/JSQLParser/JSqlParser/commit/4863eb5a8e30a5d) manticore-projects *2022-10-25 23:15:32*\n\n**#1610 Support for SKIP LOCKED tokens on SELECT statements (#1649)**\n\n* Co-authored-by: Lucas Dillmann &lt;lucas.dillmann@totvs.com.br&gt; \n\n[e6d50](https://github.com/JSQLParser/JSqlParser/commit/e6d50f756e99846) Lucas Dillmann *2022-10-25 22:59:09*\n\n**Assorted fixes (#1646)**\n\n* fix: add missing public Getter \n* Add public Getter for &#x60;updateSets&#x60; \n* Fixes #1630 \n* fix: Assorted Fixes \n* SelectExpressionItem with Function and Complex Parameters \n* Tables with Oracle DB Links \n* Make Table Name Parts accessible \n* Fixes #1644 \n* Fixes #1643 \n* fix: Revert correct test case \n\n[15ff8](https://github.com/JSQLParser/JSqlParser/commit/15ff84348228278) manticore-projects *2022-10-16 20:15:36*\n\n**actualized multiple dependencies**\n\n\n[34502](https://github.com/JSQLParser/JSqlParser/commit/34502d0e66ad214) Tobias Warneke *2022-09-28 20:17:35*\n\n**Bump h2 from 1.4.200 to 2.1.210 (#1639)**\n\n* Bumps [h2](https://github.com/h2database/h2database) from 1.4.200 to 2.1.210. \n* - [Release notes](https://github.com/h2database/h2database/releases) \n* - [Commits](https://github.com/h2database/h2database/compare/version-1.4.200...version-2.1.210) \n* --- \n* updated-dependencies: \n* - dependency-name: com.h2database:h2 \n* dependency-type: direct:development \n* ... \n* Signed-off-by: dependabot[bot] &lt;support@github.com&gt; \n* Signed-off-by: dependabot[bot] &lt;support@github.com&gt; \n* Co-authored-by: dependabot[bot] &lt;49699333+dependabot[bot]@users.noreply.github.com&gt; \n\n[fc3c4](https://github.com/JSQLParser/JSqlParser/commit/fc3c4cfd6b1eda9) dependabot[bot] *2022-09-28 19:52:31*\n\n**Support BigQuery SAFE_CAST (#1622) (#1634)**\n\n* Co-authored-by: Zhang, Dequn &lt;deqzhang@paypal.com&gt; \n\n[d9985](https://github.com/JSQLParser/JSqlParser/commit/d9985ae4f559cda) dequn *2022-09-20 18:22:25*\n\n**Support timestamptz dateliteral (#1621)**\n\n* support timestamptz as datetime literal \n* rename test \n\n[81a64](https://github.com/JSQLParser/JSqlParser/commit/81a648eba8db92d) Todd Pollak *2022-08-31 20:31:44*\n\n**fixes #1617**\n\n\n[b0aae](https://github.com/JSQLParser/JSqlParser/commit/b0aae378864c6e1) Tobias Warneke *2022-08-31 20:22:25*\n\n**fixes #419**\n\n\n[427e9](https://github.com/JSQLParser/JSqlParser/commit/427e90f6b861e23) Tobias Warneke *2022-08-31 19:01:57*\n\n**Closes #1604, added simple OVERLAPS support (#1611)**\n\n\n[236a5](https://github.com/JSQLParser/JSqlParser/commit/236a50b800a4794) Rob Audenaerde *2022-08-16 08:21:03*\n\n**Fixes  PR #1524 support hive alter sql (#1609)**\n\n* Adjust Gradle to JUnit 5 \n* Parallel Test execution \n* Gradle Caching \n* Explicitly request for latest JavaCC 7.0.10 \n* Do not mark SpeedTest for concurrent execution \n* Remove unused imports \n* Adjust Gradle to JUnit 5 \n* Parallel Test execution \n* Gradle Caching \n* Explicitly request for latest JavaCC 7.0.10 \n* Do not mark SpeedTest for concurrent execution \n* Remove unused imports \n* Fixes broken PR #1524 and Commit fb6e950ce0e62ebcd7a44ba9eea679da2b04b2ed \n\n[2619c](https://github.com/JSQLParser/JSqlParser/commit/2619ce0a6fd8bd5) manticore-projects *2022-08-14 16:29:18*\n\n**#1524  support hive alter sql : ALTER TABLE name ADD COLUMNS (col_spec[, col_spec ...]) (#1605)**\n\n* Co-authored-by: zhum@aotain.com &lt;zm7705264&gt; \n\n[fb6e9](https://github.com/JSQLParser/JSqlParser/commit/fb6e950ce0e62eb) Zhumin-lv-wn *2022-08-03 20:56:44*\n\n**fixes #1581**\n\n\n[732e8](https://github.com/JSQLParser/JSqlParser/commit/732e840e99740ff) Tobias Warneke *2022-07-25 06:43:39*\n\n**Using own Feature - constant for \"delete with returning\" #1597 (#1598)**\n\n\n[d3218](https://github.com/JSQLParser/JSqlParser/commit/d3218483f7f33ec) gitmotte *2022-07-25 04:55:20*\n\n****\n\n\n[2f491](https://github.com/JSQLParser/JSqlParser/commit/2f4916d3e512e14) Tobias Warneke *2022-07-22 23:19:59*\n\n\n## jsqlparser-4.5 (2022-07-22)\n\n### Other changes\n\n**introduced changelog generator**\n\n\n[e0f0e](https://github.com/JSQLParser/JSqlParser/commit/e0f0eabdfd1e820) Tobias Warneke *2022-07-22 22:47:00*\n\n**fixes #1596**\n\n\n[60d64](https://github.com/JSQLParser/JSqlParser/commit/60d648397b01c2d) Tobias Warneke *2022-07-22 22:31:12*\n\n**integrated test for #1595**\n\n\n[b3927](https://github.com/JSQLParser/JSqlParser/commit/b392733f25468f1) Tobias Warneke *2022-07-19 22:04:18*\n\n****\n\n\n[09830](https://github.com/JSQLParser/JSqlParser/commit/09830c9fb999bc6) Tobias Warneke *2022-07-19 21:44:43*\n\n**reduced time to parse exception to minimize impact on building time**\n\n\n[191b9](https://github.com/JSQLParser/JSqlParser/commit/191b9fd2c796aa1) Tobias Warneke *2022-07-19 21:40:35*\n\n**add support for drop column if exists (#1594)**\n\n\n[fcfdf](https://github.com/JSQLParser/JSqlParser/commit/fcfdfb7458fd28f) rrrship *2022-07-19 21:38:40*\n\n**PostgreSQL INSERT ... ON CONFLICT Issue #1551 (#1552)**\n\n* Adjust Gradle to JUnit 5 \n* Parallel Test execution \n* Gradle Caching \n* Explicitly request for latest JavaCC 7.0.10 \n* Do not mark SpeedTest for concurrent execution \n* Remove unused imports \n* Adjust Gradle to JUnit 5 \n* Parallel Test execution \n* Gradle Caching \n* Explicitly request for latest JavaCC 7.0.10 \n* Do not mark SpeedTest for concurrent execution \n* Remove unused imports \n* Adjust Gradle to JUnit 5 \n* Parallel Test execution \n* Gradle Caching \n* Explicitly request for latest JavaCC 7.0.10 \n* Do not mark SpeedTest for concurrent execution \n* Remove unused imports \n* Adjust Gradle to JUnit 5 \n* Parallel Test execution \n* Gradle Caching \n* Explicitly request for latest JavaCC 7.0.10 \n* Do not mark SpeedTest for concurrent execution \n* Remove unused imports \n* Support Postgres INSERT ... ON CONFLICT \n* Fixes #1551 \n* Refactor UpdateSet.toString(), which is used by Insert and Update \n* Allow KEEP keyword \n* Enables special Oracle Test keywordasidentifier04.sql, now 191 tests succeed \n* Sanitize before push \n* Tweak Grammar in order to survive the Maven Build \n* Ammend the README \n* Move Plugin configuration files to the CONFIG folder (hoping, that Codacy will find it there) \n* Update PMD in the Maven configuration \n* Update PMD in the Maven and Gradle configuration \n* Appease Codacy \n* Co-authored-by: Tobias &lt;t.warneke@gmx.net&gt; \n\n[5ae09](https://github.com/JSQLParser/JSqlParser/commit/5ae09ad097c7294) manticore-projects *2022-07-19 21:18:02*\n\n**Configurable Parser Timeout via Feature (#1592)**\n\n* Configurable Parser Timeout via Feature \n* Fixes #1582 \n* Implement Parser Timeout Feature, e. g. &#x60;CCJSqlParserUtil.parse(sqlStr, parser -&gt; parser.withTimeOut(60000));&#x60; \n* Add a special test failing after a long time only, to test TimeOut vs. Parser Exception \n* Appease Codacy \n* Appease Codacy \n* Co-authored-by: Tobias &lt;t.warneke@gmx.net&gt; \n\n[74000](https://github.com/JSQLParser/JSqlParser/commit/74000130e850788) manticore-projects *2022-07-19 20:48:49*\n\n**fixes #1590**\n\n\n[cfba6](https://github.com/JSQLParser/JSqlParser/commit/cfba6e54df4ed58) Tobias Warneke *2022-07-19 20:26:19*\n\n**fixes #1590**\n\n\n[1abaf](https://github.com/JSQLParser/JSqlParser/commit/1abaf4cdbed1938) Tobias Warneke *2022-07-19 20:17:50*\n\n**extended support Postgres' `Extract( field FROM source)` where `field` is a String instead of a Keyword (#1591)**\n\n* Fixes #1582 \n* Amend the ExtractExpression \n* Add Test case for issue #1582 \n* Amend the README \n\n[2b3ce](https://github.com/JSQLParser/JSqlParser/commit/2b3ce25a23b264a) manticore-projects *2022-07-19 19:25:23*\n\n****\n\n\n[87a37](https://github.com/JSQLParser/JSqlParser/commit/87a37d73f29ff55) Tobias Warneke *2022-07-14 19:30:27*\n\n****\n\n\n[26545](https://github.com/JSQLParser/JSqlParser/commit/26545484caa9372) Tobias Warneke *2022-07-14 19:23:39*\n\n**Closes #1579. Added ANALYZE <table> support. (#1587)**\n\n\n[e5c8a](https://github.com/JSQLParser/JSqlParser/commit/e5c8a89ded6d5ca) Rob Audenaerde *2022-07-14 19:22:47*\n\n****\n\n\n[b4a5c](https://github.com/JSQLParser/JSqlParser/commit/b4a5ce1374ab4f1) Tobias Warneke *2022-07-14 19:01:29*\n\n****\n\n\n[b08f2](https://github.com/JSQLParser/JSqlParser/commit/b08f205ea573553) Tobias Warneke *2022-07-14 18:56:19*\n\n**Closes #1583:: Implement Postgresql optional TABLE in TRUNCATE (#1585)**\n\n* Closes #1583 \n* Closes #1583, removed unnecessary local variable. \n* Closes #1583, proper support for deparsing. \n\n[26248](https://github.com/JSQLParser/JSqlParser/commit/262482610b80d18) Rob Audenaerde *2022-07-14 18:55:44*\n\n****\n\n\n[6b242](https://github.com/JSQLParser/JSqlParser/commit/6b2422e9cca5d56) Tobias Warneke *2022-07-14 18:53:41*\n\n**Support table option character set and index options (#1586)**\n\n* Support table option character set and index options \n* Signed-off-by: luofei &lt;luoffei@outlook.com&gt; \n* move test \n* Signed-off-by: luofei &lt;luoffei@outlook.com&gt; \n\n[27cdf](https://github.com/JSQLParser/JSqlParser/commit/27cdfa9ca1237f6) luofei *2022-07-14 18:46:14*\n\n**corrected a last minute bug**\n\n\n[afbaf](https://github.com/JSQLParser/JSqlParser/commit/afbaf53f4d5e727) Tobias Warneke *2022-07-09 15:28:17*\n\n**corrected a last minute bug**\n\n\n[f3d2b](https://github.com/JSQLParser/JSqlParser/commit/f3d2b19dda25d09) Tobias Warneke *2022-07-09 15:25:36*\n\n**corrected a last minute bug**\n\n\n[8378e](https://github.com/JSQLParser/JSqlParser/commit/8378ea4343e1a97) Tobias Warneke *2022-07-09 15:23:50*\n\n**fixes #1576**\n\n\n[48ea0](https://github.com/JSQLParser/JSqlParser/commit/48ea0e2238e8186) Tobias Warneke *2022-07-09 14:26:07*\n\n**added simple test for #1580**\n\n\n[5fdab](https://github.com/JSQLParser/JSqlParser/commit/5fdabf13251b193) Tobias Warneke *2022-07-07 20:13:12*\n\n**disabled test for large cnf expansion and stack overflow problem**\n\n\n[d3000](https://github.com/JSQLParser/JSqlParser/commit/d30005b4486618b) Tobias Warneke *2022-07-07 19:30:37*\n\n**Add test for LikeExpression.setEscape and LikeExpression.getStringExpression (#1568)**\n\n* Add test for LikeExpression.setEscape and LikeExpression.getStringExpression \n* like + set escape test for $ as escape character \n\n[bcf6f](https://github.com/JSQLParser/JSqlParser/commit/bcf6ff4157277f9) Caro *2022-07-07 19:27:43*\n\n****\n\n\n[a8a05](https://github.com/JSQLParser/JSqlParser/commit/a8a05535ca6e7c9) Tobias Warneke *2022-07-06 20:22:51*\n\n**add support for postgres drop function statement (#1557)**\n\n\n[964fa](https://github.com/JSQLParser/JSqlParser/commit/964fa49ff25cd46) rrrship *2022-07-06 20:06:09*\n\n****\n\n\n[afbb5](https://github.com/JSQLParser/JSqlParser/commit/afbb595c749d2c2) Tobias Warneke *2022-07-06 19:53:35*\n\n**Add support for Hive dialect GROUPING SETS. (#1539)**\n\n* Add support for Hive GROUPING SETS dialect &#x60;GROUP BY a, b, c GROUPING SETS ((a, b), (a, c))&#x60; \n* Simplify HiveTest::testGroupByGroupingSets. \n\n[03c58](https://github.com/JSQLParser/JSqlParser/commit/03c58de9d341a13) chenwl *2022-07-06 19:40:41*\n\n**fixes #1566**\n\n\n[886f0](https://github.com/JSQLParser/JSqlParser/commit/886f06dac867b55) Tobias Warneke *2022-06-28 20:55:12*\n\n**Postgres NATURAL LEFT/RIGHT joins (#1560)**\n\n* Postgres NATURAL LEFT/RIGHT joins \n* Fixes #1559 \n* Make NATURAL an optional Join Keyword, which can be combined with LEFT, RIGHT, INNER \n* Add tests \n* Postgres NATURAL LEFT/RIGHT joins \n* Amend readme \n* Revert successful Oracle test \n\n[74a0f](https://github.com/JSQLParser/JSqlParser/commit/74a0f2fb22e24fe) manticore-projects *2022-06-28 20:15:34*\n\n**compound statement tests (#1545)**\n\n\n[c1c38](https://github.com/JSQLParser/JSqlParser/commit/c1c38fe26b1fe90) Matthew Rathbone *2022-06-08 19:11:08*\n\n**Allow isolation keywords as column name and aliases (#1534)**\n\n\n[fc5a9](https://github.com/JSQLParser/JSqlParser/commit/fc5a9a3dbb91e8e) Tomer Shay (Shimshi) *2022-05-19 21:01:44*\n\n**added github action badge**\n\n\n[e4ec0](https://github.com/JSQLParser/JSqlParser/commit/e4ec041bdcf5683) Tobias *2022-05-16 09:31:36*\n\n**Create maven.yml**\n\n* started maven build using github actions \n\n[b7e5c](https://github.com/JSQLParser/JSqlParser/commit/b7e5c151df37f5e) Tobias *2022-05-16 09:24:24*\n\n**introduced deparser and toString correction for insert output clause**\n\n\n[51105](https://github.com/JSQLParser/JSqlParser/commit/5110598f0a2a774) Tobias Warneke *2022-05-15 22:07:19*\n\n**revived compilable status after merge**\n\n\n[75489](https://github.com/JSQLParser/JSqlParser/commit/75489bfc3a0355c) Tobias Warneke *2022-05-15 21:29:21*\n\n**INSERT with SetOperations (#1531)**\n\n* INSERT with SetOperations \n* Simplify the INSERT production \n* Use SetOperations for Select and Values \n* Better Bracket handling for WITH ... SELECT ... \n* Fixes #1491 \n* INSERT with SetOperations \n* Appease Codazy/PMD \n* INSERT with SetOperations \n* Appease Codazy/PMD \n* Update Readme \n* List the changes \n* Minor rephrases \n* Correct the Maven Artifact Example \n* Fix the two test cases (missing white space) \n* Remove unused import \n\n[b5672](https://github.com/JSQLParser/JSqlParser/commit/b5672c54386cdf8) manticore-projects *2022-05-15 20:29:06*\n\n**#1516 rename without column keyword (#1533)**\n\n* Adjust Gradle to JUnit 5 \n* Parallel Test execution \n* Gradle Caching \n* Explicitly request for latest JavaCC 7.0.10 \n* Do not mark SpeedTest for concurrent execution \n* Remove unused imports \n* Adjust Gradle to JUnit 5 \n* Parallel Test execution \n* Gradle Caching \n* Explicitly request for latest JavaCC 7.0.10 \n* Do not mark SpeedTest for concurrent execution \n* Remove unused imports \n* &#x60;RENAME ... TO ...&#x60; without &#x60;COLUMN&#x60; keyword \n* Fixes #1516 \n\n[e8f07](https://github.com/JSQLParser/JSqlParser/commit/e8f0750d75e74c7) manticore-projects *2022-05-11 20:44:34*\n\n**Add support for `... ALTER COLUMN ... DROP DEFAULT` (#1532)**\n\n\n[de0e8](https://github.com/JSQLParser/JSqlParser/commit/de0e8715ad7cab5) manticore-projects *2022-05-11 20:37:08*\n\n****\n\n\n[81caf](https://github.com/JSQLParser/JSqlParser/commit/81caf3af5eb2762) Tobias Warneke *2022-05-11 20:15:28*\n\n**#1527 DELETE ... RETURNING ... (#1528)**\n\n* #1527 DELETE ... RETURNING ... \n* Fixes #1527 \n* Add DELETE... RETURNING ... expression \n* Simplify INSERT ... RETURNING ... expression \n* Simply UPDATE ... RETURNING ... expression \n* TSQL Output Clause \n* According to https://docs.microsoft.com/en-us/sql/t-sql/queries/output-clause-transact-sql?view&#x3D;sql-server-ver15 \n* Implement Output Clause for INSERT, UPDATE and DELETE \n* Add Tests according the Microsoft Documentation \n* Appease Codacy/PMD \n\n[4d815](https://github.com/JSQLParser/JSqlParser/commit/4d8152159454069) manticore-projects *2022-05-11 20:04:23*\n\n**fixs #1520 (#1521)**\n\n\n[f7f9d](https://github.com/JSQLParser/JSqlParser/commit/f7f9d270b13377d) chiangcho *2022-05-11 19:51:47*\n\n****\n\n\n[22fef](https://github.com/JSQLParser/JSqlParser/commit/22fef8c95eddbce) Tobias Warneke *2022-05-11 19:45:25*\n\n**Unsupported statement (#1519)**\n\n* Adjust Gradle to JUnit 5 \n* Parallel Test execution \n* Gradle Caching \n* Explicitly request for latest JavaCC 7.0.10 \n* Do not mark SpeedTest for concurrent execution \n* Remove unused imports \n* Adjust Gradle to JUnit 5 \n* Parallel Test execution \n* Gradle Caching \n* Explicitly request for latest JavaCC 7.0.10 \n* Do not mark SpeedTest for concurrent execution \n* Remove unused imports \n* Adjust Gradle to JUnit 5 \n* Parallel Test execution \n* Gradle Caching \n* Explicitly request for latest JavaCC 7.0.10 \n* Do not mark SpeedTest for concurrent execution \n* Remove unused imports \n* Adjust Gradle to JUnit 5 \n* Parallel Test execution \n* Gradle Caching \n* Explicitly request for latest JavaCC 7.0.10 \n* Do not mark SpeedTest for concurrent execution \n* Remove unused imports \n* Implement UnsupportedStatement \n* - Add Feature allowUnsupportedStatement, default&#x3D;false \n* - Fully implement UnsupportedStatement for the Statement() production \n* - Partially implement UnsupportedStatement for the Statements() production, works only when UnsupportedStatement comes first \n* Revert unintended changes of the test resources \n* Reformat BLOCK production \n* Disable STATEMENTS() test, which will never fail and add comments to this regard \n\n[59bb9](https://github.com/JSQLParser/JSqlParser/commit/59bb9a4e40753cf) manticore-projects *2022-05-11 19:23:35*\n\n**fixes #1518**\n\n\n[bc113](https://github.com/JSQLParser/JSqlParser/commit/bc11309777df6b4) Tobias Warneke *2022-04-26 21:06:44*\n\n**Update bug_report.md (#1512)**\n\n* Focus more on the particular SQL Statement and the JSQLParser Version. \n* Link to the Online Formatter for testing. \n\n[13441](https://github.com/JSQLParser/JSqlParser/commit/13441f47fbd8023) manticore-projects *2022-04-22 22:29:07*\n\n**changed to allow #1481**\n\n\n[0cc2a](https://github.com/JSQLParser/JSqlParser/commit/0cc2a29c4d7b3ad) Tobias Warneke *2022-04-22 21:56:27*\n\n**Performance Improvements (#1439)**\n\n* Adjust Gradle to JUnit 5 \n* Parallel Test execution \n* Gradle Caching \n* Explicitly request for latest JavaCC 7.0.10 \n* Do not mark SpeedTest for concurrent execution \n* Remove unused imports \n* Adjust Gradle to JUnit 5 \n* Parallel Test execution \n* Gradle Caching \n* Explicitly request for latest JavaCC 7.0.10 \n* Do not mark SpeedTest for concurrent execution \n* Remove unused imports \n* Performance Improvements \n* Simplify the Primary Expression Production \n* Try to simple parse without Complex Expressions first, before parsing complex and slow (if supported by max nesting depth) \n* Add Test cases for issues #1397 and #1438 \n* Update Libraries to its latest version \n* Remove JUnit 4 from Gradle \n* Appease PMD \n* Update Gradle Plugins to its latest versions \n* Let Parser timeout after 6 seconds and fail gently \n* Add a special test verifying the clean up after timeout \n* Revert unintended changes to the Test Resources \n* Appease PMD/Codacy \n* Correct the Gradle &quot;+&quot; dependencies \n* Bump version to 4.4.-SNAPSHOT \n* update build file \n* revert unwarranted changes in test files \n* strip the Exception Class Name from the Message \n* maxDepth &#x3D; 10 collides with the Parser Timeout &#x3D; 6 seconds \n* License Headers \n* Unused imports \n* Bump version to 4.5-SNAPSHOT \n* Reduce test loops to fit intothe timeout \n\n[181a2](https://github.com/JSQLParser/JSqlParser/commit/181a21ab90870e1) manticore-projects *2022-04-14 21:18:18*\n\n\n## jsqlparser-4.4 (2022-04-10)\n\n### Other changes\n\n****\n\n\n[00b24](https://github.com/JSQLParser/JSqlParser/commit/00b2440852b847a) Tobias Warneke *2022-04-09 22:43:11*\n\n**Json function Improvements (#1506)**\n\n* Adjust Gradle to JUnit 5 \n* Parallel Test execution \n* Gradle Caching \n* Explicitly request for latest JavaCC 7.0.10 \n* Do not mark SpeedTest for concurrent execution \n* Remove unused imports \n* Adjust Gradle to JUnit 5 \n* Parallel Test execution \n* Gradle Caching \n* Explicitly request for latest JavaCC 7.0.10 \n* Do not mark SpeedTest for concurrent execution \n* Remove unused imports \n* Improve JSON Functions \n* Space around the &#x60;:&#x60; delimiter of JSON Functions \n* Improve JSON Functions \n* Enforce &#x60;KEY&#x60; as &#x60;S_CHAR_LITERAL&#x60; \n* Allow &#x60;Column&#x60; as &#x60;VALUE&#x60; \n* Temporarily disable Postgres Syntax \n* Improve JSON Functions \n* Bring back Postgres Syntax \n* Enable MySQL Syntax JSON_OBJECT(key, value [, key, value, ...]) \n* Fix some more tests, where key was not a String \n* Appease Codacy \n* Let JSON_OBJECT accept Expressions as value \n* set Version &#x3D; 4.4-SNAPSHOT \n\n[e3f53](https://github.com/JSQLParser/JSqlParser/commit/e3f531caf7ad9ba) manticore-projects *2022-04-09 22:37:36*\n\n**fixes #1505**\n\n\n[41c77](https://github.com/JSQLParser/JSqlParser/commit/41c77ca5dd75ae1) Tobias Warneke *2022-04-09 21:16:45*\n\n****\n\n\n[f3fac](https://github.com/JSQLParser/JSqlParser/commit/f3facb762de3ef7) Tobias Warneke *2022-04-09 20:20:23*\n\n**fixes #1502**\n\n\n[fea85](https://github.com/JSQLParser/JSqlParser/commit/fea8575fbed4cbb) Tobias Warneke *2022-04-09 20:10:41*\n\n**Issue1500 - Circular References in `AllColumns` and `AllTableColumns` (#1501)**\n\n* Adjust Gradle to JUnit 5 \n* Parallel Test execution \n* Gradle Caching \n* Explicitly request for latest JavaCC 7.0.10 \n* Do not mark SpeedTest for concurrent execution \n* Remove unused imports \n* Adjust Gradle to JUnit 5 \n* Parallel Test execution \n* Gradle Caching \n* Explicitly request for latest JavaCC 7.0.10 \n* Do not mark SpeedTest for concurrent execution \n* Remove unused imports \n* Remove circular reference revealed by issue #1500 \n* Add test for Issue 1500 Circular reference for All Columns Expression \n* Fix Test case \n* Add Test for AllTableColumn due to similar circular reference \n* Remove similar circular reference from AllTableColumn \n* Update dependencies \n* Adjust Jacoco Missed Lines count \n\n[0949d](https://github.com/JSQLParser/JSqlParser/commit/0949df9d789123c) manticore-projects *2022-04-03 18:51:35*\n\n****\n\n\n[62677](https://github.com/JSQLParser/JSqlParser/commit/62677a68fcc5c34) Tobias Warneke *2022-04-02 23:59:19*\n\n**Optimize assertCanBeParsedAndDeparsed (#1389)**\n\n* Optimize assertCanBeParsedAndDeparsed \n* - Avoid redundant calls of buildSqlString() \n* - Replace String.replaceAll() with Matcher.replaceAll() based on precompiled Regex Patterns \n* Reset the testcase results \n\n[ea316](https://github.com/JSQLParser/JSqlParser/commit/ea3164a1e418f3b) manticore-projects *2022-04-02 22:40:09*\n\n**Add geometry distance operator (#1493)**\n\n* Add support for geometry distance operators in PostGIS. \n* Fix missing imports. \n* Co-authored-by: Thomas Powell &lt;tpowell@palantir.com&gt; \n\n[98c47](https://github.com/JSQLParser/JSqlParser/commit/98c476a6c9fa1a1) Thomas Powell *2022-04-02 22:31:08*\n\n**Support WITH TIES option in TOP #1435 (#1479)**\n\n* Support WITH TIES option in TOP \n* - Add the support of WITH TIES option in SELECT TOP statement. \n* add specific test \n\n[1756a](https://github.com/JSQLParser/JSqlParser/commit/1756adcade48fb4) Olivier Cavadenti *2022-04-02 21:26:54*\n\n**fixes #1482**\n\n\n[7ddb7](https://github.com/JSQLParser/JSqlParser/commit/7ddb7c8e056be6d) Tobias Warneke *2022-03-15 21:51:56*\n\n**fixes #1482**\n\n\n[251cc](https://github.com/JSQLParser/JSqlParser/commit/251cc3c09c477d1) Tobias Warneke *2022-03-15 21:48:13*\n\n**Extending CaseExpression, covering #1458 (#1459)**\n\n* Add unit tests for Case expressions. \n* More tests for CaseExpression. \n* Switch expression becomes an Expression instead of a Condition. \n* It allows complex expressions in the switch, similarly to what is allowed in when clauses. \n\n[4df13](https://github.com/JSQLParser/JSqlParser/commit/4df1391a28a7402) Mathieu Goeminne *2022-03-15 20:07:43*\n\n**fixes #1471**\n\n\n[3695e](https://github.com/JSQLParser/JSqlParser/commit/3695e0479448ab9) Tobias Warneke *2022-02-18 23:03:24*\n\n**fixes #1471**\n\n\n[e789c](https://github.com/JSQLParser/JSqlParser/commit/e789c9c7869dc27) Tobias Warneke *2022-02-18 22:32:04*\n\n**fixes #1470**\n\n\n[c7075](https://github.com/JSQLParser/JSqlParser/commit/c70758266b5af51) Tobias Warneke *2022-02-06 22:21:12*\n\n**Add support for IS DISTINCT FROM clause (#1457)**\n\n* Co-authored-by: Tomer Shay &lt;tomer@Tomers-MBP.lan&gt; \n\n[31ed3](https://github.com/JSQLParser/JSqlParser/commit/31ed383ff0f3903) Tomer Shay (Shimshi) *2022-01-18 07:01:14*\n\n**fix fetch present in the end of union query (#1456)**\n\n\n[6e632](https://github.com/JSQLParser/JSqlParser/commit/6e6321481a15965) chiangcho *2022-01-18 07:00:14*\n\n**added SQL_CACHE implementation and changed**\n\n\n[cf012](https://github.com/JSQLParser/JSqlParser/commit/cf0128ac884c2b8) Tobias Warneke *2022-01-09 12:16:39*\n\n**support for db2 with ru (#1446)**\n\n\n[3e976](https://github.com/JSQLParser/JSqlParser/commit/3e976528094e646) chiangcho *2021-12-20 22:50:56*\n\n****\n\n\n[13878](https://github.com/JSQLParser/JSqlParser/commit/1387891cc837f64) Tobias Warneke *2021-12-12 15:37:58*\n\n\n## jsqlparser-4.3 (2021-12-12)\n\n### Other changes\n\n**updated readme.md to show all changes for version 4.3**\n\n\n[f0396](https://github.com/JSQLParser/JSqlParser/commit/f039659d1fb5b35) Tobias Warneke *2021-12-12 15:20:32*\n\n**Adjust Gradle to JUnit 5 (#1428)**\n\n* Adjust Gradle to JUnit 5 \n* Parallel Test execution \n* Gradle Caching \n* Explicitly request for latest JavaCC 7.0.10 \n* Do not mark SpeedTest for concurrent execution \n* Remove unused imports \n\n[af7bc](https://github.com/JSQLParser/JSqlParser/commit/af7bc1cc06700c3) manticore-projects *2021-11-28 21:43:10*\n\n**corrected some maven plugin versions**\n\n\n[0acb2](https://github.com/JSQLParser/JSqlParser/commit/0acb28fe33bc7df) Tobias Warneke *2021-11-28 21:40:56*\n\n**fixes #1429**\n\n\n[bc891](https://github.com/JSQLParser/JSqlParser/commit/bc891e7dcf1d86d) Tobias Warneke *2021-11-23 06:29:25*\n\n**closes #1427**\n\n\n[46424](https://github.com/JSQLParser/JSqlParser/commit/46424d93784f205) Tobias Warneke *2021-11-21 19:42:11*\n\n**CreateTableTest**\n\n\n[50ef7](https://github.com/JSQLParser/JSqlParser/commit/50ef7edc3ed6bd6) Tobias Warneke *2021-11-21 12:21:21*\n\n**Support EMIT CHANGES for KSQL (#1426)**\n\n* - Add the EMIT CHANGES syntax used in KSQL. \n\n[f6c17](https://github.com/JSQLParser/JSqlParser/commit/f6c17412accdd18) Olivier Cavadenti *2021-11-21 12:20:56*\n\n**SelectTest.testMultiPartColumnNameWithDatabaseNameAndSchemaName**\n\n\n[d8735](https://github.com/JSQLParser/JSqlParser/commit/d873526fe9f9a38) Tobias Warneke *2021-11-21 12:17:29*\n\n**reformatted test source code**\n\n\n[fb455](https://github.com/JSQLParser/JSqlParser/commit/fb455a7efe1ed04) Tobias Warneke *2021-11-21 12:11:43*\n\n**organize imports**\n\n\n[31921](https://github.com/JSQLParser/JSqlParser/commit/31921285376bb41) Tobias Warneke *2021-11-21 12:09:26*\n\n**replaced all junit 3 and 4 with junit 5 stuff**\n\n\n[2c672](https://github.com/JSQLParser/JSqlParser/commit/2c6724769e76429) Tobias Warneke *2021-11-21 12:03:37*\n\n****\n\n\n[fce5b](https://github.com/JSQLParser/JSqlParser/commit/fce5b9953a5a9c1) Tobias Warneke *2021-11-20 00:08:05*\n\n**Support RESTART without value (#1425)**\n\n* Since Postgre 8.4, RESTART in ALTER SEQUENCE can be set without value. \n\n[98b66](https://github.com/JSQLParser/JSqlParser/commit/98b66be4b2919df) Olivier Cavadenti *2021-11-20 00:00:32*\n\n**Add support for oracle UnPivot when use multi columns at once. (#1419)**\n\n* Co-authored-by: LeiJun &lt;02280245@yto.net.cn&gt; \n\n[8e8bb](https://github.com/JSQLParser/JSqlParser/commit/8e8bb708636e6c6) LeiJun *2021-11-19 23:22:29*\n\n****\n\n\n[1fe92](https://github.com/JSQLParser/JSqlParser/commit/1fe92bc61914135) Tobias Warneke *2021-11-19 22:36:41*\n\n**Fix issue in parsing TRY_CAST() function (#1391)**\n\n* Fix issue in parsing TRY_CAST() function \n* Fix issue in parsing TRY_CAST() function \n* Add parser, deparser, validator and vistior implementation for try_cast function \n* Update toString() method of TryCastExpression class \n\n[bfcf0](https://github.com/JSQLParser/JSqlParser/commit/bfcf00f9dfcc0a3) Prashant Sutar *2021-11-19 22:24:49*\n\n**fixes #1414**\n\n\n[93b8c](https://github.com/JSQLParser/JSqlParser/commit/93b8c8b96d5558d) Tobias Warneke *2021-11-19 22:21:21*\n\n**Add support for expressions (such as columns) in AT TIME ZONE expressions (#1413)**\n\n* Co-authored-by: EverSQL &lt;tomer@eversql.com&gt; \n\n[ebe17](https://github.com/JSQLParser/JSqlParser/commit/ebe171b3b502089) Tomer Shay (Shimshi) *2021-11-19 22:04:40*\n\n**Add supported for quoted cast expressions for PostgreSQL (#1411)**\n\n* Co-authored-by: EverSQL &lt;tomer@eversql.com&gt; \n\n[dbbce](https://github.com/JSQLParser/JSqlParser/commit/dbbcebbf0490e1c) Tomer Shay (Shimshi) *2021-11-19 21:54:37*\n\n**added USE SCHEMA <schema> and CREATE OR REPLACE <table> support; things that are allowed in Snowflake SQL (#1409)**\n\n* Co-authored-by: Richard Kooijman &lt;richard.kooijman@inergy.nl&gt; \n\n[f35d2](https://github.com/JSQLParser/JSqlParser/commit/f35d24cfbb88342) Richard Kooijman *2021-11-19 21:40:45*\n\n**Issue #420 Like Expression with Escape Expression (#1406)**\n\n* Issue #420 Like Expression with Escape Expression \n* Fixes issue #420 \n* CheckStyle compliance \n\n[8eaa4](https://github.com/JSQLParser/JSqlParser/commit/8eaa4d2fc243f0a) manticore-projects *2021-11-19 21:38:54*\n\n**fixes #1405 and some junit.jupiter stuff**\n\n\n[9adab](https://github.com/JSQLParser/JSqlParser/commit/9adab8d059685ff) Tobias Warneke *2021-11-19 21:32:23*\n\n**#1401 add junit-jupiter-api (#1403)**\n\n\n[80ff5](https://github.com/JSQLParser/JSqlParser/commit/80ff50e0296c107) gitmotte *2021-11-19 21:10:18*\n\n**Support Postgres Dollar Quotes #1372 (#1395)**\n\n\n[0bd4c](https://github.com/JSQLParser/JSqlParser/commit/0bd4c198e483616) Olivier Cavadenti *2021-11-19 20:32:26*\n\n**Add Delete / Update modifiers for MySQL #1254 (#1396)**\n\n* Add Delete / Update modifiers for MySQL #1254 \n* fix codacy issues + pr return \n* simplify low_priority \n\n[7be5d](https://github.com/JSQLParser/JSqlParser/commit/7be5d8e65e23f6e) Olivier Cavadenti *2021-11-19 20:31:00*\n\n**Fixes #1381 (#1383)**\n\n* Allow Complex Expressions as SelectItem \n\n[cdf0f](https://github.com/JSQLParser/JSqlParser/commit/cdf0f095294b04a) manticore-projects *2021-11-19 20:27:44*\n\n**Allows CASE ... ELSE ComplexExpression (#1388)**\n\n* Fixes #1375 \n* Co-authored-by: Tobias &lt;t.warneke@gmx.net&gt; \n\n[60a7d](https://github.com/JSQLParser/JSqlParser/commit/60a7d103853cb5e) manticore-projects *2021-11-02 20:48:39*\n\n**IN() with complex expressions (#1384)**\n\n* IN() with Complex Expressions \n* Fixes #905 \n* Allow Complex Expressions and multiple SubSelects for the IN() Expression \n* Tune the Test Coverage \n* Remove unused import \n* Reset TEST status \n\n[c4232](https://github.com/JSQLParser/JSqlParser/commit/c42322440d5fb36) manticore-projects *2021-11-01 21:23:48*\n\n**Fixes #1385 and PR#1380 (#1386)**\n\n* Add another Alias() Keyword related LOOKAHEAD \n* Fix a Keyword Spelling Error in the Deparser \n* Remove UNPIVOT from the PARENTHESIS Deparser, as it was an ugly workaround made obsolete by PR #1380 \n\n[8c1eb](https://github.com/JSQLParser/JSqlParser/commit/8c1eba24be61cf0) manticore-projects *2021-10-22 20:19:15*\n\n**Fixes #1369 (#1370)**\n\n* Issue1369 \n* Add test \n\n[2335e](https://github.com/JSQLParser/JSqlParser/commit/2335ed136e92163) Ben Grabham *2021-10-20 21:44:06*\n\n**Fixes #1371 (#1377)**\n\n* Fixes #1371 \n* Postgres specific JSON_OBJECT syntax supporting: \n* SELECT json_object(&#x27;{a, 1, b, 2}&#x27;); \n* SELECT json_object(&#x27;{{a, 1}, {b, 2}}&#x27;); \n* SELECT json_object(&#x27;{a, b}&#x27;, &#x27;{1,2 }&#x27;); \n* Improve Test Coverage \n\n[cbffe](https://github.com/JSQLParser/JSqlParser/commit/cbffe6b58cd0074) manticore-projects *2021-10-20 21:13:54*\n\n**LIMIT OFFSET with Expressions (#1378)**\n\n* Fixes #933 \n\n[a52db](https://github.com/JSQLParser/JSqlParser/commit/a52db54ff61be34) manticore-projects *2021-10-20 21:05:27*\n\n**Oracle Multi Column Drop (#1379)**\n\n* Fixes #1363 \n\n[9ad18](https://github.com/JSQLParser/JSqlParser/commit/9ad18d29efb66a2) manticore-projects *2021-10-20 21:01:04*\n\n**Support alias for UnPivot statement (see discussion #1374) (#1380)**\n\n* - Changed JSqlParserCC.jjt file to add the alias to the UnPivot lexical entity. \n* - Added Alias to the UnPivot object. \n* - Improved SelectDeParser to correctly deparse SubSelect&#x27;s UnPivot component. \n\n[0c0c3](https://github.com/JSQLParser/JSqlParser/commit/0c0c32e9cda0f1a) fabriziodelfranco *2021-10-20 20:18:13*\n\n**Issue1352 (#1353)**\n\n* Fixes #1352 \n* Allow SYSTEM as table- or column- name \n* Fixes #1352 \n* Allow SYSTEM as tablename \n* Fixes #1352 \n* Allow SYSTEM as tablename and columnname \n* Fixes #1352 \n* Allow QUERY as tablename and columnname \n* Fixes #1352 \n* Allow FULLTEXT as tablename and columnname \n* Co-authored-by: Tobias &lt;t.warneke@gmx.net&gt; \n\n[a8afd](https://github.com/JSQLParser/JSqlParser/commit/a8afd9a4e6a8bc0) manticore-projects *2021-10-09 21:31:45*\n\n**Enhance ALTER TABLE ... DROP CONSTRAINTS ... (#1351)**\n\n* Enhance ALTER TABLE ... DROP CONSTRAINTS ... \n* Add support for DROP PRIMARY KEY, DROP UNIQUE(...) \n* Add support for DROP FOREIGN KEY(...) \n* Fixes #1342 \n* Remove one useless PMD rule \n* Add more tests \n* Adjust Test Coverage \n\n[388b7](https://github.com/JSQLParser/JSqlParser/commit/388b7c3afff4f50) manticore-projects *2021-10-08 23:02:46*\n\n**Function to use AllColumns or AllTableColumns Expression (#1350)**\n\n* Fix a trivial MERGE error from Commit 4797a8d676625fcc6cf8c9e3b403ca120b6a8141 \n* Function use AllColumns or AllTableColumns \n* Fixes #1346 \n* Remove one useless PMD rule \n\n[b0ada](https://github.com/JSQLParser/JSqlParser/commit/b0adaa8de1421ea) manticore-projects *2021-10-08 21:58:04*\n\n**Postgres compliant ALTER TABLE ... RENAME TO ... (#1334)**\n\n* Fix a trivial MERGE error from Commit 4797a8d676625fcc6cf8c9e3b403ca120b6a8141 \n* Fixes #1333 \n* Postgres compliant ALTER TABLE ... RENAME TO ... \n* Postgres compliant ALTER TABLE IF EXISTS ... RENAME TO ... \n* Postgres compliant ALTER TABLE IF EXISTS ... RENAME TO ... \n\n[f353e](https://github.com/JSQLParser/JSqlParser/commit/f353ec830deb719) manticore-projects *2021-09-18 11:35:17*\n\n**Postgres compliant ALTER TABLE ... RENAME TO ... (#1334)**\n\n* Fix a trivial MERGE error from Commit 4797a8d676625fcc6cf8c9e3b403ca120b6a8141 \n* Fixes #1333 \n* Postgres compliant ALTER TABLE ... RENAME TO ... \n* Postgres compliant ALTER TABLE IF EXISTS ... RENAME TO ... \n* Postgres compliant ALTER TABLE IF EXISTS ... RENAME TO ... \n\n[5e904](https://github.com/JSQLParser/JSqlParser/commit/5e9045f431d9cc4) manticore-projects *2021-09-18 11:34:50*\n\n**corrected readme to the new snapshot version**\n\n\n[b8867](https://github.com/JSQLParser/JSqlParser/commit/b8867d71c0f29d3) Tobias Warneke *2021-09-08 09:57:36*\n\n\n## jsqlparser-4.2 (2021-09-08)\n\n### Other changes\n\n**introducing test for issue #1328**\n\n\n[56a39](https://github.com/JSQLParser/JSqlParser/commit/56a39a4693a991f) Tobias Warneke *2021-09-07 09:57:20*\n\n**included some distinct check**\n\n\n[1264a](https://github.com/JSQLParser/JSqlParser/commit/1264a2033c0062a) Tobias Warneke *2021-09-07 09:49:48*\n\n**corrected a merge bug**\n\n\n[d53f8](https://github.com/JSQLParser/JSqlParser/commit/d53f8a7fb6b898c) Tobias Warneke *2021-09-07 09:28:35*\n\n**Prepare4.2 (#1329)**\n\n* Implement caching of the Gradle and Maven files \n* Provided by @YunLemon via PR #1307 \n* Fix CREATE TABLE AS SELECT ... UNION SELECT ... \n* Provided by @fanchuo via PR #1309 \n* Fix #1316 \n* Add more specific tests verifying the nature of the UpdateSets \n* Allow &quot;SELECT *&quot; (without FROM) to parse, its a valid SELECT statement \n* Add the enhancements since Release 4.1 \n* Adjust the Coverage \n* Improve Test Coverage \n* Revert the Special Oracle Tests (accidentally set to FAILURE) \n* Co-authored-by: Tobias &lt;t.warneke@gmx.net&gt; \n\n[4797a](https://github.com/JSQLParser/JSqlParser/commit/4797a8d676625fc) manticore-projects *2021-09-07 08:56:12*\n\n**CREATE TABLE AS (...) UNION (...) fails (#1309)**\n\n\n[a7b5c](https://github.com/JSQLParser/JSqlParser/commit/a7b5c2b078e3ebe) François Sécherre *2021-09-07 08:51:01*\n\n**Fixes #1325 (#1327)**\n\n* Removes redundant production Identifier() and uses RelObjectnameWithoutValue() instead for MS SQL Server Hints \n\n[cf0d7](https://github.com/JSQLParser/JSqlParser/commit/cf0d74f6572d6aa) manticore-projects *2021-09-06 12:09:01*\n\n**Implement Joins with multiple trailing ON Expressions (#1303)**\n\n* Implement Joins with multiple trailing ON Expressions \n* Fixes #1302 \n* Fixes SpecialOracleTest JOIN17, now 190/273 tests pass \n* Fixes #1229 \n* Merge MASTER \n* Refactor the appendTo() method in favour of the traditional toString() \n* Remove unused imports \n\n[d18c5](https://github.com/JSQLParser/JSqlParser/commit/d18c59bf845c57d) manticore-projects *2021-09-06 11:34:05*\n\n**Fix Gradle PMD and Checkstyle (#1318)**\n\n* Fixes #1306 \n* Nested Cases with Complex Expressions \n* Reduce coverage for Java 8 \n* GROUP BY with Complex Expressions \n* Fixes #1308 \n* Update Sets with Complex Expressions \n* Fixes #1316 \n* Update Sets with Complex Expressions \n* Fix existing tests \n* Add tests for the new functionality \n* Implement PMD/Codacy recommendations \n* Add Checkstyle Configuration to Gradle \n* Add Checkstyle Config files \n* Fix additional exceptions in Test Sources \n\n[2e876](https://github.com/JSQLParser/JSqlParser/commit/2e876130b46d087) manticore-projects *2021-09-01 22:01:40*\n\n****\n\n\n[3f2e7](https://github.com/JSQLParser/JSqlParser/commit/3f2e76cf07ba699) Tobias Warneke *2021-08-28 20:59:29*\n\n**Fixes #1306 (#1311)**\n\n* Fixes #1306 \n* Nested Cases with Complex Expressions \n* Reduce coverage for Java 8 \n* GROUP BY with Complex Expressions \n* Fixes #1308 \n\n[8f632](https://github.com/JSQLParser/JSqlParser/commit/8f632b92e511b28) manticore-projects *2021-08-28 20:28:55*\n\n**Update sets (#1317)**\n\n* Fixes #1306 \n* Nested Cases with Complex Expressions \n* Reduce coverage for Java 8 \n* GROUP BY with Complex Expressions \n* Fixes #1308 \n* Update Sets with Complex Expressions \n* Fixes #1316 \n* Update Sets with Complex Expressions \n* Fix existing tests \n* Add tests for the new functionality \n* Implement PMD/Codacy recommendations \n\n[21e5e](https://github.com/JSQLParser/JSqlParser/commit/21e5ebac02822e2) manticore-projects *2021-08-27 21:37:05*\n\n****\n\n\n[50313](https://github.com/JSQLParser/JSqlParser/commit/50313376d5e6554) Tobias Warneke *2021-08-25 21:12:12*\n\n**Special oracle tests (#1279)**\n\n* Allow keywords: LINK, GROUPING() \n* Deparse ParenthesisFromItem&#x27;s Pivot and UnPivot correctly \n* Write Test results to the SQL File \n* Reduce the noise during the test \n* Update/correct the list of expected passing files \n* Get the benchmark from the list of expected passing files \n* There are no Pivots or UnPivots yet, so we will return NULL. \n* Record the expected Test Results on each SQL Source \n* Fail the test when any expected success suddenly fails \n* Improve Test Coverage \n* Appease Codacy \n\n[346ee](https://github.com/JSQLParser/JSqlParser/commit/346eea5fbcf2461) manticore-projects *2021-08-09 21:55:00*\n\n**Implements Hierarchical CONNECT_BY_ROOT Operator (#1282)**\n\n* Implements Hierarchical CONNECT_BY_ROOT Operator \n* Fixes Issue #1269 \n* Resolves some Special Oracle Tests \n* Improve Test Coverage \n* Co-authored-by: Tobias &lt;t.warneke@gmx.net&gt; \n\n[b6014](https://github.com/JSQLParser/JSqlParser/commit/b60140740aab93e) manticore-projects *2021-08-09 21:53:08*\n\n**Implement Transact-SQL IF ELSE Statement Control Flows. (#1275)**\n\n* Implement Transact-SQL IF ELSE Statement Control Flows. \n* Fixes #1273 except for Blocks. \n* Improce Test Coverage \n* Adjust the required Test Coverage for JDK 8 \n\n[750c3](https://github.com/JSQLParser/JSqlParser/commit/750c30aafe83957) manticore-projects *2021-08-09 21:43:50*\n\n**Add some flexibility to the Alter Statement (#1293)**\n\n* in order to allow: \n* ALTER TABLE ... MOVE TABLESPACE ... \n* ALTER TABLE ... COMPRESS NOLOGGING \n* ALTER TABLE ... ROWFORMAT&#x3D;DYNAMIC \n* Fixes #1033 \n\n[a88e9](https://github.com/JSQLParser/JSqlParser/commit/a88e921970c57b8) manticore-projects *2021-08-02 20:51:19*\n\n**Implement Oracle's Alter System (#1288)**\n\n\n[4ac5a](https://github.com/JSQLParser/JSqlParser/commit/4ac5ab468b1dd1d) manticore-projects *2021-08-02 20:37:40*\n\n**Implement Oracle Named Function Parameters Func( param1 => arg1, ...) (#1283)**\n\n* Fixes #1270 \n\n[c8a5d](https://github.com/JSQLParser/JSqlParser/commit/c8a5d7c3dfc97f4) manticore-projects *2021-08-02 20:32:41*\n\n**Implement Gradle Buildsystem (#1271)**\n\n* Gradle build \n* implement SpotBugs, PMD and JaCoCo \n* implement RR diagrams \n* Move Special Oracle Test resources into the correct package \n* Implement a basic Gradle/Maven compatibility workaround for the Special Oracle Test \n* Fix the Gradle Wrapper and add the folder to git \n\n[6933d](https://github.com/JSQLParser/JSqlParser/commit/6933d86e0fa2d48) manticore-projects *2021-08-02 20:18:48*\n\n**fixes #1272**\n\n\n[48a11](https://github.com/JSQLParser/JSqlParser/commit/48a1133ced7dd19) Tobias Warneke *2021-07-26 21:14:20*\n\n**Allowes JdbcParameter or JdbcNamedParameter for MySQL FullTextSearch (#1278)**\n\n* Fixes issue #1223 \n\n[e6c91](https://github.com/JSQLParser/JSqlParser/commit/e6c91b6a813a1e0) manticore-projects *2021-07-26 21:06:38*\n\n**Fixes #1267 Cast into RowConstructor (#1274)**\n\n* Fixes #1267 Cast into RowConstructor \n* Improve Test Coverage \n* Improve Test Coverage \n* Improve Test Coverage \n* Co-authored-by: Tobias &lt;t.warneke@gmx.net&gt; \n\n[c89cf](https://github.com/JSQLParser/JSqlParser/commit/c89cf21641d672b) manticore-projects *2021-07-26 21:02:19*\n\n****\n\n\n[fecc9](https://github.com/JSQLParser/JSqlParser/commit/fecc95d0ee93100) Tobias Warneke *2021-07-26 20:47:58*\n\n**Separate MySQL Special String Functions accepting Named Argument Separation as this could collide with ComplexExpressionList when InExpression is involved (#1285)**\n\n* Fixes #1284 \n* Co-authored-by: Tobias &lt;t.warneke@gmx.net&gt; \n\n[c074a](https://github.com/JSQLParser/JSqlParser/commit/c074a21ad70dd0e) manticore-projects *2021-07-26 20:34:06*\n\n**Implements Oracle RENAME oldTable TO newTable Statement (#1286)**\n\n* Implements Oracle RENAME oldTable TO newTable Statement \n* Fixes #1253 \n* Implement MariaDB specific syntax \n* Remove redundant License Headers \n* Use LinkedHashMap to preserve the order of the Entries \n* Increase Test Coverage \n* Co-authored-by: Tobias &lt;t.warneke@gmx.net&gt; \n\n[f7f7b](https://github.com/JSQLParser/JSqlParser/commit/f7f7bcd65be8f4c) manticore-projects *2021-07-26 20:26:47*\n\n**Implement Oracle Purge Statement (#1287)**\n\n\n[f86bc](https://github.com/JSQLParser/JSqlParser/commit/f86bc2e432305fb) manticore-projects *2021-07-26 20:18:39*\n\n**included jacoco to allow code coverage for netbeans**\n\n\n[f85b4](https://github.com/JSQLParser/JSqlParser/commit/f85b4b630008d9e) Tobias Warneke *2021-07-18 21:15:14*\n\n**corrected a Lookahead problem**\n\n\n[db90e](https://github.com/JSQLParser/JSqlParser/commit/db90e74f1d5d6e8) Tobias Warneke *2021-07-16 21:31:17*\n\n**Json functions (#1263)**\n\n* Implement Json Aggregate Functions JSON_OBJECTAGG() and JSON_ARRAYAGG() \n* fix the returned type \n* Implement JSON_OBJECT and JSON_ARRAY \n* Solves #1260 and dbeaver/dbeaver/#13141 \n* Better workaround for NULL, NULL NULL ON NULL \n* Remove the workaround for NULL ON NULL (without expression) \n* Implement &quot;PMD.MissingBreakInSwitch&quot; in order to appease Codacy \n* Improve Test Coverage \n* Improve Test Coverage \n* KEYs can be SQL Value Expressions \n* Add another testcase \n\n[59bf0](https://github.com/JSQLParser/JSqlParser/commit/59bf07f5425ecb4) manticore-projects *2021-07-16 21:24:44*\n\n**fixes #1255**\n\n\n[2c732](https://github.com/JSQLParser/JSqlParser/commit/2c732ad9bfbe34e) Tobias Warneke *2021-07-16 21:12:45*\n\n**Active JJDoc and let it create the Grammar BNF documentation (#1256)**\n\n* Clean-up the Site generation \n\n[1ecff](https://github.com/JSQLParser/JSqlParser/commit/1ecffd2c1a6e8d8) manticore-projects *2021-07-16 20:38:05*\n\n**Bump commons-io from 2.6 to 2.7 (#1265)**\n\n* Bumps commons-io from 2.6 to 2.7. \n* --- \n* updated-dependencies: \n* - dependency-name: commons-io:commons-io \n* dependency-type: direct:development \n* ... \n* Signed-off-by: dependabot[bot] &lt;support@github.com&gt; \n* Co-authored-by: dependabot[bot] &lt;49699333+dependabot[bot]@users.noreply.github.com&gt; \n\n[09898](https://github.com/JSQLParser/JSqlParser/commit/09898107fe6d001) dependabot[bot] *2021-07-14 05:27:57*\n\n**Update README.md**\n\n\n[e6303](https://github.com/JSQLParser/JSqlParser/commit/e630354df1cd0f4) Tobias *2021-07-13 05:34:12*\n\n**Implement DB2 Special Register Date Time CURRENT DATE and CURRENT TIME (#1252)**\n\n* Implement DB2 Special Register Date Time CURRENT DATE and CURRENT TIME \n* Fixes issue #1249 \n* (Although there are more Special Registers which are not supported yet.) \n* Make the spaces mandatory \n* Add 2 more tests \n\n[05157](https://github.com/JSQLParser/JSqlParser/commit/05157a841897033) manticore-projects *2021-07-13 05:32:38*\n\n**Rename the PMD ruleset configuration file hoping for automatic synchronization with Codacy (#1251)**\n\n* Solves Issue #1220 \n\n[930b7](https://github.com/JSQLParser/JSqlParser/commit/930b7a561876b7e) manticore-projects *2021-07-13 05:28:43*\n\n**corrected .travis.yml**\n\n\n[11124](https://github.com/JSQLParser/JSqlParser/commit/111244ab565a160) Tobias Warneke *2021-07-05 20:57:22*\n\n**corrected .travis.yml**\n\n\n[5cf7e](https://github.com/JSQLParser/JSqlParser/commit/5cf7eeaa6f7074d) Tobias Warneke *2021-07-05 20:52:40*\n\n****\n\n\n[3e0e7](https://github.com/JSQLParser/JSqlParser/commit/3e0e7f38a11fe21) Tobias Warneke *2021-07-05 20:39:11*\n\n**Update README.md**\n\n\n[ec16d](https://github.com/JSQLParser/JSqlParser/commit/ec16d1f68c83063) Tobias *2021-07-05 20:27:41*\n\n**fixes #1250**\n\n\n[9e434](https://github.com/JSQLParser/JSqlParser/commit/9e4341a26be1f7f) Tobias Warneke *2021-07-01 12:24:36*\n\n****\n\n\n[05d68](https://github.com/JSQLParser/JSqlParser/commit/05d684416f338b6) Tobias Warneke *2021-06-30 22:12:00*\n\n\n## jsqlparser-4.1 (2021-06-30)\n\n### Other changes\n\n**fixes #1140**\n\n\n[1a917](https://github.com/JSQLParser/JSqlParser/commit/1a9173f7d65a026) Tobias Warneke *2021-06-30 21:50:28*\n\n**introduced #1248 halfway**\n\n\n[1deea](https://github.com/JSQLParser/JSqlParser/commit/1deeab8b349343f) Tobias Warneke *2021-06-30 21:15:56*\n\n**Savepoint rollback (#1236)**\n\n* Implement SAVEPOINT and ROLLBACK statements, fixes issue #1235 \n* Activate a test which is supported now. \n\n[2cae6](https://github.com/JSQLParser/JSqlParser/commit/2cae62dbf74a744) manticore-projects *2021-06-30 19:57:56*\n\n**Fixes Function Parameter List Brackets issue #1239 (#1240)**\n\n\n[750f3](https://github.com/JSQLParser/JSqlParser/commit/750f3d1e28fa0d9) manticore-projects *2021-06-30 19:45:32*\n\n****\n\n\n[0ba44](https://github.com/JSQLParser/JSqlParser/commit/0ba44c59fcea1cc) Tobias Warneke *2021-06-30 19:41:44*\n\n**corrected javadoc problem**\n\n\n[f7ea4](https://github.com/JSQLParser/JSqlParser/commit/f7ea4a5040ac7c7) Tobias Warneke *2021-06-27 00:20:35*\n\n**corrected some lookahead problem**\n\n\n[59c2a](https://github.com/JSQLParser/JSqlParser/commit/59c2a9432ee23d7) Tobias Warneke *2021-06-26 23:57:06*\n\n**RESET statement, SET PostgreSQL compatibility (#1104)**\n\n* Support \n* RESET statement  (https://www.postgresql.org/docs/current/sql-reset.html) \n* SET [LOCAL|SESSION]  (https://www.postgresql.org/docs/current/sql-set.html) \n* SET search_path&#x3D;my_schema, public ( https://www.postgresql.org/docs/current/sql-set.html \n* value New value of parameter. Values can be specified as string constants, identifiers, numbers, or comma-separated lists of these) \n* Update ResetStatementTest.java \n* remove Tim Zone token \n* Co-authored-by: Tobias &lt;t.warneke@gmx.net&gt; \n\n[13503](https://github.com/JSQLParser/JSqlParser/commit/13503edff30f06d) Роман Зотов *2021-06-26 22:44:33*\n\n**corrected some lookahead problem**\n\n\n[6711f](https://github.com/JSQLParser/JSqlParser/commit/6711f6043c168f7) Tobias Warneke *2021-06-26 22:42:24*\n\n**Implement Oracle Alter Session Statements (#1234)**\n\n* Implement Oracle Alter Session Statements according to https://docs.oracle.com/cd/B19306_01/server.102/b14200/statements_2012.htm \n* Implement PMD Rule &quot;SwitchStmtsShouldHaveDefault&quot; \n* Reorganize Test Case imports \n\n[3a46a](https://github.com/JSQLParser/JSqlParser/commit/3a46a29d6936611) manticore-projects *2021-06-26 22:38:19*\n\n**fixes #1230**\n\n\n[3082d](https://github.com/JSQLParser/JSqlParser/commit/3082de3a689c88e) Tobias Warneke *2021-06-26 22:31:43*\n\n**Support DELETE FROM T1 USING T2 WHERE ... (#1228)**\n\n* Co-authored-by: Francois Secherre &lt;secherre.nospam@gmail.com&gt; \n\n[96cd4](https://github.com/JSQLParser/JSqlParser/commit/96cd483ab85783d) francois-secherre *2021-06-16 05:27:14*\n\n**Row access support (#1181)**\n\n* Row acess support \n* Remove IN Left Expression List, replaced by RowConstructor Expression \n* Remove IN Left Expression List, replaced by RowConstructor Expression \n* Formatting \n\n[27e6a](https://github.com/JSQLParser/JSqlParser/commit/27e6a9f0e07320e) Роман Зотов *2021-06-16 05:15:47*\n\n**corrected lookahead problem of PR #1225**\n\n\n[aec76](https://github.com/JSQLParser/JSqlParser/commit/aec76eae23f1edd) Tobias Warneke *2021-06-14 05:27:40*\n\n**Delete queries without from, with a schema identifier fails (#1224)**\n\n* Delete queries without from, with a schema identifier fails \n* Better tests \n* Fix style issue \n* Deparse should match for DELETE WITHOUT FROM queries \n* Co-authored-by: François Sécherre &lt;francois.secherre@ouicar.fr&gt; \n\n[d70e1](https://github.com/JSQLParser/JSqlParser/commit/d70e151c0f22f22) François Sécherre *2021-06-14 05:15:15*\n\n**Create temporary table t(c1, c2) as select ... (#1225)**\n\n* Co-authored-by: Francois Secherre &lt;secherre.nospam@gmail.com&gt; \n\n[b62f1](https://github.com/JSQLParser/JSqlParser/commit/b62f19feb3b497c) francois-secherre *2021-06-14 05:13:13*\n\n**Nested with items (#1221)**\n\n* Nested WithItems, fixes issue #1186 \n* Remove redundant Test \n* Avoid altering the nb-configuration \n* Mention Nested WITH CTEs in the readme \n* Eliminate dead/unused MultiExpression Code \n\n[8eb3d](https://github.com/JSQLParser/JSqlParser/commit/8eb3d9a586a182e) manticore-projects *2021-06-10 05:50:08*\n\n**Implement GROUP BY () without columns (#1218)**\n\n* Implement GROUP BY () without columns \n* Migrate GroupByElement to ExpressionList \n* Also solves issue #1210 automatically \n* Solves issue #1168, add a test for it. \n\n[999db](https://github.com/JSQLParser/JSqlParser/commit/999db01658c30f9) manticore-projects *2021-06-03 05:55:35*\n\n**TSQL Compliant NEXT VALUE FOR sequence_id (but keeping the spurious NEXTVAL FOR expression) (#1216)**\n\n* Co-authored-by: Tobias &lt;t.warneke@gmx.net&gt; \n\n[7c212](https://github.com/JSQLParser/JSqlParser/commit/7c21242e893abcd) manticore-projects *2021-06-02 12:35:03*\n\n**Pmd clean up (#1215)**\n\n* Add PMD Annotations in order to avoid useless exceptions for the Deparsers \n* Add Eclipse Formatter configuration \n* Fix typo \n* Replace Comments on empty methods with Class wide PMD Annotation \n* Do not enforce checkstyle formatting \n\n[53764](https://github.com/JSQLParser/JSqlParser/commit/537649bf28f641b) manticore-projects *2021-06-02 12:19:32*\n\n**Add support for boolean 'XOR' operator (#1193)**\n\n* Add support for boolean &#x27;XOR&#x27; operator \n* XorExpression added to the ReflectionModelTest \n* XorExpression case added to the SelectTest \n* XorExpression cases added for Validation \n* Additional tests added for code coverage. \n* Code style fixed. \n* Separate test case for XOR added. \n* Imports explicitly added to avoid namespace pollution. \n* Additional tests cases for precedence and associativity. \n* Co-authored-by: Szabó Miklós &lt;miklos.szabo@arh.hu&gt; \n\n[c7832](https://github.com/JSQLParser/JSqlParser/commit/c7832402dded4c0) Adaptive Recognition *2021-06-02 12:10:56*\n\n**Update README.md**\n\n\n[1feea](https://github.com/JSQLParser/JSqlParser/commit/1feea013d865f58) Tobias *2021-05-31 08:46:48*\n\n**Implement WITH for DELETE, UPDATE and MERGE statements (#1217)**\n\n\n[63ed1](https://github.com/JSQLParser/JSqlParser/commit/63ed1a2f42d14e9) manticore-projects *2021-05-31 08:44:08*\n\n****\n\n\n[9184c](https://github.com/JSQLParser/JSqlParser/commit/9184cda558e60a5) Tobias Warneke *2021-05-26 23:12:05*\n\n****\n\n\n[f83ed](https://github.com/JSQLParser/JSqlParser/commit/f83ed0a3a30f6d4) Tobias Warneke *2021-05-26 23:09:08*\n\n****\n\n\n[76bff](https://github.com/JSQLParser/JSqlParser/commit/76bff01b6b4450f) Tobias Warneke *2021-05-26 23:04:41*\n\n**increases complex scanning range**\n\n\n[13b88](https://github.com/JSQLParser/JSqlParser/commit/13b88f7f511107e) Tobias Warneke *2021-05-26 21:38:44*\n\n**Allow Complex Parsing of Functions (#1200)**\n\n* Allow Complex Parsing of Functions \n* Fixes issues #1190 #1103 \n* Apply Complex Parsing to PrimaryExpression() \n* Fixes issue #1194 \n* Increase Test Timeout to 2 seconds for slow CI Servers. \n* Appease Codazy \n\n[3a5da](https://github.com/JSQLParser/JSqlParser/commit/3a5da445ea9cb85) manticore-projects *2021-05-26 20:35:10*\n\n**Add support for AT TIME ZONE expressions (#1196)**\n\n* Add support for AT TIME ZONE expressions \n* adding tests \n* Fixing imports \n\n[a5204](https://github.com/JSQLParser/JSqlParser/commit/a5204f63ccb1ea8) Tomer Shay (Shimshi) *2021-05-25 23:03:31*\n\n**fixes #1211**\n\n\n[ed089](https://github.com/JSQLParser/JSqlParser/commit/ed089f1f800ece1) Tobias Warneke *2021-05-25 21:52:01*\n\n**fixes #1212**\n\n\n[b8ee7](https://github.com/JSQLParser/JSqlParser/commit/b8ee7526375c9d9) Tobias Warneke *2021-05-25 21:45:01*\n\n****\n\n\n[1c2ac](https://github.com/JSQLParser/JSqlParser/commit/1c2ac7a4e998e76) Tobias Warneke *2021-05-25 21:32:45*\n\n****\n\n\n[68695](https://github.com/JSQLParser/JSqlParser/commit/686958cf0bd758b) Tobias Warneke *2021-05-25 19:42:23*\n\n**Fix Nested CASE WHEN performance, fixes issue #1162 (#1208)**\n\n* Fix Nested CASE WHEN performance, fixes issue #1162 \n* Apease Codazy \n* Apease Codazy \n\n[42610](https://github.com/JSQLParser/JSqlParser/commit/426102e4cf272ca) manticore-projects *2021-05-25 19:26:30*\n\n**Add support for casts in json expressions (#1189)**\n\n\n[86b61](https://github.com/JSQLParser/JSqlParser/commit/86b613c72428e0c) Tomer Shay (Shimshi) *2021-05-10 20:00:59*\n\n**fixes #1185**\n\n\n[2320b](https://github.com/JSQLParser/JSqlParser/commit/2320b1baa6e1dea) Tobias Warneke *2021-05-04 21:11:12*\n\n****\n\n\n[53745](https://github.com/JSQLParser/JSqlParser/commit/537452dda91bcc3) Tobias Warneke *2021-05-01 20:57:01*\n\n****\n\n\n[002f5](https://github.com/JSQLParser/JSqlParser/commit/002f5966c577366) Tobias Warneke *2021-05-01 19:57:10*\n\n**supporting/fixing unique inside sql function such as count eg - SELECT count(UNIQUE col2) FROM mytable (#1184)**\n\n* Co-authored-by: Adhikesavan &lt;radhikesavan@paypal.com&gt; \n\n[f18e9](https://github.com/JSQLParser/JSqlParser/commit/f18e92eaf4b3bc6) RajaSudharsan Adhikesavan *2021-05-01 19:28:05*\n\n**Oracle compliant ALTER TABLE ADD/MODIFY deparser (#1163)**\n\n* javadoc-fixes \n* fix check-style error : assignment to parameter not allowed \n* import for javadoc reference \n* javadoc - add description to parameter &quot;fqn&quot; (fix warning) \n* remove doclint&#x3D;none, but exclude package with exclude package with \n* generated sources (javacc/jjtree) from javadoc \n* Implement Oracle Hints for INSERT, UPDATE, MERGE, DELETE \n* Correct CreateIndex TailOptions \n* Add a Test Case for CreateIndex TailOptions \n* Add WHERE expression to MergeInsert \n* Add test case for MergeInsert WHERE expression \n* Fix Issue #1156: ALTER TABLE ADD FOREIGN KEY with schema reference \n* Add a specific test case \n* Fix Issue #1157: Oracle does not accept COLUMN keyword in ALTER TABLE ADD/MODIFY \n* Correct the test cases accepting a non existing COLUMN keyword \n* Add a specific test cases \n* Fix Issue #1164 UNIQUE after PRIMARY KEY \n* Add test case for UNIQUE after PRIMARY KEY \n* Switch of warnings for un-fixble method namings \n* Switch of warnings for un-fixble method namings \n* Activate PMD and define our own ruleset \n* Execute PMD before building/testing in order to fail early \n* Fix 63 PMD warnings \n* Activate rule &quot;PMD.CyclomaticComplexity&quot; in order to simulate the Codazy checks \n* Apply @SuppressWarnings({&quot;PMD.CyclomaticComplexity&quot;}) where this rule throws an unavoidable warning (especially for toString() and deparse()) \n* Activate rule , &quot;PMD.ExcessiveMethodLength&quot; in order to simulate the Codazy checks \n* Apply @SuppressWarnings({&quot;PMD.ExcessiveMethodLength&quot;}) where this rule throws an unavoidable warning (especially for toString() and deparse()) \n* Refactor an ENUM name \n* Refactor an ENUM name and reflect this also in the JavaCC Parser definition file \n* Co-authored-by: gitmotte &lt;www@synbee.at&gt; \n\n[83837](https://github.com/JSQLParser/JSqlParser/commit/838379f21be0d32) manticore-projects *2021-04-21 07:55:17*\n\n**Pmd (#1165)**\n\n* Implement Oracle Hints for INSERT, UPDATE, MERGE, DELETE \n* Correct CreateIndex TailOptions \n* Add a Test Case for CreateIndex TailOptions \n* Add WHERE expression to MergeInsert \n* Add test case for MergeInsert WHERE expression \n* Fix Issue #1156: ALTER TABLE ADD FOREIGN KEY with schema reference \n* Add a specific test case \n* Fix Issue #1157: Oracle does not accept COLUMN keyword in ALTER TABLE ADD/MODIFY \n* Correct the test cases accepting a non existing COLUMN keyword \n* Add a specific test cases \n* Fix Issue #1164 UNIQUE after PRIMARY KEY \n* Add test case for UNIQUE after PRIMARY KEY \n* Switch of warnings for un-fixble method namings \n* Switch of warnings for un-fixble method namings \n* Activate PMD and define our own ruleset \n* Execute PMD before building/testing in order to fail early \n* Fix 63 PMD warnings \n* Activate rule &quot;PMD.CyclomaticComplexity&quot; in order to simulate the Codazy checks \n* Apply @SuppressWarnings({&quot;PMD.CyclomaticComplexity&quot;}) where this rule throws an unavoidable warning (especially for toString() and deparse()) \n* Activate rule , &quot;PMD.ExcessiveMethodLength&quot; in order to simulate the Codazy checks \n* Apply @SuppressWarnings({&quot;PMD.ExcessiveMethodLength&quot;}) where this rule throws an unavoidable warning (especially for toString() and deparse()) \n* Refactor an ENUM name \n* Refactor an ENUM name and reflect this also in the JavaCC Parser definition file \n\n[08cfd](https://github.com/JSQLParser/JSqlParser/commit/08cfd29459044c6) manticore-projects *2021-04-20 08:01:48*\n\n**function order by support (#1108)**\n\n\n[d6ef7](https://github.com/JSQLParser/JSqlParser/commit/d6ef7b995134594) Роман Зотов *2021-04-20 04:16:03*\n\n**fixes #1159**\n\n\n[79e2f](https://github.com/JSQLParser/JSqlParser/commit/79e2f587ee11297) Tobias Warneke *2021-04-16 23:51:24*\n\n**added improvements of pr to readme**\n\n\n[0ef4a](https://github.com/JSQLParser/JSqlParser/commit/0ef4a5c8a105a44) Tobias Warneke *2021-04-16 23:02:51*\n\n**Assorted fixes to the Java CC Parser definition (#1153)**\n\n* Implement Oracle Hints for INSERT, UPDATE, MERGE, DELETE \n* Correct CreateIndex TailOptions \n* Add a Test Case for CreateIndex TailOptions \n* Add WHERE expression to MergeInsert \n* Add test case for MergeInsert WHERE expression \n* Fix Issue #1156: ALTER TABLE ADD FOREIGN KEY with schema reference \n* Add a specific test case \n\n[5ee6e](https://github.com/JSQLParser/JSqlParser/commit/5ee6ec9dd7a66bf) manticore-projects *2021-04-16 22:51:27*\n\n****\n\n\n[b880e](https://github.com/JSQLParser/JSqlParser/commit/b880e1663ca607f) Tobias Warneke *2021-04-16 22:49:29*\n\n**fixes #1138**\n\n\n[e95f6](https://github.com/JSQLParser/JSqlParser/commit/e95f6ce1c5ecca8) Tobias Warneke *2021-04-10 21:36:07*\n\n**fixes #1138**\n\n\n[cb7a0](https://github.com/JSQLParser/JSqlParser/commit/cb7a018a8c0cd9e) Tobias Warneke *2021-04-10 21:35:53*\n\n**fixes #1137**\n\n\n[9d676](https://github.com/JSQLParser/JSqlParser/commit/9d676b90c6c1e30) Tobias Warneke *2021-04-10 21:23:00*\n\n**fixes #1136**\n\n\n[ba9b8](https://github.com/JSQLParser/JSqlParser/commit/ba9b8d7a6f24274) Tobias Warneke *2021-04-10 21:09:19*\n\n****\n\n\n[f0bec](https://github.com/JSQLParser/JSqlParser/commit/f0bec22644f99e7) Tobias Warneke *2021-03-22 21:21:13*\n\n**issue #1134 adressed**\n\n\n[5d9f4](https://github.com/JSQLParser/JSqlParser/commit/5d9f4fdff2e6ce6) Tobias Warneke *2021-03-20 21:35:05*\n\n**Add support for union_with_brackets_and_orderby (#1131)**\n\n\n[c3a1a](https://github.com/JSQLParser/JSqlParser/commit/c3a1aa688442c1d) Tomer Shay (Shimshi) *2021-03-14 20:10:33*\n\n**Add support for union without brackets and with limit (#1132)**\n\n* add support for union without brackets and with limit \n* Fixing the last commit. \n\n[56c2d](https://github.com/JSQLParser/JSqlParser/commit/56c2dfe332b5ee8) Tomer Shay (Shimshi) *2021-03-14 20:09:12*\n\n****\n\n\n[d2f61](https://github.com/JSQLParser/JSqlParser/commit/d2f61d138c2c0e3) Tobias Warneke *2021-03-14 20:04:28*\n\n**Add support for functions in an interval expression (#1099)**\n\n\n[7f8b5](https://github.com/JSQLParser/JSqlParser/commit/7f8b58c1e32a919) Tomer Shay (Shimshi) *2021-03-14 19:55:40*\n\n****\n\n\n[bcc68](https://github.com/JSQLParser/JSqlParser/commit/bcc683ab8791b71) Tobias Warneke *2021-02-06 20:37:50*\n\n****\n\n\n[7deb6](https://github.com/JSQLParser/JSqlParser/commit/7deb6d9bde678d6) Tobias Warneke *2021-02-05 21:59:11*\n\n**subArray support arr[1:3] (#1109)**\n\n\n[cde50](https://github.com/JSQLParser/JSqlParser/commit/cde50692c131fff) Роман Зотов *2021-02-05 21:55:29*\n\n**bug fix (#769)**\n\n* Co-authored-by: Kunal Jha &lt;kjha@zalando-11116.corp.ad.zalando.net&gt; \n\n[7234d](https://github.com/JSQLParser/JSqlParser/commit/7234de1d65ccf1b) Kunal jha *2021-02-05 17:46:15*\n\n****\n\n\n[089fc](https://github.com/JSQLParser/JSqlParser/commit/089fc44eba26cb1) Tobias Warneke *2021-02-04 19:47:39*\n\n**Array contructor support (#1105)**\n\n* Array contructor support array[[1, 2], [id1, id2]] \n* ARRAYLITERAL-&gt;ARRAY_LITERAL \n* Fix empty array \n* Support ARRAY as DEFAULT value in CREATE TABLE \n* https://github.com/JSQLParser/JSqlParser/issues/970#issue-594819872 \n* fix empty Array \n\n[43c28](https://github.com/JSQLParser/JSqlParser/commit/43c282deaa05555) Роман Зотов *2021-02-04 19:28:49*\n\n****\n\n\n[85193](https://github.com/JSQLParser/JSqlParser/commit/8519356a4939816) Tobias Warneke *2021-01-31 22:59:20*\n\n**Partial support construct tuple as simple expression (#1107)**\n\n* SELECT (1,2) \n\n[2065f](https://github.com/JSQLParser/JSqlParser/commit/2065fedb5b4c318) Роман Зотов *2021-01-31 22:58:08*\n\n**support create table parameters without columns, parameter values any names (#1106)**\n\n* CREATE TEMPORARY TABLE t1 WITH (APPENDONLY&#x3D;true,ORIENTATION&#x3D;column,COMPRESSTYPE&#x3D;zlib,OIDS&#x3D;FALSE) ON COMMIT DROP AS SELECT column FROM t2 \n\n[f2e74](https://github.com/JSQLParser/JSqlParser/commit/f2e74f15cd63d87) Роман Зотов *2021-01-31 22:53:09*\n\n**fixes #995**\n\n\n[d7b46](https://github.com/JSQLParser/JSqlParser/commit/d7b468a651ab966) Tobias Warneke *2021-01-13 19:21:40*\n\n**fixes #1100**\n\n\n[ea31a](https://github.com/JSQLParser/JSqlParser/commit/ea31a0480cea00e) Tobias Warneke *2021-01-13 18:58:16*\n\n**next correction of parenthesis around unions**\n\n\n[5706f](https://github.com/JSQLParser/JSqlParser/commit/5706fb4e1133884) Tobias Warneke *2021-01-11 23:15:21*\n\n****\n\n\n[e2ff2](https://github.com/JSQLParser/JSqlParser/commit/e2ff225132bfedd) Tobias Warneke *2021-01-10 00:13:16*\n\n**fixes #992**\n\n\n[9fd11](https://github.com/JSQLParser/JSqlParser/commit/9fd11563fc86281) Tobias Warneke *2021-01-07 22:34:40*\n\n**corrected patch for case as table name**\n\n\n[f2638](https://github.com/JSQLParser/JSqlParser/commit/f2638ead2f189c2) Tobias Warneke *2021-01-07 21:57:52*\n\n**Added support for the Case keyword in table names (#1093)**\n\n\n[b85a2](https://github.com/JSQLParser/JSqlParser/commit/b85a2003bbd9a1a) Tomer Shay (Shimshi) *2021-01-07 21:43:11*\n\n****\n\n\n[9785b](https://github.com/JSQLParser/JSqlParser/commit/9785b09cd774e14) Tobias Warneke *2021-01-04 06:45:18*\n\n**corrected some javadoc parameter**\n\n\n[449b7](https://github.com/JSQLParser/JSqlParser/commit/449b74a67c50700) Tobias Warneke *2021-01-03 22:16:44*\n\n**added missing pivot test files**\n\n\n[e599b](https://github.com/JSQLParser/JSqlParser/commit/e599bd957b2a70f) Tobias Warneke *2021-01-03 21:07:06*\n\n**fixes #282 - first refactoring to allow with clause as a start in insert and update**\n\n\n[d4402](https://github.com/JSQLParser/JSqlParser/commit/d4402df3ef4978d) Tobias Warneke *2021-01-02 23:57:26*\n\n**fixes #282 - first refactoring to allow with clause as a start in insert and update**\n\n\n[e6d65](https://github.com/JSQLParser/JSqlParser/commit/e6d65ab3808b9cc) Tobias Warneke *2021-01-02 23:56:12*\n\n**Update README.md**\n\n\n[54708](https://github.com/JSQLParser/JSqlParser/commit/5470880139cdc94) Tobias *2021-01-02 08:58:01*\n\n**fixes #887**\n\n\n[74aab](https://github.com/JSQLParser/JSqlParser/commit/74aab7cc81f5665) Tobias Warneke *2021-01-02 00:04:43*\n\n**fixes #1091 - added H2 casewhen function with conditional parameters**\n\n\n[085e1](https://github.com/JSQLParser/JSqlParser/commit/085e120d4221f1a) Tobias Warneke *2021-01-01 23:49:30*\n\n**fixes #1091 - added H2 casewhen function with conditional parameters**\n\n\n[e5e7d](https://github.com/JSQLParser/JSqlParser/commit/e5e7d376fc641a9) Tobias Warneke *2021-01-01 23:46:03*\n\n****\n\n\n[1eaa1](https://github.com/JSQLParser/JSqlParser/commit/1eaa1ba88028f79) Tobias Warneke *2021-01-01 23:18:55*\n\n\n## jsqlparser-4.0 (2021-01-01)\n\n### Other changes\n\n**fixes #961 - allow unsigned as type**\n\n\n[7783e](https://github.com/JSQLParser/JSqlParser/commit/7783e05d024b006) Tobias Warneke *2020-12-31 01:49:42*\n\n**fixes #961 - allow unsigned as type**\n\n\n[67a33](https://github.com/JSQLParser/JSqlParser/commit/67a331e0052527a) Tobias Warneke *2020-12-31 01:46:19*\n\n**fixes #1006 - included limit / offset test**\n\n\n[b5514](https://github.com/JSQLParser/JSqlParser/commit/b55141b0bdb975d) Tobias Warneke *2020-12-31 00:59:36*\n\n**fixes #1013 - refactored fromitem grammar to drastically improve performance**\n\n\n[36d0b](https://github.com/JSQLParser/JSqlParser/commit/36d0b7420fe9225) Tobias Warneke *2020-12-31 00:47:09*\n\n****\n\n\n[05a6f](https://github.com/JSQLParser/JSqlParser/commit/05a6f4b3cb719e6) Tobias Warneke *2020-12-30 23:12:55*\n\n****\n\n\n[b2c60](https://github.com/JSQLParser/JSqlParser/commit/b2c6097ab0a713e) Tobias Warneke *2020-12-30 22:50:48*\n\n**fixes #1088 - allowed CURRENT as jdbc named parameter name**\n\n\n[4f925](https://github.com/JSQLParser/JSqlParser/commit/4f925c54cd89e12) Tobias Warneke *2020-12-30 22:12:28*\n\n**fixes #1089 - just included test case**\n\n\n[4183a](https://github.com/JSQLParser/JSqlParser/commit/4183ae0a55a9455) Tobias Warneke *2020-12-30 21:45:32*\n\n****\n\n\n[f484d](https://github.com/JSQLParser/JSqlParser/commit/f484de7c4813cf9) Tobias Warneke *2020-12-18 22:15:09*\n\n****\n\n\n[10a69](https://github.com/JSQLParser/JSqlParser/commit/10a69a2dd873053) Tobias Warneke *2020-12-18 22:13:16*\n\n**fixes #1080**\n\n\n[d9282](https://github.com/JSQLParser/JSqlParser/commit/d928268fb61c088) Tobias Warneke *2020-12-17 20:17:14*\n\n**Update README.md**\n\n\n[624f2](https://github.com/JSQLParser/JSqlParser/commit/624f247eaab9a54) Tobias *2020-12-16 10:08:46*\n\n**fixes #926**\n\n\n[97ab8](https://github.com/JSQLParser/JSqlParser/commit/97ab8e9b6cf4af8) Tobias Warneke *2020-12-11 22:13:14*\n\n**tested**\n\n\n[d9da6](https://github.com/JSQLParser/JSqlParser/commit/d9da64bd9ac032b) Tobias Warneke *2020-12-06 11:53:35*\n\n**tested**\n\n\n[875f7](https://github.com/JSQLParser/JSqlParser/commit/875f769e4ba353c) Tobias Warneke *2020-12-06 11:52:16*\n\n**upgraded to javacc 7.0.10, this time the lookahead seems to be working**\n\n\n[881e4](https://github.com/JSQLParser/JSqlParser/commit/881e457d7520aab) Tobias Warneke *2020-11-30 06:35:59*\n\n**upgraded to javacc 7.0.10, this time the lookahead seems to be working**\n\n\n[eae2e](https://github.com/JSQLParser/JSqlParser/commit/eae2e0d450c88c0) Tobias Warneke *2020-11-30 06:34:55*\n\n**fixes #1065**\n\n\n[e0b3a](https://github.com/JSQLParser/JSqlParser/commit/e0b3a180da5b1f8) Tobias Warneke *2020-11-22 19:39:48*\n\n**support IN with value (#1065)**\n\n* Co-authored-by: Jan Monterrubio &lt;Jan.Monterrubio@Cerner.com&gt; \n* Co-authored-by: Tobias &lt;t.warneke@gmx.net&gt; \n\n[8c7ee](https://github.com/JSQLParser/JSqlParser/commit/8c7ee289e78d07d) Jan Monterrubio *2020-11-22 19:29:27*\n\n**fixes #1074**\n\n\n[ece8a](https://github.com/JSQLParser/JSqlParser/commit/ece8a5a9e39abff) Tobias Warneke *2020-11-22 19:14:52*\n\n**fixes #1075**\n\n\n[b74f5](https://github.com/JSQLParser/JSqlParser/commit/b74f53228295d96) Tobias Warneke *2020-11-22 19:08:39*\n\n****\n\n\n[1008e](https://github.com/JSQLParser/JSqlParser/commit/1008ebcc5a806b9) Tobias Warneke *2020-11-06 22:01:54*\n\n**Support CreateSynonym statement (#1064)**\n\n* visual \n* add synonym support \n* add tests \n* exclude keyword \n* Co-authored-by: Jan Monterrubio &lt;Jan.Monterrubio@Cerner.com&gt; \n\n[17e26](https://github.com/JSQLParser/JSqlParser/commit/17e2633e46778c6) Jan Monterrubio *2020-11-06 21:45:14*\n\n****\n\n\n[d5258](https://github.com/JSQLParser/JSqlParser/commit/d5258232ea77690) Tobias Warneke *2020-11-06 21:34:08*\n\n**Validation visitor framework (#1045)**\n\n* * add with prefix for fluent setters. \n* https://github.com/JSQLParser/JSqlParser/issues/1004 \n* add getters \n* * add with prefix for fluent setters. (revert to chaining setters, do \n* not break current api) \n* https://github.com/JSQLParser/JSqlParser/issues/1004 \n* * add with prefix for fluent setters. (revert to chaining setters, do \n* not break current api) \n* https://github.com/JSQLParser/JSqlParser/issues/1004 \n* use new methods within testcases \n* use new methods within testcases \n* use new methods within testcases \n* use new methods within testcases \n* use new methods within testcases \n* use new methods within testcases \n* use new methods within testcases \n* use new methods within testcases \n* remove create() methods - they do not add enough value to be justified \n* * use new methods within testcases \n* add some constructors \n* fix and add &quot;with&quot; / &quot;add&quot; methods \n* * use new methods within testcases \n* * use new methods within testcases \n* add some constructors \n* * renamed constant \n* use new methods within testcases \n* use new methods within testcases \n* use new methods within testcases \n* use new methods within testcases \n* * use new methods within testcases \n* add some with-methods \n* add getter/setter named after the field without abbrivation \n* * use new methods within testcases \n* remove empty implicit constructor \n* return the deparsed Statement - object \n* compare object tree \n* compare object tree \n* * fix ObjectTreeToStringStyle \n* compare object tree \n* remove casts not needed \n* * use new methods within testcases \n* add some &quot;set&quot; &quot;with&quot; &quot;add&quot; methods missing \n* * use new methods within testcases \n* add empty constructors and override with-/add-methods returning concrete \n* type \n* * add ReflectionModelTest \n* * use new methods within testcases \n* fix checkstyle errors \n* license header \n* remove test-classes from ReflectionModelTest \n* remove visitoradapter-classes from ReflectionModelTest \n* * add SelectDeParser(StringBuilder) \n* remove overriding setters/getters of buffer \n* #1007 \n* push to synbee-contrib \n* org.synbee.commons.contrib:jsqlparser:3.2-0.0.6-SNAPSHOT \n* add ValidationUtil for simple validation of one or more statements \n* remove overrides of \n* getCause \n* printStackTrace variants \n* why add an additional cause ? \n* set cause.getMessage() the message within constructor \n* JSQLParserException(Throwable cause), othewise cause.toString() will be \n* set as default. \n* add ValidationVisitor showcase \n* https://github.com/JSQLParser/JSqlParser/issues/1005 \n* add ValidationUtil for simple validation of one or more statements \n* remove overrides of \n* getCause \n* printStackTrace variants \n* why add an additional cause ? \n* set cause.getMessage() the message within constructor \n* JSQLParserException(Throwable cause), othewise cause.toString() will be \n* set as default. \n* visit(ShowTablesStatement) \n* copyright/license \n* add stubs (use deparsers as template) \n* Merge branch &#x27;master.validate&#x27; of \n* https://github.com/gitmotte/JSqlParser.git into master.validate \n* add ValidationVisitor showcase \n* https://github.com/JSQLParser/JSqlParser/issues/1005 \n* add ValidationUtil for simple validation of one or more statements \n* remove overrides of \n* getCause \n* printStackTrace variants \n* why add an additional cause ? \n* set cause.getMessage() the message within constructor \n* JSQLParserException(Throwable cause), othewise cause.toString() will be \n* set as default. \n* visit(ShowTablesStatement) \n* add stubs (use deparsers as template) \n* Merge branch &#x27;master.validate&#x27; of \n* https://github.com/gitmotte/JSqlParser.git into master.validate \n* add tests for ValidationUtil \n* + implements OrderByVisitor \n* split Expressionvalidator which implements both ItemsListVisitor and \n* Expressionvisitor into Expressionvalidator and ItemListValidator \n* Merge branch &#x27;github.validate&#x27; \n* implement upsertvalidator \n* add copyright \n* validate through given ValidationCapability&#x27;s \n* * switch to new method forced by \n* ValidationCapability.validate(ValidationContext context, \n* Consumer&lt;String&gt; errorMessageConsumer); \n* add AllowedTypesValidation \n* add FeatureConfiguration \n* use FeatureConfiguration within parser \n* repair pom.xml \n* repair pom.xml \n* repair pom.xml \n* repair pom.xml \n* * make FeatureConfiguration not a singleton any more \n* CCJSqlParser extends AbstractJSqlParser&lt;CCJSqlParser&gt; \n* add FeaturesAllowed for testing against features allowed \n* implement some Validators \n* basic implementation of DatabaseMetaDataValidation / \n* JdbcDatabaseMetaDataCapability \n* moving classes to sub-packages \n* * moving classes to sub-packages \n* fixing some bugs \n* repair pom.xml \n* add and fix validations \n* add javadoc \n* * force definition of &#x60;&#x60;&#x60;public String getMessage(Feature feature)&#x60;&#x60;&#x60; \n* in FeatureSetValidation \n* allow all objects as feature-value - this may be needed by the parser, \n* if a none-boolean configuration is needed \n* impl. \n* SelectValidator.visit(PlainSelect) \n* OrderByValidator \n* add Version-enums \n* impl. \n* InsertValidator \n* multiple implementations of visit(SubSelect) -&gt; forward to \n* SelectValidator \n* add some known features to SqlServerVersion \n* refactoring enum-name should be upper case \n* add ansi sql enum \n* refactoring enum-name should be upper case \n* implement limitvalidator \n* + validateOffset \n* + validateFetch \n* + validate Pivot, UnPivot, PivotXml \n* + implement DropValidator \n* change testcase to image a more probably usecase \n* * add javadoc and \n* predefined sets for EXECUTE, ALTER, DROP \n* allow to combine FeatureSets \n* * implement executevalidator \n* implement ExpressionValidator \n* implement GrantValidator \n* javadoc and complete SELECT constant \n* use utility methods from AbstractValidator \n* more user friendly names \n* javadoc \n* add subtypes for ValidationException \n* ValidationParseException \n* DatabaseException \n* UnexpectedValidationException \n* and change Set&lt;String&gt; errors to Set&lt;ValidationException&gt; for collect. \n* javadoc &amp; rename exception \n* rename method \n* extract parsing task into package - private class for {@link \n* ValidationUtil} to parse the statements \n* within it&#x27;s own {@link ValidationCapability} \n* add null-check for parsedStatement \n* bugfix - do not collect duplicates \n* implement toString() for \n* ValidationError \n* ValidationException \n* add simple caching \n* + validateOptionalFromItem(s) \n* * implement GroupByValidator \n* implement merge-validator \n* renaming ItemListValidator -&gt; ItemsListValidator \n* + validateOptionalItemsList \n* + implement ReplaceValidator \n* + use validateOptionalColumns, validateOptionalExpression where possible \n* * remove validateOptionalColumns -&gt; switch to \n* validateOptionalExpressions \n* move validateOptionalOrderByElements to AbstractValidator \n* add validateOptional in AbstractValidator \n* add validateOptionalList in AbstractValidator \n* + SetStatementValidator \n* + ValuesStatementValidator \n* + UseStatementValidator \n* * implement UpdateValidator \n* * implement ShowStatementValidator/ShowColumnsStatementValidator \n* * implement UpdateValidator \n* * add Feature.jdbcParameter, Feature.jdbcNamedParameter, to all \n* featuresets \n* + Version.getFeaturesClone \n* add javadoc to Version-enum-constructors \n* + validateOptionalFeature \n* * implement DeleteValidator \n* ... \n* fix typo \n* small optimization \n* * move method getFeaturesClone to FeatureSet \n* implement join - validation \n* add copy(), add(Collection), remove(*) methods to FeaturesAllowed \n* * add join - features to sqlserver, h2 \n* implementations \n* bugfix - merging the errors \n* copyright \n* https://github.com/JSQLParser/JSqlParser/issues/1022 \n* add more fine granular control for setOperations \n* fix nullpointerexception \n* add more fine granular control for comments \n* add Features supported \n* * add javadoc \n* add features to *Version-files \n* extract methods isNotEmpty \n* check for isNotEmpty \n* * add features to *Version-files \n* always parse net.sf.jsqlparser.statement.Statements and validate the \n* list of included net.sf.jsqlparser.statement.Statement&#x27;s \n* add known mariadb features \n* new names-set for FeaturesAllowed \n* new names-set for FeaturesAllowed \n* new names-set for FeaturesAllowed \n* add ature.withItem, Feature.withItemRecursive to H2 \n* Feature.setOperation, Feature.setOperationUnion, \n* Feature.setOperationIntersect, Feature.setOperationExcept, \n* for MariaDb \n* add features to SQLServer \n* Merge branch &#x27;master.orig&#x27; into github.validate \n* @Override() -&gt; @Override \n* fix typing error &quot;joinStaight&quot; &gt; joinStraight \n* rename Feature &quot;insertValues&quot; -&gt; &quot;values&quot; and use &quot;insertValues&quot; for \n* INSERT INTO ... VALUES \n* add javadoc \n* add Feature.selectGroupByGroupingSets to PostgresqlVersion \n* implement basic OracleVersion \n* add Feature.mySql* - also supported by mariadb \n* add some more finegraned control over &quot;drop&quot; Feature. \n* drop, \n* dropTable, \n* dropIndex, \n* dropView, \n* dropSchema, \n* dropSequence, \n* dropIfExists, \n* complete FeaturesAllowed groups INSERT/UPDATE/DELETE/MERGE/DML \n* add link to documentation \n* fix - duplicate use of feature &quot;function&quot; - the use of functions in \n* statements and &quot;createFunction&quot; as a ddl statement \n* TODO this feature seams very close to a jsqlparser-user usecase \n* * implement MySqlVersion \n* replace feature Feature.dropIfExists by features dropTableIfExists, \n* dropIndexIfExists, dropViewIfExists, dropSchemaIfExists, \n* dropSequenceIfExists \n* add methods FeatureSet.getNotContained FeatureSet.retainAll \n* remove HSQLDBVersion - do not support this variant \n* remove HSQLDBVersion - do not support this variant \n* add unit-test \n* + add unittests for \n* UpdateValidator \n* DeleteValidator \n* add stubs for all other Validator-classes \n* + ModifyableFeatureSet \n* add some utility-methods in ValidationTestAsserts \n* complete unit-tests for InsertValidator \n* remote Feature.insertReturningExpressionList for Oracle - \n* returning_clause requires INTO clause (only PL/SQL) \n* add some more select validation tests \n* add DropValidatorTests \n* add DropValidatorTests \n* add CreateTableValidatorTests \n* add CreateTableValidatorTests \n* add ExpressionValidatorTests \n* add OrderByValidatorTest \n* use isNotEmpty \n* implement GroupByValidatorTest \n* implement CreateSequenceValidatorTest \n* remove @Ignore - test is ok \n* implement CreateIndexValidatorTest \n* implement CreateViewValidatorTest \n* enable validation of Feature.commentOnView (#1024 is merged already) \n* change format of #toString() for better readability \n* * implement MergeValidatorTest \n* implement ReplaceValidatorTest \n* implement StatementValidatorTest \n* rename \n* ValidationUtil -&gt; Validation \n* ValidatorUtil -&gt; ValidationUtil \n* add testcases for ValidationUtil \n* add DatabaseMetaDataValidationTest \n* checkstyle fix \n* add copyright statement \n* add unit-tests for show tables, show column, show statements \n* * add ExecuteValidatorTest \n* as there is a difference between execute &lt;procedure&gt; and execute \n* [immediate] &lt;dynamic sql&gt; with USING expr, ... remove support for \n* execute on MYSQL, MARIADB, ORACLE \n* * add ExecuteValidatorTest for CALL fnName (mysql, mariadb, postgres) \n* add upsertvalidatortest \n* add GrantValidatorTest \n* add AlterSequenceValidatorTest \n* add AlterSequenceValidatorTest \n* add AlterViewValidatorTest \n* add AlterValidatorTest \n* replace !&#x3D; null by isNotEmpty on collections \n* fix formatting \n* add validate commit \n* add validate block \n* add DeclareStatementValidatorTest \n* let NamesLookup implement UnaryOperator&lt;String&gt; \n* let NamesLookup implement UnaryOperator&lt;String&gt; \n* add javadoc \n* add more DatabaseMetaDataValidationTest&#x27;s \n* extract JdbcDatabaseMetaDataCapability.splitAndValidateMinMax \n* add pivot/unpivot/pivotxml validation testcases \n* add testcase for Feature.tableFunction \n* add test for lateral joins and subjoins \n* add testValidationRowMovementOption \n* add values validator test \n* move tests to LimitValidatorTest \n* move tests to UseStatementValidatorTest \n* add tests for SET - statements \n* fix checkstyle error \n* new serialVersionUID \n* add validation for NamedObject not existing \n* need table/view reference to validate column names \n* fix typo \n* fix errormessage (Arrays.toString(types)) \n* add trigger, alias \n* return null, instead of throwing exception, if not found \n* extract NamesLookup to own file (jdk-bug enum inner classes) \n* fix name-check AlterOperation.ALTER \n* fix error message \n* remove methods not needed (they only delegate to ValidationContext) \n* add tests - validate metadata \n* fix compile error \n* fix columnExists check - depending on the statement the prefix is an \n* alias, a table/view or it has no prefix (need to lookup within all \n* related tables/views) \n* fix javadoc warnings \n\n[8c735](https://github.com/JSQLParser/JSqlParser/commit/8c735be5b179e51) gitmotte *2020-11-06 21:12:25*\n\n**Support Create table LIKE (#1066)**\n\n* fixes #413 \n* add coverage \n* Co-authored-by: chyun &lt;chyun_wu@163.com&gt; \n\n[ac746](https://github.com/JSQLParser/JSqlParser/commit/ac7462286ae15b9) Chyun *2020-11-06 21:05:09*\n\n**fixes #1068**\n\n\n[f1cf0](https://github.com/JSQLParser/JSqlParser/commit/f1cf0abc11ed783) Tobias Warneke *2020-11-06 20:59:19*\n\n**Bump junit from 4.12 to 4.13.1 (#1063)**\n\n* Bumps [junit](https://github.com/junit-team/junit4) from 4.12 to 4.13.1. \n* - [Release notes](https://github.com/junit-team/junit4/releases) \n* - [Changelog](https://github.com/junit-team/junit4/blob/main/doc/ReleaseNotes4.12.md) \n* - [Commits](https://github.com/junit-team/junit4/compare/r4.12...r4.13.1) \n* Signed-off-by: dependabot[bot] &lt;support@github.com&gt; \n* Co-authored-by: dependabot[bot] &lt;49699333+dependabot[bot]@users.noreply.github.com&gt; \n\n[f9a11](https://github.com/JSQLParser/JSqlParser/commit/f9a115c582dd59b) dependabot[bot] *2020-10-13 12:26:17*\n\n**fixes #1062**\n\n\n[80e28](https://github.com/JSQLParser/JSqlParser/commit/80e2891e8a79402) wumpz *2020-10-11 19:59:03*\n\n**corrected a test failure**\n\n\n[bc0e5](https://github.com/JSQLParser/JSqlParser/commit/bc0e5b913fc4f61) wumpz *2020-10-06 21:07:00*\n\n**support FILTER not only for window function (#1046)**\n\n* support FILTER not only for window function \n* Fixed imports \n\n[f32fa](https://github.com/JSQLParser/JSqlParser/commit/f32fa6137d6161b) Роман Зотов *2020-10-05 19:45:36*\n\n**fixes #1059**\n\n\n[3e84a](https://github.com/JSQLParser/JSqlParser/commit/3e84a377b488960) wumpz *2020-10-04 20:43:42*\n\n****\n\n\n[6b35e](https://github.com/JSQLParser/JSqlParser/commit/6b35e2fc4f39083) wumpz *2020-10-04 20:17:54*\n\n**fixes #1055 - added simple jdbc parameter to interval expression**\n\n\n[68659](https://github.com/JSQLParser/JSqlParser/commit/686599b199d6d49) wumpz *2020-10-04 20:16:04*\n\n**Retain original value in TimestampValue (#1057)**\n\n* Co-authored-by: Enrico Olivelli &lt;enrico.olivelli@diennea.com&gt; \n\n[622f9](https://github.com/JSQLParser/JSqlParser/commit/622f9aebb3ebce7) Enrico Olivelli *2020-10-04 19:51:01*\n\n**fixes #1053**\n\n\n[45aa8](https://github.com/JSQLParser/JSqlParser/commit/45aa8f853a10779) wumpz *2020-10-04 19:42:23*\n\n**Addons/fixes for Fluent API  (#1049)**\n\n* fix unittests for setter/wither methods with primitive arguments \n* add missing withAscDescPresent \n\n[8165e](https://github.com/JSQLParser/JSqlParser/commit/8165e29cb081080) gitmotte *2020-10-04 19:20:43*\n\n**fixes #1040**\n\n\n[3f516](https://github.com/JSQLParser/JSqlParser/commit/3f5165122bc9824) wumpz *2020-09-27 21:12:11*\n\n**xmlserialize support patch for optional order by part**\n\n\n[3747f](https://github.com/JSQLParser/JSqlParser/commit/3747f1c00503b54) wumpz *2020-09-10 21:21:47*\n\n**xmlserialize support patch for expressions**\n\n\n[8c4e0](https://github.com/JSQLParser/JSqlParser/commit/8c4e0ca141656fd) wumpz *2020-09-08 20:35:36*\n\n**Make UnPivot.getUnPivotInClause() return List<SelectExpressionItem> (#1039)**\n\n\n[abedc](https://github.com/JSQLParser/JSqlParser/commit/abedce539515638) MoonFruit *2020-09-07 11:32:37*\n\n**xmlserialize support**\n\n\n[b580a](https://github.com/JSQLParser/JSqlParser/commit/b580a093c2edda6) wumpz *2020-09-05 22:00:43*\n\n****\n\n\n[536fb](https://github.com/JSQLParser/JSqlParser/commit/536fb0348ae985e) wumpz *2020-08-30 20:23:52*\n\n**bugfix issue #1036: supporting DROP SEQUENCE (#1037)**\n\n\n[e5cd7](https://github.com/JSQLParser/JSqlParser/commit/e5cd7c83e15f7f9) suiwenbo *2020-08-30 20:16:20*\n\n**modified Condition production to be more performant**\n\n\n[3d7f5](https://github.com/JSQLParser/JSqlParser/commit/3d7f55c48a8dfae) wumpz *2020-08-29 22:30:01*\n\n**bugfix #720 #991: supporting SELECT \"conditions\" (#1032)**\n\n* bugfix issue #1020: JSON type in MySQL not supported in v3.2 \n* bugfix issue #720 #991: supporting SELECT &quot;CONDITIONS&quot; \n\n[9e26b](https://github.com/JSQLParser/JSqlParser/commit/9e26b76ddbc626f) suiwenbo *2020-08-25 22:29:41*\n\n****\n\n\n[81523](https://github.com/JSQLParser/JSqlParser/commit/815235606244b01) wumpz *2020-08-23 20:33:42*\n\n**setting version to 4-SNAPSHOT**\n\n\n[85286](https://github.com/JSQLParser/JSqlParser/commit/852860985832c4c) wumpz *2020-08-23 20:32:33*\n\n**Fluent builder api #1004 (#1014)**\n\n* https://github.com/JSQLParser/JSqlParser/issues/1004 \n* create(...) methods \n* chaining - methods returning &quot;this&quot; \n* overwrite chaining - methods of abstract parents/interfaces for \n* returning concrete type \n* add&lt;Name&gt; methods on collection-fields with varargs-parameter \n* add public T get&lt;Name&gt;(Class&lt;T&gt;) - casting and returning an inner \n* interface-type \n* 1004 add chaining - methods returning &quot;this&quot; \n* #1004 add chaining - methods returning &quot;this&quot; \n* * add&lt;Name&gt; methods on collection-fields with varargs-parameter \n* add&lt;Name&gt; methods on collection-fields with collection-parameter \n* https://github.com/JSQLParser/JSqlParser/issues/1004 \n* * add chaining - methods returning &quot;this&quot; \n* add&lt;Name&gt; methods on collection-fields with varargs-parameter \n* add&lt;Name&gt; methods on collection-fields with collection-parameter \n* https://github.com/JSQLParser/JSqlParser/issues/1004 \n* * add public T get&lt;Name&gt;(Class&lt;T&gt;) - casting and returning the concrete \n* type \n* https://github.com/JSQLParser/JSqlParser/issues/1004 \n* * add public T get&lt;Name&gt;(Class&lt;T&gt;) - casting and returning the concrete \n* type (swap Class&lt;? extends E&gt; for Class&lt;E&gt;) \n* https://github.com/JSQLParser/JSqlParser/issues/1004 \n* * overwrite chaining - methods of abstract parents/interfaces for \n* returning concrete type \n* https://github.com/JSQLParser/JSqlParser/issues/1004 \n* * add with prefix for fluent setters. \n* https://github.com/JSQLParser/JSqlParser/issues/1004 \n* add getters \n* * add with prefix for fluent setters. (revert to chaining setters, do \n* not break current api) \n* https://github.com/JSQLParser/JSqlParser/issues/1004 \n* * add with prefix for fluent setters. (revert to chaining setters, do \n* not break current api) \n* https://github.com/JSQLParser/JSqlParser/issues/1004 \n* use new methods within testcases \n* use new methods within testcases \n* use new methods within testcases \n* use new methods within testcases \n* use new methods within testcases \n* use new methods within testcases \n* use new methods within testcases \n* use new methods within testcases \n* remove create() methods - they do not add enough value to be justified \n* * use new methods within testcases \n* add some constructors \n* fix and add &quot;with&quot; / &quot;add&quot; methods \n* * use new methods within testcases \n* * use new methods within testcases \n* add some constructors \n* * renamed constant \n* use new methods within testcases \n* use new methods within testcases \n* use new methods within testcases \n* use new methods within testcases \n* * use new methods within testcases \n* add some with-methods \n* add getter/setter named after the field without abbrivation \n* * use new methods within testcases \n* remove empty implicit constructor \n* return the deparsed Statement - object \n* compare object tree \n* compare object tree \n* * fix ObjectTreeToStringStyle \n* compare object tree \n* remove casts not needed \n* * use new methods within testcases \n* add some &quot;set&quot; &quot;with&quot; &quot;add&quot; methods missing \n* * use new methods within testcases \n* add empty constructors and override with-/add-methods returning concrete \n* type \n* * add ReflectionModelTest \n* * use new methods within testcases \n* fix checkstyle errors \n* license header \n* remove test-classes from ReflectionModelTest \n* remove visitoradapter-classes from ReflectionModelTest \n* remove duplicate import declaration (checkstyle error) \n* * fix RandomUtils to support used java.sql.* types \n* fix RandomUtils to support enums \n* fix RandomUtils to map objects by its interfaces and super-classes \n* filter method &quot;setASTNode&quot; - do not test setters (cannot randomly \n* create a SimpleNode) \n* add javadoc, stating that this is a marker interface \n* https://github.com/JSQLParser/JSqlParser/pull/1014#discussion_r454761902 \n* revert formatting change \n* https://github.com/JSQLParser/JSqlParser/pull/1014#discussion_r454762463 \n* change to EXEC_TYPE.EXECUTE just so the assertion didn&#x27;t change \n* https://github.com/JSQLParser/JSqlParser/pull/1014#discussion_r454763565 \n* try to revert format changes \n* https://github.com/JSQLParser/JSqlParser/pull/1014#discussion_r454800430 \n* try to revert format changes \n* https://github.com/JSQLParser/JSqlParser/pull/1014#discussion_r454800430 \n* remove brackets on @Override() -&gt; @Override \n* add with-methods to new fields \n\n[6cff1](https://github.com/JSQLParser/JSqlParser/commit/6cff161dacc1e6f) gitmotte *2020-08-23 20:07:53*\n\n****\n\n\n[02d58](https://github.com/JSQLParser/JSqlParser/commit/02d5837c5ee8c92) wumpz *2020-08-09 21:26:57*\n\n****\n\n\n[574a6](https://github.com/JSQLParser/JSqlParser/commit/574a6b7fda44857) wumpz *2020-08-09 21:22:24*\n\n**Support Foreign Key ON UPDATE CASCADE (#1025)**\n\n* https://github.com/JSQLParser/JSqlParser/issues/985 \n* add 2 unit-tests for given statements \n* https://github.com/JSQLParser/JSqlParser/issues/985 \n* fix formating (line width) \n* https://github.com/JSQLParser/JSqlParser/issues/985 \n* * fix nullpointerexceptions \n* add more unittest-assertions \n* https://github.com/JSQLParser/JSqlParser/issues/985 \n* change order to match the same order as in ForeignKeyIndex \n* byAction should not throw an exception (is used by deprecated \n* string-setters) \n* add unit-tests for ReferentialAction within AlterExpression \n* fix toString (added bug on refactoring) \n* javadoc \n* test set from get on null-values too \n* refactoring: add and use ReferentialAction() to evaluate enum \n* https://github.com/JSQLParser/JSqlParser/issues/985 \n* refactoring: fix parser that order of referential actions does not \n* matter \n* https://github.com/JSQLParser/JSqlParser/issues/985 \n* add empty constructor \n\n[1e88d](https://github.com/JSQLParser/JSqlParser/commit/1e88dd57eb48ebf) gitmotte *2020-08-09 21:01:34*\n\n**bugfix issue #1020: JSON type in MySQL not supported in v3.2 (#1028)**\n\n\n[685f6](https://github.com/JSQLParser/JSqlParser/commit/685f6fe43fb35d7) suiwenbo *2020-08-09 20:59:52*\n\n****\n\n\n[cfe5a](https://github.com/JSQLParser/JSqlParser/commit/cfe5a2e725b555b) wumpz *2020-08-09 20:58:15*\n\n**Add generated sources to classpath. (#804)**\n\n\n[14fb8](https://github.com/JSQLParser/JSqlParser/commit/14fb80d947d9bf0) Matthieu Vergne *2020-08-09 20:53:38*\n\n****\n\n\n[008d9](https://github.com/JSQLParser/JSqlParser/commit/008d9ad7f28a7b9) wumpz *2020-08-09 20:51:34*\n\n**COMMENT ON VIEW (#1024)**\n\n* * implement COMMENT ON VIEW \n* testcase &quot;testCommentOnView&quot; \n* https://github.com/JSQLParser/JSqlParser/issues/1023 \n* add more asserts \n\n[449f5](https://github.com/JSQLParser/JSqlParser/commit/449f55219fc39eb) gitmotte *2020-08-09 20:49:05*\n\n**fixes #1026**\n\n\n[4f888](https://github.com/JSQLParser/JSqlParser/commit/4f8882dd143469d) wumpz *2020-08-09 20:46:07*\n\n**fixes #1026**\n\n\n[4c323](https://github.com/JSQLParser/JSqlParser/commit/4c32302d386ec88) wumpz *2020-08-09 20:39:48*\n\n**fixes #1027**\n\n\n[a923e](https://github.com/JSQLParser/JSqlParser/commit/a923e7e00ef3518) wumpz *2020-08-09 20:31:26*\n\n**fixes #1029**\n\n\n[db6ac](https://github.com/JSQLParser/JSqlParser/commit/db6acef1c38e09e) wumpz *2020-08-09 19:55:55*\n\n**fixes #732**\n\n\n[57a7d](https://github.com/JSQLParser/JSqlParser/commit/57a7dcdf2ede8a0) wumpz *2020-07-15 21:07:09*\n\n**variable assignment implemented**\n\n\n[cdd0f](https://github.com/JSQLParser/JSqlParser/commit/cdd0fa244dadca1) wumpz *2020-07-13 22:03:12*\n\n**allowed Jdbc named parameters within interval expressions**\n\n\n[869a7](https://github.com/JSQLParser/JSqlParser/commit/869a7b2088ff54f) wumpz *2020-07-12 21:25:43*\n\n**allowed Jdbc named parameters within interval expressions**\n\n\n[3602c](https://github.com/JSQLParser/JSqlParser/commit/3602c5f6d0a1766) wumpz *2020-07-12 21:25:05*\n\n**some house keeping**\n\n\n[8bcf2](https://github.com/JSQLParser/JSqlParser/commit/8bcf2dc4f64cde3) wumpz *2020-07-11 20:39:37*\n\n**fixes #1009**\n\n\n[71d65](https://github.com/JSQLParser/JSqlParser/commit/71d6523f2150bc2) wumpz *2020-07-11 20:30:30*\n\n**Add show tables support (#1015)**\n\n* visual \n* implement show tables \n* Co-authored-by: Jan Monterrubio &lt;Jan.Monterrubio@Cerner.com&gt; \n\n[c0373](https://github.com/JSQLParser/JSqlParser/commit/c03733b3cfcb758) Jan Monterrubio *2020-07-11 16:43:42*\n\n**let all deparsers extend AbstractDeParser (#1007)**\n\n* let all deparsers extend AbstractDeParser \n* * add SelectDeParser(StringBuilder) \n* remove overriding setters/getters of buffer \n* #1007 \n\n[2b790](https://github.com/JSQLParser/JSqlParser/commit/2b7909c3be31ca8) gitmotte *2020-07-11 16:40:11*\n\n****\n\n\n[ea88e](https://github.com/JSQLParser/JSqlParser/commit/ea88e1b2899176e) wumpz *2020-06-28 19:22:52*\n\n****\n\n\n[51e84](https://github.com/JSQLParser/JSqlParser/commit/51e8428d7dcf7dc) wumpz *2020-06-27 23:01:20*\n\n\n## jsqlparser-3.2 (2020-06-28)\n\n### Other changes\n\n****\n\n\n[cd742](https://github.com/JSQLParser/JSqlParser/commit/cd742d3104218ab) wumpz *2020-06-27 22:29:23*\n\n**partial func support (#1000)**\n\n\n[9df19](https://github.com/JSQLParser/JSqlParser/commit/9df19b9517112b8) Jan Monterrubio *2020-06-25 05:31:27*\n\n****\n\n\n[7a19a](https://github.com/JSQLParser/JSqlParser/commit/7a19a9b71c2a44d) wumpz *2020-06-23 21:56:47*\n\n**Support options for Explain (#996)**\n\n* visual \n* issue-995 \n* support verbose \n* postgres explain \n* tests \n* no text \n* Co-authored-by: Jan Monterrubio &lt;Jan.Monterrubio@Cerner.com&gt; \n\n[13873](https://github.com/JSQLParser/JSqlParser/commit/1387354712285e4) Jan Monterrubio *2020-06-23 21:52:42*\n\n****\n\n\n[8c307](https://github.com/JSQLParser/JSqlParser/commit/8c3076efc9544cb) wumpz *2020-06-23 20:45:19*\n\n**Support multiple lists for an IN clause (#997)**\n\n* visual \n* wip \n* cleanup n test \n* polish \n* lookahead \n* Co-authored-by: Jan Monterrubio &lt;Jan.Monterrubio@Cerner.com&gt; \n\n[5de4a](https://github.com/JSQLParser/JSqlParser/commit/5de4ae597fbeda3) Jan Monterrubio *2020-06-20 22:10:38*\n\n**fixes #999**\n\n\n[ce8ee](https://github.com/JSQLParser/JSqlParser/commit/ce8eef8bb6c2526) wumpz *2020-06-20 22:06:17*\n\n**fixes #999**\n\n\n[325cc](https://github.com/JSQLParser/JSqlParser/commit/325ccb0fc2cf067) wumpz *2020-06-20 21:57:10*\n\n**Support ALTER SEQUENCE  (#980)**\n\n* support alter sequence \n* improve coverage \n\n[d34c8](https://github.com/JSQLParser/JSqlParser/commit/d34c885ba5a8c93) Jan Monterrubio *2020-05-23 10:16:07*\n\n****\n\n\n[779a7](https://github.com/JSQLParser/JSqlParser/commit/779a744a8ab80c7) wumpz *2020-05-23 10:12:52*\n\n**fixes #984**\n\n\n[38597](https://github.com/JSQLParser/JSqlParser/commit/38597f347c820a7) wumpz *2020-05-16 21:14:26*\n\n**fixes #984**\n\n\n[60ac1](https://github.com/JSQLParser/JSqlParser/commit/60ac16a98022455) wumpz *2020-05-16 21:00:28*\n\n**tests for issue**\n\n\n[82894](https://github.com/JSQLParser/JSqlParser/commit/8289406bbcbba45) wumpz *2020-05-14 21:16:52*\n\n****\n\n\n[d6bbc](https://github.com/JSQLParser/JSqlParser/commit/d6bbc3fa8a10d58) wumpz *2020-05-08 21:12:13*\n\n****\n\n\n[1ee7c](https://github.com/JSQLParser/JSqlParser/commit/1ee7c417bf0936e) wumpz *2020-05-08 20:19:13*\n\n**fixes #981**\n\n\n[d79b4](https://github.com/JSQLParser/JSqlParser/commit/d79b44db122652e) wumpz *2020-05-08 20:14:21*\n\n**fixbuild (#978)**\n\n\n[08b94](https://github.com/JSQLParser/JSqlParser/commit/08b9477ef28a377) Jan Monterrubio *2020-04-30 04:42:04*\n\n**Implement row movement clause for table creation (#974)**\n\n* visual \n* implement row movement \n* support row + AS \n* Co-authored-by: Jan Monterrubio &lt;Jan.Monterrubio@Cerner.com&gt; \n\n[79b5f](https://github.com/JSQLParser/JSqlParser/commit/79b5fe9c5681961) Jan Monterrubio *2020-04-28 07:02:51*\n\n**Support CREATE SEQUENCE (#977)**\n\n* wip \n* wip, some parsing \n* support sequence \n* implement feature \n* delete issue tests \n* compile it \n\n[a6a3c](https://github.com/JSQLParser/JSqlParser/commit/a6a3c616b8994f1) Jan Monterrubio *2020-04-28 07:01:10*\n\n****\n\n\n[ca76f](https://github.com/JSQLParser/JSqlParser/commit/ca76fed4be73522) wumpz *2020-04-19 19:50:28*\n\n**fixes #962**\n\n\n[3f918](https://github.com/JSQLParser/JSqlParser/commit/3f918501bda7fc4) wumpz *2020-04-18 21:53:14*\n\n**implement feature (#972)**\n\n* Co-authored-by: Jan Monterrubio &lt;Jan.Monterrubio@Cerner.com&gt; \n\n[aee39](https://github.com/JSQLParser/JSqlParser/commit/aee3947757eecf4) Jan Monterrubio *2020-04-17 21:01:22*\n\n**test method names changed**\n\n\n[2b564](https://github.com/JSQLParser/JSqlParser/commit/2b5647b5af32b74) zhumaliev-rv *2020-04-03 05:31:40*\n\n**added Oracle GRANT statement**\n\n\n[fa215](https://github.com/JSQLParser/JSqlParser/commit/fa21512ea2f2dd8) zhumaliev-rv *2020-04-02 12:03:43*\n\n**fixes #855**\n\n\n[f3ecd](https://github.com/JSQLParser/JSqlParser/commit/f3ecdcb1a8fe8b0) wumpz *2020-03-25 22:42:33*\n\n**fixes #915**\n\n\n[9ce74](https://github.com/JSQLParser/JSqlParser/commit/9ce74e234e09525) wumpz *2020-03-04 22:04:40*\n\n**fixes #922**\n\n\n[8abd6](https://github.com/JSQLParser/JSqlParser/commit/8abd6e732c926c2) wumpz *2020-03-01 00:00:26*\n\n****\n\n\n[65ad8](https://github.com/JSQLParser/JSqlParser/commit/65ad8f9b8b05835) wumpz *2020-02-29 23:22:26*\n\n**fixes #864**\n\n\n[5783b](https://github.com/JSQLParser/JSqlParser/commit/5783b65f169560a) wumpz *2020-02-15 21:31:55*\n\n**fixes #701**\n\n\n[8d43f](https://github.com/JSQLParser/JSqlParser/commit/8d43facbc33c803) wumpz *2020-02-15 20:43:38*\n\n**fixes #945**\n\n\n[ab405](https://github.com/JSQLParser/JSqlParser/commit/ab4054ce5c1917e) wumpz *2020-02-14 23:19:47*\n\n**fixes #944**\n\n\n[e1ff1](https://github.com/JSQLParser/JSqlParser/commit/e1ff1f09e9ad946) wumpz *2020-02-14 23:02:57*\n\n**fixes #944**\n\n\n[22117](https://github.com/JSQLParser/JSqlParser/commit/22117c40613778b) wumpz *2020-02-14 22:58:06*\n\n**introduces sql server hints**\n\n\n[92c74](https://github.com/JSQLParser/JSqlParser/commit/92c74bfb15b18ac) wumpz *2020-02-14 19:40:15*\n\n**introduces sql server hints**\n\n\n[6a414](https://github.com/JSQLParser/JSqlParser/commit/6a414aa703b9a5b) wumpz *2020-02-14 19:04:41*\n\n**introduced view keyword**\n\n\n[f12bb](https://github.com/JSQLParser/JSqlParser/commit/f12bb31a14973ac) wumpz *2020-02-12 23:54:37*\n\n**fixes #909**\n\n\n[9b998](https://github.com/JSQLParser/JSqlParser/commit/9b998d67699bf5c) wumpz *2020-02-02 21:51:56*\n\n**fixes #930**\n\n\n[4c4a5](https://github.com/JSQLParser/JSqlParser/commit/4c4a5361453c434) wumpz *2020-02-02 21:09:52*\n\n**fixes #940**\n\n\n[dc93a](https://github.com/JSQLParser/JSqlParser/commit/dc93a07e38341de) wumpz *2020-02-02 20:43:09*\n\n**fixes #941  again :)**\n\n\n[782dc](https://github.com/JSQLParser/JSqlParser/commit/782dce8d20ce99f) wumpz *2020-02-02 20:22:40*\n\n**fixes #941**\n\n\n[ce392](https://github.com/JSQLParser/JSqlParser/commit/ce392b3739dcfbb) wumpz *2020-02-01 23:49:17*\n\n**fixes #924**\n\n\n[d0cd8](https://github.com/JSQLParser/JSqlParser/commit/d0cd8f869bb1173) wumpz *2020-02-01 23:21:52*\n\n**Update README.md**\n\n\n[a03d2](https://github.com/JSQLParser/JSqlParser/commit/a03d235d91de445) Tobias *2020-02-01 00:34:26*\n\n**updated some maven plugins**\n\n\n[3ba29](https://github.com/JSQLParser/JSqlParser/commit/3ba29f1fdc76a7a) wumpz *2020-02-01 00:33:17*\n\n**fixes #936**\n\n* fixes #938 \n\n[39e92](https://github.com/JSQLParser/JSqlParser/commit/39e920df15fefd7) wumpz *2020-02-01 00:08:17*\n\n**fixes #936**\n\n\n[abf44](https://github.com/JSQLParser/JSqlParser/commit/abf440d2be0fbc6) wumpz *2020-01-31 23:47:06*\n\n**added keyword group to possible object names**\n\n\n[430b3](https://github.com/JSQLParser/JSqlParser/commit/430b3ee8f506173) wumpz *2020-01-27 06:42:20*\n\n**fixes #923**\n\n\n[775a0](https://github.com/JSQLParser/JSqlParser/commit/775a09b0a763f55) wumpz *2020-01-25 23:09:35*\n\n**fixes #923**\n\n\n[57d50](https://github.com/JSQLParser/JSqlParser/commit/57d5044a1a1d6bc) wumpz *2020-01-25 23:09:18*\n\n**started fixing #923**\n\n\n[0f78d](https://github.com/JSQLParser/JSqlParser/commit/0f78dfdf5dfa6a7) wumpz *2020-01-23 23:19:41*\n\n**fixes #932**\n\n\n[3490e](https://github.com/JSQLParser/JSqlParser/commit/3490e61dbc6b9b0) wumpz *2020-01-23 21:57:59*\n\n**fixes #918**\n\n\n[3b89c](https://github.com/JSQLParser/JSqlParser/commit/3b89cd28ad893ae) wumpz *2020-01-23 21:26:58*\n\n**fixes #921**\n\n\n[f4b10](https://github.com/JSQLParser/JSqlParser/commit/f4b10cff44e90f4) wumpz *2020-01-21 07:27:10*\n\n**fixes #921**\n\n\n[a23d3](https://github.com/JSQLParser/JSqlParser/commit/a23d30bc9425b19) wumpz *2020-01-21 07:26:35*\n\n**fixes #929**\n\n\n[a3c95](https://github.com/JSQLParser/JSqlParser/commit/a3c95d4712852f2) wumpz *2020-01-21 07:11:38*\n\n**fixes #928**\n\n\n[0bae6](https://github.com/JSQLParser/JSqlParser/commit/0bae629dba2459c) wumpz *2020-01-21 06:58:58*\n\n**fixes #927**\n\n\n[62648](https://github.com/JSQLParser/JSqlParser/commit/6264801af1c0bef) wumpz *2020-01-21 06:49:23*\n\n**fixes #917**\n\n\n[8de0f](https://github.com/JSQLParser/JSqlParser/commit/8de0fd9971b6e07) wumpz *2020-01-05 22:08:03*\n\n**rewind #910**\n\n\n[9ca4f](https://github.com/JSQLParser/JSqlParser/commit/9ca4f3e63b26353) wumpz *2020-01-03 00:03:35*\n\n**Adding support for simple expressions in INTERVAL expressions (#910)**\n\n\n[ebac9](https://github.com/JSQLParser/JSqlParser/commit/ebac9dbcadb4df8) Tomer Shay (Shimshi) *2019-12-20 06:14:04*\n\n**removed null check**\n\n\n[aba6f](https://github.com/JSQLParser/JSqlParser/commit/aba6f3ae2148d51) wumpz *2019-12-18 14:01:17*\n\n**Update README.md**\n\n\n[6fd3c](https://github.com/JSQLParser/JSqlParser/commit/6fd3c9c0e6fa4b6) Tobias *2019-12-02 15:55:47*\n\n****\n\n\n[5be06](https://github.com/JSQLParser/JSqlParser/commit/5be0646d9004b6e) wumpz *2019-12-01 22:12:59*\n\n****\n\n\n[82d8f](https://github.com/JSQLParser/JSqlParser/commit/82d8f59db9f1c33) wumpz *2019-12-01 22:12:54*\n\n**Update README.md**\n\n\n[f7ae7](https://github.com/JSQLParser/JSqlParser/commit/f7ae75ace8ecb98) Tobias *2019-11-27 20:26:12*\n\n**fixes #899**\n\n* switched to assertj from hamcrest \n\n[9707e](https://github.com/JSQLParser/JSqlParser/commit/9707e4f0aacff16) wumpz *2019-11-23 23:18:56*\n\n**Adding support for casting to SIGNED (#900)**\n\n\n[73b3d](https://github.com/JSQLParser/JSqlParser/commit/73b3d44f16a57c9) Tomer Shay (Shimshi) *2019-11-20 09:39:47*\n\n**Support parsing SELECT FOR UPDATE NOWAIT - Refer to documents on https://docs.oracle.com/cd/E17952_01/mysql-8.0-en/innodb-locking-reads.html#innodb-locking-reads-nowait-skip-locked (#896)**\n\n\n[596e6](https://github.com/JSQLParser/JSqlParser/commit/596e631ff985c10) Yoon Kyong Sik *2019-11-16 10:07:59*\n\n**added some doc to CCJSqlParserUtil**\n\n\n[5242a](https://github.com/JSQLParser/JSqlParser/commit/5242a18d20a7c2a) wumpz *2019-11-13 08:31:40*\n\n**Adding support for STRAIGHT_JOIN in the select clause (#861)**\n\n* Adding support for straight_join in the select clause \n* Renaming the field name to reflect that this is a MySQL hint \n\n[3cdea](https://github.com/JSQLParser/JSqlParser/commit/3cdea6bd3d9ce21) Tomer Shay (Shimshi) *2019-11-09 20:30:54*\n\n**Update README.md**\n\n\n[a0077](https://github.com/JSQLParser/JSqlParser/commit/a0077a1e3b4c0c1) Tobias *2019-11-08 07:53:42*\n\n****\n\n\n[47a94](https://github.com/JSQLParser/JSqlParser/commit/47a944eb4571b02) wumpz *2019-11-06 22:36:04*\n\n\n## jsqlparser-3.1 (2019-11-06)\n\n### Other changes\n\n**fixes #344**\n\n\n[43862](https://github.com/JSQLParser/JSqlParser/commit/43862ddf607493d) wumpz *2019-11-06 22:23:56*\n\n**fixes #344**\n\n\n[782de](https://github.com/JSQLParser/JSqlParser/commit/782de006989e787) wumpz *2019-11-06 22:23:06*\n\n**Adding support for complex expressions in the ORDER BY clause (#890)**\n\n\n[678ac](https://github.com/JSQLParser/JSqlParser/commit/678ac96b5948175) Tomer Shay (Shimshi) *2019-10-31 07:19:03*\n\n**fixes #884**\n\n\n[1d8a9](https://github.com/JSQLParser/JSqlParser/commit/1d8a9479ff3fc6f) wumpz *2019-10-26 21:38:48*\n\n**fixes #880**\n\n\n[7746b](https://github.com/JSQLParser/JSqlParser/commit/7746bbb7ffa8fb4) wumpz *2019-10-26 21:25:47*\n\n****\n\n\n[552bf](https://github.com/JSQLParser/JSqlParser/commit/552bf605ec075ec) wumpz *2019-10-26 20:41:45*\n\n**Added support for Oracle UNPIVOT keyword. (#882)**\n\n* Added support for Oracle UNPIVOT keyword. \n* Back to original version number. \n* Updated imports. \n* Added missing import. \n\n[bcc27](https://github.com/JSQLParser/JSqlParser/commit/bcc271870ad767f) Pascal Mulder *2019-10-26 20:35:43*\n\n**fixes #878**\n\n\n[c2836](https://github.com/JSQLParser/JSqlParser/commit/c2836f6a276879e) wumpz *2019-10-26 20:27:03*\n\n**fixes #869**\n\n\n[5b781](https://github.com/JSQLParser/JSqlParser/commit/5b78153ad5b8eb1) wumpz *2019-10-18 23:02:59*\n\n**fixes #876**\n\n\n[144e6](https://github.com/JSQLParser/JSqlParser/commit/144e60b43fd24ab) wumpz *2019-10-18 21:19:50*\n\n**fixes #866**\n\n\n[25e1d](https://github.com/JSQLParser/JSqlParser/commit/25e1dcc3fc83440) wumpz *2019-10-16 22:44:27*\n\n**fixes #862**\n\n\n[51c92](https://github.com/JSQLParser/JSqlParser/commit/51c92d89389f780) wumpz *2019-10-16 21:40:42*\n\n**tests #874**\n\n\n[1ecfc](https://github.com/JSQLParser/JSqlParser/commit/1ecfcbc4abfd054) wumpz *2019-10-16 20:46:13*\n\n**fixes #865**\n\n\n[8a965](https://github.com/JSQLParser/JSqlParser/commit/8a965554e1005ca) wumpz *2019-10-14 21:12:05*\n\n**fixes #867**\n\n\n[22229](https://github.com/JSQLParser/JSqlParser/commit/22229459fb65b6f) wumpz *2019-10-09 08:40:11*\n\n**fixes #867**\n\n\n[6ef7e](https://github.com/JSQLParser/JSqlParser/commit/6ef7ebbad314090) wumpz *2019-10-09 08:38:23*\n\n**fixes #847**\n\n\n[2147a](https://github.com/JSQLParser/JSqlParser/commit/2147a21b0caee90) wumpz *2019-10-05 22:41:29*\n\n**allowing start as keyword for column and tablenames**\n\n\n[f9bba](https://github.com/JSQLParser/JSqlParser/commit/f9bba25386300ca) wumpz *2019-10-05 22:39:45*\n\n**allowing start as keyword for column and tablenames**\n\n\n[cc6a4](https://github.com/JSQLParser/JSqlParser/commit/cc6a4c5cba1e523) wumpz *2019-10-05 22:37:57*\n\n**fixes #859**\n\n\n[8e61a](https://github.com/JSQLParser/JSqlParser/commit/8e61a1884297af9) wumpz *2019-10-01 06:14:39*\n\n**Update README.md**\n\n\n[c6441](https://github.com/JSQLParser/JSqlParser/commit/c6441e05b5d3c59) Tobias *2019-09-30 23:04:05*\n\n**Fixes linkage of SubSelect to Node**\n\n\n[55783](https://github.com/JSQLParser/JSqlParser/commit/557831dc6621141) PGrafkin *2019-09-22 19:02:33*\n\n**fixes #845**\n\n\n[d6b4e](https://github.com/JSQLParser/JSqlParser/commit/d6b4e4d7bec895a) wumpz *2019-09-20 15:01:04*\n\n****\n\n\n[56ddc](https://github.com/JSQLParser/JSqlParser/commit/56ddc2d8fe4e898) wumpz *2019-09-20 14:41:27*\n\n**fixes #849**\n\n\n[62a03](https://github.com/JSQLParser/JSqlParser/commit/62a0341a35690fe) wumpz *2019-09-20 14:39:58*\n\n**fixes #848**\n\n\n[1d2c2](https://github.com/JSQLParser/JSqlParser/commit/1d2c261721d0d61) wumpz *2019-09-20 13:05:40*\n\n****\n\n\n[484ea](https://github.com/JSQLParser/JSqlParser/commit/484ea9dd02a9c4c) wumpz *2019-09-20 13:05:14*\n\n**fixes #850**\n\n\n[1cd3c](https://github.com/JSQLParser/JSqlParser/commit/1cd3c27f32aed64) wumpz *2019-09-20 12:26:44*\n\n**Update README.md**\n\n\n[6191a](https://github.com/JSQLParser/JSqlParser/commit/6191ae0646e1e40) Tobias *2019-08-29 21:32:25*\n\n\n## jsqlparser-3.0 (2019-08-29)\n\n### Other changes\n\n**fixes #842**\n\n\n[516ea](https://github.com/JSQLParser/JSqlParser/commit/516ea8a3a6988b0) wumpz *2019-08-26 22:12:59*\n\n**fixes #750 - duplicate**\n\n\n[dd7ed](https://github.com/JSQLParser/JSqlParser/commit/dd7eda0c4c6ab8c) wumpz *2019-08-19 08:07:41*\n\n****\n\n\n[55974](https://github.com/JSQLParser/JSqlParser/commit/55974c31d955565) wumpz *2019-08-14 15:23:23*\n\n****\n\n\n[c481c](https://github.com/JSQLParser/JSqlParser/commit/c481ce03c35ea0d) wumpz *2019-08-13 19:44:50*\n\n**fixes #677**\n\n\n[695d5](https://github.com/JSQLParser/JSqlParser/commit/695d532571c02c1) wumpz *2019-08-13 19:33:14*\n\n**fixes #378**\n\n\n[7a133](https://github.com/JSQLParser/JSqlParser/commit/7a133446d0c7fe4) wumpz *2019-08-13 19:26:13*\n\n**fixes #377**\n\n\n[9b6c4](https://github.com/JSQLParser/JSqlParser/commit/9b6c46c376f4591) wumpz *2019-08-13 19:24:23*\n\n**fixes #489**\n\n\n[27139](https://github.com/JSQLParser/JSqlParser/commit/27139a034edda7b) wumpz *2019-08-13 19:21:27*\n\n**fixes #648**\n\n* fixes #638 \n\n[74e02](https://github.com/JSQLParser/JSqlParser/commit/74e02267404da4e) wumpz *2019-08-13 19:19:12*\n\n****\n\n\n[36907](https://github.com/JSQLParser/JSqlParser/commit/36907e4e1295fc1) wumpz *2019-08-11 22:25:40*\n\n****\n\n\n[48dbd](https://github.com/JSQLParser/JSqlParser/commit/48dbd58c6ad38bc) wumpz *2019-08-11 20:54:19*\n\n****\n\n\n[089e6](https://github.com/JSQLParser/JSqlParser/commit/089e6b4667ca921) wumpz *2019-08-11 20:32:24*\n\n****\n\n\n[ca821](https://github.com/JSQLParser/JSqlParser/commit/ca821e5277c8ffd) wumpz *2019-08-11 20:31:58*\n\n****\n\n\n[b3cfd](https://github.com/JSQLParser/JSqlParser/commit/b3cfdac1a31a8de) wumpz *2019-08-11 08:36:52*\n\n****\n\n\n[d86cb](https://github.com/JSQLParser/JSqlParser/commit/d86cb90b0f0ff5b) wumpz *2019-08-11 08:08:22*\n\n****\n\n\n[68d01](https://github.com/JSQLParser/JSqlParser/commit/68d01212af90b3d) wumpz *2019-08-11 08:06:16*\n\n**fixes #838**\n\n\n[1d1b6](https://github.com/JSQLParser/JSqlParser/commit/1d1b62507670a9b) wumpz *2019-08-09 21:22:53*\n\n**fixes #826**\n\n\n[7567d](https://github.com/JSQLParser/JSqlParser/commit/7567d25fdabf631) wumpz *2019-08-09 20:59:36*\n\n**fixes #826**\n\n\n[01296](https://github.com/JSQLParser/JSqlParser/commit/01296c302471a9c) wumpz *2019-08-09 20:49:18*\n\n****\n\n\n[30619](https://github.com/JSQLParser/JSqlParser/commit/30619d8f214d876) wumpz *2019-08-09 14:07:15*\n\n**Delete ISSUE_TEMPLATE.md**\n\n\n[9bea1](https://github.com/JSQLParser/JSqlParser/commit/9bea1e3850e2078) Tobias *2019-08-09 06:31:24*\n\n**Update issue templates**\n\n\n[1182e](https://github.com/JSQLParser/JSqlParser/commit/1182e8b792beac4) Tobias *2019-08-09 06:31:05*\n\n**fixes #828**\n\n\n[5139f](https://github.com/JSQLParser/JSqlParser/commit/5139fb279960013) wumpz *2019-08-08 21:16:23*\n\n**fixes #828**\n\n\n[8d0de](https://github.com/JSQLParser/JSqlParser/commit/8d0dec177748bdf) wumpz *2019-08-08 21:11:19*\n\n****\n\n\n[c766e](https://github.com/JSQLParser/JSqlParser/commit/c766ebce151708c) wumpz *2019-08-07 23:24:17*\n\n****\n\n\n[1a732](https://github.com/JSQLParser/JSqlParser/commit/1a732025a27872d) wumpz *2019-08-07 23:22:23*\n\n****\n\n\n[5c530](https://github.com/JSQLParser/JSqlParser/commit/5c5303eb8997f03) wumpz *2019-08-07 18:20:34*\n\n**Updated test**\n\n\n[47457](https://github.com/JSQLParser/JSqlParser/commit/47457ed95a8e688) Tomer S *2019-08-05 20:14:23*\n\n**Fix issue of missing comma between joins in subjoin**\n\n\n[92db2](https://github.com/JSQLParser/JSqlParser/commit/92db2d81fbed39d) Tomer S *2019-08-05 19:43:18*\n\n**Fix issue of missing comma between joins in subjoin**\n\n\n[449c4](https://github.com/JSQLParser/JSqlParser/commit/449c4e89c2a9c6a) Tomer S *2019-08-05 19:32:41*\n\n****\n\n\n[e586f](https://github.com/JSQLParser/JSqlParser/commit/e586fa31e251221) t.warneke@gmx.net *2019-08-03 23:27:55*\n\n**Update latest version(1.4 => 2.1)**\n\n\n[5768e](https://github.com/JSQLParser/JSqlParser/commit/5768ea92f63c2ab) yidasanqian *2019-08-02 09:29:48*\n\n**added linkast to table**\n\n\n[9c5f5](https://github.com/JSQLParser/JSqlParser/commit/9c5f52f3dddb10c) wumpz *2019-08-01 06:44:58*\n\n**The duration part in INTERVAL expressions can contain a column and not only a constant - now supporting that use case**\n\n\n[5492f](https://github.com/JSQLParser/JSqlParser/commit/5492f5105a75781) Tomer S *2019-07-26 17:15:25*\n\n****\n\n\n[1314c](https://github.com/JSQLParser/JSqlParser/commit/1314cd0e7f05543) wumpz *2019-07-22 22:00:36*\n\n****\n\n\n[2b944](https://github.com/JSQLParser/JSqlParser/commit/2b944807b6e9058) wumpz *2019-07-22 21:17:54*\n\n****\n\n\n[86693](https://github.com/JSQLParser/JSqlParser/commit/86693e0bf34fbf9) wumpz *2019-07-21 21:33:59*\n\n**proof of correct parsing for #829**\n\n\n[12ff2](https://github.com/JSQLParser/JSqlParser/commit/12ff225b0afd16f) wumpz *2019-07-21 21:27:36*\n\n**fixes #830**\n\n\n[a416b](https://github.com/JSQLParser/JSqlParser/commit/a416b96e7576dd0) wumpz *2019-07-21 21:11:51*\n\n**fixes #830**\n\n\n[5fc7c](https://github.com/JSQLParser/JSqlParser/commit/5fc7ce8f6cfeef6) wumpz *2019-07-21 21:08:22*\n\n****\n\n\n[914ee](https://github.com/JSQLParser/JSqlParser/commit/914ee73b6de95ae) wumpz *2019-07-21 20:42:54*\n\n****\n\n\n[0b404](https://github.com/JSQLParser/JSqlParser/commit/0b404539ab6e985) wumpz *2019-07-21 20:42:38*\n\n**Update README.md**\n\n\n[216bd](https://github.com/JSQLParser/JSqlParser/commit/216bd3733cacfee) Tobias *2019-07-19 06:23:59*\n\n**Update README.md**\n\n\n[7077d](https://github.com/JSQLParser/JSqlParser/commit/7077d2148bf9e06) Tobias *2019-07-18 05:58:47*\n\n**Update README.md**\n\n\n[6148a](https://github.com/JSQLParser/JSqlParser/commit/6148a895113ed5b) Tobias *2019-07-18 05:57:14*\n\n**Update README.md**\n\n\n[f28b6](https://github.com/JSQLParser/JSqlParser/commit/f28b6252683d2d4) Tobias *2019-07-18 05:56:14*\n\n****\n\n\n[34014](https://github.com/JSQLParser/JSqlParser/commit/34014c2b9ac862f) wumpz *2019-07-17 22:46:55*\n\n**allow jdk 11 build**\n\n\n[73be3](https://github.com/JSQLParser/JSqlParser/commit/73be39017363a4e) wumpz *2019-07-17 22:36:28*\n\n**allow jdk 11 build**\n\n\n[2cf8e](https://github.com/JSQLParser/JSqlParser/commit/2cf8e15b8987458) wumpz *2019-07-17 22:35:51*\n\n**fixes limit as name for jdbc named parameters**\n\n\n[7034c](https://github.com/JSQLParser/JSqlParser/commit/7034cb10c6abe11) wumpz *2019-07-17 22:03:55*\n\n**Update README.md**\n\n\n[bf942](https://github.com/JSQLParser/JSqlParser/commit/bf942f92098f5cc) Tobias *2019-07-12 20:37:33*\n\n**Update FUNDING.yml**\n\n\n[448da](https://github.com/JSQLParser/JSqlParser/commit/448da80f820a270) Tobias *2019-07-12 20:33:32*\n\n**Create FUNDING.yml**\n\n\n[73c82](https://github.com/JSQLParser/JSqlParser/commit/73c82ad776db592) Tobias *2019-07-12 20:32:32*\n\n****\n\n\n[55f20](https://github.com/JSQLParser/JSqlParser/commit/55f20e07faa13ee) wumpz *2019-07-10 23:12:27*\n\n****\n\n\n[27552](https://github.com/JSQLParser/JSqlParser/commit/275522f53782871) wumpz *2019-07-10 21:43:51*\n\n**moved to java 8**\n\n\n[bfb8e](https://github.com/JSQLParser/JSqlParser/commit/bfb8e274f247350) wumpz *2019-07-09 22:41:18*\n\n****\n\n\n[39c6a](https://github.com/JSQLParser/JSqlParser/commit/39c6a4885f7bd20) wumpz *2019-07-09 22:31:35*\n\n****\n\n\n[6001f](https://github.com/JSQLParser/JSqlParser/commit/6001fdecada77fa) wumpz *2019-07-09 21:15:42*\n\n****\n\n\n[cfc3f](https://github.com/JSQLParser/JSqlParser/commit/cfc3f64850410bc) wumpz *2019-07-09 21:12:01*\n\n**Support default mode in full text search**\n\n\n[ecb54](https://github.com/JSQLParser/JSqlParser/commit/ecb5464ccb6bab4) Tomer S *2019-07-07 18:04:00*\n\n****\n\n\n[0022e](https://github.com/JSQLParser/JSqlParser/commit/0022ef4889f39de) wumpz *2019-07-07 12:11:44*\n\n****\n\n\n[694d0](https://github.com/JSQLParser/JSqlParser/commit/694d06ccf707494) wumpz *2019-07-04 21:51:34*\n\n**Add support for full text search (MATCH..AGAINST)**\n\n\n[6750a](https://github.com/JSQLParser/JSqlParser/commit/6750a5360084439) Tomer S *2019-07-04 21:23:25*\n\n****\n\n\n[c88f5](https://github.com/JSQLParser/JSqlParser/commit/c88f5ba08f4ee41) wumpz *2019-07-04 20:51:01*\n\n**Adding support for IS [NOT] TRUE/FALSE expressions**\n\n\n[00839](https://github.com/JSQLParser/JSqlParser/commit/0083971851df6d4) Tomer S *2019-07-02 21:39:16*\n\n**Adding support for the DIV operator**\n\n\n[c8bbc](https://github.com/JSQLParser/JSqlParser/commit/c8bbc0f7ecf198e) Tomer S *2019-07-02 19:28:47*\n\n**fixes #200 - was already fixed, introduced test case**\n\n\n[4d100](https://github.com/JSQLParser/JSqlParser/commit/4d100a7c011abda) wumpz *2019-07-02 12:43:46*\n\n**fixes #259 - was already fixed, introduced test case**\n\n\n[500ee](https://github.com/JSQLParser/JSqlParser/commit/500ee6e5010fe79) wumpz *2019-07-02 12:40:33*\n\n**fixes #262 - was already fixed, introduced test case**\n\n\n[dbdfb](https://github.com/JSQLParser/JSqlParser/commit/dbdfb4ea45121c9) wumpz *2019-07-02 12:36:31*\n\n**fixes #113**\n\n\n[cd16a](https://github.com/JSQLParser/JSqlParser/commit/cd16a6d911fe8b2) wumpz *2019-07-02 12:28:02*\n\n****\n\n\n[424c8](https://github.com/JSQLParser/JSqlParser/commit/424c81ce91887d5) wumpz *2019-06-30 19:55:27*\n\n****\n\n\n[d6949](https://github.com/JSQLParser/JSqlParser/commit/d6949999cd77c97) wumpz *2019-06-30 17:08:23*\n\n**Add support for STRAIGHT_JOIN**\n\n\n[89089](https://github.com/JSQLParser/JSqlParser/commit/890898806d2b6b3) Tomer S *2019-04-04 17:15:48*\n\n\n## jsqlparser-2.1 (2019-06-30)\n\n### Other changes\n\n**fixes #812**\n\n\n[38aad](https://github.com/JSQLParser/JSqlParser/commit/38aadee9b2a941b) wumpz *2019-06-25 23:07:07*\n\n**Update README.md**\n\n\n[4763d](https://github.com/JSQLParser/JSqlParser/commit/4763d455148bb75) Tobias *2019-06-25 12:28:29*\n\n**Update README.md**\n\n\n[334b5](https://github.com/JSQLParser/JSqlParser/commit/334b5498859733d) Tobias *2019-06-25 12:27:52*\n\n**Support KSQL's WINDOW**\n\n* Add support for KSQL&#x27;s WINDOW (HOPPING, TUMBLING and SESSION window) \n\n[ef911](https://github.com/JSQLParser/JSqlParser/commit/ef9119806146f25) Suyash Garg *2019-06-21 12:00:06*\n\n**downgraded javacc version to allow java 7 build**\n\n\n[6e7b9](https://github.com/JSQLParser/JSqlParser/commit/6e7b976d65d7eb6) wumpz *2019-06-19 07:33:53*\n\n**downgraded checkstyle version to allow java 7 build**\n\n\n[a9c29](https://github.com/JSQLParser/JSqlParser/commit/a9c29ffceab9e58) wumpz *2019-06-19 07:29:55*\n\n**Update README.md**\n\n\n[b5915](https://github.com/JSQLParser/JSqlParser/commit/b59151eae9d2ac5) Tobias *2019-06-16 22:11:11*\n\n****\n\n\n[afcc0](https://github.com/JSQLParser/JSqlParser/commit/afcc0a9b2063ade) wumpz *2019-06-16 21:49:09*\n\n****\n\n\n[1d203](https://github.com/JSQLParser/JSqlParser/commit/1d203850be1679c) wumpz *2019-06-16 21:06:13*\n\n**fixes #789**\n\n\n[cdf80](https://github.com/JSQLParser/JSqlParser/commit/cdf805f4028b801) wumpz *2019-06-16 21:02:47*\n\n**fixes #450**\n\n\n[83dba](https://github.com/JSQLParser/JSqlParser/commit/83dbac2d9841d21) wumpz *2019-06-13 22:11:29*\n\n**support postgresql create index syntax**\n\n\n[9d74c](https://github.com/JSQLParser/JSqlParser/commit/9d74c6da03976ea) theodore johnson *2019-06-13 22:02:11*\n\n**fixes #705**\n\n\n[9ce65](https://github.com/JSQLParser/JSqlParser/commit/9ce65cde0f25ae1) wumpz *2019-06-13 21:38:14*\n\n**site update**\n\n\n[89f20](https://github.com/JSQLParser/JSqlParser/commit/89f202a3062b30a) wumpz *2019-05-29 13:40:18*\n\n**fixes #798**\n\n\n[dd806](https://github.com/JSQLParser/JSqlParser/commit/dd806991c4283d0) wumpz *2019-05-24 21:09:13*\n\n**fixes #796**\n\n\n[aecc4](https://github.com/JSQLParser/JSqlParser/commit/aecc41442a8dfd3) wumpz *2019-05-18 21:00:13*\n\n**fixes #785**\n\n\n[f59f2](https://github.com/JSQLParser/JSqlParser/commit/f59f2b5c9b8e33e) wumpz *2019-05-04 22:54:28*\n\n**Fix #786 (#787)**\n\n\n[f2aba](https://github.com/JSQLParser/JSqlParser/commit/f2aba0b4ef018a1) Ryan J Murphy *2019-04-22 22:28:38*\n\n****\n\n\n[44ff9](https://github.com/JSQLParser/JSqlParser/commit/44ff9ed6bd0d39d) wumpz *2019-04-22 22:28:10*\n\n**fixes #773 added nextval as a valid object name**\n\n\n[94a2a](https://github.com/JSQLParser/JSqlParser/commit/94a2a40fa7f93a2) wumpz *2019-04-17 08:15:50*\n\n****\n\n\n[85a3e](https://github.com/JSQLParser/JSqlParser/commit/85a3e69fed2db1a) wumpz *2019-04-17 07:05:47*\n\n****\n\n\n[8d4b3](https://github.com/JSQLParser/JSqlParser/commit/8d4b32a28e3eac1) wumpz *2019-04-17 07:00:01*\n\n****\n\n\n[703a7](https://github.com/JSQLParser/JSqlParser/commit/703a7459a529343) wumpz *2019-04-17 06:43:37*\n\n**recreated \"old\" javadocs (without improving it)**\n\n\n[74e2a](https://github.com/JSQLParser/JSqlParser/commit/74e2a4b4498088e) wumpz *2019-04-17 06:19:27*\n\n**recreated \"old\" javadocs (without improving it)**\n\n\n[4fed7](https://github.com/JSQLParser/JSqlParser/commit/4fed7536c8036ed) wumpz *2019-04-16 07:59:20*\n\n**JavaDoc for Column#getTable (#782)**\n\n\n[4f500](https://github.com/JSQLParser/JSqlParser/commit/4f500a48572234a) Andrea Arcuri *2019-04-15 12:01:37*\n\n****\n\n\n[e2168](https://github.com/JSQLParser/JSqlParser/commit/e2168407d929c77) wumpz *2019-04-13 23:57:14*\n\n**fixes #777**\n\n\n[35a1c](https://github.com/JSQLParser/JSqlParser/commit/35a1c97f3609007) wumpz *2019-04-12 22:30:00*\n\n**tests #775**\n\n* removed some not flags from some classes \n\n[8dda4](https://github.com/JSQLParser/JSqlParser/commit/8dda4a60a8e558d) wumpz *2019-04-08 21:36:40*\n\n**tests #754**\n\n\n[97797](https://github.com/JSQLParser/JSqlParser/commit/97797425f635621) wumpz *2019-03-31 21:22:51*\n\n**fixes #770**\n\n\n[86ea6](https://github.com/JSQLParser/JSqlParser/commit/86ea6016636fe5b) wumpz *2019-03-28 22:19:33*\n\n****\n\n\n[f958f](https://github.com/JSQLParser/JSqlParser/commit/f958fa741dea3d0) wumpz *2019-03-20 22:41:16*\n\n****\n\n\n[b1da6](https://github.com/JSQLParser/JSqlParser/commit/b1da6e5225a2269) wumpz *2019-03-20 22:37:59*\n\n**fixes #766**\n\n\n[1bb5c](https://github.com/JSQLParser/JSqlParser/commit/1bb5c3d5823560d) wumpz *2019-03-20 22:05:30*\n\n**fixes #755 - corrected error introduced due to corrected ExpressionDeParser.**\n\n\n[0002c](https://github.com/JSQLParser/JSqlParser/commit/0002cb717106722) wumpz *2019-03-20 09:57:29*\n\n**fixes #755**\n\n\n[a6905](https://github.com/JSQLParser/JSqlParser/commit/a690558d1d8f19d) wumpz *2019-03-20 09:38:36*\n\n****\n\n\n[aff50](https://github.com/JSQLParser/JSqlParser/commit/aff505390efcb9c) wumpz *2019-03-20 06:46:44*\n\n****\n\n\n[7da90](https://github.com/JSQLParser/JSqlParser/commit/7da901adcb0370d) wumpz *2019-03-20 06:45:31*\n\n****\n\n\n[18a3c](https://github.com/JSQLParser/JSqlParser/commit/18a3c4acb6f84bb) wumpz *2019-03-20 06:35:17*\n\n**activated new checkstyle plugin only if used java is at least 1.8**\n\n\n[1b4e9](https://github.com/JSQLParser/JSqlParser/commit/1b4e9957ecd9daf) wumpz *2019-03-17 23:00:12*\n\n****\n\n\n[6ceb4](https://github.com/JSQLParser/JSqlParser/commit/6ceb4062d3ccb2c) wumpz *2019-03-16 22:56:17*\n\n**upgraded checkstyle due to security alert**\n\n\n[cb172](https://github.com/JSQLParser/JSqlParser/commit/cb1726e478d39e6) wumpz *2019-03-16 22:40:36*\n\n**Fixed typos in README.md (#760)**\n\n\n[67dce](https://github.com/JSQLParser/JSqlParser/commit/67dce2f40b4e484) alterdego *2019-03-14 12:20:26*\n\n**update README.md (#762)**\n\n* update latest version(1.4) \n\n[13d6a](https://github.com/JSQLParser/JSqlParser/commit/13d6a9fe183a5ab) r548 *2019-03-14 12:19:58*\n\n****\n\n\n[46323](https://github.com/JSQLParser/JSqlParser/commit/46323b4df4119e6) wumpz *2019-03-12 07:56:12*\n\n\n## jsqlparser-2.0 (2019-03-16)\n\n### Other changes\n\n****\n\n\n[526b9](https://github.com/JSQLParser/JSqlParser/commit/526b90b8d353a01) wumpz *2019-03-16 22:16:01*\n\n**corrected test**\n\n\n[4ad79](https://github.com/JSQLParser/JSqlParser/commit/4ad79d05b5306c2) wumpz *2019-03-04 18:46:57*\n\n**fixes #17**\n\n\n[1ef39](https://github.com/JSQLParser/JSqlParser/commit/1ef39301666c3e3) wumpz *2019-03-04 00:26:21*\n\n**refactored group by expressions into separate class, first step to support grouping sets**\n\n\n[82f3d](https://github.com/JSQLParser/JSqlParser/commit/82f3da8ce946d70) wumpz *2019-03-03 22:25:31*\n\n****\n\n\n[749ad](https://github.com/JSQLParser/JSqlParser/commit/749ad556d917a01) wumpz *2019-02-26 23:09:43*\n\n**Fixes 649 to add support for HOUR, MINUTE, SECOND date literals and support for identifiers as the interval parameter. (#756)**\n\n\n[cbcf0](https://github.com/JSQLParser/JSqlParser/commit/cbcf0a73d516bfc) thebiguno *2019-02-25 22:23:16*\n\n****\n\n\n[c85e7](https://github.com/JSQLParser/JSqlParser/commit/c85e79b3cd75119) wumpz *2019-02-24 22:17:37*\n\n****\n\n\n[0f9bb](https://github.com/JSQLParser/JSqlParser/commit/0f9bb4e6272f71b) wumpz *2019-02-24 19:59:06*\n\n**fixes #649**\n\n* and implemented ! for not and extended not expression \n\n[10e8e](https://github.com/JSQLParser/JSqlParser/commit/10e8e2568eb7711) wumpz *2019-02-23 23:32:38*\n\n****\n\n\n[15297](https://github.com/JSQLParser/JSqlParser/commit/15297868572dba9) wumpz *2019-02-20 23:30:16*\n\n****\n\n\n[12c05](https://github.com/JSQLParser/JSqlParser/commit/12c056451444678) wumpz *2019-02-20 23:20:35*\n\n****\n\n\n[14f92](https://github.com/JSQLParser/JSqlParser/commit/14f92b13cc4503f) wumpz *2019-02-20 23:05:20*\n\n**fixes #164**\n\n\n[8c057](https://github.com/JSQLParser/JSqlParser/commit/8c057ab735f0249) wumpz *2019-02-20 22:41:50*\n\n**fixes #169**\n\n\n[e1193](https://github.com/JSQLParser/JSqlParser/commit/e1193a63a6551ba) wumpz *2019-02-20 21:43:45*\n\n**fixes #479**\n\n\n[0b5f5](https://github.com/JSQLParser/JSqlParser/commit/0b5f586cf3f9250) wumpz *2019-02-19 22:29:58*\n\n**fixes #479**\n\n\n[b029b](https://github.com/JSQLParser/JSqlParser/commit/b029bb5860b3ed3) wumpz *2019-02-19 22:28:06*\n\n**Update README.md**\n\n\n[fa162](https://github.com/JSQLParser/JSqlParser/commit/fa1624165e80895) Tobias *2019-02-19 17:31:13*\n\n**Added support for DROP INDEX, ADD UNIQUE INDEX, ALGORITHM and USING (#752)**\n\n* Merge recent changes in the master from the master (#1) \n* changed license header to represent the projects dual license \n* changed license header to represent the projects dual license \n* changed license header to represent the projects dual license \n* changed license header to represent the projects dual license \n* Added support for comment(s) for column definitions in CREATE TABLE s… (#743) \n* Added support for comment(s) for column definitions in CREATE TABLE statements \n* Added support for comment(s) for column definitions in CREATE TABLE statements #2 \n* To increase code coverage \n* To increase code coverage #2 \n* Added support for &#x27;ALTER TABLE CHANGE COLUMN&#x27; (#741) \n* Added support for &#x27;ALTER TABLE CHANGE COLUMN oldName newName columnDefinition&#x27;. Please see https://dev.mysql.com/doc/refman/8.0/en/alter-table.html for reference. \n* Returned import ordering to avoid conflicts \n* Improved the tests somewhat \n* Now also test the getOptionalSpecifier() for both cases (null and not-null) \n* Expanded tests for ALTER TABLE ... CHANGE \n* implemented optimize for, fixes #348 \n* implemented optimize for, fixes #348 \n* Support for simple informix outer joins. (#745) \n* added support for simple informix outer joins \n* added some test code \n* added support for simple informix outer joins \n* added some test code \n* more testing for better code coverage \n* added support for simple informix outer joins \n* added some test code \n* more testing for better code coverage \n* fixes #747 \n* fixes #733 \n* fixes #707 \n* Update README.md \n* Update README.md \n* Fix handles the following cases: 1) DROP INDEX 2) ADD UNIQUE INDEX 3) ALGORITHM 4) USING &lt;index type&gt; \n\n[2830c](https://github.com/JSQLParser/JSqlParser/commit/2830c17ea226635) Prateek Gupta *2019-02-19 00:44:35*\n\n**fixes #753**\n\n\n[3209a](https://github.com/JSQLParser/JSqlParser/commit/3209a16c55c1976) wumpz *2019-02-19 00:35:14*\n\n**Update README.md**\n\n\n[4f74f](https://github.com/JSQLParser/JSqlParser/commit/4f74f6d110166a8) Tobias *2019-02-15 21:12:05*\n\n**Update README.md**\n\n\n[f9609](https://github.com/JSQLParser/JSqlParser/commit/f960991759ed604) Tobias *2019-02-15 21:07:41*\n\n**fixes #707**\n\n\n[a1c4f](https://github.com/JSQLParser/JSqlParser/commit/a1c4f4a7ddda62e) wumpz *2019-02-14 22:50:16*\n\n****\n\n\n[6c413](https://github.com/JSQLParser/JSqlParser/commit/6c413b404b1bd27) wumpz *2019-02-11 23:07:46*\n\n**fixes #733**\n\n\n[6da69](https://github.com/JSQLParser/JSqlParser/commit/6da696b496eb794) wumpz *2019-02-10 23:11:54*\n\n**fixes #747**\n\n\n[d3553](https://github.com/JSQLParser/JSqlParser/commit/d3553bc7f8c3b12) wumpz *2019-02-10 23:00:02*\n\n****\n\n\n[73305](https://github.com/JSQLParser/JSqlParser/commit/73305fe6a6efec1) wumpz *2019-02-10 22:55:01*\n\n****\n\n\n[f79f5](https://github.com/JSQLParser/JSqlParser/commit/f79f58d9f8f5c73) wumpz *2019-02-10 22:38:19*\n\n****\n\n\n[154cf](https://github.com/JSQLParser/JSqlParser/commit/154cf371d775b9b) wumpz *2019-02-10 21:54:45*\n\n****\n\n\n[80153](https://github.com/JSQLParser/JSqlParser/commit/80153dfdf60f9b4) wumpz *2019-02-10 21:14:10*\n\n****\n\n\n[04151](https://github.com/JSQLParser/JSqlParser/commit/0415140ecf58894) wumpz *2019-02-08 07:13:18*\n\n**Support for simple informix outer joins. (#745)**\n\n* added support for simple informix outer joins \n* added some test code \n* added support for simple informix outer joins \n* added some test code \n* more testing for better code coverage \n* added support for simple informix outer joins \n* added some test code \n* more testing for better code coverage \n\n[53e24](https://github.com/JSQLParser/JSqlParser/commit/53e247bffdae557) Kurt Schwitters *2019-02-08 05:52:51*\n\n****\n\n\n[1a3d2](https://github.com/JSQLParser/JSqlParser/commit/1a3d289238eec35) wumpz *2019-02-07 23:30:55*\n\n****\n\n\n[9ec7d](https://github.com/JSQLParser/JSqlParser/commit/9ec7d8572ca0424) wumpz *2019-02-07 23:30:00*\n\n****\n\n\n[63477](https://github.com/JSQLParser/JSqlParser/commit/6347776ad571d92) wumpz *2019-02-07 23:25:29*\n\n**implemented optimize for, fixes #348**\n\n\n[ff23d](https://github.com/JSQLParser/JSqlParser/commit/ff23dde74433355) wumpz *2019-02-07 23:21:22*\n\n**implemented optimize for, fixes #348**\n\n\n[4b0b5](https://github.com/JSQLParser/JSqlParser/commit/4b0b5cb044bc973) wumpz *2019-02-07 23:19:46*\n\n**Added support for 'ALTER TABLE CHANGE COLUMN' (#741)**\n\n* Added support for &#x27;ALTER TABLE CHANGE COLUMN oldName newName columnDefinition&#x27;. Please see https://dev.mysql.com/doc/refman/8.0/en/alter-table.html for reference. \n* Returned import ordering to avoid conflicts \n* Improved the tests somewhat \n* Now also test the getOptionalSpecifier() for both cases (null and not-null) \n* Expanded tests for ALTER TABLE ... CHANGE \n\n[bfb80](https://github.com/JSQLParser/JSqlParser/commit/bfb8023318c31b2) Simon *2019-02-07 14:49:28*\n\n**Added support for comment(s) for column definitions in CREATE TABLE s… (#743)**\n\n* Added support for comment(s) for column definitions in CREATE TABLE statements \n* Added support for comment(s) for column definitions in CREATE TABLE statements #2 \n* To increase code coverage \n* To increase code coverage #2 \n\n[07b86](https://github.com/JSQLParser/JSqlParser/commit/07b86761d0b4aee) Prateek Gupta *2019-02-07 07:09:26*\n\n**changed license header to represent the projects dual license**\n\n\n[b9023](https://github.com/JSQLParser/JSqlParser/commit/b90234f0fc39d34) wumpz *2019-02-06 20:53:15*\n\n**changed license header to represent the projects dual license**\n\n\n[2adec](https://github.com/JSQLParser/JSqlParser/commit/2adec6ad552f770) wumpz *2019-02-06 20:48:58*\n\n**changed license header to represent the projects dual license**\n\n\n[4ad99](https://github.com/JSQLParser/JSqlParser/commit/4ad996f778f043b) wumpz *2019-02-06 20:47:19*\n\n**changed license header to represent the projects dual license**\n\n\n[373c6](https://github.com/JSQLParser/JSqlParser/commit/373c6cb59734091) wumpz *2019-02-05 23:04:45*\n\n**integrated some additional AST - Nodes for InExpression and SimpleExpressionList**\n\n\n[cb0e0](https://github.com/JSQLParser/JSqlParser/commit/cb0e0b79564258a) wumpz *2019-02-04 01:17:35*\n\n****\n\n\n[4e0a7](https://github.com/JSQLParser/JSqlParser/commit/4e0a7326a9d9e9e) wumpz *2019-02-03 23:20:03*\n\n**case else corrected to allow conditions here as well**\n\n\n[4f7a1](https://github.com/JSQLParser/JSqlParser/commit/4f7a1537e7ba368) wumpz *2019-02-03 22:53:22*\n\n**refactored outer not from sqlconditions, regularconditions to condition**\n\n\n[aae36](https://github.com/JSQLParser/JSqlParser/commit/aae36da486303f8) wumpz *2019-02-03 21:07:08*\n\n**refactored outer not from sqlconditions, regularconditions to condition**\n\n\n[1956b](https://github.com/JSQLParser/JSqlParser/commit/1956b84395fcab9) wumpz *2019-02-03 20:57:41*\n\n**strange not problem**\n\n\n[ba3bf](https://github.com/JSQLParser/JSqlParser/commit/ba3bf2241c1021b) wumpz *2019-02-03 19:57:00*\n\n**named exec procedure parameters**\n\n\n[82b28](https://github.com/JSQLParser/JSqlParser/commit/82b287dae64ac43) wumpz *2019-02-01 23:51:28*\n\n**finished multi value set**\n\n\n[479ee](https://github.com/JSQLParser/JSqlParser/commit/479ee39d6efbb6d) wumpz *2019-01-27 00:37:33*\n\n**finished multi value set**\n\n\n[ba4b0](https://github.com/JSQLParser/JSqlParser/commit/ba4b0ccee2cf20a) wumpz *2019-01-27 00:35:17*\n\n**started multivalue set**\n\n\n[d991b](https://github.com/JSQLParser/JSqlParser/commit/d991bbe377418a1) wumpz *2019-01-26 00:44:59*\n\n**corrected typing error. Both licenses could not be applied at the same time.**\n\n\n[7cd18](https://github.com/JSQLParser/JSqlParser/commit/7cd189c326d3d84) wumpz *2019-01-23 23:22:12*\n\n**allow top keyword as column / table / alias name**\n\n* implemented tests \n\n[9e81e](https://github.com/JSQLParser/JSqlParser/commit/9e81e1592200952) wumpz *2019-01-23 23:00:12*\n\n**allow top keyword as column / table / alias name**\n\n* implemented tests \n\n[ed95e](https://github.com/JSQLParser/JSqlParser/commit/ed95e877802f46e) wumpz *2019-01-23 22:58:39*\n\n**implemented _utf8**\n\n\n[fe28e](https://github.com/JSQLParser/JSqlParser/commit/fe28e88d948dc7e) wumpz *2019-01-23 21:36:42*\n\n**implemented explain select**\n\n\n[e5c6f](https://github.com/JSQLParser/JSqlParser/commit/e5c6ff6fdf3d4b2) wumpz *2019-01-22 23:28:33*\n\n**implemented explain select**\n\n\n[fb45d](https://github.com/JSQLParser/JSqlParser/commit/fb45dd7c77ccff0) wumpz *2019-01-22 23:06:34*\n\n**Add support for casting to signed integer (#734)**\n\n\n[5b00a](https://github.com/JSQLParser/JSqlParser/commit/5b00ace4d49b731) tomershay *2019-01-21 22:58:57*\n\n**corrected stackoverflow while tables extraction**\n\n* updated readme \n\n[04db1](https://github.com/JSQLParser/JSqlParser/commit/04db124b85dea22) wumpz *2019-01-20 22:33:51*\n\n**implemented DescribeStatement, corrected TableNamesFinder, corrected corresponding interfaces and adapters, implemented tests.**\n\n\n[1c411](https://github.com/JSQLParser/JSqlParser/commit/1c411f490e91f16) wumpz *2019-01-20 22:24:47*\n\n**started describe**\n\n* some cleanup \n\n[25fa3](https://github.com/JSQLParser/JSqlParser/commit/25fa31153a9a2d0) wumpz *2019-01-20 21:48:12*\n\n\n## jsqlparser-1.4 (2019-01-09)\n\n### Other changes\n\n**Support Alter Table Add Unique Constraint (#708)**\n\n\n[a54ea](https://github.com/JSQLParser/JSqlParser/commit/a54ea143e7eeffe) Robert Scholte *2018-12-30 23:37:29*\n\n**corrected some failing tests**\n\n* included a regression test for oracle files \n\n[aa932](https://github.com/JSQLParser/JSqlParser/commit/aa932c4a28d8021) wumpz *2018-12-30 23:06:59*\n\n**Add 'SHOW COLUMNS FROM table' (#728)**\n\n\n[f1724](https://github.com/JSQLParser/JSqlParser/commit/f1724a468577935) Ohad Shai *2018-12-28 11:45:53*\n\n**Support Alter Table Drop Constraint If Exists (#709)**\n\n* Support Alter Table Drop Constraint If Exists \n* #709 add constraintIfExists flag \n\n[08fed](https://github.com/JSQLParser/JSqlParser/commit/08fedf752a3f99d) Robert Scholte *2018-12-13 07:14:10*\n\n**Support Alter Table Alter Column Type (#724)**\n\n\n[b3263](https://github.com/JSQLParser/JSqlParser/commit/b3263c8cbae9296) Robert Scholte *2018-12-13 07:13:12*\n\n**Support KSQL's WITHIN (#722)**\n\n* Implements WITHIN for KSQL windowed joins \n* Clean up \n* Improve test \n* Implements WITHIN ( before TimeUnit, after TimeUnit ) for KSQL \n* Also restricts TimeUnit to units accepted by KSQL \n* WITHIN should come before ON \n\n[ae665](https://github.com/JSQLParser/JSqlParser/commit/ae665e60655f45f) Lionel Montrieux *2018-12-11 21:53:07*\n\n**Add support for truncate table (#719)**\n\n\n[11be7](https://github.com/JSQLParser/JSqlParser/commit/11be71561824c36) Bartosz Firyn *2018-12-06 06:41:30*\n\n**fixes #718**\n\n\n[c0801](https://github.com/JSQLParser/JSqlParser/commit/c0801a742c57ea0) wumpz *2018-12-04 15:23:42*\n\n**added test for issue #716**\n\n\n[f06b1](https://github.com/JSQLParser/JSqlParser/commit/f06b19769b2eb2a) wumpz *2018-11-22 21:11:12*\n\n**REPLACE VIEW as a synonym to ALTER VIEW (#711)**\n\n\n[58d39](https://github.com/JSQLParser/JSqlParser/commit/58d3965914376bf) theodore johnson *2018-11-19 14:50:36*\n\n**Update README.md**\n\n\n[7b6cf](https://github.com/JSQLParser/JSqlParser/commit/7b6cff1222e1314) Tobias *2018-10-26 19:39:58*\n\n**Update README.md**\n\n\n[78ebf](https://github.com/JSQLParser/JSqlParser/commit/78ebf2093a98fb5) Tobias *2018-10-26 19:38:42*\n\n****\n\n\n[22c04](https://github.com/JSQLParser/JSqlParser/commit/22c04947e3834e6) wumpz *2018-10-26 11:12:37*\n\n**some cleaning up for pr #702**\n\n\n[b7754](https://github.com/JSQLParser/JSqlParser/commit/b7754e8003adec6) wumpz *2018-10-25 12:40:09*\n\n**support named parameters (#702)**\n\n\n[eacb1](https://github.com/JSQLParser/JSqlParser/commit/eacb161fe848237) theodore johnson *2018-10-25 10:52:41*\n\n**Added Oracle COMMENT statement (#685)**\n\n\n[e79cc](https://github.com/JSQLParser/JSqlParser/commit/e79ccc61b5bc658) hishidama *2018-10-25 10:40:33*\n\n**fix JSQLParser/JSqlParser #679 (#703)**\n\n\n[0e35e](https://github.com/JSQLParser/JSqlParser/commit/0e35e224766ebb7) softommy *2018-10-25 10:35:19*\n\n**fixes #694**\n\n\n[48544](https://github.com/JSQLParser/JSqlParser/commit/48544387cf2e3b5) wumpz *2018-10-18 20:50:58*\n\n**fixes #675**\n\n\n[d95e0](https://github.com/JSQLParser/JSqlParser/commit/d95e034f4c1b079) wumpz *2018-10-12 22:04:57*\n\n****\n\n\n[5aa63](https://github.com/JSQLParser/JSqlParser/commit/5aa6304559a5863) wumpz *2018-10-12 21:26:26*\n\n****\n\n\n[295c1](https://github.com/JSQLParser/JSqlParser/commit/295c1147e4ef513) wumpz *2018-10-10 21:02:12*\n\n****\n\n\n[a838f](https://github.com/JSQLParser/JSqlParser/commit/a838fec1051db27) wumpz *2018-10-06 23:43:29*\n\n**fixes #561**\n\n\n[f5982](https://github.com/JSQLParser/JSqlParser/commit/f598213f071d205) wumpz *2018-10-05 20:17:59*\n\n**fixes #561**\n\n\n[e170c](https://github.com/JSQLParser/JSqlParser/commit/e170c4f17dc9ad7) wumpz *2018-10-05 20:15:58*\n\n**integrated test for values query**\n\n\n[96499](https://github.com/JSQLParser/JSqlParser/commit/964991c4207c3bf) wumpz *2018-10-04 23:19:12*\n\n**integrated values statement**\n\n\n[c0327](https://github.com/JSQLParser/JSqlParser/commit/c032744b9e083e0) wumpz *2018-10-04 22:29:11*\n\n**fixes some lgtm alerts**\n\n\n[de8ad](https://github.com/JSQLParser/JSqlParser/commit/de8ad10a791705e) wumpz *2018-10-04 08:14:00*\n\n**fixes #684 (second)**\n\n\n[2742a](https://github.com/JSQLParser/JSqlParser/commit/2742a889c4c4f0b) wumpz *2018-10-03 19:40:47*\n\n**Update README.md**\n\n\n[77026](https://github.com/JSQLParser/JSqlParser/commit/770264da8955512) Tobias *2018-10-02 22:17:03*\n\n\n## jsqlparser-1.3 (2018-10-02)\n\n### Other changes\n\n**fixes #684**\n\n\n[a8b3e](https://github.com/JSQLParser/JSqlParser/commit/a8b3e71a88735dc) wumpz *2018-10-02 21:59:16*\n\n**fixes #682**\n\n\n[c2833](https://github.com/JSQLParser/JSqlParser/commit/c28331102e5754e) wumpz *2018-09-20 05:48:34*\n\n**Add LGTM.com code quality badges (#680)**\n\n\n[3f620](https://github.com/JSQLParser/JSqlParser/commit/3f620c9e2ddeeb4) Xavier RENE-CORAIL *2018-09-15 21:17:16*\n\n**fixes #670**\n\n* added testcase, corrected deparser \n\n[455c5](https://github.com/JSQLParser/JSqlParser/commit/455c5f50671eed9) wumpz *2018-09-10 15:38:54*\n\n**#670 (#671)**\n\n\n[3950b](https://github.com/JSQLParser/JSqlParser/commit/3950b1962f32043) mgierw *2018-09-10 15:21:40*\n\n**testcase for #670**\n\n\n[e6b9a](https://github.com/JSQLParser/JSqlParser/commit/e6b9afdb205bf2b) wumpz *2018-09-10 15:13:58*\n\n**fixes #676**\n\n\n[1786e](https://github.com/JSQLParser/JSqlParser/commit/1786e215474e8da) wumpz *2018-09-08 23:44:37*\n\n**fixes #676**\n\n\n[e32c5](https://github.com/JSQLParser/JSqlParser/commit/e32c502f91ed04a) wumpz *2018-09-08 22:12:46*\n\n****\n\n\n[26b2c](https://github.com/JSQLParser/JSqlParser/commit/26b2c11df4c4ac5) wumpz *2018-09-07 21:59:47*\n\n****\n\n\n[0b03c](https://github.com/JSQLParser/JSqlParser/commit/0b03c858b897713) wumpz *2018-09-07 21:48:03*\n\n**Update README.md (#667)**\n\n* Fix a couple typos/grammar issues \n\n[a822f](https://github.com/JSQLParser/JSqlParser/commit/a822fead1b21793) Kai Presler-Marshall *2018-08-29 13:11:41*\n\n**fixes #665**\n\n\n[b806e](https://github.com/JSQLParser/JSqlParser/commit/b806e9c1897a0f3) wumpz *2018-08-27 06:51:39*\n\n**fixes #367**\n\n\n[14791](https://github.com/JSQLParser/JSqlParser/commit/1479149af6a0c5c) wumpz *2018-08-25 23:12:32*\n\n**fixes #367**\n\n\n[f6abb](https://github.com/JSQLParser/JSqlParser/commit/f6abb9e7edec3f1) wumpz *2018-08-25 23:10:45*\n\n**fixes #367**\n\n\n[01bcb](https://github.com/JSQLParser/JSqlParser/commit/01bcbd5255a0ebd) wumpz *2018-08-25 23:07:14*\n\n****\n\n\n[1a90b](https://github.com/JSQLParser/JSqlParser/commit/1a90b16e215ac80) wumpz *2018-08-23 22:11:35*\n\n****\n\n\n[bfbfc](https://github.com/JSQLParser/JSqlParser/commit/bfbfc76eb006201) wumpz *2018-08-23 20:26:56*\n\n**make the CreateTable deparser use the accept/visit schema instead of the toString path (#663)**\n\n\n[68194](https://github.com/JSQLParser/JSqlParser/commit/68194bfd6bf57d1) theodore johnson *2018-08-23 04:21:10*\n\n**fixes #661**\n\n\n[44ea8](https://github.com/JSQLParser/JSqlParser/commit/44ea8bd33e01f62) wumpz *2018-08-17 06:22:30*\n\n**Parse Cloud Spanner raw string and byte prefixes (#659)**\n\n* #656 parse cloud spanner raw string and byte literals \n* #656 fixed raw byte string prefix \n* #656 fixed test case \n* fixed reported codacy issue \n\n[a57db](https://github.com/JSQLParser/JSqlParser/commit/a57db5d031a5229) Knut Olav Løite *2018-08-14 08:12:26*\n\n****\n\n\n[78ff2](https://github.com/JSQLParser/JSqlParser/commit/78ff2ad4bc7496b) wumpz *2018-08-14 08:08:17*\n\n****\n\n\n[1d138](https://github.com/JSQLParser/JSqlParser/commit/1d13897883c1448) wumpz *2018-07-26 19:58:18*\n\n****\n\n\n[62bfd](https://github.com/JSQLParser/JSqlParser/commit/62bfda765247f41) wumpz *2018-07-26 09:03:10*\n\n**fixes #643**\n\n\n[dc779](https://github.com/JSQLParser/JSqlParser/commit/dc779cae57b993e) wumpz *2018-07-23 14:57:23*\n\n**add test, fix style**\n\n\n[98f87](https://github.com/JSQLParser/JSqlParser/commit/98f873e244046ff) theodore johnson *2018-07-16 21:35:35*\n\n**added a test**\n\n\n[cfa7e](https://github.com/JSQLParser/JSqlParser/commit/cfa7e8986c98701) theodore johnson *2018-07-16 20:09:34*\n\n**support teradata sortcut for Select**\n\n\n[53c90](https://github.com/JSQLParser/JSqlParser/commit/53c90e9988aec49) theodore johnson *2018-07-11 18:46:52*\n\n**fix parsing and rendering of Truncate**\n\n\n[f126d](https://github.com/JSQLParser/JSqlParser/commit/f126d1575bc2ea5) theodore johnson *2018-07-11 17:56:14*\n\n**fixes #273**\n\n\n[6cd54](https://github.com/JSQLParser/JSqlParser/commit/6cd5481af400e20) wumpz *2018-07-06 08:44:03*\n\n**fixes #273**\n\n\n[12b4a](https://github.com/JSQLParser/JSqlParser/commit/12b4a1ecaa1090c) wumpz *2018-07-06 08:31:55*\n\n**fixes #573**\n\n\n[3a5a6](https://github.com/JSQLParser/JSqlParser/commit/3a5a625d15d7b30) wumpz *2018-07-06 07:01:12*\n\n**add support for && operator**\n\n\n[b59b4](https://github.com/JSQLParser/JSqlParser/commit/b59b48ec2e7e88a) Tomer S *2018-07-03 14:19:34*\n\n**Extract \"orderBy\" and \"Partition\" classes from AnalyticExpression.**\n\n\n[8da6e](https://github.com/JSQLParser/JSqlParser/commit/8da6e2e538ceea9) Assaf *2018-06-20 06:41:56*\n\n**Update README.md**\n\n\n[aff65](https://github.com/JSQLParser/JSqlParser/commit/aff651624e6fb48) Tobias *2018-06-18 06:22:15*\n\n**fixes #608**\n\n\n[d529c](https://github.com/JSQLParser/JSqlParser/commit/d529c82d24cbaba) wumpz *2018-06-17 09:57:15*\n\n**fixes #608**\n\n\n[3f5e3](https://github.com/JSQLParser/JSqlParser/commit/3f5e3c9805bd2fe) wumpz *2018-06-17 09:48:18*\n\n**fixes #163**\n\n\n[6d954](https://github.com/JSQLParser/JSqlParser/commit/6d95472726574cc) wumpz *2018-06-17 09:39:36*\n\n**fixes #163**\n\n\n[1db3f](https://github.com/JSQLParser/JSqlParser/commit/1db3ff5f9b5837b) wumpz *2018-06-17 09:33:54*\n\n**first try dotted**\n\n\n[2fab8](https://github.com/JSQLParser/JSqlParser/commit/2fab86081a56673) wumpz *2018-06-16 21:07:22*\n\n**fixes #620**\n\n\n[645d0](https://github.com/JSQLParser/JSqlParser/commit/645d06e0a31206b) wumpz *2018-06-08 23:22:16*\n\n**fixes #612**\n\n\n[36ee6](https://github.com/JSQLParser/JSqlParser/commit/36ee6c54c21965a) wumpz *2018-06-08 22:51:12*\n\n**fixes #612**\n\n\n[60473](https://github.com/JSQLParser/JSqlParser/commit/60473edf4efbd85) wumpz *2018-06-08 22:50:02*\n\n**Update README.md**\n\n\n[c5a0b](https://github.com/JSQLParser/JSqlParser/commit/c5a0b02b5f5c077) Tobias *2018-05-16 06:18:32*\n\n**Add javadoc badge**\n\n\n[9c2c9](https://github.com/JSQLParser/JSqlParser/commit/9c2c96772ba9b5c) Jeremy Lin *2018-05-15 20:32:26*\n\n**add maven-central badge (#616)**\n\n\n[4d67d](https://github.com/JSQLParser/JSqlParser/commit/4d67d10bbf9a033) Benedikt Waldvogel *2018-05-14 09:13:39*\n\n**fixes #614**\n\n\n[32c4d](https://github.com/JSQLParser/JSqlParser/commit/32c4d8a04244fd5) wumpz *2018-05-12 22:51:33*\n\n****\n\n\n[094cc](https://github.com/JSQLParser/JSqlParser/commit/094cc8082e40442) wumpz *2018-05-02 21:16:26*\n\n**introduced junit annotations**\n\n\n[d7c1e](https://github.com/JSQLParser/JSqlParser/commit/d7c1e438c8f0032) wumpz *2018-05-02 21:13:11*\n\n**fixes #611**\n\n\n[35cf1](https://github.com/JSQLParser/JSqlParser/commit/35cf1d8b1b80d29) wumpz *2018-05-02 21:08:22*\n\n**fixes #610**\n\n\n[5a60e](https://github.com/JSQLParser/JSqlParser/commit/5a60e1b57b7de4b) wumpz *2018-05-02 20:48:08*\n\n**fixes #610**\n\n\n[c5c26](https://github.com/JSQLParser/JSqlParser/commit/c5c26ca4d18092b) wumpz *2018-05-02 20:45:56*\n\n**Update README.md**\n\n\n[49b28](https://github.com/JSQLParser/JSqlParser/commit/49b2800bf7533e9) Tobias *2018-05-01 21:58:41*\n\n**Adding support for MySQL's SQL_NO_CACHE flag**\n\n\n[403e7](https://github.com/JSQLParser/JSqlParser/commit/403e722e6ee12b4) Tomer S *2018-03-25 09:03:23*\n\n\n## jsqlparser-1.2 (2018-05-01)\n\n### Other changes\n\n**fixes #605**\n\n\n[6e309](https://github.com/JSQLParser/JSqlParser/commit/6e3099c50352966) wumpz *2018-04-22 21:49:56*\n\n**fixes #604**\n\n\n[c8913](https://github.com/JSQLParser/JSqlParser/commit/c89139cfecb8e8d) wumpz *2018-04-20 22:38:48*\n\n**moved some jjt options from pom.xml to JSqlParserCC.jjt**\n\n\n[e9a6c](https://github.com/JSQLParser/JSqlParser/commit/e9a6cd3b79ed501) wumpz *2018-04-19 13:29:22*\n\n**fixes #603**\n\n\n[32930](https://github.com/JSQLParser/JSqlParser/commit/3293023e059de4d) wumpz *2018-04-19 08:35:31*\n\n**fixes #600**\n\n\n[e80ea](https://github.com/JSQLParser/JSqlParser/commit/e80ea6803591783) wumpz *2018-04-13 07:55:00*\n\n**change standard to jdk 8 with java 1.7 file compliance**\n\n\n[c28a5](https://github.com/JSQLParser/JSqlParser/commit/c28a549ef9895b4) wumpz *2018-04-13 07:46:19*\n\n**fixes #593**\n\n\n[65276](https://github.com/JSQLParser/JSqlParser/commit/652766264a2bb61) wumpz *2018-04-08 22:37:28*\n\n**fixes #597**\n\n\n[ac34e](https://github.com/JSQLParser/JSqlParser/commit/ac34efb0279a6af) wumpz *2018-04-08 21:17:12*\n\n****\n\n\n[4f63b](https://github.com/JSQLParser/JSqlParser/commit/4f63b1c085634f2) wumpz *2018-04-02 23:42:44*\n\n**fixes #592**\n\n\n[1b5d2](https://github.com/JSQLParser/JSqlParser/commit/1b5d24dcf7d6fc8) wumpz *2018-04-02 22:37:47*\n\n**- allow parenthesis around from item**\n\n* - allow whitespace between bars from concat \n\n[2cea3](https://github.com/JSQLParser/JSqlParser/commit/2cea3ee94d83447) wumpz *2018-03-29 22:25:48*\n\n**- allow parenthesis around from item**\n\n* - allow whitespace between bars from concat \n\n[dabb0](https://github.com/JSQLParser/JSqlParser/commit/dabb03f0094e4c7) wumpz *2018-03-29 22:24:33*\n\n****\n\n\n[7d366](https://github.com/JSQLParser/JSqlParser/commit/7d36615ee5b5837) wumpz *2018-03-23 07:26:30*\n\n**fixes #588**\n\n\n[a04cc](https://github.com/JSQLParser/JSqlParser/commit/a04ccb1c05204e5) wumpz *2018-03-17 00:40:36*\n\n**fixes #588**\n\n\n[801cd](https://github.com/JSQLParser/JSqlParser/commit/801cd84c8dbb33f) wumpz *2018-03-17 00:40:06*\n\n**JSQLPARSER-584: adds support for MySQL (a,b,...)OP(c,d,...) expression (#585)**\n\n* JSQLPARSER-584: adds support for MySQL (a,b,...)OP(c,d,...) expression \n* JSQLPARSER-584: adds some tests and rename MySQLValueListExpression to ValueListExpression \n\n[2c272](https://github.com/JSQLParser/JSqlParser/commit/2c272f440995b2c) Adrien Lesur *2018-03-05 23:08:55*\n\n**checked #266**\n\n\n[72059](https://github.com/JSQLParser/JSqlParser/commit/7205906f58be21c) wumpz *2018-02-14 08:43:51*\n\n**fixes #583**\n\n\n[76ed9](https://github.com/JSQLParser/JSqlParser/commit/76ed995ebef6bd1) wumpz *2018-02-14 08:37:38*\n\n**fixes #583**\n\n\n[3768b](https://github.com/JSQLParser/JSqlParser/commit/3768b8d10789c70) wumpz *2018-02-14 08:36:26*\n\n**tested issue 582**\n\n\n[84459](https://github.com/JSQLParser/JSqlParser/commit/84459536a13fa4b) wumpz *2018-02-09 07:18:06*\n\n**Create ISSUE_TEMPLATE.md**\n\n\n[d5ec2](https://github.com/JSQLParser/JSqlParser/commit/d5ec2fe18e8f63b) Tobias *2018-02-08 07:12:19*\n\n**removed unneeded dependencies**\n\n\n[445b1](https://github.com/JSQLParser/JSqlParser/commit/445b1a517e651de) wumpz *2018-02-07 10:46:12*\n\n****\n\n\n[feaea](https://github.com/JSQLParser/JSqlParser/commit/feaeaeb2c63b88c) wumpz *2018-02-02 12:46:17*\n\n****\n\n\n[18d01](https://github.com/JSQLParser/JSqlParser/commit/18d01811c592581) wumpz *2018-02-02 12:45:51*\n\n**Fix issue #563: subjoin allows only one inner join, this should be a … (#564)**\n\n* Fix issue #563: subjoin allows only one inner join, this should be a list \n* Fix failing Oracle tests because of confusion between subjoin and subselect. \n\n[8456a](https://github.com/JSQLParser/JSqlParser/commit/8456acf7f228a46) Frits Jalvingh *2018-02-02 10:40:01*\n\n**fixes #320 (#576)**\n\n* fixes #320 \n\n[e6451](https://github.com/JSQLParser/JSqlParser/commit/e645193140f4271) Taner Mansur *2018-02-01 14:55:37*\n\n****\n\n\n[21e8b](https://github.com/JSQLParser/JSqlParser/commit/21e8bc4c549ea75) wumpz *2018-02-01 14:54:12*\n\n**fixes #566,#438,#267**\n\n\n[bf951](https://github.com/JSQLParser/JSqlParser/commit/bf9515418475372) wumpz *2018-01-30 14:10:17*\n\n**fixes #566,#438,#267**\n\n\n[ccbe9](https://github.com/JSQLParser/JSqlParser/commit/ccbe9ad0be27d78) wumpz *2018-01-30 14:09:12*\n\n**tests #572**\n\n\n[5d609](https://github.com/JSQLParser/JSqlParser/commit/5d609ef208c6803) wumpz *2018-01-29 15:43:04*\n\n**corrected generics type**\n\n\n[ed1a2](https://github.com/JSQLParser/JSqlParser/commit/ed1a297094cd85c) wumpz *2018-01-22 07:34:55*\n\n**fixes #567**\n\n\n[0d4ae](https://github.com/JSQLParser/JSqlParser/commit/0d4aed3aadce638) wumpz *2018-01-12 07:36:54*\n\n**removed \"removed\" project bewa**\n\n\n[dec98](https://github.com/JSQLParser/JSqlParser/commit/dec98caa839b0d6) wumpz *2018-01-08 07:44:24*\n\n**fixes #338**\n\n\n[0e571](https://github.com/JSQLParser/JSqlParser/commit/0e571d14aed151c) wumpz *2018-01-05 23:29:00*\n\n**fixes #545**\n\n\n[ab7e2](https://github.com/JSQLParser/JSqlParser/commit/ab7e29bba316f0d) wumpz *2018-01-05 23:16:29*\n\n**fixes #462**\n\n\n[83844](https://github.com/JSQLParser/JSqlParser/commit/838449cb5163f19) wumpz *2017-12-28 00:50:29*\n\n**fixes #462**\n\n\n[bc005](https://github.com/JSQLParser/JSqlParser/commit/bc005f89fd7d091) wumpz *2017-12-28 00:47:37*\n\n**Update README.md**\n\n\n[5871c](https://github.com/JSQLParser/JSqlParser/commit/5871c573f69696d) Tobias *2017-12-27 20:04:29*\n\n**Update README.md**\n\n\n[dd6bb](https://github.com/JSQLParser/JSqlParser/commit/dd6bbef26420dd0) Tobias *2017-12-07 10:25:11*\n\n**fixes #554**\n\n\n[4ce98](https://github.com/JSQLParser/JSqlParser/commit/4ce98e492ce9d17) wumpz *2017-12-07 08:55:52*\n\n****\n\n\n[ee723](https://github.com/JSQLParser/JSqlParser/commit/ee723d50b08a54d) wumpz *2017-12-04 08:36:46*\n\n**fixes #543**\n\n\n[bdc20](https://github.com/JSQLParser/JSqlParser/commit/bdc20ea7688c8c4) wumpz *2017-12-04 08:35:07*\n\n**fixes #551**\n\n\n[a25fb](https://github.com/JSQLParser/JSqlParser/commit/a25fb7cb3ba02c1) wumpz *2017-12-04 08:14:06*\n\n**made some modifications to rlike fix**\n\n\n[f0ffe](https://github.com/JSQLParser/JSqlParser/commit/f0ffe4c53edbcaa) wumpz *2017-11-16 22:29:53*\n\n**Added support for RLIKE expressions (#544)**\n\n* RLIKE is a synonym of REGEXP, therefore should be treated the same. \n\n[8a950](https://github.com/JSQLParser/JSqlParser/commit/8a950b3e09dce06) sh-tomer *2017-11-16 22:10:51*\n\n**jdk 1.7**\n\n\n[8d4f2](https://github.com/JSQLParser/JSqlParser/commit/8d4f25c49c3975d) wumpz *2017-11-07 09:43:35*\n\n**modern template included**\n\n\n[9ea8e](https://github.com/JSQLParser/JSqlParser/commit/9ea8e4c3f4e3ab7) wumpz *2017-11-07 07:31:58*\n\n**fixes #540,#526**\n\n\n[8bc23](https://github.com/JSQLParser/JSqlParser/commit/8bc236e25ddbe8d) wumpz *2017-11-03 07:21:40*\n\n**fixes #540,#526**\n\n\n[ab868](https://github.com/JSQLParser/JSqlParser/commit/ab868a627a6b72f) wumpz *2017-11-03 07:18:39*\n\n**corrected a lookahead issue**\n\n\n[a2f81](https://github.com/JSQLParser/JSqlParser/commit/a2f81f3a299145a) wumpz *2017-10-31 22:37:41*\n\n**Add ability to support \"NOT LIKE ...\" expressions (#539)**\n\n* The parser is able to parse expressions such as &quot;a NOT LIKE &#x27;%pattern%&#x27;&quot;, but is not able to parse expressions where the not is before the entire expression. For example: &quot;NOT a LIKE &#x27;%pattern%&#x27;. \n* When parsing the latter, the error is: \n* Caused by: net.sf.jsqlparser.parser.ParseException: Encountered &quot; &quot;LIKE&quot; &quot;LIKE &quot;&quot; at line 1, column 32. \n* Was expecting one of: ... \n* The reason this is important is both because these syntaxes are both valid, and also because the deparser uses the second method. \n* Therefore, if you parse a query with the first type of expression, then deparse it and parse again, you&#x27;ll get the same error. \n\n[daea3](https://github.com/JSQLParser/JSqlParser/commit/daea33e73aa05c6) sh-tomer *2017-10-31 20:27:50*\n\n****\n\n\n[452ba](https://github.com/JSQLParser/JSqlParser/commit/452baffb2af8c21) wumpz *2017-10-29 23:20:57*\n\n****\n\n\n[14523](https://github.com/JSQLParser/JSqlParser/commit/1452360f9cca7aa) wumpz *2017-10-29 23:08:39*\n\n****\n\n\n[7c90a](https://github.com/JSQLParser/JSqlParser/commit/7c90a24bdf72994) wumpz *2017-10-29 22:59:21*\n\n**Linking structures to their AST nodes to have access to their positions (#534)**\n\n* Linking several structures to their AST nodes to have access to their positions \n* This far there were only 3 types of structures linked to their AST nodes. Now adding some more expressions and literals to their AST node to have access to their token&#x27;s position in the query. \n* Added missing parts in JSQqlParserCC.jjt for AST linking to work \n* Added missing parts in JSQqlParserCC.jjt to make sure all relevant code is created to generate and link AST nodes to the relevant structures. \n\n[514f2](https://github.com/JSQLParser/JSqlParser/commit/514f2588af97345) sh-tomer *2017-10-29 12:39:56*\n\n**add debug note (#531)**\n\n* added a link to the visualize parsing section to have a visible debug mode (so users that create an issue can try to get us better output) \n\n[b1abc](https://github.com/JSQLParser/JSqlParser/commit/b1abc6ff39e9c2a) Jan Monterrubio *2017-10-25 06:21:26*\n\n**fixes #525 (#530)**\n\n* fixes #525 \n* Simply unit test. \n\n[1a1a1](https://github.com/JSQLParser/JSqlParser/commit/1a1a1aa53866787) Linyu Chen *2017-10-24 05:30:39*\n\n**simplified tests for SQL_CALC_FOUND_ROWS**\n\n\n[e23d4](https://github.com/JSQLParser/JSqlParser/commit/e23d4bc09e5f6e4) wumpz *2017-10-20 07:32:58*\n\n**Implements #509 (#504)**\n\n* Supporting MySql hit SQL_CALC_FOUND_ROWS for selecting row count. \n* Supporting MySql hit SQL_CALC_FOUND_ROWS for selecting row count. - refactoring \n* Supporting MySql hit SQL_CALC_FOUND_ROWS for selecting row count. - missing copyright.ˆ \n* Supporting MySql hit SQL_CALC_FOUND_ROWS for selecting row count. - Modify field type to boolean for prevent memory consumption by creating object and try assertSqlCanBeParsedAndDeparsed on unit test. \n\n[3e163](https://github.com/JSQLParser/JSqlParser/commit/3e16345815e45b5) Yoon Kyong Sik *2017-10-20 07:27:48*\n\n**fixes #522**\n\n\n[45ac8](https://github.com/JSQLParser/JSqlParser/commit/45ac8c8a2bcff54) wumpz *2017-10-12 21:27:57*\n\n**fixes #522**\n\n\n[2c69c](https://github.com/JSQLParser/JSqlParser/commit/2c69cc65f8bfd32) wumpz *2017-10-12 21:22:26*\n\n**fixes #510**\n\n\n[f64ad](https://github.com/JSQLParser/JSqlParser/commit/f64ad89eec4ea53) wumpz *2017-10-09 23:51:46*\n\n****\n\n\n[1a771](https://github.com/JSQLParser/JSqlParser/commit/1a77106df128893) wumpz *2017-10-06 08:58:01*\n\n**fixes #508 including precedence**\n\n\n[8037a](https://github.com/JSQLParser/JSqlParser/commit/8037af621f32f0a) wumpz *2017-10-06 08:36:57*\n\n**fixes #519**\n\n* fixes #520 \n\n[27217](https://github.com/JSQLParser/JSqlParser/commit/272177a37b9ee81) wumpz *2017-10-06 08:24:04*\n\n**transformed primary expression and sign parsing**\n\n\n[51fcd](https://github.com/JSQLParser/JSqlParser/commit/51fcdea9f92c1ce) wumpz *2017-10-06 07:11:58*\n\n**corrected token definition order**\n\n\n[64ce9](https://github.com/JSQLParser/JSqlParser/commit/64ce9ff2986d492) wumpz *2017-10-06 07:01:35*\n\n**waiting for https://github.com/javacc/javacc/issues/28**\n\n\n[704e6](https://github.com/JSQLParser/JSqlParser/commit/704e6c84fb66150) wumpz *2017-10-02 09:14:01*\n\n**Fix test case**\n\n\n[b2bb2](https://github.com/JSQLParser/JSqlParser/commit/b2bb2431c4dfae0) Nathaniel Camomot *2017-09-27 08:10:08*\n\n**Fix for some cases where TablNamesFinder can't find tables**\n\n\n[395c3](https://github.com/JSQLParser/JSqlParser/commit/395c3b0049cd09f) Nathaniel Camomot *2017-09-27 06:21:21*\n\n**removed oraclejdk7 travis build due to https://github.com/travis-ci/travis-ci/issues/7964**\n\n\n[812f9](https://github.com/JSQLParser/JSqlParser/commit/812f98fff951c4e) wumpz *2017-09-24 09:55:31*\n\n****\n\n\n[96b5d](https://github.com/JSQLParser/JSqlParser/commit/96b5d9f26ec7310) wumpz *2017-09-24 09:48:35*\n\n****\n\n\n[b847e](https://github.com/JSQLParser/JSqlParser/commit/b847e85c0dba19f) wumpz *2017-09-23 22:40:30*\n\n**Create LICENSE_LGPLV21**\n\n\n[d2c87](https://github.com/JSQLParser/JSqlParser/commit/d2c87dac67436af) Tobias *2017-09-23 22:29:45*\n\n**Create LICENSE_APACHEV2**\n\n\n[f9c1a](https://github.com/JSQLParser/JSqlParser/commit/f9c1a9f7fb91703) Tobias *2017-09-23 22:29:09*\n\n**fixes #515**\n\n\n[c4b36](https://github.com/JSQLParser/JSqlParser/commit/c4b360e14a06201) wumpz *2017-09-23 22:20:51*\n\n**fixes #515**\n\n\n[1afe7](https://github.com/JSQLParser/JSqlParser/commit/1afe7e6a9931f7e) wumpz *2017-09-23 22:18:35*\n\n**fixes #515**\n\n\n[8388f](https://github.com/JSQLParser/JSqlParser/commit/8388f1e48355b4f) wumpz *2017-09-23 22:17:04*\n\n**Update README.md**\n\n\n[3f734](https://github.com/JSQLParser/JSqlParser/commit/3f734f130da0a66) Tobias *2017-09-23 21:38:51*\n\n**fixes #514**\n\n\n[8a459](https://github.com/JSQLParser/JSqlParser/commit/8a459ce9894ec36) wumpz *2017-09-23 21:32:10*\n\n**fixes #514**\n\n\n[3e846](https://github.com/JSQLParser/JSqlParser/commit/3e84605a7a87948) wumpz *2017-09-23 21:29:52*\n\n**merge of within_group and analytic**\n\n\n[26fab](https://github.com/JSQLParser/JSqlParser/commit/26faba8040636e8) wumpz *2017-09-23 21:24:18*\n\n****\n\n\n[c5a47](https://github.com/JSQLParser/JSqlParser/commit/c5a471f926c1d85) wumpz *2017-09-22 12:29:44*\n\n**#fixes 480**\n\n\n[10352](https://github.com/JSQLParser/JSqlParser/commit/10352328d3d52f3) wumpz *2017-09-12 21:59:08*\n\n**#fixes 480**\n\n\n[e60fa](https://github.com/JSQLParser/JSqlParser/commit/e60fa8cd305d154) wumpz *2017-09-12 21:58:39*\n\n**fixes #512**\n\n\n[07a14](https://github.com/JSQLParser/JSqlParser/commit/07a14dc892d6003) wumpz *2017-09-07 22:20:01*\n\n**fixes #505**\n\n\n[ef55f](https://github.com/JSQLParser/JSqlParser/commit/ef55ffba8b596aa) wumpz *2017-08-28 08:13:14*\n\n**fixes #502**\n\n\n[6a440](https://github.com/JSQLParser/JSqlParser/commit/6a440ba583955b1) wumpz *2017-08-26 14:18:07*\n\n**fixes #502**\n\n\n[41ea8](https://github.com/JSQLParser/JSqlParser/commit/41ea83d2757adee) wumpz *2017-08-26 14:14:13*\n\n**fixes #484**\n\n\n[1a6f9](https://github.com/JSQLParser/JSqlParser/commit/1a6f9143ef491dd) wumpz *2017-08-23 20:41:06*\n\n**fixes #484**\n\n\n[8f9b6](https://github.com/JSQLParser/JSqlParser/commit/8f9b62705ae094e) wumpz *2017-08-23 20:40:26*\n\n**replace support multiple values**\n\n\n[93598](https://github.com/JSQLParser/JSqlParser/commit/93598bbe86aaa92) wanghai *2017-08-21 09:15:27*\n\n**fixed #491**\n\n\n[147ec](https://github.com/JSQLParser/JSqlParser/commit/147ec4887639700) wumpz *2017-08-16 15:47:01*\n\n**fixed #491**\n\n\n[24f23](https://github.com/JSQLParser/JSqlParser/commit/24f232c08edb86c) wumpz *2017-08-16 15:45:55*\n\n**checked issue #482**\n\n\n[71692](https://github.com/JSQLParser/JSqlParser/commit/71692c5c6f85f0f) wumpz *2017-08-07 13:33:12*\n\n**fixes #485**\n\n\n[64bc5](https://github.com/JSQLParser/JSqlParser/commit/64bc5e05d8086b4) wumpz *2017-08-03 05:57:10*\n\n**fix issue #424 (INSERT with SET) (#481)**\n\n* update insert with set language \n* update insert with set \n* update insert with set \n* update insert test \n* add removed lines \n\n[ca653](https://github.com/JSQLParser/JSqlParser/commit/ca6538a04dd7969) messfish *2017-07-28 06:23:33*\n\n**fixes #456**\n\n\n[9c2cc](https://github.com/JSQLParser/JSqlParser/commit/9c2cc2c823b3d1e) wumpz *2017-07-27 11:14:26*\n\n**introduced partial / nonpartial parse for CCJSqlParserUtil methods**\n\n\n[6b452](https://github.com/JSQLParser/JSqlParser/commit/6b452183f084652) wumpz *2017-07-27 05:47:13*\n\n**fixes #473**\n\n\n[0aa22](https://github.com/JSQLParser/JSqlParser/commit/0aa229d3df996f6) wumpz *2017-07-18 06:24:20*\n\n**Update README.md**\n\n\n[58c42](https://github.com/JSQLParser/JSqlParser/commit/58c42bcfbf717ee) Tobias *2017-06-29 21:37:30*\n\n**Update README.md**\n\n\n[d235c](https://github.com/JSQLParser/JSqlParser/commit/d235ca3971a9a6e) Tobias *2017-06-29 21:34:47*\n\n\n## jsqlparser-1.1 (2017-06-29)\n\n### Other changes\n\n**fixes #468**\n\n\n[6cb45](https://github.com/JSQLParser/JSqlParser/commit/6cb459d747901ea) wumpz *2017-06-28 08:50:50*\n\n****\n\n\n[fb64e](https://github.com/JSQLParser/JSqlParser/commit/fb64e3295e91bca) wumpz *2017-06-11 21:50:53*\n\n**Add Upsert Grammer (#460)**\n\n* Add files via upload \n* Add files via upload \n* Add files via upload \n* Add files via upload \n* Add files via upload \n* Add test for de parser \n* Add files via upload \n* Add files via upload \n* Add files via upload \n* Add files via upload \n* Add files via upload \n* Add files via upload \n* Add files via upload \n* Add files via upload \n* Add files via upload \n\n[aaeb8](https://github.com/JSQLParser/JSqlParser/commit/aaeb8dfeb0c2a4e) messfish *2017-06-11 18:48:53*\n\n**introduced linking between Function and ASTNode**\n\n\n[3e75c](https://github.com/JSQLParser/JSqlParser/commit/3e75c68c4bf769e) wumpz *2017-06-09 22:34:23*\n\n**introduced linking between Function and ASTNode**\n\n\n[e96f4](https://github.com/JSQLParser/JSqlParser/commit/e96f48534ca3103) wumpz *2017-06-09 22:32:16*\n\n**fixes #457**\n\n\n[2ae5e](https://github.com/JSQLParser/JSqlParser/commit/2ae5e76d69b1cbf) wumpz *2017-05-26 21:34:35*\n\n****\n\n\n[e4ef6](https://github.com/JSQLParser/JSqlParser/commit/e4ef6e231282b62) wumpz *2017-05-23 07:32:52*\n\n**Fix issue #442 (#451)**\n\n* Fix issue #442 for delete statements \n* Fix issue #442 for insert statements \n* Mock only when necessary \n* E.g., interfaces, behavior needs to be verified, etc. \n* Prefer the first style of testing \n* As discussed in issue #442 \n* Fix issue #442 for replace statements \n* Improve readability of issue #442 tests \n* Inject SelectDeParser as well \n* As discussed in issue #442. \n* Fix issue #442 for select statements \n* Fix issue #442 for update statements \n* Fix issue #442 for execute statements \n* Fix issue #442 for set statements \n* Fix PR code review issue \n* https://www.codacy.com/app/wumpz/JSqlParser/file/6682733346/issues/source?bid&#x3D;4162857&amp;fileBranchId&#x3D;4580866#l48 \n* Skip PMD check for asserts in tests using Mockito \n* As agreed upon in the discussion in PR #451. \n* Use correct PMD check name \n\n[9d680](https://github.com/JSQLParser/JSqlParser/commit/9d680a6ec4b9f07) chrycheng *2017-05-22 07:13:41*\n\n**fixes #430**\n\n\n[585cb](https://github.com/JSQLParser/JSqlParser/commit/585cbbd1377632b) wumpz *2017-05-16 22:04:19*\n\n**Fix issue #446 (#447)**\n\n* Test current behavior of ExecuteDeParser \n* Fix issue #446 \n\n[275fb](https://github.com/JSQLParser/JSqlParser/commit/275fbbe87fa0ada) chrycheng *2017-05-16 20:46:29*\n\n**fixes #449**\n\n\n[fe6da](https://github.com/JSQLParser/JSqlParser/commit/fe6dafea19fa236) wumpz *2017-05-16 14:12:50*\n\n**introduced test for 437**\n\n\n[3e740](https://github.com/JSQLParser/JSqlParser/commit/3e740100498aa22) wumpz *2017-05-12 19:43:14*\n\n**test issue 445**\n\n\n[fce59](https://github.com/JSQLParser/JSqlParser/commit/fce593dcf85c43e) wumpz *2017-05-11 08:37:49*\n\n****\n\n\n[1fbf6](https://github.com/JSQLParser/JSqlParser/commit/1fbf6c5bde81b41) wumpz *2017-05-08 12:32:25*\n\n**updated readme**\n\n\n[1dabc](https://github.com/JSQLParser/JSqlParser/commit/1dabcbc56f9b158) wumpz *2017-05-07 20:37:31*\n\n**some minor changes**\n\n\n[050b8](https://github.com/JSQLParser/JSqlParser/commit/050b8ba6434630d) wumpz *2017-05-07 20:35:15*\n\n**conversion to CNF (#434)**\n\n* Add files via upload \n* Create foo \n* All the files needed for the CNF conversion \n* Delete foo \n* Create foo \n* Test cases for the CNF conversion \n* Delete foo \n* Add files via upload \n* Add files via upload \n* change some public methods to private \n* Delete CNFConverter.java \n* Delete CloneHelper.java \n* Delete MultiAndExpression.java \n* Delete MultiOrExpression.java \n* Delete MultipleExpression.java \n* Create foo \n* Add files via upload \n* Delete CNFTest.java \n* Delete StepLastHelper.java \n* Create foo \n* Add files via upload \n* Delete foo \n* Delete foo \n* Add files via upload \n* Add files via upload \n* Delete CNFConverter.java \n* Delete CloneHelper.java \n* Delete MultiAndExpression.java \n* Delete MultiOrExpression.java \n* Delete MultipleExpression.java \n* Create foo \n* Add files via upload \n* Delete foo \n* Delete CNFTest.java \n* Create foo \n* Add files via upload \n* Delete foo \n* Add files via upload \n* Add files via upload \n\n[afe10](https://github.com/JSQLParser/JSqlParser/commit/afe1011bdd64696) messfish *2017-05-07 20:21:00*\n\n****\n\n\n[56497](https://github.com/JSQLParser/JSqlParser/commit/56497af552c53a4) wumpz *2017-05-02 06:06:33*\n\n**corrected bug within RelObjectNameExt processing**\n\n\n[7b2b0](https://github.com/JSQLParser/JSqlParser/commit/7b2b0f649b1702a) wumpz *2017-05-02 06:00:44*\n\n**Update README.md**\n\n\n[2c0f2](https://github.com/JSQLParser/JSqlParser/commit/2c0f2ff0f6c7814) Tobias *2017-04-28 07:37:09*\n\n**Update README.md**\n\n\n[80c98](https://github.com/JSQLParser/JSqlParser/commit/80c98055bc969a0) Tobias *2017-04-28 07:35:42*\n\n****\n\n\n[59310](https://github.com/JSQLParser/JSqlParser/commit/5931045d807559e) wumpz *2017-04-24 13:25:21*\n\n**Introduce support for mysql index hints (fixing issue #374) (#429)**\n\n* Introduce support for mysql index hints (fixing issue #374) \n* Fix checkstyle errors \n* -Converted indent tabs to spaces \n* -Added missing {} on single-line if statement \n\n[6db15](https://github.com/JSQLParser/JSqlParser/commit/6db15d2c6218d06) Joey Mart *2017-04-18 06:22:25*\n\n**#425 ADD CONSTRAINT also support state such as DEFERRABLE, VALIDATE... (#426)**\n\n\n[f1113](https://github.com/JSQLParser/JSqlParser/commit/f11133c0bdd7a6b) Christophe Moine *2017-04-17 23:40:45*\n\n**Addressing #427 (#428)**\n\n* updating readme with Maven requirements \n* removing ticks \n\n[0fddc](https://github.com/JSQLParser/JSqlParser/commit/0fddc73e2eee1b2) AnEmortalKid *2017-04-17 23:39:05*\n\n**going back to checkstyle 6.x due to java7 incompatibilities**\n\n\n[564ac](https://github.com/JSQLParser/JSqlParser/commit/564acc288fa0294) wumpz *2017-04-17 23:27:10*\n\n**Update README.md**\n\n\n[30b09](https://github.com/JSQLParser/JSqlParser/commit/30b0924742068f0) Tobias *2017-04-17 23:09:06*\n\n**Update README.md**\n\n\n[2b5c8](https://github.com/JSQLParser/JSqlParser/commit/2b5c84552963ec3) Tobias *2017-04-17 23:05:07*\n\n**checkstyle source check included. configuration done**\n\n\n[12377](https://github.com/JSQLParser/JSqlParser/commit/12377c784a3fa53) wumpz *2017-04-17 23:01:42*\n\n**checkstyle source check included. configuration done**\n\n\n[1bdf5](https://github.com/JSQLParser/JSqlParser/commit/1bdf5b9515b5af3) wumpz *2017-04-17 22:57:12*\n\n**improved StatementVistorAdaptor to process all statements.**\n\n\n[27119](https://github.com/JSQLParser/JSqlParser/commit/2711900eb3ebf83) wumpz *2017-04-11 07:47:22*\n\n**removed linefeed check, due to multiple git checkout configurations regarding linefeeds**\n\n\n[aab56](https://github.com/JSQLParser/JSqlParser/commit/aab569bf4c6376f) wumpz *2017-03-31 08:04:24*\n\n****\n\n\n[2f5a1](https://github.com/JSQLParser/JSqlParser/commit/2f5a1eacf3e9f5a) wumpz *2017-03-29 06:07:20*\n\n**corrected source files regarding checkstyle errors**\n\n\n[0d6fa](https://github.com/JSQLParser/JSqlParser/commit/0d6faeb8b411e53) wumpz *2017-03-28 09:46:55*\n\n**introduced some more checkstyle rules**\n\n\n[c7a86](https://github.com/JSQLParser/JSqlParser/commit/c7a8601b84695e4) wumpz *2017-03-28 09:30:00*\n\n**removed problematic profile \"check.sources\" activation, excluded generated-sources, included test-sources**\n\n\n[e2cc2](https://github.com/JSQLParser/JSqlParser/commit/e2cc2210c364f6c) wumpz *2017-03-27 11:48:50*\n\n**removed problematic profile \"check.sources\" activation, excluded generated-sources, included test-sources**\n\n\n[e941f](https://github.com/JSQLParser/JSqlParser/commit/e941fd96a2caade) wumpz *2017-03-27 11:45:39*\n\n**removed problematic profile \"check.sources\" activation, excluded generated-sources, included test-sources**\n\n\n[dd23f](https://github.com/JSQLParser/JSqlParser/commit/dd23f27516db63b) wumpz *2017-03-27 11:14:44*\n\n**removed auto activation due to travis problems, included test sources**\n\n\n[759e7](https://github.com/JSQLParser/JSqlParser/commit/759e751b85c5a16) wumpz *2017-03-27 10:53:46*\n\n**checkstyle**\n\n\n[62505](https://github.com/JSQLParser/JSqlParser/commit/625054295a7700b) wumpz *2017-03-27 09:16:11*\n\n**Update README.md**\n\n\n[da9ac](https://github.com/JSQLParser/JSqlParser/commit/da9acf59e308d2b) Tobias *2017-03-25 22:21:59*\n\n\n## jsqlparser-1.0 (2017-03-25)\n\n### Other changes\n\n****\n\n\n[32e8f](https://github.com/JSQLParser/JSqlParser/commit/32e8fa02ecfadc4) wumpz *2017-03-25 22:00:13*\n\n****\n\n\n[a31b2](https://github.com/JSQLParser/JSqlParser/commit/a31b219baadb001) wumpz *2017-03-25 21:52:19*\n\n****\n\n\n[f731f](https://github.com/JSQLParser/JSqlParser/commit/f731fa4cf726036) wumpz *2017-03-25 21:47:42*\n\n**reformating hole sourcecode**\n\n\n[4146f](https://github.com/JSQLParser/JSqlParser/commit/4146f869cb01151) wumpz *2017-03-22 07:36:17*\n\n**Fix #407 by enhancing grammar (#410)**\n\n* Fix #407 by enhancing grammar \n* Change LF and tabs \n\n[5d901](https://github.com/JSQLParser/JSqlParser/commit/5d9018657df6b22) Christophe Moine *2017-03-22 07:36:14*\n\n**removed dependencies**\n\n\n[dd1b3](https://github.com/JSQLParser/JSqlParser/commit/dd1b334e3bc4675) wumpz *2017-03-20 10:22:55*\n\n**fixes #406**\n\n\n[06619](https://github.com/JSQLParser/JSqlParser/commit/066199cfeb97ea4) wumpz *2017-03-17 11:55:11*\n\n**update to JavaCC 7.0.2**\n\n\n[c12f7](https://github.com/JSQLParser/JSqlParser/commit/c12f7ac457d92c3) wumpz *2017-03-15 10:28:17*\n\n**Update README.md**\n\n\n[6312f](https://github.com/JSQLParser/JSqlParser/commit/6312f3aaf9aa46e) Tobias *2017-03-15 08:55:03*\n\n**update readme**\n\n\n[03746](https://github.com/JSQLParser/JSqlParser/commit/03746a8ddf0c14e) wumpz *2017-03-15 08:45:24*\n\n**update readme**\n\n\n[5bbfe](https://github.com/JSQLParser/JSqlParser/commit/5bbfeb76bf7deab) wumpz *2017-03-15 08:44:22*\n\n****\n\n\n[6e72b](https://github.com/JSQLParser/JSqlParser/commit/6e72b99ee4b0ba0) wumpz *2017-03-14 11:41:26*\n\n**corrected merge conflict**\n\n\n[1211d](https://github.com/JSQLParser/JSqlParser/commit/1211dcf1209f3a4) wumpz *2017-03-14 11:39:30*\n\n**corrected case when expressions**\n\n\n[12cc4](https://github.com/JSQLParser/JSqlParser/commit/12cc4059ddef291) wumpz *2017-03-14 11:12:53*\n\n**rewrote some lookaheads**\n\n\n[2a440](https://github.com/JSQLParser/JSqlParser/commit/2a4405a6a0821cc) wumpz *2017-03-14 10:33:21*\n\n**replace some junit pre 4.x artifacts**\n\n\n[7dd85](https://github.com/JSQLParser/JSqlParser/commit/7dd857e5000f09a) wumpz *2017-03-14 09:55:42*\n\n**first rewrite of SelectBody**\n\n\n[49127](https://github.com/JSQLParser/JSqlParser/commit/49127be715d029a) wumpz *2017-03-14 09:43:25*\n\n****\n\n\n[5dcef](https://github.com/JSQLParser/JSqlParser/commit/5dcefcefd07755a) wumpz *2017-03-10 22:13:02*\n\n**Support FOR UPDATE WAIT (#405)**\n\n* Adding FOR UPDATE WAIT support \n* removing final peppered everywhere \n* updating formatting, fixing codacy test names \n* updating asserts to use static import \n* reverting changes \n* reverting line feeds \n* adding tests and deparser code back without formatting \n\n[45b39](https://github.com/JSQLParser/JSqlParser/commit/45b392f4b93714c) AnEmortalKid *2017-03-10 22:06:53*\n\n**add support for LIMIT with only one row count JDBC parameter (#404)**\n\n* small but powerfull change 👍 \n\n[42318](https://github.com/JSQLParser/JSqlParser/commit/42318531bb72279) zhushaoping *2017-03-03 07:06:08*\n\n**merged**\n\n\n[c3eed](https://github.com/JSQLParser/JSqlParser/commit/c3eed13096c0019) wumpz *2017-03-03 07:03:08*\n\n**fixes #401**\n\n\n[1315d](https://github.com/JSQLParser/JSqlParser/commit/1315d035dbc5008) wumpz *2017-03-01 08:20:55*\n\n**fixes #402**\n\n\n[6fb15](https://github.com/JSQLParser/JSqlParser/commit/6fb15a104debe95) wumpz *2017-03-01 07:55:25*\n\n**release 0.9.7**\n\n\n[46720](https://github.com/JSQLParser/JSqlParser/commit/46720ef029cf8aa) wumpz *2017-02-26 23:13:50*\n\n\n## jsqlparser-0.9.7 (2017-02-26)\n\n### Other changes\n\n**updated readme**\n\n\n[e2dc3](https://github.com/JSQLParser/JSqlParser/commit/e2dc36897178155) wumpz *2017-02-21 08:49:56*\n\n**commented an issue test**\n\n\n[4fe4c](https://github.com/JSQLParser/JSqlParser/commit/4fe4ce206296ea1) wumpz *2017-02-21 08:46:38*\n\n**set statemet with optional equals**\n\n\n[ec6ce](https://github.com/JSQLParser/JSqlParser/commit/ec6cef2e803d87a) wumpz *2017-02-11 23:57:32*\n\n**fixes #393**\n\n\n[320f6](https://github.com/JSQLParser/JSqlParser/commit/320f64a9a4aa687) wumpz *2017-02-10 09:34:47*\n\n****\n\n\n[42f32](https://github.com/JSQLParser/JSqlParser/commit/42f3242cc13fac6) wumpz *2017-02-08 08:17:40*\n\n**removed unused imports**\n\n\n[c66cc](https://github.com/JSQLParser/JSqlParser/commit/c66cc6973753c3a) wumpz *2017-02-08 08:15:51*\n\n**minor code improvements**\n\n\n[e3fd2](https://github.com/JSQLParser/JSqlParser/commit/e3fd2c6df3444ae) wumpz *2017-02-08 08:13:58*\n\n**Update README.md**\n\n\n[3d05e](https://github.com/JSQLParser/JSqlParser/commit/3d05e16c6c09a05) Tobias *2017-02-07 18:09:26*\n\n**fixes #390**\n\n\n[546b7](https://github.com/JSQLParser/JSqlParser/commit/546b71d84eb8b45) wumpz *2017-02-01 15:27:48*\n\n****\n\n\n[d4396](https://github.com/JSQLParser/JSqlParser/commit/d439643bbf1cd02) wumpz *2017-01-27 20:53:20*\n\n**fixes #389**\n\n\n[71c32](https://github.com/JSQLParser/JSqlParser/commit/71c32d905fbd4cb) wumpz *2017-01-27 20:39:25*\n\n**included LOOKAHEAD**\n\n\n[6776e](https://github.com/JSQLParser/JSqlParser/commit/6776eb5fd0224e4) wumpz *2017-01-20 23:12:17*\n\n**updated readme**\n\n\n[b5f6e](https://github.com/JSQLParser/JSqlParser/commit/b5f6e9efac23dca) wumpz *2017-01-20 22:10:59*\n\n**updated readme**\n\n\n[1abd2](https://github.com/JSQLParser/JSqlParser/commit/1abd224a3e2ff0f) wumpz *2017-01-20 22:00:07*\n\n**Increase test coverage on AlterExpression.java**\n\n* getOperation \n* getFkColumns \n* getFkSourceTable \n* getFkSourceColumns \n* getConstraintName \n* tried getPkColumns but it does not behave as I expected. \n* placed TODO in AlterTest.testAlterTablePK for this \n* getIndex().getColumnNames \n\n[5a799](https://github.com/JSQLParser/JSqlParser/commit/5a79964714b13f7) jthomas *2017-01-19 19:43:24*\n\n**Enhance AlterExpression grammar:**\n\n* 1. optional &quot;COLUMN&quot; keyword in ADD alter operation \n* 2. new alter operation: MODIFY \n* 3. add column specs to alter table column definitions \n\n[24177](https://github.com/JSQLParser/JSqlParser/commit/241779b26973b47) jthomas *2017-01-19 17:32:21*\n\n**support to add jdbc name parameter after LIMIT and TOP keywords**\n\n\n[e25e2](https://github.com/JSQLParser/JSqlParser/commit/e25e247dd5e9131) zhushaoping *2017-01-13 02:55:52*\n\n**fixes #288**\n\n\n[091c5](https://github.com/JSQLParser/JSqlParser/commit/091c5dd5ab5ce93) zhushaoping *2017-01-12 07:09:57*\n\n**tests for issue 379 included**\n\n\n[f7c27](https://github.com/JSQLParser/JSqlParser/commit/f7c27ad6492a636) wumpz *2017-01-04 07:22:19*\n\n**tests for issue 379 included**\n\n\n[14a9b](https://github.com/JSQLParser/JSqlParser/commit/14a9b3e372b664a) wumpz *2017-01-04 06:49:43*\n\n**updated readme**\n\n\n[1899c](https://github.com/JSQLParser/JSqlParser/commit/1899cbffb915992) wumpz *2017-01-02 13:32:56*\n\n**fixes #375**\n\n* fixes #371 \n\n[957f3](https://github.com/JSQLParser/JSqlParser/commit/957f39c496a7fac) wumpz *2017-01-02 13:30:09*\n\n**fixed NPE in ExpressionVisitorAdapter when SubSelect doesn't has withItemsList**\n\n\n[28979](https://github.com/JSQLParser/JSqlParser/commit/2897935037560db) Donghang Lin *2016-12-21 07:14:48*\n\n****\n\n\n[5bc1f](https://github.com/JSQLParser/JSqlParser/commit/5bc1fc3669d52f0) wumpz *2016-12-06 22:08:00*\n\n**fixed #363**\n\n\n[66e44](https://github.com/JSQLParser/JSqlParser/commit/66e44c956be7481) wumpz *2016-12-01 06:52:45*\n\n**integrated some tests**\n\n\n[5937b](https://github.com/JSQLParser/JSqlParser/commit/5937bace81bd20c) wumpz *2016-11-14 11:47:43*\n\n**corrected fix #311 and fix #332, introduced unaliased fqn of column**\n\n\n[88804](https://github.com/JSQLParser/JSqlParser/commit/888041d1971257e) wumpz *2016-09-26 12:33:24*\n\n**fixes #341**\n\n\n[b3faf](https://github.com/JSQLParser/JSqlParser/commit/b3faf8eb8680484) wumpz *2016-09-20 21:53:32*\n\n**Update README.md**\n\n\n[98ded](https://github.com/JSQLParser/JSqlParser/commit/98ded4dfd487b7e) Tobias *2016-09-17 14:34:21*\n\n**corrected some lookaheads**\n\n\n[7c157](https://github.com/JSQLParser/JSqlParser/commit/7c1572febc89ae1) wumpz *2016-09-16 11:52:08*\n\n**Updated header and removed unused methods.**\n\n\n[2bfc9](https://github.com/JSQLParser/JSqlParser/commit/2bfc9ab124086b9) Peter Borissow *2016-09-15 15:28:59*\n\n**Added json parsing tests.**\n\n\n[7c740](https://github.com/JSQLParser/JSqlParser/commit/7c740854852d725) Peter Borissow *2016-09-15 14:59:01*\n\n**Added support for PostgreSQL JSON Functions and Operators.**\n\n\n[a5504](https://github.com/JSQLParser/JSqlParser/commit/a5504819c1d93f0) Peter Borissow *2016-09-14 02:28:01*\n\n**Add support for more Postgres Create Table options**\n\n\n[04c56](https://github.com/JSQLParser/JSqlParser/commit/04c56f283d24b44) Rob Story *2016-09-09 21:02:57*\n\n**fixes #334**\n\n\n[21a0d](https://github.com/JSQLParser/JSqlParser/commit/21a0df961b4dc70) wumpz *2016-09-01 07:45:04*\n\n****\n\n\n[8e229](https://github.com/JSQLParser/JSqlParser/commit/8e22953b3bdcf85) wumpz *2016-09-01 06:50:59*\n\n****\n\n\n[e6e7e](https://github.com/JSQLParser/JSqlParser/commit/e6e7ea7bd407e30) wumpz *2016-09-01 06:46:49*\n\n**Support additional Postgres column types for alter table statements**\n\n\n[42181](https://github.com/JSQLParser/JSqlParser/commit/42181b00cace324) Rob Story *2016-08-30 14:22:55*\n\n**fixes #330**\n\n\n[03a34](https://github.com/JSQLParser/JSqlParser/commit/03a344d221abc9b) wumpz *2016-08-29 07:13:00*\n\n**fixes #329**\n\n\n[3df49](https://github.com/JSQLParser/JSqlParser/commit/3df492bb5cadaee) wumpz *2016-08-28 21:06:08*\n\n**updated readme**\n\n\n[2acae](https://github.com/JSQLParser/JSqlParser/commit/2acaee03959f798) wumpz *2016-08-23 20:02:35*\n\n\n## jsqlparser-0.9.6 (2016-08-23)\n\n### Other changes\n\n**#modify net.sf.jsqlparser.statement.insert.Insert   Method:toString() if itemsList and useSelectBrackets together not null will error**\n\n* #modify PlainSelect.getStringList change sql append to StringBuilder \n\n[471b9](https://github.com/JSQLParser/JSqlParser/commit/471b94495623ee2) zheng.liu@baifendian.com *2016-08-15 06:22:23*\n\n**corrected some lookaheads parsing delete statements**\n\n\n[57890](https://github.com/JSQLParser/JSqlParser/commit/578909f24136b04) wumpz *2016-08-14 12:59:27*\n\n**some cleanup**\n\n\n[d34eb](https://github.com/JSQLParser/JSqlParser/commit/d34ebcab6ac939f) wumpz *2016-08-13 22:20:27*\n\n**Update Alter and add AlterExpression class for multiple ADD/DROP expressions in a single ALTER statement**\n\n* Update .jjt file to break out the AlterExpression into its own class and for Alter to compose multiple AlterExpressions \n* Update AlterTest for new AlterExpressions and test for multiple ADD/DROP statements in a single ALTER \n\n[e8d1c](https://github.com/JSQLParser/JSqlParser/commit/e8d1cf2cb1db16c) Rob Story *2016-08-11 19:24:41*\n\n**Support for parse delete from table using join to another table like:**\n\n* DELETE posts \n* FROM posts \n* INNER JOIN projects ON projects.project_id &#x3D; posts.project_id \n* WHERE projects.client_id &#x3D; :client_id \n* This necessitated some changes to the DeleteTest class, \n* specifically: \n* JSqlParserCC.jjt - changes on grammar of Delete statements. \n* Delete toString and DeleteDeParser. \n\n[b6eb5](https://github.com/JSQLParser/JSqlParser/commit/b6eb57b61f7b205) Lucas Oliveira *2016-08-06 16:28:11*\n\n**fix bug of TablesNamesFinder when SubSlect has withItemsList, add corresponding test case**\n\n\n[276dd](https://github.com/JSQLParser/JSqlParser/commit/276ddc8a4dd8bf7) Xin Quan *2016-08-04 01:44:08*\n\n**fixes #309**\n\n\n[37f06](https://github.com/JSQLParser/JSqlParser/commit/37f061014e21f01) wumpz *2016-08-03 22:02:45*\n\n**fixes #309**\n\n\n[acd16](https://github.com/JSQLParser/JSqlParser/commit/acd16e59b8d8378) wumpz *2016-08-03 22:02:04*\n\n**fixes #303**\n\n\n[043a5](https://github.com/JSQLParser/JSqlParser/commit/043a5cb59727cda) wumpz *2016-08-03 21:31:11*\n\n**fixes #303**\n\n\n[76982](https://github.com/JSQLParser/JSqlParser/commit/76982f7b00b54f7) wumpz *2016-08-03 21:30:04*\n\n**intruced new test for oracle join syntax**\n\n\n[cb8dd](https://github.com/JSQLParser/JSqlParser/commit/cb8ddd71254a640) wumpz *2016-08-03 21:05:38*\n\n**fixes #246**\n\n\n[822bb](https://github.com/JSQLParser/JSqlParser/commit/822bbbe78cc8481) wumpz *2016-07-31 20:56:56*\n\n**fixes #247**\n\n\n[42636](https://github.com/JSQLParser/JSqlParser/commit/4263651d43d4c60) wumpz *2016-07-28 20:13:41*\n\n**test for issue 265**\n\n\n[59f7e](https://github.com/JSQLParser/JSqlParser/commit/59f7ec2a2a432de) wumpz *2016-07-24 22:28:08*\n\n**fixes #292**\n\n\n[f0b35](https://github.com/JSQLParser/JSqlParser/commit/f0b350d13756b1f) wumpz *2016-07-24 22:13:37*\n\n**fixes #299**\n\n\n[d2ad3](https://github.com/JSQLParser/JSqlParser/commit/d2ad3dfe936c8ce) wumpz *2016-07-24 22:05:14*\n\n**fixes #311**\n\n\n[dfd2f](https://github.com/JSQLParser/JSqlParser/commit/dfd2fe55f0ad2bb) wumpz *2016-07-22 07:25:01*\n\n****\n\n\n[84bf0](https://github.com/JSQLParser/JSqlParser/commit/84bf0650e8f7d55) wumpz *2016-07-21 14:08:19*\n\n**first try of error recovery for statement and statements**\n\n\n[a7247](https://github.com/JSQLParser/JSqlParser/commit/a7247eb48369472) wumpz *2016-07-21 07:33:49*\n\n**some refactoring**\n\n\n[1e307](https://github.com/JSQLParser/JSqlParser/commit/1e30760dce107d9) wumpz *2016-07-18 16:50:28*\n\n**The previous pull request broke the build.  Besides being a keyword, 'double' is also a function name.  Add K_DOUBLE to the RelObjectNameExt() function to pick up this distinction.**\n\n\n[8bfc1](https://github.com/JSQLParser/JSqlParser/commit/8bfc1583f12049c) Tom Moore *2016-07-11 19:14:06*\n\n**Add a double precision cast type**\n\n\n[60ad1](https://github.com/JSQLParser/JSqlParser/commit/60ad18ed1a10328) Tom Moore *2016-07-11 17:59:53*\n\n**removed one lookahead and improved parenthesis parsing**\n\n\n[84a88](https://github.com/JSQLParser/JSqlParser/commit/84a883614af908a) wumpz *2016-06-30 18:41:06*\n\n**removed one lookahead and improved parenthesis parsing**\n\n\n[51b39](https://github.com/JSQLParser/JSqlParser/commit/51b39c55aaaa58c) wumpz *2016-06-30 18:37:23*\n\n**fixes #296**\n\n* refactored getTableList method of TableNamesFinder \n\n[3ccca](https://github.com/JSQLParser/JSqlParser/commit/3ccca01bbc85778) wumpz *2016-06-28 12:16:39*\n\n**fixes #295**\n\n\n[b877d](https://github.com/JSQLParser/JSqlParser/commit/b877da0a425c01f) wumpz *2016-06-28 08:19:36*\n\n**fixes #293**\n\n\n[c1d0b](https://github.com/JSQLParser/JSqlParser/commit/c1d0b2f5283d8bb) wumpz *2016-06-28 00:11:15*\n\n**introduced OSGi metadata**\n\n\n[89daf](https://github.com/JSQLParser/JSqlParser/commit/89dafaedeb69d6a) wumpz *2016-06-23 21:58:22*\n\n**fixes #291**\n\n\n[63fa2](https://github.com/JSQLParser/JSqlParser/commit/63fa2f66b537731) wumpz *2016-06-23 21:40:57*\n\n**fixes #291**\n\n\n[da42b](https://github.com/JSQLParser/JSqlParser/commit/da42b1dce108dd9) wumpz *2016-06-23 21:37:51*\n\n**fixes #278**\n\n\n[12341](https://github.com/JSQLParser/JSqlParser/commit/1234127a47199e6) wumpz *2016-06-21 23:02:11*\n\n**fixes #278**\n\n\n[faf8c](https://github.com/JSQLParser/JSqlParser/commit/faf8c6adea9bb28) wumpz *2016-06-21 22:58:40*\n\n**fixes #287**\n\n\n[b1bea](https://github.com/JSQLParser/JSqlParser/commit/b1bea0273c5557a) wumpz *2016-06-21 20:50:02*\n\n**fixes #270**\n\n\n[37c83](https://github.com/JSQLParser/JSqlParser/commit/37c8313e46e45a7) wumpz *2016-06-21 20:12:55*\n\n****\n\n\n[d3d66](https://github.com/JSQLParser/JSqlParser/commit/d3d66f819662698) wumpz *2016-06-20 07:08:58*\n\n****\n\n\n[0d1d1](https://github.com/JSQLParser/JSqlParser/commit/0d1d1c066d77ded) wumpz *2016-06-19 21:15:55*\n\n**fixes #284**\n\n\n[8e7ba](https://github.com/JSQLParser/JSqlParser/commit/8e7ba38a39c6f85) wumpz *2016-06-19 20:09:07*\n\n**Implemented table check constraint for named constraints.**\n\n* 1. Added named constraint to create table. \n* 2. Added check constraint to alter table statement. \n* 3. Added CheckConstraint type. \n* Tests: \n* 4. Added create table test. \n* 5. Added alter table test. \n\n[401d2](https://github.com/JSQLParser/JSqlParser/commit/401d279ef7e6ef9) Megan Woods *2016-06-16 14:56:01*\n\n****\n\n\n[04fc3](https://github.com/JSQLParser/JSqlParser/commit/04fc3aa9b53c8a9) wumpz *2016-06-15 20:50:52*\n\n****\n\n\n[bddbe](https://github.com/JSQLParser/JSqlParser/commit/bddbe588a759dd0) wumpz *2016-06-15 20:45:51*\n\n**Implemented:**\n\n* 1. UPDATE .. RETURNING col, col as Alias \n* 2. UPDATE .. RETURNING * \n* Tested: \n* 3. UPDATE .. ORDER BY .. LIMIT .. RETURNING \n* 4. UPDATE .. RETURNING \n* Item 4 represents the PostgreSQL UPDATE .. RETURNING Syntax without ORDER BY and LIMIT. \n* See: https://www.postgresql.org/docs/9.5/static/sql-update.html \n\n[f4526](https://github.com/JSQLParser/JSqlParser/commit/f452638f0f04f99) Megan Woods *2016-06-15 09:12:14*\n\n****\n\n\n[40aba](https://github.com/JSQLParser/JSqlParser/commit/40aba736f79c495) wumpz *2016-06-12 11:12:57*\n\n**-- added scalar time functions of ANSI SQL**\n\n\n[f51df](https://github.com/JSQLParser/JSqlParser/commit/f51df4b5f7d51e2) ChrissW-R1 *2016-06-08 12:57:26*\n\n****\n\n\n[24c87](https://github.com/JSQLParser/JSqlParser/commit/24c874afad3110f) wumpz *2016-06-06 21:50:44*\n\n**updated readme**\n\n\n[3bc31](https://github.com/JSQLParser/JSqlParser/commit/3bc316df743ab09) wumpz *2016-05-24 09:45:34*\n\n**Add a test-case for Hive's LEFT SEMI JOIN**\n\n\n[e56fb](https://github.com/JSQLParser/JSqlParser/commit/e56fbe984cfab98) Vu Nhan *2016-05-19 04:53:22*\n\n**Add support for Hive's LEFT SEMI JOIN**\n\n\n[fd03a](https://github.com/JSQLParser/JSqlParser/commit/fd03ad4f6bdd06a) Vu Nhan *2016-05-19 04:05:43*\n\n**fixes #243**\n\n\n[bb978](https://github.com/JSQLParser/JSqlParser/commit/bb978c45b4d744d) wumpz *2016-05-16 20:49:58*\n\n**fixes #243**\n\n\n[780ba](https://github.com/JSQLParser/JSqlParser/commit/780ba125a5807b2) wumpz *2016-05-16 20:47:32*\n\n**fixes #261**\n\n\n[10e68](https://github.com/JSQLParser/JSqlParser/commit/10e68b5c3c58296) wumpz *2016-05-16 20:03:07*\n\n**updated readme**\n\n\n[77ba3](https://github.com/JSQLParser/JSqlParser/commit/77ba380cfb639c4) wumpz *2016-05-06 06:06:33*\n\n****\n\n\n[57145](https://github.com/JSQLParser/JSqlParser/commit/5714516d314f31d) wumpz *2016-04-28 22:15:18*\n\n**Added ability to have operators like '>=' or '<=' separated by a space.**\n\n* This includes: \n* Modifying the JJT syntax to support the &#x27;space in the middle&#x27; versions \n* of operators (any quantity of whitespace is supported). \n* Modifying the various operators to inherit from a new \n* &#x27;ComparisonOperator&#x27; class, which handles the (previously NotEqualsTo- \n* only) logic for capturing the form of the operator. \n* Giving each of the various operators a constructor that accepts the \n* syntax used. \n* Modifying TestUtils to strip comments out before comparing SQL text \n* (necessary because condition07.sql is now passing, and has a comment). \n* Updating SpecialOracleTest to indicate 130 tests passing now \n* (condition7.sql now passes). \n* Adding a new test specifically for operators into SpecialOracleTest. \n* NOTE: Because the &quot;! &#x3D;&quot; form of the &#x27;not equals&#x27; operator means something \n* different in PostgresSQL (factorial of previous argument + equals), we do \n* NOT include that case. \n\n[9886b](https://github.com/JSQLParser/JSqlParser/commit/9886b02975d1749) Dave Lindquist *2016-04-28 13:28:58*\n\n**Corrected \"MERGE INTO\" parsing for more complicated statements.**\n\n* Specifically: \n* Changed &quot;Condition&quot; to &quot;Expression&quot; for the &quot;ON&quot; clause -- this is \n* needed to handle &quot;ON&quot; clauses that have &quot;a &#x3D; y AND b &#x3D; z&quot; or other \n* more complicated expressions (basically the same as the &quot;ON&quot; clause \n* in a SELECT query). \n* Also changed the &quot;WHERE&quot; and &quot;DELETE WHERE&quot; clauses in the same \n* fashion (&#x27;Condition&#x27; becomes &#x27;Expression&#x27;), as they too support \n* multiple conditions. \n* Corrected the toString on the MergeUpdate clause, which was missing a \n* comma between the fields. \n* Added a new, more complicated MERGE INTO statement to the MergeTest \n* class. \n\n[7efd5](https://github.com/JSQLParser/JSqlParser/commit/7efd58f7704a0ff) Dave Lindquist *2016-04-28 13:19:34*\n\n**added for update test**\n\n\n[d54b8](https://github.com/JSQLParser/JSqlParser/commit/d54b82ba62f1133) wumpz *2016-04-27 14:23:55*\n\n**fixes #253**\n\n\n[75be4](https://github.com/JSQLParser/JSqlParser/commit/75be42659dc3a76) wumpz *2016-04-26 06:11:13*\n\n**fixed  #245**\n\n\n[01287](https://github.com/JSQLParser/JSqlParser/commit/012874f905adabe) wumpz *2016-04-15 22:01:56*\n\n**fixes #244**\n\n\n[2204a](https://github.com/JSQLParser/JSqlParser/commit/2204a5fc85fb99d) wumpz *2016-04-15 20:10:32*\n\n**Update README.md**\n\n\n[ac4a5](https://github.com/JSQLParser/JSqlParser/commit/ac4a56151b46d0b) Tobias *2016-04-14 19:30:09*\n\n**fixes #240**\n\n* fixes #241 \n\n[7f8b5](https://github.com/JSQLParser/JSqlParser/commit/7f8b59b31e44521) wumpz *2016-04-05 06:25:57*\n\n**small modifications, reduces some semantic lookaheads**\n\n\n[7f5b6](https://github.com/JSQLParser/JSqlParser/commit/7f5b61e60bf037b) wumpz *2016-03-29 11:34:17*\n\n**fixed #228**\n\n\n[3dfae](https://github.com/JSQLParser/JSqlParser/commit/3dfae9c62615711) wumpz *2016-03-17 08:40:24*\n\n**fixed #228**\n\n\n[8f9b2](https://github.com/JSQLParser/JSqlParser/commit/8f9b2b905c00c68) wumpz *2016-03-17 08:38:35*\n\n**fixed #232 without correction of order of update and insert**\n\n\n[7e2e7](https://github.com/JSQLParser/JSqlParser/commit/7e2e7200ce48672) wumpz *2016-03-17 08:28:47*\n\n**fixed some whitespace differences between deparser and toString regarding NOT expression**\n\n\n[f4b25](https://github.com/JSQLParser/JSqlParser/commit/f4b25599a8919d4) wumpz *2016-03-17 08:16:24*\n\n**Update README.md**\n\n\n[12009](https://github.com/JSQLParser/JSqlParser/commit/120096068fa4b3d) Tobias *2016-03-17 07:51:11*\n\n**update release info**\n\n\n[eccd6](https://github.com/JSQLParser/JSqlParser/commit/eccd66f01f924f8) wumpz *2016-03-14 00:27:18*\n\n**Fixing uncaught exception**\n\n\n[4fad4](https://github.com/JSQLParser/JSqlParser/commit/4fad4af810aef8d) emopers *2016-01-12 19:30:52*\n\n\n## jsqlparser-0.9.5 (2016-03-13)\n\n### Other changes\n\n**no message**\n\n\n[ffcfe](https://github.com/JSQLParser/JSqlParser/commit/ffcfe41096bca29) wumpz *2016-03-13 23:55:09*\n\n****\n\n\n[3c863](https://github.com/JSQLParser/JSqlParser/commit/3c8635280dbd959) wumpz *2016-03-13 23:35:37*\n\n**introduced boolean values within conditions**\n\n\n[36a62](https://github.com/JSQLParser/JSqlParser/commit/36a62e9de7ec65e) wumpz *2016-03-10 21:19:22*\n\n**introduced boolean values within conditions**\n\n\n[a8333](https://github.com/JSQLParser/JSqlParser/commit/a8333bf9310355b) wumpz *2016-03-10 21:16:28*\n\n**introduced boolean values within conditions**\n\n\n[68e5b](https://github.com/JSQLParser/JSqlParser/commit/68e5b53e834f02f) wumpz *2016-03-10 21:11:01*\n\n**fixes #230**\n\n\n[19915](https://github.com/JSQLParser/JSqlParser/commit/1991507179224f0) wumpz *2016-03-07 23:17:40*\n\n**multiple code improvements: squid:S1905, squid:S00122, squid:S1155, squid:S00105**\n\n\n[905b2](https://github.com/JSQLParser/JSqlParser/commit/905b28d34771d15) George Kankava *2016-03-03 11:40:31*\n\n**fixed #226**\n\n\n[67b17](https://github.com/JSQLParser/JSqlParser/commit/67b178b533128ae) wumpz *2016-02-27 13:54:58*\n\n**fixes #223**\n\n\n[04e5c](https://github.com/JSQLParser/JSqlParser/commit/04e5c8b354f149d) wumpz *2016-02-11 21:23:51*\n\n**reduces a bunch of dynamic lookaheads to fixed ones**\n\n\n[4c764](https://github.com/JSQLParser/JSqlParser/commit/4c764f54da7d820) wumpz *2016-02-11 20:51:02*\n\n**integrated changes of #225**\n\n\n[eb5d7](https://github.com/JSQLParser/JSqlParser/commit/eb5d7a29737c6c5) wumpz *2016-02-11 20:41:23*\n\n**Multiple code improvements fix 1: squid:S1199, squid:S1066, squid:S1854, squid:S1165**\n\n\n[af5d3](https://github.com/JSQLParser/JSqlParser/commit/af5d3cddf3564cf) George Kankava *2016-02-10 16:11:10*\n\n**Update README.md**\n\n\n[e455c](https://github.com/JSQLParser/JSqlParser/commit/e455ce024f53779) Tobias *2016-02-10 06:43:04*\n\n**improved parsing performance**\n\n\n[c78aa](https://github.com/JSQLParser/JSqlParser/commit/c78aa03d1af2cfe) wumpz *2016-02-09 22:30:20*\n\n**fixes #221**\n\n\n[579f0](https://github.com/JSQLParser/JSqlParser/commit/579f0bc159aa053) wumpz *2016-02-04 22:10:43*\n\n**fixes #221**\n\n\n[4a12d](https://github.com/JSQLParser/JSqlParser/commit/4a12dc10014ec51) wumpz *2016-02-04 22:07:12*\n\n**cleaned up some lookaheads**\n\n\n[0cc80](https://github.com/JSQLParser/JSqlParser/commit/0cc809ea7de5238) wumpz *2016-02-04 08:58:52*\n\n****\n\n\n[36a4a](https://github.com/JSQLParser/JSqlParser/commit/36a4a0f9918ef9e) wumpz *2016-02-02 06:45:45*\n\n**fixes #217**\n\n\n[de61c](https://github.com/JSQLParser/JSqlParser/commit/de61c0b92a25e03) wumpz *2016-02-02 06:21:59*\n\n**Added reference options foreign keys support (ON UPDATE/DELETE NO ACTION/CASCADE) and Full text indexes (FULLTEXT idx(text1))**\n\n\n[c2956](https://github.com/JSQLParser/JSqlParser/commit/c29565bcaed42b1) pabloa *2016-02-01 21:57:27*\n\n**multiple code improvements 1**\n\n\n[e6bec](https://github.com/JSQLParser/JSqlParser/commit/e6becde1df91db5) George Kankava *2016-02-01 07:35:08*\n\n**Support of mysql create statements with timestamp column with ON UPDATE. Example: CREATE TABLE test (applied timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP)**\n\n\n[9dcaa](https://github.com/JSQLParser/JSqlParser/commit/9dcaaee63e4b2b3) pabloa98@gmail.com *2016-01-24 08:37:38*\n\n**fixes #151**\n\n\n[f5b51](https://github.com/JSQLParser/JSqlParser/commit/f5b515be9351c77) wumpz *2016-01-06 09:12:54*\n\n**corrected lookahead for tablefunctions**\n\n\n[8036e](https://github.com/JSQLParser/JSqlParser/commit/8036edd80628410) wumpz *2015-12-09 22:01:02*\n\n**TableFunction extends FunctionItem**\n\n\n[17371](https://github.com/JSQLParser/JSqlParser/commit/17371ae38e0384e) tfedkiv *2015-12-08 08:39:07*\n\n**added TableFunction alias suppurt**\n\n* added TableFunction unit tests \n\n[88edd](https://github.com/JSQLParser/JSqlParser/commit/88eddaf50dada22) tfedkiv *2015-12-07 15:27:02*\n\n**fixed verion**\n\n\n[a5a5f](https://github.com/JSQLParser/JSqlParser/commit/a5a5f9ee5b0d28d) ftaras *2015-12-07 14:25:07*\n\n**added support of SELECT FROM table function (h2)**\n\n\n[0403f](https://github.com/JSQLParser/JSqlParser/commit/0403fdda2918311) tfedkiv *2015-12-07 14:23:39*\n\n**replaced size() with isEmpty()**\n\n\n[1d634](https://github.com/JSQLParser/JSqlParser/commit/1d6348126dceec7) wumpz *2015-12-06 22:03:20*\n\n**jdk 8 build included into travis**\n\n\n[830be](https://github.com/JSQLParser/JSqlParser/commit/830be49c4de1311) wumpz *2015-11-27 22:12:36*\n\n**increased version of maven-javadoc-plugin**\n\n\n[1b842](https://github.com/JSQLParser/JSqlParser/commit/1b842f891e8b370) wumpz *2015-11-26 07:34:47*\n\n****\n\n\n[01d25](https://github.com/JSQLParser/JSqlParser/commit/01d25deaae72ba2) wumpz *2015-11-26 07:24:43*\n\n**Issue 198: add profile to ensure doclint is turned off with Java 8+. Without this, the project won't build on Java 8. (You can run mvn test successfully, but not mvn package.)**\n\n\n[bb3ef](https://github.com/JSQLParser/JSqlParser/commit/bb3ef6188982b9b) James Heather *2015-11-25 13:43:57*\n\n**fixes #193**\n\n\n[5d7bd](https://github.com/JSQLParser/JSqlParser/commit/5d7bdb9b254bc19) wumpz *2015-11-25 06:37:36*\n\n**fixes #195**\n\n\n[ab1ad](https://github.com/JSQLParser/JSqlParser/commit/ab1ad25b6862e08) wumpz *2015-11-25 06:22:12*\n\n**Issue 195:**\n\n* Add support for ORDER BY and LIMIT in UPDATE and DELETE statements (as supported by MySQL). \n* LimitDeparser and OrderByDeParser have been pulled out into separate classes to avoid code duplication from SelectDeParser. \n\n[a3133](https://github.com/JSQLParser/JSqlParser/commit/a31333a65141e27) James Heather *2015-11-24 14:57:04*\n\n**corrects parsing error**\n\n\n[975cd](https://github.com/JSQLParser/JSqlParser/commit/975cddfb85bd0b3) wumpz *2015-11-20 22:44:01*\n\n****\n\n\n[f1d21](https://github.com/JSQLParser/JSqlParser/commit/f1d213636786e0a) wumpz *2015-11-20 14:27:19*\n\n**fixes #194**\n\n\n[f1c98](https://github.com/JSQLParser/JSqlParser/commit/f1c9835bd34d3f1) wumpz *2015-11-18 21:17:49*\n\n**support INSERT [LOW_PRIORITY | DELAYED | HIGH_PRIORITY] [IGNORE] ...**\n\n\n[00c18](https://github.com/JSQLParser/JSqlParser/commit/00c18698acb0316) wanghai *2015-11-18 09:10:31*\n\n**corrected lookahead**\n\n\n[a97e9](https://github.com/JSQLParser/JSqlParser/commit/a97e9c94fef03c6) wumpz *2015-11-17 22:24:57*\n\n**fixes #192, fixes #191**\n\n\n[2fddf](https://github.com/JSQLParser/JSqlParser/commit/2fddf8c8bf4072c) wumpz *2015-11-14 23:56:53*\n\n**replaceDeParser parser itemList**\n\n\n[3c605](https://github.com/JSQLParser/JSqlParser/commit/3c6057b1f8d6311) wanghai *2015-11-13 08:45:21*\n\n**support insert ... on duplicate key update...**\n\n\n[7d7fa](https://github.com/JSQLParser/JSqlParser/commit/7d7fae8a31abc3c) wanghai *2015-11-13 08:43:57*\n\n**fixes #181, added drop deparser**\n\n\n[44091](https://github.com/JSQLParser/JSqlParser/commit/44091c622316769) wumpz *2015-11-09 22:33:56*\n\n**alter table support improved**\n\n\n[ad0dd](https://github.com/JSQLParser/JSqlParser/commit/ad0dd23e8951e27) wumpz *2015-10-27 22:37:56*\n\n**fixes #180**\n\n\n[0bb23](https://github.com/JSQLParser/JSqlParser/commit/0bb2358eaff8956) wumpz *2015-10-21 06:44:00*\n\n**#182**\n\n\n[a3695](https://github.com/JSQLParser/JSqlParser/commit/a369537d0d3f51c) wumpz *2015-10-21 05:56:19*\n\n**Support for alter table drop column/constraint**\n\n* Fix for Issue #184 \n\n[58dd2](https://github.com/JSQLParser/JSqlParser/commit/58dd28aaf9b9273) schweighart *2015-10-20 21:34:51*\n\n**updated readme**\n\n\n[e570a](https://github.com/JSQLParser/JSqlParser/commit/e570a919f24d385) wumpz *2015-10-19 13:16:54*\n\n**Improved required coverage**\n\n\n[41cbd](https://github.com/JSQLParser/JSqlParser/commit/41cbd7f96ab9139) Rapševičius Valdas *2015-10-14 11:05:36*\n\n**Refactored Oracle Hint tests, added set selects**\n\n\n[7b4fe](https://github.com/JSQLParser/JSqlParser/commit/7b4feb00cd4d312) Rapševičius Valdas *2015-10-13 22:37:29*\n\n**Added OracleHint class, grammar and model support, tests**\n\n\n[f7f8d](https://github.com/JSQLParser/JSqlParser/commit/f7f8d03bfac9e09) Rapševičius Valdas *2015-10-13 22:06:16*\n\n**resolved choice conflict**\n\n\n[b6f71](https://github.com/JSQLParser/JSqlParser/commit/b6f71e619c1a24d) wumpz *2015-10-08 11:11:42*\n\n**fixes #178, merged upstream**\n\n\n[11dbd](https://github.com/JSQLParser/JSqlParser/commit/11dbda3b999d82b) Gabor Bota *2015-10-08 09:20:15*\n\n**added restrict and set null for alter statement**\n\n\n[36379](https://github.com/JSQLParser/JSqlParser/commit/36379b2f646326c) wumpz *2015-10-07 21:38:53*\n\n**fixes #178**\n\n\n[cb267](https://github.com/JSQLParser/JSqlParser/commit/cb2674e2b94ee95) Gabor Bota *2015-10-07 13:00:53*\n\n**fixes #174**\n\n\n[da1e0](https://github.com/JSQLParser/JSqlParser/commit/da1e074b308d74a) wumpz *2015-10-06 21:18:27*\n\n**fixes #174**\n\n\n[8d419](https://github.com/JSQLParser/JSqlParser/commit/8d419d31bb8be29) wumpz *2015-10-06 21:15:40*\n\n**simple merge implementation**\n\n\n[bc4bc](https://github.com/JSQLParser/JSqlParser/commit/bc4bc9e52192b21) wumpz *2015-10-01 22:52:36*\n\n**simple merge implementation**\n\n\n[af5a0](https://github.com/JSQLParser/JSqlParser/commit/af5a09078134f6c) wumpz *2015-10-01 22:44:50*\n\n**fixes  #176**\n\n\n[c6e93](https://github.com/JSQLParser/JSqlParser/commit/c6e9389599ed161) wumpz *2015-10-01 21:50:13*\n\n**fixes  #176**\n\n\n[fb4d4](https://github.com/JSQLParser/JSqlParser/commit/fb4d43b5a41d66b) wumpz *2015-10-01 21:45:44*\n\n**fixes  #177**\n\n\n[9999c](https://github.com/JSQLParser/JSqlParser/commit/9999c50ef3908a3) wumpz *2015-10-01 21:11:43*\n\n****\n\n\n[1fb42](https://github.com/JSQLParser/JSqlParser/commit/1fb426e08300adf) wumpz *2015-10-01 20:24:27*\n\n**merge impl started**\n\n\n[8d8c0](https://github.com/JSQLParser/JSqlParser/commit/8d8c0e4ce70d944) wumpz *2015-09-24 22:23:11*\n\n**fixes #172**\n\n\n[c690f](https://github.com/JSQLParser/JSqlParser/commit/c690f7f1efa5815) wumpz *2015-09-22 05:33:16*\n\n****\n\n\n[ae2c8](https://github.com/JSQLParser/JSqlParser/commit/ae2c87f5a19d9b0) wumpz *2015-09-16 18:55:58*\n\n****\n\n\n[03a4f](https://github.com/JSQLParser/JSqlParser/commit/03a4fc7d339cbb0) wumpz *2015-09-16 05:53:18*\n\n**fixes #167**\n\n\n[57f30](https://github.com/JSQLParser/JSqlParser/commit/57f3099b869cc43) wumpz *2015-09-16 05:52:27*\n\n**fixes #167**\n\n\n[71d9f](https://github.com/JSQLParser/JSqlParser/commit/71d9fd97fd92fbc) wumpz *2015-09-16 05:49:45*\n\n**fixes #77**\n\n\n[0e51d](https://github.com/JSQLParser/JSqlParser/commit/0e51dacc2a0df3a) wumpz *2015-09-16 05:46:49*\n\n**fixes #170**\n\n\n[cf9bf](https://github.com/JSQLParser/JSqlParser/commit/cf9bf8453791662) wumpz *2015-09-13 21:26:48*\n\n\n## jsqlparser-0.9.4 (2015-09-13)\n\n### Other changes\n\n****\n\n\n[e9024](https://github.com/JSQLParser/JSqlParser/commit/e9024106aa5d994) wumpz *2015-09-07 19:26:26*\n\n**fixes #165**\n\n\n[28101](https://github.com/JSQLParser/JSqlParser/commit/28101309a3502db) wumpz *2015-09-03 20:03:48*\n\n**fixes #165**\n\n\n[bf06e](https://github.com/JSQLParser/JSqlParser/commit/bf06e6ccc269efa) wumpz *2015-09-03 20:02:25*\n\n**fixes #166**\n\n\n[c244c](https://github.com/JSQLParser/JSqlParser/commit/c244ccb5cd00d0d) wumpz *2015-09-03 14:02:17*\n\n**fixed #162**\n\n\n[46381](https://github.com/JSQLParser/JSqlParser/commit/463817b435ffdd5) wumpz *2015-08-07 20:48:55*\n\n**fixed #162**\n\n\n[e3b73](https://github.com/JSQLParser/JSqlParser/commit/e3b73a35afbcb74) wumpz *2015-08-07 20:48:00*\n\n**fixed #160**\n\n\n[432c0](https://github.com/JSQLParser/JSqlParser/commit/432c0ef9a7d462d) wumpz *2015-08-07 20:24:40*\n\n**no message**\n\n\n[e91e0](https://github.com/JSQLParser/JSqlParser/commit/e91e074d8c773a6) wumpz *2015-08-05 20:44:25*\n\n**Add support for variable support to \"SELECT SKIP <ROWCOUNT> FIRST <ROWCOUNT>...\" construct**\n\n* The grammar for the construct in informix [1] mentions the possibility, that &lt;ROWCOUNT&gt; can be either \n* an integer or a host variable or local SPL variable storing the value of max. The case for plain integers and \n* jdbc variables is covered by the first commit While this commit adds support for constructs using SPL \n* variables. SPL variables must follow identifier rules [2][3]. \n* [1] http://www-01.ibm.com/support/knowledgecenter/SSGU8G_12.1.0/com.ibm.sqls.doc/ids_sqs_0156.htm \n* [2] http://www-01.ibm.com/support/knowledgecenter/SSGU8G_12.1.0/com.ibm.sqls.doc/ids_sqs_1306.htm?lang&#x3D;de \n* [3] http://www-01.ibm.com/support/knowledgecenter/SSGU8G_12.1.0/com.ibm.sqls.doc/ids_sqs_1660.htm%23ids_sqs_1660?lang&#x3D;de \n\n[9e77b](https://github.com/JSQLParser/JSqlParser/commit/9e77b6bd55ce242) Matthias Bläsing *2015-08-02 14:03:23*\n\n**simplified lookahead**\n\n\n[a44ac](https://github.com/JSQLParser/JSqlParser/commit/a44acb7a785394b) wumpz *2015-08-01 21:42:46*\n\n**simplified lookahead**\n\n\n[0fc8e](https://github.com/JSQLParser/JSqlParser/commit/0fc8e29a3a5df3d) wumpz *2015-08-01 21:33:31*\n\n**Update README.md**\n\n\n[b3d76](https://github.com/JSQLParser/JSqlParser/commit/b3d76e7847c6f90) Tobias *2015-07-31 05:27:21*\n\n****\n\n\n[6f2a1](https://github.com/JSQLParser/JSqlParser/commit/6f2a1323d03ae00) wumpz *2015-07-30 21:35:13*\n\n**added another testcase for #154**\n\n\n[e889c](https://github.com/JSQLParser/JSqlParser/commit/e889cf345a84b8d) wumpz *2015-07-29 10:50:10*\n\n**Implement support for \"SELECT SKIP <ROWCOUNT> FIRST <ROWCOUNT>...\" construct**\n\n\n[4a33d](https://github.com/JSQLParser/JSqlParser/commit/4a33d8c380260d2) Matthias Bläsing *2015-07-25 19:16:23*\n\n**test for #154 included**\n\n\n[001d6](https://github.com/JSQLParser/JSqlParser/commit/001d665d32c6df5) wumpz *2015-07-23 09:49:24*\n\n****\n\n\n[157ee](https://github.com/JSQLParser/JSqlParser/commit/157eebf7a07e23c) wumpz *2015-07-15 20:55:25*\n\n**fixes #150**\n\n\n[5b3ec](https://github.com/JSQLParser/JSqlParser/commit/5b3ec5ac9f502d4) wumpz *2015-07-15 20:42:54*\n\n**fixes #149**\n\n\n[d2b07](https://github.com/JSQLParser/JSqlParser/commit/d2b0706e6f175db) wumpz *2015-07-15 20:20:14*\n\n**Fix inline usage of foreign keys in CREATE TABLE statements**\n\n\n[23c19](https://github.com/JSQLParser/JSqlParser/commit/23c19a53fd72c26) Georg Semmler *2015-07-09 15:41:39*\n\n**fixes #146**\n\n\n[978b6](https://github.com/JSQLParser/JSqlParser/commit/978b60ebd0ffbbd) wumpz *2015-07-03 13:19:54*\n\n**reincluded Apache 2.0 license**\n\n\n[83899](https://github.com/JSQLParser/JSqlParser/commit/83899f824659012) wumpz *2015-07-02 20:54:03*\n\n**reincluded Apache 2.0 license**\n\n\n[7e52d](https://github.com/JSQLParser/JSqlParser/commit/7e52dd7cb474bc3) wumpz *2015-07-02 20:52:04*\n\n**corrected deparser**\n\n\n[cc4a5](https://github.com/JSQLParser/JSqlParser/commit/cc4a5fa149aeac4) wumpz *2015-07-01 20:51:03*\n\n**updated readme**\n\n\n[44716](https://github.com/JSQLParser/JSqlParser/commit/4471653646f286e) wumpz *2015-07-01 20:04:46*\n\n**fixes #138 and AnyComparisionExpression**\n\n\n[ab2b2](https://github.com/JSQLParser/JSqlParser/commit/ab2b2c07759af48) wumpz *2015-07-01 19:55:02*\n\n**null toString used**\n\n\n[e425d](https://github.com/JSQLParser/JSqlParser/commit/e425dc2528cc4d3) wumpz *2015-06-24 21:20:29*\n\n**completed any and all comparisions**\n\n\n[fc076](https://github.com/JSQLParser/JSqlParser/commit/fc076e89580ca78) wumpz *2015-06-24 20:59:45*\n\n**Exceptions skiped during coverage tests**\n\n\n[1849c](https://github.com/JSQLParser/JSqlParser/commit/1849c5b3f5ca03f) wumpz *2015-06-10 05:50:43*\n\n**Update README.md**\n\n\n[d561d](https://github.com/JSQLParser/JSqlParser/commit/d561d8ad60b84fc) Tobias *2015-06-09 21:39:04*\n\n****\n\n\n[a17d6](https://github.com/JSQLParser/JSqlParser/commit/a17d6280b1ecdf6) wumpz *2015-06-09 21:29:55*\n\n**coveralls**\n\n\n[5858a](https://github.com/JSQLParser/JSqlParser/commit/5858aa7a2215300) wumpz *2015-06-09 21:03:49*\n\n****\n\n\n[1d71c](https://github.com/JSQLParser/JSqlParser/commit/1d71c51a934dd1e) wumpz *2015-06-08 20:14:29*\n\n**completed ExpressionVisitorAdapter**\n\n\n[8ec0b](https://github.com/JSQLParser/JSqlParser/commit/8ec0b195ba8da00) wumpz *2015-06-07 22:37:50*\n\n**completed ExpressionVisitorAdapter**\n\n\n[cf703](https://github.com/JSQLParser/JSqlParser/commit/cf703d8225908d9) wumpz *2015-06-05 22:32:50*\n\n**completed ExpressionVisitorAdapter**\n\n\n[348fd](https://github.com/JSQLParser/JSqlParser/commit/348fd7ffce92125) wumpz *2015-06-05 22:29:30*\n\n**updated some plugin versions**\n\n\n[94c63](https://github.com/JSQLParser/JSqlParser/commit/94c63556b9d92a1) wumpz *2015-06-05 21:08:48*\n\n**fixes #143**\n\n* some refactorings done \n\n[4d2a0](https://github.com/JSQLParser/JSqlParser/commit/4d2a0a1151faff1) wumpz *2015-06-05 20:50:28*\n\n**fixes #143**\n\n* some refactorings done \n\n[f71c3](https://github.com/JSQLParser/JSqlParser/commit/f71c307f15c4cde) wumpz *2015-06-05 20:48:45*\n\n**fixes #142**\n\n\n[3d340](https://github.com/JSQLParser/JSqlParser/commit/3d340377b37ddd9) wumpz *2015-06-05 20:28:28*\n\n**fixes #141**\n\n\n[b78ed](https://github.com/JSQLParser/JSqlParser/commit/b78ed4b46472902) wumpz *2015-06-05 20:09:32*\n\n****\n\n\n[5123f](https://github.com/JSQLParser/JSqlParser/commit/5123fe295a4142b) wumpz *2015-06-05 20:07:12*\n\n**root nodes established but not linked**\n\n\n[71305](https://github.com/JSQLParser/JSqlParser/commit/71305d9cbdc0e5b) wumpz *2015-05-31 20:39:43*\n\n**root nodes established but not linked**\n\n\n[edd0c](https://github.com/JSQLParser/JSqlParser/commit/edd0c765ea34898) wumpz *2015-05-31 19:54:52*\n\n**astnodes for columns and tables**\n\n\n[d66a9](https://github.com/JSQLParser/JSqlParser/commit/d66a93a4066ccff) wumpz *2015-05-29 22:49:13*\n\n**simple jjtree start**\n\n\n[e594e](https://github.com/JSQLParser/JSqlParser/commit/e594e591e79f555) wumpz *2015-05-27 22:34:35*\n\n**simple jjtree start**\n\n\n[d9f5f](https://github.com/JSQLParser/JSqlParser/commit/d9f5fef5f9d43e1) wumpz *2015-05-24 21:08:32*\n\n**fixes   #134 - preserve order of query**\n\n\n[59470](https://github.com/JSQLParser/JSqlParser/commit/594705ae61fd1b5) wumpz *2015-05-24 20:28:51*\n\n**fixes #136**\n\n\n[5adeb](https://github.com/JSQLParser/JSqlParser/commit/5adebeee953bd2a) tejksat *2015-05-24 10:00:31*\n\n**fixes   #134**\n\n\n[d99e6](https://github.com/JSQLParser/JSqlParser/commit/d99e603e0e968f8) wumpz *2015-05-21 21:10:44*\n\n**fixes  #72**\n\n\n[8b540](https://github.com/JSQLParser/JSqlParser/commit/8b540614d7dbe9e) wumpz *2015-05-21 20:28:50*\n\n**fixes  #72**\n\n\n[3aaf1](https://github.com/JSQLParser/JSqlParser/commit/3aaf11d348e0b16) wumpz *2015-05-21 20:26:15*\n\n**group_concat started**\n\n\n[adca3](https://github.com/JSQLParser/JSqlParser/commit/adca3efe84aaeb3) wumpz *2015-05-20 21:48:36*\n\n****\n\n\n[3563c](https://github.com/JSQLParser/JSqlParser/commit/3563c2188f4ffde) wumpz *2015-05-12 22:32:17*\n\n\n## jsqlparser-0.9.3 (2015-05-12)\n\n### Other changes\n\n**fixes  #69**\n\n\n[16034](https://github.com/JSQLParser/JSqlParser/commit/16034878352a0fe) wumpz *2015-05-10 22:11:41*\n\n**fixes  #69**\n\n\n[35164](https://github.com/JSQLParser/JSqlParser/commit/35164e58c437fdc) wumpz *2015-05-10 22:02:24*\n\n**fixes #90**\n\n\n[536ba](https://github.com/JSQLParser/JSqlParser/commit/536ba9d091fbe75) wumpz *2015-05-07 22:53:42*\n\n**fixes #90**\n\n\n[db4a2](https://github.com/JSQLParser/JSqlParser/commit/db4a27e284ace55) wumpz *2015-05-07 22:50:35*\n\n****\n\n\n[55b8e](https://github.com/JSQLParser/JSqlParser/commit/55b8e7a4c9c947b) wumpz *2015-05-07 18:41:22*\n\n**fixes #129**\n\n\n[45132](https://github.com/JSQLParser/JSqlParser/commit/45132a7e3d57b15) wumpz *2015-04-30 19:07:21*\n\n**fixes #128**\n\n\n[aa291](https://github.com/JSQLParser/JSqlParser/commit/aa2913da90a4a05) wumpz *2015-04-27 21:59:00*\n\n**Update README.md**\n\n\n[c4f24](https://github.com/JSQLParser/JSqlParser/commit/c4f24e6a30b0b9d) Tobias *2015-04-23 08:56:37*\n\n**fixes #126 - allows brackets around select**\n\n\n[64b22](https://github.com/JSQLParser/JSqlParser/commit/64b22e45987284e) wumpz *2015-04-22 22:03:21*\n\n**fixes #125 - added values as a column name**\n\n\n[ac785](https://github.com/JSQLParser/JSqlParser/commit/ac785a405697df4) wumpz *2015-04-16 21:01:18*\n\n**fixes #110 - first implementation**\n\n\n[94195](https://github.com/JSQLParser/JSqlParser/commit/941952f58f5b5be) wumpz *2015-04-11 17:32:48*\n\n**updated readme**\n\n\n[f2d48](https://github.com/JSQLParser/JSqlParser/commit/f2d48cf28f452d4) wumpz *2015-04-09 21:52:40*\n\n**solved some oracle test sql parsings**\n\n\n[b76ba](https://github.com/JSQLParser/JSqlParser/commit/b76baa31439f841) wumpz *2015-04-09 21:45:16*\n\n**fixes  #122**\n\n\n[46f51](https://github.com/JSQLParser/JSqlParser/commit/46f51972cf47885) wumpz *2015-04-09 21:02:10*\n\n**fixes  #123**\n\n\n[68f47](https://github.com/JSQLParser/JSqlParser/commit/68f47dc7c49c1b2) wumpz *2015-04-09 20:23:50*\n\n**refactoring**\n\n\n[26e1c](https://github.com/JSQLParser/JSqlParser/commit/26e1c0ac1c9221f) wumpz *2015-04-08 21:20:40*\n\n**refactoring**\n\n\n[a9768](https://github.com/JSQLParser/JSqlParser/commit/a97686797e77480) wumpz *2015-04-08 21:17:30*\n\n**fixes #120**\n\n\n[c3995](https://github.com/JSQLParser/JSqlParser/commit/c39954916a0ab71) wumpz *2015-04-08 06:11:06*\n\n**first try to fix  #114**\n\n\n[a0d87](https://github.com/JSQLParser/JSqlParser/commit/a0d8733b6c57055) wumpz *2015-04-07 00:48:55*\n\n****\n\n\n[73822](https://github.com/JSQLParser/JSqlParser/commit/738226709622311) wumpz *2015-04-06 20:53:58*\n\n**Update README.md**\n\n\n[ad91b](https://github.com/JSQLParser/JSqlParser/commit/ad91b733c8b495c) Tobias *2015-04-06 20:34:30*\n\n**travis**\n\n\n[ade82](https://github.com/JSQLParser/JSqlParser/commit/ade827e1eda7248) wumpz *2015-04-06 20:04:47*\n\n****\n\n\n[673e0](https://github.com/JSQLParser/JSqlParser/commit/673e00b1996eaac) wumpz *2015-04-06 19:08:34*\n\n**fixes  #109**\n\n\n[a3285](https://github.com/JSQLParser/JSqlParser/commit/a32854822885741) wumpz *2015-04-02 23:08:59*\n\n**fixes #119**\n\n\n[c9b58](https://github.com/JSQLParser/JSqlParser/commit/c9b58b2b2dfba67) wumpz *2015-04-01 20:31:03*\n\n**fixes #117**\n\n\n[a3fc1](https://github.com/JSQLParser/JSqlParser/commit/a3fc1f23701d6d6) wumpz *2015-03-28 20:02:28*\n\n**fixes #117**\n\n\n[b3d91](https://github.com/JSQLParser/JSqlParser/commit/b3d91de4d54153f) wumpz *2015-03-28 19:50:20*\n\n****\n\n\n[f194b](https://github.com/JSQLParser/JSqlParser/commit/f194b7cb7cc810d) wumpz *2015-03-04 23:26:13*\n\n**corrected lookup**\n\n\n[8598d](https://github.com/JSQLParser/JSqlParser/commit/8598da5760028d6) wumpz *2015-03-04 22:33:16*\n\n**updated readme**\n\n\n[5472e](https://github.com/JSQLParser/JSqlParser/commit/5472e2d60e95590) wumpz *2015-03-04 22:28:45*\n\n**fixes #115**\n\n\n[a3e02](https://github.com/JSQLParser/JSqlParser/commit/a3e024a0b002ad0) wumpz *2015-03-04 22:18:59*\n\n**fixes  #116**\n\n\n[c916f](https://github.com/JSQLParser/JSqlParser/commit/c916f14c1e5f82c) wumpz *2015-03-04 21:55:29*\n\n**Update README.md**\n\n\n[18089](https://github.com/JSQLParser/JSqlParser/commit/18089564f2b9efb) Tobias *2015-02-12 22:54:15*\n\n\n## jsqlparser-0.9.2 (2015-02-12)\n\n### Other changes\n\n**updated readme**\n\n\n[13d29](https://github.com/JSQLParser/JSqlParser/commit/13d29e0d545bbaa) wumpz *2015-02-12 21:43:13*\n\n**introduced user variables: fixes #107**\n\n\n[0c288](https://github.com/JSQLParser/JSqlParser/commit/0c2889ca34c88fd) wumpz *2015-02-11 21:21:24*\n\n**maybe not correct alter statement**\n\n\n[ab001](https://github.com/JSQLParser/JSqlParser/commit/ab00181f492820a) wumpz *2015-02-04 22:53:06*\n\n**fixes #102**\n\n\n[d603e](https://github.com/JSQLParser/JSqlParser/commit/d603e41768a49fd) wumpz *2015-02-04 21:16:18*\n\n**Update README.md**\n\n\n[66517](https://github.com/JSQLParser/JSqlParser/commit/6651771afb0754f) Tobias *2015-02-01 20:03:21*\n\n**fixes #91**\n\n\n[495a7](https://github.com/JSQLParser/JSqlParser/commit/495a7f2590703db) wumpz *2015-02-01 00:07:07*\n\n**Update README.md**\n\n\n[d0ce4](https://github.com/JSQLParser/JSqlParser/commit/d0ce413581ace0d) Tobias *2015-01-30 21:30:28*\n\n**fixes #89**\n\n\n[4ac85](https://github.com/JSQLParser/JSqlParser/commit/4ac85f0b27c21ba) wumpz *2015-01-21 20:15:55*\n\n**pivot function test**\n\n\n[3cc5a](https://github.com/JSQLParser/JSqlParser/commit/3cc5acd2ee83f76) wumpz *2015-01-16 23:33:19*\n\n**Update README.md**\n\n\n[3bec5](https://github.com/JSQLParser/JSqlParser/commit/3bec524f829975b) Tobias *2015-01-11 10:37:55*\n\n**fixes #99**\n\n\n[d4bc7](https://github.com/JSQLParser/JSqlParser/commit/d4bc726944700c1) wumpz *2015-01-10 23:10:04*\n\n**fixes #99**\n\n\n[5ac27](https://github.com/JSQLParser/JSqlParser/commit/5ac27a7ceb6166d) wumpz *2015-01-10 23:08:28*\n\n**small grammar cleanup**\n\n\n[e4756](https://github.com/JSQLParser/JSqlParser/commit/e47566636b7fd83) wumpz *2014-12-18 21:24:23*\n\n**fixes #93**\n\n\n[02be9](https://github.com/JSQLParser/JSqlParser/commit/02be9cdbca314f6) wumpz *2014-12-10 23:33:19*\n\n**fixes #92**\n\n\n[e902a](https://github.com/JSQLParser/JSqlParser/commit/e902a41c71e1b44) wumpz *2014-12-10 23:17:40*\n\n**updated readme**\n\n\n[32bf3](https://github.com/JSQLParser/JSqlParser/commit/32bf3a2f1798270) wumpz *2014-12-10 21:56:12*\n\n**add group ba additions to SelectUtils**\n\n\n[dd77b](https://github.com/JSQLParser/JSqlParser/commit/dd77b6c4f2a1f24) wumpz *2014-12-08 22:51:59*\n\n****\n\n\n[adcaf](https://github.com/JSQLParser/JSqlParser/commit/adcaf0fe83dad8c) wumpz *2014-12-07 21:54:35*\n\n**fixes #88**\n\n\n[0d5cc](https://github.com/JSQLParser/JSqlParser/commit/0d5cc58237dbaae) wumpz *2014-12-03 23:45:07*\n\n**oracle colls started**\n\n\n[e8a18](https://github.com/JSQLParser/JSqlParser/commit/e8a18cc8b76c6bd) wumpz *2014-11-30 20:41:53*\n\n**options**\n\n\n[2e85a](https://github.com/JSQLParser/JSqlParser/commit/2e85a16ebf7bfe3) wumpz *2014-11-25 00:11:17*\n\n**updated readme**\n\n\n[72340](https://github.com/JSQLParser/JSqlParser/commit/72340e55d94f68e) wumpz *2014-11-24 20:17:52*\n\n**added create table parameters to deparser**\n\n\n[05967](https://github.com/JSQLParser/JSqlParser/commit/05967cce8c528db) wumpz *2014-11-24 20:10:48*\n\n**added create parameters to include into deparser**\n\n\n[6f89e](https://github.com/JSQLParser/JSqlParser/commit/6f89e35e4544112) wumpz *2014-11-23 23:36:35*\n\n**added commit keyword**\n\n\n[f276b](https://github.com/JSQLParser/JSqlParser/commit/f276b33528821ad) wumpz *2014-11-23 23:26:40*\n\n**fixes #87**\n\n\n[2056c](https://github.com/JSQLParser/JSqlParser/commit/2056cb064dffb3f) wumpz *2014-11-22 00:27:01*\n\n**simple cleanup**\n\n\n[6a98d](https://github.com/JSQLParser/JSqlParser/commit/6a98d2bd8dd504b) wumpz *2014-11-20 20:42:39*\n\n**withitem - deparsing merged and modified**\n\n\n[20e0f](https://github.com/JSQLParser/JSqlParser/commit/20e0f48c1a56da4) wumpz *2014-11-03 22:54:58*\n\n**use accept() instead of toString() on StatementDeParser**\n\n\n[67497](https://github.com/JSQLParser/JSqlParser/commit/674974ac08f822d) reed1 *2014-11-02 06:53:07*\n\n**fixes #84**\n\n\n[a5031](https://github.com/JSQLParser/JSqlParser/commit/a5031b403af80e4) wumpz *2014-10-31 22:57:23*\n\n**for update selects implemented**\n\n\n[92efe](https://github.com/JSQLParser/JSqlParser/commit/92efe5b962ede77) wumpz *2014-10-30 23:59:42*\n\n**allow 'key' as object name**\n\n\n[32b0a](https://github.com/JSQLParser/JSqlParser/commit/32b0a67999cf9ca) wumpz *2014-10-30 23:19:30*\n\n**update readme**\n\n\n[d9951](https://github.com/JSQLParser/JSqlParser/commit/d9951d7bc5129da) wumpz *2014-10-22 22:03:20*\n\n**little housekeeping**\n\n\n[5fb21](https://github.com/JSQLParser/JSqlParser/commit/5fb21dc2f605f81) wumpz *2014-10-22 21:51:37*\n\n**Manage OFFSET and FETCH clauses in dedicated classes and rules in**\n\n* jsqlparsercc.jj \n* Manage also jdbc parameter in these clauses. \n\n[26524](https://github.com/JSQLParser/JSqlParser/commit/26524ac850461cb) LionelNirva *2014-10-10 14:38:20*\n\n**added test for wrong top distinct order.**\n\n\n[ccefb](https://github.com/JSQLParser/JSqlParser/commit/ccefbeb29ac6693) wumpz *2014-10-09 19:23:52*\n\n**Add support for new SQL Server 2012 and Oracle 12c versions of LIMIT**\n\n* (equivalent to MySql and PostgreSQL LIMIT ... OFFSET ... clauses) for \n* parsing and deparsing. \n\n[dc215](https://github.com/JSQLParser/JSqlParser/commit/dc215bb6b8cf70b) LionelNirva *2014-10-08 12:38:04*\n\n**Unit test for the fix Bug when Deparsing SQL Server request having TOP**\n\n* and DISTINCT clauses. \n\n[c2ad9](https://github.com/JSQLParser/JSqlParser/commit/c2ad9d2b2c2ee9f) LionelNirva *2014-10-07 14:31:43*\n\n**little housekeeping**\n\n\n[fd25a](https://github.com/JSQLParser/JSqlParser/commit/fd25ab4b9279003) wumpz *2014-10-05 21:44:57*\n\n**little housekeeping**\n\n\n[c3ec6](https://github.com/JSQLParser/JSqlParser/commit/c3ec64d426102cc) wumpz *2014-10-05 21:38:24*\n\n**compile error corrected**\n\n\n[8ae4b](https://github.com/JSQLParser/JSqlParser/commit/8ae4bead1868ac7) wumpz *2014-10-05 21:15:34*\n\n**Fix Bug when Deparsing SQL Server request having TOP and DISTINCT**\n\n* clauses. SQL Server requires the DISTINCT clause to be the first. \n\n[7ac70](https://github.com/JSQLParser/JSqlParser/commit/7ac7002d1276f01) LionelNirva *2014-10-03 16:34:49*\n\n**Update UpdateTest.java**\n\n* Add an SQL test for Update with Select \n\n[aec82](https://github.com/JSQLParser/JSqlParser/commit/aec82516c9d0db6) CeeKayGit *2014-10-01 21:34:51*\n\n**Update UpdateDeParser.java**\n\n\n[f2fec](https://github.com/JSQLParser/JSqlParser/commit/f2fecb7b62f5882) CeeKayGit *2014-10-01 21:18:33*\n\n**Update UpdateDeParser.java**\n\n\n[e31ac](https://github.com/JSQLParser/JSqlParser/commit/e31ac1ad7090fc2) CeeKayGit *2014-10-01 20:51:26*\n\n**Update Update.java**\n\n* Add necessary Select import for Update with Select \n\n[8321a](https://github.com/JSQLParser/JSqlParser/commit/8321aae44a6adce) CeeKayGit *2014-10-01 20:37:42*\n\n**Update UpdateDeParser.java**\n\n* Extend the deparser to support DB2 Updates with Select clause \n\n[3a7bf](https://github.com/JSQLParser/JSqlParser/commit/3a7bf9d520ead88) CeeKayGit *2014-10-01 20:12:14*\n\n**Update JSqlParserCC.jj**\n\n* For DB2 &quot;$&quot; is also a standard letter, so handle &quot;$&quot; as #LETTER. \n\n[a6383](https://github.com/JSQLParser/JSqlParser/commit/a6383a52ccee448) CeeKayGit *2014-09-30 20:56:13*\n\n**Update Update.java**\n\n* Add support for DB2 Updates with Select clause \n\n[1bdb6](https://github.com/JSQLParser/JSqlParser/commit/1bdb69b8891ee26) CeeKayGit *2014-09-30 20:52:21*\n\n**Update JSqlParserCC.jj**\n\n* Add support for DB2 Updates with Select clause \n\n[17e3d](https://github.com/JSQLParser/JSqlParser/commit/17e3d539a4ce6bd) CeeKayGit *2014-09-30 20:47:54*\n\n**Update README.md**\n\n\n[23279](https://github.com/JSQLParser/JSqlParser/commit/232795fc575cdf1) Tobias *2014-09-23 20:32:34*\n\n\n## jsqlparser-0.9.1 (2014-09-23)\n\n### Other changes\n\n**Update README.md**\n\n\n[267b4](https://github.com/JSQLParser/JSqlParser/commit/267b443e23b95a2) Tobias *2014-09-22 07:25:49*\n\n**corrected typo**\n\n\n[90c93](https://github.com/JSQLParser/JSqlParser/commit/90c932332a6b8ed) wumpz *2014-09-07 20:28:38*\n\n**refactored join processor to be more restrictive**\n\n\n[f1544](https://github.com/JSQLParser/JSqlParser/commit/f154446364fd5db) wumpz *2014-09-06 20:24:16*\n\n**simple execute clause support**\n\n\n[531d6](https://github.com/JSQLParser/JSqlParser/commit/531d6177dfc03d1) wumpz *2014-08-14 21:46:11*\n\n**simple start for execute**\n\n\n[d6f01](https://github.com/JSQLParser/JSqlParser/commit/d6f0101b9a3d2e4) wumpz *2014-08-13 23:17:08*\n\n**simple start for execute**\n\n\n[406a1](https://github.com/JSQLParser/JSqlParser/commit/406a138cf3af9f7) wumpz *2014-08-13 23:08:35*\n\n**updated readme**\n\n\n[1532d](https://github.com/JSQLParser/JSqlParser/commit/1532d15c3dad9ff) wumpz *2014-08-12 14:33:26*\n\n**correced select into parsing and deparsing**\n\n\n[0b7f3](https://github.com/JSQLParser/JSqlParser/commit/0b7f3007dac51cb) wumpz *2014-08-12 14:29:46*\n\n**refactored grammar a bit**\n\n\n[096e8](https://github.com/JSQLParser/JSqlParser/commit/096e8742b6fff86) wumpz *2014-08-05 20:58:15*\n\n**improved insert clause**\n\n\n[a4de6](https://github.com/JSQLParser/JSqlParser/commit/a4de602442a73da) wumpz *2014-08-04 22:09:19*\n\n**corrected a failing test**\n\n\n[24dc0](https://github.com/JSQLParser/JSqlParser/commit/24dc08db8b9f536) wumpz *2014-07-30 20:47:49*\n\n**updated readme**\n\n\n[fc0ba](https://github.com/JSQLParser/JSqlParser/commit/fc0ba6a535c3f30) wumpz *2014-07-30 20:43:23*\n\n**limit 0 and limit null included**\n\n\n[50d3e](https://github.com/JSQLParser/JSqlParser/commit/50d3e8b4224bbaf) wumpz *2014-07-30 20:41:40*\n\n**Add support for LIMIT 0 and LIMIT NULL statements**\n\n\n[6db00](https://github.com/JSQLParser/JSqlParser/commit/6db009418e925ca) Michaël Cervera *2014-07-29 21:58:29*\n\n**unlogged inlucded in deparser**\n\n\n[e9939](https://github.com/JSQLParser/JSqlParser/commit/e9939fdfdfca726) wumpz *2014-07-27 21:42:18*\n\n**Add support for 'UNLOGGED' tables**\n\n* Support the PostgreSQL 9.1+ ‘UNLOGGED’ table feature \n\n[eb05c](https://github.com/JSQLParser/JSqlParser/commit/eb05ce30cb90b93) Michaël Cervera *2014-07-27 20:49:00*\n\n**create table implemented version 2**\n\n\n[98903](https://github.com/JSQLParser/JSqlParser/commit/989033d24e9b3a9) wumpz *2014-07-26 19:56:53*\n\n**recent changes made more oracle tests succeed**\n\n\n[bbf36](https://github.com/JSQLParser/JSqlParser/commit/bbf360e5620b073) wumpz *2014-07-24 20:04:01*\n\n**updated readme**\n\n\n[262d4](https://github.com/JSQLParser/JSqlParser/commit/262d48922d66d0f) wumpz *2014-07-24 19:59:25*\n\n**replaced column list in expression list for partition by of analytic expressions**\n\n\n[2ebaa](https://github.com/JSQLParser/JSqlParser/commit/2ebaaf03602a13b) wumpz *2014-07-24 19:53:17*\n\n**updated readme**\n\n\n[55e68](https://github.com/JSQLParser/JSqlParser/commit/55e68bfb4f84fa5) wumpz *2014-07-22 20:49:45*\n\n**implemented create table .. as select ..**\n\n\n[23b93](https://github.com/JSQLParser/JSqlParser/commit/23b938c096eaf67) wumpz *2014-07-22 20:48:00*\n\n**simple improvements**\n\n\n[5b3ea](https://github.com/JSQLParser/JSqlParser/commit/5b3ea032ff50712) wumpz *2014-07-16 20:27:54*\n\n**added lookahead for regexp binary**\n\n\n[75aed](https://github.com/JSQLParser/JSqlParser/commit/75aeded181a6f88) Sarah Komla-Ebri *2014-07-16 15:05:30*\n\n**Added support for MySQL REGEXP BINARY (for case insensitivity)**\n\n\n[ec0dc](https://github.com/JSQLParser/JSqlParser/commit/ec0dc88bc9b4280) Sarah Komla-Ebri *2014-07-16 13:50:37*\n\n**Added support for MySQL REGEXP insensitivity case**\n\n\n[4d9e4](https://github.com/JSQLParser/JSqlParser/commit/4d9e46198e0a679) Sarah Komla-Ebri *2014-07-16 13:27:25*\n\n**simple first json syntax**\n\n\n[cb674](https://github.com/JSQLParser/JSqlParser/commit/cb674bfa5937757) wumpz *2014-06-24 21:20:58*\n\n**simple first json syntax**\n\n\n[45ce9](https://github.com/JSQLParser/JSqlParser/commit/45ce94eb9c0c62a) wumpz *2014-06-24 21:19:04*\n\n**returning implemented, column as identifier allowed**\n\n\n[0020c](https://github.com/JSQLParser/JSqlParser/commit/0020c798f32c586) wumpz *2014-06-20 23:04:02*\n\n**returning implemented, column as identifier allowed**\n\n\n[733ff](https://github.com/JSQLParser/JSqlParser/commit/733ff6da5d59ac1) wumpz *2014-06-20 22:58:28*\n\n**Update README.md**\n\n\n[e12b8](https://github.com/JSQLParser/JSqlParser/commit/e12b8644326d3d2) Tobias *2014-06-04 20:50:35*\n\n**Update README.md**\n\n\n[e8927](https://github.com/JSQLParser/JSqlParser/commit/e8927d40ab55bdd) Tobias *2014-06-04 20:47:38*\n\n**Update README.md**\n\n\n[fb8ad](https://github.com/JSQLParser/JSqlParser/commit/fb8add01cb28b85) Tobias *2014-06-04 20:46:03*\n\n**Update README.md**\n\n\n[08c6a](https://github.com/JSQLParser/JSqlParser/commit/08c6a48b3180db4) Tobias *2014-06-04 20:45:22*\n\n**fixes #56 : multitable updates**\n\n\n[dfda1](https://github.com/JSQLParser/JSqlParser/commit/dfda1395c4275f6) wumpz *2014-05-25 20:16:31*\n\n**fixes #56 : multitable updates**\n\n\n[9c183](https://github.com/JSQLParser/JSqlParser/commit/9c183ed34760126) wumpz *2014-05-25 20:06:04*\n\n**fixes #57: brackets were not handled properly**\n\n\n[00367](https://github.com/JSQLParser/JSqlParser/commit/003674787cfa982) wumpz *2014-05-25 19:10:28*\n\n**readme updated**\n\n\n[55634](https://github.com/JSQLParser/JSqlParser/commit/5563419fd15e430) wumpz *2014-05-22 22:08:32*\n\n**junit annotations**\n\n\n[57154](https://github.com/JSQLParser/JSqlParser/commit/57154b37c22abfb) wumpz *2014-05-22 21:05:22*\n\n**Unit test**\n\n\n[8cc03](https://github.com/JSQLParser/JSqlParser/commit/8cc036b4a99117a) shuyangzhou *2014-05-20 21:52:29*\n\n**TablesNamesFinder.getTableList(Delete) throws NPE when the sql does not have a where clause**\n\n\n[6d828](https://github.com/JSQLParser/JSqlParser/commit/6d8287fcf9dd1ee) shuyangzhou *2014-05-20 21:52:24*\n\n**upgrade to JavaCC 6.1.2**\n\n\n[c3404](https://github.com/JSQLParser/JSqlParser/commit/c3404e01e59b8d5) wumpz *2014-05-16 06:49:21*\n\n**Update README.md**\n\n\n[67af4](https://github.com/JSQLParser/JSqlParser/commit/67af4cd64bf0af0) Tobias *2014-05-08 19:35:00*\n\n\n## jsqlparser-0.9 (2014-05-08)\n\n### Other changes\n\n**support for some keywords as objectnames**\n\n\n[60f2b](https://github.com/JSQLParser/JSqlParser/commit/60f2bc4345ad0c8) wumpz *2014-05-07 21:19:09*\n\n**support for some keywords as objectnames**\n\n\n[c126e](https://github.com/JSQLParser/JSqlParser/commit/c126e1e511d2deb) wumpz *2014-05-07 20:57:32*\n\n**support for named pks included**\n\n\n[3aabf](https://github.com/JSQLParser/JSqlParser/commit/3aabff2d744315e) wumpz *2014-04-20 23:56:06*\n\n**support for named pks included**\n\n\n[9e683](https://github.com/JSQLParser/JSqlParser/commit/9e683d3662350ce) wumpz *2014-04-20 23:51:10*\n\n**util for conditional expression parsing included**\n\n\n[ffeb7](https://github.com/JSQLParser/JSqlParser/commit/ffeb7b7013afaf4) wumpz *2014-04-07 21:29:42*\n\n**util for conditional expression parsing included**\n\n\n[bc5a6](https://github.com/JSQLParser/JSqlParser/commit/bc5a6a459533b4e) wumpz *2014-04-07 21:21:58*\n\n**updated readme**\n\n\n[01a82](https://github.com/JSQLParser/JSqlParser/commit/01a82c2e2da9ffb) wumpz *2014-03-23 21:21:41*\n\n**updated readme**\n\n\n[84979](https://github.com/JSQLParser/JSqlParser/commit/849796360b04aa1) wumpz *2014-03-22 22:43:53*\n\n**changed configuration**\n\n\n[96be5](https://github.com/JSQLParser/JSqlParser/commit/96be5d779bbf0bb) wumpz *2014-03-22 21:42:11*\n\n**readme updated**\n\n\n[986c8](https://github.com/JSQLParser/JSqlParser/commit/986c87e1c61f332) wumpz *2014-03-18 21:35:28*\n\n**removed stachtrace printing for problematic sql scripts**\n\n\n[7ff12](https://github.com/JSQLParser/JSqlParser/commit/7ff12fb4fded358) wumpz *2014-03-18 20:52:15*\n\n**corrected some sql test scripts to be deparseable**\n\n* corrected pivot handling in SelectDeParser \n\n[8ac25](https://github.com/JSQLParser/JSqlParser/commit/8ac250d9f90144d) wumpz *2014-03-12 23:24:47*\n\n**site descriptor**\n\n\n[a6265](https://github.com/JSQLParser/JSqlParser/commit/a626532c854c35b) wumpz *2014-03-12 19:56:37*\n\n**pivot test sqls a little tweaked so parseing deparsing will work**\n\n\n[dcd97](https://github.com/JSQLParser/JSqlParser/commit/dcd97c16a007c31) wumpz *2014-03-08 00:00:29*\n\n**pivot for subquery corrected**\n\n\n[eb480](https://github.com/JSQLParser/JSqlParser/commit/eb480d73dc02c5c) wumpz *2014-03-07 23:48:52*\n\n**!= usage corrected**\n\n* deparser for oracle hierarchical expressions corrected \n* order by asc/desc corrected \n\n[d4f74](https://github.com/JSQLParser/JSqlParser/commit/d4f744c761fffe9) wumpz *2014-03-06 22:27:11*\n\n**ALL processing corrected**\n\n\n[68938](https://github.com/JSQLParser/JSqlParser/commit/68938c79b0394e0) wumpz *2014-03-06 20:46:49*\n\n**lax tests improved**\n\n\n[ab578](https://github.com/JSQLParser/JSqlParser/commit/ab578af86ca2c26) wumpz *2014-03-05 23:17:40*\n\n**toString for windowing elements corrected**\n\n* lax equality test implemented \n* included oracle test sqls \n* included @ and # for identifiers \n\n[884dc](https://github.com/JSQLParser/JSqlParser/commit/884dcafa73ecfd2) wumpz *2014-03-05 23:01:03*\n\n**First version of all *Visitor adapters + simple test**\n\n\n[cdc42](https://github.com/JSQLParser/JSqlParser/commit/cdc42110478506b) aalmiray *2014-03-05 20:45:57*\n\n**character set implemented**\n\n\n[90048](https://github.com/JSQLParser/JSqlParser/commit/90048e535baa2f0) wumpz *2014-03-01 00:11:04*\n\n**character set implemented**\n\n\n[e7114](https://github.com/JSQLParser/JSqlParser/commit/e7114e3c53230c6) wumpz *2014-03-01 00:05:59*\n\n**Update README.md**\n\n\n[2c22b](https://github.com/JSQLParser/JSqlParser/commit/2c22b60433c9a51) Tobias *2014-02-20 22:51:32*\n\n\n## jsqlparser-0.8.9 (2014-02-20)\n\n### Other changes\n\n**Update README.md**\n\n\n[d6edd](https://github.com/JSQLParser/JSqlParser/commit/d6eddfd7e5d8a6b) Tobias *2014-02-15 22:11:51*\n\n**readme**\n\n\n[f82d8](https://github.com/JSQLParser/JSqlParser/commit/f82d8316f00c581) wumpz *2014-02-14 22:01:31*\n\n**first statements version**\n\n\n[4be27](https://github.com/JSQLParser/JSqlParser/commit/4be2700c2b5e0cd) wumpz *2014-02-14 21:56:27*\n\n**update readme**\n\n\n[ff94a](https://github.com/JSQLParser/JSqlParser/commit/ff94a3ded2c295c) wumpz *2014-02-11 00:13:16*\n\n****\n\n\n[c91d1](https://github.com/JSQLParser/JSqlParser/commit/c91d153020b588c) wumpz *2014-02-11 00:08:31*\n\n**update readme**\n\n\n[3b219](https://github.com/JSQLParser/JSqlParser/commit/3b21988a4857273) wumpz *2014-02-11 00:01:11*\n\n**corrected some styling issues**\n\n\n[a3a7f](https://github.com/JSQLParser/JSqlParser/commit/a3a7ff934980b41) wumpz *2014-02-10 23:44:22*\n\n**backported analytic expressions from fork**\n\n\n[43d97](https://github.com/JSQLParser/JSqlParser/commit/43d97ea79f1e48a) wumpz *2014-02-10 23:36:24*\n\n**order by clause improved nulls first last**\n\n\n[ce45f](https://github.com/JSQLParser/JSqlParser/commit/ce45fbcf7f2d3e3) wumpz *2014-02-09 23:59:29*\n\n**added versions to pom**\n\n\n[06bbd](https://github.com/JSQLParser/JSqlParser/commit/06bbda82b813e7b) wumpz *2014-02-08 11:01:56*\n\n****\n\n\n[9b2c2](https://github.com/JSQLParser/JSqlParser/commit/9b2c295a8552cf6) wumpz *2014-02-07 22:25:13*\n\n**Updated most of the Maven dependencies;**\n\n\n[e6aaf](https://github.com/JSQLParser/JSqlParser/commit/e6aaf8b260fadd7) Pap Lőrinc *2014-02-07 07:59:11*\n\n**Added PERCENT support for the TOP statement;**\n\n\n[5e127](https://github.com/JSQLParser/JSqlParser/commit/5e127196a96ced3) Pap Lőrinc *2014-02-07 07:58:51*\n\n**Update README.md**\n\n\n[53aab](https://github.com/JSQLParser/JSqlParser/commit/53aab5737c61d1e) Tobias *2014-02-06 21:18:20*\n\n**readme updated**\n\n\n[96654](https://github.com/JSQLParser/JSqlParser/commit/966541e5b90dbb8) wumpz *2014-02-06 21:14:04*\n\n**added testcase, little refactoring**\n\n\n[4f766](https://github.com/JSQLParser/JSqlParser/commit/4f76615cf3bbd9b) wumpz *2014-02-06 21:08:18*\n\n**Modified the TOP expression to accept parentheses also;**\n\n\n[b5849](https://github.com/JSQLParser/JSqlParser/commit/b5849b63d24bef3) Pap Lőrinc *2014-02-06 09:39:31*\n\n**updated readme**\n\n\n[e143a](https://github.com/JSQLParser/JSqlParser/commit/e143abbd6c6374f) wumpz *2014-02-04 22:57:24*\n\n**removed Exception logging for false multipart name test**\n\n\n[7a94f](https://github.com/JSQLParser/JSqlParser/commit/7a94fa7b57a085b) wumpz *2014-02-04 22:48:24*\n\n****\n\n\n[e1f06](https://github.com/JSQLParser/JSqlParser/commit/e1f06bb0204fe43) wumpz *2014-02-04 22:14:12*\n\n**included maven site generation**\n\n\n[fc016](https://github.com/JSQLParser/JSqlParser/commit/fc016126850b1ac) wumpz *2014-02-02 23:47:06*\n\n**extended multipart identifier tests**\n\n\n[a3e0f](https://github.com/JSQLParser/JSqlParser/commit/a3e0f9de56c4441) wumpz *2014-02-02 00:04:28*\n\n****\n\n\n[13f3c](https://github.com/JSQLParser/JSqlParser/commit/13f3c0c64f785fb) wumpz *2014-02-01 23:23:43*\n\n**removed possibility of empty tablename**\n\n\n[9a819](https://github.com/JSQLParser/JSqlParser/commit/9a819eb5ceae1f9) wumpz *2014-02-01 23:17:35*\n\n**removed some changes**\n\n\n[7fa4f](https://github.com/JSQLParser/JSqlParser/commit/7fa4f8501cc4453) wumpz *2014-02-01 22:55:57*\n\n**signed expressions tests improved**\n\n\n[a78ab](https://github.com/JSQLParser/JSqlParser/commit/a78ab94cd60353f) wumpz *2014-02-01 22:18:32*\n\n**Replaced a leftover StringBuffer with StringBuilder;**\n\n\n[9b8d7](https://github.com/JSQLParser/JSqlParser/commit/9b8d72739d464cc) Pap Lőrinc *2014-01-28 17:26:00*\n\n**Corrected Sql Server multi-part table and column names (database.schema.table.column) in the select statement to accept 4 levels with empty inner parts;**\n\n\n[ba6c5](https://github.com/JSQLParser/JSqlParser/commit/ba6c54de7da2efa) Pap Lőrinc *2014-01-28 17:23:37*\n\n**Renamed getWholeColumnName and getWholeTableName to getFullyQualifiedName;**\n\n\n[b4d54](https://github.com/JSQLParser/JSqlParser/commit/b4d547eeb04cb9a) Pap Lőrinc *2014-01-28 17:14:09*\n\n**Corrected the signed expression behaviors and renamed InverseExpression to SignedExpression;**\n\n\n[d1e71](https://github.com/JSQLParser/JSqlParser/commit/d1e7185633bf840) Pap Lőrinc *2014-01-28 08:36:06*\n\n**Removed the leading and trailing whitespaces in the JavaCC parser file;**\n\n* Organized the declared imports in order to ease further changes in the file and to remove unused ones; \n* Renamed the S_INTEGER token to S_LONG to be in sync with the S_DOUBLE token; \n\n[5d151](https://github.com/JSQLParser/JSqlParser/commit/5d151c7bdbe08fd) Pap Lőrinc *2014-01-28 08:24:04*\n\n**fixes #34**\n\n\n[144ca](https://github.com/JSQLParser/JSqlParser/commit/144ca3a140d1024) wumpz *2014-01-23 22:14:58*\n\n**Update README.md**\n\n\n[7024b](https://github.com/JSQLParser/JSqlParser/commit/7024bc7c1d1f553) Tobias *2014-01-22 23:23:54*\n\n\n## jsqlparser-0.8.8 (2014-01-22)\n\n### Other changes\n\n**problem with git v1.8.5 adressed**\n\n\n[9b12d](https://github.com/JSQLParser/JSqlParser/commit/9b12d17a4cb9744) wumpz *2014-01-22 23:05:23*\n\n**version 0.8.8-SNAPSHOT**\n\n\n[810ca](https://github.com/JSQLParser/JSqlParser/commit/810cabdafe2012a) wumpz *2014-01-22 22:41:41*\n\n**version 0.8.8-SNAPSHOT**\n\n\n[fdd3a](https://github.com/JSQLParser/JSqlParser/commit/fdd3a71426e473a) wumpz *2014-01-22 22:29:11*\n\n**Update README.md**\n\n\n[d4083](https://github.com/JSQLParser/JSqlParser/commit/d40837361354a27) Tobias *2014-01-21 23:37:41*\n\n**addJoin introduced**\n\n\n[c19f8](https://github.com/JSQLParser/JSqlParser/commit/c19f83f768a5e4a) wumpz *2014-01-21 23:35:34*\n\n**readme updated**\n\n\n[d3675](https://github.com/JSQLParser/JSqlParser/commit/d367559442a98ab) wumpz *2014-01-14 22:29:07*\n\n**started simple utility function for select statement modification**\n\n\n[bf454](https://github.com/JSQLParser/JSqlParser/commit/bf454e9a261cd4d) wumpz *2014-01-14 22:18:43*\n\n**started simple utility function for select statement modification**\n\n\n[6b5e2](https://github.com/JSQLParser/JSqlParser/commit/6b5e29af117e04e) wumpz *2014-01-14 22:11:13*\n\n**update readme**\n\n\n[311d6](https://github.com/JSQLParser/JSqlParser/commit/311d63639bda4a4) wumpz *2014-01-14 21:07:21*\n\n**little housekeeping**\n\n\n[1c927](https://github.com/JSQLParser/JSqlParser/commit/1c927884749b032) wumpz *2014-01-14 21:01:05*\n\n**Alias class implemented and integrated**\n\n\n[ce339](https://github.com/JSQLParser/JSqlParser/commit/ce3390677746faf) wumpz *2014-01-14 20:58:03*\n\n**Added one simple insert SQL to test**\n\n\n[2db02](https://github.com/JSQLParser/JSqlParser/commit/2db02ada400cd99) wumpz *2014-01-11 15:05:50*\n\n****\n\n\n[f58ca](https://github.com/JSQLParser/JSqlParser/commit/f58ca061b25ba5b) wumpz *2013-12-08 20:13:04*\n\n**update readme**\n\n\n[068b1](https://github.com/JSQLParser/JSqlParser/commit/068b19d17d9dba4) wumpz *2013-12-07 23:59:34*\n\n**start alter statement**\n\n\n[75575](https://github.com/JSQLParser/JSqlParser/commit/7557524708d0ce0) wumpz *2013-12-07 23:57:27*\n\n**PostgresSQL regular expression match operators**\n\n\n[e5e48](https://github.com/JSQLParser/JSqlParser/commit/e5e488d60c316f3) wumpz *2013-11-12 21:37:43*\n\n**Update README.md**\n\n\n[259dd](https://github.com/JSQLParser/JSqlParser/commit/259dd566a55a9b6) Tobias *2013-11-08 23:38:09*\n\n**PostgresSQL regular expression case sensitive match**\n\n\n[db923](https://github.com/JSQLParser/JSqlParser/commit/db923d53c5ceee7) wumpz *2013-11-08 23:33:46*\n\n**PostgresSQL regular expression case sensitive match**\n\n\n[88b5a](https://github.com/JSQLParser/JSqlParser/commit/88b5aa81b405d45) wumpz *2013-11-08 23:27:30*\n\n**simple modifier cleanup**\n\n\n[0528e](https://github.com/JSQLParser/JSqlParser/commit/0528ecca9768cf7) wumpz *2013-11-06 21:11:27*\n\n**Update README.md**\n\n\n[2a4bb](https://github.com/JSQLParser/JSqlParser/commit/2a4bbe5391e4dfd) Tobias *2013-10-30 22:37:09*\n\n**update readme**\n\n\n[e3b0e](https://github.com/JSQLParser/JSqlParser/commit/e3b0e6c4b5b7e48) wumpz *2013-10-30 22:31:03*\n\n\n## jsqlparser-0.8.6 (2013-10-30)\n\n### Other changes\n\n**a little cleanup**\n\n\n[bdc81](https://github.com/JSQLParser/JSqlParser/commit/bdc81933ab76b01) wumpz *2013-10-24 21:46:52*\n\n**version not needed anymore**\n\n\n[7a737](https://github.com/JSQLParser/JSqlParser/commit/7a737e70a76616d) wumpz *2013-10-24 21:34:14*\n\n**Update README.md**\n\n\n[f14e3](https://github.com/JSQLParser/JSqlParser/commit/f14e3c98917bc24) Tobias *2013-10-08 22:42:11*\n\n**Update README.md**\n\n\n[22c3e](https://github.com/JSQLParser/JSqlParser/commit/22c3ee9379b4f7c) Tobias *2013-10-08 22:37:23*\n\n**update readme.md**\n\n\n[d2dcf](https://github.com/JSQLParser/JSqlParser/commit/d2dcfaece51ceda) wumpz *2013-10-08 22:35:21*\n\n**merge oracle hierarchical syntax into main**\n\n\n[a0b21](https://github.com/JSQLParser/JSqlParser/commit/a0b21c36e5d2008) wumpz *2013-10-08 22:23:30*\n\n**merge oracle hierarchical syntax into main**\n\n\n[6c300](https://github.com/JSQLParser/JSqlParser/commit/6c30062bd7e9a59) wumpz *2013-10-08 22:22:19*\n\n**OracleHierarchicalExpression implemented**\n\n\n[b48f2](https://github.com/JSQLParser/JSqlParser/commit/b48f26e48a00f03) wumpz *2013-10-08 22:07:03*\n\n**OracleHierarchicalExpression implemented**\n\n\n[afa6e](https://github.com/JSQLParser/JSqlParser/commit/afa6e2d73d237f0) wumpz *2013-10-08 00:15:32*\n\n**Update README.md**\n\n\n[3901b](https://github.com/JSQLParser/JSqlParser/commit/3901bc6bf380099) Tobias *2013-10-07 12:09:23*\n\n**Update README.md**\n\n\n[9eb5f](https://github.com/JSQLParser/JSqlParser/commit/9eb5fa11dad1733) Tobias *2013-10-06 14:12:55*\n\n**parser updated oracle recursives**\n\n\n[aff53](https://github.com/JSQLParser/JSqlParser/commit/aff53603149d42c) wumpz *2013-10-01 19:07:16*\n\n**begin implementation of oracle recursive queries**\n\n\n[a7566](https://github.com/JSQLParser/JSqlParser/commit/a7566a7371bdca0) wumpz *2013-09-19 20:33:18*\n\n\n## jsqlparser-0.8.5 (2013-10-06)\n\n### Other changes\n\n**preparing release of 0.8.5**\n\n\n[7abce](https://github.com/JSQLParser/JSqlParser/commit/7abce433ce56bab) wumpz *2013-10-06 13:23:53*\n\n**preparing release of 0.8.5**\n\n\n[0e13b](https://github.com/JSQLParser/JSqlParser/commit/0e13b77a827dfb5) wumpz *2013-10-06 12:55:48*\n\n**readme updated**\n\n\n[3e68f](https://github.com/JSQLParser/JSqlParser/commit/3e68fa4928d5115) wumpz *2013-09-19 21:08:23*\n\n**problems solved with postgresqls data type \"character varying\"**\n\n\n[c84e5](https://github.com/JSQLParser/JSqlParser/commit/c84e59eadd380e0) wumpz *2013-09-19 21:05:18*\n\n**problems solved with postgresqls data type \"character varying\"**\n\n\n[f5af3](https://github.com/JSQLParser/JSqlParser/commit/f5af3053102af19) wumpz *2013-09-19 21:00:19*\n\n**corrected version infos**\n\n\n[9da72](https://github.com/JSQLParser/JSqlParser/commit/9da728241feb44b) wumpz *2013-09-17 21:49:19*\n\n**Update README.md**\n\n\n[da809](https://github.com/JSQLParser/JSqlParser/commit/da809493f5d6dbb) Tobias *2013-09-17 21:36:47*\n\n**first snapshot deployed to sonatype**\n\n\n[62970](https://github.com/JSQLParser/JSqlParser/commit/629705cc0a3d758) wumpz *2013-09-17 21:27:05*\n\n**pom modification to publish to public repository**\n\n\n[e60bc](https://github.com/JSQLParser/JSqlParser/commit/e60bc0e9fac79ee) wumpz *2013-09-17 12:14:43*\n\n**pom modification to publish to public repository**\n\n\n[085d4](https://github.com/JSQLParser/JSqlParser/commit/085d4970d2a56c8) wumpz *2013-09-17 09:11:36*\n\n**CastExpression favours cast keyword instead of ::**\n\n\n[68d12](https://github.com/JSQLParser/JSqlParser/commit/68d12944d835777) wumpz *2013-09-17 07:17:39*\n\n**CastExpression favours cast keyword instead of ::**\n\n\n[8cf8b](https://github.com/JSQLParser/JSqlParser/commit/8cf8b4b7733dbd4) wumpz *2013-09-17 07:16:27*\n\n**removed unused modifiers**\n\n\n[b3ee7](https://github.com/JSQLParser/JSqlParser/commit/b3ee75103cba4ec) wumpz *2013-08-29 20:22:48*\n\n**improved function test**\n\n\n[35608](https://github.com/JSQLParser/JSqlParser/commit/35608babd2caae1) wumpz *2013-08-29 19:32:20*\n\n**workaround for mySql truncate function**\n\n\n[c3b40](https://github.com/JSQLParser/JSqlParser/commit/c3b4046f8833357) wumpz *2013-08-29 19:22:57*\n\n\n## jsqlparser-0.8.4 (2013-08-27)\n\n### Other changes\n\n**JJDoc output included in site configuration**\n\n\n[b2688](https://github.com/JSQLParser/JSqlParser/commit/b2688799ada5918) wumpz *2013-08-25 19:30:45*\n\n**Update README.md**\n\n\n[891dd](https://github.com/JSQLParser/JSqlParser/commit/891dd0a8e7e3086) Tobias *2013-08-22 20:29:48*\n\n**update readme**\n\n\n[d375a](https://github.com/JSQLParser/JSqlParser/commit/d375ac9a51bc51e) wumpz *2013-08-22 20:20:29*\n\n**update readme**\n\n\n[e25d0](https://github.com/JSQLParser/JSqlParser/commit/e25d0be44a8223a) wumpz *2013-08-22 20:13:19*\n\n**some minor additions to named parameters**\n\n\n[8bff2](https://github.com/JSQLParser/JSqlParser/commit/8bff2c911467e84) wumpz *2013-08-22 20:11:19*\n\n**added ability to parse named parameters**\n\n\n[284ec](https://github.com/JSQLParser/JSqlParser/commit/284ec72cd00a574) audrium *2013-08-22 13:47:39*\n\n**added changes to readme**\n\n\n[6ab75](https://github.com/JSQLParser/JSqlParser/commit/6ab75599642eb23) wumpz *2013-08-14 21:34:21*\n\n**added some test cases**\n\n\n[00f76](https://github.com/JSQLParser/JSqlParser/commit/00f76fe1a853843) wumpz *2013-08-14 21:25:47*\n\n**removed PivotForColumn**\n\n\n[18904](https://github.com/JSQLParser/JSqlParser/commit/18904dd44c915d2) wumpz *2013-08-11 23:43:07*\n\n**regexp_like transfered into a general boolean function**\n\n\n[410a2](https://github.com/JSQLParser/JSqlParser/commit/410a2d125db963e) wumpz *2013-08-11 21:26:33*\n\n**Add support old oracle join syntax to more expressions (simple comparisons and IN)**\n\n\n[55f42](https://github.com/JSQLParser/JSqlParser/commit/55f42ea3712cf4d) Jonathan Burnhams *2013-08-02 07:52:05*\n\n**Add support for lag and lead with offset and default value parameters**\n\n\n[99b46](https://github.com/JSQLParser/JSqlParser/commit/99b46bf1e7b18ec) Jonathan Burnhams *2013-08-01 14:00:15*\n\n**Added regexp_like support**\n\n\n[33f4f](https://github.com/JSQLParser/JSqlParser/commit/33f4f66dbdd693d) Jonathan Burnhams *2013-08-01 13:26:05*\n\n**Finished adding pivot support**\n\n\n[43fe8](https://github.com/JSQLParser/JSqlParser/commit/43fe8ca9c71afff) Jonathan Burnhams *2013-08-01 08:56:50*\n\n**Started to add pivot support**\n\n\n[a9716](https://github.com/JSQLParser/JSqlParser/commit/a97160a801585fa) Jonathan Burnhams *2013-07-31 15:15:42*\n\n**Ignore intellij**\n\n\n[51783](https://github.com/JSQLParser/JSqlParser/commit/517839aa4734e24) Jonathan Burnhams *2013-07-31 13:25:20*\n\n**Update README.md**\n\n\n[3a8ea](https://github.com/JSQLParser/JSqlParser/commit/3a8eacabad85274) Tobias *2013-07-18 13:06:09*\n\n**removed release plugin dryrun**\n\n\n[6e45a](https://github.com/JSQLParser/JSqlParser/commit/6e45a4fb22fe72a) wumpz *2013-07-05 20:55:50*\n\n**Update README.md**\n\n\n[b53e7](https://github.com/JSQLParser/JSqlParser/commit/b53e74d3b50c5d5) Tobias *2013-07-05 05:58:12*\n\n**maven release plugin for local git repository**\n\n\n[bd05e](https://github.com/JSQLParser/JSqlParser/commit/bd05eab93f7303b) wumpz *2013-07-04 19:54:39*\n\n**more sonar issues corrected**\n\n\n[7fea9](https://github.com/JSQLParser/JSqlParser/commit/7fea946f0ea664e) wumpz *2013-07-04 19:23:29*\n\n**Update README.md**\n\n\n[79f32](https://github.com/JSQLParser/JSqlParser/commit/79f322aca2246bc) Tobias *2013-07-04 19:04:02*\n\n**create table can now have foreign key definitions**\n\n* fixes #14 \n\n[0c41f](https://github.com/JSQLParser/JSqlParser/commit/0c41f27165a2f41) wumpz *2013-06-24 23:28:29*\n\n**removed some unused imports**\n\n\n[8c37c](https://github.com/JSQLParser/JSqlParser/commit/8c37ca2628188ac) wumpz *2013-06-20 21:59:24*\n\n**more sonar identified stuff cleaned**\n\n\n[51791](https://github.com/JSQLParser/JSqlParser/commit/5179164dc6d54b5) wumpz *2013-06-20 21:12:48*\n\n**cleanup violations found by sonar**\n\n\n[51d0b](https://github.com/JSQLParser/JSqlParser/commit/51d0ba3b1eec349) Ivan Vasyliev *2013-06-14 14:44:01*\n\n**more sonar identified stuff cleaned**\n\n\n[c84ed](https://github.com/JSQLParser/JSqlParser/commit/c84ed36f9555aa0) wumpz *2013-06-13 20:53:57*\n\n**corrected Method names mentioned by Sonar**\n\n\n[16e2d](https://github.com/JSQLParser/JSqlParser/commit/16e2d8dd4a3e7ac) wumpz *2013-06-13 20:46:02*\n\n**cleaned up more critical points (sonar)**\n\n\n[ad96c](https://github.com/JSQLParser/JSqlParser/commit/ad96cbb9c65e39f) wumpz *2013-06-13 20:42:40*\n\n**solved critical \"Performance - Method concatenates strings using + in a loop\"**\n\n\n[9b86e](https://github.com/JSQLParser/JSqlParser/commit/9b86e368e4b3b67) wumpz *2013-06-09 23:40:10*\n\n**Update README.md**\n\n\n[5c36d](https://github.com/JSQLParser/JSqlParser/commit/5c36da78eb4cc3d) Tobias *2013-06-08 22:14:15*\n\n**Update README.md**\n\n\n[cdbec](https://github.com/JSQLParser/JSqlParser/commit/cdbec9bc2194147) Tobias *2013-06-08 21:55:29*\n\n**fixes #30**\n\n\n[22f83](https://github.com/JSQLParser/JSqlParser/commit/22f839045489e20) wumpz *2013-05-30 20:11:44*\n\n****\n\n\n[4ebb5](https://github.com/JSQLParser/JSqlParser/commit/4ebb568f83de703) wumpz *2013-05-26 22:47:27*\n\n**added readme entry**\n\n\n[afc0e](https://github.com/JSQLParser/JSqlParser/commit/afc0e2957c5c52c) wumpz *2013-05-26 22:21:36*\n\n**multi value IN expression introduced (a,b,c) in ...**\n\n* fixes #30 \n\n[3c443](https://github.com/JSQLParser/JSqlParser/commit/3c44391bf5f168f) wumpz *2013-05-26 22:19:03*\n\n**introduces Interval expression**\n\n\n[fc5e6](https://github.com/JSQLParser/JSqlParser/commit/fc5e6050533e34d) wumpz *2013-05-26 20:44:44*\n\n**new version**\n\n\n[f97c5](https://github.com/JSQLParser/JSqlParser/commit/f97c5a27faecc7b) wumpz *2013-05-23 22:03:06*\n\n**new version**\n\n\n[a470a](https://github.com/JSQLParser/JSqlParser/commit/a470ae965d06ab4) wumpz *2013-05-22 19:57:51*\n\n**release**\n\n\n[1366c](https://github.com/JSQLParser/JSqlParser/commit/1366caba4b4d087) wumpz *2013-05-22 19:57:21*\n\n**readme**\n\n\n[4a620](https://github.com/JSQLParser/JSqlParser/commit/4a620031bcbef1e) wumpz *2013-05-22 19:49:11*\n\n**introduced generic list**\n\n\n[8af04](https://github.com/JSQLParser/JSqlParser/commit/8af04647982fc78) wumpz *2013-05-22 19:38:36*\n\n**refactored some test utility methods out into a new class**\n\n\n[c6bc4](https://github.com/JSQLParser/JSqlParser/commit/c6bc4c3ae5fad83) wumpz *2013-05-22 19:33:05*\n\n**improved test**\n\n\n[5e106](https://github.com/JSQLParser/JSqlParser/commit/5e1069523441f0f) wumpz *2013-05-22 19:16:18*\n\n**- corrected S_DOUBLE parsing**\n\n\n[6e3dc](https://github.com/JSQLParser/JSqlParser/commit/6e3dce2af7f2edd) wumpz *2013-05-16 22:22:01*\n\n**- solved critical grammar bug regarding concat expressions and parenthesis parsing**\n\n* - introduced some tests to cover the above \n* - corrected ExpressionDeparser to deliver same result as toString for substractions \n\n[51365](https://github.com/JSQLParser/JSqlParser/commit/51365239ead790b) wumpz *2013-05-16 21:53:04*\n\n**added simple delete sql check**\n\n\n[45fad](https://github.com/JSQLParser/JSqlParser/commit/45fad04b620704c) wumpz *2013-05-03 20:36:31*\n\n**add simple materialized view parsing without additional parameters**\n\n\n[6b339](https://github.com/JSQLParser/JSqlParser/commit/6b339fc1e6478cc) wumpz *2013-04-24 20:48:16*\n\n**add simple materialized view parsing without additional parameters**\n\n\n[fa5da](https://github.com/JSQLParser/JSqlParser/commit/fa5daaa3cd8430b) wumpz *2013-04-24 20:45:22*\n\n**Update README.md**\n\n\n[1d923](https://github.com/JSQLParser/JSqlParser/commit/1d92374962fc745) Tobias *2013-04-24 06:03:14*\n\n****\n\n\n[a6615](https://github.com/JSQLParser/JSqlParser/commit/a661593121f07ac) wumpz *2013-04-23 21:14:24*\n\n**- corrected TableNamesFinder to work properly on update statements**\n\n\n[eab74](https://github.com/JSQLParser/JSqlParser/commit/eab747b7891cbd8) wumpz *2013-04-23 21:07:32*\n\n**- Create View corrected in using set operations**\n\n\n[97c03](https://github.com/JSQLParser/JSqlParser/commit/97c03337c1a2deb) wumpz *2013-04-23 20:42:51*\n\n**- from clause can now be used in update statements**\n\n\n[b24c1](https://github.com/JSQLParser/JSqlParser/commit/b24c1c727cd1f81) wumpz *2013-04-21 21:34:26*\n\n**- from clause can now be used in update statements**\n\n\n[b5c4c](https://github.com/JSQLParser/JSqlParser/commit/b5c4ce66d751579) wumpz *2013-04-21 21:31:30*\n\n**- insertet toString in Update**\n\n* - modified Update deparser to deliver better results \n\n[e2e4d](https://github.com/JSQLParser/JSqlParser/commit/e2e4d80675d525d) wumpz *2013-04-21 21:18:48*\n\n**added cross join syntax support**\n\n\n[777a0](https://github.com/JSQLParser/JSqlParser/commit/777a08b2afeb495) wumpz *2013-04-18 22:28:32*\n\n**allow more complex expressions in extract clause**\n\n\n[e551a](https://github.com/JSQLParser/JSqlParser/commit/e551a1603b1e2e6) wumpz *2013-04-18 21:49:45*\n\n**allow more complex expressions in extract clause**\n\n\n[ab2ab](https://github.com/JSQLParser/JSqlParser/commit/ab2ab73f08d4fc8) wumpz *2013-04-18 21:46:29*\n\n**allow complete type in cast expression**\n\n\n[8562d](https://github.com/JSQLParser/JSqlParser/commit/8562d7870a1c8c7) wumpz *2013-04-18 20:47:12*\n\n**allow complete type in cast expression**\n\n\n[905a6](https://github.com/JSQLParser/JSqlParser/commit/905a62377b3bedd) wumpz *2013-04-18 20:40:49*\n\n**create view .. as (select ..) implemented**\n\n\n[1b3c5](https://github.com/JSQLParser/JSqlParser/commit/1b3c507c922dd3a) wumpz *2013-04-18 20:23:19*\n\n**corrected comma list to partition by**\n\n\n[d82c7](https://github.com/JSQLParser/JSqlParser/commit/d82c7a189f1b579) wumpz *2013-04-18 20:01:55*\n\n**corrected comma list to partition by**\n\n\n[eafea](https://github.com/JSQLParser/JSqlParser/commit/eafea98e54e9b2e) wumpz *2013-04-18 19:59:20*\n\n**corrected comma list to partition by**\n\n\n[5d40d](https://github.com/JSQLParser/JSqlParser/commit/5d40d7f384935ee) wumpz *2013-04-18 19:55:03*\n\n**added column names list to create view statement**\n\n\n[b3a63](https://github.com/JSQLParser/JSqlParser/commit/b3a6354b5248884) wumpz *2013-04-17 22:15:38*\n\n**added column names list to create view statement**\n\n\n[b7e73](https://github.com/JSQLParser/JSqlParser/commit/b7e738a071c28d8) wumpz *2013-04-17 22:11:15*\n\n**added more testcases**\n\n\n[eae84](https://github.com/JSQLParser/JSqlParser/commit/eae84f640ba9619) wumpz *2013-04-07 21:08:13*\n\n**Update README.md**\n\n\n[f2765](https://github.com/JSQLParser/JSqlParser/commit/f27659d74fad122) Tobias *2013-04-05 19:34:33*\n\n**support listing tables from other operations**\n\n\n[1d09b](https://github.com/JSQLParser/JSqlParser/commit/1d09b0cd2a68fc5) Raymond Auge *2013-04-05 15:39:59*\n\n**support for create index**\n\n\n[dca7d](https://github.com/JSQLParser/JSqlParser/commit/dca7d9be7a6d63f) Raymond Auge *2013-04-05 13:54:56*\n\n**added more tool functions to new tool class CCJSqlParserUtil**\n\n\n[83a1e](https://github.com/JSQLParser/JSqlParser/commit/83a1e9590471581) wumpz *2013-03-23 22:31:09*\n\n**added more tool functions to new tool class CCJSqlParserUtil**\n\n\n[90341](https://github.com/JSQLParser/JSqlParser/commit/90341f89642659e) wumpz *2013-03-23 22:28:35*\n\n**added more tool functions to new tool class CCJSqlParserUtil**\n\n\n[56fe6](https://github.com/JSQLParser/JSqlParser/commit/56fe6558e978d8f) wumpz *2013-03-23 22:27:32*\n\n**added more tool functions**\n\n\n[71daa](https://github.com/JSQLParser/JSqlParser/commit/71daa4ceee100c0) wumpz *2013-03-23 22:20:20*\n\n**switch to unicode parsing**\n\n\n[886b7](https://github.com/JSQLParser/JSqlParser/commit/886b72c16d95a5a) wumpz *2013-03-21 22:58:37*\n\n**ignoring jedit backup files**\n\n\n[da1e3](https://github.com/JSQLParser/JSqlParser/commit/da1e319210c431b) Tobias Warneke *2013-03-20 20:33:35*\n\n**Added automatic license header generation. The link to the original project was moved to the poms description.**\n\n* Format of all sources done. \n\n[01f7a](https://github.com/JSQLParser/JSqlParser/commit/01f7a4c92670794) wumpz *2013-03-19 21:30:50*\n\n**automatically create license header**\n\n\n[8206d](https://github.com/JSQLParser/JSqlParser/commit/8206dea9caf33f9) wumpz *2013-03-19 21:05:27*\n\n****\n\n\n[26e3a](https://github.com/JSQLParser/JSqlParser/commit/26e3a8334563108) wumpz *2013-03-19 20:50:59*\n\n****\n\n\n[f37b7](https://github.com/JSQLParser/JSqlParser/commit/f37b7285295ec0a) wumpz *2013-03-19 20:38:04*\n\n**wildcard extension for analytic expression**\n\n\n[d36fd](https://github.com/JSQLParser/JSqlParser/commit/d36fd2bd7f17dba) wumpz *2013-03-19 20:18:46*\n\n**readme updated**\n\n\n[27be9](https://github.com/JSQLParser/JSqlParser/commit/27be9c57d64a2d3) wumpz *2013-03-19 00:16:05*\n\n**analytic expressions updated**\n\n\n[9d62c](https://github.com/JSQLParser/JSqlParser/commit/9d62c21b2553b9c) wumpz *2013-03-19 00:12:06*\n\n**- additional test case for values**\n\n* - additional test cases for analytical expressions \n\n[15fc8](https://github.com/JSQLParser/JSqlParser/commit/15fc834bf78ae91) wumpz *2013-03-18 23:59:07*\n\n**Update README.md**\n\n\n[d7f9f](https://github.com/JSQLParser/JSqlParser/commit/d7f9f39ab2b5e3c) Tobias *2013-03-17 00:32:02*\n\n**additional test case**\n\n\n[e7dc8](https://github.com/JSQLParser/JSqlParser/commit/e7dc8d0cb5bb192) wumpz *2013-03-17 00:26:21*\n\n**multi value expression for select included**\n\n\n[6b51f](https://github.com/JSQLParser/JSqlParser/commit/6b51f26b6025532) wumpz *2013-03-17 00:21:17*\n\n**Update README.md**\n\n\n[15a8d](https://github.com/JSQLParser/JSqlParser/commit/15a8d0dd8053881) Tobias *2013-03-14 21:43:12*\n\n**multi value expression for insert included**\n\n\n[898f3](https://github.com/JSQLParser/JSqlParser/commit/898f36937a9ad05) wumpz *2013-03-14 21:40:42*\n\n**multi value expression for insert included**\n\n\n[8f21c](https://github.com/JSQLParser/JSqlParser/commit/8f21c6608eacd56) wumpz *2013-03-14 21:36:44*\n\n**corrected InsertDeParser to deliver same results like toString**\n\n\n[95527](https://github.com/JSQLParser/JSqlParser/commit/955274b969983f6) wumpz *2013-03-12 22:15:07*\n\n**test for lateral and TableNamesFinder**\n\n\n[a3ec5](https://github.com/JSQLParser/JSqlParser/commit/a3ec55aa297eade) wumpz *2013-03-03 00:46:19*\n\n**corrected readme**\n\n\n[966d8](https://github.com/JSQLParser/JSqlParser/commit/966d8a7747becd1) wumpz *2013-02-27 23:27:02*\n\n**corrected readme**\n\n\n[20275](https://github.com/JSQLParser/JSqlParser/commit/202756d18453b25) wumpz *2013-02-27 23:13:22*\n\n****\n\n\n[3d72a](https://github.com/JSQLParser/JSqlParser/commit/3d72a4f45f7cdad) wumpz *2013-02-27 23:08:50*\n\n**implemented lateral keyword**\n\n\n[5bc39](https://github.com/JSQLParser/JSqlParser/commit/5bc39d3aaa74c24) wumpz *2013-02-27 23:05:01*\n\n**add WithItem to visitor interface**\n\n\n[10e8f](https://github.com/JSQLParser/JSqlParser/commit/10e8f7ffd9a3b07) wumpz *2013-02-20 23:06:07*\n\n**some clean up**\n\n\n[00799](https://github.com/JSQLParser/JSqlParser/commit/00799709a45f68c) wumpz *2013-02-20 22:47:14*\n\n****\n\n\n[35a17](https://github.com/JSQLParser/JSqlParser/commit/35a17b5a0190992) wumpz *2013-02-16 14:01:45*\n\n**0.8.2-SNAPSHOT**\n\n\n[e8ed7](https://github.com/JSQLParser/JSqlParser/commit/e8ed7c70fac2cd3) wumpz *2013-02-15 22:42:47*\n\n**Release 0.8.1 to include in my maven repo**\n\n\n[e41b3](https://github.com/JSQLParser/JSqlParser/commit/e41b333a4635c61) wumpz *2013-02-15 22:41:44*\n\n**- problem with TablesNamesFinder: finds with - alias instead of tablenames**\n\n\n[08236](https://github.com/JSQLParser/JSqlParser/commit/082362b174d3faf) wumpz *2013-02-15 22:41:07*\n\n**- problem with TablesNamesFinder: finds with - alias instead of tablenames**\n\n\n[43699](https://github.com/JSQLParser/JSqlParser/commit/436992983926da2) wumpz *2013-02-15 22:14:13*\n\n**Update README.md**\n\n\n[c438f](https://github.com/JSQLParser/JSqlParser/commit/c438fdd520ede8e) Tobias *2013-02-14 07:45:00*\n\n**Update README.md**\n\n\n[7beeb](https://github.com/JSQLParser/JSqlParser/commit/7beebabfe7eba67) Tobias *2013-02-14 00:11:32*\n\n**deployment to github maven repository**\n\n\n[d9fe3](https://github.com/JSQLParser/JSqlParser/commit/d9fe37ad578a0e2) wumpz *2013-02-14 00:04:46*\n\n**Update README.md**\n\n\n[5f306](https://github.com/JSQLParser/JSqlParser/commit/5f306a889b11754) Tobias *2013-01-04 09:39:02*\n\n**CreateView merged in**\n\n\n[0ba65](https://github.com/JSQLParser/JSqlParser/commit/0ba65276f0a67e0) wumpz *2013-01-04 09:32:08*\n\n**CreateView merged in**\n\n\n[b2eff](https://github.com/JSQLParser/JSqlParser/commit/b2eff8b0e0e7976) wumpz *2013-01-04 09:31:12*\n\n**Add CREATE VIEW support**\n\n\n[101ef](https://github.com/JSQLParser/JSqlParser/commit/101ef1d9e10e7d2) Jeffrey Gerard *2012-12-26 17:52:30*\n\n**some housekeeping: replace string concats**\n\n\n[db49b](https://github.com/JSQLParser/JSqlParser/commit/db49b43c2d7bace) wumpz *2012-11-15 22:38:04*\n\n**some housekeeping: adding missing braces**\n\n\n[5dabd](https://github.com/JSQLParser/JSqlParser/commit/5dabda1deca055a) wumpz *2012-11-15 22:33:05*\n\n**some housekeeping: adding override annotations**\n\n\n[5302b](https://github.com/JSQLParser/JSqlParser/commit/5302b4562af8bd0) wumpz *2012-11-15 22:21:05*\n\n**changed source encoding to utf8 from win-1252**\n\n\n[af7fc](https://github.com/JSQLParser/JSqlParser/commit/af7fc5c63a08f96) wumpz *2012-10-31 23:38:33*\n\n**additional letters token rule included, to expand range of acceptable identifiers**\n\n\n[86423](https://github.com/JSQLParser/JSqlParser/commit/86423b0ea8e9875) wumpz *2012-10-31 22:40:42*\n\n**additional letters token rule included, to expand range of acceptable identifiers**\n\n\n[aa8e1](https://github.com/JSQLParser/JSqlParser/commit/aa8e15a1923c0a1) wumpz *2012-10-31 19:16:02*\n\n**Update README.md**\n\n\n[50a56](https://github.com/JSQLParser/JSqlParser/commit/50a56b02c70dac2) Tobias *2012-10-27 22:42:10*\n\n**initial import**\n\n\n[be85e](https://github.com/JSQLParser/JSqlParser/commit/be85e2dd312821a) wumpz *2012-10-27 22:23:51*\n\n**initial import**\n\n\n[3331f](https://github.com/JSQLParser/JSqlParser/commit/3331fc415a20832) wumpz *2012-10-27 22:21:08*\n\n**initial import**\n\n\n[52ffc](https://github.com/JSQLParser/JSqlParser/commit/52ffcf6d42d673c) wumpz *2012-10-27 22:17:53*\n\n**- introduced more generics in parser definition**\n\n\n[4a89f](https://github.com/JSQLParser/JSqlParser/commit/4a89f9b93e3d4ff) wumpz *2012-10-26 22:23:16*\n\n**- introduced more generics in parser definition**\n\n\n[b0e4a](https://github.com/JSQLParser/JSqlParser/commit/b0e4a4712432492) wumpz *2012-10-26 22:16:59*\n\n**- introduced more generics in parser definition**\n\n\n[07317](https://github.com/JSQLParser/JSqlParser/commit/07317edca9c8f89) wumpz *2012-10-26 22:13:12*\n\n**- introduced more generics in parser definition**\n\n\n[fde24](https://github.com/JSQLParser/JSqlParser/commit/fde24683e0c9930) wumpz *2012-10-12 20:55:17*\n\n**- clean up merge conflicts**\n\n\n[e838d](https://github.com/JSQLParser/JSqlParser/commit/e838d9778060478) wumpz *2012-10-12 20:13:43*\n\n**- clean up merge conflicts**\n\n\n[bf5d1](https://github.com/JSQLParser/JSqlParser/commit/bf5d17f1594c7ca) wumpz *2012-10-12 20:11:30*\n\n**Added SELECT parsing and JUnit test**\n\n\n[e9766](https://github.com/JSQLParser/JSqlParser/commit/e9766966ccd7809) Christian Bockermann *2012-10-01 09:21:38*\n\n**- corrected changelog**\n\n\n[1047b](https://github.com/JSQLParser/JSqlParser/commit/1047bb1877cc1ac) wumpz *2012-09-16 21:14:25*\n\n**- difference problem between deparser and tostring for function without parameters resolved**\n\n\n[aee0f](https://github.com/JSQLParser/JSqlParser/commit/aee0fa79d5eb085) wumpz *2012-09-16 21:13:08*\n\n**- difference problem between deparser and tostring for function without parameters resolved**\n\n\n[90f48](https://github.com/JSQLParser/JSqlParser/commit/90f48ff7b87767a) wumpz *2012-09-16 21:11:10*\n\n**- ExtractExpression integrated**\n\n* - Tests ExtractExpression started \n* - Function problem found \n\n[7ea63](https://github.com/JSQLParser/JSqlParser/commit/7ea63d17c1ef299) wumpz *2012-09-16 21:01:53*\n\n**- extract syntax integrated into jj file**\n\n\n[7a50b](https://github.com/JSQLParser/JSqlParser/commit/7a50b960e974183) wumpz *2012-09-15 21:26:39*\n\n**- expansion warnings removed by introducing lookaheads**\n\n\n[db904](https://github.com/JSQLParser/JSqlParser/commit/db90438f3daab6f) wumpz *2012-09-15 21:04:18*\n\n****\n\n\n[3da19](https://github.com/JSQLParser/JSqlParser/commit/3da190b0b31a30d) wumpz *2012-09-11 19:33:24*\n\n****\n\n\n[ab60c](https://github.com/JSQLParser/JSqlParser/commit/ab60cfe02940fb8) wumpz *2012-09-08 20:58:20*\n\n**- moved tables names finder to utils package of source package. it is a too useful tool to live only in the test packages**\n\n\n[57025](https://github.com/JSQLParser/JSqlParser/commit/5702587ce4abae9) wumpz *2012-09-08 19:59:35*\n\n**- moved tables names finder to utils package of source package. it is a too useful tool to live only in the test packages**\n\n\n[4d33d](https://github.com/JSQLParser/JSqlParser/commit/4d33ded5322ca3b) wumpz *2012-09-08 19:57:25*\n\n**- Tool expression connector included**\n\n\n[bb726](https://github.com/JSQLParser/JSqlParser/commit/bb726681905a11b) wumpz *2012-09-08 19:46:28*\n\n**- Tool alias adder implemented**\n\n\n[2ee7a](https://github.com/JSQLParser/JSqlParser/commit/2ee7aa9688f8775) wumpz *2012-09-03 23:32:15*\n\n**imports corrected**\n\n\n[147e8](https://github.com/JSQLParser/JSqlParser/commit/147e8b70ef75e81) wumpz *2012-09-01 22:05:02*\n\n**Fix some obvious compiler warnings**\n\n\n[ea7a1](https://github.com/JSQLParser/JSqlParser/commit/ea7a174bf86f0bf) Ian Bacher *2012-06-13 20:35:48*\n\n****\n\n\n[99b92](https://github.com/JSQLParser/JSqlParser/commit/99b92b3e4e57860) wumpz *2012-06-12 21:49:05*\n\n**quoted columns in create table statement included**\n\n* CreateTableDeParser corrected (NPE with no indexes, toString delivers now same) \n* CreateTableTest expanded \n\n[69287](https://github.com/JSQLParser/JSqlParser/commit/69287d7b2e8b278) wumpz *2012-05-26 19:58:14*\n\n**complex with tests included**\n\n* exists formatting included from fork \n\n[7e39e](https://github.com/JSQLParser/JSqlParser/commit/7e39e9ec4f48448) wumpz *2012-05-23 19:57:10*\n\n**changed version number due to visitor incombatibilities**\n\n\n[87315](https://github.com/JSQLParser/JSqlParser/commit/87315094501ffbc) wumpz *2012-05-23 19:08:39*\n\n****\n\n\n[877ea](https://github.com/JSQLParser/JSqlParser/commit/877ea2c6783bf79) wumpz *2012-05-19 23:04:42*\n\n**- removed deprecated union class (replaced by SetOperationList)**\n\n\n[bce12](https://github.com/JSQLParser/JSqlParser/commit/bce1290bea487cf) wumpz *2012-05-19 22:09:03*\n\n**set operation handling done**\n\n\n[673eb](https://github.com/JSQLParser/JSqlParser/commit/673eb25f97c04d8) wumpz *2012-05-19 21:42:21*\n\n**start implementing union intersection etc. set operation handling**\n\n\n[e980b](https://github.com/JSQLParser/JSqlParser/commit/e980bf3ac12a6b3) wumpz *2012-05-18 21:17:50*\n\n****\n\n\n[37ecf](https://github.com/JSQLParser/JSqlParser/commit/37ecf0a5a7e26ab) wumpz *2012-05-18 20:11:59*\n\n**- Added Oracle (+) join Syntax (instead of taba left join tabn on a=b oracle allows taba,tabn where a=b(+)  )**\n\n\n[31e94](https://github.com/JSQLParser/JSqlParser/commit/31e9435776bebaa) wumpz *2012-05-18 20:10:14*\n\n**- Analytic functions added: corrected PARTITION BY**\n\n\n[4f2cb](https://github.com/JSQLParser/JSqlParser/commit/4f2cbb3eff61683) wumpz *2012-05-17 13:44:50*\n\n**- Analytic functions added: row_number() over (order by a,c)**\n\n\n[b8543](https://github.com/JSQLParser/JSqlParser/commit/b8543ac725fe773) wumpz *2012-05-17 12:46:52*\n\n**Added support for modulo expression (5 % 4)**\n\n\n[ae513](https://github.com/JSQLParser/JSqlParser/commit/ae51331f7c82d04) wumpz *2012-05-17 12:19:50*\n\n**Added support for modulo expression (5 % 4)**\n\n\n[4ef84](https://github.com/JSQLParser/JSqlParser/commit/4ef842925b27438) wumpz *2012-05-16 21:30:14*\n\n**Include bracket quotation of columns and aliases. For example MSAccess supports this.**\n\n\n[e6d5a](https://github.com/JSQLParser/JSqlParser/commit/e6d5accd0db8e1f) wumpz *2012-05-16 20:33:44*\n\n****\n\n\n[d6a22](https://github.com/JSQLParser/JSqlParser/commit/d6a22d1076b95f0) wumpz *2012-05-15 21:50:56*\n\n**- allowed simple expressions in case else**\n\n\n[54d2c](https://github.com/JSQLParser/JSqlParser/commit/54d2c54658d1644) wumpz *2012-05-15 21:36:59*\n\n**- make \"select function\" pass assertSqlCanBeParsedAndDeparsed**\n\n\n[21296](https://github.com/JSQLParser/JSqlParser/commit/21296032a0ef7db) wumpz *2012-05-15 21:00:51*\n\n**- make \"select function\" pass assertSqlCanBeParsedAndDeparsed**\n\n\n[f769e](https://github.com/JSQLParser/JSqlParser/commit/f769ef2e562f485) wumpz *2012-05-15 20:57:07*\n\n**- make \"select function\" pass assertSqlCanBeParsedAndDeparsed**\n\n\n[e5853](https://github.com/JSQLParser/JSqlParser/commit/e5853695b96ac0f) wumpz *2012-05-15 20:55:23*\n\n**- make \"select function\" pass assertSqlCanBeParsedAndDeparsed**\n\n\n[7a8bb](https://github.com/JSQLParser/JSqlParser/commit/7a8bbbe8abf9681) toben *2012-05-13 22:21:38*\n\n**- CAST - statement included**\n\n\n[e22f5](https://github.com/JSQLParser/JSqlParser/commit/e22f5a3b6fe70aa) toben *2012-05-13 22:09:34*\n\n**removed main and junit 3 only artifacts from source code**\n\n\n[3f854](https://github.com/JSQLParser/JSqlParser/commit/3f854eb7cbe63d9) toben *2012-05-13 12:39:52*\n\n**junit upgrade to 4.10**\n\n\n[44b0d](https://github.com/JSQLParser/JSqlParser/commit/44b0d01d19571d0) toben *2012-05-13 12:35:33*\n\n**Refactoring of SelectTest**\n\n\n[e1c80](https://github.com/JSQLParser/JSqlParser/commit/e1c80a0434df739) Florent Bécart *2011-12-02 07:20:18*\n\n**Removal of tests that are not able to pass**\n\n* - Functions do not accept conditions as arguments \n\n[aa5f0](https://github.com/JSQLParser/JSqlParser/commit/aa5f044c5bebc78) Florent Bécart *2011-12-02 07:20:18*\n\n**Code reformat**\n\n\n[272bf](https://github.com/JSQLParser/JSqlParser/commit/272bf237eddcdc2) Florent Bécart *2011-12-02 07:20:18*\n\n**Modify DeParsers to output the same result as statement.toString();**\n\n\n[2a35e](https://github.com/JSQLParser/JSqlParser/commit/2a35efd003ca5b5) Alice Rapunzel *2011-11-21 08:53:24*\n\n**Changed DeParsers to generic list types.**\n\n\n[666ca](https://github.com/JSQLParser/JSqlParser/commit/666cac2edecc8d7) Christian Bockermann *2011-09-17 07:58:43*\n\n**Changed all lists to their appropriate generics type.**\n\n\n[0dd60](https://github.com/JSQLParser/JSqlParser/commit/0dd60b143eae3f1) Christian Bockermann *2011-09-17 07:53:14*\n\n**.gitignore update**\n\n\n[dd2a7](https://github.com/JSQLParser/JSqlParser/commit/dd2a75bd7fde3fb) Florent Bécart *2011-09-16 22:41:36*\n\n**Add the sources generated by javacc-maven-plugin to eclipse classpath**\n\n\n[66556](https://github.com/JSQLParser/JSqlParser/commit/6655673c1531cac) Florent Bécart *2011-09-16 22:41:36*\n\n**Set the version of javacc-maven-plugin in pom.xml as recommended by maven**\n\n\n[3f9c4](https://github.com/JSQLParser/JSqlParser/commit/3f9c4cc36c1a628) Florent Bécart *2011-09-16 22:41:36*\n\n**Project cleanup**\n\n\n[0cb63](https://github.com/JSQLParser/JSqlParser/commit/0cb637199c9cd95) Florent Bécart *2011-09-16 22:41:36*\n\n**README update**\n\n\n[00b8c](https://github.com/JSQLParser/JSqlParser/commit/00b8ca8dbb2ca6b) Florent Bécart *2011-09-16 22:41:36*\n\n**Added README**\n\n\n[2005d](https://github.com/JSQLParser/JSqlParser/commit/2005d6db8594102) Christian Bockermann *2011-09-16 20:22:29*\n\n**Removed javcc-5.0 directory (no covered by Maven plugin)**\n\n\n[61fb4](https://github.com/JSQLParser/JSqlParser/commit/61fb4a16876f9e4) Christian Bockermann *2011-09-16 20:13:28*\n\n**Added support for select without from-list ( SELECT 1 + 2 )**\n\n* Modified test cases for test resources in src/test/resources \n\n[0e5d7](https://github.com/JSQLParser/JSqlParser/commit/0e5d732e65bf622) Christian Bockermann *2011-09-16 20:06:07*\n\n**Moved classes to match Maven directory layout.**\n\n\n[a8d70](https://github.com/JSQLParser/JSqlParser/commit/a8d70350729d085) Christian Bockermann *2011-09-16 19:48:54*\n\n**Use of StringBuilders instead of StringBuffers**\n\n\n[ef03d](https://github.com/JSQLParser/JSqlParser/commit/ef03d68f8a365fc) Florent Bécart *2011-06-23 00:50:08*\n\n**Files generated by JavaCC should be ignored by Git**\n\n\n[b5aff](https://github.com/JSQLParser/JSqlParser/commit/b5affcc84aaf6d7) Florent Bécart *2011-06-23 00:49:59*\n\n**Removal of files generated by JavaCC**\n\n\n[767e3](https://github.com/JSQLParser/JSqlParser/commit/767e3c4e257512e) Florent Bécart *2011-06-23 00:05:33*\n\n**Bug Fix: the column deparser should use the table alias if any**\n\n\n[bc8dc](https://github.com/JSQLParser/JSqlParser/commit/bc8dcbbe1fdae50) Florent Bécart *2011-06-23 00:01:57*\n\n**Use of generics**\n\n* - List of expressions in ItemsList \n* - List of columns in Statement \n* - List of joins in PlainSelect \n* - List of withItems in Select \n* - List of plainSelects in Union \n* - List of orderByElements in Union \n* - List of columns in Update \n* - List of expressions in Update \n\n[8b0b8](https://github.com/JSQLParser/JSqlParser/commit/8b0b865780ee962) Florent Bécart *2011-06-22 20:00:44*\n\n**Insert statements accept both keywords \"value\" and \"values\"**\n\n\n[1db31](https://github.com/JSQLParser/JSqlParser/commit/1db31a4491b01f1) Florent Bécart *2011-06-20 23:14:11*\n\n**Organize imports**\n\n\n[db5e2](https://github.com/JSQLParser/JSqlParser/commit/db5e2501d8eefd5) Florent Bécart *2011-06-20 22:49:36*\n\n**Code reformat**\n\n\n[fed74](https://github.com/JSQLParser/JSqlParser/commit/fed74aec2acf3db) Florent Bécart *2011-06-20 22:48:00*\n\n**Fixes a compilation error by removing an unused import**\n\n\n[b9ce3](https://github.com/JSQLParser/JSqlParser/commit/b9ce35c945ffdab) Florent Bécart *2011-06-20 22:35:16*\n\n**Eclipse configuration files**\n\n* Makes development environment installation easier \n\n[b93af](https://github.com/JSQLParser/JSqlParser/commit/b93af3e4f333cdc) Florent Bécart *2011-06-20 22:33:30*\n\n**Add .gitignore file**\n\n* Auto-generated files that won&#x27;t be pushed to the repo are: \n* - classes: compiled main code \n* - docs: project javadoc \n* - *.jar: distribution jar (sources and documentation) \n* - lib: library jar (.class files) \n* - testclasses: compiled unit tests \n\n[55197](https://github.com/JSQLParser/JSqlParser/commit/5519799ce41c45b) Florent Bécart *2011-06-20 22:08:46*\n\n**Remove auto-generated folders docs and lib**\n\n\n[d2f54](https://github.com/JSQLParser/JSqlParser/commit/d2f5416986e5c9b) Florent Bécart *2011-06-20 22:06:36*\n\n**Add junit library (required for ant build)**\n\n\n[e0ad5](https://github.com/JSQLParser/JSqlParser/commit/e0ad59290667fc2) Florent Bécart *2011-06-20 21:50:19*\n\n**Add javacc-5.0 folder (required for ant build)**\n\n\n[36ddc](https://github.com/JSQLParser/JSqlParser/commit/36ddcb236313093) Florent Bécart *2011-06-20 21:48:21*\n\n**Initial commit (base version: 0.7.0)**\n\n* Source: http://sourceforge.net/projects/jsqlparser/files/jsqlparser/jsqlparser-0.7.0.jar/download \n\n[67c91](https://github.com/JSQLParser/JSqlParser/commit/67c9150f5d93ced) Florent Bécart *2011-06-20 21:44:37*\n\n\n"
        },
        {
          "name": "LICENSE_APACHEV2",
          "type": "blob",
          "size": 11.0908203125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright {yyyy} {name of copyright owner}\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "LICENSE_LGPLV21",
          "type": "blob",
          "size": 25.8408203125,
          "content": "                  GNU LESSER GENERAL PUBLIC LICENSE\n                       Version 2.1, February 1999\n\n Copyright (C) 1991, 1999 Free Software Foundation, Inc.\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n(This is the first released version of the Lesser GPL.  It also counts\n as the successor of the GNU Library Public License, version 2, hence\n the version number 2.1.)\n\n                            Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicenses are intended to guarantee your freedom to share and change\nfree software--to make sure the software is free for all its users.\n\n  This license, the Lesser General Public License, applies to some\nspecially designated software packages--typically libraries--of the\nFree Software Foundation and other authors who decide to use it.  You\ncan use it too, but we suggest you first think carefully about whether\nthis license or the ordinary General Public License is the better\nstrategy to use in any particular case, based on the explanations below.\n\n  When we speak of free software, we are referring to freedom of use,\nnot price.  Our General Public Licenses are designed to make sure that\nyou have the freedom to distribute copies of free software (and charge\nfor this service if you wish); that you receive source code or can get\nit if you want it; that you can change the software and use pieces of\nit in new free programs; and that you are informed that you can do\nthese things.\n\n  To protect your rights, we need to make restrictions that forbid\ndistributors to deny you these rights or to ask you to surrender these\nrights.  These restrictions translate to certain responsibilities for\nyou if you distribute copies of the library or if you modify it.\n\n  For example, if you distribute copies of the library, whether gratis\nor for a fee, you must give the recipients all the rights that we gave\nyou.  You must make sure that they, too, receive or can get the source\ncode.  If you link other code with the library, you must provide\ncomplete object files to the recipients, so that they can relink them\nwith the library after making changes to the library and recompiling\nit.  And you must show them these terms so they know their rights.\n\n  We protect your rights with a two-step method: (1) we copyright the\nlibrary, and (2) we offer you this license, which gives you legal\npermission to copy, distribute and/or modify the library.\n\n  To protect each distributor, we want to make it very clear that\nthere is no warranty for the free library.  Also, if the library is\nmodified by someone else and passed on, the recipients should know\nthat what they have is not the original version, so that the original\nauthor's reputation will not be affected by problems that might be\nintroduced by others.\n\n  Finally, software patents pose a constant threat to the existence of\nany free program.  We wish to make sure that a company cannot\neffectively restrict the users of a free program by obtaining a\nrestrictive license from a patent holder.  Therefore, we insist that\nany patent license obtained for a version of the library must be\nconsistent with the full freedom of use specified in this license.\n\n  Most GNU software, including some libraries, is covered by the\nordinary GNU General Public License.  This license, the GNU Lesser\nGeneral Public License, applies to certain designated libraries, and\nis quite different from the ordinary General Public License.  We use\nthis license for certain libraries in order to permit linking those\nlibraries into non-free programs.\n\n  When a program is linked with a library, whether statically or using\na shared library, the combination of the two is legally speaking a\ncombined work, a derivative of the original library.  The ordinary\nGeneral Public License therefore permits such linking only if the\nentire combination fits its criteria of freedom.  The Lesser General\nPublic License permits more lax criteria for linking other code with\nthe library.\n\n  We call this license the \"Lesser\" General Public License because it\ndoes Less to protect the user's freedom than the ordinary General\nPublic License.  It also provides other free software developers Less\nof an advantage over competing non-free programs.  These disadvantages\nare the reason we use the ordinary General Public License for many\nlibraries.  However, the Lesser license provides advantages in certain\nspecial circumstances.\n\n  For example, on rare occasions, there may be a special need to\nencourage the widest possible use of a certain library, so that it becomes\na de-facto standard.  To achieve this, non-free programs must be\nallowed to use the library.  A more frequent case is that a free\nlibrary does the same job as widely used non-free libraries.  In this\ncase, there is little to gain by limiting the free library to free\nsoftware only, so we use the Lesser General Public License.\n\n  In other cases, permission to use a particular library in non-free\nprograms enables a greater number of people to use a large body of\nfree software.  For example, permission to use the GNU C Library in\nnon-free programs enables many more people to use the whole GNU\noperating system, as well as its variant, the GNU/Linux operating\nsystem.\n\n  Although the Lesser General Public License is Less protective of the\nusers' freedom, it does ensure that the user of a program that is\nlinked with the Library has the freedom and the wherewithal to run\nthat program using a modified version of the Library.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.  Pay close attention to the difference between a\n\"work based on the library\" and a \"work that uses the library\".  The\nformer contains code derived from the library, whereas the latter must\nbe combined with the library in order to run.\n\n                  GNU LESSER GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License Agreement applies to any software library or other\nprogram which contains a notice placed by the copyright holder or\nother authorized party saying it may be distributed under the terms of\nthis Lesser General Public License (also called \"this License\").\nEach licensee is addressed as \"you\".\n\n  A \"library\" means a collection of software functions and/or data\nprepared so as to be conveniently linked with application programs\n(which use some of those functions and data) to form executables.\n\n  The \"Library\", below, refers to any such software library or work\nwhich has been distributed under these terms.  A \"work based on the\nLibrary\" means either the Library or any derivative work under\ncopyright law: that is to say, a work containing the Library or a\nportion of it, either verbatim or with modifications and/or translated\nstraightforwardly into another language.  (Hereinafter, translation is\nincluded without limitation in the term \"modification\".)\n\n  \"Source code\" for a work means the preferred form of the work for\nmaking modifications to it.  For a library, complete source code means\nall the source code for all modules it contains, plus any associated\ninterface definition files, plus the scripts used to control compilation\nand installation of the library.\n\n  Activities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning a program using the Library is not restricted, and output from\nsuch a program is covered only if its contents constitute a work based\non the Library (independent of the use of the Library in a tool for\nwriting it).  Whether that is true depends on what the Library does\nand what the program that uses the Library does.\n\n  1. You may copy and distribute verbatim copies of the Library's\ncomplete source code as you receive it, in any medium, provided that\nyou conspicuously and appropriately publish on each copy an\nappropriate copyright notice and disclaimer of warranty; keep intact\nall the notices that refer to this License and to the absence of any\nwarranty; and distribute a copy of this License along with the\nLibrary.\n\n  You may charge a fee for the physical act of transferring a copy,\nand you may at your option offer warranty protection in exchange for a\nfee.\n\n  2. You may modify your copy or copies of the Library or any portion\nof it, thus forming a work based on the Library, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) The modified work must itself be a software library.\n\n    b) You must cause the files modified to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    c) You must cause the whole of the work to be licensed at no\n    charge to all third parties under the terms of this License.\n\n    d) If a facility in the modified Library refers to a function or a\n    table of data to be supplied by an application program that uses\n    the facility, other than as an argument passed when the facility\n    is invoked, then you must make a good faith effort to ensure that,\n    in the event an application does not supply such function or\n    table, the facility still operates, and performs whatever part of\n    its purpose remains meaningful.\n\n    (For example, a function in a library to compute square roots has\n    a purpose that is entirely well-defined independent of the\n    application.  Therefore, Subsection 2d requires that any\n    application-supplied function or table used by this function must\n    be optional: if the application does not supply it, the square\n    root function must still compute square roots.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Library,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Library, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote\nit.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Library.\n\nIn addition, mere aggregation of another work not based on the Library\nwith the Library (or with a work based on the Library) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may opt to apply the terms of the ordinary GNU General Public\nLicense instead of this License to a given copy of the Library.  To do\nthis, you must alter all the notices that refer to this License, so\nthat they refer to the ordinary GNU General Public License, version 2,\ninstead of to this License.  (If a newer version than version 2 of the\nordinary GNU General Public License has appeared, then you can specify\nthat version instead if you wish.)  Do not make any other change in\nthese notices.\n\n  Once this change is made in a given copy, it is irreversible for\nthat copy, so the ordinary GNU General Public License applies to all\nsubsequent copies and derivative works made from that copy.\n\n  This option is useful when you wish to copy part of the code of\nthe Library into a program that is not a library.\n\n  4. You may copy and distribute the Library (or a portion or\nderivative of it, under Section 2) in object code or executable form\nunder the terms of Sections 1 and 2 above provided that you accompany\nit with the complete corresponding machine-readable source code, which\nmust be distributed under the terms of Sections 1 and 2 above on a\nmedium customarily used for software interchange.\n\n  If distribution of object code is made by offering access to copy\nfrom a designated place, then offering equivalent access to copy the\nsource code from the same place satisfies the requirement to\ndistribute the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  5. A program that contains no derivative of any portion of the\nLibrary, but is designed to work with the Library by being compiled or\nlinked with it, is called a \"work that uses the Library\".  Such a\nwork, in isolation, is not a derivative work of the Library, and\ntherefore falls outside the scope of this License.\n\n  However, linking a \"work that uses the Library\" with the Library\ncreates an executable that is a derivative of the Library (because it\ncontains portions of the Library), rather than a \"work that uses the\nlibrary\".  The executable is therefore covered by this License.\nSection 6 states terms for distribution of such executables.\n\n  When a \"work that uses the Library\" uses material from a header file\nthat is part of the Library, the object code for the work may be a\nderivative work of the Library even though the source code is not.\nWhether this is true is especially significant if the work can be\nlinked without the Library, or if the work is itself a library.  The\nthreshold for this to be true is not precisely defined by law.\n\n  If such an object file uses only numerical parameters, data\nstructure layouts and accessors, and small macros and small inline\nfunctions (ten lines or less in length), then the use of the object\nfile is unrestricted, regardless of whether it is legally a derivative\nwork.  (Executables containing this object code plus portions of the\nLibrary will still fall under Section 6.)\n\n  Otherwise, if the work is a derivative of the Library, you may\ndistribute the object code for the work under the terms of Section 6.\nAny executables containing that work also fall under Section 6,\nwhether or not they are linked directly with the Library itself.\n\n  6. As an exception to the Sections above, you may also combine or\nlink a \"work that uses the Library\" with the Library to produce a\nwork containing portions of the Library, and distribute that work\nunder terms of your choice, provided that the terms permit\nmodification of the work for the customer's own use and reverse\nengineering for debugging such modifications.\n\n  You must give prominent notice with each copy of the work that the\nLibrary is used in it and that the Library and its use are covered by\nthis License.  You must supply a copy of this License.  If the work\nduring execution displays copyright notices, you must include the\ncopyright notice for the Library among them, as well as a reference\ndirecting the user to the copy of this License.  Also, you must do one\nof these things:\n\n    a) Accompany the work with the complete corresponding\n    machine-readable source code for the Library including whatever\n    changes were used in the work (which must be distributed under\n    Sections 1 and 2 above); and, if the work is an executable linked\n    with the Library, with the complete machine-readable \"work that\n    uses the Library\", as object code and/or source code, so that the\n    user can modify the Library and then relink to produce a modified\n    executable containing the modified Library.  (It is understood\n    that the user who changes the contents of definitions files in the\n    Library will not necessarily be able to recompile the application\n    to use the modified definitions.)\n\n    b) Use a suitable shared library mechanism for linking with the\n    Library.  A suitable mechanism is one that (1) uses at run time a\n    copy of the library already present on the user's computer system,\n    rather than copying library functions into the executable, and (2)\n    will operate properly with a modified version of the library, if\n    the user installs one, as long as the modified version is\n    interface-compatible with the version that the work was made with.\n\n    c) Accompany the work with a written offer, valid for at\n    least three years, to give the same user the materials\n    specified in Subsection 6a, above, for a charge no more\n    than the cost of performing this distribution.\n\n    d) If distribution of the work is made by offering access to copy\n    from a designated place, offer equivalent access to copy the above\n    specified materials from the same place.\n\n    e) Verify that the user has already received a copy of these\n    materials or that you have already sent this user a copy.\n\n  For an executable, the required form of the \"work that uses the\nLibrary\" must include any data and utility programs needed for\nreproducing the executable from it.  However, as a special exception,\nthe materials to be distributed need not include anything that is\nnormally distributed (in either source or binary form) with the major\ncomponents (compiler, kernel, and so on) of the operating system on\nwhich the executable runs, unless that component itself accompanies\nthe executable.\n\n  It may happen that this requirement contradicts the license\nrestrictions of other proprietary libraries that do not normally\naccompany the operating system.  Such a contradiction means you cannot\nuse both them and the Library together in an executable that you\ndistribute.\n\n  7. You may place library facilities that are a work based on the\nLibrary side-by-side in a single library together with other library\nfacilities not covered by this License, and distribute such a combined\nlibrary, provided that the separate distribution of the work based on\nthe Library and of the other library facilities is otherwise\npermitted, and provided that you do these two things:\n\n    a) Accompany the combined library with a copy of the same work\n    based on the Library, uncombined with any other library\n    facilities.  This must be distributed under the terms of the\n    Sections above.\n\n    b) Give prominent notice with the combined library of the fact\n    that part of it is a work based on the Library, and explaining\n    where to find the accompanying uncombined form of the same work.\n\n  8. You may not copy, modify, sublicense, link with, or distribute\nthe Library except as expressly provided under this License.  Any\nattempt otherwise to copy, modify, sublicense, link with, or\ndistribute the Library is void, and will automatically terminate your\nrights under this License.  However, parties who have received copies,\nor rights, from you under this License will not have their licenses\nterminated so long as such parties remain in full compliance.\n\n  9. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Library or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Library (or any work based on the\nLibrary), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Library or works based on it.\n\n  10. Each time you redistribute the Library (or any work based on the\nLibrary), the recipient automatically receives a license from the\noriginal licensor to copy, distribute, link with or modify the Library\nsubject to these terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties with\nthis License.\n\n  11. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Library at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Library by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Library.\n\nIf any portion of this section is held invalid or unenforceable under any\nparticular circumstance, the balance of the section is intended to apply,\nand the section as a whole is intended to apply in other circumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  12. If the distribution and/or use of the Library is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Library under this License may add\nan explicit geographical distribution limitation excluding those countries,\nso that distribution is permitted only in or among countries not thus\nexcluded.  In such case, this License incorporates the limitation as if\nwritten in the body of this License.\n\n  13. The Free Software Foundation may publish revised and/or new\nversions of the Lesser General Public License from time to time.\nSuch new versions will be similar in spirit to the present version,\nbut may differ in detail to address new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Library\nspecifies a version number of this License which applies to it and\n\"any later version\", you have the option of following the terms and\nconditions either of that version or of any later version published by\nthe Free Software Foundation.  If the Library does not specify a\nlicense version number, you may choose any version ever published by\nthe Free Software Foundation.\n\n  14. If you wish to incorporate parts of the Library into other free\nprograms whose distribution conditions are incompatible with these,\nwrite to the author to ask for permission.  For software which is\ncopyrighted by the Free Software Foundation, write to the Free\nSoftware Foundation; we sometimes make exceptions for this.  Our\ndecision will be guided by the two goals of preserving the free status\nof all derivatives of our free software and of promoting the sharing\nand reuse of software generally.\n\n                            NO WARRANTY\n\n  15. BECAUSE THE LIBRARY IS LICENSED FREE OF CHARGE, THERE IS NO\nWARRANTY FOR THE LIBRARY, TO THE EXTENT PERMITTED BY APPLICABLE LAW.\nEXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR\nOTHER PARTIES PROVIDE THE LIBRARY \"AS IS\" WITHOUT WARRANTY OF ANY\nKIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE\nLIBRARY IS WITH YOU.  SHOULD THE LIBRARY PROVE DEFECTIVE, YOU ASSUME\nTHE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN\nWRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY\nAND/OR REDISTRIBUTE THE LIBRARY AS PERMITTED ABOVE, BE LIABLE TO YOU\nFOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR\nCONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE\nLIBRARY (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING\nRENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A\nFAILURE OF THE LIBRARY TO OPERATE WITH ANY OTHER SOFTWARE), EVEN IF\nSUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH\nDAMAGES.\n\n                     END OF TERMS AND CONDITIONS\n\n           How to Apply These Terms to Your New Libraries\n\n  If you develop a new library, and you want it to be of the greatest\npossible use to the public, we recommend making it free software that\neveryone can redistribute and change.  You can do so by permitting\nredistribution under these terms (or, alternatively, under the terms of the\nordinary General Public License).\n\n  To apply these terms, attach the following notices to the library.  It is\nsafest to attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least the\n\"copyright\" line and a pointer to where the full notice is found.\n\n    {description}\n    Copyright (C) {year} {fullname}\n\n    This library is free software; you can redistribute it and/or\n    modify it under the terms of the GNU Lesser General Public\n    License as published by the Free Software Foundation; either\n    version 2.1 of the License, or (at your option) any later version.\n\n    This library is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n    Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public\n    License along with this library; if not, write to the Free Software\n    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301\n    USA\n\nAlso add information on how to contact you by electronic and paper mail.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the library, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the\n  library `Frob' (a library for tweaking knobs) written by James Random\n  Hacker.\n\n  {signature of Ty Coon}, 1 April 1990\n  Ty Coon, President of Vice\n\nThat's all there is to it!\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.7490234375,
          "content": "# [JSqlParser 5.0 Website](https://jsqlparser.github.io/JSqlParser) <img src=\"src/site/sphinx/_images/logo-no-background.svg\" alt=\"drawing\" width=\"200\" align=\"right\"/>\n\n[![Maven deploy snapshot](https://github.com/JSQLParser/JSqlParser/actions/workflows/maven_deploy.yml/badge.svg)](https://github.com/JSQLParser/JSqlParser/actions/workflows/maven_deploy.yml)\n[![Gradle CI](https://github.com/JSQLParser/JSqlParser/actions/workflows/gradle.yml/badge.svg)](https://github.com/JSQLParser/JSqlParser/actions/workflows/gradle.yml)\n[![Coverage Status](https://coveralls.io/repos/JSQLParser/JSqlParser/badge.svg?branch=master)](https://coveralls.io/r/JSQLParser/JSqlParser?branch=master) \n[![Codacy Badge](https://app.codacy.com/project/badge/Grade/6f9a2d7eb98f45969749e101322634a1)](https://www.codacy.com/gh/JSQLParser/JSqlParser/dashboard?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=JSQLParser/JSqlParser&amp;utm_campaign=Badge_Grade)\n[![Maven Central](https://maven-badges.herokuapp.com/maven-central/com.github.jsqlparser/jsqlparser/badge.svg)](http://maven-badges.herokuapp.com/maven-central/com.github.jsqlparser/jsqlparser) [![Javadocs](https://www.javadoc.io/badge/com.github.jsqlparser/jsqlparser.svg)](https://www.javadoc.io/doc/com.github.jsqlparser/jsqlparser)\n[![Gitter](https://badges.gitter.im/JSQLParser/JSqlParser.svg)](https://gitter.im/JSQLParser/JSqlParser?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge)\n\n## Summary\n\nPlease visit the [WebSite](https://jsqlparser.github.io/JSqlParser). **JSqlParser** is a RDBMS agnostic SQL statement parser. It translates SQL statements into a traversable hierarchy of Java classes (see [Samples](https://jsqlparser.github.io/JSqlParser/usage.html#parse-a-sql-statements)):\n\n```sql\nSELECT 1 FROM dual WHERE a = b\n```\n\n```text\nSQL Text\n └─Statements: statement.select.PlainSelect\n    ├─selectItems: statement.select.SelectItem\n    │  └─LongValue: 1\n    ├─Table: dual\n    └─where: expression.operators.relational.EqualsTo\n       ├─Column: a\n       └─Column: b\n```\n\n```java\nString sqlStr = \"select 1 from dual where a=b\";\n\nPlainSelect select = (PlainSelect) CCJSqlParserUtil.parse(sqlStr);\n\nSelectItem selectItem =\n        select.getSelectItems().get(0);\nAssertions.assertEquals(\n        new LongValue(1)\n        , selectItem.getExpression());\n\nTable table = (Table) select.getFromItem();\nAssertions.assertEquals(\"dual\", table.getName());\n\nEqualsTo equalsTo = (EqualsTo) select.getWhere();\nColumn a = (Column) equalsTo.getLeftExpression();\nColumn b = (Column) equalsTo.getRightExpression();\nAssertions.assertEquals(\"a\", a.getColumnName());\nAssertions.assertEquals(\"b\", b.getColumnName());\n}\n```\n\nJSQLParser-4.9 was the last JDK8 compatible version. The recent JSQLParser-5.0 depends on JDK11 and introduces API breaking changes to the AST Visitors. Please see the Migration Guide for the details.\n\n## [Supported Grammar and Syntax](https://jsqlparser.github.io/JSqlParser/syntax.html)\n\n**JSqlParser** aims to support the SQL standard as well as all major RDBMS. Any missing syntax or features can be added on demand.\n\n| RDBMS                                                                                                           | Statements                                                                                                                                      |\n|-----------------------------------------------------------------------------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------|\n| Oracle<br>MS SQL Server and Sybase<br>Postgres<br>MySQL and MariaDB<br>DB2<br>H2 and HSQLDB and Derby<br>SQLite | `SELECT`<br>`INSERT`, `UPDATE`, `UPSERT`, `MERGE`<br>`DELETE`, `TRUNCATE TABLE`<br>`CREATE ...`, `ALTER ....`, `DROP ...`<br>`WITH ...`         |\n| Salesforce SOQL                                                                                                 | `INCLUDES`, `EXCLUDES` |\n\n**JSqlParser** can also be used to create SQL Statements from Java Code with a fluent API (see [Samples](https://jsqlparser.github.io/JSqlParser/usage.html#build-a-sql-statements)).\n\n## Sister Projects\n\nIf you like JSqlParser then please check out its related projects:\n\n* [JSQLFormatter](https://manticore-projects.com/JSQLFormatter/index.html) for pretty printing and formatting SQL Text\n\n* [JSQLTranspiler](https://manticore-projects.com/JSQLTranspiler/index.html) for dialect specific rewriting, SQL Column resolution and Lineage\n\n## Alternatives to JSqlParser?\n[**General SQL Parser**](http://www.sqlparser.com/features/introduce.php?utm_source=github-jsqlparser&utm_medium=text-general) looks pretty good, with extended SQL syntax (like PL/SQL and T-SQL) and java + .NET APIs. The tool is commercial (license available online), with a free download option.\n\nAlternatively the dual-licensed [JOOQ](https://www.jooq.org/doc/latest/manual/sql-building/sql-parser/) provides a hand-written Parser supporting a lot of RDBMS, translation between dialects, SQL transformation, can be used as a JDBC proxy for translation and transformation purposes.\n\n## [Documentation](https://jsqlparser.github.io/JSqlParser)\n  1. [Samples](https://jsqlparser.github.io/JSqlParser/usage.html#parse-a-sql-statements)\n  2. [Build Instructions](https://jsqlparser.github.io/JSqlParser/usage.html) and [Maven Artifact](https://jsqlparser.github.io/JSqlParser/usage.html#build-dependencies)\n  3. [Contribution](https://jsqlparser.github.io/JSqlParser/contribution.html)\n  4. [Change Log](https://jsqlparser.github.io/JSqlParser/changelog.html#latest-changes-since-jsqlparser-version)\n  5. [Issues](https://github.com/JSQLParser/JSqlParser/issues)\n\n## License\n\n**JSqlParser** is dual licensed under **LGPL V2.1** or **Apache Software License, Version 2.0**.\n"
        },
        {
          "name": "build.gradle",
          "type": "blob",
          "size": 18.2021484375,
          "content": "import se.bjurr.gitchangelog.plugin.gradle.GitChangelogTask\n\nplugins {\n    id 'java'\n    id 'maven-publish'\n    id 'signing'\n\n    id \"org.javacc.javacc\" version \"latest.release\"\n    id 'jacoco'\n    id 'com.github.kt3k.coveralls' version \"latest.release\"\n    id \"com.github.spotbugs\" version \"latest.release\"\n    id \"com.diffplug.spotless\" version \"latest.release\"\n    id 'pmd'\n    id 'checkstyle'\n\n    // download the RR tools which have no Maven Repository\n    id \"de.undercouch.download\" version \"latest.release\"\n    id 'org.hidetake.ssh' version \"latest.release\"\n\n    id \"se.bjurr.gitchangelog.git-changelog-gradle-plugin\" version \"2.0.0\" //later depends on JDK 17\n    id \"me.champeau.jmh\" version \"latest.release\"\n    id \"com.nwalsh.gradle.saxon.saxon-gradle\" version \"0.9.6\"\n}\n\ndef getVersion = { boolean considerSnapshot ->\n    Integer major = 0\n    Integer minor = 0\n    Integer patch = null\n    Integer build = null\n    def commit = null\n    def snapshot = \"\"\n    new ByteArrayOutputStream().withStream { os ->\n        exec {\n            args = [\n                    \"--no-pager\"\n                    , \"describe\"\n                    , \"--tags\"\n                    , \"--always\"\n                    , \"--dirty=-SNAPSHOT\"\n            ]\n            executable \"git\"\n            standardOutput = os\n        }\n        def versionStr = os.toString().trim()\n        def pattern = /(?<major>\\d*)\\.(?<minor>\\d*)(\\.(?<patch>\\d*))?(-(?<build>\\d*)-(?<commit>[a-zA-Z\\d]*))?/\n        def matcher = versionStr =~ pattern\n        if (matcher.find()) {\n            major = matcher.group('major') as Integer\n            minor = matcher.group('minor') as Integer\n            patch = matcher.group('patch') as Integer\n            build = matcher.group('build') as Integer\n            commit = matcher.group('commit')\n        }\n\n        if (considerSnapshot && ( versionStr.endsWith('SNAPSHOT') || build!=null) ) {\n            minor++\n            if (patch!=null) patch = 0\n            snapshot = \"-SNAPSHOT\"\n        }\n    }\n    return patch!=null\n            ? \"${major}.${minor}.${patch}${snapshot}\"\n            :  \"${major}.${minor}${snapshot}\"\n}\n\n// for publishing a release, call Gradle with Environment Variable RELEASE:\n// RELEASE=true gradle JSQLParser:publish\nversion = getVersion( !System.getenv(\"RELEASE\") )\ngroup = 'com.github.jsqlparser'\ndescription = 'JSQLParser library'\narchivesBaseName = \"JSQLParser\"\n\nrepositories {\n    gradlePluginPortal()\n    mavenLocal()\n    mavenCentral()\n\n    // Sonatype OSSRH\n    maven {\n        url = uri('https://s01.oss.sonatype.org/content/repositories/snapshots/')\n    }\n}\n\nconfigurations {\n    xmlDoclet\n}\n\ndependencies {\n    testImplementation 'commons-io:commons-io:2.+'\n    testImplementation 'org.apache.commons:commons-text:+'\n    testImplementation 'org.mockito:mockito-core:+'\n    testImplementation 'org.assertj:assertj-core:+'\n    testImplementation 'org.hamcrest:hamcrest-core:+'\n    testImplementation 'org.apache.commons:commons-lang3:+'\n    testImplementation 'com.h2database:h2:+'\n\n    // for JaCoCo Reports\n    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.11.+'\n    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.11.+'\n    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.11.+'\n\n    // https://mvnrepository.com/artifact/org.mockito/mockito-junit-jupiter\n    testImplementation 'org.mockito:mockito-junit-jupiter:+'\n\n    // Performance Benchmark\n    testImplementation 'org.openjdk.jmh:jmh-core:+'\n    testImplementation 'org.openjdk.jmh:jmh-generator-annprocess:+'\n\n    // Java Doc in XML Format\n    xmlDoclet 'com.manticore-projects.tools:xml-doclet:1.+'\n\n    // enforce latest version of JavaCC\n    testImplementation 'net.java.dev.javacc:javacc:+'\n    javacc 'net.java.dev.javacc:javacc:+'\n}\n\ncompileJavacc {\n    arguments = [grammar_encoding: 'UTF-8', static: 'false', java_template_type: 'modern']\n}\n\njava {\n    withSourcesJar()\n    withJavadocJar()\n\n    sourceCompatibility = '11'\n    targetCompatibility = '11'\n    // needed for XML-Doclet to work (since Doclet changed again with Java 13)\n    toolchain {\n        languageVersion.set(JavaLanguageVersion.of(11))\n    }\n}\n\njavadoc {\n    include(\"build/generated/javacc/net/sf/jsqlparser/parser/*.java\" )\n    if(JavaVersion.current().isJava9Compatible()) {\n        options.addBooleanOption('html5', true)\n    }\n    options.addBooleanOption(\"Xdoclint:none\", true)\n}\n\njar {\n    manifest {\n        attributes (\n            \"Automatic-Module-Name\": \"net.sf.jsqlparser\"\n        )\n    }\n}\n\ntasks.register('xmldoc', Javadoc) {\n    def outFile =  reporting.file(\n            version.endsWith(\"-SNAPSHOT\")\n                    ? \"xmlDoclet/javadoc_snapshot.xml\"\n                    : \"xmlDoclet/javadoc_stable.xml\"\n    )\n\n    def rstFile =  reporting.file(\n            version.endsWith(\"-SNAPSHOT\")\n                    ? \"xmlDoclet/javadoc_snapshot.rst\"\n                    : \"xmlDoclet/javadoc_stable.rst\"\n    )\n\n    source = sourceSets.main.allJava\n    // beware: Gradle deletes this folder automatically and there is no switch-off\n    destinationDir = reporting.file(\"xmlDoclet\")\n    options.docletpath = configurations.xmlDoclet.files as List\n    options.doclet = \"com.github.markusbernhardt.xmldoclet.XmlDoclet\"\n    title = \"API $version\"\n    options.addBooleanOption(\"rst\", true)\n    options.addBooleanOption(\"withFloatingToc\", Boolean.parseBoolean(System.getenv().getOrDefault(\"FLOATING_TOC\", \"true\")))\n    options.addStringOption(\"basePackage\", \"net.sf.jsqlparser\")\n    options.addStringOption(\"filename\", outFile.getName())\n\n    dependsOn(compileJava)\n    doLast {\n        copy {\n            from rstFile\n            into \"${projectDir}/src/site/sphinx/\"\n        }\n    }\n}\n\ntest {\n    environment = [ 'EXPORT_TEST_TO_FILE': 'False' ]\n    useJUnitPlatform()\n\n    // set heap size for the test JVM(s)\n    minHeapSize = \"128m\"\n    maxHeapSize = \"4G\"\n\n    // set JVM stack size\n    jvmArgs = ['-Xss2m']\n\n    jacoco {\n        excludes = ['net/sf/jsqlparser/parser/CCJSqlParserTokenManager']\n    }\n}\n\ncoveralls {\n    jacocoReportPath 'build/reports/jacoco/test/jacocoTestReport.xml'\n}\n\njacocoTestReport {\n    dependsOn test // tests are required to run before generating the report\n    reports {\n        xml.required = false\n        csv.required = false\n        html.outputLocation = layout.buildDirectory.dir('reports/jacoco')\n    }\n}\njacocoTestCoverageVerification {\n    // Jacoco can't handle the TokenManager class\n    afterEvaluate {\n        classDirectories.setFrom(files(classDirectories.files.collect {\n            fileTree(dir: it, exclude: [\n                    \"**CCJSqlParserTokenManager**\"\n            ])\n        }))\n    }\n    violationRules {\n        rule {\n            //element = 'CLASS'\n            limit {\n                //@todo: temporarily reduced it 80%, we need to bring that back to 84% accepting the Keywords PR\n                minimum = 0.50\n            }\n            excludes = [\n                    'net.sf.jsqlparser.util.validation.*',\n                    'net.sf.jsqlparser.**.*Adapter',\n                    'net.sf.jsqlparser.parser.**'\n            ]\n        }\n        rule {\n            //element = 'CLASS'\n            limit {\n                counter = 'LINE'\n                value = 'MISSEDCOUNT'\n\n                //@todo: temporarily increased to 7000, we need to bring that down to 5500 after accepting the Keywords PR\n                maximum = 20000\n                }\n            excludes = [\n                    'net.sf.jsqlparser.util.validation.*',\n                    'net.sf.jsqlparser.**.*Adapter',\n                    'net.sf.jsqlparser.parser.**'\n            ]\n        }\n//        rule {\n//            element = 'CLASS'\n//            limit {\n//                counter = 'LINE'\n//                value = 'MISSEDRATIO'\n//                maximum = 0.3\n//            }\n//           excludes = [\n//                    'net.sf.jsqlparser.util.validation.*',\n//                    'net.sf.jsqlparser.**.*Adapter',\n//                    'net.sf.jsqlparser.parser.**'\n//            ]\n//        }\n    }\n}\n\nspotbugsMain {\n    reports {\n        html {\n            enabled = true\n            destination = file(\"build/reports/spotbugs/main/spotbugs.html\")\n            stylesheet = 'fancy-hist.xsl'\n        }\n    }\n}\n\nspotbugs {\n    // fail only on P1 and without the net.sf.jsqlparser.parser.*\n    excludeFilter = file(\"config/spotbugs/spotBugsExcludeFilter.xml\")\n\n    // do not run over the test, although we should do that eventually\n    spotbugsTest.enabled = false\n}\n\npmd {\n    consoleOutput = true\n    sourceSets = [sourceSets.main]\n\n    // clear the ruleset in order to use configured rules only\n    ruleSets = []\n\n    //rulesMinimumPriority = 1\n    ruleSetFiles = files(\"config/pmd/ruleset.xml\")\n\n    pmdMain {\n        excludes = [\n                \"build/generated/*\"\n        ]\n    }\n}\n\ncheckstyle {\n    sourceSets = [sourceSets.main, sourceSets.test]\n    configFile = rootProject.file('config/checkstyle/checkstyle.xml')\n}\n\nspotless {\n    // optional: limit format enforcement to just the files changed by this feature branch\n    ratchetFrom 'origin/master'\n\n    format 'misc', {\n        // define the files to apply `misc` to\n        target '*.rst', '*.md', '.gitignore'\n\n        // define the steps to apply to those files\n        trimTrailingWhitespace()\n        indentWithSpaces(4) // or spaces. Takes an integer argument if you don't like 4\n        endWithNewline()\n    }\n    java {\n        indentWithSpaces(4)\n        eclipse().configFile('config/formatter/eclipse-java-google-style.xml')\n    }\n}\n\ntasks.withType(Checkstyle).configureEach {\n    reports {\n        xml.required = false\n        html.required = true\n    }\n    excludes = [ \"**/module-info.java\" ]\n}\n\ntasks.register('renderRR') {\n    dependsOn(compileJavacc)\n    doLast {\n        // these WAR files have been provided as a courtesy by Gunther Rademacher\n        // and belong to the RR - Railroad Diagram Generator Project\n        // https://github.com/GuntherRademacher/rr\n        //\n        // Hosting at manticore-projects.com is temporary until a better solution is found\n        // Please do not use these files without Gunther's permission\n        download.run {\n            src 'http://manticore-projects.com/download/convert.war'\n            dest \"$buildDir/rr/convert.war\"\n            overwrite false\n            onlyIfModified true\n        }\n\n        download.run {\n            src 'http://manticore-projects.com/download/rr.war'\n            dest \"$buildDir/rr/rr.war\"\n            overwrite false\n            onlyIfModified true\n            tempAndMove true\n        }\n\n        javaexec {\n            standardOutput = new FileOutputStream(\"${buildDir}/rr/JSqlParserCC.ebnf\")\n            main = \"-jar\"\n            args = [\n                    \"$buildDir/rr/convert.war\",\n                    \"$buildDir/generated/jjtree/net/sf/jsqlparser/parser/JSqlParserCC.jj\"\n            ]\n        }\n\n        javaexec {\n            main = \"-jar\"\n            args = [\n                    \"$buildDir/rr/rr.war\",\n                    \"-noepsilon\",\n                    \"-color:#4D88FF\",\n                    \"-offset:0\",\n                    \"-width:800\",\n                    //\"-png\",\n                    //\"-out:${buildDir}/rr/JSqlParserCC.zip\",\n                    \"-out:${buildDir}/rr/JSqlParserCC.xhtml\",\n                    \"${buildDir}/rr/JSqlParserCC.ebnf\"\n            ]\n        }\n    }\n}\n\ntasks.register('gitChangelogTask', GitChangelogTask) {\n    fromRepo = file(\"$projectDir\")\n    file = new File(\"${projectDir}/src/site/sphinx/changelog.rst\")\n    fromRef = \"4.0\"\n    //toRef = \"1.1\";\n\n    // switch off the formatter since the indentation matters for Mark-down\n    // @formatter:off\n    templateContent =\"\"\"\n************************\nChangelog\n************************\n\n\n{{#tags}}\n{{#ifMatches name \"^Unreleased.*\"}}\nLatest Changes since |JSQLPARSER_VERSION|\n{{/ifMatches}}\n{{#ifMatches name \"^(?!Unreleased).*\"}}\nVersion {{name}}\n{{/ifMatches}}\n=============================================================\n\n {{#issues}}\n\n  {{#commits}}\n   {{#ifMatches messageTitle \"^(?!Merge).*\"}}\n  * **{{{messageTitle}}}**\n    \n    {{authorName}}, {{commitDate}}\n   {{/ifMatches}}\n  {{/commits}}\n\n {{/issues}}\n{{/tags}}\n\"\"\"\n    // @formatter:on\n}\n\ntasks.register('updateKeywords', JavaExec) {\n    group = \"Execution\"\n    description = \"Run the main class with JavaExecTask\"\n    classpath = sourceSets.main.runtimeClasspath\n    args = [\n            file('src/main/jjtree/net/sf/jsqlparser/parser/JSqlParserCC.jjt').absolutePath\n            , file('src/site/sphinx/keywords.rst').absolutePath\n    ]\n    main(\"net.sf.jsqlparser.parser.ParserKeywordsUtils\")\n\n    dependsOn(compileJava)\n}\n\nxslt  {\n    def outFile = version.endsWith(\"-SNAPSHOT\")\n            ?   file(\"src/site/sphinx/syntax_snapshot.rst\")\n            :   file(\"src/site/sphinx/syntax_stable.rst\")\n\n    dependsOn(renderRR)\n    stylesheet 'src/main/resources/rr/xhtml2rst.xsl'\n\n    parameters (\n            \"withFloatingToc\": System.getenv().getOrDefault(\"FLOATING_TOC\", \"true\"),\n            \"isSnapshot\": Boolean.toString(version.endsWith(\"-SNAPSHOT\"))\n    )\n\n    // Transform every .xml file in the \"input\" directory.\n    input \"$buildDir/rr/JSqlParserCC.xhtml\"\n    output outFile\n}\n\ntasks.register('sphinx', Exec) {\n    dependsOn(gitChangelogTask, renderRR, xslt, xmldoc)\n\n    String PROLOG = \"\"\"\n.. |_| unicode:: U+00A0\n    :trim:\n\n.. |JSQLPARSER_EMAIL| replace:: support@manticore-projects.com\n.. |JSQLPARSER_VERSION| replace:: ${getVersion(false)}\n.. |JSQLPARSER_SNAPSHOT_VERSION| replace:: ${getVersion(true)}\n.. |JSQLPARSER_STABLE_VERSION_LINK| raw:: html\n\n    <a href='http://manticore-projects.com/download/${project.name}-${getVersion(false)}/${project.name}-${getVersion(false)}.jar'>${project.name}-${getVersion(false)}.jar</a>\n\n.. |JSQLPARSER_SNAPSHOT_VERSION_LINK| raw:: html\n\n    <a href='http://manticore-projects.com/download/${project.name}-${getVersion(false)}/${project.name}-${getVersion(true)}.jar'>${project.name}-${getVersion(true)}.jar</a>\n\n\"\"\"\n\n    args = [\n            \"-Dproject=JSQLParser\"\n            , \"-Dcopyright=Tobias Warneke, 2022\"\n            , \"-Dauthor=Tobias Warneke\"\n            , \"-Drelease=${getVersion(false)}\"\n            , \"-Drst_prolog=$PROLOG\"\n            , \"${projectDir}/src/site/sphinx\"\n            , \"${project.buildDir}/sphinx\"\n    ]\n\n    executable \"sphinx-build\"\n\n    //store the output instead of printing to the console:\n    standardOutput = new ByteArrayOutputStream()\n\n    //extension method stopTomcat.output() can be used to obtain the output:\n    ext.output = {\n        return standardOutput.toString()\n    }\n}\n\npublish {\n    dependsOn(check, gitChangelogTask, renderRR, xslt, xmldoc)\n}\n\npublishing {\n    publications {\n        mavenJava(MavenPublication) {\n            artifactId = 'jsqlparser'\n\n            from components.java\n            versionMapping {\n                usage('java-api') {\n                    fromResolutionOf('runtimeClasspath')\n                }\n                usage('java-runtime') {\n                    fromResolutionResult()\n                }\n            }\n            pom {\n                name = 'JSQLParser library'\n                description = 'Parse SQL Statements into Abstract Syntax Trees (AST)'\n                url = 'https://github.com/JSQLParser/JSqlParser'\n                licenses {\n                    license {\n                        name = 'GNU Library or Lesser General Public License (LGPL) V2.1'\n                        url = 'http://www.gnu.org/licenses/lgpl-2.1.html'\n                    }\n                    license {\n                        name = 'The Apache Software License, Version 2.0'\n                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'\n                    }\n                }\n                developers {\n                    developer {\n                        id = 'twa'\n                        name = 'Tobias Warneke'\n                        email = 't.warneke@gmx.net'\n                    }\n                    developer {\n                        id = 'are'\n                        name = 'Andreas Reichel'\n                        email = 'andreas@manticore-projects.com'\n                    }\n                }\n                scm {\n                    connection = 'scm:git:https://github.com/JSQLParser/JSqlParser.git'\n                    developerConnection = 'scm:git:ssh://git@github.com:JSQLParser/JSqlParser.git'\n                    url = 'https://github.com/JSQLParser/JSqlParser.git'\n                }\n            }\n        }\n    }\n    repositories {\n        maven {\n            name \"ossrh\"\n            def releasesRepoUrl = \"https://oss.sonatype.org/service/local/staging/deploy/maven2/\"\n            def snapshotsRepoUrl= \"https://oss.sonatype.org/content/repositories/snapshots/\"\n            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl\n            credentials {\n                username = System.getenv(\"ossrhUsername\")\n                password = System.getenv(\"ossrhPassword\")\n            }\n        }\n    }\n}\n\nsigning {\n    //def signingKey = findProperty(\"signingKey\")\n    //def signingPassword = findProperty(\"signingPassword\")\n    //useInMemoryPgpKeys(signingKey, signingPassword)\n\n    // don't sign SNAPSHOTS\n    if (!version.endsWith('SNAPSHOT')) {\n        sign publishing.publications.mavenJava\n    }\n}\n\ntasks.withType(JavaCompile).configureEach {\n    options.encoding = 'UTF-8'\n}\n\nremotes {\n    webServer {\n        host = findProperty(\"${project.name}.host\")\n        user = findProperty(\"${project.name}.username\")\n        identity = new File(\"${System.properties['user.home']}/.ssh/id_rsa\")\n    }\n}\n\ntasks.register('upload') {\n    doFirst {\n        if (findProperty(\"${project.name}.host\") == null) {\n            println(\n                    \"\"\"\n                Property \\\"${project.name}.host\\' not found.\n                Please define \\\"${project.name}.host\\\" in the Gradle configuration (e. g. \\$HOME/.gradle/gradle.properties.\n                \"\"\"\n            )\n        }\n    }\n    doLast {\n        ssh.run {\n            session(remotes.webServer) {\n                def versionStable = getVersion(false)\n                execute \"mkdir -p download/${project.name}-${versionStable}\"\n                for (File file: fileTree(include:['*.jar'], dir:\"${project.buildDir}/libs\").collect()) {\n                    put from: file, into: \"download/${project.name}-${versionStable}\"\n                }\n            }\n        }\n    }\n}\ncheck.dependsOn jacocoTestCoverageVerification\nupload.dependsOn(check, assemble, gitChangelogTask, renderRR, xslt, xmldoc)\n\n"
        },
        {
          "name": "config",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradle.properties",
          "type": "blob",
          "size": 0.8203125,
          "content": "# Specifies the JVM arguments used for the daemon process.\n# The setting is particularly useful for tweaking memory settings.\norg.gradle.jvmargs=-Xmx4G -Xss2m -Dfile.encoding=UTF-8 -XX:+HeapDumpOnOutOfMemoryError\n\norg.gradle.caching=true\n\n# Modularise your project and enable parallel build\norg.gradle.parallel=true\n\n# Enable configure on demand.\norg.gradle.configureondemand=true\n\n# see https://docs.gradle.org/current/userguide/upgrading_version_8.html#xml_parsing_now_requires_recent_parsers\nsystemProp.javax.xml.parsers.SAXParserFactory=com.sun.org.apache.xerces.internal.jaxp.SAXParserFactoryImpl\nsystemProp.javax.xml.transform.TransformerFactory=com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl\nsystemProp.javax.xml.parsers.DocumentBuilderFactory=com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl\n\n"
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 8.556640625,
          "content": "#!/bin/sh\n\n#\n# Copyright © 2015-2021 the original authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      https://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n# SPDX-License-Identifier: Apache-2.0\n#\n\n##############################################################################\n#\n#   Gradle start up script for POSIX generated by Gradle.\n#\n#   Important for running:\n#\n#   (1) You need a POSIX-compliant shell to run this script. If your /bin/sh is\n#       noncompliant, but you have some other compliant shell such as ksh or\n#       bash, then to run this script, type that shell name before the whole\n#       command line, like:\n#\n#           ksh Gradle\n#\n#       Busybox and similar reduced shells will NOT work, because this script\n#       requires all of these POSIX shell features:\n#         * functions;\n#         * expansions «$var», «${var}», «${var:-default}», «${var+SET}»,\n#           «${var#prefix}», «${var%suffix}», and «$( cmd )»;\n#         * compound commands having a testable exit status, especially «case»;\n#         * various built-in commands including «command», «set», and «ulimit».\n#\n#   Important for patching:\n#\n#   (2) This script targets any POSIX shell, so it avoids extensions provided\n#       by Bash, Ksh, etc; in particular arrays are avoided.\n#\n#       The \"traditional\" practice of packing multiple parameters into a\n#       space-separated string is a well documented source of bugs and security\n#       problems, so this is (mostly) avoided, by progressively accumulating\n#       options in \"$@\", and eventually passing that to Java.\n#\n#       Where the inherited environment variables (DEFAULT_JVM_OPTS, JAVA_OPTS,\n#       and GRADLE_OPTS) rely on word-splitting, this is performed explicitly;\n#       see the in-line comments for details.\n#\n#       There are tweaks for specific operating systems such as AIX, CygWin,\n#       Darwin, MinGW, and NonStop.\n#\n#   (3) This script is generated from the Groovy template\n#       https://github.com/gradle/gradle/blob/HEAD/platforms/jvm/plugins-application/src/main/resources/org/gradle/api/internal/plugins/unixStartScript.txt\n#       within the Gradle project.\n#\n#       You can find Gradle at https://github.com/gradle/gradle/.\n#\n##############################################################################\n\n# Attempt to set APP_HOME\n\n# Resolve links: $0 may be a link\napp_path=$0\n\n# Need this for daisy-chained symlinks.\nwhile\n    APP_HOME=${app_path%\"${app_path##*/}\"}  # leaves a trailing /; empty if no leading path\n    [ -h \"$app_path\" ]\ndo\n    ls=$( ls -ld \"$app_path\" )\n    link=${ls#*' -> '}\n    case $link in             #(\n      /*)   app_path=$link ;; #(\n      *)    app_path=$APP_HOME$link ;;\n    esac\ndone\n\n# This is normally unused\n# shellcheck disable=SC2034\nAPP_BASE_NAME=${0##*/}\n# Discard cd standard output in case $CDPATH is set (https://github.com/gradle/gradle/issues/25036)\nAPP_HOME=$( cd -P \"${APP_HOME:-./}\" > /dev/null && printf '%s\n' \"$PWD\" ) || exit\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=maximum\n\nwarn () {\n    echo \"$*\"\n} >&2\n\ndie () {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n} >&2\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\nnonstop=false\ncase \"$( uname )\" in                #(\n  CYGWIN* )         cygwin=true  ;; #(\n  Darwin* )         darwin=true  ;; #(\n  MSYS* | MINGW* )  msys=true    ;; #(\n  NONSTOP* )        nonstop=true ;;\nesac\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=$JAVA_HOME/jre/sh/java\n    else\n        JAVACMD=$JAVA_HOME/bin/java\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=java\n    if ! command -v java >/dev/null 2>&1\n    then\n        die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nfi\n\n# Increase the maximum file descriptors if we can.\nif ! \"$cygwin\" && ! \"$darwin\" && ! \"$nonstop\" ; then\n    case $MAX_FD in #(\n      max*)\n        # In POSIX sh, ulimit -H is undefined. That's why the result is checked to see if it worked.\n        # shellcheck disable=SC2039,SC3045\n        MAX_FD=$( ulimit -H -n ) ||\n            warn \"Could not query maximum file descriptor limit\"\n    esac\n    case $MAX_FD in  #(\n      '' | soft) :;; #(\n      *)\n        # In POSIX sh, ulimit -n is undefined. That's why the result is checked to see if it worked.\n        # shellcheck disable=SC2039,SC3045\n        ulimit -n \"$MAX_FD\" ||\n            warn \"Could not set maximum file descriptor limit to $MAX_FD\"\n    esac\nfi\n\n# Collect all arguments for the java command, stacking in reverse order:\n#   * args from the command line\n#   * the main class name\n#   * -classpath\n#   * -D...appname settings\n#   * --module-path (only if needed)\n#   * DEFAULT_JVM_OPTS, JAVA_OPTS, and GRADLE_OPTS environment variables.\n\n# For Cygwin or MSYS, switch paths to Windows format before running java\nif \"$cygwin\" || \"$msys\" ; then\n    APP_HOME=$( cygpath --path --mixed \"$APP_HOME\" )\n    CLASSPATH=$( cygpath --path --mixed \"$CLASSPATH\" )\n\n    JAVACMD=$( cygpath --unix \"$JAVACMD\" )\n\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    for arg do\n        if\n            case $arg in                                #(\n              -*)   false ;;                            # don't mess with options #(\n              /?*)  t=${arg#/} t=/${t%%/*}              # looks like a POSIX filepath\n                    [ -e \"$t\" ] ;;                      #(\n              *)    false ;;\n            esac\n        then\n            arg=$( cygpath --path --ignore --mixed \"$arg\" )\n        fi\n        # Roll the args list around exactly as many times as the number of\n        # args, so each arg winds up back in the position where it started, but\n        # possibly modified.\n        #\n        # NB: a `for` loop captures its iteration list before it begins, so\n        # changing the positional parameters here affects neither the number of\n        # iterations, nor the values presented in `arg`.\n        shift                   # remove old arg\n        set -- \"$@\" \"$arg\"      # push replacement arg\n    done\nfi\n\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS='\"-Xmx64m\" \"-Xms64m\"'\n\n# Collect all arguments for the java command:\n#   * DEFAULT_JVM_OPTS, JAVA_OPTS, JAVA_OPTS, and optsEnvironmentVar are not allowed to contain shell fragments,\n#     and any embedded shellness will be escaped.\n#   * For example: A user cannot expect ${Hostname} to be expanded, as it is an environment variable and will be\n#     treated as '${Hostname}' itself on the command line.\n\nset -- \\\n        \"-Dorg.gradle.appname=$APP_BASE_NAME\" \\\n        -classpath \"$CLASSPATH\" \\\n        org.gradle.wrapper.GradleWrapperMain \\\n        \"$@\"\n\n# Stop when \"xargs\" is not available.\nif ! command -v xargs >/dev/null 2>&1\nthen\n    die \"xargs is not available\"\nfi\n\n# Use \"xargs\" to parse quoted args.\n#\n# With -n1 it outputs one arg per line, with the quotes and backslashes removed.\n#\n# In Bash we could simply go:\n#\n#   readarray ARGS < <( xargs -n1 <<<\"$var\" ) &&\n#   set -- \"${ARGS[@]}\" \"$@\"\n#\n# but POSIX shell has neither arrays nor command substitution, so instead we\n# post-process each arg (as a line of input to sed) to backslash-escape any\n# character that might be a shell metacharacter, then use eval to reverse\n# that process (while maintaining the separation between arguments), and wrap\n# the whole thing up as a single \"set\" statement.\n#\n# This will of course break if any of these variables contains a newline or\n# an unmatched quote.\n#\n\neval \"set -- $(\n        printf '%s\\n' \"$DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS\" |\n        xargs -n1 |\n        sed ' s~[^-[:alnum:]+,./:=@_]~\\\\&~g; ' |\n        tr '\\n' ' '\n    )\" '\"$@\"'\n\nexec \"$JAVACMD\" \"$@\"\n"
        },
        {
          "name": "gradlew.bat",
          "type": "blob",
          "size": 2.8046875,
          "content": "@rem\n@rem Copyright 2015 the original author or authors.\n@rem\n@rem Licensed under the Apache License, Version 2.0 (the \"License\");\n@rem you may not use this file except in compliance with the License.\n@rem You may obtain a copy of the License at\n@rem\n@rem      https://www.apache.org/licenses/LICENSE-2.0\n@rem\n@rem Unless required by applicable law or agreed to in writing, software\n@rem distributed under the License is distributed on an \"AS IS\" BASIS,\n@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@rem See the License for the specific language governing permissions and\n@rem limitations under the License.\n@rem\n@rem SPDX-License-Identifier: Apache-2.0\n@rem\n\n@if \"%DEBUG%\"==\"\" @echo off\n@rem ##########################################################################\n@rem\n@rem  Gradle startup script for Windows\n@rem\n@rem ##########################################################################\n\n@rem Set local scope for the variables with windows NT shell\nif \"%OS%\"==\"Windows_NT\" setlocal\n\nset DIRNAME=%~dp0\nif \"%DIRNAME%\"==\"\" set DIRNAME=.\n@rem This is normally unused\nset APP_BASE_NAME=%~n0\nset APP_HOME=%DIRNAME%\n\n@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.\nfor %%i in (\"%APP_HOME%\") do set APP_HOME=%%~fi\n\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nset DEFAULT_JVM_OPTS=\"-Xmx64m\" \"-Xms64m\"\n\n@rem Find java.exe\nif defined JAVA_HOME goto findJavaFromJavaHome\n\nset JAVA_EXE=java.exe\n%JAVA_EXE% -version >NUL 2>&1\nif %ERRORLEVEL% equ 0 goto execute\n\necho. 1>&2\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH. 1>&2\necho. 1>&2\necho Please set the JAVA_HOME variable in your environment to match the 1>&2\necho location of your Java installation. 1>&2\n\ngoto fail\n\n:findJavaFromJavaHome\nset JAVA_HOME=%JAVA_HOME:\"=%\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\n\nif exist \"%JAVA_EXE%\" goto execute\n\necho. 1>&2\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME% 1>&2\necho. 1>&2\necho Please set the JAVA_HOME variable in your environment to match the 1>&2\necho location of your Java installation. 1>&2\n\ngoto fail\n\n:execute\n@rem Setup the command line\n\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\n\n\n@rem Execute Gradle\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*\n\n:end\n@rem End local scope for the variables with windows NT shell\nif %ERRORLEVEL% equ 0 goto mainEnd\n\n:fail\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\nrem the _cmd.exe /c_ return code!\nset EXIT_CODE=%ERRORLEVEL%\nif %EXIT_CODE% equ 0 set EXIT_CODE=1\nif not \"\"==\"%GRADLE_EXIT_CONSOLE%\" exit %EXIT_CODE%\nexit /b %EXIT_CODE%\n\n:mainEnd\nif \"%OS%\"==\"Windows_NT\" endlocal\n\n:omega\n"
        },
        {
          "name": "nb-configuration.xml",
          "type": "blob",
          "size": 2.744140625,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project-shared-configuration>\n    <!--\n\tThis file contains additional configuration written by modules in the NetBeans IDE.\n\tThe configuration is intended to be shared among all the users of project and\n\ttherefore it is assumed to be part of version control checkout.\n\tWithout this configuration present, some functionality in the IDE may be limited or fail altogether.\n\t-->\n    <properties xmlns=\"http://www.netbeans.org/ns/maven-properties-data/1\">\n        <!--\n\t\tProperties that influence various parts of the IDE, especially code formatting and the like. \n\t\tYou can copy and paste the single properties, into the pom.xml file and the IDE will pick them up.\n\t\tThat way multiple projects can share the same settings (useful for formatting rules for example).\n\t\tAny value defined here will override the pom.xml file value but is only applicable to the current project.\n\t\t-->\n        <netbeans.compile.on.save>none</netbeans.compile.on.save>\n        <com-junichi11-netbeans-changelf.enable>false</com-junichi11-netbeans-changelf.enable>\n        <com-junichi11-netbeans-changelf.use-project>true</com-junichi11-netbeans-changelf.use-project>\n        <com-junichi11-netbeans-changelf.lf-kind>LF</com-junichi11-netbeans-changelf.lf-kind>\n        <com-junichi11-netbeans-changelf.use-global>false</com-junichi11-netbeans-changelf.use-global>\n        <org-netbeans-modules-javascript2-requirejs.enabled>true</org-netbeans-modules-javascript2-requirejs.enabled>\n        <netbeans.hint.jdkPlatform>JDK_11</netbeans.hint.jdkPlatform>\n        <org-netbeans-modules-editor-indent.text.xml.CodeStyle.project.expand-tabs>false</org-netbeans-modules-editor-indent.text.xml.CodeStyle.project.expand-tabs>\n        <org-netbeans-modules-editor-indent.CodeStyle.project.text-line-wrap>none</org-netbeans-modules-editor-indent.CodeStyle.project.text-line-wrap>\n        <org-netbeans-modules-editor-indent.CodeStyle.project.indent-shift-width>4</org-netbeans-modules-editor-indent.CodeStyle.project.indent-shift-width>\n        <org-netbeans-modules-editor-indent.CodeStyle.project.spaces-per-tab>4</org-netbeans-modules-editor-indent.CodeStyle.project.spaces-per-tab>\n        <org-netbeans-modules-editor-indent.CodeStyle.project.tab-size>4</org-netbeans-modules-editor-indent.CodeStyle.project.tab-size>\n        <org-netbeans-modules-editor-indent.CodeStyle.project.text-limit-width>120</org-netbeans-modules-editor-indent.CodeStyle.project.text-limit-width>\n        <org-netbeans-modules-editor-indent.CodeStyle.project.expand-tabs>true</org-netbeans-modules-editor-indent.CodeStyle.project.expand-tabs>\n        <org-netbeans-modules-editor-indent.CodeStyle.usedProfile>project</org-netbeans-modules-editor-indent.CodeStyle.usedProfile>\n    </properties>\n</project-shared-configuration>\n"
        },
        {
          "name": "nbactions.xml",
          "type": "blob",
          "size": 0.705078125,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<actions>\n        <action>\n            <actionName>CUSTOM-check-sign</actionName>\n            <displayName>check-sign</displayName>\n            <goals>\n                <goal>clean</goal>\n                <goal>install</goal>\n            </goals>\n            <properties>\n                <performRelease>true</performRelease>\n                <skipTests>true</skipTests>\n            </properties>\n        </action>\n        <action>\n            <actionName>CUSTOM-clean deploy</actionName>\n            <displayName>clean deploy</displayName>\n            <goals>\n                <goal>clean</goal>\n                <goal>deploy</goal>\n            </goals>\n        </action>\n    </actions>\n"
        },
        {
          "name": "pom.xml",
          "type": "blob",
          "size": 25.8642578125,
          "content": "<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n    <groupId>com.github.jsqlparser</groupId>\n    <artifactId>jsqlparser</artifactId>\n    <version>5.2-SNAPSHOT</version>\n    <name>JSQLParser library</name> \n    <inceptionYear>2004</inceptionYear>\n    <organization>\n        <name>JSQLParser</name> \n    </organization>\n    <packaging>bundle</packaging>\n    <url>https://github.com/JSQLParser/JSqlParser</url>\n\n    <licenses>\n        <license>\n            <name>GNU Library or Lesser General Public License (LGPL) V2.1</name>\n            <url>http://www.gnu.org/licenses/lgpl-2.1.html</url>\n            <distribution>repo</distribution>\n        </license>\n        <license>\n            <name>The Apache Software License, Version 2.0</name>\n            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>\n            <distribution>repo</distribution>\n        </license>\n    </licenses>\n\n    <dependencies>\n        <!-- needed for parsing the Keywords via JTree in ParserKeywordsUtils -->\n        <dependency>\n            <groupId>net.java.dev.javacc</groupId>\n            <artifactId>javacc</artifactId>\n            <version>[7.0.13,)</version>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>commons-io</groupId>\n            <artifactId>commons-io</artifactId>\n            <version>2.18.0</version>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n        \t<groupId>org.junit.jupiter</groupId>\n        \t<artifactId>junit-jupiter</artifactId>\n        \t<version>[5.10.2,)</version>\n        \t<scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>org.mockito</groupId>\n            <artifactId>mockito-core</artifactId>\n            <version>[5.11.0,)</version>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>org.mockito</groupId>\n            <artifactId>mockito-junit-jupiter</artifactId>\n            <version>[5.11.0,)</version>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>org.assertj</groupId>\n            <artifactId>assertj-core</artifactId>\n            <version>[3.25.3,)</version>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>org.apache.commons</groupId>\n            <artifactId>commons-lang3</artifactId>\n            <version>[3.14.0,)</version>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>com.h2database</groupId>\n            <artifactId>h2</artifactId>\n            <version>[2.3.232,)</version>\n            <scope>test</scope>\n        </dependency>\n\n        <!-- This is needed for the Validation Framework tests       -->\n        <dependency>\n            <groupId>org.hamcrest</groupId>\n            <artifactId>hamcrest-all</artifactId>\n            <version>1.3</version>\n            <scope>test</scope>\n        </dependency>\n    </dependencies>\n\n    <developers>\n        <developer>\n            <name>Tobias Warneke</name>\n            <email>t.warneke@gmx.net</email>\n        </developer>\n    </developers>\n\n    <distributionManagement>\n        <repository>\n            <id>sonatype-nexus-staging</id>\n            <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>\n        </repository>\n        <snapshotRepository>\n            <id>sonatype-nexus-snapshots</id> \n            <url>https://oss.sonatype.org/content/repositories/snapshots/</url>\n        </snapshotRepository>\n    </distributionManagement>\n\n    <scm>\n        <connection>scm:git:https://github.com/JSQLParser/JSqlParser.git</connection>\n        <developerConnection>scm:git:ssh://git@github.com:JSQLParser/JSqlParser.git</developerConnection>\n        <url>https://github.com/JSQLParser/JSqlParser.git</url>\n        <tag>HEAD</tag>\n    </scm>\n\n    <issueManagement>\n        <system>GitHub Issues</system>\n        <url>https://github.com/JSQLParser/JSqlParser/issues</url>\n    </issueManagement>\n\n    <build>\n        <plugins>\n            <!-- Update they Keyword Whitelist in the Grammar's production RelObjectNameWithoutValue() -->\n            <plugin>\n                <groupId>org.codehaus.mojo</groupId>\n                <artifactId>exec-maven-plugin</artifactId>\n                <version>3.1.0</version>\n                <configuration>\n                    <mainClass>net.sf.jsqlparser.parser.ParserKeywordsUtils</mainClass>\n                    <arguments>\n                        <argument>src/main/jjtree/net/sf/jsqlparser/parser/JSqlParserCC.jjt</argument>\n                        <argument>src/site/sphinx/keywords.rst</argument>\n                    </arguments>\n                </configuration>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-pmd-plugin</artifactId>\n                <version>3.21.2</version>\n                <configuration>\n                    <rulesets>\n                        <!-- Custom local file system rule set -->\n                        <ruleset>${project.basedir}/config/pmd/ruleset.xml</ruleset>\n                    </rulesets>\n                    <excludes>\n                        <exclude>**/*Bean.java</exclude>\n                        <exclude>**/generated/*.java</exclude>\n                    </excludes>\n                    <excludeRoots>\n                        <excludeRoot>target/generated-sources</excludeRoot>\n                        <excludeRoot>target/generated-test-sources</excludeRoot>\n                    </excludeRoots>\n                    <printFailingErrors>true</printFailingErrors>\n                </configuration>\n                <executions>\n                    <execution>\n                        <id>pmd</id>\n                        <goals>\n                            <goal>check</goal>\n                        </goals>\n                        <phase>process-sources</phase>\n                    </execution>\n                </executions>\n                <dependencies>\n                    <dependency>\n                        <groupId>net.sourceforge.pmd</groupId>\n                        <artifactId>pmd-core</artifactId>\n                        <version>${pmdVersion}</version>\n                    </dependency>\n                    <dependency>\n                        <groupId>net.sourceforge.pmd</groupId>\n                        <artifactId>pmd-java</artifactId>\n                        <version>${pmdVersion}</version>\n                    </dependency>\n                </dependencies>\n            </plugin>\n            <plugin>\n                <groupId>org.codehaus.mojo</groupId>\n                <artifactId>build-helper-maven-plugin</artifactId>\n                <version>3.2.0</version>\n                <executions>\n                    <execution>\n                        <id>add-source</id>\n                        <phase>generate-sources</phase>\n                        <goals>\n                            <goal>add-source</goal>\n                        </goals>\n                        <configuration>\n                            <sources>\n                                <source>${project.build.directory}/generated-sources/javacc/</source>\n                                <source>${project.build.directory}/generated-sources/jjtree/</source>\n                            </sources>\n                        </configuration>\n                    </execution>\n                </executions>\n            </plugin>\n            <plugin>\n                <artifactId>maven-compiler-plugin</artifactId>\n                <version>3.10.1</version>\n                <configuration>\n                    <source>11</source>\n                    <target>11</target>\n                    <showWarnings>true</showWarnings>\n                    <encoding>${project.build.sourceEncoding}</encoding>\n                    <showDeprecation>true</showDeprecation>\n                    <fork>true</fork>\n                    <meminitial>128m</meminitial>\n                    <maxmem>2g</maxmem>\n                </configuration>\n            </plugin>\n            <plugin>\n                <groupId>org.javacc.plugin</groupId>\n                <artifactId>javacc-maven-plugin</artifactId>\n                <version>3.0.3</version>\n                <executions>\n                    <execution>\n                        <id>javacc</id>\n                        <phase>generate-sources</phase>\n                        <goals>\n                            <goal>jjtree-javacc</goal>\n                        </goals>\n                        <configuration>\n                            <grammarEncoding>UTF-8</grammarEncoding>\n                            <isStatic>false</isStatic>\n                            <jdkVersion>1.8</jdkVersion>\n                        </configuration>\n                    </execution>\n                </executions>\n                <dependencies>\n                    <dependency>\n                        <groupId>net.java.dev.javacc</groupId>\n                        <artifactId>javacc</artifactId>\n                        <version>[7.0.13,)</version>\n                    </dependency>\n                </dependencies>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-eclipse-plugin</artifactId>\n                <version>2.9</version>\n                <configuration>\n                    <sourceIncludes>\n                        <sourceInclude>/target/generated-sources/javacc</sourceInclude>\n                    </sourceIncludes>\n                </configuration>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-resources-plugin</artifactId>\n                <version>3.3.0</version>\n                <configuration>\n                    <encoding>${project.build.sourceEncoding}</encoding>\n                </configuration>\n            </plugin>\n            <plugin>\n                <groupId>org.codehaus.mojo</groupId>\n                <artifactId>license-maven-plugin</artifactId>\n                <version>2.0.0</version>\n                <configuration>\n                    <verbose>false</verbose>\n                    <addJavaLicenseAfterPackage>false</addJavaLicenseAfterPackage>\n                    <canUpdateDescription>false</canUpdateDescription>\n                    <licenseName>dual_lgpl_ap2</licenseName>\n                    <licenseResolver>${project.baseUri}/src/license</licenseResolver>\n                    <excludes>\n                        <exclude>site/sphinx/**</exclude>\n                    </excludes>\n                </configuration>\n                <executions>\n                    <execution>\n                        <id>first</id>\n                        <goals>\n                            <goal>update-file-header</goal>\n                        </goals>\n                        <phase>process-sources</phase>\n                    </execution>\n                </executions>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-release-plugin</artifactId>\n                <!-- \n                dont switch to version 3.0.1, that makes the strange certificate problems \n                start maven release with -Dmaven.wagon.http.ssl.allowall=true since JDK 1.8\n                does not have a complete truststore\n                --> \n                <version>3.0.0-M7</version>\n                <configuration>\n                    <localCheckout>true</localCheckout>\n                    <pushChanges>false</pushChanges>\n                    <mavenExecutorId>forked-path</mavenExecutorId>\n                    <releaseProfiles>sign-release-artifacts</releaseProfiles>\n                </configuration>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-source-plugin</artifactId>\n                <version>3.2.1</version>\n                <executions>\n                    <execution>\n                        <id>attach-sources</id>\n                        <goals>\n                            <goal>jar</goal>\n                        </goals>\n                    </execution>\n                </executions>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-javadoc-plugin</artifactId>\n                <version>3.4.1</version>\n                <executions>\n                    <execution>\n                        <id>attach-javadocs</id>\n                        <configuration>\n                            <additionalOptions>${javadoc.opts}</additionalOptions>\n                            <excludePackageNames>net.sf.jsqlparser.parser</excludePackageNames>\n                            <doclint>none</doclint>\n                            <useStandardDocletOptions>true</useStandardDocletOptions>\n                            <maxmemory>2g</maxmemory>\n                            <minmemory>800m</minmemory>\n                            <additionalJOptions>-J-Xss2m</additionalJOptions>\n                        </configuration>\n                        <goals>\n                            <goal>jar</goal>\n                        </goals>\n                    </execution>\n                </executions>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-jar-plugin</artifactId>\n                <version>3.3.0</version>\n                <configuration>\n                    <archive>\n                        <manifestEntries>\n                            <Automatic-Module-Name>net.sf.jsqlparser</Automatic-Module-Name>\n                        </manifestEntries>\n                    </archive>\n                </configuration>\n            </plugin>\n            <plugin>\n                <groupId>org.eluder.coveralls</groupId>\n                <artifactId>coveralls-maven-plugin</artifactId>\n                <version>4.3.0</version>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.felix</groupId>\n                <artifactId>maven-bundle-plugin</artifactId>\n                <version>5.1.8</version>\n                <extensions>true</extensions>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-surefire-plugin</artifactId>\n                <version>3.2.5</version>\n                <configuration>\n                    <trimStackTrace>false</trimStackTrace>\n                    <!-- AlterViewTest does deep reflection -->\n                    <useModulePath>false</useModulePath>\n                    <argLine>\n                        --add-opens=java.base/java.lang=ALL-UNNAMED\n                        --add-opens=java.base/java.util=ALL-UNNAMED\n                        -Xmx2G -Xms512m -Xss2m\n                    </argLine>\n                </configuration>\n            </plugin>\n            <plugin>\n                <groupId>org.jacoco</groupId>\n                <artifactId>jacoco-maven-plugin</artifactId>\n                <version>0.8.10</version>\n                <executions>\n                    <execution>\n                        <goals>\n                            <goal>prepare-agent</goal>\n                        </goals>\n                    </execution>\n                    <execution>\n                        <id>report</id>\n                        <phase>prepare-package</phase>\n                        <goals>\n                            <goal>report</goal>\n                        </goals>\n                    </execution>\n                </executions>\n            </plugin>\n            <plugin>\n                <groupId>com.diffplug.spotless</groupId>\n                <artifactId>spotless-maven-plugin</artifactId>\n                <version>2.28.0</version>\n                <configuration>\n                    <!-- optional: limit format enforcement to just the files changed by this feature branch -->\n                    <ratchetFrom>origin/master</ratchetFrom>\n                    <formats>\n                        <!-- you can define as many formats as you want, each is independent -->\n                        <format>\n                            <!-- define the files to apply to -->\n                            <includes>\n                                <include>*.md</include>\n                                <include>.gitignore</include>\n                            </includes>\n                            <!-- define the steps to apply to those files -->\n                            <trimTrailingWhitespace />\n                            <endWithNewline />\n                            <indent>\n                                <tabs>true</tabs>\n                                <spacesPerTab>4</spacesPerTab>\n                            </indent>\n                        </format>\n                    </formats>\n                    <!-- define a language-specific format -->\n                    <java>\n                        <!-- These are the defaults, you can override if you want -->\n                        <includes>\n                            <include>src/main/java/**/*.java</include>\n                            <include>src/test/java/**/*.java</include>\n                        </includes>\n\n                        <importOrder /> <!-- standard import order -->\n                        <removeUnusedImports />\n\n                        <!-- Apply Google style guide https://google.github.io/styleguide/javaguide.html -->\n                        <eclipse>\n                            <file>config/formatter/eclipse-java-google-style.xml</file>\n                        </eclipse>\n\n                        <formatAnnotations />  <!-- fixes formatting of type annotations, see below -->\n                    </java>\n                </configuration>\n            </plugin>\n        </plugins>\n    </build>\n    \n    <reporting>\n        <plugins>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-surefire-report-plugin</artifactId>\n                <version>3.0.0-M7</version>\n                <configuration>\n                    <outputDirectory>${project.reporting.outputDirectory}/testresults</outputDirectory>\n                    <argLine>-Xmx2G -Xms512m -Xss2m</argLine>\n                </configuration>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-javadoc-plugin</artifactId>\n                <version>3.4.1</version>\n                <configuration>\n                    <useStandardDocletOptions>true</useStandardDocletOptions>\n                    <maxmemory>2g</maxmemory>\n                    <minmemory>800m</minmemory>\n                    <doclint>none</doclint>\n\n                    <additionalJOptions>-Xss2m</additionalJOptions>\n\n                    <!-- Doclint does not work on the Test Sources\n                    <doclint>all,-missing</doclint>\n                    <excludePackageNames>net.sf.jsqlparser.parser</excludePackageNames>\n                    <sourceFileExcludes>\n                        <sourceFileExclude>src/test/**</sourceFileExclude>\n                    </sourceFileExcludes>\n                    -->\n                </configuration>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-project-info-reports-plugin</artifactId>\n                <version>3.4.1</version>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-jxr-plugin</artifactId>\n                <version>3.3.0</version>\n            </plugin>\n            \n            <plugin>\n                <groupId>org.codehaus.mojo</groupId>\n                <artifactId>findbugs-maven-plugin</artifactId>\n                <version>3.0.5</version>\n            </plugin>\n        </plugins>\n    </reporting>\n\n    <profiles>\n        <profile>\n            <id>sign-release-artifacts</id>\n            <activation>\n                <property>\n                    <name>performRelease</name>\n                    <value>true</value>\n                </property>\n            </activation>\n            <build>\n                <plugins>\n                    <plugin>\n                        <groupId>org.apache.maven.plugins</groupId>\n                        <artifactId>maven-gpg-plugin</artifactId>\n                        <version>1.6</version>\n                        <executions>\n                            <execution>\n                                <id>sign-artifacts</id>\n                                <phase>verify</phase>\n                                <goals>\n                                    <goal>sign</goal>\n                                </goals>\n                                <configuration>\n                                    <keyname>f22e0543</keyname>\n                                </configuration>\n                            </execution>\n                        </executions>\n                    </plugin>\n                </plugins>\n            </build>\n        </profile>\n    \n        <profile>\n            <id>check.sources</id>\n            <activation>\n                <property>\n                    <name>!skipCheckSources</name>\n                </property>\n                <jdk>[11,)</jdk>\n            </activation>\n            <build>\n                <plugins>\n                    <plugin>\n                        <groupId>org.apache.maven.plugins</groupId>\n                        <artifactId>maven-checkstyle-plugin</artifactId>\n                        <version>3.3.1</version>\n                        <executions>\n                            <execution>\n                                <id>verify-style</id>\n                                <phase>process-classes</phase>\n                                <goals>\n                                    <goal>check</goal>\n                                </goals>\n                            </execution>\n                        </executions>\n                        <configuration>\n                            <logViolationsToConsole>true</logViolationsToConsole>\n                            <includeTestSourceDirectory>true</includeTestSourceDirectory>\n                            <sourceDirectories>${project.build.sourceDirectory}</sourceDirectories>\n                            <excludes>**/module-info.java</excludes>\n                            <checkstyleRules>\n                                <module name=\"Checker\">\n                                    <module name=\"SuppressWarningsFilter\" />\n                                    <module name=\"FileTabCharacter\" />\n                                    <!-- git checkout may change linefeeds on the fly\n                                    <module name=\"RegexpMultiline\">\n                                        <property name=\"format\" value=\"(?s:(\\r\\n|\\r).*)\" />\n                                        <property name=\"message\" value=\"CRLF and CR line endings are prohibited, but this file uses them.\" />\n                                    </module>\n                                    -->\n                                    <module name=\"TreeWalker\">\n                                        <module name=\"AvoidNestedBlocks\" />\n                                        <module name=\"ConstantName\" />\n                                        <module name=\"EmptyCatchBlock\" />\n                                        <module name=\"EmptyStatement\" />\n                                        <module name=\"MissingOverride\" />\n                                        <module name=\"MultipleVariableDeclarations\" />\n                                        <module name=\"ParameterAssignment\" />\n                                        <module name=\"StringLiteralEquality\" />\n                                        <module name=\"RedundantImport\" />\n                                        <module name=\"UnusedImports\" />\n                                        \n                                        <module name=\"WhitespaceAfter\" />\n\t\t\t\t\t\t\t\t\t\t\n                                        <module name=\"NeedBraces\" />\n                                        <module name=\"UnnecessaryParentheses\" />\n                                        <module name=\"LeftCurly\" />\n                                        <module name=\"RightCurly\" />\n                                        \n                                        <module name=\"SuppressWarningsHolder\" />\n                                    </module>\n                                </module>\n                            </checkstyleRules>\n                        </configuration>\n                        <dependencies>\n                            <dependency>\n                                <groupId>com.puppycrawl.tools</groupId>\n                                <artifactId>checkstyle</artifactId>\n                                <version>${checkStyleVersion}</version>\n                            </dependency>\n                        </dependencies>\n                    </plugin>\n                </plugins>\n            </build>\n        </profile>\n        <profile>\n            <!-- for building the parser with debug flags -->\n            <id>skip.all</id>\n            <activation>\n                <activeByDefault>false</activeByDefault>\n            </activation>\n            <properties>\n                <maven.test.skip>true</maven.test.skip>\n                <checkstyle.skip>true</checkstyle.skip>\n                <maven.javadoc.skip>true</maven.javadoc.skip>\n                <license.skipUpdateLicense>true</license.skipUpdateLicense>\n            </properties>\n        </profile>\n    </profiles>\n\n    <properties>\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n        <pmdVersion>6.55.0</pmdVersion>\n        <checkStyleVersion>10.14.0</checkStyleVersion>\n    </properties>\n\n    <description>JSqlParser parses an SQL statement and translate it into a hierarchy of Java classes.\n        The generated hierarchy can be navigated using the Visitor Pattern.</description>\n</project>\n"
        },
        {
          "name": "settings.gradle",
          "type": "blob",
          "size": 0.0947265625,
          "content": "/*\n * This file was generated by the Gradle 'init' task.\n */\n\nrootProject.name = 'JSQLFormatter'\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}