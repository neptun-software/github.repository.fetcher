{
  "metadata": {
    "timestamp": 1736708669318,
    "page": 67,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjcw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "apache/seatunnel",
      "stars": 8212,
      "defaultBranch": "dev",
      "files": [
        {
          "name": ".asf.yaml",
          "type": "blob",
          "size": 1.671875,
          "content": "# Licensed to the Apache Software Foundation (ASF) under one or more\n# contributor license agreements.  See the NOTICE file distributed with\n# this work for additional information regarding copyright ownership.\n# The ASF licenses this file to You under the Apache License, Version 2.0\n# (the \"License\"); you may not use this file except in compliance with\n# the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\ngithub:\n  description: SeaTunnel is a next-generation super high-performance, distributed, massive data integration tool.\n  homepage: https://seatunnel.apache.org/\n  labels:\n    - data-integration\n    - change-data-capture\n    - cdc\n    - high-performance\n    - offline\n    - real-time\n    - batch\n    - streaming\n    - data-ingestion\n    - apache\n    - elt\n  enabled_merge_buttons:\n    squash: true\n    merge: false\n    rebase: false\n  collaborators:\n    - arshadmohammad\n  protected_branches:\n    dev:\n      required_status_checks:\n        strict: true\n      required_pull_request_reviews:\n        dismiss_stale_reviews: true\n        required_approving_review_count: 2\n\nnotifications:\n  commits:      commits@seatunnel.apache.org\n  issues:       commits@seatunnel.apache.org\n  pullrequests: commits@seatunnel.apache.org\n  pullrequests_status:  commits@seatunnel.apache.org\n  pullrequests_comment: commits@seatunnel.apache.org\n"
        },
        {
          "name": ".dlc.json",
          "type": "blob",
          "size": 0.6201171875,
          "content": "{\n  \"ignorePatterns\": [\n    {\n      \"pattern\": \"^http://localhost\"\n    },\n    {\n      \"pattern\": \"^https://mvnrepository.com\"\n    },\n    {\n      \"pattern\": \"^https://www.qutoutiao.net\"\n    },\n    {\n      \"pattern\": \"^https://img.shields.io\"\n    },\n    {\n      \"pattern\": \"^https://json.org/\"\n    },\n    {\n      \"pattern\": \"^/docs/category\"\n    },\n    {\n      \"pattern\": \"^https://opencollective.com\"\n    },\n    {\n      \"pattern\": \"^https://twitter.com/ASFSeaTunnel\"\n    }\n  ],\n  \"timeout\": \"10s\",\n  \"retryOn429\": true,\n  \"retryCount\": 10,\n  \"fallbackRetryDelay\": \"1000s\",\n  \"aliveStatusCodes\": [\n    0,\n    200,\n    401,\n    403\n  ]\n}\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.0166015625,
          "content": "*.sh text eol=lf\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.6357421875,
          "content": "# Package Files #\n*.jar\n*.zip\n*.tar.gz\n\n# see JDK-8214300\n.attach_pid*\n\n# virtual machine crash logs, see http://www.java.com/en/download/help/error_hotspot.xml\nhs_err_pid*\n\n# build targets\ntarget/\n\n# Log file\n*.log\n/logs\nlogs.zip\n\n# Intellij Idea files\n.idea/\n*.iml\n.idea/*\n\n.DS_Store\n\nmetastore_db/\n\nwork_dir\n\nall-dependencies.txt\nself-modules.txt\nthird-party-dependencies.txt\n\n*.keytab\n/derby.log\n\ndependency-reduced-pom.xml\n\napidoc\n\n# Python\n*.py[cod]\n\nTest.java\nTest.scala\ntest.conf\nspark-warehouse\n*.flattened-pom.xml\n\nseatunnel-examples\n\n# vscode\n.vscode\n\n/lib/*\nversion.properties\nnode/\n\ndist/\n\nseatunnel-engine/seatunnel-engine-server/**/ui/*"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.3115234375,
          "content": "[submodule \".github/actions/get-workflow-origin\"]\n\tpath = .github/actions/get-workflow-origin\n\turl = https://github.com/potiuk/get-workflow-origin.git\n[submodule \".github/actions/label-when-approved-action\"]\n\tpath = .github/actions/label-when-approved-action\n\turl = https://github.com/TobKed/label-when-approved-action\n"
        },
        {
          "name": ".idea",
          "type": "tree",
          "content": null
        },
        {
          "name": ".licenserc.yaml",
          "type": "blob",
          "size": 2.4873046875,
          "content": "# Licensed to Apache Software Foundation (ASF) under one or more contributor\n# license agreements. See the NOTICE file distributed with\n# this work for additional information regarding copyright\n# ownership. Apache Software Foundation (ASF) licenses this file to you under\n# the Apache License, Version 2.0 (the \"License\"); you may\n# not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n\nheader:\n  license:\n    spdx-id: Apache-2.0\n    copyright-owner: Apache Software Foundation\n\n  paths-ignore:\n    - seatunnel-dist\n    - NOTICE\n    - LICENSE\n    - DISCLAIMER\n    - mvnw.cmd\n    - .mvn\n    - .gitmodules\n    - .gitattributes\n    - .github/actions\n    - '**/known-dependencies-*.txt'\n    - '**/*.md'\n    - '**/*.mdx'\n    - '**/*.json'\n    - '**/*.iml'\n    - '**/*.ini'\n    - '**/*.svg'\n    - '**/*.txt'\n    - '**/.gitignore'\n    - '**/LICENSE'\n    - '**/NOTICE'\n    - '**/.gitkeep'\n    - '**/com/typesafe/config/**'\n    - 'seatunnel-engine/seatunnel-engine-common/src/main/java/org/apache/seatunnel/engine/common/config/ConfigProvider.java'\n    - 'seatunnel-engine/seatunnel-engine-common/src/main/java/org/apache/seatunnel/engine/common/config/SeaTunnelConfigSections.java'\n    - 'seatunnel-engine/seatunnel-engine-common/src/main/java/org/apache/seatunnel/engine/common/config/YamlSeaTunnelConfigBuilder.java'\n    - 'seatunnel-engine/seatunnel-engine-common/src/main/java/org/apache/seatunnel/engine/common/utils/ExceptionUtil.java'\n    - 'seatunnel-engine/seatunnel-engine-server/src/main/java/org/apache/seatunnel/engine/server/operation/AsyncOperation.java'\n    - 'seatunnel-engine/seatunnel-engine-server/src/main/java/org/apache/seatunnel/engine/server/protocol/task/AbstractSeaTunnelMessageTask.java'\n    - 'seatunnel-engine/seatunnel-engine-common/src/main/java/org/apache/seatunnel/engine/common/utils/PassiveCompletableFuture.java'\n    - 'seatunnel-connectors-v2/connector-cdc/connector-cdc-postgres/src/main/java/io/debezium/connector/postgresql/connection/PostgresReplicationConnection.java'\n    - 'seatunnel-shade/seatunnel-hazelcast/seatunnel-hazelcast-shade/src/main/java/com/hazelcast/**'\n\n  comment: on-failure\n"
        },
        {
          "name": ".mvn",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 17.5478515625,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright {yyyy} {name of copyright owner}\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n   \n========================================================================\nApache 2.0 licenses\n========================================================================\n\nThe following components are provided under the Apache License. See project link for details.\nThe text of each license is the standard Apache 2.0 license.\n\ntools/dependencies/checkLicense.sh files from https://github.com/apache/skywalking\nmvnw files from https://github.com/apache/maven-wrapper Apache 2.0\nseatunnel-api/src/main/java/org/apache/seatunnel/api/table/type/RowKind.java from https://github.com/apache/flink\nseatunnel-api/src/main/java/org/apache/seatunnel/api/state/CheckpointListener.java from https://github.com/apache/flink\nseatunnel-config/seatunnel-config-shade/src/main/java/org/apache/seatunnel/shade/com/typesafe/config/    from  https://github.com/lightbend/config\nseatunnel-connectors-v2/connector-jdbc/src/main/java/org/apache/seatunnel/connectors/seatunnel/jdbc/internal/  from https://github.com/apache/flink\nseatunnel-connectors-v2/connector-common/src/main/java/org/apache/seatunnel/connectors/seatunnel/common/source/reader/  from https://github.com/apache/flink\nseatunnel-connectors-v2/connector-iceberg/src/main/java/org/apache/seatunnel/connectors/seatunnel/iceberg/source/enumerator/   from https://github.com/apache/iceberg\nseatunnel-connectors-v2/connector-cdc/connector-base/src/main/java/org/apache/seatunnel/connectors/cdc/base from https://github.com/ververica/flink-cdc-connectors\nseatunnel-connectors-v2/connector-cdc/connector-cdc-mysql/src/main/java/org/apache/seatunnel/connectors/seatunnel/cdc/mysql from https://github.com/ververica/flink-cdc-connectors\nseatunnel-connectors-v2/connector-cdc/connector-base/src/main/java/org/apache/seatunnel/connectors/cdc/debezium from https://github.com/ververica/flink-cdc-connectors\nseatunnel-connectors-v2/connector-cdc/connector-cdc-sqlserver/src/main/java/io/debezium/connector/sqlserver/SqlServerStreamingChangeEventSource.java   from https://github.com/debezium/debezium\nseatunnel-connectors-v2/connector-cdc/connector-cdc-mongodb/src/main/java/org/apache/seatunnel/connectors/seatunnel/cdc/mongodb from https://github.com/ververica/flink-cdc-connectors\nseatunnel-connectors-v2/connector-cdc/connector-cdc-postgres/src/main/java/io/debezium/connector/postgresql/connection/PostgresReplicationConnection.java     from https://github.com/debezium/debezium\ngenerate_client_protocol.sh                                                                                                                 from https://github.com/hazelcast/hazelcast\nseatunnel-engine/seatunnel-engine-common/src/main/java/org/apache/seatunnel/engine/common/utils/ExceptionUtil.java                          from https://github.com/hazelcast/hazelcast\nseatunnel-engine/seatunnel-engine-server/src/main/java/org/apache/seatunnel/engine/server/protocol/task/AbstractSeaTunnelMessageTask.java   from https://github.com/hazelcast/hazelcast\nseatunnel-engine/seatunnel-engine-server/src/main/java/org/apache/seatunnel/engine/server/operation/AsyncOperation.java                     from https://github.com/hazelcast/hazelcast\nseatunnel-engine/seatunnel-engine-server/src/main/java/org/apache/seatunnel/engine/server/operation/AbstractJobAsyncOperation.java          from https://github.com/hazelcast/hazelcast\nseatunnel-engine/seatunnel-engine-common/src/main/java/org/apache/seatunnel/engine/common/config/ConfigProvider.java                        from https://github.com/hazelcast/hazelcast\nseatunnel-engine/seatunnel-engine-common/src/main/java/org/apache/seatunnel/engine/common/config/SeaTunnelConfigSections.java               from https://github.com/hazelcast/hazelcast\nseatunnel-engine/seatunnel-engine-common/src/main/java/org/apache/seatunnel/engine/common/config/YamlSeaTunnelConfigBuilder.java            from https://github.com/hazelcast/hazelcast\nseatunnel-engine/seatunnel-engine-core/src/main/java/org/apache/seatunnel/engine/core/job/JobStatus.java                                    from https://github.com/apache/flink\nseatunnel-engine/seatunnel-engine-server/src/main/java/org/apache/seatunnel/engine/server/execution/ExecutionState.java                     from https://github.com/apache/flink\nseatunnel-engine/seatunnel-engine-common/src/main/java/org/apache/seatunnel/engine/common/utils/PassiveCompletableFuture.java               from https://github.com/hazelcast/hazelcast\nseatunnel-engine/seatunnel-engine-server/src/main/java/org/apache/seatunnel/engine/server/checkpoint/CheckpointException.java               from https://github.com/apache/flink\nseatunnel-engine/seatunnel-engine-core/src/main/java/org/apache/seatunnel/engine/core/checkpoint/CheckpointIDCounter.java                   from https://github.com/apache/flink\nseatunnel-engine/seatunnel-engine-core/src/main/java/org/apache/seatunnel/engine/core/checkpoint/InternalCheckpointListener.java            from https://github.com/apache/flink\nseatunnel-engine/seatunnel-engine-server/src/main/java/org/apache/seatunnel/engine/server/checkpoint/StandaloneCheckpointIDCounter.java     from https://github.com/apache/flink\nseatunnel-engine/seatunnel-engine-server/src/main/java/org/apache/seatunnel/engine/server/metrics                                           from https://github.com/hazelcast/hazelcast\nseatunnel-api/src/main/java/org/apache/seatunnel/api/common/metrics                                                                         from https://github.com/hazelcast/hazelcast\nseatunnel-transforms-v2/src/main/java/org/apache/seatunnel/transform/sqlengine/zeta/ZetaSQLEngine.java                                      from https://github.com/JSQLParser/JSqlParser\nseatunnel-transforms-v2/src/main/java/org/apache/seatunnel/transform/sqlengine/zeta/ZetaSQLType.java                                        from https://github.com/JSQLParser/JSqlParser\nseatunnel-transforms-v2/src/main/java/org/apache/seatunnel/transform/sqlengine/zeta/ZetaSQLFilter.java                                      from https://github.com/JSQLParser/JSqlParser\nseatunnel-transforms-v2/src/main/java/org/apache/seatunnel/transform/sqlengine/zeta/ZetaSQLFunction.java                                    from https://github.com/JSQLParser/JSqlParser\nseatunnel-shade/seatunnel-hazelcast/seatunnel-hazelcast-shade/src/main/java/com/hazelcast/**                                                from https://github.com/hazelcast/hazelcast\nseatunnel-engine/seatunnel-engine-server/src/main/java/org/apache/seatunnel/engine/server/LiteNodeDropOutTcpIpJoiner.java                   from https://github.com/hazelcast/hazelcast\n"
        },
        {
          "name": "NOTICE",
          "type": "blob",
          "size": 3.8408203125,
          "content": "Apache SeaTunnel\nCopyright 2021-2024 The Apache Software Foundation\n\nThis product includes software developed at\nThe Apache Software Foundation (http://www.apache.org/).\n\n\n// ------------------------------------------------------------------\n// NOTICE file corresponding to the section 4d of The Apache License,\n// Version 2.0, in this case for Apache Flink\n// ------------------------------------------------------------------\n\nApache Flink\nCopyright 2006-2022 The Apache Software Foundation\n\nThis product includes software developed at\nThe Apache Software Foundation (http://www.apache.org/).\n\n\nFlink : Connectors : JDBC\nCopyright 2014-2022 The Apache Software Foundation\n\n\n\n// ------------------------------------------------------------------\n// NOTICE file corresponding to the section 4d of The Apache License,\n// Version 2.0, in this case for Apache Iceberg\n// ------------------------------------------------------------------\n\nApache Iceberg\nCopyright 2017-2022 The Apache Software Foundation\n\nThis product includes software developed at\nThe Apache Software Foundation (http://www.apache.org/).\n\n\nIceberg : Flink\nCopyright 2017-2022 The Apache Software Foundation\n\n// ------------------------------------------------------------------\n// NOTICE file corresponding to the section 4d of The Apache License,\n// Version 2.0, in this case for Apache Iceberg\n// ------------------------------------------------------------------\n-----------------------------------------------------------------------\nThis product contains code form the Apache Maven Wrapper Project:\n-----------------------------------------------------------------------\n\nApache Maven Wrapper\nCopyright 2013-2022 The Apache Software Foundation\n\nThis product includes software developed at\nThe Apache Software Foundation (http://www.apache.org/).\n\nThe original idea and initial implementation of the maven-wrapper module is derived \nfrom the Gradle Wrapper which was written originally by Hans Dockter and Adam Murdoch.\nCopyright 2007 the original author or authors.\n-----------------------------------------------------------------------\nThis product contains code form the Hazelcast Project:\n\nThe packages:\n\ncom.hazelcast.internal.util.collection\ncom.hazelcast.internal.util.concurrent\n\nand the classes:\n\ncom.hazelcast.internal.util.QuickMath\ncom.hazelcast.client.impl.protocol.util.UnsafeBuffer\ncom.hazelcast.client.impl.protocol.util.BufferBuilder\n\ncontain code originating from the Agrona project\n(https://github.com/real-logic/Agrona).\n\nThe class com.hazelcast.internal.util.HashUtil contains code originating\nfrom the Koloboke project (https://github.com/OpenHFT/Koloboke).\n\nThe class classloading.ThreadLocalLeakTestUtils contains code originating\nfrom the Tomcat project (https://github.com/apache/tomcat).\n\ncom.hazelcast.internal.cluster.fd.PhiAccrualFailureDetector contains code originating\nfrom the Akka project (https://github.com/akka/akka/).\n\nThe package com.hazelcast.internal.json contains code originating\nfrom minimal-json project (https://github.com/ralfstx/minimal-json).\n\nThe class com.hazelcast.instance.impl.MobyNames contains code originating\nfrom The Moby Project (https://github.com/moby/moby).\n\nThe class com.hazelcast.internal.util.graph.BronKerboschCliqueFinder contains code\noriginating from The JGraphT Project (https://github.com/jgrapht/jgrapht).\n\nThe packages:\ncom.hazelcast.sql\ncom.hazelcast.jet.sql\n\ncontain code originating from the Apache Calcite (https://github.com/apache/calcite)\n\nThe class com.hazelcast.jet.kafka.impl.ResumeTransactionUtil contains\ncode derived from the Apache Flink project.\n\nThe class com.hazelcast.internal.util.ConcurrentReferenceHashMap contains code written by Doug Lea\nand updated within the WildFly project (https://github.com/wildfly/wildfly).\n\nThe class org.apache.calcite.linq4j.tree.ConstantExpression contains code\noriginating from the Calcite project (https://github.com/apache/calcite)."
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.359375,
          "content": "# Apache SeaTunnel\n\n<img src=\"https://seatunnel.apache.org/image/logo.png\" alt=\"SeaTunnel Logo\" height=\"200px\" align=\"right\" />\n\n[![Build Workflow](https://github.com/apache/seatunnel/actions/workflows/build_main.yml/badge.svg?branch=dev)](https://github.com/apache/seatunnel/actions/workflows/build_main.yml)\n[![Join Slack](https://img.shields.io/badge/slack-%23seatunnel-4f8eba?logo=slack)](https://s.apache.org/seatunnel-slack)\n[![Twitter Follow](https://img.shields.io/twitter/follow/ASFSeaTunnel.svg?label=Follow&logo=twitter)](https://twitter.com/ASFSeaTunnel)\n\n## Table of Contents\n- [Overview](#overview)\n- [Why Choose SeaTunnel](#why-choose-seatunnel)\n- [Key Features](#key-features)\n- [SeaTunnel Workflow](#seatunnel-workflow)\n- [Supported Connectors](#supported-connectors)\n- [Getting Started](#getting-started)\n- [Use Cases](#use-cases)\n- [Code of Conduct](#code-of-conduct)\n- [Contributors](#contributors)\n- [How to Compile](#how-to-compile)\n- [Contact Us](#contact-us)\n- [Landscapes](#landscapes)\n- [Apache SeaTunnel Web Project](#apache-seaTunnel-web-project)\n- [Our Users](#our-users)\n- [License](#license)\n- [Frequently Asked Questions](#frequently-asked-questions)\n\n## Overview\n\nSeaTunnel is a next-generation, high-performance, distributed data integration tool, capable of synchronizing vast amounts of data daily. It's trusted by numerous companies for its efficiency and stability.\n\n\n## Why Choose SeaTunnel\n\nSeaTunnel addresses common data integration challenges:\n\n- **Diverse Data Sources**: Seamlessly integrates with hundreds of evolving data sources.\n  \n- **Complex Synchronization Scenarios**: Supports various synchronization methods, including real-time, CDC, and full database synchronization.\n  \n- **Resource Efficiency**: Minimizes computing resources and JDBC connections for real-time synchronization.\n  \n- **Quality and Monitoring**: Provides data quality and monitoring to prevent data loss or duplication.\n\n## Key Features\n\n- **Diverse Connectors**: Offers support for over 100 connectors, with ongoing expansion.\n  \n- **Batch-Stream Integration**: Easily adaptable connectors simplify data integration management.\n  \n- **Distributed Snapshot Algorithm**: Ensures data consistency across synchronized data.\n  \n- **Multi-Engine Support**: Works with SeaTunnel Zeta Engine, Flink, and Spark.\n  \n- **JDBC Multiplexing and Log Parsing**: Efficiently synchronizes multi-tables and databases.\n  \n- **High Throughput and Low Latency**: Provides high-throughput data synchronization with low latency.\n  \n- **Real-Time Monitoring**: Offers detailed insights during synchronization.\n  \n- **Two Job Development Methods**: Supports coding and visual job management with the [SeaTunnel Web Project](https://github.com/apache/seatunnel-web).\n\n## SeaTunnel Workflow\n\n![SeaTunnel Workflow](docs/images/architecture_diagram.png)\n\nConfigure jobs, select execution engines, and parallelize data using Source Connectors. Easily develop and extend connectors to meet your needs.\n\n## Supported Connectors\n\n- [Source Connectors](https://seatunnel.apache.org/docs/connector-v2/source)\n- [Sink Connectors](https://seatunnel.apache.org/docs/connector-v2/sink)\n- [Transform Connectors](docs/en/transform-v2)\n\n## Getting Started\n\nDownload SeaTunnel from the [Official Website](https://seatunnel.apache.org/download).\n\nChoose your runtime execution engine:\n- [SeaTunnel Zeta Engine](https://seatunnel.apache.org/docs/start-v2/locally/quick-start-seatunnel-engine/)\n- [Spark](https://seatunnel.apache.org/docs/start-v2/locally/quick-start-spark)\n- [Flink](https://seatunnel.apache.org/docs/start-v2/locally/quick-start-flink)\n\n## Use Cases\n\nExplore real-world use cases of SeaTunnel, such as Weibo, Tencent Cloud, Sina, Sogou, and Yonghui Superstores. More use cases can be found on the [SeaTunnel Blog](https://seatunnel.apache.org/blog).\n\n## Code of Conduct\n\nParticipate in this project in accordance with the Contributor Covenant [Code of Conduct](https://www.apache.org/foundation/policies/conduct).\n\n## Contributors\n\nWe appreciate all developers for their contributions. See the [List Of Contributors](https://github.com/apache/seatunnel/graphs/contributors).\n\n## How to Compile\n\nRefer to this [Setup](docs/en/contribution/setup.md) for compilation instructions.\n\n## Contact Us\n\n- Mail list: **dev@seatunnel.apache.org**. Subscribe by sending an email to `dev-subscribe@seatunnel.apache.org`.\n\n- Slack: [Join SeaTunnel Slack](https://s.apache.org/seatunnel-slack)\n\n- Twitter: [ASFSeaTunnel on Twitter](https://twitter.com/ASFSeaTunnel)\n\n## Landscapes\n\nSeaTunnel enriches the [CNCF CLOUD NATIVE Landscape](https://landscape.cncf.io/?landscape=observability-and-analysis&license=apache-license-2-0).\n\n## Apache SeaTunnel Web Project\n\nSeaTunnel Web is a web project that provides visual management of jobs, scheduling, running and monitoring capabilities. It is developed based on the SeaTunnel Connector API and the SeaTunnel Zeta Engine. It is a web project that can be deployed independently. It is also a sub-project of SeaTunnel.\nFor more information, please refer to [SeaTunnel Web](https://github.com/apache/seatunnel-web)\n\n## Our Users\n\nCompanies and organizations worldwide use SeaTunnel for research, production, and commercial products. Visit our [Users](https://seatunnel.apache.org/user) for more information.\n\n## License\n\n[Apache 2.0 License](LICENSE)\n\n## Frequently Asked Questions\n\n### 1. How do I install SeaTunnel?\n\nFollow the [Installation Guide](https://seatunnel.apache.org/docs/start-v2/locally/deployment/) on our website to get\nstarted.\n\n### 2. How can I contribute to SeaTunnel?\n\nWe welcome contributions! Please refer to our [Contribution Guidelines](https://github.com/apache/seatunnel/blob/dev/docs/en/contribution/coding-guide.md) for details.\n\n### 3. How do I report issues or request features?\n\nYou can report issues or request features on our [GitHub Repository](https://github.com/apache/seatunnel/issues).\n\n### 4. Can I use SeaTunnel for commercial purposes?\n\nYes, SeaTunnel is available under the Apache 2.0 License, allowing commercial use.\n\n### 5. Where can I find documentation and tutorials?\n\nOur [Official Documentation](https://seatunnel.apache.org/docs) includes detailed guides and tutorials to help you get started.\n\n### 6. Is there a community or support channel?\n\nJoin our Slack community for support and discussions: [SeaTunnel Slack](https://s.apache.org/seatunnel-slack).\nMore information, please refer to [FAQ](https://seatunnel.apache.org/docs/faq). \n"
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "config",
          "type": "tree",
          "content": null
        },
        {
          "name": "deploy",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "mvnw",
          "type": "blob",
          "size": 10.0419921875,
          "content": "#!/bin/sh\n# ----------------------------------------------------------------------------\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n# ----------------------------------------------------------------------------\n\n# ----------------------------------------------------------------------------\n# Maven Start Up Batch script\n#\n# Required ENV vars:\n# ------------------\n#   JAVA_HOME - location of a JDK home dir\n#\n# Optional ENV vars\n# -----------------\n#   M2_HOME - location of maven2's installed home dir\n#   MAVEN_OPTS - parameters passed to the Java VM when running Maven\n#     e.g. to debug Maven itself, use\n#       set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000\n#   MAVEN_SKIP_RC - flag to disable loading of mavenrc files\n# ----------------------------------------------------------------------------\n\nif [ -z \"$MAVEN_SKIP_RC\" ] ; then\n\n  if [ -f /usr/local/etc/mavenrc ] ; then\n    . /usr/local/etc/mavenrc\n  fi\n\n  if [ -f /etc/mavenrc ] ; then\n    . /etc/mavenrc\n  fi\n\n  if [ -f \"$HOME/.mavenrc\" ] ; then\n    . \"$HOME/.mavenrc\"\n  fi\n\nfi\n\n# OS specific support.  $var _must_ be set to either true or false.\ncygwin=false;\ndarwin=false;\nmingw=false\ncase \"`uname`\" in\n  CYGWIN*) cygwin=true ;;\n  MINGW*) mingw=true;;\n  Darwin*) darwin=true\n    # Use /usr/libexec/java_home if available, otherwise fall back to /Library/Java/Home\n    # See https://developer.apple.com/library/mac/qa/qa1170/_index.html\n    if [ -z \"$JAVA_HOME\" ]; then\n      if [ -x \"/usr/libexec/java_home\" ]; then\n        export JAVA_HOME=\"`/usr/libexec/java_home`\"\n      else\n        export JAVA_HOME=\"/Library/Java/Home\"\n      fi\n    fi\n    ;;\nesac\n\nif [ -z \"$JAVA_HOME\" ] ; then\n  if [ -r /etc/gentoo-release ] ; then\n    JAVA_HOME=`java-config --jre-home`\n  fi\nfi\n\nif [ -z \"$M2_HOME\" ] ; then\n  ## resolve links - $0 may be a link to maven's home\n  PRG=\"$0\"\n\n  # need this for relative symlinks\n  while [ -h \"$PRG\" ] ; do\n    ls=`ls -ld \"$PRG\"`\n    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n    if expr \"$link\" : '/.*' > /dev/null; then\n      PRG=\"$link\"\n    else\n      PRG=\"`dirname \"$PRG\"`/$link\"\n    fi\n  done\n\n  saveddir=`pwd`\n\n  M2_HOME=`dirname \"$PRG\"`/..\n\n  # make it fully qualified\n  M2_HOME=`cd \"$M2_HOME\" && pwd`\n\n  cd \"$saveddir\"\n  # echo Using m2 at $M2_HOME\nfi\n\n# For Cygwin, ensure paths are in UNIX format before anything is touched\nif $cygwin ; then\n  [ -n \"$M2_HOME\" ] &&\n    M2_HOME=`cygpath --unix \"$M2_HOME\"`\n  [ -n \"$JAVA_HOME\" ] &&\n    JAVA_HOME=`cygpath --unix \"$JAVA_HOME\"`\n  [ -n \"$CLASSPATH\" ] &&\n    CLASSPATH=`cygpath --path --unix \"$CLASSPATH\"`\nfi\n\n# For Mingw, ensure paths are in UNIX format before anything is touched\nif $mingw ; then\n  [ -n \"$M2_HOME\" ] &&\n    M2_HOME=\"`(cd \"$M2_HOME\"; pwd)`\"\n  [ -n \"$JAVA_HOME\" ] &&\n    JAVA_HOME=\"`(cd \"$JAVA_HOME\"; pwd)`\"\nfi\n\nif [ -z \"$JAVA_HOME\" ]; then\n  javaExecutable=\"`which javac`\"\n  if [ -n \"$javaExecutable\" ] && ! [ \"`expr \\\"$javaExecutable\\\" : '\\([^ ]*\\)'`\" = \"no\" ]; then\n    # readlink(1) is not available as standard on Solaris 10.\n    readLink=`which readlink`\n    if [ ! `expr \"$readLink\" : '\\([^ ]*\\)'` = \"no\" ]; then\n      if $darwin ; then\n        javaHome=\"`dirname \\\"$javaExecutable\\\"`\"\n        javaExecutable=\"`cd \\\"$javaHome\\\" && pwd -P`/javac\"\n      else\n        javaExecutable=\"`readlink -f \\\"$javaExecutable\\\"`\"\n      fi\n      javaHome=\"`dirname \\\"$javaExecutable\\\"`\"\n      javaHome=`expr \"$javaHome\" : '\\(.*\\)/bin'`\n      JAVA_HOME=\"$javaHome\"\n      export JAVA_HOME\n    fi\n  fi\nfi\n\nif [ -z \"$JAVACMD\" ] ; then\n  if [ -n \"$JAVA_HOME\"  ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n      # IBM's JDK on AIX uses strange locations for the executables\n      JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n    else\n      JAVACMD=\"$JAVA_HOME/bin/java\"\n    fi\n  else\n    JAVACMD=\"`\\\\unset -f command; \\\\command -v java`\"\n  fi\nfi\n\nif [ ! -x \"$JAVACMD\" ] ; then\n  echo \"Error: JAVA_HOME is not defined correctly.\" >&2\n  echo \"  We cannot execute $JAVACMD\" >&2\n  exit 1\nfi\n\nif [ -z \"$JAVA_HOME\" ] ; then\n  echo \"Warning: JAVA_HOME environment variable is not set.\"\nfi\n\nCLASSWORLDS_LAUNCHER=org.codehaus.plexus.classworlds.launcher.Launcher\n\n# traverses directory structure from process work directory to filesystem root\n# first directory with .mvn subdirectory is considered project base directory\nfind_maven_basedir() {\n\n  if [ -z \"$1\" ]\n  then\n    echo \"Path not specified to find_maven_basedir\"\n    return 1\n  fi\n\n  basedir=\"$1\"\n  wdir=\"$1\"\n  while [ \"$wdir\" != '/' ] ; do\n    if [ -d \"$wdir\"/.mvn ] ; then\n      basedir=$wdir\n      break\n    fi\n    # workaround for JBEAP-8937 (on Solaris 10/Sparc)\n    if [ -d \"${wdir}\" ]; then\n      wdir=`cd \"$wdir/..\"; pwd`\n    fi\n    # end of workaround\n  done\n  echo \"${basedir}\"\n}\n\n# concatenates all lines of a file\nconcat_lines() {\n  if [ -f \"$1\" ]; then\n    echo \"$(tr -s '\\n' ' ' < \"$1\")\"\n  fi\n}\n\nBASE_DIR=`find_maven_basedir \"$(pwd)\"`\nif [ -z \"$BASE_DIR\" ]; then\n  exit 1;\nfi\n\n##########################################################################################\n# Extension to allow automatically downloading the maven-wrapper.jar from Maven-central\n# This allows using the maven wrapper in projects that prohibit checking in binary data.\n##########################################################################################\nif [ -r \"$BASE_DIR/.mvn/wrapper/maven-wrapper.jar\" ]; then\n    if [ \"$MVNW_VERBOSE\" = true ]; then\n      echo \"Found .mvn/wrapper/maven-wrapper.jar\"\n    fi\nelse\n    if [ \"$MVNW_VERBOSE\" = true ]; then\n      echo \"Couldn't find .mvn/wrapper/maven-wrapper.jar, downloading it ...\"\n    fi\n    if [ -n \"$MVNW_REPOURL\" ]; then\n      jarUrl=\"$MVNW_REPOURL/org/apache/maven/wrapper/maven-wrapper/3.1.0/maven-wrapper-3.1.0.jar\"\n    else\n      jarUrl=\"https://repo.maven.apache.org/maven2/org/apache/maven/wrapper/maven-wrapper/3.1.0/maven-wrapper-3.1.0.jar\"\n    fi\n    while IFS=\"=\" read key value; do\n      case \"$key\" in (wrapperUrl) jarUrl=\"$value\"; break ;;\n      esac\n    done < \"$BASE_DIR/.mvn/wrapper/maven-wrapper.properties\"\n    if [ \"$MVNW_VERBOSE\" = true ]; then\n      echo \"Downloading from: $jarUrl\"\n    fi\n    wrapperJarPath=\"$BASE_DIR/.mvn/wrapper/maven-wrapper.jar\"\n    if $cygwin; then\n      wrapperJarPath=`cygpath --path --windows \"$wrapperJarPath\"`\n    fi\n\n    if command -v wget > /dev/null; then\n        if [ \"$MVNW_VERBOSE\" = true ]; then\n          echo \"Found wget ... using wget\"\n        fi\n        if [ -z \"$MVNW_USERNAME\" ] || [ -z \"$MVNW_PASSWORD\" ]; then\n            wget \"$jarUrl\" -O \"$wrapperJarPath\" || rm -f \"$wrapperJarPath\"\n        else\n            wget --http-user=$MVNW_USERNAME --http-password=$MVNW_PASSWORD \"$jarUrl\" -O \"$wrapperJarPath\" || rm -f \"$wrapperJarPath\"\n        fi\n    elif command -v curl > /dev/null; then\n        if [ \"$MVNW_VERBOSE\" = true ]; then\n          echo \"Found curl ... using curl\"\n        fi\n        if [ -z \"$MVNW_USERNAME\" ] || [ -z \"$MVNW_PASSWORD\" ]; then\n            curl -o \"$wrapperJarPath\" \"$jarUrl\" -f\n        else\n            curl --user $MVNW_USERNAME:$MVNW_PASSWORD -o \"$wrapperJarPath\" \"$jarUrl\" -f\n        fi\n\n    else\n        if [ \"$MVNW_VERBOSE\" = true ]; then\n          echo \"Falling back to using Java to download\"\n        fi\n        javaClass=\"$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.java\"\n        # For Cygwin, switch paths to Windows format before running javac\n        if $cygwin; then\n          javaClass=`cygpath --path --windows \"$javaClass\"`\n        fi\n        if [ -e \"$javaClass\" ]; then\n            if [ ! -e \"$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.class\" ]; then\n                if [ \"$MVNW_VERBOSE\" = true ]; then\n                  echo \" - Compiling MavenWrapperDownloader.java ...\"\n                fi\n                # Compiling the Java class\n                (\"$JAVA_HOME/bin/javac\" \"$javaClass\")\n            fi\n            if [ -e \"$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.class\" ]; then\n                # Running the downloader\n                if [ \"$MVNW_VERBOSE\" = true ]; then\n                  echo \" - Running MavenWrapperDownloader.java ...\"\n                fi\n                (\"$JAVA_HOME/bin/java\" -cp .mvn/wrapper MavenWrapperDownloader \"$MAVEN_PROJECTBASEDIR\")\n            fi\n        fi\n    fi\nfi\n##########################################################################################\n# End of extension\n##########################################################################################\n\nexport MAVEN_PROJECTBASEDIR=${MAVEN_BASEDIR:-\"$BASE_DIR\"}\nif [ \"$MVNW_VERBOSE\" = true ]; then\n  echo $MAVEN_PROJECTBASEDIR\nfi\nMAVEN_OPTS=\"$(concat_lines \"$MAVEN_PROJECTBASEDIR/.mvn/jvm.config\") $MAVEN_OPTS\"\n\n# For Cygwin, switch paths to Windows format before running java\nif $cygwin; then\n  [ -n \"$M2_HOME\" ] &&\n    M2_HOME=`cygpath --path --windows \"$M2_HOME\"`\n  [ -n \"$JAVA_HOME\" ] &&\n    JAVA_HOME=`cygpath --path --windows \"$JAVA_HOME\"`\n  [ -n \"$CLASSPATH\" ] &&\n    CLASSPATH=`cygpath --path --windows \"$CLASSPATH\"`\n  [ -n \"$MAVEN_PROJECTBASEDIR\" ] &&\n    MAVEN_PROJECTBASEDIR=`cygpath --path --windows \"$MAVEN_PROJECTBASEDIR\"`\nfi\n\n# Provide a \"standardized\" way to retrieve the CLI args that will\n# work with both Windows and non-Windows executions.\nMAVEN_CMD_LINE_ARGS=\"$MAVEN_CONFIG $@\"\nexport MAVEN_CMD_LINE_ARGS\n\nWRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain\n\nexec \"$JAVACMD\" \\\n  $MAVEN_OPTS \\\n  $MAVEN_DEBUG_OPTS \\\n  -classpath \"$MAVEN_PROJECTBASEDIR/.mvn/wrapper/maven-wrapper.jar\" \\\n  \"-Dmaven.home=${M2_HOME}\" \\\n  \"-Dmaven.multiModuleProjectDirectory=${MAVEN_PROJECTBASEDIR}\" \\\n  ${WRAPPER_LAUNCHER} $MAVEN_CONFIG \"$@\"\n"
        },
        {
          "name": "mvnw.cmd",
          "type": "blob",
          "size": 6.5751953125,
          "content": "@REM ----------------------------------------------------------------------------\n@REM Licensed to the Apache Software Foundation (ASF) under one\n@REM or more contributor license agreements.  See the NOTICE file\n@REM distributed with this work for additional information\n@REM regarding copyright ownership.  The ASF licenses this file\n@REM to you under the Apache License, Version 2.0 (the\n@REM \"License\"); you may not use this file except in compliance\n@REM with the License.  You may obtain a copy of the License at\n@REM\n@REM    http://www.apache.org/licenses/LICENSE-2.0\n@REM\n@REM Unless required by applicable law or agreed to in writing,\n@REM software distributed under the License is distributed on an\n@REM \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n@REM KIND, either express or implied.  See the License for the\n@REM specific language governing permissions and limitations\n@REM under the License.\n@REM ----------------------------------------------------------------------------\n\n@REM ----------------------------------------------------------------------------\n@REM Maven Start Up Batch script\n@REM\n@REM Required ENV vars:\n@REM JAVA_HOME - location of a JDK home dir\n@REM\n@REM Optional ENV vars\n@REM M2_HOME - location of maven2's installed home dir\n@REM MAVEN_BATCH_ECHO - set to 'on' to enable the echoing of the batch commands\n@REM MAVEN_BATCH_PAUSE - set to 'on' to wait for a keystroke before ending\n@REM MAVEN_OPTS - parameters passed to the Java VM when running Maven\n@REM     e.g. to debug Maven itself, use\n@REM set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000\n@REM MAVEN_SKIP_RC - flag to disable loading of mavenrc files\n@REM ----------------------------------------------------------------------------\n\n@REM Begin all REM lines with '@' in case MAVEN_BATCH_ECHO is 'on'\n@echo off\n@REM set title of command window\ntitle %0\n@REM enable echoing by setting MAVEN_BATCH_ECHO to 'on'\n@if \"%MAVEN_BATCH_ECHO%\" == \"on\"  echo %MAVEN_BATCH_ECHO%\n\n@REM set %HOME% to equivalent of $HOME\nif \"%HOME%\" == \"\" (set \"HOME=%HOMEDRIVE%%HOMEPATH%\")\n\n@REM Execute a user defined script before this one\nif not \"%MAVEN_SKIP_RC%\" == \"\" goto skipRcPre\n@REM check for pre script, once with legacy .bat ending and once with .cmd ending\nif exist \"%USERPROFILE%\\mavenrc_pre.bat\" call \"%USERPROFILE%\\mavenrc_pre.bat\" %*\nif exist \"%USERPROFILE%\\mavenrc_pre.cmd\" call \"%USERPROFILE%\\mavenrc_pre.cmd\" %*\n:skipRcPre\n\n@setlocal\n\nset ERROR_CODE=0\n\n@REM To isolate internal variables from possible post scripts, we use another setlocal\n@setlocal\n\n@REM ==== START VALIDATION ====\nif not \"%JAVA_HOME%\" == \"\" goto OkJHome\n\necho.\necho Error: JAVA_HOME not found in your environment. >&2\necho Please set the JAVA_HOME variable in your environment to match the >&2\necho location of your Java installation. >&2\necho.\ngoto error\n\n:OkJHome\nif exist \"%JAVA_HOME%\\bin\\java.exe\" goto init\n\necho.\necho Error: JAVA_HOME is set to an invalid directory. >&2\necho JAVA_HOME = \"%JAVA_HOME%\" >&2\necho Please set the JAVA_HOME variable in your environment to match the >&2\necho location of your Java installation. >&2\necho.\ngoto error\n\n@REM ==== END VALIDATION ====\n\n:init\n\n@REM Find the project base dir, i.e. the directory that contains the folder \".mvn\".\n@REM Fallback to current working directory if not found.\n\nset MAVEN_PROJECTBASEDIR=%MAVEN_BASEDIR%\nIF NOT \"%MAVEN_PROJECTBASEDIR%\"==\"\" goto endDetectBaseDir\n\nset EXEC_DIR=%CD%\nset WDIR=%EXEC_DIR%\n:findBaseDir\nIF EXIST \"%WDIR%\"\\.mvn goto baseDirFound\ncd ..\nIF \"%WDIR%\"==\"%CD%\" goto baseDirNotFound\nset WDIR=%CD%\ngoto findBaseDir\n\n:baseDirFound\nset MAVEN_PROJECTBASEDIR=%WDIR%\ncd \"%EXEC_DIR%\"\ngoto endDetectBaseDir\n\n:baseDirNotFound\nset MAVEN_PROJECTBASEDIR=%EXEC_DIR%\ncd \"%EXEC_DIR%\"\n\n:endDetectBaseDir\n\nIF NOT EXIST \"%MAVEN_PROJECTBASEDIR%\\.mvn\\jvm.config\" goto endReadAdditionalConfig\n\n@setlocal EnableExtensions EnableDelayedExpansion\nfor /F \"usebackq delims=\" %%a in (\"%MAVEN_PROJECTBASEDIR%\\.mvn\\jvm.config\") do set JVM_CONFIG_MAVEN_PROPS=!JVM_CONFIG_MAVEN_PROPS! %%a\n@endlocal & set JVM_CONFIG_MAVEN_PROPS=%JVM_CONFIG_MAVEN_PROPS%\n\n:endReadAdditionalConfig\n\nSET MAVEN_JAVA_EXE=\"%JAVA_HOME%\\bin\\java.exe\"\nset WRAPPER_JAR=\"%MAVEN_PROJECTBASEDIR%\\.mvn\\wrapper\\maven-wrapper.jar\"\nset WRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain\n\nset DOWNLOAD_URL=\"https://repo.maven.apache.org/maven2/org/apache/maven/wrapper/maven-wrapper/3.1.0/maven-wrapper-3.1.0.jar\"\n\nFOR /F \"usebackq tokens=1,2 delims==\" %%A IN (\"%MAVEN_PROJECTBASEDIR%\\.mvn\\wrapper\\maven-wrapper.properties\") DO (\n    IF \"%%A\"==\"wrapperUrl\" SET DOWNLOAD_URL=%%B\n)\n\n@REM Extension to allow automatically downloading the maven-wrapper.jar from Maven-central\n@REM This allows using the maven wrapper in projects that prohibit checking in binary data.\nif exist %WRAPPER_JAR% (\n    if \"%MVNW_VERBOSE%\" == \"true\" (\n        echo Found %WRAPPER_JAR%\n    )\n) else (\n    if not \"%MVNW_REPOURL%\" == \"\" (\n        SET DOWNLOAD_URL=\"%MVNW_REPOURL%/org/apache/maven/wrapper/maven-wrapper/3.1.0/maven-wrapper-3.1.0.jar\"\n    )\n    if \"%MVNW_VERBOSE%\" == \"true\" (\n        echo Couldn't find %WRAPPER_JAR%, downloading it ...\n        echo Downloading from: %DOWNLOAD_URL%\n    )\n\n    powershell -Command \"&{\"^\n\t\t\"$webclient = new-object System.Net.WebClient;\"^\n\t\t\"if (-not ([string]::IsNullOrEmpty('%MVNW_USERNAME%') -and [string]::IsNullOrEmpty('%MVNW_PASSWORD%'))) {\"^\n\t\t\"$webclient.Credentials = new-object System.Net.NetworkCredential('%MVNW_USERNAME%', '%MVNW_PASSWORD%');\"^\n\t\t\"}\"^\n\t\t\"[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; $webclient.DownloadFile('%DOWNLOAD_URL%', '%WRAPPER_JAR%')\"^\n\t\t\"}\"\n    if \"%MVNW_VERBOSE%\" == \"true\" (\n        echo Finished downloading %WRAPPER_JAR%\n    )\n)\n@REM End of extension\n\n@REM Provide a \"standardized\" way to retrieve the CLI args that will\n@REM work with both Windows and non-Windows executions.\nset MAVEN_CMD_LINE_ARGS=%*\n\n%MAVEN_JAVA_EXE% ^\n  %JVM_CONFIG_MAVEN_PROPS% ^\n  %MAVEN_OPTS% ^\n  %MAVEN_DEBUG_OPTS% ^\n  -classpath %WRAPPER_JAR% ^\n  \"-Dmaven.multiModuleProjectDirectory=%MAVEN_PROJECTBASEDIR%\" ^\n  %WRAPPER_LAUNCHER% %MAVEN_CONFIG% %*\nif ERRORLEVEL 1 goto error\ngoto end\n\n:error\nset ERROR_CODE=1\n\n:end\n@endlocal & set ERROR_CODE=%ERROR_CODE%\n\nif not \"%MAVEN_SKIP_RC%\"==\"\" goto skipRcPost\n@REM check for post script, once with legacy .bat ending and once with .cmd ending\nif exist \"%USERPROFILE%\\mavenrc_post.bat\" call \"%USERPROFILE%\\mavenrc_post.bat\"\nif exist \"%USERPROFILE%\\mavenrc_post.cmd\" call \"%USERPROFILE%\\mavenrc_post.cmd\"\n:skipRcPost\n\n@REM pause the script if MAVEN_BATCH_PAUSE is set to 'on'\nif \"%MAVEN_BATCH_PAUSE%\"==\"on\" pause\n\nif \"%MAVEN_TERMINATE_CMD%\"==\"on\" exit %ERROR_CODE%\n\ncmd /C exit /B %ERROR_CODE%\n"
        },
        {
          "name": "plugin-mapping.properties",
          "type": "blob",
          "size": 7.36328125,
          "content": "#\n# Licensed to the Apache Software Foundation (ASF) under one or more\n# contributor license agreements.  See the NOTICE file distributed with\n# this work for additional information regarding copyright ownership.\n# The ASF licenses this file to You under the Apache License, Version 2.0\n# (the \"License\"); you may not use this file except in compliance with\n# the License.  You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\n# This mapping is used to resolve the Jar package name without version (or call artifactId)\n# corresponding to the module in the user Config, helping SeaTunnel to load the correct Jar package.\n\n## *** WARNING **** : `seatunnel.source.XXX`, the `XXX` should be string which SeaTunnelSource::getPluginName and TableSinkFactory::factoryIdentifier returned value##\n\n# SeaTunnel Connector-V2\n\nseatunnel.source.FakeSource = connector-fake\nseatunnel.sink.Console = connector-console\nseatunnel.sink.Assert = connector-assert\nseatunnel.source.Kafka = connector-kafka\nseatunnel.sink.Kafka = connector-kafka\nseatunnel.source.Http = connector-http-base\nseatunnel.sink.Http = connector-http-base\nseatunnel.sink.Feishu = connector-http-feishu\nseatunnel.source.Socket = connector-socket\nseatunnel.sink.Hive = connector-hive\nseatunnel.source.Hive = connector-hive\nseatunnel.source.Clickhouse = connector-clickhouse\nseatunnel.sink.Clickhouse = connector-clickhouse\nseatunnel.sink.ClickhouseFile = connector-clickhouse\nseatunnel.source.Jdbc = connector-jdbc\nseatunnel.sink.Jdbc = connector-jdbc\nseatunnel.source.Kudu = connector-kudu\nseatunnel.sink.Kudu = connector-kudu\nseatunnel.sink.EmailSink = connector-email\nseatunnel.source.HdfsFile = connector-file-hadoop\nseatunnel.sink.HdfsFile = connector-file-hadoop\nseatunnel.source.LocalFile = connector-file-local\nseatunnel.sink.LocalFile = connector-file-local\nseatunnel.source.OssFile = connector-file-oss\nseatunnel.sink.OssFile = connector-file-oss\nseatunnel.source.OssJindoFile = connector-file-jindo-oss\nseatunnel.sink.OssJindoFile = connector-file-jindo-oss\nseatunnel.source.CosFile = connector-file-cos\nseatunnel.sink.CosFile = connector-file-cos\nseatunnel.source.Pulsar = connector-pulsar\nseatunnel.sink.DingTalk = connector-dingtalk\nseatunnel.source.Elasticsearch = connector-elasticsearch\nseatunnel.sink.Elasticsearch = connector-elasticsearch\nseatunnel.source.IoTDB = connector-iotdb\nseatunnel.sink.IoTDB = connector-iotdb\nseatunnel.source.Neo4j = connector-neo4j\nseatunnel.sink.Neo4j = connector-neo4j\nseatunnel.source.FtpFile = connector-file-ftp\nseatunnel.sink.FtpFile = connector-file-ftp\nseatunnel.source.SftpFile = connector-file-sftp\nseatunnel.sink.SftpFile = connector-file-sftp\nseatunnel.sink.Socket = connector-socket\nseatunnel.source.Redis = connector-redis\nseatunnel.sink.Redis = connector-redis\nseatunnel.sink.DataHub = connector-datahub\nseatunnel.sink.Sentry = connector-sentry\nseatunnel.source.MongoDB = connector-mongodb\nseatunnel.sink.MongoDB = connector-mongodb\nseatunnel.source.Iceberg = connector-iceberg\nseatunnel.sink.Iceberg = connector-iceberg\nseatunnel.source.InfluxDB = connector-influxdb\nseatunnel.source.S3File = connector-file-s3\nseatunnel.sink.S3File = connector-file-s3\nseatunnel.source.AmazonDynamodb = connector-amazondynamodb\nseatunnel.sink.AmazonDynamodb = connector-amazondynamodb\nseatunnel.source.Cassandra = connector-cassandra\nseatunnel.sink.Cassandra = connector-cassandra\nseatunnel.sink.StarRocks = connector-starrocks\nseatunnel.source.MyHours = connector-http-myhours\nseatunnel.sink.InfluxDB = connector-influxdb\nseatunnel.source.GoogleSheets = connector-google-sheets\nseatunnel.sink.GoogleFirestore = connector-google-firestore\nseatunnel.sink.Tablestore = connector-tablestore\nseatunnel.source.Tablestore = connector-tablestore\nseatunnel.source.Lemlist = connector-http-lemlist\nseatunnel.source.Klaviyo = connector-http-klaviyo\nseatunnel.sink.Slack = connector-slack\nseatunnel.source.OneSignal = connector-http-onesignal\nseatunnel.source.Jira = connector-http-jira\nseatunnel.source.Gitlab = connector-http-gitlab\nseatunnel.source.Github = connector-http-github\nseatunnel.source.Notion = connector-http-notion\nseatunnel.sink.RabbitMQ = connector-rabbitmq\nseatunnel.source.RabbitMQ = connector-rabbitmq\nseatunnel.source.OpenMldb = connector-openmldb\nseatunnel.source.SqlServer-CDC = connector-cdc-sqlserver\nseatunnel.source.Doris = connector-doris\nseatunnel.sink.Doris = connector-doris\nseatunnel.source.Maxcompute = connector-maxcompute\nseatunnel.sink.Maxcompute = connector-maxcompute\nseatunnel.source.MySQL-CDC = connector-cdc-mysql\nseatunnel.source.MongoDB-CDC = connector-cdc-mongodb\nseatunnel.source.TiDB-CDC = connector-cdc-tidb\nseatunnel.sink.S3Redshift = connector-s3-redshift\nseatunnel.source.Web3j = connector-web3j\nseatunnel.source.TDengine = connector-tdengine\nseatunnel.sink.TDengine = connector-tdengine\nseatunnel.source.Persistiq = connector-http-persistiq\nseatunnel.sink.SelectDBCloud = connector-selectdb-cloud\nseatunnel.source.Hbase = connector-hbase\nseatunnel.sink.Hbase = connector-hbase\nseatunnel.source.StarRocks = connector-starrocks\nseatunnel.source.Rocketmq = connector-rocketmq\nseatunnel.sink.Rocketmq = connector-rocketmq\nseatunnel.source.AmazonSqs = connector-amazonsqs\nseatunnel.sink.AmazonSqs = connector-amazonsqs\nseatunnel.source.Paimon = connector-paimon\nseatunnel.sink.Paimon = connector-paimon\nseatunnel.sink.hudi = connector-hudi\nseatunnel.sink.Druid = connector-druid\nseatunnel.source.Easysearch = connector-easysearch\nseatunnel.sink.Easysearch = connector-easysearch\nseatunnel.source.Postgres-CDC = connector-cdc-postgres\nseatunnel.source.Oracle-CDC = connector-cdc-oracle\nseatunnel.sink.Pulsar = connector-pulsar\nseatunnel.source.ObsFile = connector-file-obs\nseatunnel.sink.ObsFile = connector-file-obs\nseatunnel.source.Milvus = connector-milvus\nseatunnel.sink.Milvus = connector-milvus\nseatunnel.sink.ActiveMQ = connector-activemq\nseatunnel.source.Prometheus = connector-prometheus\nseatunnel.sink.Prometheus = connector-prometheus\nseatunnel.source.Qdrant = connector-qdrant\nseatunnel.sink.Qdrant = connector-qdrant\nseatunnel.source.Sls = connector-sls\nseatunnel.sink.Sls = connector-sls\nseatunnel.source.Typesense = connector-typesense\nseatunnel.sink.Typesense = connector-typesense\nseatunnel.source.Opengauss-CDC = connector-cdc-opengauss\n\nseatunnel.transform.Sql = seatunnel-transforms-v2\nseatunnel.transform.FieldMapper = seatunnel-transforms-v2\nseatunnel.transform.Filter = seatunnel-transforms-v2\nseatunnel.transform.FilterRowKind = seatunnel-transforms-v2\nseatunnel.transform.JsonPath = seatunnel-transforms-v2\nseatunnel.transform.Replace = seatunnel-transforms-v2\nseatunnel.transform.Split = seatunnel-transforms-v2\nseatunnel.transform.Copy = seatunnel-transforms-v2\nseatunnel.transform.DynamicCompile = seatunnel-transforms-v2\nseatunnel.transform.LLM = seatunnel-transforms-v2\nseatunnel.transform.Embedding = seatunnel-transforms-v2\nseatunnel.transform.RowKindExtractor = seatunnel-transforms-v2\nseatunnel.transform.Metadata = seatunnel-transforms-v2\nseatunnel.transform.FieldRename = seatunnel-transforms-v2\nseatunnel.transform.TableRename = seatunnel-transforms-v2\nseatunnel.transform.TableMerge = seatunnel-transforms-v2\n"
        },
        {
          "name": "plugins",
          "type": "tree",
          "content": null
        },
        {
          "name": "pom.xml",
          "type": "blob",
          "size": 43.7373046875,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!--\n    Licensed to the Apache Software Foundation (ASF) under one or more\n    contributor license agreements.  See the NOTICE file distributed with\n    this work for additional information regarding copyright ownership.\n    The ASF licenses this file to You under the Apache License, Version 2.0\n    (the \"License\"); you may not use this file except in compliance with\n    the License.  You may obtain a copy of the License at\n       http://www.apache.org/licenses/LICENSE-2.0\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n-->\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n\n    <parent>\n        <groupId>org.apache</groupId>\n        <artifactId>apache</artifactId>\n        <version>31</version>\n        <relativePath />\n    </parent>\n\n    <groupId>org.apache.seatunnel</groupId>\n    <artifactId>seatunnel</artifactId>\n    <version>${revision}</version>\n    <packaging>pom</packaging>\n\n    <name>SeaTunnel :</name>\n\n    <description>Production ready big data processing product based on Apache Spark and Apache Flink.</description>\n\n    <modules>\n        <!--\n            We retrieve the config module from maven repository. If you want to change the config module,\n            you need to open this annotation and change the dependency of config-shade to project.\n            <module>seatunnel-config</module>\n        -->\n        <module>seatunnel-config</module>\n        <module>seatunnel-common</module>\n        <module>seatunnel-core</module>\n        <module>seatunnel-transforms-v2</module>\n        <module>seatunnel-connectors-v2</module>\n        <module>seatunnel-api</module>\n        <module>seatunnel-translation</module>\n        <module>seatunnel-plugin-discovery</module>\n        <module>seatunnel-formats</module>\n        <module>seatunnel-engine</module>\n        <module>seatunnel-examples</module>\n        <module>seatunnel-e2e</module>\n        <module>seatunnel-shade</module>\n        <module>seatunnel-ci-tools</module>\n    </modules>\n\n    <properties>\n        <!--todo The classification is too confusing, reclassify by type-->\n        <revision>2.3.9-SNAPSHOT</revision>\n        <seatunnel.config.shade.version>2.1.1</seatunnel.config.shade.version>\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n        <java.version>1.8</java.version>\n        <scala.version>2.12.15</scala.version>\n        <scala.binary.version>2.12</scala.binary.version>\n        <maven.compiler.source>${java.version}</maven.compiler.source>\n        <maven.compiler.target>${java.version}</maven.compiler.target>\n\n        <slf4j.version>1.7.25</slf4j.version>\n        <log4j2.version>2.17.1</log4j2.version>\n        <log4j2-disruptor.version>3.4.4</log4j2-disruptor.version>\n        <log4j.version>1.2.17</log4j.version>\n        <logback.version>1.2.3</logback.version>\n        <commons-logging.version>1.2</commons-logging.version>\n        <flink.1.13.6.version>1.13.6</flink.1.13.6.version>\n        <flink.1.15.3.version>1.15.3</flink.1.15.3.version>\n        <spark.2.4.0.version>2.4.0</spark.2.4.0.version>\n        <spark.3.3.0.version>3.3.0</spark.3.3.0.version>\n        <spark.binary.2.4.version>2.4</spark.binary.2.4.version>\n        <commons.beanutils.version>1.9.4</commons.beanutils.version>\n        <commons.cli.version>1.4</commons.cli.version>\n        <commons.configuration.version>1.7</commons.configuration.version>\n        <commons.digester.version>1.8.1</commons.digester.version>\n        <codehaus.jackson.version>1.9.13</codehaus.jackson.version>\n        <jersey.version>1.19</jersey.version>\n        <javax.servlet.jap.version>2.1</javax.servlet.jap.version>\n        <hadoop.binary.version>2.7</hadoop.binary.version>\n        <jackson.version>2.13.3</jackson.version>\n        <lombok.version>1.18.24</lombok.version>\n        <commons-compress.version>1.20</commons-compress.version>\n        <avro.version>1.11.1</avro.version>\n        <skip.pmd.check>false</skip.pmd.check>\n        <maven.deploy.skip>false</maven.deploy.skip>\n        <maven.javadoc.skip>false</maven.javadoc.skip>\n        <maven-surefire-plugin.version>2.22.2</maven-surefire-plugin.version>\n        <maven-failsafe-plugin.version>2.22.2</maven-failsafe-plugin.version>\n        <nexus-staging-maven-plugin.version>1.6.8</nexus-staging-maven-plugin.version>\n        <maven-source-plugin.version>3.0.1</maven-source-plugin.version>\n        <maven-javadoc-plugin.version>2.9.1</maven-javadoc-plugin.version>\n        <maven-deploy-plugin.version>2.8.2</maven-deploy-plugin.version>\n        <maven-compiler-plugin.version>3.10.1</maven-compiler-plugin.version>\n        <maven-pmd-plugin.version>3.8</maven-pmd-plugin.version>\n        <elasticsearch6.client.version>6.3.1</elasticsearch6.client.version>\n        <elasticsearch7.client.version>7.5.1</elasticsearch7.client.version>\n        <flink-shaded-hadoop-2.version>2.7.5-7.0</flink-shaded-hadoop-2.version>\n        <commons-lang3.version>3.8</commons-lang3.version>\n        <commons-io.version>2.11.0</commons-io.version>\n        <commons-collections4.version>4.4</commons-collections4.version>\n        <commons-csv.version>1.10.0</commons-csv.version>\n        <maven-assembly-plugin.version>3.3.0</maven-assembly-plugin.version>\n        <protostuff.version>1.8.0</protostuff.version>\n        <spark.scope>provided</spark.scope>\n        <flink.scope>provided</flink.scope>\n        <codec.version>1.13</codec.version>\n        <exec-maven-plugin.version>3.0.0</exec-maven-plugin.version>\n        <docker.hub>apache</docker.hub>\n        <docker.repo>seatunnel</docker.repo>\n        <docker.tag>${project.version}</docker.tag>\n        <docker.build.skip>true</docker.build.skip>\n        <docker.verify.skip>true</docker.verify.skip>\n        <docker.push.skip>true</docker.push.skip>\n        <jcommander.version>1.81</jcommander.version>\n        <junit4.version>4.13.2</junit4.version>\n        <junit5.version>5.9.0</junit5.version>\n        <rest-assured.version>5.4.0</rest-assured.version>\n        <mockito.version>4.11.0</mockito.version>\n        <config.version>1.3.3</config.version>\n        <maven-shade-plugin.version>3.4.1</maven-shade-plugin.version>\n        <maven-helper-plugin.version>3.2.0</maven-helper-plugin.version>\n        <maven-git-commit-id-plugin.version>4.0.4</maven-git-commit-id-plugin.version>\n        <flatten-maven-plugin.version>1.3.0</flatten-maven-plugin.version>\n        <maven-license-maven-plugin>1.20</maven-license-maven-plugin>\n        <log4j-core.version>2.17.1</log4j-core.version>\n        <docker-maven-plugin.version>0.38.0</docker-maven-plugin.version>\n        <maven-dependency-plugin.version>3.1.1</maven-dependency-plugin.version>\n        <p3c-pmd.version>1.3.0</p3c-pmd.version>\n        <maven-scm-provider-jgit.version>2.0.0</maven-scm-provider-jgit.version>\n        <testcontainer.version>1.17.6</testcontainer.version>\n        <spotless.version>2.29.0</spotless.version>\n        <jsqlparser.version>4.9</jsqlparser.version>\n        <json-path.version>2.7.0</json-path.version>\n        <groovy.version>4.0.16</groovy.version>\n        <jetty.version>9.4.56.v20240826</jetty.version>\n        <jakarta.servlet-api>4.0.4</jakarta.servlet-api>\n        <!-- Option args -->\n        <skipUT>false</skipUT>\n        <skipIT>true</skipIT>\n        <elasticsearch>7</elasticsearch>\n        <guava.version>27.0-jre</guava.version>\n        <auto-service.version>1.0.1</auto-service.version>\n        <hadoop2.version>2.6.5</hadoop2.version>\n        <seatunnel.shade.package>org.apache.seatunnel.shade</seatunnel.shade.package>\n        <snappy-java.version>1.1.8.3</snappy-java.version>\n        <checker.qual.version>3.10.0</checker.qual.version>\n        <awaitility.version>4.2.0</awaitility.version>\n        <e2e.dependency.skip>true</e2e.dependency.skip>\n        <skip.spotless>false</skip.spotless>\n\n        <!-- prometheus simpleclient -->\n        <prometheus.simpleclient.version>0.16.0</prometheus.simpleclient.version>\n        <enableSourceJarCreation>true</enableSourceJarCreation>\n\n        <hadoop-aws.version>3.1.4</hadoop-aws.version>\n        <arrow.version>15.0.1</arrow.version>\n\n    </properties>\n\n    <dependencyManagement>\n        <dependencies>\n            <!-- ***************** slf4j & provider & bridges start ***************** -->\n            <!-- Declare slf4j-api -->\n            <dependency>\n                <groupId>org.slf4j</groupId>\n                <artifactId>slf4j-api</artifactId>\n                <version>${slf4j.version}</version>\n            </dependency>\n            <!-- Declare slf4j-api provider: log4j2.x -->\n            <dependency>\n                <groupId>org.apache.logging.log4j</groupId>\n                <artifactId>log4j-slf4j-impl</artifactId>\n                <version>${log4j2.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.apache.logging.log4j</groupId>\n                <artifactId>log4j-api</artifactId>\n                <version>${log4j2.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.apache.logging.log4j</groupId>\n                <artifactId>log4j-core</artifactId>\n                <version>${log4j2.version}</version>\n            </dependency>\n            <!-- Declare log4j2 asynchronous loggers provider: disruptor -->\n            <dependency>\n                <groupId>com.lmax</groupId>\n                <artifactId>disruptor</artifactId>\n                <version>${log4j2-disruptor.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.xerial.snappy</groupId>\n                <artifactId>snappy-java</artifactId>\n                <version>${snappy-java.version}</version>\n            </dependency>\n            <!-- Include the logging bridges -->\n            <!-- commons-logging bridge to slf4j -->\n            <dependency>\n                <groupId>org.slf4j</groupId>\n                <artifactId>jcl-over-slf4j</artifactId>\n                <version>${slf4j.version}</version>\n            </dependency>\n            <!-- jdk-logging bridge to slf4j -->\n            <!-- low performance, see: https://www.slf4j.org/legacy.html#jul-to-slf4j\n            <dependency>\n                <groupId>org.slf4j</groupId>\n                <artifactId>jul-to-slf4j</artifactId>\n                <version>${slf4j.version}</version>\n            </dependency>\n            -->\n            <!-- log4j1.x bridge to log4j2.x -->\n            <dependency>\n                <groupId>org.apache.logging.log4j</groupId>\n                <artifactId>log4j-1.2-api</artifactId>\n                <version>${log4j2.version}</version>\n            </dependency>\n            <!-- Exclude the logging bridges via provided scope -->\n            <!-- log4j1.x bridge to slf4j\n                 Use of the SLF4J adapter (log4j-over-slf4j) together with the SLF4J bridge (slf4j-log4j12) should never be attempted as it will cause events to endlessly be routed between SLF4J and Log4j 1\n             -->\n            <dependency>\n                <groupId>org.slf4j</groupId>\n                <artifactId>log4j-over-slf4j</artifactId>\n                <version>${slf4j.version}</version>\n                <scope>provided</scope>\n            </dependency>\n            <!-- slf4j binding to log4j1.x -->\n            <dependency>\n                <groupId>org.slf4j</groupId>\n                <artifactId>slf4j-log4j12</artifactId>\n                <version>${slf4j.version}</version>\n                <scope>provided</scope>\n            </dependency>\n            <!-- log4j2.x binding to slf4j.\n                 Use of the SLF4J adapter (log4j-to-slf4j-2.x.jar) together with the SLF4J bridge (log4j-slf4j-impl-2.x.jar) should never be attempted as it will cause events to endlessly be routed between SLF4J and Log4j 2\n            -->\n            <dependency>\n                <groupId>org.apache.logging.log4j</groupId>\n                <artifactId>log4j-to-slf4j</artifactId>\n                <version>${log4j2.version}</version>\n                <scope>provided</scope>\n            </dependency>\n            <!-- slf4j binding to jdk-logging -->\n            <dependency>\n                <groupId>org.slf4j</groupId>\n                <artifactId>slf4j-jdk14</artifactId>\n                <version>${slf4j.version}</version>\n                <scope>provided</scope>\n            </dependency>\n            <!-- slf4j binding to commons-logging -->\n            <dependency>\n                <groupId>org.slf4j</groupId>\n                <artifactId>slf4j-jcl</artifactId>\n                <version>${slf4j.version}</version>\n                <scope>provided</scope>\n            </dependency>\n            <!-- slf4j binding to nop -->\n            <dependency>\n                <groupId>org.slf4j</groupId>\n                <artifactId>slf4j-nop</artifactId>\n                <version>${slf4j.version}</version>\n                <scope>provided</scope>\n            </dependency>\n            <!-- slf4j binding to simple -->\n            <dependency>\n                <groupId>org.slf4j</groupId>\n                <artifactId>slf4j-simple</artifactId>\n                <version>${slf4j.version}</version>\n                <scope>provided</scope>\n            </dependency>\n            <!-- slf4j binding to reload4j -->\n            <dependency>\n                <groupId>org.slf4j</groupId>\n                <artifactId>slf4j-reload4j</artifactId>\n                <version>${slf4j.version}</version>\n                <scope>provided</scope>\n            </dependency>\n            <!-- Exclude other logging provider via provided scope -->\n            <dependency>\n                <groupId>commons-logging</groupId>\n                <artifactId>commons-logging</artifactId>\n                <version>${commons-logging.version}</version>\n                <scope>provided</scope>\n            </dependency>\n            <dependency>\n                <groupId>log4j</groupId>\n                <artifactId>log4j</artifactId>\n                <version>${log4j.version}</version>\n                <scope>provided</scope>\n            </dependency>\n            <dependency>\n                <groupId>ch.qos.logback</groupId>\n                <artifactId>logback-classic</artifactId>\n                <version>${logback.version}</version>\n                <scope>provided</scope>\n            </dependency>\n            <dependency>\n                <groupId>ch.qos.logback</groupId>\n                <artifactId>logback-core</artifactId>\n                <version>${logback.version}</version>\n                <scope>provided</scope>\n            </dependency>\n            <!-- ***************** slf4j & provider & bridges end ***************** -->\n\n            <dependency>\n                <groupId>org.apache.seatunnel</groupId>\n                <artifactId>seatunnel-config-shade</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>commons-codec</groupId>\n                <artifactId>commons-codec</artifactId>\n                <version>${codec.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>org.apache.flink</groupId>\n                <artifactId>flink-shaded-hadoop-2</artifactId>\n                <version>${flink-shaded-hadoop-2.version}</version>\n                <exclusions>\n                    <exclusion>\n                        <groupId>xml-apis</groupId>\n                        <artifactId>xml-apis</artifactId>\n                    </exclusion>\n                    <exclusion>\n                        <groupId>org.slf4j</groupId>\n                        <artifactId>slf4j-log4j12</artifactId>\n                    </exclusion>\n                </exclusions>\n            </dependency>\n\n            <dependency>\n                <groupId>org.projectlombok</groupId>\n                <artifactId>lombok</artifactId>\n                <version>${lombok.version}</version>\n                <scope>provided</scope>\n            </dependency>\n\n            <dependency>\n                <groupId>org.apache.commons</groupId>\n                <artifactId>commons-lang3</artifactId>\n                <version>${commons-lang3.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.apache.commons</groupId>\n                <artifactId>commons-collections4</artifactId>\n                <version>${commons-collections4.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.apache.commons</groupId>\n                <artifactId>commons-csv</artifactId>\n                <version>${commons-csv.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.beust</groupId>\n                <artifactId>jcommander</artifactId>\n                <version>${jcommander.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>org.junit</groupId>\n                <artifactId>junit-bom</artifactId>\n                <version>${junit5.version}</version>\n                <type>pom</type>\n                <scope>import</scope>\n            </dependency>\n\n            <dependency>\n                <groupId>junit</groupId>\n                <artifactId>junit</artifactId>\n                <version>${junit4.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>org.mockito</groupId>\n                <artifactId>mockito-junit-jupiter</artifactId>\n                <version>${mockito.version}</version>\n                <scope>test</scope>\n            </dependency>\n\n            <dependency>\n                <groupId>com.fasterxml.jackson.core</groupId>\n                <artifactId>jackson-annotations</artifactId>\n                <version>${jackson.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>com.fasterxml.jackson.datatype</groupId>\n                <artifactId>jackson-datatype-jsr310</artifactId>\n                <version>${jackson.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.fasterxml.jackson.core</groupId>\n                <artifactId>jackson-core</artifactId>\n                <version>${jackson.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.fasterxml.jackson.core</groupId>\n                <artifactId>jackson-databind</artifactId>\n                <version>${jackson.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>org.apache.commons</groupId>\n                <artifactId>commons-compress</artifactId>\n                <version>${commons-compress.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>org.testcontainers</groupId>\n                <artifactId>testcontainers</artifactId>\n                <version>${testcontainer.version}</version>\n                <scope>test</scope>\n                <exclusions>\n                    <exclusion>\n                        <groupId>org.slf4j</groupId>\n                        <artifactId>slf4j-api</artifactId>\n                    </exclusion>\n                    <exclusion>\n                        <groupId>junit</groupId>\n                        <artifactId>junit</artifactId>\n                    </exclusion>\n                </exclusions>\n            </dependency>\n\n            <dependency>\n                <groupId>com.typesafe</groupId>\n                <artifactId>config</artifactId>\n                <version>${config.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>org.scala-lang</groupId>\n                <artifactId>scala-library</artifactId>\n                <version>${scala.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.google.guava</groupId>\n                <artifactId>guava</artifactId>\n                <version>${guava.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>org.checkerframework</groupId>\n                <artifactId>checker-qual</artifactId>\n                <version>${checker.qual.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>org.awaitility</groupId>\n                <artifactId>awaitility</artifactId>\n                <version>${awaitility.version}</version>\n                <scope>test</scope>\n            </dependency>\n\n            <dependency>\n                <groupId>commons-io</groupId>\n                <artifactId>commons-io</artifactId>\n                <version>${commons-io.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>io.protostuff</groupId>\n                <artifactId>protostuff-core</artifactId>\n                <version>${protostuff.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>io.protostuff</groupId>\n                <artifactId>protostuff-runtime</artifactId>\n                <version>${protostuff.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.google.auto.service</groupId>\n                <artifactId>auto-service</artifactId>\n                <version>${auto-service.version}</version>\n                <scope>provided</scope>\n            </dependency>\n\n            <dependency>\n                <groupId>org.apache.seatunnel</groupId>\n                <artifactId>seatunnel-hadoop3-3.1.4-uber</artifactId>\n                <version>${project.version}</version>\n                <classifier>optional</classifier>\n                <scope>provided</scope>\n            </dependency>\n\n            <dependency>\n                <groupId>org.apache.arrow</groupId>\n                <artifactId>arrow-vector</artifactId>\n                <version>${arrow.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.apache.arrow</groupId>\n                <artifactId>arrow-memory-netty</artifactId>\n                <version>${arrow.version}</version>\n            </dependency>\n\n        </dependencies>\n    </dependencyManagement>\n\n    <dependencies>\n        <dependency>\n            <groupId>com.google.auto.service</groupId>\n            <artifactId>auto-service</artifactId>\n            <version>${auto-service.version}</version>\n            <scope>provided</scope>\n        </dependency>\n        <dependency>\n            <groupId>org.projectlombok</groupId>\n            <artifactId>lombok</artifactId>\n        </dependency>\n\n        <!-- ***************** slf4j & provider & bridges start ***************** -->\n        <dependency>\n            <groupId>org.slf4j</groupId>\n            <artifactId>slf4j-api</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.apache.logging.log4j</groupId>\n            <artifactId>log4j-slf4j-impl</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.apache.logging.log4j</groupId>\n            <artifactId>log4j-api</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.apache.logging.log4j</groupId>\n            <artifactId>log4j-core</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.slf4j</groupId>\n            <artifactId>jcl-over-slf4j</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.apache.logging.log4j</groupId>\n            <artifactId>log4j-1.2-api</artifactId>\n        </dependency>\n        <!-- ***************** slf4j & provider & bridges end ***************** -->\n\n        <dependency>\n            <groupId>org.junit.jupiter</groupId>\n            <artifactId>junit-jupiter-engine</artifactId>\n            <scope>test</scope>\n        </dependency>\n\n        <dependency>\n            <groupId>org.junit.jupiter</groupId>\n            <artifactId>junit-jupiter-params</artifactId>\n            <scope>test</scope>\n        </dependency>\n\n        <dependency>\n            <groupId>org.mockito</groupId>\n            <artifactId>mockito-junit-jupiter</artifactId>\n            <scope>test</scope>\n        </dependency>\n\n        <!-- The prometheus simpleclient -->\n        <dependency>\n            <groupId>io.prometheus</groupId>\n            <artifactId>simpleclient</artifactId>\n            <version>${prometheus.simpleclient.version}</version>\n        </dependency>\n        <!-- Hotspot JVM metrics-->\n        <dependency>\n            <groupId>io.prometheus</groupId>\n            <artifactId>simpleclient_hotspot</artifactId>\n            <version>${prometheus.simpleclient.version}</version>\n        </dependency>\n        <!-- Exposition HTTPServer-->\n        <dependency>\n            <groupId>io.prometheus</groupId>\n            <artifactId>simpleclient_httpserver</artifactId>\n            <version>${prometheus.simpleclient.version}</version>\n        </dependency>\n\n    </dependencies>\n\n    <build>\n\n        <finalName>${project.artifactId}-${project.version}-${scala.version}</finalName>\n\n        <pluginManagement>\n            <plugins>\n\n                <!-- java/scala compiler (Start) -->\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-compiler-plugin</artifactId>\n                    <version>${maven-compiler-plugin.version}</version>\n                    <configuration>\n                        <source>${maven.compiler.source}</source>\n                        <target>${maven.compiler.target}</target>\n                        <forceJavacCompilerUse>true</forceJavacCompilerUse>\n                    </configuration>\n                </plugin>\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-surefire-plugin</artifactId>\n                    <version>${maven-surefire-plugin.version}</version>\n                    <configuration>\n                        <skip>${skipUT}</skip>\n                        <systemPropertyVariables>\n                            <jacoco-agent.destfile>${project.build.directory}/jacoco.exec</jacoco-agent.destfile>\n                        </systemPropertyVariables>\n                        <excludes>\n                            <exclude>**/*IT.java</exclude>\n                        </excludes>\n                        <classpathDependencyExcludes>\n                            <!--\n                                The logger provider & bridges declared under 'provided' scope should be explicitly excluded from testing as below.\n                            -->\n                            <classpathDependencyExclude>org.slf4j:slf4j-jdk14</classpathDependencyExclude>\n                            <classpathDependencyExclude>org.slf4j:slf4j-jcl</classpathDependencyExclude>\n                            <classpathDependencyExclude>org.slf4j:slf4j-nop</classpathDependencyExclude>\n                            <classpathDependencyExclude>org.slf4j:slf4j-simple</classpathDependencyExclude>\n                            <classpathDependencyExclude>org.slf4j:slf4j-reload4j</classpathDependencyExclude>\n                            <classpathDependencyExclude>org.slf4j:slf4j-log4j12</classpathDependencyExclude>\n                            <classpathDependencyExclude>org.slf4j:log4j-over-slf4j</classpathDependencyExclude>\n                            <classpathDependencyExclude>commons-logging:commons-logging</classpathDependencyExclude>\n                            <classpathDependencyExclude>log4j:log4j</classpathDependencyExclude>\n                            <classpathDependencyExclude>ch.qos.logback:logback-classic</classpathDependencyExclude>\n                            <classpathDependencyExclude>ch.qos.logback:logback-core</classpathDependencyExclude>\n                            <classpathDependencyExclude>org.apache.logging.log4j:log4j-to-slf4j</classpathDependencyExclude>\n                        </classpathDependencyExcludes>\n                    </configuration>\n                </plugin>\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-failsafe-plugin</artifactId>\n                    <version>${maven-failsafe-plugin.version}</version>\n                    <configuration>\n                        <skip>${skipIT}</skip>\n                    </configuration>\n                    <executions>\n                        <execution>\n                            <goals>\n                                <goal>integration-test</goal>\n                                <goal>verify</goal>\n                            </goals>\n                        </execution>\n                    </executions>\n                </plugin>\n\n                <plugin>\n                    <groupId>io.fabric8</groupId>\n                    <artifactId>docker-maven-plugin</artifactId>\n                    <version>${docker-maven-plugin.version}</version>\n                </plugin>\n\n                <!-- shade -->\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-shade-plugin</artifactId>\n                    <version>${maven-shade-plugin.version}</version>\n                    <configuration>\n                        <shadedArtifactAttached>false</shadedArtifactAttached>\n                        <createDependencyReducedPom>true</createDependencyReducedPom>\n                        <!-- Make sure the transitive dependencies are written to the generated pom under <dependencies> -->\n                        <promoteTransitiveDependencies>true</promoteTransitiveDependencies>\n                        <artifactSet>\n                            <excludes>\n                                <exclude>org.slf4j:*</exclude>\n                                <exclude>ch.qos.logback:*</exclude>\n                                <exclude>log4j:*</exclude>\n                                <exclude>org.apache.logging.log4j:*</exclude>\n                                <exclude>commons-logging:*</exclude>\n                            </excludes>\n                        </artifactSet>\n                        <filters>\n                            <filter>\n                                <artifact>*:*</artifact>\n                                <excludes>\n                                    <exclude>META-INF/*.SF</exclude>\n                                    <exclude>META-INF/*.DSA</exclude>\n                                    <exclude>META-INF/*.RSA</exclude>\n                                </excludes>\n                            </filter>\n                        </filters>\n                    </configuration>\n\n                    <executions>\n                        <execution>\n                            <goals>\n                                <goal>shade</goal>\n                            </goals>\n                            <phase>package</phase>\n                            <configuration>\n                                <transformers combine.children=\"append\">\n                                    <!-- The service transformer is needed to merge META-INF/services files -->\n                                    <transformer implementation=\"org.apache.maven.plugins.shade.resource.ServicesResourceTransformer\" />\n                                </transformers>\n                            </configuration>\n                        </execution>\n                    </executions>\n                </plugin>\n\n                <!-- assembly -->\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-assembly-plugin</artifactId>\n                    <version>${maven-assembly-plugin.version}</version>\n                </plugin>\n\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-source-plugin</artifactId>\n                    <version>${maven-source-plugin.version}</version>\n                    <executions>\n                        <execution>\n                            <id>attach-sources</id>\n                            <goals>\n                                <goal>jar-no-fork</goal>\n                            </goals>\n                        </execution>\n                    </executions>\n                </plugin>\n\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-javadoc-plugin</artifactId>\n                    <version>${maven-javadoc-plugin.version}</version>\n                    <configuration>\n                        <source>${maven.compiler.source}</source>\n                        <failOnError>false</failOnError>\n                        <aggregate>true</aggregate>\n                        <skip>${maven.javadoc.skip}</skip>\n                        <additionalparam>-Xdoclint:none</additionalparam>\n                    </configuration>\n                    <executions>\n                        <execution>\n                            <id>attach-javadocs</id>\n                            <goals>\n                                <goal>jar</goal>\n                            </goals>\n                        </execution>\n                    </executions>\n                </plugin>\n\n                <plugin>\n                    <groupId>org.codehaus.mojo</groupId>\n                    <artifactId>build-helper-maven-plugin</artifactId>\n                    <version>${maven-helper-plugin.version}</version>\n                </plugin>\n\n                <plugin>\n                    <groupId>pl.project13.maven</groupId>\n                    <artifactId>git-commit-id-plugin</artifactId>\n                    <version>${maven-git-commit-id-plugin.version}</version>\n                </plugin>\n\n                <plugin>\n                    <groupId>org.codehaus.mojo</groupId>\n                    <artifactId>license-maven-plugin</artifactId>\n                    <version>${maven-license-maven-plugin}</version>\n                    <configuration>\n                        <outputDirectory>${project.basedir}/seatunnel-dist/target/</outputDirectory>\n                        <thirdPartyFilename>THIRD-PARTY.txt</thirdPartyFilename>\n                        <sortArtifactByName>false</sortArtifactByName>\n                        <useMissingFile>false</useMissingFile>\n                        <addJavaLicenseAfterPackage>true</addJavaLicenseAfterPackage>\n                        <socketTimeout>30000</socketTimeout>\n                        <connectTimeout>30000</connectTimeout>\n                        <connectionRequestTimeout>30000</connectionRequestTimeout>\n                        <excludedScopes>test,provided</excludedScopes>\n                    </configuration>\n                </plugin>\n\n                <!-- make sure that flatten runs after shaded -->\n                <plugin>\n                    <groupId>org.codehaus.mojo</groupId>\n                    <artifactId>flatten-maven-plugin</artifactId>\n                    <version>${flatten-maven-plugin.version}</version>\n                    <configuration>\n                        <updatePomFile>true</updatePomFile>\n                        <flattenMode>resolveCiFriendliesOnly</flattenMode>\n                    </configuration>\n                    <executions>\n                        <execution>\n                            <id>flatten</id>\n                            <goals>\n                                <goal>flatten</goal>\n                            </goals>\n                            <phase>process-resources</phase>\n                        </execution>\n                        <execution>\n                            <id>flatten.clean</id>\n                            <goals>\n                                <goal>clean</goal>\n                            </goals>\n                            <phase>clean</phase>\n                        </execution>\n                    </executions>\n                </plugin>\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-dependency-plugin</artifactId>\n                    <version>${maven-dependency-plugin.version}</version>\n                    <configuration>\n                        <appendOutput>true</appendOutput>\n                    </configuration>\n                </plugin>\n            </plugins>\n        </pluginManagement>\n\n        <plugins>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-compiler-plugin</artifactId>\n                <configuration>\n                    <encoding>UTF-8</encoding>\n                </configuration>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-release-plugin</artifactId>\n                <configuration>\n                    <autoVersionSubmodules>true</autoVersionSubmodules>\n                    <tagNameFormat>@{project.version}</tagNameFormat>\n                    <tagBase>${project.version}</tagBase>\n                </configuration>\n                <dependencies>\n                    <dependency>\n                        <groupId>org.apache.maven.scm</groupId>\n                        <artifactId>maven-scm-provider-jgit</artifactId>\n                        <version>${maven-scm-provider-jgit.version}</version>\n                    </dependency>\n                </dependencies>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-surefire-plugin</artifactId>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-failsafe-plugin</artifactId>\n            </plugin>\n\n            <plugin>\n                <groupId>org.codehaus.mojo</groupId>\n                <artifactId>license-maven-plugin</artifactId>\n            </plugin>\n            <plugin>\n                <groupId>org.codehaus.mojo</groupId>\n                <artifactId>flatten-maven-plugin</artifactId>\n            </plugin>\n            <plugin>\n                <groupId>com.diffplug.spotless</groupId>\n                <artifactId>spotless-maven-plugin</artifactId>\n                <version>${spotless.version}</version>\n                <configuration>\n                    <skip>${skip.spotless}</skip>\n                    <java>\n                        <excludes>\n                            <exclude>src/main/java/org/apache/seatunnel/antlr4/generated/*.*</exclude>\n                        </excludes>\n                        <googleJavaFormat>\n                            <version>1.7</version>\n                            <style>AOSP</style>\n                        </googleJavaFormat>\n                        <removeUnusedImports />\n                        <formatAnnotations />\n                        <importOrder>\n                            <order>org.apache.seatunnel.shade,org.apache.seatunnel,org.apache,org,,javax,java,\\#</order>\n                        </importOrder>\n                        <replaceRegex>\n                            <name>Remove wildcard imports</name>\n                            <searchRegex>import\\s+(static)*\\s*[^\\*\\s]+\\*;(\\r\\n|\\r|\\n)</searchRegex>\n                            <replacement>$1</replacement>\n                        </replaceRegex>\n                        <replaceRegex>\n                            <name>Block powermock</name>\n                            <searchRegex>import\\s+org\\.powermock\\.[^\\*\\s]*(|\\*);(\\r\\n|\\r|\\n)</searchRegex>\n                            <replacement>$1</replacement>\n                        </replaceRegex>\n                        <replaceRegex>\n                            <name>Block jUnit4 imports</name>\n                            <searchRegex>import\\s+org\\.junit\\.[^jupiter][^\\*\\s]*(|\\*);(\\r\\n|\\r|\\n)</searchRegex>\n                            <replacement>$1</replacement>\n                        </replaceRegex>\n                    </java>\n                    <pom>\n                        <sortPom>\n                            <encoding>UTF-8</encoding>\n                            <nrOfIndentSpace>4</nrOfIndentSpace>\n                            <keepBlankLines>true</keepBlankLines>\n                            <indentBlankLines>false</indentBlankLines>\n                            <indentSchemaLocation>true</indentSchemaLocation>\n                            <spaceBeforeCloseEmptyElement>true</spaceBeforeCloseEmptyElement>\n                            <sortModules>false</sortModules>\n                            <sortExecutions>false</sortExecutions>\n                            <predefinedSortOrder>custom_1</predefinedSortOrder>\n                            <expandEmptyElements>false</expandEmptyElements>\n                            <sortProperties>false</sortProperties>\n                        </sortPom>\n                        <replace>\n                            <name>Leading blank line</name>\n                            <search>project</search>\n                            <replacement>project</replacement>\n                        </replace>\n                    </pom>\n                    <!-- disable markdown for now, it will change sidebar config in file-->\n                    <!--                    <markdown>-->\n                    <!--                        <includes>-->\n                    <!--                            <include>docs/**/*.md</include>-->\n                    <!--                        </includes>-->\n                    <!--                        <excludes>-->\n                    <!--                            <exclude>**/.github/**/*.md</exclude>-->\n                    <!--                        </excludes>-->\n                    <!--                        <flexmark />-->\n                    <!--                    </markdown>-->\n                    <upToDateChecking>\n                        <enabled>true</enabled>\n                    </upToDateChecking>\n                </configuration>\n                <executions>\n                    <execution>\n                        <id>spotless-check</id>\n                        <goals>\n                            <goal>check</goal>\n                        </goals>\n                        <phase>validate</phase>\n                    </execution>\n                </executions>\n            </plugin>\n        </plugins>\n    </build>\n\n    <url>https://github.com/apache/seatunnel</url>\n\n    <licenses>\n        <license>\n            <name>The Apache License, Version 2.0</name>\n            <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>\n        </license>\n    </licenses>\n\n    <mailingLists>\n        <mailingList>\n            <name>SeaTunnel Developer List</name>\n            <subscribe>dev-subscribe@seatunnel.apache.org</subscribe>\n            <unsubscribe>dev-unsubscribe@seatunnel.apache.org</unsubscribe>\n            <post>dev@seatunnel.apache.org</post>\n        </mailingList>\n        <mailingList>\n            <name>SeaTunnel Commits List</name>\n            <subscribe>commits-subscribe@seatunnel.apache.org</subscribe>\n            <unsubscribe>commits-unsubscribe@seatunnel.apache.org</unsubscribe>\n            <post>commits@seatunnel.apache.org</post>\n        </mailingList>\n    </mailingLists>\n\n    <scm>\n        <connection>scm:git:https://github.com/apache/seatunnel.git</connection>\n        <developerConnection>scm:git:https://github.com/apache/seatunnel.git</developerConnection>\n        <url>https://github.com/apache/seatunnel</url>\n        <tag>HEAD</tag>\n    </scm>\n\n    <issueManagement>\n        <system>GitHub</system>\n        <url>https://github.com/apache/seatunnel/issues</url>\n    </issueManagement>\n\n    <profiles>\n        <profile>\n            <id>release</id>\n            <activation>\n                <activeByDefault>true</activeByDefault>\n            </activation>\n            <modules>\n                <module>seatunnel-dist</module>\n            </modules>\n        </profile>\n        <!-- The ci need build without seatunnel-dist modules, so we need add a no_dist profile -->\n        <profile>\n            <id>ci</id>\n            <activation>\n                <activeByDefault>false</activeByDefault>\n            </activation>\n        </profile>\n    </profiles>\n\n</project>\n"
        },
        {
          "name": "release-note.md",
          "type": "blob",
          "size": 12.9970703125,
          "content": "# next-release\n\n## Bug fix\n\n### Core\n- [Core] [API] Fixed generic class loss for lists (#4421)\n- [Core] [API] Fix parse nested row data type key changed upper (#4459)\n- [Starter][Flink]Support transform-v2 for flink #3396\n- [Flink] Support flink 1.14.x #3963\n- [Core][Translation][Spark] Fix SeaTunnelRowConvertor fail to convert when schema contains row type (#5170)\n\n### Transformer\n- [Spark] Support transform-v2 for spark (#3409)\n- [ALL]Add FieldMapper Transform #3781\n- [All]Add JsonPath Transform #5633\n### Connectors\n- [Elasticsearch] Support https protocol & compatible with opensearch\n- [Hbase] Add hbase sink connector #4049\n- [Clickhouse] Fix clickhouse old version compatibility #5326\n- [Easysearch] Support INFINI Easysearch #5933\n- [Web3j] add Web3j source connector #6598\n### Formats\n- [Canal]Support read canal format message #3950\n- [Debezium]Support debezium canal format message #3981\n\n### Connector-V2\n\n- [Json-format] [Canal-Json] Fix json deserialize NPE (#4195)\n- [Connector-V2] [Jdbc] Field aliases are not supported in the query of jdbc source. (#4210)\n- [Connector-V2] [Jdbc] Fix connection failure caused by connection timeout. (#4322)\n- [Connector-V2] [Jdbc] Set default value to false of JdbcOption: generate_sink_sql (#4471)\n- [Connector-V2] [JDBC] Fix TiDBCatalog without open (#4718)\n- [Connector-V2] [Jdbc] Fix XA DataSource crash(Oracle/Dameng/SqlServer) (#4866)\n- [Connector-V2] [Pulsar] Fix the bug that can't consume messages all the time. (#4125)\n- [Connector-V2] [Eleasticsearch] Document description error (#4390)\n- [Connector-V2] [Eleasticsearch] Source deserializer error and inappropriate (#4233)\n- [Connector-V2] [Kafka] Fix KafkaProducer resources have never been released. (#4302)\n- [Connector-V2] [Kafka] Fix the permission problem caused by client.id. (#4246)\n- [Connector-V2] [Kafka] Fix KafkaConsumerThread exit caused by commit offset error. (#4379)\n- [Connector-V2] [Mongodb] Mongodb support cdc sink. (#4833)\n- [Connector-V2] [kafka] Fix the problem that the partition information can not be obtained when kafka is restored (#4764)\n- [Connector-V2] [SFTP] Fix incorrect exception handling logic (#4720)\n- [Connector-V2] [File] Fix read temp file (#4876)\n- [Connector-V2] [CDC Base] Solving the ConcurrentModificationException caused by snapshotState being modified concurrently. (#4877)\n- [Connector-V2] [Doris] update last checkpoint id when doing snapshot (#4881)\n- [Connector-v2] [kafka] Fix the short interval of pull data settings and revise the format (#4875)\n- [Connector-v2] [RabbitMQ] Fix reduplicate ack msg bug and code style (#4842)\n- [Connector-V2] [Jdbc] Fix the error of extracting primary key column in sink (#4815)\n- [Connector-V2] [Jdbc] Fix reconnect throw close statement exception (#4801)\n- [Connector-V2] [Jdbc] Fix sqlserver system table case sensitivity (#4806)\n- [Connector-v2] [File] Fix configuration file format and error comments (#4762)\n- [Connector-v2] [Jdbc] Fix oracle sql table identifier (#4754)\n- [Connector-v2] [Clickhouse] fix get clickhouse local table name with closing bracket from distributed table engineFull (#4710)\n- [Connector-v2] [CDC] Fix jdbc connection leak for mysql (#5037)\n- [Connector-v2] [File] Fix WriteStrategy parallel writing thread unsafe issue #5546\n- [Connector-v2] [File] Inject FileSystem to OrcWriteStrategy\n- [Connector-v2] [File] Support assign encoding for file source/sink (#5973)\n- [Connector-v2] [Mongodb] Support to convert to double from numeric type that mongodb saved it as numeric internally (#6997)\n- [Connector-v2] [Redis] Using scan replace keys operation command,support batchWrite in single mode(#7030,#7085)\n- [Connector-V2] [Clickhouse] Add a new optional configuration `clickhouse.config` to the source connector of ClickHouse (#7143)\n- [Connector-V2] [Redis] Redis scan command supports versions 3, 4, 5, 6, 7 (#7666)\n\n### Zeta(ST-Engine)\n\n- [Zeta] Fix LogicalDagGeneratorTest testcase (#4401)\n- [Zeta] Fix MultipleTableJobConfigParser parse only one transform (#4412)\n- [Zeta] Fix missing common plugin jars (#4448)\n- [Zeta] Fix handleCheckpointError be called while checkpoint already complete (#4442)\n- [Zeta] Fix job error message is not right bug (#4463)\n- [Zeta] Fix finding TaskGroup deployment node bug (#4449)\n- [Zeta] Fix the bug of conf (#4488)\n- [Zeta] Fix Connector load logic from zeta (#4510)\n- [Zeta] Fix conflict dependency of hadoop-hdfs (#4509)\n- [Zeta] Fix TaskExecutionService synchronized lock will not release (#4886)\n- [Zeta] Fix TaskExecutionService will return not active ExecutionContext (#4869)\n- [Zeta] Fix deploy operation timeout but task already finished bug (#4867)\n- [Zeta] Fix restoreComplete Future can't be completed when cancel task (#4863)\n- [Zeta] Fix IMap operation timeout bug (#4859)\n- [Zeta] fix pipeline state not right bug (#4823)\n- [Zeta] Fix the incorrect setting of transform parallelism (#4814)\n- [Zeta] Fix master active bug (#4855)\n- [Zeta] Fix completePendingCheckpoint concurrent action (#4854)\n- [Zeta] Fix engine runtime error (#4850)\n- [Zeta] Fix TaskGroupContext always hold classloader so classloader can't recycle (#4849)\n- [Zeta] Fix task `notifyTaskStatusToMaster` failed when job not running or failed before run (#4847)\n- [Zeta] Fix cpu load problem (#4828)\n- [zeta] Fix the deadlock issue with JDBC driver loading (#4878)\n- [zeta] dynamically replace the value of the variable at runtime (#4950)\n- [Zeta] Add from_unixtime function (#5462)\n- [zeta] Fix CDC task restore throw NPE (#5507)\n- [Zeta] Fix a checkpoint storage document with OSS (#7507)\n\n### E2E\n\n- [E2E] [Kafka] Fix kafka e2e testcase (#4520)\n- [Container Version] Fix risk of unreproducible test cases #4591\n- [E2e] [Mysql-cdc] Removing the excess MySqlIncrementalSourceIT e2e reduces the CI time (#4738)\n- [E2E] [Common] Update test container version of seatunnel engine (#5323)\n- [E2E] [Jdbc] Fix not remove docker image after test finish on jdbc suite (#5586)\n\n## Improve\n\n- [Improve][Connector-V2][Jdbc-Source] Support for Decimal types as splict keys (#4634)\n\n### Core\n\n- [Core] [Spark] Push transform operation from Spark Driver to Executors (#4503)\n- [Core] [Starter] Optimize code structure & remove redundant code (#4525)\n- [Core] [Translation] [Flink] Optimize code structure & remove redundant code (#4527)\n- [Core] [Starter] Add check of sink and source config to avoid null pointer exception. (#4734)\n- [Core] [Flink] Remove useless stage type related codes. (#5650)\n\n### Formats\n\n- [Json] Remove assert key word. (#5919)\n- [Formats] Replace CommonErrorCodeDeprecated.JSON_OPERATION_FAILED. (#5948)\n- [Formats] Refactor exception catch for `ignoreParseErrors`. (#6065)\n\n### Connector-V2\n\n- [Connector-V2] [CDC] Improve startup.mode/stop.mode options (#4360)\n- [Connector-V2] [CDC] Optimize jdbc fetch-size options (#4352)\n- [Connector-V2] [CDC] Fix chunk start/end parameter type error (#4777)\n- [Connector-V2] [SQLServer] Fix sqlserver catalog (#4441)\n- [Connector-V2] [StarRocks] Improve StarRocks Serialize Error Message (#4458)\n- [Connector-V2] [Jdbc] add the log for sql and update some style (#4475)\n- [Connector-V2] [Jdbc] Fix the table name is not automatically obtained when multiple tables (#4514)\n- [Connector-V2] [S3 & Kafka] Delete unavailable S3 & Kafka Catalogs (#4477)\n- [Connector-V2] [Pulsar] Support Canal Format\n- [Connector-V2] [CDC base] Implement Sample-based Sharding Strategy with Configurable Sampling Rate (#4856)\n- [Connector-V2] [SelectDB] Add a jobId to the selectDB label to distinguish between tasks (#4864)\n- [Connector-V2] [Doris] Add a jobId to the doris label to distinguish between tasks (#4839) (#4853)\n- [Connector-v2] [Mongodb]Refactor mongodb connector (#4620)\n- [Connector-v2] [Jdbc] Populate primary key when jdbc sink is created using CatalogTable (#4755)\n- [Connector-v2] [Neo4j] Supports neo4j sink batch write mode (#4835)\n- [Transform-V2] Optimize SQL Transform package and Fix Spark type conversion bug of transform (#4490)\n- [Connector-V2] [Common] Remove assert key word (#5915)\n- [Connector-V2] Replace CommonErrorCodeDeprecated.JSON_OPERATION_FAILED. (#5978)\n\n### CI\n\n- [CI] Fix error repository name in ci config files (#4795)\n- [CI][E2E][Zeta] Increase Zeta checkpoint timeout to avoid connector-file-sftp-e2e failed frequently (#5339)\n\n### Zeta(ST-Engine)\n\n- [Zeta] Support run the server through daemon mode (#4161)\n- [Zeta] Change ClassLoader To Improve the SDK compatibility of the client (#4447)\n- [Zeta] Client Support Async Submit Job (#4456)\n- [Zeta] Add more detailed log output. (#4446)\n- [Zeta] Improve seatunnel-cluster.sh (#4435)\n- [Zeta] Reduce CPU Cost When Task Not Ready (#4479)\n- [Zeta] Add parser log (#4485)\n- [Zeta] Remove redundant code (#4489)\n- [Zeta] Remove redundancy code in validateSQL (#4506)\n- [Zeta] Improve JobMetrics fetch performance (#4467)\n- [Zeta] Reduce the operation count of imap_running_job_metrics (#4861)\n- [Zeta] Speed up listAllJob function (#4852)\n- [Zeta] async execute checkpoint trigger and other block method (#4846)\n- [Zeta] Reduce the number of IMAPs used by checkpointIdCounter (#4832)\n- [Zeta] Cancel pipeline add retry to avoid cancel failed. (#4792)\n- [Zeta] Improve Zeta operation max count and ignore NPE (#4787)\n- [Zeta] Remove serialize(deserialize) cost when use shuffle action (#4722)\n- [zeta] Checkpoint exception status messages exclude state data (#5547)\n- [Zeta] Remove assert key words (#5947)\n\n## Feature\n\n### Core\n\n- [Core] [API] Support convert strings as List<T> option (#4362)\n- [Core] [API] Add copy method to Catalog codes (#4414)\n- [Core] [API] Add options check before create source and sink and transform in FactoryUtil (#4424)\n- [Core] [Shade] Add guava shade module (#4358)\n- [Core] [Spark] Support SeaTunnel Time Type (#5188)\n- [Core] [Flink] Support Decimal Type with configurable precision and scale (#5419)\n- [Core] [API] Support hocon style declare row type in generic type (#6187)\n\n### Connector-V2\n\n- [Connector-V2] [CDC] [SQLServer] Support multi-table read (#4377)\n- [Connector-V2] [Kafka] Kafka source supports data deserialization failure skipping (#4364)\n- [Connector-V2] [Jdbc] [TiDB] Add TiDB catalog (#4438)\n- [Connector-V2] [File] Add file excel sink and source (#4164)\n- [Connector-V2] [FILE-OBS] Add Huawei Cloud OBS connector (#4577)\n- [Connector-v2] [Snowflake] Add Snowflake Source&Sink connector (#4470)\n- [Connector-V2] [Pular] support read format for pulsar (#4111)\n- [Connector-V2] [Paimon] Introduce paimon connector (#4178)\n- [Connector V2] [Cassandra] Expose configurable options in Cassandra (#3681)\n- [Connector V2] [Jdbc] Supports GEOMETRY data type for PostgreSQL (#4673)\n- [Connector V2] [Jdbc] Supports Kingbase database (#4803)\n- [Transform-V2] Add UDF SPI and an example implement for SQL Transform plugin (#4392)\n- [Transform-V2] Support copy field list (#4404)\n- [Transform-V2] Add support CatalogTable for FieldMapperTransform (#4423)\n- [Transform-V2] Add CatalogTable support for ReplaceTransform (#4411)\n- [Transform-V2] Add Catalog support for FilterRowKindTransform (#4420)\n- [Transform-V2] Add support CatalogTable for FilterFieldTransform (#4422)\n- [Transform-V2] Add catalog support for SQL Transform plugin (#4819)\n- [Connector-V2] [Assert] Support check the precision and scale of Decimal type (#6110)\n- [Connector-V2] [Assert] Support field type assert and field value equality assert for full data types (#6275)\n- [Connector-V2] [Iceberg] Support iceberg sink #6198\n- [Connector-V2] [FILE-OBS] Add Huawei Cloud OBS connector #4578\n- [Connector-V2] [ElasticsSource] Source support multiSource (#6730)\n\n### Zeta(ST-Engine)\n\n- [Zeta] Support for mixing Factory and Plugin SPI (#4359)\n- [Zeta] Add get running job info by jobId rest api (#4140)\n- [Zeta] Add REST API To Get System Monitoring Information (#4315)\n- [Transform V2 & Zeta] Make SplitTransform Support CatalogTable And CatalogTable Evolution (#4396)\n- [Zeta] Move driver into lib directory and change operation count (#4845)\n- [Zeta] Add Metaspace size default value to config file (#4848)\n- [Zeta] Reduce the frequency of fetching data from imap (#4851)\n- [Zeta] Add OSS support for Imap storage to cluster-mode type (#4683)\n- [Zeta] Improve local mode startup request ports (#4660)\n\n## Docs \n\n- [Docs] Optimizes part of the Doris and SelectDB connector documentation (#4365)\n- [Docs] Fix docs code style (#4368)\n- [Docs] Update jdbc doc and kafka doc (#4380)\n- [Docs] Fix max_retries default value is 0. (#4383)\n- [Docs] Fix markdown syntax (#4426)\n- [Docs] Fix Kafka Doc Error Config Key \"kafka.\" (#4427)\n- [Docs] Add Transform to Quick Start v2 (#4436)\n- [Docs] Fix Dockerfile and seatunnel-flink.yaml in Set Up with Kubernetes (#4788)\n- [Docs] Fix Mysql sink format doc (#4800)\n- [Docs] Add the generate sink sql parameter for the jdbc sink document (#4797)\n- [Docs] Add the generate sink sql parameter And example (#4769)\n- [Docs] Redshift add defaultRowFetchSize (#4616)\n- [Docs] Refactor connector-v2 docs using unified format Mysql (#4590)\n- [Docs] Add Value types in Java to Schema features (#5087)\n- [Docs] Replace username by user in the options of FtpFile (#5421)\n- [Docs] Add how to configure logging related parameters of SeaTunnel-E2E Test (#5589)\n- [Docs] Remove redundant double quotation mark from an example code (#5845)\n- [Docs] Add Hive JDBC reference value (#5882)\n"
        },
        {
          "name": "seatunnel-api",
          "type": "tree",
          "content": null
        },
        {
          "name": "seatunnel-ci-tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "seatunnel-common",
          "type": "tree",
          "content": null
        },
        {
          "name": "seatunnel-config",
          "type": "tree",
          "content": null
        },
        {
          "name": "seatunnel-connectors-v2",
          "type": "tree",
          "content": null
        },
        {
          "name": "seatunnel-core",
          "type": "tree",
          "content": null
        },
        {
          "name": "seatunnel-dist",
          "type": "tree",
          "content": null
        },
        {
          "name": "seatunnel-e2e",
          "type": "tree",
          "content": null
        },
        {
          "name": "seatunnel-engine",
          "type": "tree",
          "content": null
        },
        {
          "name": "seatunnel-examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "seatunnel-formats",
          "type": "tree",
          "content": null
        },
        {
          "name": "seatunnel-plugin-discovery",
          "type": "tree",
          "content": null
        },
        {
          "name": "seatunnel-shade",
          "type": "tree",
          "content": null
        },
        {
          "name": "seatunnel-transforms-v2",
          "type": "tree",
          "content": null
        },
        {
          "name": "seatunnel-translation",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}