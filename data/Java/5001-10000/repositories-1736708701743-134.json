{
  "metadata": {
    "timestamp": 1736708701743,
    "page": 134,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "NanoHttpd/nanohttpd",
      "stars": 6992,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1689453125,
          "content": "out\nbuild\ntarget\n\n*.iml\n*.ipr\n*.iws\n*.class\n\n.idea\n.classpath\n.project\n.gradle\ngradle/\ngradlew\ngradlew.bat\n\n# Vim Backup/Swap Files\n*~\n.swp\n.*.swp\n\n/.settings/\n/LICENSE.txt\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.939453125,
          "content": "language: java\njdk:\n- openjdk7\n\nbefore_install:\n  - cat ~/.m2/settings.xml\n  - rm  ~/.m2/settings.xml\n\ninstall:\n  - mvn install -DskipTests=true\n\nscript:\n    - mvn test; export MAVEN_RESULT=$?\n    - if [ \"$MAVEN_RESULT\" -ne 0 ]; then exit 1; fi\n    - if [ \"$TRAVIS_BRANCH\" = \"master\" -a \"$TRAVIS_PULL_REQUEST\" = \"false\" ]; then mvn clean deploy --quiet --settings settings.xml; fi\n\nafter_success:\n  - mvn clean test jacoco:report coveralls:report\n  \n \nnotifications:\n  email:\n    - richard.vannieuwenhoven@adesso.at\n    - elonen@iki.fi\n    - diogo.duarte@techie.com\n    \nenv:\n global:\n  - secure: \"OtD0z3y4/OjSzg8irVD8v/u0TElcw8AiCCXb7a0UQEnTpGxcf5DOdkvHv0hF4xjHKFtlMMHxevW+a4C4NuFR8it8ZJ/i2m24reB28JicDcRQY9nwV/BR/T08CRG9KDz5EuTHgfPJDF0y+5MiVNwJVhHFviBWKuXyIuYouJ5IHgc=\"\n  - secure: \"tgTVycNLwYDM3U0EVK1TkffylQHfZihvSDC9QoZEo+wz9aBBLoAtUJP7DWltRQFOkfTeGltGHEfGM2/qkIG6Wz+hNFG/fveHqyI01JWXc64d7yBm7agaCP5uTtt2wjaZ7ZK5Mps5QoufblYu+j9gb2v31t9IdsJ9PUs0+wgE/WU=\"\n  \n"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 1.5185546875,
          "content": "Copyright (c) 2012-2013 by Paul S. Hawke, 2001,2005-2013 by Jarno Elonen, 2010 by Konstantinos Togias\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n\n* Neither the name of the NanoHttpd organization nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 11.29296875,
          "content": "## NanoHTTPD – a tiny web server in Java\n\n*NanoHTTPD* is a light-weight HTTP server designed for embedding in other applications, released under a Modified BSD licence.\n\nIt is being developed at Github and uses Apache Maven for builds & unit testing:\n\n * Build status: [![Build Status](https://api.travis-ci.org/NanoHttpd/nanohttpd.png)](https://travis-ci.org/NanoHttpd/nanohttpd)\n * Coverage Status: [![Coverage Status](https://coveralls.io/repos/NanoHttpd/nanohttpd/badge.svg)](https://coveralls.io/r/NanoHttpd/nanohttpd)\n * Current central released version: [![Maven Central](https://maven-badges.herokuapp.com/maven-central/org.nanohttpd/nanohttpd/badge.svg)](https://maven-badges.herokuapp.com/maven-central/org.nanohttpd/nanohttpd)\n\n## Quickstart\n\nWe'll create a custom HTTP server project using Maven for build/dep system. This tutorial assumes you are using a Unix variant and a shell. First, install Maven and Java SDK if not already installed. Then run:\n\n    mvn compile\n    mvn exec:java -pl webserver -Dexec.mainClass=\"org.nanohttpd.webserver.SimpleWebServer\"\n    \nYou should now have a HTTP file server running on <http://localhost:8080/>.\n\n### Custom web app\n\nLet's raise the bar and build a custom web application next:\n\n    mvn archetype:generate -DgroupId=com.example -DartifactId=myHellopApp -DinteractiveMode=false\n    cd myHellopApp\n    \nEdit `pom.xml`, and add this between \\<dependencies\\>:\n \n\t<dependency>\n\t\t<groupId>org.nanohttpd</groupId> <!-- <groupId>com.nanohttpd</groupId> for 2.1.0 and earlier -->\n\t\t<artifactId>nanohttpd</artifactId>\n\t\t<version>2.2.0</version>\n\t</dependency>\n\t\nEdit `src/main/java/com/example/App.java` and replace it with:\n```java\n    package com.example;\n    \n    import java.io.IOException;\n    import java.util.Map;\n    \n    import fi.iki.elonen.NanoHTTPD;\n    // NOTE: If you're using NanoHTTPD >= 3.0.0 the namespace is different,\n    //       instead of the above import use the following:\n\t// import org.nanohttpd.NanoHTTPD;\n    \n    public class App extends NanoHTTPD {\n    \n        public App() throws IOException {\n            super(8080);\n            start(NanoHTTPD.SOCKET_READ_TIMEOUT, false);\n            System.out.println(\"\\nRunning! Point your browsers to http://localhost:8080/ \\n\");\n        }\n    \n        public static void main(String[] args) {\n            try {\n                new App();\n            } catch (IOException ioe) {\n                System.err.println(\"Couldn't start server:\\n\" + ioe);\n            }\n        }\n    \n        @Override\n        public Response serve(IHTTPSession session) {\n            String msg = \"<html><body><h1>Hello server</h1>\\n\";\n            Map<String, String> parms = session.getParms();\n            if (parms.get(\"username\") == null) {\n                msg += \"<form action='?' method='get'>\\n  <p>Your name: <input type='text' name='username'></p>\\n\" + \"</form>\\n\";\n            } else {\n                msg += \"<p>Hello, \" + parms.get(\"username\") + \"!</p>\";\n            }\n            return newFixedLengthResponse(msg + \"</body></html>\\n\");\n        }\n    }\n```\n\nCompile and run the server:\n \n    mvn compile\n    mvn exec:java -Dexec.mainClass=\"com.example.App\"\n    \nIf it started ok, point your browser at <http://localhost:8080/> and enjoy a web server that asks your name and replies with a greeting. \n\n### Nanolets\n\nNanolets are like servlets only that they have a extremely low profile. They offer an easy to use system for a more complex server application.\nThis text has to be extended with an example, so for now take a look at the unit tests for the usage. <https://github.com/NanoHttpd/nanohttpd/blob/master/nanolets/src/test/java/org/nanohttpd/junit/router/AppNanolets.java>\n\n## Status\n\nWe are currently in the process of stabilizing NanoHTTPD from the many pull requests and feature requests that were integrated over the last few months. The next release will come soon, and there will not be any more \"intended\" major changes before the next release. If you want to use the bleeding edge version, you can clone it from Github, or get it from sonatype.org (see \"Maven dependencies / Living on the edge\" below).\n\n## Project structure\n\nNanoHTTPD project currently consist of four parts:\n\n * `/core` – Fully functional HTTP(s) server consisting of one (1) Java file, ready to be customized/inherited for your own project.\n\n * `/samples` – Simple examples on how to customize NanoHTTPD. See *HelloServer.java* for a killer app that greets you enthusiastically!\n\n * `/websocket` – Websocket implementation, also in a single Java file. Depends on core.\n\n * `/webserver` – Standalone file server. Run & enjoy. A popular use seems to be serving files out off an Android device.\n\n * `/nanolets` – Standalone nano app server, giving a servlet like system to the implementor.\n\n * `/fileupload` – integration of the apache common file upload library.\n\n## Features\n### Core\n* Only one Java file, providing HTTP 1.1 support.\n* No fixed config files, logging, authorization etc. (Implement by yourself if you need them. Errors are passed to java.util.logging, though.)\n* Support for HTTPS (SSL).\n* Basic support for cookies.\n* Supports parameter parsing of GET and POST methods.\n* Some built-in support for HEAD, POST and DELETE requests. You can easily implement/customize any HTTP method, though.\n* Supports file upload. Uses memory for small uploads, temp files for large ones.\n* Never caches anything.\n* Does not limit bandwidth, request time or simultaneous connections by default.\n* All header names are converted to lower case so they don't vary between browsers/clients.\n* Persistent connections (Connection \"keep-alive\") support allowing multiple requests to be served over a single socket connection.\n\n### Websocket\n* Tested on Firefox, Chrome and IE.\n\n### Webserver\n* Default code serves files and shows (prints on console) all HTTP parameters and headers.\n* Supports both dynamic content and file serving.\n* File server supports directory listing, `index.html` and `index.htm`.\n* File server supports partial content (streaming & continue download).\n* File server supports ETags.\n* File server does the 301 redirection trick for directories without `/`.\n* File server serves also very long files without memory overhead.\n* Contains a built-in list of most common MIME types.\n* Runtime extension support (extensions that serve particular MIME types) - example extension that serves Markdown formatted files. Simply including an extension JAR in the webserver classpath is enough for the extension to be loaded.\n* Simple [CORS](https://en.wikipedia.org/wiki/Cross-origin_resource_sharing) support via `--cors` parameter\n  * by default serves `Access-Control-Allow-Headers: origin,accept,content-type`\n  * possibility to set `Access-Control-Allow-Headers` by setting System property: `AccessControlAllowHeader`\n  * _example: _ `-DAccessControlAllowHeader=origin,accept,content-type,Authorization`\n  * possible values:\n      * `--cors`: activates CORS support, `Access-Control-Allow-Origin` will be set to `*`.\n      * `--cors=some_value`: `Access-Control-Allow-Origin` will be set to `some_value`. \n\n**_CORS argument examples_**\n\n\n* `--cors=http://appOne.company.com`\n* `--cors=\"http://appOne.company.com, http://appTwo.company.com\"`: note the double quotes so that the two URLs are considered part of a single argument.\n\n## Maven dependencies\n\nNanoHTTPD is a Maven based project and deployed to central. Most development environments have means to access the central repository. The coordinates to use in Maven are: \n\n\t<dependencies>\n\t\t<dependency>\n\t\t\t<groupId>org.nanohttpd</groupId> <!-- <groupId>com.nanohttpd</groupId> for 2.1.0 and earlier -->\n\t\t\t<artifactId>nanohttpd</artifactId>\n\t\t\t<version>CURRENT_VERSION</version>\n\t\t</dependency>\n\t</dependencies>\n\n(Replace `CURRENT_VERSION` with whatever is reported latest at <http://nanohttpd.org/>.)\n\nThe coordinates for your development environment should correspond to these. When looking for an older version take care because we switched groupId from *com.nanohttpd* to *org.nanohttpd* in mid 2015.\n\nNext it depends what you are using NanoHTTPD for, there are three main usages.\n\n## Gradle dependencies\n\nIn gradle you can use NanoHTTPD the same way because gradle accesses the same central repository:\n\n\tdependencies {\n\t\truntime(\n\t\t\t[group: 'org.nanohttpd', name: 'nanohttpd', version: 'CURRENT_VERSION'],\n\t\t)\n\t}\n\n(Replace `CURRENT_VERSION` with whatever is reported latest at <http://nanohttpd.org/>.)\n\nJust replace the name with the artifact id of the module you want to use and gradle will find it for you. \n\n### Develop your own specialized HTTP service\n\nFor a specialized HTTP (HTTPS) service you can use the module with artifactId *nanohttpd*.\n\n\t\t<dependency>\n\t\t\t<groupId>org.nanohttpd</groupId> <!-- <groupId>com.nanohttpd</groupId> for 2.1.0 and earlier -->\n\t\t\t<artifactId>nanohttpd</artifactId>\n\t\t\t<version>CURRENT_VERSION</version>\n\t\t</dependency>\n\t\t\nHere you write your own subclass of *org.nanohttpd.NanoHTTPD* to configure and to serve the requests.\n  \n### Develop a websocket based service    \n\nFor a specialized websocket service you can use the module with artifactId *nanohttpd-websocket*.\n\n\t\t<dependency>\n\t\t\t<groupId>org.nanohttpd</groupId> <!-- <groupId>com.nanohttpd</groupId> for 2.1.0 and earlier -->\n\t\t\t<artifactId>nanohttpd-websocket</artifactId>\n\t\t\t<version>CURRENT_VERSION</version>\n\t\t</dependency>\n\nHere you write your own subclass of *org.nanohttpd.NanoWebSocketServer* to configure and to serve the websocket requests. A small standard echo example is included as *org.nanohttpd.samples.echo.DebugWebSocketServer*. You can use it as a starting point to implement your own services.\n\n### Develop a custom HTTP file server    \n\nFor a more classic approach, perhaps to just create a HTTP server serving mostly service files from your disk, you can use the module with artifactId *nanohttpd-webserver*.\n\n\t\t<dependency>\n\t\t\t<groupId>org.nanohttpd</groupId>\n\t\t\t<artifactId>nanohttpd-webserver</artifactId>\n\t\t\t<version>CURRENT_VERSION</version>\n\t\t</dependency>\n\nThe included class *org.nanohttpd.SimpleWebServer* is intended to be used as a starting point for your own implementation but it also can be used as is. Starting the class as is will start a HTTP server on port 8080 and publishing the current directory.\n\n### Living on the edge\n\nThe latest Github master version can be fetched through sonatype.org:\n\n\t<dependencies>\n\t\t<dependency>\n\t\t\t<artifactId>nanohttpd</artifactId>\n\t\t\t<groupId>org.nanohttpd</groupId>\n\t\t\t<version>XXXXX-SNAPSHOT</version>\n\t\t</dependency>\n\t</dependencies>\n\t...\n\t<repositories>\n\t\t<repository>\n\t\t\t<id>sonatype-snapshots</id>\n\t\t\t<url>https://oss.sonatype.org/content/repositories/snapshots</url>\n\t\t\t<snapshots>\n\t\t\t\t<enabled>true</enabled>\n\t\t\t</snapshots>\n\t\t</repository>\n\t</repositories>\n\n### generating an self signed SSL certificate\n\nJust a hint how to generate a certificate for localhost.\n\n\tkeytool -genkey -keyalg RSA -alias selfsigned -keystore keystore.jks -storepass password -validity 360 -keysize 2048 -ext SAN=DNS:localhost,IP:127.0.0.1  -validity 9999\n\nThis will generate a keystore file named 'keystore.jks' with a self signed certificate for a host named localhost with the IP address 127.0.0.1 . Now\nyou can use:\n\n\tserver.makeSecure(NanoHTTPD.makeSSLSocketFactory(\"/keystore.jks\", \"password\".toCharArray()), null);\n\nBefore you start the server to make NanoHTTPD serve HTTPS connections, when you make sure 'keystore.jks' is in your classpath.\n \n-----\n\n*Thank you to everyone who has reported bugs and suggested fixes.*\n"
        },
        {
          "name": "build.gradle",
          "type": "blob",
          "size": 0.3720703125,
          "content": "allprojects {\n\tapply plugin: 'java'\n\tapply plugin: 'idea'\n\t\n\tgroup = 'org.nanohttpd'\n\tversion = '2.3.2-SNAPSHOT'\n}\n\nsubprojects {\n\tapply plugin: 'java'\n\tsourceCompatibility = 1.7\n\ttargetCompatibility = 1.7\n\t\n\trepositories {\n\t\tjcenter()\n\t}\n\t\n\tdependencies {\n\t\ttestCompile group: 'junit', name: 'junit', version: '4.12'\n\t}\n}\n\ntask wrapper(type: Wrapper) {\n\tgradleVersion = \"4.4.1\"\n}\n"
        },
        {
          "name": "core",
          "type": "tree",
          "content": null
        },
        {
          "name": "fileupload",
          "type": "tree",
          "content": null
        },
        {
          "name": "markdown-plugin",
          "type": "tree",
          "content": null
        },
        {
          "name": "nanohttpd release perform.launch",
          "type": "blob",
          "size": 1.15625,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<launchConfiguration type=\"org.eclipse.m2e.Maven2LaunchConfigurationType\">\n<booleanAttribute key=\"M2_DEBUG_OUTPUT\" value=\"false\"/>\n<stringAttribute key=\"M2_GOALS\" value=\"release:perform\"/>\n<booleanAttribute key=\"M2_NON_RECURSIVE\" value=\"false\"/>\n<booleanAttribute key=\"M2_OFFLINE\" value=\"false\"/>\n<stringAttribute key=\"M2_PROFILES\" value=\"\"/>\n<listAttribute key=\"M2_PROPERTIES\"/>\n<stringAttribute key=\"M2_RUNTIME\" value=\"apache-maven-3.3.3\"/>\n<booleanAttribute key=\"M2_SKIP_TESTS\" value=\"false\"/>\n<intAttribute key=\"M2_THREADS\" value=\"1\"/>\n<booleanAttribute key=\"M2_UPDATE_SNAPSHOTS\" value=\"false\"/>\n<stringAttribute key=\"M2_USER_SETTINGS\" value=\"\"/>\n<booleanAttribute key=\"M2_WORKSPACE_RESOLUTION\" value=\"false\"/>\n<mapAttribute key=\"org.eclipse.debug.core.environmentVariables\">\n<mapEntry key=\"JAVA_HOME\" value=\"/home/nir/java/jdk1.7.0_79\"/>\n</mapAttribute>\n<stringAttribute key=\"org.eclipse.jdt.launching.VM_ARGUMENTS\" value=\"-Dmaven.multiModuleProjectDirectory=/home/nir/java/apache-maven-3.3.3\"/>\n<stringAttribute key=\"org.eclipse.jdt.launching.WORKING_DIRECTORY\" value=\"${workspace_loc:/nanohttpd}\"/>\n</launchConfiguration>\n"
        },
        {
          "name": "nanohttpd release prepare.launch",
          "type": "blob",
          "size": 1.15625,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<launchConfiguration type=\"org.eclipse.m2e.Maven2LaunchConfigurationType\">\n<booleanAttribute key=\"M2_DEBUG_OUTPUT\" value=\"false\"/>\n<stringAttribute key=\"M2_GOALS\" value=\"release:prepare\"/>\n<booleanAttribute key=\"M2_NON_RECURSIVE\" value=\"false\"/>\n<booleanAttribute key=\"M2_OFFLINE\" value=\"false\"/>\n<stringAttribute key=\"M2_PROFILES\" value=\"\"/>\n<listAttribute key=\"M2_PROPERTIES\"/>\n<stringAttribute key=\"M2_RUNTIME\" value=\"apache-maven-3.3.3\"/>\n<booleanAttribute key=\"M2_SKIP_TESTS\" value=\"false\"/>\n<intAttribute key=\"M2_THREADS\" value=\"1\"/>\n<booleanAttribute key=\"M2_UPDATE_SNAPSHOTS\" value=\"false\"/>\n<stringAttribute key=\"M2_USER_SETTINGS\" value=\"\"/>\n<booleanAttribute key=\"M2_WORKSPACE_RESOLUTION\" value=\"false\"/>\n<mapAttribute key=\"org.eclipse.debug.core.environmentVariables\">\n<mapEntry key=\"JAVA_HOME\" value=\"/home/nir/java/jdk1.7.0_79\"/>\n</mapAttribute>\n<stringAttribute key=\"org.eclipse.jdt.launching.VM_ARGUMENTS\" value=\"-Dmaven.multiModuleProjectDirectory=/home/nir/java/apache-maven-3.3.3\"/>\n<stringAttribute key=\"org.eclipse.jdt.launching.WORKING_DIRECTORY\" value=\"${workspace_loc:/nanohttpd}\"/>\n</launchConfiguration>\n"
        },
        {
          "name": "nanolets",
          "type": "tree",
          "content": null
        },
        {
          "name": "pom.xml",
          "type": "blob",
          "size": 13.6767578125,
          "content": "<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n\t<modelVersion>4.0.0</modelVersion>\n\t<parent>\n\t\t<groupId>org.sonatype.oss</groupId>\n\t\t<artifactId>oss-parent</artifactId>\n\t\t<version>7</version>\n\t</parent>\n\t<groupId>org.nanohttpd</groupId>\n\t<artifactId>nanohttpd-project</artifactId>\n\t<version>2.3.2-SNAPSHOT</version>\n\t<packaging>pom</packaging>\n\t<name>NanoHttpd-Project</name>\n\t<description>NanoHttpd is a light-weight HTTP server designed for embedding in other applications.</description>\n\t<url>http://www.nanohttpd.org</url>\n\t<scm>\n\t\t<connection>scm:git:https://github.com/NanoHttpd/nanohttpd.git</connection>\n\t\t<developerConnection>scm:git:https://github.com/NanoHttpd/nanohttpd.git</developerConnection>\n\t\t<url>https://github.com/NanoHttpd/nanohttpd</url>\n\t\t<tag>HEAD</tag>\n\t</scm>\n\t<organization>\n\t\t<name>nanohttpd</name>\n\t</organization>\n\t<distributionManagement>\n\t\t<repository>\n\t\t\t<id>sonatype-nexus-staging</id>\n\t\t\t<name>nanohttpd sonytype Maven 2 repository</name>\n\t\t\t<url>https://oss.sonatype.org/service/local/staging/deploy/maven2</url>\n\t\t</repository>\n\t\t<snapshotRepository>\n\t\t\t<id>sonatype-nexus-staging</id>\n\t\t\t<name>nanohttpd sonytype Snapshot Maven 2 repository</name>\n\t\t\t<url>https://oss.sonatype.org/content/repositories/snapshots</url>\n\t\t</snapshotRepository>\n\t\t<site>\n\t\t\t<id>private-deploy</id>\n\t\t\t<name>private Project Site</name>\n\t\t\t<url>scp://nanohttpd.org:33333/home/nanohttpd/public_html</url>\n\t\t</site>\n\t</distributionManagement>\n\t<inceptionYear>2012</inceptionYear>\n\t<developers>\n\t\t<developer>\n\t\t\t<id>psh</id>\n\t\t\t<name>Paul Hawke</name>\n\t\t\t<url>http://www.linkedin.com/in/paulhawke</url>\n\t\t\t<roles>\n\t\t\t\t<role>Administrator</role>\n\t\t\t\t<role>Developer</role>\n\t\t\t</roles>\n\t\t\t<properties>\n\t\t\t\t<picUrl>https://avatars2.githubusercontent.com/u/407647</picUrl>\n\t\t\t</properties>\n\t\t</developer>\n\t\t<developer>\n\t\t\t<id>elonen</id>\n\t\t\t<name>Jarno Elonen</name>\n\t\t\t<email>elonen [at] iki [dot] fi</email>\n\t\t\t<roles>\n\t\t\t\t<role>Administrator</role>\n\t\t\t\t<role>Developer</role>\n\t\t\t</roles>\n\t\t\t<properties>\n\t\t\t\t<picUrl>https://avatars0.githubusercontent.com/u/2125766</picUrl>\n\t\t\t</properties>\n\t\t</developer>\n\t\t<developer>\n\t\t\t<id>ritchieGitHub</id>\n\t\t\t<name>Richard van Nieuwenhoven</name>\n\t\t\t<email>ritchie [at] gmx [dot] at</email>\n\t\t\t<roles>\n\t\t\t\t<role>Administrator</role>\n\t\t\t\t<role>Developer</role>\n\t\t\t</roles>\n\t\t\t<properties>\n\t\t\t\t<picUrl>http://www.gravatar.com/avatar/9e2c2e7aa94335b72952a4b2d56bfc89.png</picUrl>\n\t\t\t</properties>\n\t\t</developer>\n\t\t<developer>\n\t\t\t<id>LordFokas</id>\n\t\t\t<name>Diogo Duarte</name>\n\t\t\t<email>diogo.duarte [at] techie [dot] com</email>\n\t\t\t<roles>\n\t\t\t\t<role>Administrator</role>\n\t\t\t\t<role>Developer</role>\n\t\t\t</roles>\n\t\t\t<properties>\n\t\t\t\t<picUrl>https://avatars1.githubusercontent.com/u/3021352</picUrl>\n\t\t\t</properties>\n\t\t</developer>\n\t</developers>\n\t<issueManagement>\n\t\t<system>github</system>\n\t\t<url>https://github.com/NanoHttpd/nanohttpd/issues</url>\n\t</issueManagement>\n\t<modules>\n\t\t<module>core</module>\n\t\t<module>samples</module>\n\t\t<module>webserver</module>\n\t\t<module>websocket</module>\n\t\t<module>markdown-plugin</module>\n\t\t<module>nanolets</module>\n\t\t<module>fileupload</module>\n\t</modules>\n\t<licenses>\n\t\t<license>\n\t\t\t<name>The BSD 3-Clause License</name>\n\t\t\t<url>http://opensource.org/licenses/BSD-3-Clause</url>\n\t\t\t<distribution>repo</distribution>\n\t\t</license>\n\t</licenses>\n\t<build>\n\t\t<extensions>\n\t\t\t<extension>\n\t\t\t\t<groupId>org.apache.maven.wagon</groupId>\n\t\t\t\t<artifactId>wagon-ssh</artifactId>\n\t\t\t\t<version>2.7</version>\n\t\t\t</extension>\n\t\t</extensions>\n\n\t\t<plugins>\n\t\t\t<plugin>\n\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\n\t\t\t\t<artifactId>maven-compiler-plugin</artifactId>\n\t\t\t\t<version>3.3</version>\n\t\t\t\t<configuration>\n\t\t\t\t\t<source>1.7</source>\n\t\t\t\t\t<target>1.7</target>\n\t\t\t\t</configuration>\n\t\t\t</plugin>\n\t\t\t<plugin>\n\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\n\t\t\t\t<artifactId>maven-javadoc-plugin</artifactId>\n\t\t\t\t<version>2.10.1</version>\n\t\t\t\t<configuration>\n\t\t\t\t\t<aggregate>false</aggregate>\n\t\t\t\t\t<failOnError>false</failOnError>\n\t\t\t\t</configuration>\n\t\t\t\t<executions>\n\t\t\t\t\t<execution>\n\t\t\t\t\t\t<id>attach-javadocs</id>\n\t\t\t\t\t\t<goals>\n\t\t\t\t\t\t\t<goal>jar</goal>\n\t\t\t\t\t\t</goals>\n\t\t\t\t\t</execution>\n\t\t\t\t</executions>\n\t\t\t</plugin>\n\t\t\t<plugin>\n\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\n\t\t\t\t<artifactId>maven-release-plugin</artifactId>\n\t\t\t\t<version>2.5.1</version>\n\t\t\t\t<configuration>\n\t\t\t\t\t<mavenExecutorId>forked-path</mavenExecutorId>\n\t\t\t\t</configuration>\n\t\t\t</plugin>\n\t\t\t<plugin>\n\t\t\t\t<groupId>org.tinyjee.dim</groupId>\n\t\t\t\t<artifactId>doxia-include-macro</artifactId>\n\t\t\t\t<version>1.1</version>\n\t\t\t\t<executions>\n\t\t\t\t\t<execution>\n\t\t\t\t\t\t<id>initialize-doxia-include-macro</id>\n\t\t\t\t\t\t<phase>pre-site</phase>\n\t\t\t\t\t\t<goals>\n\t\t\t\t\t\t\t<goal>initialize</goal>\n\t\t\t\t\t\t</goals>\n\t\t\t\t\t</execution>\n\t\t\t\t</executions>\n\t\t\t</plugin>\n\t\t\t<plugin>\n\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\n\t\t\t\t<artifactId>maven-site-plugin</artifactId>\n\t\t\t\t<version>3.4</version>\n\t\t\t\t<configuration>\n\t\t\t\t\t<chmod>false</chmod>\n\t\t\t\t</configuration>\n\t\t\t\t<dependencies>\n\t\t\t\t\t<dependency>\n\t\t\t\t\t\t<groupId>org.apache.maven.wagon</groupId>\n\t\t\t\t\t\t<artifactId>wagon-ssh</artifactId>\n\t\t\t\t\t\t<version>2.7</version>\n\t\t\t\t\t</dependency>\n\t\t\t\t\t<dependency>\n\t\t\t\t\t\t<groupId>org.tinyjee.dim</groupId>\n\t\t\t\t\t\t<artifactId>doxia-include-macro</artifactId>\n\t\t\t\t\t\t<version>1.1</version>\n\t\t\t\t\t</dependency>\n\t\t\t\t\t<dependency>\n\t\t\t\t\t\t<groupId>net.ju-n.maven.doxia</groupId>\n\t\t\t\t\t\t<artifactId>doxia-module-markdown</artifactId>\n\t\t\t\t\t\t<version>1.0.0</version>\n\t\t\t\t\t</dependency>\n\t\t\t\t</dependencies>\n\t\t\t</plugin>\n\t\t\t<plugin>\n\t\t\t\t<groupId>org.codehaus.mojo</groupId>\n\t\t\t\t<artifactId>license-maven-plugin</artifactId>\n\t\t\t\t<version>1.7</version>\n\t\t\t\t<configuration>\n\t\t\t\t\t<verbose>false</verbose>\n\t\t\t\t</configuration>\n\t\t\t\t<executions>\n\t\t\t\t\t<execution>\n\t\t\t\t\t\t<id>first</id>\n\t\t\t\t\t\t<goals>\n\t\t\t\t\t\t\t<goal>update-file-header</goal>\n\t\t\t\t\t\t\t<goal>update-project-license</goal>\n\t\t\t\t\t\t</goals>\n\t\t\t\t\t\t<phase>process-sources</phase>\n\t\t\t\t\t\t<configuration>\n\t\t\t\t\t\t\t<licenseName>bsd_3</licenseName>\n\t\t\t\t\t\t\t<roots>\n\t\t\t\t\t\t\t\t<root>src/main/java</root>\n\t\t\t\t\t\t\t\t<root>src/test/java</root>\n\t\t\t\t\t\t\t</roots>\n\t\t\t\t\t\t</configuration>\n\t\t\t\t\t</execution>\n\t\t\t\t</executions>\n\t\t\t</plugin>\n\t\t\t<plugin>\n\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\n\t\t\t\t<artifactId>maven-surefire-plugin</artifactId>\n\t\t\t\t<version>2.18.1</version>\n\t\t\t\t<configuration>\n\t\t\t\t\t<forkCount>1</forkCount>\n\t\t\t\t\t<reuseForks>false</reuseForks>\n\t\t\t\t</configuration>\n\t\t\t</plugin>\n\t\t\t<plugin>\n\t\t\t\t<groupId>org.jacoco</groupId>\n\t\t\t\t<artifactId>jacoco-maven-plugin</artifactId>\n\t\t\t\t<version>0.7.4.201502262128</version>\n\t\t\t\t<executions>\n\t\t\t\t\t<execution>\n\t\t\t\t\t\t<id>default-prepare-agent</id>\n\t\t\t\t\t\t<goals>\n\t\t\t\t\t\t\t<goal>prepare-agent</goal>\n\t\t\t\t\t\t</goals>\n\t\t\t\t\t</execution>\n\t\t\t\t\t<execution>\n\t\t\t\t\t\t<id>default-report</id>\n\t\t\t\t\t\t<phase>prepare-package</phase>\n\t\t\t\t\t\t<goals>\n\t\t\t\t\t\t\t<goal>report</goal>\n\t\t\t\t\t\t</goals>\n\t\t\t\t\t</execution>\n\t\t\t\t\t<execution>\n\t\t\t\t\t\t<id>default-check</id>\n\t\t\t\t\t\t<goals>\n\t\t\t\t\t\t\t<goal>check</goal>\n\t\t\t\t\t\t</goals>\n\t\t\t\t\t\t<configuration>\n\t\t\t\t\t\t\t<rules>\n\t\t\t\t\t\t\t\t<rule>\n\t\t\t\t\t\t\t\t\t<element>BUNDLE</element>\n\t\t\t\t\t\t\t\t\t<limits>\n\t\t\t\t\t\t\t\t\t\t<limit>\n\t\t\t\t\t\t\t\t\t\t\t<counter>LINE</counter>\n\t\t\t\t\t\t\t\t\t\t\t<value>COVEREDRATIO</value>\n\t\t\t\t\t\t\t\t\t\t\t<minimum>${minimal.coverage}</minimum>\n\t\t\t\t\t\t\t\t\t\t</limit>\n\t\t\t\t\t\t\t\t\t</limits>\n\t\t\t\t\t\t\t\t</rule>\n\t\t\t\t\t\t\t</rules>\n\t\t\t\t\t\t</configuration>\n\t\t\t\t\t</execution>\n\t\t\t\t</executions>\n\t\t\t</plugin>\n\t\t</plugins>\n\t</build>\n\t<reporting>\n\t\t<plugins>\n\t\t\t<plugin>\n\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\n\t\t\t\t<artifactId>maven-project-info-reports-plugin</artifactId>\n\t\t\t\t<version>2.8</version>\n\t\t\t\t<configuration>\n\t\t\t\t\t<dependencyDetailsEnabled>false</dependencyDetailsEnabled>\n\t\t\t\t\t<dependencyLocationsEnabled>false</dependencyLocationsEnabled>\n\t\t\t\t</configuration>\n\t\t\t\t<reportSets>\n\t\t\t\t\t<reportSet>\n\t\t\t\t\t\t<reports>\n\t\t\t\t\t\t\t<report>index</report>\n\t\t\t\t\t\t\t<report>dependencies</report>\n\t\t\t\t\t\t\t<report>project-team</report>\n\t\t\t\t\t\t\t<report>mailing-list</report>\n\t\t\t\t\t\t\t<report>cim</report>\n\t\t\t\t\t\t\t<report>issue-tracking</report>\n\t\t\t\t\t\t\t<report>license</report>\n\t\t\t\t\t\t\t<report>scm</report>\n\t\t\t\t\t\t</reports>\n\t\t\t\t\t</reportSet>\n\t\t\t\t</reportSets>\n\t\t\t</plugin>\n\t\t\t<plugin>\n\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\n\t\t\t\t<artifactId>maven-javadoc-plugin</artifactId>\n\t\t\t\t<version>2.10.1</version>\n\t\t\t\t<configuration>\n\t\t\t\t\t<failOnError>false</failOnError>\n\t\t\t\t\t<aggregate>false</aggregate>\n\t\t\t\t</configuration>\n\t\t\t\t<reportSets>\n\t\t\t\t\t<reportSet><!-- by default, id = \"default\" -->\n\t\t\t\t\t\t<reports><!-- select non-aggregate reports -->\n\t\t\t\t\t\t\t<report>javadoc-no-fork</report>\n\t\t\t\t\t\t</reports>\n\t\t\t\t\t</reportSet>\n\t\t\t\t</reportSets>\n\t\t\t</plugin>\n\t\t\t<plugin>\n\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\n\t\t\t\t<artifactId>maven-jxr-plugin</artifactId>\n\t\t\t\t<version>2.4</version>\n\t\t\t\t<configuration>\n\t\t\t\t\t<linkJavadoc>true</linkJavadoc>\n\t\t\t\t\t<skip>${nanohttpd.nonjavamodule}</skip>\n\t\t\t\t</configuration>\n\t\t\t</plugin>\n\t\t\t<plugin>\n\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\n\t\t\t\t<artifactId>maven-pmd-plugin</artifactId>\n\t\t\t\t<version>3.2</version>\n\t\t\t\t<configuration>\n\t\t\t\t\t<linkXref>true</linkXref>\n\t\t\t\t\t<sourceEncoding>UTF-8</sourceEncoding>\n\t\t\t\t\t<targetJdk>1.7</targetJdk>\n\t\t\t\t\t<skipEmptyReport>false</skipEmptyReport>\n\t\t\t\t\t<minimumTokens>50</minimumTokens>\n\t\t\t\t</configuration>\n\t\t\t</plugin>\n\t\t\t<plugin>\n\t\t\t\t<groupId>org.codehaus.mojo</groupId>\n\t\t\t\t<artifactId>taglist-maven-plugin</artifactId>\n\t\t\t\t<version>2.4</version>\n\t\t\t</plugin>\n\t\t\t<plugin>\n\t\t\t\t<groupId>org.codehaus.mojo</groupId>\n\t\t\t\t<artifactId>findbugs-maven-plugin</artifactId>\n\t\t\t\t<version>3.0.0</version>\n\t\t\t</plugin>\n\t\t\t<plugin>\n\t\t\t\t<groupId>org.jacoco</groupId>\n\t\t\t\t<artifactId>jacoco-maven-plugin</artifactId>\n\t\t\t\t<version>0.7.4.201502262128</version>\n\t\t\t</plugin>\n\t\t</plugins>\n\t</reporting>\n\t<dependencies>\n\t\t<dependency>\n\t\t\t<groupId>junit</groupId>\n\t\t\t<artifactId>junit</artifactId>\n\t\t\t<version>4.12</version>\n\t\t\t<scope>test</scope>\n\t\t</dependency>\n\t</dependencies>\n\t<profiles>\n\t\t<profile>\n\t\t\t<id>release-sign-artifacts</id>\n\t\t\t<activation>\n\t\t\t\t<property>\n\t\t\t\t\t<name>performRelease</name>\n\t\t\t\t\t<value>true</value>\n\t\t\t\t</property>\n\t\t\t</activation>\n\t\t\t<build>\n\t\t\t\t<plugins>\n\t\t\t\t\t<plugin>\n\t\t\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\n\t\t\t\t\t\t<artifactId>maven-gpg-plugin</artifactId>\n\t\t\t\t\t\t<executions>\n\t\t\t\t\t\t\t<execution>\n\t\t\t\t\t\t\t\t<id>sign-artifacts</id>\n\t\t\t\t\t\t\t\t<phase>verify</phase>\n\t\t\t\t\t\t\t\t<goals>\n\t\t\t\t\t\t\t\t\t<goal>sign</goal>\n\t\t\t\t\t\t\t\t</goals>\n\t\t\t\t\t\t\t\t<!-- if the local user is not the key user use -Dgpg.keyname=XXXX -->\n\t\t\t\t\t\t\t</execution>\n\t\t\t\t\t\t</executions>\n\t\t\t\t\t</plugin>\n\t\t\t\t</plugins>\n\t\t\t</build>\n\t\t</profile>\n\t\t<profile>\n\t\t\t<id>java</id>\n\t\t\t<activation>\n\t\t\t\t<file>\n\t\t\t\t\t<exists>src/main/java</exists>\n\t\t\t\t</file>\n\t\t\t</activation>\n\t\t\t<build>\n\t\t\t\t<plugins>\n\t\t\t\t\t<plugin>\n\t\t\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\n\t\t\t\t\t\t<artifactId>maven-checkstyle-plugin</artifactId>\n\t\t\t\t\t\t<version>2.15</version>\n\t\t\t\t\t\t<configuration>\n\t\t\t\t\t\t\t<configLocation>${project.basedir}/../src/main/checkstyle/nanohttpd-style.xml</configLocation>\n\t\t\t\t\t\t\t<suppressionsLocation>${project.basedir}/../src/main/checkstyle/checkstyle-suppressions.xml</suppressionsLocation>\n\t\t\t\t\t\t\t<encoding>UTF-8</encoding>\n\t\t\t\t\t\t\t<consoleOutput>true</consoleOutput>\n\t\t\t\t\t\t\t<failsOnError>false</failsOnError>\n\t\t\t\t\t\t\t<linkXRef>true</linkXRef>\n\t\t\t\t\t\t</configuration>\n\t\t\t\t\t</plugin>\n\t\t\t\t\t<plugin>\n\t\t\t\t\t\t<groupId>com.googlecode.maven-java-formatter-plugin</groupId>\n\t\t\t\t\t\t<artifactId>maven-java-formatter-plugin</artifactId>\n\t\t\t\t\t\t<version>0.4</version>\n\t\t\t\t\t\t<executions>\n\t\t\t\t\t\t\t<execution>\n\t\t\t\t\t\t\t\t<goals>\n\t\t\t\t\t\t\t\t\t<goal>format</goal>\n\t\t\t\t\t\t\t\t</goals>\n\t\t\t\t\t\t\t</execution>\n\t\t\t\t\t\t</executions>\n\t\t\t\t\t\t<configuration>\n\t\t\t\t\t\t\t<configFile>${project.basedir}/../src/main/formatter/formatter.xml</configFile>\n\t\t\t\t\t\t\t<lineEnding>LF</lineEnding>\n\t\t\t\t\t\t</configuration>\n\t\t\t\t\t</plugin>\n\t\t\t\t</plugins>\n\t\t\t</build>\n\t\t\t<reporting>\n\t\t\t\t<plugins>\n\t\t\t\t\t<plugin>\n\t\t\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\n\t\t\t\t\t\t<artifactId>maven-checkstyle-plugin</artifactId>\n\t\t\t\t\t\t<version>2.15</version>\n\t\t\t\t\t\t<reportSets>\n\t\t\t\t\t\t\t<reportSet>\n\t\t\t\t\t\t\t\t<reports>\n\t\t\t\t\t\t\t\t\t<report>checkstyle</report>\n\t\t\t\t\t\t\t\t</reports>\n\t\t\t\t\t\t\t</reportSet>\n\t\t\t\t\t\t</reportSets>\n\t\t\t\t\t</plugin>\n\t\t\t\t</plugins>\n\t\t\t</reporting>\n\t\t</profile>\n\t\t<profile>\n\t\t\t<id>parent-build</id>\n\t\t\t<activation>\n\t\t\t\t<file>\n\t\t\t\t\t<exists>core/pom.xml</exists>\n\t\t\t\t</file>\n\t\t\t</activation>\n\t\t\t<build>\n\t\t\t\t<plugins>\n\t\t\t\t\t<plugin>\n\t\t\t\t\t\t<groupId>org.jacoco</groupId>\n\t\t\t\t\t\t<artifactId>jacoco-maven-plugin</artifactId>\n\t\t\t\t\t\t<version>0.7.4.201502262128</version>\n\t\t\t\t\t\t<executions>\n\t\t\t\t\t\t\t<execution>\n\t\t\t\t\t\t\t\t<id>merge-report</id>\n\t\t\t\t\t\t\t\t<phase>package</phase>\n\t\t\t\t\t\t\t\t<goals>\n\t\t\t\t\t\t\t\t\t<goal>merge</goal>\n\t\t\t\t\t\t\t\t</goals>\n\t\t\t\t\t\t\t</execution>\n\t\t\t\t\t\t</executions>\n\t\t\t\t\t\t<configuration>\n\t\t\t\t\t\t\t<fileSets>\n\t\t\t\t\t\t\t\t<fileSet>\n\t\t\t\t\t\t\t\t\t<directory>${project.basedir}/..</directory>\n\t\t\t\t\t\t\t\t\t<includes>\n\t\t\t\t\t\t\t\t\t\t<include>*.exec</include>\n\t\t\t\t\t\t\t\t\t</includes>\n\t\t\t\t\t\t\t\t</fileSet>\n\t\t\t\t\t\t\t</fileSets>\n\t\t\t\t\t\t</configuration>\n\t\t\t\t\t</plugin>\n\t\t\t\t\t<plugin>\n\t\t\t\t\t\t<groupId>org.eluder.coveralls</groupId>\n\t\t\t\t\t\t<artifactId>coveralls-maven-plugin</artifactId>\n\t\t\t\t\t\t<version>3.1.0</version>\n\t\t\t\t\t</plugin>\n\t\t\t\t</plugins>\n\t\t\t</build>\n\t\t</profile>\n\t\t<profile>\n\t\t\t<id>use 1.7 compiler</id>\n\t\t\t<activation>\n\t\t\t\t<file>\n\t\t\t\t\t<exists>/usr/lib/jvm/java-7-openjdk-amd64/bin/javac</exists>\n\t\t\t\t</file>\n\t\t\t</activation>\n\t\t\t<build>\n\t\t\t\t<plugins>\n\t\t\t\t\t<plugin>\n\t\t\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\n\t\t\t\t\t\t<artifactId>maven-compiler-plugin</artifactId>\n\t\t\t\t\t\t<version>3.3</version>\n\t\t\t\t\t\t<configuration>\n\t\t\t\t\t\t\t<source>1.7</source>\n\t\t\t\t\t\t\t<target>1.7</target>\n\t\t\t\t\t\t\t<verbose>true</verbose>\n\t\t\t\t\t\t\t<fork>true</fork>\n\t\t\t\t\t\t\t<executable>/usr/lib/jvm/java-7-openjdk-amd64/bin/javac</executable>\n\t\t\t\t\t\t</configuration>\n\t\t\t\t\t</plugin>\n\t\t\t\t</plugins>\n\t\t\t</build>\n\t\t</profile>\n\t</profiles>\n\t<properties>\n\t\t<minimal.coverage>0.77</minimal.coverage>\n\t</properties>\n</project>\n"
        },
        {
          "name": "relocation",
          "type": "tree",
          "content": null
        },
        {
          "name": "samples",
          "type": "tree",
          "content": null
        },
        {
          "name": "settings.gradle",
          "type": "blob",
          "size": 0.7763671875,
          "content": "rootProject.name = 'nanohttpd-project'\ninclude ':nanohttpd'\ninclude ':nanohttpd-samples'\ninclude ':nanohttpd-webserver'\ninclude ':nanohttpd-websocket'\ninclude ':nanohttpd-webserver-markdown-plugin'\ninclude ':nanohttpd-nanolets'\ninclude ':nanohttpd-apache-fileupload'\n\nproject(':nanohttpd').projectDir = \"$rootDir/core\" as File\nproject(':nanohttpd-samples').projectDir = \"$rootDir/samples\" as File\nproject(':nanohttpd-webserver').projectDir = \"$rootDir/webserver\" as File\nproject(':nanohttpd-websocket').projectDir = \"$rootDir/websocket\" as File\nproject(':nanohttpd-webserver-markdown-plugin').projectDir = \"$rootDir/markdown-plugin\" as File\nproject(':nanohttpd-nanolets').projectDir = \"$rootDir/nanolets\" as File\nproject(':nanohttpd-apache-fileupload').projectDir = \"$rootDir/fileupload\" as File"
        },
        {
          "name": "settings.xml",
          "type": "blob",
          "size": 0.267578125,
          "content": "<settings>\n\t<proxies>\n\t</proxies>\n\t<servers>\n\t\t<server>\n\t\t\t<id>sonatype-nexus-staging</id>\n\t\t\t<username>${env.CI_DEPLOY_USERNAME}</username>\n\t\t\t<password>${env.CI_DEPLOY_PASSWORD}</password>\n\t\t</server>\n\t</servers>\n\t<mirrors>\n\t</mirrors>\n\t<profiles>\n\t</profiles>\n</settings>"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "webserver",
          "type": "tree",
          "content": null
        },
        {
          "name": "websocket",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}