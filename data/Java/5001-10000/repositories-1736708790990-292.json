{
  "metadata": {
    "timestamp": 1736708790990,
    "page": 292,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "apache/dubbo-spring-boot-project",
      "stars": 5406,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.4853515625,
          "content": "# Compiled class file\n*.class\n\n# Log file\n*.log\n\n# BlueJ files\n*.ctxt\n\n# Mobile Tools for Java (J2ME)\n.mtj.tmp/\n\n# Package Files #\n*.war\n*.ear\n*.zip\n*.tar.gz\n*.rar\n\n# virtual machine crash logs, see http://www.java.com/en/download/help/error_hotspot.xml\nhs_err_pid*\n\n# eclipse ignore\n.settings/\n.project\n.classpath\n.factorypath\n\n# idea ignore\n.idea/\n*.ipr\n*.iml\n*.iws\ntarget\n\n# temp ignore\n*.log\n*.cache\n*.diff\n*.patch\n*.tmp\n\n# system ignore\n.DS_Store\nThumbs.db\n\n# Maven ignore\n.flattened-pom.xml\n"
        },
        {
          "name": ".mvn",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0908203125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "NOTICE",
          "type": "blob",
          "size": 0.1611328125,
          "content": "Apache Dubbo\nCopyright 2018-2021 The Apache Software Foundation\n\nThis product includes software developed at\nThe Apache Software Foundation (http://www.apache.org/)."
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 9.5400390625,
          "content": "# Apache Dubbo Spring Boot Project \n\n## This repo has been archived. All of the implements have been moved to [apache/dubbo](https://github.com/apache/dubbo).\n\n[![Build Status](https://travis-ci.org/apache/dubbo-spring-boot-project.svg?branch=master)](https://travis-ci.org/apache/dubbo-spring-boot-project) \n[![codecov](https://codecov.io/gh/apache/dubbo-spring-boot-project/branch/master/graph/badge.svg)](https://codecov.io/gh/apache/dubbo-spring-boot-project)\n![license](https://img.shields.io/github/license/apache/dubbo-spring-boot-project.svg)\n\n[Apache Dubbo](https://github.com/apache/dubbo) Spring Boot Project makes it easy to create [Spring Boot](https://github.com/spring-projects/spring-boot/) application using Dubbo as RPC Framework. What's more, it also provides:\n* [auto-configure features](dubbo-spring-boot-autoconfigure) (e.g., annotation-driven, auto configuration, externalized configuration).\n* [production-ready features](dubbo-spring-boot-actuator) (e.g., security, health checks, externalized configuration).\n\n> Apache Dubbo  |ˈdʌbəʊ| is a high-performance, light weight, java based RPC framework. Dubbo offers three key functionalities, which include interface based remote call, fault tolerance & load balancing, and automatic service registration & discovery.\n\n## [中文说明](README_CN.md)\n\n\n## Released version\n\nYou can introduce the latest `dubbo-spring-boot-starter` to your project by adding the following dependency to your pom.xml\n```xml\n<properties>\n    <spring-boot.version>2.3.0.RELEASE</spring-boot.version>\n    <dubbo.version>2.7.8</dubbo.version>\n</properties>\n    \n<dependencyManagement>\n    <dependencies>\n        <!-- Spring Boot -->\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-dependencies</artifactId>\n            <version>${spring-boot.version}</version>\n            <type>pom</type>\n            <scope>import</scope>\n        </dependency>\n\n        <!-- Apache Dubbo  -->\n        <dependency>\n            <groupId>org.apache.dubbo</groupId>\n            <artifactId>dubbo-dependencies-bom</artifactId>\n            <version>${dubbo.version}</version>\n            <type>pom</type>\n            <scope>import</scope>\n        </dependency>\n      \n    </dependencies>\n</dependencyManagement>\n\n<dependencies>\n    <!-- Dubbo Spring Boot Starter -->\n    <dependency>\n        <groupId>org.apache.dubbo</groupId>\n        <artifactId>dubbo-spring-boot-starter</artifactId>\n        <version>2.7.8</version>\n    </dependency>    \n</dependencies>\n```\n\nIf your project failed to resolve the dependency, try to add the following repository:\n```xml\n<repositories>\n    <repository>\n        <id>apache.snapshots.https</id>\n        <name>Apache Development Snapshot Repository</name>\n        <url>https://repository.apache.org/content/repositories/snapshots</url>\n        <releases>\n            <enabled>false</enabled>\n        </releases>\n        <snapshots>\n            <enabled>true</enabled>\n        </snapshots>\n    </repository>\n</repositories>\n```\n\n\n### Legacy Versions\n\nIf you still use the legacy Dubbo whose version is less than 2.7.0, please use the following Spring Boot starters:\n\n| Dubbo Spring Boot | Dubbo  | Spring Boot |\n| ----------------- | ------ | ----------- |\n| [0.2.1.RELEASE](https://github.com/apache/dubbo-spring-boot-project/tree/0.2.x)     | 2.6.5+ | 2.x         |\n| [0.1.2.RELEASE](https://github.com/apache/dubbo-spring-boot-project/tree/0.1.x)     | 2.6.5+ | 1.x         |\n\n\n\n### Build from Source\n\nIf you'd like to attempt to experience the latest features, you also can build from the source code as follow:\n\n1. Maven install current project in your local repository.\n> Maven install = `mvn install`\n\n\n\n\n## Getting Started\n\nIf you don't know about Dubbo, please take a few minutes to learn http://dubbo.apache.org/. After that  you could dive deep into dubbo [user guide](http://dubbo.apache.org/en-us/docs/user/quick-start.html).\n\nUsually, There are two usage scenarios for Dubbo applications, one is Dubbo service(s) provider, another is Dubbo service(s) consumer, thus let's get a quick start on them.\n\nFirst of all, we suppose an interface as Dubbo RPC API that  a service provider exports and a service client consumes: \n\n```java\npublic interface DemoService {\n\n    String sayHello(String name);\n\n}\n```\n\n\n\n### Dubbo service(s) provider\n\n1. Service Provider implements `DemoService`\n\n    ```java\n    @DubboService(version = \"1.0.0\")\n    public class DefaultDemoService implements DemoService {\n    \n        /**\n         * The default value of ${dubbo.application.name} is ${spring.application.name}\n         */\n        @Value(\"${dubbo.application.name}\")\n        private String serviceName;\n    \n        public String sayHello(String name) {\n            return String.format(\"[%s] : Hello, %s\", serviceName, name);\n        }\n    }\n    ```\n\n2. Provides a bootstrap class\n\n    ```java\n    @EnableAutoConfiguration\n    public class DubboProviderDemo {\n\n        public static void main(String[] args) {\n            SpringApplication.run(DubboProviderDemo.class,args);\n        }\n    }\n    ```\n\n3. Configures the `application.properties`:\n\n    ```properties\n    # Spring boot application\n    spring.application.name=dubbo-auto-configuration-provider-demo\n    # Base packages to scan Dubbo Component: @org.apache.dubbo.config.annotation.Service\n    dubbo.scan.base-packages=org.apache.dubbo.spring.boot.sample.provider.service\n\n    # Dubbo Application\n    ## The default value of dubbo.application.name is ${spring.application.name}\n    ## dubbo.application.name=${spring.application.name}\n\n    # Dubbo Protocol\n    dubbo.protocol.name=dubbo\n    dubbo.protocol.port=12345\n\n    ## Dubbo Registry\n    dubbo.registry.address=N/A\n    ```\n\n\n\n### Dubbo service(s) consumer\n\n1. Service consumer also provides a bootstrap class to reference `DemoService`\n\n    ```java\n    @EnableAutoConfiguration\n    public class DubboAutoConfigurationConsumerBootstrap {\n    \n        private final Logger logger = LoggerFactory.getLogger(getClass());\n    \n        @DubboReference(version = \"1.0.0\", url = \"dubbo://127.0.0.1:12345\")\n        private DemoService demoService;\n    \n        public static void main(String[] args) {\n            SpringApplication.run(DubboAutoConfigurationConsumerBootstrap.class).close();\n        }\n    \n        @Bean\n        public ApplicationRunner runner() {\n            return args -> {\n                logger.info(demoService.sayHello(\"mercyblitz\"));\n            };\n        }\n    }\n    ```\n\n2. configures `application.yml`\n\n    ```yaml\n    spring:\n      application:\n        name: dubbo-auto-configure-consumer-sample\n    ```\n\nIf `DubboProviderDemo` works well, please make sure `DubboProviderDemo` is started.\n\nMore details, please refer to [Samples](dubbo-spring-boot-samples).\n\n\n\n## Getting help\n\nHaving trouble with Dubbo Spring Boot? We’d like to help!\n\n- If you are upgrading, read the [release notes](https://github.com/apache/dubbo-spring-boot-project/releases) for upgrade instructions and \"new and noteworthy\" features.\n- Ask a question - You can subscribe [Dubbo User Mailling List](mailto:dubbo+subscribe@googlegroups.com).\n- Report bugs at [github.com/apache/dubbo-spring-boot-project/issues](https://github.com/apache/dubbo-spring-boot-project/issues).\n\n\n\n\n## Building from Source\n\nIf you want to try out the latest features of Dubbo Spring Boot, it can be easily built with the [maven wrapper](https://github.com/takari/maven-wrapper). Your JDK is 1.8 or above.\n\n```\n$ ./mvnw clean install\n```\n\n\n\n## Modules\n\nThere are some modules in Apache Dubbo Spring Boot Project, let's take a look at below overview:\n\n\n\n### [dubbo-spring-boot-parent](dubbo-spring-boot-parent)\n\nThe main usage of `dubbo-spring-boot-parent` is providing dependencies management for other modules.\n\n\n\n### [dubbo-spring-boot-autoconfigure](dubbo-spring-boot-autoconfigure)\n\n`dubbo-spring-boot-autoconfigure` uses Spring Boot's `@EnableAutoConfiguration` which helps core Dubbo's components to be auto-configured by `DubboAutoConfiguration`. It reduces code, eliminates XML configuration. \n\n\n\n### [dubbo-spring-boot-actuator](dubbo-spring-boot-actuator)\n\n`dubbo-spring-boot-actuator` provides production-ready features (e.g., [health checks](https://github.com/apache/dubbo-spring-boot-project/tree/master/dubbo-spring-boot-actuator#health-checks), [endpoints](https://github.com/apache/dubbo-spring-boot-project/tree/master/dubbo-spring-boot-actuator#endpoints), and [externalized configuration](https://github.com/apache/dubbo-spring-boot-project/tree/master/dubbo-spring-boot-actuator#externalized-configuration)).\n\n\n\n### [dubbo-spring-boot-starter](dubbo-spring-boot-starter)\n\n`dubbo-spring-boot-starter` is a standard Spring Boot Starter, which contains [dubbo-spring-boot-autoconfigure](dubbo-spring-boot-autoconfigure) and [dubbo-spring-boot-actuator](dubbo-spring-boot-actuator). It will be imported into your application directly.\n\n\n\n### [dubbo-spring-boot-samples](dubbo-spring-boot-samples)\n\nThe samples project of Dubbo Spring Boot that includes:\n\n- [Auto-Configuaration Samples](dubbo-spring-boot-samples/auto-configure-samples)\n- [Externalized Configuration Samples](dubbo-spring-boot-samples/externalized-configuration-samples)\n- [Registry Zookeeper Samples](https://github.com/apache/dubbo-spring-boot-project/tree/master/dubbo-spring-boot-samples/registry-samples/zookeeper-samples)\n- [Registry Nacos Samples](https://github.com/apache/dubbo-spring-boot-project/tree/master/dubbo-spring-boot-samples/registry-samples/nacos-samples)\n\n\n\n## License\n\nApache Dubbo spring boot project is under the Apache 2.0 license. See the [LICENSE](https://github.com/apache/dubbo-spring-boot-project/blob/master/LICENSE) file for details.\n"
        },
        {
          "name": "README_CN.md",
          "type": "blob",
          "size": 9.6630859375,
          "content": "# Dubbo Spring Boot 工程\n\n[![Build Status](https://travis-ci.org/apache/dubbo-spring-boot-project.svg?branch=master)](https://travis-ci.org/apache/dubbo-spring-boot-project) \n[![codecov](https://codecov.io/gh/apache/dubbo-spring-boot-project/branch/master/graph/badge.svg)](https://codecov.io/gh/apache/dubbo-spring-boot-project)\n![license](https://img.shields.io/github/license/apache/dubbo-spring-boot-project.svg)\n\n[Dubbo](https://dubbo.apache.org/zh-cn/index.html) Apache Dubbo™ 是一款高性能Java RPC框架。\n[Spring Boot](https://github.com/spring-projects/spring-boot/) 应用场景的开发。同时也整合了 Spring Boot 特性：\n\n* [自动装配](dubbo-spring-boot-autoconfigure) (比如： 注解驱动, 自动装配等).\n* [Production-Ready](dubbo-spring-boot-actuator) (比如： 安全, 健康检查, 外部化配置等).\n\n> Apache Dubbo  |ˈdʌbəʊ| 是一款高性能、轻量级的开源Java RPC框架，它提供了三大核心能力：面向接口的远程方法调用，智能容错和负载均衡，以及服务自动注册和发现。\n\n\n## [English README](README.md)\n\n\n## 已发行版本\n\n您可以为您的工程引入最新 `dubbo-spring-boot-starter` 的发布，增加以下依赖到工程的 `pom.xml` 文件中：\n```xml\n<properties>\n    <spring-boot.version>2.3.0.RELEASE</spring-boot.version>\n    <dubbo.version>2.7.8</dubbo.version>\n</properties>\n    \n<dependencyManagement>\n    <dependencies>\n        <!-- Spring Boot -->\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-dependencies</artifactId>\n            <version>${spring-boot.version}</version>\n            <type>pom</type>\n            <scope>import</scope>\n        </dependency>\n\n        <!-- Apache Dubbo  -->\n        <dependency>\n            <groupId>org.apache.dubbo</groupId>\n            <artifactId>dubbo-dependencies-bom</artifactId>\n            <version>${dubbo.version}</version>\n            <type>pom</type>\n            <scope>import</scope>\n        </dependency>\n\n        <dependency>\n            <groupId>org.apache.dubbo</groupId>\n            <artifactId>dubbo</artifactId>\n            <version>${dubbo.version}</version>\n            <exclusions>\n                <exclusion>\n                    <groupId>org.springframework</groupId>\n                    <artifactId>spring</artifactId>\n                </exclusion>\n                <exclusion>\n                    <groupId>javax.servlet</groupId>\n                    <artifactId>servlet-api</artifactId>\n                </exclusion>\n                <exclusion>\n                    <groupId>log4j</groupId>\n                    <artifactId>log4j</artifactId>\n                </exclusion>\n            </exclusions>\n        </dependency>\n    </dependencies>\n</dependencyManagement>\n\n<dependencies>\n    <!-- Dubbo Spring Boot Starter -->\n    <dependency>\n        <groupId>org.apache.dubbo</groupId>\n        <artifactId>dubbo-spring-boot-starter</artifactId>\n        <version>2.7.8</version>\n    </dependency>\n    \n    <dependency>\n        <groupId>org.apache.dubbo</groupId>\n        <artifactId>dubbo</artifactId>\n    </dependency>\n</dependencies>\n```\n\n如果您的工程遇到了依赖问题, 请尝试添加如下 Maven 参考到工程的 `pom.xml` 文件中：\n```xml\n<repositories>\n    <repository>\n        <id>apache.snapshots.https</id>\n        <name>Apache Development Snapshot Repository</name>\n        <url>https://repository.apache.org/content/repositories/snapshots</url>\n        <releases>\n            <enabled>false</enabled>\n        </releases>\n        <snapshots>\n            <enabled>true</enabled>\n        </snapshots>\n    </repository>\n</repositories>\n```\n### 历史版本\n\n如果您现在使用的Dubbo版本低于2.7.0，请使用如下对应版本的Dubbo Spring Boot：\n\n| Dubbo Spring Boot | Dubbo  | Spring Boot |\n| ----------------- | ------ | ----------- |\n| [0.2.1.RELEASE](https://github.com/apache/dubbo-spring-boot-project/tree/0.2.x)     | 2.6.5+ | 2.x         |\n| [0.1.2.RELEASE](https://github.com/apache/dubbo-spring-boot-project/tree/0.1.x)     | 2.6.5+ | 1.x         |\n\n\n### 源代码构建\n\n如果您需要尝试最新 `dubbo-spring-boot-project` 的特性，您可将当前工程手动 Maven install 到本地 Maven 仓库：\n\n1. Maven install 当前工程\n> Maven install = `mvn install`\n\n\n\n\n## 快速开始\n\n如果您对 Dubbo 不是非常了解，耽误您几分钟访问 http://dubbo.apache.org/ 。了解后，如果您期望更深入的探讨，可以移步[用户手册](http://dubbo.apache.org/zh-cn/docs/user/quick-start.html)。\n\n通常情况 , Dubbo 应用有两种使用场景 , 其一为 Dubbo 服务提供方 , 另外一个是 Dubbo 服务消费方，当然也允许两者混合，下面我们一起快速开始！\n\n首先，我们假设存在一个 Dubbo RPC API ，由服务提供方为服务消费方暴露接口 :\n\n```java\npublic interface DemoService {\n\n    String sayHello(String name);\n\n}\n```\n\n\n\n### 实现 Dubbo 服务提供方\n\n1. 实现 `DemoService` 接口\n\n    ```java\n    @DubboService(version = \"1.0.0\")\n    public class DefaultDemoService implements DemoService {\n    \n        /**\n         * The default value of ${dubbo.application.name} is ${spring.application.name}\n         */\n        @Value(\"${dubbo.application.name}\")\n        private String serviceName;\n    \n        public String sayHello(String name) {\n            return String.format(\"[%s] : Hello, %s\", serviceName, name);\n        }\n    }\n    ```\n\n\n\n2. 编写 Spring Boot 引导程序\n\n    ```java\n    @EnableAutoConfiguration\n    public class DubboProviderDemo {\n\n        public static void main(String[] args) {\n            SpringApplication.run(DubboProviderDemo.class,args);\n        }\n    }\n    ```\n\n\n3. 配置 `application.properties` :\n\n    ```properties\n    # Spring boot application\n    spring.application.name=dubbo-auto-configuration-provider-demo\n    # Base packages to scan Dubbo Component: @org.apache.dubbo.config.annotation.Service\n    dubbo.scan.base-packages=org.apache.dubbo.spring.boot.sample.provider.service\n\n    # Dubbo Application\n    ## The default value of dubbo.application.name is ${spring.application.name}\n    ## dubbo.application.name=${spring.application.name}\n\n    # Dubbo Protocol\n    dubbo.protocol.name=dubbo\n    dubbo.protocol.port=12345\n\n    ## Dubbo Registry\n    dubbo.registry.address=N/A\n    ```\n\n\n\n\n### 实现 Dubbo 服务消费方\n\n\n1. 通过 `@DubboReference` 注入 `DemoService` :\n\n    ```java\n    @EnableAutoConfiguration\n    public class DubboAutoConfigurationConsumerBootstrap {\n    \n        private final Logger logger = LoggerFactory.getLogger(getClass());\n    \n        @DubboReference(version = \"1.0.0\", url = \"dubbo://127.0.0.1:12345\")\n        private DemoService demoService;\n    \n        public static void main(String[] args) {\n            SpringApplication.run(DubboAutoConfigurationConsumerBootstrap.class).close();\n        }\n    \n        @Bean\n        public ApplicationRunner runner() {\n            return args -> {\n                logger.info(demoService.sayHello(\"mercyblitz\"));\n            };\n        }\n    }\n    ```\n\n\n\n2. 配置 `application.yml` :\n\n    ```yaml\n    spring:\n      application:\n        name: dubbo-auto-configure-consumer-sample\n    ```\n\n\n请确保 Dubbo 服务提供方服务可用， `DubboProviderDemo` 运行方可正常。\n\n\n更多的实现细节，请参考 [Dubbo 示例](dubbo-spring-boot-samples)\n\n\n\n\n## 社区交流\n\n如果您在使用 Dubbo Spring Boot 中遇到任何问题或者有什么建议? 我们非常需要您的支持!\n\n- 如果您需要升级版本，请提前阅读[发布公告](https://github.com/dubbo/dubbo-spring-boot-project/releases)，了解最新的特性和问题修复。\n- 如果您遇到任何问题 ，您可以订阅 [Dubbo 用户邮件列表](mailto:dubbo+subscribe@googlegroups.com)。\n- 问题反馈，您可以在 [issues](https://github.com/dubbo/dubbo-spring-boot-project/issues) 提出您遇到的使用问题。\n\n\n\n\n## 模块工程\n\nDubbo Spring Boot 采用多 Maven 模块工程 , 模块如下：\n\n\n### [dubbo-spring-boot-parent](dubbo-spring-boot-parent)\n\n[dubbo-spring-boot-parent](dubbo-spring-boot-parent) 模块主要管理 Dubbo Spring Boot 工程的 Maven 依赖\n\n\n### [dubbo-spring-boot-autoconfigure](dubbo-spring-boot-autoconfigure)\n\n[dubbo-spring-boot-autoconfigure](dubbo-spring-boot-autoconfigure) 模块提供 Spring Boot's `@EnableAutoConfiguration` 的实现 - `DubboAutoConfiguration`，\n它简化了 Dubbo 核心组件的装配。\n\n\n### [dubbo-spring-boot-actuator](dubbo-spring-boot-actuator)\n\n[dubbo-spring-boot-actuator](dubbo-spring-boot-actuator) 提供 Production-Ready 特性：\n\n* [健康检查](dubbo-spring-boot-actuator#health-checks)\n* [控制端点](dubbo-spring-boot-actuator#endpoints)\n* [外部化配置](dubbo-spring-boot-actuator#externalized-configuration)\n\n\n### [dubbo-spring-boot-starter](dubbo-spring-boot-starter)\n\n[dubbo-spring-boot-starter](dubbo-spring-boot-starter) 模块为标准的 Spring Boot Starter ,\n当您将它引入到工程后，[dubbo-spring-boot-autoconfigure](dubbo-spring-boot-autoconfigure) 模块会一同被间接依赖。\n\n\n### [dubbo-spring-boot-samples](dubbo-spring-boot-samples)\n\nDubbo Spring Boot 示例工程包括:\n\n- [自动装配](dubbo-spring-boot-samples/auto-configure-samples)\n- [外部化配置](dubbo-spring-boot-samples/externalized-configuration-samples)\n- [Zookeeper 注册中心](https://github.com/apache/dubbo-spring-boot-project/tree/master/dubbo-spring-boot-samples/registry-samples/zookeeper-samples)\n- [Nacos 注册中心](https://github.com/apache/dubbo-spring-boot-project/tree/master/dubbo-spring-boot-samples/registry-samples/nacos-samples)\n\n\n\n## License\n\nApache Dubbo spring boot project 基于Apache 2.0许可证开源，详细请参考[LICENSE](https://github.com/apache/dubbo-spring-boot-project/blob/master/LICENSE)。\n\n"
        },
        {
          "name": "dubbo-spring-boot-actuator",
          "type": "tree",
          "content": null
        },
        {
          "name": "dubbo-spring-boot-autoconfigure",
          "type": "tree",
          "content": null
        },
        {
          "name": "dubbo-spring-boot-compatible",
          "type": "tree",
          "content": null
        },
        {
          "name": "dubbo-spring-boot-distribution",
          "type": "tree",
          "content": null
        },
        {
          "name": "dubbo-spring-boot-parent",
          "type": "tree",
          "content": null
        },
        {
          "name": "dubbo-spring-boot-samples",
          "type": "tree",
          "content": null
        },
        {
          "name": "dubbo-spring-boot-starter",
          "type": "tree",
          "content": null
        },
        {
          "name": "mvnw",
          "type": "blob",
          "size": 6.357421875,
          "content": "#!/bin/sh\n# ----------------------------------------------------------------------------\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n# ----------------------------------------------------------------------------\n\n# ----------------------------------------------------------------------------\n# Maven2 Start Up Batch script\n#\n# Required ENV vars:\n# ------------------\n#   JAVA_HOME - location of a JDK home dir\n#\n# Optional ENV vars\n# -----------------\n#   M2_HOME - location of maven2's installed home dir\n#   MAVEN_OPTS - parameters passed to the Java VM when running Maven\n#     e.g. to debug Maven itself, use\n#       set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000\n#   MAVEN_SKIP_RC - flag to disable loading of mavenrc files\n# ----------------------------------------------------------------------------\n\nif [ -z \"$MAVEN_SKIP_RC\" ] ; then\n\n  if [ -f /etc/mavenrc ] ; then\n    . /etc/mavenrc\n  fi\n\n  if [ -f \"$HOME/.mavenrc\" ] ; then\n    . \"$HOME/.mavenrc\"\n  fi\n\nfi\n\n# OS specific support.  $var _must_ be set to either true or false.\ncygwin=false;\ndarwin=false;\nmingw=false\ncase \"`uname`\" in\n  CYGWIN*) cygwin=true ;;\n  MINGW*) mingw=true;;\n  Darwin*) darwin=true\n    # Use /usr/libexec/java_home if available, otherwise fall back to /Library/Java/Home\n    # See https://developer.apple.com/library/mac/qa/qa1170/_index.html\n    if [ -z \"$JAVA_HOME\" ]; then\n      if [ -x \"/usr/libexec/java_home\" ]; then\n        export JAVA_HOME=\"`/usr/libexec/java_home`\"\n      else\n        export JAVA_HOME=\"/Library/Java/Home\"\n      fi\n    fi\n    ;;\nesac\n\nif [ -z \"$JAVA_HOME\" ] ; then\n  if [ -r /etc/gentoo-release ] ; then\n    JAVA_HOME=`java-config --jre-home`\n  fi\nfi\n\nif [ -z \"$M2_HOME\" ] ; then\n  ## resolve links - $0 may be a link to maven's home\n  PRG=\"$0\"\n\n  # need this for relative symlinks\n  while [ -h \"$PRG\" ] ; do\n    ls=`ls -ld \"$PRG\"`\n    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n    if expr \"$link\" : '/.*' > /dev/null; then\n      PRG=\"$link\"\n    else\n      PRG=\"`dirname \"$PRG\"`/$link\"\n    fi\n  done\n\n  saveddir=`pwd`\n\n  M2_HOME=`dirname \"$PRG\"`/..\n\n  # make it fully qualified\n  M2_HOME=`cd \"$M2_HOME\" && pwd`\n\n  cd \"$saveddir\"\n  # echo Using m2 at $M2_HOME\nfi\n\n# For Cygwin, ensure paths are in UNIX format before anything is touched\nif $cygwin ; then\n  [ -n \"$M2_HOME\" ] &&\n    M2_HOME=`cygpath --unix \"$M2_HOME\"`\n  [ -n \"$JAVA_HOME\" ] &&\n    JAVA_HOME=`cygpath --unix \"$JAVA_HOME\"`\n  [ -n \"$CLASSPATH\" ] &&\n    CLASSPATH=`cygpath --path --unix \"$CLASSPATH\"`\nfi\n\n# For Mingw, ensure paths are in UNIX format before anything is touched\nif $mingw ; then\n  [ -n \"$M2_HOME\" ] &&\n    M2_HOME=\"`(cd \"$M2_HOME\"; pwd)`\"\n  [ -n \"$JAVA_HOME\" ] &&\n    JAVA_HOME=\"`(cd \"$JAVA_HOME\"; pwd)`\"\n  # TODO classpath?\nfi\n\nif [ -z \"$JAVA_HOME\" ]; then\n  javaExecutable=\"`which javac`\"\n  if [ -n \"$javaExecutable\" ] && ! [ \"`expr \\\"$javaExecutable\\\" : '\\([^ ]*\\)'`\" = \"no\" ]; then\n    # readlink(1) is not available as standard on Solaris 10.\n    readLink=`which readlink`\n    if [ ! `expr \"$readLink\" : '\\([^ ]*\\)'` = \"no\" ]; then\n      if $darwin ; then\n        javaHome=\"`dirname \\\"$javaExecutable\\\"`\"\n        javaExecutable=\"`cd \\\"$javaHome\\\" && pwd -P`/javac\"\n      else\n        javaExecutable=\"`readlink -f \\\"$javaExecutable\\\"`\"\n      fi\n      javaHome=\"`dirname \\\"$javaExecutable\\\"`\"\n      javaHome=`expr \"$javaHome\" : '\\(.*\\)/bin'`\n      JAVA_HOME=\"$javaHome\"\n      export JAVA_HOME\n    fi\n  fi\nfi\n\nif [ -z \"$JAVACMD\" ] ; then\n  if [ -n \"$JAVA_HOME\"  ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n      # IBM's JDK on AIX uses strange locations for the executables\n      JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n    else\n      JAVACMD=\"$JAVA_HOME/bin/java\"\n    fi\n  else\n    JAVACMD=\"`which java`\"\n  fi\nfi\n\nif [ ! -x \"$JAVACMD\" ] ; then\n  echo \"Error: JAVA_HOME is not defined correctly.\" >&2\n  echo \"  We cannot execute $JAVACMD\" >&2\n  exit 1\nfi\n\nif [ -z \"$JAVA_HOME\" ] ; then\n  echo \"Warning: JAVA_HOME environment variable is not set.\"\nfi\n\nCLASSWORLDS_LAUNCHER=org.codehaus.plexus.classworlds.launcher.Launcher\n\n# traverses directory structure from process work directory to filesystem root\n# first directory with .mvn subdirectory is considered project base directory\nfind_maven_basedir() {\n\n  if [ -z \"$1\" ]\n  then\n    echo \"Path not specified to find_maven_basedir\"\n    return 1\n  fi\n\n  basedir=\"$1\"\n  wdir=\"$1\"\n  while [ \"$wdir\" != '/' ] ; do\n    if [ -d \"$wdir\"/.mvn ] ; then\n      basedir=$wdir\n      break\n    fi\n    # workaround for JBEAP-8937 (on Solaris 10/Sparc)\n    if [ -d \"${wdir}\" ]; then\n      wdir=`cd \"$wdir/..\"; pwd`\n    fi\n    # end of workaround\n  done\n  echo \"${basedir}\"\n}\n\n# concatenates all lines of a file\nconcat_lines() {\n  if [ -f \"$1\" ]; then\n    echo \"$(tr -s '\\n' ' ' < \"$1\")\"\n  fi\n}\n\nBASE_DIR=`find_maven_basedir \"$(pwd)\"`\nif [ -z \"$BASE_DIR\" ]; then\n  exit 1;\nfi\n\nexport MAVEN_PROJECTBASEDIR=${MAVEN_BASEDIR:-\"$BASE_DIR\"}\nif [ \"$MVNW_VERBOSE\" = true ]; then\n  echo $MAVEN_PROJECTBASEDIR\nfi\nMAVEN_OPTS=\"$(concat_lines \"$MAVEN_PROJECTBASEDIR/.mvn/jvm.config\") $MAVEN_OPTS\"\n\n# For Cygwin, switch paths to Windows format before running java\nif $cygwin; then\n  [ -n \"$M2_HOME\" ] &&\n    M2_HOME=`cygpath --path --windows \"$M2_HOME\"`\n  [ -n \"$JAVA_HOME\" ] &&\n    JAVA_HOME=`cygpath --path --windows \"$JAVA_HOME\"`\n  [ -n \"$CLASSPATH\" ] &&\n    CLASSPATH=`cygpath --path --windows \"$CLASSPATH\"`\n  [ -n \"$MAVEN_PROJECTBASEDIR\" ] &&\n    MAVEN_PROJECTBASEDIR=`cygpath --path --windows \"$MAVEN_PROJECTBASEDIR\"`\nfi\n\nWRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain\n\nexec \"$JAVACMD\" \\\n  $MAVEN_OPTS \\\n  -classpath \"$MAVEN_PROJECTBASEDIR/.mvn/wrapper/maven-wrapper.jar\" \\\n  \"-Dmaven.home=${M2_HOME}\" \"-Dmaven.multiModuleProjectDirectory=${MAVEN_PROJECTBASEDIR}\" \\\n  ${WRAPPER_LAUNCHER} $MAVEN_CONFIG \"$@\"\n\n"
        },
        {
          "name": "mvnw.cmd",
          "type": "blob",
          "size": 4.8779296875,
          "content": "@REM ----------------------------------------------------------------------------\n@REM Licensed to the Apache Software Foundation (ASF) under one\n@REM or more contributor license agreements.  See the NOTICE file\n@REM distributed with this work for additional information\n@REM regarding copyright ownership.  The ASF licenses this file\n@REM to you under the Apache License, Version 2.0 (the\n@REM \"License\"); you may not use this file except in compliance\n@REM with the License.  You may obtain a copy of the License at\n@REM\n@REM    http://www.apache.org/licenses/LICENSE-2.0\n@REM\n@REM Unless required by applicable law or agreed to in writing,\n@REM software distributed under the License is distributed on an\n@REM \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n@REM KIND, either express or implied.  See the License for the\n@REM specific language governing permissions and limitations\n@REM under the License.\n@REM ----------------------------------------------------------------------------\n\n@REM ----------------------------------------------------------------------------\n@REM Maven2 Start Up Batch script\n@REM\n@REM Required ENV vars:\n@REM JAVA_HOME - location of a JDK home dir\n@REM\n@REM Optional ENV vars\n@REM M2_HOME - location of maven2's installed home dir\n@REM MAVEN_BATCH_ECHO - set to 'on' to enable the echoing of the batch commands\n@REM MAVEN_BATCH_PAUSE - set to 'on' to wait for a key stroke before ending\n@REM MAVEN_OPTS - parameters passed to the Java VM when running Maven\n@REM     e.g. to debug Maven itself, use\n@REM set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000\n@REM MAVEN_SKIP_RC - flag to disable loading of mavenrc files\n@REM ----------------------------------------------------------------------------\n\n@REM Begin all REM lines with '@' in case MAVEN_BATCH_ECHO is 'on'\n@echo off\n@REM enable echoing my setting MAVEN_BATCH_ECHO to 'on'\n@if \"%MAVEN_BATCH_ECHO%\" == \"on\"  echo %MAVEN_BATCH_ECHO%\n\n@REM set %HOME% to equivalent of $HOME\nif \"%HOME%\" == \"\" (set \"HOME=%HOMEDRIVE%%HOMEPATH%\")\n\n@REM Execute a user defined script before this one\nif not \"%MAVEN_SKIP_RC%\" == \"\" goto skipRcPre\n@REM check for pre script, once with legacy .bat ending and once with .cmd ending\nif exist \"%HOME%\\mavenrc_pre.bat\" call \"%HOME%\\mavenrc_pre.bat\"\nif exist \"%HOME%\\mavenrc_pre.cmd\" call \"%HOME%\\mavenrc_pre.cmd\"\n:skipRcPre\n\n@setlocal\n\nset ERROR_CODE=0\n\n@REM To isolate internal variables from possible post scripts, we use another setlocal\n@setlocal\n\n@REM ==== START VALIDATION ====\nif not \"%JAVA_HOME%\" == \"\" goto OkJHome\n\necho.\necho Error: JAVA_HOME not found in your environment. >&2\necho Please set the JAVA_HOME variable in your environment to match the >&2\necho location of your Java installation. >&2\necho.\ngoto error\n\n:OkJHome\nif exist \"%JAVA_HOME%\\bin\\java.exe\" goto init\n\necho.\necho Error: JAVA_HOME is set to an invalid directory. >&2\necho JAVA_HOME = \"%JAVA_HOME%\" >&2\necho Please set the JAVA_HOME variable in your environment to match the >&2\necho location of your Java installation. >&2\necho.\ngoto error\n\n@REM ==== END VALIDATION ====\n\n:init\n\n@REM Find the project base dir, i.e. the directory that contains the folder \".mvn\".\n@REM Fallback to current working directory if not found.\n\nset MAVEN_PROJECTBASEDIR=%MAVEN_BASEDIR%\nIF NOT \"%MAVEN_PROJECTBASEDIR%\"==\"\" goto endDetectBaseDir\n\nset EXEC_DIR=%CD%\nset WDIR=%EXEC_DIR%\n:findBaseDir\nIF EXIST \"%WDIR%\"\\.mvn goto baseDirFound\ncd ..\nIF \"%WDIR%\"==\"%CD%\" goto baseDirNotFound\nset WDIR=%CD%\ngoto findBaseDir\n\n:baseDirFound\nset MAVEN_PROJECTBASEDIR=%WDIR%\ncd \"%EXEC_DIR%\"\ngoto endDetectBaseDir\n\n:baseDirNotFound\nset MAVEN_PROJECTBASEDIR=%EXEC_DIR%\ncd \"%EXEC_DIR%\"\n\n:endDetectBaseDir\n\nIF NOT EXIST \"%MAVEN_PROJECTBASEDIR%\\.mvn\\jvm.config\" goto endReadAdditionalConfig\n\n@setlocal EnableExtensions EnableDelayedExpansion\nfor /F \"usebackq delims=\" %%a in (\"%MAVEN_PROJECTBASEDIR%\\.mvn\\jvm.config\") do set JVM_CONFIG_MAVEN_PROPS=!JVM_CONFIG_MAVEN_PROPS! %%a\n@endlocal & set JVM_CONFIG_MAVEN_PROPS=%JVM_CONFIG_MAVEN_PROPS%\n\n:endReadAdditionalConfig\n\nSET MAVEN_JAVA_EXE=\"%JAVA_HOME%\\bin\\java.exe\"\n\nset WRAPPER_JAR=\"%MAVEN_PROJECTBASEDIR%\\.mvn\\wrapper\\maven-wrapper.jar\"\nset WRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain\n\n%MAVEN_JAVA_EXE% %JVM_CONFIG_MAVEN_PROPS% %MAVEN_OPTS% %MAVEN_DEBUG_OPTS% -classpath %WRAPPER_JAR% \"-Dmaven.multiModuleProjectDirectory=%MAVEN_PROJECTBASEDIR%\" %WRAPPER_LAUNCHER% %MAVEN_CONFIG% %*\nif ERRORLEVEL 1 goto error\ngoto end\n\n:error\nset ERROR_CODE=1\n\n:end\n@endlocal & set ERROR_CODE=%ERROR_CODE%\n\nif not \"%MAVEN_SKIP_RC%\" == \"\" goto skipRcPost\n@REM check for post script, once with legacy .bat ending and once with .cmd ending\nif exist \"%HOME%\\mavenrc_post.bat\" call \"%HOME%\\mavenrc_post.bat\"\nif exist \"%HOME%\\mavenrc_post.cmd\" call \"%HOME%\\mavenrc_post.cmd\"\n:skipRcPost\n\n@REM pause the script if MAVEN_BATCH_PAUSE is set to 'on'\nif \"%MAVEN_BATCH_PAUSE%\" == \"on\" pause\n\nif \"%MAVEN_TERMINATE_CMD%\" == \"on\" exit %ERROR_CODE%\n\nexit /B %ERROR_CODE%\n\n"
        },
        {
          "name": "pom.xml",
          "type": "blob",
          "size": 7.72265625,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!--\n  Licensed to the Apache Software Foundation (ASF) under one or more\n  contributor license agreements.  See the NOTICE file distributed with\n  this work for additional information regarding copyright ownership.\n  The ASF licenses this file to You under the Apache License, Version 2.0\n  (the \"License\"); you may not use this file except in compliance with\n  the License.  You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n  -->\n<project xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns=\"http://maven.apache.org/POM/4.0.0\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n\n    <parent>\n        <groupId>org.apache</groupId>\n        <artifactId>apache</artifactId>\n        <version>21</version>\n    </parent>\n\n    <groupId>org.apache.dubbo</groupId>\n    <artifactId>dubbo-spring-boot-project</artifactId>\n    <version>${revision}</version>\n\n    <packaging>pom</packaging>\n\n    <name>Apache Dubbo Spring Boot Project</name>\n    <description>Apache Dubbo Spring Boot Project</description>\n    <url>https://github.com/apache/dubbo-spring-boot-project</url>\n\n    <properties>\n        <maven_javadoc_version>3.0.1</maven_javadoc_version>\n        <maven_surefire_version>2.19.1</maven_surefire_version>\n        <revision>2.7.10-SNAPSHOT</revision>\n    </properties>\n\n    <modules>\n        <module>dubbo-spring-boot-parent</module>\n        <module>dubbo-spring-boot-distribution</module>\n        <module>dubbo-spring-boot-autoconfigure</module>\n        <module>dubbo-spring-boot-starter</module>\n        <module>dubbo-spring-boot-actuator</module>\n        <module>dubbo-spring-boot-compatible</module>\n        <module>dubbo-spring-boot-samples</module>\n    </modules>\n\n    <organization>\n        <name>The Apache Software Foundation</name>\n        <url>http://www.apache.org/</url>\n    </organization>\n\n    <scm>\n        <url>https://github.com/apache/dubbo-spring-boot-project</url>\n        <connection>scm:git:git:////github.com/apache/dubbo-spring-boot-project.git</connection>\n        <developerConnection>scm:git:ssh://git@//github.com/apache/dubbo-spring-boot-project.git\n        </developerConnection>\n    </scm>\n\n    <issueManagement>\n        <system>Github</system>\n        <url>https://github.com/apache/dubbo-spring-boot-project/issues</url>\n    </issueManagement>\n\n    <mailingLists>\n        <mailingList>\n            <name>Development List</name>\n            <subscribe>dev-subscribe@dubbo.apache.org</subscribe>\n            <unsubscribe>dev-unsubscribe@dubbo.apache.org</unsubscribe>\n            <post>dev@dubbo.apache.org</post>\n        </mailingList>\n        <mailingList>\n            <name>Commits List</name>\n            <subscribe>commits-subscribe@dubbo.apache.org</subscribe>\n            <unsubscribe>commits-unsubscribe@dubbo.apache.org</unsubscribe>\n            <post>commits@dubbo.apache.org</post>\n        </mailingList>\n        <mailingList>\n            <name>Issues List</name>\n            <subscribe>issues-subscribe@dubbo.apache.org</subscribe>\n            <unsubscribe>issues-unsubscribe@dubbo.apache.org</unsubscribe>\n            <post>issues@dubbo.apache.org</post>\n        </mailingList>\n    </mailingLists>\n    <developers>\n        <developer>\n            <id>Apache Dubbo </id>\n            <name>The Apache Dubbo  Project Contributors</name>\n            <email>dev@dubbo.apache.org</email>\n            <url>http://dubbo.apache.org</url>\n        </developer>\n    </developers>\n\n    <profiles>\n        <profile>\n            <id>release</id>\n            <build>\n                <plugins>\n                    <plugin>\n                        <groupId>org.apache.maven.plugins</groupId>\n                        <artifactId>maven-javadoc-plugin</artifactId>\n                        <version>3.1.1</version>\n                        <executions>\n                            <execution>\n                                <phase>package</phase>\n                                <goals>\n                                    <goal>jar</goal>\n                                </goals>\n                            </execution>\n                        </executions>\n                    </plugin>\n\n                    <plugin>\n                        <groupId>org.apache.maven.plugins</groupId>\n                        <artifactId>maven-gpg-plugin</artifactId>\n                        <version>1.6</version>\n                        <executions>\n                            <execution>\n                                <phase>verify</phase>\n                                <goals>\n                                    <goal>sign</goal>\n                                </goals>\n                            </execution>\n                        </executions>\n                    </plugin>\n\n                    <plugin>\n                        <groupId>org.codehaus.mojo</groupId>\n                        <artifactId>flatten-maven-plugin</artifactId>\n                        <version>1.1.0</version>\n                        <configuration>\n                            <updatePomFile>true</updatePomFile>\n                            <flattenMode>resolveCiFriendliesOnly</flattenMode>\n                        </configuration>\n                        <executions>\n                            <execution>\n                                <id>flatten</id>\n                                <phase>process-resources</phase>\n                                <goals>\n                                    <goal>flatten</goal>\n                                </goals>\n                            </execution>\n                            <execution>\n                                <id>flatten.clean</id>\n                                <phase>clean</phase>\n                                <goals>\n                                    <goal>clean</goal>\n                                </goals>\n                            </execution>\n                        </executions>\n                    </plugin>\n                </plugins>\n            </build>\n        </profile>\n    </profiles>\n\n    <build>\n        <pluginManagement>\n            <plugins>\n                <plugin>\n                    <groupId>org.codehaus.mojo</groupId>\n                    <artifactId>flatten-maven-plugin</artifactId>\n                    <version>1.1.0</version>\n                    <configuration>\n                        <updatePomFile>true</updatePomFile>\n                        <flattenMode>resolveCiFriendliesOnly</flattenMode>\n                    </configuration>\n                    <executions>\n                        <execution>\n                            <id>flatten</id>\n                            <phase>process-resources</phase>\n                            <goals>\n                                <goal>flatten</goal>\n                            </goals>\n                        </execution>\n                        <execution>\n                            <id>flatten.clean</id>\n                            <phase>clean</phase>\n                            <goals>\n                                <goal>clean</goal>\n                            </goals>\n                        </execution>\n                    </executions>\n                </plugin>\n            </plugins>\n        </pluginManagement>\n\n        <plugins>\n            <plugin>\n                <groupId>org.codehaus.mojo</groupId>\n                <artifactId>flatten-maven-plugin</artifactId>\n            </plugin>\n        </plugins>\n    </build>\n\n</project>"
        }
      ]
    }
  ]
}