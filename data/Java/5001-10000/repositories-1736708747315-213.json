{
  "metadata": {
    "timestamp": 1736708747315,
    "page": 213,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "auth0/java-jwt",
      "stars": 5939,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".codecov.yml",
          "type": "blob",
          "size": 0.279296875,
          "content": "coverage:\n  precision: 2\n  round: down\n  range: \"70...100\"\n  status:\n    patch:\n      default:\n        if_no_uploads: success\n        if_ci_failed: error\n    changes: true\n    project:\n      default:\n        target: auto\n        threshold: 1%\n        if_no_uploads: error\ncomment: false"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.630859375,
          "content": "# Created by .ignore support plugin (hsz.mobi)\n### OSX template\n*.DS_Store\n.AppleDouble\n.LSOverride\n\n# Icon must end with two \\r\nIcon\n\n# Thumbnails\n._*\n\n# Files that might appear in the root of a volume\n.DocumentRevisions-V100\n.fseventsd\n.Spotlight-V100\n.TemporaryItems\n.Trashes\n.VolumeIcon.icns\n.com.apple.timemachine.donotpresent\n\n# Directories potentially created on remote AFP share\n.AppleDB\n.AppleDesktop\nNetwork Trash Folder\nTemporary Items\n.apdisk\n\n\n### JetBrains template\n# Covers JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm, CLion, Android Studio and Webstorm\n# Reference: https://intellij-support.jetbrains.com/hc/en-us/articles/206544839\n\n# Intellij\n.idea/\n*.iml\n\n## File-based project format:\n*.iws\n\n## Plugin-specific files:\n\n# IntelliJ\nbin/\n/out/\n/lib/out/\n\n# mpeltonen/sbt-idea plugin\n.idea_modules/\n\n# JIRA plugin\natlassian-ide-plugin.xml\n\n# Crashlytics plugin (for Android Studio and IntelliJ)\ncom_crashlytics_export_strings.xml\ncrashlytics.properties\ncrashlytics-build.properties\nfabric.properties\n\n# Eclipse IDE\n.classpath\n.project\n.settings/\n\n### Java template\n*.class\n\n# Mobile Tools for Java (J2ME)\n.mtj.tmp/\n\n# Package Files #\n*.jar\n*.war\n*.ear\n\n# virtual machine crash logs, see http://www.java.com/en/download/help/error_hotspot.xml\nhs_err_pid*\n\n### Gradle template\n.gradle\nbuild/\ntarget/\ndependency-reduced-pom.xml\nlocal.properties\n\n# Ignore Gradle GUI config\ngradle-app.setting\n\n# Avoid ignoring Gradle wrapper jar file (.jar files are usually ignored)\n!gradle-wrapper.jar\n\n# Cache of project\n.gradletasknamecache\n\n# # Work around https://youtrack.jetbrains.com/issue/IDEA-116898\n# gradle/wrapper/gradle-wrapper.properties\n\n"
        },
        {
          "name": ".shiprc",
          "type": "blob",
          "size": 0.1494140625,
          "content": "{\n  \"files\": {\n    \"README.md\": [],\n    \".version\": [],\n    \"lib/build.gradle\": [\"version = \\\"{MAJOR}.{MINOR}.{PATCH}\\\"\"]\n  },\n  \"prefixVersion\": false\n}"
        },
        {
          "name": ".version",
          "type": "blob",
          "size": 0.0048828125,
          "content": "4.4.0"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 26.4501953125,
          "content": "# Change Log\n\n## [4.4.0](https://github.com/auth0/java-jwt/tree/4.4.0) (2023-03-31)\n[Full Changelog](https://github.com/auth0/java-jwt/compare/4.3.0...4.4.0)\n\n**Changed**\n- Add support for passing json values for header and payload [\\#643](https://github.com/auth0/java-jwt/pull/643) ([andrewrigas](https://github.com/andrewrigas))\n- Preserve insertion order for claims [\\#656](https://github.com/auth0/java-jwt/pull/656) ([snago](https://github.com/snago))\n- Update Jackson to 2.14.2 [\\#657](https://github.com/auth0/java-jwt/pull/657) ([jimmyjames](https://github.com/jimmyjames))\n\n## [4.3.0](https://github.com/auth0/java-jwt/tree/4.3.0) (2023-02-10)\n[Full Changelog](https://github.com/auth0/java-jwt/compare/4.2.2...4.3.0)\n\n**Changed**\n- Improve JWT parse/decode performance [\\#620](https://github.com/auth0/java-jwt/pull/620) ([noetro](https://github.com/noetro))\n\n**Fixed**\n- Fix for exp claim considered valid if equal to now [\\#652](https://github.com/auth0/java-jwt/pull/652) ([jimmyjames](https://github.com/jimmyjames))\n- Code cleanup [\\#642](https://github.com/auth0/java-jwt/pull/642) ([CodeDead](https://github.com/CodeDead))\n\n## [4.2.2](https://github.com/auth0/java-jwt/tree/4.2.2) (2023-01-11)\n[Full Changelog](https://github.com/auth0/java-jwt/compare/4.2.1...4.2.2)\n\nThis patch release does not contain any functional changes, but is being released using an updated signing key for verification as part of our commitment to best security practices.\nPlease review [the README note for additional details.](https://github.com/auth0/java-jwt/blob/master/README.md)\n\n## [4.2.1](https://github.com/auth0/java-jwt/tree/4.2.1) (2022-10-24)\n[Full Changelog](https://github.com/auth0/java-jwt/compare/4.2.0...4.2.1)\n\n**Security**\n- Use latest ship orb [\\#634](https://github.com/auth0/java-jwt/pull/634) ([jimmyjames](https://github.com/jimmyjames))\n- Bump `com.fasterxml.jackson.core:jackson-databind` to 2.13.4.2 [\\#630](https://github.com/auth0/java-jwt/pull/630) ([evansims](https://github.com/evansims))\n\n## [4.2.0](https://github.com/auth0/java-jwt/tree/4.2.0) (2022-10-19)\n[Full Changelog](https://github.com/auth0/java-jwt/compare/4.1.0...4.2.0)\n\n**Changed**\n- Re-enable japicmp API diff checking [\\#619](https://github.com/auth0/java-jwt/pull/619) ([jimmyjames](https://github.com/jimmyjames))\n- Update .shiprc to only update lib version in build.gradle [\\#625](https://github.com/auth0/java-jwt/pull/625) ([jimmyjames](https://github.com/jimmyjames))\n- Optimise TokenUtils parsing [\\#611](https://github.com/auth0/java-jwt/pull/611) ([noetro](https://github.com/noetro))\n- Update Circle Ship Orb configuration [\\#616](https://github.com/auth0/java-jwt/pull/616) ([frederikprijck](https://github.com/frederikprijck))\n\n**Fixed**\n- Update Claim#asString documentation [\\#615](https://github.com/auth0/java-jwt/pull/615) ([jimmyjames](https://github.com/jimmyjames))\n\n## [4.1.0](https://github.com/auth0/java-jwt/tree/4.1.0) (2022-10-06)\n[Full Changelog](https://github.com/auth0/java-jwt/compare/4.0.0...4.1.0)\n\n**‚ö†Ô∏è BREAKING CHANGES**\n- Make JWT constants final values [\\#604](https://github.com/auth0/java-jwt/pull/604) ([poovamraj](https://github.com/poovamraj))\n\n**Added**\n- Add integration with our Shipping orb [\\#612](https://github.com/auth0/java-jwt/pull/612) ([frederikprijck](https://github.com/frederikprijck))\n- Add Ship CLI support [\\#609](https://github.com/auth0/java-jwt/pull/609) ([jimmyjames](https://github.com/jimmyjames))\n- Provide straightforward example for JWKS [\\#600](https://github.com/auth0/java-jwt/pull/600) ([poovamraj](https://github.com/poovamraj))\n\n**Changed**\n- Update to gradle 6.9.2 [\\#608](https://github.com/auth0/java-jwt/pull/608) ([jimmyjames](https://github.com/jimmyjames))\n- Update OSS plugin to latest [\\#607](https://github.com/auth0/java-jwt/pull/607) ([jimmyjames](https://github.com/jimmyjames))\n- [SDK-3466] Upgrade Codecov [\\#595](https://github.com/auth0/java-jwt/pull/595) ([evansims](https://github.com/evansims))\n- Update README.md [\\#590](https://github.com/auth0/java-jwt/pull/590) ([poovamraj](https://github.com/poovamraj))\n\n**Fixed**\n- Check for null token before splitting [\\#606](https://github.com/auth0/java-jwt/pull/606) ([jimmyjames](https://github.com/jimmyjames))\n- [SDK-3816] Update docs for verification thread-safety [\\#605](https://github.com/auth0/java-jwt/pull/605) ([jimmyjames](https://github.com/jimmyjames))\n\n## [4.0.0](https://github.com/auth0/java-jwt/tree/4.0.0) (2022-06-24)\n[Full Changelog](https://github.com/auth0/java-jwt/compare/3.19.2...4.0.0)\n\n**This is a major release and contains breaking changes!**\n\n- Check the [Migration Guide](https://github.com/auth0/java-jwt/blob/master/MIGRATION_GUIDE.md) to understand the changes required to migrate your application to v4.\n\n### Main features\n- Predicates based claim verification\n- Support for Instant API and Lambda functions\n- Improved Exceptions API\n- Consistent null handling\n\nSee the changelog entries for additional details.\n\n## [4.0.0-beta.0](https://github.com/auth0/java-jwt/tree/4.0.0-beta.0) (2022-05-06)\n[Full Changelog](https://github.com/auth0/java-jwt/compare/3.19.2...4.0.0-beta.0)\n\nüí° Check the [Migration Guide](https://github.com/auth0/java-jwt/blob/master/MIGRATION_GUIDE.md) to understand the changes required to migrate your application to v4.\n\n**Added**\n- JavaDoc updated [\\#577](https://github.com/auth0/java-jwt/pull/577) ([poovamraj](https://github.com/poovamraj))\n- Add Migration Guide [\\#576](https://github.com/auth0/java-jwt/pull/576) ([jimmyjames](https://github.com/jimmyjames))\n- Expose claim name and header constants [\\#574](https://github.com/auth0/java-jwt/pull/574) ([jimmyjames](https://github.com/jimmyjames))\n- Added support for multiple checks on a single claim [\\#573](https://github.com/auth0/java-jwt/pull/573) ([poovamraj](https://github.com/poovamraj))\n- Improved README structure [\\#571](https://github.com/auth0/java-jwt/pull/571) ([poovamraj](https://github.com/poovamraj))\n- Improved Exception Handling [\\#568](https://github.com/auth0/java-jwt/pull/568) ([poovamraj](https://github.com/poovamraj))\n- Predicate based Claim verification [\\#562](https://github.com/auth0/java-jwt/pull/562) ([poovamraj](https://github.com/poovamraj))\n- Add lint checks [\\#561](https://github.com/auth0/java-jwt/pull/561) ([poovamraj](https://github.com/poovamraj))\n- Support date/time custom claim validation [\\#538](https://github.com/auth0/java-jwt/pull/538) ([jimmyjames](https://github.com/jimmyjames))\n- Add Instant support [\\#537](https://github.com/auth0/java-jwt/pull/537) ([jimmyjames](https://github.com/jimmyjames))\n- Testing Java LTS versions [\\#536](https://github.com/auth0/java-jwt/pull/536) ([poovamraj](https://github.com/poovamraj))\n\n**Changed**\n- Null claim handling [\\#564](https://github.com/auth0/java-jwt/pull/564) ([poovamraj](https://github.com/poovamraj))\n- Undeprecate Single Key Constructor for Algorithms [\\#551](https://github.com/auth0/java-jwt/pull/551) ([poovamraj](https://github.com/poovamraj))\n- Update documentation and undeprecate single content sign methods [\\#550](https://github.com/auth0/java-jwt/pull/550) ([poovamraj](https://github.com/poovamraj))\n- Update test deps [\\#539](https://github.com/auth0/java-jwt/pull/539) ([jimmyjames](https://github.com/jimmyjames))\n\n**Deprecated**\n- Deprecate secp256k1 curve for EC Algorithms [\\#540](https://github.com/auth0/java-jwt/pull/540) ([poovamraj](https://github.com/poovamraj))\n\n**Removed**\n- Remove ES256K support [\\#556](https://github.com/auth0/java-jwt/pull/556) ([poovamraj](https://github.com/poovamraj))\n- Remove impl package export in module-info [\\#553](https://github.com/auth0/java-jwt/pull/553) ([poovamraj](https://github.com/poovamraj))\n- Remove internal Clock [\\#533](https://github.com/auth0/java-jwt/pull/533) ([jimmyjames](https://github.com/jimmyjames))\n\n**Fixed**\n- Improve keyprovider reliability [\\#570](https://github.com/auth0/java-jwt/pull/570) ([poovamraj](https://github.com/poovamraj))\n- Support date/time custom claim validation [\\#538](https://github.com/auth0/java-jwt/pull/538) ([jimmyjames](https://github.com/jimmyjames))\n- Test only change - remove unnecessary throws clause from tests [\\#535](https://github.com/auth0/java-jwt/pull/535) ([jimmyjames](https://github.com/jimmyjames))\n\n**Security**\n- Updated documentation regarding HMAC Key length [\\#580](https://github.com/auth0/java-jwt/pull/580) ([poovamraj](https://github.com/poovamraj))\n\n**Breaking changes**\n- Added support for multiple checks on a single claim [\\#573](https://github.com/auth0/java-jwt/pull/573) ([poovamraj](https://github.com/poovamraj))\n- Improve keyprovider reliability [\\#570](https://github.com/auth0/java-jwt/pull/570) ([poovamraj](https://github.com/poovamraj))\n- Remove ES256K support [\\#556](https://github.com/auth0/java-jwt/pull/556) ([poovamraj](https://github.com/poovamraj))\n- Remove impl package export in module-info [\\#553](https://github.com/auth0/java-jwt/pull/553) ([poovamraj](https://github.com/poovamraj))\n- Fix header claims serialization [\\#549](https://github.com/auth0/java-jwt/pull/549) ([jimmyjames](https://github.com/jimmyjames))\n- Serialize dates in collections as seconds since epoch [\\#534](https://github.com/auth0/java-jwt/pull/534) ([jimmyjames](https://github.com/jimmyjames))\n- Replace com.auth0.jwt.interfaces.Clock with java.time.Clock [\\#532](https://github.com/auth0/java-jwt/pull/532) ([jimmyjames](https://github.com/jimmyjames))\n\n## [3.19.2](https://github.com/auth0/java-jwt/tree/3.19.2) (2022-05-05)\n[Full Changelog](https://github.com/auth0/java-jwt/compare/3.19.1...3.19.2)\n\n**Security**\n- [SDK-3311] Added protection against CVE-2022-21449 [\\#579](https://github.com/auth0/java-jwt/pull/579) ([poovamraj](https://github.com/poovamraj))\n\n## [3.19.1](https://github.com/auth0/java-jwt/tree/3.19.1) (2022-03-30)\n[Full Changelog](https://github.com/auth0/java-jwt/compare/3.19.0...3.19.1)\n\n**Security**\n- Security: Bump `jackson-databind` to 2.13.2.2 [\\#566](https://github.com/auth0/java-jwt/pull/566) ([evansims](https://github.com/evansims))\n\n## [3.19.0](https://github.com/auth0/java-jwt/tree/3.19.0) (2022-03-14)\n[Full Changelog](https://github.com/auth0/java-jwt/compare/3.18.3...3.19.0)\n\n**Deprecated**\n- Deprecate ES256K Algorithm [\\#543](https://github.com/auth0/java-jwt/pull/543) ([poovamraj](https://github.com/poovamraj))\n\n**Fixed**\n- fix typos in JWTVerifier#verify docstring [\\#526](https://github.com/auth0/java-jwt/pull/526) ([OdunlamiZO](https://github.com/OdunlamiZO))\n\n**Security**\n- Bump `jackson-databind` dependency to 2.13.2 [\\#542](https://github.com/auth0/java-jwt/pull/542) ([evansims](https://github.com/evansims))\n\n## [3.18.3](https://github.com/auth0/java-jwt/tree/3.18.3) (2022-01-13)\n[Full Changelog](https://github.com/auth0/java-jwt/compare/3.18.2...3.18.3)\n\n**Security**\n- Update jackson dependency [\\#523](https://github.com/auth0/java-jwt/pull/523) ([poovamraj](https://github.com/poovamraj))\n\n## [3.18.2](https://github.com/auth0/java-jwt/tree/3.18.2) (2021-09-16)\n[Full Changelog](https://github.com/auth0/java-jwt/compare/3.18.1...3.18.2)\n\n**Fixed**\n- [SDK-2758] Restore withIssuer [\\#513](https://github.com/auth0/java-jwt/pull/513) ([jimmyjames](https://github.com/jimmyjames))\n- [SDK-2751] Serialize audience claim when a List [\\#512](https://github.com/auth0/java-jwt/pull/512) ([jimmyjames](https://github.com/jimmyjames))\n\n## [3.18.1](https://github.com/auth0/java-jwt/tree/3.18.1) (2021-07-06)\n[Full Changelog](https://github.com/auth0/java-jwt/compare/3.18.0...3.18.1)\n\n**Fixed**\n- Fix min JDK version regression [\\#504](https://github.com/auth0/java-jwt/pull/504) ([lbalmaceda](https://github.com/lbalmaceda))\n\n## [3.18.0](https://github.com/auth0/java-jwt/tree/3.18.0) (2021-07-05)\n[Full Changelog](https://github.com/auth0/java-jwt/compare/3.17.0...3.18.0)\n\n**Changed**\n- Update OSS release plugin version [\\#501](https://github.com/auth0/java-jwt/pull/501) ([lbalmaceda](https://github.com/lbalmaceda))\n\n## [3.17.0](https://github.com/auth0/java-jwt/tree/3.17.0) (2021-06-25)\n[Full Changelog](https://github.com/auth0/java-jwt/compare/3.16.0...3.17.0)\n\n**Added**\n- Add module system support [\\#484](https://github.com/auth0/java-jwt/pull/484) ([XakepSDK](https://github.com/XakepSDK))\n\n## [3.16.0](https://github.com/auth0/java-jwt/tree/3.16.0) (2021-05-10)\n[Full Changelog](https://github.com/auth0/java-jwt/compare/3.15.0...3.16.0)\n\n**Changed**\n- Improve Javadoc generation [\\#496](https://github.com/auth0/java-jwt/pull/496) ([Marcono1234](https://github.com/Marcono1234))\n- Add package-info.java for internal `impl` package [\\#495](https://github.com/auth0/java-jwt/pull/495) ([Marcono1234](https://github.com/Marcono1234))\n\n## [3.15.0](https://github.com/auth0/java-jwt/tree/3.15.0) (2021-04-05)\n[Full Changelog](https://github.com/auth0/java-jwt/compare/3.14.0...3.15.0)\n\n**Changed**\n- Remove jcenter [\\#482](https://github.com/auth0/java-jwt/pull/482) ([jimmyjames](https://github.com/jimmyjames))\n- Move form commons-codec Base64 to j.u.Base64 [\\#478](https://github.com/auth0/java-jwt/pull/478) ([XakepSDK](https://github.com/XakepSDK))\n\n## [3.14.0](https://github.com/auth0/java-jwt/tree/3.14.0) (2021-02-26)\n[Full Changelog](https://github.com/auth0/java-jwt/compare/3.13.0...3.14.0)\n\n**Added**\n- Add withPayload to JWTCreator.Builder [\\#475](https://github.com/auth0/java-jwt/pull/475) ([jimmyjames](https://github.com/jimmyjames))\n\n## [3.13.0](https://github.com/auth0/java-jwt/tree/3.13.0) (2021-02-05)\n[Full Changelog](https://github.com/auth0/java-jwt/compare/3.12.1...3.13.0)\n\n**Added**\n- Add ability to verify audience contains at least one of those expected [\\#472](https://github.com/auth0/java-jwt/pull/472) ([jimmyjames](https://github.com/jimmyjames))\n- Add toString to Claim objects [SDK-2225] [\\#469](https://github.com/auth0/java-jwt/pull/469) ([jimmyjames](https://github.com/jimmyjames))\n\n## [3.12.1](https://github.com/auth0/java-jwt/tree/3.12.1) (2021-01-20)\n[Full Changelog](https://github.com/auth0/java-jwt/compare/3.12.0...3.12.1)\n\n**Changed**\n- Update jackson-databind to 2.11.0 [\\#464](https://github.com/auth0/java-jwt/pull/464) ([darveshsingh](https://github.com/darveshsingh))\n\n## [3.12.0](https://github.com/auth0/java-jwt/tree/3.12.0) (2020-12-18)\n[Full Changelog](https://github.com/auth0/java-jwt/compare/3.11.0...3.12.0)\n\n**Changed**\n- Thread-safe classes should be Shared statically [\\#462](https://github.com/auth0/java-jwt/pull/462) ([LeeHainie](https://github.com/LeeHainie))\n\n**Security**\n- Update jackson-databind to 2.10.5.1 (fixes CVE-2020-25649) [\\#463](https://github.com/auth0/java-jwt/pull/463) ([overheadhunter](https://github.com/overheadhunter))\n\n**Breaking changes**\n- Target Java 8 [\\#455](https://github.com/auth0/java-jwt/pull/455) ([lbalmaceda](https://github.com/lbalmaceda))\n\n## [3.11.0](https://github.com/auth0/java-jwt/tree/3.11.0) (2020-09-25)\n[Full Changelog](https://github.com/auth0/java-jwt/compare/3.10.3...3.11.0)\n\n**Added**\n- Add ability to verify claim presence [\\#442](https://github.com/auth0/java-jwt/pull/442) ([jimmyjames](https://github.com/jimmyjames))\n- Add Support for secp256k1 algorithms (AKA ES256K) [\\#439](https://github.com/auth0/java-jwt/pull/439) ([jimmyjames](https://github.com/jimmyjames))\n\n**Fixed**\n- Fix and document thread-safety [\\#427](https://github.com/auth0/java-jwt/pull/427) ([lbalmaceda](https://github.com/lbalmaceda))\n- Wrap IllegalArgumentException into JWTDecodeException [\\#426](https://github.com/auth0/java-jwt/pull/426) ([lbalmaceda](https://github.com/lbalmaceda))\n\n## [3.10.3](https://github.com/auth0/java-jwt/tree/3.10.3) (2020-04-24)\n[Full Changelog](https://github.com/auth0/java-jwt/compare/3.10.2...3.10.3)\n\n**Fixed**\n- Fixed an NPE on null map and list claims [\\#417](https://github.com/auth0/java-jwt/pull/417) ([Vorotyntsev](https://github.com/Vorotyntsev))\n\n## [3.10.2](https://github.com/auth0/java-jwt/tree/3.10.2) (2020-03-27)\n[Full Changelog](https://github.com/auth0/java-jwt/compare/3.10.1...3.10.2)\n\n**Fixed**\n- JavaDoc fix [\\#413](https://github.com/auth0/java-jwt/pull/413) ([jimmyjames](https://github.com/jimmyjames))\n- Check varargs null values in JWTVerifier [\\#412](https://github.com/auth0/java-jwt/pull/412) ([jimmyjames](https://github.com/jimmyjames))\n\n## [3.10.1](https://github.com/auth0/java-jwt/tree/3.10.1) (2020-03-13)\n[Full Changelog](https://github.com/auth0/java-jwt/compare/3.10.0...3.10.1)\n\n**Changed**\n- Update Jackson and Commons Codec dependencies [\\#407](https://github.com/auth0/java-jwt/pull/407) ([jimmyjames](https://github.com/jimmyjames))\n\n**Security**\n- Update jackson-databind to 2.10.2 [\\#399](https://github.com/auth0/java-jwt/pull/399) ([gexclaude](https://github.com/gexclaude))\n\n## [3.10.0](https://github.com/auth0/java-jwt/tree/3.10.0) (2020-02-14)\n[Full Changelog](https://github.com/auth0/java-jwt/compare/3.9.0...3.10.0)\n**Closed issues**\n- NullPointerException when the claim doesn't exist in the token [\\#384](https://github.com/auth0/java-jwt/issues/384)\n\n**Added**\n- Add Javadoc URL and badge to the README [\\#382](https://github.com/auth0/java-jwt/pull/382) ([lbalmaceda](https://github.com/lbalmaceda))\n- Allow to customize the typ header claim [\\#381](https://github.com/auth0/java-jwt/pull/381) ([lbalmaceda](https://github.com/lbalmaceda))\n- JWTCreator for basic types [\\#282](https://github.com/auth0/java-jwt/pull/282) ([skjolber](https://github.com/skjolber))\n- Support verification of Long[] datatype like in JWTCreator [\\#278](https://github.com/auth0/java-jwt/pull/278) ([skjolber](https://github.com/skjolber))\n\n**Changed**\n- Update to Gradle 6.1.1 [\\#389](https://github.com/auth0/java-jwt/pull/389) ([jimmyjames](https://github.com/jimmyjames))\n\n**Fixed**\n- Handle missing expected array claim [\\#393](https://github.com/auth0/java-jwt/pull/393) ([lbalmaceda](https://github.com/lbalmaceda))\n- Update tests to use valid Base64 URL-encoded tokens [\\#386](https://github.com/auth0/java-jwt/pull/386) ([jimmyjames](https://github.com/jimmyjames))\n\n## [3.9.0](https://github.com/auth0/java-jwt/tree/3.9.0) (2020-01-02)\n[Full Changelog](https://github.com/auth0/java-jwt/compare/3.8.3...3.9.0)\n\n**Added**\n- Support serialization of DecodedJWT [\\#370](https://github.com/auth0/java-jwt/pull/370) ([jimmyjames](https://github.com/jimmyjames))\n\n**Fixed**\n- Fixing JwtCreator builder when setting headers as a map [\\#320](https://github.com/auth0/java-jwt/pull/320) ([maxbalan](https://github.com/maxbalan))\n\n## [3.8.3](https://github.com/auth0/java-jwt/tree/3.8.3) (2019-09-25)\n[Full Changelog](https://github.com/auth0/java-jwt/compare/3.8.2...3.8.3)\n\n**Security**\n- Fix: updated jackson-databind to 2.10.0.pr3 to block CVE [\\#356](https://github.com/auth0/java-jwt/pull/356) ([danbrodsky](https://github.com/danbrodsky))\n\n## [3.8.2](https://github.com/auth0/java-jwt/tree/3.8.2) (2019-08-15)\n[Full Changelog](https://github.com/auth0/java-jwt/compare/3.8.1...3.8.2)\n\n**Security**\n- Fix: updated jackson-databind to 2.9.9.3 to block CVE [\\#347](https://github.com/auth0/java-jwt/pull/347) ([danbrodsky](https://github.com/danbrodsky))\n\n## [3.8.1](https://github.com/auth0/java-jwt/tree/3.8.1) (2019-05-22)\n[Full Changelog](https://github.com/auth0/java-jwt/compare/3.8.0...3.8.1)\n\n**Security**\n- Bump dependencies and fix security issue [\\#337](https://github.com/auth0/java-jwt/pull/337) ([lbalmaceda](https://github.com/lbalmaceda))\n\n## [3.8.0](https://github.com/auth0/java-jwt/tree/3.8.0) (2019-03-14)\n[Full Changelog](https://github.com/auth0/java-jwt/compare/3.7.0...3.8.0)\n\n**Added**\n- Support multiple issuers #246 [\\#288](https://github.com/auth0/java-jwt/pull/288) ([itdevelopmentapps](https://github.com/itdevelopmentapps))\n\n## [3.7.0](https://github.com/auth0/java-jwt/tree/3.7.0) (2019-01-29)\n[Full Changelog](https://github.com/auth0/java-jwt/compare/3.6.0...3.7.0)\n\n**Added**\n- Performance improvements [\\#255](https://github.com/auth0/java-jwt/pull/255) ([skjolber](https://github.com/skjolber))\n\n## [3.6.0](https://github.com/auth0/java-jwt/tree/3.6.0) (2019-01-24)\n[Full Changelog](https://github.com/auth0/java-jwt/compare/3.5.0...3.6.0)\n\n**Added**\n- Allow to skip \"issued at\" validation [\\#297](https://github.com/auth0/java-jwt/pull/297) ([complanboy2](https://github.com/complanboy2))\n\n## [3.5.0](https://github.com/auth0/java-jwt/tree/3.5.0) (2019-01-03)\n[Full Changelog](https://github.com/auth0/java-jwt/compare/3.4.1...3.5.0)\n\n**Added**\n- Verify a DecodedJWT  [\\#308](https://github.com/auth0/java-jwt/pull/308) ([martinoconnor](https://github.com/martinoconnor))\n\n**Changed**\n- Add an interface for JWTVerifier. [\\#205](https://github.com/auth0/java-jwt/pull/205) ([jebbench](https://github.com/jebbench))\n\n**Fixed**\n- Remove unnecessary cast between long/double and floor call [\\#296](https://github.com/auth0/java-jwt/pull/296) ([jhorstmann](https://github.com/jhorstmann))\n\n**Security**\n- Bump jackson-databind to patch security issues [\\#309](https://github.com/auth0/java-jwt/pull/309) ([lbalmaceda](https://github.com/lbalmaceda))\n\n## [3.4.1](https://github.com/auth0/java-jwt/tree/3.4.1) (2018-10-24)\n[Full Changelog](https://github.com/auth0/java-jwt/compare/3.4.0...3.4.1)\n\n**Security**\n- Update jackson-databind dependency [\\#292](https://github.com/auth0/java-jwt/pull/292) ([lbalmaceda](https://github.com/lbalmaceda))\n\n## [3.4.0](https://github.com/auth0/java-jwt/tree/3.4.0) (2018-06-13)\n[Full Changelog](https://github.com/auth0/java-jwt/compare/3.3.0...3.4.0)\n\n**Breaking Changes**\n- Fix for [\\#236](https://github.com/auth0/java-jwt/pull/236) - refactored HMACAlgorithm so that it doesn't throw an UnsupportedEncodingException [\\#242](https://github.com/auth0/java-jwt/pull/242) ([obecker](https://github.com/obecker)). \n\nClients using the following methods may need to update their code to not catch an `UnsupportedEncodingException`:\n- `public static Algorithm HMAC384(String secret)`\n- `public static Algorithm HMAC256(String secret)`\n- `public static Algorithm HMAC512(String secret)`\n\n**Changed**\n- Throw JWTDecodeException when date claim format is invalid [\\#241](https://github.com/auth0/java-jwt/pull/241) ([lbalmaceda](https://github.com/lbalmaceda))\n\n**Security**\n- Bump Jackson dependency [\\#244](https://github.com/auth0/java-jwt/pull/244) ([skjolber](https://github.com/skjolber))\n\n## [3.3.0](https://github.com/auth0/java-jwt/tree/3.3.0) (2017-11-06)\n[Full Changelog](https://github.com/auth0/java-jwt/compare/3.2.0...3.3.0)\n**Closed issues**\n- Wrong ES256 signature length [\\#187](https://github.com/auth0/java-jwt/issues/187)\n\n**Fixed**\n- Rework ECDSA [\\#212](https://github.com/auth0/java-jwt/pull/212) ([lbalmaceda](https://github.com/lbalmaceda))\n- Instantiate exception only when required [\\#198](https://github.com/auth0/java-jwt/pull/198) ([rumdidumdum](https://github.com/rumdidumdum))\n\n## [3.2.0](https://github.com/auth0/java-jwt/tree/3.2.0) (2017-05-04)\n[Full Changelog](https://github.com/auth0/java-jwt/compare/3.1.0...3.2.0)\n**Closed issues**\n- Claim.isNull() returns true for JSON Object constructed claims [\\#160](https://github.com/auth0/java-jwt/issues/160)\n- Incorrectly rejects whitespace after JSON header as invalid [\\#144](https://github.com/auth0/java-jwt/issues/144)\n- No token type [\\#136](https://github.com/auth0/java-jwt/issues/136)\n- Timestamps are limited by Integer/int to 2038-01-19T04:14:07.000+0100 [\\#132](https://github.com/auth0/java-jwt/issues/132)\n\n**Added**\n- Refactor KeyProvider to receive the \"Key Id\" [\\#167](https://github.com/auth0/java-jwt/pull/167) ([lbalmaceda](https://github.com/lbalmaceda))\n- Add Sign/Verify of Long type claims [\\#157](https://github.com/auth0/java-jwt/pull/157) ([vrancic](https://github.com/vrancic))\n- added date validation dedicated exception [\\#155](https://github.com/auth0/java-jwt/pull/155) ([Spyna](https://github.com/Spyna))\n- Allow to get a Claim as Map [\\#152](https://github.com/auth0/java-jwt/pull/152) ([lbalmaceda](https://github.com/lbalmaceda))\n- Add Algorithm KeyProvider interface [\\#149](https://github.com/auth0/java-jwt/pull/149) ([lbalmaceda](https://github.com/lbalmaceda))\n- Instantiate RSA/EC Algorithm with both keys [\\#147](https://github.com/auth0/java-jwt/pull/147) ([lbalmaceda](https://github.com/lbalmaceda))\n- Add Key Id setter and set JWT Type after signing [\\#138](https://github.com/auth0/java-jwt/pull/138) ([lbalmaceda](https://github.com/lbalmaceda))\n\n**Changed**\n- Change the JWT.decode() return type to DecodedJWT [\\#150](https://github.com/auth0/java-jwt/pull/150) ([lbalmaceda](https://github.com/lbalmaceda))\n\n**Fixed**\n- Fix Claim.isNull() method for JSON Objects [\\#161](https://github.com/auth0/java-jwt/pull/161) ([lbalmaceda](https://github.com/lbalmaceda))\n- Accept blanks, new line and carriage returns on JSON [\\#151](https://github.com/auth0/java-jwt/pull/151) ([lbalmaceda](https://github.com/lbalmaceda))\n- Fix Date value conversion [\\#137](https://github.com/auth0/java-jwt/pull/137) ([lbalmaceda](https://github.com/lbalmaceda))\n\n## [3.1.0](https://github.com/auth0/java-jwt/tree/3.1.0) (2017-01-04)\n[Full Changelog](https://github.com/auth0/java-jwt/compare/3.0.2...3.1.0)\n\n**Added**\n- Make Clock customization accessible for verification [\\#125](https://github.com/auth0/java-jwt/pull/125) ([lbalmaceda](https://github.com/lbalmaceda))\n- Add getter for all the Payload's Claims [\\#124](https://github.com/auth0/java-jwt/pull/124) ([lbalmaceda](https://github.com/lbalmaceda))\n- Accept Array type on verification and creation. [\\#123](https://github.com/auth0/java-jwt/pull/123) ([lbalmaceda](https://github.com/lbalmaceda))\n\n## [3.0.2](https://github.com/auth0/java-jwt/tree/3.0.2) (2016-12-13)\n[Full Changelog](https://github.com/auth0/java-jwt/compare/3.0.1...3.0.2)\n\n**Fixed**\n- Add targetCompatibility to 1.7 [\\#121](https://github.com/auth0/java-jwt/pull/121) ([hzalaz](https://github.com/hzalaz))\n\n## [3.0.1](https://github.com/auth0/java-jwt/tree/3.0.0) (2016-12-05)\n[Full Changelog](https://github.com/auth0/java-jwt/compare/3.0.0...3.0.1)\n\nUpdate to allow sync with Maven Central\n\n## [3.0.0](https://github.com/auth0/java-jwt/tree/3.0.0) (2016-12-05)\n\nReimplemented java-jwt to improve API and include more signing algorithms\n\n## Installation\n\n### Maven\n\n```xml\n<dependency>\n    <groupId>com.auth0</groupId>\n    <artifactId>java-jwt</artifactId>\n    <version>3.0.0</version>\n</dependency>\n```\n\n### Gradle\n\n```gradle\ncompile 'com.auth0:java-jwt:3.0.0'\n```\n\n## Available Algorithms\n\nThe library implements JWT Verification and Signing using the following algorithms:\n\n| JWS | Algorithm | Description |\n| :-------------: | :-------------: | :----- |\n| HS256 | HMAC256 | HMAC with SHA-256 |\n| HS384 | HMAC384 | HMAC with SHA-384 |\n| HS512 | HMAC512 | HMAC with SHA-512 |\n| RS256 | RSA256 | RSASSA-PKCS1-v1_5 with SHA-256 |\n| RS384 | RSA384 | RSASSA-PKCS1-v1_5 with SHA-384 |\n| RS512 | RSA512 | RSASSA-PKCS1-v1_5 with SHA-512 |\n| ES256 | ECDSA256 | ECDSA with curve P-256 and SHA-256 |\n| ES384 | ECDSA384 | ECDSA with curve P-384 and SHA-384 |\n| ES512 | ECDSA512 | ECDSA with curve P-521 and SHA-512 |\n"
        },
        {
          "name": "EXAMPLES.md",
          "type": "blob",
          "size": 4.7109375,
          "content": "# Examples using java-jwt\n\n* [Inspecting a DecodedJWT](#inspecting-a-decodedjwt)\n* [DateTime Claim Validation](#datetime-claim-validation)\n* [Using custom claims](#using-custom-claims)\n* [Using a KeyProvider](#using-a-keyprovider)\n\n## Inspecting a DecodedJWT\n\nThe successful verification of a JWT returns a `DecodedJWT`, from which you can obtain its contents.\n\n```java\nDecodedJWT jwt = JWT.require(algorithm)\n        .build()\n        .verify(\"a.b.c\");\n\n// standard claims can be retrieved through first-class methods\nString subject = jwt.getSubject();\nString aud = jwt.getAudience();\n// ...\n\n// custom claims can also be obtained\nString customStringClaim = jwt.getClaim(\"custom-string-claim\").asString();\n```\n\nWhen retrieving custom claims, a [Claim](https://javadoc.io/doc/com.auth0/java-jwt/latest/com/auth0/jwt/interfaces/Claim.html) is returned, which can then be used to obtain the value depending on the value's underlying type.\n\n## DateTime Claim Validation\n\nA JWT token may include DateNumber fields that can be used to validate that:\n\n* The token was issued in a past date `\"iat\" < NOW`\n* The token hasn't expired yet `\"exp\" > NOW`\n* The token can already be used. `\"nbf\" < NOW`\n\nWhen verifying a JWT, the standard DateTime claims are validated by default. A `JWTVerificationException` is thrown if any of the claim values are invalid.\n\nTo specify a **leeway** in which the JWT should still be considered valid, use the `acceptLeeway()` method in the `JWTVerifier` builder and pass a positive seconds value. This applies to every item listed above.\n\n```java\nJWTVerifier verifier = JWT.require(algorithm)\n    .acceptLeeway(1) // 1 sec for nbf, iat and exp\n    .build();\n```\n\nYou can also specify a custom value for a given DateTime claim and override the default one for only that claim.\n\n```java\nJWTVerifier verifier = JWT.require(algorithm)\n    .acceptLeeway(1)   //1 sec for nbf and iat\n    .acceptExpiresAt(5)   //5 secs for exp\n    .build();\n```\n\nIf you need to test this behavior in your application, cast the `Verification` instance to a `BaseVerification` to gain visibility of the `verification.build()` method that accepts a `java.time.Clock`. e.g.:\n\n```java\nBaseVerification verification = (BaseVerification) JWT.require(algorithm)\n    .acceptLeeway(1)\n    .acceptExpiresAt(5);\nprivate final Clock mockNow = Clock.fixed(Instant.ofEpochSecond(1477592), ZoneId.of(\"UTC\"));    \nJWTVerifier verifier = verification.build(clock);\n```\n\n## Using custom claims\n\n### JWT creation\nA JWT can be built with custom payload and header claims, by using the `withHeader` and `withClaim` methods.\n\n```java\nString jwt = JWT.create()\n        .withHeader(headerMap)\n        .withClaim(\"string-claim\", \"string-value\")\n        .withClaim(\"number-claim\", 42)\n        .withClaim(\"bool-claim\", true)\n        .withClaim(\"datetime-claim\", Instant.now())\n        .sign(algorithm);\n```\n\nSee the [JavaDoc](https://javadoc.io/doc/com.auth0/java-jwt/latest/com/auth0/jwt/JWTCreator.Builder.html) for all available custom claim methods.\n\n### JWT verification\n\nYou can also verify a JWT's custom claims:\n\n```java\nJWTVerifier verifier = JWT.require(algorithm)\n        .withClaim(\"number-claim\", 123)\n        .withClaimPresence(\"some-claim-that-just-needs-to-be-present\")\n        .withClaim(\"predicate-claim\", (claim, decodedJWT) -> \"custom value\".equals(claim.asString()))\n        .build();\nDecodedJWT jwt = verifier.verify(\"my.jwt.token\");\n```\n\nSee the [JavaDoc](https://javadoc.io/doc/com.auth0/java-jwt/latest/com/auth0/jwt/JWTVerifier.BaseVerification.html) for all available custom claim verification methods.\n\n## Using a KeyProvider\n\nA `KeyProvider` can be used to obtain the keys needed for signing and verifying a JWT. How these keys are constructed are beyond the scope of this library, but the [jwks-rsa-java](https://github.com/auth0/jwks-rsa-java) library provides the ability to obtain the public key from a JWK.\nThe example below demonstrates this for the RSA algorithm (`ECDSAKeyProvider` can be used for ECDSA).\n\n```java\nJwkProvider provider = new JwkProviderBuilder(\"https://samples.auth0.com/\")\n        .cached(10, 24, TimeUnit.HOURS)\n        .rateLimited(10, 1, TimeUnit.MINUTES)\n        .build();\nfinal RSAPrivateKey privateKey = // private key\nfinal String privateKeyId = // private key ID\n\nRSAKeyProvider keyProvider = new RSAKeyProvider() {\n    @Override\n    public RSAPublicKey getPublicKeyById(String kid) {\n        return (RSAPublicKey) jwkProvider.get(kid).getPublicKey();\n    }\n\n    @Override\n    public RSAPrivateKey getPrivateKey() {\n        // return the private key used \n        return rsaPrivateKey;\n    }\n\n    @Override\n    public String getPrivateKeyId() {\n        return rsaPrivateKeyId;\n    }\n};\n\nAlgorithm algorithm = Algorithm.RSA256(keyProvider);\n//Use the Algorithm to create and verify JWTs.\n```\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0947265625,
          "content": "The MIT License (MIT)\n \nCopyright (c) 2015 Auth0, Inc. <support@auth0.com> (http://auth0.com)\n \nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n \nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n \nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "MIGRATION_GUIDE.md",
          "type": "blob",
          "size": 5.955078125,
          "content": "# Migration Guide\n\n## Upgrading from v3.x -> v4.0\n\nThe version 4 release contains several improvements:\n\n- Support for `java.time.Instant` when creating or verifying JWTs with Numeric Date claim values.\n- Improvements to JWT claim validation, including support for custom claim validation using Predicates.\n- Improved exception handling when validating JWTs, to better inform of the reason for failed validation.\n- Consistent handling of `null` claim values both when creating and validation JWTs.\n\nThis guide captures the changes you should be aware of when planning and upgrading to version 4.\n\n### Compile or runtime breaking changes\n\n**Classes or methods removed:**\n- The `impl` package has been removed as an export in `module-info.java`. This package contains implementation-specific code that may change at any point.\n- Support for the ES256K algorithm has been removed, as it is disabled in Java 15+. The `Algorithm#ECDSA256K(ECDSAKeyProvider keyProvider)` and `Algorithm#ECDSA256K(ECPublicKey publicKey, ECPrivateKey privateKey)` methods have been removed.\n- `com.auth0.jwt.interfaces.Clock` has been removed. Instead, an implementation of `java.time.Clock` can be passed to the `BaseVerification` for testing purposes.\n- `com.auth0.jwt.impl.NullClaim` has been removed. `Claim#isNull` can be used to determine if a claim's value is `null`.\n- `com.auth0.jwt.impl.PublicClaims` was removed, and replaced by `com.auth0.jwt.RegisteredClaims` and `com.auth0.jwt.HeaderParams`.\n- `com.auth0.jwt.interfaces.Verification#withAnyOfAudience` no longer provides a default implementation.\n\n### Behavioral potentially breaking changes\n\n#### JWT creation\n\n- All date/time claim values are now serialized as **seconds since the epoch**, in both the payload and header. In version 3, date/time claims nested in a list or map, as well as any header parameters with date/time values, were serialized as milliseconds since the epoch. \n- When creating a JWT, passing `null` as the value no longer removes the claim if it was previously added to the builder. It now adds the claim with a `null` value.\n\n#### JWT validation\n\n- In version 3, specifying multiple claim expectations for the same claim name would override any previous expectations for that claim. In version 4, all expectations for that claim will be validated.\n- In version 3, passing `null` for the value of a claim expectation would remove that expectation from the validation. In version 4, passing `null` does not remove that expectation, but instead validates that the claim has the literal value `null`.\n- When validating a JWT, if an expected claim is present in the JWT but contains a value different from the one expected, an `IncorrectClaimException` (subclass of `InvalidClaimException`) will now be thrown instead of an `InvalidClaimException`.\n- When validating a JWT, if an expected claim is not present in the JWT, an `MissingClaimException` (subclass of `InvalidClaimException`) will now be thrown instead of an `InvalidClaimException`.\n- `withClaimPresence(String claimName)` now validates that the claim is present in the JWT, and a claim with a `null` value is considered present. Previously, a claim with a value of `null` would be considered as missing and fail the validation.\n- When validating a date/time claim value, the validation no longer checks for strict equality of the claim's value and the provided `Date` (or `Instant`). Instead, the expected `Date` or `Instant` will be compared to the claim's value only considering seconds (because JWT date/time claims are represented as seconds since the epoch).\n\n#### Claim changes\n\n- `com.auth0.jwt.interfaces.Claim#isNull()` now returns true only if the claim is present and its value is `null`. Previously, it returned true if the claim was present and its value was `null`, or if the claim was not present in the JWT. To check if the claim is present or not in the JWT, use `isMissing()`.\n\n### New classes or methods\n\n#### `IncorrectClaimException` added\n\nThis class extends `InvalidClaimException` and represents that when validating a JWT, an expected claim exists in the JWT but does not match the expected value.\n\n#### `MissingClaimException` added\n\nThis class extends `InvalidClaimException` and represents that when validating a JWT, an expected claim is missing from the JWT.\n\n#### `HeaderParams` added\n\nThis class contains constants representing common header parameter names.\n\n#### `RegisteredClaims` added\n\nThis class contains constants representing the registered claim names.\n\n#### `JWTCreator` new methods\n\n- `JWTCreator.Builder#withExpiresAt(Instant expiresAt)` - adds the `exp` claim to the JWT from a `java.time.Instant`.\n- `JWTCreator.Builder#withNotBefore(Instant notBefore)` - adds the `nbf` claim to the JWT from a `java.time.Instant`.\n- `JWTCreator.Builder#withIssuedAt(Instant issuedAt)` - adds the `iat` claim to the JWT from a `java.time.Instant`.\n- `JWTCreator.Builder#withClaim(String claimName, Instant value)` - adds a claim to the JWT from a `java.time.Instant`.\n- `JWTCreator.Builder#withNullClaim(String claimName)` - adds a claim to the JWT with the literal value `null`.\n\n#### `DecodedJWT` new methods\n\n- `Instant getExpiresAtAsInstant()` - Returns a JWT's `exp` claim as a `java.time.Instant`.\n- `Instant getNotBeforeAsInstant()` - Returns a JWT's `nbf` claim as a `java.time.Instant`.\n- `Instant getIssuedAtAsInstant()` - Returns a JWT's `iat` claim as a `java.time.Instant`.\n\n#### `Claim` new methods\n\n- `Instant asInstant()` - Gets a claim as a `java.time.Instant`.\n- `boolean isMissing()` - Returns whether the claim is present or not.\n\n#### `Verification` new methods\n\n- `Verification withClaim(String name, Instant value)` - Adds an expectation that a claim with the provided name has a value equal to the provided `java.time.Instant`.\n- `Verification withClaim(String name, BiPredicate<Claim, DecodedJWT> predicate)` - Allows for a claim to be validated with the supplied predicate. \n- `Verification withNullClaim(String name)` - Adds an expectation that a claim with the provided name has a value equal to the literal `null`.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.173828125,
          "content": "> **Note**\n> As part of our ongoing commitment to best security practices, we have rotated the signing keys used to sign previous releases of this SDK. As a result, new patch builds have been released using the new signing key. Please upgrade at your earliest convenience.\n>\n> While this change won't affect most developers, if you have implemented a dependency signature validation step in your build process, you may notice a warning that past releases can't be verified. This is expected, and a result of the key rotation process. Updating to the latest version will resolve this for you.\n\n![A Java implementation of JSON Web Token (JWT) - RFC 7519.](https://cdn.auth0.com/website/sdks/banners/java-jwt-banner.png)\n\n![Build Status](https://img.shields.io/github/checks-status/auth0/java-jwt/master)\n[![Coverage Status](https://img.shields.io/codecov/c/github/auth0/java-jwt.svg?style=flat-square)](https://codecov.io/github/auth0/java-jwt)\n[![License](http://img.shields.io/:license-mit-blue.svg?style=flat)](https://doge.mit-license.org/)\n[![Maven Central](https://img.shields.io/maven-central/v/com.auth0/java-jwt.svg?style=flat-square)](https://mvnrepository.com/artifact/com.auth0/java-jwt)\n[![javadoc](https://javadoc.io/badge2/com.auth0/auth0/javadoc.svg)](https://javadoc.io/doc/com.auth0/java-jwt)\n\n:books: [Documentation](#documentation) - :rocket: [Getting Started](#getting-started) - :computer: [API Reference](#api-reference) :speech_balloon: [Feedback](#feedback)\n\n## Documentation\n- [Examples](./EXAMPLES.md) - code samples for common java-jwt scenarios.\n- [Docs site](https://www.auth0.com/docs) - explore our docs site and learn more about Auth0.\n\n## Getting Started\n\n### Requirements\n\nThis library is supported for Java LTS versions 8, 11, and 17. For issues on non-LTS versions above 8, consideration will be given on a case-by-case basis.\n\n> `java-jwt` is intended for server-side JVM applications. Android applications should use [JWTDecode.Android](https://github.com/auth0/JWTDecode.Android).\n\n`java-jwt` supports the following algorithms for both signing and verification:\n\n| JWS | Algorithm | Description |\n| :-------------: | :-------------: | :----- |\n| HS256 | HMAC256 | HMAC with SHA-256 |\n| HS384 | HMAC384 | HMAC with SHA-384 |\n| HS512 | HMAC512 | HMAC with SHA-512 |\n| RS256 | RSA256 | RSASSA-PKCS1-v1_5 with SHA-256 |\n| RS384 | RSA384 | RSASSA-PKCS1-v1_5 with SHA-384 |\n| RS512 | RSA512 | RSASSA-PKCS1-v1_5 with SHA-512 |\n| ES256 | ECDSA256 | ECDSA with curve P-256 and SHA-256 |\n| ES384 | ECDSA384 | ECDSA with curve P-384 and SHA-384 |\n| ES512 | ECDSA512 | ECDSA with curve P-521 and SHA-512 |\n\n> Note - Support for ECDSA with curve secp256k1 and SHA-256 (ES256K) has been dropped since it has been [disabled in Java 15](https://www.oracle.com/java/technologies/javase/15-relnote-issues.html#JDK-8237219)\n\n> :warning:  **Important security note:** JVM has a critical vulnerability for ECDSA Algorithms - [CVE-2022-21449](https://nvd.nist.gov/vuln/detail/CVE-2022-21449). Please review the details of the vulnerability and update your environment.\n### Installation\n\nAdd the dependency via Maven:\n\n```xml\n<dependency>\n  <groupId>com.auth0</groupId>\n  <artifactId>java-jwt</artifactId>\n  <version>4.4.0</version>\n</dependency>\n```\n\nor Gradle:\n\n```gradle\nimplementation 'com.auth0:java-jwt:4.4.0'\n```\n\n### Create a JWT\n\nUse `JWT.create()`, configure the claims, and then call `sign(algorithm)` to sign the JWT.\n\nThe example below demonstrates this using the `RS256` signing algorithm:\n\n```java\ntry {\n    Algorithm algorithm = Algorithm.RSA256(rsaPublicKey, rsaPrivateKey);\n    String token = JWT.create()\n        .withIssuer(\"auth0\")\n        .sign(algorithm);\n} catch (JWTCreationException exception){\n    // Invalid Signing configuration / Couldn't convert Claims.\n}\n```\n\n### Verify a JWT\n\nCreate a `JWTVerifier` passing the `Algorithm`, and specify any required claim values.\n\nThe following example uses `RS256` to verify the JWT.\n\n```java\nString token = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXUyJ9.eyJpc3MiOiJhdXRoMCJ9.AbIJTDMFc7yUa5MhvcP03nJPyCPzZtQcGEp-zWfOkEE\";\nDecodedJWT decodedJWT;\ntry {\n    Algorithm algorithm = Algorithm.RSA256(rsaPublicKey, rsaPrivateKey);\n    JWTVerifier verifier = JWT.require(algorithm)\n        // specify any specific claim validations\n        .withIssuer(\"auth0\")\n        // reusable verifier instance\n        .build();\n        \n    decodedJWT = verifier.verify(token);\n} catch (JWTVerificationException exception){\n    // Invalid signature/claims\n}\n```\n\nIf the token has an invalid signature or the Claim requirement is not met, a `JWTVerificationException` will be thrown.\n\nSee the [examples](./EXAMPLES.md) and [JavaDocs](https://javadoc.io/doc/com.auth0/java-jwt/latest) for additional documentation.\n\n## API Reference\n\n- [java-jwt JavaDocs](https://javadoc.io/doc/com.auth0/java-jwt/latest)\n\n## Feedback\n\n### Contributing\n\nWe appreciate feedback and contribution to this repo! Before you get started, please see the following:\n\n- [Auth0's general contribution guidelines](https://github.com/auth0/open-source-template/blob/master/GENERAL-CONTRIBUTING.md)\n- [Auth0's code of conduct guidelines]((https://github.com/auth0/open-source-template/blob/master/CODE-OF-CONDUCT.md))\n\n### Raise an issue\nTo provide feedback or report a bug, [please raise an issue on our issue tracker](https://github.com/auth0/java-jwt/issues).\n\n### Vulnerability Reporting\nPlease do not report security vulnerabilities on the public Github issue tracker. The [Responsible Disclosure Program](https://auth0.com/whitehat) details the procedure for disclosing security issues.\n\n---\n\n<p align=\"center\">\n  <picture>\n    <source media=\"(prefers-color-scheme: light)\" srcset=\"https://cdn.auth0.com/website/sdks/logos/auth0_light_mode.png\"   width=\"150\">\n    <source media=\"(prefers-color-scheme: dark)\" srcset=\"https://cdn.auth0.com/website/sdks/logos/auth0_dark_mode.png\" width=\"150\">\n    <img alt=\"Auth0 Logo\" src=\"./auth0_light_mode.png\" width=\"150\">\n  </picture>\n</p>\n<p align=\"center\">Auth0 is an easy to implement, adaptable authentication and authorization platform. To learn more checkout <a href=\"https://auth0.com/why-auth0\">Why Auth0?</a></p>\n<p align=\"center\">\nThis project is licensed under the MIT license. See the <a href=\"./LICENSE\"> LICENSE</a> file for more info.</p>\n"
        },
        {
          "name": "build.gradle",
          "type": "blob",
          "size": 0.185546875,
          "content": "// Top-level build file where you can add configuration options common to all sub-projects/modules.\n\nallprojects {\n    group = 'com.auth0'\n\n    repositories {\n        mavenCentral()\n    }\n}\n"
        },
        {
          "name": "config",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradle.properties",
          "type": "blob",
          "size": 0.712890625,
          "content": "# Project-wide Gradle settings.\n\n# IDE (e.g. Android Studio) users:\n# Gradle settings configured through the IDE *will override*\n# any settings specified in this file.\n\n# For more details on how to configure your build environment visit\n# http://www.gradle.org/docs/current/userguide/build_environment.html\n\n# Specifies the JVM arguments used for the daemon process.\n# The setting is particularly useful for tweaking memory settings.\norg.gradle.jvmargs=-Xmx1536m\n\n# When configured, Gradle will run in incubating parallel mode.\n# This option should only be used with decoupled projects. More details, visit\n# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects\n# org.gradle.parallel=true\n"
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 5.630859375,
          "content": "#!/usr/bin/env sh\n\n#\n# Copyright 2015 the original author or authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      https://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\n##############################################################################\n##\n##  Gradle start up script for UN*X\n##\n##############################################################################\n\n# Attempt to set APP_HOME\n# Resolve links: $0 may be a link\nPRG=\"$0\"\n# Need this for relative symlinks.\nwhile [ -h \"$PRG\" ] ; do\n    ls=`ls -ld \"$PRG\"`\n    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n    if expr \"$link\" : '/.*' > /dev/null; then\n        PRG=\"$link\"\n    else\n        PRG=`dirname \"$PRG\"`\"/$link\"\n    fi\ndone\nSAVED=\"`pwd`\"\ncd \"`dirname \\\"$PRG\\\"`/\" >/dev/null\nAPP_HOME=\"`pwd -P`\"\ncd \"$SAVED\" >/dev/null\n\nAPP_NAME=\"Gradle\"\nAPP_BASE_NAME=`basename \"$0\"`\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS='\"-Xmx64m\" \"-Xms64m\"'\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=\"maximum\"\n\nwarn () {\n    echo \"$*\"\n}\n\ndie () {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n}\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\nnonstop=false\ncase \"`uname`\" in\n  CYGWIN* )\n    cygwin=true\n    ;;\n  Darwin* )\n    darwin=true\n    ;;\n  MINGW* )\n    msys=true\n    ;;\n  NONSTOP* )\n    nonstop=true\n    ;;\nesac\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n    else\n        JAVACMD=\"$JAVA_HOME/bin/java\"\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=\"java\"\n    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\nfi\n\n# Increase the maximum file descriptors if we can.\nif [ \"$cygwin\" = \"false\" -a \"$darwin\" = \"false\" -a \"$nonstop\" = \"false\" ] ; then\n    MAX_FD_LIMIT=`ulimit -H -n`\n    if [ $? -eq 0 ] ; then\n        if [ \"$MAX_FD\" = \"maximum\" -o \"$MAX_FD\" = \"max\" ] ; then\n            MAX_FD=\"$MAX_FD_LIMIT\"\n        fi\n        ulimit -n $MAX_FD\n        if [ $? -ne 0 ] ; then\n            warn \"Could not set maximum file descriptor limit: $MAX_FD\"\n        fi\n    else\n        warn \"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\"\n    fi\nfi\n\n# For Darwin, add options to specify how the application appears in the dock\nif $darwin; then\n    GRADLE_OPTS=\"$GRADLE_OPTS \\\"-Xdock:name=$APP_NAME\\\" \\\"-Xdock:icon=$APP_HOME/media/gradle.icns\\\"\"\nfi\n\n# For Cygwin or MSYS, switch paths to Windows format before running java\nif [ \"$cygwin\" = \"true\" -o \"$msys\" = \"true\" ] ; then\n    APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`\n    CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`\n\n    JAVACMD=`cygpath --unix \"$JAVACMD\"`\n\n    # We build the pattern for arguments to be converted via cygpath\n    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`\n    SEP=\"\"\n    for dir in $ROOTDIRSRAW ; do\n        ROOTDIRS=\"$ROOTDIRS$SEP$dir\"\n        SEP=\"|\"\n    done\n    OURCYGPATTERN=\"(^($ROOTDIRS))\"\n    # Add a user-defined pattern to the cygpath arguments\n    if [ \"$GRADLE_CYGPATTERN\" != \"\" ] ; then\n        OURCYGPATTERN=\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\"\n    fi\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    i=0\n    for arg in \"$@\" ; do\n        CHECK=`echo \"$arg\"|egrep -c \"$OURCYGPATTERN\" -`\n        CHECK2=`echo \"$arg\"|egrep -c \"^-\"`                                 ### Determine if an option\n\n        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition\n            eval `echo args$i`=`cygpath --path --ignore --mixed \"$arg\"`\n        else\n            eval `echo args$i`=\"\\\"$arg\\\"\"\n        fi\n        i=`expr $i + 1`\n    done\n    case $i in\n        0) set -- ;;\n        1) set -- \"$args0\" ;;\n        2) set -- \"$args0\" \"$args1\" ;;\n        3) set -- \"$args0\" \"$args1\" \"$args2\" ;;\n        4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;\n        5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;\n        6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;\n        7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;\n        8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;\n        9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;\n    esac\nfi\n\n# Escape application args\nsave () {\n    for i do printf %s\\\\n \"$i\" | sed \"s/'/'\\\\\\\\''/g;1s/^/'/;\\$s/\\$/' \\\\\\\\/\" ; done\n    echo \" \"\n}\nAPP_ARGS=`save \"$@\"`\n\n# Collect all arguments for the java command, following the shell quoting and substitution rules\neval set -- $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS \"\\\"-Dorg.gradle.appname=$APP_BASE_NAME\\\"\" -classpath \"\\\"$CLASSPATH\\\"\" org.gradle.wrapper.GradleWrapperMain \"$APP_ARGS\"\n\nexec \"$JAVACMD\" \"$@\"\n"
        },
        {
          "name": "gradlew.bat",
          "type": "blob",
          "size": 2.6982421875,
          "content": "@rem\r\n@rem Copyright 2015 the original author or authors.\r\n@rem\r\n@rem Licensed under the Apache License, Version 2.0 (the \"License\");\r\n@rem you may not use this file except in compliance with the License.\r\n@rem You may obtain a copy of the License at\r\n@rem\r\n@rem      https://www.apache.org/licenses/LICENSE-2.0\r\n@rem\r\n@rem Unless required by applicable law or agreed to in writing, software\r\n@rem distributed under the License is distributed on an \"AS IS\" BASIS,\r\n@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n@rem See the License for the specific language governing permissions and\r\n@rem limitations under the License.\r\n@rem\r\n\r\n@if \"%DEBUG%\" == \"\" @echo off\r\n@rem ##########################################################################\r\n@rem\r\n@rem  Gradle startup script for Windows\r\n@rem\r\n@rem ##########################################################################\r\n\r\n@rem Set local scope for the variables with windows NT shell\r\nif \"%OS%\"==\"Windows_NT\" setlocal\r\n\r\nset DIRNAME=%~dp0\r\nif \"%DIRNAME%\" == \"\" set DIRNAME=.\r\nset APP_BASE_NAME=%~n0\r\nset APP_HOME=%DIRNAME%\r\n\r\n@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.\r\nfor %%i in (\"%APP_HOME%\") do set APP_HOME=%%~fi\r\n\r\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\r\nset DEFAULT_JVM_OPTS=\"-Xmx64m\" \"-Xms64m\"\r\n\r\n@rem Find java.exe\r\nif defined JAVA_HOME goto findJavaFromJavaHome\r\n\r\nset JAVA_EXE=java.exe\r\n%JAVA_EXE% -version >NUL 2>&1\r\nif \"%ERRORLEVEL%\" == \"0\" goto execute\r\n\r\necho.\r\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\r\necho.\r\necho Please set the JAVA_HOME variable in your environment to match the\r\necho location of your Java installation.\r\n\r\ngoto fail\r\n\r\n:findJavaFromJavaHome\r\nset JAVA_HOME=%JAVA_HOME:\"=%\r\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\r\n\r\nif exist \"%JAVA_EXE%\" goto execute\r\n\r\necho.\r\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\r\necho.\r\necho Please set the JAVA_HOME variable in your environment to match the\r\necho location of your Java installation.\r\n\r\ngoto fail\r\n\r\n:execute\r\n@rem Setup the command line\r\n\r\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\r\n\r\n\r\n@rem Execute Gradle\r\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*\r\n\r\n:end\r\n@rem End local scope for the variables with windows NT shell\r\nif \"%ERRORLEVEL%\"==\"0\" goto mainEnd\r\n\r\n:fail\r\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\r\nrem the _cmd.exe /c_ return code!\r\nif  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1\r\nexit /b 1\r\n\r\n:mainEnd\r\nif \"%OS%\"==\"Windows_NT\" endlocal\r\n\r\n:omega\r\n"
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "opslevel.yml",
          "type": "blob",
          "size": 0.05859375,
          "content": "---\nversion: 1\nrepository:\n  owner: dx_sdks\n  tier:\n  tags:\n"
        },
        {
          "name": "settings.gradle",
          "type": "blob",
          "size": 0.2490234375,
          "content": "pluginManagement {\n    repositories {\n        gradlePluginPortal()\n    }\n    plugins {\n        id 'com.auth0.gradle.oss-library.java' version '0.17.2'\n    }\n}\n\ninclude ':java-jwt'\nproject(':java-jwt').projectDir = new File(rootProject.projectDir, '/lib')\n"
        }
      ]
    }
  ]
}