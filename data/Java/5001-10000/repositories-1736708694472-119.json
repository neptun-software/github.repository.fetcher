{
  "metadata": {
    "timestamp": 1736708694472,
    "page": 119,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "pedant/sweet-alert-dialog",
      "stars": 7259,
      "defaultBranch": "master",
      "files": [
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.248046875,
          "content": "Sweet Alert Dialog\n===================\nSweetAlert for Android, a beautiful and clever alert dialog\n\n[![Android Arsenal](https://img.shields.io/badge/Android%20Arsenal-Sweet%20Alert%20Dialog-brightgreen.svg?style=flat)](https://android-arsenal.com/details/1/1065)\n\n[中文版](https://github.com/pedant/sweet-alert-dialog/blob/master/README.zh.md)\n\nInspired by JavaScript [SweetAlert](http://tristanedwards.me/sweetalert)\n\n[Demo Download](https://github.com/pedant/sweet-alert-dialog/releases/download/v1.1/sweet-alert-sample-v1.1.apk)\n\n## ScreenShot\n![image](https://github.com/pedant/sweet-alert-dialog/raw/master/change_type.gif)\n\n## Setup\nThe simplest way to use SweetAlertDialog is to add the library as aar dependency to your build.\n\n**Maven**\n\n    <dependency>\n      <groupId>cn.pedant.sweetalert</groupId>\n      <artifactId>library</artifactId>\n      <version>1.3</version>\n      <type>aar</type>\n    </dependency>\n\n**Gradle**\n\n    repositories {\n        mavenCentral()\n    }\n\n    dependencies {\n        compile 'cn.pedant.sweetalert:library:1.3'\n    }\n\n## Usage\n\nshow material progress\n\n    SweetAlertDialog pDialog = new SweetAlertDialog(this, SweetAlertDialog.PROGRESS_TYPE);\n    pDialog.getProgressHelper().setBarColor(Color.parseColor(\"#A5DC86\"));\n    pDialog.setTitleText(\"Loading\");\n    pDialog.setCancelable(false);\n    pDialog.show();\n\n![image](https://github.com/pedant/sweet-alert-dialog/raw/master/play_progress.gif)\n\nYou can customize progress bar dynamically with materialish-progress methods via **SweetAlertDialog.getProgressHelper()**:\n- resetCount()\n- isSpinning()\n- spin()\n- stopSpinning()\n- getProgress()\n- setProgress(float progress)\n- setInstantProgress(float progress)\n- getCircleRadius()\n- setCircleRadius(int circleRadius)\n- getBarWidth()\n- setBarWidth(int barWidth)\n- getBarColor()\n- setBarColor(int barColor)\n- getRimWidth()\n- setRimWidth(int rimWidth)\n- getRimColor()\n- setRimColor(int rimColor)\n- getSpinSpeed()\n- setSpinSpeed(float spinSpeed)\n\nthanks to the project [materialish-progress](https://github.com/pnikosis/materialish-progress) and [@croccio](https://github.com/croccio) participation.\n\nmore usages about progress, please see the sample.\n\nA basic message：\n\n    new SweetAlertDialog(this)\n        .setTitleText(\"Here's a message!\")\n        .show();\n\nA title with a text under：\n\n    new SweetAlertDialog(this)\n        .setTitleText(\"Here's a message!\")\n        .setContentText(\"It's pretty, isn't it?\")\n        .show();\n\nA error message：\n\n    new SweetAlertDialog(this, SweetAlertDialog.ERROR_TYPE)\n        .setTitleText(\"Oops...\")\n        .setContentText(\"Something went wrong!\")\n        .show();\n\nA warning message：\n\n    new SweetAlertDialog(this, SweetAlertDialog.WARNING_TYPE)\n        .setTitleText(\"Are you sure?\")\n        .setContentText(\"Won't be able to recover this file!\")\n        .setConfirmText(\"Yes,delete it!\")\n        .show();\n\nA success message：\n\n    new SweetAlertDialog(this, SweetAlertDialog.SUCCESS_TYPE)\n        .setTitleText(\"Good job!\")\n        .setContentText(\"You clicked the button!\")\n        .show();\n\nA message with a custom icon：\n\n    new SweetAlertDialog(this, SweetAlertDialog.CUSTOM_IMAGE_TYPE)\n        .setTitleText(\"Sweet!\")\n        .setContentText(\"Here's a custom image.\")\n        .setCustomImage(R.drawable.custom_img)\n        .show();\n\nBind the listener to confirm button：\n\n    new SweetAlertDialog(this, SweetAlertDialog.WARNING_TYPE)\n        .setTitleText(\"Are you sure?\")\n        .setContentText(\"Won't be able to recover this file!\")\n        .setConfirmText(\"Yes,delete it!\")\n        .setConfirmClickListener(new SweetAlertDialog.OnSweetClickListener() {\n            @Override\n            public void onClick(SweetAlertDialog sDialog) {\n                sDialog.dismissWithAnimation();\n            }\n        })\n        .show();\n\nShow the cancel button and bind listener to it：\n\n    new SweetAlertDialog(this, SweetAlertDialog.WARNING_TYPE)\n        .setTitleText(\"Are you sure?\")\n        .setContentText(\"Won't be able to recover this file!\")\n        .setCancelText(\"No,cancel plx!\")\n        .setConfirmText(\"Yes,delete it!\")\n        .showCancelButton(true)\n        .setCancelClickListener(new SweetAlertDialog.OnSweetClickListener() {\n            @Override\n            public void onClick(SweetAlertDialog sDialog) {\n                sDialog.cancel();\n            }\n        })\n        .show();\n\n**Change** the dialog style upon confirming：\n\n    new SweetAlertDialog(this, SweetAlertDialog.WARNING_TYPE)\n        .setTitleText(\"Are you sure?\")\n        .setContentText(\"Won't be able to recover this file!\")\n        .setConfirmText(\"Yes,delete it!\")\n        .setConfirmClickListener(new SweetAlertDialog.OnSweetClickListener() {\n            @Override\n            public void onClick(SweetAlertDialog sDialog) {\n                sDialog\n                    .setTitleText(\"Deleted!\")\n                    .setContentText(\"Your imaginary file has been deleted!\")\n                    .setConfirmText(\"OK\")\n                    .setConfirmClickListener(null)\n                    .changeAlertType(SweetAlertDialog.SUCCESS_TYPE);\n            }\n        })\n        .show();\n\n[more android tech shares: pedant.cn](http://www.pedant.cn)\n\n## License\n\n    The MIT License (MIT)\n\n    Copyright (c) 2014 Pedant(http://pedant.cn)\n\n    Permission is hereby granted, free of charge, to any person obtaining a copy\n    of this software and associated documentation files (the \"Software\"), to deal\n    in the Software without restriction, including without limitation the rights\n    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n    copies of the Software, and to permit persons to whom the Software is\n    furnished to do so, subject to the following conditions:\n\n    The above copyright notice and this permission notice shall be included in all\n    copies or substantial portions of the Software.\n\n    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n    SOFTWARE.\n\n\n"
        },
        {
          "name": "README.zh.md",
          "type": "blob",
          "size": 6.2392578125,
          "content": "Sweet Alert Dialog\n===================\nAndroid版的SweetAlert，清新文艺，快意灵动的甜心弹框\n\n[![Android Arsenal](https://img.shields.io/badge/Android%20Arsenal-Sweet%20Alert%20Dialog-brightgreen.svg?style=flat)](https://android-arsenal.com/details/1/1065)\n\n[English Version](https://github.com/pedant/sweet-alert-dialog/blob/master/README.md)\n\n灵感来源于JS版[SweetAlert](http://tristanedwards.me/sweetalert)\n\n[Demo下载](https://github.com/pedant/sweet-alert-dialog/releases/download/v1.1/sweet-alert-sample-v1.1.apk)\n\n## 运行示意图\n![image](https://github.com/pedant/sweet-alert-dialog/raw/master/change_type.gif)\n\n## 安装\n使用SweetAlertDialog最简单的办法就是像下面这样添加项目依赖。\n\n**Maven**\n\n    <dependency>\n      <groupId>cn.pedant.sweetalert</groupId>\n      <artifactId>library</artifactId>\n      <version>1.3</version>\n      <type>aar</type>\n    </dependency>\n\n**Gradle**\n\n    repositories {\n        mavenCentral()\n    }\n\n    dependencies {\n        compile 'cn.pedant.sweetalert:library:1.3'\n    }\n\n## 如何开始\n显示Material进度样式\n\n    SweetAlertDialog pDialog = new SweetAlertDialog(this, SweetAlertDialog.PROGRESS_TYPE);\n    pDialog.getProgressHelper().setBarColor(Color.parseColor(\"#A5DC86\"));\n    pDialog.setTitleText(\"Loading\");\n    pDialog.setCancelable(false);\n    pDialog.show();\n\n![image](https://github.com/pedant/sweet-alert-dialog/raw/master/play_progress.gif)\n\n你可以通过**SweetAlertDialog.getProgressHelper()**调用materialish-progress中下面这些方法，来动态改变进度条的样式\n- resetCount()\n- isSpinning()\n- spin()\n- stopSpinning()\n- getProgress()\n- setProgress(float progress)\n- setInstantProgress(float progress)\n- getCircleRadius()\n- setCircleRadius(int circleRadius)\n- getBarWidth()\n- setBarWidth(int barWidth)\n- getBarColor()\n- setBarColor(int barColor)\n- getRimWidth()\n- setRimWidth(int rimWidth)\n- getRimColor()\n- setRimColor(int rimColor)\n- getSpinSpeed()\n- setSpinSpeed(float spinSpeed)\n\n感谢[materialish-progress](https://github.com/pnikosis/materialish-progress)项目以及[@croccio](https://github.com/croccio)的参与。\n\n更多关于进度条的用法，请参见样例代码。\n\n只显示标题：\n\n    new SweetAlertDialog(this)\n        .setTitleText(\"Here's a message!\")\n        .show();\n\n显示标题和内容：\n\n    new SweetAlertDialog(this)\n        .setTitleText(\"Here's a message!\")\n        .setContentText(\"It's pretty, isn't it?\")\n        .show();\n\n显示异常样式：\n\n    new SweetAlertDialog(this, SweetAlertDialog.ERROR_TYPE)\n        .setTitleText(\"Oops...\")\n        .setContentText(\"Something went wrong!\")\n        .show();\n\n显示警告样式：\n\n    new SweetAlertDialog(this, SweetAlertDialog.WARNING_TYPE)\n        .setTitleText(\"Are you sure?\")\n        .setContentText(\"Won't be able to recover this file!\")\n        .setConfirmText(\"Yes,delete it!\")\n        .show();\n\n显示成功完成样式：\n\n    new SweetAlertDialog(this, SweetAlertDialog.SUCCESS_TYPE)\n        .setTitleText(\"Good job!\")\n        .setContentText(\"You clicked the button!\")\n        .show();\n\n自定义头部图像：\n\n    new SweetAlertDialog(this, SweetAlertDialog.CUSTOM_IMAGE_TYPE)\n        .setTitleText(\"Sweet!\")\n        .setContentText(\"Here's a custom image.\")\n        .setCustomImage(R.drawable.custom_img)\n        .show();\n\n确认事件绑定：\n\n    new SweetAlertDialog(this, SweetAlertDialog.WARNING_TYPE)\n        .setTitleText(\"Are you sure?\")\n        .setContentText(\"Won't be able to recover this file!\")\n        .setConfirmText(\"Yes,delete it!\")\n        .setConfirmClickListener(new SweetAlertDialog.OnSweetClickListener() {\n            @Override\n            public void onClick(SweetAlertDialog sDialog) {\n                sDialog.dismissWithAnimation();\n            }\n        })\n        .show();\n\n显示取消按钮及事件绑定：\n\n    new SweetAlertDialog(this, SweetAlertDialog.WARNING_TYPE)\n        .setTitleText(\"Are you sure?\")\n        .setContentText(\"Won't be able to recover this file!\")\n        .setCancelText(\"No,cancel plx!\")\n        .setConfirmText(\"Yes,delete it!\")\n        .showCancelButton(true)\n        .setCancelClickListener(new SweetAlertDialog.OnSweetClickListener() {\n            @Override\n            public void onClick(SweetAlertDialog sDialog) {\n                sDialog.cancel();\n            }\n        })\n        .show();\n\n确认后**切换**对话框样式：\n\n    new SweetAlertDialog(this, SweetAlertDialog.WARNING_TYPE)\n        .setTitleText(\"Are you sure?\")\n        .setContentText(\"Won't be able to recover this file!\")\n        .setConfirmText(\"Yes,delete it!\")\n        .setConfirmClickListener(new SweetAlertDialog.OnSweetClickListener() {\n            @Override\n            public void onClick(SweetAlertDialog sDialog) {\n                sDialog\n                    .setTitleText(\"Deleted!\")\n                    .setContentText(\"Your imaginary file has been deleted!\")\n                    .setConfirmText(\"OK\")\n                    .setConfirmClickListener(null)\n                    .changeAlertType(SweetAlertDialog.SUCCESS_TYPE);\n            }\n        })\n        .show();\n\n[更多Android原创技术分享见: pedant.cn](http://www.pedant.cn)\n\n## License\n\n    The MIT License (MIT)\n\n    Copyright (c) 2014 Pedant(http://pedant.cn)\n\n    Permission is hereby granted, free of charge, to any person obtaining a copy\n    of this software and associated documentation files (the \"Software\"), to deal\n    in the Software without restriction, including without limitation the rights\n    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n    copies of the Software, and to permit persons to whom the Software is\n    furnished to do so, subject to the following conditions:\n\n    The above copyright notice and this permission notice shall be included in all\n    copies or substantial portions of the Software.\n\n    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n    SOFTWARE.\n\n\n"
        },
        {
          "name": "build.gradle",
          "type": "blob",
          "size": 0.2744140625,
          "content": "buildscript {\n    repositories {\n        mavenCentral()\n    }\n    dependencies {\n        classpath 'com.android.tools.build:gradle:0.14.1'\n    }\n}\n\next {\n    compileSdkVersion = 21\n    buildToolsVersion = \"19.1.0\"\n}\n\nallprojects {\n    repositories {\n        mavenCentral()\n    }\n}\n"
        },
        {
          "name": "change_type.gif",
          "type": "blob",
          "size": 238.2890625,
          "content": null
        },
        {
          "name": "gradle.properties",
          "type": "blob",
          "size": 0.5302734375,
          "content": "VERSION_NAME=1.3\nVERSION_CODE=4\nGROUP=cn.pedant.sweetalert\n\nPOM_DESCRIPTION=SweetAlert for Android, a beautiful and clever alert dialog.\nPOM_URL=https://github.com/pedant/sweet-alert-dialog\nPOM_SCM_URL=https://github.com/pedant/sweet-alert-dialog\nPOM_SCM_CONNECTION=scm:git@github.com:pedant/sweet-alert-dialog.git\nPOM_SCM_DEV_CONNECTION=scm:git@github.com:pedant/sweet-alert-dialog.git\nPOM_LICENCE_NAME=The MIT License\nPOM_LICENCE_URL=http://opensource.org/licenses/MIT\nPOM_LICENCE_DIST=repo\nPOM_DEVELOPER_ID=pedant\nPOM_DEVELOPER_NAME=Pedant\n"
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 4.9609375,
          "content": "#!/usr/bin/env bash\n\n##############################################################################\n##\n##  Gradle start up script for UN*X\n##\n##############################################################################\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS=\"\"\n\nAPP_NAME=\"Gradle\"\nAPP_BASE_NAME=`basename \"$0\"`\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=\"maximum\"\n\nwarn ( ) {\n    echo \"$*\"\n}\n\ndie ( ) {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n}\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\ncase \"`uname`\" in\n  CYGWIN* )\n    cygwin=true\n    ;;\n  Darwin* )\n    darwin=true\n    ;;\n  MINGW* )\n    msys=true\n    ;;\nesac\n\n# For Cygwin, ensure paths are in UNIX format before anything is touched.\nif $cygwin ; then\n    [ -n \"$JAVA_HOME\" ] && JAVA_HOME=`cygpath --unix \"$JAVA_HOME\"`\nfi\n\n# Attempt to set APP_HOME\n# Resolve links: $0 may be a link\nPRG=\"$0\"\n# Need this for relative symlinks.\nwhile [ -h \"$PRG\" ] ; do\n    ls=`ls -ld \"$PRG\"`\n    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n    if expr \"$link\" : '/.*' > /dev/null; then\n        PRG=\"$link\"\n    else\n        PRG=`dirname \"$PRG\"`\"/$link\"\n    fi\ndone\nSAVED=\"`pwd`\"\ncd \"`dirname \\\"$PRG\\\"`/\" >&-\nAPP_HOME=\"`pwd -P`\"\ncd \"$SAVED\" >&-\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n    else\n        JAVACMD=\"$JAVA_HOME/bin/java\"\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=\"java\"\n    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\nfi\n\n# Increase the maximum file descriptors if we can.\nif [ \"$cygwin\" = \"false\" -a \"$darwin\" = \"false\" ] ; then\n    MAX_FD_LIMIT=`ulimit -H -n`\n    if [ $? -eq 0 ] ; then\n        if [ \"$MAX_FD\" = \"maximum\" -o \"$MAX_FD\" = \"max\" ] ; then\n            MAX_FD=\"$MAX_FD_LIMIT\"\n        fi\n        ulimit -n $MAX_FD\n        if [ $? -ne 0 ] ; then\n            warn \"Could not set maximum file descriptor limit: $MAX_FD\"\n        fi\n    else\n        warn \"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\"\n    fi\nfi\n\n# For Darwin, add options to specify how the application appears in the dock\nif $darwin; then\n    GRADLE_OPTS=\"$GRADLE_OPTS \\\"-Xdock:name=$APP_NAME\\\" \\\"-Xdock:icon=$APP_HOME/media/gradle.icns\\\"\"\nfi\n\n# For Cygwin, switch paths to Windows format before running java\nif $cygwin ; then\n    APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`\n    CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`\n\n    # We build the pattern for arguments to be converted via cygpath\n    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`\n    SEP=\"\"\n    for dir in $ROOTDIRSRAW ; do\n        ROOTDIRS=\"$ROOTDIRS$SEP$dir\"\n        SEP=\"|\"\n    done\n    OURCYGPATTERN=\"(^($ROOTDIRS))\"\n    # Add a user-defined pattern to the cygpath arguments\n    if [ \"$GRADLE_CYGPATTERN\" != \"\" ] ; then\n        OURCYGPATTERN=\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\"\n    fi\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    i=0\n    for arg in \"$@\" ; do\n        CHECK=`echo \"$arg\"|egrep -c \"$OURCYGPATTERN\" -`\n        CHECK2=`echo \"$arg\"|egrep -c \"^-\"`                                 ### Determine if an option\n\n        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition\n            eval `echo args$i`=`cygpath --path --ignore --mixed \"$arg\"`\n        else\n            eval `echo args$i`=\"\\\"$arg\\\"\"\n        fi\n        i=$((i+1))\n    done\n    case $i in\n        (0) set -- ;;\n        (1) set -- \"$args0\" ;;\n        (2) set -- \"$args0\" \"$args1\" ;;\n        (3) set -- \"$args0\" \"$args1\" \"$args2\" ;;\n        (4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;\n        (5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;\n        (6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;\n        (7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;\n        (8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;\n        (9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;\n    esac\nfi\n\n# Split up the JVM_OPTS And GRADLE_OPTS values into an array, following the shell quoting and substitution rules\nfunction splitJvmOpts() {\n    JVM_OPTS=(\"$@\")\n}\neval splitJvmOpts $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS\nJVM_OPTS[${#JVM_OPTS[*]}]=\"-Dorg.gradle.appname=$APP_BASE_NAME\"\n\nexec \"$JAVACMD\" \"${JVM_OPTS[@]}\" -classpath \"$CLASSPATH\" org.gradle.wrapper.GradleWrapperMain \"$@\"\n"
        },
        {
          "name": "gradlew.bat",
          "type": "blob",
          "size": 2.259765625,
          "content": "@if \"%DEBUG%\" == \"\" @echo off\n@rem ##########################################################################\n@rem\n@rem  Gradle startup script for Windows\n@rem\n@rem ##########################################################################\n\n@rem Set local scope for the variables with windows NT shell\nif \"%OS%\"==\"Windows_NT\" setlocal\n\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nset DEFAULT_JVM_OPTS=\n\nset DIRNAME=%~dp0\nif \"%DIRNAME%\" == \"\" set DIRNAME=.\nset APP_BASE_NAME=%~n0\nset APP_HOME=%DIRNAME%\n\n@rem Find java.exe\nif defined JAVA_HOME goto findJavaFromJavaHome\n\nset JAVA_EXE=java.exe\n%JAVA_EXE% -version >NUL 2>&1\nif \"%ERRORLEVEL%\" == \"0\" goto init\n\necho.\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\necho.\necho Please set the JAVA_HOME variable in your environment to match the\necho location of your Java installation.\n\ngoto fail\n\n:findJavaFromJavaHome\nset JAVA_HOME=%JAVA_HOME:\"=%\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\n\nif exist \"%JAVA_EXE%\" goto init\n\necho.\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\necho.\necho Please set the JAVA_HOME variable in your environment to match the\necho location of your Java installation.\n\ngoto fail\n\n:init\n@rem Get command-line arguments, handling Windowz variants\n\nif not \"%OS%\" == \"Windows_NT\" goto win9xME_args\nif \"%@eval[2+2]\" == \"4\" goto 4NT_args\n\n:win9xME_args\n@rem Slurp the command line arguments.\nset CMD_LINE_ARGS=\nset _SKIP=2\n\n:win9xME_args_slurp\nif \"x%~1\" == \"x\" goto execute\n\nset CMD_LINE_ARGS=%*\ngoto execute\n\n:4NT_args\n@rem Get arguments from the 4NT Shell from JP Software\nset CMD_LINE_ARGS=%$\n\n:execute\n@rem Setup the command line\n\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\n\n@rem Execute Gradle\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%\n\n:end\n@rem End local scope for the variables with windows NT shell\nif \"%ERRORLEVEL%\"==\"0\" goto mainEnd\n\n:fail\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\nrem the _cmd.exe /c_ return code!\nif  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1\nexit /b 1\n\n:mainEnd\nif \"%OS%\"==\"Windows_NT\" endlocal\n\n:omega\n"
        },
        {
          "name": "library",
          "type": "tree",
          "content": null
        },
        {
          "name": "play_progress.gif",
          "type": "blob",
          "size": 144.4951171875,
          "content": null
        },
        {
          "name": "sample",
          "type": "tree",
          "content": null
        },
        {
          "name": "settings.gradle",
          "type": "blob",
          "size": 0.0283203125,
          "content": "include ':library', ':sample'"
        },
        {
          "name": "show_error.gif",
          "type": "blob",
          "size": 193.689453125,
          "content": null
        }
      ]
    }
  ]
}