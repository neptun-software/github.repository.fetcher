{
  "metadata": {
    "timestamp": 1736708711107,
    "page": 153,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "markzhai/AndroidPerformanceMonitor",
      "stars": 6685,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.421875,
          "content": "# Built application files\n*.apk\n*.ap_\n\n# Files for the Dalvik VM\n*.dex\n\n# Java class files\n*.class\n\n# Generated files\nbin/\ngen/\n\n# Gradle files\n.gradle/\nbuild/\n\n# Local configuration file (sdk path, etc)\nlocal.properties\n\n# Proguard folder generated by Eclipse\nproguard/\n\n# Log Files\n*.log\n\n# Android Studio Navigation editor temp files\n.navigation/\n\n# Android Studio captures folder\ncaptures/\n\n# jetbrain project file\n.idea/\n*.iml\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 0.7646484375,
          "content": "# Change Log\n\nYou can watch releases [on Maven](https://oss.sonatype.org/content/groups/public/com/github/markzhai/).\n\n## Version 1.5 *(2017-02-26)*\n\nDebug mode stop monitor.\n\n## Version 1.4 *(2016-11-02)*\n\n- Bug fix.\n- Add onBlock interceptor.\n\n### 1.4.1 (2017-01-19)\n\n- Bug fix\n\n## Version 1.3 *(2016-08-24)*\n\n- Code refactor.\n- Support white-list and concern packages.\n\n## Version 1.2 *(2016-03-16)*\n\n- Much faster! It now has almost none side-effect at run-time.\n\n## Version 1.1 *(2016-01-23)*\n\n- Extract blockcanary to three modules.\n- Provide default implementation for BlockCanaryContext.\n\n### 1.1.1 *(2016-01-25)*\nfix issue #19 and #23\n\n## Version 1.0 *(2016-01-21)*\n\nInitial release.\n\n### 1.0.1\nFix no-op api not align bug.\n\n### 1.0.2\nAdd notification sound, fix 2.3 crash.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0908203125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright {yyyy} {name of copyright owner}\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 7.5498046875,
          "content": "[Chinese README](https://github.com/markzhai/AndroidPerformanceMonitor/blob/master/README_CN.md)\n\n# Android Performance Monitor [![Maven Central](https://maven-badges.herokuapp.com/maven-central/com.github.markzhai/blockcanary-android/badge.svg?style=flat)](https://maven-badges.herokuapp.com/maven-central/com.github.markzhai/blockcanary-android)\nA transparent ui-block detection library for Android, app only needs one-line-code to setup.\n\nThe naming is to pay respect to the great library [LeakCanary](https://github.com/square/leakcanary), ui-related codes are modified from leakcanary's ui part.\n\n- 1.5.0 Add context that can stop monitor in debug mode.\n- 1.4.1 Bug fix.\n- 1.4.0 Bug fix, add onBlock interceptor in context.\n- 1.3.1 Enable configuration of label and icon.\n- 1.3.0 Add white-list and concern-package feature.\n\n# Getting started\n\nYou may choose how to assemble them as you like.\n\n```gradle\ndependencies {\n    // most often used way, enable notification to notify block event\n    compile 'com.github.markzhai:blockcanary-android:1.5.0'\n\n    // this way you only enable BlockCanary in debug package\n    // debugCompile 'com.github.markzhai:blockcanary-android:1.5.0'\n    // releaseCompile 'com.github.markzhai:blockcanary-no-op:1.5.0'\n}\n```\n\nAs this library uses `getMainLooper().setMessageLogging()`, please check if you set it in your app (related issue https://github.com/moduth/blockcanary/issues/27)\n\n# Usage\n\nMaximum log count is set to 500, you can rewrite it in your app `int.xml`.\n```xml\n<integer name=\"block_canary_max_stored_count\">1000</integer>\n```\n\nMonitor app's label and icon can be configured by placing a `block_canary_icon` drawable in your xhdpi drawable directory and in `strings.xml`:\n```xml\n<string name=\"block_canary_display_activity_label\">Blocks</string>\n```\n\n```java\npublic class DemoApplication extends Application {\n    @Override\n    public void onCreate() {\n        // ...\n        // Do it on main process\n        BlockCanary.install(this, new AppBlockCanaryContext()).start();\n    }\n}\n```\n\nImplement your application `BlockCanaryContext` context (strongly recommend you to check all these configs)：\n```java\npublic class AppBlockCanaryContext extends BlockCanaryContext {\n\n    /**\n     * Implement in your project.\n     *\n     * @return Qualifier which can specify this installation, like version + flavor.\n     */\n    public String provideQualifier() {\n        return \"unknown\";\n    }\n\n    /**\n     * Implement in your project.\n     *\n     * @return user id\n     */\n    public String provideUid() {\n        return \"uid\";\n    }\n\n    /**\n     * Network type\n     *\n     * @return {@link String} like 2G, 3G, 4G, wifi, etc.\n     */\n    public String provideNetworkType() {\n        return \"unknown\";\n    }\n\n    /**\n     * Config monitor duration, after this time BlockCanary will stop, use\n     * with {@code BlockCanary}'s isMonitorDurationEnd\n     *\n     * @return monitor last duration (in hour)\n     */\n    public int provideMonitorDuration() {\n        return -1;\n    }\n\n    /**\n     * Config block threshold (in millis), dispatch over this duration is regarded as a BLOCK. You may set it\n     * from performance of device.\n     *\n     * @return threshold in mills\n     */\n    public int provideBlockThreshold() {\n        return 1000;\n    }\n\n    /**\n     * Thread stack dump interval, use when block happens, BlockCanary will dump on main thread\n     * stack according to current sample cycle.\n     * <p>\n     * Because the implementation mechanism of Looper, real dump interval would be longer than\n     * the period specified here (especially when cpu is busier).\n     * </p>\n     *\n     * @return dump interval (in millis)\n     */\n    public int provideDumpInterval() {\n        return provideBlockThreshold();\n    }\n\n    /**\n     * Path to save log, like \"/blockcanary/\", will save to sdcard if can.\n     *\n     * @return path of log files\n     */\n    public String providePath() {\n        return \"/blockcanary/\";\n    }\n\n    /**\n     * If need notification to notice block.\n     *\n     * @return true if need, else if not need.\n     */\n    public boolean displayNotification() {\n        return true;\n    }\n\n    /**\n     * Implement in your project, bundle files into a zip file.\n     *\n     * @param src  files before compress\n     * @param dest files compressed\n     * @return true if compression is successful\n     */\n    public boolean zip(File[] src, File dest) {\n        return false;\n    }\n\n    /**\n     * Implement in your project, bundled log files.\n     *\n     * @param zippedFile zipped file\n     */\n    public void upload(File zippedFile) {\n        throw new UnsupportedOperationException();\n    }\n\n\n    /**\n     * Packages that developer concern, by default it uses process name,\n     * put high priority one in pre-order.\n     *\n     * @return null if simply concern only package with process name.\n     */\n    public List<String> concernPackages() {\n        return null;\n    }\n\n    /**\n     * Filter stack without any in concern package, used with @{code concernPackages}.\n     *\n     * @return true if filter, false it not.\n     */\n    public boolean filterNonConcernStack() {\n        return false;\n    }\n\n    /**\n     * Provide white list, entry in white list will not be shown in ui list.\n     *\n     * @return return null if you don't need white-list filter.\n     */\n    public List<String> provideWhiteList() {\n        LinkedList<String> whiteList = new LinkedList<>();\n        whiteList.add(\"org.chromium\");\n        return whiteList;\n    }\n\n    /**\n     * Whether to delete files whose stack is in white list, used with white-list.\n     *\n     * @return true if delete, false it not.\n     */\n    public boolean deleteFilesInWhiteList() {\n        return true;\n    }\n\n    /**\n     * Block interceptor, developer may provide their own actions.\n     */\n    public void onBlock(Context context, BlockInfo blockInfo) {\n\n    }\n}\n```\n\n# How does it work?\nBlog in Chinese: [BlockCanary](http://blog.zhaiyifan.cn/2016/01/16/BlockCanaryTransparentPerformanceMonitor/).\n\nPrinciple flow picture:\n\n![flow](art/flow.png \"flow\")\n\n# Screenshot\n\n![Block detail](art/shot1.png \"detail\")\n![Block list](art/shot2.png \"list\")\n\n# Donation\n\nIf you find this repository helpful, you may make a donation to me via alipay or wechat.\n![alipay](http://blog.zhaiyifan.cn/images/donation-alipay.png \"alipay\") ![wechat](http://blog.zhaiyifan.cn/images/donation.jpg \"wechat\")\n\n# Contributors\n\nThis library is initially created by [markzhai](https://github.com/markzhai), and maintained under the organization [moduth](https://github.com/moduth) with [nimengbo](https://github.com/nimengbo) and [zzz40500](https://github.com/zzz40500).\n\nSpecial thanks to [android-cjj](https://github.com/android-cjj), [Mr.Bao](https://github.com/baoyongzhang), [chiahaolu](https://github.com/chiahaolu) to contribute.\n\n# Change Log\n\nCheck [CHANGELOG](https://github.com/markzhai/AndroidPerformanceMonitor/blob/master/CHANGELOG.md)\n\n# Contribute\n\nIf you would like to contribute code to BlockCanary you can do so through GitHub by forking the repository and sending a pull request.\n\n# License\n\n    Copyright (C) 2016 MarkZhai (http://zhaiyifan.cn).\n\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n"
        },
        {
          "name": "README_CN.md",
          "type": "blob",
          "size": 8.4482421875,
          "content": "[English](https://github.com/markzhai/AndroidPerformanceMonitor/blob/master/README.md)\n\n# Android Performance Monitor [![Maven Central](https://maven-badges.herokuapp.com/maven-central/com.github.markzhai/blockcanary-android/badge.svg?style=flat)](https://maven-badges.herokuapp.com/maven-central/com.github.markzhai/blockcanary-android)\nBlockCanary是一个Android平台的一个非侵入式的性能监控组件，应用只需要实现一个抽象类，提供一些该组件需要的上下文环境，就可以在平时使用应用的时候检测主线程上的各种卡慢问题，并通过组件提供的各种信息分析出原因并进行修复。\n\n取名为BlockCanary则是为了向LeakCanary致敬，顺便本库的UI部分是从LeakCanary改来的，之后可能会做一些调整。\n\n- 1.5.0 Context 中增加 Debug 时不监控选项。\n- 1.4.1 Bug修复\n- 1.4.0 修复 1.3.x 的 bug，增加发生卡慢时的拦截方法。\n- 1.3.0 增加白名单和包名过滤功能\n\n# 包介绍\n\n- blockcanary-android  blockcanary类的一些实现\n- blockcanary-analyzer 记录block信息的核心实现\n- blockcanary-no-op    空包，为了release打包时不编译进去\n\n# 引入\n\n**一般选取以下其中一个 case 引入即可**\n\n**如果有多个buildTypes需求，请使用 ```buildTypeComple ``` 关键字根据buildTypes组合使用即可**\n\n```gradle\ndependencies {\n    compile 'com.github.markzhai:blockcanary-android:1.5.0'\n\n    // 仅在debug包启用BlockCanary进行卡顿监控和提示的话，可以这么用\n    debugCompile 'com.github.markzhai:blockcanary-android:1.5.0'\n    releaseCompile 'com.github.markzhai:blockcanary-no-op:1.5.0'\n}\n```\n\nPS: 由于该库使用了 `getMainLooper().setMessageLogging()`, 请确认是否与你的app冲突.\n\n# 使用方法\n在Application中：\n```java\npublic class DemoApplication extends Application {\n    @Override\n    public void onCreate() {\n        // 在主进程初始化调用哈\n        BlockCanary.install(this, new AppBlockCanaryContext()).start();\n    }\n}\n```\n\n实现自己的监控上下文（强烈建议看清所有配置项，避免使用错误）：\n```java\npublic class AppBlockCanaryContext extends BlockCanaryContext {\n    // 实现各种上下文，包括应用标示符，用户uid，网络类型，卡慢判断阙值，Log保存位置等\n\n    /**\n     * Implement in your project.\n     *\n     * @return Qualifier which can specify this installation, like version + flavor.\n     */\n    public String provideQualifier() {\n        return \"unknown\";\n    }\n\n    /**\n     * Implement in your project.\n     *\n     * @return user id\n     */\n    public String provideUid() {\n        return \"uid\";\n    }\n\n    /**\n     * Network type\n     *\n     * @return {@link String} like 2G, 3G, 4G, wifi, etc.\n     */\n    public String provideNetworkType() {\n        return \"unknown\";\n    }\n\n    /**\n     * Config monitor duration, after this time BlockCanary will stop, use\n     * with {@code BlockCanary}'s isMonitorDurationEnd\n     *\n     * @return monitor last duration (in hour)\n     */\n    public int provideMonitorDuration() {\n        return -1;\n    }\n\n    /**\n     * Config block threshold (in millis), dispatch over this duration is regarded as a BLOCK. You may set it\n     * from performance of device.\n     *\n     * @return threshold in mills\n     */\n    public int provideBlockThreshold() {\n        return 1000;\n    }\n\n    /**\n     * Thread stack dump interval, use when block happens, BlockCanary will dump on main thread\n     * stack according to current sample cycle.\n     * <p>\n     * Because the implementation mechanism of Looper, real dump interval would be longer than\n     * the period specified here (especially when cpu is busier).\n     * </p>\n     *\n     * @return dump interval (in millis)\n     */\n    public int provideDumpInterval() {\n        return provideBlockThreshold();\n    }\n\n    /**\n     * Path to save log, like \"/blockcanary/\", will save to sdcard if can.\n     *\n     * @return path of log files\n     */\n    public String providePath() {\n        return \"/blockcanary/\";\n    }\n\n    /**\n     * If need notification to notice block.\n     *\n     * @return true if need, else if not need.\n     */\n    public boolean displayNotification() {\n        return true;\n    }\n\n    /**\n     * Implement in your project, bundle files into a zip file.\n     *\n     * @param src  files before compress\n     * @param dest files compressed\n     * @return true if compression is successful\n     */\n    public boolean zip(File[] src, File dest) {\n        return false;\n    }\n\n    /**\n     * Implement in your project, bundled log files.\n     *\n     * @param zippedFile zipped file\n     */\n    public void upload(File zippedFile) {\n        throw new UnsupportedOperationException();\n    }\n\n\n    /**\n     * Packages that developer concern, by default it uses process name,\n     * put high priority one in pre-order.\n     *\n     * @return null if simply concern only package with process name.\n     */\n    public List<String> concernPackages() {\n        return null;\n    }\n\n    /**\n     * Filter stack without any in concern package, used with @{code concernPackages}.\n     *\n     * @return true if filter, false it not.\n     */\n    public boolean filterNonConcernStack() {\n        return false;\n    }\n\n    /**\n     * Provide white list, entry in white list will not be shown in ui list.\n     *\n     * @return return null if you don't need white-list filter.\n     */\n    public List<String> provideWhiteList() {\n        LinkedList<String> whiteList = new LinkedList<>();\n        whiteList.add(\"org.chromium\");\n        return whiteList;\n    }\n\n    /**\n     * Whether to delete files whose stack is in white list, used with white-list.\n     *\n     * @return true if delete, false it not.\n     */\n    public boolean deleteFilesInWhiteList() {\n        return true;\n    }\n\n    /**\n     * Block interceptor, developer may provide their own actions.\n     */\n    public void onBlock(Context context, BlockInfo blockInfo) {\n\n    }\n}\n```\n\n# 功能及原理\n见[BlockCanary — 轻松找出Android App界面卡顿元凶](http://blog.zhaiyifan.cn/2016/01/16/BlockCanaryTransparentPerformanceMonitor/).\n\n或见下图\n![flow](art/flow.png \"flow\")\n\n# 如何分析log\n除了图形界面可以供开发、测试阶段直接看卡顿原因外，更多的使用场景其实在于大范围的log采集和分析：如线上环境和monkey，或者测试同学们在整个测试阶段的log收集和分析。\n\n对于分析，主要可以从以下维度\n- 卡顿时间\n- 同堆栈的卡顿出现次数\n进行排序和归类。\n\n接着说说对各个log分析的过程。\n- 首先可以根据手机性能，如核数、机型、内存来判断对应耗时是不是应该判定为卡顿。如一些差的机器，或者内存本身不足的时候。\n- 根据CPU情况，是否是app拿不到cpu，被其他应用拿走了。\n- 看timecost和threadtimecost，如果两者差得很多，则是主线程被等待或者资源被抢占。\n- 看卡顿发生前最近的几次堆栈，如果堆栈相同，则可以判定为是该处发生卡顿，否则需要比较分析。\n\n# Demo工程\n**请参考本项目下的demo module，点击三个按钮会触发对应的耗时事件，消息栏则会弹出block的notification，点击可以进去查看详细信息。**  \n![Block detail](art/shot1.png \"detail\")\n![Block list](art/shot2.png \"list\")\n\n# 贡献者\n\n该库最初由 [markzhai](https://github.com/markzhai) 创建, 并在 [魔都三帅](https://github.com/moduth) 组织下与 [nimengbo](https://github.com/nimengbo) 和 [zzz40500](https://github.com/zzz40500) 共同维护和更新.\n\n特别鸣谢[Mr.Bao](https://github.com/baoyongzhang), [android-cjj](https://github.com/android-cjj), [chiahaolu](https://github.com/chiahaolu)在项目早期做出的贡献。\n\n# 修改日志\n见[CHANGELOG](https://github.com/markzhai/AndroidPerformanceMonitor/blob/master/CHANGELOG.md)\n\n# 贡献\n\n如果你希望贡献代码到BlockCanary，你可以fork本repository然后发一个PR。\n\n# 协议\n\n    Copyright (C) 2016 MarkZhai (http://zhaiyifan.cn).\n\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n"
        },
        {
          "name": "art",
          "type": "tree",
          "content": null
        },
        {
          "name": "blockcanary-analyzer",
          "type": "tree",
          "content": null
        },
        {
          "name": "blockcanary-android-no-op",
          "type": "tree",
          "content": null
        },
        {
          "name": "blockcanary-android",
          "type": "tree",
          "content": null
        },
        {
          "name": "blockcanary-sample",
          "type": "tree",
          "content": null
        },
        {
          "name": "build.gradle",
          "type": "blob",
          "size": 0.515625,
          "content": "// Top-level build file where you can add configuration options common to all sub-projects/modules.\n\nbuildscript {\n    repositories {\n        mavenCentral()\n        jcenter()\n    }\n    dependencies {\n        classpath 'com.android.tools.build:gradle:2.2.2'\n    }\n}\n\nallprojects {\n    repositories {\n        mavenCentral()\n        jcenter()\n    }\n    ext {\n        LIBRARY_COMPILE_SDK_VERSION = 23\n        LIBRARY_BUILD_TOOLS_VERSION = \"23.0.3\"\n        LIBRARY_MIN_SDK_VERSION = 9\n        LIBRARY_TARGET_SDK_VERSION = 22\n    }\n}\n"
        },
        {
          "name": "gradle.properties",
          "type": "blob",
          "size": 0.98046875,
          "content": "## Project-wide Gradle settings.\n#\n# For more details on how to configure your build environment visit\n# http://www.gradle.org/docs/current/userguide/build_environment.html\n#\n# Specifies the JVM arguments used for the daemon process.\n# The setting is particularly useful for tweaking memory settings.\n# Default value: -Xmx10248m -XX:MaxPermSize=256m\n# org.gradle.jvmargs=-Xmx2048m -XX:MaxPermSize=512m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8\n#\n# When configured, Gradle will run in incubating parallel mode.\n# This option should only be used with decoupled projects. More details, visit\n# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects\n# org.gradle.parallel=true\n#Sat Mar 05 00:07:08 CST 2016\norg.gradle.jvmargs=-Xmx8192M\n#org.gradle.jvmargs=-Xmx10248m -XX\\:MaxPermSize\\=512m -XX\\:+HeapDumpOnOutOfMemoryError -Dfile.encoding\\=UTF-8\norg.gradle.daemon=true\norg.gradle.configureondemand=true\norg.gradle.parallel=true\nandroid.useDeprecatedNdk=true"
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 4.8544921875,
          "content": "#!/usr/bin/env bash\n\n##############################################################################\n##\n##  Gradle start up script for UN*X\n##\n##############################################################################\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS=\"\"\n\nAPP_NAME=\"Gradle\"\nAPP_BASE_NAME=`basename \"$0\"`\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=\"maximum\"\n\nwarn ( ) {\n    echo \"$*\"\n}\n\ndie ( ) {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n}\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\ncase \"`uname`\" in\n  CYGWIN* )\n    cygwin=true\n    ;;\n  Darwin* )\n    darwin=true\n    ;;\n  MINGW* )\n    msys=true\n    ;;\nesac\n\n# Attempt to set APP_HOME\n# Resolve links: $0 may be a link\nPRG=\"$0\"\n# Need this for relative symlinks.\nwhile [ -h \"$PRG\" ] ; do\n    ls=`ls -ld \"$PRG\"`\n    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n    if expr \"$link\" : '/.*' > /dev/null; then\n        PRG=\"$link\"\n    else\n        PRG=`dirname \"$PRG\"`\"/$link\"\n    fi\ndone\nSAVED=\"`pwd`\"\ncd \"`dirname \\\"$PRG\\\"`/\" >/dev/null\nAPP_HOME=\"`pwd -P`\"\ncd \"$SAVED\" >/dev/null\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n    else\n        JAVACMD=\"$JAVA_HOME/bin/java\"\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=\"java\"\n    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\nfi\n\n# Increase the maximum file descriptors if we can.\nif [ \"$cygwin\" = \"false\" -a \"$darwin\" = \"false\" ] ; then\n    MAX_FD_LIMIT=`ulimit -H -n`\n    if [ $? -eq 0 ] ; then\n        if [ \"$MAX_FD\" = \"maximum\" -o \"$MAX_FD\" = \"max\" ] ; then\n            MAX_FD=\"$MAX_FD_LIMIT\"\n        fi\n        ulimit -n $MAX_FD\n        if [ $? -ne 0 ] ; then\n            warn \"Could not set maximum file descriptor limit: $MAX_FD\"\n        fi\n    else\n        warn \"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\"\n    fi\nfi\n\n# For Darwin, add options to specify how the application appears in the dock\nif $darwin; then\n    GRADLE_OPTS=\"$GRADLE_OPTS \\\"-Xdock:name=$APP_NAME\\\" \\\"-Xdock:icon=$APP_HOME/media/gradle.icns\\\"\"\nfi\n\n# For Cygwin, switch paths to Windows format before running java\nif $cygwin ; then\n    APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`\n    CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`\n    JAVACMD=`cygpath --unix \"$JAVACMD\"`\n\n    # We build the pattern for arguments to be converted via cygpath\n    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`\n    SEP=\"\"\n    for dir in $ROOTDIRSRAW ; do\n        ROOTDIRS=\"$ROOTDIRS$SEP$dir\"\n        SEP=\"|\"\n    done\n    OURCYGPATTERN=\"(^($ROOTDIRS))\"\n    # Add a user-defined pattern to the cygpath arguments\n    if [ \"$GRADLE_CYGPATTERN\" != \"\" ] ; then\n        OURCYGPATTERN=\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\"\n    fi\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    i=0\n    for arg in \"$@\" ; do\n        CHECK=`echo \"$arg\"|egrep -c \"$OURCYGPATTERN\" -`\n        CHECK2=`echo \"$arg\"|egrep -c \"^-\"`                                 ### Determine if an option\n\n        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition\n            eval `echo args$i`=`cygpath --path --ignore --mixed \"$arg\"`\n        else\n            eval `echo args$i`=\"\\\"$arg\\\"\"\n        fi\n        i=$((i+1))\n    done\n    case $i in\n        (0) set -- ;;\n        (1) set -- \"$args0\" ;;\n        (2) set -- \"$args0\" \"$args1\" ;;\n        (3) set -- \"$args0\" \"$args1\" \"$args2\" ;;\n        (4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;\n        (5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;\n        (6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;\n        (7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;\n        (8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;\n        (9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;\n    esac\nfi\n\n# Split up the JVM_OPTS And GRADLE_OPTS values into an array, following the shell quoting and substitution rules\nfunction splitJvmOpts() {\n    JVM_OPTS=(\"$@\")\n}\neval splitJvmOpts $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS\nJVM_OPTS[${#JVM_OPTS[*]}]=\"-Dorg.gradle.appname=$APP_BASE_NAME\"\n\nexec \"$JAVACMD\" \"${JVM_OPTS[@]}\" -classpath \"$CLASSPATH\" org.gradle.wrapper.GradleWrapperMain \"$@\"\n"
        },
        {
          "name": "gradlew.bat",
          "type": "blob",
          "size": 2.259765625,
          "content": "@if \"%DEBUG%\" == \"\" @echo off\n@rem ##########################################################################\n@rem\n@rem  Gradle startup script for Windows\n@rem\n@rem ##########################################################################\n\n@rem Set local scope for the variables with windows NT shell\nif \"%OS%\"==\"Windows_NT\" setlocal\n\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nset DEFAULT_JVM_OPTS=\n\nset DIRNAME=%~dp0\nif \"%DIRNAME%\" == \"\" set DIRNAME=.\nset APP_BASE_NAME=%~n0\nset APP_HOME=%DIRNAME%\n\n@rem Find java.exe\nif defined JAVA_HOME goto findJavaFromJavaHome\n\nset JAVA_EXE=java.exe\n%JAVA_EXE% -version >NUL 2>&1\nif \"%ERRORLEVEL%\" == \"0\" goto init\n\necho.\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\necho.\necho Please set the JAVA_HOME variable in your environment to match the\necho location of your Java installation.\n\ngoto fail\n\n:findJavaFromJavaHome\nset JAVA_HOME=%JAVA_HOME:\"=%\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\n\nif exist \"%JAVA_EXE%\" goto init\n\necho.\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\necho.\necho Please set the JAVA_HOME variable in your environment to match the\necho location of your Java installation.\n\ngoto fail\n\n:init\n@rem Get command-line arguments, handling Windowz variants\n\nif not \"%OS%\" == \"Windows_NT\" goto win9xME_args\nif \"%@eval[2+2]\" == \"4\" goto 4NT_args\n\n:win9xME_args\n@rem Slurp the command line arguments.\nset CMD_LINE_ARGS=\nset _SKIP=2\n\n:win9xME_args_slurp\nif \"x%~1\" == \"x\" goto execute\n\nset CMD_LINE_ARGS=%*\ngoto execute\n\n:4NT_args\n@rem Get arguments from the 4NT Shell from JP Software\nset CMD_LINE_ARGS=%$\n\n:execute\n@rem Setup the command line\n\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\n\n@rem Execute Gradle\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%\n\n:end\n@rem End local scope for the variables with windows NT shell\nif \"%ERRORLEVEL%\"==\"0\" goto mainEnd\n\n:fail\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\nrem the _cmd.exe /c_ return code!\nif  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1\nexit /b 1\n\n:mainEnd\nif \"%OS%\"==\"Windows_NT\" endlocal\n\n:omega\n"
        },
        {
          "name": "settings.gradle",
          "type": "blob",
          "size": 0.1259765625,
          "content": "include ':blockcanary-android-no-op'\ninclude ':blockcanary-analyzer'\ninclude ':blockcanary-android'\ninclude ':blockcanary-sample'"
        }
      ]
    }
  ]
}