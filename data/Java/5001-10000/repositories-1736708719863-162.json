{
  "metadata": {
    "timestamp": 1736708719863,
    "page": 162,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "527515025/springBoot",
      "stars": 6596,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.208984375,
          "content": "\n/.settings\n/bin\n*/target/*\n/logs\n*/out/\n\n# filter config files, except .gitignore\n*.MF\n!.gitignore\n*.iml\n*.exe\n# eclipse ignore\n.project\n.classpath\n# IDEA ignore\n.idea\n.class\n*.class\n*.log\n!application.properties\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.765625,
          "content": "## 致歉\n由于自己懒以及身体对issuse 解决的不及时。请大家以后提issuse 的时候写清楚 模块名 比如“springboot-SpringSecurity4” 和问题，我会抽时间抓紧解决。\n\n## springboot-SpringSecurity0  \n\n包含两部分代码：\n\n* 第一是  博客 springboot+mybatis＋SpringSecurity 实现用户角色数据库管理   地址：http://blog.csdn.net/u012373815/article/details/54632176\n\n* 第二是  博客 springBoot+springSecurity验证密码MD5加密  地址：http://blog.csdn.net/u012373815/article/details/54927070\n\n## springboot-SpringSecurity1  \n\n*  博客 springBoot+springSecurity 数据库动态管理用户、角色、权限（二）   地址：http://blog.csdn.net/u012373815/article/details/54633046\n\n## springboot-SpringSecurity2\n\n*  博客  springboot+security restful权限控制官方推荐（五）   地址：http://blog.csdn.net/u012373815/article/details/59749385\n\n## springboot-SpringSecurity3\n\n*  博客  springBoot+springSecurity 动态管理Restful风格权限（三） 地址：http://blog.csdn.net/u012373815/article/details/55225079  \n\n## springboot-SpringSecurity4\n* 实战，项目中正在用\n\n## springboot-WebSocket  \n\n包含三部分代码,三部分代码有交合:\n\n* 第一是  博客 spring boot ＋WebSocket 广播式（一）地址：http://blog.csdn.net/u012373815/article/details/54375195  中所示代码\n\n* 第二是  博客 spring boot ＋WebSocket 广播式（二）地址：http://blog.csdn.net/u012373815/article/details/54377937   中所示代码\n \n* 第三是  博客 spring boot ＋WebSocket（三） 点对点式 地址： http://blog.csdn.net/u012373815/article/details/54380476  中所示代码\n\n\n\n## springboot-Cache\n\n包含两部分代码：\n\n* 第一部分是 博客 springboot的缓存技术 地址： http://blog.csdn.net/u012373815/article/details/54564076  \n\n* 第二部分是 博客 springboot缓存篇（二）－redis 做缓存 地址：http://blog.csdn.net/u012373815/article/details/54572687\n\n## springboot-Cache2\n\n* 是  博客  springboot缓存 之 GuavaCacheManager   地址：http://blog.csdn.net/u012373815/article/details/60468033\n\n\n\n## springboot-shiro\n\n* 是博客  springboot集成shiro 实现权限控制   地址：http://blog.csdn.net/u012373815/article/details/57532292\n\n##springboot-shior2\n\n是使用shior 框架调取用户权限服务，进行登录权限验证的例子，其中的用户权限服务没有写，都是用TODO 标示出来了，使用时可以根据各自的用户权限服务进行编码替换\n\nspringboot-shiro2 也是和dubbo 的结合例子是 消费者的示例。\n\n## springboot-swagger-ui\n* 博客 spring boot ＋Swagger-ui 自动生成API文档 地址： https://blog.csdn.net/u012373815/article/details/82685962\n\n## springBoot-Quartz\n* 博客 springBoot-Quartz 定时任务 地址： https://abelyang.blog.csdn.net/article/details/86740625\n\n## springboot 整合mybatis2\n* springboot 整合mybatis2 更简便的整合方式地址： https://abelyang.blog.csdn.net/article/details/89296273\n\n## springboot+Kafka\n* kafka 与 sprigboot 的结合，springboot 从Kafka中读取数据的小例子地址： https://abelyang.blog.csdn.net/article/details/89296305\n\n## springboot+es\n* Elasticsearch 与 sprigboot 的结合，springboot 操作es的小例子地址： https://abelyang.blog.csdn.net/article/details/89296320\n\n## Springboot多数据源切换\n* springboot 多个数据源的配置， 一个springboot 项目操作多个数据库的数据：https://abelyang.blog.csdn.net/article/details/89296341\n\n##springboot-dubbo\n\n该项目是Springboot 和 dubbo 结合的例子，是provider 的示例，提供服务。简单的写了一些用户和权限的接口没有写的很完整，主要是为了提现dubbo 服务\nSpringboot-shiro2 也是和dubbo 的结合例子是 消费者的示例。\n\n\n\n##未完待续。。。\n"
        },
        {
          "name": "abel-parent",
          "type": "tree",
          "content": null
        },
        {
          "name": "abel-util",
          "type": "tree",
          "content": null
        },
        {
          "name": "springWebSocket",
          "type": "tree",
          "content": null
        },
        {
          "name": "springboot-Cache",
          "type": "tree",
          "content": null
        },
        {
          "name": "springboot-Cache2",
          "type": "tree",
          "content": null
        },
        {
          "name": "springboot-Quartz",
          "type": "tree",
          "content": null
        },
        {
          "name": "springboot-SpringSecurity0",
          "type": "tree",
          "content": null
        },
        {
          "name": "springboot-SpringSecurity1",
          "type": "tree",
          "content": null
        },
        {
          "name": "springboot-dubbo",
          "type": "tree",
          "content": null
        },
        {
          "name": "springboot-dynamicDataSource",
          "type": "tree",
          "content": null
        },
        {
          "name": "springboot-elasticsearch",
          "type": "tree",
          "content": null
        },
        {
          "name": "springboot-jpa",
          "type": "tree",
          "content": null
        },
        {
          "name": "springboot-kafka",
          "type": "tree",
          "content": null
        },
        {
          "name": "springboot-mybatis",
          "type": "tree",
          "content": null
        },
        {
          "name": "springboot-mybatis2",
          "type": "tree",
          "content": null
        },
        {
          "name": "springboot-neo4j",
          "type": "tree",
          "content": null
        },
        {
          "name": "springboot-redis-queue",
          "type": "tree",
          "content": null
        },
        {
          "name": "springboot-rocketmq-ali",
          "type": "tree",
          "content": null
        },
        {
          "name": "springboot-rocketmq",
          "type": "tree",
          "content": null
        },
        {
          "name": "springboot-shiro",
          "type": "tree",
          "content": null
        },
        {
          "name": "springboot-shiro2",
          "type": "tree",
          "content": null
        },
        {
          "name": "springboot-springCloud",
          "type": "tree",
          "content": null
        },
        {
          "name": "springboot-springSecurity2",
          "type": "tree",
          "content": null
        },
        {
          "name": "springboot-springSecurity3",
          "type": "tree",
          "content": null
        },
        {
          "name": "springboot-springSecurity4",
          "type": "tree",
          "content": null
        },
        {
          "name": "springboot-swagger-ui",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}