{
  "metadata": {
    "timestamp": 1736708780038,
    "page": 268,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "graphhopper/graphhopper",
      "stars": 5559,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.548828125,
          "content": "root = true\n\n# https://github.com/graphhopper/graphhopper/blob/master/CONTRIBUTING.md#code-formatting\n\n[*]\ncharset = utf-8\nend_of_line = lf\nindent_size = 4\nindent_style = space\ninsert_final_newline = true\nmax_line_length = 100\ntab_width = 4\n\n[*.java]\nij_continuation_indent_size = 8\nij_formatter_off_tag = @formatter:off\nij_formatter_on_tag = @formatter:on\nij_formatter_tags_enabled = true\nij_smart_tabs = false\nij_visual_guides = none\nij_wrap_on_typing = false\n\n[*.json]\nindent_size = 2\nindent_style = space\n\n[*.{yml,yaml}]\nindent_size = 2\nindent_style = space\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.201171875,
          "content": "# Set default behaviour, in case users don't have core.autocrlf set.\n* text=lf\n\n# Explicitly declare text files we want to always be normalized and converted \n# to native line endings on checkout.\n*.sh text"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.853515625,
          "content": "target/\n*~\n*-gh/\n*.osm\nnbactions*.xml\n/config.yml\nbuild.xml\nmaven/\nmeasurement*.properties\ngen/\nbin/\n*.map\nandroid/libs/graphhopper-*-android.jar\n*/nbactions.xml\n.idea\n.idea/\n*iml\n# keep these web/ paths for now. they are outdated but probably useful for a while in case we switch between branches\n/web/node\n/web/src/main/resources/assets/js/config/options_prod.js\n/web/src/main/resources/assets/js/main.js\n/web-bundle/node\n/web-bundle/src/main/resources/com/graphhopper/maps/js/config/options_prod.js\n/web-bundle/src/main/resources/com/graphhopper/maps/js/main.js\n/web/dependency-reduced-pom.xml\n*.pbf\n!/core/src/test/resources/com/graphhopper/reader/osm/*.pbf\n*.dem\n*.log\n/logs\nsrtmprovider/\ncgiarprovider/\n.*#\nandroid/build/\nandroid/app/build/\nandroid/.gradle\n.settings/\n.classpath\n.project\nlocal/\nlocal.properties\n**/node_modules\n.DS_Store\n/graph-cache\npackage-lock.json"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 34.9755859375,
          "content": "### 11.0 [not yet released]\n\n- max_weight_except: changed NONE to MISSING\n- the list of restrictions for BIKE returned from OSMRoadAccessParser.toOSMRestrictions is again `[bicycle, vehicle, access]` and not `[bicycle, access]` like before #2981\n- road_access now contains value of highest transportation mode for CAR, i.e. access=private, motorcar=yes will now return YES and not PRIVATE\n- car.json by default avoids private roads\n- maxspeed<5 is ignored, maxspeed=none is ignored with some exceptions, maxspeed parsing and related constants were renamed #3077\n\n### 10.0 [5 Nov 2024]\n\n- The config-example.yml uses a non-empty snap_preventions default array: [tunnel, bridge and ferry] for the /route endpoint\n- the default u-turn time is now 0, the default u-turn weight is still infinite \n- turn restriction support for restrictions with overlapping and/or multiple via-edges/ways, #3030\n- constructor of BaseGraph.Builder uses byte instead of integer count.\n- KeyValue is now KValue as it holds the value only. Note, the two parameter constructor uses one value for the forward and one for the backward direction (and no longer \"key, value\")\n- sac_scale priority handling for bicycles moved to the bike custom models\n\n### 9.0 [23 Apr 2024]\n\n- max_slope is now a signed decimal, see #2955\n- move sac_scale handling out of foot_access parser and made foot safer via lowering to sac_scale<2, same for hike sac_scale<5\n- removed shortest+fastest weightings, #2938\n- u_turn_costs information is no longer stored in profile. Use the TurnCostsConfig instead\n- the custom models do no longer include the speed, access and priority encoded values only implicitly, see docs/migration/config-migration-08-09.md\n- conditional access restriction tags are no longer considered from vehicle tag parsers and instead a car_temporal_access encoded value (similarly for bike + foot) can be used in a custom model. This fixes #2477. More details are accessible via path details named according to the OSM tags e.g. for access:conditional it is \"access_conditional\" (i.e. converted from OSM access:conditional). See #2863 and #2965.\n- replaced (Vehicle)EncodedValueFactory and (Vehicle)TagParserFactory with ImportRegistry, #2935\n- encoded values used in custom models are added automatically, no need to add them to graph.encoded_values anymore, #2935\n- removed the ability to sort the graph (graph.do_sort) due to incomplete support, #2919\n- minor changes for import hooks, #2917\n- removed wheelchair vehicle and related parsers, with currently no complete replacement as it needs to be redone properly with a custom model\n- removed deprecated PMap.put\n\n### 8.0 [18 Oct 2023]\n\n- access \"turn\"-EncodedValue of EncodingManager through separate methods, see #2884\n- removed fastest weighting for public usage, use custom instead, see #2866\n- removed shortest weighting for public usage, use a high distance_influence instead, see #2865\n- removed duration:seconds as intermediate tag\n- /info endpoint does no longer return the vehicle used per profile and won't return encoded value of vehicles like car_average_speed\n- Country rules no longer contain maxspeed handling, enable a much better alternative via `max_speed_calculator.enabled: true`. On the client side use `max_speed_estimated` to determine if max_speed is from OSM or an estimation. See #2810\n- bike routing better avoids dangerous roads, see #2796 and #2802\n- routing requests can be configured to timeout after some time, see #2795\n- custom_model_file string changed to custom_model_files array, see #2787\n- renamed EdgeKVStorage to KVStorage as it is (temporarily) used for node tage too, see #2705\n- bike vehicles are now allowed to go in reverse direction of oneways, see custom_models/bike.json #196\n- prefer cycleways, bicycle_road and cyclestreet for bike routing, see #2784 and #2778\n- add support for further surfaces like pebblestones or concrete:lanes, see #2751\n- reduced memory usage for urban density calculation, see #2828\n- urban density is now based on road junctions, so the according parameters need adjustment in case\n  the config file does not use the defaults, see #2842\n- removed heading penalty *time*, see #2563\n- base graph no longer allows loop edges, see #2862\n\n### 7.0 [14 Mar 2023]\n\n- access node tags via List instead of Map: List<Map<String, Object>> nodeTags = way.getTag(\"node_tags\", emptyList()), see #2705\n- remove StringEncodedValue support from custom model due to insufficient usage/testing\n- handle also node_tags in handleWayTags, when extending AbstractAccessParser call handleNodeTags, #2738\n- Format of 'areas' in CustomModel changed to 'FeatureCollection'. The old format is deprecated and will be removed in a later version, #2734\n- TagParser#handleWayTags no longer returns an IntsRef. We assume it never returned anything other than the input IntsRef.\n- there is no longer a default value for the distanceInfluence parameter in custom models sent via client-hc. Previously it was 70. Not setting it explicitly now means the server-side value will be used. getDistanceInfluence can now be null. Server-side profiles with custom weighting now use distance_influence: 0 by default (previously it was 70). see #2716\n- there is a new, required 'import.osm.ignored_highways' configuration option that must be used to not increase the graph size and decrease performance for motorized-only routing compared to previous versions, #2702\n- new osm_way_id encoded value, #2701\n- the parameters vehicle, weighting, edge_based and turn_costs are no longer supported, use the profile parameter instead\n- removed motorroad to road_class conversion, #2329\n- removed YAML support for custom models on the server-side. Only allow JSON with // comments.\n- Bike2WeightTagParser was removed. Use the bike vehicle with a custom model, see custom_models/bike.json\n- CurvatureWeighting was removed. Use a custom model with 'curvature' instead, see custom_models/curvature.json (#2665)\n- internal keys for EdgeKVStorage changed to contain the street_ prefix like the path details too. Similarly, the\n  extra_info in the instructions of the API response, see #2661\n- subnetwork preparation can now be run in parallel to slightly speed up the base graph import (#2737)\n- The block_area parameter was removed. Use custom model areas instead.\n\n### 6.0 [13 Sep 2022]\n\n- Car4WDTagParser was removed. Use the roads vehicle with a custom model, see custom_models/car4wd.json see #2651\n- When using a DecimalEncodedValue with useMaximumAsInfinity=true and a single bit of space make sure you always use \n  Double.POSITIVE_INFINITY to set the value, see #2646\n- renamed DouglasPeucker to RamerDouglasPeucker\n- path details at via-points are no longer merged, see #2626\n- removed the FlagEncoder interface. for example encoder.getAccessEnc() is now encodingManager.getBooleanEncodedValue(\n  VehicleAccess.key(\"car\")), #2611\n- backward incompatible change as instructions and the street_name path detail do no longer contain the ref #2598\n- StringIndex is now EdgeKVStorage and can store e.g. byte arrays. String values needs to be limited to 255 bytes before\n  storing them. See EdgeKVStorage.cutString and #2597.\n- the Matrix client changed and users have to adapt the usage, see #2587\n- replaced car$access with car_access (and same for <vehicle>$average_speed and <vehicle>$priority)\n- don't allow cars or motorcycles to use ways tagged with service=emergency_access (#2484)\n- faster flexible routing, especially in conjunction with turn costs (#2571)\n- negative OSM Ids are not supported any longer (#2652)\n- new urban_density encoded value based on road density calculation (#2637)\n\n### 5.0 [23 Mar 2022]\n\n- Use routing.instructions to disable instructions on the server side. datareader.instructions is used to disable the\n  name parsing (#2537)\n- no more explicit passByDefaultBarriers in FlagEncoders, blockByDefaultBarriers was renamed to just barriers, no more\n  handling of highway=ford (#2538)\n- OSMReader no longer sets the artificial estimated_distance tag, but sets the edge_distance and point_list tags for all\n  edges, the way_distance for selected ways and additionally the duration:seconds and speed_from_duration tags when the\n  duration tag is present (#2528)\n- fixed speed calculation for ferry routes with duration tags (#2528)\n- request gzipping for matrix and route clients (#2511)\n- bugfix: client-hc now considers headings and custom models (#2009, #2535)\n- the artificial tag duration:seconds is now a long, no longer a string, commit 6d81d8ae8de52987522991edd835e42c8d2046cf\n- added FlagEncoder#getName (use just like toString() before), commit 86f6a8b5209ad8ef47c24d935f5746e7694eb11c\n- faster edge-based CH preparation, especially with large u-turn costs and GermanyCountryRule (many large weight edges\n  due to access=destination on tracks) (#2522)\n- consider subnetworks when evaluating curbside constraints (#2502)\n- improved node-based CH performance (faster preparation and less shortcuts(=memory usage)) (#2491)\n- the GraphHopperApplication class was moved from com.graphhopper.http to com.graphhopper.application (#2487)\n- it is now possible to add CH preparations to an existing graph folder, CH graphs no longer need to be added before\n  GraphHopperStorage#freeze (#2481)\n- the two EncodedValue implementations accept now negative values too. The default value can now only be 0 or\n  Double.Infinity, but this option will be removed later too, see discussion in #2473\n- throw MaximumNodesExceededException instead of a generic IllegalArgumentException (#2464)\n- removed graphhopper.sh script. Use java command directly instead. (#2431)\n- removed the ferry argument of TagParser#handleWayTags. ferry ways can be recognized using the reader way (#2467)\n- removed RoadEnvironment.SHUTTLE_TRAIN. this is covered by `FERRY` (#2466)\n- create edge flags per edge, not per way. increases custom_area precision. areas are recognized by points along the\n  edges now -> (#2457, #2472)\n- fixed handling of too large mtb:scale tags (#2458)\n- added Toll.MISSING; custom models must be adapted to check for explicit toll values e.g `toll != NO`\n  -> `toll == HGV || toll == ALL` (#2164)\n- use GraphHopper#setGraphHopperLocation before calling load() instead of GraphHopper#load(graphHopperLocation) (#2437)\n- barrier nodes at junctions are now ignored (#2433)\n- AbstractFlagEncoder#handleNodeTags was replaced by AbstractFlagEncoder#isBarrier (#2434)\n- consider heading when snapping coordinates to the road network, this is especially important for navigation (#2411)\n- OSMReader no longer sets the artificial 'estimated_center' tag and processNode also receives EMPTY_NODEs (971d686)\n\n### 4.0 [29 Sep 2021]\n\n- faster node-based CH preparation (~20%), (#2390)\n- more flexible ElevationProvider interface, support providing elevation via node tags (#2374, #2381)\n- added country encoded value for all countries (#2353)\n- bike improvements (#2357, #2371, #2389)\n- improved handling of barriers (#2345, #2340, #2406)\n- removed spatial rules, replaced by country rules and custom areas (#2353)\n- removed api module and moved it into web-api, no more Jackson MixIns (#2372)\n- flag encoders are no longer versioned (#2355)\n- JSON route response contains now bbox if start and end are identical\n- renamed PriorityCode enums: AVOID_IF_POSSIBLE -> SLIGHT_AVOID, REACH_DEST -> AVOID, AVOID_AT_ALL_COSTS -> AVOID_MORE, WORST -> BAD\n- added smoothness encoded value, used to determine bike speed (#2303)\n- maps: custom_model is now included in URL (#2328)\n- maps/isochrone: works for different profiles now (#2332)\n- there is no stable tag anymore, either use master or one of the release branches like 2.x, 3.x, ...\n- moved custom model editor to github.com/graphhopper/custom-model-editor\n- PointList#getSize() -> PointList#size()\n- migrated tests from junit 4 to 5 (#2324)\n- barriers do no longer block by default for car; remove block_barriers config option (see discussion in #2340)\n\n### 3.0 [17 May 2021]\n\n- removed the stable tag (was pointing to commit dd2c20c763e4c19b701e92386432b37713cd8dc5)\n- fix location lookup with point hints for curved roads, #2319\n- custom_model_file only accepts file names without path. Use custom_model_folder instead.\n- the load method in GraphHopperWeb (client-hc) was removed\n- routing.ch.disabling_allowed and routing.lm.disabling_allowed configuration options are no longer supported\n- moved the graphhopper-reader-osm module into core, use the graphhopper-core module directly instead. GraphHopperOSM is\n  deprecated, use GraphHopper instead.\n- subnetwork removal has changed and for every LocationIndex lookup one needs to explicitly include the new 'subnetwork'\n  EncodedValue, see #2290\n- DefaultEdgeFilter was renamed to AccessFilter. Use DefaultSnapFilter for the location lookup to make sure the query\n  points do not snap to subnetworks. Previously subnetwork edges' access was set to zero, but this is no longer the\n  case. Now subnetworks need to be identified by the subnetwork encoded value.\n- moved the graphhopper-isochrone module into graphhopper-core\n- removed setEncodingManager use setProfiles instead or for more custom requirements use\n  GraphHopper.getEncodingManagerBuilder\n- CustomWeighting language breaks old format but is more powerful and easier to read; it also allows factors >1 for\n  server-side CustomModels\n- renamed GHUtilities.setProperties to setSpeed\n- Helper.createFormatter is using the ENGLISH Locale instead of UK, see #2186\n- the name of an encoded value can only contain lower letters, underscore or numbers. It has to start with a lower\n  letter\n- default for GraphHopperMatrixWeb (client for Matrix API) is now the sync POST request without the artificial polling\n  delay in most cases\n- refactored TransportationMode to better reflect the usage in source data parsing only\n- customizable routing is included in the endpoint /route (under the \"custom_model\" entry) and does not need to be\n  enabled\n- the format of customizable routing completely changed but the maps demo includes a simple editor to learn it easily (#2239). See #2209 and #2251. See examples in this blog\n  post: https://www.graphhopper.com/blog/2020/05/31/examples-for-customizable-routing/\n- removed Dockerfile\n- the second argument of the VirtualEdgeIteratorState constructor is now an edge key (was an edge id before)\n- removed instruction annotations(cycleway, off_bike, ford, ferry, private, toll)\n- the boundaries file is now expected to provide the countrycodes via the `ISO3166-1:alpha3` property\n\n### 2.0 [29 Sep 2020]\n\n- AbstractFlagEncoder#getMaxSpeed returns now Double#NaN instead of -1 if no maxspeed was found\n- renamed QueryResult -> Snap\n- much faster CH preparation (node- and edge-based), but increased memory usage during preparation, #2132\n- added navigation repo #2071\n- use Java 8 also for core, client-hc and reader-osm modules. all modules use Java 8 now\n- removed android demo, #1940\n- added edge key path detail, #2073\n- fixed bug for turn restrictions on bridges/tunnels, #2070\n- improved resolution of elevation profiles, 3D Ramer-Douglas-Peucker and long edge sampling, #1953\n\n### 1.0 [22 May 2020]\n\n- changes to config.yml:\n  * properties have to follow the snake_case, #1918, easy convert via https://github.com/karussell/snake_case\n  * all routing profiles have to be configured when setting up GraphHopper, #1958, #1922\n  * for developing with JavaScript, npm and the web UI it is important to change your assets overrides to\n    web/target/classes/assets/, see #2041\n- moved SPTEntry and ShortcutUnpacker to com.graphhopper.routing(.ch)\n- renamed PathWrapper to ResponsePath\n- removed min_one_way_network_size parameter, #2042\n- moved package from core/src/test/java/com/graphhopper/routing/profiles to ev\n- removed HintsMap\n- removed /change endpoint\n- removed vehicle,weighting and edge_based from GraphHopper class, replaced with new profile parameter, #1958\n- there no longer is a default vehicle, not setting the vehicle now only works if there is exactly one profile that\n  matches the other parameters. anyway you should use the new profile rather than the vehicle parameter.\n- removed IPFilter. Use a firewall instead.\n- PMap refactored. It is recommended to use putObject(String, Object) instead of put, #1956\n- removed UnsafeDataAccess as not maintained, see #1620\n- add profiles parameter and replace prepare.ch/lm.weightings and prepare.ch.edge_based with profiles_ch/lm config\n  parameters, #1922\n- GraphHopper class no longer enables CH by default, #1914\n- replaced command line arguments -Dgraphhopper.. with -Ddw.graphhopper.. due to #1879, see also #1897\n- GraphHopper.init(CmdArgs)->GraphHopper.init(GraphHopperConfig), see #1879\n- removed GenericWeighting and DataFlagEncoder as a normal CarFlagEncoder does the job too. Or use the new\n  CustomWeighting see #1841\n- remove TurnWeighting, see #1863\n- speed up path simplification with path details/instructions, see #1802\n- revert compression of landmark preparation data, see #1749 and #1376\n- add required EncodedValues like road_class to EncodingManager if not added from user\n- removed PathNative,PathBidirRef,Path4CH,EdgeBasedPathCH and moved path extraction code out of Path class, added\n  PathExtractor,BidirPathExtractor(+subclasses for CH) instead, #1730\n- conditional turn restrictions now supported, #1683\n- added new `curbside` feature, #1697\n- moved QueryGraph to new routing.querygraph package\n- removed GraphExtension, #1783, renamed TurnCostExtension to TurnCostStorage\n- removed `heading`, `pass_through` and `ch.force_heading` parameters for speed mode/CH, #1763\n\n### 0.13 [17 Sep 2019]\n\n- removed docker compose file\n- PathDetails return null instead of -1 for Infinity by default\n- replaced AverageSpeedDetails by DecimalDetails\n- moved TagParser into new package: com.graphhopper.routing.util.parsers\n- removed FlagEncoderFactory.DEFAULT\n- removed forestry and motorroad from RoadClass\n- SpatialRule.AccessValue replaced by RoadAccess\n- removed EncodedValueLookup.hasEncoder, use hasEncodedValue instead\n- removed MappedDecimalEncodedValue: should be replaced with FactoredDecimalEncodedValue\n- DataFlagEncoder: it is now required to add EncodedValues before. graph.encoded_values:\n  max_speed,road_class,road_environment,road_access\n- instead of EncodingManager.ROUNDABOUT use Roundabout.KEY\n- changed output format of result=pointlist and moved it into separate endpoint /spt\n- removed TraversalMode.EDGE_BASED_1DIR and TraversalMode.EDGE_BASED_2DIR_UTURN, renamed TraversalMode.EDGE_BASED_2DIR\n  to TraversalMode.EDGE_BASED\n- to prevent u-turns when using edge-based algorithms it is now required to use TurnWeighting, #1640\n- GraphHopperStorage.getGraph(Class) was replaced by GraphHopperStorage.getBase/CHGraph(), #1669\n- CHGraph.shortcut(int, int) was removed (use .shortcut(int, int, ...) and/or .shortcutEdgeBased(int, int, ...) instead, #1693\n- CH graphs are now identified using CHProfile instead of Weighting, #1670\n- removed the 'traversal_mode` request parameter for /route, instead of 'traversal_mode=edge_based_2dir' use\n  edge_based=true\n- removed GraphHopper.set/getTraversalMode() methods, #1705\n- edge-based CH is now chosen by default if it was prepared, #1706\n- it is now possible to specify finite u-turn costs for CH preparation, #1671\n- removed distances from CH shortcuts, reduces memory consumption per shortcut by 4 bytes (about 8-10%), #1719\n\n### 0.12 [25 Mar 2019]\n\n- renamed VirtualEdgeIteratorState.getOriginalEdgeKey to more precise getOriginalEdgeKey #1549\n- access refactoring #1436 that moves AccessValue into SpatialRule.Access\n- refactoring of EncodingManager to use builder pattern. Migration should be simple. Replace new EncodingManager with\n  EncodingManager.crea- The methods GraphHopper.setEnableInstructions/setPreferredLanguage is now in\n  EncodingManager.Builder\n- EncodingManager.supports renames to hasEncoder\n- big refactoring #1447: to increase 64bit limit of flags, make reverse direction handling easier, to allow shared\n  EncodedValues, remove reverseFlags method, much simpler property access, simplify FlagEncoder (maybe even deprecate\n  this interface at a later stage)\n- moved shp-reader into separate repository: https://github.com/graphhopper/graphhopper-reader-shp\n\n### 0.11 [12 Sep 2018]\n\n- web resources for dropwizard web framework (no servlets anymore) #1108\n- prefix -Dgraphhopper. for command line arguments necessary, see docs/web/quickstart.md or\n  docs/core/quickstart-from-source.md#running--debbuging-with-intellij for details\n- delegated reading properties to dropwizard, i.e. the new format yml is not read again in GraphHopper.init\n- changed file format for landmarks #1376\n- convert properties into new yml format via: https://gist.github.com/karussell/dbc9b4c455bca98b6a38e4a160e23bf8\n\n### 0.10 [26 Feb 2018]\n\n- introduce path details\n- added handcoded API java client to this repository\n\n### 0.9 [13 Jun 2017]\n\n- remove war bundling support #297\n- rename of DefaultModule to GraphHopperModule and GHServletModule to GraphHopperServletModule\n- EncodedValue uses Math.round(value/factor). This can change the retrieved values for EncodedValues #954\n- EncodedDoubleValue and EncodedValue requires maxValue/factor to be a natural number #954\n- default base algorithm for all modes is bidirectional A* (except speed mode)\n- introduced landmarks based hybrid mode, #780\n- moving all prepare.xy configs to prepare.ch.xy and e.g. disallow the old\n- removed deprecated methods in GraphHopper (setCHWeighting, setCHWeightings, getCHWeightings, setCHWeightings,\n  getCHPrepareThreads, setCHPrepareThreads), Path.calcMillis, findID of LocationIndex and all implementations\n\n### 0.8 [18 Oct 2016]\n\n- refactoring to Weighting class, see #807\n- removed FlagEncoder from parameters as weighting.getFlagEncoder can and is used\n- all properties with prefix \"osmreader.\" changed to \"datareader.\" and osmreader.osm changed to datareader.file\n- maven/gradle dependency graphhopper is now split into graphhopper-core and graphhopper-reader-osm, i.e. if you\n  previouls depend on 'graphhopper' artificat you should now use graphhopper-reader-osm except environments like Android\n  where you just load the graph and do no import\n- use GraphHopperOSM as base class instead of GraphHopper\n- OSM reader separated from core, use new graphhopper-core package\n- moved subnetwork code into own package com.graphhopper.routing.subnetwork\n- moved weighting code into own package com.graphhopper.routing.weighting\n- code format has changed, so it is important to change your PRs too before you merge master, see discussion #770\n\n### 0.7 [15 Jun 2016]\n\n- added snapped points to output JSON for every path\n- the foot routing is now much smoother and only considers safe paths, to use beautiful roads (i.e. prefer hiking routes\n  etc) use the new 'hike' profiles, see #633\n- vehicle constants have moved to FlagEncoderFactory\n- several constants changed to under score notation see #719 with a few breaking changes, e.g. use lower case names for\n  flag encoders or jsonp_allowed instead of the jsonpAllowed annotation\n- moving all string parameter constants into the Parameters class\n- no more acceptedRailways set see #662 for more information\n- web API: content type of gpx export is now application/gpx+xml if not explicitly specified\n- use prepare.ch.weightings instead of prepare.chWeighting e.g. for disabling CH use prepare.ch.weightings=no\n- GraphHopper class is refactored regarding RoutingAlgorithmFactory in order to fix problem when integrating flexibility\n  routing, most of the CH related stuff is moved into CHAlgoFactoryDecorator, several methods are deprecated to use the\n  methods of the decorator, see #631\n- WeightingMap is now named HintsMap\n- use the correct graphHopperFolder as no automatic fallback to 'folder-gh' is happening anymore, see #704\n- refactored FlagEncoder.handleFerryWay to getFerrySpeed to make it possible to fix #665\n- removed setWeightLimit as too unspecific for arbitrary weights, use setMaxVisitedNodes instead\n- missing renames for Path.setEdgeEntry -> setSPTEntry and AbstractAlgorithm.createEdgeEntry -> createSPTEntry\n\n### 0.6 [08 Feb 2016]\n\n- removed methods deprecated in 0.4 and 0.5\n- renamed EdgeEntry to SPTEntry and AStar.AStarEdge to AStar.AStarEntry\n- parameter force removed from AbstractFlagEncoder.applyMaxSpeed\n- GHResponse now wraps multiple PathWrapper; renamed GraphHopper.getPaths to calcPaths as 'get' sounded too cheap; a new\n  method RoutingAlgorithm.calcPaths is added; see #596\n- moving lgpl licensed file into own submodule graphhopper-tools-lgpl\n- renaming of Tarjans algorithm class to TarjansSCCAlgorithm\n- more strict naming for Weighting enforced and more strict matching to select Weighting (equals check), #490\n- specify the preferred-language for way names during graph import (ISO 639-1 or ISO 639-2)\n- renaming of getCHWeighting to getCHWeightings due to supporting multiple CH weightings, #623\n- deprecation of setCHWeighting, please use setCHWeightings instead, #623\n\n### 0.5 [12 Aug 2015]\n\n- Several names have changed see #466, #467, #468\n- GraphHopper.optimize removed use postProcessing instead\n- method GraphHopper.getGraph() changed to getGraphHopperStorage()\n- the interface GraphStorage does no longer extend from the Graph interface. Use GraphHopperStorage (which implements\n  the Graph interface via the base graph) or only Graph instead\n- now it is necessary to call baseGraph/chGraph.freeze in order to use the chGraph (to simply determine when an edgeId\n  is a shortcut)\n- LevelGraphStorage is now a GraphHopperStorage with an additional ch graph (CHGraphImpl)\n- GraphHopperStorage implements now the Graph interface and delegates all necessary methods to the underlying base\n  graph. To do routing you call getGraph(CHGraph.class or Graph.class) where the parameter Graph.class returns the base\n  graph and the behaviour is identical to GraphHopperStorage itself\n- renamed LevelGraph* to CHGraph*\n- renamed NoGraphExtension to NoOpExtension\n- removed visitedNodes method in GraphHopper replaced with per response information: response.getHints().getLong(\"\n  visited_nodes.sum\", 0)\n- added ability to store hints in GHResponse which will be forwarded to the json too\n- breaking change in HTTP API: error JSON format changed to be message:\"\" instead of within info.errors, see updated api\n  documentation\n- made GHResponse.getMillis, Path.getMillis, GPXEntry.getMillis deprecated, use getTime instead\n- in AbstractFlagEncoder, parse*() and getStr() are now deprecated, use properties.get* instead\n\n### 0.4 [18 Mar 2015]\n\n- translation key turn changed and merged with left etc into turn_left, turn_right etc\n- create location index before preparation in the GraphHopper class\n- encodingManager.getSingle() is removed and flagEncoder list is no longer sorted, the first vehicle is used for CH\n  preparation\n- removed LocationIndexTreeSC, use new LocationIndexTree(levelGraph.getBaseGraph(), directory) instead\n- getLevel and setLevel do no longer automatically increase node count, use getNodeAccess.ensureNode for that\n- normal algorithms are now possible on prepared graph use getBaseGraph, see #116\n- GHResponse no longer has isFound method, use !hasErrors instead\n- merged unused Edge class into EdgeEntry\n- astar and astarbi are now both none-heuristic and take parameters for beeline approximation:\n  astar.approximation=BeelineSimplification|BeelineAccurate or astarbi.approximation=...\n- making GPX export according to the schema to support import from various tools like basecamp\n- refactoring: AllEdgesIterator.getMaxId is now named getCount\n- major change of internal API: moved method \"Path RoutingAlgorithm.calcPath(QueryResult,QueryResult)\" to a helper\n  method QueryGraph.lookup, call queryResult.getClosestNode for the calcPath(nodeFrom,nodeTo) method\n- no cachedWays and cachedPoints in Path anymore\n- Path.findInstruction was moved to InstructionList.find\n- if start and end point are identical an algorithm will find the path consisting only of one node, one point and one\n  instruction (finish instruction), but without edges\n- astarbi has new default values for approximation (false) and approximation_factor (1.2) in\n  RoutingAlgorithmFactorySimple\n- instead of strings use the variables in AlgorithmOptions to specify an algorithm\n- use RoutingAlgorithmFactorySimple instead of RoutingAlgorithmFactory, also more consistent algorithm preparation\n  handling due to new AlgorithmOptions, therefor removed NoOpAlgorithmPreparation\n- GHResponse.getXX methods now fail fast (throw an exception) if an error while route calculation occurred. See #287\n- renamed less often used URL parameter 'min_path_precision' to way_point_max_distance which makes it identical to the\n  setWayPointMaxDistance method used for simplification at OSMImport\n- removed douglas.minprecision from Java API ghRequest.hints => use wayPointMaxDistance instead\n- encoder.supportTurnCost is replaced by encoder.supports(TurnWeighting.class)\n- CmdArgs is now a Map<String, String> instead Map<String, Object>. The value will be parsed up on every getXY call,\n  makes storing string vs. object less error-prone\n- removed GHRequest.getHint, instead use the provided methods in GHRequest.getHints().getXY and GHRequest.getHints().put\n- important graph incompatibility as properties cannot be loaded. renamed osmreader.bytesForFlags to\n  graph.bytesForFlags, renamed config property osmreader.acceptWay to graph.flagEncoders\n- default weighting is now fastest, fixing #261\n- moved method GraphHopper.main into tools module and class com.graphhopper.tools.Import, see #250\n- refactored GraphHopper.createWeighting to accept more than one configuration option, see #237\n- refactored GraphHopper.disableCHShortcuts to setCHEnable(boolean)\n- moving the boolean parameter of GraphHopper.setInMemory into a separate method setStoreOnFlush\n- renaming of GraphHopper.setCHShortcuts to setCHWeighting, as well as the property prepare.chShortcuts to\n  prepare.chWeighting\n- jsonp is disabled by default. You need to enable it in the config.properties, see the config-example.properties\n- EncodingManager cannot be null in GraphHopperStorage. If you need to parse EncodingManager configuration from existing\n  graph use EncodingManager.create\n- no reflection done in EncodingManager which improves portability and makes configuration of encoders possible before\n  adding to manager\n- removed dijkstraNativebi as no performance advantage but maintenance disadvantage and similar to oneToManyDijkstra\n- to provide context for turn costs we needed to add prevEdgeId into Weighting.calcWeight, see new documentation\n- with the introduction of lock protection mechanism (see #112) GraphHopper needs always write access, see also #217\n- new GraphHopper.clean method to remove the graph directory via Java API\n\n### 0.3.0 [13 May 2014]\n\n- introduced prefer bits, now bike uses more bits and 3 bike encoder do not fit into 32 bit anymore, will be fixed later\n- moved Translation argument into Path.calcInstruction for more fine grained control, instructions are now uncached and\n  GHRequest: new locale parameter\n- CoordTrig and the like are removed, GHPlace is mostly replaced by GHPoint and so GHRequest has now methods ala\n  addPoint instead\n- removed isBoth from AbstractFlagEncoder, moved canBeOverwritten and associated test to PrepareEncoder\n- removed unused directory.rename\n- refactor edge.copyProperties into copyPropertiesTo to have similar semantics as Graph.copyTo\n- calcWeight now contains reverse boolean to calculate correct direction dependent weight\n- completely different web API response format. see docs/web\n- swapDirections is renamed to reverseFlags (EncodingManager and FlagEncoders)\n- edgeState.detach has now a reverse parameter, just use false to get previous results\n- web api: buildDate contains now timezone, algoType is replaced with weighting\n- dijkstraNative is now dijkstraNativebi\n- fixed #151\n- calcWeight now contains reverse boolean to calculate correct direction dependent weight\n- EncodingManager always takes the encoders in constructor, to force always init\n- GraphHopper.setMemory(true, true/false) was refactored to GraphHopper.setMemory(true/false), use mmap config via\n  GraphHopper.setMemoryMapped()\n- incompatible edges => you need to re-import data and/or update the edges file\n- the instructions of the web response does not contain times (string) but instead millis (long)\n- PrepareContractionHierarchies.setPeriodicUpdates is now in percentage not in absolute counts\n- improved bike routing #132, #138, #139, #150\n- gpx export via API, HTTP (route?type=gpx) and web interface is possible: #113, #136, #141\n\n### 0.2.0 [23 Nov 2013]\n\n- change inconsistent default settings for contraction hierarchies in the API - see https://lists.openstreetmap.org/pipermail/graphhopper/2013-December/000585.html\n- fixed issues with android:\n  * graphhopper: use maps from 0.2 path; updated maps\n  * mapsforge: use mapsforge-map dependency; merged #461; avoid duplicates otherwise mapsforge-core would be duplicate (\n    ?)\n- refactored/renamed classes and methods:\n  * refactor 'flags' from int to long (still only int is stored)\n  * replacing Graph.edge(a,b,dist,edgeFlags) by Graph.edge(a,b).setDistance().setFlags()\n  * FlagEncoder.flags => use FlagEncoder.setProperties or separate setAccess and setSpeed method\n  * renamed LocationIDResult to QueryResult and Location2NodesNtree to LocationIndexTree\n  * renamed Location2IDIndex to LocationIndex\n  * renamed WeightCalculation to Weighting and getWeight to calcWeight, the URL parameter algoType in web module is now\n    deprecated and 'weighting' should be used\n  * removed GHDijkstraHeap, GHDijkstraHeap2\n  * made DistanceCalc into interface (new DistanceCalcEarth implementation)\n  * made GraphStorage into interface (new GraphHopperStorage implementation) move some methods from Graph into\n    GraphStorage -> optimize + node removal stuff -> not necessary in algorithms\n- incompatible storage layout due to: pluggable endianness (#103) -> changed default endianness to LITTLE\n- add highly experimental UnsafeDataAccess to speed up search ~15%\n- several small bug fixes and improvements\n- different edge insert\n- important bug fix for edge retrieval which leads to massive speed up in prepare + CH algos\n- finally fixed major feature request #27 to allow gps-to-gps queries instead of only junction-to-junction ones.\n  * follow up in #52 and #115\n  * slower but more precise and necessary edge distance calculation\n- fixed bug #105 for disconnected areas\n- fix which made CH preparation ~5% faster\n- more align API for all algorithms. and initCollection is called via 1000 not something depending on the graph size\n- API changed\n  * case of vehicle now case does not matter\n  * returned distance is in meter now\n- better i18n support\n- fixed major bug #102 when removing subnetworks\n- fixed bug #89 for trams on roads\n- completed improvement #93 for ferries\n- edge explorer makes none-CH algorithms ~8% faster\n- link to all closed issues: https://github.com/graphhopper/graphhopper/issues?milestone=2&state=closed\n\n### 0.1.1 [06 August 2013]\n\n- correct maven bundling and some more issues\n- more i18n\n\n### 0.1 [23 July 2013]\n\n- initial version with lots of features\n- 24 closed issues: https://github.com/graphhopper/graphhopper/issues?milestone=3&state=closed, e.g.:\n  * Route instructions\n  * Implement OSM import for bike/foot/car\n  * More compact graph (nodes along a way are stored in a separate storage => faster and reduced RAM usage)\n  * Made routing working world wide. Make German-sized networks working on Android.\n  * Made routing faster via bidirectional algorithms, contraction hierarchies, graph sorting, better OSM integration and\n    some fine tuning.\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 2.283203125,
          "content": "Submit a new issue only if you are sure it is a missing feature or a bug. For questions or if you are unsure [discuss the topic in our forum](https://discuss.graphhopper.com/c/graphhopper). \n\nFor new translations or fixes to existing translations,\nplease refer to [this documentation](https://github.com/graphhopper/graphhopper/blob/master/docs/core/translations.md).\n\nIssues for newcomers are tagged with \n['good first issue'](https://github.com/graphhopper/graphhopper/labels/good%20first%20issue) \nand documentation issues are tagged with \n['documentation'](https://github.com/graphhopper/graphhopper/labels/documentation).\n\n## We love pull requests. Here's a quick guide:\n\n1. [Fork the repo](https://help.github.com/articles/fork-a-repo) and create a branch for your new feature or bug fix.\n\n2. Run the tests. We only take pull requests with passing tests: `mvn clean test verify`\n\n3. Add at least one test for your change. Only refactoring and documentation changes\nrequire no new tests. Also make sure you submit a change specific to exactly one issue. If you have ideas for multiple \nchanges please create separate pull requests.\n\n4. Make the test(s) pass.\n\n5. Push to your fork and [submit a pull request](https://help.github.com/articles/using-pull-requests). A button should\nappear on your fork its github page afterwards.\n\n## License Agreement\n\nAll contributions like pull requests, bug fixes, documentation changes and translations fall under the Apache License and contributors agree to our\n<a href=\"https://www.graphhopper.com/code-of-conduct/\">contributor covenant code of conduct</a>.\n\n## Code formatting\n\nWe use IntelliJ defaults. For eclipse there is this [configuration](https://github.com/graphhopper/graphhopper/files/481920/GraphHopper.Formatter.zip). \nFor other IDEs we use [editorconfig](https://github.com/graphhopper/graphhopper/pull/2791) or the following rules:\n\n * Java indent is 4 spaces\n * Line width is 100 characters\n * The rest is left to Java coding standards but disable \"auto-format on save\" to prevent unnecessary format changes. \n * Currently we do not care about import section that much, avoid changing it\n * Unix line endings (should be handled via git)\n * See discussion in [#770](https://github.com/graphhopper/graphhopper/issues/770)\n\nAnd in case we didn't emphasize it enough: we love tests!\n"
        },
        {
          "name": "CONTRIBUTORS.md",
          "type": "blob",
          "size": 4.4208984375,
          "content": "# Contributors\n\nMost of the contributors are mentioned at Github as [Members](https://github.com/graphhopper?tab=members) or [Contributors](https://github.com/graphhopper/graphhopper/contributors).\n\nHere is an overview:\n\n * agouge, discussion and API refactoring\n * AnahitaS, docs for Android, Android, Tomcat\n * andreaswolf, flag encoder versioning and more\n * andreylh, polygon for blocked area #1306\n * Anvoker, fixes like #1614 and helped with JUnit 5 migration #1632 \n * b3nn0, Android improvements\n * baumboi, path detail and landmark improvements\n * boldtrn, one of the core developers with motorcycle knowledge :)\n * bt90, fixes like #2786\n * cgarreau, increase of routing success rate via subnetwork cleanup\n * chollemans, fixes like #1482\n * ChristianSeitzer, motorcycle improvements\n * ChristophKaser, agrees to the project's CLA, improved Android compatibility #1207\n * Christoph Lingg, elevation smoothing #2772\n * chucre, add special JSON output format, see #41\n * daisy1754, fixed usage of graphhopper.sh script\n * dardin88, instructions improved\n * dewos, web API bug fixes\n * devemux86, improvements regarding Android, GPX and more\n * dos65, bug fixes in routing algo\n * drnextgis, ru translation and JS fixes\n * duongnt, fixes in storage\n * easbar, one of the core developers\n * edy, improvements regarding docker #849\n * elibar, fix for alternative route calculation\n * fbonzon, several UI improvements like #615\n * florent-morel, improvements regarding fords, #320\n * fredao, translations \n * gberaudo, improvements regarding elevation\n * GProbo, fixes like #2241\n * HarelM, improvements regarding elevation\n * HelgeKrueger, modularization of javascript, #590\n * henningvs, doc improvements\n * highsource, more efficient geometry update, UI fixes\n * hoofstephan, bug fix   \n * IsNull, improvements like #708\n * IldarKhayrutdinov, use cache on different machines\n * Janekdererste, GUI for public transit\n * jansoe, many improvements regarding A* algorithm, forcing direction, roundabouts etc\n * jansonhanson, general host config\n * jessLryan, max elevation can now be negative\n * joe-akeem, improvements like #2158\n * JohannesPelzer, improved GPX information and various other things\n * karussell, one of the core developers\n * khuebner, initial turn costs support\n * kodonnell, adding support for CH and other algorithms (#60) and penalizing inner-link U-turns (#88)\n * legraina, improved docker for dockerhub\n * lmar, improved instructions\n * lukasalexanderweber, helped to implement via-way restrictions #2689 and fixes like #2652\n * matkoniecz, tweaking documentation\n * manueltimita, fixes like #1651\n * mathstpierre, fixes like #1753\n * michalmac, fixes like #1467\n * michaz, one of the core developers\n * mprins, improvements for travis CI and regarding JDK9 #806\n * msbarry, fixes like #1733\n * naser13, fixes like #1923\n * njanakiev, fixes like #1560\n * NopMap, massive improvements regarding OSM, parsing and encoding, route relations\n * ocampana, initial implementation for instructions\n * oflebbe, work on iOS port and issues like #2060\n * OlafFlebbeBosch, improvements like #2730\n * osamaalmaani, added missing config option for graph.encoded_values in the config-example.yml file\n * oschlueter, fixes like #1185\n * otbutz, added multiple EncodedValues\n * pantsleftinwash, speed parsing improvements\n * PGWelch, shapefile reader #874\n * rafaelstelles, fix deserializer web-api\n * rajanski, script to do routing via PostGIS\n * ratrun, route relations, GPX information, bike handling etc\n * rodneyodonnell, improved dead end removal (PrepareRoutingSubnetworks) and fords\n * rodo, more descriptions\n * rory, support milisecond gpx timestamps, see #4 \n * samruston, improved point hint matching\n * seeebiii, motorcycle improvements\n * sguill, fixes like #1683\n * shunfan-shao, fix potential flaky tests\n * skienzl, imperial units for /navigate, related to #2071\n * stefanholder, Stefan Holder, BMW AG, creating and integrating the hmm-lib (#49, #66, #69) and penalizing inner-link U-turns (#88, #91), refactored unfavoring of virtual edges #885\n * stevensnoeijen, fixes like #1568 \n * Svantulden, improved documentation and nearest API\n * taulinger, hopefully more to come \n * thehereward, code cleanups like #620\n * vvikas, ideas for many to many improvements and #616\n * zstadler, multiple fixes and car4wd\n\n## Translations\n\nA lot people helped to create translations - thanks!\nSee [this spreadsheet](https://docs.google.com/spreadsheets/d/18z00Rbt6QvLIkayEV9P89vW9oU0QbTVsjRk9nz1CeFY/edit#gid=0)\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 11.0927734375,
          "content": "\n\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "NOTICE.md",
          "type": "blob",
          "size": 2.7666015625,
          "content": "## Licenses\n\nGraphHopper licensed under the Apache license, Version 2.0\n\nCopyright 2012 - 2024 GraphHopper GmbH\n\nThe core module includes the following additional software:\n\n * slf4j.org - SLF4J distributed under the MIT license. \n * com.carrotsearch:hppc (Apache license)\n * Snippets regarding mmap, vint/vlong and compression from Lucene (Apache license)\n * XMLGraphics-Commons for CGIAR elevation files (Apache License)\n * Apache Commons Lang - we copied the implementation of the Levenshtein Distance - see com.graphhopper.apache.commons.lang3 (Apache License)\n * Apache Commons Collections - we copied parts of the BinaryHeap - see com.graphhopper.apache.commons.collections (Apache License)\n * java-string-similarity - we copied the implementation of JaroWinkler (MIT license)\n * Jackson (Apache License)\n * org.locationtech:jts (EDL)\n * AngleCalc.atan2 from Jim Shima, 1999 (public domain)\n * janino compiler (BSD-3-Clause license)\n * osm-legal-default-speeds-jvm (BSD-3-Clause license)\n * kotlin stdlib (Apache License)\n * protobuf - (New BSD license)\n * OSM-binary - (LGPL license)\n * Osmosis - public domain, see their github under package/copying.txt\n\nreader-gtfs:\n\n * some files from com.conveyal:gtfs-lib (BSD 2-clause license)\n * com.google.transit:gtfs-realtime-bindings (Apache license)\n * com.google.guava:guava (Apache license)\n * net.sourceforge.javacsv:javacsv (LGPL license)\n * commons-io:commons-io (Apache license)\n * org.mapdb:mapdb (Apache license)\n\ntools:\n\n * uses Apache Compress (Apache license)\n\nclient-hc:\n\n * okhttp (Apache license)\n\nweb:\n\n * org.eclipse.jetty:jetty-server (Apache License)\n * Dropwizard and dependencies (Apache license)\n * classes in no.ecc are a copy of no.ecc.vectortile:java-vector-tile, see #2698 (Apache license)\n\n## Data\n\n|source | license | used as default | included in repo |\n|---------|-----------|---------|------|\n|OpenStreetMap data for the road network | [ODBL](https://www.openstreetmap.org/copyright) | yes | yes\n| SRTM elevation | [public domain](https://www2.jpl.nasa.gov/srtm/), [acknowledgement](https://lpdaac.usgs.gov/citing_our_data) | no | yes\n| CGIAR elevation | [allowed usage for GraphHopper](https://gist.githubusercontent.com/karussell/4b54a289041ee48a16c00fd4e30e21b8/raw/45edf8ae85322cb20976baa30654093d0ca9bcd8/CGIAR.txt) | no | no\n| SRTMGL1 elevation | [acknowledgement](https://lpdaac.usgs.gov/citing_our_data) | no | no\n|OpenTopography mirror for SRTMGL1 | [acknowledgement OpenTopoGraphy](http://www.opentopography.org/citations) and [data source](http://opentopo.sdsc.edu/datasetMetadata?otCollectionID=OT.042013.4326.1) + SRTMGL1 | no | no\n| GMTED | [public domain, acknowledgment](https://lta.cr.usgs.gov/citation) | no | no\n| Tilezen Joerd (Skadi) | [acknowledgment](https://github.com/tilezen/joerd/blob/master/docs/attribution.md) | no | no\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 18.361328125,
          "content": "# GraphHopper Routing Engine\n\n![Build Status](https://github.com/graphhopper/graphhopper/actions/workflows/build.yml/badge.svg?branch=master)\n\nGraphHopper is a fast and memory-efficient routing engine released under Apache License 2.0.\nIt can be used as a Java library or standalone web server to calculate the distance, time,\nturn-by-turn instructions and many road attributes for a route between two or more points.\nBeyond this \"A-to-B\" routing it supports [\"snap to road\"](README.md#Map-Matching),\n[Isochrone calculation](README.md#Analysis), [mobile navigation](README.md#mobile-apps) and\n[more](README.md#Features). GraphHopper uses OpenStreetMap and GTFS data by default and it\ncan import [other data sources too](README.md#OpenStreetMap-Support).\n\n# Community\n\nWe have an open community and welcome everyone. Let us know your problems, use cases or just [say hello](https://discuss.graphhopper.com/).\nPlease see our [community guidelines](https://graphhopper.com/agreements/cccoc.html).\n\n## Questions\n\nAll questions go to our [forum](https://discuss.graphhopper.com/) where we also have subsections specially for developers, mobile usage, and [our map matching component](./map-matching).\nYou can also search [Stackoverflow](http://stackoverflow.com/questions/tagged/graphhopper) for answers.\n\n## Contribute\n\nRead through our [contributing guide](CONTRIBUTING.md) for information on topics\nlike finding and fixing bugs and improving our documentation or translations!\nWe also have [good first issues](https://github.com/graphhopper/graphhopper/issues?q=is%3Aopen+is%3Aissue+label%3A%22good+first+issue%22)\nto get started with contribution.\n\n## Get Started\n\nTo get started you can try [GraphHopper Maps](README.md#graphhopper-maps), read through [our documentation](./docs/index.md) and install GraphHopper including the Maps UI locally.\n\n* 10.x: [documentation](https://github.com/graphhopper/graphhopper/blob/10.x/docs/index.md)\n  , [web service jar](https://repo1.maven.org/maven2/com/graphhopper/graphhopper-web/10.0/graphhopper-web-10.0.jar)\n  , [announcement](https://www.graphhopper.com/blog/2024/11/05/graphhopper-routing-engine-10-0-released/)\n* unstable master: [documentation](https://github.com/graphhopper/graphhopper/blob/master/docs/index.md)\n\nSee the [changelog file](./CHANGELOG.md) for Java API Changes.\n\n<details><summary>Click to see older releases</summary>\n\n* 9.x: [documentation](https://github.com/graphhopper/graphhopper/blob/9.x/docs/index.md)\n  , [web service jar](https://repo1.maven.org/maven2/com/graphhopper/graphhopper-web/9.1/graphhopper-web-9.1.jar)\n  , [announcement](https://www.graphhopper.com/blog/2024/04/23/graphhopper-routing-engine-9-0-released)\n* 8.x: [documentation](https://github.com/graphhopper/graphhopper/blob/8.x/docs/index.md)\n  , [web service jar](https://repo1.maven.org/maven2/com/graphhopper/graphhopper-web/8.0/graphhopper-web-8.0.jar)\n  , [announcement](https://www.graphhopper.com/blog/2023/10/18/graphhopper-routing-engine-8-0-released/)\n* 7.x: [documentation](https://github.com/graphhopper/graphhopper/blob/7.x/docs/index.md)\n  , [web service jar](https://repo1.maven.org/maven2/com/graphhopper/graphhopper-web/7.0/graphhopper-web-7.0.jar)\n  , [announcement](https://www.graphhopper.com/blog/2023/03/14/graphhopper-routing-engine-7-0-released/)\n* 6.x: [documentation](https://github.com/graphhopper/graphhopper/blob/6.x/docs/index.md)\n  , [web service jar](https://repo1.maven.org/maven2/com/graphhopper/graphhopper-web/6.2/graphhopper-web-6.2.jar)\n  , [announcement](https://www.graphhopper.com/blog/2022/09/19/graphhopper-routing-engine-6-0-released/)\n* 5.x: [documentation](https://github.com/graphhopper/graphhopper/blob/5.x/docs/index.md)\n  , [web service jar](https://github.com/graphhopper/graphhopper/releases/download/5.3/graphhopper-web-5.3.jar)\n  , [announcement](https://www.graphhopper.com/blog/2022/03/23/graphhopper-routing-engine-5-0-released/)\n* 4.x: [documentation](https://github.com/graphhopper/graphhopper/blob/4.x/docs/index.md)\n  , [web service jar](https://github.com/graphhopper/graphhopper/releases/download/4.0/graphhopper-web-4.0.jar)\n  , [announcement](https://www.graphhopper.com/blog/2021/09/29/graphhopper-routing-engine-4-0-released/)\n* 3.x: [documentation](https://github.com/graphhopper/graphhopper/blob/3.x/docs/index.md)\n  , [web service jar](https://github.com/graphhopper/graphhopper/releases/download/3.2/graphhopper-web-3.2.jar)\n  , [announcement](https://www.graphhopper.com/blog/2021/05/18/graphhopper-routing-engine-3-0-released/)\n* 2.x: [documentation](https://github.com/graphhopper/graphhopper/blob/2.x/docs/index.md)\n  , [web service jar](https://github.com/graphhopper/graphhopper/releases/download/2.4/graphhopper-web-2.4.jar)\n  , [announcement](https://www.graphhopper.com/blog/2020/09/30/graphhopper-routing-engine-2-0-released/)\n* 1.0: [documentation](https://github.com/graphhopper/graphhopper/blob/1.0/docs/index.md)\n  , [web service jar](https://github.com/graphhopper/graphhopper/releases/download/1.0/graphhopper-web-1.0.jar)\n  , [Android APK](https://github.com/graphhopper/graphhopper/releases/download/1.0/graphhopper-android-1.0.apk)\n  , [announcement](https://www.graphhopper.com/blog/2020/05/25/graphhopper-routing-engine-1-0-released/)\n* 0.13.0: [documentation](https://github.com/graphhopper/graphhopper/blob/0.13/docs/index.md)\n  , [web service jar](https://github.com/graphhopper/graphhopper/releases/download/0.13.0/graphhopper-web-0.13.0.jar)\n  , [Android APK](https://github.com/graphhopper/graphhopper/releases/download/0.13.0/graphhopper-android-0.13.0.apk)\n  , [announcement](https://www.graphhopper.com/blog/2019/09/18/graphhopper-routing-engine-0-13-released/)\n* 0.12.0: [documentation](https://github.com/graphhopper/graphhopper/blob/0.12/docs/index.md)\n  , [web service jar](https://github.com/graphhopper/graphhopper/releases/download/0.12.0/graphhopper-web-0.12.0.jar)\n  , [Android APK](https://github.com/graphhopper/graphhopper/releases/download/0.12.0/graphhopper-android-0.12.0.apk)\n  , [announcement](https://www.graphhopper.com/blog/2019/03/26/graphhopper-routing-engine-0-12-released/)\n* 0.11.0: [documentation](https://github.com/graphhopper/graphhopper/blob/0.11/docs/index.md)\n  , [web service jar](https://github.com/graphhopper/graphhopper/releases/download/0.11.0/graphhopper-web-0.11.0.jar)\n  , [Android APK](https://github.com/graphhopper/graphhopper/releases/download/0.11.0/graphhopper-android-0.11.0.apk)\n  , [announcement](https://www.graphhopper.com/blog/2018/09/17/graphhopper-routing-engine-0-11-release-open-sourcing-the-isochrone-module/)\n* 0.10.0: [documentation](https://github.com/graphhopper/graphhopper/blob/0.10/docs/index.md)\n  , [web service zip](https://github.com/graphhopper/graphhopper/releases/download/0.10.3/graphhopper-web-0.10.3-bin.zip)\n  , [Android APK](https://github.com/graphhopper/graphhopper/releases/download/0.10.3/graphhopper-android-0.10.3.apk)\n  , [announcement](https://www.graphhopper.com/blog/2018/03/08/graphhopper-routing-engine-0-10-released/)\n* 0.9.0: [documentation](https://github.com/graphhopper/graphhopper/blob/0.9/docs/index.md)\n  , [web service zip](https://github.com/graphhopper/graphhopper/releases/download/0.9.0/graphhopper-web-0.9.0-bin.zip)\n  , [Android APK](https://github.com/graphhopper/graphhopper/releases/download/0.9.0/graphhopper-android-0.9.0.apk)\n  , [announcement](https://www.graphhopper.com/blog/2017/05/31/graphhopper-routing-engine-0-9-released/)\n* 0.8.2: [documentation](https://github.com/graphhopper/graphhopper/blob/0.8/docs/index.md)\n  , [web service zip](https://github.com/graphhopper/graphhopper/releases/download/0.8.2/graphhopper-web-0.8.2-bin.zip)\n  , [Android APK](https://github.com/graphhopper/graphhopper/releases/download/0.8.2/graphhopper-android-0.8.2.apk)\n  , [announcement](https://www.graphhopper.com/blog/2016/10/18/graphhopper-routing-engine-0-8-released/)\n* 0.7.0: [documentation](https://github.com/graphhopper/graphhopper/blob/0.7/docs/index.md)\n  , [web service zip](https://github.com/graphhopper/graphhopper/releases/download/0.7.0/graphhopper-web-0.7.0-bin.zip)\n  , [Android APK](https://github.com/graphhopper/graphhopper/releases/download/0.7.0/graphhopper-android-0.7.0.apk)\n  , [announcement](https://www.graphhopper.com/blog/2016/06/15/graphhopper-routing-engine-0-7-released/)\n</details>\n\n## Installation\n\nTo install the [GraphHopper Maps](https://graphhopper.com/maps/) UI and the web service locally you [need a JVM](https://adoptium.net) (>= Java 17) and do:\n\n```bash\nwget https://repo1.maven.org/maven2/com/graphhopper/graphhopper-web/10.0/graphhopper-web-10.0.jar \\\n  https://raw.githubusercontent.com/graphhopper/graphhopper/10.x/config-example.yml \\\n  http://download.geofabrik.de/europe/germany/berlin-latest.osm.pbf\njava -D\"dw.graphhopper.datareader.file=berlin-latest.osm.pbf\" -jar graphhopper*.jar server config-example.yml\n```\n\nAfter a while you see a log message with 'Server - Started', then go to http://localhost:8989/ and\nyou'll see a map of Berlin. You should be able to right click on the map to create a route.\n\nSee the [documentation](./docs/index.md) that contains e.g. [the elevation guide](./docs/core/elevation.md) and the [deployment guide](./docs/core/deploy.md).\n\n### Docker\n\nThe Docker images created by the community from the `master` branch can be found [here](https://hub.docker.com/r/israelhikingmap/graphhopper)\n(currently daily). See the [Dockerfile](https://github.com/IsraelHikingMap/graphhopper-docker-image-push) for more details.\n\n## GraphHopper Maps\n\nTo see the road routing feature of GraphHopper in action please go to [GraphHopper Maps](https://graphhopper.com/maps).\n\n[![GraphHopper Maps](https://www.graphhopper.com/wp-content/uploads/2022/10/maps2-1024x661.png)](https://graphhopper.com/maps)\n\nGraphHopper Maps is an open source user interface, which you can find [here](https://github.com/graphhopper/graphhopper-maps).\nIt can use this open source routing engine or the [GraphHopper Directions API](https://www.graphhopper.com),\nwhich provides the Routing API, a Route Optimization API (based on [jsprit](http://jsprit.github.io/)),\na fast Matrix API and an address search (based on [photon](https://github.com/komoot/photon)). \nThe photon project is also supported by the GraphHopper GmbH. Additionally to the GraphHopper\nDirections API, map tiles from various providers are used, with the default being [Omniscale](http://omniscale.com/). \n\nAll this is available for free, via encrypted connections and from German servers - for a nice and private route planning experience!\n\n## Public Transit\n\n[Get started](./reader-gtfs/README.md#quick-start)\n\n[![Realtime Demo](https://www.graphhopper.com/wp-content/uploads/2018/05/Screen-Shot-2018-05-16-at-21.23.25-600x538.png)](./reader-gtfs/README.md#quick-start)\n\n## Mobile Apps\n\n### Online\n\nThere is a [web service](./navigation) that can be consumed by [our navigation Android client](https://github.com/graphhopper/graphhopper-navigation-example).\n\n[<img src=\"https://raw.githubusercontent.com/maplibre/maplibre-navigation-android/main/.github/preview.png\" width=\"400\">](https://github.com/graphhopper/graphhopper-navigation-example)\n\n### Offline\n\nOffline routing is [no longer officially supported](https://github.com/graphhopper/graphhopper/issues/1940)\nbut should still work as Android supports most of Java. See [version 1.0](https://github.com/graphhopper/graphhopper/blob/1.0/docs/android/index.md)\nwith the Android demo and also see [this pull request](http://github.com/graphhopper/graphhopper-ios) of the iOS fork including a demo for iOS.\n\n[<img src=\"https://www.graphhopper.com/wp-content/uploads/2016/10/android-demo-screenshot-2.png\" width=\"600\">](./android/README.md)\n\n## Analysis\n\nUse isochrones to calculate and visualize the reachable area for a certain travel mode.\n\nYou can try the debug user interface at http://localhost:8989/maps/isochrone to see the `/isochrone` and `/spt` endpoint in action.\n\n### [Isochrone Web API](./docs/web/api-doc.md#isochrone)\n\n[![Isochrone API image](./docs/isochrone/images/isochrone.png)](./docs/web/api-doc.md#isochrone)\n\n### [Shortest Path Tree API](//www.graphhopper.com/blog/2018/07/04/high-precision-reachability/)\n\n[![high precision reachability image](https://www.graphhopper.com/wp-content/uploads/2018/06/berlin-reachability-768x401.png)](https://www.graphhopper.com/blog/2018/07/04/high-precision-reachability/)\n\n### [Map Matching](./map-matching)\n\nThere is the map matching subproject to snap GPX traces to the road.\n\n[![map-matching-example](https://raw.githubusercontent.com/graphhopper/directions-api-doc/master/web/img/map-matching-example.gif)](./map-matching)\n\n\n# Technical Overview\n\nGraphHopper supports several routing algorithms, such as \n<a href=\"https://en.wikipedia.org/wiki/Dijkstra%27s_algorithm\">Dijkstra</a> and \n<a href=\"https://en.wikipedia.org/wiki/A*_search_algorithm\">A</a>`*` and its bidirectional variants. \nFurthermore, it allows you to use \n<a href=\"https://en.wikipedia.org/wiki/Contraction_hierarchies\">Contraction Hierarchies</a> (CH) \nvery easily. We call this **speed mode**; without this CH preparation, we call it **flexible mode**.\n\nThe speed mode comes with very fast and lightweight (less RAM) responses and it does not use heuristics. \nHowever, only predefined vehicle profiles are possible and this additional CH preparation is time and resource consuming.\n\nThen there is the **hybrid mode** which also requires more time and memory for the preparation,\nbut it is much more flexible regarding changing properties per request or e.g. integrating traffic data. \nFurthermore, this hybrid mode is slower than the speed mode, but it is an \norder of magnitude faster than the flexible mode and uses less RAM for one request.\n\nIf the preparations exist you can switch between all modes at request time.\n\nRead more about the technical details [here](./docs/core/technical.md).\n\n## License\n\nWe chose the Apache License to make it easy for you to embed GraphHopper in your products, even closed source.\nWe suggest that you contribute back your changes, as GraphHopper evolves fast.\n\n## OpenStreetMap Support\n\nOpenStreetMap is directly supported by GraphHopper. Without the amazing data from\nOpenStreetMap, GraphHopper wouldn't be possible at all. \nOther map data will need a custom import procedure, see e.g. <a href=\"https://github.com/graphhopper/graphhopper/issues/277\">Ordnance Survey</a>,\n<a href=\"https://github.com/graphhopper/graphhopper-reader-shp\">Shapefile like ESRI</a> or <a href=\"https://github.com/OPTITOOL/morituri\">Navteq</a>.\n\n## Written in Java\n\nGraphHopper is written in Java and officially runs on Linux, Mac OS X and Windows.\n\n### Maven\n\nEmbed GraphHopper with OpenStreetMap support into your Java application via the following snippet:\n\n```xml\n<dependency>\n    <groupId>com.graphhopper</groupId>\n    <artifactId>graphhopper-core</artifactId>\n    <version>[LATEST-VERSION]</version>\n</dependency>\n```\n\nSee [our example application](./example/src/main/java/com/graphhopper/example/RoutingExample.java) to get started fast.\n\n## Customizable\n\nYou can customize GraphHopper with Java knowledge (with a high and low level API) and also without Java knowledge using the [custom models](./docs/core/custom-models.md).\n\n### Web API\n\nWith the web module, we provide code to query GraphHopper over HTTP and decrease bandwidth usage as much as possible.\nFor that we use an efficient polyline encoding, the Ramer–Douglas–Peucker algorithm, and a simple \nGZIP servlet filter.                 \n\nOn the client side, we provide a [Java](./client-hc) and [JavaScript](https://github.com/graphhopper/directions-api-js-client)\nclient.\n\n### Desktop\n\nGraphHopper also runs on the Desktop in a Java application without internet access. For debugging\npurposes GraphHopper can produce vector tiles, i.e. a visualization of the road network in the\nbrowser (see #1572). Also a more low level Swing-based UI is provided via MiniGraphUI in the\ntools module, see some visualizations done with it [here](https://graphhopper.com/blog/2016/01/19/alternative-roads-to-rome/).\nA fast and production-ready map visualization for the Desktop can be implemented via [mapsforge](https://github.com/mapsforge/mapsforge) or [mapsforge vtm](https://github.com/mapsforge/vtm).\n\n# Features\n\n * Works out of the box with OpenStreetMap (osm/xml and pbf) and can be adapted to custom data\n * OpenStreetMap integration: stores and considers road type, speed limit, the surface, barriers, access restrictions, ferries, conditional access restrictions and more\n * GraphHopper is fast. And with the so called \"Contraction Hierarchies\" it can be even faster (enabled by default).\n * Memory efficient data structures, algorithms and [the low and high level API](./docs/core/low-level-api.md) is tuned towards ease of use and efficiency\n * Pre-built routing profiles: car, bike, racing bike, mountain bike, foot, hike, truck, bus, motorcycle, ...\n * [Customization of these profiles](./docs/core/profiles.md#custom-profiles) are possible. Read about it [here](https://www.graphhopper.com/blog/2020/05/31/examples-for-customizable-routing/).\n * Provides a powerful [web API](./docs/web/api-doc.md) that exposes the data from OpenStreetMap and allows customizing the vehicle profiles per request. With JavaScript and Java clients.\n * Provides [map matching](./map-matching) i.e. \"snap to road\".\n * Supports time-dependent public transit routing and reading [GTFS](./reader-gtfs/README.md).\n * Offers turn instructions in more than 45 languages. Contribute or improve [here](./docs/core/translations.md).\n * Displays and takes into account [elevation data](./docs/core/elevation.md).\n * Supports [alternative routes](https://discuss.graphhopper.com/t/alternative-routes/424).\n * Supports [turn costs and restrictions](./docs/core/turn-restrictions.md).\n * Offers country-specific routing via country rules.\n * Allows customizing routing behavior using custom areas.\n * The core uses only a few dependencies (hppc, jts, janino and slf4j).\n * Scales from small indoor-sized to world-wide-sized graphs.\n * Finds nearest point on street e.g. to get elevation or 'snap to road' or being used as spatial index (see [#1485](https://github.com/graphhopper/graphhopper/pull/1485)).\n * Calculates isochrones and [shortest path trees](https://github.com/graphhopper/graphhopper/pull/1577).\n * Shows the whole road network in the browser for debugging purposes (\"vector tile support\"), see [#1572](https://github.com/graphhopper/graphhopper/pull/1572).\n * Shows so called \"path details\" along a route like road_class or max_speed, see [#1142](https://github.com/graphhopper/graphhopper/pull/1142) or the web documentation.\n * Written in Java and simple to start for developers via Maven.\n"
        },
        {
          "name": "appveyor.yml",
          "type": "blob",
          "size": 0.46484375,
          "content": "version: '{build}'\nskip_tags: true\nclone_depth: 10\nimage: Visual Studio 2022\nenvironment:\n  MAVEN_OPTS: -Xmx1g\n  JAVA_OPTS: -Xmx1g\n  JAVA_HOME: C:\\Program Files\\Java\\jdk17\ninstall:\n  - java -version\n  - mvn --version\nbranches:\n  only:\n    - master      \nbuild_script:\n  - mvn clean install -DskipTests=true -B\ntest_script:\n  - mvn test verify -B && mvn checkstyle:check forbiddenapis:check -B\ncache:\n  - C:\\maven\\\n  - C:\\Users\\appveyor\\.m2\nartifacts:\n- path: web/target/*.jar\n"
        },
        {
          "name": "benchmark",
          "type": "tree",
          "content": null
        },
        {
          "name": "client-hc",
          "type": "tree",
          "content": null
        },
        {
          "name": "config-example.yml",
          "type": "blob",
          "size": 12.7451171875,
          "content": "graphhopper:\n\n  # OpenStreetMap input file PBF or XML, can be changed via command line -Ddw.graphhopper.datareader.file=some.pbf\n  datareader.file: \"\"\n  # Local folder used by graphhopper to store its data\n  graph.location: graph-cache\n\n\n  ##### Routing Profiles ####\n\n  # Routing can be done only for profiles listed below. For more information about profiles and custom profiles have a\n  # look into the documentation at docs/core/profiles.md or the examples under web/src/test/java/com/graphhopper/application/resources/\n  # or the CustomWeighting class for the raw details.\n  #\n  # In general a profile consists of the following\n  # - name (required): a unique string identifier for the profile\n  # - weighting (optional): by default 'custom'\n  # - turn_costs (optional):\n  #     vehicle_types: [motorcar, motor_vehicle] (vehicle types used for vehicle-specific turn restrictions)\n  #     u_turn_costs: 60 (time-penalty for doing a u-turn in seconds)\n  #\n  # Depending on the above fields there are other properties that can be used, e.g.\n  # - custom_model_files: when you specified \"weighting: custom\" you need to set one or more json files which are searched in\n  #   custom_models.directory or the working directory that defines the custom_model. If you want an empty model you can\n  #   set \"custom_model_files: []\n  #   You can also use the `custom_model` field instead and specify your custom model in the profile directly.\n  #\n  # To prevent long running routing queries you should usually enable either speed or hybrid mode for all the given\n  # profiles (see below). Or at least limit the number of `routing.max_visited_nodes`.\n\n  profiles:\n   - name: car\n#     turn_costs:\n#       vehicle_types: [motorcar, motor_vehicle]\n#       u_turn_costs: 60\n#     for more advanced turn costs, see #2957 or bike_tc.yml\n     custom_model_files: [car.json]\n\n#   You can use the following in-built profiles. After you start GraphHopper it will print which encoded values you'll have to add to graph.encoded_values in this config file.\n#\n#    - name: foot\n#      custom_model_files: [foot.json, foot_elevation.json]\n#\n#    - name: bike\n#      custom_model_files: [bike.json, bike_elevation.json]\n#\n#    - name: racingbike\n#      custom_model_files: [racingbike.json, bike_elevation.json]\n#\n#    - name: mtb\n#      custom_model_files: [mtb.json, bike_elevation.json]\n#\n#    # See the bus.json for more details.\n#    - name: bus\n#       turn_costs:\n#         vehicle_types: [bus, motor_vehicle]\n#         u_turn_costs: 60\n#      custom_model_files: [bus.json]\n#\n#   Other custom models not listed here are: car4wd.json, motorcycle.json, truck.json or cargo-bike.json. You might need to modify and test them before production usage.\n#   See ./core/src/main/resources/com/graphhopper/custom_models and let us know if you customize them, improve them or create new onces!\n#   Also there is the curvature.json custom model which might be useful for a motorcyle profile or the opposite for a truck profile.\n#   Then specify a folder where to find your own custom model files:\n#  custom_models.directory: custom_models\n\n\n  # Speed mode:\n  # It's possible to speed up routing by doing a special graph preparation (Contraction Hierarchies, CH). This requires\n  # more RAM/disk space for holding the prepared graph but also means less memory usage per request. Using the following\n  # list you can define for which of the above routing profiles such preparation shall be performed. Note that to support\n  # profiles with `turn_costs` a more elaborate preparation is required (longer preparation time and more memory\n  # usage) and the routing will also be slower than with `turn_costs: false`.\n  profiles_ch:\n    - profile: car\n\n  # Hybrid mode:\n  # Similar to speed mode, the hybrid mode (Landmarks, LM) also speeds up routing by doing calculating auxiliary data\n  # in advance. Its not as fast as speed mode, but more flexible.\n  #\n  # Advanced usage: It is possible to use the same preparation for multiple profiles which saves memory and preparation\n  # time. To do this use e.g. `preparation_profile: my_other_profile` where `my_other_profile` is the name of another\n  # profile for which an LM profile exists. Important: This only will give correct routing results if the weights\n  # calculated for the profile are equal or larger (for every edge) than those calculated for the profile that was used\n  # for the preparation (`my_other_profile`)\n  profiles_lm: []\n\n\n  #### Encoded Values ####\n\n  # Add additional information to every edge. Used for path details (#1548) and custom models (docs/core/custom-models.md)\n  # Possible values: road_class,road_class_link,road_environment,max_speed,road_access\n  #   surface,smoothness,max_width,max_height,max_weight,max_weight_except,hgv,max_axle_load,max_length,\n  #   hazmat,hazmat_tunnel,hazmat_water,lanes,osm_way_id,toll,track_type,mtb_rating,hike_rating,horse_rating,\n  #   country,curvature,average_slope,max_slope,car_temporal_access,bike_temporal_access,foot_temporal_access\n  graph.encoded_values: car_access, car_average_speed, road_access\n\n  #### Speed, hybrid and flexible mode ####\n\n  # To make CH preparation faster for multiple profiles you can increase the default threads if you have enough RAM.\n  # Change this setting only if you know what you are doing and if the default worked for you.\n  # prepare.ch.threads: 1\n\n  # To tune the performance vs. memory usage for the hybrid mode use\n  # prepare.lm.landmarks: 16\n\n  # Make landmark preparation parallel if you have enough RAM. Change this only if you know what you are doing and if\n  # the default worked for you.\n  # prepare.lm.threads: 1\n\n\n  #### Elevation ####\n\n  # To populate your graph with elevation data use SRTM, default is noop (no elevation). Read more about it in docs/core/elevation.md\n  # graph.elevation.provider: srtm\n\n  # default location for cache is /tmp/srtm\n  # graph.elevation.cache_dir: ./srtmprovider/\n\n  # If you have a slow disk or plenty of RAM change the default MMAP to:\n  # graph.elevation.dataaccess: RAM_STORE\n\n  # To enable bilinear interpolation when sampling elevation at points (default uses nearest neighbor):\n  # graph.elevation.interpolate: bilinear\n\n  # Reduce ascend/descend per edge without changing the maximum slope:\n  # graph.elevation.edge_smoothing: ramer\n  # removes elevation fluctuations up to max_elevation (in meter) and replaces the elevation with a value based on the average slope\n  # graph.elevation.edge_smoothing.ramer.max_elevation: 5\n  # Using an averaging approach for smoothing will reveal values not affected by outliers and realistic slopes and total altitude values (up and down)\n  # graph.elevation.edge_smoothing: moving_average\n  # window size in meter along a way used for averaging a node's elevation\n  # graph.elevation.edge_smoothing.moving_average.window_size: 150\n\n\n  # To increase elevation profile resolution, use the following two parameters to tune the extra resolution you need\n  # against the additional storage space used for edge geometries. You should enable bilinear interpolation when using\n  # these features (see #1953 for details).\n  # - first, set the distance (in meters) at which elevation samples should be taken on long edges\n  # graph.elevation.long_edge_sampling_distance: 60\n  # - second, set the elevation tolerance (in meters) to use when simplifying polylines since the default ignores\n  #   elevation and will remove the extra points that long edge sampling added\n  # graph.elevation.way_point_max_distance: 10\n\n\n  #### Country-dependent defaults for max speeds ####\n\n  # This features sets a maximum speed in 'max_speed' encoded value if no maxspeed tag was found. It is country-dependent\n  # and based on several rules. See https://github.com/westnordost/osm-legal-default-speeds\n  # To use it uncomment the following, then enable urban density below and add 'country' to graph.encoded_values\n  # max_speed_calculator.enabled: true\n\n\n  #### Urban density (built-up areas) ####\n\n  # This feature allows classifying roads into 'rural', 'residential' and 'city' areas (encoded value 'urban_density')\n  # Use 1 or more threads to enable the feature\n  # graph.urban_density.threads: 8\n  # Use higher/lower sensitivities if too little/many roads fall into the according categories.\n  # Using smaller radii will speed up the classification, but only change these values if you know what you are doing.\n  # If you do not need the (rather slow) city classification set city_radius to zero.\n  # graph.urban_density.residential_radius: 400\n  # graph.urban_density.residential_sensitivity: 6000\n  # graph.urban_density.city_radius: 1500\n  # graph.urban_density.city_sensitivity: 1000\n\n\n  #### Subnetworks ####\n\n  # In many cases the road network consists of independent components without any routes going in between. In\n  # the most simple case you can imagine an island without a bridge or ferry connection. The following parameter\n  # allows setting a minimum size (number of edges) for such detached components. This can be used to reduce the number\n  # of cases where a connection between locations might not be found.\n  prepare.min_network_size: 200\n  prepare.subnetworks.threads: 1\n\n  #### Routing ####\n\n  # You can define the maximum visited nodes when routing. This may result in not found connections if there is no\n  # connection between two points within the given visited nodes. The default is Integer.MAX_VALUE. Useful for flexibility mode\n  # routing.max_visited_nodes: 1000000\n\n  # default for snap_preventions\n  routing.snap_preventions_default: tunnel, bridge, ferry\n\n  # The maximum time in milliseconds after which a routing request will be aborted. This has some routing algorithm\n  # specific caveats, but generally it should allow the prevention of long-running requests. The default is Long.MAX_VALUE\n  # routing.timeout_ms: 300000\n\n  # Control how many active landmarks are picked per default, this can improve query performance\n  # routing.lm.active_landmarks: 4\n\n  # You can limit the max distance between two consecutive waypoints of flexible routing requests to be less or equal\n  # the given distance in meter. Default is set to 1000km.\n  routing.non_ch.max_waypoint_distance: 1000000\n\n\n  #### Storage ####\n\n  # Excludes certain types of highways during the OSM import to speed up the process and reduce the size of the graph.\n  # A typical application is excluding 'footway','cycleway','path' and maybe 'pedestrian' and 'track' highways for\n  # motorized vehicles. This leads to a smaller and less dense graph, because there are fewer ways (obviously),\n  # but also because there are fewer crossings between highways (=junctions).\n  # Another typical example is excluding 'motorway', 'trunk' and maybe 'primary' highways for bicycle or pedestrian routing.\n  import.osm.ignored_highways: footway,cycleway,path,pedestrian,steps # typically useful for motorized-only routing\n  # import.osm.ignored_highways: motorway,trunk # typically useful for non-motorized routing\n\n  # configure the memory access, use RAM_STORE for well equipped servers (default and recommended)\n  graph.dataaccess.default_type: RAM_STORE\n\n  # will write way names in the preferred language (language code as defined in ISO 639-1 or ISO 639-2):\n  # datareader.preferred_language: en\n\n  #### Custom Areas ####\n\n  # GraphHopper reads GeoJSON polygon files including their properties from this directory and makes them available\n  # to all tag parsers and custom models. All GeoJSON Features require to have the \"id\" property.\n  # Country borders are included automatically (see countries.geojson).\n  # custom_areas.directory: path/to/custom_areas\n\n\n  #### Country Rules ####\n\n  # GraphHopper applies country-specific routing rules during import (not enabled by default).\n  # You need to redo the import for changes to take effect.\n  # country_rules.enabled: true\n\n# Dropwizard server configuration\nserver:\n  application_connectors:\n  - type: http\n    port: 8989\n    # for security reasons bind to localhost\n    bind_host: localhost\n    # increase GET request limit - not necessary if /maps UI is not used or used without custom models\n    max_request_header_size: 50k\n  request_log:\n      appenders: []\n  admin_connectors:\n  - type: http\n    port: 8990\n    bind_host: localhost\n# See https://www.dropwizard.io/en/latest/manual/core.html#logging\nlogging:\n  appenders:\n    - type: file\n      time_zone: UTC\n      current_log_filename: logs/graphhopper.log\n      log_format: \"%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n\"\n      archive: true\n      archived_log_filename_pattern: ./logs/graphhopper-%d.log.gz\n      archived_file_count: 30\n      never_block: true\n    - type: console\n      time_zone: UTC\n      log_format: \"%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n\"\n  loggers:\n    \"com.graphhopper.osm_warnings\":\n      level: DEBUG\n      additive: false\n      appenders:\n        - type: file\n          currentLogFilename: logs/osm_warnings.log\n          archive: false\n          logFormat: '[%level] %msg%n'\n"
        },
        {
          "name": "core",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "example",
          "type": "tree",
          "content": null
        },
        {
          "name": "map-matching",
          "type": "tree",
          "content": null
        },
        {
          "name": "navigation",
          "type": "tree",
          "content": null
        },
        {
          "name": "pom.xml",
          "type": "blob",
          "size": 13.9931640625,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n\n    <groupId>com.graphhopper</groupId>\n    <artifactId>graphhopper-parent</artifactId>\n    <name>GraphHopper Parent Project</name>\n    <version>11.0-SNAPSHOT</version>\n    <packaging>pom</packaging>\n    <url>https://www.graphhopper.com</url>\n    <inceptionYear>2012</inceptionYear>\n    <description>Super pom of GraphHopper, the fast and flexible routing engine</description>\n\n    <properties>\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\n\n        <maven.compiler.target>17</maven.compiler.target>\n\n        <!-- We always had this disabled as it is disabled by default in debian JDK builds, but when we\n             switched to another JDK on travis it was enabled implicitly. Our javadocs are not ready for this\n             so we disable it explicitly now -->\n        <doclint>none</doclint>\n    </properties>\n\n    <scm>\n        <connection>scm:git:git@github.com:graphhopper/graphhopper.git</connection>\n        <developerConnection>scm:git:git@github.com:graphhopper/graphhopper.git</developerConnection>\n        <url>git@github.com:graphhopper/graphhopper.git</url>\n    </scm>\n\n    <licenses>\n        <license>\n            <name>Apache License, Version 2.0</name>\n            <url>http://www.apache.org/licenses/LICENSE-2.0</url>\n        </license>\n    </licenses>\n\n    <developers>\n        <developer>\n            <id>karussell</id>\n            <name>Peter Karich</name>\n            <email>my.name@graphhopper.com</email>\n        </developer>\n    </developers>\n\n    <mailingLists>\n        <mailingList>\n            <name>GraphHopper</name>\n            <subscribe>https://discuss.graphhopper.com/</subscribe>\n            <archive>https://discuss.graphhopper.com/</archive>\n        </mailingList>\n    </mailingLists>\n    <issueManagement>\n        <system>GitHub</system>\n        <url>https://github.com/graphhopper/graphhopper/issues</url>\n    </issueManagement>\n\n    <modules>\n        <module>core</module>\n        <module>reader-gtfs</module>\n        <module>tools</module>\n        <module>map-matching</module>\n        <module>web-bundle</module>\n        <module>web-api</module>\n        <module>web</module>\n        <module>client-hc</module>\n        <module>navigation</module>\n        <module>example</module>\n    </modules>\n    <dependencyManagement>\n        <dependencies>\n            <!-- provides compatible versions for jackson, guava, slf4j etc. -->\n            <dependency>\n                <groupId>io.dropwizard</groupId>\n                <artifactId>dropwizard-dependencies</artifactId>\n                <version>3.0.8</version>\n                <type>pom</type>\n                <scope>import</scope>\n            </dependency>\n            <dependency>\n                <groupId>com.graphhopper.external</groupId>\n                <artifactId>jackson-datatype-jts</artifactId>\n                <version>2.14</version>\n                <exclusions>\n                    <exclusion>\n                        <groupId>com.fasterxml.jackson.core</groupId>\n                        <artifactId>jackson-databind</artifactId>\n                    </exclusion>\n                </exclusions>\n            </dependency>\n            <dependency>\n                <groupId>com.carrotsearch</groupId>\n                <artifactId>hppc</artifactId>\n                <version>0.8.1</version>\n            </dependency>\n            <dependency>\n                <groupId>org.locationtech.jts</groupId>\n                <artifactId>jts-core</artifactId>\n                <version>1.19.0</version>\n            </dependency>\n            <dependency>\n                <groupId>org.apache.commons</groupId>\n                <artifactId>commons-compress</artifactId>\n                <version>1.26.0</version>\n            </dependency>\n            <dependency>\n                <groupId>org.junit</groupId>\n                <artifactId>junit-bom</artifactId>\n                <version>5.9.1</version>\n                <type>pom</type>\n                <scope>import</scope>\n            </dependency>\n            <dependency>\n                <groupId>net.sourceforge.javacsv</groupId>\n                <artifactId>javacsv</artifactId>\n                <version>2.0</version>\n            </dependency>\n            <dependency>\n                <groupId>commons-io</groupId>\n                <artifactId>commons-io</artifactId>\n                <version>2.14.0</version>\n            </dependency>\n            <dependency>\n                <groupId>org.mapdb</groupId>\n                <artifactId>mapdb</artifactId>\n                <version>1.0.8</version>\n            </dependency>\n            <dependency>\n                <groupId>io.mobilitydata.transit</groupId>\n                <artifactId>gtfs-realtime-bindings</artifactId>\n                <version>0.0.5</version>\n                <exclusions>\n                    <exclusion>\n                        <!-- use newer protobuf version  -->\n                        <groupId>com.google.protobuf</groupId>\n                        <artifactId>protobuf-java</artifactId>\n                    </exclusion>\n                </exclusions>\n            </dependency>\n            <dependency>\n                <groupId>javax.inject</groupId>\n                <artifactId>javax.inject</artifactId>\n                <version>1</version>\n            </dependency>\n            <dependency>\n                <groupId>org.hamcrest</groupId>\n                <artifactId>hamcrest-library</artifactId>\n                <version>1.3</version>\n                <scope>test</scope>\n            </dependency>\n        </dependencies>\n    </dependencyManagement>\n\n    <dependencies>\n        <dependency>\n            <groupId>org.junit.platform</groupId>\n            <artifactId>junit-platform-launcher</artifactId>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>org.junit.jupiter</groupId>\n            <artifactId>junit-jupiter-engine</artifactId>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>org.junit.jupiter</groupId>\n            <artifactId>junit-jupiter-params</artifactId>\n            <scope>test</scope>\n        </dependency>\n    </dependencies>\n    <build>\n        <pluginManagement>\n            <plugins>\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-compiler-plugin</artifactId>\n                    <version>3.8.1</version>\n                    <configuration>\n                        <!--\n                        <compilerArgument>-Xlint:unchecked</compilerArgument>\n                        <compilerArgument>-Xlint:deprecation</compilerArgument>\n                        -->\n                        <fork>true</fork>\n                        <release>17</release>\n                    </configuration>\n                </plugin>\n\n                <!-- to run single tests -->\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-surefire-plugin</artifactId>\n                    <version>2.22.2</version>\n                    <configuration>\n                        <argLine>-Xmx190m -Xms190m -Duser.language=en</argLine>\n                    </configuration>\n                </plugin>\n\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-failsafe-plugin</artifactId>\n                    <version>2.22.2</version>\n                    <executions>\n                        <execution>\n                            <goals>\n                                <goal>integration-test</goal>\n                                <goal>verify</goal>\n                            </goals>\n                        </execution>\n                    </executions>\n                </plugin>\n                <plugin>\n                    <artifactId>maven-antrun-plugin</artifactId>\n                    <version>1.8</version>\n                </plugin>\n            </plugins>\n        </pluginManagement>\n        <plugins>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-surefire-plugin</artifactId>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-failsafe-plugin</artifactId>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-assembly-plugin</artifactId>\n                <version>3.1.1</version>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-jar-plugin</artifactId>\n                <version>3.1.1</version>\n            </plugin>\n            <!-- example https://github.com/tananaev/traccar/blob/master/checkstyle.xml -->\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-checkstyle-plugin</artifactId>\n                <version>3.1.0</version>\n                <configuration>\n                    <configLocation>${user.dir}/core/files/checkstyle.xml</configLocation>\n                    <failsOnError>true</failsOnError>\n                    <consoleOutput>true</consoleOutput>\n                    <linkXRef>false</linkXRef>\n                </configuration>\n            </plugin>\n\n            <plugin>\n                <groupId>de.thetaphi</groupId>\n                <artifactId>forbiddenapis</artifactId>\n                <version>2.6</version>\n                <configuration>\n                    <!--\n                      if the used Java version is too new,\n                      don't fail, just do nothing:\n                    -->\n                    <failOnUnsupportedJava>false</failOnUnsupportedJava>\n                    <bundledSignatures>\n                        <!--\n                          This will automatically choose the right\n                          signatures based on 'maven.compiler.target':\n                        -->\n                        <bundledSignature>jdk-deprecated</bundledSignature>\n                    </bundledSignatures>\n                    <excludes>\n                        <!-- Has a couple of issues with the FileWriter -->\n                        <exclude>\n                            com/graphhopper/tools/Measurement.class\n                        </exclude>\n                    </excludes>\n                </configuration>\n            </plugin>\n        </plugins>\n    </build>\n\n    <distributionManagement>\n        <repository>\n            <id>github</id>\n            <name>GitHub GraphHopper Apache Maven Packages</name>\n            <url>https://maven.pkg.github.com/graphhopper/graphhopper</url>\n        </repository>\n    </distributionManagement>\n\n    <!-- mvn clean deploy -P release -->\n    <profiles>\n        <profile>\n            <id>release</id>\n            <activation>\n                <activeByDefault>false</activeByDefault>\n            </activation>\n            <build>\n                <plugins>\n                    <plugin>\n                        <groupId>org.apache.maven.plugins</groupId>\n                        <artifactId>maven-gpg-plugin</artifactId>\n                        <version>3.0.1</version>\n                        <executions>\n                            <execution>\n                                <id>sign-artifacts</id>\n                                <phase>verify</phase>\n                                <goals>\n                                    <goal>sign</goal>\n                                </goals>\n                            </execution>\n                        </executions>\n                    </plugin>\n                    <plugin>\n                        <groupId>org.sonatype.plugins</groupId>\n                        <artifactId>nexus-staging-maven-plugin</artifactId>\n                        <version>1.6.13</version>\n                        <extensions>true</extensions>\n                        <configuration>\n                            <serverId>ossrh</serverId>\n                            <nexusUrl>https://oss.sonatype.org/</nexusUrl>\n                            <autoReleaseAfterClose>true</autoReleaseAfterClose>\n                            <stagingProgressTimeoutMinutes>10</stagingProgressTimeoutMinutes>\n                        </configuration>\n                    </plugin>\n                    <plugin>\n                        <groupId>org.apache.maven.plugins</groupId>\n                        <artifactId>maven-javadoc-plugin</artifactId>\n                        <version>3.4.1</version>\n                        <configuration>\n                            <!-- note that we disable doclint via properties globally, using <doclint>none</doclint> did not seem to work -->\n                            <quiet>true</quiet>\n                        </configuration>\n                        <executions>\n                            <execution>\n                                <id>attach-javadocs</id>\n                                <goals>\n                                    <goal>jar</goal>\n                                </goals>\n                            </execution>\n                        </executions>\n                    </plugin>\n                    <plugin>\n                        <groupId>org.apache.maven.plugins</groupId>\n                        <artifactId>maven-source-plugin</artifactId>\n                        <version>3.2.1</version>\n                        <executions>\n                            <execution>\n                                <id>attach-sources</id>\n                                <goals>\n                                    <goal>jar-no-fork</goal>\n                                </goals>\n                            </execution>\n                        </executions>\n                    </plugin>\n                </plugins>\n            </build>\n        </profile>\n    </profiles>\n</project>\n"
        },
        {
          "name": "reader-gtfs",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "web-api",
          "type": "tree",
          "content": null
        },
        {
          "name": "web-bundle",
          "type": "tree",
          "content": null
        },
        {
          "name": "web",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}