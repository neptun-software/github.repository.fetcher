{
  "metadata": {
    "timestamp": 1736708652142,
    "page": 35,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "cats-oss/android-gpuimage",
      "stars": 9030,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.912109375,
          "content": "# Mac OS\n.DS_store\n\n# Built application files\n*.apk\n*.ap_\n\n# Files for the ART/Dalvik VM\n*.dex\n\n# Java class files\n*.class\n\n# Generated files\nbin/\ngen/\nout/\n\n# Gradle files\n.gradle/\nbuild/ \n# Local configuration file (sdk path, etc)\nlocal.properties\n\n# Proguard folder generated by Eclipse\nproguard/\n\n# Log Files\n*.log\n\n# Android Studio Navigation editor temp files\n.navigation/\n\n# Android Studio captures folder\ncaptures/\n\n# IntelliJ\n*.iml\n.idea/\nprojectFilesBackup/\n\n# Keystore files\n# Uncomment the following line if you do not want to check your keystore files in.\n#*.jks\n\n# External native build folder generated in Android Studio 2.2 and later\n.externalNativeBuild\n\n# Google Services (e.g. APIs or Firebase)\ngoogle-services.json\n\n# Freeline\nfastlane/README.md\nfastlane/report.xml\n\n# fastlane\nfastlane/report.xml\nfastlane/Preview.html\nfastlane/screenshots\nfastlane/test_output\nfastlane/readme.md\n\n# NDK\n.externalNativeBuild\n.cxx\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 1.9560546875,
          "content": "Change Log\n==========\n\nVersion 2.1.0 *(2020-09-21)*\n----------------------------\n\n* Update\n  * Kotlin to 1.3.72\n  * The targetSdkVersion from 28 to 30\n  * The compileSdkVersion from 28 to 30\n\nVersion 2.0.4 *(2019-08-13)*\n----------------------------\n\n* Update\n  * Kotlin to 1.3.41\n  * Android Gradle tools to 3.6.0-alpha05\n  * Gradle wrapper to 5.5\n\n* Add\n  64bit build settings for clearly\n  Can get size of rescaled image [#443](https://github.com/cats-oss/android-gpuimage/pull/443)\n        \n* Bug fix\n  GPUImageZoomBlurFilter incorrect args [#454](https://github.com/cats-oss/android-gpuimage/pull/454)\n\nVersion 2.0.3 *(2018-11-09)*\n----------------------------\n\n* Add GPUImageVibranceFilter (by @itome)\n\nVersion 2.0.2 *(2018-11-01)*\n----------------------------\n\n* Add GPUImageSolarizeFilter (by @kettsun0123)\n\n* Change attr/names\n  `show_loading` to `gpuimage_show_loading`\n  `surface_type` to `gpuimage_surface_type`\n\n* Fix a bug about filter init [#420](https://github.com/cats-oss/android-gpuimage/pull/420)\n\nVersion 2.0.1 *(2018-10-24)*\n----------------------------\n\n* Add GPUImageLuminanceFilter (by @takasfz)\n* Add GPUImageLuminanceThresholdFilter (by @takasfz)\n\nVersion 2.0.0 *(2018-10-23)*\n----------------------------\n\n* Change the minSdkVersion 9 to 14\n* Change the targetSdkVersion 23 to 28\n* Update project settings\n* Support TextureView via GLTexureView\n* Support Camera2 API\n* Fix some bugs\n\n\nVersion 1.4.1 *(2016-03-15)*\n----------------------------\n Using Bintray's JCenter.\n\nVersion 1.4.0 *(2016-02-28)*\n----------------------------\n\n* added GPUImageHalftoneFilter (by @ryohey)\n* added GPUImageTransformFilter (by @jonan)\n* fixed GPUImageChromaKeyBlendFilter (by @badjano)\n* fixed GPUImageLookupFilter (by @jonan)\n\nVersion 1.3.0 *(2015-09-04)*\n----------------------------\n\n* added GPUImageBilateralFilter (by @wysaid)\n* added flip options to `GPUImage#setRotation`\n\nVersion 1.2.3-SNAPSHOT *(2014-12-15)*\n----------------------------\n\n* added GPUImageLevelsFilter (by @vashisthg)\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.08984375,
          "content": "# How to Contribute\n\nWe'd love to accept your patches and contributions to this project. There are\njust a few small guidelines you need to follow.\n\n## Contributor License Agreement\n\nContributions to this project must be accompanied by a Contributor License\nAgreement. You (or your employer) retain the copyright to your contribution,\nthis simply gives us permission to use and redistribute your contributions as\npart of the project. Head over to <https://cla-assistant.io/cats-oss/android-gpuimage> to see\nyour current agreements on file or to sign a new one.\n\nYou generally only need to submit a CLA once, so if you've already submitted one\n(even if it was for a different project), you probably don't need to do it\nagain.\n\n## Code reviews\n\nAll submissions, including submissions by project members, require review. We\nuse GitHub pull requests for this purpose. Consult\n[GitHub Help](https://help.github.com/articles/about-pull-requests/) for more\ninformation on using pull requests.\n\n## Community Guidelines\n\nThis project follows [Google's Open Source Community Guidelines](https://opensource.google.com/conduct/)."
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 7.556640625,
          "content": "# GPUImage for Android\n[![License](https://img.shields.io/badge/license-Apache%202-blue.svg)](https://www.apache.org/licenses/LICENSE-2.0)\n[![Download](https://api.bintray.com/packages/cats-oss/maven/gpuimage/images/download.svg) ](https://bintray.com/cats-oss/maven/gpuimage/_latestVersion)\n[![Maven Central](https://maven-badges.herokuapp.com/maven-central/jp.co.cyberagent.android/gpuimage/badge.svg)](https://search.maven.org/artifact/jp.co.cyberagent.android/gpuimage)\n[![Build Status](https://app.bitrise.io/app/d8d8090a71066e7c/status.svg?token=sJNbvX8CkecWcUA5Z898lQ&branch=master)](https://app.bitrise.io/app/d8d8090a71066e7c)\n\nIdea from: [iOS GPUImage framework](https://github.com/BradLarson/GPUImage2)\n\nGoal is to have something as similar to GPUImage as possible. Vertex and fragment shaders are exactly the same. That way it makes it easier to port filters from GPUImage iOS to Android.\n\n## Requirements\n* Android 2.2 or higher (OpenGL ES 2.0)\n\n## Usage\n\n### Gradle dependency\n\n```groovy\nrepositories {\n    mavenCentral()\n}\n\ndependencies {\n    implementation 'jp.co.cyberagent.android:gpuimage:2.x.x'\n}\n```\n\n### Sample Code\n#### With preview:\n\nJava:\n```java\n@Override\npublic void onCreate(final Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.activity);\n\n    Uri imageUri = ...;\n    gpuImage = new GPUImage(this);\n    gpuImage.setGLSurfaceView((GLSurfaceView) findViewById(R.id.surfaceView));\n    gpuImage.setImage(imageUri); // this loads image on the current thread, should be run in a thread\n    gpuImage.setFilter(new GPUImageSepiaFilter());\n\n    // Later when image should be saved saved:\n    gpuImage.saveToPictures(\"GPUImage\", \"ImageWithFilter.jpg\", null);\n}\n```\n\nKotlin:\n```kotlin\npublic override fun onCreate(savedInstanceState: Bundle?) {\n    super.onCreate(savedInstanceState)\n    setContentView(R.layout.activity_gallery)\n\n    val imageUri: Uri = ...\n    gpuImage = GPUImage(this)\n    gpuImage.setGLSurfaceView(findViewById<GLSurfaceView>(R.id.surfaceView))\n    gpuImage.setImage(imageUri) // this loads image on the current thread, should be run in a thread\n    gpuImage.setFilter(GPUImageSepiaFilter())\n\n    // Later when image should be saved saved:\n    gpuImage.saveToPictures(\"GPUImage\", \"ImageWithFilter.jpg\", null)\n}\n```\n\n#### Using GPUImageView\n```xml\n<jp.co.cyberagent.android.gpuimage.GPUImageView\n    android:id=\"@+id/gpuimageview\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    app:gpuimage_show_loading=\"false\"\n    app:gpuimage_surface_type=\"texture_view\" /> <!-- surface_view or texture_view -->\n```\n\nJava:\n```java\n@Override\npublic void onCreate(final Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.activity);\n\n    Uri imageUri = ...;\n    gpuImageView = findViewById(R.id.gpuimageview);\n    gpuImageView.setImage(imageUri); // this loads image on the current thread, should be run in a thread\n    gpuImageView.setFilter(new GPUImageSepiaFilter());\n\n    // Later when image should be saved saved:\n    gpuImageView.saveToPictures(\"GPUImage\", \"ImageWithFilter.jpg\", null);\n}\n```\n\nKotlin:\n```kotlin\npublic override fun onCreate(savedInstanceState: Bundle?) {\n    super.onCreate(savedInstanceState)\n    setContentView(R.layout.activity_gallery)\n\n    val imageUri: Uri = ...\n    gpuImageView = findViewById<GPUImageView>(R.id.gpuimageview)\n    gpuImageView.setImage(imageUri) // this loads image on the current thread, should be run in a thread\n    gpuImageView.setFilter(GPUImageSepiaFilter())\n\n    // Later when image should be saved saved:\n    gpuImageView.saveToPictures(\"GPUImage\", \"ImageWithFilter.jpg\", null)\n}\n```\n\n#### Without preview:\n\nJava:\n```java\npublic void onCreate(final Bundle savedInstanceState) {\n    public void onCreate(final Bundle savedInstanceState) {\n    Uri imageUri = ...;\n    gpuImage = new GPUImage(context);\n    gpuImage.setFilter(new GPUImageSobelEdgeDetection());\n    gpuImage.setImage(imageUri);\n    gpuImage.saveToPictures(\"GPUImage\", \"ImageWithFilter.jpg\", null);\n}\n```\n\nKotlin:\n```kotlin\npublic override fun onCreate(savedInstanceState: Bundle?) {\n    super.onCreate(savedInstanceState)\n    setContentView(R.layout.activity_gallery)\n    val imageUri: Uri = ...\n    gpuImage = GPUImage(this)\n    gpuImage.setFilter(GPUImageSepiaFilter())\n    gpuImage.setImage(imageUri)\n    gpuImage.saveToPictures(\"GPUImage\", \"ImageWithFilter.jpg\", null)\n}\n```\n\n### Support status of [GPUImage for iOS](https://github.com/BradLarson/GPUImage2) shaders\n- [x] Saturation\n- [x] Contrast\n- [x] Brightness\n- [x] Levels\n- [x] Exposure\n- [x] RGB\n- [x] RGB Diation\n- [x] Hue\n- [x] White Balance\n- [x] Monochrome\n- [x] False Color\n- [x] Sharpen\n- [ ] Unsharp Mask\n- [x] Transform Operation\n- [ ] Crop\n- [x] Gamma\n- [x] Highlights and Shadows\n- [x] Haze\n- [x] Sepia Tone\n- [ ] Amatorka\n- [ ] Miss Etikate\n- [ ] Soft Elegance\n- [x] Color Inversion\n- [x] Solarize\n- [x] Vibrance\n- [ ] Highlight and Shadow Tint\n- [x] Luminance\n- [x] Luminance Threshold\n- [ ] Average Color\n- [ ] Average Luminance\n- [ ] Average Luminance Threshold\n- [ ] Adaptive Threshold\n- [ ] Polar Pixellate\n- [x] Pixellate\n- [ ] Polka Dot\n- [x] Halftone\n- [x] Crosshatch\n- [x] Sobel Edge Detection\n- [ ] Prewitt Edge Detection\n- [ ] Canny Edge Detection\n- [x] Threshold Sobel EdgeDetection\n- [ ] Harris Corner Detector\n- [ ] Noble Corner Detector\n- [ ] Shi Tomasi Feature Detector\n- [ ] Colour FAST Feature Detector\n- [ ] Low Pass Filter\n- [ ] High Pass Filter\n- [x] Sketch Filter\n- [ ] Threshold Sketch Filter\n- [x] Toon Filter\n- [x] SmoothToon Filter\n- [ ] Tilt Shift\n- [x] CGA Colorspace Filter\n- [x] Posterize\n- [x] Convolution 3x3\n- [x] Emboss Filter\n- [x] Laplacian\n- [x] Chroma Keying\n- [x] Kuwahara Filter\n- [ ] Kuwahara Radius3 Filter\n- [x] Vignette\n- [x] Gaussian Blur\n- [x] Box Blur\n- [x] Bilateral Blur\n- [ ] Motion Blur\n- [x] Zoom Blur\n- [ ] iOS Blur\n- [ ] Median Filter\n- [x] Swirl Distortion\n- [x] Bulge Distortion\n- [ ] Pinch Distortion\n- [x] Sphere Refraction\n- [x] Glass Sphere Refraction\n- [ ] Stretch Distortion\n- [x] Dilation\n- [ ] Erosion\n- [ ] Opening Filter\n- [ ] Closing Filter\n- [ ] Local Binary Pattern\n- [ ] Color Local Binary Pattern\n- [x] Dissolve Blend\n- [x] Chroma Key Blend\n- [x] Add Blend\n- [x] Divide Blend\n- [x] Multiply Blend\n- [x] Overlay Blend\n- [x] Lighten Blend\n- [x] Darken Blend\n- [x] Color Burn Blend\n- [x] Color Dodge Blend\n- [x] Linear Burn Blend\n- [x] Screen Blend\n- [x] Difference Blend\n- [x] Subtract Blend\n- [x] Exclusion Blend\n- [x] HardLight Blend\n- [x] SoftLight Blend\n- [x] Color Blend\n- [x] Hue Blend\n- [x] Saturation Blend\n- [x] Luminosity Blend\n- [x] Normal Blend\n- [x] Source Over Blend\n- [x] Alpha Blend\n- [x] Non Maximum Suppression\n- [ ] Thresholded Non Maximum Suppression\n- [ ] Directional Non Maximum Suppression\n- [x] Opacity\n- [x] Weak Pixel Inclusion Filter\n- [x] Color Matrix\n- [x] Directional Sobel Edge Detection\n- [x] Lookup\n- [x] Tone Curve (*.acv files) \n\n## Others\n- [x] Texture 3x3\n- [x] Gray Scale\n\n### Gradle\nMake sure that you run the clean target when using maven.\n\n```groovy\ngradle clean assemble\n```\n\n## License\n    Copyright 2018 CyberAgent, Inc.\n\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n"
        },
        {
          "name": "build.gradle",
          "type": "blob",
          "size": 0.7861328125,
          "content": "// Top-level build file where you can add configuration options common to all sub-projects/modules.\n\nbuildscript {\n    ext.kotlin_version = '1.3.72'\n    repositories {\n        google()\n        jcenter()\n    }\n    dependencies {\n        classpath 'com.android.tools.build:gradle:4.2.0-beta04'\n        classpath \"org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version\"\n\n// TODO: Close JCenter on May 1st https://jfrog.com/blog/into-the-sunset-bintray-jcenter-gocenter-and-chartcenter/\n//        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.5'\n//        classpath 'com.github.dcendents:android-maven-gradle-plugin:2.1'\n    }\n}\n\nallprojects {\n    repositories {\n        google()\n        mavenCentral()\n        jcenter()\n    }\n}\n\ntask clean(type: Delete) {\n    delete rootProject.buildDir\n}"
        },
        {
          "name": "gradle.properties",
          "type": "blob",
          "size": 1.009765625,
          "content": "# IDE (e.g. Android Studio) users:\n# Gradle settings configured through the IDE *will override*\n# any settings specified in this file.\n# For more details on how to configure your build environment visit\n# http://www.gradle.org/docs/current/userguide/build_environment.html\n# Specifies the JVM arguments used for the daemon process.\n# The setting is particularly useful for tweaking memory settings.\norg.gradle.jvmargs=-Xmx2048m -XX:MaxPermSize=1024m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8\n# When configured, Gradle will run in incubating parallel mode.\n# This option should only be used with decoupled projects. More details, visit\n# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects\norg.gradle.parallel=true\norg.gradle.daemon=true\norg.gradle.configureondemand=true\norg.gradle.caching=true\nandroid.enableBuildCache=true\n\nVERSION_NAME=2.1.0\nVERSION_CODE=14\n\nCOMPILE_SDK_VERSION=30\nTARGET_SDK_VERSION=30\nMIN_SDK_VERSION=14\n\nandroid.useAndroidX=true\nandroid.enableJetifier=true\n"
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 5.630859375,
          "content": "#!/usr/bin/env sh\n\n#\n# Copyright 2015 the original author or authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      https://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\n##############################################################################\n##\n##  Gradle start up script for UN*X\n##\n##############################################################################\n\n# Attempt to set APP_HOME\n# Resolve links: $0 may be a link\nPRG=\"$0\"\n# Need this for relative symlinks.\nwhile [ -h \"$PRG\" ] ; do\n    ls=`ls -ld \"$PRG\"`\n    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n    if expr \"$link\" : '/.*' > /dev/null; then\n        PRG=\"$link\"\n    else\n        PRG=`dirname \"$PRG\"`\"/$link\"\n    fi\ndone\nSAVED=\"`pwd`\"\ncd \"`dirname \\\"$PRG\\\"`/\" >/dev/null\nAPP_HOME=\"`pwd -P`\"\ncd \"$SAVED\" >/dev/null\n\nAPP_NAME=\"Gradle\"\nAPP_BASE_NAME=`basename \"$0\"`\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS='\"-Xmx64m\" \"-Xms64m\"'\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=\"maximum\"\n\nwarn () {\n    echo \"$*\"\n}\n\ndie () {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n}\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\nnonstop=false\ncase \"`uname`\" in\n  CYGWIN* )\n    cygwin=true\n    ;;\n  Darwin* )\n    darwin=true\n    ;;\n  MINGW* )\n    msys=true\n    ;;\n  NONSTOP* )\n    nonstop=true\n    ;;\nesac\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n    else\n        JAVACMD=\"$JAVA_HOME/bin/java\"\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=\"java\"\n    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\nfi\n\n# Increase the maximum file descriptors if we can.\nif [ \"$cygwin\" = \"false\" -a \"$darwin\" = \"false\" -a \"$nonstop\" = \"false\" ] ; then\n    MAX_FD_LIMIT=`ulimit -H -n`\n    if [ $? -eq 0 ] ; then\n        if [ \"$MAX_FD\" = \"maximum\" -o \"$MAX_FD\" = \"max\" ] ; then\n            MAX_FD=\"$MAX_FD_LIMIT\"\n        fi\n        ulimit -n $MAX_FD\n        if [ $? -ne 0 ] ; then\n            warn \"Could not set maximum file descriptor limit: $MAX_FD\"\n        fi\n    else\n        warn \"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\"\n    fi\nfi\n\n# For Darwin, add options to specify how the application appears in the dock\nif $darwin; then\n    GRADLE_OPTS=\"$GRADLE_OPTS \\\"-Xdock:name=$APP_NAME\\\" \\\"-Xdock:icon=$APP_HOME/media/gradle.icns\\\"\"\nfi\n\n# For Cygwin or MSYS, switch paths to Windows format before running java\nif [ \"$cygwin\" = \"true\" -o \"$msys\" = \"true\" ] ; then\n    APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`\n    CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`\n\n    JAVACMD=`cygpath --unix \"$JAVACMD\"`\n\n    # We build the pattern for arguments to be converted via cygpath\n    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`\n    SEP=\"\"\n    for dir in $ROOTDIRSRAW ; do\n        ROOTDIRS=\"$ROOTDIRS$SEP$dir\"\n        SEP=\"|\"\n    done\n    OURCYGPATTERN=\"(^($ROOTDIRS))\"\n    # Add a user-defined pattern to the cygpath arguments\n    if [ \"$GRADLE_CYGPATTERN\" != \"\" ] ; then\n        OURCYGPATTERN=\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\"\n    fi\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    i=0\n    for arg in \"$@\" ; do\n        CHECK=`echo \"$arg\"|egrep -c \"$OURCYGPATTERN\" -`\n        CHECK2=`echo \"$arg\"|egrep -c \"^-\"`                                 ### Determine if an option\n\n        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition\n            eval `echo args$i`=`cygpath --path --ignore --mixed \"$arg\"`\n        else\n            eval `echo args$i`=\"\\\"$arg\\\"\"\n        fi\n        i=`expr $i + 1`\n    done\n    case $i in\n        0) set -- ;;\n        1) set -- \"$args0\" ;;\n        2) set -- \"$args0\" \"$args1\" ;;\n        3) set -- \"$args0\" \"$args1\" \"$args2\" ;;\n        4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;\n        5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;\n        6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;\n        7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;\n        8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;\n        9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;\n    esac\nfi\n\n# Escape application args\nsave () {\n    for i do printf %s\\\\n \"$i\" | sed \"s/'/'\\\\\\\\''/g;1s/^/'/;\\$s/\\$/' \\\\\\\\/\" ; done\n    echo \" \"\n}\nAPP_ARGS=`save \"$@\"`\n\n# Collect all arguments for the java command, following the shell quoting and substitution rules\neval set -- $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS \"\\\"-Dorg.gradle.appname=$APP_BASE_NAME\\\"\" -classpath \"\\\"$CLASSPATH\\\"\" org.gradle.wrapper.GradleWrapperMain \"$APP_ARGS\"\n\nexec \"$JAVACMD\" \"$@\"\n"
        },
        {
          "name": "gradlew.bat",
          "type": "blob",
          "size": 2.6982421875,
          "content": "@rem\r\n@rem Copyright 2015 the original author or authors.\r\n@rem\r\n@rem Licensed under the Apache License, Version 2.0 (the \"License\");\r\n@rem you may not use this file except in compliance with the License.\r\n@rem You may obtain a copy of the License at\r\n@rem\r\n@rem      https://www.apache.org/licenses/LICENSE-2.0\r\n@rem\r\n@rem Unless required by applicable law or agreed to in writing, software\r\n@rem distributed under the License is distributed on an \"AS IS\" BASIS,\r\n@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n@rem See the License for the specific language governing permissions and\r\n@rem limitations under the License.\r\n@rem\r\n\r\n@if \"%DEBUG%\" == \"\" @echo off\r\n@rem ##########################################################################\r\n@rem\r\n@rem  Gradle startup script for Windows\r\n@rem\r\n@rem ##########################################################################\r\n\r\n@rem Set local scope for the variables with windows NT shell\r\nif \"%OS%\"==\"Windows_NT\" setlocal\r\n\r\nset DIRNAME=%~dp0\r\nif \"%DIRNAME%\" == \"\" set DIRNAME=.\r\nset APP_BASE_NAME=%~n0\r\nset APP_HOME=%DIRNAME%\r\n\r\n@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.\r\nfor %%i in (\"%APP_HOME%\") do set APP_HOME=%%~fi\r\n\r\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\r\nset DEFAULT_JVM_OPTS=\"-Xmx64m\" \"-Xms64m\"\r\n\r\n@rem Find java.exe\r\nif defined JAVA_HOME goto findJavaFromJavaHome\r\n\r\nset JAVA_EXE=java.exe\r\n%JAVA_EXE% -version >NUL 2>&1\r\nif \"%ERRORLEVEL%\" == \"0\" goto execute\r\n\r\necho.\r\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\r\necho.\r\necho Please set the JAVA_HOME variable in your environment to match the\r\necho location of your Java installation.\r\n\r\ngoto fail\r\n\r\n:findJavaFromJavaHome\r\nset JAVA_HOME=%JAVA_HOME:\"=%\r\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\r\n\r\nif exist \"%JAVA_EXE%\" goto execute\r\n\r\necho.\r\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\r\necho.\r\necho Please set the JAVA_HOME variable in your environment to match the\r\necho location of your Java installation.\r\n\r\ngoto fail\r\n\r\n:execute\r\n@rem Setup the command line\r\n\r\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\r\n\r\n\r\n@rem Execute Gradle\r\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*\r\n\r\n:end\r\n@rem End local scope for the variables with windows NT shell\r\nif \"%ERRORLEVEL%\"==\"0\" goto mainEnd\r\n\r\n:fail\r\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\r\nrem the _cmd.exe /c_ return code!\r\nif  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1\r\nexit /b 1\r\n\r\n:mainEnd\r\nif \"%OS%\"==\"Windows_NT\" endlocal\r\n\r\n:omega\r\n"
        },
        {
          "name": "library",
          "type": "tree",
          "content": null
        },
        {
          "name": "sample",
          "type": "tree",
          "content": null
        },
        {
          "name": "settings.gradle",
          "type": "blob",
          "size": 0.0361328125,
          "content": "include ':library'\ninclude ':sample'\n"
        },
        {
          "name": "utils",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}