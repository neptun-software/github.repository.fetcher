{
  "metadata": {
    "timestamp": 1736708813223,
    "page": 333,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjM0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "logisim-evolution/logisim-evolution",
      "stars": 5136,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.0126953125,
          "content": "*.svg binary\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 4.9755859375,
          "content": "# Created by https://www.gitignore.io/api/java,macos,linux,gradle,windows,eclipse,jetbrains+all,git\n# Edit at https://www.gitignore.io/?templates=java,macos,linux,gradle,windows,eclipse,jetbrains+all,git\n\n### Eclipse ###\n\n.metadata\nbin/\ntmp/\n*.tmp\n*.bak\n*.swp\n*~.nib\nlocal.properties\n.settings/\n.loadpath\n.recommenders\n\n# External tool builders\n.externalToolBuilders/\n\n# Locally stored \"Eclipse launch configurations\"\n*.launch\n\n# PyDev specific (Python IDE for Eclipse)\n*.pydevproject\n\n# CDT-specific (C/C++ Development Tooling)\n.cproject\n\n# CDT- autotools\n.autotools\n\n# Java annotation processor (APT)\n.factorypath\n\n# PDT-specific (PHP Development Tools)\n.buildpath\n\n# sbteclipse plugin\n.target\n\n# Tern plugin\n.tern-project\n\n# TeXlipse plugin\n.texlipse\n\n# STS (Spring Tool Suite)\n.springBeans\n\n# Code Recommenders\n.recommenders/\n\n# Annotation Processing\n.apt_generated/\n\n# Scala IDE specific (Scala & Java development for Eclipse)\n.cache-main\n.scala_dependencies\n.worksheet\n\n### Eclipse Patch ###\n# Eclipse Core\n.project\n\n# JDT-specific (Eclipse Java Development Tools)\n.classpath\n\n# Annotation Processing\n.apt_generated\n\n.sts4-cache/\n\n### Git ###\n# Created by git for backups. To disable backups in Git:\n# $ git config --global mergetool.keepBackup false\n*.orig\n\n# Created by git when using merge tools for conflicts\n*.BACKUP.*\n*.BASE.*\n*.LOCAL.*\n*.REMOTE.*\n*_BACKUP_*.txt\n*_BASE_*.txt\n*_LOCAL_*.txt\n*_REMOTE_*.txt\n\n### Java ###\n# Compiled class file\n*.class\n\n# Log file\n*.log\n\n# BlueJ files\n*.ctxt\n\n# Mobile Tools for Java (J2ME)\n.mtj.tmp/\n\n# Package Files #\n*.jar\n*.war\n*.nar\n*.ear\n*.zip\n*.tar.gz\n*.rar\n\n# virtual machine crash logs, see http://www.java.com/en/download/help/error_hotspot.xml\nhs_err_pid*\n\n### JetBrains+all ###\n# Covers JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm, CLion, Android Studio and WebStorm\n# Reference: https://intellij-support.jetbrains.com/hc/en-us/articles/206544839\n\n# User-specific stuff\n.idea/**/workspace.xml\n.idea/**/tasks.xml\n.idea/**/usage.statistics.xml\n.idea/**/dictionaries\n.idea/**/shelf\n\n# Generated files\n.idea/**/contentModel.xml\n\n# Sensitive or high-churn files\n.idea/**/dataSources/\n.idea/**/dataSources.ids\n.idea/**/dataSources.local.xml\n.idea/**/sqlDataSources.xml\n.idea/**/dynamic.xml\n.idea/**/uiDesigner.xml\n.idea/**/dbnavigator.xml\n\n# Gradle\n.idea/**/gradle.xml\n.idea/**/libraries\n\n# Gradle and Maven with auto-import\n# When using Gradle or Maven with auto-import, you should exclude module files,\n# since they will be recreated, and may cause churn.  Uncomment if using\n# auto-import.\n# .idea/modules.xml\n# .idea/*.iml\n# .idea/modules\n\n# CMake\ncmake-build-*/\n\n# Mongo Explorer plugin\n.idea/**/mongoSettings.xml\n\n# File-based project format\n*.iws\n\n# IntelliJ\nout/\n\n# mpeltonen/sbt-idea plugin\n.idea_modules/\n\n# JIRA plugin\natlassian-ide-plugin.xml\n\n# Cursive Clojure plugin\n.idea/replstate.xml\n\n# Crashlytics plugin (for Android Studio and IntelliJ)\ncom_crashlytics_export_strings.xml\ncrashlytics.properties\ncrashlytics-build.properties\nfabric.properties\n\n# Editor-based Rest Client\n.idea/httpRequests\n\n# Android studio 3.1+ serialized cache file\n.idea/caches/build_file_checksums.ser\n\n### JetBrains+all Patch ###\n# Ignores the whole .idea folder and all .iml files\n# See https://github.com/joeblau/gitignore.io/issues/186 and https://github.com/joeblau/gitignore.io/issues/360\n\n.idea/\n\n# Reason: https://github.com/joeblau/gitignore.io/issues/186#issuecomment-249601023\n\n*.iml\nmodules.xml\n.idea/misc.xml\n*.ipr\n\n### Linux ###\n*~\n\n# temporary files which can be created if a process still has a handle open of a deleted file\n.fuse_hidden*\n\n# KDE directory preferences\n.directory\n\n# Linux trash folder which might appear on any partition or disk\n.Trash-*\n\n# .nfs files are created when an open file is removed but is still being accessed\n.nfs*\n\n### macOS ###\n# General\n.DS_Store\n.AppleDouble\n.LSOverride\n\n# Icon must end with two \\r\nIcon\n\n# Thumbnails\n._*\n\n# Files that might appear in the root of a volume\n.DocumentRevisions-V100\n.fseventsd\n.Spotlight-V100\n.TemporaryItems\n.Trashes\n.VolumeIcon.icns\n.com.apple.timemachine.donotpresent\n\n# Directories potentially created on remote AFP share\n.AppleDB\n.AppleDesktop\nNetwork Trash Folder\nTemporary Items\n.apdisk\n\n### Windows ###\n# Windows thumbnail cache files\nThumbs.db\nehthumbs.db\nehthumbs_vista.db\n\n# Dump file\n*.stackdump\n\n# Folder config file\n[Dd]esktop.ini\n\n# Recycle Bin used on file shares\n$RECYCLE.BIN/\n\n# Windows Installer files\n*.cab\n*.msi\n*.msix\n*.msm\n*.msp\n\n# Windows shortcuts\n*.lnk\n\n### Gradle ###\n.gradle\n/build/\n\n# Ignore Gradle GUI config\ngradle-app.setting\n\n# Avoid ignoring Gradle wrapper jar file (.jar files are usually ignored)\n!gradle-wrapper.jar\n\n# Cache of project\n.gradletasknamecache\n\n# # Work around https://youtrack.jetbrains.com/issue/IDEA-116898\n# gradle/wrapper/gradle-wrapper.properties\n\n### Gradle Patch ###\n**/build/\n\n# End of https://www.gitignore.io/api/java,macos,linux,gradle,windows,eclipse,jetbrains+all,git\n\n# Include libraries\n!lib\n\n# default pre-commit config\n/.pre-commit-config.yaml\n\n# VSCode settins\n.vscode\n\n# python代码\n*.py"
        },
        {
          "name": ".markdownlint.yaml",
          "type": "blob",
          "size": 5.7236328125,
          "content": "# Example markdownlint YAML configuration with all properties set to their default value\n\n# Default state for all rules\ndefault: true\n\n# Path to configuration file to extend\nextends: null\n\n# MD001/heading-increment/header-increment - Heading levels should only increment by one level at a time\nMD001: true\n\n# MD002/first-heading-h1/first-header-h1 - First heading should be a top-level heading\nMD002:\n  # Heading level\n  level: 1\n\n# MD003/heading-style/header-style - Heading style\nMD003:\n  # Heading style\n  style: \"consistent\"\n\n# MD004/ul-style - Unordered list style\nMD004:\n  # List style\n  style: \"consistent\"\n\n# MD005/list-indent - Inconsistent indentation for list items at the same level\nMD005: true\n\n# MD006/ul-start-left - Consider starting bulleted lists at the beginning of the line\n#MD006: true\nMD006: false # MOR\n\n# MD007/ul-indent - Unordered list indentation\nMD007:\n  # Spaces for indent\n  indent: 2\n  # Whether to indent the first level of the list\n  start_indented: false\n\n# MD009/no-trailing-spaces - Trailing spaces\nMD009:\n  # Spaces for line break\n  br_spaces: 2\n  # Allow spaces for empty lines in list items\n  list_item_empty_lines: false\n  # Include unnecessary breaks\n  strict: false\n\n# MD010/no-hard-tabs - Hard tabs\nMD010:\n  # Include code blocks\n  code_blocks: true\n\n# MD011/no-reversed-links - Reversed link syntax\nMD011: true\n\n# MD012/no-multiple-blanks - Multiple consecutive blank lines\nMD012:\n  # Consecutive blank lines\n  maximum: 1\n\n# MD013/line-length - Line length\nMD013:\n  # Number of characters\n  line_length: 130\n  # Number of characters for headings\n  heading_line_length: 130\n  # Number of characters for code blocks\n  code_block_line_length: 130\n  # Include code blocks\n  code_blocks: true\n  # Include tables\n  tables: true\n  # Include headings\n  headings: true\n  # Include headings\n  headers: true\n  # Strict length checking\n  strict: false\n  # Stern length checking\n  stern: false\n\n# MD014/commands-show-output - Dollar signs used before commands without showing output\n#MD014: true\nMD014: false # MOR\n\n# MD018/no-missing-space-atx - No space after hash on atx style heading\nMD018: true\n\n# MD019/no-multiple-space-atx - Multiple spaces after hash on atx style heading\nMD019: true\n\n# MD020/no-missing-space-closed-atx - No space inside hashes on closed atx style heading\nMD020: true\n\n# MD021/no-multiple-space-closed-atx - Multiple spaces inside hashes on closed atx style heading\nMD021: true\n\n# MD022/blanks-around-headings/blanks-around-headers - Headings should be surrounded by blank lines\nMD022:\n  # Blank lines above heading\n  lines_above: 1\n  # Blank lines below heading\n  lines_below: 1\n\n# MD023/heading-start-left/header-start-left - Headings must start at the beginning of the line\nMD023: true\n\n# MD024/no-duplicate-heading/no-duplicate-header - Multiple headings with the same content\nMD024:\n  # Only check sibling headings\n  allow_different_nesting: false\n  # Only check sibling headings\n  siblings_only: false\n\n# MD025/single-title/single-h1 - Multiple top-level headings in the same document\nMD025:\n  # Heading level\n  level: 1\n  # RegExp for matching title in front matter\n  front_matter_title: \"^\\\\s*title\\\\s*[:=]\"\n\n# MD026/no-trailing-punctuation - Trailing punctuation in heading\n#MD026:\n#  # Punctuation characters\n#  punctuation: \".,;:!。，；：！\"\nMD026: false # MOR\n\n# MD027/no-multiple-space-blockquote - Multiple spaces after blockquote symbol\nMD027: true\n\n# MD028/no-blanks-blockquote - Blank line inside blockquote\nMD028: true\n\n# MD029/ol-prefix - Ordered list item prefix\nMD029:\n  # List style\n  style: \"one_or_ordered\"\n\n# MD030/list-marker-space - Spaces after list markers\nMD030:\n  # Spaces for single-line unordered list items\n  ul_single: 1\n  # Spaces for single-line ordered list items\n  ol_single: 1\n  # Spaces for multi-line unordered list items\n  ul_multi: 1\n  # Spaces for multi-line ordered list items\n  ol_multi: 1\n\n# MD031/blanks-around-fences - Fenced code blocks should be surrounded by blank lines\nMD031:\n  # Include list items\n  list_items: true\n\n# MD032/blanks-around-lists - Lists should be surrounded by blank lines\nMD032: true\n\n# MD033/no-inline-html - Inline HTML\nMD033:\n  # Allowed elements\n  allowed_elements: ['kbd']\n#  allowed_elements: []\n\n# MD034/no-bare-urls - Bare URL used\nMD034: true\n\n# MD035/hr-style - Horizontal rule style\nMD035:\n  # Horizontal rule style\n  style: \"consistent\"\n\n# MD036/no-emphasis-as-heading/no-emphasis-as-header - Emphasis used instead of a heading\nMD036:\n  # Punctuation characters\n  punctuation: \".,;:!?。，；：！？\"\n\n# MD037/no-space-in-emphasis - Spaces inside emphasis markers\nMD037: true\n\n# MD038/no-space-in-code - Spaces inside code span elements\nMD038: true\n\n# MD039/no-space-in-links - Spaces inside link text\nMD039: true\n\n# MD040/fenced-code-language - Fenced code blocks should have a language specified\nMD040: true\n\n# MD041/first-line-heading/first-line-h1 - First line in a file should be a top-level heading\nMD041: false # MOR\n#MD041: \n#  # Heading level\n#  level: 1\n#  # RegExp for matching title in front matter\n#    front_matter_title: \"^\\\\s*title\\\\s*[:=]\"\n\n# MD042/no-empty-links - No empty links\nMD042: true\n\n# MD043/required-headings/required-headers - Required heading structure\nMD043: false # MOR\n#MD043:\n#  # List of headings\n#  headings: []\n#  # List of headings\n#  headers: []\n\n# MD044/proper-names - Proper names should have the correct capitalization\nMD044:\n  # List of proper names\n  names: []\n  # Include code blocks\n  code_blocks: true\n\n# MD045/no-alt-text - Images should have alternate text (alt text)\nMD045: true\n\n# MD046/code-block-style - Code block style\nMD046:\n  # Block style\n  style: \"consistent\"\n\n# MD047/single-trailing-newline - Files should end with a single newline character\nMD047: true\n\n# MD048/code-fence-style - Code fence style\nMD048:\n  # Code fence syle\n  style: \"consistent\"\n"
        },
        {
          "name": ".pre-commit-config.yaml.dist",
          "type": "blob",
          "size": 2.1826171875,
          "content": "#\n# Git pre-commit framework config for Logisim-evolution project.\n#\n# See: https://github.com/logisim-evolution/logisim-evolution/blob/master/docs/developers.md\n# for more information and setup guide.\n#\n# See https://pre-commit.com for more information about pre-commit.\n# See https://pre-commit.com/hooks.html for more available hooks.\n#\nrepos:\n  - repo: https://github.com/pre-commit/pre-commit-hooks\n    rev: v4.0.1\n    hooks:\n      # Prevent giant files from being committed\n      - id: check-added-large-files\n        args: ['--maxkb=100']\n      # This hook checks yaml files for parseable syntax\n      - id: check-yaml\n      # Check for files that would conflict in case-insensitive filesystems\n      - id: check-case-conflict\n      # Ensures that (non-binary) executables have a shebang.\n      - id: check-executables-have-shebangs\n      # Check for files that contain merge conflict strings\n      - id: check-merge-conflict\n      # Prevent addition of new git submodules\n      - id: forbid-new-submodules\n      # Replaces or checks mixed line ending\n      - id: mixed-line-ending\n        args: ['--fix=no']\n\n  - repo: https://github.com/pre-commit/pygrep-hooks\n    rev: v1.9.0\n    hooks:\n      # Forbid files which have a UTF-8 Unicode replacement character\n      - id: text-unicode-replacement-char\n\n  - repo: https://github.com/jumanjihouse/pre-commit-hooks\n    rev: 2.1.5\n    hooks:\n      # Non-executable shell script filename ends in .sh\n      - id: script-must-have-extension\n\n  - repo: https://github.com/Lucas-C/pre-commit-hooks\n    rev: v1.1.10\n    hooks:\n      # Forbid files containing CRLF end-lines to be committed\n      - id: forbid-crlf\n        exclude: gradlew.bat\n\n  - repo: https://github.com/MarcinOrlowski/pre-commit-hooks\n    rev: 1.3.0\n    hooks:\n      # Checks modified Java files with Checkstyle linter.\n      - id: checkstyle-jar\n      # This hook trims trailing whitespace.\n      - id: trailing-whitespaces\n        exclude_types: ['xml','png','jpeg','svg','jar']\n        args: ['--markdown-linebreak-ext=md', '--fix=yes']\n      # Ensures that a file is either empty, or ends with one newline\n      - id: end-of-file\n        exclude_types: ['xml','png','jpeg','svg','jar']\n        args: ['--fix=yes']\n"
        },
        {
          "name": "CHANGES.md",
          "type": "blob",
          "size": 7.3115234375,
          "content": "[![Logisim-evolution](docs/img/logisim-evolution-logo.png)](https://github.com/logisim-evolution/logisim-evolution)\n\n# Changes #\n\n* @dev (????-??-??)\n  * Added Telnet component\n\n* v3.9.0 (2024-08-15)\n  * Updated Java requirement to Java 21.\n  * Added an autosave feature along with preferences for it.\n  * Added a new preference to allow the user to choose the action keys for many functions.\n  * Changed RAM default output from error to undefined [#1747]\n  * Added support for scanning 7-segment display on FPGA-boards\n  * Added first support for the openFpga toolchain for the ecp5 famely\n    Note that this is experimental for the moment, so use it at your own risk.\n  * Improved Chinese localization\n    * Changed language code from `cn` to `zh`.\n    * Chinese users (also including those who use other forks of Logisim\n      that are using `cn` language code) will be required to manually modify language settings.\n  * Fixed select port positioning on Multiplexer to be more consistent in some cases [#1734]\n  * Fixed appearance of LSe desktop icon [#1662]\n  * Update controlled buffer behavior to pass U and E inputs while enabled [#1642]\n  * Introduced user-defined color for components.\n  * Made component icons more uniform.\n  * Added architecture designation to macOS build.\n  * Fixed Karnaugh map color index bug.\n  * Attribute sheet now honors application color theme.\n  * Attribute sheet now displays HEX value of color properties.\n  * Added TTL 7487: 4-bit True/complement, zero/one elements\n  * Fixed Wrong HDL generation bug in the PortIO component and added the single bit version.\n  * Added TTL 74151: 8-line to 1 line data selector\n  * Added TTL 74153: dual 4-line to 1 line data selector\n  * Added TTL 74181: arithmetic logic unit\n  * Added TTL 74182: look-ahead carry generator\n  * Added TTL 74299: 8-bit universal shift register with three-state outputs\n  * Added TTL 74381: arithmetic logic unit\n  * Added TTL 74541: Octal buffers with three-state outputs\n  * Added TTL 74670: 4-by-4 register file with three-state outputs\n  * Added 16 bit floating point support for floating point arithmetic\n  * Fixed the problem of keys getting assigned to focusing on the cell of the table in \"properties\" section along with its actual intent\n\n* v3.8.0 (2022-10-02)\n  * Added reset value attribute to input pins\n  * Fixed boolean algebra minimal form bug\n  * Fixed random fill Rom bug\n  * Added TTL 74164, 74192 and 74193.\n  * Fixed off grid components bug that could lead to OutOfMemory error.\n  * Removed autolabler for tunnels, such that all get the same label in case of renaming.\n  * Fixed bug preventing TTL 7442, 7443 and 7444 from being placed on the circuit canvas.\n  * Sub-circuit can now be deleted with `DELETE` key, along with `BACKSPACE` used so far.\n  * Fixed `Simulate` -> `Timing Diagram` not opening when using \"Nimbus\" look and feel.\n  * Fixed pressing `CTRL`+`0` selecting the wrong element in the toolbar.\n  * Fixed TTL 7485 `7485HdlGenerator` generating wrong HDL type.\n  * Fixed TTL 74139, 7447 outputting inverted logic\n  * Fixed TTL 74175, CLR inverted\n  * Fixed TTL 7436 pin arrangement\n  * Added TTL 74138: 3-line to 8-line decoder\n  * Added TTL 74240, 74241, 74244: octal buffers with three-state outputs.\n  * Added TTL 74245: octal bus transceivers with three-state outputs.\n  * Moved TTL 74266 to 747266, correctly reimplemented 74266 with open-collector outputs.\n  * Fixed TTL 74165, correct order of inputs, load asynchronously\n  * Added TTL 74166: 8-bit parallel-to-serial shift register with clear\n  * Removed fixed LM_Licence setting\n\n* v3.7.2 (2021-11-09)\n  * Fixed Preferences/Window \"Reset window layout to defaults\" not doing much.\n  * Fixed Gradle builder failing to compile LSe if sources were not checked out from Git.\n  * You can now swap the placement of main canvas and component tree/properties pane.\n  * Several bug fixes.\n\n* v3.7.1 (2021-10-21)\n  * Logisim has now an internal font-chooser to comply to the font-values used.\n  * Several bug fixes.\n\n* v3.7.0 (2021-10-12)\n  * Reworked the slider component in the I/O extra library.\n  * Tick clock frequency display moved to left corner. It's also bigger and text color is configurable.\n  * Completely rewritten command line argument parser:\n    * All options have both short and long version now,\n    * All long arguments require `--` prefix i.e. `--version`,\n    * All short arguments require single `-` as prefix i.e. `-v`,\n    * `-clearprefs` is now `--clear-prefs`,\n    * `-clearprops` option is removed (use `--clear-prefs` instead),\n    * `-geom` is now `--geometry`,\n    * `-nosplash` is now `--no-splash` or `-ns`,\n    * `-sub` is now `--substitute` or `-s`,\n    * `-testvector` is now `--test-vector` or `-w`,\n    * `-test-fpga-implementation` is now `--test-fpga` or `-f`,\n    * `-questa` is removed.\n  * PortIO HDL generator and component bug-fixed.\n  * Cleanup/rework of the HDL-generation.\n  * Each circuit stores/restores the last board used for Download (handy for templates to give to students)\n  * Fixed startup crash related to incorrectly localized date format.\n  * Added a setting to select lower- or upper-case VHDL keywords.\n  * Added project export feature.\n  * Cleaned-up the written .circ file.\n\n* v3.6.1 (2021-09-27)\n  * Fixed bug in LED-array\n\n* v3.6.0 (2021-09-05)\n  * Introducing project logo.\n  * Fixed project loader to correctly handle hex values with a 1 in bit 63rd.\n  * Added TTL74x34 hex buffer gate.\n  * Made pins' tooltips more descriptive for 74161.\n  * Added new component LED Bar.\n  * Added 74157 and 74158: Quad 2-line to1-line selectors.\n  * Added option to configure canvas' and grid's colors.\n  * Added DIP switch state visual feedback for ON state.\n  * Augmented direction verbal labels (East, North, etc), with corresponding arrow symbols.\n  * Application title string now adds app name/version at the very end of the title.\n  * Added option to configure size of connection pin markers.\n  * Added TTL 74x139: dual 2-line to 4-lines decoders.\n  * Fixed missing port on DotMatrix.\n  * Combined `Select Location` from Plexers and `Gate Location` from Wiring to one attribute.\n    * Breaks backwards comparability for Transistors and Transmission Gates.\n      When opening old .circ files, they will have the default `Select Location` (\"Bottom/Left\").\n  * Replace DarkLaf with FlatLaf for better compatibility.\n  * Adds \"Rotate Left\" context menu action.\n  * Display \"Too few inputs for table\" if Karnaugh Map has only 1 input.\n  * HexDisplay is stays blank if no valid data is fed instead of showing \"H\" [#365].\n  * Project's \"Dirty\" (unsaved) state is now also reflected by adding `*` marker to the window title.\n  * Support for `AnimatedIcon` has been completely removed.\n  * Canvas Zoom controls new offer wider range of zoom and three level of granularity.\n  * Added predefined quick zoom buttons.\n  * Tons of code cleanup and internal improvements.\n  * Added duplicated component placement on same location refusal\n  * Fixed pin duplication on load in case a custom apearance is used for a circuit\n  * Added LED-array support for FPGA-boards\n  * Improved partial placement on FPGA-boards for multi-pin components\n  * Fixed several small bugs\n  * Each circuit will now remember, restore, and save:\n    * The last tick-frequency used for simulation\n    * The last download frequency used\n  * Removed obsolete VHDL-Architecture attribute from circuit\n\n* v3.5.0 (2021-05-25)\n  * Many code-cleanups, bug fixes and again the chronogram.\n"
        },
        {
          "name": "CITATION.cff",
          "type": "blob",
          "size": 2.2353515625,
          "content": "# This CITATION.cff file was generated with cffinit.\n# Visit https://bit.ly/cffinit to generate yours today!\n\ncff-version: 1.2.0\ntitle: Logisim-evolution\nmessage: >-\n  Logisim-evolution is educational software for designing\n  and simulating digital logic circuits.\ntype: software\nauthors:\n  - given-names: Carl\n    family-names: Burch\n    affiliation: Hendrix College\n  - given-names: Theo\n    family-names: Kluter\n    affiliation: Bern University of Applied Sciences\n  - given-names: Torsten\n    family-names: Maehne\n    affiliation: Bern University of Applied Sciences\n  - given-names: Kevin\n    family-names: Walsh\n    affiliation: College of the Holy Cross\n  - given-names: David H.\n    family-names: Hutchens\n    affiliation: Millersville University\n  - given-names: Marcin\n    family-names: Orlowski\n  - given-names: Tom\n    family-names: Niget\n    affiliation: Polytech Nice-Sophia\n  - given-names: Moshe\n    family-names: Berman\n    affiliation: Brooklyn College\n  - given-names: Theldo\n    affiliation: Pontifícia Universidade Católica de Minas Gerais\n    family-names: Franqueira\n    name-particle: Cruz\nidentifiers:\n  - type: url\n    value: >-\n      https://github.com/logisim-evolution/logisim-evolution/releases\n    description: The URL of the releases of the software.\nrepository-code: 'https://github.com/logisim-evolution/logisim-evolution'\nabstract: >\n  Logisim-evolution is educational software for designing\n  and simulating digital logic circuits. Logisim-evolution\n  is free, open-source, and cross-platform.\n\n\n  Project highlights:\n\n  - easy to use circuit designer,\n\n  - logic circuit simulations,\n\n  - chronogram (to see the evolution of signals in your\n  circuit),\n\n  - electronic board integration (schematics can be\n  simulated on real hardware),\n\n  - VHDL components (components behavior can be specified in\n  VHDL!),\n\n  - TCL/TK console (interfaces between the circuit and the\n  user),\n\n  - huge library of components (LEDs, TTLs, switches, SoCs),\n\n  - supports multiple languages,\n\n  - and more!\nkeywords:\n  - digital-simulation\n  - digital-logic\n  - digital-circuit\n  - education\n  - simulation\n  - logic\n  - fpga\n  - vhdl\n  - verilog\n  - circuit\nlicense: GPL-3.0\ncommit: 83c38fdb2f3002255e0bdd06b80035bf270b20a4\nversion: 3.9.0\ndate-released: '2024-08-15'\n"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 31.3369140625,
          "content": "# GNU GENERAL PUBLIC LICENSE\n\nVersion 3, 29 June 2007\n\nCopyright (C) 2007 [Free Software Foundation, Inc.](http://fsf.org/)\n\nEveryone is permitted to copy and distribute verbatim copies of this license\ndocument, but changing it is not allowed.\n\n## Preamble\n\nThe GNU General Public License is a free, copyleft license for software and\nother kinds of works.\n\nThe licenses for most software and other practical works are designed to take\naway your freedom to share and change the works. By contrast, the GNU General\nPublic License is intended to guarantee your freedom to share and change all\nversions of a program--to make sure it remains free software for all its users.\nWe, the Free Software Foundation, use the GNU General Public License for most\nof our software; it applies also to any other work released this way by its\nauthors. You can apply it to your programs, too.\n\nWhen we speak of free software, we are referring to freedom, not price. Our\nGeneral Public Licenses are designed to make sure that you have the freedom to\ndistribute copies of free software (and charge for them if you wish), that you\nreceive source code or can get it if you want it, that you can change the\nsoftware or use pieces of it in new free programs, and that you know you can do\nthese things.\n\nTo protect your rights, we need to prevent others from denying you these rights\nor asking you to surrender the rights. Therefore, you have certain\nresponsibilities if you distribute copies of the software, or if you modify it:\nresponsibilities to respect the freedom of others.\n\nFor example, if you distribute copies of such a program, whether gratis or for\na fee, you must pass on to the recipients the same freedoms that you received.\nYou must make sure that they, too, receive or can get the source code. And you\nmust show them these terms so they know their rights.\n\nDevelopers that use the GNU GPL protect your rights with two steps:\n\n  1. assert copyright on the software, and\n  2. offer you this License giving you legal permission to copy, distribute\n   and/or modify it.\n\nFor the developers' and authors' protection, the GPL clearly explains that\nthere is no warranty for this free software. For both users' and authors' sake,\nthe GPL requires that modified versions be marked as changed, so that their\nproblems will not be attributed erroneously to authors of previous versions.\n\nSome devices are designed to deny users access to install or run modified\nversions of the software inside them, although the manufacturer can do so. This\nis fundamentally incompatible with the aim of protecting users' freedom to\nchange the software. The systematic pattern of such abuse occurs in the area of\nproducts for individuals to use, which is precisely where it is most\nunacceptable. Therefore, we have designed this version of the GPL to prohibit\nthe practice for those products. If such problems arise substantially in other\ndomains, we stand ready to extend this provision to those domains in future\nversions of the GPL, as needed to protect the freedom of users.\n\nFinally, every program is threatened constantly by software patents. States\nshould not allow patents to restrict development and use of software on\ngeneral-purpose computers, but in those that do, we wish to avoid the special\ndanger that patents applied to a free program could make it effectively\nproprietary. To prevent this, the GPL assures that patents cannot be used to\nrender the program non-free.\n\nThe precise terms and conditions for copying, distribution and modification\nfollow.\n\n## TERMS AND CONDITIONS\n\n### 0. Definitions.\n\n*This License* refers to version 3 of the GNU General Public License.\n\n*Copyright* also means copyright-like laws that apply to other kinds of works,\nsuch as semiconductor masks.\n\n*The Program* refers to any copyrightable work licensed under this License.\nEach licensee is addressed as *you*. *Licensees* and *recipients* may be\nindividuals or organizations.\n\nTo *modify* a work means to copy from or adapt all or part of the work in a\nfashion requiring copyright permission, other than the making of an exact copy.\nThe resulting work is called a *modified version* of the earlier work or a work\n*based on* the earlier work.\n\nA *covered work* means either the unmodified Program or a work based on the\nProgram.\n\nTo *propagate* a work means to do anything with it that, without permission,\nwould make you directly or secondarily liable for infringement under applicable\ncopyright law, except executing it on a computer or modifying a private copy.\nPropagation includes copying, distribution (with or without modification),\nmaking available to the public, and in some countries other activities as well.\n\nTo *convey* a work means any kind of propagation that enables other parties to\nmake or receive copies. Mere interaction with a user through a computer\nnetwork, with no transfer of a copy, is not conveying.\n\nAn interactive user interface displays *Appropriate Legal Notices* to the\nextent that it includes a convenient and prominently visible feature that\n\n  1. displays an appropriate copyright notice, and\n  2. tells the user that there is no warranty for the work (except to the\n   extent that warranties are provided), that licensees may convey the work\n   under this License, and how to view a copy of this License.\n\nIf the interface presents a list of user commands or options, such as a menu, a\nprominent item in the list meets this criterion.\n\n### 1. Source Code.\n\nThe *source code* for a work means the preferred form of the work for making\nmodifications to it. *Object code* means any non-source form of a work.\n\nA *Standard Interface* means an interface that either is an official standard\ndefined by a recognized standards body, or, in the case of interfaces specified\nfor a particular programming language, one that is widely used among developers\nworking in that language.\n\nThe *System Libraries* of an executable work include anything, other than the\nwork as a whole, that (a) is included in the normal form of packaging a Major\nComponent, but which is not part of that Major Component, and (b) serves only\nto enable use of the work with that Major Component, or to implement a Standard\nInterface for which an implementation is available to the public in source code\nform. A *Major Component*, in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system (if any) on\nwhich the executable work runs, or a compiler used to produce the work, or an\nobject code interpreter used to run it.\n\nThe *Corresponding Source* for a work in object code form means all the source\ncode needed to generate, install, and (for an executable work) run the object\ncode and to modify the work, including scripts to control those activities.\nHowever, it does not include the work's System Libraries, or general-purpose\ntools or generally available free programs which are used unmodified in\nperforming those activities but which are not part of the work. For example,\nCorresponding Source includes interface definition files associated with source\nfiles for the work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require, such as\nby intimate data communication or control flow between those subprograms and\nother parts of the work.\n\nThe Corresponding Source need not include anything that users can regenerate\nautomatically from other parts of the Corresponding Source.\n\nThe Corresponding Source for a work in source code form is that same work.\n\n### 2. Basic Permissions.\n\nAll rights granted under this License are granted for the term of copyright on\nthe Program, and are irrevocable provided the stated conditions are met. This\nLicense explicitly affirms your unlimited permission to run the unmodified\nProgram. The output from running a covered work is covered by this License only\nif the output, given its content, constitutes a covered work. This License\nacknowledges your rights of fair use or other equivalent, as provided by\ncopyright law.\n\nYou may make, run and propagate covered works that you do not convey, without\nconditions so long as your license otherwise remains in force. You may convey\ncovered works to others for the sole purpose of having them make modifications\nexclusively for you, or provide you with facilities for running those works,\nprovided that you comply with the terms of this License in conveying all\nmaterial for which you do not control copyright. Those thus making or running\nthe covered works for you must do so exclusively on your behalf, under your\ndirection and control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\nConveying under any other circumstances is permitted solely under the\nconditions stated below. Sublicensing is not allowed; section 10 makes it\nunnecessary.\n\n### 3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\nNo covered work shall be deemed part of an effective technological measure\nunder any applicable law fulfilling obligations under article 11 of the WIPO\ncopyright treaty adopted on 20 December 1996, or similar laws prohibiting or\nrestricting circumvention of such measures.\n\nWhen you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention is\neffected by exercising rights under this License with respect to the covered\nwork, and you disclaim any intention to limit operation or modification of the\nwork as a means of enforcing, against the work's users, your or third parties'\nlegal rights to forbid circumvention of technological measures.\n\n### 4. Conveying Verbatim Copies.\n\nYou may convey verbatim copies of the Program's source code as you receive it,\nin any medium, provided that you conspicuously and appropriately publish on\neach copy an appropriate copyright notice; keep intact all notices stating that\nthis License and any non-permissive terms added in accord with section 7 apply\nto the code; keep intact all notices of the absence of any warranty; and give\nall recipients a copy of this License along with the Program.\n\nYou may charge any price or no price for each copy that you convey, and you may\noffer support or warranty protection for a fee.\n\n### 5. Conveying Modified Source Versions.\n\nYou may convey a work based on the Program, or the modifications to produce it\nfrom the Program, in the form of source code under the terms of section 4,\nprovided that you also meet all of these conditions:\n\n- a) The work must carry prominent notices stating that you modified it, and\n  giving a relevant date.\n- b) The work must carry prominent notices stating that it is released under\n  this License and any conditions added under section 7. This requirement\n  modifies the requirement in section 4 to *keep intact all notices*.\n- c) You must license the entire work, as a whole, under this License to\n  anyone who comes into possession of a copy. This License will therefore\n  apply, along with any applicable section 7 additional terms, to the whole\n  of the work, and all its parts, regardless of how they are packaged. This\n  License gives no permission to license the work in any other way, but it\n  does not invalidate such permission if you have separately received it.\n- d) If the work has interactive user interfaces, each must display\n  Appropriate Legal Notices; however, if the Program has interactive\n  interfaces that do not display Appropriate Legal Notices, your work need\n  not make them do so.\n\nA compilation of a covered work with other separate and independent works,\nwhich are not by their nature extensions of the covered work, and which are not\ncombined with it such as to form a larger program, in or on a volume of a\nstorage or distribution medium, is called an *aggregate* if the compilation and\nits resulting copyright are not used to limit the access or legal rights of the\ncompilation's users beyond what the individual works permit. Inclusion of a\ncovered work in an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n### 6. Conveying Non-Source Forms.\n\nYou may convey a covered work in object code form under the terms of sections 4\nand 5, provided that you also convey the machine-readable Corresponding Source\nunder the terms of this License, in one of these ways:\n\n- a) Convey the object code in, or embodied in, a physical product (including\n  a physical distribution medium), accompanied by the Corresponding Source\n  fixed on a durable physical medium customarily used for software\n  interchange.\n- b) Convey the object code in, or embodied in, a physical product (including\n  a physical distribution medium), accompanied by a written offer, valid for\n  at least three years and valid for as long as you offer spare parts or\n  customer support for that product model, to give anyone who possesses the\n  object code either\n  1. a copy of the Corresponding Source for all the software in the product\n     that is covered by this License, on a durable physical medium\n     customarily used for software interchange, for a price no more than your\n     reasonable cost of physically performing this conveying of source, or\n  2. access to copy the Corresponding Source from a network server at no\n     charge.\n- c) Convey individual copies of the object code with a copy of the written\n  offer to provide the Corresponding Source. This alternative is allowed only\n  occasionally and noncommercially, and only if you received the object code\n  with such an offer, in accord with subsection 6b.\n- d) Convey the object code by offering access from a designated place\n  (gratis or for a charge), and offer equivalent access to the Corresponding\n  Source in the same way through the same place at no further charge. You\n  need not require recipients to copy the Corresponding Source along with the\n  object code. If the place to copy the object code is a network server, the\n  Corresponding Source may be on a different server operated by you or a\n  third party) that supports equivalent copying facilities, provided you\n  maintain clear directions next to the object code saying where to find the\n  Corresponding Source. Regardless of what server hosts the Corresponding\n  Source, you remain obligated to ensure that it is available for as long as\n  needed to satisfy these requirements.\n- e) Convey the object code using peer-to-peer transmission, provided you\n  inform other peers where the object code and Corresponding Source of the\n  work are being offered to the general public at no charge under subsection\n  6d.\n\nA separable portion of the object code, whose source code is excluded from the\nCorresponding Source as a System Library, need not be included in conveying the\nobject code work.\n\nA *User Product* is either\n\n  1. a *consumer product*, which means any tangible personal property which is\n   normally used for personal, family, or household purposes, or\n  2. anything designed or sold for incorporation into a dwelling.\n\nIn determining whether a product is a consumer product, doubtful cases shall be\nresolved in favor of coverage. For a particular product received by a\nparticular user, *normally used* refers to a typical or common use of that\nclass of product, regardless of the status of the particular user or of the way\nin which the particular user actually uses, or expects or is expected to use,\nthe product. A product is a consumer product regardless of whether the product\nhas substantial commercial, industrial or non-consumer uses, unless such uses\nrepresent the only significant mode of use of the product.\n\n*Installation Information* for a User Product means any methods, procedures,\nauthorization keys, or other information required to install and execute\nmodified versions of a covered work in that User Product from a modified\nversion of its Corresponding Source. The information must suffice to ensure\nthat the continued functioning of the modified object code is in no case\nprevented or interfered with solely because modification has been made.\n\nIf you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as part of a\ntransaction in which the right of possession and use of the User Product is\ntransferred to the recipient in perpetuity or for a fixed term (regardless of\nhow the transaction is characterized), the Corresponding Source conveyed under\nthis section must be accompanied by the Installation Information. But this\nrequirement does not apply if neither you nor any third party retains the\nability to install modified object code on the User Product (for example, the\nwork has been installed in ROM).\n\nThe requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates for a\nwork that has been modified or installed by the recipient, or for the User\nProduct in which it has been modified or installed. Access to a network may be\ndenied when the modification itself materially and adversely affects the\noperation of the network or violates the rules and protocols for communication\nacross the network.\n\nCorresponding Source conveyed, and Installation Information provided, in accord\nwith this section must be in a format that is publicly documented (and with an\nimplementation available to the public in source code form), and must require\nno special password or key for unpacking, reading or copying.\n\n### 7. Additional Terms.\n\n*Additional permissions* are terms that supplement the terms of this License by\nmaking exceptions from one or more of its conditions. Additional permissions\nthat are applicable to the entire Program shall be treated as though they were\nincluded in this License, to the extent that they are valid under applicable\nlaw. If additional permissions apply only to part of the Program, that part may\nbe used separately under those permissions, but the entire Program remains\ngoverned by this License without regard to the additional permissions.\n\nWhen you convey a copy of a covered work, you may at your option remove any\nadditional permissions from that copy, or from any part of it. (Additional\npermissions may be written to require their own removal in certain cases when\nyou modify the work.) You may place additional permissions on material, added\nby you to a covered work, for which you have or can give appropriate copyright\npermission.\n\nNotwithstanding any other provision of this License, for material you add to a\ncovered work, you may (if authorized by the copyright holders of that material)\nsupplement the terms of this License with terms:\n\n- a) Disclaiming warranty or limiting liability differently from the terms of\n  sections 15 and 16 of this License; or\n- b) Requiring preservation of specified reasonable legal notices or author\n  attributions in that material or in the Appropriate Legal Notices displayed\n  by works containing it; or\n- c) Prohibiting misrepresentation of the origin of that material, or\n  requiring that modified versions of such material be marked in reasonable\n  ways as different from the original version; or\n- d) Limiting the use for publicity purposes of names of licensors or authors\n  of the material; or\n- e) Declining to grant rights under trademark law for use of some trade\n  names, trademarks, or service marks; or\n- f) Requiring indemnification of licensors and authors of that material by\n  anyone who conveys the material (or modified versions of it) with\n  contractual assumptions of liability to the recipient, for any liability\n  that these contractual assumptions directly impose on those licensors and\n  authors.\n\nAll other non-permissive additional terms are considered *further restrictions*\nwithin the meaning of section 10. If the Program as you received it, or any\npart of it, contains a notice stating that it is governed by this License along\nwith a term that is a further restriction, you may remove that term. If a\nlicense document contains a further restriction but permits relicensing or\nconveying under this License, you may add to a covered work material governed\nby the terms of that license document, provided that the further restriction\ndoes not survive such relicensing or conveying.\n\nIf you add terms to a covered work in accord with this section, you must place,\nin the relevant source files, a statement of the additional terms that apply to\nthose files, or a notice indicating where to find the applicable terms.\n\nAdditional terms, permissive or non-permissive, may be stated in the form of a\nseparately written license, or stated as exceptions; the above requirements\napply either way.\n\n### 8. Termination.\n\nYou may not propagate or modify a covered work except as expressly provided\nunder this License. Any attempt otherwise to propagate or modify it is void,\nand will automatically terminate your rights under this License (including any\npatent licenses granted under the third paragraph of section 11).\n\nHowever, if you cease all violation of this License, then your license from a\nparticular copyright holder is reinstated\n\n- a) provisionally, unless and until the copyright holder explicitly and\n  finally terminates your license, and\n- b) permanently, if the copyright holder fails to notify you of the\n  violation by some reasonable means prior to 60 days after the cessation.\n\nMoreover, your license from a particular copyright holder is reinstated\npermanently if the copyright holder notifies you of the violation by some\nreasonable means, this is the first time you have received notice of violation\nof this License (for any work) from that copyright holder, and you cure the\nviolation prior to 30 days after your receipt of the notice.\n\nTermination of your rights under this section does not terminate the licenses\nof parties who have received copies or rights from you under this License. If\nyour rights have been terminated and not permanently reinstated, you do not\nqualify to receive new licenses for the same material under section 10.\n\n### 9. Acceptance Not Required for Having Copies.\n\nYou are not required to accept this License in order to receive or run a copy\nof the Program. Ancillary propagation of a covered work occurring solely as a\nconsequence of using peer-to-peer transmission to receive a copy likewise does\nnot require acceptance. However, nothing other than this License grants you\npermission to propagate or modify any covered work. These actions infringe\ncopyright if you do not accept this License. Therefore, by modifying or\npropagating a covered work, you indicate your acceptance of this License to do\nso.\n\n### 10. Automatic Licensing of Downstream Recipients.\n\nEach time you convey a covered work, the recipient automatically receives a\nlicense from the original licensors, to run, modify and propagate that work,\nsubject to this License. You are not responsible for enforcing compliance by\nthird parties with this License.\n\nAn *entity transaction* is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations. If propagation of a covered work\nresults from an entity transaction, each party to that transaction who receives\na copy of the work also receives whatever licenses to the work the party's\npredecessor in interest had or could give under the previous paragraph, plus a\nright to possession of the Corresponding Source of the work from the\npredecessor in interest, if the predecessor has it or can get it with\nreasonable efforts.\n\nYou may not impose any further restrictions on the exercise of the rights\ngranted or affirmed under this License. For example, you may not impose a\nlicense fee, royalty, or other charge for exercise of rights granted under this\nLicense, and you may not initiate litigation (including a cross-claim or\ncounterclaim in a lawsuit) alleging that any patent claim is infringed by\nmaking, using, selling, offering for sale, or importing the Program or any\nportion of it.\n\n### 11. Patents.\n\nA *contributor* is a copyright holder who authorizes use under this License of\nthe Program or a work on which the Program is based. The work thus licensed is\ncalled the contributor's *contributor version*.\n\nA contributor's *essential patent claims* are all patent claims owned or\ncontrolled by the contributor, whether already acquired or hereafter acquired,\nthat would be infringed by some manner, permitted by this License, of making,\nusing, or selling its contributor version, but do not include claims that would\nbe infringed only as a consequence of further modification of the contributor\nversion. For purposes of this definition, *control* includes the right to grant\npatent sublicenses in a manner consistent with the requirements of this\nLicense.\n\nEach contributor grants you a non-exclusive, worldwide, royalty-free patent\nlicense under the contributor's essential patent claims, to make, use, sell,\noffer for sale, import and otherwise run, modify and propagate the contents of\nits contributor version.\n\nIn the following three paragraphs, a *patent license* is any express agreement\nor commitment, however denominated, not to enforce a patent (such as an express\npermission to practice a patent or covenant not to sue for patent\ninfringement). To *grant* such a patent license to a party means to make such\nan agreement or commitment not to enforce a patent against the party.\n\nIf you convey a covered work, knowingly relying on a patent license, and the\nCorresponding Source of the work is not available for anyone to copy, free of\ncharge and under the terms of this License, through a publicly available\nnetwork server or other readily accessible means, then you must either\n\n  1. cause the Corresponding Source to be so available, or\n  2. arrange to deprive yourself of the benefit of the patent license for this\n   particular work, or\n  3. arrange, in a manner consistent with the requirements of this License, to\n   extend the patent license to downstream recipients.\n\n*Knowingly relying* means you have actual knowledge that, but for the patent\nlicense, your conveying the covered work in a country, or your recipient's use\nof the covered work in a country, would infringe one or more identifiable\npatents in that country that you have reason to believe are valid.\n\nIf, pursuant to or in connection with a single transaction or arrangement, you\nconvey, or propagate by procuring conveyance of, a covered work, and grant a\npatent license to some of the parties receiving the covered work authorizing\nthem to use, propagate, modify or convey a specific copy of the covered work,\nthen the patent license you grant is automatically extended to all recipients\nof the covered work and works based on it.\n\nA patent license is *discriminatory* if it does not include within the scope of\nits coverage, prohibits the exercise of, or is conditioned on the non-exercise\nof one or more of the rights that are specifically granted under this License.\nYou may not convey a covered work if you are a party to an arrangement with a\nthird party that is in the business of distributing software, under which you\nmake payment to the third party based on the extent of your activity of\nconveying the work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory patent\nlicense\n\n- a) in connection with copies of the covered work conveyed by you (or copies\n  made from those copies), or\n- b) primarily for and in connection with specific products or compilations\n  that contain the covered work, unless you entered into that arrangement, or\n  that patent license was granted, prior to 28 March 2007.\n\nNothing in this License shall be construed as excluding or limiting any implied\nlicense or other defenses to infringement that may otherwise be available to\nyou under applicable patent law.\n\n### 12. No Surrender of Others' Freedom.\n\nIf conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not excuse\nyou from the conditions of this License. If you cannot convey a covered work so\nas to satisfy simultaneously your obligations under this License and any other\npertinent obligations, then as a consequence you may not convey it at all. For\nexample, if you agree to terms that obligate you to collect a royalty for\nfurther conveying from those to whom you convey the Program, the only way you\ncould satisfy both those terms and this License would be to refrain entirely\nfrom conveying the Program.\n\n### 13. Use with the GNU Affero General Public License.\n\nNotwithstanding any other provision of this License, you have permission to\nlink or combine any covered work with a work licensed under version 3 of the\nGNU Affero General Public License into a single combined work, and to convey\nthe resulting work. The terms of this License will continue to apply to the\npart which is the covered work, but the special requirements of the GNU Affero\nGeneral Public License, section 13, concerning interaction through a network\nwill apply to the combination as such.\n\n### 14. Revised Versions of this License.\n\nThe Free Software Foundation may publish revised and/or new versions of the GNU\nGeneral Public License from time to time. Such new versions will be similar in\nspirit to the present version, but may differ in detail to address new problems\nor concerns.\n\nEach version is given a distinguishing version number. If the Program specifies\nthat a certain numbered version of the GNU General Public License *or any later\nversion* applies to it, you have the option of following the terms and\nconditions either of that numbered version or of any later version published by\nthe Free Software Foundation. If the Program does not specify a version number\nof the GNU General Public License, you may choose any version ever published by\nthe Free Software Foundation.\n\nIf the Program specifies that a proxy can decide which future versions of the\nGNU General Public License can be used, that proxy's public statement of\nacceptance of a version permanently authorizes you to choose that version for\nthe Program.\n\nLater license versions may give you additional or different permissions.\nHowever, no additional obligations are imposed on any author or copyright\nholder as a result of your choosing to follow a later version.\n\n### 15. Disclaimer of Warranty.\n\nTHERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE\nLAW. EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER\nPARTIES PROVIDE THE PROGRAM *AS IS* WITHOUT WARRANTY OF ANY KIND, EITHER\nEXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE ENTIRE RISK AS TO THE\nQUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU. SHOULD THE PROGRAM PROVE\nDEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR\nCORRECTION.\n\n### 16. Limitation of Liability.\n\nIN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY\nCOPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS THE PROGRAM AS\nPERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL,\nINCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE\nTHE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED\nINACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE\nPROGRAM TO OPERATE WITH ANY OTHER PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY\nHAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.\n\n### 17. Interpretation of Sections 15 and 16.\n\nIf the disclaimer of warranty and limitation of liability provided above cannot\nbe given local legal effect according to their terms, reviewing courts shall\napply local law that most closely approximates an absolute waiver of all civil\nliability in connection with the Program, unless a warranty or assumption of\nliability accompanies a copy of the Program in return for a fee.\n\n## END OF TERMS AND CONDITIONS\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 7.7998046875,
          "content": "[![Logisim-evolution](docs/img/logisim-evolution-logo.png)](https://github.com/logisim-evolution/logisim-evolution)\n\n---\n\n# Logisim-evolution #\n\n* **Table of contents**\n  * [Features](#features)\n  * [Requirements](#requirements)\n  * **[Downloads](#download)**\n    * [Package Manager](#package-manager)\n    * [Nightly builds (unstable)](#nightly-builds)\n  * [Pictures of Logisim-evolution](docs/pics.md)\n  * [More Information](docs/docs.md)\n  * [Bug reports & feature requests](https://github.com/logisim-evolution/logisim-evolution/issues)\n  * [For developers](docs/developers.md)\n  * [How to contribute](docs/developers.md#how-to-contribute)\n  * [Credits](docs/credits.md)\n\n---\n\n## Features ##\n\n`Logisim-evolution` is educational software for designing and simulating digital logic circuits.\n`Logisim-evolution` is [free](#license), [open-source](https://github.com/logisim-evolution), and [cross-platform](#requirements).\n\nProject highlights:\n\n* easy to use circuit designer,\n* logic circuit simulations,\n* chronogram (to see the evolution of signals in your circuit),\n* electronic board integration (schematics can be simulated on real hardware),\n* VHDL components (components behavior can be specified in VHDL!),\n* TCL/TK console (interfaces between the circuit and the user),\n* huge library of components (LEDs, TTLs, switches, SoCs),\n* supports [multiple languages](docs/docs.md#translations),\n* and more!\n\n[![Logisim-evolution](docs/img/logisim-evolution-01-small.png)](docs/pics.md)\n[![Logisim-evolution](docs/img/logisim-evolution-02-small.png)](docs/pics.md)\n[![Logisim-evolution](docs/img/logisim-evolution-03-small.png)](docs/pics.md)\n\n---\n\n## Requirements ##\n\n`Logisim-evolution` is a Java application; therefore, it can run on any operating system supporting the Java runtime enviroment.\nIt requires [Java 21 (or newer)](https://adoptium.net/temurin/releases/).\n\n---\n\n## Download ###\n\n`Logisim-evolution` is available for\n[download in compiled form](https://github.com/logisim-evolution/logisim-evolution/releases)\nwith ready to use installable packages for Windows, macOS, and Linux\nor in [source code form](https://github.com/logisim-evolution), which you can [build yourself](docs/developers.md).\n\nThe following [platform specific packages](https://github.com/logisim-evolution/logisim-evolution/releases)\ninclude the Java runtime and do not require it to be installed separately:\n\n* `logisim-evolution_<version>-1_amd64.deb`: Debian package (also suitable for Ubuntu and derivatives),\n* `logisim-evolution-<version>-1.x86_64.rpm`: Package for Fedora/Redhat/CentOS/SuSE Linux distributions,\n* `logisim-evolution-<version>_amd64.snap`: The [Snap](https://snapcraft.io/docs) archive for all\n  supported Linux distributions (also available in [Snapcraft store](https://snapcraft.io/logisim-evolution)),\n* `logisim-evolution-<version>-aarch64.msi`: Installer package for Microsoft Windows for Arm processors,\n* `logisim-evolution-<version>-amd64.msi`: Installer package for Microsoft Windows for Intel processors,\n* `logisim-evolution-<version>-aarch64.dmg`: macOS package for Apple processors,\n* `logisim-evolution-<version>-x86_64.dmg`: macOS package for Intel processors (also runs on Apple processors in simulation).\n\nThe Java JAR [`logisim-evolution-<version>-all.jar`](https://github.com/logisim-evolution/logisim-evolution/releases)\nis also available and can be run on any system with a supported Java runtime installed.\n\n[![Get it from the Snap Store](https://snapcraft.io/static/images/badges/en/snap-store-black.svg)](https://snapcraft.io/logisim-evolution)\n\n---\n\n**Note for macOS users**:\nThe Logisim-evolution.app is not signed with an Apple approved certificate.\n\nWhen launching the application for the first time, you will have to start it via the \"Open\" entry in the\napplication icon's context menu in the macOS Finder. This is either done by clicking the application\nicon with the right mouse button or holding down <kbd>CTRL</kbd> while clicking the icon with the\nleft mouse button. This will open a panel asking you to verify that you wish to launch the application.\nOn more recent versions of macOS, the panel will only give you a choice of moving the app to the trash or Cancel.\nOn those systems, click Cancel, open `System Preferences`, and select `Security & Privacy`.\nThere you may need to click the lock to make changes and authenticate with an administrative acccount.\nIt should show an option to open the app.\nSee [Safely open apps on your Mac](https://support.apple.com/en-us/HT202491) for more information.\n\nDepending on your security settings, you may also get a panel asking if you wish to allow it to accept\nnetwork connections. You can click \"Deny\" as we do not need network access currently nor we do request any.\n\n### Package Manager ###\n\n`Logisim-evolution` is available from a bunch of [package managers](https://repology.org/project/logisim-evolution/versions).\nNote that these (except for Snap) are not maintained by the core developers.\nIf you should observe a bug in Logisim-evolution while using one of these packages,\nfirst make sure that it can be reproduced with the most recent official packages\n[provided through this repository](https://github.com/logisim-evolution/logisim-evolution/releases)\nand ideally the HEAD of our [main branch](https://github.com/logisim-evolution/logisim-evolution/tree/main)\nbefore [creating an issue](https://github.com/logisim-evolution/logisim-evolution/issues) on\nthe official [Logisim-evolution repository](https://github.com/logisim-evolution/logisim-evolution).\nOtherwise, report the issue to the package maintainer!\n\n* [Snap](https://snapcraft.io/logisim-evolution) (`snap install logisim-evolution`)\n* [Flathub](https://flathub.org/apps/details/com.github.reds.LogisimEvolution) (`flatpak install flathub com.github.reds.LogisimEvolution`)\n* [Homebrew](https://formulae.brew.sh/cask/logisim-evolution) (`brew install --cask logisim-evolution`)\n* [MacPorts](https://ports.macports.org/port/logisim-evolution/details/) (`port install logisim-evolution`)\n* [Chocolatey](https://community.chocolatey.org/packages/logisim-evolution) (`choco install logisim-evolution`)\n* [winget](https://winget.run/pkg/logisim-evolution/logisim-evolution) (`winget install -e --id logisim-evolution.logisim-evolution`)\n* [Arch User Repository](https://aur.archlinux.org/packages/logisim-evolution)\n* [nixpkgs](https://search.nixos.org/packages?channel=24.05&show=logisim-evolution)(`nix-shell -p logisim-evolution`)\n\n### Nightly builds ###\n\nWe also offer builds based on the current state of the\n[main](https://github.com/logisim-evolution/logisim-evolution/tree/main) branch.\nIf the main branch has been changed,\na new `Nightly build` is created at midnight [UTC](https://en.wikipedia.org/wiki/Coordinated_Universal_Time).\n\nNote that these builds may be unstable since the main branch is a work in progress.\n\nTo get nightly downloads, please\n[click here](https://github.com/logisim-evolution/logisim-evolution/actions/workflows/nightly.yml)\nand browse to the last successful build from the `Nightly` worker.\nNightly runs each night, but terminates quickly and does not produce new packages if nothing has changed since the last run.\nFind the most recent run that contains the packages.\nThe time Nightly took to run, given near the clock icon on the right, helps your search.\nNote that due to GitHub internals, all files are provided as ZIP archives.\nYou must unzip the downloaded file to get the installation package.\n\nPlease share your experience in [Discussions](https://github.com/logisim-evolution/logisim-evolution/discussions)\nor [open a ticket](https://github.com/logisim-evolution/logisim-evolution/issues)\nif you found a bug or have suggestions for improvement.\n\n---\n\n## License ##\n\n* `Logisim-evolution` is copyrighted ©2001-2024 by Logisim-evolution [developers](docs/credits.md).\n* This is free software licensed under [GNU General Public License v3](https://www.gnu.org/licenses/gpl-3.0.en.html).\n"
        },
        {
          "name": "artwork",
          "type": "tree",
          "content": null
        },
        {
          "name": "boards_model",
          "type": "tree",
          "content": null
        },
        {
          "name": "build.gradle.kts",
          "type": "blob",
          "size": 24.5576171875,
          "content": "/*\n * Logisim-evolution - digital logic design tool and simulator\n * Copyright by the Logisim-evolution developers\n *\n * https://github.com/logisim-evolution/\n *\n * This is free software released under GNU GPLv3 license\n */\n\nimport org.gradle.internal.os.OperatingSystem\nimport java.text.SimpleDateFormat\nimport java.util.Date\n\nplugins {\n  checkstyle\n  id(\"com.github.ben-manes.versions\") version \"0.51.0\"\n  java\n  application\n  id(\"com.gradleup.shadow\") version \"8.3.5\"\n  id(\"org.sonarqube\") version \"6.0.1.5171\"\n}\n\nrepositories {\n  mavenCentral()\n}\n\napplication {\n  mainClass.set(\"com.cburch.logisim.Main\")\n}\n\ndependencies {\n  implementation(\"org.hamcrest:hamcrest:3.0\")\n  implementation(\"javax.help:javahelp:2.0.05\")\n  implementation(\"com.fifesoft:rsyntaxtextarea:3.5.3\")\n  implementation(\"net.sf.nimrod:nimrod-laf:1.2\")\n  implementation(\"org.drjekyll:colorpicker:2.0.1\")\n  implementation(\"at.swimmesberger:swingx-core:1.6.8\")\n  implementation(\"org.scijava:swing-checkbox-tree:1.0.2\")\n  implementation(\"org.slf4j:slf4j-api:2.0.16\")\n  implementation(\"org.slf4j:slf4j-simple:2.0.16\")\n  implementation(\"com.formdev:flatlaf:3.5.4\")\n  implementation(\"commons-cli:commons-cli:1.9.0\")\n  implementation(\"org.apache.commons:commons-text:1.13.0\")\n\n  // NOTE: Do not upgrade the jflex version. Later versions do not work.\n  compileOnly(\"de.jflex:jflex:1.4.1\")\n\n  // NOTE: Be aware of reported issues with Eclipse and Batik\n  // See: https://github.com/logisim-evolution/logisim-evolution/issues/709\n  // implementation(\"org.apache.xmlgraphics:batik-swing:1.14\")\n\n  testImplementation(platform(\"org.junit:junit-bom:5.11.4\"))\n  testImplementation(\"org.junit.jupiter:junit-jupiter:5.11.4\")\n  testImplementation(\"org.mockito:mockito-junit-jupiter:5.15.2\")\n  testRuntimeOnly(\"org.junit.platform:junit-platform-launcher\")\n}\n\n/**\n * Strings used as keys to reference shared variables (via `ext.*`)\n */\nval APP_DIR_NAME = \"appDirName\"\nval APP_VERSION = \"appVersion\"\nval APP_VERSION_SHORT = \"appVersionShort\"\nval APP_URL = \"appUrl\"\nval BUILD_DIR = \"buildDir\"\nval JPACKAGE = \"jpackage\"\nval LIBS_DIR = \"libsDir\"\nval LINUX_PARAMS = \"linuxParameters\"\nval OS_ARCH = \"osArch\"\nval PACKAGE_INPUT_DIR = \"packageInputDir\"\nval SHADOW_JAR_FILE_NAME = \"shadowJarFilename\"\nval SHARED_PARAMS = \"sharedParameters\"\nval SUPPORT_DIR = \"supportDir\"\nval TARGET_DIR = \"targetDir\"\nval TARGET_FILE_PATH_BASE = \"targetFilePathBase\"\nval TARGET_FILE_PATH_BASE_SHORT = \"targetFilePathBaseShort\"\nval UPPERCASE_PROJECT_NAME = \"uppercaseProjectName\"\n\njava {\n  sourceCompatibility = JavaVersion.VERSION_21\n  targetCompatibility = JavaVersion.VERSION_21\n}\n\n/**\n * Setting up all shared vars and parameters.\n */\nextra.apply {\n  // NOTE: optional suffix is prefixed with `-` (because of how LogisimVersion class parses it), which\n  // I remove here because `jpackage` tool does not like it when used to build the RPM package.\n  // Do NOT use `project.version` instead.\n  val appVersion = (project.version as String).replace(\"-\", \"\")\n  set(APP_VERSION, appVersion)\n  logger.info(\"appVersion: ${appVersion}\")\n\n  val appUrl = findProperty(\"url\")\n  set(APP_URL, appUrl)\n  logger.info(\"appUrl: ${appUrl}\")\n\n  // Short (with suffix removed) version string, i.e. for \"3.6.0beta1\", short form is \"3.6.0\".\n  // This is used by createApp and createMsi as version numbering is pretty strict on macOS and Windows.\n  // Do NOT use `project.version` instead.\n  val appVersionShort = (project.version as String).split('-')[0]\n  set(APP_VERSION_SHORT, appVersionShort)\n  logger.info(\"appVersionShort: ${appVersionShort}\")\n\n  // Architecture used for build\n  val osArch = System.getProperty(\"os.arch\") ?: throw GradleException(\"os.arch is not set\")\n  set(OS_ARCH, osArch)\n\n  // Build Directory\n  val buildDir = getLayout().getBuildDirectory().get().asFile.toString()\n  set(BUILD_DIR, buildDir)\n\n  // Destination folder where packages are stored.\n  val targetDir=\"${buildDir}/dist\"\n  set(TARGET_DIR, targetDir)\n\n  // JAR folder.\n  val libsDir=\"${buildDir}/libs\"\n  set(LIBS_DIR, libsDir)\n\n  // PackageInput folder that hold the shadowJar\n  val packageInputDir=\"${buildDir}/packageInput\"\n  set(PACKAGE_INPUT_DIR, packageInputDir)\n\n  // The root dir for jpackage extra files.\n  val supportDir=\"${projectDir}/support/jpackage\"\n  set(SUPPORT_DIR, supportDir)\n\n  // Base name of produced artifacts. Suffixes will be added later by relevant tasks.\n  val baseFilename = \"${project.name}-${appVersion}\"\n  set(TARGET_FILE_PATH_BASE, \"${targetDir}/${baseFilename}\")\n  logger.debug(\"targetFilePathBase: \\\"${targetDir}/${baseFilename}\\\"\")\n\n  val baseFilenameShort = \"${project.name}-${appVersionShort}\"\n  set(TARGET_FILE_PATH_BASE_SHORT, \"${targetDir}/${baseFilenameShort}\")\n  logger.debug(\"targetFilePathBaseShort: \\\"${targetDir}/${baseFilenameShort}\\\"\")\n\n  // Name of application shadowJar file.\n  val shadowJarFilename = \"${baseFilename}-all.jar\"\n  set(SHADOW_JAR_FILE_NAME, shadowJarFilename)\n  logger.debug(\"shadowJarFilename: \\\"${shadowJarFilename}\\\"\")\n\n  // JDK/jpackage vars\n  val javaHome = System.getProperty(\"java.home\") ?: throw GradleException(\"java.home is not set\")\n  val jpackage = \"${javaHome}/bin/jpackage\"\n  set(JPACKAGE, jpackage)\n\n  // Copyrights note.\n  val copyrights = \"Copyright ©2001–${SimpleDateFormat(\"yyyy\").format(Date())} ${project.name} developers\"\n\n  // Platform-agnostic jpackage parameters shared across all the builds.\n  var params = listOf(\n      jpackage,\n      // NOTE: we cannot use --app-version as part of platform agnostic set as i.e. both macOS and\n      // Windows packages do not allow use of any suffixes like \"-dev\" etc, so --app-version is set\n      // in these builders separately.\n      \"--input\", packageInputDir,\n      \"--main-class\", \"com.cburch.logisim.Main\",\n      \"--main-jar\", shadowJarFilename,\n      \"--copyright\", copyrights,\n      \"--description\", \"Digital logic design tool and simulator\",\n      \"--vendor\", \"${project.name} developers\",\n  )\n  if (logger.isDebugEnabled()) {\n    params += listOf(\"--verbose\")\n  }\n  set(SHARED_PARAMS, params)\n\n  // Linux (DEB/RPM) specific settings for jpackage.\n  val linuxParams = params + listOf(\n      \"--name\", project.name,\n      \"--dest\", targetDir,\n      \"--app-version\", appVersion,\n      \"--file-associations\", \"${supportDir}/linux/file.jpackage\",\n      \"--icon\", \"${supportDir}/linux/logisim-icon-128.png\",\n      \"--install-dir\", \"/opt\",\n      \"--linux-shortcut\"\n  )\n  set(LINUX_PARAMS, linuxParams)\n\n  // All the macOS specific stuff.\n  val uppercaseProjectName = project.name.replaceFirstChar { it.uppercase() }.trim()\n  set(UPPERCASE_PROJECT_NAME, uppercaseProjectName)\n  set(APP_DIR_NAME, \"${buildDir}/macOS-${osArch}/${uppercaseProjectName}.app\")\n}\n\njava {\n  sourceSets[\"main\"].java {\n    val buildDir = getLayout().getBuildDirectory().get().asFile\n    srcDir(\"${buildDir}/generated/logisim/java\")\n    srcDir(\"${buildDir}/generated/sources/srcgen\")\n  }\n}\n\ntask<Jar>(\"sourcesJar\") {\n  group = \"build\"\n  description = \"Creates a JAR archive with project sources.\"\n  dependsOn.add(\"classes\")\n  archiveClassifier.set(\"src\")\n\n  from(sourceSets.main.get().allSource)\n  archiveVersion.set(ext.get(APP_VERSION) as String)\n}\n\n\n\n/**\n * Helper method that simplifies runining external commands using ProcessBuilder().\n * Will throw GradleException on command failure (non-zero return code).\n *\n * params: List of strings which signifies the external program file to be invoked and its arguments (if any).\n * exMsg: Optional error message to be used with thrown exception on failure.\n *\n * Returns content of invoked app's stdout\n */\nfun runCommand(params: List<String>, exceptionMsg: String): String {\n  val procBuilder = ProcessBuilder()\n  procBuilder\n    .redirectOutput(ProcessBuilder.Redirect.PIPE)\n    .redirectError(ProcessBuilder.Redirect.PIPE)\n    .command(params)\n  val proc = procBuilder.start()\n\n  logger.debug(\"EXECUTING CMD: \" + params.joinToString(\" \"))\n\n  var rc = -1\n  try {\n    rc = proc.waitFor()\n    logger.debug(\"CMD COMPLETED. RC: ${rc}\")\n  } catch (ex: Exception) {\n    logger.error(ex.message)\n    logger.error(ex.stackTraceToString())\n  }\n\n  if (rc != 0) {\n    logger.error(proc.errorStream.bufferedReader().readText().trim())\n    logger.error(\"Command \\\"${params[0]}\\\" failed with RC ${rc}.\")\n    throw GradleException(exceptionMsg)\n  }\n\n  return proc.inputStream.bufferedReader().readText().trim()\n}\n\n/**\n * Helper function to remove all contents from the given directory\n*/\nfun deleteDirectoryContents(directory: String) {\n  for (file in File(directory).list()) {\n    if (!delete(\"${directory}/${file}\")) {\n      throw GradleException(\"Failed to remove old file: ${directory}${file}\")\n    }\n  }\n}\n\n/**\n * Helper function to verify the distribution file now exists in build/dist.\n * It issues a warning if it does not and also lists the contents of its directory.\n*/\nfun verifyFileExists(filename: String) {\n  var theFile = File(filename)\n  if (theFile.isFile()) {\n    return\n  }\n  logger.warn(\"*** WARNING ***\");\n  logger.warn(\"File does not exist: ${filename}\")\n  var parentDir = theFile.getParentFile();\n  if (parentDir != null && parentDir.isDirectory()) {\n    logger.warn(\"Directory actually contains:\")\n    for (file in parentDir.list()) {\n      logger.warn(\"  ${file}\")\n    }\n  } else {\n    logger.warn(\"Parent directory does not exist: ${parentDir}\");\n  }\n}\n\n/**\n * Task createPackageInput\n *\n * Creates a packageInput directory containing only the current shadowJar file\n * because jpackage includes everything in its input directory in the package.\n*/\ntasks.register(\"createPackageInput\") {\n  group = \"build\"\n  description = \"Creates a packageInput directory that only contains the current shadowJar file\"\n  dependsOn(\"shadowJar\")\n  val libsDir = ext.get(LIBS_DIR) as String\n  val shadowJarFilename = ext.get(SHADOW_JAR_FILE_NAME) as String\n  val packageInputDir = ext.get(PACKAGE_INPUT_DIR) as String\n  inputs.file(\"${libsDir}/${shadowJarFilename}\")\n  outputs.dir(packageInputDir)\n\n  doLast {\n    deleteDirectoryContents(packageInputDir)\n    val copyReturn = copy {\n      from(libsDir)\n      into(packageInputDir)\n      include(shadowJarFilename)\n    }\n    if (!copyReturn.didWork) {\n      throw GradleException(\"createPackageInput failed to copy: ${shadowJarFilename}\")\n    }\n  }\n}\n\n/**\n * Task: createDeb\n *\n * Creates the Linux DEB package file (Debian, Ubuntu and derrivatives).\n */\ntasks.register(\"createDeb\") {\n  group = \"build\"\n  description = \"Makes DEB Linux installation package.\"\n  dependsOn(\"createPackageInput\")\n  inputs.dir(ext.get(PACKAGE_INPUT_DIR) as String)\n  inputs.dir(\"${ext.get(SUPPORT_DIR) as String}/linux\")\n\n  // Debian uses `_` to separate name from version string.\n  // https://www.debian.org/doc/manuals/debian-faq/pkg-basics.en.html\n  val appVersion = ext.get(APP_VERSION) as String\n  val targetDir = ext.get(TARGET_DIR) as String\n  val outputFile = \"${targetDir}/${project.name}_${appVersion}_amd64.deb\"\n  outputs.file(outputFile)\n\n  doFirst {\n    if (!OperatingSystem.current().isLinux) {\n      throw GradleException(\"This task runs on Linux only.\")\n    }\n  }\n\n  doLast {\n    val params = (ext.get(LINUX_PARAMS) as List<Any?>).filterIsInstance<String>() + listOf(\"--type\", \"deb\")\n    runCommand(params, \"Error while creating the DEB package.\")\n    verifyFileExists(outputFile);\n  }\n}\n\n/**\n * Task: createRpm\n *\n * Creates the Linux RPM package file (RedHat and derrivatives).\n */\ntasks.register(\"createRpm\") {\n  group = \"build\"\n  description = \"Makes RPM Linux installation package.\"\n  dependsOn(\"createPackageInput\")\n  inputs.dir(ext.get(PACKAGE_INPUT_DIR) as String)\n  inputs.dir(\"${ext.get(SUPPORT_DIR) as String}/linux\")\n  var outputFile = \"${ext.get(TARGET_FILE_PATH_BASE) as String}-1.x86_64.rpm\"\n  outputs.file(outputFile);\n\n  doFirst {\n    if (!OperatingSystem.current().isLinux) {\n      throw GradleException(\"This task runs on Linux only.\")\n    }\n  }\n\n  doLast {\n    val params = (ext.get(LINUX_PARAMS) as List<Any?>).filterIsInstance<String>() + listOf(\"--type\", \"rpm\")\n    runCommand(params, \"Error while creating the RPM package.\")\n    verifyFileExists(outputFile);\n  }\n}\n\n/**\n * Task: createMsi\n *\n * Creates MSI installer file for Microsoft Windows.\n */\ntasks.register(\"createMsi\") {\n  group = \"build\"\n  description = \"Makes the Windows installation package.\"\n  dependsOn(\"createPackageInput\")\n\n  val supportDir = ext.get(SUPPORT_DIR) as String\n  val osArch = ext.get(OS_ARCH) as String\n\n  inputs.dir(ext.get(PACKAGE_INPUT_DIR) as String)\n  inputs.dir(\"${supportDir}/windows\")\n  var outputFile = \"${ext.get(TARGET_FILE_PATH_BASE_SHORT) as String}-${osArch}.msi\"\n  outputs.file(outputFile);\n\n  doFirst {\n    if (!OperatingSystem.current().isWindows) {\n      throw GradleException(\"This task runs on Windows only.\")\n    }\n  }\n\n  doLast {\n    val targetDir = ext.get(TARGET_DIR) as String\n    val version = ext.get(APP_VERSION_SHORT) as String\n    val params = (ext.get(SHARED_PARAMS) as List<Any?>).filterIsInstance<String>() + listOf(\n        \"--name\", project.name,\n        \"--dest\", targetDir,\n        \"--file-associations\", \"${supportDir}/windows/file.jpackage\",\n        \"--icon\", \"${supportDir}/windows/Logisim-evolution.ico\",\n        \"--win-menu-group\", project.name as String,\n        \"--win-shortcut\",\n        \"--win-dir-chooser\",\n        \"--win-menu\",\n        \"--type\", \"msi\",\n        // we MUST use short version form (without any suffix like \"-dev\", as it is not allowed in MSI package:\n        // https://docs.microsoft.com/en-us/windows/win32/msi/productversion?redirectedfrom=MSDN\n        // NOTE: any change to version **format** may require editing of .github/workflows/nightly.yml too!\n        \"--app-version\", version,\n    )\n    runCommand(params, \"Error while creating the MSI package.\")\n    val fromFile = \"${project.name}-${version}.msi\"\n    val copyReturn = copy {\n      from(targetDir)\n      into(targetDir)\n      include(fromFile)\n      rename(fromFile, \"${project.name}-${version}-${osArch}.msi\")\n    }\n    if (!copyReturn.didWork) {\n      throw GradleException(\"createMsi failed to rename .msi file to include architecture ${osArch}\")\n    }\n    delete(\"${targetDir}/${fromFile}\")\n    verifyFileExists(outputFile);\n  }\n}\n\n/**\n * Task: createApp\n *\n * Creates macOS application.\n */\ntasks.register(\"createApp\") {\n  val supportDir = ext.get(SUPPORT_DIR) as String\n  val buildDir = ext.get(BUILD_DIR) as String\n  val arch = ext.get(OS_ARCH) as String\n  val dest = \"${buildDir}/macOS-${arch}\"\n\n  group = \"build\"\n  description = \"Makes the macOS application.\"\n  dependsOn(\"createPackageInput\")\n  inputs.dir(ext.get(PACKAGE_INPUT_DIR) as String)\n  inputs.dir(\"${supportDir}/macos\")\n  outputs.dir(dest)\n\n  doFirst {\n    if (!OperatingSystem.current().isMacOsX) {\n      throw GradleException(\"This task runs on macOS only.\")\n    }\n  }\n\n  doLast {\n    deleteDirectoryContents(dest)\n    val params = (ext.get(SHARED_PARAMS) as List<Any?>).filterIsInstance<String>() + listOf(\n        \"--dest\", dest,\n        \"--name\", ext.get(UPPERCASE_PROJECT_NAME) as String,\n        \"--file-associations\", \"${supportDir}/macos/file.jpackage\",\n        \"--icon\", \"${supportDir}/macos/Logisim-evolution.icns\",\n        // app versioning is strictly checked for macOS. No suffix allowed for `app-image` type.\n        \"--app-version\", ext.get(APP_VERSION_SHORT) as String,\n        \"--type\", \"app-image\",\n        \"--mac-app-category\", \"education\"\n    )\n    runCommand(params, \"Error while creating the .app directory.\")\n\n    val appDirName = ext.get(APP_DIR_NAME) as String\n    if (\"x86_64\".equals(arch)) {\n      val pListFilename = \"${appDirName}/Contents/Info.plist\"\n      val tempPList = \"${dest}/Info.plist\"\n      runCommand(listOf(\n          \"awk\",\n          \"{print >\\\"${tempPList}\\\"};\"\n              + \"/NSHighResolutionCapable/{\"\n              + \"print \\\"  <string>true</string>\\\" >\\\"${tempPList}\\\";\"\n              + \"print \\\"  <key>NSSupportsAutomaticGraphicsSwitching</key>\\\" >\\\"${tempPList}\\\"\"\n              + \"}\",\n          pListFilename,\n      ), \"Error while patching Info.plist file.\")\n\n      runCommand(listOf(\n          \"mv\", tempPList, pListFilename\n      ), \"Error while moving Info.plist into the .app directory.\")\n\n      runCommand(listOf(\n          \"codesign\", \"--force\", \"--sign\", \"-\", appDirName\n      ), \"Error while executing: codesign\")\n    }\n  }\n}\n\n/**\n * Task: createDmg\n *\n * Creates macOS DMG package file.\n */\ntasks.register(\"createDmg\") {\n  group = \"build\"\n  description = \"Makes the macOS DMG package.\"\n  dependsOn(\"createApp\")\n\n  val appDirName = ext.get(APP_DIR_NAME) as String\n  val osArch = ext.get(OS_ARCH) as String\n\n  inputs.dir(appDirName)\n\n  val outputFile = \"${ext.get(TARGET_FILE_PATH_BASE) as String}-${osArch}.dmg\"\n  outputs.file(outputFile);\n\n  doFirst {\n    if (!OperatingSystem.current().isMacOsX) {\n      throw GradleException(\"This task runs on macOS only.\")\n    }\n  }\n\n  doLast {\n    val params = listOf(\n        ext.get(JPACKAGE) as String,\n        \"--app-image\", appDirName,\n        \"--name\", project.name,\n        // We can pass full version here, even if contains suffix part too.\n        // We also append the architecture to add it to the package name.\n        \"--app-version\", \"${ext.get(APP_VERSION) as String}-${osArch}\",\n        \"--dest\", ext.get(TARGET_DIR) as String,\n        \"--type\", \"dmg\",\n      )\n    runCommand(params, \"Error while creating the DMG package\")\n    verifyFileExists(outputFile);\n  }\n}\n\n/**\n * Generates Java class file with project information like current version, branch name, last commit hash etc.\n */\nfun genBuildInfo(buildInfoFilePath: String) {\n  val now = Date()\n  val nowIso = SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ssZ\").format(now)\n\n  var branchName = \"\";\n  var branchLastCommitHash = \"\";\n  var buildId = \"(Not built from Git repo)\";\n  if (file(\"${projectDir}/.git\").exists()) {\n    var errMsg = \"Failed getting branch name.\"\n    branchName = runCommand(listOf(\"git\", \"-C\", projectDir.toString(), \"rev-parse\", \"--abbrev-ref\", \"HEAD\"), errMsg)\n\n    errMsg = \"Failed getting last commit hash.\"\n    branchLastCommitHash = runCommand(listOf(\"git\", \"-C\", projectDir.toString(), \"rev-parse\", \"--short=8\", \"HEAD\"), errMsg)\n    buildId = \"${branchName}/${branchLastCommitHash}\";\n  }\n  val currentMillis = Date().time\n  val buildYear = SimpleDateFormat(\"yyyy\").format(now)\n  val appVersion = ext.get(APP_VERSION) as String\n  val projectName = project.name.replaceFirstChar { it.uppercase() }.trim()\n  val displayName = \"${projectName} v${appVersion}\"\n  val url = ext.get(APP_URL) as String\n\n  val buildInfoClass = \"\"\"\n      // ************************************************************************\n      // THIS IS A COMPILE TIME GENERATED FILE! DO NOT EDIT BY HAND!\n      // Generated at ${nowIso}\n      // ************************************************************************\n\n      package com.cburch.logisim.generated;\n\n      import com.cburch.logisim.LogisimVersion;\n      import java.util.Date;\n\n      public final class BuildInfo {\n        // Build time VCS details\n        public static final String branchName = \"${branchName}\";\n        public static final String branchLastCommitHash = \"${branchLastCommitHash}\";\n        public static final String buildId = \"${buildId}\";\n\n        // Project build timestamp\n        public static final long millis = ${currentMillis}L; // keep trailing 'L'\n        public static final String year = \"${buildYear}\";\n        public static final String dateIso8601 = \"${nowIso}\";\n        public static final Date date = new Date();\n        static { date.setTime(millis); }\n\n        // Project version\n        public static final LogisimVersion version = LogisimVersion.fromString(\"${appVersion}\");\n        public static final String name = \"${projectName}\";\n        public static final String displayName = \"${displayName}\";\n        public static final String url = \"${url}\";\n\n        // JRE info\n        public static final String jvm_version =\n            String.format(\"%s v%s\", System.getProperty(\"java.vm.name\"), System.getProperty(\"java.version\"));\n        public static final String jvm_vendor = System.getProperty(\"java.vendor\");\n      }\n      // End of generated BuildInfo\n\n      \"\"\"\n\n  logger.info(\"Generating: ${buildInfoFilePath}\")\n  val buildInfoFile = File(buildInfoFilePath)\n  buildInfoFile.parentFile.mkdirs()\n  file(buildInfoFilePath).writeText(buildInfoClass.trimIndent())\n}\n\n/**\n * Task: genBuildInfo\n *\n * Wrapper task for genBuildInfo() method generating BuildInfo class.\n * No need to trigger it manually.\n */\ntasks.register(\"genBuildInfo\") {\n  // Target location for generated files.\n  val buildDir = ext.get(BUILD_DIR) as String\n  val buildInfoDir = \"${buildDir}/generated/logisim/java/com/cburch/logisim/generated\"\n\n  group = \"build\"\n  description = \"Creates Java class file with vital project information.\"\n\n  // TODO: we should not have hardcoded path here but use default sourcesSet maybe?\n  inputs.dir(\"${projectDir}/src\")\n  inputs.dir(ext.get(SUPPORT_DIR) as String)\n  inputs.files(\"${projectDir}/gradle.properties\", \"${projectDir}/README.md\", \"${projectDir}/LICENSE.md\")\n  outputs.dir(buildInfoDir)\n\n  doLast {\n    // Full path to the Java class file to be generated.\n    genBuildInfo(\"${buildInfoDir}/BuildInfo.java\")\n  }\n}\n\n/**\n * Task genVhdlSyntax\n *\n * Generates the VhdlSyntax.java file\n*/\ntasks.register(\"genVhdlSyntax\") {\n  val sourceFile = \"${projectDir}/src/main/jflex/com/cburch/logisim/vhdl/syntax/VhdlSyntax.jflex\"\n  val skeletonFile = \"${projectDir}/support/jflex/skeleton.default\"\n  val buildDir = ext.get(BUILD_DIR) as String\n  val targetDir = \"${buildDir}/generated/logisim/java/com/cburch/logisim/vhdl/syntax/\"\n\n  group = \"build\"\n  description = \"Generates VhdlSyntax.java\"\n  inputs.files(sourceFile)\n  inputs.files(skeletonFile)\n  outputs.dir(targetDir)\n\n  var jflexJarFileName = \"\"\n\n  doFirst() {\n    configurations.compileClasspath {\n      resolvedConfiguration.resolvedArtifacts.forEach { ra: ResolvedArtifact ->\n        val id = ra.moduleVersion.id\n        if (\"de.jflex\".equals(id.group) && \"jflex\".equals(id.name)) {\n          jflexJarFileName = ra.file.toString()\n        }\n      }\n    }\n    if (jflexJarFileName.isEmpty()) {\n      throw GradleException(\"Could not find jflex jar file.\")\n    }\n  }\n\n  doLast() {\n    logging.captureStandardOutput(LogLevel.DEBUG)\n    javaexec {\n      classpath = files(jflexJarFileName)\n      args = listOf(\n          \"--nobak\",\n          \"-d\", targetDir,\n          \"--skel\", skeletonFile,\n          sourceFile\n      )\n    }\n  }\n}\n\n/**\n * Task: genFiles\n *\n * Umbrella task to generate all generated files\n*/\ntasks.register(\"genFiles\") {\n  group = \"build\"\n  description = \"Generates all generated files.\"\n  dependsOn(\"genBuildInfo\", \"genVhdlSyntax\")\n}\n\n/**\n * Task: createAll\n *\n * Umbrella task to create all packages for the current platform.\n */\ntasks.register(\"createAll\") {\n  group = \"build\"\n  description = \"Makes the platform specific packages for the current platform.\"\n\n  if (OperatingSystem.current().isLinux) {\n    dependsOn(\"createDeb\", \"createRpm\")\n  }\n  if (OperatingSystem.current().isWindows) {\n    dependsOn(\"createMsi\")\n  }\n  if (OperatingSystem.current().isMacOsX) {\n    dependsOn(\"createDmg\")\n  }\n}\n\n/**\n * @deprecated. Use `createAll()`\n */\ntasks.register(\"jpackage\") {\n  group = \"build\"\n  var desc = \"DEPRECATED: Use `createAll` task instead.\"\n  description = desc\n  dependsOn(\"createAll\")\n\n  doFirst {\n    logger.warn(desc)\n  }\n}\n\nval compilerOptions = listOf(\"-Xlint:deprecation\", \"-Xlint:unchecked\")\n\ntasks {\n  compileJava {\n    options.encoding = \"UTF-8\"\n    options.compilerArgs = compilerOptions\n    dependsOn(\"genFiles\")\n  }\n  compileTestJava {\n    options.encoding = \"UTF-8\"\n    options.compilerArgs = compilerOptions\n    dependsOn(\"genFiles\")\n  }\n\n  test {\n    useJUnitPlatform()\n//    testLogging {\n//      events(\"passed\", \"skipped\", \"failed\")\n//    }\n  }\n\n  jar {\n    manifest {\n      attributes.putAll(mapOf(\n          \"Implementation-Title\" to name,\n          \"Implementation-Version\" to archiveVersion\n      ))\n    }\n\n    from(\".\") {\n      include(\"LICENSE.md\")\n      include(\"README.md\")\n      include(\"CHANGES.md\")\n    }\n  }\n\n  shadowJar {\n    archiveBaseName.set(project.name)\n    archiveVersion.set(ext.get(APP_VERSION) as String)\n    from(\".\") {\n      include(\"LICENSE.md\")\n      include(\"README.md\")\n      include(\"CHANGES.md\")\n    }\n  }\n\n  // Checkstyles related tasks: \"checkstylMain\" and \"checkstyleTest\"\n  checkstyle {\n    // Checkstyle version to use\n    toolVersion = \"8.45\"\n\n    // let's use google_checks.xml config provided with Checkstyle.\n    // https://stackoverflow.com/a/67513272/1235698\n    val archive = configurations.checkstyle.get().resolve().filter {\n      it.name.startsWith(\"checkstyle\")\n    }\n    config = resources.text.fromArchiveEntry(archive, \"google_checks.xml\")\n\n    // FIXME: There should be cleaner way of using custom suppression config with built-in style.\n    // https://stackoverflow.com/a/64703619/1235698\n    System.setProperty( \"org.checkstyle.google.suppressionfilter.config\", \"${projectDir}/checkstyle-suppressions.xml\")\n  }\n  checkstyleMain {\n    source = fileTree(\"src/main/java\")\n  }\n  checkstyleTest {\n    source = fileTree(\"src/test/java\")\n  }\n}\n"
        },
        {
          "name": "checkstyle-suppressions.xml",
          "type": "blob",
          "size": 1.39453125,
          "content": "<?xml version=\"1.0\"?>\n<!DOCTYPE suppressions PUBLIC\n        \"-//Checkstyle//DTD SuppressionFilter Configuration 1.2//EN\"\n        \"https://checkstyle.org/dtds/suppressions_1_2.dtd\">\n\n<suppressions>\n    <suppress checks=\"MissingJavadocMethod\"/>\n    <suppress checks=\"MissingJavadocType\"/>\n    <suppress checks=\"JavadocParagraph\"/>\n    <suppress checks=\"NeedBraces\"/>\n    <suppress checks=\"LineLength\"/>\n\n    <suppress checks=\"LocalVariableName\"/>\n    <suppress checks=\"ParameterName\"/>\n    <suppress checks=\"MemberName\"/>\n    <suppress checks=\"TypeName\"/>\n    <suppress checks=\"VariableDeclarationUsageDistance\"/>\n    <suppress checks=\"AbbreviationAsWordInName\"/>\n    <suppress checks=\"AvoidEscapedUnicodeCharacters\"/>\n    <suppress checks=\"EmptyCatchBlock\"/>\n    <suppress checks=\"MissingSwitchDefault\"/>\n    <suppress checks=\"MultipleVariableDeclarations\"/>\n    <suppress checks=\"EmptyBlock\"/>\n    <suppress checks=\"EmptyLineSeparator\"/>\n    <suppress checks=\"NonEmptyAtclauseDescription\"/>\n    <suppress checks=\"SummaryJavadoc\"/>\n    <suppress checks=\"OverloadMethodsDeclarationOrder\"/>\n    <suppress checks=\"CustomImportOrder\"/>\n    <suppress checks=\"SingleLineJavadoc\"/>\n    <suppress checks=\"FallThrough\"/>\n\n    <!-- Auto-generated file. https://github.com/logisim-evolution/logisim-evolution/issues/563-->\n    <suppress id=\"VhdlSyntax\" files=\"src/main/java/com/cburch/logisim/vhdl/syntax/VhdlSyntax.java\"/>\n</suppressions>\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradle.properties",
          "type": "blob",
          "size": 0.59765625,
          "content": "# DO NOT QUOTE STRINGS!\n#\ngroup = com.cburch\nname = logisim-evolution\n\n# Current application version. Supported formats:\n#  x.y.z (i.e. \"3.6.9\"\n#  x.y.z-suffix (i.e. \"3.6.9-beta1\")\n#\n# * Suffix is optional and MUST be kept empty for **stable** rleases.\n# * For non-stable builds use anything that reflects build state (i.e. \"dev\", \"beta1\", \"rc1\").\n#\n# NOTE: if you use suffix, you MUST separate it from the version number with a hypen.\nversion = 4.0.0-dev\n\n# Project website URL (the shorter the better)\nurl = https://github.com/logisim-evolution/\n\n# Fix sonar warning\nsystemProp.sonar.gradle.skipCompile = true\n"
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 8.48828125,
          "content": "#!/bin/sh\n\n#\n# Copyright © 2015-2021 the original authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      https://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\n##############################################################################\n#\n#   Gradle start up script for POSIX generated by Gradle.\n#\n#   Important for running:\n#\n#   (1) You need a POSIX-compliant shell to run this script. If your /bin/sh is\n#       noncompliant, but you have some other compliant shell such as ksh or\n#       bash, then to run this script, type that shell name before the whole\n#       command line, like:\n#\n#           ksh Gradle\n#\n#       Busybox and similar reduced shells will NOT work, because this script\n#       requires all of these POSIX shell features:\n#         * functions;\n#         * expansions «$var», «${var}», «${var:-default}», «${var+SET}»,\n#           «${var#prefix}», «${var%suffix}», and «$( cmd )»;\n#         * compound commands having a testable exit status, especially «case»;\n#         * various built-in commands including «command», «set», and «ulimit».\n#\n#   Important for patching:\n#\n#   (2) This script targets any POSIX shell, so it avoids extensions provided\n#       by Bash, Ksh, etc; in particular arrays are avoided.\n#\n#       The \"traditional\" practice of packing multiple parameters into a\n#       space-separated string is a well documented source of bugs and security\n#       problems, so this is (mostly) avoided, by progressively accumulating\n#       options in \"$@\", and eventually passing that to Java.\n#\n#       Where the inherited environment variables (DEFAULT_JVM_OPTS, JAVA_OPTS,\n#       and GRADLE_OPTS) rely on word-splitting, this is performed explicitly;\n#       see the in-line comments for details.\n#\n#       There are tweaks for specific operating systems such as AIX, CygWin,\n#       Darwin, MinGW, and NonStop.\n#\n#   (3) This script is generated from the Groovy template\n#       https://github.com/gradle/gradle/blob/HEAD/subprojects/plugins/src/main/resources/org/gradle/api/internal/plugins/unixStartScript.txt\n#       within the Gradle project.\n#\n#       You can find Gradle at https://github.com/gradle/gradle/.\n#\n##############################################################################\n\n# Attempt to set APP_HOME\n\n# Resolve links: $0 may be a link\napp_path=$0\n\n# Need this for daisy-chained symlinks.\nwhile\n    APP_HOME=${app_path%\"${app_path##*/}\"}  # leaves a trailing /; empty if no leading path\n    [ -h \"$app_path\" ]\ndo\n    ls=$( ls -ld \"$app_path\" )\n    link=${ls#*' -> '}\n    case $link in             #(\n      /*)   app_path=$link ;; #(\n      *)    app_path=$APP_HOME$link ;;\n    esac\ndone\n\n# This is normally unused\n# shellcheck disable=SC2034\nAPP_BASE_NAME=${0##*/}\n# Discard cd standard output in case $CDPATH is set (https://github.com/gradle/gradle/issues/25036)\nAPP_HOME=$( cd \"${APP_HOME:-./}\" > /dev/null && pwd -P ) || exit\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=maximum\n\nwarn () {\n    echo \"$*\"\n} >&2\n\ndie () {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n} >&2\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\nnonstop=false\ncase \"$( uname )\" in                #(\n  CYGWIN* )         cygwin=true  ;; #(\n  Darwin* )         darwin=true  ;; #(\n  MSYS* | MINGW* )  msys=true    ;; #(\n  NONSTOP* )        nonstop=true ;;\nesac\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=$JAVA_HOME/jre/sh/java\n    else\n        JAVACMD=$JAVA_HOME/bin/java\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=java\n    if ! command -v java >/dev/null 2>&1\n    then\n        die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nfi\n\n# Increase the maximum file descriptors if we can.\nif ! \"$cygwin\" && ! \"$darwin\" && ! \"$nonstop\" ; then\n    case $MAX_FD in #(\n      max*)\n        # In POSIX sh, ulimit -H is undefined. That's why the result is checked to see if it worked.\n        # shellcheck disable=SC2039,SC3045\n        MAX_FD=$( ulimit -H -n ) ||\n            warn \"Could not query maximum file descriptor limit\"\n    esac\n    case $MAX_FD in  #(\n      '' | soft) :;; #(\n      *)\n        # In POSIX sh, ulimit -n is undefined. That's why the result is checked to see if it worked.\n        # shellcheck disable=SC2039,SC3045\n        ulimit -n \"$MAX_FD\" ||\n            warn \"Could not set maximum file descriptor limit to $MAX_FD\"\n    esac\nfi\n\n# Collect all arguments for the java command, stacking in reverse order:\n#   * args from the command line\n#   * the main class name\n#   * -classpath\n#   * -D...appname settings\n#   * --module-path (only if needed)\n#   * DEFAULT_JVM_OPTS, JAVA_OPTS, and GRADLE_OPTS environment variables.\n\n# For Cygwin or MSYS, switch paths to Windows format before running java\nif \"$cygwin\" || \"$msys\" ; then\n    APP_HOME=$( cygpath --path --mixed \"$APP_HOME\" )\n    CLASSPATH=$( cygpath --path --mixed \"$CLASSPATH\" )\n\n    JAVACMD=$( cygpath --unix \"$JAVACMD\" )\n\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    for arg do\n        if\n            case $arg in                                #(\n              -*)   false ;;                            # don't mess with options #(\n              /?*)  t=${arg#/} t=/${t%%/*}              # looks like a POSIX filepath\n                    [ -e \"$t\" ] ;;                      #(\n              *)    false ;;\n            esac\n        then\n            arg=$( cygpath --path --ignore --mixed \"$arg\" )\n        fi\n        # Roll the args list around exactly as many times as the number of\n        # args, so each arg winds up back in the position where it started, but\n        # possibly modified.\n        #\n        # NB: a `for` loop captures its iteration list before it begins, so\n        # changing the positional parameters here affects neither the number of\n        # iterations, nor the values presented in `arg`.\n        shift                   # remove old arg\n        set -- \"$@\" \"$arg\"      # push replacement arg\n    done\nfi\n\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS='\"-Xmx64m\" \"-Xms64m\"'\n\n# Collect all arguments for the java command:\n#   * DEFAULT_JVM_OPTS, JAVA_OPTS, JAVA_OPTS, and optsEnvironmentVar are not allowed to contain shell fragments,\n#     and any embedded shellness will be escaped.\n#   * For example: A user cannot expect ${Hostname} to be expanded, as it is an environment variable and will be\n#     treated as '${Hostname}' itself on the command line.\n\nset -- \\\n        \"-Dorg.gradle.appname=$APP_BASE_NAME\" \\\n        -classpath \"$CLASSPATH\" \\\n        org.gradle.wrapper.GradleWrapperMain \\\n        \"$@\"\n\n# Stop when \"xargs\" is not available.\nif ! command -v xargs >/dev/null 2>&1\nthen\n    die \"xargs is not available\"\nfi\n\n# Use \"xargs\" to parse quoted args.\n#\n# With -n1 it outputs one arg per line, with the quotes and backslashes removed.\n#\n# In Bash we could simply go:\n#\n#   readarray ARGS < <( xargs -n1 <<<\"$var\" ) &&\n#   set -- \"${ARGS[@]}\" \"$@\"\n#\n# but POSIX shell has neither arrays nor command substitution, so instead we\n# post-process each arg (as a line of input to sed) to backslash-escape any\n# character that might be a shell metacharacter, then use eval to reverse\n# that process (while maintaining the separation between arguments), and wrap\n# the whole thing up as a single \"set\" statement.\n#\n# This will of course break if any of these variables contains a newline or\n# an unmatched quote.\n#\n\neval \"set -- $(\n        printf '%s\\n' \"$DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS\" |\n        xargs -n1 |\n        sed ' s~[^-[:alnum:]+,./:=@_]~\\\\&~g; ' |\n        tr '\\n' ' '\n    )\" '\"$@\"'\n\nexec \"$JAVACMD\" \"$@\"\n"
        },
        {
          "name": "gradlew.bat",
          "type": "blob",
          "size": 2.849609375,
          "content": "@rem\r\n@rem Copyright 2015 the original author or authors.\r\n@rem\r\n@rem Licensed under the Apache License, Version 2.0 (the \"License\");\r\n@rem you may not use this file except in compliance with the License.\r\n@rem You may obtain a copy of the License at\r\n@rem\r\n@rem      https://www.apache.org/licenses/LICENSE-2.0\r\n@rem\r\n@rem Unless required by applicable law or agreed to in writing, software\r\n@rem distributed under the License is distributed on an \"AS IS\" BASIS,\r\n@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n@rem See the License for the specific language governing permissions and\r\n@rem limitations under the License.\r\n@rem\r\n\r\n@if \"%DEBUG%\"==\"\" @echo off\r\n@rem ##########################################################################\r\n@rem\r\n@rem  Gradle startup script for Windows\r\n@rem\r\n@rem ##########################################################################\r\n\r\n@rem Set local scope for the variables with windows NT shell\r\nif \"%OS%\"==\"Windows_NT\" setlocal\r\n\r\nset DIRNAME=%~dp0\r\nif \"%DIRNAME%\"==\"\" set DIRNAME=.\r\n@rem This is normally unused\r\nset APP_BASE_NAME=%~n0\r\nset APP_HOME=%DIRNAME%\r\n\r\n@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.\r\nfor %%i in (\"%APP_HOME%\") do set APP_HOME=%%~fi\r\n\r\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\r\nset DEFAULT_JVM_OPTS=\"-Xmx64m\" \"-Xms64m\"\r\n\r\n@rem Find java.exe\r\nif defined JAVA_HOME goto findJavaFromJavaHome\r\n\r\nset JAVA_EXE=java.exe\r\n%JAVA_EXE% -version >NUL 2>&1\r\nif %ERRORLEVEL% equ 0 goto execute\r\n\r\necho. 1>&2\r\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH. 1>&2\r\necho. 1>&2\r\necho Please set the JAVA_HOME variable in your environment to match the 1>&2\r\necho location of your Java installation. 1>&2\r\n\r\ngoto fail\r\n\r\n:findJavaFromJavaHome\r\nset JAVA_HOME=%JAVA_HOME:\"=%\r\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\r\n\r\nif exist \"%JAVA_EXE%\" goto execute\r\n\r\necho. 1>&2\r\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME% 1>&2\r\necho. 1>&2\r\necho Please set the JAVA_HOME variable in your environment to match the 1>&2\r\necho location of your Java installation. 1>&2\r\n\r\ngoto fail\r\n\r\n:execute\r\n@rem Setup the command line\r\n\r\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\r\n\r\n\r\n@rem Execute Gradle\r\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*\r\n\r\n:end\r\n@rem End local scope for the variables with windows NT shell\r\nif %ERRORLEVEL% equ 0 goto mainEnd\r\n\r\n:fail\r\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\r\nrem the _cmd.exe /c_ return code!\r\nset EXIT_CODE=%ERRORLEVEL%\r\nif %EXIT_CODE% equ 0 set EXIT_CODE=1\r\nif not \"\"==\"%GRADLE_EXIT_CONSOLE%\" exit %EXIT_CODE%\r\nexit /b %EXIT_CODE%\r\n\r\n:mainEnd\r\nif \"%OS%\"==\"Windows_NT\" endlocal\r\n\r\n:omega\r\n"
        },
        {
          "name": "settings.gradle.kts",
          "type": "blob",
          "size": 0.35546875,
          "content": "/*\n * This file was generated by the Gradle 'init' task.\n *\n * The settings file is used to specify which projects to include in your build.\n * \n * Detailed information about configuring a multi-project build in Gradle can be found\n * in the user guide at https://docs.gradle.org/5.0/userguide/multi_project_builds.html\n */\n\nrootProject.name = \"logisim-evolution\"\n"
        },
        {
          "name": "snap",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "support",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}