{
  "metadata": {
    "timestamp": 1736708672344,
    "page": 73,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjgw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "guolindev/LitePal",
      "stars": 8112,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.3779296875,
          "content": ".gradle\ngradle.properties\n/local.properties\n/.idea/workspace.xml\n/.idea/libraries\n.DS_Store\n/build\nbin\ntmp\ngen\n\n#################\n## #IntelliJ IDEA\n#################\n.idea\n*.iml\n*.ipr\n*.iws\nout\n\n#################\n## Eclipse\n#################\n\n*.pydevproject\n.metadata\n*.tmp\n*.bak\n*.swp\n*~.nib\nlocal.properties\n.settings/\n.loadpath\n*.classpath\n*.project\nREADME.md~\n\n/releaseToBintray.txt\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0595703125,
          "content": "Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright {yyyy} {name of copyright owner}\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 15.40625,
          "content": "# LitePal for Android  \n![Logo](https://github.com/LitePalFramework/LitePal/blob/master/sample/src/main/logo/mini_logo.png) \n\n[中文文档](https://blog.csdn.net/sinyu890807/category_9262963.html)\n\nLitePal is an open source Android library that allows developers to use SQLite database extremely easy. You can finish most of the database operations without writing even a SQL statement, including create or upgrade tables, crud operations, aggregate functions, etc. The setup of LitePal is quite simple as well, you can integrate it into your project in less than 5 minutes. \n\nExperience the magic right now and have fun!\n\n## Features\n * Using object-relational mapping (ORM) pattern.\n * Almost zero-configuration(only one configuration file with few properties).\n * Maintains all tables automatically(e.g. create, alter or drop tables).\n * Multi databases supported.\n * Encapsulated APIs for avoiding writing SQL statements.\n * Awesome fluent query API.\n * Alternative choice to use SQL still, but easier and better APIs than the originals.\n * More for you to explore.\n\n## Quick Setup\n#### 1. Include library\n\nEdit your **build.gradle** file and add below dependency.\n\n``` groovy\ndependencies {\n    implementation 'org.litepal.guolindev:core:3.2.3'\n}\n```\n\n#### 2. Configure litepal.xml\nCreate a file in the **assets** folder of your project and name it as **litepal.xml**. Then copy the following codes into it.\n``` xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<litepal>\n    <!--\n    \tDefine the database name of your application. \n    \tBy default each database name should be end with .db. \n    \tIf you didn't name your database end with .db, \n    \tLitePal would plus the suffix automatically for you.\n    \tFor example:    \n    \t<dbname value=\"demo\" />\n    -->\n    <dbname value=\"demo\" />\n\n    <!--\n    \tDefine the version of your database. Each time you want \n    \tto upgrade your database, the version tag would helps.\n    \tModify the models you defined in the mapping tag, and just \n    \tmake the version value plus one, the upgrade of database\n    \twill be processed automatically without concern.\n\t\t\tFor example:    \n    \t<version value=\"1\" />\n    -->\n    <version value=\"1\" />\n\n    <!--\n    \tDefine your models in the list with mapping tag, LitePal will\n    \tcreate tables for each mapping class. The supported fields\n    \tdefined in models will be mapped into columns.\n    \tFor example:    \n    \t<list>\n    \t\t<mapping class=\"com.test.model.Reader\" />\n    \t\t<mapping class=\"com.test.model.Magazine\" />\n    \t</list>\n    -->\n    <list>\n    </list>\n    \n    <!--\n        Define where the .db file should be. \"internal\" means the .db file\n        will be stored in the database folder of internal storage which no\n        one can access. \"external\" means the .db file will be stored in the\n        path to the directory on the primary external storage device where\n        the application can place persistent files it owns which everyone\n        can access. \"internal\" will act as default.\n        For example:\n        <storage value=\"external\" />\n    -->\n    \n</litepal>\n```\nThis is the only configuration file, and the properties are simple. \n * **dbname** configure the database name of project.\n * **version** configure the version of database. Each time you want to upgrade database, plus the value here.\n * **list** configure the mapping classes.\n * **storage** configure where the database file should be stored. **internal** and **external** are the only valid options.\n \n#### 3. Configure LitePalApplication\nYou don't want to pass the Context param all the time. To makes the APIs simple, just configure the LitePalApplication in **AndroidManifest.xml** as below:\n``` xml\n<manifest>\n    <application\n        android:name=\"org.litepal.LitePalApplication\"\n        ...\n    >\n        ...\n    </application>\n</manifest>\n```\nOf course you may have your own Application and has already configured here, like:\n``` xml\n<manifest>\n    <application\n        android:name=\"com.example.MyOwnApplication\"\n        ...\n    >\n        ...\n    </application>\n</manifest>\n```\nThat's OK. LitePal can still live with that. Just call **LitePal.initialize(context)** in your own Application:\n```java\npublic class MyOwnApplication extends Application {\n\n    @Override\n    public void onCreate() {\n        super.onCreate();\n        LitePal.initialize(this);\n    }\n    ...\n}\n```\nMake sure to call this method as early as you can. In the **onCreate()** method of Application will be fine. And always remember to use the application context as parameter. Do not use any instance of activity or service as parameter, or memory leaks might happen.\n## Get Started\nAfter setup, you can experience the powerful functions now.\n\n#### 1. Create tables\nDefine the models first. For example you have two models, **Album** and **Song**. The models can be defined as below:\n``` java\npublic class Album extends LitePalSupport {\n\t\n    @Column(unique = true, defaultValue = \"unknown\")\n    private String name;\n    \n    @Column(index = true)\n    private float price;\n\t\n    private List<Song> songs = new ArrayList<>();\n\n    // generated getters and setters.\n    ...\n}\n```\n``` java\npublic class Song extends LitePalSupport {\n\t\n    @Column(nullable = false)\n    private String name;\n\t\n    private int duration;\n\t\n    @Column(ignore = true)\n    private String uselessField;\n\t\n    private Album album;\n\n    // generated getters and setters.\n    ...\n}\n```\nThen add these models into the mapping list in **litepal.xml**:\n``` xml\n<list>\n    <mapping class=\"org.litepal.litepalsample.model.Album\" />\n    <mapping class=\"org.litepal.litepalsample.model.Song\" />\n</list>\n```\nOK! The tables will be generated next time you operate database. For example, gets the **SQLiteDatabase** with following codes:\n``` java\nSQLiteDatabase db = LitePal.getDatabase();\n```\nNow the tables will be generated automatically with SQLs like this:\n``` sql\nCREATE TABLE album (\n\tid integer primary key autoincrement,\n\tname text unique default 'unknown',\n\tprice real\n);\n\nCREATE TABLE song (\n\tid integer primary key autoincrement,\n\tname text not null,\n\tduration integer,\n\talbum_id integer\n);\n```\n\n#### 2. Upgrade tables\nUpgrade tables in LitePal is extremely easy. Just modify your models anyway you want:\n```java\npublic class Album extends LitePalSupport {\n\t\n    @Column(unique = true, defaultValue = \"unknown\")\n    private String name;\n\t\n    @Column(ignore = true)\n    private float price;\n\t\n    private Date releaseDate;\n\t\n    private List<Song> songs = new ArrayList<>();\n\n    // generated getters and setters.\n    ...\n}\n```\nA **releaseDate** field was added and **price** field was annotated to ignore.\nThen increase the version number in **litepal.xml**:\n```xml\n<!--\n    Define the version of your database. Each time you want \n    to upgrade your database, the version tag would helps.\n    Modify the models you defined in the mapping tag, and just \n    make the version value plus one, the upgrade of database\n    will be processed automatically without concern.\n    For example:    \n    <version value=\"1\" />\n-->\n<version value=\"2\" />\n```\nThe tables will be upgraded next time you operate database. A **releasedate** column will be added into **album** table and the original **price** column will be removed. All the data in **album** table except those removed columns will be retained.\n\nBut there are some upgrading conditions that LitePal can't handle and all data in the upgrading table will be cleaned:\n * Add a field which annotated as `unique = true`.\n * Change a field's annotation into `unique = true`.\n * Change a field's annotation into `nullable = false`.\n\nBe careful of the above conditions which will cause losing data.\n\n#### 3. Save data\nThe saving API is quite object oriented. Each model which inherits from **LitePalSupport** would have the **save()** method for free.\n\nJava:\n``` java\nAlbum album = new Album();\nalbum.setName(\"album\");\nalbum.setPrice(10.99f);\nalbum.setCover(getCoverImageBytes());\nalbum.save();\nSong song1 = new Song();\nsong1.setName(\"song1\");\nsong1.setDuration(320);\nsong1.setAlbum(album);\nsong1.save();\nSong song2 = new Song();\nsong2.setName(\"song2\");\nsong2.setDuration(356);\nsong2.setAlbum(album);\nsong2.save();\n```\n\nKotlin:\n```kotlin\nval album = Album()\nalbum.name = \"album\"\nalbum.price = 10.99f\nalbum.cover = getCoverImageBytes()\nalbum.save()\nval song1 = Song()\nsong1.name = \"song1\"\nsong1.duration = 320\nsong1.album = album\nsong1.save()\nval song2 = Song()\nsong2.name = \"song2\"\nsong2.duration = 356\nsong2.album = album\nsong2.save()\n```\nThis will insert album, song1 and song2 into database with associations.\n\n#### 4. Update data\nThe simplest way, use **save()** method to update a record found by **find()**.\n\nJava:\n``` java\nAlbum albumToUpdate = LitePal.find(Album.class, 1);\nalbumToUpdate.setPrice(20.99f); // raise the price\nalbumToUpdate.save();\n```\n\nKotlin:\n```kotlin\nval albumToUpdate = LitePal.find<Album>(1)\nalbumToUpdate.price = 20.99f // raise the price\nalbumToUpdate.save()\n```\n\nEach model which inherits from **LitePalSupport** would also have **update()** and **updateAll()** method. You can update a single record with a specified id.\n\nJava:\n``` java\nAlbum albumToUpdate = new Album();\nalbumToUpdate.setPrice(20.99f); // raise the price\nalbumToUpdate.update(id);\n```\n\nKotlin:\n```kotlin\nval albumToUpdate = Album()\nalbumToUpdate.price = 20.99f // raise the price\nalbumToUpdate.update(id)\n```\n\nOr you can update multiple records with a where condition.\n\nJava:\n``` java\nAlbum albumToUpdate = new Album();\nalbumToUpdate.setPrice(20.99f); // raise the price\nalbumToUpdate.updateAll(\"name = ?\", \"album\");\n```\n\nKotlin:\n```kotlin\nval albumToUpdate = Album()\nalbumToUpdate.price = 20.99f // raise the price\nalbumToUpdate.updateAll(\"name = ?\", \"album\")\n```\n\n#### 5. Delete data\nYou can delete a single record using the static **delete()** method in **LitePal**.\n\nJava:\n``` java\nLitePal.delete(Song.class, id);\n```\n\nKotlin:\n```kotlin\nLitePal.delete<Song>(id)\n```\n\nOr delete multiple records using the static **deleteAll()** method in **LitePal**.\n\nJava:\n``` java\nLitePal.deleteAll(Song.class, \"duration > ?\" , \"350\");\n```\n\nKotlin:\n```kotlin\nLitePal.deleteAll<Song>(\"duration > ?\" , \"350\")\n```\n\n#### 6. Query data\nFind a single record from song table with specified id.\n\nJava:\n``` java\nSong song = LitePal.find(Song.class, id);\n```\n\nKotlin:\n```kotlin\nval song = LitePal.find<Song>(id)\n```\n\nFind all records from song table.\n\nJava:\n``` java\nList<Song> allSongs = LitePal.findAll(Song.class);\n```\n\nKotlin:\n```kotlin\nval allSongs = LitePal.findAll<Song>()\n```\n\nConstructing complex query with fluent query.\n\nJava:\n``` java\nList<Song> songs = LitePal.where(\"name like ? and duration < ?\", \"song%\", \"200\").order(\"duration\").find(Song.class);\n```\n\nKotlin:\n``` kotlin\nval songs = LitePal.where(\"name like ? and duration < ?\", \"song%\", \"200\").order(\"duration\").find<Song>()\n```\n\n#### 7. Multiple databases\nIf your app needs multiple databases, LitePal support it completely. You can create as many databases as you want at runtime. For example:\n```java\nLitePalDB litePalDB = new LitePalDB(\"demo2\", 1);\nlitePalDB.addClassName(Singer.class.getName());\nlitePalDB.addClassName(Album.class.getName());\nlitePalDB.addClassName(Song.class.getName());\nLitePal.use(litePalDB);\n```\nThis will create a **demo2** database with **singer**, **album** and **song** tables.\n\nIf you just want to create a new database but with same configuration as **litepal.xml**, you can do it with:\n```java\nLitePalDB litePalDB = LitePalDB.fromDefault(\"newdb\");\nLitePal.use(litePalDB);\n```\nYou can always switch back to default database with:\n```java\nLitePal.useDefault();\n```\nAnd you can delete any database by specified database name:\n```java\nLitePal.deleteDatabase(\"newdb\");\n```\n\n#### 8. Transaction\nLitePal support transaction for atomic db operations. All operations in the transaction will be committed or rolled back together.\n\nJava usage:\n```java\nLitePal.beginTransaction();\nboolean result1 = // db operation1\nboolean result2 = // db operation2\nboolean result3 = // db operation3\nif (result1 && result2 && result3) {\n    LitePal.setTransactionSuccessful();\n}\nLitePal.endTransaction();\n```\n\nKotlin usage:\n```kotlin\nLitePal.runInTransaction {\n    val result1 = // db operation1\n    val result2 = // db operation2\n    val result3 = // db operation3\n    result1 && result2 && result3\n}\n```\n\n## ProGuard\nIf you are using ProGuard you might need to add the following option:\n\n```proguard\n-keep class org.litepal.** {*;}\n-keep class * extends org.litepal.crud.LitePalSupport {*;}\n```\n\n## Bugs Report\nIf you find any bug when using LitePal, please report **[here](https://github.com/LitePalFramework/LitePal/issues/new)**. Thanks for helping us making better.\n\n## Change logs\n\n### 3.2.3\n * Support database index by adding @Column(index = true) on field.\n * Adding return value for **runInTransaction()** function for Kotlin.\n * Fix known bugs.\n\n### 3.1.1\n * Support transaction.\n * Add return value for **LitePal.saveAll()** method.\n * No longer support byte array field as column in table.\n * Deprecate all async methods. You should handle async operations by yourself.\n * Fix known bugs.\n \n### 3.0.0\n * Optimize generic usage for async operation APIs.\n * Add **LitePal.registerDatabaseListener()** method for listening create or upgrade database events.\n * Provider better CRUD API usage for using generic declaration instead of Class parameter for kotlin.\n * Fix known bugs.\n\n### 2.0.0\n * Offer new APIs for CRUD operations. Deprecate **DataSupport**, use **LitePal** and **LitePalSupport** instead.\n * Fully support kotlin programming.\n * Fix known bugs.\n\n### 1.6.1\n * Support AES and MD5 encryption with @Encrypt annotation on fields.\n * Support to store database file on any directory of external storage.\n * Fix known bugs.\n\n### 1.5.1\n * Support async operations for all crud methods.\n * Add **saveOrUpdate()** method in DataSupport.\n * Fix known bugs.\n\n### 1.4.1\n * Support multiple databases.\n * Support crud operations for generic collection data in models.\n * Add SQLite keywords convert function to avoid keywords conflict.\n * Fix bug of DateSupport.count error.\n * Fix bug of losing blob data when upgrading database.\n * Fix other known bugs.\n \n### 1.3.2\n * Improve an outstanding speed up of querying and saving.\n * Support to store database file in external storage.\n * Support to mapping fields which inherit from superclass.\n * Add **findFirst()** and **findLast()** in fluent query.\n * Add **isExist()** and **saveIfNotExist()** method in DataSupport.\n\n### 1.3.1\n * Support storing binary data. Byte array field will be mapped into database as blob type.\n * Add **saveFast()** method in DataSupport. If your model has no associations to handle, use **saveFast()** method will be much more efficient.\n * Improve query speed with optimized algorithm.\n \n### 1.3.0\n * Add annotation functions to declare **unique**, **not null** and **default** constraints.\n * Remove the trick of ignore mapping fields with non-private modifier.\n * Support to use annotation to ignore mapping fields with `ignore = true`\n * Add some magical methods in DataSupport for those who understand LitePal deeper.\n * Fix known bugs.\n \n## License\n```\nCopyright (C) Lin Guo, LitePal Framework Open Source Project\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```\n"
        },
        {
          "name": "build.gradle",
          "type": "blob",
          "size": 0.4970703125,
          "content": "// Top-level build file where you can add configuration options common to all sub-projects/modules.\n\nbuildscript {\n    ext.kotlin_version = '1.5.21'\n    repositories {\n        google()\n        jcenter()\n    }\n    dependencies {\n        classpath 'com.android.tools.build:gradle:7.0.1'\n        classpath \"org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version\"\n    }\n}\n\nallprojects {\n    repositories {\n        google()\n        jcenter()\n    }\n}\n\ntask clean(type: Delete) {\n    delete rootProject.buildDir\n}"
        },
        {
          "name": "core",
          "type": "tree",
          "content": null
        },
        {
          "name": "downloads",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 4.9609375,
          "content": "#!/usr/bin/env bash\n\n##############################################################################\n##\n##  Gradle start up script for UN*X\n##\n##############################################################################\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS=\"\"\n\nAPP_NAME=\"Gradle\"\nAPP_BASE_NAME=`basename \"$0\"`\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=\"maximum\"\n\nwarn ( ) {\n    echo \"$*\"\n}\n\ndie ( ) {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n}\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\ncase \"`uname`\" in\n  CYGWIN* )\n    cygwin=true\n    ;;\n  Darwin* )\n    darwin=true\n    ;;\n  MINGW* )\n    msys=true\n    ;;\nesac\n\n# For Cygwin, ensure paths are in UNIX format before anything is touched.\nif $cygwin ; then\n    [ -n \"$JAVA_HOME\" ] && JAVA_HOME=`cygpath --unix \"$JAVA_HOME\"`\nfi\n\n# Attempt to set APP_HOME\n# Resolve links: $0 may be a link\nPRG=\"$0\"\n# Need this for relative symlinks.\nwhile [ -h \"$PRG\" ] ; do\n    ls=`ls -ld \"$PRG\"`\n    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n    if expr \"$link\" : '/.*' > /dev/null; then\n        PRG=\"$link\"\n    else\n        PRG=`dirname \"$PRG\"`\"/$link\"\n    fi\ndone\nSAVED=\"`pwd`\"\ncd \"`dirname \\\"$PRG\\\"`/\" >&-\nAPP_HOME=\"`pwd -P`\"\ncd \"$SAVED\" >&-\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n    else\n        JAVACMD=\"$JAVA_HOME/bin/java\"\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=\"java\"\n    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\nfi\n\n# Increase the maximum file descriptors if we can.\nif [ \"$cygwin\" = \"false\" -a \"$darwin\" = \"false\" ] ; then\n    MAX_FD_LIMIT=`ulimit -H -n`\n    if [ $? -eq 0 ] ; then\n        if [ \"$MAX_FD\" = \"maximum\" -o \"$MAX_FD\" = \"max\" ] ; then\n            MAX_FD=\"$MAX_FD_LIMIT\"\n        fi\n        ulimit -n $MAX_FD\n        if [ $? -ne 0 ] ; then\n            warn \"Could not set maximum file descriptor limit: $MAX_FD\"\n        fi\n    else\n        warn \"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\"\n    fi\nfi\n\n# For Darwin, add options to specify how the application appears in the dock\nif $darwin; then\n    GRADLE_OPTS=\"$GRADLE_OPTS \\\"-Xdock:name=$APP_NAME\\\" \\\"-Xdock:icon=$APP_HOME/media/gradle.icns\\\"\"\nfi\n\n# For Cygwin, switch paths to Windows format before running java\nif $cygwin ; then\n    APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`\n    CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`\n\n    # We build the pattern for arguments to be converted via cygpath\n    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`\n    SEP=\"\"\n    for dir in $ROOTDIRSRAW ; do\n        ROOTDIRS=\"$ROOTDIRS$SEP$dir\"\n        SEP=\"|\"\n    done\n    OURCYGPATTERN=\"(^($ROOTDIRS))\"\n    # Add a user-defined pattern to the cygpath arguments\n    if [ \"$GRADLE_CYGPATTERN\" != \"\" ] ; then\n        OURCYGPATTERN=\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\"\n    fi\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    i=0\n    for arg in \"$@\" ; do\n        CHECK=`echo \"$arg\"|egrep -c \"$OURCYGPATTERN\" -`\n        CHECK2=`echo \"$arg\"|egrep -c \"^-\"`                                 ### Determine if an option\n\n        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition\n            eval `echo args$i`=`cygpath --path --ignore --mixed \"$arg\"`\n        else\n            eval `echo args$i`=\"\\\"$arg\\\"\"\n        fi\n        i=$((i+1))\n    done\n    case $i in\n        (0) set -- ;;\n        (1) set -- \"$args0\" ;;\n        (2) set -- \"$args0\" \"$args1\" ;;\n        (3) set -- \"$args0\" \"$args1\" \"$args2\" ;;\n        (4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;\n        (5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;\n        (6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;\n        (7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;\n        (8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;\n        (9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;\n    esac\nfi\n\n# Split up the JVM_OPTS And GRADLE_OPTS values into an array, following the shell quoting and substitution rules\nfunction splitJvmOpts() {\n    JVM_OPTS=(\"$@\")\n}\neval splitJvmOpts $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS\nJVM_OPTS[${#JVM_OPTS[*]}]=\"-Dorg.gradle.appname=$APP_BASE_NAME\"\n\nexec \"$JAVACMD\" \"${JVM_OPTS[@]}\" -classpath \"$CLASSPATH\" org.gradle.wrapper.GradleWrapperMain \"$@\"\n"
        },
        {
          "name": "gradlew.bat",
          "type": "blob",
          "size": 2.34765625,
          "content": "@if \"%DEBUG%\" == \"\" @echo off\r\n@rem ##########################################################################\r\n@rem\r\n@rem  Gradle startup script for Windows\r\n@rem\r\n@rem ##########################################################################\r\n\r\n@rem Set local scope for the variables with windows NT shell\r\nif \"%OS%\"==\"Windows_NT\" setlocal\r\n\r\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\r\nset DEFAULT_JVM_OPTS=\r\n\r\nset DIRNAME=%~dp0\r\nif \"%DIRNAME%\" == \"\" set DIRNAME=.\r\nset APP_BASE_NAME=%~n0\r\nset APP_HOME=%DIRNAME%\r\n\r\n@rem Find java.exe\r\nif defined JAVA_HOME goto findJavaFromJavaHome\r\n\r\nset JAVA_EXE=java.exe\r\n%JAVA_EXE% -version >NUL 2>&1\r\nif \"%ERRORLEVEL%\" == \"0\" goto init\r\n\r\necho.\r\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\r\necho.\r\necho Please set the JAVA_HOME variable in your environment to match the\r\necho location of your Java installation.\r\n\r\ngoto fail\r\n\r\n:findJavaFromJavaHome\r\nset JAVA_HOME=%JAVA_HOME:\"=%\r\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\r\n\r\nif exist \"%JAVA_EXE%\" goto init\r\n\r\necho.\r\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\r\necho.\r\necho Please set the JAVA_HOME variable in your environment to match the\r\necho location of your Java installation.\r\n\r\ngoto fail\r\n\r\n:init\r\n@rem Get command-line arguments, handling Windowz variants\r\n\r\nif not \"%OS%\" == \"Windows_NT\" goto win9xME_args\r\nif \"%@eval[2+2]\" == \"4\" goto 4NT_args\r\n\r\n:win9xME_args\r\n@rem Slurp the command line arguments.\r\nset CMD_LINE_ARGS=\r\nset _SKIP=2\r\n\r\n:win9xME_args_slurp\r\nif \"x%~1\" == \"x\" goto execute\r\n\r\nset CMD_LINE_ARGS=%*\r\ngoto execute\r\n\r\n:4NT_args\r\n@rem Get arguments from the 4NT Shell from JP Software\r\nset CMD_LINE_ARGS=%$\r\n\r\n:execute\r\n@rem Setup the command line\r\n\r\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\r\n\r\n@rem Execute Gradle\r\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%\r\n\r\n:end\r\n@rem End local scope for the variables with windows NT shell\r\nif \"%ERRORLEVEL%\"==\"0\" goto mainEnd\r\n\r\n:fail\r\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\r\nrem the _cmd.exe /c_ return code!\r\nif  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1\r\nexit /b 1\r\n\r\n:mainEnd\r\nif \"%OS%\"==\"Windows_NT\" endlocal\r\n\r\n:omega\r\n"
        },
        {
          "name": "java",
          "type": "tree",
          "content": null
        },
        {
          "name": "kotlin",
          "type": "tree",
          "content": null
        },
        {
          "name": "sample",
          "type": "tree",
          "content": null
        },
        {
          "name": "settings.gradle",
          "type": "blob",
          "size": 0.0234375,
          "content": "include 'sample', 'core'"
        }
      ]
    }
  ]
}