{
  "metadata": {
    "timestamp": 1736708734755,
    "page": 190,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "jOOQ/jOOQ",
      "stars": 6250,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1669921875,
          "content": "/target\n*.iml\n# Include top level code styles and inspection profile\n.idea/.*\n.idea/*.xml\n.idea/libraries\n.data/\n# Ignore project level .idea folders\n*/.idea\n/jOOQ-r2dbc/\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.9609375,
          "content": "language: java\njdk:\n  - openjdk11\nbefore_install:\n  - wget https://archive.apache.org/dist/maven/maven-3/3.6.2/binaries/apache-maven-3.6.2-bin.zip\n  - unzip -qq apache-maven-3.6.2-bin.zip\n  - export M2_HOME=$PWD/apache-maven-3.6.2\n  - export PATH=$M2_HOME/bin:$PATH\ninstall:\n  - sh -c 'mvn install -DskipTests=true'\n  - sh -c 'cd jOOQ-examples/jOOQ-spring-example && mvn install -DskipTests=true'\n  - sh -c 'cd jOOQ-examples/jOOQ-spring-boot-example && mvn install -DskipTests=true'\n  - sh -c 'cd jOOQ-examples/jOOQ-flyway-example && mvn install -DskipTests=true'\n  - sh -c 'cd jOOQ-examples/jOOQ-spring-guice-example && mvn install -DskipTests=true'\nscript:\n  - sh -c 'mvn test'\n  - sh -c 'cd jOOQ-examples/jOOQ-spring-example && mvn test'\n  - sh -c 'cd jOOQ-examples/jOOQ-spring-boot-example && mvn test'\n  - sh -c 'cd jOOQ-examples/jOOQ-flyway-example && mvn test'\n  - sh -c 'cd jOOQ-examples/jOOQ-spring-guice-example && mvn test'\ncache:\n  directories:\n    - $HOME/.m2/repository\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 6.5673828125,
          "content": "To PR or not to PR?\n===================\n\nThanks for offering your help. We really appreciate your intentions. But let's review whether a PR is really reasonable for what you're trying to do.\n\n- **Did you discover a typo or minor bug that you think is really easy to fix?** A PR is perfect. Skip to [The ideal PR](#the-ideal-pr)\n- **Do you want to show some code in diff/PR form** Sure! That's a clever usage of PRs, often better than prose. If there's no expectation of it to be merged, go for it!\n- **Are you about to suggest a concrete implementation of a new feature, API, etc?** Please don't! We're very very likely to reject your PR and you will have wasted your time. Please use the [issue tracker](https://github.com/jOOQ/jOOQ/issues/new) or the [mailing list](https://groups.google.com/d/forum/jooq-user) to discuss your ideas first. Then, quite possibly, it's much more reasonable to leave the implementation to us. Here's why:\n\nOverlooking things\n------------------\n\nFirst and foremost, from our experience, most contributors are overlooking a ton of things. That's because jOOQ has become quite complex over the past 10 years. They will apply a small change to parts of the API without...:\n\n- thinking about all the remaining API that deals with similar topics that needs to be considered\n- thinking about secondary features, like the parser (and its grammar), that needs to be updated\n- thinking about possible existing functionality, that should be merged with this one\n- thinking about possible deprecations that need to be implemented\n- thinking about backwards compatibility in its many subtle ways (source, binary, behavioural)\n- thinking about the many places in the manual that need to be updated\n- thinking about the fact that jOOQ is dual licensed, and your contribution won't work on commercial database (but it has to, so that'll be our job again)\n\nPlus:\n\n- the tests aren't open source, so you can't validate your own contribution, nor prove that it is sound, via tests\n- the manual isn't open source, so you can't contribute that\n- the commercial distributions aren't open source, and perhaps, the implementation there needs to be different\n\nOften, workarounds are good enough\n----------------------------------\n\nBut even more importantly, just because you have an itch *right now*, doesn't mean it needs to be scratched *right now* (with new API). Quite possibly, a simple workaround will do just as well for you, and it won't cause all of the above efforts both on your side and on our side. In fact, we've become really good at listing 3-4 useful workarounds (using features you probably don't know yet) for just about any problem (which we've probably even seen before). Just because you're about to make a PR doesn't mean we'll prioritise merging it. In fact, experience shows that we hardly ever merge them *at all*!\n\nProduct roadmap\n---------------\n\nOver time, we will remember the many itches reported by jOOQ users and consolidate them into a much more thoroughly designed new feature that helps many other users, not just your immediate itch. It will be much easier to maintain and have much better quality.\n\nUnfortunately, Github doesn't allow for turning on the issue tracker (very well done and useful) without turning on the PR subsystem (which seems to hint at users that they can contribute *anything* to *anyone* and reasonably expect the contribution to be merged). Think about the OpenJDK. Would you contribute tons of new methods to the `java.util.Collection` API without thoroughly discussing things first on the many OpenJDK mailing lists? Probably not. The same is true here.\n\nThanks a lot for your understanding, and we're definitely looking forward to your suggestions and discussions on the [issue tracker](https://github.com/jOOQ/jOOQ/issues/new) or the [mailing list](https://groups.google.com/d/forum/jooq-user)\n\nThe ideal PR\n============\n\nThanks again for offering your help. This section is for PRs that fix simple issues, which don't need any discussion - like typos, minor bugs, etc.\n\nIn order to make our cooperation as smooth as possible, we have a couple of guidelines that we'd like you to follow:\n\n- **If in doubt, please discuss your ideas first before providing a pull request. See above.**\n- Fork the repository.\n- Check out and work on your own fork.\n- Try to make your commits as atomic as possible. Related changes to three files should be committed in one commit.\n- The commit message should reference the issue number, e.g. `[#5873] Add Setting.quoteEscaping to allow for alternative escaping of single quotes`.\n- Try not to modify anything unrelated, i.e. don't make unimportant whitespace / formatting changes, which will just distract during review.\n- **In particular, please do not remove excess whitespace / unnecessary imports etc. The jOOQ Open Source Edition is a \"derived clone\" of the commercial jOOQ distributions. We'd like to keep all line numbers intact between the two versions!**\n- Don't worry about tests. Our unit and integration tests are not open source. If your change is substantial, we'll add tests ourselves.\n- Add your name to our [jOOQ/src/main/resources/META-INF/ABOUT.txt](https://github.com/jOOQ/jOOQ/blob/main/jOOQ/src/main/resources/META-INF/ABOUT.txt) file\n- Be sure you agree to transfer your rights to us (see below) before contributing.\n\nContributing to dual-licensed Open Source\n=========================================\n\nThank you very much for contributing to jOOQ.\n\njOOQ is dual-licensed Open Source software. While the version published here on GitHub is [ASL 2.0](http://www.apache.org/licenses/LICENSE-2.0) licensed, we also ship jOOQ under a commercial license to those customers who want to use jOOQ with commercial databases. For more information about commercial licensing, please refer to this website:\n[http://www.jooq.org/legal/licensing](http://www.jooq.org/legal/licensing)\n\nOur dual-licensing means that we need you to transfer all rights to your contribution to us, [Data Geekery GmbH](http://www.datageekery.com), in order to be able to re-license your contribution also to our commercial customers, if your contribution consists in any of the following:\n\n- Source code to be embedded into jOOQ deliverables\n- Source code to be embedded into jOOQ integration tests\n- Content to be embedded into our manual\n\nNo transfer of rights is needed for the following:\n\n- Bug reports\n- Feature requests and discussions\n- Example code to reproduce bugs (e.g. through https://github.com/jOOQ/jOOQ-mcve)\n\nIf your contribution requires a transfer of rights, please sign the following document before proceeding:\nhttp://www.jooq.org/legal/contributions\n\nThank you again very much for your contribution\nThe jOOQ Team\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 0.8515625,
          "content": "Licensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n https://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\nOther licenses:\n-----------------------------------------------------------------------------\nCommercial licenses for this work are available. These replace the above\nApache-2.0 license and offer limited warranties, support, maintenance, and\ncommercial database integrations.\n\nFor more information, please visit: https://www.jooq.org/legal/licensing"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 8.330078125,
          "content": "jOOQ\n====\n\njOOQ is an internal DSL and source code generator, modelling the SQL language as a type safe Java API to help you write better SQL. \n\nIts main features include:\n\n- [The source code generator](https://blog.jooq.org/why-you-should-use-jooq-with-code-generation/)\n- The [DSL API for type safe query construction](https://www.jooq.org/doc/latest/manual/sql-building/dsl-api/) and [dynamic SQL](https://www.jooq.org/doc/latest/manual/sql-building/dynamic-sql/)\n\nSecondary features include:\n\n- [DAOs](https://www.jooq.org/doc/latest/manual/sql-execution/daos/)\n- [Data export](https://www.jooq.org/doc/latest/manual/sql-execution/exporting/) and [import](https://www.jooq.org/doc/latest/manual/sql-execution/importing/)\n- [Data type conversion](https://www.jooq.org/doc/latest/manual/sql-execution/fetching/data-type-conversion/)\n- [DDL statement support](https://www.jooq.org/doc/latest/manual/sql-building/ddl-statements/)\n- [DML statement support](https://www.jooq.org/doc/latest/manual/sql-building/sql-statements/)\n- [Diagnostics](https://www.jooq.org/doc/latest/manual/sql-execution/diagnostics/)\n- [Dialect agnosticity for 30+ RDBMS](https://www.jooq.org/download/#databases)\n- [Embedded types](https://www.jooq.org/doc/latest/manual/code-generation/codegen-embeddable-types/)\n- [Formatting and pretty printing](https://www.jooq.org/doc/latest/manual/sql-building/queryparts/pretty-printing/)\n- [Implicit joins](https://www.jooq.org/doc/latest/manual/sql-building/sql-statements/select-statement/implicit-join/)\n- [Kotlin support](https://www.jooq.org/doc/latest/manual/sql-building/kotlin-sql-building/)\n- [Mapping](https://www.jooq.org/doc/latest/manual/sql-execution/fetching/recordmapper/)\n- [Meta data API](https://www.jooq.org/doc/latest/manual/sql-execution/meta-data/)\n- [Mocking API for JDBC](https://www.jooq.org/doc/latest/manual/sql-execution/mocking-connection/)\n- [Model API for use in traversal and replacement](https://www.jooq.org/doc/latest/manual/sql-building/model-api/)\n- [`MULTISET` and `ROW` nested collections and records](https://blog.jooq.org/jooq-3-15s-new-multiset-operator-will-change-how-you-think-about-sql/)\n- [Multitenancy](https://www.jooq.org/doc/latest/manual/sql-building/dsl-context/custom-settings/settings-render-mapping/)\n- [Parser (and translator)](https://www.jooq.org/doc/latest/manual/sql-building/sql-parser/)\n- [Pattern based transformation](https://www.jooq.org/doc/latest/manual/sql-building/queryparts/sql-transformation/transform-patterns/)\n- [Plain SQL templating](https://www.jooq.org/doc/latest/manual/sql-building/plain-sql-templating/)\n- [Policies](https://www.jooq.org/doc/latest/manual/sql-building/queryparts/policies/)\n- [Procedural logic API](https://blog.jooq.org/vendor-agnostic-dynamic-procedural-logic-with-jooq/)\n- [Reactive support via R2DBC](https://www.jooq.org/doc/latest/manual/sql-execution/fetching/reactive-fetching/)\n- [Readonly columns](https://www.jooq.org/doc/latest/manual/code-generation/codegen-advanced/codegen-config-database/codegen-database-readonly-columns/)\n- [Scala support](https://www.jooq.org/doc/latest/manual/sql-building/scala-sql-building/)\n- [Schema diff](https://www.jooq.org/doc/latest/manual/sql-building/schema-diff/)\n- [SQL transformation](https://www.jooq.org/doc/latest/manual/sql-building/queryparts/sql-transformation/)\n- [SQL translation](https://www.jooq.org/translate/)\n- [Stored procedure support](https://blog.jooq.org/the-best-way-to-call-stored-procedures-from-java-with-jooq/)\n- [Transaction API](https://www.jooq.org/doc/latest/manual/sql-execution/transaction-management/)\n- [UpdatableRecords for simplified CRUD, with opt-in optimistic locking](https://www.jooq.org/doc/latest/manual/sql-execution/crud-with-updatablerecords/simple-crud/)\n- And much more\n\nExamples\n========\n\nTypesafe, embedded SQL\n----------------------\n\njOOQ's main feature is typesafe, embedded SQL, allowing for IDE auto completion of SQL syntax...\n\n![image](https://github.com/jOOQ/jOOQ/assets/734593/a62305d7-c8a7-4a32-aa32-30708f70337d)\n\n... as well as of schema meta data:\n\n![image](https://github.com/jOOQ/jOOQ/assets/734593/a8e23067-254c-4a03-89b2-82985325ee69)\n\nThis allows for preventing errors of various types, including typos of identifiers:\n\n![image](https://github.com/jOOQ/jOOQ/assets/734593/d2659a0c-7d45-4851-9455-81ac4bc18485)\n\nOr data type mismatches:\n\n![image](https://github.com/jOOQ/jOOQ/assets/734593/8d230f16-ce82-4de8-88b2-64997451ebfe)\n\n[The examples are from the code generation blog post](https://blog.jooq.org/why-you-should-use-jooq-with-code-generation/).\n\nA more powerful example using nested collections\n------------------------------------------------\n\nFor many more examples, [please have a look at the demo](https://github.com/jOOQ/demo). A key example showing jOOQ's various strengths is from the [`MULTISET` operator announcement blog post](https://blog.jooq.org/jooq-3-15s-new-multiset-operator-will-change-how-you-think-about-sql/):\n\nGiven these target DTOs:\n\n```java\nrecord Actor(String firstName, String lastName) {}\nrecord Film(\n  String title,\n  List<Actor> actors,\n  List<String> categories\n) {}\n```\n\nYou can now write the following query to fetch films, their nested actors and their nested categorise in a single, type safe query:\n\n```java\nList<Film> result =\ndsl.select(\n      FILM.TITLE,\n      multiset(\n        select(\n          FILM.actor().FIRST_NAME, \n          FILM.actor().LAST_NAME)\n        .from(FILM.actor())\n      ).as(\"actors\").convertFrom(r -> r.map(mapping(Actor::new))),\n      multiset(\n        select(FILM.category().NAME)\n        .from(FILM.category())\n      ).as(\"categories\").convertFrom(r -> r.map(Record1::value1))\n   )\n   .from(FILM)\n   .orderBy(FILM.TITLE)\n   .fetch(mapping(Film::new));\n```\n\nThe query is completely type safe. Change a column type, name, or the target DTO, and it will stop compiling! Trust only your own eyes:\n\n![multiset](https://github.com/jOOQ/jOOQ/assets/734593/948f8e62-2a93-4152-86d6-42a6eceb7133)\n\nAnd here you see the nested result in action from the logs:\n\n![execute](https://github.com/jOOQ/jOOQ/assets/734593/ba2f2a9f-218c-4ec9-8fb2-c2b8b7df2f4d)\n\nHow does it work? Look at this annotated example:\n\n\n```java\nList<Film> result =\ndsl.select(\n      FILM.TITLE,\n\n      // MULTISET is a standard SQL operator that allows for nesting collections\n      // directly in SQL. It is either\n      // - supported natively\n      // - emulated using SQL/JSON or SQL/XML\n      multiset(\n\n        // Implicit path based joins allow for simpler navigation of foreign\n        // key relationships.\n        select(\n          FILM.actor().FIRST_NAME, \n          FILM.actor().LAST_NAME)\n\n        // Implicit correlation to outer queries allows for avoiding repetitive\n        // writing of predicates.\n        .from(FILM.actor())\n\n      // Ad-hoc conversion allows for mapping structural Record2<String, String>\n      // types to your custom DTO using constructor references\n      ).as(\"actors\").convertFrom(r -> r.map(mapping(Actor::new))),\n      multiset(\n        select(FILM.category().NAME)\n        .from(FILM.category())\n      ).as(\"categories\").convertFrom(r -> r.map(Record1::value1))\n   )\n   .from(FILM)\n   .orderBy(FILM.TITLE)\n   .fetch(mapping(Film::new));\n```\n\nThe generated SQL query might look like this, in PostgreSQL:\n\n```sql\nselect\n  film.title,\n  (\n    select coalesce(\n      jsonb_agg(jsonb_build_object(\n        'first_name', t.first_name,\n        'last_name', t.last_name\n      )),\n      jsonb_build_array()\n    )\n    from (\n      select\n        alias_78509018.first_name, \n        alias_78509018.last_name\n      from (\n        film_actor\n          join actor as alias_78509018\n            on film_actor.actor_id = alias_78509018.actor_id\n        )\n      where film_actor.film_id = film.film_id\n    ) as t\n  ) as actors,\n  (\n    select coalesce(\n      jsonb_agg(jsonb_build_object('name', t.name)),\n      jsonb_build_array()\n    )\n    from (\n      select alias_130639425.name\n      from (\n        film_category\n          join category as alias_130639425\n            on film_category.category_id = alias_130639425.category_id\n        )\n      where film_category.film_id = film.film_id\n    ) as t\n  ) as categories\nfrom film\norder by film.title\n```\n\nThis particular example is explained more in detail in the [`MULTISET` operator announcement blog post](https://blog.jooq.org/jooq-3-15s-new-multiset-operator-will-change-how-you-think-about-sql/). For many more examples, [please have a look at the demo](https://github.com/jOOQ/demo).\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.1865234375,
          "content": "# Reporting a Vulnerability\n\nPlease contact security@datageekery.com to report a vulnerability. Please **do not** report the vulnerability as a public issue before we had a chance to fix it.\n"
        },
        {
          "name": "jOOQ-beans-extensions",
          "type": "tree",
          "content": null
        },
        {
          "name": "jOOQ-checker",
          "type": "tree",
          "content": null
        },
        {
          "name": "jOOQ-codegen-gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "jOOQ-codegen-maven",
          "type": "tree",
          "content": null
        },
        {
          "name": "jOOQ-codegen",
          "type": "tree",
          "content": null
        },
        {
          "name": "jOOQ-jackson-extensions",
          "type": "tree",
          "content": null
        },
        {
          "name": "jOOQ-jpa-extensions",
          "type": "tree",
          "content": null
        },
        {
          "name": "jOOQ-kotlin-coroutines",
          "type": "tree",
          "content": null
        },
        {
          "name": "jOOQ-kotlin",
          "type": "tree",
          "content": null
        },
        {
          "name": "jOOQ-meta-extensions-hibernate",
          "type": "tree",
          "content": null
        },
        {
          "name": "jOOQ-meta-extensions-liquibase",
          "type": "tree",
          "content": null
        },
        {
          "name": "jOOQ-meta-extensions",
          "type": "tree",
          "content": null
        },
        {
          "name": "jOOQ-meta-kotlin",
          "type": "tree",
          "content": null
        },
        {
          "name": "jOOQ-meta",
          "type": "tree",
          "content": null
        },
        {
          "name": "jOOQ-migrations-maven",
          "type": "tree",
          "content": null
        },
        {
          "name": "jOOQ-migrations",
          "type": "tree",
          "content": null
        },
        {
          "name": "jOOQ-postgres-extensions",
          "type": "tree",
          "content": null
        },
        {
          "name": "jOOQ-scala_3.5",
          "type": "tree",
          "content": null
        },
        {
          "name": "jOOQ-xtend",
          "type": "tree",
          "content": null
        },
        {
          "name": "jOOQ",
          "type": "tree",
          "content": null
        },
        {
          "name": "pom.xml",
          "type": "blob",
          "size": 32.232421875,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n\n    <modelVersion>4.0.0</modelVersion>\n\n    <groupId>org.jooq</groupId>\n    <artifactId>jooq-parent</artifactId>\n    <version>3.20.0-SNAPSHOT</version>\n    <packaging>pom</packaging>\n\n    <name>jOOQ Parent</name>\n\n    <description>\n        jOOQ effectively combines complex SQL, typesafety, source code generation, active records,\n        stored procedures, advanced data types, and Java in a fluent, intuitive DSL.\n    </description>\n\n    <url>https://www.jooq.org</url>\n\n    <properties>\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\n\n        <!-- These in-memory DBs are used by jOOQ-meta-extensions and a variety of integration tests -->\n        <h2.version>2.3.232</h2.version>\n        <sqlite.version>3.46.1.0</sqlite.version>\n        <duckdb.version>1.1.1</duckdb.version>\n        <derby.version>10.14.2.0</derby.version>\n        <hsqldb.version>2.7.2</hsqldb.version>\n\n        <!-- JDBC drivers for jOOQ-xyz-extensions modules and vendor-specific API access -->\n        <postgres.version>42.7.3</postgres.version>\n        <sqlserver.version>12.9.0.jre11-preview</sqlserver.version>\n        <oracle.version>23.6.0.24.10</oracle.version>\n\n        <!-- R2DBC SPI version and some matching driver versions -->\n        <io.r2dbc.version>1.0.0.RELEASE</io.r2dbc.version>\n\n        <!-- From JDK 21 onwards, this is the required version of Xtend -->\n        <xtend.version>2.32.0</xtend.version>\n\n        <!-- From JDK 11 onwards, we need to depend on the JAXB API explicitly -->\n        <jaxb.version>4.0.1</jaxb.version>\n        <jaxb.impl.version>4.0.4</jaxb.impl.version>\n\n        <!-- Java version -->\n        <java.version>21</java.version>\n\n        <!-- Scala versions -->\n        <scala.version>2.13.14</scala.version>\n        <scala3.version>3.5.0</scala3.version>\n\n        <!-- Kotlin versions -->\n        <kotlin.version>1.8.0</kotlin.version>\n        <kotlin2.version>2.0.0</kotlin2.version>\n        <kotlinx.coroutines.version>1.7.3</kotlinx.coroutines.version>\n\n        <!-- DefaultRecordMapper and jOOQ-meta-extensions can read JPA annotations -->\n        <jakarta.persistence-api.version>3.0.0</jakarta.persistence-api.version>\n\n        <!-- Examples and/or extension modules use these dependencies -->\n        <hibernate.version>5.6.15.Final</hibernate.version>\n        <liquibase.version>4.25.1</liquibase.version>\n        <checkerframework.version>3.44.0</checkerframework.version>\n        <spring.version>6.1.14</spring.version>\n        <errorprone.version>2.36.0</errorprone.version>\n        <testcontainers.version>1.20.4</testcontainers.version>\n        <jackson.version>2.16.1</jackson.version>\n        <jackson.version.databind>2.16.1</jackson.version.databind>\n        <jetbrains.annotations.version>24.1.0</jetbrains.annotations.version>\n    </properties>\n\n    <licenses>\n        <license>\n            <name>Apache License, Version 2.0</name>\n            <url>https://www.jooq.org/inc/LICENSE.txt</url>\n            <distribution>repo</distribution>\n        </license>\n\n\n\n\n\n\n\n    </licenses>\n\n    <scm>\n        <developerConnection>https://github.com/jOOQ/jOOQ.git</developerConnection>\n        <url>https://github.com/jOOQ/jOOQ.git</url>\n        <connection>git://github.com/jOOQ/jOOQ.git</connection>\n    </scm>\n\n    <developers>\n        <developer>\n            <name>Data Geekery</name>\n            <email>contact@datageekery.com</email>\n        </developer>\n    </developers>\n\n    <issueManagement>\n        <system>GitHub</system>\n        <url>https://github.com/jOOQ/jOOQ/issues</url>\n    </issueManagement>\n\n    <dependencyManagement>\n        <dependencies>\n            <dependency>\n                <groupId>org.jooq</groupId>\n                <artifactId>jooq</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.jooq</groupId>\n                <artifactId>jooq-checker</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.jooq</groupId>\n                <artifactId>jooq-beans-extensions</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.jooq</groupId>\n                <artifactId>jooq-jpa-extensions</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.jooq</groupId>\n                <artifactId>jooq-postgres-extensions</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.jooq</groupId>\n                <artifactId>jooq-jackson-extensions</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.jooq</groupId>\n                <artifactId>jooq-codegen</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.jooq</groupId>\n                <artifactId>jooq-codegen-maven</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.jooq</groupId>\n                <artifactId>jooq-migrations-maven</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.jooq</groupId>\n                <artifactId>jooq-meta</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.jooq</groupId>\n                <artifactId>jooq-meta-extensions</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.jooq</groupId>\n                <artifactId>jooq-meta-extensions-hibernate</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.jooq</groupId>\n                <artifactId>jooq-meta-extensions-liquibase</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.jooq</groupId>\n                <artifactId>jooq-kotlin</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.jooq</groupId>\n                <artifactId>jooq-kotlin-coroutines</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>org.jetbrains</groupId>\n                <artifactId>annotations</artifactId>\n                <version>${jetbrains.annotations.version}</version>\n            </dependency>\n\n            <!-- R2DBC SPI and driver dependencies -->\n            <dependency>\n                <groupId>io.projectreactor</groupId>\n                <artifactId>reactor-core</artifactId>\n                <version>3.6.1</version>\n            </dependency>\n            <dependency>\n                <groupId>io.projectreactor</groupId>\n                <artifactId>reactor-test</artifactId>\n                <version>3.6.1</version>\n            </dependency>\n\n            <!-- Data binding -->\n            <dependency>\n                <groupId>com.fasterxml.jackson.core</groupId>\n                <artifactId>jackson-databind</artifactId>\n                <version>${jackson.version.databind}</version>\n            </dependency>\n            <dependency>\n                <groupId>com.fasterxml.jackson.core</groupId>\n                <artifactId>jackson-core</artifactId>\n                <version>${jackson.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>com.fasterxml.jackson.datatype</groupId>\n                <artifactId>jackson-datatype-jsr310</artifactId>\n                <version>${jackson.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>com.fasterxml.jackson.module</groupId>\n                <artifactId>jackson-module-kotlin</artifactId>\n                <version>${jackson.version}</version>\n            </dependency>\n\n            <!-- At the point of release 3.16, it seems not all drivers have been upgraded to 0.9.0.RELEASE yet -->\n            <dependency>\n                <groupId>io.r2dbc</groupId>\n                <artifactId>r2dbc-spi</artifactId>\n                <version>${io.r2dbc.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>org.jetbrains.kotlin</groupId>\n                <artifactId>kotlin-stdlib</artifactId>\n                <version>${kotlin.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.jetbrains.kotlin</groupId>\n                <artifactId>kotlin-stdlib-jdk8</artifactId>\n                <version>${kotlin.version}</version>\n            </dependency>\n\n            <!-- Needed for mapping into Kotlin data classes -->\n            <dependency>\n                <groupId>org.jetbrains.kotlin</groupId>\n                <artifactId>kotlin-reflect</artifactId>\n                <version>${kotlin.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>org.jetbrains.kotlinx</groupId>\n                <artifactId>kotlinx-coroutines-core</artifactId>\n                <version>${kotlinx.coroutines.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.jetbrains.kotlinx</groupId>\n                <artifactId>kotlinx-coroutines-reactor</artifactId>\n                <version>${kotlinx.coroutines.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>org.jooq</groupId>\n                <artifactId>jooq-scala_3.5</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            <dependency>\n                <groupId>org.jooq</groupId>\n                <artifactId>jooq-xtend</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>org.eclipse.xtend</groupId>\n                <artifactId>org.eclipse.xtend.lib</artifactId>\n                <version>${xtend.version}</version>\n            </dependency>\n\n            <!-- From JDK 9 onwards, the JAXB dependency needs to be made explicit -->\n            <!-- The dependency can cause trouble in older JDKs, so it needs to be\n                 excluded from pre-java-9 builds: https://github.com/jOOQ/jOOQ/issues/7649 -->\n            <dependency>\n                <groupId>jakarta.xml.bind</groupId>\n                <artifactId>jakarta.xml.bind-api</artifactId>\n                <version>${jaxb.version}</version>\n            </dependency>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            <!-- Optional logging dependencies -->\n            <dependency>\n                <groupId>org.slf4j</groupId>\n                <artifactId>slf4j-api</artifactId>\n                <version>2.0.9</version>\n                <scope>provided</scope>\n                <optional>true</optional>\n            </dependency>\n            <dependency>\n                <groupId>org.apache.logging.log4j</groupId>\n                <artifactId>log4j-slf4j2-impl</artifactId>\n                <version>2.20.0</version>\n                <scope>provided</scope>\n                <optional>true</optional>\n            </dependency>\n            <dependency>\n                <groupId>org.apache.logging.log4j</groupId>\n                <artifactId>log4j-core</artifactId>\n                <version>2.20.0</version>\n                <scope>provided</scope>\n                <optional>true</optional>\n            </dependency>\n\n            <!-- Optional JPA dependency -->\n            <dependency>\n                <groupId>jakarta.persistence</groupId>\n                <artifactId>jakarta.persistence-api</artifactId>\n                <version>${jakarta.persistence-api.version}</version>\n                <scope>provided</scope>\n                <optional>true</optional>\n            </dependency>\n\n            <dependency>\n                <groupId>junit</groupId>\n                <artifactId>junit</artifactId>\n                <version>4.13.2</version>\n                <scope>test</scope>\n            </dependency>\n            <dependency>\n                <groupId>org.scalatest</groupId>\n                <artifactId>scalatest_2.10</artifactId>\n                <version>3.0.8</version>\n                <scope>test</scope>\n            </dependency>\n            <dependency>\n                <groupId>org.scalatest</groupId>\n                <artifactId>scalatest_2.11</artifactId>\n                <version>3.0.8</version>\n                <scope>test</scope>\n            </dependency>\n            <dependency>\n                <groupId>org.scalatest</groupId>\n                <artifactId>scalatest_2.12</artifactId>\n                <version>3.0.8</version>\n                <scope>test</scope>\n            </dependency>\n            <dependency>\n                <groupId>org.scalatest</groupId>\n                <artifactId>scalatest_2.13</artifactId>\n                <version>3.0.8</version>\n                <scope>test</scope>\n            </dependency>\n            <dependency>\n                <groupId>org.scalatest</groupId>\n                <artifactId>scalatest_3</artifactId>\n                <version>3.2.19</version>\n                <scope>test</scope>\n            </dependency>\n\n            <!-- Some projects will need an H2 database for testing, or to create temporary in-memory databases -->\n            <dependency>\n                <groupId>com.h2database</groupId>\n                <artifactId>h2</artifactId>\n                <version>${h2.version}</version>\n            </dependency>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            <!-- Some examples require testcontainers as dependencies -->\n            <dependency>\n                <groupId>org.testcontainers</groupId>\n                <artifactId>testcontainers</artifactId>\n                <version>${testcontainers.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.testcontainers</groupId>\n                <artifactId>clickhouse</artifactId>\n                <version>${testcontainers.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.testcontainers</groupId>\n                <artifactId>mariadb</artifactId>\n                <version>${testcontainers.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.testcontainers</groupId>\n                <artifactId>mysql</artifactId>\n                <version>${testcontainers.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.testcontainers</groupId>\n                <artifactId>postgresql</artifactId>\n                <version>${testcontainers.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.testcontainers</groupId>\n                <artifactId>trino</artifactId>\n                <version>${testcontainers.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.testcontainers</groupId>\n                <artifactId>yugabytedb</artifactId>\n                <version>${testcontainers.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.firebirdsql</groupId>\n                <artifactId>firebird-testcontainers-java</artifactId>\n                <version>1.3.0</version>\n            </dependency>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            <!-- jooq-meta-extensions and integration tests have this dependency -->\n            <dependency>\n                <groupId>org.hibernate</groupId>\n                <artifactId>hibernate-core-jakarta</artifactId>\n                <version>${hibernate.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.springframework</groupId>\n                <artifactId>spring-context</artifactId>\n                <version>${spring.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.springframework</groupId>\n                <artifactId>spring-jdbc</artifactId>\n                <version>${spring.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.springframework</groupId>\n                <artifactId>spring-r2dbc</artifactId>\n                <version>${spring.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.springframework</groupId>\n                <artifactId>spring-orm</artifactId>\n                <version>${spring.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.springframework</groupId>\n                <artifactId>spring-test</artifactId>\n                <version>${spring.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.springframework</groupId>\n                <artifactId>spring-core</artifactId>\n                <version>${spring.version}</version>\n            </dependency>\n\n            <!-- jooq-meta-extensions and integration tests have this dependency -->\n            <dependency>\n                <groupId>org.liquibase</groupId>\n                <artifactId>liquibase-core</artifactId>\n                <version>${liquibase.version}</version>\n            </dependency>\n\n            <!-- checker framework and error prone dependency for use with jOOQ-checker -->\n            <dependency>\n                <groupId>org.checkerframework</groupId>\n                <artifactId>checker</artifactId>\n                <version>${checkerframework.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.google.errorprone</groupId>\n                <artifactId>error_prone_core</artifactId>\n                <version>${errorprone.version}</version>\n                <scope>provided</scope>\n            </dependency>\n            <dependency>\n                <groupId>com.google.errorprone</groupId>\n                <artifactId>error_prone_annotation</artifactId>\n                <version>${errorprone.version}</version>\n                <scope>provided</scope>\n            </dependency>\n            <dependency>\n                <groupId>com.google.errorprone</groupId>\n                <artifactId>error_prone_refaster</artifactId>\n                <version>${errorprone.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>com.google.auto.service</groupId>\n                <artifactId>auto-service</artifactId>\n                <version>1.0-rc6</version>\n                <optional>true</optional>\n            </dependency>\n            <dependency>\n                <groupId>com.google.auto.service</groupId>\n                <artifactId>auto-service-annotations</artifactId>\n                <version>1.0-rc6</version>\n                <optional>true</optional>\n            </dependency>\n\n            <!-- Maven plugin dependencies -->\n            <dependency>\n                <groupId>org.apache.maven</groupId>\n                <artifactId>maven-plugin-api</artifactId>\n                <version>3.9.2</version>\n            </dependency>\n            <dependency>\n                <groupId>org.apache.maven</groupId>\n                <artifactId>maven-core</artifactId>\n                <version>3.9.2</version>\n            </dependency>\n            <dependency>\n                <groupId>org.apache.maven.plugin-tools</groupId>\n                <artifactId>maven-plugin-annotations</artifactId>\n                <version>3.8.2</version>\n            </dependency>\n        </dependencies>\n    </dependencyManagement>\n\n    <build>\n        <finalName>${project.artifactId}-${project.version}</finalName>\n        <pluginManagement>\n            <plugins>\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-compiler-plugin</artifactId>\n                    <version>3.13.0</version>\n\n                    <configuration>\n                        <!-- When compilers say false, they mean true ...\n                             https://issues.apache.org/jira/browse/MCOMPILER-209 -->\n                        <useIncrementalCompilation>false</useIncrementalCompilation>\n                        <fork>true</fork>\n                        <maxmem>512m</maxmem>\n                        <meminitial>256m</meminitial>\n                        <encoding>UTF-8</encoding>\n\n                        <release>21</release>\n\n\n                        <!-- IntelliJ needs these https://youtrack.jetbrains.com/issue/IDEA-195472 -->\n                        <source>21</source>\n                        <target>21</target>\n\n                        <debug>true</debug>\n                        <debuglevel>lines,vars,source</debuglevel>\n                        <!-- [#2413] Make compiler warnings a bit more visible\n                             But don't fail (yet) -->\n                        <compilerArgs>\n                            <arg>-Xlint:varargs</arg>\n                        </compilerArgs>\n                    </configuration>\n                </plugin>\n\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-source-plugin</artifactId>\n                    <version>3.2.1</version>\n                    <inherited>true</inherited>\n                    <executions>\n                        <execution>\n                            <id>attach-sources</id>\n                            <goals>\n                                <goal>jar</goal>\n                            </goals>\n                        </execution>\n                    </executions>\n                    <configuration>\n                        <excludeResources>true</excludeResources>\n                        <useDefaultExcludes>true</useDefaultExcludes>\n                    </configuration>\n                </plugin>\n\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-javadoc-plugin</artifactId>\n                    <version>3.5.0</version>\n                    <inherited>true</inherited>\n                    <executions>\n                        <execution>\n                            <id>bundle-sources</id>\n                            <phase>package</phase>\n                            <goals>\n                                <goal>jar</goal>\n                            </goals>\n                        </execution>\n                    </executions>\n                    <configuration>\n                        <maxmemory>1024</maxmemory>\n                        <encoding>UTF-8</encoding>\n                        <show>protected</show>\n                        <notree>true</notree>\n                        <!-- Explicit configuration of javadoc language to avoid defaulting to build system's configuration -->\n                        <locale>en</locale>\n\n                        <!-- Avoid running into Java 8's very restrictive doclint issues -->\n                        <additionalparam>-Xdoclint:none</additionalparam>\n                        <additionalOptions>-Xdoclint:none</additionalOptions>\n                    </configuration>\n                </plugin>\n\n                <plugin>\n                    <groupId>org.apache.felix</groupId>\n                    <artifactId>maven-bundle-plugin</artifactId>\n                    <version>5.1.8</version>\n\n                    <!-- [#10150] Required to build on JDK 15 -->\n                    <dependencies>\n                        <dependency>\n                            <groupId>biz.aQute.bnd</groupId>\n                            <artifactId>biz.aQute.bndlib</artifactId>\n                            <version>5.1.2</version>\n                        </dependency>\n                    </dependencies>\n                </plugin>\n\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-plugin-plugin</artifactId>\n                    <version>3.8.2</version>\n\n                    <!-- Required for Java 19 -->\n                    <dependencies>\n                        <dependency>\n                            <groupId>org.ow2.asm</groupId>\n                            <artifactId>asm</artifactId>\n                            <version>9.6</version>\n                        </dependency>\n                    </dependencies>\n                </plugin>\n\n                <plugin>\n                    <groupId>org.codehaus.mojo</groupId>\n                    <artifactId>sql-maven-plugin</artifactId>\n                    <version>1.5</version>\n                </plugin>\n\n                <plugin>\n                    <groupId>org.springframework.boot</groupId>\n                    <artifactId>spring-boot-maven-plugin</artifactId>\n                    <version>${spring.boot.version}</version>\n                </plugin>\n\n                <plugin>\n                    <groupId>net.alchim31.maven</groupId>\n                    <artifactId>scala-maven-plugin</artifactId>\n                    <version>4.8.1</version>\n                    <configuration>\n                        <args>\n                            <arg>-deprecation</arg>\n                            <arg>-feature</arg>\n                        </args>\n                    </configuration>\n                </plugin>\n\n                <plugin>\n                    <artifactId>kotlin-maven-plugin</artifactId>\n                    <groupId>org.jetbrains.kotlin</groupId>\n                    <version>${kotlin.version}</version>\n\n                    <executions>\n                        <execution>\n                            <id>compile</id>\n                            <phase>process-sources</phase>\n                            <goals>\n                                <goal>compile</goal>\n                            </goals>\n                            <configuration>\n                                <sourceDirs>\n                                    <source>src/main/java</source>\n                                    <source>src/main/kotlin</source>\n                                    <source>src/main/resources</source>\n                                </sourceDirs>\n                            </configuration>\n                        </execution>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                    </executions>\n                </plugin>\n\n                <plugin>\n                    <groupId>org.eclipse.xtend</groupId>\n                    <artifactId>xtend-maven-plugin</artifactId>\n                    <version>${xtend.version}</version>\n\n                    <configuration>\n                        <encoding>UTF-8</encoding>\n                    </configuration>\n\n                    <dependencies>\n                        <dependency>\n                            <groupId>com.google.inject</groupId>\n                            <artifactId>guice</artifactId>\n                            <version>5.0.1</version>\n                        </dependency>\n                    </dependencies>\n                </plugin>\n\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-surefire-plugin</artifactId>\n                    <version>3.1.0</version>\n                    <configuration>\n                        <testNGArtifactName>none:none</testNGArtifactName>\n                    </configuration>\n\n                    <!-- Required for Java 19 -->\n                    <dependencies>\n                        <dependency>\n                            <groupId>org.ow2.asm</groupId>\n                            <artifactId>asm</artifactId>\n                            <version>9.6</version>\n                        </dependency>\n                    </dependencies>\n                </plugin>\n\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-jar-plugin</artifactId>\n                    <version>3.3.0</version>\n\n                    <configuration>\n                        <archive>\n                            <manifestEntries>\n                                <Built-By>Data Geekery GmbH</Built-By>\n                            </manifestEntries>\n                        </archive>\n                    </configuration>\n                </plugin>\n\n                <plugin>\n                    <groupId>org.jooq</groupId>\n                    <artifactId>jooq-codegen-maven</artifactId>\n                    <version>${project.version}</version>\n                </plugin>\n\n                <plugin>\n                    <groupId>org.owasp</groupId>\n                    <artifactId>dependency-check-maven</artifactId>\n                    <version>8.2.1</version>\n                    <configuration>\n                        <failBuildOnCVSS>0</failBuildOnCVSS>\n                        <skipTestScope>true</skipTestScope>\n                    </configuration>\n                </plugin>\n            </plugins>\n        </pluginManagement>\n\n        <plugins>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-compiler-plugin</artifactId>\n            </plugin>\n\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-resources-plugin</artifactId>\n                <version>3.1.0</version>\n                <configuration>\n                    <encoding>UTF-8</encoding>\n                </configuration>\n            </plugin>\n        </plugins>\n    </build>\n\n    <modules>\n        <module>jOOQ</module>\n\n\n\n\n\n\n\n        <module>jOOQ-checker</module>\n        <module>jOOQ-beans-extensions</module>\n        <module>jOOQ-jackson-extensions</module>\n        <module>jOOQ-jpa-extensions</module>\n        <module>jOOQ-postgres-extensions</module>\n\n        <module>jOOQ-meta</module>\n        <module>jOOQ-meta-extensions</module>\n        <module>jOOQ-meta-extensions-hibernate</module>\n        <module>jOOQ-meta-extensions-liquibase</module>\n\n        <module>jOOQ-meta-kotlin</module>\n\n        <module>jOOQ-codegen</module>\n        <module>jOOQ-codegen-maven</module>\n        <module>jOOQ-migrations-maven</module>\n\n        <!-- The transitive egit dependency has a Java 11 baseline -->\n        <module>jOOQ-migrations</module>\n\n\n        <module>jOOQ-kotlin</module>\n        <module>jOOQ-kotlin-coroutines</module>\n        <module>jOOQ-scala_3.5</module>\n\n\n\n\n        <module>jOOQ-xtend</module>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    </modules>\n\n    <profiles>\n        <profile>\n            <id>owasp-check</id>\n            <build>\n                <plugins>\n                    <plugin>\n                        <groupId>org.owasp</groupId>\n                        <artifactId>dependency-check-maven</artifactId>\n                        <executions>\n                            <execution>\n                                <goals>\n                                    <goal>check</goal>\n                                </goals>\n                            </execution>\n                        </executions>\n                    </plugin>\n                </plugins>\n            </build>\n\n            <reporting>\n                <plugins>\n                    <plugin>\n                        <groupId>org.owasp</groupId>\n                        <artifactId>dependency-check-maven</artifactId>\n                    </plugin>\n                </plugins>\n            </reporting>\n        </profile>\n\n        <profile>\n            <id>default</id>\n            <activation>\n                <activeByDefault>true</activeByDefault>\n            </activation>\n        </profile>\n\n        <profile>\n            <id>all-modules</id>\n            <modules>\n                <!-- all modules which are not already listed as submodules -->\n\n\n\n\n\n\n\n\n\n            </modules>\n        </profile>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    </profiles>\n</project>\n"
        }
      ]
    }
  ]
}