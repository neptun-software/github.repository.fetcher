{
  "metadata": {
    "timestamp": 1736708847395,
    "page": 45,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjUw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "antlr/antlr4",
      "stars": 17459,
      "defaultBranch": "dev",
      "files": [
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 0.7021484375,
          "content": "---\n# This section defines defaults for all languages. Currently we derive ANTLR style from LLVM.\nBasedOnStyle: LLVM\n# Only use clang-format for C++ for now.\nDisableFormat: true\n\n---\n# This section configures C++ formatting.\nLanguage: Cpp\nDisableFormat: false\nStandard: c++17\n# Prevent clang-format from attempting to pick the alignment and always use right alignment.\nDerivePointerAlignment: false\n# ANTLR existing style is to right align pointers and references.\nPointerAlignment: Right\nReferenceAlignment: Right\n# Some of ANTLR existing code is longer than the default 80, so use 100 for now.\nColumnLimit: 100\n# Historically ANTLR has used indentation within namespaces, so replicate it.\nNamespaceIndentation: Inner\n"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.29296875,
          "content": "root = true\n\n[*]\ntab_width = 4\n\n[*.{java,stg}]\ncharset = utf-8\ninsert_final_newline = true\ntrim_trailing_whitespace = true\nindent_style = tab\nij_java_else_on_new_line = true\n\n[*.{h,cpp}]\ncharset = utf-8\ninsert_final_newline = true\ntrim_trailing_whitespace = true\nindent_style = space\nindent_size = 2\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.0791015625,
          "content": "# This rule applies to all files which don't match another line below\n* text=auto"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 2.4501953125,
          "content": "# Nuget packages\n*.nupkg\n\n# Maven build folders\ntarget/\n# ... but not code generation targets\n!tool/src/org/antlr/v4/codegen/target/\n\n# Node.js (npm and typings) cached dependencies\nnode_modules/\ntypings/\n\n# Ant build folders\nbuild/\ndist/\nlib/\nuser.build.properties\n\n# MacOSX files\n.DS_Store\n\n## Python, selected lines from https://raw.githubusercontent.com/github/gitignore/master/Python.gitignore\n# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\n*$py.class\n# Build results\n*.egg-info/\n\n## CSharp and VisualStudio, selected lines from https://raw.githubusercontent.com/github/gitignore/master/VisualStudio.gitignore\n# User-specific files\n*.suo\n*.user\n*.userosscache\n*.sln.docstates\n\n# User-specific files (MonoDevelop/Xamarin Studio/Visual Studio)\n*.userprefs\n.vs/\nproject.lock.json\n\n# Build results\n[Dd]ebug/\n[Dd]ebugPublic/\n[Rr]elease/\n[Rr]eleases/\nx64/\nx86/\nbld/\n[Bb]in/\n[Oo]bj/\n[Ll]og/\n\n# NetBeans user configuration files\nnbactions*.xml\n/nbproject/private/\n*/nbproject/private/\n\n# IntelliJ projects\n*.iws\n*.iml\n.idea/\n\n# Eclipse projects\n.classpath\n.project\n.settings/\n.metadata\n\n# Profiler results\n*.hprof\n\n# parrt's bash prompt data\n.fetch_time_cache\n\n# Playground\n#/tool/playground/\n\n# Generated files\n/out/\n/gen/\n/gen3/\n/gen4/\n/tool/playground/\ntmp/\n**/generatedCode/*.interp\n**/generatedCode/*.tokens\n**/generatedCode/*.bak\n\n# Configurable build files\nbilder.py\nbilder.pyc\nbild.log\n\nbild_output.txt\nruntime/Cpp/demo/generated\nxcuserdata\n*.jar\n.vscode\n\n# VSCode Java plugin temporary files\njavac-services.0.log\njavac-services.0.log.lck\n\n# Don't ignore python tests\n!runtime/Python3/test/\nAntlr4.sln\nruntime/PHP\n\n# Swift binaries\n.build/\n\n# Code coverage reports\ncoverage/\n\n# Cpp generated build files\nruntime/Cpp/CMakeCache.txt\nruntime/Cpp/CMakeFiles/\nruntime/Cpp/CPackConfig.cmake\nruntime/Cpp/CPackSourceConfig.cmake\nruntime/Cpp/CTestTestfile.cmake\nruntime/Cpp/Makefile\nruntime/Cpp/_deps/\nruntime/Cpp/cmake_install.cmake\nruntime/Cpp/runtime/CMakeFiles/\nruntime/Cpp/runtime/CTestTestfile.cmake\nruntime/Cpp/runtime/Makefile\nruntime/Cpp/runtime/antlr4_tests\nruntime/Cpp/runtime/antlr4_tests\\[1]_include.cmake\nruntime/Cpp/runtime/antlr4_tests\\[1]_tests.cmake\nruntime/Cpp/runtime/cmake_install.cmake\nruntime/Cpp/runtime/libantlr4-runtime.4.10.1.dylib\nruntime/Cpp/runtime/libantlr4-runtime.a\nruntime/Cpp/runtime/libantlr4-runtime.dylib\n/runtime/Cpp/runtime/libantlr4-runtime.4.12.0.dylib\n/runtime/Cpp/runtime/libantlr4-runtime.4.13.0.dylib\n\n# Go test and performance trace files\n**/*.pprof\n"
        },
        {
          "name": "ANTLR-HOUSE-RULES.md",
          "type": "blob",
          "size": 2.0458984375,
          "content": "# ANTLR HOUSE RULES\n\n*Last updated: Sept 10, 2022*\n\nThis brief document describes best practices for us to all get along and for the benefit of the project.  Collaborating on this project poses a number of difficulties:\n\n* different native languages\n* different time zones\n* lack of common company or other organization as social glue\n* we are just github userids without personal connection to most other contributors\n* those developers able to contribute to such a complex project typically have a lot of experience and, consequently, strong opinions\n\nEffective communication is difficult under the circumstances and civil discourse is a requirement to keep the project on track.  Over 35 years, in-fighting between contributors has made parrt's job as supreme dictator for life much more difficult.\n\nRules\n\n1. Assume good intentions of the other party.\n2. Try to be welcoming and respectful of differing viewpoints experiences.\n2. No personal attacks, meaning ideas can be bad in your comments but not people.  Replace \"You are ...\" with \"Your idea is ...\".\n3. Control your anger please. No hate speech, racism, sexism, or ethnocentrism. No trolling or insulting. See rule #1.\n2. Be tolerant and understanding of non-native English speakers' word choice and phrasing.  This is a huge source of misunderstandings; see rule #1. For example, to a native English speaker \"I cannot *approve* this\" makes it sound like the writer has control over the readers contribution. Instead, the writer likely meant \"I cannot *support* this.\" See rule #1.\n3. Soften word choice to use conditional tenses and helper words. For example, use phrases such as \"I'm not sure this is a good idea because ...\" or \"I wonder if you'd consider this other possibility: ...\" etc...\n\nSupreme dictator for life parrt has final say. His decisions will not always be correct nor to your liking, but he has a difficult cost-benefit equation to solve for every bug fix, feature, and PR.\n\nAny text contrary to these house rules will likely be edited and replaced with an admonishment by parrt.\n\nSend concerns to parrt@antlr.org."
        },
        {
          "name": "CHANGES.txt",
          "type": "blob",
          "size": 17.8720703125,
          "content": "****************************************************************************\nAs of ANTLR 4.2.1, March 25 2014, we are no longer updating this file. Instead,\nwe are using the github release mechanism. For example, here is\n4.2.1 release notes:\n\nhttps://github.com/antlr/antlr4/releases/tag/4.2.1\n****************************************************************************\n\nANTLR v4 Honey Badger\n\nJanuary 15, 2014\n\n* Unit tests for lexer actions from yesterday.\n* Refactored TreeView so we can refresh tree externally w/o creating new one.\n  Needed for intellij plugin.\n\nJanuary 14, 2014\n\n* Updated serialized ATN representation of lexer actions, allowing the lexer\n  interpreter to execute the majority of lexer commands (#408)\n\nJanuary 12, 2014\n\n* Support executing precedence predicates during the SLL phase of\n  adaptivePredict (#401). The result is a massive performance boost for grammars\n  containing direct left-recursion (improvements of 5% to 1000+% have been\n  observed, depending on the grammar and input).\n\nDecember 29, 2013\n\n* Internal change: Tool.loadGrammar() -> parseGrammar(). Tool.load()->parse()\n\n* Added Tool.loadGrammar(fileName) that completely parses, extracts implicit lexer,\n  and processes into Grammar object. Does not geneate code.  Use\n  Grammar.getImplicitLexer() to get the lexer created during processing of\n  combined grammar.\n\n* Added Grammar.load(fileName) that creates Tool object for you. loadGrammar()\n  lets you create your own Tool for setting error handlers etc...\n\n\tfinal Grammar g = Grammar.load(\"/tmp/MyGrammar.g4\");\n\nDecember 19, 2013\n\n* Sam:\n\tImproved documentation for tree patterns classes\n    Refactored parts of the tree patterns API to simplify classes and improve encapsulation\n    Move ATN serializer to runtime\n    Use ATNDeserializer methods instead of ATNSimulator methods which are now deprecated\n\n* parrt: fix null pointer bug with rule \"a : a;\"\n\nNovember 24, 2013\n\n* Ter adds tree pattern matching.  Preferred interface:\n\n\tParseTree t = parser.expr();\n\tParseTreePattern p = parser.compileParseTreePattern(\"<ID>+0\", MyParser.RULE_expr);\n\tParseTreeMatch m = p.match(t);\n\tString id = m.get(\"ID\");\n\n  or\n\n\tString xpath = \"//blockStatement/*\";\n\tString treePattern = \"int <Identifier> = <expression>;\";\n\tParseTreePattern p =\n\t\tparser.compileParseTreePattern(treePattern,\n\t\t\t\t\t\t\t\t\t   JavaParser.RULE_localVariableDeclarationStatement);\n\tList<ParseTreeMatch> matches = p.findAll(tree, xpath);\n\nNovember 20, 2013\n\n* Sam added method stuff like expr() that calls expr(0). Makes it possible\n  to call expr rule from TestRig (grun).\n\nNovember 14, 2013\n\n* Added Sam's ParserInterpreter implementation that uses ATN after\n  deserialization.\n\n\tLexerGrammar lg = new LexerGrammar(\n\t\t\"lexer grammar L;\\n\" +\n  \t\t\"A : 'a' ;\\n\" +\n  \t\t\"B : 'b' ;\\n\" +\n  \t\t\"C : 'c' ;\\n\");\n  \tGrammar g = new Grammar(\n  \t\t\"parser grammar T;\\n\" +\n  \t\t\"s : (A{;}|B)* C ;\\n\",\n  \t\tlg);\n\n\tLexerInterpreter lexEngine = lg.createLexerInterpreter(new ANTLRInputStream(input));\n\tCommonTokenStream tokens = new CommonTokenStream(lexEngine);\n\tParserInterpreter parser = g.createParserInterpreter(tokens);\n\tParseTree t = parser.parse(g.rules.get(startRule).index);\n\nNovember 13, 2013\n\n* move getChildren() from Tree into Trees (to avoid breaking change)\n* Notation:\n\t/prog/func,         -> all funcs under prog at root\n\t/prog/*,            -> all children of prog at root\n\t/*/func,            -> all func kids of any root node\n\tprog,               -> prog must be root node\n\t/prog,              -> prog must be root node\n\t/*,                 -> any root\n\t*,                  -> any root\n\t//ID,               -> any ID in tree\n\t//expr/primary/ID,  -> any ID child of a primary under any expr\n\t//body//ID,         -> any ID under a body\n\t//'return',         -> any 'return' literal in tree\n\t//primary/*,        -> all kids of any primary\n\t//func/*/stat,      -> all stat nodes grandkids of any func node\n\t/prog/func/'def',   -> all def literal kids of func kid of prog\n\t//stat/';',         -> all ';' under any stat node\n\t//expr/primary/!ID, -> anything but ID under primary under any expr node\n\t//expr/!primary,    -> anything but primary under any expr node\n\t//!*,               -> nothing anywhere\n\t/!*,                -> nothing at root\n\nSeptember 16, 2013\n\n* Updated build.xml to support v4 grammars in v4 itself; compiles XPathLexer.g4\n* Add to XPath:\n\tCollection<ParseTree> findAll(String xpath);\n\nSeptember 11, 2013\n\n* Add ! operator to XPath\n* Use ANTLR v4 XPathLexer.g4 not regex\n* Copy lots of find node stuff from v3 GrammarAST to Trees class in runtime.\n\nSeptember 10, 2013\n\n* Adding in XPath stuff.\n\nAugust 31, 2013\n\n* Lots of little fixes thanks to Coverity Scan\n\nAugust 7, 2013\n\n* [BREAKING CHANGE] Altered left-recursion elimination to be simpler. Now,\n  we use the following patterns:\n\n  * Binary expressions are expressions which contain a recursive invocation of\n    the rule as the first and last element of the alternative.\n\n  * Suffix expressions contain a recursive invocation of the rule as the first\n    element of the alternative, but not as the last element.\n\n  * Prefix expressions contain a recursive invocation of the rule as the last\n    element of the alternative, but not as the first element.\n\nThere is no such thing as a \"ternary\" expression--they are just binary\nexpressions in disguise.\n\nThe right associativity specifiers no longer on the individual tokens because\nit's done on alternative basis anyway. The option is now on the individual\nalternative; e.g.,\n\n  e : e '*' e\n    | e '+' e\n    |<assoc=right> e '?' e ':' e\n    |<assoc=right> e '=' e\n    | INT\n    ;\n\nIf your language uses a right-associative ternary operator, you will need\nto update your grammar to include <assoc=right> on the alternative operator.\n\nThis also fixes #245 and fixes #268:\n\nhttps://github.com/antlr/antlr4/issues/245\nhttps://github.com/antlr/antlr4/issues/268\n\nTo smooth the transition, <assoc=right> is still allowed on token references\nbut it is ignored.\n\nJune 30, 2013 -- 4.1 release\n\nJune 24, 2013\n\n* Resize ANTLRInputStream.data after reading a file with fewer characters than\n  bytes\n* Fix ATN created for non-greedy optional block with multiple alternatives\n* Support Unicode escape sequences with indirection in JavaUnicodeInputStream\n  (fixes #287)\n* Remove the ParserRuleContext.altNum field (fixes #288)\n* PredictionContext no longer implements Iterable<SingletonPredictionContext>\n* PredictionContext no longer implements Comparable<PredictionContext>\n* Add the EPSILON_CLOSURE error and EPSILON_OPTIONAL warning\n* Optimized usage of closureBusy set (fixes #282)\n\nJune 9, 2013\n\n* Add regression test for #239 (already passes)\n\nJune 8, 2013\n\n* Support list labels on a set of tokens (fixes #270)\n* Fix associativity of XOR in Java LR grammar (fixes #280)\n\nJune 1, 2013\n\n* DiagnosticErrorListener includes rule names for each decision in its reports\n* Document ANTLRErrorListener and DiagnosticErrorListener (fixes #265)\n* Support '\\uFFFF' (fixes #267)\n* Optimize serialized ATN\n\nMay 26, 2013\n\n* Report errors that occur while lexing a grammar (fixes #262)\n* Improved error message for unterminated string literals (fixes #243)\n\nMay 24, 2013\n\n* Significantly improve performance of JavaUnicodeInputStream.LA(1)\n\nMay 20, 2013\n\n* Generate Javadoc for generated visitor and listener interfaces and classes\n* Fix unit tests\n\nMay 18, 2013\n\n* Group terminals in Java grammars so ATN can collapse sets\n* Improved Java 7 support in Java grammars (numeric literals)\n* Updated error listener interfaces\n* Support detailed statistics in TestPerformance\n\nMay 17, 2013\n\n* Add JavaUnicodeInputStream to handle Unicode escapes in Java code\n* Proper Unicode identifier handling in Java grammars\n* Report file names with lexer errors in TestPerformance\n\nMay 14, 2013\n\n* Use a called rule stack to prevent stack overflow in LL1Analyzer\n* Use 0-based indexing for several arrays in the tool\n* Code simplification, assertions, documentation\n\nMay 13, 2013\n\n* Unit test updates to ensure exceptions are not hidden\n\nMay 12, 2013\n\n* Updates to TestPerformance\n\nMay 5, 2013\n\n* Updated several classes to use MurmurHash 3 hashing\n\nMay 1, 2013\n\n* Added parse tree JTree to TreeViewer (Bart Kiers)\n\nApril 30, 2013\n\n* Updated TestPerformance to support parallelization across passes\n\nApril 24, 2013\n\n* Remove unused stub class ParserATNPathFinder\n* Remove ParserInterpreter.predictATN\n* Remove DFA.getATNStatesAlongPath\n* Encapsulate implementation methods in LexerATNSimulator and ParserATNSimulator\n* Updated documentation\n* Simplify creation of new DFA edges\n* Fix handling of previously cached error edges\n* Fix DFA created during forced-SLL parsing (PredictionMode.SLL)\n* Extract methods ParserATNSimulator.getExistingTargetState and\n  ParserATNSimulator.computeTargetState.\n\nApril 22, 2013\n\n* Lazy initialization of ParserATNSimulator.mergeCache\n* Improved hash code for DFAState\n* Improved hash code with caching for ATNConfigSet\n* Add new configuration parameters to TestPerformance\n* Update Java LR and Java Std to support Java 7 syntax\n\nApril 21, 2013\n\n* Add new configuration parameters to TestPerformance\n\nApril 18, 2013\n\n* Must check rule transition follow states before eliminating states in\n  the ATN (fixes #224)\n* Simplify ParserATNSimulator and improve performance by combining execDFA and\n  execATN and using DFA edges even after edge computation is required\n\nApril 15, 2013\n\n* Fix code in TestPerformance that clears the DFA\n\nApril 12, 2013\n\n* Improved initialization and concurrency control in DFA updates\n* Fix EOF handling in edge case (fixes #218)\n\nApril 4, 2013\n\n* Improved testing of error reporting\n* Fix NPE revealed by updated testing method\n* Strict handling of redefined rules - prevents code generation (fixes #210)\n* Updated documentation in Tool\n\nMarch 27, 2013\n\n* Avoid creating empty action methods in lexer (fixes #202)\n* Split serialized ATN when it exceeds Java's 65535 byte limit (fixes #76)\n* Fix incorrect reports of label type conflicts across separated labeled outer\n  alternatives (fixes #195)\n* Update Maven plugin site documentation\n\nMarch 26, 2013\n\n* Fix bugs with the closureBusy set in ParserATNSimulator.closure\n* Fix handling of empty options{} block (fixes #194)\n* Add error 149 INVALID_LEXER_COMMAND (fixes #190)\n* Add error 150 MISSING_LEXER_COMMAND_ARGUMENT\n* Add error 151 UNWANTED_LEXER_COMMAND_ARGUMENT\n* Updated documentation in the Parser and RecognitionException classes\n* Refactored and extensively documented the ANTLRErrorStrategy interface and\n  DefaultErrorStrategy default implementation\n* Track the number of syntax errors in Parser.notifyErrorListeners instead of in\n  the error strategy\n* Move primary implementation of getExpectedTokens to ATN, fixes #191\n* Updated ATN documentation\n* Use UUID instead of incremented integer for serialized ATN versioning\n\nMarch 7, 2013\n\n* Added export to PNG feature to the parse tree viewer\n\nMarch 6, 2013\n\n* Allow direct calls to left-recursive rules (fixes #161)\n* Change error type 146 (EPSILON_TOKEN) to a warning (fixes #180)\n* Specify locale for all format operations (fixes #158)\n* Fix generation of invalid Unicode escape sequences in Java code (fixes #164)\n* Do not require escape for $ in action when not followed by an ID start char\n  (fixes #176)\n\nFebruary 23, 2013\n\n* Refactoring Target-related classes to improve support for additional language\n  targets\n\nFebruary 22, 2013\n\n* Do not allow raw newline characters in literals\n* Pair and Triple are immutable; Triple is not a Pair\n\nFebruary 5, 2013\n\n* Fix IntervalSet.add when multiple merges are required (fixes #153)\n\nJanuary 29, 2013\n\n* don't call process() if args aren't specified (Dave Parfitt)\n\nJanuary 21, 2013 -- Release 4.0\n\n* Updated PredictionContext Javadocs\n* Updated Maven site documentation\n* Minor tweaks in Java.stg\n\nJanuary 15, 2013\n\n* Tweak error messages\n* (Tool) Make TokenVocabParser fields `protected final`\n* Fix generated escape sequences for literals containing backslashes\n\nJanuary 14, 2013\n\n* Relax parser in favor of errors during semantic analysis\n* Add error 145: lexer mode must contain at least one non-fragment rule\n* Add error 146: non-fragment lexer rule can match the empty string\n\nJanuary 11, 2013\n\n* Updated error 72, 76; added 73-74 and 136-143: detailed errors about name\n  conflicts\n* Report exact location for parameter/retval/local name conflicts\n* Add error 144: multi-character literals are not allowed in lexer sets\n* Error 134 now only applies to rule references in lexer sets\n* Updated error messages (cleanup)\n* Reduce size of _serializedATN by adding 2 to each element: new representation\n  avoids embedded values 0 and 0xFFFF which are common and have multi-byte\n  representations in Java's modified UTF-8\n\nJanuary 10, 2013\n\n* Add error 135: cannot assign a value to list label: $label\n  (fixes antlr/antlr4#128)\n\nJanuary 2, 2013\n\n* Fix EOF handling (antlr/antlr4#110)\n* Remove TREE_PARSER reference\n* Additional validation checks in ATN deserialization\n* Fix potential NPE in parser predicate evaluation\n* Fix termination condition detection in full-context parsing\n\nJanuary 1, 2013\n\n* Updated documentation\n* Minor code cleanup\n* Added the `-XdbgSTWait` command line option for the Tool\n* Removed method override since bug was fixed in V3 runtime\n\nDecember 31, 2012\n\n* I altered Target.getTargetStringLiteralFromANTLRStringLiteral() so that\n  it converts \\uXXXX in an ANTLR string to \\\\uXXXX, thus, avoiding Java's\n  conversion to a single character before compilation.\n\nDecember 16, 2012\n\n* Encapsulate some fields in ANTLRMessage\n* Remove ErrorType.INVALID\n* Update error/warning messages, show all v3 compatibility messages\n\nDecember 12, 2012\n\n* Use arrays instead of HashSet to save memory in SemanticContext.AND/OR\n* Use arrays instead of HashSet to save memory in cached DFA\n* Reduce single-operand SemanticContext.and/or operations\n\nDecember 11, 2012\n\n* Add -long-messages option; only show exceptions with errors when set\n* \"warning treated as error\" is a one-off error\n* Listen for issues reported by StringTemplate, report them as warnings\n* Fix template issues\n* GrammarASTWithOptions.getOptions never returns null\n* Use EnumSet instead of HashSet\n* Use new STGroup.GROUP_FILE_EXTENSION value\n\nDecember 2, 2012\n\n* Remove -Xverbose-dfa option\n* Create the ParseTreeVisitor interface for all visitors, rename previous base\n  visitor class to AbstractParseTreeVisitor\n\nDecember 1, 2012\n\n* escape [\\n\\r\\t] in lexical error messages; e.g,:\n  line 2:3 token recognition error at: '\\t'\n  line 2:4 token recognition error at: '\\n'\n\n* added error for bad sets in lexer; e.g.:\n  lexer set element A is invalid (either rule ref or literal with > 1 char)\n  some tests in TestSets appeared to allow ~('a'|B) but it was randomly working.\n  ('a'|B) works, though doesn't collapse to a set.\n\n* label+='foo' wasn't generating good code. It was generating token type as\n  variable name. Now, I gen \"s<ttype>\" for implicit labels on string literals.\n\n* tokens now have token and char source to draw from.\n\n* remove -Xsave-lexer option; log file as implicit lexer AST.\n\nNovember 30, 2012\n\n* Maven updates (cleanup, unification, and specify Java 6 bootstrap classpath)\n\nNovember 28, 2012\n\n* Maven updates (uber-jar, manifest details)\n\nNovember 27, 2012\n\n* Maven updates (prepare for deploying to Sonatype OSS)\n* Use efficient bitset tests instead of long chains of operator ==\n\nNovember 26, 2012\n\n* Maven updates (include sources and javadocs, fix warnings)\n* Don't generate action methods for lexer rules not containing an action\n* Generated action and sempred methods are private\n* Remove unused / problematic methods:\n** (unused) TerminalNodeImpl.isErrorNode\n** (unused) RuleContext.conflictsWith, RuleContext.suffix.\n** (problematic) RuleContext.hashCode, RuleContext.equals.\n\nNovember 23, 2012\n\n* Updated Maven build (added master POM, cleaned up module POMs)\n\nNovember 22, 2012\n\n* make sure left-recur rule translation uses token stream from correct imported file.\n* actions like @after in imported rules caused inf loop.\n* This misidentified scope lexer/parser: @lexer::members { } @parser::members { }\n\nNovember 18, 2012\n\n* fixed: undefined rule refs caused exception\n* cleanup, rm dead etypes, add check for ids that cause code gen issues\n* added notion of one-off error\n* added check for v3 backward incompatibilities:\n** tree grammars\n** labels in lexer rules\n** tokens {A;B;} syntax\n** tokens {A='C';} syntax\n** {...}?=> gate semantic predicates\n** (...)=> syntactic predicates\n* Detect EOF in lexer rule\n\nNovember 17, 2012\n\n* .tokens files goes in output dir like parser file.\n* added check: action in lexer rules must be last element of outermost alt\n* properly check for grammar/filename difference\n* if labels, don't allow set collapse for\n  a : A # X | B ;\n* wasn't checking soon enough for rule redef; now it sets a dead flag in\n  AST so no more walking dup.\n  error(51): T.g:7:0: rule s redefinition (ignoring); previous at line 3\n\nNovember 11, 2012\n\n* Change version to 4.0b4 (btw, forgot to push 4.0b3 in build.properties when\n  I made git tag 4.0b3...ooops).\n\nNovember 4, 2012\n\n* Kill box in tree dialog box makes dialog dispose of itself\n\nOctober 29, 2012\n\n* Sam fixes nongreedy more.\n* -Werror added.\n* Sam made speed improvement re preds in lexer.\n\nOctober 20, 2012\n\n* Merged Sam's fix for nongreedy lexer/parser. lots of unit tests. A fix in\n  prediction ctx merge. https://github.com/parrt/antlr4/pull/99\n\nOctober 14, 2012\n\n* Rebuild how ANTLR detects SLL conflict and failover to full LL.  LL is\n  a bit slower but correct now.  Added ability to ask for exact ambiguity\n  detection.\n\nOctober 8, 2012\n\n* Fixed a bug where labeling the alternatives of the start rule caused\n  a null pointer exception.\n\nOctober 1, 2012 -- 4.0b2 release\n\nSeptember 30, 2012\n\n* Fixed the unbuffered streams, which actually buffered everything\n  up by mistake. tweaked a few comments.\n\n* Added a getter to IntStream for the token factory\n\n* Added -depend cmd-line option.\n\nSeptember 29, 2012\n\n* no nongreedy or wildcard in parser.\n\nSeptember 28, 2012\n\n* empty \"tokens {}\" is ok now.\n\nSeptember 22, 2012\n\n* Rule exception handlers weren't passed to the generated code\n* $ruleattribute.foo weren't handled properly\n* Added -package option\n\nSeptember 18, 2012 -- 4.0b1 release\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.2275390625,
          "content": "# Contributing to ANTLR 4\n\n1. [Fork](https://help.github.com/articles/fork-a-repo) the [antlr/antlr4 repo](https://github.com/antlr/antlr4), which will give you both key branches, `master` and `dev`\n2. Make sure to `git checkout dev` in your fork so that you are working from the latest development branch\n3. Create and work from a branch derived from `dev` such as `git checkout -b your-branch-name`\n4. Install and configure [EditorConfig](http://editorconfig.org/) so your text editor or IDE uses the ANTLR 4 coding style\n5. [Build ANTLR 4](doc/building-antlr.md)\n6. [Run the ANTLR project unit tests](doc/antlr-project-testing.md)\n7. Create a [pull request](https://help.github.com/articles/using-pull-requests/) with your changes and make sure you're comparing your `dev`-derived branch in your fork to the `dev` branch from the `antlr/antlr4` repo:\n\n<img src=\"doc/images/PR-on-dev.png\" width=\"600\">\n\n**Note:** Each commit requires a \"signature\", which is simple as using `-s` (not \n`-S`) to the git commit command:\n\n```\ngit commit -s -m 'This is my commit message'\n```\n\nGithub's pull request process enforces the sig and gives instructions on how to \nfix any commits that lack the sig. See [Github DCO app](https://github.com/apps/dco) \nfor more info.\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 1.4453125,
          "content": "Copyright (c) 2012-2022 The ANTLR Project. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions\nare met:\n\n1. Redistributions of source code must retain the above copyright\nnotice, this list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright\nnotice, this list of conditions and the following disclaimer in the\ndocumentation and/or other materials provided with the distribution.\n\n3. Neither name of copyright holders nor the names of its contributors\nmay be used to endorse or promote products derived from this software\nwithout specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR\nCONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\nEXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\nPROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\nPROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\nLIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\nNEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "Package.swift",
          "type": "blob",
          "size": 1.017578125,
          "content": "// swift-tools-version:5.6\n\nimport PackageDescription\n\nlet package = Package(\n    name: \"Antlr4\",\n    products: [\n        .library(\n            name: \"Antlr4\",\n            targets: [\"Antlr4\"]),\n        .library(\n            name: \"Antlr4Static\",\n            type: .static,\n            targets: [\"Antlr4\"]),\n        .library(\n            name: \"Antlr4Dynamic\",\n            type: .dynamic,\n            targets: [\"Antlr4\"]),\n    ],\n    targets: [\n        .target(\n            name: \"Antlr4\",\n            dependencies: [],\n            path: \"./runtime/Swift/Sources/Antlr4\"),\n        .testTarget(\n            name: \"Antlr4Tests\",\n            dependencies: [\"Antlr4\"],\n            path: \"./runtime/Swift/Tests/Antlr4Tests\",\n            exclude: [\n                \"./runtime/Swift/Tests/VisitorBasic.g4\",\n                \"./runtime/Swift/Tests/VisitorCalc.g4\",\n                \"./runtime/Swift/Tests/LexerA.g4\",\n                \"./runtime/Swift/Tests/LexerB.g4\",\n                \"./runtime/Swift/Tests/Threading.g4\"\n            ]\n        )\n    ]\n)\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 7.5986328125,
          "content": "# ANTLR v4\n\n[![Java 11+](https://img.shields.io/badge/java-11+-4c7e9f.svg)](http://java.oracle.com)\n[![License](https://img.shields.io/badge/license-BSD-blue.svg)](https://raw.githubusercontent.com/antlr/antlr4/master/LICENSE.txt)\n\n**ANTLR** (ANother Tool for Language Recognition) is a powerful parser generator for reading, processing, executing, or translating structured text or binary files. It's widely used to build languages, tools, and frameworks. From a grammar, ANTLR generates a parser that can build parse trees and also generates a listener interface (or visitor) that makes it easy to respond to the recognition of phrases of interest.\n\n**Dev branch build status**\n\n[![MacOSX, Windows, Linux](https://github.com/antlr/antlr4/actions/workflows/hosted.yml/badge.svg)](https://github.com/antlr/antlr4/actions/workflows/hosted.yml) (github actions)\n\n<!--\n* [![Windows](https://github.com/antlr/antlr4/actions/workflows/windows.yml/badge.svg?branch=dev)](https://github.com/antlr/antlr4/actions/workflows/windows.yml) (github actions)\n\n* [![Circle CI Build Status (Linux)](https://img.shields.io/circleci/build/gh/antlr/antlr4/master?label=Linux)](https://app.circleci.com/pipelines/github/antlr/antlr4) (CircleCI)\n\n[![AppVeyor CI Build Status (Windows)](https://img.shields.io/appveyor/build/parrt/antlr4?label=Windows)](https://ci.appveyor.com/project/parrt/antlr4) \n[![Travis-CI Build Status (Swift-Linux)](https://img.shields.io/travis/antlr/antlr4.svg?label=Linux-Swift&branch=master)](https://travis-ci.com/github/antlr/antlr4)\n-->\n\n\n## Versioning\n\nANTLR 4 supports 10 target languages\n(Cpp, CSharp, Dart, Java, JavaScript, PHP, Python3, Swift, TypeScript, Go),\nand ensuring consistency across these targets is a unique and highly valuable feature.\nTo ensure proper support of this feature, each release of ANTLR is a complete release of the tool and the 10 runtimes, all with the same version.\nAs such, ANTLR versioning does not strictly follow semver semantics:\n\n* a component may be released with the latest version number even though nothing has changed within that component since the previous release\n* major version is bumped only when ANTLR is rewritten for a totally new \"generation\", such as ANTLR3 -> ANTLR4 (LL(\\*) -> ALL(\\*) parsing)\n* minor version updates may include minor breaking changes, the policy is to regenerate parsers with every release (4.11 -> 4.12)\n* backwards compatibility is only guaranteed for patch version bumps (4.11.1 -> 4.11.2)\n\nIf you use a semver verifier in your CI, you probably want to apply special rules for ANTLR, such as treating minor change as a major change.\n\n## Repo branch structure\n\nThe default branch for this repo is [`master`](https://github.com/antlr/antlr4/tree/master), which is the latest stable release and has tags for the various releases; e.g., see release tag [4.9.3](https://github.com/antlr/antlr4/tree/4.9.3).  Branch [`dev`](https://github.com/antlr/antlr4/tree/dev) is where development occurs between releases and all pull requests should be derived from that branch. The `dev` branch is merged back into `master` to cut a release and the release state is tagged (e.g., with `4.10-rc1` or `4.10`.) Visually our process looks roughly like this:\n\n<img src=\"doc/images/new-antlr-branches.png\" width=\"500\">\n\nThe Go target now has its own dedicated repo:\n\n```bash\n$ go get github.com/antlr4-go/antlr\n```\n**Note**\nThe dedicated Go repo is for `go get` and `import` only. Go runtime development is still performed in the main `antlr/antlr4` repo. \n\n## Authors and major contributors\n\n* [Terence Parr](http://www.cs.usfca.edu/~parrt/), parrt@cs.usfca.edu\nANTLR project lead and supreme dictator for life\n[University of San Francisco](http://www.usfca.edu/)\n* [Sam Harwell](http://tunnelvisionlabs.com/) (Tool co-author, Java and original C# target)\n* [Eric Vergnaud](https://github.com/ericvergnaud) (Javascript, TypeScript, Python2, Python3 targets and maintenance of C# target)\n* [Peter Boyer](https://github.com/pboyer) (Go target)\n* [Mike Lischke](http://www.soft-gems.net/) (C++ completed target)\n* Dan McLaughlin (C++ initial target)\n* David Sisson (C++ initial target and test)\n* [Janyou](https://github.com/janyou) (Swift target)\n* [Ewan Mellor](https://github.com/ewanmellor), [Hanzhou Shi](https://github.com/hanjoes) (Swift target merging)\n* [Ben Hamilton](https://github.com/bhamiltoncx) (Full Unicode support in serialized ATN and all languages' runtimes for code points > U+FFFF)\n* [Marcos Passos](https://github.com/marcospassos) (PHP target)\n* [Lingyu Li](https://github.com/lingyv-li) (Dart target)\n* [Ivan Kochurkin](https://github.com/KvanTTT) has made major contributions to overall quality, error handling, and Target performance.\n* [Justin King](https://github.com/jcking) has done a huge amount of work across multiple targets, but especially for C++.\n* [Ken Domino](https://github.com/kaby76) has a knack for finding bugs/issues and analysis; also a major contributor on the [grammars-v4 repo](https://github.com/antlr/grammars-v4).\n* [Jim Idle](https://github.com/jimidle) has contributed to previous versions of ANTLR and recently jumped back in to solve a major problem with the Go target.\n\n\n## Useful information\n\n* [Release notes](https://github.com/antlr/antlr4/releases)\n* [Getting started with v4](https://github.com/antlr/antlr4/blob/master/doc/getting-started.md)\n* [Official site](http://www.antlr.org/)\n* [Documentation](https://github.com/antlr/antlr4/blob/master/doc/index.md)\n* [FAQ](https://github.com/antlr/antlr4/blob/master/doc/faq/index.md)\n* [ANTLR code generation targets](https://github.com/antlr/antlr4/blob/master/doc/targets.md)<br>(Currently: Java, C#, Python3, JavaScript, TypeScript, Go, C++, Swift, Dart, PHP)\n* _Note: As of version 4.14, we are dropping support for Python 2. We love the Python\ncommunity, but Python 2 support was officially halted in Jan 2020. More recently,\nGiHub also dropped support for Python 2, which has made it impossible for us to\nmaintain a consistent level of quality across targets (we use GitHub for our CI).\nLong live Python 3!_\n* [Java API](http://www.antlr.org/api/Java/index.html)\n* [ANTLR v3](http://www.antlr3.org/)\n* [v3 to v4 Migration, differences](https://github.com/antlr/antlr4/blob/master/doc/faq/general.md)\n\nYou might also find the following pages useful, particularly if you want to mess around with the various target languages.\n \n* [How to build ANTLR itself](https://github.com/antlr/antlr4/blob/master/doc/building-antlr.md)\n* [How we create and deploy an ANTLR release](https://github.com/antlr/antlr4/blob/master/doc/releasing-antlr.md)\n\n## The Definitive ANTLR 4 Reference\n\nProgrammers run into parsing problems all the time. Whether it’s a data format like JSON, a network protocol like SMTP, a server configuration file for Apache, a PostScript/PDF file, or a simple spreadsheet macro language—ANTLR v4 and this book will demystify the process. ANTLR v4 has been rewritten from scratch to make it easier than ever to build parsers and the language applications built on top. This completely rewritten new edition of the bestselling Definitive ANTLR Reference shows you how to take advantage of these new features.\n\nYou can buy the book [The Definitive ANTLR 4 Reference](http://amzn.com/dp/1934356999) at amazon or an [electronic version at the publisher's site](https://pragprog.com/book/tpantlr2/the-definitive-antlr-4-reference).\n\nYou will find the [Book source code](http://pragprog.com/titles/tpantlr2/source_code) useful.\n\n## Additional grammars\n[This repository](https://github.com/antlr/grammars-v4) is a collection of grammars without actions where the\nroot directory name is the all-lowercase name of the language parsed\nby the grammar. For example, java, cpp, csharp, c, etc...\n"
        },
        {
          "name": "antlr4-maven-plugin",
          "type": "tree",
          "content": null
        },
        {
          "name": "developer-cert-of-origin.txt",
          "type": "blob",
          "size": 1.9482421875,
          "content": "As of 4.10, ANTLR uses the Linux Foundation's Developer\nCertificate of Origin, DCO, version 1.1. See either\nhttps://developercertificate.org/ or the text below.\n\nEach commit requires a \"signature\", which is simple as\nusing `-s` (not `-S`) to the git commit command: \n\ngit commit -s -m 'This is my commit message'\n\nGithub's pull request process enforces the sig and gives\ninstructions on how to fix any commits that lack the sig.\nSee https://github.com/apps/dco for more info.\n\nNo signature is required in this file (unlike the\nprevious ANTLR contributor's certificate of origin.)\n\n----- https://developercertificate.org/ ------\n\nDeveloper Certificate of Origin\nVersion 1.1\n\nCopyright (C) 2004, 2006 The Linux Foundation and its contributors.\n\nEveryone is permitted to copy and distribute verbatim copies of this\nlicense document, but changing it is not allowed.\n\n\nDeveloper's Certificate of Origin 1.1\n\nBy making a contribution to this project, I certify that:\n\n(a) The contribution was created in whole or in part by me and I\n    have the right to submit it under the open source license\n    indicated in the file; or\n\n(b) The contribution is based upon previous work that, to the best\n    of my knowledge, is covered under an appropriate open source\n    license and I have the right under that license to submit that\n    work with modifications, whether created in whole or in part\n    by me, under the same open source license (unless I am\n    permitted to submit under a different license), as indicated\n    in the file; or\n\n(c) The contribution was provided directly to me by some other\n    person who certified (a), (b) or (c) and I have not modified\n    it.\n\n(d) I understand and agree that this project and the contribution\n    are public and that a record of the contribution (including all\n    personal information I submit with it, including my sign-off) is\n    maintained indefinitely and may be redistributed consistent with\n    this project or the open source license(s) involved.\n"
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "historical-contributors-agreement.txt",
          "type": "blob",
          "size": 19.1748046875,
          "content": "ANTLR Project Contributors Certification of Origin and Rights\n\nAll contributors to ANTLR v4 must formally agree to abide by this\ncertificate of origin by signing on the bottom with their github\nuserid, full name, email address (you can obscure your e-mail, but it\nmust be computable by human), and date.\n\nBy signing this agreement, you are warranting and representing that\nyou have the right to release code contributions or other content free\nof any obligations to third parties and are granting Terence Parr and\nANTLR project contributors, henceforth referred to as The ANTLR\nProject, a license to incorporate it into The ANTLR Project tools\n(such as ANTLRWorks and StringTemplate) or related works under the BSD\nlicense. You understand that The ANTLR Project may or may not\nincorporate your contribution and you warrant and represent the\nfollowing:\n\n1. I am the creator of all my contributions. I am the author of all\n   contributed work submitted and further warrant and represent that\n   such work is my original creation and I have the right to license\n   it to The ANTLR Project for release under the 3-clause BSD\n   license. I hereby grant The ANTLR Project a nonexclusive,\n   irrevocable, royalty-free, worldwide license to reproduce,\n   distribute, prepare derivative works, and otherwise use this\n   contribution as part of the ANTLR project, associated\n   documentation, books, and tools at no cost to The ANTLR Project.\n\n2. I have the right to submit. This submission does not violate the\n   rights of any person or entity and that I have legal authority over\n   this submission and to make this certification.\n\n3. If I violate another's rights, liability lies with me. I agree to\n   defend, indemnify, and hold The ANTLR Project and ANTLR users\n   harmless from any claim or demand, including reasonable attorney\n   fees, made by any third party due to or arising out of my violation\n   of these terms and conditions or my violation of the rights of\n   another person or entity.\n\n4. I understand and agree that this project and the contribution are\n   public and that a record of the contribution (including all\n   personal information I submit with it, including my sign-off) is\n   maintained indefinitely and may be redistributed consistent with\n   this project or the open source license indicated in the file.\n\nI have read this agreement and do so certify by adding my signoff to\nthe end of the following contributors list.\n\nCONTRIBUTORS:\n\nYYYY/MM/DD, github id, Full name, email\n2012/07/12, parrt, Terence Parr, parrt@antlr.org\n2012/09/18, sharwell, Sam Harwell, sam@tunnelvisionlabs.com\n2012/10/10, stephengaito, Stephen Gaito, stephen@percepitsys.co.uk\n2012/11/23, maguro, Alan Cabrera, adc@toolazydogs.com\n2013/01/29, metadave, Dave Parfitt, diparfitt@gmail.com\n2013/03/06, bkiers, Bart Kiers, bkiers@gmail.com\n2013/08/20, cayhorstmann, Cay Horstmann, cay@horstmann.com\n2014/03/18, aphyr, Kyle Kingsbury, aphyr@aphyr.com\n2014/06/07, ericvergnaud, Eric Vergnaud, eric.vergnaud@wanadoo.fr\n2014/07/04, jimidle, Jim Idle, jimi@Idle.ws\n2014/01/01, danmclaughlin, Dan McLaughlin, dan.mclaughlin@gmail.com\n2014/09/04. jeduden, Jan-Eric Duden, jeduden@gmail.com\n2014/09/27, petrbel, Petr Bělohlávek, antlr@petrbel.cz\n2014/10/18, sergiusignacius, Sérgio Silva, serge.a.silva@gmail.com\n2014/10/26, bdkearns, Brian Kearns, bdkearns@gmail.com\n2014/10/27, michaelpj, Michael Peyton Jones, michaelpj@gmail.com\n2015/01/29, TomLottermann, Thomas Lottermann, tomlottermann@gmail.com\n2015/02/15, pavlo, Pavlo Lysov, pavlikus@gmail.com\n2015/03/07, RedTailedHawk, Lawrence Parker, larry@answerrocket.com\n2015/04/03, rljacobson, Robert Jacobson, rljacobson@gmail.com\n2015/04/06, ojakubcik, Ondrej Jakubcik, ojakubcik@gmail.com\n2015/04/29, jszheng, Jinshan Zheng, zheng_js@hotmail.com\n2015/05/08, ViceIce, Michael Kriese, michael.kriese@gmx.de\n2015/05/09, lkraz, Luke Krasnoff, luke.krasnoff@gmail.com\n2015/05/12, Pursuit92, Josh Chase, jcjoshuachase@gmail.com\n2015/05/20, peturingi, Pétur Ingi Egilsson, petur@petur.eu\n2015/05/27, jcbrinfo, Jean-Christophe Beaupré, jcbrinfo@users.noreply.github.com\n2015/06/29, jvanzyl, Jason van Zyl, jason@takari.io\n2015/08/18, krzkaczor, Krzysztof Kaczor, krzysztof@kaczor.io\n2015/09/18, worsht, Rajiv Subrahmanyam, rajiv.public@gmail.com\n2015/09/24, HSorensen, Henrik Sorensen, henrik.b.sorensen@gmail.com\n2015/10/06, brwml, Bryan Wilhelm, bryan.wilhelm@microsoft.com\n2015/10/08, fedotovalex, Alex Fedotov, me@alexfedotov.com\n2015/10/12, KvanTTT, Ivan Kochurkin, ivan.kochurkin@gmail.com\n2015/10/21, martin-probst, Martin Probst, martin-probst@web.de\n2015/10/21, hkff, Walid Benghabrit, walid.benghabrit@mines-nantes.fr\n2015/11/12, cooperra, Robbie Cooper, cooperra@users.noreply.github.com\n2015/11/25, abego, Udo Borkowski, ub@abego.org\n2015/12/17, sebadur, Sebastian Badur, sebadur@users.noreply.github.com\n2015/12/23, pboyer, Peter Boyer, peter.b.boyer@gmail.com\n2015/12/24, dtymon, David Tymon, david.tymon@gmail.com\n2016/02/18, reitzig, Raphael Reitzig, reitzig[at]cs.uni-kl.de\n2016/03/10, mike-lischke, Mike Lischke, mike@lischke-online.de\n2016/03/27, beardlybread, Bradley Steinbacher, bradley.j.steinbacher@gmail.com\n2016/03/29, msteiger, Martin Steiger, antlr@martin-steiger.de\n2016/03/28, gagern, Martin von Gagern, gagern@ma.tum.de\n2016/07/10, twz123, Tom Wieczorek, tom.wieczorek@zalando.de\n2016/07/20, chrisheller, Chris Heller, chris.heller.greyheller@gmail.com\n2016/07/20, nburles, Nathan Burles, nburles@gmail.com\n2016/07/20, kosl90, Li Liqiang, kos1990l@gmail.com\n2016/07/27, timoc, Tim O'Callaghan, timo@linux.com\n2016/07/26, nic30, Michal Orsák, michal.o.socials@gmail.com\n2016/07/18, willfaught, Will Faught, will.faught@gmail.com\n2016/08/08, wjkohnen, Wolfgang Johannes Kohnen, wjkohnen-go-antlr@ko-sys.com\n2016/08/11, BurtHarris, Ralph \"Burt\" Harris, Burt_Harris_antlr4@azxs.33mail.com\n2016/08/19, andjo403, Andreas Jonson, andjo403@hotmail.com\n2016/09/27, harriman, Kurt Harriman, harriman@acm.org\n2016/10/13, cgudrian, Christian Gudrian, christian.gudrian@gmx.de\n2016/10/13, nielsbasjes, Niels Basjes, niels@basjes.nl\n2016/10/21, FloorGoddijn, Floor Goddijn, floor.goddijn[at]aimms.com\n2016/11/01, RYDB3RG, Kai Stammerjohann, RYDB3RG@users.noreply.github.com\n2016/11/05, runner-mei, meifakun, runner.mei@gmail.com\n2016/11/15, hanjoes, Hanzhou Shi, hanzhou87@gmail.com\n2016/11/16, sridharxp, Sridharan S, aurosridhar@gmail.com\n2016/11/06, NoodleOfDeath, Thom Morgan, github@bytemeapp.com\n2016/11/01, sebkur, Sebastian Kürten, sebastian@topobyte.de\n2016/04/13, renatahodovan, Renata Hodovan, reni@inf.u-szeged.hu\n2016/11/05, ewanmellor, Ewan Mellor, github@ewanmellor.org\n2016/11/06, janyou, Janyou, janyou.antlr@outlook.com\n2016/11/20, marcohu, Marco Hunsicker, antlr@hunsicker.de\n2016/09/02, lygav, Vladimir (Vladi) Lyga, lyvladi@gmail.com\n2016/09/23, ghosthope, Dmitry Shakhtanov, sudstrike@gmail.com\n2016/11/25, MrSampson, Oliver Sampson, olsam@quickaudio.com\n2016/11/29, millergarym, Gary Miller, miller.garym@gmail.com\n2016/11/29, wxio, Gary Miller, gm@wx.io\n2016/11/29, Naios, Denis Blank, naios@users.noreply.github.com\n2016/12/01, samtatasurya, Samuel Tatasurya, xemradiant@gmail.com\n2016/12/03, redxdev, Samuel Bloomberg, sam@redxdev.com\n2016/12/11, Gaulouis, Gaulouis, gaulouis.com@gmail.com\n2016/12/22, akosthekiss, Akos Kiss, akiss@inf.u-szeged.hu\n2016/12/24, adrpo, Adrian Pop, adrian.pop@liu.se\n2017/01/11, robertbrignull, Robert Brignull, robertbrignull@gmail.com\n2017/01/13, marcelo-rocha, Marcelo Rocha, mcrocha@gmail.com\n2017/01/23, bhamiltoncx, Ben Hamilton, bhamiltoncx+antlr@gmail.com\n2017/01/18, mshockwave, Bekket McClane, yihshyng223@gmail.com\n2017/02/10, lionelplessis, Lionel Plessis, lionelplessis@users.noreply.github.com\n2017/02/14, lecode-official, David Neumann, david.neumann@lecode.de\n2017/02/14, xied75, Dong Xie, xied75@gmail.com\n2017/02/20, Thomasb81, Thomas Burg, thomasb81@gmail.com\n2017/02/26, jvasileff, John Vasileff, john@vasileff.com\n2017/03/08, harry-tallbelt, Igor Vysokopoyasny, harry.tallbelt@gmail.com\n2017/03/09, teverett, Tom Everett, tom@khubla.com\n2017/03/03, chund, Christian Hund, christian.hund@gmail.com\n2017/03/15, robertvanderhulst, Robert van der Hulst, robert@xsharp.eu\n2017/03/28, cmd-johnson, Jonas Auer, jonas.auer.94@gmail.com\n2017/04/12, lys0716, Yishuang Lu, luyscmu@gmail.com\n2017/04/30, shravanrn, Shravan Narayan, shravanrn@gmail.com\n2017/05/11, jimallman, Jim Allman, jim@ibang.com\n2017/05/26, waf, Will Fuqua, wafuqua@gmail.com\n2017/05/29, kosak, Corey Kosak, kosak@kosak.com\n2017/06/11, erikbra, Erik A. Brandstadmoen, erik@brandstadmoen.net\n2017/06/10, jm-mikkelsen, Jan Martin Mikkelsen, janm@transactionware.com\n2017/06/25, alimg, Alim Gökkaya, alim.gokkaya@gmail.com\n2017/06/28, jBugman, Sergey Parshukov, codedby@bugman.me\n2017/07/09, neatnerd, Mike Arshinskiy, neatnerd@users.noreply.github.com\n2017/07/11, dhalperi, Daniel Halperin, daniel@halper.in\n2017/07/17, vaibhavaingankar09, Vaibhav Vaingankar, vbhvvaingankar9@gmail.com\n2017/07/23, venkatperi, Venkat Peri, venkatperi@gmail.com\n2017/07/27, shirou, WAKAYAMA Shirou, shirou.faw@gmail.com\n2017/07/09, neatnerd, Mike Arshinskiy, neatnerd@users.noreply.github.com\n2017/07/27, matthauck, Matt Hauck, matthauck@gmail.com\n2017/07/27, shirou, WAKAYAMA Shirou, shirou.faw@gmail.com\n2017/08/20, tiagomazzutti, Tiago Mazzutti, tiagomzt@gmail.com\n2017/08/20, milanaleksic, Milan Aleksic, milanaleksic@gmail.com\n2017/08/29, Eddy Reyes, eddy@mindsight.io\n2017/09/09, brauliobz, Bráulio Bezerra, brauliobezerra@gmail.com\n2017/09/11, sachinjain024, Sachin Jain, sachinjain024@gmail.com\n2017/09/25, kaedvann, Rostislav Listerenko, r.listerenko@gmail.com\n2017/10/06, bramp, Andrew Brampton, brampton@gmail.com\n2017/10/15, simkimsia, Sim Kim Sia, kimcity@gmail.com\n2017/10/27, Griffon26, Maurice van der Pot, griffon26@kfk4ever.com\n2017/05/29, rlfnb, Ralf Neeb, rlfnb@rlfnb.de\n2017/10/29, gendalph, Максим Прохоренко, Maxim\\dotProhorenko@gm@il.com\n2017/11/02, jasonmoo, Jason Mooberry, jason.mooberry@gmail.com\n2017/11/05, ajaypanyala, Ajay Panyala, ajay.panyala@gmail.com\n2017/11/24, zqlu.cn, Zhiqiang Lu, zqlu.cn@gmail.com\n2017/11/28, niccroad, Nicolas Croad, nic.croad@gmail.com\n2017/12/01, DavidMoraisFerreira, David Morais Ferreira, david.moraisferreira@gmail.com\n2017/12/01, SebastianLng, Sebastian Lang, sebastian.lang@outlook.com\n2017/12/03, oranoran, Oran Epelbaum, oran / epelbaum me\n2017/12/12, janlinde, Jan Lindemann, jan@janware.com\n2017/12/13, enessoylu, Enes Soylu, enessoylutr@gmail.com\n2017/12/20, kbsletten, Kyle Sletten, kbsletten@gmail.com\n2017/12/27, jkmar, Jakub Marciniszyn, marciniszyn.jk@gmail.com\n2018/03/08, dannoc, Daniel Clifford, danno@google.com\n2018/03/10, uvguy, kangjoni76@gmail.com\n2018/01/06, kasbah, Kaspar Emanuel, kaspar@monostable.co.uk\n2018/01/15, xgcssch, Sönke Schau, xgcssch@users.noreply.github.com\n2018/02/08, razfriman, Raz Friman, raz@razfriman.com\n2018/02/11, io7m, Mark Raynsford, code@io7m.com\n2018/04/24, solussd, Joe Smith, joe@uwcreations.com\n2018/15/05, johnvanderholt, jan dillingh johnvanderholte@gmail.com\n2018/06/14, scadgek, Sergey Chupov, scadgek@live.com\n2018/06/16, EternalPhane, Zongyuan Zuo, eternalphane@gmail.com\n2018/06/27, wu-sheng, Wu Sheng, wu.sheng@foxmail.com\n2018/02/25, chaseoxide, Marcus Ong, taccs97[at]gmail[dot]com\n2018/05/15, johnvanderholt, jan dillingh johnvanderholte@gmail.com\n2018/06/16, EternalPhane, Zongyuan Zuo, eternalphane@gmail.com\n2018/05/15, johnvanderholt, jan dillingh johnvanderholte@gmail.com\n2018/05/17, sinopsysHK, Eric Bardes, sinofwd@gmail.com\n2018/05/23, srvance, Stephen Vance, steve@vance.com\n2018/06/14, alecont, Alessandro Contenti, alecontenti@hotmail.com\n2018/06/16, EternalPhane, Zongyuan Zuo, eternalphane@gmail.com\n2018/07/03, jgoppert, James Goppert, james.goppert@gmail.com\n2018/07/27, Maksim Novikov, mnovikov.work@gmail.com\n2018/08/03, ENDOH takanao, djmchl@gmail.com\n2018/10/08, xsIceman, Andreas Skaar, andreas.skaar@gmail.com\n2018/10/18, edirgarcia, Edir García Lazo, edirgl@hotmail.com\n2018/07/31, Lucas Henrqiue, lucashenrique580@gmail.com\n2018/08/03, ENDOH takanao, djmchl@gmail.com\n2018/10/29, chrisaycock, Christopher Aycock, chris[at]chrisaycock[dot]com\n2018/11/12, vinoski, Steve Vinoski, vinoski@ieee.org\n2018/11/14, nxtstep, Adriaan (Arjan) Duz, codewithadriaan[et]gmail[dot]com\n2018/11/15, amykyta3, Alex Mykyta, amykyta3@users.noreply.github.com\n2018/11/29, hannemann-tamas, Ralf Hannemann-Tamas, ralf.ht@gmail.com\n2018/12/20, WalterCouto, Walter Couto, WalterCouto@users.noreply.github.com\n2018/12/23, youkaichao, Kaichao You, youkaichao@gmail.com\n2019/01/01, khoroshilov, Alexey Khoroshilov, khoroshilov@ispras.ru\n2019/01/02, wkhemir, Wail Khemir, khemirwail@gmail.com\n2019/01/16, kuegi, Markus Zancolo, markus.zancolo@roomle.com\n2019/01/29, hc-codersatlas, Harry Chan, harry.chan@codersatlas.com\n2019/02/06, ralucado, Cristina Raluca Vijulie, ralucris.v[at]gmail[dot]com\n2019/02/23, gedimitr, Gerasimos Dimitriadis, gedimitr@gmail.com\n2019/03/13, base698, Justin Thomas, justin.thomas1@gmail.com\n2019/03/18, carlodri, Carlo Dri, carlo.dri@gmail.com\n2019/05/02, askingalot, Andy Collins, askingalot@gmail.com\n2019/05/13, mapio, Massimo Santini, massimo.santini@gmail.com\n2019/07/11, olowo726, Olof Wolgast, olof@baah.se\n2019/07/16, abhijithneilabraham, Abhijith Neil Abraham, abhijithneilabrahampk@gmail.com\n2019/07/26, Braavos96, Eric Hettiaratchi, erichettiaratchi@gmail.com\n2019/08/02, thron7, Thomas Herchenroeder, thron7[at]users[dot]sourceforge[dot]net\n2019/08/12, easonlin404, Eason Lin, easonlin404@gmail.com\n2019/08/23, akaJes, Oleksandr Mamchyts, akaJes@gmail.com\n2019/08/27, wurzelpeter, Markus Franke, markus[hyphen]franke[at]web[dot]de\n2019/09/10, ImanHosseini, Iman Hosseini, hosseini.iman@yahoo.com\n2019/09/03, João Henrique, johnnyonflame@hotmail.com\n2019/09/10, neko1235, Ihar Mokharau, igor.mohorev@gmail.com\n2019/09/10, yar3333, Yaroslav Sivakov, yar3333@gmail.com\n2019/09/10, marcospassos, Marcos Passos, marcospassos.com@gmail.com\n2019/09/10, amorimjuliana, Juliana Amorim, juu.amorim@gmail.com\n2019/09/15, sullis, Sean Sullivan, github@seansullivan.com\n2019/09/17, kaz, Kazuki Sawada, kazuki@6715.jp\n2019/09/28, lmy269, Mingyang Liu, lmy040758@gmail.com\n2019/10/29, tehbone, Tabari Alexander, tehbone@gmail.com\n2019/10/31, a-square, Alexei Averchenko, lex.aver@gmail.com\n2019/11/05, listba, Ben List, ben.list89@gmail.com\n2019/11/11, foxeverl, Liu Xinfeng, liuxf1986[at]gmail[dot]com\n2019/11/17, felixn, Felix Nieuwenhuizhen, felix@tdlrali.com\n2019/11/18, mlilback, Mark Lilback, mark@lilback.com\n2020/01/19, lingyv-li, Lingyu Li, lingyv.li@gmail.com\n2020/02/02, carocad, Camilo Roca, carocad@unal.edu.co\n2020/02/10, julibert, Julián Bermúdez Ortega, julibert.dev@gmail.com\n2020/02/17, quantumsheep, Nathanael Demacon, nathanael.dmc@outlook.fr\n2020/02/21, StochasticTinkr, Daniel Pitts, github@coloraura.com\n2020/03/17, XsongyangX, Song Yang, songyang1218@gmail.com\n2020/04/07, deniskyashif, Denis Kyashif, denis.kyashif@gmail.com\n2020/04/08, lwehmeier, Leon Wehmeier, wehmeier@st.ovgu.de\n2020/04/10, agrabski, Adam Grabski, adam.gr@outlook.com\n2020/04/23, martinvw, Martin van Wingerden, martin@martinvw.nl\n2020/04/23, kaczmarj, Jakub Kaczmarzyk, jakub.kaczmarzyk@stonybrookmedicine.edu\n2020/04/30, TristonianJones, Tristan Swadell, tswadell@google.com\n2020/05/06, iammosespaulr, Moses Paul R, iammosespaulr@gmail.com\n2020/05/10, gomerser, Erik Gomersbach, gomerser@gomersba.ch\n2020/05/22, keywan-ghadami-oxid, Keywan Ghadami, keywan.ghadami@oxid-esales.com\n2020/05/25, graknol, Sindre van der Linden, graknol@gmail.com\n2020/05/31, d-markey, David Markey, dmarkey@free.fr\n2020/06/02, cohomology, Kilian Kilger, kkilger AT gmail.com\n2020/06/04, IohannRabeson, Iohann Rabeson, iotaka6@gmail.com\n2020/06/04, sigmasoldi3r, Pablo Blanco, pablobc.1995@gmail.com\n2020/06/15, mattpaletta, Matthew Paletta, mattpaletta@gmail.com\n2020/07/01, sha-N, Shan M Mathews, admin@bluestarqatar.com\n2020/08/22, stevenjohnstone, Steven Johnstone, steven.james.johnstone@gmail.com\n2020/09/06, ArthurSonzogni, Sonzogni Arthur, arthursonzogni@gmail.com\n2020/09/10, Khailian, Arunav Sanyal, arunav.sanyal91@gmail.com\n2020/09/12, Clcanny, Charles Ruan, a837940593@gmail.com\n2020/09/15, rmcgregor1990, Robert McGregor, rmcgregor1990@gmail.com\n2020/09/16, trenki2, Markus Trenkwalder, trenki2[at]gmx[dot]net\n2020/10/08, Marti2203, Martin Mirchev, mirchevmartin2203@gmail.com\n2020/10/16, adarshbhat, Adarsh Bhat, adarshbhat@users.noreply.github.com\n2020/10/20, adamwojs, Adam Wójs, adam[at]wojs.pl\n2020/10/24, cliid, Jiwu Jang, jiwujang@naver.com\n2020/11/05, MichelHartmann, Michel Hartmann, MichelHartmann@users.noreply.github.com\n2020/11/26, mr-c, Michael R. Crusoe, 1330696+mr-c@users.noreply.github.com\n2020/12/01, maxence-lefebvre, Maxence Lefebvre, maxence-lefebvre@users.noreply.github.com\n2020/12/03, electrum, David Phillips, david@acz.org\n2021/01/03, niw, Yoshimasa Niwa, niw@niw.at\n2021/01/25, l215884529, Qiheng Liu, 13607681+l215884529@users.noreply.github.com\n2021/02/02, tsotnikov, Taras Sotnikov, taras.sotnikov@gmail.com\n2021/02/10, jirislaby, Jiri Slaby, jirislaby@gmail.com\n2021/02/21, namasikanam, Xingyu Xie, namasikanam@gmail.com\n2021/02/26, ahooper, Andrew Hooper, ahooper at kos dot net\n2021/02/27, khmarbaise, Karl Heinz Marbaise, github@soebes.com\n2021/02/28, Dante-Broggi, Dante Broggi, 34220985+Dante-Broggi@users.noreply.github.com\n2021/03/02, hackeris\n2021/03/03, xTachyon, Damian Andrei, xTachyon@users.noreply.github.com\n2021/03/22, 100mango, Fangqiu Fang, 100mango@gmail.com\n2021/04/07, b1f6c1c4, Jinzheng Tu, b1f6c1c4@gmail.com\n2021/04/17, jaggerjo, Josua Jäger, mail@jaggerjo.com\n2021/04/24, bigerl, Alexander Bigerl, alexander [äät] bigerl [pkt] eu\n2021/05/02, michalharakal, Michal Harakal, michal.harakal@users.noreply.github.com\n2021/05/03, redexp, Sergii Kliuchnyk, redexp@users.noreply.github.com\n2021/05/03, mitar, Mi Tar, mitar.git@tnode.com\n2021/05/04, joakker, Joaquín León, joaquinandresleon108@gmail.com\n2021/05/06, renancaraujo, Renan C. Araújo, renancaraujo@users.noreply.github.com\n2021/05/06, canastro, Ricardo Canastro, ricardocanastro@users.noreply.github.com\n2021/06/19, abe149, Abe Skolnik, abe 149 at gmail . com\n2021/07/01, appel1, Johan Appelgren, johan.appelgren@gmail.com\n2021/07/01, marcauberer, Marc Auberer, marc.auberer@chillibits.com\n2021/07/14, renzhentaxibaerde, Renzhentaxi Baerde, renzhentaxibaerde@gmail.com\n2021/07/21, skittlepox, Benjamin Spiegel, bspiegel@cs.brown.edu\n2021/07/29, ksyx, Qixing Xue, qixingxue@outlook.com\n2021/07/29, rachidlamouri, Rachid Lamouri, rachidlamouri@gmail.com\n2021/08/02, minjoosur, Minjoo Sur, msur@salesforce.com\n2021/08/05, jjeffcaii, Jeff Tsai, caiweiwei.cww@alibaba-inc.com\n2021/08/08, ansiemens, Yi-Hong Lin, ansiemens@gmail.com\n2021/08/25, XenoAmess, Jin Xu, xenoamess@gmail.com\n2021/09/08, jmcken8, Joel McKenzie, joel.b.mckenzie@gmail.com\n2021/09/23, skalt, Steven Kalt, kalt.steven@gmail.com\n2021/09/26, idraper, Isaac Draper, idraper@byu.edu\n2021/10/10, tools4origins, Erwan Guyomarc'h, contact@erwan-guyomarch.fr\n2021/10/19, jcking, Justin King, jcking@google.com\n2021/10/31, skef, Skef Iterum, github@skef.org\n2021/10/31, hlstwizard, h.l.s.t@163.com\n2021/11/30, bollwyvl, Nick Bollweg, bollwyvl@users.noreply.github.com\n2021/12/03, eneko, Eneko Alonso, eneko.alonso@gmail.com\n2021/12/16, Ketler13, Oleksandr Martyshchenko, oleksandr.martyshchenko@gmail.com\n2021/12/25, Tinker1024, Tinker1024, tinker@huawei.com\n2021/12/31, Biswa96, Biswapriyo Nath, nathbappai@gmail.com\n2022/03/07, chenquan, chenquan, chenquan.dev@gmail.com\n2022/03/15, hzeller, Henner Zeller, h.zeller@acm.org\n"
        },
        {
          "name": "pom.xml",
          "type": "blob",
          "size": 4.7138671875,
          "content": "<!--\n  ~ Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n  ~ Use of this file is governed by the BSD 3-clause license that\n  ~ can be found in the LICENSE.txt file in the project root.\n  -->\n\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n\t<modelVersion>4.0.0</modelVersion>\n\t<parent>\n\t\t<groupId>org.sonatype.oss</groupId>\n\t\t<artifactId>oss-parent</artifactId>\n\t\t<version>9</version>\n\t</parent>\n\t<groupId>org.antlr</groupId>\n\t<artifactId>antlr4-master</artifactId>\n\t<version>4.13.3-SNAPSHOT</version>\n\t<packaging>pom</packaging>\n\n\t<name>ANTLR 4</name>\n\t<description>ANTLR 4 Master Build POM</description>\n\t<url>https://www.antlr.org/</url>\n\t<inceptionYear>1992</inceptionYear>\n\t<organization>\n\t\t<name>ANTLR</name>\n\t\t<url>https://www.antlr.org/</url>\n\t</organization>\n\n    <prerequisites>\n        <maven>3.8</maven>\n    </prerequisites>\n\n    <licenses>\n\t\t<license>\n\t\t\t<name>BSD-3-Clause</name>\n\t\t\t<url>https://www.antlr.org/license.html</url>\n\t\t\t<distribution>repo</distribution>\n\t\t</license>\n\t</licenses>\n\n\t<developers>\n\t\t<developer>\n\t\t\t<name>Terence Parr</name>\n\t\t\t<url>https://github.com/parrt</url>\n\t\t\t<roles>\n\t\t\t\t<role>Project lead - ANTLR</role>\n\t\t\t</roles>\n\t\t</developer>\n\t\t<developer>\n\t\t\t<name>Sam Harwell</name>\n\t\t\t<url>http://tunnelvisionlabs.com</url>\n\t\t\t<roles>\n\t\t\t\t<role>Developer</role>\n\t\t\t</roles>\n\t\t</developer>\n\t\t<developer>\n\t\t\t<name>Eric Vergnaud</name>\n\t\t\t<roles>\n\t\t\t\t<role>Developer - JavaScript, C#, Python 2, Python 3</role>\n\t\t\t</roles>\n\t\t</developer>\n\t\t<developer>\n\t\t\t<name>Peter Boyer</name>\n\t\t\t<roles>\n\t\t\t\t<role>Developer - Go</role>\n\t\t\t</roles>\n\t\t</developer>\n\t\t<developer>\n\t\t\t<name>Jim Idle</name>\n\t\t\t<email>jimi@idle.ws</email>\n\t\t\t<url>https://www.linkedin.com/in/jimidle/</url>\n\t\t\t<roles>\n\t\t\t\t<role>Developer - Maven Plugin</role>\n\t\t\t\t<role>Developer - Go runtime</role>\n\t\t\t</roles>\n\t\t</developer>\n\t\t<developer>\n\t\t\t<name>Mike Lischke</name>\n\t\t\t<roles>\n\t\t\t\t<role>Developer - C++ Target</role>\n\t\t\t</roles>\n\t\t</developer>\n\t\t<developer>\n\t\t\t<name>Tom Everett</name>\n\t\t\t<roles>\n\t\t\t\t<role>Developer</role>\n\t\t\t</roles>\n\t\t</developer>\n\t</developers>\n\n\t<modules>\n\t\t<module>runtime/Java</module>\n\t\t<module>tool</module>\n\t\t<module>antlr4-maven-plugin</module>\n\t\t<module>tool-testsuite</module>\n\t\t<module>runtime-testsuite</module>\n\t</modules>\n\n\t<properties>\n\t\t<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n\t\t<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\n\t\t<project.build.outputTimestamp>1722710576</project.build.outputTimestamp>\n\t\t<antlr.testinprocess>true</antlr.testinprocess>\n\t\t<maven.compiler.source>11</maven.compiler.source>\n\t\t<maven.compiler.target>11</maven.compiler.target>\n\t</properties>\n\n\t<mailingLists>\n\t\t<mailingList>\n\t\t\t<name>antlr-discussion</name>\n\t\t\t<archive>https://groups.google.com/forum/?fromgroups#!forum/antlr-discussion</archive>\n\t\t</mailingList>\n\t</mailingLists>\n\n\t<issueManagement>\n\t\t<system>GitHub Issues</system>\n\t\t<url>https://github.com/antlr/antlr4/issues</url>\n\t</issueManagement>\n\n\t<scm>\n        <url>https://github.com/antlr/antlr4/tree/master</url>\n\t\t<connection>scm:git:git://github.com/antlr/antlr4.git</connection>\n\t\t<developerConnection>scm:git:git@github.com:antlr/antlr4.git</developerConnection>\n\t\t<tag>4.13.0</tag>\n\t</scm>\n\n\t<build>\n\t\t<resources>\n\t\t\t<resource>\n\t\t\t\t<directory>resources</directory>\n\t\t\t</resource>\n\t\t</resources>\n\t\t<testResources>\n\t\t\t<testResource>\n\t\t\t\t<directory>test</directory>\n\t\t\t</testResource>\n\t\t</testResources>\n\t\t<plugins>\n\t\t\t<plugin>\n\t\t\t\t<artifactId>maven-clean-plugin</artifactId>\n\t\t\t\t<version>3.1.0</version>\n\t\t\t\t<configuration>\n\t\t\t\t\t<filesets>\n\t\t\t\t\t\t<fileset>\n\t\t\t\t\t\t\t<directory>runtime/Swift/.build</directory>\n\t\t\t\t\t\t</fileset>\n\t\t\t\t\t\t<fileset>\n\t\t\t\t\t\t\t<directory>runtime/Swift/Tests/Antlr4Tests/gen</directory>\n\t\t\t\t\t\t</fileset>\n\t\t\t\t\t</filesets>\n\t\t\t\t</configuration>\n\t\t\t</plugin>\n\t\t</plugins>\n\t\t<pluginManagement>\n\t\t\t<plugins>\n\t\t\t\t<plugin>\n\t\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\n\t\t\t\t\t<artifactId>maven-compiler-plugin</artifactId>\n\t\t\t\t\t<version>3.8.1</version>\n\t\t\t\t\t<configuration>\n\t\t\t\t\t\t<source>${maven.compiler.source}</source>\n\t\t\t\t\t\t<target>${maven.compiler.target}</target>\n\t\t\t\t\t</configuration>\n\t\t\t\t</plugin>\n\t\t\t\t<plugin>\n\t\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\n\t\t\t\t\t<artifactId>maven-javadoc-plugin</artifactId>\n\t\t\t\t</plugin>\n\t\t\t\t<plugin>\n\t\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\n\t\t\t\t\t<artifactId>maven-jar-plugin</artifactId>\n\t\t\t\t\t<version>3.2.2</version>\n\t\t\t\t</plugin>\n\t\t\t\t<plugin>\n\t\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\n\t\t\t\t\t<artifactId>maven-release-plugin</artifactId>\n\t\t\t\t\t<version>3.0.0-M6</version>\n\t\t\t\t</plugin>\n\t\t\t</plugins>\n\t\t</pluginManagement>\n\t</build>\n</project>\n"
        },
        {
          "name": "runtime-testsuite",
          "type": "tree",
          "content": null
        },
        {
          "name": "runtime",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "tool-testsuite",
          "type": "tree",
          "content": null
        },
        {
          "name": "tool",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}