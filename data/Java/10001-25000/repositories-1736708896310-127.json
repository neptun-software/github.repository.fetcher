{
  "metadata": {
    "timestamp": 1736708896310,
    "page": 127,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Yalantis/uCrop",
      "stars": 11920,
      "defaultBranch": "develop",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.04296875,
          "content": "ucrop/src/main/jni/CImg.h linguist-vendored\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.3583984375,
          "content": "# svn\n*.svn*\n\n# built application files\n*.apk\n*.ap_\n\n# files for the dex VM\n*.dex\n\n# Java class files\n*.class\n\n# generated GUI files\n*/R.java\n\n# generated folder\nbin\ngen\n\n# local\nlocal.properties\n\nproguard_logs/\n\n# log files\nlog*.txt\n\n# archives\n*.gz\n*.tar\n*.zip\n\n# eclipse\n*.metadata\n*.settings\n*.prefs\n\n#idea\n*.idea\n*.iml\nout/\n\nbuild/\ncaptures/\n.gradle/\n\n.DS_Store\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 8.5654296875,
          "content": "# uCrop - Image Cropping Library for Android\n\n#### This project aims to provide an ultimate and flexible image cropping experience. Made in [Yalantis](https://yalantis.com/?utm_source=github)\n\n#### [How We Created uCrop](https://yalantis.com/blog/how-we-created-ucrop-our-own-image-cropping-library-for-android/)\n#### Check this [project on Dribbble](https://dribbble.com/shots/2484752-uCrop-Image-Cropping-Library)\n\n<img src=\"preview.gif\" width=\"800\" height=\"600\">\n\n# Usage\n\n*For a working implementation, please have a look at the Sample Project - sample*\n\n<a href=\"https://play.google.com/store/apps/details?id=com.yalantis.ucrop.sample&utm_source=global_co&utm_medium=prtnr&utm_content=Mar2515&utm_campaign=PartBadge&pcampaignid=MKT-AC-global-none-all-co-pr-py-PartBadges-Oct1515-1\"><img alt=\"Get it on Google Play\" src=\"https://play.google.com/intl/en_us/badges/images/generic/en_badge_web_generic.png\" width=\"185\" height=\"70\"/></a>\n\n1. Include the library as a local library project.\n\n\t```\n\tallprojects {\n\t   repositories {\n\t      jcenter()\n\t      maven { url \"https://jitpack.io\" }\n\t   }\n\t}\n\t```\n\n    ``` implementation 'com.github.yalantis:ucrop:2.2.10' ``` - lightweight general solution\n\n    ``` implementation 'com.github.yalantis:ucrop:2.2.9-native' ``` - get power of the native code to preserve image quality (+ about 1.5 MB to an apk size)\n\n2. Add UCropActivity into your AndroidManifest.xml\n\n    ```\n    <activity\n        android:name=\"com.yalantis.ucrop.UCropActivity\"\n        android:screenOrientation=\"portrait\"\n        android:theme=\"@style/Theme.AppCompat.Light.NoActionBar\"/>\n    ```\n\n3. The uCrop configuration is created using the builder pattern.\n\n   ```java\n   UCrop.of(sourceUri, destinationUri)\n       .withAspectRatio(16, 9)\n       .withMaxResultSize(maxWidth, maxHeight)\n       .start(context);\n   ```\n\n4. Override `onActivityResult` method and handle uCrop result.\n\n    ```java\n    @Override\n    public void onActivityResult(int requestCode, int resultCode, Intent data) {\n        if (resultCode == RESULT_OK && requestCode == UCrop.REQUEST_CROP) {\n            final Uri resultUri = UCrop.getOutput(data);\n        } else if (resultCode == UCrop.RESULT_ERROR) {\n            final Throwable cropError = UCrop.getError(data);\n        }\n    }\n    ```\n\n5. You may want to add this to your PROGUARD config:\n\n    ```\n    -dontwarn com.yalantis.ucrop**\n    -keep class com.yalantis.ucrop** { *; }\n    -keep interface com.yalantis.ucrop** { *; }\n    ```\n\n# Customization\n\nIf you want to let your users choose crop ratio dynamically, just do not call `withAspectRatio(x, y)`.\n\nuCrop builder class has method `withOptions(UCrop.Options options)` which extends library configurations.\n\nCurrently, you can change:\n\n   * image compression format (e.g. PNG, JPEG), compression\n   * image compression quality [0 - 100]. PNG which is lossless, will ignore the quality setting.\n   * whether all gestures are enabled simultaneously\n   * maximum size for Bitmap that is decoded from source Uri and used within crop view. If you want to override the default behaviour.\n   * toggle whether to show crop frame/guidelines\n   * setup color/width/count of crop frame/rows/columns\n   * choose whether you want rectangle or oval(`options.setCircleDimmedLayer(true)`) crop area\n   * the UI colors (Toolbar, StatusBar, active widget state)\n   * and more...\n\n# Compatibility\n\n  * Library - Android ICS 4.0+ (API 14) (Android GINGERBREAD 2.3+ (API 10) for versions <= 1.3.2)\n  * Sample - Android ICS 4.0+ (API 14)\n  * CPU - armeabi armeabi-v7a x86 x86_64 arm64-v8a (for versions >= 2.1.2)\n\n# Changelog\n\n### Version: 2.2.10\n\n*   Fixed [#926](https://github.com/Yalantis/uCrop/issues/926)\n\n### Version: 2.2.9\n\n*   Update compileSdk and targetSdk versions up to 33\n*   Fixed [#867](https://github.com/Yalantis/uCrop/issues/867)\n*   Fixed [#873](https://github.com/Yalantis/uCrop/issues/873)\n*   And other improvements\n\n### Version: 2.2.8\n\n*   Merged pending pull requests with improvements and bugfixes\n*   Update compileSdk and targetSdk versions up to 31\n*   Add localizations\n*   Fixed [#609](https://github.com/Yalantis/uCrop/issues/609)\n*   Fixed [#794](https://github.com/Yalantis/uCrop/issues/794)\n\n\n### Version: 2.2.5\n\n*   Fixed [#584](https://github.com/Yalantis/uCrop/issues/584)\n*   Fixed [#598](https://github.com/Yalantis/uCrop/issues/598)\n*   Fixed [#543](https://github.com/Yalantis/uCrop/issues/543)\n*   Fixed [#602](https://github.com/Yalantis/uCrop/issues/602)\n*   And other improvements\n\n### Version: 2.2.4\n\n  * **AndroidX migration**\n  * Redesign\n  * Several fixes including [#550](https://github.com/Yalantis/uCrop/issues/550)\n\n### Version: 2.2.3\n\n  * Several fixes including [#445](https://github.com/Yalantis/uCrop/issues/445), [#465](https://github.com/Yalantis/uCrop/issues/465) and more!\n  * Material design support\n  * uCrop fragment as child fragment\n  * Added the Italian language\n\n### Version: 2.2.2\n\n* uCrop fragment added\n* bugfix\n\n### Version: 2.2.1\n\n  * Fix including [#285](https://github.com/Yalantis/uCrop/issues/285)\n\n### Version: 2.2\n\n  * Several fixes including [#121](https://github.com/Yalantis/uCrop/issues/121), [#173](https://github.com/Yalantis/uCrop/issues/173), [#184](https://github.com/Yalantis/uCrop/issues/184) and more!\n  * New APIs introduced [#149](https://github.com/Yalantis/uCrop/issues/149), [#186](https://github.com/Yalantis/uCrop/issues/186) and [#156](https://github.com/Yalantis/uCrop/issues/156)\n\n### Version: 2.1\n\n  * Fixes issue with EXIF data (images taken on front camera with Samsung devices mostly) [#130](https://github.com/Yalantis/uCrop/issues/130) [#111](https://github.com/Yalantis/uCrop/issues/111)\n  * Added API to set custom set of aspect ratio options for the user. [#131](https://github.com/Yalantis/uCrop/issues/131)\n  * Added API to set all configs via UCrop.Options class. [#126](https://github.com/Yalantis/uCrop/issues/126)\n  * Added ABI x86_64 support. [#105](https://github.com/Yalantis/uCrop/issues/105)\n\n### Version: 2.0\n\n  * Native image crop (able to crop high-resolution images, e.g. 16MP & 32MP images on Nexus 5X).\n  * WebP compression format is not supported at the moment (choose JPEG or PNG).\n  * Now library copies EXIF data to cropped image (size and orientation are updated).\n\n### Version: 1.5\n\n  * Introduced \"Freestyle\" crop (you can resize crop rectangle by dragging it corners) [#32](https://github.com/Yalantis/uCrop/issues/32)\n  * Now image & crop view paddings are not associated [#68](https://github.com/Yalantis/uCrop/issues/68)\n  * Updated API\n\n### Version: 1.4\n\n  * Introduced HTTP(s) Uri support!\n  * Image is cropped in a background thread.\n  * Showing loader while Bitmap is processed (both loading and cropping).\n  * Several bug fixes.\n  * Couple new things to configure.\n  * Updated minSdkVersion to Android ICS 4.0 (no reason to support couple percents of old phones).\n\n### Version: 1.3\n\n  * Image is loaded in a background thread. Better error-handling for image decoding.\n  * Improved EXIF data support (rotation and mirror).\n  * Small UI updates.\n  * Couple new things to configure.\n\n  * Sample updated with the possibility to choose custom aspect ratio.\n\n### Version: 1.2\n\n  * Updated core logic so an image corrects its position smoothly and obviously.\n\n### Version: 1.1\n\n  * UCrop builder was updated and now UCrop.Options class has even more values to setup.\n\n### Version: 1.0\n\n  * Initial Build\n\n### Let us know!\n\nWeâ€™d be really happy if you sent us links to your projects where you use our component. Just send an email to github@yalantis.com And do let us know if you have any questions or suggestion regarding the library.\n\n#### Apps using uCrop\n\n- [Thirty](https://play.google.com/store/apps/details?id=com.twominds.thirty).\n- [Light Smart HD](https://play.google.com/store/apps/details?id=com.SmartCamera.simple).\n- [BCReader](https://play.google.com/store/apps/details?id=com.iac.bcreader).\n- [Xprezia: Share Your Passion](https://play.google.com/store/apps/details?id=com.xprezzia.cnj).\n\n## License\n\n    Copyright 2017, Yalantis\n\n    Software doesn't collect, store or transfer data to Yalantis or third parties.\n    Emplacement of this Software is carried out locally at device.\n\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n"
        },
        {
          "name": "build.gradle",
          "type": "blob",
          "size": 0.806640625,
          "content": "buildscript {\n    ext {\n        androidx_appcompat_version = \"1.6.1\"\n        androidx_core_version = \"1.9.0\"\n        androidx_exifinterface_version = \"1.3.6\"\n        androidx_transition_version = \"1.4.1\"\n        constraintlayout_version = \"2.1.4\"\n    }\n\n    repositories {\n        mavenCentral()\n        maven {\n            url 'https://maven.google.com/'\n            name 'Google'\n        }\n    }\n    dependencies {\n        classpath 'com.android.tools.build:gradle:7.4.2'\n    }\n}\n\ndef isReleaseBuild() {\n    return version.contains(\"SNAPSHOT\") == false\n}\n\nallprojects {\n    version = VERSION_NAME\n    group = GROUP\n\n    repositories {\n        mavenCentral()\n        maven {\n            url 'https://maven.google.com/'\n            name 'Google'\n        }\n    }\n}\n\ntask clean(type: Delete) {\n    delete rootProject.buildDir\n}\n"
        },
        {
          "name": "gradle.properties",
          "type": "blob",
          "size": 1.361328125,
          "content": "# Project-wide Gradle settings.\n\n# IDE (e.g. Android Studio) users:\n# Gradle settings configured through the IDE *will override*\n# any settings specified in this file.\n\n# For more details on how to configure your build environment visit\n# http://www.gradle.org/docs/current/userguide/build_environment.html\n\n# Specifies the JVM arguments used for the daemon process.\n# The setting is particularly useful for tweaking memory settings.\n# Default value: -Xmx10248m -XX:MaxPermSize=256m\n# org.gradle.jvmargs=-Xmx2048m -XX:MaxPermSize=512m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8\n\n# When configured, Gradle will run in incubating parallel mode.\n# This option should only be used with decoupled projects. More details, visit\n# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects\n# org.gradle.parallel=true\n\nVERSION_NAME=2.2.9-native\nVERSION_CODE=28\nGROUP=com.yalantis\n\nPOM_DESCRIPTION=Android Library for cropping images\nPOM_URL=https://github.com/Yalantis/uCrop\nPOM_SCM_URL=https://github.com/Yalantis/uCrop\nPOM_SCM_CONNECTION=scm:git@github.com/Yalantis/uCrop.git\nPOM_SCM_DEV_CONNECTION=scm:git@github.com/Yalantis/uCrop.git\nPOM_LICENCE_NAME=The Apache Software License, Version 2.0\nPOM_LICENCE_URL=http://www.apache.org/licenses/LICENSE-2.0\nPOM_LICENCE_DIST=repo\nPOM_DEVELOPER_ID=yalantis\nPOM_DEVELOPER_NAME=Yalantis\nandroid.useAndroidX=true"
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 4.9609375,
          "content": "#!/usr/bin/env bash\n\n##############################################################################\n##\n##  Gradle start up script for UN*X\n##\n##############################################################################\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS=\"\"\n\nAPP_NAME=\"Gradle\"\nAPP_BASE_NAME=`basename \"$0\"`\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=\"maximum\"\n\nwarn ( ) {\n    echo \"$*\"\n}\n\ndie ( ) {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n}\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\ncase \"`uname`\" in\n  CYGWIN* )\n    cygwin=true\n    ;;\n  Darwin* )\n    darwin=true\n    ;;\n  MINGW* )\n    msys=true\n    ;;\nesac\n\n# For Cygwin, ensure paths are in UNIX format before anything is touched.\nif $cygwin ; then\n    [ -n \"$JAVA_HOME\" ] && JAVA_HOME=`cygpath --unix \"$JAVA_HOME\"`\nfi\n\n# Attempt to set APP_HOME\n# Resolve links: $0 may be a link\nPRG=\"$0\"\n# Need this for relative symlinks.\nwhile [ -h \"$PRG\" ] ; do\n    ls=`ls -ld \"$PRG\"`\n    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n    if expr \"$link\" : '/.*' > /dev/null; then\n        PRG=\"$link\"\n    else\n        PRG=`dirname \"$PRG\"`\"/$link\"\n    fi\ndone\nSAVED=\"`pwd`\"\ncd \"`dirname \\\"$PRG\\\"`/\" >&-\nAPP_HOME=\"`pwd -P`\"\ncd \"$SAVED\" >&-\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n    else\n        JAVACMD=\"$JAVA_HOME/bin/java\"\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=\"java\"\n    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\nfi\n\n# Increase the maximum file descriptors if we can.\nif [ \"$cygwin\" = \"false\" -a \"$darwin\" = \"false\" ] ; then\n    MAX_FD_LIMIT=`ulimit -H -n`\n    if [ $? -eq 0 ] ; then\n        if [ \"$MAX_FD\" = \"maximum\" -o \"$MAX_FD\" = \"max\" ] ; then\n            MAX_FD=\"$MAX_FD_LIMIT\"\n        fi\n        ulimit -n $MAX_FD\n        if [ $? -ne 0 ] ; then\n            warn \"Could not set maximum file descriptor limit: $MAX_FD\"\n        fi\n    else\n        warn \"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\"\n    fi\nfi\n\n# For Darwin, add options to specify how the application appears in the dock\nif $darwin; then\n    GRADLE_OPTS=\"$GRADLE_OPTS \\\"-Xdock:name=$APP_NAME\\\" \\\"-Xdock:icon=$APP_HOME/media/gradle.icns\\\"\"\nfi\n\n# For Cygwin, switch paths to Windows format before running java\nif $cygwin ; then\n    APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`\n    CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`\n\n    # We build the pattern for arguments to be converted via cygpath\n    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`\n    SEP=\"\"\n    for dir in $ROOTDIRSRAW ; do\n        ROOTDIRS=\"$ROOTDIRS$SEP$dir\"\n        SEP=\"|\"\n    done\n    OURCYGPATTERN=\"(^($ROOTDIRS))\"\n    # Add a user-defined pattern to the cygpath arguments\n    if [ \"$GRADLE_CYGPATTERN\" != \"\" ] ; then\n        OURCYGPATTERN=\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\"\n    fi\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    i=0\n    for arg in \"$@\" ; do\n        CHECK=`echo \"$arg\"|egrep -c \"$OURCYGPATTERN\" -`\n        CHECK2=`echo \"$arg\"|egrep -c \"^-\"`                                 ### Determine if an option\n\n        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition\n            eval `echo args$i`=`cygpath --path --ignore --mixed \"$arg\"`\n        else\n            eval `echo args$i`=\"\\\"$arg\\\"\"\n        fi\n        i=$((i+1))\n    done\n    case $i in\n        (0) set -- ;;\n        (1) set -- \"$args0\" ;;\n        (2) set -- \"$args0\" \"$args1\" ;;\n        (3) set -- \"$args0\" \"$args1\" \"$args2\" ;;\n        (4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;\n        (5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;\n        (6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;\n        (7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;\n        (8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;\n        (9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;\n    esac\nfi\n\n# Split up the JVM_OPTS And GRADLE_OPTS values into an array, following the shell quoting and substitution rules\nfunction splitJvmOpts() {\n    JVM_OPTS=(\"$@\")\n}\neval splitJvmOpts $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS\nJVM_OPTS[${#JVM_OPTS[*]}]=\"-Dorg.gradle.appname=$APP_BASE_NAME\"\n\nexec \"$JAVACMD\" \"${JVM_OPTS[@]}\" -classpath \"$CLASSPATH\" org.gradle.wrapper.GradleWrapperMain \"$@\"\n"
        },
        {
          "name": "gradlew.bat",
          "type": "blob",
          "size": 2.259765625,
          "content": "@if \"%DEBUG%\" == \"\" @echo off\n@rem ##########################################################################\n@rem\n@rem  Gradle startup script for Windows\n@rem\n@rem ##########################################################################\n\n@rem Set local scope for the variables with windows NT shell\nif \"%OS%\"==\"Windows_NT\" setlocal\n\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nset DEFAULT_JVM_OPTS=\n\nset DIRNAME=%~dp0\nif \"%DIRNAME%\" == \"\" set DIRNAME=.\nset APP_BASE_NAME=%~n0\nset APP_HOME=%DIRNAME%\n\n@rem Find java.exe\nif defined JAVA_HOME goto findJavaFromJavaHome\n\nset JAVA_EXE=java.exe\n%JAVA_EXE% -version >NUL 2>&1\nif \"%ERRORLEVEL%\" == \"0\" goto init\n\necho.\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\necho.\necho Please set the JAVA_HOME variable in your environment to match the\necho location of your Java installation.\n\ngoto fail\n\n:findJavaFromJavaHome\nset JAVA_HOME=%JAVA_HOME:\"=%\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\n\nif exist \"%JAVA_EXE%\" goto init\n\necho.\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\necho.\necho Please set the JAVA_HOME variable in your environment to match the\necho location of your Java installation.\n\ngoto fail\n\n:init\n@rem Get command-line arguments, handling Windowz variants\n\nif not \"%OS%\" == \"Windows_NT\" goto win9xME_args\nif \"%@eval[2+2]\" == \"4\" goto 4NT_args\n\n:win9xME_args\n@rem Slurp the command line arguments.\nset CMD_LINE_ARGS=\nset _SKIP=2\n\n:win9xME_args_slurp\nif \"x%~1\" == \"x\" goto execute\n\nset CMD_LINE_ARGS=%*\ngoto execute\n\n:4NT_args\n@rem Get arguments from the 4NT Shell from JP Software\nset CMD_LINE_ARGS=%$\n\n:execute\n@rem Setup the command line\n\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\n\n@rem Execute Gradle\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%\n\n:end\n@rem End local scope for the variables with windows NT shell\nif \"%ERRORLEVEL%\"==\"0\" goto mainEnd\n\n:fail\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\nrem the _cmd.exe /c_ return code!\nif  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1\nexit /b 1\n\n:mainEnd\nif \"%OS%\"==\"Windows_NT\" endlocal\n\n:omega\n"
        },
        {
          "name": "jitpack.yml",
          "type": "blob",
          "size": 0.1669921875,
          "content": "# configuration file for building snapshots and releases with jitpack.io\njdk:\n  - openjdk11\nbefore_install:\n  - sdk install java 11.0.10-open\n  - sdk use java 11.0.10-open"
        },
        {
          "name": "mavenpush.gradle",
          "type": "blob",
          "size": 2.556640625,
          "content": "apply plugin: 'maven-publish'\napply plugin: 'signing'\n\ndef sonatypeRepositoryUrl\nif (isReleaseBuild()) {\n    println 'RELEASE BUILD'\n    sonatypeRepositoryUrl = hasProperty('RELEASE_REPOSITORY_URL') ? RELEASE_REPOSITORY_URL\n            : \"https://oss.sonatype.org/service/local/staging/deploy/maven2/\"\n} else {\n    println 'DEBUG BUILD'\n    sonatypeRepositoryUrl = hasProperty('SNAPSHOT_REPOSITORY_URL') ? SNAPSHOT_REPOSITORY_URL\n            : \"https://oss.sonatype.org/content/repositories/snapshots/\"\n}\n\ndef getRepositoryUsername() {\n    return hasProperty('nexusUsername') ? nexusUsername : \"\"\n}\n\ndef getRepositoryPassword() {\n    return hasProperty('nexusPassword') ? nexusPassword : \"\"\n}\n\n\ntasks.register('androidJavadocs', Javadoc) {\n    source = android.sourceSets.main.java.sourceFiles\n}\n\ntasks.register('androidJavadocsJar', Jar) {\n    classifier = 'javadoc'\n    //basename = artifact_id\n    from androidJavadocs.destinationDir\n}\n\ntasks.register('androidSourcesJar', Jar) {\n    classifier = 'sources'\n    //basename = artifact_id\n    from android.sourceSets.main.java.sourceFiles\n}\n\npublishing {\n    repositories {\n        maven {\n            url = sonatypeRepositoryUrl\n            credentials {\n                username = getRepositoryUsername()\n                password = getRepositoryPassword()\n            }\n        }\n    }\n    publications {\n        maven(MavenPublication) {\n            afterEvaluate { project ->\n                from components.release\n                artifact androidSourcesJar\n                artifact androidJavadocsJar\n                version = project.version\n            }\n\n            pom {\n                name = POM_NAME\n                packaging = POM_PACKAGING\n                description = POM_DESCRIPTION\n                url = POM_URL\n                scm {\n                    url = POM_SCM_URL\n                    connection = POM_SCM_CONNECTION\n                    developerConnection = POM_SCM_DEV_CONNECTION\n                }\n\n                licenses {\n                    license {\n                        name = POM_LICENCE_NAME\n                        url = POM_LICENCE_URL\n                        distribution = POM_LICENCE_DIST\n                    }\n                }\n\n                developers {\n                    developer {\n                        id = POM_DEVELOPER_ID\n                        name = POM_DEVELOPER_NAME\n                    }\n                }\n            }\n        }\n    }\n}\n\n\nsigning {\n    required { isReleaseBuild() && gradle.taskGraph.hasTask(\"publishing\") }\n    sign publishing.publications.maven\n    sign configurations.archives\n}\n\n"
        },
        {
          "name": "preview.gif",
          "type": "blob",
          "size": 7957.8486328125,
          "content": ""
        },
        {
          "name": "preview.png",
          "type": "blob",
          "size": 1431.6904296875,
          "content": null
        },
        {
          "name": "sample",
          "type": "tree",
          "content": null
        },
        {
          "name": "settings.gradle",
          "type": "blob",
          "size": 0.0263671875,
          "content": "include ':ucrop', ':sample'"
        },
        {
          "name": "ucrop",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}