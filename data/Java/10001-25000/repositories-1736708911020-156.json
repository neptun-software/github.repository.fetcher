{
  "metadata": {
    "timestamp": 1736708911020,
    "page": 156,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "aosp-mirror/platform_frameworks_base",
      "stars": 10681,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 0.4501953125,
          "content": "BasedOnStyle: Google\n\nAccessModifierOffset: -4\nAlignOperands: false\nAllowShortFunctionsOnASingleLine: Empty\nAlwaysBreakBeforeMultilineStrings: false\nColumnLimit: 100\nCommentPragmas: NOLINT:.*\nConstructorInitializerIndentWidth: 6\nContinuationIndentWidth: 8\nIndentWidth: 4\nJavaImportGroups:\n- android\n- androidx\n- com.android\n- dalvik\n- libcore\n- com\n- junit\n- net\n- org\n- java\n- javax\nPenaltyBreakBeforeFirstCallParameter: 100000\nSpacesBeforeTrailingComments: 1\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0654296875,
          "content": ".idea\n.project\n*.iml\n*.sw*\ngen/\n.vscode/\n*.code-workspace\n.gradle/\n"
        },
        {
          "name": ".mailmap",
          "type": "blob",
          "size": 0.056640625,
          "content": "Ember Rose <emberrose@google.com> <ashleyrose@google.com>\n"
        },
        {
          "name": ".prebuilt_info",
          "type": "tree",
          "content": null
        },
        {
          "name": "ACTIVITY_MANAGER_OWNERS",
          "type": "blob",
          "size": 0.0810546875,
          "content": "mwachens@google.com\nsudheersai@google.com\nvarunshah@google.com\nyamasani@google.com\n"
        },
        {
          "name": "ACTIVITY_SECURITY_OWNERS",
          "type": "blob",
          "size": 0.0302734375,
          "content": "haok@google.com\nwnan@google.com"
        },
        {
          "name": "ADPF_OWNERS",
          "type": "blob",
          "size": 0.0771484375,
          "content": "sumir@google.com\nchingtangyu@google.com\nxwxw@google.com\nmattbuckley@google.com\n"
        },
        {
          "name": "AconfigFlags.bp",
          "type": "blob",
          "size": 50.375,
          "content": "// Copyright (C) 2023 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\naconfig_declarations_group {\n    name: \"framework-minus-apex-aconfig-declarations\",\n    aconfig_declarations_groups: [\n        \"aconfig_trade_in_mode_flags\",\n        \"audio-framework-aconfig\",\n    ],\n    java_aconfig_libraries: [\n        // !!! KEEP THIS LIST ALPHABETICAL !!!\n        \"aconfig_mediacodec_flags_java_lib\",\n        \"android-sdk-flags-java\",\n        \"android.adaptiveauth.flags-aconfig-java\",\n        \"android.app.appfunctions.flags-aconfig-java\",\n        \"android.app.contextualsearch.flags-aconfig-java\",\n        \"android.app.flags-aconfig-java\",\n        \"android.app.jank.flags-aconfig-java\",\n        \"android.app.ondeviceintelligence-aconfig-java\",\n        \"android.app.smartspace.flags-aconfig-java\",\n        \"android.app.supervision.flags-aconfig-java\",\n        \"android.app.usage.flags-aconfig-java\",\n        \"android.app.wearable.flags-aconfig-java\",\n        \"android.appwidget.flags-aconfig-java\",\n        \"android.chre.flags-aconfig-java\",\n        \"android.companion.flags-aconfig-java\",\n        \"android.companion.virtual.flags-aconfig-java\",\n        \"android.companion.virtualdevice.flags-aconfig-java\",\n        \"android.content.flags-aconfig-java\",\n        \"android.content.pm.flags-aconfig-java\",\n        \"android.content.res.flags-aconfig-java\",\n        \"android.crashrecovery.flags-aconfig-java\",\n        \"android.credentials.flags-aconfig-java\",\n        \"android.database.sqlite-aconfig-java\",\n        \"android.hardware.biometrics.flags-aconfig-java\",\n        \"android.hardware.devicestate.feature.flags-aconfig-java\",\n        \"android.hardware.flags-aconfig-java\",\n        \"android.hardware.radio.flags-aconfig-java\",\n        \"android.hardware.usb.flags-aconfig-java\",\n        \"android.location.flags-aconfig-java\",\n        \"android.media.codec-aconfig-java\",\n        \"android.media.tv.flags-aconfig-java\",\n        \"android.multiuser.flags-aconfig-java\",\n        \"android.net.platform.flags-aconfig-java\",\n        \"android.net.wifi.flags-aconfig-java\",\n        \"android.nfc.flags-aconfig-java\",\n        \"android.os.flags-aconfig-java\",\n        \"android.os.vibrator.flags-aconfig-java\",\n        \"android.permission.flags-aconfig-java\",\n        \"android.provider.flags-aconfig-java\",\n        \"android.security.flags-aconfig-java\",\n        \"android.server.app.flags-aconfig-java\",\n        \"android.service.autofill.flags-aconfig-java\",\n        \"android.service.chooser.flags-aconfig-java\",\n        \"android.service.controls.flags-aconfig-java\",\n        \"android.service.dreams.flags-aconfig-java\",\n        \"android.service.notification.flags-aconfig-java\",\n        \"android.service.appprediction.flags-aconfig-java\",\n        \"android.service.voice.flags-aconfig-java\",\n        \"android.speech.flags-aconfig-java\",\n        \"android.systemserver.flags-aconfig-java\",\n        \"android.tracing.flags-aconfig-java\",\n        \"android.view.accessibility.flags-aconfig-java\",\n        \"android.view.contentcapture.flags-aconfig-java\",\n        \"android.view.contentprotection.flags-aconfig-java\",\n        \"android.view.flags-aconfig-java\",\n        \"android.view.inputmethod.flags-aconfig-java\",\n        \"android.webkit.flags-aconfig-java\",\n        \"android.widget.flags-aconfig-java\",\n        \"art_exported_aconfig_flags_lib\",\n        \"backstage_power_flags_lib\",\n        \"backup_flags_lib\",\n        \"camera_platform_flags_core_java_lib\",\n        \"com.android.hardware.input-aconfig-java\",\n        \"com.android.input.flags-aconfig-java\",\n        \"com.android.internal.compat.flags-aconfig-java\",\n        \"com.android.internal.foldables.flags-aconfig-java\",\n        \"com.android.internal.os.flags-aconfig-java\",\n        \"com.android.internal.pm.pkg.component.flags-aconfig-java\",\n        \"com.android.media.flags.bettertogether-aconfig-java\",\n        \"com.android.media.flags.editing-aconfig-java\",\n        \"com.android.media.flags.performance-aconfig-java\",\n        \"com.android.media.flags.projection-aconfig-java\",\n        \"com.android.net.http.flags-aconfig-exported-java\",\n        \"com.android.net.thread.platform.flags-aconfig-java\",\n        \"com.android.ranging.flags.ranging-aconfig-java-export\",\n        \"com.android.server.contextualsearch.flags-java\",\n        \"com.android.server.flags.services-aconfig-java\",\n        \"com.android.text.flags-aconfig-java\",\n        \"com.android.window.flags.window-aconfig-java\",\n        \"device_policy_aconfig_flags_lib\",\n        \"display_flags_lib\",\n        \"dropbox_flags_lib\",\n        \"framework-jobscheduler-job.flags-aconfig-java\",\n        \"framework_graphics_flags_java_lib\",\n        \"hwui_flags_java_lib\",\n        \"interaction_jank_monitor_flags_lib\",\n        \"keystore2_flags_java-framework\",\n        \"libcore_exported_aconfig_flags_lib\",\n        \"libgui_flags_java_lib\",\n        \"power_flags_lib\",\n        \"sdk_sandbox_flags_lib\",\n        \"surfaceflinger_flags_java_lib\",\n        \"telecom_flags_core_java_lib\",\n        \"telephony_flags_core_java_lib\",\n        // !!! KEEP THIS LIST ALPHABETICAL !!!\n    ],\n}\n\nfilegroup {\n    name: \"framework-minus-apex-aconfig-srcjars\",\n    device_common_srcs: [\n        \":framework-minus-apex-aconfig-declarations{.srcjars}\",\n    ],\n}\n\n// Aconfig declarations and libraries for the core framework\njava_defaults {\n    name: \"framework-minus-apex-aconfig-libraries\",\n    // Add java_aconfig_libraries to here to add them to the core framework\n    // Add aconfig-annotations-lib as a dependency for the optimization\n    srcs: [\n        \":framework-minus-apex-aconfig-declarations{.srcjars}\",\n    ],\n    libs: [\"aconfig-annotations-lib\"],\n}\n\n// Default flags for java_aconfig_libraries that go into framework-minus-apex\n// These libraries will not work standalone\njava_defaults {\n    name: \"framework-minus-apex-aconfig-java-defaults\",\n    sdk_version: \"core_platform\",\n    libs: [\"fake_device_config\"],\n}\n\n// ART\njava_aconfig_library {\n    name: \"art_exported_aconfig_flags_lib\",\n    aconfig_declarations: \"art-aconfig-flags\",\n    mode: \"exported\",\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n}\n\n// Camera\njava_aconfig_library {\n    name: \"camera_platform_flags_core_java_lib\",\n    aconfig_declarations: \"camera_platform_flags\",\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n}\n\n// Core Libraries / libcore\njava_aconfig_library {\n    name: \"libcore_exported_aconfig_flags_lib\",\n    aconfig_declarations: \"libcore-aconfig-flags\",\n    mode: \"exported\",\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n}\n\n// Telecom\njava_aconfig_library {\n    name: \"telecom_flags_core_java_lib\",\n    aconfig_declarations: \"telecom_flags\",\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n}\n\n// Telephony\njava_aconfig_library {\n    name: \"telephony_flags_core_java_lib\",\n    aconfig_declarations: \"telephony_flags\",\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n}\n\ncc_aconfig_library {\n    name: \"telephony_flags_c_lib\",\n    aconfig_declarations: \"telephony_flags\",\n}\n\n// Window\naconfig_declarations {\n    name: \"com.android.window.flags.window-aconfig\",\n    exportable: true,\n    package: \"com.android.window.flags\",\n    container: \"system\",\n    srcs: [\"core/java/android/window/flags/*.aconfig\"],\n}\n\njava_aconfig_library {\n    name: \"com.android.window.flags.window-aconfig-java\",\n    aconfig_declarations: \"com.android.window.flags.window-aconfig\",\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n}\n\ncc_aconfig_library {\n    name: \"com.android.window.flags.window-aconfig_flags_c_lib\",\n    aconfig_declarations: \"com.android.window.flags.window-aconfig\",\n}\n\n// DeviceStateManager\naconfig_declarations {\n    name: \"android.hardware.devicestate.feature.flags-aconfig\",\n    exportable: true,\n    package: \"android.hardware.devicestate.feature.flags\",\n    container: \"system\",\n    srcs: [\"core/java/android/hardware/devicestate/feature/*.aconfig\"],\n}\n\njava_aconfig_library {\n    name: \"android.hardware.devicestate.feature.flags-aconfig-java\",\n    aconfig_declarations: \"android.hardware.devicestate.feature.flags-aconfig\",\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n}\n\n// Input\naconfig_declarations {\n    name: \"com.android.hardware.input.input-aconfig\",\n    exportable: true,\n    package: \"com.android.hardware.input\",\n    container: \"system\",\n    srcs: [\"core/java/android/hardware/input/*.aconfig\"],\n}\n\njava_aconfig_library {\n    name: \"com.android.hardware.input-aconfig-java\",\n    aconfig_declarations: \"com.android.hardware.input.input-aconfig\",\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n}\n\njava_aconfig_library {\n    name: \"com.android.input.flags-aconfig-java\",\n    aconfig_declarations: \"com.android.input.flags-aconfig\",\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n}\n\n// Text\naconfig_declarations {\n    name: \"com.android.text.flags-aconfig\",\n    package: \"com.android.text.flags\",\n    container: \"system\",\n    srcs: [\"core/java/android/text/flags/*.aconfig\"],\n}\n\njava_aconfig_library {\n    name: \"com.android.text.flags-aconfig-java\",\n    aconfig_declarations: \"com.android.text.flags-aconfig\",\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n}\n\ncc_aconfig_library {\n    name: \"aconfig_text_flags_c_lib\",\n    aconfig_declarations: \"com.android.text.flags-aconfig\",\n}\n\nrust_aconfig_library {\n    name: \"libandroid_text_flags_rust\",\n    crate_name: \"android_text_flags\",\n    aconfig_declarations: \"com.android.text.flags-aconfig\",\n}\n\n// Location\naconfig_declarations {\n    name: \"android.location.flags-aconfig\",\n    package: \"android.location.flags\",\n    container: \"system\",\n    srcs: [\n        \"location/java/android/location/flags/*.aconfig\",\n    ],\n}\n\ncc_aconfig_library {\n    name: \"android_location_flags_c_lib\",\n    vendor_available: true,\n    aconfig_declarations: \"android.location.flags-aconfig\",\n}\n\njava_aconfig_library {\n    name: \"android.location.flags-aconfig-java\",\n    aconfig_declarations: \"android.location.flags-aconfig\",\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n}\n\n// NFC\naconfig_declarations {\n    name: \"android.nfc.flags-aconfig\",\n    package: \"android.nfc\",\n    container: \"system\",\n    srcs: [\"nfc-non-updatable/flags/*.aconfig\"],\n}\n\ncc_aconfig_library {\n    name: \"android_nfc_flags_aconfig_c_lib\",\n    vendor_available: true,\n    aconfig_declarations: \"android.nfc.flags-aconfig\",\n    min_sdk_version: \"34\",\n    apex_available: [\n        \"//apex_available:platform\",\n        \"com.android.nfcservices\",\n        \"nfc_nci.st21nfc.default\",\n    ],\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n}\n\njava_aconfig_library {\n    name: \"android.nfc.flags-aconfig-java\",\n    aconfig_declarations: \"android.nfc.flags-aconfig\",\n    min_sdk_version: \"34\",\n    apex_available: [\n        \"//apex_available:platform\",\n        \"com.android.nfcservices\",\n    ],\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n}\n\n// Security\naconfig_declarations {\n    name: \"android.security.flags-aconfig\",\n    package: \"android.security\",\n    exportable: true,\n    container: \"system\",\n    srcs: [\"core/java/android/security/*.aconfig\"],\n}\n\njava_aconfig_library {\n    name: \"android.security.flags-aconfig-java\",\n    aconfig_declarations: \"android.security.flags-aconfig\",\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n}\n\njava_aconfig_library {\n    name: \"android.security.flags-aconfig-java-host\",\n    aconfig_declarations: \"android.security.flags-aconfig\",\n    host_supported: true,\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n}\n\njava_aconfig_library {\n    name: \"android.security.flags-aconfig-java-export\",\n    aconfig_declarations: \"android.security.flags-aconfig\",\n    mode: \"exported\",\n    min_sdk_version: \"30\",\n    apex_available: [\n        \"//apex_available:platform\",\n        \"com.android.tethering\",\n        \"com.android.wifi\",\n    ],\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n}\n\ncc_aconfig_library {\n    name: \"android_security_flags_aconfig_c_lib\",\n    aconfig_declarations: \"android.security.flags-aconfig\",\n}\n\n// UsageStats\naconfig_declarations {\n    name: \"android.app.usage.flags-aconfig\",\n    package: \"android.app.usage\",\n    container: \"system\",\n    srcs: [\"core/java/android/app/usage/*.aconfig\"],\n}\n\njava_aconfig_library {\n    name: \"android.app.usage.flags-aconfig-java\",\n    aconfig_declarations: \"android.app.usage.flags-aconfig\",\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n}\n\njava_aconfig_library {\n    name: \"android.app.usage.flags-aconfig-java-host\",\n    aconfig_declarations: \"android.app.usage.flags-aconfig\",\n    host_supported: true,\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n}\n\n// OS\naconfig_declarations {\n    name: \"android.os.flags-aconfig\",\n    package: \"android.os\",\n    exportable: true,\n    container: \"system\",\n    srcs: [\"core/java/android/os/*.aconfig\"],\n}\n\njava_aconfig_library {\n    name: \"android.os.flags-aconfig-java\",\n    aconfig_declarations: \"android.os.flags-aconfig\",\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n}\n\njava_aconfig_library {\n    name: \"android.os.flags-aconfig-java-host\",\n    aconfig_declarations: \"android.os.flags-aconfig\",\n    host_supported: true,\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n}\n\njava_aconfig_library {\n    name: \"android.os.flags-aconfig-java-export\",\n    aconfig_declarations: \"android.os.flags-aconfig\",\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n    mode: \"exported\",\n    min_sdk_version: \"30\",\n    apex_available: [\n        \"//apex_available:platform\",\n        \"com.android.art\",\n        \"com.android.art.debug\",\n        \"com.android.btservices\",\n        \"com.android.mediaprovider\",\n        \"com.android.permission\",\n    ],\n}\n\ncc_aconfig_library {\n    name: \"android.os.flags-aconfig-cc\",\n    aconfig_declarations: \"android.os.flags-aconfig\",\n}\n\ncc_aconfig_library {\n    name: \"android.os.flags-aconfig-cc-test\",\n    aconfig_declarations: \"android.os.flags-aconfig\",\n    mode: \"test\",\n}\n\ncc_aconfig_library {\n    name: \"android.os.flags-aconfig-cc-host\",\n    aconfig_declarations: \"android.os.flags-aconfig\",\n    host_supported: true,\n}\n\n// OS Internal\naconfig_declarations {\n    name: \"com.android.internal.os.flags-aconfig\",\n    package: \"com.android.internal.os\",\n    container: \"system\",\n    srcs: [\"core/java/com/android/internal/os/flags.aconfig\"],\n}\n\njava_aconfig_library {\n    name: \"com.android.internal.os.flags-aconfig-java\",\n    aconfig_declarations: \"com.android.internal.os.flags-aconfig\",\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n}\n\n// VirtualDeviceManager\ncc_aconfig_library {\n    name: \"android.companion.virtualdevice.flags-aconfig-cc\",\n    aconfig_declarations: \"android.companion.virtualdevice.flags-aconfig\",\n    host_supported: true,\n    mode: \"test\",\n}\n\njava_aconfig_library {\n    name: \"android.companion.virtualdevice.flags-aconfig-java\",\n    aconfig_declarations: \"android.companion.virtualdevice.flags-aconfig\",\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n}\n\naconfig_declarations {\n    name: \"android.companion.virtualdevice.flags-aconfig\",\n    package: \"android.companion.virtualdevice.flags\",\n    container: \"system\",\n    exportable: true,\n    srcs: [\"core/java/android/companion/virtual/flags/*.aconfig\"],\n}\n\njava_aconfig_library {\n    name: \"android.companion.virtualdevice.flags-aconfig-java-export\",\n    aconfig_declarations: \"android.companion.virtualdevice.flags-aconfig\",\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n    mode: \"exported\",\n    min_sdk_version: \"30\",\n    apex_available: [\n        \"//apex_available:platform\",\n        \"com.android.permission\",\n    ],\n}\n\njava_aconfig_library {\n    name: \"android.companion.virtual.flags-aconfig-java\",\n    aconfig_declarations: \"android.companion.virtual.flags-aconfig\",\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n}\n\naconfig_declarations {\n    name: \"android.companion.virtual.flags-aconfig\",\n    package: \"android.companion.virtual.flags\",\n    container: \"system\",\n    srcs: [\"core/java/android/companion/virtual/*.aconfig\"],\n}\n\n// InputMethod\naconfig_declarations {\n    name: \"android.view.inputmethod.flags-aconfig\",\n    package: \"android.view.inputmethod\",\n    container: \"system\",\n    srcs: [\"core/java/android/view/inputmethod/flags.aconfig\"],\n}\n\njava_aconfig_library {\n    name: \"android.view.inputmethod.flags-aconfig-java\",\n    aconfig_declarations: \"android.view.inputmethod.flags-aconfig\",\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n}\n\n// Vibrator\naconfig_declarations {\n    name: \"android.os.vibrator.flags-aconfig\",\n    package: \"android.os.vibrator\",\n    container: \"system\",\n    srcs: [\"core/java/android/os/vibrator/*.aconfig\"],\n}\n\njava_aconfig_library {\n    name: \"android.os.vibrator.flags-aconfig-java\",\n    aconfig_declarations: \"android.os.vibrator.flags-aconfig\",\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n}\n\ncc_aconfig_library {\n    name: \"android.os.vibrator.flags-aconfig-cc\",\n    aconfig_declarations: \"android.os.vibrator.flags-aconfig\",\n    host_supported: true,\n    vendor_available: true,\n}\n\n// View\naconfig_declarations {\n    name: \"android.view.flags-aconfig\",\n    package: \"android.view.flags\",\n    container: \"system\",\n    srcs: [\"core/java/android/view/flags/*.aconfig\"],\n}\n\njava_aconfig_library {\n    name: \"android.view.flags-aconfig-java\",\n    aconfig_declarations: \"android.view.flags-aconfig\",\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n}\n\ncc_aconfig_library {\n    name: \"aconfig_view_flags_c_lib\",\n    aconfig_declarations: \"android.view.flags-aconfig\",\n}\n\n// View.accessibility\naconfig_declarations {\n    name: \"android.view.accessibility.flags-aconfig\",\n    package: \"android.view.accessibility\",\n    container: \"system\",\n    srcs: [\"core/java/android/view/accessibility/flags/*.aconfig\"],\n}\n\njava_aconfig_library {\n    name: \"android.view.accessibility.flags-aconfig-java\",\n    aconfig_declarations: \"android.view.accessibility.flags-aconfig\",\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n}\n\ncc_aconfig_library {\n    name: \"aconfig_view_accessibility_flags_c_lib\",\n    aconfig_declarations: \"android.view.accessibility.flags-aconfig\",\n}\n\n// Hardware\naconfig_declarations {\n    name: \"android.hardware.flags-aconfig\",\n    exportable: true,\n    package: \"android.hardware.flags\",\n    container: \"system\",\n    srcs: [\"core/java/android/hardware/flags/*.aconfig\"],\n}\n\njava_aconfig_library {\n    name: \"android.hardware.flags-aconfig-java\",\n    aconfig_declarations: \"android.hardware.flags-aconfig\",\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n}\n\n// Widget\naconfig_declarations {\n    name: \"android.widget.flags-aconfig\",\n    package: \"android.widget.flags\",\n    container: \"system\",\n    srcs: [\"core/java/android/widget/flags/*.aconfig\"],\n}\n\njava_aconfig_library {\n    name: \"android.widget.flags-aconfig-java\",\n    aconfig_declarations: \"android.widget.flags-aconfig\",\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n}\n\nrust_aconfig_library {\n    name: \"libandroid_security_flags_rust\",\n    crate_name: \"android_security_flags\",\n    aconfig_declarations: \"android.security.flags-aconfig\",\n}\n\n// Package Manager\naconfig_declarations {\n    name: \"android.content.pm.flags-aconfig\",\n    package: \"android.content.pm\",\n    container: \"system\",\n    exportable: true,\n    srcs: [\"core/java/android/content/pm/flags.aconfig\"],\n}\n\njava_aconfig_library {\n    name: \"android.content.pm.flags-aconfig-java\",\n    aconfig_declarations: \"android.content.pm.flags-aconfig\",\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n}\n\njava_aconfig_library {\n    name: \"android.content.pm.flags-aconfig-java-export\",\n    aconfig_declarations: \"android.content.pm.flags-aconfig\",\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n    mode: \"exported\",\n    min_sdk_version: \"30\",\n    apex_available: [\n        \"//apex_available:platform\",\n        \"com.android.art\",\n        \"com.android.art.debug\",\n        \"com.android.permission\",\n    ],\n}\n\njava_aconfig_library {\n    name: \"android.content.pm.flags-aconfig-java-host\",\n    aconfig_declarations: \"android.content.pm.flags-aconfig\",\n    host_supported: true,\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n}\n\n// Resources\naconfig_declarations {\n    name: \"android.content.res.flags-aconfig\",\n    package: \"android.content.res\",\n    container: \"system\",\n    srcs: [\"core/java/android/content/res/*.aconfig\"],\n}\n\njava_aconfig_library {\n    name: \"android.content.res.flags-aconfig-java\",\n    aconfig_declarations: \"android.content.res.flags-aconfig\",\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n}\n\njava_aconfig_library {\n    name: \"android.content.res.flags-aconfig-java-host\",\n    aconfig_declarations: \"android.content.res.flags-aconfig\",\n    host_supported: true,\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n}\n\n// Media BetterTogether\naconfig_declarations {\n    name: \"com.android.media.flags.bettertogether-aconfig\",\n    package: \"com.android.media.flags\",\n    container: \"system\",\n    srcs: [\"media/java/android/media/flags/media_better_together.aconfig\"],\n}\n\njava_aconfig_library {\n    name: \"com.android.media.flags.bettertogether-aconfig-java\",\n    aconfig_declarations: \"com.android.media.flags.bettertogether-aconfig\",\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n}\n\njava_aconfig_library {\n    name: \"com.android.media.flags.bettertogether-aconfig-java-host\",\n    aconfig_declarations: \"com.android.media.flags.bettertogether-aconfig\",\n    host_supported: true,\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n}\n\n// Media Editing\naconfig_declarations {\n    name: \"com.android.media.flags.editing-aconfig\",\n    exportable: true,\n    package: \"com.android.media.editing.flags\",\n    container: \"system\",\n    srcs: [\n        \"media/java/android/media/flags/editing.aconfig\",\n    ],\n}\n\njava_aconfig_library {\n    name: \"com.android.media.flags.editing-aconfig-java\",\n    aconfig_declarations: \"com.android.media.flags.editing-aconfig\",\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n}\n\ncc_aconfig_library {\n    name: \"com.android.media.flags.editing-aconfig-cc\",\n    aconfig_declarations: \"com.android.media.flags.editing-aconfig\",\n}\n\n// MediaProjection\naconfig_declarations {\n    name: \"com.android.media.flags.projection-aconfig\",\n    package: \"com.android.media.projection.flags\",\n    container: \"system\",\n    srcs: [\n        \"media/java/android/media/flags/projection.aconfig\",\n    ],\n}\n\njava_aconfig_library {\n    name: \"com.android.media.flags.projection-aconfig-java\",\n    aconfig_declarations: \"com.android.media.flags.projection-aconfig\",\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n}\n\n// Media Performance\naconfig_declarations {\n    name: \"com.android.media.flags.performance-aconfig\",\n    package: \"com.android.media.performance.flags\",\n    container: \"system\",\n    srcs: [\n        \"media/java/android/media/flags/performance.aconfig\",\n    ],\n}\n\njava_aconfig_library {\n    name: \"com.android.media.flags.performance-aconfig-java\",\n    aconfig_declarations: \"com.android.media.flags.performance-aconfig\",\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n}\n\n// Media TV\naconfig_declarations {\n    name: \"android.media.tv.flags-aconfig\",\n    exportable: true,\n    package: \"android.media.tv.flags\",\n    container: \"system\",\n    srcs: [\"media/java/android/media/tv/flags/*.aconfig\"],\n}\n\njava_aconfig_library {\n    name: \"android.media.tv.flags-aconfig-java\",\n    aconfig_declarations: \"android.media.tv.flags-aconfig\",\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n}\n\n// OnDeviceIntelligence\naconfig_declarations {\n    name: \"android.app.ondeviceintelligence-aconfig\",\n    exportable: true,\n    package: \"android.app.ondeviceintelligence.flags\",\n    container: \"system\",\n    srcs: [\"core/java/android/app/ondeviceintelligence/flags/ondevice_intelligence.aconfig\"],\n}\n\njava_aconfig_library {\n    name: \"android.app.ondeviceintelligence-aconfig-java\",\n    aconfig_declarations: \"android.app.ondeviceintelligence-aconfig\",\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n}\n\n// Permissions\naconfig_declarations {\n    name: \"android.permission.flags-aconfig\",\n    container: \"system\",\n    package: \"android.permission.flags\",\n    exportable: true,\n    srcs: [\"core/java/android/permission/flags.aconfig\"],\n}\n\njava_aconfig_library {\n    name: \"android.permission.flags-aconfig-java-export\",\n    aconfig_declarations: \"android.permission.flags-aconfig\",\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n    mode: \"exported\",\n    min_sdk_version: \"30\",\n    apex_available: [\n        \"//apex_available:platform\",\n        \"com.android.permission\",\n        \"com.android.nfcservices\",\n    ],\n}\n\njava_aconfig_library {\n    name: \"android.permission.flags-aconfig-java-host\",\n    aconfig_declarations: \"android.permission.flags-aconfig\",\n    host_supported: true,\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n    min_sdk_version: \"30\",\n}\n\njava_aconfig_library {\n    name: \"android.permission.flags-aconfig-java\",\n    aconfig_declarations: \"android.permission.flags-aconfig\",\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n    min_sdk_version: \"30\",\n    apex_available: [\n        \"//apex_available:platform\",\n        \"com.android.nfcservices\",\n    ],\n}\n\n// SQLite\naconfig_declarations {\n    name: \"android.database.sqlite-aconfig\",\n    package: \"android.database.sqlite\",\n    container: \"system\",\n    srcs: [\"core/java/android/database/sqlite/*.aconfig\"],\n}\n\njava_aconfig_library {\n    name: \"android.database.sqlite-aconfig-java\",\n    aconfig_declarations: \"android.database.sqlite-aconfig\",\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n}\n\ncc_aconfig_library {\n    name: \"android.database.sqlite-aconfig-cc\",\n    aconfig_declarations: \"android.database.sqlite-aconfig\",\n    host_supported: true,\n}\n\n// Biometrics\naconfig_declarations {\n    name: \"android.hardware.biometrics.flags-aconfig\",\n    exportable: true,\n    package: \"android.hardware.biometrics\",\n    container: \"system\",\n    srcs: [\"core/java/android/hardware/biometrics/flags.aconfig\"],\n}\n\njava_aconfig_library {\n    name: \"android.hardware.biometrics.flags-aconfig-java\",\n    aconfig_declarations: \"android.hardware.biometrics.flags-aconfig\",\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n}\n\n// Graphics\njava_aconfig_library {\n    name: \"hwui_flags_java_lib\",\n    aconfig_declarations: \"hwui_flags\",\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n}\n\njava_aconfig_library {\n    name: \"framework_graphics_flags_java_lib\",\n    aconfig_declarations: \"framework_graphics_flags\",\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n}\n\n// Display\njava_aconfig_library {\n    name: \"display_flags_lib\",\n    aconfig_declarations: \"display_flags\",\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n}\n\ncc_aconfig_library {\n    name: \"android.server.display.flags-aconfig-cc\",\n    aconfig_declarations: \"display_flags\",\n}\n\njava_aconfig_library {\n    name: \"com.android.internal.foldables.flags-aconfig-java\",\n    aconfig_declarations: \"fold_lock_setting_flags\",\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n}\n\n// Platform Compat\njava_aconfig_library {\n    name: \"com.android.internal.compat.flags-aconfig-java\",\n    aconfig_declarations: \"compat_logging_flags\",\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n}\n\n// Multi user\naconfig_declarations {\n    name: \"android.multiuser.flags-aconfig\",\n    package: \"android.multiuser\",\n    container: \"system\",\n    srcs: [\"core/java/android/content/pm/multiuser.aconfig\"],\n}\n\njava_aconfig_library {\n    name: \"android.multiuser.flags-aconfig-java\",\n    aconfig_declarations: \"android.multiuser.flags-aconfig\",\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n}\n\n// android.app\naconfig_declarations {\n    name: \"android.app.flags-aconfig\",\n    package: \"android.app\",\n    container: \"system\",\n    srcs: [\"core/java/android/app/*.aconfig\"],\n}\n\njava_aconfig_library {\n    name: \"android.app.flags-aconfig-java\",\n    aconfig_declarations: \"android.app.flags-aconfig\",\n    min_sdk_version: \"34\",\n    apex_available: [\n        \"//apex_available:platform\",\n        \"com.android.nfcservices\",\n    ],\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n}\n\n// Broadcast Radio\naconfig_declarations {\n    name: \"android.hardware.radio.flags-aconfig\",\n    exportable: true,\n    package: \"android.hardware.radio\",\n    container: \"system\",\n    srcs: [\"core/java/android/hardware/radio/*.aconfig\"],\n}\n\njava_aconfig_library {\n    name: \"android.hardware.radio.flags-aconfig-java\",\n    aconfig_declarations: \"android.hardware.radio.flags-aconfig\",\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n}\n\n// Credential Manager\naconfig_declarations {\n    name: \"android.credentials.flags-aconfig\",\n    package: \"android.credentials.flags\",\n    container: \"system\",\n    srcs: [\"core/java/android/credentials/flags.aconfig\"],\n    exportable: true,\n}\n\njava_aconfig_library {\n    name: \"android.credentials.flags-aconfig-java\",\n    aconfig_declarations: \"android.credentials.flags-aconfig\",\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n}\n\njava_aconfig_library {\n    name: \"android.credentials.flags-aconfig-java-export\",\n    aconfig_declarations: \"android.credentials.flags-aconfig\",\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n    mode: \"exported\",\n}\n\n// Content Protection\naconfig_declarations {\n    name: \"android.view.contentprotection.flags-aconfig\",\n    exportable: true,\n    package: \"android.view.contentprotection.flags\",\n    container: \"system\",\n    srcs: [\"core/java/android/view/contentprotection/flags/*.aconfig\"],\n}\n\njava_aconfig_library {\n    name: \"android.view.contentprotection.flags-aconfig-java\",\n    aconfig_declarations: \"android.view.contentprotection.flags-aconfig\",\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n}\n\n// Contextual Search system service\naconfig_declarations {\n    name: \"com.android.server.contextualsearch.flags-aconfig\",\n    package: \"com.android.server.contextualsearch.flags\",\n    container: \"system\",\n    srcs: [\"services/contextualsearch/flags/flags.aconfig\"],\n}\n\njava_aconfig_library {\n    name: \"com.android.server.contextualsearch.flags-java\",\n    aconfig_declarations: \"com.android.server.contextualsearch.flags-aconfig\",\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n}\n\n// Server Services Flags\naconfig_declarations {\n    name: \"com.android.server.flags.services-aconfig\",\n    package: \"com.android.server.flags\",\n    container: \"system\",\n    srcs: [\"services/core/java/com/android/server/flags/*.aconfig\"],\n}\n\njava_aconfig_library {\n    name: \"com.android.server.flags.services-aconfig-java\",\n    aconfig_declarations: \"com.android.server.flags.services-aconfig\",\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n}\n\n// App prediction\naconfig_declarations {\n    name: \"android.service.appprediction.flags-aconfig\",\n    exportable: true,\n    package: \"android.service.appprediction.flags\",\n    container: \"system\",\n    srcs: [\"core/java/android/service/appprediction/flags/*.aconfig\"],\n}\n\njava_aconfig_library {\n    name: \"android.service.appprediction.flags-aconfig-java\",\n    aconfig_declarations: \"android.service.appprediction.flags-aconfig\",\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n}\n\n// Controls\naconfig_declarations {\n    name: \"android.service.controls.flags-aconfig\",\n    exportable: true,\n    package: \"android.service.controls.flags\",\n    container: \"system\",\n    srcs: [\"core/java/android/service/controls/flags/*.aconfig\"],\n}\n\njava_aconfig_library {\n    name: \"android.service.controls.flags-aconfig-java\",\n    aconfig_declarations: \"android.service.controls.flags-aconfig\",\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n}\n\n// Voice\naconfig_declarations {\n    name: \"android.service.voice.flags-aconfig\",\n    exportable: true,\n    package: \"android.service.voice.flags\",\n    container: \"system\",\n    srcs: [\"core/java/android/service/voice/flags/*.aconfig\"],\n}\n\njava_aconfig_library {\n    name: \"android.service.voice.flags-aconfig-java\",\n    aconfig_declarations: \"android.service.voice.flags-aconfig\",\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n}\n\n// Autofill\naconfig_declarations {\n    name: \"android.service.autofill.flags-aconfig\",\n    package: \"android.service.autofill\",\n    container: \"system\",\n    srcs: [\n        \"services/autofill/bugfixes.aconfig\",\n        \"services/autofill/features.aconfig\",\n    ],\n}\n\njava_aconfig_library {\n    name: \"android.service.autofill.flags-aconfig-java\",\n    aconfig_declarations: \"android.service.autofill.flags-aconfig\",\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n}\n\n// Companion\naconfig_declarations {\n    name: \"android.companion.flags-aconfig\",\n    exportable: true,\n    package: \"android.companion\",\n    container: \"system\",\n    srcs: [\"core/java/android/companion/*.aconfig\"],\n}\n\njava_aconfig_library {\n    name: \"android.companion.flags-aconfig-java\",\n    aconfig_declarations: \"android.companion.flags-aconfig\",\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n}\n\n// Networking\naconfig_declarations {\n    name: \"android.net.platform.flags-aconfig\",\n    exportable: true,\n    package: \"android.net.platform.flags\",\n    container: \"system\",\n    srcs: [\"core/java/android/net/flags.aconfig\"],\n    visibility: [\":__subpackages__\"],\n}\n\n// Thread network\naconfig_declarations {\n    name: \"com.android.net.thread.platform.flags-aconfig\",\n    exportable: true,\n    package: \"com.android.net.thread.platform.flags\",\n    container: \"system\",\n    srcs: [\"core/java/android/net/thread/flags.aconfig\"],\n}\n\njava_aconfig_library {\n    name: \"android.net.platform.flags-aconfig-java\",\n    aconfig_declarations: \"android.net.platform.flags-aconfig\",\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n    visibility: [\":__subpackages__\"],\n}\n\njava_aconfig_library {\n    name: \"com.android.net.thread.platform.flags-aconfig-java\",\n    aconfig_declarations: \"com.android.net.thread.platform.flags-aconfig\",\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n}\n\n// Media\naconfig_declarations {\n    name: \"android.media.playback.flags-aconfig\",\n    package: \"com.android.media.playback.flags\",\n    container: \"system\",\n    srcs: [\"media/jni/playback_flags.aconfig\"],\n}\n\ncc_aconfig_library {\n    name: \"android.media.playback.flags-aconfig-cc\",\n    aconfig_declarations: \"android.media.playback.flags-aconfig\",\n}\n\njava_aconfig_library {\n    name: \"android.media.playback.flags-aconfig-java\",\n    aconfig_declarations: \"android.media.playback.flags-aconfig\",\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n}\n\n// DevicePolicy\naconfig_declarations {\n    name: \"device_policy_aconfig_flags\",\n    package: \"android.app.admin.flags\",\n    container: \"system\",\n    srcs: [\n        \"core/java/android/app/admin/flags/flags.aconfig\",\n    ],\n}\n\njava_aconfig_library {\n    name: \"device_policy_aconfig_flags_lib\",\n    aconfig_declarations: \"device_policy_aconfig_flags\",\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n}\n\njava_aconfig_library {\n    name: \"device_policy_aconfig_flags_lib_host\",\n    aconfig_declarations: \"device_policy_aconfig_flags\",\n    host_supported: true,\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n}\n\ncc_aconfig_library {\n    name: \"device_policy_aconfig_flags_c_lib\",\n    aconfig_declarations: \"device_policy_aconfig_flags\",\n}\n\n// Chooser / \"Sharesheet\"\naconfig_declarations {\n    name: \"android.service.chooser.flags-aconfig\",\n    exportable: true,\n    package: \"android.service.chooser\",\n    container: \"system\",\n    srcs: [\"core/java/android/service/chooser/flags.aconfig\"],\n}\n\njava_aconfig_library {\n    name: \"android.service.chooser.flags-aconfig-java\",\n    aconfig_declarations: \"android.service.chooser.flags-aconfig\",\n    min_sdk_version: \"34\",\n    apex_available: [\n        \"//apex_available:platform\",\n        \"com.android.nfcservices\",\n    ],\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n}\n\n// JobScheduler\naconfig_declarations {\n    name: \"framework-jobscheduler-job.flags-aconfig\",\n    package: \"android.app.job\",\n    container: \"system\",\n    exportable: true,\n    srcs: [\"apex/jobscheduler/framework/aconfig/job.aconfig\"],\n}\n\njava_aconfig_library {\n    name: \"framework-jobscheduler-job.flags-aconfig-java\",\n    aconfig_declarations: \"framework-jobscheduler-job.flags-aconfig\",\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n}\n\n// Dreams\naconfig_declarations {\n    name: \"android.service.dreams.flags-aconfig\",\n    package: \"android.service.dreams\",\n    container: \"system\",\n    srcs: [\"core/java/android/service/dreams/flags.aconfig\"],\n}\n\njava_aconfig_library {\n    name: \"android.service.dreams.flags-aconfig-java\",\n    aconfig_declarations: \"android.service.dreams.flags-aconfig\",\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n}\n\n// Notifications\naconfig_declarations {\n    name: \"android.service.notification.flags-aconfig\",\n    package: \"android.service.notification\",\n    exportable: true,\n    container: \"system\",\n    srcs: [\"core/java/android/service/notification/flags.aconfig\"],\n}\n\njava_aconfig_library {\n    name: \"android.service.notification.flags-aconfig-java\",\n    aconfig_declarations: \"android.service.notification.flags-aconfig\",\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n}\n\njava_aconfig_library {\n    name: \"android.service.notification.flags-aconfig-export-java\",\n    aconfig_declarations: \"android.service.notification.flags-aconfig\",\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n    mode: \"exported\",\n    min_sdk_version: \"30\",\n    apex_available: [\n        \"//apex_available:platform\",\n        \"com.android.extservices\",\n    ],\n}\n\n// Contextual Search\naconfig_declarations {\n    name: \"android.app.contextualsearch.flags-aconfig\",\n    package: \"android.app.contextualsearch.flags\",\n    container: \"system\",\n    srcs: [\"core/java/android/app/contextualsearch/flags.aconfig\"],\n}\n\njava_aconfig_library {\n    name: \"android.app.contextualsearch.flags-aconfig-java\",\n    aconfig_declarations: \"android.app.contextualsearch.flags-aconfig\",\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n}\n\n// Smartspace\naconfig_declarations {\n    name: \"android.app.smartspace.flags-aconfig\",\n    exportable: true,\n    package: \"android.app.smartspace.flags\",\n    container: \"system\",\n    srcs: [\"core/java/android/app/smartspace/flags.aconfig\"],\n}\n\njava_aconfig_library {\n    name: \"android.app.smartspace.flags-aconfig-java\",\n    aconfig_declarations: \"android.app.smartspace.flags-aconfig\",\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n}\n\n// Supervision\naconfig_declarations {\n    name: \"android.app.supervision.flags-aconfig\",\n    exportable: true,\n    package: \"android.app.supervision.flags\",\n    container: \"system\",\n    srcs: [\"core/java/android/app/supervision/flags.aconfig\"],\n}\n\njava_aconfig_library {\n    name: \"android.app.supervision.flags-aconfig-java\",\n    aconfig_declarations: \"android.app.supervision.flags-aconfig\",\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n}\n\n// SurfaceFlinger\njava_aconfig_library {\n    name: \"surfaceflinger_flags_java_lib\",\n    aconfig_declarations: \"surfaceflinger_flags\",\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n}\n\njava_aconfig_library {\n    name: \"libgui_flags_java_lib\",\n    aconfig_declarations: \"libgui_flags\",\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n}\n\n// Content Capture\naconfig_declarations {\n    name: \"android.view.contentcapture.flags-aconfig\",\n    package: \"android.view.contentcapture.flags\",\n    container: \"system\",\n    srcs: [\"core/java/android/view/contentcapture/flags/*.aconfig\"],\n}\n\njava_aconfig_library {\n    name: \"android.view.contentcapture.flags-aconfig-java\",\n    aconfig_declarations: \"android.view.contentcapture.flags-aconfig\",\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n}\n\n// USB\naconfig_declarations {\n    name: \"android.hardware.usb.flags-aconfig\",\n    exportable: true,\n    package: \"android.hardware.usb.flags\",\n    container: \"system\",\n    srcs: [\"core/java/android/hardware/usb/flags/*.aconfig\"],\n}\n\njava_aconfig_library {\n    name: \"android.hardware.usb.flags-aconfig-java\",\n    aconfig_declarations: \"android.hardware.usb.flags-aconfig\",\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n}\n\njava_aconfig_library {\n    name: \"android.hardware.usb.flags-aconfig-java-host\",\n    aconfig_declarations: \"android.hardware.usb.flags-aconfig\",\n    host_supported: true,\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n}\n\n// WindowingTools\naconfig_declarations {\n    name: \"android.tracing.flags-aconfig\",\n    package: \"android.tracing\",\n    container: \"system\",\n    srcs: [\"core/java/android/tracing/flags.aconfig\"],\n}\n\njava_aconfig_library {\n    name: \"android.tracing.flags-aconfig-java\",\n    aconfig_declarations: \"android.tracing.flags-aconfig\",\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n}\n\ncc_aconfig_library {\n    name: \"android.tracing.flags_c_lib\",\n    aconfig_declarations: \"android.tracing.flags-aconfig\",\n}\n\n// App Widgets\naconfig_declarations {\n    name: \"android.appwidget.flags-aconfig\",\n    package: \"android.appwidget.flags\",\n    container: \"system\",\n    srcs: [\"core/java/android/appwidget/flags.aconfig\"],\n}\n\njava_aconfig_library {\n    name: \"android.appwidget.flags-aconfig-java\",\n    aconfig_declarations: \"android.appwidget.flags-aconfig\",\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n}\n\n// App\naconfig_declarations {\n    name: \"android.server.app.flags-aconfig\",\n    package: \"android.server.app\",\n    container: \"system\",\n    srcs: [\"services/core/java/com/android/server/app/flags.aconfig\"],\n}\n\njava_aconfig_library {\n    name: \"android.server.app.flags-aconfig-java\",\n    aconfig_declarations: \"android.server.app.flags-aconfig\",\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n}\n\n// WebView\naconfig_declarations {\n    name: \"android.webkit.flags-aconfig\",\n    package: \"android.webkit\",\n    container: \"system\",\n    srcs: [\n        \"core/java/android/webkit/*.aconfig\",\n        \"services/core/java/com/android/server/webkit/*.aconfig\",\n    ],\n}\n\njava_aconfig_library {\n    name: \"android.webkit.flags-aconfig-java\",\n    aconfig_declarations: \"android.webkit.flags-aconfig\",\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n}\n\n// Provider\naconfig_declarations {\n    name: \"android.provider.flags-aconfig\",\n    exportable: true,\n    package: \"android.provider\",\n    container: \"system\",\n    srcs: [\"core/java/android/provider/*.aconfig\"],\n}\n\njava_aconfig_library {\n    name: \"android.provider.flags-aconfig-java\",\n    aconfig_declarations: \"android.provider.flags-aconfig\",\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n}\n\n// ContextHub\njava_aconfig_library {\n    name: \"android.chre.flags-aconfig-java\",\n    aconfig_declarations: \"chre_flags\",\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n}\n\n// Speech\naconfig_declarations {\n    name: \"android.speech.flags-aconfig\",\n    exportable: true,\n    package: \"android.speech.flags\",\n    container: \"system\",\n    srcs: [\"core/java/android/speech/flags/*.aconfig\"],\n}\n\njava_aconfig_library {\n    name: \"android.speech.flags-aconfig-java\",\n    aconfig_declarations: \"android.speech.flags-aconfig\",\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n}\n\n// Power\njava_aconfig_library {\n    name: \"power_flags_lib\",\n    aconfig_declarations: \"power_flags\",\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n}\n\n// Content\naconfig_declarations {\n    name: \"android.content.flags-aconfig\",\n    exportable: true,\n    package: \"android.content.flags\",\n    container: \"system\",\n    srcs: [\"core/java/android/content/flags/flags.aconfig\"],\n}\n\njava_aconfig_library {\n    name: \"android.content.flags-aconfig-java\",\n    aconfig_declarations: \"android.content.flags-aconfig\",\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n}\n\n// AppFunctions\naconfig_declarations {\n    name: \"android.app.appfunctions.flags-aconfig\",\n    exportable: true,\n    package: \"android.app.appfunctions.flags\",\n    container: \"system\",\n    srcs: [\"core/java/android/app/appfunctions/flags/flags.aconfig\"],\n}\n\njava_aconfig_library {\n    name: \"android.app.appfunctions.flags-aconfig-java\",\n    aconfig_declarations: \"android.app.appfunctions.flags-aconfig\",\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n}\n\njava_aconfig_library {\n    name: \"android.app.appfunctions.exported-flags-aconfig-java\",\n    aconfig_declarations: \"android.app.appfunctions.flags-aconfig\",\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n    mode: \"exported\",\n    apex_available: [\n        \"//apex_available:platform\",\n        \"com.android.permission\",\n    ],\n    min_sdk_version: \"30\",\n}\n\n// Adaptive Auth\naconfig_declarations {\n    name: \"android.adaptiveauth.flags-aconfig\",\n    package: \"android.adaptiveauth\",\n    container: \"system\",\n    srcs: [\"core/java/android/adaptiveauth/*.aconfig\"],\n}\n\njava_aconfig_library {\n    name: \"android.adaptiveauth.flags-aconfig-java\",\n    aconfig_declarations: \"android.adaptiveauth.flags-aconfig\",\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n}\n\n// CrashRecovery Module\naconfig_declarations {\n    name: \"android.crashrecovery.flags-aconfig\",\n    exportable: true,\n    package: \"android.crashrecovery.flags\",\n    container: \"system\",\n    srcs: [\"packages/CrashRecovery/aconfig/flags.aconfig\"],\n}\n\njava_aconfig_library {\n    name: \"android.crashrecovery.flags-aconfig-java\",\n    aconfig_declarations: \"android.crashrecovery.flags-aconfig\",\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n}\n\njava_aconfig_library {\n    name: \"android.crashrecovery.flags-aconfig-java-host\",\n    aconfig_declarations: \"android.crashrecovery.flags-aconfig\",\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n    host_supported: true,\n}\n\n// Backup\njava_aconfig_library {\n    name: \"backup_flags_lib\",\n    aconfig_declarations: \"backup_flags\",\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n}\n\n// Wifi\naconfig_declarations {\n    name: \"android.net.wifi.flags-aconfig\",\n    package: \"android.net.wifi.flags\",\n    container: \"system\",\n    srcs: [\"wifi/*.aconfig\"],\n}\n\njava_aconfig_library {\n    name: \"android.net.wifi.flags-aconfig-java\",\n    aconfig_declarations: \"android.net.wifi.flags-aconfig\",\n    min_sdk_version: \"30\",\n    apex_available: [\n        \"//apex_available:platform\",\n        \"com.android.wifi\",\n    ],\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n}\n\n// Wearable Sensing\naconfig_declarations {\n    name: \"android.app.wearable.flags-aconfig\",\n    exportable: true,\n    package: \"android.app.wearable\",\n    container: \"system\",\n    srcs: [\"core/java/android/app/wearable/*.aconfig\"],\n}\n\njava_aconfig_library {\n    name: \"android.app.wearable.flags-aconfig-java\",\n    aconfig_declarations: \"android.app.wearable.flags-aconfig\",\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n}\n\naconfig_declarations {\n    name: \"com.android.internal.pm.pkg.component.flags-aconfig\",\n    package: \"com.android.internal.pm.pkg.component.flags\",\n    container: \"system\",\n    srcs: [\"core/java/com/android/internal/pm/pkg/component/flags/flags.aconfig\"],\n}\n\njava_aconfig_library {\n    name: \"com.android.internal.pm.pkg.component.flags-aconfig-java\",\n    aconfig_declarations: \"com.android.internal.pm.pkg.component.flags-aconfig\",\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n}\n\njava_aconfig_library {\n    name: \"com.android.internal.pm.pkg.component.flags-aconfig-java-host\",\n    aconfig_declarations: \"com.android.internal.pm.pkg.component.flags-aconfig\",\n    host_supported: true,\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n}\n\n// System Server\naconfig_declarations {\n    name: \"android.systemserver.flags-aconfig\",\n    package: \"android.server\",\n    container: \"system\",\n    srcs: [\"services/java/com/android/server/flags.aconfig\"],\n}\n\njava_aconfig_library {\n    name: \"android.systemserver.flags-aconfig-java\",\n    aconfig_declarations: \"android.systemserver.flags-aconfig\",\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n}\n\n// backstage power\naconfig_declarations {\n    name: \"backstage_power_flags\",\n    package: \"com.android.server.power.optimization\",\n    container: \"system\",\n    exportable: true,\n    srcs: [\n        \"services/core/java/com/android/server/power/stats/flags.aconfig\",\n    ],\n}\n\njava_aconfig_library {\n    name: \"backstage_power_flags_lib\",\n    aconfig_declarations: \"backstage_power_flags\",\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n}\n\njava_aconfig_library {\n    name: \"backstage_power_flags_lib-host\",\n    aconfig_declarations: \"backstage_power_flags\",\n    host_supported: true,\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n}\n\n// Dropbox data\naconfig_declarations {\n    name: \"dropbox_flags\",\n    package: \"com.android.server.feature.flags\",\n    container: \"system\",\n    srcs: [\n        \"services/core/java/com/android/server/feature/dropbox_flags.aconfig\",\n    ],\n}\n\njava_aconfig_library {\n    name: \"dropbox_flags_lib\",\n    aconfig_declarations: \"dropbox_flags\",\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n}\n\n// Zero Jank\naconfig_declarations {\n    name: \"interaction_jank_monitor_flags\",\n    package: \"com.android.internal.jank\",\n    container: \"system\",\n    srcs: [\"core/java/com/android/internal/jank/flags.aconfig\"],\n}\n\njava_aconfig_library {\n    name: \"interaction_jank_monitor_flags_lib\",\n    aconfig_declarations: \"interaction_jank_monitor_flags\",\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n}\n\n// App Jank\naconfig_declarations {\n    name: \"android.app.jank.flags-aconfig\",\n    package: \"android.app.jank\",\n    container: \"system\",\n    srcs: [\"core/java/android/app/jank/flags.aconfig\"],\n}\n\njava_aconfig_library {\n    name: \"android.app.jank.flags-aconfig-java\",\n    aconfig_declarations: \"android.app.jank.flags-aconfig\",\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n}\n\n// Trade in mode\naconfig_declarations {\n    name: \"aconfig_trade_in_mode_flags\",\n    package: \"com.android.tradeinmode.flags\",\n    container: \"system\",\n    srcs: [\n        \"core/java/android/os/image/flags/trade_in_mode_flags.aconfig\",\n    ],\n}\n\njava_aconfig_library {\n    name: \"aconfig_trade_in_mode_flags_java_lib\",\n    aconfig_declarations: \"aconfig_trade_in_mode_flags\",\n    defaults: [\"framework-minus-apex-aconfig-java-defaults\"],\n}\n\ncc_aconfig_library {\n    name: \"android_trade_in_mode_flags_cc_lib\",\n    aconfig_declarations: \"aconfig_trade_in_mode_flags\",\n    apex_available: [\n        \"//apex_available:platform\",\n        \"com.android.adbd\",\n    ],\n    min_sdk_version: \"apex_inherit\",\n}\n"
        },
        {
          "name": "Android.bp",
          "type": "blob",
          "size": 24.279296875,
          "content": "// Copyright (C) 2016 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n// Build the master framework library.\n\n// READ ME: ########################################################\n//\n// When updating this list of aidl files, consider if that aidl is\n// part of the SDK API.  If it is, also add it to the list in Android.mk\n// that is preprocessed and distributed with the SDK.  This list should\n// not contain any aidl files for parcelables, but the one below should\n// if you intend for 3rd parties to be able to send those objects\n// across process boundaries.\n//\n// READ ME: ########################################################\n\npackage {\n    default_applicable_licenses: [\"frameworks_base_license\"],\n}\n\n// Added automatically by a large-scale-change that took the approach of\n// 'apply every license found to every target'. While this makes sure we respect\n// every license restriction, it may not be entirely correct.\n//\n// e.g. GPL in an MIT project might only apply to the contrib/ directory.\n//\n// Please consider splitting the single license below into multiple licenses,\n// taking care not to lose any license_kind information, and overriding the\n// default license using the 'licenses: [...]' property on targets as needed.\n//\n// For unused files, consider creating a 'fileGroup' with \"//visibility:private\"\n// to attach the license to, and including a comment whether the files may be\n// used in the current project.\n// See: http://go/android-license-faq\nlicense {\n    name: \"frameworks_base_license\",\n    visibility: [\":__subpackages__\"],\n    license_kinds: [\n        \"SPDX-license-identifier-Apache-2.0\",\n        \"SPDX-license-identifier-BSD\",\n        \"SPDX-license-identifier-CC-BY\",\n        \"SPDX-license-identifier-MIT\",\n        \"SPDX-license-identifier-Unicode-DFS\",\n        \"legacy_unencumbered\",\n    ],\n    license_text: [\n        \"NOTICE\",\n    ],\n}\n\nfilegroup {\n    name: \"framework-non-updatable-sources\",\n    device_common_srcs: [\n        // Java/AIDL sources under frameworks/base\n        \":framework-annotations\",\n        \":framework-blobstore-sources\",\n        \":framework-core-sources\",\n        \":framework-drm-sources\",\n        \":framework-graphics-nonupdatable-sources\",\n        \":framework-jobscheduler-sources\", // jobscheduler is not a module for R\n        \":framework-keystore-sources\",\n        \":framework-identity-sources\",\n        \":framework-mca-effect-sources\",\n        \":framework-mca-filterfw-sources\",\n        \":framework-mca-filterpacks-sources\",\n        \":framework-media-non-updatable-sources\",\n        \":framework-mms-sources\",\n        \":framework-omapi-sources\",\n        \":framework-opengl-sources\",\n        \":framework-rs-sources\",\n        \":framework-sax-sources\",\n        \":framework-telecomm-sources\",\n        \":framework-telephony-common-sources\",\n        \":framework-telephony-sources\",\n        \":framework-wifi-annotations\",\n        \":framework-wifi-non-updatable-sources\",\n        \":PacProcessor-aidl-sources\",\n        \":ProxyHandler-aidl-sources\",\n        \":vcn-utils-platform-sources\",\n        \":net-utils-framework-common-srcs\",\n\n        // AIDL from frameworks/base/native/\n        \":platform-compat-native-aidl\",\n\n        // AIDL sources from external directories\n        \":android.frameworks.location.altitude-V2-java-source\",\n        \":android.hardware.biometrics.common-V4-java-source\",\n        \":android.hardware.biometrics.fingerprint-V5-java-source\",\n        \":android.hardware.biometrics.fingerprint.virtualhal-java-source\",\n        \":android.hardware.biometrics.face.virtualhal-java-source\",\n        \":android.hardware.biometrics.face-V4-java-source\",\n        \":android.hardware.gnss-V2-java-source\",\n        \":android.hardware.graphics.common-V3-java-source\",\n        \":android.hardware.keymaster-V4-java-source\",\n        \":android.hardware.radio-V3-java-source\",\n        \":android.hardware.radio.data-V3-java-source\",\n        \":android.hardware.radio.network-V3-java-source\",\n        \":android.hardware.radio.voice-V3-java-source\",\n        \":android.hardware.security.secureclock-V1-java-source\",\n        \":android.hardware.thermal-V2-java-source\",\n        \":android.hardware.tv.tuner-V3-java-source\",\n        \":android.security.apc-java-source\",\n        \":android.security.authorization-java-source\",\n        \":android.security.legacykeystore-java-source\",\n        \":android.security.maintenance-java-source\",\n        \":android.security.metrics-java-source\",\n        \":android.hardware.cas-V1-java-source\",\n        \":credstore_aidl\",\n        \":dumpstate_aidl\",\n        \":framework_native_aidl\",\n        \":gatekeeper_aidl\",\n        \":gsiservice_aidl\",\n        \":guiconstants_aidl\",\n        \":idmap2_aidl\",\n        \":idmap2_core_aidl\",\n        \":incidentcompanion_aidl\",\n        \":inputconstants_aidl\",\n        \":installd_aidl\",\n        \":libaudioclient_aidl\",\n        \":libbinder_aidl\",\n        \":libcamera_client_aidl\",\n        \":libcamera_client_framework_aidl\",\n        \":libupdate_engine_aidl\",\n        \":libupdate_engine_stable-V2-java-source\",\n        \":logd_aidl\",\n        \":resourcemanager_aidl\",\n        \":storaged_aidl\",\n        \":vold_aidl\",\n        \":deviceproductinfoconstants_aidl\",\n\n        // For the generated R.java and Manifest.java\n        \":framework-res{.aapt.srcjar}\",\n\n        // Java/AIDL sources to be moved out to CrashRecovery module\n        \":framework-crashrecovery-sources\",\n\n        // etc.\n        \":framework-javastream-protos\",\n        \":statslog-framework-java-gen\", // FrameworkStatsLog.java\n        \":audio_policy_configuration_V7_0\",\n    ] + select(release_flag(\"RELEASE_ATTEST_MODULES\"), {\n        true: [\n            \":android.hardware.security.keymint-V4-java-source\",\n            \":android.system.keystore2-V5-java-source\",\n        ],\n        default: [\n            \":android.hardware.security.keymint-V3-java-source\",\n            \":android.system.keystore2-V4-java-source\",\n        ],\n    }),\n}\n\njava_library {\n    name: \"framework-all\",\n    installable: false,\n    static_libs: [\n        \"all-framework-module-impl\",\n        \"framework-minus-apex\",\n    ],\n    apex_available: [\"//apex_available:platform\"],\n    sdk_version: \"core_platform\",\n    visibility: [\n        // DO NOT ADD ANY MORE ENTRIES TO THIS LIST\n        \"//external/robolectric-shadows:__subpackages__\",\n        //This will eventually replace the item above, and serves the\n        //same purpose.\n        \"//external/robolectric:__subpackages__\",\n        \"//frameworks/layoutlib:__subpackages__\",\n    ],\n}\n\n// AIDL files under these paths are mixture of public and private ones.\n// They shouldn't be exported across module boundaries.\njava_defaults {\n    name: \"framework-aidl-export-defaults\",\n    aidl: {\n        export_include_dirs: [\n            \"core/java\",\n            \"drm/java\",\n            \"graphics/java\",\n            \"identity/java\",\n            \"keystore/java\",\n            \"media/java\",\n            \"media/mca/effect/java\",\n            \"media/mca/filterfw/java\",\n            \"media/mca/filterpacks/java\",\n            \"mms/java\",\n            \"opengl/java\",\n            \"rs/java\",\n            \"sax/java\",\n            \"telecomm/java\",\n\n            // TODO(b/147699819): remove this\n            \"telephony/java\",\n        ],\n    },\n}\n\n// Collection of classes that are generated from non-Java files that are not listed in\n// framework_srcs. These have no or very limited dependency to the framework.\njava_library {\n    name: \"framework-internal-utils\",\n    defaults: [\n        \"android.hardware.power-java_static\",\n    ],\n    static_libs: [\n        \"apex_aidl_interface-java\",\n        \"packagemanager_aidl-java\",\n        \"framework-protos\",\n        \"updatable-driver-protos\",\n        \"ota_metadata_proto_java\",\n        \"android.hidl.base-V1.0-java\",\n        \"android.hidl.manager-V1.2-java\",\n        \"android.hardware.cas-V1-java\", // AIDL\n        \"android.hardware.cas-V1.0-java\",\n        \"android.hardware.cas-V1.1-java\",\n        \"android.hardware.cas-V1.2-java\",\n        \"android.hardware.contexthub-V1.0-java\",\n        \"android.hardware.contexthub-V1.1-java\",\n        \"android.hardware.contexthub-V1.2-java\",\n        \"android.hardware.contexthub-V3-java\",\n        \"android.hardware.gnss-V1.0-java\",\n        \"android.hardware.gnss-V2.1-java\",\n        \"android.hardware.health-V1.0-java-constants\",\n        \"android.hardware.radio-V1.6-java\",\n        \"android.hardware.radio.data-V3-java\",\n        \"android.hardware.radio.ims-V2-java\",\n        \"android.hardware.radio.messaging-V3-java\",\n        \"android.hardware.radio.modem-V3-java\",\n        \"android.hardware.radio.network-V3-java\",\n        \"android.hardware.radio.sim-V3-java\",\n        \"android.hardware.radio.voice-V3-java\",\n        \"android.hardware.thermal-V1.0-java-constants\",\n        \"android.hardware.thermal-V1.0-java\",\n        \"android.hardware.thermal-V1.1-java\",\n        \"android.hardware.thermal-V2.0-java\",\n        \"android.hardware.tv.input-V1.0-java-constants\",\n        \"android.hardware.usb-V1.0-java-constants\",\n        \"android.hardware.usb-V1.1-java-constants\",\n        \"android.hardware.usb-V1.2-java-constants\",\n        \"android.hardware.usb.gadget-V1-java\",\n        \"android.hardware.usb.gadget-V1.0-java\",\n        \"android.hardware.usb.gadget-V1.1-java\",\n        \"android.hardware.usb.gadget-V1.2-java\",\n        \"android.hardware.vibrator-V1.0-java\",\n        \"android.hardware.vibrator-V1.1-java\",\n        \"android.hardware.vibrator-V1.2-java\",\n        \"android.hardware.vibrator-V1.3-java\",\n        \"android.hardware.vibrator-V3-java\",\n        \"android.se.omapi-V1-java\",\n        \"android.system.suspend.control.internal-java\",\n        \"devicepolicyprotosnano\",\n        \"ImmutabilityAnnotation\",\n\n        \"com.android.sysprop.localization\",\n        \"PlatformProperties\",\n    ],\n    sdk_version: \"core_platform\",\n    installable: false,\n}\n\n// NOTE: This filegroup is exposed for vendor libraries to depend on and is referenced in\n// documentation. Do not remove without consulting the treble/hidl teams.\nfilegroup {\n    name: \"framework-jarjar-rules\",\n    srcs: [\"framework-jarjar-rules.txt\"],\n    visibility: [\"//visibility:public\"],\n}\n\njava_defaults {\n    name: \"framework-minus-apex-defaults\",\n    defaults: [\n        \"framework-aidl-export-defaults\",\n        \"latest_android_hardware_soundtrigger3_java_static\",\n        \"framework-minus-apex-aconfig-libraries\",\n    ],\n    srcs: [\n        \":framework-non-updatable-sources\",\n        \"core/java/**/*.logtags\",\n        \":apex-info-list\",\n    ],\n    aidl: {\n        generate_get_transaction_name: true,\n        enforce_permissions: true,\n        enforce_permissions_exceptions: [\n            // Do not add entries to this list.\n            \":framework-annotations\",\n            \":framework-blobstore-sources\",\n            \":framework-core-sources\",\n            \":framework-drm-sources\",\n            \":framework-graphics-nonupdatable-sources\",\n            \":framework-jobscheduler-sources\",\n            \":framework-keystore-sources\",\n            \":framework-identity-sources\",\n            \":framework-mca-effect-sources\",\n            \":framework-mca-filterfw-sources\",\n            \":framework-mca-filterpacks-sources\",\n            \":framework-media-non-updatable-sources\",\n            \":framework-mms-sources\",\n            \":framework-omapi-sources\",\n            \":framework-opengl-sources\",\n            \":framework-rs-sources\",\n            \":framework-sax-sources\",\n            \":framework-telecomm-sources\",\n            \":framework-telephony-common-sources\",\n            \":framework-telephony-sources\",\n            \":framework-wifi-annotations\",\n            \":framework-wifi-non-updatable-sources\",\n            \":vcn-utils-platform-sources\",\n            \":PacProcessor-aidl-sources\",\n            \":ProxyHandler-aidl-sources\",\n            \":net-utils-framework-common-srcs\",\n            \":platform-compat-native-aidl\",\n            \":credstore_aidl\",\n            \":dumpstate_aidl\",\n            \":framework_native_aidl\",\n            \":gatekeeper_aidl\",\n            \":gsiservice_aidl\",\n            \":idmap2_aidl\",\n            \":idmap2_core_aidl\",\n            \":incidentcompanion_aidl\",\n            \":inputconstants_aidl\",\n            \":installd_aidl\",\n            \":libaudioclient_aidl\",\n            \":libbinder_aidl\",\n            \":libcamera_client_aidl\",\n            \":libcamera_client_framework_aidl\",\n            \":libupdate_engine_aidl\",\n            \":logd_aidl\",\n            \":resourcemanager_aidl\",\n            \":storaged_aidl\",\n            \":vold_aidl\",\n            \":deviceproductinfoconstants_aidl\",\n        ],\n        local_include_dirs: [\n            \"media/aidl\",\n        ],\n        include_dirs: [\n            \"frameworks/av/aidl\",\n            \"frameworks/native/libs/permission/aidl\",\n            \"packages/modules/Bluetooth/framework/aidl-export\",\n            \"packages/modules/Connectivity/framework/aidl-export\",\n            \"packages/modules/Media/apex/aidl/stable\",\n            \"hardware/interfaces/biometrics/common/aidl\",\n            \"hardware/interfaces/biometrics/fingerprint/aidl\",\n            \"hardware/interfaces/common/aidl\",\n            \"hardware/interfaces/common/fmq/aidl\",\n            \"hardware/interfaces/graphics/common/aidl\",\n            \"hardware/interfaces/keymaster/aidl\",\n            \"hardware/interfaces/power/aidl\",\n            \"system/hardware/interfaces/media/aidl\",\n        ],\n    },\n    dxflags: [\n        \"--core-library\",\n        \"--multi-dex\",\n    ],\n    jarjar_rules: \":framework-jarjar-rules\",\n    javac_shard_size: 150,\n    plugins: [\n        \"view-inspector-annotation-processor\",\n        \"staledataclass-annotation-processor\",\n        \"error_prone_android_framework\",\n        \"systemfeatures-metadata-processor\",\n    ],\n    // Exports needed for staledataclass-annotation-processor, see b/139342589.\n    javacflags: [\n        \"-J--add-modules=jdk.compiler\",\n        \"-J--add-exports=jdk.compiler/com.sun.tools.javac.code=ALL-UNNAMED\",\n        \"-J--add-exports=jdk.compiler/com.sun.tools.javac.model=ALL-UNNAMED\",\n        \"-J--add-exports=jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED\",\n        \"-J--add-exports=jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED\",\n    ],\n    required: [\n        // TODO(b/120066492): remove default_television.xml when the build system\n        // propagates \"required\" properly.\n        \"default_television.xml\",\n        // TODO(b/120066492): remove gps_debug and protolog.conf.json when the build\n        // system propagates \"required\" properly.\n        \"gps_debug.conf\",\n        \"framework-res\",\n        // any install dependencies should go into framework-minus-apex-install-dependencies\n        // rather than here to avoid bloating incremental build time\n    ],\n    libs: [\n        \"androidx.annotation_annotation\",\n        \"app-compat-annotations\",\n        \"ext\",\n        \"framework-updatable-stubs-module_libs_api\",\n        \"unsupportedappusage\",\n        // TODO(b/379770939): remove prod version of flags from other containers in framework\n        \"aconfig_storage_stub\",\n    ],\n    sdk_version: \"core_platform\",\n    static_libs: [\n        \"aconfig_storage_reader_java\",\n        \"android.hardware.common.fmq-V1-java\",\n        \"bouncycastle-repackaged-unbundled\",\n        \"com.android.sysprop.foldlockbehavior\",\n        \"com.android.sysprop.view\",\n        \"framework-internal-utils\",\n        // If MimeMap ever becomes its own APEX, then this dependency would need to be removed\n        // in favor of an API stubs dependency in java_library \"framework\" below.\n        \"mimemap\",\n        \"av-types-aidl-java\",\n        \"tv_tuner_resource_manager_aidl_interface-java\",\n        \"soundtrigger_middleware-aidl-java\",\n        \"modules-utils-binary-xml\",\n        \"modules-utils-build\",\n        \"modules-utils-fastxmlserializer\",\n        \"modules-utils-preconditions\",\n        \"modules-utils-statemachine\",\n        \"modules-utils-os\",\n        \"modules-utils-uieventlogger-interface\",\n        \"framework-permission-aidl-java\",\n        \"spatializer-aidl-java\",\n        \"audiopolicy-aidl-java\",\n        \"sounddose-aidl-java\",\n        \"modules-utils-expresslog\",\n        \"perfetto_trace_javastream_protos_jarjar\",\n        \"libaconfig_java_proto_nano\",\n        \"aconfig_device_paths_java\",\n    ],\n}\n\n// Collection of non updatable unbundled jars. The list here should match\n// |non_updatable_modules| variable in frameworks/base/api/api.go.\njava_library {\n    name: \"framework-non-updatable-unbundled-impl-libs\",\n    static_libs: [\n        \"framework-location.impl\",\n    ],\n    sdk_version: \"core_platform\",\n    installable: false,\n}\n\n// Separated so framework-minus-apex-defaults can be used without the libs dependency\njava_defaults {\n    name: \"framework-minus-apex-with-libs-defaults\",\n    defaults: [\"framework-minus-apex-defaults\"],\n    libs: [\n        \"framework-virtualization.stubs.module_lib\",\n        \"framework-non-updatable-unbundled-impl-libs\",\n    ],\n}\n\njava_defaults {\n    name: \"framework-non-updatable-lint-defaults\",\n    lint: {\n        extra_check_modules: [\"AndroidFrameworkLintChecker\"],\n        disabled_checks: [\"ApiMightLeakAppVisibility\"],\n        error_checks: [\n            \"ClearIdentityCallNotFollowedByTryFinally\",\n            \"NestedClearCallingIdentityCalls\",\n            \"NonFinalTokenOfOriginalCallingIdentity\",\n            \"RestoreIdentityCallNotInFinallyBlock\",\n            \"ResultOfClearIdentityCallNotStoredInVariable\",\n            \"UnusedTokenOfOriginalCallingIdentity\",\n            \"UseOfCallerAwareMethodsWithClearedIdentity\",\n        ],\n    },\n}\n\n// we are unfortunately building the turbine jar twice, but more efficient and less complex\n// than generating a similar set of stubs with metalava\njava_library {\n    name: \"framework-minus-apex-headers\",\n    defaults: [\"framework-minus-apex-defaults\"],\n    installable: false,\n    // For backwards compatibility.\n    stem: \"framework\",\n    apex_available: [\"//apex_available:platform\"],\n    visibility: [\n        \"//frameworks/base:__subpackages__\",\n    ],\n    compile_dex: false,\n    headers_only: true,\n}\n\njava_library {\n    name: \"framework-minus-apex\",\n    defaults: [\n        \"framework-minus-apex-with-libs-defaults\",\n        \"framework-non-updatable-lint-defaults\",\n    ],\n    installable: true,\n    // For backwards compatibility.\n    stem: \"framework\",\n    apex_available: [\"//apex_available:platform\"],\n    visibility: [\n        \"//frameworks/base\",\n        \"//frameworks/base/location\",\n        // TODO(b/147128803) remove the below lines\n        \"//frameworks/base/apex/blobstore/framework\",\n        \"//frameworks/base/apex/jobscheduler/framework\",\n        \"//frameworks/base/packages/Tethering/tests/unit\",\n        \"//packages/modules/Connectivity/Tethering/tests/unit\",\n    ],\n    errorprone: {\n        javacflags: [\n            \"-Xep:AndroidFrameworkCompatChange:ERROR\",\n            \"-Xep:AndroidFrameworkUid:ERROR\",\n        ],\n    },\n    lint: {\n        baseline_filename: \"lint-baseline.xml\",\n        warning_checks: [\n            \"FlaggedApi\",\n        ],\n    },\n    jarjar_prefix: \"com.android.internal.hidden_from_bootclasspath\",\n\n    jarjar_shards: select(release_flag(\"RELEASE_USE_SHARDED_JARJAR_ON_FRAMEWORK_MINUS_APEX\"), {\n        true: \"10\",\n        default: \"1\",\n    }),\n}\n\njava_library {\n    name: \"framework-minus-apex-intdefs\",\n    defaults: [\"framework-minus-apex-with-libs-defaults\"],\n    plugins: [\"intdef-annotation-processor\"],\n\n    // Errorprone and android lint will already run on framework-minus-apex, don't rerun them on\n    // the intdefs version in order to speed up the build.\n    errorprone: {\n        enabled: false,\n    },\n    lint: {\n        enabled: false,\n\n    },\n}\n\n// This \"framework\" module is NOT installed to the device. It's\n// \"framework-minus-apex\" that gets installed to the device. Note that\n// the filename is still framework.jar (via the stem property) for\n// compatibility reason. The purpose of this module is to provide\n// framework APIs (both public and private) for bundled apps.\n// \"framework-minus-apex\" can't be used for the purpose because 1)\n// many apps have already hardcoded the name \"framework\" and\n// 2) it lacks API symbols from updatable modules - as it's clear from\n// its suffix \"-minus-apex\".\njava_library {\n    name: \"framework\",\n    defaults: [\"framework-aidl-export-defaults\"],\n    installable: false, // this lib is a build-only library\n    static_libs: [\n        \"app-compat-annotations\",\n        \"framework-minus-apex\",\n        \"framework-non-updatable-unbundled-impl-libs\",\n        \"framework-updatable-stubs-module_libs_api\",\n    ],\n    sdk_version: \"core_platform\",\n    apex_available: [\"//apex_available:platform\"],\n}\n\njava_library {\n    name: \"framework-minus-apex-install-dependencies\",\n    required: [\n        \"framework-minus-apex\",\n        \"framework-platform-compat-config\",\n        \"framework-location-compat-config\",\n        \"services-platform-compat-config\",\n        \"icu4j-platform-compat-config\",\n        \"TeleService-platform-compat-config\",\n        \"documents-ui-compat-config\",\n        \"calendar-provider-compat-config\",\n        \"contacts-provider-platform-compat-config\",\n    ],\n}\n\nplatform_compat_config {\n    name: \"framework-platform-compat-config\",\n    src: \":framework-minus-apex\",\n}\n\nfilegroup {\n    name: \"framework-ike-shared-srcs\",\n    visibility: [\"//packages/modules/IPsec\"],\n    srcs: [\n        \"core/java/com/android/internal/util/HexDump.java\",\n        \"core/java/com/android/internal/util/WakeupMessage.java\",\n        \"packages/Vcn/framework-b/src/android/net/vcn/util/PersistableBundleUtils.java\",\n        \"telephony/java/android/telephony/Annotation.java\",\n    ],\n}\n\nfilegroup {\n    name: \"framework-android-os-unit-testable-src\",\n    srcs: [\n        \"core/java/android/os/DdmSyncState.java\",\n    ],\n}\n\nfilegroup {\n    name: \"framework-networkstack-shared-srcs\",\n    srcs: [\n        \":modules-utils-preconditions-srcs\",\n        \"core/java/android/util/IndentingPrintWriter.java\",\n        \"core/java/android/util/LocalLog.java\",\n        \"core/java/com/android/internal/util/HexDump.java\",\n        \"core/java/com/android/internal/util/IndentingPrintWriter.java\",\n        \"core/java/com/android/internal/util/MessageUtils.java\",\n        \"core/java/com/android/internal/util/RingBufferIndices.java\",\n        \"core/java/com/android/internal/util/WakeupMessage.java\",\n        \"core/java/com/android/internal/util/TokenBucket.java\",\n    ],\n}\n\n// Build ext.jar\n// ============================================================\njava_library {\n    name: \"ext\",\n    installable: true,\n    sdk_version: \"core_platform\",\n    static_libs: [\n        \"libphonenumber-platform\",\n        \"tagsoup\",\n        \"rappor\",\n    ],\n    dxflags: [\"--core-library\"],\n}\n\n// utility classes statically linked into framework-wifi and dynamically linked\n// into wifi-service\njava_library {\n    name: \"framework-wifi-util-lib\",\n    sdk_version: \"module_current\",\n    min_sdk_version: \"30\",\n    srcs: [\n        \"core/java/com/android/internal/util/AsyncChannel.java\",\n        \"core/java/com/android/internal/util/AsyncService.java\",\n        \"core/java/com/android/internal/util/Protocol.java\",\n        \"telephony/java/android/telephony/Annotation.java\",\n    ],\n    libs: [\n        \"framework-annotations-lib\",\n        \"framework-connectivity.stubs.module_lib\",\n        \"unsupportedappusage\",\n    ],\n    visibility: [\n        \"//frameworks/base/wifi\",\n        \"//frameworks/base/services/net\",\n        \"//packages/modules/Wifi/framework\",\n    ],\n    lint: {\n        baseline_filename: \"lint-baseline.xml\",\n    },\n    apex_available: [\"com.android.wifi\"],\n}\n\nfilegroup {\n    name: \"android-non-updatable-stub-sources\",\n    srcs: [\n        \":framework-mime-sources\", // mimemap builds separately but has no separate droidstubs.\n        \":framework-minus-apex-aconfig-srcjars\",\n        \":framework-non-updatable-sources\",\n        \":opt-telephony-srcs\",\n        \":opt-net-voip-srcs\",\n        \"core/java/**/*.logtags\",\n        \"**/package.html\",\n    ],\n    visibility: [\"//frameworks/base/api\"],\n}\n\njava_library {\n    name: \"perfetto_trace_javastream_protos_jarjar\",\n    srcs: [\n        \":perfetto_trace_javastream_protos\",\n    ],\n    jarjar_rules: \":framework-jarjar-rules\",\n    sdk_version: \"core_platform\",\n    installable: false,\n}\n\nbuild = [\n    \"AconfigFlags.bp\",\n    \"ProtoLibraries.bp\",\n    \"TestProtoLibraries.bp\",\n    \"Ravenwood.bp\",\n]\n"
        },
        {
          "name": "BAL_OWNERS",
          "type": "blob",
          "size": 0.1025390625,
          "content": "brufino@google.com\nachim@google.com\ntopjohnwu@google.com\nlus@google.com\nhaok@google.com\nwnan@google.com\n\n"
        },
        {
          "name": "BATTERY_STATS_OWNERS",
          "type": "blob",
          "size": 0.0791015625,
          "content": "# OWNERS of BatteryStats related files\ndplotnikov@google.com\nmwachens@google.com\n"
        },
        {
          "name": "BROADCASTS_OWNERS",
          "type": "blob",
          "size": 0.103515625,
          "content": "# Bug component: 316181\nset noparent\n\nsudheersai@google.com\nyamasani@google.com #{LAST_RESORT_SUGGESTION}\n"
        },
        {
          "name": "CleanSpec.mk",
          "type": "blob",
          "size": 26.04296875,
          "content": "# Copyright (C) 2007 The Android Open Source Project\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\n# If you don't need to do a full clean build but would like to touch\n# a file or delete some intermediate files, add a clean step to the end\n# of the list.  These steps will only be run once, if they haven't been\n# run before.\n#\n# E.g.:\n#     $(call add-clean-step, touch -c external/sqlite/sqlite3.h)\n#     $(call add-clean-step, rm -rf $(PRODUCT_OUT)/obj/STATIC_LIBRARIES/libz_intermediates)\n#\n# Always use \"touch -c\" and \"rm -f\" or \"rm -rf\" to gracefully deal with\n# files that are missing or have been moved.\n#\n# Use $(PRODUCT_OUT) to get to the \"out/target/product/blah/\" directory.\n# Use $(OUT_DIR) to refer to the \"out\" directory.\n#\n# If you need to re-do something that's already mentioned, just copy\n# the command and add it to the bottom of the list.  E.g., if a change\n# that you made last week required touching a file and a change you\n# made today requires touching the same file, just copy the old\n# touch step and add it to the end of the list.\n#\n# *****************************************************************\n# NEWER CLEAN STEPS MUST BE AT THE END OF THE LIST ABOVE THE BANNER\n# *****************************************************************\n\n# For example:\n#$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/APPS/AndroidTests_intermediates)\n#$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/core_intermediates)\n#$(call add-clean-step, find $(OUT_DIR) -type f -name \"IGTalkSession*\" -print0 | xargs -0 rm -f)\n#$(call add-clean-step, rm -rf $(PRODUCT_OUT)/data/*)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/framework_intermediates/src/core/java/com/android/internal/os/IDropBoxService.java)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/framework_intermediates/src/core/java/android/backup)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/framework_intermediates/src/core/java/com/android/internal/backup)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/framework_intermediates/src/core/java/android/backup)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/framework_intermediates/src/core/java/com/android/internal/backup)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/framework_intermediates/src/core/java/android/app)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/framework_intermediates/src/core/java/android/content)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/APPS/FrameworkTest_intermediates/)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/android.policy*)\n$(call add-clean-step, rm -rf $(TARGET_OUT_JAVA_LIBRARIES)/android.policy.jar)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/framework_intermediates)\n$(call add-clean-step, rm -f $(PRODUCT_OUT)/obj/lib/libequalizer.so)\n$(call add-clean-step, rm -f $(PRODUCT_OUT)/obj/lib/libequalizertest.so)\n$(call add-clean-step, rm -f $(PRODUCT_OUT)/obj/lib/libreverb.so)\n$(call add-clean-step, rm -f $(PRODUCT_OUT)/obj/lib/libreverbtest.so)\n$(call add-clean-step, rm -f $(PRODUCT_OUT)/symbols/system/lib/libequalizer.so)\n$(call add-clean-step, rm -f $(PRODUCT_OUT)/symbols/system/lib/libequalizertest.so)\n$(call add-clean-step, rm -f $(PRODUCT_OUT)/symbols/system/lib/libreverb.so)\n$(call add-clean-step, rm -f $(PRODUCT_OUT)/symbols/system/lib/libreverbtest.so)\n$(call add-clean-step, rm -rf $(PRODUCT_OUT)/obj/SHARED_LIBRARIES/libequalizer_intermediates)\n$(call add-clean-step, rm -rf $(PRODUCT_OUT)/obj/SHARED_LIBRARIES/libequalizertest_intermediates)\n$(call add-clean-step, rm -rf $(PRODUCT_OUT)/obj/SHARED_LIBRARIES/libreverb_intermediates)\n$(call add-clean-step, rm -rf $(PRODUCT_OUT)/obj/SHARED_LIBRARIES/libreverbtest_intermediates)\n$(call add-clean-step, rm -rf $(PRODUCT_OUT)/system/lib/soundfx/)\n$(call add-clean-step, find . -type f -name \"*.rs\" -print0 | xargs -0 touch)\n$(call add-clean-step, rm -rf $(PRODUCT_OUT)/obj/SHARED_LIBRARIES/libandroid_runtime_intermediates)\n$(call add-clean-step, rm -rf $(PRODUCT_OUT)/obj/lib/libandroid_runtime.so)\n$(call add-clean-step, rm -rf $(PRODUCT_OUT)/symbols/system/lib/libandroid_runtime.so)\n$(call add-clean-step, rm -rf $(PRODUCT_OUT)/system/lib/libandroid_runtime.so)\n$(call add-clean-step, rm -rf $(PRODUCT_OUT)/obj/SHARED_LIBRARIES/libhwui_intermediates)\n$(call add-clean-step, rm -rf $(PRODUCT_OUT)/obj/lib/libhwui.so)\n$(call add-clean-step, rm -rf $(PRODUCT_OUT)/symbols/system/lib/libhwui.so)\n$(call add-clean-step, rm -rf $(PRODUCT_OUT)/system/lib/libhwui.so)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/framework_intermediates/src/core/java/android/os/storage/*)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/framework_intermediates/src/core/java/android/content/IClipboard.P)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/framework_intermediates/src/telephony/java/com/android/internal/telephony/ITelephonyRegistry.P)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/android_stubs_current_intermediates)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/docs/api-stubs*)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/framework_intermediates/src/core/java/com/trustedlogic)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/android_stubs_current_intermediates/src/com/trustedlogic)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/framework_intermediates/src/core/java/com/trustedlogic)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/android_stubs_current_intermediates/src/com/trustedlogic)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/APPS/Music2_intermediates)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/framework_intermediates/src/core/java/android/nfc/INdefTag.java)\n$(call add-clean-step, rm -rf $(PRODUCT_OUT)/obj/STATIC_LIBRARIES/libstagefright_aacdec_intermediates)\n$(call add-clean-step, rm -rf $(PRODUCT_OUT)/obj/STATIC_LIBRARIES/libstagefright_mp3dec_intermediates)\n$(call add-clean-step, rm -rf $(PRODUCT_OUT)/system/build.prop)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/APPS/ImageProcessing_intermediates/)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/APPS/ModelViewer_intermediates/)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/APPS/PerfTest_intermediates/)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/APPS/RSTest_intermediates/)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/framework_intermediates/src/core/java/android/hardware/IUsbManager.java)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/framework_intermediates/src/core/java/android/nfc)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/framework_intermediates)\n$(call add-clean-step, rm -rf $(PRODUCT_OUT)/obj/SHARED_LIBRARIES/libstagefright_intermediates)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/framework_intermediates/src/core/java/android/os)\n$(call add-clean-step, rm -rf $(OUT_DIR)target/common/obj/JAVA_LIBRARIES/framework_intermediates/src/keystore/java/android/security/IKeyChainAliasResponse.java)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/framework_intermediates/src/vpn)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/framework_intermediates/src/core/java/android/nfc)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/APPS/SystemUI_intermediates)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/R/com/android/systemui/R.java)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/framework_intermediates/src/media/java/android/media/IAudioService.P)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/framework_intermediates/src/media/java/android/media/IAudioService.P)\n$(call add-clean-step, rm -rf $(PRODUCT_OUT)/system/media/audio/)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/framework_intermediates/src/core/java/android/nfc/)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/framework_intermediates/src/wifi/java)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/framework_intermediates/src/wifi/java)\n$(call add-clean-step, rm -rf $(PRODUCT_OUT)/system/media/audio/)\n$(call add-clean-step, rm -rf $(PRODUCT_OUT)/system/fonts/Lohit_Hindi.ttf)\n$(call add-clean-step, rm -rf $(PRODUCT_OUT)/system/media/audio/)\n$(call add-clean-step, rm -rf $(PRODUCT_OUT)/system/fonts/DroidSans*)\n$(call add-clean-step, rm -rf $(PRODUCT_OUT)/system/media/audio/)\n$(call add-clean-step, rm -rf $(PRODUCT_OUT)/system/fonts/DroidSans*)\n$(call add-clean-step, rm -rf $(PRODUCT_OUT)/system/media/audio/)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/framework_intermediates/src/core/java/android/content)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/android_stubs_current_intermediates/src/android/content)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/APPS/*/src/renderscript)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/*/src/renderscript)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/APPS/*/src/RenderScript.stamp)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/*/src/RenderScript.stamp)\n$(call add-clean-step, rm -rf $(PRODUCT_OUT)/obj/SHARED_LIBRARIES/libRS_intermediates)\n$(call add-clean-step, rm -rf $(PRODUCT_OUT)/obj/STATIC_LIBRARIES/libRSDriver_intermediates)\n$(call add-clean-step, rm -rf $(OUT_DIR)/host/$(HOST_PREBUILT_TAG)/obj/STATIC_LIBRARIES/libRS_intermediates)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/framework_intermediates/src/core/java/android/accessibilityservice/IEventListener.java)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/framework_intermediates/src/core/java/android/accessibilityservice/IEventListener.P)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/framework_intermediates/src/core/java/android/view/accessibility/IAccessibilityManager.P)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/framework_intermediates/src/core/java/android/accessibilityservice/IAccessibilityServiceClientCallback.java)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/framework_intermediates/src/core/java/android/accessibilityservice/IAccessibilityServiceClientCallback.P)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/framework_intermediates/src/core/java/android/accessibilityservice/IAccessibilityServiceClient.P)\n$(call add-clean-step, rm -f $(PRODUCT_OUT)/system/media/video/Disco*)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/framework_intermediates)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/APPS/ImageProcessing_intermediates)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/APPS/ImageProcessing2_intermediates)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/APPS/ImageProcessing_intermediates)\n$(call add-clean-step, rm -rf $(PRODUCT_OUT)/system/media/audio/ui/*.ogg)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/framework_intermediates/src/telephony/java/com/android/internal/telephony/IExtendedNetworkService.java)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/framework_intermediates/src/telephony/java/com/android/internal/telephony/IExtendedNetworkService.P)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/APPS/ImageProcessing_intermediates)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/framework_intermediates/src/core/java/android/view/IDisplayContentChangeListener.java)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/framework_intermediates/src/core/java/android/view/IDisplayContentChangeListener.P)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/framework_intermediates/src/core/java/android/view/IWindowManager.java)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/framework_intermediates/src/core/java/android/view/IWindowManager.P)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/framework_intermediates/src/core/java/android/view/IDisplayMagnificationController.java)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/framework_intermediates/src/core/java/android/view/IDisplayMagnificationController.P)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/framework_intermediates/src/core/java/android/view/IDisplayMagnificationMediator.java)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/framework_intermediates/src/core/java/android/view/IDisplayMagnificationMediator.P)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/framework_intermediates/src/voip)\n$(call add-clean-step, rm -rf $(PRODUCT_OUT)/obj/SHARED_LIBRARIES/librtp_jni_intermediates)\n$(call add-clean-step, rm -rf $(PRODUCT_OUT)/system/lib/librtp_jni.so)\n$(call add-clean-step, rm -rf $(PRODUCT_OUT)/obj/lib/librtp_jni.so)\n$(call add-clean-step, rm -rf $(PRODUCT_OUT)/symbols/system/lib/librtp_jni.so)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/framework_intermediates/src/telephony/java/com/android/internal/telephony/SmsRawData.*)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/framework_intermediates)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/framework_intermediates/src/core/java/com/android/internal/view/IInputMethodCallback.*)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/framework_intermediates/src/core/java/com/android/internal/view/IInputMethodSession.*)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/framework_intermediates/src/core/java/com/android/internal/view/IInputMethodCallback.*)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/framework_intermediates)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/framework_intermediates)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/framework_intermediates)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/APPS/framework-res_intermediates)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/framework_intermediates)\n$(call add-clean-step, rm -rf $(HOST_OUT)/obj/STATIC_LIBRARIES/libandroidfw_intermediates/import_includes)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/framework_intermediates)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/framework-base_intermediates)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/framework-base_intermediates/src/core/java/android/print/IPrinterDiscoveryObserver.*)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/framework-base_intermediates/src/core/java/android/print/)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/framework-base_intermediates/src/core/java/android/printservice/)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/framework-base_intermediates/src/packages/services/Proxy/)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/framework-base_intermediates)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/framework-base_intermediates/src/core/java/android/print/IPrinterDiscoverySessionObserver.*)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/framework-base_intermediates/src/core/java/android/print/IPrinterDiscoverySessionClient.*)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/framework-base_intermediates/src/core/java/android/os/IBattery*)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/framework-base_intermediates)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/android_stubs_current_intermediates)\n$(call add-clean-step, rm -rf $(PRODUCT_OUT)/system/usr/idc/frameworks)\n$(call add-clean-step, rm -rf $(PRODUCT_OUT)/system/usr/keylayout/frameworks)\n$(call add-clean-step, rm -rf $(PRODUCT_OUT)/system/usr/keychars/frameworks)\n$(call add-clean-step, rm -f $(PRODUCT_OUT)/system/media/video/*)\n$(call add-clean-step, rm -rf $(PRODUCT_OUT)/system/media/audio/)\n$(call add-clean-step, rm -rf $(PRODUCT_OUT)/system/media/audio/effects/)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/APPS/framework-res_intermediates)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/framework-base_intermediates/src/core/java/android/print/IPrintClient.*)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/services_intermediates)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/framework-base_intermediates/src/media/java/android/media/IMedia*)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/framework-base_intermediates/src/core/java/android/view/IMagnificationCallbacks*)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/framework-base_intermediates/src/core/java/android/tv/)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/framework-base_intermediates/src/media/java/android/media/)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/framework-base_intermediates/src/core/java/android/app)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/android_stubs_current_intermediates/src/android/app/wearable)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/framework-base_intermediates/src/core/java/android/tv/ITv*)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/framework-base_intermediates)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/framework-base_intermediates/classes/android/app/task)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/framework-base_intermediates/src/core/java/android/app/task)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/framework-base_intermediates/classes/android/app/TaskManager)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/framework-base_intermediates/src/core/java/android/app/maintenance)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/framework-base_intermediates/classes/android/app/maintenance)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/framework_intermediates/classes/android/app/maintenance)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/android_stubs_current_intermediates/classes/android/app/maintenance)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/android_stubs_current_intermediates/src/android/app/maintenance)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/services_intermediates)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/framework-base_intermediates)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/framework-base_intermediates)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/framework-base_intermediates/src/core/java/android/app)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/framework-base_intermediates)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/ims-common_intermediates)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/framework2_intermediates)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/framework-base_intermediates/src/telecomm/java/com/android/internal/telecom)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/framework_intermediates)\n$(call add-clean-step, rm -rf $(PRODUCT_OUT)/system/framework.* $(PRODUCT_OUT)/system/framework2.*)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/framework-base_intermediates)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/docs/api-stubs-timestamp)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/android_stubs_current_intermediates)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/framework_intermediates)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/services.core_intermediates)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/services_intermediates)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/framework_intermediates)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/services.core_intermediates)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/services_intermediates)\n$(call add-clean-step, rm -rf $(PRODUCT_OUT)/system/bin/inputflinger $(PRODUCT_OUT)/symbols/system/bin/inputflinger)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/APPS/RsFountainFbo_intermediates)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/framework-base_intermediates/src/telecomm/java/com/android/internal/telecomm)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/framework_intermediates/src/core/java/com/android/internal/widget/ILockSettingsObserver.java)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/APPS/SystemUI_intermediates/)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/Keyguard_intermediates/)\n$(call add-clean-step, rm -f $(OUT_DIR)/target/product/*/system/framework/android.policy.jar)\n$(call add-clean-step, rm -rf $(PRODUCT_OUT)/system/bin/inputflinger $(PRODUCT_OUT)/symbols/system/bin/inputflinger)\n$(call add-clean-step, rm -rf $(PRODUCT_OUT)/system/lib/libinputflingerhost.so $(PRODUCT_OUT)/system/lib64/libinputflingerhost.so)\n$(call add-clean-step, rm -rf $(PRODUCT_OUT)/symbols/system/lib/libinputflingerhost.so $(PRODUCT_OUT)/symbols/system/lib64/libinputflingerhost.so)\n$(call add-clean-step, rm -rf $(PRODUCT_OUT)/obj/lib/libinputflingerhost.so $(PRODUCT_OUT)/obj_arm/lib/libinputflingerhost.so)\n$(call add-clean-step, rm -rf $(PRODUCT_OUT)/obj/SHARED_LIBRARIES/libinputflingerhost_intermediates $(PRODUCT_OUT)/obj_arm/SHARED_LIBRARIES/libinputflingerhost_intermediates)\n$(call add-clean-step, rm -rf $(PRODUCT_OUT)/target/common/obj/framework.aidl)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/framework_intermediates)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/APPS/DocumentsUI_intermediates)\n$(call add-clean-step, rm -f $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/framework_intermediates/src/media/java/android/media/IRemoteControlClient.*)\n$(call add-clean-step, rm -f $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/framework_intermediates/src/media/java/android/media/IRemoteControlDisplay.*)\n$(call add-clean-step, rm -f $(OUT_DIR)/target/common/obj/APPS/FeatureSplit1_intermediates/src/com/android/test/split/feature/R.java)\n$(call add-clean-step, rm -f $(OUT_DIR)/target/common/obj/APPS/FeatureSplit2_intermediates/src/com/android/test/split/feature/R.java)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/framework_intermediates/src/core/java/android/hardware)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/framework_intermediates/core/java/android/os/storage/*)\n$(call add-clean-step, rm -rf $(OUT_DIR)/host/common/obj/JAVA_LIBRARIES/platformprotos_intermediates)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/statsdprotolite_intermediates)\n$(call add-clean-step, rm -rf $(PRODUCT_OUT)/system/framework/com.android.mediadrm.signer.jar)\n$(call add-clean-step, rm -rf $(PRODUCT_OUT)/system/framework/com.android.location.provider.jar)\n$(call add-clean-step, rm -rf $(PRODUCT_OUT)/system/framework/com.android.future.usb.accessory.jar)\n$(call add-clean-step, rm -rf $(PRODUCT_OUT)/system/framework/com.android.media.remotedisplay.jar)\n$(call add-clean-step, rm -rf $(PRODUCT_OUT)/system/priv-app/SystemUI)\n$(call add-clean-step, rm -rf $(PRODUCT_OUT)/system/media/audio)\n$(call add-clean-step, rm -rf $(PRODUCT_OUT)/system/priv-app/DynamicAndroidInstallationService)\n$(call add-clean-step, rm -rf $(PRODUCT_OUT)/system/priv-app/DefaultContainerService)\n$(call add-clean-step, rm -rf $(PRODUCT_OUT)/system/app/CaptivePortalLogin)\n$(call add-clean-step, rm -rf $(PRODUCT_OUT)/system/framework/ext.jar)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/framework_intermediates/src/telephony/java/com/google/android/mms)\n$(call add-clean-step, rm -rf $(PRODUCT_OUT)/system/framework/*-service.jar)\n$(call add-clean-step, rm -rf $(PRODUCT_OUT)/system/framework/service-statsd.jar)\n$(call add-clean-step, rm -rf $(SOONG_OUT_DIR)/.intermediates/frameworks/base/libincremental_aidl-cpp-source/)\n$(call add-clean-step, rm -rf $(SOONG_OUT_DIR)/.intermediates/frameworks/base/libincremental_manager_aidl-cpp-source/)\n$(call add-clean-step, rm -rf $(PRODUCT_OUT)/system/priv-app/InProcessTethering)\n$(call add-clean-step, rm -rf $(PRODUCT_OUT)/system/app/OsuLogin)\n$(call add-clean-step, rm -rf $(PRODUCT_OUT)/system_other/system/app/OsuLogin)\n$(call add-clean-step, rm -rf $(OUT_DIR)/host/linux-x86/testcases/ravenwood-runtime)\n# ******************************************************************\n# NEWER CLEAN STEPS MUST BE AT THE END OF THE LIST ABOVE THIS BANNER\n# ******************************************************************\n"
        },
        {
          "name": "FF_LEADS_OWNERS",
          "type": "blob",
          "size": 0.193359375,
          "content": "bills@google.com\ncarmenjackson@google.com\nnalini@google.com\nnosh@google.com\nolilan@google.com\nphilipcuadra@google.com\nrajekumar@google.com\nshayba@google.com\ntimmurray@google.com\nzezeozue@google.com\n"
        },
        {
          "name": "GAME_MANAGER_OWNERS",
          "type": "blob",
          "size": 0.0771484375,
          "content": "sumir@google.com\nchingtangyu@google.com\nxwxw@google.com\nmattbuckley@google.com\n"
        },
        {
          "name": "INPUT_OWNERS",
          "type": "blob",
          "size": 0.326171875,
          "content": "# Bug component: 136048\n# Please assign bugs to android-framework-input-triage@.\narpitks@google.com\nasmitapoddar@google.com\nhcutts@google.com\njoseprio@google.com\nmichaelwr@google.com\nprabirmsp@google.com\nsvv@google.com\nvdevmurari@google.com\n\nper-file Virtual*=file:/services/companion/java/com/android/server/companion/virtual/OWNERS\n"
        },
        {
          "name": "INTENT_OWNERS",
          "type": "blob",
          "size": 0.1748046875,
          "content": "include /PACKAGE_MANAGER_OWNERS\ninclude /services/core/java/com/android/server/wm/OWNERS\ninclude /services/core/java/com/android/server/am/OWNERS\ninclude /ACTIVITY_SECURITY_OWNERS"
        },
        {
          "name": "LSE_APP_COMPAT_OWNERS",
          "type": "blob",
          "size": 0.1787109375,
          "content": "# Owners for the App Compat flags (large_screen_experiences_app_compat)\nmcarli@google.com\neevlachavas@google.com\ngracielawputri@google.com\nminagranic@google.com\nmariiasand@google.com\n"
        },
        {
          "name": "MEMORY_OWNERS",
          "type": "blob",
          "size": 0.09375,
          "content": "surenb@google.com\ntjmercier@google.com\nkaleshsingh@google.com\njyescas@google.com\njji@google.com\n"
        },
        {
          "name": "METADATA",
          "type": "blob",
          "size": 0.0419921875,
          "content": "third_party {\n  license_type: RECIPROCAL\n}\n"
        },
        {
          "name": "MODULE_LICENSE_APACHE2",
          "type": "blob",
          "size": 0,
          "content": ""
        },
        {
          "name": "MULTIUSER_OWNERS",
          "type": "blob",
          "size": 0.1513671875,
          "content": "# OWNERS of Multiuser related files\nannabauza@google.com\nbookatz@google.com\nnykkumar@google.com\nolilan@google.com\ntetianameronyk@google.com\ntyk@google.com\n"
        },
        {
          "name": "NOTICE",
          "type": "blob",
          "size": 17.755859375,
          "content": "   =========================================================================\n   ==  NOTICE file corresponding to the section 4 d of                    ==\n   ==  the Apache License, Version 2.0,                                   ==\n   ==  in this case for the Android-specific code.                        ==\n   =========================================================================\n\nAndroid Code\nCopyright 2005-2008 The Android Open Source Project\n\nThis product includes software developed as part of\nThe Android Open Source Project (http://source.android.com).\n\n   =========================================================================\n   ==  NOTICE file corresponding to the section 4 d of                    ==\n   ==  the Apache License, Version 2.0,                                   ==\n   ==  in this case for Apache Commons code.                              ==\n   =========================================================================\n\nApache Commons\nCopyright 1999-2006 The Apache Software Foundation\n\nThis product includes software developed at\nThe Apache Software Foundation (http://www.apache.org/).\n\n   =========================================================================\n   ==  NOTICE file corresponding to the section 4 d of                    ==\n   ==  the Apache License, Version 2.0,                                   ==\n   ==  in this case for Jakarta Commons Logging.                          ==\n   =========================================================================\n\nJakarta Commons Logging (JCL)\nCopyright 2005,2006 The Apache Software Foundation.\n\nThis product includes software developed at\nThe Apache Software Foundation (http://www.apache.org/).\n\n   =========================================================================\n   ==  NOTICE file corresponding to the section 4 d of                    ==\n   ==  the Apache License, Version 2.0,                                   ==\n   ==  in this case for the Nuance code.                                  ==\n   =========================================================================\n\nThese files are Copyright 2007 Nuance Communications, but released under\nthe Apache2 License.\n\n   =========================================================================\n   ==  NOTICE file corresponding to the section 4 d of                    ==\n   ==  the Apache License, Version 2.0,                                   ==\n   ==  in this case for the Media Codecs code.                            ==\n   =========================================================================\n\nMedia Codecs\nThese files are Copyright 1998 - 2009 PacketVideo, but released under\nthe Apache2 License.\n\n   =========================================================================\n   ==  NOTICE file corresponding to the section 4 d of                    ==\n   ==  the Apache License, Version 2.0,                                   ==\n   ==  in this case for the mDnsResponder code.                           ==\n   =========================================================================\n\nmDnsResponder TXTRecord\nThis file is Copyright 2004 Apple Computer, Inc.  but released under\nthe Apache2 License.\n\n\n   =========================================================================\n   ==  NOTICE file corresponding to the section 4 d of                    ==\n   ==  the Apache License, Version 2.0,                                   ==\n   ==  in this case for the TagSoup code.                                 ==\n   =========================================================================\n\nThis file is part of TagSoup and is Copyright 2002-2008 by John Cowan.\n\nTagSoup is licensed under the Apache License,\nVersion 2.0.  You may obtain a copy of this license at\nhttp://www.apache.org/licenses/LICENSE-2.0 .  You may also have\nadditional legal rights not granted by this license.\n\nTagSoup is distributed in the hope that it will be useful, but\nunless required by applicable law or agreed to in writing, TagSoup\nis distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS\nOF ANY KIND, either express or implied; not even the implied warranty\nof MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n   =========================================================================\n   ==  NOTICE file corresponding to the section 4 d of                    ==\n   ==  the Apache License, Version 2.0,                                   ==\n   ==  in this case for Additional Codecs code.                           ==\n   =========================================================================\n\nAdditional Codecs\nThese files are Copyright 2003-2010 VisualOn, but released under\nthe Apache2 License.\n\n  =========================================================================\n  ==  NOTICE file corresponding to the section 4 d of                    ==\n  ==  the Apache License, Version 2.0,                                   ==\n  ==  in this case for the Audio Effects code.                           ==\n  =========================================================================\n\nAudio Effects\nThese files are Copyright (C) 2004-2010 NXP Software and\nCopyright (C) 2010 The Android Open Source Project, but released under\nthe Apache2 License.\n\n\n                               Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n\n\nUNICODE, INC. LICENSE AGREEMENT - DATA FILES AND SOFTWARE\n\nUnicode Data Files include all data files under the directories\nhttp://www.unicode.org/Public/, http://www.unicode.org/reports/,\nand http://www.unicode.org/cldr/data/ . Unicode Software includes any\nsource code published in the Unicode Standard or under the directories\nhttp://www.unicode.org/Public/, http://www.unicode.org/reports/, and\nhttp://www.unicode.org/cldr/data/.\n\nNOTICE TO USER: Carefully read the following legal agreement. BY\nDOWNLOADING, INSTALLING, COPYING OR OTHERWISE USING UNICODE INC.'S DATA\nFILES (\"DATA FILES\"), AND/OR SOFTWARE (\"SOFTWARE\"), YOU UNEQUIVOCALLY\nACCEPT, AND AGREE TO BE BOUND BY, ALL OF THE TERMS AND CONDITIONS OF\nTHIS AGREEMENT. IF YOU DO NOT AGREE, DO NOT DOWNLOAD, INSTALL, COPY,\nDISTRIBUTE OR USE THE DATA FILES OR SOFTWARE.\n\nCOPYRIGHT AND PERMISSION NOTICE\n\nCopyright © 1991-2008 Unicode, Inc. All rights reserved. Distributed\nunder the Terms of Use in http://www.unicode.org/copyright.html.\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of the Unicode data files and any associated documentation (the\n\"Data Files\") or Unicode software and any associated documentation (the\n\"Software\") to deal in the Data Files or Software without restriction,\nincluding without limitation the rights to use, copy, modify, merge,\npublish, distribute, and/or sell copies of the Data Files or Software,\nand to permit persons to whom the Data Files or Software are furnished to\ndo so, provided that (a) the above copyright notice(s) and this permission\nnotice appear with all copies of the Data Files or Software, (b) both the\nabove copyright notice(s) and this permission notice appear in associated\ndocumentation, and (c) there is clear notice in each modified Data File\nor in the Software as well as in the documentation associated with the\nData File(s) or Software that the data or software has been modified.\n\nTHE DATA FILES AND SOFTWARE ARE PROVIDED \"AS IS\", WITHOUT WARRANTY OF\nANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT\nOF THIRD PARTY RIGHTS. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR HOLDERS\nINCLUDED IN THIS NOTICE BE LIABLE FOR ANY CLAIM, OR ANY SPECIAL INDIRECT\nOR CONSEQUENTIAL DAMAGES, OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS\nOF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE\nOR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE\nOR PERFORMANCE OF THE DATA FILES OR SOFTWARE.\n\nExcept as contained in this notice, the name of a copyright holder\nshall not be used in advertising or otherwise to promote the sale, use\nor other dealings in these Data Files or Software without prior written\nauthorization of the copyright holder.\n"
        },
        {
          "name": "OOM_ADJUSTER_OWNERS",
          "type": "blob",
          "size": 0.0556640625,
          "content": "mwachens@google.com\ndplotnikov@google.com\ntyk@google.com\n"
        },
        {
          "name": "OWNERS",
          "type": "blob",
          "size": 2.3544921875,
          "content": "# This top-level list should remain narrowly defined as team leads; individual\n# teams are strongly encouraged to define narrower OWNERS files at deeper\n# levels within the source tree; see OWNERS.md for more details\nakulian@google.com #{LAST_RESORT_SUGGESTION}\ndsandler@android.com #{LAST_RESORT_SUGGESTION}\ndsandler@google.com #{LAST_RESORT_SUGGESTION}\nhackbod@android.com #{LAST_RESORT_SUGGESTION}\nhackbod@google.com #{LAST_RESORT_SUGGESTION}\njjaggi@google.com #{LAST_RESORT_SUGGESTION}\nlorenzo@google.com #{LAST_RESORT_SUGGESTION}\nmichaelwr@google.com #{LAST_RESORT_SUGGESTION}\nnandana@google.com #{LAST_RESORT_SUGGESTION}\nnarayan@google.com #{LAST_RESORT_SUGGESTION}\nogunwale@google.com #{LAST_RESORT_SUGGESTION}\nomakoto@google.com #{LAST_RESORT_SUGGESTION}\nroosa@google.com #{LAST_RESORT_SUGGESTION}\nsmoreland@google.com #{LAST_RESORT_SUGGESTION}\nyamasani@google.com #{LAST_RESORT_SUGGESTION}\n\n# API changes are already covered by API-Review+1 (http://mdb/android-api-council)\n# via https://android.git.corp.google.com/All-Projects/+/refs/meta/config/rules.pl.\nper-file */api/*current.txt = *\n\n# Test mapping changes can be made by anyone\nper-file */TEST_MAPPING = *\n\n# Support bulk translation updates\nper-file */res*/values*/*.xml = byi@google.com, delphij@google.com\n\nper-file **.bp,**.mk =joeo@google.com, lamontjones@google.com\nper-file TestProtoLibraries.bp = file:platform/platform_testing:/libraries/health/OWNERS\nper-file TestProtoLibraries.bp = file:platform/tools/tradefederation:/OWNERS\n\nper-file *ravenwood* = file:ravenwood/OWNERS\nper-file *Ravenwood* = file:ravenwood/OWNERS\n\nper-file PREUPLOAD.cfg = file:/PREUPLOAD_OWNERS\n\nper-file INPUT_OWNERS = file:/INPUT_OWNERS\nper-file ZYGOTE_OWNERS = file:/ZYGOTE_OWNERS\nper-file SQLITE_OWNERS = file:/SQLITE_OWNERS\nper-file PERFORMANCE_OWNERS = file:/PERFORMANCE_OWNERS\nper-file PACKAGE_MANAGER_OWNERS = file:/PACKAGE_MANAGER_OWNERS\nper-file WEAR_OWNERS = file:/WEAR_OWNERS\nper-file ACTIVITY_MANAGER_OWNERS = file:/ACTIVITY_MANAGER_OWNERS\nper-file BATTERY_STATS_OWNERS = file:/BATTERY_STATS_OWNERS\nper-file OOM_ADJUSTER_OWNERS = file:/OOM_ADJUSTER_OWNERS\nper-file MULTIUSER_OWNERS = file:/MULTIUSER_OWNERS\nper-file BROADCASTS_OWNERS = file:/BROADCASTS_OWNERS\nper-file ADPF_OWNERS = file:/ADPF_OWNERS\nper-file GAME_MANAGER_OWNERS = file:/GAME_MANAGER_OWNERS\nper-file SDK_OWNERS = file:/SDK_OWNERS\nper-file PREUPLOAD_OWNERS = file:/PREUPLOAD_OWNERS\n"
        },
        {
          "name": "OWNERS.md",
          "type": "blob",
          "size": 2.5751953125,
          "content": "# Background\n\nAs general background, `OWNERS` files expedite code reviews by helping code\nauthors quickly find relevant reviewers, and they also ensure that stakeholders\nare involved in code changes in their areas.\n\nThe structure of `frameworks/base/` is unique among Android repositories, and\nit's evolved into a complex interleaved structure over the years.  Because of\nthis structure, the best place to authoritatively define `OWNERS` can vary\nwildly, but here are some common patterns:\n\n* `core/java/` contains source that is included in the base classpath, and as\nsuch it's where most APIs are defined:\n  * `core/java/android/app/`\n  * `core/java/android/content/`\n* `services/core/` contains most system services, and these directories\ntypically have more granularity than `core/java/`, since they can be refactored\nwithout API changes:\n  * `services/core/java/com/android/server/net/`\n  * `services/core/java/com/android/server/wm/`\n* `services/` contains several system services that have been isolated from the\nmain `services/core/` project:\n  * `services/appwidget/`\n  * `services/midi/`\n* `apex/` contains Mainline modules:\n  * `apex/jobscheduler/`\n  * `apex/permission/`\n* Finally, some teams may have dedicated top-level directories:\n  * `media/`\n  * `wifi/`\n\n# Design\n\nArea maintainers are strongly encouraged to list people in a single\nauthoritative `OWNERS` file in **exactly one** location.  Then, other paths\nshould reference that single authoritative `OWNERS` file using an include\ndirective.  This approach ensures that updates are applied consistently across\nthe tree, reducing maintenance burden.\n\n# Examples\n\nThe exact syntax of `OWNERS` files can be difficult to get correct, so here are\nsome common examples:\n\n```\n# Complete include of top-level owners from this repo\ninclude /ZYGOTE_OWNERS\n# Partial include of top-level owners from this repo\nper-file ZygoteFile.java = file:/ZYGOTE_OWNERS\n```\n```\n# Complete include of subdirectory owners from this repo\ninclude /services/core/java/com/android/server/net/OWNERS\n# Partial include of subdirectory owners from this repo\nper-file NetworkFile.java = file:/services/core/java/com/android/server/net/OWNERS\n```\n```\n# Complete include of top-level owners from another repo\ninclude platform/libcore:/OWNERS\n# Partial include of top-level owners from another repo\nper-file LibcoreFile.java = file:platform/libcore:/OWNERS\n```\n```\n# Complete include of subdirectory owners from another repo\ninclude platform/frameworks/av:/camera/OWNERS\n# Partial include of subdirectory owners from another repo\nper-file CameraFile.java = file:platform/frameworks/av:/camera/OWNERS\n```\n"
        },
        {
          "name": "PACKAGE_MANAGER_OWNERS",
          "type": "blob",
          "size": 0.1611328125,
          "content": "# Bug component: 36137\n# Bug template url: https://b.corp.google.com/issues/new?component=36137&template=198919\n\nalexbuy@google.com\npatb@google.com\nschfan@google.com"
        },
        {
          "name": "PERFORMANCE_OWNERS",
          "type": "blob",
          "size": 0.2021484375,
          "content": "timmurray@google.com\nedgararriaga@google.com\ndualli@google.com\ncarmenjackson@google.com\nphilipcuadra@google.com\nshayba@google.com\njdduke@google.com\nshombert@google.com\nkevinjeon@google.com\nyforta@google.com\n"
        },
        {
          "name": "PREUPLOAD.cfg",
          "type": "blob",
          "size": 1.4208984375,
          "content": "[Builtin Hooks]\nclang_format = true\nbpfmt = true\nktfmt = true\n\n[Builtin Hooks Options]\n# Only turn on clang-format check for the following subfolders.\nclang_format = --commit ${PREUPLOAD_COMMIT} --style file --extensions c,h,cc,cpp\n               cmds/hid/\n               cmds/input/\n               cmds/uinput/\n               core/jni/\n               libs/hwui/\n               libs/input/\n               native/\n               services/core/jni/\n               services/incremental/\n               tests/\n               tools/\nbpfmt = -d\nktfmt = --kotlinlang-style --include-dirs=services/permission,packages/SystemUI\n\n[Hook Scripts]\ncheckstyle_hook = ${REPO_ROOT}/prebuilts/checkstyle/checkstyle.py --sha ${PREUPLOAD_COMMIT}\n\nhidden_api_txt_checksorted_hook = ${REPO_ROOT}/tools/platform-compat/hiddenapi/checksorted_sha.sh ${PREUPLOAD_COMMIT} ${REPO_ROOT}\n\nhidden_api_txt_exclude_hook = ${REPO_ROOT}/frameworks/base/tools/hiddenapi/exclude.sh ${PREUPLOAD_COMMIT} ${REPO_ROOT}\n\nktlint_hook = ${REPO_ROOT}/prebuilts/ktlint/ktlint.py --no-verify-format -f ${PREUPLOAD_FILES}\n\n# This flag check hook runs only for \"packages/SystemUI\" subdirectory. If you want to include this check for other subdirectories, please modify flag_check.py.\nflag_hook = ${REPO_ROOT}/frameworks/base/packages/SystemUI/flag_check.py --msg=${PREUPLOAD_COMMIT_MESSAGE} --files=${PREUPLOAD_FILES} --project=${REPO_PROJECT}\n\n[Tool Paths]\nktfmt = ${REPO_ROOT}/external/ktfmt/ktfmt.sh\n"
        },
        {
          "name": "PREUPLOAD_OWNERS",
          "type": "blob",
          "size": 0.0361328125,
          "content": "roosa@google.com\ngsennton@google.com\n"
        },
        {
          "name": "ProtoLibraries.bp",
          "type": "blob",
          "size": 7.58203125,
          "content": "// Copyright (C) 2021 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\ngensrcs {\n    name: \"framework-javastream-protos\",\n\n    tools: [\n        \"aprotoc\",\n        \"protoc-gen-javastream\",\n        \"soong_zip\",\n    ],\n\n    cmd: \"mkdir -p $(genDir)/$(in) \" +\n        \"&& $(location aprotoc) \" +\n        \"  --plugin=$(location protoc-gen-javastream) \" +\n        \"  --javastream_out=$(genDir)/$(in) \" +\n        \"  -Iexternal/protobuf/src \" +\n        \"  -I . \" +\n        \"  $(in) \" +\n        \"&& $(location soong_zip) -jar -o $(out) -C $(genDir)/$(in) -D $(genDir)/$(in)\",\n\n    srcs: [\n        \":aconfigd_protos\",\n        \":ipconnectivity-proto-src\",\n        \":libstats_atom_enum_protos\",\n        \":libstats_atom_message_protos\",\n        \":libtombstone_proto-src\",\n        \"core/proto/**/*.proto\",\n        \"libs/incident/**/*.proto\",\n    ],\n\n    data: [\n        \":libprotobuf-internal-protos\",\n    ],\n\n    output_extension: \"srcjar\",\n}\n\ngensrcs {\n    name: \"framework-cppstream-protos\",\n\n    tools: [\n        \"aprotoc\",\n        \"protoc-gen-cppstream\",\n    ],\n\n    cmd: \"mkdir -p $(genDir) \" +\n        \"&& $(location aprotoc) \" +\n        \"  --plugin=$(location protoc-gen-cppstream) \" +\n        \"  --cppstream_out=$(genDir) \" +\n        \"  -Iexternal/protobuf/src \" +\n        \"  -I . \" +\n        \"  $(in)\",\n\n    srcs: [\n        \":ipconnectivity-proto-src\",\n        \":libstats_atom_enum_protos\",\n        \":libstats_atom_message_protos\",\n        \"core/proto/**/*.proto\",\n        \"libs/incident/**/*.proto\",\n    ],\n\n    data: [\n        \":libprotobuf-internal-protos\",\n    ],\n\n    output_extension: \"proto.h\",\n}\n\n// ====  nfc framework java library  ==============================\ngensrcs {\n    name: \"framework-nfc-javastream-protos\",\n\n    tools: [\n        \"aprotoc\",\n        \"protoc-gen-javastream\",\n        \"soong_zip\",\n    ],\n\n    cmd: \"mkdir -p $(genDir)/$(in) \" +\n        \"&& $(location aprotoc) \" +\n        \"  --plugin=$(location protoc-gen-javastream) \" +\n        \"  --javastream_out=$(genDir)/$(in) \" +\n        \"  -Iexternal/protobuf/src \" +\n        \"  -I . \" +\n        \"  $(in) \" +\n        \"&& $(location soong_zip) -jar -o $(out) -C $(genDir)/$(in) -D $(genDir)/$(in)\",\n\n    srcs: [\n        \"core/proto/android/app/pendingintent.proto\",\n        \"core/proto/android/content/component_name.proto\",\n        \"core/proto/android/content/intent.proto\",\n        \"core/proto/android/nfc/*.proto\",\n        \"core/proto/android/os/patternmatcher.proto\",\n        \"core/proto/android/os/persistablebundle.proto\",\n        \"core/proto/android/privacy.proto\",\n    ],\n\n    data: [\n        \":libprotobuf-internal-protos\",\n    ],\n\n    output_extension: \"srcjar\",\n}\n\n// ====  java proto host library  ==============================\njava_library_host {\n    name: \"platformprotos\",\n    srcs: [\n        \":ipconnectivity-proto-src\",\n        \":libstats_internal_protos\",\n        \":statsd_internal_protos\",\n        \"cmds/am/proto/instrumentation_data.proto\",\n        \"cmds/statsd/src/**/*.proto\",\n        \"core/proto/**/*.proto\",\n        \"libs/incident/proto/**/*.proto\",\n    ],\n    proto: {\n        include_dirs: [\n            \"external/protobuf/src\",\n            \"frameworks/proto_logging/stats\",\n        ],\n        type: \"full\",\n    },\n    // b/267831518: Pin tradefed and dependencies to Java 11.\n    java_version: \"11\",\n    // Protos have lots of MissingOverride and similar.\n    errorprone: {\n        enabled: false,\n    },\n}\n\n// ====  java proto device library (for test only)  ==============================\njava_library {\n    name: \"platformprotosnano\",\n    proto: {\n        type: \"nano\",\n        output_params: [\"store_unknown_fields=true\"],\n        include_dirs: [\"external/protobuf/src\"],\n    },\n    exclude_srcs: [\n        \"core/proto/android/privacy.proto\",\n        \"core/proto/android/section.proto\",\n        \"core/proto/android/typedef.proto\",\n    ],\n    sdk_version: \"9\",\n    srcs: [\n        \":ipconnectivity-proto-src\",\n        \":libstats_atom_enum_protos\",\n        \":libstats_atom_message_protos\",\n        \"core/proto/**/*.proto\",\n        \"libs/incident/proto/android/os/**/*.proto\",\n    ],\n    // Protos have lots of MissingOverride and similar.\n    errorprone: {\n        enabled: false,\n    },\n}\n\n// ====  java proto device library (for test only)  ==============================\njava_library {\n    name: \"platformprotoslite\",\n    proto: {\n        type: \"lite\",\n        include_dirs: [\"external/protobuf/src\"],\n    },\n\n    srcs: [\n        \":ipconnectivity-proto-src\",\n        \":libstats_atom_enum_protos\",\n        \":libstats_atom_message_protos\",\n        \"core/proto/**/*.proto\",\n        \"libs/incident/proto/android/os/**/*.proto\",\n    ],\n    exclude_srcs: [\n        \"core/proto/android/privacy.proto\",\n        \"core/proto/android/section.proto\",\n        \"core/proto/android/typedef.proto\",\n    ],\n    sdk_version: \"core_current\",\n    // Protos have lots of MissingOverride and similar.\n    errorprone: {\n        enabled: false,\n    },\n}\n\n// ====  c++ proto device library  ==============================\ncc_defaults {\n    name: \"libplatformprotos-defaults\",\n\n    proto: {\n        export_proto_headers: true,\n        include_dirs: [\n            \"external/protobuf/src\",\n        ],\n    },\n\n    cflags: [\n        \"-Wall\",\n        \"-Werror\",\n        \"-Wno-unused-parameter\",\n    ],\n\n    srcs: [\n        \":ipconnectivity-proto-src\",\n        \":libstats_atom_enum_protos\",\n        \":libstats_atom_message_protos\",\n        \"core/proto/**/*.proto\",\n    ],\n}\n\ncc_library {\n    name: \"libplatformprotos\",\n    defaults: [\"libplatformprotos-defaults\"],\n    host_supported: true,\n\n    target: {\n        host: {\n            proto: {\n                type: \"full\",\n            },\n        },\n        android: {\n            proto: {\n                type: \"lite\",\n            },\n            shared_libs: [\n                \"libprotobuf-cpp-lite\",\n            ],\n            shared: {\n                enabled: false,\n            },\n        },\n    },\n}\n\n// This library is meant for vendor code that needs to output protobuf. It links\n// against the static version of libprotobuf-cpp-lite, for which we can not guarantee\n// binary compatibility.\ncc_library {\n    name: \"libplatformprotos-static\",\n    defaults: [\"libplatformprotos-defaults\"],\n    host_supported: false,\n\n    // This is okay because this library is only built as a static library.  The C++\n    // API is not guaranteed. The proto API is guaranteed to be stable via Metrics Council,\n    // but is not authorized to be used outside of debugging.\n    vendor_available: true,\n\n    target: {\n        android: {\n            proto: {\n                type: \"lite\",\n            },\n            static_libs: [\n                \"libprotobuf-cpp-lite\",\n            ],\n            shared: {\n                enabled: false,\n            },\n        },\n    },\n}\n\n// This is the full proto version of libplatformprotos. It may only\n// be used by test code that is not shipped on the device.\ncc_library {\n    name: \"libplatformprotos-test\",\n    defaults: [\"libplatformprotos-defaults\"],\n    host_supported: false,\n\n    target: {\n        android: {\n            proto: {\n                type: \"full\",\n            },\n            shared: {\n                enabled: false,\n            },\n        },\n    },\n}\n"
        },
        {
          "name": "Ravenwood.bp",
          "type": "blob",
          "size": 1.1103515625,
          "content": "// Copyright (C) 2023 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n// \"framework-minus-apex\" and \"all-updatable-modules-system-stubs\" are not\n// visible publicly. We re-export them to Ravenwood in this file.\n\njava_library {\n    name: \"framework-minus-apex-for-host\",\n    installable: false,\n    static_libs: [\"framework-minus-apex\"],\n    visibility: [\"//frameworks/base/ravenwood\"],\n}\n\njava_library {\n    name: \"all-updatable-modules-system-stubs-for-host\",\n    installable: false,\n    static_libs: [\"all-updatable-modules-system-stubs\"],\n    visibility: [\"//frameworks/base/ravenwood\"],\n}\n"
        },
        {
          "name": "SDK_OWNERS",
          "type": "blob",
          "size": 0.1171875,
          "content": "amhk@google.com\nkimalexander@google.com\nlus@google.com\nmichaelwr@google.com\nnanaasiedu@google.com\npaulduffin@google.com\n"
        },
        {
          "name": "SECURITY_STATE_OWNERS",
          "type": "blob",
          "size": 0.0927734375,
          "content": "alxu@google.com\nmusashi@google.com\nmaunik@google.com\ndavidkwak@google.com\nwillcoster@google.com"
        },
        {
          "name": "SQLITE_OWNERS",
          "type": "blob",
          "size": 0.41015625,
          "content": "# Android platform SQLite owners are responsible for:\n# 1. Periodically updating libsqlite from upstream sqlite.org.\n# 2. Escalating libsqlite bug reports to upstream sqlite.org.\n# 3. Addressing bugs, performance regressions, and feature requests\n#    in Android SDK SQLite wrappers (android.database.sqlite.*).\n# 4. Reviewing proposed changes to said Android SDK SQLite wrappers.\n\nshayba@google.com\nshombert@google.com\n"
        },
        {
          "name": "TEST_MAPPING",
          "type": "blob",
          "size": 2.328125,
          "content": "{\n  \"presubmit-large\": [\n    {\n      \"name\": \"FrameworksServicesTests_Presubmit\"\n    }\n  ],\n  \"presubmit-pm\": [\n    {\n      \"name\": \"PackageManagerServiceServerTests_Presubmit\"\n    }\n  ],\n  \"presubmit\": [\n    {\n      \"name\": \"ManagedProvisioningTests\"\n    },\n    {\n      \"file_patterns\": [\n        \"ApexManager\\\\.java\",\n        \"SystemServer\\\\.java\",\n        \"services/tests/apexsystemservices/.*\"\n      ],\n      \"name\": \"ApexSystemServicesTestCases\"\n    },\n    {\n      \"name\": \"FrameworksUiServicesTests\"\n    },\n    {\n      \"name\": \"FrameworksInputMethodSystemServerTests_server_inputmethod\"\n    },\n    {\n      \"name\": \"ExtServicesUnitTests-tplus\"\n    },\n    {\n      \"name\": \"ExtServicesUnitTests-sminus\"\n    },\n    {\n      \"name\": \"FrameworksCoreTests_Presubmit\"\n    },\n    {\n      \"name\": \"FrameworkPermissionTests_Presubmit\"\n    },\n    {\n      \"name\": \"FrameworksInProcessTests\"\n    },\n    {\n      \"name\": \"vts_treble_vintf_framework_test\"\n    },\n    {\n      \"name\": \"vts_treble_vintf_vendor_test\"\n    },\n    {\n      \"name\": \"CtsStrictJavaPackagesTestCases\"\n    }\n  ],\n  \"ravenwood-presubmit\": [\n    {\n      \"name\": \"CtsUtilTestCasesRavenwood\",\n      \"host\": true,\n      \"file_patterns\": [\n        \"[Rr]avenwood\"\n      ]\n    },\n    {\n      \"name\": \"RavenwoodBivalentTest\",\n      \"host\": true,\n      \"file_patterns\": [\n        \"[Rr]avenwood\"\n      ]\n    }\n  ],\n  \"postsubmit-managedprofile-stress\": [\n    {\n      \"name\": \"ManagedProfileLifecycleStressTest\"\n    }\n  ],\n \"auto-postsubmit\": [\n   // Test tag for automotive targets. These are only running in postsubmit so as to harden the\n   // automotive targets to avoid introducing additional test flake and build time. The plan for\n   // presubmit testing for auto is to augment the existing tests to cover auto use cases as well.\n   // Additionally, this tag is used in targeted test suites to limit resource usage on the test\n   // infra during the hardening phase.\n   // TODO: this tag to be removed once the above is no longer an issue.\n   {\n     \"name\": \"FrameworksUiServicesTests\"\n   },\n   {\n     \"name\": \"ExtServicesUnitTests-tplus\"\n   },\n   {\n     \"name\": \"ExtServicesUnitTests-sminus\"\n   },\n   {\n     \"name\": \"TestablesTests\"\n   },\n   {\n     \"name\": \"FrameworksCoreTests_Presubmit\"\n   },\n   {\n     \"name\": \"FrameworksServicesTests_presubmit\"\n   },\n   {\n     \"name\": \"PackageManagerServiceServerTests_Presubmit\"\n   }\n ]\n}\n"
        },
        {
          "name": "THERMAL_OWNERS",
          "type": "blob",
          "size": 0.044921875,
          "content": "lpy@google.com\nwvw@google.com\nxwxw@google.com\n"
        },
        {
          "name": "TRACE_OWNERS",
          "type": "blob",
          "size": 0.10546875,
          "content": "# OWNERS of Trace-related files\nprimiano@google.com\ntimmurray@google.com\njjaggi@google.com\njreck@google.com\n"
        },
        {
          "name": "TestProtoLibraries.bp",
          "type": "blob",
          "size": 0.9921875,
          "content": "// Copyright 2021 The Android Open Source Project\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\njava_library_host {\n    name: \"platformtestprotos\",\n    srcs: [\n        \":libstats_internal_protos\",\n        \":statsd_internal_protos\",\n    ],\n    libs: [\n        \"libprotobuf-java-full\",\n    ],\n    proto: {\n        include_dirs: [\n            \"external/protobuf/src\",\n            \"frameworks/proto_logging/stats\",\n        ],\n        type: \"full\",\n    },\n    errorprone: {\n        enabled: false,\n    },\n}\n"
        },
        {
          "name": "WEAR_OWNERS",
          "type": "blob",
          "size": 0.2666015625,
          "content": "yzj@google.com\nshreerag@google.com\nyeabkal@google.com\nadsule@google.com\nandriyn@google.com\nyfz@google.com\ncon@google.com\nleetodd@google.com\nsadrul@google.com\nrwmyers@google.com\nnalmalki@google.com\nshijianli@google.com\nlatkin@google.com\ndjsollen@google.com\nhdhabu@google.com"
        },
        {
          "name": "ZYGOTE_OWNERS",
          "type": "blob",
          "size": 0.076171875,
          "content": "chriswailes@google.com\nhboehm@google.com\nmaco@google.com\nngeoffray@google.com\n"
        },
        {
          "name": "android-sdk-flags",
          "type": "tree",
          "content": null
        },
        {
          "name": "apct-tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "apex",
          "type": "tree",
          "content": null
        },
        {
          "name": "api",
          "type": "tree",
          "content": null
        },
        {
          "name": "boot",
          "type": "tree",
          "content": null
        },
        {
          "name": "cmds",
          "type": "tree",
          "content": null
        },
        {
          "name": "config",
          "type": "tree",
          "content": null
        },
        {
          "name": "core",
          "type": "tree",
          "content": null
        },
        {
          "name": "data",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "drm",
          "type": "tree",
          "content": null
        },
        {
          "name": "errorprone",
          "type": "tree",
          "content": null
        },
        {
          "name": "framework-jarjar-rules.txt",
          "type": "blob",
          "size": 0.5634765625,
          "content": "# This rule is meant to be reused across libraries in the bootclasspath that depend\n# on the HIDL libraries.\nrule android.hidl.** android.internal.hidl.@1\n\n# Framework-specific renames.\nrule android.net.wifi.WifiAnnotations* android.internal.wifi.WifiAnnotations@1\n\n# for modules-utils-build dependency\nrule com.android.modules.utils.build.** android.internal.modules.utils.build.@1\n\n# For Perfetto proto dependencies\nrule perfetto.protos.** android.internal.perfetto.protos.@1\n\n# For aconfig storage classes\nrule android.aconfig.storage.** android.internal.aconfig.storage.@1\n"
        },
        {
          "name": "graphics",
          "type": "tree",
          "content": null
        },
        {
          "name": "identity",
          "type": "tree",
          "content": null
        },
        {
          "name": "keystore",
          "type": "tree",
          "content": null
        },
        {
          "name": "libs",
          "type": "tree",
          "content": null
        },
        {
          "name": "lint-baseline.xml",
          "type": "blob",
          "size": 643.9521484375,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<issues format=\"6\" by=\"lint 8.4.0-alpha01\" type=\"baseline\" client=\"\" dependencies=\"true\" name=\"\" variant=\"all\" version=\"8.4.0-alpha01\">\n\n    <issue\n        id=\"NonUserGetterCalled\"\n        message=\"`android.provider.Settings.Secure#getString()` called from system process. Please call `android.provider.Settings.Secure#getStringForUser()` instead. \"\n        errorLine1=\"        final String component = Settings.Secure.getString(getContentResolver(),\"\n        errorLine2=\"                                         ~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/com/android/internal/accessibility/dialog/AccessibilityButtonChooserActivity.java\"\n            line=\"60\"\n            column=\"42\"/>\n    </issue>\n\n    <issue\n        id=\"NonUserGetterCalled\"\n        message=\"`android.provider.Settings.Secure#getInt()` called from system process. Please call `android.provider.Settings.Secure#getIntForUser()` instead. \"\n        errorLine1=\"        return Settings.Secure.getInt(context.getContentResolver(),\"\n        errorLine2=\"                               ~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/com/android/internal/accessibility/util/AccessibilityStatsLogUtils.java\"\n            line=\"188\"\n            column=\"32\"/>\n    </issue>\n\n    <issue\n        id=\"NonUserGetterCalled\"\n        message=\"`android.provider.Settings.Secure#getInt()` called from system process. Please call `android.provider.Settings.Secure#getIntForUser()` instead. \"\n        errorLine1=\"        return Settings.Secure.getInt(context.getContentResolver(),\"\n        errorLine2=\"                               ~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/com/android/internal/accessibility/util/AccessibilityStatsLogUtils.java\"\n            line=\"194\"\n            column=\"32\"/>\n    </issue>\n\n    <issue\n        id=\"NonUserGetterCalled\"\n        message=\"`android.provider.Settings.Secure#getInt()` called from system process. Please call `android.provider.Settings.Secure#getIntForUser()` instead. \"\n        errorLine1=\"        return Settings.Secure.getInt(context.getContentResolver(),\"\n        errorLine2=\"                       ~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/com/android/internal/app/AssistUtils.java\"\n            line=\"216\"\n            column=\"24\"/>\n    </issue>\n\n    <issue\n        id=\"NonUserGetterCalled\"\n        message=\"`android.provider.Settings.System#getInt()` called from system process. Please call `android.provider.Settings.System#getIntForUser()` instead. \"\n        errorLine1=\"     * volume, false otherwise.\"\n        errorLine2=\"                     ~~~~~~\">\n        <location\n            file=\"frameworks/base/media/java/android/media/AudioManager.java\"\n            line=\"1028\"\n            column=\"22\"/>\n    </issue>\n\n    <issue\n        id=\"NonUserGetterCalled\"\n        message=\"`android.provider.Settings.Secure#getInt()` called from system process. Please call `android.provider.Settings.Secure#getIntForUser()` instead. \"\n        errorLine1=\"    public final boolean isEnabled() {\"\n        errorLine2=\"                                     ^\">\n        <location\n            file=\"frameworks/base/core/java/android/view/accessibility/CaptioningManager.java\"\n            line=\"70\"\n            column=\"38\"/>\n    </issue>\n\n    <issue\n        id=\"NonUserGetterCalled\"\n        message=\"`android.provider.Settings.Secure#getString()` called from system process. Please call `android.provider.Settings.Secure#getStringForUser()` instead. \"\n        errorLine1=\"    public final String getRawLocale() {\"\n        errorLine2=\"                                       ^\">\n        <location\n            file=\"frameworks/base/core/java/android/view/accessibility/CaptioningManager.java\"\n            line=\"81\"\n            column=\"40\"/>\n    </issue>\n\n    <issue\n        id=\"NonUserGetterCalled\"\n        message=\"`android.provider.Settings.Secure#getFloat()` called from system process. Please call `android.provider.Settings.Secure#getFloatForUser()` instead. \"\n        errorLine1=\"    public final float getFontScale() {\"\n        errorLine2=\"                                      ^\">\n        <location\n            file=\"frameworks/base/core/java/android/view/accessibility/CaptioningManager.java\"\n            line=\"111\"\n            column=\"39\"/>\n    </issue>\n\n    <issue\n        id=\"NonUserGetterCalled\"\n        message=\"`android.provider.Settings.Secure#getInt()` called from system process. Please call `android.provider.Settings.Secure#getIntForUser()` instead. \"\n        errorLine1=\"    public int getRawUserStyle() {\"\n        errorLine2=\"                                 ^\">\n        <location\n            file=\"frameworks/base/core/java/android/view/accessibility/CaptioningManager.java\"\n            line=\"120\"\n            column=\"34\"/>\n    </issue>\n\n    <issue\n        id=\"NonUserGetterCalled\"\n        message=\"`android.provider.Settings.Secure#getInt()` called from system process. Please call `android.provider.Settings.Secure#getIntForUser()` instead. \"\n        errorLine1=\"            final int foregroundColor = Secure.getInt(\"\n        errorLine2=\"                       ~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/view/accessibility/CaptioningManager.java\"\n            line=\"478\"\n            column=\"24\"/>\n    </issue>\n\n    <issue\n        id=\"NonUserGetterCalled\"\n        message=\"`android.provider.Settings.Secure#getInt()` called from system process. Please call `android.provider.Settings.Secure#getIntForUser()` instead. \"\n        errorLine1=\"            final int backgroundColor = Secure.getInt(\"\n        errorLine2=\"                       ~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/view/accessibility/CaptioningManager.java\"\n            line=\"480\"\n            column=\"24\"/>\n    </issue>\n\n    <issue\n        id=\"NonUserGetterCalled\"\n        message=\"`android.provider.Settings.Secure#getInt()` called from system process. Please call `android.provider.Settings.Secure#getIntForUser()` instead. \"\n        errorLine1=\"            final int edgeType = Secure.getInt(\"\n        errorLine2=\"                ~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/view/accessibility/CaptioningManager.java\"\n            line=\"482\"\n            column=\"17\"/>\n    </issue>\n\n    <issue\n        id=\"NonUserGetterCalled\"\n        message=\"`android.provider.Settings.Secure#getInt()` called from system process. Please call `android.provider.Settings.Secure#getIntForUser()` instead. \"\n        errorLine1=\"            final int edgeColor = Secure.getInt(\"\n        errorLine2=\"                 ~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/view/accessibility/CaptioningManager.java\"\n            line=\"484\"\n            column=\"18\"/>\n    </issue>\n\n    <issue\n        id=\"NonUserGetterCalled\"\n        message=\"`android.provider.Settings.Secure#getInt()` called from system process. Please call `android.provider.Settings.Secure#getIntForUser()` instead. \"\n        errorLine1=\"            final int windowColor = Secure.getInt(\"\n        errorLine2=\"                   ~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/view/accessibility/CaptioningManager.java\"\n            line=\"486\"\n            column=\"20\"/>\n    </issue>\n\n    <issue\n        id=\"NonUserGetterCalled\"\n        message=\"`android.provider.Settings.Secure#getString()` called from system process. Please call `android.provider.Settings.Secure#getStringForUser()` instead. \"\n        errorLine1=\"            String rawTypeface = Secure.getString(cr, Secure.ACCESSIBILITY_CAPTIONING_TYPEFACE);\"\n        errorLine2=\"                ~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/view/accessibility/CaptioningManager.java\"\n            line=\"489\"\n            column=\"17\"/>\n    </issue>\n\n    <issue\n        id=\"NonUserGetterCalled\"\n        message=\"`android.provider.Settings.Secure#getString()` called from system process. Please call `android.provider.Settings.Secure#getStringForUser()` instead. \"\n        errorLine1=\"        String nearbyComponent = Settings.Secure.getString(\"\n        errorLine2=\"                         ~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/com/android/internal/app/ChooserActivity.java\"\n            line=\"1156\"\n            column=\"26\"/>\n    </issue>\n\n    <issue\n        id=\"NonUserGetterCalled\"\n        message=\"`android.provider.Settings.Secure#getInt()` called from system process. Please call `android.provider.Settings.Secure#getIntForUser()` instead. \"\n        errorLine1=\"        final ContentResolver cr = context.getContentResolver();\"\n        errorLine2=\"                                       ~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/hardware/display/ColorDisplayManager.java\"\n            line=\"587\"\n            column=\"40\"/>\n    </issue>\n\n    <issue\n        id=\"NonUserGetterCalled\"\n        message=\"`android.provider.Settings.Secure#getInt()` called from system process. Please call `android.provider.Settings.Secure#getIntForUser()` instead. \"\n        errorLine1=\"        return Secure.getInt(cr, Secure.ACCESSIBILITY_DISPLAY_INVERSION_ENABLED, 0) == 1\"\n        errorLine2=\"                                                                   ~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/hardware/display/ColorDisplayManager.java\"\n            line=\"588\"\n            column=\"68\"/>\n    </issue>\n\n    <issue\n        id=\"NonUserGetterCalled\"\n        message=\"`android.provider.Settings.Secure#getInt()` called from system process. Please call `android.provider.Settings.Secure#getIntForUser()` instead. \"\n        errorLine1=\"        int inversionEnabled = Settings.Secure.getInt(contentResolver,\"\n        errorLine2=\"                                       ~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/security/ConfirmationPrompt.java\"\n            line=\"220\"\n            column=\"40\"/>\n    </issue>\n\n    <issue\n        id=\"NonUserGetterCalled\"\n        message=\"`android.provider.Settings.System#getFloat()` called from system process. Please call `android.provider.Settings.System#getFloatForUser()` instead. \"\n        errorLine1=\"        float fontScale = Settings.System.getFloat(contentResolver,\"\n        errorLine2=\"                                  ~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/security/ConfirmationPrompt.java\"\n            line=\"225\"\n            column=\"35\"/>\n    </issue>\n\n    <issue\n        id=\"NonUserGetterCalled\"\n        message=\"`android.provider.Settings.Secure#getInt()` called from system process. Please call `android.provider.Settings.Secure#getIntForUser()` instead. \"\n        errorLine1=\"            int a11yEnabled = Settings.Secure.getInt(contentResolver,\"\n        errorLine2=\"                                      ~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/security/ConfirmationPrompt.java\"\n            line=\"237\"\n            column=\"39\"/>\n    </issue>\n\n    <issue\n        id=\"NonUserGetterCalled\"\n        message=\"`android.provider.Settings.Secure#getInt()` called from system process. Please call `android.provider.Settings.Secure#getIntForUser()` instead. \"\n        errorLine1=\"                Secure.getInt(resolver, Secure.RELEASE_COMPRESS_BLOCKS_ON_INSTALL, 1) != 0;\"\n        errorLine2=\"               ~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/com/android/internal/content/F2fsUtils.java\"\n            line=\"96\"\n            column=\"16\"/>\n    </issue>\n\n    <issue\n        id=\"NonUserGetterCalled\"\n        message=\"`android.provider.Settings.System#getInt()` called from system process. Please call `android.provider.Settings.System#getIntForUser()` instead. \"\n        errorLine1=\"        int speed = DEFAULT_POINTER_SPEED;\"\n        errorLine2=\"                     ~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/hardware/input/InputManager.java\"\n            line=\"865\"\n            column=\"22\"/>\n    </issue>\n\n    <issue\n        id=\"NonUserGetterCalled\"\n        message=\"`android.provider.Settings.Secure#getString()` called from system process. Please call `android.provider.Settings.Secure#getStringForUser()` instead. \"\n        errorLine1=\"        final ContentResolver contentResolver = fallbackContext.getContentResolver();\"\n        errorLine2=\"                                                           ~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/view/inputmethod/InputMethodManager.java\"\n            line=\"2860\"\n            column=\"60\"/>\n    </issue>\n\n    <issue\n        id=\"NonUserGetterCalled\"\n        message=\"`android.provider.Settings.Secure#getInt()` called from system process. Please call `android.provider.Settings.Secure#getIntForUser()` instead. \"\n        errorLine1=\"            if (mShowImeWithHardKeyboard == ShowImeWithHardKeyboardType.UNKNOWN) {\"\n        errorLine2=\"                                                                              ^\">\n        <location\n            file=\"frameworks/base/core/java/android/inputmethodservice/InputMethodService.java\"\n            line=\"1205\"\n            column=\"79\"/>\n    </issue>\n\n    <issue\n        id=\"NonUserGetterCalled\"\n        message=\"`android.provider.Settings.Secure#getInt()` called from system process. Please call `android.provider.Settings.Secure#getIntForUser()` instead. \"\n        errorLine1=\"            if (showImeWithHardKeyboardUri.equals(uri)) {\"\n        errorLine2=\"                                                     ^\">\n        <location\n            file=\"frameworks/base/core/java/android/inputmethodservice/InputMethodService.java\"\n            line=\"1225\"\n            column=\"54\"/>\n    </issue>\n\n    <issue\n        id=\"NonUserGetterCalled\"\n        message=\"`android.provider.Settings.Secure#getInt()` called from system process. Please call `android.provider.Settings.Secure#getIntForUser()` instead. \"\n        errorLine1=\"                        RemoteViews.MARGIN_BOTTOM, 0);\"\n        errorLine2=\"                            ~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/app/Notification.java\"\n            line=\"5619\"\n            column=\"29\"/>\n    </issue>\n\n    <issue\n        id=\"NonUserGetterCalled\"\n        message=\"`android.provider.Settings.Secure#getInt()` called from system process. Please call `android.provider.Settings.Secure#getIntForUser()` instead. \"\n        errorLine1=\"            return Settings.Secure.getInt(context.getContentResolver(),\"\n        errorLine2=\"                   ~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/hardware/biometrics/ParentalControlsUtilsInternal.java\"\n            line=\"40\"\n            column=\"20\"/>\n    </issue>\n\n    <issue\n        id=\"NonUserGetterCalled\"\n        message=\"`android.provider.Settings.Secure#getInt()` called from system process. Please call `android.provider.Settings.Secure#getIntForUser()` instead. \"\n        errorLine1=\"        return Settings.Secure.getInt(mContext.getContentResolver(),\"\n        errorLine2=\"                               ~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/com/android/internal/policy/PhoneFallbackEventHandler.java\"\n            line=\"328\"\n            column=\"32\"/>\n    </issue>\n\n    <issue\n        id=\"NonUserGetterCalled\"\n        message=\"`android.provider.Settings.Secure#getInt()` called from system process. Please call `android.provider.Settings.Secure#getIntForUser()` instead. \"\n        errorLine1=\"        boolean isTvSetupComplete = Settings.Secure.getInt(getContext().getContentResolver(),\"\n        errorLine2=\"                            ~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/com/android/internal/policy/PhoneWindow.java\"\n            line=\"3129\"\n            column=\"29\"/>\n    </issue>\n\n    <issue\n        id=\"NonUserGetterCalled\"\n        message=\"`android.provider.Settings.Secure#getInt()` called from system process. Please call `android.provider.Settings.Secure#getIntForUser()` instead. \"\n        errorLine1=\"        isTvSetupComplete &amp;= Settings.Secure.getInt(getContext().getContentResolver(),\"\n        errorLine2=\"                     ~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/com/android/internal/policy/PhoneWindow.java\"\n            line=\"3131\"\n            column=\"22\"/>\n    </issue>\n\n    <issue\n        id=\"NonUserGetterCalled\"\n        message=\"`android.provider.Settings.System#getString()` called from system process. Please call `android.provider.Settings.System#getStringForUser()` instead. \"\n        errorLine1=\"            final String touchDataJson = Settings.System.getString(\"\n        errorLine2=\"                                                         ~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/com/android/internal/app/PlatLogoActivity.java\"\n            line=\"184\"\n            column=\"58\"/>\n    </issue>\n\n    <issue\n        id=\"NonUserGetterCalled\"\n        message=\"`android.provider.Settings.Secure#getInt()` called from system process. Please call `android.provider.Settings.Secure#getIntForUser()` instead. \"\n        errorLine1=\"        return Settings.Secure.getInt(mContext.getContentResolver(), name, 0) == 1;\"\n        errorLine2=\"       ~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/service/quickaccesswallet/QuickAccessWalletClientImpl.java\"\n            line=\"463\"\n            column=\"8\"/>\n    </issue>\n\n    <issue\n        id=\"NonUserGetterCalled\"\n        message=\"`android.provider.Settings.Secure#getString()` called from system process. Please call `android.provider.Settings.Secure#getStringForUser()` instead. \"\n        errorLine1=\"        String comp = Settings.Secure.getString(cr, Settings.Secure.NFC_PAYMENT_DEFAULT_COMPONENT);\"\n        errorLine2=\"                      ~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/service/quickaccesswallet/QuickAccessWalletServiceInfo.java\"\n            line=\"97\"\n            column=\"23\"/>\n    </issue>\n\n    <issue\n        id=\"NonUserGetterCalled\"\n        message=\"`android.provider.Settings.System#getInt()` called from system process. Please call `android.provider.Settings.System#getIntForUser()` instead. \"\n        errorLine1=\"            final String setting = getDefaultRingtoneSetting(type);\"\n        errorLine2=\"                                            ~~~~~~\">\n        <location\n            file=\"frameworks/base/media/java/android/media/RingtoneManager.java\"\n            line=\"1105\"\n            column=\"45\"/>\n    </issue>\n\n    <issue\n        id=\"NonUserGetterCalled\"\n        message=\"`android.provider.Settings.Secure#getString()` called from system process. Please call `android.provider.Settings.Secure#getStringForUser()` instead. \"\n        errorLine1=\"        final String targetString = Settings.Secure.getString(context.getContentResolver(),\"\n        errorLine2=\"                                            ~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/com/android/internal/accessibility/util/ShortcutUtils.java\"\n            line=\"55\"\n            column=\"45\"/>\n    </issue>\n\n    <issue\n        id=\"NonUserGetterCalled\"\n        message=\"`android.provider.Settings.Secure#getString()` called from system process. Please call `android.provider.Settings.Secure#getStringForUser()` instead. \"\n        errorLine1=\"        final String targetsValue = Settings.Secure.getString(context.getContentResolver(),\"\n        errorLine2=\"                                            ~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/com/android/internal/accessibility/util/ShortcutUtils.java\"\n            line=\"82\"\n            column=\"45\"/>\n    </issue>\n\n    <issue\n        id=\"NonUserGetterCalled\"\n        message=\"`android.provider.Settings.Secure#getString()` called from system process. Please call `android.provider.Settings.Secure#getStringForUser()` instead. \"\n        errorLine1=\"        final String targetString = Settings.Secure.getString(context.getContentResolver(),\"\n        errorLine2=\"                                            ~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/com/android/internal/accessibility/util/ShortcutUtils.java\"\n            line=\"112\"\n            column=\"45\"/>\n    </issue>\n\n    <issue\n        id=\"NonUserGetterCalled\"\n        message=\"`android.provider.Settings.Secure#getString()` called from system process. Please call `android.provider.Settings.Secure#getStringForUser()` instead. \"\n        errorLine1=\"        String serviceComponent = Settings.Secure.getString(mContext.getContentResolver(),\"\n        errorLine2=\"  ~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/speech/SpeechRecognizer.java\"\n            line=\"665\"\n            column=\"3\"/>\n    </issue>\n\n    <issue\n        id=\"NonUserGetterCalled\"\n        message=\"`android.provider.Settings.System#getInt()` called from system process. Please call `android.provider.Settings.System#getIntForUser()` instead. \"\n        errorLine1=\"        boolean cap = System.getInt(resolver, System.TEXT_AUTO_CAPS, 1) &gt; 0;\"\n        errorLine2=\"                             ~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/text/method/TextKeyListener.java\"\n            line=\"296\"\n            column=\"30\"/>\n    </issue>\n\n    <issue\n        id=\"NonUserGetterCalled\"\n        message=\"`android.provider.Settings.System#getInt()` called from system process. Please call `android.provider.Settings.System#getIntForUser()` instead. \"\n        errorLine1=\"        boolean text = System.getInt(resolver, System.TEXT_AUTO_REPLACE, 1) &gt; 0;\"\n        errorLine2=\"                              ~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/text/method/TextKeyListener.java\"\n            line=\"297\"\n            column=\"31\"/>\n    </issue>\n\n    <issue\n        id=\"NonUserGetterCalled\"\n        message=\"`android.provider.Settings.System#getInt()` called from system process. Please call `android.provider.Settings.System#getIntForUser()` instead. \"\n        errorLine1=\"        boolean period = System.getInt(resolver, System.TEXT_AUTO_PUNCTUATE, 1) &gt; 0;\"\n        errorLine2=\"                                ~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/text/method/TextKeyListener.java\"\n            line=\"298\"\n            column=\"33\"/>\n    </issue>\n\n    <issue\n        id=\"NonUserGetterCalled\"\n        message=\"`android.provider.Settings.System#getInt()` called from system process. Please call `android.provider.Settings.System#getIntForUser()` instead. \"\n        errorLine1=\"        boolean pw = System.getInt(resolver, System.TEXT_SHOW_PASSWORD, 1) &gt; 0;\"\n        errorLine2=\"                            ~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/text/method/TextKeyListener.java\"\n            line=\"299\"\n            column=\"29\"/>\n    </issue>\n\n    <issue\n        id=\"NonUserGetterCalled\"\n        message=\"`android.provider.Settings.Secure#getInt()` called from system process. Please call `android.provider.Settings.Secure#getIntForUser()` instead. \"\n        errorLine1=\"        return Settings.Secure.getInt(getContentResolver(), name, defaultValue);\"\n        errorLine2=\"                       ~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/speech/tts/TextToSpeechService.java\"\n            line=\"422\"\n            column=\"24\"/>\n    </issue>\n\n    <issue\n        id=\"NonUserGetterCalled\"\n        message=\"`android.provider.Settings.Secure#getInt()` called from system process. Please call `android.provider.Settings.Secure#getIntForUser()` instead. \"\n        errorLine1=\"        return Settings.Secure.getInt(getContext().getContentResolver(),\"\n        errorLine2=\"                       ~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/com/android/internal/accessibility/dialog/ToggleAllowListingFeatureTarget.java\"\n            line=\"63\"\n            column=\"24\"/>\n    </issue>\n\n    <issue\n        id=\"NonUserGetterCalled\"\n        message=\"`android.provider.Settings.Secure#getString()` called from system process. Please call `android.provider.Settings.Secure#getStringForUser()` instead. \"\n        errorLine1=\"        String engine = getString(mContext.getContentResolver(),\"\n        errorLine2=\"                ~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/speech/tts/TtsEngines.java\"\n            line=\"116\"\n            column=\"17\"/>\n    </issue>\n\n    <issue\n        id=\"NonUserGetterCalled\"\n        message=\"`android.provider.Settings.Secure#getString()` called from system process. Please call `android.provider.Settings.Secure#getStringForUser()` instead. \"\n        errorLine1=\"                getString(mContext.getContentResolver(), Settings.Secure.TTS_DEFAULT_LOCALE));\"\n        errorLine2=\"        ~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/speech/tts/TtsEngines.java\"\n            line=\"337\"\n            column=\"9\"/>\n    </issue>\n\n    <issue\n        id=\"NonUserGetterCalled\"\n        message=\"`android.provider.Settings.Secure#getString()` called from system process. Please call `android.provider.Settings.Secure#getStringForUser()` instead. \"\n        errorLine1=\"                    getString(mContext.getContentResolver(), Settings.Secure.TTS_DEFAULT_LOCALE),\"\n        errorLine2=\"            ~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/speech/tts/TtsEngines.java\"\n            line=\"373\"\n            column=\"13\"/>\n    </issue>\n\n    <issue\n        id=\"NonUserGetterCalled\"\n        message=\"`android.provider.Settings.Secure#getString()` called from system process. Please call `android.provider.Settings.Secure#getStringForUser()` instead. \"\n        errorLine1=\"        final String prefList = Settings.Secure.getString(mContext.getContentResolver(),\"\n        errorLine2=\"                                        ~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/speech/tts/TtsEngines.java\"\n            line=\"527\"\n            column=\"41\"/>\n    </issue>\n\n    <issue\n        id=\"NonUserGetterCalled\"\n        message=\"`android.provider.Settings.Secure#getInt()` called from system process. Please call `android.provider.Settings.Secure#getIntForUser()` instead. \"\n        errorLine1=\"        }\"\n        errorLine2=\"         ^\">\n        <location\n            file=\"frameworks/base/core/java/android/service/autofill/UserData.java\"\n            line=\"535\"\n            column=\"10\"/>\n    </issue>\n\n    <issue\n        id=\"NonUserGetterCalled\"\n        message=\"`android.provider.Settings.Secure#getString()` called from system process. Please call `android.provider.Settings.Secure#getStringForUser()` instead. \"\n        errorLine1=\"    public static boolean isActiveService(Context context, ComponentName service) {\"\n        errorLine2=\"                                                                         ~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/service/voice/VoiceInteractionService.java\"\n            line=\"156\"\n            column=\"74\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `getItemCount()` is a flagged API and should be inside an `if (Flags.collectionInfoItemCounts())` check (or annotate the surrounding method `writeToParcelNoRecycle` with `@FlaggedApi(Flags.FLAG_COLLECTION_INFO_ITEM_COUNTS) to transfer requirement to caller`)\"\n        errorLine1=\"            parcel.writeInt(mCollectionInfo.getItemCount());\"\n        errorLine2=\"                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/view/accessibility/AccessibilityNodeInfo.java\"\n            line=\"4498\"\n            column=\"29\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `getImportantForAccessibilityItemCount()` is a flagged API and should be inside an `if (Flags.collectionInfoItemCounts())` check (or annotate the surrounding method `writeToParcelNoRecycle` with `@FlaggedApi(Flags.FLAG_COLLECTION_INFO_ITEM_COUNTS) to transfer requirement to caller`)\"\n        errorLine1=\"            parcel.writeInt(mCollectionInfo.getImportantForAccessibilityItemCount());\"\n        errorLine2=\"                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/view/accessibility/AccessibilityNodeInfo.java\"\n            line=\"4499\"\n            column=\"29\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `isGranularScrollingSupported()` is a flagged API and should be inside an `if (Flags.granularScrolling())` check (or annotate the surrounding method `toString` with `@FlaggedApi(Flags.FLAG_GRANULAR_SCROLLING) to transfer requirement to caller`)\"\n        errorLine1=\"        builder.append(&quot;; granularScrollingSupported: &quot;).append(isGranularScrollingSupported());\"\n        errorLine2=\"                                                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/view/accessibility/AccessibilityNodeInfo.java\"\n            line=\"5079\"\n            column=\"65\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `UNDEFINED` is a flagged API and should be inside an `if (Flags.collectionInfoItemCounts())` check (or annotate the surrounding method `CollectionInfo` with `@FlaggedApi(Flags.FLAG_COLLECTION_INFO_ITEM_COUNTS) to transfer requirement to caller`)\"\n        errorLine1=\"            mItemCount = UNDEFINED;\"\n        errorLine2=\"                         ~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/view/accessibility/AccessibilityNodeInfo.java\"\n            line=\"6211\"\n            column=\"26\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `UNDEFINED` is a flagged API and should be inside an `if (Flags.collectionInfoItemCounts())` check (or annotate the surrounding method `CollectionInfo` with `@FlaggedApi(Flags.FLAG_COLLECTION_INFO_ITEM_COUNTS) to transfer requirement to caller`)\"\n        errorLine1=\"            mImportantForAccessibilityItemCount = UNDEFINED;\"\n        errorLine2=\"                                                  ~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/view/accessibility/AccessibilityNodeInfo.java\"\n            line=\"6212\"\n            column=\"51\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `UNDEFINED` is a flagged API and should be inside an `if (Flags.collectionInfoItemCounts())` check (or annotate the surrounding method `clear` with `@FlaggedApi(Flags.FLAG_COLLECTION_INFO_ITEM_COUNTS) to transfer requirement to caller`)\"\n        errorLine1=\"            mItemCount = UNDEFINED;\"\n        errorLine2=\"                         ~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/view/accessibility/AccessibilityNodeInfo.java\"\n            line=\"6319\"\n            column=\"26\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `UNDEFINED` is a flagged API and should be inside an `if (Flags.collectionInfoItemCounts())` check (or annotate the surrounding method `clear` with `@FlaggedApi(Flags.FLAG_COLLECTION_INFO_ITEM_COUNTS) to transfer requirement to caller`)\"\n        errorLine1=\"            mImportantForAccessibilityItemCount = UNDEFINED;\"\n        errorLine2=\"                                                  ~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/view/accessibility/AccessibilityNodeInfo.java\"\n            line=\"6320\"\n            column=\"51\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @FlaggedApi(&quot;android.view.accessibility.a11y_overlay_callbacks&quot;)\"\n        errorLine2=\"                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/accessibilityservice/AccessibilityService.java\"\n            line=\"800\"\n            column=\"17\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @FlaggedApi(&quot;android.view.accessibility.a11y_overlay_callbacks&quot;)\"\n        errorLine2=\"                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/accessibilityservice/AccessibilityService.java\"\n            line=\"811\"\n            column=\"17\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @FlaggedApi(&quot;android.view.accessibility.a11y_overlay_callbacks&quot;)\"\n        errorLine2=\"                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/accessibilityservice/AccessibilityService.java\"\n            line=\"811\"\n            column=\"17\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @FlaggedApi(&quot;android.view.accessibility.a11y_overlay_callbacks&quot;)\"\n        errorLine2=\"                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/accessibilityservice/AccessibilityService.java\"\n            line=\"811\"\n            column=\"17\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @FlaggedApi(&quot;android.view.accessibility.a11y_overlay_callbacks&quot;)\"\n        errorLine2=\"                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/accessibilityservice/AccessibilityService.java\"\n            line=\"819\"\n            column=\"17\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @FlaggedApi(&quot;android.view.accessibility.a11y_overlay_callbacks&quot;)\"\n        errorLine2=\"                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/accessibilityservice/AccessibilityService.java\"\n            line=\"819\"\n            column=\"17\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @FlaggedApi(&quot;android.view.accessibility.a11y_overlay_callbacks&quot;)\"\n        errorLine2=\"                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/accessibilityservice/AccessibilityService.java\"\n            line=\"819\"\n            column=\"17\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @FlaggedApi(&quot;android.view.accessibility.a11y_overlay_callbacks&quot;)\"\n        errorLine2=\"                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/accessibilityservice/AccessibilityService.java\"\n            line=\"819\"\n            column=\"17\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @FlaggedApi(&quot;android.view.accessibility.a11y_overlay_callbacks&quot;)\"\n        errorLine2=\"                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/accessibilityservice/AccessibilityService.java\"\n            line=\"819\"\n            column=\"17\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @FlaggedApi(&quot;android.view.accessibility.a11y_overlay_callbacks&quot;)\"\n        errorLine2=\"                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/accessibilityservice/AccessibilityService.java\"\n            line=\"819\"\n            column=\"17\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @FlaggedApi(&quot;android.view.accessibility.a11y_overlay_callbacks&quot;)\"\n        errorLine2=\"                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/accessibilityservice/AccessibilityService.java\"\n            line=\"819\"\n            column=\"17\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @FlaggedApi(&quot;android.view.accessibility.a11y_overlay_callbacks&quot;)\"\n        errorLine2=\"                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/accessibilityservice/AccessibilityService.java\"\n            line=\"827\"\n            column=\"17\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @FlaggedApi(&quot;android.view.accessibility.a11y_overlay_callbacks&quot;)\"\n        errorLine2=\"                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/accessibilityservice/AccessibilityService.java\"\n            line=\"827\"\n            column=\"17\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `setObservedMotionEventSources()` is a flagged API and should be inside an `if (Flags.motionEventObserving())` check (or annotate the surrounding method `initFromParcel` with `@FlaggedApi(Flags.FLAG_MOTION_EVENT_OBSERVING) to transfer requirement to caller`)\"\n        errorLine1=\"        setObservedMotionEventSources(parcel.readInt());\"\n        errorLine2=\"        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/accessibilityservice/AccessibilityServiceInfo.java\"\n            line=\"1420\"\n            column=\"9\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `TYPE_WINDOW_CONTROL` is a flagged API and should be inside an `if (Flags.addTypeWindowControl())` check (or annotate the surrounding method `typeToString` with `@FlaggedApi(Flags.FLAG_ADD_TYPE_WINDOW_CONTROL) to transfer requirement to caller`)\"\n        errorLine1=\"        if (Flags.addTypeWindowControl() &amp;&amp; type == TYPE_WINDOW_CONTROL) {\"\n        errorLine2=\"                                                    ~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/view/accessibility/AccessibilityWindowInfo.java\"\n            line=\"883\"\n            column=\"53\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `requestPermissions()` is a flagged API and should be inside an `if (Flags.deviceAwarePermissionApisEnabled())` check (or annotate the surrounding method `requestPermissions` with `@FlaggedApi(Flags.FLAG_DEVICE_AWARE_PERMISSION_APIS_ENABLED) to transfer requirement to caller`)\"\n        errorLine1=\"        requestPermissions(permissions, requestCode, getDeviceId());\"\n        errorLine2=\"        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/app/Activity.java\"\n            line=\"5636\"\n            column=\"9\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `EXTRA_REQUEST_PERMISSIONS_DEVICE_ID` is a flagged API and should be inside an `if (Flags.deviceAwarePermissionApisEnabled())` check (or annotate the surrounding method `dispatchRequestPermissionsResult` with `@FlaggedApi(Flags.FLAG_DEVICE_AWARE_PERMISSION_APIS_ENABLED) to transfer requirement to caller`)\"\n        errorLine1=\"                PackageManager.EXTRA_REQUEST_PERMISSIONS_DEVICE_ID, Context.DEVICE_ID_DEFAULT\"\n        errorLine2=\"                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/app/Activity.java\"\n            line=\"9530\"\n            column=\"32\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `onRequestPermissionsResult()` is a flagged API and should be inside an `if (Flags.deviceAwarePermissionApisEnabled())` check (or annotate the surrounding method `dispatchRequestPermissionsResult` with `@FlaggedApi(Flags.FLAG_DEVICE_AWARE_PERMISSION_APIS_ENABLED) to transfer requirement to caller`)\"\n        errorLine1=\"        onRequestPermissionsResult(requestCode, permissions, grantResults, deviceId);\"\n        errorLine2=\"        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/app/Activity.java\"\n            line=\"9532\"\n            column=\"9\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `uptimeNanos()` is a flagged API and should be inside an `if (Flags.adpfGpuReportActualWorkDuration())` check (or annotate the surrounding method `handleBindApplication` with `@FlaggedApi(Flags.FLAG_ADPF_GPU_REPORT_ACTUAL_WORK_DURATION) to transfer requirement to caller`)\"\n        errorLine1=\"                timestampApplicationOnCreateNs = SystemClock.uptimeNanos();\"\n        errorLine2=\"                                                 ~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/app/ActivityThread.java\"\n            line=\"7503\"\n            column=\"50\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `SeServiceManager()` is a flagged API and should be inside an `if (Flags.enableNfcMainline())` check (or annotate the surrounding method `initializeMainlineModules` with `@FlaggedApi(Flags.FLAG_ENABLE_NFC_MAINLINE) to transfer requirement to caller`)\"\n        errorLine1=\"        SeFrameworkInitializer.setSeServiceManager(new SeServiceManager());\"\n        errorLine2=\"                                                   ~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/app/ActivityThread.java\"\n            line=\"8725\"\n            column=\"52\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `setSeServiceManager()` is a flagged API and should be inside an `if (Flags.enableNfcMainline())` check (or annotate the surrounding method `initializeMainlineModules` with `@FlaggedApi(Flags.FLAG_ENABLE_NFC_MAINLINE) to transfer requirement to caller`)\"\n        errorLine1=\"        SeFrameworkInitializer.setSeServiceManager(new SeServiceManager());\"\n        errorLine2=\"        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/app/ActivityThread.java\"\n            line=\"8725\"\n            column=\"9\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `ProfilingServiceManager()` is a flagged API and should be inside an `if (Flags.telemetryApisFrameworkInitialization())` check (or annotate the surrounding method `initializeMainlineModules` with `@FlaggedApi(Flags.FLAG_TELEMETRY_APIS_FRAMEWORK_INITIALIZATION) to transfer requirement to caller`)\"\n        errorLine1=\"            ProfilingFrameworkInitializer.setProfilingServiceManager(new ProfilingServiceManager());\"\n        errorLine2=\"                                                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/app/ActivityThread.java\"\n            line=\"8727\"\n            column=\"70\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `TvExtender()` is a flagged API and should be inside an `if (Flags.apiTvextender())` check (or annotate the surrounding method `createNotification` with `@FlaggedApi(Flags.FLAG_API_TVEXTENDER) to transfer requirement to caller`)\"\n        errorLine1=\"                .extend(new Notification.TvExtender()\"\n        errorLine2=\"                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/debug/AdbNotifications.java\"\n            line=\"95\"\n            column=\"25\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `setChannelId()` is a flagged API and should be inside an `if (Flags.apiTvextender())` check (or annotate the surrounding method `createNotification` with `@FlaggedApi(Flags.FLAG_API_TVEXTENDER) to transfer requirement to caller`)\"\n        errorLine1=\"                .extend(new Notification.TvExtender()\"\n        errorLine2=\"                        ^\">\n        <location\n            file=\"frameworks/base/core/java/android/debug/AdbNotifications.java\"\n            line=\"95\"\n            column=\"25\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `isMgf1DigestsSpecified()` is a flagged API and should be inside an `if (Flags.mgf1DigestSetterV2())` check (or annotate the surrounding method `initialize` with `@FlaggedApi(Flags.FLAG_MGF1_DIGEST_SETTER_V2) to transfer requirement to caller`)\"\n        errorLine1=\"                if (spec.isMgf1DigestsSpecified()) {\"\n        errorLine2=\"                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/keystore/java/android/security/keystore2/AndroidKeyStoreKeyPairGeneratorSpi.java\"\n            line=\"346\"\n            column=\"21\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `getMgf1Digests()` is a flagged API and should be inside an `if (Flags.mgf1DigestSetterV2())` check (or annotate the surrounding method `initialize` with `@FlaggedApi(Flags.FLAG_MGF1_DIGEST_SETTER_V2) to transfer requirement to caller`)\"\n        errorLine1=\"                    Set&lt;String> mgfDigests = spec.getMgf1Digests();\"\n        errorLine2=\"                                             ~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/keystore/java/android/security/keystore2/AndroidKeyStoreKeyPairGeneratorSpi.java\"\n            line=\"349\"\n            column=\"46\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `isMgf1DigestsSpecified()` is a flagged API and should be inside an `if (Flags.mgf1DigestSetterV2())` check (or annotate the surrounding method `setPrivateKeyEntry` with `@FlaggedApi(Flags.FLAG_MGF1_DIGEST_SETTER_V2) to transfer requirement to caller`)\"\n        errorLine1=\"                    if (spec.isMgf1DigestsSpecified()) {\"\n        errorLine2=\"                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/keystore/java/android/security/keystore2/AndroidKeyStoreSpi.java\"\n            line=\"539\"\n            column=\"25\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `getMgf1Digests()` is a flagged API and should be inside an `if (Flags.mgf1DigestSetterV2())` check (or annotate the surrounding method `setPrivateKeyEntry` with `@FlaggedApi(Flags.FLAG_MGF1_DIGEST_SETTER_V2) to transfer requirement to caller`)\"\n        errorLine1=\"                        for (String mgf1Digest : spec.getMgf1Digests()) {\"\n        errorLine2=\"                                                 ~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/keystore/java/android/security/keystore2/AndroidKeyStoreSpi.java\"\n            line=\"540\"\n            column=\"50\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `TYPE_RCS_STRING` is a flagged API and should be inside an `if (Flags.carrierEnabledSatelliteFlag())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_CARRIER_ENABLED_SATELLITE_FLAG) to transfer requirement to caller`)\"\n        errorLine1=\"        APN_TYPE_STRING_MAP.put(TYPE_RCS_STRING, TYPE_RCS);\"\n        errorLine2=\"                                ~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/telephony/java/android/telephony/data/ApnSetting.java\"\n            line=\"491\"\n            column=\"33\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `TYPE_RCS` is a flagged API and should be inside an `if (Flags.carrierEnabledSatelliteFlag())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_CARRIER_ENABLED_SATELLITE_FLAG) to transfer requirement to caller`)\"\n        errorLine1=\"        APN_TYPE_STRING_MAP.put(TYPE_RCS_STRING, TYPE_RCS);\"\n        errorLine2=\"                                                 ~~~~~~~~\">\n        <location\n            file=\"frameworks/base/telephony/java/android/telephony/data/ApnSetting.java\"\n            line=\"491\"\n            column=\"50\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `TYPE_RCS_STRING` is a flagged API and should be inside an `if (Flags.carrierEnabledSatelliteFlag())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_CARRIER_ENABLED_SATELLITE_FLAG) to transfer requirement to caller`)\"\n        errorLine1=\"        APN_TYPE_INT_MAP.put(TYPE_RCS, TYPE_RCS_STRING);\"\n        errorLine2=\"                                       ~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/telephony/java/android/telephony/data/ApnSetting.java\"\n            line=\"509\"\n            column=\"40\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `TYPE_RCS` is a flagged API and should be inside an `if (Flags.carrierEnabledSatelliteFlag())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_CARRIER_ENABLED_SATELLITE_FLAG) to transfer requirement to caller`)\"\n        errorLine1=\"        APN_TYPE_INT_MAP.put(TYPE_RCS, TYPE_RCS_STRING);\"\n        errorLine2=\"                             ~~~~~~~~\">\n        <location\n            file=\"frameworks/base/telephony/java/android/telephony/data/ApnSetting.java\"\n            line=\"509\"\n            column=\"30\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `MTU_V4` is a flagged API and should be inside an `if (Flags.apnSettingFieldSupportFlag())` check (or annotate the surrounding method `makeApnSetting` with `@FlaggedApi(Flags.FLAG_APN_SETTING_FIELD_SUPPORT_FLAG) to transfer requirement to caller`)\"\n        errorLine1=\"        int mtuV4 = cursor.getInt(cursor.getColumnIndexOrThrow(Telephony.Carriers.MTU_V4));\"\n        errorLine2=\"                                                                                  ~~~~~~\">\n        <location\n            file=\"frameworks/base/telephony/java/android/telephony/data/ApnSetting.java\"\n            line=\"1075\"\n            column=\"83\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `setAlwaysOn()` is a flagged API and should be inside an `if (Flags.apnSettingFieldSupportFlag())` check (or annotate the surrounding method `makeApnSetting` with `@FlaggedApi(Flags.FLAG_APN_SETTING_FIELD_SUPPORT_FLAG) to transfer requirement to caller`)\"\n        errorLine1=\"        return new Builder()\"\n        errorLine2=\"               ^\">\n        <location\n            file=\"frameworks/base/telephony/java/android/telephony/data/ApnSetting.java\"\n            line=\"1080\"\n            column=\"16\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `MTU_V6` is a flagged API and should be inside an `if (Flags.apnSettingFieldSupportFlag())` check (or annotate the surrounding method `makeApnSetting` with `@FlaggedApi(Flags.FLAG_APN_SETTING_FIELD_SUPPORT_FLAG) to transfer requirement to caller`)\"\n        errorLine1=\"                .setMtuV6(cursor.getInt(cursor.getColumnIndexOrThrow(Telephony.Carriers.MTU_V6)))\"\n        errorLine2=\"                                                                                        ~~~~~~\">\n        <location\n            file=\"frameworks/base/telephony/java/android/telephony/data/ApnSetting.java\"\n            line=\"1126\"\n            column=\"89\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `ALWAYS_ON` is a flagged API and should be inside an `if (Flags.apnSettingFieldSupportFlag())` check (or annotate the surrounding method `makeApnSetting` with `@FlaggedApi(Flags.FLAG_APN_SETTING_FIELD_SUPPORT_FLAG) to transfer requirement to caller`)\"\n        errorLine1=\"                .setAlwaysOn(cursor.getInt(cursor.getColumnIndexOrThrow(Carriers.ALWAYS_ON)) == 1)\"\n        errorLine2=\"                                                                                 ~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/telephony/java/android/telephony/data/ApnSetting.java\"\n            line=\"1137\"\n            column=\"82\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `setAlwaysOn()` is a flagged API and should be inside an `if (Flags.apnSettingFieldSupportFlag())` check (or annotate the surrounding method `makeApnSetting` with `@FlaggedApi(Flags.FLAG_APN_SETTING_FIELD_SUPPORT_FLAG) to transfer requirement to caller`)\"\n        errorLine1=\"        return new Builder()\"\n        errorLine2=\"               ^\">\n        <location\n            file=\"frameworks/base/telephony/java/android/telephony/data/ApnSetting.java\"\n            line=\"1151\"\n            column=\"16\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `MTU_V4` is a flagged API and should be inside an `if (Flags.apnSettingFieldSupportFlag())` check (or annotate the surrounding method `toContentValues` with `@FlaggedApi(Flags.FLAG_APN_SETTING_FIELD_SUPPORT_FLAG) to transfer requirement to caller`)\"\n        errorLine1=\"        apnValue.put(Telephony.Carriers.MTU_V4, mMtuV4);\"\n        errorLine2=\"                                        ~~~~~~\">\n        <location\n            file=\"frameworks/base/telephony/java/android/telephony/data/ApnSetting.java\"\n            line=\"1500\"\n            column=\"41\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `MTU_V6` is a flagged API and should be inside an `if (Flags.apnSettingFieldSupportFlag())` check (or annotate the surrounding method `toContentValues` with `@FlaggedApi(Flags.FLAG_APN_SETTING_FIELD_SUPPORT_FLAG) to transfer requirement to caller`)\"\n        errorLine1=\"        apnValue.put(Telephony.Carriers.MTU_V6, mMtuV6);\"\n        errorLine2=\"                                        ~~~~~~\">\n        <location\n            file=\"frameworks/base/telephony/java/android/telephony/data/ApnSetting.java\"\n            line=\"1501\"\n            column=\"41\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `ALWAYS_ON` is a flagged API and should be inside an `if (Flags.apnSettingFieldSupportFlag())` check (or annotate the surrounding method `toContentValues` with `@FlaggedApi(Flags.FLAG_APN_SETTING_FIELD_SUPPORT_FLAG) to transfer requirement to caller`)\"\n        errorLine1=\"        apnValue.put(Telephony.Carriers.ALWAYS_ON, mAlwaysOn);\"\n        errorLine2=\"                                        ~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/telephony/java/android/telephony/data/ApnSetting.java\"\n            line=\"1504\"\n            column=\"41\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `setAlwaysOn()` is a flagged API and should be inside an `if (Flags.apnSettingFieldSupportFlag())` check (or annotate the surrounding method `readFromParcel` with `@FlaggedApi(Flags.FLAG_APN_SETTING_FIELD_SUPPORT_FLAG) to transfer requirement to caller`)\"\n        errorLine1=\"        return new Builder()\"\n        errorLine2=\"               ^\">\n        <location\n            file=\"frameworks/base/telephony/java/android/telephony/data/ApnSetting.java\"\n            line=\"1785\"\n            column=\"16\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `TYPE_RCS` is a flagged API and should be inside an `if (Flags.carrierEnabledSatelliteFlag())` check (or annotate the surrounding method `build` with `@FlaggedApi(Flags.FLAG_CARRIER_ENABLED_SATELLITE_FLAG) to transfer requirement to caller`)\"\n        errorLine1=\"                    | TYPE_XCAP | TYPE_VSIM | TYPE_BIP | TYPE_ENTERPRISE | TYPE_RCS)) == 0\"\n        errorLine2=\"                                                                           ~~~~~~~~\">\n        <location\n            file=\"frameworks/base/telephony/java/android/telephony/data/ApnSetting.java\"\n            line=\"2386\"\n            column=\"76\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `OPSTR_ACCESS_RESTRICTED_SETTINGS` is a flagged API and should be inside an `if (Flags.enhancedConfirmationModeApisEnabled())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_ENHANCED_CONFIRMATION_MODE_APIS_ENABLED) to transfer requirement to caller`)\"\n        errorLine1=\"        new AppOpInfo.Builder(OP_ACCESS_RESTRICTED_SETTINGS, OPSTR_ACCESS_RESTRICTED_SETTINGS,\"\n        errorLine2=\"                                                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/app/AppOpsManager.java\"\n            line=\"2983\"\n            column=\"62\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `OPSTR_CREATE_ACCESSIBILITY_OVERLAY` is a flagged API and should be inside an `if (Flags.createAccessibilityOverlayAppOpEnabled())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_CREATE_ACCESSIBILITY_OVERLAY_APP_OP_ENABLED) to transfer requirement to caller`)\"\n        errorLine1=\"                OPSTR_CREATE_ACCESSIBILITY_OVERLAY,\"\n        errorLine2=\"                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/app/AppOpsManager.java\"\n            line=\"3050\"\n            column=\"17\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `OPSTR_MEDIA_ROUTING_CONTROL` is a flagged API and should be inside an `if (Flags.enablePrivilegedRoutingForMediaRoutingControl())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_ENABLE_PRIVILEGED_ROUTING_FOR_MEDIA_ROUTING_CONTROL) to transfer requirement to caller`)\"\n        errorLine1=\"        new AppOpInfo.Builder(OP_MEDIA_ROUTING_CONTROL, OPSTR_MEDIA_ROUTING_CONTROL,\"\n        errorLine2=\"                                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/app/AppOpsManager.java\"\n            line=\"3053\"\n            column=\"57\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `OPSTR_ENABLE_MOBILE_DATA_BY_USER` is a flagged API and should be inside an `if (Flags.opEnableMobileDataByUser())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_OP_ENABLE_MOBILE_DATA_BY_USER) to transfer requirement to caller`)\"\n        errorLine1=\"        new AppOpInfo.Builder(OP_ENABLE_MOBILE_DATA_BY_USER, OPSTR_ENABLE_MOBILE_DATA_BY_USER,\"\n        errorLine2=\"                                                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/app/AppOpsManager.java\"\n            line=\"3056\"\n            column=\"62\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `OPSTR_RAPID_CLEAR_NOTIFICATIONS_BY_LISTENER` is a flagged API and should be inside an `if (Flags.rapidClearNotificationsByListenerAppOpEnabled())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_RAPID_CLEAR_NOTIFICATIONS_BY_LISTENER_APP_OP_ENABLED) to transfer requirement to caller`)\"\n        errorLine1=\"                OPSTR_RAPID_CLEAR_NOTIFICATIONS_BY_LISTENER,\"\n        errorLine2=\"                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/app/AppOpsManager.java\"\n            line=\"3061\"\n            column=\"17\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `OPSTR_EMERGENCY_LOCATION` is a flagged API and should be inside an `if (Flags.locationBypass())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_LOCATION_BYPASS) to transfer requirement to caller`)\"\n        errorLine1=\"        new AppOpInfo.Builder(OP_EMERGENCY_LOCATION, OPSTR_EMERGENCY_LOCATION, &quot;EMERGENCY_LOCATION&quot;)\"\n        errorLine2=\"                                                     ~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/app/AppOpsManager.java\"\n            line=\"3077\"\n            column=\"54\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `OPSTR_RECEIVE_SENSITIVE_NOTIFICATIONS` is a flagged API and should be inside an `if (Flags.redactSensitiveNotificationsFromUntrustedListeners())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_REDACT_SENSITIVE_NOTIFICATIONS_FROM_UNTRUSTED_LISTENERS) to transfer requirement to caller`)\"\n        errorLine1=\"                OPSTR_RECEIVE_SENSITIVE_NOTIFICATIONS, &quot;RECEIVE_SENSITIVE_NOTIFICATIONS&quot;)\"\n        errorLine2=\"                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/app/AppOpsManager.java\"\n            line=\"3083\"\n            column=\"17\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `PERSISTENT_DEVICE_ID_DEFAULT` is a flagged API and should be inside an `if (Flags.persistentDeviceIdApi())` check (or annotate the surrounding method `OpEventProxyInfo` with `@FlaggedApi(Flags.FLAG_PERSISTENT_DEVICE_ID_API) to transfer requirement to caller`)\"\n        errorLine1=\"                    VirtualDeviceManager.PERSISTENT_DEVICE_ID_DEFAULT);\"\n        errorLine2=\"                                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/app/AppOpsManager.java\"\n            line=\"3550\"\n            column=\"42\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `PERSISTENT_DEVICE_ID_DEFAULT` is a flagged API and should be inside an `if (Flags.persistentDeviceIdApi())` check (or annotate the surrounding method `onOpChanged` with `@FlaggedApi(Flags.FLAG_PERSISTENT_DEVICE_ID_API) to transfer requirement to caller`)\"\n        errorLine1=\"                    VirtualDeviceManager.PERSISTENT_DEVICE_ID_DEFAULT)) {\"\n        errorLine2=\"                                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/app/AppOpsManager.java\"\n            line=\"7483\"\n            column=\"42\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `PERSISTENT_DEVICE_ID_DEFAULT` is a flagged API and should be inside an `if (Flags.persistentDeviceIdApi())` check (or annotate the surrounding method `getPackagesForOps` with `@FlaggedApi(Flags.FLAG_PERSISTENT_DEVICE_ID_API) to transfer requirement to caller`)\"\n        errorLine1=\"                    VirtualDeviceManager.PERSISTENT_DEVICE_ID_DEFAULT);\"\n        errorLine2=\"                                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/app/AppOpsManager.java\"\n            line=\"7891\"\n            column=\"42\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `getDeviceId()` is a flagged API and should be inside an `if (Flags.deviceAwarePermissionApisEnabled())` check (or annotate the surrounding method `unsafeCheckOpRawNoThrow` with `@FlaggedApi(Flags.FLAG_DEVICE_AWARE_PERMISSION_APIS_ENABLED) to transfer requirement to caller`)\"\n        errorLine1=\"                attributionSource.getPackageName(), attributionSource.getDeviceId());\"\n        errorLine2=\"                                                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/app/AppOpsManager.java\"\n            line=\"8848\"\n            column=\"53\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `getDeviceId()` is a flagged API and should be inside an `if (Flags.deviceAwarePermissionApisEnabled())` check (or annotate the surrounding method `noteOpNoThrow` with `@FlaggedApi(Flags.FLAG_DEVICE_AWARE_PERMISSION_APIS_ENABLED) to transfer requirement to caller`)\"\n        errorLine1=\"                attributionSource.getAttributionTag(), attributionSource.getDeviceId(), message);\"\n        errorLine2=\"                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/app/AppOpsManager.java\"\n            line=\"9034\"\n            column=\"56\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `getDeviceId()` is a flagged API and should be inside an `if (Flags.deviceAwarePermissionApisEnabled())` check (or annotate the surrounding method `checkOpNoThrow` with `@FlaggedApi(Flags.FLAG_DEVICE_AWARE_PERMISSION_APIS_ENABLED) to transfer requirement to caller`)\"\n        errorLine1=\"                attributionSource.getDeviceId());\"\n        errorLine2=\"                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/app/AppOpsManager.java\"\n            line=\"9329\"\n            column=\"17\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `getDeviceId()` is a flagged API and should be inside an `if (Flags.deviceAwarePermissionApisEnabled())` check (or annotate the surrounding method `startOpNoThrow` with `@FlaggedApi(Flags.FLAG_DEVICE_AWARE_PERMISSION_APIS_ENABLED) to transfer requirement to caller`)\"\n        errorLine1=\"                attributionSource.getAttributionTag(), attributionSource.getDeviceId(),\"\n        errorLine2=\"                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/app/AppOpsManager.java\"\n            line=\"9589\"\n            column=\"56\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `getDeviceId()` is a flagged API and should be inside an `if (Flags.deviceAwarePermissionApisEnabled())` check (or annotate the surrounding method `finishOp` with `@FlaggedApi(Flags.FLAG_DEVICE_AWARE_PERMISSION_APIS_ENABLED) to transfer requirement to caller`)\"\n        errorLine1=\"                attributionSource.getDeviceId());\"\n        errorLine2=\"                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/app/AppOpsManager.java\"\n            line=\"9842\"\n            column=\"17\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `EXTRA_REQUEST_PERMISSIONS_DEVICE_ID` is a flagged API and should be inside an `if (Flags.deviceAwarePermissionApisEnabled())` check (or annotate the surrounding method `buildRequestPermissionsIntent` with `@FlaggedApi(Flags.FLAG_DEVICE_AWARE_PERMISSION_APIS_ENABLED) to transfer requirement to caller`)\"\n        errorLine1=\"        intent.putExtra(EXTRA_REQUEST_PERMISSIONS_DEVICE_ID, mContext.getDeviceId());\"\n        errorLine2=\"                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/app/ApplicationPackageManager.java\"\n            line=\"965\"\n            column=\"25\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `APP_METADATA_SOURCE_UNKNOWN` is a flagged API and should be inside an `if (Flags.aslInApkAppMetadataSource())` check (or annotate the surrounding method `getAppMetadataSource` with `@FlaggedApi(Flags.FLAG_ASL_IN_APK_APP_METADATA_SOURCE) to transfer requirement to caller`)\"\n        errorLine1=\"        int source = PackageManager.APP_METADATA_SOURCE_UNKNOWN;\"\n        errorLine2=\"                                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/app/ApplicationPackageManager.java\"\n            line=\"1283\"\n            column=\"37\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `isArchived` is a flagged API and should be inside an `if (Flags.archiving())` check (or annotate the surrounding method `loadUnbadgedItemIcon` with `@FlaggedApi(Flags.FLAG_ARCHIVING) to transfer requirement to caller`)\"\n        errorLine1=\"            if (itemInfo.isArchived) {\"\n        errorLine2=\"                         ~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/app/ApplicationPackageManager.java\"\n            line=\"3430\"\n            column=\"26\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `ArchivedPackageInfo()` is a flagged API and should be inside an `if (Flags.archiving())` check (or annotate the surrounding method `getArchivedPackage` with `@FlaggedApi(Flags.FLAG_ARCHIVING) to transfer requirement to caller`)\"\n        errorLine1=\"            return new ArchivedPackageInfo(parcel);\"\n        errorLine2=\"                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/app/ApplicationPackageManager.java\"\n            line=\"3995\"\n            column=\"20\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `getPendingCredentialRequest()` is a flagged API and should be inside an `if (Flags.autofillCredmanDevIntegration())` check (or annotate the surrounding method `dump` with `@FlaggedApi(Flags.FLAG_AUTOFILL_CREDMAN_DEV_INTEGRATION) to transfer requirement to caller`)\"\n        errorLine1=\"        GetCredentialRequest getCredentialRequest = node.getPendingCredentialRequest();\"\n        errorLine2=\"                                                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/app/assist/AssistStructure.java\"\n            line=\"2657\"\n            column=\"53\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `AttributionSource()` is a flagged API and should be inside an `if (Flags.deviceAwarePermissionApisEnabled())` check (or annotate the surrounding method `AttributionSource` with `@FlaggedApi(Flags.FLAG_DEVICE_AWARE_PERMISSION_APIS_ENABLED) to transfer requirement to caller`)\"\n        errorLine1=\"        this(uid, Process.INVALID_PID, packageName, attributionTag, sDefaultToken, null,\"\n        errorLine2=\"        ^\">\n        <location\n            file=\"frameworks/base/core/java/android/content/AttributionSource.java\"\n            line=\"112\"\n            column=\"9\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `AttributionSource()` is a flagged API and should be inside an `if (Flags.deviceAwarePermissionApisEnabled())` check (or annotate the surrounding method `AttributionSource` with `@FlaggedApi(Flags.FLAG_DEVICE_AWARE_PERMISSION_APIS_ENABLED) to transfer requirement to caller`)\"\n        errorLine1=\"        this(uid, Process.INVALID_PID, packageName, attributionTag, token,\"\n        errorLine2=\"        ^\">\n        <location\n            file=\"frameworks/base/core/java/android/content/AttributionSource.java\"\n            line=\"126\"\n            column=\"9\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `AttributionSource()` is a flagged API and should be inside an `if (Flags.deviceAwarePermissionApisEnabled())` check (or annotate the surrounding method `AttributionSource` with `@FlaggedApi(Flags.FLAG_DEVICE_AWARE_PERMISSION_APIS_ENABLED) to transfer requirement to caller`)\"\n        errorLine1=\"        this(uid, pid, packageName, attributionTag, token, /*renouncedPermissions*/ null,\"\n        errorLine2=\"        ^\">\n        <location\n            file=\"frameworks/base/core/java/android/content/AttributionSource.java\"\n            line=\"133\"\n            column=\"9\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `AttributionSource()` is a flagged API and should be inside an `if (Flags.deviceAwarePermissionApisEnabled())` check (or annotate the surrounding method `AttributionSource` with `@FlaggedApi(Flags.FLAG_DEVICE_AWARE_PERMISSION_APIS_ENABLED) to transfer requirement to caller`)\"\n        errorLine1=\"        this(uid, Process.INVALID_PID, packageName, attributionTag, sDefaultToken,\"\n        errorLine2=\"        ^\">\n        <location\n            file=\"frameworks/base/core/java/android/content/AttributionSource.java\"\n            line=\"142\"\n            column=\"9\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `AttributionSource()` is a flagged API and should be inside an `if (Flags.deviceAwarePermissionApisEnabled())` check (or annotate the surrounding method `AttributionSource` with `@FlaggedApi(Flags.FLAG_DEVICE_AWARE_PERMISSION_APIS_ENABLED) to transfer requirement to caller`)\"\n        errorLine1=\"        this(current.getUid(), current.getPid(), current.getPackageName(),\"\n        errorLine2=\"        ^\">\n        <location\n            file=\"frameworks/base/core/java/android/content/AttributionSource.java\"\n            line=\"150\"\n            column=\"9\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `getDeviceId()` is a flagged API and should be inside an `if (Flags.deviceAwarePermissionApisEnabled())` check (or annotate the surrounding method `AttributionSource` with `@FlaggedApi(Flags.FLAG_DEVICE_AWARE_PERMISSION_APIS_ENABLED) to transfer requirement to caller`)\"\n        errorLine1=\"                current.mAttributionSourceState.renouncedPermissions, current.getDeviceId(), next);\"\n        errorLine2=\"                                                                      ~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/content/AttributionSource.java\"\n            line=\"152\"\n            column=\"71\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `AttributionSource()` is a flagged API and should be inside an `if (Flags.deviceAwarePermissionApisEnabled())` check (or annotate the surrounding method `AttributionSource` with `@FlaggedApi(Flags.FLAG_DEVICE_AWARE_PERMISSION_APIS_ENABLED) to transfer requirement to caller`)\"\n        errorLine1=\"        this(uid, pid, packageName, attributionTag, sDefaultToken, renouncedPermissions, deviceId,\"\n        errorLine2=\"        ^\">\n        <location\n            file=\"frameworks/base/core/java/android/content/AttributionSource.java\"\n            line=\"159\"\n            column=\"9\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `AttributionSource()` is a flagged API and should be inside an `if (Flags.deviceAwarePermissionApisEnabled())` check (or annotate the surrounding method `withNextAttributionSource` with `@FlaggedApi(Flags.FLAG_DEVICE_AWARE_PERMISSION_APIS_ENABLED) to transfer requirement to caller`)\"\n        errorLine1=\"        return new AttributionSource(getUid(), getPid(), getPackageName(), getAttributionTag(),\"\n        errorLine2=\"               ^\">\n        <location\n            file=\"frameworks/base/core/java/android/content/AttributionSource.java\"\n            line=\"212\"\n            column=\"16\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `getDeviceId()` is a flagged API and should be inside an `if (Flags.deviceAwarePermissionApisEnabled())` check (or annotate the surrounding method `withNextAttributionSource` with `@FlaggedApi(Flags.FLAG_DEVICE_AWARE_PERMISSION_APIS_ENABLED) to transfer requirement to caller`)\"\n        errorLine1=\"                getToken(), mAttributionSourceState.renouncedPermissions, getDeviceId(), next);\"\n        errorLine2=\"                                                                          ~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/content/AttributionSource.java\"\n            line=\"213\"\n            column=\"75\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `AttributionSource()` is a flagged API and should be inside an `if (Flags.deviceAwarePermissionApisEnabled())` check (or annotate the surrounding method `withPackageName` with `@FlaggedApi(Flags.FLAG_DEVICE_AWARE_PERMISSION_APIS_ENABLED) to transfer requirement to caller`)\"\n        errorLine1=\"        return new AttributionSource(getUid(), getPid(), packageName, getAttributionTag(),\"\n        errorLine2=\"               ^\">\n        <location\n            file=\"frameworks/base/core/java/android/content/AttributionSource.java\"\n            line=\"218\"\n            column=\"16\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `getDeviceId()` is a flagged API and should be inside an `if (Flags.deviceAwarePermissionApisEnabled())` check (or annotate the surrounding method `withPackageName` with `@FlaggedApi(Flags.FLAG_DEVICE_AWARE_PERMISSION_APIS_ENABLED) to transfer requirement to caller`)\"\n        errorLine1=\"               getToken(), mAttributionSourceState.renouncedPermissions, getDeviceId(), getNext());\"\n        errorLine2=\"                                                                         ~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/content/AttributionSource.java\"\n            line=\"219\"\n            column=\"74\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `AttributionSource()` is a flagged API and should be inside an `if (Flags.deviceAwarePermissionApisEnabled())` check (or annotate the surrounding method `withToken` with `@FlaggedApi(Flags.FLAG_DEVICE_AWARE_PERMISSION_APIS_ENABLED) to transfer requirement to caller`)\"\n        errorLine1=\"        return new AttributionSource(getUid(), getPid(), getPackageName(), getAttributionTag(),\"\n        errorLine2=\"               ^\">\n        <location\n            file=\"frameworks/base/core/java/android/content/AttributionSource.java\"\n            line=\"224\"\n            column=\"16\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `getDeviceId()` is a flagged API and should be inside an `if (Flags.deviceAwarePermissionApisEnabled())` check (or annotate the surrounding method `withToken` with `@FlaggedApi(Flags.FLAG_DEVICE_AWARE_PERMISSION_APIS_ENABLED) to transfer requirement to caller`)\"\n        errorLine1=\"                token, mAttributionSourceState.renouncedPermissions, getDeviceId(), getNext());\"\n        errorLine2=\"                                                                     ~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/content/AttributionSource.java\"\n            line=\"225\"\n            column=\"70\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `AttributionSource()` is a flagged API and should be inside an `if (Flags.deviceAwarePermissionApisEnabled())` check (or annotate the surrounding method `withPid` with `@FlaggedApi(Flags.FLAG_DEVICE_AWARE_PERMISSION_APIS_ENABLED) to transfer requirement to caller`)\"\n        errorLine1=\"        return new AttributionSource(getUid(), pid, getPackageName(), getAttributionTag(),\"\n        errorLine2=\"               ^\">\n        <location\n            file=\"frameworks/base/core/java/android/content/AttributionSource.java\"\n            line=\"235\"\n            column=\"16\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `getDeviceId()` is a flagged API and should be inside an `if (Flags.deviceAwarePermissionApisEnabled())` check (or annotate the surrounding method `withPid` with `@FlaggedApi(Flags.FLAG_DEVICE_AWARE_PERMISSION_APIS_ENABLED) to transfer requirement to caller`)\"\n        errorLine1=\"                getToken(), mAttributionSourceState.renouncedPermissions, getDeviceId(), getNext());\"\n        errorLine2=\"                                                                          ~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/content/AttributionSource.java\"\n            line=\"236\"\n            column=\"75\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `AttributionSource()` is a flagged API and should be inside an `if (Flags.deviceAwarePermissionApisEnabled())` check (or annotate the surrounding method `withDeviceId` with `@FlaggedApi(Flags.FLAG_DEVICE_AWARE_PERMISSION_APIS_ENABLED) to transfer requirement to caller`)\"\n        errorLine1=\"        return new AttributionSource(getUid(), getPid(), getPackageName(), getAttributionTag(),\"\n        errorLine2=\"               ^\">\n        <location\n            file=\"frameworks/base/core/java/android/content/AttributionSource.java\"\n            line=\"241\"\n            column=\"16\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `setDeviceId()` is a flagged API and should be inside an `if (Flags.deviceAwarePermissionApisEnabled())` check (or annotate the surrounding method `myAttributionSource` with `@FlaggedApi(Flags.FLAG_DEVICE_AWARE_PERMISSION_APIS_ENABLED) to transfer requirement to caller`)\"\n        errorLine1=\"            return new AttributionSource.Builder(uid)\"\n        errorLine2=\"                   ^\">\n        <location\n            file=\"frameworks/base/core/java/android/content/AttributionSource.java\"\n            line=\"284\"\n            column=\"20\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `isRegisteredAttributionSource()` is a flagged API and should be inside an `if (Flags.shouldRegisterAttributionSource())` check (or annotate the surrounding method `isTrusted` with `@FlaggedApi(Flags.FLAG_SHOULD_REGISTER_ATTRIBUTION_SOURCE) to transfer requirement to caller`)\"\n        errorLine1=\"                &amp;&amp; context.getSystemService(PermissionManager.class)\"\n        errorLine2=\"                   ^\">\n        <location\n            file=\"frameworks/base/core/java/android/content/AttributionSource.java\"\n            line=\"487\"\n            column=\"20\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `isResumed()` is a flagged API and should be inside an `if (Flags.enableNfcMainline())` check (or annotate the surrounding method `isDisablingEnterExitEventForAutofill` with `@FlaggedApi(Flags.FLAG_ENABLE_NFC_MAINLINE) to transfer requirement to caller`)\"\n        errorLine1=\"        return mAutoFillIgnoreFirstResumePause || !mActivity.isResumed();\"\n        errorLine2=\"                                                   ~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/view/autofill/AutofillClientController.java\"\n            line=\"473\"\n            column=\"52\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `FIELD_NAME` is a flagged API and should be inside an `if (Flags.modesApi())` check (or annotate the surrounding method `fieldsToString` with `@FlaggedApi(Flags.FLAG_MODES_API) to transfer requirement to caller`)\"\n        errorLine1=\"        if ((bitmask &amp; FIELD_NAME) != 0) {\"\n        errorLine2=\"                       ~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/app/AutomaticZenRule.java\"\n            line=\"582\"\n            column=\"24\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `FIELD_INTERRUPTION_FILTER` is a flagged API and should be inside an `if (Flags.modesApi())` check (or annotate the surrounding method `fieldsToString` with `@FlaggedApi(Flags.FLAG_MODES_API) to transfer requirement to caller`)\"\n        errorLine1=\"        if ((bitmask &amp; FIELD_INTERRUPTION_FILTER) != 0) {\"\n        errorLine2=\"                       ~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/app/AutomaticZenRule.java\"\n            line=\"585\"\n            column=\"24\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `FIELD_ICON` is a flagged API and should be inside an `if (Flags.modesApi())` check (or annotate the surrounding method `fieldsToString` with `@FlaggedApi(Flags.FLAG_MODES_API) to transfer requirement to caller`)\"\n        errorLine1=\"        if ((bitmask &amp; FIELD_ICON) != 0) {\"\n        errorLine2=\"                       ~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/app/AutomaticZenRule.java\"\n            line=\"588\"\n            column=\"24\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `getFrameTimeNanos()` is a flagged API and should be inside an `if (Flags.expectedPresentationTimeApi())` check (or annotate the surrounding method `run` with `@FlaggedApi(Flags.FLAG_EXPECTED_PRESENTATION_TIME_API) to transfer requirement to caller`)\"\n        errorLine1=\"                doConsumeBatchedInput(mChoreographer.getFrameTimeNanos());\"\n        errorLine2=\"                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/view/BatchedInputEventReceiver.java\"\n            line=\"130\"\n            column=\"39\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `Gainmap()` is a flagged API and should be inside an `if (Flags.gainmapConstructorWithMetadata())` check (or annotate the surrounding method `createBitmap` with `@FlaggedApi(Flags.FLAG_GAINMAP_CONSTRUCTOR_WITH_METADATA) to transfer requirement to caller`)\"\n        errorLine1=\"                bitmap.setGainmap(new Gainmap(source.getGainmap(), newMapContents));\"\n        errorLine2=\"                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/graphics/java/android/graphics/Bitmap.java\"\n            line=\"1030\"\n            column=\"35\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `Gainmap()` is a flagged API and should be inside an `if (Flags.gainmapConstructorWithMetadata())` check (or annotate the surrounding method `setOverrideGainmap` with `@FlaggedApi(Flags.FLAG_GAINMAP_CONSTRUCTOR_WITH_METADATA) to transfer requirement to caller`)\"\n        errorLine1=\"            mOverrideGainmap = new Gainmap(overrideGainmap, overrideGainmap.getGainmapContents());\"\n        errorLine2=\"                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/graphics/java/android/graphics/BitmapShader.java\"\n            line=\"193\"\n            column=\"32\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `set()` is a flagged API and should be inside an `if (Flags.fixLineHeightForLocale())` check (or annotate the surrounding method `isBoring` with `@FlaggedApi(Flags.FLAG_FIX_LINE_HEIGHT_FOR_LOCALE) to transfer requirement to caller`)\"\n        errorLine1=\"                fm.set(minimumFontMetrics);\"\n        errorLine2=\"                ~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/text/BoringLayout.java\"\n            line=\"594\"\n            column=\"17\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `getUseBoundsForWidth()` is a flagged API and should be inside an `if (Flags.useBoundsForWidth())` check (or annotate the surrounding method `getLineMax` with `@FlaggedApi(Flags.FLAG_USE_BOUNDS_FOR_WIDTH) to transfer requirement to caller`)\"\n        errorLine1=\"        if (getUseBoundsForWidth()) {\"\n        errorLine2=\"            ~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/text/BoringLayout.java\"\n            line=\"658\"\n            column=\"13\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `getUseBoundsForWidth()` is a flagged API and should be inside an `if (Flags.useBoundsForWidth())` check (or annotate the surrounding method `getLineWidth` with `@FlaggedApi(Flags.FLAG_USE_BOUNDS_FOR_WIDTH) to transfer requirement to caller`)\"\n        errorLine1=\"        if (getUseBoundsForWidth()) {\"\n        errorLine2=\"            ~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/text/BoringLayout.java\"\n            line=\"667\"\n            column=\"13\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `getShiftDrawingOffsetForStartOverhang()` is a flagged API and should be inside an `if (Flags.useBoundsForWidth())` check (or annotate the surrounding method `draw` with `@FlaggedApi(Flags.FLAG_USE_BOUNDS_FOR_WIDTH) to transfer requirement to caller`)\"\n        errorLine1=\"            if (getUseBoundsForWidth() &amp;&amp; getShiftDrawingOffsetForStartOverhang()) {\"\n        errorLine2=\"                                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/text/BoringLayout.java\"\n            line=\"720\"\n            column=\"43\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `getUseBoundsForWidth()` is a flagged API and should be inside an `if (Flags.useBoundsForWidth())` check (or annotate the surrounding method `draw` with `@FlaggedApi(Flags.FLAG_USE_BOUNDS_FOR_WIDTH) to transfer requirement to caller`)\"\n        errorLine1=\"            if (getUseBoundsForWidth() &amp;&amp; getShiftDrawingOffsetForStartOverhang()) {\"\n        errorLine2=\"                ~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/text/BoringLayout.java\"\n            line=\"720\"\n            column=\"17\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `createFromParcelBody()` is a flagged API and should be inside an `if (Flags.tiafVApis())` check (or annotate the surrounding method `createFromParcel` with `@FlaggedApi(Flags.FLAG_TIAF_V_APIS) to transfer requirement to caller`)\"\n        errorLine1=\"                            return SignalingDataRequest.createFromParcelBody(source);\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/media/java/android/media/tv/BroadcastInfoRequest.java\"\n            line=\"89\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `createFromParcelBody()` is a flagged API and should be inside an `if (Flags.tiafVApis())` check (or annotate the surrounding method `createFromParcel` with `@FlaggedApi(Flags.FLAG_TIAF_V_APIS) to transfer requirement to caller`)\"\n        errorLine1=\"                            return SignalingDataResponse.createFromParcelBody(source);\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/media/java/android/media/tv/BroadcastInfoResponse.java\"\n            line=\"75\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `BUGREPORT_MODE_ONBOARDING` is a flagged API and should be inside an `if (Flags.onboardingBugreportV2Enabled())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_ONBOARDING_BUGREPORT_V2_ENABLED) to transfer requirement to caller`)\"\n        errorLine1=\"    public static final int BUGREPORT_MODE_MAX_VALUE = BUGREPORT_MODE_ONBOARDING;\"\n        errorLine2=\"                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/os/BugreportParams.java\"\n            line=\"139\"\n            column=\"56\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `PROPERTY_IS_TRANSACTIONAL` is a flagged API and should be inside an `if (Flags.voipAppActionsSupport())` check (or annotate the surrounding method `propertiesToString` with `@FlaggedApi(Flags.FLAG_VOIP_APP_ACTIONS_SUPPORT) to transfer requirement to caller`)\"\n        errorLine1=\"            if (hasProperty(properties, PROPERTY_IS_TRANSACTIONAL)) {\"\n        errorLine2=\"                                        ~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/telecomm/java/android/telecom/Call.java\"\n            line=\"854\"\n            column=\"41\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `getImsReasonInfo()` is a flagged API and should be inside an `if (Flags.telecomResolveHiddenDependencies())` check (or annotate the surrounding method `handleCallDisconnected` with `@FlaggedApi(Flags.FLAG_TELECOM_RESOLVE_HIDDEN_DEPENDENCIES) to transfer requirement to caller`)\"\n        errorLine1=\"        if (disconnectCause.getImsReasonInfo() != null) {\"\n        errorLine2=\"            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/telecomm/java/android/telecom/CallDiagnosticService.java\"\n            line=\"365\"\n            column=\"13\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `getImsReasonInfo()` is a flagged API and should be inside an `if (Flags.telecomResolveHiddenDependencies())` check (or annotate the surrounding method `handleCallDisconnected` with `@FlaggedApi(Flags.FLAG_TELECOM_RESOLVE_HIDDEN_DEPENDENCIES) to transfer requirement to caller`)\"\n        errorLine1=\"            message = callDiagnostics.onCallDisconnected(disconnectCause.getImsReasonInfo());\"\n        errorLine2=\"                                                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/telecomm/java/android/telecom/CallDiagnosticService.java\"\n            line=\"366\"\n            column=\"58\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `getTelephonyDisconnectCause()` is a flagged API and should be inside an `if (Flags.telecomResolveHiddenDependencies())` check (or annotate the surrounding method `handleCallDisconnected` with `@FlaggedApi(Flags.FLAG_TELECOM_RESOLVE_HIDDEN_DEPENDENCIES) to transfer requirement to caller`)\"\n        errorLine1=\"                    disconnectCause.getTelephonyDisconnectCause(),\"\n        errorLine2=\"                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/telecomm/java/android/telecom/CallDiagnosticService.java\"\n            line=\"369\"\n            column=\"21\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `getTelephonyPreciseDisconnectCause()` is a flagged API and should be inside an `if (Flags.telecomResolveHiddenDependencies())` check (or annotate the surrounding method `handleCallDisconnected` with `@FlaggedApi(Flags.FLAG_TELECOM_RESOLVE_HIDDEN_DEPENDENCIES) to transfer requirement to caller`)\"\n        errorLine1=\"                    disconnectCause.getTelephonyPreciseDisconnectCause());\"\n        errorLine2=\"                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/telecomm/java/android/telecom/CallDiagnosticService.java\"\n            line=\"370\"\n            column=\"21\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `POLICY_TYPE_CAMERA` is a flagged API and should be inside an `if (Flags.virtualCamera())` check (or annotate the surrounding method `getDevicePolicyFromContext` with `@FlaggedApi(Flags.FLAG_VIRTUAL_CAMERA) to transfer requirement to caller`)\"\n        errorLine1=\"        return virtualDeviceManager.getDevicePolicy(context.getDeviceId(), POLICY_TYPE_CAMERA);\"\n        errorLine2=\"                                                                           ~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/hardware/Camera.java\"\n            line=\"350\"\n            column=\"76\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `FALLBACK_PACKAGE_NAME` is a flagged API and should be inside an `if (Flags.concertMode())` check (or annotate the surrounding method `onSuccess` with `@FlaggedApi(Flags.FLAG_CONCERT_MODE) to transfer requirement to caller`)\"\n        errorLine1=\"                        .getString(FALLBACK_PACKAGE_NAME);\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/hardware/camera2/CameraExtensionCharacteristics.java\"\n            line=\"591\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `POLICY_TYPE_CAMERA` is a flagged API and should be inside an `if (Flags.virtualCamera())` check (or annotate the surrounding method `getDevicePolicyFromContext` with `@FlaggedApi(Flags.FLAG_VIRTUAL_CAMERA) to transfer requirement to caller`)\"\n        errorLine1=\"        return mVirtualDeviceManager.getDevicePolicy(context.getDeviceId(), POLICY_TYPE_CAMERA);\"\n        errorLine2=\"                                                                            ~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/hardware/camera2/CameraManager.java\"\n            line=\"584\"\n            column=\"77\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `CameraDeviceSetupImpl()` is a flagged API and should be inside an `if (Flags.cameraDeviceSetup())` check (or annotate the surrounding method `getCameraDeviceSetupUnsafe` with `@FlaggedApi(Flags.FLAG_CAMERA_DEVICE_SETUP) to transfer requirement to caller`)\"\n        errorLine1=\"        return new CameraDeviceSetupImpl(cameraId, /*cameraManager=*/ this, mContext);\"\n        errorLine2=\"               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/hardware/camera2/CameraManager.java\"\n            line=\"903\"\n            column=\"16\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `isCameraDeviceSetupSupported()` is a flagged API and should be inside an `if (Flags.cameraDeviceSetup())` check (or annotate the surrounding method `openCameraDeviceUserAsync` with `@FlaggedApi(Flags.FLAG_CAMERA_DEVICE_SETUP) to transfer requirement to caller`)\"\n        errorLine1=\"                    &amp;&amp; CameraDeviceSetupImpl.isCameraDeviceSetupSupported(characteristics)) {\"\n        errorLine2=\"                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/hardware/camera2/CameraManager.java\"\n            line=\"983\"\n            column=\"24\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Class `DeviceStateManager` is a flagged API and should be inside an `if (Flags.deviceStatePropertyApi())` check (or annotate the surrounding method `registerDeviceStateListener` with `@FlaggedApi(Flags.FLAG_DEVICE_STATE_PROPERTY_API) to transfer requirement to caller`)\"\n        errorLine1=\"                        ctx.getSystemService(DeviceStateManager.class).registerCallback(\"\n        errorLine2=\"                                             ~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/hardware/camera2/CameraManager.java\"\n            line=\"2141\"\n            column=\"46\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `registerCallback()` is a flagged API and should be inside an `if (Flags.deviceStatePropertyApi())` check (or annotate the surrounding method `registerDeviceStateListener` with `@FlaggedApi(Flags.FLAG_DEVICE_STATE_PROPERTY_API) to transfer requirement to caller`)\"\n        errorLine1=\"                        ctx.getSystemService(DeviceStateManager.class).registerCallback(\"\n        errorLine2=\"                        ^\">\n        <location\n            file=\"frameworks/base/core/java/android/hardware/camera2/CameraManager.java\"\n            line=\"2141\"\n            column=\"25\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `STATISTICS_LENS_INTRINSICS_SAMPLES` is a flagged API and should be inside an `if (Flags.concertMode())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_CONCERT_MODE) to transfer requirement to caller`)\"\n        errorLine1=\"                CaptureResult.STATISTICS_LENS_INTRINSICS_SAMPLES.getNativeKey(),\"\n        errorLine2=\"                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/hardware/camera2/impl/CameraMetadataNative.java\"\n            line=\"856\"\n            column=\"31\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `STATISTICS_LENS_INTRINSICS_SAMPLES` is a flagged API and should be inside an `if (Flags.concertMode())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_CONCERT_MODE) to transfer requirement to caller`)\"\n        errorLine1=\"                CaptureResult.STATISTICS_LENS_INTRINSICS_SAMPLES.getNativeKey(),\"\n        errorLine2=\"                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/hardware/camera2/impl/CameraMetadataNative.java\"\n            line=\"2021\"\n            column=\"31\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `KEY_EMERGENCY_OVER_IMS_SUPPORTED_3GPP_NETWORK_TYPES_INT_ARRAY` is a flagged API and should be inside an `if (Flags.useOemDomainSelectionService())` check (or annotate the surrounding method `getDefaults` with `@FlaggedApi(Flags.FLAG_USE_OEM_DOMAIN_SELECTION_SERVICE) to transfer requirement to caller`)\"\n        errorLine1=\"                    KEY_EMERGENCY_OVER_IMS_SUPPORTED_3GPP_NETWORK_TYPES_INT_ARRAY,\"\n        errorLine2=\"                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java\"\n            line=\"8054\"\n            column=\"21\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `KEY_EMERGENCY_OVER_IMS_ROAMING_SUPPORTED_3GPP_NETWORK_TYPES_INT_ARRAY` is a flagged API and should be inside an `if (Flags.useOemDomainSelectionService())` check (or annotate the surrounding method `getDefaults` with `@FlaggedApi(Flags.FLAG_USE_OEM_DOMAIN_SELECTION_SERVICE) to transfer requirement to caller`)\"\n        errorLine1=\"                    KEY_EMERGENCY_OVER_IMS_ROAMING_SUPPORTED_3GPP_NETWORK_TYPES_INT_ARRAY,\"\n        errorLine2=\"                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java\"\n            line=\"8060\"\n            column=\"21\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `KEY_EMERGENCY_OVER_CS_SUPPORTED_ACCESS_NETWORK_TYPES_INT_ARRAY` is a flagged API and should be inside an `if (Flags.useOemDomainSelectionService())` check (or annotate the surrounding method `getDefaults` with `@FlaggedApi(Flags.FLAG_USE_OEM_DOMAIN_SELECTION_SERVICE) to transfer requirement to caller`)\"\n        errorLine1=\"                    KEY_EMERGENCY_OVER_CS_SUPPORTED_ACCESS_NETWORK_TYPES_INT_ARRAY,\"\n        errorLine2=\"                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java\"\n            line=\"8066\"\n            column=\"21\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `KEY_EMERGENCY_OVER_CS_ROAMING_SUPPORTED_ACCESS_NETWORK_TYPES_INT_ARRAY` is a flagged API and should be inside an `if (Flags.useOemDomainSelectionService())` check (or annotate the surrounding method `getDefaults` with `@FlaggedApi(Flags.FLAG_USE_OEM_DOMAIN_SELECTION_SERVICE) to transfer requirement to caller`)\"\n        errorLine1=\"                    KEY_EMERGENCY_OVER_CS_ROAMING_SUPPORTED_ACCESS_NETWORK_TYPES_INT_ARRAY,\"\n        errorLine2=\"                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java\"\n            line=\"8073\"\n            column=\"21\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `KEY_EMERGENCY_DOMAIN_PREFERENCE_INT_ARRAY` is a flagged API and should be inside an `if (Flags.useOemDomainSelectionService())` check (or annotate the surrounding method `getDefaults` with `@FlaggedApi(Flags.FLAG_USE_OEM_DOMAIN_SELECTION_SERVICE) to transfer requirement to caller`)\"\n        errorLine1=\"            defaults.putIntArray(KEY_EMERGENCY_DOMAIN_PREFERENCE_INT_ARRAY,\"\n        errorLine2=\"                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java\"\n            line=\"8079\"\n            column=\"34\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `DOMAIN_PS_3GPP` is a flagged API and should be inside an `if (Flags.useOemDomainSelectionService())` check (or annotate the surrounding method `getDefaults` with `@FlaggedApi(Flags.FLAG_USE_OEM_DOMAIN_SELECTION_SERVICE) to transfer requirement to caller`)\"\n        errorLine1=\"                        DOMAIN_PS_3GPP,\"\n        errorLine2=\"                        ~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java\"\n            line=\"8081\"\n            column=\"25\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `DOMAIN_CS` is a flagged API and should be inside an `if (Flags.useOemDomainSelectionService())` check (or annotate the surrounding method `getDefaults` with `@FlaggedApi(Flags.FLAG_USE_OEM_DOMAIN_SELECTION_SERVICE) to transfer requirement to caller`)\"\n        errorLine1=\"                        DOMAIN_CS,\"\n        errorLine2=\"                        ~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java\"\n            line=\"8082\"\n            column=\"25\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `DOMAIN_PS_NON_3GPP` is a flagged API and should be inside an `if (Flags.useOemDomainSelectionService())` check (or annotate the surrounding method `getDefaults` with `@FlaggedApi(Flags.FLAG_USE_OEM_DOMAIN_SELECTION_SERVICE) to transfer requirement to caller`)\"\n        errorLine1=\"                        DOMAIN_PS_NON_3GPP\"\n        errorLine2=\"                        ~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java\"\n            line=\"8083\"\n            column=\"25\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `KEY_EMERGENCY_DOMAIN_PREFERENCE_ROAMING_INT_ARRAY` is a flagged API and should be inside an `if (Flags.useOemDomainSelectionService())` check (or annotate the surrounding method `getDefaults` with `@FlaggedApi(Flags.FLAG_USE_OEM_DOMAIN_SELECTION_SERVICE) to transfer requirement to caller`)\"\n        errorLine1=\"            defaults.putIntArray(KEY_EMERGENCY_DOMAIN_PREFERENCE_ROAMING_INT_ARRAY,\"\n        errorLine2=\"                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java\"\n            line=\"8085\"\n            column=\"34\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `DOMAIN_PS_3GPP` is a flagged API and should be inside an `if (Flags.useOemDomainSelectionService())` check (or annotate the surrounding method `getDefaults` with `@FlaggedApi(Flags.FLAG_USE_OEM_DOMAIN_SELECTION_SERVICE) to transfer requirement to caller`)\"\n        errorLine1=\"                        DOMAIN_PS_3GPP,\"\n        errorLine2=\"                        ~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java\"\n            line=\"8087\"\n            column=\"25\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `DOMAIN_CS` is a flagged API and should be inside an `if (Flags.useOemDomainSelectionService())` check (or annotate the surrounding method `getDefaults` with `@FlaggedApi(Flags.FLAG_USE_OEM_DOMAIN_SELECTION_SERVICE) to transfer requirement to caller`)\"\n        errorLine1=\"                        DOMAIN_CS,\"\n        errorLine2=\"                        ~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java\"\n            line=\"8088\"\n            column=\"25\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `DOMAIN_PS_NON_3GPP` is a flagged API and should be inside an `if (Flags.useOemDomainSelectionService())` check (or annotate the surrounding method `getDefaults` with `@FlaggedApi(Flags.FLAG_USE_OEM_DOMAIN_SELECTION_SERVICE) to transfer requirement to caller`)\"\n        errorLine1=\"                        DOMAIN_PS_NON_3GPP\"\n        errorLine2=\"                        ~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java\"\n            line=\"8089\"\n            column=\"25\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `KEY_PREFER_IMS_EMERGENCY_WHEN_VOICE_CALLS_ON_CS_BOOL` is a flagged API and should be inside an `if (Flags.useOemDomainSelectionService())` check (or annotate the surrounding method `getDefaults` with `@FlaggedApi(Flags.FLAG_USE_OEM_DOMAIN_SELECTION_SERVICE) to transfer requirement to caller`)\"\n        errorLine1=\"            defaults.putBoolean(KEY_PREFER_IMS_EMERGENCY_WHEN_VOICE_CALLS_ON_CS_BOOL, false);\"\n        errorLine2=\"                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java\"\n            line=\"8092\"\n            column=\"33\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `KEY_EMERGENCY_VOWIFI_REQUIRES_CONDITION_INT` is a flagged API and should be inside an `if (Flags.useOemDomainSelectionService())` check (or annotate the surrounding method `getDefaults` with `@FlaggedApi(Flags.FLAG_USE_OEM_DOMAIN_SELECTION_SERVICE) to transfer requirement to caller`)\"\n        errorLine1=\"            defaults.putInt(KEY_EMERGENCY_VOWIFI_REQUIRES_CONDITION_INT, VOWIFI_REQUIRES_NONE);\"\n        errorLine2=\"                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java\"\n            line=\"8093\"\n            column=\"29\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `VOWIFI_REQUIRES_NONE` is a flagged API and should be inside an `if (Flags.useOemDomainSelectionService())` check (or annotate the surrounding method `getDefaults` with `@FlaggedApi(Flags.FLAG_USE_OEM_DOMAIN_SELECTION_SERVICE) to transfer requirement to caller`)\"\n        errorLine1=\"            defaults.putInt(KEY_EMERGENCY_VOWIFI_REQUIRES_CONDITION_INT, VOWIFI_REQUIRES_NONE);\"\n        errorLine2=\"                                                                         ~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java\"\n            line=\"8093\"\n            column=\"74\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `KEY_MAXIMUM_NUMBER_OF_EMERGENCY_TRIES_OVER_VOWIFI_INT` is a flagged API and should be inside an `if (Flags.useOemDomainSelectionService())` check (or annotate the surrounding method `getDefaults` with `@FlaggedApi(Flags.FLAG_USE_OEM_DOMAIN_SELECTION_SERVICE) to transfer requirement to caller`)\"\n        errorLine1=\"            defaults.putInt(KEY_MAXIMUM_NUMBER_OF_EMERGENCY_TRIES_OVER_VOWIFI_INT, 1);\"\n        errorLine2=\"                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java\"\n            line=\"8094\"\n            column=\"29\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `KEY_EMERGENCY_SCAN_TIMER_SEC_INT` is a flagged API and should be inside an `if (Flags.useOemDomainSelectionService())` check (or annotate the surrounding method `getDefaults` with `@FlaggedApi(Flags.FLAG_USE_OEM_DOMAIN_SELECTION_SERVICE) to transfer requirement to caller`)\"\n        errorLine1=\"            defaults.putInt(KEY_EMERGENCY_SCAN_TIMER_SEC_INT, 10);\"\n        errorLine2=\"                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java\"\n            line=\"8095\"\n            column=\"29\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `KEY_MAXIMUM_CELLULAR_SEARCH_TIMER_SEC_INT` is a flagged API and should be inside an `if (Flags.useOemDomainSelectionService())` check (or annotate the surrounding method `getDefaults` with `@FlaggedApi(Flags.FLAG_USE_OEM_DOMAIN_SELECTION_SERVICE) to transfer requirement to caller`)\"\n        errorLine1=\"            defaults.putInt(KEY_MAXIMUM_CELLULAR_SEARCH_TIMER_SEC_INT, REDIAL_TIMER_DISABLED);\"\n        errorLine2=\"                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java\"\n            line=\"8096\"\n            column=\"29\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `REDIAL_TIMER_DISABLED` is a flagged API and should be inside an `if (Flags.useOemDomainSelectionService())` check (or annotate the surrounding method `getDefaults` with `@FlaggedApi(Flags.FLAG_USE_OEM_DOMAIN_SELECTION_SERVICE) to transfer requirement to caller`)\"\n        errorLine1=\"            defaults.putInt(KEY_MAXIMUM_CELLULAR_SEARCH_TIMER_SEC_INT, REDIAL_TIMER_DISABLED);\"\n        errorLine2=\"                                                                       ~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java\"\n            line=\"8096\"\n            column=\"72\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `KEY_EMERGENCY_NETWORK_SCAN_TYPE_INT` is a flagged API and should be inside an `if (Flags.useOemDomainSelectionService())` check (or annotate the surrounding method `getDefaults` with `@FlaggedApi(Flags.FLAG_USE_OEM_DOMAIN_SELECTION_SERVICE) to transfer requirement to caller`)\"\n        errorLine1=\"            defaults.putInt(KEY_EMERGENCY_NETWORK_SCAN_TYPE_INT, SCAN_TYPE_NO_PREFERENCE);\"\n        errorLine2=\"                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java\"\n            line=\"8097\"\n            column=\"29\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `SCAN_TYPE_NO_PREFERENCE` is a flagged API and should be inside an `if (Flags.useOemDomainSelectionService())` check (or annotate the surrounding method `getDefaults` with `@FlaggedApi(Flags.FLAG_USE_OEM_DOMAIN_SELECTION_SERVICE) to transfer requirement to caller`)\"\n        errorLine1=\"            defaults.putInt(KEY_EMERGENCY_NETWORK_SCAN_TYPE_INT, SCAN_TYPE_NO_PREFERENCE);\"\n        errorLine2=\"                                                                 ~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java\"\n            line=\"8097\"\n            column=\"66\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `KEY_EMERGENCY_CALL_SETUP_TIMER_ON_CURRENT_NETWORK_SEC_INT` is a flagged API and should be inside an `if (Flags.useOemDomainSelectionService())` check (or annotate the surrounding method `getDefaults` with `@FlaggedApi(Flags.FLAG_USE_OEM_DOMAIN_SELECTION_SERVICE) to transfer requirement to caller`)\"\n        errorLine1=\"            defaults.putInt(KEY_EMERGENCY_CALL_SETUP_TIMER_ON_CURRENT_NETWORK_SEC_INT, 0);\"\n        errorLine2=\"                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java\"\n            line=\"8098\"\n            column=\"29\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `KEY_EMERGENCY_REQUIRES_IMS_REGISTRATION_BOOL` is a flagged API and should be inside an `if (Flags.useOemDomainSelectionService())` check (or annotate the surrounding method `getDefaults` with `@FlaggedApi(Flags.FLAG_USE_OEM_DOMAIN_SELECTION_SERVICE) to transfer requirement to caller`)\"\n        errorLine1=\"            defaults.putBoolean(KEY_EMERGENCY_REQUIRES_IMS_REGISTRATION_BOOL, false);\"\n        errorLine2=\"                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java\"\n            line=\"8099\"\n            column=\"33\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `KEY_EMERGENCY_LTE_PREFERRED_AFTER_NR_FAILED_BOOL` is a flagged API and should be inside an `if (Flags.useOemDomainSelectionService())` check (or annotate the surrounding method `getDefaults` with `@FlaggedApi(Flags.FLAG_USE_OEM_DOMAIN_SELECTION_SERVICE) to transfer requirement to caller`)\"\n        errorLine1=\"            defaults.putBoolean(KEY_EMERGENCY_LTE_PREFERRED_AFTER_NR_FAILED_BOOL, false);\"\n        errorLine2=\"                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java\"\n            line=\"8100\"\n            column=\"33\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `KEY_EMERGENCY_REQUIRES_VOLTE_ENABLED_BOOL` is a flagged API and should be inside an `if (Flags.useOemDomainSelectionService())` check (or annotate the surrounding method `getDefaults` with `@FlaggedApi(Flags.FLAG_USE_OEM_DOMAIN_SELECTION_SERVICE) to transfer requirement to caller`)\"\n        errorLine1=\"            defaults.putBoolean(KEY_EMERGENCY_REQUIRES_VOLTE_ENABLED_BOOL, false);\"\n        errorLine2=\"                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java\"\n            line=\"8101\"\n            column=\"33\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `KEY_EMERGENCY_CDMA_PREFERRED_NUMBERS_STRING_ARRAY` is a flagged API and should be inside an `if (Flags.useOemDomainSelectionService())` check (or annotate the surrounding method `getDefaults` with `@FlaggedApi(Flags.FLAG_USE_OEM_DOMAIN_SELECTION_SERVICE) to transfer requirement to caller`)\"\n        errorLine1=\"            defaults.putStringArray(KEY_EMERGENCY_CDMA_PREFERRED_NUMBERS_STRING_ARRAY,\"\n        errorLine2=\"                                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java\"\n            line=\"8102\"\n            column=\"37\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `KEY_CROSS_STACK_REDIAL_TIMER_SEC_INT` is a flagged API and should be inside an `if (Flags.useOemDomainSelectionService())` check (or annotate the surrounding method `getDefaults` with `@FlaggedApi(Flags.FLAG_USE_OEM_DOMAIN_SELECTION_SERVICE) to transfer requirement to caller`)\"\n        errorLine1=\"            defaults.putInt(KEY_CROSS_STACK_REDIAL_TIMER_SEC_INT, 120);\"\n        errorLine2=\"                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java\"\n            line=\"8104\"\n            column=\"29\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `KEY_QUICK_CROSS_STACK_REDIAL_TIMER_SEC_INT` is a flagged API and should be inside an `if (Flags.useOemDomainSelectionService())` check (or annotate the surrounding method `getDefaults` with `@FlaggedApi(Flags.FLAG_USE_OEM_DOMAIN_SELECTION_SERVICE) to transfer requirement to caller`)\"\n        errorLine1=\"            defaults.putInt(KEY_QUICK_CROSS_STACK_REDIAL_TIMER_SEC_INT, REDIAL_TIMER_DISABLED);\"\n        errorLine2=\"                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java\"\n            line=\"8105\"\n            column=\"29\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `REDIAL_TIMER_DISABLED` is a flagged API and should be inside an `if (Flags.useOemDomainSelectionService())` check (or annotate the surrounding method `getDefaults` with `@FlaggedApi(Flags.FLAG_USE_OEM_DOMAIN_SELECTION_SERVICE) to transfer requirement to caller`)\"\n        errorLine1=\"            defaults.putInt(KEY_QUICK_CROSS_STACK_REDIAL_TIMER_SEC_INT, REDIAL_TIMER_DISABLED);\"\n        errorLine2=\"                                                                        ~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java\"\n            line=\"8105\"\n            column=\"73\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `KEY_START_QUICK_CROSS_STACK_REDIAL_TIMER_WHEN_REGISTERED_BOOL` is a flagged API and should be inside an `if (Flags.useOemDomainSelectionService())` check (or annotate the surrounding method `getDefaults` with `@FlaggedApi(Flags.FLAG_USE_OEM_DOMAIN_SELECTION_SERVICE) to transfer requirement to caller`)\"\n        errorLine1=\"            defaults.putBoolean(KEY_START_QUICK_CROSS_STACK_REDIAL_TIMER_WHEN_REGISTERED_BOOL,\"\n        errorLine2=\"                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java\"\n            line=\"8106\"\n            column=\"33\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `KEY_SCAN_LIMITED_SERVICE_AFTER_VOLTE_FAILURE_BOOL` is a flagged API and should be inside an `if (Flags.useOemDomainSelectionService())` check (or annotate the surrounding method `getDefaults` with `@FlaggedApi(Flags.FLAG_USE_OEM_DOMAIN_SELECTION_SERVICE) to transfer requirement to caller`)\"\n        errorLine1=\"            defaults.putBoolean(KEY_SCAN_LIMITED_SERVICE_AFTER_VOLTE_FAILURE_BOOL, false);\"\n        errorLine2=\"                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java\"\n            line=\"8108\"\n            column=\"33\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `KEY_SUPPORTS_IKE_SESSION_MULTIPLE_SA_PROPOSALS_BOOL` is a flagged API and should be inside an `if (Flags.enableMultipleSaProposals())` check (or annotate the surrounding method `getDefaults` with `@FlaggedApi(Flags.FLAG_ENABLE_MULTIPLE_SA_PROPOSALS) to transfer requirement to caller`)\"\n        errorLine1=\"            defaults.putBoolean(KEY_SUPPORTS_IKE_SESSION_MULTIPLE_SA_PROPOSALS_BOOL, false);\"\n        errorLine2=\"                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java\"\n            line=\"9405\"\n            column=\"33\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `KEY_SUPPORTS_CHILD_SESSION_MULTIPLE_SA_PROPOSALS_BOOL` is a flagged API and should be inside an `if (Flags.enableMultipleSaProposals())` check (or annotate the surrounding method `getDefaults` with `@FlaggedApi(Flags.FLAG_ENABLE_MULTIPLE_SA_PROPOSALS) to transfer requirement to caller`)\"\n        errorLine1=\"            defaults.putBoolean(KEY_SUPPORTS_CHILD_SESSION_MULTIPLE_SA_PROPOSALS_BOOL, false);\"\n        errorLine2=\"                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java\"\n            line=\"9406\"\n            column=\"33\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `KEY_SUPPORTED_IKE_SESSION_AEAD_ALGORITHMS_INT_ARRAY` is a flagged API and should be inside an `if (Flags.enableAeadAlgorithms())` check (or annotate the surrounding method `getDefaults` with `@FlaggedApi(Flags.FLAG_ENABLE_AEAD_ALGORITHMS) to transfer requirement to caller`)\"\n        errorLine1=\"                    KEY_SUPPORTED_IKE_SESSION_AEAD_ALGORITHMS_INT_ARRAY, new int[] {});\"\n        errorLine2=\"                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java\"\n            line=\"9422\"\n            column=\"21\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `KEY_SUPPORTED_CHILD_SESSION_AEAD_ALGORITHMS_INT_ARRAY` is a flagged API and should be inside an `if (Flags.enableAeadAlgorithms())` check (or annotate the surrounding method `getDefaults` with `@FlaggedApi(Flags.FLAG_ENABLE_AEAD_ALGORITHMS) to transfer requirement to caller`)\"\n        errorLine1=\"                    KEY_SUPPORTED_CHILD_SESSION_AEAD_ALGORITHMS_INT_ARRAY, new int[] {});\"\n        errorLine2=\"                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java\"\n            line=\"9427\"\n            column=\"21\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `KEY_IKE_SESSION_AES_GCM_KEY_SIZE_INT_ARRAY` is a flagged API and should be inside an `if (Flags.enableAeadAlgorithms())` check (or annotate the surrounding method `getDefaults` with `@FlaggedApi(Flags.FLAG_ENABLE_AEAD_ALGORITHMS) to transfer requirement to caller`)\"\n        errorLine1=\"                    KEY_IKE_SESSION_AES_GCM_KEY_SIZE_INT_ARRAY, new int[] {});\"\n        errorLine2=\"                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java\"\n            line=\"9477\"\n            column=\"21\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `KEY_CHILD_SESSION_AES_GCM_KEY_SIZE_INT_ARRAY` is a flagged API and should be inside an `if (Flags.enableAeadAlgorithms())` check (or annotate the surrounding method `getDefaults` with `@FlaggedApi(Flags.FLAG_ENABLE_AEAD_ALGORITHMS) to transfer requirement to caller`)\"\n        errorLine1=\"                    KEY_CHILD_SESSION_AES_GCM_KEY_SIZE_INT_ARRAY, new int[] {});\"\n        errorLine2=\"                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java\"\n            line=\"9479\"\n            column=\"21\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `KEY_ADDITIONAL_SETTINGS_CALLER_ID_VISIBILITY_BOOL` is a flagged API and should be inside an `if (Flags.showCallIdAndCallWaitingInAdditionalSettingsMenu())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_SHOW_CALL_ID_AND_CALL_WAITING_IN_ADDITIONAL_SETTINGS_MENU) to transfer requirement to caller`)\"\n        errorLine1=\"        sDefaults.putBoolean(KEY_ADDITIONAL_SETTINGS_CALLER_ID_VISIBILITY_BOOL, true);\"\n        errorLine2=\"                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java\"\n            line=\"10519\"\n            column=\"30\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `KEY_ADDITIONAL_SETTINGS_CALL_WAITING_VISIBILITY_BOOL` is a flagged API and should be inside an `if (Flags.showCallIdAndCallWaitingInAdditionalSettingsMenu())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_SHOW_CALL_ID_AND_CALL_WAITING_IN_ADDITIONAL_SETTINGS_MENU) to transfer requirement to caller`)\"\n        errorLine1=\"        sDefaults.putBoolean(KEY_ADDITIONAL_SETTINGS_CALL_WAITING_VISIBILITY_BOOL, true);\"\n        errorLine2=\"                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java\"\n            line=\"10520\"\n            column=\"30\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `KEY_PREFER_3G_VISIBILITY_BOOL` is a flagged API and should be inside an `if (Flags.hidePrefer3gItem())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_HIDE_PREFER_3G_ITEM) to transfer requirement to caller`)\"\n        errorLine1=\"        sDefaults.putBoolean(KEY_PREFER_3G_VISIBILITY_BOOL, true);\"\n        errorLine2=\"                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java\"\n            line=\"10526\"\n            column=\"30\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `KEY_SHOW_ROAMING_INDICATOR_BOOL` is a flagged API and should be inside an `if (Flags.hideRoamingIcon())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_HIDE_ROAMING_ICON) to transfer requirement to caller`)\"\n        errorLine1=\"        sDefaults.putBoolean(KEY_SHOW_ROAMING_INDICATOR_BOOL, true);\"\n        errorLine2=\"                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java\"\n            line=\"10794\"\n            column=\"30\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `KEY_CARRIER_SUPPORTED_SATELLITE_SERVICES_PER_PROVIDER_BUNDLE` is a flagged API and should be inside an `if (Flags.carrierEnabledSatelliteFlag())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_CARRIER_ENABLED_SATELLITE_FLAG) to transfer requirement to caller`)\"\n        errorLine1=\"                KEY_CARRIER_SUPPORTED_SATELLITE_SERVICES_PER_PROVIDER_BUNDLE,\"\n        errorLine2=\"                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java\"\n            line=\"11093\"\n            column=\"17\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `KEY_SATELLITE_ATTACH_SUPPORTED_BOOL` is a flagged API and should be inside an `if (Flags.carrierEnabledSatelliteFlag())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_CARRIER_ENABLED_SATELLITE_FLAG) to transfer requirement to caller`)\"\n        errorLine1=\"        sDefaults.putBoolean(KEY_SATELLITE_ATTACH_SUPPORTED_BOOL, false);\"\n        errorLine2=\"                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java\"\n            line=\"11095\"\n            column=\"30\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `KEY_SATELLITE_CONNECTION_HYSTERESIS_SEC_INT` is a flagged API and should be inside an `if (Flags.carrierEnabledSatelliteFlag())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_CARRIER_ENABLED_SATELLITE_FLAG) to transfer requirement to caller`)\"\n        errorLine1=\"        sDefaults.putInt(KEY_SATELLITE_CONNECTION_HYSTERESIS_SEC_INT, 300);\"\n        errorLine2=\"                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java\"\n            line=\"11096\"\n            column=\"26\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `KEY_NTN_LTE_RSRP_THRESHOLDS_INT_ARRAY` is a flagged API and should be inside an `if (Flags.carrierEnabledSatelliteFlag())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_CARRIER_ENABLED_SATELLITE_FLAG) to transfer requirement to caller`)\"\n        errorLine1=\"        sDefaults.putIntArray(KEY_NTN_LTE_RSRP_THRESHOLDS_INT_ARRAY,\"\n        errorLine2=\"                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java\"\n            line=\"11097\"\n            column=\"31\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `KEY_NTN_LTE_RSRQ_THRESHOLDS_INT_ARRAY` is a flagged API and should be inside an `if (Flags.carrierEnabledSatelliteFlag())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_CARRIER_ENABLED_SATELLITE_FLAG) to transfer requirement to caller`)\"\n        errorLine1=\"        sDefaults.putIntArray(KEY_NTN_LTE_RSRQ_THRESHOLDS_INT_ARRAY,\"\n        errorLine2=\"                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java\"\n            line=\"11105\"\n            column=\"31\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `KEY_NTN_LTE_RSSNR_THRESHOLDS_INT_ARRAY` is a flagged API and should be inside an `if (Flags.carrierEnabledSatelliteFlag())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_CARRIER_ENABLED_SATELLITE_FLAG) to transfer requirement to caller`)\"\n        errorLine1=\"        sDefaults.putIntArray(KEY_NTN_LTE_RSSNR_THRESHOLDS_INT_ARRAY,\"\n        errorLine2=\"                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java\"\n            line=\"11113\"\n            column=\"31\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `KEY_PARAMETERS_USED_FOR_NTN_LTE_SIGNAL_BAR_INT` is a flagged API and should be inside an `if (Flags.carrierEnabledSatelliteFlag())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_CARRIER_ENABLED_SATELLITE_FLAG) to transfer requirement to caller`)\"\n        errorLine1=\"        sDefaults.putInt(KEY_PARAMETERS_USED_FOR_NTN_LTE_SIGNAL_BAR_INT,\"\n        errorLine2=\"                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java\"\n            line=\"11121\"\n            column=\"26\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `KEY_SATELLITE_ENTITLEMENT_STATUS_REFRESH_DAYS_INT` is a flagged API and should be inside an `if (Flags.carrierEnabledSatelliteFlag())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_CARRIER_ENABLED_SATELLITE_FLAG) to transfer requirement to caller`)\"\n        errorLine1=\"        sDefaults.putInt(KEY_SATELLITE_ENTITLEMENT_STATUS_REFRESH_DAYS_INT, 7);\"\n        errorLine2=\"                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java\"\n            line=\"11127\"\n            column=\"26\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `KEY_SATELLITE_ENTITLEMENT_SUPPORTED_BOOL` is a flagged API and should be inside an `if (Flags.carrierEnabledSatelliteFlag())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_CARRIER_ENABLED_SATELLITE_FLAG) to transfer requirement to caller`)\"\n        errorLine1=\"        sDefaults.putBoolean(KEY_SATELLITE_ENTITLEMENT_SUPPORTED_BOOL, false);\"\n        errorLine2=\"                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java\"\n            line=\"11128\"\n            column=\"30\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `SERVICE_TYPE_MMS` is a flagged API and should be inside an `if (Flags.carrierEnabledSatelliteFlag())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_CARRIER_ENABLED_SATELLITE_FLAG) to transfer requirement to caller`)\"\n        errorLine1=\"                        NetworkRegistrationInfo.SERVICE_TYPE_MMS\"\n        errorLine2=\"                                                ~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java\"\n            line=\"11134\"\n            column=\"49\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `KEY_SUPPORTS_BUSINESS_CALL_COMPOSER_BOOL` is a flagged API and should be inside an `if (Flags.businessCallComposer())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_BUSINESS_CALL_COMPOSER) to transfer requirement to caller`)\"\n        errorLine1=\"        sDefaults.putBoolean(KEY_SUPPORTS_BUSINESS_CALL_COMPOSER_BOOL, false);\"\n        errorLine2=\"                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java\"\n            line=\"11142\"\n            column=\"30\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `KEY_CELLULAR_SERVICE_CAPABILITIES_INT_ARRAY` is a flagged API and should be inside an `if (Flags.dataOnlyCellularService())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_DATA_ONLY_CELLULAR_SERVICE) to transfer requirement to caller`)\"\n        errorLine1=\"        sDefaults.putIntArray(KEY_CELLULAR_SERVICE_CAPABILITIES_INT_ARRAY, new int[]{1, 2, 3});\"\n        errorLine2=\"                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java\"\n            line=\"11233\"\n            column=\"31\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Class `TelephonyRegistryManager` is a flagged API and should be inside an `if (Flags.telecomResolveHiddenDependencies())` check (or annotate the surrounding method `registerCarrierConfigChangeListener` with `@FlaggedApi(Flags.FLAG_TELECOM_RESOLVE_HIDDEN_DEPENDENCIES) to transfer requirement to caller`)\"\n        errorLine1=\"        TelephonyRegistryManager trm = mContext.getSystemService(TelephonyRegistryManager.class);\"\n        errorLine2=\"                                                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java\"\n            line=\"11771\"\n            column=\"66\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `addCarrierConfigChangedListener()` is a flagged API and should be inside an `if (Flags.telecomResolveHiddenDependencies())` check (or annotate the surrounding method `registerCarrierConfigChangeListener` with `@FlaggedApi(Flags.FLAG_TELECOM_RESOLVE_HIDDEN_DEPENDENCIES) to transfer requirement to caller`)\"\n        errorLine1=\"        trm.addCarrierConfigChangedListener(executor, listener);\"\n        errorLine2=\"        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java\"\n            line=\"11775\"\n            column=\"9\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Class `TelephonyRegistryManager` is a flagged API and should be inside an `if (Flags.telecomResolveHiddenDependencies())` check (or annotate the surrounding method `unregisterCarrierConfigChangeListener` with `@FlaggedApi(Flags.FLAG_TELECOM_RESOLVE_HIDDEN_DEPENDENCIES) to transfer requirement to caller`)\"\n        errorLine1=\"        TelephonyRegistryManager trm = mContext.getSystemService(TelephonyRegistryManager.class);\"\n        errorLine2=\"                                                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java\"\n            line=\"11789\"\n            column=\"66\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `removeCarrierConfigChangedListener()` is a flagged API and should be inside an `if (Flags.telecomResolveHiddenDependencies())` check (or annotate the surrounding method `unregisterCarrierConfigChangeListener` with `@FlaggedApi(Flags.FLAG_TELECOM_RESOLVE_HIDDEN_DEPENDENCIES) to transfer requirement to caller`)\"\n        errorLine1=\"        trm.removeCarrierConfigChangedListener(listener);\"\n        errorLine2=\"        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java\"\n            line=\"11793\"\n            column=\"9\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"This is a flagged API and should be inside an `if (Flags.telecomResolveHiddenDependencies())` check (or annotate the surrounding method `notifyCarrierNetworkChange` with `@FlaggedApi(Flags.FLAG_TELECOM_RESOLVE_HIDDEN_DEPENDENCIES) to transfer requirement to caller`)\"\n        errorLine1=\"            (TelephonyRegistryManager) this.getSystemService(\"\n        errorLine2=\"             ~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/telephony/java/android/service/carrier/CarrierService.java\"\n            line=\"180\"\n            column=\"14\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `notifyCarrierNetworkChange()` is a flagged API and should be inside an `if (Flags.telecomResolveHiddenDependencies())` check (or annotate the surrounding method `notifyCarrierNetworkChange` with `@FlaggedApi(Flags.FLAG_TELECOM_RESOLVE_HIDDEN_DEPENDENCIES) to transfer requirement to caller`)\"\n        errorLine1=\"            telephonyRegistryMgr.notifyCarrierNetworkChange(active);\"\n        errorLine2=\"            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/telephony/java/android/service/carrier/CarrierService.java\"\n            line=\"183\"\n            column=\"13\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Class `TelephonyRegistryManager` is a flagged API and should be inside an `if (Flags.telecomResolveHiddenDependencies())` check (or annotate the surrounding method `notifyCarrierNetworkChange` with `@FlaggedApi(Flags.FLAG_TELECOM_RESOLVE_HIDDEN_DEPENDENCIES) to transfer requirement to caller`)\"\n        errorLine1=\"                TelephonyRegistryManager.class);\"\n        errorLine2=\"                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/telephony/java/android/service/carrier/CarrierService.java\"\n            line=\"206\"\n            column=\"17\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `notifyCarrierNetworkChange()` is a flagged API and should be inside an `if (Flags.telecomResolveHiddenDependencies())` check (or annotate the surrounding method `notifyCarrierNetworkChange` with `@FlaggedApi(Flags.FLAG_TELECOM_RESOLVE_HIDDEN_DEPENDENCIES) to transfer requirement to caller`)\"\n        errorLine1=\"            telephonyRegistryMgr.notifyCarrierNetworkChange(subscriptionId, active);\"\n        errorLine2=\"            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/telephony/java/android/service/carrier/CarrierService.java\"\n            line=\"208\"\n            column=\"13\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `isUsingNonTerrestrialNetwork()` is a flagged API and should be inside an `if (Flags.carrierEnabledSatelliteFlag())` check (or annotate the surrounding method `updateLevel` with `@FlaggedApi(Flags.FLAG_CARRIER_ENABLED_SATELLITE_FLAG) to transfer requirement to caller`)\"\n        errorLine1=\"            if (ss != null &amp;&amp; ss.isUsingNonTerrestrialNetwork()) {\"\n        errorLine2=\"                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/telephony/java/android/telephony/CellSignalStrengthLte.java\"\n            line=\"266\"\n            column=\"31\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `KEY_PARAMETERS_USED_FOR_NTN_LTE_SIGNAL_BAR_INT` is a flagged API and should be inside an `if (Flags.carrierEnabledSatelliteFlag())` check (or annotate the surrounding method `updateLevel` with `@FlaggedApi(Flags.FLAG_CARRIER_ENABLED_SATELLITE_FLAG) to transfer requirement to caller`)\"\n        errorLine1=\"                        CarrierConfigManager.KEY_PARAMETERS_USED_FOR_NTN_LTE_SIGNAL_BAR_INT);\"\n        errorLine2=\"                                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/telephony/java/android/telephony/CellSignalStrengthLte.java\"\n            line=\"269\"\n            column=\"46\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `KEY_NTN_LTE_RSRP_THRESHOLDS_INT_ARRAY` is a flagged API and should be inside an `if (Flags.carrierEnabledSatelliteFlag())` check (or annotate the surrounding method `updateLevel` with `@FlaggedApi(Flags.FLAG_CARRIER_ENABLED_SATELLITE_FLAG) to transfer requirement to caller`)\"\n        errorLine1=\"                        CarrierConfigManager.KEY_NTN_LTE_RSRP_THRESHOLDS_INT_ARRAY);\"\n        errorLine2=\"                                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/telephony/java/android/telephony/CellSignalStrengthLte.java\"\n            line=\"271\"\n            column=\"46\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `KEY_NTN_LTE_RSRQ_THRESHOLDS_INT_ARRAY` is a flagged API and should be inside an `if (Flags.carrierEnabledSatelliteFlag())` check (or annotate the surrounding method `updateLevel` with `@FlaggedApi(Flags.FLAG_CARRIER_ENABLED_SATELLITE_FLAG) to transfer requirement to caller`)\"\n        errorLine1=\"                        CarrierConfigManager.KEY_NTN_LTE_RSRQ_THRESHOLDS_INT_ARRAY);\"\n        errorLine2=\"                                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/telephony/java/android/telephony/CellSignalStrengthLte.java\"\n            line=\"273\"\n            column=\"46\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `KEY_NTN_LTE_RSSNR_THRESHOLDS_INT_ARRAY` is a flagged API and should be inside an `if (Flags.carrierEnabledSatelliteFlag())` check (or annotate the surrounding method `updateLevel` with `@FlaggedApi(Flags.FLAG_CARRIER_ENABLED_SATELLITE_FLAG) to transfer requirement to caller`)\"\n        errorLine1=\"                        CarrierConfigManager.KEY_NTN_LTE_RSSNR_THRESHOLDS_INT_ARRAY);\"\n        errorLine2=\"                                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/telephony/java/android/telephony/CellSignalStrengthLte.java\"\n            line=\"275\"\n            column=\"46\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `getFrameTimeNanos()` is a flagged API and should be inside an `if (Flags.expectedPresentationTimeApi())` check (or annotate the surrounding method `getFrameTime` with `@FlaggedApi(Flags.FLAG_EXPECTED_PRESENTATION_TIME_API) to transfer requirement to caller`)\"\n        errorLine1=\"        return getFrameTimeNanos() / TimeUtils.NANOS_PER_MS;\"\n        errorLine2=\"               ~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/view/Choreographer.java\"\n            line=\"694\"\n            column=\"16\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `lockAnimationClock()` is a flagged API and should be inside an `if (Flags.expectedPresentationTimeReadOnly())` check (or annotate the surrounding method `doFrame` with `@FlaggedApi(Flags.FLAG_EXPECTED_PRESENTATION_TIME_READ_ONLY) to transfer requirement to caller`)\"\n        errorLine1=\"            AnimationUtils.lockAnimationClock(frameTimeNanos / TimeUtils.NANOS_PER_MS,\"\n        errorLine2=\"            ^\">\n        <location\n            file=\"frameworks/base/core/java/android/view/Choreographer.java\"\n            line=\"934\"\n            column=\"13\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `SOURCE_UNKNOWN` is a flagged API and should be inside an `if (Flags.modesApi())` check (or annotate the surrounding method `Condition` with `@FlaggedApi(Flags.FLAG_MODES_API) to transfer requirement to caller`)\"\n        errorLine1=\"        this(id, summary, &quot;&quot;, &quot;&quot;, -1, state, SOURCE_UNKNOWN, FLAG_RELEVANT_ALWAYS);\"\n        errorLine2=\"                                             ~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/service/notification/Condition.java\"\n            line=\"138\"\n            column=\"46\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `Condition()` is a flagged API and should be inside an `if (Flags.modesApi())` check (or annotate the surrounding method `Condition` with `@FlaggedApi(Flags.FLAG_MODES_API) to transfer requirement to caller`)\"\n        errorLine1=\"        this(id, summary, &quot;&quot;, &quot;&quot;, -1, state, SOURCE_UNKNOWN, FLAG_RELEVANT_ALWAYS);\"\n        errorLine2=\"        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/service/notification/Condition.java\"\n            line=\"138\"\n            column=\"9\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `SOURCE_UNKNOWN` is a flagged API and should be inside an `if (Flags.modesApi())` check (or annotate the surrounding method `Condition` with `@FlaggedApi(Flags.FLAG_MODES_API) to transfer requirement to caller`)\"\n        errorLine1=\"        this(id, summary, line1, line2, icon, state, SOURCE_UNKNOWN, flags);\"\n        errorLine2=\"                                                     ~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/service/notification/Condition.java\"\n            line=\"157\"\n            column=\"54\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `Condition()` is a flagged API and should be inside an `if (Flags.modesApi())` check (or annotate the surrounding method `Condition` with `@FlaggedApi(Flags.FLAG_MODES_API) to transfer requirement to caller`)\"\n        errorLine1=\"        this(id, summary, line1, line2, icon, state, SOURCE_UNKNOWN, flags);\"\n        errorLine2=\"        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/service/notification/Condition.java\"\n            line=\"157\"\n            column=\"9\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `Condition()` is a flagged API and should be inside an `if (Flags.modesApi())` check (or annotate the surrounding method `Condition` with `@FlaggedApi(Flags.FLAG_MODES_API) to transfer requirement to caller`)\"\n        errorLine1=\"        this((Uri)source.readParcelable(Condition.class.getClassLoader(), android.net.Uri.class),\"\n        errorLine2=\"        ^\">\n        <location\n            file=\"frameworks/base/core/java/android/service/notification/Condition.java\"\n            line=\"192\"\n            column=\"9\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `SOURCE_UNKNOWN` is a flagged API and should be inside an `if (Flags.modesApi())` check (or annotate the surrounding method `Condition` with `@FlaggedApi(Flags.FLAG_MODES_API) to transfer requirement to caller`)\"\n        errorLine1=\"                Flags.modesApi() ? source.readInt() : SOURCE_UNKNOWN,\"\n        errorLine2=\"                                                      ~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/service/notification/Condition.java\"\n            line=\"198\"\n            column=\"55\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `onCreateConnectionComplete()` is a flagged API and should be inside an `if (Flags.telecomResolveHiddenDependencies())` check (or annotate the surrounding method `notifyCreateConnectionComplete` with `@FlaggedApi(Flags.FLAG_TELECOM_RESOLVE_HIDDEN_DEPENDENCIES) to transfer requirement to caller`)\"\n        errorLine1=\"        onCreateConnectionComplete(findConnectionForAction(callId,\"\n        errorLine2=\"        ^\">\n        <location\n            file=\"frameworks/base/telecomm/java/android/telecom/ConnectionService.java\"\n            line=\"2531\"\n            column=\"9\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `onCreateConferenceComplete()` is a flagged API and should be inside an `if (Flags.telecomResolveHiddenDependencies())` check (or annotate the surrounding method `notifyCreateConferenceComplete` with `@FlaggedApi(Flags.FLAG_TELECOM_RESOLVE_HIDDEN_DEPENDENCIES) to transfer requirement to caller`)\"\n        errorLine1=\"        onCreateConferenceComplete(findConferenceForAction(callId,\"\n        errorLine2=\"        ^\">\n        <location\n            file=\"frameworks/base/telecomm/java/android/telecom/ConnectionService.java\"\n            line=\"2548\"\n            column=\"9\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `getCallDirection()` is a flagged API and should be inside an `if (Flags.telecomResolveHiddenDependencies())` check (or annotate the surrounding method `addExistingConnection` with `@FlaggedApi(Flags.FLAG_TELECOM_RESOLVE_HIDDEN_DEPENDENCIES) to transfer requirement to caller`)\"\n        errorLine1=\"                    connection.getCallDirection(),\"\n        errorLine2=\"                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/telecomm/java/android/telecom/ConnectionService.java\"\n            line=\"3179\"\n            column=\"21\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `supportsReliableMessages()` is a flagged API and should be inside an `if (Flags.reliableMessage())` check (or annotate the surrounding method `equals` with `@FlaggedApi(Flags.FLAG_RELIABLE_MESSAGE) to transfer requirement to caller`)\"\n        errorLine1=\"                            || (other.supportsReliableMessages() == mSupportsReliableMessages))\"\n        errorLine2=\"                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/hardware/location/ContextHubInfo.java\"\n            line=\"365\"\n            column=\"33\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `isReliable()` is a flagged API and should be inside an `if (Flags.reliableMessage())` check (or annotate the surrounding method `onMessageFromNanoApp` with `@FlaggedApi(Flags.FLAG_RELIABLE_MESSAGE) to transfer requirement to caller`)\"\n        errorLine1=\"                                        &amp;&amp; message.isReliable()) {\"\n        errorLine2=\"                                           ~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/hardware/location/ContextHubManager.java\"\n            line=\"715\"\n            column=\"44\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `TYPE_RELIABLE_MESSAGE` is a flagged API and should be inside an `if (Flags.reliableMessage())` check (or annotate the surrounding method `typeToString` with `@FlaggedApi(Flags.FLAG_RELIABLE_MESSAGE) to transfer requirement to caller`)\"\n        errorLine1=\"            case ContextHubTransaction.TYPE_RELIABLE_MESSAGE: {\"\n        errorLine2=\"                                       ~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/hardware/location/ContextHubTransaction.java\"\n            line=\"235\"\n            column=\"40\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `shouldRegisterAttributionSource()` is a flagged API and should be inside an `if (Flags.shouldRegisterAttributionSource())` check (or annotate the surrounding method `ContextImpl` with `@FlaggedApi(Flags.FLAG_SHOULD_REGISTER_ATTRIBUTION_SOURCE) to transfer requirement to caller`)\"\n        errorLine1=\"                params.getRenouncedPermissions(), params.shouldRegisterAttributionSource(), mDeviceId);\"\n        errorLine2=\"                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/app/ContextImpl.java\"\n            line=\"3540\"\n            column=\"51\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `NETWORK_VALIDATION_UNSUPPORTED` is a flagged API and should be inside an `if (Flags.networkValidation())` check (or annotate the surrounding method `DataCallResponse` with `@FlaggedApi(Flags.FLAG_NETWORK_VALIDATION) to transfer requirement to caller`)\"\n        errorLine1=\"                PreciseDataConnectionState.NETWORK_VALIDATION_UNSUPPORTED);\"\n        errorLine2=\"                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/telephony/java/android/telephony/data/DataCallResponse.java\"\n            line=\"192\"\n            column=\"44\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `NETWORK_VALIDATION_UNSUPPORTED` is a flagged API and should be inside an `if (Flags.networkValidation())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_NETWORK_VALIDATION) to transfer requirement to caller`)\"\n        errorLine1=\"                PreciseDataConnectionState.NETWORK_VALIDATION_UNSUPPORTED;\"\n        errorLine2=\"                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/telephony/java/android/telephony/data/DataCallResponse.java\"\n            line=\"655\"\n            column=\"44\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `TYPE_RCS` is a flagged API and should be inside an `if (Flags.carrierEnabledSatelliteFlag())` check (or annotate the surrounding method `networkCapabilityToApnType` with `@FlaggedApi(Flags.FLAG_CARRIER_ENABLED_SATELLITE_FLAG) to transfer requirement to caller`)\"\n        errorLine1=\"                return ApnSetting.TYPE_RCS;\"\n        errorLine2=\"                                  ~~~~~~~~\">\n        <location\n            file=\"frameworks/base/telephony/java/android/telephony/data/DataProfile.java\"\n            line=\"435\"\n            column=\"35\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `requestNetworkValidation()` is a flagged API and should be inside an `if (Flags.networkValidation())` check (or annotate the surrounding method `handleMessage` with `@FlaggedApi(Flags.FLAG_NETWORK_VALIDATION) to transfer requirement to caller`)\"\n        errorLine1=\"                    serviceProvider.requestNetworkValidation(\"\n        errorLine2=\"                    ^\">\n        <location\n            file=\"frameworks/base/telephony/java/android/telephony/data/DataService.java\"\n            line=\"744\"\n            column=\"21\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `HEADLESS_DEVICE_OWNER_MODE_SINGLE_USER` is a flagged API and should be inside an `if (Flags.headlessDeviceOwnerSingleUserEnabled())` check (or annotate the surrounding method `DeviceAdminInfo` with `@FlaggedApi(Flags.FLAG_HEADLESS_DEVICE_OWNER_SINGLE_USER_ENABLED) to transfer requirement to caller`)\"\n        errorLine1=\"                        mHeadlessDeviceOwnerMode = HEADLESS_DEVICE_OWNER_MODE_SINGLE_USER;\"\n        errorLine2=\"                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/app/admin/DeviceAdminInfo.java\"\n            line=\"410\"\n            column=\"52\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `CONTENT_PROTECTION_DISABLED` is a flagged API and should be inside an `if (Flags.manageDevicePolicyEnabled())` check (or annotate the surrounding method `getContentProtectionPolicy` with `@FlaggedApi(Flags.FLAG_MANAGE_DEVICE_POLICY_ENABLED) to transfer requirement to caller`)\"\n        errorLine1=\"            return CONTENT_PROTECTION_DISABLED;\"\n        errorLine2=\"                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/app/admin/DevicePolicyCache.java\"\n            line=\"105\"\n            column=\"20\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `equals()` is a flagged API and should be inside an `if (Flags.deviceStatePropertyApi())` check (or annotate the surrounding method `equals` with `@FlaggedApi(Flags.FLAG_DEVICE_STATE_PROPERTY_API) to transfer requirement to caller`)\"\n        errorLine1=\"        return baseState.equals(that.baseState)\"\n        errorLine2=\"               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/hardware/devicestate/DeviceStateInfo.java\"\n            line=\"101\"\n            column=\"16\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `equals()` is a flagged API and should be inside an `if (Flags.deviceStatePropertyApi())` check (or annotate the surrounding method `equals` with `@FlaggedApi(Flags.FLAG_DEVICE_STATE_PROPERTY_API) to transfer requirement to caller`)\"\n        errorLine1=\"                &amp;&amp;  currentState.equals(that.currentState)\"\n        errorLine2=\"                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/hardware/devicestate/DeviceStateInfo.java\"\n            line=\"102\"\n            column=\"21\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `equals()` is a flagged API and should be inside an `if (Flags.deviceStatePropertyApi())` check (or annotate the surrounding method `diff` with `@FlaggedApi(Flags.FLAG_DEVICE_STATE_PROPERTY_API) to transfer requirement to caller`)\"\n        errorLine1=\"        if (!baseState.equals(other.baseState)) {\"\n        errorLine2=\"             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/hardware/devicestate/DeviceStateInfo.java\"\n            line=\"120\"\n            column=\"14\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `equals()` is a flagged API and should be inside an `if (Flags.deviceStatePropertyApi())` check (or annotate the surrounding method `diff` with `@FlaggedApi(Flags.FLAG_DEVICE_STATE_PROPERTY_API) to transfer requirement to caller`)\"\n        errorLine1=\"        if (!currentState.equals(other.currentState)) {\"\n        errorLine2=\"             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/hardware/devicestate/DeviceStateInfo.java\"\n            line=\"123\"\n            column=\"14\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `getConfiguration()` is a flagged API and should be inside an `if (Flags.deviceStatePropertyApi())` check (or annotate the surrounding method `writeToParcel` with `@FlaggedApi(Flags.FLAG_DEVICE_STATE_PROPERTY_API) to transfer requirement to caller`)\"\n        errorLine1=\"            dest.writeTypedObject(supportedStates.get(i).getConfiguration(), flags);\"\n        errorLine2=\"                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/hardware/devicestate/DeviceStateInfo.java\"\n            line=\"133\"\n            column=\"35\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `getConfiguration()` is a flagged API and should be inside an `if (Flags.deviceStatePropertyApi())` check (or annotate the surrounding method `writeToParcel` with `@FlaggedApi(Flags.FLAG_DEVICE_STATE_PROPERTY_API) to transfer requirement to caller`)\"\n        errorLine1=\"        dest.writeTypedObject(baseState.getConfiguration(), flags);\"\n        errorLine2=\"                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/hardware/devicestate/DeviceStateInfo.java\"\n            line=\"136\"\n            column=\"31\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `getConfiguration()` is a flagged API and should be inside an `if (Flags.deviceStatePropertyApi())` check (or annotate the surrounding method `writeToParcel` with `@FlaggedApi(Flags.FLAG_DEVICE_STATE_PROPERTY_API) to transfer requirement to caller`)\"\n        errorLine1=\"        dest.writeTypedObject(currentState.getConfiguration(), flags);\"\n        errorLine2=\"                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/hardware/devicestate/DeviceStateInfo.java\"\n            line=\"137\"\n            column=\"31\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `CREATOR` is a flagged API and should be inside an `if (Flags.deviceStatePropertyApi())` check (or annotate the surrounding method `createFromParcel` with `@FlaggedApi(Flags.FLAG_DEVICE_STATE_PROPERTY_API) to transfer requirement to caller`)\"\n        errorLine1=\"                        DeviceState.Configuration.CREATOR);\"\n        errorLine2=\"                                                  ~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/hardware/devicestate/DeviceStateInfo.java\"\n            line=\"152\"\n            column=\"51\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `DeviceState()` is a flagged API and should be inside an `if (Flags.deviceStatePropertyApi())` check (or annotate the surrounding method `createFromParcel` with `@FlaggedApi(Flags.FLAG_DEVICE_STATE_PROPERTY_API) to transfer requirement to caller`)\"\n        errorLine1=\"                supportedStates.add(i, new DeviceState(configuration));\"\n        errorLine2=\"                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/hardware/devicestate/DeviceStateInfo.java\"\n            line=\"153\"\n            column=\"40\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `DeviceState()` is a flagged API and should be inside an `if (Flags.deviceStatePropertyApi())` check (or annotate the surrounding method `createFromParcel` with `@FlaggedApi(Flags.FLAG_DEVICE_STATE_PROPERTY_API) to transfer requirement to caller`)\"\n        errorLine1=\"            final DeviceState baseState = new DeviceState(\"\n        errorLine2=\"                                          ^\">\n        <location\n            file=\"frameworks/base/core/java/android/hardware/devicestate/DeviceStateInfo.java\"\n            line=\"156\"\n            column=\"43\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `CREATOR` is a flagged API and should be inside an `if (Flags.deviceStatePropertyApi())` check (or annotate the surrounding method `createFromParcel` with `@FlaggedApi(Flags.FLAG_DEVICE_STATE_PROPERTY_API) to transfer requirement to caller`)\"\n        errorLine1=\"                    source.readTypedObject(DeviceState.Configuration.CREATOR));\"\n        errorLine2=\"                                                                     ~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/hardware/devicestate/DeviceStateInfo.java\"\n            line=\"157\"\n            column=\"70\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `DeviceState()` is a flagged API and should be inside an `if (Flags.deviceStatePropertyApi())` check (or annotate the surrounding method `createFromParcel` with `@FlaggedApi(Flags.FLAG_DEVICE_STATE_PROPERTY_API) to transfer requirement to caller`)\"\n        errorLine1=\"            final DeviceState currentState = new DeviceState(\"\n        errorLine2=\"                                             ^\">\n        <location\n            file=\"frameworks/base/core/java/android/hardware/devicestate/DeviceStateInfo.java\"\n            line=\"158\"\n            column=\"46\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `CREATOR` is a flagged API and should be inside an `if (Flags.deviceStatePropertyApi())` check (or annotate the surrounding method `createFromParcel` with `@FlaggedApi(Flags.FLAG_DEVICE_STATE_PROPERTY_API) to transfer requirement to caller`)\"\n        errorLine1=\"                    source.readTypedObject(DeviceState.Configuration.CREATOR));\"\n        errorLine2=\"                                                                     ~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/hardware/devicestate/DeviceStateInfo.java\"\n            line=\"159\"\n            column=\"70\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `onSupportedStatesChanged()` is a flagged API and should be inside an `if (Flags.deviceStatePropertyApi())` check (or annotate the surrounding method `notifySupportedDeviceStatesChanged` with `@FlaggedApi(Flags.FLAG_DEVICE_STATE_PROPERTY_API) to transfer requirement to caller`)\"\n        errorLine1=\"                    mDeviceStateCallback.onSupportedStatesChanged(newSupportedDeviceStates));\"\n        errorLine2=\"                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/hardware/devicestate/DeviceStateManagerGlobal.java\"\n            line=\"393\"\n            column=\"21\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `onDeviceStateChanged()` is a flagged API and should be inside an `if (Flags.deviceStatePropertyApi())` check (or annotate the surrounding method `notifyDeviceStateChanged` with `@FlaggedApi(Flags.FLAG_DEVICE_STATE_PROPERTY_API) to transfer requirement to caller`)\"\n        errorLine1=\"                    () -> mDeviceStateCallback.onDeviceStateChanged(newDeviceState));\"\n        errorLine2=\"                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/hardware/devicestate/DeviceStateManagerGlobal.java\"\n            line=\"398\"\n            column=\"27\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `getConfiguration()` is a flagged API and should be inside an `if (Flags.deviceStatePropertyApi())` check (or annotate the surrounding method `calculateBaseStateIdentifier` with `@FlaggedApi(Flags.FLAG_DEVICE_STATE_PROPERTY_API) to transfer requirement to caller`)\"\n        errorLine1=\"        DeviceState.Configuration stateConfiguration = currentState.getConfiguration();\"\n        errorLine2=\"                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/hardware/devicestate/DeviceStateUtil.java\"\n            line=\"45\"\n            column=\"56\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `getConfiguration()` is a flagged API and should be inside an `if (Flags.deviceStatePropertyApi())` check (or annotate the surrounding method `calculateBaseStateIdentifier` with `@FlaggedApi(Flags.FLAG_DEVICE_STATE_PROPERTY_API) to transfer requirement to caller`)\"\n        errorLine1=\"            if (stateToCompare.getConfiguration().getPhysicalProperties().isEmpty()) {\"\n        errorLine2=\"                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/hardware/devicestate/DeviceStateUtil.java\"\n            line=\"48\"\n            column=\"17\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `getPhysicalProperties()` is a flagged API and should be inside an `if (Flags.deviceStatePropertyApi())` check (or annotate the surrounding method `calculateBaseStateIdentifier` with `@FlaggedApi(Flags.FLAG_DEVICE_STATE_PROPERTY_API) to transfer requirement to caller`)\"\n        errorLine1=\"            if (stateToCompare.getConfiguration().getPhysicalProperties().isEmpty()) {\"\n        errorLine2=\"                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/hardware/devicestate/DeviceStateUtil.java\"\n            line=\"48\"\n            column=\"17\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `getPhysicalProperties()` is a flagged API and should be inside an `if (Flags.deviceStatePropertyApi())` check (or annotate the surrounding method `calculateBaseStateIdentifier` with `@FlaggedApi(Flags.FLAG_DEVICE_STATE_PROPERTY_API) to transfer requirement to caller`)\"\n        errorLine1=\"            if (isDeviceStateMatchingPhysicalProperties(stateConfiguration.getPhysicalProperties(),\"\n        errorLine2=\"                                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/hardware/devicestate/DeviceStateUtil.java\"\n            line=\"51\"\n            column=\"57\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `getIdentifier()` is a flagged API and should be inside an `if (Flags.deviceStatePropertyApi())` check (or annotate the surrounding method `calculateBaseStateIdentifier` with `@FlaggedApi(Flags.FLAG_DEVICE_STATE_PROPERTY_API) to transfer requirement to caller`)\"\n        errorLine1=\"                return supportedStates.get(i).getIdentifier();\"\n        errorLine2=\"                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/hardware/devicestate/DeviceStateUtil.java\"\n            line=\"53\"\n            column=\"24\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `INVALID_DEVICE_STATE_IDENTIFIER` is a flagged API and should be inside an `if (Flags.deviceStatePropertyApi())` check (or annotate the surrounding method `calculateBaseStateIdentifier` with `@FlaggedApi(Flags.FLAG_DEVICE_STATE_PROPERTY_API) to transfer requirement to caller`)\"\n        errorLine1=\"        return INVALID_DEVICE_STATE_IDENTIFIER;\"\n        errorLine2=\"               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/hardware/devicestate/DeviceStateUtil.java\"\n            line=\"56\"\n            column=\"16\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `hasProperty()` is a flagged API and should be inside an `if (Flags.deviceStatePropertyApi())` check (or annotate the surrounding method `isDeviceStateMatchingPhysicalProperties` with `@FlaggedApi(Flags.FLAG_DEVICE_STATE_PROPERTY_API) to transfer requirement to caller`)\"\n        errorLine1=\"            if (!state.hasProperty(iterator.next())) {\"\n        errorLine2=\"                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/hardware/devicestate/DeviceStateUtil.java\"\n            line=\"69\"\n            column=\"18\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `getTelephonyDisconnectCause()` is a flagged API and should be inside an `if (Flags.telecomResolveHiddenDependencies())` check (or annotate the surrounding method `equals` with `@FlaggedApi(Flags.FLAG_TELECOM_RESOLVE_HIDDEN_DEPENDENCIES) to transfer requirement to caller`)\"\n        errorLine1=\"                    &amp;&amp; Objects.equals(mTelephonyDisconnectCause, d.getTelephonyDisconnectCause())\"\n        errorLine2=\"                                                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/telecomm/java/android/telecom/DisconnectCause.java\"\n            line=\"498\"\n            column=\"66\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `getTelephonyPreciseDisconnectCause()` is a flagged API and should be inside an `if (Flags.telecomResolveHiddenDependencies())` check (or annotate the surrounding method `equals` with `@FlaggedApi(Flags.FLAG_TELECOM_RESOLVE_HIDDEN_DEPENDENCIES) to transfer requirement to caller`)\"\n        errorLine1=\"                    d.getTelephonyPreciseDisconnectCause())\"\n        errorLine2=\"                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/telecomm/java/android/telecom/DisconnectCause.java\"\n            line=\"500\"\n            column=\"21\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `getImsReasonInfo()` is a flagged API and should be inside an `if (Flags.telecomResolveHiddenDependencies())` check (or annotate the surrounding method `equals` with `@FlaggedApi(Flags.FLAG_TELECOM_RESOLVE_HIDDEN_DEPENDENCIES) to transfer requirement to caller`)\"\n        errorLine1=\"                    &amp;&amp; Objects.equals(mImsReasonInfo, d.getImsReasonInfo());\"\n        errorLine2=\"                                                      ~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/telecomm/java/android/telecom/DisconnectCause.java\"\n            line=\"501\"\n            column=\"55\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `SATELLITE_ENABLED` is a flagged API and should be inside an `if (Flags.oemEnabledSatelliteFlag())` check (or annotate the surrounding method `toString` with `@FlaggedApi(Flags.FLAG_OEM_ENABLED_SATELLITE_FLAG) to transfer requirement to caller`)\"\n        errorLine1=\"            case SATELLITE_ENABLED:\"\n        errorLine2=\"                 ~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/telephony/java/android/telephony/DisconnectCause.java\"\n            line=\"550\"\n            column=\"18\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `dreamCategory` is a flagged API and should be inside an `if (Flags.homePanelDream())` check (or annotate the surrounding method `DreamMetadata` with `@FlaggedApi(Flags.FLAG_HOME_PANEL_DREAM) to transfer requirement to caller`)\"\n        errorLine1=\"                this.dreamCategory = DREAM_CATEGORY_DEFAULT;\"\n        errorLine2=\"                     ~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/service/dreams/DreamService.java\"\n            line=\"1825\"\n            column=\"22\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `setMinimumFontMetrics()` is a flagged API and should be inside an `if (Flags.fixLineHeightForLocale())` check (or annotate the surrounding method `reflow` with `@FlaggedApi(Flags.FLAG_FIX_LINE_HEIGHT_FOR_LOCALE) to transfer requirement to caller`)\"\n        errorLine1=\"        b.setText(text, where, where + after)\"\n        errorLine2=\"        ^\">\n        <location\n            file=\"frameworks/base/core/java/android/text/DynamicLayout.java\"\n            line=\"736\"\n            column=\"9\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `setShiftDrawingOffsetForStartOverhang()` is a flagged API and should be inside an `if (Flags.useBoundsForWidth())` check (or annotate the surrounding method `reflow` with `@FlaggedApi(Flags.FLAG_USE_BOUNDS_FOR_WIDTH) to transfer requirement to caller`)\"\n        errorLine1=\"        b.setText(text, where, where + after)\"\n        errorLine2=\"        ^\">\n        <location\n            file=\"frameworks/base/core/java/android/text/DynamicLayout.java\"\n            line=\"736\"\n            column=\"9\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `setUseBoundsForWidth()` is a flagged API and should be inside an `if (Flags.useBoundsForWidth())` check (or annotate the surrounding method `reflow` with `@FlaggedApi(Flags.FLAG_USE_BOUNDS_FOR_WIDTH) to transfer requirement to caller`)\"\n        errorLine1=\"        b.setText(text, where, where + after)\"\n        errorLine2=\"        ^\">\n        <location\n            file=\"frameworks/base/core/java/android/text/DynamicLayout.java\"\n            line=\"736\"\n            column=\"9\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `getTextDirectionHeuristic()` is a flagged API and should be inside an `if (Flags.useBoundsForWidth())` check (or annotate the surrounding method `reflow` with `@FlaggedApi(Flags.FLAG_USE_BOUNDS_FOR_WIDTH) to transfer requirement to caller`)\"\n        errorLine1=\"                .setTextDirection(getTextDirectionHeuristic())\"\n        errorLine2=\"                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/text/DynamicLayout.java\"\n            line=\"739\"\n            column=\"35\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `setLocalePreferredLineHeightForMinimumUsed()` is a flagged API and should be inside an `if (Flags.fixLineHeightForLocale())` check (or annotate the surrounding method `EditText` with `@FlaggedApi(Flags.FLAG_FIX_LINE_HEIGHT_FOR_LOCALE) to transfer requirement to caller`)\"\n        errorLine1=\"        setLocalePreferredLineHeightForMinimumUsed(useLocalePreferredLineHeightForMinimumInt);\"\n        errorLine2=\"        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/widget/EditText.java\"\n            line=\"150\"\n            column=\"9\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `convertSpToDp()` is a flagged API and should be inside an `if (Flags.fontScaleConverterPublic())` check (or annotate the surrounding method `createInterpolatedTableBetween` with `@FlaggedApi(Flags.FLAG_FONT_SCALE_CONVERTER_PUBLIC) to transfer requirement to caller`)\"\n        errorLine1=\"            float startDp = start.convertSpToDp(sp);\"\n        errorLine2=\"                            ~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/content/res/FontScaleConverterFactory.java\"\n            line=\"242\"\n            column=\"29\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `convertSpToDp()` is a flagged API and should be inside an `if (Flags.fontScaleConverterPublic())` check (or annotate the surrounding method `createInterpolatedTableBetween` with `@FlaggedApi(Flags.FLAG_FONT_SCALE_CONVERTER_PUBLIC) to transfer requirement to caller`)\"\n        errorLine1=\"            float endDp = end.convertSpToDp(sp);\"\n        errorLine2=\"                          ~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/content/res/FontScaleConverterFactory.java\"\n            line=\"243\"\n            column=\"27\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"This is a flagged API and should be inside an `if (Flags.fontScaleConverterPublic())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_FONT_SCALE_CONVERTER_PUBLIC) to transfer requirement to caller`)\"\n        errorLine1=\"public class FontScaleConverterImpl implements FontScaleConverter {\"\n        errorLine2=\"                                               ~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/content/res/FontScaleConverterImpl.java\"\n            line=\"36\"\n            column=\"48\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `FOREGROUND_SERVICE_TYPE_MEDIA_PROCESSING` is a flagged API and should be inside an `if (Flags.introduceMediaProcessingType())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_INTRODUCE_MEDIA_PROCESSING_TYPE) to transfer requirement to caller`)\"\n        errorLine1=\"                    FOREGROUND_SERVICE_TYPE_MEDIA_PROCESSING,\"\n        errorLine2=\"                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/app/ForegroundServiceTypePolicy.java\"\n            line=\"587\"\n            column=\"21\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `FOREGROUND_SERVICE_TYPE_MEDIA_PROCESSING` is a flagged API and should be inside an `if (Flags.introduceMediaProcessingType())` check (or annotate the surrounding method `DefaultForegroundServiceTypePolicy` with `@FlaggedApi(Flags.FLAG_INTRODUCE_MEDIA_PROCESSING_TYPE) to transfer requirement to caller`)\"\n        errorLine1=\"            mForegroundServiceTypePolicies.put(FOREGROUND_SERVICE_TYPE_MEDIA_PROCESSING,\"\n        errorLine2=\"                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/app/ForegroundServiceTypePolicy.java\"\n            line=\"1355\"\n            column=\"48\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `InputTransferToken()` is a flagged API and should be inside an `if (Flags.surfaceControlInputReceiver())` check (or annotate the surrounding method `doCreate` with `@FlaggedApi(Flags.FLAG_SURFACE_CONTROL_INPUT_RECEIVER) to transfer requirement to caller`)\"\n        errorLine1=\"                        new InputTransferToken(), &quot;GameSessionService&quot;);\"\n        errorLine2=\"                        ~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/service/games/GameSessionService.java\"\n            line=\"127\"\n            column=\"25\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `CREATOR` is a flagged API and should be inside an `if (Flags.configurableSelectorUiEnabled())` check (or annotate the surrounding method `GetCandidateCredentialsResponse` with `@FlaggedApi(Flags.FLAG_CONFIGURABLE_SELECTOR_UI_ENABLED) to transfer requirement to caller`)\"\n        errorLine1=\"        in.readTypedList(candidateProviderDataList, GetCredentialProviderData.CREATOR);\"\n        errorLine2=\"                                                                              ~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/credentials/GetCandidateCredentialsResponse.java\"\n            line=\"98\"\n            column=\"79\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `isConnectionlessStylusHandwritingAvailable()` is a flagged API and should be inside an `if (Flags.connectionlessHandwriting())` check (or annotate the surrounding method `prepareDelegation` with `@FlaggedApi(Flags.FLAG_CONNECTIONLESS_HANDWRITING) to transfer requirement to caller`)\"\n        errorLine1=\"        if (mImm.isConnectionlessStylusHandwritingAvailable()) {\"\n        errorLine2=\"            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/view/HandwritingInitiator.java\"\n            line=\"450\"\n            column=\"13\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `startConnectionlessStylusHandwritingForDelegation()` is a flagged API and should be inside an `if (Flags.connectionlessHandwriting())` check (or annotate the surrounding method `prepareDelegation` with `@FlaggedApi(Flags.FLAG_CONNECTIONLESS_HANDWRITING) to transfer requirement to caller`)\"\n        errorLine1=\"            mImm.startConnectionlessStylusHandwritingForDelegation(\"\n        errorLine2=\"            ^\">\n        <location\n            file=\"frameworks/base/core/java/android/view/HandwritingInitiator.java\"\n            line=\"454\"\n            column=\"13\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"This is a flagged API and should be inside an `if (Flags.connectionlessHandwriting())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_CONNECTIONLESS_HANDWRITING) to transfer requirement to caller`)\"\n        errorLine1=\"    private class DelegationCallback implements ConnectionlessHandwritingCallback {\"\n        errorLine2=\"                                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/view/HandwritingInitiator.java\"\n            line=\"1116\"\n            column=\"49\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `CONNECTIONLESS_HANDWRITING_ERROR_NO_TEXT_RECOGNIZED` is a flagged API and should be inside an `if (Flags.connectionlessHandwriting())` check (or annotate the surrounding method `onError` with `@FlaggedApi(Flags.FLAG_CONNECTIONLESS_HANDWRITING) to transfer requirement to caller`)\"\n        errorLine1=\"                case CONNECTIONLESS_HANDWRITING_ERROR_NO_TEXT_RECOGNIZED:\"\n        errorLine2=\"                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/view/HandwritingInitiator.java\"\n            line=\"1133\"\n            column=\"22\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `CONNECTIONLESS_HANDWRITING_ERROR_UNSUPPORTED` is a flagged API and should be inside an `if (Flags.connectionlessHandwriting())` check (or annotate the surrounding method `onError` with `@FlaggedApi(Flags.FLAG_CONNECTIONLESS_HANDWRITING) to transfer requirement to caller`)\"\n        errorLine1=\"                case CONNECTIONLESS_HANDWRITING_ERROR_UNSUPPORTED:\"\n        errorLine2=\"                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/view/HandwritingInitiator.java\"\n            line=\"1136\"\n            column=\"22\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"This is a flagged API and should be inside an `if (Flags.scrollFeedbackApi())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_SCROLL_FEEDBACK_API) to transfer requirement to caller`)\"\n        errorLine1=\"public class HapticScrollFeedbackProvider implements ScrollFeedbackProvider {\"\n        errorLine2=\"                                                     ~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/view/HapticScrollFeedbackProvider.java\"\n            line=\"36\"\n            column=\"54\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `getOverlaySupport()` is a flagged API and should be inside an `if (Flags.overlaypropertiesClassApi())` check (or annotate the surrounding method `initDisplayInfo` with `@FlaggedApi(Flags.FLAG_OVERLAYPROPERTIES_CLASS_API) to transfer requirement to caller`)\"\n        errorLine1=\"            final OverlayProperties overlayProperties = defaultDisplay.getOverlaySupport();\"\n        errorLine2=\"                                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/graphics/java/android/graphics/HardwareRenderer.java\"\n            line=\"1394\"\n            column=\"57\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `isCombinationSupported()` is a flagged API and should be inside an `if (Flags.overlaypropertiesClassApi())` check (or annotate the surrounding method `initDisplayInfo` with `@FlaggedApi(Flags.FLAG_OVERLAYPROPERTIES_CLASS_API) to transfer requirement to caller`)\"\n        errorLine1=\"                    overlayProperties.isCombinationSupported(\"\n        errorLine2=\"                    ^\">\n        <location\n            file=\"frameworks/base/graphics/java/android/graphics/HardwareRenderer.java\"\n            line=\"1422\"\n            column=\"21\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `isCombinationSupported()` is a flagged API and should be inside an `if (Flags.overlaypropertiesClassApi())` check (or annotate the surrounding method `initDisplayInfo` with `@FlaggedApi(Flags.FLAG_OVERLAYPROPERTIES_CLASS_API) to transfer requirement to caller`)\"\n        errorLine1=\"                    overlayProperties.isCombinationSupported(\"\n        errorLine2=\"                    ^\">\n        <location\n            file=\"frameworks/base/graphics/java/android/graphics/HardwareRenderer.java\"\n            line=\"1424\"\n            column=\"21\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `RGBA_10101010` is a flagged API and should be inside an `if (Flags.requestedFormatsV())` check (or annotate the surrounding method `initDisplayInfo` with `@FlaggedApi(Flags.FLAG_REQUESTED_FORMATS_V) to transfer requirement to caller`)\"\n        errorLine1=\"                            HardwareBuffer.RGBA_10101010),\"\n        errorLine2=\"                                           ~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/graphics/java/android/graphics/HardwareRenderer.java\"\n            line=\"1429\"\n            column=\"44\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `isMixedColorSpacesSupported()` is a flagged API and should be inside an `if (Flags.overlaypropertiesClassApi())` check (or annotate the surrounding method `initDisplayInfo` with `@FlaggedApi(Flags.FLAG_OVERLAYPROPERTIES_CLASS_API) to transfer requirement to caller`)\"\n        errorLine1=\"                    overlayProperties.isMixedColorSpacesSupported());\"\n        errorLine2=\"                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/graphics/java/android/graphics/HardwareRenderer.java\"\n            line=\"1430\"\n            column=\"21\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `CONFIDENCE_LEVEL_VERY_HIGH` is a flagged API and should be inside an `if (Flags.allowHotwordBumpEgress())` check (or annotate the surrounding method `confidenceLevelToString` with `@FlaggedApi(Flags.FLAG_ALLOW_HOTWORD_BUMP_EGRESS) to transfer requirement to caller`)\"\n        errorLine1=\"            case CONFIDENCE_LEVEL_VERY_HIGH:\"\n        errorLine2=\"                 ~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/service/voice/HotwordRejectedResult.java\"\n            line=\"120\"\n            column=\"18\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `scheduleMediaViewCleanup()` is a flagged API and should be inside an `if (Flags.enableAdServiceFw())` check (or annotate the surrounding method `release` with `@FlaggedApi(Flags.FLAG_ENABLE_AD_SERVICE_FW) to transfer requirement to caller`)\"\n        errorLine1=\"        mSessionImpl.scheduleMediaViewCleanup();\"\n        errorLine2=\"        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/media/java/android/media/tv/ad/ITvAdSessionWrapper.java\"\n            line=\"87\"\n            column=\"9\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `release()` is a flagged API and should be inside an `if (Flags.enableAdServiceFw())` check (or annotate the surrounding method `executeMessage` with `@FlaggedApi(Flags.FLAG_ENABLE_AD_SERVICE_FW) to transfer requirement to caller`)\"\n        errorLine1=\"                mSessionImpl.release();\"\n        errorLine2=\"                ~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/media/java/android/media/tv/ad/ITvAdSessionWrapper.java\"\n            line=\"101\"\n            column=\"17\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `setSurface()` is a flagged API and should be inside an `if (Flags.enableAdServiceFw())` check (or annotate the surrounding method `executeMessage` with `@FlaggedApi(Flags.FLAG_ENABLE_AD_SERVICE_FW) to transfer requirement to caller`)\"\n        errorLine1=\"                mSessionImpl.setSurface((Surface) msg.obj);\"\n        errorLine2=\"                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/media/java/android/media/tv/ad/ITvAdSessionWrapper.java\"\n            line=\"114\"\n            column=\"17\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `dispatchSurfaceChanged()` is a flagged API and should be inside an `if (Flags.enableAdServiceFw())` check (or annotate the surrounding method `executeMessage` with `@FlaggedApi(Flags.FLAG_ENABLE_AD_SERVICE_FW) to transfer requirement to caller`)\"\n        errorLine1=\"                mSessionImpl.dispatchSurfaceChanged(\"\n        errorLine2=\"                ^\">\n        <location\n            file=\"frameworks/base/media/java/android/media/tv/ad/ITvAdSessionWrapper.java\"\n            line=\"119\"\n            column=\"17\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `createMediaView()` is a flagged API and should be inside an `if (Flags.enableAdServiceFw())` check (or annotate the surrounding method `executeMessage` with `@FlaggedApi(Flags.FLAG_ENABLE_AD_SERVICE_FW) to transfer requirement to caller`)\"\n        errorLine1=\"                mSessionImpl.createMediaView((IBinder) args.arg1, (Rect) args.arg2);\"\n        errorLine2=\"                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/media/java/android/media/tv/ad/ITvAdSessionWrapper.java\"\n            line=\"126\"\n            column=\"17\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `relayoutMediaView()` is a flagged API and should be inside an `if (Flags.enableAdServiceFw())` check (or annotate the surrounding method `executeMessage` with `@FlaggedApi(Flags.FLAG_ENABLE_AD_SERVICE_FW) to transfer requirement to caller`)\"\n        errorLine1=\"                mSessionImpl.relayoutMediaView((Rect) msg.obj);\"\n        errorLine2=\"                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/media/java/android/media/tv/ad/ITvAdSessionWrapper.java\"\n            line=\"131\"\n            column=\"17\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `removeMediaView()` is a flagged API and should be inside an `if (Flags.enableAdServiceFw())` check (or annotate the surrounding method `executeMessage` with `@FlaggedApi(Flags.FLAG_ENABLE_AD_SERVICE_FW) to transfer requirement to caller`)\"\n        errorLine1=\"                mSessionImpl.removeMediaView(true);\"\n        errorLine2=\"                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/media/java/android/media/tv/ad/ITvAdSessionWrapper.java\"\n            line=\"135\"\n            column=\"17\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `startAdService()` is a flagged API and should be inside an `if (Flags.enableAdServiceFw())` check (or annotate the surrounding method `executeMessage` with `@FlaggedApi(Flags.FLAG_ENABLE_AD_SERVICE_FW) to transfer requirement to caller`)\"\n        errorLine1=\"                mSessionImpl.startAdService();\"\n        errorLine2=\"                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/media/java/android/media/tv/ad/ITvAdSessionWrapper.java\"\n            line=\"139\"\n            column=\"17\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `stopAdService()` is a flagged API and should be inside an `if (Flags.enableAdServiceFw())` check (or annotate the surrounding method `executeMessage` with `@FlaggedApi(Flags.FLAG_ENABLE_AD_SERVICE_FW) to transfer requirement to caller`)\"\n        errorLine1=\"                mSessionImpl.stopAdService();\"\n        errorLine2=\"                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/media/java/android/media/tv/ad/ITvAdSessionWrapper.java\"\n            line=\"143\"\n            column=\"17\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `resetAdService()` is a flagged API and should be inside an `if (Flags.enableAdServiceFw())` check (or annotate the surrounding method `executeMessage` with `@FlaggedApi(Flags.FLAG_ENABLE_AD_SERVICE_FW) to transfer requirement to caller`)\"\n        errorLine1=\"                mSessionImpl.resetAdService();\"\n        errorLine2=\"                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/media/java/android/media/tv/ad/ITvAdSessionWrapper.java\"\n            line=\"147\"\n            column=\"17\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `sendCurrentVideoBounds()` is a flagged API and should be inside an `if (Flags.enableAdServiceFw())` check (or annotate the surrounding method `executeMessage` with `@FlaggedApi(Flags.FLAG_ENABLE_AD_SERVICE_FW) to transfer requirement to caller`)\"\n        errorLine1=\"                mSessionImpl.sendCurrentVideoBounds((Rect) msg.obj);\"\n        errorLine2=\"                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/media/java/android/media/tv/ad/ITvAdSessionWrapper.java\"\n            line=\"151\"\n            column=\"17\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `sendCurrentChannelUri()` is a flagged API and should be inside an `if (Flags.enableAdServiceFw())` check (or annotate the surrounding method `executeMessage` with `@FlaggedApi(Flags.FLAG_ENABLE_AD_SERVICE_FW) to transfer requirement to caller`)\"\n        errorLine1=\"                mSessionImpl.sendCurrentChannelUri((Uri) msg.obj);\"\n        errorLine2=\"                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/media/java/android/media/tv/ad/ITvAdSessionWrapper.java\"\n            line=\"155\"\n            column=\"17\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `sendTrackInfoList()` is a flagged API and should be inside an `if (Flags.enableAdServiceFw())` check (or annotate the surrounding method `executeMessage` with `@FlaggedApi(Flags.FLAG_ENABLE_AD_SERVICE_FW) to transfer requirement to caller`)\"\n        errorLine1=\"                mSessionImpl.sendTrackInfoList((List&lt;TvTrackInfo>) msg.obj);\"\n        errorLine2=\"                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/media/java/android/media/tv/ad/ITvAdSessionWrapper.java\"\n            line=\"159\"\n            column=\"17\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `sendCurrentTvInputId()` is a flagged API and should be inside an `if (Flags.enableAdServiceFw())` check (or annotate the surrounding method `executeMessage` with `@FlaggedApi(Flags.FLAG_ENABLE_AD_SERVICE_FW) to transfer requirement to caller`)\"\n        errorLine1=\"                mSessionImpl.sendCurrentTvInputId((String) msg.obj);\"\n        errorLine2=\"                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/media/java/android/media/tv/ad/ITvAdSessionWrapper.java\"\n            line=\"163\"\n            column=\"17\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `sendSigningResult()` is a flagged API and should be inside an `if (Flags.enableAdServiceFw())` check (or annotate the surrounding method `executeMessage` with `@FlaggedApi(Flags.FLAG_ENABLE_AD_SERVICE_FW) to transfer requirement to caller`)\"\n        errorLine1=\"                mSessionImpl.sendSigningResult((String) args.arg1, (byte[]) args.arg2);\"\n        errorLine2=\"                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/media/java/android/media/tv/ad/ITvAdSessionWrapper.java\"\n            line=\"168\"\n            column=\"17\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `notifyError()` is a flagged API and should be inside an `if (Flags.enableAdServiceFw())` check (or annotate the surrounding method `executeMessage` with `@FlaggedApi(Flags.FLAG_ENABLE_AD_SERVICE_FW) to transfer requirement to caller`)\"\n        errorLine1=\"                mSessionImpl.notifyError((String) args.arg1, (Bundle) args.arg2);\"\n        errorLine2=\"                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/media/java/android/media/tv/ad/ITvAdSessionWrapper.java\"\n            line=\"174\"\n            column=\"17\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `notifyTvMessage()` is a flagged API and should be inside an `if (Flags.enableAdServiceFw())` check (or annotate the surrounding method `executeMessage` with `@FlaggedApi(Flags.FLAG_ENABLE_AD_SERVICE_FW) to transfer requirement to caller`)\"\n        errorLine1=\"                mSessionImpl.notifyTvMessage((Integer) args.arg1, (Bundle) args.arg2);\"\n        errorLine2=\"                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/media/java/android/media/tv/ad/ITvAdSessionWrapper.java\"\n            line=\"180\"\n            column=\"17\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `notifyTvInputSessionData()` is a flagged API and should be inside an `if (Flags.enableAdServiceFw())` check (or annotate the surrounding method `executeMessage` with `@FlaggedApi(Flags.FLAG_ENABLE_AD_SERVICE_FW) to transfer requirement to caller`)\"\n        errorLine1=\"                mSessionImpl.notifyTvInputSessionData((String) args.arg1, (Bundle) args.arg2);\"\n        errorLine2=\"                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/media/java/android/media/tv/ad/ITvAdSessionWrapper.java\"\n            line=\"186\"\n            column=\"17\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `dispatchInputEvent()` is a flagged API and should be inside an `if (Flags.enableAdServiceFw())` check (or annotate the surrounding method `onInputEvent` with `@FlaggedApi(Flags.FLAG_ENABLE_AD_SERVICE_FW) to transfer requirement to caller`)\"\n        errorLine1=\"            int handled = mSessionImpl.dispatchInputEvent(event, this);\"\n        errorLine2=\"                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/media/java/android/media/tv/ad/ITvAdSessionWrapper.java\"\n            line=\"309\"\n            column=\"27\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `DISPATCH_IN_PROGRESS` is a flagged API and should be inside an `if (Flags.enableAdServiceFw())` check (or annotate the surrounding method `onInputEvent` with `@FlaggedApi(Flags.FLAG_ENABLE_AD_SERVICE_FW) to transfer requirement to caller`)\"\n        errorLine1=\"            if (handled != TvAdManager.Session.DISPATCH_IN_PROGRESS) {\"\n        errorLine2=\"                                               ~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/media/java/android/media/tv/ad/ITvAdSessionWrapper.java\"\n            line=\"310\"\n            column=\"48\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `DISPATCH_HANDLED` is a flagged API and should be inside an `if (Flags.enableAdServiceFw())` check (or annotate the surrounding method `onInputEvent` with `@FlaggedApi(Flags.FLAG_ENABLE_AD_SERVICE_FW) to transfer requirement to caller`)\"\n        errorLine1=\"                        event, handled == TvAdManager.Session.DISPATCH_HANDLED);\"\n        errorLine2=\"                                                              ~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/media/java/android/media/tv/ad/ITvAdSessionWrapper.java\"\n            line=\"312\"\n            column=\"63\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `onDeregistered()` is a flagged API and should be inside an `if (Flags.emergencyRegistrationState())` check (or annotate the surrounding method `onDeregistered` with `@FlaggedApi(Flags.FLAG_EMERGENCY_REGISTRATION_STATE) to transfer requirement to caller`)\"\n        errorLine1=\"        onDeregistered(info, suggestedAction, attributes);\"\n        errorLine2=\"        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/telephony/java/android/telephony/ims/stub/ImsRegistrationImplBase.java\"\n            line=\"576\"\n            column=\"9\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `onTechnologyChangeFailed()` is a flagged API and should be inside an `if (Flags.emergencyRegistrationState())` check (or annotate the surrounding method `onTechnologyChangeFailed` with `@FlaggedApi(Flags.FLAG_EMERGENCY_REGISTRATION_STATE) to transfer requirement to caller`)\"\n        errorLine1=\"        onTechnologyChangeFailed(info, attributes);\"\n        errorLine2=\"        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/telephony/java/android/telephony/ims/stub/ImsRegistrationImplBase.java\"\n            line=\"703\"\n            column=\"9\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `ATTR_REGISTRATION_TYPE_EMERGENCY` is a flagged API and should be inside an `if (Flags.emergencyRegistrationState())` check (or annotate the surrounding method `isEmergency` with `@FlaggedApi(Flags.FLAG_EMERGENCY_REGISTRATION_STATE) to transfer requirement to caller`)\"\n        errorLine1=\"                    &amp; ImsRegistrationAttributes.ATTR_REGISTRATION_TYPE_EMERGENCY) != 0;\"\n        errorLine2=\"                                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/telephony/java/android/telephony/ims/stub/ImsRegistrationImplBase.java\"\n            line=\"753\"\n            column=\"49\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `CAPABILITY_SUPPORTS_SIMULTANEOUS_CALLING` is a flagged API and should be inside an `if (Flags.simultaneousCallingIndications())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_SIMULTANEOUS_CALLING_INDICATIONS) to transfer requirement to caller`)\"\n        errorLine1=\"            Long.numberOfTrailingZeros(CAPABILITY_SUPPORTS_SIMULTANEOUS_CALLING);\"\n        errorLine2=\"                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/telephony/java/android/telephony/ims/ImsService.java\"\n            line=\"186\"\n            column=\"40\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `CAPABILITY_SUPPORTS_SIMULTANEOUS_CALLING` is a flagged API and should be inside an `if (Flags.simultaneousCallingIndications())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_SIMULTANEOUS_CALLING_INDICATIONS) to transfer requirement to caller`)\"\n        errorLine1=\"            CAPABILITY_SUPPORTS_SIMULTANEOUS_CALLING, &quot;SIMULTANEOUS_CALLING&quot;);\"\n        errorLine2=\"            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/telephony/java/android/telephony/ims/ImsService.java\"\n            line=\"212\"\n            column=\"13\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `InputTransferToken()` is a flagged API and should be inside an `if (Flags.surfaceControlInputReceiver())` check (or annotate the surrounding method `handleRenderSuggestion` with `@FlaggedApi(Flags.FLAG_SURFACE_CONTROL_INPUT_RECEIVER) to transfer requirement to caller`)\"\n        errorLine1=\"                    new InputTransferToken(hostInputToken), &quot;InlineSuggestionRenderService&quot;);\"\n        errorLine2=\"                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/service/autofill/InlineSuggestionRenderService.java\"\n            line=\"170\"\n            column=\"21\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `ViewBehavior()` is a flagged API and should be inside an `if (Flags.inputDeviceViewBehaviorApi())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_INPUT_DEVICE_VIEW_BEHAVIOR_API) to transfer requirement to caller`)\"\n        errorLine1=\"    private final ViewBehavior mViewBehavior = new ViewBehavior(this);\"\n        errorLine2=\"                                               ~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/view/InputDevice.java\"\n            line=\"99\"\n            column=\"48\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `mShouldSmoothScroll` is a flagged API and should be inside an `if (Flags.inputDeviceViewBehaviorApi())` check (or annotate the surrounding method `InputDevice` with `@FlaggedApi(Flags.FLAG_INPUT_DEVICE_VIEW_BEHAVIOR_API) to transfer requirement to caller`)\"\n        errorLine1=\"        mViewBehavior.mShouldSmoothScroll = in.readBoolean();\"\n        errorLine2=\"                      ~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/view/InputDevice.java\"\n            line=\"575\"\n            column=\"23\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `mShouldSmoothScroll` is a flagged API and should be inside an `if (Flags.inputDeviceViewBehaviorApi())` check (or annotate the surrounding method `setShouldSmoothScroll` with `@FlaggedApi(Flags.FLAG_INPUT_DEVICE_VIEW_BEHAVIOR_API) to transfer requirement to caller`)\"\n        errorLine1=\"        mViewBehavior.mShouldSmoothScroll = shouldSmoothScroll;\"\n        errorLine2=\"                      ~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/view/InputDevice.java\"\n            line=\"1207\"\n            column=\"23\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `mShouldSmoothScroll` is a flagged API and should be inside an `if (Flags.inputDeviceViewBehaviorApi())` check (or annotate the surrounding method `writeToParcel` with `@FlaggedApi(Flags.FLAG_INPUT_DEVICE_VIEW_BEHAVIOR_API) to transfer requirement to caller`)\"\n        errorLine1=\"        out.writeBoolean(mViewBehavior.mShouldSmoothScroll);\"\n        errorLine2=\"                                       ~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/view/InputDevice.java\"\n            line=\"1642\"\n            column=\"40\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `getHandwritingDelegateFlags()` is a flagged API and should be inside an `if (Flags.homeScreenHandwritingDelegator())` check (or annotate the surrounding method `acceptStylusHandwritingDelegation` with `@FlaggedApi(Flags.FLAG_HOME_SCREEN_HANDWRITING_DELEGATOR) to transfer requirement to caller`)\"\n        errorLine1=\"                delegateView.getHandwritingDelegateFlags());\"\n        errorLine2=\"                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/view/inputmethod/InputMethodManager.java\"\n            line=\"2880\"\n            column=\"17\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `getHandwritingDelegateFlags()` is a flagged API and should be inside an `if (Flags.homeScreenHandwritingDelegator())` check (or annotate the surrounding method `acceptStylusHandwritingDelegation` with `@FlaggedApi(Flags.FLAG_HOME_SCREEN_HANDWRITING_DELEGATOR) to transfer requirement to caller`)\"\n        errorLine1=\"                delegateView, delegatorPackageName, delegateView.getHandwritingDelegateFlags());\"\n        errorLine2=\"                                                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/view/inputmethod/InputMethodManager.java\"\n            line=\"2911\"\n            column=\"53\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `acceptStylusHandwritingDelegation()` is a flagged API and should be inside an `if (Flags.homeScreenHandwritingDelegator())` check (or annotate the surrounding method `acceptStylusHandwritingDelegation` with `@FlaggedApi(Flags.FLAG_HOME_SCREEN_HANDWRITING_DELEGATOR) to transfer requirement to caller`)\"\n        errorLine1=\"        acceptStylusHandwritingDelegation(\"\n        errorLine2=\"        ^\">\n        <location\n            file=\"frameworks/base/core/java/android/view/inputmethod/InputMethodManager.java\"\n            line=\"2940\"\n            column=\"9\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `onError()` is a flagged API and should be inside an `if (Flags.connectionlessHandwriting())` check (or annotate the surrounding method `onResult` with `@FlaggedApi(Flags.FLAG_CONNECTIONLESS_HANDWRITING) to transfer requirement to caller`)\"\n        errorLine1=\"                    executor.execute(() -> callback.onError(\"\n        errorLine2=\"                                           ^\">\n        <location\n            file=\"frameworks/base/core/java/android/view/inputmethod/InputMethodManager.java\"\n            line=\"4808\"\n            column=\"44\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `CONNECTIONLESS_HANDWRITING_ERROR_NO_TEXT_RECOGNIZED` is a flagged API and should be inside an `if (Flags.connectionlessHandwriting())` check (or annotate the surrounding method `onResult` with `@FlaggedApi(Flags.FLAG_CONNECTIONLESS_HANDWRITING) to transfer requirement to caller`)\"\n        errorLine1=\"                                    .CONNECTIONLESS_HANDWRITING_ERROR_NO_TEXT_RECOGNIZED));\"\n        errorLine2=\"                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/view/inputmethod/InputMethodManager.java\"\n            line=\"4810\"\n            column=\"38\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `onResult()` is a flagged API and should be inside an `if (Flags.connectionlessHandwriting())` check (or annotate the surrounding method `onResult` with `@FlaggedApi(Flags.FLAG_CONNECTIONLESS_HANDWRITING) to transfer requirement to caller`)\"\n        errorLine1=\"                    executor.execute(() -> callback.onResult(text));\"\n        errorLine2=\"                                           ~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/view/inputmethod/InputMethodManager.java\"\n            line=\"4812\"\n            column=\"44\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `onError()` is a flagged API and should be inside an `if (Flags.connectionlessHandwriting())` check (or annotate the surrounding method `onError` with `@FlaggedApi(Flags.FLAG_CONNECTIONLESS_HANDWRITING) to transfer requirement to caller`)\"\n        errorLine1=\"                executor.execute(() -> callback.onError(errorCode));\"\n        errorLine2=\"                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/view/inputmethod/InputMethodManager.java\"\n            line=\"4834\"\n            column=\"40\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `onStartConnectionlessStylusHandwriting()` is a flagged API and should be inside an `if (Flags.connectionlessHandwriting())` check (or annotate the surrounding method `canStartStylusHandwriting` with `@FlaggedApi(Flags.FLAG_CONNECTIONLESS_HANDWRITING) to transfer requirement to caller`)\"\n        errorLine1=\"                if (onStartConnectionlessStylusHandwriting(\"\n        errorLine2=\"                    ^\">\n        <location\n            file=\"frameworks/base/core/java/android/inputmethodservice/InputMethodService.java\"\n            line=\"1085\"\n            column=\"21\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `CONNECTIONLESS_HANDWRITING_ERROR_UNSUPPORTED` is a flagged API and should be inside an `if (Flags.connectionlessHandwriting())` check (or annotate the surrounding method `canStartStylusHandwriting` with `@FlaggedApi(Flags.FLAG_CONNECTIONLESS_HANDWRITING) to transfer requirement to caller`)\"\n        errorLine1=\"                                CONNECTIONLESS_HANDWRITING_ERROR_UNSUPPORTED);\"\n        errorLine2=\"                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/inputmethodservice/InputMethodService.java\"\n            line=\"1096\"\n            column=\"33\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `CONNECTIONLESS_HANDWRITING_ERROR_OTHER` is a flagged API and should be inside an `if (Flags.connectionlessHandwriting())` check (or annotate the surrounding method `finishStylusHandwriting` with `@FlaggedApi(Flags.FLAG_CONNECTIONLESS_HANDWRITING) to transfer requirement to caller`)\"\n        errorLine1=\"                mConnectionlessHandwritingCallback.onError(CONNECTIONLESS_HANDWRITING_ERROR_OTHER);\"\n        errorLine2=\"                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/inputmethodservice/InputMethodService.java\"\n            line=\"2825\"\n            column=\"60\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `getAccessibilityBounceKeysThreshold()` is a flagged API and should be inside an `if (Flags.keyboardA11yBounceKeysFlag())` check (or annotate the surrounding method `isAccessibilityBounceKeysEnabled` with `@FlaggedApi(Flags.FLAG_KEYBOARD_A11Y_BOUNCE_KEYS_FLAG) to transfer requirement to caller`)\"\n        errorLine1=\"        return getAccessibilityBounceKeysThreshold(context) != 0;\"\n        errorLine2=\"               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/hardware/input/InputSettings.java\"\n            line=\"458\"\n            column=\"16\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `getAccessibilitySlowKeysThreshold()` is a flagged API and should be inside an `if (Flags.keyboardA11ySlowKeysFlag())` check (or annotate the surrounding method `isAccessibilitySlowKeysEnabled` with `@FlaggedApi(Flags.FLAG_KEYBOARD_A11Y_SLOW_KEYS_FLAG) to transfer requirement to caller`)\"\n        errorLine1=\"        return getAccessibilitySlowKeysThreshold(context) != 0;\"\n        errorLine2=\"               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/hardware/input/InputSettings.java\"\n            line=\"542\"\n            column=\"16\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `APPEARANCE_TRANSPARENT_CAPTION_BAR_BACKGROUND` is a flagged API and should be inside an `if (Flags.customizableWindowHeaders())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_CUSTOMIZABLE_WINDOW_HEADERS) to transfer requirement to caller`)\"\n        errorLine1=\"                    mask = APPEARANCE_TRANSPARENT_CAPTION_BAR_BACKGROUND,\"\n        errorLine2=\"                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/view/InsetsFlags.java\"\n            line=\"76\"\n            column=\"28\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `APPEARANCE_TRANSPARENT_CAPTION_BAR_BACKGROUND` is a flagged API and should be inside an `if (Flags.customizableWindowHeaders())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_CUSTOMIZABLE_WINDOW_HEADERS) to transfer requirement to caller`)\"\n        errorLine1=\"                    equals = APPEARANCE_TRANSPARENT_CAPTION_BAR_BACKGROUND,\"\n        errorLine2=\"                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/view/InsetsFlags.java\"\n            line=\"77\"\n            column=\"30\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `APPEARANCE_LIGHT_CAPTION_BARS` is a flagged API and should be inside an `if (Flags.customizableWindowHeaders())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_CUSTOMIZABLE_WINDOW_HEADERS) to transfer requirement to caller`)\"\n        errorLine1=\"                    mask = APPEARANCE_LIGHT_CAPTION_BARS,\"\n        errorLine2=\"                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/view/InsetsFlags.java\"\n            line=\"80\"\n            column=\"28\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `APPEARANCE_LIGHT_CAPTION_BARS` is a flagged API and should be inside an `if (Flags.customizableWindowHeaders())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_CUSTOMIZABLE_WINDOW_HEADERS) to transfer requirement to caller`)\"\n        errorLine1=\"                    equals = APPEARANCE_LIGHT_CAPTION_BARS,\"\n        errorLine2=\"                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/view/InsetsFlags.java\"\n            line=\"81\"\n            column=\"30\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `countUriRelativeFilterGroups()` is a flagged API and should be inside an `if (Flags.relativeReferenceIntentFilters())` check (or annotate the surrounding method `toLongString` with `@FlaggedApi(Flags.FLAG_RELATIVE_REFERENCE_INTENT_FILTERS) to transfer requirement to caller`)\"\n        errorLine1=\"        if (Flags.relativeReferenceIntentFilters() &amp;&amp; countUriRelativeFilterGroups() > 0) {\"\n        errorLine2=\"                                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/content/IntentFilter.java\"\n            line=\"577\"\n            column=\"55\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `matchGroupsToUri()` is a flagged API and should be inside an `if (Flags.relativeReferenceIntentFilters())` check (or annotate the surrounding method `matchRelRefGroups` with `@FlaggedApi(Flags.FLAG_RELATIVE_REFERENCE_INTENT_FILTERS) to transfer requirement to caller`)\"\n        errorLine1=\"        return UriRelativeFilterGroup.matchGroupsToUri(mUriRelativeFilterGroups, data);\"\n        errorLine2=\"               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/content/IntentFilter.java\"\n            line=\"1839\"\n            column=\"16\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `isPrivateProfile()` is a flagged API and should be inside an `if (Flags.allowPrivateProfile())` check (or annotate the surrounding method `getPrivateProfile` with `@FlaggedApi(Flags.FLAG_ALLOW_PRIVATE_PROFILE) to transfer requirement to caller`)\"\n        errorLine1=\"            if (userInfo.isPrivateProfile()) return userInfo;\"\n        errorLine2=\"                ~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/com/android/internal/app/IntentForwarderActivity.java\"\n            line=\"631\"\n            column=\"17\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `uptimeNanos()` is a flagged API and should be inside an `if (Flags.adpfGpuReportActualWorkDuration())` check (or annotate the surrounding method `postEventLogToWorkerThread` with `@FlaggedApi(Flags.FLAG_ADPF_GPU_REPORT_ACTUAL_WORK_DURATION) to transfer requirement to caller`)\"\n        errorLine1=\"        final long realtimeNanos = SystemClock.uptimeNanos();\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/com/android/internal/jank/InteractionJankMonitor.java\"\n            line=\"606\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `KEYCODE_SCREENSHOT` is a flagged API and should be inside an `if (Flags.emojiAndScreenshotKeycodesAvailable())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_EMOJI_AND_SCREENSHOT_KEYCODES_AVAILABLE) to transfer requirement to caller`)\"\n        errorLine1=\"    public static final int LAST_KEYCODE = KEYCODE_SCREENSHOT;\"\n        errorLine2=\"                                           ~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/view/KeyEvent.java\"\n            line=\"955\"\n            column=\"44\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `isMgf1DigestsSpecified()` is a flagged API and should be inside an `if (Flags.mgf1DigestSetterV2())` check (or annotate the surrounding method `Builder` with `@FlaggedApi(Flags.FLAG_MGF1_DIGEST_SETTER_V2) to transfer requirement to caller`)\"\n        errorLine1=\"            if (sourceSpec.isMgf1DigestsSpecified()) {\"\n        errorLine2=\"                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/keystore/java/android/security/keystore/KeyGenParameterSpec.java\"\n            line=\"1025\"\n            column=\"17\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `getMgf1Digests()` is a flagged API and should be inside an `if (Flags.mgf1DigestSetterV2())` check (or annotate the surrounding method `Builder` with `@FlaggedApi(Flags.FLAG_MGF1_DIGEST_SETTER_V2) to transfer requirement to caller`)\"\n        errorLine1=\"                mMgf1Digests = sourceSpec.getMgf1Digests();\"\n        errorLine2=\"                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/keystore/java/android/security/keystore/KeyGenParameterSpec.java\"\n            line=\"1026\"\n            column=\"32\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `BIOMETRIC_NO_AUTHENTICATION` is a flagged API and should be inside an `if (Flags.lastAuthenticationTime())` check (or annotate the surrounding method `getLastAuthTime` with `@FlaggedApi(Flags.FLAG_LAST_AUTHENTICATION_TIME) to transfer requirement to caller`)\"\n        errorLine1=\"            return BiometricConstants.BIOMETRIC_NO_AUTHENTICATION;\"\n        errorLine2=\"                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/keystore/java/android/security/KeyStoreAuthorization.java\"\n            line=\"139\"\n            column=\"39\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `BIOMETRIC_NO_AUTHENTICATION` is a flagged API and should be inside an `if (Flags.lastAuthenticationTime())` check (or annotate the surrounding method `getLastAuthTime` with `@FlaggedApi(Flags.FLAG_LAST_AUTHENTICATION_TIME) to transfer requirement to caller`)\"\n        errorLine1=\"            return BiometricConstants.BIOMETRIC_NO_AUTHENTICATION;\"\n        errorLine2=\"                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/keystore/java/android/security/KeyStoreAuthorization.java\"\n            line=\"145\"\n            column=\"39\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `PERSISTENT_DATA_BLOCK_SERVICE` is a flagged API and should be inside an `if (Flags.frpEnforcement())` check (or annotate the surrounding method `createConfirmFactoryResetCredentialIntent` with `@FlaggedApi(Flags.FLAG_FRP_ENFORCEMENT) to transfer requirement to caller`)\"\n        errorLine1=\"                    ServiceManager.getService(Context.PERSISTENT_DATA_BLOCK_SERVICE));\"\n        errorLine2=\"                                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/app/KeyguardManager.java\"\n            line=\"365\"\n            column=\"55\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `isPrivateProfile()` is a flagged API and should be inside an `if (Flags.allowPrivateProfile())` check (or annotate the surrounding method `getProfiles` with `@FlaggedApi(Flags.FLAG_ALLOW_PRIVATE_PROFILE) to transfer requirement to caller`)\"\n        errorLine1=\"                    &amp;&amp; mUserManager.isPrivateProfile())) {\"\n        errorLine2=\"                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/content/pm/LauncherApps.java\"\n            line=\"712\"\n            column=\"24\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `computeDrawingBoundingBox()` is a flagged API and should be inside an `if (Flags.useBoundsForWidth())` check (or annotate the surrounding method `draw` with `@FlaggedApi(Flags.FLAG_USE_BOUNDS_FOR_WIDTH) to transfer requirement to caller`)\"\n        errorLine1=\"            RectF drawingRect = computeDrawingBoundingBox();\"\n        errorLine2=\"                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/text/Layout.java\"\n            line=\"498\"\n            column=\"33\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `getLineSpacingMultiplier()` is a flagged API and should be inside an `if (Flags.useBoundsForWidth())` check (or annotate the surrounding method `getSpacingMultiplier` with `@FlaggedApi(Flags.FLAG_USE_BOUNDS_FOR_WIDTH) to transfer requirement to caller`)\"\n        errorLine1=\"        return getLineSpacingMultiplier();\"\n        errorLine2=\"               ~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/text/Layout.java\"\n            line=\"4341\"\n            column=\"16\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `getLineSpacingAmount()` is a flagged API and should be inside an `if (Flags.useBoundsForWidth())` check (or annotate the surrounding method `getSpacingAdd` with `@FlaggedApi(Flags.FLAG_USE_BOUNDS_FOR_WIDTH) to transfer requirement to caller`)\"\n        errorLine1=\"        return getLineSpacingAmount();\"\n        errorLine2=\"               ~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/text/Layout.java\"\n            line=\"4368\"\n            column=\"16\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `LINE_BREAK_STYLE_UNSPECIFIED` is a flagged API and should be inside an `if (Flags.noBreakNoHyphenationSpan())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_NO_BREAK_NO_HYPHENATION_SPAN) to transfer requirement to caller`)\"\n        errorLine1=\"        private @LineBreakStyle int mLineBreakStyle = LineBreakConfig.LINE_BREAK_STYLE_UNSPECIFIED;\"\n        errorLine2=\"                                                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/graphics/java/android/graphics/text/LineBreakConfig.java\"\n            line=\"276\"\n            column=\"71\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `LINE_BREAK_WORD_STYLE_UNSPECIFIED` is a flagged API and should be inside an `if (Flags.noBreakNoHyphenationSpan())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_NO_BREAK_NO_HYPHENATION_SPAN) to transfer requirement to caller`)\"\n        errorLine1=\"                LineBreakConfig.LINE_BREAK_WORD_STYLE_UNSPECIFIED;\"\n        errorLine2=\"                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/graphics/java/android/graphics/text/LineBreakConfig.java\"\n            line=\"280\"\n            column=\"33\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `HYPHENATION_UNSPECIFIED` is a flagged API and should be inside an `if (Flags.noBreakNoHyphenationSpan())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_NO_BREAK_NO_HYPHENATION_SPAN) to transfer requirement to caller`)\"\n        errorLine1=\"        private @Hyphenation int mHyphenation = LineBreakConfig.HYPHENATION_UNSPECIFIED;\"\n        errorLine2=\"                                                                ~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/graphics/java/android/graphics/text/LineBreakConfig.java\"\n            line=\"282\"\n            column=\"65\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `LINE_BREAK_STYLE_UNSPECIFIED` is a flagged API and should be inside an `if (Flags.noBreakNoHyphenationSpan())` check (or annotate the surrounding method `reset` with `@FlaggedApi(Flags.FLAG_NO_BREAK_NO_HYPHENATION_SPAN) to transfer requirement to caller`)\"\n        errorLine1=\"                mLineBreakStyle = LINE_BREAK_STYLE_UNSPECIFIED;\"\n        errorLine2=\"                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/graphics/java/android/graphics/text/LineBreakConfig.java\"\n            line=\"343\"\n            column=\"35\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `LINE_BREAK_WORD_STYLE_UNSPECIFIED` is a flagged API and should be inside an `if (Flags.noBreakNoHyphenationSpan())` check (or annotate the surrounding method `reset` with `@FlaggedApi(Flags.FLAG_NO_BREAK_NO_HYPHENATION_SPAN) to transfer requirement to caller`)\"\n        errorLine1=\"                mLineBreakWordStyle = LINE_BREAK_WORD_STYLE_UNSPECIFIED;\"\n        errorLine2=\"                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/graphics/java/android/graphics/text/LineBreakConfig.java\"\n            line=\"344\"\n            column=\"39\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `HYPHENATION_UNSPECIFIED` is a flagged API and should be inside an `if (Flags.noBreakNoHyphenationSpan())` check (or annotate the surrounding method `reset` with `@FlaggedApi(Flags.FLAG_NO_BREAK_NO_HYPHENATION_SPAN) to transfer requirement to caller`)\"\n        errorLine1=\"                mHyphenation = HYPHENATION_UNSPECIFIED;\"\n        errorLine2=\"                               ~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/graphics/java/android/graphics/text/LineBreakConfig.java\"\n            line=\"345\"\n            column=\"32\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `LINE_BREAK_STYLE_AUTO` is a flagged API and should be inside an `if (Flags.wordStyleAuto())` check (or annotate the surrounding method `getResolvedLineBreakStyle` with `@FlaggedApi(Flags.FLAG_WORD_STYLE_AUTO) to transfer requirement to caller`)\"\n        errorLine1=\"            defaultStyle = LINE_BREAK_STYLE_AUTO;\"\n        errorLine2=\"                           ~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/graphics/java/android/graphics/text/LineBreakConfig.java\"\n            line=\"492\"\n            column=\"28\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `LINE_BREAK_STYLE_UNSPECIFIED` is a flagged API and should be inside an `if (Flags.noBreakNoHyphenationSpan())` check (or annotate the surrounding method `getResolvedLineBreakStyle` with `@FlaggedApi(Flags.FLAG_NO_BREAK_NO_HYPHENATION_SPAN) to transfer requirement to caller`)\"\n        errorLine1=\"        return config.mLineBreakStyle == LINE_BREAK_STYLE_UNSPECIFIED\"\n        errorLine2=\"                                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/graphics/java/android/graphics/text/LineBreakConfig.java\"\n            line=\"499\"\n            column=\"42\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `LINE_BREAK_WORD_STYLE_AUTO` is a flagged API and should be inside an `if (Flags.wordStyleAuto())` check (or annotate the surrounding method `getResolvedLineBreakWordStyle` with `@FlaggedApi(Flags.FLAG_WORD_STYLE_AUTO) to transfer requirement to caller`)\"\n        errorLine1=\"            defaultWordStyle = LINE_BREAK_WORD_STYLE_AUTO;\"\n        errorLine2=\"                               ~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/graphics/java/android/graphics/text/LineBreakConfig.java\"\n            line=\"527\"\n            column=\"32\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `LINE_BREAK_WORD_STYLE_UNSPECIFIED` is a flagged API and should be inside an `if (Flags.noBreakNoHyphenationSpan())` check (or annotate the surrounding method `getResolvedLineBreakWordStyle` with `@FlaggedApi(Flags.FLAG_NO_BREAK_NO_HYPHENATION_SPAN) to transfer requirement to caller`)\"\n        errorLine1=\"        return config.mLineBreakWordStyle == LINE_BREAK_WORD_STYLE_UNSPECIFIED\"\n        errorLine2=\"                                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/graphics/java/android/graphics/text/LineBreakConfig.java\"\n            line=\"534\"\n            column=\"46\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `HYPHENATION_ENABLED` is a flagged API and should be inside an `if (Flags.noBreakNoHyphenationSpan())` check (or annotate the surrounding method `getResolvedHyphenation` with `@FlaggedApi(Flags.FLAG_NO_BREAK_NO_HYPHENATION_SPAN) to transfer requirement to caller`)\"\n        errorLine1=\"            return HYPHENATION_ENABLED;\"\n        errorLine2=\"                   ~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/graphics/java/android/graphics/text/LineBreakConfig.java\"\n            line=\"559\"\n            column=\"20\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `HYPHENATION_UNSPECIFIED` is a flagged API and should be inside an `if (Flags.noBreakNoHyphenationSpan())` check (or annotate the surrounding method `getResolvedHyphenation` with `@FlaggedApi(Flags.FLAG_NO_BREAK_NO_HYPHENATION_SPAN) to transfer requirement to caller`)\"\n        errorLine1=\"        return config.mHyphenation == HYPHENATION_UNSPECIFIED\"\n        errorLine2=\"                                      ~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/graphics/java/android/graphics/text/LineBreakConfig.java\"\n            line=\"561\"\n            column=\"39\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `HYPHENATION_ENABLED` is a flagged API and should be inside an `if (Flags.noBreakNoHyphenationSpan())` check (or annotate the surrounding method `getResolvedHyphenation` with `@FlaggedApi(Flags.FLAG_NO_BREAK_NO_HYPHENATION_SPAN) to transfer requirement to caller`)\"\n        errorLine1=\"                ? HYPHENATION_ENABLED : config.mHyphenation;\"\n        errorLine2=\"                  ~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/graphics/java/android/graphics/text/LineBreakConfig.java\"\n            line=\"562\"\n            column=\"19\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `getSessionId()` is a flagged API and should be inside an `if (Flags.loudnessConfiguratorApi())` check (or annotate the surrounding method `dispatchLoudnessCodecParameterChange` with `@FlaggedApi(Flags.FLAG_LOUDNESS_CONFIGURATOR_API) to transfer requirement to caller`)\"\n        errorLine1=\"                        if (lcConfig.getSessionId() == sessionId) {\"\n        errorLine2=\"                            ~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/media/java/android/media/LoudnessCodecDispatcher.java\"\n            line=\"85\"\n            column=\"29\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `mediaCodecsConsume()` is a flagged API and should be inside an `if (Flags.loudnessConfiguratorApi())` check (or annotate the surrounding method `dispatchLoudnessCodecParameterChange` with `@FlaggedApi(Flags.FLAG_LOUDNESS_CONFIGURATOR_API) to transfer requirement to caller`)\"\n        errorLine1=\"                            lcConfig.mediaCodecsConsume(mcEntry -> {\"\n        errorLine2=\"                            ^\">\n        <location\n            file=\"frameworks/base/media/java/android/media/LoudnessCodecDispatcher.java\"\n            line=\"86\"\n            column=\"29\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `onLoudnessCodecUpdate()` is a flagged API and should be inside an `if (Flags.loudnessConfiguratorApi())` check (or annotate the surrounding method `dispatchLoudnessCodecParameterChange` with `@FlaggedApi(Flags.FLAG_LOUDNESS_CONFIGURATOR_API) to transfer requirement to caller`)\"\n        errorLine1=\"                                                    l.onLoudnessCodecUpdate(mediaCodec,\"\n        errorLine2=\"                                                    ^\">\n        <location\n            file=\"frameworks/base/media/java/android/media/LoudnessCodecDispatcher.java\"\n            line=\"110\"\n            column=\"53\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.provider.user_keys&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"29\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.provider.user_keys&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"29\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.provider.user_keys&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"29\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.provider.user_keys&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"29\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;com.android.internal.camera.flags.camera_hsum_permission&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"552\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;com.android.internal.camera.flags.camera_privacy_allowlist&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"561\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;com.android.net.thread.platform.flags.thread_enabled_platform&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"992\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.net.platform.flags.register_nsd_offload_engine&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"1055\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.content.pm.quarantined_enabled&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"1101\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.content.pm.quarantined_enabled&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"1101\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;com.android.window.flags.screen_recording_callbacks&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"1310\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;com.android.window.flags.screen_recording_callbacks&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"1310\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;com.android.window.flags.screen_recording_callbacks&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"1310\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;com.android.window.flags.screen_recording_callbacks&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"1310\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;com.android.window.flags.screen_recording_callbacks&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"1310\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.security.frp_enforcement&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"1434\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.security.frp_enforcement&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"1434\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;com.android.internal.telephony.flags.use_oem_domain_selection_service&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"1639\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;com.android.server.telecom.flags.telecom_resolve_hidden_dependencies&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"1726\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;com.android.server.telecom.flags.telecom_resolve_hidden_dependencies&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"1726\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;com.android.server.telecom.flags.telecom_resolve_hidden_dependencies&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"1726\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;com.android.server.telecom.flags.telecom_resolve_hidden_dependencies&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"1726\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.multiuser.enable_permission_to_access_hidden_profiles&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"1839\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.multiuser.enable_permission_to_access_hidden_profiles&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"1839\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.multiuser.enable_permission_to_access_hidden_profiles&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"1839\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.multiuser.enable_permission_to_access_hidden_profiles&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"1839\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.multiuser.enable_permission_to_access_hidden_profiles&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"1839\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.multiuser.enable_permission_to_access_hidden_profiles&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"1839\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.multiuser.enable_permission_to_access_hidden_profiles&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"1839\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.multiuser.enable_permission_to_access_hidden_profiles&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"1839\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.multiuser.enable_permission_to_access_hidden_profiles&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"1839\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.multiuser.enable_permission_to_access_hidden_profiles&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"1839\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.multiuser.enable_permission_to_access_hidden_profiles&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"1839\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.multiuser.enable_permission_to_access_hidden_profiles&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"1839\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.multiuser.enable_permission_to_access_hidden_profiles&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"1839\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.multiuser.enable_permission_to_access_hidden_profiles&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"1839\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.multiuser.enable_permission_to_access_hidden_profiles&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"1839\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.multiuser.enable_permission_to_access_hidden_profiles&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"1839\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.multiuser.enable_permission_to_access_hidden_profiles&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"1839\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.multiuser.enable_permission_to_access_hidden_profiles&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"1839\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.multiuser.enable_permission_to_access_hidden_profiles&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"1848\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.multiuser.enable_permission_to_access_hidden_profiles&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"1848\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.multiuser.enable_permission_to_access_hidden_profiles&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"1848\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.multiuser.enable_permission_to_access_hidden_profiles&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"1848\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.multiuser.enable_permission_to_access_hidden_profiles&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"1848\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.multiuser.enable_permission_to_access_hidden_profiles&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"1848\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.multiuser.enable_permission_to_access_hidden_profiles&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"1848\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.multiuser.enable_permission_to_access_hidden_profiles&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"1848\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.multiuser.enable_permission_to_access_hidden_profiles&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"1848\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.multiuser.enable_permission_to_access_hidden_profiles&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"1848\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.multiuser.enable_permission_to_access_hidden_profiles&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"1848\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.multiuser.enable_permission_to_access_hidden_profiles&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"1848\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.multiuser.enable_permission_to_access_hidden_profiles&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"1848\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.multiuser.enable_permission_to_access_hidden_profiles&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"1848\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.multiuser.enable_permission_to_access_hidden_profiles&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"1848\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.multiuser.enable_permission_to_access_hidden_profiles&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"1848\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.multiuser.enable_permission_to_access_hidden_profiles&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"1848\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.multiuser.enable_permission_to_access_hidden_profiles&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"1848\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;com.android.net.thread.platform.flags.thread_user_restriction_enabled&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"2292\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.app.admin.flags.assist_content_user_restriction_enabled&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"2300\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.app.admin.flags.security_log_v2_enabled&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"2363\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.app.admin.flags.security_log_v2_enabled&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"2363\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.app.admin.flags.security_log_v2_enabled&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"2363\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.app.admin.flags.security_log_v2_enabled&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"2363\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.app.admin.flags.security_log_v2_enabled&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"2363\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.app.admin.flags.device_theft_api_enabled&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"2489\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.app.admin.flags.device_theft_api_enabled&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"2489\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.view.contentprotection.flags.manage_device_policy_enabled&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"2523\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.view.contentprotection.flags.manage_device_policy_enabled&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"2523\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.view.contentprotection.flags.manage_device_policy_enabled&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"2523\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.app.admin.flags.esim_management_enabled&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"2532\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.app.admin.flags.esim_management_enabled&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"2532\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.app.admin.flags.esim_management_enabled&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"2532\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.app.admin.flags.esim_management_enabled&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"2532\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.app.admin.flags.dedicated_device_control_api_enabled&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"2539\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.app.admin.flags.dedicated_device_control_api_enabled&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"2546\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.app.admin.flags.dedicated_device_control_api_enabled&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"2553\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.permission.flags.enhanced_confirmation_mode_apis_enabled&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"2596\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.permission.flags.enhanced_confirmation_mode_apis_enabled&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"2596\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.permission.flags.enhanced_confirmation_mode_apis_enabled&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"2596\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;com.android.window.flags.untrusted_embedding_any_app_permission&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"2661\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;com.android.window.flags.always_update_wallpaper_permission&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"2904\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;com.android.window.flags.always_update_wallpaper_permission&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"2904\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;com.android.server.feature.flags.enable_read_dropbox_permission&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"3364\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;com.android.server.feature.flags.enable_read_dropbox_permission&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"3364\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;com.android.server.feature.flags.enable_read_dropbox_permission&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"3364\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;com.android.server.accessibility.motion_event_observing&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"3584\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.media.tv.flags.enable_ad_service_fw&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"3971\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.content.pm.get_resolved_apk_path&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"4252\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.content.pm.get_resolved_apk_path&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"4252\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.companion.device_presence&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"4465\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.companion.device_presence&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"4465\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.companion.flags.companion_transport_apis&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"4475\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.companion.flags.companion_transport_apis&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"4475\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.companion.flags.companion_transport_apis&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"4475\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.companion.flags.companion_transport_apis&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"4475\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.companion.flags.companion_transport_apis&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"4475\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.companion.flags.companion_transport_apis&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"4475\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;com.android.media.flags.enable_privileged_routing_for_media_routing_control&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"4780\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;com.android.media.flags.enable_privileged_routing_for_media_routing_control&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"4780\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;com.android.media.flags.enable_privileged_routing_for_media_routing_control&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"4780\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;com.android.media.flags.enable_privileged_routing_for_media_routing_control&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"4780\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;com.android.media.flags.enable_privileged_routing_for_media_routing_control&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"4780\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;com.android.media.flags.enable_privileged_routing_for_media_routing_control&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"4780\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;com.android.media.flags.enable_privileged_routing_for_media_routing_control&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"4780\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.app.usage.report_usage_stats_permission&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"4938\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.app.usage.report_usage_stats_permission&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"4938\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.app.usage.report_usage_stats_permission&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"4938\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.app.usage.report_usage_stats_permission&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"4938\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.hardware.biometrics.custom_biometric_prompt&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"5392\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.hardware.biometrics.custom_biometric_prompt&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"5392\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.hardware.biometrics.custom_biometric_prompt&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"5392\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.hardware.biometrics.custom_biometric_prompt&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"5392\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.hardware.biometrics.custom_biometric_prompt&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"5392\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.hardware.biometrics.custom_biometric_prompt&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"5392\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.hardware.biometrics.custom_biometric_prompt&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"5392\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.hardware.biometrics.custom_biometric_prompt&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"5392\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.hardware.biometrics.custom_biometric_prompt&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"5392\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.hardware.biometrics.custom_biometric_prompt&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"5392\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.hardware.biometrics.custom_biometric_prompt&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"5392\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.hardware.biometrics.custom_biometric_prompt&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"5392\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.permission.flags.sensitive_notification_app_protection&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"5535\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;com.android.server.telecom.flags.telecom_resolve_hidden_dependencies&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"5706\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;com.android.server.telecom.flags.telecom_resolve_hidden_dependencies&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"5706\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;com.android.server.telecom.flags.telecom_resolve_hidden_dependencies&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"5706\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;com.android.server.telecom.flags.telecom_resolve_hidden_dependencies&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"5706\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;com.android.server.telecom.flags.telecom_resolve_hidden_dependencies&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"5706\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;com.android.server.telecom.flags.telecom_resolve_hidden_dependencies&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"5706\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;com.android.server.telecom.flags.telecom_resolve_hidden_dependencies&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"5706\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;com.android.server.telecom.flags.telecom_resolve_hidden_dependencies&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"5706\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;com.android.server.telecom.flags.telecom_resolve_hidden_dependencies&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"5706\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;com.android.server.telecom.flags.telecom_resolve_hidden_dependencies&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"5714\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;com.android.server.telecom.flags.telecom_resolve_hidden_dependencies&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"5714\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;com.android.server.telecom.flags.telecom_resolve_hidden_dependencies&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"5714\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;com.android.server.telecom.flags.telecom_resolve_hidden_dependencies&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"5714\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;com.android.server.telecom.flags.telecom_resolve_hidden_dependencies&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"5714\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;com.android.server.telecom.flags.telecom_resolve_hidden_dependencies&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"5714\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;com.android.server.telecom.flags.telecom_resolve_hidden_dependencies&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"5714\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;com.android.server.telecom.flags.telecom_resolve_hidden_dependencies&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"5714\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;com.android.server.telecom.flags.telecom_resolve_hidden_dependencies&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"5714\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.app.contextualsearch.flags.enable_service&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"5829\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.app.contextualsearch.flags.enable_service&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"5829\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.content.pm.introduce_media_processing_type&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"5935\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.content.pm.introduce_media_processing_type&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"5935\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.content.pm.introduce_media_processing_type&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"5935\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.permission.flags.voice_activation_permission_apis&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"6084\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.permission.flags.voice_activation_permission_apis&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"6084\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.nfc.enable_nfc_mainline&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"6304\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.app.ondeviceintelligence.flags.enable_on_device_intelligence&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"6544\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.app.ondeviceintelligence.flags.enable_on_device_intelligence&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"6544\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.app.ondeviceintelligence.flags.enable_on_device_intelligence&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"6544\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.app.ondeviceintelligence.flags.enable_on_device_intelligence&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"6544\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.app.ondeviceintelligence.flags.enable_on_device_intelligence&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"6544\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.app.ondeviceintelligence.flags.enable_on_device_intelligence&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"6544\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.app.ondeviceintelligence.flags.enable_on_device_intelligence&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"6544\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.app.ondeviceintelligence.flags.enable_on_device_intelligence&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"6544\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.app.ondeviceintelligence.flags.enable_on_device_intelligence&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"6544\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.app.ondeviceintelligence.flags.enable_on_device_intelligence&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"6544\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.app.ondeviceintelligence.flags.enable_on_device_intelligence&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"6552\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.app.ondeviceintelligence.flags.enable_on_device_intelligence&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"6560\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.app.get_binding_uid_importance&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"6660\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.app.get_binding_uid_importance&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"6660\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.permission.flags.factory_reset_prep_permission_apis&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"6676\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;com.android.input.flags.override_key_behavior_permission_apis&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"6693\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.view.flags.sensitive_content_app_protection_api&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"6704\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.app.bic_client&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"6715\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.app.bic_client&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"6715\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.app.system_terms_of_address_enabled&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"6723\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.app.system_terms_of_address_enabled&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"6723\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.app.system_terms_of_address_enabled&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"6723\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.content.pm.emergency_install_permission&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"6732\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;com.android.server.power.feature.flags.enable_early_screen_timeout_detector&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"6747\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.security.fsverity_api&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java\"\n            line=\"6755\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Class `LineBreakConfigSpan` is a flagged API and should be inside an `if (Flags.noBreakNoHyphenationSpan())` check (or annotate the surrounding method `buildForMeasurement` with `@FlaggedApi(Flags.FLAG_NO_BREAK_NO_HYPHENATION_SPAN) to transfer requirement to caller`)\"\n        errorLine1=\"                        LineBreakConfigSpan.class);\"\n        errorLine2=\"                        ~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/text/MeasuredParagraph.java\"\n            line=\"471\"\n            column=\"25\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Class `LineBreakConfigSpan` is a flagged API and should be inside an `if (Flags.noBreakNoHyphenationSpan())` check (or annotate the surrounding method `buildForMeasurement` with `@FlaggedApi(Flags.FLAG_NO_BREAK_NO_HYPHENATION_SPAN) to transfer requirement to caller`)\"\n        errorLine1=\"                        LineBreakConfigSpan.class);\"\n        errorLine2=\"                        ~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/text/MeasuredParagraph.java\"\n            line=\"476\"\n            column=\"25\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Class `LineBreakConfigSpan` is a flagged API and should be inside an `if (Flags.noBreakNoHyphenationSpan())` check (or annotate the surrounding method `buildForMeasurement` with `@FlaggedApi(Flags.FLAG_NO_BREAK_NO_HYPHENATION_SPAN) to transfer requirement to caller`)\"\n        errorLine1=\"                        LineBreakConfigSpan.class);\"\n        errorLine2=\"                        ~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/text/MeasuredParagraph.java\"\n            line=\"479\"\n            column=\"25\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Class `LineBreakConfigSpan` is a flagged API and should be inside an `if (Flags.noBreakNoHyphenationSpan())` check (or annotate the surrounding method `buildForStaticLayoutInternal` with `@FlaggedApi(Flags.FLAG_NO_BREAK_NO_HYPHENATION_SPAN) to transfer requirement to caller`)\"\n        errorLine1=\"                            LineBreakConfigSpan.class);\"\n        errorLine2=\"                            ~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/text/MeasuredParagraph.java\"\n            line=\"625\"\n            column=\"29\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Class `LineBreakConfigSpan` is a flagged API and should be inside an `if (Flags.noBreakNoHyphenationSpan())` check (or annotate the surrounding method `buildForStaticLayoutInternal` with `@FlaggedApi(Flags.FLAG_NO_BREAK_NO_HYPHENATION_SPAN) to transfer requirement to caller`)\"\n        errorLine1=\"                            LineBreakConfigSpan.class);\"\n        errorLine2=\"                            ~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/text/MeasuredParagraph.java\"\n            line=\"630\"\n            column=\"29\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Class `LineBreakConfigSpan` is a flagged API and should be inside an `if (Flags.noBreakNoHyphenationSpan())` check (or annotate the surrounding method `buildForStaticLayoutInternal` with `@FlaggedApi(Flags.FLAG_NO_BREAK_NO_HYPHENATION_SPAN) to transfer requirement to caller`)\"\n        errorLine1=\"                                                       LineBreakConfigSpan.class);\"\n        errorLine2=\"                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/text/MeasuredParagraph.java\"\n            line=\"634\"\n            column=\"56\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `onAppendReplacementRun()` is a flagged API and should be inside an `if (Flags.noBreakNoHyphenationSpan())` check (or annotate the surrounding method `applyReplacementRun` with `@FlaggedApi(Flags.FLAG_NO_BREAK_NO_HYPHENATION_SPAN) to transfer requirement to caller`)\"\n        errorLine1=\"            testCallback.onAppendReplacementRun(paint, end - start, width);\"\n        errorLine2=\"            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/text/MeasuredParagraph.java\"\n            line=\"784\"\n            column=\"13\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `TEXT_RUN_FLAG_LEFT_EDGE` is a flagged API and should be inside an `if (Flags.letterSpacingJustification())` check (or annotate the surrounding method `applyStyleRun` with `@FlaggedApi(Flags.FLAG_LETTER_SPACING_JUSTIFICATION) to transfer requirement to caller`)\"\n        errorLine1=\"                        | (Paint.TEXT_RUN_FLAG_LEFT_EDGE | Paint.TEXT_RUN_FLAG_RIGHT_EDGE));\"\n        errorLine2=\"                                 ~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/text/MeasuredParagraph.java\"\n            line=\"802\"\n            column=\"34\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `TEXT_RUN_FLAG_RIGHT_EDGE` is a flagged API and should be inside an `if (Flags.letterSpacingJustification())` check (or annotate the surrounding method `applyStyleRun` with `@FlaggedApi(Flags.FLAG_LETTER_SPACING_JUSTIFICATION) to transfer requirement to caller`)\"\n        errorLine1=\"                        | (Paint.TEXT_RUN_FLAG_LEFT_EDGE | Paint.TEXT_RUN_FLAG_RIGHT_EDGE));\"\n        errorLine2=\"                                                                 ~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/text/MeasuredParagraph.java\"\n            line=\"802\"\n            column=\"66\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `onAppendStyleRun()` is a flagged API and should be inside an `if (Flags.noBreakNoHyphenationSpan())` check (or annotate the surrounding method `applyStyleRun` with `@FlaggedApi(Flags.FLAG_NO_BREAK_NO_HYPHENATION_SPAN) to transfer requirement to caller`)\"\n        errorLine1=\"                testCallback.onAppendStyleRun(paint, config, end - start, false);\"\n        errorLine2=\"                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/text/MeasuredParagraph.java\"\n            line=\"814\"\n            column=\"17\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `TEXT_RUN_FLAG_LEFT_EDGE` is a flagged API and should be inside an `if (Flags.letterSpacingJustification())` check (or annotate the surrounding method `applyStyleRun` with `@FlaggedApi(Flags.FLAG_LETTER_SPACING_JUSTIFICATION) to transfer requirement to caller`)\"\n        errorLine1=\"                                | (Paint.TEXT_RUN_FLAG_LEFT_EDGE | Paint.TEXT_RUN_FLAG_RIGHT_EDGE));\"\n        errorLine2=\"                                         ~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/text/MeasuredParagraph.java\"\n            line=\"828\"\n            column=\"42\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `TEXT_RUN_FLAG_RIGHT_EDGE` is a flagged API and should be inside an `if (Flags.letterSpacingJustification())` check (or annotate the surrounding method `applyStyleRun` with `@FlaggedApi(Flags.FLAG_LETTER_SPACING_JUSTIFICATION) to transfer requirement to caller`)\"\n        errorLine1=\"                                | (Paint.TEXT_RUN_FLAG_LEFT_EDGE | Paint.TEXT_RUN_FLAG_RIGHT_EDGE));\"\n        errorLine2=\"                                                                         ~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/text/MeasuredParagraph.java\"\n            line=\"828\"\n            column=\"74\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `onAppendStyleRun()` is a flagged API and should be inside an `if (Flags.noBreakNoHyphenationSpan())` check (or annotate the surrounding method `applyStyleRun` with `@FlaggedApi(Flags.FLAG_NO_BREAK_NO_HYPHENATION_SPAN) to transfer requirement to caller`)\"\n        errorLine1=\"                        testCallback.onAppendStyleRun(paint, config, levelEnd - levelStart, isRtl);\"\n        errorLine2=\"                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/text/MeasuredParagraph.java\"\n            line=\"840\"\n            column=\"25\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `getLineBreakConfig()` is a flagged API and should be inside an `if (Flags.noBreakNoHyphenationSpan())` check (or annotate the surrounding method `applyMetricsAffectingSpan` with `@FlaggedApi(Flags.FLAG_NO_BREAK_NO_HYPHENATION_SPAN) to transfer requirement to caller`)\"\n        errorLine1=\"                mLineBreakConfigBuilder.merge(lbcSpan.getLineBreakConfig());\"\n        errorLine2=\"                                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/text/MeasuredParagraph.java\"\n            line=\"888\"\n            column=\"47\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `merge()` is a flagged API and should be inside an `if (Flags.noBreakNoHyphenationSpan())` check (or annotate the surrounding method `applyMetricsAffectingSpan` with `@FlaggedApi(Flags.FLAG_NO_BREAK_NO_HYPHENATION_SPAN) to transfer requirement to caller`)\"\n        errorLine1=\"                mLineBreakConfigBuilder.merge(lbcSpan.getLineBreakConfig());\"\n        errorLine2=\"                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/text/MeasuredParagraph.java\"\n            line=\"888\"\n            column=\"17\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `HYPHENATION_ENABLED` is a flagged API and should be inside an `if (Flags.noBreakNoHyphenationSpan())` check (or annotate the surrounding method `appendStyleRun` with `@FlaggedApi(Flags.FLAG_NO_BREAK_NO_HYPHENATION_SPAN) to transfer requirement to caller`)\"\n        errorLine1=\"                    == LineBreakConfig.HYPHENATION_ENABLED;\"\n        errorLine2=\"                                       ~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/graphics/java/android/graphics/text/MeasuredText.java\"\n            line=\"319\"\n            column=\"40\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `onOutputBuffersAvailable()` is a flagged API and should be inside an `if (Flags.largeAudioFrame())` check (or annotate the surrounding method `handleCallback` with `@FlaggedApi(Flags.FLAG_LARGE_AUDIO_FRAME) to transfer requirement to caller`)\"\n        errorLine1=\"                    mCallback.onOutputBuffersAvailable(\"\n        errorLine2=\"                    ^\">\n        <location\n            file=\"frameworks/base/media/java/android/media/MediaCodec.java\"\n            line=\"1985\"\n            column=\"21\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `CONFIGURE_FLAG_DETACHED_SURFACE` is a flagged API and should be inside an `if (Flags.nullOutputSurface())` check (or annotate the surrounding method `configure` with `@FlaggedApi(Flags.FLAG_NULL_OUTPUT_SURFACE) to transfer requirement to caller`)\"\n        errorLine1=\"            if (surface == null &amp;&amp; (flags &amp; CONFIGURE_FLAG_DETACHED_SURFACE) != 0 &amp;&amp; !canDetach) {\"\n        errorLine2=\"                                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/media/java/android/media/MediaCodec.java\"\n            line=\"2371\"\n            column=\"45\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `CONFIGURE_FLAG_DETACHED_SURFACE` is a flagged API and should be inside an `if (Flags.nullOutputSurface())` check (or annotate the surrounding method `configure` with `@FlaggedApi(Flags.FLAG_NULL_OUTPUT_SURFACE) to transfer requirement to caller`)\"\n        errorLine1=\"            if (surface == null &amp;&amp; (flags &amp; CONFIGURE_FLAG_DETACHED_SURFACE) != 0) {\"\n        errorLine2=\"                                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/media/java/android/media/MediaCodec.java\"\n            line=\"2422\"\n            column=\"45\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `FEATURE_DynamicColorAspects` is a flagged API and should be inside an `if (Flags.dynamicColorAspects())` check (or annotate the surrounding method `getDecoderFeatures` with `@FlaggedApi(Flags.FLAG_DYNAMIC_COLOR_ASPECTS) to transfer requirement to caller`)\"\n        errorLine1=\"                    features.add(new Feature(FEATURE_DynamicColorAspects, (1 &lt;&lt; 8), true));\"\n        errorLine2=\"                                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/media/java/android/media/MediaCodecInfo.java\"\n            line=\"832\"\n            column=\"46\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `FEATURE_DetachedSurface` is a flagged API and should be inside an `if (Flags.nullOutputSurface())` check (or annotate the surrounding method `getDecoderFeatures` with `@FlaggedApi(Flags.FLAG_NULL_OUTPUT_SURFACE) to transfer requirement to caller`)\"\n        errorLine1=\"                    features.add(new Feature(FEATURE_DetachedSurface,     (1 &lt;&lt; 9), true));\"\n        errorLine2=\"                                             ~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/media/java/android/media/MediaCodecInfo.java\"\n            line=\"835\"\n            column=\"46\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `FEATURE_HlgEditing` is a flagged API and should be inside an `if (Flags.hlgEditing())` check (or annotate the surrounding method `getEncoderFeatures` with `@FlaggedApi(Flags.FLAG_HLG_EDITING) to transfer requirement to caller`)\"\n        errorLine1=\"                    features.add(new Feature(FEATURE_HlgEditing, (1 &lt;&lt; 6), true));\"\n        errorLine2=\"                                             ~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/media/java/android/media/MediaCodecInfo.java\"\n            line=\"856\"\n            column=\"46\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `FEATURE_Roi` is a flagged API and should be inside an `if (Flags.regionOfInterest())` check (or annotate the surrounding method `getEncoderFeatures` with `@FlaggedApi(Flags.FLAG_REGION_OF_INTEREST) to transfer requirement to caller`)\"\n        errorLine1=\"                    features.add(new Feature(FEATURE_Roi, (1 &lt;&lt; 7), true));\"\n        errorLine2=\"                                             ~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/media/java/android/media/MediaCodecInfo.java\"\n            line=\"859\"\n            column=\"46\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `TYPE_HDMI_ARC` is a flagged API and should be inside an `if (Flags.enableAudioPoliciesDeviceAndBluetoothController())` check (or annotate the surrounding method `getDeviceTypeString` with `@FlaggedApi(Flags.FLAG_ENABLE_AUDIO_POLICIES_DEVICE_AND_BLUETOOTH_CONTROLLER) to transfer requirement to caller`)\"\n        errorLine1=\"            case TYPE_HDMI_ARC:\"\n        errorLine2=\"                 ~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/media/java/android/media/MediaRoute2Info.java\"\n            line=\"1030\"\n            column=\"18\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `TYPE_HDMI_EARC` is a flagged API and should be inside an `if (Flags.enableAudioPoliciesDeviceAndBluetoothController())` check (or annotate the surrounding method `getDeviceTypeString` with `@FlaggedApi(Flags.FLAG_ENABLE_AUDIO_POLICIES_DEVICE_AND_BLUETOOTH_CONTROLLER) to transfer requirement to caller`)\"\n        errorLine1=\"            case TYPE_HDMI_EARC:\"\n        errorLine2=\"                 ~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/media/java/android/media/MediaRoute2Info.java\"\n            line=\"1032\"\n            column=\"18\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `TYPE_REMOTE_TABLET` is a flagged API and should be inside an `if (Flags.enableNewMediaRoute2InfoTypes())` check (or annotate the surrounding method `getDeviceTypeString` with `@FlaggedApi(Flags.FLAG_ENABLE_NEW_MEDIA_ROUTE_2_INFO_TYPES) to transfer requirement to caller`)\"\n        errorLine1=\"            case TYPE_REMOTE_TABLET:\"\n        errorLine2=\"                 ~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/media/java/android/media/MediaRoute2Info.java\"\n            line=\"1050\"\n            column=\"18\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `TYPE_REMOTE_TABLET_DOCKED` is a flagged API and should be inside an `if (Flags.enableNewMediaRoute2InfoTypes())` check (or annotate the surrounding method `getDeviceTypeString` with `@FlaggedApi(Flags.FLAG_ENABLE_NEW_MEDIA_ROUTE_2_INFO_TYPES) to transfer requirement to caller`)\"\n        errorLine1=\"            case TYPE_REMOTE_TABLET_DOCKED:\"\n        errorLine2=\"                 ~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/media/java/android/media/MediaRoute2Info.java\"\n            line=\"1052\"\n            column=\"18\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `TYPE_REMOTE_COMPUTER` is a flagged API and should be inside an `if (Flags.enableNewMediaRoute2InfoTypes())` check (or annotate the surrounding method `getDeviceTypeString` with `@FlaggedApi(Flags.FLAG_ENABLE_NEW_MEDIA_ROUTE_2_INFO_TYPES) to transfer requirement to caller`)\"\n        errorLine1=\"            case TYPE_REMOTE_COMPUTER:\"\n        errorLine2=\"                 ~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/media/java/android/media/MediaRoute2Info.java\"\n            line=\"1054\"\n            column=\"18\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `TYPE_REMOTE_GAME_CONSOLE` is a flagged API and should be inside an `if (Flags.enableNewMediaRoute2InfoTypes())` check (or annotate the surrounding method `getDeviceTypeString` with `@FlaggedApi(Flags.FLAG_ENABLE_NEW_MEDIA_ROUTE_2_INFO_TYPES) to transfer requirement to caller`)\"\n        errorLine1=\"            case TYPE_REMOTE_GAME_CONSOLE:\"\n        errorLine2=\"                 ~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/media/java/android/media/MediaRoute2Info.java\"\n            line=\"1056\"\n            column=\"18\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `TYPE_REMOTE_CAR` is a flagged API and should be inside an `if (Flags.enableNewMediaRoute2InfoTypes())` check (or annotate the surrounding method `getDeviceTypeString` with `@FlaggedApi(Flags.FLAG_ENABLE_NEW_MEDIA_ROUTE_2_INFO_TYPES) to transfer requirement to caller`)\"\n        errorLine1=\"            case TYPE_REMOTE_CAR:\"\n        errorLine2=\"                 ~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/media/java/android/media/MediaRoute2Info.java\"\n            line=\"1058\"\n            column=\"18\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `TYPE_REMOTE_SMARTWATCH` is a flagged API and should be inside an `if (Flags.enableNewMediaRoute2InfoTypes())` check (or annotate the surrounding method `getDeviceTypeString` with `@FlaggedApi(Flags.FLAG_ENABLE_NEW_MEDIA_ROUTE_2_INFO_TYPES) to transfer requirement to caller`)\"\n        errorLine1=\"            case TYPE_REMOTE_SMARTWATCH:\"\n        errorLine2=\"                 ~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/media/java/android/media/MediaRoute2Info.java\"\n            line=\"1060\"\n            column=\"18\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `TYPE_REMOTE_SMARTPHONE` is a flagged API and should be inside an `if (Flags.enableNewMediaRoute2InfoTypes())` check (or annotate the surrounding method `getDeviceTypeString` with `@FlaggedApi(Flags.FLAG_ENABLE_NEW_MEDIA_ROUTE_2_INFO_TYPES) to transfer requirement to caller`)\"\n        errorLine1=\"            case TYPE_REMOTE_SMARTPHONE:\"\n        errorLine2=\"                 ~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/media/java/android/media/MediaRoute2Info.java\"\n            line=\"1062\"\n            column=\"18\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `SUITABILITY_STATUS_SUITABLE_FOR_DEFAULT_TRANSFER` is a flagged API and should be inside an `if (Flags.enableBuiltInSpeakerRouteSuitabilityStatuses())` check (or annotate the surrounding method `Builder` with `@FlaggedApi(Flags.FLAG_ENABLE_BUILT_IN_SPEAKER_ROUTE_SUITABILITY_STATUSES) to transfer requirement to caller`)\"\n        errorLine1=\"            mSuitabilityStatus = SUITABILITY_STATUS_SUITABLE_FOR_DEFAULT_TRANSFER;\"\n        errorLine2=\"                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/media/java/android/media/MediaRoute2Info.java\"\n            line=\"1122\"\n            column=\"34\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `OPSTR_MEDIA_ROUTING_CONTROL` is a flagged API and should be inside an `if (Flags.enablePrivilegedRoutingForMediaRoutingControl())` check (or annotate the surrounding method `checkCallerHasOnlyRevocablePermissions` with `@FlaggedApi(Flags.FLAG_ENABLE_PRIVILEGED_ROUTING_FOR_MEDIA_ROUTING_CONTROL) to transfer requirement to caller`)\"\n        errorLine1=\"                                AppOpsManager.OPSTR_MEDIA_ROUTING_CONTROL,\"\n        errorLine2=\"                                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/media/java/android/media/MediaRouter2.java\"\n            line=\"457\"\n            column=\"47\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `CAPABILITY_TYPE_CALL_COMPOSER_BUSINESS_ONLY` is a flagged API and should be inside an `if (Flags.businessCallComposer())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_BUSINESS_CALL_COMPOSER) to transfer requirement to caller`)\"\n        errorLine1=\"                CAPABILITY_TYPE_CALL_COMPOSER_BUSINESS_ONLY + 1;\"\n        errorLine2=\"                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/telephony/java/android/telephony/ims/feature/MmTelFeature.java\"\n            line=\"574\"\n            column=\"17\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `CAPABILITY_TYPE_CALL_COMPOSER_BUSINESS_ONLY` is a flagged API and should be inside an `if (Flags.businessCallComposer())` check (or annotate the surrounding method `toString` with `@FlaggedApi(Flags.FLAG_BUSINESS_CALL_COMPOSER) to transfer requirement to caller`)\"\n        errorLine1=\"            builder.append(isCapable(CAPABILITY_TYPE_CALL_COMPOSER_BUSINESS_ONLY));\"\n        errorLine2=\"                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/telephony/java/android/telephony/ims/feature/MmTelFeature.java\"\n            line=\"622\"\n            column=\"38\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `isReliable()` is a flagged API and should be inside an `if (Flags.reliableMessage())` check (or annotate the surrounding method `equals` with `@FlaggedApi(Flags.FLAG_RELIABLE_MESSAGE) to transfer requirement to caller`)\"\n        errorLine1=\"                            || (other.isReliable() == mIsReliable))\"\n        errorLine2=\"                                ~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/hardware/location/NanoAppMessage.java\"\n            line=\"269\"\n            column=\"33\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `getMessageSequenceNumber()` is a flagged API and should be inside an `if (Flags.reliableMessage())` check (or annotate the surrounding method `equals` with `@FlaggedApi(Flags.FLAG_RELIABLE_MESSAGE) to transfer requirement to caller`)\"\n        errorLine1=\"                            || (other.getMessageSequenceNumber() == mMessageSequenceNumber));\"\n        errorLine2=\"                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/hardware/location/NanoAppMessage.java\"\n            line=\"271\"\n            column=\"33\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `SERVICE_TYPE_MMS` is a flagged API and should be inside an `if (Flags.carrierEnabledSatelliteFlag())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_CARRIER_ENABLED_SATELLITE_FLAG) to transfer requirement to caller`)\"\n        errorLine1=\"    public static final int LAST_SERVICE_TYPE = SERVICE_TYPE_MMS;\"\n        errorLine2=\"                                                ~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/telephony/java/android/telephony/NetworkRegistrationInfo.java\"\n            line=\"219\"\n            column=\"49\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `SERVICE_TYPE_MMS` is a flagged API and should be inside an `if (Flags.carrierEnabledSatelliteFlag())` check (or annotate the surrounding method `serviceTypeToString` with `@FlaggedApi(Flags.FLAG_CARRIER_ENABLED_SATELLITE_FLAG) to transfer requirement to caller`)\"\n        errorLine1=\"            case SERVICE_TYPE_MMS: return &quot;MMS&quot;;\"\n        errorLine2=\"                 ~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/telephony/java/android/telephony/NetworkRegistrationInfo.java\"\n            line=\"759\"\n            column=\"18\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `getVibrationEffect()` is a flagged API and should be inside an `if (Flags.notificationChannelVibrationEffectApi())` check (or annotate the surrounding method `writeXml` with `@FlaggedApi(Flags.FLAG_NOTIFICATION_CHANNEL_VIBRATION_EFFECT_API) to transfer requirement to caller`)\"\n        errorLine1=\"        if (getVibrationEffect() != null) {\"\n        errorLine2=\"            ~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/app/NotificationChannel.java\"\n            line=\"1333\"\n            column=\"13\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `getVibrationEffect()` is a flagged API and should be inside an `if (Flags.notificationChannelVibrationEffectApi())` check (or annotate the surrounding method `writeXml` with `@FlaggedApi(Flags.FLAG_NOTIFICATION_CHANNEL_VIBRATION_EFFECT_API) to transfer requirement to caller`)\"\n        errorLine1=\"            out.attribute(null, ATT_VIBRATION_EFFECT, vibrationToString(getVibrationEffect()));\"\n        errorLine2=\"                                                                        ~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/app/NotificationChannel.java\"\n            line=\"1334\"\n            column=\"73\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `getVibrationEffect()` is a flagged API and should be inside an `if (Flags.notificationChannelVibrationEffectApi())` check (or annotate the surrounding method `toJson` with `@FlaggedApi(Flags.FLAG_NOTIFICATION_CHANNEL_VIBRATION_EFFECT_API) to transfer requirement to caller`)\"\n        errorLine1=\"        if (getVibrationEffect() != null) {\"\n        errorLine2=\"            ~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/app/NotificationChannel.java\"\n            line=\"1416\"\n            column=\"13\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `getVibrationEffect()` is a flagged API and should be inside an `if (Flags.notificationChannelVibrationEffectApi())` check (or annotate the surrounding method `toJson` with `@FlaggedApi(Flags.FLAG_NOTIFICATION_CHANNEL_VIBRATION_EFFECT_API) to transfer requirement to caller`)\"\n        errorLine1=\"            record.put(ATT_VIBRATION_EFFECT, vibrationToString(getVibrationEffect()));\"\n        errorLine2=\"                                                               ~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/app/NotificationChannel.java\"\n            line=\"1417\"\n            column=\"64\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `getVibrationEffect()` is a flagged API and should be inside an `if (Flags.notificationChannelVibrationEffectApi())` check (or annotate the surrounding method `equals` with `@FlaggedApi(Flags.FLAG_NOTIFICATION_CHANNEL_VIBRATION_EFFECT_API) to transfer requirement to caller`)\"\n        errorLine1=\"                &amp;&amp; Objects.equals(getVibrationEffect(), that.getVibrationEffect())\"\n        errorLine2=\"                                  ~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/app/NotificationChannel.java\"\n            line=\"1545\"\n            column=\"35\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `getVibrationEffect()` is a flagged API and should be inside an `if (Flags.notificationChannelVibrationEffectApi())` check (or annotate the surrounding method `equals` with `@FlaggedApi(Flags.FLAG_NOTIFICATION_CHANNEL_VIBRATION_EFFECT_API) to transfer requirement to caller`)\"\n        errorLine1=\"                &amp;&amp; Objects.equals(getVibrationEffect(), that.getVibrationEffect())\"\n        errorLine2=\"                                                        ~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/app/NotificationChannel.java\"\n            line=\"1545\"\n            column=\"57\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `getVibrationEffect()` is a flagged API and should be inside an `if (Flags.notificationChannelVibrationEffectApi())` check (or annotate the surrounding method `hashCode` with `@FlaggedApi(Flags.FLAG_NOTIFICATION_CHANNEL_VIBRATION_EFFECT_API) to transfer requirement to caller`)\"\n        errorLine1=\"                mImportanceLockedDefaultApp, mOriginalImportance, getVibrationEffect(),\"\n        errorLine2=\"                                                                  ~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/app/NotificationChannel.java\"\n            line=\"1563\"\n            column=\"67\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `addAutomaticZenRule()` is a flagged API and should be inside an `if (Flags.modesApi())` check (or annotate the surrounding method `addAutomaticZenRule` with `@FlaggedApi(Flags.FLAG_MODES_API) to transfer requirement to caller`)\"\n        errorLine1=\"        return addAutomaticZenRule(automaticZenRule, /* fromUser= */ false);\"\n        errorLine2=\"               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/app/NotificationManager.java\"\n            line=\"1368\"\n            column=\"16\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `updateAutomaticZenRule()` is a flagged API and should be inside an `if (Flags.modesApi())` check (or annotate the surrounding method `updateAutomaticZenRule` with `@FlaggedApi(Flags.FLAG_MODES_API) to transfer requirement to caller`)\"\n        errorLine1=\"        return updateAutomaticZenRule(id, automaticZenRule, /* fromUser= */ false);\"\n        errorLine2=\"               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/app/NotificationManager.java\"\n            line=\"1404\"\n            column=\"16\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `removeAutomaticZenRule()` is a flagged API and should be inside an `if (Flags.modesApi())` check (or annotate the surrounding method `removeAutomaticZenRule` with `@FlaggedApi(Flags.FLAG_MODES_API) to transfer requirement to caller`)\"\n        errorLine1=\"        return removeAutomaticZenRule(id, /* fromUser= */ false);\"\n        errorLine2=\"               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/app/NotificationManager.java\"\n            line=\"1473\"\n            column=\"16\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `ROLLBACK_USER_IMPACT_LOW` is a flagged API and should be inside an `if (Flags.recoverabilityDetection())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_RECOVERABILITY_DETECTION) to transfer requirement to caller`)\"\n        errorLine1=\"        public int rollbackImpactLevel = PackageManager.ROLLBACK_USER_IMPACT_LOW;\"\n        errorLine2=\"                                                        ~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/content/pm/PackageInstaller.java\"\n            line=\"2789\"\n            column=\"57\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `isArchived` is a flagged API and should be inside an `if (Flags.archiving())` check (or annotate the surrounding method `PackageItemInfo` with `@FlaggedApi(Flags.FLAG_ARCHIVING) to transfer requirement to caller`)\"\n        errorLine1=\"        isArchived = orig.isArchived;\"\n        errorLine2=\"        ~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/content/pm/PackageItemInfo.java\"\n            line=\"204\"\n            column=\"9\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `isArchived` is a flagged API and should be inside an `if (Flags.archiving())` check (or annotate the surrounding method `PackageItemInfo` with `@FlaggedApi(Flags.FLAG_ARCHIVING) to transfer requirement to caller`)\"\n        errorLine1=\"        isArchived = orig.isArchived;\"\n        errorLine2=\"                          ~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/content/pm/PackageItemInfo.java\"\n            line=\"204\"\n            column=\"27\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `isArchived` is a flagged API and should be inside an `if (Flags.archiving())` check (or annotate the surrounding method `writeToParcel` with `@FlaggedApi(Flags.FLAG_ARCHIVING) to transfer requirement to caller`)\"\n        errorLine1=\"        dest.writeBoolean(isArchived);\"\n        errorLine2=\"                          ~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/content/pm/PackageItemInfo.java\"\n            line=\"470\"\n            column=\"27\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `isArchived` is a flagged API and should be inside an `if (Flags.archiving())` check (or annotate the surrounding method `dumpDebug` with `@FlaggedApi(Flags.FLAG_ARCHIVING) to transfer requirement to caller`)\"\n        errorLine1=\"        proto.write(PackageItemInfoProto.IS_ARCHIVED, isArchived);\"\n        errorLine2=\"                                                      ~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/content/pm/PackageItemInfo.java\"\n            line=\"488\"\n            column=\"55\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `isArchived` is a flagged API and should be inside an `if (Flags.archiving())` check (or annotate the surrounding method `PackageItemInfo` with `@FlaggedApi(Flags.FLAG_ARCHIVING) to transfer requirement to caller`)\"\n        errorLine1=\"        isArchived = source.readBoolean();\"\n        errorLine2=\"        ~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/content/pm/PackageItemInfo.java\"\n            line=\"503\"\n            column=\"9\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `PERSISTENT_DEVICE_ID_DEFAULT` is a flagged API and should be inside an `if (Flags.persistentDeviceIdApi())` check (or annotate the surrounding method `onPermissionsChanged` with `@FlaggedApi(Flags.FLAG_PERSISTENT_DEVICE_ID_API) to transfer requirement to caller`)\"\n        errorLine1=\"                    VirtualDeviceManager.PERSISTENT_DEVICE_ID_DEFAULT)) {\"\n        errorLine2=\"                                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/content/pm/PackageManager.java\"\n            line=\"766\"\n            column=\"42\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `EXTRA_ARCHIVAL` is a flagged API and should be inside an `if (Flags.archiving())` check (or annotate the surrounding method `doHandlePackageEvent` with `@FlaggedApi(Flags.FLAG_ARCHIVING) to transfer requirement to caller`)\"\n        errorLine1=\"                    if (intent.getBooleanExtra(Intent.EXTRA_ARCHIVAL, false)) {\"\n        errorLine2=\"                                                      ~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/com/android/internal/content/PackageMonitor.java\"\n            line=\"491\"\n            column=\"55\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `ACTION_PACKAGE_UNSTOPPED` is a flagged API and should be inside an `if (Flags.stayStopped())` check (or annotate the surrounding method `doHandlePackageEvent` with `@FlaggedApi(Flags.FLAG_STAY_STOPPED) to transfer requirement to caller`)\"\n        errorLine1=\"        } else if (Intent.ACTION_PACKAGE_UNSTOPPED.equals(action)) {\"\n        errorLine2=\"                          ~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/com/android/internal/content/PackageMonitor.java\"\n            line=\"582\"\n            column=\"27\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `TEXT_RUN_FLAG_LEFT_EDGE` is a flagged API and should be inside an `if (Flags.letterSpacingJustification())` check (or annotate the surrounding method `measureText` with `@FlaggedApi(Flags.FLAG_LETTER_SPACING_JUSTIFICATION) to transfer requirement to caller`)\"\n        errorLine1=\"        setFlags(getFlags() | (TEXT_RUN_FLAG_LEFT_EDGE | TEXT_RUN_FLAG_RIGHT_EDGE));\"\n        errorLine2=\"                               ~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/graphics/java/android/graphics/Paint.java\"\n            line=\"2587\"\n            column=\"32\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `TEXT_RUN_FLAG_RIGHT_EDGE` is a flagged API and should be inside an `if (Flags.letterSpacingJustification())` check (or annotate the surrounding method `measureText` with `@FlaggedApi(Flags.FLAG_LETTER_SPACING_JUSTIFICATION) to transfer requirement to caller`)\"\n        errorLine1=\"        setFlags(getFlags() | (TEXT_RUN_FLAG_LEFT_EDGE | TEXT_RUN_FLAG_RIGHT_EDGE));\"\n        errorLine2=\"                                                         ~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/graphics/java/android/graphics/Paint.java\"\n            line=\"2587\"\n            column=\"58\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `TEXT_RUN_FLAG_LEFT_EDGE` is a flagged API and should be inside an `if (Flags.letterSpacingJustification())` check (or annotate the surrounding method `measureText` with `@FlaggedApi(Flags.FLAG_LETTER_SPACING_JUSTIFICATION) to transfer requirement to caller`)\"\n        errorLine1=\"        setFlags(getFlags() | (TEXT_RUN_FLAG_LEFT_EDGE | TEXT_RUN_FLAG_RIGHT_EDGE));\"\n        errorLine2=\"                               ~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/graphics/java/android/graphics/Paint.java\"\n            line=\"2626\"\n            column=\"32\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `TEXT_RUN_FLAG_RIGHT_EDGE` is a flagged API and should be inside an `if (Flags.letterSpacingJustification())` check (or annotate the surrounding method `measureText` with `@FlaggedApi(Flags.FLAG_LETTER_SPACING_JUSTIFICATION) to transfer requirement to caller`)\"\n        errorLine1=\"        setFlags(getFlags() | (TEXT_RUN_FLAG_LEFT_EDGE | TEXT_RUN_FLAG_RIGHT_EDGE));\"\n        errorLine2=\"                                                         ~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/graphics/java/android/graphics/Paint.java\"\n            line=\"2626\"\n            column=\"58\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `TEXT_RUN_FLAG_LEFT_EDGE` is a flagged API and should be inside an `if (Flags.letterSpacingJustification())` check (or annotate the surrounding method `getTextWidths` with `@FlaggedApi(Flags.FLAG_LETTER_SPACING_JUSTIFICATION) to transfer requirement to caller`)\"\n        errorLine1=\"        setFlags(getFlags() | (TEXT_RUN_FLAG_LEFT_EDGE | TEXT_RUN_FLAG_RIGHT_EDGE));\"\n        errorLine2=\"                               ~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/graphics/java/android/graphics/Paint.java\"\n            line=\"2846\"\n            column=\"32\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `TEXT_RUN_FLAG_RIGHT_EDGE` is a flagged API and should be inside an `if (Flags.letterSpacingJustification())` check (or annotate the surrounding method `getTextWidths` with `@FlaggedApi(Flags.FLAG_LETTER_SPACING_JUSTIFICATION) to transfer requirement to caller`)\"\n        errorLine1=\"        setFlags(getFlags() | (TEXT_RUN_FLAG_LEFT_EDGE | TEXT_RUN_FLAG_RIGHT_EDGE));\"\n        errorLine2=\"                                                         ~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/graphics/java/android/graphics/Paint.java\"\n            line=\"2846\"\n            column=\"58\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `TEXT_RUN_FLAG_LEFT_EDGE` is a flagged API and should be inside an `if (Flags.letterSpacingJustification())` check (or annotate the surrounding method `getTextWidths` with `@FlaggedApi(Flags.FLAG_LETTER_SPACING_JUSTIFICATION) to transfer requirement to caller`)\"\n        errorLine1=\"        setFlags(getFlags() | (TEXT_RUN_FLAG_LEFT_EDGE | TEXT_RUN_FLAG_RIGHT_EDGE));\"\n        errorLine2=\"                               ~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/graphics/java/android/graphics/Paint.java\"\n            line=\"2936\"\n            column=\"32\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `TEXT_RUN_FLAG_RIGHT_EDGE` is a flagged API and should be inside an `if (Flags.letterSpacingJustification())` check (or annotate the surrounding method `getTextWidths` with `@FlaggedApi(Flags.FLAG_LETTER_SPACING_JUSTIFICATION) to transfer requirement to caller`)\"\n        errorLine1=\"        setFlags(getFlags() | (TEXT_RUN_FLAG_LEFT_EDGE | TEXT_RUN_FLAG_RIGHT_EDGE));\"\n        errorLine2=\"                                                         ~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/graphics/java/android/graphics/Paint.java\"\n            line=\"2936\"\n            column=\"58\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `isMgf1DigestsSpecified()` is a flagged API and should be inside an `if (Flags.mgf1DigestSetterV2())` check (or annotate the surrounding method `writeToParcel` with `@FlaggedApi(Flags.FLAG_MGF1_DIGEST_SETTER_V2) to transfer requirement to caller`)\"\n        errorLine1=\"        if (mSpec.isMgf1DigestsSpecified()) {\"\n        errorLine2=\"            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/keystore/java/android/security/keystore/ParcelableKeyGenParameterSpec.java\"\n            line=\"98\"\n            column=\"13\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `getMgf1Digests()` is a flagged API and should be inside an `if (Flags.mgf1DigestSetterV2())` check (or annotate the surrounding method `writeToParcel` with `@FlaggedApi(Flags.FLAG_MGF1_DIGEST_SETTER_V2) to transfer requirement to caller`)\"\n        errorLine1=\"            out.writeStringList(List.copyOf(mSpec.getMgf1Digests()));\"\n        errorLine2=\"                                            ~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/keystore/java/android/security/keystore/ParcelableKeyGenParameterSpec.java\"\n            line=\"99\"\n            column=\"45\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `computeBounds()` is a flagged API and should be inside an `if (Flags.exactComputeBounds())` check (or annotate the surrounding method `computeBounds` with `@FlaggedApi(Flags.FLAG_EXACT_COMPUTE_BOUNDS) to transfer requirement to caller`)\"\n        errorLine1=\"        computeBounds(bounds);\"\n        errorLine2=\"        ~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/graphics/java/android/graphics/Path.java\"\n            line=\"310\"\n            column=\"9\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `onOneTimePermissionSessionTimeout()` is a flagged API and should be inside an `if (Flags.deviceAwarePermissionApisEnabled())` check (or annotate the surrounding method `notifyOneTimePermissionSessionTimeout` with `@FlaggedApi(Flags.FLAG_DEVICE_AWARE_PERMISSION_APIS_ENABLED) to transfer requirement to caller`)\"\n        errorLine1=\"                onOneTimePermissionSessionTimeout(packageName, deviceId);\"\n        errorLine2=\"                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/permission/PermissionControllerService.java\"\n            line=\"672\"\n            column=\"17\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `onRevokeSelfPermissionsOnKill()` is a flagged API and should be inside an `if (Flags.deviceAwarePermissionApisEnabled())` check (or annotate the surrounding method `revokeSelfPermissionsOnKill` with `@FlaggedApi(Flags.FLAG_DEVICE_AWARE_PERMISSION_APIS_ENABLED) to transfer requirement to caller`)\"\n        errorLine1=\"                    onRevokeSelfPermissionsOnKill(packageName, permissions, deviceId,\"\n        errorLine2=\"                    ^\">\n        <location\n            file=\"frameworks/base/core/java/android/permission/PermissionControllerService.java\"\n            line=\"776\"\n            column=\"21\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `PERSISTENT_DEVICE_ID_DEFAULT` is a flagged API and should be inside an `if (Flags.persistentDeviceIdApi())` check (or annotate the surrounding method `getIndicatorAppOpUsageData` with `@FlaggedApi(Flags.FLAG_PERSISTENT_DEVICE_ID_API) to transfer requirement to caller`)\"\n        errorLine1=\"                VirtualDeviceManager.PERSISTENT_DEVICE_ID_DEFAULT);\"\n        errorLine2=\"                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/permission/PermissionManager.java\"\n            line=\"1342\"\n            column=\"38\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `PERSISTENT_DEVICE_ID_DEFAULT` is a flagged API and should be inside an `if (Flags.persistentDeviceIdApi())` check (or annotate the surrounding method `getPersistentDeviceId` with `@FlaggedApi(Flags.FLAG_PERSISTENT_DEVICE_ID_API) to transfer requirement to caller`)\"\n        errorLine1=\"            persistentDeviceId = VirtualDeviceManager.PERSISTENT_DEVICE_ID_DEFAULT;\"\n        errorLine2=\"                                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/permission/PermissionManager.java\"\n            line=\"1951\"\n            column=\"55\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `onPermissionsChanged()` is a flagged API and should be inside an `if (Flags.deviceAwarePermissionApisEnabled())` check (or annotate the surrounding method `handleMessage` with `@FlaggedApi(Flags.FLAG_DEVICE_AWARE_PERMISSION_APIS_ENABLED) to transfer requirement to caller`)\"\n        errorLine1=\"                    mListener.onPermissionsChanged(uid, persistentDeviceId);\"\n        errorLine2=\"                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/permission/PermissionManager.java\"\n            line=\"2040\"\n            column=\"21\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `getPersistentDeviceId()` is a flagged API and should be inside an `if (Flags.vdmPublicApis())` check (or annotate the surrounding method `getOpUsageDataForAllDevices` with `@FlaggedApi(Flags.FLAG_VDM_PUBLIC_APIS) to transfer requirement to caller`)\"\n        errorLine1=\"            persistentDeviceIds.add(virtualDevices.get(num).getPersistentDeviceId());\"\n        errorLine2=\"                                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/permission/PermissionUsageHelper.java\"\n            line=\"381\"\n            column=\"37\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `PERSISTENT_DEVICE_ID_DEFAULT` is a flagged API and should be inside an `if (Flags.persistentDeviceIdApi())` check (or annotate the surrounding method `getOpUsageDataForAllDevices` with `@FlaggedApi(Flags.FLAG_PERSISTENT_DEVICE_ID_API) to transfer requirement to caller`)\"\n        errorLine1=\"        persistentDeviceIds.add(VirtualDeviceManager.PERSISTENT_DEVICE_ID_DEFAULT);\"\n        errorLine2=\"                                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/permission/PermissionUsageHelper.java\"\n            line=\"383\"\n            column=\"54\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `PERSISTENT_DEVICE_ID_DEFAULT` is a flagged API and should be inside an `if (Flags.persistentDeviceIdApi())` check (or annotate the surrounding method `getOpUsagesByDevice` with `@FlaggedApi(Flags.FLAG_PERSISTENT_DEVICE_ID_API) to transfer requirement to caller`)\"\n        errorLine1=\"                    VirtualDeviceManager.PERSISTENT_DEVICE_ID_DEFAULT)) {\"\n        errorLine2=\"                                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/permission/PermissionUsageHelper.java\"\n            line=\"492\"\n            column=\"42\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `hasSimultaneousCallingRestriction()` is a flagged API and should be inside an `if (Flags.simultaneousCallingIndications())` check (or annotate the surrounding method `Builder` with `@FlaggedApi(Flags.FLAG_SIMULTANEOUS_CALLING_INDICATIONS) to transfer requirement to caller`)\"\n        errorLine1=\"            if (phoneAccount.hasSimultaneousCallingRestriction()) {\"\n        errorLine2=\"                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/telecomm/java/android/telecom/PhoneAccount.java\"\n            line=\"585\"\n            column=\"17\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `getSimultaneousCallingRestriction()` is a flagged API and should be inside an `if (Flags.simultaneousCallingIndications())` check (or annotate the surrounding method `Builder` with `@FlaggedApi(Flags.FLAG_SIMULTANEOUS_CALLING_INDICATIONS) to transfer requirement to caller`)\"\n        errorLine1=\"                mSimultaneousCallingRestriction = phoneAccount.getSimultaneousCallingRestriction();\"\n        errorLine2=\"                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/telecomm/java/android/telecom/PhoneAccount.java\"\n            line=\"586\"\n            column=\"51\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `hasSimultaneousCallingRestriction()` is a flagged API and should be inside an `if (Flags.simultaneousCallingIndications())` check (or annotate the surrounding method `toString` with `@FlaggedApi(Flags.FLAG_SIMULTANEOUS_CALLING_INDICATIONS) to transfer requirement to caller`)\"\n        errorLine1=\"        if (hasSimultaneousCallingRestriction()) {\"\n        errorLine2=\"            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/telecomm/java/android/telecom/PhoneAccount.java\"\n            line=\"1292\"\n            column=\"13\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `STATE_PLAYBACK_SUPPRESSED` is a flagged API and should be inside an `if (Flags.enableNotifyingActivityManagerWithMediaSessionStatusChange())` check (or annotate the surrounding method `isActive` with `@FlaggedApi(Flags.FLAG_ENABLE_NOTIFYING_ACTIVITY_MANAGER_WITH_MEDIA_SESSION_STATUS_CHANGE) to transfer requirement to caller`)\"\n        errorLine1=\"            case PlaybackState.STATE_PLAYBACK_SUPPRESSED:\"\n        errorLine2=\"                               ~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/media/java/android/media/session/PlaybackState.java\"\n            line=\"541\"\n            column=\"32\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `STATE_PLAYBACK_SUPPRESSED` is a flagged API and should be inside an `if (Flags.enableNotifyingActivityManagerWithMediaSessionStatusChange())` check (or annotate the surrounding method `getStringForStateInt` with `@FlaggedApi(Flags.FLAG_ENABLE_NOTIFYING_ACTIVITY_MANAGER_WITH_MEDIA_SESSION_STATUS_CHANGE) to transfer requirement to caller`)\"\n        errorLine1=\"            case STATE_PLAYBACK_SUPPRESSED:\"\n        errorLine2=\"                 ~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/media/java/android/media/session/PlaybackState.java\"\n            line=\"587\"\n            column=\"18\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"@FlaggedApi(&quot;com.android.server.power.optimization.power_monitor_api&quot;)\"\n        errorLine2=\"            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/os/PowerMonitor.java\"\n            line=\"39\"\n            column=\"13\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"@FlaggedApi(&quot;com.android.server.power.optimization.power_monitor_api&quot;)\"\n        errorLine2=\"            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/os/PowerMonitor.java\"\n            line=\"39\"\n            column=\"13\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"@FlaggedApi(&quot;com.android.server.power.optimization.power_monitor_api&quot;)\"\n        errorLine2=\"            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/os/PowerMonitor.java\"\n            line=\"39\"\n            column=\"13\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"@FlaggedApi(&quot;com.android.server.power.optimization.power_monitor_api&quot;)\"\n        errorLine2=\"            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/os/PowerMonitor.java\"\n            line=\"39\"\n            column=\"13\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"@FlaggedApi(&quot;com.android.server.power.optimization.power_monitor_api&quot;)\"\n        errorLine2=\"            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/os/PowerMonitor.java\"\n            line=\"39\"\n            column=\"13\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"@FlaggedApi(&quot;com.android.server.power.optimization.power_monitor_api&quot;)\"\n        errorLine2=\"            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/os/PowerMonitor.java\"\n            line=\"39\"\n            column=\"13\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"@FlaggedApi(&quot;com.android.server.power.optimization.power_monitor_api&quot;)\"\n        errorLine2=\"            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/os/PowerMonitor.java\"\n            line=\"39\"\n            column=\"13\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"@FlaggedApi(&quot;com.android.server.power.optimization.power_monitor_api&quot;)\"\n        errorLine2=\"            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/os/PowerMonitor.java\"\n            line=\"39\"\n            column=\"13\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"@FlaggedApi(&quot;com.android.server.power.optimization.power_monitor_api&quot;)\"\n        errorLine2=\"            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/os/PowerMonitor.java\"\n            line=\"39\"\n            column=\"13\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"@FlaggedApi(&quot;com.android.server.power.optimization.power_monitor_api&quot;)\"\n        errorLine2=\"            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/os/PowerMonitor.java\"\n            line=\"39\"\n            column=\"13\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"@FlaggedApi(&quot;com.android.server.power.optimization.power_monitor_api&quot;)\"\n        errorLine2=\"            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/os/PowerMonitor.java\"\n            line=\"39\"\n            column=\"13\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"@FlaggedApi(&quot;com.android.server.power.optimization.power_monitor_api&quot;)\"\n        errorLine2=\"            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/os/PowerMonitor.java\"\n            line=\"39\"\n            column=\"13\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"@FlaggedApi(&quot;com.android.server.power.optimization.power_monitor_api&quot;)\"\n        errorLine2=\"            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/os/PowerMonitor.java\"\n            line=\"39\"\n            column=\"13\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"@FlaggedApi(&quot;com.android.server.power.optimization.power_monitor_api&quot;)\"\n        errorLine2=\"            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/os/PowerMonitor.java\"\n            line=\"39\"\n            column=\"13\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"@FlaggedApi(&quot;com.android.server.power.optimization.power_monitor_api&quot;)\"\n        errorLine2=\"            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/os/PowerMonitor.java\"\n            line=\"39\"\n            column=\"13\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"@FlaggedApi(&quot;com.android.server.power.optimization.power_monitor_api&quot;)\"\n        errorLine2=\"            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/os/PowerMonitor.java\"\n            line=\"39\"\n            column=\"13\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"@FlaggedApi(&quot;com.android.server.power.optimization.power_monitor_api&quot;)\"\n        errorLine2=\"            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/os/PowerMonitor.java\"\n            line=\"39\"\n            column=\"13\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"@FlaggedApi(&quot;com.android.server.power.optimization.power_monitor_api&quot;)\"\n        errorLine2=\"            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/os/PowerMonitor.java\"\n            line=\"39\"\n            column=\"13\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"@FlaggedApi(&quot;com.android.server.power.optimization.power_monitor_api&quot;)\"\n        errorLine2=\"            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/os/PowerMonitor.java\"\n            line=\"39\"\n            column=\"13\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @FlaggedApi(&quot;com.android.server.power.optimization.power_monitor_api&quot;)\"\n        errorLine2=\"                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/os/PowerMonitor.java\"\n            line=\"49\"\n            column=\"17\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @FlaggedApi(&quot;com.android.server.power.optimization.power_monitor_api&quot;)\"\n        errorLine2=\"                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/os/PowerMonitor.java\"\n            line=\"49\"\n            column=\"17\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @FlaggedApi(&quot;com.android.server.power.optimization.power_monitor_api&quot;)\"\n        errorLine2=\"                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/os/PowerMonitor.java\"\n            line=\"57\"\n            column=\"17\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @FlaggedApi(&quot;com.android.server.power.optimization.power_monitor_api&quot;)\"\n        errorLine2=\"                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/os/PowerMonitor.java\"\n            line=\"57\"\n            column=\"17\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @FlaggedApi(&quot;com.android.server.power.optimization.power_monitor_api&quot;)\"\n        errorLine2=\"                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/os/PowerMonitor.java\"\n            line=\"94\"\n            column=\"17\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @FlaggedApi(&quot;com.android.server.power.optimization.power_monitor_api&quot;)\"\n        errorLine2=\"                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/os/PowerMonitor.java\"\n            line=\"103\"\n            column=\"17\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @FlaggedApi(&quot;com.android.server.power.optimization.power_monitor_api&quot;)\"\n        errorLine2=\"                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/os/PowerMonitor.java\"\n            line=\"103\"\n            column=\"17\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @FlaggedApi(&quot;com.android.server.power.optimization.power_monitor_api&quot;)\"\n        errorLine2=\"                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/os/PowerMonitor.java\"\n            line=\"115\"\n            column=\"17\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @FlaggedApi(&quot;com.android.server.power.optimization.power_monitor_api&quot;)\"\n        errorLine2=\"                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/os/PowerMonitor.java\"\n            line=\"123\"\n            column=\"17\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @FlaggedApi(&quot;com.android.server.power.optimization.power_monitor_api&quot;)\"\n        errorLine2=\"                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/os/PowerMonitor.java\"\n            line=\"129\"\n            column=\"17\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"@FlaggedApi(&quot;com.android.server.power.optimization.power_monitor_api&quot;)\"\n        errorLine2=\"            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/os/PowerMonitorReadings.java\"\n            line=\"29\"\n            column=\"13\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"@FlaggedApi(&quot;com.android.server.power.optimization.power_monitor_api&quot;)\"\n        errorLine2=\"            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/os/PowerMonitorReadings.java\"\n            line=\"29\"\n            column=\"13\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"@FlaggedApi(&quot;com.android.server.power.optimization.power_monitor_api&quot;)\"\n        errorLine2=\"            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/os/PowerMonitorReadings.java\"\n            line=\"29\"\n            column=\"13\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"@FlaggedApi(&quot;com.android.server.power.optimization.power_monitor_api&quot;)\"\n        errorLine2=\"            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/os/PowerMonitorReadings.java\"\n            line=\"29\"\n            column=\"13\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"@FlaggedApi(&quot;com.android.server.power.optimization.power_monitor_api&quot;)\"\n        errorLine2=\"            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/os/PowerMonitorReadings.java\"\n            line=\"29\"\n            column=\"13\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"@FlaggedApi(&quot;com.android.server.power.optimization.power_monitor_api&quot;)\"\n        errorLine2=\"            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/os/PowerMonitorReadings.java\"\n            line=\"29\"\n            column=\"13\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"@FlaggedApi(&quot;com.android.server.power.optimization.power_monitor_api&quot;)\"\n        errorLine2=\"            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/os/PowerMonitorReadings.java\"\n            line=\"29\"\n            column=\"13\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"@FlaggedApi(&quot;com.android.server.power.optimization.power_monitor_api&quot;)\"\n        errorLine2=\"            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/os/PowerMonitorReadings.java\"\n            line=\"29\"\n            column=\"13\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"@FlaggedApi(&quot;com.android.server.power.optimization.power_monitor_api&quot;)\"\n        errorLine2=\"            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/os/PowerMonitorReadings.java\"\n            line=\"29\"\n            column=\"13\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"@FlaggedApi(&quot;com.android.server.power.optimization.power_monitor_api&quot;)\"\n        errorLine2=\"            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/os/PowerMonitorReadings.java\"\n            line=\"29\"\n            column=\"13\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"@FlaggedApi(&quot;com.android.server.power.optimization.power_monitor_api&quot;)\"\n        errorLine2=\"            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/os/PowerMonitorReadings.java\"\n            line=\"29\"\n            column=\"13\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"@FlaggedApi(&quot;com.android.server.power.optimization.power_monitor_api&quot;)\"\n        errorLine2=\"            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/os/PowerMonitorReadings.java\"\n            line=\"29\"\n            column=\"13\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"@FlaggedApi(&quot;com.android.server.power.optimization.power_monitor_api&quot;)\"\n        errorLine2=\"            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/os/PowerMonitorReadings.java\"\n            line=\"29\"\n            column=\"13\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"@FlaggedApi(&quot;com.android.server.power.optimization.power_monitor_api&quot;)\"\n        errorLine2=\"            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/os/PowerMonitorReadings.java\"\n            line=\"29\"\n            column=\"13\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"@FlaggedApi(&quot;com.android.server.power.optimization.power_monitor_api&quot;)\"\n        errorLine2=\"            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/os/PowerMonitorReadings.java\"\n            line=\"29\"\n            column=\"13\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @FlaggedApi(&quot;com.android.server.power.optimization.power_monitor_api&quot;)\"\n        errorLine2=\"                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/os/PowerMonitorReadings.java\"\n            line=\"31\"\n            column=\"17\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @FlaggedApi(&quot;com.android.server.power.optimization.power_monitor_api&quot;)\"\n        errorLine2=\"                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/os/PowerMonitorReadings.java\"\n            line=\"31\"\n            column=\"17\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @FlaggedApi(&quot;com.android.server.power.optimization.power_monitor_api&quot;)\"\n        errorLine2=\"                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/os/PowerMonitorReadings.java\"\n            line=\"60\"\n            column=\"17\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @FlaggedApi(&quot;com.android.server.power.optimization.power_monitor_api&quot;)\"\n        errorLine2=\"                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/os/PowerMonitorReadings.java\"\n            line=\"72\"\n            column=\"17\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `NETWORK_VALIDATION_UNSUPPORTED` is a flagged API and should be inside an `if (Flags.networkValidation())` check (or annotate the surrounding method `PreciseDataConnectionState` with `@FlaggedApi(Flags.FLAG_NETWORK_VALIDATION) to transfer requirement to caller`)\"\n        errorLine1=\"                        .build(), null, NETWORK_VALIDATION_UNSUPPORTED);\"\n        errorLine2=\"                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/telephony/java/android/telephony/PreciseDataConnectionState.java\"\n            line=\"143\"\n            column=\"41\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `NETWORK_VALIDATION_UNSUPPORTED` is a flagged API and should be inside an `if (Flags.networkValidation())` check (or annotate the surrounding method `networkValidationStatusToString` with `@FlaggedApi(Flags.FLAG_NETWORK_VALIDATION) to transfer requirement to caller`)\"\n        errorLine1=\"            case NETWORK_VALIDATION_UNSUPPORTED: return &quot;unsupported&quot;;\"\n        errorLine2=\"                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/telephony/java/android/telephony/PreciseDataConnectionState.java\"\n            line=\"456\"\n            column=\"18\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `NETWORK_VALIDATION_NOT_REQUESTED` is a flagged API and should be inside an `if (Flags.networkValidation())` check (or annotate the surrounding method `networkValidationStatusToString` with `@FlaggedApi(Flags.FLAG_NETWORK_VALIDATION) to transfer requirement to caller`)\"\n        errorLine1=\"            case NETWORK_VALIDATION_NOT_REQUESTED: return &quot;not requested&quot;;\"\n        errorLine2=\"                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/telephony/java/android/telephony/PreciseDataConnectionState.java\"\n            line=\"457\"\n            column=\"18\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `NETWORK_VALIDATION_IN_PROGRESS` is a flagged API and should be inside an `if (Flags.networkValidation())` check (or annotate the surrounding method `networkValidationStatusToString` with `@FlaggedApi(Flags.FLAG_NETWORK_VALIDATION) to transfer requirement to caller`)\"\n        errorLine1=\"            case NETWORK_VALIDATION_IN_PROGRESS: return &quot;in progress&quot;;\"\n        errorLine2=\"                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/telephony/java/android/telephony/PreciseDataConnectionState.java\"\n            line=\"458\"\n            column=\"18\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `NETWORK_VALIDATION_SUCCESS` is a flagged API and should be inside an `if (Flags.networkValidation())` check (or annotate the surrounding method `networkValidationStatusToString` with `@FlaggedApi(Flags.FLAG_NETWORK_VALIDATION) to transfer requirement to caller`)\"\n        errorLine1=\"            case NETWORK_VALIDATION_SUCCESS: return &quot;success&quot;;\"\n        errorLine2=\"                 ~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/telephony/java/android/telephony/PreciseDataConnectionState.java\"\n            line=\"459\"\n            column=\"18\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `NETWORK_VALIDATION_FAILURE` is a flagged API and should be inside an `if (Flags.networkValidation())` check (or annotate the surrounding method `networkValidationStatusToString` with `@FlaggedApi(Flags.FLAG_NETWORK_VALIDATION) to transfer requirement to caller`)\"\n        errorLine1=\"            case NETWORK_VALIDATION_FAILURE: return &quot;failure&quot;;\"\n        errorLine2=\"                 ~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/telephony/java/android/telephony/PreciseDataConnectionState.java\"\n            line=\"460\"\n            column=\"18\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `NETWORK_VALIDATION_UNSUPPORTED` is a flagged API and should be inside an `if (Flags.networkValidation())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_NETWORK_VALIDATION) to transfer requirement to caller`)\"\n        errorLine1=\"                NETWORK_VALIDATION_UNSUPPORTED;\"\n        errorLine2=\"                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/telephony/java/android/telephony/PreciseDataConnectionState.java\"\n            line=\"508\"\n            column=\"17\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `LINE_BREAK_WORD_STYLE_AUTO` is a flagged API and should be inside an `if (Flags.wordStyleAuto())` check (or annotate the surrounding method `createMeasuredParagraphsFromPrecomputedText` with `@FlaggedApi(Flags.FLAG_WORD_STYLE_AUTO) to transfer requirement to caller`)\"\n        errorLine1=\"        if (config.getLineBreakWordStyle() == LineBreakConfig.LINE_BREAK_WORD_STYLE_AUTO\"\n        errorLine2=\"                                                              ~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/text/PrecomputedText.java\"\n            line=\"461\"\n            column=\"63\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `merge()` is a flagged API and should be inside an `if (Flags.noBreakNoHyphenationSpan())` check (or annotate the surrounding method `createMeasuredParagraphsFromPrecomputedText` with `@FlaggedApi(Flags.FLAG_NO_BREAK_NO_HYPHENATION_SPAN) to transfer requirement to caller`)\"\n        errorLine1=\"            config = new LineBreakConfig.Builder()\"\n        errorLine2=\"                     ^\">\n        <location\n            file=\"frameworks/base/core/java/android/text/PrecomputedText.java\"\n            line=\"464\"\n            column=\"22\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `LINE_BREAK_WORD_STYLE_AUTO` is a flagged API and should be inside an `if (Flags.wordStyleAuto())` check (or annotate the surrounding method `createMeasuredParagraphs` with `@FlaggedApi(Flags.FLAG_WORD_STYLE_AUTO) to transfer requirement to caller`)\"\n        errorLine1=\"                if (config.getLineBreakWordStyle() == LineBreakConfig.LINE_BREAK_WORD_STYLE_AUTO\"\n        errorLine2=\"                                                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/text/PrecomputedText.java\"\n            line=\"515\"\n            column=\"71\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `isResumed()` is a flagged API and should be inside an `if (Flags.enableNfcMainline())` check (or annotate the surrounding method `onListItemClick` with `@FlaggedApi(Flags.FLAG_ENABLE_NFC_MAINLINE) to transfer requirement to caller`)\"\n        errorLine1=\"        if (!isResumed()) {\"\n        errorLine2=\"             ~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/preference/PreferenceActivity.java\"\n            line=\"1071\"\n            column=\"14\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Class `PromptContentViewParcelable` is a flagged API and should be inside an `if (Flags.customBiometricPrompt())` check (or annotate the surrounding method `PromptInfo` with `@FlaggedApi(Flags.FLAG_CUSTOM_BIOMETRIC_PROMPT) to transfer requirement to caller`)\"\n        errorLine1=\"        mContentView = in.readParcelable(PromptContentViewParcelable.class.getClassLoader(),\"\n        errorLine2=\"                                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/hardware/biometrics/PromptInfo.java\"\n            line=\"75\"\n            column=\"42\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Class `PromptContentViewParcelable` is a flagged API and should be inside an `if (Flags.customBiometricPrompt())` check (or annotate the surrounding method `PromptInfo` with `@FlaggedApi(Flags.FLAG_CUSTOM_BIOMETRIC_PROMPT) to transfer requirement to caller`)\"\n        errorLine1=\"                PromptContentViewParcelable.class);\"\n        errorLine2=\"                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/hardware/biometrics/PromptInfo.java\"\n            line=\"76\"\n            column=\"17\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"This is a flagged API and should be inside an `if (Flags.customBiometricPrompt())` check (or annotate the surrounding method `isContentViewMoreOptionsButtonUsed` with `@FlaggedApi(Flags.FLAG_CUSTOM_BIOMETRIC_PROMPT) to transfer requirement to caller`)\"\n        errorLine1=\"                &amp;&amp; mContentView instanceof PromptContentViewWithMoreOptionsButton;\"\n        errorLine2=\"                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/hardware/biometrics/PromptInfo.java\"\n            line=\"214\"\n            column=\"44\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"This is a flagged API and should be inside an `if (Flags.customBiometricPrompt())` check (or annotate the surrounding method `setContentView` with `@FlaggedApi(Flags.FLAG_CUSTOM_BIOMETRIC_PROMPT) to transfer requirement to caller`)\"\n        errorLine1=\"        mContentView = (PromptContentViewParcelable) view;\"\n        errorLine2=\"                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/hardware/biometrics/PromptInfo.java\"\n            line=\"258\"\n            column=\"25\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.media.tv.flags.enable_ad_service_fw&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java\"\n            line=\"610\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.media.tv.flags.enable_ad_service_fw&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java\"\n            line=\"610\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.media.tv.flags.enable_ad_service_fw&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java\"\n            line=\"610\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.media.tv.flags.enable_ad_service_fw&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java\"\n            line=\"610\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.content.pm.relative_reference_intent_filters&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java\"\n            line=\"693\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.security.asm_restrictions_enabled&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java\"\n            line=\"759\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.nfc.nfc_read_polling_loop&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java\"\n            line=\"1300\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.view.flags.sensitive_content_app_protection_api&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java\"\n            line=\"2782\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.content.res.default_locale&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java\"\n            line=\"3023\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.service.controls.flags.Flags.FLAG_HOME_PANEL_DREAM&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java\"\n            line=\"3599\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.service.controls.flags.Flags.FLAG_HOME_PANEL_DREAM&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java\"\n            line=\"3599\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.service.controls.flags.Flags.FLAG_HOME_PANEL_DREAM&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java\"\n            line=\"3599\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.service.controls.flags.Flags.FLAG_HOME_PANEL_DREAM&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java\"\n            line=\"3599\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.content.res.manifest_flagging&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java\"\n            line=\"4290\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.content.pm.relative_reference_intent_filters&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java\"\n            line=\"4870\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.content.pm.relative_reference_intent_filters&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java\"\n            line=\"4970\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.content.pm.relative_reference_intent_filters&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java\"\n            line=\"4979\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.content.pm.relative_reference_intent_filters&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java\"\n            line=\"5032\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.companion.virtual.flags.vdm_custom_ime&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java\"\n            line=\"6857\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.view.inputmethod.ime_switcher_revamp&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java\"\n            line=\"7587\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.view.inputmethod.ime_switcher_revamp&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java\"\n            line=\"7587\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.view.inputmethod.ime_switcher_revamp&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java\"\n            line=\"7587\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.view.inputmethod.ime_switcher_revamp&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java\"\n            line=\"7587\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.content.pm.sdk_lib_independence&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java\"\n            line=\"9481\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.content.pm.sdk_lib_independence&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java\"\n            line=\"9481\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.content.pm.sdk_lib_independence&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java\"\n            line=\"9481\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.content.pm.sdk_lib_independence&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java\"\n            line=\"9481\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.content.pm.relative_reference_intent_filters&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java\"\n            line=\"10701\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.content.pm.relative_reference_intent_filters&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java\"\n            line=\"10727\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.content.pm.relative_reference_intent_filters&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java\"\n            line=\"10767\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.content.pm.relative_reference_intent_filters&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java\"\n            line=\"10776\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.content.pm.relative_reference_intent_filters&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java\"\n            line=\"10785\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.security.content_uri_permission_apis&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java\"\n            line=\"11122\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;com.android.text.flags.use_bounds_for_width&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java\"\n            line=\"12404\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.nfc.nfc_observe_mode&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java\"\n            line=\"12438\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.view.inputmethod.connectionless_handwriting&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java\"\n            line=\"13485\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.multiuser.enable_system_user_only_for_services_and_providers&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java\"\n            line=\"13672\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;com.android.text.flags.use_bounds_for_width&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java\"\n            line=\"15472\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;com.android.text.flags.fix_line_height_for_locale&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java\"\n            line=\"15520\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.view.flags.toolkit_set_frame_rate_read_only&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java\"\n            line=\"16364\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;com.android.window.flags.enforce_edge_to_edge&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java\"\n            line=\"16561\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.permission.flags.retail_demo_role_enabled&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java\"\n            line=\"18455\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.permission.flags.wallet_role_enabled&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java\"\n            line=\"18473\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.security.content_uri_permission_apis&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java\"\n            line=\"25110\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.security.asm_restrictions_enabled&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java\"\n            line=\"25837\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.security.asm_restrictions_enabled&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java\"\n            line=\"27173\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.view.inputmethod.ime_switcher_revamp&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java\"\n            line=\"41370\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.companion.virtual.flags.vdm_custom_ime&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java\"\n            line=\"41608\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.view.inputmethod.ime_switcher_revamp&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java\"\n            line=\"41645\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.content.res.default_locale&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java\"\n            line=\"44145\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.nfc.nfc_read_polling_loop&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java\"\n            line=\"45932\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.nfc.nfc_read_polling_loop&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java\"\n            line=\"45956\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.nfc.nfc_read_polling_loop&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java\"\n            line=\"45970\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.nfc.nfc_read_polling_loop&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java\"\n            line=\"45996\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;com.android.text.flags.use_bounds_for_width&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java\"\n            line=\"53416\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;com.android.text.flags.use_bounds_for_width&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java\"\n            line=\"53416\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;com.android.text.flags.use_bounds_for_width&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java\"\n            line=\"53416\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;com.android.text.flags.use_bounds_for_width&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java\"\n            line=\"53416\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;com.android.text.flags.use_bounds_for_width&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java\"\n            line=\"55227\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;com.android.text.flags.fix_line_height_for_locale&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java\"\n            line=\"55238\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;com.android.text.flags.use_bounds_for_width&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java\"\n            line=\"55249\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.view.flags.sensitive_content_app_protection_api&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java\"\n            line=\"62287\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @android.annotation.FlaggedApi(&quot;android.view.flags.sensitive_content_app_protection_api&quot;)\"\n        errorLine2=\"                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java\"\n            line=\"64240\"\n            column=\"36\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `METADATA_KEY_COMMENT_SHORT_DESCRIPTION` is a flagged API and should be inside an `if (Flags.hdRadioImproved())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_HD_RADIO_IMPROVED) to transfer requirement to caller`)\"\n        errorLine1=\"        METADATA_KEYS_TYPE.put(METADATA_KEY_COMMENT_SHORT_DESCRIPTION, METADATA_TYPE_TEXT);\"\n        errorLine2=\"                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/hardware/radio/RadioMetadata.java\"\n            line=\"249\"\n            column=\"32\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `METADATA_KEY_COMMENT_ACTUAL_TEXT` is a flagged API and should be inside an `if (Flags.hdRadioImproved())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_HD_RADIO_IMPROVED) to transfer requirement to caller`)\"\n        errorLine1=\"        METADATA_KEYS_TYPE.put(METADATA_KEY_COMMENT_ACTUAL_TEXT, METADATA_TYPE_TEXT);\"\n        errorLine2=\"                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/hardware/radio/RadioMetadata.java\"\n            line=\"250\"\n            column=\"32\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `METADATA_KEY_COMMERCIAL` is a flagged API and should be inside an `if (Flags.hdRadioImproved())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_HD_RADIO_IMPROVED) to transfer requirement to caller`)\"\n        errorLine1=\"        METADATA_KEYS_TYPE.put(METADATA_KEY_COMMERCIAL, METADATA_TYPE_TEXT);\"\n        errorLine2=\"                               ~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/hardware/radio/RadioMetadata.java\"\n            line=\"251\"\n            column=\"32\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `METADATA_KEY_UFIDS` is a flagged API and should be inside an `if (Flags.hdRadioImproved())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_HD_RADIO_IMPROVED) to transfer requirement to caller`)\"\n        errorLine1=\"        METADATA_KEYS_TYPE.put(METADATA_KEY_UFIDS, METADATA_TYPE_TEXT_ARRAY);\"\n        errorLine2=\"                               ~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/hardware/radio/RadioMetadata.java\"\n            line=\"252\"\n            column=\"32\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `METADATA_KEY_HD_STATION_NAME_SHORT` is a flagged API and should be inside an `if (Flags.hdRadioImproved())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_HD_RADIO_IMPROVED) to transfer requirement to caller`)\"\n        errorLine1=\"        METADATA_KEYS_TYPE.put(METADATA_KEY_HD_STATION_NAME_SHORT, METADATA_TYPE_TEXT);\"\n        errorLine2=\"                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/hardware/radio/RadioMetadata.java\"\n            line=\"253\"\n            column=\"32\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `METADATA_KEY_HD_STATION_NAME_LONG` is a flagged API and should be inside an `if (Flags.hdRadioImproved())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_HD_RADIO_IMPROVED) to transfer requirement to caller`)\"\n        errorLine1=\"        METADATA_KEYS_TYPE.put(METADATA_KEY_HD_STATION_NAME_LONG, METADATA_TYPE_TEXT);\"\n        errorLine2=\"                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/hardware/radio/RadioMetadata.java\"\n            line=\"254\"\n            column=\"32\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `METADATA_KEY_HD_SUBCHANNELS_AVAILABLE` is a flagged API and should be inside an `if (Flags.hdRadioImproved())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_HD_RADIO_IMPROVED) to transfer requirement to caller`)\"\n        errorLine1=\"        METADATA_KEYS_TYPE.put(METADATA_KEY_HD_SUBCHANNELS_AVAILABLE, METADATA_TYPE_INT);\"\n        errorLine2=\"                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/hardware/radio/RadioMetadata.java\"\n            line=\"255\"\n            column=\"32\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `isPrivateProfile()` is a flagged API and should be inside an `if (Flags.allowPrivateProfile())` check (or annotate the surrounding method `fetchPrivateProfileUserHandle` with `@FlaggedApi(Flags.FLAG_ALLOW_PRIVATE_PROFILE) to transfer requirement to caller`)\"\n        errorLine1=\"            if (userInfo.isPrivateProfile()) {\"\n        errorLine2=\"                ~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/com/android/internal/app/ResolverActivity.java\"\n            line=\"827\"\n            column=\"17\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `getDefaultLocale()` is a flagged API and should be inside an `if (Flags.defaultLocale())` check (or annotate the surrounding method `updateConfigurationImpl` with `@FlaggedApi(Flags.FLAG_DEFAULT_LOCALE) to transfer requirement to caller`)\"\n        errorLine1=\"                        if (Flags.defaultLocale() &amp;&amp; (lc.getDefaultLocale() != null)) {\"\n        errorLine2=\"                                                      ~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/content/res/ResourcesImpl.java\"\n            line=\"474\"\n            column=\"55\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `getDefaultLocale()` is a flagged API and should be inside an `if (Flags.defaultLocale())` check (or annotate the surrounding method `updateConfigurationImpl` with `@FlaggedApi(Flags.FLAG_DEFAULT_LOCALE) to transfer requirement to caller`)\"\n        errorLine1=\"                    if (Flags.defaultLocale() &amp;&amp; (lc.getDefaultLocale() != null)) {\"\n        errorLine2=\"                                                  ~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/content/res/ResourcesImpl.java\"\n            line=\"515\"\n            column=\"51\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `ROLLBACK_USER_IMPACT_LOW` is a flagged API and should be inside an `if (Flags.recoverabilityDetection())` check (or annotate the surrounding method `RollbackInfo` with `@FlaggedApi(Flags.FLAG_RECOVERABILITY_DETECTION) to transfer requirement to caller`)\"\n        errorLine1=\"                PackageManager.ROLLBACK_USER_IMPACT_LOW);\"\n        errorLine2=\"                               ~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/content/rollback/RollbackInfo.java\"\n            line=\"80\"\n            column=\"32\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `getTransferReason()` is a flagged API and should be inside an `if (Flags.enableBuiltInSpeakerRouteSuitabilityStatuses())` check (or annotate the surrounding method `toString` with `@FlaggedApi(Flags.FLAG_ENABLE_BUILT_IN_SPEAKER_ROUTE_SUITABILITY_STATUSES) to transfer requirement to caller`)\"\n        errorLine1=\"                .append(getTransferReason())\"\n        errorLine2=\"                        ~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/media/java/android/media/RoutingSessionInfo.java\"\n            line=\"528\"\n            column=\"25\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `TRANSFER_REASON_FALLBACK` is a flagged API and should be inside an `if (Flags.enableBuiltInSpeakerRouteSuitabilityStatuses())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_ENABLE_BUILT_IN_SPEAKER_ROUTE_SUITABILITY_STATUSES) to transfer requirement to caller`)\"\n        errorLine1=\"        @TransferReason private int mTransferReason = TRANSFER_REASON_FALLBACK;\"\n        errorLine2=\"                                                      ~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/media/java/android/media/RoutingSessionInfo.java\"\n            line=\"590\"\n            column=\"55\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `SCREEN_RECORDING_STATE_NOT_VISIBLE` is a flagged API and should be inside an `if (Flags.screenRecordingCallbacks())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_SCREEN_RECORDING_CALLBACKS) to transfer requirement to caller`)\"\n        errorLine1=\"    private @ScreenRecordingState int mState = SCREEN_RECORDING_STATE_NOT_VISIBLE;\"\n        errorLine2=\"                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/view/ScreenRecordingCallbacks.java\"\n            line=\"54\"\n            column=\"48\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `SCREEN_RECORDING_STATE_VISIBLE` is a flagged API and should be inside an `if (Flags.screenRecordingCallbacks())` check (or annotate the surrounding method `onScreenRecordingStateChanged` with `@FlaggedApi(Flags.FLAG_SCREEN_RECORDING_CALLBACKS) to transfer requirement to caller`)\"\n        errorLine1=\"                                                ? SCREEN_RECORDING_STATE_VISIBLE\"\n        errorLine2=\"                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/view/ScreenRecordingCallbacks.java\"\n            line=\"85\"\n            column=\"51\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `SCREEN_RECORDING_STATE_NOT_VISIBLE` is a flagged API and should be inside an `if (Flags.screenRecordingCallbacks())` check (or annotate the surrounding method `onScreenRecordingStateChanged` with `@FlaggedApi(Flags.FLAG_SCREEN_RECORDING_CALLBACKS) to transfer requirement to caller`)\"\n        errorLine1=\"                                                : SCREEN_RECORDING_STATE_NOT_VISIBLE;\"\n        errorLine2=\"                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/view/ScreenRecordingCallbacks.java\"\n            line=\"86\"\n            column=\"51\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `SCREEN_RECORDING_STATE_VISIBLE` is a flagged API and should be inside an `if (Flags.screenRecordingCallbacks())` check (or annotate the surrounding method `addCallback` with `@FlaggedApi(Flags.FLAG_SCREEN_RECORDING_CALLBACKS) to transfer requirement to caller`)\"\n        errorLine1=\"                                    ? SCREEN_RECORDING_STATE_VISIBLE\"\n        errorLine2=\"                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/view/ScreenRecordingCallbacks.java\"\n            line=\"96\"\n            column=\"39\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `SCREEN_RECORDING_STATE_NOT_VISIBLE` is a flagged API and should be inside an `if (Flags.screenRecordingCallbacks())` check (or annotate the surrounding method `addCallback` with `@FlaggedApi(Flags.FLAG_SCREEN_RECORDING_CALLBACKS) to transfer requirement to caller`)\"\n        errorLine1=\"                                    : SCREEN_RECORDING_STATE_NOT_VISIBLE;\"\n        errorLine2=\"                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/view/ScreenRecordingCallbacks.java\"\n            line=\"97\"\n            column=\"39\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `FOREGROUND_SERVICE_TYPE_MEDIA_PROCESSING` is a flagged API and should be inside an `if (Flags.introduceMediaProcessingType())` check (or annotate the surrounding method `foregroundServiceTypeToLabel` with `@FlaggedApi(Flags.FLAG_INTRODUCE_MEDIA_PROCESSING_TYPE) to transfer requirement to caller`)\"\n        errorLine1=\"            case FOREGROUND_SERVICE_TYPE_MEDIA_PROCESSING:\"\n        errorLine2=\"                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/content/pm/ServiceInfo.java\"\n            line=\"707\"\n            column=\"18\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `isPrivateProfile()` is a flagged API and should be inside an `if (Flags.allowPrivateProfile())` check (or annotate the surrounding method `setLaunchUserSpecificMessage` with `@FlaggedApi(Flags.FLAG_ALLOW_PRIVATE_PROFILE) to transfer requirement to caller`)\"\n        errorLine1=\"            if (userInfo != null &amp;&amp; userInfo.isPrivateProfile()) {\"\n        errorLine2=\"                                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/com/android/internal/app/SetScreenLockDialogActivity.java\"\n            line=\"146\"\n            column=\"37\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @FlaggedApi(&quot;com.android.media.flags.enable_privileged_routing_for_media_routing_control&quot;)\"\n        errorLine2=\"                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/provider/Settings.java\"\n            line=\"665\"\n            column=\"17\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"        @FlaggedApi(&quot;com.android.server.biometrics.face_vhal_feature&quot;)\"\n        errorLine2=\"                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/provider/Settings.java\"\n            line=\"11022\"\n            column=\"21\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"        @FlaggedApi(&quot;com.android.server.biometrics.face_vhal_feature&quot;)\"\n        errorLine2=\"                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/provider/Settings.java\"\n            line=\"11030\"\n            column=\"21\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)\"\n        errorLine1=\"    @FlaggedApi(&quot;com.android.wifi.flags.shared_connectivity_broadcast_receiver_test_api&quot;)\"\n        errorLine2=\"                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/wifi/java/src/android/net/wifi/sharedconnectivity/app/SharedConnectivityManager.java\"\n            line=\"300\"\n            column=\"17\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `getInputTransferToken()` is a flagged API and should be inside an `if (Flags.surfaceControlInputReceiver())` check (or annotate the surrounding method `createSurfaceView` with `@FlaggedApi(Flags.FLAG_SURFACE_CONTROL_INPUT_RECEIVER) to transfer requirement to caller`)\"\n        errorLine1=\"                                : attachedSurfaceControl.getInputTransferToken(),\"\n        errorLine2=\"                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/window/SplashScreenView.java\"\n            line=\"342\"\n            column=\"35\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `uptimeNanos()` is a flagged API and should be inside an `if (Flags.adpfGpuReportActualWorkDuration())` check (or annotate the surrounding method `getTime` with `@FlaggedApi(Flags.FLAG_ADPF_GPU_REPORT_ACTUAL_WORK_DURATION) to transfer requirement to caller`)\"\n        errorLine1=\"        return SystemClock.uptimeNanos() / 1000;\"\n        errorLine2=\"               ~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/com/android/internal/util/StatLogger.java\"\n            line=\"94\"\n            column=\"16\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `setUseBoundsForWidth()` is a flagged API and should be inside an `if (Flags.useBoundsForWidth())` check (or annotate the surrounding method `generate` with `@FlaggedApi(Flags.FLAG_USE_BOUNDS_FOR_WIDTH) to transfer requirement to caller`)\"\n        errorLine1=\"        final LineBreaker lineBreaker = new LineBreaker.Builder()\"\n        errorLine2=\"                                        ^\">\n        <location\n            file=\"frameworks/base/core/java/android/text/StaticLayout.java\"\n            line=\"823\"\n            column=\"41\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `computeDrawingBoundingBox()` is a flagged API and should be inside an `if (Flags.useBoundsForWidth())` check (or annotate the surrounding method `computeDrawingBoundingBox` with `@FlaggedApi(Flags.FLAG_USE_BOUNDS_FOR_WIDTH) to transfer requirement to caller`)\"\n        errorLine1=\"            mDrawingBounds = super.computeDrawingBoundingBox();\"\n        errorLine2=\"                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/text/StaticLayout.java\"\n            line=\"1578\"\n            column=\"30\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `createNoBreakSpan()` is a flagged API and should be inside an `if (Flags.noBreakNoHyphenationSpan())` check (or annotate the surrounding method `applyStyles` with `@FlaggedApi(Flags.FLAG_NO_BREAK_NO_HYPHENATION_SPAN) to transfer requirement to caller`)\"\n        errorLine1=\"                buffer.setSpan(LineBreakConfigSpan.createNoBreakSpan(),\"\n        errorLine2=\"                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/content/res/StringBlock.java\"\n            line=\"297\"\n            column=\"32\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `createNoHyphenationSpan()` is a flagged API and should be inside an `if (Flags.noBreakNoHyphenationSpan())` check (or annotate the surrounding method `applyStyles` with `@FlaggedApi(Flags.FLAG_NO_BREAK_NO_HYPHENATION_SPAN) to transfer requirement to caller`)\"\n        errorLine1=\"                buffer.setSpan(LineBreakConfigSpan.createNoHyphenationSpan(),\"\n        errorLine2=\"                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/content/res/StringBlock.java\"\n            line=\"301\"\n            column=\"32\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `LINE_BREAK_STYLE_UNSPECIFIED` is a flagged API and should be inside an `if (Flags.noBreakNoHyphenationSpan())` check (or annotate the surrounding method `applyStyles` with `@FlaggedApi(Flags.FLAG_NO_BREAK_NO_HYPHENATION_SPAN) to transfer requirement to caller`)\"\n        errorLine1=\"                    int lbStyle = LineBreakConfig.LINE_BREAK_STYLE_UNSPECIFIED;\"\n        errorLine2=\"                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/content/res/StringBlock.java\"\n            line=\"387\"\n            column=\"51\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `LINE_BREAK_STYLE_UNSPECIFIED` is a flagged API and should be inside an `if (Flags.noBreakNoHyphenationSpan())` check (or annotate the surrounding method `applyStyles` with `@FlaggedApi(Flags.FLAG_NO_BREAK_NO_HYPHENATION_SPAN) to transfer requirement to caller`)\"\n        errorLine1=\"                    int lbWordStyle = LineBreakConfig.LINE_BREAK_STYLE_UNSPECIFIED;\"\n        errorLine2=\"                                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/content/res/StringBlock.java\"\n            line=\"403\"\n            column=\"55\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `LINE_BREAK_STYLE_UNSPECIFIED` is a flagged API and should be inside an `if (Flags.noBreakNoHyphenationSpan())` check (or annotate the surrounding method `applyStyles` with `@FlaggedApi(Flags.FLAG_NO_BREAK_NO_HYPHENATION_SPAN) to transfer requirement to caller`)\"\n        errorLine1=\"                    if (lbStyle != LineBreakConfig.LINE_BREAK_STYLE_UNSPECIFIED\"\n        errorLine2=\"                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/content/res/StringBlock.java\"\n            line=\"415\"\n            column=\"52\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `LINE_BREAK_WORD_STYLE_UNSPECIFIED` is a flagged API and should be inside an `if (Flags.noBreakNoHyphenationSpan())` check (or annotate the surrounding method `applyStyles` with `@FlaggedApi(Flags.FLAG_NO_BREAK_NO_HYPHENATION_SPAN) to transfer requirement to caller`)\"\n        errorLine1=\"                            || lbWordStyle != LineBreakConfig.LINE_BREAK_WORD_STYLE_UNSPECIFIED) {\"\n        errorLine2=\"                                                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/content/res/StringBlock.java\"\n            line=\"416\"\n            column=\"63\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `LineBreakConfigSpan()` is a flagged API and should be inside an `if (Flags.noBreakNoHyphenationSpan())` check (or annotate the surrounding method `applyStyles` with `@FlaggedApi(Flags.FLAG_NO_BREAK_NO_HYPHENATION_SPAN) to transfer requirement to caller`)\"\n        errorLine1=\"                        buffer.setSpan(new LineBreakConfigSpan(\"\n        errorLine2=\"                                       ^\">\n        <location\n            file=\"frameworks/base/core/java/android/content/res/StringBlock.java\"\n            line=\"417\"\n            column=\"40\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Field `HYPHENATION_UNSPECIFIED` is a flagged API and should be inside an `if (Flags.noBreakNoHyphenationSpan())` check (or annotate the surrounding method `applyStyles` with `@FlaggedApi(Flags.FLAG_NO_BREAK_NO_HYPHENATION_SPAN) to transfer requirement to caller`)\"\n        errorLine1=\"                                        LineBreakConfig.HYPHENATION_UNSPECIFIED)),\"\n        errorLine2=\"                                                        ~~~~~~~~~~~~~~~~~~~~~~~\">\n        <location\n            file=\"frameworks/base/core/java/android/content/res/StringBlock.java\"\n            line=\"419\"\n            column=\"57\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `setServiceCapabilities()` is a flagged API and should be inside an `if (Flags.dataOnlyCellularService())` check (or annotate the surrounding method `createFromParcel` with `@FlaggedApi(Flags.FLAG_DATA_ONLY_CELLULAR_SERVICE) to transfer requirement to caller`)\"\n        errorLine1=\"            return new Builder()\"\n        errorLine2=\"                   ^\">\n        <location\n            file=\"frameworks/base/telephony/java/android/telephony/SubscriptionInfo.java\"\n            line=\"957\"\n            column=\"20\"/>\n    </issue>\n\n    <issue\n        id=\"FlaggedApi\"\n        message=\"Method `setTransferStatus()` is a f"
        },
        {
          "name": "location",
          "type": "tree",
          "content": null
        },
        {
          "name": "media",
          "type": "tree",
          "content": null
        },
        {
          "name": "mime",
          "type": "tree",
          "content": null
        },
        {
          "name": "mms",
          "type": "tree",
          "content": null
        },
        {
          "name": "native",
          "type": "tree",
          "content": null
        },
        {
          "name": "nfc-extras",
          "type": "tree",
          "content": null
        },
        {
          "name": "nfc-non-updatable",
          "type": "tree",
          "content": null
        },
        {
          "name": "obex",
          "type": "tree",
          "content": null
        },
        {
          "name": "omapi",
          "type": "tree",
          "content": null
        },
        {
          "name": "opengl",
          "type": "tree",
          "content": null
        },
        {
          "name": "packages",
          "type": "tree",
          "content": null
        },
        {
          "name": "pathmap.mk",
          "type": "blob",
          "size": 1.814453125,
          "content": "#\n# Copyright (C) 2016 The Android Open Source Project\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\n#\n# A central place to define mappings to paths used by the framework build, to\n# avoid hard-coding them in Android.mk files. Not meant for header file include\n# directories, despite the fact that it was historically used for that!\n#\n\n#\n# A list of all source roots under frameworks/multidex.\n#\nFRAMEWORKS_MULTIDEX_SUBDIRS := \\\n    multidex/library/src \\\n    multidex/instrumentation/src\n\n#\n# A version of FRAMEWORKS_SUPPORT_SUBDIRS that is expanded to full paths from\n# the root of the tree.\n#\nFRAMEWORKS_SUPPORT_JAVA_SRC_DIRS += \\\n    $(addprefix frameworks/,$(FRAMEWORKS_MULTIDEX_SUBDIRS)) \\\n    frameworks/rs/support\n\n#\n# A list of support library modules.\n#\nFRAMEWORKS_SUPPORT_JAVA_LIBRARIES += \\\n    android-support-v8-renderscript \\\n    android-support-multidex \\\n    android-support-multidex-instrumentation\n\n#\n# A list of all documented source roots under frameworks/data-binding.\n#\nFRAMEWORKS_DATA_BINDING_SUBDIRS := \\\n    baseLibrary/src/main \\\n    extensions/library/src/main \\\n    extensions/library/src/doc\n\n#\n# A version of FRAMEWORKS_DATA_BINDING_SUBDIRS that is expanded to full paths from\n# the root of the tree.\n#\nFRAMEWORKS_DATA_BINDING_JAVA_SRC_DIRS := \\\n    $(addprefix frameworks/data-binding/,$(FRAMEWORKS_DATA_BINDING_SUBDIRS))\n"
        },
        {
          "name": "proto",
          "type": "tree",
          "content": null
        },
        {
          "name": "ravenwood",
          "type": "tree",
          "content": null
        },
        {
          "name": "rs",
          "type": "tree",
          "content": null
        },
        {
          "name": "samples",
          "type": "tree",
          "content": null
        },
        {
          "name": "sax",
          "type": "tree",
          "content": null
        },
        {
          "name": "services",
          "type": "tree",
          "content": null
        },
        {
          "name": "startop",
          "type": "tree",
          "content": null
        },
        {
          "name": "telecomm",
          "type": "tree",
          "content": null
        },
        {
          "name": "telephony",
          "type": "tree",
          "content": null
        },
        {
          "name": "test-base",
          "type": "tree",
          "content": null
        },
        {
          "name": "test-junit",
          "type": "tree",
          "content": null
        },
        {
          "name": "test-legacy",
          "type": "tree",
          "content": null
        },
        {
          "name": "test-mock",
          "type": "tree",
          "content": null
        },
        {
          "name": "test-runner",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "wifi",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}