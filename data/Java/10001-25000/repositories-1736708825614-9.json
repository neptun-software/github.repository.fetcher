{
  "metadata": {
    "timestamp": 1736708825614,
    "page": 9,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "redisson/redisson",
      "stars": 23526,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.166015625,
          "content": ".classpath\n.project\n.settings\n\n.idea\n*.iml\n\ntarget\n\n*.cmd\n\nnb-configuration.xml\n\nnbactions-unit-test.xml\nconfig.json\nconfig_single_server.json\ndependency-reduced-pom.xml\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 211.9130859375,
          "content": "Redisson Releases History\n================================\n\nUpgrade to __[Redisson PRO](https://redisson.pro)__ with **advanced features**.\n\nFeature - listeners support in Spring's CacheConfig object (thanks to @seakider)  \nFeature - CLIENT LIST command support for Spring Data (thanks to @seakider)  \nFeature - cluster nodes state added in `node ... hasn't been discovered yet` error  \nFeature - `onConnectFailed()` and `onPingFailed()` methods with an error argument added to `FailedNodeDetector` object  \nFeature - support of \"valkey\" and \"valkeys\" schemes in urls  \n\nFixed - `RScheduledExecutorService` tasks might not be canceled (thanks to @seakider)  \nFixed - `MASTERDOWN` error handling  \nFixed - `RBloomFilter.contains()` should return false if the filter doesn't exist (thanks to @seakider)  \nFixed - `RRemoteService` calls do not throw RemoteServiceTimeoutException, leaving threads stuck (thanks to @seakider)  \nFixed - `RMap.addAndGet()` method doesn't work with MapWriter  \nFixed - `RScheduledExecutorService` tasks are not running on the next executor if the app was killed (thanks to @seakider)  \nFixed - `RListMultimapReactive.get()` and `RSetMultimapReactive.get()` methods return object with methods which throw exceptions  \nFixed - `RPriorityBlockingQueue.take()` method consumes an element even after the calling thread has been interrupted  \nFixed - `RExecutorService` result futures might be never completed  \nFixed - `RRemoteService` shouldn't allocate a new worker if requestQueue is empty  \nFixed - `RListMultimapReactive.get()` method doesn't work (thanks to @kramer)  \nFixed - `RListMultimapRx.get()` method doesn't work  \nFixed - `destroy()` method doesn't work if called immediately after creation of `RDelayedQueue` object  \n\n### 23-Dec-2024 - 3.41.0 released\n\nFeature - `RPermitExpirableSemaphore.getLeaseTime()` method added (thanks to @seakider)  \nFeature - `sslVerificationMode` setting added  \n\nFixed - `RPermitExpirableSemaphore.release(java.util.List)` shouldn't release permits if one of them doesn't exist (thanks to @seakider)  \nFixed - `RTopic` listeners leak if they are defined as a lambda  \nFixed - `RPriorityBlockingQueue.draintTo()` method shouldn't resend command on response timeout  \nFixed - `RandomXoshiro256PlusPlus` might block Redisson initialization  \n\n### 12-Dec-2024 - 3.40.2 released\n\nImprovement - optimization LRUCacheMap speed by up to 200x  \n\nFixed - Quarkus config parsing with sentinel nodes (thanks to @blacksails)  \nFixed - starvation of pub/sub connections may cause a memory leak  \n\n### 06-Dec-2024 - 3.40.1 released\n\nImprovement - Netty pending tasks amount report in timeout exceptions  \n\nFixed - Redis or Valkey hostname parsing  \nFixed - `NoClassDefFoundError` is thrown during run with Spring Boot 3.4.0 in GraalVM native mode  \nFixed - `RTopic` and `RShardedTopic` fail to resubscribe after node's DNS record change (regression since 3.27.0)  \n\n### 03-Dec-2024 - 3.40.0 released\n\nFeature - metrics added to `RClusteredTopic`, `RReliableTopic`, `RClusteredReliableTopic`, `RShardedTopic`, `RJsonStore` and `RLocalCachedJsonStore` objects  \nFeature - Spring Data Redis 3.4.x module added  \nFeature - Spring Boot upgraded to 3.4.0  \nFeature - `setIfLess()` and `setIfGreater()` methods added to `RAtomicDouble` and `RAtomicLong` objects (thanks to @seakider)  \nFeature - `RMultimap.fastReplaceValues()` method added (thanks to @davidreis97)  \n\nFixed - IPV6 uris with braces are parsed incorrectly\nFixed - minCleanUpDelay setting isn't applied during the first run of the EvictionTask  \nFixed - master node shouldn't be changed on new ip addition for AWS Serverless endpoint  \nFixed - Quarkus native build requires Snappy library  \nFixed - Quarkus 3.14+ compatibility  \nFixed - `RBitSet.length()` method returns unexpected value and caused RedisException in some case (thanks to @seakider)  \nFixed - `TypedJsonJacksonCodec` doesn't catch Exception (thanks to @lyrric)  \n\n### 15-Nov-2024 - 3.39.0 released\n\nFeature - [partitioning](https://redisson.org/docs/data-and-services/publish-subscribe/#partitioning) implementation for `RTopic` object  \nFeature - [partitioning](https://redisson.org/docs/data-and-services/publish-subscribe/#partitioning_1) implementation for `RShardedTopic` object  \nFeature - [partitioning](https://redisson.org/docs/data-and-services/publish-subscribe/#partitioning_2) implementation for `RReliableTopic` object  \nFeature - [ZStandard](https://github.com/facebook/zstd) compression codec added (ZStdCodec)  \nFeature - ability to register [listeners](https://redisson.org/docs/data-and-services/collections/#listeners_1) for `RListMultimap` and `RSetMultimap` objects  \nFeature - ability to register [listeners](https://redisson.org/docs/data-and-services/collections/#listeners_10) for `RTimeSeries` object  \n\nFixed - possible race-condition in `RMapCache.computeIfAbsent()` method  \nFixed - possible race-condition in `computeIfAbsent()`, `computeIfPresent()` methods of RMap object  \nFixed - `RMapCache.computeIfAbsentAsync()` method isn't implemented  \nFixed - use CursorId in ScanIteration to avoid long overflow in Spring Data 3.3 implementation (thanks to @vlastikcz)  \nFixed - unable to cancel a task created by `RExecutorService.scheduleAtFixedRate()` method (thanks to @zcxsythenew)  \nFixed - potential LocalCache memory leak if useObjectAsCacheKey = true (thanks to @lehuuthanh5)  \nFixed - EntryListener is not working on Turkish language Windows 10  \nFixed - Redisson shutdown exception is thrown during background process of expired Tomcat sessions  \nFixed - some methods of Reactive and RxJava API don't work in GraalVM native image  \nFixed - `RTransactionRx` and `RTransactionReactive` don't work in GraalVM native image  \nFixed - `JsonJacksonCodec` doesn't work in GraalVM native image  \nFixed - NPE is thrown if `RExecutorService` task submitted in GraalVM native image  \nFixed - `RObject.rename()` method does not replace an existing structure in cluster mode  \n\n### 31-Oct-2024 - 3.38.1 released\n\nFixed - Kryo codec upgraded to 5.6.2 for JDK 8 compatibility (thanks to @Wujiaxuan007)  \nFixed - pollAsync() and removeAsync() methods of RPriorityQueue and RPriorityDeque objects aren't guarded properly with lock  \nFixed - Spring Cache `Cacheable(sync)` annotation loads value multiple times for reactive types or completableFuture\n\n### 30-Oct-2024 - 3.38.0 released\n\nFeature - [Local cache for Live Object Service](https://redisson.org/docs/data-and-services/services/#local-cache) support  \nFeature - [RClientSideCaching](https://redisson.org/docs/client-side-caching/) object added. Client side caching through RESP3 protocol  \nFeature - Tomcat 11 support  \nFeature - `RBatch.getSearch()` method added (thanks to @pfyod)  \nFeature - `RedissonClient.getMultiLock()` method added for locking on objects (thanks to @lyrric)  \nFeature - `RPatternTopic.removeListener()` accepts multiple ids  \nFeature - `LocalCachedMapOptions.useTopicPattern()` setting added  \nFeature - InetAddress and SocketAddress serialization added to Kryo5Codec\n\n__Breaking change - RLongAdder and RDoubleAdder topic channel name has been renamed__\n\nImprovement - timeToLive parameter renamed to keepAliveTime for RRateLimiter.`trySetRate()` and `setRate()` methods (thanks to @lyrric)  \nImprovement - Add check, The parameter timeToLive should be greater than or equal to rateInterval (thanks to @lyrric)  \n\nFixed - `lazyInitialization=true` doesn't work in cluster mode (regression since 3.27.0)  \nFixed - Spring Cache @Cacheable(sync) doesn't work with reactive types or completableFuture  \nFixed - Pub/Sub connections randomly disconnecting (regression since 3.26.0) (thanks to @Wujiaxuan007)  \nFixed - `RLiveObjectService.persist()` and `merge()` methods, when called with multiple arguments, return detached objects  \nFixed - `RJsonBucketReactive` and `RJsonBucketRx` use Reactive Types as arguments  \nFixed - `ClassNotFoundException` is thrown when a LiveObject expires  \nFixed - Micronaut native image build  \nFixed - Quarkus native image build  \nFixed - `RSearch.info()` method throws an exception on infinity values (thanks to @iamtakingiteasy)  \n\n### 02-Oct-2024 - 3.37.0 released\n\nFeature - `findCommon()` and `findCommonLength()` methods added to `RBucket` object  \nFeature - `RMapCache.computeIfAbsent()` method with TTL parameter added (thanks to @lyrric)  \nFeature - Apache Tomcat `RedissonSessionManager.setConfig()` method added (thanks to @jglapa)  \nFeature - `LocalCachedMapOptions.useObjectAsCacheKey()` setting added (thanks to @lehuuthanh5)  \nFeature - `trySetRate()` and `setRate()` methods with TTL parameter added to `RRateLimiter` object  \nFeature - `RKeys.getKeys()` method with type parameter added  \n\nImprovement - `RRemoteService` method calls optimization  \n\nFixed - Spring Data Redis method `RedisSetCommands.isMember()` doesn't work  \nFixed - Spring Data Redis `xcaim()` and `xClaimJustId()` methods don't use getMinIdleTime() parameter (thanks to @jinia91)  \nFixed - `retainAll()` and `containsAll()` methods of `RSet` object throw \"too many results to unpack\" error  \nFixed - `ServiceManager.execute()` method may hang in case of exception  \nFixed - `RedissonNode.shutdown()` method doesn't stop executors  \nFixed - listeners reattach process should be stopped on Redisson shutdown  \nFixed - `BiHashMap` usage removed  \nFixed - 100% CPU usage by CommandsQueue in rare cases  \nFixed - `ProtobufCodec` doesn't work with `CompositeCodec`  \n\n### 09-Sep-2024 - 3.36.0 released\n\nFeature - `Kryo5Codec` `useReferences` setting added  \nFeature - `RListMultimapCacheNative` and `RSetMultimapCacheNative` objects added. Require Redis 7.4+  \nFeature - `AggregationOptions.sortBy()` method with `withCount` parameter added (thanks to @pfyod)  \nFeature - `allowedClasses` setting added to `FuryCodec`  \nFeature - `addIfAbsent(Map)` method added to `RSetCache` object (thanks to @lyrric)  \n\nImprovement - 'hmget' should be instead of 'hget' in `RMapCache.getAllWithTTLOnly()` method  \n\nFixed - RedisExecutor throws \"Failed to submit a listener notification task\" error during shutdown  \nFixed - Keep the jmockit version in the plugin consistent with that in the dependencies (thanks to @lyrric)  \nFixed - hostname after comma in Redis Cluster topology isn't parsed  \nFixed - `drainToAsync()` method returns an incorrect value (thanks to @seakider)  \nFixed - numeric cast in `CommandDecoder`  \nFixed - `RLiveObject` value shouldn't be deleted during index update  \nFixed - `RSetCache.addAllIfAbsent()` method doesn't work  \nFixed - missed `getSetMultimapCache()` and `getListMultimapCache()` methods in `RBatchReactive` object  \nFixed - missed `getMapCacheNative()` method in `RBatch` object  \nFixed - `MapValueDecoder` throws NPE  \nFixed - `EnumMap` type handling by `Kryo5Codec`  \nFixed - `Kryo5Codec` `registrationRequired` setting replaced with `allowedClasses`  \nFixed - JCache eviction task isn't removed on `close()` method invocation  \nFixed - missed `destroy()` method for `RListMultimapCache` and `RSetMultimapCache` objects  \n\n### 22-Aug-2024 - 3.35.0 released\n\nFeature - `INDEXEMPTY` option added to tag and text fields in `RSearch.createIndex()` method  \nFeature - `INDEXMISSING` option added to all fields in `RSearch.createIndex()` method  \nFeature - `StreamMessageId.LAST` option added  \nFeature - `copy()` and `copyAndReplace()` methods added to `RObject` interface  \nFeature - [Apache Fury](https://github.com/apache/fury) codec support  \nFeature - `RSetCache` object supports `TrackingListener`, `SetAddListener` and `SetRemoveListener` listeners  \nFeature - `RClusteredMapCacheNative` object implemented. Requires Redis 7.4+  \nFeature - `RLocalCachedMapCacheNative` object implemented. Requires Redis 7.4+  \nFeature - `localcache_native` and `clustered_native` implementations added to Quarkus module. Requires Redis 7.4+  \nFeature - `RedissonClusteredCacheNative` and `RedissonLocalCachedCacheNative` implementations added to MyBatis module. Requires Redis 7.4+\nFeature - `RedissonClusteredSpringCacheNativeManager` and `RedissonSpringLocalCachedCacheNativeManager` implementations added to Spring Cache module. Requires Redis 7.4+  \nFeature - `RedissonClusteredNativeRegionFactory` and `RedissonLocalCachedNativeRegionFactory` added to Hibernate module. Requires Redis 7.4+  \nFeature - `local-caches-native` and `clustered-caches-native` implementations added to Micronaut module. Requires Redis 7.4+  \n\nImprovement - `ProtobufCodec` memory allocation optimization  \nImprovement - [Apache Fury](https://github.com/apache/fury) codec optimization (thanks to @chaokunyang)  \nImprovement - quarkus should make an attempt to read config file using Thread's ContextClassLoader  \nImprovement - quarkus should make an attempt to read config file using Thread's ContextClassLoader (thanks to @seakider)  \nImprovement - don't take lock for `RMap.computeIfAbsent()` if only get is needed (thanks to @shreyas-sprinklr)  \n\nFixed - writer, writeMode, writerAsync, writeBehindDelay, writeBehindBatchSize, loader, loaderAsync settings aren't applied to caches-native in Micronaut module  \nFixed - missed `caches-native` implementation for Micronaut 3.x and Micronaut 2.x  \nFixed - a new retry attempt to the same node isn't made for INFO_REPLICATION, SENTINEL_GET_MASTER_ADDR_BY_NAME, SENTINEL_SENTINELS, SENTINEL_SLAVES and CLUSTER_NODES commands  \nFixed - `RType.JSON` and `RType.STREAM` can't be resolved by `RKey.getType()` method  \nFixed - `RKeys.removeListener()` method doesn't remove `NewObjectListener` and `SetObjectListener`  \nFixed - `copy()` method doesn't works with db (thanks to @seakider)  \nFixed - `maven.compiler.release` setting isn't defined  \nFixed - `RSearch.info()` method throws `NumberFormatException` (thanks to @iamtakingiteasy)  \nFixed - timeout parameters defined per object aren't applied to `RJsonBuckets` and `RJsonBucket` objects  \nFixed - RedisException is thrown by `.removeAll()` and `.indexOf()` methods of `RedissonSubList` object (thanks to @seakider)  \nFixed - wrong event keyspace name for `MapCacheNative` object (thanks to @larryTheCoder)  \nFixed - missed `rename()` and `renamenx()` methods implementation for `RIdGenerator`, `RMapCache` and `RTimeSeries` objects  \nFixed - `Kryo5Codec` doesn't handle `UnmodifiableCollection`, `SynchronizedCollection` and `CheckedCollection`  \nFixed - `RRateLimiter` incorrect rate count in the event of an attempt to exceed the limit  \nFixed - `credentials-resolver`, `failed-slave-node-detector`, `command-mapper`, `name-mapper`, `nat-mapper` settings aren't recognized by Helidon and Quarkus  \nFixed - `RMultimapCacheReactive.expireKey()` method returns Single instead of Reactor Mono  \nFixed - `@RObjectField` annotation with codec option has no effect  \nFixed - an exception is thrown if the `@RObjectField` annotation is defined on a field  \nFixed - `RDestroyable.destroy()` method doesn't remove listeners  \nFixed - FailedSlaveNodeDetector's parameters by can't be defined in YAML config  \n\n\n### 31-Jul-2024 - 3.34.1 released\n\nFixed - RObject.rename() method doesn't work in cluster\n\n### 30-Jul-2024 - 3.34.0 released\n\nFeature - RJsonBuckets object added (thanks to @seakider)  \nFeature - `remainTimeToLive(Set keys)` and `clearExpire(Set keys)` methods added to `RMapCacheNative` object  \nFeature - `eval()` and `evalSha()` methods added to `RScript` object for execution on all nodes in Redis Cluster  \n\nImprovement - performance optimization for Apache Tomcat Session management  \nImprovement - default value of quietPeriod set to 0 in `RedissonClient.shutdown()` method  \nImprovement - upgrade protobuf from 3.16.3 to 4.27.2 (thanks to @zzhlhc)  \n\nFixed - Apache Tomcat Session Manager throws CROSSSLOT Keys in request don't hash to the same slot (regression since 3.32.0)  \nFixed - empty partitions shouldn't be skipped in cluster topology scan  \nFixed - `ClusterConnectionManager.checkSlotsMigration()` method throws NPE  \nFixed - RSearch IndexInfoDecoder may throw NPE  \nFixed - local cached Map implementations don't emit cache clear event on `clear()` or `delete()` methods call  \nFixed - `RObject.rename()` method doesn't work in cluster  \nFixed - a new attempt to send a command should be made right after channel reconnection  \nFixed - 'race condition' while calling RLock.tryLock() method (thanks to @pad-master82)  \nFixed - Can't connect to servers error doesn't show exception reported during connection  \nFixed - `SeekableByteChannel.truncate()` method (thanks to @seakider)  \nFixed - `RMap.computeAsync()` method doesn't handle empty keys properly (thanks to @phrone)  \n\n### 17-Jul-2024 - 3.33.0 released\n\nFeature - [RJsonStore](https://github.com/redisson/redisson/wiki/7.-distributed-collections/#724-json-store) object added  \nFeature - [RLocalCachedJsonStore](https://github.com/redisson/redisson/wiki/7.-distributed-collections/#7241-json-store-local-cache) object added  \nFeature - `RSearch.getIndexes()` method added  \nFeature - `RedissonRegionNativeFactory` added for Hibernate module. Requires Redis 7.4+  \nFeature - `RedissonSpringCacheNativeManager` implemented. Requires Redis 7.4+  \nFeature - `RedissonCacheNative` implementation added for Mybatis cache. Requires Redis 7.4+  \nFeature - `caches-native` cache type added to Micronaut module. Requires Redis 7.4+    \n\nImprovement - Spring Cache `RedissonCache.put()` method optimization  \n\n__Breaking change - JsonCodec interface refactoring__\n\nFixed - re-added master node isn't updated in Cluster topology  \nFixed - expiration time isn't set for Apacht Tomcat Manager `redisson:tomcat_notified_nodes` keys (thanks to @ehardy)  \nFixed - RSearch `AggregationOptions.loadAll()` setting isn't applied  \nFixed - containsAll() method of RList, RQueue, RMultimap objects returns incorrect result (thanks to @seakider)  \nFixed - too many requests with small threads amount may cause OOM  \nFixed - connection leak during high load with few connections  \nFixed - RingBuffer#setCapacity, trim list incorrect (thanks to @seakider)  \nFixed - password shouldn't be printed in logs  \nFixed - encoded user/password in URL aren't accepted  \n\n### 24-Jun-2024 - 3.32.0 released\n\nFeature - Quarkus Cache implementation added  \nFeature - `RMapCacheNative` implementation which uses Redis 7.4+ commands  \nFeature - unlinkByPattern() method added to RKeys interface (thanks to @seakider)  \n\nFixed - Apache Tomcat request.changeSessionId() method does not change the session id in Redis (thanks to @bclay2116)  \nFixed - RSearch parse params error (thanks to @seakider)  \nFixed - RSearch.info() throws `NumberFormatException` (thanks to @seakider)  \nFixed - cluster failover handling  \nFixed - last master node shouldn't be removed in cluster topology  \nFixed - duplicated master/slave added log output in sentinel mode  \nFixed - connection leak if master change operation failed during failover  \nFixed - `RxJava3` request can't be canceled  \nFixed - `RFairLock` doesn't calculate remaining ttl properly before next acquisition attempt  \nFixed - `scanInterval` setting check  \nFixed - `ElementsSubscribeService.resubscribe()` method throws `RedissonShutdownException`  \nFixed - `RMap.getAll()` method throws an exception if result of `RMap.keySet()` method passed as an argument  \nFixed - Redis node random selection doesn't work properly  \nFixed - concurrency problem during RLock expiration renewal (thanks to @seakider)  \nFixed - `RListMultimap` throws too many results to unpack error  \nFixed - entry shutdown during cluster slots migration check  \n\n### 31-May-2024 - 3.31.0 released\n\nFeature - Spring Boot 3.3.0 integration  \nFeature - Spring Data Redis 3.3.0 integration  \nFeature - allow retry of `NOREPLICAS` error (thanks to @ghollies)  \n\nImprovement - `SequentialDnsAddressResolverFactory` default `concurrencyLevel` set to 2  \nImprovement - `ThreadLocalRandom` replaced with `xoshiro256++` RNG to avoid collisions  \n\nFixed - cluster failover handling  \nFixed - cluster topology scan shouldn't be stopped by any exception  \nFixed - `RSetMultiMap` throws `too many results to unpack` error  \nFixed - append commands error when using batch mode (thanks to @seakider)  \nFixed - `ERR unknown command EVALSHA_RO` error shouldn't be logged  \nFixed - `TransactionalBucket#set(V, Duration)` `PSETEX` command is called before `MULTI` command (thanks to @seakider)  \nFixed - `CommandMapper` isn't applied to Lua scripts  \nFixed - incorrect connection release if `BatchOptions.executionMode` = `REDIS_WRITE_ATOMIC` or `REDIS_READ_ATOMIC` (thanks to @seakider)  \nFixed - `RFairLock` methods throw 'attempt to compare nil with number' error  \nFixed - Spring Data Redis `RedissonConnectionFactory.getSentinelConnection()` method throws error on the first offline sentinel  \nFixed - read mode = SLAVE isn't applied for `RSet.random()` methods  \nFixed - Keyspace notifications should be listened only on master nodes  \nFixed - `RListMultimap.removeAll()` method always deletes link to list  \nFixed - `RLockReactive` methods don't work in native image  \nFixed - Correctly update shutdown timeout after each step in connection manager shutdown (thanks to @MartinEkInsurely)  \nFixed - broken tck `JCache` tests  \nFixed - not all sentinels defined in the configuration are registered  \n\n### 10-May-2024 - 3.30.0 released\nFeature - `sslKeystoreType` setting added  \nFeature - `RPatternTopic.getActiveTopic()` method added (thanks to @MasterShi)  \nFeature - `RJsonBucket.merge()` method added  \nFeature - Async, Rx, Reactive interfaces implemented for `RBloomFilter` object  \nFeature - fallback mode for JCache  \nFeature - [passwords encryption](https://github.com/redisson/redisson/wiki/2.-Configuration#223-passwords-encryption) support  \nFeature - [Spring Cloud Stream](https://github.com/redisson/redisson/wiki/14.-Integration-with-frameworks/#149-spring-cloud-stream) integration  \n\nImprovement - configuration variable defined as Java system property overrides environment variable  \n\nFixed - io.projectreactor package should be defined as optional in OSGi Manifest  \nFixed - Spring Data Redis `StreamPollTask.deserializeAndEmitRecords()` method throws NPE after failover  \nFixed - Spring Data Redis blocking poll commands can't be reattached after failover  \nFixed - Unable to find session error reported by `RedissonSessionManager`  \nFixed - Sentinels discovery is applied at Redisson startup if `sentinelsDiscovery = true`  \nFixed - master node is used for read operations after slave node addition if `readMode = SLAVE` in replicated mode  \nFixed - failover handling of blocking methods calls with defined timeout. RStream, RBlockingQueue objects  \nFixed - multiple `RLocalCachedMap` objects don't work in the same RTransaction (thanks to @vlad-ogol @RajaJaisankar)  \nFixed - codec setting isn't applied in `redisson.getMap(MapOptions)` method  \nFixed - Live Object field can't set to null value  \nFixed - `SentinelConnectionManager` stops scheduling topology change change / dns check after host resolution error  \nFixed - `RMapCache.fastPutIfExistsOperation()` method uses incorrect pubsub channel\n\n### 22-Apr-2024 - 3.29.0 released\nFeature - `NewObjectListener` added to track created objects  \nFeature - `NewObjectListener` and `SetObjectListener` can be registered with `RKeys.addListener()` method  \nFeature - `subscribeOnElements()`, `subscribeOnLastElements()` and `subscribeOnFirstElements()` methods wait for `CompletionStage` to complete before polling the next element  \nFeature - `shardedSubscriptionMode` setting added in Cluster configuration  \nFeature - `RSemaphore.trySetPermits()` method with ttl parameter added  \nFeature - `getDeletedIds()` method added to `RStream` `AutoClaimResult` object  \n\nImprovement - responses map lock replaced with fine-grained entry locking in `RRemoteService` and `RScheduledExecutorService`  \n\nFixed - `RStream.autoClaim()` method throws ClassCastException  \nFixed - `RSearch` aggregate expression applied incorrectly  \nFixed - `LocalCachedMapDisabledKey` event is parsed incorrectly if local cache used with `RTransaction`  \nFixed - Slave node in cluster mode isn't shutdown properly if `readMode = MASTER` and `subscribeMode = MASTER` (regression since 3.27.2)  \nFixed - race condition during cluster topology update causes slave added/removed events  \nFixed - OSGi MANIFEST should define optional dependencies  \nFixed - `TimeoutException` is thrown if `connectionMinimumIdleSize = 0`  \nFixed - `ClassCastException` is thrown for Reactive/Rx RemoteService invocation if Redisson instance isn't Reactive/Rx  \nFixed - semaphore object is not deleted after `RLocalCachedMap.clearLocalCache()` method invocation  \nFixed - `AggregationOptions.groupBy()` setting with reducers used in `RSearch.aggregate()` method causes an exception  \nFixed - `AggregationOptions.groupBy()` setting usage with `RSearch.aggregate()` method causes an exception if reducers aren't defined  \nFixed - `AggregationOptions.sortBy()` setting usage with `RSearch.aggregate()` method causes an exception  \nFixed - resource leak error when executing multiple contains operation of `RSet` in transaction (thanks to @wynn5a)  \nFixed - jmockit upgraded to 1.52.0 inside maven-surefire-plugin (thanks to @roharon)  \n\n### 10-Apr-2024 - 3.28.0 released\n\nFeature - [Multi Sentinel mode](https://github.com/redisson/redisson/wiki/2.-Configuration/#211-multi-sentinel-mode) implementation  \nFeature - `RLocalCachedMapCacheV2` object implemented with effecient partitioning and advanced entry eviction  \nFeature - graceful shutdown in quarkus (thanks to @naah69)  \n\nImprovement - `RLongAdder` and `RDoubleAddder` should use sharded topic if possible  \nImprovement - reduced CPU and Memory consumption by `ClusterConnectionManager.getLastPartitonsByURI()` method  \nImprovement - `RedisURI.hashCode()` caching to reduce CPU consumption  \nImprovement - shutdown check added in `RTopic.removeListener()` method  \n\nFixed - incorrect detection of sharded pubsub support  \nFixed - `RBatch` does not work with RKeys.randomKeyAsync() method (thanks to @wynn5a)  \nFixed - unresolved Redis node hostname in cluster mode affects cluster topology scan  \nFixed - `MASTER` nodes aren't used if `readMode = MASTER_SLAVE`  \nFixed - `RLock`, `RFencedLock`, `RReadWriteLock` miss unlock messages and wait a defined timeout before a next attempt or hang  \nFixed - `RSemaphore`, `RPermitExpirableSemaphore` miss release messages and wait a defined timeout before a next attempt or hang  \nFixed - incorrect value of `RLongAdder.sum()` and `RDoubleAddder.sum()` methods if multiple Adder instances for the same Redisson object are used  \nFixed - `CountDownLatch.await()` method may throw NPE  \nFixed - ExecutionException handling in RExecutorService, RLock, RPermitExpirableSemaphore, RSemaphore objects  \nFixed - `ConcurrentModificationException` is thrown on RedissonSession save method if readMode = MEMORY  \nFixed - Spring Data Redis zPopMin() and zPopMax() methods don't work (thanks to @bimslab)  \n\n### 12-Mar-2024 - 3.27.2 released\n\nFeature - `RShardedTopic.countSubscribers()` method implemented  \nFeature - `RedissonMultiLock` implements `isHeldByThread()` and `isHeldByCurrentThread()` methods  \n\nFixed - Multiple locking of RLock reset remainTimeToLive to config default  \nFixed - exception thrown by `natMapper` is not shown in logs  \nFixed - OSGi jdk.net package import should be optional  \nFixed - `ServiceManager.resolveAll()` method throws NPE  \nFixed - `RObject.addListenerAsync()` method throws `UnsupportedOperationException`  \nFixed - `StatusListener` doesn't work with `RShardedTopic`  \nFixed - NPE is thrown in cluster mode if slave node added  \nFixed - continuously reconnecting to a removed slave node in cluster mode  \nFixed - incorrect handling of TrackingListener removal  \nFixed - `FlushListener` receives duplicate events  \nFixed - `SlotsDecoder` throws NPE on empty result  \nFixed - Clash between RedissonCache and Spring (6.1+) Cache interface methods  \nFixed - `RedissonClient.shutdown()` method hangs at `serviceManager.getShutdownLatch()` invocation  \nFixed - \"Failed to submit a listener notification task. Event loop shut down?\" error caused by `PingConnectionHandler`  \nFixed - `JsonCodecWrapper` isn't cached properly  \n\n### 28-Feb-2024 - 3.27.1 released\n\nFeature - added `TrackingListener` support to `RList`, `RQueue`, `RDeque`, `RBlockingQueue`, `RBlockingDeque`, `RDelayedQueue`, `RRingBuffer` objects  \nFeature - `addListener()`, `random()` methods added to `RLexSortedSet` object  \n\nImprovement - show log warning \"DNS TCP fallback on UDP query timeout disabled\" if Netty version is lower 4.1.105  \nImprovement - ChannelName.toString() conversion optimization  \n\nFixed - `retryInterval` and `retryAttempts` settings aren't applied in case of 'READONLY You can't write against a read only replica.' error  \nFixed - `RRemoteService` may cause CPU spike after Master failover  \nFixed - `FlushListener` causes `ClassCastException`  \nFixed - `TrackingListener` causes `ClassCastException`  \nFixed - `RedissonSetCache.addIfAbsentAsync()` uses incorrect argument for zadd (thanks @fooooxxxx)  \n\n### 20-Feb-2024 - 3.27.0 released\n\nFeature - [client tracking](https://github.com/redisson/redisson/wiki/10.-additional-features/#109-client-tracking-listener) support. `TrackingListener` is available for `RBucket`, `RStream`, `RScoredSortedSet`, `RSet`, `RMap` and `RBucket` objects  \nFeature - added `RKeys.addListener()` method to register global listeners  \nFeature - `FlushListener` added to track flushdb/flushall command invocation  \nFeature - `Kryo5Codec` constructor with `registrationRequired` parameter added  \nFeature - `nettyExecutor` setting added  \nFeature - enable DNS TCP fallback when UDP query timeout for `RoundRobinDnsAddressResolverGroupFactory` and `SequentialDnsAddressResolverFactory`  \n\nImprovement - cache result of `INFO REPLICATION` command for `RLock` objects  \n\nFixed - Spring Data Redis `ReactiveKeyCommands.pExpire()` method throws an exception  \nFixed - NPE is thrown by `RedisExecutor.handleError()` method  \nFixed - sharded pubsub detection for `Apache Tomcat Session Manager`, `RMapCache` and `RLocalCachedMap` objects  \nFixed - Redisson's threads aren't shutdown if Redis node address isn't defined  \nFixed - NPE is thrown while creating `RLocalCacheMap` object without WriteMode value  \nFixed - incorrect RESP3 protocol parsing causes `SlaveConnectionPool no available Redis entries` error  \nFixed - repeated new connections with AWS Elasticache serverless  \nFixed - internal `LRUCacheMap` object throws `ConcurrentModificationException`  \n\n### 12-Feb-2024 - 3.26.1 released\n\nFeature - enable DNS TCP fallback when UDP query timeout (thanks to @hellojukay)  \nFeature - `StreamMessageId.autogenerateSequenceId()` method added (thanks to @mrmx)  \nFeature - `RLockReactive.isHeldByThread()` method added (thanks to @sanail)  \n\nFixed - missed implementation of Spring Data Redis `ReactiveStringCommands.bitField()` method  \nFixed - Spring Data Redis `opsForCluster().randomKey()` method throws `UnsupportedOperationException`  \nFixed - `JCache.close()` method throws `IllegalStateException` if statistics enabled  \nFixed - doubled connections to the master node if `readMode = MASTER_SLAVE` or there are no slave nodes  \nFixed - `RSearch.delDict()` and `RSearch.addDict()` methods throw NPE  \nFixed - connection ping handler doesn't use `commandTimeout` setting  \nFixed - repeated new connections with AWS Elasticache serverless  \nFixed - `RLock` throws `ERR unknown command 'wait'` with AWS Elasticache serverless  \nFixed - `RSearchReactive.dropIndex()` method doesn't call onComplete() handler  \n\n\n### 16-Jan-2024 - 3.26.0 released\n\nFeature - ability to specify `retryInterval`, `retryAttempts`, `timeout` settings per Redisson object. Please refer to the [documentation](https://github.com/redisson/redisson/wiki/3.-operations-execution)  \nFeature - `LocalCachedMapOptions.expirationEventPolicy` setting added  \nFeature - `StreamAddListener`, `StreamCreateConsumerListener`, `StreamCreateGroupListener`, `StreamRemoveConsumerListener`, `StreamRemoveGroupListener`, `StreamRemoveListener`, `StreamTrimListener` listeners added for `RStream` object  \n\nFixed - Spring Data Redis `RedissonConnection.setCommands()` method returns null  \nFixed - continuously reconnecting to a removed slave node in cluster mode  \nFixed - `EntryExpiredListener` isn't invoked by `RMapCache` instance in Redis Cluster 7+ and if `nameMapper` is defined  \nFixed - `Skipped slave up ...` error is thrown in Sentinel mode if nodes use IPv6  \nFixed - NPE is thrown when adding or removing shards in ElastiCache  \nFixed - `RAtomicDouble`, `RAtomicLong`, `RMap`, `RScoredSortedSet`, `RSet` listeners aren't removed properly  \nFixed - connection isn't reconnected on `WRONGPASS` Redis error  \nFixed - connection timeout during Redisson start ignores connections amount  \nFixed - `RSearch.search()` method doesn't execute query with aliases properly  \nFixed - `FCALL_RO` command isn't used when `RFunction` method called with `FunctionMode.READ` parameter  \nFixed - `IllegalReferenceCountException` is thrown when canceling a method call  \nFixed - Redis scan cursor exceed `Long.MAX_VALUE` in AWS Elasticache  \nFixed - internal `ServiceManager.calcSHA()` method should use UTF-8 encoding by default  \n\n### 20-Dec-2023 - 3.25.2 released\n\nFixed - SSL connection can't be established  \n\n### 18-Dec-2023 - 3.25.1 released\n\nImprovement - JDK21 Virtual Threads compatibility  \n\nFixed - EvictionTask keeps running even after `destroy()` method called  \nFixed - Sprint Data Redis throws `Subscription registration timeout exceeded`  \nFixed - Sprint Data Redis `RedisMessageListenerContainer.addMessageListener()` method hangs if called after container start  \nFixed - NPE is thrown if `lazyInitialization = true`  \nFixed - `PriorityQueue` methods may hang due to unreleased lock after exception  \nFixed - `RMap.getAll()` method throws `IndexOutOfBoundsException`  \nFixed - natMapper isn't applied to slaves and master nodes at start in Sentinel mode  \nFixed - method invocation hangs after failover if `retryInterval = 0`  \nFixed - transactional Map and MapCache keySet method returns inconsistent state  \nFixed - Multilock lock method doesn't work properly with non-MILLISECONDS TimeUnit  \n\n### 05-Dec-2023 - 3.25.0 released\nFeature - RESP3 protocol support. [protocol](https://github.com/redisson/redisson/wiki/2.-Configuration#protocol) setting added  \nFeature - Spring Data Redis 3.2.0 implementation  \nFeature - `RSetCacheV2`, `RSetV2` objects with more effecient partitioning in Cluster added in [PRO](https://redisson.pro) version  \n\nImprovement - SLF4j updated to 2.0.9 version  \n\nFixed - RFunction/RScript keys parameter accepts only String values  \nFixed - IP address instead of hostname is used in sentinel mode with SSL connection  \nFixed - Resources leak in `Version.logVersion()` method  \nFixed - `RLiveObjectService.persist()` method with varargs hangs in cluster mode  \nFixed - Redisson connection process may hang at start in some cases  \nFixed - `EntryExpiredListener` isn't invoked by RMapCache instance in Redis Cluster 7+  \nFixed - slave node in sentinel mode can't be recovered if it's a master node  \nFixed - `JsonJacksonCodec` fails to serialize Throwable on Java17 (thanks to @tomjankes)  \nFixed - `RBlockingDeque.move()` throws an exception for empty result  \nFixed - `RScoredSortedSet.pollFirstEntries(count)` and `pollLastEntries(count)` methods return wrong result  \nFixed - `BZMPOP` command timeout isn't applied  \nFixed - `getBlockingDeque()`, `getDeque()`, `getPriorityDeque()`, `getPriorityBlockingDeque()` throw `NoClassDefFoundError` if JDK version < 21  \nFixed - `RLocalCachedMap.containsKey()` method does not work properly if `storeCacheMiss = true`  \nFixed - `RedissonRemoteService` exceptions handling (thanks to @mrmx)  \nFixed - `RSearch.info()` method throws `NumberFormatException`  \nFixed - `HttpSessionListener.sessionDestroyed()` method isn't called if Tomcat Session deleted by the node which didn't create it  \nFixed - `LZ4CodecV2` isn't compatible with `LZ4Codec`  \nFixed - `RSearch` GroupBy.reduce alias isn't applied (thanks to @arjunE1395)  \n\n### 24-Oct-2023 - 3.24.3 released\n\nFeature - Helidon 4.0 integration\n\nFixed - `ERR invalid expire time` error is thrown during `RLock.unlock()` call if `retryAttempts = 0`  \n\n### 22-Oct-2023 - 3.24.2 released\n\nFixed - `IllegalArgument timeout...` error is throw during Redisson shutdown  \nFixed - Intermittent Exception when creating `RLocalCachedMap` (regression since 3.24.1)  \nFixed - `RSearch.aggregate()` doesn't apply `withCursor()` and `sortBy()` options correctly  \nFixed - `MOVED redirection loop detected` error should be thrown only if both source and target addresses are equal\n\n### 18-Oct-2023 - 3.24.1 released\n\nFeature - `writerRetryAttempts` and `writerRetryInterval` settings added to `MapOptions` object (thanks to @zzhlhc)  \nFeature - `RSortedSet` implements `RExpirable`  \nFeature - `RBlockingQueue.pollFromAnyWithName()` method added  \nFeature - `org.redisson.codec.LZ4CodecV2` codec based on apache commons-compress added  \nFeature - Redis Cache async methods implementation introduced in Spring 6.1.0  \nFeature - `tcpKeepAliveCount`, `tcpKeepAliveIdle`, `tcpKeepAliveInterval`, `tcpUserTimeout` settings added  \nFeature - `subscriptionTimeout` setting added  \n\nFixed - `RedissonClient.shutdown()` method should be completed within timeout (thanks @dgolombek)  \nFixed - `RBuckets.trySet()`, `RBuckets.set()`, `RBuckets.get()`, `RKeys.touch()`, `RKeys.unlink()`, `RKeys.delete()`, `RKeys.countExists()` methods may hang after failover in Redis cluster  \nFixed - exceptions aren't wrapped in `CacheException` for `containsKey()`, `getAll()` and `removeAll()` methods of `JCache`  \nFixed - Command execution timeout for command: (PING)  \nFixed - `RBucketReactive.delete()` method doesn't work in Quarkus Native mode (thanks to @DicksengA)  \nFixed - auto configuration with Spring Boot 2.7.x+  \nFixed - `RSortedSet` doesn't work correctly if `NameMapper` object was specified  \nFixed - `RPriorityQueue` has incorrect lock name if `NameMapper` object was specified  \nFixed - `RMapCache.expireEntries()` and `expireEntry()` methods don't update `maxIdle` parameter properly  \nFixed - non-volatile `RedisConnection.lastUsageTime` field may cause incorrect idle time calculation  \nFixed - `attempt to unlock lock, not locked by current thread` error occurs in rare cases even if `RLock.unlock()` method called by lock owner thread  \nFixed - `RCountDownLatch` only notifying the first async listener after countdown reaches 0 (thanks to @Sinbios)  \nFixed - `RStream.trim()` and `trimNonStrict()` methods don't work with Redis 6.2+  \nFixed - `RReadWriteLock.readLock().isLocked()` method returns incorrect result if acquired by writeLock owner thread  \nFixed - `RedissonClient.getLiveObjectService()` method causes an attempt to connect to Redis if `lazyInitialization = true`  \n\n### 19-Sep-2023 - 3.23.5 released\nFeature - `failedSlaveNodeDetector` setting added to Cluster, Sentinel, Replicated, Master/Slave modes  \nFeature - module name added to redisson jar (thanks to @KrogerWalt)  \nFeature - `putAll()` method with TTL added to RMapCacheRx and RMapCacheReactive objects  \nFeature - Fallback to TCP in case of a UDP DNS truncation  \nFeature - `RMapCacheV2`, Spring `RedissonSpringCacheV2Manager` and Hibernate `RedissonRegionV2Factory` objects with more effecient partitioning in Cluster added in [PRO](https://redisson.pro) version  \n\nFixed - NPE is thrown by `RedissonAutoConfiguration` if Spring Boot 3.1+  \nFixed - `WeightedRoundRobinBalancer` doesn't support hostnames  \nFixed - NPE is thrown by CommandPubSubDecoder in rare cases  \nFixed - during connection initialization a new attempt isn't made for Busy, ClusterDown, TryAgain and Wait Redis errors  \nFixed - `RJsonBucket.getType()` method throws NPE if type is null  \nFixed - `IllegalStateException` is thrown if `RedisConnectionDetails` object registered in Spring Context with settings for Cluster or Sentinel  \nFixed - `RSearch` can not create Vector field  \nFixed - `RSearch` vector field doesn't support alias  \n\n\n### 29-Aug-2023 - 3.23.4 released\n\nFeature - methods for multiple permits support added to `RPermitExpirableSemaphore` object (thanks to @ikss)  \nFeature - `ProtobufCodec` codec added (thanks to @dumbbell-5kg)  \nFeature - `WAITAOF` command support through `BatchOptions.syncAOF()` setting  \nFeature - `bgSave()`, `scheduleBgSave()`, `save()`, `getLastSaveTime()`, `bgRewriteAOF()`, `size()` methods added to `RedisNode` object  \n\nImprovement - `RSemaphore` and `RLock` operations should have slave synchronization even if `readMode = MASTER` and `subscriptionMode = MASTER`  \n\nFixed - wrong order call of RSearch's `FieldIndex` tag `caseSensitive()` and `separator()` settings  \nFixed - `RedisConnectionDetails` object isn't used for Redisson configuration in Spring Boot 3.1+  \nFixed - incorrect `slots added`,`slots removed` messages in Redis Cluster mode  \nFixed - Tomcat Manager \"Session can't be found\" message should have debug level  \nFixed - `RBoundedBlockingQueue` can't be deleted if `nameMapper` was defined  \nFixed - `RLock` isn't unlocked after `RTransaction.commit()`  \n\n### 28-Jul-2023 - 3.23.3 released\nFeature - `TransportMode.IO_URING` added (thanks to @sgammon)  \nFeature - `LocalCachedMapOptions.useKeyEventsPattern()` setting introduced  \n\nImprovement - Long as string cache in CommandEncoder (thanks to @tomerarazy)  \nImprovement - each `AddressResolver` created by `SequentialDnsAddressResolverFactory` should share common DnsCache and DnsCnameCache instances  \nImprovement - RedisURI optimization (thanks to @ikss)  \n\nFixed - codec errors during Quarkus native build  \nFixed - extra subscription topic allocation by `RLocalCachedMap` object (regression since 3.23.2)  \n\n### 28-Jul-2023 - 3.23.2 released\nFeature - Micronaut 4.0 integration  \n\nImprovement - PubSub channels should be reconnected back to Slave from Master node if `SubscriptionMode = SLAVE`\n\nFixed - Setting `retryAttempts` to 0 causes an exception (regression since 3.23.1)  \nFixed - `RTopic` subscribes only to a single master in cluster if `__keyspace` or `__keyevent` channel is defined  \nFixed - `SlaveConnectionPool no available Redis entries` error may arise in some cases  \nFixed - StackOverflowError is thrown by `AggregationOptions.groupBy()` method  \nFixed - `failedSlaveCheckInterval` value should be greater than zero before it can be applied  \nFixed - `RedissonLocalCachedMap.putAllOperation()` method throws `ClassCastException` if `SyncStrategy = UPDATE`  \n\n### 18-Jul-2023 - 3.23.1 released\nImprovement - the scope of key event subscriptions reduced for `RLiveObjectService` object. Now it uses key-space channel  \nImprovement - the scope of key event subscriptions reduced for `RLocalCachedMap` object. Now it uses key-space channel  \n\nFixed - codecs defined via Spring Native application.properties file can't be recognized during application run  \nFixed - `retryAttempt` setting isn't applied during Redisson startup  \nFixed - Quarkus 2/3 native image can't be built  \nFixed - unknown property `quarkus.redisson.*` warnings in quarkus  \nFixed - Redisson settings defined in Quarkus application.properties file can't be used in native mode  \n\n### 10-Jul-2023 - 3.23.0 released\nFeature - added `RBloomFilter` `contains()` and `add()` methods with element collection support  \nFeature - RMapCache and RLocalCachedMap should use sharded pubsub in Redis Cluster 7.0+  \nFeature - [lazyInitialization](https://github.com/redisson/redisson/wiki/2.-Configuration#lazyinitialization) setting added  \nFeature - `expireEntryIfNotSet()`, `expireEntries()`, `expireEntry()`, `expireEntriesIfNotSet()` methods added to `RMapCache` object  \nFeature - `MapCacheOptions` object with `removeEmptyEvictionTask()` setting introduced. Removes `RMapCache` eviction task from memory if map is empty upon entries eviction process completion  \n\n__Breaking change - RMapCache and RLocalCachedMap should use sharded pubsub in Redis Cluster 7.0+__  \n__Breaking change - RMapCache object uses MapCacheOptions object__  \n\nImprovement - `RMapCache` shouldn't emit events if no listeners added  \n\nFixed - canceling tasks that scheduled with cron expression does not interrupt the thread (thanks to @zcxsythenew)  \nFixed - `RExecutorService` task response should be deleted if task was canceled  \nFixed - `RedisConnection.close()` method has private visibility  \nFixed - `ConcurrentModificationException` occasionally thrown during batch execution  \nFixed - `StringIndexOutOfBoundsException` is thrown if Redis port isn't defined in configuration  \nFixed - missed methods implementation of Spring Data Redis module: `zRevRangeByLex()`, `time(TimeUnit)`, `zRemRangeByLex()`, `zLexCount()`, `rewriteConfig()`, `zRangeStoreByLex()`, `zRangeStoreRevByLex()`, `zRangeStoreByScore()`, `zRangeStoreRevByScore()`, `flushDb()`, `flushAll()`, `replicaOf()`, `replicaOfNoOne()`\nFixed - transactional `RMap.fastRemove()` method throws `UnsupportedOperationException`  \nFixed - `RBloomFilter` `contains()` and `add()` methods don't return accurate results if false probability is high  \nFixed - incorrect handling \"unknown command\" response for `RTopic` operations  \nFixed - `RLiveObjectService.delete(class, id)` method doesn't delete indexes  \nFixed - `RMultimapCache` throws an exception if entry removed before expiration moment  \nFixed - `keepPubSubOrder` setting isn't applied  \n\n### 19-Jun-2023 - 3.22.1 released\nFeature - Apache Tomcat Manager should use sharded pubsub in Redis Cluster 7.0+  \nFeature - Micronaut Session store should use sharded pubsub in Redis Cluster 7.0+  \nFeature - RClusteredScoredSortedSet object implemented  \nFeature - `maxDeletedEntryId`, `entriesAdded`, `recordedFirstEntryId` properties added to `StreamInfo` object  \nFeature - `inactive` property added to `StreamConsumer` object  \nFeature - `LocalCachedMapOptions.cacheSize = -1` should disable local cache storage  \n\n__Breaking change - Apache Tomcat Manager and Micronaut Session store now use sharded PubSub in Redis Cluster 7.0+__  \n\nFixed - map index entry isn't deleted when `RLiveObjectService` expires  \nFixed - `RMultimap.fastRemoveValue()` method doesn't delete entry completely if no values retain  \nFixed - Default getCache method checks for Object class equality (thanks @agupta-hw)  \nFixed - `RScoredSortedSet.distributedIterator()` doesn't work (regression since 3.21.0)  \nFixed - Memory leak if `RLocalCachedMap` created with `storeMode=LOCALCACHE` and `syncStrategy=UPDATE` params  \nFixed - wait time handling in RedissonSpinLock (thanks @vladimirkl)  \nFixed - java.lang.ClassCastException is thrown by RDequeReactive.pollLast() and RDequeReactive.pollFirst() methods (thanks @wynn5a)  \nFixed - `RSearch.search()` method throws \"Parameters must be specified in PARAM VALUE pairs\" error  \nFixed - `RRateLimiter.setRate()` method does not behave as expected when RateType is pre_client (thanks @wynn5a)  \nFixed - collection fields aren't deleted when `RLiveObject` expires or is deleted  \n\n### 05-Jun-2023 - 3.22.0 released\nFeature - Spring Data Redis 3.1.0 implementation  \nFeature - Spring Boot 3.1.0 support  \nFeature - `lastEntry()`, `firstEntry()`, `pollLastEntries()`, `pollFirstEntries()`, `entryIterator()`, `rankEntry()`, `revRankEntry()` methods added to `RScoredSortedSet` object  \nFeature - `RCountDownLatch`, `RLock`, `RPermitExpirableSemaphore`, `RSemaphore` objects use sharded PubSub in Redis Cluster 7.0+  \nFeature - `slavesSyncTimeout`, `commandMapper`, `sslCiphers`, `sslTrustManagerFactory`, `sslKeyManagerFactory` settings added  \nFeature - `RMultimap.fastRemoveValue()` method added  \nFeature - `allowedClasses` setting added to `SerializationCodec`  \nFeature - `entriesRead` and `makeStream` parameters added to `RStream.createGroup()` method  \n\n__Breaking change - RCountDownLatch, RLock, RPermitExpirableSemaphore, RSemaphore objects now use sharded PubSub in Redis Cluster 7.0+__  \n\nFixed - Expired LiveObjects with RIndex annotations retain indexed data  \nFixed - `RRingBuffer` doesn't implement `expire()`, `expireAt()`, `delete()`, `clearExpire()` methods properly  \nFixed - `RLocalCachedMap` local cache isn't cleared after instance expiration  \n\n### 18-May-2023 - 3.21.3 released\n\nFixed - default retryInterval isn't applied to RBatch object  \nFixed - RBatches no longer respect the default number of retries (regression since 3.21.1)  \n\n### 17-May-2023 - 3.21.2 released\nFeature - `RBitSet.set(long[], boolean)` method added (thanks to @skasj)  \n\nFixed - Pattern Topic messages are missed/duplicated after failover in cluster if channel starts with `__keyspace` and `__keyevent` and `subscriptionMode = SLAVE`  \nFixed - to many pubsub topics may cause memory leak  \nFixed - RBatches no longer respect the default number of retries (regression since 3.21.1)  \n\n### 11-May-2023 - 3.21.1 released\n\nFeature - `addIfAbsent()`, `addIfExists()`, `addIfGreater()`, `addIfLess()`, `addAll()`, `addAllIfAbsent()`, `addAllIfExist()`, `addAllIfGreater()`, `addAllIfLess()` methods added to `RSetCache` object  \nFeature - `SetAddListener`, `SetRemoveListener`, `SetRemoveRandomListener` added to `RSet` object  \nFeature - `ScoredSortedSetAddListener`, `ScoredSortedSetRemoveListener` added to `RScoredSortedSet` object  \nFeature - `MapPutListener`, `MapRemoveListener` added to `RMap` object  \nFeature - `IncrByListener` added to `RAtomicDouble` and `RAtomicLong` objects  \nFeature - `RMapCache.getAllWithTTLOnly()` method added  \n\n__Breaking change - RedissonDelayedQueue internal data format changed__  \n__Breaking change - RedissonReliableTopic internal data format changed__  \n\nImprovement - `RedissonReliableTopic` internal structure optimization  \n\nFixed - `RReliableTopic` data loss  \nFixed - failover isn't handled correctly in some cases  \nFixed - `BatchOptions.retryAttempts = 0` isn't applied to `RBatch` object  \nFixed - `RMap.keySet()` throws NPE if CompositeCodec used  \nFixed - RediSearch NumericFilter shouldn't set exclusive range by default  \nFixed - RediSearch NumericFilter throws NPE  \nFixed - `RLocalCachedMap.removeListener()` method doesn't remove loca cache listeners  \n\n### 29-Apr-2023 - 3.21.0 released\nFeature - [RediSearch module support](https://github.com/redisson/redisson/wiki/9.-distributed-services/#96-redisearch-service)  \nFeature - [Tracing support](https://github.com/redisson/redisson/wiki/16.-Observability/#162-tracing)  \nFeature - `RSetCache` extends `RSet` interface  \nFeature - `RSemaphore` and `RPermitExpirableSemaphore` objects wait for sync operations completion  \nFeature - Quarkus 3 support  \nFeature - `LocalCacheUpdateListener` and `LocalCacheInvalidateListener` listeners support added to RLocalCachedMap object  \n\nImprovement - `RRateLimiter` object uses 128-bit random  \nImprovement - EVAL script cache applied to `RBatch` executed in `IN_MEMORY` mode  \nImprovement - `RMap.keySet()` method shouldn't load map values  \nImprovement - `SequentialDnsAddressResolverFactory` default concurrencyLevel set to 6  \n\nFixed - `RMapCache.fastPut()` method doesn't clear ttl and idleTime params if entry reinserted after expiration  \nFixed - Unable to find session error arise if Tomcat session was deleted or expired  \nFixed - `MasterSlaveEntry.getClient()` method may throw NPE  \nFixed - initialize Decoders LinkedHashMap with correct initial size to avoid unnecessary resizing (thanks @theigl)  \nFixed - failover handling may cause temporary connections spike  \nFixed - `RedissonCache.invalidate()` method breaks cache configuration  \n\n### 28-Mar-2023 - 3.20.1 released\n\nFeature - `LoadBalancer.getEntry(List<ClientConnectionsEntry>, RedisCommand<?>)` method added  \nFeature - [CommandsLoadBalancer](https://github.com/redisson/redisson/blob/master/redisson/src/main/java/org/redisson/connection/balancer/CommandsLoadBalancer.java) added  \nFeature - NodeType parameter added to ConnectionListener methods  \n\nImprovement - command should be redirected to a master node if slave node returns LOADING error  \n\nFixed - `NameMapper` is called twice when acquiring a `RReadWriteLock`  \nFixed - closing idle connections causes connection listener to fire  \nFixed - `Unable to init enough connections amount!` error  \nFixed - no retry attempts are made for `None of slaves were synced` error  \nFixed - `READONLY You can't write against a read only replica..` is thrown after failover in sentinel mode (thanks @alexworkgit)  \nFixed - continuously attempts of `INFO REPLICATION` command execution until attempts limit reached by RLock object after failover  \nFixed - Node hasn't been discovered yet error isn't resolved by a new attempt for RBatch and RLock objects  \nFixed - `RedisClusterDownException`, `RedisLoadingException`, `RedisBusyException`, `RedisTryAgainException`, `RedisWaitException` are thrown by RBatch and RLock objects even if these errors disappeared after new attempts  \nFixed - `Unable to init enough connections amount! Only 0 of ... were initialized` error (thanks @alexworkgit)  \nFixed - `nameMapper` isn't applied to some methods of `RSet` and `RScoredSortedSet` objects  \nFixed - `readUnion()`, `readDiff()` and `readIntersection()` methods of `RSet` object don't use Redis slave nodes  \n\n### 01-Mar-2023 - 3.20.0 released\nFeature - new [Multi cluster mode](https://github.com/redisson/redisson/wiki/2.-Configuration/#210-multi-cluster-mode) which supports [AWS Redis Global Datastore](https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/Redis-Global-Datastore.html) and [Azure Redis Cache active-passive replication](https://learn.microsoft.com/en-us/azure/azure-cache-for-redis/cache-how-to-geo-replication)  \nFeature - [Proxy mode](https://github.com/redisson/redisson/wiki/2.-Configuration/#29-proxy-mode) supports [RLEC Active-Active databases](https://docs.redis.com/latest/rs/databases/active-active/get-started/)  \nFeature - [monitorIPChanges](https://github.com/redisson/redisson/wiki/2.-Configuration#monitoripchanges) setting added for replicated servers mode  \nFeature - auto-detection of unavailable master in replicated mode (thanks @nicdard)  \n\nFixed - `RLock` can only be obtained by single redisson node if `None of slaves were synced` error occurred  \nFixed - `RSetMultimapReactive.get()` method throws `ClassCastException`  \nFixed - Redisson doesn't start in Spring Boot Native image  \nFixed - `RedissonClient.shutdown(long, long, TimeUnit)` method isn't overridden by cluster, replicated and sentinel managers  \nFixed - Node hasn't been discovered yet error isn't resolved by a new attempt for RBatch and RLock objects  \nFixed - `RMapCache.addAndGet()` method doesn't handle Long type properly  \nFixed - `eventLoopGroup`, `connectionListener` and `executor` settings can't be defined through YAML configuration  \nFixed - `keySet()`, `values()`, `entrySet()` methods of `RLocalCachedMap` return empty result if `storeMode == LOCALCACHE`\n\n### 06-Feb-2023 - 3.19.3 released\nFixed - a new attempt should be made on WAIT error during failover  \nFixed - Kryo5Codec fails to (de)serialize Object without no-args constructor (regression since 3.19.2)  \n\n### 01-Feb-2023 - 3.19.2 released\n\nFixed - `RLock` instance can acquire lock with previous leaseTime if it's not specified  \nFixed - `RMap.computeAsync()` method causes deadlock if MapLoader is defined  \nFixed - `RBoundedBlockingQueue.offer()` methods always use global codec  \nFixed - Spring Boot `clientName` setting isn't used  \nFixed - `connectTimeout` setting is set incorrectly if Spring Boot 2.4.0+  \nFixed - command replies don't match if exception is thrown in CommandEncoder  \nFixed - empty result of BLMPOP command causes IndexOutOfBoundsException  \nFixed - canceled blocking operation isn't interrupted immediately in some cases  \nFixed - RStream.read() and RStream.readGroup() methods are hang forever is timeout > 0 and < 1000 milliseconds  \nFixed - `CacheLoader.loadAll()` method isn't called by `JCache.getAll()` method if readThrough=true  \nFixed - `Kryo5Codec` Serializers don't work in GraalVM native image mode  \nFixed - `LinkedHashMap` and `LinkedHashSet` objects can't be decoded properly by `Kryo5Codec`  \nFixed - `NameMapper` isn't applied to `RFunction` and `RScript` objects  \nFixed - `RFunction.callAsync()` method called with `RBatch` object throws `MOVED` errors in Redis cluster mode  \nFixed - `RFunction.loadAndReplace()` method uses incorrect command parameters  \nFixed - `codec`, `nettyHook`, `addressResolverGroupFactory`, `connectionListener` settings can't be defined through Quarkus or Helidon config  \nFixed - `RFunction.load()` method uses incorrect command parameters  \nFixed - empty `RTopic` message handling (thanks @MooRoakee)  \n\n### 06-Jan-2023 - 3.19.1 released\nFeature - `containsEach()` method added to RSet object (thanks to @slovvik)  \nFeature - `getPermits()`, `acquiredPermits()`, `setPermits()` methods added to `RPermitExpirableSemaphore` object (thanks to @kscaldef, @derekroller)\n\n__Breaking change - Kryo5Codec uses own serializators to serialize UUID, URI and Pattern objects__\n\nFixed - `RReliableTopic` doesn't remove all expired subscribers at once  \nFixed - `RPatternTopic` messages duplication after failover in cluster if channel starts with `__keyspace@` and `__keyevent@`  \nFixed - `RBatch.getListMultimapCache()` method should return `RMultimapCacheAsync` interface  \nFixed - SharedPubSub listener isn't being triggered (thanks to @MrChaos1993)  \nFixed - `RSetCacheRx` and `RSetCacheReactive` miss `tryAdd()` method  \nFixed - `RSetRx` and `RSetReactive` objects miss `tryAdd()` method  \nFixed - `RBloomFilter` bitset can't be expired and deleted if `nameMapper` is used (thanks to @javed119)  \nFixed - `RMapCacheRx` and `RMapCacheReactive` interfaces miss `addListener()` method  \nFixed - `RMapCacheAsync` interface misses `addListenerAsync()` method  \nFixed - `RTopicAsync.addListenerAsync()` method uses wrong generic pattern for MessageListener object  \nFixed - `RPermitExpirableSemaphore` throws CROSSSLOT error in cluster if nameMapper is used  \n\n### 16-Dec-2022 - 3.19.0 released\n\nFeature - implementation of Spring Cache methods added in Spring 5.2  \nFeature - `entriesRead` and `lag` fields added to `StreamGroup` object  \nFeature - added [RFencedLock](https://github.com/redisson/redisson/wiki/8.-distributed-locks-and-synchronizers/#810-fenced-lock) implementation  \nFeature - [credentialsResolver](https://github.com/redisson/redisson/wiki/2.-Configuration#credentialsresolver) setting added  \n\n__Breaking change - default codec changed to Kryo5Codec__  \n\nFixed - new Redis node isn't discovered between PubSub subscription attempts  \nFixed - `codec`,`nettyHook`,`addressResolverGroupFactory`,`connectionListener` settings can't be defined through Micronaut config  \nFixed - evictions metrics doesn't work for RedissonCache (thanks @Nicola Dardanis)  \nFixed - PubSub connection isn't reused if it reached subscriptions limit before unsubscribe operation  \nFixed - PubSub connection returns to connection pool only if subscriptions limit was reached  \nFixed - use slf4j late-binding when logging instead of string concat (thanks @vatarasov)  \nFixed - most of pubsub subscriptions fail to resubscribe after failover  \nFixed - `RBatch` with `executionMode = REDIS_WRITE_ATOMIC` throws NPE in case of connection starvation  \nFixed - `CommandDecoder.messageDecoder()` method throws NPE if `RBatch` object used with `executionMode = IN_MEMORY` (regression since 3.18.1)  \nFixed - some scheduled tasks aren't executed (regression since 3.17.5)  \nFixed - `RFunction` doesn't pass keys to Redis correctly (thanks @@jordanrmerrick)  \nFixed - incorrectly reset jackson type factory (thanks @noelvo)  \nFixed - cluster partitions parsing error isn't logged  \n\n### 30-Nov-2022 - 3.18.1 released\n\nFeature - Spring Data Redis 3.0.0 module added  \n\nFixed - PubSub subscription in cluster sometimes doesn't apply to all nodes  \nFixed - command replies don't match if connection pool size < 10 and at least one command failed  \nFixed - `RLock` throws `CancellationException` continuously  \nFixed - `None of slaves were synced` error is thrown after failover during RLock acquisition  \nFixed - AWS Elasticache cluster failover  \nFixed - `hRandFieldWithValues()` and `hRandField()` methods of Spring Data Redis module throw `ClassCastException`  \nFixed - `trySetPermitsAsync()` method of RPermitExpirableSemaphore object shouldn't allow to overwrite the number of permits if value == 0 (thanks @kscaldef)  \nFixed - `RKeys` object doesn't use `nameMapper`  \nFixed - connection leak after master failover  \n\n### 11-Nov-2022 - 3.18.0 released\n\nFeature - Tomcat 10.1.x support  \nFeature - labels support for RTimeSeries object  \nFeature - compatibility with Spring Boot 3 (thanks @olivierboudet)  \nFeature - RxJava and Reactive interfaces for RLocalCachedMap object  \nFeature - local cache support for JsonBucket object  \n\nImprovement - StringCodec now implements JsonCodec  \n\nFixed - `RDoubleAdder` and `RLongAdder` objects don't work with `nameMapper`  \nFixed - `RBlockingQueue` methods should return null if negative timeout defined  \nFixed - `RLocalCachedMap.clearLocalCacheAsync()` method shouldn't retain semaphore after invocation  \nFixed - Spring Data Redis methods weren't implemented: `zRandMember()`, `zRandMemberWithScore()`, `zPopMin()`, `bZPopMin()`, `zPopMax()`, `bZPopMax()`, `zMScore()`, `zDiff()`, `zDiffWithScores()`, `zDiffStore()`, `zInter()`, `zInterWithScores()`, `zUnion()`, `zUnionWithScores()`, `hRandField()`, `hRandFieldWithValues()`, `copy()`, `lMove()`, `bLMove()`, `lPop()`, `rPop()`, `sMIsMember()`, `getEx()`, `getDel()`  \nFixed - attempts to connect to the failed master after failover in cluster mode  \nFixed - `RMapCache` `MapEntryListener` doesn't work with `nameMapper`  \nFixed - `RJsonBucket.getKeys()` method doesn't use path parameter  \nFixed - `RRateLimiter.getConfig().getRate()` throws NPE if it doesn't exist (thanks @Tanky-Zhang)  \nFixed - `RTransaction` objects should be the same instances on each \"get...\" call  \nFixed - `RScheduledExecutorService` cron triggers fire continuously for hours for some time zones (regression since 3.16.5)  \nFixed - `RSortedSet.add()` throws NPE (thanks @yuwei)  \nFixed - `RKeysReactive.getKeysByPattern()` method isn't giving all entries if downstream consumer is slow  \nFixed - \"Unable to unfreeze entry\" errors in sentinel mode  \nFixed - `JsonBucket.compareAndSet()` method with null as update value deletes whole object  \nFixed - Redis Cluster topology scanned partially in case of DNS resolution error  \nFixed - Slave nodes failed to pass complete initialization shouldn't be added as nodes  \nFixed - ByteBuf leaks when one of multiple parameters can't be encoded  \nFixed - `SearchDomainUnknownHostException` is thrown occasionally  \n\n### 2-Oct-2022 - 3.17.7 released\n\nImprovement - Failed connection ping isn't taken in account in Redis slave health check  \n\nFixed - RScheduledExecutorService cron expression doesn't support year  \nFixed - `replaceValues()` method of `RListMultimap` and `RSetMultimap` throws exception for empty collection  \nFixed - RedissonBaseLock throws NPE after failover  \nFixed - Spring Data Redis `evalsha()` method doesn't use key for Redis node routing in Cluster mode  \nFixed - DNS change isn't detected in replicated mode  \nFixed - `RCollectionReactive.addAll()` method is executed without subscription  \nFixed - `RKeysAsync.countExists()` method throws errors in cluster mode  \nFixed - Spring Data Redis reactive setIfAbsent should return `false` on error (thanks @zhuangzibin)  \nFixed - Micronaut native image configuration  \nFixed - RBatchReactive execution stuck forever if `useScriptCache = true`  \nFixed - NameMapper is applied incorrectly to RBoundedBlockingQueue object  \nFixed - incorrect IPv6 conversion  \nFixed - Spring Boot Module ignores username parameter set via Spring Redis config  \nFixed - SpringBoot yaml configuration parsing errors shouldn't be suppressed  \n\n### 24-Aug-2022 - 3.17.6 released\n\nFeature - Helidon 3.0 support  \nFeature - ability to specify `MapWriterAsync` and `MapLoaderAsync` in `MapOptions` object  \n\nImprovement - log output string expanded to 1000 characters by default\n\nFixed - `RBuckets` methods don't use `nameMapper`  \nFixed - PingConnectionHandler should close channel on RedisLoadingException, RedisTryAgainException, RedisClusterDownException, RedisBusyException  \nFixed - Invocation timeout isn't applied for `RTopic.removeListenerAsync()` methods  \nFixed - `WriteBehind` task isn't stopped after `RMap.destroy()` method invocation  \nFixed - Connection pinging works incorrectly if new connections were created in pool  \nFixed - \"SlaveConnectionPool no available Redis entries\" error occurs in Cluster caused by early excluding of master node from nodes for reading  \nFixed - Permanent blocking calling threads  \n\n### 22-July-2022 - 3.17.5 released\n\nFeature - `touch()`, `unlink()` and `delete()` methods implemented for transactional `RSetCache` and `RSet` objects  \nFeature - transactional `RBucket`, `RMap`, `RMapCache`, `RSetCache`, `RSet` objects support `expire()`, `expireAt()` and `clearExpire()` methods  \nFeature - `ExecutorOptions.idGenerator()` setting added  \nFeature - methods with task id added to RExecutorService interface  \n\nFixed - duplicate subscriptions with RedisMessageListenerContainer in Spring Data Redis 2.7  \nFixed - `NameMapper` applied twice to transactional `RBucket`  \nFixed - some Quarkus environment variables clear all Redisson properties set through config file  \nFixed - `RJsonBucket.delete()` method doesn't work  \nFixed - `RExecutorService.submitAsync(Callable, long, TimeUnit)` method throws ClassCastException (thanks @xyqshi)\nFixed - Lock synced slaves check  \nFixed - reactive scripting commands throw ClassCastException if result is list of list  \nFixed - `RBatch.getJsonBucket()` method should return RJsonBucketAsync interface  \n\n### 16-June-2022 - 3.17.4 released\n\nFeature - [RJsonBucket](https://github.com/redisson/redisson/wiki/6.-distributed-objects/#615-json-object-holder) object added for `JSON.*` commands support  \nFeature - `RFunction` and `RShardedTopic` objects added to `RBatch`  \n\nFixed - continuous \"Unable to unfreeze entry\" error in Sentinel mode  \nFixed - `nameMapper` setting isn't applied to `RExecutorService` and `RScheduledExecutorService`  \nFixed - channel write exception may lead to wrong commands order  \nFixed - don't connect to sentinel resolved by DNS if it's not included in result of SENTINEL SENTINELS command  \nFixed - `RScript.load()` method shouldn't use failed Redis nodes  \nFixed - `RPermitExpirableSemaphore.acquireAsync()` method hangs until leaseTimeout occurs. (regression since 3.16.8)  \nFixed - use 60 seconds polling instead of take command for RRemoteService responses  \nFixed - `eval()` and `evalSha()` methods of Spring Data Redis ReactiveScriptingCommands object throw IndexOutOfBoundsException  \nFixed - expired entries eviction process is limited to 5000 per call  \nFixed - sharded topic isn't resubscribed after channel reconnection  \nFixed - execution of blpop command leads to reconnection  \n\n### 27-May-2022 - 3.17.3 released\n\nFeature - Hibernate 6 support  \n\nImprovement - amount of created connections in parallel reduced to 2 for better stability  \n\nFixed - Spring Boot Starter doesn't start with Spring Boot 2.7  \nFixed - RRateLimiter doesn't allow to set expiration time of permits and values  \n\n### 23-May-2022 - 3.17.2 released\nFeature - `RScoredSortedSet.replace()` method added  \nFeature - Spring Data Redis 2.7.0 module added  \nFeature - `RPatternTopic.removeAllListenersAsync()` method added  \nFeature - `RShardedTopic` object added (requires Redis 7.0+)  \nFeature - allow to specify username and password in redis connection url  \nFeature - JCache data partitioning with local cache support  \n\nFixed - \"Can't add slave\" exceptions after fail over in cluster mode  \nFixed - \"Unable to acquire subscription\" error after connection interruption  \nFixed - JCache hangs forever when getting value from cache with useScriptCache=true  \nFixed - `RMap.merge()` method hangs if MapLoader specified  \nFixed - `FairLock` thread counter should start from 1 (thanks to @thisiswanghy)  \n\n### 25-Apr-2022 - 3.17.1 released\n\nFeature - transient fields support for LiveObjects to avoid data serialization  \nFeature - `removeAllListenersAsync()` method added to `RTopic` object  \nFeature - `transactionAware` setting added to RedissonSpringCacheManager  \n\nImprovement - amount of created connections in parallel reduced to 5, for better stability\n\nFixed - `RedissonReactiveClient.getMultilock()` method should accept RLockReactive objects  \nFixed - `RedissonRxClient.getMultilock()` method should accept RLockRx objects  \nFixed - don't close connection on error response during topology scan  \nFixed - SET command should be an idempotent operation  \nFixed - MasterSlaveConnectionManager throws ClassCastException if host unknown  \nFixed - `RReadWriteLock` renewal doesn't work if writeLock released before readLock then both were acquired  \nFixed - Spring Data Redis module. Scan In cluster mode, other nodes cannot be scanned  \nFixed - `RReliableTopic` object throws \"attempt to compare nil with number\" error  \nFixed - `RedissonSpinLock.tryLock()` method returns false instead of true if the remaining wait time is negative  \nFixed - an error should be thrown if `merge()`, `compute()`, `computeIfAbsent()` and `computeIfPresent()` of `RMap` used in batch  \nFixed - Unable to specify timezone in CronSchedule object  \nFixed - `RMapCache.destroy()` method throws NPE  \nFixed - `RLock.tryLock()` method throws `CancellationException`  \nFixed - Unable to connect to Redis server error is thrown due to NPE  \nFixed - `RBlockingQueue.pollLastAndOfferFirstTo()` throws `ClassCastException` if result is empty  \nFixed - internal AsyncSemaphore doesn't skip canceled tasks in the same thread  \nFixed - `RLocalCachedMap.getAll()` method doesn't respect `storeCacheMiss` setting  \nFixed - 0 value for waitTime and leastTime isn't handled correctly by RMultiLock object  \nFixed - Spring Data Redis module. RedissonConnection.execute() method doesn't invoke overloaded methods correctly  \n\n### 20-Mar-2022 - 3.17.0 released\n\nFeature - `RFunction` object added (requires Redis 7.0+)  \nFeature - `pollLastEntriesFromAny()` and `pollFirstEntriesFromAny()` methods added to RScoredSortedSet object (requires Redis 7.0+)  \nFeature - `expireIfSet()`, `expireIfNotSet()`, `expireIfGreater()` and `expireIfLess()` methods added to RExpirable interface (requires Redis 7.0+)  \nFeature - `checkLockSyncedSlaves` setting added  \nFeature - `getAndExpire` and `getAndClearExpire()` methods added to `RBucket` object (requires Redis 6.2.0+)  \nFeature - `pollFirstFromAny()` and `pollLastFromAny()` methods with timeout and count added to `RScoredSortedSet` object (requires Redis 7.0+)  \nFeature - `pollFirst()` and `pollLast()` methods with timeout and count added to `RScoredSortedSet` object (requires Redis 7.0+)  \nFeature - `addAllIfLess()`, `addAllIfGreater()`, `addAllIfExist()`, `addAllIfAbsent()` methods added to `RScoredSortedSet` object  \nFeature - `RExpirable.expire(Duration)` method added  \nFeature - `RExpirable.expireTime()` method added (requires Redis 7.0+)  \nFeature - `range()`, `rangeReversed()`, `entryRange()`, `entryRangeReversed()` methods with limit parameter added to `RTimeSeries` object  \nFeature - `TransactionalOperation.syncSlaves` setting added  \nFeature - `pollFirstFromAny()` and `pollLastFromAny()` methods added to RBlockingQueue object (requires Redis 7.0+)  \n\nImprovement - read-only cached scripts should be executed on slaves (requires Redis 7.0+)  \nImprovement - SORT_RO command is used for slave nodes (requires Redis 7.0+)  \nImprovement - decrease size of allocated data by RPermitExpirableSemaphore  \n\nFixed - `RedissonLocalCachedMap.clearLocalCache()` method throws IllegalArgumentException  \nFixed - RedissonMultiLock doesn't work properly with RedissonSpinLock  \nFixed - SlaveConnectionPool no available Redis entries error occurs in Cluster mode  \nFixed - `RKeys.deleteByPattern()` method does not always delete keys correctly  \nFixed - `expireAt(Instant)` method of RExpirableReactive and `RExpirableRx` interfaces doesn't work  \nFixed - wrong detection of added and removed slots in Redis Cluster mode  \nFixed - `RScoredSortedSet.addIfGreater()` and `RScoredSortedSet.addIfLess()` methods always return false  \nFixed - Spring Data Connection in multi mode causes thread stuck (regression since 3.16.7)  \nFixed - Sentinel username setting is not applied (thanks to @nicolas-tg-ch)  \nFixed - RTimeSeries doesn't handle same values for different timestamps  \nFixed - Quarkus environment variables aren't parsed correctly  \nFixed - check expiration before release in RPermitExpirableSemaphore (thanks to @randomVariable2)  \nFixed - RedisTimeoutException: Command execution timeout for command: (PING) (regression since 3.16.3)  \nFixed - wrong wait time calculation in RedissonMultiLock lock method causes deadlock  \nFixed - RLocalCachedMap throws NPE if cache update listener receives message during init  \nFixed - AsyncRemoteProxy throws Redisson is shutdown exception  \nFixed - RedisClusterNode.clusterSlots() method throws Exception  \n\n### 21-Jan-2022 - 3.16.8 released\n\nFixed - Quarkus redisson config fails to load in cluster mode with one node address  \nFixed - registered `RReliableTopic` listener doesn't get old messages  \nFixed - pubsub channel isn't released if subscription timeout occurred  \nFixed - Quarkus Redisson config should be read at runtime  \nFixed - `RTopic` channels aren't unsubscribed  \nFixed - race condition causes Subscription timeout  \nFixed - `RMapCache.readAllKeySet()` doesn't use MapKey codec  \nFixed - Spring Data Redis RedissonConnection doesn't implement `lpos` command (thanks @woodyDM)  \nFixed - master host isn't formatted into compressed format for IPV6 addresses in Sentinel mode  \nFixed - Spring Data Redis `restore()` method throws Busy exception  \n\n### 23-Dec-2021 - 3.16.7 released\n\nImprovement - MessageListener should be annotated by @FunctionalInterface  \n\nFixed - RScript.scriptLoad() doesn't load script into Slave nodes  \nFixed - Spring Data RedissonConnection eval should use ByteArrayCodec (thanks @woodyDM)  \nFixed - `RSet.distributedIterator()` and `RScoredSortedSet.distributedIterator()` methods throw script error  \nFixed - synced slaves amount is not checked in RLock object  \nFixed - race condition during hostname resolution in sentinel mode which may cause slave shutdown  \nFixed - error should be thrown if slaves aren't defined in MasterSlave mode and readMode != MASTER  \nFixed - master node shouldn't be initialized as slave in single mode  \nFixed - `can't find node` error arise in replicated mode  \n\n### 06-Dec-2021 - 3.16.6 released\n\nFixed - race condition causes wrong detection of failed slaves in Replicated mode. (regression since 3.16.5)\n\n### 30-Nov-2021 - 3.16.5 released\nFeature - `countIntersection()` method added to RSet object  \nFeature - added reactive interface for `RListMultimapCache` and `RSetMultimapCache` objects  \nFeature - `sentinelUsername` setting added  \nFeature - added distributed iterator (thanks @Danila Varatyntsev)  \nFeature - added Spring Data Redis 2.6.0 support  \n\nFixed - RedissonConnectionFactory.getReactiveConnection() method of Spring Data Redis isn't compatible with Redis cluster mode  \nFixed - Mybatis RedissonCache should search redisson.yaml config at root package  \nFixed - `Can't find host in slaves!` error after failover with a new IP of master host  \nFixed - failed slaves aren't detected in Replicated mode  \nFixed - `get` operation before `put` may cause inconsistent state of local cache  \nFixed - `RList.remove(object, count)` throws exception if multiple objects were removed (thanks @cartermc24)  \nFixed - `RLocalCachedMap.delete()` method clears local cache asynchronously  \nFixed - `IdleConnectionWatcher` shouldn't close `RedisPubSubConnection` if it's in subscribed state  \nFixed - SSL is not used for Sentinel master host  \nFixed - update sync strategy of LocalCachedMap objects shouldn't apply updated value twice to instance of update source  \nFixed - JCache dependency updated to 1.1.1  \nFixed - Sentinel master-host = ? setting isn't handled properly during slave check  \nFixed - `RBuckets.trySet()` method throws CROSSSLOT error (thanks to @deerRule)  \nFixed - DNS monitor makes a new attempt to change master while current attempt wasn't finished  \n\n### 29-Oct-2021 - 3.16.4 released\nFeature - `sentinelsDiscovery` setting added  \nFeature - `quarkus.redisson.file` setting added to `redisson-quarkus` module to define external Redisson config file  \n\nImprovement - optimization of `ClusterConnectionManager.checkSlaveNodesChange()` and `ClusterConnectionManager.checkMasterNodesChange()` methods  \n\nFixed - master change monitoring task in Replicated mode stops execution if it's invoked before the dns change  \nFixed - RemoteService cannot be called if requestId is null (thanks to @jimichan)  \nFixed - codec is not applied to RBuckets.set() method in non Cluster mode  \nFixed - recovered slave shouldn't be added again in Redis Cluster mode  \nFixed - `releaseConnection` method may cause StackOverflowError  \nFixed - MOVED response with hostname isn't handled properly  \nFixed - `RStream.readGroup()` method throws `IndexOutOfBoundsException` if group has a message without data  \nFixed - NPE in CommandPubSubDecoder  \nFixed - RExecutorService may execute same task twice at the same time  \nFixed - dependencies for testing should use appropriate scope  \nFixed - `RPriorityQueue.add()` method uses async method  \nFixed - don't retry non-idempotent operations which were successfully sent  \nFixed - RMapCache.fastRemove throws RedisException: too many results to unpack  \nFixed - RRateLimiter decreases limit over the time in highly concurrent environment  \nFixed - don't PING connection if it's in use  \n\n### 21-Sep-2021 - 3.16.3 released\nImprovement - `RBuckets.get()` method should group keys by slot in Redis Cluster mode  \nImprovement - `RBatch` result decoding optimization  \n\nFixed - RExecutorService, RRemoteService execution may hang if connection used for tasks pooling was interrupted  \nFixed - RBatch with skipResult() option affects result of other commands (regression since 3.16.1)  \nFixed - connection leak (regression since 3.16.1)  \nFixed - `getBuckets().set()` method throws CROSSSLOT error (thanks to @mikawudi)  \nFixed - `RedissonMapCache.addListener()` method throws NPE  \nFixed - master-host of Slave node isn't resolved in Sentinel mode  \nFixed - interrupted `RLock.tryLock()` method keeps renewing lock indefinitely (thanks to @Cesarla)  \nFixed - don't ping connection if it's in use  \nFixed - `natMapper` isn't applied to resolved Sentinel and Cluster hosts  \n\n### 3-Sep-2021 - 3.16.2 released\nFeature - Micronaut 3.0 integration  \nFeature - added batched `merge()` method to `RLiveObjectService` interface  \nFeature - resolve hostnames used in Redis Cluster topology  \nFeature - resolve hostnames used in Redis Sentinel topology  \nFeature - added batched `addLast()` and `addFirst()` methods to `RDeque`, `RDequeRx` and `RDequeReactive` interfaces  \nFeature - added `addAllCounted()` and `removeAllCounted()` methods to `RSet`, `RSetRx` and `RSetReactive` interfaces  \n\nFixed - Redis Stream trim command with MINID strategy is not fully supported  \nFixed - Quarkus requires `AutowiredAnnotationBeanPostProcessor` class during native image execution  \nFixed - issues with Quarkus Netty dependencies  \nFixed - `MOVED redirection loop detected` error in Redis Cluster  \nFixed - handling master with empty slots in Redis Cluster topology  \nFixed - SentinelConnectionManager should use unified compressed format for IPv6  \nFixed - `RLocalCachedMap.readAllValues()` method uses key decoder instead of value  \nFixed - empty array passed to `RKeys.delete()` method causes thread blocking  \nFixed - cluster partition without address causes NPE  \nFixed - threads waiting for `RSemaphore` permits acquisition unable to acquire them if permits added  \nFixed - `RRateLimiter` allows limit overcome  \nFixed - `RMapCacheReactive` and `RMapCacheRx` interfaces miss method to define eviction algorithm  \nFixed - write-behind tasks aren't flushed after Redisson `shutdown()` method invocation  \nFixed - LiveObjects with indexed field can't be stored using batch persist method  \nFixed - failed master shouldn't skipped in Redis Cluster topology scan (thanks to @JerryWzc)  \nFixed - `RListReactive` iterator with filter returns non-deterministic result  \nFixed - `replicatedServers` mode should use ip addresses if nodes defined using hostnames  \nFixed - multiple masters check removed for `replicatedServers` mode  \nFixed - `MapWriter` should be defined along with writeBehind settings  \n\n### 26-Jul-2021 - 3.16.1 released\nImprovement - MarshallingCodec and JsonJacksonCodec warmup added  \nImprovement - performance improvement for connection pool with few connections  \n\nFixed - connection leak after command error if Batch executed in REDIS_WRITE_ATOMIC mode\nFixed - AsyncSemaphore race condition issue  \nFixed - Quarkus native remote service invocation fails  \nFixed - `nameMapper` setting isn't applied to `RTopic` object  \nFixed - Batch in REDIS_WRITE_ATOMIC mode doesn't respect batch settings  \nFixed - `UndeclaredThrowableException` is thrown when cache down while executing `RLiveObjectService.get()` method  \nFixed - Reactive Transactions aren't unlocking transactional locks  \nFixed - keySet() method of transactional map throws Exception  \nFixed - lock expiration renewal should be canceled if owner doesn't exist (thanks to @regidio)  \n\n\n### 28-Jun-2021 - 3.16.0 released\nFeature - GraalVM native-image support  \nFeature - Spring Data Redis 2.5.x support  \nFeature - [Helidon CDI](https://github.com/redisson/redisson/tree/master/redisson-helidon) integration  \nFeature - [Quarkus](https://github.com/redisson/redisson/tree/master/redisson-quarkus) integration  \nFeature - [Micronaut](https://github.com/redisson/redisson/tree/master/redisson-micronaut) integration  \nFeature - data partitioning support for JCache  \n\nFixed - Live Object `Conditions.in()` aren't considered if defined in `Conditions.and()` clause  \nFixed - Redisson shutdown takes much time after `RBatch` execution  \nFixed - `RBatch` object in REDIS_WRITE_ATOMIC or REDIS_READ_ATOMIC mode can be corrupted by PING command  \nFixed - `RKeysReactive.getKeysByPattern()` method returns wrong result  \nFixed - `RExpirable.expire(Instant)` method doesn't work for RBloomFilter, RBoundedBlockingQueue, RDelayedQueue, RLock, RIdGenerator, RMultimap, RMapCache, RPriorityQueue, RRateLimiter, RReliableTopic, RSetMultimap, RTimeSeries objects  \nFixed - `RBlockingDequeReactive.takeElements()` method does not consume all elements  \nFixed - `RScheduledExecutorService` stops to work if task timeout occurred  \nFixed - `RedissonReactiveSubscription` removes listener after first 32 messages  \nFixed - `RedisNodeNotFoundException` is thrown after cluster failover (thanks to @UzimakiNaruto)  \n\n### 07-Jun-2021 - 3.15.6 released\n\nFixed - `RedisSentinel.getMaster()` method throws NPE  \nFixed - `RSemaphore.drainPermits()` throws `ClassCastException`  \nFixed - missed implementation of few methods in Spring Data's RedissonConnection  \nFixed - `RLocalCachedMap.containsKey()` method doesn't invoke map loader  \nFixed - `RSemaphore` permits can't be acquired due to \"Maximum permit count exceeded\" error  \nFixed - `RedissonNode` unable to start due to `ClassNotFoundException`  \nFixed - SENTINEL SENTINELS command timeout (thanks to @zhwq1216)  \nFixed - `JCachingProvider` shouldn't depend on class from Jackson 2.12.x  \nFixed - `JCache.get()` method swallows Redis errors  \nFixed - `RLocalCachedMap` doesn't used MapLoader if storeMode = LOCALCACHE  \n\n### 12-May-2021 - 3.15.5 released\n\nFeature - `discard()` method added to `RBatch` object  \nFeature - `broadcastSessionUpdates` setting added to Tomcat Session Manager  \n\nFixed - no error if jcache has wrong configuration in yaml format  \nFixed - frequent Redis master failover causes memory leak in `IdleConnectionWatcher`  \nFixed - `RedisStreamCommands.xGroupDelConsumer()` method in Spring Data module uses incorrect Redis command  \nFixed - `RLock` can't be acquired anymore if pubsub connection limit was reached (thanks to @zhwq1216)  \nFixed - PubSub Lock entries memory-leak during Lock acquisition (thanks to @zhwq1216)  \nFixed - dns monitor shouldn't use IP addresses as hostnames  \nFixed - failover handling stops to work if Redis Cluster node returned empty topology  \nFixed - `mGet()` and `mSet()` methods of Spring Data `RedissonConnection` object throw CROSSSLOT error  \nFixed - `touch()`, `mDel()`, `mUnlink()`, `expire()`, `pExpire()`, `expireAt()`, `pExpireAt()`, `persist()` methods of Spring Data `ReactiveKeyCommands` interface should be executed as write operation  \nFixed - RMap.computeIfPresent() doesn't update mutable objects  \nFixed - `MapReduce` timeout isn't applied if `ExecutorService` node is down  \nFixed - Redisson tries reconnect to Redis nodes which marked as shutdown by topology manager  \n\n### 20-Apr-2021 - 3.15.4 released\n\nFeature - sslProtocols setting added  \nFeature - nameMapper setting added  \nFeature - `getSigned()`, `setSigned()`, `incrementAndGetSigned()`, `getUnsigned()`, `setUnsigned()`, `incrementAndGetUnsigned()` methods added to `RBitSet` object  \nFeature - `updateEntryExpiration()`, `getWithTTLOnly()` methods added to `RMapCache` object  \n\nImprovement - Spring Cache, MyBatis Cache, Hibernate Cache implementations should read data from Redis slave if idleTime and cache size weren't specified  \n\nFixed - `ClusterConnectionManager.upDownSlaves()` method throws `ConcurrentModificationException`  \nFixed - `ClusterConnectionManager.checkMasterNodesChange()` method throws NPE  \nFixed - `JCache` `CacheEntryUpdatedListener` doesn't get old value of changed entry (thanks to @testower)  \n\n\n### 30-Mar-2021 - 3.15.3 released\n\nFeature - [connectionListener](https://github.com/redisson/redisson/wiki/2.-Configuration#connectionlistener) setting added  \n\nFixed - `tryAcquire()` and `availablePermits()` method of `RRateLimiter` object throw too many results to unpack error  \nFixed - `RRateLimiter` object throws LUA-script error  \nFixed - connection leak in Topology Manager for Replicated Redis config  \nFixed - `ConnectionListener.onConnect()` method isn't triggered during Redisson start  \nFixed - `addLastIfExists()` and `addLastIfExists()` methods of `RDeque` object don't work  \nFixed - `ArrayIndexOutOfBoundsException` is thrown if Redis master change was unsuccessful  \nFixed - `RScheduledExecutorService.scheduleAtFixedRate()` starts multiple instances of the same task if multiple workers defined  \nFixed - tasks scheduled via `RScheduledExecutorService.scheduleAtFixedRate()` method aren't executed after some time  \n\n### 22-Mar-2021 - 3.15.2 released\n\nFeature - `move()` method added to `RDeque` and `RBlockingDeque` objects  \nFeature - `MINID` trimming strategy and `LIMIT` argument added to `RStream.add()` method  \nFeature - new config `checkSlaveStatusWithSyncing` setting added  \nFeature - enable tcpNoDelay setting by default (thanks to @mikawudi)  \nFeature - `RedissonClient.reactive()` and `RedissonClient.rxJava()` methods added  \nFeature - Spring Boot auto configuration should create `Reactive` and `RxJava` instances  \n\nImprovement - simplified API of `RStream.read()` and `RStream.readGroup()`  \n\nFixed - Hibernate modules prior 5.3 version don't support fallback for `nextTimestamp()` method  \nFixed - `MarshallingCodec` doesn't release allocated ByteBuf object if exception thrown during encoding  \nFixed - `retryInterval` isn't used for next attempt if Redis client didn't send response  \nFixed - lease timeout updated in non-safe way in `org.redisson.RedissonLock#tryLockInnerAsync` method (thanks to @coding-tortoise)  \nFixed - references in RxJava objects aren't supported  \nFixed - Spring Data Redis module doesn't support `StreamReadOptions.isNoack()` option in `RedisStreamCommands.xReadGroup()` method. \nFixed - trying to authentificate sentinel server without password  \nFixed - `RStream.getInfo()` method doesn't decode entries  \nFixed - Redisson doesn't reconnect slave if it was excluded before due to errors in failedSlaveCheckInterval time range. (thanks to @mikawudi)  \n\n\n### 03-Mar-2021 - 3.15.1 released\n\nFeature - `expireAt(Instant)` method added to `RExpirable` object  \nFeature - `random()` method added to `RScoredSortedSet` object  \nFeature - `randomKeys()` and `randomEntries()` methods added to `RMap` object  \nFeature - count with any parameter added for search in `RGeo` object  \nFeature - ability to search in box added for `RGeo` object\n\nImprovement - simplified RGeo API with `search` methods  \nImprovement - added check for invocation of sync methods in async/rx/reactive listeners  \n\nFixed - continuous reconnecting to broken host if it was defined as hostname in Redisson Cluster config  \nFixed - `WeightedRoundRobinBalancer` filters master node in readMode=ReadMode.MASTER_SLAVE  \nFixed - `RPatternTopicReactive.removeListener()` method should return `Mono<Void>`  \nFixed - remove `authType` and `principal` attributes on Apache Tomcat logout  \nFixed - scheduled tasks via `RScheduledExecutorService` object can't be canceled  \nFixed - `RStream.claim()` method throws NPE if given id does not exist  \nFixed - `RPatternTopic` on keyspace/keyevent notification subscribes only to single master node in Redis cluster  \nFixed - Class cast exception is thrown during iteration of `RMapCache` entries  \nFixed - internal `RedissonBaseLock.evalWriteAsync()` method isn't executed again if cluster slaves amount > 0  \nFixed - CPU spike after Slave failover if `subscriptionMode=SLAVE`  \nFixed - `rename()` method throws throws RedisException if `RBloomFilter` is empty  \nFixed - output full exception stacktrace if unable connect to sentinel server  \nFixed - duplicated `PING` sent when Redis connection got reconnected  \nFixed - Optional class can't be used as a result object in RemoteService interface  \nFixed - `redisson-spring-boot-starter` should use `redisson-spring-data-24` module  \nFixed - `RMapCacheRx.getLock()` returns `org.redisson.RedissonLock` instead of `org.redisson.api.RLockRx`  \nFixed - `RMapCacheReactive.getLock()` returns `org.redisson.RedissonLock` instead of `org.redisson.api.RLockReactive`  \n\n### 28-Jan-2021 - 3.15.0 released\n\nFeature - **Apache Tomcat 10** support added  \nFeature - **Spin Lock** added. Please refer to [documentation](https://github.com/redisson/redisson/wiki/8.-Distributed-locks-and-synchronizers#89-spin-lock) for more details (thanks to @Vorotyntsev)  \nFeature - `sentinelPassword` setting added (thanks to @ghollies)  \nFeature - `RedisNode.getMemoryStatistics()` method added  \nFeature - `setAndKeepTTL()` method added to `RBucket` object  \nFeature - min idle time parameter added to `listPending()` and `pendingRange()` methods of `RStream` object  \nFeature - `autoClaim()`, `fastAutoClaim()` and `createConsumer()` methods added to `RStream` object  \nFeature - `addIfExists()`, `addIfGreater()` and `addIfLess()` methods added to `RScoredSortedSet` object  \nFeature - `putIfExists()` and `fastPutIfExists()` methods added to `RMap` object  \nFeature - `tryAdd()` and `addIfExists()` methods added to `RGeo` object  \nFeature - `readUnion()`, `readIntersection()`, `diff()`, `readDiff()`, `rangeTo()`, `revRangeTo()` methods added to `RScoredSortedSet` object  \nFeature - `ScoredSortedSetAddListener` added to `RScoredSortedSet` object  \n\nImprovement - use `System.nanoTime()` in `IdleConnectionWatcher` to avoid clock drifting  \n\nFixed - eval command executed on Redis cluster doesn't use key for master/slave selection  \nFixed - `MOVED` or `ASK` response from Redis causes `Unable to acquire connection!` error  \nFixed - Spring Redis Data PatternTopic listeners are invoked multiple times per message  \nFixed - don't add Redis Slave as active if connections can't be established (thanks to @yann9)  \nFixed - `RBatch` object throws Exception if not all slots are covered in Redis Cluster  \nFixed - stream and queue object may lost entry during execution of any blocking poll operation  \nFixed - Redis `BUSY` response handling (thanks to @wuqian0808)  \nFixed - InterruptedExceptions are hidden by RedisException  \nFixed - primitive class numbers aren't indexed correctly in LiveObject search engine  \nFixed - NPE is thrown if LiveObject index stored for the first time in Redis cluster  \nFixed - NPE is thrown if Redis node doesn't return \"flags\" parameter  \n\n### 22-Dec-2020 - 3.14.1 released\n\nFeature - added option `LocalCachedMapOptions.storeCacheMiss` to store cache miss in a local cache (thanks to @ipalbeniz)  \nFeature - LFU eviction algorithm added to `trySetMaxSize` and `setMaxSize` methods of RMapCache interface  \n\nImprovement - RedisNodes ping results check optimization (thanks to @blackstorm)  \nImprovement - keySet().isEmpty() and values().isEmpty() methods of RMap object aren't efficient  \n\nFixed - connection leak if new discovered slaves in `LOADING Redis is loading the dataset in memory` state (thanks to @mikawudi)  \nFixed - `RMap.putIfAbsent()` method doesn't check value for null  \nFixed - Apache Tomcat Valve objects should be added in context pipeline instead of engine's pipeline  \nFixed - slaves synchronization timeout isn't respected during `RLock.lock()` method invocation  \nFixed - ConnectionWatchdog may cause connection leak (thanks to @mikawudi)  \nFixed - `Redisson.shutdown()` method throws RejectedExecutionException  \nFixed - `count()` and `addAll()` methods of `RScoredSortedSetReactive` and `RScoredSortedSetRx` interfaces throw ClassCastException  \nFixed - `GEORADIUS_RO` command should be used instead of `GEORADIUS` in Spring Redis Data module  \nFixed - Spring Data Redis `RedissonConnection.del()` method doesn't work in pipeline on Redis cluster  \nFixed - `RLocalCachedMap.putAll()` method updates in wrong way log used for Reconnection.LOAD strategy  \nFixed - `redisRepository.opsForSet().distinctRandomMembers()` method throws ClassCastException  \n\n### 21-Nov-2020 - 3.14.0 released\n\nSpring Session implementation is deprecated now. Please refer to [documentation](https://github.com/redisson/redisson/wiki/14.-Integration-with-frameworks#147-spring-session) for more details  \n\nFeature - __`RReliableTopic` object added__. Please refer to [documentation](https://github.com/redisson/redisson/wiki/6.-distributed-objects/#613-reliable-topic) for more details  \nFeature - __`RIdGenerator` object added__. Please refer to [documentation](https://github.com/redisson/redisson/wiki/6.-distributed-objects/#614-id-generator) for more details  \nFeature - Spring Data Redis 2.4.0 integration  \nFeature - `StreamMessageId.AUTO_GENERATED` const added  \nFeature - Rx API for `RMultimapCache` object (thanks to @mlkammer)  \nFeature - cluster-safe implementation of `rename`, `renameNX` methods of `RedissonClusterConnection` object (thanks to @eager)  \nFeature - `RxJava2` API replaced with `RxJava3`  \nFeature - `tryAdd()` method added to `RSet` and `RSetCache` objects  \n\nImprovement - preventing sending CLUSTER NODES to the same host (thanks to @serssp)  \n\nFixed - `RSetMultimap` could throw a class cast exception on its `get()` method because it actually contained a list based multimap instance (thanks to @mlkammer)  \nFixed - Spring Data Redis `redisTemplate.opsForGeo().radius()` method doesn't work  \nFixed - `RKeys.deleteByPattern()` method executed in batch should throw `UnsupportedOperationException` in cluster mode  \nFixed - `CACHE_REGION_PREFIX` setting isn't applied for hibernate 5.3+  \nFixed - deprecation error log about JSON config even though it's not used  \nFixed - update new master record in DNS monitor only if it replaced old master successfully  \nFixed - `RQueue.removeIf()` method should throw `UnsupportedOperationException`  \nFixed - Lock watchdog won't renew after reconnection (thanks to @burgleaf)  \nFixed - `TimeSeries.iterator()` method doesn't respect the ordering  \nFixed - `RRateLimiter` throws \"bad argument #2 to 'unpack' (string expected, got nil).\"  \nFixed - `CROSSSLOT` error rised when clearing a redis-spring-data cache  \nFixed - `RLongAdder.sum()` and `RDoubleAdder.sum()` methods return wrong result  \nFixed - getting error while connecting to sentinel using password  \nFixed - result of `RStream.read()` method isn't sorted by key  \n\n### 13-Oct-2020 - 3.13.6 released\n\nImprovement - set pingConnectionInterval = 30000 by default\n\nFixed - CROSSLOT error thrown during RLiveObject update  \nFixed - `RRateLimiter.delete()` method returns false  \nFixed - `RBitSet.set(long bitIndex, boolean value)` should return boolean  \nFixed - `RBatch` doesn't handle `MOVED`, `ASK` Redis errors in Redis  \nFixed - \"response has been skipped due to timeout\" warnings were removed  \nFixed - additional check for blocking command added in PingConnectionHandler  \nFixed - object's name should be checked for null  \nFixed - redisson-spring-boot-starter doesn't load config file  \nFixed - `RTransaction` should be executed in IN_MEMORY_ATOMIC mode  \nFixed - high contention during connection acquisition from connection pool  \n\n\n### 28-Sep-2020 - 3.13.5 released\n\n**breaking change** - `spring.redis.redisson.config` setting renamed to `spring.redis.redisson.file`  \n\nFeature - `RClusteredTopic` object added  \nFeature - `RRingBuffer.setCapacity()` method added  \nFeature - `merge()`, `compute()`, `computeIfAbsent()`, `computeIfPresent()` methods implemented for RMap-based objects  \nFeature - spring config server support (thanks @anjia0532)  \n\nImprovement - expand config variables from system properties if not found as environment variables (thanks to @jribble)  \n\nFixed - `RKeys.keysByPattern()` method doesn't use pattern (thanks to @sh1nj1)  \nFixed - `RObjectLiveService.delete()` method throws `ClassCastException`  \nFixed - fail to insert key with TTL = 0 if the same key was previously set with non-zero TTL  \nFixed - Pubsub channel isn't reattached to a new master after slot migration  \nFixed - `PingConnectionHandler` throws `CancellationException`  \nFixed - shared session between several Tomcats expires earlier if `readMode=Redis` and `broadcastSessionEvents=false`  \nFixed - incorrect session attributes being returned in `UpdateMode=AFTER_REQUEST` and `ReadMode=REDIS`  \nFixed - Tomcat UpdateValve object throws NullPointerException if url context doesn't exist  \nFixed - old value of RLiveObject's field isn't removed from index  \nFixed - Spring Data Redis `RedissonSubscription.onPatternMessage()` method throws `ClassCastException`  \nFixed - `RSemaphore.addPermits()` method doesn't work  \nFixed - `RMultimap.sizeInMemory()` method doesn't take in account size of all associated objects  \n\n### 02-Sep-2020 - 3.13.4 released\nFeature - batch support for `revRank`, `getScore`, `addAndGetRevRank` methods added to RScoredSortedSet object (thanks to @johnou)  \nFeature - `RRateLimiter.setRate` method added (thanks to @AbhishekChandrasekaran)  \nFeature - `RObject.getIdleTime()` method added  \nFeature - `RKeys.getKeysWithLimit()` method added  \n\nFixed - `RRateLimiter.availablePermits()` method throws exception (regression since 3.13.3)  \nFixed - compatibility with Spring Data Redis 2.3.3  \nFixed - `UnsupportedOperationException` is thrown if Spring Data Redis connection executed in pipelined mode  \nFixed - multiple Tomcat requests share different instances stored in the same session in `readMode=REDIS`  \nFixed - Spring Data Redis can't be used with proxied RedissonClient instance  \nFixed - Classloading issues when `MarshallingCodec` used in Tomcat  \nFixed - Redis cluster slot calculation doesn't work properly if brace isn't closed (thanks to @dengliming)  \nFixed - `RBloomFilter` rename method doesn't rename config object (thanks to @dengliming)  \nFixed - `slf4j-simple` dependency excluded from redisson-all  \nFixed - `JCache.removeAsync` method throws NPE if operation fails  \nFixed - all cached Lua scripts are executed on Redis master nodes only  \nFixed - `XPENDING` command causes syntax error in redisson-spring-data-23  \nFixed - `CommandPubSubDecoder` throws NPE  \nFixed - `MasterSlaveConnectionManager` allocates superfluous 113Kb of memory for non-cluster Redis setup  \n\n### 05-Aug-2020 - 3.13.3 released\nFeature - BITFIELD command support added to `RBitSet` object  \n\nImprovement - reset ClassIntrospector instance after `RLiveObjectService.persist()` method invocation  \nImprovement - amount of simultaneously created connections during pool initialization reduced to 10  \n\nFixed - \"SlaveConnectionPool no available Redis entries\" error is thrown after failover  \nFixed - check RedisConnection status befor RedisConnection object join freeConnections (thanks to @mikawudi)  \nFixed - different topics subscribed to the same Redis node in Cluster  \nFixed - `RFairLock.tryLock()` method doesn't apply waitTimeout parameter  \nFixed - `RLiveObjectService.delete()` method works asynchronously  \nFixed - deserialization exception is thrown if `RMapCache.EntryRemovedListener` is set  \nFixed - incorrect registration of Sentinel node defined with hostname  \nFixed - OOM arise during `RLiveObjectService.persist()` method invocation  \nFixed - MarshallingCodec throws IllegalArgumentException: RIVER  \nFixed - `RLock.lock()` method throws java.util.NoSuchElementException  \nFixed - Spring Data Redis xReadGroup should use write operation  \nFixed - Spring Data Redis connection in multi mode may cause thread hang  \nFixed - Spring Data Redis connection in multi mode may cause connection leak  \nFixed - `RRateLimiter` rate interval might be exceeded  \n\n### 02-Jul-2020 - 3.13.2 released\nFeature - Partitioning (sharding) of Redis setup using [ShardedRedisson](https://github.com/redisson/redisson/wiki/5.-Data-partitioning-(sharding)#2-partitioning-sharding-of-redis-setup) object  \nFeature - `CLUSTERDOWN` error handling  \nFeature - `getConfig`, `setConfig` methods added to `RedisNode` interface  \n\nFixed - empty sentinels list handling  \nFixed - RMapCache.clear() method clears maxSize option  \nFixed - Redisson slowdowns access to hibernate in fallback mode  \nFixed - Sentinel hostname isn't used for ssl connection during Redisson startup  \nFixed - `RBloomFilter` methods throw NPE if RedisException thrown  \nFixed - `RAtomicDouble.getAndSet()` method throws NPE  \nFixed - `RAtomicLong.getAndSet()` method throws NPE  \nFixed - ClassCastException thrown in Tomcat environment  \nFixed - RSetMultimap.get().delete() and RListMultimap.get().delete() methods throw exception  \nFixed - blocking commands connected to Redis Cluster aren't resubscribed after Master node failover  \nFixed - connection leak if SSL connection got reconnected  \n\n### 09-Jun-2020 - 3.13.1 released\nFeature - Spring Data Redis 2.3.0 integration  \nFeature - `setIfExists` method added to `RBucket`, `RBucketRx`, `RBucketReactive` interfaces  \nFeature - RExpirable interface added to RRateLimiter  \n\nFixed - Topic channels connected to master node aren't resubscribed  \nFixed - RedissonCacheStatisticsAutoConfiguration conditions aren't match  \nFixed - `RTimeSeries.destroy()` method doesn't work  \nFixed - Redis Cluster topology scanning stopped if error occured while adding new master  \nFixed - StreamInfoDecoder to adapt to layout of XINFO response (thanks to @fawitte)  \nFixed - Redis Cluster manager throws error Slot hasn't been discovered yet after failover  \nFixed - Spring Data Redis `RedisConnection.set()` method returns null  \nFixed - `RQueueReactive.poll(int limit)` method should return `Mono<List<V>>`  \nFixed - `RQueueRx.poll(int limit)` method should return `Single<List<V>>`  \nFixed - `RedissonSetMultimap.removeAll` method removes reference to nested set  \nFixed - `WriteRedisConnectionException` is thrown after Redis Cluster failover  \nFixed - `RBatch` object doesn't wait ending of sync slaves process  \nFixed - ssl connection can't be established if Redis Sentinel was discovered by DNSMonitor  \nFixed - some tasks are not executed if RedissonNode shutdown  \nFixed - `NatMapper` is not applied to the first online Sentinel in list  \n\n### 25-May-2020 - 3.13.0 released\nFeature - __TimeSeries object added__. Please refer to [documentation](https://github.com/redisson/redisson/wiki/7.-distributed-collections/#723-time-series) for more details  \nFeature - `RLiveObjectService.findIds()` method implemented  \nFeature - `RLiveObjectService.count()` method implemented  \nFeature - `RLiveObjectService.delete()` method accepts multiple ids  \n\nImprovement - __default codec changed to MarshallingCodec__  \n\nFixed - Lock acquisition hangs if Redis failed (regression since 3.12.5)  \nFixed - `RLiveObjectService.merge()` method doesn't override collection state  \nFixed - `PingConnectionHandler` doesn't report errors if PING command can't be sent  \nFixed - `RObject.unlink()` method calls `deleteAsync()` inside instead of `unlinkAsync()` method (thanks to @AayushyaVajpayee)  \nFixed - NPE thrown after logout Tomcat application  \nFixed - Tomcat `UpdateValue` object throws NPE if getNext() returns null  \nFixed - `RedissonTransactionalMapCache.put()` method inserts entries with incorrect TTLs  \nFixed - connections to Redis master/slave are doubled after redis cluster failover  \nFixed - `RejectedExecutionException` thrown by `RedisClient.connectAsync()` method during shutdown process  \nFixed - cache isn't applied to hibernate collection, that is joined by non primary key field  \nFixed - hibernate 5.3 doesn't wrap cache exception into CacheException object  \nFixed - RedissonReactiveStringCommands.set using wrong SET RedisCommand (thanks to @xJoeWoo)  \nFixed - netty errors should be logged at ERROR level  \n\n### 16-Apr-2020 - 3.12.5 released\n\nImprovement - increased `RLock` reliability during failover. `RedLock` was deprecated  \n\nFixed - Map object is not updated after session change (thanks to @eager)  \nFixed - `RedissonSessionRepository` doesn't handle PTTL = -2 (thanks to @eager)  \nFixed - `RedissonSessionRepository` topic listener NPE race condition (thanks to @eager)  \nFixed - `RedissonReactiveSubscription.subscribe()` and `receive()` methods aren't synchronized  \nFixed - `RLiveObjectService` search with `Conditions.and()` returns wrong result  \nFixed - Redisson Tomcat Manager doesn't store principal and authType session attributes  \nFixed - Redisson is unable to start if first sentinel node in list is down  \nFixed - Spring Data `RedissonConnection.del()` method doesn't participate in pipeline  \nFixed - `RTopic.countListeners()` method returns wrong result  \nFixed - `RRateLimiter.delete()` method doesn't delete all allocated Redis objects  \nFixed - `RedissonBloomFilter` throws NPE (regression since 3.12.4)  \nFixed - CommandBatchService throws NPE (regression since 3.12.4)  \n\n### 30-Mar-2020 - 3.12.4 released\n\nFeature - cacheProvider setting added to `LocalCacheConfiguration`, `ClusteredLocalCachedMapOptions`, `LocalCacheConfiguration` and Hibernate Local Cache regions  \nFeature - `NettyHook` object added  \nFeature - `LocalCachedMapOptions.storeMode` setting added  \nFeature - `nameMapper` setting added to `DropwizardMeterRegistryProvider`  \nFeature - `username` parameter added  \nFeature - `RedissonClient.getRedisNodes()` method added  \nFeature - `Config.useThreadClassLoader` setting added  \nFeature - `ListAddListener`, `ListInsertListener`, `ListRemoveListener`, `ListSetListener`, `ListTrimListener` added to `RList` object \n\nImprovement - `MarshallingCodec` performance improvements  \n\nFixed - RedissonSessionRepository doesn't use map's codec during changeSessionId method execution  \nFixed - use `FSTConfiguration#deriveConfiguration` to preserve ConfType (thanks to Chris Eager)  \nFixed - MGET executed on Spring Data connection should use SLAVE if readMode = SLAVE (thanks to Gil Milow)  \nFixed - `XREADGROUP` and `XCLAIM` commands should be executed on Redis master  \nFixed - `JsonJacksonCodec` unable to serialize removed attributes of Tomcat Session  \nFixed - \"response has been skipped due to timeout\" error if pingConnectionInterval setting set and blocking command executed  \nFixed - semaphore used during local cache clearing process isn't deleted  \nFixed - `RPatternTopicRx()`, `RPatternTopicReactive()`, `RPatternTopic.addListenerAsync()` methods are don't work  \nFixed - cache entry can't be updated if `JCache` instance created with `CreatedExpiryPolicy`  \nFixed - `LocalCachedJCache.get()` method throws NPE  \nFixed - RedisURI throws MalformedURLException for IPv6 hosts  \nFixed - `LocalCachedJCache.removeAll()` and `LocalCachedJCache.clear()` methods are don't work  \n\n\n### 28-Feb-2020 - 3.12.3 released\n\nLZ4Codec, SnappyCodec, SnappyCodecV2 codecs now use Kryo5Codec by default  \n\nFeature - `SetObjectListener` added to `RBucket` object  \nFeature - `RBinaryStream` should expose `SeekableByteChannel` and `AsynchronousByteChannel` interfaces  \nFeature - added `RBucketsReactive` and `RBucketsRx` objects  \nFeature - added Caffeine support as alternative local cache implementation  \nFeature - added `RBinaryStreamReactive` and `RBinaryStreamRx` objects  \nFeature - added `RKeys.swapdb` method  \nFeature - added `addFirstIfExists` and `addLastIfExists` methods to `RDeque` object  \nFeature - `RPriorityDeque` extends `RDeque`  \n\nImprovement - type of `RedisExecutor.CODECS` field changed to `LRUCacheMap`  \n\nFixed - `CommandPubSubDecoder` throws NPE  \nFixed - `RLock.unlock()` results in ERR hash value if RedisLabs hosting is used  \nFixed - `RPriorityBlockingQueue.poll()` method with limit implemented  \nFixed - `redisson__map_cache__last_access__set*` objects continuously grow in size if RMapCache.maxSize defined  \nFixed - Eviction task is not stopped after `RMapCache.destroy()` method invocation  \n\n### 18-Feb-2020 - 3.12.2 released\n\nFeature - Hibernate `hibernate.cache.redisson.fallback` setting introduced  \nFeature - added `RLocalCachedMap.preloadCache` method with batch size  \n\nImprovement - `RLocalCachedMap.putAllOperation` method optimization  \n\nFixed - exception thrown by `org.redisson.jcache.JCacheEventCodec`  \nFixed - connection leak occured during `RBatch` object usage  \nFixed - Tomcat session should return the same object during the same request for `readMode = REDIS` and `updateMode = AFTER_REQUEST` settings  \nFixed - `RPriorityQueue` comparator is not deleted or expired after corresponding methods invocation  \nFixed - memory leak caused by `ClientConnectionsEntry.allConnections` field  \nFixed - `maxIdleTimeout = 1 hour` set to `RedisExecutor.CODECS` map  \nFixed - use `RBatch` for all types of Redis setup (thanks to @basiszwo)  \n\n### 31-Jan-2020 - 3.12.1 released\n\nFeature - `RTransferQueue` object added. Please refer to [documentation](https://github.com/redisson/redisson/wiki/7.-distributed-collections#722-transfer-queue) for more details  \nFeature - `availablePermits`, `availablePermitsAsync` and `drainPermitsAsync` methods added to `RSemaphoreAsync` object  \nFeature - `tryExecute`, `tryExecuteAsync` and `getPendingInvocationsAsync` methods added to `RRemoteService` object  \nFeature - `natMap` setting deprecated in favor of `natMapper`  \nFeature - `checkSentinelsList` setting added  \nFeature - `cleanUpKeysAmount` setting added  \n\nImprovement - perform Sentinel DNS check when all connections fail (thanks to @markusdlugi)  \n\nFixed - `zRemRangeByScore` and `zcount` methods of `ReactiveZSetCommands` interfaсe don't use `-inf` and `+inf` values  \nFixed - connections to disconnected Redis nodes aren't removed in sentinel and cluster mode  \nFixed - `MalformedURLException` thrown during Redis host parsing in cluster mode  \nFixed - extra square bracket added during IPV6 Redis host conversion  \nFixed - defined codec's classloader is overwritten with Thread.currentThread().getContextClassLoader()  \nFixed - `RPriorityQueue.add` method throws NPE  \nFixed - connecting to a password protected Redis Sentinel fails (thanks to @stikku)  \nFixed - java.lang.IllegalStateException thrown during `org.redisson.spring.cache.RedissonCacheStatisticsAutoConfiguration` introspection  \nFixed - `RLock` expiration renewal not working after connection problem (thanks to @edallagnol)  \nFixed - Spring Data `RedissonConnectionFactory` should call shutdown method on destroy on created Redisson instance  \n\n### 26-Dec-2019 - 3.12.0 released\n\nFeature - `RExecutorService` task id injection  \nFeature - `submit()` methods with ttl parameter added to `RExecutorService`  \nFeature - `schedule()` methods with timeToLive parameter added to `RScheduledExecutorService`  \nFeature - `MyBatis` cache implementation added  \nFeature - added implementation of `doSuspend` and `doResume` methods of Spring Transaction Manager  \nFeature - `WorkerOptions.taskTimeout` setting added  \nFeature - `RSemaphore.addPermits` method added  \nFeature - ability to define `TaskFailureListener`, `TaskFinishedListener`, `TaskStartedListener` and `TaskSuccessListener` task listeners with WorkerOptions object  \n\nImprovement - Default workers amount of `RExecutorService` set to 1\n\nFixed - CommandDecoder throws NPE  \nFixed - ReplicatedConnectionManager triggers reactivation of slaves with ip address instead of hostname (thanks to @f-sander)  \nFixed - Reactive/Rxjava2 transaction doesn't unlock lock on rollback or commit  \nFixed - Spring Transaction Manager doesn't handle Redisson `TransactionException`  \nFixed - `RBuckets.get` throws NPE for non-existed buckets (thanks to @d10n)  \nFixed - `RPermitExpirableSemaphore` does not expire  \nFixed - `RedissonCacheStatisticsAutoConfiguration` should be conditional on CacheMeterBinderProvider presence (thanks to @ehontoria)  \n\n### 28-Nov-2019 - 3.11.6 released\n\nFeature - `RExecutorServiceAsync.cancelTaskAsync()` method added  \nFeature - `RExecutorService.hasTask()` method added  \nFeature - `RExecutorService.getTaskCount()` method added  \nFeature - `RMap` write-behind queue should be fault-tolerant  \nFeature - added `poll()` methods with limit to `RQueue`, `RDeque`, `RDelayedQueue` objects  \nFeature - `checkSlotsCoverage` setting added to cluster config  \nFeature - `RExecutorService.getTaskIds()` method added  \nFeature - `awaitAsync()` methods added to `RCountDownLatch` object  \nFeature - `RCountDownLatchRx` and `RCountDownLatchReactive` objects added  \n\nFixed - channel subscription proccess in interruptible methods can't be interrupted  \nFixed - `RMap.get()` method invokes `MapWriter.write()` method during value loading  \nFixed - interruptible blocking methods couldn't be canceled  \nFixed - ClusterNodesDecoder ignore unknown flag and avoid throwing exception  (thanks to ZhangJQ)  \nFixed - `AsyncSemaphore` counter field should be volatile  \nFixed - data encoding exception is not logged during remote call invocation  \nFixed - Spring Data ZRangeByScore method doesn't support Infinity Double value  \nFixed - spring metainfo files should be excluded in redisson-all artifact  \nFixed - `RKeysRx.getKeys()` and `RKeysReactive.getKeys()` methods throws Exception  \n\n### 26-Oct-2019 - 3.11.5 released\n\nFeature - Automatic-Module-Name entry added to manifest file  \nFeature - `subscribeOnElements` method added to `RBlockingQueue` object  \nFeature - `subscribeOnFirstElements` and `subscribeOnLastElements` methods added to `RBlockingDeque` object  \nFeature - `subscribeOnFirstElements` and `subscribeOnLastElements` methods added to `RScoredSortedSet` object  \nFeature - support of Spring Data Redis 2.2.x  \nFeature - added batched persist method to `RLiveObjectService` object  \nFeature - Kryo5Codec implemented  \n\nFixed - host details in Redis url cause extra bracket at the end  \nFixed - RBuckets.get() method doesn't work with custom codec  \nFixed - RLock.unlock() method hangs forever  \nFixed - `RStream.trim` method throws exception  \nFixed - Spring Data pubsub listeners executes multiple times  \nFixed - Redis commands processing handler consumes 100% of CPU resources  \n\n### 24-Sep-2019 - 3.11.4 released\n\nFeature - support search by numeric fields in LiveObject search engine. Follow conditions are supported: `greater than on equal`, `greater than`, `lower than`, `lower than or equal`  \n\nFixed - threads blocked waiting on CountDownLatch  \nFixed - `rename` and `renamenx` methods of `RMultimap` interface aren't working  \nFixed - memory leak caused by `FastThreadLocal` object used in `CodecDecoder`  \nFixed - blocking queue methods don't re-throw `InterruptedException`  \nFixed - `RExecutorService` tasks duplication after task retry event  \nFixed - `Redisson.shutdown` method blocks calling thread  \nFixed - Spring Boot default connection timeout is 0 seconds  \nFixed - IPv6 handling in Sentinel manager (thanks to [AndreevDm](https://github.com/AndreevDm))  \nFixed - `RMapCache.remainTimeToLive` method returns negative remain time  \nFixed - `RBuckets.get` method doesn't work in Redis cluster mode  \nFixed - wrong error message if Sentinel server has misconfiguration  \n\n### 30-Aug-2019 - 3.11.3 released  \n\nFeature - JBoss Marshalling codec implementation  \nFeature - support for Spring's `@Autowired`, `@Value` and JSR-330 `@Inject` annotations in ExecutorService tasks  \nFeature - SSL support for Sentinel mode  \nFeature - `sizeInMemory()` method added to `RObjectReactive` and `RObjectRx` interfaces  \nFeature - `getId()` method added to `RedissonClient`, `RedissonRxClient`, `RedissonReactiveClient` interfaces  \n\nImprovement - `useCache` parameter added to `FstCodec`  \nImprovement - URL object should be used for `sslKeystore` and `sslTruststore` settings  \n\nFixed - `RedisTimeoutException` thrown if retryAttempts set to 0  \nFixed - `RStream.readGroup` method doesn't work properly with `TypedJsonJacksonCodec`  \nFixed - semaphore object is not deleted after `RLocalCachedMap.clearLocalCache` method invocation  \nFixed - Redisson couldn't be shutdown if one of RBatch commands was canceled  \n\n### 03-Aug-2019 - 3.11.2 released  \n\nImprovement - `RLiveObject` interface should extend `RExpirable`  \nImprovement - `RKeys.deleteByPattern` method performance improvements  \n\nFixed - `RBatch.execute` method throws `NoSuchElementException`  \nFixed - `RedisTimeoutException` is thrown if retryInterval set to 0  \nFixed - `Set.intersection`, `union` and `diff` methods should return Integer  \nFixed - `FSTCodec` state is not fully copied  \nFixed - `CommandAsyncService.CODECS` map changed to Soft reference map  \nFixed - `RKeys.deleteByPatternAsync` method doesn't work in batch mode  \nFixed - subscribe timeouts after failover  \nFixed - a new attempt is not made if node with defined slot wasn't discovered  \nFixed - some methods of `RScript` object doesn't use defined codec  \nFixed - `RedissonConnection.set` method returns null if invoked with expiration parameter  \nFixed - `removeAll` method doesn't work on collections returned by Multimap based objects  \n\n### 25-Jun-2019 - 3.11.1 released  \nFeature - `getPendingInvocations` method added to `RRemoteService` object  \nFeature - `natMap` setting support for Sentinel mode (thanks to [fgiannetti](https://github.com/fgiannetti))  \nFeature - `listPending` method added to `RStream`, `RStreamAsync`, `RStreamRx`, `RStreamReactive` interfaces  \nFeature - implementation of Spring Session `ReactiveSessionRepository` added  \nFeature - allow usage of multiple env variables with default values in one config entry (thanks to [tristanlins](https://github.com/tristanlins))  \n\nImprovement - Use maven packaging for redisson project as jar instead of bundle (thanks to [jchobantonov](https://github.com/jchobantonov))  \nImprovement - add default entries in MANIFEST.MF file and extra Build-Time entry as well (thanks to [jchobantonov](https://github.com/jchobantonov))  \n\nFixed - RMap.replace method doesn't update idle timeout (thanks to [mcacker](https://github.com/mcacker))  \nFixed - timeout drift in RedissonFairLock (thanks to [jncorpron](https://github.com/jncorpron))  \nFixed - dead Sentinel appears in logs as node added and down  \nFixed - Publish/Subscribe connections are not resubscribed properly after failover process  \nFixed - `RedissonLocalCachedMap.clearLocalCache` method is not executed asynchronously  \nFixed - Tomcat `RedissonSession.setAttribute` method doesn't check the value for null (thanks to [jchobantonov](https://github.com/jchobantonov))  \nFixed - Tomcat Manager UpdateValve should be installed only once (thanks to [jchobantonov](https://github.com/jchobantonov))  \nFixed - remove MessageListener from topic when Tomcat Session Manager stopInternal is invoked (thanks to [jchobantonov](https://github.com/jchobantonov))  \nFixed - `RStream.getInfo` method throws `java.lang.ClassCastException`  \nFixed - `RedissonMultiLock` could be acquired by multiple threads if `waitTime` == -1 and `leaseTime` != -1  \nFixed - `PRINCIPAL_NAME_INDEX_NAME` key is not created in redis  \nFixed - `SessionExpiredEvent` is not triggered in Spring Session implementation  \nFixed - host name containing underscore cause NPE  \nFixed - Illegal reflective access by org.redisson.misc.URIBuilder warning removed  \nFixed - `RedissonSessionRepository` doesn't trigger created event if `keyPrefix` setting is not null (thanks to [hs20xqy](https://github.com/hs20xqy))  \nFixed - `RRemoteService.getFreeWorkers` method removes registered service  \nFixed - zero timeout isn't respected in `RRateLimiter.tryAcquire` method  \nFixed - `RedissonObjectBuilder.REFERENCES` map should be filled one time  \nFixed - RReadWriteLock.readLock doesn't take in account expiration date of the last acquired read lock. (thanks to [Aimwhipy](https://github.com/Aimwhipy))  \nFixed - result object of RMapRx.iterator methods don't return `Flowable` object  \nFixed - Tomcat Session doesn't expire if `broadcastSessionEvents = true`  \nFixed - ClassNotFoundException thrown during `SerializationCodec.decode` method invocation (thanks to [jchobantonov](https://github.com/jchobantonov))  \nFixed - connections amount setting for mirrors is not applied in Proxy mode  \n\n### 28-May-2019 - 3.11.0 released  \nFeature - `radiusStoreSortedTo` methods added to `RGeo`, `RGeoAsync`, `RGeoRx`, `RGeoReactive` interfaces  \nFeature - Local cache for `JCache` added. Read the [documentation](https://github.com/redisson/redisson/wiki/14.-Integration-with-frameworks#1442-jcache-api-local-cache) for more details  \nFeature - `Async`, `Reactive`, `RxJava2` interfaces added to `JCache`. Read the [documentation](https://github.com/redisson/redisson/wiki/14.-Integration-with-frameworks#1441-jcache-api-asynchronous-reactive-and-rxjava2-interfaces) for more details  \nFeature - `RRingBuffer` object added. Read the [documentation](https://github.com/redisson/redisson/wiki/7.-distributed-collections/#721-ring-buffer) for more details  \n\nImprovement - reduced memory consumption by ClusterConnectionManager  \nImprovement - UpdateValve needs to execute manager.store only once at the end of the request (thanks to [jchobantonov](https://github.com/jchobantonov))  \n\nFixed - `HttpSessionListener.sessionDestoyed` method isn't invoked if session wasn't loaded by Tomcat instance  \nFixed - redisson-spring-data `ReactiveSubscription.receive` method throws NPE  \nFixed - Redis response isn't fully consumed after decoding error  \nFixed - Spring Session PRINCIPAL_NAME_INDEX_NAME session attribute has incorrect name  \nFixed - internal `AsyncSemaphore` object doesn't notify sleeping threads with permits more than one  \nFixed - `RedisTemplate.radius` and `RedisConnection.geoRadius` methods throws `IllegalArgumentException` during response decoding  \nFixed - `RedissonNodeConfig.mapReduceWorkers` setting couldn't be set (thanks to xiaoxuan.bai)  \n\n\n### 29-Apr-2019 - 3.10.7 released  \nFeature - Add support for [Reactive and RxJava2 interfaces](https://github.com/redisson/redisson/wiki/9.-distributed-services#913-remote-service-asynchronous-reactive-and-rxjava2-calls) to RemoteService object  \nFeature - MILLISECONDS option added to RRateLimiter.RateIntervalUnit object  \nFeature - range method added to RList, RListReactive and RListRx interfaces  \n\nImprovement - `JCache.getAll` execution optimization for non-existing keys  \nImprovement - 10X Performance boost for `JCache.putAll` method  \n\nFixed - disconnected sentinels shouldn't be used in sentinel list  \nFixed - Apache Tomcat `RedissonSessionManager` doesn't use classloader aware codec for session Map object (thanks to [jchobantonov](https://github.com/jchobantonov))  \nFixed - LiveObject field with Map type couldn't be persisted  \nFixed - `RRateLimiter` allows permits limit exceeding  \nFixed - `CompositeCodec.getMapValueDecoder` method uses `MapKeyDecoder` instead of `MapValueDecoder`  \nFixed - memory leak during blocking methods invocation of Queue objects  \nFixed - Apache Tomcat `RedissonSessionManager.findSession` shouldn't create a new one session (thanks to [jchobantonov](https://github.com/jchobantonov))  \nFixed - `JCache.removeAll` method doesn't notify Cache listeners  \nFixed - `UpdateValve` sould be removed from pipeline in Apache Tomcat `RedissonSessionManager.stopInternal` method (thanks to [jchobantonov](https://github.com/jchobantonov))  \nFixed - Redis Sentinel prior 5.0.1 version doesn't require password. Regression since 3.10.5 version  \nFixed - Redisson tries to renewed Lock expiration even if lock doesn't exist. Regression since 3.10.5 version  \nFixed - FstCodec can't deserialize ConcurrentHashMap based object with package visibility  \n\n### 05-Apr-2019 - 3.10.6 released  \nFeature - `broadcastSessionEvents` setting added to Tomcat Session Manager  \nFeature - `remainTimeToLive` method added to `RLock`, `RLockAsync`, `RLockRx` and `RLockReactive` interfaces  \nFeature - NAT mapping support for cluster mode  \nFeature - `isLock` method added to `RLockAsync`, `RLockRx`, `RLockReactive` interfaces  \nFeature - `writeBehindDelay` and `writeBehindBatchSize` settings added to `MapOptions` object  \n\nImprovement - Eviction task logging added  \nImprovement - `MapWriter` interface retains only two methods for handling batch updates  \nImprovement - `MapOptions.writeBehindThreads` parameter removed  \n\nFixed - `RBitSet.asBitSet` methods throws NPE if RBitSet object doesn't exist  \nFixed - `JCache.getAll` method throws `RedisException: too many results to unpack`  \nFixed - `RLock.lock` method can be interrupted with `Thread.interrupt` method  \nFixed - Tomcat Session parameters aren't updated completely in `readMode=MEMORY`  \nFixed - `RLock.unlock` method returns true if lock doesn't exist  \nFixed - Tomcat Session Manager doesn't remove session attributes in `updateMode=AFTER_REQUEST`  \nFixed - Pattern topic listeners fail to re-attach on cluster failover (thanks to [shailender-bathula](https://github.com/shailender-bathula))  \nFixed - `CommandPubSubDecoder.decodeResult` throws `IllegalStateException` in JBOSS environment  \nFixed - NullValue object shouldn't be stored if `RedissonSpringCacheManager.allowNullValues = false`  \nFixed - `removeListener` method of `RTopicReactive` and `RTopicRx` interfaces throws NoSuchMethodException  \n\n### 20-Mar-2019 - 3.10.5 released  \nFeature - `getMultiLock`, `getRedLock` methods added to `RedissonClient`, `RedissonRxClient` and `RedissonReactiveClient` interfaces  \nFeature - `getInfo`, `listGroups`, `listConsumers` methods added to `RStream`, `RStreamRx`, `RStreamReactive` interfaces  \nFeature - `RPatternTopic.removeListenerAsync` method added  \nFeature - `getAndSet` method with TTL support added `RBucket`, `RBucketAsync`, `RBucketReactive`, `RBucketRx` interfaces  \nFeature - `addListener` and `removeListener` methods added to `RObject`, `RObjectAsync`, `RObjectReactive`, `RObjectRx` objects. It allows to add and remove listeners for Deleted and Expired keyspace events published by Redis  \n\nImprovement - shuffle list of sentinels to distribute load (thanks to [hrakaroo](https://github.com/hrakaroo))  \nImprovement - methods of RxJava2 interfaces should use full set of result objects: `Single`, `Maybe` or `Completable`  \n\nFixed - compatibility with hibernate 5.2.0 - 5.2.4 versions  \nFixed - ClassCastException during `RBatchReactive` and `RBatchRx` execution in `exectionMode` = `REDIS_WRITE_ATOMIC` or `REDIS_READ_ATOMIC`  \nFixed - sentinel mode doesn't support AUTH command  \nFixed - response shouldn't be printed in case of response timeout error  \nFixed - HP NONSTOP OS is not supported by `MapCacheEventCodec`  \nFixed - RStream.readGroup method doesn't handle empty result properly with Redis 5.0.3  \nFixed - AUTH password included in exceptions  \nFixed - locked lock isn't unlocked after disconnect to Redis  \n\n### 08-Mar-2019 - version 3.10.4 released  \nFeature - `getCountDownLatch`, `getPermitExpirableSemaphore`, `getSemaphore`, `getFairLock` methods added to `RMultimap` object  \nFeature - `maxCleanUpDelay` and `minCleanUpDelay` settings added to `Config` object  \n\nFixed - `RLocalCachedMap.destroy` method doesn't clear local cache  \nFixed - HP NONSTOP OS is not supported by MapCacheEventCodec  \nFixed - `RedissonLocalCachedMap.readAll*` methods throw NPE if `evictionPolicy = WEAK` used  \nFixed - codec provided in Redisson configuration isn't used for attribute messages serialization  \nFixed - ClassNotFoundException is thrown by Tomcat Session Manager in `readMode = MEMORY`  \nFixed - fresh Tomcat instance unable to load session stored in Redis  \nFixed - negative delay shouldn't be allowed to define for `RDelayedQueue.offer` method  \nFixed - eviction delay for `RMapCache` object is not decreased  \nFixed - `RMultiLock.tryLockAsync` and `RMultiLock.lockAsync` methods may hang during invcation  \n\n### 26-Feb-2019 - 3.10.3 released  \nFeature - `RTransaction.getBuckets` method added  \nFeature - ability to redefine `CacheKeysFactory` in Hibernate Cache Factory  \nFeautre - ability to specify default values for environment variable (thanks to [aaabramov](https://github.com/aaabramov))  \nFeature - `RRateLimiter.getConfig` method added  \nFeature - `ping` and `pingAll` methods with timeout added to `Node` object  \n\nImprovement - create Redis stream group if it doesn't exist  \nImprovement - response decoding optimization  \n\nFixed - `RStream.listPending` throws `IndexOutOfBoundsException`  \nFixed - `LocalCacheView.toCacheKey` method throws `StackOverflowError`  \nFixed - `RedissonSessionManager` doesn't support async servlets (thanks to [dnouls](https://github.com/dnouls))  \nFixed - FSTCodec memory leak  \nFixed - rename and renamenx methods don't change name of current object  \nFixed - performance regression of RBatch result decoding (since 2.12.2 / 3.7.2 version)  \nFixed - Transactional RBucket object doesn't respect transaction timeout  \n\n### 07-Feb-2019 - versions 2.15.2 and 3.10.2 released  \nFeature - `StreamMessageId.NEVER_DELIVERED` added  \nFeature - [decodeInExecutor](https://github.com/redisson/redisson/wiki/2.-Configuration#decodeinexecutor) setting added  \nFeature - `lockAsync` and `tryLockAsync` methods with threadId param added to RedissonMultiLock object  \n\nImprovement - default values of `nettyThreads` and `threads` settings set to `32` and `16` respectively  \nImprovement - Redis nodes with empty names in cluster config should be skipped  \n\nFixed - `RFuture.cause()` method should return CancellationException and not throw it  \nFixed - continues handling of RedisLoadingException leads to excessive load  \nFixed - slave's connection pools are not initialized when it back from failover  \nFixed - Buffer leak during failover and RBatch object execution  \nFixed - NumberFormatException error appears in log during RStream.readGroup invocation  \nFixed - already wrapped IPv6 addresses shouldn't be wrapped in square brackets (thanks to [antimony](https://github.com/antimony))  \nFixed - NPE arise during Tomcat Session getAttribute/delete methods invocation (thanks to [jchobantonov](https://github.com/jchobantonov))  \nFixed - huge messages logged in case of decoding error  \nFixed - Redis password shouldn't be included in exceptions  \nFixed - Redis Password visible in log  \nFixed - infinite loop in RedLock or MultiLock (thanks to [zhaixiaoxiang](https://github.com/zhaixiaoxiang))  \nFixed - `RBatch` object in `REDIS_READ_ATOMIC` execution mode is not executed on Redis salve  \nFixed - MOVED loop redirect error while \"CLUSTER FAILOVER\" (thanks to [sKabYY](https://github.com/sKabYY))  \nFixed - redisson configuration in yaml format, located in classpath, couldn't be loaded by hibernate factory  \nFixed - class files should be excluded from META-INF folder  \nFixed - `JndiRedissonSessionManager` shouldn't shutdown Redisson instance (thanks to [jchobantonov](https://github.com/jchobantonov))  \nFixed - `RDestroyable` interface should be implemented by RMapCache and RSetCache rx/reactive objects  \n\n### 21-Jan-2019 - versions 2.15.1 and 3.10.1 released  \nFeature - `cachedKeySet`, `cachedValues`, `cachedEntrySet` and `getCachedMap` methods added to `RLocalCachedMap` object  \nFeature - __Hibernate 5.4__ support  \nFeature - [search LiveObjects](https://github.com/redisson/redisson/wiki/9.-Distributed-services#rindex) by field  \nFeature - allow checking if lock is held by a thread (thanks to [hackworks](https://github.com/hackworks))  \n\nImprovement - return `null` if Tomcat session attribute couldn't be parsed  \nImprovement - Tomcat Session key codec changed to StringCodec  \nImprovement - Spring Session key codec changed to StringCodec  \nImprovement - Tomcat Session recycle method implementation (thanks to [jchobantonov](https://github.com/jchobantonov))  \n\nFixed - RRateLimiter RateType checking (thanks to [shengjie8329](https://github.com/shengjie8329))  \nFixed - implementation of workaround for DNS name resolver bug  \nFixed - running scheduleWithFixedDelay Job couldn't be canceled  \nFixed - master can't be changed anymore if new master wasn't added the first time  \nFixed - don't send PING command for blocking queues  \nFixed - getting `java.lang.ClassNotFoundException` if same Redisson instance used in tomcat and application (thanks to [jchobantonov](https://github.com/jchobantonov))  \nFixed - Tomcat Session manager throws `java.lang.ClassNotFoundException` if `readMode=MEMORY` (thanks to [jchobantonov](https://github.com/jchobantonov))  \nFixed - ReplicatedConnectionManager doesn't recover Master node as Slave after failover  \nFixed - Spring Session manager process changes of unnecessary keys  \nFixed - Tomcat Session expires in Redis earlier than scheduled by Tomcat (thanks to [jchobantonov](https://github.com/jchobantonov))  \nFixed - Tomcat Session `getAttribute` method throws NPE  \nFixed - `BlockingQueue.drainTo` doesn't work when queue contains only one element  \nFixed - `RTopic.removeListener` method throws `RejectedExecutionException`  \nFixed - connection is not reconnected if init command failed to send  \nFixed - `keepAlive` setting is not set for single server connection mode  \nFixed - NPE in CommandPubSubDecoder  \nFixed - `pollFromAny` doesn't support Redis cluster  \nFixed - `RGeo.pos` throws `ClassCastException`  \nFixed - `LRUCacheMap` throws `ArrayIndexOutOfBoundsException`  \nFixed - IPv6 hosts support (thanks to [antimony](https://github.com/antimony))\n\n### 27-Dec-2018 - versions 2.15.0 and 3.10.0 released  \nFeature - new __[Hibernate cache](https://github.com/redisson/redisson/tree/master/redisson-hibernate) implementation__  \nFeature - __Hibernate 5.3__ support  \nFeature - [TypedJsonJacksonCodec](https://github.com/redisson/redisson/blob/master/redisson/src/main/java/org/redisson/codec/TypedJsonJacksonCodec.java) added  \nFeature - `getCountDownLatch`, `getSemaphore`, `getPermitExpirableSemaphore`, `getFairLock` methods added to `RMap` object  \nFeature - `getCountDownLatch`, `getSemaphore`, `getPermitExpirableSemaphore`, `getFairLock` methods added to `RSet` object  \nFeature - `RTopic.countSubscribers` method added  \nFeature - `JndiRedissonFactory` and Tomcat `JndiRedissonSessionManager` added  \nFeature - Hibernate Region Factories with JNDI support  \nFeature - ability to use Environmental Variables in config files  \nFeature - Spring Data Redis 2.1.x support added  \nFeature - Spring Boot Starter 2.1.x support added  \nFeature - Spring Data Redis 2.0.x and 2.1.x integrations support `ReactiveRedisTemplate`  \nFeature - Support of [Different monitoring systems](https://github.com/redisson/redisson/wiki/14.-Integration-with-frameworks#1410-statistics-monitoring-jmx-and-other-systems)  \n\nImprovement - RGeo.radius methods use GEORADIUS_RO and GEORADIUSBYMEMBER_RO commands  \nImprovement - restored implementation of DnsAddressResolverGroupFactory  \nImprovement - RedisConnectionClosedException removed  \nImprovement - __default codec changed to FSTCodec__  \n\nFixed - `RMap.getAll` throws `ClassCastException` during transaction execution  \nFixed - `pingConnectionInterval` and `lock-watchdog-timeout` parameters added to `redisson.xsd`  \nFixed - zRevRangeWithScores does not work properly in Spring RedisTemplate  \nFixed - `CommandDecoder` throws `IndexOutOfBoundsException` if `pingConnectionInterval` param is used  \nFixed - NPE in `CommandDecoder`  \nFixed - error during channel initialization is not logged  \nFixed - `RBitSet` object couldn't be used as nested object  \nFixed - use `keyPrefix` for topic object used in Tomcat Session Manager  \nFixed - unable connect to Redis on Android  \nFixed - `RMapCache` element expiration doesn't work with map size = 1  \nFixed - MOVED handling  \nFixed - Pooled connection closed after MOVED redirection  \nFixed - Master node shouldn't be shutdown on slave down event in Sentinel mode  \nFixed - `RoundRobinLoadBalancer` doesn't distribute load equally if one of slave nodes failed  \nFixed - Spring Session `keyPrefix` setting isn't used in session name  \nFixed - failed Redis Master node is not shutdown properly  \nFixed - Redisson shouldn't be shutdown in Spring Data RedissonConnectionFactory  \nFixed - Redisson Spring Boot doesn't start properly without lettuce or jedis in classpath  \nFixed - validation of filled out Redis node address in Config  \n\n### 21-Nov-2018 - versions 2.14.1 and 3.9.1 released\nFeature - `takeFirstElements` and `takeLastElements` streaming methods added to `RBlockingDequeRx`  \nFeature - `RBlockingQueueRx.takeElements` streaming method added  \nFeature - `RTopicRx.getMessages` streaming method added  \nFeature - async methods for listener removal added to `RTopic` object  \nFeature - RxJava2 method call cancellation support added  \nFeature - `RObject.getSizeInMemory` method added  \nFeature - `RTopic.countListeners` method added  \nFeature - `takeFirstElements` and `takeLastElements` added to `RScoredSortedSetReactive` and `RScoredSortedSetRx` objects  \nFeature - `takeFirst` and `takeLast` methods added to `RScoredSortedSet` object  \nFeature - `readGroup` method variations added to `RStream` object  \nFeature - `remove`, `trim`, `fastClaim`, `removeGroup`, `removeConsumer`, `updateGroupMessageId` methods added to `RStream` object  \n\nImprovement - JCache performance optimization up to 2x times  \nImprovement - Redis url validation  \n\nFixed - Exception serialization by Jackson codec  \nFixed - DNS channels aren't pooled  \nFixed - RStream commands don't work with Redis 5.0.1 version  \nFixed - task scheduled with cron pattern isn't executed with single worker  \nFixed - Spring Boot Starter doesn't convert properly list of sentinel addresses  \nFixed - `RTopic` and all objects based on it stop work properly if Subscribe timeout occured  \nFixed - JDK 1.6 compatibility for 2.x version  \nFixed - IPv6 addresses format support for Sentinel mode (thanks to Mikhail Surin)  \nFixed - null value handling for Spring Boot Starter's `timeoutValue` setting (Thanks to junwu215177)  \nFixed - OOM during `RLocalCachedMap.fastPut` method invocation and Reference based EvictionPolicy is used  \nFixed - exception in CommandDecoder while using PubSub with ping  \nFixed - `RTopic.removeAllListeners` invocation leads to PubSub connections leak  \nFixed - all methods of `RSemaphoreRx` and `RAtomicDoubleRx` objects should return `Flowable` object  \nFixed - `Redisson.createRx` method should return RedissonRxClient  \n\n### 31-Oct-2018 - versions 2.14.0 and 3.9.0 released\nFeature - `RMap.putAll` with ttl param (thanks to [Tobias Wichtrey](https://github.com/wtobi))  \nFeature - RxJava 2 support. Please refer to [documentation](https://github.com/redisson/redisson/wiki/3.-Operations-execution#32-reactive-way) for more details  \nFeature - Lambda task definition for `RExecutorService`. Please refer to [documentation](https://github.com/redisson/redisson/wiki/9.-Distributed-services#932-distributed-executor-service-tasks) for more details  \nFeature - multi-type listeners support for `RTopic` and `RPatternTopic` objects. Please refer to [documentation](https://github.com/redisson/redisson/wiki/6.-Distributed-objects#67-topic) for more details  \nFeature - `useScriptCache` setting added. Manages by Lua-script caching on Redis side. Please refer to [documentation](https://github.com/redisson/redisson/wiki/2.-Configuration#usescriptcache) for more details  \nFeature - added `RMap.putAllAsync` method with batch size  \nFeature - added `RSet.random` method limited by count  \n\nImprovement - memory allocation optimization during ExecutorService task execution  \n\nFixed - `keepAlive` is not being set  \nFixed - Redisson can't resolve short DNS name  \nFixed - Redisson shuts down executor it doesn't own  \nFixed - \"spring.redis.cluster.nodes\" param parsing for spring-boot  \nFixed - `Node.ping` throws Exception if node is unreachable  \nFixed - NPE in `CommandDecoder`  \nFixed - `DecoderException` thrown when `pingConnectionInterval` setting being set  \nFixed - `BlockingQueue.take` method doesn't survey failover  \nFixed - `SnappyCodecV2` codec doesn't decode properly underlying data encoded by FST codec  \nFixed - `UnsupportedOperationException` thrown when using Spring Actuator with redisson-spring-data lib  \n\n### 06-Oct-2018 - versions 2.13.2 and 3.8.2 released\nFeature - `RPermitExpirableSemaphore.updateLeaseTime` method added  \n\nImprovements - cluster state check  \n\nFixed - DNS resolver fails to find valid DNS record  \nFixed - MultiLock should attempt to release locks if request was sent successfully  \nFixed - `RRateLimiter.tryAcquire` with timeout blocks forever  \nFixed - CommandAsyncService blocks indefinitely if MapLoader's methods throw exception  \nFixed - RedisConnection is not closed if QUIT command wasn't sent successfully  \nFixed - Spring Boot resource encoding  \nFixed - failed Redis slaves handling  \nFixed - read locks aren't acquire lock at the same moment when write released  \nFixed - empty RBoundedBlockingQueue's capacity increases when using poll method  \nFixed - tomcat session replication in IN_MEMORY mode (thanks to Yasin Koyuncu)  \n\n### 18-Sep-2018 - versions 2.13.1 and 3.8.1 released\nFeature - __RStream__ object added. Please refer to [documentation](https://github.com/redisson/redisson/wiki/7.-Distributed-collections#720-stream) for more details  \n\nFixed - `failedSlaveCheckInterval` setting is not applied under some conditions  \nFixed - `spring.factories` and `spring.provides` files added to Spring Boot module  \nFixed - `pingConnectionInterval` setting affects re-connection process with password enabled setting  \nFixed - Lock watchdog does not monitor read locks  \nFixed - Lock expiration renewal should be canceled if unlock method failed to execute  \nFixed - `BlockingQueue.take` method doesn't work properly after failover  \nFixed - Avoid to create connection per `RRemoteService/RScheduledExecutorService` worker  \nFixed - backward JDK 8 compatibility  \n\n### 03-Sep-2018 - versions 2.13.0 and 3.8.0 released\nFeature - __Spring Data Redis__ integration. Please refer to [documentation](https://github.com/redisson/redisson/tree/master/redisson-spring-data#spring-data-redis-integration) for more details  \nFeature - __Spring Boot Starter__ implementation. Please refer to [documentation](https://github.com/redisson/redisson/tree/master/redisson-spring-boot-starter#spring-boot-starter) for more details  \nFeature - `RBlockingDequeReactive` object added  \nFeature - `sharedSession` setting for Tomcat Session Manager. Appropriate solution for migration of EAR based application with multiple WARs hosted previously on WebLogic or other servers. Please refer to [documentation](https://github.com/redisson/redisson/tree/master/redisson-tomcat) for more details  \n\nImprovement - Redis request/response handling performance improvement  \nImprovement - CompositeIterator decoupled from CompositeIterable (thanks to [Pepe-Lu](https://github.com/Pepe-Lu))  \n\nFixed - task scheduled with time more than 1 hour is not executed  \nFixed - RScheduledExecutorService doesn't handle delayed tasks correctly  \nFixed - `RMapCache` and `RSetCache` objects should implement `RDestroyable`  \nFixed - `RBucket.set` method with ttl throws NPE if value is null  \nFixed - false HashedWheelTimer resource leak message  \nFixed - `RExecutorService` task execution performance regression  \nFixed - locking in multiple parallel transactions created with the same thread  \nFixed - `JCache.removeAll` doesn't work  \nFixed - Batch in `ExecutionMode.REDIS_WRITE_ATOMIC` and `ExecutionMode.REDIS_READ_ATOMIC` returns `QUEUED` instead of real result  \nFixed - tasks scheduled with cron expression don't work in different timezones (thanks to [Arpit Agrawal](https://github.com/arpit728))  \nFixed - global config codec is not registered in codec cache for reference objects (thanks to [Rui Gu](https://github.com/jackygurui))  \n\n### 19-Jul-2018 - versions 2.12.5 and 3.7.5 released\nFeature - `RScoredSortedSetReactive`, `RSetReactive`, `RListReactive` objects implement `RSortableReactive` interface  \nFeature - `RGeoReactive` object added  \nFeature - reactive version of FairLock added  \nFeature - `RRateLimiterReactive` object added  \n\nImprovement - RObjectReactive and RScoredSortedSetReactive interfaces synced with `RObjectAsync` and `RScoredSortedSetAsync`  \n\nFixed - readonly command shouldn't be executed on master node used as slave  \nFixed - connection is closed per command execution for master node used as slave in `readMode=MASTER_SLAVE`  \nFixed - `RLiveObjectService` should use entityClass's classloader  \n\n### 16-Jul-2018 - versions 2.12.4 and 3.7.4 released\nFeature - dump and restore methods added to `RObject` interface  \n\nFixed - Redis response hangs if `RLiveObject` stored as nested object  \nFixed - slow Redisson initialization in Sentinel  \nFixed - missing PubSub messages when pingConnectionInterval setting is specified  \nFixed - `RBatch` in `ExecutionMode.REDIS_WRITE_ATOMIC` and `ExecutionMode.REDIS_READ_ATOMIC` modes throws NumberFormatException exception  \nFixed - `RRedissonRateLimiter.acquire` blocks forever  \nFixed - lot of connections remain in TIME_WAIT state after Redisson shutdown  \nFixed - `ClassNotFoundException` arise in Tomcat session manager  \nFixed - `RHyperLogLog.addAll` method doesn't add all elements  \n\n### 27-Jun-2018 - versions 2.12.3 and 3.7.3 released\nFeature - added `RKeys.getKeys` method with batch size  \nFeature - added `SnappyCodecV2` codec  \n\nFixed - `SerializationCodec` doesn't support proxied classes  \nFixed - NPE if `RScheduledExecutorService`'s task scheduled with cron expression for finite number of execution  \nFixed - validation of cron expression parameter of `RScheduledExecutorService.schedule` method  \nFeature - Iterator with batch size param for all `RSet`, `RMap`, `RMapCached` objects  \nFixed - missing PubSub messages when `pingConnectionInterval` setting is specified  \nFixed - excessive memory consumption if batched commands queued on Redis side  \nFixed - `RRateLimiter.acquire` method throws NPE  \n\n### 14-Jun-2018 - versions 2.12.2 and 3.7.2 released\n\nFeature - `RBatchOptions.executionMode` setting added. Please refer to [documentation](https://github.com/redisson/redisson/wiki/10.-additional-features#103-execution-batches-of-commands) for more details  \n\nFixed - NPE in JCacheManager.close method  \nFixed - ExecutorService tasks aren't reloaded properly  \nFixed - removed unnecessary creation of HashMap instances in cluster mode  \nFixed - `RedisNode.info` doesn't work  \nFixed - NullPointerException when using setPingConnectionInterval in Pub/Sub mode  \nFixed - LocalCachedMapDisable should implement Serializable  \nFixed - `ConcurrentModificationException` in `RTransaction.execute` method  \nFixed - exception handling in Fst and Json codec  \nFixed - `RedissonScoredSortedSet.contains` and `RedissonScoredSortedSet.getScoreAsync` methods use wrong codec  \nFixed - NPE if `RedissonLocalCachedMap` init with `ReconnectionStrategy.LOAD` param  \nFixed - transactional object methods get blocked at high concurrency  \n\n### 02-Jun-2018 - versions 2.12.1 and 3.7.1 released\nFeature - `RRateLimiter` object moved to open-source version  \nFeature - ExecutorService task failover. Default failover interval is 60 seconds  \nFeature - `RScoredSortedSet.pollFirst` and `pollLast` methods with count parameter added  \nFeature - `RScoredSortedSet.pollFirst` and `pollLast` methods with timeout added  \nFeature - `RScoredSortedSet.pollFirstFromAny` and `pollLastFromAny` methods added  \n\nImprovement - `Node.time()` method returns `Time` object  \nImprovement -  RListReactive, RMapCacheReactive, RSetCacheReactive and RSetReactive are up-to-date to Async interfaces  \n\nFixed - setPingConnectionInterval is not propagated for single server configuration  \nFixed - ClusterConnectionManager should use shared resolverGroup  \nFixed - value can't be added to BloomFilter  \nFixed - Redis nodes with noaddr flag should be parsed correctly  \nFixed - methods belongs to transactional objects get blocked at high concurrency  \nFixed - Collection iterator doesn't use the same Redis node  \nFixed - ExecuteService response queue expiration time set to one hour  \nFixed - Executed remote tasks are not removed from Redis  \nFixed - `reconnectionTimeout` and `failedAttempts` renamed in xsd schema  \n\n### 14-May-2018 - versions 2.12.0 and 3.7.0 released\nFeature - __Proxy mode__  Please refer to [documentation](https://github.com/redisson/redisson/wiki/2.-Configuration#29-proxy-mode) for more details  \nFeature - __Transaction API implementation__  Please refer to [documentation](https://github.com/redisson/redisson/wiki/10.-additional-features/#104-transactions) for more details  \nFeature - __Spring Transaction API implementation__  Please refer to [documentation](https://github.com/redisson/redisson/wiki/14.-Integration-with-frameworks/#147-spring-transaction-manager) for more details  \nFeature - __XA Transaction API implementation__  Please refer to [documentation](https://github.com/redisson/redisson/wiki/10.-additional-features/#105-xa-transactions) for more details  \nFeature - `RPermitExpirableSemaphoreReactive` object added  \nFeature - `RMap.fastReplace` method added  \nFeature - PING support for Pub/Sub connections  \n\nImprovement - `RBatch` object settings extracted as BatchOptions object  \nImprovement - `RBitSet.set` method should return boolean  \n\nFixed - New IP discovery through DNS doesn't work for cluster mode  \nFixed - replication for Tomcat Session Manager with `readMode=INMEMORY`  \nFixed - `pingConnectionInterval` is not applied  \nFixed - JDK10 compatibility  \nFixed - `RLiveObjectService.delete` throws NPE if entity doesn't exist  \nFixed - `RSemaphore` object doesn't work with zero permit  \nFixed - `RExecutorService.countActiveWorkers` hangs if there are no registered workers  \nFixed - Iterator loop and incorrect result returning  \nFixed - SSL connection to Azure redis is failed  \nFixed - NPE in SentinelConnectionManager  \nFixed - RemoteService synchronous invocations aren't thread safe (regression since 2.10.5 / 3.5.5 versions)  \nFixed - `bad argument #1 to 'len' (string expected, got boolean)` error arise for `RMapCache` object  \nFixed - `RedisTimeoutException` arise during blocking command execution on RBlockingQueue and RBlockingDeque objects  \n\n### 09-Apr-2018 - versions 2.11.5 and 3.6.5 released\nFeature - `RKeys.copy` method added  \nFeature - `RObject.copy` method added  \nFeature - `RSetCache.getLock` method added  \n\nFixed - `ClusterConnectionManager` throws `IllegalArgumentException`  \nFixed - `CommandDecoder` doesn't remove command from commands queue when response was decoded with error  \nFixed - `RSetMultimap.get()` doesn't create multimap entry in case of absence  \nFixed - an error shouldn't appear if Redisson successfully got the information at least from one sentinel/cluster Redis node  \nFixed - `RObject.migrate` method  \nFixed - hdel comand wasn't used during remote service task removal  \n\n### 27-Mar-2018 - versions 2.11.4 and 3.6.4 released\n\nFeature - `RSet.getLock` method added  \n\nFixed - race condition with load balancer node selection  \nFixed - `READONLY can't write against a read only slave` error during failover  \nFixed - NPE during failover in Sentinel mode  \nFixed - `JCache.getAll` causes io.netty.util.IllegalReferenceCountException  \nFixed - NPE in CommandDecoder handler while using RBatch object  \nFixed - `RSortedSet` object tries to compare wrong types  \nFixed - `ClassCastException` in `RListMultimapCache.removeAll` method  \n\n### 14-Mar-2018 - versions 2.11.3 and 3.6.3 released\n\nFeature - DNS monitoring for Sentinel nodes  \n\nFixed - Old/stale nodes not removed from NodesGroup  \nFixed - CertificateException while connecting over SSL to Azure or AWS Elasticache config endpoint  \nFixed - publish subscribe connections couldn't be resubscribed during failover  \nFixed - RedissonRedLock.tryLock doesn't work for some values of wait time parameter  \nFixed - NPE in JCache.getAndRemoveValue  \nFixed - memory leak in publish subscribe  \nFixed - codec classLoader wasn't used in `ExecutorService` and `RemoteService` objects  \nFixed - warning for disconnected slaves in sentinel mode  \n\n### 05-Mar-2018 - versions 2.11.2 and 3.6.2 released\n\n[Redisson PRO](https://redisson.pro) performance improvements for follow `performanceMode` values:\n\n`HIGHER_THROUGHPUT` - up to **25%** performance growth  \n`LOWER_LATENCY_AUTO` - up to **100%** performance growth  \n`LOWER_LATENCY_MODE_2` - up to **100%** performance growth  \n`LOWER_LATENCY_MODE_1` - up to **100%** performance growth  \n\nFeature - new values added to `performanceMode` setting  \nFeature - `lockAsync` and `unlockAsync` methods added to `RedissonMultiLock`  \nFeature - `RMapCache.remainTimeToLive` method added  \nFeature - `Config.addressResolverGroupFactory` setting added (thanks @Hai Saadon)  \n\nImprovement - `UpdateMode.AFTER_REQUEST` update mode optimization in tomcat session manager  \nImprovement - removed ByteBuf object usage during collection iteration  \n\nFixed - `Unable to send command` error under heavy load using Redisson PRO  \nFixed - `expire`, `expireAt` and `clearExpire` commands aren't implemented properly for `RBloomFilter`, `RDelayedQueue`, `RFairLock`, `RLocalCachedMap` and `RPermitExpirableSemaphore` object  \nFixed - Redis clients duplication during discovering ip change of hostname  \nFixed - tomcat session renewal in tomcat session manager  \nFixed - `failedAttempts` setting should be applied to Slave nodes only  \n\n### 15-Feb-2018 - versions 2.11.1 and 3.6.1 released\n\nFeature - `RedissonClusteredSpringLocalCachedCacheManager` added. Please read [documentation](https://github.com/redisson/redisson/wiki/14.-Integration-with-frameworks/#1421-spring-cache-local-cache-and-data-partitioning) for more details  \nFeature - `rangeTailReversed`, `rangeHeadReversed` and `rangeReversed` methods added to `RLexSortedSet` object  \nFeature - `RBucketsAsync` interface added  \nFeature - `scanInterval` setting added for Sentinel mode  \nFeature - `RLocalCachedMap.clearLocalCache` method added  \n\nFixed - remove `hset` command invocation during `RMapCache` entry loading  \nFixed - buffer leak in `replace` and `remove` methods of `RLocalCachedMap` object  \nFixed - `RRemoteService` object throws NPE  \nFixed - Multimap cluster compatibility  \nFixed - Enum support for Live Objects  \nFixed - Jackson 2.9 compatibility  \nFixed - `RTopic.removeAllListeners` got blocked on invocation  \nFixed - possible pubsub listeners leak  \nFixed - `RBatch` throws NPE with big pipeline in atomic mode  \nFixed - Warning about `CommandDecoder.decode()` method  \n\n### 29-Jan-2018 - versions 2.11.0 and 3.6.0 released\n\nFeature - __`atomic` setting added to RBatch object__  Please read [documentation](https://github.com/redisson/redisson/wiki/10.-additional-features#103-execution-batches-of-commands) for more details  \nFeature - __`updateMode` setting added to Tomcat Redis Session Manager__  Please read [documentation](https://github.com/redisson/redisson/wiki/14.-Integration-with-frameworks#145-tomcat-redis-session-manager) for more details  \nFeature - __`RateLimiter` object added__  Please read [documentation](https://github.com/redisson/redisson/wiki/6.-distributed-objects/#612-ratelimiter) for more details  \nFeature - __`RClusteredBloomFilter` object added__  Please read [documentation](https://github.com/redisson/redisson/wiki/6.-Distributed-objects#681-bloom-filter-data-partitioning) for more details  \nFeature - __`KQueue` support added__  Please read [documentation](https://github.com/redisson/redisson/wiki/2.-Configuration#eventloopgroup) for more details  \nFeature - __`Tomcat 9` support added__  Please read [documentation](https://github.com/redisson/redisson/wiki/14.-Integration-with-frameworks#145-tomcat-redis-session-manager) for more details  \nFeature - __`RPriorityBlockingQueue` object added__ Please read [documentation](https://github.com/redisson/redisson/wiki/7.-distributed-collections/#718-priority-blocking-queue) for more details  \nFeature - __`RPriorityBlockingDeque` object added__ Please read [documentation](https://github.com/redisson/redisson/wiki/7.-distributed-collections/#719-priority-blocking-deque) for more details  \nFeature - __`RLongAdder` object added__ Please read [documentation](https://github.com/redisson/redisson/wiki/6.-distributed-objects/#610-longadder) for more details  \nFeature - __`DoubleAdder` object added__ Please read [documentation](https://github.com/redisson/redisson/wiki/6.-distributed-objects/#611-doubleadder) for more details  \nFeature - `RBucket.getAndDelete`, `RAtomicLong.getAndDelete` and `RAtomicDouble.getAndDelete` methods added  \nFeature - __`RAtomicDoubleReactive` object added__  \nFeature - `RPriorityQueue.pollLastAndOfferFirstTo` method added  \n\nImprovement - support single config endpoint node for cluster mode  \nImprovement - hash functions replaced with https://github.com/google/highwayhash  \n\nFixed - JDK 1.6+ compatibility for RemoteService  \nFixed - `setDnsMonitoringInterval(-1)` doesn't disable DNS monitoring  \nFixed - `RLocalCachedMap.putAll` gets stuck if map passed as parameter contains > 10000 elements  \nFixed - `RLocalCachedMap.put` value encoding  \nFixed - `RKeys.countExists` and `RKeys.touch` return wrong result in cluster mode  \nFixed - Wrong parsing of RScript.ReturnType.MULTI result  \nFixed - RedissonReadLock by name with colon couldn't be unlocked properly  \nFixed - `rg.springframework.cache.Cache$ValueRetrievalException`shouldn't be wrapped by IllegalStateException  \nFixed - `RMapCache` listeners are not working on cross-platform environment  \nFixed - JsonJacksonCoded shouldn't override provided objectMapper settings (thanks to @gzeskas)  \n\n### 25-Dec-2017 - versions 2.10.7 and 3.5.7 released\n\nFeature - __`RClusteredBitSet` object added__ Please read [documentation](https://github.com/redisson/redisson/wiki/6.-Distributed-objects/#641-bitset-data-partitioning) for more details  \n\nImprovement - Memory consumption optimization. `RExecutorFuture` and `RScheduledFuture` shouldn't be tracked if they weren't stored  \nImprovement - Config settings `codecProvider` and `redissonReferenceEnabled` renamed to `referenceCodecProvider` and `referenceEnabled`  \nFixed - `RedissonRedLock` couldn't be locked in some cases  \nFixed - `RRemoteService` can't ack when running redis in cluster mode  \nFixed - DNSMonitor fails on bootstrap with custom event loop  \nFixed - Redis domain name IP address renew process  \n\n### 08-Dec-2017 - versions 2.10.6 and 3.5.6 released\n\nFeature - `RSetMultimapReactive` object added  \nFeature - `RListMultimapReactive` object added  \nFeature - `ReconnectionStrategy` and `SyncStrategy` added to `LocalCachedMapOptions`  \nFeature - `pingConnectionInterval` setting added  \n\nImprovement - added sync on key for `JCache.invoke` method  \n\nFixed - arguments encoding for `RScript`  \nFixed - `MapLoader` hangs if loaded value is null  \nFixed - OutOfMemory during `RExecutorService` usage  \nFixed - NPE in `RedissonSession.save` method  \nFixed - NPE during `RExecutorService` usage  \nFixed - `SnappyCodec` can't handle data more than 32Kb  \nFixed - failed to continue poll remote responses if current waiting for response has been canceled  \nFixed - SSL support for cluster mode  \nFixed - task with longer start time shouldn't overlap current task with shorter start time  \nFixed - DNS monitor caches host name binding  \nFixed - ReadMode.MASTER_SLAVE should be taken in account  \nFixed - slave nodes should be added without freeze state  \nFixed - master node should be disabled if any slave up  \nFixed - handling connection to Redis nodes returned to online state  \n\n### 31-Oct-2017 - versions 2.10.5 and 3.5.5 released\n`ProjectReactor` dependency for `3.5.5` version was updated to `3.1.1` version  \n\nFeature - Added pingConnection, keepAlive, tcpNoDelay settings  \nFeature - Slaves synchronization support for `RBatch`/`RBatchReactive` objects  \n\nImprovement - Data encoding should be executed on client thread only  \nImprovement - Handling Redis redirect optimization  \nImprovement - Better collection handling for RedissonReference (thanks to Rui Gu)  \n\nFixed - `RedisLoadingException` handling during re-connection process  \nFixed - `RedisClient` can't be shutdown properly  \nFixed - timeout drift for `RFairLock`  \nFixed - expiration handling of reentrant write lock  \nFixed - `RReadWriteLock` doesn't work in cluster  \nFixed - Blocking queues are't rethrow exceptions  \nFixed - out of connections problem on high load during `RemoteExecutorService`/`ExecutorService` usage  \nFixed - NPE during `RemoteService` object usage  \nFixed - Getting memory leak warnings when gracefully shutting down tomcat  \nFixed - `RMapCache.getAll` doesn't support large keySet  \n\n### 28-Sep-2017 - versions 2.10.4 and 3.5.4 released\nFeature - added `maxSize` setting for `SpringCacheManager`  \nFeature - allow `LiveObjectService` to work with classes that inherit from REntities (thanks to @sdjacobs)  \n\nImprovement - `RMapCache` entires eviction process optimized  \nImprovement - handling of slave down process  \n\nFixed - operation on slave coldn't be executed after its restart (thanks to @xavierfacq) \nFixed - `ArrayIndexOutOfBoundsException` in RedissonSessionRepository  \nFixed - storing Live Objects in Redisson's collection objects (thanks to Rui Gu)  \nFixed - cancel write operation for commands belong to disconnected connection  \nFixed - possible race-condition during cancellation of write operation to Redis connection  \nFixed - accessor methods in Live Objects break if they start with 'is' (thanks to @sdjacobs)  \nFixed - MapReduce `Collator` couldn't be executed if timeout was defined  \nFixed - RedissonKeys.delete throws `NullPointerException` in some cases  \nFixed - `CancellationException` handling during RemotePromise cancellation  \nFixed - `RedisNodeNotFoundException` should be supplied to Failed Promise  \n\n### 13-Sep-2017 - versions 2.10.3 and 3.5.3 released\nFixed - ByteBufs are not released properly in SnappyCodec and LZ4Codec (regression since 2.10.2 and 3.5.2)\n\n### 12-Sep-2017 - versions 2.10.2 and 3.5.2 released\nFeature - added `addScoreAndGetRank` and `addScoreAndGetRevRank` methods to `RScoredSortedSet` object  \nFeature - added `addAndGetRank` and `addAndGetRevRank` methods to `RScoredSortedSet` object (thanks to @zuanoc)  \nFeature - added support for bounded `RMapCache` object using `trySetMaxSize` `setMaxSize` methods (thanks to @johnou)  \nFeature - added search by pattern using `iterator` method of `RSet` objects  \nFeature - added search by pattern using `keySet`, `values` and `entrySet` methods of `RMap` objects  \nFeature - `addScoreAndGetRank` and `addScoreAndGetRevRank` methods were added to `RScoredSortedSet` object  \nImprovement - memory allocation optimization during encoding process  \nFixed - fixed NPE in LoadBalancerManager (regression since 2.10.1 and 3.5.1)  \nFixed - `RAtomicDouble.decrementAndGet`  \nFixed - connection could be in closed state during reconnection process for blocking queue  \n\n\n### 29-Aug-2017 - versions 2.10.1 and 3.5.1 released\n\nFeature - DNS monitoring support for Sentinel, Master/Slave and Replicated mode  \nFeature - `org.redisson.codec.CompositeCodec` added  \nFeature - added `readMode` property for Tomcat RedissonSessionManager  \n\nFixed - `RMapCache.putAll` couldn't handle map with entries amount larger than 5000  \nFixed - master entry should be shutdown in slaveConnectionPool during master change process  \nFixed - Redisson's Tomcat Session attributes should be read first to avoid invalidated session exception  \n\n### 28-Jul-2017 - versions 2.10.0 and 3.5.0 released\n\nFeature - __Local Cache support for Hibernate Cache__ Please read [documentation](https://github.com/redisson/redisson/wiki/14.-Integration-with-frameworks/#1431-hibernate-cache-local-cache) for more details  \nFeature - __Local Cache support for Spring Cache__ Please read [documentation](https://github.com/redisson/redisson/wiki/14.-Integration-with-frameworks/#1421-spring-cache-local-cache) for more details  \nFeature - __`RedissonLocalCachedMapCache` object added__ Please read [documentation](https://github.com/redisson/redisson/wiki/7.-distributed-collections/#713-map-local-cache-for-expiring-entries) for more details  \nFeature - __`BlockingFairDeque` object added__ Please read [documentation](https://github.com/redisson/redisson/wiki/7.-distributed-collections#714-blocking-fair-deque) for more details  \nFeature - __`RLockReactive` object added__  \nFeature - __`RReadWriteLockReactive` object added__  \nFeature - __`RSemaphoreReactive` object added__  \nFeature - `unlink`, `flushdbParallel`, `flushallParallel` methods added  \n\nFixed - ContextClassLoader should be used by Redisson Codec for Tomcat session's object serialization  \nFixed - Spring Cache `NullValue` does not implement Serializable  \nFixed - `RLocalCachedMap` doesn't work with non-json and non-binary codecs  \nFixed - Tomcat RedissonSessionManager doesn't remove session on invalidation/expiration  \nFixed - `RedissonBatch` shouldn't require `reactor.fn.Supplier` dependency  \nFixed - Spring Session 1.3.x compatibility (thanks to Vcgoyo)  \nFixed - priority queues should acquire lock before polling the element  \n\n### 12-Jul-2017 - versions 2.9.4 and 3.4.4 released\n\nFeature - [Config.performanceMode](https://github.com/redisson/redisson/wiki/2.-Configuration/_edit#performancemode) setting added  \nFeature - JsonJacksonMapCodec codec added  \nFeature - [Amazon Ion](https://amzn.github.io/ion-docs/) codec added  \nFeature - [read-through, write-through and write-behind](https://github.com/redisson/redisson/wiki/7.-Distributed-collections/#714-map-persistence) support for RMap objects  \nFeature - `RExecutorService` should return RExecutorFuture object with taskId  \nFeature - added `RList.get` method to load elements in a batch  \nFeature - ability to submit few tasks atomically (in batch) through `RExecutorService` interface  \nFeature - [Config.keepPubSubOrder](https://github.com/redisson/redisson/wiki/2.-Configuration#keeppubsuborder) setting added  \n\nImprovement - make `RMapReactive` and `RMapCacheReactive` interfaces match with `RMap` and `RMapCache`  \nImprovement - `RLexSortedSet` should extend `RSortedSet`  \n\nFixed - connection listener is not invoked in some cases  \nFixed - `RMapCache` `remove`, `put`, `putIfAbsent` and `replace` methods aren't respect entry expiration  \nFixed - `SCAN` command should be used in `RKeys.deleteByPattern` method  \nFixed - `RBinaryStream` doesn't work in Redis cluster environment  \nFixed - `SELECT` command shouldn't be executed on Sentinel servers  \nFixed - Stackoverflow error arise during decoding of large amount of PubSub messages  \nFixed - `LocalCachedMapInvalidate` object can't be serialized by Kryo codec  \nFixed - `XMLGregorianCalendar` type handling in JSON codec  \nFixed - Reactive Stream methods shouldn't be executed immediately after `Publisher` object creation  \n\n### 10-Jun-2017 - versions 2.9.3 and 3.4.3 released\n\nSince this version, if you use programmatic config definition you should define full url with schema.\n\n```java\nconfig.setAddress(\"redis://127.0.0.1:6739\");\n// or for SSL support\nconfig.setAddress(\"rediss://127.0.0.1:6739\");\n```\n\nFeature - __SSL support__  \nFeature - __[RedisLabs](http://redislabs.com) hosting support__  \nFeature - `RBlockingQueue.takeLastAndOfferFirstTo` method added  \nFeature - `RScoredSortedSet.firstScore, lastScore` methods added  \nFeature - `RedissonCacheManager.setAllowNullValues` method added  \nFeature - `RedissonSpringCacheManager.setCacheNames` method added  \nFeature - Map Entry listeners support added for `RMapCache` object  \nFeature - `Config.lockWatchdogTimeout` parameter added  \n\nImprovement - NPE checking for key and value added for RedissonMapCache  \nImprovement - `RKeys.deleteByPatternAsync` uses scan command  \n\nFixed - `RBoundedBlockingQueue.pollAsync` blocks if timeout is less than 1 second  \nFixed - unlocking of nested `RReadWriteLock.readLock` deletes current acquired `RReadWriteLock.writeLock`  \nFixed - wrong null values checking in RDelayedQueue methods  \nFixed - probability of infinite scan for all iterators  \nFixed - `Node.InfoSection` should be public  \nFixed - JSR107 cache implementation should throw `javax.cache.CacheException` in case of any error  \n\n### 10-May-2017 - versions 2.9.2 and 3.4.2 released\n\nFeature - __Dropwizard metrics integration__ More details [here](https://github.com/redisson/redisson/wiki/14.-Integration-with-frameworks#147-dropwizard-metrics)  \nFeature - `RLocalCachedMap.preloadCache` method added (thanks to Steve Draper)  \nFeature - `RGeo.radiusStoreTo` methods added (thanks to Cory Sherman)  \n\nFixed - NoClassDefFoundError exception during using `redisson-all` module\n\n### 27-Apr-2017 - versions 2.9.1 and 3.4.1 released\n\nFixed - `RLocalCachedMap.getAll` didn't use cache (thanks to Steve Draper)  \nFixed - reference to avro module has been removed\n\n### 26-Apr-2017 - versions 2.9.0 and 3.4.0 released\n\nFeature - __`MapReduceService` added__ More details [here](https://github.com/redisson/redisson/wiki/9.-distributed-services/#95-distributed-mapreduce-service)  \nFeature - `readAllMap` and `readAllMapAsync` methods added to `RMap`  \nFeature - `readAllKeySet` and `getReadWriteLock` methods added to `RMultimap`  \nFeature - `RKeys.delete` by objects method added  \nFeature - `RRemoteService.deregister` method added  \nFeature - `retryAttempts`, `retryInterval` and `timeout` methods added to `RBatch` object  \nFeature - `RMapCache.fastPutIfAbsent` with ttl added (thanks to Dobi)  \nFeature - `EvictionPolicy.WEAK` added for `RLocalCachedMap`  \nFeature - `LocalCachedMapOptions.invalidationPolicy` introduced for `RLocalCachedMap`  \nFeature - `expire`, `expireAt`, `move`, `migrate`, `clearExpire`, `renamenx`, `rename`, `remainTimeToLive` methods added to RKey  \n\nImprovement - `EvictionPolicy.LRU` optimization for `RLocalCachedMap`  \n\nFixed - `RTopic.onSubscribe` should be invoked after failover process  \nFixed -  Spring boot with redisson 3.3.2 fails without optional actuator dependency (thanks to  Rick Perkowski)  \nFixed - `RedissonCacheMap.putIfAbsentAsync` doesn't take in account ttl and minIdleTime params (thanks to Dobi)  \nFixed - Spring cache should put NullValue object instead of null  \nFixed - Fixed error - No field factory in class Ljava/net/URL  \nFixed - Spring cache's method with `@Cacheable(sync=true)` annotation never expires (thanks to Dobi)  \nFixed - spring schema file corrected (thanks to Rui Gu)  \nFixed - Prevent to set URL.factory to null in case of concurrent URL creation in the URLBuilder (thanks to Björn-Ole Ebers)  \nFixed - `RMap.addAndGet` causes bad argument (thanks to Rui Gu)  \nFixed - `RedissonSpringCacheManager` creates new cache on each `getCache` call  \nFixed - wrong value codec encoder usage for `RedissonLocalCachedMap.fastPutAsync` method\n\n### 21-Mar-2017 - versions 2.8.2 and 3.3.2 released\n\nFeature - Redisson's Spring custom namespace support (thanks to Rui Gu)  \nFeature - ability to set custom connection manager (thanks to Saikiran Daripelli)  \nFeature - autoconfigured Spring Boot CacheStatisticsProvider implementation (thanks to Craig Andrews)  \nFeature - `RKeys.touch` and `RObject.touch` methods added  \nFeature - `RedissonCompletionService` implementation added  \nFeature - `RMap.getReadWriteLock` method added  \n\nFixed - NPE during `RLocalCachedMap.fastRemove` invocation  \nFixed - `redisson-tomcat-8` module is not compatible with Tomcat 8.5  \nFixed - URLBuilder methods should be synchronized  \nFixed - use PSETEX in `RBucket.set` method  \nFixed - `DelayedQueue.remove()` and `DelayedQueue.removeAll()`  \nFixed - unable to define Type and AvroSchema for AvroJacksonCodec  \nFixed - ReadWriteLock leaseTimeout calculation  \nFixed - `Config.fromJson(file)` method, throws StackOverflowError\n\n### 04-Mar-2017 - versions 2.8.1 and 3.3.1 released\n\nFeature - Cache with SoftReference support added for `RLocalCachedMap`  \nFeature - `Config.subscriptionMode` setting added  \n\nImprovement - errors handling during RBatch execution  \n\nFixed - StackOverflowException in URLBuilder  \nFixed - TomcatSessionManager can't be used in Tomcat if Redisson has been deployed in web application  \nFixed - skip cluster nodes with the \"handshake\" flag (thanks to @dcheckoway)\n\n### 19-Feb-2017 - versions 2.8.0 and 3.3.0 released\n\nFeature - __`RClusteredLocalCachedMap` object added__ More details [here](https://github.com/redisson/redisson/wiki/7.-distributed-collections#713-map-data-partitioning)  \nFeature - __`RClusteredMapCache` object added__ More details [here](https://github.com/redisson/redisson/wiki/7.-distributed-collections#713-map-data-partitioning)  \nFeature - __`RClusteredSetCache` object added__ More details [here](https://github.com/redisson/redisson/wiki/7.-distributed-collections/#732-set-data-partitioning)  \nFeature - __`RPriorityQueue` object added__ More details [here](https://github.com/redisson/redisson/wiki/7.-distributed-collections/#715-priority-queue)  \nFeature - __`RPriorityDeque` object added__ More details [here](https://github.com/redisson/redisson/wiki/7.-distributed-collections/#716-priority-deque)  \nFeature - `removeAllListeners` and `removeListener` by instance methods added for `RTopic` and `RPatternTopic`  \nFeature - `RLockAsync` interface added  \n\nImprovement - `RRemoteService` is now able to support method overload  \n\nFixed - `RLocalCachedMap` is not Redis cluster compatible  \nFixed - cascade slaves are not supported in cluster mode  \nFixed - shutdown checking during master change state check added  \nFixed - master isn't checked during new slave discovery in Sentinel mode  \n\n### 02-Feb-2017 - versions 2.7.4 and 3.2.4 released\n\nFeature - Allow to specify Redisson instance/config during JCache cache creation  \n\nFixed - `ByteBuf.release` method invocation is missed in `LZ4Codec` and `SnappyCodec`  \nFixed - AssertionError during Redisson shutdown  \nFixed -  `RReadWriteLock.readLock` couldn't be acquired by same thread which has already acquired `writeLock`  \nFixed -  failed `RFairLock.tryLock` attempt retains caller thread in fairLock queue  \nFixed - `factory already defined` error  \nFixed - `JCache` expiration listener doesn't work  \nFixed - `RLocalCachedMap` doesn't work with `SerializationCodec`  \nFixed - `Can't find entry` error during operation execution on slave nodes  \n\n### 19-Jan-2017 - versions 2.7.3 and 3.2.3 released\n\nRedisson Team is pleased to announce __ULTRA-FAST__ Redisson PRO edition.  \nPerformance measure results available in [Benchmark whitepaper](https://redisson.pro/Redisson%20PRO%20benchmark%20whitepaper.pdf)\n\nFeature - `RMap.getLock(key)` and `RMultimap.getLock(key)` methods added  \n\nImprovement - `RedissonSpringCacheManager` constructor with Redisson instance only added  \nImprovement - `CronSchedule` moved to `org.redisson.api` package  \n\nFixed - RedissonBaseIterator.hasNext() doesn't return false in some cases  \nFixed - NoSuchFieldError exception in `redisson-tomcat` modules  \nFixed - ConnectionPool size not respected during redirect of cluster request  \nFixed - `RSortedSet.removeAsync` and `RSortedSet.addAsync`  \nFixed - `RBloomFilter.tryInit` were not validated properly  \nFixed - CommandDecoder should print all replay body on error  \n\n### 19-Dec-2016 - versions 2.7.2 and 3.2.2 released\n\nFeature - `RList`, `RSet` and `RScoredSortedSet` implements `RSortable` interface with SORT command support  \nFeature - `NodeAsync` interface  \nFeature - `Node.info`, `Node.getNode` methods added  \n\nFixed - elements distribution of `RBlockingFairQueue` across consumers  \nFixed - `factory already defined` error during Redisson initialization under Apache Tomcat  \n\n### 14-Dec-2016 - versions 2.7.1 and 3.2.1 released\n\nUrl format used in config files __has changed__. For example:\n\n\"//127.0.0.1:6739\" now should be written as \"redis://127.0.0.1:6739\"\n\nFeature - `RSet.removeRandom` allows to remove several members at once  \n\nFixed - exceptions during shutdown  \nFixed - redis url couldn't contain underscore in host name  \nFixed - IndexOutOfBoundsException during response decoding  \nFixed - command timeout didn't respect during topic subscription  \nFixed - possible PublishSubscribe race-condition  \nFixed - blocking queue/deque poll method blocks infinitely if delay less than 1 second  \n\n### 26-Nov-2016 - versions 2.7.0 and 3.2.0 released\n\nFeature - __Spring Session implementation__. More details [here](https://github.com/redisson/redisson/wiki/14.-Integration%20with%20frameworks/#145-spring-session)  \nFeature - __Tomcat Session Manager implementation__. More details [here](https://github.com/redisson/redisson/wiki/14.-Integration%20with%20frameworks/#144-tomcat-redis-session-manager)  \nFeature - __RDelayedQueue object added__. More details [here](https://github.com/redisson/redisson/wiki/7.-distributed-collections/#714-delayed-queue)  \nFeature - __RBlockingFairQueue object added__. More details [here](https://github.com/redisson/redisson/wiki/7.-distributed-collections/#713-blocking-fair-queue)  \nFeature - `RSortedSet.readAll` and `RQueue.readAll` methods added  \nFixed - `RMap.getAll` doesn't not preserve the order of elements  \nFixed - Wrong nodes parsing in result of cluster info command  \nFixed - NullPointerException in CommandDecoder.handleResult  \nFixed - Redisson shutdown status should be checked during async command invocation  \n\n### 07-Nov-2016 - versions 2.6.0 and 3.1.0 released\n\nFeature - __new object added__ `RBinaryStream`. More info about it [here](https://github.com/redisson/redisson/wiki/6.-distributed-objects/#62-binary-stream-holder)  \nImprovement - limit Payload String on RedisTimeoutException  \nImprovement - Elasticache master node change detection process optimization  \n\n### 27-Oct-2016 - versions 2.5.1 and 3.0.1 released\n\nInclude all code changes from __2.2.27__ version\n\nFixed - RMapCache.fastPutIfAbsentAsync doesn't take in account expiration  \nFixed - timer field of RedisClient hasn't been initialized properly in some cases  \n\n### 27-Oct-2016 - version 2.2.27 released\n\nThis version fixes old and annonying problem with `ConnectionPool exhusted` error. From this moment connection pool waits for free connection instead of throwing pool exhausted error. This leads to more effective Redis connection utilization.\n\nImprovement - remove `Connection pool exhausted` exception  \n\n### 17-Oct-2016 - version 3.0.0 released\nFully compatible with JDK 8. Includes all code changes from __2.5.0__ version\n\nFeature - `RFeature` extends `CompletionStage`\n\n### 17-Oct-2016 - version 2.5.0 released\nThis version brings greatly improved version of `RLiveObjectService` and adds cascade handling, cyclic dependency resolving, simplified object creation. Read more in this [article](https://dzone.com/articles/java-distributed-in-memory-data-model-powered-by-r)\n\nIncludes all code changes from __2.2.26__ version\n\nFeautre - COUNT and ASC/DESC support for `RGeo` radius methods  \nFeature - `RGeo` extends `RScoredSortedSet`  \nFeature - `RCascade` annotation support LiveObjectService  \nImprovement - `RId` generator should be empty by default  \nImprovement - support setter/getter with protected visibility scope for LiveObject  \nFixed - `RMapCache` doesn't keep entries insertion order during iteration  \nFixed - `@RId` is returned/overwritten by similarly named methods (thanks to Rui Gu)  \nFixed - typo `getRemoteSerivce` -> `getRemoteService` (thanks to Slava Rosin)  \nFixed - `RPermitExpirableSemaphore.availablePermits` doesn't return actual permits account under certain conditions  \nFixed - `readAllValues` and `readAllEntrySet` methods of `RLocalCacheMap` return wrong values  \nFixed - setter for collection field of LiveObject entity should rewrite collection content  \nFixed - `RSetCache` TTL not updated if element already present  \nFixed - `RLiveObjectService` swallow exceptions during `merge` or `persist` operation\nFixed - `RLiveObjectService` doesn't support protected constructors  \nFixed - object with cyclic dependencies lead to stackoverflow during `RLiveObjectService.detach` process  \nFixed - not persisted `REntity` object allowed to store automatically  \nFixed - `RLexSortedSet.addAll` doesn't work  \nFixed - `RLiveObjectService` can't detach content of List object  \nFixed - `RLiveObjectService` doesn't create objects mapped to Redisson objects in runtime during getter accesss  \nFixed - `RLiveObjectService` can't recognize id field of object without setter  \n\n### 17-Oct-2016 - version 2.2.26 released\nFixed - NPE in CommandDecoder  \nFixed - PubSub connection re-subscription doesn't work in case when there is only one slave available\n\n### 27-Sep-2016 - version 2.4.0 released\nIncludes all code changes from __2.2.25__ version\n\nFeature - __new object added__ `RPermitExpirableSemaphore`. More info about it [here](https://github.com/redisson/redisson/wiki/8.-distributed-locks-and-synchronizers#87-permitexpirablesemaphore)  \nFeature - __new object added__ `RLocalCachedMap`. More info about it [here](https://github.com/redisson/redisson/wiki/7.-distributed-collections#712-map-local-cache)  \nFeature - __references support__ (thanks to Rui Gu) More info about it [here](https://github.com/redisson/redisson/wiki/10.-Additional-features#102-references-to-redisson-objects)  \nFeature - __Docker support__ More info about it [here](https://github.com/redisson/redisson/wiki/12.-Standalone-node#126-how-to-run-using-docker)  \nFeature -  `RSemaphore.reducePermits` method added  \nFeature - `nettyThreads` and `executor` settings added  \nFeature - `valueRangeReversed`, `entryRangeReversed`, `union` and `intersection` methods added to `RScoredSortedSet` object  \nFeature - `Node.time` method added  \nFeature - `RMap.valueSize` method added  \nFeature - `RBucket.size` method added  \nFeature - `RBatch.executeSkipResult` method added  \nImprovement - Redisson Node could be created with existing Redisson instance  \nImprovement - `RMultimap.get` should return `RSet` or `RList` interface instead of `Set` and `List`  \nFixed - `RExecutorService` should reject non-static inner task class  \nFixed - wrong object encoding in `RScoredSortedSet.addScore` method  \n\n### 27-Sep-2016 - version 2.2.25 released\nImprovement - log unexpected errors in netty handlers  \nImprovement - `Not all slots are covered` error should be more informative  \nImprovement - implement random wait time in `lock` method of `RedissonRedLock` and `RedissonMultiLock` objects  \nFixed - `ClassCastException` error when there are no slaves in sentinel mode  \nFixed - keep RMap insertion ordering while iteration  \nFixed - thread stuck at `lock` method of `RedissonRedLock` and `RedissonMultiLock` objects  \nFixed - incorrect `tryLock` behaviour of `RedissonRedLock` and `RedissonMultiLock` objects  \nFixed - connection shouldn't be closed on exceptionCaught  \nFixed - Jackson 2.8.x compatibility  \nFixed - TRYAGAIN error handling in cluster mode  \nFixed - sync commands in connectionListener leads to connection timeout exception  \nFixed - can't find slave error in cluster mode if failed slave hasn't been added before  \n\n### 24-Aug-2016 - version 2.3.0 released\nStarting from this version Redisson could be run as standalone node to execute distributed tasks. More features will be added to it in future. Read docs about it [here](https://github.com/mrniko/redisson/wiki/12.-Standalone-node)\n\nFeature - __new service added__ `RExecutorService`. More info about it [here](https://github.com/mrniko/redisson/wiki/9.-distributed-services/#93-distributed-executor-service)  \nFeature - __new service added__ `RScheduledExecutorService`. More info about it\n[here](https://github.com/mrniko/redisson/wiki/9.-distributed-services#94-distributed-scheduled-executor-service)  \nFeature - __new service added__ `RLiveObjectService`. More info about it\n[here](https://github.com/mrniko/redisson/wiki/9.-distributed-services/#92-live-object-service) (big thanks to Rui Gu for this amazing feature)  \nFeature - __new object added__ `RBoundedBlockingQueue`. More info about it [here](https://github.com/mrniko/redisson/wiki/7.-distributed-collections/#711-bounded-blocking-queue)  \nFeature - __Redis deployment tool__. More info about it\n[here](https://github.com/mrniko/redisson/wiki/13.-Tools#131-redis-deployment-tool)  \nFeature - __Cluster management tool__. More info about it [here](https://github.com/mrniko/redisson/wiki/13.-Tools#132-cluster-management-tool)  \nFeature - Avro and Smile codecs added  \n__Breaking api change__ - all config classes moved to `org.redisson.config` package  \n__Breaking api change__ - all classes moved from `org.redisson.core` to `org.redisson.api` package  \n__Breaking api change__ - switched from `io.netty.util.concurrent.Future` to `org.redisson.api.RFuture` interface  \nFixed - division by zero in WeightedRoundRobinBalancer (thanks to Shailender R Bathula)\n\n### 08-Aug-2016 - version 2.2.24 released\nFixed - PubSub connection in cluster mode should be connected to node according slot derived from channel name  \nFixed - `RLock.tryLock` could block forever under some conditions  \n\n### 04-Aug-2016 - version 2.2.23 released\nImprovement - `Future.cancel` method handling for RemoteService async call  \nFixed - unable to redefine RedisClient command execution timeout  \nFixed - exception occured in CommandEncoder leads to reponse timeout exception  \nFixed - exception occured in CommandDecoder leads to reponse timeout exception  \nFixed - BLPOP timeout calculation fixed  \nFixed - object used in RemoteService to prevent race-condition during ack receiving should be created per request  \n\n### 26-Jul-2016 - version 2.2.22 released  \nFixed -  java.lang.UnsupportedOperationException during command batch usage with netty 4.0.38 and higher  \n\n### 15-Jul-2016 - version 2.2.21 released  \nFixed - `RLock`, `RReadWriteLock`, `RSemaphore` and `RCountDownLatch` can blocks forever under some conditions  \n\n### 14-Jul-2016 - version 2.2.20 released  \nFixed - NPE during pubsub re-subscription (regression since 2.2.18)  \nFixed - `RSortedSet` doesn't work in cluster mode (regression since 2.2.16)  \nFixed - PubSub connection pool initialization in cluster mode  \nFixed - NPE during pubsub usage in cluster mode (regression since 2.2.18)  \n\n### 13-Jul-2016 - version 2.2.19 released  \nFeature - `RSetReactive.readIntersection`, `RSetReactive.diff` and `RSetReactive.intersection` added  \nFixed - cluster commands handling regression (regression since 2.2.18)\n\n### 13-Jul-2016 - version 2.2.18 released  \nFeature - `RSet.randomAsync` and `RSet.random` commands added (thanks to dcheckoway)  \nFeature - commandTimeout param added to RedisClient  \nFeature - `JsonJacksonMapValueCodec` basic typed map value codec added (thanks to andrejserafim)  \nImprovement - PubSub management has been reimplemented this resolves some issues with RLock, RSemaphore objects  \nFixed - disconnected pubsub connection leads to missed response for unsubscribe/punsubscribe operations  \nFixed - cluster slot changes discovery  \nFixed - execute all lock, semaphore and countdownlatch commands on master node  \nFixed - shutdown listeners added during blocking operations usage weren't removing in some cases  \nFixed - response parsing of cluster nodes command  \nFixed - Connections weren't closing during `RedisClient` shutdown  \nFixed - `RedissonRedLock.unlock`  \n\n### 30-Jun-2016 - version 2.2.17 released  \nFeature - `RMultimap.keySize` method added  \nFeature - `RKeys.getType` method added  \nFeature - `RKeys.getKeysByPattern` method with count param added  \nImprovement - `RedissonMultiLock.lock` method optimization  \nFeature - `RedissonRedLock` implemented  \nFixed - `RMapCache.delete` doesn't delete redisson__idle__set__  \nFixed - integer comparison in EvictionScheduler  \nFixed - ByteBuf leak (thanks to jackygurui)  \nFixed - `RTopic.addListener` method worked asynchronous sometimes  \nFixed - ClastCastException occurred if multi-type PubSub channels were used with single connection  \nFixed - PubSub status message decoding  \nFixed - RLock.lock can hang in some cases  \nFixed - PubSub subscription may stuck in some cases  \nFixed - return value of `RedissonMultimap.keySet.size` method  \n\n### 12-Jun-2016 - version 2.2.16 released  \nFeature - `RGeo`, `RMultimapCache` added to `RBatch`  \nFeature - `fastRemove` and `fastRemoveAsync` methods were added to `RList`  \nImprovement - added Spring 4.3.0 support to RedissonSpringCacheManager  \nImprovement - `RSortedSet` performance boost up to __x4__  \nImprovement - `RList.remove` optimization  \nImprovement - ability to define `Codec` for `RRemoteService`  \nFixed - cluster state managing with redis masters only  \nFixed - dead lock during `RLock`, `RSemaphore`, `RReadWriteLock`, `RCountDownLatch` usage under heavy load  \n\n### 08-Jun-2016 - version 2.2.15 released  \nImprovement - Performance boost up to 30% for `RSortedSet.add` method  \nFixed - auth during reconnection (thanks to fransiskusx)  \nFixed - Infinity loop with iterator  \nFixed - NPE in `RSortedSet`  \nFixed - `RSortedSet.remove` and `iterator.remove` methods can break elements ordering  \n\n### 27-May-2016 - version 2.2.14 released  \nRedisson Team is pleased to announce [Redisson PRO](http://redisson.pro) edition. This version is based on open-source edition and has 24x7 support and some features.  \n\nFeature - __data sharding for `RMap`, `RSet` structures in cluster mode__ available only in [Redisson PRO](http://redisson.pro) edition  \nFeature - __new object added__ `RLock` with fair mode support  \nFeature -  Ability to execute interface methods used for RemoteService in asynchronous way  \nFeature - `RSemaphoreAsync` interface implemented  \nFeature - `addBefore`, `addBeforeAsync`, `addAfter`,  `addAfterAsync` methods added to `RList` object  \nFeature - `readAll`, `pollFirst`, `pollLast`, `first`, `last`, `revRankAsync`, `readAllAsync`, `pollFirstAsync`, `pollLastAsync`, `firstAsync`, `lastAsync` and `revRankAsync` methods added to `RLexSortedSet` object  \nFeature - `count`, `countAsync`, `readAll`, `readAllAsync` methods added to `RScoredSortedSet` object  \nFeature - `entryValueReversed`, `entryValueReversedAsync` methods added to`RScoredSortedSet` (thanks to weiqiyiji)  \nFeature - Ability to specify the name prefix for `RRemoteService` (thanks to pierredavidbelanger)  \nFeature - Ability to make remote call in fire-and-forget and ack-response modes only  (thanks to pierredavidbelanger)  \nImprovement - optimized cluster redirect handling during `RBatch` execution  \nFixed - `RScoredSortedSet.retainAll` method works incorrectly in some cases  \nFixed - `getBlockingQueue` throws `IndexOutOfBoundsException` (thanks to jackygurui)  \nFixed - `GEODIST` command handling in `RGeo` object  (thanks to jackygurui)  \nFixed - `RObject.expireAt` method uses second instead of ms  \nFixed - don't make a remote call when toString, equals and hashCode are called via remote interface (thanks to pierredavidbelanger)  \nFixed - `RRemoteService` doesn't work correctly with serialzation codecs (thanks to pierredavidbelanger)  \nFixed - executors amount is not enforced (thanks to pierredavidbelanger)  \nFixed - FSTObjectOutput shouldn't be closed after write  \nFixed - possible race-condition during ack waiting in `RRemoteService` object  \nFixed - timeWait checking fixed in `RLock.tryLockAsync`  \n\n### 30-Apr-2016 - version 2.2.13 released  \n\nFeature - `RSet.diff` and `RSet.intersection` methods added  \nImporovement - `RScoredSortedSet`.`containsAll`, `removeAll` and `retainAll` methods speed optimization  \nImporovement - `RSetCache` memory and speed optimization  \nImporovement - `RSet`.`retainAll`, `containsAll`, `removeAll` methods speed optimized up to 100x  \nFixed - possible infinity `RLock` expiration renewal process  \nFixed - error during `RSetCache.readAll` invocation.  \nFixed - expiration override wasn't work in `RSetCache.add`  \n\n### 22-Apr-2016 - version 2.2.12 released  \n\nImporovement - Replaying phase handling in CommandDecoder  \nFixed - cluster state update manager can't try next node if current node has failed to response   \nFixed - cluster initialization  \nFixed - items removing during `RMap` iteration  \nFixed - `RGeo.addAsync` codec definition  \nFixed - `RMapCache` iterator and readAll methods  \nFixed - unnecessary slots migration in cluster mode  \nFixed - Command batches redirect in cluster mode  \nFixed - cluster mode compatibility for `RedissonMultimap.fastRemove` method  \nFixed - `RedissonMultiLock` deadlock  \nFixed - MultiDecoder empty result handling  \nFixed - array start index in LUA scripts  \nFixed - RMap iterator  \nFixed - probably thread blocking issues  \n\n### 04-Apr-2016 - version 2.2.11 released  \n\nSince this version Redisson has __perfomance boost up to 43%__\n\nFeature - __new object added__ `RGeo`  \nFeature - __new object added__ `RBuckets`  \nFeature - travis-ci integration (thanks to jackygurui)  \nImprovement - `RScoredSortedSet.removeAllAsync` & `removeAll` methods optimization  \nImprovement - `RemoteService` reliability tuned up  \nImprovement - Reattaching RBlockingQueue\\Deque blocking commands (poll, take ...) after Redis failover process or channel reconnection  \nFixed - iterator objects may skip results in some cases  \nFixed - RTopic listeners hangs during synchronous commands execution inside it  \nFixed - Redisson hangs during shutdown if `RBlockingQueue\\Deque.take` or `RBlockingQueue\\Deque.poll` methods were invoked  \n\n\n### 23-Mar-2016 - version 2.2.10 released  \n\nFeature - __new object added__ `RRemoteService`  \nFeature - __new object added__ `RSetMultimapCache`  \nFeature - __new object added__ `RListMultimapCache`  \nImprovement - ability to cancel BRPOP and BLPOP async command execution  \nImprovement - Config params validation  \nImprovement - test RedisRunner improvements (thanks to jackygurui)  \nImprovement - `Double.NEGATIVE_INFINITY` and `Double.POSITIVE_INFINITY` handling for ScoredSortedSet (thanks to jackygurui)  \nFixed - MOVED, ASK handling in cluster mode using RBatch  \nFixed - delete and expire logic for Multimap objects  \nFixed - `RLock.tryLockAsync` NPE  \nFixed - possible NPE during Redisson version logging  \nFixed - Netty threads shutdown after connection error  \n\n### 04-Mar-2016 - version 2.2.9 released  \n\nFeature - __new object added__ `RSetMultimap`  \nFeature - __new object added__ `RListMultimap`  \nFeature - `valueRangeReversed` and `valueRangeReversedAsync` methods were added to `RScoredSortedSet` object  \nImprovement - Throw `RedisOutOfMemoryException` when OOM error from Redis server has occured  \nImprovement - Node type added to optimization in Cluster mode  \nImprovement - Add DynamicImport-Package to OSGi headers  \nFixed - `RedissonSpringCacheManager` Sentinel compatibility  \nFixed - `RAtomicLong.compareAndSet` doesn't work when expected value is 0 and it wasn't initialized  \n\n### 12-Feb-2016 - version 2.2.8 released  \n\nFeature - `union`, `unionAsync`, `readUnion` and `readUnionAsync` methods were added to `RSet` object  \nFeature - `readAll` and `readAllAsync` methods were added to `RSetCache` object  \nImprovement - `RKeys.delete` optimization in Cluster mode  \nFixed - Script error during `RSetCache.toArray` and `RSetCache.readAll` methods invocation  \nFixed - Sentinel doesn't support AUTH command  \nFixed - RMap iterator  \n\n### 03-Feb-2016 - version 2.2.7 released  \n\nFeature - `readAllKeySet`, `readAllValues`, `readAllEntry`, `readAllKeySetAsync`, `readAllValuesAsync`, `readAllEntryAsync` methods were added to `RMap` object  \nImprovement - `RKeys.delete` optimization in Cluster mode  \nFixed - minimal connections amount initialization  \nFixed - `RKeys.deleteByPattern` throws an error in cluster mode  \nFixed - `RKeys.deleteAsync` throws error in Cluster mode  \nFixed - Redisson failed to start when one of sentinel servers is down  \nFixed - Redisson failed to start when there are no slaves in Sentinel mode  \nFixed - slave nodes up/down state discovery in Cluster mode  \nFixed - slave can stay freezed when it has been just added in Sentinel mode  \nFixed - offline slaves handling during Redisson start in Sentinel mode  \nFixed - `SELECT` command can't be executed in Sentinel mode  \nFixed - `database` setting removed from cluster config  \n\n### 28-Jan-2016 - version 2.2.6 released  \n\nFeature - __new object added__ `RedissonMultiLock`  \nFeature - `move` method added to `RSet`, `RSetReactive` objects (thanks to thrau)  \nFeature - `put` methods with `maxIdleTime` param added to `RMapCache` object  \nFeature - `RList.subList` returns `live` view object  \nFeature - `readAll` method added to `RList` and `RSet` objects  \nFeature - `trim` method added to `RList` object  \nFeature - ability to read/write Redisson config object from/to `JSON` or `YAML` format  \nFeature - [Spring cache](http://docs.spring.io/spring/docs/current/spring-framework-reference/html/cache.html) integration  \nFeature - `readMode` setting added  \nImprovement - `RSetCache` object entry eviction optimization  \nImprovement - `RList` object optimization  \nImprovement - `RedissonCountDownLatchAsync` interface added  \nImprovement - cluster restrictions removed from `loadBucketValues` and `saveBuckets` methods  \nFixed - wrong ByteBuf read position in all codecs based on `StringCodec`  \nFixed - can't connect with password to Sentinel and Elasticache servers  \nFixed - Cluster slave discovery (regression since 2.1.5)  \nFixed - Sentinel slave discovery (regression since 2.1.5)  \n\n### 09-Jan-2015 - version 2.2.5 released  \n\nFeature - __new object added__ `RBloomFilter`  \nFeature - __new object added__ `RAtomicDouble`  \nFeature - `tryAdd`, `tryAddAsync`, `addAll` and `addAllAsync` methods added to `RScoredSortedSet`  \nFeature - `RKeys.count` and `RKeys.countAsync` methods added  \nFeature - `RedissonClient.saveBuckets` method added  \nFeature - `trySet`, `trySetAsync`, `compareAndSet` and `getAndSet` methods added to `RBucket`  \nFeature - `fastPutIfAbsent` and `fastPutIfAbsentAsync` methods added to `RMap`  \nImprovement - `RMap.putIfAbsent` optimization  \nImprovement - `RBitSet` index range extended to Integer.MAX_VALUE*2  \nImprovement - `RAtomicLong.getAndAdd` optimization  \nFixed - infinity loop during `RMap` iteration  \nFixed -  wrong timeout value used during `RBatch` execution  \nFixed - connection handling when `isReadFromSlaves = false`  \nFixed - `RMap.addAndGetAsync` key encoding  \nFixed - `RBatch` errors handling  \nFixed - `RBlockingQueue.pollLastAndOfferFirstToAsync` does not block properly  \n\n### 25-Dec-2015 - version 2.2.4 released  \nPlease update to this version ASAP due to connection leak discovered in previous versions since Redisson 2.1.4.\n\nFeature - __new object added__ `RBlockingDeque`  \nFeature - __new object added__ `RSemaphore`  \nFeature - `RMapCache.fastPut` method with TTL support added  \nFeature - `WeightedRoundRobinBalancer` slaves balancer added  \nImprovement - Memory consumption optimization  \nImprovement - storing value with ttl = 0 in `RSetCache` or `RMapCache` saves it infinitely  \nFixed - reconnection handling when Sentinel servers are restarted  \nFixed - RedisConnectionException should be throw if Redisson can't connect to servers at startup   \nFixed - Connection leak (regression bug since 2.1.4)  \nFixed - ConnectionWatchdog throws exception when eventloop in shutdown state  \nFixed - `RReadWriteLock.forceUnlock` works only for current thread  \nFixed - MapKeyDecoder and MapValueDecoder are called in wrong order  \nFixed - `RReadWriteLock` doesn't work in cluster mode  \n\n### 15-Dec-2015 - version 2.2.3 released  \nFeature - ability to set connection listener via `Config.connectionListener` setting  \nFixed - `RLock` expiration bug fixed (regression bug since 2.2.2)  \nFixed - NPE in `RedissonSortedSet` constructor  \n\n### 14-Dec-2015 - version 2.2.2 released  \nFeature - `isShuttingDown` and `isShutdown` methods were added to RedissonClient and RedissonReactiveClient  \nFeature - __new object added__ `RSetCacheReactive`  \nFixed - RLock expiration renewal task scheduling fixed (regression bug since 2.2.1)  \nFixed - RExpirable.expireAsync timeUnit precision fixed (regression bug since 2.2.1)  \n\n### 11-Dec-2015 - version 2.2.1 released  \nFeature - __new object added__ `RReadWriteLock` with reentrant read/write locking  \nFeature - __new object added__ `RMapCache` map-based cache with TTL support for each entry  \nFeature - __new object added__ `RSetCache` set-based cache with TTL support for each value  \nFeature - `RBatchReactive.getKeys` method added  \nFeature - `RMap.values()`, `RMap.keySet()`, `RMap.entrySet()` reimplemented with live-view objects  \nFeature - `RObjectReactive.isExists`, `RObject.isExists` and `RObject.isExistsAsync` added  \nFixed - `RLock.unlock` not thrown IllegalMonitorStateException  \n\n### 04-Dec-2015 - version 2.2.0 released  \nSince 2.2.0 version Redisson supports [Reactive Streams](http://www.reactive-streams.org). Use `Redisson.createReactive` method to access Reactive objects.\n\nFeature - [Reactive Streams](http://www.reactive-streams.org) support  \nFeature - `RList.addAllAsync` and `RMap.getAllAsync` methods added  \nFeature - `RList.equals` and `RList.hashCode` methods implemented  \nFeature - `pollFirst`, `pollFirstAsync`, `pollLast`, `pollLastAsync` methods added to `RScoredSortedSet`  \nImprovement - `RLock` and `RCountDownLatch` switched to `LongCodec`  \n__Breaking api change__ - `RExpirable` methods now uses milliseconds instead of seconds  \nFixed - `RLock.delete` didn't check lock existence  \n\n`Config.useMasterSlaveConnection` and `Config.useSentinelConnection` methods renamed to `Config.useSentinelServers` and `Config.useMasterSlaveServers` respectively  \nDeprecated methods are dropped\n\n\n### 30-Nov-2015 - version 2.1.6 released  \nFixed - connection pool regression bug  \nFixed - connection init during `Node.ping` and `ClusterNode.info` invocation  \n\n\n### 24-Nov-2015 - version 2.1.5 released  \nFeature - new methods with `limit` option support were added to `RLexSortedSet`: `lexRange`, `lexRangeHead`, `lexRangeHeadAsync`, `lexRangeTail`, `lexRangeTailAsync`, `lexRangeAsync` (thanks to jackygurui)  \nFeature - new methods with `limit` option support were added to `RScoredSortedSet`: `valueRange`, `valueRangeAsync`, `entryRange`, `entryRangeAsync`, `valueRange`, `valueRangeAsync` (thanks to jackygurui)  \nFeature - `LOADING` Redis server response handling  \nFeature - `RKeys.getSlot` method added  \nFeature - new config options `reconnectionTimeout`, `failedAttempts`, `connectTimeout`, `slaveSubscriptionConnectionMinimumIdleSize`, `masterConnectionMinimumIdleSize`, `'slaveConnectionMinimumIdleSize`, `idleConnectionTimeout`  \nFeature - `RBitSet` object added  \nFeature - `RBlockingQueue.pollFromAny` and `RBlockingQueue.pollFromAnyAsync` methods added  \nImprovements - `LoadBalancer` interface refactored  \nFixed - RedisTimeoutException message  \nFixed - command execution timeout handling  \nFixed - `RList.addAllAsync`  \nFixed - `RSet.iterator`  \nFixed - `RBatch.execute` and `RBatch.executeAsync` errors handling  \n\n\n### 11-Nov-2015 - version 2.1.4 released  \nCluster support improvements. New codecs. Stability improvements.\n\nFeature - [LZ4](https://github.com/jpountz/lz4-java) compression codec support  \nFeature - [CBOR](http://cbor.io/) binary json codec support (thanks to lefay)  \nFeature - [MsgPack](http://msgpack.org/) binary json codec support  \nFeature - [Fst](https://github.com/RuedigerMoeller/fast-serialization) serialization codec support  \nFeature - [Snappy](https://github.com/xerial/snappy-java) compression codec support  \nFeature - cluster slave nodes change monitoring  \nFeature - `Config.slaveFailedAttempts` and `Config.slaveReconnectionTimeout` config params added  \nFeature - `ClusterServersConfig.readFromSlaves` config param added  \nImprovement - async channel reconnection  \nImprovement - connection acquisition in async way  \nImprovement - cluster slot change/migration handling  \nImprovement - get cluster info from new cluster nodes not defined in initial config  \n__Deprecated__ - `refreshConnectionAfterFails` config param  \nFixed - `RList.add(pos, element)` fixed  \nFixed - Publish/Subscribe message decoding under heavy load  \nFixed - cluster ASK response handling  \nFixed - `RMap.putAll` fixed  \nFixed - parsing cluster nodes info  \nFixed - NPE during Publish/Subscribe event handling  \nFixed - Redisson shutdown handling  \nFixed - EOFException during RLock usage with SerializationCodec (thanks to Oleg Ternovoi)\n\n### 17-Sep-2015 - version 2.1.3 released  \nFeature - Ability to define `Codec` for each object  \nFeature - `refreshConnectionAfterFails` setting added  \nFeature - [AWS Elasticache](https://aws.amazon.com/elasticache/) support via `Config.useElasticacheServers` method (thanks to Steve Ungerer)  \nFeature - `RScoredSortedSet` and `RLexSortedSet` added. Both uses native Redis Sorted Set commands. `RLexSortedSet`s stores only String objects and work with ZLEX-commands  \nFixed - missed AUTH during channel reconnection  \nFixed - resubscribe to subscribed topics during channel reconnection  \n\n### 05-Sep-2015 - version 2.1.2 released  \nFixed - possible NPE during channel reconnection  \nFixed - executeAsync freezes in cluster mode  \nFixed - use same node for SCAN/SSCAN/HSCAN during iteration  \nFixed - possible race-condition during master change  \nFixed - `BlockingQueue.peek` race-condition  \nFixed - NPE with empty sentinel servers  \nFixed - unable to read `clientName` config param in Master\\Slave and Sentinel modes  \nFixed - \"Too many open files\" error in cluster mode\n\n### 15-Aug-2015 - version 2.1.1 released  \nFeature - all keys operations extracted to `RKeys` interface  \nFeature - `RKeys.getKeys`, `RKeys.getKeysByPattern` and `RKeys.randomKey`methods added  \nFeature - `RBlockingQueueAsync.drainToAsync` method added  \nFeature - Redis nodes info and ping operations via `Redisson.getNodesGroup` or `Redisson.getClusterNodesGroup` now available  \nImprovement - added sentinel nodes discovery  \nFixed - command encoding errors handling  \nFixed - cluster empty slot handling  \nFixed - connection hangs when there are no slaves in sentinel mode  \nFixed - activate master as slave when there are no more available slaves in sentinel mode  \nFixed - skip disconnected sentinels during startup  \nFixed - slave node discovery in sentinel mode which has been disconnected since start  \n__Deprecated__ - Redisson methods `deleteAsync`, `delete`, `deleteByPatternAsync`, `deleteByPattern`, `findKeysByPatternAsync`, `findKeysByPattern`. Use same methods with `RKeys` interface  \n\n### 03-Aug-2015 - version 2.1.0 released  \nFeature - `RTopic` subscribtion/unsubscription status listener added  \nFeature - `RSet`: `removeRandom` and `removeRandomAsync` methods added  \nImprovement - `RList`: `retainAll`,`containsAll`, `indexOf`, `lastIndexOf` optimization  \n__Breaking api change__ - `findKeysByPattern` response interface changed to `Collection`  \n__Breaking api change__ - `RTopic` message listener interface changed  \nFixed - NPE during cluster mode start  \nFixed - timeout timer interval calculation  \nFixed - `RBatch` NPE's with very big commands list  \nFixed - `RBucket.set` with timeout  \n\n### 26-Jul-2015 - version 2.0.0 released  \nStarting from 2.0.0 version Redisson has a new own async and lock-free Redis client under the hood. Thanks to the new architecture pipline (command batches) support has been implemented and a lot of code has gone.  \n\nFeature - new `RObject` methods: `move`, `moveAsync`, `migrate`, `migrateAsync`  \nFeature - new async interfaces: `RAsyncMap`, `RAtomicLongAsync`, `RBlockingQueueAsync`, `RCollectionAsync`, `RDequeAsync`, `RExpirableAsync`, `RHyperLogLogAsync`, `RListAsync`, `RObjectAsync`, `RQueueAsync`, `RScriptAsync`, `RSetAsync`, `RTopicAsync`  \nFeature - multiple commands batch (Redis pipelining) support via `Redisson.createBatch` method  \nFeature - new methods `flushall`, `deleteAsync`, `delete`, `deleteByPatternAsync`, `deleteByPattern`, `findKeysByPatternAsync`, `findKeysByPattern` added to `RedissonClient` interface  \nImprovement - closed channel detection speedup  \n\n### 22-Jul-2015 - version 1.3.1 released  \nFixed - requests state sync during shutdown  \nFixed - netty-transport-native-epoll is now has a provided scope  \nFixed - NPE during `BlockingQueue.poll` invocation  \n\n### 04-Jul-2015 - version 1.3.0 released\nFeature - `RQueue.pollLastAndOfferFirstTo` method added  \nFeature - `RObject.rename`, `RObject.renameAsync`, `RObject.renamenx`, `RObject.renamenxAsync` methods added  \nFeature - `RList.getAsync`, `RList.addAsync`, `RList.addAllAsync` methods added  \nFeature - `RObject.deleteAsync` method added  \nFeature - unix sockets support via `Configuration.useLinuxNativeEpoll` setting  \nFeature - `Redisson.getTopicPattern` method added (thanks to alex-sherwin)  \nImprovement - `RLock` auto-unlock then client lock-owner is gone (thanks to AndrewKolpakov)  \nImprovement - lua scripts used instead of multi/exec commands to avoid connection errors during execution (thanks to AndrewKolpakov)  \nImprovement - `RObject.delete` method now returns `boolean` status  \nImprovement - propagate Command processing exceptions to ConnectionManager (thanks to marko-stankovic)  \nImprovement - KryoCodec classes registration ability added  \nFixed - slave status handling in Sentinel mode  \nFixed - String codec  \nFixed - Cluster ASKING command support  \nFixed - `RedissonBlockingQueue#drainTo` method (thanks to Sergey Poletaev)  \nFixed - Cluster.STATE.HANDSHAKE enum added  \nFixed - `RedissonClient.getScript` method added  \nFixed - `BlockingQueue.poll` method  \nFixed - Incorrect map key encoding makes hmget return no fields when string keys are used (thanks to sammiq)  \n\n### 02-Apr-2015 - version 1.2.1 released\nFeature - all redis-script commands via 'RScript' object  \nFeature - implementation of `java.util.concurrent.BlockingQueue` (thanks to pdeschen)  \nFeature - buckets load by pattern (thanks to mathieucarbou)  \nImprovement - IPv6 support  \nImprovement - `isEmpty` checks for added collections  \nFixed - KryoCodec keys decoding (thanks to mathieucarbou)  \nFixed - `RMap.addAndGet()` data format  \nFixed - timeout support in cluster, sentinel and single connections configurations  \nFixed - ClassCastException in `RedissonCountDownLatch.trySetCount`  \nFixed - `RMap.replace` concurrency issue (thanks to AndrewKolpakov)  \nFixed - `RLock` subscription timeout units fixed (thanks to AndrewKolpakov)  \nFixed - Re-throw async exceptions (thanks to AndrewKolpakov)  \n\n### 09-Jan-2015 - version 1.2.0 released\nFeature - cluster mode support  \nFixed - `RList` iterator race conditions  \nFixed - `RDeque.addFirst` `RDeque.addLast` methods  \nFixed - OSGi support\n\n### 16-Dec-2014 - version 1.1.7 released\nImprovement - `RAtomicLong` optimization  \nFixed - `RMap.fastRemove` and `RMap.getAll` methods  \nFixed - `RTopic` listeners re-subscribing in sentinel mode  \nFixed - `RSet.toArray` and `RSet.iterator` values order  \nFixed - keys iteration in `RMap.getAll`  \nFixed - `RSet` iteration  \nFixed - `RAtomicLong` NPE  \nFixed - infinity loop during master/slave connection acquiring  \nFixed - `RedissonList.addAll` result  \n\n### 18-Nov-2014 - version 1.1.6 released\nFeature - `RBucket.exists` and `RBucket.existsAsync` methods added  \nFeature - `RMap.addAndGet` method added  \nFeature -  database index via `database` and operation timeout via `timeout` config params added  \nImprovement - `RLock` optimization  \n__Breaking api change__ - Redisson now uses `RedissonClient` interface  \nFixed - NPE in `CommandOutput`  \nFixed - unsubscribing during `RTopic.removeListener`  \nFixed - all object names encoding, no more quotes  \nFixed - HashedWheelTimer shutdown  \nFixed - `RLock` race conditions (thanks to jsotuyod and AndrewKolpakov)  \nFixed - `RCountDownLatch` race conditions  \n\n### 23-Jul-2014 - version 1.1.5 released\nFeature - operations auto-retry. `retryAttempts` and `retryInterval` params added for each connection type  \nFeature - `RMap.filterEntries`, `RMap.getAll`, `RMap.filterKeys`, `RMap.filterValues` methods added  \nFeature - `RMap.fastRemove`, `RMap.fastRemoveAsync`, `RMap.fastPut` & `RMap.fastPutAsync` methods added  \nFixed - async operations timeout handling  \nFixed - sorting algorithm used in `RSortedSet`.  \n\n### 15-Jul-2014 - version 1.1.4 released\nFeature - new `RLock.lockInterruptibly`, `RLock.tryLock`, `RLock.lock` methods with TTL support  \nFixed - pub/sub connections reattach then slave/master down  \nFixed - turn off connection watchdog then slave/master down  \nFixed - sentinel master switch  \nFixed - slave down connection closing  \n\n### 13-Jul-2014 - version 1.1.3 released\nImprovement - RedissonCountDownLatch optimization  \nImprovement - RedissonLock optimization  \nFixed - RedissonLock thread-safety  \nFixed - master/slave auth using Sentinel servers  \nFixed - slave down handling using Sentinel servers  \n\n### 03-Jul-2014 - version 1.1.2 released\nImprovement - RedissonSet.iterator implemented with sscan  \nImprovement - RedissonSortedSet.iterator optimization  \nFeature - `RSortedSet.removeAsync`, `RSortedSet.addAsync`, `RSet.removeAsync`, RSet.addAsync methods added  \nFeature - slave up/down detection in Sentinel servers connection mode  \nFeature - new-slave automatic discovery in Sentinel servers connection mode  \n\n### 17-June-2014 - version 1.1.1 released\nFeature - sentinel servers support  \nFixed - connection leak in `RTopic`  \nFixed - setted password not used in single server connection  \n\n### 07-June-2014 - version 1.1.0 released\nFeature - master/slave connection management  \nFeature - simple set/get object support via `org.redisson.core.RBucket`  \nFeature - hyperloglog support via `org.redisson.core.RHyperLogLog`  \nFeature - new methods `getAsync`, `putAsync` and `removeAsync` added to `org.redisson.core.RMap`  \nFeature - new method `publishAsync` added to `org.redisson.core.RTopic`  \nFeature - [Kryo](https://github.com/EsotericSoftware/kryo) codec added (thanks to mathieucarbou)  \n__Breaking api change__ - `org.redisson.Config` model changed  \nFixed - score calucaltion algorithm used in `RSortedSet`.  \nFixed - `RMap.put` & `RMap.remove` result consistency fixed.  \nFixed - `RTopic.publish` now returns the number of clients that received the message  \nFixed - reconnection handling (thanks to renzihui)  \nImprovement - `org.redisson.core.RTopic` now use lazy apporach for subscribe/unsubscribe  \n\n### 04-May-2014 - version 1.0.4 released\nFeature - distributed implementation of `java.util.Deque`  \nFeature - some objects implements `org.redisson.core.RExpirable`  \nFixed - JsonJacksonCodec lazy init  \n\n### 26-Mar-2014 - version 1.0.3 released\nFixed - RedissonAtomicLong state format  \nFixed - Long serialization in JsonJacksonCodec  \n\n### 05-Feb-2014 - version 1.0.2 released\nFeature - distributed implementation of `java.util.SortedSet`  \nFixed - OSGi compability  \n\n### 17-Jan-2014 - version 1.0.1 released\nImprovement - forceUnlock, isLocked, isHeldByCurrentThread and getHoldCount methods added to RLock  \nFeature - connection load balancer to use multiple Redis servers  \nFeature - published in maven central repo  \n\n### 11-Jan-2014 - version 1.0.0 released\nFirst stable release.\n\n"
        },
        {
          "name": "DCO.txt",
          "type": "blob",
          "size": 1.38671875,
          "content": "Developer Certificate of Origin\nVersion 1.1\n\nCopyright (C) 2004, 2006 The Linux Foundation and its contributors.\n1 Letterman Drive\nSuite D4700\nSan Francisco, CA, 94129\n\nEveryone is permitted to copy and distribute verbatim copies of this\nlicense document, but changing it is not allowed.\n\n\nDeveloper's Certificate of Origin 1.1\n\nBy making a contribution to this project, I certify that:\n\n(a) The contribution was created in whole or in part by me and I\n    have the right to submit it under the open source license\n    indicated in the file; or\n\n(b) The contribution is based upon previous work that, to the best\n    of my knowledge, is covered under an appropriate open source\n    license and I have the right under that license to submit that\n    work with modifications, whether created in whole or in part\n    by me, under the same open source license (unless I am\n    permitted to submit under a different license), as indicated\n    in the file; or\n\n(c) The contribution was provided directly to me by some other\n    person who certified (a), (b) or (c) and I have not modified\n    it.\n\n(d) I understand and agree that this project and the contribution\n    are public and that a record of the contribution (including all\n    personal information I submit with it, including my sign-off) is\n    maintained indefinitely and may be redistributed consistent with\n    this project or the open source license(s) involved."
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 11.08984375,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright (c) 2014-2018 Nikita Koksharov\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 7.5029296875,
          "content": "# Redisson - Valkey & Redis Java client.<br/>Real-Time Data Platform.\n[![Maven Central](https://maven-badges.herokuapp.com/maven-central/org.redisson/redisson/badge.svg)](https://maven-badges.herokuapp.com/maven-central/org.redisson/redisson)\n[![JavaDoc](http://www.javadoc.io/badge/org.redisson/redisson.svg)](http://www.javadoc.io/doc/org.redisson/redisson)\n[![License](http://img.shields.io/:license-apache-brightgreen.svg)](http://www.apache.org/licenses/LICENSE-2.0.html)\n\n[Quick start](https://redisson.org/docs/getting-started/) | [Documentation](https://redisson.org/docs/) | [Changelog](https://github.com/redisson/redisson/blob/master/CHANGELOG.md) | [Code examples](https://github.com/redisson/redisson-examples) | [Report an issue](https://github.com/redisson/redisson/issues/new)\n\nHigh-performance async and lock-free Java client for Redis and Valkey based on [Netty](http://netty.io) framework.  \n\n\n## Features\n\n* Thread-safe implementation\n* JDK 1.8+ up to the latest version compatible\n* Android compatible\n* [Redis](https://redis.io) compatible - from 3.0 up to the latest version\n* [Valkey](https://valkey.io) compatible - from 7.2.5 up to the latest version\n* Supported deployment types\n    * [Proxy](https://redisson.org/docs/configuration/#proxy-mode)\n    * [Multi-Cluster](https://redisson.org/docs/configuration/#multi-cluster-mode)\n    * [Multi-Sentinel](https://redisson.org/docs/configuration/#multi-sentinel-mode)\n    * [Single](https://redisson.org/docs/configuration/#single-mode)\n    * [Cluster](https://redisson.org/docs/configuration/#cluster-mode)\n    * [Sentinel](https://redisson.org/docs/configuration/#sentinel-mode)\n    * [Replicated](https://redisson.org/docs/configuration/#replicated-mode)\n    * [Master and Slaves](https://redisson.org/docs/configuration/#master-slave-mode)\n* Amazon Web Services compatible\n     * [AWS Elasticache Serverless](https://aws.amazon.com/elasticache/features/#Serverless)\n     * [AWS Redis Global Datastore](https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/Redis-Global-Datastore.html)\n     * [AWS ElastiCache](https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/WhatIs.html)\n     * [Amazon MemoryDB](https://aws.amazon.com/memorydb)\n* Microsoft Azure compatible\n     * [Azure Redis Cache](https://azure.microsoft.com/en-us/services/cache/)\n     * [Azure Redis Cache active-passive replication](https://learn.microsoft.com/en-us/azure/azure-cache-for-redis/cache-how-to-geo-replication)\n     * [Azure Redis Cache active-active replication](https://learn.microsoft.com/en-us/azure/azure-cache-for-redis/cache-how-to-active-geo-replication)\n* Google Cloud Memorystore compatible\n     * [Google Cloud Redis](https://cloud.google.com/memorystore/docs/redis/)\n     * [Google Cloud Redis High availability](https://cloud.google.com/memorystore/docs/redis/high-availability)\n* Redis Enterprise compatible\n     * [Redis Enterprise](https://redis.com/redis-enterprise/)\n     * [Redis Enterprise Active-Active databases](https://docs.redis.com/latest/rs/databases/active-active/get-started/)\n     * [Redis Enterprise Multiple Active Proxy](https://docs.redis.com/latest/rs/databases/configure/proxy-policy/#about-multiple-active-proxy-support)\n* IBM Cloud compatible\n     * [IBM Cloud Databases for Redis](https://www.ibm.com/cloud/databases-for-redis)\n* Aiven compatible\n     * [Aiven for Redis](https://aiven.io/redis)\n* Supports auto-reconnection  \n* Supports failed to send command auto-retry  \n* Supports OSGi  \n* Supports SSL  \n* Asynchronous connection pool  \n* Lua scripting  \n* [RediSearch](https://redisson.org/docs/data-and-services/services/#redisearch-service)\n* [JSON datatype](https://redisson.org/docs/data-and-services/objects/#json-object-holder)\n* [JSON Store](https://redisson.org/docs/data-and-services/collections/#json-store) \n* [Reactive Streams](https://redisson.org/docs/api-models/#reactive-api) API  \n* [RxJava3](https://redisson.org/docs/api-models/#rxjava-api) API  \n* [Asynchronous](https://redisson.org/docs/api-models/#synchronous-and-asynchronous-api) API  \n* Local cache support including [Caffeine](https://github.com/ben-manes/caffeine)-based implementation\n* [Cache API implementations](https://redisson.org/docs/cache-api-implementations)  \n    Spring Cache, JCache API (JSR-107), Hibernate Cache, MyBatis Cache, Quarkus Cache, Micronaut Cache\n* [Distributed Java objects](https://redisson.org/docs/data-and-services/objects)  \n    Object holder, JSON holder, Binary stream holder, Geospatial holder, BitSet, PublishSubscribe, Bloom filter, HyperLogLog\n* [Distributed Java counters](https://redisson.org/docs/data-and-services/counters)  \n    AtomicLong, AtomicDouble, LongAdder, DoubleAdder\n* [Distributed Java collections](https://redisson.org/docs/data-and-services/collections)  \n    JSON Store, Map, Multimap, Set, List, SortedSet, ScoredSortedSet, LexSortedSet, Queue, Deque, Blocking Queue, Bounded Blocking Queue, Blocking Deque, Delayed Queue, Priority Queue, Priority Deque\n* [Distributed Java locks and synchronizers](https://redisson.org/docs/data-and-services/locks-and-synchronizers)  \n    Lock, FairLock, MultiLock, RedLock, ReadWriteLock, Semaphore, PermitExpirableSemaphore, CountDownLatch\n* [Distributed services](https://redisson.org/docs/data-and-services/services)  \n    Remote service, Live Object service, Executor service, Scheduler service, MapReduce service\n* [Microservices integration](https://redisson.org/docs/microservices-integration)  \n    Helidon, Micronaut, Quarkus\n* [Integration with Spring framework](https://redisson.org/docs/integration-with-spring)  \n    Spring Boot Starter, Spring Cache, Spring Session, Spring Transaction Manager, Spring Cloud Stream, Spring Data Redis\n* [Web Session Management](https://redisson.org/docs/web-session-management)  \n    Apache Tomcat Session, Spring Session, Micronaut Session\n* [Transactions API](https://redisson.org/docs/transactions)\n* [Redis pipelining](https://redisson.org/docs/pipelining) (command batches)\n* Supports many popular codecs ([Kryo](https://github.com/EsotericSoftware/kryo), [Jackson JSON](https://github.com/FasterXML/jackson), [Avro](http://avro.apache.org/), [Smile](http://wiki.fasterxml.com/SmileFormatSpec), [CBOR](http://cbor.io/), [MsgPack](http://msgpack.org/), [Amazon Ion](https://amzn.github.io/ion-docs/), [LZ4](https://github.com/jpountz/lz4-java), [Snappy](https://github.com/xerial/snappy-java), [Protobuf](https://github.com/protocolbuffers/protobuf) and JDK Serialization)\n* 2000+ unit tests  \n\n## Comparing solutions\n- [Redisson vs Spring Data Redis](https://redisson.org/articles/feature-comparison-redisson-vs-spring-data-redis.html)\n- [Redisson vs Jedis](https://redisson.org/feature-comparison-redisson-vs-jedis.html)\n- [Redisson vs Lettuce](https://redisson.org/feature-comparison-redisson-vs-lettuce.html)\n- [Redis vs Apache Ignite](https://redisson.org/feature-comparison-redis-vs-ignite.html)\n- [Redis vs Hazelcast](https://redisson.org/feature-comparison-redis-vs-hazelcast.html)\n- [Redis vs Ehcache](https://redisson.org/feature-comparison-redis-vs-ehcache.html)\n\n## Success stories\n\n- [Moving from Hazelcast to Redis  /  Datorama](https://engineering.datorama.com/moving-from-hazelcast-to-redis-b90a0769d1cb)  \n- [Migrating from Hazelcast to Redis  /  Halodoc](https://blogs.halodoc.io/why-and-how-we-move-from-hazelcast-to-redis-2/)\n- [Distributed Locking with Redis (Migration from Hazelcast)  /  ContaAzul](https://carlosbecker.com/posts/distributed-locks-redis/)  \n- [Migrating from Coherence to Redis](https://www.youtube.com/watch?v=JF5R2ucKTEg)  \n\nUpgrade to __[Redisson PRO](https://redisson.pro)__ with **advanced features**.\n"
        },
        {
          "name": "checkstyle-suppressions.xml",
          "type": "blob",
          "size": 0.3779296875,
          "content": "<?xml version=\"1.0\"?>\n\n<!DOCTYPE suppressions PUBLIC\n  \"-//Checkstyle//DTD SuppressionFilter Configuration 1.2//EN\"\n  \"https://checkstyle.org/dtds/suppressions_1_2.dtd\">\n\n<suppressions>\n  <suppress checks=\"FileLength\"\n            files=\"JCache.java|RedissonMapCache.java\"/>\n  <suppress checks=\"NestedTryDepth\"\n            files=\"JCache.java\"\n            lines=\"785-845\"/>\n</suppressions>"
        },
        {
          "name": "checkstyle.xml",
          "type": "blob",
          "size": 11.5771484375,
          "content": "<?xml version=\"1.0\"?>\n<!-- \n/*\n * Copyright 2001-2004 The Apache Software Foundation.\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *      http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n -->\n\n<!DOCTYPE module PUBLIC\n        \"-//Puppy Crawl//DTD Check Configuration 1.2//EN\"\n        \"https://checkstyle.org/dtds/configuration_1_3.dtd\">\n\n<!--\n\n  Checkstyle configuration that checks the sun coding conventions from:\n\n    - the Java Language Specification at\n      http://java.sun.com/docs/books/jls/second_edition/html/index.html\n\n    - the Sun Code Conventions at http://java.sun.com/docs/codeconv/\n\n    - the Javadoc guidelines at\n      http://java.sun.com/j2se/javadoc/writingdoccomments/index.html\n\n    - the JDK Api documentation http://java.sun.com/j2se/docs/api/index.html\n\n    - some best practices\n\n  Checkstyle is very configurable. Be sure to read the documentation at\n  http://checkstyle.sf.net (or in your downloaded distribution).\n\n  Most Checks are configurable, be sure to consult the documentation.\n\n  To completely disable a check, just comment it out or delete it from the file.\n\n  Finally, it is worth reading the documentation.\n\n-->\n\n<module name=\"Checker\">\n    <property name=\"charset\" value=\"UTF-8\"/>\n\n    <!-- Checks whether files end with a new line.                        -->\n    <!-- See http://checkstyle.sf.net/config_misc.html#NewlineAtEndOfFile -->\n    <!-- module name=\"NewlineAtEndOfFile\"/-->\n\n    <!-- Checks that property files contain the same keys.         -->\n    <!-- See http://checkstyle.sf.net/config_misc.html#Translation -->\n    <module name=\"Translation\"/>\n\n    <module name=\"FileTabCharacter\">\n        <property name=\"eachLine\" value=\"true\"/>\n    </module>\n\n    <module name=\"SuppressWarningsFilter\" />\n\n    <module name=\"TreeWalker\">\n        <module name=\"SuppressWarningsHolder\" />\n\n        <!-- Checks for Naming Conventions.                  -->\n        <!-- See http://checkstyle.sf.net/config_naming.html -->\n        <module name=\"ConstantName\">\n            <property name=\"format\" value=\"^log(ger)?|[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$\"/>\n        </module>\n        <module name=\"LocalFinalVariableName\"/>\n        <module name=\"LocalVariableName\"/>\n        <module name=\"MemberName\"/>\n        <module name=\"MethodName\"/>\n        <module name=\"PackageName\"/>\n        <module name=\"ParameterName\"/>\n        <module name=\"StaticVariableName\"/>\n        <module name=\"TypeName\"/>\n\n\n        <!-- Checks for Headers                                -->\n        <!-- See http://checkstyle.sf.net/config_header.html   -->\n        <!-- <module name=\"Header\">                            -->\n        <!-- The follow property value demonstrates the ability     -->\n        <!-- to have access to ANT properties. In this case it uses -->\n        <!-- the ${basedir} property to allow Checkstyle to be run  -->\n        <!-- from any directory within a project. See property      -->\n        <!-- expansion,                                             -->\n        <!-- http://checkstyle.sf.net/config.html#properties        -->\n        <!-- <property                                              -->\n        <!--     name=\"headerFile\"                                  -->\n        <!--     value=\"${basedir}/java.header\"/>                   -->\n        <!-- </module> -->\n\n        <!-- Following interprets the header file as regular expressions. -->\n        <!-- <module name=\"RegexpHeader\"/>                                -->\n\n\n        <!-- Checks for imports                              -->\n        <!-- See http://checkstyle.sf.net/config_import.html -->\n        <!--module name=\"AvoidStarImport\"/-->\n        <module name=\"IllegalImport\"/>\n        <!-- defaults to sun.* packages -->\n        <module name=\"RedundantImport\"/>\n        <module name=\"UnusedImports\"/>\n\n\n        <!-- Checks for Size Violations.                    -->\n        <!-- See http://checkstyle.sf.net/config_sizes.html -->\n<!--\n        <module name=\"LineLength\">\n            <property name=\"max\" value=\"110\"/>\n        </module>\n-->\n        <module name=\"MethodLength\"/>\n        <module name=\"ParameterNumber\">\n            <property name=\"max\" value=\"10\"/>\n        </module>\n\n        <!-- Checks for whitespace                               -->\n        <!-- See http://checkstyle.sf.net/config_whitespace.html -->\n        <module name=\"EmptyForIteratorPad\"/>\n        <module name=\"MethodParamPad\"/>\n        <module name=\"NoWhitespaceBefore\"/>\n        <module name=\"OperatorWrap\">\n           <property name=\"tokens\" value=\"QUESTION, COLON, EQUAL, NOT_EQUAL, DIV, MINUS, STAR, MOD, SR, BSR, GE, GT, SL, LE, LT, BXOR, BOR, LOR, BAND, LAND, TYPE_EXTENSION_AND, LITERAL_INSTANCEOF\"/>\n        </module>\n        <module name=\"ParenPad\"/>\n        <module name=\"TypecastParenPad\"/>\n        <module name=\"WhitespaceAfter\"/>\n        <!--module name=\"WhitespaceAround\"/-->\n\n\n        <!-- Modifier Checks                                    -->\n        <!-- See http://checkstyle.sf.net/config_modifiers.html -->\n        <module name=\"ModifierOrder\"/>\n        <module name=\"RedundantModifier\"/>\n\n\n        <!-- Checks for blocks. You know, those {}'s         -->\n        <!-- See http://checkstyle.sf.net/config_blocks.html -->\n        <module name=\"AvoidNestedBlocks\">\n            <property name=\"allowInSwitchCase\" value=\"true\"/>\n        </module>\n        <module name=\"EmptyBlock\"/>\n        <module name=\"LeftCurly\"/>\n        <module name=\"NeedBraces\">\n            <property name=\"tokens\" value=\" LITERAL_DO,LITERAL_FOR,LITERAL_WHILE\"/>\n        </module>\n        <module name=\"RightCurly\"/>\n\n\n        <!-- Checks for common coding problems               -->\n        <!-- See http://checkstyle.sf.net/config_coding.html -->\n        <module name=\"ArrayTrailingComma\"/>\n        <module name=\"AvoidInlineConditionals\"/>\n        <module name=\"CovariantEquals\"/>\n        <!-- MY FAVOURITE -->\n        <module name=\"EmptyStatement\"/>\n        <module name=\"EqualsHashCode\"/>\n        <module name=\"EqualsAvoidNull\"/>\n        <!--module name=\"HiddenField\"/-->\n        <module name=\"IllegalInstantiation\"/>\n        <!--module name=\"IllegalThrows\"/-->\n        <module name=\"InnerAssignment\"/>\n        <module name=\"MultipleVariableDeclarations\"/>\n        <!--module name=\"MagicNumber\"/-->\n        <module name=\"SimplifyBooleanExpression\"/>\n        <module name=\"SimplifyBooleanReturn\"/>\n        <module name=\"StringLiteralEquality\"/>\n        <module name=\"NestedForDepth\">\n           <property name=\"max\" value=\"2\"/>\n        </module>\n        <module name=\"NestedIfDepth\">\n           <property name=\"max\" value=\"3\"/>\n        </module>\n        <module name=\"NestedTryDepth\"/>\n        <module name=\"NoClone\"/>\n        <module name=\"NoFinalizer\"/>\n        <module name=\"OneStatementPerLine\"/>\n        <module name=\"IllegalCatch\">\n           <property name=\"illegalClassNames\" value=\" java.lang.Throwable, java.lang.RuntimeException\"/>\n        </module>\n        <module name=\"FallThrough\"/>\n        <module name=\"UnnecessaryParentheses\">\n             <property name=\"tokens\" value=\"IDENT\"/>\n             <property name=\"tokens\" value=\"NUM_DOUBLE\"/>\n             <property name=\"tokens\" value=\"NUM_FLOAT\"/>\n             <property name=\"tokens\" value=\"NUM_INT\"/>\n             <property name=\"tokens\" value=\"NUM_LONG\"/>\n             <property name=\"tokens\" value=\"STRING_LITERAL\"/>\n             <property name=\"tokens\" value=\"LITERAL_NULL\"/>\n             <property name=\"tokens\" value=\"LITERAL_FALSE\"/>\n             <property name=\"tokens\" value=\"LITERAL_TRUE\"/>\n             <property name=\"tokens\" value=\"ASSIGN\"/>\n             <property name=\"tokens\" value=\"BAND_ASSIGN\"/>\n             <property name=\"tokens\" value=\"BOR_ASSIGN\"/>\n             <property name=\"tokens\" value=\"BSR_ASSIGN\"/>\n             <property name=\"tokens\" value=\"BXOR_ASSIGN\"/>\n             <property name=\"tokens\" value=\"DIV_ASSIGN\"/>\n             <property name=\"tokens\" value=\"MINUS_ASSIGN\"/>\n             <property name=\"tokens\" value=\"MOD_ASSIGN\"/>\n             <property name=\"tokens\" value=\"PLUS_ASSIGN\"/>\n             <property name=\"tokens\" value=\"SL_ASSIGN\"/>\n             <property name=\"tokens\" value=\"SR_ASSIGN\"/>\n             <property name=\"tokens\" value=\"STAR_ASSIGN\"/>\n             <property name=\"tokens\" value=\"LAMBDA\"/>\n             <property name=\"tokens\" value=\"TEXT_BLOCK_LITERAL_BEGIN\"/>\n             <property name=\"tokens\" value=\"LOR\"/>\n             <property name=\"tokens\" value=\"LITERAL_INSTANCEOF\"/>\n             <property name=\"tokens\" value=\"GT\"/>\n             <property name=\"tokens\" value=\"LT\"/>\n             <property name=\"tokens\" value=\"GE\"/>\n             <property name=\"tokens\" value=\"LE\"/>\n             <property name=\"tokens\" value=\"EQUAL\"/>\n             <property name=\"tokens\" value=\"NOT_EQUAL\"/>\n             <property name=\"tokens\" value=\"UNARY_MINUS\"/>\n             <property name=\"tokens\" value=\"UNARY_PLUS\"/>\n             <property name=\"tokens\" value=\"INC\"/>\n             <property name=\"tokens\" value=\"DEC\"/>\n             <property name=\"tokens\" value=\"LNOT\"/>\n             <property name=\"tokens\" value=\"BNOT\"/>\n             <property name=\"tokens\" value=\"POST_INC\"/>\n             <property name=\"tokens\" value=\"POST_DEC\"/>\n<!--\n             <property name=\"tokens\" value=\"LAND\"/>\n-->\n        </module>\n\n<!--\n        <module name=\"UnnecessarySemicolonAfterOuterTypeDeclaration\"/>\n        <module name=\"UnnecessarySemicolonAfterTypeMemberDeclaration\"/>\n        <module name=\"UnnecessarySemicolonInEnumeration\"/>\n        <module name=\"UnnecessarySemicolonInTryWithResources\"/>\n        <module name=\"UnusedLocalVariable\"/>\n-->\n        <!--module name=\"FinalLocalVariable\"/-->\n\n        <!-- Checks for class design                         -->\n        <!-- See http://checkstyle.sf.net/config_design.html -->\n        <!--module name=\"DesignForExtension\"/-->\n        <module name=\"FinalClass\"/>\n        <!--module name=\"HideUtilityClassConstructor\"/-->\n        <module name=\"VisibilityModifier\">\n          <property name=\"packageAllowed\" value=\"true\"/>\n          <property name=\"protectedAllowed\" value=\"true\"/>\n        </module>\n\n        <!-- Miscellaneous other checks.                   -->\n        <!-- See http://checkstyle.sf.net/config_misc.html -->\n        <module name=\"ArrayTypeStyle\"/>\n        <module name=\"Regexp\">\n            <property name=\"format\" value=\"System\\.(out)|(err)\\.print(ln)?\\(\"/>\n            <property name=\"illegalPattern\" value=\"true\"/>\n        </module>\n        <module name=\"Regexp\">\n            <property name=\"format\" value=\"System\\.exit\"/>\n            <property name=\"illegalPattern\" value=\"true\"/>\n        </module>\n        <module name=\"Regexp\">\n            <property name=\"format\" value=\"\\.printStacktrace\"/>\n            <property name=\"illegalPattern\" value=\"true\"/>\n        </module>\n\n        <!--module name=\"FinalParameters\"/-->\n        <!--module name=\"GenericIllegalRegexp\">\n            <property name=\"format\" value=\"\\s+$\"/>\n            <property name=\"message\" value=\"Line has trailing spaces.\"/>\n        </module-->\n        <!--module name=\"TodoComment\"/-->\n        <module name=\"UpperEll\"/>\n\n        <!--\n\t<module name=\"BooleanExpressionComplexity\"/>\n        -->\n    </module>\n<!--\n    <module name=\"SuppressionFilter\">\n        <property name=\"file\" value=\"suppressions.xml\"/>\n        <property name=\"optional\" value=\"false\"/>\n    </module>\n-->\n</module>\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "header.txt",
          "type": "blob",
          "size": 0.5517578125,
          "content": "Copyright (c) 2013-2024 Nikita Koksharov\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n"
        },
        {
          "name": "pom.xml",
          "type": "blob",
          "size": 16.779296875,
          "content": "<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n\n    <groupId>org.redisson</groupId>\n    <artifactId>redisson-parent</artifactId>\n    <version>3.42.1-SNAPSHOT</version>\n    <packaging>pom</packaging>\n\n    <name>Redisson</name>\n    <description>Easy Redis Java client and Real-Time Data Platform. Valkey compatible. Sync/Async/RxJava3/Reactive API. Client side caching. Over 50 Redis based Java objects and services: JCache API (JSR-107), Hibernate Cache, MyBatis Cache, Quarkus Cache, Micronaut Cache, Apache Tomcat Session, Spring Session, Micronaut Session, Hibernate, Spring Boot Starter, Spring Cache, Spring Session, Spring Transaction Manager, Spring Cloud Stream, Spring Data Redis, JSON, Set, Multimap, Geo, SortedSet, Map, List, Queue, Deque, Semaphore, ReadWriteLock, FairLock, Lock, AtomicLong, AtomicDouble, LongAdder, DoubleAdder, Map Reduce, Bloom filter, Scheduler, RPC</description>\n    <inceptionYear>2014</inceptionYear>\n    <url>http://redisson.org</url>\n\n    <organization>\n       <name>Redisson</name>\n       <url>https://redisson.pro/</url>\n    </organization>\n\n    <properties>\n        <main.basedir>${project.parent.basedir}</main.basedir>\n        <maven.test.skip>true</maven.test.skip>\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\n        <maven.compiler.source>1.8</maven.compiler.source>\n        <maven.compiler.target>1.8</maven.compiler.target>\n        <maven.compiler.release>8</maven.compiler.release>\n        <maven.compiler.testRelease>21</maven.compiler.testRelease>\n        <maven.compiler.testSource>21</maven.compiler.testSource>\n        <maven.compiler.testTarget>21</maven.compiler.testTarget>\n        <argLine />\n    </properties>\n\n    <scm>\n        <url>scm:git:git@github.com:redisson/redisson.git</url>\n        <connection>scm:git:git@github.com:redisson/redisson.git</connection>\n        <developerConnection>scm:git:git@github.com:redisson/redisson.git</developerConnection>\n        <tag>HEAD</tag>\n    </scm>\n\n    <licenses>\n        <license>\n            <name>Apache v2</name>\n            <url>http://www.apache.org/licenses/LICENSE-2.0.html</url>\n            <distribution>manual</distribution>\n        </license>\n    </licenses>\n\n    <developers>\n        <developer>\n            <id>mrniko</id>\n            <name>Nikita Koksharov</name>\n            <roles>\n                <role>Founder</role>\n                <role>Developer</role>\n            </roles>\n            <timezone>+4</timezone>\n        </developer>\n    </developers>\n\n    <modules>\n        <module>redisson</module>\n        <module>redisson-all</module>\n        <module>redisson-tomcat</module>\n        <module>redisson-spring-data</module>\n        <module>redisson-spring-boot-starter</module>\n        <module>redisson-mybatis</module>\n        <module>redisson-hibernate</module>\n        <module>redisson-helidon</module>\n        <module>redisson-quarkus</module>\n        <module>redisson-micronaut</module>\n    </modules>\n\n    <profiles>\n        <profile>\n            <id>release</id>\n            <build>\n                <plugins>\n                    <plugin>\n                        <groupId>org.apache.maven.plugins</groupId>\n                        <artifactId>maven-source-plugin</artifactId>\n                        <version>3.3.1</version>\n                        <executions>\n                          <execution>\n                            <id>attach-sources</id>\n                            <goals>\n                              <goal>jar-no-fork</goal>\n                            </goals>\n                            <configuration>\n                              <archive>\n                                <manifest>\n                                  <addDefaultImplementationEntries>true</addDefaultImplementationEntries>\n                                  <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>\n                                </manifest>\n                                <manifestEntries>\n                                  <Implementation-Build>${implementation.build}</Implementation-Build>\n                                  <Implementation-Build-Date>${maven.build.timestamp}</Implementation-Build-Date>\n                                  <X-Compile-Source-JDK>${javac.src.version}</X-Compile-Source-JDK>\n                                  <X-Compile-Target-JDK>${javac.target.version}</X-Compile-Target-JDK>\n                                </manifestEntries>\n                              </archive>\n                            </configuration>\n                          </execution>\n                        </executions>\n                    </plugin>\n                    <plugin>\n                        <groupId>org.apache.maven.plugins</groupId>\n                        <artifactId>maven-gpg-plugin</artifactId>\n                        <version>3.2.5</version>\n                        <executions>\n                            <execution>\n                                <id>sign-artifacts</id>\n                                <phase>verify</phase>\n                                <goals>\n                                    <goal>sign</goal>\n                                </goals>\n                            </execution>\n                        </executions>\n                    </plugin>\n                    <plugin>\n                        <groupId>net.ju-n.maven.plugins</groupId>\n                        <artifactId>checksum-maven-plugin</artifactId>\n                        <version>1.4</version>\n                    </plugin>\n                </plugins>\n            </build>\n        </profile>\n        <profile>\n            <id>unit-test</id>\n            <properties>\n                <maven.test.skip>false</maven.test.skip>\n            </properties>\n        </profile>\n    </profiles>\n\n    <dependencyManagement>\n        <dependencies>\n            <dependency>\n                <groupId>org.assertj</groupId>\n                <artifactId>assertj-core</artifactId>\n                <version>3.26.3</version>\n                <scope>test</scope>\n            </dependency>\n            <dependency>\n                <groupId>org.awaitility</groupId>\n                <artifactId>awaitility</artifactId>\n                <version>4.2.2</version>\n                <scope>test</scope>\n            </dependency>\n            <dependency>\n               <groupId>com.github.hazendaz.jmockit</groupId>\n               <artifactId>jmockit</artifactId>\n               <version>1.54.0</version>\n               <scope>test</scope>\n            </dependency>\n            <dependency>\n               <groupId>org.jooq</groupId>\n               <artifactId>joor</artifactId>\n               <version>0.9.15</version>\n               <scope>test</scope>\n            </dependency>\n            <dependency>\n                <groupId>org.junit.jupiter</groupId>\n                <artifactId>junit-jupiter-api</artifactId>\n                <version>5.11.4</version>\n                <scope>test</scope>\n            </dependency>\n            <dependency>\n                <groupId>org.junit.jupiter</groupId>\n                <artifactId>junit-jupiter-engine</artifactId>\n                <version>5.11.4</version>\n                <scope>test</scope>\n            </dependency>\n            <dependency>\n                <groupId>org.junit.jupiter</groupId>\n                <artifactId>junit-jupiter-params</artifactId>\n                <version>5.11.4</version>\n                <scope>test</scope>\n            </dependency>\n            <dependency> \n                <groupId>org.junit.platform</groupId> \n                <artifactId>junit-platform-runner</artifactId> \n                <version>1.11.4</version>\n                <scope>test</scope>\n            </dependency>\n            <dependency>\n                <groupId>ch.qos.logback</groupId>\n                <artifactId>logback-classic</artifactId>\n                <version>1.5.16</version>\n                <scope>test</scope>\n            </dependency>\n\n            <dependency>\n                <groupId>org.testcontainers</groupId>\n                <artifactId>testcontainers-bom</artifactId>\n                <version>1.20.3</version>\n                <type>pom</type>\n                <scope>import</scope>\n            </dependency>\n            <dependency>\n                <groupId>io.netty</groupId>\n                <artifactId>netty-bom</artifactId>\n                <version>4.1.116.Final</version>\n                <type>pom</type>\n                <scope>import</scope>\n            </dependency>\n            <dependency>\n                <groupId>com.fasterxml.jackson</groupId>\n                <artifactId>jackson-bom</artifactId>\n                <version>2.18.1</version>\n                <type>pom</type>\n                <scope>import</scope>\n            </dependency>\n        </dependencies>\n    </dependencyManagement>\n\n  <build>\n      <directory>target</directory>\n      <outputDirectory>${basedir}/target/classes</outputDirectory>\n      <finalName>${project.artifactId}-${project.version}</finalName>\n      <testOutputDirectory>${basedir}/target/test-classes</testOutputDirectory>\n      <sourceDirectory>${basedir}/src/main/java</sourceDirectory>\n      <testSourceDirectory>${basedir}/src/test/java</testSourceDirectory>\n      \n      <plugins>\n          <plugin>\n         \t<groupId>org.sonatype.plugins</groupId>\n         \t<artifactId>nexus-staging-maven-plugin</artifactId>\n         \t<version>1.7.0</version>\n         \t<extensions>true</extensions>\n                <configuration>\n                    <serverId>ossrepo</serverId>\n                    <nexusUrl>https://oss.sonatype.org/</nexusUrl>\n                    <autoReleaseAfterClose>true</autoReleaseAfterClose>\n                    <stagingProgressTimeoutMinutes>15</stagingProgressTimeoutMinutes>\n \t\t</configuration>\n          </plugin>\n\n          <plugin>\n            <groupId>org.apache.maven.plugins</groupId>\n            <artifactId>maven-release-plugin</artifactId>\n            <version>3.1.1</version>\n            <configuration>\n                <autoVersionSubmodules>true</autoVersionSubmodules>\n                <useReleaseProfile>true</useReleaseProfile>\n                <releaseProfiles>release</releaseProfiles>\n                <goals>deploy</goals>\n            </configuration>\n          </plugin>\n\n          <plugin>\n              <groupId>org.apache.maven.plugins</groupId>\n              <artifactId>maven-enforcer-plugin</artifactId>\n              <version>3.5.0</version>\n              <executions>\n                  <execution>\n                      <id>enforce-maven</id>\n                      <goals>\n                          <goal>enforce</goal>\n                      </goals>\n                      <configuration>\n                          <rules>\n                              <requireMavenVersion>\n                                  <version>3.0.5</version>\n                              </requireMavenVersion>\n                          </rules>\n                      </configuration>\n                  </execution>\n              </executions>\n          </plugin>\n      </plugins>\n\n      <pluginManagement>\n        <plugins>\n\n            <plugin>\n                <groupId>com.mycila</groupId>\n                <artifactId>license-maven-plugin</artifactId>\n                <version>4.5</version>\n                <configuration>\n                    <basedir>${basedir}</basedir>\n                    <header>${main.basedir}/header.txt</header>\n                    <quiet>false</quiet>\n                    <failIfMissing>true</failIfMissing>\n                    <aggregate>false</aggregate>\n                    <includes>\n                        <include>src/main/java/org/redisson/</include>\n                    </includes>\n                    <excludes>\n                        <exclude>target/**</exclude>\n                    </excludes>\n                    <useDefaultExcludes>true</useDefaultExcludes>\n                    <mapping>\n                        <java>JAVADOC_STYLE</java>\n                        <xsd>XML_STYLE</xsd>\n                    </mapping>\n                    <strictCheck>true</strictCheck>\n                    <useDefaultMapping>true</useDefaultMapping>\n                    <encoding>UTF-8</encoding>\n                </configuration>\n                <executions>\n                    <execution>\n                        <goals>\n                            <goal>check</goal>\n                        </goals>\n                    </execution>\n                </executions>\n            </plugin>\n\n\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-checkstyle-plugin</artifactId>\n                <version>3.5.0</version>\n                <executions>\n                    <execution>\n                        <phase>verify</phase>\n                        <goals>\n                            <goal>check</goal>\n                        </goals>\n                    </execution>\n                </executions>\n                <configuration>\n                    <consoleOutput>true</consoleOutput>\n                    <configLocation>/checkstyle.xml</configLocation>\n                    <suppressionsLocation>/checkstyle-suppressions.xml</suppressionsLocation>\n                </configuration>\n                <dependencies>\n                    <dependency>\n                       <groupId>com.puppycrawl.tools</groupId>\n                       <artifactId>checkstyle</artifactId>\n                       <version>10.18.0</version>\n                  </dependency>\n                </dependencies>\n            </plugin>\n\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-jar-plugin</artifactId>\n                <version>3.4.1</version>\n                <configuration>\n                    <archive>\n                        <manifest>\n                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>\n                            <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>\n                        </manifest>\n                        <manifestEntries>\n                            <Build-Time>${maven.build.timestamp}</Build-Time>\n                        </manifestEntries>\n                    </archive>\n                </configuration>\n            </plugin>\n\n<!--\n            <plugin>\n                <groupId>com.github.spotbugs</groupId>\n                <artifactId>spotbugs-maven-plugin</artifactId>\n                <version>3.1.7</version>\n                <configuration>\n                    <effort>Max</effort>\n                    <threshold>High</threshold>\n                    <failOnError>true</failOnError>\n                    <plugins>\n                        <plugin>\n                            <groupId>com.h3xstream.findsecbugs</groupId>\n                            <artifactId>findsecbugs-plugin</artifactId>\n                            <version>1.8.0</version>\n                        </plugin>\n                    </plugins>\n                </configuration>\n                <executions>\n                    <execution>\n                        <goals>\n                            <goal>check</goal>\n                        </goals>\n                        <phase>validate</phase>\n                    </execution>\n                </executions>\n            </plugin>\n\n            <plugin>\n                <groupId>org.owasp</groupId>\n                <artifactId>dependency-check-maven</artifactId>\n                <version>3.3.2</version>\n                <configuration>\n                    <cveValidForHours>12</cveValidForHours>\n                    <failBuildOnCVSS>5</failBuildOnCVSS>\n                </configuration>\n                <executions>\n                    <execution>\n                        <goals>\n                            <goal>check</goal>\n                        </goals>\n                    </execution>\n                </executions>\n            </plugin>\n-->\n            <plugin>\n         \t<groupId>org.apache.maven.plugins</groupId>\n         \t<artifactId>maven-javadoc-plugin</artifactId>\n         \t<version>3.10.1</version>\n         \t<executions>\n                   <execution>\n                     <id>attach-javadocs</id>\n                     <goals>\n                         <goal>jar</goal>\n                     </goals>\n                   </execution>\n         \t</executions>\n                <configuration>\n                    <level>public</level>\n                    <doclint>none</doclint>\n                    <quiet>true</quiet>\n                </configuration>\n            </plugin>\n\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-surefire-plugin</artifactId>\n                <version>3.5.1</version>\n            </plugin>\n\n        </plugins>\n      </pluginManagement>\n  </build>\n\n</project>\n"
        },
        {
          "name": "redisson-all",
          "type": "tree",
          "content": null
        },
        {
          "name": "redisson-helidon",
          "type": "tree",
          "content": null
        },
        {
          "name": "redisson-hibernate",
          "type": "tree",
          "content": null
        },
        {
          "name": "redisson-micronaut",
          "type": "tree",
          "content": null
        },
        {
          "name": "redisson-mybatis",
          "type": "tree",
          "content": null
        },
        {
          "name": "redisson-quarkus",
          "type": "tree",
          "content": null
        },
        {
          "name": "redisson-spring-boot-starter",
          "type": "tree",
          "content": null
        },
        {
          "name": "redisson-spring-data",
          "type": "tree",
          "content": null
        },
        {
          "name": "redisson-tomcat",
          "type": "tree",
          "content": null
        },
        {
          "name": "redisson",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}