{
  "metadata": {
    "timestamp": 1736708914687,
    "page": 164,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "apple/pkl",
      "stars": 10460,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".circleci",
          "type": "tree",
          "content": null
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.2080078125,
          "content": "root = true\n\n[*]\ncharset = utf-8\nindent_style = space\nindent_size = 2\n# don't trim whitespace within (say) a Pkl multiline string\ntrim_trailing_whitespace = false\ninsert_final_newline = true\nmax_line_length = 100\n"
        },
        {
          "name": ".git-blame-ignore-revs",
          "type": "blob",
          "size": 0.0654296875,
          "content": "# Auto-format Kotlin code\n816cd483c8adf4c04e14236c173a1dc6bd2579ea\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.28125,
          "content": "# linguist-generated would suppress files in diffs\n**/src/test/files/** linguist-vendored\n\n/docs/** linguist-documentation\n\n*.pcf linguist-language=Pkl\nPklProject linguist-language=Pkl\n\n* text eol=lf\n*.bat text eol=crlf\n\n*.gif binary\n*.jar binary\n*.woff2 binary\n*.pem binary\n*.png binary\n"
        },
        {
          "name": ".githooks",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.26953125,
          "content": "# macOS\n.DS_STORE\n\n# Gradle\n.gradle/\nbuild/\ngenerated/\n\n# IntelliJ\n.idea/\n!.idea/icon.svg\n!.idea/codestyles/\n!.idea/inspectionProfiles/\n!.idea/runConfigurations/\n!.idea/scopes/\n!.idea/vcs.xml\n\n.vscode/\n\n.pkl-lsp/\n\n# :pkl-core:makeIntelliJAntlrPluginHappy\ngen/\nPklLexer.tokens\n"
        },
        {
          "name": ".idea",
          "type": "tree",
          "content": null
        },
        {
          "name": ".java-version",
          "type": "blob",
          "size": 0.0048828125,
          "content": "17.0\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.169921875,
          "content": "## Code of Conduct\n\n### Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our\nproject and our community a harassment-free experience for everyone,\nregardless of age, body size, disability, ethnicity, sex\ncharacteristics, gender identity and expression, level of experience,\neducation, socio-economic status, nationality, personal appearance,\nrace, religion, or sexual identity and orientation.\n\n### Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual\nattention or advances\n* Trolling, insulting/derogatory comments, and personal or political\nattacks\n* Public or private harassment\n* Publishing others’ private information, such as a physical or\nelectronic address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\nprofessional setting\n\n### Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of\nacceptable behavior and are expected to take appropriate and fair\ncorrective action in response to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit,\nor reject comments, commits, code, wiki edits, issues, and other\ncontributions that are not aligned to this Code of Conduct, or to ban\ntemporarily or permanently any contributor for other behaviors that they\ndeem inappropriate, threatening, offensive, or harmful.\n\n### Scope\n\nThis Code of Conduct applies within all project spaces, and it also\napplies when an individual is representing the project or its community\nin public spaces. Examples of representing a project or community\ninclude using an official project e-mail address, posting via an\nofficial social media account, or acting as an appointed representative\nat an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n### Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may\nbe reported by contacting the open source team at\nopensource-conduct@group.apple.com. All complaints will be reviewed and\ninvestigated and will result in a response that is deemed necessary and\nappropriate to the circumstances. The project team is obligated to\nmaintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted\nseparately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in\ngood faith may face temporary or permanent repercussions as determined\nby other members of the project’s leadership.\n\n### Attribution\n\nThis Code of Conduct is adapted from the\n[Contributor Covenant](https://www.contributor-covenant.org), version 1.4, \navailable at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html\n"
        },
        {
          "name": "CONTRIBUTING.adoc",
          "type": "blob",
          "size": 2.283203125,
          "content": ":uri-github-discussion: https://github.com/apple/pkl/discussions\n:uri-github-issue-pkl: https://github.com/apple/pkl/issues/new\n:uri-seven-rules: https://cbea.ms/git-commit/#seven-rules\n\n= Pkl Contributor's Guide\n\nWelcome to the Pkl community, and thank you for contributing!\nThis guide explains how to get involved.\n\n* <<Licensing>>\n* <<Issue Tracking>>\n* <<Pull Requests>>\n\n== Licensing\n\nPkl is released under the Apache 2.0 license.\nThis is why we require that, by submitting a pull request, you acknowledge that you have the right to license your contribution to Apple and the community, and agree that your contribution is licensed under the Apache 2.0 license.\n\n== Issue Tracking\n\nTo file a bug or feature request, use {uri-github-issue-pkl}[GitHub].\nBe sure to include the following information:\n\n* Context\n** What are/were you trying to achieve?\n** What's the impact of this bug/feature?\n\nFor bug reports, additionally include the following information:\n\n* The output of `pkl --version`.\n* The complete error message.\n* The simplest possible steps to reproduce.\n\n== Pull Requests\n\nWhen preparing a pull request, follow this checklist:\n\n* Imitate the conventions of surrounding code.\n* Format code with `./gradlew spotlessApply` (otherwise the build will fail).\n* Verify that both the JVM build (`./gradlew build`) and native build (`./gradlew buildNative`) succeed.\n* Follow the {uri-seven-rules}[seven rules] of great Git commit messages:\n** Separate subject from body with a blank line.\n** Limit the subject line to 50 characters.footnote:not-enforced[This rule is not enforced in the Pkl project.]\n** Capitalize the subject line.\n** Do not end the subject line with a period.\n** Use the imperative mood in the subject line.\n** Wrap the body at 72 characters.footnote:not-enforced[]\n** Use the body to explain what and why vs. how.\n\nIMPORTANT: If you plan to make substantial changes or add new features, \nwe encourage you to first discuss them with the wider Pkl developer community.\nYou can do this by filing a {uri-github-issue-pkl}[GitHub Issue] or by starting\n{uri-github-discussion}[GitHub Discussion].\nThis will save time and increases the chance of your pull request being accepted.\n\n== Maintainers\n\nThe project’s maintainers (those with write access to the upstream repository) are listed in link:MAINTAINERS.adoc[].\n"
        },
        {
          "name": "DEVELOPMENT.adoc",
          "type": "blob",
          "size": 6.0810546875,
          "content": "= Development\n:uri-gng: https://gng.dsun.org\n:uri-jenv: https://www.jenv.be\n:uri-intellij: https://www.jetbrains.com/idea/download/\n:uri-native-prerequisites-linux: https://www.graalvm.org/latest/getting-started/linux/#prerequisites-for-native-image-on-linux\n:uri-native-prerequisites-windows: https://www.graalvm.org/latest/getting-started/windows/#prerequisites-for-native-image-on-windows\n\n== Setup\n\n. (mandatory) Install a JDK (any version between 17 - 21).\n. (recommended) Install {uri-intellij}[IntelliJ IDEA] +\nTo import the project into IntelliJ, go to File->Open and select the project's root directory.\nIf the project is opened but not imported, look for a popup in the lower right corner\nand click its \"Import Gradle Project\" link.\n. (recommended) Install {uri-gng}[gng] +\n_gng_ enables to run Gradle commands with `gw` (instead of `./gradlew`) from any subdirectory.\n. (recommended) Set up Git ignore-revs +\n`git config blame.ignoreRevsFile .git-blame-ignore-revs`\n. (recommended) Install {uri-jenv}[jenv] and plugins +\n_jenv_ use specific JDK versions in certain subdirectories. _Pkl_ comes with a `.java-version` file specifying JDK 17. +\nEnable _jenv_ plugins for better handling by `gradle`:\n+\n[source,shell]\n----\njenv enable-plugin gradle\njenv enable-plugin export\n----\n. (optional) If you've named the original apple/pkl git repository something other than `origin`, set env var `PKL_ORIGINAL_REMOTE_NAME` to that name in your `.bashrc`, `.zshrc`, `config.fish` or however you manage your local environment.\n+\nThis will allow spotless to pick the correct starting branch when formatting source code files.\nOtherwise, you might see that _every_ file has its copyright year updated.\n\n=== Additional Linux Setup\n. (optional) To build the native executable (`./gradlew buildNative`),\ninstall {uri-native-prerequisites-linux}[Prerequisites For Native Image on Linux].\n\n=== Additional Windows Setup\n. (optional) Go to `System->For developers` and enable `Developer Mode`.\nOtherwise, some tests may fail due to insufficient file system privileges.\n. (optional) To build the native executable (`./gradlew buildNative`), \ninstall {uri-native-prerequisites-windows}[Prerequisites For Native Image on Windows].\n\n== Common Build Commands\n\n[source,shell]\n----\ngw clean\ngw test          # run all tests except native executable tests\ngw testNative    # run native executable tests\ngw spotlessApply # fix code formatting\ngw build         # build everything except native executables\ngw buildNative   # build native executable(s) for current platform\n                 # (Alpine executable is only built if ~/staticdeps/bin/musl-gcc exists)\n\npkl-cli/build/executable/jpkl                   # run Java executable\npkl-cli/build/executable/pkl-macos-aarch64      # run Mac executable\npkl-cli/build/executable/pkl-macos-amd64        # run Intel Mac executable\npkl-cli/build/executable/pkl-linux-amd64        # run Linux executable\npkl-cli/build/executable/pkl-alpine-linux-amd64 # run Alpine Linux executable \npkl-cli/build/executable/pkl-windows-amd64.exe  # run Windows executable \n----\n\n== Update Gradle\n\n. Go to https://gradle.org/release-checksums/ and copy the checksum for the new Gradle version\n. Run the following command *twice* (until it prints UP-TO-DATE):\n+\n[source,shell]\n----\ngw wrapper --gradle-version [version] --gradle-distribution-sha256-sum [sha]\n----\n. Commit the updated wrapper files\n\n== Update Dependencies\n\n. (optional) Update _gradle/libs.version.toml_\nbased on version information from https://search.maven.org, https://plugins.gradle.org, and GitHub repos\n. Run `gw updateDependencyLocks`\n. Validate changes with `gw build buildNative`\n. Review and commit the updated dependency lock files\n\n== Code Generation\n\n* Truffle code generation is performed by Truffle's annotation processor, which runs as part of task `:pkl-core:compileJava`\n** Output dir is `generated/truffle/`\n* ANTLR code generation is performed by task `:pkl-core:generateGrammarSource`\n** Output dir is `generated/antlr/`\n\n== Remote JVM Debugging\n\nTo enable remote JVM debugging when running Gradle tasks (e.g. test), add the flag `-Djvmdebug=true`.\nThis will listen on port 5005.\n\nExample: `./gradlew test -Djvmdebug=true`\n\n== Resources\nFor automated build setup examples see our https://github.com/apple/pkl/blob/main/.circleci/[CircleCI] jobs like our https://github.com/apple/pkl/blob/main/.circleci/jobs/BuildNativeJob.pkl[BuildNativeJob.pkl], where we build Pkl automatically.\n\n=== ANTLR\n\n* https://github.com/antlr/antlr4/blob/master/doc/index.md[Documentation]\n* https://groups.google.com/forum/#!forum/antlr-discussion[Forums]\n* https://github.com/mobileink/lab.clj.antlr/tree/main/doc[Some third-party docs]\n\n=== Truffle\n\n* http://ssw.jku.at/Research/Projects/JVM/Truffle.html[Homepage]\n* https://github.com/graalvm/truffle[GitHub]\n* http://lafo.ssw.uni-linz.ac.at/javadoc/truffle/latest/[Javadoc]\n* http://mail.openjdk.java.net/pipermail/graal-dev/[Mailing List]\n* https://medium.com/@octskyward/graal-truffle-134d8f28fb69#.2db370y2g[Graal & Truffle (Article)]\n* https://comserv.cs.ut.ee/home/files/Pool_ComputerScience_2016.pdf?study=ATILoputoo&reference=6319668E7151D556131810BC3F4A627D7FEF5F3B[Truffle Overview (see chapter 1)]\n* https://gist.github.com/smarr/d1f8f2101b5cc8e14e12[Truffle: Languages and Material]\n* https://github.com/smarr/truffle-notes[Truffle Notes]\n* https://wiki.openjdk.java.net/display/Graal/Truffle+FAQ+and+Guidelines[Truffle FAQ]\n\n=== Other Config Languages\n\n* https://github.com/google/jsonnet[Jsonnet]\n* https://github.com/dhall-lang/dhall-lang[Dhall]\n* https://cuelang.org[CUE]\n* https://nickel-lang.org[Nickel]\n* https://kcl-lang.io[KCL]\n* https://github.com/google/skylark[Skylark]\n* https://github.com/typesafehub/config[Typesafe Config]\n* https://www.flabbergast.org[Flabbergast]\n(defunct, http://artefacts.masella.name/2015-srecon-andre_masella.pdf[paper])\n* https://medium.com/@MrJamesFisher/nix-by-example-a0063a1a4c55[Nix by example: The Nix expression language]\n* http://lethalman.blogspot.co.at/2014/07/nix-pill-4-basics-of-language.html[Nix pill 4: the basics of the language]\n* https://docs.puppetlabs.com/puppet/latest/reference/lang_summary.html[Puppet Configuration Language]\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 11.091796875,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "MAINTAINERS.adoc",
          "type": "blob",
          "size": 0.3173828125,
          "content": "= MAINTAINERS\n\nThis page lists all active Maintainers of this repository.\n\nSee link:CONTRIBUTING.adoc[] for general contribution guidelines.\n\n== Maintainers (in alphabetical order)\n\n* https://github.com/bioball[Daniel Chao]\n* https://github.com/stackoverflow[Islon Scherer]\n* https://github.com/holzensp[Philip Hölzenspies]\n"
        },
        {
          "name": "NOTICE.txt",
          "type": "blob",
          "size": 8.7421875,
          "content": "Copyright © 2024-2025 Apple Inc. and the Pkl project authors\n\n\nPortions of this software were originally based on 'SnakeYAML' developed by Andrey Somov.\n(https://bitbucket.org/asomov/snakeyaml-engine/)\n\nThe Apache License\nCopyright © 2008-2010 Andrey Somov\nLicensed under the Apache License, Version 2.0 (the “License”); you may not use this file except in compliance with the License.You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software distributed under the License is distributed on an “AS IS” BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.\n\nPortions of this software were originally based on 'jline3' developed by the JLine authors.\n(https://github.com/jline/jline3)\n\nCopyright (c) 2002-2023, the original author(s)\n\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following\nconditions are met:\n\nRedistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n\nRedistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n\nNeither the name of JLine nor the names of its contributors may be used to endorse or promote products derived from this\nsoftware without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\nLIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED\nOF THE POSSIBILITY OF SUCH DAMAGE.\n\nPortions of this software were originally based on 'minimal-json' developed by EclipseSource.\n(https://github.com/ralfstx/minimal-json)\n\nCopyright (c) 2015, 2016 EclipseSource.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nPortions of this software were originally based on 'gson' developed by the Google Inc.\n(https://github.com/google/gson)\n\nThe Apache License\nCopyright © 2008 Google Inc\nLicensed under the Apache License, Version 2.0 (the “License”); you may not use this file except in compliance with the License.You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software distributed under the License is distributed on an “AS IS” BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.\n\nPortions of this software were originally based on 'guava' developed by Google Inc.\n(https://github.com/google/guava)\n\nThe Apache License\nCopyright © 2009 The Guava Authors\nLicensed under the Apache License, Version 2.0 (the “License”); you may not use this file except in compliance with the License.You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software distributed under the License is distributed on an “AS IS” BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.\n\nPortions of this software were originally based on 'java-string-similarity' developed by Thibault Debatty.\n(https://github.com/tdebatty/java-string-similarity)\n\nCopyright 2015 Thibault Debatty\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nPortions of this software were originally based on 'xerxes2-j' developed by the Apache Software Foundation.\n(https://github.com/apache/xerces2-j)\n\nThe Apache License\nCopyright © 1999-2018 The Apache Software Foundation\nLicensed under the Apache License, Version 2.0 (the “License”); you may not use this file except in compliance with the License.You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software distributed under the License is distributed on an “AS IS” BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.\n\nPortions of this software were originally based on 'scroll-into-view-if-needed' developed by Cody Olsen.\n(https://github.com/scroll-into-view/scroll-into-view-if-needed)\n\n\nCopyright (c) 2023 Cody Olsen\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nThis product ships with third party licenses that may be distributed under a different license.\nThis information is detailed in THIRD-PARTY-NOTICES.txt.\n\nPortions of this software includes code from \"Gradle\" by Gradle, Inc.\n\nCopyright 2015 the original author or authors.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n     https://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n"
        },
        {
          "name": "README.adoc",
          "type": "blob",
          "size": 3.904296875,
          "content": "= image:.idea/icon.svg[Pkl,30] Pkl \n\n:uri-homepage: https://pkl-lang.org\n:uri-docs: {uri-homepage}/main/current\n:uri-docs-introduction: {uri-docs}/introduction\n:uri-docs-release-notes: {uri-docs}/release-notes\n:uri-docs-language: {uri-docs}/language\n:uri-docs-tools: {uri-docs}/tools\n:uri-github-issue: https://github.com/apple/pkl/issues\n:uri-github-discussions: https://github.com/apple/pkl/discussions\n:uri-pkl-examples: https://pkl-lang.org/main/current/examples.html\n:uri-installation: https://pkl-lang.org/main/current/pkl-cli/index.html#installation\n:uri-lang-reference: https://pkl-lang.org/main/current/language-reference/index.html\n:uri-ci-artifacts: https://s01.oss.sonatype.org/content/groups/public/org/pkl-lang/\n:uri-ci-pipeline: https://app.circleci.com/pipelines/github/apple/pkl\n\nA configuration as code language with rich validation and tooling.\n\n== Quick Links\n\n* {uri-installation}[Installation]\n* {uri-lang-reference}[Language Reference]\n\n== Documentation\n\n* {uri-homepage}[Home Page]\n** {uri-docs-introduction}[Introduction]\n** {uri-docs-language}[Language]\n** {uri-docs-tools}[Tools]\n** {uri-pkl-examples}[Examples]\n** {uri-docs-release-notes}[Release Notes]\n\n== Community\n\nWe'd love to hear from you!\n\n* Create an {uri-github-issue}[issue]\n* Ask a question on {uri-github-discussions}[GitHub Discussions]\n\n== Development image:https://circleci.com/gh/apple/pkl.svg?style=svg[\"Apple\", link=\"https://app.circleci.com/pipelines/github/apple/pkl\"]\n* link:CONTRIBUTING.adoc[] for tips on pull requests and filing issues\n* link:DEVELOPMENT.adoc[] for build instructions\n* {uri-ci-artifacts}[Sonatype Repository] for the artifacts/binaries built by our {uri-ci-pipeline}[CI pipelines] (and those of our other tools and packages repositories).\n\n== Pkl GitHub Repositories\n\n[%autowidth]\n|===\n|Name |Description\n\n|`apple/pkl`\n|A configuration as code language with rich validation and tooling.\n\n|https://github.com/apple/pkl-evolution[`apple/pkl-evolution`]\n|Suggested Pkl Improvements, Changes, or Enhancements (SPICEs)\n\n|https://github.com/apple/pkl-go[`apple/pkl-go`]\n|Pkl bindings for the Go programming language\n\n|https://github.com/apple/pkl-go-examples[`apple/pkl-go-examples`]\n|Examples for using Pkl within Go applications\n\n|https://github.com/apple/pkl-intellij[`apple/pkl-intellij`]\n|JetBrains editor plugins providing Pkl language support\n\n|https://github.com/apple/pkl-jvm-examples[`apple/pkl-jvm-examples`]\n|Examples for using Pkl within JVM applications\n\n|https://github.com/apple/pkl-k8s[`apple/pkl-k8s`]\n|Templates for using Pkl with Kubernetes\n\n|https://github.com/apple/pkl-k8s-examples[`apple/pkl-k8s-examples`]\n|Examples for using Pkl with Kubernetes\n\n|https://github.com/apple/pkl-lang.org[`apple/pkl-lang.org`]\n|The pkl-lang.org website\n\n|https://github.com/apple/pkl-lsp[`apple/pkl-lsp`]\n| Language server for Pkl, implementing the server-side of the Language Server Protocol\n\n|https://github.com/apple/pkl-neovim[`apple/pkl-neovim`]\n|Pkl language support for Neovim\n\n|https://github.com/apple/pkl-package-docs[`apple/pkl-package-docs`]\n|Documentation for Pkl packages\n\n|https://github.com/apple/pkl-pantry[`apple/pkl-pantry`]\n|Shared Pkl packages\n\n|https://github.com/apple/pkl-project-commons[`apple/pkl-project-commons`]\n|Utility libraries for Pkl\n\n|https://github.com/apple/pkl-spring[`apple/pkl-spring`]\n|Spring Boot extension for configuring Boot apps with Pkl\n\n|https://github.com/apple/pkl-swift[`apple/pkl-swift`]\n|Pkl bindings for the Swift programming language\n\n|https://github.com/apple/pkl-swift-examples[`apple/pkl-swift-examples`]\n|Examples for using Pkl within Swift applications\n\n|https://github.com/apple/pkl-vscode[`apple/pkl-vscode`]\n|Pkl language support for VS Code\n\n|https://github.com/apple/pkl.tmbundle[`apple/pkl.tmbundle`]\n|TextMate bundle for Pkl\n\n|https://github.com/apple/rules_pkl[`apple/rules_pkl`]\n| Bazel build rules for Pkl\n\n|https://github.com/apple/tree-sitter-pkl[`apple/tree-sitter-pkl`]\n|Tree-sitter parser for Pkl\n|===\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.724609375,
          "content": "# Security\n\nFor the protection of our community, the Pkl team does not disclose, discuss, or confirm security issues until our investigation is complete and any necessary updates are generally available.\n\n## Reporting a security vulnerability\n\nIf you have discovered a security vulnerability within the Pkl project, please report it to us.\nWe welcome reports from everyone, including security researchers, developers, and users.\n\nSecurity vulnerabilities may be reported on the [Report a vulnerability](https://security.apple.com/submit) form.\nWhen submitting a vulnerability, select \"Apple Devices and Software\" as the affected platform, and \"Open Source\" as the affected area.\n\nFor more information, see https://pkl-lang.org/security.html.\n"
        },
        {
          "name": "THIRD-PARTY-NOTICES.txt",
          "type": "blob",
          "size": 33.2939453125,
          "content": "Pkl ships with third-party libraries that may be distributed under a different license than\nPkl's own license.\nThese libraries and their licenses are listed below:\n\n1) Clikt (https://github.com/ajalt/clikt)\nPOM License: Apache License, Version 2.0 - https://www.apache.org/licenses/LICENSE-2.0\n\nThe Apache License\nCopyright © 2018 AJ Alt\nLicensed under the Apache License, Version 2.0 (the “License”); you may not use this file except in compliance with the License.You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software distributed under the License is distributed on an “AS IS” BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.\n\n2) JavaPoet (http://github.com/square/javapoet/)\nPOM License: Apache License, Version 2.0 - https://www.apache.org/licenses/LICENSE-2.0\n\nThe Apache License\nCopyright © 2015 Square, Inc.\nLicensed under the Apache License, Version 2.0 (the “License”); you may not use this file except in compliance with the License.You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software distributed under the License is distributed on an “AS IS” BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.\n\n3) KotlinPoet (https://github.com/square/kotlinpoet)\nPOM License: Apache License, Version 2.0 - https://www.apache.org/licenses/LICENSE-2.0\n\nThe Apache License\nCopyright © 2017 Square, Inc.\nLicensed under the Apache License, Version 2.0 (the “License”); you may not use this file except in compliance with the License.You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software distributed under the License is distributed on an “AS IS” BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.\n\n4) ANTLR 4 Runtime (Optimized) (http://tunnelvisionlabs.com)\nPOM License: The BSD License - http://www.antlr.org/license.html\n\nCopyright (c) 2012 Terence Parr and Sam Harwell\nAll rights reserved.\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\nRedistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\nRedistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\nNeither the name of the author nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n5) GeantyRef (https://github.com/leangen/geantyref)\nManifest license URL: https://www.apache.org/licenses/LICENSE-2.0\n\nPOM License: Apache License, Version 2.0 - https://www.apache.org/licenses/LICENSE-2.0\n\nThe Apache License\nCopyright © 2017 Kaqqao\nLicensed under the Apache License, Version 2.0 (the “License”); you may not use this file except in compliance with the License.You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software distributed under the License is distributed on an “AS IS” BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.\n\n6) commonmark-java core\nPOM License: The 2-Clause BSD License - https://opensource.org/licenses/BSD-2-Clause\n\nEmbedded license: \n\n                    ****************************************                    \n\nCopyright (c) 2015, Atlassian Pty Ltd\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n7) commonmark-java extension for tables\nPOM License: The 2-Clause BSD License - https://opensource.org/licenses/BSD-2-Clause\n\nEmbedded license: \n\n                    ****************************************                    \n\nCopyright (c) 2015, Atlassian Pty Ltd\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n8) jansi (http://fusesource.com/)\nManifest license URL: https://www.apache.org/licenses/LICENSE-2.0\n\nPOM License: Apache License, Version 2.0 - https://www.apache.org/licenses/LICENSE-2.0\n\nThe Apache License\nCopyright © Fusesource 2023\nLicensed under the Apache License, Version 2.0 (the “License”); you may not use this file except in compliance with the License.You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software distributed under the License is distributed on an “AS IS” BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.\n\n9) Graal Sdk (https://github.com/oracle/graal)\nPOM License: Universal Permissive License, Version 1.0 - http://opensource.org/licenses/UPL\n\n10) Truffle API (http://openjdk.java.net/projects/graal)\nPOM License: Universal Permissive License, Version 1.0 - http://opensource.org/licenses/UPL\n\n11) IntelliJ IDEA Annotations (http://www.jetbrains.org)\nPOM License: Apache License, Version 2.0 - https://www.apache.org/licenses/LICENSE-2.0\n\nThe Apache License\nCopyright © Jetbrains 2023\nLicensed under the Apache License, Version 2.0 (the “License”); you may not use this file except in compliance with the License.You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software distributed under the License is distributed on an “AS IS” BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.\n\n12) kotlin-reflect (https://kotlinlang.org/)\nPOM License: Apache License, Version 2.0 - https://www.apache.org/licenses/LICENSE-2.0\n\nThe Apache License\nCopyright © Wuseal 2018\nLicensed under the Apache License, Version 2.0 (the “License”); you may not use this file except in compliance with the License.You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software distributed under the License is distributed on an “AS IS” BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.\n\n13) kotlin-stdlib (https://kotlinlang.org/)\nPOM License: Apache License, Version 2.0 - https://www.apache.org/licenses/LICENSE-2.0\n\nThe Apache License\nCopyright © 2010-2023 JetBrains s.r.o. and Kotlin Programming Language contributor\nLicensed under the Apache License, Version 2.0 (the “License”); you may not use this file except in compliance with the License.You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software distributed under the License is distributed on an “AS IS” BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.\n\n14) kotlin-stdlib-common (https://kotlinlang.org/)\nPOM License: Apache License, Version 2.0 - https://www.apache.org/licenses/LICENSE-2.0\n\nThe Apache License\nCopyright © 2023 Kotlin Team\nLicensed under the Apache License, Version 2.0 (the “License”); you may not use this file except in compliance with the License.You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software distributed under the License is distributed on an “AS IS” BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.\n\n15) kotlin-stdlib-jdk7 (https://kotlinlang.org/)\nPOM License: Apache License, Version 2.0 - https://www.apache.org/licenses/LICENSE-2.0\n\nThe Apache License\nCopyright © 2023 Kotlin Team\nLicensed under the Apache License, Version 2.0 (the “License”); you may not use this file except in compliance with the License.You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software distributed under the License is distributed on an “AS IS” BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.\n\n16) kotlin-stdlib-jdk8 (https://kotlinlang.org/)\nPOM License: Apache License, Version 2.0 - https://www.apache.org/licenses/LICENSE-2.0\n\nThe Apache License\nCopyright © 2023 Kotlin Team\nLicensed under the Apache License, Version 2.0 (the “License”); you may not use this file except in compliance with the License.You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software distributed under the License is distributed on an “AS IS” BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.\n\n17) kotlinx.html (https://github.com/Kotlin/kotlinx.html)\nPOM License: Apache License, Version 2.0 - https://www.apache.org/licenses/LICENSE-2.0\n\nThe Apache License\nCopyright © 2017 Yole\nLicensed under the Apache License, Version 2.0 (the “License”); you may not use this file except in compliance with the License.You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software distributed under the License is distributed on an “AS IS” BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.\n\n18) kotlinx-serialization-core (https://github.com/Kotlin/kotlinx.serialization)\nPOM License: Apache License, Version 2.0 - https://www.apache.org/licenses/LICENSE-2.0\n\nThe Apache License\n2017-2019 JetBrains s.r.o and respective authors and developers\nLicensed under the Apache License, Version 2.0 (the “License”); you may not use this file except in compliance with the License.You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software distributed under the License is distributed on an “AS IS” BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.\n\n19) kotlinx-serialization-json (https://github.com/Kotlin/kotlinx.serialization)\nPOM License: Apache License, Version 2.0 - https://www.apache.org/licenses/LICENSE-2.0\n\nThe Apache License\n2017-2019 JetBrains s.r.o and respective authors and developers\nLicensed under the Apache License, Version 2.0 (the “License”); you may not use this file except in compliance with the License.You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software distributed under the License is distributed on an “AS IS” BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.\n\n20) JLine Reader\nManifest license URL: https://opensource.org/licenses/BSD-3-Clause\n\nPOM License: The 3-Clause BSD License - https://opensource.org/licenses/BSD-3-Clause\n\nCopyright (c) 2002-2023, the original author(s)\n\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following\nconditions are met:\n\nRedistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n\nRedistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n\nNeither the name of JLine nor the names of its contributors may be used to endorse or promote products derived from this\nsoftware without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n21) JLine Terminal\nManifest license URL: https://opensource.org/licenses/BSD-3-Clause\n\nPOM License: The 3-Clause BSD License - https://opensource.org/licenses/BSD-3-Clause\n\nCopyright (c) 2002-2023, the original author(s)\n\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following\nconditions are met:\n\nRedistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n\nRedistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n\nNeither the name of JLine nor the names of its contributors may be used to endorse or promote products derived from this\nsoftware without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n22) JLine JANSI Terminal\nManifest license URL: https://opensource.org/licenses/BSD-3-Clause\n\nPOM License: The 3-Clause BSD License - https://opensource.org/licenses/BSD-3-Clause\n\nCopyright (c) 2002-2023, the original author(s)\n\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following\nconditions are met:\n\nRedistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n\nRedistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n\nNeither the name of JLine nor the names of its contributors may be used to endorse or promote products derived from this\nsoftware without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n23) msgpack-core (https://msgpack.org/)\nPOM License: Apache License, Version 2.0 - https://www.apache.org/licenses/LICENSE-2.0\n\nThe Apache License\nCopyright © 2016 Sadayuki Furuhashi, Muga Nishizawa, Taro L. Saito, Mitsunori Komatsu, Ozawa Tsuyoshi\nLicensed under the Apache License, Version 2.0 (the “License”); you may not use this file except in compliance with the License.You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software distributed under the License is distributed on an “AS IS” BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License. \n\n24) Paguro (https://github.com/GlenKPeterson/Paguro)\nPOM License: Apache License, Version 2.0 - https://www.apache.org/licenses/LICENSE-2.0\n\nThe Apache License\nCopyright © 2021 Glen K. Peterson\nLicensed under the Apache License, Version 2.0 (the “License”); you may not use this file except in compliance with the License.You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software distributed under the License is distributed on an “AS IS” BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.\n\nPOM License: Eclipse Public License - v 1.0 - http://www.eclipse.org/legal/epl-v10.html\n\nNOTE: The files in this project that came from Clojure (Persistent...) MUST only be used under the Eclipse 1.0 license.\nAt the user's choice, any other files in this project can be used under Eclipse 1.0 or the Apache 2.0 license.\n\nEclipse Public License - v 1.0\n\nTHE ACCOMPANYING PROGRAM IS PROVIDED UNDER THE TERMS OF THIS ECLIPSE PUBLIC LICENSE (\"AGREEMENT\").\nANY USE, REPRODUCTION OR DISTRIBUTION OF THE PROGRAM CONSTITUTES RECIPIENT'S ACCEPTANCE OF THIS AGREEMENT.\n\n1. DEFINITIONS\n\n\"Contribution\" means:\n\na) in the case of the initial Contributor, the initial code and documentation distributed under this Agreement, and\n\nb) in the case of each subsequent Contributor:\n\ni) changes to the Program, and\n\nii) additions to the Program;\n\nwhere such changes and/or additions to the Program originate from and are distributed by that particular Contributor. A Contribution 'originates' from a Contributor if it was added to the Program by such Contributor itself or anyone acting on such Contributor's behalf. Contributions do not include additions to the Program which: (i) are separate modules of software distributed in conjunction with the Program under their own license agreement, and (ii) are not derivative works of the Program.\n\n\"Contributor\" means any person or entity that distributes the Program.\n\n\"Licensed Patents\" mean patent claims licensable by a Contributor which are necessarily infringed by the use or sale of its Contribution alone or when combined with the Program.\n\n\"Program\" means the Contributions distributed in accordance with this Agreement.\n\n\"Recipient\" means anyone who receives the Program under this Agreement, including all Contributors.\n\n2. GRANT OF RIGHTS\n\na) Subject to the terms of this Agreement, each Contributor hereby grants Recipient a non-exclusive, worldwide, royalty-free copyright license to reproduce, prepare derivative works of, publicly display, publicly perform, distribute and sublicense the Contribution of such Contributor, if any, and such derivative works, in source code and object code form.\n\nb) Subject to the terms of this Agreement, each Contributor hereby grants Recipient a non-exclusive, worldwide, royalty-free patent license under Licensed Patents to make, use, sell, offer to sell, import and otherwise transfer the Contribution of such Contributor, if any, in source code and object code form. This patent license shall apply to the combination of the Contribution and the Program if, at the time the Contribution is added by the Contributor, such addition of the Contribution causes such combination to be covered by the Licensed Patents. The patent license shall not apply to any other combinations which include the Contribution. No hardware per se is licensed hereunder.\n\nc) Recipient understands that although each Contributor grants the licenses to its Contributions set forth herein, no assurances are provided by any Contributor that the Program does not infringe the patent or other intellectual property rights of any other entity. Each Contributor disclaims any liability to Recipient for claims brought by any other entity based on infringement of intellectual property rights or otherwise. As a condition to exercising the rights and licenses granted hereunder, each Recipient hereby assumes sole responsibility to secure any other intellectual property rights needed, if any. For example, if a third party patent license is required to allow Recipient to distribute the Program, it is Recipient's responsibility to acquire that license before distributing the Program.\n\nd) Each Contributor represents that to its knowledge it has sufficient copyright rights in its Contribution, if any, to grant the copyright license set forth in this Agreement.\n\n3. REQUIREMENTS\n\nA Contributor may choose to distribute the Program in object code form under its own license agreement, provided that:\n\na) it complies with the terms and conditions of this Agreement; and\n\nb) its license agreement:\n\ni) effectively disclaims on behalf of all Contributors all warranties and conditions, express and implied, including warranties or conditions of title and non-infringement, and implied warranties or conditions of merchantability and fitness for a particular purpose;\n\nii) effectively excludes on behalf of all Contributors all liability for damages, including direct, indirect, special, incidental and consequential damages, such as lost profits;\n\niii) states that any provisions which differ from this Agreement are offered by that Contributor alone and not by any other party; and\n\niv) states that source code for the Program is available from such Contributor, and informs licensees how to obtain it in a reasonable manner on or through a medium customarily used for software exchange.\n\nWhen the Program is made available in source code form:\n\na) it must be made available under this Agreement; and\n\nb) a copy of this Agreement must be included with each copy of the Program.\n\nContributors may not remove or alter any copyright notices contained within the Program.\n\nEach Contributor must identify itself as the originator of its Contribution, if any, in a manner that reasonably allows subsequent Recipients to identify the originator of the Contribution.\n\n4. COMMERCIAL DISTRIBUTION\n\nCommercial distributors of software may accept certain responsibilities with respect to end users, business partners and the like. While this license is intended to facilitate the commercial use of the Program, the Contributor who includes the Program in a commercial product offering should do so in a manner which does not create potential liability for other Contributors. Therefore, if a Contributor includes the Program in a commercial product offering, such Contributor (\"Commercial Contributor\") hereby agrees to defend and indemnify every other Contributor (\"Indemnified Contributor\") against any losses, damages and costs (collectively \"Losses\") arising from claims, lawsuits and other legal actions brought by a third party against the Indemnified Contributor to the extent caused by the acts or omissions of such Commercial Contributor in connection with its distribution of the Program in a commercial product offering. The obligations in this section do not apply to any claims or Losses relating to any actual or alleged intellectual property infringement. In order to qualify, an Indemnified Contributor must: a) promptly notify the Commercial Contributor in writing of such claim, and b) allow the Commercial Contributor to control, and cooperate with the Commercial Contributor in, the defense and any related settlement negotiations. The Indemnified Contributor may participate in any such claim at its own expense.\n\nFor example, a Contributor might include the Program in a commercial product offering, Product X. That Contributor is then a Commercial Contributor. If that Commercial Contributor then makes performance claims, or offers warranties related to Product X, those performance claims and warranties are such Commercial Contributor's responsibility alone. Under this section, the Commercial Contributor would have to defend claims against the other Contributors related to those performance claims and warranties, and if a court requires any other Contributor to pay any damages as a result, the Commercial Contributor must pay those damages.\n\n5. NO WARRANTY\n\nEXCEPT AS EXPRESSLY SET FORTH IN THIS AGREEMENT, THE PROGRAM IS PROVIDED ON AN \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, EITHER EXPRESS OR IMPLIED INCLUDING, WITHOUT LIMITATION, ANY WARRANTIES OR CONDITIONS OF TITLE, NON-INFRINGEMENT, MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. Each Recipient is solely responsible for determining the appropriateness of using and distributing the Program and assumes all risks associated with its exercise of rights under this Agreement , including but not limited to the risks and costs of program errors, compliance with applicable laws, damage to or loss of data, programs or equipment, and unavailability or interruption of operations.\n\n6. DISCLAIMER OF LIABILITY\n\nEXCEPT AS EXPRESSLY SET FORTH IN THIS AGREEMENT, NEITHER RECIPIENT NOR ANY CONTRIBUTORS SHALL HAVE ANY LIABILITY FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING WITHOUT LIMITATION LOST PROFITS), HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OR DISTRIBUTION OF THE PROGRAM OR THE EXERCISE OF ANY RIGHTS GRANTED HEREUNDER, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.\n\n7. GENERAL\n\nIf any provision of this Agreement is invalid or unenforceable under applicable law, it shall not affect the validity or enforceability of the remainder of the terms of this Agreement, and without further action by the parties hereto, such provision shall be reformed to the minimum extent necessary to make such provision valid and enforceable.\n\nIf Recipient institutes patent litigation against any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the Program itself (excluding combinations of the Program with other software or hardware) infringes such Recipient's patent(s), then such Recipient's rights granted under Section 2(b) shall terminate as of the date such litigation is filed.\n\nAll Recipient's rights under this Agreement shall terminate if it fails to comply with any of the material terms or conditions of this Agreement and does not cure such failure in a reasonable period of time after becoming aware of such noncompliance. If all Recipient's rights under this Agreement terminate, Recipient agrees to cease use and distribution of the Program as soon as reasonably practicable. However, Recipient's obligations under this Agreement and any licenses granted by Recipient relating to the Program shall continue and survive.\n\nEveryone is permitted to copy and distribute copies of this Agreement, but in order to avoid inconsistency the Agreement is copyrighted and may only be modified in the following manner. The Agreement Steward reserves the right to publish new versions (including revisions) of this Agreement from time to time. No one other than the Agreement Steward has the right to modify this Agreement. The Eclipse Foundation is the initial Agreement Steward. The Eclipse Foundation may assign the responsibility to serve as the Agreement Steward to a suitable separate entity. Each new version of the Agreement will be given a distinguishing version number. The Program (including Contributions) may always be distributed subject to the version of the Agreement under which it was received. In addition, after a new version of the Agreement is published, Contributor may elect to distribute the Program (including its Contributions) under the new version. Except as expressly stated in Sections 2(a) and 2(b) above, Recipient receives no rights or licenses to the intellectual property of any Contributor under this Agreement, whether expressly, by implication, estoppel or otherwise. All rights in the Program not expressly granted under this Agreement are reserved.\n\nThis Agreement is governed by the laws of the State of New York and the intellectual property laws of the United States of America. No party to this Agreement will bring a legal action under this Agreement more than one year after the cause of action arose. Each party waives its rights to a jury trial in any resulting litigation.\n\n25) SnakeYAML Engine (http://www.snakeyaml.org)\nManifest license URL: https://www.apache.org/licenses/LICENSE-2.0\n\nPOM License: Apache License, Version 2.0 - https://www.apache.org/licenses/LICENSE-2.0\n\nThe Apache License\nCopyright © 2008-2010 Andrey Somov\nLicensed under the Apache License, Version 2.0 (the “License”); you may not use this file except in compliance with the License.You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software distributed under the License is distributed on an “AS IS” BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.\n\n"
        },
        {
          "name": "bench",
          "type": "tree",
          "content": null
        },
        {
          "name": "build.gradle.kts",
          "type": "blob",
          "size": 2.4736328125,
          "content": "/*\n * Copyright © 2024 Apple Inc. and the Pkl project authors. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// https://youtrack.jetbrains.com/issue/KTIJ-19369\n@file:Suppress(\"DSL_SCOPE_VIOLATION\")\n\nimport org.jetbrains.gradle.ext.ActionDelegationConfig\nimport org.jetbrains.gradle.ext.ActionDelegationConfig.TestRunner.PLATFORM\nimport org.jetbrains.gradle.ext.ProjectSettings\nimport org.jetbrains.gradle.ext.TaskTriggersConfig\n\nplugins {\n  pklAllProjects\n  pklGraalVm\n\n  alias(libs.plugins.ideaExt)\n  alias(libs.plugins.jmh) apply false\n  alias(libs.plugins.nexusPublish)\n}\n\nnexusPublishing {\n  repositories {\n    sonatype {\n      nexusUrl.set(uri(\"https://s01.oss.sonatype.org/service/local/\"))\n      snapshotRepositoryUrl.set(uri(\"https://s01.oss.sonatype.org/content/repositories/snapshots/\"))\n    }\n  }\n}\n\nidea {\n  project {\n    this as ExtensionAware\n    configure<ProjectSettings> {\n      this as ExtensionAware\n      configure<ActionDelegationConfig> {\n        delegateBuildRunToGradle = true\n        testRunner = PLATFORM\n      }\n      configure<TaskTriggersConfig> {\n        afterSync(provider { project(\":pkl-core\").tasks.named(\"makeIntelliJAntlrPluginHappy\") })\n      }\n    }\n  }\n}\n\nval clean by tasks.existing { delete(layout.buildDirectory) }\n\nval printVersion by tasks.registering { doFirst { println(buildInfo.pklVersion) } }\n\nval message =\n  \"\"\"\n====\nGradle version : ${gradle.gradleVersion}\nJava version   : ${System.getProperty(\"java.version\")}\nisParallel     : ${gradle.startParameter.isParallelProjectExecutionEnabled}\nmaxWorkerCount : ${gradle.startParameter.maxWorkerCount}\nArchitecture   : ${buildInfo.arch}\n\nProject Version        : ${project.version}\nPkl Version            : ${buildInfo.pklVersion}\nPkl Non-Unique Version : ${buildInfo.pklVersionNonUnique}\nGit Commit ID          : ${buildInfo.commitId}\n====\n\"\"\"\n\nval formattedMessage =\n  message.replace(\"\\n====\", \"\\n\" + \"=\".repeat(message.lines().maxByOrNull { it.length }!!.length))\n\nlogger.info(formattedMessage)\n"
        },
        {
          "name": "buildSrc",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradle.properties",
          "type": "blob",
          "size": 0.6279296875,
          "content": "# suppress inspection \"UnusedProperty\" for whole file\n\ngroup=org.pkl-lang\nversion=0.28.0\n\n# google-java-format requires jdk.compiler exports\norg.gradle.jvmargs= \\\n  -Dfile.encoding=UTF-8 \\\n  --add-exports jdk.compiler/com.sun.tools.javac.api=ALL-UNNAMED \\\n  --add-exports jdk.compiler/com.sun.tools.javac.file=ALL-UNNAMED \\\n  --add-exports jdk.compiler/com.sun.tools.javac.parser=ALL-UNNAMED \\\n  --add-exports jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED \\\n  --add-exports jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED\n\norg.gradle.parallel=true\norg.gradle.caching=true\nkotlin.stdlib.default.dependency=false\n#org.gradle.workers.max=1\n"
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 8.556640625,
          "content": "#!/bin/sh\n\n#\n# Copyright © 2015-2021 the original authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      https://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n# SPDX-License-Identifier: Apache-2.0\n#\n\n##############################################################################\n#\n#   Gradle start up script for POSIX generated by Gradle.\n#\n#   Important for running:\n#\n#   (1) You need a POSIX-compliant shell to run this script. If your /bin/sh is\n#       noncompliant, but you have some other compliant shell such as ksh or\n#       bash, then to run this script, type that shell name before the whole\n#       command line, like:\n#\n#           ksh Gradle\n#\n#       Busybox and similar reduced shells will NOT work, because this script\n#       requires all of these POSIX shell features:\n#         * functions;\n#         * expansions «$var», «${var}», «${var:-default}», «${var+SET}»,\n#           «${var#prefix}», «${var%suffix}», and «$( cmd )»;\n#         * compound commands having a testable exit status, especially «case»;\n#         * various built-in commands including «command», «set», and «ulimit».\n#\n#   Important for patching:\n#\n#   (2) This script targets any POSIX shell, so it avoids extensions provided\n#       by Bash, Ksh, etc; in particular arrays are avoided.\n#\n#       The \"traditional\" practice of packing multiple parameters into a\n#       space-separated string is a well documented source of bugs and security\n#       problems, so this is (mostly) avoided, by progressively accumulating\n#       options in \"$@\", and eventually passing that to Java.\n#\n#       Where the inherited environment variables (DEFAULT_JVM_OPTS, JAVA_OPTS,\n#       and GRADLE_OPTS) rely on word-splitting, this is performed explicitly;\n#       see the in-line comments for details.\n#\n#       There are tweaks for specific operating systems such as AIX, CygWin,\n#       Darwin, MinGW, and NonStop.\n#\n#   (3) This script is generated from the Groovy template\n#       https://github.com/gradle/gradle/blob/HEAD/platforms/jvm/plugins-application/src/main/resources/org/gradle/api/internal/plugins/unixStartScript.txt\n#       within the Gradle project.\n#\n#       You can find Gradle at https://github.com/gradle/gradle/.\n#\n##############################################################################\n\n# Attempt to set APP_HOME\n\n# Resolve links: $0 may be a link\napp_path=$0\n\n# Need this for daisy-chained symlinks.\nwhile\n    APP_HOME=${app_path%\"${app_path##*/}\"}  # leaves a trailing /; empty if no leading path\n    [ -h \"$app_path\" ]\ndo\n    ls=$( ls -ld \"$app_path\" )\n    link=${ls#*' -> '}\n    case $link in             #(\n      /*)   app_path=$link ;; #(\n      *)    app_path=$APP_HOME$link ;;\n    esac\ndone\n\n# This is normally unused\n# shellcheck disable=SC2034\nAPP_BASE_NAME=${0##*/}\n# Discard cd standard output in case $CDPATH is set (https://github.com/gradle/gradle/issues/25036)\nAPP_HOME=$( cd -P \"${APP_HOME:-./}\" > /dev/null && printf '%s\n' \"$PWD\" ) || exit\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=maximum\n\nwarn () {\n    echo \"$*\"\n} >&2\n\ndie () {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n} >&2\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\nnonstop=false\ncase \"$( uname )\" in                #(\n  CYGWIN* )         cygwin=true  ;; #(\n  Darwin* )         darwin=true  ;; #(\n  MSYS* | MINGW* )  msys=true    ;; #(\n  NONSTOP* )        nonstop=true ;;\nesac\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=$JAVA_HOME/jre/sh/java\n    else\n        JAVACMD=$JAVA_HOME/bin/java\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=java\n    if ! command -v java >/dev/null 2>&1\n    then\n        die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nfi\n\n# Increase the maximum file descriptors if we can.\nif ! \"$cygwin\" && ! \"$darwin\" && ! \"$nonstop\" ; then\n    case $MAX_FD in #(\n      max*)\n        # In POSIX sh, ulimit -H is undefined. That's why the result is checked to see if it worked.\n        # shellcheck disable=SC2039,SC3045\n        MAX_FD=$( ulimit -H -n ) ||\n            warn \"Could not query maximum file descriptor limit\"\n    esac\n    case $MAX_FD in  #(\n      '' | soft) :;; #(\n      *)\n        # In POSIX sh, ulimit -n is undefined. That's why the result is checked to see if it worked.\n        # shellcheck disable=SC2039,SC3045\n        ulimit -n \"$MAX_FD\" ||\n            warn \"Could not set maximum file descriptor limit to $MAX_FD\"\n    esac\nfi\n\n# Collect all arguments for the java command, stacking in reverse order:\n#   * args from the command line\n#   * the main class name\n#   * -classpath\n#   * -D...appname settings\n#   * --module-path (only if needed)\n#   * DEFAULT_JVM_OPTS, JAVA_OPTS, and GRADLE_OPTS environment variables.\n\n# For Cygwin or MSYS, switch paths to Windows format before running java\nif \"$cygwin\" || \"$msys\" ; then\n    APP_HOME=$( cygpath --path --mixed \"$APP_HOME\" )\n    CLASSPATH=$( cygpath --path --mixed \"$CLASSPATH\" )\n\n    JAVACMD=$( cygpath --unix \"$JAVACMD\" )\n\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    for arg do\n        if\n            case $arg in                                #(\n              -*)   false ;;                            # don't mess with options #(\n              /?*)  t=${arg#/} t=/${t%%/*}              # looks like a POSIX filepath\n                    [ -e \"$t\" ] ;;                      #(\n              *)    false ;;\n            esac\n        then\n            arg=$( cygpath --path --ignore --mixed \"$arg\" )\n        fi\n        # Roll the args list around exactly as many times as the number of\n        # args, so each arg winds up back in the position where it started, but\n        # possibly modified.\n        #\n        # NB: a `for` loop captures its iteration list before it begins, so\n        # changing the positional parameters here affects neither the number of\n        # iterations, nor the values presented in `arg`.\n        shift                   # remove old arg\n        set -- \"$@\" \"$arg\"      # push replacement arg\n    done\nfi\n\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS='\"-Xmx64m\" \"-Xms64m\"'\n\n# Collect all arguments for the java command:\n#   * DEFAULT_JVM_OPTS, JAVA_OPTS, JAVA_OPTS, and optsEnvironmentVar are not allowed to contain shell fragments,\n#     and any embedded shellness will be escaped.\n#   * For example: A user cannot expect ${Hostname} to be expanded, as it is an environment variable and will be\n#     treated as '${Hostname}' itself on the command line.\n\nset -- \\\n        \"-Dorg.gradle.appname=$APP_BASE_NAME\" \\\n        -classpath \"$CLASSPATH\" \\\n        org.gradle.wrapper.GradleWrapperMain \\\n        \"$@\"\n\n# Stop when \"xargs\" is not available.\nif ! command -v xargs >/dev/null 2>&1\nthen\n    die \"xargs is not available\"\nfi\n\n# Use \"xargs\" to parse quoted args.\n#\n# With -n1 it outputs one arg per line, with the quotes and backslashes removed.\n#\n# In Bash we could simply go:\n#\n#   readarray ARGS < <( xargs -n1 <<<\"$var\" ) &&\n#   set -- \"${ARGS[@]}\" \"$@\"\n#\n# but POSIX shell has neither arrays nor command substitution, so instead we\n# post-process each arg (as a line of input to sed) to backslash-escape any\n# character that might be a shell metacharacter, then use eval to reverse\n# that process (while maintaining the separation between arguments), and wrap\n# the whole thing up as a single \"set\" statement.\n#\n# This will of course break if any of these variables contains a newline or\n# an unmatched quote.\n#\n\neval \"set -- $(\n        printf '%s\\n' \"$DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS\" |\n        xargs -n1 |\n        sed ' s~[^-[:alnum:]+,./:=@_]~\\\\&~g; ' |\n        tr '\\n' ' '\n    )\" '\"$@\"'\n\nexec \"$JAVACMD\" \"$@\"\n"
        },
        {
          "name": "gradlew.bat",
          "type": "blob",
          "size": 2.8046875,
          "content": "@rem\n@rem Copyright 2015 the original author or authors.\n@rem\n@rem Licensed under the Apache License, Version 2.0 (the \"License\");\n@rem you may not use this file except in compliance with the License.\n@rem You may obtain a copy of the License at\n@rem\n@rem      https://www.apache.org/licenses/LICENSE-2.0\n@rem\n@rem Unless required by applicable law or agreed to in writing, software\n@rem distributed under the License is distributed on an \"AS IS\" BASIS,\n@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@rem See the License for the specific language governing permissions and\n@rem limitations under the License.\n@rem\n@rem SPDX-License-Identifier: Apache-2.0\n@rem\n\n@if \"%DEBUG%\"==\"\" @echo off\n@rem ##########################################################################\n@rem\n@rem  Gradle startup script for Windows\n@rem\n@rem ##########################################################################\n\n@rem Set local scope for the variables with windows NT shell\nif \"%OS%\"==\"Windows_NT\" setlocal\n\nset DIRNAME=%~dp0\nif \"%DIRNAME%\"==\"\" set DIRNAME=.\n@rem This is normally unused\nset APP_BASE_NAME=%~n0\nset APP_HOME=%DIRNAME%\n\n@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.\nfor %%i in (\"%APP_HOME%\") do set APP_HOME=%%~fi\n\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nset DEFAULT_JVM_OPTS=\"-Xmx64m\" \"-Xms64m\"\n\n@rem Find java.exe\nif defined JAVA_HOME goto findJavaFromJavaHome\n\nset JAVA_EXE=java.exe\n%JAVA_EXE% -version >NUL 2>&1\nif %ERRORLEVEL% equ 0 goto execute\n\necho. 1>&2\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH. 1>&2\necho. 1>&2\necho Please set the JAVA_HOME variable in your environment to match the 1>&2\necho location of your Java installation. 1>&2\n\ngoto fail\n\n:findJavaFromJavaHome\nset JAVA_HOME=%JAVA_HOME:\"=%\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\n\nif exist \"%JAVA_EXE%\" goto execute\n\necho. 1>&2\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME% 1>&2\necho. 1>&2\necho Please set the JAVA_HOME variable in your environment to match the 1>&2\necho location of your Java installation. 1>&2\n\ngoto fail\n\n:execute\n@rem Setup the command line\n\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\n\n\n@rem Execute Gradle\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*\n\n:end\n@rem End local scope for the variables with windows NT shell\nif %ERRORLEVEL% equ 0 goto mainEnd\n\n:fail\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\nrem the _cmd.exe /c_ return code!\nset EXIT_CODE=%ERRORLEVEL%\nif %EXIT_CODE% equ 0 set EXIT_CODE=1\nif not \"\"==\"%GRADLE_EXIT_CONSOLE%\" exit %EXIT_CODE%\nexit /b %EXIT_CODE%\n\n:mainEnd\nif \"%OS%\"==\"Windows_NT\" endlocal\n\n:omega\n"
        },
        {
          "name": "jbang-catalog.json",
          "type": "blob",
          "size": 0.3876953125,
          "content": "{\n  \"catalogs\": {},\n  \"aliases\": {\n    \"pkl\": {\n      \"script-ref\": \"org.pkl-lang:pkl-cli-java:0.27.0\",\n      \"java-agents\": []\n    },\n    \"pkl-codegen-java\": {\n      \"script-ref\": \"org.pkl-lang:pkl-codegen-java:0.27.0\",\n      \"java-agents\": []\n    },\n    \"pkl-codegen-kotlin\": {\n      \"script-ref\": \"org.pkl-lang:pkl-codegen-kotlin:0.27.0\",\n      \"java-agents\": []\n    }\n  },\n  \"templates\": {}\n}\n"
        },
        {
          "name": "pkl-cli",
          "type": "tree",
          "content": null
        },
        {
          "name": "pkl-codegen-java",
          "type": "tree",
          "content": null
        },
        {
          "name": "pkl-codegen-kotlin",
          "type": "tree",
          "content": null
        },
        {
          "name": "pkl-commons-cli",
          "type": "tree",
          "content": null
        },
        {
          "name": "pkl-commons-test",
          "type": "tree",
          "content": null
        },
        {
          "name": "pkl-commons",
          "type": "tree",
          "content": null
        },
        {
          "name": "pkl-config-java",
          "type": "tree",
          "content": null
        },
        {
          "name": "pkl-config-kotlin",
          "type": "tree",
          "content": null
        },
        {
          "name": "pkl-core",
          "type": "tree",
          "content": null
        },
        {
          "name": "pkl-doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "pkl-executor",
          "type": "tree",
          "content": null
        },
        {
          "name": "pkl-gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "pkl-server",
          "type": "tree",
          "content": null
        },
        {
          "name": "pkl-tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "settings-gradle.lockfile",
          "type": "blob",
          "size": 0.193359375,
          "content": "# This is a Gradle generated file for dependency locking.\n# Manual edits can break the build and are not advised.\n# This file is expected to be part of source control.\nempty=incomingCatalogForLibs0\n"
        },
        {
          "name": "settings.gradle.kts",
          "type": "blob",
          "size": 1.7373046875,
          "content": "/*\n * Copyright © 2024 Apple Inc. and the Pkl project authors. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nrootProject.name = \"pkl\"\n\ninclude(\"bench\")\n\ninclude(\"docs\")\n\ninclude(\"stdlib\")\n\ninclude(\"pkl-cli\")\n\ninclude(\"pkl-codegen-java\")\n\ninclude(\"pkl-codegen-kotlin\")\n\ninclude(\"pkl-commons\")\n\ninclude(\"pkl-commons-cli\")\n\ninclude(\"pkl-commons-test\")\n\ninclude(\"pkl-config-java\")\n\ninclude(\"pkl-config-kotlin\")\n\ninclude(\"pkl-core\")\n\ninclude(\"pkl-doc\")\n\ninclude(\"pkl-gradle\")\n\ninclude(\"pkl-executor\")\n\ninclude(\"pkl-tools\")\n\ninclude(\"pkl-server\")\n\npluginManagement {\n  repositories {\n    mavenCentral()\n    gradlePluginPortal()\n  }\n}\n\n@Suppress(\"UnstableApiUsage\") dependencyResolutionManagement { repositories { mavenCentral() } }\n\nval javaVersion = JavaVersion.current()\n\nrequire(javaVersion.isCompatibleWith(JavaVersion.VERSION_17)) {\n  \"Project requires Java 17 or higher, but found ${javaVersion.majorVersion}.\"\n}\n\nif (\n  gradle.startParameter.taskNames.contains(\"updateDependencyLocks\") ||\n    gradle.startParameter.taskNames.contains(\"uDL\")\n) {\n  gradle.startParameter.isWriteDependencyLocks = true\n}\n\nfor (prj in rootProject.children) {\n  prj.buildFileName = \"${prj.name}.gradle.kts\"\n}\n\nenableFeaturePreview(\"TYPESAFE_PROJECT_ACCESSORS\")\n"
        },
        {
          "name": "stdlib",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}