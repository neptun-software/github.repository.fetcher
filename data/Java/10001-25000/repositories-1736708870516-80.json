{
  "metadata": {
    "timestamp": 1736708870516,
    "page": 80,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjgw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "apache/pulsar",
      "stars": 14377,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".asf.yaml",
          "type": "blob",
          "size": 2.806640625,
          "content": "#\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n#\n\ngithub:\n  description: \"Apache Pulsar - distributed pub-sub messaging system\"\n  homepage: https://pulsar.apache.org/\n  labels:\n    - pulsar\n    - pubsub\n    - messaging\n    - streaming\n    - queuing\n    - event-streaming\n  features:\n    # Enable wiki for documentation\n    wiki: true\n    # Enable issues management\n    issues: true\n    # Enable projects for project management boards\n    projects: true\n  enabled_merge_buttons:\n    squash:  true\n    merge:   false\n    rebase:  false\n  protected_branches:\n    master:\n      required_status_checks:\n        # strict means \"Require branches to be up to date before merging\".\n        strict: false\n        # Contexts are the names of checks that must pass.\n        # See ./github/workflows/README.md for more documentation on this list.\n        contexts:\n           - Pulsar CI checks completed\n\n      required_pull_request_reviews:\n        dismiss_stale_reviews: false\n        require_code_owner_reviews: true\n        required_approving_review_count: 1\n\n      # squash or rebase must be allowed in the repo for this setting to be set to true.\n      required_linear_history: true\n\n      required_signatures: false\n\n      # Requires all conversations on code to be resolved before a pull request can be merged.\n      required_conversation_resolution: true\n\n    # The following branch protections only ensure that force pushes are not allowed\n    branch-1.15: {}\n    branch-1.16: {}\n    branch-1.17: {}\n    branch-1.18: {}\n    branch-1.19: {}\n    branch-1.20: {}\n    branch-1.21: {}\n    branch-1.22: {}\n    branch-2.0: {}\n    branch-2.1: {}\n    branch-2.2: {}\n    branch-2.3: {}\n    branch-2.4: {}\n    branch-2.5: {}\n    branch-2.6: {}\n    branch-2.7: {}\n    branch-2.8: {}\n    branch-2.9: {}\n    branch-2.10: {}\n    branch-2.11: {}\n    branch-3.0: {}\n    branch-3.1: {}\n    branch-3.2: {}\n    branch-3.3: {}\n    branch-4.0: {}\n\nnotifications:\n  commits:      commits@pulsar.apache.org\n  issues:       commits@pulsar.apache.org\n  pullrequests: commits@pulsar.apache.org\n  discussions:  commits@pulsar.apache.org\n  jira_options: link label\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.6513671875,
          "content": "status.html\n.metadata\ntest-output\ntest-results\ndependency-reduced-pom.xml\nlogs\n/data\npackages-storage\npulsar-broker/data/\npulsar-broker/tmp.*\npulsar-broker/src/test/resources/log4j2.yaml\npulsar-functions/worker/test-tenant/\npulsar-broker/src/test/resources/pulsar-functions-api-examples.jar\npulsar-functions/runtime/src/test/resources/\npulsar-functions/worker/src/test/resources/\n*.log\n*.nar\n\n*.versionsBackup\n*/bin\n\n# Eclipse\n.classpath\n.project\n.settings/\n.recommenders/\n.factorypath\n\n# IntelliJ\n.idea/*\n!.idea/vcs.xml\n*.iml\n*.iws\n.fleet/*\n\n# NetBeans\nnb-configuration.xml\n\n# Mac\n**/.DS_Store\n.java-version\n\n# VisualStudioCode artifacts\n.vscode/\n\n# Maven\nlog/\ntarget/\n.mvn/wrapper/maven-wrapper.jar\n\n# Python\n*.pyc\n.python-version\n\n# Perf tools\n*.hgrm\n\n# tmp files\n*.pid\n\n# Generated website\ngenerated-site/\n\n# Ansible and Terraform artifacts\ndeployment/terraform-ansible/deploy-pulsar.retry\ndeployment/terraform-ansible/aws/.terraform/\ndeployment/terraform-ansible/aws/.terraform.tfstate.lock.info\ndeployment/terraform-ansible/aws/terraform.tfstate\ndeployment/terraform-ansible/aws/terraform.tfstate.backup\n\n# Vagrant\n**/.vagrant\n\n# CI generated files\n.repository\ndocker.debug-info\n\n# Yarn\n\n**/yarn.lock\n\n# docusaurus\n\n**/website/i18n/*\n**/website/translated_docs*\n**/website/brodocs/index.html\n**/website/brodocs/navData.js\n**/website/brodocs/documents/*.md\n\n# Avro\nexamples/flink/src/main/java/org/apache/flink/avro/generated\npulsar-flink/src/test/java/org/apache/flink/avro/generated\npulsar-client/src/test/java/org/apache/pulsar/client/avro/generated\n/build/\n\ntest-reports/\n\n# Gradle Enterprise\n.mvn/.gradle-enterprise/\n# Gradle Develocity\n.mvn/.develocity/\n.vscode\neffective-pom.xml\n"
        },
        {
          "name": ".idea",
          "type": "tree",
          "content": null
        },
        {
          "name": ".mvn",
          "type": "tree",
          "content": null
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.041015625,
          "content": "<!--\n\n    Licensed to the Apache Software Foundation (ASF) under one\n    or more contributor license agreements.  See the NOTICE file\n    distributed with this work for additional information\n    regarding copyright ownership.  The ASF licenses this file\n    to you under the Apache License, Version 2.0 (the\n    \"License\"); you may not use this file except in compliance\n    with the License.  You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing,\n    software distributed under the License is distributed on an\n    \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n    KIND, either express or implied.  See the License for the\n    specific language governing permissions and limitations\n    under the License.\n\n-->\n\n## Contributing to Apache Pulsar\n\nWe would love for you to contribute to Apache Pulsar and make it even better! Please check the [Apache Pulsar Contributing Guide](https://pulsar.apache.org/contribute/) before starting to work on the project.\n"
        },
        {
          "name": "CONTRIBUTORS.md",
          "type": "blob",
          "size": 1.349609375,
          "content": "<!--\n\n    Licensed to the Apache Software Foundation (ASF) under one\n    or more contributor license agreements.  See the NOTICE file\n    distributed with this work for additional information\n    regarding copyright ownership.  The ASF licenses this file\n    to you under the Apache License, Version 2.0 (the\n    \"License\"); you may not use this file except in compliance\n    with the License.  You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing,\n    software distributed under the License is distributed on an\n    \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n    KIND, either express or implied.  See the License for the\n    specific language governing permissions and limitations\n    under the License.\n\n-->\n\n#### Initial contributors\n\n* Amanveer Dhillon\n* Andrews Sahaya Albert\n* Arunabha Ghosh\n* Chiaming Yang\n* JK Kim\n* Jaewoong Choi\n* Jai Asher\n* Joe Francis\n* Lohith BK\n* Ludwig Pummer\n* Masahiro Sakamoto\n* Masakazu Kitajo\n* Matteo Merli\n* Maurice Barnum\n* Mike Marino\n* Nozomi Kurihara\n* Onkar Deshpande\n* Rajagopalan Srinivasan\n* Rajan Dhabalia\n* Sameer Deokule\n* Sangmin Lee\n* Satheesh Nanniyur\n* Siddharth Sunil Boobna\n* Stefanus A Hinardi\n* Vahid Fatourehchi\n* Venkatasubramanian V\n* Venkatesh Iyer\n* Vinit Mahedia\n* Xiaogang Chang\n* Yi Pan\n* Zuhair Parvez\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 12.98828125,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n----------------------------------------------------------------------------------------------------\n\npulsar-common/src/main/java/org/apache/pulsar/common/util/protobuf/ByteBufCoded{Input,Output}Stream.java\n\nCopyright 2014, Google Inc.  All rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n    * Redistributions of source code must retain the above copyright\nnotice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above\ncopyright notice, this list of conditions and the following disclaimer\nin the documentation and/or other materials provided with the\ndistribution.\n    * Neither the name of Google Inc. nor the names of its\ncontributors may be used to endorse or promote products derived from\nthis software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nCode generated by the Protocol Buffer compiler is owned by the owner\nof the input file used when generating it.  This code is not\nstandalone and requires a support library to be linked with it.  This\nsupport library is itself covered by the above license.\n"
        },
        {
          "name": "NOTICE",
          "type": "blob",
          "size": 0.1630859375,
          "content": "Apache Pulsar\nCopyright 2017-2024 The Apache Software Foundation\n\nThis product includes software developed at\nThe Apache Software Foundation (http://www.apache.org/).\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 10.9990234375,
          "content": "<!--\n\n    Licensed to the Apache Software Foundation (ASF) under one\n    or more contributor license agreements.  See the NOTICE file\n    distributed with this work for additional information\n    regarding copyright ownership.  The ASF licenses this file\n    to you under the Apache License, Version 2.0 (the\n    \"License\"); you may not use this file except in compliance\n    with the License.  You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing,\n    software distributed under the License is distributed on an\n    \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n    KIND, either express or implied.  See the License for the\n    specific language governing permissions and limitations\n    under the License.\n\n-->\n\n![logo](https://pulsar.apache.org/img/pulsar.svg)\n\n[![docker pull](https://img.shields.io/docker/pulls/apachepulsar/pulsar-all.svg)](https://hub.docker.com/r/apachepulsar/pulsar)\n[![contributors](https://img.shields.io/github/contributors-anon/apache/pulsar)](https://github.com/apache/pulsar/graphs/contributors)\n[![last commit](https://img.shields.io/github/last-commit/apache/pulsar)](https://github.com/apache/pulsar/commits/master)\n[![release](https://img.shields.io/github/v/release/apache/pulsar?sort=semver)](https://pulsar.apache.org/download/)\n[![downloads](https://img.shields.io/github/downloads/apache/pulsar/total)](https://pulsar.apache.org/download/)\n\nPulsar is a distributed pub-sub messaging platform with a very\nflexible messaging model and an intuitive client API.\n\nLearn more about Pulsar at https://pulsar.apache.org\n\n## Main features\n\n- Horizontally scalable (Millions of independent topics and millions\n  of messages published per second)\n- Strong ordering and consistency guarantees\n- Low latency durable storage\n- Topic and queue semantics\n- Load balancer\n- Designed for being deployed as a hosted service:\n  - Multi-tenant\n  - Authentication\n  - Authorization\n  - Quotas\n  - Support mixing very different workloads\n  - Optional hardware isolation\n- Keeps track of consumer cursor position\n- REST API for provisioning, admin and stats\n- Geo replication\n- Transparent handling of partitioned topics\n- Transparent batching of messages\n\n## Repositories\n\nThis repository is the main repository of Apache Pulsar. Pulsar PMC also maintains other repositories for\ncomponents in the Pulsar ecosystem, including connectors, adapters, and other language clients.\n\n- [Pulsar Core](https://github.com/apache/pulsar)\n\n### Helm Chart\n\n- [Pulsar Helm Chart](https://github.com/apache/pulsar-helm-chart)\n\n### Ecosystem\n\n- [Pulsar Adapters](https://github.com/apache/pulsar-adapters)\n\n### Clients\n\n- [.NET/C# Client](https://github.com/apache/pulsar-dotpulsar)\n- [C++ Client](https://github.com/apache/pulsar-client-cpp)\n- [Go Client](https://github.com/apache/pulsar-client-go)\n- [NodeJS Client](https://github.com/apache/pulsar-client-node)\n- [Python Client](https://github.com/apache/pulsar-client-python)\n- [Reactive Java Client](https://github.com/apache/pulsar-client-reactive)\n\n### Dashboard & Management Tools\n\n- [Pulsar Manager](https://github.com/apache/pulsar-manager)\n\n### Website\n\n- [Pulsar Site](https://github.com/apache/pulsar-site)\n\n### CI/CD\n\n- [Pulsar CI](https://github.com/apache/pulsar-test-infra)\n\n### Archived/Halted\n\n- [Pulsar Connectors](https://github.com/apache/pulsar-connectors) (bundled as [pulsar-io](pulsar-io))\n- [Pulsar Translation](https://github.com/apache/pulsar-translation)\n- [Pulsar SQL (Pulsar Presto Connector)](https://github.com/apache/pulsar-presto) (bundled as [pulsar-sql](pulsar-sql))\n- [Ruby Client](https://github.com/apache/pulsar-client-ruby)\n\n## Pulsar Runtime Java Version Recommendation\n\n- pulsar ver > 2.10 and master branch\n\n| Components     | Java Version  |\n|----------------|:-------------:|\n| Broker         |      17       |\n| Functions / IO |      17       |\n| CLI            |      17       |\n| Java Client    | 8 or 11 or 17 |\n\n- 2.8 <= pulsar ver <= 2.10\n\n| Components     | Java Version |\n|----------------|:------------:|\n| Broker         |      11      |\n| Functions / IO |      11      |\n| CLI            |   8 or 11    |\n| Java Client    |   8 or 11    |\n\n- pulsar ver < 2.8\n\n| Components | Java Version |\n|------------|:------------:|\n| All        |   8 or 11    |\n\n## Build Pulsar\n\n### Requirements\n\n- JDK\n\n    | Pulsar Version    |                    JDK Version                    |\n    |-------------------|:-------------------------------------------------:|\n    | master and 2.11 + | [JDK 17](https://adoptium.net/?variant=openjdk17) |\n    | 2.8 / 2.9 / 2.10  | [JDK 11](https://adoptium.net/?variant=openjdk11) |\n    | 2.7 -             |  [JDK 8](https://adoptium.net/?variant=openjdk8)  |\n\n- Maven 3.6.1+\n- zip\n\n> **Note**:\n>\n> This project includes a [Maven Wrapper](https://maven.apache.org/wrapper/) that can be used instead of a system-installed Maven.\n> Use it by replacing `mvn` by `./mvnw` on Linux and `mvnw.cmd` on Windows in the commands below.    \n\n### Build\n\nCompile and install:\n\n```bash\n$ mvn install -DskipTests\n```\n\nCompile and install individual module\n\n```bash\n$ mvn -pl module-name (e.g: pulsar-broker) install -DskipTests\n```\n\n### Minimal build (This skips most of external connectors and tiered storage handlers)\n\n```bash\nmvn install -Pcore-modules,-main -DskipTests\n```\n\nRun Unit Tests:\n\n```bash\n$ mvn test\n```\n\nRun Individual Unit Test:\n\n```bash\n$ mvn -pl module-name (e.g: pulsar-client) test -Dtest=unit-test-name (e.g: ConsumerBuilderImplTest)\n```\n\nRun Selected Test packages:\n\n```bash\n$ mvn test -pl module-name (for example, pulsar-broker) -Dinclude=org/apache/pulsar/**/*.java\n```\n\nStart standalone Pulsar service:\n\n```bash\n$ bin/pulsar standalone\n```\n\nCheck https://pulsar.apache.org for documentation and examples.\n\n## Build custom docker images\n\nThe commands used in the Apache Pulsar release process can be found in the [release process documentation](https://pulsar.apache.org/contribute/release-process/#stage-docker-images).\n\nHere are some general instructions for building custom docker images:\n\n* Docker images must be built with Java 8 for `branch-2.7` or previous branches because of [ISSUE-8445](https://github.com/apache/pulsar/issues/8445).\n* Java 11 is the recommended JDK version in `branch-2.8`, `branch-2.9` and `branch-2.10`.\n* Java 17 is the recommended JDK version in `master`.\n\nThe following command builds the docker images `apachepulsar/pulsar-all:latest` and `apachepulsar/pulsar:latest`:\n\n```bash\nmvn clean install -DskipTests\n# setting DOCKER_CLI_EXPERIMENTAL=enabled is required in some environments with older docker versions\nexport DOCKER_CLI_EXPERIMENTAL=enabled\nmvn package -Pdocker,-main -am -pl docker/pulsar-all -DskipTests\n```\n\nAfter the images are built, they can be tagged and pushed to your custom repository. Here's an example of a bash script that tags the docker images with the current version and git revision and pushes them to `localhost:32000/apachepulsar`.\n\n```bash\nimage_repo_and_project=localhost:32000/apachepulsar\npulsar_version=$(mvn initialize help:evaluate -Dexpression=project.version -pl . -q -DforceStdout)\ngitrev=$(git rev-parse HEAD | colrm 10)\ntag=\"${pulsar_version}-${gitrev}\"\necho \"Using tag $tag\"\ndocker tag apachepulsar/pulsar-all:latest ${image_repo_and_project}/pulsar-all:$tag\ndocker push ${image_repo_and_project}/pulsar-all:$tag\ndocker tag apachepulsar/pulsar:latest ${image_repo_and_project}/pulsar:$tag\ndocker push ${image_repo_and_project}/pulsar:$tag\n```\n\n## Setting up your IDE\n\nRead https://pulsar.apache.org/contribute/setup-ide for setting up IntelliJ IDEA or Eclipse for developing Pulsar.\n\n## Documentation\n\n> **Note**:\n>\n> For how to make contributions to Pulsar documentation, see [Pulsar Documentation Contribution Guide](https://pulsar.apache.org/contribute/document-intro/).\n\n## Contact\n\n##### Mailing lists\n\n| Name                                                      | Scope                           | Subscribe                                             | Unsubscribe                                               | Archives                                                           |\n|:----------------------------------------------------------|:--------------------------------|:------------------------------------------------------|:----------------------------------------------------------|:-------------------------------------------------------------------|\n| [users@pulsar.apache.org](mailto:users@pulsar.apache.org) | User-related discussions        | [Subscribe](mailto:users-subscribe@pulsar.apache.org) | [Unsubscribe](mailto:users-unsubscribe@pulsar.apache.org) | [Archives](http://mail-archives.apache.org/mod_mbox/pulsar-users/) |\n| [dev@pulsar.apache.org](mailto:dev@pulsar.apache.org)     | Development-related discussions | [Subscribe](mailto:dev-subscribe@pulsar.apache.org)   | [Unsubscribe](mailto:dev-unsubscribe@pulsar.apache.org)   | [Archives](http://mail-archives.apache.org/mod_mbox/pulsar-dev/)   |\n\n##### Slack\n\nPulsar slack channel at https://apache-pulsar.slack.com/\n\nYou can self-register at https://communityinviter.com/apps/apache-pulsar/apache-pulsar\n\n## Security Policy\n\nIf you find a security issue with Pulsar then please [read the security policy](https://pulsar.apache.org/security/#security-policy). It is critical to avoid public disclosure.\n\n### Reporting a security vulnerability\n\nTo report a vulnerability for Pulsar, contact the [Apache Security Team](https://www.apache.org/security/). When reporting a vulnerability to [security@apache.org](mailto:security@apache.org), you can copy your email to [private@pulsar.apache.org](mailto:private@pulsar.apache.org) to send your report to the Apache Pulsar Project Management Committee. This is a private mailing list.\n\nhttps://github.com/apache/pulsar/security/policy contains more details.\n\n## License\n\nLicensed under the Apache License, Version 2.0: http://www.apache.org/licenses/LICENSE-2.0\n\n## Crypto Notice\n\nThis distribution includes cryptographic software. The country in which you currently reside may have restrictions on the import, possession, use, and/or re-export to another country, of encryption software. BEFORE using any encryption software, please check your country's laws, regulations and policies concerning the import, possession, or use, and re-export of encryption software, to see if this is permitted. See [The Wassenaar Arrangement](http://www.wassenaar.org/) for more information.\n\nThe U.S. Government Department of Commerce, Bureau of Industry and Security (BIS), has classified this software as Export Commodity Control Number (ECCN) 5D002.C.1, which includes information security software using or performing cryptographic functions with asymmetric algorithms. The form and manner of this Apache Software Foundation distribution makes it eligible for export under the License Exception ENC Technology Software Unrestricted (TSU) exception (see the BIS Export Administration Regulations, Section 740.13) for both object code and source code.\n\nThe following provides more details on the included cryptographic software: Pulsar uses the SSL library from Bouncy Castle written by http://www.bouncycastle.org.\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.0634765625,
          "content": "# Security Policy\n\nSee also https://pulsar.apache.org/security/.\n"
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "bouncy-castle",
          "type": "tree",
          "content": null
        },
        {
          "name": "build",
          "type": "tree",
          "content": null
        },
        {
          "name": "buildtools",
          "type": "tree",
          "content": null
        },
        {
          "name": "codecov.yml",
          "type": "blob",
          "size": 1.7236328125,
          "content": "#\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n#\n\ncodecov:\n  # the state in Codecov for a PR status in GitHub is often wrong. Just ignore this condition and\n  # rely on after_n_builds for notifying about the coverage\n  require_ci_to_pass: no\n  notify:\n    # should match the number of coverage report uploads\n    # pulsar-ci.yaml contains 3 uploads (unittests, inttests, systests)\n    # pulsar-ci-flaky.yaml contains 1 upload\n    after_n_builds: 4\n    wait_for_ci: no\n\ncomment:\n  # should match the number of builds sending coverage reports\n  after_n_builds: 4\n  layout: \"reach, diff, flags, files\"\n  behavior: default\n  require_changes: false\n  require_base: no\n  require_head: yes\n\ncoverage:\n  status:\n    patch:\n      default:\n        target: auto\n        informational: true\n    project:\n      default:\n        target: auto\n        informational: true\n\n# ignore test code\nignore:\n  - tests\n  - testmocks\n  - buildtools\n  - pulsar-testclient\n  - pulsar-client-tools-customcommand-example\n  - pulsar-functions/java-examples"
        },
        {
          "name": "conf",
          "type": "tree",
          "content": null
        },
        {
          "name": "deployment",
          "type": "tree",
          "content": null
        },
        {
          "name": "dev",
          "type": "tree",
          "content": null
        },
        {
          "name": "distribution",
          "type": "tree",
          "content": null
        },
        {
          "name": "doap_Pulsar.rdf",
          "type": "blob",
          "size": 2.7021484375,
          "content": "<?xml version=\"1.0\"?>\r\n<?xml-stylesheet type=\"text/xsl\"?>\r\n<rdf:RDF xml:lang=\"en\"\r\n         xmlns=\"http://usefulinc.com/ns/doap#\" \r\n         xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\" \r\n         xmlns:asfext=\"http://projects.apache.org/ns/asfext#\"\r\n         xmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\r\n<!--\r\n    Licensed to the Apache Software Foundation (ASF) under one or more\r\n    contributor license agreements.  See the NOTICE file distributed with\r\n    this work for additional information regarding copyright ownership.\r\n    The ASF licenses this file to You under the Apache License, Version 2.0\r\n    (the \"License\"); you may not use this file except in compliance with\r\n    the License.  You may obtain a copy of the License at\r\n   \r\n         https://www.apache.org/licenses/LICENSE-2.0\r\n   \r\n    Unless required by applicable law or agreed to in writing, software\r\n    distributed under the License is distributed on an \"AS IS\" BASIS,\r\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n    See the License for the specific language governing permissions and\r\n    limitations under the License.\r\n-->\r\n  <Project rdf:about=\"https://pulsar.apache.org/\">\r\n    <created>2018-09-19</created>\r\n    <license rdf:resource=\"https://spdx.org/licenses/Apache-2.0\" />\r\n    <name>Apache Pulsar</name>\r\n    <homepage rdf:resource=\"https://pulsar.apache.org/\" />\r\n    <asfext:pmc rdf:resource=\"https://pulsar.apache.org\" />\r\n    <shortdesc>Apache Pulsar is a distributed messaging and streaming platform built for the cloud.</shortdesc>\r\n    <description>Apache Pulsar is an all-in-one messaging and streaming platform. Messages can be consumed and acknowledged individually or consumed as streams with less than 10ms of latency. Its layered architecture allows rapid scaling across hundreds of nodes, without data reshuffling.\r\n\r\nIts features include multi-tenancy with resource separation and access control, geo-replication across regions, tiered storage and support for six official client languages. It supports up to one million unique topics and is designed to simplify your application architecture.</description>\r\n    <bug-database rdf:resource=\"https://github.com/apache/pulsar/issues\" />\r\n    <mailing-list rdf:resource=\"https://pulsar.apache.org/community/\" />\r\n    <download-page rdf:resource=\"https://pulsar.apache.org/download/\" />\r\n    <programming-language>Java</programming-language>\r\n    <category rdf:resource=\"https://projects.apache.org/category/big-data\" />\r\n    <repository>\r\n      <GitRepository>\r\n        <location rdf:resource=\"https://github.com/apache/pulsar.git\"/>\r\n        <browse rdf:resource=\"https://github.com/apache/pulsar\"/>\r\n      </GitRepository>\r\n    </repository>\r\n  </Project>\r\n</rdf:RDF>\r\n\r\n"
        },
        {
          "name": "docker-compose",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "faq.md",
          "type": "blob",
          "size": 23.2919921875,
          "content": "# Frequently Asked Questions\n- Getting Started\n- Concepts and Design\n- Usage and Configuration\n\n---\n\n## Getting Started\n\n### What is the minimum requirements for Apache Pulsar ?\nYou need 3 kind of clusters: bookie, broker, zookeeper. But if not have enough resource, it's ok to run them on same machine.\n\n---\n\n## Concepts and Design\n\n### Is ack tied to subscription?\nYes, ack is tied to a particular subscription.\n\n### Where should I look into to tweak load balancing ?\nThere are few parameters to look at :\n1. The topic assignments to brokers are done in terms of “bundles”, that is in group of topic\n2. Topics are matched to bundles by hashing on the name\n3. Effectively, a bundle is a hash-range where topics falls into\n4. Initially the default is to have 4 “bundles” for a namespace\n5. When the traffic increases on a given bundle, it will be split in 2 and reassigned to a different broker\n6. There are some adjustable thresholds that can be used to control when the split happens, based on number of topics/partitions, messages in/out, bytes in/out, etc..\n7. It’s also possible to specify a higher number of bundles when creating a namespace\n8. There are the load-manager threshold that control when a broker should offload some of the bundles to other brokers\n\n### What is the lifecycle of subscription?\nOnce it’s created, it retains all messages published after that (minus explicit TTL). Subscriptions can be dropped by explicitly unsubscribing (in `Consumer` API) or through the REST/CLI .\n\n### What is a bundle?\nIn Pulsar, \"namespaces\" are the administrative unit: you can configure most options on a namespace and they will be applied on the topics contained on the namespace. It gives the convenience of doing settings and operations on a group of topics rather than doing it once per topic.\n\nIn general, the pattern is to use a namespace for each user application. So a single user/tenant, can create multiple namespaces to manage its own applications.\n\nWhen it comes to topics, we need a way to assign topics to brokers, control the load and move them if a broker becomes overloaded. Rather that doing this operations per each single topic (ownership, load-monitoring, assigning), we do it in bundles, or \"groups of topics\".\n\nIn practical words, the number of bundles determines \"into how many brokers can I spread the topics for a given namespace\".\n\nFrom the client API or implementation, there's no concept of bundles, clients will lookup the topics that want to publish/consumer individually.\n\nOn the broker side, the namespace is broken down into multiple bundles, and each bundle can be assigned to a different broker. Effectively, bundles are the \"unit of assignment\" for topics into brokers and this is what the load-manager uses to track the traffic and decide where to place \"bundles\" and whether to offload them to other brokers.\n\nA bundle is represented by a hash-range. The 32-bit hash space is initially divided equally into the requested bundles. Topics are matched to a bundle by hashing on the topic name.\n\nDefault number of bundles is configured in `broker.conf`: `defaultNumberOfNamespaceBundles=4`\n\nWhen the traffic increases on a given bundle, it will be split in 2 and reassigned to a different broker.\n\nEnable auto-split: `loadBalancerAutoBundleSplitEnable=true` trigger unload and reassignment after splitting: `loadBalancerAutoUnloadSplitsEnable=true`.\n\nIf is expected to have a high traffic on a particular namespace, it's a good practice to specify a higher number of bundles when creating the namespace: `bin/pulsar-admin namespaces create $NS --bundles 64`. This will avoid the initial auto-adjustment phase.\n\nAll the thresholds for the auto-splitting can be configured in `broker.conf`, eg: number of topics/partitions, messages in/out, bytes in/out, etc...\n\n### How the design deals with isolation between tenants, which concepts enable that and up to what extent, how huge difference can exist between tenants so that impact on each other is noticeable via degraded latency.\nThe isolation between tenants (and topics of same tenant) happens at many different points. I'll start from the bottom up.\n\n#### Storage\nYou're probably familiar with BookKeeper, but of the main strength is that each bookie can efficiently serve many different ledger (segments of topic data). We tested with 100s of thousand per single node.\n\nThis is because there is a single journal (on its own device) where all the write operations gets appended and then the entries are periodically flushed in background on the storage device.\n\nThis gives isolation between writes and reads in a bookie. You can read as fast as you can, maxing out the IO on the storage device, but your write throughput and latency are going to be unaffected.\n\n#### Broker\nEverything in the broker happens asynchronously. The amount of memory that is used is also capped per broker.\n\nWhenever the broker is marked as overloaded, traffic can be quickly shifted (manually or without intervention) to less loaded brokers. LoadManager component in brokers is dedicated to that.\n\nThere are several points of flow control:\n- On the producer side, there are limits on the in-flight message for broker bookies, that will slow down users trying to publish faster that the system can absorb\n- On the consumer side, it's possible to throttle the delivery to a certain rate\n\n#### Quotas\nCan configure different storage quotas for different tenants/namespaces and take different actions when the quotas are filled up (block producer, give exception, drop older messages).\n\n#### Broker level isolation\nThere is the option to isolate certain tenants/namespaces to a particular set of broker. Typically the reason for using that was to experiment with different configurations, debugging and quickly react to unexpected situations.\n\nFor example, a particular user might be triggering a bad behavior in the broker that can impact performance for other tenants.\n\nIn this case, the particular user can be \"isolated\" a subset of brokers that will not serve any other traffic, until a proper fix that correctly handles the condition can be deployed.\n\nThis is a lightweight option of having multiple clusters for different users, since most of the other parts are still shared (ZK, BK,...).\n\n\n### Is there \"regex\" topic in Pulsar?\nThere is regex subscription coming up in Pulsar 2.0. See [PIP-13](https://github.com/apache/pulsar/wiki/PIP-13:-Subscribe-to-topics-represented-by-regular-expressions).\n\n### Does Pulsar have, or plan to have, a concept of log compaction where only the latest message with the same key will be kept ?\nYes, see [PIP-14](https://github.com/apache/pulsar/wiki/PIP-14:-Topic-compaction) for more details.\n\n### When I use an exclusive subscription to a partitioned topic, is the subscription attached to the \"whole topic\" or to a \"topic partition\"?\nOn a partitioned topic, you can use all the 3 supported subscription types (exclusive, failover, shared), same as with non partitioned topics.\nThe “subscription” concept is roughly similar to a “consumer-group” in Kafka. You can have multiple of them in the same topic, with different names.\n\nIf you use “exclusive”, a consumer will try to consume from all partitions, or fail if any partition is already being consumed.\n\nThe mode similar to Kafka is “failover” subscription. In this case, you have 1 active consumer per partition, the active/stand-by decision is made at the partition level, and Pulsar will make sure to spread the partition assignments evenly across consumer.\n\n### What is the proxy component?\nIt’s a component that was introduced recently. Essentially it’s a stateless proxy that speaks that Pulsar binary protocol. The motivation is to avoid (or overcome the impossibility) of direct connection between clients and brokers.\n\n---\n\n## Usage and Configuration\n### Can I manually change the number of bundles after creating namespaces?\nYes, you can split a given bundle manually.\n\n### Is the producer kafka wrapper thread-safe?\nThe producer wrapper should be thread-safe.\n\n### Can I just remove a subscription?\nYes, you can use the cli tool `bin/pulsar-admin persistent unsubscribe $TOPIC -s $SUBSCRIPTION`.\n\n### How are subscription modes set? Can I create new subscriptions over the WebSocket API?\nYes, you can set most of the producer/consumer configuration option in websocket, by passing them as HTTP query parameters like:\n`ws://localhost:8080/ws/consumer/persistent/public/default/my-topic/my-sub?subscriptionType=Shared`\n\nsee [the doc](http://pulsar.apache.org/docs/latest/clients/WebSocket/#RunningtheWebSocketservice-1fhsvp).\n\n### Is there any sort of order of operations or best practices on the upgrade procedure for a geo-replicated Pulsar cluster?\nIn general, updating the Pulsar brokers is an easy operation, since the brokers don't have local state. The typical rollout is a rolling upgrade, either doing 1 broker at a time or some percentage of them in parallel.\n\nThere are not complicated requirements to upgrade geo-replicated clusters, since we take particular care in ensuring backward and forward compatibility.\n\nBoth the client and the brokers are reporting their own protocol version and they're able to disable newer features if the other side doesn't support them yet.\n\nAdditionally, when making metadata breaking format changes (if the need arises), we make sure to spread the changes along at least 2 releases.\n\nThis is to always allow the possibility to downgrade a running cluster to a previous version, in case any server problem is identified in production.\n\nSo, one release will understand the new format while the next one will actually start using it.\n\n### Since Pulsar has configurable retention per namespace, can I set a \"forever\" value, ie., always keep all data in the namespaces?\nSo, retention applies to \"consumed\" messages. Ones, for which the consumer has already acknowledged the processing. By default, retention is 0, so it means data is deleted as soon as all consumers acknowledge. You can set retention to delay the retention.\n\nThat also means, that data is kept forever, by default, if the consumers are not acknowledging.\n\nThere is no currently \"infinite\" retention, other than setting to very high value.\n\n### How can a consumer \"replay\" a topic from the beginning, ie., where can I set an offset for the consumer?\n1. Use admin API (or CLI tool):\n    - Reset to a specific point in time (3h ago)\n    - Reset to a message id\n2. You can use the client API `seek`.\n\n### When create a consumer, does this affect other consumers ?\nThe key is that you should use different subscriptions for each consumer. Each subscription is completely independent from others.\n\n### The default when creating a consumer, is it to \"tail\" from \"now\" on the topic, or from the \"last acknowledged\" or something else?\nSo when you spin up a consumer, it will try to subscribe to the topic, if the subscription doesn't exist, a new one will be created, and it will be positioned at the end of the topic (\"now\").\n\nOnce you reconnect, the subscription will still be there and it will be positioned on the last acknowledged messages from the previous session.\n\n### I want some produce lock, i.e., to pessimistically or optimistically lock a specified topic so only one producer can write at a time and all further producers know they have to reprocess data before trying again to write a topic.\nTo ensure only one producer is connected, you just need to use the same \"producerName\", the broker will ensure that no 2 producers with same name are publishing on a given topic.\n\n### I tested the performance using PerformanceProducer between two server node with 10,000Mbits NIC(and I tested tcp throughput can be larger than 1GB/s). I saw that the max msg throughput is around 1000,000 msg/s when using little msg_size(such as 64/128Bytes), when I increased the msg_size to 1028 or larger, then the msg/s will decreased sharply to 150,000msg/s, and both has max throughput around   1600Mbit/s, which is far from 1GB/s.  And I'm curious that the throughput between producer and broker why can't excess 1600Mbit/s ?  It seems that the Producer executor only use one thread, is this the reason？Then I start two producer client jvm, the throughput increased not much, just about little beyond 1600Mbit/s. Any other reasons?\nMost probably, when increasing the payload size, you're reaching the disk max write rate on a single bookie.\n\nThere are few tricks that can be used to increase throughput (other than just partitioning)\n\n1. Enable striping in BK, by setting ensemble to bigger than write quorum. E.g. e=5 w=2 a=2. Write 2 copies of each message but stripe them across 5 bookies\n\n2. If there are already multiple topics/partitions, you can try to configure the bookies with multiple journals (e.g. 4). This should increase the throughput when the journal is on SSDs, since the controller has multiple IO queues and can efficiently sustain multiple threads each doing sequential writes\n\n- Option (1) you just configure it on a given pulsar namespace, look at \"namespaces set-persistence\" command\n\n- Option (2) needs to be configured in bookies\n\n### Is there any work on a Mesos Framework for Pulsar/Bookkeeper this point? Would this be useful?\nWe don’t have anything ready available for Mesos/DCOS though there should be nothing preventing it\n\nIt would surely be useful.\n\n\n### Is there an HDFS like interface?\nNot for Pulsar.There was some work in BK / DistributedLog community to have it but not at the messaging layer.\n\n### Where can I find information about `receiveAsync` parameters? In particular, is there a timeout as in `receive`?\nThere’s no other info about `receiveAsync()`. The method doesn’t take any parameters. Currently there’s no timeout on it. You can always set a timeout on the `CompletableFuture` itself, but the problem is how to cancel the future and avoid “getting” the message.\n\nWhat’s your use case for timeout on the `receiveAsync()`? Could that be achieved more easily by using the `MessageListener`?\n\n### Why do we choose to use bookkeeper to store consumer offset instead of zookeeper? I mean what's the benefits?\nZooKeeper is a “consensus” system that while it exposes a key/value interface is not meant to support a large volume of writes per second.\n\nZK is not an “horizontally scalable” system, because every node receive every transaction and keeps the whole data set. Effectively, ZK is based on a single “log” that is replicated consistently across the participants.\n\nThe max throughput we have observed on a well configured ZK on good hardware was around ~10K writes/s. If you want to do more than that, you would have to shard it..\n\nTo store consumers cursor positions, we need to write potentially a large number of updates per second. Typically we persist the cursor every 1 second, though the rate is configurable and if you want to reduce the amount of potential duplicates, you can increase the persistent frequency.\n\nWith BookKeeper it’s very efficient to have a large throughput across a huge number of different “logs”. In our case, we use 1 log per cursor, and it becomes feasible to persist every single cursor update.\n\n### I'm facing some issue using `.receiveAsync` that it seems to be related with `UnAckedMessageTracker` and `PartitionedConsumerImpl`. We are consuming messages with `receiveAsync`, doing instant `acknowledgeAsync` when message is received, after that the process will delay the next execution of itself. In such scenario we are consuming a lot more messages (repeated) than the num of messages produced. We are using Partitioned topics with setAckTimeout 30 seconds and I believe this issue could be related with `PartitionedConsumerImpl` because the same test in a non-partitioned topic does not generate any repeated message.\nPartitionedConsumer is composed of a set of regular consumers, one per partition. To have a single `receive()` abstraction, messages from all partitions are then pushed into a shared queue.\n\nThe thing is that the unacked message tracker works at the partition level.So when the timeout happens, it’s able to request redelivery for the messages and clear them from the queue when that happens,\nbut if the messages were already pushed into the shared queue, the “clearing” part will not happen.\n\n- the only quick workaround that I can think of is to increase the “ack-timeout” to a level in which timeout doesn’t occur in processing\n- another option would be to reduce the receiver queue size, so that less messages are sitting in the queue\n\n### Can I use bookkeeper newer v3 wire protocol in Pulsar? How can I enable it?\nThe answer is currently not, because we force the broker to use v2 protocol and that's not configurable at the moment.\n\n### Is \"kubernetes/generic/proxy.yaml\" meant to be used whenever we want to expose a Pulsar broker outside the Kubernetes cluster?\nYes, the “proxy” is an additional component to deploy a stateless proxy frontend that can be exposed through a load balancer and that doesn’t require direct connectivity to the actual brokers. No need to use it from within Kubernetes cluster. Also in some cases it’s simpler to have expose the brokers through `NodePort` or `ClusterIp` for other outside producer/consumers.\n\n### Is there a way of having both authentication and the Pulsar dashboard working at same time?\nThe key is that with authorization, the stats collector needs to access the APIs that require the credentials. That’s not a problem for stats collected through Prometheus but it is for the “Pulsar dashboard” which is where the per-topic stats are shown. I think that should be quite easy to fix.\n\n### How can I know when I've reached the end of the stream during replay?\nThere is no direct way because messages can still be published in the topic, and relying on the `readNext(timeout)` is not precise because the client might be temporarily disconnected from broker in that moment.\n\nOne option is to use `publishTimestamp` of messages. When you start replaying you can check current \"now\", then you replay util you hit a message with timestamp >= now.\n\nAnother option is to \"terminate\" the topic. Once a topic is \"terminated\", no more message can be published on the topic, a reader/consumer can check the `hasReachedEndOfTopic()` condition to know when that happened.\n\nA final option is to check the topic stats. This is a tiny bit involved, because it requires the admin client (or using REST) to get the stats for the topic and checking the \"backlog\". If the backlog is 0, it means we've hit the end.\n\n### How can I prevent an inactive topic to be deleted under any circumstance? I want to set no time or space limit for a certain namespace.\nThere’s not currently an option for “infinite” (though it sounds a good idea! maybe we could use `-1` for that). The only option now is to use INT_MAX for `retentionTimeInMinutes` and LONG_MAX for `retentionSizeInMB`. It’s not “infinite” but 4085 years of retention should probably be enough!\n\n### Is there a profiling option in Pulsar, so that we can breakdown the time costed in every stage? For instance, message A stay in queue 1ms, bk writing time 2ms(interval between sending to bk and receiving ack from bk) and so on.\nThere are latency stats at different stages. In the client (eg: reported every 1min in info logs).\nIn the broker: accessible through the broker metrics, and finally in bookies where there are several different latency metrics.\n\nIn broker there’s just the write latency on BK, because there is no other queuing involved in the write path.\n\n### How can I have multiple readers that each get all the messages from a topic from the beginning concurrently? I.e., no round-robin, no exclusivity\nyou can create reader with `MessageId.earliest`\n\n\n### Does broker validate if a property exists or not when producer/consumer connects ?\nyes, broker performs auth&auth while creating producer/consumer and this information presents under namespace policies.. so, if auth is enabled then broker does validation\n\n### From what I’ve seen so far, it seems that I’d instead want to do a partitioned topic when I want a firehose/mix of data, and shuffle that firehose in to specific topics per entity when I’d have more discrete consumers. Is that accurate?\nPrecisely, you can use either approach, and even combine them, depending on what is more convenient for the use case. The general traits to choose one or the other are:\n\n- Partitions -> Maintain a single “logical” topic but scale throughput to multiple machines. Also, ability to consume in order for a “partition” of the keys. In general, consumers are assigned a partition (and thus a subset of keys) without specifying anything.\n\n- Multiple topics -> When each topic represent some concrete existing “concept” in the application and it is “finite” (eg: using a topic per each user when the number of users is unbound and can be in the 100s of millions it’s not a good idea), within 10s or 100s of thousands. Having multiple topics makes it easier for a consumer to consume a specific portion of messages.\n\n### For subscribing to a large number of topics like that, would i need to call `subscribe` for each one individually, or is there some sort of wildcard capability?\nCurrently you can only subscribe individually, (though you can automate it by getting the list of topics and going through it), but we’re working on the wildcard subscribe and we’re targeting that for next release.\n\n### Hi, is the difference between a consumer and a reader documented somewhere?\nMain difference: a reader can be used when manually managing the offset/messageId, rather than relying on Pulsar to keep track of it with the acknowledgments\n- consumer -> managed subscriptions with acks and auto retention\n- reader -> always specify start message id on creation\n\n\n### Hey, question on routing mode for partitioned topics. What is the default configuration and what is used in the Kafka adaptor?\nThe default is to use the hash of the key on a message. If the message has no key, the producer will use a “default” partition (picks 1 random partition and use it for all the messages it publishes).\n\nThis is to maintain the same ordering guarantee when no partitions are there: per-producer ordering.\n\nThe same applies when using the Kafka wrapper.\n\n### I'm setting up bookies on AWS d2.4xlarge instances (16 cores, 122G memory, 12x2TB raid-0 hd). Do you have any recommendation for memory configuration for this kind of setup? For configurations like java heap, direct memory and dbStorage_writeCacheMaxSizeMb, dbStorage_readAheadCacheMaxSizeMb, dbStorage_rocksDB_blockCacheSize. BTW, I'm going to use journalSyncData=false since we cannot recover machines when they shutdown. So no fsync is required for every message.\nSince the VM has lot of RAM you can increase a lot from the defaults and leave the rest page cache. For JVM heap I'd say ~24g. WriteCacheMaxSize and ReadAheadCacheMaxSize are both coming from JVM direct memory.  I'd say to start with 16g @ 16g. For rocksdb block cache, which is allocated in JNI so it's completely out of JVM configuration, ideally you want to cache most of the indexes. I'd say 4gb should be enough to index all the data in the 24Tb storage space.\n\n### When there are multiple consumers for a topic, the broker reads once from bookies and send them to all consumers with some buffer? or go get from bookies all the time for each consumers ?\nIn general, all dispatching is done directly by broker memory. We only read from bookies when consumer are falling behind.\n\n### My bookies ledgers are running out of disk space? How can I find out what went wrong\nTBD\n- Expiry/TTL\n- Backlog Quotas\n- Retention Settings\n- Bookie configuration e.g. Garbage Collection\n"
        },
        {
          "name": "grafana",
          "type": "tree",
          "content": null
        },
        {
          "name": "jclouds-shaded",
          "type": "tree",
          "content": null
        },
        {
          "name": "jetcd-core-shaded",
          "type": "tree",
          "content": null
        },
        {
          "name": "lombok.config",
          "type": "blob",
          "size": 0.9169921875,
          "content": "#\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n#\n\n# this is the top level Lombok configuration file\n# see https://projectlombok.org/features/configuration for reference\n\nconfig.stopBubbling = true\n\n\n"
        },
        {
          "name": "managed-ledger",
          "type": "tree",
          "content": null
        },
        {
          "name": "microbench",
          "type": "tree",
          "content": null
        },
        {
          "name": "mvnw",
          "type": "blob",
          "size": 10.4150390625,
          "content": "#!/bin/sh\n# ----------------------------------------------------------------------------\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n# ----------------------------------------------------------------------------\n\n# ----------------------------------------------------------------------------\n# Apache Maven Wrapper startup batch script, version 3.3.2\n#\n# Optional ENV vars\n# -----------------\n#   JAVA_HOME - location of a JDK home dir, required when download maven via java source\n#   MVNW_REPOURL - repo url base for downloading maven distribution\n#   MVNW_USERNAME/MVNW_PASSWORD - user and password for downloading maven\n#   MVNW_VERBOSE - true: enable verbose log; debug: trace the mvnw script; others: silence the output\n# ----------------------------------------------------------------------------\n\nset -euf\n[ \"${MVNW_VERBOSE-}\" != debug ] || set -x\n\n# OS specific support.\nnative_path() { printf %s\\\\n \"$1\"; }\ncase \"$(uname)\" in\nCYGWIN* | MINGW*)\n  [ -z \"${JAVA_HOME-}\" ] || JAVA_HOME=\"$(cygpath --unix \"$JAVA_HOME\")\"\n  native_path() { cygpath --path --windows \"$1\"; }\n  ;;\nesac\n\n# set JAVACMD and JAVACCMD\nset_java_home() {\n  # For Cygwin and MinGW, ensure paths are in Unix format before anything is touched\n  if [ -n \"${JAVA_HOME-}\" ]; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ]; then\n      # IBM's JDK on AIX uses strange locations for the executables\n      JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n      JAVACCMD=\"$JAVA_HOME/jre/sh/javac\"\n    else\n      JAVACMD=\"$JAVA_HOME/bin/java\"\n      JAVACCMD=\"$JAVA_HOME/bin/javac\"\n\n      if [ ! -x \"$JAVACMD\" ] || [ ! -x \"$JAVACCMD\" ]; then\n        echo \"The JAVA_HOME environment variable is not defined correctly, so mvnw cannot run.\" >&2\n        echo \"JAVA_HOME is set to \\\"$JAVA_HOME\\\", but \\\"\\$JAVA_HOME/bin/java\\\" or \\\"\\$JAVA_HOME/bin/javac\\\" does not exist.\" >&2\n        return 1\n      fi\n    fi\n  else\n    JAVACMD=\"$(\n      'set' +e\n      'unset' -f command 2>/dev/null\n      'command' -v java\n    )\" || :\n    JAVACCMD=\"$(\n      'set' +e\n      'unset' -f command 2>/dev/null\n      'command' -v javac\n    )\" || :\n\n    if [ ! -x \"${JAVACMD-}\" ] || [ ! -x \"${JAVACCMD-}\" ]; then\n      echo \"The java/javac command does not exist in PATH nor is JAVA_HOME set, so mvnw cannot run.\" >&2\n      return 1\n    fi\n  fi\n}\n\n# hash string like Java String::hashCode\nhash_string() {\n  str=\"${1:-}\" h=0\n  while [ -n \"$str\" ]; do\n    char=\"${str%\"${str#?}\"}\"\n    h=$(((h * 31 + $(LC_CTYPE=C printf %d \"'$char\")) % 4294967296))\n    str=\"${str#?}\"\n  done\n  printf %x\\\\n $h\n}\n\nverbose() { :; }\n[ \"${MVNW_VERBOSE-}\" != true ] || verbose() { printf %s\\\\n \"${1-}\"; }\n\ndie() {\n  printf %s\\\\n \"$1\" >&2\n  exit 1\n}\n\ntrim() {\n  # MWRAPPER-139:\n  #   Trims trailing and leading whitespace, carriage returns, tabs, and linefeeds.\n  #   Needed for removing poorly interpreted newline sequences when running in more\n  #   exotic environments such as mingw bash on Windows.\n  printf \"%s\" \"${1}\" | tr -d '[:space:]'\n}\n\n# parse distributionUrl and optional distributionSha256Sum, requires .mvn/wrapper/maven-wrapper.properties\nwhile IFS=\"=\" read -r key value; do\n  case \"${key-}\" in\n  distributionUrl) distributionUrl=$(trim \"${value-}\") ;;\n  distributionSha256Sum) distributionSha256Sum=$(trim \"${value-}\") ;;\n  esac\ndone <\"${0%/*}/.mvn/wrapper/maven-wrapper.properties\"\n[ -n \"${distributionUrl-}\" ] || die \"cannot read distributionUrl property in ${0%/*}/.mvn/wrapper/maven-wrapper.properties\"\n\ncase \"${distributionUrl##*/}\" in\nmaven-mvnd-*bin.*)\n  MVN_CMD=mvnd.sh _MVNW_REPO_PATTERN=/maven/mvnd/\n  case \"${PROCESSOR_ARCHITECTURE-}${PROCESSOR_ARCHITEW6432-}:$(uname -a)\" in\n  *AMD64:CYGWIN* | *AMD64:MINGW*) distributionPlatform=windows-amd64 ;;\n  :Darwin*x86_64) distributionPlatform=darwin-amd64 ;;\n  :Darwin*arm64) distributionPlatform=darwin-aarch64 ;;\n  :Linux*x86_64*) distributionPlatform=linux-amd64 ;;\n  *)\n    echo \"Cannot detect native platform for mvnd on $(uname)-$(uname -m), use pure java version\" >&2\n    distributionPlatform=linux-amd64\n    ;;\n  esac\n  distributionUrl=\"${distributionUrl%-bin.*}-$distributionPlatform.zip\"\n  ;;\nmaven-mvnd-*) MVN_CMD=mvnd.sh _MVNW_REPO_PATTERN=/maven/mvnd/ ;;\n*) MVN_CMD=\"mvn${0##*/mvnw}\" _MVNW_REPO_PATTERN=/org/apache/maven/ ;;\nesac\n\n# apply MVNW_REPOURL and calculate MAVEN_HOME\n# maven home pattern: ~/.m2/wrapper/dists/{apache-maven-<version>,maven-mvnd-<version>-<platform>}/<hash>\n[ -z \"${MVNW_REPOURL-}\" ] || distributionUrl=\"$MVNW_REPOURL$_MVNW_REPO_PATTERN${distributionUrl#*\"$_MVNW_REPO_PATTERN\"}\"\ndistributionUrlName=\"${distributionUrl##*/}\"\ndistributionUrlNameMain=\"${distributionUrlName%.*}\"\ndistributionUrlNameMain=\"${distributionUrlNameMain%-bin}\"\nMAVEN_USER_HOME=\"${MAVEN_USER_HOME:-${HOME}/.m2}\"\nMAVEN_HOME=\"${MAVEN_USER_HOME}/wrapper/dists/${distributionUrlNameMain-}/$(hash_string \"$distributionUrl\")\"\n\nexec_maven() {\n  unset MVNW_VERBOSE MVNW_USERNAME MVNW_PASSWORD MVNW_REPOURL || :\n  exec \"$MAVEN_HOME/bin/$MVN_CMD\" \"$@\" || die \"cannot exec $MAVEN_HOME/bin/$MVN_CMD\"\n}\n\nif [ -d \"$MAVEN_HOME\" ]; then\n  verbose \"found existing MAVEN_HOME at $MAVEN_HOME\"\n  exec_maven \"$@\"\nfi\n\ncase \"${distributionUrl-}\" in\n*?-bin.zip | *?maven-mvnd-?*-?*.zip) ;;\n*) die \"distributionUrl is not valid, must match *-bin.zip or maven-mvnd-*.zip, but found '${distributionUrl-}'\" ;;\nesac\n\n# prepare tmp dir\nif TMP_DOWNLOAD_DIR=\"$(mktemp -d)\" && [ -d \"$TMP_DOWNLOAD_DIR\" ]; then\n  clean() { rm -rf -- \"$TMP_DOWNLOAD_DIR\"; }\n  trap clean HUP INT TERM EXIT\nelse\n  die \"cannot create temp dir\"\nfi\n\nmkdir -p -- \"${MAVEN_HOME%/*}\"\n\n# Download and Install Apache Maven\nverbose \"Couldn't find MAVEN_HOME, downloading and installing it ...\"\nverbose \"Downloading from: $distributionUrl\"\nverbose \"Downloading to: $TMP_DOWNLOAD_DIR/$distributionUrlName\"\n\n# select .zip or .tar.gz\nif ! command -v unzip >/dev/null; then\n  distributionUrl=\"${distributionUrl%.zip}.tar.gz\"\n  distributionUrlName=\"${distributionUrl##*/}\"\nfi\n\n# verbose opt\n__MVNW_QUIET_WGET=--quiet __MVNW_QUIET_CURL=--silent __MVNW_QUIET_UNZIP=-q __MVNW_QUIET_TAR=''\n[ \"${MVNW_VERBOSE-}\" != true ] || __MVNW_QUIET_WGET='' __MVNW_QUIET_CURL='' __MVNW_QUIET_UNZIP='' __MVNW_QUIET_TAR=v\n\n# normalize http auth\ncase \"${MVNW_PASSWORD:+has-password}\" in\n'') MVNW_USERNAME='' MVNW_PASSWORD='' ;;\nhas-password) [ -n \"${MVNW_USERNAME-}\" ] || MVNW_USERNAME='' MVNW_PASSWORD='' ;;\nesac\n\nif [ -z \"${MVNW_USERNAME-}\" ] && command -v wget >/dev/null; then\n  verbose \"Found wget ... using wget\"\n  wget ${__MVNW_QUIET_WGET:+\"$__MVNW_QUIET_WGET\"} \"$distributionUrl\" -O \"$TMP_DOWNLOAD_DIR/$distributionUrlName\" || die \"wget: Failed to fetch $distributionUrl\"\nelif [ -z \"${MVNW_USERNAME-}\" ] && command -v curl >/dev/null; then\n  verbose \"Found curl ... using curl\"\n  curl ${__MVNW_QUIET_CURL:+\"$__MVNW_QUIET_CURL\"} -f -L -o \"$TMP_DOWNLOAD_DIR/$distributionUrlName\" \"$distributionUrl\" || die \"curl: Failed to fetch $distributionUrl\"\nelif set_java_home; then\n  verbose \"Falling back to use Java to download\"\n  javaSource=\"$TMP_DOWNLOAD_DIR/Downloader.java\"\n  targetZip=\"$TMP_DOWNLOAD_DIR/$distributionUrlName\"\n  cat >\"$javaSource\" <<-END\n\tpublic class Downloader extends java.net.Authenticator\n\t{\n\t  protected java.net.PasswordAuthentication getPasswordAuthentication()\n\t  {\n\t    return new java.net.PasswordAuthentication( System.getenv( \"MVNW_USERNAME\" ), System.getenv( \"MVNW_PASSWORD\" ).toCharArray() );\n\t  }\n\t  public static void main( String[] args ) throws Exception\n\t  {\n\t    setDefault( new Downloader() );\n\t    java.nio.file.Files.copy( java.net.URI.create( args[0] ).toURL().openStream(), java.nio.file.Paths.get( args[1] ).toAbsolutePath().normalize() );\n\t  }\n\t}\n\tEND\n  # For Cygwin/MinGW, switch paths to Windows format before running javac and java\n  verbose \" - Compiling Downloader.java ...\"\n  \"$(native_path \"$JAVACCMD\")\" \"$(native_path \"$javaSource\")\" || die \"Failed to compile Downloader.java\"\n  verbose \" - Running Downloader.java ...\"\n  \"$(native_path \"$JAVACMD\")\" -cp \"$(native_path \"$TMP_DOWNLOAD_DIR\")\" Downloader \"$distributionUrl\" \"$(native_path \"$targetZip\")\"\nfi\n\n# If specified, validate the SHA-256 sum of the Maven distribution zip file\nif [ -n \"${distributionSha256Sum-}\" ]; then\n  distributionSha256Result=false\n  if [ \"$MVN_CMD\" = mvnd.sh ]; then\n    echo \"Checksum validation is not supported for maven-mvnd.\" >&2\n    echo \"Please disable validation by removing 'distributionSha256Sum' from your maven-wrapper.properties.\" >&2\n    exit 1\n  elif command -v sha256sum >/dev/null; then\n    if echo \"$distributionSha256Sum  $TMP_DOWNLOAD_DIR/$distributionUrlName\" | sha256sum -c >/dev/null 2>&1; then\n      distributionSha256Result=true\n    fi\n  elif command -v shasum >/dev/null; then\n    if echo \"$distributionSha256Sum  $TMP_DOWNLOAD_DIR/$distributionUrlName\" | shasum -a 256 -c >/dev/null 2>&1; then\n      distributionSha256Result=true\n    fi\n  else\n    echo \"Checksum validation was requested but neither 'sha256sum' or 'shasum' are available.\" >&2\n    echo \"Please install either command, or disable validation by removing 'distributionSha256Sum' from your maven-wrapper.properties.\" >&2\n    exit 1\n  fi\n  if [ $distributionSha256Result = false ]; then\n    echo \"Error: Failed to validate Maven distribution SHA-256, your Maven distribution might be compromised.\" >&2\n    echo \"If you updated your Maven version, you need to update the specified distributionSha256Sum property.\" >&2\n    exit 1\n  fi\nfi\n\n# unzip and move\nif command -v unzip >/dev/null; then\n  unzip ${__MVNW_QUIET_UNZIP:+\"$__MVNW_QUIET_UNZIP\"} \"$TMP_DOWNLOAD_DIR/$distributionUrlName\" -d \"$TMP_DOWNLOAD_DIR\" || die \"failed to unzip\"\nelse\n  tar xzf${__MVNW_QUIET_TAR:+\"$__MVNW_QUIET_TAR\"} \"$TMP_DOWNLOAD_DIR/$distributionUrlName\" -C \"$TMP_DOWNLOAD_DIR\" || die \"failed to untar\"\nfi\nprintf %s\\\\n \"$distributionUrl\" >\"$TMP_DOWNLOAD_DIR/$distributionUrlNameMain/mvnw.url\"\nmv -- \"$TMP_DOWNLOAD_DIR/$distributionUrlNameMain\" \"$MAVEN_HOME\" || [ -d \"$MAVEN_HOME\" ] || die \"fail to move MAVEN_HOME\"\n\nclean || :\nexec_maven \"$@\"\n"
        },
        {
          "name": "mvnw.cmd",
          "type": "blob",
          "size": 6.8955078125,
          "content": "<# : batch portion\r\n@REM ----------------------------------------------------------------------------\r\n@REM Licensed to the Apache Software Foundation (ASF) under one\r\n@REM or more contributor license agreements.  See the NOTICE file\r\n@REM distributed with this work for additional information\r\n@REM regarding copyright ownership.  The ASF licenses this file\r\n@REM to you under the Apache License, Version 2.0 (the\r\n@REM \"License\"); you may not use this file except in compliance\r\n@REM with the License.  You may obtain a copy of the License at\r\n@REM\r\n@REM    http://www.apache.org/licenses/LICENSE-2.0\r\n@REM\r\n@REM Unless required by applicable law or agreed to in writing,\r\n@REM software distributed under the License is distributed on an\r\n@REM \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n@REM KIND, either express or implied.  See the License for the\r\n@REM specific language governing permissions and limitations\r\n@REM under the License.\r\n@REM ----------------------------------------------------------------------------\r\n\r\n@REM ----------------------------------------------------------------------------\r\n@REM Apache Maven Wrapper startup batch script, version 3.3.2\r\n@REM\r\n@REM Optional ENV vars\r\n@REM   MVNW_REPOURL - repo url base for downloading maven distribution\r\n@REM   MVNW_USERNAME/MVNW_PASSWORD - user and password for downloading maven\r\n@REM   MVNW_VERBOSE - true: enable verbose log; others: silence the output\r\n@REM ----------------------------------------------------------------------------\r\n\r\n@IF \"%__MVNW_ARG0_NAME__%\"==\"\" (SET __MVNW_ARG0_NAME__=%~nx0)\r\n@SET __MVNW_CMD__=\r\n@SET __MVNW_ERROR__=\r\n@SET __MVNW_PSMODULEP_SAVE=%PSModulePath%\r\n@SET PSModulePath=\r\n@FOR /F \"usebackq tokens=1* delims==\" %%A IN (`powershell -noprofile \"& {$scriptDir='%~dp0'; $script='%__MVNW_ARG0_NAME__%'; icm -ScriptBlock ([Scriptblock]::Create((Get-Content -Raw '%~f0'))) -NoNewScope}\"`) DO @(\r\n  IF \"%%A\"==\"MVN_CMD\" (set __MVNW_CMD__=%%B) ELSE IF \"%%B\"==\"\" (echo %%A) ELSE (echo %%A=%%B)\r\n)\r\n@SET PSModulePath=%__MVNW_PSMODULEP_SAVE%\r\n@SET __MVNW_PSMODULEP_SAVE=\r\n@SET __MVNW_ARG0_NAME__=\r\n@SET MVNW_USERNAME=\r\n@SET MVNW_PASSWORD=\r\n@IF NOT \"%__MVNW_CMD__%\"==\"\" (%__MVNW_CMD__% %*)\r\n@echo Cannot start maven from wrapper >&2 && exit /b 1\r\n@GOTO :EOF\r\n: end batch / begin powershell #>\r\n\r\n$ErrorActionPreference = \"Stop\"\r\nif ($env:MVNW_VERBOSE -eq \"true\") {\r\n  $VerbosePreference = \"Continue\"\r\n}\r\n\r\n# calculate distributionUrl, requires .mvn/wrapper/maven-wrapper.properties\r\n$distributionUrl = (Get-Content -Raw \"$scriptDir/.mvn/wrapper/maven-wrapper.properties\" | ConvertFrom-StringData).distributionUrl\r\nif (!$distributionUrl) {\r\n  Write-Error \"cannot read distributionUrl property in $scriptDir/.mvn/wrapper/maven-wrapper.properties\"\r\n}\r\n\r\nswitch -wildcard -casesensitive ( $($distributionUrl -replace '^.*/','') ) {\r\n  \"maven-mvnd-*\" {\r\n    $USE_MVND = $true\r\n    $distributionUrl = $distributionUrl -replace '-bin\\.[^.]*$',\"-windows-amd64.zip\"\r\n    $MVN_CMD = \"mvnd.cmd\"\r\n    break\r\n  }\r\n  default {\r\n    $USE_MVND = $false\r\n    $MVN_CMD = $script -replace '^mvnw','mvn'\r\n    break\r\n  }\r\n}\r\n\r\n# apply MVNW_REPOURL and calculate MAVEN_HOME\r\n# maven home pattern: ~/.m2/wrapper/dists/{apache-maven-<version>,maven-mvnd-<version>-<platform>}/<hash>\r\nif ($env:MVNW_REPOURL) {\r\n  $MVNW_REPO_PATTERN = if ($USE_MVND) { \"/org/apache/maven/\" } else { \"/maven/mvnd/\" }\r\n  $distributionUrl = \"$env:MVNW_REPOURL$MVNW_REPO_PATTERN$($distributionUrl -replace '^.*'+$MVNW_REPO_PATTERN,'')\"\r\n}\r\n$distributionUrlName = $distributionUrl -replace '^.*/',''\r\n$distributionUrlNameMain = $distributionUrlName -replace '\\.[^.]*$','' -replace '-bin$',''\r\n$MAVEN_HOME_PARENT = \"$HOME/.m2/wrapper/dists/$distributionUrlNameMain\"\r\nif ($env:MAVEN_USER_HOME) {\r\n  $MAVEN_HOME_PARENT = \"$env:MAVEN_USER_HOME/wrapper/dists/$distributionUrlNameMain\"\r\n}\r\n$MAVEN_HOME_NAME = ([System.Security.Cryptography.MD5]::Create().ComputeHash([byte[]][char[]]$distributionUrl) | ForEach-Object {$_.ToString(\"x2\")}) -join ''\r\n$MAVEN_HOME = \"$MAVEN_HOME_PARENT/$MAVEN_HOME_NAME\"\r\n\r\nif (Test-Path -Path \"$MAVEN_HOME\" -PathType Container) {\r\n  Write-Verbose \"found existing MAVEN_HOME at $MAVEN_HOME\"\r\n  Write-Output \"MVN_CMD=$MAVEN_HOME/bin/$MVN_CMD\"\r\n  exit $?\r\n}\r\n\r\nif (! $distributionUrlNameMain -or ($distributionUrlName -eq $distributionUrlNameMain)) {\r\n  Write-Error \"distributionUrl is not valid, must end with *-bin.zip, but found $distributionUrl\"\r\n}\r\n\r\n# prepare tmp dir\r\n$TMP_DOWNLOAD_DIR_HOLDER = New-TemporaryFile\r\n$TMP_DOWNLOAD_DIR = New-Item -Itemtype Directory -Path \"$TMP_DOWNLOAD_DIR_HOLDER.dir\"\r\n$TMP_DOWNLOAD_DIR_HOLDER.Delete() | Out-Null\r\ntrap {\r\n  if ($TMP_DOWNLOAD_DIR.Exists) {\r\n    try { Remove-Item $TMP_DOWNLOAD_DIR -Recurse -Force | Out-Null }\r\n    catch { Write-Warning \"Cannot remove $TMP_DOWNLOAD_DIR\" }\r\n  }\r\n}\r\n\r\nNew-Item -Itemtype Directory -Path \"$MAVEN_HOME_PARENT\" -Force | Out-Null\r\n\r\n# Download and Install Apache Maven\r\nWrite-Verbose \"Couldn't find MAVEN_HOME, downloading and installing it ...\"\r\nWrite-Verbose \"Downloading from: $distributionUrl\"\r\nWrite-Verbose \"Downloading to: $TMP_DOWNLOAD_DIR/$distributionUrlName\"\r\n\r\n$webclient = New-Object System.Net.WebClient\r\nif ($env:MVNW_USERNAME -and $env:MVNW_PASSWORD) {\r\n  $webclient.Credentials = New-Object System.Net.NetworkCredential($env:MVNW_USERNAME, $env:MVNW_PASSWORD)\r\n}\r\n[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12\r\n$webclient.DownloadFile($distributionUrl, \"$TMP_DOWNLOAD_DIR/$distributionUrlName\") | Out-Null\r\n\r\n# If specified, validate the SHA-256 sum of the Maven distribution zip file\r\n$distributionSha256Sum = (Get-Content -Raw \"$scriptDir/.mvn/wrapper/maven-wrapper.properties\" | ConvertFrom-StringData).distributionSha256Sum\r\nif ($distributionSha256Sum) {\r\n  if ($USE_MVND) {\r\n    Write-Error \"Checksum validation is not supported for maven-mvnd. `nPlease disable validation by removing 'distributionSha256Sum' from your maven-wrapper.properties.\"\r\n  }\r\n  Import-Module $PSHOME\\Modules\\Microsoft.PowerShell.Utility -Function Get-FileHash\r\n  if ((Get-FileHash \"$TMP_DOWNLOAD_DIR/$distributionUrlName\" -Algorithm SHA256).Hash.ToLower() -ne $distributionSha256Sum) {\r\n    Write-Error \"Error: Failed to validate Maven distribution SHA-256, your Maven distribution might be compromised. If you updated your Maven version, you need to update the specified distributionSha256Sum property.\"\r\n  }\r\n}\r\n\r\n# unzip and move\r\nExpand-Archive \"$TMP_DOWNLOAD_DIR/$distributionUrlName\" -DestinationPath \"$TMP_DOWNLOAD_DIR\" | Out-Null\r\nRename-Item -Path \"$TMP_DOWNLOAD_DIR/$distributionUrlNameMain\" -NewName $MAVEN_HOME_NAME | Out-Null\r\ntry {\r\n  Move-Item -Path \"$TMP_DOWNLOAD_DIR/$MAVEN_HOME_NAME\" -Destination $MAVEN_HOME_PARENT | Out-Null\r\n} catch {\r\n  if (! (Test-Path -Path \"$MAVEN_HOME\" -PathType Container)) {\r\n    Write-Error \"fail to move MAVEN_HOME\"\r\n  }\r\n} finally {\r\n  try { Remove-Item $TMP_DOWNLOAD_DIR -Recurse -Force | Out-Null }\r\n  catch { Write-Warning \"Cannot remove $TMP_DOWNLOAD_DIR\" }\r\n}\r\n\r\nWrite-Output \"MVN_CMD=$MAVEN_HOME/bin/$MVN_CMD\"\r\n"
        },
        {
          "name": "pip",
          "type": "tree",
          "content": null
        },
        {
          "name": "pom.xml",
          "type": "blob",
          "size": 105.6787109375,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!--\n\n    Licensed to the Apache Software Foundation (ASF) under one\n    or more contributor license agreements.  See the NOTICE file\n    distributed with this work for additional information\n    regarding copyright ownership.  The ASF licenses this file\n    to you under the Apache License, Version 2.0 (the\n    \"License\"); you may not use this file except in compliance\n    with the License.  You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing,\n    software distributed under the License is distributed on an\n    \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n    KIND, either express or implied.  See the License for the\n    specific language governing permissions and limitations\n    under the License.\n\n-->\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n  <modelVersion>4.0.0</modelVersion>\n  <packaging>pom</packaging>\n  <parent>\n    <groupId>org.apache</groupId>\n    <artifactId>apache</artifactId>\n    <version>29</version>\n  </parent>\n\n  <groupId>org.apache.pulsar</groupId>\n  <artifactId>pulsar</artifactId>\n\n  <version>4.1.0-SNAPSHOT</version>\n\n  <name>Pulsar</name>\n  <description>Pulsar is a distributed pub-sub messaging platform with a very\nflexible messaging model and an intuitive client API.</description>\n  <url>https://github.com/apache/pulsar</url>\n\n  <organization>\n    <name>Apache Software Foundation</name>\n    <url>https://www.apache.org/</url>\n  </organization>\n  <inceptionYear>2017</inceptionYear>\n\n  <developers>\n    <developer>\n      <organization>Apache Pulsar developers</organization>\n      <organizationUrl>https://pulsar.apache.org/</organizationUrl>\n    </developer>\n  </developers>\n\n  <licenses>\n    <license>\n      <name>Apache License, Version 2.0</name>\n      <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>\n      <distribution>repo</distribution>\n    </license>\n  </licenses>\n\n  <scm>\n    <url>https://github.com/apache/pulsar</url>\n    <connection>scm:git:https://github.com/apache/pulsar.git</connection>\n    <developerConnection>scm:git:ssh://git@github.com:apache/pulsar.git</developerConnection>\n  </scm>\n\n  <ciManagement>\n    <system>GitHub Actions</system>\n    <url>https://github.com/apache/pulsar/actions</url>\n  </ciManagement>\n\n  <issueManagement>\n    <system>Github</system>\n    <url>https://github.com/apache/pulsar/issues</url>\n  </issueManagement>\n\n  <properties>\n    <maven.compiler.source>17</maven.compiler.source>\n    <maven.compiler.target>17</maven.compiler.target>\n    <pulsar.broker.compiler.release>${maven.compiler.target}</pulsar.broker.compiler.release>\n    <pulsar.client.compiler.release>8</pulsar.client.compiler.release>\n\n    <pulsar.client.python.version>3.5.0</pulsar.client.python.version>\n\n    <IMAGE_JDK_MAJOR_VERSION>21</IMAGE_JDK_MAJOR_VERSION>\n\n    <!--config keys to configure test selection -->\n    <include>**/Test*.java,**/*Test.java,**/*Tests.java,**/*TestCase.java</include>\n    <exclude/>\n    <groups/>\n    <excludedGroups>quarantine,flaky</excludedGroups>\n\n    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\n    <project.build.outputTimestamp>2024-10-14T13:32:50Z</project.build.outputTimestamp>\n    <redirectTestOutputToFile>true</redirectTestOutputToFile>\n\n    <!-- By default build for local Docker platform.\n         To create multi-arch image, pass -Ddocker.platforms=linux/arm64,linux/amd64\n    -->\n    <docker.platforms></docker.platforms>\n    <docker.skip.push>true</docker.skip.push>\n\n    <!-- required for running tests on JDK11+ -->\n    <test.additional.args>\n      --add-opens java.base/jdk.internal.loader=ALL-UNNAMED\n      --add-opens java.base/java.lang=ALL-UNNAMED <!--Mockito-->\n      --add-opens java.base/java.io=ALL-UNNAMED <!--Bookkeeper NativeIO-->\n      --add-opens java.base/java.util=ALL-UNNAMED <!--System Lambda-->\n      --add-opens java.base/sun.net=ALL-UNNAMED <!--netty.DnsResolverUtil-->\n      --add-opens java.management/sun.management=ALL-UNNAMED <!--JvmDefaultGCMetricsLogger & MBeanStatsGenerator-->\n      --add-opens jdk.management/com.sun.management.internal=ALL-UNNAMED <!--MBeanStatsGenerator-->\n      --add-opens java.base/jdk.internal.platform=ALL-UNNAMED <!--LinuxInfoUtils-->\n    </test.additional.args>\n    <testMaxHeapSize>1300M</testMaxHeapSize>\n    <testReuseFork>true</testReuseFork>\n    <testForkCount>4</testForkCount>\n    <testRealAWS>false</testRealAWS>\n    <testRetryCount>1</testRetryCount>\n    <testFailFast>true</testFailFast>\n    <testFailFastFile></testFailFastFile>\n    <testJacocoAgentArgument/>\n    <integrationtest.coverage.enabled>false</integrationtest.coverage.enabled>\n    <integrationtest.coverage.dir>${project.build.directory}</integrationtest.coverage.dir>\n    <!-- skip jacoco report by default since it's not a proper aggregate report -->\n    <jacoco.report.skip>true</jacoco.report.skip>\n    <testHeapDumpPath>/tmp</testHeapDumpPath>\n    <surefire.shutdown>kill</surefire.shutdown>\n    <docker.organization>apachepulsar</docker.organization>\n    <docker.image>pulsar</docker.image>\n    <docker.tag>latest</docker.tag>\n    <skipSourceReleaseAssembly>false</skipSourceReleaseAssembly>\n    <skipBuildDistribution>false</skipBuildDistribution>\n    <shadePluginPhase>package</shadePluginPhase>\n    <narPluginPhase>package</narPluginPhase>\n\n    <!-- apache commons -->\n    <commons-compress.version>1.26.0</commons-compress.version>\n\n    <bookkeeper.version>4.17.1</bookkeeper.version>\n    <zookeeper.version>3.9.3</zookeeper.version>\n    <commons-cli.version>1.5.0</commons-cli.version>\n    <commons-text.version>1.10.0</commons-text.version>\n    <snappy.version>1.1.10.5</snappy.version> <!-- ZooKeeper server -->\n    <dropwizardmetrics.version>4.1.12.1</dropwizardmetrics.version> <!-- ZooKeeper server -->\n    <curator.version>5.7.1</curator.version>\n    <netty.version>4.1.116.Final</netty.version>\n    <netty-iouring.version>0.0.26.Final</netty-iouring.version>\n    <jetty.version>9.4.56.v20240826</jetty.version>\n    <conscrypt.version>2.5.2</conscrypt.version>\n    <jersey.version>2.42</jersey.version>\n    <athenz.version>1.10.50</athenz.version>\n    <prometheus.version>0.16.0</prometheus.version>\n    <vertx.version>4.5.10</vertx.version>\n    <rocksdb.version>7.9.2</rocksdb.version>\n    <slf4j.version>2.0.13</slf4j.version>\n    <commons.collections4.version>4.4</commons.collections4.version>\n    <log4j2.version>2.23.1</log4j2.version>\n    <bouncycastle.version>1.78.1</bouncycastle.version>\n    <bouncycastle.bcpkix-fips.version>1.0.7</bouncycastle.bcpkix-fips.version>\n    <bouncycastle.bc-fips.version>1.0.2.5</bouncycastle.bc-fips.version>\n    <jackson.version>2.17.2</jackson.version>\n    <fastutil.version>8.5.14</fastutil.version>\n    <reflections.version>0.10.2</reflections.version>\n    <swagger.version>1.6.2</swagger.version>\n    <puppycrawl.checkstyle.version>10.14.2</puppycrawl.checkstyle.version>\n    <docker-maven.version>0.45.1</docker-maven.version>\n    <docker.verbose>true</docker.verbose>\n    <typetools.version>0.5.0</typetools.version>\n    <byte-buddy.version>1.14.12</byte-buddy.version>\n    <zt-zip.version>1.17</zt-zip.version>\n    <protobuf3.version>3.25.5</protobuf3.version>\n    <protoc3.version>${protobuf3.version}</protoc3.version>\n    <grpc.version>1.56.1</grpc.version>\n    <google-http-client.version>1.41.0</google-http-client.version>\n    <perfmark.version>0.26.0</perfmark.version>\n    <protoc-gen-grpc-java.version>${grpc.version}</protoc-gen-grpc-java.version>\n    <gson.version>2.8.9</gson.version>\n    <system-lambda.version>1.2.1</system-lambda.version>\n    <sketches.version>0.8.3</sketches.version>\n    <hbc-core.version>2.2.0</hbc-core.version>\n    <cassandra.version>3.11.2</cassandra.version>\n    <aerospike-client.version>4.5.0</aerospike-client.version>\n    <kafka-client.version>3.4.0</kafka-client.version>\n    <rabbitmq-client.version>5.18.0</rabbitmq-client.version>\n    <aws-sdk.version>1.12.638</aws-sdk.version>\n    <avro.version>1.11.4</avro.version>\n    <joda.version>2.10.10</joda.version>\n    <jclouds.version>2.6.0</jclouds.version>\n    <guice.version>5.1.0</guice.version>\n    <sqlite-jdbc.version>3.42.0.0</sqlite-jdbc.version>\n    <mysql-jdbc.version>8.0.11</mysql-jdbc.version>\n    <postgresql-jdbc.version>42.5.5</postgresql-jdbc.version>\n    <clickhouse-jdbc.version>0.4.6</clickhouse-jdbc.version>\n    <mariadb-jdbc.version>2.7.5</mariadb-jdbc.version>\n    <openmldb-jdbc.version>0.4.4-hotfix1</openmldb-jdbc.version>\n    <json-smart.version>2.4.10</json-smart.version>\n    <opensearch.version>2.16.0</opensearch.version>\n    <elasticsearch-java.version>8.12.1</elasticsearch-java.version>\n    <debezium.version>1.9.7.Final</debezium.version>\n    <debezium.postgresql.version>42.5.5</debezium.postgresql.version>\n    <debezium.mysql.version>8.0.30</debezium.mysql.version>\n    <!-- Override version that brings CVE-2022-3143 with debezium -->\n    <wildfly-elytron.version>1.15.16.Final</wildfly-elytron.version>\n    <jsonwebtoken.version>0.11.1</jsonwebtoken.version>\n    <opencensus.version>0.28.0</opencensus.version>\n    <hadoop3.version>3.4.0</hadoop3.version>\n    <dnsjava3.version>3.6.2</dnsjava3.version>\n    <hdfs-offload-version3>${hadoop3.version}</hdfs-offload-version3>\n    <hbase.version>2.6.0-hadoop3</hbase.version>\n    <guava.version>32.1.2-jre</guava.version>\n    <jcip.version>1.0</jcip.version>\n    <prometheus-jmx.version>0.16.1</prometheus-jmx.version>\n    <confluent.version>6.2.8</confluent.version>\n    <aircompressor.version>0.27</aircompressor.version>\n    <asynchttpclient.version>2.12.4</asynchttpclient.version>\n    <commons-lang3.version>3.11</commons-lang3.version>\n    <commons-configuration.version>1.10</commons-configuration.version>\n    <commons-io.version>2.18.0</commons-io.version>\n    <commons-codec.version>1.15</commons-codec.version>\n    <jakarta.ws.rs-api.version>2.1.6</jakarta.ws.rs-api.version>\n    <hdrHistogram.version>2.1.9</hdrHistogram.version>\n    <javax.servlet-api>3.1.0</javax.servlet-api>\n    <caffeine.version>2.9.1</caffeine.version>\n    <java-semver.version>0.9.0</java-semver.version>\n    <jline.version>2.14.6</jline.version>\n    <jline3.version>3.21.0</jline3.version>\n    <hppc.version>0.9.1</hppc.version>\n    <spark-streaming_2.10.version>2.1.0</spark-streaming_2.10.version>\n    <assertj-core.version>3.24.2</assertj-core.version>\n    <lombok.version>1.18.36</lombok.version>\n    <jakarta.annotation-api.version>1.3.5</jakarta.annotation-api.version>\n    <jaxb-api>2.3.1</jaxb-api>\n    <jakarta.activation.version>1.2.2</jakarta.activation.version>\n    <jakarta.xml.bind.version>2.3.3</jakarta.xml.bind.version>\n    <jakarta.validation.version>2.0.2</jakarta.validation.version>\n    <jna.version>5.12.1</jna.version>\n    <kubernetesclient.version>18.0.0</kubernetesclient.version>\n    <jose4j.version>0.9.4</jose4j.version>\n    <okhttp3.version>4.9.3</okhttp3.version>\n    <!-- use okio version that matches the okhttp3 version -->\n    <okio.version>3.4.0</okio.version>\n    <!-- override kotlin-stdlib used by okio in order to address CVE-2020-29582 -->\n    <kotlin-stdlib.version>1.8.20</kotlin-stdlib.version>\n    <nsq-client.version>1.0</nsq-client.version>\n    <cron-utils.version>9.1.6</cron-utils.version>\n    <spring.version>6.1.14</spring.version>\n    <apache-http-client.version>4.5.13</apache-http-client.version>\n    <apache-httpcomponents.version>4.4.15</apache-httpcomponents.version>\n    <jetcd.version>0.7.7</jetcd.version>\n    <oxia.version>0.4.10</oxia.version>\n    <snakeyaml.version>2.0</snakeyaml.version>\n    <ant.version>1.10.12</ant.version>\n    <seancfoley.ipaddress.version>5.5.0</seancfoley.ipaddress.version>\n    <disruptor.version>3.4.3</disruptor.version>\n    <zstd-jni.version>1.5.2-3</zstd-jni.version>\n    <netty-reactive-streams.version>2.0.6</netty-reactive-streams.version>\n    <opentelemetry.version>1.45.0</opentelemetry.version>\n    <opentelemetry.alpha.version>${opentelemetry.version}-alpha</opentelemetry.alpha.version>\n    <opentelemetry.instrumentation.version>1.33.6</opentelemetry.instrumentation.version>\n    <opentelemetry.instrumentation.alpha.version>${opentelemetry.instrumentation.version}-alpha</opentelemetry.instrumentation.alpha.version>\n    <opentelemetry.semconv.version>1.29.0-alpha</opentelemetry.semconv.version>\n    <picocli.version>4.7.5</picocli.version>\n    <re2j.version>1.7</re2j.version>\n    <completable-futures.version>0.3.6</completable-futures.version>\n    <failsafe.version>3.3.2</failsafe.version>\n\n    <!-- test dependencies -->\n    <testcontainers.version>1.18.3</testcontainers.version>\n    <hamcrest.version>2.2</hamcrest.version>\n    <restassured.version>5.4.0</restassured.version>\n\n    <!-- Set docker-java.version to the version of docker-java used in Testcontainers -->\n    <docker-java.version>3.3.0</docker-java.version>\n    <kerby.version>1.1.1</kerby.version>\n    <testng.version>7.7.1</testng.version>\n    <mockito.version>5.6.0</mockito.version>\n    <javassist.version>3.25.0-GA</javassist.version>\n    <skyscreamer.version>1.5.0</skyscreamer.version>\n    <objenesis.version>3.3</objenesis.version> <!-- should match mockito-core objenesis version -->\n    <awaitility.version>4.2.0</awaitility.version>\n    <jettison.version>1.5.4</jettison.version>\n    <woodstox.version>5.4.0</woodstox.version>\n    <wiremock.version>2.33.2</wiremock.version>\n    <consolecaptor.version>1.0.3</consolecaptor.version>\n\n    <!-- Plugin dependencies -->\n    <protobuf-maven-plugin.version>0.6.1</protobuf-maven-plugin.version>\n    <exec-maven-plugin.version>3.0.0</exec-maven-plugin.version>\n    <license-maven-plugin.version>4.1</license-maven-plugin.version>\n    <directory-maven-plugin.version>1.0</directory-maven-plugin.version>\n    <maven-enforcer-plugin.version>3.3.0</maven-enforcer-plugin.version>\n    <!-- surefire.version is defined in apache parent pom -->\n    <!-- it is used for surefire, failsafe and surefire-report plugins -->\n    <surefire.version>3.1.0</surefire.version>\n    <maven-assembly-plugin.version>3.5.0</maven-assembly-plugin.version>\n    <maven-compiler-plugin.version>3.11.0</maven-compiler-plugin.version>\n    <maven-dependency-plugin.version>3.5.0</maven-dependency-plugin.version>\n    <maven-modernizer-plugin.version>2.3.0</maven-modernizer-plugin.version>\n    <maven-shade-plugin>3.6.0</maven-shade-plugin>\n    <maven-antrun-plugin.version>3.1.0</maven-antrun-plugin.version>\n    <build-helper-maven-plugin.version>3.6.0</build-helper-maven-plugin.version>\n    <properties-maven-plugin.version>1.1.0</properties-maven-plugin.version>\n    <nifi-nar-maven-plugin.version>1.5.0</nifi-nar-maven-plugin.version>\n    <maven-checkstyle-plugin.version>3.1.2</maven-checkstyle-plugin.version>\n    <git-commit-id-plugin.version>4.9.10</git-commit-id-plugin.version>\n    <wagon-ssh-external.version>3.5.3</wagon-ssh-external.version>\n    <os-maven-plugin.version>1.7.1</os-maven-plugin.version>\n    <jacoco-maven-plugin.version>0.8.12</jacoco-maven-plugin.version>\n    <spotbugs-maven-plugin.version>4.7.3.6</spotbugs-maven-plugin.version>\n    <spotbugs.version>4.7.3</spotbugs.version>\n    <errorprone.version>2.24.0</errorprone.version>\n    <errorprone-slf4j.version>0.1.21</errorprone-slf4j.version>\n    <j2objc-annotations.version>1.3</j2objc-annotations.version>\n    <lightproto-maven-plugin.version>0.4</lightproto-maven-plugin.version>\n    <build-helper-maven-plugin.version>3.6.0</build-helper-maven-plugin.version>\n    <dependency-check-maven.version>10.0.2</dependency-check-maven.version>\n    <roaringbitmap.version>1.2.0</roaringbitmap.version>\n    <extra-enforcer-rules.version>1.6.1</extra-enforcer-rules.version>\n    <oshi.version>6.4.0</oshi.version>\n    <checkerframework.version>3.33.0</checkerframework.version>\n  </properties>\n\n  <dependencyManagement>\n    <dependencies>\n\n      <dependency>\n        <groupId>org.jline</groupId>\n        <artifactId>jline</artifactId>\n        <version>${jline3.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>org.asynchttpclient</groupId>\n        <artifactId>async-http-client</artifactId>\n        <version>${asynchttpclient.version}</version>\n        <exclusions>\n          <exclusion>\n            <groupId>io.netty</groupId>\n            <artifactId>*</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>com.typesafe.netty</groupId>\n            <artifactId>netty-reactive-streams</artifactId>\n          </exclusion>\n        </exclusions>\n      </dependency>\n\n      <dependency>\n        <groupId>org.testng</groupId>\n        <artifactId>testng</artifactId>\n        <version>${testng.version}</version>\n        <exclusions>\n            <exclusion>\n                <groupId>org.yaml</groupId>\n                <artifactId>*</artifactId>\n            </exclusion>\n            <exclusion>\n              <groupId>org.slf4j</groupId>\n              <artifactId>*</artifactId>\n            </exclusion>\n        </exclusions>\n      </dependency>\n\n      <dependency>\n        <groupId>org.hamcrest</groupId>\n        <artifactId>hamcrest</artifactId>\n        <version>${hamcrest.version}</version>\n        <scope>test</scope>\n      </dependency>\n\n      <dependency>\n        <groupId>org.awaitility</groupId>\n        <artifactId>awaitility</artifactId>\n        <version>${awaitility.version}</version>\n        <scope>test</scope>\n      </dependency>\n\n      <dependency>\n        <groupId>org.mockito</groupId>\n        <artifactId>mockito-core</artifactId>\n        <version>${mockito.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>dev.failsafe</groupId>\n        <artifactId>failsafe</artifactId>\n        <version>${failsafe.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>org.apache.zookeeper</groupId>\n        <artifactId>zookeeper</artifactId>\n        <version>${zookeeper.version}</version>\n        <exclusions>\n          <exclusion>\n            <groupId>ch.qos.logback</groupId>\n            <artifactId>logback-core</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>ch.qos.logback</groupId>\n            <artifactId>logback-classic</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>io.netty</groupId>\n            <artifactId>netty-tcnative</artifactId>\n          </exclusion>\n        </exclusions>\n      </dependency>\n      <dependency>\n        <groupId>org.apache.zookeeper</groupId>\n        <artifactId>zookeeper-jute</artifactId>\n        <version>${zookeeper.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>commons-cli</groupId>\n        <artifactId>commons-cli</artifactId>\n        <version>${commons-cli.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>io.dropwizard.metrics</groupId>\n        <artifactId>metrics-core</artifactId>\n        <version>${dropwizardmetrics.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>io.dropwizard.metrics</groupId>\n        <artifactId>metrics-graphite</artifactId>\n        <version>${dropwizardmetrics.version}</version>\n        <exclusions>\n          <exclusion>\n            <groupId>com.rabbitmq</groupId>\n            <artifactId>amqp-client</artifactId>\n          </exclusion>\n        </exclusions>\n      </dependency>\n      <dependency>\n        <groupId>io.dropwizard.metrics</groupId>\n        <artifactId>metrics-jvm</artifactId>\n        <version>${dropwizardmetrics.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.xerial.snappy</groupId>\n        <artifactId>snappy-java</artifactId>\n        <version>${snappy.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.apache.zookeeper</groupId>\n        <artifactId>zookeeper</artifactId>\n        <classifier>tests</classifier>\n        <version>${zookeeper.version}</version>\n        <exclusions>\n          <exclusion>\n            <groupId>ch.qos.logback</groupId>\n            <artifactId>logback-core</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>ch.qos.logback</groupId>\n            <artifactId>logback-classic</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>io.netty</groupId>\n            <artifactId>netty-tcnative</artifactId>\n          </exclusion>\n        </exclusions>\n      </dependency>\n\n      <dependency>\n        <groupId>org.apache.bookkeeper</groupId>\n        <artifactId>bookkeeper-server</artifactId>\n        <version>${bookkeeper.version}</version>\n        <exclusions>\n          <exclusion>\n            <groupId>org.bouncycastle</groupId>\n            <artifactId>*</artifactId>\n          </exclusion>\n          <exclusion>\n            <artifactId>log4j-slf4j-impl</artifactId>\n            <groupId>org.apache.logging.log4j</groupId>\n          </exclusion>\n          <exclusion>\n            <artifactId>slf4j-log4j12</artifactId>\n            <groupId>org.slf4j</groupId>\n          </exclusion>\n          <exclusion>\n            <artifactId>log4j</artifactId>\n            <groupId>log4j</groupId>\n          </exclusion>\n          <exclusion>\n            <groupId>org.jboss.netty</groupId>\n            <artifactId>netty</artifactId>\n          </exclusion>\n          <!-- exclude all netty dependencies, use whatever pulsar is using -->\n          <exclusion>\n            <groupId>io.netty</groupId>\n            <artifactId>netty-*</artifactId>\n          </exclusion>\n        </exclusions>\n      </dependency>\n\n      <dependency>\n        <groupId>org.apache.bookkeeper</groupId>\n        <artifactId>cpu-affinity</artifactId>\n        <version>${bookkeeper.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>io.vertx</groupId>\n        <artifactId>vertx-core</artifactId>\n        <version>${vertx.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>io.vertx</groupId>\n        <artifactId>vertx-web</artifactId>\n        <version>${vertx.version}</version>\n      </dependency>\n      <dependency>\n          <groupId>io.vertx</groupId>\n          <artifactId>vertx-grpc</artifactId>\n          <version>${vertx.version}</version>\n      </dependency>\n\n      <dependency>\n         <groupId>org.apache.curator</groupId>\n         <artifactId>curator-recipes</artifactId>\n         <version>${curator.version}</version>\n         <exclusions>\n             <exclusion>\n                 <groupId>org.apache.zookeeper</groupId>\n                 <artifactId>*</artifactId>\n             </exclusion>\n         </exclusions>\n      </dependency>\n\n      <dependency>\n        <groupId>org.apache.bookkeeper</groupId>\n        <artifactId>bookkeeper-common-allocator</artifactId>\n        <version>${bookkeeper.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>org.apache.bookkeeper</groupId>\n        <artifactId>bookkeeper-tools-framework</artifactId>\n        <version>${bookkeeper.version}</version>\n      </dependency>\n\n      <!-- reflection libs -->\n      <dependency>\n        <groupId>org.reflections</groupId>\n        <artifactId>reflections</artifactId>\n        <version>${reflections.version}</version>\n      </dependency>\n\n      <!-- exclude the grpc version from bookkeeper and use the one defined here -->\n      <dependency>\n        <groupId>org.apache.bookkeeper</groupId>\n        <artifactId>stream-storage-java-client</artifactId>\n        <version>${bookkeeper.version}</version>\n        <exclusions>\n          <exclusion>\n            <groupId>io.grpc</groupId>\n            <artifactId>grpc-all</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>io.grpc</groupId>\n            <artifactId>grpc-testing</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>io.grpc</groupId>\n            <artifactId>grpc-okhttp</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>com.squareup.okhttp</groupId>\n            <artifactId>okhttp</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>com.squareup.okio</groupId>\n            <artifactId>okio</artifactId>\n          </exclusion>\n          <exclusion>\n            <artifactId>jose4j</artifactId>\n            <groupId>org.bitbucket.b_c</groupId>\n          </exclusion>\n          <exclusion>\n            <groupId>io.grpc</groupId>\n            <artifactId>grpc-netty</artifactId>\n          </exclusion>\n        </exclusions>\n      </dependency>\n\n      <!-- exclude the grpc version from bookkeeper and use the one defined here -->\n      <dependency>\n        <groupId>org.apache.bookkeeper</groupId>\n        <artifactId>stream-storage-server</artifactId>\n        <version>${bookkeeper.version}</version>\n        <exclusions>\n          <exclusion>\n            <groupId>io.grpc</groupId>\n            <artifactId>grpc-all</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>io.grpc</groupId>\n            <artifactId>grpc-okhttp</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>com.squareup.okhttp</groupId>\n            <artifactId>okhttp</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>com.squareup.okio</groupId>\n            <artifactId>okio</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>org.codehaus.jackson</groupId>\n            <artifactId>jackson-mapper-asl</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>org.inferred</groupId>\n            <artifactId>freebuilder</artifactId>\n          </exclusion>\n        </exclusions>\n      </dependency>\n\n      <dependency>\n        <groupId>io.grpc</groupId>\n        <artifactId>grpc-util</artifactId>\n        <!-- This is only used for JEtcd so far. Once we upgrade Grpc to >= 1.60, we can remove the special version pin -->\n        <version>1.60.0</version>\n      </dependency>\n\n      <dependency>\n        <groupId>org.apache.bookkeeper</groupId>\n        <artifactId>bookkeeper-common</artifactId>\n        <version>${bookkeeper.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>org.apache.bookkeeper.stats</groupId>\n        <artifactId>bookkeeper-stats-api</artifactId>\n        <version>${bookkeeper.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>org.apache.bookkeeper.stats</groupId>\n        <artifactId>datasketches-metrics-provider</artifactId>\n        <version>${bookkeeper.version}</version>\n        <exclusions>\n          <exclusion>\n            <artifactId>slf4j-log4j12</artifactId>\n            <groupId>org.slf4j</groupId>\n          </exclusion>\n        </exclusions>\n      </dependency>\n\n      <dependency>\n        <groupId>org.apache.bookkeeper.stats</groupId>\n        <artifactId>prometheus-metrics-provider</artifactId>\n        <version>${bookkeeper.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>com.google.re2j</groupId>\n        <artifactId>re2j</artifactId>\n        <version>${re2j.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>com.spotify</groupId>\n        <artifactId>completable-futures</artifactId>\n        <version>${completable-futures.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>org.rocksdb</groupId>\n        <artifactId>rocksdbjni</artifactId>\n        <version>${rocksdb.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>org.bitbucket.b_c</groupId>\n        <artifactId>jose4j</artifactId>\n        <version>${jose4j.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>org.eclipse.jetty</groupId>\n        <artifactId>jetty-server</artifactId>\n        <version>${jetty.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>org.eclipse.jetty</groupId>\n        <artifactId>jetty-alpn-conscrypt-server</artifactId>\n        <version>${jetty.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>org.conscrypt</groupId>\n        <artifactId>conscrypt-openjdk-uber</artifactId>\n        <version>${conscrypt.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>org.eclipse.jetty</groupId>\n        <artifactId>jetty-bom</artifactId>\n        <version>${jetty.version}</version>\n        <type>pom</type>\n        <scope>import</scope>\n      </dependency>\n\n      <dependency>\n        <groupId>io.netty</groupId>\n        <artifactId>netty-bom</artifactId>\n        <version>${netty.version}</version>\n        <type>pom</type>\n        <scope>import</scope>\n      </dependency>\n\n      <dependency>\n        <groupId>io.netty.incubator</groupId>\n        <artifactId>netty-incubator-transport-classes-io_uring</artifactId>\n        <version>${netty-iouring.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>io.netty.incubator</groupId>\n        <artifactId>netty-incubator-transport-native-io_uring</artifactId>\n        <version>${netty-iouring.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>io.netty.incubator</groupId>\n        <artifactId>netty-incubator-transport-native-io_uring</artifactId>\n        <version>${netty-iouring.version}</version>\n        <classifier>linux-x86_64</classifier>\n      </dependency>\n      <dependency>\n        <groupId>io.netty.incubator</groupId>\n        <artifactId>netty-incubator-transport-native-io_uring</artifactId>\n        <version>${netty-iouring.version}</version>\n        <classifier>linux-aarch_64</classifier>\n      </dependency>\n\n      <dependency>\n        <groupId>info.picocli</groupId>\n        <artifactId>picocli</artifactId>\n        <version>${picocli.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>info.picocli</groupId>\n        <artifactId>picocli-shell-jline3</artifactId>\n        <version>${picocli.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>com.google.guava</groupId>\n        <artifactId>guava</artifactId>\n        <version>${guava.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>com.google.inject</groupId>\n        <artifactId>guice</artifactId>\n        <version>${guice.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>com.google.inject.extensions</groupId>\n        <artifactId>guice-assistedinject</artifactId>\n        <version>${guice.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>org.apache.commons</groupId>\n        <artifactId>commons-lang3</artifactId>\n        <version>${commons-lang3.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>org.apache.commons</groupId>\n        <artifactId>commons-compress</artifactId>\n        <version>${commons-compress.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>commons-configuration</groupId>\n        <artifactId>commons-configuration</artifactId>\n        <version>${commons-configuration.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>commons-io</groupId>\n        <artifactId>commons-io</artifactId>\n        <version>${commons-io.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>org.apache.commons</groupId>\n        <artifactId>commons-text</artifactId>\n        <version>${commons-text.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>org.slf4j</groupId>\n        <artifactId>slf4j-bom</artifactId>\n        <version>${slf4j.version}</version>\n        <type>pom</type>\n        <scope>import</scope>\n      </dependency>\n\n      <dependency>\n        <groupId>org.apache.logging.log4j</groupId>\n        <artifactId>log4j-bom</artifactId>\n        <version>${log4j2.version}</version>\n        <type>pom</type>\n        <scope>import</scope>\n      </dependency>\n\n      <dependency>\n        <groupId>commons-codec</groupId>\n        <artifactId>commons-codec</artifactId>\n        <version>${commons-codec.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>org.glassfish.jersey.core</groupId>\n        <artifactId>jersey-server</artifactId>\n        <version>${jersey.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>org.glassfish.jersey.core</groupId>\n        <artifactId>jersey-client</artifactId>\n        <version>${jersey.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>org.glassfish.jersey.inject</groupId>\n        <artifactId>jersey-hk2</artifactId>\n        <version>${jersey.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>org.glassfish.jersey.containers</groupId>\n        <artifactId>jersey-container-servlet-core</artifactId>\n        <version>${jersey.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>org.glassfish.jersey.containers</groupId>\n        <artifactId>jersey-container-servlet</artifactId>\n        <version>${jersey.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>jakarta.ws.rs</groupId>\n        <artifactId>jakarta.ws.rs-api</artifactId>\n        <version>${jakarta.ws.rs-api.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>org.glassfish.jersey.media</groupId>\n        <artifactId>jersey-media-json-jackson</artifactId>\n        <version>${jersey.version}</version>\n        <exclusions>\n          <exclusion>\n            <groupId>jakarta.activation</groupId>\n            <artifactId>jakarta.activation-api</artifactId>\n          </exclusion>\n        </exclusions>\n      </dependency>\n\n      <dependency>\n        <groupId>org.glassfish.jersey.media</groupId>\n        <artifactId>jersey-media-multipart</artifactId>\n        <version>${jersey.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>net.java.dev.jna</groupId>\n        <artifactId>jna</artifactId>\n        <version>${jna.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>com.github.docker-java</groupId>\n        <artifactId>docker-java-core</artifactId>\n        <version>${docker-java.version}</version>\n        <exclusions>\n          <exclusion>\n            <groupId>org.bouncycastle</groupId>\n            <artifactId>*</artifactId>\n          </exclusion>\n        </exclusions>\n      </dependency>\n      <dependency>\n        <groupId>com.github.docker-java</groupId>\n        <artifactId>docker-java-api</artifactId>\n        <version>${docker-java.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>com.github.docker-java</groupId>\n        <artifactId>docker-java-transport-zerodep</artifactId>\n        <version>${docker-java.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>com.fasterxml.jackson</groupId>\n        <artifactId>jackson-bom</artifactId>\n        <version>${jackson.version}</version>\n        <type>pom</type>\n        <scope>import</scope>\n      </dependency>\n\n      <dependency>\n        <groupId>it.unimi.dsi</groupId>\n        <artifactId>fastutil</artifactId>\n        <version>${fastutil.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>org.codehaus.jettison</groupId>\n        <artifactId>jettison</artifactId>\n        <version>${jettison.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>com.fasterxml.woodstox</groupId>\n        <artifactId>woodstox-core</artifactId>\n        <version>${woodstox.version}</version>\n      </dependency>\n\n\n      <dependency>\n        <groupId>org.hdrhistogram</groupId>\n        <artifactId>HdrHistogram</artifactId>\n        <version>${hdrHistogram.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>io.swagger</groupId>\n        <artifactId>swagger-core</artifactId>\n        <version>${swagger.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>io.swagger</groupId>\n        <artifactId>swagger-annotations</artifactId>\n        <version>${swagger.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>javax.servlet</groupId>\n        <artifactId>javax.servlet-api</artifactId>\n        <version>${javax.servlet-api}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>com.github.ben-manes.caffeine</groupId>\n        <artifactId>caffeine</artifactId>\n        <version>${caffeine.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>org.bouncycastle</groupId>\n        <artifactId>bcprov-jdk18on</artifactId>\n        <version>${bouncycastle.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>org.bouncycastle</groupId>\n        <artifactId>bcpkix-jdk18on</artifactId>\n        <version>${bouncycastle.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>com.cronutils</groupId>\n        <artifactId>cron-utils</artifactId>\n        <version>${cron-utils.version}</version>\n        <exclusions>\n          <exclusion>\n            <groupId>org.glassfish</groupId>\n            <artifactId>javax.el</artifactId>\n          </exclusion>\n        </exclusions>\n      </dependency>\n\n      <dependency>\n        <groupId>com.yahoo.athenz</groupId>\n        <artifactId>athenz-zts-java-client-core</artifactId>\n        <version>${athenz.version}</version>\n        <exclusions>\n          <exclusion>\n            <groupId>javax.ws.rs</groupId>\n            <artifactId>javax.ws.rs-api</artifactId>\n          </exclusion>\n        </exclusions>\n      </dependency>\n\n      <dependency>\n        <groupId>com.yahoo.athenz</groupId>\n        <artifactId>athenz-zpe-java-client</artifactId>\n        <version>${athenz.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>com.yahoo.athenz</groupId>\n        <artifactId>athenz-cert-refresher</artifactId>\n        <version>${athenz.version}</version>\n        <exclusions>\n          <exclusion>\n            <groupId>org.bouncycastle</groupId>\n            <artifactId>*</artifactId>\n          </exclusion>\n        </exclusions>\n      </dependency>\n\n      <dependency>\n        <groupId>com.yahoo.athenz</groupId>\n        <artifactId>athenz-auth-core</artifactId>\n        <version>${athenz.version}</version>\n        <exclusions>\n          <exclusion>\n            <groupId>org.bouncycastle</groupId>\n            <artifactId>*</artifactId>\n          </exclusion>\n        </exclusions>\n      </dependency>\n\n      <dependency>\n        <groupId>com.github.zafarkhaja</groupId>\n        <artifactId>java-semver</artifactId>\n        <version>${java-semver.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>io.prometheus</groupId>\n        <artifactId>simpleclient</artifactId>\n        <version>${prometheus.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>io.prometheus</groupId>\n        <artifactId>simpleclient_hotspot</artifactId>\n        <version>${prometheus.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>io.prometheus</groupId>\n        <artifactId>simpleclient_log4j2</artifactId>\n        <version>${prometheus.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>io.prometheus</groupId>\n        <artifactId>simpleclient_servlet</artifactId>\n        <version>${prometheus.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>io.prometheus</groupId>\n        <artifactId>simpleclient_jetty</artifactId>\n        <version>${prometheus.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>io.prometheus</groupId>\n        <artifactId>simpleclient_caffeine</artifactId>\n        <version>${prometheus.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>com.carrotsearch</groupId>\n        <artifactId>hppc</artifactId>\n        <version>${hppc.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>io.etcd</groupId>\n        <artifactId>jetcd-core</artifactId>\n        <version>${jetcd.version}</version>\n        <exclusions>\n          <exclusion>\n            <groupId>io.grpc</groupId>\n            <artifactId>grpc-netty</artifactId>\n          </exclusion>\n        </exclusions>\n      </dependency>\n      <dependency>\n        <groupId>io.etcd</groupId>\n        <artifactId>jetcd-test</artifactId>\n        <version>${jetcd.version}</version>\n        <exclusions>\n          <exclusion>\n            <groupId>io.grpc</groupId>\n            <artifactId>grpc-netty</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>io.etcd</groupId>\n            <artifactId>jetcd-core</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>io.etcd</groupId>\n            <artifactId>jetcd-api</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>io.vertx</groupId>\n            <artifactId>*</artifactId>\n          </exclusion>\n        </exclusions>\n      </dependency>\n      <dependency>\n        <groupId>${project.groupId}</groupId>\n        <artifactId>jetcd-core-shaded</artifactId>\n        <version>${project.version}</version>\n        <exclusions>\n          <exclusion>\n            <groupId>io.etcd</groupId>\n            <artifactId>*</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>io.vertx</groupId>\n            <artifactId>*</artifactId>\n          </exclusion>\n        </exclusions>\n      </dependency>\n\n      <dependency>\n        <groupId>org.apache.spark</groupId>\n        <artifactId>spark-streaming_2.10</artifactId>\n        <version>${spark-streaming_2.10.version}</version>\n        <exclusions>\n          <exclusion>\n            <groupId>com.google.guava</groupId>\n            <artifactId>guava</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>io.netty</groupId>\n            <artifactId>netty-codec-http</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>io.netty</groupId>\n            <artifactId>netty-transport-native-epoll</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>io.netty</groupId>\n            <artifactId>netty</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>io.netty</groupId>\n            <artifactId>netty-all</artifactId>\n          </exclusion>\n        </exclusions>\n      </dependency>\n\n      <dependency>\n        <groupId>io.jsonwebtoken</groupId>\n        <artifactId>jjwt-api</artifactId>\n        <version>${jsonwebtoken.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>io.jsonwebtoken</groupId>\n        <artifactId>jjwt-impl</artifactId>\n        <version>${jsonwebtoken.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>io.jsonwebtoken</groupId>\n        <artifactId>jjwt-jackson</artifactId>\n        <version>${jsonwebtoken.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>net.jodah</groupId>\n        <artifactId>typetools</artifactId>\n        <version>${typetools.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>net.bytebuddy</groupId>\n        <artifactId>byte-buddy</artifactId>\n        <version>${byte-buddy.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>org.zeroturnaround</groupId>\n        <artifactId>zt-zip</artifactId>\n        <version>${zt-zip.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>io.grpc</groupId>\n        <artifactId>grpc-bom</artifactId>\n        <version>${grpc.version}</version>\n        <type>pom</type>\n        <scope>import</scope>\n      </dependency>\n\n      <dependency>\n        <groupId>io.grpc</groupId>\n        <artifactId>grpc-all</artifactId>\n        <version>${grpc.version}</version>\n        <exclusions>\n          <exclusion>\n            <groupId>io.grpc</groupId>\n            <artifactId>grpc-testing</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>io.grpc</groupId>\n            <artifactId>grpc-okhttp</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>com.squareup.okhttp</groupId>\n            <artifactId>okhttp</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>com.squareup.okio</groupId>\n            <artifactId>okio</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>io.grpc</groupId>\n            <artifactId>grpc-netty</artifactId>\n          </exclusion>\n        </exclusions>\n      </dependency>\n\n      <dependency>\n        <groupId>io.grpc</groupId>\n        <artifactId>grpc-xds</artifactId>\n        <version>${grpc.version}</version>\n        <exclusions>\n          <exclusion>\n            <groupId>org.bouncycastle</groupId>\n            <artifactId>*</artifactId>\n          </exclusion>\n        </exclusions>\n      </dependency>\n\n      <dependency>\n        <groupId>com.google.http-client</groupId>\n        <artifactId>google-http-client</artifactId>\n        <version>${google-http-client.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>com.google.http-client</groupId>\n        <artifactId>google-http-client-jackson2</artifactId>\n        <version>${google-http-client.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>com.google.http-client</groupId>\n        <artifactId>google-http-client-gson</artifactId>\n        <version>${google-http-client.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>io.perfmark</groupId>\n        <artifactId>perfmark-api</artifactId>\n        <version>${perfmark.version}</version>\n        <scope>runtime</scope>\n        <exclusions>\n          <exclusion>\n            <artifactId>error_prone_annotations</artifactId>\n            <groupId>com.google.errorprone</groupId>\n          </exclusion>\n        </exclusions>\n      </dependency>\n\n      <dependency>\n        <groupId>com.google.protobuf</groupId>\n        <artifactId>protobuf-bom</artifactId>\n        <version>${protobuf3.version}</version>\n        <type>pom</type>\n        <scope>import</scope>\n      </dependency>\n\n      <dependency>\n        <groupId>com.google.code.gson</groupId>\n        <artifactId>gson</artifactId>\n        <version>${gson.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>com.yahoo.datasketches</groupId>\n        <artifactId>sketches-core</artifactId>\n        <version>${sketches.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>io.streamnative.oxia</groupId>\n        <artifactId>oxia-client</artifactId>\n        <version>${oxia.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>io.streamnative.oxia</groupId>\n        <artifactId>oxia-testcontainers</artifactId>\n        <version>${oxia.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>com.amazonaws</groupId>\n        <artifactId>aws-java-sdk-bom</artifactId>\n        <version>${aws-sdk.version}</version>\n        <type>pom</type>\n        <scope>import</scope>\n      </dependency>\n\n      <dependency>\n        <groupId>org.apache.distributedlog</groupId>\n        <artifactId>distributedlog-core</artifactId>\n        <version>${bookkeeper.version}</version>\n        <exclusions>\n          <!-- exclude bookkeeper, reply on the bookkeeper version that pulsar uses -->\n          <exclusion>\n            <groupId>org.apache.bookkeeper</groupId>\n            <artifactId>bookkeeper-server</artifactId>\n          </exclusion>\n        </exclusions>\n      </dependency>\n\n      <dependency>\n        <groupId>org.apache.commons</groupId>\n        <artifactId>commons-collections4</artifactId>\n        <version>${commons.collections4.version}</version>\n      </dependency>\n\n      <!-- support only hadoop 3 since hadoop 2 is EOL -->\n      <dependency>\n        <groupId>org.apache.hadoop</groupId>\n        <artifactId>hadoop-common</artifactId>\n        <version>${hadoop3.version}</version>\n        <exclusions>\n          <exclusion>\n            <groupId>dnsjava</groupId>\n            <artifactId>dnsjava</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>org.bouncycastle</groupId>\n            <artifactId>bcprov-jdk15on</artifactId>\n          </exclusion>\n        </exclusions>\n      </dependency>\n      <dependency>\n        <groupId>org.apache.hadoop</groupId>\n        <artifactId>hadoop-auth</artifactId>\n        <version>${hadoop3.version}</version>\n        <exclusions>\n          <exclusion>\n            <groupId>dnsjava</groupId>\n            <artifactId>dnsjava</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>org.bouncycastle</groupId>\n            <artifactId>bcprov-jdk15on</artifactId>\n          </exclusion>\n        </exclusions>\n      </dependency>\n      <dependency>\n        <groupId>org.apache.hadoop</groupId>\n        <artifactId>hadoop-client</artifactId>\n        <version>${hadoop3.version}</version>\n        <exclusions>\n          <exclusion>\n            <groupId>dnsjava</groupId>\n            <artifactId>dnsjava</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>org.bouncycastle</groupId>\n            <artifactId>bcprov-jdk15on</artifactId>\n          </exclusion>\n        </exclusions>\n      </dependency>\n      <dependency>\n        <groupId>org.apache.hbase</groupId>\n        <artifactId>hbase-client</artifactId>\n        <version>${hbase.version}</version>\n        <exclusions>\n          <exclusion>\n            <groupId>dnsjava</groupId>\n            <artifactId>dnsjava</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>org.bouncycastle</groupId>\n            <artifactId>bcprov-jdk15on</artifactId>\n          </exclusion>\n        </exclusions>\n      </dependency>\n      <!-- dnsjava is pulled in by hadoop-common -->\n      <dependency>\n        <groupId>dnsjava</groupId>\n        <artifactId>dnsjava</artifactId>\n        <version>${dnsjava3.version}</version>\n      </dependency>\n\n      <!-- test dependencies -->\n      <dependency>\n        <groupId>com.lmax</groupId>\n        <artifactId>disruptor</artifactId>\n        <version>${disruptor.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.testcontainers</groupId>\n        <artifactId>testcontainers-bom</artifactId>\n        <version>${testcontainers.version}</version>\n        <type>pom</type>\n        <scope>import</scope>\n      </dependency>\n      <dependency>\n        <groupId>com.datastax.cassandra</groupId>\n        <artifactId>cassandra-driver-core</artifactId>\n        <version>${cassandra.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.assertj</groupId>\n        <artifactId>assertj-core</artifactId>\n        <version>${assertj-core.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>org.projectlombok</groupId>\n        <artifactId>lombok</artifactId>\n        <version>${lombok.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>jakarta.annotation</groupId>\n        <artifactId>jakarta.annotation-api</artifactId>\n        <version>${jakarta.annotation-api.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>javax.xml.bind</groupId>\n        <artifactId>jaxb-api</artifactId>\n        <version>${jaxb-api}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>jakarta.xml.bind</groupId>\n        <artifactId>jakarta.xml.bind-api</artifactId>\n        <version>${jakarta.xml.bind.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>com.sun.activation</groupId>\n        <artifactId>jakarta.activation</artifactId>\n        <version>${jakarta.activation.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>jakarta.activation</groupId>\n        <artifactId>jakarta.activation-api</artifactId>\n        <version>${jakarta.activation.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>jakarta.validation</groupId>\n        <artifactId>jakarta.validation-api</artifactId>\n        <version>${jakarta.validation.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>io.opencensus</groupId>\n        <artifactId>opencensus-api</artifactId>\n        <version>${opencensus.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>io.opencensus</groupId>\n        <artifactId>opencensus-contrib-http-util</artifactId>\n        <version>${opencensus.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>io.opencensus</groupId>\n        <artifactId>opencensus-contrib-grpc-metrics</artifactId>\n        <version>${opencensus.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>org.opensearch.client</groupId>\n        <artifactId>opensearch-rest-high-level-client</artifactId>\n        <version>${opensearch.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>co.elastic.clients</groupId>\n        <artifactId>elasticsearch-java</artifactId>\n        <version>${elasticsearch-java.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>joda-time</groupId>\n        <artifactId>joda-time</artifactId>\n        <version>${joda.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>org.javassist</groupId>\n        <artifactId>javassist</artifactId>\n        <version>${javassist.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>net.jcip</groupId>\n        <artifactId>jcip-annotations</artifactId>\n        <version>${jcip.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>io.airlift</groupId>\n        <artifactId>aircompressor</artifactId>\n        <version>${aircompressor.version}</version>\n        <exclusions>\n          <exclusion>\n            <groupId>org.openjdk.jol</groupId>\n            <artifactId>jol-core</artifactId>\n          </exclusion>\n        </exclusions>\n      </dependency>\n\n      <dependency>\n        <groupId>org.objenesis</groupId>\n        <artifactId>objenesis</artifactId>\n        <version>${objenesis.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>org.apache.httpcomponents</groupId>\n        <artifactId>httpclient</artifactId>\n        <version>${apache-http-client.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>org.apache.httpcomponents</groupId>\n        <artifactId>httpcore</artifactId>\n        <version>${apache-httpcomponents.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>com.github.spotbugs</groupId>\n        <artifactId>spotbugs-annotations</artifactId>\n        <version>${spotbugs.version}</version>\n        <scope>provided</scope>\n        <optional>true</optional>\n      </dependency>\n\n      <dependency>\n        <groupId>com.google.errorprone</groupId>\n        <artifactId>error_prone_annotations</artifactId>\n        <version>${errorprone.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>com.google.j2objc</groupId>\n        <artifactId>j2objc-annotations</artifactId>\n        <version>${j2objc-annotations.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>org.yaml</groupId>\n        <artifactId>snakeyaml</artifactId>\n        <version>${snakeyaml.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>org.apache.ant</groupId>\n        <artifactId>ant</artifactId>\n        <version>${ant.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>com.squareup.okhttp3</groupId>\n        <artifactId>okhttp</artifactId>\n        <version>${okhttp3.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>com.squareup.okhttp3</groupId>\n        <artifactId>okhttp-urlconnection</artifactId>\n        <version>${okhttp3.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>com.squareup.okhttp3</groupId>\n        <artifactId>logging-interceptor</artifactId>\n        <version>${okhttp3.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>com.squareup.okio</groupId>\n        <artifactId>okio</artifactId>\n        <version>${okio.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>org.jetbrains.kotlin</groupId>\n        <artifactId>kotlin-stdlib</artifactId>\n        <version>${kotlin-stdlib.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.jetbrains.kotlin</groupId>\n        <artifactId>kotlin-stdlib-common</artifactId>\n        <version>${kotlin-stdlib.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>org.jetbrains.kotlin</groupId>\n        <artifactId>kotlin-stdlib-jdk8</artifactId>\n        <version>${kotlin-stdlib.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>com.github.luben</groupId>\n        <artifactId>zstd-jni</artifactId>\n        <version>${zstd-jni.version}</version>\n      </dependency>\n\n      <dependency>\n          <groupId>com.typesafe.netty</groupId>\n          <artifactId>netty-reactive-streams</artifactId>\n          <version>${netty-reactive-streams.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>org.roaringbitmap</groupId>\n        <artifactId>RoaringBitmap</artifactId>\n        <version>${roaringbitmap.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>com.github.oshi</groupId>\n        <artifactId>oshi-core-java11</artifactId>\n        <version>${oshi.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.checkerframework</groupId>\n        <artifactId>checker-qual</artifactId>\n        <version>${checkerframework.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>io.rest-assured</groupId>\n        <artifactId>rest-assured</artifactId>\n        <version>${restassured.version}</version>\n        <scope>test</scope>\n      </dependency>\n\n      <dependency>\n        <groupId>io.opentelemetry</groupId>\n        <artifactId>opentelemetry-bom</artifactId>\n        <version>${opentelemetry.version}</version>\n        <type>pom</type>\n        <scope>import</scope>\n      </dependency>\n      <dependency>\n        <groupId>io.opentelemetry</groupId>\n        <artifactId>opentelemetry-bom-alpha</artifactId>\n        <version>${opentelemetry.alpha.version}</version>\n        <type>pom</type>\n        <scope>import</scope>\n      </dependency>\n      <dependency>\n        <groupId>io.opentelemetry.instrumentation</groupId>\n        <artifactId>opentelemetry-instrumentation-bom</artifactId>\n        <version>${opentelemetry.instrumentation.version}</version>\n        <type>pom</type>\n        <scope>import</scope>\n      </dependency>\n      <dependency>\n        <groupId>io.opentelemetry.instrumentation</groupId>\n        <artifactId>opentelemetry-instrumentation-bom-alpha</artifactId>\n        <version>${opentelemetry.instrumentation.alpha.version}</version>\n        <type>pom</type>\n        <scope>import</scope>\n      </dependency>\n      <dependency>\n        <groupId>io.opentelemetry.semconv</groupId>\n        <artifactId>opentelemetry-semconv</artifactId>\n        <version>${opentelemetry.semconv.version}</version>\n      </dependency>\n    </dependencies>\n  </dependencyManagement>\n\n  <dependencies>\n    <!-- These dependencies are common to all the submodules -->\n    <dependency>\n      <groupId>org.apache.pulsar</groupId>\n      <artifactId>buildtools</artifactId>\n      <version>${project.version}</version>\n      <scope>test</scope>\n    </dependency>\n\n    <dependency>\n      <groupId>org.testng</groupId>\n      <artifactId>testng</artifactId>\n      <scope>test</scope>\n    </dependency>\n\n    <dependency>\n      <groupId>org.mockito</groupId>\n      <artifactId>mockito-core</artifactId>\n      <scope>test</scope>\n    </dependency>\n\n    <dependency>\n      <groupId>com.github.stefanbirkner</groupId>\n      <artifactId>system-lambda</artifactId>\n      <version>${system-lambda.version}</version>\n      <scope>test</scope>\n    </dependency>\n\n    <dependency>\n      <groupId>org.assertj</groupId>\n      <artifactId>assertj-core</artifactId>\n      <scope>test</scope>\n    </dependency>\n\n    <dependency>\n      <groupId>io.opentelemetry</groupId>\n      <artifactId>opentelemetry-sdk-testing</artifactId>\n      <scope>test</scope>\n    </dependency>\n\n    <dependency>\n      <groupId>org.projectlombok</groupId>\n      <artifactId>lombok</artifactId>\n      <scope>provided</scope>\n    </dependency>\n\n    <dependency>\n      <!-- We use MockedBookKeeper in many unit tests -->\n      <groupId>org.apache.bookkeeper</groupId>\n      <artifactId>bookkeeper-server</artifactId>\n      <version>${bookkeeper.version}</version>\n      <scope>test</scope>\n      <classifier>tests</classifier>\n      <exclusions>\n        <exclusion>\n            <groupId>org.bouncycastle</groupId>\n            <artifactId>*</artifactId>\n        </exclusion>\n        <exclusion>\n          <groupId>org.slf4j</groupId>\n          <artifactId>slf4j-log4j12</artifactId>\n        </exclusion>\n        <exclusion>\n          <artifactId>log4j</artifactId>\n          <groupId>log4j</groupId>\n        </exclusion>\n        <exclusion>\n          <groupId>com.fasterxml.jackson.core</groupId>\n          <artifactId>*</artifactId>\n        </exclusion>\n        <exclusion>\n          <groupId>org.apache.zookeeper</groupId>\n          <artifactId>*</artifactId>\n        </exclusion>\n        <exclusion>\n          <artifactId>log4j-slf4j-impl</artifactId>\n          <groupId>org.apache.logging.log4j</groupId>\n        </exclusion>\n      </exclusions>\n    </dependency>\n    <dependency>\n      <!-- We use TestStatsProvider in many unit tests -->\n      <groupId>org.apache.bookkeeper</groupId>\n      <artifactId>bookkeeper-common</artifactId>\n      <version>${bookkeeper.version}</version>\n      <scope>test</scope>\n      <classifier>tests</classifier>\n      <exclusions>\n        <exclusion>\n          <groupId>com.fasterxml.jackson.core</groupId>\n          <artifactId>*</artifactId>\n        </exclusion>\n      </exclusions>\n    </dependency>\n  </dependencies>\n\n  <build>\n    <finalName>${project.artifactId}</finalName>\n    <plugins>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-checkstyle-plugin</artifactId>\n      </plugin>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-compiler-plugin</artifactId>\n        <configuration>\n          <encoding>UTF-8</encoding>\n          <showDeprecation>true</showDeprecation>\n          <showWarnings>true</showWarnings>\n          <!-- workaround https://issues.apache.org/jira/browse/MCOMPILER-205 -->\n          <useIncrementalCompilation>false</useIncrementalCompilation>\n          <annotationProcessorPaths>\n            <path>\n              <groupId>org.projectlombok</groupId>\n              <artifactId>lombok</artifactId>\n              <version>${lombok.version}</version>\n            </path>\n          </annotationProcessorPaths>\n          <compilerArgs>\n            <arg>-parameters</arg>\n            <!-- enable 'all' lint warnings with some exclusions -->\n            <arg>-Xlint:all</arg>\n            <arg>-Xlint:-options</arg>\n            <arg>-Xlint:-serial</arg>\n            <arg>-Xlint:-classfile</arg>\n            <arg>-Xlint:-processing</arg>\n            <arg>-Xpkginfo:always</arg>\n          </compilerArgs>\n        </configuration>\n      </plugin>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-surefire-plugin</artifactId>\n        <configuration>\n          <argLine>${testJacocoAgentArgument} -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=${testHeapDumpPath} -XX:+ExitOnOutOfMemoryError -Xmx${testMaxHeapSize} -XX:+UseZGC\n            -Dpulsar.allocator.pooled=true\n            -Dpulsar.allocator.leak_detection=Advanced\n            -Dpulsar.allocator.exit_on_oom=false\n            -Dpulsar.allocator.out_of_memory_policy=FallbackToHeap\n            -Dio.netty.tryReflectionSetAccessible=true\n            ${test.additional.args}\n          </argLine>\n          <reuseForks>${testReuseFork}</reuseForks>\n          <forkCount>${testForkCount}</forkCount>\n          <shutdown>${surefire.shutdown}</shutdown>\n          <forkedProcessExitTimeoutInSeconds>60</forkedProcessExitTimeoutInSeconds>\n          <redirectTestOutputToFile>${redirectTestOutputToFile}</redirectTestOutputToFile>\n          <trimStackTrace>false</trimStackTrace>\n          <systemPropertyVariables>\n            <testRealAWS>${testRealAWS}</testRealAWS>\n            <testRetryCount>${testRetryCount}</testRetryCount>\n            <testFailFast>${testFailFast}</testFailFast>\n            <testFailFastFile>${testFailFastFile}</testFailFastFile>\n          </systemPropertyVariables>\n          <properties>\n            <property>\n              <name>listener</name>\n              <value>org.apache.pulsar.tests.PulsarTestListener,org.apache.pulsar.tests.JacocoDumpListener,org.apache.pulsar.tests.TraceTestResourceCleanupListener,org.apache.pulsar.tests.AnnotationListener,org.apache.pulsar.tests.FailFastNotifier,org.apache.pulsar.tests.MockitoCleanupListener,org.apache.pulsar.tests.FastThreadLocalCleanupListener,org.apache.pulsar.tests.ThreadLeakDetectorListener,org.apache.pulsar.tests.SingletonCleanerListener</value>\n            </property>\n          </properties>\n        </configuration>\n        <dependencies>\n          <dependency>\n            <groupId>org.apache.maven.surefire</groupId>\n            <artifactId>surefire-testng</artifactId>\n            <version>${surefire.version}</version>\n          </dependency>\n        </dependencies>\n      </plugin>\n\n      <plugin>\n        <groupId>org.commonjava.maven.plugins</groupId>\n        <artifactId>directory-maven-plugin</artifactId>\n        <version>${directory-maven-plugin.version}</version>\n        <executions>\n          <execution>\n            <id>directories</id>\n            <goals>\n              <goal>directory-of</goal>\n            </goals>\n            <phase>initialize</phase>\n            <configuration>\n              <property>pulsar.basedir</property>\n              <project>\n                <groupId>org.apache.pulsar</groupId>\n                <artifactId>pulsar</artifactId>\n              </project>\n            </configuration>\n          </execution>\n        </executions>\n      </plugin>\n\n      <plugin>\n        <groupId>pl.project13.maven</groupId>\n        <artifactId>git-commit-id-plugin</artifactId>\n        <version>${git-commit-id-plugin.version}</version>\n        <executions>\n          <execution>\n            <id>git-info</id>\n            <goals>\n              <goal>revision</goal>\n            </goals>\n          </execution>\n        </executions>\n        <configuration>\n          <skip>true</skip>\n          <useNativeGit>true</useNativeGit>\n          <prefix>git</prefix>\n          <failOnNoGitDirectory>false</failOnNoGitDirectory>\n          <failOnUnableToExtractRepoInfo>false</failOnUnableToExtractRepoInfo>\n          <skipPoms>false</skipPoms>\n          <gitDescribe>\n            <skip>true</skip>\n          </gitDescribe>\n        </configuration>\n      </plugin>\n\n      <plugin>\n        <groupId>com.mycila</groupId>\n        <artifactId>license-maven-plugin</artifactId>\n        <version>${license-maven-plugin.version}</version>\n        <configuration>\n          <licenseSets>\n            <licenseSet>\n              <header>${pulsar.basedir}/src/license-header.txt</header>\n              <excludes>\n                <exclude>LICENSE</exclude>\n                <exclude>NOTICE</exclude>\n                <exclude>**/*.txt</exclude>\n                <exclude>**/*.pem</exclude>\n                <exclude>**/*.crt</exclude>\n                <exclude>**/*.key</exclude>\n                <exclude>**/*.csr</exclude>\n                <exclude>**/*.log</exclude>\n                <exclude>**/*.patch</exclude>\n                <exclude>**/*.avsc</exclude>\n                <exclude>**/*.versionsBackup</exclude>\n                <exclude>**/*.pyc</exclude>\n                <exclude>**/*.graffle</exclude>\n                <exclude>**/*.hgrm</exclude>\n                <exclude>**/src/main/java/org/apache/bookkeeper/mledger/proto/MLDataFormats.java</exclude>\n                <exclude>**/src/main/java/org/apache/pulsar/transaction/coordinator/proto/PulsarTransactionMetadata.java</exclude>\n                <exclude>**/src/main/java/org/apache/pulsar/broker/service/schema/proto/SchemaRegistryFormat.java</exclude>\n                <exclude>**/src/main/java/org/apache/pulsar/common/api/proto/*.java</exclude>\n                <exclude>**/src/test/java/org/apache/pulsar/common/api/proto/*.java</exclude>\n                <exclude>**/src/main/java/org/apache/pulsar/io/kinesis/fbs/CompressionType.java</exclude>\n                <exclude>**/src/main/java/org/apache/pulsar/io/kinesis/fbs/EncryptionCtx.java</exclude>\n                <exclude>**/src/main/java/org/apache/pulsar/io/kinesis/fbs/EncryptionKey.java</exclude>\n                <exclude>**/src/main/java/org/apache/pulsar/io/kinesis/fbs/KeyValue.java</exclude>\n                <exclude>**/src/main/java/org/apache/pulsar/io/kinesis/fbs/Message.java</exclude>\n                <exclude>**/src/main/java/org/apache/bookkeeper/mledger/util/AbstractCASReferenceCounted.java</exclude>\n                <exclude>**/ByteBufCodedInputStream.java</exclude>\n                <exclude>**/ByteBufCodedOutputStream.java</exclude>\n                <exclude>**/ahc.properties</exclude>\n                <exclude>bin/proto/*</exclude>\n                <exclude>conf/schema_example.json</exclude>\n                <exclude>data/**</exclude>\n                <exclude>logs/**</exclude>\n                <exclude>**/circe/**</exclude>\n                <exclude>pulsar-broker/src/test/resources/authentication/basic/.htpasswd</exclude>\n                <exclude>**/django/stats/migrations/*.py</exclude>\n                <exclude>site2/**</exclude>\n                <exclude>generated-site/**</exclude>\n                <exclude>**/*.md</exclude>\n                <exclude>**/.idea/**</exclude>\n                <exclude>**/.vscode/**</exclude>\n                <exclude>**/.mvn/**</exclude>\n                <exclude>**/generated/**</exclude>\n                <exclude>**/zk-3.5-test-data/*</exclude>\n              </excludes>\n            </licenseSet>\n          </licenseSets>\n          <mapping>\n            <java>SLASHSTAR_STYLE</java>\n            <proto>JAVADOC_STYLE</proto>\n            <go>DOUBLESLASH_STYLE</go>\n            <conf>SCRIPT_STYLE</conf>\n            <ini>SCRIPT_STYLE</ini>\n            <yaml>SCRIPT_STYLE</yaml>\n            <tf>SCRIPT_STYLE</tf>\n            <cfg>SCRIPT_STYLE</cfg>\n            <Makefile>SCRIPT_STYLE</Makefile>\n            <service>SCRIPT_STYLE</service>\n            <cc>JAVADOC_STYLE</cc>\n            <md>XML_STYLE</md>\n            <txt>SCRIPT_STYLE</txt>\n            <scss>JAVADOC_STYLE</scss>\n            <Doxyfile>SCRIPT_STYLE</Doxyfile>\n            <pulsar>SCRIPT_STYLE</pulsar>\n            <pulsar-managed-ledger-admin>SCRIPT_STYLE</pulsar-managed-ledger-admin>\n            <pulsar-daemon>SCRIPT_STYLE</pulsar-daemon>\n            <pulsar-admin>SCRIPT_STYLE</pulsar-admin>\n            <pulsar-perf>SCRIPT_STYLE</pulsar-perf>\n            <pulsar-client>SCRIPT_STYLE</pulsar-client>\n            <pulsar-shell>SCRIPT_STYLE</pulsar-shell>\n            <bookkeeper>SCRIPT_STYLE</bookkeeper>\n            <tfvars>SCRIPT_STYLE</tfvars>\n          </mapping>\n        </configuration>\n        <executions>\n          <execution>\n            <phase>verify</phase>\n            <goals>\n              <goal>check</goal>\n            </goals>\n          </execution>\n        </executions>\n      </plugin>\n      <plugin>\n        <groupId>org.apache.rat</groupId>\n        <artifactId>apache-rat-plugin</artifactId>\n        <configuration>\n          <excludes>\n            <!-- Other license files -->\n            <exclude>licenses/LICENSE-*.txt</exclude>\n            <exclude>src/assemble/README.bin.txt</exclude>\n            <exclude>src/assemble/LICENSE.bin.txt</exclude>\n            <exclude>src/assemble/NOTICE.bin.txt</exclude>\n\n            <!-- exclude services files -->\n            <exclude>**/META-INF/services/*</exclude>\n\n            <!-- These files are generated automatically by the Protobuf compiler\n                 and are included in source tree for convenience -->\n            <exclude>src/main/java/org/apache/bookkeeper/mledger/proto/MLDataFormats.java</exclude>\n            <exclude>src/main/java/org/apache/pulsar/broker/service/schema/proto/SchemaRegistryFormat.java</exclude>\n            <exclude>bin/proto/MLDataFormats_pb2.py</exclude>\n\n            <!-- These files are generated automatically by the Avro compiler\n                 and are included in source tree for convenience -->\n            <exclude>**/avro/generated/*.java</exclude>\n\n            <!-- Avro schema definitions - JSON format -->\n            <exclude>**/*.avsc</exclude>\n\n            <!-- pulasr-io-connector kinesis : auto generated files from flatbuffer schema -->\n            <exclude>src/main/java/org/apache/pulsar/io/kinesis/fbs/CompressionType.java</exclude>\n            <exclude>src/main/java/org/apache/pulsar/io/kinesis/fbs/EncryptionCtx.java</exclude>\n            <exclude>src/main/java/org/apache/pulsar/io/kinesis/fbs/EncryptionKey.java</exclude>\n            <exclude>src/main/java/org/apache/pulsar/io/kinesis/fbs/KeyValue.java</exclude>\n            <exclude>src/main/java/org/apache/pulsar/io/kinesis/fbs/Message.java</exclude>\n\n            <!-- Imported from Netty - Apache License v2 -->\n            <exclude>src/main/java/org/apache/bookkeeper/mledger/util/AbstractCASReferenceCounted.java</exclude>\n\n            <!-- This is generated during maven build -->\n            <exclude>dependency-reduced-pom.xml</exclude>\n\n            <!-- These files is go module configs -->\n            <exclude>pulsar-client-go/go.mod</exclude>\n            <exclude>pulsar-client-go/go.sum</exclude>\n            <exclude>pulsar-function-go/go.mod</exclude>\n            <exclude>pulsar-function-go/go.sum</exclude>\n            <exclude>pulsar-function-go/examples/go.mod</exclude>\n            <exclude>pulsar-function-go/examples/go.sum</exclude>\n\n            <!-- This is a text property file that contains just a class name -->\n            <exclude>**/META-INF/services/com.scurrilous.circe.HashProvider</exclude>\n\n            <!-- Django generated code -->\n            <exclude>**/django/stats/migrations/*.py</exclude>\n            <exclude>**/conf/uwsgi_params</exclude>\n\n            <!-- Exclude certificates used for tests -->\n            <exclude>**/*.crt</exclude>\n            <exclude>**/*.key</exclude>\n            <exclude>**/*.csr</exclude>\n            <exclude>**/*.srl</exclude>\n            <exclude>**/*.txt</exclude>\n            <exclude>**/*.pem</exclude>\n            <exclude>**/*.json</exclude>\n            <exclude>**/*.htpasswd</exclude>\n            <exclude>src/test/resources/athenz.conf.test</exclude>\n            <exclude>deployment/terraform-ansible/templates/myid</exclude>\n            <exclude>certificate-authority/index.txt</exclude>\n            <exclude>certificate-authority/serial</exclude>\n            <exclude>certificate-authority/README.md</exclude>\n\n            <!-- Exclude ZK test data file -->\n            <exclude>**/zk-3.5-test-data/*</exclude>\n\n            <!-- Python requirements files -->\n            <exclude>**/requirements.txt</exclude>\n\n            <!-- Configuration Templates -->\n            <exclude>conf/schema_example.json</exclude>\n            <exclude>**/templates/*.tpl</exclude>\n\n            <!-- helm files -->\n            <exclude>**/.helmignore</exclude>\n            <exclude>**/_helpers.tpl</exclude>\n\n            <!-- project ignored files -->\n            <exclude>**/*.md</exclude>\n            <exclude>.github/**</exclude>\n            <exclude>**/*.nar</exclude>\n            <exclude>**/.terraform/**</exclude>\n            <exclude>**/.gitignore</exclude>\n            <exclude>**/.svn</exclude>\n            <exclude>**/*.iws</exclude>\n            <exclude>**/*.ipr</exclude>\n            <exclude>**/*.iml</exclude>\n            <exclude>**/*.cbp</exclude>\n            <exclude>**/*.pyc</exclude>\n            <exclude>**/.classpath</exclude>\n            <exclude>**/.project</exclude>\n            <exclude>**/.settings</exclude>\n            <exclude>**/target/**</exclude>\n            <exclude>**/*.log</exclude>\n            <exclude>**/build/**</exclude>\n            <exclude>**/file:/**</exclude>\n            <exclude>**/SecurityAuth.audit*</exclude>\n            <exclude>**/site2/**</exclude>\n            <exclude>**/.idea/**</exclude>\n            <exclude>**/.vscode/**</exclude>\n            <exclude>**/.mvn/**</exclude>\n            <exclude>**/*.a</exclude>\n            <exclude>**/*.so</exclude>\n            <exclude>**/*.so.*</exclude>\n            <exclude>**/*.dylib</exclude>\n            <exclude>**/*.patch</exclude>\n            <exclude>src/test/resources/*.txt</exclude>\n          </excludes>\n        </configuration>\n      </plugin>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-enforcer-plugin</artifactId>\n        <version>${maven-enforcer-plugin.version}</version>\n        <executions>\n            <execution>\n                <id>enforce-maven</id>\n                <goals>\n                    <goal>enforce</goal>\n                </goals>\n              <configuration>\n                <rules>\n                  <requireJavaVersion>\n                    <version>[17,18),[21,22)</version>\n                    <message>Java 17 or Java 21 is required to build Pulsar.</message>\n                  </requireJavaVersion>\n                  <requireMavenVersion>\n                    <version>3.6.1</version>\n                  </requireMavenVersion>\n                </rules>\n              </configuration>\n            </execution>\n        </executions>\n      </plugin>\n      <plugin>\n        <groupId>org.codehaus.mojo</groupId>\n        <artifactId>properties-maven-plugin</artifactId>\n        <executions>\n          <execution>\n            <phase>initialize</phase>\n            <goals>\n              <goal>set-system-properties</goal>\n            </goals>\n            <configuration>\n              <properties combine.children=\"append\">\n                <!-- for lightproto (protostuff) -->\n                <property>\n                  <name>proto_path</name>\n                  <value>${pulsar.basedir}</value>\n                </property>\n                <property>\n                  <name>proto_search_strategy</name>\n                  <value>2</value>\n                </property>\n              </properties>\n            </configuration>\n          </execution>\n        </executions>\n      </plugin>\n    </plugins>\n\n    <pluginManagement>\n      <plugins>\n        <plugin>\n          <groupId>org.apache.maven.plugins</groupId>\n          <artifactId>maven-compiler-plugin</artifactId>\n          <version>${maven-compiler-plugin.version}</version>\n          <configuration>\n            <release>${pulsar.broker.compiler.release}</release>\n          </configuration>\n        </plugin>\n        <plugin>\n          <groupId>org.gaul</groupId>\n          <artifactId>modernizer-maven-plugin</artifactId>\n          <version>${maven-modernizer-plugin.version}</version>\n        </plugin>\n        <plugin>\n          <groupId>org.apache.maven.plugins</groupId>\n          <artifactId>maven-surefire-plugin</artifactId>\n          <configuration>\n            <includes>\n                <include>${include}</include>\n            </includes>\n            <excludes>\n                <exclude>**/*$*,${exclude}</exclude>\n            </excludes>\n            <groups>${groups}</groups>\n            <excludedGroups>${excludedGroups}</excludedGroups>\n          </configuration>\n        </plugin>\n        <plugin>\n          <groupId>org.apache.maven.plugins</groupId>\n          <artifactId>maven-dependency-plugin</artifactId>\n          <version>${maven-dependency-plugin.version}</version>\n        </plugin>\n        <plugin>\n          <groupId>org.apache.maven.plugins</groupId>\n          <artifactId>maven-shade-plugin</artifactId>\n          <version>${maven-shade-plugin}</version>\n        </plugin>\n        <plugin>\n          <groupId>org.apache.maven.plugins</groupId>\n          <artifactId>maven-javadoc-plugin</artifactId>\n          <configuration>\n            <doclint>none</doclint>\n            <notimestamp>true</notimestamp>\n          </configuration>\n        </plugin>\n        <plugin>\n          <artifactId>maven-antrun-plugin</artifactId>\n          <version>${maven-antrun-plugin.version}</version>\n        </plugin>\n        <plugin>\n          <groupId>org.codehaus.mojo</groupId>\n          <artifactId>exec-maven-plugin</artifactId>\n          <version>${exec-maven-plugin.version}</version>\n        </plugin>\n        <plugin>\n          <groupId>org.apache.nifi</groupId>\n          <artifactId>nifi-nar-maven-plugin</artifactId>\n          <version>${nifi-nar-maven-plugin.version}</version>\n          <extensions>true</extensions>\n          <configuration>\n            <finalName>${project.artifactId}-${project.version}</finalName>\n          </configuration>\n          <executions>\n            <execution>\n              <id>default-nar</id>\n              <phase>${narPluginPhase}</phase>\n              <goals>\n                <goal>nar</goal>\n              </goals>\n            </execution>\n          </executions>\n        </plugin>\n        <plugin>\n          <groupId>org.apache.maven.plugins</groupId>\n          <artifactId>maven-assembly-plugin</artifactId>\n          <version>${maven-assembly-plugin.version}</version>\n        </plugin>\n        <plugin>\n          <groupId>org.apache.maven.plugins</groupId>\n          <artifactId>maven-checkstyle-plugin</artifactId>\n          <version>${maven-checkstyle-plugin.version}</version>\n          <dependencies>\n            <dependency>\n              <groupId>com.puppycrawl.tools</groupId>\n              <artifactId>checkstyle</artifactId>\n              <version>${puppycrawl.checkstyle.version}</version>\n            </dependency>\n          </dependencies>\n          <configuration>\n            <configLocation>${pulsar.basedir}/buildtools/src/main/resources/pulsar/checkstyle.xml</configLocation>\n            <suppressionsLocation>${pulsar.basedir}/buildtools/src/main/resources/pulsar/suppressions.xml</suppressionsLocation>\n            <includeTestSourceDirectory>true</includeTestSourceDirectory>\n            <encoding>UTF-8</encoding>\n            <excludes>**/proto/*</excludes>\n          </configuration>\n        </plugin>\n        <plugin>\n          <groupId>pl.project13.maven</groupId>\n          <artifactId>git-commit-id-plugin</artifactId>\n          <version>${git-commit-id-plugin.version}</version>\n        </plugin>\n        <plugin>\n          <groupId>com.github.spotbugs</groupId>\n          <artifactId>spotbugs-maven-plugin</artifactId>\n          <version>${spotbugs-maven-plugin.version}</version>\n            <dependencies>\n              <dependency>\n                <groupId>com.github.spotbugs</groupId>\n                <artifactId>spotbugs</artifactId>\n                <version>${spotbugs.version}</version>\n              </dependency>\n            </dependencies>\n        </plugin>\n        <plugin>\n          <groupId>org.codehaus.mojo</groupId>\n          <artifactId>properties-maven-plugin</artifactId>\n          <version>${properties-maven-plugin.version}</version>\n        </plugin>\n        <plugin>\n          <groupId>io.fabric8</groupId>\n          <artifactId>docker-maven-plugin</artifactId>\n          <version>${docker-maven.version}</version>\n        </plugin>\n        <plugin>\n          <groupId>org.codehaus.mojo</groupId>\n          <artifactId>build-helper-maven-plugin</artifactId>\n          <version>${build-helper-maven-plugin.version}</version>\n        </plugin>\n        <plugin>\n          <groupId>org.owasp</groupId>\n          <artifactId>dependency-check-maven</artifactId>\n          <version>${dependency-check-maven.version}</version>\n          <configuration>\n            <nvdApiKeyEnvironmentVariable>NIST_NVD_API_KEY</nvdApiKeyEnvironmentVariable>\n            <!-- Uncomment the following to use the NVD data feed provided by the Dependency-Check project -->\n            <!-- <nvdDatafeedUrl>https://jeremylong.github.io/DependencyCheck/hb_nvd/</nvdDatafeedUrl> -->\n          </configuration>\n        </plugin>\n        <!--\n          vscode-java and Eclipse Maven integration workaround:\n          - Addresses maven-dependency-plugin exception (MDEP-187) issue by ignoring the plugin execution\n          - Uses org.eclipse.m2e:lifecycle-mapping:1.0.0 as configuration placeholder in pluginManagement section\n          For details: https://eclipse.dev/m2e/documentation/m2e-execution-not-covered.html#ignore-plugin-goal\n        -->\n        <plugin>\n          <groupId>org.eclipse.m2e</groupId>\n          <artifactId>lifecycle-mapping</artifactId>\n          <version>1.0.0</version>\n          <configuration>\n            <lifecycleMappingMetadata>\n              <pluginExecutions>\n                <pluginExecution>\n                  <pluginExecutionFilter>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-dependency-plugin</artifactId>\n                    <versionRange>[1.0.0,)</versionRange>\n                    <goals>\n                      <goal>copy</goal>\n                    </goals>\n                  </pluginExecutionFilter>\n                  <action>\n                    <ignore />\n                  </action>\n                </pluginExecution>\n                <pluginExecution>\n                  <pluginExecutionFilter>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-dependency-plugin</artifactId>\n                    <versionRange>[1.0.0,)</versionRange>\n                    <goals>\n                      <goal>unpack</goal>\n                    </goals>\n                  </pluginExecutionFilter>\n                  <action>\n                    <ignore />\n                  </action>\n                </pluginExecution>\n              </pluginExecutions>\n            </lifecycleMappingMetadata>\n          </configuration>\n        </plugin>\n      </plugins>\n    </pluginManagement>\n    <extensions>\n      <extension>\n        <groupId>org.apache.maven.wagon</groupId>\n        <artifactId>wagon-ssh-external</artifactId>\n        <version>${wagon-ssh-external.version}</version>\n      </extension>\n      <extension>\n        <groupId>kr.motd.maven</groupId>\n        <artifactId>os-maven-plugin</artifactId>\n        <version>${os-maven-plugin.version}</version>\n      </extension>\n    </extensions>\n  </build>\n\n  <profiles>\n    <profile>\n      <!-- used for running integration tests on Java 8 -->\n      <id>integration-test-java8</id>\n      <activation>\n        <jdk>1.8</jdk>\n      </activation>\n      <properties>\n        <test.additional.args/>\n        <maven.compiler.source>8</maven.compiler.source>\n        <maven.compiler.target>8</maven.compiler.target>\n        <pulsar.broker.compiler.release/>\n        <pulsar.client.compiler.release/>\n      </properties>\n    </profile>\n    <profile>\n      <id>coverage</id>\n      <properties>\n        <testJacocoAgentArgument>@{jacoco.agent.argument}</testJacocoAgentArgument>\n        <surefire.shutdown>exit</surefire.shutdown>\n      </properties>\n      <build>\n        <plugins>\n          <plugin>\n            <groupId>org.jacoco</groupId>\n            <artifactId>jacoco-maven-plugin</artifactId>\n            <version>${jacoco-maven-plugin.version}</version>\n            <configuration>\n              <propertyName>jacoco.agent.argument</propertyName>\n            </configuration>\n            <executions>\n              <execution>\n                <id>prepare-agent</id>\n                <goals>\n                  <goal>prepare-agent</goal>\n                </goals>\n                <configuration>\n                  <!-- use unique jacoco exec files for every forked test process -->\n                  <destFile>${project.build.directory}/jacoco_${maven.build.timestamp}_${surefire.forkNumber}.exec</destFile>\n                  <append>true</append>\n                  <jmx>true</jmx>\n                  <includes>\n                    <include>org.apache.pulsar.*</include>\n                    <include>org.apache.bookkeeper.mledger.*</include>\n                  </includes>\n                  <excludes>\n                    <exclude>*.proto.*</exclude>\n                    <exclude>*.shade.*</exclude>\n                    <exclude>*.shaded.*</exclude>\n                  </excludes>\n                </configuration>\n              </execution>\n              <execution>\n                <id>report</id>\n                <phase>verify</phase>\n                <goals>\n                  <goal>report</goal>\n                </goals>\n                <configuration>\n                  <excludes>\n                    <exclude>META-INF/**</exclude>\n                  </excludes>\n                  <skip>${jacoco.report.skip}</skip>\n                </configuration>\n              </execution>\n            </executions>\n          </plugin>\n        </plugins>\n      </build>\n      <reporting>\n        <plugins>\n          <plugin>\n            <groupId>org.apache.maven.plugins</groupId>\n            <artifactId>maven-checkstyle-plugin</artifactId>\n            <configuration>\n              <configLocation>${pulsar.basedir}/buildtools/src/main/resources/pulsar/checkstyle.xml</configLocation>\n              <suppressionsLocation>${pulsar.basedir}/buildtools/src/main/resources/pulsar/suppressions.xml</suppressionsLocation>\n              <inputEncoding>UTF-8</inputEncoding>\n              <outputEncoding>UTF-8</outputEncoding>\n              <excludes>**/proto/*</excludes>\n            </configuration>\n          </plugin>\n          <plugin>\n            <artifactId>maven-javadoc-plugin</artifactId>\n            <configuration>\n              <doclint>none</doclint>\n            </configuration>\n          </plugin>\n          <plugin>\n            <groupId>org.jacoco</groupId>\n            <artifactId>jacoco-maven-plugin</artifactId>\n            <reportSets>\n              <reportSet>\n                <reports>\n                  <report>report</report>\n                </reports>\n              </reportSet>\n            </reportSets>\n          </plugin>\n        </plugins>\n      </reporting>\n    </profile>\n    <profile>\n      <id>docker</id>\n      <modules>\n        <module>docker</module>\n        <module>tests</module>\n      </modules>\n    </profile>\n\n    <profile>\n      <!-- Checks style and licensing requirements. This is a good\n           idea to run for contributions and for the release process. While it would\n           be nice to run always these plugins can considerably slow the build and have\n           proven to create unstable builds in our multi-module project and when building\n           using multiple threads. The stability issues seen with Checkstyle in multi-module\n           builds include false-positives and false negatives. -->\n      <id>contrib-check</id>\n         <build>\n            <plugins>\n                <plugin>\n                    <groupId>org.apache.rat</groupId>\n                    <artifactId>apache-rat-plugin</artifactId>\n                    <executions>\n                      <execution>\n                          <goals>\n                              <goal>check</goal>\n                          </goals>\n                          <phase>verify</phase>\n                      </execution>\n                   </executions>\n                </plugin>\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-checkstyle-plugin</artifactId>\n                    <executions>\n                       <execution>\n                          <id>check-style</id>\n                          <phase>verify</phase>\n                         <configuration>\n                           <configLocation>${pulsar.basedir}/buildtools/src/main/resources/pulsar/checkstyle.xml</configLocation>\n                           <suppressionsLocation>${pulsar.basedir}/buildtools/src/main/resources/pulsar/suppressions.xml</suppressionsLocation>\n                           <inputEncoding>UTF-8</inputEncoding>\n                           <excludes>**/proto/*</excludes>\n                         </configuration>\n                          <goals>\n                             <goal>check</goal>\n                          </goals>\n                       </execution>\n                    </executions>\n                </plugin>\n             </plugins>\n         </build>\n    </profile>\n\n    <profile>\n      <id>windows</id>\n      <activation>\n        <os>\n          <family>Windows</family>\n        </os>\n      </activation>\n    </profile>\n    <!-- Primary Module profile -->\n    <profile>\n      <id>main</id>\n      <activation>\n        <!-- always activate this profile by default. Use \"-main\" or \"!main\" in the \"-P\" parameter to exclude it -->\n        <!-- for example use \"-Pcore-modules,-main\" to activate the core-modules profile -->\n        <property>\n          <name>disableMainProfile</name>\n          <!-- always active unless true is passed as a value -->\n          <value>!true</value>\n        </property>\n      </activation>\n      <modules>\n        <module>buildtools</module>\n        <module>testmocks</module>\n        <module>managed-ledger</module>\n        <module>tiered-storage</module>\n        <module>pulsar-common</module>\n        <module>pulsar-bom</module>\n        <module>pulsar-broker-common</module>\n        <module>pulsar-broker</module>\n        <module>pulsar-cli-utils</module>\n        <module>pulsar-client-api</module>\n        <module>pulsar-client</module>\n        <module>pulsar-client-shaded</module>\n        <module>pulsar-client-admin-api</module>\n        <module>pulsar-client-admin</module>\n        <module>pulsar-client-admin-shaded</module>\n        <module>pulsar-client-tools-api</module>\n        <module>pulsar-client-tools</module>\n        <module>pulsar-client-tools-customcommand-example</module>\n        <module>pulsar-client-tools-test</module>\n        <module>pulsar-client-all</module>\n        <module>pulsar-docs-tools</module>\n        <module>pulsar-websocket</module>\n        <module>pulsar-proxy</module>\n        <module>pulsar-testclient</module>\n        <module>pulsar-broker-auth-athenz</module>\n        <module>pulsar-client-auth-athenz</module>\n        <module>pulsar-broker-auth-oidc</module>\n        <module>pulsar-broker-auth-sasl</module>\n        <module>pulsar-client-auth-sasl</module>\n        <module>pulsar-config-validation</module>\n        <module>pulsar-opentelemetry</module>\n\n        <module>structured-event-log</module>\n\n        <!-- transaction related modules -->\n        <module>pulsar-transaction</module>\n\n        <!-- functions-related modules -->\n        <module>pulsar-functions</module>\n\n        <!-- connector-related modules -->\n        <module>pulsar-io</module>\n\n        <!-- Bouncy Castle Provider loaders-->\n        <module>bouncy-castle</module>\n\n        <module>pulsar-client-messagecrypto-bc</module>\n\n        <module>pulsar-metadata</module>\n        <module>jetcd-core-shaded</module>\n        <module>jclouds-shaded</module>\n        <module>pulsar-client-dependencies-minimized</module>\n\n        <!-- package management releated modules (begin) -->\n        <module>pulsar-package-management</module>\n        <!-- package management releated modules (end) -->\n\n        <!-- all these 3 modules should be put at the end in this exact sequence -->\n        <module>distribution</module>\n        <module>docker</module>\n        <module>tests</module>\n\n        <module>microbench</module>\n      </modules>\n    </profile>\n\n    <!-- core profile focused of pulsar java modules -->\n    <profile>\n      <id>core-modules</id>\n      <properties>\n        <skipSourceReleaseAssembly>true</skipSourceReleaseAssembly>\n      </properties>\n      <modules>\n        <module>buildtools</module>\n        <module>testmocks</module>\n        <module>managed-ledger</module>\n        <module>pulsar-common</module>\n        <module>pulsar-bom</module>\n        <module>pulsar-broker-common</module>\n        <module>pulsar-broker</module>\n        <module>pulsar-cli-utils</module>\n        <module>pulsar-client-api</module>\n        <module>pulsar-client</module>\n        <module>pulsar-client-admin-api</module>\n        <module>pulsar-client-admin</module>\n        <module>pulsar-client-tools-api</module>\n        <module>pulsar-client-tools</module>\n        <module>pulsar-client-tools-customcommand-example</module>\n        <module>pulsar-client-tools-test</module>\n        <module>pulsar-docs-tools</module>\n        <module>pulsar-websocket</module>\n        <module>pulsar-proxy</module>\n        <module>pulsar-testclient</module>\n        <module>pulsar-broker-auth-oidc</module>\n        <module>pulsar-broker-auth-sasl</module>\n        <module>pulsar-client-auth-sasl</module>\n        <module>pulsar-config-validation</module>\n        <module>pulsar-opentelemetry</module>\n\n        <!-- transaction related modules -->\n        <module>pulsar-transaction</module>\n\n        <!-- functions-related modules -->\n        <module>pulsar-functions</module>\n\n        <!-- connector-related modules -->\n        <module>pulsar-io</module>\n\n        <!-- Bouncy Castle Provider loaders-->\n        <module>bouncy-castle</module>\n\n        <module>pulsar-client-messagecrypto-bc</module>\n\n        <!-- all these modules should be put at the end in this exact sequence -->\n        <module>distribution</module>\n        <module>pulsar-metadata</module>\n        <module>jetcd-core-shaded</module>\n        <module>pulsar-client-dependencies-minimized</module>\n        <!-- package management releated modules (begin) -->\n        <module>pulsar-package-management</module>\n        <!-- package management releated modules (end) -->\n      </modules>\n    </profile>\n\n    <!--\n         Configure Google Error Prone static code analyser, http://errorprone.info\n\n         usage:\n         activate profile \"errorprone\"\n\n         It is required to add \"lombok.addJavaxGeneratedAnnotation = true\" to lombok.config\n         temporarily before running the analysis.\n\n         usage example:\n         echo lombok.addJavaxGeneratedAnnotation=true >> lombok.config\n         mvn -Perrorprone,main compile\n\n         Revisiting warnings and errors is possible in IntelliJ after activating\n         errorprone and main in \"Maven->Profiles\" and choosing\n         \"Build->Rebuild Project\"\n         Compiling all Pulsar projects in IntelliJ requires some manual tweaks to get the\n         shaded projects to pass compilation. In some cases, it's better to mark the project\n         ignored in IntelliJ by right clicking the project in IntelliJ's maven view and\n         choosing \"Ignore Projects\". After \"Reload All Maven Projects\" and a rebuild, it might\n         be possible to proceed compiling the remaining projects.\n    -->\n    <profile>\n      <id>errorprone</id>\n      <build>\n        <plugins>\n          <plugin>\n            <groupId>org.apache.maven.plugins</groupId>\n            <artifactId>maven-compiler-plugin</artifactId>\n            <configuration>\n              <fork>true</fork>\n              <meminitial>128m</meminitial>\n              <maxmem>1024m</maxmem>\n              <compilerArgs combine.children=\"append\">\n                <arg>-XDcompilePolicy=simple</arg>\n                <arg>-Xlint:-options</arg>\n                <!-- configure Error Prone . Disable some checks that crash the compiler or are annoying -->\n                <!-- the following argument must be kept on one line when building with JDK8 -->\n                <arg>-Xplugin:ErrorProne -XepExcludedPaths:.*/target/generated-sources/.* -XepDisableWarningsInGeneratedCode -Xep:UnusedVariable:OFF -Xep:FallThrough:OFF -Xep:OverrideThrowableToString:OFF -Xep:UnusedMethod:OFF -Xep:StringSplitter:OFF -Xep:CanonicalDuration:OFF -Xep:Slf4jDoNotLogMessageOfExceptionExplicitly:WARN -Xep:Slf4jSignOnlyFormat:WARN -Xep:Slf4jFormatShouldBeConst:WARN -Xep:Slf4jLoggerShouldBePrivate:WARN -Xep:Slf4jLoggerShouldBeNonStatic:OFF</arg>\n                <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.api=ALL-UNNAMED</arg>\n                <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.file=ALL-UNNAMED</arg>\n                <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.main=ALL-UNNAMED</arg>\n                <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.model=ALL-UNNAMED</arg>\n                <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.parser=ALL-UNNAMED</arg>\n                <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.processing=ALL-UNNAMED</arg>\n                <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED</arg>\n                <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED</arg>\n                <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.code=ALL-UNNAMED</arg>\n                <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED</arg>\n              </compilerArgs>\n              <annotationProcessorPaths combine.children=\"append\">\n                <path>\n                  <groupId>com.google.errorprone</groupId>\n                  <artifactId>error_prone_core</artifactId>\n                  <version>${errorprone.version}</version>\n                </path>\n                <path>\n                  <groupId>org.mockito</groupId>\n                  <artifactId>mockito-errorprone</artifactId>\n                  <version>${mockito.version}</version>\n                </path>\n                <!-- add https://github.com/KengoTODA/errorprone-slf4j Error Prone plugin -->\n                <!-- detects slf4j misusage. -->\n                <path>\n                  <groupId>jp.skypencil.errorprone.slf4j</groupId>\n                  <artifactId>errorprone-slf4j</artifactId>\n                  <version>${errorprone-slf4j.version}</version>\n                </path>\n              </annotationProcessorPaths>\n            </configuration>\n          </plugin>\n        </plugins>\n      </build>\n    </profile>\n    <profile>\n      <id>integrationTests</id>\n      <modules>\n        <module>tests</module>\n      </modules>\n    </profile>\n    <profile>\n      <id>skip-all</id>\n      <properties>\n        <maven.main.skip>true</maven.main.skip>\n        <maven.test.skip>true</maven.test.skip>\n        <skipSourceReleaseAssembly>true</skipSourceReleaseAssembly>\n        <skipBuildDistribution>true</skipBuildDistribution>\n        <spotbugs.skip>true</spotbugs.skip>\n        <license.skip>true</license.skip>\n        <rat.skip>true</rat.skip>\n        <assembly.skipAssembly>true</assembly.skipAssembly>\n        <shadePluginPhase>none</shadePluginPhase>\n        <narPluginPhase>none</narPluginPhase>\n        <skipDocker>true</skipDocker>\n      </properties>\n      <build>\n        <plugins>\n          <plugin>\n            <groupId>org.apache.maven.plugins</groupId>\n            <artifactId>maven-compiler-plugin</artifactId>\n            <executions>\n              <execution>\n                <id>default-testCompile</id>\n                <goals>\n                  <goal>testCompile</goal>\n                </goals>\n                <phase>none</phase>\n              </execution>\n            </executions>\n          </plugin>\n          <plugin>\n            <groupId>org.apache.maven.plugins</groupId>\n            <artifactId>maven-surefire-plugin</artifactId>\n            <executions>\n              <execution>\n                <id>default-test</id>\n                <goals>\n                  <goal>test</goal>\n                </goals>\n                <phase>none</phase>\n              </execution>\n            </executions>\n          </plugin>\n        </plugins>\n      </build>\n    </profile>\n    <profile>\n      <id>owasp-dependency-check</id>\n      <build>\n        <plugins>\n          <plugin>\n            <groupId>org.owasp</groupId>\n            <artifactId>dependency-check-maven</artifactId>\n            <configuration>\n              <suppressionFiles>\n                <suppressionFile>${pulsar.basedir}/src/owasp-dependency-check-false-positives.xml</suppressionFile>\n                <suppressionFile>${pulsar.basedir}/src/owasp-dependency-check-suppressions.xml</suppressionFile>\n              </suppressionFiles>\n              <failBuildOnCVSS>7</failBuildOnCVSS>\n              <msbuildAnalyzerEnabled>false</msbuildAnalyzerEnabled>\n              <nodeAnalyzerEnabled>false</nodeAnalyzerEnabled>\n              <yarnAuditAnalyzerEnabled>false</yarnAuditAnalyzerEnabled>\n              <pyDistributionAnalyzerEnabled>false</pyDistributionAnalyzerEnabled>\n              <pyPackageAnalyzerEnabled>false</pyPackageAnalyzerEnabled>\n              <pipAnalyzerEnabled>false</pipAnalyzerEnabled>\n              <pipfileAnalyzerEnabled>false</pipfileAnalyzerEnabled>\n              <retireJsAnalyzerEnabled>false</retireJsAnalyzerEnabled>\n              <msbuildAnalyzerEnabled>false</msbuildAnalyzerEnabled>\n              <mixAuditAnalyzerEnabled>false</mixAuditAnalyzerEnabled>\n              <nugetconfAnalyzerEnabled>false</nugetconfAnalyzerEnabled>\n              <assemblyAnalyzerEnabled>false</assemblyAnalyzerEnabled>\n            </configuration>\n            <executions>\n              <execution>\n                <goals>\n                  <goal>aggregate</goal>\n                </goals>\n              </execution>\n            </executions>\n          </plugin>\n        </plugins>\n      </build>\n      <reporting>\n        <plugins>\n          <plugin>\n            <groupId>org.owasp</groupId>\n            <artifactId>dependency-check-maven</artifactId>\n            <reportSets>\n              <reportSet>\n                <reports>\n                  <report>aggregate</report>\n                </reports>\n              </reportSet>\n            </reportSets>\n          </plugin>\n        </plugins>\n      </reporting>\n    </profile>\n\n    <profile>\n      <id>pulsar-io-tests</id>\n      <modules>\n        <module>pulsar-io</module>\n      </modules>\n    </profile>\n\n    <profile>\n      <id>pulsar-io-elastic-tests</id>\n      <modules>\n        <module>pulsar-io</module>\n      </modules>\n    </profile>\n\n    <profile>\n      <id>pulsar-io-kafka-connect-tests</id>\n      <modules>\n        <module>pulsar-io</module>\n      </modules>\n    </profile>\n\n    <profile>\n      <id>microbench</id>\n      <modules>\n        <module>microbench</module>\n      </modules>\n      <properties>\n        <skipSourceReleaseAssembly>true</skipSourceReleaseAssembly>\n        <skipBuildDistribution>true</skipBuildDistribution>\n        <spotbugs.skip>true</spotbugs.skip>\n        <license.skip>true</license.skip>\n        <rat.skip>true</rat.skip>\n        <assembly.skipAssembly>true</assembly.skipAssembly>\n        <narPluginPhase>none</narPluginPhase>\n        <skipDocker>true</skipDocker>\n        <skipTests>true</skipTests>\n        <checkstyle.skip>true</checkstyle.skip>\n      </properties>\n    </profile>\n\n    <profile>\n      <id>jdk-major-version-set</id>\n      <activation>\n        <property>\n          <name>env.IMAGE_JDK_MAJOR_VERSION</name>\n        </property>\n      </activation>\n      <properties>\n        <!-- Override the default value with the environment variable -->\n        <IMAGE_JDK_MAJOR_VERSION>${env.IMAGE_JDK_MAJOR_VERSION}</IMAGE_JDK_MAJOR_VERSION>\n      </properties>\n    </profile>\n\n  </profiles>\n\n  <repositories>\n    <repository>\n      <id>central</id>\n      <layout>default</layout>\n      <url>https://repo1.maven.org/maven2</url>\n      <snapshots>\n        <enabled>false</enabled>\n      </snapshots>\n    </repository>\n    <repository>\n      <id>confluent</id>\n      <url>https://packages.confluent.io/maven/</url>\n      <snapshots>\n        <enabled>false</enabled>\n      </snapshots>\n    </repository>\n    <repository>\n      <id>maven.restlet.org</id>\n      <name>maven.restlet.org</name>\n      <url>https://maven.restlet.talend.com</url>\n      <snapshots>\n        <enabled>false</enabled>\n      </snapshots>\n    </repository>\n  </repositories>\n</project>\n"
        },
        {
          "name": "pulsar-bom",
          "type": "tree",
          "content": null
        },
        {
          "name": "pulsar-broker-auth-athenz",
          "type": "tree",
          "content": null
        },
        {
          "name": "pulsar-broker-auth-oidc",
          "type": "tree",
          "content": null
        },
        {
          "name": "pulsar-broker-auth-sasl",
          "type": "tree",
          "content": null
        },
        {
          "name": "pulsar-broker-common",
          "type": "tree",
          "content": null
        },
        {
          "name": "pulsar-broker",
          "type": "tree",
          "content": null
        },
        {
          "name": "pulsar-cli-utils",
          "type": "tree",
          "content": null
        },
        {
          "name": "pulsar-client-admin-api",
          "type": "tree",
          "content": null
        },
        {
          "name": "pulsar-client-admin-shaded",
          "type": "tree",
          "content": null
        },
        {
          "name": "pulsar-client-admin",
          "type": "tree",
          "content": null
        },
        {
          "name": "pulsar-client-all",
          "type": "tree",
          "content": null
        },
        {
          "name": "pulsar-client-api",
          "type": "tree",
          "content": null
        },
        {
          "name": "pulsar-client-auth-athenz",
          "type": "tree",
          "content": null
        },
        {
          "name": "pulsar-client-auth-sasl",
          "type": "tree",
          "content": null
        },
        {
          "name": "pulsar-client-cpp",
          "type": "tree",
          "content": null
        },
        {
          "name": "pulsar-client-dependencies-minimized",
          "type": "tree",
          "content": null
        },
        {
          "name": "pulsar-client-messagecrypto-bc",
          "type": "tree",
          "content": null
        },
        {
          "name": "pulsar-client-shaded",
          "type": "tree",
          "content": null
        },
        {
          "name": "pulsar-client-tools-api",
          "type": "tree",
          "content": null
        },
        {
          "name": "pulsar-client-tools-customcommand-example",
          "type": "tree",
          "content": null
        },
        {
          "name": "pulsar-client-tools-test",
          "type": "tree",
          "content": null
        },
        {
          "name": "pulsar-client-tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "pulsar-client",
          "type": "tree",
          "content": null
        },
        {
          "name": "pulsar-common",
          "type": "tree",
          "content": null
        },
        {
          "name": "pulsar-config-validation",
          "type": "tree",
          "content": null
        },
        {
          "name": "pulsar-docs-tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "pulsar-function-go",
          "type": "tree",
          "content": null
        },
        {
          "name": "pulsar-functions",
          "type": "tree",
          "content": null
        },
        {
          "name": "pulsar-io",
          "type": "tree",
          "content": null
        },
        {
          "name": "pulsar-metadata",
          "type": "tree",
          "content": null
        },
        {
          "name": "pulsar-opentelemetry",
          "type": "tree",
          "content": null
        },
        {
          "name": "pulsar-package-management",
          "type": "tree",
          "content": null
        },
        {
          "name": "pulsar-proxy",
          "type": "tree",
          "content": null
        },
        {
          "name": "pulsar-testclient",
          "type": "tree",
          "content": null
        },
        {
          "name": "pulsar-transaction",
          "type": "tree",
          "content": null
        },
        {
          "name": "pulsar-websocket",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "structured-event-log",
          "type": "tree",
          "content": null
        },
        {
          "name": "testmocks",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tiered-storage",
          "type": "tree",
          "content": null
        },
        {
          "name": "wireshark",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}