{
  "metadata": {
    "timestamp": 1736708864870,
    "page": 71,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjgw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "mockito/mockito",
      "stars": 14975,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".checkstyle",
          "type": "blob",
          "size": 0.9052734375,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<fileset-config file-format-version=\"1.2.0\" simple-config=\"false\">\n    <local-check-config name=\"mockito-code\" location=\"conf/checkstyle-code.xml\" type=\"project\" description=\"\">\n        <additional-data name=\"protect-config-file\" value=\"false\"/>\n    </local-check-config>\n    <local-check-config name=\"mockito-test\" location=\"conf/checkstyle-test.xml\" type=\"project\" description=\"\">\n        <additional-data name=\"protect-config-file\" value=\"false\"/>\n    </local-check-config>\n    <fileset name=\"mockito-code\" enabled=\"true\" check-config-name=\"mockito-code\" local=\"true\">\n        <file-match-pattern match-pattern=\"^src[/\\\\].*java$\" include-pattern=\"true\"/>\n    </fileset>\n    <fileset name=\"mockito-test\" enabled=\"true\" check-config-name=\"mockito-test\" local=\"true\">\n        <file-match-pattern match-pattern=\"^test[/\\\\].*java$\" include-pattern=\"true\"/>\n    </fileset>\n</fileset-config>\n"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 1.373046875,
          "content": "root = true\n\n[*]\nend_of_line = lf\ninsert_final_newline = true\ntrim_trailing_whitespace = true\nindent_style = space\nindent_size = 4\ncharset = utf-8\n\n[{*.yml,*.yaml}]\nindent_size = 2\nij_continuation_indent_size = 2\nij_yaml_keep_indents_on_empty_lines = false\nij_yaml_keep_line_breaks = true\nij_any_block_comment_at_first_column = false\nij_java_line_comment_at_first_column = false\nij_java_line_comment_add_space = true\n\n[*.java]\nij_java_align_multiline_throws_list = true\nij_java_align_multiline_annotation_parameters = true\nij_java_annotation_parameter_wrap = off\nij_java_blank_lines_after_imports = 1\nij_java_blank_lines_before_imports = 1\nij_java_class_count_to_use_import_on_demand = 100\nij_java_names_count_to_use_import_on_demand = 100\nij_java_imports_layout = static java.**,static javax.**,$*,|,java.**,javax.**,*\nij_java_insert_inner_class_imports = true\nij_java_layout_static_imports_separately = true\nij_java_method_call_chain_wrap = off\nij_java_throws_list_wrap = off\nij_java_block_comment_at_first_column = false\nij_java_line_comment_at_first_column = false\nij_java_line_comment_add_space = true\n\n[{*.kt,*.kts}]\nij_kotlin_block_comment_at_first_column = false\nij_kotlin_line_comment_at_first_column = false\nij_kotlin_line_comment_add_space = true\n\n[*.gradle]\nij_groovy_block_comment_at_first_column = false\nij_groovy_line_comment_at_first_column = false\nij_groovy_line_comment_add_space = true\n\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.1240234375,
          "content": "# Auto detect text files and perform LF normalization\n* text=auto\n\n# Allow gradle.bat to retain CRLF\ngradlew.bat text eol=crlf\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.291015625,
          "content": "# Mac\n.DS_Store\n\n# Intellij\n*.iml\n*.ipr\n*.iws\n.idea\n*.eml\n.shelf\n\n# Eclipse\n.classpath\n.project\n.settings/\nbin/\n\n# VSCode\n.vscode/\n\n# Gradle & builds\nbuild\nbuild-cache\ntarget\nout\n.gradle\nclasses\n.gradletasknamecache\n*.log\n\n# Used to check reproducibility of Mockito jars\nchecksums/\n/.tool-versions\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0546875,
          "content": "The MIT License\n\nCopyright (c) 2007 Mockito contributors\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE."
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.876953125,
          "content": "<a href=\"https://site.mockito.org\">\n<img src=\"https://raw.githubusercontent.com/mockito/mockito/main/src/main/javadoc/org/mockito/logo.png\"\n     srcset=\"https://raw.githubusercontent.com/mockito/mockito/main/src/main/javadoc/org/mockito/logo@2x.png 2x\"\n     alt=\"Mockito\" />\n</a>\n\nMost popular mocking framework for Java\n\n[![CI](https://github.com/mockito/mockito/workflows/CI/badge.svg)](https://github.com/mockito/mockito/actions?query=workflow%3ACI)\n[![Coverage Status](https://img.shields.io/codecov/c/github/mockito/mockito.svg)](https://codecov.io/github/mockito/mockito)\n[![MIT License](https://img.shields.io/badge/license-MIT-green.svg)](https://github.com/mockito/mockito/blob/main/LICENSE)\n\n[![Release Notes](https://img.shields.io/badge/release%20notes-5.x-yellow.svg)](https://github.com/mockito/mockito/releases/)\n[![Maven Central](https://img.shields.io/maven-central/v/org.mockito/mockito-core.svg)](https://search.maven.org/artifact/org.mockito/mockito-core/)\n[![Javadoc](https://www.javadoc.io/badge/org.mockito/mockito-core.svg)](https://www.javadoc.io/doc/org.mockito/mockito-core)\n\n\n## Current version is 5.x\nStill on Mockito 1.x? See [what's new](https://github.com/mockito/mockito/wiki/What%27s-new-in-Mockito-2) in Mockito 2!\n[Mockito 3](https://github.com/mockito/mockito/releases/tag/v3.0.0) does not introduce any breaking API changes, but now requires Java 8 over Java 6 for Mockito 2.\n[Mockito 4](https://github.com/mockito/mockito/releases/tag/v4.0.0) removes deprecated API.\n[Mockito 5](https://github.com/mockito/mockito/releases/tag/v5.0.0) switches the default mockmaker to mockito-inline, and now requires Java 11.\nOnly one major version is supported at a time, and changes are not backported to older versions.\n\n## Mockito for enterprise\n\nAvailable as part of the [Tidelift](https://tidelift.com/subscription/pkg/maven-org-mockito-mockito-core) Subscription.\n\nThe maintainers of org.mockito:mockito-core and thousands of other packages are working with Tidelift to deliver\ncommercial support and maintenance for the open source dependencies you use to build your applications. Save time,\nreduce risk, and improve code health, while paying the maintainers of the exact dependencies you use.\n[Learn more.](https://tidelift.com/subscription/pkg/maven-org-mockito-mockito-core?utm_source=maven-org-mockito-mockito-core&utm_medium=referral&utm_campaign=enterprise&utm_term=repo)\n\n## Development\n\nMockito publishes every change as a `-SNAPSHOT` version to a public Sonatype repository. Roughly once a month, we\npublish a new minor or patch version to Maven Central. For release automation we use\n[Shipkit library](http://shipkit.org), [Gradle Nexus Publish Plugin](https://github.com/gradle-nexus/publish-plugin).\nFully automated releases are awesome, and you should do that for your libraries, too!\nSee the [latest release notes](https://github.com/mockito/mockito/releases/)\nand [latest documentation](https://javadoc.io/page/org.mockito/mockito-core/latest/org/mockito/Mockito.html). Docs in\njavadoc.io are available 24h after release. Read also\nabout [semantic versioning in Mockito](https://github.com/mockito/mockito/wiki/Semantic-Versioning).\n\nOlder 1.x and 2.x releases are available in\n[Central Repository](https://search.maven.org/artifact/org.mockito/mockito-core/1.10.19/jar)\nand [javadoc.io](https://javadoc.io/doc/org.mockito/mockito-core/1.10.19/org/mockito/Mockito.html) (documentation).\n\n## More information\n\nAll you want to know about Mockito is hosted at [The Mockito Site](https://site.mockito.org) which is [Open Source](https://github.com/mockito/mockito.github.io) and likes [pull requests](https://github.com/mockito/mockito.github.io/pulls), too.\n\nWant to contribute? Take a look at the [Contributing Guide](https://github.com/mockito/mockito/blob/main/.github/CONTRIBUTING.md).\n\nEnjoy Mockito!\n\n## Need help?\n\n* Search / Ask question on [stackoverflow](https://stackoverflow.com/questions/tagged/mockito)\n* Go to the [mockito mailing-list](https://groups.google.com/group/mockito) (moderated)\n* Open a ticket in GitHub [issue tracker](https://github.com/mockito/mockito/issues)\n\n## How to develop Mockito?\n\nTo build locally:\n\n```shell\n./gradlew build\n```\nYou can open in any IDE that support Gradle, e.g. IntelliJ IDEA, or Fleet.\nFor Eclipse, one may need to run `./gradlew eclipse` before importing the project.\n\n## How to release new version?\n\n1. Every change on the main development branch is released as `-SNAPSHOT` version to Sonatype snapshot repo\n   at https://s01.oss.sonatype.org/content/repositories/snapshots/org/mockito/mockito-core.\n2. To release a non-snapshot version to Maven Central push an annotated tag, for example:\n\n    ```shell\n    git tag -a -m \"Release 3.4.5\" v3.4.5\n    git push origin v3.4.5\n    ```\n\n3. At the moment, you **may not create releases from GitHub Web UI**. Doing so will make the CI build fail because the\n   CI creates the changelog and posts to GitHub releases. We'll support this in the future.\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.0810546875,
          "content": "# Required by Tidelift\n\nCoordinated Disclosure Plan: https://tidelift.com/security\n"
        },
        {
          "name": "build.gradle.kts",
          "type": "blob",
          "size": 0.5341796875,
          "content": "buildscript {\n    repositories {\n        mavenLocal() //for local testing of mockito-release-tools\n        google()\n        gradlePluginPortal()\n    }\n\n    dependencies {\n        classpath(\"org.jetbrains.kotlin:kotlin-gradle-plugin:1.9.24\")\n    }\n}\n\nplugins {\n    id(\"eclipse\")\n    id(\"com.github.ben-manes.versions\") version \"0.51.0\"\n    id(\"mockito.root.releasing-conventions\")\n\n    // Top-level android plugin declaration required for :mockito-integration-tests:android-tests to work\n    alias(libs.plugins.android.application) apply false\n}\n\n\n"
        },
        {
          "name": "buildSrc",
          "type": "tree",
          "content": null
        },
        {
          "name": "check_reproducibility.sh",
          "type": "blob",
          "size": 0.5537109375,
          "content": "#!/bin/bash -e\n\n# This script is taken from https://github.com/junit-team/junit5/pull/2217\n\nrm -rf checksums/\nmkdir checksums/\n\nexport SOURCE_DATE_EPOCH=$(date +%s)\n\nfunction calculate_checksums() {\n    OUTPUT=checksums/$1\n\n    ./gradlew --no-build-cache clean assemble\n\n    find ./build -name '*.jar' \\\n        | grep '/build/libs/' \\\n        | grep --invert-match 'javadoc' \\\n        | sort \\\n        | xargs sha256sum > ${OUTPUT}\n}\n\n\ncalculate_checksums checksums-1.txt\ncalculate_checksums checksums-2.txt\n\ndiff checksums/checksums-1.txt checksums/checksums-2.txt\n"
        },
        {
          "name": "config",
          "type": "tree",
          "content": null
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradle.properties",
          "type": "blob",
          "size": 1.08203125,
          "content": "org.gradle.daemon=true\norg.gradle.parallel=true\norg.gradle.caching=true\norg.gradle.jvmargs=-Xmx2048m -Dfile.encoding=UTF-8 \\\n  -XX:+IgnoreUnrecognizedVMOptions \\\n  --add-exports=jdk.compiler/com.sun.tools.javac.api=ALL-UNNAMED \\\n  --add-exports=jdk.compiler/com.sun.tools.javac.code=ALL-UNNAMED \\\n  --add-exports=jdk.compiler/com.sun.tools.javac.file=ALL-UNNAMED \\\n  --add-exports=jdk.compiler/com.sun.tools.javac.parser=ALL-UNNAMED \\\n  --add-exports=jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED \\\n  --add-exports=jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED\n\n# AndroidX package structure to make it clearer which packages are bundled with the\n# Android operating system, and which are packaged with your app\"s APK\n# https://developer.android.com/topic/libraries/support-library/androidx-rn\nandroid.useAndroidX=true\n# Kotlin code style for this project: \"official\" or \"obsolete\":\nkotlin.code.style=official\n\n# Version of JDK to use for running tests.\n# Possible values:\n# - auto -> use Java running Gradle, best for local dev.\n# - A Java major version number, like 11 or 17.\nmockito.test.java=auto\n"
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 8.48828125,
          "content": "#!/bin/sh\n\n#\n# Copyright © 2015-2021 the original authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      https://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\n##############################################################################\n#\n#   Gradle start up script for POSIX generated by Gradle.\n#\n#   Important for running:\n#\n#   (1) You need a POSIX-compliant shell to run this script. If your /bin/sh is\n#       noncompliant, but you have some other compliant shell such as ksh or\n#       bash, then to run this script, type that shell name before the whole\n#       command line, like:\n#\n#           ksh Gradle\n#\n#       Busybox and similar reduced shells will NOT work, because this script\n#       requires all of these POSIX shell features:\n#         * functions;\n#         * expansions «$var», «${var}», «${var:-default}», «${var+SET}»,\n#           «${var#prefix}», «${var%suffix}», and «$( cmd )»;\n#         * compound commands having a testable exit status, especially «case»;\n#         * various built-in commands including «command», «set», and «ulimit».\n#\n#   Important for patching:\n#\n#   (2) This script targets any POSIX shell, so it avoids extensions provided\n#       by Bash, Ksh, etc; in particular arrays are avoided.\n#\n#       The \"traditional\" practice of packing multiple parameters into a\n#       space-separated string is a well documented source of bugs and security\n#       problems, so this is (mostly) avoided, by progressively accumulating\n#       options in \"$@\", and eventually passing that to Java.\n#\n#       Where the inherited environment variables (DEFAULT_JVM_OPTS, JAVA_OPTS,\n#       and GRADLE_OPTS) rely on word-splitting, this is performed explicitly;\n#       see the in-line comments for details.\n#\n#       There are tweaks for specific operating systems such as AIX, CygWin,\n#       Darwin, MinGW, and NonStop.\n#\n#   (3) This script is generated from the Groovy template\n#       https://github.com/gradle/gradle/blob/HEAD/subprojects/plugins/src/main/resources/org/gradle/api/internal/plugins/unixStartScript.txt\n#       within the Gradle project.\n#\n#       You can find Gradle at https://github.com/gradle/gradle/.\n#\n##############################################################################\n\n# Attempt to set APP_HOME\n\n# Resolve links: $0 may be a link\napp_path=$0\n\n# Need this for daisy-chained symlinks.\nwhile\n    APP_HOME=${app_path%\"${app_path##*/}\"}  # leaves a trailing /; empty if no leading path\n    [ -h \"$app_path\" ]\ndo\n    ls=$( ls -ld \"$app_path\" )\n    link=${ls#*' -> '}\n    case $link in             #(\n      /*)   app_path=$link ;; #(\n      *)    app_path=$APP_HOME$link ;;\n    esac\ndone\n\n# This is normally unused\n# shellcheck disable=SC2034\nAPP_BASE_NAME=${0##*/}\n# Discard cd standard output in case $CDPATH is set (https://github.com/gradle/gradle/issues/25036)\nAPP_HOME=$( cd \"${APP_HOME:-./}\" > /dev/null && pwd -P ) || exit\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=maximum\n\nwarn () {\n    echo \"$*\"\n} >&2\n\ndie () {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n} >&2\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\nnonstop=false\ncase \"$( uname )\" in                #(\n  CYGWIN* )         cygwin=true  ;; #(\n  Darwin* )         darwin=true  ;; #(\n  MSYS* | MINGW* )  msys=true    ;; #(\n  NONSTOP* )        nonstop=true ;;\nesac\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=$JAVA_HOME/jre/sh/java\n    else\n        JAVACMD=$JAVA_HOME/bin/java\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=java\n    if ! command -v java >/dev/null 2>&1\n    then\n        die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nfi\n\n# Increase the maximum file descriptors if we can.\nif ! \"$cygwin\" && ! \"$darwin\" && ! \"$nonstop\" ; then\n    case $MAX_FD in #(\n      max*)\n        # In POSIX sh, ulimit -H is undefined. That's why the result is checked to see if it worked.\n        # shellcheck disable=SC2039,SC3045\n        MAX_FD=$( ulimit -H -n ) ||\n            warn \"Could not query maximum file descriptor limit\"\n    esac\n    case $MAX_FD in  #(\n      '' | soft) :;; #(\n      *)\n        # In POSIX sh, ulimit -n is undefined. That's why the result is checked to see if it worked.\n        # shellcheck disable=SC2039,SC3045\n        ulimit -n \"$MAX_FD\" ||\n            warn \"Could not set maximum file descriptor limit to $MAX_FD\"\n    esac\nfi\n\n# Collect all arguments for the java command, stacking in reverse order:\n#   * args from the command line\n#   * the main class name\n#   * -classpath\n#   * -D...appname settings\n#   * --module-path (only if needed)\n#   * DEFAULT_JVM_OPTS, JAVA_OPTS, and GRADLE_OPTS environment variables.\n\n# For Cygwin or MSYS, switch paths to Windows format before running java\nif \"$cygwin\" || \"$msys\" ; then\n    APP_HOME=$( cygpath --path --mixed \"$APP_HOME\" )\n    CLASSPATH=$( cygpath --path --mixed \"$CLASSPATH\" )\n\n    JAVACMD=$( cygpath --unix \"$JAVACMD\" )\n\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    for arg do\n        if\n            case $arg in                                #(\n              -*)   false ;;                            # don't mess with options #(\n              /?*)  t=${arg#/} t=/${t%%/*}              # looks like a POSIX filepath\n                    [ -e \"$t\" ] ;;                      #(\n              *)    false ;;\n            esac\n        then\n            arg=$( cygpath --path --ignore --mixed \"$arg\" )\n        fi\n        # Roll the args list around exactly as many times as the number of\n        # args, so each arg winds up back in the position where it started, but\n        # possibly modified.\n        #\n        # NB: a `for` loop captures its iteration list before it begins, so\n        # changing the positional parameters here affects neither the number of\n        # iterations, nor the values presented in `arg`.\n        shift                   # remove old arg\n        set -- \"$@\" \"$arg\"      # push replacement arg\n    done\nfi\n\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS='\"-Xmx64m\" \"-Xms64m\"'\n\n# Collect all arguments for the java command:\n#   * DEFAULT_JVM_OPTS, JAVA_OPTS, JAVA_OPTS, and optsEnvironmentVar are not allowed to contain shell fragments,\n#     and any embedded shellness will be escaped.\n#   * For example: A user cannot expect ${Hostname} to be expanded, as it is an environment variable and will be\n#     treated as '${Hostname}' itself on the command line.\n\nset -- \\\n        \"-Dorg.gradle.appname=$APP_BASE_NAME\" \\\n        -classpath \"$CLASSPATH\" \\\n        org.gradle.wrapper.GradleWrapperMain \\\n        \"$@\"\n\n# Stop when \"xargs\" is not available.\nif ! command -v xargs >/dev/null 2>&1\nthen\n    die \"xargs is not available\"\nfi\n\n# Use \"xargs\" to parse quoted args.\n#\n# With -n1 it outputs one arg per line, with the quotes and backslashes removed.\n#\n# In Bash we could simply go:\n#\n#   readarray ARGS < <( xargs -n1 <<<\"$var\" ) &&\n#   set -- \"${ARGS[@]}\" \"$@\"\n#\n# but POSIX shell has neither arrays nor command substitution, so instead we\n# post-process each arg (as a line of input to sed) to backslash-escape any\n# character that might be a shell metacharacter, then use eval to reverse\n# that process (while maintaining the separation between arguments), and wrap\n# the whole thing up as a single \"set\" statement.\n#\n# This will of course break if any of these variables contains a newline or\n# an unmatched quote.\n#\n\neval \"set -- $(\n        printf '%s\\n' \"$DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS\" |\n        xargs -n1 |\n        sed ' s~[^-[:alnum:]+,./:=@_]~\\\\&~g; ' |\n        tr '\\n' ' '\n    )\" '\"$@\"'\n\nexec \"$JAVACMD\" \"$@\"\n"
        },
        {
          "name": "gradlew.bat",
          "type": "blob",
          "size": 2.7109375,
          "content": "@rem\n@rem Copyright 2015 the original author or authors.\n@rem\n@rem Licensed under the Apache License, Version 2.0 (the \"License\");\n@rem you may not use this file except in compliance with the License.\n@rem You may obtain a copy of the License at\n@rem\n@rem      https://www.apache.org/licenses/LICENSE-2.0\n@rem\n@rem Unless required by applicable law or agreed to in writing, software\n@rem distributed under the License is distributed on an \"AS IS\" BASIS,\n@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@rem See the License for the specific language governing permissions and\n@rem limitations under the License.\n@rem\n\n@if \"%DEBUG%\"==\"\" @echo off\n@rem ##########################################################################\n@rem\n@rem  Gradle startup script for Windows\n@rem\n@rem ##########################################################################\n\n@rem Set local scope for the variables with windows NT shell\nif \"%OS%\"==\"Windows_NT\" setlocal\n\nset DIRNAME=%~dp0\nif \"%DIRNAME%\"==\"\" set DIRNAME=.\n@rem This is normally unused\nset APP_BASE_NAME=%~n0\nset APP_HOME=%DIRNAME%\n\n@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.\nfor %%i in (\"%APP_HOME%\") do set APP_HOME=%%~fi\n\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nset DEFAULT_JVM_OPTS=\"-Xmx64m\" \"-Xms64m\"\n\n@rem Find java.exe\nif defined JAVA_HOME goto findJavaFromJavaHome\n\nset JAVA_EXE=java.exe\n%JAVA_EXE% -version >NUL 2>&1\nif %ERRORLEVEL% equ 0 goto execute\n\necho.\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\necho.\necho Please set the JAVA_HOME variable in your environment to match the\necho location of your Java installation.\n\ngoto fail\n\n:findJavaFromJavaHome\nset JAVA_HOME=%JAVA_HOME:\"=%\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\n\nif exist \"%JAVA_EXE%\" goto execute\n\necho.\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\necho.\necho Please set the JAVA_HOME variable in your environment to match the\necho location of your Java installation.\n\ngoto fail\n\n:execute\n@rem Setup the command line\n\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\n\n\n@rem Execute Gradle\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*\n\n:end\n@rem End local scope for the variables with windows NT shell\nif %ERRORLEVEL% equ 0 goto mainEnd\n\n:fail\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\nrem the _cmd.exe /c_ return code!\nset EXIT_CODE=%ERRORLEVEL%\nif %EXIT_CODE% equ 0 set EXIT_CODE=1\nif not \"\"==\"%GRADLE_EXIT_CONSOLE%\" exit %EXIT_CODE%\nexit /b %EXIT_CODE%\n\n:mainEnd\nif \"%OS%\"==\"Windows_NT\" endlocal\n\n:omega\n"
        },
        {
          "name": "mockito-bom",
          "type": "tree",
          "content": null
        },
        {
          "name": "mockito-core",
          "type": "tree",
          "content": null
        },
        {
          "name": "mockito-extensions",
          "type": "tree",
          "content": null
        },
        {
          "name": "mockito-integration-tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "settings.gradle.kts",
          "type": "blob",
          "size": 2.068359375,
          "content": "pluginManagement {\n    repositories {\n        gradlePluginPortal()\n        google()\n    }\n}\n\ndependencyResolutionManagement {\n    repositories {\n        google()\n        mavenCentral()\n    }\n}\n\nplugins {\n    id(\"com.gradle.develocity\") version \"3.19\"\n    id(\"org.gradle.toolchains.foojay-resolver-convention\") version \"0.9.0\"\n}\n\ninclude(\"mockito-core\")\n// BOM project\ninclude(\"mockito-bom\")\n// extensions\ninclude(\n    \"mockito-extensions:mockito-android\",\n    \"mockito-extensions:mockito-errorprone\",\n    \"mockito-extensions:mockito-junit-jupiter\",\n    \"mockito-extensions:mockito-proxy\",\n    \"mockito-extensions:mockito-subclass\",\n)\n// integration tests\ninclude(\n    \"mockito-integration-tests:inline-mocks-tests\",\n    \"mockito-integration-tests:extensions-tests\",\n    \"mockito-integration-tests:groovy-tests\",\n    \"mockito-integration-tests:groovy-inline-tests\",\n    \"mockito-integration-tests:kotlin-tests\",\n    \"mockito-integration-tests:kotlin-release-coroutines-tests\",\n    \"mockito-integration-tests:junit-jupiter-extension-tests\",\n    \"mockito-integration-tests:junit-jupiter-inline-mock-maker-extension-tests\",\n    \"mockito-integration-tests:module-tests\",\n    \"mockito-integration-tests:memory-tests\",\n    \"mockito-integration-tests:junit-jupiter-parallel-tests\",\n    \"mockito-integration-tests:osgi-tests\",\n    \"mockito-integration-tests:programmatic-tests\",\n    \"mockito-integration-tests:java-21-tests\",\n)\n\n// https://developer.android.com/studio/command-line/variables#envar\n// https://developer.android.com/studio/build#properties-files\nif (providers.environmentVariable(\"ANDROID_HOME\").isPresent || File(\"local.properties\").exists()) {\n    include(\"mockito-integration-tests:android-tests\")\n} else {\n    logger.info(\"Not including android test project due to missing SDK configuration\")\n}\n\nrootProject.name = \"mockito\"\n\n//Posting Build scans to https://scans.gradle.com\ndevelocity {\n    buildScan {\n        termsOfUseUrl = \"https://gradle.com/terms-of-service\"\n        termsOfUseAgree = \"yes\"\n    }\n}\n\nbuildCache {\n    local {\n        isEnabled = !providers.environmentVariable(\"CI\").isPresent\n    }\n}\n"
        }
      ]
    }
  ]
}