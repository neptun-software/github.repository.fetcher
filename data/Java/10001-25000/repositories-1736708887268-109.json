{
  "metadata": {
    "timestamp": 1736708887268,
    "page": 109,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjExMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "zaproxy/zaproxy",
      "stars": 12933,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.8623046875,
          "content": "# Set the default behavior.\n* text=auto eol=lf\n\n# Explicitly declare text files you want to always be normalized.\n*.config text\nCOPYING text\n*.css text\nDockerfile* text\n*.desktop text\n*.dtd text\n*.flex text\n*.gradle text\ngradlew text\n*.html text\n*.htm text\n*.ini text\n*.java text\n*.js text\n*.json text\n*.jsp text\n*.kt text\n*.kts text\n*.md text\n*.php text\n*.pl text\n*.plist text\n*.policy text\n*.properties text\n*.py text\nREADME text\n*.rst text\n*.schema text\n*.script text\n*.sh text\n*.svg text\n*.txt text\n*.weekly text\nwrapper text\n*.xml text\n*.xml2 text\n*.xsl text\n*.yaml text\n*.yml text\n\n# Declare files that will always have CRLF line endings on checkout.\n*.bat eol=crlf\n*.install4j eol=crlf\n\n# Denote all files that are truly binary and should not be modified.\n*.icns binary\n*.ico binary\n*.jar binary\n*.jpg binary\nPkgInfo binary\n*.png binary\n*.rtf binary\n*.ttf binary\n*.zip binary\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.3857421875,
          "content": "# Misc\n#-----\n.DS_Store\n\n# Gradle\n#-------\n.gradle\n/build\n/buildSrc/build\n/zap/build\n\n# JVM\n#----\nhs_err_pid*\n\n# IDEA\n# ----\n*~\n.idea\n.shelf\n/*.iml\n/*.ipr\n/*.iws\n/buildSrc/*.iml\n/buildSrc/*.ipr\n/buildSrc/*.iws\n/buildSrc/out\n/out\n/zap/out\n\n# Eclipse\n# -------\n*.classpath\n*.project\n*.settings\n/bin\n/buildSrc/bin\n/zap/bin\n\n# NetBeans\n# --------\n.nb-gradle\n.nb-gradle-properties\n\n# ZAP\n# ---\n*.zap\n"
        },
        {
          "name": "BUILDING.md",
          "type": "blob",
          "size": 3.59765625,
          "content": "# Building\nZAP is built with [Gradle], the following sections explain how to use it to build and run ZAP.\nThe Gradle tasks are expected to be executed with the provided [Gradle Wrapper].\n\n## IDEs\nThe following page provides in depth guides on how to import, build, and run ZAP (core and add-ons) with commonly used IDEs:\nhttps://www.zaproxy.org/docs/developer/\n\n## Run ZAP\nTo run ZAP directly from the source run the task `:zap:run`. It will use any add-ons available in the [zap/src/main/dist/plugin/] directory.\n\n**NOTE:** No add-on is included in the repository, they need to be built/copied separately into the `plugin` directory.\n\n### Tests\nTo execute the tests run the task `:zap:test`.\n\n## Distributions\nThe distributions bundle ZAP and its dependencies, all necessary to run ZAP standalone. By default the distributions of development\nversions (SNAPSHOT) bundle the add-ons present in the dist `plugin` directory, main versions (non-SNAPSHOT) bundle a [predefined\nlist of add-ons] (downloaded automatically when the distribution is built).\n\nThe distributions are built into `zap/build/distributions/`.\n\n### Daily\nA zip package with a day stamped version, does not target any specific OS, it bundles all add-ons present in the `plugin` directory always.\n\nTo build it run the task `:zap:distDaily`.\n\n(This distribution is built by default, it is a dependency of `assemble` task.)\n\n### Weekly\nA zip package with a day stamped version, does not target any specific OS, it bundles only [weekly add-ons] (built automatically from\nsource when the distribution is built).\nThis distribution is used for weekly releases.\n\nTo build it run the task `:zap:distWeekly`.\n\nThe build also provides the task `:zap:copyWeeklyAddOns` which builds and copies the weekly add-ons into the plugin directory,\nusing existing repositories in the file system at the same level as zaproxy.\n\n### Cross Platform\nA zip package, does not target any specific OS.\n\nTo build it run the task `:zap:distCrossplatform`.\n\n### Core\nSame as cross platform distribution but with just the essential add-ons, making the distribution smaller.\n\nTo build it run the task `:zap:distCore`.\n\n### Linux\nA tar.gz package, the macOS/Windows specific add-ons are excluded from this distribution.\n\nTo build it run the task `:zap:distLinux`.\n\n### macOS\nA dmg bundling ZAP, its dependencies, and a JRE. The Linux/Windows specific add-ons are excluded from this distribution.\n\nTo build the macOS distributions run the tasks `:zap:distMac` and `:zap:distMacArm64`, for the architectures `x64` and `aarch64` respectively.\n\n**NOTE:** Needs to be executed on macOS, it requires `hdiutil`.\n\n## Installers\nThe installers for Linux and Windows are built with [install4j]. The Windows executable is built with the [launch4j], invoked with Gradle plugin [gradle-launch4j].\n\nTo build the installers run the task `:zap:installers`.\n\nOnce the build is finished the installers will be located in the directory `zap/build/install4j/`.\n\n**NOTE:** The following properties must be defined (e.g. in file `GRADLE_HOME/gradle.properties` ) to successfully and properly build the installers:\n - `install4jHomeDir` - install4j installation directory;\n - `install4jLicense` - install4j license key.\n\n[Gradle]: https://gradle.org/\n[Gradle Wrapper]: https://docs.gradle.org/current/userguide/gradle_wrapper.html\n[zap/src/main/dist/plugin/]: zap/src/main/dist/plugin/\n[predefined list of add-ons]: zap/src/main/add-ons.txt\n[weekly add-ons]: zap/src/main/weekly-add-ons.json\n[install4j]: https://www.ej-technologies.com/products/install4j/overview.html\n[launch4j]: http://launch4j.sourceforge.net/\n[gradle-launch4j]: https://github.com/TheBoegl/gradle-launch4j\n"
        },
        {
          "name": "CLA.md",
          "type": "blob",
          "size": 5.8544921875,
          "content": "## The Zed Attack Proxy (ZAP) Project - Individual Contributor License Agreement v1.0\n\nThank you for your interest in the Zed Attack Proxy (ZAP) Project (the \"Project\"). In order to clarify the intellectual property license granted with Contributions from any person or entity, the Project must have a Contributor License Agreement (\"CLA\") on file that has been signed by each Contributor, indicating agreement to the license terms below. This license is for your protection as a Contributor as well as the protection of the Project and its users; it does not change your rights to use your own Contributions for any other purpose. Please read this document carefully before signing and keep a copy for your records.\n\nYou accept and agree to the following terms and conditions for Your present and future Contributions submitted to the Project. In return, the Project shall not use Your Contributions in a way that is contrary to the public benefit. Except for the license granted herein to the Project and recipients of software distributed by the Project, You reserve all right, title, and interest in and to Your Contributions.\n\n1. Definitions.\n\n\"You\" (or \"Your\") shall mean the copyright owner or legal entity authorized by the copyright owner that is making this Agreement with the Project. For legal entities, the entity making a Contribution and all other entities that control, are controlled by, or are under common control with that entity are considered to be a single Contributor. For the purposes of this definition, \"control\" means (i) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (ii) ownership of fifty percent (50%) or more of the outstanding shares, or (iii) beneficial ownership of such entity.\n\n\"Contribution\" shall mean any original work of authorship, including any modifications or additions to an existing work, that is intentionally submitted by You to the Project for inclusion in, or documentation of, any of the products owned or managed by the Project (the \"Work\"). For the purposes of this definition, \"submitted\" means any form of electronic, verbal, or written communication sent to the Project or its representatives, including but not limited to communication on electronic mailing lists, source code control systems, and issue tracking systems that are managed by, or on behalf of, the Project for the purpose of discussing and improving the Work, but excluding communication that is conspicuously marked or otherwise designated in writing by You as \"Not a Contribution.\"\n\n2. Grant of Copyright License. Subject to the terms and conditions of this Agreement, You hereby grant to the Project and to recipients of software distributed by the Project a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable copyright license to reproduce, prepare derivative works of, publicly display, publicly perform, sublicense, and distribute Your Contributions and such derivative works.\n\n3. Grant of Patent License. Subject to the terms and conditions of this Agreement, You hereby grant to the Project and to recipients of software distributed by the Project a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as stated in this section) patent license to make, have made, use, offer to sell, sell, import, and otherwise transfer the Work, where such license applies only to those patent claims licensable by You that are necessarily infringed by Your Contribution(s) alone or by combination of Your Contribution(s) with the Work to which such Contribution(s) was submitted. If any entity institutes patent litigation against You or any other entity (including a cross-claim or counterclaim in a lawsuit) alleging that your Contribution, or the Work to which you have contributed, constitutes direct or contributory patent infringement, then any patent licenses granted to that entity under this Agreement for that Contribution or Work shall terminate as of the date such litigation is filed.\n\n4. You represent that you are legally entitled to grant the above license. If your employer(s) has rights to intellectual property that you create that includes your Contributions, you represent that you have received permission to make Contributions on behalf of that employer, that your employer has waived such rights for your Contributions to the Project, or that your employer has executed a separate Corporate CLA with the Project.\n\n5. You represent that each of Your Contributions is Your original creation (see section 7 for submissions on behalf of others).  You represent that Your Contribution submissions include complete details of any third-party license or other restriction (including, but not limited to, related patents and trademarks) of which you are personally aware and which are associated with any part of Your Contributions.\n\n6. You are not expected to provide support for Your Contributions, except to the extent You desire to provide support. You may provide support for free, for a fee, or not at all. Unless required by applicable law or agreed to in writing, You provide Your Contributions on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, including, without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE.\n\n7. Should You wish to submit work that is not Your original creation, You may submit it to the Project separately from any Contribution, identifying the complete details of its source and of any license or other restriction (including, but not limited to, related patents, trademarks, and license agreements) of which you are personally aware, and conspicuously marking the work as \"Submitted on behalf of a third-party: [named here]\".\n\n8. You agree to notify the Project of any facts or circumstances of which you become aware that would make these representations inaccurate in any respect.\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 8.181640625,
          "content": "# Contributing to ZAP\nZAP by Checkmarx is a community project, and we are always delighted to welcome new contributors!\n\nThere are lots of ways you can contribute for full details see the [Contributing Guide](https://www.zaproxy.org/docs/contribute/).\n\n## Got a Question or Problem?\nIf you have a question or problem relating to using ZAP then the first thing to do is to check the [Frequently Asked Questions](https://www.zaproxy.org/faq/).\n\nWe also include a comprehensive User Guide with ZAP which is also available online: https://www.zaproxy.org/docs/desktop/\n\nIf they don't help then please ask on the [User Group](https://groups.google.com/group/zaproxy-users)\n\n## Found an Issue?\nIf you have found a bug then raise an issue on the zaproxy repo: https://github.com/zaproxy/zaproxy/issues\n\nIt's worth checking to see if it's already been reported, and including as much information as you can to help us diagnose your problem.\n\nThis FAQ explains some useful steps you can follow: https://www.zaproxy.org/faq/somethings-not-working-what-should-i-do/\n\n## Found a Vulnerability?\nIf you think you have found a vulnerability in ZAP then please report it via our [bug bounty program](https://bugcrowd.com/owaspzap).\n\nWe are always very grateful to researchers who report vulnerabilities responsibly and will be very happy to give credit for the valuable assistance they provide.\n\n## Have a Feature Request?\nIf you have a suggestion for new functionality then you can raise an issue on the zaproxy repo: https://github.com/zaproxy/zaproxy/issues\n\nIts worth checking to see if its already been requested, and including as much information as you can so that we can fully understand your requirements.\n\n## Translate ZAP to Other Languages\nYou can help translate the ZAP UI via the [Crowdin zaproxy](https://crowdin.com/project/zaproxy) project.\n\nYou can help translate the ZAP User Guide via the [Crowdin zap-help](https://crowdin.com/project/zap-help) project.\n\n## Become a ZAP Evangelist\nFor information about the ZAP Evangelists and how to join up see the [ZAP Evangelists page](https://www.zaproxy.org/evangelists/)\n\n## Help Improve the Documentation\nThe source for the ZAP [User Guide](https://www.zaproxy.org/docs/desktop/) is underneath the zap-core-help repo [addOns/help/src/main/javahelp/contents](https://github.com/zaproxy/zap-core-help/tree/master/addOns/help/src/main/javahelp/contents) directory.\n\nThe Java Help included with ZAP and the online version are both generated from these HTML pages. Send Pull Requests to help us improve it.\n\n## Coding\n\nThere's always lots of coding to be done! So much so that we've split it into different categories.\nRefer to [BUILDING] on how to build and run ZAP.\n\nAll code should follow the [Development Rules and Guidelines](https://github.com/zaproxy/zaproxy/wiki/DevGuidelines).\n\nOther resources for ZAP Developers include:\n* The [Hacking ZAP blog posts](https://github.com/zaproxy/zaproxy/wiki/Development#Hacking_ZAP)\n* The [Contributing Changes](https://github.com/zaproxy/zaproxy/wiki/Contributing-Changes) wiki page\n* The [Internal Details](https://github.com/zaproxy/zaproxy/wiki/InternalDetails) wiki pages\n\nIf you are interested in working on any of the code then the [Developer Group](https://groups.google.com/group/zaproxy-develop) is the best place to ask questions.\n\n### Improve Existing Scan Rules or Write New Ones\nThe scan rules define how ZAP can automatically detect vulnerabilities.\n\nWe are always looking to improve existing ones and add new ones, so this is a great place to start helping with the ZAP code base.\n\n### Improve Existing Add-Ons or Write New Ones\nMuch of the ZAP functionality is implemented as add-ons, even features that are included 'as standard' in ZAP releases.\n\nAdd-ons are a great way to extend ZAP and can be ideal for student projects - many of the existing add-ons have been implemented by students, either through programs like Google Summer of Code and the Mozilla Winter of Security or directly as part of course work.\n\n### Improve the ZAP Core\nThe ZAP 'core' underpins all of the other ZAP features, and so ensuring it is as robust as possible is very important.\n\nFixing [issues](https://github.com/zaproxy/zaproxy/issues) is very valuable (ones flagged as [IdealFirstBug](https://github.com/zaproxy/zaproxy/issues?q=is%3Aopen+is%3Aissue+label%3AIdealFirstBug) are good ones to start on) and there are always many core improvements we want to make.\n\n#### Guidelines for Pull Request (PR) submission and processing:\n\n##### Contributor License Agreement\n\nYou will need to sign the [Contributor Licensing Agreement](CLA.md). \nIf you have not yet done this then you will be prompted to sign it when you submit a PR. \nThe comment prompting you to sign it will explain how this can be done.\nIf you would like to sign it for past PRs then just submit a dummy one to the [cla](https://github.com/zaproxy/cla) repo and follow the prompt. \nThe PR does not have to be merged so we can just close it.\n\n##### Developer Certificate of Origin\n\nThe Git commits must be [signed off] to indicate your agreement with [Developer Certificate of Origin].\n\n##### Format/Style Java Code\n\nThe Java code is formatted according to Google Java Style (AOSP variant). The build automatically checks\nthat the code conforms to the style (using [Spotless], which delegates to [google-java-format]), it can\nalso be used to format the code (with the Gradle task `spotlessApply`) if the IDE/editor in use\ndoes not support it.\n\n##### What should you, the author of a pull request, expect from us (ZAP Team)?\n* How much time (maximum) until the first feedback? 1 week.\n* And following iterations? 1 week.\n* This is a guideline we should normally be able to hit. If it's been more than a week and you haven't heard then please feel free to add a comment to your PR and @ mention the team (@zaproxy/team-zaproxy).\n\n##### What we (ZAP Team), expect from you?\n  * \"Atomic commits\" (logical changes to be in a single commit). Please don't group disjointed changes into a single commit/PR.\n  * Descriptive commits (subject and message):\n    * For example: https://git-scm.com/book/en/v2/Distributed-Git-Contributing-to-a-Project#_commit_guidelines\n  * Please, leave a comment after force pushing changes. It allows everyone to know that new changes are available.\n  * Discussion about the changes:\n    * Should be done in/on the PR or via the Dev Group and a link to that Dev Group thread added to the PR comments. (i.e.: Shared information is important, if something happens via IRC or private email please ensure a summary makes it to the PR.)\n    * Discussion will be kept in the pull request unless off topic.\n  * No merge commits. Please, rebase.\n  * Rebase if the branch has conflicts.\n  * How much time will a pull request be left open?\n    * This isn't static, one or more members of the ZAP Team will reach out (using @ mentions in PR comments) once or twice in order to get things back on track. If no input is received after a month or two then the PR will be closed. Total stale time will likely be 2 to 3 months.\n    * Close with a message such as: \"The pull request was closed because of lack of activity (as per CONTRIBUTING guidelines)\". Labeled as \"Stale\".\n    * If the contribution is deemed important or still valuable the code may be:\n      * Manually merged (if possible).\n      * Retrieved by another member of the team, fixed up and resubmitted. In which case the commit message (PR message) should contain a reference to the original submission.\n\n##### Approval process:\n* All PRs must be approved by a minimum of 2 members of the ZAP Core Team (other than the author) and anyone who is flagged as a reviewer on the PR.\n* The PR author can optionally specify any reviewer they would like to review their PR and any member of the Core Team can add themselves as a reviewer. This will effectively prevent the PR from being merged until they approve it.\n* Any member of the Core Team can merge a PR as long as the above conditions are met.\n* Reviews by people outside of the Core Team are still appreciated :)\n\n[BUILDING]: BUILDING.md\n[signed off]: https://git-scm.com/docs/git-commit#Documentation/git-commit.txt--s\n[Developer Certificate of Origin]: https://developercertificate.org/\n[Spotless]: https://github.com/diffplug/spotless\n[google-java-format]: https://github.com/google/google-java-format\n"
        },
        {
          "name": "LEGALNOTICE.md",
          "type": "blob",
          "size": 2.88671875,
          "content": "COPYRIGHT\n---------\n\nZed Attack Proxy (ZAP)\n\nThe software package is:\n\n    Copyright © 2010-2024 ZAP Development Team\n\nIndividual contributions, components, and libraries are copyright of their\nrespective authors.\n\nSOFTWARE LICENSE\n----------------\n\nThe open source software license of Zed Attack Proxy is Apache 2.0.\nA copy of the Apache 2.0 license has been included in this software package\nin ApacheLicense-2.0.txt.\n\nTHIRD-PARTY SOFTWARE LICENSES\n-----------------------------\n\nZAP is a fork of Paros Proxy 3.2.13 developed by Chinotec Technologies Company\nand licensed under the Clarified Artistic License.\n\nIn October 2014, imported files licensed under the GPL were relicensed with\npermission from the authors under Apache 2.0.\n\nThe following components/libraries are distributed in this package,\nand subject to their respective licenses.\n\n| Library                             | License                   |\n|-------------------------------------|---------------------------|\n| commons-beanutils-1.9.4.jar         | Apache 2.0                |\n| commons-codec-1.17.1.jar            | Apache 2.0                |\n| commons-collections-3.2.2.jar       | Apache 2.0                |\n| commons-configuration-1.10.jar      | Apache 2.0                |\n| commons-csv-1.12.0.jar              | Apache 2.0                |\n| commons-httpclient-3.1.jar          | Apache 2.0                |\n| commons-io-2.18.0.jar               | Apache 2.0                |\n| commons-lang-2.6.jar                | Apache 2.0                |\n| commons-lang3-3.17.0.jar            | Apache 2.0                |\n| commons-logging-1.3.4.jar           | Apache 2.0                |\n| commons-text-1.12.0.jar             | Apache 2.0                |\n| ezmorph-1.0.6.jar                   | Apache 2.0                |\n| flatlaf-3.5.4.jar                   | Apache 2.0                |\n| harlib-1.1.3.jar                    | Apache 2.0                |\n| hsqldb-2.7.4.jar                    | BSD                       |\n| jackson-core-asl-1.9.13.jar         | Apache 2.0                |\n| javahelp-2.0.05.jar                 | GPL + classpath exception |\n| java-semver-0.10.2.jar              | MIT                       |\n| jericho-html-3.4.jar                | EPL / LGPL dual license   |\n| jfreechart-1.5.5.jar                | LGPL                      |\n| jgrapht-core-0.9.0.jar              | LGPL 2.1                  |\n| json-lib-2.4-jdk15.jar              | MIT + \"Good, Not Evil\"    |\n| log4j-1.2-api-2.24.2.jar            | Apache 2.0                |\n| log4j-api-2.24.\".jar                | Apache 2.0                |\n| log4j-core-2.24.2.jar               | Apache 2.0                |\n| log4j-jul-2.24.2.jar                | Apache 2.0                |\n| rsyntaxtextarea-3.5.3.jar           | BSD-3 clause              |\n| swingx-all-1.6.5-1.jar              | LGPL 2.1                  |\n| xom-1.3.9.jar                       | LGPL                      |\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0908203125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright {yyyy} {name of copyright owner}\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.416015625,
          "content": "# [![](https://raw.githubusercontent.com/wiki/zaproxy/zaproxy/images/zap-by-checkmarx.png)](https://www.zaproxy.org)\n[![License](https://img.shields.io/badge/license-Apache%202-4EB1BA.svg)](https://www.apache.org/licenses/LICENSE-2.0.html)\n[![GitHub release](https://img.shields.io/github/release/zaproxy/zaproxy.svg)](https://www.zaproxy.org/download/)\n[![Java CI](https://github.com/zaproxy/zaproxy/actions/workflows/ci.yml/badge.svg)](https://github.com/zaproxy/zaproxy/actions/workflows/ci.yml)\n[![CII Best Practices](https://bestpractices.coreinfrastructure.org/projects/24/badge)](https://bestpractices.coreinfrastructure.org/projects/24)\n[![Github Releases](https://img.shields.io/github/downloads/zaproxy/zaproxy/latest/total.svg?maxAge=2592000)](https://zapbot.github.io/zap-mgmt-scripts/downloads.html)\n[![javadoc](https://javadoc.io/badge2/org.zaproxy/zap/javadoc.svg)](https://javadoc.io/doc/org.zaproxy/zap)\n[![CodeQL](https://github.com/zaproxy/zaproxy/actions/workflows/codeql.yml/badge.svg)](https://github.com/zaproxy/zaproxy/actions/workflows/codeql.yml)\n[![Quality Gate Status](https://sonarcloud.io/api/project_badges/measure?project=zaproxy_zaproxy&metric=alert_status)](https://sonarcloud.io/dashboard?id=zaproxy_zaproxy)\n[![Open Source Helpers](https://www.codetriage.com/zaproxy/zaproxy/badges/users.svg)](https://www.codetriage.com/zaproxy/zaproxy)\n[![Twitter Follow](https://img.shields.io/twitter/follow/zaproxy.svg?style=social&label=Follow&maxAge=2592000)](https://twitter.com/zaproxy)\n\n![Integration Tests](https://github.com/zaproxy/zaproxy/actions/workflows/run-integration-tests.yml/badge.svg)\n![Docker Live Release](https://github.com/zaproxy/zaproxy/actions/workflows/release-live-docker.yml/badge.svg)\n\nThe Zed Attack Proxy (ZAP) by Checkmarx is the world’s most widely used web app scanner. \nFree and open source. A community based GitHub Top 1000 project that anyone can contribute to.\n\nIt can help you automatically find security vulnerabilities in your web applications while you are developing and testing your applications. \nIt's also a great tool for experienced pentesters to use for manual security testing.\n\n[![](https://raw.githubusercontent.com/wiki/zaproxy/zaproxy/images/ZAP-Download.png)](https://www.zaproxy.org/download/)\n\nFor more details about ZAP see the website: [zaproxy.org](https://www.zaproxy.org/)\n\n[![](https://raw.githubusercontent.com/wiki/zaproxy/zaproxy/images/zap-website.png)](https://www.zaproxy.org/)\n"
        },
        {
          "name": "RELEASING.md",
          "type": "blob",
          "size": 6.21484375,
          "content": "# Releasing\n\n## Main Release\n\n### Pre release\n\nThese tasks use checkboxes so that they can be copied into an issue.\n\n- [ ] Update dependencies - these can be checked using the [zaproxy](https://github.com/zaproxy/zaproxy) `dependencyUpdates` gradle task\n- [ ] Update the [gettingStarted](https://github.com/zaproxy/zap-extensions/tree/main/addOns/gettingStarted) ODT document and regenerate the PDF.\n- [ ] Update the [MacOS JRE](https://github.com/zaproxy/zaproxy/blob/main/buildSrc/src/main/kotlin/org/zaproxy/zap/distributions.gradle.kts).\n- [ ] Update the [MacOS Copyright statement](https://github.com/zaproxy/zaproxy/blob/main/zap/src/main/macOS/ZAP.app/Contents/Info.plist).\n- [ ] Update [Constant](https://github.com/zaproxy/zaproxy/blob/main/zap/src/main/java/org/parosproxy/paros/Constant.java)#VERSION_TAG.\n- [ ] Add and use a [Constant](https://github.com/zaproxy/zaproxy/blob/main/zap/src/main/java/org/parosproxy/paros/Constant.java).upgradeFrom`<version>`() method.\n- [ ] Update [common-user-agents.txt](https://github.com/zaproxy/zap-extensions/blob/main/addOns/network/src/main/resources/org/zaproxy/addon/network/internal/client/common-user-agents.txt) and [DEFAULT_DEFAULT_USER_AGENT](https://github.com/zaproxy/zap-extensions/blob/main/addOns/network/src/main/java/org/zaproxy/addon/network/ConnectionOptions.java).\n- [ ] Publish a SNAPSHOT of core and update the main add-ons to use it.\n- [ ] Create help release page\n  - Development / bug fix issue links can be generated using the [zap-admin](https://github.com/zaproxy/zap-admin) `generateReleaseNotes` task.\n  - Library changes can be determined by diffing [LEGALNOTICE.md](https://github.com/zaproxy/zaproxy/blob/main/LEGALNOTICE.md) with the version at the previous release.\n- [ ] Create the [zap-admin](https://github.com/zaproxy/zap-admin) version and news files\n- [ ] Prepare blog post\n\n### Release Process\n\n- [ ] Run the workflow [Prepare Release Main Version](https://github.com/zaproxy/zaproxy/actions/workflows/prepare-release-main-version.yml),     to prepare the release. It creates a pull request updating the version;\n- [ ] Finish the following tasks in the pull request:\n  - [ ] Update latest ZapVersions file in [build.gradle.kts](https://github.com/zaproxy/zap-admin/blob/master/build.gradle.kts)\n  - [ ] Release add-ons.\n  - [ ] Update main add-ons declared in [main-add-ons.yml](https://github.com/zaproxy/zaproxy/blob/main/zap/src/main/main-add-ons.yml):\n     - [ ] Add new add-ons.\n     - [ ] Remove add-ons no longer needed.\n     - [ ] Update add-ons with the task mentioned in `main-add-ons.yml`.\n- [ ] Merge the pull request, to create the tag and the draft release (done by [Release Main Version](https://github.com/zaproxy/zaproxy/actions/workflows/release-main-version.yml));\n- [ ] Verify the draft release.\n- [ ] Publish the release.\n- [ ] Regenerate and publish the Weekly and Live releases.\n- [ ] Update the [Linux Repos](https://software.opensuse.org/download.html?project=home%3Acabelo&package=owasp-zap)\n- [ ] Update the stats scripts [github.py](https://github.com/zapbot/zap-mgmt-scripts/blob/master/stats/github.py) and [zap_services.py](https://github.com/zapbot/zap-mgmt-scripts/blob/master/stats/zap_services.py)\n\nOnce published the [Handle Release](https://github.com/zaproxy/zaproxy/actions/workflows/handle-release.yml) workflow\nwill trigger the update of the marketplace with the new release, it will also create a pull request preparing the next\ndevelopment iteration.\n\n### Localized Resources\n\nThe resources that require localization (e.g. `Messages.properties`, `vulnerabilities.xml`) are uploaded to the ZAP projects in\n[Crowdin](https://crowdin.com/) when the main release is released, if required (for pre-translation) the resources can be uploaded manually\nat any time by running the workflow [Crowdin Upload Files](https://github.com/zaproxy/zaproxy/actions/workflows/crowdin-upload-files.yml).\n\nThe resulting localized resources are added/updated in the repository periodically (through a workflow in the\n[zap-admin repository](https://github.com/zaproxy/zap-admin/)).\n\n### Post Release\n\n- [ ] Publish blog post\n- [ ] Update latest News file to point to blog / release notes?\n- [ ] Announce on\n  - [ ] ZAP User and Dev groups\n  - [ ] @zaproxy twitter account\n  - [ ] OWASP Slack\n- [ ] Update and release client APIs\n  - [ ] [Java](https://github.com/zaproxy/zap-api-java/blob/main/RELEASING.md)\n  - [ ] [Python](https://github.com/zaproxy/zap-api-python/blob/master/RELEASING.md)\n- [ ] Update major projects using ZAP\n  - [ ] Kali - [new issue](https://bugs.kali.org/)\n  - [ ] [Flathub](https://github.com/flathub/org.zaproxy.ZAP)\n  - [ ] [Snap](https://github.com/zaproxy/zaproxy/tree/main/snap)\n    - [ ] Run the workflow [Release Snap](https://github.com/zaproxy/zaproxy/actions/workflows/release-snap.yml).\n- [ ] Update 3rd Party Package Managers \n  - [ ] Homebrew - [zap.rb](https://github.com/Homebrew/homebrew-cask/blob/master/Casks/z/zap.rb)\n  - [ ] Scoop - [zaproxy.json](https://github.com/ScoopInstaller/Extras/blob/master/bucket/zaproxy.json)\n  - [ ] Chocolatey - [zap](https://github.com/jtcmedia/chocolatey-packages/tree/master/zap)\n  - [ ] winget-pkgs - [ZAP](https://github.com/microsoft/winget-pkgs/tree/master/manifests/z/ZAP/ZAP/)\n- [ ] Update [bugcrowd](https://bugcrowd.com/owaspzap) scope\n\n## Weekly Release\n\nThe following steps should be followed to release the weekly:\n 1. Run the workflow [Release Weekly](https://github.com/zaproxy/zaproxy/actions/workflows/release-weekly.yml),\n    to create the tag and the draft release;\n 2. Verify the draft release;\n 3. Publish the release.\n\nOnce published the [Handle Release](https://github.com/zaproxy/zaproxy/actions/workflows/handle-release.yml) workflow\nwill trigger the update of the marketplace with the new release.\n\n## Docker Images\n\nThe Nightly image is automatically built from the default branch.\n\nThe images Weekly, Stable, and Bare are automatically built after the corresponding release to the marketplace.  \nThe images Stable and Bare are built at the same time.\n\nThey can still be manually built by running the corresponding workflow:\n - [Release Weekly Docker](https://github.com/zaproxy/zaproxy/actions/workflows/release-weekly-docker.yml)\n - [Release Main (and Bare) Docker](https://github.com/zaproxy/zaproxy/actions/workflows/release-main-docker.yml)\n\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.365234375,
          "content": "# Security Policy\n\n## Supported Versions\n\n| Version  | Supported          |\n| -------- | ------------------ |\n| 2.16.0   | :white_check_mark: |\n| < 2.16.0 | :x:                |\n\n## Reporting a Vulnerability\n\nPlease report any vulnerabilities via our [Bug Bounty Program](https://bugcrowd.com/owaspzap).\n\nRemote Code Execution for this program will be rewarded at __$1000__\n"
        },
        {
          "name": "build.gradle.kts",
          "type": "blob",
          "size": 1.21484375,
          "content": "import net.ltgt.gradle.errorprone.errorprone\n\nplugins {\n    id(\"com.diffplug.spotless\")\n    id(\"org.sonarqube\") version \"5.0.0.4638\"\n    id(\"com.github.ben-manes.versions\") version \"0.51.0\"\n    id(\"net.ltgt.errorprone\") version \"4.0.0\"\n}\n\napply(from = \"$rootDir/gradle/ci.gradle.kts\")\n\nsubprojects {\n    apply(plugin = \"com.diffplug.spotless\")\n    apply(plugin = \"org.zaproxy.common\")\n    apply(plugin = \"net.ltgt.errorprone\")\n\n    spotless {\n        kotlinGradle {\n            ktlint()\n        }\n    }\n\n    project.plugins.withType(JavaPlugin::class) {\n        dependencies {\n            \"errorprone\"(\"com.google.errorprone:error_prone_core:2.28.0\")\n        }\n    }\n\n    tasks.withType<JavaCompile>().configureEach {\n        options.errorprone {\n            disableAllChecks.set(true)\n            error(\n                \"MissingOverride\",\n                \"WildcardImport\",\n            )\n        }\n    }\n}\n\nsonarqube {\n    properties {\n        property(\"sonar.projectKey\", \"zaproxy_zaproxy\")\n        property(\"sonar.organization\", \"zaproxy\")\n        property(\"sonar.host.url\", \"https://sonarcloud.io\")\n        // Workaround https://sonarsource.atlassian.net/browse/SONARGRADL-126\n        property(\"sonar.exclusions\", \"**/*.gradle.kts\")\n    }\n}\n"
        },
        {
          "name": "buildSrc",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradle.properties",
          "type": "blob",
          "size": 0.0478515625,
          "content": "org.gradle.caching=true\norg.gradle.parallel=true\n"
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 8.501953125,
          "content": "#!/bin/sh\n\n#\n# Copyright © 2015-2021 the original authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      https://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\n##############################################################################\n#\n#   Gradle start up script for POSIX generated by Gradle.\n#\n#   Important for running:\n#\n#   (1) You need a POSIX-compliant shell to run this script. If your /bin/sh is\n#       noncompliant, but you have some other compliant shell such as ksh or\n#       bash, then to run this script, type that shell name before the whole\n#       command line, like:\n#\n#           ksh Gradle\n#\n#       Busybox and similar reduced shells will NOT work, because this script\n#       requires all of these POSIX shell features:\n#         * functions;\n#         * expansions «$var», «${var}», «${var:-default}», «${var+SET}»,\n#           «${var#prefix}», «${var%suffix}», and «$( cmd )»;\n#         * compound commands having a testable exit status, especially «case»;\n#         * various built-in commands including «command», «set», and «ulimit».\n#\n#   Important for patching:\n#\n#   (2) This script targets any POSIX shell, so it avoids extensions provided\n#       by Bash, Ksh, etc; in particular arrays are avoided.\n#\n#       The \"traditional\" practice of packing multiple parameters into a\n#       space-separated string is a well documented source of bugs and security\n#       problems, so this is (mostly) avoided, by progressively accumulating\n#       options in \"$@\", and eventually passing that to Java.\n#\n#       Where the inherited environment variables (DEFAULT_JVM_OPTS, JAVA_OPTS,\n#       and GRADLE_OPTS) rely on word-splitting, this is performed explicitly;\n#       see the in-line comments for details.\n#\n#       There are tweaks for specific operating systems such as AIX, CygWin,\n#       Darwin, MinGW, and NonStop.\n#\n#   (3) This script is generated from the Groovy template\n#       https://github.com/gradle/gradle/blob/HEAD/platforms/jvm/plugins-application/src/main/resources/org/gradle/api/internal/plugins/unixStartScript.txt\n#       within the Gradle project.\n#\n#       You can find Gradle at https://github.com/gradle/gradle/.\n#\n##############################################################################\n\n# Attempt to set APP_HOME\n\n# Resolve links: $0 may be a link\napp_path=$0\n\n# Need this for daisy-chained symlinks.\nwhile\n    APP_HOME=${app_path%\"${app_path##*/}\"}  # leaves a trailing /; empty if no leading path\n    [ -h \"$app_path\" ]\ndo\n    ls=$( ls -ld \"$app_path\" )\n    link=${ls#*' -> '}\n    case $link in             #(\n      /*)   app_path=$link ;; #(\n      *)    app_path=$APP_HOME$link ;;\n    esac\ndone\n\n# This is normally unused\n# shellcheck disable=SC2034\nAPP_BASE_NAME=${0##*/}\n# Discard cd standard output in case $CDPATH is set (https://github.com/gradle/gradle/issues/25036)\nAPP_HOME=$( cd \"${APP_HOME:-./}\" > /dev/null && pwd -P ) || exit\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=maximum\n\nwarn () {\n    echo \"$*\"\n} >&2\n\ndie () {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n} >&2\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\nnonstop=false\ncase \"$( uname )\" in                #(\n  CYGWIN* )         cygwin=true  ;; #(\n  Darwin* )         darwin=true  ;; #(\n  MSYS* | MINGW* )  msys=true    ;; #(\n  NONSTOP* )        nonstop=true ;;\nesac\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=$JAVA_HOME/jre/sh/java\n    else\n        JAVACMD=$JAVA_HOME/bin/java\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=java\n    if ! command -v java >/dev/null 2>&1\n    then\n        die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nfi\n\n# Increase the maximum file descriptors if we can.\nif ! \"$cygwin\" && ! \"$darwin\" && ! \"$nonstop\" ; then\n    case $MAX_FD in #(\n      max*)\n        # In POSIX sh, ulimit -H is undefined. That's why the result is checked to see if it worked.\n        # shellcheck disable=SC2039,SC3045\n        MAX_FD=$( ulimit -H -n ) ||\n            warn \"Could not query maximum file descriptor limit\"\n    esac\n    case $MAX_FD in  #(\n      '' | soft) :;; #(\n      *)\n        # In POSIX sh, ulimit -n is undefined. That's why the result is checked to see if it worked.\n        # shellcheck disable=SC2039,SC3045\n        ulimit -n \"$MAX_FD\" ||\n            warn \"Could not set maximum file descriptor limit to $MAX_FD\"\n    esac\nfi\n\n# Collect all arguments for the java command, stacking in reverse order:\n#   * args from the command line\n#   * the main class name\n#   * -classpath\n#   * -D...appname settings\n#   * --module-path (only if needed)\n#   * DEFAULT_JVM_OPTS, JAVA_OPTS, and GRADLE_OPTS environment variables.\n\n# For Cygwin or MSYS, switch paths to Windows format before running java\nif \"$cygwin\" || \"$msys\" ; then\n    APP_HOME=$( cygpath --path --mixed \"$APP_HOME\" )\n    CLASSPATH=$( cygpath --path --mixed \"$CLASSPATH\" )\n\n    JAVACMD=$( cygpath --unix \"$JAVACMD\" )\n\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    for arg do\n        if\n            case $arg in                                #(\n              -*)   false ;;                            # don't mess with options #(\n              /?*)  t=${arg#/} t=/${t%%/*}              # looks like a POSIX filepath\n                    [ -e \"$t\" ] ;;                      #(\n              *)    false ;;\n            esac\n        then\n            arg=$( cygpath --path --ignore --mixed \"$arg\" )\n        fi\n        # Roll the args list around exactly as many times as the number of\n        # args, so each arg winds up back in the position where it started, but\n        # possibly modified.\n        #\n        # NB: a `for` loop captures its iteration list before it begins, so\n        # changing the positional parameters here affects neither the number of\n        # iterations, nor the values presented in `arg`.\n        shift                   # remove old arg\n        set -- \"$@\" \"$arg\"      # push replacement arg\n    done\nfi\n\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS='\"-Xmx64m\" \"-Xms64m\"'\n\n# Collect all arguments for the java command:\n#   * DEFAULT_JVM_OPTS, JAVA_OPTS, JAVA_OPTS, and optsEnvironmentVar are not allowed to contain shell fragments,\n#     and any embedded shellness will be escaped.\n#   * For example: A user cannot expect ${Hostname} to be expanded, as it is an environment variable and will be\n#     treated as '${Hostname}' itself on the command line.\n\nset -- \\\n        \"-Dorg.gradle.appname=$APP_BASE_NAME\" \\\n        -classpath \"$CLASSPATH\" \\\n        org.gradle.wrapper.GradleWrapperMain \\\n        \"$@\"\n\n# Stop when \"xargs\" is not available.\nif ! command -v xargs >/dev/null 2>&1\nthen\n    die \"xargs is not available\"\nfi\n\n# Use \"xargs\" to parse quoted args.\n#\n# With -n1 it outputs one arg per line, with the quotes and backslashes removed.\n#\n# In Bash we could simply go:\n#\n#   readarray ARGS < <( xargs -n1 <<<\"$var\" ) &&\n#   set -- \"${ARGS[@]}\" \"$@\"\n#\n# but POSIX shell has neither arrays nor command substitution, so instead we\n# post-process each arg (as a line of input to sed) to backslash-escape any\n# character that might be a shell metacharacter, then use eval to reverse\n# that process (while maintaining the separation between arguments), and wrap\n# the whole thing up as a single \"set\" statement.\n#\n# This will of course break if any of these variables contains a newline or\n# an unmatched quote.\n#\n\neval \"set -- $(\n        printf '%s\\n' \"$DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS\" |\n        xargs -n1 |\n        sed ' s~[^-[:alnum:]+,./:=@_]~\\\\&~g; ' |\n        tr '\\n' ' '\n    )\" '\"$@\"'\n\nexec \"$JAVACMD\" \"$@\"\n"
        },
        {
          "name": "gradlew.bat",
          "type": "blob",
          "size": 2.759765625,
          "content": "@rem\n@rem Copyright 2015 the original author or authors.\n@rem\n@rem Licensed under the Apache License, Version 2.0 (the \"License\");\n@rem you may not use this file except in compliance with the License.\n@rem You may obtain a copy of the License at\n@rem\n@rem      https://www.apache.org/licenses/LICENSE-2.0\n@rem\n@rem Unless required by applicable law or agreed to in writing, software\n@rem distributed under the License is distributed on an \"AS IS\" BASIS,\n@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@rem See the License for the specific language governing permissions and\n@rem limitations under the License.\n@rem\n\n@if \"%DEBUG%\"==\"\" @echo off\n@rem ##########################################################################\n@rem\n@rem  Gradle startup script for Windows\n@rem\n@rem ##########################################################################\n\n@rem Set local scope for the variables with windows NT shell\nif \"%OS%\"==\"Windows_NT\" setlocal\n\nset DIRNAME=%~dp0\nif \"%DIRNAME%\"==\"\" set DIRNAME=.\n@rem This is normally unused\nset APP_BASE_NAME=%~n0\nset APP_HOME=%DIRNAME%\n\n@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.\nfor %%i in (\"%APP_HOME%\") do set APP_HOME=%%~fi\n\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nset DEFAULT_JVM_OPTS=\"-Xmx64m\" \"-Xms64m\"\n\n@rem Find java.exe\nif defined JAVA_HOME goto findJavaFromJavaHome\n\nset JAVA_EXE=java.exe\n%JAVA_EXE% -version >NUL 2>&1\nif %ERRORLEVEL% equ 0 goto execute\n\necho. 1>&2\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH. 1>&2\necho. 1>&2\necho Please set the JAVA_HOME variable in your environment to match the 1>&2\necho location of your Java installation. 1>&2\n\ngoto fail\n\n:findJavaFromJavaHome\nset JAVA_HOME=%JAVA_HOME:\"=%\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\n\nif exist \"%JAVA_EXE%\" goto execute\n\necho. 1>&2\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME% 1>&2\necho. 1>&2\necho Please set the JAVA_HOME variable in your environment to match the 1>&2\necho location of your Java installation. 1>&2\n\ngoto fail\n\n:execute\n@rem Setup the command line\n\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\n\n\n@rem Execute Gradle\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*\n\n:end\n@rem End local scope for the variables with windows NT shell\nif %ERRORLEVEL% equ 0 goto mainEnd\n\n:fail\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\nrem the _cmd.exe /c_ return code!\nset EXIT_CODE=%ERRORLEVEL%\nif %EXIT_CODE% equ 0 set EXIT_CODE=1\nif not \"\"==\"%GRADLE_EXIT_CONSOLE%\" exit %EXIT_CODE%\nexit /b %EXIT_CODE%\n\n:mainEnd\nif \"%OS%\"==\"Windows_NT\" endlocal\n\n:omega\n"
        },
        {
          "name": "python",
          "type": "tree",
          "content": null
        },
        {
          "name": "settings.gradle.kts",
          "type": "blob",
          "size": 0.7421875,
          "content": "plugins {\n    id(\"org.zaproxy.common.settings\") version \"0.3.0\"\n    id(\"com.diffplug.spotless\") version \"6.25.0\" apply false\n}\n\nrootProject.name = \"zaproxy\"\n\ninclude(\"zap\")\n\nrootProject.children.forEach { project -> setUpProject(settingsDir, project) }\n\nfun setUpProject(parentDir: File, project: ProjectDescriptor) {\n    project.projectDir = File(parentDir, project.name)\n    project.buildFileName = \"${project.name}.gradle.kts\"\n\n    require(project.projectDir.isDirectory) {\n        \"Project ${project.name} has no directory: ${project.projectDir}\"\n    }\n    require(project.buildFile.isFile) {\n        \"Project ${project.name} has no build file: ${project.buildFile}\"\n    }\n\n    project.children.forEach { it -> setUpProject(it.parent!!.projectDir, it) }\n}\n"
        },
        {
          "name": "snap",
          "type": "tree",
          "content": null
        },
        {
          "name": "zap",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}