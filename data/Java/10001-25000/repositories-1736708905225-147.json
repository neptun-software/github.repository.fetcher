{
  "metadata": {
    "timestamp": 1736708905225,
    "page": 147,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "OpenRefine/OpenRefine",
      "stars": 11017,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 1.017578125,
          "content": "[*]\ncharset = utf-8\nend_of_line = lf\nindent_size = 4\nindent_style = space\ninsert_final_newline = true\nmax_line_length = 120\ntab_width = 8\nij_continuation_indent_size = 8\nij_formatter_off_tag = @formatter:off\nij_formatter_on_tag = @formatter:on\nij_formatter_tags_enabled = true\nij_smart_tabs = false\nij_visual_guides = \nij_wrap_on_typing = false\n\n\n[*.java]\nij_java_class_count_to_use_import_on_demand = 99\nij_java_imports_layout = $*,java.**,|,javax.**,|,*,|,com.google.refine.**,org.openrefine.**\nij_java_layout_static_imports_separately = true\n\n\n[*.less]\nindent_size = 2\n\n[{*.bash,*.sh,*.zsh}]\nindent_size = 2\ntab_width = 2\nij_shell_binary_ops_start_line = false\nij_shell_keep_column_alignment_padding = false\nij_shell_minify_program = false\nij_shell_redirect_followed_by_space = false\nij_shell_switch_cases_indented = false\nij_shell_use_unix_line_separator = true\n\n\n[{*.graphqlconfig,*.graphqlrc,*.har,*.jsb2,*.jsb3,*.json,.babelrc,.eslintrc,.prettierrc,.stylelintrc,bowerrc,jest.config}]\nindent_size = 2\n\n\n[{*.yaml,*.yml}]\nindent_size = 2\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.4716796875,
          "content": "# Auto detect text files and perform LF normalization\n* text=auto\n\n# Custom for Visual Studio\n*.cs     diff=csharp\n*.sln    merge=union\n*.csproj merge=union\n*.vbproj merge=union\n*.fsproj merge=union\n*.dbproj merge=union\n\n# Standard to msysgit\n*.doc\t diff=astextplain\n*.DOC\t diff=astextplain\n*.docx diff=astextplain\n*.DOCX diff=astextplain\n*.dot  diff=astextplain\n*.DOT  diff=astextplain\n*.pdf  diff=astextplain\n*.PDF\t diff=astextplain\n*.rtf\t diff=astextplain\n*.RTF\t diff=astextplain\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.5830078125,
          "content": ".idea/\n# Leave .idea settings ignored and force users to use `git add -f` to update\n#!*/\n#!.idea/codeStyles/\n.vscode/\n# Leave .vscode settings ignored and force users to use `git add -f` to update\n*.iml\n*.log\nlogs\n*~\n\\#*#\n.*.swp\n*.DS_Store\n*.class\n*.patch\n.com.apple.timemachine.supported\n.import-temp/\nbuild/\ndist/\nserver/classes/\nmain/webapp/WEB-INF/classes/\nmain/tests/server/classes/\nmain/test-output/\ntools/\ntmp/\n/test-output\ntest-out/\n/bin\nopen-refine.log\n.metadata # Eclipse plugins specific\n\n\n# Locally stored \"Eclipse launch configurations\"\n*.launch\n\nmain/target/\nmain/webapp/WEB-INF/lib/\nmain/webapp/modules/core/3rdparty/\nserver/target/\nextensions/*/target/\nextensions/*/module/MOD-INF/classes/\nextensions/*/module/MOD-INF/lib/\nextensions/target\ntarget/\n**/test-output/*\n*.versionsBackup\n\n# Ignore classpath as it is automatically generated by Maven integrations in IDEs\n*.classpath\n*.project\n*.settings\n#.settings/\n#!/*\n#!.settings/org.eclipse.jdt.ui.prefs\n\n# Ignore Apache Maven default download path\napache-maven-*/\napache-maven-*-bin.tar.gz\n\n# Ignore refine-dev.ini\nrefine-dev.ini\n\n# Java annotation processor (APT)\n.factorypath\n\n# Code Recommenders\n.recommenders/\n\n# STS (Spring Tool Suite)\n.springBeans\n\n# Ignore Node modules that might inadvertently install at current path instead of user or configured env var NODE_PATH \nnode_modules/\n\n# Ignore the node_modules folder as they are dependencies to be installed by end-user\nmain/webapp/node_modules\n\n# Yarn internal files\n**/.yarn\n**/.yarnrc.yml\n\n# Ignore .gitignore among extensions as it can be used to ignore custom extensions\n\nextensions/.gitignore\n"
        },
        {
          "name": ".idea",
          "type": "tree",
          "content": null
        },
        {
          "name": ".vscode",
          "type": "tree",
          "content": null
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.4404296875,
          "content": "# OpenRefine Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as OpenRefine\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, sex characteristics, gender identity and expression,\nlevel of experience, education, socio-economic status, nationality, personal\nappearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\n  advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n  address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies within all project spaces, and it also applies when\nan individual is representing the project or its community in public spaces.\nExamples of representing a project or community include using an official\nproject e-mail address, posting via an official social media account, or acting\nas an appointed representative at an online or offline event. Representation of\na project may be further defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the Code of Conduct Committee at code-of-conduct@openrefine.org.\nThe committee consists of:\n* Lozanna Rossenova\n* Antoine Beaubien\n* Isao Matsunami\n* Juliane Schneider\n* Jessica Hardwicke\n\nAll complaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The code of conduct is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see\nhttps://www.contributor-covenant.org/faq\n\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 5.2041015625,
          "content": "The OpenRefine project welcomes contributions in a variety of forms.\nThis document contains information a few of the ways you can contribute to the OpenRefine project.\nPlease also review our [Governance model](https://github.com/OpenRefine/OpenRefine/blob/master/GOVERNANCE.md)\n\n## Provide peer user support\n\nWe welcome users to the [OpenRefine forum](https://forum.openrefine.org/) to ask questions and request assistance.\nIf you can help answer questions in your area of expertise, it would be a benefit to the community.\n\nIf a forum discussion determines there is a bug in OpenRefine or a new feature is identified,\nwe welcome bug reports and feature requests. Please search the [issue tracker](https://github.com/OpenRefine/OpenRefine/issues) first to make sure\nthe bug / feature hasn't already been added. Note: the development team principally works from the issue\ntracker, so anything not included there risks getting lost.\n\n## Promote OpenRefine\n\nPromoting OpenRefine is a great way to give back. Did you write a tutorial or article about OpenRefine on your blog or site?\nAre you organizing a workshop or presentation for OpenRefine in your city? Let us, and the community, know via our [forum](https://forum.openrefine.org/) or social media.\n\n## Contribute translations\n\nWe want OpenRefine to be available in as many languages as possible to serve\nthe biggest community of users. You can help us [translate OpenRefine](https://docs.openrefine.org/technical-reference/translating-ui) into languages you are fluent in [via Weblate](https://hosted.weblate.org/engage/openrefine/?utm_source=widget).\nAlthough we have the beginnings of translations for many languages, only a few are complete and popular languages\nlike Spanish, Brazilian Portuguese, and French could use help.\n\n## Contribute documentation\n\nWhen browsing our [user manual](https://openrefine.org/docs/) or other documentation, feel free to use the edit button to suggest improvements.\nFor large changes, you might want to first discuss your proposed changes on the forum and then [prepare your changes locally](https://openrefine.org/docs/technical-reference/documentation-contributions).\n\n##  Contribute code \n\nYou can contribute code in various ways:\n- Fix bugs or implement new features. Follow [our guide towards your first code contribution](https://openrefine.org/docs/technical-reference/code-contributions)\n- Improve test coverage. Much of our code was originally written without tests, so help on this front is very much appreciated.\n- Develop an OpenRefine extension\n- Develop a reconciliation service\n\nAll developers including new distributions and plugin developers are invited to leverage the following OpenRefine project management areas.\n- the [official documentation](https://openrefine.org/docs/) for shared documentation between both user docs and [technical reference](https://docs.openrefine.org/technical-reference/contributing)\n- the [developer forum](https://forum.openrefine.org/c/dev/8) for technical questions, new feature development and anything code related. We invite you to share your idea there first. Someone may be able to point out to existing development saving you hours of research and development.\n- the [issue tracker](https://github.com/OpenRefine/OpenRefine/issues) for requesting new features and bug reports.\n- [Gitter Chat](https://gitter.im/OpenRefine/OpenRefine) (only occasionally monitored)\n\n### How to submit PR's (pull requests), patches, and bug fixes\n\nAll code changes are made via GitHub Pull Requests which are reviewed before merging, even those by core committers.\n\nIf you are unfamiliar with git, GitHub, or open source development, please see [our guide towards your first code contribution](https://openrefine.org/docs/technical-reference/code-contributions).\n\n- If you are looking for something to work on, please see our [issue list](https://github.com/OpenRefine/OpenRefine/issues). We have a separate tag for [Good First Issues](https://github.com/OpenRefine/OpenRefine/issues?q=is%3Aopen+is%3Aissue+label%3A%22Good+First+Issue%22).\n\n- create a branch named with the issue number and a brief description\n- avoid changes unrelated to fixing the issue\n- create unit and/or end-to-end tests which cover the bug fix or new feature\n- run `./refine lint` before submitting your PR (CI will fail if lint fails)\n- make sure all tests are green before submitting your PR\n- we attempt to prioritize PR reviews, but please be patient\n\n### New functionality via extensions\n\nOpenRefine supports a plugin architecture to extend its functionality. You can find more information on how to write\nan extension on our [website](https://openrefine.org/docs/technical-reference/writing-extensions).\nGiuliano Tortoreto also wrote separate documentation detailing how to build an extension for OpenRefine.\n[PDF](https://github.com/giTorto/OpenRefineExtensionDoc/blob/master/main.pdf) and [LaTeX](https://github.com/giTorto/OpenRefineExtensionDoc/) versions are available. It dates from 2014, but still contains good information.\n\nIf you want your extension included in the [list of extensions](https://openrefine.org/extensions) advertised on openrefine.org,\nplease submit a pull request on the download page, please edit [this file](https://github.com/OpenRefine/openrefine.org/blob/master/src/pages/extensions.md).\n"
        },
        {
          "name": "GOVERNANCE.md",
          "type": "blob",
          "size": 8.98046875,
          "content": "# OpenRefine Governance Model\n\n## Summary / Overview\nOpenRefine is a free, open-source, powerful tool for working with messy data. OpenRefine has a plugin architecture and is distributed under the [new BSD license](http://opensource.org/licenses/BSD-3-Clause) allowing modification, distribution and name changes.\n\n## Roles and responsibilities\nOpenRefine development is based on user consensus and open discussion between users. Decision making must be done in a transparent, open fashion (i.e. using OpenRefine's discussion list and issue list). No decisions about the project’s direction, bug fixes or features may be done in private without community involvement and participation. Discussions must begin at the earliest possible point on a topic; the community’s participation is vital during the entire decision-making process.\n\nAll project participants abide by the [Code of Conduct](https://github.com/OpenRefine/OpenRefine/blob/master/CODE_OF_CONDUCT.md).\n\nAnyone with an interest in the project can join the community, contribute to the project design, and participate in the decision making process. This document describes how that participation takes place.\n\n### Users\nUsers are community members who have a need for the project. Through their usage, they give the project a purpose. Users are encouraged to participate in the project life by providing feedback on how their needs are satisfied.\n\nUsers can help the project by:\n\n- Advertising and advocating for the project\n- Informing developers of strengths and weaknesses of the tool through the [user discussion list](https://forum.openrefine.org/) or the [issue list](https://github.com/OpenRefine/OpenRefine/issues?state=open)\n- Providing moral support (a ‘thank you’ goes a long way)\n- Writing tutorials\n\nHow to become an OpenRefine user? [Download OpenRefine](http://openrefine.org/download.html) and start refining!\n\n### Contributors\nContributors are users getting involved in the project more closely. Contributions can take many forms:\n\n- Supporting new users via the [user discussion list](https://forum.openrefine.org/c/support/12)\n- Submitting patches to fix bugs or add features via pull requests\n- Maintaining and improving the [website](https://openrefine.org/)\n- Writing and maintaining the [documentation](https://github.com/OpenRefine/openrefine.org/tree/master/docs)\n\nHow to become an OpenRefine contributor? You will find more details in our [contributing guideline](https://github.com/OpenRefine/OpenRefine/blob/master/CONTRIBUTING.md)\n\n### Committers\nIf you make regular contribution to OpenRefine, you will most likely become a Committer.\n\nCommitters have earned enough trust from the community to review and merge pull requests.\n\nTherefore Committers:\n- Help contributors via the [developer discussion list](https://forum.openrefine.org/c/dev/8).\n- Triage issues, pull requests and [projects](https://github.com/OpenRefine/OpenRefine/projects)\n- Have direct access to the code base to create new branches\n- Organize the wiki\n- Review and merge pull requests submitted by contributors\n- Are part of the OpenRefine organization and have the OpenRefine badge on their GitHub profile\n\n#### How to become a Committer?  \n\nBe a contributor and be nominated as a Committer. Current Committers select and elect new Committers. You may nominate yourself. Nomination should be sent to the [developer discussion list](https://forum.openrefine.org/c/dev/8)\n\n#### Current list of Committers\nThe list is available here: https://github.com/orgs/OpenRefine/people.\n\n### Release Manager\nThe Release Manager is responsible to\n* Coordinate with the community to select which issues and pull requests are part of new releases\n* Prepare and coordinate publishing new releases\n\nThe current Release Manager is [Tom Morris](https://github.com/tfmorris).\n\n### Steering Committee\nThe steering committee oversees the general direction of the project and initiates connections and collaborations with other organizations and projects.\n\n* Advise the Project’s staff on processes, strategy, and operations;\n* Participate in decision making and/or review of roadmaps, as time allows;\n* Participate to some Steering Committee meetings, when time allows;\n* Help the Project build connections and partnerships by helping project leadership to steward relationships with funders and partners, making strategic introductions for project leadership, reviewing documents when needed, as time allows;\n* Act as an advocate for the Project in events and support the project’s communication online, as time allows.\n\n#### How to be part of the Steering Committee\nSteering Committee members are invited by OpenRefine's Advisory Committee\n\n#### Current list of Steering Committee members\nThere is currently no Steering Committee as the project is looking for a better format. See discussion [Fwd: Steering committee being disbanded?](https://forum.openrefine.org/t/fwd-steering-committee-being-disbanded/430/) and [Proposition to create OpenRefine Ambassador Council](https://forum.openrefine.org/t/proposition-to-create-openrefine-ambassador-council/462)\n\n### Advisory Committee\nThe Advisory Committee runs the administrative aspect of the project on a day to day basis with the support of Code for Science and Society (CS&S). Its member are bound by the  fiscal sponsorship agreement with Code for Science and Society. They meet once per month with Code for Science and Society.\n\nIt is composed of at least three members. No more than 49 percent of the members of the Advisory Committee may be paid by the project.\n\nAdvisory Committee members:\n* Represent OpenRefine with Code for Science and Society;\n* Provide guidance and oversight of the Project’s staff and operations;\n* Approve budgets, and contracts\n* Vote to terminate contracts when necessary.\n* Participate in at least one call per quarter;\n* Help advocate for the Project;\n* Help the Project build connections and partnerships;\n* Can be part of the Admin team for the project on GitHub\n\n#### Conflict of Interest\nIn the event of any conflict of interest (a Committee Member, their family member, or someone with whom the Committee Member has a close academic or employment relationship is involved in a decision), the Committee Member must immediately notify other Committee Members. The Committee Members will be asked to recuse themselves from ongoing conversations and decision processes regarding the Transaction.  \n\n#### Current list of Advisory Committee members\n* Jan Ainali\n* Julie Faure-Lacroix\n* Esther Jackson\n\n### Project Manager\nOpenRefine's Project Manager (paid position) works closely with OpenRefine’s advisory and steering committees and with its communities of users and contributors.\n\nThe Project Manager:\n* Helps to improve OpenRefine's governance and community diversity\n* Helps build community-driven structures to formalize OpenRefine’s roadmap and keep it up to date\n* Assists in finding and secure new sources of funding\n* Supports the Advisory Committee in OpenRefine’s day-to-day operations.\n\nThe current Project Manager is [Martin Magdinier](https://forum.openrefine.org/u/Martin/summary)\n## Fiscal sponsorship: Code For Science and Society\n\nSince January 2020, OpenRefine is a member project of [Code For Science and Society](https://codeforscience.org/) (CS&S).\n\nCS&S provides administrative and fiscal infrastructure to receive and manage funds under the CS&S Fiscal Sponsorship Agreement. CS&S is a USA-based organization qualified as exempt from federal income tax under Section 501(c)(3) of the Internal Revenue Code (IRC) and classified as a public charity under IRC Sections 509(a)(1) and 170(b)(1)(A)(vi).\n\n### Manage funds\n\nWhile the vast majority of OpenRefine contributors are volunteers, we recognize the need to attract and retain contributors to help:\n- perform time critical maintenance tasks for the project (for example release management, security update, pull request review and comments)\n- address issues that will not be naturally done by the community (for example documentation or working on large or long term projects)\n\nCS&S currently manages the current funding sources:\n- **Grants**: Funds are allocated based on the grants requirements. Grants help to secure resources to achieve long term goal or supports software maintenance, growth, development, and community engagement.\n- **Google Summer of Code**: Google Summer of Code mentors are eligible for USD 500 compensation for their work.\n- **Donations made through GitHub Sponsors or made directly to CS&S on behalf of OpenRefine**: Decisions on usage of funds is made by the Advisory committee with guidance from the community.\n\nCombined with CS&S, the Steering and Advisory committees have experience applying and managing grants. If you are interested in applying to a grant to improve OpenRefine, please share your idea early on the Developer mailing list. It will be a pleasure helping you through your grant application. New grants must be approved by the Advisory Committee. that CS&S retains a 15% handling fees on any donation to finance their operations (20% for government funding).\n\n### Other assets\n\nCS&S owns and manages the domain openrefine.org\n"
        },
        {
          "name": "IDEs",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 1.4833984375,
          "content": "Copyright 2010, Google Inc. All rights reserved.\nCopyright 2010, OpenRefine contributors.\n\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n\n3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.5263671875,
          "content": "# OpenRefine\n\n[![DOI](https://zenodo.org/badge/6220644.svg)](https://zenodo.org/badge/latestdoi/6220644)\n[![Join the chat at https://gitter.im/OpenRefine/OpenRefine](https://badges.gitter.im/OpenRefine/OpenRefine.svg)](https://gitter.im/OpenRefine/OpenRefine)\n[![Snapshot release](https://github.com/OpenRefine/OpenRefine/actions/workflows/snapshot_release.yml/badge.svg)](https://github.com/OpenRefine/OpenRefine/actions/workflows/snapshot_release.yml) [![Coverage Status](https://coveralls.io/repos/github/OpenRefine/OpenRefine/badge.svg?branch=master)](https://coveralls.io/github/OpenRefine/OpenRefine?branch=master) [![Translation progress](https://hosted.weblate.org/widgets/openrefine/-/svg-badge.svg)](https://hosted.weblate.org/engage/openrefine/?utm_source=widget)\n\nOpenRefine is a Java-based power tool that allows you to load data, understand it,\nclean it up, reconcile it, and augment it with data coming from\nthe web. All from a web browser and the comfort and privacy of your own computer.\n\nOfficial website: **https://openrefine.org**\n\nCommunity forum: **https://forum.openrefine.org**\n\n[<img src=\"https://github.com/OpenRefine/OpenRefine/blob/master/graphics/icon/open-refine-320px.png\" align=\"right\">](https://openrefine.org)\n\n## Download\n\n* [OpenRefine Releases](https://github.com/OpenRefine/OpenRefine/releases)\n\n## Snapshot releases\n\nYou can download snapshots of the development version of OpenRefine.\nTo do so, you need to be logged in to GitHub. Then, click on the first item with a green tick / check mark on [this page](https://github.com/OpenRefine/OpenRefine/actions/workflows/snapshot_release.yml) and scroll down to the Artifacts section to find the version that matches your operating system.\n\n## Run from source\n\nIf you have cloned this repository to your computer, you can run OpenRefine with:\n\n* `./refine` on Mac OS and Linux\n* `refine.bat` on Windows\n\nThis requires [JDK 11](https://adoptium.net/) or newer, [Apache Maven](https://maven.apache.org/) and [Node.js 18](https://nodejs.org/) or newer.\n\n## Documentation\n\n* [User Manual](https://openrefine.org/docs)\n* [FAQ](https://github.com/OpenRefine/OpenRefine/wiki/FAQ)\n\n## Contributing to the project\n\n* [Developers Guide & Architecture](https://github.com/OpenRefine/OpenRefine/wiki/Documentation-For-Developers)\n* [Contributing Guide](https://github.com/OpenRefine/OpenRefine/blob/master/CONTRIBUTING.md)\n* [Project Governance](https://github.com/OpenRefine/OpenRefine/blob/master/GOVERNANCE.md)\n\n## Contact us\n\n* [Community forum](https://forum.openrefine.org)\n* [Twitter](https://www.twitter.com/openrefine)\n* [Gitter](https://gitter.im/OpenRefine/OpenRefine)\n* [Matrix (bridged from Gitter)](https://matrix.to/#/#OpenRefine_OpenRefine:gitter.im)\n\n## Licensing and legal issues\n\nOpenRefine is open source software and is licensed under the BSD license located in the [LICENSE.txt](LICENSE.txt). See the folders `licenses` under `/main/webapp/` as well as within each `/extensions` for information on open source libraries that OpenRefine depends on.\n\n## Credits\n\nThis software was created by Metaweb Technologies, Inc. and originally written and conceived by [David Huynh](https://github.com/dfhuynh). Metaweb Technologies, Inc. was acquired by Google, Inc. in July 2010 and the product was renamed Google Refine. In October 2012, it was renamed OpenRefine as it transitioned to a community-driven project.\n\nSince 2020, OpenRefine is fiscally sponsored by [Code for Science and Society](https://www.codeforsociety.org/) (CS&S).\n\nSee [CONTRIBUTING.md](./CONTRIBUTING.md) for instructions on how to contribute yourself.\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 1.1220703125,
          "content": "# OpenRefine Security Policy\n\n## Supported Versions\n\nSecurity updates are provided for the latest stable release, and are published as patch releases. For instance, if the latest stable version is 3.8.2, reported vulnerabilities affecting it will be fixed by releasing further patch releases (such as 3.8.3). Accumulated patches are included in the next minor or major release (e.g. 3.9 or 4.0)\n\nPrevious releases do not get security updates, so we recommend always running the latest stable release.\n\n## Reporting a Vulnerability\n\nOur core team will try their best to fix any valid vulnerability that is reported to them.\n\nYou can privately report a vulnerability to the OpenRefine team by [creating a security advisory on GitHub](https://github.com/OpenRefine/OpenRefine/security/advisories/new). This report will be kept private while it is being assessed by the team.\n\nKeep in mind that OpenRefine is designed to run locally on a user's PC, while also making network calls across the internet only upon a user's choice or command.\nAs such, certain vulnerabilities might not apply to OpenRefine's design. In doubt, please submit a report anyway.\n"
        },
        {
          "name": "benchmark",
          "type": "tree",
          "content": null
        },
        {
          "name": "conf",
          "type": "tree",
          "content": null
        },
        {
          "name": "extensions",
          "type": "tree",
          "content": null
        },
        {
          "name": "graphics",
          "type": "tree",
          "content": null
        },
        {
          "name": "main",
          "type": "tree",
          "content": null
        },
        {
          "name": "modules",
          "type": "tree",
          "content": null
        },
        {
          "name": "packaging",
          "type": "tree",
          "content": null
        },
        {
          "name": "pom.xml",
          "type": "blob",
          "size": 14.54296875,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n  <modelVersion>4.0.0</modelVersion>\n\n  <groupId>org.openrefine</groupId>\n  <artifactId>openrefine</artifactId>\n  <packaging>pom</packaging>\n  <version>3.9-SNAPSHOT</version>\n\n  <name>OpenRefine</name>\n  <description>OpenRefine is a free, open source power tool for working with messy data and improving it</description>\n  <url>http://openrefine.org/</url>\n  <inceptionYear>2010</inceptionYear>\n  <organization>\n    <name>Code for Science &amp; Society Inc.</name>\n    <url>https://codeforscience.org/</url>\n  </organization>\n  <licenses>\n    <license>\n      <name>BSD-3-Clause</name>\n      <url>https://raw.githubusercontent.com/OpenRefine/OpenRefine/master/LICENSE.txt</url>\n      <distribution>repo</distribution>\n    </license>\n  </licenses>\n  <mailingLists>\n    <mailingList>\n      <name>Dev</name>\n        <post>openrefine+dev@discoursemail.com</post>\n        <archive>https://forum.openrefine.org/c/8</archive>\n     </mailingList>\n     <mailingList>\n       <name>Users</name>\n       <post>openrefine+support@discoursemail.com</post>\n       <archive>https://forum.openrefine.org/c/support/12</archive>\n     </mailingList>\n  </mailingLists>\n  <scm>\n      <connection>scm:git:git://github.com//OpenRefine/OpenRefine.git</connection>\n      <developerConnection>scm:git:https://github.com/OpenRefine/OpenRefine</developerConnection>\n      <url>https://github.com/OpenRefine/OpenRefine.git</url>\n      <tag>HEAD</tag>\n  </scm>\n  <issueManagement>\n    <system>GitHub Issues</system>\n    <url>https://github.com/openrefine/openrefine/issues</url>\n  </issueManagement>\n\n  <developers>\n    <developer>\n      <id>contributors</id>\n      <name>OpenRefine Contributors</name>\n      <url>https://github.com/OpenRefine/OpenRefine/graphs/contributors</url>\n      <roles>\n        <role>Contributor</role>\n      </roles>  \n    </developer>\n  </developers>\n\n  <modules>\n        <module>modules/core</module>\n        <module>modules/grel</module>\n        <module>main</module>\n        <module>server</module>\n        <module>extensions</module>\n        <module>packaging</module>\n        <module>benchmark</module>\n  </modules>\n\n\n  <properties>\n    <java.minversion>11</java.minversion>\n    <java.maxversion>21</java.maxversion>\n    <jee.path>/</jee.path>\n    <jee.port>3333</jee.port>\n    <refine.data>/tmp/refine</refine.data>\n    <surefireArgs/>\n    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n\n    <!-- dependency versions -->\n    <jackson.version>2.18.2</jackson.version>\n    <servlet-api.version>4.0.1</servlet-api.version>\n    <butterfly.version>1.2.6</butterfly.version>\n    <slf4j.version>2.0.16</slf4j.version>\n    <log4j.version>2.24.3</log4j.version>\n    <jetty.version>10.0.16</jetty.version>\n    <okhttp.version>4.12.0</okhttp.version>\n    <jena.version>4.10.0</jena.version>\n    <poi.version>5.3.0</poi.version>\n    <commons-lang3.version>3.17.0</commons-lang3.version>\n    <commons-fileupload.version>1.5</commons-fileupload.version>\n    <commons-collections.version>3.2.2</commons-collections.version>\n    <commons-text.version>1.13.0</commons-text.version>\n    <commons-validator.version>1.9.0</commons-validator.version>\n    <org-jvnet-localizer.version>1.31</org-jvnet-localizer.version>\n    <!-- v1.15 of commons-codec is needed for Jena 3.14+ - copied from org.apache.jena:jena:pom -->\n    <commons-codec.version>1.17.1</commons-codec.version>\n    <commons-compress.version>1.27.1</commons-compress.version>\n    <velocity.version>2.4.1</velocity.version>\n    <marc4j.version>2.9.6</marc4j.version>\n    <jsoup.version>1.18.3</jsoup.version>\n    <odfdom-java.version>0.12.0</odfdom-java.version> <!-- do not update to 0.10.0, see issue #4397 -->\n    <vicino.version>1.2.1</vicino.version>\n    <clojure.version>1.12.0</clojure.version>\n    <httpclient5.version>5.4.1</httpclient5.version>\n    <httpcore5.version>5.3.1</httpcore5.version>\n    <univocity-csv.version>2.9.1</univocity-csv.version>\n    <swc-parser-lazy.version>3.1.9</swc-parser-lazy.version>\n    <commons-io.version>2.18.0</commons-io.version>\n    <guava.version>33.4.0-jre</guava.version>\n    <jaxb-api.version>2.3.1</jaxb-api.version>\n    <juniversalchardet.version>2.5.0</juniversalchardet.version>\n    <testng.version>7.10.2</testng.version>\n    <httpmime.version>4.5.14</httpmime.version>\n    <owasp-encoder.version>1.3.1</owasp-encoder.version>\n    <jasypt.version>1.9.3</jasypt.version>\n    <mockito.version>5.15.2</mockito.version>\n\n    <!-- plugin versions -->\n    <build-helper-maven-plugin.version>3.6.0</build-helper-maven-plugin.version>\n    <maven-compiler-plugin.version>3.13.0</maven-compiler-plugin.version>\n    <maven-resources-plugin.version>3.3.1</maven-resources-plugin.version>\n    <exec-maven-plugin.version>3.5.0</exec-maven-plugin.version>\n    <maven-dependency-plugin.version>3.8.1</maven-dependency-plugin.version>\n    <jacoco-maven-plugin.version>0.8.12</jacoco-maven-plugin.version>\n    <surefire.version>3.5.2</surefire.version>\n    <maven-jar-plugin.version>3.4.2</maven-jar-plugin.version>\n    <maven-clean-plugin.version>3.4.0</maven-clean-plugin.version>\n    <git-commit-id-plugin.version>4.9.10</git-commit-id-plugin.version>\n    <maven-deploy-plugin.version>3.1.3</maven-deploy-plugin.version>\n    <license-plugin.version>2.5.0</license-plugin.version>\n    <org-jvnet-localizer-plugin.version>1.31</org-jvnet-localizer-plugin.version>\n  </properties>\n\n\n  <build>\n    <!-- It is nice for \"mvn\" with no arguments to do a reasonable default. -->\n    <defaultGoal>install</defaultGoal>\n\n    <finalName>openrefine</finalName>\n    <resources>\n    </resources>\n    <plugins>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-compiler-plugin</artifactId>\n        <version>${maven-compiler-plugin.version}</version>\n        <configuration>\n          <release>${java.minversion}</release>\n          <encoding>UTF-8</encoding>\n          <showDeprecation>false</showDeprecation>\n        </configuration>\n      </plugin>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-resources-plugin</artifactId>\n\t<version>${maven-resources-plugin.version}</version>\n        <configuration>\n          <encoding>UTF-8</encoding>\n        </configuration>\n      </plugin>\n      <plugin>\n        <groupId>org.codehaus.mojo</groupId>\n        <artifactId>exec-maven-plugin</artifactId>\n\t<version>${exec-maven-plugin.version}</version>\n        <configuration>\n          <skip>true</skip>\n          <mainClass>none</mainClass>\n        </configuration>\n      </plugin>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-dependency-plugin</artifactId>\n\t<version>${maven-dependency-plugin.version}</version>\n      </plugin>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-surefire-plugin</artifactId>\n        <version>${surefire.version}</version>\n        <configuration>\n          <argLine>@{surefireArgs} -Dfile.encoding=cp1252 -Duser.language=fr -Duser.region=FR</argLine>\n        </configuration>\n      </plugin>\n      <plugin>\n        <groupId>org.jacoco</groupId>\n        <artifactId>jacoco-maven-plugin</artifactId>\n        <version>${jacoco-maven-plugin.version}</version>\n        <configuration>\n          <excludes>\n            <exclude>org/openrefine/messages/**/*</exclude>\n          </excludes>\n        </configuration>\n        <executions>\n          <execution>\n            <id>prepare-agent</id>\n            <goals>\n              <goal>prepare-agent</goal>\n            </goals>\n            <phase>process-test-resources</phase>\n            <configuration>\n              <destFile>${project.build.directory}/report/${project.name}.exec</destFile>\n              <propertyName>surefireArgs</propertyName>\n            </configuration>\n          </execution>\n          <execution>\n            <phase>test</phase>\n            <goals>\n              <goal>report</goal>\n            </goals>\n            <configuration>\n              <dataFile>${project.build.directory}/report/${project.name}.exec</dataFile>\n              <outputDirectory>${project.reporting.outputDirectory}/jacoco</outputDirectory>\n            </configuration>\n          </execution>\n          <execution>\n            <id>merge</id>\n            <goals>\n              <goal>merge</goal>\n            </goals>\n            <phase>test</phase>\n            <configuration>\n              <destFile>${project.build.directory}/report/jacoco-merged.exec</destFile>\n              <fileSets>\n                <fileSet>\n                  <directory>main/target/report</directory>\n                  <includes>\n                    <include>*.exec</include>\n                  </includes>\n                </fileSet>\n                <fileSet>\n                  <directory>extensions/target/report</directory>\n                  <includes>\n                    <include>*.exec</include>\n                  </includes>\n                </fileSet>\n              </fileSets>\n            </configuration>\n          </execution>\n        </executions>\n      </plugin>\n      <plugin>\n        <!-- Plugin to generate release source -->\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-source-plugin</artifactId>\n        <version>3.3.1</version>\n        <executions>\n          <execution>\n            <id>attach-sources</id>\n            <goals>\n              <goal>jar-no-fork</goal>\n            </goals>\n          </execution>\n        </executions>\n      </plugin>\n      <plugin>\n        <!-- Plugin for creating Javadocs; goal for preparing docs for upload to github: javadoc:aggregate -->\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-javadoc-plugin</artifactId>\n        <version>3.11.2</version>\n        <configuration>\n            <bottom>\n                    <![CDATA[Copyright &#169; {inceptionYear}&#x2013;{currentYear} {organizationName}. Generated from source code published under the BSD Clause-3 license. For more information, see the <a href=\"https://openrefine.org\">OpenRefine website</a>]]></bottom>\n            <source>11</source>\n        </configuration>\n        <executions>\n          <execution>\n            <id>attach-javadocs</id>\n            <goals>\n              <goal>jar</goal>\n            </goals>\n          </execution>\n        </executions>\n      </plugin>\n      <plugin>\n        <groupId>net.revelc.code.formatter</groupId>\n        <artifactId>formatter-maven-plugin</artifactId>\n        <version>2.17.1</version>\n        <configuration>\n          <configFile>${maven.multiModuleProjectDirectory}/IDEs/eclipse/Refine.style.xml</configFile>\n          <excludes> <!-- file should not be linted because it was copied from a dependency (sigh) -->\n            <exclude>**/Metaphone3.java</exclude>\n          </excludes>\n        </configuration>\n      </plugin>\n      <plugin>\n        <groupId>net.revelc.code</groupId>\n        <artifactId>impsort-maven-plugin</artifactId>\n        <version>1.9.0</version>\n        <configuration>\n          <groups>java.,javax.,*,com.google.refine,org.openrefine</groups>\n          <staticGroups>java,*</staticGroups>\n          <removeUnused>true</removeUnused>\n        </configuration>\n        <executions>\n          <execution>\n            <id>sort-imports</id>\n            <goals>\n              <goal>sort</goal><!-- runs at process-sources phase by default -->\n            </goals>\n          </execution>\n        </executions>\n      </plugin>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-eclipse-plugin</artifactId>\n        <version>2.10</version>\n        <configuration>\n          <workspaceCodeStylesURL>${maven.multiModuleProjectDirectory}/IDEs/eclipse/Refine.style.xml</workspaceCodeStylesURL>\n        </configuration>\n      </plugin>\n      <plugin>\n        <!-- Signature -->\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-gpg-plugin</artifactId>\n        <version>3.2.7</version>\n        <executions>\n            <execution>\n                <id>sign-artifacts</id>\n                <phase>deploy</phase>\n                <goals>\n                    <goal>sign</goal>\n                </goals>\n            </execution>\n        </executions>\n      </plugin>\n      <plugin>\n        <!-- Staging plugin -->\n        <groupId>org.sonatype.plugins</groupId>\n        <artifactId>nexus-staging-maven-plugin</artifactId>\n        <version>1.7.0</version>\n        <extensions>true</extensions>\n        <configuration>\n          <serverId>ossrh</serverId>\n          <nexusUrl>https://oss.sonatype.org/</nexusUrl>\n          <autoReleaseAfterClose>true</autoReleaseAfterClose>\n        </configuration>\n      </plugin>\n        <plugin>\n            <groupId>org.jvnet.localizer</groupId>\n            <artifactId>localizer-maven-plugin</artifactId>\n            <version>${org-jvnet-localizer-plugin.version}</version>\n            <executions>\n                <execution>\n                    <goals>\n                        <goal>generate</goal>\n                    </goals>\n                </execution>\n            </executions>\n        </plugin>\n    </plugins>\n  </build>\n\n  <dependencies>\n    <!-- dependencies are stored in the relevant submodules:\n          see main/pom.xml, server/pom.xml and each extension.\n    -->\n      <dependency>\n          <groupId>org.jvnet.localizer</groupId>\n          <artifactId>localizer</artifactId>\n          <version>${org-jvnet-localizer.version}</version>\n      </dependency>\n  </dependencies>\n\n  <!-- enabled to access our snapshots of Wikidata-Toolkit -->\n  <repositories>\n    <repository>\n      <id>snapshots</id>\n      <url>https://oss.sonatype.org/content/repositories/snapshots/</url>\n      <releases>\n        <enabled>false</enabled>\n      </releases>\n      <snapshots>\n        <enabled>true</enabled>\n      </snapshots>\n    </repository>\n      <repository>\n          <id>jenkins-repo</id>\n          <url>https://repo.jenkins-ci.org/releases/</url>\n      </repository>\n  </repositories>\n\n    <pluginRepositories>\n        <pluginRepository>\n            <id>jenkins-repo</id>\n            <url>https://repo.jenkins-ci.org/releases/</url>\n        </pluginRepository>\n    </pluginRepositories>\n\n  <!-- Locations of the artifacts published -->\n  <distributionManagement>\n     <snapshotRepository>\n       <id>ossrh</id>\n       <url>https://oss.sonatype.org/content/repositories/snapshots</url>\n     </snapshotRepository>\n     <repository>\n       <id>ossrh</id>\n       <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>\n     </repository>\n  </distributionManagement>\n\n</project>\n"
        },
        {
          "name": "refine",
          "type": "blob",
          "size": 22.32421875,
          "content": "#!/usr/bin/env bash\n\n########################################################## \n#               OpenRefine Control System             #\n##########################################################\n\n# -------------- utility functions ----------------------\n\nfail () {\n   cat <<EOF\nERROR: $1\nType '$0 -h' for usage information.\nEOF\nexit 1\n}\n\nerror() {\n    echo \"Error: $1\"\n    exit 1\n}\n\nwarn() {\n    echo \"Warning: $1\"\n    exit 0\n}\n\nusage() {\ncat <<EOF\nUsage: $0 [options] <action>\nOptions\n    -c <path>                     Path to refine.ini file. Default: ./refine.ini.\n    -d <path>                     Path to the data directory. Default: OS dependent.\n    -H <host>                     Expected host header value (set to * to disable checks). Default: <interface>.\n    -h                            Print this message and exit.\n    -i <interface>                The network interface OpenRefine should bind to. Default: 127.0.0.1.\n    -m <memory>                   JVM min and max memory heap size. Default: 1400M.\n    -p <port>                     Port that OpenRefine will listen to. Default: 3333.\n    -v <level>                    Verbosity level [error,warn,info,debug,trace]. Default: info.\n    -w <path>                     Path to the webapp. Default: main/webapp.\n    -x <name=value>               Additional configuration parameters to pass to OpenRefine.\n    --debug                       Enable JVM debugging (on port 8000).\n    --jmx                         Enable JMX monitoring.\n\nActions\n    run                           Run OpenRefine [default].\n    build                         Build OpenRefine.\n    clean                         Clean compiled classes.\n    test                          Run all tests.\n    extensions_test               Run the extensions tests.\n    server_test                   Run the server tests.\n    e2e_tests                     Run the e2e tests.\n    lint                          Reformat the source code according to OpenRefine's conventions.\n    mac_dist <version>            Make MacOS binary distribution.\n    windows_dist <version>        Make Windows binary distribution.\n    linux_dist <version>          Make Linux binary distribution.\n    dist <version>                Make all distributions.\nEOF\nexit 1\n}\n\n\nadd_option() {\n    if [ ! -z \"$*\" ] ; then\n        OPTS+=(\"$@\")\n    fi\n}\n                \nload_configs() {\n   TEMP_CONFIG=$(mktemp -t refine.XXXXXXX)\n   if [ \"${TEMP_CONFIG}\" = \"\" ] ; then\n       error \"Could not create temporary file to load configurations\"\n   fi\n   cat $1 | egrep \"^[A-Z]\" | sed 's/^\\([^=]*\\)=\\(.*\\)$/export \\1=(\\2)/' > ${TEMP_CONFIG}\n   . ${TEMP_CONFIG}\n   rm ${TEMP_CONFIG}\n}\n                    \ncheck_macosx() {\n    if [ \"$OS\" != \"macosx\" ] ; then\n        error \"This action can only run on MacOSX\"\n    fi\n}\n\ncheck_downloaders() {\n    CURL=\"`command -v curl 2> /dev/null`\"\n    WGET=\"`command -v wget 2> /dev/null`\"\n\n    if [ -z \"$CURL\" ] && [ -z \"$WGET\" ] ; then\n        error \"We need either 'curl' or 'wget' present in PATH to download external dependencies.\"\n    fi\n}\n\ncheck_running() {\n    check_downloaders\n    URL=\"http://${REFINE_HOST_INTERNAL}:${REFINE_PORT}/\"\n    CHECK_STR=\"<title>OpenRefine</title>\"\n\n    if [ \"$CURL\" ] ; then\n        curl --noproxy 127.0.0.1 -s -S -f $URL > /dev/null 2>&1\n        CURL_RETURN=$?\n        if [ $CURL_RETURN -eq \"7\" ] || [ $CURL_RETURN -eq \"22\" ]  ; then\n            NOT_RUNNING=\"1\"\n        fi\n    elif [ \"$WGET\" ] ; then\n        no_proxy=127.0.0.1 wget -O - $URL > /dev/null 2>&1  \n        if [ \"$?\" = \"4\" ] ; then\n            NOT_RUNNING=\"1\"\n        fi\n    fi    \n\n    if [ -z \"${NOT_RUNNING}\" ] ; then\n        if [ \"$CURL\" ] ; then\n            RUNNING=`curl --noproxy 127.0.0.1 -s $URL | grep \"$CHECK_STR\"`\n        elif [ \"$WGET\" ] ; then\n            RUNNING=`no_proxy=127.0.0.1 wget -O - $URL| grep \"$CHECK_STR\"` \n        fi    \n        \n        if [ -z \"${RUNNING}\" ] ; then\n            error \"OpenRefine isn't running on $URL. Maybe a proxy issue?\"\n        fi\n    else\n        RUNNING=\"\"\n    fi\n}\n\nget_version() {\n    VERSION=\"$1\"\n    \n    if [ -z \"$VERSION\" ] ; then\n        fail \"Must specify a version number\"\n    fi\n\n    NUM_VERSION=`echo $VERSION | sed -E 's/-.*//g'`\n    \n    if [ \"${NUM_VERSION}\" = \"\" ] ; then\n        fail \"${VERSION} is not a valid version number\"\n    fi\n    \n    if [ \"`echo \"${NUM_VERSION}\" | egrep '^[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$'`\" = \"${NUM_VERSION}\" ] ; then\n        FULL_VERSION=\"${NUM_VERSION}\"\n    elif [ \"`echo \"${NUM_VERSION}\" | egrep '^[0-9]+\\.[0-9]+\\.[0-9]+$'`\" = \"${NUM_VERSION}\" ] ; then\n        FULL_VERSION=\"${NUM_VERSION}.0\"\n    elif [ \"`echo \"${NUM_VERSION}\" | egrep ''^[0-9]+\\.[0-9]+$''`\" = \"${NUM_VERSION}\" ] ; then\n        FULL_VERSION=\"${NUM_VERSION}.0.0\"\n    elif [ \"`echo \"${NUM_VERSION}\" | egrep '^[0-9]+$'`\" = \"${NUM_VERSION}\" ] ; then\n        FULL_VERSION=\"${NUM_VERSION}.0.0.0\"\n    else \n        fail \"${VERSION} is not a valid version number\"\n    fi\n}\n\nget_revision() {\n    if [ -d \".svn\" ] ; then\n        INFO=`svn info`\n        REVISION=`echo $INFO | sed s/^$VERSION-//`\n    elif [ -d \".git\" ] ; then\n        INFO=`git describe`\n        REVISION=`echo $INFO`\n    REVISION=${REVISION:4}\n    else\n        error \"cannot obtain revision, exiting!\"\n    fi\n}\n    \ndownload() {\n    URL=$1\n    DEST=$2\n    \n    check_downloaders\n    \n    if [ \"$CURL\" ] ; then\n        curl -L -o $DEST $URL || exit \"Error while downloading $URL\"\n    elif [ \"$WGET\" ] ; then\n        wget -O $DEST $URL || error \"Error while downloading $URL\"\n    fi\n}\n\nload_data() {\n    FILE=$1\n    NAME=$2\n    URL=\"http://${REFINE_HOST_INTERNAL}:${REFINE_PORT}/command/core/create-project-from-upload\"\n    CURL=\"`command -v curl 2> /dev/null`\"\n    \n    if [ -z \"$CURL\" ] ; then\n        error \"We need 'curl' present in PATH to upload data to OpenRefine.\"\n    else\n        curl -s -F \"project-file=@$FILE\" -F \"project-name=$NAME\" $URL > /dev/null || error \"Error while uploading $FILE to OpenRefine\"\n        echo \"Loaded $FILE as $NAME\"\n    fi\n}\n\ndisplay() {\n    FILE=$1\n    if [ \"$OS\" = \"macosx\" ] ; then\n    open $FILE\n    elif [ \"$OS\" = \"linux\" ] ; then\n    gnome-open $FILE\n    else\n    notepad $FILE\n    fi  \n\n}\n# ----------------------------------------------------------------------------------------------\n\nbuild_prepare() {\n    if [ ! -d $REFINE_BUILD_DIR ] ; then \n        mkdir $REFINE_BUILD_DIR || error \"Error while making directory $REFINE_BUILD_DIR\"\n    fi\n    NPM_VERSION=`npm -v`\n    if [ $? -ne 0 ] ; then\n        error \"NPM not found. We need it in the PATH to download frontend dependencies. See https://openrefine.org/docs/technical-reference/build-test-run#nodejs\"\n    else\n        echo \"Using NPM version $NPM_VERSION\"\n    fi\n    ( cd main/webapp && npm install )\n}\n\ndist_prepare() {\n    if [ ! -d $REFINE_DIST_DIR ] ; then \n        mkdir $REFINE_DIST_DIR || error \"Error while making directory $REFINE_DIST_DIR\"\n    fi\n}\n\ntools_prepare() {\n    if [ ! -d $REFINE_TOOLS_DIR ] ; then \n        mkdir $REFINE_TOOLS_DIR || error \"Error while making directory $REFINE_TOOLS_DIR\"\n    fi\n}\n\nmvn_prepare() {\n    tools_prepare\n    if [ \"$MAVEN_HOME\" ] ; then\n        MVN=\"$MAVEN_HOME/bin/mvn\"\n    elif [ \"$M2_HOME\" ] ; then\n        MVN=\"$M2_HOME/bin/mvn\"\n    else\n        MVN=\"`command -v mvn 2> /dev/null`\"\n    fi\n\n    if [ ! -x \"$MVN\" ] ; then\n        error \"Apache Maven not found. Please make sure that M2_HOME or MAVEN_HOME environment variables are set or that 'mvn' is in your system PATH.\"\n    fi\n}\n# ----------------------------------------------------------------------------------------------\n\ndo_mvn() {\n    mvn_prepare\n\n    \"$MVN\" $MVN_PARAMS -Dversion=\"$VERSION\" -Dfull_version=\"$FULL_VERSION\"  $1 || error \"Error while running maven task '$1'\"\n}\n\n# ----------------------------------------------------------------------------------------------\n\nlint() {\n    mvn_prepare\n    \"$MVN\" formatter:format impsort:sort\n}\n\n# ----------------------------------------------------------------------------------------------\n\ndist() {\n    get_version $1\n    build_prepare\n    mvn_prepare\n    \"$MVN\" versions:set -DnewVersion=\"$VERSION\"\n    \"$MVN\" package\n}\n\nwindows_dist() {\n    get_version $1\n    build_prepare\n    mvn_prepare\n    \"$MVN\" versions:set -DnewVersion=\"$VERSION\"\n    \"$MVN\" package -P windows\n}\n\nlinux_dist() {\n    get_version $1\n    build_prepare\n    mvn_prepare\n    \"$MVN\" versions:set -DnewVersion=\"$VERSION\"\n    \"$MVN\" package -P linux\n}\n\n# Kept just in case someone wants to follow this workflow on a mac,\n# but no longer needed as \"mvn package\" does it directly on both mac and linux.\nmac_dist() {\n    check_macosx\n    build_prepare\n    dist_prepare\n    get_version $1\n    get_revision\n\n    appbundler_prepare\n\n    ANT_PARAMS=\"-Dappbundler.dir=${REFINE_TOOLS_DIR}/${APPBUNDLER_DIR}\"\n    ant mac\n\n    mkdir -p \"$REFINE_BUILD_DIR/mac/.background\"\n    cp graphics/dmg_background/dmg_background.png \"$REFINE_BUILD_DIR/mac/.background/dmg_background.png\"\n\n    SIZE=350\n\n    if [ -f \"$REFINE_BUILD_DIR/temp_refine.dmg\" ] ; then\n        rm \"$REFINE_BUILD_DIR/temp_refine.dmg\"\n    fi\n\n# Sign the bundle with a self-signed cert so OS X doesn't frustrate users by making app invisible\n    codesign --deep -s \"OpenRefine Code Signing\" \"$REFINE_BUILD_DIR/mac/OpenRefine.app\"\n    spctl --assess --type execute --verbose=4 \"$REFINE_BUILD_DIR/mac/OpenRefine.app\"\n\n    TITLE=\"OpenRefine $VERSION\"\n    echo \"Building MacOSX DMG for $TITLE\"\n    hdiutil create -srcfolder \"$REFINE_BUILD_DIR/mac\" -volname \"$TITLE\" -fs HFS+ -fsargs \"-c c=64,a=16,e=16\" -format UDRW -size ${SIZE}m \"$REFINE_BUILD_DIR/temp_refine.dmg\" || error \"can't create empty DMG\"\n    DEVICE=`hdiutil attach -readwrite -noverify -noautoopen \"$REFINE_BUILD_DIR/temp_refine.dmg\" | egrep '^/dev/' | sed -e \"s/^\\/dev\\///g\" -e 1q  | awk '{print $1}'`\n    echo $DEVICE\n    hdiutil attach \"$REFINE_BUILD_DIR/temp_refine.dmg\" || error \"Can't attach temp DMG\"\n\n    echo '\n       tell application \"Finder\"\n         tell disk \"'$TITLE'\"\n            open\n            set current view of container window to icon view\n            set toolbar visible of container window to false\n            set statusbar visible of container window to false\n            set the bounds of container window to {200, 100, 760, 460}\n            set theViewOptions to the icon view options of container window\n            set arrangement of theViewOptions to not arranged\n            set icon size of theViewOptions to 100\n            set background picture of theViewOptions to file \".background:dmg_background.png\"\n            make new alias file at container window to POSIX file \"/Applications\" with properties {name:\"Applications\"}\n            set position of item \"OpenRefine\" of container window to {170, 175}\n            set position of item \"Applications\" of container window to {380, 175}\n            close\n            open\n            update without registering applications\n            delay 5\n            eject\n         end tell\n       end tell\n    ' | osascript || error \"Error running applescript\"\n\n    sync\n    sync\n    sleep 3\n    hdiutil detach $DEVICE\n\n    if [ -f \"$REFINE_DIST_DIR/openrefine-mac-$VERSION.dmg\" ] ; then\n        rm \"$REFINE_DIST_DIR/openrefine-mac-$VERSION.dmg\"\n    fi\n\n    hdiutil convert \"$REFINE_BUILD_DIR/temp_refine.dmg\" -format UDZO -imagekey zlib-level=9 -o \"$REFINE_DIST_DIR/openrefine-mac-$VERSION.dmg\" || error \"Error compressing DMG\"\n    hdiutil internet-enable -yes \"$REFINE_DIST_DIR/openrefine-mac-$VERSION.dmg\" || error \"Error internet-enabling DMG\"\n\n    rm -f \"$REFINE_BUILD_DIR/temp_refine.dmg\"\n}\n\ntest() {\n    mvn_prepare\n    $MVN test\n}\n\n\ne2e_tests() {\n    get_revision\n\n    CYPRESS_RECORD=0\n\n    if [ -z \"$CYPRESS_BROWSER\" ] ; then\n        CYPRESS_BROWSER=\"electron\"\n    fi\n\n    if [ -z \"$CYPRESS_SPECS\" ] ; then\n        CYPRESS_SPECS=\"cypress/e2e/**/*.cy.js\"\n    fi\n\n    if [ ! -z \"$CYPRESS_PROJECT_ID\" ] && [ ! -z \"$CYPRESS_RECORD_KEY\" ] ; then\n        CYPRESS_RECORD=1\n        echo \"Tests will be recorded in Cypress Dashboard\"\n    elif [ ! -z \"$CYPRESS_PROJECT_ID\" ] && [ -z \"$CYPRESS_RECORD_KEY\" ] ; then\n        echo \"Found a Cypress project id but no record key - disabling recording in the Cypress Dashboard\"\n    fi\n\n    REFINE_DATA_DIR=\"${TMPDIR:=/tmp}/openrefine-tests\"\n\n    add_option \"-Drefine.headless=true\"\n    add_option \"-Drefine.autoreload=false\"\n    add_option \"-Dbutterfly.autoreload=false\"\n\n    check_running\n\n    if [ \"$RUNNING\" ] ; then\n        echo \"An OpenRefine server is already running. Please shut it down so that we can start a test server.\"\n        exit\n    fi\n\n    echo \"Starting OpenRefine server\"\n\n    run fork > /dev/null\n\n    echo \"Waiting for OpenRefine to load...\"\n    sleep 5\n    check_running\n    if [ -z \"$RUNNING\" ] ; then\n        sleep 10\n    fi\n    echo \"... proceed with the tests.\"\n    echo \"\"\n\n    echo \"Starting Cypress...\"\n    # Cypress needs a unique group id\n    # We're hashing the list of files to generate such Group Id\n    CYPRESS_GROUP=$(echo $CYPRESS_BROWSER$CYPRESS_SPECS | shasum)\n    CYPRESS_RUN_CMD=\"yarn --cwd ./main/tests/cypress run cypress run --spec \"$CYPRESS_SPECS\" --browser $CYPRESS_BROWSER  --headless --quiet --reporter list --env DISABLE_PROJECT_CLEANUP=1,OPENREFINE_URL=http://$REFINE_HOST_INTERNAL:$REFINE_PORT\"\n    if [ \"$CYPRESS_RECORD\" = \"1\" ] ; then\n        # if tests are recorded, project id is added to env vars, and --record flag is added to the cmd-line\n        export CYPRESS_PROJECT_ID=$CYPRESS_PROJECT_ID\n        CYPRESS_RUN_CMD=\"$CYPRESS_RUN_CMD --record --key $CYPRESS_RECORD_KEY --ci-build-id=$CYPRESS_CI_BUILD_ID --tag $CYPRESS_BROWSER --group \"$CYPRESS_GROUP\"\"\n    fi\n    export MOZ_FORCE_DISABLE_E10S=1\n    echo $CYPRESS_RUN_CMD\n    $CYPRESS_RUN_CMD\n\n    if [ \"$?\" = \"0\" ] ; then\n        UI_TEST_SUCCESS=\"1\"\n    else\n        UI_TEST_SUCCESS=\"0\"\n    fi\n\n    if [ \"$CYPRESS_RECORD\" = \"1\" ] ; then\n        echo \"You can review tests on Cypress.io: https://dashboard.cypress.io/projects/$CYPRESS_PROJECT_ID/runs\"\n    fi\n\n    echo \"\"\n    echo \"Killing OpenRefine\"\n    /bin/kill -9 $REFINE_PID\n    echo \"Cleaning up\"\n    rm -rf \"$REFINE_DATA_DIR\"\n\n    if [ \"$UI_TEST_SUCCESS\" = \"0\" ] ; then\n        error \"The UI test suite failed.\"\n    fi\n}\n\n\nserver_test() {\n    mvn_prepare\n    $MVN test -f main\n}\n\nextensions_test() {\n    mvn_prepare\n    $MVN test -f extensions\n}\n\nrun() {\n    FORK=$1\n\n    check_running\n\n    if [ \"$RUNNING\" ] ; then\n        warn \"OpenRefine is already running.\"\n    fi\n\n    if [ ! -d $REFINE_CLASSES_DIR ] ; then\n        IS_JAR=`ls $REFINE_LIB_DIR | grep openrefine`\n        if [ -z \"$IS_JAR\" ] ; then\n            mvn_prepare\n            build_prepare\n            $MVN process-resources\n            $MVN compile test-compile || exit\n            echo \"\"\n        fi\n    fi\n\n    freeRam=UNKNOWN\n    if [ \"$OS\" = \"macosx\" ] ; then\n        freeRam=$(top -l 1 | grep PhysMem | awk '{print $6}' | tr -d M)\n    elif [ \"$OS\" = \"linux\" ] ; then\n        freeRam=$(free -m | grep -oP '\\d+' | head -n 1)\n    fi\n\n    echo \"-------------------------------------------------------------------------------------------------\"\n    echo You have \"$freeRam\"M of free memory.\n    echo Your current configuration is set to use $REFINE_MEMORY of memory.\n    echo OpenRefine can run better when given more memory. Read our FAQ on how to allocate more memory here:\n    echo https://openrefine.org/docs/manual/installing\\#increasing-memory-allocation\n    echo \"-------------------------------------------------------------------------------------------------\"\n\n    if [ -d $REFINE_CLASSES_DIR ] ; then\n        add_option \"-Drefine.autoreload=true\" \"-Dbutterfly.autoreload=true\"\n    fi\n\n    if [ \"$OS\" = \"macosx\" ] ; then\n        add_option '-Xdock:icon=graphics/icon/openrefine.icns'\n    fi\n\n    if [ \"$REFINE_DATA_DIR\" ] ; then\n        add_option \"-Drefine.data_dir=$REFINE_DATA_DIR\"\n    fi\n\n    if [ \"$REFINE_WEBAPP\" ] ; then\n        add_option \"-Drefine.webapp=$REFINE_WEBAPP\"\n    fi\n\n    if [ \"$REFINE_PORT\" ] ; then\n        add_option \"-Drefine.port=$REFINE_PORT\"\n    fi\n\n    if [ \"$REFINE_INTERFACE\" ] ; then\n        add_option \"-Drefine.interface=$REFINE_INTERFACE\"\n    fi\n\n    if [ \"$REFINE_HOST\" ] ; then\n        add_option \"-Drefine.host=$REFINE_HOST\"\n    fi\n\n    if [ \"$REFINE_AUTOSAVE_PERIOD\" ] ; then\n        add_option \"-Drefine.autosave=$REFINE_AUTOSAVE_PERIOD\"\n    fi\n\n    CLASSPATH=\"$REFINE_CLASSES_DIR${SEP}$REFINE_LIB_DIR/*\"\n\n    RUN_CMD=(\"$JAVA\" -cp \"$CLASSPATH\" \"${OPTS[@]}\" \"com.google.refine.Refine\")\n\n    echo \"\"\n\n    if [ -z \"$FORK\" ] ; then\n        exec \"${RUN_CMD[@]}\"\n    else\n        \"${RUN_CMD[@]}\" &\n        REFINE_PID=\"$!\"\n    fi\n}\n\ncheckJavaMajorVersion() {\n  java_ver=$(\"$JAVA\" -version 2>&1 | grep version | cut -d ' ' -f 3 | tr -d \\\")\n  # Java 6, 7, 8 starts with 1.x\n  if [ ${java_ver:0:2} == \"1.\" ] ; then\n    major=`echo ${java_ver} | sed -E 's/1\\.([0-9])[0-9_.]{2,6}/\\1/g'`\n  else\n    # Java 9+ starts with x using semver versioning\n    major=`echo ${java_ver} | sed -E 's/([0-9]+)(-ea|(\\.[0-9]+)*)/\\1/g'`\n  fi\n  if (( ${major} < 11 )); then\n    error \"OpenRefine requires Java version 11 or later. If you have multiple versions of Java installed, please set the environment variable JAVA_HOME to the correct version.\"\n  fi\n  if (( ${major} > 21 )); then\n    echo \"WARNING: OpenRefine is not tested and not recommended for use with Java versions greater than 21.\"\n  fi\n}\n\n# -------------------------- script -----------------------------\n\n# ----- Normalize the current directory -------------------------\n\ncd `dirname $0`\n\n# ----- Default values ------------------------------------------\n\nOPTS=()\n\n# ---- OS-specific support --------------------------------------\n\nSYSTEM=`uname`\n\ncase \"$SYSTEM\" in\n  CYGWIN*) OS=\"windows\" ;;\n  Darwin*) OS=\"macosx\"  ;;\n  Linux*)  OS=\"linux\"   ;;\n  *) OS=\"other\" ;;\nesac\n\nSEP=\":\"\nif [ \"$OS\" = \"windows\" ] ; then\n    SEP=\";\"\nfi\n\n# ----- Check for custom ini file /c option  ---------------------------------\nargs=()\nwhile [ $# -ne 0 ] ; do\n  case \"$1\" in\n    -c) REFINE_INI_PATH=\"$2\"; shift 2; continue;;\n    *) args+=(\"$1\"); shift;;\n  esac\ndone\n\n# -- Read ini file ------------------------------------------------------------\n\nif [ -z $REFINE_INI_PATH ]; then\n  REFINE_INI_PATH=refine.ini\nfi\n\nif [ ! -f \"$REFINE_INI_PATH\" ]; then\n  error \"$REFINE_INI_PATH is not a valid filename\"\nfi\n\necho \"Using ${REFINE_INI_PATH} for configuration\"\nload_configs $REFINE_INI_PATH\n\n# ----- Parse the command line args -------------------------------------------\nfor ((i=0; i<${#args[@]}; i+=1)); do\n  arg=\"${args[i]}\"\n  case \"$arg\" in\n    -h) usage;;\n    -p) ((i+=1)); REFINE_PORT=\"${args[i]}\"; continue;;\n    -H) ((i+=1)); REFINE_HOST=\"${args[i]}\"; continue;;\n    -i) ((i+=1)); REFINE_INTERFACE=\"${args[i]}\"; continue;;\n    -w) ((i+=1)); REFINE_WEBAPP=\"${args[i]}\"; continue;;\n    -d) ((i+=1)); REFINE_DATA_DIR=\"${args[i]}\"; continue;;\n    -m) ((i+=1)); REFINE_MEMORY=\"${args[i]}\"; REFINE_MIN_MEMORY=\"${args[i]}\"; continue;;\n    -v) ((i+=1)); REFINE_VERBOSITY=\"${args[i]}\"; continue;;\n    -x) ((i+=1)); REFINE_EXTRA_OPTS=\"${args[i]}\"; continue;;\n    --debug) add_option '-Xdebug' '-Xrunjdwp:transport=dt_socket,address=8000,server=y,suspend=n'; continue;;\n    --jmx) add_option '-Dcom.sun.management.jmxremote'; continue;;\n    -*) echo \"Invalid option: $arg\" >&2; exit 1;;\n    *) ACTION=\"$arg\"; break;;\n  esac\ndone\n\nif [ -z \"$ACTION\" ] ; then\n    ACTION=\"run\"\nfi\n\n# --- Check Java --------------------------------------------------------------\n\nif [ \"$OS\" = \"macosx\" ] ; then\n    if [ -z \"$JAVA_HOME\" ] ; then\n    # We need want recent Java because we're bundling JRE - may want to warn and force developer to set JAVA_HOME\n    # The /usr/libexec/java_home utility may be tied to the Java prefs app, so could go away when Apple removes it\n        export JAVA_HOME=$(/usr/libexec/java_home)\n    fi\nfi\n\nif [ \"$JAVA_HOME\" ] ; then\n    JAVA=\"$JAVA_HOME/bin/java\"\nelse\n    JAVA=\"`command -v java 2> /dev/null`\"\nfi\n\nif [ ! -x \"$JAVA\" ] ; then\n    error \"Could not find the 'java' executable at '$JAVA', are you sure your JAVA_HOME environment variable is pointing to a proper java installation?\"\nfi\n\ncheckJavaMajorVersion\n\n# ----- Verify and Set Required Environment Variables -------------------------\n\nif [ -z \"$JAVA_OPTIONS\" ] ; then\n  JAVA_OPTIONS=\"\"\nfi\nadd_option \"${JAVA_OPTIONS[@]}\"\n\nif [ -z \"$REFINE_MEMORY\" ] ; then\n    REFINE_MEMORY=\"1024M\"\nfi\nif [ -z \"$REFINE_MIN_MEMORY\" ] ; then\n    REFINE_MIN_MEMORY=\"256M\"\nfi\nadd_option \"-Xms$REFINE_MIN_MEMORY\" \"-Xmx$REFINE_MEMORY\" \"-Drefine.memory=$REFINE_MEMORY\"\n\nif [ -z \"$REFINE_MAX_FORM_CONTENT_SIZE\" ] ; then\n    REFINE_MAX_FORM_CONTENT_SIZE=\"1048576\"\nfi\nadd_option \"-Drefine.max_form_content_size=$REFINE_MAX_FORM_CONTENT_SIZE\"\n\nif [ -z \"$REFINE_PORT\" ] ; then\n    REFINE_PORT=\"3333\"\nfi\n\nif [ -z \"$REFINE_INTERFACE\" ] ; then\n    REFINE_INTERFACE=\"127.0.0.1\"\nfi\n\nif [ -z \"$REFINE_HOST\" ] ; then\n    if [ \"$REFINE_INTERFACE\" = \"0.0.0.0\" ] ; then\n        REFINE_HOST='*'\n    else\n        REFINE_HOST=\"$REFINE_INTERFACE\"\n    fi\nfi\n\nif [ \"$REFINE_HOST\" = '*' ] ; then\n    echo No host specified while binding to interface 0.0.0.0, guessing localhost.\n    REFINE_HOST_INTERNAL=\"localhost\"\nelse\n    REFINE_HOST_INTERNAL=\"$REFINE_HOST\"\nfi\n\nif [ -z \"$REFINE_WEBAPP\" ] ; then\n    REFINE_WEBAPP=\"main/webapp\"\nfi\n\nif [ -z \"$REFINE_TEST_DIR\" ] ; then\n    REFINE_TEST_DIR=\"main/tests\"\nfi\n\nif [ -z \"$REFINE_CLASSES_DIR\" ] ; then\n    REFINE_CLASSES_DIR=\"server/classes\"\nfi\n\nif [ -z \"$REFINE_LIB_DIR\" ] ; then\n    REFINE_LIB_DIR=\"server/target/lib\"\nfi\n\nif [ -z \"$REFINE_BUILD_DIR\" ] ; then\n    REFINE_BUILD_DIR=\"build\"\nfi\n\nif [ -z \"$REFINE_TOOLS_DIR\" ] ; then\n    REFINE_TOOLS_DIR=\"tools\"\nfi\n\nif [ -z \"$REFINE_DIST_DIR\" ] ; then\n    REFINE_DIST_DIR=\"dist\"\nfi\n\nif [ -z \"$REFINE_VERBOSITY\" ] ; then\n    REFINE_VERBOSITY=\"info\"\nfi\nadd_option \"-Drefine.verbosity=$REFINE_VERBOSITY\"\n\nif [ ! -z \"$REFINE_EXTRA_OPTS\" ] ; then\n    add_option \"-D$REFINE_EXTRA_OPTS\"\nfi\n\nif [ -z \"$JYTHONPATH\" ] ; then\n    JYTHONPATH=\"$REFINE_WEBAPP/WEB-INF/lib/jython\"\nelse\n    JYTHONPATH=\"$REFINE_WEBAPP/WEB-INF/lib/jython${SEP}$JYTHONPATH\"\nfi\n\nadd_option \"-Dpython.path=$JYTHONPATH\"\nadd_option \"-Dpython.cachedir=$HOME/.local/share/google/refine/cachedir\"\n\n# ----- Respond to the action given --------------------------------------------\ncase \"$ACTION\" in\n  build) build_prepare; do_mvn process-resources; do_mvn compile\\ test-compile;;\n  clean) do_mvn clean;;\n  test) test $1;;\n  tests) test $1;;\n  e2e_tests) e2e_tests;;\n  server_test) server_test $1;;  \n  server_tests) server_test $1;;  \n  extensions_test) extensions_test $1;;\n  extensions_tests) extensions_test $1;;\n  run) run;;\n  lint) lint;;\n  mac_dist) mac_dist $1;;\n  windows_dist) windows_dist $1;;\n  linux_dist) linux_dist $1;;\n  dist) dist $1;;\n  *) echo \"Unknown Refine command called \\\"$ACTION\\\", type \\\"./refine -h\\\" for proper usage.\";;\nesac\n\n# ----------- end of file --------------------\n"
        },
        {
          "name": "refine.bat",
          "type": "blob",
          "size": 9.2841796875,
          "content": "@echo off\nsetlocal EnableDelayedExpansion\n\nrem Change current working directory to directory of the batch script\ncd %~dp0\n\nrem\nrem Configuration variables\nrem\nrem MAVEN_HOME\nrem   Home of Maven installation; copy is in the source as tools\\apache-ant-*\nrem\nrem JAVA_HOME\nrem   Home of Java installation.\nrem\nrem JAVA_OPTIONS\nrem   Extra options to pass to the JVM\nrem\n\nif \"%OS%\"==\"Windows_NT\" @setlocal\nif \"%OS%\"==\"WINNT\" @setlocal\n\nrem --- First two utilities for exiting --------------------------------------------\n\ngoto endUtils\n\n:usage\necho Usage: %0 [options] ^<action^>\necho.\necho Options\necho.    /?                      Print this message and exit.\necho     /c ^<path^>               Path to the refine.ini file. Default: .\\refine.ini.\necho     /d ^<path^>               Path to the data directory. Default: OS dependent.\necho     /debug                  Enable JVM debugging (on port 8000).\necho     /H ^<host^>               Expected host header value (* to disable checks). Default: ^<interface^>.\necho     /i ^<interface^>          The network interface OpenRefine should bind to. Default: 127.0.0.1.\necho     /jmx                    Enable JMX monitoring.\necho     /m ^<memory^>             Set JVM min and max memory heap size to use. Default: 1400M.\necho     /p ^<port^>               The port that OpenRefine should bind to. Default: 3333.\necho     /v ^<level^>              Verbosity level [error, warn, info, debug, trace].\necho     /w ^<path^>               Path to the webapp. Default: src\\main\\webapp.\necho     /x ^<name=value^>         Additional configuration parameters to pass to OpenRefine.\necho.\necho Actions\necho     build                   Build OpenRefine.\necho     clean                   Clean compiled classes.\necho     extensions_test         Run the extensions tests.\necho     run                     Run OpenRefine.\necho     server_test             Run the server tests.\necho     test                    Run all the tests.\necho     lint                    Reformat the source code according to OpenRefine's conventions.\ngoto :eof\n\n\n\n:fail\necho Type 'refine /h' for usage.\ngoto :eof\n\n:endUtils\n\nset OPTS=\n\nrem ----- Check for custom ini file /c option  --------------------------------\n\nset \"REFINE_INI_PATH=\"\nset \"FOUND_C=\"\nfor %%A in (%*) do (\n    if defined FOUND_C (\n        set REFINE_INI_PATH=%%A\n        goto :readIniFile\n    ) else if \"%%A\"==\"/c\" (\n        set \"FOUND_C=1\"\n    )\n)\n\n:readIniFile\nrem --- Read ini file ---------------------------------------------------------\nif \"!REFINE_INI_PATH!\" == \"\" set REFINE_INI_PATH=refine.ini\nif not exist !REFINE_INI_PATH! (\n echo Error: \"!REFINE_INI_PATH!\" does not exist.\n exit /b 1\n)\nfor /f \"usebackq tokens=1,* delims== \" %%a in (`type \"!REFINE_INI_PATH!\" ^| findstr /R /B /V \"^# ^; ^$\"`) do (\n    set \"%%a=%%b\"\n)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t \nrem ----- Parse the command line args -----------------------------------------\n\n:loop\nif \"%~1\"==\"\" goto checkVars\nif \"%~1\"==\"/?\" goto usage\nif \"%~1\"==\"/h\" goto usage\nif \"%~1\"==\"/p\" set \"REFINE_PORT=%~2\" & shift & shift & goto loop\nif \"%~1\"==\"/i\" set \"REFINE_INTERFACE=%~2\" & shift & shift & goto loop\nif \"%~1\"==\"/H\" set \"REFINE_HOST=%~2\" & shift & shift & goto loop\nif \"%~1\"==\"/w\" set \"REFINE_WEBAPP=%~2\" & shift & shift & goto loop\nif \"%~1\"==\"/m\" set \"REFINE_MEMORY=%~2\" & set \"REFINE_MIN_MEMORY=%~2\" & shift & shift & goto loop\nif \"%~1\"==\"/d\" set \"REFINE_DATA_DIR=%~2\" & shift & shift & goto loop\nif \"%~1\"==\"/debug\" set \"OPTS=%OPTS% -Xdebug -Xrunjdwp:transport=dt_socket,address=8000,server=y,suspend=n\" & shift & goto loop\nif \"%~1\"==\"/x\" set \"REFINE_EXTRA_OPTS=%~2\" & shift & shift & goto loop\nif \"%~1\"==\"/jmx\" set \"OPTS=%OPTS% -Dcom.sun.management.jmxremote\" & shift & goto loop\nif \"%~1\"==\"/c\" shift & shift & goto loop\nif \"%~1\"==\"/v\" set \"REFINE_VERBOSITY=%~2\" & shift & shift & goto loop\n\n:checkVars\n\nrem --- Check JAVA_HOME -------------------------------------------------------\n\nif not \"%JAVA_HOME%\" == \"\" goto gotJavaHome\necho You must set JAVA_HOME to point at your Java Development Kit installation\necho.\necho If you don't know how to do this, follow the instructions at\necho.\necho   https://openrefine.org/docs/manual/installing#java\necho.\n\ngoto fail\n:gotJavaHome\t\t\t\n\nrem ----- Verify and Set Required Environment Variables -----------------------\n\nif not \"%JAVA_OPTIONS%\" == \"\" goto gotJavaOptions\nset JAVA_OPTIONS=\n:gotJavaOptions\nset OPTS=%OPTS% %JAVA_OPTIONS%\n\nif not \"%REFINE_MEMORY%\" == \"\" goto gotMemory\nset REFINE_MEMORY=1400M\nif not \"%REFINE_MIN_MEMORY%\" == \"\" goto gotMemory\nset REFINE_MIN_MEMORY=256M\n\n:gotMemory\nset OPTS=%OPTS% -Xms%REFINE_MIN_MEMORY% -Xmx%REFINE_MEMORY% -Drefine.memory=%REFINE_MEMORY%\n\nif not \"%REFINE_MAX_FORM_CONTENT_SIZE%\" == \"\" goto gotMaxFormContentSize\nset REFINE_MAX_FORM_CONTENT_SIZE=1048576\n:gotMaxFormContentSize\nset OPTS=%OPTS% -Drefine.max_form_content_size=%REFINE_MAX_FORM_CONTENT_SIZE%\n\nif not \"%REFINE_PORT%\" == \"\" goto gotPort\nset REFINE_PORT=3333\n:gotPort\nset OPTS=%OPTS% -Drefine.port=%REFINE_PORT%\n\nif not \"%REFINE_INTERFACE%\" == \"\" goto gotInterface\nset REFINE_INTERFACE=127.0.0.1\n:gotInterface\nset OPTS=%OPTS% -Drefine.interface=%REFINE_INTERFACE%\n\nif not \"%REFINE_HOST%\" == \"\" goto gotHost\nif \"%REFINE_INTERFACE%\" == \"\" goto skipHost\nset REFINE_HOST=%REFINE_INTERFACE%\n:gotHost\nset OPTS=%OPTS% -Drefine.host=%REFINE_HOST%\n:skipHost\n\nif not \"%REFINE_WEBAPP%\" == \"\" goto gotWebApp\nset REFINE_WEBAPP=main\\webapp\n:gotWebApp\nset OPTS=%OPTS% -Drefine.webapp=%REFINE_WEBAPP%\n\nif not \"%REFINE_CLASSES_DIR%\" == \"\" goto gotClassesDir\nset REFINE_CLASSES_DIR=server\\classes\n:gotClassesDir\n\nif not \"%REFINE_DATA_DIR%\" == \"\" set OPTS=%OPTS% -Drefine.data_dir=%REFINE_DATA_DIR%\n\nif not \"%REFINE_LIB_DIR%\" == \"\" goto gotLibDir\nset REFINE_LIB_DIR=server\\target\\lib\n:gotLibDir\n\nif not \"%REFINE_VERBOSITY%\" == \"\" goto gotVerbosity\n:gotVerbosity\nset OPTS=%OPTS% -Drefine.verbosity=%REFINE_VERBOSITY%\n\nif not \"%REFINE_EXTRA_OPTS%\" == \"\" set OPTS=%OPTS% -D%REFINE_EXTRA_OPTS%\n\nrem ----- Respond to the action ----------------------------------------------------------\n\nset ACTION=%1\nsetlocal\nif \"\"%ACTION%\"\" == \"\"build\"\" goto doMvn\nif \"\"%ACTION%\"\" == \"\"server_test\"\" goto doMvn\nif \"\"%ACTION%\"\" == \"\"extensions_test\"\" goto doMvn\nif \"\"%ACTION%\"\" == \"\"test\"\" goto doMvn\nif \"\"%ACTION%\"\" == \"\"lint\"\" goto doMvn\nif \"\"%ACTION%\"\" == \"\"clean\"\" goto doMvn\nif \"\"%ACTION%\"\" == \"\"run\"\" goto doRun\nif \"\"%ACTION%\"\" == \"\"\"\" goto doRun\n  echo Unknown Refine command called \"%1\", type \"refine /?\" for proper usage.\n  exit /B 1\n\n:doRun\n\nfor /f \"tokens=2 delims==\" %%i in ('wmic OS get FreePhysicalMemory /Value') do set /a freeRam=%%i/1024\necho -------------------------------------------------------------------------------------------------\necho You have %freeRam%M of free memory.\necho Your current configuration is set to use %REFINE_MEMORY% of memory.\necho OpenRefine can run better when given more memory. Read our FAQ on how to allocate more memory here:\necho https://openrefine.org/docs/manual/installing\\#increasing-memory-allocation\necho -------------------------------------------------------------------------------------------------\n\nrem --- Checking Java Version  ------------------------------------------\nset JAVA=\"%JAVA_HOME%\\bin\\java.exe\"\n\nif not exist !JAVA! (\n    echo The specified path !JAVA! does not point to a valid Java Development Kit installation.\n    echo Please check that the path is correct and that a Java Development Kit is installed at that location.\n    echo   https://openrefine.org/docs/manual/installing#java\n    goto :fail\n)\n\nset JAVA_VERSION=\"\"\nset JAVA_RELEASE=0\nfor /f \"tokens=3\" %%g in ('^\"%JAVA% -version 2^>^&1 ^| findstr /i \"version\"^\"') do (\n  set JAVA_VERSION=%%g\n)\nrem Java 6, 7, 8 starts with 1.x\nrem Java 9+ starts with x using semver versioning\nset JAVA_VERSION=%JAVA_VERSION:\"=%\nfor /f \"delims=.-_ tokens=1-2\" %%v in (\"%JAVA_VERSION%\") do (\n  if /I \"%%v\" EQU \"1\" (\n    set JAVA_RELEASE=%%w\n  ) else (\n    set JAVA_RELEASE=%%v\n  )\n)\necho Java %JAVA_RELEASE% (%JAVA_VERSION%)\nif %JAVA_RELEASE% LSS 11 (\n    echo OpenRefine requires Java version 11 or later. If you have multiple versions of Java installed, please set the environment variable JAVA_HOME to the correct version.\n    exit /B 1\n)\nif %JAVA_RELEASE% GTR 21 (\n    echo WARNING: OpenRefine is not tested and not recommended for use with Java versions greater than 21.\n)\n\nset CLASSPATH=\"%REFINE_CLASSES_DIR%;%REFINE_LIB_DIR%\\*\"\n%JAVA% -cp %CLASSPATH% %OPTS% -Djava.library.path=%REFINE_LIB_DIR%/native/windows com.google.refine.Refine\ngoto :eof\n\n:doMvn\nif defined MAVEN_HOME (\n    set \"MVN=%MAVEN_HOME%\\bin\\mvn\"\n) else if defined M2_HOME (\n    set \"MVN=%M2_HOME%\\bin\\mvn\"\n) else (\n    set \"MVN=mvn\"\n)\n\nif not exist \"%MVN%\" (\n    echo Apache Maven not found. Please set M2_HOME or MAVEN_HOME environment variables or ensure that 'mvn' is in your system PATH.\n    exit /b 1\n)\nset MVN_ACTION=\"\"%ACTION%\"\"\nif \"\"%ACTION%\"\" == \"\"build\"\" goto :build-setup\ngoto :endif\n:build-setup\npushd main\\webapp \ncall npm install\npopd\nset MVN_ACTION=compile test-compile dependency:build-classpath\n:endif\n\nif \"\"%ACTION%\"\" == \"\"test\"\" set MVN_ACTION=test dependency:build-classpath\nif \"\"%ACTION%\"\" == \"\"server_test\"\" set MVN_ACTION=test -f main\nif \"\"%ACTION%\"\" == \"\"extensions_test\"\" set MVN_ACTION=test -f extensions\nif \"\"%ACTION%\"\" == \"\"lint\"\" (\n    set MVN_ACTION=formatter:format impsort:sort\n    rem Skip the call to process-resources as it's not needed for this action\n    goto :mvnCall\n)\ncall \"%MVN%\" process-resources\n:mvnCall\ncall \"%MVN%\" %MVN_ACTION%\ngoto :eof\n"
        },
        {
          "name": "refine.ini",
          "type": "blob",
          "size": 1.5869140625,
          "content": "# NOTE: This file is not read if you run the Refine executable directly\n# It is only read of you use the refine shell script or refine.bat\n\n# FOR DEVELOPERS: you can copy refine.ini and rename it to refine-dev.ini\n# Configurations in refine.ini will be ignored if refine-dev.ini exists\n# refine-dev.ini won't be tracked by Git, so feel free to put your custom configurations in it\n\nno_proxy=\"localhost,127.0.0.1\"\n#REFINE_PORT=3334\n#REFINE_INTERFACE=127.0.0.1\n#REFINE_HOST=mymachine.local\n\n#REFINE_WEBAPP=main\\webapp\n\n# Maximum JVM heap (memory) and max form size allocations\n#REFINE_MAX_FORM_CONTENT_SIZE=1048576\nREFINE_MEMORY=1400M\n\n# Initial (and minimum) size of Java heap\nREFINE_MIN_MEMORY=1400M\n\n# Some sample configurations. These have no defaults.\n#JAVA_HOME=C:\\Program Files\\Java\\jdk1.8.0_151\n# Use a single JAVA_OPTIONS that includes any JVM options you need upon OpenRefine startup\n#JAVA_OPTIONS=-XX:+UseParallelGC -verbose:gc -Drefine.headless=true -Drefine.data_dir=C:\\Users\\user\\AppData\\Roaming\\OpenRefine -Drefine.display.new.version.notice=true\n\n# Uncomment to increase autosave period to 60 mins (default: 5 minutes)\n# for better performance of long-lasting transformations (but increased risk of data loss)\n#REFINE_AUTOSAVE_PERIOD=60\n\n# Google Data OAuth configuration for developers\n# (NOTE: This is only needed for developers. Users of released versions can ignore this)\n# To get your credentials, please see the instructions on the wiki:\n#   https://github.com/OpenRefine/OpenRefine/wiki/Google-Extension\n#GDATA_CLIENT_ID=your_client_id\n#GDATA_CLIENT_SECRET=your_client_secret\n#GDATA_API_KEY=your API key\n"
        },
        {
          "name": "server",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}