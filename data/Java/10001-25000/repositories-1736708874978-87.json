{
  "metadata": {
    "timestamp": 1736708874978,
    "page": 87,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjkw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "deeplearning4j/deeplearning4j",
      "stars": 13738,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.841796875,
          "content": ".DS_Store\npom.xml.releaseBackup \ntarget/\ndependency-reduced-pom.xml\n*.ser\napplication.home_IS_UNDEFINEiD\nREADME.md~\n*.bin\n*.releaseBackup\n*.out\n*~\n.pydevproject\nrelease.properties\n.idea/\n*.iml\n*.prefs\n*.settings/*\n*.log\n.project\n.classpath\nmetastore_db\n*.ipynb*\n!/dl4j-examples/tutorials/*.ipynb\n*-git.properties\n*.class\n*.jar\n*.war\n*.ear\n*.zip\n*.tar.gz\n*.rar\nhs_err_pid*\npom.xml.tag\npom.xml.releaseBackup\npom.xml.versionsBackup\npom.xml.next\nrelease.properties\n*dependency-reduced-pom.xml\nTest Results*.xml\nTest Results*.html\nlibnd4j/tests_*\nplatform-tests/*.proto\nplatform-tests/*.txt\nplatform-tests/*.pbtxt\n\n# Specific for Nd4j\n*.md5\n*.pom\n*.sha1\n*.ser\n*.so\n*.jpg\n*.png\n*.iml\n*.prefs\n*.dylib\nlib/\n.vs/\n.vscode/\nnd4j/nd4j-backends/nd4j-api-parent/nd4j-api/src/main/resources/bin\nnd4j/nd4j-backends/nd4j-backend-impls/nd4j-native/src/test/resources/writeNumpy.csv\nnd4j/nd4j-backends/nd4j-tests/src/test/resources/tf_graphs/examples/**/data-all*\nnd4j/nd4j-backends/nd4j-tests/src/test/resources/tf_graphs/examples/**/checkpoint\nnd4j/nd4j-backends/nd4j-api-parent/nd4j-api/src/main/java/onnx/\nnd4j/nd4j-backends/nd4j-api-parent/nd4j-api/src/main/java/org/tensorflow/\nnd4j/samediff-import/samediff-import-onnx/*.txt\nnd4j/samediff-import/samediff-import-onnx/*.pbtxt\nnd4j/samediff-import/samediff-import-tensorflow/*.txt\nnd4j/samediff-import/samediff-import-tensorflow/*.pbtxt\n*.pom.xml.tmp\nlibnd4j/tests_cpu/surefire-reports\n\ndoc_sources/\ndoc_sources_*\n\n*.pyc\n\n# Python virtual environments\nvenv/\nvenv2/\n\n# Ignore the nd4j files that are created by javacpp at build to stop merge conflicts\nnd4j/nd4j-backends/nd4j-backend-impls/nd4j-native/src/main/java/org/nd4j/nativeblas/Nd4jCpu.java\nnd4j/nd4j-backends/nd4j-backend-impls/nd4j-cuda/src/main/java/org/nd4j/nativeblas/Nd4jCuda.java\n\n# Ignore meld temp files\n*.orig\n\n*.html\n\n#vim\n*.swp\n\n*.dll\n*.tmp\nlibnd4j/include/generated/include_ops.h\n"
        },
        {
          "name": ".mvn",
          "type": "tree",
          "content": null
        },
        {
          "name": "ADRs",
          "type": "tree",
          "content": null
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 2.7001953125,
          "content": "# Contributing to Deeplearning4j\n\nThanks for your interest in DL4J. Our goal is to bring fast, open-source deep learning to all JVM-based communities.\n\n\n## Getting Started\n\nDeeplearning4j's [open issues are here](https://github.com/eclipse/deeplearning4j/issues). In time, we'll tag issues that would make a good first pull request for new contributors. An easy way to get started helping the project is to *file an issue*. You can do that on the Deeplearning4j issues page by clicking on the green button at the right. Issues can include bugs to fix, features to add, or documentation that looks outdated. \n\nNote that you will need to [build dl4j from source](https://deeplearning4j.konduit.ai/multi-project/how-to-guides/build-from-source)\n\nFor some tips on contributing to open source, this [post is helpful](https://smartbear.com/blog/test-and-monitor/14-ways-to-contribute-to-open-source-without-being/).\n\n## Contributions\n\nDeeplearning4j welcomes contributions from everyone.\n\nContributions to Deeplearning4j should be made in the form of GitHub pull requests. Each pull request will\nbe reviewed by a core contributor (someone with permission to land patches) and either landed in the\nmain tree or given feedback for changes that would be required.\n\n## Pull Request Checklist\n\n- Branch from the master branch and, if needed, rebase to the current master\n  branch before submitting your pull request. If it doesn't merge cleanly with\n  master you may be asked to rebase your changes.\n\n- Commits should be as small as possible, while ensuring that each commit is\n  correct independently (i.e., each commit should compile and pass tests). \n\n- Don't put submodule updates in your pull request unless they are to landed\n  commits.\n\n- If your patch is not getting reviewed or you need a specific person to review\n  it, you can @-reply a reviewer asking for a review in the pull request or a\n  comment.\n\n- Work-in-progress pull requests are welcome. Please prefix them with `[WIP]` to tell the continuous integration (CI) backend not to run tests/checks on them (until that tag is removed and another commit is pushed up).\n\n- Add tests relevant to the fixed bug or new feature.  \n\n## Conduct & License\n\nWe follow the [Rust Code of Conduct](http://www.rust-lang.org/conduct.html).\n\nAll code in this repository is released under the Apache Software Foundation License, 2.0, and by contributing to this repository, you agree to release that contribution under that same license. \n\n\n## Eclipse Contributor Agreement and Commit Signing\n\nPlease see the following page for details: [https://deeplearning4j.konduit.ai/multi-project/how-to-guides/contribute/eclipse-contributors](https://deeplearning4j.konduit.ai/multi-project/how-to-guides/contribute/eclipse-contributors)\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 17.224609375,
          "content": "Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright {yyyy} {name of copyright owner}\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n##########################\n\nKeras code\n\nAuto-generated documentation: https://github.com/deeplearning4j/deeplearning4j/blob/master/docs/doc_generator.py\n\nCOPYRIGHT\n\nAll contributions by François Chollet:\nCopyright (c) 2015 - 2018, François Chollet.\nAll rights reserved.\n\nAll contributions by Google:\nCopyright (c) 2015 - 2018, Google, Inc.\nAll rights reserved.\n\nAll contributions by Microsoft:\nCopyright (c) 2017 - 2018, Microsoft, Inc.\nAll rights reserved.\n\nAll other contributions:\nCopyright (c) 2015 - 2018, the respective contributors.\nAll rights reserved.\n\nEach contributor holds copyright over their respective contributions.\nThe project versioning (Git) records all such contribution source information.\n\nThe MIT License (MIT)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n##########################\n\nOpenCSV Code\n\nCSVParser: https://github.com/deeplearning4j/deeplearning4j/blob/master/datavec/datavec-api/src/main/java/org/datavec/api/records/reader/impl/csv/SerializableCSVParser.java\n\nApache 2.0 License\n\nAll contributions by Bytecode Pty Ltd.\nCopyright 2005 Bytecode Pty Ltd.\nAll rights reserved.\n\n\n##########################\n\nAeron Code\n\nModifed Code: nd4j/nd4j-serde/nd4j-aeron/src/main/java/org/nd4j/aeron/ipc/AeronUtil.java\n\nCopyright 2014 - 2016 Real Logic Ltd. All rights reserved.\n\nApache License, Version 2.0\n\n\n##########################\n\ncnpy Code\n\nForked Code: libnd4j/include/cnpy/\n\nThe MIT License\n\nCopyright (c) Carl Rogers, 2011\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n\n##########################\n\nProtocol Buffers Code\n\nCodebase: nd4j/nd4j-backends/nd4j-api-parent/nd4j-api/src/main/protobuf/tf/google/protobuf/\n\nProtocol Buffers - Google's data interchange format\nCopyright 2008 Google Inc.  All rights reserved.\nhttps://developers.google.com/protocol-buffers/\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n    * Redistributions of source code must retain the above copyright\nnotice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above\ncopyright notice, this list of conditions and the following disclaimer\nin the documentation and/or other materials provided with the\ndistribution.\n    * Neither the name of Google Inc. nor the names of its\ncontributors may be used to endorse or promote products derived from\nthis software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n\n##########################\n\nONNX Code\n\nProtocol Buffers: nd4j/nd4j-backends/nd4j-api-parent/nd4j-api/src/main/protobuf/onnx/\n\nCopyright (c) Facebook Inc. and Microsoft Corporation. All rights reserved.\n\nLicensed under the MIT license.\n\n\n##########################\n\nTensorFlow Code\n\nProtocol Buffers: nd4j/nd4j-backends/nd4j-api-parent/nd4j-api/src/main/protobuf/tf/tensorflow/core/\nOperations: libnd4j/include/ops/declarable/generic/parity_ops/\n\nCopyright 2015-2017 The TensorFlow Authors. All rights reserved.\n\nApache License, Version 2.0\n\n\n##########################\n\nAnsj Code\n\nCodebase: deeplearning4j/deeplearning4j-nlp-parent/deeplearning4j-nlp-chinese/src/main/java/org/ansj/\nResources: deeplearning4j/deeplearning4j-nlp-parent/deeplearning4j-nlp-chinese/src/main/resources/\n\nCopyright 2011-2016 ansj_seg. All rights reserved.\n\nApache License, Version 2.0\n\n\n##########################\n\nKuromoji Code\n\nCodebase: deeplearning4j/deeplearning4j-nlp-parent/deeplearning4j-nlp-japanese/src/main/java/com/atilika/kuromoji/\n\nCopyright (c) 2010-2015 Atilika Inc. and contributors. All rights reserved.\n\nApache License, Version 2.0\n"
        },
        {
          "name": "NOTICE.txt",
          "type": "blob",
          "size": 0.6650390625,
          "content": "Eclipse Deeplearning4j\nCopyright 2021 Eclipse Deeplearning4j Contributors\n\nThis product includes software developed at\nThe Apache Software Foundation (http://www.apache.org/).\n\nThis product includes software developed at\n* Skymind Inc  (Apache 2.0). Copyright (C) 2015-2018 Skymind Inc .\n\nThis product includes software developed at\n* Konduit KK  (Apache 2.0). Copyright (C) 2020.\n\n\nThis product includes software from the Tensorflow Project  (Apache 2.0).\n* Copyright (C) 2015-2018 Tensorflow Authors.\n\n# https://github.com/onnx/onnx\n\nThis product includes software from the Onnx Project project (Apache 2.0).\n* Copyright (C)  2020 Onnx Contributors (https://github.com/onnx/onnx)"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.845703125,
          "content": "<p align=\"center\">\n  <img src=\"https://www.zeljkoobrenovic.com/tools/tech/images/eclipse_deeplearning4j.png\">\n</p>\n\n [![Documentation](https://img.shields.io/badge/user-documentation-blue.svg)](https://deeplearning4j.konduit.ai/)\n[![Get help at the community forum](https://img.shields.io/badge/Get%20Help-Community%20Forum-blue)](https://community.konduit.ai/)\n[![javadoc](https://javadoc.io/badge2/org.deeplearning4j/deeplearning4j-nn/DL4J%20API%20Doc.svg)](https://javadoc.io/doc/org.deeplearning4j/deeplearning4j-nn)\n[![javadoc](https://javadoc.io/badge2/org.nd4j/nd4j-api/ND4J%20API%20Doc.svg)](https://javadoc.io/doc/org.nd4j/nd4j-api)\n[![License](https://img.shields.io/github/license/eclipse/deeplearning4j)](LICENSE)\n![GitHub commit activity](https://img.shields.io/github/commit-activity/m/eclipse/deeplearning4j)\n\n\nThe **[Eclipse Deeplearning4J](https://deeplearning4j.konduit.ai/)** (DL4J) ecosystem is a set of projects intended to support all the needs of a JVM based deep learning application. This means starting with the raw data, loading and preprocessing it from wherever and whatever format it is in to building and tuning a wide variety of simple and complex deep learning networks. \n\nBecause Deeplearning4J runs on the JVM you can use it with a wide variety of JVM based languages other than Java, like Scala, Kotlin, Clojure and many more. \n\nThe DL4J stack comprises of:\n- **DL4J**: High level API to build MultiLayerNetworks and ComputationGraphs with a variety of layers, including custom ones. Supports importing Keras models from h5, including tf.keras models (as of 1.0.0-beta7) and also supports distributed training on Apache Spark\n- **ND4J**: General purpose linear algebra library with over 500 mathematical, linear algebra and deep learning operations. ND4J is based on the highly-optimized C++ codebase LibND4J that provides CPU (AVX2/512) and GPU (CUDA) support and acceleration by libraries such as OpenBLAS, OneDNN (MKL-DNN), cuDNN, cuBLAS, etc\n- **SameDiff** : Part of the ND4J library, SameDiff is our automatic differentiation / deep learning framework. SameDiff uses a graph-based (define then run) approach, similar to TensorFlow graph mode. Eager graph (TensorFlow 2.x eager/PyTorch) graph execution is planned. SameDiff supports importing TensorFlow frozen model format .pb (protobuf) models. Import for ONNX, TensorFlow SavedModel and Keras models are planned. Deeplearning4j also has full SameDiff support for easily writing custom layers and loss functions.\n- **DataVec**: ETL for machine learning data in a wide variety of formats and files (HDFS, Spark, Images, Video, Audio, CSV, Excel etc)\n- **LibND4J** : C++ library that underpins everything. For more information on how the JVM acceses native arrays and operations refer to [JavaCPP](https://github.com/bytedeco/javacpp)\n- **Python4J**: Bundled cpython execution for the JVM\n\nAll projects in the DL4J ecosystem support Windows, Linux and macOS. Hardware support includes CUDA GPUs (10.0, 10.1, 10.2 except OSX), x86 CPU (x86_64, avx2, avx512), ARM CPU (arm, arm64, armhf) and PowerPC (ppc64le).\n\n## Community Support\nFor support for the project, please go over to https://community.konduit.ai/\n\n## Using Eclipse Deeplearning4J in your project\n\nDeeplearning4J has quite a few dependencies. For this reason we only support usage with a build tool.\n\n```xml\n<dependencies>\n  <dependency>\n      <groupId>org.deeplearning4j</groupId>\n      <artifactId>deeplearning4j-core</artifactId>\n      <version>1.0.0-M2.1</version>\n  </dependency>\n  <dependency>\n      <groupId>org.nd4j</groupId>\n      <artifactId>nd4j-native-platform</artifactId>\n      <version>1.0.0-M2.1</version>\n  </dependency>\n</dependencies>\n```\n\nAdd these dependencies to your pom.xml file to use Deeplearning4J with the CPU backend. A full standalone project example is [available in the example repository](https://github.com/eclipse/deeplearning4j-examples), if you want to start a new Maven project from scratch.\n\n## Code samples\n\nDue to DL4J being a multi faceted project\nwith several modules in the mono repo, we recommend looking at the examples\nfor a taste of different usages of the different modules. Below\nwe'll link to examples for each module.\n\n1. ND4J: https://github.com/deeplearning4j/deeplearning4j-examples/tree/master/nd4j-ndarray-examples\n2. DL4J: https://github.com/deeplearning4j/deeplearning4j-examples/tree/master/dl4j-examples\n3. Samediff: https://github.com/deeplearning4j/deeplearning4j-examples/tree/master/samediff-examples\n4. Datavec: https://github.com/deeplearning4j/deeplearning4j-examples/tree/master/data-pipeline-examples\n5. Python4j: https://deeplearning4j.konduit.ai/python4j/tutorials/quickstart\n\n\nFor users looking for being able to run models from other frameworks, see:\n1. Onnx: https://github.com/deeplearning4j/deeplearning4j-examples/tree/master/onnx-import-examples\n2. Tensorflow/Keras: https://github.com/deeplearning4j/deeplearning4j-examples/tree/master/tensorflow-keras-import-examples\n\n\n## Documentation, Guides and Tutorials\nYou can find the official documentation for Deeplearning4J and the other libraries of its ecosystem at http://deeplearning4j.konduit.ai/.\n\n## Want some examples?\nWe have separate repository with various examples available: https://github.com/eclipse/deeplearning4j-examples\n\n## Building from source\nIt is preferred to use the official pre-compiled releases (see above). But if you want to build from source, first take a look at the prerequisites for building from source here: https://deeplearning4j.konduit.ai/multi-project/how-to-guides/build-from-source. Various instructions for cpu and gpu builds can be found there. Please go to our [forums](https://community.konduit.ai/) for further help.\n\n\n## Running tests\n\nIn order to run tests, please see the platform-tests module.\nThis module only runs on jdk 11 (mostly due to spark and bugs with older scala versions + JDK 17)\n\nplatform-tests allows you to run dl4j for different backends.\nThere are a few properties you can specify on the command line:\n1. backend.artifactId: this defaults to nd4j-native and will run tests on cpu,you can specify other backends like nd4j-cuda-11.6\n2. dl4j.version: You can change the dl4j version that the tests run against. This defaults to 1.0.0-SNAPSHOT.\n\nMore parameters can be found here:\nhttps://github.com/deeplearning4j/deeplearning4j/blob/c1bf8717e4839c8930e9c43183bf7b94d0cf84dc/platform-tests/pom.xml#L47\n\n\n\n\n\n## Running project in Intellij IDEA:\n1. Ensure you follow https://stackoverflow.com/questions/45370178/exporting-a-package-from-system-module-is-not-allowed-with-release on jdk 9 or later\n2. Ignore all nd4j-shade submodules. Right click on each folder and click: Maven -> Ignore project\n\n\n## License\n\n[Apache License 2.0](LICENSE)\n\n\n## Commercial Support\nDeeplearning4J is actively developed by the team at [Konduit K.K.](https://konduit.ai). \n\n[If you need any commercial support feel free to reach out to us. at [support@konduit.ai](mailto:support@konduit.ai)  \n"
        },
        {
          "name": "bootstrap-libnd4j-from-url.sh",
          "type": "blob",
          "size": 3.9853515625,
          "content": "#!/bin/bash\n\nfile_name=\"\"\n\n\n\nfunction append_args {\n   if [ -n \"$1\"  ]; then\n       file_name=\"${file_name}-$1\"\n   fi\n}\n\nfunction create_config {\n    if [ \"$1\" == \"cuda\" ]; then\n         engine=\"ENGINE_CUDA\"\n    elif [ \"$1\" == \"aurora\" ]; then\n           engine=\"ENGINE_AURORA\"\n    else\n            engine=\"ENGINE_CPU\"\n\n    fi\n\n    config=\"${GITHUB_WORKSPACE}/libnd4j/blasbuild/$1/include/config.h\"\n    config_copy=\"${GITHUB_WORKSPACE}/libnd4j/include/config.h\"\n    if   test -f \"${config_copy}\"; then\n        rm -f \"${config_copy}\"\n    fi\n\n    if   test -f \"${config}\"; then\n      rm -f \"${config}\"\n    fi\n\n    print_config \"${config_copy}\" \"${engine}\"\n    print_config \"${config}\" \"${engine}\"\n\n\n}\n\nfunction print_config {\n  echo \"Generating config.h $1\"\n  echo \"#ifndef LIBND4J_CONFIG_H\" >> \"$1\"\n  echo \"#define LIBND4J_CONFIG_H\" >> \"$1\"\n  echo \"#define DEFAULT_ENGINE samediff::$2\" >> \"$1\"\n  echo \"#endif\" >> \"$1\"\n  echo \"Generated config.h at $1\"\n  cat \"$1\"\n}\n\nfunction copy_lib {\n   cp -rf  \"libnd4j/blasbuild/\"* \"${GITHUB_WORKSPACE}/libnd4j/blasbuild/\"\n   echo \"Copied libraries in libnd4j/blasbuild to ${GITHUB_WORKSPACE}/libnd4j/blasbuild\"\n   echo \"libraries in libnd4j/blasbuild were\"\n   ls \"libnd4j/blasbuild\"\n   echo \"libraries in target ${GITHUB_WORKSPACE}/libnd4j/blasbuild were\"\n   ls \"${GITHUB_WORKSPACE}/libnd4j/blasbuild\"\n   echo \"libraries in device directory ${GITHUB_WORKSPACE}/libnd4j/blasbuild/$1 were\"\n   ls \"${GITHUB_WORKSPACE}/libnd4j/blasbuild/$1\"\n   if [ \"$1\" == \"cpu\" ]; then\n        echo \"Copying libnd4j cpu to ${OPENBLAS_PATH}/lib\"\n        cp -rf  \"${GITHUB_WORKSPACE}/libnd4j/blasbuild/$1/blas/\"* \"${OPENBLAS_PATH}/lib\"\n        echo \"Contents of  ${OPENBLAS_PATH}/lib are\"\n        ls  \"${OPENBLAS_PATH}/lib\"\n   fi\n}\n\n\nfor var in \"$@\"\ndo\n  append_args \"${var}\"\ndone\n\n# Get rid of the first character\nfile_name_2=\"${file_name:1:${#file_name}}\"\n\n\nif ! [[ -z \"$LIBND4J_FILE_NAME\" ]]; then\n    echo \"Downloading file with url at $LIBND4J_FILE_NAME/${file_name_2}\"\n    curl  \"${LIBND4J_FILE_NAME}/${file_name_2}\" -o file_url.txt\n    # shellcheck disable=SC2006\n    export LIBND4J_URL=`cat  file_url.txt`\n    echo \"Setup LIBND4J_URL to $LIBND4J_URL\"\nfi\n\nif ! [[ -z \"$LIBND4J_URL\" ]]; then\n              mkdir libnd4j_home\n              cd libnd4j_home\n              # Set a suffix for the downloaded libnd4j directory\n              if [ -z \"${LIBND4J_HOME_SUFFIX}\" ]; then export LIBND4J_HOME_SUFFIX=\"cpu\"; fi\n              wget \"${LIBND4J_URL}\" -O libnd4j.zip\n              unzip libnd4j.zip\n              echo \"Files in directory $(pwd) are \"\n              ls\n              echo \"Copying files to libnd4j directory\"\n              # Note: for builds, the whole source directory is uploaded, but a valid libnd4j home is actually only the compiled output\n              cp -rf libnd4j/blasbuild/ \"../libnd4j\"\n              echo \"Files in ${GITHUB_WORKSPACE} are\"\n              ls \"$GITHUB_WORKSPACE\"\n              echo \"Files in libnd4j directory are ${GITHUB_WORKSPACE}/libnd4j\"\n              ls \"${GITHUB_WORKSPACE}/libnd4j\"\n              cd ..\n              # generated files may not exist, use in javacpp compilation\n              mkdir -p ${GITHUB_WORKSPACE}/libnd4j/include/generated\n              touch ${GITHUB_WORKSPACE}/libnd4j/include/generated/include_ops.h\n              # Add flatbuffers include files to libnd4j directory\n              git clone https://github.com/KonduitAI/flatbuffers.git\n              mv flatbuffers flatbuffers-src\n              cp -rf flatbuffers-src/include ${GITHUB_WORKSPACE}/libnd4j/\n              echo \"Copied flatbuffers to ${GITHUB_WORKSPACE}/libnd4j/include\"\n              if [ \"$#\" -gt 1 ]; then\n                 if [ \"$2\" == \"cuda\" ]; then\n                        create_config \"cuda\"\n                        copy_lib \"cuda\"\n                    elif [ \"$2\" == \"aurora\" ]; then\n                        create_config \"aurora\"\n                        copy_lib \"aurora\"\n                    else\n                       create_config \"cpu\"\n                       copy_lib \"cpu\"\n\n                fi\n              fi\nfi"
        },
        {
          "name": "build-scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "change-cuda-versions.sh",
          "type": "blob",
          "size": 2.9716796875,
          "content": "#!/usr/bin/env bash\n\n#\n# /* ******************************************************************************\n#  *\n#  *\n#  * This program and the accompanying materials are made available under the\n#  * terms of the Apache License, Version 2.0 which is available at\n#  * https://www.apache.org/licenses/LICENSE-2.0.\n#  *\n#  *  See the NOTICE file distributed with this work for additional\n#  *  information regarding copyright ownership.\n#  * Unless required by applicable law or agreed to in writing, software\n#  * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n#  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n#  * License for the specific language governing permissions and limitations\n#  * under the License.\n#  *\n#  * SPDX-License-Identifier: Apache-2.0\n#  ******************************************************************************/\n#\n\n\n\n\n\nset -e\n\nVALID_VERSIONS=( 9.2 10.0 10.1 10.2 11.0 11.1 11.2 11.4 11.6 11.8 12.1 12.3)\n\nusage() {\n  echo \"Usage: $(basename $0) [-h|--help] <cuda version to be used>\nwhere :\n  -h| --help Display this help text\n  valid cuda version values : ${VALID_VERSIONS[*]}\n\" 1>&2\n  exit 1\n}\n\nif [[ ($# -ne 1) || ( $1 == \"--help\") ||  $1 == \"-h\" ]]; then\n  usage\nfi\n\nVERSION=$1\n\ncheck_cuda_version() {\n  for i in ${VALID_VERSIONS[*]}; do [ $i = \"$1\" ] && return 0; done\n  echo \"Invalid CUDA version: $1. Valid versions: ${VALID_VERSIONS[*]}\" 1>&2\n  exit 1\n}\n\n\ncheck_cuda_version \"$VERSION\"\n\ncase $VERSION in\n 12.3)\n    VERSION2=\"8.9\"\n    VERSION3=\"1.5.10\"\n    ;;\n 12.1)\n    VERSION2=\"8.9\"\n    VERSION3=\"1.5.9\"\n    ;;\n 11.8)\n    VERSION2=\"8.6\"\n    VERSION3=\"1.5.8\"\n    ;;\n 11.6)\n    VERSION2=\"8.3\"\n    VERSION3=\"1.5.7\"\n    ;;\n  11.4)\n    VERSION2=\"8.2\"\n    VERSION3=\"1.5.6\"\n    ;;\n  11.2)\n    VERSION2=\"8.1\"\n    VERSION3=\"1.5.5\"\n    ;;\n  11.1)\n    VERSION2=\"8.0\"\n    VERSION3=\"1.5.5\"\n    ;;\n  11.0)\n    VERSION2=\"8.0\"\n    VERSION3=\"1.5.4\"\n    ;;\n  10.2)\n    VERSION2=\"8.2\"\n    VERSION3=\"1.5.6\"\n    ;;\n  10.1)\n    VERSION2=\"7.6\"\n    VERSION3=\"1.5.2\"\n    ;;\n  10.0)\n    VERSION2=\"7.4\"\n    VERSION3=\"1.5\"\n    ;;\n  9.2)\n    VERSION2=\"7.2\"\n    VERSION3=\"1.5\"\n    ;;\nesac\n\nsed_i() {\n  if test -f \"$2\" && test -f \"$1\"; then\n     sed -i \"\" -e \"$1\" \"$2\" > \"$2.tmp\" && mv \"$2.tmp\" \"$2\"\n  fi\n}\n\nexport -f sed_i\n\necho \"Updating CUDA versions in pom.xml files to CUDA $1\";\n\nSOURCE=\"${BASH_SOURCE[0]}\"\nwhile [ -h \"$SOURCE\" ]; do # resolve $SOURCE until the file is no longer a symlink\n  DIR=\"$( cd -P \"$( dirname \"$SOURCE\" )\" >/dev/null 2>&1 && pwd )\"\n  SOURCE=\"$(readlink \"$SOURCE\")\"\n  [[ $SOURCE != /* ]] && SOURCE=\"$DIR/$SOURCE\" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located\ndone\nBASEDIR=\"$( cd -P \"$( dirname \"$SOURCE\" )\" >/dev/null 2>&1 && pwd )\"\n\ncd \"${BASEDIR}/\"contrib/version-updater\nmvn clean compile\nmvn exec:java -Dexec.args=\"--root-dir=${BASEDIR} --cuda-version=${VERSION} --cudnn-version=${VERSION2} --javacpp-version=${VERSION3} --update-type=cuda\"\n\necho \"Done updating CUDA versions.\";\n"
        },
        {
          "name": "codegen",
          "type": "tree",
          "content": null
        },
        {
          "name": "contrib",
          "type": "tree",
          "content": null
        },
        {
          "name": "datavec",
          "type": "tree",
          "content": null
        },
        {
          "name": "deeplearning4j",
          "type": "tree",
          "content": null
        },
        {
          "name": "eclipse_deeplearning4j.png",
          "type": "blob",
          "size": 7.6337890625,
          "content": null
        },
        {
          "name": "libnd4j",
          "type": "tree",
          "content": null
        },
        {
          "name": "nd4j",
          "type": "tree",
          "content": null
        },
        {
          "name": "omnihub",
          "type": "tree",
          "content": null
        },
        {
          "name": "platform-tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "pom.xml",
          "type": "blob",
          "size": 59.75,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n<!--\n  ~ /* ******************************************************************************\n  ~  *\n  ~  *\n  ~  * This program and the accompanying materials are made available under the\n  ~  * terms of the Apache License, Version 2.0 which is available at\n  ~  * https://www.apache.org/licenses/LICENSE-2.0.\n  ~  *\n  ~  *  See the NOTICE file distributed with this work for additional\n  ~  *  information regarding copyright ownership.\n  ~  * Unless required by applicable law or agreed to in writing, software\n  ~  * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n  ~  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n  ~  * License for the specific language governing permissions and limitations\n  ~  * under the License.\n  ~  *\n  ~  * SPDX-License-Identifier: Apache-2.0\n  ~  ******************************************************************************/\n  -->\n\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n\n    <modelVersion>4.0.0</modelVersion>\n\n    <groupId>org.deeplearning4j</groupId>\n    <artifactId>deeplearning4j</artifactId>\n    <version>1.0.0-SNAPSHOT</version>\n    <packaging>pom</packaging>\n\n    <name>deeplearning4j</name>\n    <description>Deeplearning4j Monorepo</description>\n    <url>http://deeplearning4j.konduit.ai/</url>\n\n\n\n    <licenses>\n        <license>\n            <name>Apache License, Version 2.0</name>\n            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>\n            <distribution>repo</distribution>\n        </license>\n    </licenses>\n\n    <developers>\n        <developer>\n            <organization>Eclipse Foundation</organization>\n            <url>https://github.com/deeplearning4j/deeplearning4j</url>\n            <organizationUrl>https://eclipse.org/</organizationUrl>\n        </developer>\n    </developers>\n\n    <modules>\n        <module>nd4j</module>\n        <module>datavec</module>\n        <module>deeplearning4j</module>\n        <module>python4j</module>\n        <module>omnihub</module>\n        <module>resources</module>\n        <module>codegen</module>\n    </modules>\n\n    <scm>\n        <connection>scm:git://github.com:deeplearning4j/deeplearning4j.git</connection>\n        <developerConnection>scm:git:git@github.com:deeplearning4j/deeplearning4j.git\n        </developerConnection>\n        <url>git@github.com:deeplearning4j/deeplearning4j.git</url>\n        <tag>HEAD</tag>\n    </scm>\n\n    <repositories>\n        <!-- Mainly for dokka/kotlinx. Not used outside of releases for kotlin related modules-->\n        <repository>\n            <id>jetbrains-kotlinx</id>\n            <url>https://maven.pkg.jetbrains.space/public/p/kotlinx-html/maven</url>\n            <name>Kotlinx repo</name>\n            <snapshots>\n                <enabled>false</enabled>\n            </snapshots>\n            <releases>\n                <enabled>true</enabled>\n            </releases>\n        </repository>\n\n\n        <repository>\n            <id>ossrh</id>\n            <name>Sonatype Nexus Snapshots</name>\n            <url>https://s01.oss.sonatype.org/content/repositories/snapshots</url>\n            <releases>\n                <enabled>false</enabled>\n            </releases>\n            <snapshots>\n                <enabled>true</enabled>\n                <updatePolicy>daily</updatePolicy>  <!-- Optional, update daily -->\n            </snapshots>\n        </repository>\n    </repositories>\n\n    <pluginRepositories>\n        <pluginRepository>\n            <id>ossrh</id>\n            <name>Sonatype Nexus Snapshots</name>\n            <url>https://s01.oss.sonatype.org/content/repositories/snapshots</url>\n            <releases>\n                <enabled>false</enabled>\n            </releases>\n            <snapshots>\n                <enabled>true</enabled>\n                <updatePolicy>daily</updatePolicy>  <!-- Optional, update daily -->\n            </snapshots>\n        </pluginRepository>\n    </pluginRepositories>\n\n\n\n    <properties>\n        <maven.compiler.source>11</maven.compiler.source>\n        <maven.compiler.target>11</maven.compiler.target>\n        <encoding>UTF-8</encoding>\n        <project.build.sourceEncoding>${encoding}</project.build.sourceEncoding>\n        <project.reporting.outputEncoding>${encoding}</project.reporting.outputEncoding>\n        <project.resources.sourceEncoding>${encoding}</project.resources.sourceEncoding>\n        <archetype.encoding>${encoding}</archetype.encoding>\n        <deeplearning4j.version>1.0.0-SNAPSHOT</deeplearning4j.version>\n        <dl4j.version>1.0.0-SNAPSHOT</dl4j.version>\n        <nd4j.version>1.0.0-SNAPSHOT</nd4j.version>\n        <datavec.version>1.0.0-SNAPSHOT</datavec.version>\n        <dl4j.release.server>ossrh</dl4j.release.server>\n        <aspectj.version>1.9.7</aspectj.version>\n        <dl4j-test-resources.version>1.0.0-SNAPSHOT</dl4j-test-resources.version>\n        <dl4j-test-resources.classifier></dl4j-test-resources.classifier>\n        <rxjava.version>2.2.21</rxjava.version>\n        <arrow.version>6.0.1</arrow.version>\n        <jets3t.version>0.7.1</jets3t.version>\n        <metrics.version>3.2.6</metrics.version>\n        <netty.version>4.1.74.Final</netty.version>\n        <objenesis.version>2.6</objenesis.version>\n        <paranamer.version>2.6</paranamer.version>\n        <ws.rs.version>2.0</ws.rs.version>\n        <snakeyaml.version>1.26</snakeyaml.version>\n        <!-- FIXME: Might need be synced with all modules that uses spring-core plugin (nd4j-cuda-11.0, nd4j-tests, nd4j-common-tests) -->\n        <spring.version>5.2.24.RELEASE</spring.version>\n        <oshi.version>3.4.2</oshi.version>\n        <typesafe.config.version>1.3.0</typesafe.config.version>\n        <jcommander.version>1.27</jcommander.version>\n        <jodatime.version>2.2</jodatime.version>\n        <protonpack.version>1.15</protonpack.version>\n        <poi.version>5.2.0</poi.version>\n        <jodah.typetools.version>0.5.0</jodah.typetools.version>\n        <freemarker.version>2.3.23</freemarker.version>\n        <geoip2.version>2.8.1</geoip2.version>\n        <stream.analytics.version>2.9.8</stream.analytics.version>\n        <opencsv.version>5.9</opencsv.version>\n        <tdigest.version>3.2</tdigest.version>\n        <jtransforms.version>3.1</jtransforms.version>\n        <fastutil.version>6.5.7</fastutil.version>\n        <unirest.version>1.4.9</unirest.version>\n        <reflections.version>0.9.10</reflections.version>\n        <breeze.version>1.0</breeze.version>\n        <byteunits.version>0.9.1</byteunits.version>\n\n        <!-- To skip header file parsing phase: -Djavacpp.parser.skip=true  -->\n        <javacpp.parser.skip>false</javacpp.parser.skip>\n        <!-- To skip native compilation phase: -Djavacpp.compiler.skip=true -->\n        <javacpp.compiler.skip>false</javacpp.compiler.skip>\n        <javacpp.platform.root/>      <!-- -Djavacpp.platform.root=/path/to/android-ndk/ -->\n        <javacpp.platform.compiler/>  <!-- -Djavacpp.platform.compiler=/path/to/arm-linux-androideabi-g++ -->\n        <javacpp.platform.sysroot/>   <!-- -Djavacpp.platform.sysroot=$(xcrun -sdk iphoneos -show-sdk-path) -->\n        <javacpp.platform.extension/> <!-- -Djavacpp.platform.extension=-avx512 -->\n        <!-- Must not be empty. Otherwise the command line will fail. Put all arguments here needed for customization. If overridden, ensure not empty.-->\n        <javacpp.compiler.options>-Wl,--no-undefined</javacpp.compiler.options>\n         <javacpp.platform.properties>${javacpp.platform}</javacpp.platform.properties>\n\n\n        <javacpp.version>1.5.10</javacpp.version>\n        <javacpp-presets.version>1.5.10</javacpp-presets.version>\n        <javacv.version>1.5.10</javacv.version>\n        <javacpp.platform.additionalIncludePaths />\n        <javacpp.platform.cppincludepath />\n        <javacpp.platform.library.path />\n        <!-- Used in nd4j-backend-impls for directory-maven-plugin to assist with finding native libs for tests -->\n        <nd4j.native.basedir />\n        <nd4j.cuda.basedir />\n\n\n        <moditect.generate.skip>true</moditect.generate.skip>\n        <moditect.add.skip>false</moditect.add.skip>\n        <moditect.version>1.0.0.RC2</moditect.version>\n\n        <python.version>3.12.1</python.version>\n        <cpython-platform.version>${python.version}-${javacpp-presets.version}</cpython-platform.version>\n        <numpy.version>1.26.3</numpy.version>\n        <numpy.javacpp.version>${numpy.version}-${javacpp-presets.version}</numpy.javacpp.version>\n        <onnx.version>1.15.0</onnx.version>\n        <onnx.javacpp.version>${onnx.version}-${javacpp-presets.version}</onnx.javacpp.version>\n        <openblas.version>0.3.26</openblas.version>\n        <mkl.version>2024.0</mkl.version>\n        <opencv.version>4.9.0</opencv.version>\n        <hdf5.version>1.14.3</hdf5.version>\n        <tensorflow.version>1.15.5</tensorflow.version>\n        <!--- Hardcoded since TF1 isn't updating anymore-->\n        <tensorflow.javacpp.version>${tensorflow.version}-1.5.8</tensorflow.javacpp.version>\n\n        <archunit.version>0.17</archunit.version>\n        <commons-compress.version>1.21</commons-compress.version>\n        <commonsmath.version>3.5</commonsmath.version>\n        <commonslang.version>3.11</commonslang.version>\n        <commonsio.version>2.7</commonsio.version>\n        <commons-codec.version>1.10</commons-codec.version>\n        <commons.math.version>${commonsmath.version}</commons.math.version>\n        <commons.lang.version>${commonslang.version}</commons.lang.version>\n        <commons.io.version>${commonsio.version}</commons.io.version>\n        <commons-math3.version>${commonsmath.version}</commons-math3.version>\n        <commons-lang.version>2.6</commons-lang.version>\n        <commons-lang3.version>${commonslang.version}</commons-lang3.version>\n        <commons-logging.version>1.2</commons-logging.version>\n        <commons-net.version>3.1</commons-net.version>\n        <commons-io.version>${commonsio.version}</commons-io.version>\n        <commons-collections.version>3.2.2</commons-collections.version>\n        <commons-collections4.version>4.1</commons-collections4.version>\n        <spark.version>3.3.0</spark.version>\n        <spark.major.version>2</spark.major.version>\n        <args4j.version>2.0.29</args4j.version>\n        <slf4j.version>1.7.21</slf4j.version>\n        <junit.version>5.8.0-M1</junit.version>\n        <junit.platform.launcher.version>1.8.0-M1</junit.platform.launcher.version>\n        <archunit.version>0.14.1</archunit.version>\n        <logback.version>1.5.12</logback.version>\n        <jackson.version>2.16.0</jackson.version>\n        <jackson.databind.version>2.16.0</jackson.databind.version>\n        <shaded.snakeyaml.version>1.33</shaded.snakeyaml.version>\n        <geo.jackson.version>2.8.7</geo.jackson.version>\n        <lombok.version>1.18.30</lombok.version>\n        <json.versiounitn>20131018</json.versiounitn>\n        <google.protobuf.version>3.21.7</google.protobuf.version>\n        <google.protobuf.solr.version>2.6.1</google.protobuf.solr.version>\n        <failIfNoTests>false</failIfNoTests>\n        <!-- Hadoop version used by Spark 1.6.3 and 2.2.1 (and likely others) -->\n        <hadoop.version>2.2.0</hadoop.version>\n        <camel.version>2.16.3</camel.version>\n        <zookeeper.version>3.4.6</zookeeper.version>\n        <agrona.version>1.16.0</agrona.version>\n        <mapdb.version>3.0.5</mapdb.version>\n        <sqlite.version>3.15.1</sqlite.version>\n        <javax.ws.rs.version>2.0</javax.ws.rs.version>\n        <guava.jre.version>30.1.1-jre</guava.jre.version>\n        <guava.android.version>28.0-android</guava.android.version>\n        <gson.version>2.8.0</gson.version>\n        <threadly.version>4.10.0</threadly.version>\n        <vertx.version>3.9.0</vertx.version>\n\n        <flatbuffers.version>1.12.0</flatbuffers.version>\n        <grpc.version>1.14.0</grpc.version>\n        <javax.annotation-api.version>1.2</javax.annotation-api.version>\n        <javax.activation.version>1.1.1</javax.activation.version>\n        <jaxb.version>2.3.0</jaxb.version>\n\n        <maven-gpg-plugin.version>1.6</maven-gpg-plugin.version>\n        <maven-source-plugin.version>3.2.0</maven-source-plugin.version>\n        <maven-javadoc-plugin.version>3.2.0</maven-javadoc-plugin.version>\n        <maven-deploy-plugin.version>2.8.2</maven-deploy-plugin.version>\n        <maven-release-plugin.version>2.5.3</maven-release-plugin.version>\n        <maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>\n        <maven-scala-plugin.version>4.5.4</maven-scala-plugin.version>\n        <maven-resources-plugin.version>3.0.1</maven-resources-plugin.version>\n        <sbt-compiler-maven-plugin.version>1.0.0</sbt-compiler-maven-plugin.version>\n        <maven-git-commit-plugin.version>2.2.2</maven-git-commit-plugin.version>\n        <maven-git-commit-id-plugin.version>${maven-git-commit-plugin.version}\n        </maven-git-commit-id-plugin.version>\n        <maven-build-helper-plugin.version>3.0.0</maven-build-helper-plugin.version>\n        <maven-play2-plugin.version>1.0.0-beta5</maven-play2-plugin.version>\n        <maven-surefire-plugin.version>3.0.0-M5</maven-surefire-plugin.version>\n        <maven-surefire.version>${maven-surefire-plugin.version}</maven-surefire.version>\n        <maven-enforcer-plugin.version>1.4.1</maven-enforcer-plugin.version>\n        <maven-formatter-plugin.version>2.12.1</maven-formatter-plugin.version>\n        <maven-lifecycle-mapping-plugin.version>1.0.0</maven-lifecycle-mapping-plugin.version>\n        <maven-lifecycle-mapping.version>${maven-lifecycle-mapping-plugin.version}\n        </maven-lifecycle-mapping.version>\n        <maven-shade-plugin.version>3.5.1</maven-shade-plugin.version>\n        <maven-jar-plugin.version>3.0.2</maven-jar-plugin.version>\n        <maven-dependency-plugin.version>3.0.0</maven-dependency-plugin.version>\n        <maven-invoker-plugin.version>2.2</maven-invoker-plugin.version>\n        <maven-antrun-plugin.version>1.8</maven-antrun-plugin.version>\n        <maven-replacer-plugin.version>1.5.3</maven-replacer-plugin.version>\n        <protoc-jar-maven-plugin.version>3.11.4</protoc-jar-maven-plugin.version>\n        <mockito.version>3.8.0</mockito.version>\n        <mockito.jupter.version>3.8.0</mockito.jupter.version>\n        <exec-maven-plugin.version>1.6.0</exec-maven-plugin.version>\n        <jetspeed-mvn-maven-plugin.version>2.3.1</jetspeed-mvn-maven-plugin.version>\n\n\n        <!-- Scala 2.12.x -->\n        <scala212.version>2.12.14</scala212.version>\n        <scala212.binary.version>2.12</scala212.binary.version>\n\n        <lz4.version>1.7.0</lz4.version>\n\n        <libnd4j.tests>--tests</libnd4j.tests>\n        <libnd4j.test.skip>false</libnd4j.test.skip>\n        <jumpy.test.skip>false</jumpy.test.skip>\n        <pydatavec.test.skip>false</pydatavec.test.skip>\n        <pydl4j.test.skip>false</pydl4j.test.skip>\n        <skipBackendChoice>false</skipBackendChoice>\n        <!-- Test resource profile must be enabled unless using -DskipTests etc -->\n        <skipTestResourceEnforcement>false</skipTestResourceEnforcement>\n        <findbugs-annotations.version>1.3.9-1</findbugs-annotations.version>\n        <netty.version>4.1.74.Final</netty.version>\n        <log4j2.version>2.17.2</log4j2.version>\n        <byteunits.version>0.9.1</byteunits.version>\n        <neoitertools.version>1.0.0</neoitertools.version>\n        <rxjava.version>2.2.0</rxjava.version>\n        <kotlin.version>1.7.20</kotlin.version>\n        <javapoet.version>1.13.0</javapoet.version>\n        <kotlin-logging.version>2.1.21</kotlin-logging.version>\n        <test.heap.size>8g</test.heap.size>\n        <test.offheap.size>8g</test.offheap.size>\n        <module.name></module.name>\n        <jdk9.exports>--add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED --add-exports java.base/jdk.internal.misc=ALL-UNNAMED --add-exports java.base/java.nio=ALL-UNNAMED --add-opens java.base/java.nio=ALL-UNNAMED</jdk9.exports>\n    </properties>\n\n\n    <dependencyManagement>\n        <dependencies>\n            <dependency>\n                <groupId>org.lz4</groupId>\n                <artifactId>lz4-java</artifactId>\n                <version>${lz4.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>org.lz4</groupId>\n                <artifactId>lz4-pure-java</artifactId>\n                <version>${lz4.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>net.jpountz.lz4</groupId>\n                <artifactId>lz4</artifactId>\n                <version>1.2.0</version>\n            </dependency>\n\n            <dependency>\n                <groupId>org.lz4</groupId>\n                <artifactId>lz4</artifactId>\n                <version>1.8.0</version>\n            </dependency>\n\n            <dependency>\n                <groupId>io.netty</groupId>\n                <artifactId>netty-all</artifactId>\n                <version>${netty.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>io.netty</groupId>\n                <artifactId>netty-buffer</artifactId>\n                <version>${netty.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.apache.logging.log4j</groupId>\n                <artifactId>log4j-slf4j-impl</artifactId>\n                <version>${log4j2.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.apache.logging.log4j</groupId>\n                <artifactId>log4j-api</artifactId>\n                <version>${log4j2.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>org.apache.logging.log4j</groupId>\n                <artifactId>log4j-core</artifactId>\n                <version>${log4j2.version}</version>\n            </dependency>\n            <!-- Parameterized Tests -->\n            <dependency>\n                <groupId>org.junit.jupiter</groupId>\n                <artifactId>junit-jupiter-params</artifactId>\n                <version>${junit.version}</version>\n                <scope>test</scope>\n            </dependency>\n            <dependency><groupId>org.junit.platform</groupId>\n                <artifactId>junit-platform-launcher</artifactId>\n                <version>${junit.platform.launcher.version}</version>\n                <scope>test</scope>\n            </dependency>\n            <dependency>\n                <groupId>org.junit.jupiter</groupId>\n                <artifactId>junit-jupiter-api</artifactId>\n                <version>${junit.version}</version>\n                <scope>test</scope>\n            </dependency>\n            <dependency>\n                <groupId>org.junit.vintage</groupId>\n                <artifactId>junit-vintage-engine</artifactId>\n                <version>${junit.version}</version>\n                <scope>test</scope>\n            </dependency>\n            <dependency>\n                <groupId>org.junit.jupiter</groupId>\n                <artifactId>junit-jupiter-engine</artifactId>\n                <version>${junit.version}</version>\n                <scope>test</scope>\n            </dependency>\n            <dependency>\n                <groupId>org.junit.jupiter</groupId>\n                <artifactId>junit-jupiter</artifactId>\n                <version>${junit.version}</version>\n                <scope>test</scope>\n            </dependency>\n            <dependency>\n                <groupId>org.jetbrains.kotlin</groupId>\n                <artifactId>kotlin-stdlib</artifactId>\n                <version>${kotlin.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.jetbrains.kotlin</groupId>\n                <artifactId>kotlin-reflect</artifactId>\n                <version>${kotlin.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.jetbrains.kotlin</groupId>\n                <artifactId>kotlin-stdlib-common</artifactId>\n                <version>${kotlin.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.jetbrains.kotlin</groupId>\n                <artifactId>kotlin-stdlib-jdk8</artifactId>\n                <version>${kotlin.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.jetbrains.kotlin</groupId>\n                <artifactId>kotlin-test</artifactId>\n                <version>${kotlin.version}</version>\n                <scope>test</scope>\n            </dependency>\n            <dependency>\n                <groupId>io.netty</groupId>\n                <artifactId>netty-all</artifactId>\n                <version>${netty.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>io.netty</groupId>\n                <artifactId>netty</artifactId>\n                <version>3.9.9.Final</version>\n            </dependency>\n            <dependency>\n                <groupId>io.netty</groupId>\n                <artifactId>netty-buffer</artifactId>\n                <version>${netty.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>io.netty</groupId>\n                <artifactId>netty-common</artifactId>\n                <version>${netty.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>io.netty</groupId>\n                <artifactId>netty-handler</artifactId>\n                <version>${netty.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>io.netty</groupId>\n                <artifactId>netty-codec-http</artifactId>\n                <version>${netty.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>io.netty</groupId>\n                <artifactId>netty-codec</artifactId>\n                <version>${netty.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>io.netty</groupId>\n                <artifactId>netty-transport-native-epoll</artifactId>\n                <version>${netty.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>io.netty</groupId>\n                <artifactId>netty-transport</artifactId>\n                <version>${netty.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>io.netty</groupId>\n                <artifactId>netty-resolver</artifactId>\n                <version>${netty.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>io.netty</groupId>\n                <artifactId>netty-transport-native-unix-common</artifactId>\n                <version>${netty.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>io.netty</groupId>\n                <artifactId>netty-codec-http2</artifactId>\n                <version>${netty.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>io.netty</groupId>\n                <artifactId>netty-handler-proxy</artifactId>\n                <version>${netty.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>io.netty</groupId>\n                <artifactId>netty-codec-socks</artifactId>\n                <version>${netty.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>io.netty</groupId>\n                <artifactId>netty-resolver-dns</artifactId>\n                <version>${netty.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>io.netty</groupId>\n                <artifactId>netty-codec-dns</artifactId>\n                <version>${netty.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.walkmod</groupId>\n                <artifactId>junit4git</artifactId>\n                <version>${junit4git.version}</version>\n                <scope>test</scope>\n            </dependency>\n            <dependency>\n                <groupId>org.projectlombok</groupId>\n                <artifactId>lombok</artifactId>\n                <version>${lombok.version}</version>\n                <scope>provided</scope>\n            </dependency>\n        </dependencies>\n    </dependencyManagement>\n\n    <dependencies>\n\n        <dependency>\n            <groupId>org.projectlombok</groupId>\n            <artifactId>lombok</artifactId>\n        </dependency>\n    </dependencies>\n\n    <build>\n        <pluginManagement>\n            <plugins>\n\n                <plugin>\n                    <groupId>org.moditect</groupId>\n                    <artifactId>moditect-maven-plugin</artifactId>\n                    <version>${moditect.version}</version>\n                    <configuration>\n                        <jvmVersion>9</jvmVersion>\n                        <overwriteExistingFiles>true</overwriteExistingFiles>\n                        <outputDirectory>${project.build.directory}</outputDirectory>\n                    </configuration>\n                    <executions>\n                        <execution>\n                            <id>generate-module-info</id>\n                            <phase>generate-sources</phase>\n                            <goals>\n                                <goal>generate-module-info</goal>\n                            </goals>\n                            <configuration>\n                                <modules>\n                                    <module>\n                                        <artifact>\n                                            <groupId>${project.groupId}</groupId>\n                                            <artifactId>${project.artifactId}</artifactId>\n                                            <version>${project.version}</version>\n                                        </artifact>\n\n                                        <moduleInfo>\n                                            <name>${module.name}</name>\n                                            <exports>\n                                                *;\n                                            </exports>\n                                            <open>true</open>\n                                        </moduleInfo>\n\n                                    </module>\n                                </modules>\n                                <jdepsExtraArgs>\n                                    <arg>--ignore-missing-deps</arg>\n                                    <arg>--multi-release</arg>\n                                    <arg>9</arg>\n                                </jdepsExtraArgs>\n                                <skip>${moditect.generate.skip}</skip>\n                            </configuration>\n                        </execution>\n\n                        <execution>\n                            <id>add-module-infos</id>\n                            <phase>package</phase>\n                            <goals>\n                                <goal>add-module-info</goal>\n                            </goals>\n                            <configuration>\n                                <modules>\n                                    <module>\n                                        <file>${project.build.directory}/${project.artifactId}-${project.version}.jar</file>\n                                        <moduleInfoFile>${project.basedir}/src/main/java9/module-info.java</moduleInfoFile>\n                                    </module>\n                                </modules>\n                                <skip>${moditect.add.skip}</skip>\n                            </configuration>\n                        </execution>\n                    </executions>\n                </plugin>\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-antrun-plugin</artifactId>\n                    <version>${maven-antrun-plugin.version}</version>\n                    <executions>\n                        <execution>\n                            <phase>validate</phase>\n                            <goals>\n                                <goal>run</goal>\n                            </goals>\n                            <configuration>\n                                <tasks>\n                                    <echoproperties />\n                                </tasks>\n                            </configuration>\n                        </execution>\n                    </executions>\n                </plugin>\n\n\n                <plugin>\n                    <artifactId>maven-surefire-plugin</artifactId>\n                    <version>${maven-surefire-plugin.version}</version>\n                    <inherited>true</inherited>\n                    <dependencies>\n                        <dependency>\n                            <groupId>org.apache.maven.surefire</groupId>\n                            <artifactId>surefire-junit-platform</artifactId>\n                            <version>${maven-surefire-plugin.version}</version>\n                        </dependency>\n                    </dependencies>\n                    <configuration>\n                        <trimStackTrace>false</trimStackTrace>\n                        <forkNode implementation=\"org.apache.maven.plugin.surefire.extensions.SurefireForkNodeFactory\"/>\n                        <forkCount>1</forkCount>\n                        <reuseForks>false</reuseForks>\n                        <environmentVariables>\n                            <OMP_NUM_THREADS>1</OMP_NUM_THREADS>\n                        </environmentVariables>\n                        <classpathDependencyExcludes>\n                            <classpathDependencyExclude>org.junit:junit</classpathDependencyExclude>\n                            <classpathDependencyExclude>com.google.android:android\n                            </classpathDependencyExclude>\n                        </classpathDependencyExcludes>\n                        <useSystemClassLoader>true</useSystemClassLoader>\n                        <useManifestOnlyJar>false</useManifestOnlyJar>\n                        <argLine>--add-exports java.base/jdk.internal.misc=ALL-UNNAMED --add-exports java.base/java.nio=ALL-UNNAMED --add-opens java.base/java.nio=ALL-UNNAMED -Xmx${test.heap.size} -Dorg.bytedeco.javacpp.maxphysicalbytes=${test.offheap.size} -Dorg.bytedeco.javacpp.maxbytes=${test.offheap.size} </argLine>\n                        <forkedProcessTimeoutInSeconds>240</forkedProcessTimeoutInSeconds>\n                        <forkedProcessExitTimeoutInSeconds>240</forkedProcessExitTimeoutInSeconds>\n                        <parallelTestsTimeoutInSeconds>240</parallelTestsTimeoutInSeconds>\n                        <parallelTestsTimeoutForcedInSeconds>240</parallelTestsTimeoutForcedInSeconds>\n                        <forkCount>1</forkCount>\n                        <threadCount>1</threadCount>\n                        <perCoreThreadCount>false</perCoreThreadCount>\n                    </configuration>\n                </plugin>\n                <plugin>\n                    <groupId>org.jetbrains.kotlin</groupId>\n                    <artifactId>kotlin-maven-plugin</artifactId>\n                    <version>${kotlin.version}</version>\n                    <configuration>\n                        <args>\n                            <arg>-Xjsr305=strict</arg>\n                        </args>\n                        <compilerPlugins>\n                            <plugin>spring</plugin>\n                            <plugin>jpa</plugin>\n                        </compilerPlugins>\n                    </configuration>\n                    <dependencies>\n                        <dependency>\n                            <groupId>org.jetbrains.kotlin</groupId>\n                            <artifactId>kotlin-maven-allopen</artifactId>\n                            <version>${kotlin.version}</version>\n                        </dependency>\n                        <dependency>\n                            <groupId>org.jetbrains.kotlin</groupId>\n                            <artifactId>kotlin-maven-noarg</artifactId>\n                            <version>${kotlin.version}</version>\n                        </dependency>\n                    </dependencies>\n                    <executions>\n                        <execution>\n                            <id>compile</id>\n                            <goals> <goal>compile</goal> </goals>\n                            <configuration>\n                                <sourceDirs>\n                                    <sourceDir>${project.basedir}/src/main/stubs</sourceDir>\n                                    <sourceDir>${project.basedir}/src/main/kotlin</sourceDir>\n                                    <sourceDir>${project.basedir}/src/main/java</sourceDir>\n                                    <sourceDir>${project.basedir}/src/main/ops</sourceDir>\n                                </sourceDirs>\n                            </configuration>\n                        </execution>\n                        <execution>\n                            <id>test-compile</id>\n                            <goals> <goal>test-compile</goal> </goals>\n                            <configuration>\n                                <sourceDirs>\n                                    <sourceDir>${project.basedir}/src/test/stubs</sourceDir>\n                                    <sourceDir>${project.basedir}/src/test/kotlin</sourceDir>\n                                    <sourceDir>${project.basedir}/src/test/java</sourceDir>\n                                    <sourceDir>${project.basedir}/src/test/ops</sourceDir>\n                                </sourceDirs>\n                            </configuration>\n                        </execution>\n                    </executions>\n                </plugin>\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-compiler-plugin</artifactId>\n                    <version>${maven-compiler-plugin.version}</version>\n                    <configuration>\n                        <source>${maven.compiler.source}</source>\n                        <target>${maven.compiler.target}</target>\n                    <compilerArgs>\n                        <arg>--add-exports</arg>\n                        <arg>java.base/java.nio=ALL-UNNAMED</arg>\n                        <arg>--add-opens</arg>\n                        <arg>java.base/java.nio=ALL-UNNAMED</arg>\n                    </compilerArgs>\n                    </configuration>\n                </plugin>\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-enforcer-plugin</artifactId>\n                    <version>${maven-enforcer-plugin.version}</version>\n                    <executions>\n                        <execution>\n                            <id>enforce-maven</id>\n                            <goals>\n                                <goal>enforce</goal>\n                            </goals>\n                            <configuration>\n                                <rules>\n                                    <requireMavenVersion>\n                                        <version>3.3</version>\n                                        <message>Please install maven 3.3 or higher</message>\n                                    </requireMavenVersion>\n                                </rules>\n                            </configuration>\n                        </execution>\n                        <execution>\n                            <id>enforce-excluded-dependencies</id>\n                            <goals>\n                                <goal>enforce</goal>\n                            </goals>\n                            <configuration>\n                                <rules>\n                                    <bannedDependencies>\n                                        <excludes>\n                                            <exclude>org.projectlombok:*:*:*:compile</exclude>\n                                        </excludes>\n                                    </bannedDependencies>\n                                </rules>\n                            </configuration>\n                        </execution>\n                    </executions>\n                </plugin>\n                <!-- Configuration for git-commit-id plugin - used with ND4J version check functionality -->\n                <plugin>\n                    <groupId>pl.project13.maven</groupId>\n                    <artifactId>git-commit-id-plugin</artifactId>\n                    <version>${maven-git-commit-plugin.version}</version>\n                    <executions>\n                        <execution>\n                            <goals>\n                                <goal>revision</goal>\n                            </goals>\n                            <phase>generate-resources</phase>\n                        </execution>\n                    </executions>\n                    <configuration>\n                        <generateGitPropertiesFile>true</generateGitPropertiesFile>\n                        <failOnNoGitDirectory>false</failOnNoGitDirectory>\n                        <generateGitPropertiesFilename>\n                            ${project.basedir}/target/generated-sources/src/main/resources/org/eclipse/${project.groupId}-${project.artifactId}-git.properties\n                        </generateGitPropertiesFilename>\n                        <gitDescribe>\n                            <skip>true</skip>\n                        </gitDescribe>\n                    </configuration>\n                </plugin>\n                <!-- Add generated git.properties files resource directory, for output of git-commit-id plugin -->\n                <plugin>\n                    <groupId>org.codehaus.mojo</groupId>\n                    <artifactId>build-helper-maven-plugin</artifactId>\n                    <version>${maven-build-helper-plugin.version}</version>\n                    <executions>\n                        <execution>\n                            <id>add-resource</id>\n                            <phase>generate-resources</phase>\n                            <goals>\n                                <goal>add-resource</goal>\n                            </goals>\n                            <configuration>\n                                <resources>\n                                    <resource>\n                                        <directory>\n                                            ${project.basedir}/target/generated-sources/src/main/resources\n                                        </directory>\n                                    </resource>\n                                </resources>\n                            </configuration>\n                        </execution>\n                        <execution>\n                            <id>get-cpu-count</id>\n                            <goals>\n                                <goal>cpu-count</goal>\n                            </goals>\n                            <configuration>\n                                <cpuCount>cpu.core.count</cpuCount>\n                            </configuration>\n                        </execution>\n                    </executions>\n                </plugin>\n                <plugin>\n                    <groupId>org.eclipse.m2e</groupId>\n                    <artifactId>lifecycle-mapping</artifactId>\n                    <version>1.0.0</version>\n                    <configuration>\n                        <lifecycleMappingMetadata>\n                            <pluginExecutions>\n                                <pluginExecution>\n                                    <pluginExecutionFilter>\n                                        <groupId>com.lewisd</groupId>\n                                        <artifactId>lint-maven-plugin</artifactId>\n                                        <versionRange>[0.0.11,)</versionRange>\n                                        <goals>\n                                            <goal>check</goal>\n                                        </goals>\n                                    </pluginExecutionFilter>\n                                    <action>\n                                        <ignore/>\n                                    </action>\n                                </pluginExecution>\n                            </pluginExecutions>\n                        </lifecycleMappingMetadata>\n                    </configuration>\n                </plugin>\n                <plugin>\n                    <groupId>net.revelc.code.formatter</groupId>\n                    <artifactId>formatter-maven-plugin</artifactId>\n                    <version>${maven-formatter-plugin.version}</version>\n                    <configuration>\n                        <!--suppress UnresolvedMavenProperty -->\n                        <configFile>${session.executionRootDirectory}/../contrib/formatter.xml</configFile>\n                    </configuration>\n                </plugin>\n            </plugins>\n        </pluginManagement>\n\n        <plugins>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-source-plugin</artifactId>\n                <version>${maven-source-plugin.version}</version>\n                <executions>\n                    <execution>\n                        <id>attach-sources</id>\n                        <goals>\n                            <goal>jar-no-fork</goal>\n                        </goals>\n                    </execution>\n                </executions>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-enforcer-plugin</artifactId>\n                <version>1.4.1</version>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-deploy-plugin</artifactId>\n                <version>2.8.2</version>\n                <configuration>\n                    <skip>true</skip>\n                </configuration>\n            </plugin>\n            <plugin>\n                <groupId>org.sonatype.plugins</groupId>\n                <artifactId>nexus-staging-maven-plugin</artifactId>\n                <version>1.6.8</version>\n                <executions>\n                    <execution>\n                        <id>default-deploy</id>\n                        <phase>deploy</phase>\n                        <goals>\n                            <goal>deploy</goal>\n                        </goals>\n                    </execution>\n                </executions>\n                <extensions>true</extensions>\n                <configuration>\n                    <detail>true</detail>\n                    <serverId>${dl4j.release.server}</serverId>\n                    <nexusUrl>https://s01.oss.sonatype.org/</nexusUrl>\n                    <keepStagingRepositoryOnFailure>true</keepStagingRepositoryOnFailure>\n                    <skipStagingRepositoryClose>true</skipStagingRepositoryClose>\n                </configuration>\n            </plugin>\n            <plugin>\n                <groupId>org.jetbrains.kotlin</groupId>\n                <artifactId>kotlin-maven-plugin</artifactId>\n                <version>${kotlin.version}</version>\n                <executions>\n                    <execution>\n                        <id>compile</id>\n                        <phase>compile</phase>\n                        <goals>\n                            <goal>compile</goal>\n                        </goals>\n                    </execution>\n                    <execution>\n                        <id>test-compile</id>\n                        <phase>test-compile</phase>\n                        <goals>\n                            <goal>test-compile</goal>\n                        </goals>\n                    </execution>\n                </executions>\n                <configuration>\n                    <jvmTarget>11</jvmTarget>\n                </configuration>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-compiler-plugin</artifactId>\n                <configuration>\n                    <compilerArgs>\n                        <arg>--add-exports</arg>\n                        <arg>java.base/java.nio=ALL-UNNAMED</arg>\n                        <arg>--add-opens</arg>\n                        <arg>java.base/java.nio=ALL-UNNAMED</arg>\n                    </compilerArgs>\n                </configuration>\n                <executions>\n                    <execution>\n                        <id>default-compile</id>\n                        <phase>none</phase>\n                    </execution>\n                    <execution>\n                        <id>default-testCompile</id>\n                        <phase>none</phase>\n                    </execution>\n                    <execution>\n                        <id>compile</id>\n                        <phase>compile</phase>\n                        <goals>\n                            <goal>compile</goal>\n                        </goals>\n                    </execution>\n                    <execution>\n                        <id>testCompile</id>\n                        <phase>test-compile</phase>\n                        <goals>\n                            <goal>testCompile</goal>\n                        </goals>\n                    </execution>\n                </executions>\n            </plugin>\n        </plugins>\n    </build>\n\n    <profiles>\n        <profile>\n            <id>parallel-tests</id>\n            <properties>\n                <junit.jupiter.execution.parallel.enabled>true</junit.jupiter.execution.parallel.enabled>\n                <junit.jupiter.execution.parallel.mode.default>concurrent</junit.jupiter.execution.parallel.mode.default>\n            </properties>\n        </profile>\n\n        <profile>\n            <id>test-larger-heap-size</id>\n            <properties>\n                <test.heap.size>8g</test.heap.size>\n                <test.offheap.size>8g</test.offheap.size>\n            </properties>\n        </profile>\n\n\n        <profile>\n            <id>github</id>\n            <distributionManagement>\n                <repository>\n                    <id>github</id>\n                    <name>GitHub Packages</name>\n                    <url>https://maven.pkg.github.com/eclipse/deeplearning4j</url>\n                </repository>\n\n                <snapshotRepository>\n                    <id>github</id>\n                    <name>Github snapshots</name>\n                    <url>https://maven.pkg.github.com/eclipse/deeplearning4j</url>\n                </snapshotRepository>\n            </distributionManagement>\n        </profile>\n\n        <profile>\n            <id>ossrh</id>\n            <distributionManagement>\n                <repository>\n                    <id>ossrh</id>\n                    <name>Nexus Release Repository</name>\n                    <url>http://s01.oss.sonatype.org/service/local/staging/deploy/maven2/</url>\n                </repository>\n\n                <snapshotRepository>\n                    <id>ossrh</id>\n                    <name>Sonatype Nexus snapshot repository</name>\n                    <url>https://s01.oss.sonatype.org/content/repositories/snapshots</url>\n                </snapshotRepository>\n            </distributionManagement>\n        </profile>\n\n        <!-- This controls skipping the test backend choice enforcement below -->\n        <profile>\n            <id>skipTestCompileAndRun</id>\n            <activation>\n                <property>\n                    <name>maven.test.skip</name>\n                    <value>true</value>\n                </property>\n            </activation>\n            <properties>\n                <libnd4j.tests></libnd4j.tests>\n                <libnd4j.test.skip>true</libnd4j.test.skip>\n                <scala.test.skip>true</scala.test.skip>\n                <skipBackendChoice>true</skipBackendChoice>\n                <skipTestResourceEnforcement>true</skipTestResourceEnforcement>\n            </properties>\n        </profile>\n        <profile>\n            <id>skipTestRun</id>\n            <activation>\n                <property>\n                    <name>skipTests</name>\n                </property>\n            </activation>\n            <properties>\n                <libnd4j.tests></libnd4j.tests>\n                <libnd4j.test.skip>true</libnd4j.test.skip>\n                <scala.test.skip>true</scala.test.skip>\n                <skipBackendChoice>true</skipBackendChoice>\n                <skipTestResourceEnforcement>true</skipTestResourceEnforcement>\n            </properties>\n        </profile>\n        <!--\n        testresources profile must be running when executing tests. However, maven enforcer plugin seems to be unable\n         to enforce only when actually running tests - so we'll skip the enforcement (using profiles skipTestRun and skipTestCompileAndRun)\n         when -DskipTests or -Dmaven.test.skip=true is used\n         -->\n\n        <profile>\n            <id>qa</id>\n            <build>\n                <plugins>\n                    <plugin>\n                        <groupId>org.apache.maven.plugins</groupId>\n                        <artifactId>maven-dependency-plugin</artifactId>\n                        <version>3.1.2</version>\n                        <executions>\n                            <execution>\n                                <phase>install</phase>\n                                <goals>\n                                    <goal>copy-dependencies</goal>\n                                </goals>\n                                <configuration>\n                                    <outputDirectory>${project.build.directory}/lib\n                                    </outputDirectory>\n                                </configuration>\n                            </execution>\n                        </executions>\n                    </plugin>\n                </plugins>\n            </build>\n        </profile>\n        <profile>\n            <id>release</id>\n            <properties>\n                <maven.test.skip>true</maven.test.skip>\n                <gpg.passphrase>${env.MAVEN_GPG_PASSPHRASE}</gpg.passphrase>\n                <gpg.keyname>${env.SONATYPE_GPG_KEY}</gpg.keyname>\n            </properties>\n            <build>\n                <plugins>\n                    <plugin>\n                        <groupId>org.apache.maven.plugins</groupId>\n                        <artifactId>maven-javadoc-plugin</artifactId>\n                        <version>${maven-javadoc-plugin.version}</version>\n                        <configuration>\n                            <minmemory>256m</minmemory>\n                            <maxmemory>2048m</maxmemory>\n                            <doclint>all,-missing</doclint>\n                            <quiet>true</quiet>\n                        </configuration>\n                        <executions>\n                            <execution>\n                                <id>attach-javadocs</id>\n                                <goals>\n                                    <goal>jar</goal>\n                                </goals>\n                            </execution>\n                        </executions>\n                    </plugin>\n                    <plugin>\n                        <groupId>org.apache.maven.plugins</groupId>\n                        <artifactId>maven-gpg-plugin</artifactId>\n                        <version>${maven-gpg-plugin.version}</version>\n                        <configuration>\n                            <gpgArguments>\n                                <arg>--pinentry-mode</arg>\n                                <arg>loopback</arg>\n                            </gpgArguments>\n                        </configuration>\n\n                        <executions>\n                            <execution>\n                                <id>sign-artifacts</id>\n                                <phase>verify</phase>\n                                <goals>\n                                    <goal>sign</goal>\n                                </goals>\n                            </execution>\n                        </executions>\n                    </plugin>\n                </plugins>\n            </build>\n        </profile>\n        <profile>\n            <id>trimSnapshots</id>\n            <build>\n                <plugins>\n                    <plugin>\n                        <groupId>org.codehaus.mojo</groupId>\n                        <artifactId>build-helper-maven-plugin</artifactId>\n                        <version>${maven-build-helper-plugin.version}</version>\n                        <executions>\n                            <execution>\n                                <id>remove-old-artifacts</id>\n                                <phase>package</phase>\n                                <goals>\n                                    <goal>remove-project-artifact</goal>\n                                </goals>\n                                <configuration>\n                                    <removeAll>true\n                                    </removeAll><!-- remove all versions of built artifacts including all versions.  Install phase will regenerate -->\n                                </configuration>\n                            </execution>\n                            <execution>\n                                <id>get-cpu-count</id>\n                                <goals>\n                                    <goal>cpu-count</goal>\n                                </goals>\n                                <configuration>\n                                    <cpuCount>system.numCores</cpuCount>\n                                </configuration>\n                            </execution>\n                        </executions>\n                    </plugin>\n                </plugins>\n            </build>\n        </profile>\n        <profile>\n            <id>1.9build</id>\n            <activation>\n                <jdk>1.9</jdk>\n            </activation>\n            <properties>\n                <maven.compiler.release>7</maven.compiler.release>\n            </properties>\n            <build>\n                <plugins>\n                    <plugin>\n                        <groupId>org.apache.maven.plugins</groupId>\n                        <artifactId>maven-toolchains-plugin</artifactId>\n                        <version>3.1.0</version>\n                    </plugin>\n                </plugins>\n            </build>\n        </profile>\n        <profile>\n            <id>libnd4jhome-defined</id>\n            <activation>\n                <property>\n                    <name>env.LIBND4J_HOME</name>\n                </property>\n            </activation>\n            <properties>\n                <libnd4jhome>${env.LIBND4J_HOME}</libnd4jhome>\n            </properties>\n        </profile>\n        <profile>\n            <id>libnd4jhome-undefined</id>\n            <activation>\n                <property>\n                    <name>!env.LIBND4J_HOME</name>\n                </property>\n            </activation>\n            <properties>\n                <libnd4jhome>${basedir}/../../../../libnd4j/</libnd4jhome>\n            </properties>\n        </profile>\n\n        <profile>\n            <id>platform-tests</id>\n            <modules>\n                <module>platform-tests</module>\n            </modules>\n        </profile>\n\n\n        <!-- For Android: -Dplatform=android-arm -->\n        <profile>\n            <id>javacpp-platform-default</id>\n            <activation>\n                <property>\n                    <name>!javacpp.platform</name>\n                </property>\n            </activation>\n            <properties>\n                <javacpp.platform>${os.name}-${os.arch}</javacpp.platform>\n            </properties>\n        </profile>\n        <!-- Profiles to set the default javacpp.platform property: If someone knows a better way to do this, please do let me know! -->\n        <profile>\n            <id>linux</id>\n            <activation>\n                <os>\n                    <name>linux</name>\n                </os>\n            </activation>\n            <properties>\n                <os.kernel>linux</os.kernel>\n                <os.name>linux</os.name>\n            </properties>\n        </profile>\n        <profile>\n            <id>macosx</id>\n            <activation>\n                <os>\n                    <name>mac os x</name>\n                </os>\n            </activation>\n            <properties>\n                <os.kernel>darwin</os.kernel>\n                <os.name>macosx</os.name>\n            </properties>\n        </profile>\n        <profile>\n            <id>windows</id>\n            <activation>\n                <os>\n                    <family>windows</family>\n                </os>\n            </activation>\n            <properties>\n                <os.kernel>windows</os.kernel>\n                <os.name>windows</os.name>\n            </properties>\n        </profile>\n\n        <profile>\n            <id>arm</id>\n            <activation>\n                <os>\n                    <arch>arm</arch>\n                </os>\n            </activation>\n            <properties>\n                <os.arch>armhf</os.arch>\n            </properties>\n        </profile>\n\n        <profile>\n            <id>android</id>\n            <activation>\n                <os><name>android</name></os>\n            </activation>\n            <properties>\n                <os.kernel>linux</os.kernel>\n                <os.name>android</os.name>\n                <os.arch>arm</os.arch>\n            </properties>\n        </profile>\n\n        <profile>\n            <id>aarch64</id>\n            <activation>\n                <os>\n                    <arch>aarch64</arch>\n                </os>\n            </activation>\n            <properties>\n                <os.arch>arm64</os.arch>\n            </properties>\n        </profile>\n        <profile>\n            <id>armv8</id>\n            <activation>\n                <os>\n                    <arch>armv8</arch>\n                </os>\n            </activation>\n            <properties>\n                <os.arch>arm64</os.arch>\n            </properties>\n        </profile>\n        <profile>\n            <id>i386</id>\n            <activation>\n                <os>\n                    <arch>i386</arch>\n                </os>\n            </activation>\n            <properties>\n                <os.arch>x86_64</os.arch>\n            </properties>\n        </profile>\n        <profile>\n            <id>i486</id>\n            <activation>\n                <os>\n                    <arch>i486</arch>\n                </os>\n            </activation>\n            <properties>\n                <os.arch>x86_64</os.arch>\n            </properties>\n        </profile>\n        <profile>\n            <id>i586</id>\n            <activation>\n                <os>\n                    <arch>i586</arch>\n                </os>\n            </activation>\n            <properties>\n                <os.arch>x86_64</os.arch>\n            </properties>\n        </profile>\n        <profile>\n            <id>i686</id>\n            <activation>\n                <os>\n                    <arch>i686</arch>\n                </os>\n            </activation>\n            <properties>\n                <os.arch>x86_64</os.arch>\n            </properties>\n        </profile>\n        <profile>\n            <id>x86</id>\n            <activation>\n                <os>\n                    <arch>x86</arch>\n                </os>\n            </activation>\n            <properties>\n                <os.arch>x86_64</os.arch>\n            </properties>\n        </profile>\n        <profile>\n            <id>amd64</id>\n            <activation>\n                <os>\n                    <arch>amd64</arch>\n                </os>\n            </activation>\n            <properties>\n                <os.arch>x86_64</os.arch>\n            </properties>\n        </profile>\n        <profile>\n            <id>x86-64</id>\n            <activation>\n                <os>\n                    <arch>x86-64</arch>\n                </os>\n            </activation>\n            <properties>\n                <os.arch>x86_64</os.arch>\n            </properties>\n        </profile>\n\n    </profiles>\n</project>\n"
        },
        {
          "name": "post-release-tag.sh",
          "type": "blob",
          "size": 0.4775390625,
          "content": "#!/bin/bash\n\ngit commit -s -a -m \"Update to version $RELEASE_VERSION\"\ngit tag -s -a -m \"deeplearning4j-$RELEASE_VERSION\" \"deeplearning4j-$RELEASE_VERSION\"\ngit tag -s -a -f -m \"deeplearning4j-$RELEASE_VERSION\" \"latest_release\"\n\nbash ./update-versions.sh \"$RELEASE_VERSION\" \"$SNAPSHOT_VERSION\"\n\ngit commit -s -a -m \"Update to version $SNAPSHOT_VERSION\"\n\necho \"Successfully performed release of version $RELEASE_VERSION ($SNAPSHOT_VERSION) to repository $RELEASE_PROFILE $STAGING_REPOSITORY\"\n"
        },
        {
          "name": "publish-snapshots.sh",
          "type": "blob",
          "size": 1.0224609375,
          "content": "#!/bin/bash\n# See: https://docs.github.com/en/actions/managing-workflow-runs/manually-running-a-workflow\n# This just invokes the needed workflows with the default values (which mean snapshots)\n# This script usually will be used within a cron job.\n\ngh workflow run build-deploy-android-arm32.yml\ngh workflow run build-deploy-android-arm64.yml\ngh workflow run build-deploy-android-x86.yml\ngh workflow run build-deploy-android-x86_64.yml\ngh workflow run build-deploy-cross-platform.yml\ngh workflow run build-deploy-linux-cuda-10.2-arm64.yml\ngh workflow run build-deploy-linux-arm32.yml\ngh workflow run build-deploy-linux-arm64.yml\ngh workflow run build-deploy-linux-cuda-11.4.yml\ngh workflow run build-deploy-linux-cuda-11.6.yml\ngh workflow run build-deploy-linux-x86_64.yml\ngh workflow run build-deploy-linux-x86_64-compat.yml\ngh workflow run build-deploy-mac-arm64.yml\ngh workflow run build-deploy-mac.yml\ngh workflow run build-deploy-windows-cuda-11.4.yml\ngh workflow run build-deploy-windows-cuda-11.6.yml\ngh workflow run build-deploy-windows.yml"
        },
        {
          "name": "python4j",
          "type": "tree",
          "content": null
        },
        {
          "name": "release-specified-component.sh",
          "type": "blob",
          "size": 4.3359375,
          "content": "#!/bin/bash\n\n#\n# /* ******************************************************************************\n#  *\n#  *\n#  * This program and the accompanying materials are made available under the\n#  * terms of the Apache License, Version 2.0 which is available at\n#  * https://www.apache.org/licenses/LICENSE-2.0.\n#  *\n#  *  See the NOTICE file distributed with this work for additional\n#  *  information regarding copyright ownership.\n#  * Unless required by applicable law or agreed to in writing, software\n#  * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n#  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n#  * License for the specific language governing permissions and limitations\n#  * under the License.\n#  *\n#  * SPDX-License-Identifier: Apache-2.0\n#  ******************************************************************************/\n#\n\n\nif [[ $# < 2 ]]; then\n    echo \"Usage: bash release-specified-component.sh release_version snapshot_version [staging_repository]\"\n    exit 1\nfi\n\n\nRELEASE_VERSION=$1\nSNAPSHOT_VERSION=$2\n#STAGING_REPOSITORY=\nSTAGING_REPOSITORY=$3\n\nif [ -z \"$COMMAND\" ]; then\n  if [ -z \"$4\" ]; then\n    echo \"Please specify a command environment variable or a 4th parameter specifying the maven command.\"\n    exit 1\n    else\n        COMMAND=\"$4\"\n  fi\n\nfi\n\nDEPLOY_COMMAND=\"$COMMAND\"\nSTAGING_REPO_FLAG=\nRELEASE_PROFILE=${RELEASE_PROFILE:-sonatype}\nif [[ \"$2\" != *-SNAPSHOT ]]\nthen\n    echo \"Error: Version $SNAPSHOT_VERSION should finish with -SNAPSHOT\"\n    exit 1\nfi\n\necho \"Releasing version $RELEASE_VERSION ($SNAPSHOT_VERSION) to repository $RELEASE_PROFILE $STAGING_REPOSITORY\"\necho \"=========================================================================================================\"\n\n#if [[ ! -z $(git tag -l \"deeplearning4j-$RELEASE_VERSION\") ]]; then\n#    echo \"Error: Version $RELEASE_VERSION has already been released!\"\n#    exit 1\n#fi\n\nbash ./update-versions.sh \"$SNAPSHOT_VERSION\" \"$RELEASE_VERSION\"\n\n#    mvn clean deploy -Dgpg.executable=gpg2 -Prelease -Dlocal.software.repository=$RELEASE_PROFILE -Dmaven.test.skip -Dlibnd4j.cuda=8.0 -Denforcer.skip -DstagingRepositoryId=$STAGING_REPOSITORY\n# add flags specific to release, assumes an mvn deploy command is given\n# Note: we add javadoc fail on error here to avoid javadoc errors blocking a release\nunameOut=\"$(uname -s)\"\ncase \"${unameOut}\" in\n    Linux*)     machine=Linux;;\n    Darwin*)    machine=Mac;;\n    CYGWIN*)    machine=Cygwin;;\n    MINGW*)     machine=MinGw;;\n    *)          machine=\"UNKNOWN:${unameOut}\"\nesac\necho ${machine}\n\nif [[ \"${machine}\" == \"Mac\" ]]; then\n   echo \"Adding osx specific parameters for gpg signing\"\n   #DEPLOY_COMMAND=\"${DEPLOY_COMMAND}  -X  \"\nfi\n\nif [ -z \"${MODULES}\" ]; then export MODULES= ; fi\n\n\nDEPLOY_COMMAND=\"${DEPLOY_COMMAND}  ${MODULES} -Prelease  -Dlocal.software.repository=$RELEASE_PROFILE -Denforcer.skip -Dmaven.javadoc.failOnError=false -Ddl4j.release.server=ossrh\"\n\n #-DstagingRepositoryId=$STAGING_REPOSITORY\nif [[ -z ${STAGING_REPOSITORY:-} ]]; then\n    # create new staging repository with everything in it\n    if [[ ! $(grep stagingRepository.id target/nexus-staging/staging/*.properties) =~ ^stagingRepository.id=(.*) ]]; then\n        echo \"Setting empty staging repository\"\n        STAGING_REPOSITORY=\n        # note: the reason we set this is to ensure when bootstrapping a build we're not trying to download from a repo that doesn't exist\n        # this --also-make flag handles any transitive dependencies and uploads those. The reason this is important is if a build tries to upload\n        # an already existing dependency, sonatype nexus returns a 400 bad request. So we need deps that haven't already been uploaded.\n        # this is because repos are immutable by default, no overrides are allowed whereas for snapshots this is not the case.\n        STAGING_REPO_FLAG=\"\"\n    else\n        echo \"Using staging repository ${STAGING_REPOSITORY}\"\n        #STAGING_REPOSITORY=\"${BASH_REMATCH[1]}\"\n        #only specify a staging repo if it's not empty\n        STAGING_REPO_FLAG=\"-DstagingRepositoryId=${STAGING_REPOSITORY}\"\n    fi\n    else\n        STAGING_REPO_FLAG=\"-DstagingRepositoryId=${STAGING_REPOSITORY}\"\n        echo \"USING STAGING_REPOSITORY ${STAGING_REPOSITORY}, setting flag to ${STAGING_REPO_FLAG}\"\nfi\n\nDEPLOY_COMMAND=\"${DEPLOY_COMMAND} ${STAGING_REPO_FLAG}\"\necho \"RUNNING maven command ${DEPLOY_COMMAND}\"\neval \"$DEPLOY_COMMAND\"\n"
        },
        {
          "name": "resources",
          "type": "tree",
          "content": null
        },
        {
          "name": "troubleshooting",
          "type": "tree",
          "content": null
        },
        {
          "name": "update-versions.sh",
          "type": "blob",
          "size": 0.982421875,
          "content": "#!/bin/bash\nOLD_VERSION=$1\nVERSION=$2\nsed -i \"s/<nd4j.version>.*<\\/nd4j.version>/<nd4j.version>$VERSION<\\/nd4j.version>/\" pom.xml\nsed -i \"s/<datavec.version>.*<\\/datavec.version>/<datavec.version>$VERSION<\\/datavec.version>/\" pom.xml\nsed -i \"s/<dl4j.version>.*<\\/dl4j.version>/<dl4j.version>$VERSION<\\/dl4j.version>/\" pom.xml\nsed -i \"s/<deeplearning4j.version>.*<\\/deeplearning4j.version>/<deeplearning4j.version>$VERSION<\\/deeplearning4j.version>/\" pom.xml\nsed -i \"s/<dl4j-test-resources.version>.*<\\/dl4j-test-resources.version>/<dl4j-test-resources.version>$VERSION<\\/dl4j-test-resources.version>/\" pom.xml\n#Spark versions, like <version>xxx_spark_2-SNAPSHOT</version>\nfor f in $(find . -name 'pom.xml' -not -path '*target*'); do\n    sed -i \"s/version>.*_spark_.*</version>${VERSION}_spark_2</g\" $f\ndone\nmvn versions:set -DallowSnapshots=true -DgenerateBackupPoms=false -DnewVersion=\"$VERSION\"\n# back to a version stanza\nsed -i \"s/<version>$OLD_VERSION<\\/version>/<version>$VERSION<\\/version>/\" pom.xml\n"
        }
      ]
    }
  ]
}